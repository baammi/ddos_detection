source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805600c.2 = global i32 0
@global_var_8056024.3 = local_unnamed_addr global i32* @global_var_805600c.2
@global_var_8054fd4.5 = constant [4 x i8] c"GET\00"
@global_var_8054fad.6 = constant i32 1210056751
@global_var_8054fdf.7 = constant i32 540737568
@global_var_8054faf.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8054fc7.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_8054fe6.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8054fd8.11 = constant [9 x i8] c"Cookie: \00"
@global_var_8054fe1.12 = constant [3 x i8] c"; \00"
@global_var_8054fe4.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8054fe9.14 = constant i32 1952972859
@global_var_8054feb.15 = constant [5 x i8] c"http\00"
@global_var_8054ffa.16 = constant i32 -1623588825
@global_var_8054ff0.17 = constant [5 x i8] c"url=\00"
@global_var_8054ff5.18 = constant [5 x i8] c"POST\00"
@global_var_805506c.19 = constant i32 1461125181
@global_var_8056108.20 = local_unnamed_addr global i32 0
@global_var_8056114.21 = local_unnamed_addr global i32 0
@global_var_805610c.22 = local_unnamed_addr global i32 0
@global_var_8056110.23 = local_unnamed_addr global i32 0
@global_var_8056150.24 = local_unnamed_addr global i32 0
@global_var_805612a.25 = local_unnamed_addr global i32 0
@global_var_8056130.26 = local_unnamed_addr global i32 0
@global_var_8056120.27 = global i32 0
@global_var_8056138.29 = local_unnamed_addr global i32 0
@global_var_8056144.30 = local_unnamed_addr global i32 0
@global_var_8056134.31 = global i32 0
@global_var_805619c.32 = local_unnamed_addr global i32 0
@global_var_8056124.33 = local_unnamed_addr global i32 0
@global_var_805617c.34 = local_unnamed_addr global i32 0
@global_var_805612c.35 = local_unnamed_addr global i32 0
@global_var_8056198.36 = local_unnamed_addr global i32 0
@global_var_80554eb.37 = constant [5 x i8] c"ogin\00"
@global_var_80554f0.38 = constant [6 x i8] c"enter\00"
@global_var_80554f6.39 = constant [8 x i8] c"assword\00"
@global_var_8056118.41 = local_unnamed_addr global i32 0
@global_var_8056148.42 = local_unnamed_addr global i32 0
@global_var_80561c0.43 = global i32 0
@global_var_8056174.45 = global i32 0
@global_var_8056360.46 = global i32 0
@global_var_805603c.47 = global i32 0
@global_var_805640c.49 = global i32 0
@global_var_8056410.50 = local_unnamed_addr global i32 0
@global_var_8056414.51 = global i32 0
@global_var_8056420.52 = local_unnamed_addr global i32 0
@global_var_8056714.53 = global i32 0
@global_var_805673c.54 = local_unnamed_addr global i32 0
@global_var_805672c.55 = local_unnamed_addr global i32 0
@global_var_8056730.56 = local_unnamed_addr global i32 0
@global_var_8056734.57 = local_unnamed_addr global i32 0
@global_var_8056738.58 = local_unnamed_addr global i32 0
@global_var_8056744.59 = local_unnamed_addr global i32 0
@global_var_8056750.60 = local_unnamed_addr global i32 0
@global_var_8056748.61 = local_unnamed_addr global i32 0
@global_var_8056754.62 = local_unnamed_addr global i32 0
@global_var_8056728.63 = local_unnamed_addr global i32 0
@global_var_8056724.65 = local_unnamed_addr global i32 0
@global_var_805674c.66 = local_unnamed_addr global i32 0
@global_var_805641c.67 = local_unnamed_addr global i32 0
@global_var_8056054.68 = global i32 0
@global_var_805606c.70 = global i32 0
@global_var_8056158.71 = local_unnamed_addr global i32 0
@global_var_8056000.73 = global i32 -1
@global_var_8054549.74 = constant i32 -294069
@global_var_8056168.75 = local_unnamed_addr global i32 0
@global_var_805616c.76 = local_unnamed_addr global i32 0
@global_var_8055cb4.77 = constant [10 x i8] c"/dev/null\00"
@global_var_8056164.79 = local_unnamed_addr global i32 0
@global_var_805615c.80 = local_unnamed_addr global i32 0
@global_var_8056160.81 = local_unnamed_addr global i32 0
@global_var_8055dc0.83 = constant i32 33554944
@global_var_805472f.84 = constant i32 1928542531
@global_var_8054753.85 = constant i32 1928542531
@global_var_8056178.86 = local_unnamed_addr global i32 0
@global_var_8056088.87 = local_unnamed_addr global i32* @global_var_8055dc0.83
@global_var_8056758.88 = local_unnamed_addr global i32 0
@global_var_805675c.89 = local_unnamed_addr global i32 0
@global_var_80560a0.1 = local_unnamed_addr global i8 0
@global_var_8056136.28 = local_unnamed_addr global i16 0
@global_var_805614c.40 = local_unnamed_addr global i16 0
@global_var_8056038.44 = local_unnamed_addr global i16 -16657
@global_var_80563e0.48 = global i8 0
@global_var_8056740.64 = local_unnamed_addr global i8 0
@global_var_8056154.69 = local_unnamed_addr global i8 0
@global_var_8056170.78 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 57207
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054f50()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_80560a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80560a0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8056024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80560a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134569920)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134570000 to i32*), align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* %ecx.global-to-local, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_80545e5(i32 134538624, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134565750, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134565750, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134565750, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_8054fd4.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp138 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp138, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_8054fad.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_8052c3a(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp240 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8052110(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8052110(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8052110(i8* %tmp240)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5214 = call i32 @function_8052110(i8* %tmp240)
  store i32 %v2_80482a5214, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4215 = icmp eq i32 %v2_80482a5214, 0
  store i1 %v12_80482b4215, i1* %zf.global-to-local, align 1
  %v7_80482b6216 = icmp sgt i32 %v2_80482a5214, 0
  br i1 %v7_80482b6216, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0219 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be218 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8217 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp240, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be218, %v4_80482a0219
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be218, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8217, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be218, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8052110(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_80517c0(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_80517c0(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_80517c0(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_80517c0(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_80517c0(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_80517c0(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_80517c0(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_80517c0(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_80517c0(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_80517c0(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_80517c0(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_80537b8(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp139, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d6 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d6, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d6 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8052130(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8052110(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_8052c13(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8052130(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8052130(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8052130(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp241, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v1_8048463 = call i32 @function_804ed40(i32 %v1_804839d6)
  store i32 %v1_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp245 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp245, 0
  br i1 %v4_8048478, label %bb140, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp245 to i32
  %v5_8048478 = lshr i32 %v1_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v1_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb140
  %v1_804848a = call i32 @function_804ed40(i32 %v1_804839d6)
  %v2_804848a = sext i32 %v1_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v1_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v2_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v0_80484ea = call i32 @function_8052972()
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v0_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp141, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_80526b1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_80526b1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v4_8048608 = call i32 @function_8052ea5(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v4_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v4_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v4_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_80525ed(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_80525ed(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v0_8048664 = call i32 @function_8052e6a()
  store i32 %v0_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_8052cca(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_80521a0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_80521a0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054fdf.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_8054faf.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054fc7.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_80517c0(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051740(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_80517c0(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051740(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_80517c0(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051740(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_80517c0(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051740(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8054fdf.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v0_8048aab = call i32 @function_8052520()
  store i32 %v0_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp142, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054fd8.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp143, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe1.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8052480()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8052110(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_8052df4()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp242, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_80528b8()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v0_8048d2d = call i32 @function_8052972()
  store i32 %v0_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v0_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp144, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_8052d20()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_80526b1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_80521a0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_8052d7e()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp145, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054fe4.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_80521c0()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054fe4.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_80521c0()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v0_8048f1e = call i32 @function_8052400()
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v0_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v0_8048f4f = call i32 @function_8052400()
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v0_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v0_8048f8b = call i32 @function_8052400()
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v0_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v0_8048fb6 = call i32 @function_8052400()
  store i32 %v0_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v0_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v0_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_80521c0()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v0_804902d = call i32 @function_8052400()
  store i32 %v0_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v0_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v0_804906b = call i32 @function_8052400()
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v0_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v0_8049096 = call i32 @function_8052400()
  store i32 %v0_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v0_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v0_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_80521c0()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v0_804910d = call i32 @function_8052400()
  store i32 %v0_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v0_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v0_8049140 = call i32 @function_8052400()
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v0_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v0_804916b = call i32 @function_8052400()
  store i32 %v0_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v0_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v0_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_80521c0()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8052210(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge7 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge7, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v0_80491fe = call i32 @function_8052400()
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v0_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v0_8049230 = call i32 @function_8052400()
  store i32 %v0_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v0_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_80521c0()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_8054fe9.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_80521c0()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp146, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_8054fe9.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_80521c0()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp147 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp147, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_80524d0()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v0_80493ee = call i32 @function_8052400()
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v0_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v0_8049419 = call i32 @function_8052400()
  store i32 %v0_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v0_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v0_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_80521c0()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054feb.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_80521c0()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_8052be9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_8052d7e()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_8052c13(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v3_80495d1, 1
  %tmp149 = icmp eq i1 %tmp148, false
  br i1 %tmp149, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_8052c13(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_80521c0()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_80521c0()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_8054ffa.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_80521c0()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_80521c0()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_80521c0()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_8054fe9.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_80521c0()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_8054fe9.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_80521c0()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8052210(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_8052be9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_8052d7e()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_80526b1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v0_8049870 = call i32 @function_8052400()
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v0_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8051710(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v0_804989b = call i32 @function_8052400()
  store i32 %v0_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v0_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v0_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_80521c0()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp243 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp243, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp244 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp244, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054ff0.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v0_8049977 = call i32 @function_8052400()
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v0_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054ff0.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v0_80499ab = call i32 @function_8052400()
  store i32 %v0_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v0_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8052210(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00188 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00188, i1* %zf.global-to-local, align 1
  %v2_8049a03190 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03190, align 4
  %v0_8049a05191 = call i32 @function_8052972()
  store i32 %v0_8049a05191, i32* %eax.global-to-local, align 4
  %v0_8049a0a192 = load i32, i32* @esp, align 4
  %v1_8049a0a193 = add i32 %v0_8049a0a192, 16
  %v1_8049a0d194 = load i32, i32* @ebx, align 4
  %v7_8049a0d195 = icmp ult i32 %v0_8049a05191, %v1_8049a0d194
  %v12_8049a0d196 = icmp eq i32 %v0_8049a05191, %v1_8049a0d194
  store i1 %v12_8049a0d196, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d195, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a197 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a192, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a197, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a197 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v0_80499f8 = call i32 @function_8054260()
  store i32 %v0_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v0_8049a05 = call i32 @function_8052972()
  store i32 %v0_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v0_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v0_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a193, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054feb.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v0_8049a2f = call i32 @function_8052400()
  store i32 %v0_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v0_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054fe4.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_80521c0()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8054ff5.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8052480()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_8052d7e()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_8052c13(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76174 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76174, i32* %ecx.global-to-local, align 4
  %v2_8049b79175 = add i32 %v0_8049b54, 20916
  %v3_8049b79176 = inttoptr i32 %v2_8049b79175 to i32*
  store i32 1, i32* %v3_8049b79176, align 4
  %v0_8049b80177 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80178 = inttoptr i32 %v0_8049b80177 to i8*
  %v2_8049b80179 = load i8, i8* %v1_8049b80178, align 1
  %v3_8049b80180 = zext i8 %v2_8049b80179 to i32
  %v4_8049b80181 = load i32, i32* @edx, align 4
  %v5_8049b80182 = and i32 %v4_8049b80181, -256
  %v6_8049b80183 = or i32 %v5_8049b80182, %v3_8049b80180
  store i32 %v6_8049b80183, i32* %edx.global-to-local, align 4
  %v4_8049b82184 = icmp eq i8 %v2_8049b80179, 0
  store i1 %v4_8049b82184, i1* %zf.global-to-local, align 1
  %v1_8049b84185 = icmp eq i1 %v4_8049b82184, false
  br i1 %v1_8049b84185, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80187 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80179, %dec_label_pc_8049b65 ]
  %v0_8049b80186 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80177, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80187, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp150, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_80521a0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp151, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8054fd4.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8052480()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80186, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_80521a0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp152, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb210, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp153 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp153, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_80521a0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp154 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp154, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_805506c.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_8054ffa.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_80521c0()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8052130(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_8052c13(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1198 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1198, i32* %ecx.global-to-local, align 4
  %v2_8049ed4199 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4200 = inttoptr i32 %v2_8049ed4199 to i32*
  store i32 1, i32* %v3_8049ed4200, align 4
  %v0_8049edb201 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb202 = inttoptr i32 %v0_8049edb201 to i8*
  %v2_8049edb203 = load i8, i8* %v1_8049edb202, align 1
  %v3_8049edb204 = zext i8 %v2_8049edb203 to i32
  %v4_8049edb205 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb206 = and i32 %v4_8049edb205, -256
  %v6_8049edb207 = or i32 %v5_8049edb206, %v3_8049edb204
  store i32 %v6_8049edb207, i32* %edx.global-to-local, align 4
  %v4_8049edd208 = icmp eq i8 %v2_8049edb203, 0
  store i1 %v4_8049edd208, i1* %zf.global-to-local, align 1
  %v1_8049edf209 = icmp eq i1 %v4_8049edd208, false
  br i1 %v1_8049edf209, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb211 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb203, %dec_label_pc_8049ec0 ]
  %v0_8049edb210 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb201, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb211, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8052110(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_80517c0(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8051710(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8052130(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051740(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8052130(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_80517c0(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8051710(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8052130(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051740(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_80517c0(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8051710(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8052130(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051740(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_80517c0(i8 118)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8051710(i32 134565750, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8052130(i8* inttoptr (i32 134565750 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051740(i8 118)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 5, 0, 1, 4, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_8048bde, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v4_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 23, 22, 26, 5, 4, 3, 2, 1, 0, 32, 31, 30, 29, 28, 27, 13, 12, 14, 18, 17, 20, 19, 16, 15, 25, 24, 33, 21, 60, 6, 8, 7, 36, 35, 34, 11, 10, 9, 59, 57, 58, 61, 62, 53, 54, 49, 50, 51, 52, 55, 56, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 %stack_var_-20924.0.ph, { 12, 15, 14, 11, 10, 26, 25, 24, 23, 22, 13, 9, 16, 8, 17, 7, 19, 18, 6, 21, 20, 5, 4, 3, 1, 2, 39, 38, 37, 36, 35, 32, 31, 29, 28, 27, 0, 30, 40, 34, 33 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp245, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp240, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, {}
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 7, 8, 9, 4, 33, 11, 10, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 6, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 99, 100, 101, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 175, 176, 177, 79, 80, 81, 82, 83, 84, 86, 90, 87, 88, 89, 85, 91, 92, 93, 94, 95, 96, 97, 98, 151, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 171, 5, 173, 174 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 8, 3, 9, 10, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 4, 5, 23, 33, 24, 25, 26, 27, 28, 29, 35, 60, 61, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 42, 43, 46, 47, 48, 121, 49, 50, 51, 52, 53, 55, 56, 54, 57, 58, 59, 109, 110, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 434, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 36, 37, 38, 39, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 104, 500, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 150, 151, 163, 164, 152, 153, 154, 155, 166, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 210, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 221, 222, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 493, 494, 495, 496, 497, 498, 499, 501, 502, 516, 517, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 238, 240, 241, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 266, 267, 263, 264, 265, 259, 260, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 406, 407, 411, 408, 409, 410, 412, 413, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 454, 455, 456, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 427, 428, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 482, 449, 450, 451, 452, 453, 483, 484, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 474, 475, 0, 1, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492 }
  uselistorder i32 ()* @function_8052400, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2, 1, 0, 6, 5 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_8052480, { 2, 1, 0 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 7, { 3, 1, 2, 0 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 (i8*, i32)* @function_8052130, { 0, 1, 2, 4, 3, 6, 7, 8, 9, 5, 10, 11, 12, 13, 37, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8054fd4.5 to i32), { 1, 0 }
  uselistorder i32 134565750, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_8052210(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804d4b0() local_unnamed_addr {
dec_label_pc_804d4b0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d4b7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d4d5, label %dec_label_pc_804d4c0

dec_label_pc_804d4c0:                             ; preds = %dec_label_pc_804d4b0, %dec_label_pc_804d4c0
  %v0_804d4ce = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4c0 ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4c3 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4c0 ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v0_804d4cb = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4c0 ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v1_804d4c0 = inttoptr i32 %v0_804d4cb to i16*
  %v2_804d4c0 = load i16, i16* %v1_804d4c0, align 2
  %v3_804d4c0 = zext i16 %v2_804d4c0 to i32
  %v1_804d4c3 = add i32 %v0_804d4c3, -2
  %v1_804d4cb = add i32 %v0_804d4cb, 2
  %v2_804d4ce = add i32 %v3_804d4c0, %v0_804d4ce
  %v5_804d4d0 = icmp eq i32 %v1_804d4c3, 0
  %v9_804d4d0 = icmp eq i32 %v0_804d4c3, 3
  %v2_804d4d3 = or i1 %v9_804d4d0, %v5_804d4d0
  br i1 %v2_804d4d3, label %dec_label_pc_804d4d5.loopexit, label %dec_label_pc_804d4c0

dec_label_pc_804d4d5.loopexit:                    ; preds = %dec_label_pc_804d4c0
  br label %dec_label_pc_804d4d5

dec_label_pc_804d4d5:                             ; preds = %dec_label_pc_804d4d5.loopexit, %dec_label_pc_804d4b0
  %v0_804d4db = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4d5.loopexit ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4d8 = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4d5.loopexit ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v0_804d4d5 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4d5.loopexit ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v8_804d4d5 = icmp eq i32 %v0_804d4d5, 1
  %v1_804d4d6 = icmp eq i1 %v8_804d4d5, false
  br i1 %v1_804d4d6, label %dec_label_pc_804d4dd, label %dec_label_pc_804d4d8

dec_label_pc_804d4d8:                             ; preds = %dec_label_pc_804d4d5
  %v1_804d4d8 = inttoptr i32 %v0_804d4d8 to i8*
  %v2_804d4d8 = load i8, i8* %v1_804d4d8, align 1
  %v3_804d4d8 = sext i8 %v2_804d4d8 to i32
  %v2_804d4db = add i32 %v3_804d4d8, %v0_804d4db
  br label %dec_label_pc_804d4dd

dec_label_pc_804d4dd:                             ; preds = %dec_label_pc_804d4d5, %dec_label_pc_804d4d8
  %v0_804d4dd = phi i32 [ %v0_804d4db, %dec_label_pc_804d4d5 ], [ %v2_804d4db, %dec_label_pc_804d4d8 ]
  %v1_804d4df = urem i32 %v0_804d4dd, 65536
  %v2_804d4e2 = udiv i32 %v0_804d4dd, 65536
  %v2_804d4e6 = add nuw nsw i32 %v1_804d4df, %v2_804d4e2
  %v2_804d4ea = udiv i32 %v2_804d4e6, 65536
  %v2_804d4ed = add nuw nsw i32 %v2_804d4ea, %v2_804d4e6
  %v1_804d4ef = urem i32 %v2_804d4ed, 65536
  %v1_804d4f2 = xor i32 %v1_804d4ef, 65535
  ret i32 %v1_804d4f2

; uselistorder directives
  uselistorder i32 %v2_804d4e6, { 1, 0 }
  uselistorder i32 %v0_804d4db, { 1, 0 }
  uselistorder i32 %v1_804d4c3, { 0, 2, 1 }
  uselistorder i32 %v4_804d4b7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d4dd, { 1, 0 }
  uselistorder label %dec_label_pc_804d4c0, { 1, 0 }
}

define i32 @function_804d500() local_unnamed_addr {
dec_label_pc_804d500:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d515 = ptrtoint i16* %tmp14 to i32
  %v1_804d51e = add i32 %tmp17, 12
  %v2_804d51e = inttoptr i32 %v1_804d51e to i32*
  %v3_804d51e = load i32, i32* %v2_804d51e, align 4
  %v1_804d521 = add i32 %tmp17, 16
  %v2_804d521 = inttoptr i32 %v1_804d521 to i32*
  %v3_804d521 = load i32, i32* %v2_804d521, align 4
  %v7_804d527 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d527, label %dec_label_pc_804d530, label %dec_label_pc_804d545

dec_label_pc_804d530:                             ; preds = %dec_label_pc_804d500, %dec_label_pc_804d530
  %v0_804d53e = phi i32 [ %v2_804d53e, %dec_label_pc_804d530 ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d533 = phi i32 [ %v1_804d533, %dec_label_pc_804d530 ], [ %tmp16, %dec_label_pc_804d500 ]
  %v0_804d53b = phi i32 [ %v1_804d53b, %dec_label_pc_804d530 ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v1_804d530 = inttoptr i32 %v0_804d53b to i16*
  %v2_804d530 = load i16, i16* %v1_804d530, align 2
  %v3_804d530 = zext i16 %v2_804d530 to i32
  %v1_804d533 = add i32 %v0_804d533, -2
  %v1_804d53b = add i32 %v0_804d53b, 2
  %v2_804d53e = add i32 %v3_804d530, %v0_804d53e
  %v1_804d540 = add i32 %v0_804d533, -3
  %v6_804d540 = sub i32 2, %v0_804d533
  %v7_804d540 = and i32 %v1_804d533, %v6_804d540
  %v8_804d540 = icmp slt i32 %v7_804d540, 0
  %v9_804d540 = icmp eq i32 %v1_804d540, 0
  %v10_804d540 = icmp slt i32 %v1_804d540, 0
  %v3_804d543 = icmp eq i1 %v10_804d540, %v8_804d540
  %v4_804d543 = icmp eq i1 %v9_804d540, false
  %v5_804d543 = and i1 %v4_804d543, %v3_804d543
  br i1 %v5_804d543, label %dec_label_pc_804d530, label %dec_label_pc_804d545.loopexit

dec_label_pc_804d545.loopexit:                    ; preds = %dec_label_pc_804d530
  br label %dec_label_pc_804d545

dec_label_pc_804d545:                             ; preds = %dec_label_pc_804d545.loopexit, %dec_label_pc_804d500
  %v0_804d5b0 = phi i32 [ %v2_804d53e, %dec_label_pc_804d545.loopexit ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d5ae = phi i32 [ %v1_804d53b, %dec_label_pc_804d545.loopexit ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v0_804d545 = phi i32 [ %v1_804d533, %dec_label_pc_804d545.loopexit ], [ %tmp16, %dec_label_pc_804d500 ]
  %v8_804d545 = icmp eq i32 %v0_804d545, 1
  br i1 %v8_804d545, label %dec_label_pc_804d5ac, label %dec_label_pc_804d548

dec_label_pc_804d548:                             ; preds = %dec_label_pc_804d545, %dec_label_pc_804d5ac
  %v0_804d556 = phi i32 [ %v0_804d5b0, %dec_label_pc_804d545 ], [ %v2_804d5b0, %dec_label_pc_804d5ac ]
  %v2_804d54c = udiv i32 %v3_804d521, 65536
  %v1_804d54f = add i32 %tmp17, 9
  %v2_804d54f = inttoptr i32 %v1_804d54f to i8*
  %v3_804d54f = load i8, i8* %v2_804d54f, align 1
  %v1_804d552 = zext i8 %v3_804d54f to i16
  %v2_804d552 = call i16 @llvm.bswap.i16(i16 %v1_804d552)
  %v3_804d552 = zext i16 %v2_804d552 to i32
  %v2_804d556 = add i32 %v0_804d556, %v2_804d54c
  %v2_804d55e = add i32 %v2_804d556, %v3_804d552
  %v1_804d564 = urem i32 %v3_804d51e, 65536
  %v2_804d56a = udiv i32 %v3_804d51e, 65536
  %v1_804d571 = urem i32 %v3_804d521, 65536
  %v4_804d579 = zext i16 %tmp15 to i32
  %v2_804d56d = add nuw nsw i32 %v2_804d56a, %v4_804d579
  %v2_804d577 = add nuw nsw i32 %v2_804d56d, %v1_804d564
  %v2_804d584 = add nuw nsw i32 %v2_804d577, %v1_804d571
  %v2_804d586 = add i32 %v2_804d584, %v2_804d55e
  %tmp = icmp ult i32 %v2_804d586, 65536
  br i1 %tmp, label %dec_label_pc_804d59e, label %dec_label_pc_804d590

dec_label_pc_804d590:                             ; preds = %dec_label_pc_804d548, %dec_label_pc_804d590
  %v2_804d5953 = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994.in = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994 = udiv i32 %v2_804d5994.in, 65536
  %v1_804d590 = urem i32 %v2_804d5953, 65536
  %v2_804d595 = add nuw nsw i32 %v1_804d590, %v2_804d5994
  %tmp25 = icmp ult i32 %v2_804d595, 65536
  %v1_804d59c = icmp eq i1 %tmp25, false
  br i1 %v1_804d59c, label %dec_label_pc_804d590, label %dec_label_pc_804d59e.loopexit

dec_label_pc_804d59e.loopexit:                    ; preds = %dec_label_pc_804d590
  br label %dec_label_pc_804d59e

dec_label_pc_804d59e:                             ; preds = %dec_label_pc_804d59e.loopexit, %dec_label_pc_804d548
  %v0_804d59e = phi i32 [ %v2_804d595, %dec_label_pc_804d59e.loopexit ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v1_804d59e = urem i32 %v0_804d59e, 65536
  %v1_804d5a2 = xor i32 %v1_804d59e, 65535
  ret i32 %v1_804d5a2

dec_label_pc_804d5ac:                             ; preds = %dec_label_pc_804d545
  %v1_804d5ae = inttoptr i32 %v0_804d5ae to i8*
  %v2_804d5ae = load i8, i8* %v1_804d5ae, align 1
  %v3_804d5ae = zext i8 %v2_804d5ae to i32
  %v2_804d5b0 = add i32 %v3_804d5ae, %v0_804d5b0
  br label %dec_label_pc_804d548

; uselistorder directives
  uselistorder i32 %v2_804d595, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d586, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d540, { 1, 0 }
  uselistorder i32 %v1_804d533, { 0, 2, 1 }
  uselistorder i32 %v3_804d521, { 1, 0 }
  uselistorder i32 %v4_804d515, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d590, { 1, 0 }
  uselistorder label %dec_label_pc_804d548, { 1, 0 }
  uselistorder label %dec_label_pc_804d530, { 1, 0 }
}

define i32 @function_804ed40(i32 %arg1) local_unnamed_addr {
dec_label_pc_804ed40:
  %v0_804ed40 = load i32, i32* @global_var_8056108.20, align 8
  %v0_804ed48 = load i32, i32* @global_var_8056114.21, align 4
  %v2_804ed4e = mul i32 %v0_804ed40, 2048
  %v2_804ed53 = udiv i32 %v0_804ed48, 524288
  store i32 %v2_804ed53, i32* @ecx, align 4
  %v2_804ed56 = xor i32 %v2_804ed4e, %v0_804ed40
  %v0_804ed58 = load i32, i32* @global_var_805610c.22, align 4
  store i32 %v0_804ed58, i32* @global_var_8056108.20, align 8
  %v0_804ed62 = load i32, i32* @global_var_8056110.23, align 16
  store i32 %v0_804ed62, i32* @global_var_805610c.22, align 4
  store i32 %v0_804ed48, i32* @global_var_8056110.23, align 16
  %v2_804ed74 = xor i32 %v2_804ed53, %v0_804ed48
  %v2_804ed76 = udiv i32 %v2_804ed56, 256
  %v2_804ed79 = xor i32 %v2_804ed76, %v2_804ed56
  %v2_804ed7b = xor i32 %v2_804ed79, %v2_804ed74
  store i32 %v2_804ed7b, i32* @global_var_8056114.21, align 4
  ret i32 %v2_804ed7b

; uselistorder directives
  uselistorder i32 %v2_804ed56, { 1, 0 }
  uselistorder i32 %v2_804ed53, { 1, 0 }
  uselistorder i32 %v0_804ed48, { 1, 2, 0 }
  uselistorder i32 %v0_804ed40, { 1, 0 }
}

define i32 @function_804efd0() local_unnamed_addr {
dec_label_pc_804efd0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %v0_804efd0 = load i32, i32* @ebx, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v1_804efd8 = icmp eq i32 %tmp, 0
  br i1 %v1_804efd8, label %dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge, label %dec_label_pc_804efdc

dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge: ; preds = %dec_label_pc_804efd0
  br label %dec_label_pc_804f000

dec_label_pc_804efdc:                             ; preds = %dec_label_pc_804efd0
  %v1_804efdc = add i32 %tmp, 4
  %v2_804efdc = inttoptr i32 %v1_804efdc to i32*
  %v3_804efdc = load i32, i32* %v2_804efdc, align 4
  %v1_804efdf = icmp eq i32 %v3_804efdc, 0
  br i1 %v1_804efdf, label %dec_label_pc_804efef, label %dec_label_pc_804efe3

dec_label_pc_804efe3:                             ; preds = %dec_label_pc_804efdc
  %v1_804efe7 = call i32 @function_8053e09(i32 %v3_804efdc)
  br label %dec_label_pc_804efef

dec_label_pc_804efef:                             ; preds = %dec_label_pc_804efdc, %dec_label_pc_804efe3
  store i32 %v0_804efd0, i32* @ebx, align 4
  %v1_804eff6 = call i32 @function_8053e09(i32 %tmp)
  %v2_804f000.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f000

dec_label_pc_804f000:                             ; preds = %dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge, %dec_label_pc_804efef
  %v2_804f000 = phi i32 [ %tmp12, %dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge ], [ %v2_804f000.pre, %dec_label_pc_804efef ]
  store i32 %v0_804efd0, i32* @ebx, align 4
  ret i32 %v2_804f000

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804f000, { 1, 0 }
  uselistorder label %dec_label_pc_804efef, { 1, 0 }
}

define i32 @function_804f010() local_unnamed_addr {
dec_label_pc_804f010:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp92 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-2207 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_804f01c = ptrtoint i8* %tmp92 to i32
  store i32 %v4_804f01c, i32* @ebx, align 4
  %v4_804f027 = call i32 @function_80537b8(i64 1, i32 8)
  %v2_804f030 = ptrtoint i32* %stack_var_-2208 to i32
  store i32 %v2_804f030, i32* %eax.global-to-local, align 4
  %tmp104 = bitcast i32* %stack_var_-2208 to i8*
  %v0_804f03b = load i32, i32* @ebx, align 4
  %v4_804f03b = inttoptr i32 %v0_804f03b to i8*
  %v3_804f03e = call i32 @function_8052110(i8* %v4_804f03b)
  %v2_804f043 = ptrtoint i32* %stack_var_-2207 to i32
  store i32 %v2_804f043, i32* %ecx.global-to-local, align 4
  store i32 %v2_804f030, i32* %edi.global-to-local, align 4
  %v1_804f04e = add i32 %v3_804f03e, 1
  store i32 %v1_804f04e, i32* %eax.global-to-local, align 4
  %tmp105 = icmp slt i32 %v1_804f04e, 1
  br i1 %tmp105, label %dec_label_pc_804f07a, label %dec_label_pc_804f062.lr.ph

dec_label_pc_804f062.lr.ph:                       ; preds = %dec_label_pc_804f010
  %v0_804f062.pre = load i32, i32* @ebx, align 4
  %v4_804f062.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f062

dec_label_pc_804f054:                             ; preds = %dec_label_pc_804f069
  %v3_804f054 = inttoptr i32 %v2_804f054 to i8*
  store i8 %v2_804f062, i8* %v3_804f054, align 1
  %v0_804f056 = load i32, i32* @esi, align 4
  %v1_804f056 = add i32 %v0_804f056, 1
  store i32 %v1_804f056, i32* @esi, align 4
  %v0_804f057 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f057 = add i32 %v0_804f057, 1
  store i32 %v1_804f057, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f05a

dec_label_pc_804f05a:                             ; preds = %dec_label_pc_804f06d, %dec_label_pc_804f054
  %v0_804f05c = phi i32 [ %v1_804f073, %dec_label_pc_804f06d ], [ %v1_804f057, %dec_label_pc_804f054 ]
  %v0_804f05a = load i32, i32* @ebx, align 4
  %v1_804f05a = add i32 %v0_804f05a, 1
  store i32 %v1_804f05a, i32* @ebx, align 4
  %v0_804f05b = load i32, i32* %eax.global-to-local, align 4
  %v1_804f05b = add i32 %v0_804f05b, -1
  store i32 %v1_804f05b, i32* %eax.global-to-local, align 4
  store i32 %v0_804f05c, i32* %ecx.global-to-local, align 4
  %tmp106 = icmp slt i32 %v1_804f05b, 1
  br i1 %tmp106, label %dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge, label %dec_label_pc_804f062

dec_label_pc_804f062:                             ; preds = %dec_label_pc_804f062.lr.ph, %dec_label_pc_804f05a
  %v2_804f054 = phi i32 [ %v2_804f043, %dec_label_pc_804f062.lr.ph ], [ %v0_804f05c, %dec_label_pc_804f05a ]
  %v4_804f062 = phi i32 [ %v4_804f062.pre, %dec_label_pc_804f062.lr.ph ], [ %v0_804f05c, %dec_label_pc_804f05a ]
  %v0_804f062 = phi i32 [ %v0_804f062.pre, %dec_label_pc_804f062.lr.ph ], [ %v1_804f05a, %dec_label_pc_804f05a ]
  %v1_804f062 = inttoptr i32 %v0_804f062 to i8*
  %v2_804f062 = load i8, i8* %v1_804f062, align 1
  %v3_804f062 = zext i8 %v2_804f062 to i32
  %v5_804f062 = and i32 %v4_804f062, -256
  %v6_804f062 = or i32 %v3_804f062, %v5_804f062
  store i32 %v6_804f062, i32* %edx.global-to-local, align 4
  %v10_804f064 = icmp eq i8 %v2_804f062, 46
  br i1 %v10_804f064, label %dec_label_pc_804f06d, label %dec_label_pc_804f069

dec_label_pc_804f069:                             ; preds = %dec_label_pc_804f062
  %v4_804f069 = icmp eq i8 %v2_804f062, 0
  %v1_804f06b = icmp eq i1 %v4_804f069, false
  br i1 %v1_804f06b, label %dec_label_pc_804f054, label %dec_label_pc_804f06d

dec_label_pc_804f06d:                             ; preds = %dec_label_pc_804f069, %dec_label_pc_804f062
  %v0_804f06d = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f071 = trunc i32 %v0_804f06d to i8
  %v2_804f071 = load i32, i32* %edi.global-to-local, align 4
  %v3_804f071 = inttoptr i32 %v2_804f071 to i8*
  store i8 %v1_804f071, i8* %v3_804f071, align 1
  %v0_804f073 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f073 = add i32 %v0_804f073, 1
  store i32 %v1_804f073, i32* %edx.global-to-local, align 4
  store i32 %v0_804f073, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f05a

dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge: ; preds = %dec_label_pc_804f05a
  br label %dec_label_pc_804f07a

dec_label_pc_804f07a:                             ; preds = %dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge, %dec_label_pc_804f010
  %v0_804f07d = phi i32 [ %v0_804f05c, %dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge ], [ %v2_804f043, %dec_label_pc_804f010 ]
  %v1_804f07d = inttoptr i32 %v0_804f07d to i8*
  store i8 0, i8* %v1_804f07d, align 1
  store i32 %v2_804f030, i32* %eax.global-to-local, align 4
  %v3_804f085 = call i32 @function_8052110(i8* %tmp104)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_804f099 = add i32 %v3_804f085, %v2_804f030
  store i32 %v2_804f099, i32* @edi, align 4
  %v1_804f0bd = add i32 %v2_804f099, 1
  store i32 %v1_804f0bd, i32* @ebx, align 4
  store i32 %v2_804f030, i32* %eax.global-to-local, align 4
  %v3_804f0c5 = call i32 @function_8052110(i8* %tmp104)
  %v1_804f0ca = add i32 %v3_804f0c5, 17
  store i32 %v1_804f0ca, i32* %eax.global-to-local, align 4
  %v1_804f0d1 = call i32 @function_804ed40(i32 %v1_804f0ca)
  %v2_804f0df = udiv i32 %v1_804f0d1, 65535
  store i32 %v2_804f0df, i32* %edx.global-to-local, align 4
  %v2_804f0e981 = add i32 %v2_804f0df, %v1_804f0d1
  store i32 %v2_804f0e981, i32* @esi, align 4
  store i32 8, i32* @eax, align 4
  store i32 -1, i32* %ebp.global-to-local, align 4
  %v2_804f0f9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f0f9, i32* %ecx.global-to-local, align 4
  %v3_804f101 = call i32 @function_80521a0(i32 %v2_804f0f9, i32 16)
  store i32 %v3_804f101, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_804f149 = load i32, i32* @edi, align 4
  %v1_804f149 = add i32 %v0_804f149, 1
  %v2_804f149 = inttoptr i32 %v1_804f149 to i16*
  store i16 256, i16* %v2_804f149, align 2
  %v0_804f152 = load i32, i32* @ebx, align 4
  %v1_804f152 = add i32 %v0_804f152, 2
  %v2_804f152 = inttoptr i32 %v1_804f152 to i16*
  store i16 256, i16* %v2_804f152, align 2
  %v0_804f158 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804f158 = icmp eq i32 %v0_804f158, -1
  br i1 %v10_804f158, label %dec_label_pc_804f16c.preheader, label %dec_label_pc_804f160

dec_label_pc_804f160.loopexit:                    ; preds = %dec_label_pc_804f285
  %v0_804f163.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f160

dec_label_pc_804f160:                             ; preds = %dec_label_pc_804f160.loopexit, %dec_label_pc_804f07a
  %v0_804f163 = phi i32 [ %v0_804f163.pre, %dec_label_pc_804f160.loopexit ], [ %v0_804f158, %dec_label_pc_804f07a ]
  %v0_804f160 = load i32, i32* @esp, align 4
  %v2_804f163 = add i32 %v0_804f160, -16
  %v3_804f163 = inttoptr i32 %v2_804f163 to i32*
  store i32 %v0_804f163, i32* %v3_804f163, align 4
  %v1_804f164 = call i32 @function_80526b1(i32 1)
  store i32 %v1_804f164, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f16c.preheader

dec_label_pc_804f16c.preheader:                   ; preds = %dec_label_pc_804f160, %dec_label_pc_804f07a
  br label %dec_label_pc_804f16c

dec_label_pc_804f16c:                             ; preds = %dec_label_pc_804f16c.preheader, %dec_label_pc_804f285
  %v0_804f16c = load i32, i32* @ebx, align 4
  %v1_804f16c = load i32, i32* @esp, align 4
  %v2_804f16c = add i32 %v1_804f16c, -4
  %v3_804f16c = inttoptr i32 %v2_804f16c to i32*
  store i32 %v0_804f16c, i32* %v3_804f16c, align 4
  %v1_804f16d = add i32 %v1_804f16c, -8
  %v2_804f16d = inttoptr i32 %v1_804f16d to i32*
  store i32 0, i32* %v2_804f16d, align 4
  %v1_804f16f = add i32 %v1_804f16c, -12
  %v2_804f16f = inttoptr i32 %v1_804f16f to i32*
  store i32 2, i32* %v2_804f16f, align 4
  %v1_804f171 = add i32 %v1_804f16c, -16
  %v2_804f171 = inttoptr i32 %v1_804f171 to i32*
  store i32 2, i32* %v2_804f171, align 4
  %v4_804f173 = call i32 @function_8052ea5(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804f173, i32* %eax.global-to-local, align 4
  %v0_804f178 = load i32, i32* @esp, align 4
  store i32 %v4_804f173, i32* @ebp, align 4
  %v10_804f17d = icmp eq i32 %v4_804f173, -1
  br i1 %v10_804f17d, label %dec_label_pc_804f2a0, label %dec_label_pc_804f186

dec_label_pc_804f186:                             ; preds = %dec_label_pc_804f16c
  %v0_804f186 = load i32, i32* @ecx, align 4
  %v2_804f186 = add i32 %v0_804f178, 12
  %v3_804f186 = inttoptr i32 %v2_804f186 to i32*
  store i32 %v0_804f186, i32* %v3_804f186, align 4
  %v1_804f187 = add i32 %v0_804f178, 8
  %v2_804f187 = inttoptr i32 %v1_804f187 to i32*
  store i32 16, i32* %v2_804f187, align 4
  %v1_804f189 = add i32 %v0_804f178, 4272
  store i32 %v1_804f189, i32* @edi, align 4
  %v2_804f190 = add i32 %v0_804f178, 4
  %v3_804f190 = inttoptr i32 %v2_804f190 to i32*
  store i32 %v1_804f189, i32* %v3_804f190, align 4
  %v3_804f191 = inttoptr i32 %v0_804f178 to i32*
  store i32 %v4_804f173, i32* %v3_804f191, align 4
  %v3_804f192 = call i32 @function_8052cca(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f197 = load i32, i32* @esp, align 4
  %v1_804f19a = add i32 %v3_804f192, 1
  %v8_804f19a = icmp eq i32 %v1_804f19a, 0
  store i32 %v1_804f19a, i32* %eax.global-to-local, align 4
  br i1 %v8_804f19a, label %dec_label_pc_804f2a0, label %dec_label_pc_804f1a1

dec_label_pc_804f1a1:                             ; preds = %dec_label_pc_804f186
  %v1_804f1a1 = add i32 %v0_804f197, 12
  %v2_804f1a1 = inttoptr i32 %v1_804f1a1 to i32*
  store i32 16384, i32* %v2_804f1a1, align 4
  %v1_804f1a6 = add i32 %v0_804f197, 20
  %v2_804f1a6 = inttoptr i32 %v1_804f1a6 to i32*
  %v3_804f1a6 = load i32, i32* %v2_804f1a6, align 4
  store i32 %v3_804f1a6, i32* %edx.global-to-local, align 4
  %v2_804f1aa = add i32 %v0_804f197, 8
  %v3_804f1aa = inttoptr i32 %v2_804f1aa to i32*
  store i32 %v3_804f1a6, i32* %v3_804f1aa, align 4
  %v1_804f1ab = add i32 %v0_804f197, 2096
  store i32 %v1_804f1ab, i32* %eax.global-to-local, align 4
  %v2_804f1b2 = add i32 %v0_804f197, 4
  %v3_804f1b2 = inttoptr i32 %v2_804f1b2 to i32*
  store i32 %v1_804f1ab, i32* %v3_804f1b2, align 4
  %v0_804f1b3 = load i32, i32* @ebp, align 4
  %v3_804f1b3 = inttoptr i32 %v0_804f197 to i32*
  store i32 %v0_804f1b3, i32* %v3_804f1b3, align 4
  %v0_804f1b4 = call i32 @function_8052df4()
  %v0_804f1b9 = load i32, i32* @esp, align 4
  %v1_804f1bc = add i32 %v0_804f1b4, 1
  %v8_804f1bc = icmp eq i32 %v1_804f1bc, 0
  store i32 %v1_804f1bc, i32* %eax.global-to-local, align 4
  br i1 %v8_804f1bc, label %dec_label_pc_804f2a0, label %dec_label_pc_804f1c3

dec_label_pc_804f1c3:                             ; preds = %dec_label_pc_804f1a1
  %v2_804f1c3 = add i32 %v0_804f1b9, 12
  %v3_804f1c3 = inttoptr i32 %v2_804f1c3 to i32*
  store i32 %v1_804f1bc, i32* %v3_804f1c3, align 4
  %v1_804f1c4 = add i32 %v0_804f1b9, 8
  %v2_804f1c4 = inttoptr i32 %v1_804f1c4 to i32*
  store i32 0, i32* %v2_804f1c4, align 4
  %v0_804f1c6 = load i32, i32* @ebp, align 4
  %v2_804f1c6 = add i32 %v0_804f1b9, 4
  %v3_804f1c6 = inttoptr i32 %v2_804f1c6 to i32*
  store i32 %v0_804f1c6, i32* %v3_804f1c6, align 4
  %v2_804f1c7 = inttoptr i32 %v0_804f1b9 to i32*
  store i32 3, i32* %v2_804f1c7, align 4
  %v3_804f1c9 = call i32 @function_80525ed(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f1ce = load i32, i32* @esp, align 4
  %v12_804f1d1 = or i32 %v3_804f1c9, 2048
  store i32 %v12_804f1d1, i32* %eax.global-to-local, align 4
  %v2_804f1d4 = add i32 %v0_804f1ce, 8
  %v3_804f1d4 = inttoptr i32 %v2_804f1d4 to i32*
  store i32 %v12_804f1d1, i32* %v3_804f1d4, align 4
  %v0_804f1d5 = load i32, i32* @ebp, align 4
  %v2_804f1d5 = add i32 %v0_804f1ce, 4
  %v3_804f1d5 = inttoptr i32 %v2_804f1d5 to i32*
  store i32 %v0_804f1d5, i32* %v3_804f1d5, align 4
  %v2_804f1d6 = inttoptr i32 %v0_804f1ce to i32*
  store i32 4, i32* %v2_804f1d6, align 4
  %v3_804f1d8 = call i32 @function_80525ed(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f1dd = load i32, i32* @esp, align 4
  %v1_804f1dd = add i32 %v0_804f1dd, 4144
  store i32 %v1_804f1dd, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804f1eb = inttoptr i32 %v1_804f1dd to i8*
  store i32 %v1_804f1dd, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f1ee = call i8* @_memset(i8* %v1_804f1eb, i32 0, i32 32)
  %v6_804f1ee = ptrtoint i8* %v5_804f1ee to i32
  store i32 %v6_804f1ee, i32* %ecx.global-to-local, align 4
  %v0_804f1f0 = load i32, i32* @ebp, align 4
  %v2_804f1f4 = udiv i32 %v0_804f1f0, 32
  store i32 %v2_804f1f4, i32* @esi, align 4
  %v1_804f1f7 = urem i32 %v0_804f1f0, 32
  store i32 %v1_804f1f7, i32* @ebx, align 4
  %v0_804f1fa = load i32, i32* @esp, align 4
  %v2_804f1fa = mul nuw nsw i32 %v2_804f1f4, 4
  %v3_804f1fa = add nuw nsw i32 %v2_804f1fa, 4144
  %v4_804f1fa = add i32 %v3_804f1fa, %v0_804f1fa
  %v5_804f1fa = inttoptr i32 %v4_804f1fa to i32*
  %v6_804f1fa = load i32, i32* %v5_804f1fa, align 4
  %v9_804f1fa = shl i32 1, %v1_804f1f7
  %v12_804f1fa = or i32 %v6_804f1fa, %v9_804f1fa
  store i32 %v12_804f1fa, i32* %v5_804f1fa, align 4
  %v0_804f202 = load i32, i32* @esp, align 4
  %v1_804f202 = add i32 %v0_804f202, 4288
  %v2_804f202 = inttoptr i32 %v1_804f202 to i32*
  store i32 5, i32* %v2_804f202, align 4
  %v0_804f20d = load i32, i32* @esp, align 4
  %v1_804f20d = add i32 %v0_804f20d, 4292
  %v2_804f20d = inttoptr i32 %v1_804f20d to i32*
  store i32 0, i32* %v2_804f20d, align 4
  %v0_804f218 = load i32, i32* @esp, align 4
  %v1_804f218 = inttoptr i32 %v0_804f218 to i32*
  %v1_804f219 = add i32 %v0_804f218, 4288
  store i32 %v1_804f219, i32* %v1_804f218, align 4
  %v0_804f221 = load i32, i32* @ebp, align 4
  %v1_804f221 = add i32 %v0_804f221, 1
  store i32 %v1_804f221, i32* %eax.global-to-local, align 4
  %v1_804f224 = add i32 %v0_804f218, -4
  %v2_804f224 = inttoptr i32 %v1_804f224 to i32*
  store i32 0, i32* %v2_804f224, align 4
  %v1_804f226 = add i32 %v0_804f218, -8
  %v2_804f226 = inttoptr i32 %v1_804f226 to i32*
  store i32 0, i32* %v2_804f226, align 4
  %v0_804f228 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f228 = add i32 %v0_804f218, -12
  %v3_804f228 = inttoptr i32 %v2_804f228 to i32*
  store i32 %v0_804f228, i32* %v3_804f228, align 4
  %v0_804f229 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f229 = add i32 %v0_804f218, -16
  %v3_804f229 = inttoptr i32 %v2_804f229 to i32*
  store i32 %v0_804f229, i32* %v3_804f229, align 4
  %v0_804f22a = call i32 @function_80528b8()
  store i32 %v0_804f22a, i32* %eax.global-to-local, align 4
  %v0_804f22f = load i32, i32* @esp, align 4
  %v1_804f22f = add i32 %v0_804f22f, 32
  %v10_804f232 = icmp eq i32 %v0_804f22a, -1
  br i1 %v10_804f232, label %dec_label_pc_804f2b4, label %dec_label_pc_804f237

dec_label_pc_804f237:                             ; preds = %dec_label_pc_804f1c3
  %v1_804f237 = icmp eq i32 %v0_804f22a, 0
  br i1 %v1_804f237, label %dec_label_pc_804f27e, label %dec_label_pc_804f23b

dec_label_pc_804f23b:                             ; preds = %dec_label_pc_804f237
  %v1_804f23b = load i32, i32* @esi, align 4
  %v2_804f23b = mul i32 %v1_804f23b, 4
  %v3_804f23b = add i32 %v0_804f22f, 4160
  %v4_804f23b = add i32 %v3_804f23b, %v2_804f23b
  %v5_804f23b = inttoptr i32 %v4_804f23b to i32*
  %v6_804f23b = load i32, i32* %v5_804f23b, align 4
  %v7_804f23b = load i32, i32* @ebx, align 4
  %v8_804f23b = urem i32 %v7_804f23b, 32
  %v9_804f23b = shl i32 1, %v8_804f23b
  %v10_804f23b = and i32 %v9_804f23b, %v6_804f23b
  %v11_804f23b = icmp ne i32 %v10_804f23b, 0
  %v1_804f243 = zext i1 %v11_804f23b to i32
  %v3_804f243 = and i32 %v0_804f22a, -256
  %v4_804f243 = or i32 %v1_804f243, %v3_804f243
  store i32 %v4_804f243, i32* %eax.global-to-local, align 4
  %v4_804f246 = icmp eq i1 %v11_804f23b, false
  br i1 %v4_804f246, label %dec_label_pc_804f2b4, label %dec_label_pc_804f24a

dec_label_pc_804f24a:                             ; preds = %dec_label_pc_804f23b
  %v2_804f24a = add i32 %v0_804f22f, 28
  %v3_804f24a = inttoptr i32 %v2_804f24a to i32*
  store i32 %v4_804f243, i32* %v3_804f24a, align 4
  %v0_804f24b = load i32, i32* %eax.global-to-local, align 4
  %v2_804f24b = add i32 %v0_804f22f, 24
  %v3_804f24b = inttoptr i32 %v2_804f24b to i32*
  store i32 %v0_804f24b, i32* %v3_804f24b, align 4
  %v1_804f24c = add i32 %v0_804f22f, 20
  %v2_804f24c = inttoptr i32 %v1_804f24c to i32*
  store i32 0, i32* %v2_804f24c, align 4
  %v1_804f24e = add i32 %v0_804f22f, 16
  %v2_804f24e = inttoptr i32 %v1_804f24e to i32*
  store i32 0, i32* %v2_804f24e, align 4
  %v1_804f250 = add i32 %v0_804f22f, 12
  %v2_804f250 = inttoptr i32 %v1_804f250 to i32*
  store i32 16384, i32* %v2_804f250, align 4
  %v1_804f255 = add i32 %v0_804f22f, 8
  %v2_804f255 = inttoptr i32 %v1_804f255 to i32*
  store i32 2048, i32* %v2_804f255, align 4
  %v1_804f25a = add i32 %v0_804f22f, 64
  store i32 %v1_804f25a, i32* %eax.global-to-local, align 4
  %v2_804f25e = add i32 %v0_804f22f, 4
  %v3_804f25e = inttoptr i32 %v2_804f25e to i32*
  store i32 %v1_804f25a, i32* %v3_804f25e, align 4
  %v0_804f25f = load i32, i32* @ebp, align 4
  %v3_804f25f = inttoptr i32 %v0_804f22f to i32*
  store i32 %v0_804f25f, i32* %v3_804f25f, align 4
  %v0_804f260 = call i32 @function_8052db1()
  store i32 %v0_804f260, i32* %eax.global-to-local, align 4
  %v0_804f265 = load i32, i32* @esp, align 4
  store i32 %v0_804f260, i32* @ebx, align 4
  %v1_804f26a = add i32 %v0_804f265, 56
  %v2_804f26a = inttoptr i32 %v1_804f26a to i32*
  %v3_804f26a = load i32, i32* %v2_804f26a, align 4
  store i32 %v3_804f26a, i32* %eax.global-to-local, align 4
  %v2_804f26e = add i32 %v0_804f265, 16
  %v3_804f26e = inttoptr i32 %v2_804f26e to i32*
  store i32 %v3_804f26a, i32* %v3_804f26e, align 4
  %v2_804f26f = call i32 @function_8052110(i8* inttoptr (i32 1 to i8*))
  %v1_804f274 = add i32 %v2_804f26f, 17
  store i32 %v1_804f274, i32* %eax.global-to-local, align 4
  %v0_804f277 = load i32, i32* @esp, align 4
  %v1_804f277 = add i32 %v0_804f277, 16
  %v0_804f27a = load i32, i32* @ebx, align 4
  %v7_804f27a = icmp ult i32 %v0_804f27a, %v1_804f274
  %v1_804f27c = icmp eq i1 %v7_804f27a, false
  br i1 %v1_804f27c, label %dec_label_pc_804f2da, label %dec_label_pc_804f27e

dec_label_pc_804f27e:                             ; preds = %dec_label_pc_804f306, %dec_label_pc_804f2da, %dec_label_pc_804f24a, %dec_label_pc_804f237
  %v0_804f27e = phi i32 [ %v1_804f2f3, %dec_label_pc_804f306 ], [ %v1_804f2f3, %dec_label_pc_804f2da ], [ %v1_804f277, %dec_label_pc_804f24a ], [ %v1_804f22f, %dec_label_pc_804f237 ]
  %v1_804f27e = add i32 %v0_804f27e, 8
  %v2_804f27e = inttoptr i32 %v1_804f27e to i32*
  %v3_804f27e = load i32, i32* %v2_804f27e, align 4
  %v12_804f27e = icmp eq i32 %v3_804f27e, 5
  br i1 %v12_804f27e, label %dec_label_pc_804f2b4, label %dec_label_pc_804f285

dec_label_pc_804f285:                             ; preds = %dec_label_pc_804f2a0, %dec_label_pc_804f27e
  %v3_804f285 = phi i32 [ %v3_804f2ad, %dec_label_pc_804f2a0 ], [ %v3_804f27e, %dec_label_pc_804f27e ]
  %v1_804f28d = phi i32 [ %v1_804f2aa, %dec_label_pc_804f2a0 ], [ %v0_804f27e, %dec_label_pc_804f27e ]
  %v1_804f285 = add i32 %v1_804f28d, 8
  %v2_804f285 = inttoptr i32 %v1_804f285 to i32*
  %v1_804f289 = add i32 %v3_804f285, 1
  store i32 %v1_804f289, i32* @edi, align 4
  %v0_804f28a = load i32, i32* @ebp, align 4
  %v10_804f28a = icmp eq i32 %v0_804f28a, -1
  store i32 %v1_804f289, i32* %v2_804f285, align 4
  %v1_804f291 = icmp eq i1 %v10_804f28a, false
  br i1 %v1_804f291, label %dec_label_pc_804f160.loopexit, label %dec_label_pc_804f16c

dec_label_pc_804f2a0:                             ; preds = %dec_label_pc_804f1a1, %dec_label_pc_804f186, %dec_label_pc_804f16c
  %v0_804f2a0.in = phi i32 [ %v0_804f1b9, %dec_label_pc_804f1a1 ], [ %v0_804f197, %dec_label_pc_804f186 ], [ %v0_804f178, %dec_label_pc_804f16c ]
  %v2_804f2a3 = inttoptr i32 %v0_804f2a0.in to i32*
  store i32 1, i32* %v2_804f2a3, align 4
  %v0_804f2a5 = call i32 @function_8054260()
  store i32 %v0_804f2a5, i32* %eax.global-to-local, align 4
  %v0_804f2aa = load i32, i32* @esp, align 4
  %v1_804f2aa = add i32 %v0_804f2aa, 16
  %v1_804f2ad = add i32 %v0_804f2aa, 24
  %v2_804f2ad = inttoptr i32 %v1_804f2ad to i32*
  %v3_804f2ad = load i32, i32* %v2_804f2ad, align 4
  %v12_804f2ad = icmp eq i32 %v3_804f2ad, 5
  %v1_804f2b2 = icmp eq i1 %v12_804f2ad, false
  br i1 %v1_804f2b2, label %dec_label_pc_804f285, label %dec_label_pc_804f2b4

dec_label_pc_804f2b4:                             ; preds = %dec_label_pc_804f2a0, %dec_label_pc_804f27e, %dec_label_pc_804f23b, %dec_label_pc_804f1c3, %dec_label_pc_804f314, %dec_label_pc_804f31d.backedge
  %v0_804f2b4 = phi i32 [ %v0_804f322124, %dec_label_pc_804f314 ], [ %v0_804f322, %dec_label_pc_804f31d.backedge ], [ %v1_804f2aa, %dec_label_pc_804f2a0 ], [ %v0_804f27e, %dec_label_pc_804f27e ], [ %v1_804f22f, %dec_label_pc_804f23b ], [ %v1_804f22f, %dec_label_pc_804f1c3 ]
  %v0_804f2b7 = load i32, i32* @ebp, align 4
  %v2_804f2b7 = add i32 %v0_804f2b4, -16
  %v3_804f2b7 = inttoptr i32 %v2_804f2b7 to i32*
  store i32 %v0_804f2b7, i32* %v3_804f2b7, align 4
  %v1_804f2b8 = call i32 @function_80526b1(i32 1)
  store i32 %v1_804f2b8, i32* %eax.global-to-local, align 4
  %v0_804f2bd = load i32, i32* @esp, align 4
  %v1_804f2bd = add i32 %v0_804f2bd, 16
  %v1_804f2c0 = inttoptr i32 %v1_804f2bd to i32*
  %v2_804f2c0 = load i32, i32* %v1_804f2c0, align 4
  store i32 %v2_804f2c0, i32* %edx.global-to-local, align 4
  %v1_804f2c3 = inttoptr i32 %v2_804f2c0 to i8*
  %v2_804f2c3 = load i8, i8* %v1_804f2c3, align 1
  %v3_804f2c3 = icmp eq i8 %v2_804f2c3, 0
  br i1 %v3_804f2c3, label %dec_label_pc_804f3c3, label %dec_label_pc_804f2cc

dec_label_pc_804f2cc:                             ; preds = %dec_label_pc_804f2b4
  %v2_804f2cc = load i32, i32* %v1_804f2c0, align 4
  store i32 %v2_804f2cc, i32* %eax.global-to-local, align 4
  %v1_804f2cf = add i32 %v0_804f2bd, 4300
  %v1_804f2d5 = inttoptr i32 %v1_804f2cf to i32*
  %v2_804f2d5 = load i32, i32* %v1_804f2d5, align 4
  store i32 %v2_804f2d5, i32* @ebx, align 4
  %v3_804f2d6 = add i32 %v0_804f2bd, 4308
  %v1_804f2d7 = inttoptr i32 %v3_804f2d6 to i32*
  %v2_804f2d7 = load i32, i32* %v1_804f2d7, align 4
  store i32 %v2_804f2d7, i32* @edi, align 4
  %v3_804f2d7 = add i32 %v0_804f2bd, 4312
  %v1_804f2d8 = inttoptr i32 %v3_804f2d7 to i32*
  %v2_804f2d8 = load i32, i32* %v1_804f2d8, align 4
  store i32 %v2_804f2d8, i32* @ebp, align 4
  ret i32 %v2_804f2cc

dec_label_pc_804f2da:                             ; preds = %dec_label_pc_804f24a
  %v1_804f2da = add i32 %v0_804f277, 60
  store i32 %v1_804f2da, i32* %edx.global-to-local, align 4
  %v2_804f2de = add i32 %v0_804f277, 40
  %v3_804f2de = inttoptr i32 %v2_804f2de to i32*
  store i32 %v1_804f2da, i32* %v3_804f2de, align 4
  %v0_804f2e2 = load i32, i32* @esp, align 4
  %v1_804f2e5 = add i32 %v0_804f2e2, 44
  store i32 %v1_804f2e5, i32* %ecx.global-to-local, align 4
  %v2_804f2e9 = add i32 %v0_804f2e2, -16
  %v3_804f2e9 = inttoptr i32 %v2_804f2e9 to i32*
  store i32 %v1_804f2e5, i32* %v3_804f2e9, align 4
  %v2_804f2ea = call i32 @function_8052110(i8* inttoptr (i32 1 to i8*))
  store i32 %v2_804f2ea, i32* %eax.global-to-local, align 4
  %v0_804f2ef = load i32, i32* @esp, align 4
  %v2_804f2ef = add i32 %v2_804f2ea, 65
  %v3_804f2ef = add i32 %v2_804f2ef, %v0_804f2ef
  store i32 %v3_804f2ef, i32* %ecx.global-to-local, align 4
  %v1_804f2f3 = add i32 %v0_804f2ef, 16
  %v1_804f2f6 = add i32 %v0_804f2ef, 30
  %v2_804f2f6 = inttoptr i32 %v1_804f2f6 to i16*
  %v3_804f2f6 = load i16, i16* %v2_804f2f6, align 2
  %v4_804f2f6 = zext i16 %v3_804f2f6 to i32
  %v7_804f2f6 = and i32 %v1_804f1dd, -65536
  %v8_804f2f6 = or i32 %v4_804f2f6, %v7_804f2f6
  store i32 %v8_804f2f6, i32* @edi, align 4
  %v3_804f2fb = add i32 %v0_804f2ef, 48
  %v4_804f2fb = inttoptr i32 %v3_804f2fb to i16*
  %v5_804f2fb = load i16, i16* %v4_804f2fb, align 2
  %v16_804f2fb = icmp eq i16 %v3_804f2f6, %v5_804f2fb
  %v1_804f300 = icmp eq i1 %v16_804f2fb, false
  br i1 %v1_804f300, label %dec_label_pc_804f27e, label %dec_label_pc_804f306

dec_label_pc_804f306:                             ; preds = %dec_label_pc_804f2da
  %v1_804f306 = add i32 %v0_804f2ef, 54
  %v2_804f306 = inttoptr i32 %v1_804f306 to i16*
  %v3_804f306 = load i16, i16* %v2_804f306, align 2
  %v4_804f306 = zext i16 %v3_804f306 to i32
  %v6_804f306 = and i32 %v2_804f2ea, -65536
  %v7_804f306 = or i32 %v4_804f306, %v6_804f306
  store i32 %v7_804f306, i32* %eax.global-to-local, align 4
  %v4_804f30b = icmp eq i16 %v3_804f306, 0
  br i1 %v4_804f30b, label %dec_label_pc_804f27e, label %dec_label_pc_804f314

dec_label_pc_804f314:                             ; preds = %dec_label_pc_804f306
  %v2_804f314 = call i16 @llvm.bswap.i16(i16 %v3_804f306)
  %v3_804f314 = zext i16 %v2_804f314 to i32
  %v6_804f314 = or i32 %v3_804f314, %v6_804f306
  store i32 %v6_804f314, i32* %eax.global-to-local, align 4
  %v3_804f318 = add i32 %v0_804f2ef, 38
  %v4_804f318 = inttoptr i32 %v3_804f318 to i16*
  store i16 %v2_804f314, i16* %v4_804f318, align 2
  %v0_804f31d119 = load i32, i32* @esp, align 4
  %v1_804f31d120 = add i32 %v0_804f31d119, 22
  %v2_804f31d121 = inttoptr i32 %v1_804f31d120 to i16*
  %v3_804f31d122 = load i16, i16* %v2_804f31d121, align 2
  %v4_804f31d123 = add i16 %v3_804f31d122, -1
  store i16 %v4_804f31d123, i16* %v2_804f31d121, align 2
  %v0_804f322124 = load i32, i32* @esp, align 4
  %v1_804f322125 = add i32 %v0_804f322124, 22
  %v2_804f322126 = inttoptr i32 %v1_804f322125 to i16*
  %v3_804f322127 = load i16, i16* %v2_804f322126, align 2
  %v13_804f322128 = icmp eq i16 %v3_804f322127, -1
  br i1 %v13_804f322128, label %dec_label_pc_804f2b4, label %dec_label_pc_804f32a

dec_label_pc_804f32a:                             ; preds = %dec_label_pc_804f314, %dec_label_pc_804f31d.backedge
  %v0_804f322129 = phi i32 [ %v0_804f322, %dec_label_pc_804f31d.backedge ], [ %v0_804f322124, %dec_label_pc_804f314 ]
  %v0_804f32a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_804f32a, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804f33313 = inttoptr i32 %v0_804f32a to i8*
  %v2_804f33314 = load i8, i8* %v1_804f33313, align 1
  %v3_804f33315 = zext i8 %v2_804f33314 to i32
  %v4_804f33316 = load i32, i32* %eax.global-to-local, align 4
  %v5_804f33317 = and i32 %v4_804f33316, -256
  %v6_804f33318 = or i32 %v5_804f33317, %v3_804f33315
  store i32 %v6_804f33318, i32* %eax.global-to-local, align 4
  %v4_804f33519 = icmp eq i8 %v2_804f33314, 0
  br i1 %v4_804f33519, label %dec_label_pc_804f36a, label %dec_label_pc_804f339.preheader.preheader

dec_label_pc_804f339.preheader.preheader:         ; preds = %dec_label_pc_804f32a
  %v1_804f35e = add i32 %v0_804f322129, 32
  br label %dec_label_pc_804f339.preheader

dec_label_pc_804f339.preheader:                   ; preds = %dec_label_pc_804f339.preheader.preheader, %dec_label_pc_804f3fc
  %v0_804f400 = phi i32 [ %v3_804f400, %dec_label_pc_804f3fc ], [ 1, %dec_label_pc_804f339.preheader.preheader ]
  %v0_804f3fd45 = phi i32 [ %v0_804f3fd, %dec_label_pc_804f3fc ], [ 0, %dec_label_pc_804f339.preheader.preheader ]
  %v0_804f34641 = phi i32 [ %v1_804f3fc, %dec_label_pc_804f3fc ], [ %v0_804f32a, %dec_label_pc_804f339.preheader.preheader ]
  %v0_804f33939 = phi i32 [ %v6_804f333, %dec_label_pc_804f3fc ], [ %v6_804f33318, %dec_label_pc_804f339.preheader.preheader ]
  br label %dec_label_pc_804f339

dec_label_pc_804f339:                             ; preds = %dec_label_pc_804f339.preheader, %dec_label_pc_804f341
  %v0_804f3fd = phi i32 [ %v0_804f3fd45, %dec_label_pc_804f339.preheader ], [ 1, %dec_label_pc_804f341 ]
  %v0_804f3fc = phi i32 [ %v0_804f34641, %dec_label_pc_804f339.preheader ], [ %v2_804f362, %dec_label_pc_804f341 ]
  %v4_804f333 = phi i32 [ %v0_804f33939, %dec_label_pc_804f339.preheader ], [ %v6_804f364, %dec_label_pc_804f341 ]
  %v1_804f339 = trunc i32 %v4_804f333 to i8
  %tmp141 = icmp ult i8 %v1_804f339, -64
  br i1 %tmp141, label %dec_label_pc_804f3fc, label %dec_label_pc_804f341

dec_label_pc_804f341:                             ; preds = %dec_label_pc_804f339
  %v1_804f341 = urem i32 %v4_804f333, 256
  store i32 %v1_804f341, i32* %eax.global-to-local, align 4
  %v1_804f346 = add i32 %v0_804f3fc, 1
  %v2_804f346 = inttoptr i32 %v1_804f346 to i8*
  %v3_804f346 = load i8, i8* %v2_804f346, align 1
  %v4_804f346 = zext i8 %v3_804f346 to i32
  store i32 1, i32* @ebx, align 4
  %v2_804f354 = mul nuw nsw i32 %v1_804f341, 256
  %v2_804f357 = add nsw i32 %v2_804f354, -49152
  %v3_804f357 = or i32 %v4_804f346, %v2_804f357
  store i32 %v3_804f357, i32* %eax.global-to-local, align 4
  %v2_804f362 = add i32 %v1_804f35e, %v3_804f357
  store i32 %v2_804f362, i32* %edx.global-to-local, align 4
  %v1_804f364 = inttoptr i32 %v2_804f362 to i8*
  %v2_804f364 = load i8, i8* %v1_804f364, align 1
  %v3_804f364 = zext i8 %v2_804f364 to i32
  %v6_804f364 = or i32 %v3_804f364, %v2_804f357
  store i32 %v6_804f364, i32* %eax.global-to-local, align 4
  %v4_804f366 = icmp eq i8 %v2_804f364, 0
  %v1_804f368 = icmp eq i1 %v4_804f366, false
  br i1 %v1_804f368, label %dec_label_pc_804f339, label %dec_label_pc_804f36a

dec_label_pc_804f36a:                             ; preds = %dec_label_pc_804f3fc, %dec_label_pc_804f341, %dec_label_pc_804f32a
  %v4_804f38625 = phi i32 [ %v6_804f33318, %dec_label_pc_804f32a ], [ %v6_804f364, %dec_label_pc_804f341 ], [ %v6_804f333, %dec_label_pc_804f3fc ]
  %v5_804f420 = phi i32 [ %v0_804f32a, %dec_label_pc_804f32a ], [ %v2_804f362, %dec_label_pc_804f341 ], [ %v1_804f3fc, %dec_label_pc_804f3fc ]
  %v1_804f36a = phi i32 [ 0, %dec_label_pc_804f32a ], [ 1, %dec_label_pc_804f341 ], [ %v0_804f3fd, %dec_label_pc_804f3fc ]
  %v0_804f36a = phi i32 [ 1, %dec_label_pc_804f32a ], [ %v0_804f400, %dec_label_pc_804f341 ], [ %v3_804f400, %dec_label_pc_804f3fc ]
  %v2_804f36a = add i32 %v1_804f36a, %v0_804f32a
  %v2_804f36c = add i32 %v2_804f36a, %v0_804f36a
  store i32 %v2_804f36c, i32* @esi, align 4
  %v1_804f36f = inttoptr i32 %v2_804f36c to i16*
  %v2_804f36f = load i16, i16* %v1_804f36f, align 2
  %v8_804f36f = icmp eq i16 %v2_804f36f, 256
  %v1_804f374 = add i32 %v2_804f36c, 10
  store i32 %v1_804f374, i32* @edi, align 4
  br i1 %v8_804f36f, label %dec_label_pc_804f414, label %dec_label_pc_804f37d

dec_label_pc_804f37d:                             ; preds = %dec_label_pc_804f414, %dec_label_pc_804f36a
  store i32 %v1_804f374, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_804f38622 = inttoptr i32 %v1_804f374 to i8*
  %v2_804f38623 = load i8, i8* %v1_804f38622, align 1
  %v3_804f38624 = zext i8 %v2_804f38623 to i32
  %v5_804f38626 = and i32 %v4_804f38625, -256
  %v6_804f38627 = or i32 %v3_804f38624, %v5_804f38626
  store i32 %v6_804f38627, i32* %eax.global-to-local, align 4
  %v4_804f38828 = icmp eq i8 %v2_804f38623, 0
  br i1 %v4_804f38828, label %dec_label_pc_804f3b9, label %dec_label_pc_804f38c.preheader.preheader

dec_label_pc_804f38c.preheader.preheader:         ; preds = %dec_label_pc_804f37d
  %v1_804f3ad = add i32 %v0_804f322129, 32
  br label %dec_label_pc_804f38c.preheader

dec_label_pc_804f38c.preheader:                   ; preds = %dec_label_pc_804f38c.preheader.preheader, %dec_label_pc_804f408
  %v0_804f40c = phi i32 [ %v3_804f40c, %dec_label_pc_804f408 ], [ 1, %dec_label_pc_804f38c.preheader.preheader ]
  %v0_804f40964 = phi i32 [ %v0_804f409, %dec_label_pc_804f408 ], [ 0, %dec_label_pc_804f38c.preheader.preheader ]
  %v0_804f39560 = phi i32 [ %v1_804f408, %dec_label_pc_804f408 ], [ %v1_804f374, %dec_label_pc_804f38c.preheader.preheader ]
  %v0_804f38c58 = phi i32 [ %v6_804f386, %dec_label_pc_804f408 ], [ %v6_804f38627, %dec_label_pc_804f38c.preheader.preheader ]
  br label %dec_label_pc_804f38c

dec_label_pc_804f38c:                             ; preds = %dec_label_pc_804f38c.preheader, %dec_label_pc_804f390
  %v0_804f409 = phi i32 [ %v0_804f40964, %dec_label_pc_804f38c.preheader ], [ 1, %dec_label_pc_804f390 ]
  %v0_804f408 = phi i32 [ %v0_804f39560, %dec_label_pc_804f38c.preheader ], [ %v2_804f3b1, %dec_label_pc_804f390 ]
  %v4_804f386 = phi i32 [ %v0_804f38c58, %dec_label_pc_804f38c.preheader ], [ %v6_804f3b3, %dec_label_pc_804f390 ]
  %v1_804f38c = trunc i32 %v4_804f386 to i8
  %tmp142 = icmp ult i8 %v1_804f38c, -64
  br i1 %tmp142, label %dec_label_pc_804f408, label %dec_label_pc_804f390

dec_label_pc_804f390:                             ; preds = %dec_label_pc_804f38c
  %v1_804f390 = urem i32 %v4_804f386, 256
  store i32 %v1_804f390, i32* %eax.global-to-local, align 4
  %v1_804f395 = add i32 %v0_804f408, 1
  %v2_804f395 = inttoptr i32 %v1_804f395 to i8*
  %v3_804f395 = load i8, i8* %v2_804f395, align 1
  %v4_804f395 = zext i8 %v3_804f395 to i32
  store i32 1, i32* %ecx.global-to-local, align 4
  %v2_804f3a3 = mul nuw nsw i32 %v1_804f390, 256
  %v2_804f3a6 = add nsw i32 %v2_804f3a3, -49152
  %v3_804f3a6 = or i32 %v4_804f395, %v2_804f3a6
  store i32 %v3_804f3a6, i32* %eax.global-to-local, align 4
  %v2_804f3b1 = add i32 %v1_804f3ad, %v3_804f3a6
  store i32 %v2_804f3b1, i32* %edx.global-to-local, align 4
  %v1_804f3b3 = inttoptr i32 %v2_804f3b1 to i8*
  %v2_804f3b3 = load i8, i8* %v1_804f3b3, align 1
  %v3_804f3b3 = zext i8 %v2_804f3b3 to i32
  %v6_804f3b3 = or i32 %v3_804f3b3, %v2_804f3a6
  store i32 %v6_804f3b3, i32* %eax.global-to-local, align 4
  %v4_804f3b5 = icmp eq i8 %v2_804f3b3, 0
  %v1_804f3b7 = icmp eq i1 %v4_804f3b5, false
  br i1 %v1_804f3b7, label %dec_label_pc_804f38c, label %dec_label_pc_804f3b9

dec_label_pc_804f3b9:                             ; preds = %dec_label_pc_804f408, %dec_label_pc_804f390, %dec_label_pc_804f37d
  %v1_804f3b9 = phi i32 [ 0, %dec_label_pc_804f37d ], [ 1, %dec_label_pc_804f390 ], [ %v0_804f409, %dec_label_pc_804f408 ]
  %v0_804f3b9 = phi i32 [ 1, %dec_label_pc_804f37d ], [ %v0_804f40c, %dec_label_pc_804f390 ], [ %v3_804f40c, %dec_label_pc_804f408 ]
  %v2_804f3b9 = add i32 %v0_804f3b9, %v1_804f3b9
  store i32 %v2_804f3b9, i32* @ebx, align 4
  %v2_804f3bb = add i32 %v2_804f3b9, %v1_804f374
  br label %dec_label_pc_804f31d.backedge

dec_label_pc_804f31d.backedge:                    ; preds = %dec_label_pc_804f3b9, %dec_label_pc_804f430
  %v0_804f31d = phi i32 [ %v0_804f322129, %dec_label_pc_804f3b9 ], [ %v0_804f31d.pre, %dec_label_pc_804f430 ]
  %storemerge = phi i32 [ %v2_804f3bb, %dec_label_pc_804f3b9 ], [ %v2_804f43b, %dec_label_pc_804f430 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v1_804f31d = add i32 %v0_804f31d, 22
  %v2_804f31d = inttoptr i32 %v1_804f31d to i16*
  %v3_804f31d = load i16, i16* %v2_804f31d, align 2
  %v4_804f31d = add i16 %v3_804f31d, -1
  store i16 %v4_804f31d, i16* %v2_804f31d, align 2
  %v0_804f322 = load i32, i32* @esp, align 4
  %v1_804f322 = add i32 %v0_804f322, 22
  %v2_804f322 = inttoptr i32 %v1_804f322 to i16*
  %v3_804f322 = load i16, i16* %v2_804f322, align 2
  %v13_804f322 = icmp eq i16 %v3_804f322, -1
  br i1 %v13_804f322, label %dec_label_pc_804f2b4, label %dec_label_pc_804f32a

dec_label_pc_804f3c3:                             ; preds = %dec_label_pc_804f2b4
  %v1_804f3c3 = add i32 %v2_804f2c0, 4
  %v2_804f3c3 = inttoptr i32 %v1_804f3c3 to i32*
  %v3_804f3c3 = load i32, i32* %v2_804f3c3, align 4
  store i32 %v3_804f3c3, i32* %eax.global-to-local, align 4
  %v1_804f3c6 = icmp eq i32 %v3_804f3c3, 0
  br i1 %v1_804f3c6, label %dec_label_pc_804f3d6, label %dec_label_pc_804f3ca

dec_label_pc_804f3ca:                             ; preds = %dec_label_pc_804f3c3
  %v3_804f3cd = inttoptr i32 %v0_804f2bd to i32*
  store i32 %v3_804f3c3, i32* %v3_804f3cd, align 4
  %v1_804f3ce = call i32 @function_8053e09(i32 1)
  store i32 %v1_804f3ce, i32* %eax.global-to-local, align 4
  %v0_804f3d3 = load i32, i32* @esp, align 4
  %v1_804f3d3 = add i32 %v0_804f3d3, 16
  br label %dec_label_pc_804f3d6

dec_label_pc_804f3d6:                             ; preds = %dec_label_pc_804f3c3, %dec_label_pc_804f3ca
  %v0_804f3d6 = phi i32 [ %v1_804f2bd, %dec_label_pc_804f3c3 ], [ %v1_804f3d3, %dec_label_pc_804f3ca ]
  %v2_804f3d9 = inttoptr i32 %v0_804f3d6 to i32*
  %v3_804f3d9 = load i32, i32* %v2_804f3d9, align 4
  store i32 %v3_804f3d9, i32* @esi, align 4
  %v2_804f3dd = add i32 %v0_804f3d6, -16
  %v3_804f3dd = inttoptr i32 %v2_804f3dd to i32*
  store i32 %v3_804f3d9, i32* %v3_804f3dd, align 4
  %v1_804f3de = call i32 @function_8053e09(i32 1)
  store i32 %v1_804f3de, i32* %eax.global-to-local, align 4
  %v0_804f3e3 = load i32, i32* @esp, align 4
  %v1_804f3e3 = add i32 %v0_804f3e3, 16
  %v2_804f3e3 = inttoptr i32 %v1_804f3e3 to i32*
  store i32 0, i32* %v2_804f3e3, align 4
  %v0_804f3eb = load i32, i32* @esp, align 4
  %v1_804f3eb = add i32 %v0_804f3eb, 16
  %v1_804f3ee = inttoptr i32 %v1_804f3eb to i32*
  %v2_804f3ee = load i32, i32* %v1_804f3ee, align 4
  store i32 %v2_804f3ee, i32* %eax.global-to-local, align 4
  %v1_804f3f1 = add i32 %v0_804f3eb, 4300
  %v1_804f3f7 = inttoptr i32 %v1_804f3f1 to i32*
  %v2_804f3f7 = load i32, i32* %v1_804f3f7, align 4
  store i32 %v2_804f3f7, i32* @ebx, align 4
  %v3_804f3f8 = add i32 %v0_804f3eb, 4308
  %v1_804f3f9 = inttoptr i32 %v3_804f3f8 to i32*
  %v2_804f3f9 = load i32, i32* %v1_804f3f9, align 4
  store i32 %v2_804f3f9, i32* @edi, align 4
  %v3_804f3f9 = add i32 %v0_804f3eb, 4312
  %v1_804f3fa = inttoptr i32 %v3_804f3f9 to i32*
  %v2_804f3fa = load i32, i32* %v1_804f3fa, align 4
  store i32 %v2_804f3fa, i32* @ebp, align 4
  ret i32 %v2_804f3ee

dec_label_pc_804f3fc:                             ; preds = %dec_label_pc_804f339
  %v1_804f3fc = add i32 %v0_804f3fc, 1
  store i32 %v1_804f3fc, i32* %edx.global-to-local, align 4
  %v5_804f3fd = icmp eq i32 %v0_804f3fd, 0
  %v2_804f400 = zext i1 %v5_804f3fd to i32
  %v3_804f400 = add i32 %v2_804f400, %v0_804f400
  %v1_804f333 = inttoptr i32 %v1_804f3fc to i8*
  %v2_804f333 = load i8, i8* %v1_804f333, align 1
  %v3_804f333 = zext i8 %v2_804f333 to i32
  %v5_804f333 = and i32 %v4_804f333, -256
  %v6_804f333 = or i32 %v3_804f333, %v5_804f333
  store i32 %v6_804f333, i32* %eax.global-to-local, align 4
  %v4_804f335 = icmp eq i8 %v2_804f333, 0
  br i1 %v4_804f335, label %dec_label_pc_804f36a, label %dec_label_pc_804f339.preheader

dec_label_pc_804f408:                             ; preds = %dec_label_pc_804f38c
  %v1_804f408 = add i32 %v0_804f408, 1
  store i32 %v1_804f408, i32* %edx.global-to-local, align 4
  %v5_804f409 = icmp eq i32 %v0_804f409, 0
  %v2_804f40c = zext i1 %v5_804f409 to i32
  %v3_804f40c = add i32 %v2_804f40c, %v0_804f40c
  %v1_804f386 = inttoptr i32 %v1_804f408 to i8*
  %v2_804f386 = load i8, i8* %v1_804f386, align 1
  %v3_804f386 = zext i8 %v2_804f386 to i32
  %v5_804f386 = and i32 %v4_804f386, -256
  %v6_804f386 = or i32 %v3_804f386, %v5_804f386
  store i32 %v6_804f386, i32* %eax.global-to-local, align 4
  %v4_804f388 = icmp eq i8 %v2_804f386, 0
  br i1 %v4_804f388, label %dec_label_pc_804f3b9, label %dec_label_pc_804f38c.preheader

dec_label_pc_804f414:                             ; preds = %dec_label_pc_804f36a
  %v1_804f414 = add i32 %v2_804f36c, 2
  %v2_804f414 = inttoptr i32 %v1_804f414 to i16*
  %v3_804f414 = load i16, i16* %v2_804f414, align 2
  %v9_804f414 = icmp eq i16 %v3_804f414, 256
  %v1_804f41a = icmp eq i1 %v9_804f414, false
  br i1 %v1_804f41a, label %dec_label_pc_804f37d, label %dec_label_pc_804f420

dec_label_pc_804f420:                             ; preds = %dec_label_pc_804f414
  %v1_804f420 = add i32 %v2_804f36c, 8
  %v2_804f420 = inttoptr i32 %v1_804f420 to i16*
  %v3_804f420 = load i16, i16* %v2_804f420, align 2
  %v4_804f420 = zext i16 %v3_804f420 to i32
  %v6_804f420 = and i32 %v5_804f420, -65536
  %v7_804f420 = or i32 %v4_804f420, %v6_804f420
  store i32 %v7_804f420, i32* %edx.global-to-local, align 4
  %v2_804f426 = call i16 @llvm.bswap.i16(i16 %v3_804f420)
  %v3_804f426 = zext i16 %v2_804f426 to i32
  %v6_804f426 = or i32 %v3_804f426, %v6_804f420
  store i32 %v6_804f426, i32* %eax.global-to-local, align 4
  %v10_804f42a = icmp eq i16 %v3_804f420, 1024
  br i1 %v10_804f42a, label %dec_label_pc_804f443, label %dec_label_pc_804f430

dec_label_pc_804f430:                             ; preds = %dec_label_pc_804f420, %dec_label_pc_804f443
  %v0_804f31d.pre = phi i32 [ %v0_804f322129, %dec_label_pc_804f420 ], [ %v0_804f31d.pre.pre, %dec_label_pc_804f443 ]
  %v0_804f43b = phi i32 [ %v1_804f374, %dec_label_pc_804f420 ], [ %v0_804f43b.pre, %dec_label_pc_804f443 ]
  %v0_804f430 = phi i32 [ %v7_804f420, %dec_label_pc_804f420 ], [ %v7_804f4a7, %dec_label_pc_804f443 ]
  %v1_804f430 = trunc i32 %v0_804f430 to i16
  %v2_804f430 = call i16 @llvm.bswap.i16(i16 %v1_804f430)
  %v3_804f430 = zext i16 %v2_804f430 to i32
  %v5_804f430 = and i32 %v0_804f430, -65536
  %v6_804f430 = or i32 %v3_804f430, %v5_804f430
  store i32 %v6_804f430, i32* %edx.global-to-local, align 4
  store i32 %v3_804f430, i32* %eax.global-to-local, align 4
  %v2_804f43b = add i32 %v3_804f430, %v0_804f43b
  br label %dec_label_pc_804f31d.backedge

dec_label_pc_804f443:                             ; preds = %dec_label_pc_804f420
  %v2_804f443 = inttoptr i32 %v1_804f374 to i8*
  %v3_804f443 = load i8, i8* %v2_804f443, align 1
  %v4_804f443 = zext i8 %v3_804f443 to i32
  %v6_804f443 = and i32 %v6_804f426, -256
  %v7_804f443 = or i32 %v4_804f443, %v6_804f443
  store i32 %v7_804f443, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v3_804f448 = add i32 %v0_804f322129, 4280
  %v4_804f448 = inttoptr i32 %v3_804f448 to i8*
  store i8 %v3_804f443, i8* %v4_804f448, align 1
  %v0_804f44f = load i32, i32* @edi, align 4
  %v1_804f44f = add i32 %v0_804f44f, 1
  %v2_804f44f = inttoptr i32 %v1_804f44f to i8*
  %v3_804f44f = load i8, i8* %v2_804f44f, align 1
  %v4_804f44f = zext i8 %v3_804f44f to i32
  %v5_804f44f = load i32, i32* %eax.global-to-local, align 4
  %v6_804f44f = and i32 %v5_804f44f, -256
  %v7_804f44f = or i32 %v6_804f44f, %v4_804f44f
  store i32 %v7_804f44f, i32* %eax.global-to-local, align 4
  %v2_804f452 = load i32, i32* @esp, align 4
  %v3_804f452 = add i32 %v2_804f452, 4281
  %v4_804f452 = inttoptr i32 %v3_804f452 to i8*
  store i8 %v3_804f44f, i8* %v4_804f452, align 1
  %v0_804f459 = load i32, i32* @edi, align 4
  %v1_804f459 = add i32 %v0_804f459, 2
  %v2_804f459 = inttoptr i32 %v1_804f459 to i8*
  %v3_804f459 = load i8, i8* %v2_804f459, align 1
  %v4_804f459 = zext i8 %v3_804f459 to i32
  %v5_804f459 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f459 = and i32 %v5_804f459, -256
  %v7_804f459 = or i32 %v6_804f459, %v4_804f459
  store i32 %v7_804f459, i32* %eax.global-to-local, align 4
  %v2_804f45c = load i32, i32* @esp, align 4
  %v3_804f45c = add i32 %v2_804f45c, 4282
  %v4_804f45c = inttoptr i32 %v3_804f45c to i8*
  store i8 %v3_804f459, i8* %v4_804f45c, align 1
  %v0_804f463 = load i32, i32* @edi, align 4
  %v1_804f463 = add i32 %v0_804f463, 3
  %v2_804f463 = inttoptr i32 %v1_804f463 to i8*
  %v3_804f463 = load i8, i8* %v2_804f463, align 1
  %v4_804f463 = zext i8 %v3_804f463 to i32
  %v5_804f463 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f463 = and i32 %v5_804f463, -256
  %v7_804f463 = or i32 %v6_804f463, %v4_804f463
  store i32 %v7_804f463, i32* %eax.global-to-local, align 4
  %v2_804f466 = load i32, i32* @esp, align 4
  %v3_804f466 = add i32 %v2_804f466, 4283
  %v4_804f466 = inttoptr i32 %v3_804f466 to i8*
  store i8 %v3_804f463, i8* %v4_804f466, align 1
  %v0_804f46d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f46d = load i32, i32* @esp, align 4
  %v2_804f46d = add i32 %v1_804f46d, -4
  %v3_804f46d = inttoptr i32 %v2_804f46d to i32*
  store i32 %v0_804f46d, i32* %v3_804f46d, align 4
  %v0_804f46e = load i32, i32* %eax.global-to-local, align 4
  %v2_804f46e = add i32 %v1_804f46d, -8
  %v3_804f46e = inttoptr i32 %v2_804f46e to i32*
  store i32 %v0_804f46e, i32* %v3_804f46e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804f471 = inttoptr i32 %v1_804f46d to i32*
  %v3_804f471 = load i32, i32* %v2_804f471, align 4
  store i32 %v3_804f471, i32* @edx, align 4
  %v1_804f475 = inttoptr i32 %v3_804f471 to i8*
  %v2_804f475 = load i8, i8* %v1_804f475, align 1
  %v3_804f475 = zext i8 %v2_804f475 to i32
  %v1_804f477 = mul nuw nsw i32 %v3_804f475, 4
  %v2_804f477 = add nuw nsw i32 %v1_804f477, 4
  store i32 %v2_804f477, i32* %eax.global-to-local, align 4
  %v2_804f47e = add i32 %v1_804f46d, -12
  %v3_804f47e = inttoptr i32 %v2_804f47e to i32*
  store i32 %v2_804f477, i32* %v3_804f47e, align 4
  %v0_804f47f = load i32, i32* @edx, align 4
  %v1_804f47f = add i32 %v0_804f47f, 4
  %v2_804f47f = inttoptr i32 %v1_804f47f to i32*
  %v3_804f47f = load i32, i32* %v2_804f47f, align 4
  store i32 %v3_804f47f, i32* %eax.global-to-local, align 4
  %v2_804f482 = add i32 %v1_804f46d, -16
  %v3_804f482 = inttoptr i32 %v2_804f482 to i32*
  store i32 %v3_804f47f, i32* %v3_804f482, align 4
  %v0_804f483 = call i32 @function_80538ac()
  store i32 %v0_804f483, i32* %eax.global-to-local, align 4
  %v0_804f488 = load i32, i32* @esp, align 4
  %v1_804f488 = add i32 %v0_804f488, 16
  %v2_804f488 = inttoptr i32 %v1_804f488 to i32*
  %v3_804f488 = load i32, i32* %v2_804f488, align 4
  store i32 %v3_804f488, i32* %ecx.global-to-local, align 4
  %v1_804f48c = inttoptr i32 %v3_804f488 to i8*
  %v2_804f48c = load i8, i8* %v1_804f48c, align 1
  %v3_804f48c = zext i8 %v2_804f48c to i32
  %v4_804f48c = load i32, i32* @edx, align 4
  %v5_804f48c = and i32 %v4_804f48c, -256
  %v6_804f48c = or i32 %v5_804f48c, %v3_804f48c
  store i32 %v6_804f48c, i32* %edx.global-to-local, align 4
  %v2_804f48e = add i32 %v3_804f488, 4
  %v3_804f48e = inttoptr i32 %v2_804f48e to i32*
  store i32 %v0_804f483, i32* %v3_804f48e, align 4
  %v0_804f491 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f491 = urem i32 %v0_804f491, 256
  %v2_804f491 = load i32, i32* @ebx, align 4
  %v3_804f491 = and i32 %v2_804f491, -256
  %v4_804f491 = or i32 %v3_804f491, %v1_804f491
  store i32 %v4_804f491, i32* @ebx, align 4
  %v0_804f493 = load i32, i32* @esp, align 4
  %v1_804f493 = add i32 %v0_804f493, 4296
  %v2_804f493 = inttoptr i32 %v1_804f493 to i32*
  %v3_804f493 = load i32, i32* %v2_804f493, align 4
  store i32 %v3_804f493, i32* %ecx.global-to-local, align 4
  %v1_804f49a = add i32 %v0_804f491, 1
  store i32 %v1_804f49a, i32* %edx.global-to-local, align 4
  %v3_804f49b = mul i32 %v4_804f491, 4
  %v4_804f49b = add i32 %v3_804f49b, %v0_804f483
  %v5_804f49b = inttoptr i32 %v4_804f49b to i32*
  store i32 %v3_804f493, i32* %v5_804f49b, align 4
  %v0_804f49e = load i32, i32* @esp, align 4
  %v1_804f49e = add i32 %v0_804f49e, 16
  %v2_804f49e = inttoptr i32 %v1_804f49e to i32*
  %v3_804f49e = load i32, i32* %v2_804f49e, align 4
  store i32 %v3_804f49e, i32* %eax.global-to-local, align 4
  %v0_804f4a5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f4a5 = trunc i32 %v0_804f4a5 to i8
  %v3_804f4a5 = inttoptr i32 %v3_804f49e to i8*
  store i8 %v1_804f4a5, i8* %v3_804f4a5, align 1
  %v0_804f4a7 = load i32, i32* @esi, align 4
  %v1_804f4a7 = add i32 %v0_804f4a7, 8
  %v2_804f4a7 = inttoptr i32 %v1_804f4a7 to i16*
  %v3_804f4a7 = load i16, i16* %v2_804f4a7, align 2
  %v4_804f4a7 = zext i16 %v3_804f4a7 to i32
  %v5_804f4a7 = load i32, i32* %edx.global-to-local, align 4
  %v6_804f4a7 = and i32 %v5_804f4a7, -65536
  %v7_804f4a7 = or i32 %v6_804f4a7, %v4_804f4a7
  store i32 %v7_804f4a7, i32* %edx.global-to-local, align 4
  %v0_804f43b.pre = load i32, i32* @edi, align 4
  %v0_804f31d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f430

; uselistorder directives
  uselistorder i32 %v7_804f4a7, { 1, 0 }
  uselistorder i32 %v0_804f491, { 1, 0 }
  uselistorder i32 %v3_804f430, { 0, 2, 1 }
  uselistorder i32 %v0_804f430, { 1, 0 }
  uselistorder i32 %v6_804f386, { 1, 0 }
  uselistorder i32 %v3_804f40c, { 1, 0 }
  uselistorder i32 %v1_804f408, { 1, 2, 0 }
  uselistorder i32 %v6_804f333, { 2, 1, 0 }
  uselistorder i32 %v3_804f400, { 1, 0 }
  uselistorder i32 %v1_804f3fc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804f3d6, { 1, 0 }
  uselistorder i32 %v0_804f322, { 2, 1, 0 }
  uselistorder i32 %v6_804f3b3, { 1, 0 }
  uselistorder i32 %v2_804f3b1, { 1, 2, 0 }
  uselistorder i32 %v3_804f3a6, { 1, 0 }
  uselistorder i32 %v4_804f386, { 1, 0, 2 }
  uselistorder i32 %v0_804f409, { 2, 0, 1 }
  uselistorder i32 %v0_804f40c, { 1, 0 }
  uselistorder i32 %v1_804f374, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 %v6_804f364, { 0, 2, 1 }
  uselistorder i32 %v2_804f362, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804f357, { 1, 0 }
  uselistorder i32 %v4_804f333, { 1, 0, 2 }
  uselistorder i32 %v0_804f3fd, { 2, 0, 1 }
  uselistorder i32 %v0_804f400, { 1, 0 }
  uselistorder i32 %v6_804f33318, { 1, 0, 2 }
  uselistorder i32 %v0_804f32a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804f322129, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_804f322124, { 0, 2, 1 }
  uselistorder i32 %v1_804f2f3, { 1, 0 }
  uselistorder i32 %v0_804f2ef, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v2_804f2ea, { 1, 0, 2 }
  uselistorder i32 %v0_804f2bd, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_804f27e, { 1, 0 }
  uselistorder i32 %v0_804f22f, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %v0_804f22a, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f1f7, { 1, 0 }
  uselistorder i32 %v2_804f1f4, { 1, 0 }
  uselistorder i32 %v0_804f1f0, { 1, 0 }
  uselistorder i32 %v1_804f1dd, { 2, 0, 1, 3 }
  uselistorder i32 %v12_804f1d1, { 1, 0 }
  uselistorder i32 %v0_804f1ce, { 2, 0, 1 }
  uselistorder i32 %v0_804f1b9, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804f197, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_804f178, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v4_804f173, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f158, { 1, 0 }
  uselistorder i32 %v2_804f0df, { 1, 0 }
  uselistorder i32 %v1_804f0d1, { 1, 0 }
  uselistorder i32 %v1_804f073, { 1, 0 }
  uselistorder i8 %v2_804f062, { 2, 0, 3, 1 }
  uselistorder i32 %v0_804f05c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804f030, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 14, 2, 3, 13, 4, 5, 6, 7, 8, 10, 9, 11, 12 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 27, 16, 17, 18, 19, 20, 21, 22, 60, 24, 25, 26, 58, 59, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i16 -1, { 2, 3, 0, 1 }
  uselistorder i32 4312, { 1, 0 }
  uselistorder i32 4308, { 1, 0 }
  uselistorder i32 4300, { 1, 0 }
  uselistorder i32 ()* @function_8054260, { 1, 0 }
  uselistorder i32 (i8*)* @function_8052110, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 60, 27, 54, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 0, 57, 58, 59 }
  uselistorder label %dec_label_pc_804f430, { 1, 0 }
  uselistorder label %dec_label_pc_804f3d6, { 1, 0 }
  uselistorder label %dec_label_pc_804f31d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804f38c, { 1, 0 }
  uselistorder label %dec_label_pc_804f38c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f339, { 1, 0 }
  uselistorder label %dec_label_pc_804f339.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f32a, { 1, 0 }
  uselistorder label %dec_label_pc_804f2b4, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f16c, { 1, 0 }
  uselistorder label %dec_label_pc_804f062, { 1, 0 }
}

define i32 @function_804f4d0() local_unnamed_addr {
dec_label_pc_804f4d0:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_804f4d0 = load i32, i32* @ebx, align 4
  %v0_804f4d1 = load i32, i32* @eax, align 4
  store i32 %v0_804f4d1, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804f4f6 = add i32 %v0_804f4d1, 4
  %v2_804f4f6 = inttoptr i32 %v1_804f4f6 to i32*
  %v3_804f4f6 = load i32, i32* %v2_804f4f6, align 4
  %v10_804f4f9 = icmp eq i32 %v3_804f4f6, -1
  br i1 %v10_804f4f9, label %dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge, label %dec_label_pc_804f4fe

dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge: ; preds = %dec_label_pc_804f4d0
  br label %dec_label_pc_804f50a

dec_label_pc_804f4fe:                             ; preds = %dec_label_pc_804f4d0
  %v1_804f502 = call i32 @function_80526b1(i32 %v3_804f4f6)
  br label %dec_label_pc_804f50a

dec_label_pc_804f50a:                             ; preds = %dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge, %dec_label_pc_804f4fe
  %v0_804f50a = phi i32 [ -1, %dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge ], [ %v1_804f502, %dec_label_pc_804f4fe ]
  %v4_804f511 = call i32 @function_8052ea5(i32 2, i32 1, i32 0, i32 %v0_804f50a)
  %v1_804f519 = load i32, i32* @ebx, align 4
  %v2_804f519 = add i32 %v1_804f519, 4
  %v3_804f519 = inttoptr i32 %v2_804f519 to i32*
  store i32 %v4_804f511, i32* %v3_804f519, align 4
  %v8_804f51c = icmp eq i32 %v4_804f511, -1
  br i1 %v8_804f51c, label %dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge, label %dec_label_pc_804f51f

dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge: ; preds = %dec_label_pc_804f50a
  br label %dec_label_pc_804f593

dec_label_pc_804f51f:                             ; preds = %dec_label_pc_804f50a
  %v0_804f521 = load i32, i32* @ebx, align 4
  %v1_804f521 = add i32 %v0_804f521, 28
  store i32 %v1_804f521, i32* @eax, align 4
  %v1_804f529 = add i32 %v0_804f521, 24
  %v2_804f529 = inttoptr i32 %v1_804f529 to i32*
  store i32 0, i32* %v2_804f529, align 4
  %v0_804f530 = load i32, i32* @eax, align 4
  %v2_804f531 = call i32 @function_80521a0(i32 %v0_804f530, i32 512)
  %v0_804f539 = load i32, i32* @ebx, align 4
  %v1_804f539 = add i32 %v0_804f539, 4
  %v2_804f539 = inttoptr i32 %v1_804f539 to i32*
  %v3_804f539 = load i32, i32* %v2_804f539, align 4
  %v3_804f541 = call i32 @function_80525ed(i32 %v3_804f539, i32 3, i32 0)
  %v0_804f549 = load i32, i32* @ebx, align 4
  %v1_804f549 = add i32 %v0_804f549, 4
  %v2_804f549 = inttoptr i32 %v1_804f549 to i32*
  %v3_804f549 = load i32, i32* %v2_804f549, align 4
  %v12_804f54c = or i32 %v3_804f541, 2048
  %v3_804f553 = call i32 @function_80525ed(i32 %v3_804f549, i32 4, i32 %v12_804f54c)
  %v0_804f558 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804f56e = load i32, i32* @global_var_8056150.24, align 16
  %v2_804f573 = add i32 %v0_804f558, 8
  %v3_804f573 = inttoptr i32 %v2_804f573 to i32*
  store i32 %v0_804f56e, i32* %v3_804f573, align 4
  %v2_804f576 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804f57d = load i32, i32* @ebx, align 4
  %v1_804f57d = add i32 %v0_804f57d, 4
  %v2_804f57d = inttoptr i32 %v1_804f57d to i32*
  %v3_804f57d = load i32, i32* %v2_804f57d, align 4
  store i32 %v3_804f57d, i32* %edx.global-to-local, align 4
  %v1_804f580 = add i32 %v0_804f57d, 12
  %v2_804f580 = inttoptr i32 %v1_804f580 to i32*
  store i32 1, i32* %v2_804f580, align 4
  %v0_804f58a = load i32, i32* %edx.global-to-local, align 4
  %v3_804f58b = call i32 @function_8052cca(i32 %v0_804f58a, i32 %v2_804f576, i32 16)
  br label %dec_label_pc_804f593

dec_label_pc_804f593:                             ; preds = %dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge, %dec_label_pc_804f51f
  %v0_804f597 = phi i32 [ 0, %dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge ], [ %v3_804f58b, %dec_label_pc_804f51f ]
  store i32 %v0_804f4d0, i32* @ebx, align 4
  ret i32 %v0_804f597

; uselistorder directives
  uselistorder i32 %v3_804f4f6, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_80521a0, { 6, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f593, { 1, 0 }
  uselistorder label %dec_label_pc_804f50a, { 1, 0 }
}

define i32 @function_805051a() local_unnamed_addr {
dec_label_pc_805051a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  br label %dec_label_pc_8050a5f

dec_label_pc_8050a5f:                             ; preds = %dec_label_pc_8050a48, %dec_label_pc_805051a
  %v0_805051a = load i32, i32* @global_var_8056150.24, align 16
  store i32 %v0_805051a, i32* @esi, align 4
  %v0_8050520 = load i32, i32* @esp, align 4
  %v1_8050520 = add i32 %v0_8050520, 24
  %v2_8050520 = inttoptr i32 %v1_8050520 to i32*
  %v3_8050520 = load i32, i32* %v2_8050520, align 4
  %v15_8050520 = icmp eq i32 %v3_8050520, %v0_805051a
  br i1 %v15_8050520, label %dec_label_pc_80507db, label %dec_label_pc_805052a

dec_label_pc_805052a:                             ; preds = %dec_label_pc_8050a5f
  %v1_805052a = add i32 %v0_8050520, 1828
  store i32 %v1_805052a, i32* @ebp, align 4
  %v1_8050531 = add i32 %v0_8050520, 1868
  %v2_8050531 = inttoptr i32 %v1_8050531 to i32*
  store i32 0, i32* %v2_8050531, align 4
  %v0_80506e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80506e0

dec_label_pc_8050541:                             ; preds = %dec_label_pc_8050754
  %v11_8050541 = icmp eq i8 %v2_8050737, -84
  br i1 %v11_8050541, label %dec_label_pc_80507a0, label %dec_label_pc_805054a

dec_label_pc_805054a:                             ; preds = %dec_label_pc_8050541
  %v10_805054a = icmp eq i8 %v2_8050737, 100
  br i1 %v10_805054a, label %dec_label_pc_805054a.dec_label_pc_805076b_crit_edge, label %dec_label_pc_8050553

dec_label_pc_805054a.dec_label_pc_805076b_crit_edge: ; preds = %dec_label_pc_805054a
  %.pre = trunc i32 %v2_805072e to i8
  br label %dec_label_pc_805076b

dec_label_pc_8050553:                             ; preds = %dec_label_pc_8050762, %dec_label_pc_805054a
  %v11_8050553 = icmp eq i8 %v2_8050737, -87
  br i1 %v11_8050553, label %dec_label_pc_80507bb, label %dec_label_pc_805055c

dec_label_pc_805055c:                             ; preds = %dec_label_pc_80507b2, %dec_label_pc_8050553
  %v0_805055c = phi i32 [ %v0_80507b2, %dec_label_pc_80507b2 ], [ %v5_805072c, %dec_label_pc_8050553 ]
  %v0_80505e469 = phi i32 [ %v0_80507a9, %dec_label_pc_80507b2 ], [ %v2_805072e, %dec_label_pc_8050553 ]
  %v1_805055c = trunc i32 %v0_805055c to i8
  %v11_805055c = icmp eq i8 %v1_805055c, -58
  br i1 %v11_805055c, label %dec_label_pc_8050782, label %dec_label_pc_8050565

dec_label_pc_8050565:                             ; preds = %dec_label_pc_80507bb, %dec_label_pc_8050779, %dec_label_pc_805055c
  %v0_8050565 = phi i32 [ %v0_805056576, %dec_label_pc_80507bb ], [ %v5_805072c, %dec_label_pc_8050779 ], [ %v0_805055c, %dec_label_pc_805055c ]
  %v0_80505e468 = phi i32 [ %v0_80507bb, %dec_label_pc_80507bb ], [ %v2_805072e, %dec_label_pc_8050779 ], [ %v0_80505e469, %dec_label_pc_805055c ]
  %v1_8050565 = trunc i32 %v0_8050565 to i8
  %tmp283 = icmp ult i8 %v1_8050565, -32
  br i1 %tmp283, label %dec_label_pc_805056e, label %dec_label_pc_8050721.preheader

dec_label_pc_805056e:                             ; preds = %dec_label_pc_805076b, %dec_label_pc_80507a0.dec_label_pc_805056e_crit_edge, %dec_label_pc_805078b, %dec_label_pc_8050565, %dec_label_pc_8050782
  %v0_80505e4 = phi i32 [ %v0_80507a9, %dec_label_pc_80507a0.dec_label_pc_805056e_crit_edge ], [ %v0_805078b, %dec_label_pc_805078b ], [ %v0_80505e468, %dec_label_pc_8050565 ], [ %v0_805078b, %dec_label_pc_8050782 ], [ %v2_805072e, %dec_label_pc_805076b ]
  %v0_80505f2 = phi i32 [ %v0_805056e.pre, %dec_label_pc_80507a0.dec_label_pc_805056e_crit_edge ], [ %v0_805056e65, %dec_label_pc_805078b ], [ %v0_8050565, %dec_label_pc_8050565 ], [ %v0_805056e65, %dec_label_pc_8050782 ], [ %v5_805072c, %dec_label_pc_805076b ]
  %v1_805056e = add i32 %v0_80505f2, -6
  store i32 %v1_805056e, i32* %eax.global-to-local, align 4
  %v1_8050571 = trunc i32 %v1_805056e to i8
  %tmp284 = or i8 %v1_8050571, 1
  %tmp285 = icmp eq i8 %tmp284, 1
  br i1 %tmp285, label %dec_label_pc_8050721.preheader, label %dec_label_pc_8050579

dec_label_pc_8050579:                             ; preds = %dec_label_pc_805056e
  %v1_8050579 = trunc i32 %v0_80505f2 to i8
  %v10_8050579 = icmp eq i8 %v1_8050579, 11
  br i1 %v10_8050579, label %dec_label_pc_8050721.preheader, label %dec_label_pc_8050582

dec_label_pc_8050582:                             ; preds = %dec_label_pc_8050579
  %v10_8050582 = icmp eq i8 %v1_8050579, 21
  br i1 %v10_8050582, label %dec_label_pc_8050721.preheader, label %dec_label_pc_805058b

dec_label_pc_805058b:                             ; preds = %dec_label_pc_8050582
  %v10_805058b = icmp eq i8 %v1_8050579, 22
  br i1 %v10_805058b, label %dec_label_pc_8050721.preheader, label %dec_label_pc_8050594

dec_label_pc_8050594:                             ; preds = %dec_label_pc_805058b
  %v10_8050594 = icmp eq i8 %v1_8050579, 26
  br i1 %v10_8050594, label %dec_label_pc_8050721.preheader, label %dec_label_pc_805059d

dec_label_pc_805059d:                             ; preds = %dec_label_pc_8050594
  %v10_805059d = icmp eq i8 %v1_8050579, 28
  br i1 %v10_805059d, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80505a6

dec_label_pc_80505a6:                             ; preds = %dec_label_pc_805059d
  %v10_80505a6 = icmp eq i8 %v1_8050579, 29
  br i1 %v10_80505a6, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80505af

dec_label_pc_80505af:                             ; preds = %dec_label_pc_80505a6
  %v10_80505af = icmp eq i8 %v1_8050579, 30
  br i1 %v10_80505af, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80505b8

dec_label_pc_80505b8:                             ; preds = %dec_label_pc_80505af
  %v10_80505b8 = icmp eq i8 %v1_8050579, 33
  br i1 %v10_80505b8, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80505c1

dec_label_pc_80505c1:                             ; preds = %dec_label_pc_80505b8
  %v10_80505c1 = icmp eq i8 %v1_8050579, 55
  br i1 %v10_80505c1, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80505ca

dec_label_pc_80505ca:                             ; preds = %dec_label_pc_80505c1
  %v11_80505ca = icmp eq i8 %v1_8050579, -42
  br i1 %v11_80505ca, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80505d3

dec_label_pc_80505d3:                             ; preds = %dec_label_pc_80505ca
  %v11_80505d3 = icmp eq i8 %v1_8050579, -41
  br i1 %v11_80505d3, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80505dc

dec_label_pc_80505dc:                             ; preds = %dec_label_pc_80505d3
  %v0_80505de = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805612a.25 to i16*), align 4
  %v1_80505e4 = mul i32 %v0_80505e4, 65536
  %v2_80505ef = and i32 %v1_80505e4, 16711680
  %v2_80505f2 = mul i32 %v0_80505f2, 16777216
  %v1_80505de = mul i32 %v0_80505de, 256
  %v2_80505f8 = or i32 %v2_80505ef, %v2_80505f2
  %v0_80505fa = load i32, i32* @edi, align 4
  %v1_80505fc = urem i32 %v0_80505fa, 256
  store i32 %v1_80505fc, i32* %eax.global-to-local, align 4
  %v2_8050601 = or i32 %v1_80505fc, %v2_80505f8
  store i32 %v2_8050601, i32* %ecx.global-to-local, align 4
  %v2_8050603 = or i32 %v1_80505fc, %v1_80505de
  %v1_8050605 = load i32, i32* @esp, align 4
  %v2_8050605 = add i32 %v1_8050605, -4
  %v3_8050605 = inttoptr i32 %v2_8050605 to i32*
  store i32 %v2_8050601, i32* %v3_8050605, align 4
  %v1_8050606 = trunc i32 %v2_8050603 to i16
  %v2_8050606 = call i16 @llvm.bswap.i16(i16 %v1_8050606)
  %v3_8050606 = zext i16 %v2_8050606 to i32
  %v1_805060a = udiv i32 %v2_80505f8, 65536
  %v2_805060a = mul nuw i32 %v3_8050606, 65536
  %v1_805060d = trunc i32 %v1_805060a to i16
  %v2_805060d = call i16 @llvm.bswap.i16(i16 %v1_805060d)
  %v3_805060d = zext i16 %v2_805060d to i32
  %v6_805060d = or i32 %v2_805060a, %v3_805060d
  store i32 %v6_805060d, i32* %edx.global-to-local, align 4
  %v0_8050611 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050611 = add i32 %v1_8050605, -8
  %v3_8050611 = inttoptr i32 %v2_8050611 to i32*
  store i32 %v0_8050611, i32* %v3_8050611, align 4
  %v0_8050612 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050612, i32* @global_var_8056130.26, align 16
  %v1_8050618 = add i32 %v1_8050605, -12
  %v2_8050618 = inttoptr i32 %v1_8050618 to i32*
  store i32 20, i32* %v2_8050618, align 4
  %v1_805061a = add i32 %v1_8050605, -16
  %v2_805061a = inttoptr i32 %v1_805061a to i32*
  store i32 ptrtoint (i32* @global_var_8056120.27 to i32), i32* %v2_805061a, align 4
  %v0_805061f = call i32 @function_804d4b0()
  %v1_805061f = trunc i32 %v0_805061f to i16
  store i32 %v0_805061f, i32* %eax.global-to-local, align 4
  %v0_8050624 = load i32, i32* @esp, align 4
  %v1_8050624 = add i32 %v0_8050624, 1884
  %v2_8050624 = inttoptr i32 %v1_8050624 to i32*
  %v3_8050624 = load i32, i32* %v2_8050624, align 4
  store i16 %v1_805061f, i16* bitcast (i32* @global_var_805612a.25 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_805063a = ashr i32 %v3_8050624, 31
  %v2_8050640 = zext i32 %v3_8050624 to i64
  %v4_8050640 = zext i32 %v2_805063a to i64
  %v5_8050640 = mul nuw i64 %v4_8050640, 4294967296
  %v6_8050640 = or i64 %v5_8050640, %v2_8050640
  %v10_8050640 = srem i64 %v6_8050640, 10
  %v11_8050640 = trunc i64 %v10_8050640 to i32
  store i32 %v11_8050640, i32* %edx.global-to-local, align 4
  %v1_8050642 = icmp eq i32 %v11_8050640, 0
  %v1_8050644 = icmp eq i1 %v1_8050642, false
  %. = select i1 %v1_8050644, i16 5888, i16 4873
  store i16 %., i16* @global_var_8056136.28, align 2
  %v0_8050653 = load i32, i32* @global_var_8056130.26, align 16
  store i32 %v0_8050653, i32* %eax.global-to-local, align 4
  %v1_8050658 = add i32 %v0_8050624, 12
  %v2_8050658 = inttoptr i32 %v1_8050658 to i32*
  store i32 20, i32* %v2_8050658, align 4
  %v0_805065a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805065a, i32* @global_var_8056138.29, align 8
  %v1_805065f = add i32 %v0_8050624, 8
  %v2_805065f = inttoptr i32 %v1_805065f to i32*
  store i32 5120, i32* %v2_805065f, align 4
  store i16 0, i16* bitcast (i32* @global_var_8056144.30 to i16*), align 4
  %v1_805066d = add i32 %v0_8050624, 4
  %v2_805066d = inttoptr i32 %v1_805066d to i32*
  store i32 ptrtoint (i32* @global_var_8056134.31 to i32), i32* %v2_805066d, align 4
  %v2_8050672 = inttoptr i32 %v0_8050624 to i32*
  store i32 ptrtoint (i32* @global_var_8056120.27 to i32), i32* %v2_8050672, align 4
  %v0_8050677 = call i32 @function_804d500()
  %v1_8050677 = trunc i32 %v0_8050677 to i16
  store i16 %v1_8050677, i16* bitcast (i32* @global_var_8056144.30 to i16*), align 4
  %v0_8050682 = load i32, i32* @global_var_8056130.26, align 16
  store i32 %v0_8050682, i32* %eax.global-to-local, align 4
  %v1_8050687 = load i32, i32* @esp, align 4
  %v2_8050687 = add i32 %v1_8050687, 1848
  %v3_8050687 = inttoptr i32 %v2_8050687 to i32*
  store i32 %v0_8050682, i32* %v3_8050687, align 4
  %v0_805068e = load i16, i16* @global_var_8056136.28, align 2
  %v1_805068e = zext i16 %v0_805068e to i32
  %v2_805068e = load i32, i32* %eax.global-to-local, align 4
  %v3_805068e = and i32 %v2_805068e, -65536
  %v4_805068e = or i32 %v3_805068e, %v1_805068e
  store i32 %v4_805068e, i32* %eax.global-to-local, align 4
  %v0_8050694 = load i32, i32* @esp, align 4
  %v1_8050694 = add i32 %v0_8050694, 1844
  %v2_8050694 = inttoptr i32 %v1_8050694 to i16*
  store i16 2, i16* %v2_8050694, align 2
  %v0_805069e = load i32, i32* %eax.global-to-local, align 4
  %v1_805069e = trunc i32 %v0_805069e to i16
  %v2_805069e = load i32, i32* @esp, align 4
  %v3_805069e = add i32 %v2_805069e, 1846
  %v4_805069e = inttoptr i32 %v3_805069e to i16*
  store i16 %v1_805069e, i16* %v4_805069e, align 2
  %v0_80506a6 = load i32, i32* @global_var_805619c.32, align 4
  store i32 %v0_80506a6, i32* @edi, align 4
  %v0_80506ac = load i32, i32* @esp, align 4
  %v1_80506ac = inttoptr i32 %v0_80506ac to i32*
  %v2_80506ac = load i32, i32* %v1_80506ac, align 4
  store i32 %v2_80506ac, i32* %eax.global-to-local, align 4
  %v3_80506ac = add i32 %v0_80506ac, 4
  %v1_80506ad = inttoptr i32 %v3_80506ac to i32*
  %v2_80506ad = load i32, i32* %v1_80506ad, align 4
  store i32 %v2_80506ad, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_80506ad, align 4
  %v0_80506b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80506b0, i32* %v1_80506ac, align 4
  %v1_80506b1 = add i32 %v0_80506ac, -4
  %v2_80506b1 = inttoptr i32 %v1_80506b1 to i32*
  store i32 16384, i32* %v2_80506b1, align 4
  %v1_80506b6 = add i32 %v0_80506ac, -8
  %v2_80506b6 = inttoptr i32 %v1_80506b6 to i32*
  store i32 40, i32* %v2_80506b6, align 4
  %v1_80506b8 = add i32 %v0_80506ac, -12
  %v2_80506b8 = inttoptr i32 %v1_80506b8 to i32*
  store i32 ptrtoint (i32* @global_var_8056120.27 to i32), i32* %v2_80506b8, align 4
  %v0_80506bd = load i32, i32* @edi, align 4
  %v2_80506bd = add i32 %v0_80506ac, -16
  %v3_80506bd = inttoptr i32 %v2_80506bd to i32*
  store i32 %v0_80506bd, i32* %v3_80506bd, align 4
  %v0_80506be = call i32 @function_8052e27()
  store i32 %v0_80506be, i32* %eax.global-to-local, align 4
  %v0_80506c3 = load i32, i32* @esp, align 4
  %v1_80506c3 = add i32 %v0_80506c3, 1900
  %v2_80506c3 = inttoptr i32 %v1_80506c3 to i32*
  %v3_80506c3 = load i32, i32* %v2_80506c3, align 4
  %v1_80506ca = add i32 %v3_80506c3, 1
  store i32 %v1_80506ca, i32* %eax.global-to-local, align 4
  store i32 %v1_80506ca, i32* %v2_80506c3, align 4
  %v0_80506d2 = load i32, i32* @esp, align 4
  %v1_80506d2 = add i32 %v0_80506d2, 32
  %v0_80506d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80506d5 = add i32 %v0_80506d5, -319
  %v6_80506d5 = sub i32 318, %v0_80506d5
  %v7_80506d5 = and i32 %v6_80506d5, %v0_80506d5
  %v8_80506d5 = icmp slt i32 %v7_80506d5, 0
  %v9_80506d5 = icmp eq i32 %v1_80506d5, 0
  %v10_80506d5 = icmp slt i32 %v1_80506d5, 0
  %v3_80506da = icmp eq i1 %v10_80506d5, %v8_80506d5
  %v4_80506da = icmp eq i1 %v9_80506d5, false
  %v5_80506da = and i1 %v4_80506da, %v3_80506da
  br i1 %v5_80506da, label %dec_label_pc_80507d7, label %dec_label_pc_80506e0

dec_label_pc_80506e0:                             ; preds = %dec_label_pc_80505dc, %dec_label_pc_805052a
  %v0_80506e0 = phi i32 [ %v1_80506d2, %dec_label_pc_80505dc ], [ %v0_80506e0.pre, %dec_label_pc_805052a ]
  %v1_80506e0 = add i32 %v0_80506e0, 1828
  %v2_80506e0 = inttoptr i32 %v1_80506e0 to i32*
  store i32 0, i32* %v2_80506e0, align 4
  %v0_80506eb = load i32, i32* @esp, align 4
  %v1_80506eb = add i32 %v0_80506eb, 1832
  %v2_80506eb = inttoptr i32 %v1_80506eb to i32*
  store i32 0, i32* %v2_80506eb, align 4
  %v0_80506f6 = load i32, i32* @esp, align 4
  %v1_80506f6 = add i32 %v0_80506f6, 1836
  %v2_80506f6 = inttoptr i32 %v1_80506f6 to i32*
  store i32 0, i32* %v2_80506f6, align 4
  %v0_8050701 = load i32, i32* @esp, align 4
  %v1_8050701 = add i32 %v0_8050701, 1840
  %v2_8050701 = inttoptr i32 %v1_8050701 to i32*
  store i32 0, i32* %v2_8050701, align 4
  %v1_805070c = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  %v2_805070c = trunc i32 %v1_805070c to i16
  store i16 %v2_805070c, i16* bitcast (i32* @global_var_8056124.33 to i16*), align 4
  %v0_8050717 = load i32, i32* @global_var_805617c.34, align 4
  store i32 %v0_8050717, i32* %eax.global-to-local, align 4
  store i32 %v0_8050717, i32* @global_var_805612c.35, align 4
  br label %dec_label_pc_8050721.preheader

dec_label_pc_8050721.preheader:                   ; preds = %dec_label_pc_80506e0, %dec_label_pc_805056e, %dec_label_pc_8050579, %dec_label_pc_8050582, %dec_label_pc_805058b, %dec_label_pc_8050594, %dec_label_pc_805059d, %dec_label_pc_80505a6, %dec_label_pc_80505af, %dec_label_pc_80505b8, %dec_label_pc_80505c1, %dec_label_pc_80505ca, %dec_label_pc_80505d3, %dec_label_pc_805078b, %dec_label_pc_80507a9, %dec_label_pc_8050565, %dec_label_pc_80507bb
  br label %dec_label_pc_8050721

dec_label_pc_8050721:                             ; preds = %dec_label_pc_8050774, %dec_label_pc_805075d, %dec_label_pc_805074f, %dec_label_pc_805074a, %dec_label_pc_8050743, %dec_label_pc_805073f, %dec_label_pc_805073b, %dec_label_pc_8050721, %dec_label_pc_8050721.preheader
  %v1_8050721 = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050721, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v1_8050721, 65536
  %v1_8050726 = sdiv i32 %sext, 65536
  %v2_805072c = urem i32 %v1_8050721, 256
  %v3_805072c = load i32, i32* @ecx, align 4
  %v4_805072c = and i32 %v3_805072c, -256
  %v5_805072c = or i32 %v4_805072c, %v2_805072c
  store i32 %v5_805072c, i32* @ecx, align 4
  %v2_805072e = udiv i32 %v1_8050726, 256
  store i32 %v2_805072e, i32* @ebx, align 4
  %v2_8050731 = udiv i32 %v1_8050726, 65536
  store i32 %v2_8050731, i32* @edx, align 4
  %v2_8050734 = udiv i32 %v1_8050726, 16777216
  store i32 %v2_8050734, i32* @edi, align 4
  %v2_8050737 = trunc i32 %v1_8050721 to i8
  %v11_8050737 = icmp eq i8 %v2_8050737, 127
  br i1 %v11_8050737, label %dec_label_pc_8050721, label %dec_label_pc_805073b

dec_label_pc_805073b:                             ; preds = %dec_label_pc_8050721
  %v6_805073b = icmp eq i8 %v2_8050737, 0
  br i1 %v6_805073b, label %dec_label_pc_8050721, label %dec_label_pc_805073f

dec_label_pc_805073f:                             ; preds = %dec_label_pc_805073b
  %v11_805073f = icmp eq i8 %v2_8050737, 3
  br i1 %v11_805073f, label %dec_label_pc_8050721, label %dec_label_pc_8050743

dec_label_pc_8050743:                             ; preds = %dec_label_pc_805073f
  %v2_8050743 = add nsw i32 %v1_8050726, -15
  store i32 %v2_8050743, i32* %eax.global-to-local, align 4
  %v1_8050746 = trunc i32 %v2_8050743 to i8
  %tmp286 = or i8 %v1_8050746, 1
  %tmp287 = icmp eq i8 %tmp286, 1
  br i1 %tmp287, label %dec_label_pc_8050721, label %dec_label_pc_805074a

dec_label_pc_805074a:                             ; preds = %dec_label_pc_8050743
  %v10_805074a = icmp eq i8 %v2_8050737, 56
  br i1 %v10_805074a, label %dec_label_pc_8050721, label %dec_label_pc_805074f

dec_label_pc_805074f:                             ; preds = %dec_label_pc_805074a
  %v10_805074f = icmp eq i8 %v2_8050737, 10
  br i1 %v10_805074f, label %dec_label_pc_8050721, label %dec_label_pc_8050754

dec_label_pc_8050754:                             ; preds = %dec_label_pc_805074f
  %v8_8050754 = icmp eq i8 %v2_8050737, -64
  %v1_8050757 = icmp eq i1 %v8_8050754, false
  br i1 %v1_8050757, label %dec_label_pc_8050541, label %dec_label_pc_805075d

dec_label_pc_805075d:                             ; preds = %dec_label_pc_8050754
  %v1_805075d = trunc i32 %v2_805072e to i8
  %v11_805075d = icmp eq i8 %v1_805075d, -88
  br i1 %v11_805075d, label %dec_label_pc_8050721, label %dec_label_pc_8050762

dec_label_pc_8050762:                             ; preds = %dec_label_pc_805075d
  %v10_8050762 = icmp eq i8 %v2_8050737, 100
  %v1_8050765 = icmp eq i1 %v10_8050762, false
  br i1 %v1_8050765, label %dec_label_pc_8050553, label %dec_label_pc_805076b

dec_label_pc_805076b:                             ; preds = %dec_label_pc_805054a.dec_label_pc_805076b_crit_edge, %dec_label_pc_8050762
  %v1_805076b.pre-phi = phi i8 [ %.pre, %dec_label_pc_805054a.dec_label_pc_805076b_crit_edge ], [ %v1_805075d, %dec_label_pc_8050762 ]
  %tmp288 = icmp ult i8 %v1_805076b.pre-phi, 64
  br i1 %tmp288, label %dec_label_pc_805056e, label %dec_label_pc_8050774

dec_label_pc_8050774:                             ; preds = %dec_label_pc_805076b
  %tmp289 = icmp ult i8 %v1_805076b.pre-phi, 127
  br i1 %tmp289, label %dec_label_pc_8050721, label %dec_label_pc_8050779

dec_label_pc_8050779:                             ; preds = %dec_label_pc_8050774
  %v11_8050779 = icmp eq i8 %v2_8050737, -58
  %v1_805077c = icmp eq i1 %v11_8050779, false
  br i1 %v1_805077c, label %dec_label_pc_8050565, label %dec_label_pc_8050782

dec_label_pc_8050782:                             ; preds = %dec_label_pc_8050779, %dec_label_pc_805055c
  %v0_805078b = phi i32 [ %v2_805072e, %dec_label_pc_8050779 ], [ %v0_80505e469, %dec_label_pc_805055c ]
  %v0_805056e65 = phi i32 [ %v5_805072c, %dec_label_pc_8050779 ], [ %v0_805055c, %dec_label_pc_805055c ]
  %v1_8050782 = trunc i32 %v0_805078b to i8
  %tmp290 = icmp ult i8 %v1_8050782, 18
  br i1 %tmp290, label %dec_label_pc_805056e, label %dec_label_pc_805078b

dec_label_pc_805078b:                             ; preds = %dec_label_pc_8050782
  %tmp291 = or i8 %v1_8050782, 1
  %tmp292 = icmp eq i8 %tmp291, 19
  br i1 %tmp292, label %dec_label_pc_8050721.preheader, label %dec_label_pc_805056e

dec_label_pc_8050795:                             ; preds = %dec_label_pc_8051555
  store i32 0, i32* %v2_8050798, align 4
  %v1_805079a = call i32 @function_80541f9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805079a, i32* %eax.global-to-local, align 4
  %v0_80507a0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80507a0

dec_label_pc_80507a0:                             ; preds = %dec_label_pc_8050541, %dec_label_pc_8050795
  %v0_80507a9 = phi i32 [ %v0_80507a0.pre, %dec_label_pc_8050795 ], [ %v2_805072e, %dec_label_pc_8050541 ]
  %v1_80507a0 = trunc i32 %v0_80507a9 to i8
  %tmp293 = icmp ult i8 %v1_80507a0, 16
  br i1 %tmp293, label %dec_label_pc_80507a0.dec_label_pc_805056e_crit_edge, label %dec_label_pc_80507a9

dec_label_pc_80507a0.dec_label_pc_805056e_crit_edge: ; preds = %dec_label_pc_80507a0
  %v0_805056e.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805056e

dec_label_pc_80507a9:                             ; preds = %dec_label_pc_80507a0
  %tmp294 = icmp ult i8 %v1_80507a0, 32
  br i1 %tmp294, label %dec_label_pc_8050721.preheader, label %dec_label_pc_80507b2

dec_label_pc_80507b2:                             ; preds = %dec_label_pc_80507a9
  %v0_80507b2 = load i32, i32* @ecx, align 4
  %v1_80507b2 = trunc i32 %v0_80507b2 to i8
  %v11_80507b2 = icmp eq i8 %v1_80507b2, -87
  %v1_80507b5 = icmp eq i1 %v11_80507b2, false
  br i1 %v1_80507b5, label %dec_label_pc_805055c, label %dec_label_pc_80507bb

dec_label_pc_80507bb:                             ; preds = %dec_label_pc_80507b2, %dec_label_pc_8050553
  %v0_805056576 = phi i32 [ %v0_80507b2, %dec_label_pc_80507b2 ], [ %v5_805072c, %dec_label_pc_8050553 ]
  %v0_80507bb = phi i32 [ %v0_80507a9, %dec_label_pc_80507b2 ], [ %v2_805072e, %dec_label_pc_8050553 ]
  %v1_80507bb = trunc i32 %v0_80507bb to i8
  %v11_80507bb = icmp eq i8 %v1_80507bb, -1
  %v1_80507be = icmp eq i1 %v11_80507bb, false
  br i1 %v1_80507be, label %dec_label_pc_8050565, label %dec_label_pc_8050721.preheader

dec_label_pc_80507d7:                             ; preds = %dec_label_pc_80505dc
  %v0_80507d7 = load i32, i32* @esi, align 4
  %v2_80507d7 = add i32 %v0_80506d2, 56
  %v3_80507d7 = inttoptr i32 %v2_80507d7 to i32*
  store i32 %v0_80507d7, i32* %v3_80507d7, align 4
  br label %dec_label_pc_80507db

dec_label_pc_80507db:                             ; preds = %dec_label_pc_8050a5f, %dec_label_pc_80507d7
  %v1_80507db = call i32 @function_8052be9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80507db, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80507e2 = load i32, i32* @esp, align 4
  %v2_80507e2 = add i32 %v1_80507e2, 40
  %v3_80507e2 = inttoptr i32 %v2_80507e2 to i32*
  store i32 %v1_80507db, i32* %v3_80507e2, align 4
  br label %dec_label_pc_80507e6

dec_label_pc_80507e6:                             ; preds = %dec_label_pc_8050883, %dec_label_pc_805087b, %dec_label_pc_8050873, %dec_label_pc_805086b, %dec_label_pc_805085f, %dec_label_pc_8050853, %dec_label_pc_805084c, %dec_label_pc_805083a, %dec_label_pc_805082e, %dec_label_pc_8050829, %dec_label_pc_80508ec, %dec_label_pc_80507db
  %v0_80507e6 = load i32, i32* @esp, align 4
  %v1_80507e6 = add i32 %v0_80507e6, 40
  %v2_80507e6 = inttoptr i32 %v1_80507e6 to i32*
  %v3_80507e6 = load i32, i32* %v2_80507e6, align 4
  store i32 %v3_80507e6, i32* %eax.global-to-local, align 4
  %v1_80507ea = inttoptr i32 %v3_80507e6 to i32*
  store i32 0, i32* %v1_80507ea, align 4
  %v0_80507f0 = load i32, i32* @esi, align 4
  %v1_80507f0 = load i32, i32* @esp, align 4
  %v2_80507f0 = add i32 %v1_80507f0, -4
  %v3_80507f0 = inttoptr i32 %v2_80507f0 to i32*
  store i32 %v0_80507f0, i32* %v3_80507f0, align 4
  %v0_80507f1 = load i32, i32* @esi, align 4
  %v2_80507f1 = add i32 %v1_80507f0, -8
  %v3_80507f1 = inttoptr i32 %v2_80507f1 to i32*
  store i32 %v0_80507f1, i32* %v3_80507f1, align 4
  %v1_80507f2 = add i32 %v1_80507f0, -12
  %v2_80507f2 = inttoptr i32 %v1_80507f2 to i32*
  store i32 0, i32* %v2_80507f2, align 4
  %v1_80507f4 = add i32 %v1_80507f0, -16
  %v2_80507f4 = inttoptr i32 %v1_80507f4 to i32*
  store i32 0, i32* %v2_80507f4, align 4
  %v1_80507f6 = add i32 %v1_80507f0, -20
  %v2_80507f6 = inttoptr i32 %v1_80507f6 to i32*
  store i32 16384, i32* %v2_80507f6, align 4
  %v1_80507fb = add i32 %v1_80507f0, -24
  %v2_80507fb = inttoptr i32 %v1_80507fb to i32*
  store i32 1514, i32* %v2_80507fb, align 4
  %v0_8050800 = load i32, i32* @global_var_805619c.32, align 4
  store i32 %v0_8050800, i32* %ecx.global-to-local, align 4
  %v1_8050806 = add i32 %v1_80507f0, 58
  store i32 %v1_8050806, i32* %edx.global-to-local, align 4
  %v2_805080a = add i32 %v1_80507f0, -28
  %v3_805080a = inttoptr i32 %v2_805080a to i32*
  store i32 %v1_8050806, i32* %v3_805080a, align 4
  %v0_805080b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805080b = add i32 %v1_80507f0, -32
  %v3_805080b = inttoptr i32 %v2_805080b to i32*
  store i32 %v0_805080b, i32* %v3_805080b, align 4
  %v0_805080c = call i32 @function_8052db1()
  store i32 %v0_805080c, i32* %eax.global-to-local, align 4
  %v0_8050811 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_805080c, 1
  br i1 %tmp, label %dec_label_pc_8050900, label %dec_label_pc_805081c

dec_label_pc_805081c:                             ; preds = %dec_label_pc_80507e6
  %v1_805081c = add i32 %v0_8050811, 72
  %v2_805081c = inttoptr i32 %v1_805081c to i32*
  %v3_805081c = load i32, i32* %v2_805081c, align 4
  store i32 %v3_805081c, i32* %ecx.global-to-local, align 4
  %v1_8050820 = inttoptr i32 %v3_805081c to i32*
  %v2_8050820 = load i32, i32* %v1_8050820, align 4
  %v11_8050820 = icmp eq i32 %v2_8050820, 11
  br i1 %v11_8050820, label %dec_label_pc_8050900, label %dec_label_pc_8050829

dec_label_pc_8050829:                             ; preds = %dec_label_pc_805081c
  %tmp295 = icmp ult i32 %v0_805080c, 40
  br i1 %tmp295, label %dec_label_pc_80507e6, label %dec_label_pc_805082e

dec_label_pc_805082e:                             ; preds = %dec_label_pc_8050829
  %v1_805082e = add i32 %v0_8050811, 106
  %v2_805082e = inttoptr i32 %v1_805082e to i32*
  %v3_805082e = load i32, i32* %v2_805082e, align 4
  store i32 %v3_805082e, i32* %eax.global-to-local, align 4
  %v1_8050832 = load i32, i32* @global_var_805617c.34, align 4
  %v12_8050832 = icmp eq i32 %v3_805082e, %v1_8050832
  %v1_8050838 = icmp eq i1 %v12_8050832, false
  br i1 %v1_8050838, label %dec_label_pc_80507e6, label %dec_label_pc_805083a

dec_label_pc_805083a:                             ; preds = %dec_label_pc_805082e
  %v1_805083a = add i32 %v0_8050811, 99
  %v2_805083a = inttoptr i32 %v1_805083a to i8*
  %v3_805083a = load i8, i8* %v2_805083a, align 1
  %v12_805083a = icmp eq i8 %v3_805083a, 6
  %v1_805083f = icmp eq i1 %v12_805083a, false
  br i1 %v1_805083f, label %dec_label_pc_80507e6, label %dec_label_pc_8050841

dec_label_pc_8050841:                             ; preds = %dec_label_pc_805083a
  %v1_8050841 = add i32 %v0_8050811, 110
  %v2_8050841 = inttoptr i32 %v1_8050841 to i32*
  %v3_8050841 = load i32, i32* %v2_8050841, align 4
  store i32 %v3_8050841, i32* @esi, align 4
  %v1_8050845 = trunc i32 %v3_8050841 to i16
  %v7_8050845 = icmp eq i16 %v1_8050845, 5888
  br i1 %v7_8050845, label %dec_label_pc_8050853, label %dec_label_pc_805084c

dec_label_pc_805084c:                             ; preds = %dec_label_pc_8050841
  %v10_805084c = icmp eq i16 %v1_8050845, 4873
  %v1_8050851 = icmp eq i1 %v10_805084c, false
  br i1 %v1_8050851, label %dec_label_pc_80507e6, label %dec_label_pc_8050853

dec_label_pc_8050853:                             ; preds = %dec_label_pc_805084c, %dec_label_pc_8050841
  %v1_8050853 = add i32 %v0_8050811, 54
  %v2_8050853 = inttoptr i32 %v1_8050853 to i16*
  %v3_8050853 = load i16, i16* %v2_8050853, align 2
  %v4_8050853 = zext i16 %v3_8050853 to i32
  %v6_8050853 = and i32 %v3_805082e, -65536
  %v7_8050853 = or i32 %v4_8050853, %v6_8050853
  store i32 %v7_8050853, i32* %eax.global-to-local, align 4
  %v3_8050858 = add i32 %v0_8050811, 112
  %v4_8050858 = inttoptr i32 %v3_8050858 to i16*
  %v5_8050858 = load i16, i16* %v4_8050858, align 2
  %v16_8050858 = icmp eq i16 %v3_8050853, %v5_8050858
  %v1_805085d = icmp eq i1 %v16_8050858, false
  br i1 %v1_805085d, label %dec_label_pc_80507e6, label %dec_label_pc_805085f

dec_label_pc_805085f:                             ; preds = %dec_label_pc_8050853
  %v1_805085f = add i32 %v0_8050811, 123
  %v2_805085f = inttoptr i32 %v1_805085f to i8*
  %v3_805085f = load i8, i8* %v2_805085f, align 1
  %v4_805085f = zext i8 %v3_805085f to i32
  %v6_805085f = and i32 %v7_8050853, -256
  %v7_805085f = or i32 %v4_805085f, %v6_805085f
  store i32 %v7_805085f, i32* %eax.global-to-local, align 4
  %v2_8050863 = and i8 %v3_805085f, 2
  %v3_8050863 = icmp eq i8 %v2_8050863, 0
  br i1 %v3_8050863, label %dec_label_pc_80507e6, label %dec_label_pc_805086b

dec_label_pc_805086b:                             ; preds = %dec_label_pc_805085f
  %v2_805086b = and i32 %v4_805085f, 16
  %v3_805086b = icmp eq i32 %v2_805086b, 0
  br i1 %v3_805086b, label %dec_label_pc_80507e6, label %dec_label_pc_8050873

dec_label_pc_8050873:                             ; preds = %dec_label_pc_805086b
  %v2_8050873 = and i32 %v4_805085f, 4
  %v3_8050873 = icmp eq i32 %v2_8050873, 0
  %v1_8050875 = icmp eq i1 %v3_8050873, false
  br i1 %v1_8050875, label %dec_label_pc_80507e6, label %dec_label_pc_805087b

dec_label_pc_805087b:                             ; preds = %dec_label_pc_8050873
  %tmp302 = urem i8 %v3_805085f, 2
  %v3_805087b = icmp eq i8 %tmp302, 0
  %v1_805087d = icmp eq i1 %v3_805087b, false
  br i1 %v1_805087d, label %dec_label_pc_80507e6, label %dec_label_pc_8050883

dec_label_pc_8050883:                             ; preds = %dec_label_pc_805087b
  %v1_8050883 = add i32 %v0_8050811, 118
  %v2_8050883 = inttoptr i32 %v1_8050883 to i32*
  %v3_8050883 = load i32, i32* %v2_8050883, align 4
  %v1_8050887 = trunc i32 %v3_8050883 to i16
  %v2_8050887 = call i16 @llvm.bswap.i16(i16 %v1_8050887)
  %v3_8050887 = zext i16 %v2_8050887 to i32
  %v1_805088b = udiv i32 %v3_8050883, 65536
  %v2_805088b = mul nuw i32 %v3_8050887, 65536
  %v1_805088e = trunc i32 %v1_805088b to i16
  %v2_805088e = call i16 @llvm.bswap.i16(i16 %v1_805088e)
  %v3_805088e = zext i16 %v2_805088e to i32
  %v6_805088e = or i32 %v3_805088e, %v2_805088b
  store i32 %v6_805088e, i32* %eax.global-to-local, align 4
  %v1_8050892 = add i32 %v6_805088e, -1
  %v1_8050895 = trunc i32 %v1_8050892 to i16
  %v2_8050895 = call i16 @llvm.bswap.i16(i16 %v1_8050895)
  %v3_8050895 = zext i16 %v2_8050895 to i32
  %v1_8050899 = udiv i32 %v1_8050892, 65536
  %v2_8050899 = mul nuw i32 %v3_8050895, 65536
  %v1_805089c = trunc i32 %v1_8050899 to i16
  %v2_805089c = call i16 @llvm.bswap.i16(i16 %v1_805089c)
  %v3_805089c = zext i16 %v2_805089c to i32
  %v6_805089c = or i32 %v3_805089c, %v2_8050899
  store i32 %v6_805089c, i32* %ecx.global-to-local, align 4
  %v1_80508a0 = add i32 %v0_8050811, 102
  %v2_80508a0 = inttoptr i32 %v1_80508a0 to i32*
  %v3_80508a0 = load i32, i32* %v2_80508a0, align 4
  %v15_80508a0 = icmp eq i32 %v3_80508a0, %v6_805089c
  %v1_80508a4 = icmp eq i1 %v15_80508a0, false
  br i1 %v1_80508a4, label %dec_label_pc_80507e6, label %dec_label_pc_80508aa

dec_label_pc_80508aa:                             ; preds = %dec_label_pc_8050883
  %v0_80508aa = load i32, i32* @ebx, align 4
  %v1_80508aa = add i32 %v0_80508aa, -255
  %v6_80508aa = sub i32 254, %v0_80508aa
  %v7_80508aa = and i32 %v6_80508aa, %v0_80508aa
  %v8_80508aa = icmp slt i32 %v7_80508aa, 0
  %v9_80508aa = icmp eq i32 %v1_80508aa, 0
  %v10_80508aa = icmp slt i32 %v1_80508aa, 0
  %v3_80508b0 = icmp eq i1 %v10_80508aa, %v8_80508aa
  %v4_80508b0 = icmp eq i1 %v9_80508aa, false
  %v5_80508b0 = and i1 %v4_80508b0, %v3_80508b0
  br i1 %v5_80508b0, label %dec_label_pc_8050900, label %dec_label_pc_80508b2

dec_label_pc_80508b2:                             ; preds = %dec_label_pc_80508aa
  %v2_80508bc = mul i32 %v0_80508aa, 544
  %v0_80508bf = load i32, i32* @global_var_8056198.36, align 8
  store i32 %v0_80508bf, i32* %edx.global-to-local, align 4
  %v2_80508c5 = add i32 %v0_80508bf, %v2_80508bc
  store i32 %v2_80508c5, i32* @eax, align 4
  %v1_80508c7 = add i32 %v2_80508c5, 12
  %v2_80508c7 = inttoptr i32 %v1_80508c7 to i32*
  %v3_80508c7 = load i32, i32* %v2_80508c7, align 4
  %v1_80508ca = add i32 %v2_80508c5, 544
  store i32 %v1_80508ca, i32* %edx.global-to-local, align 4
  %v1_80508d0 = icmp eq i32 %v3_80508c7, 0
  br i1 %v1_80508d0, label %dec_label_pc_80508ec, label %dec_label_pc_80508d4

dec_label_pc_80508d4:                             ; preds = %dec_label_pc_80508b2, %dec_label_pc_80508dd
  %v0_80508dd = phi i32 [ %v1_80508df, %dec_label_pc_80508dd ], [ %v1_80508ca, %dec_label_pc_80508b2 ]
  %v0_80508d4 = phi i32 [ %v1_80508d4, %dec_label_pc_80508dd ], [ %v0_80508aa, %dec_label_pc_80508b2 ]
  %v1_80508d4 = add i32 %v0_80508d4, 1
  store i32 %v1_80508d4, i32* @ebx, align 4
  %v6_80508d5 = icmp eq i32 %v0_80508d4, 255
  br i1 %v6_80508d5, label %dec_label_pc_8050900.loopexit, label %dec_label_pc_80508dd

dec_label_pc_80508dd:                             ; preds = %dec_label_pc_80508d4
  store i32 %v0_80508dd, i32* @eax, align 4
  %v1_80508df = add i32 %v0_80508dd, 544
  store i32 %v1_80508df, i32* %edx.global-to-local, align 4
  %v1_80508e5 = add i32 %v0_80508dd, 12
  %v2_80508e5 = inttoptr i32 %v1_80508e5 to i32*
  %v3_80508e5 = load i32, i32* %v2_80508e5, align 4
  store i32 %v3_80508e5, i32* @edi, align 4
  %v1_80508e8 = icmp eq i32 %v3_80508e5, 0
  %v1_80508ea = icmp eq i1 %v1_80508e8, false
  br i1 %v1_80508ea, label %dec_label_pc_80508d4, label %dec_label_pc_80508ec.loopexit

dec_label_pc_80508ec.loopexit:                    ; preds = %dec_label_pc_80508dd
  br label %dec_label_pc_80508ec

dec_label_pc_80508ec:                             ; preds = %dec_label_pc_80508ec.loopexit, %dec_label_pc_80508b2
  %v1_80508ec = phi i32 [ %v0_80508dd, %dec_label_pc_80508ec.loopexit ], [ %v2_80508c5, %dec_label_pc_80508b2 ]
  %v2_80508ec = add i32 %v1_80508ec, 16
  %v3_80508ec = inttoptr i32 %v2_80508ec to i32*
  store i32 %v6_805089c, i32* %v3_80508ec, align 4
  %v0_80508ef = load i32, i32* @esi, align 4
  %v1_80508ef = trunc i32 %v0_80508ef to i16
  %v2_80508ef = load i32, i32* @eax, align 4
  %v3_80508ef = add i32 %v2_80508ef, 20
  %v4_80508ef = inttoptr i32 %v3_80508ef to i16*
  store i16 %v1_80508ef, i16* %v4_80508ef, align 2
  %v0_80508f3 = call i32 @function_804f4d0()
  store i32 %v0_80508f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80507e6

dec_label_pc_8050900.loopexit:                    ; preds = %dec_label_pc_80508d4
  br label %dec_label_pc_8050900

dec_label_pc_8050900:                             ; preds = %dec_label_pc_80508aa, %dec_label_pc_805081c, %dec_label_pc_80507e6, %dec_label_pc_8050900.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_8050909 = add i32 %v0_8050811, 44
  %v2_8050909 = inttoptr i32 %v1_8050909 to i32*
  %v3_8050909 = load i32, i32* %v2_8050909, align 4
  %v4_8050909 = inttoptr i32 %v3_8050909 to i8*
  %v5_805090e = call i8* @_memset(i8* %v4_8050909, i32 0, i32 32)
  %v0_8050910 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050910, i32* %ecx.global-to-local, align 4
  %v0_8050912 = load i32, i32* @esp, align 4
  %v1_8050912 = add i32 %v0_8050912, 8
  %v2_8050912 = inttoptr i32 %v1_8050912 to i32*
  %v3_8050912 = load i32, i32* %v2_8050912, align 4
  %v4_8050912 = inttoptr i32 %v3_8050912 to i8*
  store i1 false, i1* @df, align 1
  %v5_8050917 = call i8* @_memset(i8* %v4_8050912, i32 0, i32 %v0_8050910)
  %v6_8050917 = ptrtoint i8* %v5_8050917 to i32
  store i32 %v6_8050917, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_805091b = load i32, i32* @esp, align 4
  %v1_805091b = add i32 %v0_805091b, 1868
  %v2_805091b = inttoptr i32 %v1_805091b to i32*
  store i32 0, i32* %v2_805091b, align 4
  store i32 0, i32* @esi, align 4
  %v10_8050928 = load i32, i32* %edx.global-to-local, align 4
  %v11_8050928 = and i32 %v10_8050928, -256
  store i32 %v11_8050928, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805092a

dec_label_pc_805092a:                             ; preds = %dec_label_pc_8050982, %dec_label_pc_8050900
  %v0_8050934 = phi i32 [ %v0_8050991, %dec_label_pc_8050982 ], [ %v11_8050928, %dec_label_pc_8050900 ]
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_8050934 = mul i32 %v0_8050934, 512
  store i32 %v2_8050934, i32* %edx.global-to-local, align 4
  %v2_8050937 = mul i32 %v0_8050934, 544
  %v0_805093a = load i32, i32* @global_var_8056198.36, align 8
  store i32 %v0_805093a, i32* %eax.global-to-local, align 4
  %v2_805093f = add i32 %v0_805093a, %v2_8050937
  store i32 %v2_805093f, i32* @ebx, align 4
  %v1_8050941 = add i32 %v2_805093f, 12
  %v2_8050941 = inttoptr i32 %v1_8050941 to i32*
  %v3_8050941 = load i32, i32* %v2_8050941, align 4
  store i32 %v3_8050941, i32* %edx.global-to-local, align 4
  %v1_8050944 = add i32 %v3_8050941, -1
  %v5_8050944 = icmp eq i32 %v3_8050941, 0
  %v9_8050944 = icmp eq i32 %v1_8050944, 0
  %v2_8050947 = or i1 %v5_8050944, %v9_8050944
  br i1 %v2_8050947, label %dec_label_pc_80514f2, label %dec_label_pc_805094d

dec_label_pc_805094d:                             ; preds = %dec_label_pc_805092a, %dec_label_pc_80514fa
  %v1_8050957 = phi i32 [ 30, %dec_label_pc_805092a ], [ 5, %dec_label_pc_80514fa ]
  %v0_805094d = load i32, i32* @global_var_8056150.24, align 16
  store i32 %v0_805094d, i32* %eax.global-to-local, align 4
  %v1_8050952 = add i32 %v2_805093f, 8
  %v2_8050952 = inttoptr i32 %v1_8050952 to i32*
  %v3_8050952 = load i32, i32* %v2_8050952, align 4
  %v2_8050955 = sub i32 %v0_805094d, %v3_8050952
  store i32 %v2_8050955, i32* %eax.global-to-local, align 4
  %tmp296 = icmp ugt i32 %v2_8050955, %v1_8050957
  br i1 %tmp296, label %dec_label_pc_8051490, label %dec_label_pc_805095f

dec_label_pc_805095f:                             ; preds = %dec_label_pc_805094d
  store i32 %v1_8050944, i32* %edx.global-to-local, align 4
  %v1_8051468 = add i32 %v2_805093f, 4
  %v2_8051468 = inttoptr i32 %v1_8051468 to i32*
  %v3_8051468 = load i32, i32* %v2_8051468, align 4
  %v1_805146d = urem i32 %v3_8051468, 32
  store i32 %v1_805146d, i32* %eax.global-to-local, align 4
  %v2_8051470 = udiv i32 %v3_8051468, 32
  store i32 %v2_8051470, i32* %edx.global-to-local, align 4
  %v0_8051473 = load i32, i32* @esp, align 4
  %v2_8051473 = mul nuw nsw i32 %v2_8051470, 4
  br i1 %v9_8050944, label %dec_label_pc_8051468, label %dec_label_pc_8050966

dec_label_pc_8050966:                             ; preds = %dec_label_pc_805095f
  %v3_8050971 = add nuw nsw i32 %v2_8051473, 1700
  %v4_8050971 = add i32 %v3_8050971, %v0_8051473
  %v5_8050971 = inttoptr i32 %v4_8050971 to i32*
  %v6_8050971 = load i32, i32* %v5_8050971, align 4
  %v9_8050971 = shl i32 1, %v1_805146d
  %v12_8050971 = or i32 %v6_8050971, %v9_8050971
  store i32 %v12_8050971, i32* %v5_8050971, align 4
  %v0_8050979 = load i32, i32* @ebx, align 4
  %v1_8050979 = add i32 %v0_8050979, 4
  %v2_8050979 = inttoptr i32 %v1_8050979 to i32*
  %v3_8050979 = load i32, i32* %v2_8050979, align 4
  store i32 %v3_8050979, i32* %eax.global-to-local, align 4
  %v0_805097c = load i32, i32* @edi, align 4
  %v2_805097c = sub i32 %v0_805097c, %v3_8050979
  %v8_805097c = xor i32 %v0_805097c, %v3_8050979
  %v9_805097c = xor i32 %v2_805097c, %v0_805097c
  %v10_805097c = and i32 %v9_805097c, %v8_805097c
  %v11_805097c = icmp slt i32 %v10_805097c, 0
  %v13_805097c = icmp slt i32 %v2_805097c, 0
  %v2_805097e = icmp eq i1 %v13_805097c, %v11_805097c
  br i1 %v2_805097e, label %dec_label_pc_8050982, label %dec_label_pc_8050980

dec_label_pc_8050980:                             ; preds = %dec_label_pc_8050966
  store i32 %v3_8050979, i32* @edi, align 4
  br label %dec_label_pc_8050982

dec_label_pc_8050982:                             ; preds = %dec_label_pc_80514f2, %dec_label_pc_8051468, %dec_label_pc_8050966, %dec_label_pc_80514df, %dec_label_pc_80514bd, %dec_label_pc_8051486, %dec_label_pc_8050980
  %v0_8050982 = load i32, i32* @esp, align 4
  %v1_8050982 = add i32 %v0_8050982, 1868
  %v2_8050982 = inttoptr i32 %v1_8050982 to i32*
  %v3_8050982 = load i32, i32* %v2_8050982, align 4
  %v1_8050989 = add i32 %v3_8050982, 1
  store i32 %v1_8050989, i32* %edx.global-to-local, align 4
  store i32 %v1_8050989, i32* %v2_8050982, align 4
  %v0_8050991 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050991 = add i32 %v0_8050991, -255
  %v6_8050991 = sub i32 254, %v0_8050991
  %v7_8050991 = and i32 %v6_8050991, %v0_8050991
  %v8_8050991 = icmp slt i32 %v7_8050991, 0
  %v9_8050991 = icmp eq i32 %v1_8050991, 0
  %v10_8050991 = icmp slt i32 %v1_8050991, 0
  %v3_8050997 = icmp ne i1 %v10_8050991, %v8_8050991
  %v4_8050997 = or i1 %v9_8050991, %v3_8050997
  br i1 %v4_8050997, label %dec_label_pc_805092a, label %dec_label_pc_8050999

dec_label_pc_8050999:                             ; preds = %dec_label_pc_8050982
  %v0_8050999 = load i32, i32* @esp, align 4
  %v1_8050999 = add i32 %v0_8050999, 1860
  %v2_8050999 = inttoptr i32 %v1_8050999 to i32*
  store i32 0, i32* %v2_8050999, align 4
  %v0_80509a4 = load i32, i32* @esp, align 4
  %v1_80509a4 = add i32 %v0_80509a4, 1856
  %v2_80509a4 = inttoptr i32 %v1_80509a4 to i32*
  store i32 1, i32* %v2_80509a4, align 4
  %v0_80509af = load i32, i32* @esp, align 4
  %v0_80509b2 = load i32, i32* @edi, align 4
  %v1_80509b2 = load i32, i32* @esi, align 4
  %v2_80509b2 = sub i32 %v0_80509b2, %v1_80509b2
  %v8_80509b2 = xor i32 %v1_80509b2, %v0_80509b2
  %v9_80509b2 = xor i32 %v2_80509b2, %v0_80509b2
  %v10_80509b2 = and i32 %v9_80509b2, %v8_80509b2
  %v11_80509b2 = icmp slt i32 %v10_80509b2, 0
  %v13_80509b2 = icmp slt i32 %v2_80509b2, 0
  %v1_80509b4 = add i32 %v0_80509af, 1856
  %v2_80509bb = add i32 %v0_80509af, -16
  %v3_80509bb = inttoptr i32 %v2_80509bb to i32*
  store i32 %v1_80509b4, i32* %v3_80509bb, align 4
  %v1_80509bc = add i32 %v0_80509af, -20
  %v2_80509bc = inttoptr i32 %v1_80509bc to i32*
  store i32 0, i32* %v2_80509bc, align 4
  %v1_80509be = add i32 %v0_80509af, 1572
  store i32 %v1_80509be, i32* %edx.global-to-local, align 4
  %v0_80509c5 = load i32, i32* @edi, align 4
  store i32 %v0_80509c5, i32* %eax.global-to-local, align 4
  %v2_80509c7 = add i32 %v0_80509af, -24
  %v3_80509c7 = inttoptr i32 %v2_80509c7 to i32*
  store i32 %v1_80509be, i32* %v3_80509c7, align 4
  %v1_80509c8 = add i32 %v0_80509af, 1700
  store i32 %v1_80509c8, i32* %ecx.global-to-local, align 4
  %v2_80509cf = add i32 %v0_80509af, -28
  %v3_80509cf = inttoptr i32 %v2_80509cf to i32*
  store i32 %v1_80509c8, i32* %v3_80509cf, align 4
  %v2_80509d0 = icmp eq i1 %v13_80509b2, %v11_80509b2
  br i1 %v2_80509d0, label %dec_label_pc_8050999.dec_label_pc_80509d4_crit_edge, label %dec_label_pc_80509d2

dec_label_pc_8050999.dec_label_pc_80509d4_crit_edge: ; preds = %dec_label_pc_8050999
  %v0_80509d4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80509d4

dec_label_pc_80509d2:                             ; preds = %dec_label_pc_8050999
  %v0_80509d2 = load i32, i32* @esi, align 4
  store i32 %v0_80509d2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80509d4

dec_label_pc_80509d4:                             ; preds = %dec_label_pc_8050999.dec_label_pc_80509d4_crit_edge, %dec_label_pc_80509d2
  %v0_80509d4 = phi i32 [ %v0_80509d4.pre, %dec_label_pc_8050999.dec_label_pc_80509d4_crit_edge ], [ %v0_80509d2, %dec_label_pc_80509d2 ]
  %v1_80509d4 = add i32 %v0_80509d4, 1
  store i32 %v1_80509d4, i32* %eax.global-to-local, align 4
  %v2_80509d5 = add i32 %v0_80509af, -32
  %v3_80509d5 = inttoptr i32 %v2_80509d5 to i32*
  store i32 %v1_80509d4, i32* %v3_80509d5, align 4
  %v0_80509d6 = call i32 @function_80528b8()
  store i32 %v0_80509d6, i32* %eax.global-to-local, align 4
  %v0_80509db = load i32, i32* @esp, align 4
  %v1_80509de = add i32 %v0_80509db, 16
  %v2_80509de = inttoptr i32 %v1_80509de to i32*
  store i32 0, i32* %v2_80509de, align 4
  %v0_80509e0 = call i32 @function_8052972()
  store i32 %v0_80509e0, i32* %eax.global-to-local, align 4
  %v0_80509e5 = load i32, i32* @esp, align 4
  %v1_80509e5 = add i32 %v0_80509e5, 1884
  %v2_80509e5 = inttoptr i32 %v1_80509e5 to i32*
  store i32 0, i32* %v2_80509e5, align 4
  store i32 %v0_80509e0, i32* @global_var_8056150.24, align 16
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80509fa

dec_label_pc_80509fa:                             ; preds = %dec_label_pc_8050a48, %dec_label_pc_80509d4
  %v0_80509ff = phi i32 [ %v0_8050a57, %dec_label_pc_8050a48 ], [ 0, %dec_label_pc_80509d4 ]
  %v2_80509ff = mul i32 %v0_80509ff, 512
  store i32 %v2_80509ff, i32* %edx.global-to-local, align 4
  %v2_8050a02 = mul i32 %v0_80509ff, 544
  %v0_8050a05 = load i32, i32* @global_var_8056198.36, align 8
  store i32 %v0_8050a05, i32* %eax.global-to-local, align 4
  %v2_8050a0a = add i32 %v0_8050a05, %v2_8050a02
  store i32 %v2_8050a0a, i32* @edi, align 4
  %v1_8050a0c = add i32 %v2_8050a0a, 4
  %v2_8050a0c = inttoptr i32 %v1_8050a0c to i32*
  %v3_8050a0c = load i32, i32* %v2_8050a0c, align 4
  store i32 %v3_8050a0c, i32* %ecx.global-to-local, align 4
  %v10_8050a0f = icmp eq i32 %v3_8050a0c, -1
  br i1 %v10_8050a0f, label %dec_label_pc_8050a48, label %dec_label_pc_8050a14

dec_label_pc_8050a14:                             ; preds = %dec_label_pc_80509fa
  %v2_8050a18 = udiv i32 %v3_8050a0c, 32
  store i32 %v2_8050a18, i32* %edx.global-to-local, align 4
  %v1_8050a1b = urem i32 %v3_8050a0c, 32
  store i32 %v1_8050a1b, i32* %eax.global-to-local, align 4
  %v0_8050a1e = load i32, i32* @esp, align 4
  %v2_8050a1e = mul nuw nsw i32 %v2_8050a18, 4
  %v3_8050a1e = add nuw nsw i32 %v2_8050a1e, 1572
  %v4_8050a1e = add i32 %v3_8050a1e, %v0_8050a1e
  %v5_8050a1e = inttoptr i32 %v4_8050a1e to i32*
  %v6_8050a1e = load i32, i32* %v5_8050a1e, align 4
  %v9_8050a1e = shl i32 1, %v1_8050a1b
  %v10_8050a1e = and i32 %v6_8050a1e, %v9_8050a1e
  %v11_8050a1e = icmp ne i32 %v10_8050a1e, 0
  %v1_8050a26 = zext i1 %v11_8050a1e to i32
  store i32 %v1_8050a26, i32* %eax.global-to-local, align 4
  %v4_8050a29 = icmp eq i1 %v11_8050a1e, false
  %v1_8050a2b = icmp eq i1 %v4_8050a29, false
  br i1 %v1_8050a2b, label %dec_label_pc_805139e, label %dec_label_pc_8050a31

dec_label_pc_8050a31:                             ; preds = %dec_label_pc_8050a14, %dec_label_pc_805142e
  %v0_8050a39 = phi i32 [ %v0_8050a1e, %dec_label_pc_8050a14 ], [ %v0_8050a39.pre, %dec_label_pc_805142e ]
  %v0_8050a31 = phi i32 [ %v3_8050a0c, %dec_label_pc_8050a14 ], [ %v0_8050a31.pre, %dec_label_pc_805142e ]
  %v2_8050a33 = udiv i32 %v0_8050a31, 32
  store i32 %v2_8050a33, i32* %ecx.global-to-local, align 4
  %v1_8050a36 = urem i32 %v0_8050a31, 32
  store i32 %v1_8050a36, i32* %eax.global-to-local, align 4
  %v2_8050a39 = mul nuw nsw i32 %v2_8050a33, 4
  %v3_8050a39 = add i32 %v0_8050a39, 1700
  %v4_8050a39 = add i32 %v3_8050a39, %v2_8050a39
  %v5_8050a39 = inttoptr i32 %v4_8050a39 to i32*
  %v6_8050a39 = load i32, i32* %v5_8050a39, align 4
  %v9_8050a39 = shl i32 1, %v1_8050a36
  %v10_8050a39 = and i32 %v6_8050a39, %v9_8050a39
  %v11_8050a39 = icmp ne i32 %v10_8050a39, 0
  %v1_8050a41 = zext i1 %v11_8050a39 to i32
  store i32 %v1_8050a41, i32* %eax.global-to-local, align 4
  %v4_8050a44 = icmp eq i1 %v11_8050a39, false
  %v1_8050a46 = icmp eq i1 %v4_8050a44, false
  br i1 %v1_8050a46, label %dec_label_pc_8050aa0.preheader, label %dec_label_pc_8050a48

dec_label_pc_8050aa0.preheader:                   ; preds = %dec_label_pc_8050a31
  %v0_8050aa027 = load i32, i32* @edi, align 4
  %v1_8050aa028 = add i32 %v0_8050aa027, 12
  %v2_8050aa029 = inttoptr i32 %v1_8050aa028 to i32*
  %v3_8050aa030 = load i32, i32* %v2_8050aa029, align 4
  store i32 %v3_8050aa030, i32* %eax.global-to-local, align 4
  %v1_8050aa331 = icmp eq i32 %v3_8050aa030, 0
  br i1 %v1_8050aa331, label %dec_label_pc_8050a48, label %dec_label_pc_8050aa7

dec_label_pc_8050a48:                             ; preds = %dec_label_pc_8050aa0.backedge, %dec_label_pc_8050aa0.preheader, %dec_label_pc_805100b, %dec_label_pc_8050a31, %dec_label_pc_80509fa, %dec_label_pc_8051517, %dec_label_pc_805143f, %dec_label_pc_8051043
  %v0_8050a48 = load i32, i32* @esp, align 4
  %v1_8050a48 = add i32 %v0_8050a48, 1868
  %v2_8050a48 = inttoptr i32 %v1_8050a48 to i32*
  %v3_8050a48 = load i32, i32* %v2_8050a48, align 4
  %v1_8050a4f = add i32 %v3_8050a48, 1
  store i32 %v1_8050a4f, i32* %edx.global-to-local, align 4
  store i32 %v1_8050a4f, i32* %v2_8050a48, align 4
  %v0_8050a57 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050a57 = add i32 %v0_8050a57, -255
  %v6_8050a57 = sub i32 254, %v0_8050a57
  %v7_8050a57 = and i32 %v6_8050a57, %v0_8050a57
  %v8_8050a57 = icmp slt i32 %v7_8050a57, 0
  %v9_8050a57 = icmp eq i32 %v1_8050a57, 0
  %v10_8050a57 = icmp slt i32 %v1_8050a57, 0
  %v3_8050a5d = icmp ne i1 %v10_8050a57, %v8_8050a57
  %v4_8050a5d = or i1 %v9_8050a57, %v3_8050a5d
  br i1 %v4_8050a5d, label %dec_label_pc_80509fa, label %dec_label_pc_8050a5f

dec_label_pc_8050a64:                             ; preds = %dec_label_pc_8050b12
  %v1_8050a64 = add i32 %v0_8050b12, 24
  %v2_8050a64 = inttoptr i32 %v1_8050a64 to i32*
  %v3_8050a64 = load i32, i32* %v2_8050a64, align 4
  %v1_8050a67 = add i32 %v3_8050a64, -1
  store i32 %v1_8050a67, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_8050a67, 1
  br i1 %tmp136, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_8050a6c.preheader

dec_label_pc_8050a6c.preheader:                   ; preds = %dec_label_pc_8050a64
  %v7_8050a6c.pre = load i32, i32* @edx, align 4
  %v2_8050a6c = add i32 %v0_8050b12, 28
  br label %dec_label_pc_8050a6c

dec_label_pc_8050a6c:                             ; preds = %dec_label_pc_8050a6c.preheader, %dec_label_pc_8050a9d
  %v7_8050a6c = phi i32 [ %v7_8050a6c.pre, %dec_label_pc_8050a6c.preheader ], [ %v9_8050a6c, %dec_label_pc_8050a9d ]
  %v0_805129b = phi i32 [ %v1_8050a67, %dec_label_pc_8050a6c.preheader ], [ %v1_8050a9d, %dec_label_pc_8050a9d ]
  %v3_8050a6c = add i32 %v2_8050a6c, %v0_805129b
  %v4_8050a6c = inttoptr i32 %v3_8050a6c to i8*
  %v5_8050a6c = load i8, i8* %v4_8050a6c, align 1
  %v6_8050a6c = zext i8 %v5_8050a6c to i32
  %v8_8050a6c = and i32 %v7_8050a6c, -256
  %v9_8050a6c = or i32 %v6_8050a6c, %v8_8050a6c
  store i32 %v9_8050a6c, i32* %edx.global-to-local, align 4
  %v10_8050a70 = icmp eq i8 %v5_8050a6c, 58
  br i1 %v10_8050a70, label %dec_label_pc_805129b, label %dec_label_pc_8050a79

dec_label_pc_8050a79:                             ; preds = %dec_label_pc_8050a6c
  %v10_8050a79 = icmp eq i8 %v5_8050a6c, 62
  br i1 %v10_8050a79, label %dec_label_pc_805129b, label %dec_label_pc_8050a82

dec_label_pc_8050a82:                             ; preds = %dec_label_pc_8050a79
  %v10_8050a82 = icmp eq i8 %v5_8050a6c, 36
  br i1 %v10_8050a82, label %dec_label_pc_805129b, label %dec_label_pc_8050a8b

dec_label_pc_8050a8b:                             ; preds = %dec_label_pc_8050a82
  %v10_8050a8b = icmp eq i8 %v5_8050a6c, 35
  br i1 %v10_8050a8b, label %dec_label_pc_805129b, label %dec_label_pc_8050a94

dec_label_pc_8050a94:                             ; preds = %dec_label_pc_8050a8b
  %v10_8050a94 = icmp eq i8 %v5_8050a6c, 37
  br i1 %v10_8050a94, label %dec_label_pc_805129b, label %dec_label_pc_8050a9d

dec_label_pc_8050a9d:                             ; preds = %dec_label_pc_8050a94
  %v1_8050a9d = add i32 %v0_805129b, -1
  %v8_8050a9d = icmp eq i32 %v1_8050a9d, 0
  store i32 %v1_8050a9d, i32* %eax.global-to-local, align 4
  %v1_8050a9e = icmp eq i1 %v8_8050a9d, false
  br i1 %v1_8050a9e, label %dec_label_pc_8050a6c, label %dec_label_pc_8050aa0.backedge

dec_label_pc_8050aa0.backedge:                    ; preds = %dec_label_pc_8050f43.thread, %dec_label_pc_8050aa0.loopexit12.loopexit, %dec_label_pc_8050f30, %dec_label_pc_8050cdd, %dec_label_pc_8050e65, %dec_label_pc_8050d22, %dec_label_pc_8050a9d
  %v0_8050aa0 = phi i32 [ %v0_8050b12, %dec_label_pc_8050a9d ], [ %v0_8050b12, %dec_label_pc_8050d22 ], [ %v0_8050b12, %dec_label_pc_8050e65 ], [ %v0_8050b12, %dec_label_pc_8050cdd ], [ %v0_8050b12, %dec_label_pc_8050f30 ], [ %v0_8050aa0.pre.pre, %dec_label_pc_8050aa0.loopexit12.loopexit ], [ %v0_8050b12, %dec_label_pc_8050f43.thread ]
  %v1_8050aa0 = add i32 %v0_8050aa0, 12
  %v2_8050aa0 = inttoptr i32 %v1_8050aa0 to i32*
  %v3_8050aa0 = load i32, i32* %v2_8050aa0, align 4
  store i32 %v3_8050aa0, i32* %eax.global-to-local, align 4
  %v1_8050aa3 = icmp eq i32 %v3_8050aa0, 0
  br i1 %v1_8050aa3, label %dec_label_pc_8050a48, label %dec_label_pc_8050aa0.backedge.dec_label_pc_8050aa7_crit_edge

dec_label_pc_8050aa0.backedge.dec_label_pc_8050aa7_crit_edge: ; preds = %dec_label_pc_8050aa0.backedge
  %v1_8050aaa.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050aa7

dec_label_pc_8050aa0.loopexit12.loopexit:         ; preds = %dec_label_pc_8050f43, %dec_label_pc_8050c75, %dec_label_pc_8050c13, %dec_label_pc_8050b12, %dec_label_pc_80511a9, %dec_label_pc_8050ef3, %dec_label_pc_8050e7a, %dec_label_pc_8050e3c, %dec_label_pc_8051130, %dec_label_pc_8050ce5, %dec_label_pc_8051222, %dec_label_pc_8050ca0, %dec_label_pc_805129b, %dec_label_pc_8050a64, %dec_label_pc_8050d6d
  %v0_8050aa0.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050aa0.backedge

dec_label_pc_8050aa7:                             ; preds = %dec_label_pc_8050aa0.preheader, %dec_label_pc_8050aa0.backedge.dec_label_pc_8050aa7_crit_edge
  %v1_8050aaa = phi i32 [ %v1_8050aaa.pre, %dec_label_pc_8050aa0.backedge.dec_label_pc_8050aa7_crit_edge ], [ %v0_8050a39, %dec_label_pc_8050aa0.preheader ]
  %v0_8050aa7 = phi i32 [ %v0_8050aa0, %dec_label_pc_8050aa0.backedge.dec_label_pc_8050aa7_crit_edge ], [ %v0_8050aa027, %dec_label_pc_8050aa0.preheader ]
  %v1_8050aa7 = add i32 %v0_8050aa7, 28
  store i32 %v1_8050aa7, i32* %eax.global-to-local, align 4
  %v2_8050aaa = add i32 %v1_8050aaa, 16
  %v3_8050aaa = inttoptr i32 %v2_8050aaa to i32*
  store i32 %v1_8050aa7, i32* %v3_8050aaa, align 4
  %v0_8050aae = load i32, i32* @edi, align 4
  %v1_8050aae = add i32 %v0_8050aae, 24
  %v2_8050aae = inttoptr i32 %v1_8050aae to i32*
  %v3_8050aae = load i32, i32* %v2_8050aae, align 4
  %v9_8050aae = icmp eq i32 %v3_8050aae, 512
  br i1 %v9_8050aae, label %dec_label_pc_8051067, label %dec_label_pc_8050abb

dec_label_pc_8050abb:                             ; preds = %dec_label_pc_8050aa7, %dec_label_pc_8051067
  %v0_8050abb = load i32, i32* @esp, align 4
  %v1_8050abb = add i32 %v0_8050abb, 40
  %v2_8050abb = inttoptr i32 %v1_8050abb to i32*
  %v3_8050abb = load i32, i32* %v2_8050abb, align 4
  store i32 %v3_8050abb, i32* %ecx.global-to-local, align 4
  %v1_8050abf = add i32 %v0_8050abb, 16
  %v2_8050abf = inttoptr i32 %v1_8050abf to i32*
  %v3_8050abf = load i32, i32* %v2_8050abf, align 4
  store i32 %v3_8050abf, i32* %ebx.global-to-local, align 4
  store i32 512, i32* %eax.global-to-local, align 4
  %v1_8050ac8 = inttoptr i32 %v3_8050abb to i32*
  store i32 0, i32* %v1_8050ac8, align 4
  %v0_8050ace = load i32, i32* @edi, align 4
  %v1_8050ace = add i32 %v0_8050ace, 24
  %v2_8050ace = inttoptr i32 %v1_8050ace to i32*
  %v3_8050ace = load i32, i32* %v2_8050ace, align 4
  store i32 %v3_8050ace, i32* %edx.global-to-local, align 4
  %v0_8050ad1 = load i32, i32* @esp, align 4
  %v1_8050ad1 = add i32 %v0_8050ad1, -4
  %v2_8050ad1 = inttoptr i32 %v1_8050ad1 to i32*
  store i32 16384, i32* %v2_8050ad1, align 4
  %v0_8050ad6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050ad6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050ad6 = add i32 %v1_8050ad6, %v0_8050ad6
  store i32 %v2_8050ad6, i32* @ebx, align 4
  %v0_8050ad8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ad8 = sub i32 %v0_8050ad8, %v1_8050ad6
  store i32 %v2_8050ad8, i32* %eax.global-to-local, align 4
  %v2_8050ada = add i32 %v0_8050ad1, -8
  %v3_8050ada = inttoptr i32 %v2_8050ada to i32*
  store i32 %v2_8050ad8, i32* %v3_8050ada, align 4
  %v0_8050adb = load i32, i32* @ebx, align 4
  %v2_8050adb = add i32 %v0_8050ad1, -12
  %v3_8050adb = inttoptr i32 %v2_8050adb to i32*
  store i32 %v0_8050adb, i32* %v3_8050adb, align 4
  %v0_8050adc = load i32, i32* @edi, align 4
  %v1_8050adc = add i32 %v0_8050adc, 4
  %v2_8050adc = inttoptr i32 %v1_8050adc to i32*
  %v3_8050adc = load i32, i32* %v2_8050adc, align 4
  %v2_8050adf = add i32 %v0_8050ad1, -16
  %v3_8050adf = inttoptr i32 %v2_8050adf to i32*
  store i32 %v3_8050adc, i32* %v3_8050adf, align 4
  %v0_8050ae0 = call i32 @function_8052d7e()
  store i32 %v0_8050ae0, i32* %eax.global-to-local, align 4
  %v0_8050ae5 = load i32, i32* @esp, align 4
  %v1_8050ae5 = add i32 %v0_8050ae5, 16
  %tmp137 = icmp slt i32 %v0_8050ae0, 1
  br i1 %tmp137, label %dec_label_pc_8050ffc, label %dec_label_pc_8050af1

dec_label_pc_8050af1:                             ; preds = %dec_label_pc_8050abb
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8050af3

dec_label_pc_8050af3:                             ; preds = %dec_label_pc_8050afd, %dec_label_pc_8050af1
  %v0_8050af9 = phi i32 [ %v1_8050afd, %dec_label_pc_8050afd ], [ 0, %dec_label_pc_8050af1 ]
  %v1_8050af3 = load i32, i32* @ebx, align 4
  %v2_8050af3 = add i32 %v1_8050af3, %v0_8050af9
  %v3_8050af3 = inttoptr i32 %v2_8050af3 to i8*
  %v4_8050af3 = load i8, i8* %v3_8050af3, align 1
  %v5_8050af3 = icmp eq i8 %v4_8050af3, 0
  %v1_8050af7 = icmp eq i1 %v5_8050af3, false
  br i1 %v1_8050af7, label %dec_label_pc_8050afd, label %dec_label_pc_8050af9

dec_label_pc_8050af9:                             ; preds = %dec_label_pc_8050af3
  store i8 65, i8* %v3_8050af3, align 1
  %v0_8050afd.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050afd

dec_label_pc_8050afd:                             ; preds = %dec_label_pc_8050af3, %dec_label_pc_8050af9
  %v0_8050afd = phi i32 [ %v0_8050af9, %dec_label_pc_8050af3 ], [ %v0_8050afd.pre, %dec_label_pc_8050af9 ]
  %v1_8050afd = add i32 %v0_8050afd, 1
  store i32 %v1_8050afd, i32* @edx, align 4
  %v12_8050afe = icmp eq i32 %v0_8050ae0, %v1_8050afd
  %v1_8050b00 = icmp eq i1 %v12_8050afe, false
  br i1 %v1_8050b00, label %dec_label_pc_8050af3, label %dec_label_pc_8050b02

dec_label_pc_8050b02:                             ; preds = %dec_label_pc_8050afd, %dec_label_pc_8051002
  %v0_8050b02 = load i32, i32* @edi, align 4
  %v1_8050b02 = add i32 %v0_8050b02, 24
  %v2_8050b02 = inttoptr i32 %v1_8050b02 to i32*
  %v3_8050b02 = load i32, i32* %v2_8050b02, align 4
  %v2_8050b05 = add i32 %v3_8050b02, %v0_8050ae0
  store i32 %v2_8050b05, i32* @ebx, align 4
  %v0_8050b07 = load i32, i32* @global_var_8056150.24, align 16
  store i32 %v0_8050b07, i32* %eax.global-to-local, align 4
  store i32 %v2_8050b05, i32* %v2_8050b02, align 4
  %v0_8050b0f = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b0f = load i32, i32* @edi, align 4
  %v2_8050b0f = add i32 %v1_8050b0f, 8
  %v3_8050b0f = inttoptr i32 %v2_8050b0f to i32*
  store i32 %v0_8050b0f, i32* %v3_8050b0f, align 4
  br label %dec_label_pc_8050b12

dec_label_pc_8050b12:                             ; preds = %dec_label_pc_8050e1c, %dec_label_pc_8050b02
  %v0_8050b12 = load i32, i32* @edi, align 4
  %v1_8050b12 = add i32 %v0_8050b12, 12
  %v2_8050b12 = inttoptr i32 %v1_8050b12 to i32*
  %v3_8050b12 = load i32, i32* %v2_8050b12, align 4
  store i32 %v3_8050b12, i32* %eax.global-to-local, align 4
  switch i32 %v3_8050b12, label %dec_label_pc_8050aa0.loopexit12.loopexit [
    i32 2, label %dec_label_pc_8050b22
    i32 3, label %dec_label_pc_8050bb5
    i32 4, label %dec_label_pc_8050c40
    i32 5, label %dec_label_pc_8050a64
    i32 6, label %dec_label_pc_8050ce5
    i32 7, label %dec_label_pc_8050e3c
    i32 8, label %dec_label_pc_8050ca0
    i32 9, label %dec_label_pc_8050ef3
    i32 10, label %dec_label_pc_8050d30
  ]

dec_label_pc_8050b22:                             ; preds = %dec_label_pc_8050b12
  %v0_8050b22 = load i32, i32* @esp, align 4
  %v1_8050b22 = add i32 %v0_8050b22, 16
  %v2_8050b22 = inttoptr i32 %v1_8050b22 to i32*
  %v3_8050b22 = load i32, i32* %v2_8050b22, align 4
  store i32 %v3_8050b22, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8050b28 = add i32 %v0_8050b12, 24
  %v2_8050b28 = inttoptr i32 %v1_8050b28 to i32*
  %v3_8050b28 = load i32, i32* %v2_8050b28, align 4
  store i32 %v3_8050b28, i32* %edx.global-to-local, align 4
  %v2_8050b2b18 = sub i32 0, %v3_8050b28
  %v10_8050b2b22 = and i32 %v3_8050b28, %v2_8050b2b18
  %v11_8050b2b23 = icmp slt i32 %v10_8050b2b22, 0
  %v13_8050b2b25 = icmp slt i32 %v2_8050b2b18, 0
  %v2_8050b2d26 = icmp eq i1 %v13_8050b2b25, %v11_8050b2b23
  br i1 %v2_8050b2d26, label %dec_label_pc_8050f43.thread, label %dec_label_pc_8050b2f.preheader

dec_label_pc_8050f43.thread:                      ; preds = %dec_label_pc_8050b22
  br label %dec_label_pc_8050aa0.backedge

dec_label_pc_8050b2f.preheader:                   ; preds = %dec_label_pc_8050b22, %dec_label_pc_8050b2b.backedge
  %v0_8050ba9126 = phi i32 [ %v0_8050ba9128, %dec_label_pc_8050b2b.backedge ], [ %v0_8050b12, %dec_label_pc_8050b22 ]
  %v0_8050f3b119 = phi i32 [ %v0_8050b2b, %dec_label_pc_8050b2b.backedge ], [ 0, %dec_label_pc_8050b22 ]
  %v5_8050b41108 = phi i32 [ %v5_8050b41109, %dec_label_pc_8050b2b.backedge ], [ 2, %dec_label_pc_8050b22 ]
  %v1_8050b3b106 = phi i32 [ %v1_8050b2b, %dec_label_pc_8050b2b.backedge ], [ %v3_8050b28, %dec_label_pc_8050b22 ]
  %v0_8050b34103 = phi i32 [ %v0_8050b34104, %dec_label_pc_8050b2b.backedge ], [ %v0_8050b22, %dec_label_pc_8050b22 ]
  br label %dec_label_pc_8050b2f

dec_label_pc_8050b2f:                             ; preds = %dec_label_pc_8050b2f.preheader, %dec_label_pc_8050b80
  %v0_8050ba9129 = phi i32 [ %v0_8050ba9126, %dec_label_pc_8050b2f.preheader ], [ %v0_8050b97, %dec_label_pc_8050b80 ]
  %v0_8050f3b = phi i32 [ %v0_8050f3b119, %dec_label_pc_8050b2f.preheader ], [ %v0_8050b9d, %dec_label_pc_8050b80 ]
  %v5_8050b41 = phi i32 [ %v5_8050b41108, %dec_label_pc_8050b2f.preheader ], [ %v0_8050b92, %dec_label_pc_8050b80 ]
  %v1_8050b3b = phi i32 [ %v1_8050b3b106, %dec_label_pc_8050b2f.preheader ], [ %v3_8050b97, %dec_label_pc_8050b80 ]
  %v0_8050f50 = phi i32 [ %v0_8050b34103, %dec_label_pc_8050b2f.preheader ], [ %v1_8050b9a, %dec_label_pc_8050b80 ]
  %v0_8050b2f = load i32, i32* @ebx, align 4
  %v1_8050b2f = inttoptr i32 %v0_8050b2f to i8*
  %v2_8050b2f = load i8, i8* %v1_8050b2f, align 1
  %v12_8050b2f = icmp eq i8 %v2_8050b2f, -1
  %v1_8050b32 = icmp eq i1 %v12_8050b2f, false
  br i1 %v1_8050b32, label %dec_label_pc_8050ba1, label %dec_label_pc_8050b34

dec_label_pc_8050b34:                             ; preds = %dec_label_pc_8050b2f
  %v1_8050b34 = add i32 %v0_8050f50, 16
  %v2_8050b34 = inttoptr i32 %v1_8050b34 to i32*
  %v3_8050b34 = load i32, i32* %v2_8050b34, align 4
  %v1_8050b38 = add i32 %v0_8050b2f, 1
  store i32 %v1_8050b38, i32* @esi, align 4
  %v2_8050b3b = add i32 %v3_8050b34, %v1_8050b3b
  store i32 %v2_8050b3b, i32* %ecx.global-to-local, align 4
  %tmp297 = icmp ugt i32 %v2_8050b3b, %v1_8050b38
  br i1 %tmp297, label %dec_label_pc_8050b41, label %dec_label_pc_8050ba1

dec_label_pc_8050b41:                             ; preds = %dec_label_pc_8050b34
  %v2_8050b41 = inttoptr i32 %v1_8050b38 to i8*
  %v3_8050b41 = load i8, i8* %v2_8050b41, align 1
  %v4_8050b41 = zext i8 %v3_8050b41 to i32
  %v6_8050b41 = and i32 %v5_8050b41, -256
  %v7_8050b41 = or i32 %v4_8050b41, %v6_8050b41
  store i32 %v7_8050b41, i32* %eax.global-to-local, align 4
  %v11_8050b44 = icmp eq i8 %v3_8050b41, -1
  br i1 %v11_8050b44, label %dec_label_pc_8050f38, label %dec_label_pc_8050b4c

dec_label_pc_8050b4c:                             ; preds = %dec_label_pc_8050b41
  %v11_8050b4c = icmp eq i8 %v3_8050b41, -3
  br i1 %v11_8050b4c, label %dec_label_pc_8050f50, label %dec_label_pc_8050b54

dec_label_pc_8050b54:                             ; preds = %dec_label_pc_8050b4c
  %v1_8050b54 = add i32 %v0_8050b2f, 2
  store i32 %v1_8050b54, i32* %eax.global-to-local, align 4
  %tmp298 = icmp ugt i32 %v2_8050b3b, %v1_8050b54
  br i1 %tmp298, label %dec_label_pc_8050b5b, label %dec_label_pc_8050ba1

dec_label_pc_8050b5b:                             ; preds = %dec_label_pc_8050b54, %dec_label_pc_8051523, %dec_label_pc_805152b
  %v4_8050b5b = phi i32 [ %v6_8050fce, %dec_label_pc_8051523 ], [ %v1_8050b54, %dec_label_pc_8050b54 ], [ %v4_8050b5b.pre, %dec_label_pc_805152b ]
  %v0_8050b5b = load i32, i32* @esi, align 4
  %v1_8050b5b = inttoptr i32 %v0_8050b5b to i8*
  %v2_8050b5b = load i8, i8* %v1_8050b5b, align 1
  %v3_8050b5b = zext i8 %v2_8050b5b to i32
  %v5_8050b5b = and i32 %v4_8050b5b, -256
  %v6_8050b5b = or i32 %v3_8050b5b, %v5_8050b5b
  store i32 %v6_8050b5b, i32* %eax.global-to-local, align 4
  %v11_8050b5d = icmp eq i8 %v2_8050b5b, -3
  br i1 %v11_8050b5d, label %dec_label_pc_8050fe5, label %dec_label_pc_8050b65

dec_label_pc_8050b65:                             ; preds = %dec_label_pc_8050fd8, %dec_label_pc_8050b5b
  %v0_8051056 = phi i32 [ %v0_8050fdb, %dec_label_pc_8050fd8 ], [ %v0_8050b5b, %dec_label_pc_8050b5b ]
  %v0_8050b65 = phi i32 [ %v6_8050fdb, %dec_label_pc_8050fd8 ], [ %v6_8050b5b, %dec_label_pc_8050b5b ]
  %v1_8050b65 = trunc i32 %v0_8050b65 to i8
  %v11_8050b65 = icmp eq i8 %v1_8050b65, -5
  br i1 %v11_8050b65, label %dec_label_pc_8051056, label %dec_label_pc_8050b6d

dec_label_pc_8050b6d:                             ; preds = %dec_label_pc_8050b65, %dec_label_pc_8051056
  %v5_8050b6d = phi i32 [ %v0_8050b65, %dec_label_pc_8050b65 ], [ %v5_8050b6d.pre, %dec_label_pc_8051056 ]
  %v0_8050b6d = load i32, i32* @ebx, align 4
  %v1_8050b6d = add i32 %v0_8050b6d, 2
  %v2_8050b6d = inttoptr i32 %v1_8050b6d to i8*
  %v3_8050b6d = load i8, i8* %v2_8050b6d, align 1
  %v4_8050b6d = zext i8 %v3_8050b6d to i32
  %v6_8050b6d = and i32 %v5_8050b6d, -256
  %v7_8050b6d = or i32 %v4_8050b6d, %v6_8050b6d
  store i32 %v7_8050b6d, i32* %eax.global-to-local, align 4
  %v11_8050b70 = icmp eq i8 %v3_8050b6d, -3
  br i1 %v11_8050b70, label %dec_label_pc_8050ff3, label %dec_label_pc_8050b78

dec_label_pc_8050b78:                             ; preds = %dec_label_pc_8050fe5, %dec_label_pc_8050b6d
  %v0_805105e = phi i32 [ %v0_8050fe8, %dec_label_pc_8050fe5 ], [ %v0_8050b6d, %dec_label_pc_8050b6d ]
  %v0_8050b78 = phi i32 [ %v7_8050fe8, %dec_label_pc_8050fe5 ], [ %v7_8050b6d, %dec_label_pc_8050b6d ]
  %v1_8050b78 = trunc i32 %v0_8050b78 to i8
  %v11_8050b78 = icmp eq i8 %v1_8050b78, -5
  br i1 %v11_8050b78, label %dec_label_pc_805105e, label %dec_label_pc_8050b80

dec_label_pc_8050b80:                             ; preds = %dec_label_pc_8050b78, %dec_label_pc_805105e, %dec_label_pc_8050ff3
  %v0_8050b80 = load i32, i32* @esp, align 4
  %v1_8050b80 = add i32 %v0_8050b80, -4
  %v2_8050b80 = inttoptr i32 %v1_8050b80 to i32*
  store i32 16384, i32* %v2_8050b80, align 4
  %v1_8050b85 = add i32 %v0_8050b80, -8
  %v2_8050b85 = inttoptr i32 %v1_8050b85 to i32*
  store i32 3, i32* %v2_8050b85, align 4
  %v0_8050b87 = load i32, i32* @ebx, align 4
  %v2_8050b87 = add i32 %v0_8050b80, -12
  %v3_8050b87 = inttoptr i32 %v2_8050b87 to i32*
  store i32 %v0_8050b87, i32* %v3_8050b87, align 4
  %v0_8050b88 = load i32, i32* @ebp, align 4
  %v1_8050b88 = add i32 %v0_8050b88, 3
  store i32 %v1_8050b88, i32* @ebp, align 4
  %v0_8050b8b = load i32, i32* @edi, align 4
  %v1_8050b8b = add i32 %v0_8050b8b, 4
  %v2_8050b8b = inttoptr i32 %v1_8050b8b to i32*
  %v3_8050b8b = load i32, i32* %v2_8050b8b, align 4
  store i32 %v3_8050b8b, i32* %edx.global-to-local, align 4
  %v0_8050b8e = load i32, i32* @ebx, align 4
  %v1_8050b8e = add i32 %v0_8050b8e, 3
  store i32 %v1_8050b8e, i32* @ebx, align 4
  %v2_8050b91 = add i32 %v0_8050b80, -16
  %v3_8050b91 = inttoptr i32 %v2_8050b91 to i32*
  store i32 %v3_8050b8b, i32* %v3_8050b91, align 4
  %v0_8050b92 = call i32 @function_8052df4()
  store i32 %v0_8050b92, i32* %eax.global-to-local, align 4
  %v0_8050b97 = load i32, i32* @edi, align 4
  %v1_8050b97 = add i32 %v0_8050b97, 24
  %v2_8050b97 = inttoptr i32 %v1_8050b97 to i32*
  %v3_8050b97 = load i32, i32* %v2_8050b97, align 4
  store i32 %v3_8050b97, i32* %edx.global-to-local, align 4
  %v0_8050b9a = load i32, i32* @esp, align 4
  %v1_8050b9a = add i32 %v0_8050b9a, 16
  %v0_8050b9d = load i32, i32* @ebp, align 4
  %v2_8050b9d = sub i32 %v0_8050b9d, %v3_8050b97
  %v8_8050b9d = xor i32 %v0_8050b9d, %v3_8050b97
  %v9_8050b9d = xor i32 %v2_8050b9d, %v0_8050b9d
  %v10_8050b9d = and i32 %v9_8050b9d, %v8_8050b9d
  %v11_8050b9d = icmp slt i32 %v10_8050b9d, 0
  %v13_8050b9d = icmp slt i32 %v2_8050b9d, 0
  %v2_8050b9f = icmp eq i1 %v13_8050b9d, %v11_8050b9d
  br i1 %v2_8050b9f, label %dec_label_pc_8050ba1, label %dec_label_pc_8050b2f

dec_label_pc_8050ba1:                             ; preds = %dec_label_pc_8050b2b.backedge, %dec_label_pc_8050b54, %dec_label_pc_8050b34, %dec_label_pc_8050b80, %dec_label_pc_8050b2f, %dec_label_pc_8050f50.dec_label_pc_8050ba1.loopexit_crit_edge
  %v0_8050ba9 = phi i32 [ %v0_8050fb4, %dec_label_pc_8050f50.dec_label_pc_8050ba1.loopexit_crit_edge ], [ %v0_8050b97, %dec_label_pc_8050b80 ], [ %v0_8050ba9129, %dec_label_pc_8050b54 ], [ %v0_8050ba9129, %dec_label_pc_8050b34 ], [ %v0_8050ba9129, %dec_label_pc_8050b2f ], [ %v0_8050ba9128, %dec_label_pc_8050b2b.backedge ]
  %v0_8050ba1 = phi i32 [ %v0_8050ba1.pre.pre, %dec_label_pc_8050f50.dec_label_pc_8050ba1.loopexit_crit_edge ], [ %v0_8050b9d, %dec_label_pc_8050b80 ], [ %v0_8050f3b, %dec_label_pc_8050b54 ], [ %v0_8050f3b, %dec_label_pc_8050b34 ], [ %v0_8050f3b, %dec_label_pc_8050b2f ], [ %v0_8050b2b, %dec_label_pc_8050b2b.backedge ]
  %tmp138 = icmp slt i32 %v0_8050ba1, 1
  br i1 %tmp138, label %dec_label_pc_8050f43, label %dec_label_pc_8050ba9

dec_label_pc_8050ba9:                             ; preds = %dec_label_pc_8050ba1
  %v1_8050ba9 = add i32 %v0_8050ba9, 12
  %v2_8050ba9 = inttoptr i32 %v1_8050ba9 to i32*
  store i32 3, i32* %v2_8050ba9, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_8050bb5:                             ; preds = %dec_label_pc_8050b12
  %v1_8050bb5 = add i32 %v0_8050b12, 24
  %v2_8050bb5 = inttoptr i32 %v1_8050bb5 to i32*
  %v3_8050bb5 = load i32, i32* %v2_8050bb5, align 4
  store i32 %v3_8050bb5, i32* %ecx.global-to-local, align 4
  %v1_8050bb8 = add i32 %v3_8050bb5, -1
  store i32 %v1_8050bb8, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_8050bb8, 1
  br i1 %tmp139, label %dec_label_pc_8050bf3, label %dec_label_pc_8050bbf.preheader

dec_label_pc_8050bbf.preheader:                   ; preds = %dec_label_pc_8050bb5
  %v7_8050bbf.pre = load i32, i32* @edx, align 4
  %v2_8050bbf = add i32 %v0_8050b12, 28
  br label %dec_label_pc_8050bbf

dec_label_pc_8050bbf:                             ; preds = %dec_label_pc_8050bbf.preheader, %dec_label_pc_8050bf0
  %v7_8050bbf = phi i32 [ %v7_8050bbf.pre, %dec_label_pc_8050bbf.preheader ], [ %v9_8050bbf, %dec_label_pc_8050bf0 ]
  %v0_805108d = phi i32 [ %v1_8050bb8, %dec_label_pc_8050bbf.preheader ], [ %v1_8050bf0, %dec_label_pc_8050bf0 ]
  %v3_8050bbf = add i32 %v2_8050bbf, %v0_805108d
  %v4_8050bbf = inttoptr i32 %v3_8050bbf to i8*
  %v5_8050bbf = load i8, i8* %v4_8050bbf, align 1
  %v6_8050bbf = zext i8 %v5_8050bbf to i32
  %v8_8050bbf = and i32 %v7_8050bbf, -256
  %v9_8050bbf = or i32 %v6_8050bbf, %v8_8050bbf
  store i32 %v9_8050bbf, i32* %edx.global-to-local, align 4
  %v10_8050bc3 = icmp eq i8 %v5_8050bbf, 58
  br i1 %v10_8050bc3, label %dec_label_pc_805108d, label %dec_label_pc_8050bcc

dec_label_pc_8050bcc:                             ; preds = %dec_label_pc_8050bbf
  %v10_8050bcc = icmp eq i8 %v5_8050bbf, 62
  br i1 %v10_8050bcc, label %dec_label_pc_805108d, label %dec_label_pc_8050bd5

dec_label_pc_8050bd5:                             ; preds = %dec_label_pc_8050bcc
  %v10_8050bd5 = icmp eq i8 %v5_8050bbf, 36
  br i1 %v10_8050bd5, label %dec_label_pc_805108d, label %dec_label_pc_8050bde

dec_label_pc_8050bde:                             ; preds = %dec_label_pc_8050bd5
  %v10_8050bde = icmp eq i8 %v5_8050bbf, 35
  br i1 %v10_8050bde, label %dec_label_pc_805108d, label %dec_label_pc_8050be7

dec_label_pc_8050be7:                             ; preds = %dec_label_pc_8050bde
  %v10_8050be7 = icmp eq i8 %v5_8050bbf, 37
  br i1 %v10_8050be7, label %dec_label_pc_805108d, label %dec_label_pc_8050bf0

dec_label_pc_8050bf0:                             ; preds = %dec_label_pc_8050be7
  %v1_8050bf0 = add i32 %v0_805108d, -1
  %v8_8050bf0 = icmp eq i32 %v1_8050bf0, 0
  store i32 %v1_8050bf0, i32* %eax.global-to-local, align 4
  %v1_8050bf1 = icmp eq i1 %v8_8050bf0, false
  br i1 %v1_8050bf1, label %dec_label_pc_8050bbf, label %dec_label_pc_8050bf3

dec_label_pc_8050bf3:                             ; preds = %dec_label_pc_8050bf0, %dec_label_pc_805108d, %dec_label_pc_8050bb5
  %v0_8050bf3 = load i32, i32* @esp, align 4
  %v1_8050bf3 = add i32 %v0_8050bf3, -4
  %v2_8050bf3 = inttoptr i32 %v1_8050bf3 to i32*
  store i32 4, i32* %v2_8050bf3, align 4
  %v1_8050bf5 = add i32 %v0_8050bf3, -8
  %v2_8050bf5 = inttoptr i32 %v1_8050bf5 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554eb.37 to i32), i32* %v2_8050bf5, align 4
  %v0_8050bfa = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050bfa = add i32 %v0_8050bf3, -12
  %v3_8050bfa = inttoptr i32 %v2_8050bfa to i32*
  store i32 %v0_8050bfa, i32* %v3_8050bfa, align 4
  %v1_8050bfb = add i32 %v0_8050bf3, 16
  %v2_8050bfb = inttoptr i32 %v1_8050bfb to i32*
  %v3_8050bfb = load i32, i32* %v2_8050bfb, align 4
  store i32 %v3_8050bfb, i32* %eax.global-to-local, align 4
  %v2_8050bff = add i32 %v0_8050bf3, -16
  %v3_8050bff = inttoptr i32 %v2_8050bff to i32*
  store i32 %v3_8050bfb, i32* %v3_8050bff, align 4
  %v0_8050c00 = call i32 @function_80521c0()
  store i32 %v0_8050c00, i32* %eax.global-to-local, align 4
  %v0_8050c05 = load i32, i32* @esp, align 4
  store i32 %v0_8050c00, i32* @ebp, align 4
  %v10_8050c0a = icmp eq i32 %v0_8050c00, -1
  %v1_8050c0d = icmp eq i1 %v10_8050c0a, false
  br i1 %v1_8050c0d, label %dec_label_pc_8051099, label %dec_label_pc_8050c13

dec_label_pc_8050c13:                             ; preds = %dec_label_pc_8050bf3
  %v1_8050c13 = add i32 %v0_8050c05, 12
  %v2_8050c13 = inttoptr i32 %v1_8050c13 to i32*
  store i32 5, i32* %v2_8050c13, align 4
  %v1_8050c15 = add i32 %v0_8050c05, 8
  %v2_8050c15 = inttoptr i32 %v1_8050c15 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_80554f0.38 to i32), i32* %v2_8050c15, align 4
  %v0_8050c1a = load i32, i32* @edi, align 4
  %v1_8050c1a = add i32 %v0_8050c1a, 24
  %v2_8050c1a = inttoptr i32 %v1_8050c1a to i32*
  %v3_8050c1a = load i32, i32* %v2_8050c1a, align 4
  store i32 %v3_8050c1a, i32* %eax.global-to-local, align 4
  %v2_8050c1d = add i32 %v0_8050c05, 4
  %v3_8050c1d = inttoptr i32 %v2_8050c1d to i32*
  store i32 %v3_8050c1a, i32* %v3_8050c1d, align 4
  %v1_8050c1e = add i32 %v0_8050c05, 32
  %v2_8050c1e = inttoptr i32 %v1_8050c1e to i32*
  %v3_8050c1e = load i32, i32* %v2_8050c1e, align 4
  store i32 %v3_8050c1e, i32* %eax.global-to-local, align 4
  %v3_8050c22 = inttoptr i32 %v0_8050c05 to i32*
  store i32 %v3_8050c1e, i32* %v3_8050c22, align 4
  %v0_8050c23 = call i32 @function_80521c0()
  store i32 %v0_8050c23, i32* %eax.global-to-local, align 4
  store i32 %v0_8050c23, i32* @ebp, align 4
  %v10_8050c2d = icmp eq i32 %v0_8050c23, -1
  %v1_8050c30 = icmp eq i1 %v10_8050c2d, false
  br i1 %v1_8050c30, label %dec_label_pc_8051099, label %dec_label_pc_8050aa0.loopexit12.loopexit

dec_label_pc_8050c40:                             ; preds = %dec_label_pc_8050b12
  %v1_8050c40 = add i32 %v0_8050b12, 24
  %v2_8050c40 = inttoptr i32 %v1_8050c40 to i32*
  %v3_8050c40 = load i32, i32* %v2_8050c40, align 4
  store i32 %v3_8050c40, i32* %ecx.global-to-local, align 4
  %v1_8050c43 = add i32 %v3_8050c40, -1
  store i32 %v1_8050c43, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_8050c43, 1
  br i1 %tmp140, label %dec_label_pc_8050c75, label %dec_label_pc_8050c4a.preheader

dec_label_pc_8050c4a.preheader:                   ; preds = %dec_label_pc_8050c40
  %v7_8050c4a.pre = load i32, i32* @edx, align 4
  %v2_8050c4a = add i32 %v0_8050b12, 28
  br label %dec_label_pc_8050c4a

dec_label_pc_8050c4a:                             ; preds = %dec_label_pc_8050c4a.preheader, %dec_label_pc_8050c72
  %v7_8050c4a = phi i32 [ %v7_8050c4a.pre, %dec_label_pc_8050c4a.preheader ], [ %v9_8050c4a, %dec_label_pc_8050c72 ]
  %v0_80510de = phi i32 [ %v1_8050c43, %dec_label_pc_8050c4a.preheader ], [ %v1_8050c72, %dec_label_pc_8050c72 ]
  %v3_8050c4a = add i32 %v2_8050c4a, %v0_80510de
  %v4_8050c4a = inttoptr i32 %v3_8050c4a to i8*
  %v5_8050c4a = load i8, i8* %v4_8050c4a, align 1
  %v6_8050c4a = zext i8 %v5_8050c4a to i32
  %v8_8050c4a = and i32 %v7_8050c4a, -256
  %v9_8050c4a = or i32 %v6_8050c4a, %v8_8050c4a
  store i32 %v9_8050c4a, i32* %edx.global-to-local, align 4
  %v10_8050c4e = icmp eq i8 %v5_8050c4a, 58
  br i1 %v10_8050c4e, label %dec_label_pc_80510de, label %dec_label_pc_8050c57

dec_label_pc_8050c57:                             ; preds = %dec_label_pc_8050c4a
  %v10_8050c57 = icmp eq i8 %v5_8050c4a, 62
  br i1 %v10_8050c57, label %dec_label_pc_80510de, label %dec_label_pc_8050c60

dec_label_pc_8050c60:                             ; preds = %dec_label_pc_8050c57
  %v10_8050c60 = icmp eq i8 %v5_8050c4a, 36
  br i1 %v10_8050c60, label %dec_label_pc_80510de, label %dec_label_pc_8050c69

dec_label_pc_8050c69:                             ; preds = %dec_label_pc_8050c60
  %v10_8050c69 = icmp eq i8 %v5_8050c4a, 35
  br i1 %v10_8050c69, label %dec_label_pc_80510de, label %dec_label_pc_8050c72

dec_label_pc_8050c72:                             ; preds = %dec_label_pc_8050c69
  %v1_8050c72 = add i32 %v0_80510de, -1
  %v8_8050c72 = icmp eq i32 %v1_8050c72, 0
  store i32 %v1_8050c72, i32* %eax.global-to-local, align 4
  %v1_8050c73 = icmp eq i1 %v8_8050c72, false
  br i1 %v1_8050c73, label %dec_label_pc_8050c4a, label %dec_label_pc_8050c75

dec_label_pc_8050c75:                             ; preds = %dec_label_pc_8050c72, %dec_label_pc_80510de, %dec_label_pc_8050c40
  %v0_8050c75 = load i32, i32* @esp, align 4
  %v1_8050c75 = add i32 %v0_8050c75, -4
  %v2_8050c75 = inttoptr i32 %v1_8050c75 to i32*
  store i32 7, i32* %v2_8050c75, align 4
  %v1_8050c77 = add i32 %v0_8050c75, -8
  %v2_8050c77 = inttoptr i32 %v1_8050c77 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_80554f6.39 to i32), i32* %v2_8050c77, align 4
  %v0_8050c7c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050c7c = add i32 %v0_8050c75, -12
  %v3_8050c7c = inttoptr i32 %v2_8050c7c to i32*
  store i32 %v0_8050c7c, i32* %v3_8050c7c, align 4
  %v1_8050c7d = add i32 %v0_8050c75, 16
  %v2_8050c7d = inttoptr i32 %v1_8050c7d to i32*
  %v3_8050c7d = load i32, i32* %v2_8050c7d, align 4
  %v2_8050c81 = add i32 %v0_8050c75, -16
  %v3_8050c81 = inttoptr i32 %v2_8050c81 to i32*
  store i32 %v3_8050c7d, i32* %v3_8050c81, align 4
  %v0_8050c82 = call i32 @function_80521c0()
  store i32 %v0_8050c82, i32* %eax.global-to-local, align 4
  store i32 %v0_8050c82, i32* @ebp, align 4
  %v10_8050c8c = icmp eq i32 %v0_8050c82, -1
  %v1_8050c8f = icmp eq i1 %v10_8050c8c, false
  br i1 %v1_8050c8f, label %dec_label_pc_80510ea, label %dec_label_pc_8050aa0.loopexit12.loopexit

dec_label_pc_8050ca0:                             ; preds = %dec_label_pc_8050b12
  %v1_8050ca0 = add i32 %v0_8050b12, 24
  %v2_8050ca0 = inttoptr i32 %v1_8050ca0 to i32*
  %v3_8050ca0 = load i32, i32* %v2_8050ca0, align 4
  %v1_8050ca3 = add i32 %v3_8050ca0, -1
  store i32 %v1_8050ca3, i32* %eax.global-to-local, align 4
  %tmp141 = icmp slt i32 %v1_8050ca3, 1
  br i1 %tmp141, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_8050cac.preheader

dec_label_pc_8050cac.preheader:                   ; preds = %dec_label_pc_8050ca0
  %v7_8050cac.pre = load i32, i32* @edx, align 4
  %v2_8050cac = add i32 %v0_8050b12, 28
  br label %dec_label_pc_8050cac

dec_label_pc_8050cac:                             ; preds = %dec_label_pc_8050cac.preheader, %dec_label_pc_8050cdd
  %v7_8050cac = phi i32 [ %v7_8050cac.pre, %dec_label_pc_8050cac.preheader ], [ %v9_8050cac, %dec_label_pc_8050cdd ]
  %v0_8051222 = phi i32 [ %v1_8050ca3, %dec_label_pc_8050cac.preheader ], [ %v1_8050cdd, %dec_label_pc_8050cdd ]
  %v3_8050cac = add i32 %v2_8050cac, %v0_8051222
  %v4_8050cac = inttoptr i32 %v3_8050cac to i8*
  %v5_8050cac = load i8, i8* %v4_8050cac, align 1
  %v6_8050cac = zext i8 %v5_8050cac to i32
  %v8_8050cac = and i32 %v7_8050cac, -256
  %v9_8050cac = or i32 %v6_8050cac, %v8_8050cac
  store i32 %v9_8050cac, i32* %edx.global-to-local, align 4
  %v10_8050cb0 = icmp eq i8 %v5_8050cac, 58
  br i1 %v10_8050cb0, label %dec_label_pc_8051222, label %dec_label_pc_8050cb9

dec_label_pc_8050cb9:                             ; preds = %dec_label_pc_8050cac
  %v10_8050cb9 = icmp eq i8 %v5_8050cac, 62
  br i1 %v10_8050cb9, label %dec_label_pc_8051222, label %dec_label_pc_8050cc2

dec_label_pc_8050cc2:                             ; preds = %dec_label_pc_8050cb9
  %v10_8050cc2 = icmp eq i8 %v5_8050cac, 36
  br i1 %v10_8050cc2, label %dec_label_pc_8051222, label %dec_label_pc_8050ccb

dec_label_pc_8050ccb:                             ; preds = %dec_label_pc_8050cc2
  %v10_8050ccb = icmp eq i8 %v5_8050cac, 35
  br i1 %v10_8050ccb, label %dec_label_pc_8051222, label %dec_label_pc_8050cd4

dec_label_pc_8050cd4:                             ; preds = %dec_label_pc_8050ccb
  %v10_8050cd4 = icmp eq i8 %v5_8050cac, 37
  br i1 %v10_8050cd4, label %dec_label_pc_8051222, label %dec_label_pc_8050cdd

dec_label_pc_8050cdd:                             ; preds = %dec_label_pc_8050cd4
  %v1_8050cdd = add i32 %v0_8051222, -1
  %v8_8050cdd = icmp eq i32 %v1_8050cdd, 0
  store i32 %v1_8050cdd, i32* %eax.global-to-local, align 4
  %v1_8050cde = icmp eq i1 %v8_8050cdd, false
  br i1 %v1_8050cde, label %dec_label_pc_8050cac, label %dec_label_pc_8050aa0.backedge

dec_label_pc_8050ce5:                             ; preds = %dec_label_pc_8050b12
  %v1_8050ce5 = add i32 %v0_8050b12, 24
  %v2_8050ce5 = inttoptr i32 %v1_8050ce5 to i32*
  %v3_8050ce5 = load i32, i32* %v2_8050ce5, align 4
  %v1_8050ce8 = add i32 %v3_8050ce5, -1
  store i32 %v1_8050ce8, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v1_8050ce8, 1
  br i1 %tmp142, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_8050cf1.preheader

dec_label_pc_8050cf1.preheader:                   ; preds = %dec_label_pc_8050ce5
  %v7_8050cf1.pre = load i32, i32* @edx, align 4
  %v2_8050cf1 = add i32 %v0_8050b12, 28
  br label %dec_label_pc_8050cf1

dec_label_pc_8050cf1:                             ; preds = %dec_label_pc_8050cf1.preheader, %dec_label_pc_8050d22
  %v7_8050cf1 = phi i32 [ %v7_8050cf1.pre, %dec_label_pc_8050cf1.preheader ], [ %v9_8050cf1, %dec_label_pc_8050d22 ]
  %v0_8051130 = phi i32 [ %v1_8050ce8, %dec_label_pc_8050cf1.preheader ], [ %v1_8050d22, %dec_label_pc_8050d22 ]
  %v3_8050cf1 = add i32 %v2_8050cf1, %v0_8051130
  %v4_8050cf1 = inttoptr i32 %v3_8050cf1 to i8*
  %v5_8050cf1 = load i8, i8* %v4_8050cf1, align 1
  %v6_8050cf1 = zext i8 %v5_8050cf1 to i32
  %v8_8050cf1 = and i32 %v7_8050cf1, -256
  %v9_8050cf1 = or i32 %v6_8050cf1, %v8_8050cf1
  store i32 %v9_8050cf1, i32* %edx.global-to-local, align 4
  %v10_8050cf5 = icmp eq i8 %v5_8050cf1, 58
  br i1 %v10_8050cf5, label %dec_label_pc_8051130, label %dec_label_pc_8050cfe

dec_label_pc_8050cfe:                             ; preds = %dec_label_pc_8050cf1
  %v10_8050cfe = icmp eq i8 %v5_8050cf1, 62
  br i1 %v10_8050cfe, label %dec_label_pc_8051130, label %dec_label_pc_8050d07

dec_label_pc_8050d07:                             ; preds = %dec_label_pc_8050cfe
  %v10_8050d07 = icmp eq i8 %v5_8050cf1, 36
  br i1 %v10_8050d07, label %dec_label_pc_8051130, label %dec_label_pc_8050d10

dec_label_pc_8050d10:                             ; preds = %dec_label_pc_8050d07
  %v10_8050d10 = icmp eq i8 %v5_8050cf1, 35
  br i1 %v10_8050d10, label %dec_label_pc_8051130, label %dec_label_pc_8050d19

dec_label_pc_8050d19:                             ; preds = %dec_label_pc_8050d10
  %v10_8050d19 = icmp eq i8 %v5_8050cf1, 37
  br i1 %v10_8050d19, label %dec_label_pc_8051130, label %dec_label_pc_8050d22

dec_label_pc_8050d22:                             ; preds = %dec_label_pc_8050d19
  %v1_8050d22 = add i32 %v0_8051130, -1
  %v8_8050d22 = icmp eq i32 %v1_8050d22, 0
  store i32 %v1_8050d22, i32* %eax.global-to-local, align 4
  %v1_8050d23 = icmp eq i1 %v8_8050d22, false
  br i1 %v1_8050d23, label %dec_label_pc_8050cf1, label %dec_label_pc_8050aa0.backedge

dec_label_pc_8050d30:                             ; preds = %dec_label_pc_8050b12
  %v0_8050d30 = load i32, i32* @esp, align 4
  %v1_8050d33 = add i32 %v0_8050d30, -16
  %v2_8050d33 = inttoptr i32 %v1_8050d33 to i32*
  store i32 26, i32* %v2_8050d33, align 4
  %v2_8050d35 = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d35, i32* %eax.global-to-local, align 4
  %v0_8050d3a = load i32, i32* @esp, align 4
  %v1_8050d3a = inttoptr i32 %v0_8050d3a to i32*
  %v2_8050d3a = load i32, i32* %v1_8050d3a, align 4
  store i32 %v2_8050d3a, i32* %eax.global-to-local, align 4
  %v3_8050d3a = add i32 %v0_8050d3a, 4
  %v1_8050d3b = inttoptr i32 %v3_8050d3a to i32*
  %v2_8050d3b = load i32, i32* %v1_8050d3b, align 4
  store i32 %v2_8050d3b, i32* %edx.global-to-local, align 4
  %v1_8050d3c = add i32 %v0_8050d3a, 1880
  store i32 %v1_8050d3c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050d3c, i32* %v1_8050d3b, align 4
  store i32 26, i32* %v1_8050d3a, align 4
  %v3_8050d46 = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d46, i32* %eax.global-to-local, align 4
  %v0_8050d4b = load i32, i32* @esp, align 4
  %v1_8050d4b = add i32 %v0_8050d4b, 1880
  %v2_8050d4b = inttoptr i32 %v1_8050d4b to i32*
  %v3_8050d4b = load i32, i32* %v2_8050d4b, align 4
  %v1_8050d52 = add i32 %v3_8050d4b, -1
  store i32 %v1_8050d52, i32* %edx.global-to-local, align 4
  %v2_8050d53 = add i32 %v0_8050d4b, -4
  %v3_8050d53 = inttoptr i32 %v2_8050d53 to i32*
  store i32 %v1_8050d52, i32* %v3_8050d53, align 4
  %v2_8050d54 = add i32 %v0_8050d4b, -8
  %v3_8050d54 = inttoptr i32 %v2_8050d54 to i32*
  store i32 %v3_8050d46, i32* %v3_8050d54, align 4
  %v0_8050d55 = load i32, i32* @edi, align 4
  %v1_8050d55 = add i32 %v0_8050d55, 24
  %v2_8050d55 = inttoptr i32 %v1_8050d55 to i32*
  %v3_8050d55 = load i32, i32* %v2_8050d55, align 4
  store i32 %v3_8050d55, i32* %eax.global-to-local, align 4
  %v2_8050d58 = add i32 %v0_8050d4b, -12
  %v3_8050d58 = inttoptr i32 %v2_8050d58 to i32*
  store i32 %v3_8050d55, i32* %v3_8050d58, align 4
  %v1_8050d59 = add i32 %v0_8050d4b, 32
  %v2_8050d59 = inttoptr i32 %v1_8050d59 to i32*
  %v3_8050d59 = load i32, i32* %v2_8050d59, align 4
  store i32 %v3_8050d59, i32* %eax.global-to-local, align 4
  %v2_8050d5d = add i32 %v0_8050d4b, -16
  %v3_8050d5d = inttoptr i32 %v2_8050d5d to i32*
  store i32 %v3_8050d59, i32* %v3_8050d5d, align 4
  %v0_8050d5e = call i32 @function_80521c0()
  %v0_8050d63 = load i32, i32* @esp, align 4
  %v1_8050d66 = add i32 %v0_8050d5e, 1
  %v8_8050d66 = icmp eq i32 %v1_8050d66, 0
  store i32 %v1_8050d66, i32* %eax.global-to-local, align 4
  %v1_8050d67 = icmp eq i1 %v8_8050d66, false
  %v1_8051317 = add i32 %v0_8050d63, 16
  %v2_8051317 = inttoptr i32 %v1_8051317 to i32*
  store i32 26, i32* %v2_8051317, align 4
  %v2_8051319 = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051319, i32* %eax.global-to-local, align 4
  %v0_805131e = load i32, i32* @esp, align 4
  %v1_805131e = inttoptr i32 %v0_805131e to i32*
  br i1 %v1_8050d67, label %dec_label_pc_8051314, label %dec_label_pc_8050d6d

dec_label_pc_8050d6d:                             ; preds = %dec_label_pc_8050d30
  store i32 25, i32* %v1_805131e, align 4
  %v2_8050d7e = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d7e, i32* %eax.global-to-local, align 4
  %v0_8050d83 = load i32, i32* @esp, align 4
  %v1_8050d83 = inttoptr i32 %v0_8050d83 to i32*
  %v3_8050d83 = add i32 %v0_8050d83, 4
  %v1_8050d84 = inttoptr i32 %v3_8050d83 to i32*
  %v1_8050d85 = add i32 %v0_8050d83, 1880
  store i32 %v1_8050d85, i32* %eax.global-to-local, align 4
  store i32 %v1_8050d85, i32* %v1_8050d84, align 4
  store i32 25, i32* %v1_8050d83, align 4
  %v3_8050d8f = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d8f, i32* %eax.global-to-local, align 4
  %v0_8050d94 = load i32, i32* @esp, align 4
  %v1_8050d94 = add i32 %v0_8050d94, 1880
  %v2_8050d94 = inttoptr i32 %v1_8050d94 to i32*
  %v3_8050d94 = load i32, i32* %v2_8050d94, align 4
  %v1_8050d9b = add i32 %v3_8050d94, -1
  store i32 %v1_8050d9b, i32* %edx.global-to-local, align 4
  %v2_8050d9c = add i32 %v0_8050d94, -4
  %v3_8050d9c = inttoptr i32 %v2_8050d9c to i32*
  store i32 %v1_8050d9b, i32* %v3_8050d9c, align 4
  %v2_8050d9d = add i32 %v0_8050d94, -8
  %v3_8050d9d = inttoptr i32 %v2_8050d9d to i32*
  store i32 %v3_8050d8f, i32* %v3_8050d9d, align 4
  %v0_8050d9e = load i32, i32* @edi, align 4
  %v1_8050d9e = add i32 %v0_8050d9e, 24
  %v2_8050d9e = inttoptr i32 %v1_8050d9e to i32*
  %v3_8050d9e = load i32, i32* %v2_8050d9e, align 4
  store i32 %v3_8050d9e, i32* @esi, align 4
  %v2_8050da1 = add i32 %v0_8050d94, -12
  %v3_8050da1 = inttoptr i32 %v2_8050da1 to i32*
  store i32 %v3_8050d9e, i32* %v3_8050da1, align 4
  %v1_8050da2 = add i32 %v0_8050d94, 32
  %v2_8050da2 = inttoptr i32 %v1_8050da2 to i32*
  %v3_8050da2 = load i32, i32* %v2_8050da2, align 4
  store i32 %v3_8050da2, i32* @ebx, align 4
  %v2_8050da6 = add i32 %v0_8050d94, -16
  %v3_8050da6 = inttoptr i32 %v2_8050da6 to i32*
  store i32 %v3_8050da2, i32* %v3_8050da6, align 4
  %v0_8050da7 = call i32 @function_80521c0()
  store i32 %v0_8050da7, i32* %eax.global-to-local, align 4
  %v0_8050dac = load i32, i32* @esp, align 4
  store i32 %v0_8050da7, i32* @ebp, align 4
  %v1_8050db1 = add i32 %v0_8050dac, 16
  %v2_8050db1 = inttoptr i32 %v1_8050db1 to i32*
  store i32 25, i32* %v2_8050db1, align 4
  %v2_8050db3 = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050db3, i32* %eax.global-to-local, align 4
  %v0_8050db8 = load i32, i32* @esp, align 4
  %v0_8050dbb = load i32, i32* @ebp, align 4
  %v10_8050dbb = icmp eq i32 %v0_8050dbb, -1
  br i1 %v10_8050dbb, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_8050dc4

dec_label_pc_8050dc4:                             ; preds = %dec_label_pc_8050d6d
  %tmp143 = icmp slt i32 %v0_8050dbb, 1
  br i1 %tmp143, label %dec_label_pc_8050f43, label %dec_label_pc_8050dcc

dec_label_pc_8050dcc:                             ; preds = %dec_label_pc_8050dc4
  %v0_8050dcc = load i32, i32* @edi, align 4
  %v1_8050dcc = inttoptr i32 %v0_8050dcc to i32*
  %v2_8050dcc = load i32, i32* %v1_8050dcc, align 4
  store i32 %v2_8050dcc, i32* %edx.global-to-local, align 4
  %v1_8050dce = add i32 %v0_8050dcc, 16
  %v2_8050dce = inttoptr i32 %v1_8050dce to i32*
  %v3_8050dce = load i32, i32* %v2_8050dce, align 4
  store i32 %v3_8050dce, i32* %eax.global-to-local, align 4
  %v2_8050dd1 = add i32 %v0_8050db8, 52
  %v3_8050dd1 = inttoptr i32 %v2_8050dd1 to i32*
  store i32 %v2_8050dcc, i32* %v3_8050dd1, align 4
  %v0_8050dd5 = load i32, i32* @edi, align 4
  %v1_8050dd5 = add i32 %v0_8050dd5, 20
  %v2_8050dd5 = inttoptr i32 %v1_8050dd5 to i32*
  %v3_8050dd5 = load i32, i32* %v2_8050dd5, align 4
  store i32 %v3_8050dd5, i32* %edx.global-to-local, align 4
  %v0_8050dd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050dd8 = load i32, i32* @esp, align 4
  %v2_8050dd8 = add i32 %v1_8050dd8, 1872
  %v3_8050dd8 = inttoptr i32 %v2_8050dd8 to i32*
  store i32 %v0_8050dd8, i32* %v3_8050dd8, align 4
  %v0_8050ddf = load i32, i32* %edx.global-to-local, align 4
  %v1_8050ddf = trunc i32 %v0_8050ddf to i16
  %v2_8050ddf = load i32, i32* @esp, align 4
  %v3_8050ddf = add i32 %v2_8050ddf, 1882
  %v4_8050ddf = inttoptr i32 %v3_8050ddf to i16*
  store i16 %v1_8050ddf, i16* %v4_8050ddf, align 2
  %v0_8050de7 = call i32 @function_80526df()
  store i32 %v0_8050de7, i32* %eax.global-to-local, align 4
  %tmp144 = icmp slt i32 %v0_8050de7, 1
  br i1 %tmp144, label %dec_label_pc_805154e, label %dec_label_pc_8050df4

dec_label_pc_8050df4:                             ; preds = %dec_label_pc_805154e, %dec_label_pc_8050dcc, %dec_label_pc_805156f
  %v0_8050df4 = load i32, i32* @esp, align 4
  %v0_8050df7 = load i32, i32* @edi, align 4
  %v1_8050df7 = add i32 %v0_8050df7, 4
  %v2_8050df7 = inttoptr i32 %v1_8050df7 to i32*
  %v3_8050df7 = load i32, i32* %v2_8050df7, align 4
  store i32 %v3_8050df7, i32* @esi, align 4
  %v2_8050dfa = add i32 %v0_8050df4, -16
  %v3_8050dfa = inttoptr i32 %v2_8050dfa to i32*
  store i32 %v3_8050df7, i32* %v3_8050dfa, align 4
  %v1_8050dfb = call i32 @function_80526b1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050dfb, i32* %eax.global-to-local, align 4
  %v0_8050e00 = load i32, i32* @edi, align 4
  %v1_8050e00 = add i32 %v0_8050e00, 4
  %v2_8050e00 = inttoptr i32 %v1_8050e00 to i32*
  store i32 -1, i32* %v2_8050e00, align 4
  %v0_8050e07 = load i32, i32* @edi, align 4
  %v1_8050e07 = add i32 %v0_8050e07, 12
  %v2_8050e07 = inttoptr i32 %v1_8050e07 to i32*
  store i32 0, i32* %v2_8050e07, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_8050e11:                             ; preds = %dec_label_pc_8050f43, %dec_label_pc_80511bd, %dec_label_pc_8050e8e, %dec_label_pc_8051236, %dec_label_pc_80510f2, %dec_label_pc_80510a1, %dec_label_pc_8050ba9, %dec_label_pc_80512af, %dec_label_pc_80514d0, %dec_label_pc_8051347, %dec_label_pc_8051144, %dec_label_pc_8050df4
  %v0_8050e11 = load i32, i32* @edi, align 4
  %v1_8050e11 = add i32 %v0_8050e11, 24
  %v2_8050e11 = inttoptr i32 %v1_8050e11 to i32*
  %v3_8050e11 = load i32, i32* %v2_8050e11, align 4
  store i32 %v3_8050e11, i32* @edx, align 4
  store i32 %v3_8050e11, i32* %eax.global-to-local, align 4
  %v1_8050e16 = load i32, i32* @ebp, align 4
  %v2_8050e16 = sub i32 %v3_8050e11, %v1_8050e16
  %v8_8050e16 = xor i32 %v1_8050e16, %v3_8050e11
  %v9_8050e16 = xor i32 %v2_8050e16, %v3_8050e11
  %v10_8050e16 = and i32 %v9_8050e16, %v8_8050e16
  %v11_8050e16 = icmp slt i32 %v10_8050e16, 0
  %v12_8050e16 = icmp eq i32 %v2_8050e16, 0
  %v13_8050e16 = icmp slt i32 %v2_8050e16, 0
  %v3_8050e18 = icmp ne i1 %v13_8050e16, %v11_8050e16
  %v4_8050e18 = or i1 %v12_8050e16, %v3_8050e18
  br i1 %v4_8050e18, label %dec_label_pc_8050e1c, label %dec_label_pc_8050e1a

dec_label_pc_8050e1a:                             ; preds = %dec_label_pc_8050e11
  store i32 %v1_8050e16, i32* @edx, align 4
  br label %dec_label_pc_8050e1c

dec_label_pc_8050e1c:                             ; preds = %dec_label_pc_8050e11, %dec_label_pc_8050e1a
  %v1_8050e1c = phi i32 [ %v3_8050e11, %dec_label_pc_8050e11 ], [ %v1_8050e16, %dec_label_pc_8050e1a ]
  %v2_8050e1c = sub i32 %v3_8050e11, %v1_8050e1c
  store i32 %v2_8050e1c, i32* %eax.global-to-local, align 4
  store i32 %v2_8050e1c, i32* %v2_8050e11, align 4
  %v0_8050e21 = load i32, i32* @ebx, align 4
  %v1_8050e21 = load i32, i32* @esp, align 4
  %v2_8050e21 = add i32 %v1_8050e21, -4
  %v3_8050e21 = inttoptr i32 %v2_8050e21 to i32*
  store i32 %v0_8050e21, i32* %v3_8050e21, align 4
  %v0_8050e22 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050e22 = add i32 %v1_8050e21, -8
  %v3_8050e22 = inttoptr i32 %v2_8050e22 to i32*
  store i32 %v0_8050e22, i32* %v3_8050e22, align 4
  %v1_8050e23 = add i32 %v1_8050e21, 16
  %v2_8050e23 = inttoptr i32 %v1_8050e23 to i32*
  %v3_8050e23 = load i32, i32* %v2_8050e23, align 4
  %v1_8050e27 = load i32, i32* @edx, align 4
  %v2_8050e27 = add i32 %v1_8050e27, %v3_8050e23
  store i32 %v2_8050e27, i32* %eax.global-to-local, align 4
  %v2_8050e29 = add i32 %v1_8050e21, -12
  %v3_8050e29 = inttoptr i32 %v2_8050e29 to i32*
  store i32 %v2_8050e27, i32* %v3_8050e29, align 4
  %v3_8050e2a = load i32, i32* %v2_8050e23, align 4
  store i32 %v3_8050e2a, i32* %ecx.global-to-local, align 4
  %v2_8050e2e = add i32 %v1_8050e21, -16
  %v3_8050e2e = inttoptr i32 %v2_8050e2e to i32*
  store i32 %v3_8050e2a, i32* %v3_8050e2e, align 4
  %v4_8050e2f = call i32 @function_8052c13(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050e2f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b12

dec_label_pc_8050e3c:                             ; preds = %dec_label_pc_8050b12
  %v1_8050e3c = add i32 %v0_8050b12, 24
  %v2_8050e3c = inttoptr i32 %v1_8050e3c to i32*
  %v3_8050e3c = load i32, i32* %v2_8050e3c, align 4
  %v1_8050e3f = add i32 %v3_8050e3c, -1
  store i32 %v1_8050e3f, i32* %eax.global-to-local, align 4
  %tmp145 = icmp slt i32 %v1_8050e3f, 1
  br i1 %tmp145, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_8050e48

dec_label_pc_8050e48:                             ; preds = %dec_label_pc_8050e3c
  %v2_8050e48 = add i32 %v0_8050b12, 27
  %v3_8050e48 = add i32 %v2_8050e48, %v3_8050e3c
  %v4_8050e48 = inttoptr i32 %v3_8050e48 to i8*
  %v5_8050e48 = load i8, i8* %v4_8050e48, align 1
  %v6_8050e48 = zext i8 %v5_8050e48 to i32
  %v7_8050e48 = load i32, i32* @edx, align 4
  %v8_8050e48 = and i32 %v7_8050e48, -256
  %v9_8050e48 = or i32 %v8_8050e48, %v6_8050e48
  store i32 %v9_8050e48, i32* %edx.global-to-local, align 4
  %v10_8050e4c = icmp eq i8 %v5_8050e48, 62
  br i1 %v10_8050e4c, label %dec_label_pc_8050e7a.thread, label %dec_label_pc_8050e51

dec_label_pc_8050e51:                             ; preds = %dec_label_pc_8050e48
  %v10_8050e51 = icmp eq i8 %v5_8050e48, 58
  br i1 %v10_8050e51, label %dec_label_pc_8050e7a.thread, label %dec_label_pc_8050e56

dec_label_pc_8050e56:                             ; preds = %dec_label_pc_8050e51, %dec_label_pc_8050e75
  %v0_8050e65 = phi i32 [ %v1_8050e65, %dec_label_pc_8050e75 ], [ %v1_8050e3f, %dec_label_pc_8050e51 ]
  %v7_8050e6c = phi i32 [ %v9_8050e6c, %dec_label_pc_8050e75 ], [ %v9_8050e48, %dec_label_pc_8050e51 ]
  %v1_8050e56 = trunc i32 %v7_8050e6c to i8
  %v10_8050e56 = icmp eq i8 %v1_8050e56, 36
  br i1 %v10_8050e56, label %dec_label_pc_8050e7a, label %dec_label_pc_8050e5b

dec_label_pc_8050e5b:                             ; preds = %dec_label_pc_8050e56
  %v10_8050e5b = icmp eq i8 %v1_8050e56, 35
  br i1 %v10_8050e5b, label %dec_label_pc_8050e7a, label %dec_label_pc_8050e60

dec_label_pc_8050e60:                             ; preds = %dec_label_pc_8050e5b
  %v10_8050e60 = icmp eq i8 %v1_8050e56, 37
  br i1 %v10_8050e60, label %dec_label_pc_8050e7a, label %dec_label_pc_8050e65

dec_label_pc_8050e65:                             ; preds = %dec_label_pc_8050e60
  %v1_8050e65 = add i32 %v0_8050e65, -1
  %v8_8050e65 = icmp eq i32 %v1_8050e65, 0
  store i32 %v1_8050e65, i32* %eax.global-to-local, align 4
  br i1 %v8_8050e65, label %dec_label_pc_8050aa0.backedge, label %dec_label_pc_8050e6c

dec_label_pc_8050e6c:                             ; preds = %dec_label_pc_8050e65
  %v3_8050e6c = add i32 %v2_8050e48, %v0_8050e65
  %v4_8050e6c = inttoptr i32 %v3_8050e6c to i8*
  %v5_8050e6c = load i8, i8* %v4_8050e6c, align 1
  %v6_8050e6c = zext i8 %v5_8050e6c to i32
  %v8_8050e6c = and i32 %v7_8050e6c, -256
  %v9_8050e6c = or i32 %v6_8050e6c, %v8_8050e6c
  store i32 %v9_8050e6c, i32* %edx.global-to-local, align 4
  %v10_8050e70 = icmp eq i8 %v5_8050e6c, 58
  br i1 %v10_8050e70, label %dec_label_pc_8050e7a, label %dec_label_pc_8050e75

dec_label_pc_8050e75:                             ; preds = %dec_label_pc_8050e6c
  %v10_8050e75 = icmp eq i8 %v5_8050e6c, 62
  %v1_8050e78 = icmp eq i1 %v10_8050e75, false
  br i1 %v1_8050e78, label %dec_label_pc_8050e56, label %dec_label_pc_8050e7a

dec_label_pc_8050e7a.thread:                      ; preds = %dec_label_pc_8050e51, %dec_label_pc_8050e48
  store i32 %v3_8050e3c, i32* @ebp, align 4
  br label %dec_label_pc_8050e86

dec_label_pc_8050e7a:                             ; preds = %dec_label_pc_8050e75, %dec_label_pc_8050e6c, %dec_label_pc_8050e60, %dec_label_pc_8050e5b, %dec_label_pc_8050e56
  %v0_8050e7a = phi i32 [ %v0_8050e65, %dec_label_pc_8050e56 ], [ %v0_8050e65, %dec_label_pc_8050e5b ], [ %v0_8050e65, %dec_label_pc_8050e60 ], [ %v1_8050e65, %dec_label_pc_8050e6c ], [ %v1_8050e65, %dec_label_pc_8050e75 ]
  %v1_8050e7a = add i32 %v0_8050e7a, 1
  store i32 %v1_8050e7a, i32* @ebp, align 4
  %v10_8050e7d = icmp eq i32 %v0_8050e7a, -2
  br i1 %v10_8050e7d, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_8050e86

dec_label_pc_8050e86:                             ; preds = %dec_label_pc_8050e7a.thread, %dec_label_pc_8050e7a
  %v1_8050e7a160 = phi i32 [ %v3_8050e3c, %dec_label_pc_8050e7a.thread ], [ %v1_8050e7a, %dec_label_pc_8050e7a ]
  %tmp146 = icmp slt i32 %v1_8050e7a160, 1
  br i1 %tmp146, label %dec_label_pc_8050f43, label %dec_label_pc_8050e8e

dec_label_pc_8050e8e:                             ; preds = %dec_label_pc_8050e86
  %v0_8050e8e = load i32, i32* @esp, align 4
  %v1_8050e91 = add i32 %v0_8050e8e, -16
  %v2_8050e91 = inttoptr i32 %v1_8050e91 to i32*
  store i32 20, i32* %v2_8050e91, align 4
  %v2_8050e93 = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e93, i32* %eax.global-to-local, align 4
  %v0_8050e98 = load i32, i32* @esp, align 4
  %v1_8050e98 = inttoptr i32 %v0_8050e98 to i32*
  %v2_8050e98 = load i32, i32* %v1_8050e98, align 4
  store i32 %v2_8050e98, i32* %eax.global-to-local, align 4
  %v3_8050e98 = add i32 %v0_8050e98, 4
  %v1_8050e99 = inttoptr i32 %v3_8050e98 to i32*
  %v2_8050e99 = load i32, i32* %v1_8050e99, align 4
  store i32 %v2_8050e99, i32* %edx.global-to-local, align 4
  %v1_8050e9a = add i32 %v0_8050e98, 1888
  store i32 %v1_8050e9a, i32* %eax.global-to-local, align 4
  store i32 %v1_8050e9a, i32* %v1_8050e99, align 4
  store i32 20, i32* %v1_8050e98, align 4
  %v3_8050ea4 = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050ea4, i32* %eax.global-to-local, align 4
  %v0_8050ea9 = load i32, i32* @esp, align 4
  %v1_8050ea9 = add i32 %v0_8050ea9, -4
  %v2_8050ea9 = inttoptr i32 %v1_8050ea9 to i32*
  store i32 16384, i32* %v2_8050ea9, align 4
  %v1_8050eae = add i32 %v0_8050ea9, 1888
  %v2_8050eae = inttoptr i32 %v1_8050eae to i32*
  %v3_8050eae = load i32, i32* %v2_8050eae, align 4
  store i32 %v3_8050eae, i32* @esi, align 4
  %v2_8050eb5 = add i32 %v0_8050ea9, -8
  %v3_8050eb5 = inttoptr i32 %v2_8050eb5 to i32*
  store i32 %v3_8050eae, i32* %v3_8050eb5, align 4
  %v2_8050eb6 = add i32 %v0_8050ea9, -12
  %v3_8050eb6 = inttoptr i32 %v2_8050eb6 to i32*
  store i32 %v3_8050ea4, i32* %v3_8050eb6, align 4
  %v0_8050eb7 = load i32, i32* @edi, align 4
  %v1_8050eb7 = add i32 %v0_8050eb7, 4
  %v2_8050eb7 = inttoptr i32 %v1_8050eb7 to i32*
  %v3_8050eb7 = load i32, i32* %v2_8050eb7, align 4
  store i32 %v3_8050eb7, i32* @ebx, align 4
  %v2_8050eba = add i32 %v0_8050ea9, -16
  %v3_8050eba = inttoptr i32 %v2_8050eba to i32*
  store i32 %v3_8050eb7, i32* %v3_8050eba, align 4
  %v0_8050ebb = call i32 @function_8052df4()
  store i32 %v0_8050ebb, i32* %eax.global-to-local, align 4
  %v0_8050ec0 = load i32, i32* @esp, align 4
  %v1_8050ec3 = add i32 %v0_8050ec0, 28
  %v2_8050ec3 = inttoptr i32 %v1_8050ec3 to i32*
  store i32 16384, i32* %v2_8050ec3, align 4
  %v1_8050ec8 = add i32 %v0_8050ec0, 24
  %v2_8050ec8 = inttoptr i32 %v1_8050ec8 to i32*
  store i32 2, i32* %v2_8050ec8, align 4
  %v1_8050eca = add i32 %v0_8050ec0, 20
  %v2_8050eca = inttoptr i32 %v1_8050eca to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_8050eca, align 4
  %v0_8050ecf = load i32, i32* @edi, align 4
  %v1_8050ecf = add i32 %v0_8050ecf, 4
  %v2_8050ecf = inttoptr i32 %v1_8050ecf to i32*
  %v3_8050ecf = load i32, i32* %v2_8050ecf, align 4
  store i32 %v3_8050ecf, i32* %ecx.global-to-local, align 4
  %v2_8050ed2 = add i32 %v0_8050ec0, 16
  %v3_8050ed2 = inttoptr i32 %v2_8050ed2 to i32*
  store i32 %v3_8050ecf, i32* %v3_8050ed2, align 4
  %v0_8050ed3 = call i32 @function_8052df4()
  store i32 %v0_8050ed3, i32* %eax.global-to-local, align 4
  %v0_8050ed8 = load i32, i32* @esp, align 4
  %v1_8050ed8 = inttoptr i32 %v0_8050ed8 to i32*
  store i32 20, i32* %v1_8050ed8, align 4
  %v2_8050edf = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050edf, i32* %eax.global-to-local, align 4
  %v0_8050ee7 = load i32, i32* @edi, align 4
  %v1_8050ee7 = add i32 %v0_8050ee7, 12
  %v2_8050ee7 = inttoptr i32 %v1_8050ee7 to i32*
  store i32 8, i32* %v2_8050ee7, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_8050ef3:                             ; preds = %dec_label_pc_8050b12
  %v1_8050ef3 = add i32 %v0_8050b12, 24
  %v2_8050ef3 = inttoptr i32 %v1_8050ef3 to i32*
  %v3_8050ef3 = load i32, i32* %v2_8050ef3, align 4
  %v1_8050ef6 = add i32 %v3_8050ef3, -1
  store i32 %v1_8050ef6, i32* %eax.global-to-local, align 4
  %tmp147 = icmp slt i32 %v1_8050ef6, 1
  br i1 %tmp147, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_8050eff.preheader

dec_label_pc_8050eff.preheader:                   ; preds = %dec_label_pc_8050ef3
  %v7_8050eff.pre = load i32, i32* @edx, align 4
  %v2_8050eff = add i32 %v0_8050b12, 28
  br label %dec_label_pc_8050eff

dec_label_pc_8050eff:                             ; preds = %dec_label_pc_8050eff.preheader, %dec_label_pc_8050f30
  %v7_8050eff = phi i32 [ %v7_8050eff.pre, %dec_label_pc_8050eff.preheader ], [ %v9_8050eff, %dec_label_pc_8050f30 ]
  %v0_80511a9 = phi i32 [ %v1_8050ef6, %dec_label_pc_8050eff.preheader ], [ %v1_8050f30, %dec_label_pc_8050f30 ]
  %v3_8050eff = add i32 %v2_8050eff, %v0_80511a9
  %v4_8050eff = inttoptr i32 %v3_8050eff to i8*
  %v5_8050eff = load i8, i8* %v4_8050eff, align 1
  %v6_8050eff = zext i8 %v5_8050eff to i32
  %v8_8050eff = and i32 %v7_8050eff, -256
  %v9_8050eff = or i32 %v6_8050eff, %v8_8050eff
  store i32 %v9_8050eff, i32* %edx.global-to-local, align 4
  %v10_8050f03 = icmp eq i8 %v5_8050eff, 58
  br i1 %v10_8050f03, label %dec_label_pc_80511a9, label %dec_label_pc_8050f0c

dec_label_pc_8050f0c:                             ; preds = %dec_label_pc_8050eff
  %v10_8050f0c = icmp eq i8 %v5_8050eff, 62
  br i1 %v10_8050f0c, label %dec_label_pc_80511a9, label %dec_label_pc_8050f15

dec_label_pc_8050f15:                             ; preds = %dec_label_pc_8050f0c
  %v10_8050f15 = icmp eq i8 %v5_8050eff, 36
  br i1 %v10_8050f15, label %dec_label_pc_80511a9, label %dec_label_pc_8050f1e

dec_label_pc_8050f1e:                             ; preds = %dec_label_pc_8050f15
  %v10_8050f1e = icmp eq i8 %v5_8050eff, 35
  br i1 %v10_8050f1e, label %dec_label_pc_80511a9, label %dec_label_pc_8050f27

dec_label_pc_8050f27:                             ; preds = %dec_label_pc_8050f1e
  %v10_8050f27 = icmp eq i8 %v5_8050eff, 37
  br i1 %v10_8050f27, label %dec_label_pc_80511a9, label %dec_label_pc_8050f30

dec_label_pc_8050f30:                             ; preds = %dec_label_pc_8050f27
  %v1_8050f30 = add i32 %v0_80511a9, -1
  %v8_8050f30 = icmp eq i32 %v1_8050f30, 0
  store i32 %v1_8050f30, i32* %eax.global-to-local, align 4
  %v1_8050f31 = icmp eq i1 %v8_8050f30, false
  br i1 %v1_8050f31, label %dec_label_pc_8050eff, label %dec_label_pc_8050aa0.backedge

dec_label_pc_8050f38:                             ; preds = %dec_label_pc_8050b41
  %v1_8050f38 = add i32 %v0_8050b2f, 2
  store i32 %v1_8050f38, i32* @ebx, align 4
  %v1_8050f3b = add i32 %v0_8050f3b, 2
  store i32 %v1_8050f3b, i32* @ebp, align 4
  br label %dec_label_pc_8050b2b.backedge

dec_label_pc_8050b2b.backedge:                    ; preds = %dec_label_pc_8050f38, %dec_label_pc_805135d
  %v0_8050ba9128 = phi i32 [ %v0_8050ba9129, %dec_label_pc_8050f38 ], [ %v0_8051396, %dec_label_pc_805135d ]
  %v1_8050b2b = phi i32 [ %v1_8050b3b, %dec_label_pc_8050f38 ], [ %v3_8051396, %dec_label_pc_805135d ]
  %v0_8050b2b = phi i32 [ %v1_8050f3b, %dec_label_pc_8050f38 ], [ %v0_8050b2b.pre, %dec_label_pc_805135d ]
  %v5_8050b41109 = phi i32 [ %v7_8050b41, %dec_label_pc_8050f38 ], [ %v0_805138e, %dec_label_pc_805135d ]
  %v0_8050b34104 = phi i32 [ %v0_8050f50, %dec_label_pc_8050f38 ], [ %v1_8051393, %dec_label_pc_805135d ]
  %v2_8050b2b = sub i32 %v0_8050b2b, %v1_8050b2b
  %v8_8050b2b = xor i32 %v0_8050b2b, %v1_8050b2b
  %v9_8050b2b = xor i32 %v2_8050b2b, %v0_8050b2b
  %v10_8050b2b = and i32 %v9_8050b2b, %v8_8050b2b
  %v11_8050b2b = icmp slt i32 %v10_8050b2b, 0
  %v13_8050b2b = icmp slt i32 %v2_8050b2b, 0
  %v2_8050b2d = icmp eq i1 %v13_8050b2b, %v11_8050b2b
  br i1 %v2_8050b2d, label %dec_label_pc_8050ba1, label %dec_label_pc_8050b2f.preheader

dec_label_pc_8050f43:                             ; preds = %dec_label_pc_80511b5, %dec_label_pc_8050e86, %dec_label_pc_805113c, %dec_label_pc_805122e, %dec_label_pc_80510ea, %dec_label_pc_8051099, %dec_label_pc_8050ba1, %dec_label_pc_80512a7, %dec_label_pc_8050dc4
  %v0_8050f43 = phi i32 [ %v1_80511a9, %dec_label_pc_80511b5 ], [ %v1_8050e7a160, %dec_label_pc_8050e86 ], [ %v1_8051130, %dec_label_pc_805113c ], [ %v1_8051222, %dec_label_pc_805122e ], [ %v0_80510ea, %dec_label_pc_80510ea ], [ %v0_8051099, %dec_label_pc_8051099 ], [ %v0_8050ba1, %dec_label_pc_8050ba1 ], [ %v1_805129b, %dec_label_pc_80512a7 ], [ %v0_8050dbb, %dec_label_pc_8050dc4 ]
  %v1_8050f43 = icmp eq i32 %v0_8050f43, 0
  %v1_8050f45 = icmp eq i1 %v1_8050f43, false
  br i1 %v1_8050f45, label %dec_label_pc_8050e11, label %dec_label_pc_8050aa0.loopexit12.loopexit

dec_label_pc_8050f50:                             ; preds = %dec_label_pc_8050b4c
  %v1_8050f50 = add i32 %v0_8050f50, 1879
  %v2_8050f50 = inttoptr i32 %v1_8050f50 to i8*
  store i8 -1, i8* %v2_8050f50, align 1
  %v0_8050f58 = load i32, i32* @esp, align 4
  %v1_8050f58 = add i32 %v0_8050f58, 1880
  %v2_8050f58 = inttoptr i32 %v1_8050f58 to i8*
  store i8 -5, i8* %v2_8050f58, align 1
  %v0_8050f60 = load i32, i32* @esp, align 4
  %v1_8050f60 = add i32 %v0_8050f60, 1881
  %v2_8050f60 = inttoptr i32 %v1_8050f60 to i8*
  store i8 31, i8* %v2_8050f60, align 1
  %v0_8050f68 = load i32, i32* @esp, align 4
  %v1_8050f68 = add i32 %v0_8050f68, 1847
  %v2_8050f68 = inttoptr i32 %v1_8050f68 to i8*
  store i8 -1, i8* %v2_8050f68, align 1
  %v0_8050f70 = load i32, i32* @esp, align 4
  %v1_8050f70 = add i32 %v0_8050f70, 1848
  %v2_8050f70 = inttoptr i32 %v1_8050f70 to i8*
  store i8 -6, i8* %v2_8050f70, align 1
  %v0_8050f78 = load i32, i32* @esp, align 4
  %v1_8050f78 = add i32 %v0_8050f78, 1849
  %v2_8050f78 = inttoptr i32 %v1_8050f78 to i8*
  store i8 31, i8* %v2_8050f78, align 1
  %v0_8050f80 = load i32, i32* @esp, align 4
  %v1_8050f80 = add i32 %v0_8050f80, 1850
  %v2_8050f80 = inttoptr i32 %v1_8050f80 to i8*
  store i8 0, i8* %v2_8050f80, align 1
  %v0_8050f88 = load i32, i32* @esp, align 4
  %v1_8050f88 = add i32 %v0_8050f88, 1851
  %v2_8050f88 = inttoptr i32 %v1_8050f88 to i8*
  store i8 80, i8* %v2_8050f88, align 1
  %v0_8050f90 = load i32, i32* @esp, align 4
  %v1_8050f90 = add i32 %v0_8050f90, 1852
  %v2_8050f90 = inttoptr i32 %v1_8050f90 to i8*
  store i8 0, i8* %v2_8050f90, align 1
  %v0_8050f98 = load i32, i32* @esp, align 4
  %v1_8050f98 = add i32 %v0_8050f98, 1853
  %v2_8050f98 = inttoptr i32 %v1_8050f98 to i8*
  store i8 24, i8* %v2_8050f98, align 1
  %v0_8050fa0 = load i32, i32* @esp, align 4
  %v1_8050fa0 = add i32 %v0_8050fa0, 1854
  %v2_8050fa0 = inttoptr i32 %v1_8050fa0 to i8*
  store i8 -1, i8* %v2_8050fa0, align 1
  %v0_8050fa8 = load i32, i32* @esp, align 4
  %v1_8050fa8 = add i32 %v0_8050fa8, 1855
  %v2_8050fa8 = inttoptr i32 %v1_8050fa8 to i8*
  store i8 -16, i8* %v2_8050fa8, align 1
  %v0_8050fb0 = load i32, i32* @esp, align 4
  %v1_8050fb0 = add i32 %v0_8050fb0, 16
  %v2_8050fb0 = inttoptr i32 %v1_8050fb0 to i32*
  %v3_8050fb0 = load i32, i32* %v2_8050fb0, align 4
  store i32 %v3_8050fb0, i32* %eax.global-to-local, align 4
  %v0_8050fb4 = load i32, i32* @edi, align 4
  %v1_8050fb4 = add i32 %v0_8050fb4, 24
  %v2_8050fb4 = inttoptr i32 %v1_8050fb4 to i32*
  %v3_8050fb4 = load i32, i32* %v2_8050fb4, align 4
  store i32 %v3_8050fb4, i32* %ecx.global-to-local, align 4
  %v0_8050fb7 = load i32, i32* @ebx, align 4
  %v1_8050fb7 = add i32 %v0_8050fb7, 2
  store i32 %v1_8050fb7, i32* %edx.global-to-local, align 4
  %v2_8050fba = add i32 %v3_8050fb4, %v3_8050fb0
  store i32 %v2_8050fba, i32* %eax.global-to-local, align 4
  %tmp299 = icmp ugt i32 %v2_8050fba, %v1_8050fb7
  br i1 %tmp299, label %dec_label_pc_8050fc4, label %dec_label_pc_8050f50.dec_label_pc_8050ba1.loopexit_crit_edge

dec_label_pc_8050f50.dec_label_pc_8050ba1.loopexit_crit_edge: ; preds = %dec_label_pc_8050f50
  %v0_8050ba1.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050ba1

dec_label_pc_8050fc4:                             ; preds = %dec_label_pc_8050f50
  %v2_8050fc4 = inttoptr i32 %v1_8050fb7 to i8*
  %v3_8050fc4 = load i8, i8* %v2_8050fc4, align 1
  %v12_8050fc4 = icmp eq i8 %v3_8050fc4, 31
  br i1 %v12_8050fc4, label %dec_label_pc_805135d, label %dec_label_pc_8050fce

dec_label_pc_8050fce:                             ; preds = %dec_label_pc_8050fc4
  %v1_8050fce = inttoptr i32 %v0_8050fb7 to i8*
  %v2_8050fce = load i8, i8* %v1_8050fce, align 1
  %v3_8050fce = zext i8 %v2_8050fce to i32
  %v5_8050fce = and i32 %v2_8050fba, -256
  %v6_8050fce = or i32 %v3_8050fce, %v5_8050fce
  store i32 %v6_8050fce, i32* %eax.global-to-local, align 4
  %v11_8050fd0 = icmp eq i8 %v2_8050fce, -3
  %v1_8050fd2 = icmp eq i1 %v11_8050fd0, false
  br i1 %v1_8050fd2, label %dec_label_pc_8051523, label %dec_label_pc_8050fd8

dec_label_pc_8050fd8:                             ; preds = %dec_label_pc_8050fce
  store i8 -4, i8* %v1_8050fce, align 1
  %v0_8050fdb = load i32, i32* @esi, align 4
  %v1_8050fdb = inttoptr i32 %v0_8050fdb to i8*
  %v2_8050fdb = load i8, i8* %v1_8050fdb, align 1
  %v3_8050fdb = zext i8 %v2_8050fdb to i32
  %v4_8050fdb = load i32, i32* %eax.global-to-local, align 4
  %v5_8050fdb = and i32 %v4_8050fdb, -256
  %v6_8050fdb = or i32 %v5_8050fdb, %v3_8050fdb
  store i32 %v6_8050fdb, i32* %eax.global-to-local, align 4
  %v11_8050fdd = icmp eq i8 %v2_8050fdb, -3
  %v1_8050fdf = icmp eq i1 %v11_8050fdd, false
  br i1 %v1_8050fdf, label %dec_label_pc_8050b65, label %dec_label_pc_8050fe5

dec_label_pc_8050fe5:                             ; preds = %dec_label_pc_8050fd8, %dec_label_pc_8050b5b
  %v0_8050fe5 = phi i32 [ %v0_8050fdb, %dec_label_pc_8050fd8 ], [ %v0_8050b5b, %dec_label_pc_8050b5b ]
  %v1_8050fe5 = inttoptr i32 %v0_8050fe5 to i8*
  store i8 -4, i8* %v1_8050fe5, align 1
  %v0_8050fe8 = load i32, i32* @ebx, align 4
  %v1_8050fe8 = add i32 %v0_8050fe8, 2
  %v2_8050fe8 = inttoptr i32 %v1_8050fe8 to i8*
  %v3_8050fe8 = load i8, i8* %v2_8050fe8, align 1
  %v4_8050fe8 = zext i8 %v3_8050fe8 to i32
  %v5_8050fe8 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050fe8 = and i32 %v5_8050fe8, -256
  %v7_8050fe8 = or i32 %v6_8050fe8, %v4_8050fe8
  store i32 %v7_8050fe8, i32* %eax.global-to-local, align 4
  %v11_8050feb = icmp eq i8 %v3_8050fe8, -3
  %v1_8050fed = icmp eq i1 %v11_8050feb, false
  br i1 %v1_8050fed, label %dec_label_pc_8050b78, label %dec_label_pc_8050ff3

dec_label_pc_8050ff3:                             ; preds = %dec_label_pc_8050fe5, %dec_label_pc_8050b6d
  %v0_8050ff3 = phi i32 [ %v0_8050fe8, %dec_label_pc_8050fe5 ], [ %v0_8050b6d, %dec_label_pc_8050b6d ]
  %v1_8050ff3 = add i32 %v0_8050ff3, 2
  %v2_8050ff3 = inttoptr i32 %v1_8050ff3 to i8*
  store i8 -4, i8* %v2_8050ff3, align 1
  br label %dec_label_pc_8050b80

dec_label_pc_8050ffc:                             ; preds = %dec_label_pc_8050abb
  %v1_8050ae8 = icmp eq i32 %v0_8050ae0, 0
  br i1 %v1_8050ae8, label %dec_label_pc_8051508, label %dec_label_pc_8051002

dec_label_pc_8051002:                             ; preds = %dec_label_pc_8050ffc
  %v10_8051002 = icmp eq i32 %v0_8050ae0, -1
  %v1_8051005 = icmp eq i1 %v10_8051002, false
  br i1 %v1_8051005, label %dec_label_pc_8050b02, label %dec_label_pc_805100b

dec_label_pc_805100b:                             ; preds = %dec_label_pc_8051002
  %v1_805100b = add i32 %v0_8050ae5, 56
  %v2_805100b = inttoptr i32 %v1_805100b to i32*
  %v3_805100b = load i32, i32* %v2_805100b, align 4
  store i32 %v3_805100b, i32* %edx.global-to-local, align 4
  %v1_805100f = inttoptr i32 %v3_805100b to i32*
  %v2_805100f = load i32, i32* %v1_805100f, align 4
  %v11_805100f = icmp eq i32 %v2_805100f, 11
  br i1 %v11_805100f, label %dec_label_pc_8050a48, label %dec_label_pc_8051018

dec_label_pc_8051018:                             ; preds = %dec_label_pc_805100b, %dec_label_pc_8051508
  %v0_8051018 = phi i32 [ %v1_8050ae5, %dec_label_pc_805100b ], [ %v0_8051018.pre, %dec_label_pc_8051508 ]
  %v0_805101b = load i32, i32* @edi, align 4
  %v1_805101b = add i32 %v0_805101b, 4
  %v2_805101b = inttoptr i32 %v1_805101b to i32*
  %v3_805101b = load i32, i32* %v2_805101b, align 4
  store i32 %v3_805101b, i32* @esi, align 4
  %v2_805101e = add i32 %v0_8051018, -16
  %v3_805101e = inttoptr i32 %v2_805101e to i32*
  store i32 %v3_805101b, i32* %v3_805101e, align 4
  %v1_805101f = call i32 @function_80526b1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805101f, i32* %eax.global-to-local, align 4
  %v0_8051024 = load i32, i32* @edi, align 4
  %v1_8051024 = add i32 %v0_8051024, 540
  %v2_8051024 = inttoptr i32 %v1_8051024 to i8*
  %v3_8051024 = load i8, i8* %v2_8051024, align 1
  %v4_8051024 = zext i8 %v3_8051024 to i32
  %v6_8051024 = and i32 %v1_805101f, -256
  %v7_8051024 = or i32 %v4_8051024, %v6_8051024
  %v1_805102d = add i32 %v7_8051024, 1
  store i32 %v1_805102d, i32* %eax.global-to-local, align 4
  %v1_805102e = add i32 %v0_8051024, 4
  %v2_805102e = inttoptr i32 %v1_805102e to i32*
  store i32 -1, i32* %v2_805102e, align 4
  %v0_8051035 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051035 = trunc i32 %v0_8051035 to i8
  %v2_8051035 = load i32, i32* @edi, align 4
  %v3_8051035 = add i32 %v2_8051035, 540
  %v4_8051035 = inttoptr i32 %v3_8051035 to i8*
  store i8 %v1_8051035, i8* %v4_8051035, align 1
  %v0_805103b = load i32, i32* %eax.global-to-local, align 4
  %v1_805103b = trunc i32 %v0_805103b to i8
  %tmp300 = icmp ult i8 %v1_805103b, 10
  %v0_8051517 = load i32, i32* @edi, align 4
  br i1 %tmp300, label %dec_label_pc_8051517, label %dec_label_pc_8051043

dec_label_pc_8051043:                             ; preds = %dec_label_pc_8051018
  %v1_8051043 = add i32 %v0_8051517, 540
  %v2_8051043 = inttoptr i32 %v1_8051043 to i8*
  store i8 0, i8* %v2_8051043, align 1
  %v0_805104a = load i32, i32* @edi, align 4
  %v1_805104a = add i32 %v0_805104a, 12
  %v2_805104a = inttoptr i32 %v1_805104a to i32*
  store i32 0, i32* %v2_805104a, align 4
  br label %dec_label_pc_8050a48

dec_label_pc_8051056:                             ; preds = %dec_label_pc_8050b65
  %v1_8051056 = inttoptr i32 %v0_8051056 to i8*
  store i8 -3, i8* %v1_8051056, align 1
  %v5_8050b6d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b6d

dec_label_pc_805105e:                             ; preds = %dec_label_pc_8050b78
  %v1_805105e = add i32 %v0_805105e, 2
  %v2_805105e = inttoptr i32 %v1_805105e to i8*
  store i8 -3, i8* %v2_805105e, align 1
  br label %dec_label_pc_8050b80

dec_label_pc_8051067:                             ; preds = %dec_label_pc_8050aa7
  %v0_8051067 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8051067, i32* %edx.global-to-local, align 4
  %v1_8051069 = load i32, i32* @esp, align 4
  %v2_8051069 = add i32 %v1_8051069, -4
  %v3_8051069 = inttoptr i32 %v2_8051069 to i32*
  store i32 %v0_8051067, i32* %v3_8051069, align 4
  %v0_805106a = load i32, i32* @edi, align 4
  %v1_805106a = add i32 %v0_805106a, 156
  store i32 %v1_805106a, i32* %eax.global-to-local, align 4
  %v1_8051070 = add i32 %v1_8051069, -8
  %v2_8051070 = inttoptr i32 %v1_8051070 to i32*
  store i32 384, i32* %v2_8051070, align 4
  %v0_8051075 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051075 = add i32 %v1_8051069, -12
  %v3_8051075 = inttoptr i32 %v2_8051075 to i32*
  store i32 %v0_8051075, i32* %v3_8051075, align 4
  %v0_8051076 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051076 = add i32 %v1_8051069, -16
  %v3_8051076 = inttoptr i32 %v2_8051076 to i32*
  store i32 %v0_8051076, i32* %v3_8051076, align 4
  %v4_8051077 = call i32 @function_8052c13(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051077, i32* %eax.global-to-local, align 4
  %v0_805107c = load i32, i32* @edi, align 4
  %v1_805107c = add i32 %v0_805107c, 24
  %v2_805107c = inttoptr i32 %v1_805107c to i32*
  %v3_805107c = load i32, i32* %v2_805107c, align 4
  %v1_805107f = add i32 %v3_805107c, -128
  store i32 %v1_805107f, i32* %eax.global-to-local, align 4
  store i32 %v1_805107f, i32* %v2_805107c, align 4
  br label %dec_label_pc_8050abb

dec_label_pc_805108d:                             ; preds = %dec_label_pc_8050be7, %dec_label_pc_8050bde, %dec_label_pc_8050bd5, %dec_label_pc_8050bcc, %dec_label_pc_8050bbf
  %v1_805108d = add i32 %v0_805108d, 1
  store i32 %v1_805108d, i32* @ebp, align 4
  %v10_8051090 = icmp eq i32 %v0_805108d, -2
  br i1 %v10_8051090, label %dec_label_pc_8050bf3, label %dec_label_pc_8051099

dec_label_pc_8051099:                             ; preds = %dec_label_pc_805108d, %dec_label_pc_8050c13, %dec_label_pc_8050bf3
  %v0_8051099 = phi i32 [ %v1_805108d, %dec_label_pc_805108d ], [ %v0_8050c23, %dec_label_pc_8050c13 ], [ %v0_8050c00, %dec_label_pc_8050bf3 ]
  %tmp148 = icmp slt i32 %v0_8051099, 1
  br i1 %tmp148, label %dec_label_pc_8050f43, label %dec_label_pc_80510a1

dec_label_pc_80510a1:                             ; preds = %dec_label_pc_8051099
  %v0_80510a1 = load i32, i32* @edi, align 4
  %v1_80510a1 = inttoptr i32 %v0_80510a1 to i32*
  %v2_80510a1 = load i32, i32* %v1_80510a1, align 4
  store i32 %v2_80510a1, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80510a5 = load i32, i32* @esp, align 4
  %v1_80510a5 = add i32 %v0_80510a5, -4
  %v2_80510a5 = inttoptr i32 %v1_80510a5 to i32*
  store i32 16384, i32* %v2_80510a5, align 4
  %v0_80510aa = load i32, i32* %edx.global-to-local, align 4
  %v1_80510aa = add i32 %v0_80510aa, 12
  %v2_80510aa = inttoptr i32 %v1_80510aa to i8*
  %v3_80510aa = load i8, i8* %v2_80510aa, align 1
  %v4_80510aa = zext i8 %v3_80510aa to i32
  %v5_80510aa = load i32, i32* %eax.global-to-local, align 4
  %v6_80510aa = and i32 %v5_80510aa, -256
  %v7_80510aa = or i32 %v6_80510aa, %v4_80510aa
  store i32 %v7_80510aa, i32* %eax.global-to-local, align 4
  %v2_80510ad = add i32 %v0_80510a5, -8
  %v3_80510ad = inttoptr i32 %v2_80510ad to i32*
  store i32 %v7_80510aa, i32* %v3_80510ad, align 4
  %v0_80510ae = load i32, i32* %edx.global-to-local, align 4
  %v1_80510ae = inttoptr i32 %v0_80510ae to i32*
  %v2_80510ae = load i32, i32* %v1_80510ae, align 4
  store i32 %v2_80510ae, i32* %eax.global-to-local, align 4
  %v2_80510b0 = add i32 %v0_80510a5, -12
  %v3_80510b0 = inttoptr i32 %v2_80510b0 to i32*
  store i32 %v2_80510ae, i32* %v3_80510b0, align 4
  %v0_80510b1 = load i32, i32* @edi, align 4
  %v1_80510b1 = add i32 %v0_80510b1, 4
  %v2_80510b1 = inttoptr i32 %v1_80510b1 to i32*
  %v3_80510b1 = load i32, i32* %v2_80510b1, align 4
  store i32 %v3_80510b1, i32* %eax.global-to-local, align 4
  %v2_80510b4 = add i32 %v0_80510a5, -16
  %v3_80510b4 = inttoptr i32 %v2_80510b4 to i32*
  store i32 %v3_80510b1, i32* %v3_80510b4, align 4
  %v0_80510b5 = call i32 @function_8052df4()
  store i32 %v0_80510b5, i32* %eax.global-to-local, align 4
  %v0_80510ba = load i32, i32* @esp, align 4
  %v1_80510ba = add i32 %v0_80510ba, -4
  %v2_80510ba = inttoptr i32 %v1_80510ba to i32*
  store i32 16384, i32* %v2_80510ba, align 4
  %v1_80510bf = add i32 %v0_80510ba, -8
  %v2_80510bf = inttoptr i32 %v1_80510bf to i32*
  store i32 2, i32* %v2_80510bf, align 4
  %v1_80510c1 = add i32 %v0_80510ba, -12
  %v2_80510c1 = inttoptr i32 %v1_80510c1 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_80510c1, align 4
  %v0_80510c6 = load i32, i32* @edi, align 4
  %v1_80510c6 = add i32 %v0_80510c6, 4
  %v2_80510c6 = inttoptr i32 %v1_80510c6 to i32*
  %v3_80510c6 = load i32, i32* %v2_80510c6, align 4
  store i32 %v3_80510c6, i32* %eax.global-to-local, align 4
  %v2_80510c9 = add i32 %v0_80510ba, -16
  %v3_80510c9 = inttoptr i32 %v2_80510c9 to i32*
  store i32 %v3_80510c6, i32* %v3_80510c9, align 4
  %v0_80510ca = call i32 @function_8052df4()
  store i32 %v0_80510ca, i32* %eax.global-to-local, align 4
  %v0_80510d2 = load i32, i32* @edi, align 4
  %v1_80510d2 = add i32 %v0_80510d2, 12
  %v2_80510d2 = inttoptr i32 %v1_80510d2 to i32*
  store i32 4, i32* %v2_80510d2, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_80510de:                             ; preds = %dec_label_pc_8050c69, %dec_label_pc_8050c60, %dec_label_pc_8050c57, %dec_label_pc_8050c4a
  %v1_80510de = add i32 %v0_80510de, 1
  store i32 %v1_80510de, i32* @ebp, align 4
  %v10_80510e1 = icmp eq i32 %v0_80510de, -2
  br i1 %v10_80510e1, label %dec_label_pc_8050c75, label %dec_label_pc_80510ea

dec_label_pc_80510ea:                             ; preds = %dec_label_pc_80510de, %dec_label_pc_8050c75
  %v0_80510ea = phi i32 [ %v1_80510de, %dec_label_pc_80510de ], [ %v0_8050c82, %dec_label_pc_8050c75 ]
  %tmp149 = icmp slt i32 %v0_80510ea, 1
  br i1 %tmp149, label %dec_label_pc_8050f43, label %dec_label_pc_80510f2

dec_label_pc_80510f2:                             ; preds = %dec_label_pc_80510ea
  %v0_80510f2 = load i32, i32* @edi, align 4
  %v1_80510f2 = inttoptr i32 %v0_80510f2 to i32*
  %v2_80510f2 = load i32, i32* %v1_80510f2, align 4
  store i32 %v2_80510f2, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80510f6 = load i32, i32* @esp, align 4
  %v1_80510f6 = add i32 %v0_80510f6, -4
  %v2_80510f6 = inttoptr i32 %v1_80510f6 to i32*
  store i32 16384, i32* %v2_80510f6, align 4
  %v0_80510fb = load i32, i32* %edx.global-to-local, align 4
  %v1_80510fb = add i32 %v0_80510fb, 13
  %v2_80510fb = inttoptr i32 %v1_80510fb to i8*
  %v3_80510fb = load i8, i8* %v2_80510fb, align 1
  %v4_80510fb = zext i8 %v3_80510fb to i32
  %v5_80510fb = load i32, i32* %eax.global-to-local, align 4
  %v6_80510fb = and i32 %v5_80510fb, -256
  %v7_80510fb = or i32 %v6_80510fb, %v4_80510fb
  store i32 %v7_80510fb, i32* %eax.global-to-local, align 4
  %v2_80510fe = add i32 %v0_80510f6, -8
  %v3_80510fe = inttoptr i32 %v2_80510fe to i32*
  store i32 %v7_80510fb, i32* %v3_80510fe, align 4
  %v0_80510ff = load i32, i32* %edx.global-to-local, align 4
  %v1_80510ff = add i32 %v0_80510ff, 4
  %v2_80510ff = inttoptr i32 %v1_80510ff to i32*
  %v3_80510ff = load i32, i32* %v2_80510ff, align 4
  store i32 %v3_80510ff, i32* @esi, align 4
  %v2_8051102 = add i32 %v0_80510f6, -12
  %v3_8051102 = inttoptr i32 %v2_8051102 to i32*
  store i32 %v3_80510ff, i32* %v3_8051102, align 4
  %v0_8051103 = load i32, i32* @edi, align 4
  %v1_8051103 = add i32 %v0_8051103, 4
  %v2_8051103 = inttoptr i32 %v1_8051103 to i32*
  %v3_8051103 = load i32, i32* %v2_8051103, align 4
  store i32 %v3_8051103, i32* @ebx, align 4
  %v2_8051106 = add i32 %v0_80510f6, -16
  %v3_8051106 = inttoptr i32 %v2_8051106 to i32*
  store i32 %v3_8051103, i32* %v3_8051106, align 4
  %v0_8051107 = call i32 @function_8052df4()
  store i32 %v0_8051107, i32* %eax.global-to-local, align 4
  %v0_805110c = load i32, i32* @esp, align 4
  %v1_805110c = add i32 %v0_805110c, -4
  %v2_805110c = inttoptr i32 %v1_805110c to i32*
  store i32 16384, i32* %v2_805110c, align 4
  %v1_8051111 = add i32 %v0_805110c, -8
  %v2_8051111 = inttoptr i32 %v1_8051111 to i32*
  store i32 2, i32* %v2_8051111, align 4
  %v1_8051113 = add i32 %v0_805110c, -12
  %v2_8051113 = inttoptr i32 %v1_8051113 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_8051113, align 4
  %v0_8051118 = load i32, i32* @edi, align 4
  %v1_8051118 = add i32 %v0_8051118, 4
  %v2_8051118 = inttoptr i32 %v1_8051118 to i32*
  %v3_8051118 = load i32, i32* %v2_8051118, align 4
  store i32 %v3_8051118, i32* %ecx.global-to-local, align 4
  %v2_805111b = add i32 %v0_805110c, -16
  %v3_805111b = inttoptr i32 %v2_805111b to i32*
  store i32 %v3_8051118, i32* %v3_805111b, align 4
  %v0_805111c = call i32 @function_8052df4()
  store i32 %v0_805111c, i32* %eax.global-to-local, align 4
  %v0_8051124 = load i32, i32* @edi, align 4
  %v1_8051124 = add i32 %v0_8051124, 12
  %v2_8051124 = inttoptr i32 %v1_8051124 to i32*
  store i32 5, i32* %v2_8051124, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_8051130:                             ; preds = %dec_label_pc_8050d19, %dec_label_pc_8050d10, %dec_label_pc_8050d07, %dec_label_pc_8050cfe, %dec_label_pc_8050cf1
  %v1_8051130 = add i32 %v0_8051130, 1
  store i32 %v1_8051130, i32* @ebp, align 4
  %v10_8051133 = icmp eq i32 %v0_8051130, -2
  br i1 %v10_8051133, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_805113c

dec_label_pc_805113c:                             ; preds = %dec_label_pc_8051130
  %tmp150 = icmp slt i32 %v1_8051130, 1
  br i1 %tmp150, label %dec_label_pc_8050f43, label %dec_label_pc_8051144

dec_label_pc_8051144:                             ; preds = %dec_label_pc_805113c
  %v0_8051144 = load i32, i32* @esp, align 4
  %v1_8051147 = add i32 %v0_8051144, -16
  %v2_8051147 = inttoptr i32 %v1_8051147 to i32*
  store i32 22, i32* %v2_8051147, align 4
  %v2_8051149 = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051149, i32* %eax.global-to-local, align 4
  %v0_805114e = load i32, i32* @esp, align 4
  %v1_805114e = inttoptr i32 %v0_805114e to i32*
  %v2_805114e = load i32, i32* %v1_805114e, align 4
  store i32 %v2_805114e, i32* %eax.global-to-local, align 4
  %v3_805114e = add i32 %v0_805114e, 4
  %v1_805114f = inttoptr i32 %v3_805114e to i32*
  %v2_805114f = load i32, i32* %v1_805114f, align 4
  store i32 %v2_805114f, i32* %edx.global-to-local, align 4
  %v1_8051150 = add i32 %v0_805114e, 1888
  store i32 %v1_8051150, i32* %eax.global-to-local, align 4
  store i32 %v1_8051150, i32* %v1_805114f, align 4
  store i32 22, i32* %v1_805114e, align 4
  %v3_805115a = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805115a, i32* %eax.global-to-local, align 4
  %v0_805115f = load i32, i32* @esp, align 4
  %v1_805115f = add i32 %v0_805115f, -4
  %v2_805115f = inttoptr i32 %v1_805115f to i32*
  store i32 16384, i32* %v2_805115f, align 4
  %v1_8051164 = add i32 %v0_805115f, 1888
  %v2_8051164 = inttoptr i32 %v1_8051164 to i32*
  %v3_8051164 = load i32, i32* %v2_8051164, align 4
  store i32 %v3_8051164, i32* @esi, align 4
  %v2_805116b = add i32 %v0_805115f, -8
  %v3_805116b = inttoptr i32 %v2_805116b to i32*
  store i32 %v3_8051164, i32* %v3_805116b, align 4
  %v2_805116c = add i32 %v0_805115f, -12
  %v3_805116c = inttoptr i32 %v2_805116c to i32*
  store i32 %v3_805115a, i32* %v3_805116c, align 4
  %v0_805116d = load i32, i32* @edi, align 4
  %v1_805116d = add i32 %v0_805116d, 4
  %v2_805116d = inttoptr i32 %v1_805116d to i32*
  %v3_805116d = load i32, i32* %v2_805116d, align 4
  store i32 %v3_805116d, i32* @ebx, align 4
  %v2_8051170 = add i32 %v0_805115f, -16
  %v3_8051170 = inttoptr i32 %v2_8051170 to i32*
  store i32 %v3_805116d, i32* %v3_8051170, align 4
  %v0_8051171 = call i32 @function_8052df4()
  store i32 %v0_8051171, i32* %eax.global-to-local, align 4
  %v0_8051176 = load i32, i32* @esp, align 4
  %v1_8051179 = add i32 %v0_8051176, 28
  %v2_8051179 = inttoptr i32 %v1_8051179 to i32*
  store i32 16384, i32* %v2_8051179, align 4
  %v1_805117e = add i32 %v0_8051176, 24
  %v2_805117e = inttoptr i32 %v1_805117e to i32*
  store i32 2, i32* %v2_805117e, align 4
  %v1_8051180 = add i32 %v0_8051176, 20
  %v2_8051180 = inttoptr i32 %v1_8051180 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_8051180, align 4
  %v0_8051185 = load i32, i32* @edi, align 4
  %v1_8051185 = add i32 %v0_8051185, 4
  %v2_8051185 = inttoptr i32 %v1_8051185 to i32*
  %v3_8051185 = load i32, i32* %v2_8051185, align 4
  store i32 %v3_8051185, i32* %ecx.global-to-local, align 4
  %v2_8051188 = add i32 %v0_8051176, 16
  %v3_8051188 = inttoptr i32 %v2_8051188 to i32*
  store i32 %v3_8051185, i32* %v3_8051188, align 4
  %v0_8051189 = call i32 @function_8052df4()
  store i32 %v0_8051189, i32* %eax.global-to-local, align 4
  %v0_805118e = load i32, i32* @esp, align 4
  %v1_805118e = inttoptr i32 %v0_805118e to i32*
  store i32 22, i32* %v1_805118e, align 4
  %v2_8051195 = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051195, i32* %eax.global-to-local, align 4
  %v0_805119d = load i32, i32* @edi, align 4
  %v1_805119d = add i32 %v0_805119d, 12
  %v2_805119d = inttoptr i32 %v1_805119d to i32*
  store i32 7, i32* %v2_805119d, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_80511a9:                             ; preds = %dec_label_pc_8050f27, %dec_label_pc_8050f1e, %dec_label_pc_8050f15, %dec_label_pc_8050f0c, %dec_label_pc_8050eff
  %v1_80511a9 = add i32 %v0_80511a9, 1
  store i32 %v1_80511a9, i32* @ebp, align 4
  %v10_80511ac = icmp eq i32 %v0_80511a9, -2
  br i1 %v10_80511ac, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_80511b5

dec_label_pc_80511b5:                             ; preds = %dec_label_pc_80511a9
  %tmp151 = icmp slt i32 %v1_80511a9, 1
  br i1 %tmp151, label %dec_label_pc_8050f43, label %dec_label_pc_80511bd

dec_label_pc_80511bd:                             ; preds = %dec_label_pc_80511b5
  %v0_80511bd = load i32, i32* @esp, align 4
  %v1_80511c0 = add i32 %v0_80511bd, -16
  %v2_80511c0 = inttoptr i32 %v1_80511c0 to i32*
  store i32 24, i32* %v2_80511c0, align 4
  %v2_80511c2 = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80511c2, i32* %eax.global-to-local, align 4
  %v0_80511c7 = load i32, i32* @esp, align 4
  %v1_80511c7 = inttoptr i32 %v0_80511c7 to i32*
  %v2_80511c7 = load i32, i32* %v1_80511c7, align 4
  store i32 %v2_80511c7, i32* %eax.global-to-local, align 4
  %v3_80511c7 = add i32 %v0_80511c7, 4
  %v1_80511c8 = inttoptr i32 %v3_80511c7 to i32*
  %v1_80511c9 = add i32 %v0_80511c7, 1880
  store i32 %v1_80511c9, i32* %edx.global-to-local, align 4
  store i32 %v1_80511c9, i32* %v1_80511c8, align 4
  store i32 24, i32* %v1_80511c7, align 4
  %v3_80511d3 = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80511d3, i32* %eax.global-to-local, align 4
  %v0_80511d8 = load i32, i32* @esp, align 4
  %v1_80511d8 = add i32 %v0_80511d8, -4
  %v2_80511d8 = inttoptr i32 %v1_80511d8 to i32*
  store i32 16384, i32* %v2_80511d8, align 4
  %v1_80511dd = add i32 %v0_80511d8, 1880
  %v2_80511dd = inttoptr i32 %v1_80511dd to i32*
  %v3_80511dd = load i32, i32* %v2_80511dd, align 4
  store i32 %v3_80511dd, i32* @esi, align 4
  %v2_80511e4 = add i32 %v0_80511d8, -8
  %v3_80511e4 = inttoptr i32 %v2_80511e4 to i32*
  store i32 %v3_80511dd, i32* %v3_80511e4, align 4
  %v2_80511e5 = add i32 %v0_80511d8, -12
  %v3_80511e5 = inttoptr i32 %v2_80511e5 to i32*
  store i32 %v3_80511d3, i32* %v3_80511e5, align 4
  %v0_80511e6 = load i32, i32* @edi, align 4
  %v1_80511e6 = add i32 %v0_80511e6, 4
  %v2_80511e6 = inttoptr i32 %v1_80511e6 to i32*
  %v3_80511e6 = load i32, i32* %v2_80511e6, align 4
  store i32 %v3_80511e6, i32* @ebx, align 4
  %v2_80511e9 = add i32 %v0_80511d8, -16
  %v3_80511e9 = inttoptr i32 %v2_80511e9 to i32*
  store i32 %v3_80511e6, i32* %v3_80511e9, align 4
  %v0_80511ea = call i32 @function_8052df4()
  store i32 %v0_80511ea, i32* %eax.global-to-local, align 4
  %v0_80511ef = load i32, i32* @esp, align 4
  %v1_80511f2 = add i32 %v0_80511ef, 28
  %v2_80511f2 = inttoptr i32 %v1_80511f2 to i32*
  store i32 16384, i32* %v2_80511f2, align 4
  %v1_80511f7 = add i32 %v0_80511ef, 24
  %v2_80511f7 = inttoptr i32 %v1_80511f7 to i32*
  store i32 2, i32* %v2_80511f7, align 4
  %v1_80511f9 = add i32 %v0_80511ef, 20
  %v2_80511f9 = inttoptr i32 %v1_80511f9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_80511f9, align 4
  %v0_80511fe = load i32, i32* @edi, align 4
  %v1_80511fe = add i32 %v0_80511fe, 4
  %v2_80511fe = inttoptr i32 %v1_80511fe to i32*
  %v3_80511fe = load i32, i32* %v2_80511fe, align 4
  store i32 %v3_80511fe, i32* %ecx.global-to-local, align 4
  %v2_8051201 = add i32 %v0_80511ef, 16
  %v3_8051201 = inttoptr i32 %v2_8051201 to i32*
  store i32 %v3_80511fe, i32* %v3_8051201, align 4
  %v0_8051202 = call i32 @function_8052df4()
  store i32 %v0_8051202, i32* %eax.global-to-local, align 4
  %v0_8051207 = load i32, i32* @esp, align 4
  %v1_8051207 = inttoptr i32 %v0_8051207 to i32*
  store i32 24, i32* %v1_8051207, align 4
  %v2_805120e = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805120e, i32* %eax.global-to-local, align 4
  %v0_8051216 = load i32, i32* @edi, align 4
  %v1_8051216 = add i32 %v0_8051216, 12
  %v2_8051216 = inttoptr i32 %v1_8051216 to i32*
  store i32 10, i32* %v2_8051216, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_8051222:                             ; preds = %dec_label_pc_8050cd4, %dec_label_pc_8050ccb, %dec_label_pc_8050cc2, %dec_label_pc_8050cb9, %dec_label_pc_8050cac
  %v1_8051222 = add i32 %v0_8051222, 1
  store i32 %v1_8051222, i32* @ebp, align 4
  %v10_8051225 = icmp eq i32 %v0_8051222, -2
  br i1 %v10_8051225, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_805122e

dec_label_pc_805122e:                             ; preds = %dec_label_pc_8051222
  %tmp152 = icmp slt i32 %v1_8051222, 1
  br i1 %tmp152, label %dec_label_pc_8050f43, label %dec_label_pc_8051236

dec_label_pc_8051236:                             ; preds = %dec_label_pc_805122e
  %v0_8051236 = load i32, i32* @esp, align 4
  %v1_8051239 = add i32 %v0_8051236, -16
  %v2_8051239 = inttoptr i32 %v1_8051239 to i32*
  store i32 23, i32* %v2_8051239, align 4
  %v2_805123b = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805123b, i32* %eax.global-to-local, align 4
  %v0_8051240 = load i32, i32* @esp, align 4
  %v1_8051240 = inttoptr i32 %v0_8051240 to i32*
  %v2_8051240 = load i32, i32* %v1_8051240, align 4
  store i32 %v2_8051240, i32* %eax.global-to-local, align 4
  %v3_8051240 = add i32 %v0_8051240, 4
  %v1_8051241 = inttoptr i32 %v3_8051240 to i32*
  %v2_8051241 = load i32, i32* %v1_8051241, align 4
  store i32 %v2_8051241, i32* %edx.global-to-local, align 4
  %v1_8051242 = add i32 %v0_8051240, 1880
  store i32 %v1_8051242, i32* %eax.global-to-local, align 4
  store i32 %v1_8051242, i32* %v1_8051241, align 4
  store i32 23, i32* %v1_8051240, align 4
  %v3_805124c = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805124c, i32* %eax.global-to-local, align 4
  %v0_8051251 = load i32, i32* @esp, align 4
  %v1_8051251 = add i32 %v0_8051251, -4
  %v2_8051251 = inttoptr i32 %v1_8051251 to i32*
  store i32 16384, i32* %v2_8051251, align 4
  %v1_8051256 = add i32 %v0_8051251, 1880
  %v2_8051256 = inttoptr i32 %v1_8051256 to i32*
  %v3_8051256 = load i32, i32* %v2_8051256, align 4
  store i32 %v3_8051256, i32* @esi, align 4
  %v2_805125d = add i32 %v0_8051251, -8
  %v3_805125d = inttoptr i32 %v2_805125d to i32*
  store i32 %v3_8051256, i32* %v3_805125d, align 4
  %v2_805125e = add i32 %v0_8051251, -12
  %v3_805125e = inttoptr i32 %v2_805125e to i32*
  store i32 %v3_805124c, i32* %v3_805125e, align 4
  %v0_805125f = load i32, i32* @edi, align 4
  %v1_805125f = add i32 %v0_805125f, 4
  %v2_805125f = inttoptr i32 %v1_805125f to i32*
  %v3_805125f = load i32, i32* %v2_805125f, align 4
  store i32 %v3_805125f, i32* @ebx, align 4
  %v2_8051262 = add i32 %v0_8051251, -16
  %v3_8051262 = inttoptr i32 %v2_8051262 to i32*
  store i32 %v3_805125f, i32* %v3_8051262, align 4
  %v0_8051263 = call i32 @function_8052df4()
  store i32 %v0_8051263, i32* %eax.global-to-local, align 4
  %v0_8051268 = load i32, i32* @esp, align 4
  %v1_805126b = add i32 %v0_8051268, 28
  %v2_805126b = inttoptr i32 %v1_805126b to i32*
  store i32 16384, i32* %v2_805126b, align 4
  %v1_8051270 = add i32 %v0_8051268, 24
  %v2_8051270 = inttoptr i32 %v1_8051270 to i32*
  store i32 2, i32* %v2_8051270, align 4
  %v1_8051272 = add i32 %v0_8051268, 20
  %v2_8051272 = inttoptr i32 %v1_8051272 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_8051272, align 4
  %v0_8051277 = load i32, i32* @edi, align 4
  %v1_8051277 = add i32 %v0_8051277, 4
  %v2_8051277 = inttoptr i32 %v1_8051277 to i32*
  %v3_8051277 = load i32, i32* %v2_8051277, align 4
  store i32 %v3_8051277, i32* %ecx.global-to-local, align 4
  %v2_805127a = add i32 %v0_8051268, 16
  %v3_805127a = inttoptr i32 %v2_805127a to i32*
  store i32 %v3_8051277, i32* %v3_805127a, align 4
  %v0_805127b = call i32 @function_8052df4()
  store i32 %v0_805127b, i32* %eax.global-to-local, align 4
  %v0_8051280 = load i32, i32* @esp, align 4
  %v1_8051280 = inttoptr i32 %v0_8051280 to i32*
  store i32 23, i32* %v1_8051280, align 4
  %v2_8051287 = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051287, i32* %eax.global-to-local, align 4
  %v0_805128f = load i32, i32* @edi, align 4
  %v1_805128f = add i32 %v0_805128f, 12
  %v2_805128f = inttoptr i32 %v1_805128f to i32*
  store i32 9, i32* %v2_805128f, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_805129b:                             ; preds = %dec_label_pc_8050a94, %dec_label_pc_8050a8b, %dec_label_pc_8050a82, %dec_label_pc_8050a79, %dec_label_pc_8050a6c
  %v1_805129b = add i32 %v0_805129b, 1
  store i32 %v1_805129b, i32* @ebp, align 4
  %v10_805129e = icmp eq i32 %v0_805129b, -2
  br i1 %v10_805129e, label %dec_label_pc_8050aa0.loopexit12.loopexit, label %dec_label_pc_80512a7

dec_label_pc_80512a7:                             ; preds = %dec_label_pc_805129b
  %tmp153 = icmp slt i32 %v1_805129b, 1
  br i1 %tmp153, label %dec_label_pc_8050f43, label %dec_label_pc_80512af

dec_label_pc_80512af:                             ; preds = %dec_label_pc_80512a7
  %v0_80512af = load i32, i32* @esp, align 4
  %v1_80512b2 = add i32 %v0_80512af, -16
  %v2_80512b2 = inttoptr i32 %v1_80512b2 to i32*
  store i32 21, i32* %v2_80512b2, align 4
  %v2_80512b4 = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80512b4, i32* %eax.global-to-local, align 4
  %v0_80512b9 = load i32, i32* @esp, align 4
  %v1_80512b9 = inttoptr i32 %v0_80512b9 to i32*
  %v2_80512b9 = load i32, i32* %v1_80512b9, align 4
  store i32 %v2_80512b9, i32* %eax.global-to-local, align 4
  %v3_80512b9 = add i32 %v0_80512b9, 4
  %v1_80512ba = inttoptr i32 %v3_80512b9 to i32*
  %v2_80512ba = load i32, i32* %v1_80512ba, align 4
  store i32 %v2_80512ba, i32* %edx.global-to-local, align 4
  %v1_80512bb = add i32 %v0_80512b9, 1880
  store i32 %v1_80512bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80512bb, i32* %v1_80512ba, align 4
  store i32 21, i32* %v1_80512b9, align 4
  %v3_80512c5 = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80512c5, i32* %eax.global-to-local, align 4
  %v0_80512ca = load i32, i32* @esp, align 4
  %v1_80512ca = add i32 %v0_80512ca, -4
  %v2_80512ca = inttoptr i32 %v1_80512ca to i32*
  store i32 16384, i32* %v2_80512ca, align 4
  %v1_80512cf = add i32 %v0_80512ca, 1880
  %v2_80512cf = inttoptr i32 %v1_80512cf to i32*
  %v3_80512cf = load i32, i32* %v2_80512cf, align 4
  store i32 %v3_80512cf, i32* @esi, align 4
  %v2_80512d6 = add i32 %v0_80512ca, -8
  %v3_80512d6 = inttoptr i32 %v2_80512d6 to i32*
  store i32 %v3_80512cf, i32* %v3_80512d6, align 4
  %v2_80512d7 = add i32 %v0_80512ca, -12
  %v3_80512d7 = inttoptr i32 %v2_80512d7 to i32*
  store i32 %v3_80512c5, i32* %v3_80512d7, align 4
  %v0_80512d8 = load i32, i32* @edi, align 4
  %v1_80512d8 = add i32 %v0_80512d8, 4
  %v2_80512d8 = inttoptr i32 %v1_80512d8 to i32*
  %v3_80512d8 = load i32, i32* %v2_80512d8, align 4
  store i32 %v3_80512d8, i32* @ebx, align 4
  %v2_80512db = add i32 %v0_80512ca, -16
  %v3_80512db = inttoptr i32 %v2_80512db to i32*
  store i32 %v3_80512d8, i32* %v3_80512db, align 4
  %v0_80512dc = call i32 @function_8052df4()
  store i32 %v0_80512dc, i32* %eax.global-to-local, align 4
  %v0_80512e1 = load i32, i32* @esp, align 4
  %v1_80512e4 = add i32 %v0_80512e1, 28
  %v2_80512e4 = inttoptr i32 %v1_80512e4 to i32*
  store i32 16384, i32* %v2_80512e4, align 4
  %v1_80512e9 = add i32 %v0_80512e1, 24
  %v2_80512e9 = inttoptr i32 %v1_80512e9 to i32*
  store i32 2, i32* %v2_80512e9, align 4
  %v1_80512eb = add i32 %v0_80512e1, 20
  %v2_80512eb = inttoptr i32 %v1_80512eb to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054fe6.10 to i32), i32* %v2_80512eb, align 4
  %v0_80512f0 = load i32, i32* @edi, align 4
  %v1_80512f0 = add i32 %v0_80512f0, 4
  %v2_80512f0 = inttoptr i32 %v1_80512f0 to i32*
  %v3_80512f0 = load i32, i32* %v2_80512f0, align 4
  store i32 %v3_80512f0, i32* %ecx.global-to-local, align 4
  %v2_80512f3 = add i32 %v0_80512e1, 16
  %v3_80512f3 = inttoptr i32 %v2_80512f3 to i32*
  store i32 %v3_80512f0, i32* %v3_80512f3, align 4
  %v0_80512f4 = call i32 @function_8052df4()
  store i32 %v0_80512f4, i32* %eax.global-to-local, align 4
  %v0_80512f9 = load i32, i32* @esp, align 4
  %v1_80512f9 = inttoptr i32 %v0_80512f9 to i32*
  store i32 21, i32* %v1_80512f9, align 4
  %v2_8051300 = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051300, i32* %eax.global-to-local, align 4
  %v0_8051308 = load i32, i32* @edi, align 4
  %v1_8051308 = add i32 %v0_8051308, 12
  %v2_8051308 = inttoptr i32 %v1_8051308 to i32*
  store i32 6, i32* %v2_8051308, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_8051314:                             ; preds = %dec_label_pc_8050d30
  %v2_805131e = load i32, i32* %v1_805131e, align 4
  store i32 %v2_805131e, i32* %eax.global-to-local, align 4
  %v0_805131f = load i32, i32* @edi, align 4
  %v1_805131f = add i32 %v0_805131f, 4
  %v2_805131f = inttoptr i32 %v1_805131f to i32*
  %v3_805131f = load i32, i32* %v2_805131f, align 4
  store i32 %v3_805131f, i32* %eax.global-to-local, align 4
  store i32 %v3_805131f, i32* %v1_805131e, align 4
  %v1_8051323 = call i32 @function_80526b1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051323, i32* %eax.global-to-local, align 4
  %v0_8051328 = load i32, i32* @edi, align 4
  %v1_8051328 = add i32 %v0_8051328, 540
  %v2_8051328 = inttoptr i32 %v1_8051328 to i8*
  %v3_8051328 = load i8, i8* %v2_8051328, align 1
  %v4_8051328 = zext i8 %v3_8051328 to i32
  %v6_8051328 = and i32 %v1_8051323, -256
  %v7_8051328 = or i32 %v4_8051328, %v6_8051328
  %v1_8051331 = add i32 %v7_8051328, 1
  store i32 %v1_8051331, i32* %eax.global-to-local, align 4
  %v1_8051332 = add i32 %v0_8051328, 4
  %v2_8051332 = inttoptr i32 %v1_8051332 to i32*
  store i32 -1, i32* %v2_8051332, align 4
  %v0_8051339 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051339 = trunc i32 %v0_8051339 to i8
  %v2_8051339 = load i32, i32* @edi, align 4
  %v3_8051339 = add i32 %v2_8051339, 540
  %v4_8051339 = inttoptr i32 %v3_8051339 to i8*
  store i8 %v1_8051339, i8* %v4_8051339, align 1
  %v0_805133f = load i32, i32* %eax.global-to-local, align 4
  %v1_805133f = trunc i32 %v0_805133f to i8
  %v10_805133f = icmp eq i8 %v1_805133f, 10
  %v1_8051341 = icmp eq i1 %v10_805133f, false
  br i1 %v1_8051341, label %dec_label_pc_80514d0, label %dec_label_pc_8051347

dec_label_pc_8051347:                             ; preds = %dec_label_pc_8051314
  store i32 -1, i32* @ebp, align 4
  %v0_805134a = load i32, i32* @edi, align 4
  %v1_805134a = add i32 %v0_805134a, 540
  %v2_805134a = inttoptr i32 %v1_805134a to i8*
  store i8 0, i8* %v2_805134a, align 1
  %v0_8051351 = load i32, i32* @edi, align 4
  %v1_8051351 = add i32 %v0_8051351, 12
  %v2_8051351 = inttoptr i32 %v1_8051351 to i32*
  store i32 0, i32* %v2_8051351, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_805135d:                             ; preds = %dec_label_pc_8050fc4
  %v1_805135d = add i32 %v0_8050fb0, -4
  %v2_805135d = inttoptr i32 %v1_805135d to i32*
  store i32 16384, i32* %v2_805135d, align 4
  %v1_8051362 = add i32 %v0_8050fb0, -8
  %v2_8051362 = inttoptr i32 %v1_8051362 to i32*
  store i32 3, i32* %v2_8051362, align 4
  %v1_8051364 = add i32 %v0_8050fb0, 1879
  store i32 %v1_8051364, i32* %eax.global-to-local, align 4
  %v0_805136b = load i32, i32* @ebx, align 4
  %v1_805136b = add i32 %v0_805136b, 3
  store i32 %v1_805136b, i32* @ebx, align 4
  %v2_805136e = add i32 %v0_8050fb0, -12
  %v3_805136e = inttoptr i32 %v2_805136e to i32*
  store i32 %v1_8051364, i32* %v3_805136e, align 4
  %v0_805136f = load i32, i32* @ebp, align 4
  %v1_805136f = add i32 %v0_805136f, 3
  store i32 %v1_805136f, i32* @ebp, align 4
  %v0_8051372 = load i32, i32* @edi, align 4
  %v1_8051372 = add i32 %v0_8051372, 4
  %v2_8051372 = inttoptr i32 %v1_8051372 to i32*
  %v3_8051372 = load i32, i32* %v2_8051372, align 4
  store i32 %v3_8051372, i32* @esi, align 4
  %v2_8051375 = add i32 %v0_8050fb0, -16
  %v3_8051375 = inttoptr i32 %v2_8051375 to i32*
  store i32 %v3_8051372, i32* %v3_8051375, align 4
  %v0_8051376 = call i32 @function_8052df4()
  %v0_805137b = load i32, i32* @esp, align 4
  %v1_805137b = add i32 %v0_805137b, -4
  %v2_805137b = inttoptr i32 %v1_805137b to i32*
  store i32 16384, i32* %v2_805137b, align 4
  %v1_8051380 = add i32 %v0_805137b, -8
  %v2_8051380 = inttoptr i32 %v1_8051380 to i32*
  store i32 9, i32* %v2_8051380, align 4
  %v1_8051382 = add i32 %v0_805137b, 1863
  store i32 %v1_8051382, i32* %eax.global-to-local, align 4
  %v2_8051389 = add i32 %v0_805137b, -12
  %v3_8051389 = inttoptr i32 %v2_8051389 to i32*
  store i32 %v1_8051382, i32* %v3_8051389, align 4
  %v0_805138a = load i32, i32* @edi, align 4
  %v1_805138a = add i32 %v0_805138a, 4
  %v2_805138a = inttoptr i32 %v1_805138a to i32*
  %v3_805138a = load i32, i32* %v2_805138a, align 4
  store i32 %v3_805138a, i32* %ecx.global-to-local, align 4
  %v2_805138d = add i32 %v0_805137b, -16
  %v3_805138d = inttoptr i32 %v2_805138d to i32*
  store i32 %v3_805138a, i32* %v3_805138d, align 4
  %v0_805138e = call i32 @function_8052df4()
  store i32 %v0_805138e, i32* %eax.global-to-local, align 4
  %v0_8051393 = load i32, i32* @esp, align 4
  %v1_8051393 = add i32 %v0_8051393, 32
  %v0_8051396 = load i32, i32* @edi, align 4
  %v1_8051396 = add i32 %v0_8051396, 24
  %v2_8051396 = inttoptr i32 %v1_8051396 to i32*
  %v3_8051396 = load i32, i32* %v2_8051396, align 4
  store i32 %v3_8051396, i32* %edx.global-to-local, align 4
  %v0_8050b2b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050b2b.backedge

dec_label_pc_805139e:                             ; preds = %dec_label_pc_8050a14
  %v1_805139e = add i32 %v0_8050a1e, 1872
  %v2_805139e = inttoptr i32 %v1_805139e to i32*
  store i32 0, i32* %v2_805139e, align 4
  %v0_80513a9 = load i32, i32* @esp, align 4
  %v1_80513a9 = add i32 %v0_80513a9, 1864
  %v2_80513a9 = inttoptr i32 %v1_80513a9 to i32*
  store i32 4, i32* %v2_80513a9, align 4
  %v0_80513b4 = load i32, i32* @esp, align 4
  %v1_80513b7 = add i32 %v0_80513b4, 1864
  %v2_80513be = add i32 %v0_80513b4, -16
  %v3_80513be = inttoptr i32 %v2_80513be to i32*
  store i32 %v1_80513b7, i32* %v3_80513be, align 4
  %v1_80513bf = add i32 %v0_80513b4, 1872
  store i32 %v1_80513bf, i32* %eax.global-to-local, align 4
  %v2_80513c6 = add i32 %v0_80513b4, -20
  %v3_80513c6 = inttoptr i32 %v2_80513c6 to i32*
  store i32 %v1_80513bf, i32* %v3_80513c6, align 4
  %v1_80513c7 = add i32 %v0_80513b4, -24
  %v2_80513c7 = inttoptr i32 %v1_80513c7 to i32*
  store i32 4, i32* %v2_80513c7, align 4
  %v1_80513c9 = add i32 %v0_80513b4, -28
  %v2_80513c9 = inttoptr i32 %v1_80513c9 to i32*
  store i32 1, i32* %v2_80513c9, align 4
  %v0_80513cb = load i32, i32* @edi, align 4
  %v1_80513cb = add i32 %v0_80513cb, 4
  %v2_80513cb = inttoptr i32 %v1_80513cb to i32*
  %v3_80513cb = load i32, i32* %v2_80513cb, align 4
  store i32 %v3_80513cb, i32* %eax.global-to-local, align 4
  %v2_80513ce = add i32 %v0_80513b4, -32
  %v3_80513ce = inttoptr i32 %v2_80513ce to i32*
  store i32 %v3_80513cb, i32* %v3_80513ce, align 4
  %v0_80513cf = call i32 @function_8052d20()
  store i32 %v0_80513cf, i32* %eax.global-to-local, align 4
  %v0_80513d4 = load i32, i32* @esp, align 4
  %v2_80513d7 = add i32 %v0_80513d4, 1904
  %v3_80513d7 = inttoptr i32 %v2_80513d7 to i32*
  %v4_80513d7 = load i32, i32* %v3_80513d7, align 4
  %v5_80513d7 = or i32 %v4_80513d7, %v0_80513cf
  %v6_80513d7 = icmp eq i32 %v5_80513d7, 0
  store i32 %v5_80513d7, i32* %eax.global-to-local, align 4
  %v1_80513de = icmp eq i1 %v6_80513d7, false
  br i1 %v1_80513de, label %dec_label_pc_805143f, label %dec_label_pc_80513e0

dec_label_pc_80513e0:                             ; preds = %dec_label_pc_805139e
  %v0_80513e0 = load i32, i32* @edi, align 4
  %v1_80513e0 = add i32 %v0_80513e0, 12
  %v2_80513e0 = inttoptr i32 %v1_80513e0 to i32*
  store i32 2, i32* %v2_80513e0, align 4
  %v1_80513e7 = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  %v2_80513e7 = sext i32 %v1_80513e7 to i64
  %v0_80513ec = load i16, i16* @global_var_805614c.40, align 4
  %v1_80513ec = zext i16 %v0_80513ec to i32
  %v0_80513f9 = load i32, i32* @global_var_8056118.41, align 8
  store i32 %v0_80513f9, i32* @ebx, align 4
  store i32 %v1_80513ec, i32* %ecx.global-to-local, align 4
  %v8_8051403 = zext i16 %v0_80513ec to i64
  %v9_8051403 = udiv i64 %v2_80513e7, %v8_8051403
  %v10_8051403 = trunc i64 %v9_8051403 to i32
  store i32 %v10_8051403, i32* %eax.global-to-local, align 4
  %v11_8051403 = urem i64 %v2_80513e7, %v8_8051403
  %v12_8051403 = trunc i64 %v11_8051403 to i32
  store i32 %v12_8051403, i32* %edx.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_80513f9, 1
  br i1 %tmp154, label %dec_label_pc_8051501, label %dec_label_pc_805140d

dec_label_pc_805140d:                             ; preds = %dec_label_pc_80513e0
  %v0_805140d = load i32, i32* @global_var_8056148.42, align 8
  store i32 %v0_805140d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8051422 = trunc i64 %v11_8051403 to i16
  br label %dec_label_pc_8051422

dec_label_pc_8051416:                             ; preds = %dec_label_pc_8051428, %dec_label_pc_8051422
  %v1_8051416 = add i32 %v0_8051416, 1
  store i32 %v1_8051416, i32* %ecx.global-to-local, align 4
  %v1_8051417 = add i32 %v0_8051417, 16
  store i32 %v1_8051417, i32* %eax.global-to-local, align 4
  %v12_805141a = icmp eq i32 %v1_8051416, %v0_80513f9
  br i1 %v12_805141a, label %dec_label_pc_8051501.loopexit, label %dec_label_pc_8051422

dec_label_pc_8051422:                             ; preds = %dec_label_pc_8051416, %dec_label_pc_805140d
  %v0_8051416 = phi i32 [ %v1_8051416, %dec_label_pc_8051416 ], [ 0, %dec_label_pc_805140d ]
  %v0_8051417 = phi i32 [ %v1_8051417, %dec_label_pc_8051416 ], [ %v0_805140d, %dec_label_pc_805140d ]
  %v3_8051422 = add i32 %v0_8051417, 8
  %v4_8051422 = inttoptr i32 %v3_8051422 to i16*
  %v5_8051422 = load i16, i16* %v4_8051422, align 2
  %v11_8051422 = icmp ult i16 %v1_8051422, %v5_8051422
  br i1 %v11_8051422, label %dec_label_pc_8051416, label %dec_label_pc_8051428

dec_label_pc_8051428:                             ; preds = %dec_label_pc_8051422
  %v3_8051428 = add i32 %v0_8051417, 10
  %v4_8051428 = inttoptr i32 %v3_8051428 to i16*
  %v5_8051428 = load i16, i16* %v4_8051428, align 2
  %v11_8051428 = icmp ult i16 %v1_8051422, %v5_8051428
  %v1_805142c = icmp eq i1 %v11_8051428, false
  br i1 %v1_805142c, label %dec_label_pc_8051416, label %dec_label_pc_805142e.loopexit

dec_label_pc_805142e.loopexit:                    ; preds = %dec_label_pc_8051428
  br label %dec_label_pc_805142e

dec_label_pc_805142e:                             ; preds = %dec_label_pc_805142e.loopexit, %dec_label_pc_8051501
  %v0_8051431 = phi i32 [ %v0_8051417, %dec_label_pc_805142e.loopexit ], [ 0, %dec_label_pc_8051501 ]
  %v0_805142e = load i32, i32* @edi, align 4
  %v1_805142e = add i32 %v0_805142e, 4
  %v2_805142e = inttoptr i32 %v1_805142e to i32*
  %v3_805142e = load i32, i32* %v2_805142e, align 4
  store i32 %v3_805142e, i32* %ecx.global-to-local, align 4
  %v2_8051431 = inttoptr i32 %v0_805142e to i32*
  store i32 %v0_8051431, i32* %v2_8051431, align 4
  %v0_8051433 = load i32, i32* @edi, align 4
  %v1_8051433 = add i32 %v0_8051433, 24
  %v2_8051433 = inttoptr i32 %v1_8051433 to i32*
  store i32 0, i32* %v2_8051433, align 4
  %v0_8050a31.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8050a39.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050a31

dec_label_pc_805143f:                             ; preds = %dec_label_pc_805139e
  %v0_8051442 = load i32, i32* @edi, align 4
  %v1_8051442 = add i32 %v0_8051442, 4
  %v2_8051442 = inttoptr i32 %v1_8051442 to i32*
  %v3_8051442 = load i32, i32* %v2_8051442, align 4
  store i32 %v3_8051442, i32* %eax.global-to-local, align 4
  %v2_8051445 = add i32 %v0_80513d4, 16
  %v3_8051445 = inttoptr i32 %v2_8051445 to i32*
  store i32 %v3_8051442, i32* %v3_8051445, align 4
  %v1_8051446 = call i32 @function_80526b1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051446, i32* %eax.global-to-local, align 4
  %v0_805144e = load i32, i32* @edi, align 4
  %v1_805144e = add i32 %v0_805144e, 4
  %v2_805144e = inttoptr i32 %v1_805144e to i32*
  store i32 -1, i32* %v2_805144e, align 4
  %v0_8051455 = load i32, i32* @edi, align 4
  %v1_8051455 = add i32 %v0_8051455, 540
  %v2_8051455 = inttoptr i32 %v1_8051455 to i8*
  store i8 0, i8* %v2_8051455, align 1
  %v0_805145c = load i32, i32* @edi, align 4
  %v1_805145c = add i32 %v0_805145c, 12
  %v2_805145c = inttoptr i32 %v1_805145c to i32*
  store i32 0, i32* %v2_805145c, align 4
  br label %dec_label_pc_8050a48

dec_label_pc_8051468:                             ; preds = %dec_label_pc_805095f
  %v3_8051473 = add nuw nsw i32 %v2_8051473, 1572
  %v4_8051473 = add i32 %v3_8051473, %v0_8051473
  %v5_8051473 = inttoptr i32 %v4_8051473 to i32*
  %v6_8051473 = load i32, i32* %v5_8051473, align 4
  %v9_8051473 = shl i32 1, %v1_805146d
  %v12_8051473 = or i32 %v6_8051473, %v9_8051473
  store i32 %v12_8051473, i32* %v5_8051473, align 4
  %v0_805147b = load i32, i32* @ebx, align 4
  %v1_805147b = add i32 %v0_805147b, 4
  %v2_805147b = inttoptr i32 %v1_805147b to i32*
  %v3_805147b = load i32, i32* %v2_805147b, align 4
  store i32 %v3_805147b, i32* %eax.global-to-local, align 4
  %v0_805147e = load i32, i32* @esi, align 4
  %v2_805147e = sub i32 %v0_805147e, %v3_805147b
  %v8_805147e = xor i32 %v0_805147e, %v3_805147b
  %v9_805147e = xor i32 %v2_805147e, %v0_805147e
  %v10_805147e = and i32 %v9_805147e, %v8_805147e
  %v11_805147e = icmp slt i32 %v10_805147e, 0
  %v13_805147e = icmp slt i32 %v2_805147e, 0
  %v2_8051480 = icmp eq i1 %v13_805147e, %v11_805147e
  br i1 %v2_8051480, label %dec_label_pc_8050982, label %dec_label_pc_8051486

dec_label_pc_8051486:                             ; preds = %dec_label_pc_8051468
  store i32 %v3_805147b, i32* @esi, align 4
  br label %dec_label_pc_8050982

dec_label_pc_8051490:                             ; preds = %dec_label_pc_805094d
  %v0_8051490 = load i32, i32* @esp, align 4
  %v1_8051493 = add i32 %v2_805093f, 4
  %v2_8051493 = inttoptr i32 %v1_8051493 to i32*
  %v3_8051493 = load i32, i32* %v2_8051493, align 4
  store i32 %v3_8051493, i32* %edx.global-to-local, align 4
  %v2_8051496 = add i32 %v0_8051490, -16
  %v3_8051496 = inttoptr i32 %v2_8051496 to i32*
  store i32 %v3_8051493, i32* %v3_8051496, align 4
  %v1_8051497 = call i32 @function_80526b1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051497, i32* %eax.global-to-local, align 4
  %v0_805149f = load i32, i32* @ebx, align 4
  %v1_805149f = add i32 %v0_805149f, 4
  %v2_805149f = inttoptr i32 %v1_805149f to i32*
  store i32 -1, i32* %v2_805149f, align 4
  %v0_80514a6 = load i32, i32* @ebx, align 4
  %v1_80514a6 = add i32 %v0_80514a6, 12
  %v2_80514a6 = inttoptr i32 %v1_80514a6 to i32*
  %v3_80514a6 = load i32, i32* %v2_80514a6, align 4
  %tmp301 = icmp ult i32 %v3_80514a6, 3
  br i1 %tmp301, label %dec_label_pc_80514df, label %dec_label_pc_80514ac

dec_label_pc_80514ac:                             ; preds = %dec_label_pc_8051490
  %v1_80514ac = add i32 %v0_80514a6, 540
  %v2_80514ac = inttoptr i32 %v1_80514ac to i8*
  %v3_80514ac = load i8, i8* %v2_80514ac, align 1
  %v4_80514ac = zext i8 %v3_80514ac to i32
  %v6_80514ac = and i32 %v1_8051497, -256
  %v7_80514ac = or i32 %v4_80514ac, %v6_80514ac
  %v1_80514b2 = add i32 %v7_80514ac, 1
  %v10_80514b2 = trunc i32 %v1_80514b2 to i8
  store i32 %v1_80514b2, i32* %eax.global-to-local, align 4
  store i8 %v10_80514b2, i8* %v2_80514ac, align 1
  %v0_80514b9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80514b9 = trunc i32 %v0_80514b9 to i8
  %v10_80514b9 = icmp eq i8 %v1_80514b9, 10
  %v0_80514df.pre = load i32, i32* @ebx, align 4
  br i1 %v10_80514b9, label %dec_label_pc_80514df, label %dec_label_pc_80514bd

dec_label_pc_80514bd:                             ; preds = %dec_label_pc_80514ac
  store i32 %v0_80514df.pre, i32* @eax, align 4
  %v0_80514bf = call i32 @function_804f4d0()
  store i32 %v0_80514bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050982

dec_label_pc_80514d0:                             ; preds = %dec_label_pc_8051314
  %v0_80514d0 = load i32, i32* @edi, align 4
  store i32 %v0_80514d0, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_80514d5 = call i32 @function_804f4d0()
  store i32 %v0_80514d5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e11

dec_label_pc_80514df:                             ; preds = %dec_label_pc_80514ac, %dec_label_pc_8051490
  %v0_80514df = phi i32 [ %v0_80514a6, %dec_label_pc_8051490 ], [ %v0_80514df.pre, %dec_label_pc_80514ac ]
  %v1_80514df = add i32 %v0_80514df, 540
  %v2_80514df = inttoptr i32 %v1_80514df to i8*
  store i8 0, i8* %v2_80514df, align 1
  %v0_80514e6 = load i32, i32* @ebx, align 4
  %v1_80514e6 = add i32 %v0_80514e6, 12
  %v2_80514e6 = inttoptr i32 %v1_80514e6 to i32*
  store i32 0, i32* %v2_80514e6, align 4
  br label %dec_label_pc_8050982

dec_label_pc_80514f2:                             ; preds = %dec_label_pc_805092a
  br i1 %v5_8050944, label %dec_label_pc_8050982, label %dec_label_pc_80514fa

dec_label_pc_80514fa:                             ; preds = %dec_label_pc_80514f2
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805094d

dec_label_pc_8051501.loopexit:                    ; preds = %dec_label_pc_8051416
  br label %dec_label_pc_8051501

dec_label_pc_8051501:                             ; preds = %dec_label_pc_8051501.loopexit, %dec_label_pc_80513e0
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805142e

dec_label_pc_8051508:                             ; preds = %dec_label_pc_8050ffc
  %v1_8051508 = add i32 %v0_8050ae5, 56
  %v2_8051508 = inttoptr i32 %v1_8051508 to i32*
  %v3_8051508 = load i32, i32* %v2_8051508, align 4
  store i32 %v3_8051508, i32* %eax.global-to-local, align 4
  %v1_805150c = inttoptr i32 %v3_8051508 to i32*
  store i32 104, i32* %v1_805150c, align 4
  %v0_8051018.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051018

dec_label_pc_8051517:                             ; preds = %dec_label_pc_8051018
  store i32 %v0_8051517, i32* @eax, align 4
  %v0_8051519 = call i32 @function_804f4d0()
  store i32 %v0_8051519, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050a48

dec_label_pc_8051523:                             ; preds = %dec_label_pc_8050fce
  %v11_8051523 = icmp eq i8 %v2_8050fce, -5
  %v1_8051525 = icmp eq i1 %v11_8051523, false
  br i1 %v1_8051525, label %dec_label_pc_8050b5b, label %dec_label_pc_805152b

dec_label_pc_805152b:                             ; preds = %dec_label_pc_8051523
  store i8 -3, i8* %v1_8050fce, align 1
  %v4_8050b5b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b5b

dec_label_pc_805154e:                             ; preds = %dec_label_pc_8050dcc
  %v1_805154e = add i32 %v0_8050de7, 1
  %v8_805154e = icmp eq i32 %v1_805154e, 0
  store i32 %v1_805154e, i32* %eax.global-to-local, align 4
  br i1 %v8_805154e, label %dec_label_pc_8050df4, label %dec_label_pc_8051555

dec_label_pc_8051555:                             ; preds = %dec_label_pc_805154e
  %v0_8051555 = load i32, i32* @ecx, align 4
  %v1_8051555 = load i32, i32* @esp, align 4
  %v2_8051555 = add i32 %v1_8051555, -4
  %v3_8051555 = inttoptr i32 %v2_8051555 to i32*
  store i32 %v0_8051555, i32* %v3_8051555, align 4
  %v1_8051556 = add i32 %v1_8051555, -8
  %v2_8051556 = inttoptr i32 %v1_8051556 to i32*
  store i32 0, i32* %v2_8051556, align 4
  %v1_8051558 = add i32 %v1_8051555, -12
  %v2_8051558 = inttoptr i32 %v1_8051558 to i32*
  store i32 1, i32* %v2_8051558, align 4
  %v1_805155a = add i32 %v1_8051555, -16
  %v2_805155a = inttoptr i32 %v1_805155a to i32*
  store i32 2, i32* %v2_805155a, align 4
  %v4_805155c = call i32 @function_8052ea5(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_8051561 = load i32, i32* @esp, align 4
  %v2_8051561 = add i32 %v1_8051561, 48
  %v3_8051561 = inttoptr i32 %v2_8051561 to i32*
  store i32 %v4_805155c, i32* %v3_8051561, align 4
  %v0_8051565 = load i32, i32* @esp, align 4
  %v1_8051568 = add i32 %v4_805155c, 1
  %v8_8051568 = icmp eq i32 %v1_8051568, 0
  store i32 %v1_8051568, i32* @eax, align 4
  %v2_8050798 = inttoptr i32 %v0_8051565 to i32*
  br i1 %v8_8051568, label %dec_label_pc_8050795, label %dec_label_pc_805156f

dec_label_pc_805156f:                             ; preds = %dec_label_pc_8051555
  store i32 18, i32* %v2_8050798, align 4
  %v2_8051574 = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051574, i32* %eax.global-to-local, align 4
  %v0_8051579 = load i32, i32* @esp, align 4
  %v1_8051579 = inttoptr i32 %v0_8051579 to i32*
  store i32 19, i32* %v1_8051579, align 4
  %v2_8051580 = call i32 @function_80517c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051580, i32* %eax.global-to-local, align 4
  %v0_8051585 = load i32, i32* @esp, align 4
  %v1_8051585 = inttoptr i32 %v0_8051585 to i32*
  %v2_8051585 = load i32, i32* %v1_8051585, align 4
  store i32 %v2_8051585, i32* %eax.global-to-local, align 4
  %v3_8051585 = add i32 %v0_8051585, 4
  %v1_8051586 = inttoptr i32 %v3_8051585 to i32*
  %v2_8051586 = load i32, i32* %v1_8051586, align 4
  store i32 %v2_8051586, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8051586, align 4
  store i32 18, i32* %v1_8051585, align 4
  %v3_805158b = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805158b, i32* %eax.global-to-local, align 4
  %v1_8051590 = load i32, i32* @esp, align 4
  %v2_8051590 = inttoptr i32 %v1_8051590 to i32*
  store i32 %v3_805158b, i32* %v2_8051590, align 4
  %v0_8051593 = call i32 @function_804f010()
  store i32 %v0_8051593, i32* %eax.global-to-local, align 4
  %v0_8051598 = load i32, i32* @esp, align 4
  store i32 %v0_8051593, i32* @esi, align 4
  %v2_805159d = icmp eq i32 %v0_8051593, 0
  br i1 %v2_805159d, label %dec_label_pc_8050df4, label %dec_label_pc_80515a5

dec_label_pc_80515a5:                             ; preds = %dec_label_pc_805156f
  %v1_80515a5 = add i32 %v0_8051598, 1844
  %v2_80515a5 = inttoptr i32 %v1_80515a5 to i16*
  store i16 2, i16* %v2_80515a5, align 2
  %v2_80515af = add i32 %v0_8051593, 4
  %v3_80515af = inttoptr i32 %v2_80515af to i32*
  %v4_80515af = load i32, i32* %v3_80515af, align 4
  store i32 %v4_80515af, i32* @ebx, align 4
  %v1_80515b2 = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  %v2_80515b2 = sext i32 %v1_80515b2 to i64
  store i32 %v1_80515b2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_80515b9 = load i32, i32* @esi, align 4
  %v1_80515b9 = inttoptr i32 %v0_80515b9 to i8*
  %v2_80515b9 = load i8, i8* %v1_80515b9, align 1
  %v3_80515b9 = zext i8 %v2_80515b9 to i32
  store i32 %v3_80515b9, i32* %ecx.global-to-local, align 4
  %v8_80515bf = zext i8 %v2_80515b9 to i64
  %v9_80515bf = udiv i64 %v2_80515b2, %v8_80515bf
  %v10_80515bf = trunc i64 %v9_80515bf to i32
  store i32 %v10_80515bf, i32* %eax.global-to-local, align 4
  %v11_80515bf = urem i64 %v2_80515b2, %v8_80515bf
  %v12_80515bf = trunc i64 %v11_80515bf to i32
  store i32 %v12_80515bf, i32* %edx.global-to-local, align 4
  %v0_80515c1 = load i32, i32* @ebx, align 4
  %v2_80515c1 = mul nuw nsw i32 %v12_80515bf, 4
  %v3_80515c1 = add i32 %v2_80515c1, %v0_80515c1
  %v4_80515c1 = inttoptr i32 %v3_80515c1 to i32*
  %v5_80515c1 = load i32, i32* %v4_80515c1, align 4
  store i32 %v5_80515c1, i32* %eax.global-to-local, align 4
  %v1_80515c4 = load i32, i32* @esp, align 4
  %v2_80515c4 = add i32 %v1_80515c4, 1832
  %v3_80515c4 = inttoptr i32 %v2_80515c4 to i32*
  store i32 %v5_80515c1, i32* %v3_80515c4, align 4
  %v0_80515cb = load i32, i32* @edi, align 4
  %v1_80515cb = load i32, i32* @esp, align 4
  %v2_80515cb = add i32 %v1_80515cb, -4
  %v3_80515cb = inttoptr i32 %v2_80515cb to i32*
  store i32 %v0_80515cb, i32* %v3_80515cb, align 4
  %v0_80515cc = load i32, i32* @edi, align 4
  %v2_80515cc = add i32 %v1_80515cb, -8
  %v3_80515cc = inttoptr i32 %v2_80515cc to i32*
  store i32 %v0_80515cc, i32* %v3_80515cc, align 4
  %v1_80515cd = add i32 %v1_80515cb, -12
  %v2_80515cd = inttoptr i32 %v1_80515cd to i32*
  store i32 0, i32* %v2_80515cd, align 4
  %v1_80515cf = add i32 %v1_80515cb, -16
  %v2_80515cf = inttoptr i32 %v1_80515cf to i32*
  store i32 19, i32* %v2_80515cf, align 4
  %v3_80515d1 = call i32 @function_8051710(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_80515d1 = inttoptr i32 %v3_80515d1 to i16*
  store i32 %v3_80515d1, i32* %eax.global-to-local, align 4
  %v3_80515d6 = load i16, i16* %v4_80515d1, align 2
  %v4_80515d6 = zext i16 %v3_80515d6 to i32
  %v7_80515d6 = and i32 %v3_80515d1, -65536
  %v8_80515d6 = or i32 %v4_80515d6, %v7_80515d6
  store i32 %v8_80515d6, i32* %eax.global-to-local, align 4
  %v0_80515d9 = load i32, i32* @esi, align 4
  %v1_80515d9 = load i32, i32* @esp, align 4
  %v2_80515d9 = inttoptr i32 %v1_80515d9 to i32*
  store i32 %v0_80515d9, i32* %v2_80515d9, align 4
  %v0_80515dc = load i32, i32* %eax.global-to-local, align 4
  %v1_80515dc = trunc i32 %v0_80515dc to i16
  %v2_80515dc = load i32, i32* @esp, align 4
  %v3_80515dc = add i32 %v2_80515dc, 1846
  %v4_80515dc = inttoptr i32 %v3_80515dc to i16*
  store i16 %v1_80515dc, i16* %v4_80515dc, align 2
  %v0_80515e4 = call i32 @function_804efd0()
  store i32 %v0_80515e4, i32* %eax.global-to-local, align 4
  %v0_80515e9 = load i32, i32* @esp, align 4
  %v1_80515e9 = inttoptr i32 %v0_80515e9 to i32*
  store i32 18, i32* %v1_80515e9, align 4
  %v2_80515f0 = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80515f0, i32* %eax.global-to-local, align 4
  %v0_80515f5 = load i32, i32* @esp, align 4
  %v1_80515f5 = inttoptr i32 %v0_80515f5 to i32*
  store i32 19, i32* %v1_80515f5, align 4
  %v2_80515fc = call i32 @function_8051740(i8 ptrtoint (i32* @0 to i8))
  %v0_8051601 = load i32, i32* @esp, align 4
  %v1_8051601 = add i32 %v0_8051601, 1844
  store i32 %v1_8051601, i32* %eax.global-to-local, align 4
  %v1_805160b = add i32 %v0_8051601, 8
  %v2_805160b = inttoptr i32 %v1_805160b to i32*
  store i32 16, i32* %v2_805160b, align 4
  %v0_805160d = load i32, i32* %eax.global-to-local, align 4
  %v2_805160d = add i32 %v0_8051601, 4
  %v3_805160d = inttoptr i32 %v2_805160d to i32*
  store i32 %v0_805160d, i32* %v3_805160d, align 4
  %v1_805160e = add i32 %v0_8051601, 48
  %v2_805160e = inttoptr i32 %v1_805160e to i32*
  %v3_805160e = load i32, i32* %v2_805160e, align 4
  %v3_8051612 = inttoptr i32 %v0_8051601 to i32*
  store i32 %v3_805160e, i32* %v3_8051612, align 4
  %v3_8051613 = call i32 @function_8052cca(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8051618 = load i32, i32* @esp, align 4
  %v1_8051618 = add i32 %v0_8051618, 16
  %v1_805161b = add i32 %v3_8051613, 1
  %v8_805161b = icmp eq i32 %v1_805161b, 0
  store i32 %v1_805161b, i32* %eax.global-to-local, align 4
  %v1_805161c = icmp eq i1 %v8_805161b, false
  br i1 %v1_805161c, label %dec_label_pc_8051637, label %dec_label_pc_805161e

dec_label_pc_805161e:                             ; preds = %dec_label_pc_80515a5
  br label %dec_label_pc_8051621

dec_label_pc_8051621:                             ; preds = %dec_label_pc_8051637, %dec_label_pc_805161e
  %storemerge4.in = phi i32 [ %v0_8051618, %dec_label_pc_805161e ], [ %v0_80516fe, %dec_label_pc_8051637 ]
  %v1_8051621 = add i32 %storemerge4.in, 48
  %v2_8051621 = inttoptr i32 %v1_8051621 to i32*
  %v3_8051621 = load i32, i32* %v2_8051621, align 4
  store i32 %v3_8051621, i32* @edi, align 4
  %v3_8051625 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v3_8051621, i32* %v3_8051625, align 4
  %v1_8051626 = call i32 @function_80526b1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051626, i32* @eax, align 4
  %v0_805162b = load i32, i32* @esp, align 4
  %v1_805162b = inttoptr i32 %v0_805162b to i32*
  store i32 0, i32* %v1_805162b, align 4
  %v1_8051632 = call i32 @function_80541f9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051632, i32* %eax.global-to-local, align 4
  %v0_8051637.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051637

dec_label_pc_8051637:                             ; preds = %dec_label_pc_80515a5, %dec_label_pc_8051621
  %v0_8051637 = phi i32 [ %v1_8051618, %dec_label_pc_80515a5 ], [ %v0_8051637.pre, %dec_label_pc_8051621 ]
  %v1_8051637 = add i32 %v0_8051637, 1864
  %v2_8051637 = inttoptr i32 %v1_8051637 to i8*
  store i8 0, i8* %v2_8051637, align 1
  %v0_805163f = load i32, i32* @esp, align 4
  %v1_805163f = add i32 %v0_805163f, -4
  %v2_805163f = inttoptr i32 %v1_805163f to i32*
  store i32 16384, i32* %v2_805163f, align 4
  %v1_8051644 = add i32 %v0_805163f, -8
  %v2_8051644 = inttoptr i32 %v1_8051644 to i32*
  store i32 1, i32* %v2_8051644, align 4
  %v1_8051646 = add i32 %v0_805163f, 1864
  store i32 %v1_8051646, i32* %eax.global-to-local, align 4
  %v2_805164d = add i32 %v0_805163f, -12
  %v3_805164d = inttoptr i32 %v2_805164d to i32*
  store i32 %v1_8051646, i32* %v3_805164d, align 4
  %v1_805164e = add i32 %v0_805163f, 32
  %v2_805164e = inttoptr i32 %v1_805164e to i32*
  %v3_805164e = load i32, i32* %v2_805164e, align 4
  store i32 %v3_805164e, i32* @ebx, align 4
  %v2_8051652 = add i32 %v0_805163f, -16
  %v3_8051652 = inttoptr i32 %v2_8051652 to i32*
  store i32 %v3_805164e, i32* %v3_8051652, align 4
  %v0_8051653 = call i32 @function_8052df4()
  %v0_8051658 = load i32, i32* @esp, align 4
  %v1_8051658 = add i32 %v0_8051658, -4
  %v2_8051658 = inttoptr i32 %v1_8051658 to i32*
  store i32 16384, i32* %v2_8051658, align 4
  %v1_805165d = add i32 %v0_8051658, -8
  %v2_805165d = inttoptr i32 %v1_805165d to i32*
  store i32 4, i32* %v2_805165d, align 4
  %v1_805165f = add i32 %v0_8051658, 1888
  store i32 %v1_805165f, i32* %eax.global-to-local, align 4
  %v2_8051666 = add i32 %v0_8051658, -12
  %v3_8051666 = inttoptr i32 %v2_8051666 to i32*
  store i32 %v1_805165f, i32* %v3_8051666, align 4
  %v1_8051667 = add i32 %v0_8051658, 48
  %v2_8051667 = inttoptr i32 %v1_8051667 to i32*
  %v3_8051667 = load i32, i32* %v2_8051667, align 4
  store i32 %v3_8051667, i32* %ecx.global-to-local, align 4
  %v2_805166b = add i32 %v0_8051658, -16
  %v3_805166b = inttoptr i32 %v2_805166b to i32*
  store i32 %v3_8051667, i32* %v3_805166b, align 4
  %v0_805166c = call i32 @function_8052df4()
  %v0_8051671 = load i32, i32* @esp, align 4
  %v1_8051674 = add i32 %v0_8051671, 28
  %v2_8051674 = inttoptr i32 %v1_8051674 to i32*
  store i32 16384, i32* %v2_8051674, align 4
  %v1_8051679 = add i32 %v0_8051671, 24
  %v2_8051679 = inttoptr i32 %v1_8051679 to i32*
  store i32 2, i32* %v2_8051679, align 4
  %v1_805167b = add i32 %v0_8051671, 1914
  store i32 %v1_805167b, i32* %eax.global-to-local, align 4
  %v2_8051682 = add i32 %v0_8051671, 20
  %v3_8051682 = inttoptr i32 %v2_8051682 to i32*
  store i32 %v1_805167b, i32* %v3_8051682, align 4
  %v1_8051683 = add i32 %v0_8051671, 64
  %v2_8051683 = inttoptr i32 %v1_8051683 to i32*
  %v3_8051683 = load i32, i32* %v2_8051683, align 4
  store i32 %v3_8051683, i32* %edx.global-to-local, align 4
  %v2_8051687 = add i32 %v0_8051671, 16
  %v3_8051687 = inttoptr i32 %v2_8051687 to i32*
  store i32 %v3_8051683, i32* %v3_8051687, align 4
  %v0_8051688 = call i32 @function_8052df4()
  store i32 %v0_8051688, i32* %eax.global-to-local, align 4
  %v0_805168d = load i32, i32* @esp, align 4
  %v1_805168d = add i32 %v0_805168d, -4
  %v2_805168d = inttoptr i32 %v1_805168d to i32*
  store i32 16384, i32* %v2_805168d, align 4
  %v1_8051692 = add i32 %v0_805168d, -8
  %v2_8051692 = inttoptr i32 %v1_8051692 to i32*
  store i32 1, i32* %v2_8051692, align 4
  %v1_8051694 = add i32 %v0_805168d, 52
  %v2_8051694 = inttoptr i32 %v1_8051694 to i32*
  %v3_8051694 = load i32, i32* %v2_8051694, align 4
  %v1_8051698 = add i32 %v3_8051694, 12
  store i32 %v1_8051698, i32* %eax.global-to-local, align 4
  %v2_805169b = add i32 %v0_805168d, -12
  %v3_805169b = inttoptr i32 %v2_805169b to i32*
  store i32 %v1_8051698, i32* %v3_805169b, align 4
  %v1_805169c = add i32 %v0_805168d, 48
  %v2_805169c = inttoptr i32 %v1_805169c to i32*
  %v3_805169c = load i32, i32* %v2_805169c, align 4
  store i32 %v3_805169c, i32* %eax.global-to-local, align 4
  %v2_80516a0 = add i32 %v0_805168d, -16
  %v3_80516a0 = inttoptr i32 %v2_80516a0 to i32*
  store i32 %v3_805169c, i32* %v3_80516a0, align 4
  %v0_80516a1 = call i32 @function_8052df4()
  %v0_80516a6 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80516ab = add i32 %v0_80516a6, 28
  %v2_80516ab = inttoptr i32 %v1_80516ab to i32*
  store i32 16384, i32* %v2_80516ab, align 4
  %v1_80516b0 = add i32 %v0_80516a6, 68
  %v2_80516b0 = inttoptr i32 %v1_80516b0 to i32*
  %v3_80516b0 = load i32, i32* %v2_80516b0, align 4
  store i32 %v3_80516b0, i32* %edx.global-to-local, align 4
  %v1_80516b4 = add i32 %v3_80516b0, 12
  %v2_80516b4 = inttoptr i32 %v1_80516b4 to i8*
  %v3_80516b4 = load i8, i8* %v2_80516b4, align 1
  %v4_80516b4 = zext i8 %v3_80516b4 to i32
  %v5_80516b4 = load i32, i32* %eax.global-to-local, align 4
  %v6_80516b4 = and i32 %v5_80516b4, -256
  %v7_80516b4 = or i32 %v6_80516b4, %v4_80516b4
  store i32 %v7_80516b4, i32* %eax.global-to-local, align 4
  %v2_80516b7 = add i32 %v0_80516a6, 24
  %v3_80516b7 = inttoptr i32 %v2_80516b7 to i32*
  store i32 %v7_80516b4, i32* %v3_80516b7, align 4
  %v0_80516b8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80516b8 = inttoptr i32 %v0_80516b8 to i32*
  %v2_80516b8 = load i32, i32* %v1_80516b8, align 4
  store i32 %v2_80516b8, i32* %eax.global-to-local, align 4
  %v2_80516ba = add i32 %v0_80516a6, 20
  %v3_80516ba = inttoptr i32 %v2_80516ba to i32*
  store i32 %v2_80516b8, i32* %v3_80516ba, align 4
  %v1_80516bb = add i32 %v0_80516a6, 64
  %v2_80516bb = inttoptr i32 %v1_80516bb to i32*
  %v3_80516bb = load i32, i32* %v2_80516bb, align 4
  store i32 %v3_80516bb, i32* %eax.global-to-local, align 4
  %v2_80516bf = add i32 %v0_80516a6, 16
  %v3_80516bf = inttoptr i32 %v2_80516bf to i32*
  store i32 %v3_80516bb, i32* %v3_80516bf, align 4
  %v0_80516c0 = call i32 @function_8052df4()
  store i32 %v0_80516c0, i32* %eax.global-to-local, align 4
  %v0_80516c5 = load i32, i32* @esp, align 4
  %v1_80516c5 = add i32 %v0_80516c5, -4
  %v2_80516c5 = inttoptr i32 %v1_80516c5 to i32*
  store i32 16384, i32* %v2_80516c5, align 4
  %v1_80516ca = add i32 %v0_80516c5, -8
  %v2_80516ca = inttoptr i32 %v1_80516ca to i32*
  store i32 1, i32* %v2_80516ca, align 4
  %v1_80516cc = add i32 %v0_80516c5, 52
  %v2_80516cc = inttoptr i32 %v1_80516cc to i32*
  %v3_80516cc = load i32, i32* %v2_80516cc, align 4
  %v1_80516d0 = add i32 %v3_80516cc, 13
  store i32 %v1_80516d0, i32* %eax.global-to-local, align 4
  %v2_80516d3 = add i32 %v0_80516c5, -12
  %v3_80516d3 = inttoptr i32 %v2_80516d3 to i32*
  store i32 %v1_80516d0, i32* %v3_80516d3, align 4
  %v1_80516d4 = add i32 %v0_80516c5, 48
  %v2_80516d4 = inttoptr i32 %v1_80516d4 to i32*
  %v3_80516d4 = load i32, i32* %v2_80516d4, align 4
  store i32 %v3_80516d4, i32* %eax.global-to-local, align 4
  %v2_80516d8 = add i32 %v0_80516c5, -16
  %v3_80516d8 = inttoptr i32 %v2_80516d8 to i32*
  store i32 %v3_80516d4, i32* %v3_80516d8, align 4
  %v0_80516d9 = call i32 @function_8052df4()
  %v0_80516de = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80516e3 = add i32 %v0_80516de, 28
  %v2_80516e3 = inttoptr i32 %v1_80516e3 to i32*
  store i32 16384, i32* %v2_80516e3, align 4
  %v1_80516e8 = add i32 %v0_80516de, 68
  %v2_80516e8 = inttoptr i32 %v1_80516e8 to i32*
  %v3_80516e8 = load i32, i32* %v2_80516e8, align 4
  store i32 %v3_80516e8, i32* %ecx.global-to-local, align 4
  %v1_80516ec = add i32 %v3_80516e8, 13
  %v2_80516ec = inttoptr i32 %v1_80516ec to i8*
  %v3_80516ec = load i8, i8* %v2_80516ec, align 1
  %v4_80516ec = zext i8 %v3_80516ec to i32
  %v5_80516ec = load i32, i32* %eax.global-to-local, align 4
  %v6_80516ec = and i32 %v5_80516ec, -256
  %v7_80516ec = or i32 %v6_80516ec, %v4_80516ec
  store i32 %v7_80516ec, i32* %eax.global-to-local, align 4
  %v2_80516ef = add i32 %v0_80516de, 24
  %v3_80516ef = inttoptr i32 %v2_80516ef to i32*
  store i32 %v7_80516ec, i32* %v3_80516ef, align 4
  %v0_80516f0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80516f0 = add i32 %v0_80516f0, 4
  %v2_80516f0 = inttoptr i32 %v1_80516f0 to i32*
  %v3_80516f0 = load i32, i32* %v2_80516f0, align 4
  store i32 %v3_80516f0, i32* %eax.global-to-local, align 4
  %v2_80516f3 = add i32 %v0_80516de, 20
  %v3_80516f3 = inttoptr i32 %v2_80516f3 to i32*
  store i32 %v3_80516f0, i32* %v3_80516f3, align 4
  %v1_80516f4 = add i32 %v0_80516de, 64
  %v2_80516f4 = inttoptr i32 %v1_80516f4 to i32*
  %v3_80516f4 = load i32, i32* %v2_80516f4, align 4
  store i32 %v3_80516f4, i32* %eax.global-to-local, align 4
  %v2_80516f8 = add i32 %v0_80516de, 16
  %v3_80516f8 = inttoptr i32 %v2_80516f8 to i32*
  store i32 %v3_80516f4, i32* %v3_80516f8, align 4
  %v0_80516f9 = call i32 @function_8052df4()
  store i32 %v0_80516f9, i32* %eax.global-to-local, align 4
  %v0_80516fe = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051621

; uselistorder directives
  uselistorder i64 %v8_80515bf, { 1, 0 }
  uselistorder i32 %v1_80515b2, { 1, 0 }
  uselistorder i32* %v2_8050798, { 1, 0 }
  uselistorder i32 %v2_805147e, { 1, 0 }
  uselistorder i32 %v3_805147b, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8051417, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8051416, { 1, 0, 2 }
  uselistorder i16 %v1_8051422, { 1, 0 }
  uselistorder i64 %v8_8051403, { 1, 0 }
  uselistorder i32 %v3_8051396, { 1, 0 }
  uselistorder i32 %v0_8051396, { 1, 0 }
  uselistorder i32 %v0_805138e, { 1, 0 }
  uselistorder i32 %v1_805129b, { 1, 2, 0 }
  uselistorder i32 %v1_8051222, { 1, 2, 0 }
  uselistorder i32 %v1_80511a9, { 1, 2, 0 }
  uselistorder i32 %v1_8051130, { 1, 2, 0 }
  uselistorder i32 %v0_80510ea, { 1, 0 }
  uselistorder i32 %v0_8051099, { 1, 0 }
  uselistorder i32 %v0_8051517, { 1, 0 }
  uselistorder i32 %v7_8050fe8, { 1, 0 }
  uselistorder i32 %v0_8050fe8, { 1, 2, 0 }
  uselistorder i32 %v6_8050fdb, { 1, 0 }
  uselistorder i32 %v0_8050fdb, { 0, 2, 1 }
  uselistorder i32 %v6_8050fce, { 1, 0 }
  uselistorder i32 %v2_8050fba, { 1, 0, 2 }
  uselistorder i32 %v1_8050fb7, { 1, 0, 2 }
  uselistorder i32 %v0_8050fb4, { 1, 0 }
  uselistorder i32 %v0_8050fb0, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_8050b2b, { 1, 0 }
  uselistorder i32 %v0_8050b2b, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_8050b2b, { 0, 2, 1 }
  uselistorder i32 %v0_8050ba9128, { 1, 0 }
  uselistorder i32 %v1_8050f30, { 2, 1, 0 }
  uselistorder i32 %v9_8050eff, { 1, 0 }
  uselistorder i32 %v0_80511a9, { 0, 1, 3, 2 }
  uselistorder i32 %v9_8050e6c, { 1, 0 }
  uselistorder i32 %v1_8050e65, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8050e65, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_8050e3c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8050e16, { 1, 2, 0 }
  uselistorder i32 %v1_8050e16, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050e11, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_8050de7, { 1, 0, 2 }
  uselistorder i32 %v0_8050dbb, { 0, 2, 1 }
  uselistorder i32 %v0_8050d94, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %v1_805131e, { 0, 2, 1 }
  uselistorder i32 %v0_8050d4b, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_8050d22, { 2, 1, 0 }
  uselistorder i32 %v9_8050cf1, { 1, 0 }
  uselistorder i32 %v0_8051130, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8050cdd, { 2, 1, 0 }
  uselistorder i32 %v9_8050cac, { 1, 0 }
  uselistorder i32 %v0_8051222, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050c82, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050c72, { 2, 1, 0 }
  uselistorder i32 %v9_8050c4a, { 1, 0 }
  uselistorder i32 %v0_80510de, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050c23, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050c05, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8050c00, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050bf0, { 2, 1, 0 }
  uselistorder i32 %v9_8050bbf, { 1, 0 }
  uselistorder i32 %v0_805108d, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8050b9d, { 1, 0 }
  uselistorder i32 %v0_8050b9d, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8050b97, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050b97, { 0, 2, 1 }
  uselistorder i32 %v0_8050b92, { 1, 0 }
  uselistorder i32 %v0_8050b6d, { 1, 0, 2 }
  uselistorder i32 %v1_8050b54, { 1, 0, 2 }
  uselistorder i32 %v1_8050b38, { 1, 0, 2 }
  uselistorder i32 %v0_8050f50, { 1, 0, 2 }
  uselistorder i32 %v0_8050f3b, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8050ba9129, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8050b2b18, { 1, 0 }
  uselistorder i32 %v3_8050b12, { 1, 0 }
  uselistorder i32 %v0_8050b12, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_8050afd, { 0, 2, 1 }
  uselistorder i32 %v0_8050af9, { 1, 0 }
  uselistorder i32 %v0_8050ae0, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_8050ad6, { 1, 0 }
  uselistorder i32 %v1_8050a9d, { 2, 1, 0 }
  uselistorder i32 %v9_8050a6c, { 1, 0 }
  uselistorder i32 %v0_805129b, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8050a57, { 1, 0 }
  uselistorder i32 %v0_8050a57, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050a36, { 1, 0 }
  uselistorder i32 %v2_8050a33, { 1, 0 }
  uselistorder i32 %v0_8050a31, { 1, 0 }
  uselistorder i32 %v0_8050a1e, { 2, 1, 0 }
  uselistorder i32 %v1_8050a1b, { 1, 0 }
  uselistorder i32 %v2_8050a18, { 1, 0 }
  uselistorder i32 %v3_8050a0c, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v0_80509ff, { 1, 0 }
  uselistorder i32 %v2_80509b2, { 1, 0 }
  uselistorder i32 %v1_8050991, { 1, 0 }
  uselistorder i32 %v0_8050991, { 0, 2, 3, 1 }
  uselistorder i32 %v2_805097c, { 1, 0 }
  uselistorder i32 %v3_8050979, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8051470, { 1, 0 }
  uselistorder i32 %v1_805146d, { 2, 1, 0 }
  uselistorder i32 %v3_8050941, { 1, 0, 2 }
  uselistorder i32 %v2_805093f, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8050934, { 1, 0 }
  uselistorder i32 %v1_80508df, { 1, 0 }
  uselistorder i32 %v1_80508d4, { 1, 0 }
  uselistorder i32 %v0_80508d4, { 1, 0 }
  uselistorder i32 %v0_80508dd, { 0, 3, 2, 1 }
  uselistorder i32 %v1_80508aa, { 1, 0 }
  uselistorder i32 %v0_80508aa, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_805089c, { 1, 0, 2 }
  uselistorder i32 %v4_805085f, { 1, 2, 0 }
  uselistorder i32 %v3_805082e, { 1, 0, 2 }
  uselistorder i32 %v0_80507b2, { 0, 2, 1 }
  uselistorder i32 %v0_80507a9, { 0, 3, 2, 1 }
  uselistorder i32 %v0_805056e65, { 1, 0 }
  uselistorder i32 %v0_805078b, { 2, 1, 0 }
  uselistorder i8 %v1_805075d, { 1, 0 }
  uselistorder i8 %v2_8050737, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_805072e, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_805072c, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_8050726, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8050721, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80506d5, { 1, 0 }
  uselistorder i32 %v0_8050624, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_805061f, { 1, 0 }
  uselistorder i32 %v1_80505fc, { 0, 2, 1 }
  uselistorder i32 %v0_805055c, { 2, 0, 1 }
  uselistorder i32 %v0_8050520, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 62, 63, 64, 65, 66, 55, 22, 24, 17, 25, 7, 0, 5, 9, 10, 11, 13, 14, 15, 26, 27, 28, 18, 1, 2, 3, 4, 56, 57, 58, 59, 60, 61, 6, 8, 12, 16, 19, 20, 21, 29, 30, 54, 52, 53, 50, 51, 31, 32, 33, 34, 23, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %ecx.global-to-local, { 37, 38, 39, 40, 11, 12, 13, 14, 15, 16, 8, 17, 18, 2, 0, 36, 3, 9, 1, 19, 35, 4, 5, 6, 7, 10, 20, 33, 34, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %eax.global-to-local, { 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 221, 222, 224, 225, 226, 17, 162, 163, 164, 165, 166, 168, 62, 169, 73, 74, 170, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 56, 57, 58, 171, 172, 173, 174, 175, 176, 90, 91, 92, 93, 94, 95, 24, 25, 26, 27, 28, 29, 30, 0, 1, 2, 3, 4, 5, 193, 194, 195, 18, 19, 20, 21, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 101, 102, 103, 104, 116, 68, 105, 106, 107, 108, 59, 69, 60, 61, 63, 64, 65, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 96, 97, 98, 99, 100, 178, 181, 179, 180, 182, 183, 184, 185, 186, 177, 187, 188, 189, 190, 191, 192, 22, 23, 31, 32, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 66, 67, 70, 71, 72, 109, 110, 111, 112, 113, 114, 115, 117, 159, 160, 161, 145, 154, 155, 156, 157, 158, 118, 119, 120, 121, 122, 123, 124, 80, 125, 128, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 167, 151, 153, 152, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150 }
  uselistorder i32 ()* @function_8052d20, { 1, 0 }
  uselistorder i32 1864, { 1, 2, 0, 3 }
  uselistorder i32 540, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1888, { 4, 0, 1, 2, 3 }
  uselistorder i32 1872, { 0, 2, 1 }
  uselistorder i32 (i8)* @function_8051740, { 11, 12, 3, 2, 0, 10, 1, 9, 8, 4, 5, 6, 7, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32*)* @function_8051710, { 22, 9, 4, 3, 0, 2, 1, 10, 11, 5, 6, 7, 8, 12, 13, 26, 14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 34, 35, 23, 24, 25, 27, 28, 29, 30, 31 }
  uselistorder i32 1880, { 0, 1, 2, 3, 4, 5, 10, 8, 6, 9, 7 }
  uselistorder i32 (i8)* @function_80517c0, { 9, 10, 4, 3, 0, 2, 1, 11, 12, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 11, 12, 13, 14, 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 15, 16, 10, 17 }
  uselistorder i32 ()* @function_80521c0, { 21, 20, 24, 23, 22, 19, 18, 17, 16, 15, 14, 3, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4 }
  uselistorder i32 ()* @function_8052df4, { 7, 6, 5, 4, 3, 2, 1, 14, 13, 11, 10, 20, 19, 25, 24, 9, 8, 18, 17, 16, 15, 23, 22, 12, 21, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i32 ()* @function_8052d7e, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i8 58, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i32 ()* @function_8052972, { 4, 3, 0, 2, 1 }
  uselistorder i32 ()* @function_80528b8, { 1, 2, 0 }
  uselistorder i32 1572, { 1, 2, 0 }
  uselistorder i32 1700, { 2, 0, 1 }
  uselistorder i32 ()* @function_804f4d0, { 3, 0, 2, 1 }
  uselistorder i32 544, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 2, 3, 1 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 (i32)* @function_804ed40, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 1844, { 1, 0, 2 }
  uselistorder i16* @global_var_8056136.28, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051637, { 1, 0 }
  uselistorder label %dec_label_pc_805142e, { 1, 0 }
  uselistorder label %dec_label_pc_8051018, { 1, 0 }
  uselistorder label %dec_label_pc_8050f43, { 7, 3, 0, 2, 4, 5, 1, 8, 6 }
  uselistorder label %dec_label_pc_8050b2b.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8050eff, { 1, 0 }
  uselistorder label %dec_label_pc_8050e86, { 1, 0 }
  uselistorder label %dec_label_pc_8050e56, { 1, 0 }
  uselistorder label %dec_label_pc_8050e1c, { 1, 0 }
  uselistorder label %dec_label_pc_8050e11, { 8, 9, 7, 3, 1, 10, 4, 5, 0, 2, 11, 6 }
  uselistorder label %dec_label_pc_8050df4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050cf1, { 1, 0 }
  uselistorder label %dec_label_pc_8050cac, { 1, 0 }
  uselistorder label %dec_label_pc_8050c75, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050c4a, { 1, 0 }
  uselistorder label %dec_label_pc_8050bf3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050bbf, { 1, 0 }
  uselistorder label %dec_label_pc_8050ba1, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8050b80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050b6d, { 1, 0 }
  uselistorder label %dec_label_pc_8050b5b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050b2f, { 1, 0 }
  uselistorder label %dec_label_pc_8050b2f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050b02, { 1, 0 }
  uselistorder label %dec_label_pc_8050afd, { 1, 0 }
  uselistorder label %dec_label_pc_8050abb, { 1, 0 }
  uselistorder label %dec_label_pc_8050aa7, { 1, 0 }
  uselistorder label %dec_label_pc_8050aa0.loopexit12.loopexit, { 12, 10, 4, 8, 0, 5, 6, 7, 14, 9, 11, 1, 2, 3, 13 }
  uselistorder label %dec_label_pc_8050aa0.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_8050a6c, { 1, 0 }
  uselistorder label %dec_label_pc_8050a48, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_8050a31, { 1, 0 }
  uselistorder label %dec_label_pc_80509d4, { 1, 0 }
  uselistorder label %dec_label_pc_8050982, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_805094d, { 1, 0 }
  uselistorder label %dec_label_pc_8050900, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80508d4, { 1, 0 }
  uselistorder label %dec_label_pc_80507e6, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_80507db, { 1, 0 }
  uselistorder label %dec_label_pc_80507a0, { 1, 0 }
  uselistorder label %dec_label_pc_805076b, { 1, 0 }
  uselistorder label %dec_label_pc_8050721.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_805056e, { 1, 2, 4, 0, 3 }
}

define i32 @function_8051710(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8051710:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8051718 = icmp eq i32* %arg2, null
  %v1_805171a = mul i32 %arg1, 8
  store i32 %v1_805171a, i32* @edx, align 4
  br i1 %v1_8051718, label %dec_label_pc_8051733, label %dec_label_pc_8051729

dec_label_pc_8051729:                             ; preds = %dec_label_pc_8051710
  %v1_8051729 = add i32 %v1_805171a, add (i32 ptrtoint (i32* @global_var_80561c0.43 to i32), i32 4)
  %v2_8051729 = inttoptr i32 %v1_8051729 to i32*
  %v3_8051729 = load i32, i32* %v2_8051729, align 4
  %v1_805172c = urem i32 %v3_8051729, 65536
  store i32 %v1_805172c, i32* %arg2, align 4
  %v0_8051733.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051733

dec_label_pc_8051733:                             ; preds = %dec_label_pc_8051710, %dec_label_pc_8051729
  %v0_8051733 = phi i32 [ %v1_805171a, %dec_label_pc_8051710 ], [ %v0_8051733.pre, %dec_label_pc_8051729 ]
  %v1_8051733 = add i32 %v0_8051733, ptrtoint (i32* @global_var_80561c0.43 to i32)
  %v2_8051733 = inttoptr i32 %v1_8051733 to i32*
  %v3_8051733 = load i32, i32* %v2_8051733, align 4
  ret i32 %v3_8051733

; uselistorder directives
  uselistorder label %dec_label_pc_8051733, { 1, 0 }
}

define i32 @function_8051740(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051740:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051749 = zext i8 %arg1 to i32
  %v1_805174d = mul nuw nsw i32 %v4_8051749, 8
  %v2_805174d = add i32 %v1_805174d, ptrtoint (i32* @global_var_80561c0.43 to i32)
  store i32 %v2_805174d, i32* @ecx, align 4
  %v0_8051754 = load i16, i16* @global_var_8056038.44, align 2
  %v1_8051754 = sext i16 %v0_8051754 to i32
  %v1_8051759 = add i32 %v1_805174d, add (i32 ptrtoint (i32* @global_var_80561c0.43 to i32), i32 4)
  %v2_8051759 = inttoptr i32 %v1_8051759 to i16*
  %v3_8051759 = load i16, i16* %v2_8051759, align 4
  %v4_8051759 = icmp eq i16 %v3_8051759, 0
  br i1 %v4_8051759, label %dec_label_pc_80517aa, label %dec_label_pc_8051760

dec_label_pc_8051760:                             ; preds = %dec_label_pc_8051740
  store i32 %v1_8051754, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051768 = udiv i32 %v1_8051754, 16777216
  %v2_805176b = udiv i32 %v1_8051754, 256
  store i32 %v2_805176b, i32* %edi.global-to-local, align 4
  %v5_805176e = trunc i32 %v2_8051768 to i8
  store i8 %v5_805176e, i8* %stack_var_-44, align 1
  %v2_8051771 = udiv i32 %v1_8051754, 65536
  store i32 %v2_8051771, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051774

dec_label_pc_8051774:                             ; preds = %dec_label_pc_8051774.dec_label_pc_8051774_crit_edge, %dec_label_pc_8051760
  %v0_805177a = phi i32 [ %v0_805177a.pre, %dec_label_pc_8051774.dec_label_pc_8051774_crit_edge ], [ %v1_8051754, %dec_label_pc_8051760 ]
  %v0_8051776 = phi i32 [ %v1_80517a6, %dec_label_pc_8051774.dec_label_pc_8051774_crit_edge ], [ 0, %dec_label_pc_8051760 ]
  %v0_8051774 = phi i32 [ %v0_805179e, %dec_label_pc_8051774.dec_label_pc_8051774_crit_edge ], [ %v2_805174d, %dec_label_pc_8051760 ]
  %v1_8051774 = inttoptr i32 %v0_8051774 to i32*
  %v2_8051774 = load i32, i32* %v1_8051774, align 4
  %v2_8051778 = add i32 %v2_8051774, %v0_8051776
  %v1_805177c = inttoptr i32 %v2_8051778 to i8*
  %v2_805177c = load i8, i8* %v1_805177c, align 1
  %v4_805177c = trunc i32 %v0_805177a to i8
  %v5_805177c = xor i8 %v2_805177c, %v4_805177c
  store i8 %v5_805177c, i8* %v1_805177c, align 1
  %v0_805177e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051780 = load i32, i32* @ecx, align 4
  %v1_8051780 = inttoptr i32 %v0_8051780 to i32*
  %v2_8051780 = load i32, i32* %v1_8051780, align 4
  %v2_8051782 = add i32 %v2_8051780, %v0_805177e
  %v0_8051784 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051786 = inttoptr i32 %v2_8051782 to i8*
  %v2_8051786 = load i8, i8* %v1_8051786, align 1
  %v4_8051786 = trunc i32 %v0_8051784 to i8
  %v5_8051786 = xor i8 %v2_8051786, %v4_8051786
  store i8 %v5_8051786, i8* %v1_8051786, align 1
  %v0_8051788 = load i32, i32* %edx.global-to-local, align 4
  %v0_805178a = load i32, i32* @ecx, align 4
  %v1_805178a = inttoptr i32 %v0_805178a to i32*
  %v2_805178a = load i32, i32* %v1_805178a, align 4
  %v2_805178c = add i32 %v2_805178a, %v0_8051788
  %v0_805178e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051790 = inttoptr i32 %v2_805178c to i8*
  %v2_8051790 = load i8, i8* %v1_8051790, align 1
  %v4_8051790 = trunc i32 %v0_805178e to i8
  %v5_8051790 = xor i8 %v2_8051790, %v4_8051790
  store i8 %v5_8051790, i8* %v1_8051790, align 1
  %v0_8051792 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051794 = load i32, i32* @ecx, align 4
  %v1_8051794 = inttoptr i32 %v0_8051794 to i32*
  %v2_8051794 = load i32, i32* %v1_8051794, align 4
  %v1_8051796 = add i32 %v0_8051792, 1
  store i32 %v1_8051796, i32* %edx.global-to-local, align 4
  %v2_8051797 = add i32 %v2_8051794, %v0_8051792
  %v2_8051799 = load i8, i8* %stack_var_-44, align 1
  %v1_805179c = inttoptr i32 %v2_8051797 to i8*
  %v2_805179c = load i8, i8* %v1_805179c, align 1
  %v5_805179c = xor i8 %v2_805179c, %v2_8051799
  store i8 %v5_805179c, i8* %v1_805179c, align 1
  %v0_805179e = load i32, i32* @ecx, align 4
  %v1_805179e = add i32 %v0_805179e, 4
  %v2_805179e = inttoptr i32 %v1_805179e to i32*
  %v3_805179e = load i32, i32* %v2_805179e, align 4
  %v1_80517a1 = urem i32 %v3_805179e, 65536
  %v1_80517a6 = load i32, i32* %edx.global-to-local, align 4
  %v8_80517a8 = icmp sgt i32 %v1_80517a1, %v1_80517a6
  br i1 %v8_80517a8, label %dec_label_pc_8051774.dec_label_pc_8051774_crit_edge, label %dec_label_pc_80517aa.loopexit

dec_label_pc_8051774.dec_label_pc_8051774_crit_edge: ; preds = %dec_label_pc_8051774
  %v0_805177a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051774

dec_label_pc_80517aa.loopexit:                    ; preds = %dec_label_pc_8051774
  br label %dec_label_pc_80517aa

dec_label_pc_80517aa:                             ; preds = %dec_label_pc_80517aa.loopexit, %dec_label_pc_8051740
  %v0_80517b1 = phi i32 [ %v1_80517a1, %dec_label_pc_80517aa.loopexit ], [ %v1_8051754, %dec_label_pc_8051740 ]
  ret i32 %v0_80517b1

; uselistorder directives
  uselistorder i32 %v1_80517a6, { 1, 0 }
  uselistorder i32 %v1_80517a1, { 1, 0 }
  uselistorder i32 %v0_805179e, { 1, 0 }
  uselistorder i32 %v1_8051754, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_80517c0(i8 %arg1) local_unnamed_addr {
dec_label_pc_80517c0:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_80517c9 = zext i8 %arg1 to i32
  %v1_80517cd = mul nuw nsw i32 %v4_80517c9, 8
  %v2_80517cd = add i32 %v1_80517cd, ptrtoint (i32* @global_var_80561c0.43 to i32)
  store i32 %v2_80517cd, i32* %ecx.global-to-local, align 4
  %v0_80517d4 = load i16, i16* @global_var_8056038.44, align 2
  %v1_80517d4 = sext i16 %v0_80517d4 to i32
  %v1_80517d9 = add i32 %v1_80517cd, add (i32 ptrtoint (i32* @global_var_80561c0.43 to i32), i32 4)
  %v2_80517d9 = inttoptr i32 %v1_80517d9 to i16*
  %v3_80517d9 = load i16, i16* %v2_80517d9, align 4
  %v4_80517d9 = icmp eq i16 %v3_80517d9, 0
  br i1 %v4_80517d9, label %dec_label_pc_805182a, label %dec_label_pc_80517e0

dec_label_pc_80517e0:                             ; preds = %dec_label_pc_80517c0
  store i32 %v1_80517d4, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_80517e8 = udiv i32 %v1_80517d4, 16777216
  %v2_80517eb = udiv i32 %v1_80517d4, 256
  store i32 %v2_80517eb, i32* %edi.global-to-local, align 4
  %v5_80517ee = trunc i32 %v2_80517e8 to i8
  store i8 %v5_80517ee, i8* %stack_var_-44, align 1
  %v2_80517f1 = udiv i32 %v1_80517d4, 65536
  store i32 %v2_80517f1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80517f4

dec_label_pc_80517f4:                             ; preds = %dec_label_pc_80517f4.dec_label_pc_80517f4_crit_edge, %dec_label_pc_80517e0
  %v0_80517fa = phi i32 [ %v0_80517fa.pre, %dec_label_pc_80517f4.dec_label_pc_80517f4_crit_edge ], [ %v1_80517d4, %dec_label_pc_80517e0 ]
  %v0_80517f6 = phi i32 [ %v1_8051826, %dec_label_pc_80517f4.dec_label_pc_80517f4_crit_edge ], [ 0, %dec_label_pc_80517e0 ]
  %v0_80517f4 = phi i32 [ %v0_805181e, %dec_label_pc_80517f4.dec_label_pc_80517f4_crit_edge ], [ %v2_80517cd, %dec_label_pc_80517e0 ]
  %v1_80517f4 = inttoptr i32 %v0_80517f4 to i32*
  %v2_80517f4 = load i32, i32* %v1_80517f4, align 4
  %v2_80517f8 = add i32 %v2_80517f4, %v0_80517f6
  %v1_80517fc = inttoptr i32 %v2_80517f8 to i8*
  %v2_80517fc = load i8, i8* %v1_80517fc, align 1
  %v4_80517fc = trunc i32 %v0_80517fa to i8
  %v5_80517fc = xor i8 %v2_80517fc, %v4_80517fc
  store i8 %v5_80517fc, i8* %v1_80517fc, align 1
  %v0_80517fe = load i32, i32* %edx.global-to-local, align 4
  %v0_8051800 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051800 = inttoptr i32 %v0_8051800 to i32*
  %v2_8051800 = load i32, i32* %v1_8051800, align 4
  %v2_8051802 = add i32 %v2_8051800, %v0_80517fe
  %v0_8051804 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051806 = inttoptr i32 %v2_8051802 to i8*
  %v2_8051806 = load i8, i8* %v1_8051806, align 1
  %v4_8051806 = trunc i32 %v0_8051804 to i8
  %v5_8051806 = xor i8 %v2_8051806, %v4_8051806
  store i8 %v5_8051806, i8* %v1_8051806, align 1
  %v0_8051808 = load i32, i32* %edx.global-to-local, align 4
  %v0_805180a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805180a = inttoptr i32 %v0_805180a to i32*
  %v2_805180a = load i32, i32* %v1_805180a, align 4
  %v2_805180c = add i32 %v2_805180a, %v0_8051808
  %v0_805180e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051810 = inttoptr i32 %v2_805180c to i8*
  %v2_8051810 = load i8, i8* %v1_8051810, align 1
  %v4_8051810 = trunc i32 %v0_805180e to i8
  %v5_8051810 = xor i8 %v2_8051810, %v4_8051810
  store i8 %v5_8051810, i8* %v1_8051810, align 1
  %v0_8051812 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051814 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051814 = inttoptr i32 %v0_8051814 to i32*
  %v2_8051814 = load i32, i32* %v1_8051814, align 4
  %v1_8051816 = add i32 %v0_8051812, 1
  store i32 %v1_8051816, i32* %edx.global-to-local, align 4
  %v2_8051817 = add i32 %v2_8051814, %v0_8051812
  %v2_8051819 = load i8, i8* %stack_var_-44, align 1
  %v1_805181c = inttoptr i32 %v2_8051817 to i8*
  %v2_805181c = load i8, i8* %v1_805181c, align 1
  %v5_805181c = xor i8 %v2_805181c, %v2_8051819
  store i8 %v5_805181c, i8* %v1_805181c, align 1
  %v0_805181e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805181e = add i32 %v0_805181e, 4
  %v2_805181e = inttoptr i32 %v1_805181e to i32*
  %v3_805181e = load i32, i32* %v2_805181e, align 4
  %v1_8051821 = urem i32 %v3_805181e, 65536
  %v1_8051826 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051828 = icmp sgt i32 %v1_8051821, %v1_8051826
  br i1 %v8_8051828, label %dec_label_pc_80517f4.dec_label_pc_80517f4_crit_edge, label %dec_label_pc_805182a.loopexit

dec_label_pc_80517f4.dec_label_pc_80517f4_crit_edge: ; preds = %dec_label_pc_80517f4
  %v0_80517fa.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80517f4

dec_label_pc_805182a.loopexit:                    ; preds = %dec_label_pc_80517f4
  br label %dec_label_pc_805182a

dec_label_pc_805182a:                             ; preds = %dec_label_pc_805182a.loopexit, %dec_label_pc_80517c0
  %v0_8051831 = phi i32 [ %v1_8051821, %dec_label_pc_805182a.loopexit ], [ %v1_80517d4, %dec_label_pc_80517c0 ]
  ret i32 %v0_8051831

; uselistorder directives
  uselistorder i32 %v1_8051826, { 1, 0 }
  uselistorder i32 %v1_8051821, { 1, 0 }
  uselistorder i32 %v0_805181e, { 1, 0 }
  uselistorder i32 %v1_80517d4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80561c0.43 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_8056038.44, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80561c0.43 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8052110(i8* %arg1) local_unnamed_addr {
dec_label_pc_8052110:
  %v4_8052110 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052110, i32* @edx, align 4
  %v2_8052116 = load i8, i8* %arg1, align 1
  %v3_8052116 = icmp eq i8 %v2_8052116, 0
  br i1 %v3_8052116, label %dec_label_pc_8052127, label %dec_label_pc_8052120

dec_label_pc_8052120:                             ; preds = %dec_label_pc_8052110, %dec_label_pc_8052120
  %v0_8052120 = phi i32 [ %v1_8052120, %dec_label_pc_8052120 ], [ 0, %dec_label_pc_8052110 ]
  %v1_8052120 = add i32 %v0_8052120, 1
  %v2_8052121 = add i32 %v1_8052120, %v4_8052110
  %v3_8052121 = inttoptr i32 %v2_8052121 to i8*
  %v4_8052121 = load i8, i8* %v3_8052121, align 1
  %v5_8052121 = icmp eq i8 %v4_8052121, 0
  %v1_8052125 = icmp eq i1 %v5_8052121, false
  br i1 %v1_8052125, label %dec_label_pc_8052120, label %dec_label_pc_8052127

dec_label_pc_8052127:                             ; preds = %dec_label_pc_8052120, %dec_label_pc_8052110
  %v0_8052127 = phi i32 [ 0, %dec_label_pc_8052110 ], [ %v1_8052120, %dec_label_pc_8052120 ]
  ret i32 %v0_8052127

; uselistorder directives
  uselistorder label %dec_label_pc_8052120, { 1, 0 }
}

define i32 @function_8052130(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052130:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052131 = load i32, i32* @ebx, align 4
  store i32 %v0_8052131, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8052136 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052136, i32* %edx.global-to-local, align 4
  %v2_805213a = load i8, i8* %tmp15, align 1
  %v3_805213a = icmp eq i8 %v2_805213a, 0
  br i1 %v3_805213a, label %dec_label_pc_8052164, label %dec_label_pc_805213f

dec_label_pc_805213f:                             ; preds = %dec_label_pc_8052130
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052141

dec_label_pc_8052141:                             ; preds = %dec_label_pc_8052141, %dec_label_pc_805213f
  %v0_8052141 = phi i32 [ %v1_8052141, %dec_label_pc_8052141 ], [ 0, %dec_label_pc_805213f ]
  %v1_8052141 = add i32 %v0_8052141, 1
  store i32 %v1_8052141, i32* %esi.global-to-local, align 4
  %v2_8052142 = add i32 %v1_8052141, %arg2
  %v3_8052142 = inttoptr i32 %v2_8052142 to i8*
  %v4_8052142 = load i8, i8* %v3_8052142, align 1
  %v5_8052142 = icmp eq i8 %v4_8052142, 0
  %v1_8052146 = icmp eq i1 %v5_8052142, false
  br i1 %v1_8052146, label %dec_label_pc_8052141, label %dec_label_pc_8052148

dec_label_pc_8052148:                             ; preds = %dec_label_pc_8052141
  %v10_8052148 = icmp eq i32 %v0_8052141, -2
  br i1 %v10_8052148, label %dec_label_pc_805215f, label %dec_label_pc_805214d

dec_label_pc_805214d:                             ; preds = %dec_label_pc_8052148
  store i32 %v4_8052136, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8052141, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052153

dec_label_pc_8052153:                             ; preds = %dec_label_pc_8052164, %dec_label_pc_805214d, %dec_label_pc_8052153.dec_label_pc_8052153_crit_edge
  %v2_8052156 = phi i32 [ %v1_8052159, %dec_label_pc_8052153.dec_label_pc_8052153_crit_edge ], [ %v4_8052136, %dec_label_pc_805214d ], [ %v4_8052136, %dec_label_pc_8052164 ]
  %v0_8052155 = phi i32 [ %v0_805215a, %dec_label_pc_8052153.dec_label_pc_8052153_crit_edge ], [ %v1_8052141, %dec_label_pc_805214d ], [ 0, %dec_label_pc_8052164 ]
  %v4_8052153 = phi i32 [ %v4_8052153.pre, %dec_label_pc_8052153.dec_label_pc_8052153_crit_edge ], [ %arg2, %dec_label_pc_805214d ], [ %arg2, %dec_label_pc_8052164 ]
  %v0_8052153 = phi i32 [ %v1_8052158, %dec_label_pc_8052153.dec_label_pc_8052153_crit_edge ], [ %arg2, %dec_label_pc_805214d ], [ %arg2, %dec_label_pc_8052164 ]
  %v1_8052153 = inttoptr i32 %v0_8052153 to i8*
  %v2_8052153 = load i8, i8* %v1_8052153, align 1
  %v3_8052153 = zext i8 %v2_8052153 to i32
  %v5_8052153 = and i32 %v4_8052153, -256
  %v6_8052153 = or i32 %v3_8052153, %v5_8052153
  store i32 %v6_8052153, i32* %eax.global-to-local, align 4
  %v1_8052155 = add i32 %v0_8052155, -1
  store i32 %v1_8052155, i32* %edx.global-to-local, align 4
  %v3_8052156 = inttoptr i32 %v2_8052156 to i8*
  store i8 %v2_8052153, i8* %v3_8052156, align 1
  %v0_8052158 = load i32, i32* @ecx, align 4
  %v1_8052158 = add i32 %v0_8052158, 1
  store i32 %v1_8052158, i32* @ecx, align 4
  %v0_8052159 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052159 = add i32 %v0_8052159, 1
  store i32 %v1_8052159, i32* %ebx.global-to-local, align 4
  %v0_805215a = load i32, i32* %edx.global-to-local, align 4
  %v10_805215a = icmp eq i32 %v0_805215a, -1
  %v1_805215d = icmp eq i1 %v10_805215a, false
  br i1 %v1_805215d, label %dec_label_pc_8052153.dec_label_pc_8052153_crit_edge, label %dec_label_pc_805215f.loopexit

dec_label_pc_8052153.dec_label_pc_8052153_crit_edge: ; preds = %dec_label_pc_8052153
  %v4_8052153.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052153

dec_label_pc_805215f.loopexit:                    ; preds = %dec_label_pc_8052153
  %v0_805215f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8052161.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805215f

dec_label_pc_805215f:                             ; preds = %dec_label_pc_805215f.loopexit, %dec_label_pc_8052148
  %v2_8052161 = phi i32 [ %v2_8052161.pre, %dec_label_pc_805215f.loopexit ], [ %v0_8052131, %dec_label_pc_8052148 ]
  %v0_805215f = phi i32 [ %v0_805215f.pre, %dec_label_pc_805215f.loopexit ], [ %v1_8052141, %dec_label_pc_8052148 ]
  store i32 %v0_805215f, i32* %eax.global-to-local, align 4
  store i32 %v2_8052161, i32* @ebx, align 4
  ret i32 %v0_805215f

dec_label_pc_8052164:                             ; preds = %dec_label_pc_8052130
  store i32 %v4_8052136, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052153

; uselistorder directives
  uselistorder i32 %v0_805215f, { 1, 0 }
  uselistorder i32 %v1_8052159, { 1, 0 }
  uselistorder i32 %v1_8052158, { 1, 0 }
  uselistorder i32 %v1_8052141, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8052136, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8052153, { 0, 2, 1 }
}

define i32 @function_80521a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80521a0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80521a8 = icmp eq i32 %arg2, 0
  br i1 %v1_80521a8, label %dec_label_pc_80521a0.dec_label_pc_80521b9_crit_edge, label %dec_label_pc_80521ac

dec_label_pc_80521a0.dec_label_pc_80521b9_crit_edge: ; preds = %dec_label_pc_80521a0
  %v0_80521b9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80521b9

dec_label_pc_80521ac:                             ; preds = %dec_label_pc_80521a0
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80521b05 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_80521b05, align 1
  %v0_80521b46 = load i32, i32* %eax.global-to-local, align 4
  %v1_80521b47 = add i32 %v0_80521b46, 1
  store i32 %v1_80521b47, i32* %eax.global-to-local, align 4
  %v12_80521b58 = icmp eq i32 %v1_80521b47, %arg2
  %v1_80521b79 = icmp eq i1 %v12_80521b58, false
  br i1 %v1_80521b79, label %dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge, label %dec_label_pc_80521b9

dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge: ; preds = %dec_label_pc_80521ac, %dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge
  %v1_80521b410 = phi i32 [ %v1_80521b4, %dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge ], [ %v1_80521b47, %dec_label_pc_80521ac ]
  %v1_80521b0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_80521b0 = add i32 %v1_80521b410, %v1_80521b0.pre
  %v3_80521b0 = inttoptr i32 %v2_80521b0 to i8*
  store i8 0, i8* %v3_80521b0, align 1
  %v0_80521b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80521b4 = add i32 %v0_80521b4, 1
  store i32 %v1_80521b4, i32* %eax.global-to-local, align 4
  %v12_80521b5 = icmp eq i32 %v1_80521b4, %arg2
  %v1_80521b7 = icmp eq i1 %v12_80521b5, false
  br i1 %v1_80521b7, label %dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge, label %dec_label_pc_80521b9

dec_label_pc_80521b9:                             ; preds = %dec_label_pc_80521ac, %dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge, %dec_label_pc_80521a0.dec_label_pc_80521b9_crit_edge
  %v0_80521b9 = phi i32 [ %v0_80521b9.pre, %dec_label_pc_80521a0.dec_label_pc_80521b9_crit_edge ], [ %v1_80521b47, %dec_label_pc_80521ac ], [ %v1_80521b4, %dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge ]
  ret i32 %v0_80521b9

; uselistorder directives
  uselistorder i32 %v1_80521b4, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521b9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521b0.dec_label_pc_80521b0_crit_edge, { 1, 0 }
}

define i32 @function_80521c0() local_unnamed_addr {
dec_label_pc_80521c0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_80521d5 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_80521d5, label %dec_label_pc_80521d7, label %dec_label_pc_80521e0

dec_label_pc_80521d7:                             ; preds = %dec_label_pc_80521f2, %dec_label_pc_80521c0, %dec_label_pc_80521e0
  br label %dec_label_pc_80521da

dec_label_pc_80521da:                             ; preds = %dec_label_pc_8052205, %dec_label_pc_80521d7
  %storemerge = phi i32 [ -1, %dec_label_pc_80521d7 ], [ %v0_80521f3, %dec_label_pc_8052205 ]
  ret i32 %storemerge

dec_label_pc_80521e0:                             ; preds = %dec_label_pc_80521c0
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_80521d7, label %dec_label_pc_80521e4

dec_label_pc_80521e4:                             ; preds = %dec_label_pc_80521e0
  %v2_80521fc = add i32 %tmp, -1
  br label %dec_label_pc_80521f8

dec_label_pc_80521f0:                             ; preds = %dec_label_pc_80521f8
  br label %dec_label_pc_80521f2

dec_label_pc_80521f2:                             ; preds = %dec_label_pc_8052205, %dec_label_pc_80521f0
  %v2_80522003 = phi i32 [ %v1_8052205, %dec_label_pc_8052205 ], [ 0, %dec_label_pc_80521f0 ]
  %v1_80521f2 = add i32 %v0_80521f2, 1
  %v1_80521f3 = add i32 %v0_80521f3, 1
  %v12_80521f4 = icmp eq i32 %tmp10, %v1_80521f2
  br i1 %v12_80521f4, label %dec_label_pc_80521d7, label %dec_label_pc_80521f8

dec_label_pc_80521f8:                             ; preds = %dec_label_pc_80521f2, %dec_label_pc_80521e4
  %v0_80521f2 = phi i32 [ %v1_80521f2, %dec_label_pc_80521f2 ], [ 0, %dec_label_pc_80521e4 ]
  %v0_8052205 = phi i32 [ %v2_80522003, %dec_label_pc_80521f2 ], [ 0, %dec_label_pc_80521e4 ]
  %v0_80521f3 = phi i32 [ %v1_80521f3, %dec_label_pc_80521f2 ], [ 1, %dec_label_pc_80521e4 ]
  %v3_80521fc = add i32 %v2_80521fc, %v0_80521f3
  %v4_80521fc = inttoptr i32 %v3_80521fc to i8*
  %v5_80521fc = load i8, i8* %v4_80521fc, align 1
  %v4_8052200 = add i32 %v0_8052205, %tmp8
  %v5_8052200 = inttoptr i32 %v4_8052200 to i8*
  %v6_8052200 = load i8, i8* %v5_8052200, align 1
  %v17_8052200 = icmp eq i8 %v5_80521fc, %v6_8052200
  %v1_8052203 = icmp eq i1 %v17_8052200, false
  br i1 %v1_8052203, label %dec_label_pc_80521f0, label %dec_label_pc_8052205

dec_label_pc_8052205:                             ; preds = %dec_label_pc_80521f8
  %v1_8052205 = add i32 %v0_8052205, 1
  %v12_8052206 = icmp eq i32 %tmp9, %v1_8052205
  %v1_8052208 = icmp eq i1 %v12_8052206, false
  br i1 %v1_8052208, label %dec_label_pc_80521f2, label %dec_label_pc_80521da

; uselistorder directives
  uselistorder i32 %v0_80521f3, { 2, 0, 1 }
  uselistorder i32 %v0_8052205, { 1, 0 }
  uselistorder i32 %v1_80521f2, { 1, 0 }
  uselistorder label %dec_label_pc_80521d7, { 0, 2, 1 }
}

define i32 @function_8052210(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052210:
  %v4_8052217 = ptrtoint i8* %arg1 to i32
  %v4_8052220.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052220

dec_label_pc_8052220:                             ; preds = %dec_label_pc_8052234, %dec_label_pc_8052230, %dec_label_pc_8052220, %dec_label_pc_8052210
  %v4_8052220 = phi i32 [ %v4_8052220.pre, %dec_label_pc_8052210 ], [ %v6_8052220, %dec_label_pc_8052220 ], [ %v6_8052220, %dec_label_pc_8052230 ], [ %v6_8052220, %dec_label_pc_8052234 ]
  %v0_8052222 = phi i32 [ %v4_8052217, %dec_label_pc_8052210 ], [ %v1_8052222, %dec_label_pc_8052220 ], [ %v1_8052222, %dec_label_pc_8052230 ], [ %v1_8052222, %dec_label_pc_8052234 ]
  %v1_8052220 = inttoptr i32 %v0_8052222 to i8*
  %v2_8052220 = load i8, i8* %v1_8052220, align 1
  %v3_8052220 = zext i8 %v2_8052220 to i32
  %v5_8052220 = and i32 %v4_8052220, -256
  %v6_8052220 = or i32 %v3_8052220, %v5_8052220
  %v1_8052222 = add i32 %v0_8052222, 1
  %v7_805222c = icmp eq i8 %v2_8052220, 32
  br i1 %v7_805222c, label %dec_label_pc_8052220, label %dec_label_pc_8052230

dec_label_pc_8052230:                             ; preds = %dec_label_pc_8052220
  %v10_8052230 = icmp eq i8 %v2_8052220, 9
  br i1 %v10_8052230, label %dec_label_pc_8052220, label %dec_label_pc_8052234

dec_label_pc_8052234:                             ; preds = %dec_label_pc_8052230
  %v10_8052234 = icmp eq i8 %v2_8052220, 10
  br i1 %v10_8052234, label %dec_label_pc_8052220, label %dec_label_pc_8052238

dec_label_pc_8052238:                             ; preds = %dec_label_pc_8052234
  %tmp42 = sext i32 %arg2 to i64
  %v10_8052238 = icmp eq i8 %v2_8052220, 45
  br i1 %v10_8052238, label %dec_label_pc_80522ed, label %dec_label_pc_8052241

dec_label_pc_8052241:                             ; preds = %dec_label_pc_8052238
  %v10_8052241 = icmp eq i8 %v2_8052220, 43
  br i1 %v10_8052241, label %dec_label_pc_805231d, label %dec_label_pc_805224a

dec_label_pc_805224a:                             ; preds = %dec_label_pc_8052241, %dec_label_pc_805231d
  %v0_805229431 = phi i32 [ %v1_8052222, %dec_label_pc_8052241 ], [ %v1_8052320, %dec_label_pc_805231d ]
  %v0_80522c017.in = phi i8 [ %v2_8052220, %dec_label_pc_8052241 ], [ %v2_805231d, %dec_label_pc_805231d ]
  %v2_805229e10 = phi i8 [ %v2_8052220, %dec_label_pc_8052241 ], [ %v2_805231d, %dec_label_pc_805231d ]
  br label %dec_label_pc_8052257

dec_label_pc_8052257:                             ; preds = %dec_label_pc_80522ed, %dec_label_pc_805224a
  %v0_805229430 = phi i32 [ %v1_80522f5, %dec_label_pc_80522ed ], [ %v0_805229431, %dec_label_pc_805224a ]
  %v0_80522c016.in = phi i8 [ %v2_80522ed, %dec_label_pc_80522ed ], [ %v0_80522c017.in, %dec_label_pc_805224a ]
  %v2_805229e9 = phi i8 [ %v2_80522ed, %dec_label_pc_80522ed ], [ %v2_805229e10, %dec_label_pc_805224a ]
  %v0_8052257 = phi i64 [ 2147483648, %dec_label_pc_80522ed ], [ 2147483647, %dec_label_pc_805224a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_80522ed ], [ 0, %dec_label_pc_805224a ]
  %v12_805225b = udiv i64 %v0_8052257, %tmp42
  %v13_805225b = trunc i64 %v12_805225b to i32
  %v14_805225b = urem i64 %v0_8052257, %tmp42
  %v15_805225b = trunc i64 %v14_805225b to i32
  br label %dec_label_pc_805229e

dec_label_pc_8052270:                             ; preds = %dec_label_pc_805229e
  %v1_8052270 = add nsw i32 %v0_8052270, -48
  %v7_8052277 = icmp slt i32 %v1_8052270, %arg2
  br i1 %v7_8052277, label %dec_label_pc_8052279, label %dec_label_pc_80522ca

dec_label_pc_8052279:                             ; preds = %dec_label_pc_8052270, %dec_label_pc_80522c0
  %v1_8052291 = phi i32 [ %v1_8052270, %dec_label_pc_8052270 ], [ %v2_80522c2, %dec_label_pc_80522c0 ]
  %v2_8052279 = icmp slt i32 %v0_8052279, 0
  br i1 %v2_8052279, label %dec_label_pc_80522e8, label %dec_label_pc_805227d

dec_label_pc_805227d:                             ; preds = %dec_label_pc_8052279
  %tmp43 = icmp ugt i32 %v0_805227d, %v13_805225b
  br i1 %tmp43, label %dec_label_pc_80522e8, label %dec_label_pc_8052283

dec_label_pc_8052283:                             ; preds = %dec_label_pc_805227d
  %v15_805227d = icmp eq i32 %v0_805227d, %v13_805225b
  br i1 %v15_805227d, label %dec_label_pc_80522e2, label %dec_label_pc_8052285

dec_label_pc_8052285:                             ; preds = %dec_label_pc_80522e2, %dec_label_pc_8052283
  %v4_805228e = mul i32 %v1_805228e, %arg2
  %v2_8052291 = add i32 %v1_8052291, %v4_805228e
  br label %dec_label_pc_8052294

dec_label_pc_8052294:                             ; preds = %dec_label_pc_80522e8, %dec_label_pc_8052285
  %v1_805228e27 = phi i32 [ %v1_805228e, %dec_label_pc_80522e8 ], [ %v2_8052291, %dec_label_pc_8052285 ]
  %v0_80522d221 = phi i32 [ %v0_805227d, %dec_label_pc_80522e8 ], [ %v2_8052291, %dec_label_pc_8052285 ]
  %v0_80522ca20 = phi i32 [ -1, %dec_label_pc_80522e8 ], [ 1, %dec_label_pc_8052285 ]
  %v1_8052294 = inttoptr i32 %v0_8052294 to i8*
  %v2_8052294 = load i8, i8* %v1_8052294, align 1
  %v1_805229a = add i32 %v0_8052294, 1
  br label %dec_label_pc_805229e

dec_label_pc_805229e:                             ; preds = %dec_label_pc_8052257, %dec_label_pc_8052294
  %v0_8052294 = phi i32 [ %v0_805229430, %dec_label_pc_8052257 ], [ %v1_805229a, %dec_label_pc_8052294 ]
  %v1_805228e = phi i32 [ 0, %dec_label_pc_8052257 ], [ %v1_805228e27, %dec_label_pc_8052294 ]
  %v0_805227d = phi i32 [ 0, %dec_label_pc_8052257 ], [ %v0_80522d221, %dec_label_pc_8052294 ]
  %v0_8052279 = phi i32 [ 0, %dec_label_pc_8052257 ], [ %v0_80522ca20, %dec_label_pc_8052294 ]
  %v0_8052270.in = phi i8 [ %v0_80522c016.in, %dec_label_pc_8052257 ], [ %v2_8052294, %dec_label_pc_8052294 ]
  %v2_805229e = phi i8 [ %v2_805229e9, %dec_label_pc_8052257 ], [ %v2_8052294, %dec_label_pc_8052294 ]
  %v0_8052270 = sext i8 %v0_8052270.in to i32
  %v1_80522a1 = add i8 %v2_805229e, -48
  %tmp44 = icmp ult i8 %v1_80522a1, 10
  br i1 %tmp44, label %dec_label_pc_8052270, label %dec_label_pc_80522a8

dec_label_pc_80522a8:                             ; preds = %dec_label_pc_805229e
  %v1_80522a8 = add i8 %v2_805229e, -65
  store i32 55, i32* @ecx, align 4
  %tmp45 = icmp ult i8 %v1_80522a8, 26
  br i1 %tmp45, label %dec_label_pc_80522c0, label %dec_label_pc_80522b4

dec_label_pc_80522b4:                             ; preds = %dec_label_pc_80522a8
  %v1_80522b4 = add i8 %v2_805229e, -97
  %tmp46 = icmp ult i8 %v1_80522b4, 26
  br i1 %tmp46, label %dec_label_pc_80522bb, label %dec_label_pc_80522ca

dec_label_pc_80522bb:                             ; preds = %dec_label_pc_80522b4
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_80522c0

dec_label_pc_80522c0:                             ; preds = %dec_label_pc_80522a8, %dec_label_pc_80522bb
  %v1_80522c2 = phi i32 [ 55, %dec_label_pc_80522a8 ], [ 87, %dec_label_pc_80522bb ]
  %v2_80522c2 = sub nsw i32 %v0_8052270, %v1_80522c2
  %v7_80522c8 = icmp slt i32 %v2_80522c2, %arg2
  br i1 %v7_80522c8, label %dec_label_pc_8052279, label %dec_label_pc_80522ca

dec_label_pc_80522ca:                             ; preds = %dec_label_pc_8052270, %dec_label_pc_80522b4, %dec_label_pc_80522c0
  %v2_80522ca = icmp slt i32 %v0_8052279, 0
  br i1 %v2_80522ca, label %dec_label_pc_8052309, label %dec_label_pc_80522ce

dec_label_pc_80522ce:                             ; preds = %dec_label_pc_80522ca
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_80522d4 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_80522d4, label %dec_label_pc_80522da, label %dec_label_pc_80522d8

dec_label_pc_80522d8:                             ; preds = %dec_label_pc_80522ce
  %v1_80522d8 = sub i32 0, %v0_805227d
  br label %dec_label_pc_80522da

dec_label_pc_80522da:                             ; preds = %dec_label_pc_80522ce, %dec_label_pc_80522d8
  %v0_80522e1 = phi i32 [ %v0_805227d, %dec_label_pc_80522ce ], [ %v1_80522d8, %dec_label_pc_80522d8 ]
  ret i32 %v0_80522e1

dec_label_pc_80522e2:                             ; preds = %dec_label_pc_8052283
  %v5_80522e2 = sub i32 %v1_8052291, %v15_805225b
  %v11_80522e2 = xor i32 %v1_8052291, %v15_805225b
  %v12_80522e2 = xor i32 %v5_80522e2, %v1_8052291
  %v13_80522e2 = and i32 %v12_80522e2, %v11_80522e2
  %v14_80522e2 = icmp slt i32 %v13_80522e2, 0
  %v15_80522e2 = icmp eq i32 %v5_80522e2, 0
  %v16_80522e2 = icmp slt i32 %v5_80522e2, 0
  %v3_80522e6 = icmp ne i1 %v16_80522e2, %v14_80522e2
  %v4_80522e6 = or i1 %v15_80522e2, %v3_80522e6
  br i1 %v4_80522e6, label %dec_label_pc_8052285, label %dec_label_pc_80522e8

dec_label_pc_80522e8:                             ; preds = %dec_label_pc_805227d, %dec_label_pc_80522e2, %dec_label_pc_8052279
  br label %dec_label_pc_8052294

dec_label_pc_80522ed:                             ; preds = %dec_label_pc_8052238
  %v1_80522ed = inttoptr i32 %v1_8052222 to i8*
  %v2_80522ed = load i8, i8* %v1_80522ed, align 1
  %v1_80522f5 = add i32 %v0_8052222, 2
  br label %dec_label_pc_8052257

dec_label_pc_8052309:                             ; preds = %dec_label_pc_80522ca
  %v8_8052309 = icmp eq i32 %stack_var_-20.0, 0
  %v2_805230e = zext i1 %v8_8052309 to i32
  %v1_80523134 = or i32 %v2_805230e, -2147483648
  ret i32 %v1_80523134

dec_label_pc_805231d:                             ; preds = %dec_label_pc_8052241
  %v1_805231d = inttoptr i32 %v1_8052222 to i8*
  %v2_805231d = load i8, i8* %v1_805231d, align 1
  %v1_8052320 = add i32 %v0_8052222, 2
  br label %dec_label_pc_805224a

; uselistorder directives
  uselistorder i32 %v5_80522e2, { 1, 2, 0 }
  uselistorder i32 %v2_80522c2, { 1, 0 }
  uselistorder i8 %v2_8052294, { 1, 0 }
  uselistorder i32 %v2_8052291, { 1, 0 }
  uselistorder i32 %v1_8052291, { 0, 1, 3, 2 }
  uselistorder i32 %v13_805225b, { 1, 0 }
  uselistorder i32 %v1_8052222, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8052220, { 2, 1, 0 }
  uselistorder i8 %v2_8052220, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8052222, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 4, 3, 2, 5, 10, 7, 8, 11, 9, 6 }
  uselistorder i8 32, { 1, 2, 3, 6, 7, 4, 8, 9, 10, 0, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80522e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522da, { 1, 0 }
  uselistorder label %dec_label_pc_80522ca, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80522c0, { 1, 0 }
  uselistorder label %dec_label_pc_805229e, { 1, 0 }
  uselistorder label %dec_label_pc_8052279, { 1, 0 }
  uselistorder label %dec_label_pc_805224a, { 1, 0 }
}

define i32 @function_8052380() local_unnamed_addr {
dec_label_pc_8052380:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_805238d = call i32 @function_8052be9(i32 16)
  %v1_8052392 = inttoptr i32 %v1_805238d to i32*
  store i32 0, i32* %v1_8052392, align 4
  %v4_805239f = call i32 @function_8052ea5(i32 2, i32 2, i32 0, i32 %v1_805238d)
  store i32 %v4_805239f, i32* %esi.global-to-local, align 4
  %v10_80523ab = icmp eq i32 %v4_805239f, -1
  br i1 %v10_80523ab, label %dec_label_pc_80523f2, label %dec_label_pc_80523b0

dec_label_pc_80523b0:                             ; preds = %dec_label_pc_8052380
  %v2_80523b0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80523b0, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_80523cf = call i32 @function_8052cca(i32 %v4_805239f, i32 %v2_80523b0, i32 16)
  %v2_80523d7 = ptrtoint i32* %stack_var_-12 to i32
  %v0_80523dd = load i32, i32* %esi.global-to-local, align 4
  %v3_80523de = call i32 @function_8052cf5(i32 %v0_80523dd, i32 %v2_80523b0, i32 %v2_80523d7)
  %v1_80523e6 = call i32 @function_80526b1(i32 %v0_80523dd)
  br label %dec_label_pc_80523f2

dec_label_pc_80523f2:                             ; preds = %dec_label_pc_8052380, %dec_label_pc_80523b0
  %v0_80523f7 = phi i32 [ 0, %dec_label_pc_8052380 ], [ 134744072, %dec_label_pc_80523b0 ]
  ret i32 %v0_80523f7

; uselistorder directives
  uselistorder i32 %v4_805239f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8052cca, { 4, 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052ea5, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80523f2, { 1, 0 }
}

define i32 @function_8052400() local_unnamed_addr {
dec_label_pc_8052400:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i8* @__decompiler_undefined_function_2()
  %v4_8052407 = ptrtoint i8* %tmp18 to i32
  %v2_8052412 = load i8, i8* %tmp18, align 1
  %v3_8052412 = icmp eq i8 %v2_8052412, 0
  br i1 %v3_8052412, label %dec_label_pc_8052428, label %dec_label_pc_8052418

dec_label_pc_8052418:                             ; preds = %dec_label_pc_8052400, %dec_label_pc_8052418
  %v2_8052418 = phi i32 [ %v1_805241b, %dec_label_pc_8052418 ], [ 0, %dec_label_pc_8052400 ]
  %v1_805241b = add i32 %v2_8052418, 1
  %v2_8052422 = add i32 %v1_805241b, %v4_8052407
  %v3_8052422 = inttoptr i32 %v2_8052422 to i8*
  %v4_8052422 = load i8, i8* %v3_8052422, align 1
  %v5_8052422 = icmp eq i8 %v4_8052422, 0
  %v1_8052426 = icmp eq i1 %v5_8052422, false
  br i1 %v1_8052426, label %dec_label_pc_8052418, label %dec_label_pc_8052428

dec_label_pc_8052428:                             ; preds = %dec_label_pc_8052418, %dec_label_pc_8052400
  %v2_805245f = phi i32 [ 0, %dec_label_pc_8052400 ], [ %v1_805241b, %dec_label_pc_8052418 ]
  %v4_805242e = ptrtoint i8* %tmp to i32
  %tmp25 = icmp slt i32 %tmp17, 1
  br i1 %tmp25, label %dec_label_pc_805245c, label %dec_label_pc_8052436.preheader

dec_label_pc_8052436.preheader:                   ; preds = %dec_label_pc_8052428
  %v4_8052436.pre = load i32, i32* @ecx, align 4
  %v6_8052438.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052436

dec_label_pc_8052436:                             ; preds = %dec_label_pc_8052436.preheader, %dec_label_pc_8052457
  %v0_8052457 = phi i32 [ %tmp17, %dec_label_pc_8052436.preheader ], [ %v1_8052457, %dec_label_pc_8052457 ]
  %v6_8052438 = phi i32 [ %v6_8052438.pre, %dec_label_pc_8052436.preheader ], [ %v2_8052451, %dec_label_pc_8052457 ]
  %v0_8052465 = phi i32 [ 0, %dec_label_pc_8052436.preheader ], [ %v1_80524389, %dec_label_pc_8052457 ]
  %v4_8052436 = phi i32 [ %v4_8052436.pre, %dec_label_pc_8052436.preheader ], [ %v0_8052451, %dec_label_pc_8052457 ]
  %v0_805243c = phi i32 [ %v4_805242e, %dec_label_pc_8052436.preheader ], [ %v1_805243c, %dec_label_pc_8052457 ]
  %v1_8052436 = inttoptr i32 %v0_805243c to i8*
  %v2_8052436 = load i8, i8* %v1_8052436, align 1
  %v3_8052436 = zext i8 %v2_8052436 to i32
  %v5_8052436 = and i32 %v4_8052436, -256
  %v6_8052436 = or i32 %v3_8052436, %v5_8052436
  store i32 %v6_8052436, i32* @ecx, align 4
  %v2_8052438 = add i32 %v0_8052465, %v4_8052407
  %v3_8052438 = inttoptr i32 %v2_8052438 to i8*
  %v4_8052438 = load i8, i8* %v3_8052438, align 1
  %v5_8052438 = zext i8 %v4_8052438 to i32
  %v7_8052438 = and i32 %v6_8052438, -256
  %v8_8052438 = or i32 %v5_8052438, %v7_8052438
  %v1_805243c = add i32 %v0_805243c, 1
  %v1_805243d = add i8 %v2_8052436, -65
  %v8_8052442 = icmp ugt i8 %v1_805243d, 25
  br i1 %v8_8052442, label %dec_label_pc_8052447, label %dec_label_pc_8052444

dec_label_pc_8052444:                             ; preds = %dec_label_pc_8052436
  %v1_8052444 = or i32 %v6_8052436, 96
  store i32 %v1_8052444, i32* @ecx, align 4
  br label %dec_label_pc_8052447

dec_label_pc_8052447:                             ; preds = %dec_label_pc_8052436, %dec_label_pc_8052444
  %v0_8052451 = phi i32 [ %v6_8052436, %dec_label_pc_8052436 ], [ %v1_8052444, %dec_label_pc_8052444 ]
  %v1_8052447 = add i8 %v4_8052438, -65
  %v8_805244c = icmp ugt i8 %v1_8052447, 25
  br i1 %v8_805244c, label %dec_label_pc_8052451, label %dec_label_pc_805244e

dec_label_pc_805244e:                             ; preds = %dec_label_pc_8052447
  %v1_805244e = or i32 %v8_8052438, 96
  br label %dec_label_pc_8052451

dec_label_pc_8052451:                             ; preds = %dec_label_pc_8052447, %dec_label_pc_805244e
  %v2_8052451 = phi i32 [ %v8_8052438, %dec_label_pc_8052447 ], [ %v1_805244e, %dec_label_pc_805244e ]
  %v1_8052451 = trunc i32 %v0_8052451 to i8
  %v3_8052451 = trunc i32 %v2_8052451 to i8
  %v15_8052451 = icmp eq i8 %v1_8052451, %v3_8052451
  br i1 %v15_8052451, label %dec_label_pc_8052465, label %dec_label_pc_8052455

dec_label_pc_8052455:                             ; preds = %dec_label_pc_8052451
  br label %dec_label_pc_8052457

dec_label_pc_8052457:                             ; preds = %dec_label_pc_8052465, %dec_label_pc_8052455
  %v1_80524389 = phi i32 [ %v1_8052465, %dec_label_pc_8052465 ], [ 0, %dec_label_pc_8052455 ]
  %v1_8052457 = add i32 %v0_8052457, -1
  %tmp26 = icmp slt i32 %v1_8052457, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8052436, label %dec_label_pc_805245c

dec_label_pc_805245c:                             ; preds = %dec_label_pc_8052457, %dec_label_pc_8052428
  ret i32 -1

dec_label_pc_8052465:                             ; preds = %dec_label_pc_8052451
  %v1_8052465 = add i32 %v0_8052465, 1
  %v14_8052466 = icmp eq i32 %v2_805245f, %v1_8052465
  %v1_8052469 = icmp eq i1 %v14_8052466, false
  br i1 %v1_8052469, label %dec_label_pc_8052457, label %dec_label_pc_805246b

dec_label_pc_805246b:                             ; preds = %dec_label_pc_8052465
  store i32 %v4_805242e, i32* @ecx, align 4
  %v2_8052471 = sub i32 %v1_805243c, %v4_805242e
  ret i32 %v2_8052471

; uselistorder directives
  uselistorder i32 %v1_8052457, { 1, 0 }
  uselistorder i32 %v0_8052465, { 1, 0 }
  uselistorder i32 %v4_805242e, { 2, 1, 0 }
  uselistorder i8* %tmp18, { 1, 0 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052451, { 1, 0 }
  uselistorder label %dec_label_pc_8052447, { 1, 0 }
  uselistorder label %dec_label_pc_8052436, { 1, 0 }
  uselistorder label %dec_label_pc_8052418, { 1, 0 }
}

define i32 @function_8052480() local_unnamed_addr {
dec_label_pc_8052480:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8052482 = ptrtoint i8* %tmp13 to i32
  %v4_8052488 = ptrtoint i8* %tmp to i32
  %v2_805248c = load i8, i8* %tmp13, align 1
  %v3_805248c = icmp eq i8 %v2_805248c, 0
  br i1 %v3_805248c, label %dec_label_pc_8052498, label %dec_label_pc_8052491

dec_label_pc_8052491:                             ; preds = %dec_label_pc_8052480, %dec_label_pc_8052491
  %v0_8052491 = phi i32 [ %v1_8052491, %dec_label_pc_8052491 ], [ 0, %dec_label_pc_8052480 ]
  %v1_8052491 = add i32 %v0_8052491, 1
  %v2_8052492 = add i32 %v1_8052491, %v4_8052482
  %v3_8052492 = inttoptr i32 %v2_8052492 to i8*
  %v4_8052492 = load i8, i8* %v3_8052492, align 1
  %v5_8052492 = icmp eq i8 %v4_8052492, 0
  %v1_8052496 = icmp eq i1 %v5_8052492, false
  br i1 %v1_8052496, label %dec_label_pc_8052491, label %dec_label_pc_8052498

dec_label_pc_8052498:                             ; preds = %dec_label_pc_8052491, %dec_label_pc_8052480
  %v0_80524a9 = phi i32 [ 0, %dec_label_pc_8052480 ], [ %v1_8052491, %dec_label_pc_8052491 ]
  %v2_805249a = load i8, i8* %tmp, align 1
  %v3_805249a = icmp eq i8 %v2_805249a, 0
  br i1 %v3_805249a, label %dec_label_pc_80524a7, label %dec_label_pc_80524a0

dec_label_pc_80524a0:                             ; preds = %dec_label_pc_8052498, %dec_label_pc_80524a0
  %v0_80524a0 = phi i32 [ %v1_80524a0, %dec_label_pc_80524a0 ], [ 0, %dec_label_pc_8052498 ]
  %v1_80524a0 = add i32 %v0_80524a0, 1
  %v2_80524a1 = add i32 %v1_80524a0, %v4_8052488
  %v3_80524a1 = inttoptr i32 %v2_80524a1 to i8*
  %v4_80524a1 = load i8, i8* %v3_80524a1, align 1
  %v5_80524a1 = icmp eq i8 %v4_80524a1, 0
  %v1_80524a5 = icmp eq i1 %v5_80524a1, false
  br i1 %v1_80524a5, label %dec_label_pc_80524a0, label %dec_label_pc_80524a7

dec_label_pc_80524a7:                             ; preds = %dec_label_pc_80524a0, %dec_label_pc_8052498
  %v0_80524a7 = phi i32 [ 0, %dec_label_pc_8052498 ], [ %v1_80524a0, %dec_label_pc_80524a0 ]
  %v12_80524a9 = icmp eq i32 %v0_80524a9, %v0_80524a7
  br i1 %v12_80524a9, label %dec_label_pc_80524b4.preheader, label %dec_label_pc_80524ad

dec_label_pc_80524b4.preheader:                   ; preds = %dec_label_pc_80524a7
  %v10_80524b518 = icmp eq i32 %v0_80524a9, 0
  br i1 %v10_80524b518, label %dec_label_pc_80524c2, label %dec_label_pc_80524ba

dec_label_pc_80524ad:                             ; preds = %dec_label_pc_80524ba, %dec_label_pc_80524a7
  ret i32 0

dec_label_pc_80524b2:                             ; preds = %dec_label_pc_80524ba
  %v3_80524ba = zext i8 %v2_80524ba to i32
  %v5_80524ba = and i32 %v4_80524ba20, -256
  %v6_80524ba = or i32 %v3_80524ba, %v5_80524ba
  %v1_80524b2 = add i32 %v0_80524b221, 1
  %v1_80524b3 = add i32 %v0_80524b319, 1
  %v10_80524b5 = icmp eq i32 %v1_80524b422, 0
  br i1 %v10_80524b5, label %dec_label_pc_80524c2, label %dec_label_pc_80524ba

dec_label_pc_80524ba:                             ; preds = %dec_label_pc_80524b4.preheader, %dec_label_pc_80524b2
  %v1_80524b422.in = phi i32 [ %v1_80524b422, %dec_label_pc_80524b2 ], [ %v0_80524a9, %dec_label_pc_80524b4.preheader ]
  %v4_80524ba20 = phi i32 [ %v6_80524ba, %dec_label_pc_80524b2 ], [ %v0_80524a9, %dec_label_pc_80524b4.preheader ]
  %v0_80524b221 = phi i32 [ %v1_80524b2, %dec_label_pc_80524b2 ], [ %v4_8052482, %dec_label_pc_80524b4.preheader ]
  %v0_80524b319 = phi i32 [ %v1_80524b3, %dec_label_pc_80524b2 ], [ %v4_8052488, %dec_label_pc_80524b4.preheader ]
  %v1_80524b422 = add i32 %v1_80524b422.in, -1
  %v1_80524ba = inttoptr i32 %v0_80524b221 to i8*
  %v2_80524ba = load i8, i8* %v1_80524ba, align 1
  %v3_80524bc = inttoptr i32 %v0_80524b319 to i8*
  %v4_80524bc = load i8, i8* %v3_80524bc, align 1
  %v15_80524bc = icmp eq i8 %v2_80524ba, %v4_80524bc
  br i1 %v15_80524bc, label %dec_label_pc_80524b2, label %dec_label_pc_80524ad

dec_label_pc_80524c2:                             ; preds = %dec_label_pc_80524b2, %dec_label_pc_80524b4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_80524a9, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80524ba, { 1, 0 }
  uselistorder label %dec_label_pc_80524a0, { 1, 0 }
  uselistorder label %dec_label_pc_8052491, { 1, 0 }
}

define i32 @function_80524d0() local_unnamed_addr {
dec_label_pc_80524d0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_80524d2 = ptrtoint i8* %tmp14 to i32
  %v4_80524d8 = ptrtoint i8* %tmp13 to i32
  %v2_80524e0 = load i8, i8* %tmp14, align 1
  %v3_80524e0 = icmp eq i8 %v2_80524e0, 0
  br i1 %v3_80524e0, label %dec_label_pc_80524ec, label %dec_label_pc_80524e5

dec_label_pc_80524e5:                             ; preds = %dec_label_pc_80524d0, %dec_label_pc_80524e5
  %v0_80524e5 = phi i32 [ %v1_80524e5, %dec_label_pc_80524e5 ], [ 0, %dec_label_pc_80524d0 ]
  %v1_80524e5 = add i32 %v0_80524e5, 1
  %v2_80524e6 = add i32 %v1_80524e5, %v4_80524d2
  %v3_80524e6 = inttoptr i32 %v2_80524e6 to i8*
  %v4_80524e6 = load i8, i8* %v3_80524e6, align 1
  %v5_80524e6 = icmp eq i8 %v4_80524e6, 0
  %v1_80524ea = icmp eq i1 %v5_80524e6, false
  br i1 %v1_80524ea, label %dec_label_pc_80524e5, label %dec_label_pc_80524ec

dec_label_pc_80524ec:                             ; preds = %dec_label_pc_80524e5, %dec_label_pc_80524d0
  %v1_80524fa = phi i32 [ 0, %dec_label_pc_80524d0 ], [ %v1_80524e5, %dec_label_pc_80524e5 ]
  %v2_80524ee = load i8, i8* %tmp13, align 1
  %v3_80524ee = icmp eq i8 %v2_80524ee, 0
  br i1 %v3_80524ee, label %dec_label_pc_80524fa, label %dec_label_pc_80524f3

dec_label_pc_80524f3:                             ; preds = %dec_label_pc_80524ec, %dec_label_pc_80524f3
  %v0_80524f3 = phi i32 [ %v1_80524f3, %dec_label_pc_80524f3 ], [ 0, %dec_label_pc_80524ec ]
  %v1_80524f3 = add i32 %v0_80524f3, 1
  %v2_80524f4 = add i32 %v1_80524f3, %v4_80524d8
  %v3_80524f4 = inttoptr i32 %v2_80524f4 to i8*
  %v4_80524f4 = load i8, i8* %v3_80524f4, align 1
  %v5_80524f4 = icmp eq i8 %v4_80524f4, 0
  %v1_80524f8 = icmp eq i1 %v5_80524f4, false
  br i1 %v1_80524f8, label %dec_label_pc_80524f3, label %dec_label_pc_80524fa

dec_label_pc_80524fa:                             ; preds = %dec_label_pc_80524f3, %dec_label_pc_80524ec
  %v1_80524fe = phi i32 [ 0, %dec_label_pc_80524ec ], [ %v1_80524f3, %dec_label_pc_80524f3 ]
  %v8_80524fc = icmp sgt i32 %tmp, %v1_80524fa
  br i1 %v8_80524fc, label %dec_label_pc_8052502, label %dec_label_pc_80524fe

dec_label_pc_80524fe:                             ; preds = %dec_label_pc_80524fa
  %v7_8052500 = icmp sgt i32 %tmp, %v1_80524fe
  br i1 %v7_8052500, label %dec_label_pc_8052502, label %dec_label_pc_8052509.preheader

dec_label_pc_8052509.preheader:                   ; preds = %dec_label_pc_80524fe
  %v10_805250a19 = icmp eq i32 %tmp, 0
  br i1 %v10_805250a19, label %dec_label_pc_8052504, label %dec_label_pc_805250f

dec_label_pc_8052502:                             ; preds = %dec_label_pc_805250f, %dec_label_pc_80524fe, %dec_label_pc_80524fa
  br label %dec_label_pc_8052504

dec_label_pc_8052504:                             ; preds = %dec_label_pc_8052509.preheader, %dec_label_pc_8052507, %dec_label_pc_8052502
  %storemerge = phi i32 [ 0, %dec_label_pc_8052502 ], [ 1, %dec_label_pc_8052507 ], [ 1, %dec_label_pc_8052509.preheader ]
  ret i32 %storemerge

dec_label_pc_8052507:                             ; preds = %dec_label_pc_805250f
  %v3_805250f = zext i8 %v2_805250f to i32
  %v5_805250f = and i32 %v4_805250f21, -256
  %v6_805250f = or i32 %v3_805250f, %v5_805250f
  %v1_8052507 = add i32 %v0_805250722, 1
  %v1_8052508 = add i32 %v0_805250820, 1
  %v10_805250a = icmp eq i32 %v1_805250923, 0
  br i1 %v10_805250a, label %dec_label_pc_8052504, label %dec_label_pc_805250f

dec_label_pc_805250f:                             ; preds = %dec_label_pc_8052509.preheader, %dec_label_pc_8052507
  %v1_805250923.in = phi i32 [ %v1_805250923, %dec_label_pc_8052507 ], [ %tmp, %dec_label_pc_8052509.preheader ]
  %v0_805250722 = phi i32 [ %v1_8052507, %dec_label_pc_8052507 ], [ %v4_80524d2, %dec_label_pc_8052509.preheader ]
  %v4_805250f21 = phi i32 [ %v6_805250f, %dec_label_pc_8052507 ], [ %v1_80524fe, %dec_label_pc_8052509.preheader ]
  %v0_805250820 = phi i32 [ %v1_8052508, %dec_label_pc_8052507 ], [ %v4_80524d8, %dec_label_pc_8052509.preheader ]
  %v1_805250923 = add i32 %v1_805250923.in, -1
  %v1_805250f = inttoptr i32 %v0_805250722 to i8*
  %v2_805250f = load i8, i8* %v1_805250f, align 1
  %v3_8052511 = inttoptr i32 %v0_805250820 to i8*
  %v4_8052511 = load i8, i8* %v3_8052511, align 1
  %v15_8052511 = icmp eq i8 %v2_805250f, %v4_8052511
  br i1 %v15_8052511, label %dec_label_pc_8052507, label %dec_label_pc_8052502

; uselistorder directives
  uselistorder label %dec_label_pc_805250f, { 1, 0 }
  uselistorder label %dec_label_pc_8052504, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80524f3, { 1, 0 }
  uselistorder label %dec_label_pc_80524e5, { 1, 0 }
}

define i32 @function_8052520() local_unnamed_addr {
dec_label_pc_8052520:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp20 = call i64 @__decompiler_undefined_function_5()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v12_8052524 = ptrtoint i32* %stack_var_-64 to i32
  %v4_8052527 = inttoptr i32 %tmp22 to i8*
  store i32 %tmp21, i32* %eax.global-to-local, align 4
  %v4_805252f = trunc i64 %tmp20 to i32
  store i32 %v4_805252f, i32* %esi.global-to-local, align 4
  %v2_8052533 = icmp eq i32 %tmp22, 0
  br i1 %v2_8052533, label %dec_label_pc_80525a0, label %dec_label_pc_8052537

dec_label_pc_8052537:                             ; preds = %dec_label_pc_8052520
  %v1_8052537 = icmp eq i32 %tmp21, 0
  %v2_8052537 = icmp slt i32 %tmp21, 0
  br i1 %v1_8052537, label %dec_label_pc_80525b0, label %dec_label_pc_805253b

dec_label_pc_805253b:                             ; preds = %dec_label_pc_8052537
  %v9_8052540 = icmp eq i32 %v4_805252f, 10
  br i1 %v9_8052540, label %dec_label_pc_80525cd, label %dec_label_pc_8052549

dec_label_pc_8052549:                             ; preds = %dec_label_pc_80525cd, %dec_label_pc_805253b
  br label %dec_label_pc_805254d

dec_label_pc_805254d:                             ; preds = %dec_label_pc_80525d5, %dec_label_pc_8052549
  %storemerge32 = phi i32 [ %tmp21, %dec_label_pc_8052549 ], [ %v1_80525d7, %dec_label_pc_80525d5 ]
  %v0_80525543 = phi i32 [ %tmp21, %dec_label_pc_8052549 ], [ %v1_80525d7, %dec_label_pc_80525d5 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8052549 ], [ 1, %dec_label_pc_80525d5 ]
  store i32 %storemerge32, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052552

dec_label_pc_8052552:                             ; preds = %dec_label_pc_8052552.dec_label_pc_8052552_crit_edge, %dec_label_pc_805254d
  %v2_8052563 = phi i32 [ %v2_8052563.pre, %dec_label_pc_8052552.dec_label_pc_8052552_crit_edge ], [ %v12_8052524, %dec_label_pc_805254d ]
  %v3_8052563 = phi i32 [ %v1_805256b, %dec_label_pc_8052552.dec_label_pc_8052552_crit_edge ], [ 32, %dec_label_pc_805254d ]
  %v0_8052556 = phi i32 [ %v0_805256c, %dec_label_pc_8052552.dec_label_pc_8052552_crit_edge ], [ %v4_805252f, %dec_label_pc_805254d ]
  %v0_8052554 = phi i32 [ %div18, %dec_label_pc_8052552.dec_label_pc_8052552_crit_edge ], [ %v0_80525543, %dec_label_pc_805254d ]
  %tmp29 = urem i32 %v0_8052554, %v0_8052556
  %v7_805255e = icmp sgt i32 %tmp29, 9
  %v1_8052560.v1_805255b.v = select i1 %v7_805255e, i32 55, i32 48
  %v1_8052560.v1_805255b = add i32 %v1_8052560.v1_805255b.v, %tmp29
  %v1_8052563 = trunc i32 %v1_8052560.v1_805255b to i8
  %v4_8052563 = add i32 %v3_8052563, 14
  %v5_8052563 = add i32 %v4_8052563, %v2_8052563
  %v6_8052563 = inttoptr i32 %v5_8052563 to i8*
  store i8 %v1_8052563, i8* %v6_8052563, align 1
  %v0_8052569 = load i32, i32* %ecx.global-to-local, align 4
  %v0_805256b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805256b = add i32 %v0_805256b, -1
  store i32 %v1_805256b, i32* %ebx.global-to-local, align 4
  %v0_805256c = load i32, i32* %esi.global-to-local, align 4
  %div18 = udiv i32 %v0_8052569, %v0_805256c
  store i32 %div18, i32* %eax.global-to-local, align 4
  %tmp30 = urem i32 %v0_8052569, %v0_805256c
  store i32 %tmp30, i32* %edx.global-to-local, align 4
  store i32 %div18, i32* %ecx.global-to-local, align 4
  %v2_8052570 = icmp ugt i32 %v0_805256c, %v0_8052569
  %v1_8052572 = icmp eq i1 %v2_8052570, false
  br i1 %v1_8052572, label %dec_label_pc_8052552.dec_label_pc_8052552_crit_edge, label %dec_label_pc_8052574

dec_label_pc_8052552.dec_label_pc_8052552_crit_edge: ; preds = %dec_label_pc_8052552
  %v2_8052563.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052552

dec_label_pc_8052574:                             ; preds = %dec_label_pc_8052552
  %v0_8052574 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052574 = icmp eq i32 %v0_8052574, 0
  %v1_8052576 = icmp eq i1 %v1_8052574, false
  br i1 %v1_8052576, label %dec_label_pc_80525c6, label %dec_label_pc_8052578

dec_label_pc_8052578:                             ; preds = %dec_label_pc_8052574
  store i32 %v0_805256b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052579

dec_label_pc_8052579:                             ; preds = %dec_label_pc_80525c6, %dec_label_pc_8052578
  %v1_8052579 = phi i32 [ %v1_8052579.pre, %dec_label_pc_80525c6 ], [ %v0_805256b, %dec_label_pc_8052578 ]
  %v0_8052579 = load i32, i32* @esp, align 4
  %v2_8052579 = add i32 %v1_8052579, 14
  %v3_8052579 = add i32 %v2_8052579, %v0_8052579
  store i32 %v3_8052579, i32* %eax.global-to-local, align 4
  %v1_805257d = inttoptr i32 %v3_8052579 to i8*
  %v2_805257d = load i8, i8* %v1_805257d, align 1
  %v3_805257d = icmp eq i8 %v2_805257d, 0
  br i1 %v3_805257d, label %dec_label_pc_80525e5, label %dec_label_pc_8052582

dec_label_pc_8052582:                             ; preds = %dec_label_pc_8052579
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052584

dec_label_pc_8052584:                             ; preds = %dec_label_pc_8052584, %dec_label_pc_8052582
  %v0_8052584 = phi i32 [ %v1_8052584, %dec_label_pc_8052584 ], [ 0, %dec_label_pc_8052582 ]
  %v1_8052584 = add i32 %v0_8052584, 1
  store i32 %v1_8052584, i32* %ecx.global-to-local, align 4
  %v2_8052585 = add i32 %v1_8052584, %v3_8052579
  %v3_8052585 = inttoptr i32 %v2_8052585 to i8*
  %v4_8052585 = load i8, i8* %v3_8052585, align 1
  %v5_8052585 = icmp eq i8 %v4_8052585, 0
  %v1_8052589 = icmp eq i1 %v5_8052585, false
  br i1 %v1_8052589, label %dec_label_pc_8052584, label %dec_label_pc_805258b

dec_label_pc_805258b:                             ; preds = %dec_label_pc_8052584
  %v10_805258b = icmp eq i32 %v0_8052584, -2
  br i1 %v10_805258b, label %dec_label_pc_80525a0, label %dec_label_pc_8052590

dec_label_pc_8052590:                             ; preds = %dec_label_pc_805258b
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052579, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052594

dec_label_pc_8052594:                             ; preds = %dec_label_pc_80525e5, %dec_label_pc_8052590, %dec_label_pc_8052594.dec_label_pc_8052594_crit_edge
  %v2_8052597 = phi i32 [ %v1_805259a, %dec_label_pc_8052594.dec_label_pc_8052594_crit_edge ], [ %tmp22, %dec_label_pc_8052590 ], [ %tmp22, %dec_label_pc_80525e5 ]
  %v0_8052596 = phi i32 [ %v0_805259b, %dec_label_pc_8052594.dec_label_pc_8052594_crit_edge ], [ %v1_8052584, %dec_label_pc_8052590 ], [ 0, %dec_label_pc_80525e5 ]
  %v4_8052594 = phi i32 [ %v4_8052594.pre, %dec_label_pc_8052594.dec_label_pc_8052594_crit_edge ], [ %v3_8052579, %dec_label_pc_8052590 ], [ %v3_8052579, %dec_label_pc_80525e5 ]
  %v0_8052594 = phi i32 [ %v1_8052599, %dec_label_pc_8052594.dec_label_pc_8052594_crit_edge ], [ %v3_8052579, %dec_label_pc_8052590 ], [ %v3_8052579, %dec_label_pc_80525e5 ]
  %v1_8052594 = inttoptr i32 %v0_8052594 to i8*
  %v2_8052594 = load i8, i8* %v1_8052594, align 1
  %v3_8052594 = zext i8 %v2_8052594 to i32
  %v5_8052594 = and i32 %v4_8052594, -256
  %v6_8052594 = or i32 %v3_8052594, %v5_8052594
  store i32 %v6_8052594, i32* %eax.global-to-local, align 4
  %v1_8052596 = add i32 %v0_8052596, -1
  store i32 %v1_8052596, i32* %ecx.global-to-local, align 4
  %v3_8052597 = inttoptr i32 %v2_8052597 to i8*
  store i8 %v2_8052594, i8* %v3_8052597, align 1
  %v0_8052599 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052599 = add i32 %v0_8052599, 1
  store i32 %v1_8052599, i32* %edx.global-to-local, align 4
  %v0_805259a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805259a = add i32 %v0_805259a, 1
  store i32 %v1_805259a, i32* %ebx.global-to-local, align 4
  %v0_805259b = load i32, i32* %ecx.global-to-local, align 4
  %v10_805259b = icmp eq i32 %v0_805259b, -1
  %v1_805259e = icmp eq i1 %v10_805259b, false
  br i1 %v1_805259e, label %dec_label_pc_8052594.dec_label_pc_8052594_crit_edge, label %dec_label_pc_80525a0.loopexit

dec_label_pc_8052594.dec_label_pc_8052594_crit_edge: ; preds = %dec_label_pc_8052594
  %v4_8052594.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052594

dec_label_pc_80525a0.loopexit:                    ; preds = %dec_label_pc_8052594
  br label %dec_label_pc_80525a0

dec_label_pc_80525a0:                             ; preds = %dec_label_pc_80525a0.loopexit, %dec_label_pc_805258b, %dec_label_pc_8052520
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_80525b0:                             ; preds = %dec_label_pc_8052537
  store i8 48, i8* %v4_8052527, align 1
  %v2_80525b3 = add i32 %tmp22, 1
  %v3_80525b3 = inttoptr i32 %v2_80525b3 to i8*
  store i8 0, i8* %v3_80525b3, align 1
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_80525c6:                             ; preds = %dec_label_pc_8052574
  %v0_80525c6 = load i32, i32* @esp, align 4
  %v2_80525c6 = add i32 %v0_805256b, 13
  %v3_80525c6 = add i32 %v2_80525c6, %v0_80525c6
  %v4_80525c6 = inttoptr i32 %v3_80525c6 to i8*
  store i8 45, i8* %v4_80525c6, align 1
  %v1_8052579.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052579

dec_label_pc_80525cd:                             ; preds = %dec_label_pc_805253b
  %v1_80525cf = icmp eq i1 %v2_8052537, false
  br i1 %v1_80525cf, label %dec_label_pc_8052549, label %dec_label_pc_80525d5

dec_label_pc_80525d5:                             ; preds = %dec_label_pc_80525cd
  %v1_80525d7 = sub i32 0, %tmp21
  br label %dec_label_pc_805254d

dec_label_pc_80525e5:                             ; preds = %dec_label_pc_8052579
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052579, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052594

; uselistorder directives
  uselistorder i32 %v1_805259a, { 1, 0 }
  uselistorder i32 %v1_8052599, { 1, 0 }
  uselistorder i32 %v1_8052584, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8052579, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div18, { 1, 2, 0 }
  uselistorder i32 %v1_805256b, { 1, 0 }
  uselistorder i32 %v4_805252f, { 1, 0, 2 }
  uselistorder i32 %tmp22, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %tmp21, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052594, { 0, 2, 1 }
}

define i32 @function_80525ed(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80525ed:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80525ed = load i32, i32* @edi, align 4
  %v0_80525ee = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052602 = add i32 %arg2, -12
  %v6_805260c = icmp ugt i32 %v1_8052602, 2
  br i1 %v6_805260c, label %dec_label_pc_805261c, label %dec_label_pc_805260e

dec_label_pc_805260e:                             ; preds = %dec_label_pc_80525ed
  %v4_8052612 = call i32 @function_8052644(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052602)
  br label %dec_label_pc_805263e

dec_label_pc_805261c:                             ; preds = %dec_label_pc_80525ed
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052624 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052624, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8052624, -4095
  br i1 %tmp17, label %dec_label_pc_805263c, label %dec_label_pc_8052630

dec_label_pc_8052630:                             ; preds = %dec_label_pc_805261c
  %v1_8052630 = call i32 @function_8052be9(i32 %v0_80525ee)
  %v0_8052635 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052635 = sub i32 0, %v0_8052635
  %v2_8052637 = inttoptr i32 %v1_8052630 to i32*
  store i32 %v1_8052635, i32* %v2_8052637, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805263c

dec_label_pc_805263c:                             ; preds = %dec_label_pc_805261c, %dec_label_pc_8052630
  %v0_805263c = phi i32 [ %v2_8052624, %dec_label_pc_805261c ], [ -1, %dec_label_pc_8052630 ]
  br label %dec_label_pc_805263e

dec_label_pc_805263e:                             ; preds = %dec_label_pc_805260e, %dec_label_pc_805263c
  %v0_8052643 = phi i32 [ %v4_8052612, %dec_label_pc_805260e ], [ %v0_805263c, %dec_label_pc_805263c ]
  store i32 %v0_80525ee, i32* @ebx, align 4
  store i32 %v0_80525ed, i32* @edi, align 4
  ret i32 %v0_8052643

; uselistorder directives
  uselistorder i32 %v2_8052624, { 1, 0, 2 }
  uselistorder i32 %v0_80525ee, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805263e, { 1, 0 }
  uselistorder label %dec_label_pc_805263c, { 1, 0 }
}

define i32 @function_8052644(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052644:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052644 = load i32, i32* @edi, align 4
  store i32 %v0_8052644, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805265c = load i32, i32* @ebx, align 4
  %v1_8052664 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8052664, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052664, -4095
  br i1 %tmp12, label %dec_label_pc_805267c, label %dec_label_pc_8052670

dec_label_pc_8052670:                             ; preds = %dec_label_pc_8052644
  %v1_8052670 = call i32 @function_8052be9(i32 %v0_805265c)
  %v0_8052675 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052675 = sub i32 0, %v0_8052675
  %v2_8052677 = inttoptr i32 %v1_8052670 to i32*
  store i32 %v1_8052675, i32* %v2_8052677, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052681.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805267c

dec_label_pc_805267c:                             ; preds = %dec_label_pc_8052644, %dec_label_pc_8052670
  %v2_8052681 = phi i32 [ %v0_8052644, %dec_label_pc_8052644 ], [ %v2_8052681.pre, %dec_label_pc_8052670 ]
  %v0_805267c = phi i32 [ %v1_8052664, %dec_label_pc_8052644 ], [ -1, %dec_label_pc_8052670 ]
  store i32 %v2_8052681, i32* %edi.global-to-local, align 4
  ret i32 %v0_805267c

; uselistorder directives
  uselistorder i32 %v1_8052664, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805267c, { 1, 0 }
}

define i32 @function_8052683(i8* %arg1) local_unnamed_addr {
dec_label_pc_8052683:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052683 = load i32, i32* @edi, align 4
  store i32 %v0_8052683, i32* %stack_var_-4, align 4
  %v4_8052687 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052687, i32* %edi.global-to-local, align 4
  %v0_805268b = load i32, i32* @ebx, align 4
  %v3_8052693 = call i32 @chdir(i8* %arg1)
  store i32 %v3_8052693, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052693, -4095
  br i1 %tmp9, label %dec_label_pc_80526ab, label %dec_label_pc_805269f

dec_label_pc_805269f:                             ; preds = %dec_label_pc_8052683
  %v1_805269f = call i32 @function_8052be9(i32 %v0_805268b)
  %v0_80526a4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80526a4 = sub i32 0, %v0_80526a4
  %v2_80526a6 = inttoptr i32 %v1_805269f to i32*
  store i32 %v1_80526a4, i32* %v2_80526a6, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80526af.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80526ab

dec_label_pc_80526ab:                             ; preds = %dec_label_pc_8052683, %dec_label_pc_805269f
  %v2_80526af = phi i32 [ %v0_8052683, %dec_label_pc_8052683 ], [ %v2_80526af.pre, %dec_label_pc_805269f ]
  %v0_80526ab = phi i32 [ %v3_8052693, %dec_label_pc_8052683 ], [ -1, %dec_label_pc_805269f ]
  store i32 %v2_80526af, i32* %edi.global-to-local, align 4
  ret i32 %v0_80526ab

; uselistorder directives
  uselistorder i32 %v3_8052693, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80526ab, { 1, 0 }
}

define i32 @function_80526b1(i32 %arg1) local_unnamed_addr {
dec_label_pc_80526b1:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80526b1 = load i32, i32* @edi, align 4
  store i32 %v0_80526b1, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80526b9 = load i32, i32* @ebx, align 4
  %v1_80526c1 = call i32 @close(i32 %arg1)
  store i32 %v0_80526b9, i32* @ebx, align 4
  store i32 %v1_80526c1, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80526c1, -4095
  br i1 %tmp9, label %dec_label_pc_80526d9, label %dec_label_pc_80526cd

dec_label_pc_80526cd:                             ; preds = %dec_label_pc_80526b1
  %v1_80526cd = call i32 @function_8052be9(i32 %v0_80526b9)
  %v0_80526d2 = load i32, i32* %edi.global-to-local, align 4
  %v1_80526d2 = sub i32 0, %v0_80526d2
  %v2_80526d4 = inttoptr i32 %v1_80526cd to i32*
  store i32 %v1_80526d2, i32* %v2_80526d4, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80526dd.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80526d9

dec_label_pc_80526d9:                             ; preds = %dec_label_pc_80526b1, %dec_label_pc_80526cd
  %v2_80526dd = phi i32 [ %v0_80526b1, %dec_label_pc_80526b1 ], [ %v2_80526dd.pre, %dec_label_pc_80526cd ]
  %v0_80526d9 = phi i32 [ %v1_80526c1, %dec_label_pc_80526b1 ], [ -1, %dec_label_pc_80526cd ]
  store i32 %v2_80526dd, i32* @edi, align 4
  ret i32 %v0_80526d9

; uselistorder directives
  uselistorder i32 %v1_80526c1, { 1, 0, 2 }
  uselistorder i32 %v0_80526b9, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80526d9, { 1, 0 }
}

define i32 @function_80526df() local_unnamed_addr {
dec_label_pc_80526df:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80526df = load i32, i32* @ebx, align 4
  store i32 %v0_80526df, i32* %stack_var_-4, align 4
  %v1_80526e8 = call i32 @fork(i32 %v0_80526df)
  store i32 %v1_80526e8, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80526e8, -4095
  br i1 %tmp7, label %dec_label_pc_80526ff, label %dec_label_pc_80526f3

dec_label_pc_80526f3:                             ; preds = %dec_label_pc_80526df
  %v1_80526f3 = call i32 @function_8052be9(i32 %v0_80526df)
  %v0_80526f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80526f8 = sub i32 0, %v0_80526f8
  %v2_80526fa = inttoptr i32 %v1_80526f3 to i32*
  store i32 %v1_80526f8, i32* %v2_80526fa, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052703.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80526ff

dec_label_pc_80526ff:                             ; preds = %dec_label_pc_80526df, %dec_label_pc_80526f3
  %v2_8052703 = phi i32 [ %v0_80526df, %dec_label_pc_80526df ], [ %v2_8052703.pre, %dec_label_pc_80526f3 ]
  %v0_80526ff = phi i32 [ %v1_80526e8, %dec_label_pc_80526df ], [ -1, %dec_label_pc_80526f3 ]
  store i32 %v2_8052703, i32* @ebx, align 4
  ret i32 %v0_80526ff

; uselistorder directives
  uselistorder i32 %v1_80526e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80526ff, { 1, 0 }
}

define i32 @function_8052705() local_unnamed_addr {
dec_label_pc_8052705:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052705 = load i32, i32* @ebx, align 4
  store i32 %v0_8052705, i32* %stack_var_-4, align 4
  %v1_805270e = call i32 @getpid(i32 %v0_8052705)
  store i32 %v1_805270e, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805270e, -4095
  br i1 %tmp7, label %dec_label_pc_8052725, label %dec_label_pc_8052719

dec_label_pc_8052719:                             ; preds = %dec_label_pc_8052705
  %v1_8052719 = call i32 @function_8052be9(i32 %v0_8052705)
  %v0_805271e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805271e = sub i32 0, %v0_805271e
  %v2_8052720 = inttoptr i32 %v1_8052719 to i32*
  store i32 %v1_805271e, i32* %v2_8052720, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052729.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052725

dec_label_pc_8052725:                             ; preds = %dec_label_pc_8052705, %dec_label_pc_8052719
  %v2_8052729 = phi i32 [ %v0_8052705, %dec_label_pc_8052705 ], [ %v2_8052729.pre, %dec_label_pc_8052719 ]
  %v0_8052725 = phi i32 [ %v1_805270e, %dec_label_pc_8052705 ], [ -1, %dec_label_pc_8052719 ]
  %v2_8052727 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052727, i32* @edx, align 4
  store i32 %v2_8052729, i32* @ebx, align 4
  ret i32 %v0_8052725

; uselistorder directives
  uselistorder i32 %v1_805270e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052725, { 1, 0 }
}

define i32 @function_805272b() local_unnamed_addr {
dec_label_pc_805272b:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805272b = load i32, i32* @ebx, align 4
  store i32 %v0_805272b, i32* %stack_var_-4, align 4
  %v1_8052734 = call i32 @getppid(i32 %v0_805272b)
  store i32 %v1_8052734, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052734, -4095
  br i1 %tmp7, label %dec_label_pc_805274b, label %dec_label_pc_805273f

dec_label_pc_805273f:                             ; preds = %dec_label_pc_805272b
  %v1_805273f = call i32 @function_8052be9(i32 %v0_805272b)
  %v0_8052744 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052744 = sub i32 0, %v0_8052744
  %v2_8052746 = inttoptr i32 %v1_805273f to i32*
  store i32 %v1_8052744, i32* %v2_8052746, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805274f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805274b

dec_label_pc_805274b:                             ; preds = %dec_label_pc_805272b, %dec_label_pc_805273f
  %v2_805274f = phi i32 [ %v0_805272b, %dec_label_pc_805272b ], [ %v2_805274f.pre, %dec_label_pc_805273f ]
  %v0_805274b = phi i32 [ %v1_8052734, %dec_label_pc_805272b ], [ -1, %dec_label_pc_805273f ]
  store i32 %v2_805274f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805274b

; uselistorder directives
  uselistorder i32 %v1_8052734, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805274b, { 1, 0 }
}

define i32 @function_8052751(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052751:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052751 = load i32, i32* @edi, align 4
  store i32 %v0_8052751, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052769 = load i32, i32* @ebx, align 4
  %v2_8052771 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052771, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8052771, -4095
  br i1 %tmp12, label %dec_label_pc_8052789, label %dec_label_pc_805277d

dec_label_pc_805277d:                             ; preds = %dec_label_pc_8052751
  %v1_805277d = call i32 @function_8052be9(i32 %v0_8052769)
  %v0_8052782 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052782 = sub i32 0, %v0_8052782
  %v2_8052784 = inttoptr i32 %v1_805277d to i32*
  store i32 %v1_8052782, i32* %v2_8052784, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805278e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052789

dec_label_pc_8052789:                             ; preds = %dec_label_pc_8052751, %dec_label_pc_805277d
  %v2_805278e = phi i32 [ %v0_8052751, %dec_label_pc_8052751 ], [ %v2_805278e.pre, %dec_label_pc_805277d ]
  %v0_8052789 = phi i32 [ %v2_8052771, %dec_label_pc_8052751 ], [ -1, %dec_label_pc_805277d ]
  store i32 %v2_805278e, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052789

; uselistorder directives
  uselistorder i32 %v2_8052771, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052789, { 1, 0 }
}

define i32 @function_8052790(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052790:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052790 = load i32, i32* @ebx, align 4
  store i32 %v0_8052790, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80527a3 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_80527a3, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80527a3, -4095
  br i1 %tmp9, label %dec_label_pc_80527bc, label %dec_label_pc_80527b0

dec_label_pc_80527b0:                             ; preds = %dec_label_pc_8052790
  %v1_80527b0 = call i32 @function_8052be9(i32 %v0_8052790)
  %v0_80527b5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80527b5 = sub i32 0, %v0_80527b5
  %v2_80527b7 = inttoptr i32 %v1_80527b0 to i32*
  store i32 %v1_80527b5, i32* %v2_80527b7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80527c0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80527bc

dec_label_pc_80527bc:                             ; preds = %dec_label_pc_8052790, %dec_label_pc_80527b0
  %v2_80527c0 = phi i32 [ %v0_8052790, %dec_label_pc_8052790 ], [ %v2_80527c0.pre, %dec_label_pc_80527b0 ]
  %v0_80527bc = phi i32 [ %v2_80527a3, %dec_label_pc_8052790 ], [ -1, %dec_label_pc_80527b0 ]
  %v2_80527be = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80527be, i32* @edx, align 4
  store i32 %v2_80527c0, i32* @ebx, align 4
  ret i32 %v0_80527bc

; uselistorder directives
  uselistorder i32 %v2_80527a3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80527bc, { 1, 0 }
}

define i32 @function_80527c2(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80527c2:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80527c3 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_80527c9 = sdiv i32 %sext, 16777216
  %v4_80527cd = ptrtoint i8* %arg1 to i32
  %v3_80527d1 = and i32 %arg2, 64
  %v4_80527d1 = icmp eq i32 %v3_80527d1, 0
  br i1 %v4_80527d1, label %dec_label_pc_80527e2, label %dec_label_pc_80527d6

dec_label_pc_80527d6:                             ; preds = %dec_label_pc_80527c2
  br label %dec_label_pc_80527e2

dec_label_pc_80527e2:                             ; preds = %dec_label_pc_80527c2, %dec_label_pc_80527d6
  store i32 %v4_80527cd, i32* %ebx.global-to-local, align 4
  %v5_80527ed = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_80527c9)
  store i32 %v5_80527ed, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_80527ed, -4095
  br i1 %tmp15, label %dec_label_pc_8052805, label %dec_label_pc_80527f9

dec_label_pc_80527f9:                             ; preds = %dec_label_pc_80527e2
  %v1_80527f9 = call i32 @function_8052be9(i32 %v0_80527c3)
  %v0_80527fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_80527fe = sub i32 0, %v0_80527fe
  %v2_8052800 = inttoptr i32 %v1_80527f9 to i32*
  store i32 %v1_80527fe, i32* %v2_8052800, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052805

dec_label_pc_8052805:                             ; preds = %dec_label_pc_80527e2, %dec_label_pc_80527f9
  %v0_8052805 = phi i32 [ %v5_80527ed, %dec_label_pc_80527e2 ], [ -1, %dec_label_pc_80527f9 ]
  store i32 %v0_80527c3, i32* @ebx, align 4
  ret i32 %v0_8052805

; uselistorder directives
  uselistorder i32 %v5_80527ed, { 1, 0, 2 }
  uselistorder i32 %v0_80527c3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052805, { 1, 0 }
  uselistorder label %dec_label_pc_80527e2, { 1, 0 }
}

define i32 @function_805280d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805280d:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805280e = load i32, i32* @esi, align 4
  store i32 %v0_805280e, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8052826 = load i32, i32* @ebx, align 4
  %v5_805282e = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_805282e, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_805282e, -4095
  br i1 %tmp12, label %dec_label_pc_8052846, label %dec_label_pc_805283a

dec_label_pc_805283a:                             ; preds = %dec_label_pc_805280d
  %v1_805283a = call i32 @function_8052be9(i32 %v0_8052826)
  %v0_805283f = load i32, i32* %esi.global-to-local, align 4
  %v1_805283f = sub i32 0, %v0_805283f
  %v2_8052841 = inttoptr i32 %v1_805283a to i32*
  store i32 %v1_805283f, i32* %v2_8052841, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052849.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052846

dec_label_pc_8052846:                             ; preds = %dec_label_pc_805280d, %dec_label_pc_805283a
  %v2_8052849 = phi i32 [ %v0_805280e, %dec_label_pc_805280d ], [ %v2_8052849.pre, %dec_label_pc_805283a ]
  %v0_8052846 = phi i32 [ %v5_805282e, %dec_label_pc_805280d ], [ -1, %dec_label_pc_805283a ]
  store i32 %v2_8052849, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052846

; uselistorder directives
  uselistorder i32 %v5_805282e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052846, { 1, 0 }
}

define i32 @function_805284c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805284c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805284c = load i32, i32* @edi, align 4
  store i32 %v0_805284c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805285c = load i32, i32* @ebx, align 4
  %v4_8052864 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052864, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052864, -4095
  br i1 %tmp12, label %dec_label_pc_805287c, label %dec_label_pc_8052870

dec_label_pc_8052870:                             ; preds = %dec_label_pc_805284c
  %v1_8052870 = call i32 @function_8052be9(i32 %v0_805285c)
  %v0_8052875 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052875 = sub i32 0, %v0_8052875
  %v2_8052877 = inttoptr i32 %v1_8052870 to i32*
  store i32 %v1_8052875, i32* %v2_8052877, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052880.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805287c

dec_label_pc_805287c:                             ; preds = %dec_label_pc_805284c, %dec_label_pc_8052870
  %v2_8052880 = phi i32 [ %v0_805284c, %dec_label_pc_805284c ], [ %v2_8052880.pre, %dec_label_pc_8052870 ]
  %v0_805287c = phi i32 [ %v4_8052864, %dec_label_pc_805284c ], [ -1, %dec_label_pc_8052870 ]
  store i32 %v2_8052880, i32* %edi.global-to-local, align 4
  ret i32 %v0_805287c

; uselistorder directives
  uselistorder i32 %v4_8052864, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805287c, { 1, 0 }
}

define i32 @function_8052882(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052882:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-4 = alloca i32, align 4
  %v0_8052882 = load i32, i32* @edi, align 4
  store i32 %v0_8052882, i32* %stack_var_-4, align 4
  %v4_8052886 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052886, i32* %edi.global-to-local, align 4
  %v0_8052892 = load i32, i32* @ebx, align 4
  %v7_805289a = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v7_805289a, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_805289a, -4095
  br i1 %tmp13, label %dec_label_pc_80528b2, label %dec_label_pc_80528a6

dec_label_pc_80528a6:                             ; preds = %dec_label_pc_8052882
  %v1_80528a6 = call i32 @function_8052be9(i32 %v0_8052892)
  %v0_80528ab = load i32, i32* %edi.global-to-local, align 4
  %v1_80528ab = sub i32 0, %v0_80528ab
  %v2_80528ad = inttoptr i32 %v1_80528a6 to i32*
  store i32 %v1_80528ab, i32* %v2_80528ad, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80528b6.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80528b2

dec_label_pc_80528b2:                             ; preds = %dec_label_pc_8052882, %dec_label_pc_80528a6
  %v2_80528b6 = phi i32 [ %v0_8052882, %dec_label_pc_8052882 ], [ %v2_80528b6.pre, %dec_label_pc_80528a6 ]
  %v0_80528b2 = phi i32 [ %v7_805289a, %dec_label_pc_8052882 ], [ -1, %dec_label_pc_80528a6 ]
  store i32 %v2_80528b6, i32* %edi.global-to-local, align 4
  ret i32 %v0_80528b2

; uselistorder directives
  uselistorder i32 %v7_805289a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80528b2, { 1, 0 }
}

define i32 @function_80528b8() local_unnamed_addr {
dec_label_pc_80528b8:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80528b9 = load i32, i32* @esi, align 4
  store i32 %v0_80528b9, i32* %stack_var_-8, align 4
  %v0_80528d1 = load i32, i32* @ebx, align 4
  %v1_80528d9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_80528d1, i32* @ebx, align 4
  store i32 %v1_80528d9, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_80528d9, -4095
  br i1 %tmp12, label %dec_label_pc_80528f1, label %dec_label_pc_80528e5

dec_label_pc_80528e5:                             ; preds = %dec_label_pc_80528b8
  %v1_80528e5 = call i32 @function_8052be9(i32 %v0_80528d1)
  %v0_80528ea = load i32, i32* %esi.global-to-local, align 4
  %v1_80528ea = sub i32 0, %v0_80528ea
  %v2_80528ec = inttoptr i32 %v1_80528e5 to i32*
  store i32 %v1_80528ea, i32* %v2_80528ec, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80528f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80528f1

dec_label_pc_80528f1:                             ; preds = %dec_label_pc_80528b8, %dec_label_pc_80528e5
  %v2_80528f4 = phi i32 [ %v0_80528b9, %dec_label_pc_80528b8 ], [ %v2_80528f4.pre, %dec_label_pc_80528e5 ]
  %v0_80528f1 = phi i32 [ %v1_80528d9, %dec_label_pc_80528b8 ], [ -1, %dec_label_pc_80528e5 ]
  store i32 %v2_80528f4, i32* @esi, align 4
  ret i32 %v0_80528f1

; uselistorder directives
  uselistorder i32 %v1_80528d9, { 1, 0, 2 }
  uselistorder i32 %v0_80528d1, { 1, 0 }
  uselistorder label %dec_label_pc_80528f1, { 1, 0 }
}

define i32 @function_80528f7() local_unnamed_addr {
dec_label_pc_80528f7:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80528f7 = load i32, i32* @ebx, align 4
  store i32 %v0_80528f7, i32* %stack_var_-4, align 4
  %v1_8052900 = call i32 @setsid(i32 %v0_80528f7)
  store i32 %v1_8052900, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052900, -4095
  br i1 %tmp7, label %dec_label_pc_8052917, label %dec_label_pc_805290b

dec_label_pc_805290b:                             ; preds = %dec_label_pc_80528f7
  %v1_805290b = call i32 @function_8052be9(i32 %v0_80528f7)
  %v0_8052910 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052910 = sub i32 0, %v0_8052910
  %v2_8052912 = inttoptr i32 %v1_805290b to i32*
  store i32 %v1_8052910, i32* %v2_8052912, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805291b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052917

dec_label_pc_8052917:                             ; preds = %dec_label_pc_80528f7, %dec_label_pc_805290b
  %v2_805291b = phi i32 [ %v0_80528f7, %dec_label_pc_80528f7 ], [ %v2_805291b.pre, %dec_label_pc_805290b ]
  %v0_8052917 = phi i32 [ %v1_8052900, %dec_label_pc_80528f7 ], [ -1, %dec_label_pc_805290b ]
  store i32 %v2_805291b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052917

; uselistorder directives
  uselistorder i32 %v1_8052900, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052917, { 1, 0 }
}

define i32 @function_805291d(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805291d:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805291e = load i32, i32* @esi, align 4
  %v4_8052922 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8052922, i32* @ecx, align 4
  %v2_805292e = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805292e, label %dec_label_pc_8052947, label %dec_label_pc_8052932

dec_label_pc_8052932:                             ; preds = %dec_label_pc_805291d
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052947, label %dec_label_pc_8052937

dec_label_pc_8052937:                             ; preds = %dec_label_pc_8052932
  %v1_8052937 = call i32 @function_8052be9(i32 %v0_805291e)
  %v1_805293c = inttoptr i32 %v1_8052937 to i32*
  store i32 22, i32* %v1_805293c, align 4
  br label %dec_label_pc_805296e

dec_label_pc_8052947:                             ; preds = %dec_label_pc_8052932, %dec_label_pc_805291d
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805294c = load i32, i32* @ebx, align 4
  %v7_8052954 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805294c, i32* @ebx, align 4
  store i32 %v7_8052954, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052954, -4095
  br i1 %tmp12, label %dec_label_pc_805296e, label %dec_label_pc_8052960

dec_label_pc_8052960:                             ; preds = %dec_label_pc_8052947
  %v1_8052960 = call i32 @function_8052be9(i32 %v0_805294c)
  %v0_8052965 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052965 = sub i32 0, %v0_8052965
  %v2_8052967 = inttoptr i32 %v1_8052960 to i32*
  store i32 %v1_8052965, i32* %v2_8052967, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805296e

dec_label_pc_805296e:                             ; preds = %dec_label_pc_8052960, %dec_label_pc_8052947, %dec_label_pc_8052937
  %storemerge = phi i32 [ -1, %dec_label_pc_8052937 ], [ %v7_8052954, %dec_label_pc_8052947 ], [ -1, %dec_label_pc_8052960 ]
  %v2_805296e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805296e, i32* @edx, align 4
  store i32 %v0_805291e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052954, { 1, 0, 2 }
  uselistorder i32 %v0_805294c, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8052972() local_unnamed_addr {
dec_label_pc_8052972:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052972 = load i32, i32* @edi, align 4
  store i32 %v0_8052972, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_805297a = load i32, i32* @ebx, align 4
  %v1_8052982 = inttoptr i32 %tmp to i32*
  %v2_8052982 = call i32 @time(i32* %v1_8052982)
  store i32 %v0_805297a, i32* @ebx, align 4
  store i32 %v2_8052982, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8052982, -4095
  br i1 %tmp9, label %dec_label_pc_805299a, label %dec_label_pc_805298e

dec_label_pc_805298e:                             ; preds = %dec_label_pc_8052972
  %v1_805298e = call i32 @function_8052be9(i32 %v0_805297a)
  %v0_8052993 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052993 = sub i32 0, %v0_8052993
  %v2_8052995 = inttoptr i32 %v1_805298e to i32*
  store i32 %v1_8052993, i32* %v2_8052995, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805299e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805299a

dec_label_pc_805299a:                             ; preds = %dec_label_pc_8052972, %dec_label_pc_805298e
  %v2_805299e = phi i32 [ %v0_8052972, %dec_label_pc_8052972 ], [ %v2_805299e.pre, %dec_label_pc_805298e ]
  %v0_805299a = phi i32 [ %v2_8052982, %dec_label_pc_8052972 ], [ -1, %dec_label_pc_805298e ]
  store i32 %v2_805299e, i32* @edi, align 4
  ret i32 %v0_805299a

; uselistorder directives
  uselistorder i32 %v2_8052982, { 1, 0, 2 }
  uselistorder i32 %v0_805297a, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805299a, { 1, 0 }
}

define i32 @function_80529a0(i8* %arg1) local_unnamed_addr {
dec_label_pc_80529a0:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80529a0 = load i32, i32* @edi, align 4
  store i32 %v0_80529a0, i32* %stack_var_-4, align 4
  %v4_80529a4 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80529a4, i32* %edi.global-to-local, align 4
  %v0_80529a8 = load i32, i32* @ebx, align 4
  %v3_80529b0 = call i32 @unlink(i8* %arg1)
  store i32 %v3_80529b0, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80529b0, -4095
  br i1 %tmp9, label %dec_label_pc_80529c8, label %dec_label_pc_80529bc

dec_label_pc_80529bc:                             ; preds = %dec_label_pc_80529a0
  %v1_80529bc = call i32 @function_8052be9(i32 %v0_80529a8)
  %v0_80529c1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80529c1 = sub i32 0, %v0_80529c1
  %v2_80529c3 = inttoptr i32 %v1_80529bc to i32*
  store i32 %v1_80529c1, i32* %v2_80529c3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80529cc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80529c8

dec_label_pc_80529c8:                             ; preds = %dec_label_pc_80529a0, %dec_label_pc_80529bc
  %v2_80529cc = phi i32 [ %v0_80529a0, %dec_label_pc_80529a0 ], [ %v2_80529cc.pre, %dec_label_pc_80529bc ]
  %v0_80529c8 = phi i32 [ %v3_80529b0, %dec_label_pc_80529a0 ], [ -1, %dec_label_pc_80529bc ]
  store i32 %v2_80529cc, i32* %edi.global-to-local, align 4
  ret i32 %v0_80529c8

; uselistorder directives
  uselistorder i32 %v3_80529b0, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80529c8, { 1, 0 }
}

define i32 @function_80529ce(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80529ce:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80529ce = load i32, i32* @edi, align 4
  store i32 %v0_80529ce, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80529de = load i32, i32* @ebx, align 4
  %v4_80529e6 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_80529e6, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80529e6, -4095
  br i1 %tmp12, label %dec_label_pc_80529fe, label %dec_label_pc_80529f2

dec_label_pc_80529f2:                             ; preds = %dec_label_pc_80529ce
  %v1_80529f2 = call i32 @function_8052be9(i32 %v0_80529de)
  %v0_80529f7 = load i32, i32* %edi.global-to-local, align 4
  %v1_80529f7 = sub i32 0, %v0_80529f7
  %v2_80529f9 = inttoptr i32 %v1_80529f2 to i32*
  store i32 %v1_80529f7, i32* %v2_80529f9, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052a02.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80529fe

dec_label_pc_80529fe:                             ; preds = %dec_label_pc_80529ce, %dec_label_pc_80529f2
  %v2_8052a02 = phi i32 [ %v0_80529ce, %dec_label_pc_80529ce ], [ %v2_8052a02.pre, %dec_label_pc_80529f2 ]
  %v0_80529fe = phi i32 [ %v4_80529e6, %dec_label_pc_80529ce ], [ -1, %dec_label_pc_80529f2 ]
  store i32 %v2_8052a02, i32* %edi.global-to-local, align 4
  ret i32 %v0_80529fe

; uselistorder directives
  uselistorder i32 %v4_80529e6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80529fe, { 1, 0 }
}

define i32 @function_8052a04(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052a04:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_8052a06 = load i32, i32* @ebx, align 4
  %v12_8052a07 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp3, i32* @edi, align 4
  %v2_8052a0e = load i32, i32* %arg1, align 4
  %v12_8052a0e = icmp eq i32 %v2_8052a0e, -1
  %v1_8052a11 = icmp eq i1 %v12_8052a0e, false
  br i1 %v1_8052a11, label %dec_label_pc_8052a23, label %dec_label_pc_8052a13

dec_label_pc_8052a13:                             ; preds = %dec_label_pc_8052a04
  %v1_8052a13 = call i32 @function_8052be9(i32 %v0_8052a06)
  %v1_8052a18 = inttoptr i32 %v1_8052a13 to i32*
  store i32 9, i32* %v1_8052a18, align 4
  br label %dec_label_pc_8052a6d

dec_label_pc_8052a23:                             ; preds = %dec_label_pc_8052a04
  %v1_8052a23 = add i32 %tmp3, 24
  store i32 %v12_8052a07, i32* @esi, align 4
  %v2_8052a32 = call i32 @function_8054570(i32 %v12_8052a07, i32 134563181)
  %v1_8052a3a = call i32 @function_805456d(i32 %v1_8052a23)
  store i32 %v1_8052a3a, i32* @eax, align 4
  %v0_8052a3f = load i32, i32* @edi, align 4
  %v1_8052a3f = inttoptr i32 %v0_8052a3f to i32*
  %v2_8052a3f = load i32, i32* %v1_8052a3f, align 4
  store i32 %v2_8052a3f, i32* @ebx, align 4
  store i32 -1, i32* %v1_8052a3f, align 4
  %v2_8052a4c = call i32 @function_8054570(i32 %v12_8052a07, i32 1)
  %v0_8052a52 = load i32, i32* @edi, align 4
  %v1_8052a52 = add i32 %v0_8052a52, 12
  %v2_8052a52 = inttoptr i32 %v1_8052a52 to i32*
  %v3_8052a52 = load i32, i32* %v2_8052a52, align 4
  %v1_8052a55 = call i32 @function_8053e09(i32 %v3_8052a52)
  %v0_8052a5a = load i32, i32* @edi, align 4
  %v1_8052a5d = call i32 @function_8053e09(i32 %v0_8052a5a)
  %v0_8052a62 = load i32, i32* @ebx, align 4
  %v1_8052a65 = call i32 @function_80526b1(i32 %v0_8052a62)
  br label %dec_label_pc_8052a6d

dec_label_pc_8052a6d:                             ; preds = %dec_label_pc_8052a13, %dec_label_pc_8052a23
  %v0_8052a73 = phi i32 [ -1, %dec_label_pc_8052a13 ], [ %v1_8052a65, %dec_label_pc_8052a23 ]
  ret i32 %v0_8052a73

; uselistorder directives
  uselistorder label %dec_label_pc_8052a6d, { 1, 0 }
}

define i32 @function_8052a74(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a74:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8052a85 = inttoptr i32 %arg1 to i8*
  %v3_8052a85 = call i32 @function_80527c2(i8* %v2_8052a85, i32 67584)
  store i32 %v3_8052a85, i32* %eax.global-to-local, align 4
  store i32 %v3_8052a85, i32* @edi, align 4
  %v2_8052a8f = icmp slt i32 %v3_8052a85, 0
  br i1 %v2_8052a8f, label %dec_label_pc_8052b5c, label %dec_label_pc_8052a97

dec_label_pc_8052a97:                             ; preds = %dec_label_pc_8052a74
  %v0_8052a97 = load i32, i32* @ebx, align 4
  %v2_8052a99 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_8052a99, i32* %eax.global-to-local, align 4
  store i32 %v3_8052a85, i32* %stack_var_-124, align 4
  %v4_8052a9f = call i32 @function_805496a(i32 %v3_8052a85, i32 %v2_8052a99, i32 %v0_8052a97, i32 %v0_8052a97)
  store i32 %v4_8052a9f, i32* %eax.global-to-local, align 4
  %v2_8052aa7 = icmp slt i32 %v4_8052a9f, 0
  br i1 %v2_8052aa7, label %dec_label_pc_8052abd, label %dec_label_pc_8052aab

dec_label_pc_8052aab:                             ; preds = %dec_label_pc_8052a97
  %v0_8052ab0 = load i32, i32* @edi, align 4
  store i32 %v0_8052ab0, i32* %stack_var_-124, align 4
  %v3_8052ab1 = call i32 @function_80525ed(i32 %v0_8052ab0, i32 2, i32 1)
  store i32 %v3_8052ab1, i32* %eax.global-to-local, align 4
  %v2_8052ab9 = icmp slt i32 %v3_8052ab1, 0
  %v1_8052abb = icmp eq i1 %v2_8052ab9, false
  br i1 %v1_8052abb, label %dec_label_pc_8052ad3, label %dec_label_pc_8052abd

dec_label_pc_8052abd:                             ; preds = %dec_label_pc_8052aab, %dec_label_pc_8052a97
  %v0_8052abd = load i32, i32* %stack_var_-124, align 4
  %v1_8052abd = call i32 @function_8052be9(i32 %v0_8052abd)
  store i32 %v1_8052abd, i32* %eax.global-to-local, align 4
  store i32 %v1_8052abd, i32* @ebx, align 4
  %v1_8052ac7 = inttoptr i32 %v1_8052abd to i32*
  %v2_8052ac7 = load i32, i32* %v1_8052ac7, align 4
  %v0_8052ac9 = load i32, i32* @edi, align 4
  store i32 %v0_8052ac9, i32* %stack_var_-124, align 4
  %v1_8052aca = call i32 @function_80526b1(i32 %v0_8052ac9)
  store i32 %v1_8052aca, i32* %eax.global-to-local, align 4
  %v1_8052acf = load i32, i32* @ebx, align 4
  %v2_8052acf = inttoptr i32 %v1_8052acf to i32*
  store i32 %v2_8052ac7, i32* %v2_8052acf, align 4
  br label %dec_label_pc_8052b48

dec_label_pc_8052ad3:                             ; preds = %dec_label_pc_8052aab
  store i32 48, i32* %stack_var_-124, align 4
  %v1_8052ad8 = call i32 @function_8053044(i32 48)
  store i32 %v1_8052ad8, i32* %eax.global-to-local, align 4
  store i32 %v1_8052ad8, i32* @ebx, align 4
  %v1_8052ae2 = icmp eq i32 %v1_8052ad8, 0
  br i1 %v1_8052ae2, label %dec_label_pc_8052b34, label %dec_label_pc_8052ae6

dec_label_pc_8052ae6:                             ; preds = %dec_label_pc_8052ad3
  %v0_8052ae6 = load i32, i32* @edi, align 4
  %v2_8052ae6 = inttoptr i32 %v1_8052ad8 to i32*
  store i32 %v0_8052ae6, i32* %v2_8052ae6, align 4
  %v1_8052ae8 = add i32 %v1_8052ad8, 16
  %v2_8052ae8 = inttoptr i32 %v1_8052ae8 to i32*
  store i32 0, i32* %v2_8052ae8, align 4
  %v1_8052aef = add i32 %v1_8052ad8, 8
  %v2_8052aef = inttoptr i32 %v1_8052aef to i32*
  store i32 0, i32* %v2_8052aef, align 4
  %v1_8052af6 = add i32 %v1_8052ad8, 4
  %v2_8052af6 = inttoptr i32 %v1_8052af6 to i32*
  store i32 0, i32* %v2_8052af6, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8052b01 = load i32, i32* @ebx, align 4
  %v2_8052b01 = add i32 %v1_8052b01, 20
  %v3_8052b01 = inttoptr i32 %v2_8052b01 to i32*
  store i32 %tmp, i32* %v3_8052b01, align 4
  %v0_8052b04 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052b09 = icmp ugt i32 %v0_8052b04, 511
  br i1 %v6_8052b09, label %dec_label_pc_8052b12, label %dec_label_pc_8052b0b

dec_label_pc_8052b0b:                             ; preds = %dec_label_pc_8052ae6
  %v0_8052b0b = load i32, i32* @ebx, align 4
  %v1_8052b0b = add i32 %v0_8052b0b, 20
  %v2_8052b0b = inttoptr i32 %v1_8052b0b to i32*
  store i32 512, i32* %v2_8052b0b, align 4
  br label %dec_label_pc_8052b12

dec_label_pc_8052b12:                             ; preds = %dec_label_pc_8052ae6, %dec_label_pc_8052b0b
  %v0_8052b14 = load i32, i32* @ebx, align 4
  %v1_8052b14 = add i32 %v0_8052b14, 20
  %v2_8052b14 = inttoptr i32 %v1_8052b14 to i32*
  %v3_8052b14 = load i32, i32* %v2_8052b14, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_8052b19 = call i32 @function_80537b8(i64 1, i32 %v3_8052b14)
  store i32 %v3_8052b19, i32* %eax.global-to-local, align 4
  %v1_8052b21 = load i32, i32* @ebx, align 4
  %v2_8052b21 = add i32 %v1_8052b21, 12
  %v3_8052b21 = inttoptr i32 %v2_8052b21 to i32*
  store i32 %v3_8052b19, i32* %v3_8052b21, align 4
  %v1_8052b24 = icmp eq i32 %v3_8052b19, 0
  %v1_8052b26 = icmp eq i1 %v1_8052b24, false
  br i1 %v1_8052b26, label %dec_label_pc_8052b4c, label %dec_label_pc_8052b28

dec_label_pc_8052b28:                             ; preds = %dec_label_pc_8052b12
  %v0_8052b2b = load i32, i32* @ebx, align 4
  store i32 %v0_8052b2b, i32* %stack_var_-124, align 4
  %v1_8052b2c = call i32 @function_8053e09(i32 %v0_8052b2b)
  store i32 %v1_8052b2c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b34

dec_label_pc_8052b34:                             ; preds = %dec_label_pc_8052ad3, %dec_label_pc_8052b28
  %v0_8052b37 = load i32, i32* @edi, align 4
  store i32 %v0_8052b37, i32* %stack_var_-124, align 4
  %v1_8052b38 = call i32 @function_80526b1(i32 %v0_8052b37)
  store i32 %v1_8052b38, i32* %eax.global-to-local, align 4
  %v1_8052b3d = call i32 @function_8052be9(i32 %v0_8052b37)
  store i32 %v1_8052b3d, i32* %eax.global-to-local, align 4
  %v1_8052b42 = inttoptr i32 %v1_8052b3d to i32*
  store i32 12, i32* %v1_8052b42, align 4
  br label %dec_label_pc_8052b48

dec_label_pc_8052b48:                             ; preds = %dec_label_pc_8052abd, %dec_label_pc_8052b34
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052b59

dec_label_pc_8052b4c:                             ; preds = %dec_label_pc_8052b12
  %v0_8052b4e = load i32, i32* @ebx, align 4
  %v1_8052b4e = add i32 %v0_8052b4e, 24
  store i32 %v1_8052b4e, i32* %eax.global-to-local, align 4
  store i32 %v1_8052b4e, i32* %stack_var_-124, align 4
  %v1_8052b54 = call i32 @function_805456d(i32 %v1_8052b4e)
  store i32 %v1_8052b54, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b59

dec_label_pc_8052b59:                             ; preds = %dec_label_pc_8052b48, %dec_label_pc_8052b4c
  br label %dec_label_pc_8052b5c

dec_label_pc_8052b5c:                             ; preds = %dec_label_pc_8052a74, %dec_label_pc_8052b59
  %v0_8052b5f = load i32, i32* @ebx, align 4
  store i32 %v0_8052b5f, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052b5f

; uselistorder directives
  uselistorder i32 %v3_8052b19, { 1, 0, 2 }
  uselistorder i32 %v1_8052ad8, { 0, 5, 2, 1, 4, 3, 6 }
  uselistorder i32 %v1_8052abd, { 1, 0, 2 }
  uselistorder i32 %v3_8052a85, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 512, { 4, 5, 2, 0, 1, 3 }
  uselistorder i32 (i32)* @function_80526b1, { 16, 15, 14, 13, 3, 10, 9, 6, 8, 5, 7, 12, 11, 4, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052b5c, { 1, 0 }
  uselistorder label %dec_label_pc_8052b59, { 1, 0 }
  uselistorder label %dec_label_pc_8052b48, { 1, 0 }
  uselistorder label %dec_label_pc_8052b34, { 1, 0 }
  uselistorder label %dec_label_pc_8052b12, { 1, 0 }
}

define i32 @function_8052b65(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052b65:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v1_8052b6e = add i32 %tmp3, 24
  store i32 %v1_8052b6e, i32* @ebx, align 4
  %v2_8052b77 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052b77, i32* @eax, align 4
  %v2_8052b7c = call i32 @function_8054570(i32 %v2_8052b77, i32 134563181)
  %v0_8052b81 = load i32, i32* @ebx, align 4
  %v1_8052b84 = call i32 @function_805456d(i32 %v0_8052b81)
  br label %dec_label_pc_8052b8c

dec_label_pc_8052b8c:                             ; preds = %dec_label_pc_8052bb7, %dec_label_pc_8052b65
  %v0_8052b8c = load i32, i32* @esi, align 4
  %v1_8052b8c = add i32 %v0_8052b8c, 8
  %v2_8052b8c = inttoptr i32 %v1_8052b8c to i32*
  %v3_8052b8c = load i32, i32* %v2_8052b8c, align 4
  %v2_8052b8f = add i32 %v0_8052b8c, 4
  %v3_8052b8f = inttoptr i32 %v2_8052b8f to i32*
  %v4_8052b8f = load i32, i32* %v3_8052b8f, align 4
  %v6_8052b92 = icmp ugt i32 %v3_8052b8c, %v4_8052b8f
  br i1 %v6_8052b92, label %dec_label_pc_8052bb7, label %dec_label_pc_8052b94

dec_label_pc_8052b94:                             ; preds = %dec_label_pc_8052b8c
  %v0_8052b94 = load i32, i32* @edx, align 4
  %v1_8052b95 = add i32 %v0_8052b8c, 20
  %v2_8052b95 = inttoptr i32 %v1_8052b95 to i32*
  %v3_8052b95 = load i32, i32* %v2_8052b95, align 4
  %v1_8052b98 = add i32 %v0_8052b8c, 12
  %v2_8052b98 = inttoptr i32 %v1_8052b98 to i32*
  %v3_8052b98 = load i32, i32* %v2_8052b98, align 4
  %v1_8052b9b = inttoptr i32 %v0_8052b8c to i32*
  %v2_8052b9b = load i32, i32* %v1_8052b9b, align 4
  %v4_8052b9d = call i32 @function_80549b2(i32 %v2_8052b9b, i32 %v3_8052b98, i32 %v3_8052b95, i32 %v0_8052b94)
  %tmp13 = icmp slt i32 %v4_8052b9d, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8052bad, label %dec_label_pc_8052ba9

dec_label_pc_8052ba9:                             ; preds = %dec_label_pc_8052b94
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052bd3

dec_label_pc_8052bad:                             ; preds = %dec_label_pc_8052b94
  %v1_8052bad = load i32, i32* @esi, align 4
  %v2_8052bad = add i32 %v1_8052bad, 8
  %v3_8052bad = inttoptr i32 %v2_8052bad to i32*
  store i32 %v4_8052b9d, i32* %v3_8052bad, align 4
  %v0_8052bb0 = load i32, i32* @esi, align 4
  %v1_8052bb0 = add i32 %v0_8052bb0, 4
  %v2_8052bb0 = inttoptr i32 %v1_8052bb0 to i32*
  store i32 0, i32* %v2_8052bb0, align 4
  %v0_8052bb7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052bb7

dec_label_pc_8052bb7:                             ; preds = %dec_label_pc_8052b8c, %dec_label_pc_8052bad
  %v1_8052bc5 = phi i32 [ %v0_8052b8c, %dec_label_pc_8052b8c ], [ %v0_8052bb7.pre, %dec_label_pc_8052bad ]
  %v1_8052bb7 = add i32 %v1_8052bc5, 4
  %v2_8052bb7 = inttoptr i32 %v1_8052bb7 to i32*
  %v3_8052bb7 = load i32, i32* %v2_8052bb7, align 4
  %v2_8052bbc = add i32 %v1_8052bc5, 12
  %v3_8052bbc = inttoptr i32 %v2_8052bbc to i32*
  %v4_8052bbc = load i32, i32* %v3_8052bbc, align 4
  %v5_8052bbc = add i32 %v4_8052bbc, %v3_8052bb7
  store i32 %v5_8052bbc, i32* @ebx, align 4
  %v1_8052bbf = add i32 %v5_8052bbc, 8
  %v2_8052bbf = inttoptr i32 %v1_8052bbf to i16*
  %v3_8052bbf = load i16, i16* %v2_8052bbf, align 2
  %v4_8052bbf = zext i16 %v3_8052bbf to i32
  store i32 %v4_8052bbf, i32* @edx, align 4
  %v2_8052bc3 = add i32 %v4_8052bbf, %v3_8052bb7
  store i32 %v2_8052bc3, i32* %v2_8052bb7, align 4
  %v0_8052bc8 = load i32, i32* @ebx, align 4
  %v1_8052bc8 = add i32 %v0_8052bc8, 4
  %v2_8052bc8 = inttoptr i32 %v1_8052bc8 to i32*
  %v3_8052bc8 = load i32, i32* %v2_8052bc8, align 4
  %v1_8052bcb = load i32, i32* @esi, align 4
  %v2_8052bcb = add i32 %v1_8052bcb, 16
  %v3_8052bcb = inttoptr i32 %v2_8052bcb to i32*
  store i32 %v3_8052bc8, i32* %v3_8052bcb, align 4
  %v0_8052bce = load i32, i32* @ebx, align 4
  %v1_8052bce = inttoptr i32 %v0_8052bce to i32*
  %v2_8052bce = load i32, i32* %v1_8052bce, align 4
  %v3_8052bce = icmp eq i32 %v2_8052bce, 0
  br i1 %v3_8052bce, label %dec_label_pc_8052b8c, label %dec_label_pc_8052bd3.loopexit

dec_label_pc_8052bd3.loopexit:                    ; preds = %dec_label_pc_8052bb7
  br label %dec_label_pc_8052bd3

dec_label_pc_8052bd3:                             ; preds = %dec_label_pc_8052bd3.loopexit, %dec_label_pc_8052ba9
  store i32 %v2_8052b77, i32* @eax, align 4
  %v2_8052bdc = call i32 @function_8054570(i32 %v2_8052b77, i32 1)
  %v0_8052be1 = load i32, i32* @ebx, align 4
  ret i32 %v0_8052be1

; uselistorder directives
  uselistorder i32 %v1_8052bc5, { 1, 0 }
  uselistorder i32 %v0_8052b8c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_8052bb7, { 1, 0 }
}

define i32 @function_8052be9(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052be9:
  ret i32 ptrtoint (i32* @global_var_8056174.45 to i32)
}

define i32 @function_8052bef() local_unnamed_addr {
dec_label_pc_8052bef:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_8052bf7 = bitcast i32* %stack_var_-16 to %tms*
  %v2_8052bf7 = call i32 @function_8054d87(%tms* %v1_8052bf7)
  %v4_8052bfc = trunc i64 %tmp to i32
  %v4_8052c00 = load i32, i32* %stack_var_-16, align 4
  %v5_8052c00 = add i32 %v4_8052c00, %v4_8052bfc
  %v3_8052c07 = mul i32 %v5_8052c00, 10000
  %v1_8052c0d = and i32 %v3_8052c07, 2147483632
  ret i32 %v1_8052c0d

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8052c13(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052c13:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052c14 = load i32, i32* @esi, align 4
  store i32 %v0_8052c14, i32* %stack_var_-8, align 4
  %v4_8052c15 = ptrtoint i8* %arg1 to i32
  %v9_8052c21 = icmp ugt i8* %tmp3, %arg1
  %v1_8052c23 = icmp eq i1 %v9_8052c21, false
  br i1 %v1_8052c23, label %dec_label_pc_8052c2b, label %dec_label_pc_8052c25

dec_label_pc_8052c25:                             ; preds = %dec_label_pc_8052c13
  %v7_8052c27 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_8052c37

dec_label_pc_8052c2b:                             ; preds = %dec_label_pc_8052c13
  %v3_8052c2b = add i32 %arg2, -1
  %v4_8052c2b = add i32 %v3_8052c2b, %arg3
  %v5_8052c2b = inttoptr i32 %v4_8052c2b to i8*
  %v3_8052c2f = add i32 %v4_8052c15, -1
  %v4_8052c2f = add i32 %v3_8052c2f, %arg3
  %v5_8052c2f = inttoptr i32 %v4_8052c2f to i8*
  %v7_8052c34 = call i8* @_memcpy(i8* %v5_8052c2f, i8* %v5_8052c2b, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052c37

dec_label_pc_8052c37:                             ; preds = %dec_label_pc_8052c25, %dec_label_pc_8052c2b
  %v2_8052c37 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052c37, i32* @esi, align 4
  ret i32 %v4_8052c15

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052c37, { 1, 0 }
}

define i32 @function_8052c3a(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052c3a:
  %v0_8052c3a = load i32, i32* @edi, align 4
  %v4_8052c43 = ptrtoint i8* %arg1 to i32
  %v5_8052c47 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_8052c3a, i32* @edi, align 4
  ret i32 %v4_8052c43

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_8052c4f(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052c4f:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052c52 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8052c5b = inttoptr i32 %arg1 to i8*
  %v3_8052c5b = call i32 @function_8054e59(i8* %v2_8052c5b, i32 %v2_8052c52)
  %v1_8052c66 = icmp eq i32 %v3_8052c5b, 0
  br i1 %v1_8052c66, label %dec_label_pc_8052c6e, label %dec_label_pc_8052c6a

dec_label_pc_8052c6a:                             ; preds = %dec_label_pc_8052c4f
  %v3_8052c6a = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c6e

dec_label_pc_8052c6e:                             ; preds = %dec_label_pc_8052c4f, %dec_label_pc_8052c6a
  %v0_8052c6e = phi i32 [ -1, %dec_label_pc_8052c4f ], [ %v3_8052c6a, %dec_label_pc_8052c6a ]
  ret i32 %v0_8052c6e

; uselistorder directives
  uselistorder label %dec_label_pc_8052c6e, { 1, 0 }
}

define i32 @function_8052c74(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052c74:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052c8f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052c96 = call i32 @function_80548a3(i32 5, i32 %v2_8052c8f)
  ret i32 %v2_8052c96

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052c9f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052c9f:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052cba = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052cc1 = call i32 @function_80548a3(i32 2, i32 %v2_8052cba)
  ret i32 %v2_8052cc1

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052cca(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052cca:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052ce5 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052cec = call i32 @function_80548a3(i32 3, i32 %v2_8052ce5)
  ret i32 %v2_8052cec

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052cf5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052cf5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052d10 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052d17 = call i32 @function_80548a3(i32 6, i32 %v2_8052d10)
  ret i32 %v2_8052d17

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052d20() local_unnamed_addr {
dec_label_pc_8052d20:
  %stack_var_-20 = alloca i32, align 4
  %v2_8052d4b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052d52 = call i32 @function_80548a3(i32 15, i32 %v2_8052d4b)
  ret i32 %v2_8052d52
}

define i32 @function_8052d5b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052d5b:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_8052d6e = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052d75 = call i32 @function_80548a3(i32 4, i32 %v2_8052d6e)
  ret i32 %v2_8052d75

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_8052d7e() local_unnamed_addr {
dec_label_pc_8052d7e:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052da1 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052da8 = call i32 @function_80548a3(i32 10, i32 %v2_8052da1)
  ret i32 %v2_8052da8
}

define i32 @function_8052db1() local_unnamed_addr {
dec_label_pc_8052db1:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052de4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052deb = call i32 @function_80548a3(i32 12, i32 %v2_8052de4)
  ret i32 %v2_8052deb
}

define i32 @function_8052df4() local_unnamed_addr {
dec_label_pc_8052df4:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052e17 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052e1e = call i32 @function_80548a3(i32 9, i32 %v2_8052e17)
  ret i32 %v2_8052e1e
}

define i32 @function_8052e27() local_unnamed_addr {
dec_label_pc_8052e27:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052e5a = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052e61 = call i32 @function_80548a3(i32 11, i32 %v2_8052e5a)
  ret i32 %v2_8052e61
}

define i32 @function_8052e6a() local_unnamed_addr {
dec_label_pc_8052e6a:
  %stack_var_-20 = alloca i32, align 4
  %v2_8052e95 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052e9c = call i32 @function_80548a3(i32 14, i32 %v2_8052e95)
  ret i32 %v2_8052e9c
}

define i32 @function_8052ea5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052ea5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052ec0 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052ec7 = call i32 @function_80548a3(i32 1, i32 %v2_8052ec0)
  ret i32 %v2_8052ec7

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_80548a3, { 5, 4, 7, 3, 6, 2, 11, 1, 8, 0, 10, 9 }
}

define i32 @function_8052ed0(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052ed0:
  %v0_8052ed3 = call i32 @function_8052705()
  %v0_8052ed8 = load i32, i32* @edx, align 4
  %v4_8052edf = call i32 @function_8052790(i32 %v0_8052ed3, i32 %arg1, i32 %v0_8052ed8, i32 %v0_8052ed8)
  ret i32 %v4_8052edf
}

define i32 @function_8052ee8(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052ee8:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052f00, label %dec_label_pc_8052ef3

dec_label_pc_8052ef3:                             ; preds = %dec_label_pc_8052ee8
  %v1_8052ef3 = add i32 %arg1, -64
  %v3_8052ef3 = sub i32 63, %arg1
  %v4_8052ef3 = and i32 %v3_8052ef3, %arg1
  %v5_8052ef3 = icmp slt i32 %v4_8052ef3, 0
  %v6_8052ef3 = icmp eq i32 %v1_8052ef3, 0
  %v7_8052ef3 = icmp slt i32 %v1_8052ef3, 0
  %v3_8052ef6 = icmp eq i1 %v7_8052ef3, %v5_8052ef3
  %v4_8052ef6 = icmp eq i1 %v6_8052ef3, false
  %v5_8052ef6 = and i1 %v4_8052ef6, %v3_8052ef6
  br i1 %v5_8052ef6, label %dec_label_pc_8052f00, label %dec_label_pc_8052ef8

dec_label_pc_8052ef8:                             ; preds = %dec_label_pc_8052ef3
  %v4_8052efb = call i32 @function_8052ffe(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052f00

dec_label_pc_8052f00:                             ; preds = %dec_label_pc_8052ef3, %dec_label_pc_8052ee8, %dec_label_pc_8052ef8
  %v1_8052f00 = call i32 @function_8052be9(i32 ptrtoint (i32* @0 to i32))
  %v1_8052f05 = inttoptr i32 %v1_8052f00 to i32*
  store i32 22, i32* %v1_8052f05, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052ef3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052f00, { 2, 0, 1 }
}

define i32 @function_8052f12(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052f12:
  %v3_8052f20 = inttoptr i32 %arg1 to i8*
  %v4_8052f20 = call i32 @function_8052c3a(i8* %v3_8052f20, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8052f2b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052f2b:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052f2b = load i32, i32* @ebx, align 4
  %v15_8052f2c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052f40 = icmp eq i32 %arg2, -1
  br i1 %v10_8052f40, label %dec_label_pc_8052f4e, label %dec_label_pc_8052f45

dec_label_pc_8052f45:                             ; preds = %dec_label_pc_8052f2b
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_8052f4e, label %dec_label_pc_8052f49

dec_label_pc_8052f49:                             ; preds = %dec_label_pc_8052f45
  %v7_8052f4c = icmp sgt i32 %arg1, 64
  br i1 %v7_8052f4c, label %dec_label_pc_8052f4e, label %dec_label_pc_8052f69.lr.ph

dec_label_pc_8052f4e:                             ; preds = %dec_label_pc_8052f49, %dec_label_pc_8052f45, %dec_label_pc_8052f2b
  %v1_8052f4e = call i32 @function_8052be9(i32 %v0_8052f2b)
  store i32 %v1_8052f4e, i32* %eax.global-to-local, align 4
  %v1_8052f53 = inttoptr i32 %v1_8052f4e to i32*
  store i32 22, i32* %v1_8052f53, align 4
  br label %dec_label_pc_8052fcf

dec_label_pc_8052f69.lr.ph:                       ; preds = %dec_label_pc_8052f49
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052f6927 = add i32 %v15_8052f2c, 284
  %v5_8052f6928 = inttoptr i32 %v4_8052f6927 to i32*
  store i32 0, i32* %v5_8052f6928, align 4
  %v0_8052f7429 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f7430 = add i32 %v0_8052f7429, -1
  %v9_8052f7431 = icmp slt i32 %v1_8052f7430, 0
  store i32 %v1_8052f7430, i32* %eax.global-to-local, align 4
  %v1_8052f7532 = icmp eq i1 %v9_8052f7431, false
  br i1 %v1_8052f7532, label %dec_label_pc_8052f69.dec_label_pc_8052f69_crit_edge, label %dec_label_pc_8052f77

dec_label_pc_8052f69.dec_label_pc_8052f69_crit_edge: ; preds = %dec_label_pc_8052f69.lr.ph, %dec_label_pc_8052f69.dec_label_pc_8052f69_crit_edge
  %v1_8052f7433 = phi i32 [ %v1_8052f74, %dec_label_pc_8052f69.dec_label_pc_8052f69_crit_edge ], [ %v1_8052f7430, %dec_label_pc_8052f69.lr.ph ]
  %v0_8052f69.pre = load i32, i32* @esp, align 4
  %v2_8052f69 = mul i32 %v1_8052f7433, 4
  %v3_8052f69 = add i32 %v0_8052f69.pre, 160
  %v4_8052f69 = add i32 %v3_8052f69, %v2_8052f69
  %v5_8052f69 = inttoptr i32 %v4_8052f69 to i32*
  store i32 0, i32* %v5_8052f69, align 4
  %v0_8052f74 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f74 = add i32 %v0_8052f74, -1
  %v9_8052f74 = icmp slt i32 %v1_8052f74, 0
  store i32 %v1_8052f74, i32* %eax.global-to-local, align 4
  %v1_8052f75 = icmp eq i1 %v9_8052f74, false
  br i1 %v1_8052f75, label %dec_label_pc_8052f69.dec_label_pc_8052f69_crit_edge, label %dec_label_pc_8052f77

dec_label_pc_8052f77:                             ; preds = %dec_label_pc_8052f69.dec_label_pc_8052f69_crit_edge, %dec_label_pc_8052f69.lr.ph
  %v0_8052f77 = load i32, i32* @edx, align 4
  %v2_8052f7a = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8052f7a, i32* %eax.global-to-local, align 4
  %v4_8052f82 = call i32 @function_8052ffe(i32 %v2_8052f7a, i32 %arg1, i32 %v0_8052f77, i32 %v0_8052f77)
  store i32 %v4_8052f82, i32* %eax.global-to-local, align 4
  %v2_8052f8a = icmp slt i32 %v4_8052f82, 0
  br i1 %v2_8052f8a, label %dec_label_pc_8052fcf, label %dec_label_pc_8052f8e

dec_label_pc_8052f8e:                             ; preds = %dec_label_pc_8052f77
  %v4_8052f96 = call i32 @function_8052fda(i32 ptrtoint (i32* @global_var_8056360.46 to i32), i32 %arg1, i32 %v4_8052f82, i32 %v4_8052f82)
  %v2_8052faf = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052fb4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052fb4, i32* %eax.global-to-local, align 4
  %v4_8052fbd = call i32 @function_80547af(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052faf)
  store i32 %v4_8052fbd, i32* %eax.global-to-local, align 4
  %v2_8052fc5 = icmp slt i32 %v4_8052fbd, 0
  br i1 %v2_8052fc5, label %dec_label_pc_8052fcf, label %dec_label_pc_8052fc9

dec_label_pc_8052fc9:                             ; preds = %dec_label_pc_8052f8e
  %v3_8052fc9 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052fd2

dec_label_pc_8052fcf:                             ; preds = %dec_label_pc_8052f8e, %dec_label_pc_8052f77, %dec_label_pc_8052f4e
  br label %dec_label_pc_8052fd2

dec_label_pc_8052fd2:                             ; preds = %dec_label_pc_8052fc9, %dec_label_pc_8052fcf
  %storemerge = phi i32 [ -1, %dec_label_pc_8052fcf ], [ %v3_8052fc9, %dec_label_pc_8052fc9 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052f74, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 11, 1, 2, 3, 4, 6, 5, 0, 9, 10, 7, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_8052fd2, { 1, 0 }
  uselistorder label %dec_label_pc_8052f69.dec_label_pc_8052f69_crit_edge, { 1, 0 }
}

define i32 @function_8052fda(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052fda:
  %v1_8052fe8 = add i32 %arg2, -1
  %v1_8052feb = urem i32 %v1_8052fe8, 32
  %v2_8052feb = icmp eq i32 %v1_8052feb, 0
  %v2_8052fee = udiv i32 %v1_8052fe8, 32
  br i1 %v2_8052feb, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052fda
  %v5_8052ff1 = shl i32 1, %v1_8052feb
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052fda, %bb
  %v6_8052ff3 = phi i32 [ 1, %dec_label_pc_8052fda ], [ %v5_8052ff1, %bb ]
  %v2_8052ff3 = mul nuw nsw i32 %v2_8052fee, 4
  %v3_8052ff3 = add i32 %v2_8052ff3, %arg1
  %v4_8052ff3 = inttoptr i32 %v3_8052ff3 to i32*
  %v5_8052ff3 = load i32, i32* %v4_8052ff3, align 4
  %v7_8052ff3 = and i32 %v5_8052ff3, %v6_8052ff3
  %v8_8052ff3 = icmp eq i32 %v7_8052ff3, 0
  %v1_8052ff7 = icmp eq i1 %v8_8052ff3, false
  %v2_8052ff7 = zext i1 %v1_8052ff7 to i32
  ret i32 %v2_8052ff7

; uselistorder directives
  uselistorder i32 %v1_8052feb, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052ffe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052ffe:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052ffe = load i32, i32* @ebx, align 4
  store i32 %v0_8052ffe, i32* %stack_var_-4, align 4
  %v1_805300c = add i32 %arg2, -1
  %v1_805300f = urem i32 %v1_805300c, 32
  %v2_805300f = icmp eq i32 %v1_805300f, 0
  store i32 %v1_805300f, i32* @ecx, align 4
  %v2_8053012 = udiv i32 %v1_805300c, 32
  store i32 %v2_8053012, i32* @edx, align 4
  br i1 %v2_805300f, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052ffe
  %v5_8053015 = shl i32 1, %v1_805300f
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052ffe, %bb
  %v6_8053017 = phi i32 [ 1, %dec_label_pc_8052ffe ], [ %v5_8053015, %bb ]
  %v2_8053017 = mul nuw nsw i32 %v2_8053012, 4
  %v3_8053017 = add i32 %v2_8053017, %arg1
  %v4_8053017 = inttoptr i32 %v3_8053017 to i32*
  %v5_8053017 = load i32, i32* %v4_8053017, align 4
  %v7_8053017 = or i32 %v5_8053017, %v6_8053017
  store i32 %v7_8053017, i32* %v4_8053017, align 4
  %v2_805301c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805301c, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8053012, { 1, 0 }
  uselistorder i32 %v1_805300f, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_805301e() local_unnamed_addr {
dec_label_pc_805301e:
  %v0_805301e = load i32, i32* @eax, align 4
  %v6_8053031 = icmp ugt i32 %v0_805301e, 16777215
  br i1 %v6_8053031, label %dec_label_pc_8053042, label %dec_label_pc_8053033

dec_label_pc_8053033:                             ; preds = %dec_label_pc_805301e
  %tmp = icmp ult i32 %v0_805301e, 256
  %v2_8053021 = udiv i32 %v0_805301e, 256
  %v2_8053033 = call i32 @llvm.ctlz.i32(i32 %v2_8053021, i1 true)
  %v3_8053033 = xor i32 %v2_8053033, 31
  %v5_8053033 = select i1 %tmp, i32 95, i32 %v3_8053033
  %v1_8053036 = add nuw nsw i32 %v5_8053033, 6
  %v2_8053039 = urem i32 %v1_8053036, 32
  %v4_8053039 = icmp eq i32 %v2_8053039, 0
  br i1 %v4_8053039, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8053033
  %v5_8053039 = lshr i32 %v0_805301e, %v2_8053039
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8053033, %bb
  %v0_805303b = phi i32 [ %v0_805301e, %dec_label_pc_8053033 ], [ %v5_8053039, %bb ]
  %v1_805303b = urem i32 %v0_805303b, 4
  %v2_805303e = mul nuw nsw i32 %v5_8053033, 4
  %v3_805303e = or i32 %v1_805303b, 32
  %v4_805303e = add nuw nsw i32 %v3_805303e, %v2_805303e
  br label %dec_label_pc_8053042

dec_label_pc_8053042:                             ; preds = %dec_label_pc_805301e, %bb4
  %v0_8053043 = phi i32 [ 95, %dec_label_pc_805301e ], [ %v4_805303e, %bb4 ]
  ret i32 %v0_8053043

; uselistorder directives
  uselistorder i32 %v2_8053039, { 1, 0 }
  uselistorder i32 %v0_805301e, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053042, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8053044(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053044:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053044 = load i32, i32* @ebp, align 4
  %v0_8053045 = load i32, i32* @edi, align 4
  %v0_8053046 = load i32, i32* @esi, align 4
  %v0_8053047 = load i32, i32* @ebx, align 4
  store i32 %v0_8053047, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8053059 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053059, i32* @eax, align 4
  store i32 %v2_8053059, i32* %stack_var_-92, align 4
  %v2_805305e = call i32 @function_8054570(i32 %v2_8053059, i32 134563181)
  store i32 %v2_805305e, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805603c.47 to i32), i32* %stack_var_-92, align 4
  %v1_805306a = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_805603c.47 to i32))
  store i32 %v1_805306a, i32* %eax.global-to-local, align 4
  %v0_8053072 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8053072, -32
  br i1 %tmp124, label %dec_label_pc_8053089, label %dec_label_pc_8053077

dec_label_pc_8053077:                             ; preds = %dec_label_pc_8053044
  %v0_8053077 = load i32, i32* %stack_var_-92, align 4
  %v1_8053077 = call i32 @function_8052be9(i32 %v0_8053077)
  store i32 %v1_8053077, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805307e = inttoptr i32 %v1_8053077 to i32*
  store i32 12, i32* %v1_805307e, align 4
  br label %dec_label_pc_80537ae

dec_label_pc_8053089:                             ; preds = %dec_label_pc_8053044
  %v1_8053089 = add i32 %v0_8053072, 11
  %tmp125 = icmp ult i32 %v1_8053089, 16
  br i1 %tmp125, label %dec_label_pc_80530a0, label %dec_label_pc_8053099

dec_label_pc_8053099:                             ; preds = %dec_label_pc_8053089
  %v1_8053099 = and i32 %v1_8053089, -8
  br label %dec_label_pc_80530a0

dec_label_pc_80530a0:                             ; preds = %dec_label_pc_8053089, %dec_label_pc_8053099
  %storemerge135 = phi i32 [ %v1_8053099, %dec_label_pc_8053099 ], [ %v1_8053089, %dec_label_pc_8053089 ]
  %v1_8053438 = phi i32 [ %v1_8053099, %dec_label_pc_8053099 ], [ 16, %dec_label_pc_8053089 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_80530a0 = load i8, i8* @global_var_80563e0.48, align 1
  %v1_80530a0 = sext i8 %v0_80530a0 to i32
  store i32 %v1_80530a0, i32* @ebx, align 4
  %v3_80530a6 = urem i8 %v0_80530a0, 2
  %v4_80530a6 = icmp eq i8 %v3_80530a6, 0
  %v1_80530a9 = icmp eq i1 %v4_80530a6, false
  br i1 %v1_80530a9, label %dec_label_pc_80530c8, label %dec_label_pc_80530ab

dec_label_pc_80530ab:                             ; preds = %dec_label_pc_80530a0
  %v2_80530ab = icmp eq i8 %v0_80530a0, 0
  %v1_80530ad = icmp eq i1 %v2_80530ab, false
  br i1 %v1_80530ad, label %dec_label_pc_80533a3, label %dec_label_pc_80530b3

dec_label_pc_80530b3:                             ; preds = %dec_label_pc_80530ab
  store i32 ptrtoint (i8* @global_var_80563e0.48 to i32), i32* %stack_var_-92, align 4
  %v2_80530bb = call i32 @function_8053c61(i32* bitcast (i8* @global_var_80563e0.48 to i32*))
  store i32 %v2_80530bb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533a3

dec_label_pc_80530c8:                             ; preds = %dec_label_pc_80530a0
  %v11_80530c8 = trunc i32 %v1_8053438 to i8
  %v8_80530cc = icmp ugt i8 %v11_80530c8, %v0_80530a0
  br i1 %v8_80530cc, label %dec_label_pc_80530e9, label %dec_label_pc_80530ce

dec_label_pc_80530ce:                             ; preds = %dec_label_pc_80530c8
  %v2_80530d2 = udiv i32 %v1_8053438, 2
  store i32 %v2_80530d2, i32* %eax.global-to-local, align 4
  %v1_80530d4 = add i32 %v2_80530d2, ptrtoint (i8* @global_var_80563e0.48 to i32)
  store i32 %v1_80530d4, i32* %ecx.global-to-local, align 4
  %v1_80530da = add i32 %v2_80530d2, add (i32 ptrtoint (i8* @global_var_80563e0.48 to i32), i32 -4)
  %v2_80530da = inttoptr i32 %v1_80530da to i32*
  %v3_80530da = load i32, i32* %v2_80530da, align 4
  store i32 %v3_80530da, i32* @edx, align 4
  %v1_80530dd = icmp eq i32 %v3_80530da, 0
  br i1 %v1_80530dd, label %dec_label_pc_80530e9, label %dec_label_pc_80530e1

dec_label_pc_80530e1:                             ; preds = %dec_label_pc_80530ce
  %v1_80530e1 = add i32 %v3_80530da, 8
  %v2_80530e1 = inttoptr i32 %v1_80530e1 to i32*
  %v3_80530e1 = load i32, i32* %v2_80530e1, align 4
  store i32 %v3_80530e1, i32* %eax.global-to-local, align 4
  store i32 %v3_80530e1, i32* %v2_80530da, align 4
  br label %dec_label_pc_8053122

dec_label_pc_80530e9:                             ; preds = %dec_label_pc_80530ce, %dec_label_pc_80530c8
  %v8_80530e9 = icmp ult i32 %v1_8053438, 255
  %v6_80530f1 = icmp ugt i32 %v1_8053438, 255
  store i32 %v1_8053438, i32* @eax, align 4
  br i1 %v6_80530f1, label %dec_label_pc_805312a, label %dec_label_pc_80530f3

dec_label_pc_80530f3:                             ; preds = %dec_label_pc_80530e9
  %v2_80530f7 = udiv i32 %v1_8053438, 8
  store i32 %v2_80530f7, i32* %eax.global-to-local, align 4
  %v1_80530fe = mul nuw i32 %v2_80530f7, 8
  %v2_80530fe = add i32 %v1_80530fe, ptrtoint (i32* @global_var_805640c.49 to i32)
  store i32 %v2_80530fe, i32* %ecx.global-to-local, align 4
  %v1_8053105 = add i32 %v1_80530fe, add (i32 ptrtoint (i32* @global_var_805640c.49 to i32), i32 12)
  %v2_8053105 = inttoptr i32 %v1_8053105 to i32*
  %v3_8053105 = load i32, i32* %v2_8053105, align 4
  store i32 %v3_8053105, i32* @edx, align 4
  %v12_8053108 = icmp eq i32 %v3_8053105, %v2_80530fe
  br i1 %v12_8053108, label %dec_label_pc_8053226.preheader, label %dec_label_pc_8053110

dec_label_pc_8053110:                             ; preds = %dec_label_pc_80530f3
  store i32 %v1_8053438, i32* %ebx.global-to-local, align 4
  %v1_8053114 = add i32 %v3_8053105, 12
  %v2_8053114 = inttoptr i32 %v1_8053114 to i32*
  %v3_8053114 = load i32, i32* %v2_8053114, align 4
  store i32 %v3_8053114, i32* %eax.global-to-local, align 4
  store i32 %v3_8053114, i32* %v2_8053105, align 4
  %v0_805311a = load i32, i32* @edx, align 4
  %v1_805311a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805311a = add i32 %v0_805311a, 4
  %v3_805311a = add i32 %v2_805311a, %v1_805311a
  %v4_805311a = inttoptr i32 %v3_805311a to i32*
  %v5_805311a = load i32, i32* %v4_805311a, align 4
  %v6_805311a = or i32 %v5_805311a, 1
  store i32 %v6_805311a, i32* %v4_805311a, align 4
  %v0_805311f = load i32, i32* %ecx.global-to-local, align 4
  %v1_805311f = load i32, i32* %eax.global-to-local, align 4
  %v2_805311f = add i32 %v1_805311f, 8
  %v3_805311f = inttoptr i32 %v2_805311f to i32*
  store i32 %v0_805311f, i32* %v3_805311f, align 4
  br label %dec_label_pc_8053122

dec_label_pc_8053122:                             ; preds = %dec_label_pc_80534bf, %dec_label_pc_80534d1, %dec_label_pc_80530e1, %dec_label_pc_8053110
  %v0_8053122 = load i32, i32* @edx, align 4
  %v1_8053122 = add i32 %v0_8053122, 8
  store i32 %v1_8053122, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805379d

dec_label_pc_805312a:                             ; preds = %dec_label_pc_80530e9
  %v0_805312e = call i32 @function_805301e()
  store i32 %v0_805312e, i32* %eax.global-to-local, align 4
  %v3_8053133 = and i8 %v0_80530a0, 2
  %v4_8053133 = icmp eq i8 %v3_8053133, 0
  %v6_8053133 = zext i8 %v3_8053133 to i32
  %v9_8053133 = and i32 %v1_80530a0, -256
  %v10_8053133 = or i32 %v9_8053133, %v6_8053133
  store i32 %v10_8053133, i32* @ebx, align 4
  br i1 %v4_8053133, label %dec_label_pc_8053226.preheader, label %dec_label_pc_8053140

dec_label_pc_8053140:                             ; preds = %dec_label_pc_805312a
  store i32 ptrtoint (i8* @global_var_80563e0.48 to i32), i32* %stack_var_-92, align 4
  %v2_8053148 = call i32 @function_8053c61(i32* bitcast (i8* @global_var_80563e0.48 to i32*))
  store i32 %v2_8053148, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053226.preheader

dec_label_pc_8053226.preheader:                   ; preds = %dec_label_pc_8053140, %dec_label_pc_80530f3, %dec_label_pc_805312a
  %stack_var_-40.0.ph = phi i32 [ %v2_80530f7, %dec_label_pc_80530f3 ], [ %v0_805312e, %dec_label_pc_8053140 ], [ %v0_805312e, %dec_label_pc_805312a ]
  %v0_80532269 = load i32, i32* @global_var_8056420.52, align 32
  store i32 %v0_80532269, i32* @ebp, align 4
  %v9_805322c15 = icmp eq i32 %v0_80532269, 134571028
  %v1_805323217 = icmp eq i1 %v9_805322c15, false
  br i1 %v1_805323217, label %dec_label_pc_8053155.lr.ph, label %dec_label_pc_8053238

dec_label_pc_8053155.lr.ph:                       ; preds = %dec_label_pc_8053226.preheader
  %v1_805317c = add i32 %v1_8053438, 16
  br label %dec_label_pc_8053155

dec_label_pc_8053155:                             ; preds = %dec_label_pc_8053155.lr.ph, %dec_label_pc_8053226
  %v1_805374f = phi i32 [ %v0_80532269, %dec_label_pc_8053155.lr.ph ], [ %v0_8053226, %dec_label_pc_8053226 ]
  %v1_8053155 = add i32 %v1_805374f, 4
  %v2_8053155 = inttoptr i32 %v1_8053155 to i32*
  %v3_8053155 = load i32, i32* %v2_8053155, align 4
  %v1_8053158 = add i32 %v1_805374f, 12
  %v2_8053158 = inttoptr i32 %v1_8053158 to i32*
  %v3_8053158 = load i32, i32* %v2_8053158, align 4
  store i32 %v3_8053158, i32* @edx, align 4
  %v1_805315b = and i32 %v3_8053155, -4
  store i32 %v1_805315b, i32* @edi, align 4
  br i1 %v6_80530f1, label %dec_label_pc_8053187, label %dec_label_pc_8053168

dec_label_pc_8053168:                             ; preds = %dec_label_pc_8053155
  %v9_8053168 = icmp eq i32 %v3_8053158, 134571028
  %v1_805316e = icmp eq i1 %v9_8053168, false
  br i1 %v1_805316e, label %dec_label_pc_8053187, label %dec_label_pc_8053170

dec_label_pc_8053170:                             ; preds = %dec_label_pc_8053168
  %v1_8053170 = load i32, i32* @global_var_8056410.50, align 16
  %v12_8053170 = icmp eq i32 %v1_805374f, %v1_8053170
  %v1_8053176 = icmp eq i1 %v12_8053170, false
  br i1 %v1_8053176, label %dec_label_pc_8053187, label %dec_label_pc_8053178

dec_label_pc_8053178:                             ; preds = %dec_label_pc_8053170
  store i32 %v1_805317c, i32* %eax.global-to-local, align 4
  %v6_8053181 = icmp ugt i32 %v1_805315b, %v1_805317c
  br i1 %v6_8053181, label %dec_label_pc_8053738, label %dec_label_pc_8053187

dec_label_pc_8053187:                             ; preds = %dec_label_pc_8053178, %dec_label_pc_8053170, %dec_label_pc_8053168, %dec_label_pc_8053155
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %eax.global-to-local, align 4
  %v2_805318c = add i32 %v3_8053158, 8
  %v3_805318c = inttoptr i32 %v2_805318c to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v3_805318c, align 4
  %v0_805318f = load i32, i32* @edx, align 4
  store i32 %v0_805318f, i32* @global_var_8056420.52, align 4
  %v0_8053192 = load i32, i32* @edi, align 4
  %v15_8053192 = icmp eq i32 %v0_8053192, %v1_8053438
  br i1 %v15_8053192, label %dec_label_pc_8053779, label %dec_label_pc_805319c

dec_label_pc_805319c:                             ; preds = %dec_label_pc_8053187
  %v6_80531a2 = icmp ugt i32 %v0_8053192, 255
  br i1 %v6_80531a2, label %dec_label_pc_80531b5, label %dec_label_pc_80531a4

dec_label_pc_80531a4:                             ; preds = %dec_label_pc_805319c
  %v2_80531a6 = udiv i32 %v0_8053192, 8
  store i32 %v2_80531a6, i32* %esi.global-to-local, align 4
  %v1_80531a9 = mul nuw i32 %v2_80531a6, 8
  %v2_80531a9 = add i32 %v1_80531a9, 134571020
  store i32 %v2_80531a9, i32* @ebx, align 4
  %v1_80531b0 = add i32 %v1_80531a9, 134571028
  %v2_80531b0 = inttoptr i32 %v1_80531b0 to i32*
  %v3_80531b0 = load i32, i32* %v2_80531b0, align 4
  store i32 %v3_80531b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80531fe

dec_label_pc_80531b5:                             ; preds = %dec_label_pc_805319c
  store i32 %v0_8053192, i32* @eax, align 4
  %v0_80531b7 = call i32 @function_805301e()
  store i32 %v0_80531b7, i32* %esi.global-to-local, align 4
  %v1_80531be = mul i32 %v0_80531b7, 8
  %v2_80531be = add i32 %v1_80531be, ptrtoint (i32* @global_var_805640c.49 to i32)
  store i32 %v2_80531be, i32* %eax.global-to-local, align 4
  %v1_80531c5 = add i32 %v1_80531be, add (i32 ptrtoint (i32* @global_var_805640c.49 to i32), i32 8)
  %v2_80531c5 = inttoptr i32 %v1_80531c5 to i32*
  %v3_80531c5 = load i32, i32* %v2_80531c5, align 4
  store i32 %v3_80531c5, i32* %edx.global-to-local, align 4
  store i32 %v3_80531c5, i32* @ebx, align 4
  %v12_80531ce = icmp eq i32 %v3_80531c5, %v2_80531be
  br i1 %v12_80531ce, label %dec_label_pc_80531fe, label %dec_label_pc_80531d2

dec_label_pc_80531d2:                             ; preds = %dec_label_pc_80531b5
  %v1_80531d2 = add i32 %v1_80531be, add (i32 ptrtoint (i32* @global_var_805640c.49 to i32), i32 12)
  %v2_80531d2 = inttoptr i32 %v1_80531d2 to i32*
  %v3_80531d2 = load i32, i32* %v2_80531d2, align 4
  store i32 %v3_80531d2, i32* @ebx, align 4
  %v0_80531d5 = load i32, i32* @edi, align 4
  %v2_80531d5 = add i32 %v3_80531d2, 4
  %v3_80531d5 = inttoptr i32 %v2_80531d5 to i32*
  %v4_80531d5 = load i32, i32* %v3_80531d5, align 4
  %v10_80531d5 = icmp ult i32 %v0_80531d5, %v4_80531d5
  %v1_80531d8 = icmp eq i1 %v10_80531d5, false
  br i1 %v1_80531d8, label %dec_label_pc_80531e0, label %dec_label_pc_80531fe

dec_label_pc_80531e0:                             ; preds = %dec_label_pc_80531d2
  %v1_80531e2 = or i32 %v0_80531d5, 1
  store i32 %v1_80531e2, i32* %eax.global-to-local, align 4
  store i32 %v3_80531c5, i32* %ebx.global-to-local, align 4
  %v2_80531f6105 = add i32 %v3_80531c5, 4
  %v3_80531f6106 = inttoptr i32 %v2_80531f6105 to i32*
  %v4_80531f6107 = load i32, i32* %v3_80531f6106, align 4
  %v10_80531f6108 = icmp ult i32 %v1_80531e2, %v4_80531f6107
  br i1 %v10_80531f6108, label %dec_label_pc_80531e7, label %dec_label_pc_80531fb

dec_label_pc_80531e7:                             ; preds = %dec_label_pc_80531e0, %dec_label_pc_80531e7
  %v0_80531fb109 = phi i32 [ %v3_80531eb, %dec_label_pc_80531e7 ], [ %v3_80531c5, %dec_label_pc_80531e0 ]
  store i32 %v0_80531fb109, i32* %ecx.global-to-local, align 4
  %v1_80531eb = add i32 %v0_80531fb109, 8
  %v2_80531eb = inttoptr i32 %v1_80531eb to i32*
  %v3_80531eb = load i32, i32* %v2_80531eb, align 4
  store i32 %v3_80531eb, i32* %ecx.global-to-local, align 4
  store i32 %v3_80531eb, i32* %ebx.global-to-local, align 4
  %v2_80531f6 = add i32 %v3_80531eb, 4
  %v3_80531f6 = inttoptr i32 %v2_80531f6 to i32*
  %v4_80531f6 = load i32, i32* %v3_80531f6, align 4
  %v10_80531f6 = icmp ult i32 %v1_80531e2, %v4_80531f6
  br i1 %v10_80531f6, label %dec_label_pc_80531e7, label %dec_label_pc_80531fb

dec_label_pc_80531fb:                             ; preds = %dec_label_pc_80531e7, %dec_label_pc_80531e0
  %v0_80531fb.lcssa = phi i32 [ %v3_80531c5, %dec_label_pc_80531e0 ], [ %v3_80531eb, %dec_label_pc_80531e7 ]
  %v1_80531fb = add i32 %v0_80531fb.lcssa, 12
  %v2_80531fb = inttoptr i32 %v1_80531fb to i32*
  %v3_80531fb = load i32, i32* %v2_80531fb, align 4
  store i32 %v3_80531fb, i32* @ebx, align 4
  br label %dec_label_pc_80531fe

dec_label_pc_80531fe:                             ; preds = %dec_label_pc_80531a4, %dec_label_pc_80531d2, %dec_label_pc_80531b5, %dec_label_pc_80531fb
  %v0_80531fe = phi i32 [ %v0_80531b7, %dec_label_pc_80531b5 ], [ %v0_80531b7, %dec_label_pc_80531fb ], [ %v0_80531b7, %dec_label_pc_80531d2 ], [ %v2_80531a6, %dec_label_pc_80531a4 ]
  %stack_var_-64.1 = phi i32 [ %v2_80531be, %dec_label_pc_80531b5 ], [ %v0_80531fb.lcssa, %dec_label_pc_80531fb ], [ %v2_80531be, %dec_label_pc_80531d2 ], [ %v3_80531b0, %dec_label_pc_80531a4 ]
  %v1_8053200 = urem i32 %v0_80531fe, 32
  %v2_8053200 = icmp eq i32 %v1_8053200, 0
  store i32 %v1_8053200, i32* %esi.global-to-local, align 4
  store i32 %v1_8053200, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_805320a = sdiv i32 %v0_80531fe, 32
  store i32 %v2_805320a, i32* %edx.global-to-local, align 4
  br i1 %v2_8053200, label %dec_label_pc_8053226, label %bb

bb:                                               ; preds = %dec_label_pc_80531fe
  %v5_805320d = shl i32 1, %v1_8053200
  store i32 %v5_805320d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053226

dec_label_pc_8053226:                             ; preds = %dec_label_pc_80531fe, %bb
  %v5_805320f = phi i32 [ 1, %dec_label_pc_80531fe ], [ %v5_805320d, %bb ]
  %v1_805320f = mul nsw i32 %v2_805320a, 4
  %v2_805320f = add i32 %v1_805320f, ptrtoint (i32* @global_var_8056714.53 to i32)
  %v3_805320f = inttoptr i32 %v2_805320f to i32*
  %v4_805320f = load i32, i32* %v3_805320f, align 4
  %v6_805320f = or i32 %v4_805320f, %v5_805320f
  store i32 %v6_805320f, i32* %v3_805320f, align 4
  %v0_8053216 = load i32, i32* @ebx, align 4
  %v1_8053216 = load i32, i32* @ebp, align 4
  %v2_8053216 = add i32 %v1_8053216, 12
  %v3_8053216 = inttoptr i32 %v2_8053216 to i32*
  store i32 %v0_8053216, i32* %v3_8053216, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805321d = load i32, i32* @ebp, align 4
  %v2_805321d = add i32 %v1_805321d, 8
  %v3_805321d = inttoptr i32 %v2_805321d to i32*
  store i32 %stack_var_-64.1, i32* %v3_805321d, align 4
  %v0_8053220 = load i32, i32* @ebp, align 4
  %v1_8053220 = load i32, i32* @ebx, align 4
  %v2_8053220 = add i32 %v1_8053220, 8
  %v3_8053220 = inttoptr i32 %v2_8053220 to i32*
  store i32 %v0_8053220, i32* %v3_8053220, align 4
  %v0_8053223 = load i32, i32* @ebp, align 4
  %v1_8053223 = load i32, i32* @esi, align 4
  %v2_8053223 = add i32 %v1_8053223, 12
  %v3_8053223 = inttoptr i32 %v2_8053223 to i32*
  store i32 %v0_8053223, i32* %v3_8053223, align 4
  %v0_8053226 = load i32, i32* @global_var_8056420.52, align 32
  store i32 %v0_8053226, i32* @ebp, align 4
  %v9_805322c = icmp eq i32 %v0_8053226, 134571028
  %v1_8053232 = icmp eq i1 %v9_805322c, false
  br i1 %v1_8053232, label %dec_label_pc_8053155, label %dec_label_pc_8053238

dec_label_pc_8053238:                             ; preds = %dec_label_pc_8053226, %dec_label_pc_8053226.preheader
  br i1 %v8_80530e9, label %dec_label_pc_80532c6, label %dec_label_pc_8053246

dec_label_pc_8053246:                             ; preds = %dec_label_pc_8053238
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805324a = mul i32 %stack_var_-40.0.ph, 8
  %v2_805324a = add i32 %v1_805324a, ptrtoint (i32* @global_var_805640c.49 to i32)
  store i32 %v2_805324a, i32* %edx.global-to-local, align 4
  %v1_8053251 = add i32 %v1_805324a, add (i32 ptrtoint (i32* @global_var_805640c.49 to i32), i32 12)
  %v2_8053251 = inttoptr i32 %v1_8053251 to i32*
  %storemerge1.pre = load i32, i32* %v2_8053251, align 4
  br label %dec_label_pc_80532c2

dec_label_pc_8053256:                             ; preds = %dec_label_pc_80532c2
  %v1_8053256 = add i32 %v4_805326d, 4
  %v2_8053256 = inttoptr i32 %v1_8053256 to i32*
  %v3_8053256 = load i32, i32* %v2_8053256, align 4
  store i32 %v3_8053256, i32* %ebx.global-to-local, align 4
  %v1_8053259 = add i32 %v4_805326d, 12
  %v2_8053259 = inttoptr i32 %v1_8053259 to i32*
  %v3_8053259 = load i32, i32* %v2_8053259, align 4
  store i32 %v3_8053259, i32* @ecx, align 4
  %v1_805325c = and i32 %v3_8053256, -4
  store i32 %v1_805325c, i32* @ebx, align 4
  %v10_805325f = icmp ult i32 %v1_805325c, %v1_8053438
  br i1 %v10_805325f, label %dec_label_pc_80532c2, label %dec_label_pc_8053265

dec_label_pc_8053265:                             ; preds = %dec_label_pc_8053256
  %v1_8053265 = add i32 %v4_805326d, 8
  %v2_8053265 = inttoptr i32 %v1_8053265 to i32*
  %v3_8053265 = load i32, i32* %v2_8053265, align 4
  store i32 %v3_8053265, i32* @edx, align 4
  %v1_8053268 = add i32 %v3_8053265, 12
  %v2_8053268 = inttoptr i32 %v1_8053268 to i32*
  %v3_8053268 = load i32, i32* %v2_8053268, align 4
  %v15_8053268 = icmp eq i32 %v3_8053268, %v4_805326d
  %v1_805326b = icmp eq i1 %v15_8053268, false
  br i1 %v1_805326b, label %dec_label_pc_8053272, label %dec_label_pc_805326d

dec_label_pc_805326d:                             ; preds = %dec_label_pc_8053265
  %v1_805326d = add i32 %v3_8053259, 8
  %v2_805326d = inttoptr i32 %v1_805326d to i32*
  %v3_805326d = load i32, i32* %v2_805326d, align 4
  %v15_805326d = icmp eq i32 %v3_805326d, %v4_805326d
  br i1 %v15_805326d, label %dec_label_pc_8053277, label %dec_label_pc_8053272

dec_label_pc_8053272:                             ; preds = %dec_label_pc_805326d, %dec_label_pc_8053265
  %v0_8053272 = call i32 @function_8053fa5()
  store i32 %v0_8053272, i32* %eax.global-to-local, align 4
  %v0_8053277.pre = load i32, i32* @ebx, align 4
  %v0_805327d.pre = load i32, i32* @ecx, align 4
  %v1_805327d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053277

dec_label_pc_8053277:                             ; preds = %dec_label_pc_805326d, %dec_label_pc_8053272
  %v1_805327d = phi i32 [ %v3_8053265, %dec_label_pc_805326d ], [ %v1_805327d.pre, %dec_label_pc_8053272 ]
  %v0_805327d = phi i32 [ %v3_8053259, %dec_label_pc_805326d ], [ %v0_805327d.pre, %dec_label_pc_8053272 ]
  %v0_8053277 = phi i32 [ %v1_805325c, %dec_label_pc_805326d ], [ %v0_8053277.pre, %dec_label_pc_8053272 ]
  %v5_8053279 = sub i32 %v0_8053277, %v1_8053438
  store i32 %v5_8053279, i32* %esi.global-to-local, align 4
  %v2_805327d = add i32 %v1_805327d, 12
  %v3_805327d = inttoptr i32 %v2_805327d to i32*
  store i32 %v0_805327d, i32* %v3_805327d, align 4
  %v0_8053280 = load i32, i32* @edx, align 4
  %v1_8053280 = load i32, i32* @ecx, align 4
  %v2_8053280 = add i32 %v1_8053280, 8
  %v3_8053280 = inttoptr i32 %v2_8053280 to i32*
  store i32 %v0_8053280, i32* %v3_8053280, align 4
  %v0_8053283 = load i32, i32* %esi.global-to-local, align 4
  %v0_8053286 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053286 = add i32 %v0_8053286, 8
  store i32 %v1_8053286, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8053283, 16
  br i1 %tmp126, label %dec_label_pc_8053787, label %dec_label_pc_805328f

dec_label_pc_805328f:                             ; preds = %dec_label_pc_8053277
  %v2_8053293 = add i32 %v0_8053286, %v1_8053438
  store i32 %v2_8053293, i32* @edx, align 4
  %v1_8053296 = or i32 %v1_8053438, 1
  store i32 %v1_8053296, i32* %ebx.global-to-local, align 4
  %v2_8053299 = add i32 %v0_8053286, 4
  %v3_8053299 = inttoptr i32 %v2_8053299 to i32*
  store i32 %v1_8053296, i32* %v3_8053299, align 4
  %v0_805329c = load i32, i32* %esi.global-to-local, align 4
  %v1_805329e = or i32 %v0_805329c, 1
  store i32 %v1_805329e, i32* %eax.global-to-local, align 4
  %v0_80532a1 = load i32, i32* @edx, align 4
  %v1_80532a1 = load i32, i32* @ebp, align 4
  %v2_80532a1 = add i32 %v1_80532a1, 8
  %v3_80532a1 = inttoptr i32 %v2_80532a1 to i32*
  store i32 %v0_80532a1, i32* %v3_80532a1, align 4
  %v0_80532a4 = load i32, i32* @edx, align 4
  %v1_80532a4 = load i32, i32* @ebp, align 4
  %v2_80532a4 = add i32 %v1_80532a4, 12
  %v3_80532a4 = inttoptr i32 %v2_80532a4 to i32*
  store i32 %v0_80532a4, i32* %v3_80532a4, align 4
  %v0_80532a7 = load i32, i32* @edx, align 4
  %v1_80532a7 = add i32 %v0_80532a7, 8
  %v2_80532a7 = inttoptr i32 %v1_80532a7 to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v2_80532a7, align 4
  %v0_80532ae = load i32, i32* @edx, align 4
  %v1_80532ae = add i32 %v0_80532ae, 12
  %v2_80532ae = inttoptr i32 %v1_80532ae to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v2_80532ae, align 4
  %v0_80532b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80532b5 = load i32, i32* @edx, align 4
  %v2_80532b5 = add i32 %v1_80532b5, 4
  %v3_80532b5 = inttoptr i32 %v2_80532b5 to i32*
  store i32 %v0_80532b5, i32* %v3_80532b5, align 4
  %v0_80532b8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80532b8 = load i32, i32* @edx, align 4
  %v3_80532b8 = add i32 %v1_80532b8, %v0_80532b8
  %v4_80532b8 = inttoptr i32 %v3_80532b8 to i32*
  store i32 %v0_80532b8, i32* %v4_80532b8, align 4
  br label %dec_label_pc_805378c

dec_label_pc_80532c2:                             ; preds = %dec_label_pc_8053256, %dec_label_pc_8053246
  %v4_805326d = phi i32 [ %storemerge1.pre, %dec_label_pc_8053246 ], [ %v3_8053259, %dec_label_pc_8053256 ]
  store i32 %v4_805326d, i32* %eax.global-to-local, align 4
  %v12_80532c2 = icmp eq i32 %v4_805326d, %v2_805324a
  %v1_80532c4 = icmp eq i1 %v12_80532c2, false
  br i1 %v1_80532c4, label %dec_label_pc_8053256, label %dec_label_pc_80532c6.loopexit

dec_label_pc_80532c6.loopexit:                    ; preds = %dec_label_pc_80532c2
  br label %dec_label_pc_80532c6

dec_label_pc_80532c6:                             ; preds = %dec_label_pc_80532c6.loopexit, %dec_label_pc_8053238
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80532cf = add i32 %stack_var_-40.0.ph, 1
  %v2_80532d2 = udiv i32 %v1_80532cf, 32
  store i32 %v2_80532d2, i32* @edi, align 4
  %v1_80532d5 = mul i32 %v1_80532cf, 8
  %v2_80532d5 = add i32 %v1_80532d5, ptrtoint (i32* @global_var_805640c.49 to i32)
  store i32 %v2_80532d5, i32* %ebx.global-to-local, align 4
  %v1_80532dc = urem i32 %v1_80532cf, 32
  %v2_80532dc = icmp eq i32 %v1_80532dc, 0
  store i32 %v1_80532dc, i32* %ecx.global-to-local, align 4
  %v1_80532df = mul nuw nsw i32 %v2_80532d2, 4
  %v2_80532df = add i32 %v1_80532df, ptrtoint (i32* @global_var_8056714.53 to i32)
  %v3_80532df = inttoptr i32 %v2_80532df to i32*
  %v4_80532df = load i32, i32* %v3_80532df, align 4
  store i32 %v4_80532df, i32* %edx.global-to-local, align 4
  br i1 %v2_80532dc, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_80532c6
  %v5_80532e6 = shl i32 1, %v1_80532dc
  store i32 %v5_80532e6, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80532c6, %bb88, %dec_label_pc_8053327
  %v1_80532e8 = phi i32 [ %v1_80532e8.pre, %dec_label_pc_8053327 ], [ %v4_80532df, %bb88 ], [ %v4_80532df, %dec_label_pc_80532c6 ]
  %v0_80532ec = phi i32 [ %v0_80532e8.pre, %dec_label_pc_8053327 ], [ %v5_80532e6, %bb88 ], [ 1, %dec_label_pc_80532c6 ]
  %tmp89 = icmp ule i32 %v0_80532ec, %v1_80532e8
  %v1_80532ec = icmp eq i32 %v0_80532ec, 0
  %v1_80532ee = icmp eq i1 %v1_80532ec, false
  %or.cond = and i1 %tmp89, %v1_80532ee
  br i1 %or.cond, label %dec_label_pc_80532ec.dec_label_pc_805331c.preheader_crit_edge, label %dec_label_pc_80532f0.preheader

dec_label_pc_80532ec.dec_label_pc_805331c.preheader_crit_edge: ; preds = %.preheader
  %v0_80533177.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805331c.preheader

dec_label_pc_80532f0.preheader:                   ; preds = %.preheader
  %v0_80532f0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80532f0

dec_label_pc_80532f0:                             ; preds = %dec_label_pc_80532f0.preheader, %dec_label_pc_80532fa
  %v0_80532f0 = phi i32 [ %v0_80532f0.pre, %dec_label_pc_80532f0.preheader ], [ %v1_80532f0, %dec_label_pc_80532fa ]
  %v1_80532f0 = add i32 %v0_80532f0, 1
  store i32 %v1_80532f0, i32* @edi, align 4
  %v6_80532f4 = icmp ugt i32 %v1_80532f0, 2
  br i1 %v6_80532f4, label %dec_label_pc_80533a3.loopexit, label %dec_label_pc_80532fa

dec_label_pc_80532fa:                             ; preds = %dec_label_pc_80532f0
  %v1_80532fa = mul i32 %v1_80532f0, 4
  %v2_80532fa = add i32 %v1_80532fa, ptrtoint (i32* @global_var_8056714.53 to i32)
  %v3_80532fa = inttoptr i32 %v2_80532fa to i32*
  %v4_80532fa = load i32, i32* %v3_80532fa, align 4
  store i32 %v4_80532fa, i32* %edx.global-to-local, align 4
  %v1_8053301 = icmp eq i32 %v4_80532fa, 0
  br i1 %v1_8053301, label %dec_label_pc_80532f0, label %dec_label_pc_8053305

dec_label_pc_8053305:                             ; preds = %dec_label_pc_80532fa
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805330c = mul i32 %v1_80532f0, 256
  store i32 %v2_805330c, i32* %eax.global-to-local, align 4
  %v1_805330f = add i32 %v2_805330c, ptrtoint (i32* @global_var_805640c.49 to i32)
  store i32 %v1_805330f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805331c.preheader

dec_label_pc_805331c.preheader:                   ; preds = %dec_label_pc_80532ec.dec_label_pc_805331c.preheader_crit_edge, %dec_label_pc_8053305
  %v0_80533177 = phi i32 [ %v1_805330f, %dec_label_pc_8053305 ], [ %v0_80533177.pre, %dec_label_pc_80532ec.dec_label_pc_805331c.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8053305 ], [ %v0_80532ec, %dec_label_pc_80532ec.dec_label_pc_805331c.preheader_crit_edge ]
  %v0_805332e = phi i32 [ %v4_80532fa, %dec_label_pc_8053305 ], [ %v1_80532e8, %dec_label_pc_80532ec.dec_label_pc_805331c.preheader_crit_edge ]
  %v2_805331c4 = and i32 %v0_805332e, %esi.promoted
  %v3_805331c5 = icmp eq i32 %v2_805331c4, 0
  br i1 %v3_805331c5, label %dec_label_pc_8053317, label %dec_label_pc_8053320

dec_label_pc_8053317:                             ; preds = %dec_label_pc_805331c.preheader, %dec_label_pc_8053317
  %v2_805331a18 = phi i32 [ %v2_805331a, %dec_label_pc_8053317 ], [ %esi.promoted, %dec_label_pc_805331c.preheader ]
  %v0_80533178 = phi i32 [ %v1_8053317, %dec_label_pc_8053317 ], [ %v0_80533177, %dec_label_pc_805331c.preheader ]
  %v1_8053317 = add i32 %v0_80533178, 8
  %v2_805331a = mul i32 %v2_805331a18, 2
  %v2_805331c = and i32 %v2_805331a, %v0_805332e
  %v3_805331c = icmp eq i32 %v2_805331c, 0
  br i1 %v3_805331c, label %dec_label_pc_8053317, label %dec_label_pc_805331c.dec_label_pc_8053320_crit_edge

dec_label_pc_805331c.dec_label_pc_8053320_crit_edge: ; preds = %dec_label_pc_8053317
  store i32 %v1_8053317, i32* %ebx.global-to-local, align 4
  store i32 %v2_805331a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053320

dec_label_pc_8053320:                             ; preds = %dec_label_pc_805331c.dec_label_pc_8053320_crit_edge, %dec_label_pc_805331c.preheader
  %v0_8053330 = phi i32 [ %v2_805331a, %dec_label_pc_805331c.dec_label_pc_8053320_crit_edge ], [ %esi.promoted, %dec_label_pc_805331c.preheader ]
  %v1_805334a = phi i32 [ %v1_8053317, %dec_label_pc_805331c.dec_label_pc_8053320_crit_edge ], [ %v0_80533177, %dec_label_pc_805331c.preheader ]
  %v1_8053320 = add i32 %v1_805334a, 12
  %v2_8053320 = inttoptr i32 %v1_8053320 to i32*
  %v3_8053320 = load i32, i32* %v2_8053320, align 4
  store i32 %v3_8053320, i32* %ecx.global-to-local, align 4
  %v12_8053323 = icmp eq i32 %v3_8053320, %v1_805334a
  %v1_8053325 = icmp eq i1 %v12_8053323, false
  br i1 %v1_8053325, label %dec_label_pc_805333b, label %dec_label_pc_8053327

dec_label_pc_8053327:                             ; preds = %dec_label_pc_8053320
  %v1_8053329 = add i32 %v3_8053320, 8
  store i32 %v1_8053329, i32* %ebx.global-to-local, align 4
  %v1_805332c = sub i32 -1, %v0_8053330
  store i32 %v1_805332c, i32* %eax.global-to-local, align 4
  %v2_805332e = and i32 %v0_805332e, %v1_805332c
  store i32 %v2_805332e, i32* %edx.global-to-local, align 4
  %v2_8053330 = mul i32 %v0_8053330, 2
  store i32 %v2_8053330, i32* %esi.global-to-local, align 4
  %v1_8053332 = load i32, i32* @edi, align 4
  %v2_8053332 = mul i32 %v1_8053332, 4
  %v3_8053332 = add i32 %v2_8053332, ptrtoint (i32* @global_var_8056714.53 to i32)
  %v4_8053332 = inttoptr i32 %v3_8053332 to i32*
  store i32 %v2_805332e, i32* %v4_8053332, align 4
  %v0_80532e8.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80532e8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805333b:                             ; preds = %dec_label_pc_8053320
  %v1_805333b = add i32 %v3_8053320, 4
  %v2_805333b = inttoptr i32 %v1_805333b to i32*
  %v3_805333b = load i32, i32* %v2_805333b, align 4
  store i32 %v3_805333b, i32* %edx.global-to-local, align 4
  %v1_805333e = add i32 %v3_8053320, 12
  %v2_805333e = inttoptr i32 %v1_805333e to i32*
  %v3_805333e = load i32, i32* %v2_805333e, align 4
  store i32 %v3_805333e, i32* %eax.global-to-local, align 4
  %v1_8053341 = and i32 %v3_805333b, -4
  store i32 %v1_8053341, i32* @edx, align 4
  %v5_8053346 = sub i32 %v1_8053341, %v1_8053438
  store i32 %v5_8053346, i32* %esi.global-to-local, align 4
  store i32 %v3_805333e, i32* %v2_8053320, align 4
  %v0_805334d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805334d = load i32, i32* %eax.global-to-local, align 4
  %v2_805334d = add i32 %v1_805334d, 8
  %v3_805334d = inttoptr i32 %v2_805334d to i32*
  store i32 %v0_805334d, i32* %v3_805334d, align 4
  %v0_8053350 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8053350, 16
  br i1 %tmp127, label %dec_label_pc_8053355, label %dec_label_pc_805335c

dec_label_pc_8053355:                             ; preds = %dec_label_pc_805333b
  %v0_8053355 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053355 = load i32, i32* @edx, align 4
  %v2_8053355 = add i32 %v0_8053355, 4
  %v3_8053355 = add i32 %v2_8053355, %v1_8053355
  %v4_8053355 = inttoptr i32 %v3_8053355 to i32*
  %v5_8053355 = load i32, i32* %v4_8053355, align 4
  %v6_8053355 = or i32 %v5_8053355, 1
  store i32 %v6_8053355, i32* %v4_8053355, align 4
  br label %dec_label_pc_805339b

dec_label_pc_805335c:                             ; preds = %dec_label_pc_805333b
  store i32 %v1_8053438, i32* %eax.global-to-local, align 4
  %v0_8053365 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053365 = add i32 %v0_8053365, %v1_8053438
  store i32 %v2_8053365, i32* @edx, align 4
  %v1_8053368 = load i32, i32* @ebp, align 4
  %v2_8053368 = add i32 %v1_8053368, 8
  %v3_8053368 = inttoptr i32 %v2_8053368 to i32*
  store i32 %v2_8053365, i32* %v3_8053368, align 4
  %v0_805336b = load i32, i32* @edx, align 4
  %v1_805336b = load i32, i32* @ebp, align 4
  %v2_805336b = add i32 %v1_805336b, 12
  %v3_805336b = inttoptr i32 %v2_805336b to i32*
  store i32 %v0_805336b, i32* %v3_805336b, align 4
  %v0_805336e = load i32, i32* @edx, align 4
  %v1_805336e = add i32 %v0_805336e, 8
  %v2_805336e = inttoptr i32 %v1_805336e to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v2_805336e, align 4
  %v0_8053375 = load i32, i32* @edx, align 4
  %v1_8053375 = add i32 %v0_8053375, 12
  %v2_8053375 = inttoptr i32 %v1_8053375 to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v2_8053375, align 4
  br i1 %v6_80530f1, label %dec_label_pc_8053384, label %dec_label_pc_805337e

dec_label_pc_805337e:                             ; preds = %dec_label_pc_805335c
  %v0_805337e = load i32, i32* @edx, align 4
  store i32 %v0_805337e, i32* @global_var_8056410.50, align 16
  br label %dec_label_pc_8053384

dec_label_pc_8053384:                             ; preds = %dec_label_pc_805335c, %dec_label_pc_805337e
  %v4_8053384 = or i32 %v1_8053438, 1
  %v0_8053389 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8053384, i32* %ebx.global-to-local, align 4
  %v1_805338f = or i32 %v0_8053389, 1
  store i32 %v1_805338f, i32* %eax.global-to-local, align 4
  %v1_8053392 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053392 = add i32 %v1_8053392, 4
  %v3_8053392 = inttoptr i32 %v2_8053392 to i32*
  store i32 %v4_8053384, i32* %v3_8053392, align 4
  %v0_8053395 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053395 = load i32, i32* @edx, align 4
  %v3_8053395 = add i32 %v1_8053395, %v0_8053395
  %v4_8053395 = inttoptr i32 %v3_8053395 to i32*
  store i32 %v0_8053395, i32* %v4_8053395, align 4
  %v0_8053398 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053398 = load i32, i32* @edx, align 4
  %v2_8053398 = add i32 %v1_8053398, 4
  %v3_8053398 = inttoptr i32 %v2_8053398 to i32*
  store i32 %v0_8053398, i32* %v3_8053398, align 4
  br label %dec_label_pc_805339b

dec_label_pc_805339b:                             ; preds = %dec_label_pc_8053355, %dec_label_pc_8053384
  %v0_805339b = load i32, i32* %ecx.global-to-local, align 4
  %v1_805339b = add i32 %v0_805339b, 8
  store i32 %v1_805339b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805379d

dec_label_pc_80533a3.loopexit:                    ; preds = %dec_label_pc_80532f0
  br label %dec_label_pc_80533a3

dec_label_pc_80533a3:                             ; preds = %dec_label_pc_80533a3.loopexit, %dec_label_pc_80530ab, %dec_label_pc_80530b3
  %v0_80533a3 = load i32, i32* @global_var_805640c.49, align 4
  store i32 %v0_80533a3, i32* @ebx, align 4
  %v1_80533ad = add i32 %v1_8053438, 16
  store i32 %v1_80533ad, i32* @esi, align 4
  %v1_80533b0 = add i32 %v0_80533a3, 4
  %v2_80533b0 = inttoptr i32 %v1_80533b0 to i32*
  %v3_80533b0 = load i32, i32* %v2_80533b0, align 4
  %v1_80533b7 = and i32 %v3_80533b0, -4
  store i32 %v1_80533b7, i32* %ecx.global-to-local, align 4
  %v7_80533ba = icmp ult i32 %v1_80533b7, %v1_80533ad
  br i1 %v7_80533ba, label %dec_label_pc_80533da, label %dec_label_pc_80533be

dec_label_pc_80533be:                             ; preds = %dec_label_pc_80533a3
  %v2_80533c2 = add i32 %v0_80533a3, %v1_8053438
  store i32 %v2_80533c2, i32* @edx, align 4
  %v1_80533c5 = or i32 %v1_8053438, 1
  store i32 %v1_80533c5, i32* %eax.global-to-local, align 4
  store i32 %v2_80533c2, i32* @global_var_805640c.49, align 4
  store i32 %v1_80533c5, i32* %v2_80533b0, align 4
  %v0_80533d1 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80533d1 = sub i32 %v0_80533d1, %v1_8053438
  store i32 %v5_80533d1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805372d

dec_label_pc_80533da:                             ; preds = %dec_label_pc_80533a3
  %v0_80533da = load i32, i32* @global_var_805673c.54, align 4
  store i32 %v0_80533da, i32* %edx.global-to-local, align 4
  %v0_80533e0 = load i8, i8* @global_var_80563e0.48, align 32
  %v1_80533e0 = and i8 %v0_80533e0, 2
  %v2_80533e0 = icmp eq i8 %v1_80533e0, 0
  br i1 %v2_80533e0, label %dec_label_pc_805340e, label %dec_label_pc_80533e9

dec_label_pc_80533e9:                             ; preds = %dec_label_pc_80533da
  store i32 ptrtoint (i8* @global_var_80563e0.48 to i32), i32* %stack_var_-92, align 4
  %v2_80533f1 = call i32 @function_8053c61(i32* bitcast (i8* @global_var_80563e0.48 to i32*))
  store i32 ptrtoint (i8* @global_var_80563e0.48 to i32), i32* @ebx, align 4
  %v1_80533fb = add i32 %v1_8053438, -7
  store i32 %v1_80533fb, i32* %eax.global-to-local, align 4
  store i32 %v1_80533fb, i32* %stack_var_-92, align 4
  %v1_80533ff = call i32 @function_8053044(i32 %v1_80533fb)
  store i32 %v1_80533ff, i32* %eax.global-to-local, align 4
  store i32 %v1_80533ff, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805379d

dec_label_pc_805340e:                             ; preds = %dec_label_pc_80533da
  %v1_805340e = add i32 %v0_80533da, -1
  store i32 %v1_805340e, i32* @ecx, align 4
  store i32 %v1_8053438, i32* @ebx, align 4
  %v1_8053419 = load i32, i32* @global_var_805672c.55, align 4
  %v7_8053419 = icmp ult i32 %v1_8053438, %v1_8053419
  br i1 %v7_8053419, label %dec_label_pc_80534db, label %dec_label_pc_8053425

dec_label_pc_8053425:                             ; preds = %dec_label_pc_805340e
  %v0_8053425 = load i32, i32* @global_var_8056730.56, align 16
  store i32 %v0_8053425, i32* %eax.global-to-local, align 4
  %v1_805342a = load i32, i32* @global_var_8056734.57, align 4
  %v5_8053430 = icmp slt i32 %v0_8053425, %v1_805342a
  br i1 %v5_8053430, label %dec_label_pc_8053436, label %dec_label_pc_80534db

dec_label_pc_8053436:                             ; preds = %dec_label_pc_8053425
  %v2_8053438 = add i32 %v1_8053438, 10
  %v3_8053438 = add i32 %v2_8053438, %v0_80533da
  %v1_805343c = sub i32 0, %v0_80533da
  store i32 %v1_805343c, i32* %eax.global-to-local, align 4
  %v2_805343e = and i32 %v3_8053438, %v1_805343c
  store i32 %v2_805343e, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_805343e, %v1_8053438
  br i1 %tmp128, label %dec_label_pc_805344a, label %dec_label_pc_80534db

dec_label_pc_805344a:                             ; preds = %dec_label_pc_8053436
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053457 = call i32 @function_8054888(i32 0, i32 %v2_805343e, i32 3, i32 34, i32 0, i32 0, i32 %v1_805340e, i32 %v1_805340e)
  store i32 %v8_8053457, i32* %eax.global-to-local, align 4
  store i32 %v8_8053457, i32* @edx, align 4
  %v10_8053461 = icmp eq i32 %v8_8053457, -1
  br i1 %v10_8053461, label %dec_label_pc_805344a.dec_label_pc_80534db_crit_edge, label %dec_label_pc_8053466

dec_label_pc_805344a.dec_label_pc_80534db_crit_edge: ; preds = %dec_label_pc_805344a
  %v0_80534db.pre = load i32, i32* @global_var_805640c.49, align 4
  br label %dec_label_pc_80534db

dec_label_pc_8053466:                             ; preds = %dec_label_pc_805344a
  %v1_8053468 = urem i32 %v8_8053457, 8
  %v2_8053468 = icmp eq i32 %v1_8053468, 0
  store i32 %v1_8053468, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053468, label %dec_label_pc_8053480, label %dec_label_pc_805346d

dec_label_pc_805346d:                             ; preds = %dec_label_pc_8053466
  %v0_8053472 = load i32, i32* @ebx, align 4
  %v2_8053474 = sub nsw i32 8, %v1_8053468
  store i32 %v2_8053474, i32* %eax.global-to-local, align 4
  %v2_8053476 = add i32 %v2_8053474, %v8_8053457
  store i32 %v2_8053476, i32* @edx, align 4
  %v2_8053478 = sub i32 %v0_8053472, %v2_8053474
  store i32 %v2_8053478, i32* %esi.global-to-local, align 4
  %v2_805347a = inttoptr i32 %v2_8053476 to i32*
  store i32 %v2_8053474, i32* %v2_805347a, align 4
  br label %dec_label_pc_8053488

dec_label_pc_8053480:                             ; preds = %dec_label_pc_8053466
  %v1_8053480 = inttoptr i32 %v8_8053457 to i32*
  store i32 0, i32* %v1_8053480, align 4
  br label %dec_label_pc_8053488

dec_label_pc_8053488:                             ; preds = %dec_label_pc_805346d, %dec_label_pc_8053480
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805346d ], [ @ebx, %dec_label_pc_8053480 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8053488 = or i32 %storemerge, 2
  %v1_805348b = load i32, i32* @edx, align 4
  %v2_805348b = add i32 %v1_805348b, 4
  %v3_805348b = inttoptr i32 %v2_805348b to i32*
  store i32 %v1_8053488, i32* %v3_805348b, align 4
  %v0_805348e = load i32, i32* @global_var_8056730.56, align 16
  %v1_8053493 = add i32 %v0_805348e, 1
  store i32 %v1_8053493, i32* %eax.global-to-local, align 4
  store i32 %v1_8053493, i32* @global_var_8056730.56, align 16
  %v1_8053499 = load i32, i32* @global_var_8056738.58, align 8
  %v7_805349f = icmp sgt i32 %v1_8053493, %v1_8053499
  br i1 %v7_805349f, label %dec_label_pc_80534a1, label %dec_label_pc_80534a6

dec_label_pc_80534a1:                             ; preds = %dec_label_pc_8053488
  store i32 %v1_8053493, i32* @global_var_8056738.58, align 8
  br label %dec_label_pc_80534a6

dec_label_pc_80534a6:                             ; preds = %dec_label_pc_8053488, %dec_label_pc_80534a1
  %v0_80534a6 = load i32, i32* @global_var_8056744.59, align 4
  %v1_80534ab = load i32, i32* @ebx, align 4
  %v2_80534ab = add i32 %v1_80534ab, %v0_80534a6
  store i32 %v2_80534ab, i32* %eax.global-to-local, align 4
  store i32 %v2_80534ab, i32* @global_var_8056744.59, align 4
  %v1_80534b2 = load i32, i32* @global_var_8056750.60, align 16
  %tmp129 = icmp ugt i32 %v2_80534ab, %v1_80534b2
  br i1 %tmp129, label %dec_label_pc_80534ba, label %dec_label_pc_80534bf

dec_label_pc_80534ba:                             ; preds = %dec_label_pc_80534a6
  store i32 %v2_80534ab, i32* @global_var_8056750.60, align 16
  br label %dec_label_pc_80534bf

dec_label_pc_80534bf:                             ; preds = %dec_label_pc_80534a6, %dec_label_pc_80534ba
  %v1_80534bf = load i32, i32* @global_var_8056748.61, align 8
  %v2_80534bf = add i32 %v1_80534bf, %v2_80534ab
  store i32 %v2_80534bf, i32* %eax.global-to-local, align 4
  %v1_80534c5 = load i32, i32* @global_var_8056754.62, align 4
  %tmp130 = icmp ugt i32 %v2_80534bf, %v1_80534c5
  br i1 %tmp130, label %dec_label_pc_80534d1, label %dec_label_pc_8053122

dec_label_pc_80534d1:                             ; preds = %dec_label_pc_80534bf
  store i32 %v2_80534bf, i32* @global_var_8056754.62, align 4
  br label %dec_label_pc_8053122

dec_label_pc_80534db:                             ; preds = %dec_label_pc_8053436, %dec_label_pc_805344a.dec_label_pc_80534db_crit_edge, %dec_label_pc_8053425, %dec_label_pc_805340e
  %v0_80534db = phi i32 [ %v0_80534db.pre, %dec_label_pc_805344a.dec_label_pc_80534db_crit_edge ], [ %v0_80533a3, %dec_label_pc_8053425 ], [ %v0_80533a3, %dec_label_pc_8053436 ], [ %v0_80533a3, %dec_label_pc_805340e ]
  store i32 %v0_80534db, i32* %eax.global-to-local, align 4
  %v1_80534e4 = add i32 %v0_80534db, 4
  %v2_80534e4 = inttoptr i32 %v1_80534e4 to i32*
  %v3_80534e4 = load i32, i32* %v2_80534e4, align 4
  %v1_80534ee = and i32 %v3_80534e4, -4
  %v2_80534ee = icmp eq i32 %v1_80534ee, 0
  store i32 %v1_80534ee, i32* @ebp, align 4
  %v1_80534f1 = load i32, i32* @global_var_8056728.63, align 8
  %v2_80534f1 = add i32 %v1_80534f1, %v1_80533ad
  store i32 %v2_80534f1, i32* %eax.global-to-local, align 4
  %v0_80534f7 = load i8, i8* @global_var_8056740.64, align 64
  %v1_80534f7 = urem i8 %v0_80534f7, 2
  %v2_80534f7 = icmp eq i8 %v1_80534f7, 0
  br i1 %v2_80534f7, label %dec_label_pc_8053502, label %dec_label_pc_8053500

dec_label_pc_8053500:                             ; preds = %dec_label_pc_80534db
  %v2_8053500 = sub i32 %v2_80534f1, %v1_80534ee
  store i32 %v2_8053500, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053502

dec_label_pc_8053502:                             ; preds = %dec_label_pc_80534db, %dec_label_pc_8053500
  %v0_8053506 = phi i32 [ %v2_80534f1, %dec_label_pc_80534db ], [ %v2_8053500, %dec_label_pc_8053500 ]
  %v5_8053506 = add i32 %v0_8053506, %v1_805340e
  store i32 %v5_8053506, i32* %eax.global-to-local, align 4
  %v1_805350a = sub i32 0, %v0_80533da
  store i32 %v1_805350a, i32* @edx, align 4
  %v2_8053512 = and i32 %v5_8053506, %v1_805350a
  store i32 %v2_8053512, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8053512, 1
  br i1 %tmp91, label %dec_label_pc_805352c, label %dec_label_pc_8053516

dec_label_pc_8053516:                             ; preds = %dec_label_pc_8053502
  store i32 %v2_8053512, i32* %stack_var_-92, align 4
  %v1_805351a = call i32 @function_8054d39(i32 %v2_8053512)
  store i32 %v1_805351a, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_805351a, i32* @ebx, align 4
  %v10_8053527 = icmp eq i32 %v1_805351a, -1
  %v1_805352a = icmp eq i1 %v10_8053527, false
  br i1 %v1_805352a, label %dec_label_pc_8053582.dec_label_pc_805358b_crit_edge, label %dec_label_pc_8053516.dec_label_pc_805352c_crit_edge

dec_label_pc_8053516.dec_label_pc_805352c_crit_edge: ; preds = %dec_label_pc_8053516
  %v0_805352c.pre = load i8, i8* @global_var_8056740.64, align 64
  br label %dec_label_pc_805352c

dec_label_pc_805352c:                             ; preds = %dec_label_pc_8053516.dec_label_pc_805352c_crit_edge, %dec_label_pc_8053502
  %v0_8053558 = phi i32 [ -1, %dec_label_pc_8053516.dec_label_pc_805352c_crit_edge ], [ %v1_805350a, %dec_label_pc_8053502 ]
  %v0_805352c = phi i8 [ %v0_805352c.pre, %dec_label_pc_8053516.dec_label_pc_805352c_crit_edge ], [ %v0_80534f7, %dec_label_pc_8053502 ]
  %v1_805352c = urem i8 %v0_805352c, 2
  %v2_805352c = icmp eq i8 %v1_805352c, 0
  br i1 %v2_805352c, label %dec_label_pc_805352c.dec_label_pc_8053541_crit_edge, label %dec_label_pc_8053535

dec_label_pc_805352c.dec_label_pc_8053541_crit_edge: ; preds = %dec_label_pc_805352c
  %v0_8053541.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053541

dec_label_pc_8053535:                             ; preds = %dec_label_pc_805352c
  %v2_8053539 = add i32 %v1_80534ee, %v1_805340e
  store i32 %v2_8053539, i32* %eax.global-to-local, align 4
  %v0_805353b = load i32, i32* @esi, align 4
  %v2_805353b = add i32 %v0_805353b, %v2_8053539
  %v5_805353d = and i32 %v2_805353b, %v1_805350a
  store i32 %v5_805353d, i32* @esi, align 4
  br label %dec_label_pc_8053541

dec_label_pc_8053541:                             ; preds = %dec_label_pc_805352c.dec_label_pc_8053541_crit_edge, %dec_label_pc_8053535
  %v0_8053541 = phi i32 [ %v0_8053541.pre, %dec_label_pc_805352c.dec_label_pc_8053541_crit_edge ], [ %v5_805353d, %dec_label_pc_8053535 ]
  %tmp131 = icmp ult i32 %v0_8053541, 1048576
  br i1 %tmp131, label %dec_label_pc_8053549, label %dec_label_pc_805354e

dec_label_pc_8053549:                             ; preds = %dec_label_pc_8053541
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_805354e

dec_label_pc_805354e:                             ; preds = %dec_label_pc_8053541, %dec_label_pc_8053549
  %v0_8053562 = phi i32 [ %v0_8053541, %dec_label_pc_8053541 ], [ 1048576, %dec_label_pc_8053549 ]
  %tmp132 = icmp ugt i32 %v0_8053562, %v1_8053438
  br i1 %tmp132, label %dec_label_pc_8053558, label %dec_label_pc_8053790

dec_label_pc_8053558:                             ; preds = %dec_label_pc_805354e
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053565 = call i32 @function_8054888(i32 0, i32 %v0_8053562, i32 3, i32 34, i32 0, i32 0, i32 %v0_8053558, i32 %v0_8053558)
  store i32 %v8_8053565, i32* %eax.global-to-local, align 4
  store i32 %v8_8053565, i32* @ebx, align 4
  %v10_805356f = icmp eq i32 %v8_8053565, -1
  br i1 %v10_805356f, label %dec_label_pc_8053790, label %dec_label_pc_8053582.thread

dec_label_pc_8053582.thread:                      ; preds = %dec_label_pc_8053558
  %v0_8053578 = load i8, i8* @global_var_8056740.64, align 1
  %v2_8053578 = and i8 %v0_8053578, -2
  store i8 %v2_8053578, i8* @global_var_8056740.64, align 64
  %v1_805357f = load i32, i32* @esi, align 4
  %v2_805357f = add i32 %v1_805357f, %v8_8053565
  store i32 %v2_805357f, i32* @edx, align 4
  br label %dec_label_pc_805358b

dec_label_pc_8053582.dec_label_pc_805358b_crit_edge: ; preds = %dec_label_pc_8053516
  %v1_805358f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805358b

dec_label_pc_805358b:                             ; preds = %dec_label_pc_8053582.dec_label_pc_805358b_crit_edge, %dec_label_pc_8053582.thread
  %v1_805358f = phi i32 [ %v1_805357f, %dec_label_pc_8053582.thread ], [ %v1_805358f.pre, %dec_label_pc_8053582.dec_label_pc_805358b_crit_edge ]
  %v0_805365794 = phi i32 [ %v8_8053565, %dec_label_pc_8053582.thread ], [ %v1_805351a, %dec_label_pc_8053582.dec_label_pc_805358b_crit_edge ]
  %v0_805364993 = phi i32 [ %v2_805357f, %dec_label_pc_8053582.thread ], [ -1, %dec_label_pc_8053582.dec_label_pc_805358b_crit_edge ]
  %v0_805358f = load i32, i32* @global_var_8056748.61, align 8
  %v2_805358f = add i32 %v1_805358f, %v0_805358f
  store i32 %v2_805358f, i32* @global_var_8056748.61, align 8
  %v2_8053595 = add i32 %v1_80534ee, %v0_80534db
  store i32 %v2_8053595, i32* %ecx.global-to-local, align 4
  %v2_8053597 = sub i32 %v0_805365794, %v2_8053595
  %v7_8053597 = icmp ult i32 %v0_805365794, %v2_8053595
  %v12_8053597 = icmp eq i32 %v2_8053597, 0
  %v1_8053599 = icmp eq i1 %v12_8053597, false
  br i1 %v1_8053599, label %dec_label_pc_80535b2, label %dec_label_pc_805359b

dec_label_pc_805359b:                             ; preds = %dec_label_pc_805358b
  %v10_805359b = icmp eq i32 %v0_805364993, -1
  %v1_805359e = icmp eq i1 %v10_805359b, false
  br i1 %v1_805359e, label %dec_label_pc_80535b2, label %dec_label_pc_80535a0

dec_label_pc_80535a0:                             ; preds = %dec_label_pc_805359b
  %v2_80535a0 = add i32 %v1_805358f, %v1_80534ee
  store i32 %v0_80534db, i32* %ecx.global-to-local, align 4
  %v1_80535a7 = or i32 %v2_80535a0, 1
  store i32 %v1_80535a7, i32* %eax.global-to-local, align 4
  store i32 %v1_80535a7, i32* %v2_80534e4, align 4
  br label %dec_label_pc_80536df

dec_label_pc_80535b2:                             ; preds = %dec_label_pc_805359b, %dec_label_pc_805358b
  %v0_80535b2 = load i8, i8* @global_var_8056740.64, align 1
  %v1_80535b2 = sext i8 %v0_80535b2 to i32
  store i32 %v1_80535b2, i32* %eax.global-to-local, align 4
  %v2_80535b7 = urem i8 %v0_80535b2, 2
  %v3_80535b7 = icmp eq i8 %v2_80535b7, 0
  br i1 %v3_80535b7, label %dec_label_pc_80535cb, label %dec_label_pc_80535bb

dec_label_pc_80535bb:                             ; preds = %dec_label_pc_80535b2
  br i1 %v2_80534ee, label %dec_label_pc_80535cb, label %dec_label_pc_80535bf

dec_label_pc_80535bf:                             ; preds = %dec_label_pc_80535bb
  %v1_80535c1 = icmp eq i1 %v7_8053597, false
  br i1 %v1_80535c1, label %dec_label_pc_80535cb, label %dec_label_pc_80535c3

dec_label_pc_80535c3:                             ; preds = %dec_label_pc_80535bf
  %v1_80535c3 = and i32 %v1_80535b2, -2
  %v4_80535c3 = trunc i32 %v1_80535c3 to i8
  store i32 %v1_80535c3, i32* %eax.global-to-local, align 4
  store i8 %v4_80535c3, i8* @global_var_8056740.64, align 64
  br label %dec_label_pc_80535cb

dec_label_pc_80535cb:                             ; preds = %dec_label_pc_80535bf, %dec_label_pc_80535bb, %dec_label_pc_80535b2, %dec_label_pc_80535c3
  %v0_80535cb = phi i8 [ %v0_80535b2, %dec_label_pc_80535bf ], [ %v0_80535b2, %dec_label_pc_80535bb ], [ %v0_80535b2, %dec_label_pc_80535b2 ], [ %v4_80535c3, %dec_label_pc_80535c3 ]
  %v1_80535cb = urem i8 %v0_80535cb, 2
  %v2_80535cb = icmp eq i8 %v1_80535cb, 0
  br i1 %v2_80535cb, label %dec_label_pc_8053649, label %dec_label_pc_80535d4

dec_label_pc_80535d4:                             ; preds = %dec_label_pc_80535cb
  br i1 %v2_80534ee, label %dec_label_pc_80535e2, label %dec_label_pc_80535d8

dec_label_pc_80535d8:                             ; preds = %dec_label_pc_80535d4
  store i32 %v2_8053597, i32* %eax.global-to-local, align 4
  %v2_80535dc = add i32 %v2_805358f, %v2_8053597
  store i32 %v2_80535dc, i32* @global_var_8056748.61, align 8
  br label %dec_label_pc_80535e2

dec_label_pc_80535e2:                             ; preds = %dec_label_pc_80535d4, %dec_label_pc_80535d8
  %v1_80535e4 = urem i32 %v0_805365794, 8
  %v2_80535e4 = icmp eq i32 %v1_80535e4, 0
  store i32 %v1_80535e4, i32* %edx.global-to-local, align 4
  %v1_80535e7 = icmp eq i1 %v2_80535e4, false
  br i1 %v1_80535e7, label %dec_label_pc_80535ef, label %dec_label_pc_80535e9

dec_label_pc_80535e9:                             ; preds = %dec_label_pc_80535e2
  store i32 %v0_805365794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535f9

dec_label_pc_80535ef:                             ; preds = %dec_label_pc_80535e2
  %v2_80535f4 = sub nsw i32 8, %v1_80535e4
  store i32 %v2_80535f4, i32* %eax.global-to-local, align 4
  %v2_80535f6 = add i32 %v2_80535f4, %v0_805365794
  store i32 %v2_80535f6, i32* @edi, align 4
  br label %dec_label_pc_80535f9

dec_label_pc_80535f9:                             ; preds = %dec_label_pc_80535e9, %dec_label_pc_80535ef
  %v0_80535fc = phi i32 [ 0, %dec_label_pc_80535e9 ], [ %v2_80535f4, %dec_label_pc_80535ef ]
  %v2_80535f9 = add i32 %v1_805358f, %v0_805365794
  %v2_80535fc = add i32 %v0_80535fc, %v1_80534ee
  store i32 %v2_80535fc, i32* %ecx.global-to-local, align 4
  %v2_8053605 = add i32 %v2_80535fc, %v2_80535f9
  store i32 %v2_8053605, i32* %edx.global-to-local, align 4
  %v2_805360b = add i32 %v2_8053605, %v1_805340e
  %v5_805360e = and i32 %v2_805360b, %v1_805350a
  %v2_8053615 = sub i32 %v5_805360e, %v2_8053605
  store i32 %v2_8053615, i32* %eax.global-to-local, align 4
  %v2_8053617 = add i32 %v2_8053615, %v2_80535fc
  store i32 %v2_8053617, i32* @esi, align 4
  store i32 %v2_8053617, i32* %stack_var_-92, align 4
  %v1_805361b = call i32 @function_8054d39(i32 %v2_8053617)
  store i32 %v1_805361b, i32* %eax.global-to-local, align 4
  store i32 %v1_805361b, i32* @edx, align 4
  %v10_8053625 = icmp eq i32 %v1_805361b, -1
  %v1_8053628 = icmp eq i1 %v10_8053625, false
  br i1 %v1_8053628, label %dec_label_pc_8053638, label %dec_label_pc_805362a

dec_label_pc_805362a:                             ; preds = %dec_label_pc_80535f9
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805362f = call i32 @function_8054d39(i32 0)
  store i32 %v1_805362f, i32* %eax.global-to-local, align 4
  store i32 %v1_805362f, i32* @edx, align 4
  br label %dec_label_pc_805366c

dec_label_pc_8053638:                             ; preds = %dec_label_pc_80535f9
  %v1_8053638 = load i32, i32* @ebx, align 4
  %v7_8053638 = icmp ult i32 %v1_805361b, %v1_8053638
  %v1_805363a = icmp eq i1 %v7_8053638, false
  br i1 %v1_805363a, label %dec_label_pc_8053671, label %dec_label_pc_805363c

dec_label_pc_805363c:                             ; preds = %dec_label_pc_8053638
  %v0_805363c = load i8, i8* @global_var_8056740.64, align 1
  %v2_805363c = and i8 %v0_805363c, -2
  store i8 %v2_805363c, i8* @global_var_8056740.64, align 64
  store i32 %v2_80535f9, i32* @edx, align 4
  br label %dec_label_pc_8053650

dec_label_pc_8053649:                             ; preds = %dec_label_pc_80535cb
  %v10_8053649 = icmp eq i32 %v0_805364993, -1
  br i1 %v10_8053649, label %dec_label_pc_8053654, label %dec_label_pc_805364e

dec_label_pc_805364e:                             ; preds = %dec_label_pc_8053649
  store i32 %v0_805365794, i32* @edi, align 4
  br label %dec_label_pc_8053650

dec_label_pc_8053650:                             ; preds = %dec_label_pc_805363c, %dec_label_pc_805364e
  %v0_805367158 = phi i32 [ %v2_80535f9, %dec_label_pc_805363c ], [ %v0_805364993, %dec_label_pc_805364e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053671

dec_label_pc_8053654:                             ; preds = %dec_label_pc_8053649
  store i32 %v0_805365794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805365b = call i32 @function_8054d39(i32 0)
  store i32 %v1_805365b, i32* @edx, align 4
  %v1_8053662 = load i32, i32* @ebx, align 4
  %v2_8053662 = sub i32 %v1_805365b, %v1_8053662
  %v1_8053664 = load i32, i32* @esi, align 4
  %v2_8053664 = sub i32 %v2_8053662, %v1_8053664
  store i32 %v2_8053664, i32* %eax.global-to-local, align 4
  %v0_8053666 = load i32, i32* @global_var_8056748.61, align 8
  %v2_8053666 = add i32 %v0_8053666, %v2_8053664
  store i32 %v2_8053666, i32* @global_var_8056748.61, align 8
  br label %dec_label_pc_805366c

dec_label_pc_805366c:                             ; preds = %dec_label_pc_805362a, %dec_label_pc_8053654
  %v0_805367157 = phi i32 [ %v1_805362f, %dec_label_pc_805362a ], [ %v1_805365b, %dec_label_pc_8053654 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053671

dec_label_pc_8053671:                             ; preds = %dec_label_pc_8053638, %dec_label_pc_8053650, %dec_label_pc_805366c
  %v0_8053676 = phi i32 [ %v1_805361b, %dec_label_pc_8053638 ], [ %v0_805367158, %dec_label_pc_8053650 ], [ %v0_805367157, %dec_label_pc_805366c ]
  %v10_8053671 = icmp eq i32 %v0_8053676, -1
  br i1 %v10_8053671, label %dec_label_pc_80536df, label %dec_label_pc_8053676

dec_label_pc_8053676:                             ; preds = %dec_label_pc_8053671
  %v1_8053676 = load i32, i32* @edi, align 4
  %v2_8053676 = sub i32 %v0_8053676, %v1_8053676
  store i32 %v2_8053676, i32* @edx, align 4
  store i32 %v1_8053676, i32* @global_var_805640c.49, align 4
  %v1_805367e = load i32, i32* @esi, align 4
  %v2_805367e = add i32 %v1_805367e, %v2_8053676
  %v1_8053681 = or i32 %v2_805367e, 1
  store i32 %v1_8053681, i32* %eax.global-to-local, align 4
  %v2_8053684 = add i32 %v1_8053676, 4
  %v3_8053684 = inttoptr i32 %v2_8053684 to i32*
  store i32 %v1_8053681, i32* %v3_8053684, align 4
  %v0_8053687 = load i32, i32* @global_var_8056748.61, align 8
  %v1_8053687 = load i32, i32* @esi, align 4
  %v2_8053687 = add i32 %v1_8053687, %v0_8053687
  store i32 %v2_8053687, i32* @global_var_8056748.61, align 8
  br i1 %v2_80534ee, label %dec_label_pc_80536df, label %dec_label_pc_8053691

dec_label_pc_8053691:                             ; preds = %dec_label_pc_8053676
  %v1_8053691 = add i32 %v1_80534ee, -12
  store i32 %v0_80534db, i32* %ecx.global-to-local, align 4
  %v1_8053698 = and i32 %v1_8053691, -8
  store i32 %v1_8053698, i32* %eax.global-to-local, align 4
  %v1_805369d = or i32 %v1_8053698, 1
  store i32 %v1_805369d, i32* @edx, align 4
  %v5_80536a0 = icmp ult i32 %v1_8053698, 15
  store i32 %v1_805369d, i32* %v2_80534e4, align 4
  %v0_80536a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80536a6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80536a6 = add i32 %v0_80536a6, 4
  %v3_80536a6 = add i32 %v2_80536a6, %v1_80536a6
  %v4_80536a6 = inttoptr i32 %v3_80536a6 to i32*
  store i32 5, i32* %v4_80536a6, align 4
  %v0_80536ae = load i32, i32* %ecx.global-to-local, align 4
  %v1_80536ae = load i32, i32* %eax.global-to-local, align 4
  %v2_80536ae = add i32 %v0_80536ae, 8
  %v3_80536ae = add i32 %v2_80536ae, %v1_80536ae
  %v4_80536ae = inttoptr i32 %v3_80536ae to i32*
  store i32 5, i32* %v4_80536ae, align 4
  br i1 %v5_80536a0, label %dec_label_pc_80536df, label %dec_label_pc_80536b8

dec_label_pc_80536b8:                             ; preds = %dec_label_pc_8053691
  %v0_80536bb = load i32, i32* %ecx.global-to-local, align 4
  %v1_80536bd = add i32 %v0_80536bb, 8
  store i32 %v1_80536bd, i32* %eax.global-to-local, align 4
  %v0_80536c0 = load i32, i32* @global_var_8056724.65, align 4
  store i32 %v0_80536c0, i32* @ebx, align 4
  store i32 %v1_80536bd, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056724.65, align 4
  %v1_80536d1 = call i32 @function_8053e09(i32 %v1_80536bd)
  store i32 %v1_80536d1, i32* %eax.global-to-local, align 4
  %v0_80536d6 = load i32, i32* @ebx, align 4
  store i32 %v0_80536d6, i32* @global_var_8056724.65, align 4
  br label %dec_label_pc_80536df

dec_label_pc_80536df:                             ; preds = %dec_label_pc_8053691, %dec_label_pc_8053676, %dec_label_pc_8053671, %dec_label_pc_80535a0, %dec_label_pc_80536b8
  %v0_80536df = load i32, i32* @global_var_8056748.61, align 8
  store i32 %v0_80536df, i32* %eax.global-to-local, align 4
  %v1_80536e4 = load i32, i32* @global_var_805674c.66, align 4
  %tmp133 = icmp ugt i32 %v0_80536df, %v1_80536e4
  br i1 %tmp133, label %dec_label_pc_80536ec, label %dec_label_pc_80536f1

dec_label_pc_80536ec:                             ; preds = %dec_label_pc_80536df
  store i32 %v0_80536df, i32* @global_var_805674c.66, align 4
  br label %dec_label_pc_80536f1

dec_label_pc_80536f1:                             ; preds = %dec_label_pc_80536df, %dec_label_pc_80536ec
  %v1_80536f1 = load i32, i32* @global_var_8056744.59, align 4
  %v2_80536f1 = add i32 %v1_80536f1, %v0_80536df
  store i32 %v2_80536f1, i32* %eax.global-to-local, align 4
  %v1_80536f7 = load i32, i32* @global_var_8056754.62, align 4
  %tmp134 = icmp ugt i32 %v2_80536f1, %v1_80536f7
  br i1 %tmp134, label %dec_label_pc_80536ff, label %dec_label_pc_8053704

dec_label_pc_80536ff:                             ; preds = %dec_label_pc_80536f1
  store i32 %v2_80536f1, i32* @global_var_8056754.62, align 4
  br label %dec_label_pc_8053704

dec_label_pc_8053704:                             ; preds = %dec_label_pc_80536f1, %dec_label_pc_80536ff
  %v0_8053704 = load i32, i32* @global_var_805640c.49, align 4
  store i32 %v0_8053704, i32* @ebx, align 4
  %v1_805370a = add i32 %v0_8053704, 4
  %v2_805370a = inttoptr i32 %v1_805370a to i32*
  %v3_805370a = load i32, i32* %v2_805370a, align 4
  %v1_805370d = and i32 %v3_805370a, -4
  store i32 %v1_805370d, i32* %ecx.global-to-local, align 4
  %v10_8053710 = icmp ult i32 %v1_805370d, %v1_80533ad
  br i1 %v10_8053710, label %dec_label_pc_8053790, label %dec_label_pc_8053716

dec_label_pc_8053716:                             ; preds = %dec_label_pc_8053704
  store i32 %v1_8053438, i32* %esi.global-to-local, align 4
  %v2_805371c = sub i32 %v1_805370d, %v1_8053438
  store i32 %v2_805371c, i32* %ecx.global-to-local, align 4
  %v2_805371e = add i32 %v0_8053704, %v1_8053438
  store i32 %v2_805371e, i32* @edx, align 4
  %v1_8053721 = or i32 %v1_8053438, 1
  store i32 %v1_8053721, i32* %eax.global-to-local, align 4
  store i32 %v2_805371e, i32* @global_var_805640c.49, align 4
  store i32 %v1_8053721, i32* %v2_805370a, align 4
  %v0_805372d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805372d

dec_label_pc_805372d:                             ; preds = %dec_label_pc_80533be, %dec_label_pc_8053716
  %v0_805372d = phi i32 [ %v5_80533d1, %dec_label_pc_80533be ], [ %v0_805372d.pre, %dec_label_pc_8053716 ]
  %v1_805372d = or i32 %v0_805372d, 1
  store i32 %v1_805372d, i32* %ecx.global-to-local, align 4
  %v0_8053730 = load i32, i32* @ebx, align 4
  %v1_8053730 = add i32 %v0_8053730, 8
  store i32 %v1_8053730, i32* %ebx.global-to-local, align 4
  %v1_8053733 = load i32, i32* @edx, align 4
  %v2_8053733 = add i32 %v1_8053733, 4
  %v3_8053733 = inttoptr i32 %v2_8053733 to i32*
  store i32 %v1_805372d, i32* %v3_8053733, align 4
  br label %dec_label_pc_805379d

dec_label_pc_8053738:                             ; preds = %dec_label_pc_8053178
  %v5_805373e = sub i32 %v1_805315b, %v1_8053438
  store i32 %v5_805373e, i32* %eax.global-to-local, align 4
  %v2_8053742 = add i32 %v1_805374f, %v1_8053438
  store i32 %v2_8053742, i32* @edx, align 4
  %v1_8053746 = or i32 %v1_8053438, 1
  store i32 %v2_8053742, i32* @global_var_8056410.50, align 16
  store i32 %v1_8053746, i32* %v2_8053155, align 4
  %v0_8053752 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053754 = load i32, i32* @edx, align 4
  store i32 %v0_8053754, i32* @global_var_805641c.67, align 4
  %v1_805375a = or i32 %v0_8053752, 1
  store i32 %v1_805375a, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053754, i32* @global_var_8056420.52, align 32
  %v1_8053763 = add i32 %v0_8053754, 8
  %v2_8053763 = inttoptr i32 %v1_8053763 to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v2_8053763, align 4
  %v0_805376a = load i32, i32* @edx, align 4
  %v1_805376a = add i32 %v0_805376a, 12
  %v2_805376a = inttoptr i32 %v1_805376a to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v2_805376a, align 4
  %v0_8053771 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053771 = load i32, i32* @edx, align 4
  %v2_8053771 = add i32 %v1_8053771, 4
  %v3_8053771 = inttoptr i32 %v2_8053771 to i32*
  store i32 %v0_8053771, i32* %v3_8053771, align 4
  %v0_8053774 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053774 = load i32, i32* @edx, align 4
  %v3_8053774 = add i32 %v1_8053774, %v0_8053774
  %v4_8053774 = inttoptr i32 %v3_8053774 to i32*
  store i32 %v0_8053774, i32* %v4_8053774, align 4
  br label %dec_label_pc_8053782

dec_label_pc_8053779:                             ; preds = %dec_label_pc_8053187
  store i32 %v1_8053438, i32* %ebx.global-to-local, align 4
  %v0_805377d = load i32, i32* @ebp, align 4
  %v2_805377d = or i32 %v1_8053438, 4
  %v3_805377d = add i32 %v0_805377d, %v2_805377d
  %v4_805377d = inttoptr i32 %v3_805377d to i32*
  %v5_805377d = load i32, i32* %v4_805377d, align 4
  %v6_805377d = or i32 %v5_805377d, 1
  store i32 %v6_805377d, i32* %v4_805377d, align 4
  br label %dec_label_pc_8053782

dec_label_pc_8053782:                             ; preds = %dec_label_pc_8053738, %dec_label_pc_8053779
  %v0_8053782 = load i32, i32* @ebp, align 4
  %v1_8053782 = add i32 %v0_8053782, 8
  store i32 %v1_8053782, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805379d

dec_label_pc_8053787:                             ; preds = %dec_label_pc_8053277
  %v1_8053787 = load i32, i32* @ebx, align 4
  %v2_8053787 = add i32 %v0_8053286, 4
  %v3_8053787 = add i32 %v2_8053787, %v1_8053787
  %v4_8053787 = inttoptr i32 %v3_8053787 to i32*
  %v5_8053787 = load i32, i32* %v4_8053787, align 4
  %v6_8053787 = or i32 %v5_8053787, 1
  store i32 %v6_8053787, i32* %v4_8053787, align 4
  br label %dec_label_pc_805378c

dec_label_pc_805378c:                             ; preds = %dec_label_pc_805328f, %dec_label_pc_8053787
  %v0_805378c = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805378c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805379d

dec_label_pc_8053790:                             ; preds = %dec_label_pc_805354e, %dec_label_pc_8053704, %dec_label_pc_8053558
  %v0_8053790 = load i32, i32* %stack_var_-92, align 4
  %v1_8053790 = call i32 @function_8052be9(i32 %v0_8053790)
  store i32 %v1_8053790, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053797 = inttoptr i32 %v1_8053790 to i32*
  store i32 12, i32* %v1_8053797, align 4
  br label %dec_label_pc_805379d

dec_label_pc_805379d:                             ; preds = %dec_label_pc_805378c, %dec_label_pc_8053782, %dec_label_pc_805372d, %dec_label_pc_80533e9, %dec_label_pc_805339b, %dec_label_pc_8053122, %dec_label_pc_8053790
  store i32 %v2_8053059, i32* @eax, align 4
  store i32 %v2_8053059, i32* %stack_var_-92, align 4
  %v2_80537a6 = call i32 @function_8054570(i32 %v2_8053059, i32 1)
  store i32 %v2_80537a6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537ae

dec_label_pc_80537ae:                             ; preds = %dec_label_pc_8053077, %dec_label_pc_805379d
  %v0_80537b1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80537b1, i32* %eax.global-to-local, align 4
  %v2_80537b3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80537b3, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053046, i32* @esi, align 4
  store i32 %v0_8053045, i32* @edi, align 4
  store i32 %v0_8053044, i32* @ebp, align 4
  ret i32 %v0_80537b1

; uselistorder directives
  uselistorder i32 %v0_8053774, { 1, 0 }
  uselistorder i32 %v0_8053754, { 1, 0, 2 }
  uselistorder i32 %v2_80536f1, { 1, 0, 2 }
  uselistorder i32 %v0_80536df, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053676, { 1, 0 }
  uselistorder i32 %v2_8053664, { 1, 0 }
  uselistorder i32 %v1_805361b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8053605, { 1, 0, 2 }
  uselistorder i32 %v2_80535f9, { 1, 2, 0 }
  uselistorder i32 %v2_80535f4, { 1, 0, 2 }
  uselistorder i32 %v1_80535e4, { 2, 1, 0 }
  uselistorder i8 %v0_80535b2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8053595, { 1, 0, 2 }
  uselistorder i32 %v0_805364993, { 2, 0, 1 }
  uselistorder i32 %v0_805365794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_805358f, { 2, 1, 0 }
  uselistorder i32 %v8_8053565, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053562, { 1, 0 }
  uselistorder i32 %v0_8053541, { 1, 0 }
  uselistorder i32 %v2_8053512, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805350a, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80534f7, { 1, 0 }
  uselistorder i1 %v2_80534ee, { 2, 1, 0 }
  uselistorder i32 %v1_80534ee, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_80534db, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_80534bf, { 1, 0, 2 }
  uselistorder i32 %v2_80534ab, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053474, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053468, { 2, 1, 0 }
  uselistorder i32 %v8_8053457, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32 %v2_805343e, { 1, 0, 2 }
  uselistorder i32 %v0_80533da, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80533ad, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80533a3, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8053395, { 1, 0 }
  uselistorder i32 %v1_805332c, { 1, 0 }
  uselistorder i32 %v3_8053320, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8053330, { 1, 0 }
  uselistorder i32 %v2_805331a, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80533177, { 1, 0 }
  uselistorder i32 %v2_805330c, { 1, 0 }
  uselistorder i32 %v1_80532f0, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80532ec, { 2, 1, 0 }
  uselistorder i32 %v1_80532e8, { 1, 0 }
  uselistorder i32 %v1_80532dc, { 2, 1, 0 }
  uselistorder i32 %v2_80532d2, { 1, 0 }
  uselistorder i32 %v1_80532cf, { 1, 2, 0 }
  uselistorder i32 %v4_805326d, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_80532b8, { 1, 0 }
  uselistorder i32 %v0_8053286, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8053259, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053226, { 0, 2, 1 }
  uselistorder i32 %v2_805320a, { 1, 0 }
  uselistorder i32 %v1_8053200, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80531fb.lcssa, { 1, 0 }
  uselistorder i32 %v3_80531eb, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80531e2, { 1, 0, 2 }
  uselistorder i32 %v2_80531be, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80531a6, { 2, 1, 0 }
  uselistorder i32 %v0_8053192, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8053158, { 1, 0, 2 }
  uselistorder i32 %v1_805374f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80532269, { 1, 0, 2 }
  uselistorder i32 %v3_8053105, { 1, 0, 2 }
  uselistorder i32 %v2_80530f7, { 2, 1, 0 }
  uselistorder i32 %v2_80530d2, { 2, 1, 0 }
  uselistorder i8 %v0_80530a0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_8053438, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8053089, { 0, 2, 1 }
  uselistorder i32 %v0_8053072, { 1, 0 }
  uselistorder i32 %v2_8053059, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 17, 10, 18, 11, 12, 13, 14, 15, 16, 0, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056740.64, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8054888, { 1, 0 }
  uselistorder i32 134571028, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8056420.52, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_805301e, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805640c.49 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805640c.49 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80537ae, { 1, 0 }
  uselistorder label %dec_label_pc_805379d, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053790, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805378c, { 1, 0 }
  uselistorder label %dec_label_pc_8053782, { 1, 0 }
  uselistorder label %dec_label_pc_805372d, { 1, 0 }
  uselistorder label %dec_label_pc_8053704, { 1, 0 }
  uselistorder label %dec_label_pc_80536f1, { 1, 0 }
  uselistorder label %dec_label_pc_80536df, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053671, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805366c, { 1, 0 }
  uselistorder label %dec_label_pc_8053650, { 1, 0 }
  uselistorder label %dec_label_pc_80535f9, { 1, 0 }
  uselistorder label %dec_label_pc_80535e2, { 1, 0 }
  uselistorder label %dec_label_pc_80535cb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805354e, { 1, 0 }
  uselistorder label %dec_label_pc_8053541, { 1, 0 }
  uselistorder label %dec_label_pc_8053502, { 1, 0 }
  uselistorder label %dec_label_pc_80534db, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80534bf, { 1, 0 }
  uselistorder label %dec_label_pc_80534a6, { 1, 0 }
  uselistorder label %dec_label_pc_8053488, { 1, 0 }
  uselistorder label %dec_label_pc_80533a3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805339b, { 1, 0 }
  uselistorder label %dec_label_pc_8053384, { 1, 0 }
  uselistorder label %dec_label_pc_8053317, { 1, 0 }
  uselistorder label %dec_label_pc_805331c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80532f0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053277, { 1, 0 }
  uselistorder label %dec_label_pc_8053226, { 1, 0 }
  uselistorder label %dec_label_pc_80531fe, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80531e7, { 1, 0 }
  uselistorder label %dec_label_pc_8053155, { 1, 0 }
  uselistorder label %dec_label_pc_8053226.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053122, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80530a0, { 1, 0 }
}

define i32 @function_80537b8(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80537b8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80537b8 = load i32, i32* @edi, align 4
  %v0_80537ba = load i32, i32* @ebx, align 4
  %v12_80537bb = ptrtoint i32* %stack_var_-28 to i32
  %v4_80537be = trunc i64 %arg1 to i32
  %sext = mul i64 %arg1, 4294967296
  %v2_80537c8 = sdiv i64 %sext, 4294967296
  %v3_80537c8 = sext i32 %arg2 to i64
  %v4_80537c8 = mul nsw i64 %v3_80537c8, %v2_80537c8
  %v5_80537c8 = trunc i64 %v4_80537c8 to i32
  store i32 %v5_80537c8, i32* @ebx, align 4
  %v2_80537cb = icmp eq i32 %v4_80537be, 0
  br i1 %v2_80537cb, label %dec_label_pc_80537ed, label %dec_label_pc_80537cf

dec_label_pc_80537cf:                             ; preds = %dec_label_pc_80537b8
  store i32 %v4_80537be, i32* @edi, align 4
  %div = udiv i32 %v5_80537c8, %v4_80537be
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_80537d7 = icmp eq i32 %div, %arg2
  br i1 %v12_80537d7, label %dec_label_pc_80537ed, label %dec_label_pc_80537db

dec_label_pc_80537db:                             ; preds = %dec_label_pc_80537cf
  %v1_80537db = call i32 @function_8052be9(i32 %v0_80537ba)
  store i32 %v1_80537db, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80537e2 = inttoptr i32 %v1_80537db to i32*
  store i32 12, i32* %v1_80537e2, align 4
  br label %dec_label_pc_80538a3

dec_label_pc_80537ed:                             ; preds = %dec_label_pc_80537cf, %dec_label_pc_80537b8
  store i32 %v12_80537bb, i32* @eax, align 4
  %v2_80537fd = call i32 @function_8054570(i32 %v12_80537bb, i32 134563181)
  store i32 %v2_80537fd, i32* %eax.global-to-local, align 4
  %v1_8053809 = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_805603c.47 to i32))
  store i32 %v1_8053809, i32* %eax.global-to-local, align 4
  %v0_805380e = load i32, i32* @ebx, align 4
  %v1_8053811 = call i32 @function_8053044(i32 %v0_805380e)
  store i32 %v1_8053811, i32* %eax.global-to-local, align 4
  store i32 %v1_8053811, i32* %ebx.global-to-local, align 4
  %v1_805381b = icmp eq i32 %v1_8053811, 0
  br i1 %v1_805381b, label %dec_label_pc_8053892, label %dec_label_pc_805381f

dec_label_pc_805381f:                             ; preds = %dec_label_pc_80537ed
  %v1_805381f = add i32 %v1_8053811, -4
  %v2_805381f = inttoptr i32 %v1_805381f to i32*
  %v3_805381f = load i32, i32* %v2_805381f, align 4
  store i32 %v3_805381f, i32* %eax.global-to-local, align 4
  %v2_8053822 = and i32 %v3_805381f, 2
  %v3_8053822 = icmp eq i32 %v2_8053822, 0
  %v1_8053824 = icmp eq i1 %v3_8053822, false
  br i1 %v1_8053824, label %dec_label_pc_8053892, label %dec_label_pc_8053826

dec_label_pc_8053826:                             ; preds = %dec_label_pc_805381f
  %v1_80538264 = add i32 %v3_805381f, -4
  %v1_8053829 = and i32 %v1_80538264, -4
  %v2_805382e = udiv i32 %v1_8053829, 4
  store i32 %v2_805382e, i32* %eax.global-to-local, align 4
  %v5_8053831 = icmp ult i32 %v1_8053829, 36
  %tmp = and i32 %v1_80538264, -4
  %tmp19 = icmp eq i32 %tmp, 36
  %v2_8053834 = or i1 %v5_8053831, %tmp19
  br i1 %v2_8053834, label %dec_label_pc_8053845, label %dec_label_pc_8053836

dec_label_pc_8053836:                             ; preds = %dec_label_pc_8053826
  %v3_805383b = inttoptr i32 %v1_8053811 to i8*
  %v4_805383b = call i32 @function_8052c3a(i8* %v3_805383b, i32 0, i32 %v1_8053829)
  store i32 %v4_805383b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053892

dec_label_pc_8053845:                             ; preds = %dec_label_pc_8053826
  %v1_8053845 = inttoptr i32 %v1_8053811 to i32*
  store i32 0, i32* %v1_8053845, align 4
  %v0_805384b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805384b = add i32 %v0_805384b, 4
  %v2_805384b = inttoptr i32 %v1_805384b to i32*
  store i32 0, i32* %v2_805384b, align 4
  %v0_8053852 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053852 = add i32 %v0_8053852, 8
  %v2_8053852 = inttoptr i32 %v1_8053852 to i32*
  store i32 0, i32* %v2_8053852, align 4
  %v0_8053859 = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8053859, 5
  br i1 %tmp16, label %dec_label_pc_8053892, label %dec_label_pc_805385e

dec_label_pc_805385e:                             ; preds = %dec_label_pc_8053845
  %v0_805385e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805385e = add i32 %v0_805385e, 12
  %v2_805385e = inttoptr i32 %v1_805385e to i32*
  store i32 0, i32* %v2_805385e, align 4
  %v0_8053865 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053865 = add i32 %v0_8053865, 16
  %v2_8053865 = inttoptr i32 %v1_8053865 to i32*
  store i32 0, i32* %v2_8053865, align 4
  %v0_805386c = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_805386c, 7
  br i1 %tmp17, label %dec_label_pc_8053892, label %dec_label_pc_8053871

dec_label_pc_8053871:                             ; preds = %dec_label_pc_805385e
  %v0_8053871 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053871 = add i32 %v0_8053871, 20
  %v2_8053871 = inttoptr i32 %v1_8053871 to i32*
  store i32 0, i32* %v2_8053871, align 4
  %v0_8053878 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053878 = add i32 %v0_8053878, 24
  %v2_8053878 = inttoptr i32 %v1_8053878 to i32*
  store i32 0, i32* %v2_8053878, align 4
  %v0_805387f = load i32, i32* %eax.global-to-local, align 4
  %tmp18 = icmp ult i32 %v0_805387f, 9
  br i1 %tmp18, label %dec_label_pc_8053892, label %dec_label_pc_8053884

dec_label_pc_8053884:                             ; preds = %dec_label_pc_8053871
  %v0_8053884 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053884 = add i32 %v0_8053884, 28
  %v2_8053884 = inttoptr i32 %v1_8053884 to i32*
  store i32 0, i32* %v2_8053884, align 4
  %v0_805388b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805388b = add i32 %v0_805388b, 32
  %v2_805388b = inttoptr i32 %v1_805388b to i32*
  store i32 0, i32* %v2_805388b, align 4
  br label %dec_label_pc_8053892

dec_label_pc_8053892:                             ; preds = %dec_label_pc_8053871, %dec_label_pc_805385e, %dec_label_pc_8053845, %dec_label_pc_805381f, %dec_label_pc_80537ed, %dec_label_pc_8053836, %dec_label_pc_8053884
  store i32 %v12_80537bb, i32* @eax, align 4
  %v2_805389b = call i32 @function_8054570(i32 %v12_80537bb, i32 1)
  store i32 %v2_805389b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538a3

dec_label_pc_80538a3:                             ; preds = %dec_label_pc_80537db, %dec_label_pc_8053892
  %v0_80538a6 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80538a6, i32* %eax.global-to-local, align 4
  store i32 %v0_80537ba, i32* @ebx, align 4
  store i32 %v0_80537b8, i32* @edi, align 4
  ret i32 %v0_80538a6

; uselistorder directives
  uselistorder i32 %v1_8053829, { 2, 1, 0 }
  uselistorder i32 %v1_8053811, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_80538a3, { 1, 0 }
  uselistorder label %dec_label_pc_8053892, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_80538ac() local_unnamed_addr {
dec_label_pc_80538ac:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80538ac = load i32, i32* @ebp, align 4
  %v0_80538ad = load i32, i32* @edi, align 4
  %v0_80538ae = load i32, i32* @esi, align 4
  %v0_80538af = load i32, i32* @ebx, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v4_80538b7 = icmp eq i32 %tmp6, 0
  %v1_80538bc = icmp eq i1 %v4_80538b7, false
  br i1 %v1_80538bc, label %dec_label_pc_80538ce, label %dec_label_pc_80538be

dec_label_pc_80538be:                             ; preds = %dec_label_pc_80538ac
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80538c2 = call i32 @function_8053044(i32 %tmp7)
  store i32 %v1_80538c2, i32* %eax.global-to-local, align 4
  store i32 %v1_80538c2, i32* @ebx, align 4
  br label %dec_label_pc_8053bc7

dec_label_pc_80538ce:                             ; preds = %dec_label_pc_80538ac
  %v1_80538ce = icmp eq i32 %tmp7, 0
  %v1_80538d0 = icmp eq i1 %v1_80538ce, false
  br i1 %v1_80538d0, label %dec_label_pc_80538e3, label %dec_label_pc_80538d2

dec_label_pc_80538d2:                             ; preds = %dec_label_pc_80538ce
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_80538d9 = call i32 @function_8053e09(i32 %tmp6)
  store i32 %v1_80538d9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053bc7

dec_label_pc_80538e3:                             ; preds = %dec_label_pc_80538ce
  %v2_80538ee = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80538ee, i32* @eax, align 4
  store i32 %v2_80538ee, i32* %stack_var_-60, align 4
  %v2_80538f3 = call i32 @function_8054570(i32 %v2_80538ee, i32 134563181)
  store i32 %v2_80538f3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805603c.47 to i32), i32* %stack_var_-60, align 4
  %v1_80538ff = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_805603c.47 to i32))
  store i32 %v1_80538ff, i32* %eax.global-to-local, align 4
  %v0_8053907 = load i32, i32* @ebx, align 4
  %tmp19 = icmp ult i32 %v0_8053907, -32
  br i1 %tmp19, label %dec_label_pc_805391e, label %dec_label_pc_805390c

dec_label_pc_805390c:                             ; preds = %dec_label_pc_80538e3
  %v0_805390c = load i32, i32* %stack_var_-60, align 4
  %v1_805390c = call i32 @function_8052be9(i32 %v0_805390c)
  store i32 %v1_805390c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053913 = inttoptr i32 %v1_805390c to i32*
  store i32 12, i32* %v1_8053913, align 4
  br label %dec_label_pc_8053bca

dec_label_pc_805391e:                             ; preds = %dec_label_pc_80538e3
  %v1_805391e = add i32 %v0_8053907, 11
  %tmp20 = icmp ult i32 %v1_805391e, 16
  br i1 %tmp20, label %dec_label_pc_8053935, label %dec_label_pc_805392e

dec_label_pc_805392e:                             ; preds = %dec_label_pc_805391e
  %v1_805392e = and i32 %v1_805391e, -8
  br label %dec_label_pc_8053935

dec_label_pc_8053935:                             ; preds = %dec_label_pc_805391e, %dec_label_pc_805392e
  %stack_var_-40.0 = phi i32 [ %v1_805392e, %dec_label_pc_805392e ], [ 16, %dec_label_pc_805391e ]
  %storemerge26 = phi i32 [ %v1_805392e, %dec_label_pc_805392e ], [ %v1_805391e, %dec_label_pc_805391e ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v1_8053939 = add i32 %tmp6, -8
  store i32 %v1_8053939, i32* @edi, align 4
  %v1_805393c = add i32 %tmp6, -4
  %v2_805393c = inttoptr i32 %v1_805393c to i32*
  %v3_805393c = load i32, i32* %v2_805393c, align 4
  store i32 %v3_805393c, i32* @edx, align 4
  %v1_8053941 = and i32 %v3_805393c, -4
  store i32 %v1_8053941, i32* %eax.global-to-local, align 4
  %v2_8053948 = and i32 %v3_805393c, 2
  %v3_8053948 = icmp eq i32 %v2_8053948, 0
  %v1_805394b = icmp eq i1 %v3_8053948, false
  br i1 %v1_805394b, label %dec_label_pc_8053ae5, label %dec_label_pc_8053951

dec_label_pc_8053951:                             ; preds = %dec_label_pc_8053935
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053941, i32* @ebx, align 4
  %v7_8053957 = icmp ult i32 %v1_8053941, %stack_var_-40.0
  %v1_8053959 = icmp eq i1 %v7_8053957, false
  br i1 %v1_8053959, label %dec_label_pc_8053a90, label %dec_label_pc_805395f

dec_label_pc_805395f:                             ; preds = %dec_label_pc_8053951
  %v2_805395f = add i32 %v1_8053941, %v1_8053939
  store i32 %v2_805395f, i32* @esi, align 4
  %v1_8053962 = load i32, i32* @global_var_805640c.49, align 4
  %v12_8053962 = icmp eq i32 %v2_805395f, %v1_8053962
  %v1_8053968 = icmp eq i1 %v12_8053962, false
  %v1_80539a2 = add i32 %v2_805395f, 4
  %v2_80539a2 = inttoptr i32 %v1_80539a2 to i32*
  %v3_80539a2 = load i32, i32* %v2_80539a2, align 4
  br i1 %v1_8053968, label %dec_label_pc_80539a2, label %dec_label_pc_805396a

dec_label_pc_805396a:                             ; preds = %dec_label_pc_805395f
  %v1_805396f = and i32 %v3_80539a2, -4
  %v2_8053972 = add i32 %v1_805396f, %v1_8053941
  store i32 %v2_8053972, i32* %ecx.global-to-local, align 4
  %v1_8053978 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8053978, i32* %eax.global-to-local, align 4
  %v7_805397b = icmp ult i32 %v2_8053972, %v1_8053978
  br i1 %v7_805397b, label %dec_label_pc_80539e0, label %dec_label_pc_805397f

dec_label_pc_805397f:                             ; preds = %dec_label_pc_805396a
  %v1_805397f = urem i32 %v3_805393c, 2
  %v5_8053982 = or i32 %v1_805397f, %stack_var_-40.0
  store i32 %v5_8053982, i32* @edx, align 4
  store i32 %v5_8053982, i32* %v2_805393c, align 4
  %v0_805398d = load i32, i32* %ecx.global-to-local, align 4
  %v2_805398d = sub i32 %v0_805398d, %stack_var_-40.0
  %v0_805398f = load i32, i32* @edi, align 4
  %v2_805398f = add i32 %v0_805398f, %stack_var_-40.0
  store i32 %v2_805398f, i32* %eax.global-to-local, align 4
  %v1_8053992 = or i32 %v2_805398d, 1
  store i32 %v1_8053992, i32* %ecx.global-to-local, align 4
  store i32 %v2_805398f, i32* @global_var_805640c.49, align 4
  %v2_805399a = add i32 %v2_805398f, 4
  %v3_805399a = inttoptr i32 %v2_805399a to i32*
  store i32 %v1_8053992, i32* %v3_805399a, align 4
  br label %dec_label_pc_8053bb5

dec_label_pc_80539a2:                             ; preds = %dec_label_pc_805395f
  %v1_80539a7 = and i32 %v3_80539a2, -2
  store i32 %v1_80539a7, i32* %eax.global-to-local, align 4
  %v3_80539aa = add i32 %v1_80539a2, %v1_80539a7
  %v4_80539aa = inttoptr i32 %v3_80539aa to i8*
  %v5_80539aa = load i8, i8* %v4_80539aa, align 1
  %v6_80539aa = urem i8 %v5_80539aa, 2
  %v7_80539aa = icmp eq i8 %v6_80539aa, 0
  %v1_80539af = icmp eq i1 %v7_80539aa, false
  br i1 %v1_80539af, label %dec_label_pc_80539e0, label %dec_label_pc_80539b1

dec_label_pc_80539b1:                             ; preds = %dec_label_pc_80539a2
  %v1_80539b1 = and i32 %v3_80539a2, -4
  %v2_80539b8 = add i32 %v1_80539b1, %v1_8053941
  store i32 %v2_80539b8, i32* @ebx, align 4
  %v10_80539ba = icmp ult i32 %v2_80539b8, %stack_var_-40.0
  br i1 %v10_80539ba, label %dec_label_pc_80539e0, label %dec_label_pc_80539c0

dec_label_pc_80539c0:                             ; preds = %dec_label_pc_80539b1
  %v1_80539c0 = add i32 %v1_8053941, %tmp6
  %v2_80539c0 = inttoptr i32 %v1_80539c0 to i32*
  %v3_80539c0 = load i32, i32* %v2_80539c0, align 4
  store i32 %v3_80539c0, i32* @edx, align 4
  %v1_80539c3 = add i32 %v2_805395f, 12
  %v2_80539c3 = inttoptr i32 %v1_80539c3 to i32*
  %v3_80539c3 = load i32, i32* %v2_80539c3, align 4
  store i32 %v3_80539c3, i32* %eax.global-to-local, align 4
  %v1_80539c6 = add i32 %v3_80539c0, 12
  %v2_80539c6 = inttoptr i32 %v1_80539c6 to i32*
  %v3_80539c6 = load i32, i32* %v2_80539c6, align 4
  %v15_80539c6 = icmp eq i32 %v3_80539c6, %v2_805395f
  %v1_80539c9 = icmp eq i1 %v15_80539c6, false
  br i1 %v1_80539c9, label %dec_label_pc_80539d0, label %dec_label_pc_80539cb

dec_label_pc_80539cb:                             ; preds = %dec_label_pc_80539c0
  %v1_80539cb = add i32 %v3_80539c3, 8
  %v2_80539cb = inttoptr i32 %v1_80539cb to i32*
  %v3_80539cb = load i32, i32* %v2_80539cb, align 4
  %v15_80539cb = icmp eq i32 %v3_80539cb, %v2_805395f
  br i1 %v15_80539cb, label %dec_label_pc_80539d5, label %dec_label_pc_80539d0

dec_label_pc_80539d0:                             ; preds = %dec_label_pc_80539cb, %dec_label_pc_80539c0
  %v0_80539d0 = call i32 @function_8053fa5()
  store i32 %v0_80539d0, i32* %eax.global-to-local, align 4
  %v1_80539d5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80539d5

dec_label_pc_80539d5:                             ; preds = %dec_label_pc_80539cb, %dec_label_pc_80539d0
  %v1_80539d5 = phi i32 [ %v3_80539c0, %dec_label_pc_80539cb ], [ %v1_80539d5.pre, %dec_label_pc_80539d0 ]
  %v0_80539d5 = phi i32 [ %v3_80539c3, %dec_label_pc_80539cb ], [ %v0_80539d0, %dec_label_pc_80539d0 ]
  %v2_80539d5 = add i32 %v1_80539d5, 12
  %v3_80539d5 = inttoptr i32 %v2_80539d5 to i32*
  store i32 %v0_80539d5, i32* %v3_80539d5, align 4
  %v0_80539d8 = load i32, i32* @edx, align 4
  %v1_80539d8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80539d8 = add i32 %v1_80539d8, 8
  %v3_80539d8 = inttoptr i32 %v2_80539d8 to i32*
  store i32 %v0_80539d8, i32* %v3_80539d8, align 4
  %v0_8053a90.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053a90

dec_label_pc_80539e0:                             ; preds = %dec_label_pc_80539b1, %dec_label_pc_80539a2, %dec_label_pc_805396a
  %v1_80539e7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_80539e7, i32* %eax.global-to-local, align 4
  store i32 %v1_80539e7, i32* %stack_var_-60, align 4
  %v1_80539eb = call i32 @function_8053044(i32 %v1_80539e7)
  store i32 %v1_80539eb, i32* %eax.global-to-local, align 4
  store i32 %v1_80539eb, i32* @edx, align 4
  %v1_80539f5 = icmp eq i32 %v1_80539eb, 0
  br i1 %v1_80539f5, label %dec_label_pc_8053bb1, label %dec_label_pc_80539fd

dec_label_pc_80539fd:                             ; preds = %dec_label_pc_80539e0
  %v1_80539fd = add i32 %v1_80539eb, -8
  store i32 %v1_80539fd, i32* %ebx.global-to-local, align 4
  %v1_8053a00 = load i32, i32* @esi, align 4
  %v12_8053a00 = icmp eq i32 %v1_80539fd, %v1_8053a00
  %v1_8053a02 = add i32 %v1_80539eb, -4
  %v2_8053a02 = inttoptr i32 %v1_8053a02 to i32*
  %v3_8053a02 = load i32, i32* %v2_8053a02, align 4
  store i32 %v3_8053a02, i32* %eax.global-to-local, align 4
  %v1_8053a05 = icmp eq i1 %v12_8053a00, false
  br i1 %v1_8053a05, label %dec_label_pc_8053a13, label %dec_label_pc_8053a07

dec_label_pc_8053a07:                             ; preds = %dec_label_pc_80539fd
  %v1_8053a07 = and i32 %v3_8053a02, -4
  store i32 %v1_8053a07, i32* %eax.global-to-local, align 4
  store i32 %v1_8053941, i32* @edx, align 4
  %v2_8053a0e = add i32 %v1_8053a07, %v1_8053941
  store i32 %v2_8053a0e, i32* @ebx, align 4
  br label %dec_label_pc_8053a90

dec_label_pc_8053a13:                             ; preds = %dec_label_pc_80539fd
  %v1_8053a17 = add i32 %v1_8053941, -4
  store i32 %v1_8053a17, i32* %eax.global-to-local, align 4
  %v2_8053a1c = udiv i32 %v1_8053a17, 4
  store i32 %v2_8053a1c, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8053a17, 37
  br i1 %tmp, label %dec_label_pc_8053a35, label %dec_label_pc_8053a24

dec_label_pc_8053a24:                             ; preds = %dec_label_pc_8053a13
  store i32 %v1_80539eb, i32* %stack_var_-60, align 4
  %v3_8053a2b = inttoptr i32 %v1_80539eb to i16*
  %v4_8053a2b = call i32 @function_8054e32(i16* %v3_8053a2b, i32 %tmp6, i32 %v1_8053a17)
  store i32 %v4_8053a2b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a7c

dec_label_pc_8053a35:                             ; preds = %dec_label_pc_8053a13
  store i32 %tmp6, i32* @esi, align 4
  %v1_8053a3c = inttoptr i32 %tmp6 to i32*
  %v2_8053a3c = load i32, i32* %v1_8053a3c, align 4
  store i32 %v2_8053a3c, i32* %eax.global-to-local, align 4
  %v2_8053a3e = inttoptr i32 %v1_80539eb to i32*
  store i32 %v2_8053a3c, i32* %v2_8053a3e, align 4
  %v0_8053a40 = load i32, i32* @esi, align 4
  %v1_8053a40 = add i32 %v0_8053a40, 4
  %v2_8053a40 = inttoptr i32 %v1_8053a40 to i32*
  %v3_8053a40 = load i32, i32* %v2_8053a40, align 4
  store i32 %v3_8053a40, i32* %eax.global-to-local, align 4
  %v1_8053a43 = load i32, i32* @edx, align 4
  %v2_8053a43 = add i32 %v1_8053a43, 4
  %v3_8053a43 = inttoptr i32 %v2_8053a43 to i32*
  store i32 %v3_8053a40, i32* %v3_8053a43, align 4
  %v0_8053a46 = load i32, i32* @esi, align 4
  %v1_8053a46 = add i32 %v0_8053a46, 8
  %v2_8053a46 = inttoptr i32 %v1_8053a46 to i32*
  %v3_8053a46 = load i32, i32* %v2_8053a46, align 4
  store i32 %v3_8053a46, i32* %eax.global-to-local, align 4
  %v1_8053a49 = load i32, i32* @edx, align 4
  %v2_8053a49 = add i32 %v1_8053a49, 8
  %v3_8053a49 = inttoptr i32 %v2_8053a49 to i32*
  store i32 %v3_8053a46, i32* %v3_8053a49, align 4
  %tmp27 = icmp ult i32 %v1_8053a17, 17
  br i1 %tmp27, label %dec_label_pc_8053a7c, label %dec_label_pc_8053a4e

dec_label_pc_8053a4e:                             ; preds = %dec_label_pc_8053a35
  %v0_8053a4e = load i32, i32* @esi, align 4
  %v1_8053a4e = add i32 %v0_8053a4e, 12
  %v2_8053a4e = inttoptr i32 %v1_8053a4e to i32*
  %v3_8053a4e = load i32, i32* %v2_8053a4e, align 4
  store i32 %v3_8053a4e, i32* %eax.global-to-local, align 4
  %v0_8053a51 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a54 = load i32, i32* @edx, align 4
  %v2_8053a54 = add i32 %v1_8053a54, 12
  %v3_8053a54 = inttoptr i32 %v2_8053a54 to i32*
  store i32 %v3_8053a4e, i32* %v3_8053a54, align 4
  %v0_8053a57 = load i32, i32* @esi, align 4
  %v1_8053a57 = add i32 %v0_8053a57, 16
  %v2_8053a57 = inttoptr i32 %v1_8053a57 to i32*
  %v3_8053a57 = load i32, i32* %v2_8053a57, align 4
  store i32 %v3_8053a57, i32* %eax.global-to-local, align 4
  %v1_8053a5a = load i32, i32* @edx, align 4
  %v2_8053a5a = add i32 %v1_8053a5a, 16
  %v3_8053a5a = inttoptr i32 %v2_8053a5a to i32*
  store i32 %v3_8053a57, i32* %v3_8053a5a, align 4
  %tmp21 = icmp ult i32 %v0_8053a51, 7
  br i1 %tmp21, label %dec_label_pc_8053a7c, label %dec_label_pc_8053a5f

dec_label_pc_8053a5f:                             ; preds = %dec_label_pc_8053a4e
  %v0_8053a5f = load i32, i32* @esi, align 4
  %v1_8053a5f = add i32 %v0_8053a5f, 20
  %v2_8053a5f = inttoptr i32 %v1_8053a5f to i32*
  %v3_8053a5f = load i32, i32* %v2_8053a5f, align 4
  store i32 %v3_8053a5f, i32* %eax.global-to-local, align 4
  %v0_8053a62 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a65 = load i32, i32* @edx, align 4
  %v2_8053a65 = add i32 %v1_8053a65, 20
  %v3_8053a65 = inttoptr i32 %v2_8053a65 to i32*
  store i32 %v3_8053a5f, i32* %v3_8053a65, align 4
  %v0_8053a68 = load i32, i32* @esi, align 4
  %v1_8053a68 = add i32 %v0_8053a68, 24
  %v2_8053a68 = inttoptr i32 %v1_8053a68 to i32*
  %v3_8053a68 = load i32, i32* %v2_8053a68, align 4
  store i32 %v3_8053a68, i32* %eax.global-to-local, align 4
  %v1_8053a6b = load i32, i32* @edx, align 4
  %v2_8053a6b = add i32 %v1_8053a6b, 24
  %v3_8053a6b = inttoptr i32 %v2_8053a6b to i32*
  store i32 %v3_8053a68, i32* %v3_8053a6b, align 4
  %tmp22 = icmp ult i32 %v0_8053a62, 9
  br i1 %tmp22, label %dec_label_pc_8053a7c, label %dec_label_pc_8053a70

dec_label_pc_8053a70:                             ; preds = %dec_label_pc_8053a5f
  %v0_8053a70 = load i32, i32* @esi, align 4
  %v1_8053a70 = add i32 %v0_8053a70, 28
  %v2_8053a70 = inttoptr i32 %v1_8053a70 to i32*
  %v3_8053a70 = load i32, i32* %v2_8053a70, align 4
  store i32 %v3_8053a70, i32* %eax.global-to-local, align 4
  %v1_8053a73 = load i32, i32* @edx, align 4
  %v2_8053a73 = add i32 %v1_8053a73, 28
  %v3_8053a73 = inttoptr i32 %v2_8053a73 to i32*
  store i32 %v3_8053a70, i32* %v3_8053a73, align 4
  %v0_8053a76 = load i32, i32* @esi, align 4
  %v1_8053a76 = add i32 %v0_8053a76, 32
  %v2_8053a76 = inttoptr i32 %v1_8053a76 to i32*
  %v3_8053a76 = load i32, i32* %v2_8053a76, align 4
  store i32 %v3_8053a76, i32* %eax.global-to-local, align 4
  %v1_8053a79 = load i32, i32* @edx, align 4
  %v2_8053a79 = add i32 %v1_8053a79, 32
  %v3_8053a79 = inttoptr i32 %v2_8053a79 to i32*
  store i32 %v3_8053a76, i32* %v3_8053a79, align 4
  br label %dec_label_pc_8053a7c

dec_label_pc_8053a7c:                             ; preds = %dec_label_pc_8053a5f, %dec_label_pc_8053a4e, %dec_label_pc_8053a35, %dec_label_pc_8053a24, %dec_label_pc_8053a70
  %v0_8053a7f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a7f = add i32 %v0_8053a7f, 8
  store i32 %v1_8053a7f, i32* @ebx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053a86 = call i32 @function_8053e09(i32 %tmp6)
  br label %dec_label_pc_8053bac

dec_label_pc_8053a90:                             ; preds = %dec_label_pc_8053951, %dec_label_pc_8053a07, %dec_label_pc_80539d5
  %v1_8053aa1 = phi i32 [ %v1_8053941, %dec_label_pc_8053951 ], [ %v2_8053a0e, %dec_label_pc_8053a07 ], [ %v0_8053a90.pre, %dec_label_pc_80539d5 ]
  %v5_8053a92 = sub i32 %v1_8053aa1, %stack_var_-40.0
  store i32 %v5_8053a92, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v5_8053a92, 16
  br i1 %tmp23, label %dec_label_pc_8053a9b, label %dec_label_pc_8053aad

dec_label_pc_8053a9b:                             ; preds = %dec_label_pc_8053a90
  %v0_8053a9b = load i32, i32* @edi, align 4
  %v1_8053a9b = add i32 %v0_8053a9b, 4
  %v2_8053a9b = inttoptr i32 %v1_8053a9b to i32*
  %v3_8053a9b = load i32, i32* %v2_8053a9b, align 4
  %v1_8053a9e = urem i32 %v3_8053a9b, 2
  %v2_8053aa1 = or i32 %v1_8053a9e, %v1_8053aa1
  store i32 %v2_8053aa1, i32* %eax.global-to-local, align 4
  store i32 %v2_8053aa1, i32* %v2_8053a9b, align 4
  %v0_8053aa6 = load i32, i32* @edi, align 4
  %v1_8053aa6 = load i32, i32* @ebx, align 4
  %v2_8053aa6 = add i32 %v0_8053aa6, 4
  %v3_8053aa6 = add i32 %v2_8053aa6, %v1_8053aa6
  %v4_8053aa6 = inttoptr i32 %v3_8053aa6 to i32*
  %v5_8053aa6 = load i32, i32* %v4_8053aa6, align 4
  %v6_8053aa6 = or i32 %v5_8053aa6, 1
  store i32 %v6_8053aa6, i32* %v4_8053aa6, align 4
  br label %dec_label_pc_8053add

dec_label_pc_8053aad:                             ; preds = %dec_label_pc_8053a90
  %v0_8053ab1 = load i32, i32* @edi, align 4
  %v2_8053ab1 = add i32 %v0_8053ab1, %stack_var_-40.0
  store i32 %v2_8053ab1, i32* %eax.global-to-local, align 4
  %v1_8053ab4 = add i32 %v0_8053ab1, 4
  %v2_8053ab4 = inttoptr i32 %v1_8053ab4 to i32*
  %v3_8053ab4 = load i32, i32* %v2_8053ab4, align 4
  %v1_8053ab7 = urem i32 %v3_8053ab4, 2
  %v5_8053aba = or i32 %v1_8053ab7, %stack_var_-40.0
  store i32 %v5_8053aba, i32* %v2_8053ab4, align 4
  %v0_8053ac4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053ac6 = or i32 %v0_8053ac4, 1
  store i32 %v1_8053ac6, i32* @edx, align 4
  %v1_8053ac9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053ac9 = add i32 %v1_8053ac9, 4
  %v3_8053ac9 = inttoptr i32 %v2_8053ac9 to i32*
  store i32 %v1_8053ac6, i32* %v3_8053ac9, align 4
  %v0_8053acc = load i32, i32* %eax.global-to-local, align 4
  %v1_8053acc = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053acc = add i32 %v0_8053acc, 4
  %v3_8053acc = add i32 %v2_8053acc, %v1_8053acc
  %v4_8053acc = inttoptr i32 %v3_8053acc to i32*
  %v5_8053acc = load i32, i32* %v4_8053acc, align 4
  %v6_8053acc = or i32 %v5_8053acc, 1
  store i32 %v6_8053acc, i32* %v4_8053acc, align 4
  %v0_8053ad1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ad1 = add i32 %v0_8053ad1, 8
  store i32 %v1_8053ad1, i32* %eax.global-to-local, align 4
  store i32 %v1_8053ad1, i32* %stack_var_-60, align 4
  %v1_8053ad5 = call i32 @function_8053e09(i32 %v1_8053ad1)
  store i32 %v1_8053ad5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053add

dec_label_pc_8053add:                             ; preds = %dec_label_pc_8053a9b, %dec_label_pc_8053aad
  %v0_8053add = load i32, i32* @edi, align 4
  %v1_8053add = add i32 %v0_8053add, 8
  store i32 %v1_8053add, i32* @ebx, align 4
  br label %dec_label_pc_8053bb9

dec_label_pc_8053ae5:                             ; preds = %dec_label_pc_8053935
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v0_8053ae9 = load i32, i32* @global_var_805673c.54, align 4
  %v1_8053aee = add i32 %v0_8053ae9, -1
  store i32 %v1_8053aee, i32* %eax.global-to-local, align 4
  %v2_8053af3 = inttoptr i32 %v1_8053939 to i32*
  %v3_8053af3 = load i32, i32* %v2_8053af3, align 4
  store i32 %v3_8053af3, i32* @ebp, align 4
  %v1_8053af6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8053af6, i32* %stack_var_-44, align 4
  %v2_8053afc = add i32 %v3_8053af3, %v1_8053aee
  store i32 %v2_8053afc, i32* @edx, align 4
  %v1_8053aff = sub i32 0, %v0_8053ae9
  store i32 %v1_8053aff, i32* %eax.global-to-local, align 4
  %v2_8053b01 = add i32 %v2_8053afc, %v1_8053af6
  %v2_8053b04 = and i32 %v2_8053b01, %v1_8053aff
  store i32 %v2_8053b04, i32* @esi, align 4
  %v2_8053b08 = sub i32 %v2_8053b04, %v3_8053af3
  store i32 %v2_8053b08, i32* @ebx, align 4
  %v15_8053b0a = icmp eq i32 %v1_8053941, %v2_8053b08
  br i1 %v15_8053b0a, label %dec_label_pc_8053bb5, label %dec_label_pc_8053b14

dec_label_pc_8053b14:                             ; preds = %dec_label_pc_8053ae5
  %v2_8053b1b = sub i32 %v1_8053939, %v3_8053af3
  store i32 %v2_8053b1b, i32* @edi, align 4
  %v2_8053b1d = add i32 %v3_8053af3, %v1_8053941
  store i32 %v2_8053b1d, i32* %eax.global-to-local, align 4
  store i32 %v2_8053b1b, i32* %stack_var_-60, align 4
  %v6_8053b21 = inttoptr i32 %v2_8053b1b to i32*
  %v7_8053b21 = call i32 @function_8054c96(i32* %v6_8053b21, i32 %v2_8053b1d, i32 %v2_8053b04, i32 1, i32 %v1_8053af6, i32 %v1_8053941)
  store i32 %v7_8053b21, i32* %eax.global-to-local, align 4
  %v10_8053b29 = icmp eq i32 %v7_8053b21, -1
  br i1 %v10_8053b29, label %dec_label_pc_8053b6d, label %dec_label_pc_8053b2e

dec_label_pc_8053b2e:                             ; preds = %dec_label_pc_8053b14
  %v1_8053b2e = load i32, i32* @ebp, align 4
  %v2_8053b2e = add i32 %v1_8053b2e, %v7_8053b21
  store i32 %v2_8053b2e, i32* @edx, align 4
  %v0_8053b31 = load i32, i32* @ebx, align 4
  %v1_8053b31 = or i32 %v0_8053b31, 2
  store i32 %v1_8053b31, i32* %ebx.global-to-local, align 4
  %v0_8053b34 = load i32, i32* @esi, align 4
  store i32 %v0_8053b34, i32* %eax.global-to-local, align 4
  %v2_8053b36 = add i32 %v2_8053b2e, 4
  %v3_8053b36 = inttoptr i32 %v2_8053b36 to i32*
  store i32 %v1_8053b31, i32* %v3_8053b36, align 4
  %v0_8053b39 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053b39 = sub i32 %v0_8053b39, %v1_8053941
  %v1_8053b3d = load i32, i32* @global_var_8056744.59, align 4
  %v2_8053b3d = add i32 %v1_8053b3d, %v5_8053b39
  store i32 %v2_8053b3d, i32* %eax.global-to-local, align 4
  store i32 %v2_8053b3d, i32* @global_var_8056744.59, align 4
  %v1_8053b48 = load i32, i32* @global_var_8056750.60, align 16
  %tmp24 = icmp ugt i32 %v2_8053b3d, %v1_8053b48
  br i1 %tmp24, label %dec_label_pc_8053b50, label %dec_label_pc_8053b55

dec_label_pc_8053b50:                             ; preds = %dec_label_pc_8053b2e
  store i32 %v2_8053b3d, i32* @global_var_8056750.60, align 16
  br label %dec_label_pc_8053b55

dec_label_pc_8053b55:                             ; preds = %dec_label_pc_8053b2e, %dec_label_pc_8053b50
  %v1_8053b55 = load i32, i32* @global_var_8056748.61, align 8
  %v2_8053b55 = add i32 %v1_8053b55, %v2_8053b3d
  store i32 %v2_8053b55, i32* %eax.global-to-local, align 4
  %v1_8053b5b = load i32, i32* @global_var_8056754.62, align 4
  %tmp25 = icmp ugt i32 %v2_8053b55, %v1_8053b5b
  br i1 %tmp25, label %dec_label_pc_8053b63, label %dec_label_pc_8053b68

dec_label_pc_8053b63:                             ; preds = %dec_label_pc_8053b55
  store i32 %v2_8053b55, i32* @global_var_8056754.62, align 4
  br label %dec_label_pc_8053b68

dec_label_pc_8053b68:                             ; preds = %dec_label_pc_8053b55, %dec_label_pc_8053b63
  %v0_8053b68 = load i32, i32* @edx, align 4
  %v1_8053b68 = add i32 %v0_8053b68, 8
  store i32 %v1_8053b68, i32* @ebx, align 4
  br label %dec_label_pc_8053bb9

dec_label_pc_8053b6d:                             ; preds = %dec_label_pc_8053b14
  %v2_8053b6d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8053b6d, i32* %eax.global-to-local, align 4
  %v10_8053b70 = icmp ult i32 %v1_8053941, %v2_8053b6d
  %v1_8053b74 = icmp eq i1 %v10_8053b70, false
  br i1 %v1_8053b74, label %dec_label_pc_8053bb5, label %dec_label_pc_8053b76

dec_label_pc_8053b76:                             ; preds = %dec_label_pc_8053b6d
  %v1_8053b7d = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053b7d, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b7d, i32* %stack_var_-60, align 4
  %v1_8053b81 = call i32 @function_8053044(i32 %v1_8053b7d)
  store i32 %v1_8053b81, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b81, i32* @ebx, align 4
  %v1_8053b8b = icmp eq i32 %v1_8053b81, 0
  br i1 %v1_8053b8b, label %dec_label_pc_8053bb1, label %dec_label_pc_8053b8f

dec_label_pc_8053b8f:                             ; preds = %dec_label_pc_8053b76
  %v1_8053b94 = add i32 %v1_8053941, -8
  store i32 %v1_8053b94, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b81, i32* %stack_var_-60, align 4
  %v3_8053b9d = inttoptr i32 %v1_8053b81 to i16*
  %v4_8053b9d = call i32 @function_8054e32(i16* %v3_8053b9d, i32 %tmp6, i32 %v1_8053b94)
  store i32 %v4_8053b9d, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b81, i32* @edx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053ba7 = call i32 @function_8053e09(i32 %tmp6)
  br label %dec_label_pc_8053bac

dec_label_pc_8053bac:                             ; preds = %dec_label_pc_8053a7c, %dec_label_pc_8053b8f
  %storemerge = phi i32 [ %v1_8053ba7, %dec_label_pc_8053b8f ], [ %v1_8053a86, %dec_label_pc_8053a7c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053bb9

dec_label_pc_8053bb1:                             ; preds = %dec_label_pc_8053b76, %dec_label_pc_80539e0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053bb9

dec_label_pc_8053bb5:                             ; preds = %dec_label_pc_8053b6d, %dec_label_pc_8053ae5, %dec_label_pc_805397f
  store i32 %tmp6, i32* @ebx, align 4
  br label %dec_label_pc_8053bb9

dec_label_pc_8053bb9:                             ; preds = %dec_label_pc_8053bb1, %dec_label_pc_8053bac, %dec_label_pc_8053b68, %dec_label_pc_8053add, %dec_label_pc_8053bb5
  store i32 %v2_80538ee, i32* @eax, align 4
  store i32 %v2_80538ee, i32* %stack_var_-60, align 4
  %v2_8053bc2 = call i32 @function_8054570(i32 %v2_80538ee, i32 1)
  store i32 %v2_8053bc2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053bc7

dec_label_pc_8053bc7:                             ; preds = %dec_label_pc_80538d2, %dec_label_pc_80538be, %dec_label_pc_8053bb9
  br label %dec_label_pc_8053bca

dec_label_pc_8053bca:                             ; preds = %dec_label_pc_805390c, %dec_label_pc_8053bc7
  %v0_8053bcd = load i32, i32* @ebx, align 4
  store i32 %v0_8053bcd, i32* %eax.global-to-local, align 4
  store i32 %v0_80538af, i32* @ebx, align 4
  store i32 %v0_80538ae, i32* @esi, align 4
  store i32 %v0_80538ad, i32* @edi, align 4
  store i32 %v0_80538ac, i32* @ebp, align 4
  ret i32 %v0_8053bcd

; uselistorder directives
  uselistorder i32 %v1_8053b81, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8053b55, { 1, 0, 2 }
  uselistorder i32 %v2_8053b3d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053b1b, { 1, 0, 2 }
  uselistorder i32 %v1_8053af6, { 1, 0, 2 }
  uselistorder i32 %v3_8053af3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053ab1, { 1, 0 }
  uselistorder i32 %v1_8053a17, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80539eb, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_805398f, { 1, 0, 2 }
  uselistorder i32 %v3_80539a2, { 0, 2, 1 }
  uselistorder i32 %v2_805395f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053941, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053939, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_805392e, { 1, 0 }
  uselistorder i32 %v1_805391e, { 0, 2, 1 }
  uselistorder i32 %v0_8053907, { 1, 0 }
  uselistorder i32 %v2_80538ee, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 0, 2, 1, 3 }
  uselistorder i32 %tmp6, { 15, 14, 13, 2, 12, 11, 10, 1, 9, 3, 0, 8, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_8053e09, { 7, 6, 5, 1, 2, 10, 9, 8, 4, 3, 11, 0 }
  uselistorder i32 (i32)* @function_8053044, { 4, 3, 0, 1, 2, 5 }
  uselistorder label %dec_label_pc_8053bca, { 1, 0 }
  uselistorder label %dec_label_pc_8053bc7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053bb9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053bac, { 1, 0 }
  uselistorder label %dec_label_pc_8053b68, { 1, 0 }
  uselistorder label %dec_label_pc_8053b55, { 1, 0 }
  uselistorder label %dec_label_pc_8053add, { 1, 0 }
  uselistorder label %dec_label_pc_8053a90, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053a7c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80539d5, { 1, 0 }
  uselistorder label %dec_label_pc_8053935, { 1, 0 }
}

define i32 @function_8053bd4() local_unnamed_addr {
dec_label_pc_8053bd4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8053bdb = load i32, i32* @edx, align 4
  store i32 %v0_8053bdb, i32* %ebp.global-to-local, align 4
  %v1_8053bdd = add i32 %v0_8053bdb, 860
  %v2_8053bdd = inttoptr i32 %v1_8053bdd to i32*
  %v3_8053bdd = load i32, i32* %v2_8053bdd, align 4
  store i32 %v3_8053bdd, i32* %ecx.global-to-local, align 4
  %v1_8053be3 = add i32 %v0_8053bdb, 44
  %v2_8053be3 = inttoptr i32 %v1_8053be3 to i32*
  %v3_8053be3 = load i32, i32* %v2_8053be3, align 4
  %v1_8053be6 = add i32 %v3_8053be3, 4
  %v2_8053be6 = inttoptr i32 %v1_8053be6 to i32*
  %v3_8053be6 = load i32, i32* %v2_8053be6, align 4
  %v1_8053be9 = and i32 %v3_8053be6, -4
  store i32 %v1_8053be9, i32* @esi, align 4
  %v1_8053bee = load i32, i32* @eax, align 4
  %v2_8053bee = add i32 %v3_8053bdd, -17
  %v2_8053bf0 = add i32 %v2_8053bee, %v1_8053be9
  %v3_8053bf0 = sub i32 %v2_8053bf0, %v1_8053bee
  %div = udiv i32 %v3_8053bf0, %v3_8053bdd
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053bf0, %v3_8053bdd
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053bf8 = add i32 %div, -1
  %v4_8053bfb = mul i32 %v1_8053bf8, %v3_8053bdd
  store i32 %v4_8053bfb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8053bfb, 1
  br i1 %tmp11, label %dec_label_pc_8053c57, label %dec_label_pc_8053c02

dec_label_pc_8053c02:                             ; preds = %dec_label_pc_8053bd4
  %v1_8053c07 = call i32 @function_8054d39(i32 0)
  store i32 %v1_8053c07, i32* %edi.global-to-local, align 4
  %v0_8053c0e = load i32, i32* @esi, align 4
  store i32 %v0_8053c0e, i32* %eax.global-to-local, align 4
  %v1_8053c10 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053c10 = add i32 %v1_8053c10, 44
  %v3_8053c10 = inttoptr i32 %v2_8053c10 to i32*
  %v4_8053c10 = load i32, i32* %v3_8053c10, align 4
  %v5_8053c10 = add i32 %v4_8053c10, %v0_8053c0e
  store i32 %v5_8053c10, i32* %eax.global-to-local, align 4
  %v12_8053c16 = icmp eq i32 %v1_8053c07, %v5_8053c10
  %v1_8053c18 = icmp eq i1 %v12_8053c16, false
  br i1 %v1_8053c18, label %dec_label_pc_8053c57, label %dec_label_pc_8053c1a

dec_label_pc_8053c1a:                             ; preds = %dec_label_pc_8053c02
  %v1_8053c1d = sub i32 0, %v4_8053bfb
  store i32 %v1_8053c1d, i32* @ebx, align 4
  %v1_8053c20 = call i32 @function_8054d39(i32 %v1_8053c1d)
  store i32 %v1_8053c20, i32* %eax.global-to-local, align 4
  %v1_8053c2c = call i32 @function_8054d39(i32 0)
  store i32 %v1_8053c2c, i32* %eax.global-to-local, align 4
  %v10_8053c34 = icmp eq i32 %v1_8053c2c, -1
  br i1 %v10_8053c34, label %dec_label_pc_8053c57, label %dec_label_pc_8053c39

dec_label_pc_8053c39:                             ; preds = %dec_label_pc_8053c1a
  %v0_8053c39 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053c3b = sub i32 %v0_8053c39, %v1_8053c2c
  %v12_8053c3b = icmp eq i32 %v2_8053c3b, 0
  store i32 %v2_8053c3b, i32* %ecx.global-to-local, align 4
  br i1 %v12_8053c3b, label %dec_label_pc_8053c57, label %dec_label_pc_8053c3f

dec_label_pc_8053c3f:                             ; preds = %dec_label_pc_8053c39
  %v0_8053c3f = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053c3f = add i32 %v0_8053c3f, 44
  %v2_8053c3f = inttoptr i32 %v1_8053c3f to i32*
  %v3_8053c3f = load i32, i32* %v2_8053c3f, align 4
  store i32 %v3_8053c3f, i32* %eax.global-to-local, align 4
  %v1_8053c42 = add i32 %v0_8053c3f, 872
  %v2_8053c42 = inttoptr i32 %v1_8053c42 to i32*
  %v3_8053c42 = load i32, i32* %v2_8053c42, align 4
  %v5_8053c42 = sub i32 %v3_8053c42, %v2_8053c3b
  store i32 %v5_8053c42, i32* %v2_8053c42, align 4
  %v0_8053c48 = load i32, i32* @esi, align 4
  %v1_8053c48 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053c48 = sub i32 %v0_8053c48, %v1_8053c48
  %v1_8053c4a = or i32 %v2_8053c48, 1
  %v1_8053c4d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053c4d = add i32 %v1_8053c4d, 4
  %v3_8053c4d = inttoptr i32 %v2_8053c4d to i32*
  store i32 %v1_8053c4a, i32* %v3_8053c4d, align 4
  br label %dec_label_pc_8053c59

dec_label_pc_8053c57:                             ; preds = %dec_label_pc_8053c39, %dec_label_pc_8053c1a, %dec_label_pc_8053c02, %dec_label_pc_8053bd4
  br label %dec_label_pc_8053c59

dec_label_pc_8053c59:                             ; preds = %dec_label_pc_8053c3f, %dec_label_pc_8053c57
  %storemerge = phi i32 [ 1, %dec_label_pc_8053c3f ], [ 0, %dec_label_pc_8053c57 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053c2c, { 1, 0, 2 }
  uselistorder i32 %v4_8053bfb, { 1, 2, 0 }
  uselistorder i32 %v3_8053bdd, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8054d39, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053c59, { 1, 0 }
}

define i32 @function_8053c61(i32* %arg1) local_unnamed_addr {
dec_label_pc_8053c61:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8053c62 = load i32, i32* @edi, align 4
  %v0_8053c63 = load i32, i32* @esi, align 4
  %v0_8053c64 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_8053c6c = load i32, i32* %arg1, align 4
  store i32 %v2_8053c6c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053c73 = icmp eq i32 %v2_8053c6c, 0
  br i1 %v1_8053c73, label %dec_label_pc_8053d8d.lr.ph, label %dec_label_pc_8053c7b

dec_label_pc_8053d8d.lr.ph:                       ; preds = %dec_label_pc_8053c61
  %v3_8053d91 = add i32 %tmp20, 44
  br label %dec_label_pc_8053d8d

dec_label_pc_8053c7b:                             ; preds = %dec_label_pc_8053c61
  %v1_8053c7f = and i32 %v2_8053c6c, -3
  store i32 %v1_8053c7f, i32* %arg1, align 4
  %v1_8053c84 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_8053c8f = add i32 %tmp20, 4
  store i32 %v1_8053c8f, i32* %eax.global-to-local, align 4
  %v2_8053c9a = load i32, i32* %arg1, align 4
  %v2_8053ca0 = udiv i32 %v2_8053c9a, 8
  %v2_8053ca3 = mul nuw i32 %v2_8053ca0, 4
  %v3_8053ca3 = add i32 %tmp20, -4
  %v4_8053ca3 = add i32 %v3_8053ca3, %v2_8053ca3
  store i32 %v4_8053ca3, i32* %eax.global-to-local, align 4
  %v2_8053d6a = add i32 %tmp20, 44
  %v3_8053d6a = inttoptr i32 %v2_8053d6a to i32*
  %v1_8053d3d = add i32 %tmp20, 60
  %v2_8053d3d = inttoptr i32 %v1_8053d3d to i32*
  br label %dec_label_pc_8053cab

dec_label_pc_8053cab:                             ; preds = %dec_label_pc_8053d83, %dec_label_pc_8053c7b
  %v0_8053cb9 = phi i32 [ %v1_8053c8f, %dec_label_pc_8053c7b ], [ %v4_8053d83, %dec_label_pc_8053d83 ]
  store i32 %v0_8053cb9, i32* %eax.global-to-local, align 4
  %v1_8053caf = inttoptr i32 %v0_8053cb9 to i32*
  %v2_8053caf = load i32, i32* %v1_8053caf, align 4
  store i32 %v2_8053caf, i32* @ecx, align 4
  %v1_8053cb1 = icmp eq i32 %v2_8053caf, 0
  br i1 %v1_8053cb1, label %dec_label_pc_8053d79, label %dec_label_pc_8053cb9

dec_label_pc_8053cb9:                             ; preds = %dec_label_pc_8053cab
  store i32 0, i32* %v1_8053caf, align 4
  %v0_8053cbf.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053cbf

dec_label_pc_8053cbf:                             ; preds = %dec_label_pc_8053d6d, %dec_label_pc_8053cb9
  %v0_8053cdc = phi i32 [ %v3_8053cbf, %dec_label_pc_8053d6d ], [ %v0_8053cbf.pre, %dec_label_pc_8053cb9 ]
  %v1_8053cbf = add i32 %v0_8053cdc, 8
  %v2_8053cbf = inttoptr i32 %v1_8053cbf to i32*
  %v3_8053cbf = load i32, i32* %v2_8053cbf, align 4
  store i32 %v3_8053cbf, i32* %edx.global-to-local, align 4
  %v1_8053cc6 = add i32 %v0_8053cdc, 4
  %v2_8053cc6 = inttoptr i32 %v1_8053cc6 to i32*
  %v3_8053cc6 = load i32, i32* %v2_8053cc6, align 4
  store i32 %v3_8053cc6, i32* %eax.global-to-local, align 4
  %v1_8053ccb = and i32 %v3_8053cc6, -2
  store i32 %v1_8053ccb, i32* @edi, align 4
  %v2_8053cce = urem i32 %v3_8053cc6, 2
  %v3_8053cce = icmp eq i32 %v2_8053cce, 0
  %v2_8053cd0 = add i32 %v1_8053ccb, %v0_8053cdc
  store i32 %v2_8053cd0, i32* @ebx, align 4
  %v1_8053cd3 = add i32 %v2_8053cd0, 4
  %v2_8053cd3 = inttoptr i32 %v1_8053cd3 to i32*
  %v3_8053cd3 = load i32, i32* %v2_8053cd3, align 4
  store i32 %v3_8053cd3, i32* %edx.global-to-local, align 4
  %v1_8053cda = icmp eq i1 %v3_8053cce, false
  br i1 %v1_8053cda, label %dec_label_pc_8053cfc, label %dec_label_pc_8053cdc

dec_label_pc_8053cdc:                             ; preds = %dec_label_pc_8053cbf
  %v1_8053cdc = inttoptr i32 %v0_8053cdc to i32*
  %v2_8053cdc = load i32, i32* %v1_8053cdc, align 4
  store i32 %v2_8053cdc, i32* %ebp.global-to-local, align 4
  %v2_8053ce0 = sub i32 %v0_8053cdc, %v2_8053cdc
  store i32 %v2_8053ce0, i32* %eax.global-to-local, align 4
  %v1_8053ce2 = add i32 %v2_8053ce0, 8
  %v2_8053ce2 = inttoptr i32 %v1_8053ce2 to i32*
  %v3_8053ce2 = load i32, i32* %v2_8053ce2, align 4
  store i32 %v3_8053ce2, i32* @esi, align 4
  %v1_8053ce5 = add i32 %v2_8053ce0, 12
  %v2_8053ce5 = inttoptr i32 %v1_8053ce5 to i32*
  %v3_8053ce5 = load i32, i32* %v2_8053ce5, align 4
  store i32 %v3_8053ce5, i32* %edx.global-to-local, align 4
  %v1_8053ce8 = add i32 %v3_8053ce2, 12
  %v2_8053ce8 = inttoptr i32 %v1_8053ce8 to i32*
  %v3_8053ce8 = load i32, i32* %v2_8053ce8, align 4
  store i32 %v3_8053ce8, i32* @ecx, align 4
  %v12_8053ceb = icmp eq i32 %v3_8053ce8, %v2_8053ce0
  %v1_8053ced = icmp eq i1 %v12_8053ceb, false
  br i1 %v1_8053ced, label %dec_label_pc_8053d2c, label %dec_label_pc_8053cef

dec_label_pc_8053cef:                             ; preds = %dec_label_pc_8053cdc
  %v1_8053cef = add i32 %v3_8053ce5, 8
  %v2_8053cef = inttoptr i32 %v1_8053cef to i32*
  %v3_8053cef = load i32, i32* %v2_8053cef, align 4
  %v15_8053cef = icmp eq i32 %v3_8053cef, %v3_8053ce8
  %v1_8053cf2 = icmp eq i1 %v15_8053cef, false
  br i1 %v1_8053cf2, label %dec_label_pc_8053d2c, label %dec_label_pc_8053cf4

dec_label_pc_8053cf4:                             ; preds = %dec_label_pc_8053cef
  %v2_8053cf4 = add i32 %v2_8053cdc, %v1_8053ccb
  store i32 %v2_8053cf4, i32* @edi, align 4
  store i32 %v3_8053ce5, i32* %v2_8053ce8, align 4
  %v0_8053cf9 = load i32, i32* @esi, align 4
  %v1_8053cf9 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053cf9 = add i32 %v1_8053cf9, 8
  %v3_8053cf9 = inttoptr i32 %v2_8053cf9 to i32*
  store i32 %v0_8053cf9, i32* %v3_8053cf9, align 4
  %v0_8053d07.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053cfc

dec_label_pc_8053cfc:                             ; preds = %dec_label_pc_8053cbf, %dec_label_pc_8053cf4
  %v1_8053d10 = phi i32 [ %v2_8053cd0, %dec_label_pc_8053cbf ], [ %v0_8053d07.pre, %dec_label_pc_8053cf4 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053d04 = and i32 %v3_8053cd3, -4
  store i32 %v1_8053d04, i32* %ebp.global-to-local, align 4
  %v4_8053d07 = load i32, i32* %v3_8053d6a, align 4
  %v15_8053d07 = icmp eq i32 %v1_8053d10, %v4_8053d07
  br i1 %v15_8053d07, label %dec_label_pc_8053d5d, label %dec_label_pc_8053d0c

dec_label_pc_8053d0c:                             ; preds = %dec_label_pc_8053cfc
  %v2_8053d0c = add i32 %v1_8053d10, 4
  %v3_8053d0c = add i32 %v2_8053d0c, %v1_8053d04
  %v4_8053d0c = inttoptr i32 %v3_8053d0c to i32*
  %v5_8053d0c = load i32, i32* %v4_8053d0c, align 4
  store i32 %v5_8053d0c, i32* %eax.global-to-local, align 4
  %v3_8053d10 = inttoptr i32 %v2_8053d0c to i32*
  store i32 %v1_8053d04, i32* %v3_8053d10, align 4
  %v0_8053d13 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d13 = urem i32 %v0_8053d13, 2
  %v2_8053d13 = icmp eq i32 %v1_8053d13, 0
  store i32 %v1_8053d13, i32* %eax.global-to-local, align 4
  %v1_8053d18 = icmp eq i1 %v2_8053d13, false
  br i1 %v1_8053d18, label %dec_label_pc_8053d39, label %dec_label_pc_8053d1a

dec_label_pc_8053d1a:                             ; preds = %dec_label_pc_8053d0c
  %v0_8053d1a = load i32, i32* @ebx, align 4
  %v1_8053d1a = add i32 %v0_8053d1a, 8
  %v2_8053d1a = inttoptr i32 %v1_8053d1a to i32*
  %v3_8053d1a = load i32, i32* %v2_8053d1a, align 4
  store i32 %v3_8053d1a, i32* @edx, align 4
  %v1_8053d1d = add i32 %v0_8053d1a, 12
  %v2_8053d1d = inttoptr i32 %v1_8053d1d to i32*
  %v3_8053d1d = load i32, i32* %v2_8053d1d, align 4
  store i32 %v3_8053d1d, i32* %eax.global-to-local, align 4
  %v1_8053d20 = add i32 %v3_8053d1a, 12
  %v2_8053d20 = inttoptr i32 %v1_8053d20 to i32*
  %v3_8053d20 = load i32, i32* %v2_8053d20, align 4
  store i32 %v3_8053d20, i32* @esi, align 4
  %v12_8053d23 = icmp eq i32 %v3_8053d20, %v0_8053d1a
  %v1_8053d25 = icmp eq i1 %v12_8053d23, false
  br i1 %v1_8053d25, label %dec_label_pc_8053d2c, label %dec_label_pc_8053d27

dec_label_pc_8053d27:                             ; preds = %dec_label_pc_8053d1a
  %v1_8053d27 = add i32 %v3_8053d1d, 8
  %v2_8053d27 = inttoptr i32 %v1_8053d27 to i32*
  %v3_8053d27 = load i32, i32* %v2_8053d27, align 4
  %v15_8053d27 = icmp eq i32 %v3_8053d27, %v3_8053d20
  br i1 %v15_8053d27, label %dec_label_pc_8053d31, label %dec_label_pc_8053d2c

dec_label_pc_8053d2c:                             ; preds = %dec_label_pc_8053d27, %dec_label_pc_8053d1a, %dec_label_pc_8053cef, %dec_label_pc_8053cdc
  %v0_8053d2c = call i32 @function_8053fa5()
  store i32 %v0_8053d2c, i32* %eax.global-to-local, align 4
  %v1_8053d33.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053d31

dec_label_pc_8053d31:                             ; preds = %dec_label_pc_8053d27, %dec_label_pc_8053d2c
  %v1_8053d33 = phi i32 [ %v3_8053d1a, %dec_label_pc_8053d27 ], [ %v1_8053d33.pre, %dec_label_pc_8053d2c ]
  %v0_8053d33 = phi i32 [ %v3_8053d1d, %dec_label_pc_8053d27 ], [ %v0_8053d2c, %dec_label_pc_8053d2c ]
  %v0_8053d31 = load i32, i32* @edi, align 4
  %v1_8053d31 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053d31 = add i32 %v1_8053d31, %v0_8053d31
  store i32 %v2_8053d31, i32* @edi, align 4
  %v2_8053d33 = add i32 %v1_8053d33, 12
  %v3_8053d33 = inttoptr i32 %v2_8053d33 to i32*
  store i32 %v0_8053d33, i32* %v3_8053d33, align 4
  %v0_8053d36 = load i32, i32* @edx, align 4
  %v1_8053d36 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053d36 = add i32 %v1_8053d36, 8
  %v3_8053d36 = inttoptr i32 %v2_8053d36 to i32*
  store i32 %v0_8053d36, i32* %v3_8053d36, align 4
  br label %dec_label_pc_8053d39

dec_label_pc_8053d39:                             ; preds = %dec_label_pc_8053d0c, %dec_label_pc_8053d31
  store i32 %v1_8053c84, i32* %eax.global-to-local, align 4
  %v3_8053d3d = load i32, i32* %v2_8053d3d, align 4
  store i32 %v3_8053d3d, i32* @edx, align 4
  %v0_8053d40 = load i32, i32* @ecx, align 4
  store i32 %v0_8053d40, i32* %v2_8053d3d, align 4
  %v0_8053d43 = load i32, i32* @edi, align 4
  %v1_8053d45 = or i32 %v0_8053d43, 1
  store i32 %v1_8053d45, i32* %eax.global-to-local, align 4
  %v0_8053d48 = load i32, i32* @ecx, align 4
  %v1_8053d48 = load i32, i32* @edx, align 4
  %v2_8053d48 = add i32 %v1_8053d48, 12
  %v3_8053d48 = inttoptr i32 %v2_8053d48 to i32*
  store i32 %v0_8053d48, i32* %v3_8053d48, align 4
  %v0_8053d4b = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d4b = load i32, i32* @ecx, align 4
  %v2_8053d4b = add i32 %v1_8053d4b, 4
  %v3_8053d4b = inttoptr i32 %v2_8053d4b to i32*
  store i32 %v0_8053d4b, i32* %v3_8053d4b, align 4
  store i32 %v1_8053c84, i32* %eax.global-to-local, align 4
  %v0_8053d52 = load i32, i32* @edx, align 4
  %v1_8053d52 = load i32, i32* @ecx, align 4
  %v2_8053d52 = add i32 %v1_8053d52, 8
  %v3_8053d52 = inttoptr i32 %v2_8053d52 to i32*
  store i32 %v0_8053d52, i32* %v3_8053d52, align 4
  %v0_8053d55 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d55 = load i32, i32* @ecx, align 4
  %v2_8053d55 = add i32 %v1_8053d55, 12
  %v3_8053d55 = inttoptr i32 %v2_8053d55 to i32*
  store i32 %v0_8053d55, i32* %v3_8053d55, align 4
  %v0_8053d58 = load i32, i32* @edi, align 4
  %v1_8053d58 = load i32, i32* @ecx, align 4
  %v3_8053d58 = add i32 %v1_8053d58, %v0_8053d58
  %v4_8053d58 = inttoptr i32 %v3_8053d58 to i32*
  store i32 %v0_8053d58, i32* %v4_8053d58, align 4
  br label %dec_label_pc_8053d6d

dec_label_pc_8053d5d:                             ; preds = %dec_label_pc_8053cfc
  %v0_8053d5d = load i32, i32* @edi, align 4
  %v2_8053d5d = add i32 %v0_8053d5d, %v1_8053d04
  %v1_8053d60 = or i32 %v2_8053d5d, 1
  store i32 %v1_8053d60, i32* %eax.global-to-local, align 4
  %v1_8053d63 = load i32, i32* @ecx, align 4
  %v2_8053d63 = add i32 %v1_8053d63, 4
  %v3_8053d63 = inttoptr i32 %v2_8053d63 to i32*
  store i32 %v1_8053d60, i32* %v3_8053d63, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_8053d6a = load i32, i32* @ecx, align 4
  store i32 %v0_8053d6a, i32* %v3_8053d6a, align 4
  br label %dec_label_pc_8053d6d

dec_label_pc_8053d6d:                             ; preds = %dec_label_pc_8053d39, %dec_label_pc_8053d5d
  store i32 %v3_8053cbf, i32* @ecx, align 4
  %v1_8053d71 = icmp eq i32 %v3_8053cbf, 0
  %v1_8053d73 = icmp eq i1 %v1_8053d71, false
  br i1 %v1_8053d73, label %dec_label_pc_8053cbf, label %dec_label_pc_8053d79

dec_label_pc_8053d79:                             ; preds = %dec_label_pc_8053d6d, %dec_label_pc_8053cab
  %v15_8053d7d = icmp eq i32 %v0_8053cb9, %v4_8053ca3
  br i1 %v15_8053d7d, label %dec_label_pc_8053e01, label %dec_label_pc_8053d83

dec_label_pc_8053d83:                             ; preds = %dec_label_pc_8053d79
  %v4_8053d83 = add i32 %v0_8053cb9, 4
  br label %dec_label_pc_8053cab

dec_label_pc_8053d8d:                             ; preds = %dec_label_pc_8053d8d.lr.ph, %dec_label_pc_8053d8d
  %v1_8053d91 = phi i32 [ 1, %dec_label_pc_8053d8d.lr.ph ], [ %v0_8053d9c, %dec_label_pc_8053d8d ]
  %v2_8053d91 = mul i32 %v1_8053d91, 8
  %v4_8053d91 = add i32 %v3_8053d91, %v2_8053d91
  store i32 %v4_8053d91, i32* %eax.global-to-local, align 4
  %v1_8053d95 = add i32 %v1_8053d91, 1
  store i32 %v1_8053d95, i32* %edx.global-to-local, align 4
  %v2_8053d96 = add i32 %v4_8053d91, 12
  %v3_8053d96 = inttoptr i32 %v2_8053d96 to i32*
  store i32 %v4_8053d91, i32* %v3_8053d96, align 4
  %v0_8053d99 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053d99 = add i32 %v0_8053d99, 8
  %v3_8053d99 = inttoptr i32 %v2_8053d99 to i32*
  store i32 %v0_8053d99, i32* %v3_8053d99, align 4
  %v0_8053d9c = load i32, i32* %edx.global-to-local, align 4
  %v7_8053d9f = icmp sgt i32 %v0_8053d9c, 95
  br i1 %v7_8053d9f, label %dec_label_pc_8053da1, label %dec_label_pc_8053d8d

dec_label_pc_8053da1:                             ; preds = %dec_label_pc_8053d8d
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053da5 = add i32 %tmp20, 864
  %v2_8053da5 = inttoptr i32 %v1_8053da5 to i32*
  %v3_8053da5 = load i32, i32* %v2_8053da5, align 4
  %v4_8053da5 = or i32 %v3_8053da5, 1
  store i32 %v4_8053da5, i32* %v2_8053da5, align 4
  %v0_8053dac = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dac = add i32 %v0_8053dac, 840
  %v2_8053dac = inttoptr i32 %v1_8053dac to i32*
  store i32 0, i32* %v2_8053dac, align 4
  %v0_8053db6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053db6 = add i32 %v0_8053db6, 852
  %v2_8053db6 = inttoptr i32 %v1_8053db6 to i32*
  store i32 65536, i32* %v2_8053db6, align 4
  %v0_8053dc0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dc0 = add i32 %v0_8053dc0, 844
  %v2_8053dc0 = inttoptr i32 %v1_8053dc0 to i32*
  store i32 262144, i32* %v2_8053dc0, align 4
  %v0_8053dca = load i32, i32* %eax.global-to-local, align 4
  %v1_8053dca = add i32 %v0_8053dca, 836
  %v2_8053dca = inttoptr i32 %v1_8053dca to i32*
  store i32 262144, i32* %v2_8053dca, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_8053ddb = load i32, i32* %arg1, align 4
  %v1_8053ddd = urem i32 %v2_8053ddb, 4
  %v1_8053de0 = or i32 %v1_8053ddd, 72
  store i32 %v1_8053de0, i32* %arg1, align 4
  %v0_8053de5 = load i32, i32* @edx, align 4
  %v1_8053de7 = add i32 %v0_8053de5, 52
  store i32 %v1_8053de7, i32* %eax.global-to-local, align 4
  %v2_8053dea = add i32 %v0_8053de5, 44
  %v3_8053dea = inttoptr i32 %v2_8053dea to i32*
  store i32 %v1_8053de7, i32* %v3_8053dea, align 4
  %v1_8053def = call i32 @function_80543e9(i32 30)
  store i32 %v1_8053def, i32* %eax.global-to-local, align 4
  %v2_8053dfb = add i32 %tmp20, 860
  %v3_8053dfb = inttoptr i32 %v2_8053dfb to i32*
  store i32 %v1_8053def, i32* %v3_8053dfb, align 4
  br label %dec_label_pc_8053e01

dec_label_pc_8053e01:                             ; preds = %dec_label_pc_8053d79, %dec_label_pc_8053da1
  store i32 %v0_8053c64, i32* @ebx, align 4
  store i32 %v0_8053c63, i32* @esi, align 4
  store i32 %v0_8053c62, i32* @edi, align 4
  %v0_8053e08 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053e08

; uselistorder directives
  uselistorder i32 %v0_8053d9c, { 1, 0 }
  uselistorder i32 %v0_8053d99, { 1, 0 }
  uselistorder i32 %v1_8053d91, { 1, 0 }
  uselistorder i32 %v0_8053d58, { 1, 0 }
  uselistorder i32 %v1_8053d13, { 1, 0 }
  uselistorder i32 %v2_8053d0c, { 1, 0 }
  uselistorder i32 %v1_8053d04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053d10, { 1, 0 }
  uselistorder i32 %v3_8053cbf, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8053cdc, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053cb9, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8053d6a, { 1, 0 }
  uselistorder i32 %v1_8053c84, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_8053e01, { 1, 0 }
  uselistorder label %dec_label_pc_8053d8d, { 1, 0 }
  uselistorder label %dec_label_pc_8053d6d, { 1, 0 }
  uselistorder label %dec_label_pc_8053d39, { 1, 0 }
  uselistorder label %dec_label_pc_8053d31, { 1, 0 }
  uselistorder label %dec_label_pc_8053cfc, { 1, 0 }
}

define i32 @function_8053e09(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053e09:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053e09 = load i32, i32* @ebp, align 4
  %v0_8053e0a = load i32, i32* @edi, align 4
  %v0_8053e0b = load i32, i32* @esi, align 4
  %v0_8053e0c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053e14 = icmp eq i32 %arg1, 0
  br i1 %v1_8053e14, label %dec_label_pc_8053f9d, label %dec_label_pc_8053e1c

dec_label_pc_8053e1c:                             ; preds = %dec_label_pc_8053e09
  %v2_8053e27 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053e27, i32* @eax, align 4
  %v2_8053e2c = call i32 @function_8054570(i32 %v2_8053e27, i32 134563181)
  store i32 %v2_8053e2c, i32* %eax.global-to-local, align 4
  %v1_8053e38 = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_805603c.47 to i32))
  %v1_8053e3d = add i32 %arg1, -8
  store i32 %v1_8053e3d, i32* @ecx, align 4
  %v0_8053e40 = load i8, i8* @global_var_80563e0.48, align 1
  %v1_8053e40 = sext i8 %v0_8053e40 to i32
  store i32 %v1_8053e40, i32* %eax.global-to-local, align 4
  %v1_8053e48 = add i32 %arg1, -4
  %v2_8053e48 = inttoptr i32 %v1_8053e48 to i32*
  %v3_8053e48 = load i32, i32* %v2_8053e48, align 4
  %v1_8053e4d = and i32 %v3_8053e48, -4
  %v4_8053e4d = trunc i32 %v1_8053e4d to i8
  store i32 %v1_8053e4d, i32* @ebx, align 4
  %v8_8053e52 = icmp ugt i8 %v4_8053e4d, %v0_8053e40
  br i1 %v8_8053e52, label %dec_label_pc_8053e74, label %dec_label_pc_8053e54

dec_label_pc_8053e54:                             ; preds = %dec_label_pc_8053e1c
  %v2_8053e54 = udiv i32 %v3_8053e48, 8
  %v1_8053e57 = or i32 %v1_8053e40, 3
  %v3_8053e57 = trunc i32 %v1_8053e57 to i8
  store i32 %v1_8053e57, i32* %eax.global-to-local, align 4
  store i8 %v3_8053e57, i8* @global_var_80563e0.48, align 32
  %v1_8053e5f = mul nuw i32 %v2_8053e54, 4
  %v2_8053e5f = add i32 %v1_8053e5f, ptrtoint (i8* @global_var_80563e0.48 to i32)
  store i32 %v2_8053e5f, i32* @edx, align 4
  %v1_8053e66 = add i32 %v1_8053e5f, add (i32 ptrtoint (i8* @global_var_80563e0.48 to i32), i32 -4)
  %v2_8053e66 = inttoptr i32 %v1_8053e66 to i32*
  %v3_8053e66 = load i32, i32* %v2_8053e66, align 4
  store i32 %v3_8053e66, i32* %eax.global-to-local, align 4
  %v3_8053e69 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053e66, i32* %v3_8053e69, align 4
  %v0_8053e6c = load i32, i32* @ecx, align 4
  %v1_8053e6c = load i32, i32* @edx, align 4
  %v2_8053e6c = add i32 %v1_8053e6c, -4
  %v3_8053e6c = inttoptr i32 %v2_8053e6c to i32*
  store i32 %v0_8053e6c, i32* %v3_8053e6c, align 4
  br label %dec_label_pc_8053f8c

dec_label_pc_8053e74:                             ; preds = %dec_label_pc_8053e1c
  %v1_8053e74 = trunc i32 %v3_8053e48 to i8
  %v2_8053e74 = and i8 %v1_8053e74, 2
  %v3_8053e74 = icmp eq i8 %v2_8053e74, 0
  %v5_8053e74 = zext i8 %v2_8053e74 to i32
  %v7_8053e74 = and i32 %v3_8053e48, -256
  %v8_8053e74 = or i32 %v5_8053e74, %v7_8053e74
  store i32 %v8_8053e74, i32* @edx, align 4
  %v1_8053e77 = icmp eq i1 %v3_8053e74, false
  br i1 %v1_8053e77, label %dec_label_pc_8053f6c, label %dec_label_pc_8053e7d

dec_label_pc_8053e7d:                             ; preds = %dec_label_pc_8053e74
  %v1_8053e7d = or i32 %v1_8053e40, 1
  %v3_8053e7d = trunc i32 %v1_8053e7d to i8
  store i32 %v1_8053e7d, i32* %eax.global-to-local, align 4
  %v2_8053e80 = add i32 %v1_8053e4d, %v1_8053e3d
  store i32 %v2_8053e80, i32* @esi, align 4
  store i8 %v3_8053e7d, i8* @global_var_80563e0.48, align 32
  %v1_8053e88 = add i32 %v2_8053e80, 4
  %v2_8053e88 = inttoptr i32 %v1_8053e88 to i32*
  %v3_8053e88 = load i32, i32* %v2_8053e88, align 4
  store i32 %v3_8053e88, i32* %eax.global-to-local, align 4
  %v2_8053e8f = inttoptr i32 %v1_8053e48 to i8*
  %v3_8053e8f = load i8, i8* %v2_8053e8f, align 1
  %v4_8053e8f = urem i8 %v3_8053e8f, 2
  %v5_8053e8f = icmp eq i8 %v4_8053e8f, 0
  %v1_8053e93 = icmp eq i1 %v5_8053e8f, false
  br i1 %v1_8053e93, label %dec_label_pc_8053eb6, label %dec_label_pc_8053e95

dec_label_pc_8053e95:                             ; preds = %dec_label_pc_8053e7d
  %v2_8053e95 = inttoptr i32 %v1_8053e3d to i32*
  %v3_8053e95 = load i32, i32* %v2_8053e95, align 4
  store i32 %v3_8053e95, i32* @ebp, align 4
  %v2_8053e9a = sub i32 %v1_8053e3d, %v3_8053e95
  store i32 %v2_8053e9a, i32* %eax.global-to-local, align 4
  %v1_8053e9c = add i32 %v2_8053e9a, 8
  %v2_8053e9c = inttoptr i32 %v1_8053e9c to i32*
  %v3_8053e9c = load i32, i32* %v2_8053e9c, align 4
  store i32 %v3_8053e9c, i32* @edi, align 4
  %v1_8053e9f = add i32 %v2_8053e9a, 12
  %v2_8053e9f = inttoptr i32 %v1_8053e9f to i32*
  %v3_8053e9f = load i32, i32* %v2_8053e9f, align 4
  store i32 %v3_8053e9f, i32* @edx, align 4
  %v1_8053ea2 = add i32 %v3_8053e9c, 12
  %v2_8053ea2 = inttoptr i32 %v1_8053ea2 to i32*
  %v3_8053ea2 = load i32, i32* %v2_8053ea2, align 4
  store i32 %v3_8053ea2, i32* @ecx, align 4
  %v12_8053ea5 = icmp eq i32 %v3_8053ea2, %v2_8053e9a
  %v1_8053ea7 = icmp eq i1 %v12_8053ea5, false
  br i1 %v1_8053ea7, label %dec_label_pc_8053ee5, label %dec_label_pc_8053ea9

dec_label_pc_8053ea9:                             ; preds = %dec_label_pc_8053e95
  %v1_8053ea9 = add i32 %v3_8053e9f, 8
  %v2_8053ea9 = inttoptr i32 %v1_8053ea9 to i32*
  %v3_8053ea9 = load i32, i32* %v2_8053ea9, align 4
  %v15_8053ea9 = icmp eq i32 %v3_8053ea9, %v3_8053ea2
  %v1_8053eac = icmp eq i1 %v15_8053ea9, false
  br i1 %v1_8053eac, label %dec_label_pc_8053ee5, label %dec_label_pc_8053eae

dec_label_pc_8053eae:                             ; preds = %dec_label_pc_8053ea9
  %v2_8053eae = add i32 %v3_8053e95, %v1_8053e4d
  store i32 %v2_8053eae, i32* @ebx, align 4
  store i32 %v3_8053e9f, i32* %v2_8053ea2, align 4
  %v0_8053eb3 = load i32, i32* @edi, align 4
  %v1_8053eb3 = load i32, i32* @edx, align 4
  %v2_8053eb3 = add i32 %v1_8053eb3, 8
  %v3_8053eb3 = inttoptr i32 %v2_8053eb3 to i32*
  store i32 %v0_8053eb3, i32* %v3_8053eb3, align 4
  %v0_8053ebd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053eb6

dec_label_pc_8053eb6:                             ; preds = %dec_label_pc_8053e7d, %dec_label_pc_8053eae
  %v1_8053ec9 = phi i32 [ %v2_8053e80, %dec_label_pc_8053e7d ], [ %v0_8053ebd.pre, %dec_label_pc_8053eae ]
  %v1_8053eba = and i32 %v3_8053e88, -4
  store i32 %v1_8053eba, i32* @ebp, align 4
  %v1_8053ebd = load i32, i32* @global_var_805640c.49, align 4
  %v12_8053ebd = icmp eq i32 %v1_8053ec9, %v1_8053ebd
  br i1 %v12_8053ebd, label %dec_label_pc_8053f17, label %dec_label_pc_8053ec5

dec_label_pc_8053ec5:                             ; preds = %dec_label_pc_8053eb6
  %v2_8053ec5 = add i32 %v1_8053ec9, 4
  %v3_8053ec5 = add i32 %v2_8053ec5, %v1_8053eba
  %v4_8053ec5 = inttoptr i32 %v3_8053ec5 to i32*
  %v5_8053ec5 = load i32, i32* %v4_8053ec5, align 4
  store i32 %v5_8053ec5, i32* %eax.global-to-local, align 4
  %v3_8053ec9 = inttoptr i32 %v2_8053ec5 to i32*
  store i32 %v1_8053eba, i32* %v3_8053ec9, align 4
  %v0_8053ecc = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ecc = urem i32 %v0_8053ecc, 2
  %v2_8053ecc = icmp eq i32 %v1_8053ecc, 0
  store i32 %v1_8053ecc, i32* %eax.global-to-local, align 4
  %v1_8053ed1 = icmp eq i1 %v2_8053ecc, false
  br i1 %v1_8053ed1, label %dec_label_pc_8053ef2, label %dec_label_pc_8053ed3

dec_label_pc_8053ed3:                             ; preds = %dec_label_pc_8053ec5
  %v0_8053ed3 = load i32, i32* @esi, align 4
  %v1_8053ed3 = add i32 %v0_8053ed3, 8
  %v2_8053ed3 = inttoptr i32 %v1_8053ed3 to i32*
  %v3_8053ed3 = load i32, i32* %v2_8053ed3, align 4
  store i32 %v3_8053ed3, i32* @edx, align 4
  %v1_8053ed6 = add i32 %v0_8053ed3, 12
  %v2_8053ed6 = inttoptr i32 %v1_8053ed6 to i32*
  %v3_8053ed6 = load i32, i32* %v2_8053ed6, align 4
  store i32 %v3_8053ed6, i32* %eax.global-to-local, align 4
  %v1_8053ed9 = add i32 %v3_8053ed3, 12
  %v2_8053ed9 = inttoptr i32 %v1_8053ed9 to i32*
  %v3_8053ed9 = load i32, i32* %v2_8053ed9, align 4
  store i32 %v3_8053ed9, i32* @edi, align 4
  %v12_8053edc = icmp eq i32 %v3_8053ed9, %v0_8053ed3
  %v1_8053ede = icmp eq i1 %v12_8053edc, false
  br i1 %v1_8053ede, label %dec_label_pc_8053ee5, label %dec_label_pc_8053ee0

dec_label_pc_8053ee0:                             ; preds = %dec_label_pc_8053ed3
  %v1_8053ee0 = add i32 %v3_8053ed6, 8
  %v2_8053ee0 = inttoptr i32 %v1_8053ee0 to i32*
  %v3_8053ee0 = load i32, i32* %v2_8053ee0, align 4
  %v15_8053ee0 = icmp eq i32 %v3_8053ee0, %v3_8053ed9
  br i1 %v15_8053ee0, label %dec_label_pc_8053eea, label %dec_label_pc_8053ee5

dec_label_pc_8053ee5:                             ; preds = %dec_label_pc_8053ee0, %dec_label_pc_8053ed3, %dec_label_pc_8053ea9, %dec_label_pc_8053e95
  %v0_8053ee5 = call i32 @function_8053fa5()
  store i32 %v0_8053ee5, i32* %eax.global-to-local, align 4
  %v1_8053eea.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053eea

dec_label_pc_8053eea:                             ; preds = %dec_label_pc_8053ee0, %dec_label_pc_8053ee5
  %v1_8053eea = phi i32 [ %v3_8053ed3, %dec_label_pc_8053ee0 ], [ %v1_8053eea.pre, %dec_label_pc_8053ee5 ]
  %v0_8053eea = phi i32 [ %v3_8053ed6, %dec_label_pc_8053ee0 ], [ %v0_8053ee5, %dec_label_pc_8053ee5 ]
  %v2_8053eea = add i32 %v1_8053eea, 12
  %v3_8053eea = inttoptr i32 %v2_8053eea to i32*
  store i32 %v0_8053eea, i32* %v3_8053eea, align 4
  %v0_8053eed = load i32, i32* @edx, align 4
  %v1_8053eed = load i32, i32* %eax.global-to-local, align 4
  %v2_8053eed = add i32 %v1_8053eed, 8
  %v3_8053eed = inttoptr i32 %v2_8053eed to i32*
  store i32 %v0_8053eed, i32* %v3_8053eed, align 4
  %v0_8053ef0 = load i32, i32* @ebx, align 4
  %v1_8053ef0 = load i32, i32* @ebp, align 4
  %v2_8053ef0 = add i32 %v1_8053ef0, %v0_8053ef0
  store i32 %v2_8053ef0, i32* @ebx, align 4
  br label %dec_label_pc_8053ef2

dec_label_pc_8053ef2:                             ; preds = %dec_label_pc_8053ec5, %dec_label_pc_8053eea
  %v0_8053ef2 = load i32, i32* @global_var_805641c.67, align 4
  store i32 %v0_8053ef2, i32* %eax.global-to-local, align 4
  %v0_8053ef7 = load i32, i32* @ecx, align 4
  %v1_8053ef7 = add i32 %v0_8053ef7, 12
  %v2_8053ef7 = inttoptr i32 %v1_8053ef7 to i32*
  store i32 ptrtoint (i32* @global_var_8056414.51 to i32), i32* %v2_8053ef7, align 4
  %v0_8053efe = load i32, i32* %eax.global-to-local, align 4
  %v1_8053efe = load i32, i32* @ecx, align 4
  %v2_8053efe = add i32 %v1_8053efe, 8
  %v3_8053efe = inttoptr i32 %v2_8053efe to i32*
  store i32 %v0_8053efe, i32* %v3_8053efe, align 4
  %v0_8053f01 = load i32, i32* @ebx, align 4
  %v1_8053f01 = load i32, i32* @ecx, align 4
  %v3_8053f01 = add i32 %v1_8053f01, %v0_8053f01
  %v4_8053f01 = inttoptr i32 %v3_8053f01 to i32*
  store i32 %v0_8053f01, i32* %v4_8053f01, align 4
  %v0_8053f04 = load i32, i32* @ecx, align 4
  %v1_8053f04 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f04 = add i32 %v1_8053f04, 12
  %v3_8053f04 = inttoptr i32 %v2_8053f04 to i32*
  store i32 %v0_8053f04, i32* %v3_8053f04, align 4
  %v0_8053f07 = load i32, i32* @ebx, align 4
  %v1_8053f09 = or i32 %v0_8053f07, 1
  store i32 %v1_8053f09, i32* %eax.global-to-local, align 4
  %v0_8053f0c = load i32, i32* @ecx, align 4
  store i32 %v0_8053f0c, i32* @global_var_805641c.67, align 4
  %v2_8053f12 = add i32 %v0_8053f0c, 4
  %v3_8053f12 = inttoptr i32 %v2_8053f12 to i32*
  store i32 %v1_8053f09, i32* %v3_8053f12, align 4
  br label %dec_label_pc_8053f27

dec_label_pc_8053f17:                             ; preds = %dec_label_pc_8053eb6
  %v0_8053f17 = load i32, i32* @ebx, align 4
  %v2_8053f17 = add i32 %v0_8053f17, %v1_8053eba
  store i32 %v2_8053f17, i32* @ebx, align 4
  %v1_8053f1b = or i32 %v2_8053f17, 1
  store i32 %v1_8053f1b, i32* %eax.global-to-local, align 4
  %v1_8053f1e = load i32, i32* @ecx, align 4
  %v2_8053f1e = add i32 %v1_8053f1e, 4
  %v3_8053f1e = inttoptr i32 %v2_8053f1e to i32*
  store i32 %v1_8053f1b, i32* %v3_8053f1e, align 4
  %v0_8053f21 = load i32, i32* @ecx, align 4
  store i32 %v0_8053f21, i32* @global_var_805640c.49, align 4
  br label %dec_label_pc_8053f27

dec_label_pc_8053f27:                             ; preds = %dec_label_pc_8053ef2, %dec_label_pc_8053f17
  %v0_8053f27 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053f27, 131072
  br i1 %tmp21, label %dec_label_pc_8053f8c, label %dec_label_pc_8053f2f

dec_label_pc_8053f2f:                             ; preds = %dec_label_pc_8053f27
  %v0_8053f2f = load i8, i8* @global_var_80563e0.48, align 32
  %v1_8053f2f = and i8 %v0_8053f2f, 2
  %v2_8053f2f = icmp eq i8 %v1_8053f2f, 0
  br i1 %v2_8053f2f, label %dec_label_pc_8053f48, label %dec_label_pc_8053f38

dec_label_pc_8053f38:                             ; preds = %dec_label_pc_8053f2f
  %v2_8053f40 = call i32 @function_8053c61(i32* bitcast (i8* @global_var_80563e0.48 to i32*))
  store i32 %v2_8053f40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f48

dec_label_pc_8053f48:                             ; preds = %dec_label_pc_8053f2f, %dec_label_pc_8053f38
  %v0_8053f48 = load i32, i32* @global_var_805640c.49, align 4
  store i32 %v0_8053f48, i32* %eax.global-to-local, align 4
  %v1_8053f4d = add i32 %v0_8053f48, 4
  %v2_8053f4d = inttoptr i32 %v1_8053f4d to i32*
  %v3_8053f4d = load i32, i32* %v2_8053f4d, align 4
  %v1_8053f50 = and i32 %v3_8053f4d, -4
  store i32 %v1_8053f50, i32* %eax.global-to-local, align 4
  %v1_8053f53 = load i32, i32* @global_var_8056724.65, align 4
  %v7_8053f53 = icmp ult i32 %v1_8053f50, %v1_8053f53
  br i1 %v7_8053f53, label %dec_label_pc_8053f8c, label %dec_label_pc_8053f5b

dec_label_pc_8053f5b:                             ; preds = %dec_label_pc_8053f48
  store i32 ptrtoint (i8* @global_var_80563e0.48 to i32), i32* @edx, align 4
  %v0_8053f60 = load i32, i32* @global_var_8056728.63, align 8
  store i32 %v0_8053f60, i32* @eax, align 4
  %v0_8053f65 = call i32 @function_8053bd4()
  store i32 %v0_8053f65, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f8c

dec_label_pc_8053f6c:                             ; preds = %dec_label_pc_8053e74
  %v2_8053f6c = inttoptr i32 %v1_8053e3d to i32*
  %v3_8053f6c = load i32, i32* %v2_8053f6c, align 4
  %v0_8053f6f = load i32, i32* @global_var_8056730.56, align 16
  %v1_8053f6f = add i32 %v0_8053f6f, -1
  store i32 %v1_8053f6f, i32* @global_var_8056730.56, align 16
  %v2_8053f75 = add i32 %v3_8053f6c, %v1_8053e4d
  store i32 %v2_8053f75, i32* %eax.global-to-local, align 4
  %v2_8053f78 = sub i32 %v1_8053e3d, %v3_8053f6c
  %v0_8053f7e = load i32, i32* @global_var_8056744.59, align 4
  %v2_8053f7e = sub i32 %v0_8053f7e, %v2_8053f75
  store i32 %v2_8053f7e, i32* @global_var_8056744.59, align 4
  %v4_8053f84 = inttoptr i32 %v2_8053f78 to i32*
  %v5_8053f84 = call i32 @function_8054cd5(i32* %v4_8053f84, i32 %v2_8053f75, i32 %v1_8053e4d, i32 %v1_8053e4d)
  store i32 %v5_8053f84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f8c

dec_label_pc_8053f8c:                             ; preds = %dec_label_pc_8053f48, %dec_label_pc_8053f27, %dec_label_pc_8053f5b, %dec_label_pc_8053e54, %dec_label_pc_8053f6c
  store i32 %v2_8053e27, i32* @eax, align 4
  %v2_8053f95 = call i32 @function_8054570(i32 %v2_8053e27, i32 1)
  store i32 %v2_8053f95, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f9d

dec_label_pc_8053f9d:                             ; preds = %dec_label_pc_8053e09, %dec_label_pc_8053f8c
  %.0 = phi i32 [ undef, %dec_label_pc_8053e09 ], [ %v2_8053f95, %dec_label_pc_8053f8c ]
  store i32 %v0_8053e0c, i32* @ebx, align 4
  store i32 %v0_8053e0b, i32* @esi, align 4
  store i32 %v0_8053e0a, i32* @edi, align 4
  store i32 %v0_8053e09, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053f6c, { 1, 0 }
  uselistorder i32 %v0_8053f01, { 1, 0 }
  uselistorder i32 %v1_8053ecc, { 1, 0 }
  uselistorder i32 %v2_8053ec5, { 1, 0 }
  uselistorder i32 %v1_8053eba, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053ec9, { 1, 0 }
  uselistorder i32 %v1_8053e4d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053e48, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053e3d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_80563e0.48 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056414.51 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805640c.49, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_80563e0.48 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_80563e0.48, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805603c.47 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053f9d, { 1, 0 }
  uselistorder label %dec_label_pc_8053f8c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053f48, { 1, 0 }
  uselistorder label %dec_label_pc_8053f27, { 1, 0 }
  uselistorder label %dec_label_pc_8053ef2, { 1, 0 }
  uselistorder label %dec_label_pc_8053eea, { 1, 0 }
  uselistorder label %dec_label_pc_8053eb6, { 1, 0 }
}

define i32 @function_8053fa5() local_unnamed_addr {
dec_label_pc_8053fc0.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053fb1 = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_8056054.68 to i32))
  %v12_8053fbb = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053fc048 = add i32 %v12_8053fbb, 276
  %v5_8053fc049 = inttoptr i32 %v4_8053fc048 to i32*
  store i32 0, i32* %v5_8053fc049, align 4
  %v0_8053fcb50 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fcb51 = add i32 %v0_8053fcb50, -1
  %v9_8053fcb52 = icmp slt i32 %v1_8053fcb51, 0
  store i32 %v1_8053fcb51, i32* %eax.global-to-local, align 4
  %v1_8053fcc53 = icmp eq i1 %v9_8053fcb52, false
  br i1 %v1_8053fcc53, label %dec_label_pc_8053fc0.dec_label_pc_8053fc0_crit_edge, label %dec_label_pc_8053fce

dec_label_pc_8053fc0.dec_label_pc_8053fc0_crit_edge: ; preds = %dec_label_pc_8053fc0.lr.ph, %dec_label_pc_8053fc0.dec_label_pc_8053fc0_crit_edge
  %v1_8053fcb54 = phi i32 [ %v1_8053fcb, %dec_label_pc_8053fc0.dec_label_pc_8053fc0_crit_edge ], [ %v1_8053fcb51, %dec_label_pc_8053fc0.lr.ph ]
  %v0_8053fc0.pre = load i32, i32* @esp, align 4
  %v2_8053fc0 = mul i32 %v1_8053fcb54, 4
  %v3_8053fc0 = add i32 %v0_8053fc0.pre, 152
  %v4_8053fc0 = add i32 %v3_8053fc0, %v2_8053fc0
  %v5_8053fc0 = inttoptr i32 %v4_8053fc0 to i32*
  store i32 0, i32* %v5_8053fc0, align 4
  %v0_8053fcb = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fcb = add i32 %v0_8053fcb, -1
  %v9_8053fcb = icmp slt i32 %v1_8053fcb, 0
  store i32 %v1_8053fcb, i32* %eax.global-to-local, align 4
  %v1_8053fcc = icmp eq i1 %v9_8053fcb, false
  br i1 %v1_8053fcc, label %dec_label_pc_8053fc0.dec_label_pc_8053fc0_crit_edge, label %dec_label_pc_8053fce

dec_label_pc_8053fce:                             ; preds = %dec_label_pc_8053fc0.dec_label_pc_8053fc0_crit_edge, %dec_label_pc_8053fc0.lr.ph
  %v0_8053fce = load i32, i32* @ebx, align 4
  %v2_8053fd2 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053fd2, i32* @ebx, align 4
  %v4_8053fda = call i32 @function_8052ffe(i32 %v2_8053fd2, i32 6, i32 %v0_8053fce, i32 %v0_8053fce)
  store i32 %v4_8053fda, i32* %eax.global-to-local, align 4
  %v1_8053fe2 = icmp eq i32 %v4_8053fda, 0
  %v1_8053fe4 = icmp eq i1 %v1_8053fe2, false
  br i1 %v1_8053fe4, label %dec_label_pc_8053ff4, label %dec_label_pc_8053fe6

dec_label_pc_8053fe6:                             ; preds = %dec_label_pc_8053fce
  %v3_8053fec = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053fec = call i32 @function_805291d(i32 1, %_TYPEDEF_sigset_t* %v3_8053fec, i32 0)
  store i32 %v4_8053fec, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ff4

dec_label_pc_8053ff4:                             ; preds = %dec_label_pc_8053fce, %dec_label_pc_8053fe6
  %v2_805402c23 = phi i32 [ %v4_8053fda, %dec_label_pc_8053fce ], [ %v4_8053fec, %dec_label_pc_8053fe6 ]
  %v0_8053ff4 = load i8, i8* @global_var_8056154.69, align 4
  %v1_8053ff4 = icmp eq i8 %v0_8053ff4, 0
  %v1_8053ffb = icmp eq i1 %v1_8053ff4, false
  br i1 %v1_8053ffb, label %dec_label_pc_805402c, label %dec_label_pc_8053ffd

dec_label_pc_8053ffd:                             ; preds = %dec_label_pc_8053ff4
  store i8 1, i8* @global_var_8056154.69, align 4
  br label %dec_label_pc_8054004

dec_label_pc_8054004:                             ; preds = %dec_label_pc_805406b, %dec_label_pc_8053ffd
  %v1_805400c = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_8056054.68 to i32))
  store i32 %v1_805400c, i32* %eax.global-to-local, align 4
  %v1_8054018 = call i32 @function_8052ed0(i32 6)
  store i32 %v1_8054018, i32* %eax.global-to-local, align 4
  %v1_8054024 = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_8056054.68 to i32))
  store i32 %v1_8054024, i32* %eax.global-to-local, align 4
  %v0_805402c.pre = load i8, i8* @global_var_8056154.69, align 4
  br label %dec_label_pc_805402c

dec_label_pc_805402c:                             ; preds = %dec_label_pc_8053ff4, %dec_label_pc_8054004
  %v2_805402c = phi i32 [ %v2_805402c23, %dec_label_pc_8053ff4 ], [ %v1_8054024, %dec_label_pc_8054004 ]
  %v0_805402c = phi i8 [ %v0_8053ff4, %dec_label_pc_8053ff4 ], [ %v0_805402c.pre, %dec_label_pc_8054004 ]
  %v1_805402c = zext i8 %v0_805402c to i32
  %v3_805402c = and i32 %v2_805402c, -256
  %v4_805402c = or i32 %v1_805402c, %v3_805402c
  store i32 %v4_805402c, i32* %eax.global-to-local, align 4
  %v10_8054031 = icmp eq i8 %v0_805402c, 1
  %v1_8054033 = icmp eq i1 %v10_8054031, false
  br i1 %v1_8054033, label %dec_label_pc_805408d, label %dec_label_pc_8054060.lr.ph

dec_label_pc_8054060.lr.ph:                       ; preds = %dec_label_pc_805402c
  store i8 2, i8* @global_var_8056154.69, align 4
  %v2_8054044 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054044, i32* %eax.global-to-local, align 4
  %v3_8054049 = bitcast i32* %stack_var_-272 to i8*
  %v4_8054049 = call i32 @function_8052c3a(i8* %v3_8054049, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805406040 = add i32 %v12_8053fbb, 140
  %v5_805406041 = inttoptr i32 %v4_805406040 to i32*
  store i32 -1, i32* %v5_805406041, align 4
  %v0_805406842 = load i32, i32* %eax.global-to-local, align 4
  %v1_805406843 = add i32 %v0_805406842, -1
  %v9_805406844 = icmp slt i32 %v1_805406843, 0
  store i32 %v1_805406843, i32* %eax.global-to-local, align 4
  %v1_805406945 = icmp eq i1 %v9_805406844, false
  br i1 %v1_805406945, label %dec_label_pc_8054060.dec_label_pc_8054060_crit_edge, label %dec_label_pc_805406b

dec_label_pc_8054060.dec_label_pc_8054060_crit_edge: ; preds = %dec_label_pc_8054060.lr.ph, %dec_label_pc_8054060.dec_label_pc_8054060_crit_edge
  %v1_805406846 = phi i32 [ %v1_8054068, %dec_label_pc_8054060.dec_label_pc_8054060_crit_edge ], [ %v1_805406843, %dec_label_pc_8054060.lr.ph ]
  %v0_8054060.pre = load i32, i32* @esp, align 4
  %v2_8054060 = mul i32 %v1_805406846, 4
  %v3_8054060 = add i32 %v0_8054060.pre, 16
  %v4_8054060 = add i32 %v3_8054060, %v2_8054060
  %v5_8054060 = inttoptr i32 %v4_8054060 to i32*
  store i32 -1, i32* %v5_8054060, align 4
  %v0_8054068 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054068 = add i32 %v0_8054068, -1
  %v9_8054068 = icmp slt i32 %v1_8054068, 0
  store i32 %v1_8054068, i32* %eax.global-to-local, align 4
  %v1_8054069 = icmp eq i1 %v9_8054068, false
  br i1 %v1_8054069, label %dec_label_pc_8054060.dec_label_pc_8054060_crit_edge, label %dec_label_pc_805406b

dec_label_pc_805406b:                             ; preds = %dec_label_pc_8054060.dec_label_pc_8054060_crit_edge, %dec_label_pc_8054060.lr.ph
  store i32 %v2_8054044, i32* %eax.global-to-local, align 4
  %v4_8054080 = call i32 @function_80547af(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8054080, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054004

dec_label_pc_805408d:                             ; preds = %dec_label_pc_805402c
  %v10_805408d = icmp eq i8 %v0_805402c, 2
  %v1_805408f = icmp eq i1 %v10_805408d, false
  br i1 %v1_805408f, label %dec_label_pc_8054099, label %dec_label_pc_8054099.thread

dec_label_pc_8054099.thread:                      ; preds = %dec_label_pc_805408d
  store i8 3, i8* @global_var_8056154.69, align 4
  br label %dec_label_pc_80540a2

dec_label_pc_8054099:                             ; preds = %dec_label_pc_805408d
  %v9_8054099 = icmp eq i8 %v0_805402c, 3
  %v1_80540a0 = icmp eq i1 %v9_8054099, false
  br i1 %v1_80540a0, label %dec_label_pc_80540b3, label %dec_label_pc_80540a2

dec_label_pc_80540a2:                             ; preds = %dec_label_pc_8054099.thread, %dec_label_pc_8054099
  store i8 4, i8* @global_var_8056154.69, align 4
  %v1_80540ae = call i32 @function_8054910(i32 127)
  unreachable

dec_label_pc_80540b3:                             ; preds = %dec_label_pc_8054099, %dec_label_pc_80540b3
  br label %dec_label_pc_80540b3

; uselistorder directives
  uselistorder i32 %v1_8054068, { 2, 1, 0 }
  uselistorder i32 %v1_8053fcb, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 4, 3, 0, 15, 16, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18 }
  uselistorder i8 3, { 0, 2, 1 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8056154.69, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80540b3, { 1, 0 }
  uselistorder label %dec_label_pc_80540a2, { 1, 0 }
  uselistorder label %dec_label_pc_8054060.dec_label_pc_8054060_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805402c, { 1, 0 }
  uselistorder label %dec_label_pc_8053ff4, { 1, 0 }
  uselistorder label %dec_label_pc_8053fc0.dec_label_pc_8053fc0_crit_edge, { 1, 0 }
}

define i32 @function_80541f9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80541f9:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805420c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805420c, i32* @ebx, align 4
  %v2_8054211 = call i32 @function_8054570(i32 %v2_805420c, i32 134563181)
  %v1_805421d = call i32 @function_805456d(i32 ptrtoint (i32* @global_var_805606c.70 to i32))
  %v0_8054222 = load i32, i32* @global_var_8056158.71, align 8
  store i32 %v0_8054222, i32* @eax, align 4
  %v1_805422a = icmp eq i32 %v0_8054222, 0
  br i1 %v1_805422a, label %dec_label_pc_8054237, label %dec_label_pc_805422e

dec_label_pc_805422e:                             ; preds = %dec_label_pc_80541f9
  %v0_8054231 = load i32, i32* @esi, align 4
  %v1_8054232 = call i32 @unknown_0(i32 %v0_8054231)
  store i32 %v1_8054232, i32* @eax, align 4
  br label %dec_label_pc_8054237

dec_label_pc_8054237:                             ; preds = %dec_label_pc_80541f9, %dec_label_pc_805422e
  %v2_805423c = call i32 @function_8054570(i32 %v2_805420c, i32 1)
  %v0_8054241 = call i32 @function_805452e()
  %v0_805425a = load i32, i32* @esi, align 4
  %v1_805425b = call i32 @function_8054910(i32 %v0_805425a)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_8054910, { 1, 0 }
  uselistorder i32 (i32)* @function_805456d, { 7, 6, 5, 4, 3, 0, 1, 2, 10, 9, 8 }
  uselistorder i32 (i32, i32)* @function_8054570, { 8, 7, 6, 5, 9, 0, 4, 1, 3, 2, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_8054237, { 1, 0 }
}

define i32 @function_8054260() local_unnamed_addr {
dec_label_pc_8054260:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8054260 = load i32, i32* @ebp, align 4
  %v0_8054261 = load i32, i32* @edi, align 4
  %v0_8054262 = load i32, i32* @esi, align 4
  %v0_8054263 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp32, i32* %edx.global-to-local, align 4
  %v1_8054276 = icmp eq i32 %tmp32, 0
  %v1_8054278 = icmp eq i1 %v1_8054276, false
  br i1 %v1_8054278, label %dec_label_pc_805427f.lr.ph, label %dec_label_pc_80543d7

dec_label_pc_805427f.lr.ph:                       ; preds = %dec_label_pc_8054260
  %v15_8054264 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805427f56 = add i32 %v15_8054264, 416
  %v5_805427f57 = inttoptr i32 %v4_805427f56 to i32*
  store i32 0, i32* %v5_805427f57, align 4
  %v0_805428a58 = load i32, i32* %eax.global-to-local, align 4
  %v1_805428a59 = add i32 %v0_805428a58, -1
  %v9_805428a60 = icmp slt i32 %v1_805428a59, 0
  store i32 %v1_805428a59, i32* %eax.global-to-local, align 4
  %v1_805428b61 = icmp eq i1 %v9_805428a60, false
  br i1 %v1_805428b61, label %dec_label_pc_805427f.dec_label_pc_805427f_crit_edge, label %dec_label_pc_805428d

dec_label_pc_805427f.dec_label_pc_805427f_crit_edge: ; preds = %dec_label_pc_805427f.lr.ph, %dec_label_pc_805427f.dec_label_pc_805427f_crit_edge
  %v1_805428a62 = phi i32 [ %v1_805428a, %dec_label_pc_805427f.dec_label_pc_805427f_crit_edge ], [ %v1_805428a59, %dec_label_pc_805427f.lr.ph ]
  %v0_805427f.pre = load i32, i32* @esp, align 4
  %v2_805427f = mul i32 %v1_805428a62, 4
  %v3_805427f = add i32 %v0_805427f.pre, 292
  %v4_805427f = add i32 %v3_805427f, %v2_805427f
  %v5_805427f = inttoptr i32 %v4_805427f to i32*
  store i32 0, i32* %v5_805427f, align 4
  %v0_805428a = load i32, i32* %eax.global-to-local, align 4
  %v1_805428a = add i32 %v0_805428a, -1
  %v9_805428a = icmp slt i32 %v1_805428a, 0
  store i32 %v1_805428a, i32* %eax.global-to-local, align 4
  %v1_805428b = icmp eq i1 %v9_805428a, false
  br i1 %v1_805428b, label %dec_label_pc_805427f.dec_label_pc_805427f_crit_edge, label %dec_label_pc_805428d

dec_label_pc_805428d:                             ; preds = %dec_label_pc_805427f.dec_label_pc_805427f_crit_edge, %dec_label_pc_805427f.lr.ph
  %v1_805428a.lcssa = phi i32 [ %v1_805428a59, %dec_label_pc_805427f.lr.ph ], [ %v1_805428a, %dec_label_pc_805427f.dec_label_pc_805427f_crit_edge ]
  store i32 %tmp32, i32* %stack_var_-24, align 4
  %v2_80542a3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80542a3, i32* @ebx, align 4
  store i32 %v2_80542a3, i32* %stack_var_-460, align 4
  %v4_80542ab = call i32 @function_8052ffe(i32 %v2_80542a3, i32 17, i32 %v1_805428a.lcssa, i32 %v1_805428a.lcssa)
  store i32 %v4_80542ab, i32* %eax.global-to-local, align 4
  %v2_80542b3 = icmp slt i32 %v4_80542ab, 0
  br i1 %v2_80542b3, label %dec_label_pc_80543db, label %dec_label_pc_80542bb

dec_label_pc_80542bb:                             ; preds = %dec_label_pc_805428d
  %v2_80542bc = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80542bc, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80542c7 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80542c7 = call i32 @function_805291d(i32 0, %_TYPEDEF_sigset_t* %v3_80542c7, i32 %v2_80542bc)
  store i32 %v4_80542c7, i32* %eax.global-to-local, align 4
  %v1_80542cf = icmp eq i32 %v4_80542c7, 0
  %v1_80542d1 = icmp eq i1 %v1_80542cf, false
  br i1 %v1_80542d1, label %dec_label_pc_80543db, label %dec_label_pc_80542d7

dec_label_pc_80542d7:                             ; preds = %dec_label_pc_80542bb
  store i32 %v2_80542bc, i32* %stack_var_-460, align 4
  %v4_80542dc = call i32 @function_8052fda(i32 %v2_80542bc, i32 17, i32 %v4_80542c7, i32 %v4_80542c7)
  store i32 %v4_80542dc, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80542e9 = icmp eq i32 %v4_80542dc, 0
  br i1 %v1_80542e9, label %dec_label_pc_80542f2.lr.ph, label %dec_label_pc_80543a5

dec_label_pc_80542f2.lr.ph:                       ; preds = %dec_label_pc_80542d7
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_805427f57, align 4
  %v0_80542fd50 = load i32, i32* %edx.global-to-local, align 4
  %v1_80542fd51 = add i32 %v0_80542fd50, -1
  %v9_80542fd52 = icmp slt i32 %v1_80542fd51, 0
  store i32 %v1_80542fd51, i32* %edx.global-to-local, align 4
  %v1_80542fe53 = icmp eq i1 %v9_80542fd52, false
  br i1 %v1_80542fe53, label %dec_label_pc_80542f2.dec_label_pc_80542f2_crit_edge, label %dec_label_pc_8054300

dec_label_pc_80542f2.dec_label_pc_80542f2_crit_edge: ; preds = %dec_label_pc_80542f2.lr.ph, %dec_label_pc_80542f2.dec_label_pc_80542f2_crit_edge
  %v1_80542fd54 = phi i32 [ %v1_80542fd, %dec_label_pc_80542f2.dec_label_pc_80542f2_crit_edge ], [ %v1_80542fd51, %dec_label_pc_80542f2.lr.ph ]
  %v0_80542f2.pre = load i32, i32* @esp, align 4
  %v2_80542f2 = mul i32 %v1_80542fd54, 4
  %v3_80542f2 = add i32 %v0_80542f2.pre, 292
  %v4_80542f2 = add i32 %v3_80542f2, %v2_80542f2
  %v5_80542f2 = inttoptr i32 %v4_80542f2 to i32*
  store i32 0, i32* %v5_80542f2, align 4
  %v0_80542fd = load i32, i32* %edx.global-to-local, align 4
  %v1_80542fd = add i32 %v0_80542fd, -1
  %v9_80542fd = icmp slt i32 %v1_80542fd, 0
  store i32 %v1_80542fd, i32* %edx.global-to-local, align 4
  %v1_80542fe = icmp eq i1 %v9_80542fd, false
  br i1 %v1_80542fe, label %dec_label_pc_80542f2.dec_label_pc_80542f2_crit_edge, label %dec_label_pc_8054300

dec_label_pc_8054300:                             ; preds = %dec_label_pc_80542f2.dec_label_pc_80542f2_crit_edge, %dec_label_pc_80542f2.lr.ph
  store i32 %v2_80542a3, i32* %eax.global-to-local, align 4
  store i32 %v2_80542a3, i32* %stack_var_-460, align 4
  %v4_805430c = call i32 @function_8052ffe(i32 %v2_80542a3, i32 17, i32 0, i32 0)
  store i32 %v4_805430c, i32* %eax.global-to-local, align 4
  %v2_8054314 = icmp slt i32 %v4_805430c, 0
  br i1 %v2_8054314, label %dec_label_pc_80543db, label %dec_label_pc_805431c

dec_label_pc_805431c:                             ; preds = %dec_label_pc_8054300
  %v2_805431d = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_805431d, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8054326 = call i32 @function_80547af(i32 17, i32* null, i32 %v2_805431d)
  store i32 %v4_8054326, i32* %eax.global-to-local, align 4
  %v2_805432e = icmp slt i32 %v4_8054326, 0
  %v1_8054330 = icmp eq i1 %v2_805432e, false
  br i1 %v1_8054330, label %dec_label_pc_805435a, label %dec_label_pc_8054332

dec_label_pc_8054332:                             ; preds = %dec_label_pc_805431c
  %v0_8054332 = load i32, i32* %stack_var_-460, align 4
  %v1_8054332 = call i32 @function_8052be9(i32 %v0_8054332)
  store i32 %v1_8054332, i32* %eax.global-to-local, align 4
  store i32 %v1_8054332, i32* @ebx, align 4
  %v1_8054339 = inttoptr i32 %v1_8054332 to i32*
  %v2_8054339 = load i32, i32* %v1_8054339, align 4
  store i32 %v2_8054339, i32* @esi, align 4
  store i32 %v2_80542bc, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054348 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054348 = call i32 @function_805291d(i32 2, %_TYPEDEF_sigset_t* %v3_8054348, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054353 = load i32, i32* @esi, align 4
  %v1_8054353 = load i32, i32* @ebx, align 4
  %v2_8054353 = inttoptr i32 %v1_8054353 to i32*
  store i32 %v0_8054353, i32* %v2_8054353, align 4
  %v0_80543e8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543de

dec_label_pc_805435a:                             ; preds = %dec_label_pc_805431c
  %v3_805435a = load i32, i32* %stack_var_-420, align 4
  %v12_805435a = icmp eq i32 %v3_805435a, 1
  %v2_8054366 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054366, i32* @ebx, align 4
  %v1_805436d = icmp eq i1 %v12_805435a, false
  br i1 %v1_805436d, label %dec_label_pc_8054394, label %dec_label_pc_805436f

dec_label_pc_805436f:                             ; preds = %dec_label_pc_805435a
  %v0_805436f = load i32, i32* @edi, align 4
  store i32 %v2_8054366, i32* %stack_var_-460, align 4
  %v4_8054373 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8054373 = call i32 @function_8054d07(%timespec* %v4_8054373, i32 %v2_8054366, i32 %v0_805436f, i32 %v0_805436f)
  store i32 %v5_8054373, i32* %eax.global-to-local, align 4
  store i32 %v5_8054373, i32* @edi, align 4
  %v1_805437a = call i32 @function_8052be9(i32 %v2_8054366)
  store i32 %v1_805437a, i32* %eax.global-to-local, align 4
  store i32 %v1_805437a, i32* @ebx, align 4
  %v1_8054384 = inttoptr i32 %v1_805437a to i32*
  %v2_8054384 = load i32, i32* %v1_8054384, align 4
  store i32 %v2_8054384, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805438b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805438b = call i32 @function_805291d(i32 2, %_TYPEDEF_sigset_t* %v3_805438b, i32 0)
  store i32 %v4_805438b, i32* %eax.global-to-local, align 4
  %v0_8054390 = load i32, i32* @esi, align 4
  %v1_8054390 = load i32, i32* @ebx, align 4
  %v2_8054390 = inttoptr i32 %v1_8054390 to i32*
  store i32 %v0_8054390, i32* %v2_8054390, align 4
  %v0_80543ba.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80543b7

dec_label_pc_8054394:                             ; preds = %dec_label_pc_805435a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805439a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805439a = call i32 @function_805291d(i32 2, %_TYPEDEF_sigset_t* %v3_805439a, i32 0)
  store i32 %v4_805439a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80543b0

dec_label_pc_80543a5:                             ; preds = %dec_label_pc_80542d7
  %v2_80543a7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80543a7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543b0

dec_label_pc_80543b0:                             ; preds = %dec_label_pc_8054394, %dec_label_pc_80543a5
  %storemerge3.pre-phi = phi i32 [ %v2_8054366, %dec_label_pc_8054394 ], [ %v2_80543a7, %dec_label_pc_80543a5 ]
  %v3_80543b0 = phi i32 [ %v2_80542bc, %dec_label_pc_8054394 ], [ %v4_80542dc, %dec_label_pc_80543a5 ]
  %v2_80543b0 = phi i32 [ 0, %dec_label_pc_8054394 ], [ %v4_80542dc, %dec_label_pc_80543a5 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_80543b0 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_80543b0 = call i32 @function_8054d07(%timespec* %v4_80543b0, i32 %storemerge3.pre-phi, i32 %v2_80543b0, i32 %v3_80543b0)
  store i32 %v5_80543b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543b7

dec_label_pc_80543b7:                             ; preds = %dec_label_pc_805436f, %dec_label_pc_80543b0
  %v0_80543ba = phi i32 [ %v0_80543ba.pre, %dec_label_pc_805436f ], [ %v5_80543b0, %dec_label_pc_80543b0 ]
  %v1_80543ba = icmp eq i32 %v0_80543ba, 0
  br i1 %v1_80543ba, label %dec_label_pc_80543d7, label %dec_label_pc_80543be

dec_label_pc_80543be:                             ; preds = %dec_label_pc_80543b7
  %v4_80543ce = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80543ce, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543de

dec_label_pc_80543d7:                             ; preds = %dec_label_pc_8054260, %dec_label_pc_80543b7
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543de

dec_label_pc_80543db:                             ; preds = %dec_label_pc_8054300, %dec_label_pc_80542bb, %dec_label_pc_805428d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543de

dec_label_pc_80543de:                             ; preds = %dec_label_pc_80543d7, %dec_label_pc_80543be, %dec_label_pc_8054332, %dec_label_pc_80543db
  %v0_80543e8 = phi i32 [ 0, %dec_label_pc_80543d7 ], [ %v4_80543ce, %dec_label_pc_80543be ], [ %v0_80543e8.pre, %dec_label_pc_8054332 ], [ -1, %dec_label_pc_80543db ]
  store i32 %v0_8054263, i32* @ebx, align 4
  store i32 %v0_8054262, i32* @esi, align 4
  store i32 %v0_8054261, i32* @edi, align 4
  store i32 %v0_8054260, i32* @ebp, align 4
  ret i32 %v0_80543e8

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805437a, { 1, 0, 2 }
  uselistorder i32 %v2_8054366, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80542fd, { 2, 1, 0 }
  uselistorder i32 %v4_80542dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80542bc, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_80542a3, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_805428a, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 3, 5, 4, 0, 1, 2, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 0, 1, 2, 25 }
  uselistorder i32 (i32, i32*, i32)* @function_80547af, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052ffe, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_80543de, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80543d7, { 1, 0 }
  uselistorder label %dec_label_pc_80543b7, { 1, 0 }
  uselistorder label %dec_label_pc_80543b0, { 1, 0 }
  uselistorder label %dec_label_pc_80542f2.dec_label_pc_80542f2_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805427f.dec_label_pc_805427f_crit_edge, { 1, 0 }
}

define i32 @function_80543e9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80543e9:
  switch i32 %arg1, label %dec_label_pc_8054408 [
    i32 0, label %dec_label_pc_8054418
    i32 1, label %dec_label_pc_80544fd
    i32 2, label %dec_label_pc_8054422
    i32 3, label %dec_label_pc_805442c
    i32 4, label %dec_label_pc_8054436
    i32 5, label %dec_label_pc_80544cc
    i32 6, label %dec_label_pc_805443e
    i32 7, label %dec_label_pc_80543fe
    i32 8, label %dec_label_pc_80543fe
    i32 9, label %dec_label_pc_80543fe
    i32 10, label %dec_label_pc_80543fe
    i32 11, label %dec_label_pc_80543fe
    i32 12, label %dec_label_pc_80543fe
    i32 13, label %dec_label_pc_80543fe
    i32 14, label %dec_label_pc_80543fe
    i32 15, label %dec_label_pc_80543fe
    i32 16, label %dec_label_pc_80543fe
    i32 17, label %dec_label_pc_80543fe
    i32 18, label %dec_label_pc_80543fe
    i32 19, label %dec_label_pc_80543fe
    i32 20, label %dec_label_pc_80543fe
    i32 21, label %dec_label_pc_80543fe
    i32 22, label %dec_label_pc_80543fe
    i32 23, label %dec_label_pc_80544fd
    i32 24, label %dec_label_pc_80544fd
    i32 25, label %dec_label_pc_8054509
    i32 26, label %dec_label_pc_80544da
    i32 27, label %dec_label_pc_80544fd
    i32 28, label %dec_label_pc_8054450
    i32 29, label %dec_label_pc_80544d3
    i32 30, label %dec_label_pc_8054448
    i32 31, label %dec_label_pc_80544e8
    i32 32, label %dec_label_pc_80544fd
    i32 33, label %dec_label_pc_80544fd
    i32 34, label %dec_label_pc_80544fd
    i32 35, label %dec_label_pc_80544e1
    i32 36, label %dec_label_pc_8054510
    i32 37, label %dec_label_pc_8054517
    i32 38, label %dec_label_pc_8054510
    i32 39, label %dec_label_pc_805445a
    i32 40, label %dec_label_pc_805451e
    i32 41, label %dec_label_pc_80544fd
    i32 42, label %dec_label_pc_80544e8
    i32 43, label %dec_label_pc_8054517
    i32 44, label %dec_label_pc_8054525
    i32 45, label %dec_label_pc_8054517
    i32 46, label %dec_label_pc_80544d3
    i32 47, label %dec_label_pc_80544d3
    i32 48, label %dec_label_pc_80544d3
    i32 49, label %dec_label_pc_80544fd
    i32 50, label %dec_label_pc_80544fd
    i32 51, label %dec_label_pc_80544d3
    i32 52, label %dec_label_pc_80544d3
    i32 53, label %dec_label_pc_80544fd
    i32 54, label %dec_label_pc_80544fd
    i32 55, label %dec_label_pc_80544fd
    i32 56, label %dec_label_pc_80544fd
    i32 57, label %dec_label_pc_80544fd
    i32 58, label %dec_label_pc_80544fd
    i32 59, label %dec_label_pc_80544fd
    i32 60, label %dec_label_pc_80544fd
    i32 61, label %dec_label_pc_80544fd
    i32 62, label %dec_label_pc_80544fd
    i32 63, label %dec_label_pc_80544fd
    i32 64, label %dec_label_pc_80544fd
    i32 65, label %dec_label_pc_80544fd
    i32 66, label %dec_label_pc_80544fd
    i32 67, label %dec_label_pc_80543fe
    i32 68, label %dec_label_pc_80543fe
    i32 69, label %dec_label_pc_80544e1
    i32 70, label %dec_label_pc_80544e1
    i32 71, label %dec_label_pc_80544e1
    i32 72, label %dec_label_pc_80544e8
    i32 73, label %dec_label_pc_80544ef
    i32 74, label %dec_label_pc_80544f6
    i32 75, label %dec_label_pc_8054464
    i32 76, label %dec_label_pc_80544f6
    i32 77, label %dec_label_pc_80543fe
    i32 78, label %dec_label_pc_80543fe
    i32 79, label %dec_label_pc_80543fe
    i32 80, label %dec_label_pc_80543fe
    i32 81, label %dec_label_pc_80543fe
    i32 82, label %dec_label_pc_80543fe
    i32 83, label %dec_label_pc_80543fe
    i32 84, label %dec_label_pc_80543fe
    i32 85, label %dec_label_pc_80544fd
    i32 86, label %dec_label_pc_80544fd
    i32 87, label %dec_label_pc_80544da
    i32 88, label %dec_label_pc_805446e
    i32 89, label %dec_label_pc_8054478
    i32 90, label %dec_label_pc_80544ef
    i32 91, label %dec_label_pc_80543fe
    i32 92, label %dec_label_pc_80543fe
    i32 93, label %dec_label_pc_80543fe
    i32 94, label %dec_label_pc_80543fe
    i32 95, label %dec_label_pc_80544d3
    i32 96, label %dec_label_pc_80544fd
    i32 97, label %dec_label_pc_80544fd
    i32 98, label %dec_label_pc_80543fe
    i32 99, label %dec_label_pc_80543fe
    i32 100, label %dec_label_pc_80543fe
    i32 101, label %dec_label_pc_8054482
    i32 102, label %dec_label_pc_80544c5
    i32 103, label %dec_label_pc_8054502
    i32 104, label %dec_label_pc_80544da
    i32 105, label %dec_label_pc_805448c
    i32 106, label %dec_label_pc_80544e8
    i32 107, label %dec_label_pc_80544e8
    i32 108, label %dec_label_pc_80544cc
    i32 109, label %dec_label_pc_8054509
    i32 110, label %dec_label_pc_8054525
    i32 111, label %dec_label_pc_80544c5
    i32 112, label %dec_label_pc_8054502
    i32 113, label %dec_label_pc_8054525
    i32 114, label %dec_label_pc_8054496
    i32 115, label %dec_label_pc_805451e
    i32 116, label %dec_label_pc_80544fd
    i32 117, label %dec_label_pc_80544fd
    i32 118, label %dec_label_pc_80544a0
    i32 119, label %dec_label_pc_80544aa
    i32 120, label %dec_label_pc_8054517
    i32 121, label %dec_label_pc_80544da
    i32 122, label %dec_label_pc_80544da
    i32 123, label %dec_label_pc_80544da
    i32 124, label %dec_label_pc_80544da
    i32 125, label %dec_label_pc_80543fe
    i32 126, label %dec_label_pc_80543fe
    i32 127, label %dec_label_pc_80544fd
    i32 128, label %dec_label_pc_80544fd
    i32 129, label %dec_label_pc_80543fe
    i32 130, label %dec_label_pc_80543fe
    i32 131, label %dec_label_pc_80544fd
    i32 149, label %dec_label_pc_80544b1
  ]

dec_label_pc_80543fe:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054408:                             ; preds = %dec_label_pc_80543e9
  %v1_8054408 = call i32 @function_8052be9(i32 ptrtoint (i32* @0 to i32))
  %v1_805440d = inttoptr i32 %v1_8054408 to i32*
  store i32 22, i32* %v1_805440d, align 4
  br label %dec_label_pc_80544fd

dec_label_pc_8054418:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054422:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_805442c:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054436:                             ; preds = %dec_label_pc_80543e9
  %v0_8054439 = call i32 @function_8054b35()
  br label %dec_label_pc_805443e

dec_label_pc_805443e:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_8054436
  br label %dec_label_pc_805452a

dec_label_pc_8054448:                             ; preds = %dec_label_pc_80543e9
  %v0_805444b = call i32 @function_8054bcc()
  br label %dec_label_pc_8054450

dec_label_pc_8054450:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_8054448
  br label %dec_label_pc_805452a

dec_label_pc_805445a:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054464:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_805446e:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054478:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054482:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_805448c:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054496:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544a0:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544aa:                             ; preds = %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544b1:                             ; preds = %dec_label_pc_80543e9
  %v5_80544b7 = call i32 @function_8054938(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80544bf = icmp slt i32 %v5_80544b7, 0
  %v1_80544c1 = icmp eq i1 %v2_80544bf, false
  br i1 %v1_80544c1, label %dec_label_pc_80544d3, label %dec_label_pc_80544fd

dec_label_pc_80544c5:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544cc:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544d3:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80544b1
  br label %dec_label_pc_805452a

dec_label_pc_80544da:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544e1:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544e8:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544ef:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544f6:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_80544fd:                             ; preds = %dec_label_pc_80544b1, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_8054408
  br label %dec_label_pc_805452a

dec_label_pc_8054502:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054509:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054510:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054517:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_805451e:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_8054525:                             ; preds = %dec_label_pc_80543e9, %dec_label_pc_80543e9, %dec_label_pc_80543e9
  br label %dec_label_pc_805452a

dec_label_pc_805452a:                             ; preds = %dec_label_pc_805451e, %dec_label_pc_8054517, %dec_label_pc_8054510, %dec_label_pc_8054509, %dec_label_pc_8054502, %dec_label_pc_80544f6, %dec_label_pc_80544ef, %dec_label_pc_80544e8, %dec_label_pc_80544e1, %dec_label_pc_80544da, %dec_label_pc_80544cc, %dec_label_pc_80544c5, %dec_label_pc_80544d3, %dec_label_pc_80544aa, %dec_label_pc_80544a0, %dec_label_pc_8054496, %dec_label_pc_805448c, %dec_label_pc_8054482, %dec_label_pc_8054478, %dec_label_pc_805446e, %dec_label_pc_8054464, %dec_label_pc_805445a, %dec_label_pc_8054450, %dec_label_pc_805443e, %dec_label_pc_805442c, %dec_label_pc_8054422, %dec_label_pc_8054418, %dec_label_pc_80543fe, %dec_label_pc_80544fd, %dec_label_pc_8054525
  %v0_805452d = phi i32 [ 255, %dec_label_pc_805451e ], [ 2048, %dec_label_pc_8054517 ], [ 99, %dec_label_pc_8054510 ], [ 20, %dec_label_pc_8054509 ], [ -128, %dec_label_pc_8054502 ], [ 1024, %dec_label_pc_80544f6 ], [ 4, %dec_label_pc_80544ef ], [ 32, %dec_label_pc_80544e8 ], [ 256, %dec_label_pc_80544e1 ], [ 2147483647, %dec_label_pc_80544da ], [ 16, %dec_label_pc_80544cc ], [ 127, %dec_label_pc_80544c5 ], [ 200112, %dec_label_pc_80544d3 ], [ 9, %dec_label_pc_80544aa ], [ 65535, %dec_label_pc_80544a0 ], [ -32768, %dec_label_pc_8054496 ], [ -2147483648, %dec_label_pc_805448c ], [ 8, %dec_label_pc_8054482 ], [ 500, %dec_label_pc_8054478 ], [ 4096, %dec_label_pc_805446e ], [ 16384, %dec_label_pc_8054464 ], [ 1000, %dec_label_pc_805445a ], [ 32768, %dec_label_pc_8054450 ], [ 6, %dec_label_pc_805443e ], [ 65536, %dec_label_pc_805442c ], [ 100, %dec_label_pc_8054422 ], [ 131072, %dec_label_pc_8054418 ], [ 1, %dec_label_pc_80543fe ], [ -1, %dec_label_pc_80544fd ], [ 32767, %dec_label_pc_8054525 ]
  ret i32 %v0_805452d

; uselistorder directives
  uselistorder i32 65536, { 32, 33, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 14, 12, 15, 17, 16, 18, 1, 19, 0, 2, 22, 20, 23, 21, 26, 24, 25, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 22, 23, 25, 26, 16, 17, 1, 2, 14, 15, 18, 19, 20, 21, 3, 4, 24, 27, 28, 29, 12, 13, 30, 31, 32, 33 }
  uselistorder i32 65535, { 3, 0, 1, 2, 4 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 4, 1, 5, 2, 0, 3 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 3, 0, 1, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 96, { 1, 2, 3, 0, 4 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 92, { 11, 1, 0, 4, 2, 3, 6, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 8, 25, 26, 27, 5, 28, 29, 7, 34, 31, 32, 33, 30, 35 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 60, { 3, 0, 1, 2 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i32 43, { 1, 2, 0 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 2, 0, 3, 4, 1 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 21, { 1, 2, 3, 4, 0 }
  uselistorder i32 17, { 6, 4, 5, 2, 3, 1, 0, 7, 8 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder i32 9, { 3, 6, 0, 1, 5, 8, 4, 10, 9, 7, 11, 2 }
  uselistorder i32 6, { 0, 5, 2, 3, 1, 8, 4, 7, 6 }
  uselistorder i32 5, { 7, 0, 12, 13, 5, 4, 10, 11, 8, 3, 1, 2, 9, 6 }
  uselistorder label %dec_label_pc_805452a, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80544fd, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80544d3, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054450, { 1, 0 }
  uselistorder label %dec_label_pc_805443e, { 1, 0 }
}

define i32 @function_805452e() local_unnamed_addr {
dec_label_pc_805452e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805452e = load i32, i32* @ebx, align 4
  store i32 %v0_805452e, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32 2), i32 0), label %dec_label_pc_8054542, label %dec_label_pc_805454f

dec_label_pc_8054542:                             ; preds = %dec_label_pc_805452e, %dec_label_pc_8054542
  %v1_80545496 = phi i32 [ %v1_8054549, %dec_label_pc_8054542 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32 2), i32 -1), %dec_label_pc_805452e ]
  store i32 ptrtoint (i32* @global_var_8054549.74 to i32), i32* %stack_var_-16, align 4
  %v5_8054542 = mul i32 %v1_80545496, 4
  %v6_8054542 = add i32 %v5_8054542, ptrtoint (i32* @global_var_8056000.73 to i32)
  %v7_8054542 = inttoptr i32 %v6_8054542 to i32*
  %v8_8054542 = load i32, i32* %v7_8054542, align 4
  call void @__pseudo_call(i32 %v8_8054542)
  %v0_8054549.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054549 = add i32 %v0_8054549.pre, -1
  store i32 %v1_8054549, i32* %ebx.global-to-local, align 4
  %v10_805454a = icmp eq i32 %v0_8054549.pre, 0
  %v1_805454d = icmp eq i1 %v10_805454a, false
  br i1 %v1_805454d, label %dec_label_pc_8054542, label %dec_label_pc_805454f

dec_label_pc_805454f:                             ; preds = %dec_label_pc_8054542, %dec_label_pc_805452e
  %v0_805454f = load i32, i32* @global_var_8056168.75, align 8
  %v1_8054554 = icmp eq i32 %v0_805454f, 0
  br i1 %v1_8054554, label %dec_label_pc_805455a, label %dec_label_pc_8054558

dec_label_pc_8054558:                             ; preds = %dec_label_pc_805454f
  %v0_8054558 = load i32, i32* %stack_var_-16, align 4
  %v1_8054558 = call i32 @unknown_0(i32 %v0_8054558)
  br label %dec_label_pc_805455a

dec_label_pc_805455a:                             ; preds = %dec_label_pc_8054558, %dec_label_pc_805454f
  %v0_805455a = load i32, i32* @global_var_805616c.76, align 4
  store i32 %v0_805455a, i32* @ecx, align 4
  %v1_8054560 = icmp eq i32 %v0_805455a, 0
  br i1 %v1_8054560, label %dec_label_pc_8054569, label %dec_label_pc_8054564

dec_label_pc_8054564:                             ; preds = %dec_label_pc_805455a
  %v2_8054566 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054566, i32* %ebx.global-to-local, align 4
  %v0_8054567 = load i32, i32* %stack_var_-16, align 4
  %v1_8054567 = call i32 @unknown_0(i32 %v0_8054567)
  br label %dec_label_pc_8054569

dec_label_pc_8054569:                             ; preds = %dec_label_pc_805455a, %dec_label_pc_8054564
  %v2_8054569 = load i32, i32* %stack_var_-16, align 4
  %v2_805456a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805456a, i32* @edx, align 4
  ret i32 %v2_8054569

; uselistorder directives
  uselistorder i32 %v1_8054549, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054569, { 1, 0 }
  uselistorder label %dec_label_pc_8054542, { 1, 0 }
}

define i32 @function_805456d(i32 %arg1) local_unnamed_addr {
dec_label_pc_805456d:
  ret i32 0
}

define i32 @function_8054570(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054570:
  %v0_8054570 = load i32, i32* @eax, align 4
  ret i32 %v0_8054570
}

define i32 @function_8054571() local_unnamed_addr {
dec_label_pc_8054571:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8054571 = load i32, i32* @esi, align 4
  %v0_8054572 = load i32, i32* @ebx, align 4
  %v0_8054576 = load i32, i32* @eax, align 4
  store i32 %v0_8054576, i32* @esi, align 4
  %v0_8054578 = load i32, i32* @edx, align 4
  store i32 %v0_8054578, i32* @ebx, align 4
  %v4_805457d = call i32 @function_80525ed(i32 %v0_8054576, i32 1, i32 %tmp6)
  %v8_8054585 = icmp eq i32 %v4_805457d, -1
  %v1_8054586 = icmp eq i1 %v8_8054585, false
  br i1 %v1_8054586, label %dec_label_pc_80545a1, label %dec_label_pc_8054588

dec_label_pc_8054588:                             ; preds = %dec_label_pc_8054571
  %v0_805458a = load i32, i32* @ebx, align 4
  %v6_8054590 = call i32 @function_80527c2(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055cb4.77, i32 0, i32 0), i32 %v0_805458a)
  %v1_8054598 = load i32, i32* @esi, align 4
  %v12_8054598 = icmp eq i32 %v6_8054590, %v1_8054598
  br i1 %v12_8054598, label %dec_label_pc_80545a1, label %dec_label_pc_805459c

dec_label_pc_805459c:                             ; preds = %dec_label_pc_8054588
  %v0_805459c = call i32 @function_8053fa5()
  br label %dec_label_pc_80545a1

dec_label_pc_80545a1:                             ; preds = %dec_label_pc_8054588, %dec_label_pc_8054571, %dec_label_pc_805459c
  %v2_80545a1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8054572, i32* @ebx, align 4
  store i32 %v0_8054571, i32* @esi, align 4
  ret i32 %v2_80545a1

; uselistorder directives
  uselistorder i32 ()* @function_8053fa5, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_80527c2, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80525ed, { 2, 7, 4, 3, 6, 5, 1, 0 }
  uselistorder label %dec_label_pc_80545a1, { 2, 0, 1 }
}

define i32 @function_80545a5() local_unnamed_addr {
dec_label_pc_80545a5:
  %v0_80545a8 = load i8, i8* @global_var_8056170.78, align 16
  %v1_80545a8 = icmp eq i8 %v0_80545a8, 0
  %v1_80545af = icmp eq i1 %v1_80545a8, false
  br i1 %v1_80545af, label %dec_label_pc_80545a5.dec_label_pc_80545e1_crit_edge, label %dec_label_pc_80545b1

dec_label_pc_80545a5.dec_label_pc_80545e1_crit_edge: ; preds = %dec_label_pc_80545a5
  %v0_80545e4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80545e1

dec_label_pc_80545b1:                             ; preds = %dec_label_pc_80545a5
  store i8 1, i8* @global_var_8056170.78, align 16
  store i32 4096, i32* @global_var_8056164.79, align 4
  br label %dec_label_pc_80545e1

dec_label_pc_80545e1:                             ; preds = %dec_label_pc_80545a5.dec_label_pc_80545e1_crit_edge, %dec_label_pc_80545b1
  %v0_80545e4 = phi i32 [ %v0_80545e4.pre, %dec_label_pc_80545a5.dec_label_pc_80545e1_crit_edge ], [ 0, %dec_label_pc_80545b1 ]
  ret i32 %v0_80545e4

; uselistorder directives
  uselistorder i8 1, { 8, 0, 9, 3, 4, 5, 1, 2, 10, 11, 12, 13, 6, 7 }
  uselistorder i8* @global_var_8056170.78, { 1, 0 }
  uselistorder label %dec_label_pc_80545e1, { 1, 0 }
}

define i32 @function_80545e5(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_80545e5:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805615c.80, align 4
  store i32 %arg6, i32* @global_var_805616c.76, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_805461c = mul i32 %arg2, 4
  %v3_805461c = add i32 %tmp44, %v2_805461c
  %v1_805461f = add i32 %v3_805461c, 4
  store i32 %v1_805461f, i32* @global_var_8056160.81, align 32
  %v3_8054627 = load i32, i32* %arg3, align 4
  %v14_8054627 = icmp eq i32 %v1_805461f, %v3_8054627
  %v1_8054629 = icmp eq i1 %v14_8054627, false
  br i1 %v1_8054629, label %dec_label_pc_8054631, label %dec_label_pc_805462b

dec_label_pc_805462b:                             ; preds = %dec_label_pc_80545e5
  store i32 %v3_805461c, i32* @global_var_8056160.81, align 32
  br label %dec_label_pc_8054631

dec_label_pc_8054631:                             ; preds = %dec_label_pc_80545e5, %dec_label_pc_805462b
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8054636 = ptrtoint i32* %stack_var_-136 to i32
  %v3_805463b = bitcast i32* %stack_var_-136 to i8*
  %v4_805463b = call i32 @function_8052c3a(i8* %v3_805463b, i32 0, i32 120)
  %v0_8054640 = load i32, i32* @global_var_8056160.81, align 32
  br label %dec_label_pc_8054648

dec_label_pc_8054648:                             ; preds = %dec_label_pc_8054648, %dec_label_pc_8054631
  %v0_8054648 = phi i32 [ %v1_805464b, %dec_label_pc_8054648 ], [ %v0_8054640, %dec_label_pc_8054631 ]
  %v1_8054648 = inttoptr i32 %v0_8054648 to i32*
  %v2_8054648 = load i32, i32* %v1_8054648, align 4
  %v3_8054648 = icmp eq i32 %v2_8054648, 0
  %v1_805464b = add i32 %v0_8054648, 4
  %v1_805464e = icmp eq i1 %v3_8054648, false
  br i1 %v1_805464e, label %dec_label_pc_8054648, label %dec_label_pc_805466f.preheader

dec_label_pc_805466f.preheader:                   ; preds = %dec_label_pc_8054648
  store i32 %v1_805464b, i32* @ebx, align 4
  %v1_805466f22 = inttoptr i32 %v1_805464b to i32*
  %v2_805466f23 = load i32, i32* %v1_805466f22, align 4
  %v3_805466f24 = icmp eq i32 %v2_805466f23, 0
  %v1_805467226 = icmp eq i1 %v3_805466f24, false
  br i1 %v1_805467226, label %dec_label_pc_8054654.lr.ph, label %dec_label_pc_8054674

dec_label_pc_8054654.lr.ph:                       ; preds = %dec_label_pc_805466f.preheader
  %v3_8054634 = ptrtoint i32* %stack_var_-168 to i32
  %v3_805465f = add i32 %v3_8054634, 32
  br label %dec_label_pc_8054654

dec_label_pc_8054654:                             ; preds = %dec_label_pc_8054654.lr.ph, %dec_label_pc_805466c
  %v1_805465f = phi i32 [ %v2_805466f23, %dec_label_pc_8054654.lr.ph ], [ %v2_805466f, %dec_label_pc_805466c ]
  %v0_805465e = phi i32 [ %v1_805464b, %dec_label_pc_8054654.lr.ph ], [ %v1_805466c, %dec_label_pc_805466c ]
  %v6_8054659 = icmp ugt i32 %v1_805465f, 14
  br i1 %v6_8054659, label %dec_label_pc_805466c, label %dec_label_pc_805465b

dec_label_pc_805465b:                             ; preds = %dec_label_pc_8054654
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_805465e, i32* %stack_var_-168, align 4
  %v2_805465f = mul i32 %v1_805465f, 8
  %v4_805465f = add i32 %v3_805465f, %v2_805465f
  %v3_8054664 = inttoptr i32 %v4_805465f to i16*
  %v4_8054664 = call i32 @function_8054e32(i16* %v3_8054664, i32 %v0_805465e, i32 8)
  %v0_805466c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805466c

dec_label_pc_805466c:                             ; preds = %dec_label_pc_8054654, %dec_label_pc_805465b
  %v0_805466c = phi i32 [ %v0_805465e, %dec_label_pc_8054654 ], [ %v0_805466c.pre, %dec_label_pc_805465b ]
  %v1_805466c = add i32 %v0_805466c, 8
  store i32 %v1_805466c, i32* @ebx, align 4
  %v1_805466f = inttoptr i32 %v1_805466c to i32*
  %v2_805466f = load i32, i32* %v1_805466f, align 4
  %v3_805466f = icmp eq i32 %v2_805466f, 0
  %v1_8054672 = icmp eq i1 %v3_805466f, false
  br i1 %v1_8054672, label %dec_label_pc_8054654, label %dec_label_pc_8054674

dec_label_pc_8054674:                             ; preds = %dec_label_pc_805466c, %dec_label_pc_805466f.preheader
  store i32 %v2_8054636, i32* @eax, align 4
  %v0_8054678 = call i32 @function_8054eed()
  store i32 %v0_8054678, i32* @eax, align 4
  %v0_805467d = call i32 @function_80545a5()
  %v1_8054686 = icmp eq i32 %tmp39, 0
  %v1_8054688 = icmp eq i1 %v1_8054686, false
  br i1 %v1_8054688, label %dec_label_pc_805468e, label %dec_label_pc_805468a

dec_label_pc_805468a:                             ; preds = %dec_label_pc_8054674
  %v1_805468a = and i32 %tmp39, -65536
  %v2_805468a = or i32 %v1_805468a, 4096
  br label %dec_label_pc_805468e

dec_label_pc_805468e:                             ; preds = %dec_label_pc_8054674, %dec_label_pc_805468a
  %v0_805468e = phi i32 [ %tmp39, %dec_label_pc_8054674 ], [ %v2_805468a, %dec_label_pc_805468a ]
  store i32 %v0_805468e, i32* @global_var_8056164.79, align 4
  %v13_8054693 = icmp eq i32 %tmp38, -1
  %v1_8054698 = icmp eq i1 %v13_8054693, false
  br i1 %v1_8054698, label %dec_label_pc_80546c3, label %dec_label_pc_805469a

dec_label_pc_805469a:                             ; preds = %dec_label_pc_805468e
  %v0_805469a = call i32 @function_8054c11()
  store i32 %v0_805469a, i32* @ebx, align 4
  %v0_80546a1 = call i32 @function_8054b80()
  %v0_80546a6 = load i32, i32* @ebx, align 4
  %v12_80546a6 = icmp eq i32 %v0_80546a6, %v0_80546a1
  %v1_80546a8 = icmp eq i1 %v12_80546a6, false
  br i1 %v1_80546a8, label %dec_label_pc_80546d9, label %dec_label_pc_80546aa

dec_label_pc_80546aa:                             ; preds = %dec_label_pc_805469a
  %v0_80546aa = call i32 @function_8054ba6()
  store i32 %v0_80546aa, i32* @ebx, align 4
  %v0_80546b1 = call i32 @function_8054b5a()
  %v0_80546b6 = load i32, i32* @ebx, align 4
  %v12_80546b6 = icmp eq i32 %v0_80546b6, %v0_80546b1
  %v1_80546b8 = icmp eq i1 %v12_80546b6, false
  br i1 %v1_80546b8, label %dec_label_pc_80546d9, label %dec_label_pc_80546ba.thread

dec_label_pc_80546ba.thread:                      ; preds = %dec_label_pc_80546aa
  br label %dec_label_pc_8054703

dec_label_pc_80546c3:                             ; preds = %dec_label_pc_805468e
  %v15_80546c3 = icmp eq i32 %tmp38, %tmp37
  %v1_80546c7 = icmp eq i1 %v15_80546c3, false
  br i1 %v1_80546c7, label %dec_label_pc_80546d9, label %dec_label_pc_80546c9

dec_label_pc_80546c9:                             ; preds = %dec_label_pc_80546c3
  br label %dec_label_pc_80546d9

dec_label_pc_80546d9:                             ; preds = %dec_label_pc_80546c9, %dec_label_pc_80546c3, %dec_label_pc_80546aa, %dec_label_pc_805469a
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80546e0 = call i32 @function_8054571()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80546ef = call i32 @function_8054571()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80546fe = call i32 @function_8054571()
  br label %dec_label_pc_8054703

dec_label_pc_8054703:                             ; preds = %dec_label_pc_80546ba.thread, %dec_label_pc_80546d9
  store i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32* %esi.global-to-local, align 4
  %v0_8054708 = load i32, i32* @edi, align 4
  %v1_8054708 = inttoptr i32 %v0_8054708 to i32*
  %v2_8054708 = load i32, i32* %v1_8054708, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32* %esi.global-to-local, align 4
  store i32 %v2_8054708, i32* inttoptr (i32 134570116 to i32*), align 4
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8056168.75, align 8
  br i1 icmp ult (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569981), i32 7), label %dec_label_pc_8054734, label %dec_label_pc_8054728

dec_label_pc_8054728:                             ; preds = %dec_label_pc_8054703, %dec_label_pc_8054728
  %v4_8054728 = phi i32 [ %v1_805472f, %dec_label_pc_8054728 ], [ 0, %dec_label_pc_8054703 ]
  %v5_8054728 = mul i32 %v4_8054728, 4
  %v6_8054728 = add i32 %v5_8054728, ptrtoint (i32* @global_var_8056000.73 to i32)
  %v7_8054728 = inttoptr i32 %v6_8054728 to i32*
  %v8_8054728 = load i32, i32* %v7_8054728, align 4
  call void @__pseudo_call(i32 %v8_8054728)
  %v0_805472f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805472f = add i32 %v0_805472f, 1
  store i32 %v1_805472f, i32* %ebx.global-to-local, align 4
  %v1_8054730 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054730 = icmp ult i32 %v1_805472f, %v1_8054730
  br i1 %v7_8054730, label %dec_label_pc_8054728, label %dec_label_pc_8054734

dec_label_pc_8054734:                             ; preds = %dec_label_pc_8054728, %dec_label_pc_8054703
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32 2), i32 0), label %dec_label_pc_805474c, label %dec_label_pc_8054758

dec_label_pc_805474c:                             ; preds = %dec_label_pc_8054734, %dec_label_pc_805474c
  %v4_805474c = phi i32 [ %v1_8054753, %dec_label_pc_805474c ], [ 0, %dec_label_pc_8054734 ]
  store i32 ptrtoint (i32* @global_var_8054753.85 to i32), i32* %stack_var_-164, align 4
  %v5_805474c = mul i32 %v4_805474c, 4
  %v6_805474c = add i32 %v5_805474c, ptrtoint (i32* @global_var_8056000.73 to i32)
  %v7_805474c = inttoptr i32 %v6_805474c to i32*
  %v8_805474c = load i32, i32* %v7_805474c, align 4
  call void @__pseudo_call(i32 %v8_805474c)
  %v0_8054753 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054753 = add i32 %v0_8054753, 1
  store i32 %v1_8054753, i32* %ebx.global-to-local, align 4
  %v1_8054754 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054754 = icmp ult i32 %v1_8054753, %v1_8054754
  br i1 %v7_8054754, label %dec_label_pc_805474c, label %dec_label_pc_8054758

dec_label_pc_8054758:                             ; preds = %dec_label_pc_805474c, %dec_label_pc_8054734
  %v0_8054761 = load i32, i32* %stack_var_-164, align 4
  %v1_8054761 = call i32 @function_8052be9(i32 %v0_8054761)
  %v1_8054766 = inttoptr i32 %v1_8054761 to i32*
  store i32 0, i32* %v1_8054766, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054781 = load i32, i32* @global_var_8056160.81, align 32
  store i32 %v0_8054781, i32* %stack_var_-164, align 4
  %v0_8054787 = load i32, i32* @edi, align 4
  store i32 %v0_8054787, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8054796 = load i32, i32* @eax, align 4
  %v1_8054799 = call i32 @function_80541f9(i32 %v0_8054796)
  %v0_80547a5 = load i32, i32* @ebx, align 4
  %v1_80547a5 = inttoptr i32 %v0_80547a5 to %sigcontext*
  %v2_80547a5 = call i32 @sigreturn(%sigcontext* %v1_80547a5)
  %v0_80547ad = load i32, i32* @ebx, align 4
  %v1_80547ad = inttoptr i32 %v0_80547ad to %sigcontext*
  %v2_80547ad = call i32 @sigreturn(%sigcontext* %v1_80547ad)
  ret i32 %v2_80547ad

; uselistorder directives
  uselistorder i32 %v1_8054753, { 1, 2, 0 }
  uselistorder i32 %v1_805472f, { 1, 2, 0 }
  uselistorder i32 %v2_805466f, { 1, 0 }
  uselistorder i32 %v1_805466c, { 2, 1, 0 }
  uselistorder i32 %v1_805464b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054648, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_80541f9, { 2, 0, 1 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), i32 2), { 1, 3, 2, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056000.73 to i32), i32 -134569984), { 0, 2, 1 }
  uselistorder i32 ()* @function_8054571, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 8, 0, 6, 7, 1, 2, 3, 4, 5, 9 }
  uselistorder i32 120, { 8, 22, 23, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_805474c, { 1, 0 }
  uselistorder label %dec_label_pc_8054728, { 1, 0 }
  uselistorder label %dec_label_pc_8054703, { 1, 0 }
  uselistorder label %dec_label_pc_805468e, { 1, 0 }
  uselistorder label %dec_label_pc_805466c, { 1, 0 }
  uselistorder label %dec_label_pc_8054654, { 1, 0 }
  uselistorder label %dec_label_pc_8054631, { 1, 0 }
}

define i32 @function_80547af(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80547af:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_80547af = load i32, i32* @esi, align 4
  %v0_80547b0 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80547c5 = icmp eq i32* %arg2, null
  br i1 %v1_80547c5, label %dec_label_pc_8054818, label %dec_label_pc_80547c9

dec_label_pc_80547c9:                             ; preds = %dec_label_pc_80547af
  %v2_80547c9 = load i32, i32* %arg2, align 4
  store i32 %v2_80547c9, i32* %stack_var_-148, align 4
  %v1_80547d2 = add i32 %tmp11, 4
  %v3_80547e4 = bitcast i32* %stack_var_-136 to i16*
  %v4_80547e4 = call i32 @function_8054e32(i16* %v3_80547e4, i32 %v1_80547d2, i32 128)
  %v1_80547e9 = add i32 %tmp11, 132
  %v2_8054803 = inttoptr i32 %v1_80547e9 to i8*
  %v3_8054803 = load i8, i8* %v2_8054803, align 1
  %v4_8054803 = and i8 %v3_8054803, 4
  %v5_8054803 = icmp eq i8 %v4_8054803, 0
  %v1_805480a = icmp eq i1 %v5_8054803, false
  br i1 %v1_805480a, label %dec_label_pc_8054818, label %dec_label_pc_805480c

dec_label_pc_805480c:                             ; preds = %dec_label_pc_80547c9
  br label %dec_label_pc_8054818

dec_label_pc_8054818:                             ; preds = %dec_label_pc_805480c, %dec_label_pc_80547c9, %dec_label_pc_80547af
  %v1_805481a = icmp eq i32 %arg3, 0
  br i1 %v1_805481a, label %dec_label_pc_8054822, label %dec_label_pc_805481e

dec_label_pc_805481e:                             ; preds = %dec_label_pc_8054818
  %v2_805481e = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054822

dec_label_pc_8054822:                             ; preds = %dec_label_pc_8054818, %dec_label_pc_805481e
  %v0_8054831 = phi i32 [ 0, %dec_label_pc_8054818 ], [ %v2_805481e, %dec_label_pc_805481e ]
  br i1 %v1_80547c5, label %dec_label_pc_805482f, label %dec_label_pc_8054828

dec_label_pc_8054828:                             ; preds = %dec_label_pc_8054822
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805482f

dec_label_pc_805482f:                             ; preds = %dec_label_pc_8054822, %dec_label_pc_8054828
  %v0_8054832 = phi %sigaction* [ null, %dec_label_pc_8054822 ], [ %phitmp, %dec_label_pc_8054828 ]
  %v5_805483a = call i32 @function_80548d5(i32 %arg1, %sigaction* %v0_8054832, i32 %v0_8054831, i32 8)
  store i32 %v5_805483a, i32* %ebx.global-to-local, align 4
  br i1 %v1_805481a, label %dec_label_pc_805487d, label %dec_label_pc_8054848

dec_label_pc_8054848:                             ; preds = %dec_label_pc_805482f
  %v2_8054848 = icmp slt i32 %v5_805483a, 0
  br i1 %v2_8054848, label %dec_label_pc_805487d, label %dec_label_pc_805484c

dec_label_pc_805484c:                             ; preds = %dec_label_pc_8054848
  %v3_805484c = load i32, i32* %stack_var_-288, align 4
  %v2_8054850 = inttoptr i32 %arg3 to i32*
  store i32 %v3_805484c, i32* %v2_8054850, align 4
  %v2_8054858 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805485d = add i32 %arg3, 4
  %v3_8054861 = inttoptr i32 %v1_805485d to i16*
  %v4_8054861 = call i32 @function_8054e32(i16* %v3_8054861, i32 %v2_8054858, i32 128)
  %v2_805486a = add i32 %arg3, 132
  %v3_805486a = inttoptr i32 %v2_805486a to i32*
  %v2_8054877 = add i32 %arg3, 136
  %v3_8054877 = inttoptr i32 %v2_8054877 to i32*
  %v0_805487d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805487d

dec_label_pc_805487d:                             ; preds = %dec_label_pc_8054848, %dec_label_pc_805482f, %dec_label_pc_805484c
  %v0_805487d = phi i32 [ %v5_805483a, %dec_label_pc_8054848 ], [ %v5_805483a, %dec_label_pc_805482f ], [ %v0_805487d.pre, %dec_label_pc_805484c ]
  store i32 %v0_80547b0, i32* @ebx, align 4
  store i32 %v0_80547af, i32* @esi, align 4
  ret i32 %v0_805487d

; uselistorder directives
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 1, 2, 3, 4, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805487d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805482f, { 1, 0 }
  uselistorder label %dec_label_pc_8054822, { 1, 0 }
}

define i32 @function_8054888(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054888:
  %stack_var_4 = alloca i32, align 4
  %v0_8054888 = load i32, i32* @ebx, align 4
  store i32 %v0_8054888, i32* @edx, align 4
  %v2_8054893 = load i32, i32* @ecx, align 4
  %v4_8054893 = load i32, i32* @esi, align 4
  %v5_8054893 = load i32, i32* @edi, align 4
  %v6_8054893 = load i32, i32* @ebp, align 4
  %v7_8054893 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8054893, i32 %v0_8054888, i32 %v4_8054893, i32 %v5_8054893, i32 %v6_8054893)
  %v8_8054893 = ptrtoint i32* %v7_8054893 to i32
  store i32 %v0_8054888, i32* @ebx, align 4
  %v3_805489c = icmp ugt i32* %v7_8054893, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_805489c, i32 134565685)
  ret i32 %v8_8054893

; uselistorder directives
  uselistorder i32* @ebp, { 5, 47, 48, 49, 50, 51, 52, 53, 54, 8, 9, 10, 11, 55, 56, 57, 58, 59, 60, 61, 62, 67, 63, 64, 65, 66, 4, 68, 23, 2, 34, 35, 24, 42, 28, 6, 27, 29, 31, 1, 36, 7, 0, 41, 25, 26, 30, 32, 33, 37, 38, 39, 40, 43, 44, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 3, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 87, 88, 90, 91, 92, 93, 94, 45, 46 }
  uselistorder i32* @ecx, { 5, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 1, 38, 14, 13, 39, 40, 41, 2, 42, 43, 44, 3, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 8, 9, 4, 10, 11, 7, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 6, 82, 83, 84, 85 }
}

define i32 @function_80548a3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80548a3:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80548a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80548a3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80548b6 = call i32 @int80_syscall(i32 102)
  store i32 %v1_80548b6, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80548b6, -4095
  br i1 %tmp9, label %dec_label_pc_80548cf, label %dec_label_pc_80548c3

dec_label_pc_80548c3:                             ; preds = %dec_label_pc_80548a3
  %v1_80548c3 = call i32 @function_8052be9(i32 %v0_80548a3)
  %v0_80548c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80548c8 = sub i32 0, %v0_80548c8
  %v2_80548ca = inttoptr i32 %v1_80548c3 to i32*
  store i32 %v1_80548c8, i32* %v2_80548ca, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80548d3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80548cf

dec_label_pc_80548cf:                             ; preds = %dec_label_pc_80548a3, %dec_label_pc_80548c3
  %v2_80548d3 = phi i32 [ %v0_80548a3, %dec_label_pc_80548a3 ], [ %v2_80548d3.pre, %dec_label_pc_80548c3 ]
  %v0_80548cf = phi i32 [ %v1_80548b6, %dec_label_pc_80548a3 ], [ -1, %dec_label_pc_80548c3 ]
  %v2_80548d1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80548d1, i32* @edx, align 4
  store i32 %v2_80548d3, i32* @ebx, align 4
  ret i32 %v0_80548cf

; uselistorder directives
  uselistorder i32 %v1_80548b6, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80548cf, { 1, 0 }
}

define i32 @function_80548d5(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80548d5:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_80548d6 = load i32, i32* @esi, align 4
  store i32 %v0_80548d6, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80548ea = load i32, i32* @ebx, align 4
  %v7_80548f2 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80548f2, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_80548f2, -4095
  br i1 %tmp14, label %dec_label_pc_805490a, label %dec_label_pc_80548fe

dec_label_pc_80548fe:                             ; preds = %dec_label_pc_80548d5
  %v1_80548fe = call i32 @function_8052be9(i32 %v0_80548ea)
  %v0_8054903 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054903 = sub i32 0, %v0_8054903
  %v2_8054905 = inttoptr i32 %v1_80548fe to i32*
  store i32 %v1_8054903, i32* %v2_8054905, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805490d.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805490a

dec_label_pc_805490a:                             ; preds = %dec_label_pc_80548d5, %dec_label_pc_80548fe
  %v2_805490d = phi i32 [ %v0_80548d6, %dec_label_pc_80548d5 ], [ %v2_805490d.pre, %dec_label_pc_80548fe ]
  %v0_805490a = phi i32 [ %v7_80548f2, %dec_label_pc_80548d5 ], [ -1, %dec_label_pc_80548fe ]
  store i32 %v2_805490d, i32* @esi, align 4
  ret i32 %v0_805490a

; uselistorder directives
  uselistorder i32 %v7_80548f2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805490a, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_8054910(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_8054910:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8054938(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054938:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054938 = load i32, i32* @ebx, align 4
  store i32 %v0_8054938, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805494b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805494b, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_805494b, -4095
  br i1 %tmp10, label %dec_label_pc_8054964, label %dec_label_pc_8054958

dec_label_pc_8054958:                             ; preds = %dec_label_pc_8054938
  %v1_8054958 = call i32 @function_8052be9(i32 %v0_8054938)
  %v0_805495d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805495d = sub i32 0, %v0_805495d
  %v2_805495f = inttoptr i32 %v1_8054958 to i32*
  store i32 %v1_805495d, i32* %v2_805495f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054968.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054964

dec_label_pc_8054964:                             ; preds = %dec_label_pc_8054938, %dec_label_pc_8054958
  %v2_8054968 = phi i32 [ %v0_8054938, %dec_label_pc_8054938 ], [ %v2_8054968.pre, %dec_label_pc_8054958 ]
  %v0_8054964 = phi i32 [ %v4_805494b, %dec_label_pc_8054938 ], [ -1, %dec_label_pc_8054958 ]
  %v2_8054966 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054966, i32* @edx, align 4
  store i32 %v2_8054968, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054964

; uselistorder directives
  uselistorder i32 %v4_805494b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054964, { 1, 0 }
}

define i32 @function_805496a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805496a:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805496a = load i32, i32* @ebx, align 4
  store i32 %v0_805496a, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_805497d = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_805497d, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_805497d, -4095
  br i1 %tmp13, label %dec_label_pc_8054998, label %dec_label_pc_805498a

dec_label_pc_805498a:                             ; preds = %dec_label_pc_805496a
  %v1_805498a = call i32 @function_8052be9(i32 %v0_805496a)
  %v0_805498f = load i32, i32* @ebx, align 4
  %v1_805498f = sub i32 0, %v0_805498f
  %v2_8054991 = inttoptr i32 %v1_805498a to i32*
  store i32 %v1_805498f, i32* %v2_8054991, align 4
  %v2_80549b0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80549ab

dec_label_pc_8054998:                             ; preds = %dec_label_pc_805496a
  %v1_8054998 = icmp eq i32 %v4_805497d, 0
  %v1_805499a = icmp eq i1 %v1_8054998, false
  br i1 %v1_805499a, label %dec_label_pc_80549ab, label %dec_label_pc_805499c

dec_label_pc_805499c:                             ; preds = %dec_label_pc_8054998
  %v4_80549a3 = bitcast i32* %stack_var_-68 to i16*
  %v5_80549a3 = call i32 @function_8054db5(i16* %v4_80549a3, i32 %arg2, i32 %v4_805497d, i32 %v4_805497d)
  %v0_80549ab.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80549ab

dec_label_pc_80549ab:                             ; preds = %dec_label_pc_8054998, %dec_label_pc_805498a, %dec_label_pc_805499c
  %v2_80549b0 = phi i32 [ %v0_805496a, %dec_label_pc_8054998 ], [ %v2_80549b0.pre, %dec_label_pc_805498a ], [ %v0_805496a, %dec_label_pc_805499c ]
  %v0_80549ab = phi i32 [ %v4_805497d, %dec_label_pc_8054998 ], [ -1, %dec_label_pc_805498a ], [ %v0_80549ab.pre, %dec_label_pc_805499c ]
  store i32 %v2_80549b0, i32* @ebx, align 4
  ret i32 %v0_80549ab

; uselistorder directives
  uselistorder i32 %v4_805497d, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_80549ab, { 2, 0, 1 }
}

define i32 @function_80549b2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80549b2:
  %eax.global-to-local = alloca i32, align 4
  %v0_80549b2 = load i32, i32* @edi, align 4
  %v0_80549b3 = load i32, i32* @esi, align 4
  %v0_80549b4 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_80549b9 = load i32, i32* @edx, align 4
  %v7_80549c3 = inttoptr i32 %arg2 to i32*
  %v8_80549c3 = call i32 @function_8054a21(i32 %arg1, i32* %v7_80549c3, i32 %arg3, i32 %v0_80549b9, i32 %v0_80549b4, i32 %v0_80549b3, i32 %v0_80549b2)
  store i32 %v8_80549c3, i32* %eax.global-to-local, align 4
  store i32 %v8_80549c3, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_80549c3, 1
  br i1 %tmp24, label %dec_label_pc_8054a1b, label %dec_label_pc_80549d1

dec_label_pc_80549d1:                             ; preds = %dec_label_pc_80549b2
  %v0_80549d1 = load i32, i32* @ebx, align 4
  %v2_80549d1 = add i32 %v0_80549d1, %v8_80549c3
  store i32 %v2_80549d1, i32* @edi, align 4
  %v7_8054a174 = icmp ult i32 %v0_80549d1, %v2_80549d1
  br i1 %v7_8054a174, label %dec_label_pc_80549d6, label %dec_label_pc_8054a1b

dec_label_pc_80549d6:                             ; preds = %dec_label_pc_80549d1, %dec_label_pc_80549d6
  %v0_80549d6 = phi i32 [ %v2_8054a15, %dec_label_pc_80549d6 ], [ %v0_80549d1, %dec_label_pc_80549d1 ]
  %v1_80549d6 = add i32 %v0_80549d6, 8
  %v2_80549d6 = inttoptr i32 %v1_80549d6 to i32*
  %v3_80549d6 = load i32, i32* %v2_80549d6, align 4
  store i32 %v3_80549d6, i32* %eax.global-to-local, align 4
  %v2_80549d9 = add i32 %v0_80549d6, 4
  %v3_80549d9 = inttoptr i32 %v2_80549d9 to i32*
  store i32 %v3_80549d6, i32* %v3_80549d9, align 4
  %v0_80549dc = load i32, i32* @ebx, align 4
  %v1_80549dc = add i32 %v0_80549dc, 16
  %v2_80549dc = inttoptr i32 %v1_80549dc to i32*
  %v3_80549dc = load i32, i32* %v2_80549dc, align 4
  store i32 %v3_80549dc, i32* %eax.global-to-local, align 4
  %v1_80549df = trunc i32 %v3_80549dc to i16
  %v3_80549df = add i32 %v0_80549dc, 8
  %v4_80549df = inttoptr i32 %v3_80549df to i16*
  store i16 %v1_80549df, i16* %v4_80549df, align 2
  %v0_80549e3 = load i32, i32* @ebx, align 4
  %v1_80549e3 = add i32 %v0_80549e3, 18
  %v2_80549e3 = inttoptr i32 %v1_80549e3 to i8*
  %v3_80549e3 = load i8, i8* %v2_80549e3, align 1
  %v4_80549e3 = zext i8 %v3_80549e3 to i32
  %v5_80549e3 = load i32, i32* %eax.global-to-local, align 4
  %v6_80549e3 = and i32 %v5_80549e3, -256
  %v7_80549e3 = or i32 %v6_80549e3, %v4_80549e3
  store i32 %v7_80549e3, i32* %eax.global-to-local, align 4
  %v3_80549e6 = add i32 %v0_80549e3, 10
  %v4_80549e6 = inttoptr i32 %v3_80549e6 to i8*
  store i8 %v3_80549e3, i8* %v4_80549e6, align 1
  %v0_80549ea = load i32, i32* @ebx, align 4
  %v1_80549ea = add i32 %v0_80549ea, 8
  %v2_80549ea = inttoptr i32 %v1_80549ea to i16*
  %v3_80549ea = load i16, i16* %v2_80549ea, align 2
  %v4_80549ea = zext i16 %v3_80549ea to i32
  %v1_80549ee = add nsw i32 %v4_80549ea, -19
  %v1_80549f2 = add i32 %v0_80549ea, 19
  %v1_80549f6 = add i32 %v0_80549ea, 11
  store i32 %v1_80549f6, i32* %eax.global-to-local, align 4
  %v3_80549fa = inttoptr i32 %v1_80549f6 to i8*
  %v4_80549fa = call i32 @function_8052c13(i8* %v3_80549fa, i32 %v1_80549f2, i32 %v1_80549ee)
  store i32 %v4_80549fa, i32* %eax.global-to-local, align 4
  %v0_8054a02 = load i32, i32* @ebx, align 4
  %v1_8054a02 = add i32 %v0_8054a02, 8
  %v2_8054a02 = inttoptr i32 %v1_8054a02 to i16*
  %v3_8054a02 = load i16, i16* %v2_8054a02, align 2
  %v4_8054a02 = zext i16 %v3_8054a02 to i32
  store i32 %v4_8054a02, i32* %eax.global-to-local, align 4
  %v3_8054a09 = inttoptr i32 %v0_8054a02 to i8*
  %v4_8054a09 = call i32 @function_8052c13(i8* %v3_8054a09, i32 %v0_8054a02, i32 %v4_8054a02)
  store i32 %v4_8054a09, i32* %eax.global-to-local, align 4
  %v0_8054a0e = load i32, i32* @ebx, align 4
  %v1_8054a0e = add i32 %v0_8054a0e, 8
  %v2_8054a0e = inttoptr i32 %v1_8054a0e to i16*
  %v3_8054a0e = load i16, i16* %v2_8054a0e, align 2
  %v4_8054a0e = zext i16 %v3_8054a0e to i32
  store i32 %v4_8054a0e, i32* %eax.global-to-local, align 4
  %v2_8054a15 = add i32 %v4_8054a0e, %v0_8054a0e
  store i32 %v2_8054a15, i32* @ebx, align 4
  %v1_8054a17 = load i32, i32* @edi, align 4
  %v7_8054a17 = icmp ult i32 %v2_8054a15, %v1_8054a17
  br i1 %v7_8054a17, label %dec_label_pc_80549d6, label %dec_label_pc_8054a17.dec_label_pc_8054a1b.loopexit_crit_edge

dec_label_pc_8054a17.dec_label_pc_8054a1b.loopexit_crit_edge: ; preds = %dec_label_pc_80549d6
  %v0_8054a1b.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054a1b

dec_label_pc_8054a1b:                             ; preds = %dec_label_pc_80549d1, %dec_label_pc_8054a17.dec_label_pc_8054a1b.loopexit_crit_edge, %dec_label_pc_80549b2
  %v0_8054a1b = phi i32 [ %v8_80549c3, %dec_label_pc_80549b2 ], [ %v0_8054a1b.pre.pre, %dec_label_pc_8054a17.dec_label_pc_8054a1b.loopexit_crit_edge ], [ %v8_80549c3, %dec_label_pc_80549d1 ]
  store i32 %v0_8054a1b, i32* %eax.global-to-local, align 4
  store i32 %v0_80549b3, i32* @esi, align 4
  store i32 %v0_80549b2, i32* @edi, align 4
  ret i32 %v0_8054a1b

; uselistorder directives
  uselistorder i32 %v0_8054a1b, { 1, 0 }
  uselistorder i32 %v2_8054a15, { 1, 2, 0 }
  uselistorder i32 %v0_8054a02, { 1, 0, 2 }
  uselistorder i32 %v0_80549ea, { 1, 0, 2 }
  uselistorder i32 %v0_80549d6, { 1, 0 }
  uselistorder i32 %v0_80549d1, { 0, 2, 1 }
  uselistorder i32 %v8_80549c3, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_8052c13, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 11, { 6, 5, 7, 8, 4, 0, 1, 2, 3, 9, 10 }
  uselistorder label %dec_label_pc_8054a1b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80549d6, { 1, 0 }
}

define i32 @function_8054a21(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8054a21:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_8054a24 = load i32, i32* @edi, align 4
  %v0_8054a26 = load i32, i32* @ebx, align 4
  %v15_8054a27 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8054a30 = add i32 %arg3, 30
  %v1_8054a36 = and i32 %v1_8054a30, -16
  %v2_8054a39 = sub i32 %v15_8054a27, %v1_8054a36
  %v1_8054a3b = add i32 %v2_8054a39, 15
  %v1_8054a3f = and i32 %v1_8054a3b, -16
  %v1_8054a45 = inttoptr i32 %v1_8054a3f to %linux_dirent64*
  store i32 %v1_8054a3f, i32* %ecx.global-to-local, align 4
  %v2_8054a47 = add i32 %v2_8054a39, -4
  %v3_8054a47 = inttoptr i32 %v2_8054a47 to i32*
  store i32 %v0_8054a26, i32* %v3_8054a47, align 4
  %v0_8054a48 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_8054a4f = call i32 @getdents64(i32 %v0_8054a48, %linux_dirent64* %v1_8054a45, i32 %arg3)
  store i32 %v5_8054a4f, i32* %eax.global-to-local, align 4
  %v0_8054a51 = load i32, i32* @esp, align 4
  %v3_8054a51 = add i32 %v0_8054a51, 4
  %tmp41 = icmp ult i32 %v5_8054a4f, -4095
  br i1 %tmp41, label %dec_label_pc_8054a6b, label %dec_label_pc_8054a5c

dec_label_pc_8054a5c:                             ; preds = %dec_label_pc_8054a21
  %v1_8054a5c = call i32 @function_8052be9(i32 %v5_8054a4f)
  store i32 %v1_8054a5c, i32* %eax.global-to-local, align 4
  %v4_8054a61 = sub i32 0, %v5_8054a4f
  %v2_8054a67 = inttoptr i32 %v1_8054a5c to i32*
  store i32 %v4_8054a61, i32* %v2_8054a67, align 4
  br label %dec_label_pc_8054b2d

dec_label_pc_8054a6b:                             ; preds = %dec_label_pc_8054a21
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_8054a3f, i32* @ebx, align 4
  %v5_8054b1d = add i32 %v5_8054a4f, %v1_8054a3f
  store i32 %v5_8054b1d, i32* %eax.global-to-local, align 4
  %v7_8054b2030 = icmp ult i32 %v1_8054a3f, %v5_8054b1d
  br i1 %v7_8054b2030, label %dec_label_pc_8054a8a.lr.ph, label %dec_label_pc_8054b28

dec_label_pc_8054a8a.lr.ph:                       ; preds = %dec_label_pc_8054a6b
  %v5_8054a97 = add i32 %tmp14, %arg3
  br label %dec_label_pc_8054a8a

dec_label_pc_8054a8a:                             ; preds = %dec_label_pc_8054a8a.lr.ph, %dec_label_pc_8054acc
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_8054a8a.lr.ph ], [ %v3_8054acf, %dec_label_pc_8054acc ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_8054a8a.lr.ph ], [ %v3_8054acc, %dec_label_pc_8054acc ]
  %v0_8054ad834 = phi i32 [ %v1_8054a3f, %dec_label_pc_8054a8a.lr.ph ], [ %v2_8054b15, %dec_label_pc_8054acc ]
  %v1_8054add33 = phi i32 [ %tmp14, %dec_label_pc_8054a8a.lr.ph ], [ %v2_8054a9a, %dec_label_pc_8054acc ]
  %v0_8054aa432 = phi i32 [ %v3_8054a51, %dec_label_pc_8054a8a.lr.ph ], [ %v1_8054b17, %dec_label_pc_8054acc ]
  %v1_8054a8a = add i32 %v0_8054ad834, 16
  %v2_8054a8a = inttoptr i32 %v1_8054a8a to i16*
  %v3_8054a8a = load i16, i16* %v2_8054a8a, align 2
  %v4_8054a8a = zext i16 %v3_8054a8a to i32
  %v1_8054a8e = add nuw nsw i32 %v4_8054a8a, 3
  %v1_8054a94 = and i32 %v1_8054a8e, 131068
  store i32 %v1_8054a94, i32* %ecx.global-to-local, align 4
  store i32 %v5_8054a97, i32* %eax.global-to-local, align 4
  %v2_8054a9a = add i32 %v1_8054a94, %v1_8054add33
  %tmp42 = icmp ugt i32 %v2_8054a9a, %v5_8054a97
  br i1 %tmp42, label %dec_label_pc_8054aa4, label %dec_label_pc_8054acc

dec_label_pc_8054aa4:                             ; preds = %dec_label_pc_8054a8a
  %v1_8054aa4 = add i32 %v0_8054aa432, -4
  %v2_8054aa4 = inttoptr i32 %v1_8054aa4 to i32*
  store i32 0, i32* %v2_8054aa4, align 4
  %v5_8054aa6 = add i32 %v0_8054aa432, -8
  %v6_8054aa6 = inttoptr i32 %v5_8054aa6 to i32*
  store i32 %stack_var_-32.036, i32* %v6_8054aa6, align 4
  %v5_8054aa9 = add i32 %v0_8054aa432, -12
  %v6_8054aa9 = inttoptr i32 %v5_8054aa9 to i32*
  store i32 %stack_var_-36.035, i32* %v6_8054aa9, align 4
  %v5_8054aac = add i32 %v0_8054aa432, -16
  %v6_8054aac = inttoptr i32 %v5_8054aac to i32*
  store i32 %arg1, i32* %v6_8054aac, align 4
  %v1_8054aaf = call i32 @function_8054c37(i32 %v2_8054a9a)
  store i32 %v1_8054aaf, i32* %eax.global-to-local, align 4
  %v0_8054ab7 = load i32, i32* @esi, align 4
  %v15_8054ab7 = icmp eq i32 %v0_8054ab7, %tmp14
  %v1_8054aba = icmp eq i1 %v15_8054ab7, false
  br i1 %v1_8054aba, label %dec_label_pc_8054b28, label %dec_label_pc_8054abc

dec_label_pc_8054abc:                             ; preds = %dec_label_pc_8054aa4
  %v1_8054abc = call i32 @function_8052be9(i32 %v2_8054a9a)
  store i32 %v1_8054abc, i32* %eax.global-to-local, align 4
  %v1_8054ac1 = inttoptr i32 %v1_8054abc to i32*
  store i32 22, i32* %v1_8054ac1, align 4
  br label %dec_label_pc_8054b2d

dec_label_pc_8054acc:                             ; preds = %dec_label_pc_8054a8a
  %v1_8054acc = add i32 %v0_8054ad834, 8
  %v2_8054acc = inttoptr i32 %v1_8054acc to i32*
  %v3_8054acc = load i32, i32* %v2_8054acc, align 4
  store i32 %v3_8054acc, i32* %eax.global-to-local, align 4
  %v1_8054acf = add i32 %v0_8054ad834, 12
  %v2_8054acf = inttoptr i32 %v1_8054acf to i32*
  %v3_8054acf = load i32, i32* %v2_8054acf, align 4
  %v1_8054ad8 = inttoptr i32 %v0_8054ad834 to i32*
  %v2_8054ad8 = load i32, i32* %v1_8054ad8, align 4
  store i32 %v2_8054ad8, i32* %eax.global-to-local, align 4
  %v1_8054ada = add i32 %v0_8054ad834, 4
  %v2_8054ada = inttoptr i32 %v1_8054ada to i32*
  %v3_8054ada = load i32, i32* %v2_8054ada, align 4
  %v2_8054add = add i32 %v1_8054add33, 4
  %v3_8054add = inttoptr i32 %v2_8054add to i32*
  store i32 %v3_8054ada, i32* %v3_8054add, align 4
  %v0_8054ae0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ae0 = load i32, i32* @esi, align 4
  %v2_8054ae0 = inttoptr i32 %v1_8054ae0 to i32*
  store i32 %v0_8054ae0, i32* %v2_8054ae0, align 4
  %v0_8054ae2 = load i32, i32* @ebx, align 4
  %v1_8054ae2 = add i32 %v0_8054ae2, 8
  %v2_8054ae2 = inttoptr i32 %v1_8054ae2 to i32*
  %v3_8054ae2 = load i32, i32* %v2_8054ae2, align 4
  store i32 %v3_8054ae2, i32* %eax.global-to-local, align 4
  %v1_8054ae5 = add i32 %v0_8054ae2, 12
  %v2_8054ae5 = inttoptr i32 %v1_8054ae5 to i32*
  %v3_8054ae5 = load i32, i32* %v2_8054ae5, align 4
  %v1_8054ae8 = load i32, i32* @esi, align 4
  %v2_8054ae8 = add i32 %v1_8054ae8, 12
  %v3_8054ae8 = inttoptr i32 %v2_8054ae8 to i32*
  store i32 %v3_8054ae5, i32* %v3_8054ae8, align 4
  %v0_8054aeb = load i32, i32* %eax.global-to-local, align 4
  %v1_8054aeb = load i32, i32* @esi, align 4
  %v2_8054aeb = add i32 %v1_8054aeb, 8
  %v3_8054aeb = inttoptr i32 %v2_8054aeb to i32*
  store i32 %v0_8054aeb, i32* %v3_8054aeb, align 4
  %v0_8054aee = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054aee = trunc i32 %v0_8054aee to i16
  %v2_8054aee = load i32, i32* @esi, align 4
  %v3_8054aee = add i32 %v2_8054aee, 16
  %v4_8054aee = inttoptr i32 %v3_8054aee to i16*
  store i16 %v1_8054aee, i16* %v4_8054aee, align 2
  %v0_8054af2 = load i32, i32* @ebx, align 4
  %v1_8054af2 = add i32 %v0_8054af2, 18
  %v2_8054af2 = inttoptr i32 %v1_8054af2 to i8*
  %v3_8054af2 = load i8, i8* %v2_8054af2, align 1
  %v4_8054af2 = zext i8 %v3_8054af2 to i32
  %v5_8054af2 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054af2 = and i32 %v5_8054af2, -256
  %v7_8054af2 = or i32 %v6_8054af2, %v4_8054af2
  store i32 %v7_8054af2, i32* %eax.global-to-local, align 4
  %v2_8054af5 = load i32, i32* @esi, align 4
  %v3_8054af5 = add i32 %v2_8054af5, 18
  %v4_8054af5 = inttoptr i32 %v3_8054af5 to i8*
  store i8 %v3_8054af2, i8* %v4_8054af5, align 1
  %v0_8054af8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054af8 = load i32, i32* @esp, align 4
  %v2_8054af8 = add i32 %v1_8054af8, -4
  %v3_8054af8 = inttoptr i32 %v2_8054af8 to i32*
  store i32 %v0_8054af8, i32* %v3_8054af8, align 4
  %v0_8054af9 = load i32, i32* @ebx, align 4
  %v1_8054af9 = add i32 %v0_8054af9, 16
  %v2_8054af9 = inttoptr i32 %v1_8054af9 to i16*
  %v3_8054af9 = load i16, i16* %v2_8054af9, align 2
  %v4_8054af9 = zext i16 %v3_8054af9 to i32
  %v1_8054afd = add nsw i32 %v4_8054af9, -19
  %v2_8054b00 = add i32 %v1_8054af8, -8
  %v3_8054b00 = inttoptr i32 %v2_8054b00 to i32*
  store i32 %v1_8054afd, i32* %v3_8054b00, align 4
  %v0_8054b01 = load i32, i32* @ebx, align 4
  %v1_8054b01 = add i32 %v0_8054b01, 19
  %v2_8054b04 = add i32 %v1_8054af8, -12
  %v3_8054b04 = inttoptr i32 %v2_8054b04 to i32*
  store i32 %v1_8054b01, i32* %v3_8054b04, align 4
  %v0_8054b05 = load i32, i32* @esi, align 4
  %v1_8054b05 = add i32 %v0_8054b05, 19
  store i32 %v1_8054b05, i32* %eax.global-to-local, align 4
  %v2_8054b08 = add i32 %v1_8054af8, -16
  %v3_8054b08 = inttoptr i32 %v2_8054b08 to i32*
  store i32 %v1_8054b05, i32* %v3_8054b08, align 4
  %v3_8054b09 = inttoptr i32 %v2_8054a9a to i16*
  %v4_8054b09 = call i32 @function_8054e32(i16* %v3_8054b09, i32 %v3_8054acc, i32 %v3_8054acf)
  store i32 %v4_8054b09, i32* %eax.global-to-local, align 4
  %v0_8054b0e = load i32, i32* @ebx, align 4
  %v1_8054b0e = add i32 %v0_8054b0e, 16
  %v2_8054b0e = inttoptr i32 %v1_8054b0e to i16*
  %v3_8054b0e = load i16, i16* %v2_8054b0e, align 2
  %v4_8054b0e = zext i16 %v3_8054b0e to i32
  store i32 %v2_8054a9a, i32* @esi, align 4
  %v2_8054b15 = add i32 %v4_8054b0e, %v0_8054b0e
  store i32 %v2_8054b15, i32* @ebx, align 4
  %v0_8054b17 = load i32, i32* @esp, align 4
  %v1_8054b17 = add i32 %v0_8054b17, 16
  store i32 %v5_8054b1d, i32* %eax.global-to-local, align 4
  %v7_8054b20 = icmp ult i32 %v2_8054b15, %v5_8054b1d
  br i1 %v7_8054b20, label %dec_label_pc_8054a8a, label %dec_label_pc_8054b28

dec_label_pc_8054b28:                             ; preds = %dec_label_pc_8054a6b, %dec_label_pc_8054acc, %dec_label_pc_8054aa4
  %v0_8054b28 = phi i32 [ %v0_8054ab7, %dec_label_pc_8054aa4 ], [ %tmp14, %dec_label_pc_8054a6b ], [ %v2_8054a9a, %dec_label_pc_8054acc ]
  store i32 %v0_8054b28, i32* %eax.global-to-local, align 4
  %v5_8054b2a = sub i32 %v0_8054b28, %tmp14
  br label %dec_label_pc_8054b2d

dec_label_pc_8054b2d:                             ; preds = %dec_label_pc_8054abc, %dec_label_pc_8054a5c, %dec_label_pc_8054b28
  %storemerge = phi i32 [ %v5_8054b2a, %dec_label_pc_8054b28 ], [ -1, %dec_label_pc_8054a5c ], [ -1, %dec_label_pc_8054abc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8054a26, i32* @ebx, align 4
  store i32 %v0_8054a24, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8054b28, { 1, 0 }
  uselistorder i32 %v2_8054b15, { 0, 2, 1 }
  uselistorder i32 %v3_8054acf, { 1, 0 }
  uselistorder i32 %v3_8054acc, { 1, 2, 0 }
  uselistorder i32 %v2_8054a9a, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_8054aa432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8054ad834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_8054b1d, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8054a4f, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 17, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 18, 1, 19 }
  uselistorder i32 (i16*, i32, i32)* @function_8054e32, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 19, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 18, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 22, { 6, 12, 3, 4, 5, 13, 9, 10, 11, 7, 8, 0, 1, 2 }
  uselistorder i32 -12, { 17, 37, 90, 91, 21, 22, 50, 51, 52, 53, 39, 18, 45, 48, 49, 46, 43, 20, 41, 19, 38, 47, 23, 54, 55, 44, 42, 40, 24, 56, 57, 25, 26, 58, 59, 36, 27, 32, 29, 28, 63, 64, 0, 65, 1, 2, 83, 78, 79, 80, 33, 34, 77, 35, 81, 82, 66, 3, 4, 30, 31, 5, 67, 68, 6, 7, 69, 8, 70, 9, 10, 71, 11, 72, 12, 13, 73, 14, 74, 15, 75, 76, 60, 61, 62, 84, 85, 86, 87, 88, 16, 89 }
  uselistorder i32 -8, { 0, 8, 77, 73, 75, 74, 76, 78, 79, 22, 23, 24, 25, 26, 27, 10, 11, 17, 20, 21, 18, 15, 2, 13, 1, 9, 19, 28, 29, 30, 16, 14, 12, 3, 31, 32, 4, 33, 34, 35, 70, 5, 55, 42, 6, 39, 40, 41, 65, 59, 60, 61, 56, 57, 58, 62, 63, 64, 43, 44, 7, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 36, 37, 38, 66, 67, 68, 69, 71, 72 }
  uselistorder i32* @esp, { 37, 38, 39, 5, 6, 7, 8, 9, 206, 207, 0, 50, 51, 52, 53, 54, 55, 56, 57, 12, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 97, 98, 99, 100, 101, 102, 10, 149, 14, 151, 152, 153, 132, 133, 154, 155, 156, 157, 158, 120, 121, 122, 123, 124, 40, 41, 42, 43, 44, 115, 116, 117, 118, 119, 125, 126, 128, 129, 160, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 45, 46, 47, 48, 49, 159, 104, 105, 106, 107, 108, 109, 110, 103, 111, 112, 113, 114, 127, 130, 131, 146, 147, 148, 161, 162, 163, 13, 189, 188, 164, 165, 166, 167, 168, 169, 150, 170, 171, 172, 173, 174, 175, 184, 185, 186, 176, 177, 178, 179, 180, 181, 182, 183, 11, 187, 1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 2, 3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 16, 208, 209, 210, 211, 202, 203, 204, 205, 21, 212, 213, 214, 215, 20, 220, 221, 222, 223, 31, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 216, 217, 218, 219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 22, 249, 250, 251, 32, 252, 253, 254, 255, 256, 257, 258, 260, 259, 4, 261, 262, 263, 264, 265, 266, 267, 268, 19, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 30, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 15, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 24, 23, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 25, 332, 333, 334, 335, 336, 337, 338, 26, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 27, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 28, 359, 360, 29, 361, 362, 363, 364, 365, 366, 367, 368, 369, 18, 33, 370, 371, 372, 373, 374, 375, 376, 34, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 35, 476, 477, 478, 479, 480, 481, 482, 483, 36, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 17, 501, 502, 503 }
  uselistorder i32 15, { 2, 1, 3, 0 }
  uselistorder i32 -16, { 14, 46, 126, 127, 19, 20, 66, 67, 68, 69, 47, 48, 51, 15, 56, 57, 62, 63, 64, 65, 58, 59, 54, 18, 52, 17, 49, 50, 60, 61, 21, 70, 71, 72, 73, 55, 53, 16, 22, 23, 74, 75, 24, 25, 77, 76, 78, 79, 80, 81, 123, 84, 83, 45, 82, 2, 94, 3, 27, 38, 110, 28, 95, 33, 31, 97, 32, 1, 26, 93, 29, 96, 30, 4, 12, 43, 44, 112, 11, 113, 114, 39, 40, 111, 41, 115, 42, 98, 5, 99, 34, 100, 35, 101, 6, 102, 7, 103, 104, 8, 105, 106, 9, 107, 108, 36, 109, 10, 37, 116, 117, 85, 86, 87, 88, 89, 90, 91, 92, 118, 119, 120, 121, 128, 0, 122, 13, 124, 125 }
  uselistorder i32 30, { 5, 4, 2, 1, 6, 3, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054b2d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054b28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054a8a, { 1, 0 }
}

define i32 @function_8054b35() local_unnamed_addr {
dec_label_pc_8054b35:
  %stack_var_-8 = alloca i32, align 4
  %v2_8054b38 = ptrtoint i32* %stack_var_-8 to i32
  %v2_8054b3f = call i32 @function_8054bdf(i32 7, i32 %v2_8054b38)
  store i32 256, i32* @edx, align 4
  %v2_8054b4c = icmp slt i32 %v2_8054b3f, 0
  br i1 %v2_8054b4c, label %dec_label_pc_8054b54, label %dec_label_pc_8054b50

dec_label_pc_8054b50:                             ; preds = %dec_label_pc_8054b35
  %v3_8054b50 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8054b50, i32* @edx, align 4
  br label %dec_label_pc_8054b54

dec_label_pc_8054b54:                             ; preds = %dec_label_pc_8054b35, %dec_label_pc_8054b50
  %v0_8054b54 = phi i32 [ 256, %dec_label_pc_8054b35 ], [ %v3_8054b50, %dec_label_pc_8054b50 ]
  ret i32 %v0_8054b54

; uselistorder directives
  uselistorder i32 7, { 4, 0, 5, 1, 2, 7, 8, 6, 9, 10, 3 }
  uselistorder label %dec_label_pc_8054b54, { 1, 0 }
}

define i32 @function_8054b5a() local_unnamed_addr {
dec_label_pc_8054b5a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b5a = load i32, i32* @ebx, align 4
  store i32 %v0_8054b5a, i32* %stack_var_-4, align 4
  %v1_8054b63 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054b63, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054b63, -4095
  br i1 %tmp7, label %dec_label_pc_8054b7a, label %dec_label_pc_8054b6e

dec_label_pc_8054b6e:                             ; preds = %dec_label_pc_8054b5a
  %v1_8054b6e = call i32 @function_8052be9(i32 %v0_8054b5a)
  %v0_8054b73 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054b73 = sub i32 0, %v0_8054b73
  %v2_8054b75 = inttoptr i32 %v1_8054b6e to i32*
  store i32 %v1_8054b73, i32* %v2_8054b75, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054b7e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054b7a

dec_label_pc_8054b7a:                             ; preds = %dec_label_pc_8054b5a, %dec_label_pc_8054b6e
  %v2_8054b7e = phi i32 [ %v0_8054b5a, %dec_label_pc_8054b5a ], [ %v2_8054b7e.pre, %dec_label_pc_8054b6e ]
  %v0_8054b7a = phi i32 [ %v1_8054b63, %dec_label_pc_8054b5a ], [ -1, %dec_label_pc_8054b6e ]
  store i32 %v2_8054b7e, i32* @ebx, align 4
  ret i32 %v0_8054b7a

; uselistorder directives
  uselistorder i32 %v1_8054b63, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054b7a, { 1, 0 }
}

define i32 @function_8054b80() local_unnamed_addr {
dec_label_pc_8054b80:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b80 = load i32, i32* @ebx, align 4
  store i32 %v0_8054b80, i32* %stack_var_-4, align 4
  %v1_8054b89 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8054b89, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054b89, -4095
  br i1 %tmp7, label %dec_label_pc_8054ba0, label %dec_label_pc_8054b94

dec_label_pc_8054b94:                             ; preds = %dec_label_pc_8054b80
  %v1_8054b94 = call i32 @function_8052be9(i32 %v0_8054b80)
  %v0_8054b99 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054b99 = sub i32 0, %v0_8054b99
  %v2_8054b9b = inttoptr i32 %v1_8054b94 to i32*
  store i32 %v1_8054b99, i32* %v2_8054b9b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054ba4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054ba0

dec_label_pc_8054ba0:                             ; preds = %dec_label_pc_8054b80, %dec_label_pc_8054b94
  %v2_8054ba4 = phi i32 [ %v0_8054b80, %dec_label_pc_8054b80 ], [ %v2_8054ba4.pre, %dec_label_pc_8054b94 ]
  %v0_8054ba0 = phi i32 [ %v1_8054b89, %dec_label_pc_8054b80 ], [ -1, %dec_label_pc_8054b94 ]
  store i32 %v2_8054ba4, i32* @ebx, align 4
  ret i32 %v0_8054ba0

; uselistorder directives
  uselistorder i32 %v1_8054b89, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054ba0, { 1, 0 }
}

define i32 @function_8054ba6() local_unnamed_addr {
dec_label_pc_8054ba6:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054ba6 = load i32, i32* @ebx, align 4
  store i32 %v0_8054ba6, i32* %stack_var_-4, align 4
  %v1_8054baf = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054baf, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054baf, -4095
  br i1 %tmp7, label %dec_label_pc_8054bc6, label %dec_label_pc_8054bba

dec_label_pc_8054bba:                             ; preds = %dec_label_pc_8054ba6
  %v1_8054bba = call i32 @function_8052be9(i32 %v0_8054ba6)
  %v0_8054bbf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054bbf = sub i32 0, %v0_8054bbf
  %v2_8054bc1 = inttoptr i32 %v1_8054bba to i32*
  store i32 %v1_8054bbf, i32* %v2_8054bc1, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054bca.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054bc6

dec_label_pc_8054bc6:                             ; preds = %dec_label_pc_8054ba6, %dec_label_pc_8054bba
  %v2_8054bca = phi i32 [ %v0_8054ba6, %dec_label_pc_8054ba6 ], [ %v2_8054bca.pre, %dec_label_pc_8054bba ]
  %v0_8054bc6 = phi i32 [ %v1_8054baf, %dec_label_pc_8054ba6 ], [ -1, %dec_label_pc_8054bba ]
  store i32 %v2_8054bca, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054bc6

; uselistorder directives
  uselistorder i32 %v1_8054baf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054bc6, { 1, 0 }
}

define i32 @function_8054bcc() local_unnamed_addr {
dec_label_pc_8054bcc:
  %v0_8054bcc = load i32, i32* @global_var_8056164.79, align 4
  %v1_8054bd6 = icmp eq i32 %v0_8054bcc, 0
  br i1 %v1_8054bd6, label %dec_label_pc_8054bdc, label %dec_label_pc_8054bda

dec_label_pc_8054bda:                             ; preds = %dec_label_pc_8054bcc
  br label %dec_label_pc_8054bdc

dec_label_pc_8054bdc:                             ; preds = %dec_label_pc_8054bcc, %dec_label_pc_8054bda
  %storemerge = phi i32 [ %v0_8054bcc, %dec_label_pc_8054bda ], [ 4096, %dec_label_pc_8054bcc ]
  %v0_8054bdc = phi i32 [ %v0_8054bcc, %dec_label_pc_8054bda ], [ 4096, %dec_label_pc_8054bcc ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8054bdc

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_8054bdc, { 1, 0 }
}

define i32 @function_8054bdf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054bdf:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054bdf = load i32, i32* @ebx, align 4
  store i32 %v0_8054bdf, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054bf2 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8054bf2, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054bf2, -4095
  br i1 %tmp9, label %dec_label_pc_8054c0b, label %dec_label_pc_8054bff

dec_label_pc_8054bff:                             ; preds = %dec_label_pc_8054bdf
  %v1_8054bff = call i32 @function_8052be9(i32 %v0_8054bdf)
  %v0_8054c04 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c04 = sub i32 0, %v0_8054c04
  %v2_8054c06 = inttoptr i32 %v1_8054bff to i32*
  store i32 %v1_8054c04, i32* %v2_8054c06, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054c0f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054c0b

dec_label_pc_8054c0b:                             ; preds = %dec_label_pc_8054bdf, %dec_label_pc_8054bff
  %v2_8054c0f = phi i32 [ %v0_8054bdf, %dec_label_pc_8054bdf ], [ %v2_8054c0f.pre, %dec_label_pc_8054bff ]
  %v0_8054c0b = phi i32 [ %v1_8054bf2, %dec_label_pc_8054bdf ], [ -1, %dec_label_pc_8054bff ]
  store i32 %v2_8054c0f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054c0b

; uselistorder directives
  uselistorder i32 %v1_8054bf2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054c0b, { 1, 0 }
}

define i32 @function_8054c11() local_unnamed_addr {
dec_label_pc_8054c11:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c11 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c11, i32* %stack_var_-4, align 4
  %v1_8054c1a = call i32 @int80_syscall(i32 199)
  store i32 %v1_8054c1a, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054c1a, -4095
  br i1 %tmp7, label %dec_label_pc_8054c31, label %dec_label_pc_8054c25

dec_label_pc_8054c25:                             ; preds = %dec_label_pc_8054c11
  %v1_8054c25 = call i32 @function_8052be9(i32 %v0_8054c11)
  %v0_8054c2a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c2a = sub i32 0, %v0_8054c2a
  %v2_8054c2c = inttoptr i32 %v1_8054c25 to i32*
  store i32 %v1_8054c2a, i32* %v2_8054c2c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054c35.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054c31

dec_label_pc_8054c31:                             ; preds = %dec_label_pc_8054c11, %dec_label_pc_8054c25
  %v2_8054c35 = phi i32 [ %v0_8054c11, %dec_label_pc_8054c11 ], [ %v2_8054c35.pre, %dec_label_pc_8054c25 ]
  %v0_8054c31 = phi i32 [ %v1_8054c1a, %dec_label_pc_8054c11 ], [ -1, %dec_label_pc_8054c25 ]
  store i32 %v2_8054c35, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054c31

; uselistorder directives
  uselistorder i32 %v1_8054c1a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054c31, { 1, 0 }
}

define i32 @function_8054c37(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054c37:
  %esi.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_8054c4d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8054c4d, i32* %esi.global-to-local, align 4
  %v1_8054c64 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054c64, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054c64, -4095
  br i1 %tmp18, label %dec_label_pc_8054c7e, label %dec_label_pc_8054c70

dec_label_pc_8054c70:                             ; preds = %dec_label_pc_8054c37
  %v2_8054c51 = ashr i32 %tmp8, 31
  %v1_8054c70 = call i32 @function_8052be9(i32 %v2_8054c51)
  %v0_8054c75 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054c75 = sub i32 0, %v0_8054c75
  %v2_8054c77 = inttoptr i32 %v1_8054c70 to i32*
  store i32 %v1_8054c75, i32* %v2_8054c77, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054c82

dec_label_pc_8054c7e:                             ; preds = %dec_label_pc_8054c37
  %v1_8054c7e = icmp eq i32 %v1_8054c64, 0
  br i1 %v1_8054c7e, label %dec_label_pc_8054c87, label %dec_label_pc_8054c82

dec_label_pc_8054c82:                             ; preds = %dec_label_pc_8054c7e, %dec_label_pc_8054c70
  %v0_8054c82 = phi i32 [ %v1_8054c64, %dec_label_pc_8054c7e ], [ -1, %dec_label_pc_8054c70 ]
  br label %dec_label_pc_8054c8f

dec_label_pc_8054c87:                             ; preds = %dec_label_pc_8054c7e
  %v3_8054c87 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8054c8f

dec_label_pc_8054c8f:                             ; preds = %dec_label_pc_8054c82, %dec_label_pc_8054c87
  %v0_8054c95 = phi i32 [ %v0_8054c82, %dec_label_pc_8054c82 ], [ %v3_8054c87, %dec_label_pc_8054c87 ]
  ret i32 %v0_8054c95

; uselistorder directives
  uselistorder i32 %v1_8054c64, { 1, 2, 0, 3 }
  uselistorder i32 31, { 8, 6, 1, 2, 3, 4, 7, 5, 9, 0, 10 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054c8f, { 1, 0 }
}

define i32 @function_8054c96(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8054c96:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054c97 = load i32, i32* @esi, align 4
  store i32 %v0_8054c97, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054caf = load i32, i32* @ebx, align 4
  %v5_8054cb7 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_8054cb7 = ptrtoint i32* %v5_8054cb7 to i32
  store i32 %v0_8054caf, i32* @ebx, align 4
  store i32 %v6_8054cb7, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_8054cb7, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8054cc3, label %dec_label_pc_8054ccf

dec_label_pc_8054cc3:                             ; preds = %dec_label_pc_8054c96
  %v1_8054cc3 = call i32 @function_8052be9(i32 %v0_8054caf)
  %v0_8054cc8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054cc8 = sub i32 0, %v0_8054cc8
  %v2_8054cca = inttoptr i32 %v1_8054cc3 to i32*
  store i32 %v1_8054cc8, i32* %v2_8054cca, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8054cd2.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054ccf

dec_label_pc_8054ccf:                             ; preds = %dec_label_pc_8054c96, %dec_label_pc_8054cc3
  %v2_8054cd2 = phi i32 [ %v0_8054c97, %dec_label_pc_8054c96 ], [ %v2_8054cd2.pre, %dec_label_pc_8054cc3 ]
  %v0_8054ccf = phi i32 [ %v6_8054cb7, %dec_label_pc_8054c96 ], [ -1, %dec_label_pc_8054cc3 ]
  %v2_8054cd1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054cd1, i32* @edx, align 4
  store i32 %v2_8054cd2, i32* @esi, align 4
  ret i32 %v0_8054ccf

; uselistorder directives
  uselistorder i32 %v0_8054caf, { 1, 0 }
  uselistorder label %dec_label_pc_8054ccf, { 1, 0 }
}

define i32 @function_8054cd5(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054cd5:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054cd5 = load i32, i32* @ebx, align 4
  store i32 %v0_8054cd5, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_8054ce8 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_8054ce8, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8054ce8, -4095
  br i1 %tmp10, label %dec_label_pc_8054d01, label %dec_label_pc_8054cf5

dec_label_pc_8054cf5:                             ; preds = %dec_label_pc_8054cd5
  %v1_8054cf5 = call i32 @function_8052be9(i32 %v0_8054cd5)
  %v0_8054cfa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054cfa = sub i32 0, %v0_8054cfa
  %v2_8054cfc = inttoptr i32 %v1_8054cf5 to i32*
  store i32 %v1_8054cfa, i32* %v2_8054cfc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054d05.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054d01

dec_label_pc_8054d01:                             ; preds = %dec_label_pc_8054cd5, %dec_label_pc_8054cf5
  %v2_8054d05 = phi i32 [ %v0_8054cd5, %dec_label_pc_8054cd5 ], [ %v2_8054d05.pre, %dec_label_pc_8054cf5 ]
  %v0_8054d01 = phi i32 [ %v3_8054ce8, %dec_label_pc_8054cd5 ], [ -1, %dec_label_pc_8054cf5 ]
  %v2_8054d03 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054d03, i32* @edx, align 4
  store i32 %v2_8054d05, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054d01

; uselistorder directives
  uselistorder i32 %v3_8054ce8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054d01, { 1, 0 }
}

define i32 @function_8054d07(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054d07:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8054d07 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d07, i32* %stack_var_-4, align 4
  %v4_8054d0b = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8054d0b, i32* %ebx.global-to-local, align 4
  %v6_8054d1a = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8054d1a, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_8054d1a, -4095
  br i1 %tmp11, label %dec_label_pc_8054d33, label %dec_label_pc_8054d27

dec_label_pc_8054d27:                             ; preds = %dec_label_pc_8054d07
  %v1_8054d27 = call i32 @function_8052be9(i32 %v0_8054d07)
  %v0_8054d2c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054d2c = sub i32 0, %v0_8054d2c
  %v2_8054d2e = inttoptr i32 %v1_8054d27 to i32*
  store i32 %v1_8054d2c, i32* %v2_8054d2e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054d37.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054d33

dec_label_pc_8054d33:                             ; preds = %dec_label_pc_8054d07, %dec_label_pc_8054d27
  %v2_8054d37 = phi i32 [ %v0_8054d07, %dec_label_pc_8054d07 ], [ %v2_8054d37.pre, %dec_label_pc_8054d27 ]
  %v0_8054d33 = phi i32 [ %v6_8054d1a, %dec_label_pc_8054d07 ], [ -1, %dec_label_pc_8054d27 ]
  store i32 %v2_8054d37, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054d33

; uselistorder directives
  uselistorder i32 %v6_8054d1a, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054d33, { 1, 0 }
}

define i32 @function_8054d39(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054d39:
  %stack_var_-12 = alloca i32, align 4
  %v0_8054d3a = load i32, i32* @ebx, align 4
  %v0_8054d3e = load i32, i32* @global_var_8056178.86, align 8
  %v1_8054d3e = icmp eq i32 %v0_8054d3e, 0
  %v1_8054d49 = icmp eq i1 %v1_8054d3e, false
  br i1 %v1_8054d49, label %dec_label_pc_8054d5c, label %dec_label_pc_8054d4b

dec_label_pc_8054d4b:                             ; preds = %dec_label_pc_8054d39
  %v1_8054d50 = call i32 @function_8054eff(i32 0)
  %v2_8054d58 = icmp slt i32 %v1_8054d50, 0
  br i1 %v2_8054d58, label %dec_label_pc_8054d7e, label %dec_label_pc_8054d4b.dec_label_pc_8054d5c_crit_edge

dec_label_pc_8054d4b.dec_label_pc_8054d5c_crit_edge: ; preds = %dec_label_pc_8054d4b
  %v0_8054d5e.pre = load i32, i32* @global_var_8056178.86, align 8
  br label %dec_label_pc_8054d5c

dec_label_pc_8054d5c:                             ; preds = %dec_label_pc_8054d4b.dec_label_pc_8054d5c_crit_edge, %dec_label_pc_8054d39
  %v0_8054d6c = phi i32 [ %v0_8054d5e.pre, %dec_label_pc_8054d4b.dec_label_pc_8054d5c_crit_edge ], [ %v0_8054d3e, %dec_label_pc_8054d39 ]
  %v1_8054d5c = icmp eq i32 %arg1, 0
  %v1_8054d63 = icmp eq i1 %v1_8054d5c, false
  br i1 %v1_8054d63, label %dec_label_pc_8054d69, label %dec_label_pc_8054d65

dec_label_pc_8054d65:                             ; preds = %dec_label_pc_8054d5c
  br label %dec_label_pc_8054d81

dec_label_pc_8054d69:                             ; preds = %dec_label_pc_8054d5c
  store i32 %v0_8054d6c, i32* @ebx, align 4
  %v2_8054d6e = add i32 %v0_8054d6c, %arg1
  %v1_8054d72 = call i32 @function_8054eff(i32 %v2_8054d6e)
  %v2_8054d7a = icmp slt i32 %v1_8054d72, 0
  %v1_8054d7c = icmp eq i1 %v2_8054d7a, false
  br i1 %v1_8054d7c, label %dec_label_pc_8054d69.dec_label_pc_8054d81_crit_edge, label %dec_label_pc_8054d7e

dec_label_pc_8054d69.dec_label_pc_8054d81_crit_edge: ; preds = %dec_label_pc_8054d69
  %v0_8054d81.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054d81

dec_label_pc_8054d7e:                             ; preds = %dec_label_pc_8054d69, %dec_label_pc_8054d4b
  br label %dec_label_pc_8054d81

dec_label_pc_8054d81:                             ; preds = %dec_label_pc_8054d69.dec_label_pc_8054d81_crit_edge, %dec_label_pc_8054d65, %dec_label_pc_8054d7e
  %v0_8054d81 = phi i32 [ %v0_8054d81.pre, %dec_label_pc_8054d69.dec_label_pc_8054d81_crit_edge ], [ %v0_8054d6c, %dec_label_pc_8054d65 ], [ -1, %dec_label_pc_8054d7e ]
  %v2_8054d83 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054d83, i32* @edx, align 4
  store i32 %v0_8054d3a, i32* @ebx, align 4
  ret i32 %v0_8054d81

; uselistorder directives
  uselistorder i32 %v0_8054d6c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_8054eff, { 1, 0 }
  uselistorder label %dec_label_pc_8054d81, { 2, 0, 1 }
}

define i32 @function_8054d87(%tms* %arg1) local_unnamed_addr {
dec_label_pc_8054d87:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054d87 = load i32, i32* @edi, align 4
  store i32 %v0_8054d87, i32* %stack_var_-4, align 4
  %v4_8054d8b = ptrtoint %tms* %arg1 to i32
  store i32 %v4_8054d8b, i32* %edi.global-to-local, align 4
  %v0_8054d8f = load i32, i32* @ebx, align 4
  %v3_8054d97 = call i32 @times(%tms* %arg1)
  store i32 %v3_8054d97, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8054d97, -4095
  br i1 %tmp10, label %dec_label_pc_8054daf, label %dec_label_pc_8054da3

dec_label_pc_8054da3:                             ; preds = %dec_label_pc_8054d87
  %v1_8054da3 = call i32 @function_8052be9(i32 %v0_8054d8f)
  %v0_8054da8 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054da8 = sub i32 0, %v0_8054da8
  %v2_8054daa = inttoptr i32 %v1_8054da3 to i32*
  store i32 %v1_8054da8, i32* %v2_8054daa, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8054db3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054daf

dec_label_pc_8054daf:                             ; preds = %dec_label_pc_8054d87, %dec_label_pc_8054da3
  %v2_8054db3 = phi i32 [ %v0_8054d87, %dec_label_pc_8054d87 ], [ %v2_8054db3.pre, %dec_label_pc_8054da3 ]
  %v0_8054daf = phi i32 [ %v3_8054d97, %dec_label_pc_8054d87 ], [ -1, %dec_label_pc_8054da3 ]
  store i32 %v2_8054db3, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054daf

; uselistorder directives
  uselistorder i32 %v3_8054d97, { 1, 0, 2 }
  uselistorder i32* @edi, { 6, 7, 8, 9, 10, 11, 127, 5, 128, 129, 130, 131, 1, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 33, 34, 35, 36, 37, 38, 39, 40, 41, 150, 164, 165, 151, 152, 153, 154, 155, 156, 157, 158, 2, 159, 160, 161, 162, 163, 166, 167, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 168, 169, 23, 24, 25, 170, 171, 26, 172, 173, 174, 175, 42, 43, 44, 57, 92, 93, 94, 95, 96, 97, 98, 99, 85, 86, 87, 58, 59, 60, 61, 62, 100, 101, 102, 73, 74, 75, 27, 28, 29, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 104, 105, 106, 91, 107, 108, 109, 88, 30, 31, 32, 103, 63, 64, 65, 66, 67, 68, 69, 84, 89, 90, 110, 111, 112, 113, 114, 115, 0, 4, 126, 116, 117, 118, 119, 120, 121, 125, 122, 123, 124, 3, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 198, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054daf, { 1, 0 }
}

define i32 @function_8054db5(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054db5:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054db6 = load i32, i32* @ebx, align 4
  store i32 %v0_8054db6, i32* %stack_var_-8, align 4
  %v4_8054dba = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054dba, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8054dc7 = inttoptr i32 %arg2 to i8*
  %v4_8054dc7 = call i32 @function_8052c3a(i8* %v3_8054dc7, i32 0, i32 88)
  store i32 %v4_8054dc7, i32* %eax.global-to-local, align 4
  %v2_8054dcc = load i16, i16* %arg1, align 2
  %v3_8054dcc = zext i16 %v2_8054dcc to i32
  store i32 %v3_8054dcc, i32* %eax.global-to-local, align 4
  %v0_8054dcf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054dcf = add i32 %v0_8054dcf, 4
  %v2_8054dcf = inttoptr i32 %v1_8054dcf to i32*
  store i32 0, i32* %v2_8054dcf, align 4
  %v0_8054dd6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054dd6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054dd6 = inttoptr i32 %v1_8054dd6 to i32*
  store i32 %v0_8054dd6, i32* %v2_8054dd6, align 4
  %v0_8054dd8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dd8 = add i32 %v0_8054dd8, 4
  %v2_8054dd8 = inttoptr i32 %v1_8054dd8 to i32*
  %v3_8054dd8 = load i32, i32* %v2_8054dd8, align 4
  store i32 %v3_8054dd8, i32* %eax.global-to-local, align 4
  %v1_8054ddb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054ddb = add i32 %v1_8054ddb, 12
  %v3_8054ddb = inttoptr i32 %v2_8054ddb to i32*
  store i32 %v3_8054dd8, i32* %v3_8054ddb, align 4
  %v0_8054dde = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dde = add i32 %v0_8054dde, 8
  %v2_8054dde = inttoptr i32 %v1_8054dde to i16*
  %v3_8054dde = load i16, i16* %v2_8054dde, align 2
  %v4_8054dde = zext i16 %v3_8054dde to i32
  store i32 %v4_8054dde, i32* %eax.global-to-local, align 4
  %v1_8054de2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054de2 = add i32 %v1_8054de2, 16
  %v3_8054de2 = inttoptr i32 %v2_8054de2 to i32*
  store i32 %v4_8054dde, i32* %v3_8054de2, align 4
  %v0_8054de5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054de5 = add i32 %v0_8054de5, 10
  %v2_8054de5 = inttoptr i32 %v1_8054de5 to i16*
  %v3_8054de5 = load i16, i16* %v2_8054de5, align 2
  %v4_8054de5 = zext i16 %v3_8054de5 to i32
  store i32 %v4_8054de5, i32* %eax.global-to-local, align 4
  %v1_8054de9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054de9 = add i32 %v1_8054de9, 20
  %v3_8054de9 = inttoptr i32 %v2_8054de9 to i32*
  store i32 %v4_8054de5, i32* %v3_8054de9, align 4
  %v0_8054dec = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dec = add i32 %v0_8054dec, 12
  %v2_8054dec = inttoptr i32 %v1_8054dec to i16*
  %v3_8054dec = load i16, i16* %v2_8054dec, align 2
  %v4_8054dec = zext i16 %v3_8054dec to i32
  store i32 %v4_8054dec, i32* %eax.global-to-local, align 4
  %v1_8054df0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054df0 = add i32 %v1_8054df0, 24
  %v3_8054df0 = inttoptr i32 %v2_8054df0 to i32*
  store i32 %v4_8054dec, i32* %v3_8054df0, align 4
  %v0_8054df3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054df3 = add i32 %v0_8054df3, 14
  %v2_8054df3 = inttoptr i32 %v1_8054df3 to i16*
  %v3_8054df3 = load i16, i16* %v2_8054df3, align 2
  %v4_8054df3 = zext i16 %v3_8054df3 to i32
  store i32 %v4_8054df3, i32* %eax.global-to-local, align 4
  %v1_8054df7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054df7 = add i32 %v1_8054df7, 28
  %v3_8054df7 = inttoptr i32 %v2_8054df7 to i32*
  store i32 %v4_8054df3, i32* %v3_8054df7, align 4
  %v0_8054dfa = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dfa = add i32 %v0_8054dfa, 16
  %v2_8054dfa = inttoptr i32 %v1_8054dfa to i16*
  %v3_8054dfa = load i16, i16* %v2_8054dfa, align 2
  %v4_8054dfa = zext i16 %v3_8054dfa to i32
  store i32 %v4_8054dfa, i32* %eax.global-to-local, align 4
  %v0_8054dfe = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054dfe = add i32 %v0_8054dfe, 36
  %v2_8054dfe = inttoptr i32 %v1_8054dfe to i32*
  store i32 0, i32* %v2_8054dfe, align 4
  %v0_8054e05 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e05 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e05 = add i32 %v1_8054e05, 32
  %v3_8054e05 = inttoptr i32 %v2_8054e05 to i32*
  store i32 %v0_8054e05, i32* %v3_8054e05, align 4
  %v0_8054e08 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e08 = add i32 %v0_8054e08, 20
  %v2_8054e08 = inttoptr i32 %v1_8054e08 to i32*
  %v3_8054e08 = load i32, i32* %v2_8054e08, align 4
  store i32 %v3_8054e08, i32* %eax.global-to-local, align 4
  %v1_8054e0b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e0b = add i32 %v1_8054e0b, 44
  %v3_8054e0b = inttoptr i32 %v2_8054e0b to i32*
  store i32 %v3_8054e08, i32* %v3_8054e0b, align 4
  %v0_8054e0e = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e0e = add i32 %v0_8054e0e, 24
  %v2_8054e0e = inttoptr i32 %v1_8054e0e to i32*
  %v3_8054e0e = load i32, i32* %v2_8054e0e, align 4
  store i32 %v3_8054e0e, i32* %eax.global-to-local, align 4
  %v1_8054e11 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e11 = add i32 %v1_8054e11, 48
  %v3_8054e11 = inttoptr i32 %v2_8054e11 to i32*
  store i32 %v3_8054e0e, i32* %v3_8054e11, align 4
  %v0_8054e14 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e14 = add i32 %v0_8054e14, 28
  %v2_8054e14 = inttoptr i32 %v1_8054e14 to i32*
  %v3_8054e14 = load i32, i32* %v2_8054e14, align 4
  store i32 %v3_8054e14, i32* %eax.global-to-local, align 4
  %v1_8054e17 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e17 = add i32 %v1_8054e17, 52
  %v3_8054e17 = inttoptr i32 %v2_8054e17 to i32*
  store i32 %v3_8054e14, i32* %v3_8054e17, align 4
  %v0_8054e1a = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e1a = add i32 %v0_8054e1a, 32
  %v2_8054e1a = inttoptr i32 %v1_8054e1a to i32*
  %v3_8054e1a = load i32, i32* %v2_8054e1a, align 4
  store i32 %v3_8054e1a, i32* %eax.global-to-local, align 4
  %v1_8054e1d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e1d = add i32 %v1_8054e1d, 56
  %v3_8054e1d = inttoptr i32 %v2_8054e1d to i32*
  store i32 %v3_8054e1a, i32* %v3_8054e1d, align 4
  %v0_8054e20 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e20 = add i32 %v0_8054e20, 40
  %v2_8054e20 = inttoptr i32 %v1_8054e20 to i32*
  %v3_8054e20 = load i32, i32* %v2_8054e20, align 4
  store i32 %v3_8054e20, i32* %eax.global-to-local, align 4
  %v1_8054e23 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e23 = add i32 %v1_8054e23, 64
  %v3_8054e23 = inttoptr i32 %v2_8054e23 to i32*
  store i32 %v3_8054e20, i32* %v3_8054e23, align 4
  %v0_8054e26 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e26 = add i32 %v0_8054e26, 48
  %v2_8054e26 = inttoptr i32 %v1_8054e26 to i32*
  %v3_8054e26 = load i32, i32* %v2_8054e26, align 4
  store i32 %v3_8054e26, i32* %eax.global-to-local, align 4
  %v1_8054e29 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054e29 = add i32 %v1_8054e29, 72
  %v3_8054e29 = inttoptr i32 %v2_8054e29 to i32*
  store i32 %v3_8054e26, i32* %v3_8054e29, align 4
  %v2_8054e2f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054e2f, i32* @ebx, align 4
  ret i32 %v3_8054e26

; uselistorder directives
  uselistorder i32 72, { 4, 3, 5, 0, 6, 7, 8, 1, 9, 10, 11, 12, 2 }
  uselistorder i32 64, { 11, 10, 6, 5, 0, 1, 7, 2, 4, 8, 3, 9 }
  uselistorder i32 40, { 5, 4, 6, 0, 7, 8, 9, 1, 2, 10, 11, 12, 13, 3 }
  uselistorder i32 56, { 6, 5, 0, 1, 2, 3, 7, 8, 4 }
  uselistorder i32 52, { 6, 5, 7, 8, 2, 3, 0, 4, 1 }
  uselistorder i32 48, { 11, 12, 10, 6, 9, 1, 2, 3, 7, 0, 8, 13, 4, 14, 15, 16, 17, 5 }
  uselistorder i32 32, { 45, 46, 56, 35, 44, 57, 58, 47, 48, 59, 1, 0, 2, 3, 40, 4, 5, 6, 7, 8, 36, 60, 41, 53, 42, 43, 34, 10, 9, 12, 11, 13, 14, 38, 37, 54, 55, 49, 50, 15, 51, 17, 16, 39, 52, 61, 18, 19, 20, 21, 62, 22, 23, 63, 64, 25, 24, 27, 26, 28, 29, 65, 30, 31, 66, 67, 68, 32, 33, 69 }
  uselistorder i32 36, { 5, 4, 0, 2, 1, 6, 7, 8, 9, 3 }
  uselistorder i32 14, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 24, { 18, 19, 16, 27, 28, 49, 17, 20, 21, 0, 1, 12, 40, 36, 7, 10, 22, 11, 23, 24, 8, 42, 37, 25, 9, 26, 41, 29, 30, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 48, 47, 46, 13, 2, 5, 14, 4, 3, 50, 15, 6 }
  uselistorder i32 20, { 18, 19, 8, 16, 26, 27, 36, 17, 20, 21, 22, 0, 1, 15, 10, 13, 14, 11, 23, 12, 24, 25, 28, 29, 30, 31, 2, 3, 32, 33, 34, 37, 35, 7, 5, 6, 4, 38, 39, 40, 9 }
  uselistorder i32 16, { 47, 48, 40, 41, 42, 43, 44, 45, 18, 39, 81, 3, 50, 51, 52, 0, 4, 82, 83, 6, 5, 84, 1, 7, 46, 49, 19, 24, 38, 9, 10, 33, 53, 54, 8, 70, 28, 31, 32, 29, 66, 30, 34, 65, 35, 11, 27, 26, 67, 68, 69, 71, 72, 73, 36, 74, 22, 75, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 23, 12, 64, 21, 76, 77, 78, 79, 85, 80, 86, 90, 14, 91, 92, 93, 94, 95, 96, 97, 87, 88, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 2, 108, 109, 110, 111, 112, 113, 114, 115, 17, 116, 15, 16, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 13, 139, 37, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 25 }
  uselistorder i32 8, { 90, 79, 80, 81, 82, 83, 84, 85, 86, 46, 110, 47, 111, 75, 48, 76, 113, 114, 115, 116, 117, 118, 119, 3, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 4, 93, 94, 95, 96, 97, 98, 99, 100, 130, 131, 132, 133, 134, 135, 52, 5, 53, 6, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 51, 153, 154, 7, 155, 156, 157, 158, 8, 159, 87, 88, 89, 91, 112, 160, 161, 162, 54, 105, 92, 10, 77, 106, 107, 108, 11, 109, 101, 102, 103, 104, 12, 13, 14, 15, 16, 9, 55, 0, 1, 163, 43, 164, 21, 22, 20, 27, 165, 19, 25, 26, 56, 50, 57, 58, 23, 59, 24, 60, 2, 17, 44, 166, 28, 61, 29, 62, 30, 31, 32, 33, 63, 34, 35, 36, 64, 37, 65, 167, 66, 38, 67, 39, 68, 168, 69, 40, 70, 41, 71, 72, 73, 42, 18, 169, 45, 170, 74, 78, 49 }
  uselistorder i32 (i8*, i32, i32)* @function_8052c3a, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8054e32(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054e32:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054e33 = load i32, i32* @esi, align 4
  store i32 %v0_8054e33, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8054e34 = sdiv i32 %sext, 16777216
  store i32 %v4_8054e34, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8054e3e = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054e3e, i32* %edi.global-to-local, align 4
  %v2_8054e42 = udiv i32 %v4_8054e34, 4
  %v3_8054e45 = inttoptr i32 %arg2 to i8*
  %v4_8054e45 = bitcast i16* %arg1 to i8*
  %v5_8054e45 = call i8* @_memcpy(i8* %v4_8054e45, i8* %v3_8054e45, i32 %v2_8054e42)
  %v0_8054e47 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054e47 = and i32 %v0_8054e47, 2
  %v3_8054e47 = icmp eq i32 %v2_8054e47, 0
  br i1 %v3_8054e47, label %dec_label_pc_8054e4d, label %dec_label_pc_8054e4b

dec_label_pc_8054e4b:                             ; preds = %dec_label_pc_8054e32
  %v0_8054e4b = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e4b = inttoptr i32 %v0_8054e4b to i16*
  %v2_8054e4b = load i16, i16* %v1_8054e4b, align 2
  %v3_8054e4b = load i32, i32* %edi.global-to-local, align 4
  %v4_8054e4b = inttoptr i32 %v3_8054e4b to i16*
  store i16 %v2_8054e4b, i16* %v4_8054e4b, align 2
  %v5_8054e4b = load i32, i32* %edi.global-to-local, align 4
  %v6_8054e4b = load i32, i32* %esi.global-to-local, align 4
  %v7_8054e4b = load i1, i1* @df, align 1
  %v8_8054e4b = select i1 %v7_8054e4b, i32 -2, i32 2
  %v9_8054e4b = add i32 %v8_8054e4b, %v5_8054e4b
  %v10_8054e4b = add i32 %v8_8054e4b, %v6_8054e4b
  store i32 %v9_8054e4b, i32* %edi.global-to-local, align 4
  store i32 %v10_8054e4b, i32* %esi.global-to-local, align 4
  %v0_8054e4d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054e4d

dec_label_pc_8054e4d:                             ; preds = %dec_label_pc_8054e32, %dec_label_pc_8054e4b
  %v0_8054e4d = phi i32 [ %v0_8054e47, %dec_label_pc_8054e32 ], [ %v0_8054e4d.pre, %dec_label_pc_8054e4b ]
  %v2_8054e4d = urem i32 %v0_8054e4d, 2
  %v3_8054e4d = icmp eq i32 %v2_8054e4d, 0
  br i1 %v3_8054e4d, label %dec_label_pc_8054e52, label %dec_label_pc_8054e51

dec_label_pc_8054e51:                             ; preds = %dec_label_pc_8054e4d
  %v0_8054e51 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e51 = inttoptr i32 %v0_8054e51 to i8*
  %v2_8054e51 = load i8, i8* %v1_8054e51, align 1
  %v3_8054e51 = load i32, i32* %edi.global-to-local, align 4
  %v4_8054e51 = inttoptr i32 %v3_8054e51 to i8*
  store i8 %v2_8054e51, i8* %v4_8054e51, align 1
  %v5_8054e51 = load i32, i32* %edi.global-to-local, align 4
  %v6_8054e51 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054e51 = load i1, i1* @df, align 1
  %v8_8054e51 = select i1 %v7_8054e51, i32 -1, i32 1
  %v9_8054e51 = add i32 %v8_8054e51, %v5_8054e51
  %v10_8054e51 = add i32 %v8_8054e51, %v6_8054e51
  store i32 %v9_8054e51, i32* %edi.global-to-local, align 4
  store i32 %v10_8054e51, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054e52

dec_label_pc_8054e52:                             ; preds = %dec_label_pc_8054e4d, %dec_label_pc_8054e51
  store i32 %v4_8054e3e, i32* %eax.global-to-local, align 4
  %v2_8054e56 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054e56, i32* @esi, align 4
  ret i32 %v4_8054e3e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 -2, { 18, 19, 17, 20, 0, 1, 4, 7, 8, 5, 3, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 4, { 2, 90, 91, 82, 83, 84, 85, 180, 181, 183, 184, 0, 185, 186, 187, 182, 50, 77, 188, 190, 191, 193, 196, 197, 198, 199, 200, 201, 3, 202, 203, 204, 205, 206, 207, 208, 209, 194, 195, 99, 52, 100, 101, 102, 103, 104, 105, 106, 4, 108, 107, 210, 5, 211, 51, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 9, 232, 233, 235, 234, 6, 192, 189, 81, 55, 86, 87, 88, 89, 92, 236, 237, 56, 109, 110, 57, 112, 113, 122, 145, 146, 147, 150, 151, 152, 153, 154, 155, 142, 143, 123, 124, 156, 157, 158, 132, 133, 134, 93, 94, 95, 129, 130, 131, 135, 136, 137, 138, 139, 140, 159, 160, 96, 97, 98, 125, 126, 127, 128, 13, 141, 144, 78, 161, 169, 170, 171, 162, 148, 149, 53, 168, 14, 163, 54, 164, 165, 166, 167, 114, 115, 116, 79, 117, 118, 15, 119, 120, 121, 16, 17, 18, 19, 111, 238, 239, 172, 173, 174, 175, 176, 177, 178, 179, 8, 240, 241, 242, 46, 24, 25, 23, 30, 22, 28, 29, 243, 244, 245, 10, 58, 59, 60, 26, 61, 27, 62, 1, 246, 20, 247, 47, 11, 248, 31, 63, 32, 64, 33, 249, 34, 35, 36, 65, 37, 38, 39, 66, 40, 67, 68, 41, 69, 42, 70, 250, 71, 43, 72, 44, 73, 251, 74, 75, 252, 45, 253, 254, 255, 256, 258, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 21, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 48, 12, 7, 295, 49, 76, 296, 80 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* @esi, { 90, 91, 33, 34, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 22, 23, 92, 93, 11, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 97, 98, 99, 113, 117, 2, 118, 119, 120, 121, 122, 123, 124, 114, 115, 116, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 134, 135, 3, 136, 9, 137, 138, 139, 140, 141, 142, 24, 4, 25, 26, 27, 28, 29, 111, 112, 143, 144, 30, 50, 51, 52, 73, 74, 69, 75, 67, 31, 66, 68, 76, 70, 32, 64, 65, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 145, 146, 147, 86, 87, 88, 8, 148, 149, 89, 150, 151, 5, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 6, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 10, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 7, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273 }
  uselistorder label %dec_label_pc_8054e52, { 1, 0 }
  uselistorder label %dec_label_pc_8054e4d, { 1, 0 }
}

define i32 @function_8054e59(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054e59:
  %v1_8054e64 = icmp eq i8* %arg1, null
  br i1 %v1_8054e64, label %dec_label_pc_8054ee5, label %dec_label_pc_8054e68

dec_label_pc_8054e68:                             ; preds = %dec_label_pc_8054e59
  %v4_8054e60 = ptrtoint i8* %arg1 to i32
  %v0_8054e76.pre = load i32, i32* bitcast (i32** @global_var_8056088.87 to i32*), align 8
  br label %dec_label_pc_8054e73

dec_label_pc_8054e73:                             ; preds = %dec_label_pc_8054e68, %dec_label_pc_8054ebc
  %v0_8054ebc = phi i32 [ 0, %dec_label_pc_8054e68 ], [ %v2_8054ec2, %dec_label_pc_8054ebc ]
  %v2_8054ebf = phi i32 [ 1, %dec_label_pc_8054e68 ], [ %v3_8054ebf, %dec_label_pc_8054ebc ]
  %v0_8054e73 = phi i32 [ %v4_8054e60, %dec_label_pc_8054e68 ], [ %v0_8054e733, %dec_label_pc_8054ebc ]
  %v1_8054e73 = inttoptr i32 %v0_8054e73 to i8*
  %v2_8054e73 = load i8, i8* %v1_8054e73, align 1
  %v3_8054e73 = sext i8 %v2_8054e73 to i32
  %v2_8054e7c = mul nsw i32 %v3_8054e73, 2
  %v3_8054e7c = add i32 %v2_8054e7c, %v0_8054e76.pre
  %v4_8054e7c = inttoptr i32 %v3_8054e7c to i8*
  %v5_8054e7c = load i8, i8* %v4_8054e7c, align 1
  %v6_8054e7c = and i8 %v5_8054e7c, 8
  %v7_8054e7c = icmp eq i8 %v6_8054e7c, 0
  br i1 %v7_8054e7c, label %dec_label_pc_8054ee5, label %dec_label_pc_8054e83

dec_label_pc_8054e83:                             ; preds = %dec_label_pc_8054e73
  %v4_8054e97.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054e97

dec_label_pc_8054e87:                             ; preds = %dec_label_pc_8054e97
  %v3_8054e87 = mul i32 %v1_8054e87, 10
  %v2_8054e8a = add i32 %v3_8054e87, -48
  %v3_8054e8a = add i32 %v2_8054e8a, %v2_8054e99
  %v1_8054e8e = add i32 %v3_8054e8a, -255
  %v6_8054e8e = sub i32 254, %v3_8054e8a
  %v7_8054e8e = and i32 %v6_8054e8e, %v3_8054e8a
  %v8_8054e8e = icmp slt i32 %v7_8054e8e, 0
  %v9_8054e8e = icmp eq i32 %v1_8054e8e, 0
  %v10_8054e8e = icmp slt i32 %v1_8054e8e, 0
  %v3_8054e94 = icmp eq i1 %v10_8054e8e, %v8_8054e8e
  %v4_8054e94 = icmp eq i1 %v9_8054e8e, false
  %v5_8054e94 = and i1 %v4_8054e94, %v3_8054e94
  br i1 %v5_8054e94, label %dec_label_pc_8054ee5, label %dec_label_pc_8054e96

dec_label_pc_8054e96:                             ; preds = %dec_label_pc_8054e87
  %v1_8054e96 = add i32 %v0_8054e96, 1
  br label %dec_label_pc_8054e97

dec_label_pc_8054e97:                             ; preds = %dec_label_pc_8054e83, %dec_label_pc_8054e96
  %v1_8054e87 = phi i32 [ 0, %dec_label_pc_8054e83 ], [ %v3_8054e8a, %dec_label_pc_8054e96 ]
  %v4_8054e97 = phi i32 [ %v4_8054e97.pre, %dec_label_pc_8054e83 ], [ %v6_8054e97, %dec_label_pc_8054e96 ]
  %v0_8054e96 = phi i32 [ %v0_8054e73, %dec_label_pc_8054e83 ], [ %v1_8054e96, %dec_label_pc_8054e96 ]
  %v1_8054e97 = inttoptr i32 %v0_8054e96 to i8*
  %v2_8054e97 = load i8, i8* %v1_8054e97, align 1
  %v3_8054e97 = zext i8 %v2_8054e97 to i32
  %v5_8054e97 = and i32 %v4_8054e97, -256
  %v6_8054e97 = or i32 %v3_8054e97, %v5_8054e97
  store i32 %v6_8054e97, i32* @edx, align 4
  %v2_8054e99 = sext i8 %v2_8054e97 to i32
  %v2_8054e9c = mul nsw i32 %v2_8054e99, 2
  %v3_8054e9c = add i32 %v2_8054e9c, %v0_8054e76.pre
  %v4_8054e9c = inttoptr i32 %v3_8054e9c to i16*
  %v5_8054e9c = load i16, i16* %v4_8054e9c, align 2
  %v2_8054ea1 = and i16 %v5_8054e9c, 8
  %v3_8054ea1 = icmp eq i16 %v2_8054ea1, 0
  %v1_8054ea3 = icmp eq i1 %v3_8054ea1, false
  br i1 %v1_8054ea3, label %dec_label_pc_8054e87, label %dec_label_pc_8054ea5

dec_label_pc_8054ea5:                             ; preds = %dec_label_pc_8054e97
  %v8_8054ea5 = sub nsw i32 2, %v2_8054ebf
  %v9_8054ea5 = and i32 %v8_8054ea5, %v2_8054ebf
  %v10_8054ea5 = icmp slt i32 %v9_8054ea5, 0
  %v11_8054ea5 = icmp eq i32 %v2_8054ebf, 3
  %v12_8054ea5 = icmp slt i32 %v2_8054ebf, 3
  %v3_8054ea9 = icmp eq i1 %v12_8054ea5, %v10_8054ea5
  %v4_8054ea9 = icmp eq i1 %v11_8054ea5, false
  %v5_8054ea9 = and i1 %v4_8054ea9, %v3_8054ea9
  br i1 %v5_8054ea9, label %dec_label_pc_8054eb3, label %dec_label_pc_8054eab

dec_label_pc_8054eab:                             ; preds = %dec_label_pc_8054ea5
  %v10_8054eab = icmp eq i8 %v2_8054e97, 46
  %v1_8054eae = icmp eq i1 %v10_8054eab, false
  br i1 %v1_8054eae, label %dec_label_pc_8054ee5, label %dec_label_pc_8054eb0

dec_label_pc_8054eb0:                             ; preds = %dec_label_pc_8054eab
  %v1_8054eb0 = add i32 %v0_8054e96, 1
  br label %dec_label_pc_8054ebc

dec_label_pc_8054eb3:                             ; preds = %dec_label_pc_8054ea5
  %v1_8054eb3 = add i32 %v0_8054e96, 1
  %v4_8054eb4 = icmp eq i8 %v2_8054e97, 0
  br i1 %v4_8054eb4, label %dec_label_pc_8054ebc, label %dec_label_pc_8054eb8

dec_label_pc_8054eb8:                             ; preds = %dec_label_pc_8054eb3
  %v2_8054eb8 = and i16 %v5_8054e9c, 32
  %v3_8054eb8 = icmp eq i16 %v2_8054eb8, 0
  br i1 %v3_8054eb8, label %dec_label_pc_8054ee5, label %dec_label_pc_8054ebc

dec_label_pc_8054ebc:                             ; preds = %dec_label_pc_8054eb8, %dec_label_pc_8054eb3, %dec_label_pc_8054eb0
  %v0_8054e733 = phi i32 [ %v1_8054eb3, %dec_label_pc_8054eb8 ], [ %v1_8054eb3, %dec_label_pc_8054eb3 ], [ %v1_8054eb0, %dec_label_pc_8054eb0 ]
  %v2_8054ebc = mul i32 %v0_8054ebc, 256
  %v3_8054ebf = add nuw nsw i32 %v2_8054ebf, 1
  %v2_8054ec2 = or i32 %v1_8054e87, %v2_8054ebc
  %v7_8054ec8 = icmp sgt i32 %v2_8054ebf, 3
  br i1 %v7_8054ec8, label %dec_label_pc_8054eca, label %dec_label_pc_8054e73

dec_label_pc_8054eca:                             ; preds = %dec_label_pc_8054ebc
  %v4_8054ecf = icmp eq i32 %arg2, 0
  br i1 %v4_8054ecf, label %dec_label_pc_8054ee7, label %dec_label_pc_8054ed6

dec_label_pc_8054ed6:                             ; preds = %dec_label_pc_8054eca
  %v1_8054eda = call i32 @llvm.bswap.i32(i32 %v2_8054ec2)
  %v2_8054edc = inttoptr i32 %arg2 to i32*
  store i32 %v1_8054eda, i32* %v2_8054edc, align 4
  br label %dec_label_pc_8054ee7

dec_label_pc_8054ee5:                             ; preds = %dec_label_pc_8054eb8, %dec_label_pc_8054eab, %dec_label_pc_8054e73, %dec_label_pc_8054e87, %dec_label_pc_8054e59
  br label %dec_label_pc_8054ee7

dec_label_pc_8054ee7:                             ; preds = %dec_label_pc_8054eca, %dec_label_pc_8054ed6, %dec_label_pc_8054ee5
  %v0_8054eec = phi i32 [ 1, %dec_label_pc_8054eca ], [ 1, %dec_label_pc_8054ed6 ], [ 0, %dec_label_pc_8054ee5 ]
  ret i32 %v0_8054eec

; uselistorder directives
  uselistorder i32 %v2_8054e99, { 1, 0 }
  uselistorder i32 %v6_8054e97, { 1, 0 }
  uselistorder i8 %v2_8054e97, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054e96, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8054e8e, { 1, 0 }
  uselistorder i32 %v3_8054e8a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8054ebf, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 19, 23, 20, 2, 3, 0, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22 }
  uselistorder i32 3, { 1, 2, 0, 15, 10, 25, 6, 7, 9, 3, 4, 18, 19, 20, 21, 22, 23, 24, 11, 8, 16, 17, 5, 26, 13, 14, 27, 12 }
  uselistorder i16 0, { 0, 1, 7, 8, 5, 6, 4, 2, 3 }
  uselistorder i32 -256, { 4, 5, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 10, 11, 35, 22, 25, 27, 36, 29, 30, 31, 7, 8, 9, 23, 24, 26, 28, 32, 33, 34, 40, 37, 38, 39, 12, 13, 14, 15, 16, 17, 18, 19, 2, 3, 20, 21, 51, 52, 53, 54, 0, 55, 56, 57, 1, 58, 59, 60, 61, 62 }
  uselistorder i32 10, { 1, 8, 7, 5, 12, 3, 0, 11, 9, 6, 4, 10, 2, 13, 14, 15 }
  uselistorder i32* @edx, { 21, 2, 56, 57, 26, 0, 18, 19, 22, 17, 58, 59, 61, 62, 64, 63, 60, 72, 73, 3, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 4, 87, 88, 70, 71, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 5, 43, 44, 45, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 6, 126, 127, 128, 129, 130, 131, 132, 69, 20, 66, 23, 24, 68, 65, 67, 7, 133, 8, 134, 14, 25, 49, 50, 51, 12, 13, 10, 9, 52, 15, 53, 11, 55, 54, 46, 47, 48, 16, 1, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i8 0, { 18, 19, 38, 39, 40, 41, 42, 43, 20, 44, 45, 46, 47, 48, 49, 7, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 2, 65, 66, 67, 68, 21, 32, 33, 29, 34, 30, 31, 35, 0, 36, 37, 23, 25, 22, 5, 24, 6, 26, 27, 28, 8, 9, 69, 70, 3, 72, 73, 71, 74, 75, 76, 77, 4, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 16, 98, 1, 99, 10, 17, 11, 12, 13, 14, 15 }
  uselistorder i32 2, { 38, 39, 40, 1, 67, 15, 68, 16, 35, 0, 22, 32, 23, 33, 24, 34, 2, 3, 4, 43, 5, 6, 7, 17, 18, 69, 8, 9, 20, 10, 25, 19, 21, 28, 26, 27, 13, 12, 44, 50, 63, 64, 52, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 42, 61, 62, 11, 36, 30, 29, 45, 46, 47, 48, 49, 31, 14, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 37 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8054ee7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054ee5, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8054e97, { 1, 0 }
  uselistorder label %dec_label_pc_8054e73, { 1, 0 }
}

define i32 @function_8054eed() local_unnamed_addr {
dec_label_pc_8054eed:
  %v0_8054eed = load i32, i32* @eax, align 4
  %v1_8054eed = add i32 %v0_8054eed, 28
  %v2_8054eed = inttoptr i32 %v1_8054eed to i32*
  %v3_8054eed = load i32, i32* %v2_8054eed, align 4
  store i32 %v3_8054eed, i32* @global_var_8056758.88, align 8
  %v1_8054ef6 = add i32 %v0_8054eed, 44
  %v2_8054ef6 = inttoptr i32 %v1_8054ef6 to i32*
  %v3_8054ef6 = load i32, i32* %v2_8054ef6, align 4
  store i32 %v3_8054ef6, i32* @global_var_805675c.89, align 4
  ret i32 %v3_8054ef6

; uselistorder directives
  uselistorder i32 44, { 6, 5, 4, 10, 12, 11, 7, 8, 9, 0, 2, 13, 14, 15, 16, 1, 3 }
  uselistorder i32 28, { 26, 14, 15, 13, 17, 18, 27, 4, 5, 11, 6, 9, 10, 7, 16, 8, 19, 20, 21, 22, 23, 25, 24, 0, 28, 3, 12, 2, 1, 29, 30, 31 }
}

define i32 @function_8054eff(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054eff:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054eff = load i32, i32* @ebx, align 4
  store i32 %v0_8054eff, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8054f12 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8054f12, i32* @global_var_8056178.86, align 8
  %v7_8054f1d = icmp ult i32 %v1_8054f12, %arg1
  %v1_8054f1f = icmp eq i1 %v7_8054f1d, false
  br i1 %v1_8054f1f, label %dec_label_pc_8054f2f, label %dec_label_pc_8054f21

dec_label_pc_8054f21:                             ; preds = %dec_label_pc_8054eff
  %v1_8054f21 = call i32 @function_8052be9(i32 %v0_8054eff)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8054f29 = inttoptr i32 %v1_8054f21 to i32*
  store i32 12, i32* %v1_8054f29, align 4
  %v0_8054f2f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054f33.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054f2f

dec_label_pc_8054f2f:                             ; preds = %dec_label_pc_8054eff, %dec_label_pc_8054f21
  %v2_8054f33 = phi i32 [ %v0_8054eff, %dec_label_pc_8054eff ], [ %v2_8054f33.pre, %dec_label_pc_8054f21 ]
  %v0_8054f2f = phi i32 [ 0, %dec_label_pc_8054eff ], [ %v0_8054f2f.pre, %dec_label_pc_8054f21 ]
  store i32 %v2_8054f33, i32* @ebx, align 4
  ret i32 %v0_8054f2f

; uselistorder directives
  uselistorder i32 %v1_8054f12, { 1, 0 }
  uselistorder i32 12, { 105, 69, 70, 64, 65, 66, 63, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 76, 77, 78, 79, 80, 81, 121, 139, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 61, 138, 62, 67, 68, 71, 72, 73, 82, 83, 92, 93, 94, 95, 84, 96, 87, 74, 86, 88, 89, 90, 97, 75, 85, 27, 91, 98, 104, 59, 99, 101, 102, 28, 100, 29, 30, 31, 32, 103, 0, 1, 25, 9, 8, 7, 15, 57, 20, 36, 37, 35, 16, 42, 34, 40, 41, 17, 140, 6, 38, 39, 3, 5, 33, 141, 58, 142, 146, 143, 144, 145, 43, 44, 45, 46, 18, 19, 47, 48, 49, 147, 50, 51, 52, 53, 54, 55, 56, 4, 21, 22, 10, 11, 12, 13, 14, 148, 23, 2, 24, 149, 150, 26, 60 }
  uselistorder i32* @global_var_8056178.86, { 1, 0, 2 }
  uselistorder i32 45, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8054f2f, { 1, 0 }
}

define i32 @function_8054f35() local_unnamed_addr {
dec_label_pc_8054f35:
  %v0_8054f38 = load i32, i32* @eax, align 4
  %v1_8054f3a = sub i32 0, %v0_8054f38
  %v1_8054f3c = call i32 @function_8052be9(i32 ptrtoint (i32* @0 to i32))
  %v2_8054f41 = inttoptr i32 %v1_8054f3c to i32*
  store i32 %v1_8054f3a, i32* %v2_8054f41, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_8052be9, { 30, 29, 50, 28, 27, 32, 49, 26, 53, 25, 24, 23, 48, 47, 46, 54, 22, 21, 20, 18, 17, 16, 1, 3, 11, 4, 52, 51, 45, 44, 43, 42, 41, 10, 13, 12, 40, 9, 39, 38, 37, 19, 15, 36, 35, 14, 0, 8, 34, 7, 6, 33, 31, 5, 2 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 18, 13, 16, 17, 14, 10, 11, 12, 15, 32, 33, 34, 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 50, 112, 49, 81, 82, 95, 96, 97, 83, 84, 80, 91, 90, 86, 87, 88, 89, 85, 52, 98, 99, 100, 101, 102, 92, 93, 94, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118 }
}

define i32 @function_8054f50() local_unnamed_addr {
dec_label_pc_8054f50:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8054f5c = load i32, i32* @global_var_8056000.73, align 8192
  %v10_8054f61 = icmp eq i32 %v0_8054f5c, -1
  br i1 %v10_8054f61, label %dec_label_pc_8054f72, label %dec_label_pc_8054f66.preheader

dec_label_pc_8054f66.preheader:                   ; preds = %dec_label_pc_8054f50
  br label %dec_label_pc_8054f66

dec_label_pc_8054f66:                             ; preds = %dec_label_pc_8054f66.preheader, %dec_label_pc_8054f66
  %v4_8054f69 = phi i32 [ %v0_8054f5c, %dec_label_pc_8054f66.preheader ], [ %v2_8054f6b, %dec_label_pc_8054f66 ]
  %v0_8054f66 = phi i32 [ ptrtoint (i32* @global_var_8056000.73 to i32), %dec_label_pc_8054f66.preheader ], [ %v1_8054f66, %dec_label_pc_8054f66 ]
  %v1_8054f66 = add i32 %v0_8054f66, -4
  call void @__pseudo_call(i32 %v4_8054f69)
  %v1_8054f6b = inttoptr i32 %v1_8054f66 to i32*
  %v2_8054f6b = load i32, i32* %v1_8054f6b, align 4
  %v10_8054f6d = icmp eq i32 %v2_8054f6b, -1
  %v1_8054f70 = icmp eq i1 %v10_8054f6d, false
  br i1 %v1_8054f70, label %dec_label_pc_8054f66, label %dec_label_pc_8054f72.loopexit

dec_label_pc_8054f72.loopexit:                    ; preds = %dec_label_pc_8054f66
  %v2_8054f72.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054f72

dec_label_pc_8054f72:                             ; preds = %dec_label_pc_8054f72.loopexit, %dec_label_pc_8054f50
  %v2_8054f72 = phi i32 [ %v2_8054f72.pre, %dec_label_pc_8054f72.loopexit ], [ %tmp6, %dec_label_pc_8054f50 ]
  ret i32 %v2_8054f72

; uselistorder directives
  uselistorder i32 %v0_8054f5c, { 1, 0 }
  uselistorder i1 false, { 99, 100, 26, 27, 29, 28, 101, 102, 103, 30, 31, 104, 107, 108, 109, 110, 111, 113, 10, 114, 115, 112, 106, 105, 23, 116, 117, 118, 1, 120, 121, 0, 122, 123, 124, 125, 3, 126, 127, 128, 129, 2, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 130, 37, 38, 39, 40, 41, 42, 43, 44, 45, 143, 144, 145, 146, 147, 148, 149, 150, 151, 9, 153, 152, 157, 154, 155, 156, 11, 158, 159, 119, 24, 4, 25, 160, 161, 13, 32, 33, 34, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 14, 172, 173, 174, 175, 5, 176, 177, 178, 46, 65, 70, 71, 56, 73, 66, 67, 68, 72, 35, 36, 57, 58, 59, 60, 61, 62, 63, 64, 69, 74, 75, 98, 96, 16, 97, 17, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 90, 93, 47, 48, 49, 50, 51, 52, 53, 18, 54, 55, 91, 92, 94, 179, 180, 181, 182, 183, 6, 185, 186, 187, 184, 188, 189, 190, 191, 192, 193, 7, 194, 195, 196, 197, 15, 198, 199, 200, 201, 202, 203, 204, 20, 19, 205, 21, 206, 207, 208, 209, 8, 22, 12, 210 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 99, 100, 101, 102, 11, 103, 3, 98, 19, 94, 12, 95, 96, 97, 13, 0, 9, 10, 104, 105, 106, 107, 108, 109, 110, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 7, 54, 8, 55, 56, 57, 2, 6, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 4, 5, 86, 87, 88, 89, 90, 91, 92, 1, 93 }
  uselistorder i32 ptrtoint (i32* @global_var_8056000.73 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 20, 21, 0, 103, 181, 61, 104, 62, 63, 105, 64, 106, 65, 107, 66, 108, 67, 109, 68, 110, 69, 111, 70, 112, 71, 113, 18, 19, 9, 8, 72, 73, 114, 74, 115, 75, 116, 22, 1, 117, 60, 76, 77, 118, 119, 120, 11, 121, 10, 122, 182, 13, 14, 123, 12, 124, 23, 183, 24, 125, 184, 27, 26, 28, 29, 16, 30, 78, 31, 126, 25, 185, 7, 127, 128, 100, 129, 15, 32, 2, 79, 186, 187, 80, 172, 33, 81, 130, 82, 131, 83, 132, 58, 59, 133, 84, 134, 85, 135, 86, 136, 87, 137, 88, 138, 89, 139, 90, 140, 91, 141, 92, 142, 93, 143, 94, 144, 95, 145, 96, 146, 97, 147, 98, 148, 34, 149, 150, 3, 4, 5, 151, 35, 99, 188, 101, 36, 152, 153, 177, 178, 154, 173, 179, 37, 155, 156, 157, 158, 174, 41, 159, 160, 161, 162, 163, 164, 40, 165, 175, 38, 39, 166, 176, 167, 168, 42, 169, 180, 6, 17, 43, 44, 45, 46, 47, 170, 171, 189, 190, 191, 48, 192, 193, 54, 49, 194, 50, 51, 52, 53, 195, 55, 196, 56, 57, 197, 198, 102 }
  uselistorder i32 1, { 242, 243, 65, 143, 144, 361, 362, 363, 364, 145, 424, 244, 17, 16, 18, 245, 59, 58, 57, 246, 15, 247, 248, 13, 250, 249, 14, 252, 251, 66, 253, 53, 254, 102, 255, 51, 256, 104, 257, 103, 258, 107, 259, 260, 69, 68, 67, 165, 70, 262, 261, 264, 263, 22, 265, 12, 267, 266, 73, 268, 272, 271, 270, 269, 72, 425, 426, 427, 275, 274, 273, 8, 7, 146, 276, 279, 278, 277, 105, 147, 233, 359, 132, 285, 284, 283, 282, 281, 280, 74, 75, 166, 286, 234, 289, 288, 287, 100, 167, 429, 430, 431, 290, 71, 432, 433, 148, 434, 435, 436, 11, 9, 10, 235, 428, 168, 77, 78, 79, 80, 169, 149, 367, 368, 369, 370, 293, 292, 291, 110, 109, 111, 170, 294, 24, 25, 172, 437, 438, 439, 440, 441, 442, 443, 444, 445, 171, 446, 447, 448, 449, 450, 150, 451, 452, 112, 151, 453, 454, 455, 456, 152, 153, 457, 458, 459, 297, 296, 295, 61, 60, 62, 64, 63, 154, 155, 298, 156, 157, 173, 302, 301, 300, 299, 56, 174, 236, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 175, 176, 318, 319, 158, 321, 320, 52, 177, 322, 323, 20, 324, 21, 325, 94, 326, 19, 327, 108, 328, 81, 329, 23, 330, 38, 331, 48, 46, 333, 332, 28, 334, 55, 335, 87, 337, 336, 82, 338, 76, 339, 54, 340, 47, 341, 50, 49, 460, 461, 462, 463, 232, 342, 92, 88, 91, 89, 90, 93, 464, 465, 113, 114, 466, 467, 0, 468, 469, 470, 471, 472, 178, 473, 179, 474, 344, 343, 101, 475, 159, 216, 476, 477, 160, 478, 479, 180, 480, 118, 26, 27, 481, 482, 483, 345, 4, 5, 3, 6, 484, 485, 239, 33, 35, 34, 37, 36, 486, 240, 29, 31, 30, 32, 371, 372, 373, 374, 397, 398, 399, 407, 408, 409, 181, 410, 400, 187, 411, 193, 403, 195, 365, 189, 402, 185, 404, 183, 405, 412, 196, 191, 366, 192, 197, 198, 401, 190, 194, 186, 184, 182, 406, 413, 199, 188, 423, 421, 422, 414, 415, 416, 417, 419, 200, 420, 86, 85, 83, 84, 418, 237, 346, 106, 375, 376, 377, 378, 221, 220, 125, 115, 379, 380, 161, 123, 124, 116, 381, 382, 162, 122, 222, 383, 384, 238, 385, 386, 387, 217, 218, 388, 389, 219, 224, 223, 390, 391, 392, 201, 393, 394, 395, 164, 396, 349, 348, 347, 96, 97, 98, 95, 99, 350, 1, 225, 2, 133, 134, 487, 488, 489, 490, 491, 119, 120, 492, 493, 494, 495, 496, 205, 126, 127, 204, 128, 208, 129, 497, 498, 206, 130, 131, 207, 499, 121, 117, 500, 501, 502, 503, 504, 226, 135, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 212, 142, 141, 515, 227, 136, 516, 517, 518, 519, 520, 209, 521, 522, 210, 523, 228, 137, 524, 229, 138, 525, 526, 230, 139, 527, 528, 231, 140, 529, 530, 531, 532, 533, 211, 534, 536, 537, 535, 213, 538, 539, 540, 541, 202, 203, 542, 543, 544, 545, 214, 360, 215, 546, 163, 357, 356, 355, 354, 353, 352, 351, 241, 44, 42, 41, 39, 40, 43, 45, 358 }
  uselistorder label %dec_label_pc_8054f66, { 1, 0 }
}

define i32 @function_8054f76() local_unnamed_addr {
entry:
  %v0_8054f79 = load i32, i32* @ebx, align 4
  %v1_8054f7a = call i32 @function_80480b0(i32 %v0_8054f79)
  store i32 %v1_8054f7a, i32* @eax, align 4
  %v0_8054f85 = call i32 @function_80480c0()
  ret i32 %v0_8054f85

; uselistorder directives
  uselistorder i32* @eax, { 6, 32, 33, 35, 36, 37, 38, 40, 8, 41, 0, 39, 3, 5, 34, 42, 44, 45, 43, 17, 18, 46, 52, 47, 48, 50, 51, 49, 15, 16, 7, 1, 12, 20, 22, 21, 23, 27, 28, 29, 24, 25, 26, 19, 53, 9, 10, 11, 54, 55, 56, 57, 58, 13, 14, 59, 30, 31, 2, 4 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, {}
  uselistorder i32* @ebx, { 18, 181, 182, 49, 50, 23, 183, 1, 184, 185, 186, 187, 83, 84, 188, 20, 189, 190, 191, 192, 193, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 2, 52, 53, 54, 19, 194, 195, 196, 197, 198, 199, 200, 201, 202, 16, 17, 211, 212, 213, 214, 14, 3, 13, 205, 208, 209, 210, 203, 215, 216, 217, 218, 219, 220, 221, 222, 204, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 4, 248, 249, 234, 235, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 5, 97, 98, 99, 100, 101, 102, 103, 250, 276, 277, 278, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 15, 261, 262, 263, 264, 265, 6, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 229, 230, 21, 22, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 279, 280, 227, 228, 73, 281, 282, 74, 75, 76, 206, 207, 223, 224, 77, 78, 225, 226, 104, 105, 283, 284, 79, 285, 286, 287, 80, 288, 289, 106, 111, 112, 147, 8, 148, 149, 150, 151, 136, 137, 152, 134, 81, 133, 135, 138, 139, 140, 82, 153, 132, 141, 142, 143, 144, 145, 146, 154, 155, 156, 157, 158, 159, 169, 170, 171, 7, 172, 160, 161, 162, 163, 164, 165, 166, 167, 168, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 9, 130, 131, 107, 108, 109, 110, 290, 291, 292, 173, 174, 175, 176, 293, 294, 295, 296, 10, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 297, 298, 299, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 329, 330, 331, 332, 333, 12, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 11, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 177, 178, 179, 180 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
